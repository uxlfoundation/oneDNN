Search.setIndex({"docnames": ["advanced_topics", "build_and_link", "class_dnnl_graph_allocator", "class_dnnl_graph_compiled_partition", "class_dnnl_graph_graph", "class_dnnl_graph_logical_tensor", "class_dnnl_graph_op", "class_dnnl_graph_partition", "class_dnnl_graph_tensor", "class_simple_memory_pool_t", "dev_guide_attributes", "dev_guide_attributes_accumulation_mode", "dev_guide_attributes_deterministic", "dev_guide_attributes_dropout", "dev_guide_attributes_fpmath_mode", "dev_guide_attributes_post_ops", "dev_guide_attributes_quantization", "dev_guide_attributes_rounding_mode", "dev_guide_attributes_scratchpad", "dev_guide_basic_concepts", "dev_guide_batch_normalization", "dev_guide_benchdnn", "dev_guide_binary", "dev_guide_build", "dev_guide_build_options", "dev_guide_c_and_cpp_apis", "dev_guide_concat", "dev_guide_constant_tensor_cache", "dev_guide_conventions", "dev_guide_convolution", "dev_guide_cpu_dispatcher_control", "dev_guide_cpu_isa_hints", "dev_guide_data_types", "dev_guide_dpcpp_interoperability", "dev_guide_eltwise", "dev_guide_examples", "dev_guide_experimental", "dev_guide_graph_basic_concepts", "dev_guide_graph_binary_fusion_patterns", "dev_guide_graph_convolution_fusion_patterns", "dev_guide_graph_convtranspose_fusion_patterns", "dev_guide_graph_dump", "dev_guide_graph_gated_mlp", "dev_guide_graph_gqa", "dev_guide_graph_interpolate_fusion_patterns", "dev_guide_graph_low_precision", "dev_guide_graph_matmul_fusion_patterns", "dev_guide_graph_norm_fusion_patterns", "dev_guide_graph_pool_fusion_patterns", "dev_guide_graph_quantized_convolution_fusion_patterns", "dev_guide_graph_quantized_convtranspose_fusion_patterns", "dev_guide_graph_quantized_matmul_fusion_patterns", "dev_guide_graph_reduction_fusion_patterns", "dev_guide_graph_sdpa", "dev_guide_graph_sdpa_compressed_kv", "dev_guide_graph_softmax_fusion_patterns", "dev_guide_graph_unary_fusion_patterns", "dev_guide_group_normalization", "dev_guide_inference", "dev_guide_inference_and_training_aspects", "dev_guide_inference_int8", "dev_guide_inner_product", "dev_guide_inspecting_jit", "dev_guide_int8_computations", "dev_guide_layer_normalization", "dev_guide_link", "dev_guide_lrn", "dev_guide_matmul", "dev_guide_op_abs", "dev_guide_op_absbackward", "dev_guide_op_add", "dev_guide_op_avgpool", "dev_guide_op_avgpoolbackward", "dev_guide_op_batchnormforwardtraining", "dev_guide_op_batchnorminference", "dev_guide_op_batchnormtrainingbackward", "dev_guide_op_biasadd", "dev_guide_op_biasaddbackward", "dev_guide_op_clamp", "dev_guide_op_clampbackward", "dev_guide_op_concat", "dev_guide_op_convolution", "dev_guide_op_convolutionbackwarddata", "dev_guide_op_convolutionbackwardweights", "dev_guide_op_convtranspose", "dev_guide_op_convtransposebackwarddata", "dev_guide_op_convtransposebackwardweights", "dev_guide_op_dequantize", "dev_guide_op_divide", "dev_guide_op_dynamicdequantize", "dev_guide_op_dynamicquantize", "dev_guide_op_elu", "dev_guide_op_elubackward", "dev_guide_op_end", "dev_guide_op_exp", "dev_guide_op_gelu", "dev_guide_op_gelubackward", "dev_guide_op_genindex", "dev_guide_op_greaterequal", "dev_guide_op_groupnorm", "dev_guide_op_hardsigmoid", "dev_guide_op_hardsigmoidbackward", "dev_guide_op_hardswish", "dev_guide_op_hardswishbackward", "dev_guide_op_interpolate", "dev_guide_op_interpolatebackward", "dev_guide_op_layernorm", "dev_guide_op_layernormbackward", "dev_guide_op_leakyrelu", "dev_guide_op_log", "dev_guide_op_logsoftmax", "dev_guide_op_logsoftmaxbackward", "dev_guide_op_matmul", "dev_guide_op_maximum", "dev_guide_op_maxpool", "dev_guide_op_maxpoolbackward", "dev_guide_op_minimum", "dev_guide_op_mish", "dev_guide_op_mishbackward", "dev_guide_op_multiply", "dev_guide_op_pow", "dev_guide_op_prelu", "dev_guide_op_prelubackward", "dev_guide_op_quantize", "dev_guide_op_reciprocal", "dev_guide_op_reducel1", "dev_guide_op_reducel2", "dev_guide_op_reducemax", "dev_guide_op_reducemean", "dev_guide_op_reducemin", "dev_guide_op_reduceprod", "dev_guide_op_reducesum", "dev_guide_op_relu", "dev_guide_op_relubackward", "dev_guide_op_reorder", "dev_guide_op_round", "dev_guide_op_select", "dev_guide_op_sigmoid", "dev_guide_op_sigmoidbackward", "dev_guide_op_softmax", "dev_guide_op_softmaxbackward", "dev_guide_op_softplus", "dev_guide_op_softplusbackward", "dev_guide_op_sqrt", "dev_guide_op_sqrtbackward", "dev_guide_op_square", "dev_guide_op_squareddifference", "dev_guide_op_staticreshape", "dev_guide_op_statictranspose", "dev_guide_op_subtract", "dev_guide_op_tanh", "dev_guide_op_tanhbackward", "dev_guide_op_typecast", "dev_guide_op_wildcard", "dev_guide_opencl_interoperability", "dev_guide_performance_settings", "dev_guide_persistent_cache", "dev_guide_pooling", "dev_guide_prelu", "dev_guide_primitive_cache", "dev_guide_profilers", "dev_guide_reduction", "dev_guide_reorder", "dev_guide_resampling", "dev_guide_rnn", "dev_guide_shuffle", "dev_guide_softmax", "dev_guide_sparsity", "dev_guide_sum", "dev_guide_system_requirements", "dev_guide_threadpool", "dev_guide_training", "dev_guide_training_bf16", "dev_guide_transition_to_dnnl", "dev_guide_ukernel_basic_concepts", "dev_guide_ukernel_brgemm", "dev_guide_ukernel_transform", "dev_guide_understanding_memory_formats", "dev_guide_verbose", "dev_guide_verbose_table", "dev_guide_vtune", "enum_api_kind", "enum_dnnl_accumulation_mode", "enum_dnnl_accumulation_mode_t", "enum_dnnl_alg_kind_t", "enum_dnnl_algorithm", "enum_dnnl_cpu_isa", "enum_dnnl_cpu_isa_hints", "enum_dnnl_cpu_isa_hints_t", "enum_dnnl_cpu_isa_t", "enum_dnnl_data_type_t", "enum_dnnl_engine_kind", "enum_dnnl_engine_kind_t", "enum_dnnl_format_kind_t", "enum_dnnl_format_tag_t", "enum_dnnl_fpmath_mode", "enum_dnnl_fpmath_mode_t", "enum_dnnl_graph_layout_type_t", "enum_dnnl_graph_logical_tensor_data_type", "enum_dnnl_graph_logical_tensor_layout_type", "enum_dnnl_graph_logical_tensor_property_type", "enum_dnnl_graph_op_attr", "enum_dnnl_graph_op_attr_t", "enum_dnnl_graph_op_kind", "enum_dnnl_graph_op_kind_t", "enum_dnnl_graph_partition_policy", "enum_dnnl_graph_partition_policy_t", "enum_dnnl_graph_status", "enum_dnnl_graph_tensor_property_t", "enum_dnnl_memory_data_type", "enum_dnnl_memory_format_kind", "enum_dnnl_memory_format_tag", "enum_dnnl_memory_sparse_encoding", "enum_dnnl_normalization_flags", "enum_dnnl_normalization_flags_t", "enum_dnnl_ocl_interop_memory_kind", "enum_dnnl_ocl_interop_memory_kind_t", "enum_dnnl_pack_type_t", "enum_dnnl_primitive_kind", "enum_dnnl_primitive_kind_t", "enum_dnnl_profiling_data_kind", "enum_dnnl_profiling_data_kind_t", "enum_dnnl_prop_kind", "enum_dnnl_prop_kind_t", "enum_dnnl_query", "enum_dnnl_query_t", "enum_dnnl_rnn_direction", "enum_dnnl_rnn_direction_t", "enum_dnnl_rnn_flags", "enum_dnnl_rnn_flags_t", "enum_dnnl_rounding_mode", "enum_dnnl_rounding_mode_t", "enum_dnnl_scratchpad_mode", "enum_dnnl_scratchpad_mode_t", "enum_dnnl_sparse_encoding_t", "enum_dnnl_status", "enum_dnnl_status_t", "enum_dnnl_stream_flags", "enum_dnnl_stream_flags_t", "enum_dnnl_sycl_interop_memory_kind", "enum_dnnl_sycl_interop_memory_kind_t", "enum_dnnl_ukernel_pack_type", "example_augru.cpp", "example_batch_normalization.cpp", "example_binary.cpp", "example_bnorm_u8_via_binary_postops.cpp", "example_cnn_inference_f32.c", "example_cnn_inference_f32.cpp", "example_cnn_inference_int8.cpp", "example_cnn_training_bf16.cpp", "example_cnn_training_f32.cpp", "example_concat.cpp", "example_convolution.cpp", "example_cpu_brgemm.cpp", "example_cpu_cnn_training_f32.c", "example_cpu_getting_started.cpp", "example_cpu_inference_int8.cpp", "example_cpu_matmul_coo.cpp", "example_cpu_matmul_csr.cpp", "example_cpu_matmul_quantization.cpp", "example_cpu_matmul_weights_compression.cpp", "example_cpu_rnn_inference_f32.cpp", "example_cpu_rnn_inference_int8.cpp", "example_cpu_sgemm_and_matmul.cpp", "example_cpu_single_op_partition.cpp", "example_cross_engine_reorder.c", "example_cross_engine_reorder.cpp", "example_deconvolution.cpp", "example_eltwise.cpp", "example_getting_started.cpp", "example_gpu_opencl_getting_started.cpp", "example_gpu_opencl_interop.cpp", "example_group_normalization.cpp", "example_inference_int8_matmul.cpp", "example_inner_product.cpp", "example_layer_normalization.cpp", "example_lbr_gru.cpp", "example_lrn.cpp", "example_lstm.cpp", "example_matmul.cpp", "example_matmul_perf.cpp", "example_memory_format_propagation.cpp", "example_performance_profiling.cpp", "example_pooling.cpp", "example_prelu.cpp", "example_reduction.cpp", "example_reorder.cpp", "example_resampling.cpp", "example_rnn_training_f32.cpp", "example_shuffle.cpp", "example_softmax.cpp", "example_sum.cpp", "example_sycl_getting_started.cpp", "example_sycl_interop_buffer.cpp", "example_sycl_interop_usm.cpp", "example_sycl_single_op_partition.cpp", "example_vanilla_rnn.cpp", "example_weights_decompression_matmul.cpp", "global", "graph_extension", "graph_fusion_patterns", "graph_programming_model", "graph_supported_operations", "group_dnnl_api", "group_dnnl_api_accumulation_mode", "group_dnnl_api_attributes", "group_dnnl_api_batch_normalization", "group_dnnl_api_binary", "group_dnnl_api_blas", "group_dnnl_api_common", "group_dnnl_api_concat", "group_dnnl_api_convolution", "group_dnnl_api_data_types", "group_dnnl_api_deconvolution", "group_dnnl_api_eltwise", "group_dnnl_api_engine", "group_dnnl_api_fpmath_mode", "group_dnnl_api_group_normalization", "group_dnnl_api_inner_product", "group_dnnl_api_interop", "group_dnnl_api_layer_normalization", "group_dnnl_api_lrn", "group_dnnl_api_matmul", "group_dnnl_api_memory", "group_dnnl_api_ocl_interop", "group_dnnl_api_pooling", "group_dnnl_api_prelu", "group_dnnl_api_primitive_cache", "group_dnnl_api_primitives", "group_dnnl_api_primitives_common", "group_dnnl_api_profiling", "group_dnnl_api_reduction", "group_dnnl_api_reorder", "group_dnnl_api_resampling", "group_dnnl_api_rnn", "group_dnnl_api_service", "group_dnnl_api_shuffle", "group_dnnl_api_softmax", "group_dnnl_api_stream", "group_dnnl_api_sum", "group_dnnl_api_sycl_interop", "group_dnnl_api_threadpool_interop", "group_dnnl_api_ukernel", "group_dnnl_api_ukernel_brgemm", "group_dnnl_api_ukernel_transform", "group_dnnl_api_ukernel_utils", "group_dnnl_api_utils", "group_dnnl_graph_api", "group_dnnl_graph_api_allocator", "group_dnnl_graph_api_compiled_partition", "group_dnnl_graph_api_compiled_partition_cache", "group_dnnl_graph_api_constant_tensor_cache", "group_dnnl_graph_api_engine", "group_dnnl_graph_api_graph", "group_dnnl_graph_api_interop", "group_dnnl_graph_api_logical_tensor", "group_dnnl_graph_api_ocl_interop", "group_dnnl_graph_api_op", "group_dnnl_graph_api_partition", "group_dnnl_graph_api_status", "group_dnnl_graph_api_sycl_interop", "group_dnnl_graph_api_tensor", "group_dnnl_graph_api_utils", "index", "interop_with_dpcpp_and_opencl", "namespace_dnnl", "namespace_dnnl_graph", "namespace_dnnl_graph_ocl_interop", "namespace_dnnl_graph_sycl_interop", "namespace_dnnl_ocl_interop", "namespace_dnnl_sycl_interop", "namespace_dnnl_threadpool_interop", "namespace_dnnl_ukernel", "namespace_oneapi", "namespace_std", "namespace_sycl", "orphans", "page_augru_example_cpp", "page_augru_example_cpp_short", "page_batch_normalization_example_cpp", "page_batch_normalization_example_cpp_short", "page_binary_example_cpp", "page_binary_example_cpp_short", "page_bnorm_u8_via_binary_postops_cpp", "page_bnorm_u8_via_binary_postops_cpp_short", "page_cnn_inference_f32_c", "page_cnn_inference_f32_cpp", "page_cnn_inference_int8_cpp", "page_cnn_training_bf16_cpp", "page_cnn_training_f32_cpp", "page_concat_example_cpp", "page_concat_example_cpp_short", "page_convolution_example_cpp", "page_convolution_example_cpp_short", "page_cpu_brgemm_example_cpp", "page_cpu_cnn_training_f32_c", "page_cpu_matmul_coo_cpp", "page_cpu_matmul_csr_cpp", "page_cpu_matmul_quantization_cpp", "page_cpu_matmul_quantization_cpp_short", "page_cpu_matmul_weights_compression_cpp", "page_cpu_rnn_inference_f32_cpp", "page_cpu_rnn_inference_int8_cpp", "page_cpu_sgemm_and_matmul_cpp", "page_cpu_sgemm_and_matmul_cpp_short", "page_cross_engine_reorder_c", "page_cross_engine_reorder_cpp", "page_deconvolution_example_cpp", "page_deconvolution_example_cpp_short", "page_eltwise_example_cpp", "page_eltwise_example_cpp_short", "page_getting_started_cpp", "page_gpu_opencl_interop_cpp", "page_graph_cpu_getting_started_cpp", "page_graph_cpu_inference_int8_cpp", "page_graph_cpu_single_op_partition_cpp", "page_graph_gpu_opencl_getting_started_cpp", "page_graph_sycl_getting_started_cpp", "page_graph_sycl_single_op_partition_cpp", "page_group_normalization_example_cpp", "page_group_normalization_example_cpp_short", "page_inference_int8_matmul_cpp", "page_inference_int8_matmul_cpp_short", "page_inner_product_example_cpp", "page_inner_product_example_cpp_short", "page_layer_normalization_example_cpp", "page_layer_normalization_example_cpp_short", "page_lbr_gru_example_cpp", "page_lbr_gru_example_cpp_short", "page_legal_information", "page_lrn_example_cpp", "page_lrn_example_cpp_short", "page_lstm_example_cpp", "page_lstm_example_cpp_short", "page_matmul_example_cpp", "page_matmul_example_cpp_short", "page_matmul_perf_cpp", "page_memory_format_propagation_cpp", "page_performance_profiling_cpp", "page_pooling_example_cpp", "page_pooling_example_cpp_short", "page_prelu_example_cpp", "page_prelu_example_cpp_short", "page_reduction_example_cpp", "page_reduction_example_cpp_short", "page_reorder_example_cpp", "page_reorder_example_cpp_short", "page_resampling_example_cpp", "page_resampling_example_cpp_short", "page_rnn_training_f32_cpp", "page_shuffle_example_cpp", "page_shuffle_example_cpp_short", "page_softmax_example_cpp", "page_softmax_example_cpp_short", "page_sum_example_cpp", "page_sum_example_cpp_short", "page_sycl_interop_buffer_cpp", "page_sycl_interop_usm_cpp", "page_todo", "page_vanilla_rnn_example_cpp", "page_vanilla_rnn_example_cpp_short", "page_weights_decompression_matmul_cpp", "page_weights_decompression_matmul_cpp_short", "performance_profiling_and_inspection", "programming_model", "struct_args_t", "struct_cpu_deletor_t", "struct_dnnl_augru_backward", "struct_dnnl_augru_backward_primitive_desc", "struct_dnnl_augru_forward", "struct_dnnl_augru_forward_primitive_desc", "struct_dnnl_batch_normalization_backward", "struct_dnnl_batch_normalization_backward_primitive_desc", "struct_dnnl_batch_normalization_forward", "struct_dnnl_batch_normalization_forward_primitive_desc", "struct_dnnl_binary", "struct_dnnl_binary_primitive_desc", "struct_dnnl_brgemm", "struct_dnnl_concat", "struct_dnnl_concat_primitive_desc", "struct_dnnl_convolution_backward_data", "struct_dnnl_convolution_backward_data_primitive_desc", "struct_dnnl_convolution_backward_weights", "struct_dnnl_convolution_backward_weights_primitive_desc", "struct_dnnl_convolution_forward", "struct_dnnl_convolution_forward_primitive_desc", "struct_dnnl_deconvolution_backward_data", "struct_dnnl_deconvolution_backward_data_primitive_desc", "struct_dnnl_deconvolution_backward_weights", "struct_dnnl_deconvolution_backward_weights_primitive_desc", "struct_dnnl_deconvolution_forward", "struct_dnnl_deconvolution_forward_primitive_desc", "struct_dnnl_eltwise_backward", "struct_dnnl_eltwise_backward_primitive_desc", "struct_dnnl_eltwise_forward", "struct_dnnl_eltwise_forward_primitive_desc", "struct_dnnl_engine", "struct_dnnl_engine-2", "struct_dnnl_error", "struct_dnnl_exec_arg_t", "struct_dnnl_graph_inplace_pair_t", "struct_dnnl_graph_logical_tensor_t", "struct_dnnl_group_normalization_backward", "struct_dnnl_group_normalization_backward_primitive_desc", "struct_dnnl_group_normalization_forward", "struct_dnnl_group_normalization_forward_primitive_desc", "struct_dnnl_gru_backward", "struct_dnnl_gru_backward_primitive_desc", "struct_dnnl_gru_forward", "struct_dnnl_gru_forward_primitive_desc", "struct_dnnl_handle", "struct_dnnl_handle_traits", "struct_dnnl_inner_product_backward_data", "struct_dnnl_inner_product_backward_data_primitive_desc", "struct_dnnl_inner_product_backward_weights", "struct_dnnl_inner_product_backward_weights_primitive_desc", "struct_dnnl_inner_product_forward", "struct_dnnl_inner_product_forward_primitive_desc", "struct_dnnl_layer_normalization_backward", "struct_dnnl_layer_normalization_backward_primitive_desc", "struct_dnnl_layer_normalization_forward", "struct_dnnl_layer_normalization_forward_primitive_desc", "struct_dnnl_lbr_augru_backward", "struct_dnnl_lbr_augru_backward_primitive_desc", "struct_dnnl_lbr_augru_forward", "struct_dnnl_lbr_augru_forward_primitive_desc", "struct_dnnl_lbr_gru_backward", "struct_dnnl_lbr_gru_backward_primitive_desc", "struct_dnnl_lbr_gru_forward", "struct_dnnl_lbr_gru_forward_primitive_desc", "struct_dnnl_lrn_backward", "struct_dnnl_lrn_backward_primitive_desc", "struct_dnnl_lrn_forward", "struct_dnnl_lrn_forward_primitive_desc", "struct_dnnl_lstm_backward", "struct_dnnl_lstm_backward_primitive_desc", "struct_dnnl_lstm_forward", "struct_dnnl_lstm_forward_primitive_desc", "struct_dnnl_matmul", "struct_dnnl_matmul_primitive_desc", "struct_dnnl_memory", "struct_dnnl_memory-2", "struct_dnnl_memory_desc", "struct_dnnl_memory_desc-2", "struct_dnnl_pooling_backward", "struct_dnnl_pooling_backward_primitive_desc", "struct_dnnl_pooling_forward", "struct_dnnl_pooling_forward_primitive_desc", "struct_dnnl_post_ops", "struct_dnnl_post_ops-2", "struct_dnnl_prelu_backward", "struct_dnnl_prelu_backward_primitive_desc", "struct_dnnl_prelu_forward", "struct_dnnl_prelu_forward_primitive_desc", "struct_dnnl_primitive", "struct_dnnl_primitive-2", "struct_dnnl_primitive_attr", "struct_dnnl_primitive_attr-2", "struct_dnnl_primitive_desc", "struct_dnnl_primitive_desc-2", "struct_dnnl_primitive_desc_base", "struct_dnnl_reduction", "struct_dnnl_reduction_primitive_desc", "struct_dnnl_reorder", "struct_dnnl_reorder_primitive_desc", "struct_dnnl_resampling_backward", "struct_dnnl_resampling_backward_primitive_desc", "struct_dnnl_resampling_forward", "struct_dnnl_resampling_forward_primitive_desc", "struct_dnnl_rnn_primitive_desc_base", "struct_dnnl_shuffle_backward", "struct_dnnl_shuffle_backward_primitive_desc", "struct_dnnl_shuffle_forward", "struct_dnnl_shuffle_forward_primitive_desc", "struct_dnnl_softmax_backward", "struct_dnnl_softmax_backward_primitive_desc", "struct_dnnl_softmax_forward", "struct_dnnl_softmax_forward_primitive_desc", "struct_dnnl_stream", "struct_dnnl_stream-2", "struct_dnnl_sum", "struct_dnnl_sum_primitive_desc", "struct_dnnl_threadpool_interop_threadpool_iface", "struct_dnnl_transform", "struct_dnnl_ukernel_attr_params", "struct_dnnl_ukernel_attr_params-2", "struct_dnnl_ukernel_brgemm", "struct_dnnl_ukernel_transform", "struct_dnnl_vanilla_rnn_backward", "struct_dnnl_vanilla_rnn_backward_primitive_desc", "struct_dnnl_vanilla_rnn_forward", "struct_dnnl_vanilla_rnn_forward_primitive_desc", "struct_dnnl_version_t", "struct_example_allows_unimplemented", "struct_gemm_dims_t", "struct_gqa_dims_t", "struct_mlp_dims_t", "struct_mqa_dims_t", "struct_sdpa_dims_t", "struct_sycl_deletor_t", "supported_primitives", "ukernels"], "filenames": ["advanced_topics.rst", "build_and_link.rst", "class_dnnl_graph_allocator.rst", "class_dnnl_graph_compiled_partition.rst", "class_dnnl_graph_graph.rst", "class_dnnl_graph_logical_tensor.rst", "class_dnnl_graph_op.rst", "class_dnnl_graph_partition.rst", "class_dnnl_graph_tensor.rst", "class_simple_memory_pool_t.rst", "dev_guide_attributes.rst", "dev_guide_attributes_accumulation_mode.rst", "dev_guide_attributes_deterministic.rst", "dev_guide_attributes_dropout.rst", "dev_guide_attributes_fpmath_mode.rst", "dev_guide_attributes_post_ops.rst", "dev_guide_attributes_quantization.rst", "dev_guide_attributes_rounding_mode.rst", "dev_guide_attributes_scratchpad.rst", "dev_guide_basic_concepts.rst", "dev_guide_batch_normalization.rst", "dev_guide_benchdnn.rst", "dev_guide_binary.rst", "dev_guide_build.rst", "dev_guide_build_options.rst", "dev_guide_c_and_cpp_apis.rst", "dev_guide_concat.rst", "dev_guide_constant_tensor_cache.rst", "dev_guide_conventions.rst", "dev_guide_convolution.rst", "dev_guide_cpu_dispatcher_control.rst", "dev_guide_cpu_isa_hints.rst", "dev_guide_data_types.rst", "dev_guide_dpcpp_interoperability.rst", "dev_guide_eltwise.rst", "dev_guide_examples.rst", "dev_guide_experimental.rst", "dev_guide_graph_basic_concepts.rst", "dev_guide_graph_binary_fusion_patterns.rst", "dev_guide_graph_convolution_fusion_patterns.rst", "dev_guide_graph_convtranspose_fusion_patterns.rst", "dev_guide_graph_dump.rst", "dev_guide_graph_gated_mlp.rst", "dev_guide_graph_gqa.rst", "dev_guide_graph_interpolate_fusion_patterns.rst", "dev_guide_graph_low_precision.rst", "dev_guide_graph_matmul_fusion_patterns.rst", "dev_guide_graph_norm_fusion_patterns.rst", "dev_guide_graph_pool_fusion_patterns.rst", "dev_guide_graph_quantized_convolution_fusion_patterns.rst", "dev_guide_graph_quantized_convtranspose_fusion_patterns.rst", "dev_guide_graph_quantized_matmul_fusion_patterns.rst", "dev_guide_graph_reduction_fusion_patterns.rst", "dev_guide_graph_sdpa.rst", "dev_guide_graph_sdpa_compressed_kv.rst", "dev_guide_graph_softmax_fusion_patterns.rst", "dev_guide_graph_unary_fusion_patterns.rst", "dev_guide_group_normalization.rst", "dev_guide_inference.rst", "dev_guide_inference_and_training_aspects.rst", "dev_guide_inference_int8.rst", "dev_guide_inner_product.rst", "dev_guide_inspecting_jit.rst", "dev_guide_int8_computations.rst", "dev_guide_layer_normalization.rst", "dev_guide_link.rst", "dev_guide_lrn.rst", "dev_guide_matmul.rst", "dev_guide_op_abs.rst", "dev_guide_op_absbackward.rst", "dev_guide_op_add.rst", "dev_guide_op_avgpool.rst", "dev_guide_op_avgpoolbackward.rst", "dev_guide_op_batchnormforwardtraining.rst", "dev_guide_op_batchnorminference.rst", "dev_guide_op_batchnormtrainingbackward.rst", "dev_guide_op_biasadd.rst", "dev_guide_op_biasaddbackward.rst", "dev_guide_op_clamp.rst", "dev_guide_op_clampbackward.rst", "dev_guide_op_concat.rst", "dev_guide_op_convolution.rst", "dev_guide_op_convolutionbackwarddata.rst", "dev_guide_op_convolutionbackwardweights.rst", "dev_guide_op_convtranspose.rst", "dev_guide_op_convtransposebackwarddata.rst", "dev_guide_op_convtransposebackwardweights.rst", "dev_guide_op_dequantize.rst", "dev_guide_op_divide.rst", "dev_guide_op_dynamicdequantize.rst", "dev_guide_op_dynamicquantize.rst", "dev_guide_op_elu.rst", "dev_guide_op_elubackward.rst", "dev_guide_op_end.rst", "dev_guide_op_exp.rst", "dev_guide_op_gelu.rst", "dev_guide_op_gelubackward.rst", "dev_guide_op_genindex.rst", "dev_guide_op_greaterequal.rst", "dev_guide_op_groupnorm.rst", "dev_guide_op_hardsigmoid.rst", "dev_guide_op_hardsigmoidbackward.rst", "dev_guide_op_hardswish.rst", "dev_guide_op_hardswishbackward.rst", "dev_guide_op_interpolate.rst", "dev_guide_op_interpolatebackward.rst", "dev_guide_op_layernorm.rst", "dev_guide_op_layernormbackward.rst", "dev_guide_op_leakyrelu.rst", "dev_guide_op_log.rst", "dev_guide_op_logsoftmax.rst", "dev_guide_op_logsoftmaxbackward.rst", "dev_guide_op_matmul.rst", "dev_guide_op_maximum.rst", "dev_guide_op_maxpool.rst", "dev_guide_op_maxpoolbackward.rst", "dev_guide_op_minimum.rst", "dev_guide_op_mish.rst", "dev_guide_op_mishbackward.rst", "dev_guide_op_multiply.rst", "dev_guide_op_pow.rst", "dev_guide_op_prelu.rst", "dev_guide_op_prelubackward.rst", "dev_guide_op_quantize.rst", "dev_guide_op_reciprocal.rst", "dev_guide_op_reducel1.rst", "dev_guide_op_reducel2.rst", "dev_guide_op_reducemax.rst", "dev_guide_op_reducemean.rst", "dev_guide_op_reducemin.rst", "dev_guide_op_reduceprod.rst", "dev_guide_op_reducesum.rst", "dev_guide_op_relu.rst", "dev_guide_op_relubackward.rst", "dev_guide_op_reorder.rst", "dev_guide_op_round.rst", "dev_guide_op_select.rst", "dev_guide_op_sigmoid.rst", "dev_guide_op_sigmoidbackward.rst", "dev_guide_op_softmax.rst", "dev_guide_op_softmaxbackward.rst", "dev_guide_op_softplus.rst", "dev_guide_op_softplusbackward.rst", "dev_guide_op_sqrt.rst", "dev_guide_op_sqrtbackward.rst", "dev_guide_op_square.rst", "dev_guide_op_squareddifference.rst", "dev_guide_op_staticreshape.rst", "dev_guide_op_statictranspose.rst", "dev_guide_op_subtract.rst", "dev_guide_op_tanh.rst", "dev_guide_op_tanhbackward.rst", "dev_guide_op_typecast.rst", "dev_guide_op_wildcard.rst", "dev_guide_opencl_interoperability.rst", "dev_guide_performance_settings.rst", "dev_guide_persistent_cache.rst", "dev_guide_pooling.rst", "dev_guide_prelu.rst", "dev_guide_primitive_cache.rst", "dev_guide_profilers.rst", "dev_guide_reduction.rst", "dev_guide_reorder.rst", "dev_guide_resampling.rst", "dev_guide_rnn.rst", "dev_guide_shuffle.rst", "dev_guide_softmax.rst", "dev_guide_sparsity.rst", "dev_guide_sum.rst", "dev_guide_system_requirements.rst", "dev_guide_threadpool.rst", "dev_guide_training.rst", "dev_guide_training_bf16.rst", "dev_guide_transition_to_dnnl.rst", "dev_guide_ukernel_basic_concepts.rst", "dev_guide_ukernel_brgemm.rst", "dev_guide_ukernel_transform.rst", "dev_guide_understanding_memory_formats.rst", "dev_guide_verbose.rst", "dev_guide_verbose_table.rst", "dev_guide_vtune.rst", "enum_api_kind.rst", "enum_dnnl_accumulation_mode.rst", "enum_dnnl_accumulation_mode_t.rst", "enum_dnnl_alg_kind_t.rst", "enum_dnnl_algorithm.rst", "enum_dnnl_cpu_isa.rst", "enum_dnnl_cpu_isa_hints.rst", "enum_dnnl_cpu_isa_hints_t.rst", "enum_dnnl_cpu_isa_t.rst", "enum_dnnl_data_type_t.rst", "enum_dnnl_engine_kind.rst", "enum_dnnl_engine_kind_t.rst", "enum_dnnl_format_kind_t.rst", "enum_dnnl_format_tag_t.rst", "enum_dnnl_fpmath_mode.rst", "enum_dnnl_fpmath_mode_t.rst", "enum_dnnl_graph_layout_type_t.rst", "enum_dnnl_graph_logical_tensor_data_type.rst", "enum_dnnl_graph_logical_tensor_layout_type.rst", "enum_dnnl_graph_logical_tensor_property_type.rst", "enum_dnnl_graph_op_attr.rst", "enum_dnnl_graph_op_attr_t.rst", "enum_dnnl_graph_op_kind.rst", "enum_dnnl_graph_op_kind_t.rst", "enum_dnnl_graph_partition_policy.rst", "enum_dnnl_graph_partition_policy_t.rst", "enum_dnnl_graph_status.rst", "enum_dnnl_graph_tensor_property_t.rst", "enum_dnnl_memory_data_type.rst", "enum_dnnl_memory_format_kind.rst", "enum_dnnl_memory_format_tag.rst", "enum_dnnl_memory_sparse_encoding.rst", "enum_dnnl_normalization_flags.rst", "enum_dnnl_normalization_flags_t.rst", "enum_dnnl_ocl_interop_memory_kind.rst", "enum_dnnl_ocl_interop_memory_kind_t.rst", "enum_dnnl_pack_type_t.rst", "enum_dnnl_primitive_kind.rst", "enum_dnnl_primitive_kind_t.rst", "enum_dnnl_profiling_data_kind.rst", "enum_dnnl_profiling_data_kind_t.rst", "enum_dnnl_prop_kind.rst", "enum_dnnl_prop_kind_t.rst", "enum_dnnl_query.rst", "enum_dnnl_query_t.rst", "enum_dnnl_rnn_direction.rst", "enum_dnnl_rnn_direction_t.rst", "enum_dnnl_rnn_flags.rst", "enum_dnnl_rnn_flags_t.rst", "enum_dnnl_rounding_mode.rst", "enum_dnnl_rounding_mode_t.rst", "enum_dnnl_scratchpad_mode.rst", "enum_dnnl_scratchpad_mode_t.rst", "enum_dnnl_sparse_encoding_t.rst", "enum_dnnl_status.rst", "enum_dnnl_status_t.rst", "enum_dnnl_stream_flags.rst", "enum_dnnl_stream_flags_t.rst", "enum_dnnl_sycl_interop_memory_kind.rst", "enum_dnnl_sycl_interop_memory_kind_t.rst", "enum_dnnl_ukernel_pack_type.rst", "example_augru.cpp.rst", "example_batch_normalization.cpp.rst", "example_binary.cpp.rst", "example_bnorm_u8_via_binary_postops.cpp.rst", "example_cnn_inference_f32.c.rst", "example_cnn_inference_f32.cpp.rst", "example_cnn_inference_int8.cpp.rst", "example_cnn_training_bf16.cpp.rst", "example_cnn_training_f32.cpp.rst", "example_concat.cpp.rst", "example_convolution.cpp.rst", "example_cpu_brgemm.cpp.rst", "example_cpu_cnn_training_f32.c.rst", "example_cpu_getting_started.cpp.rst", "example_cpu_inference_int8.cpp.rst", "example_cpu_matmul_coo.cpp.rst", "example_cpu_matmul_csr.cpp.rst", "example_cpu_matmul_quantization.cpp.rst", "example_cpu_matmul_weights_compression.cpp.rst", "example_cpu_rnn_inference_f32.cpp.rst", "example_cpu_rnn_inference_int8.cpp.rst", "example_cpu_sgemm_and_matmul.cpp.rst", "example_cpu_single_op_partition.cpp.rst", "example_cross_engine_reorder.c.rst", "example_cross_engine_reorder.cpp.rst", "example_deconvolution.cpp.rst", "example_eltwise.cpp.rst", "example_getting_started.cpp.rst", "example_gpu_opencl_getting_started.cpp.rst", "example_gpu_opencl_interop.cpp.rst", "example_group_normalization.cpp.rst", "example_inference_int8_matmul.cpp.rst", "example_inner_product.cpp.rst", "example_layer_normalization.cpp.rst", "example_lbr_gru.cpp.rst", "example_lrn.cpp.rst", "example_lstm.cpp.rst", "example_matmul.cpp.rst", "example_matmul_perf.cpp.rst", "example_memory_format_propagation.cpp.rst", "example_performance_profiling.cpp.rst", "example_pooling.cpp.rst", "example_prelu.cpp.rst", "example_reduction.cpp.rst", "example_reorder.cpp.rst", "example_resampling.cpp.rst", "example_rnn_training_f32.cpp.rst", "example_shuffle.cpp.rst", "example_softmax.cpp.rst", "example_sum.cpp.rst", "example_sycl_getting_started.cpp.rst", "example_sycl_interop_buffer.cpp.rst", "example_sycl_interop_usm.cpp.rst", "example_sycl_single_op_partition.cpp.rst", "example_vanilla_rnn.cpp.rst", "example_weights_decompression_matmul.cpp.rst", "global.rst", "graph_extension.rst", "graph_fusion_patterns.rst", "graph_programming_model.rst", "graph_supported_operations.rst", "group_dnnl_api.rst", "group_dnnl_api_accumulation_mode.rst", "group_dnnl_api_attributes.rst", "group_dnnl_api_batch_normalization.rst", "group_dnnl_api_binary.rst", "group_dnnl_api_blas.rst", "group_dnnl_api_common.rst", "group_dnnl_api_concat.rst", "group_dnnl_api_convolution.rst", "group_dnnl_api_data_types.rst", "group_dnnl_api_deconvolution.rst", "group_dnnl_api_eltwise.rst", "group_dnnl_api_engine.rst", "group_dnnl_api_fpmath_mode.rst", "group_dnnl_api_group_normalization.rst", "group_dnnl_api_inner_product.rst", "group_dnnl_api_interop.rst", "group_dnnl_api_layer_normalization.rst", "group_dnnl_api_lrn.rst", "group_dnnl_api_matmul.rst", "group_dnnl_api_memory.rst", "group_dnnl_api_ocl_interop.rst", "group_dnnl_api_pooling.rst", "group_dnnl_api_prelu.rst", "group_dnnl_api_primitive_cache.rst", "group_dnnl_api_primitives.rst", "group_dnnl_api_primitives_common.rst", "group_dnnl_api_profiling.rst", "group_dnnl_api_reduction.rst", "group_dnnl_api_reorder.rst", "group_dnnl_api_resampling.rst", "group_dnnl_api_rnn.rst", "group_dnnl_api_service.rst", "group_dnnl_api_shuffle.rst", "group_dnnl_api_softmax.rst", "group_dnnl_api_stream.rst", "group_dnnl_api_sum.rst", "group_dnnl_api_sycl_interop.rst", "group_dnnl_api_threadpool_interop.rst", "group_dnnl_api_ukernel.rst", "group_dnnl_api_ukernel_brgemm.rst", "group_dnnl_api_ukernel_transform.rst", "group_dnnl_api_ukernel_utils.rst", "group_dnnl_api_utils.rst", "group_dnnl_graph_api.rst", "group_dnnl_graph_api_allocator.rst", "group_dnnl_graph_api_compiled_partition.rst", "group_dnnl_graph_api_compiled_partition_cache.rst", "group_dnnl_graph_api_constant_tensor_cache.rst", "group_dnnl_graph_api_engine.rst", "group_dnnl_graph_api_graph.rst", "group_dnnl_graph_api_interop.rst", "group_dnnl_graph_api_logical_tensor.rst", "group_dnnl_graph_api_ocl_interop.rst", "group_dnnl_graph_api_op.rst", "group_dnnl_graph_api_partition.rst", "group_dnnl_graph_api_status.rst", "group_dnnl_graph_api_sycl_interop.rst", "group_dnnl_graph_api_tensor.rst", "group_dnnl_graph_api_utils.rst", "index.rst", "interop_with_dpcpp_and_opencl.rst", "namespace_dnnl.rst", "namespace_dnnl_graph.rst", "namespace_dnnl_graph_ocl_interop.rst", "namespace_dnnl_graph_sycl_interop.rst", "namespace_dnnl_ocl_interop.rst", "namespace_dnnl_sycl_interop.rst", "namespace_dnnl_threadpool_interop.rst", "namespace_dnnl_ukernel.rst", "namespace_oneapi.rst", "namespace_std.rst", "namespace_sycl.rst", "orphans.rst", "page_augru_example_cpp.rst", "page_augru_example_cpp_short.rst", "page_batch_normalization_example_cpp.rst", "page_batch_normalization_example_cpp_short.rst", "page_binary_example_cpp.rst", "page_binary_example_cpp_short.rst", "page_bnorm_u8_via_binary_postops_cpp.rst", "page_bnorm_u8_via_binary_postops_cpp_short.rst", "page_cnn_inference_f32_c.rst", "page_cnn_inference_f32_cpp.rst", "page_cnn_inference_int8_cpp.rst", "page_cnn_training_bf16_cpp.rst", "page_cnn_training_f32_cpp.rst", "page_concat_example_cpp.rst", "page_concat_example_cpp_short.rst", "page_convolution_example_cpp.rst", "page_convolution_example_cpp_short.rst", "page_cpu_brgemm_example_cpp.rst", "page_cpu_cnn_training_f32_c.rst", "page_cpu_matmul_coo_cpp.rst", "page_cpu_matmul_csr_cpp.rst", "page_cpu_matmul_quantization_cpp.rst", "page_cpu_matmul_quantization_cpp_short.rst", "page_cpu_matmul_weights_compression_cpp.rst", "page_cpu_rnn_inference_f32_cpp.rst", "page_cpu_rnn_inference_int8_cpp.rst", "page_cpu_sgemm_and_matmul_cpp.rst", "page_cpu_sgemm_and_matmul_cpp_short.rst", "page_cross_engine_reorder_c.rst", "page_cross_engine_reorder_cpp.rst", "page_deconvolution_example_cpp.rst", "page_deconvolution_example_cpp_short.rst", "page_eltwise_example_cpp.rst", "page_eltwise_example_cpp_short.rst", "page_getting_started_cpp.rst", "page_gpu_opencl_interop_cpp.rst", "page_graph_cpu_getting_started_cpp.rst", "page_graph_cpu_inference_int8_cpp.rst", "page_graph_cpu_single_op_partition_cpp.rst", "page_graph_gpu_opencl_getting_started_cpp.rst", "page_graph_sycl_getting_started_cpp.rst", "page_graph_sycl_single_op_partition_cpp.rst", "page_group_normalization_example_cpp.rst", "page_group_normalization_example_cpp_short.rst", "page_inference_int8_matmul_cpp.rst", "page_inference_int8_matmul_cpp_short.rst", "page_inner_product_example_cpp.rst", "page_inner_product_example_cpp_short.rst", "page_layer_normalization_example_cpp.rst", "page_layer_normalization_example_cpp_short.rst", "page_lbr_gru_example_cpp.rst", "page_lbr_gru_example_cpp_short.rst", "page_legal_information.rst", "page_lrn_example_cpp.rst", "page_lrn_example_cpp_short.rst", "page_lstm_example_cpp.rst", "page_lstm_example_cpp_short.rst", "page_matmul_example_cpp.rst", "page_matmul_example_cpp_short.rst", "page_matmul_perf_cpp.rst", "page_memory_format_propagation_cpp.rst", "page_performance_profiling_cpp.rst", "page_pooling_example_cpp.rst", "page_pooling_example_cpp_short.rst", "page_prelu_example_cpp.rst", "page_prelu_example_cpp_short.rst", "page_reduction_example_cpp.rst", "page_reduction_example_cpp_short.rst", "page_reorder_example_cpp.rst", "page_reorder_example_cpp_short.rst", "page_resampling_example_cpp.rst", "page_resampling_example_cpp_short.rst", "page_rnn_training_f32_cpp.rst", "page_shuffle_example_cpp.rst", "page_shuffle_example_cpp_short.rst", "page_softmax_example_cpp.rst", "page_softmax_example_cpp_short.rst", "page_sum_example_cpp.rst", "page_sum_example_cpp_short.rst", "page_sycl_interop_buffer_cpp.rst", "page_sycl_interop_usm_cpp.rst", "page_todo.rst", "page_vanilla_rnn_example_cpp.rst", "page_vanilla_rnn_example_cpp_short.rst", "page_weights_decompression_matmul_cpp.rst", "page_weights_decompression_matmul_cpp_short.rst", "performance_profiling_and_inspection.rst", "programming_model.rst", "struct_args_t.rst", "struct_cpu_deletor_t.rst", "struct_dnnl_augru_backward.rst", "struct_dnnl_augru_backward_primitive_desc.rst", "struct_dnnl_augru_forward.rst", "struct_dnnl_augru_forward_primitive_desc.rst", "struct_dnnl_batch_normalization_backward.rst", "struct_dnnl_batch_normalization_backward_primitive_desc.rst", "struct_dnnl_batch_normalization_forward.rst", "struct_dnnl_batch_normalization_forward_primitive_desc.rst", "struct_dnnl_binary.rst", "struct_dnnl_binary_primitive_desc.rst", "struct_dnnl_brgemm.rst", "struct_dnnl_concat.rst", "struct_dnnl_concat_primitive_desc.rst", "struct_dnnl_convolution_backward_data.rst", "struct_dnnl_convolution_backward_data_primitive_desc.rst", "struct_dnnl_convolution_backward_weights.rst", "struct_dnnl_convolution_backward_weights_primitive_desc.rst", "struct_dnnl_convolution_forward.rst", "struct_dnnl_convolution_forward_primitive_desc.rst", "struct_dnnl_deconvolution_backward_data.rst", "struct_dnnl_deconvolution_backward_data_primitive_desc.rst", "struct_dnnl_deconvolution_backward_weights.rst", "struct_dnnl_deconvolution_backward_weights_primitive_desc.rst", "struct_dnnl_deconvolution_forward.rst", "struct_dnnl_deconvolution_forward_primitive_desc.rst", "struct_dnnl_eltwise_backward.rst", "struct_dnnl_eltwise_backward_primitive_desc.rst", "struct_dnnl_eltwise_forward.rst", "struct_dnnl_eltwise_forward_primitive_desc.rst", "struct_dnnl_engine.rst", "struct_dnnl_engine-2.rst", "struct_dnnl_error.rst", "struct_dnnl_exec_arg_t.rst", "struct_dnnl_graph_inplace_pair_t.rst", "struct_dnnl_graph_logical_tensor_t.rst", "struct_dnnl_group_normalization_backward.rst", "struct_dnnl_group_normalization_backward_primitive_desc.rst", "struct_dnnl_group_normalization_forward.rst", "struct_dnnl_group_normalization_forward_primitive_desc.rst", "struct_dnnl_gru_backward.rst", "struct_dnnl_gru_backward_primitive_desc.rst", "struct_dnnl_gru_forward.rst", "struct_dnnl_gru_forward_primitive_desc.rst", "struct_dnnl_handle.rst", "struct_dnnl_handle_traits.rst", "struct_dnnl_inner_product_backward_data.rst", "struct_dnnl_inner_product_backward_data_primitive_desc.rst", "struct_dnnl_inner_product_backward_weights.rst", "struct_dnnl_inner_product_backward_weights_primitive_desc.rst", "struct_dnnl_inner_product_forward.rst", "struct_dnnl_inner_product_forward_primitive_desc.rst", "struct_dnnl_layer_normalization_backward.rst", "struct_dnnl_layer_normalization_backward_primitive_desc.rst", "struct_dnnl_layer_normalization_forward.rst", "struct_dnnl_layer_normalization_forward_primitive_desc.rst", "struct_dnnl_lbr_augru_backward.rst", "struct_dnnl_lbr_augru_backward_primitive_desc.rst", "struct_dnnl_lbr_augru_forward.rst", "struct_dnnl_lbr_augru_forward_primitive_desc.rst", "struct_dnnl_lbr_gru_backward.rst", "struct_dnnl_lbr_gru_backward_primitive_desc.rst", "struct_dnnl_lbr_gru_forward.rst", "struct_dnnl_lbr_gru_forward_primitive_desc.rst", "struct_dnnl_lrn_backward.rst", "struct_dnnl_lrn_backward_primitive_desc.rst", "struct_dnnl_lrn_forward.rst", "struct_dnnl_lrn_forward_primitive_desc.rst", "struct_dnnl_lstm_backward.rst", "struct_dnnl_lstm_backward_primitive_desc.rst", "struct_dnnl_lstm_forward.rst", "struct_dnnl_lstm_forward_primitive_desc.rst", "struct_dnnl_matmul.rst", "struct_dnnl_matmul_primitive_desc.rst", "struct_dnnl_memory.rst", "struct_dnnl_memory-2.rst", "struct_dnnl_memory_desc.rst", "struct_dnnl_memory_desc-2.rst", "struct_dnnl_pooling_backward.rst", "struct_dnnl_pooling_backward_primitive_desc.rst", "struct_dnnl_pooling_forward.rst", "struct_dnnl_pooling_forward_primitive_desc.rst", "struct_dnnl_post_ops.rst", "struct_dnnl_post_ops-2.rst", "struct_dnnl_prelu_backward.rst", "struct_dnnl_prelu_backward_primitive_desc.rst", "struct_dnnl_prelu_forward.rst", "struct_dnnl_prelu_forward_primitive_desc.rst", "struct_dnnl_primitive.rst", "struct_dnnl_primitive-2.rst", "struct_dnnl_primitive_attr.rst", "struct_dnnl_primitive_attr-2.rst", "struct_dnnl_primitive_desc.rst", "struct_dnnl_primitive_desc-2.rst", "struct_dnnl_primitive_desc_base.rst", "struct_dnnl_reduction.rst", "struct_dnnl_reduction_primitive_desc.rst", "struct_dnnl_reorder.rst", "struct_dnnl_reorder_primitive_desc.rst", "struct_dnnl_resampling_backward.rst", "struct_dnnl_resampling_backward_primitive_desc.rst", "struct_dnnl_resampling_forward.rst", "struct_dnnl_resampling_forward_primitive_desc.rst", "struct_dnnl_rnn_primitive_desc_base.rst", "struct_dnnl_shuffle_backward.rst", "struct_dnnl_shuffle_backward_primitive_desc.rst", "struct_dnnl_shuffle_forward.rst", "struct_dnnl_shuffle_forward_primitive_desc.rst", "struct_dnnl_softmax_backward.rst", "struct_dnnl_softmax_backward_primitive_desc.rst", "struct_dnnl_softmax_forward.rst", "struct_dnnl_softmax_forward_primitive_desc.rst", "struct_dnnl_stream.rst", "struct_dnnl_stream-2.rst", "struct_dnnl_sum.rst", "struct_dnnl_sum_primitive_desc.rst", "struct_dnnl_threadpool_interop_threadpool_iface.rst", "struct_dnnl_transform.rst", "struct_dnnl_ukernel_attr_params.rst", "struct_dnnl_ukernel_attr_params-2.rst", "struct_dnnl_ukernel_brgemm.rst", "struct_dnnl_ukernel_transform.rst", "struct_dnnl_vanilla_rnn_backward.rst", "struct_dnnl_vanilla_rnn_backward_primitive_desc.rst", "struct_dnnl_vanilla_rnn_forward.rst", "struct_dnnl_vanilla_rnn_forward_primitive_desc.rst", "struct_dnnl_version_t.rst", "struct_example_allows_unimplemented.rst", "struct_gemm_dims_t.rst", "struct_gqa_dims_t.rst", "struct_mlp_dims_t.rst", "struct_mqa_dims_t.rst", "struct_sdpa_dims_t.rst", "struct_sycl_deletor_t.rst", "supported_primitives.rst", "ukernels.rst"], "titles": ["Advanced Topics", "Build and Link oneDNN", "class dnnl::graph::allocator", "class dnnl::graph::compiled_partition", "class dnnl::graph::graph", "class dnnl::graph::logical_tensor", "class dnnl::graph::op", "class dnnl::graph::partition", "class dnnl::graph::tensor", "class simple_memory_pool_t", "Primitive Attributes", "Primitive Attributes: accumulation mode", "Primitive Attributes: deterministic", "Primitive Attributes: dropout", "Primitive Attributes: floating-point math mode", "Primitive Attributes: Post-ops", "Primitive Attributes: Quantization", "Primitive Attributes: rounding mode", "Primitive Attributes: Scratchpad", "Basic Concepts", "Batch Normalization", "Benchmarking Performance", "Binary", "Build from Source", "Use Build Options", "API", "Concat", "Constant Tensor Cache", "Naming Conventions", "Convolution", "CPU Dispatcher Control", "CPU ISA Hints", "Data Types", "DPC++ Interoperability", "Eltwise", "Examples and Tutorials", "Experimental features", "Basic Concepts", "Binary Fusion Patterns", "Convolution Fusion Patterns", "ConvTranspose Fusion Patterns", "Graph Dump", "Gated Multi-Layer Perceptron (Gated-MLP)", "Grouped Query Attention (GQA)", "Interpolate Fusion Patterns", "Low Precision", "MatMul Fusion Patterns", "Norm Fusion Patterns", "Pool Fusion Patterns", "Quantized Convolution Fusion Patterns", "Quantized ConvTranspose Fusion Patterns", "Quantized MatMul Fusion Patterns", "Reduction Fusion Patterns", "Scaled Dot-Product Attention (SDPA)", "SDPA with Compressed Key and Value", "Softmax Fusion Patterns", "Unary Fusion Patterns", "Group Normalization", "Inference", "Inference and Training Aspects", "Int8 Inference", "Inner Product", "Inspecting JIT Code", "Nuances of int8 Computations", "Layer Normalization", "Link to the Library", "Local Response Normalization (LRN)", "Matrix Multiplication", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "GenIndex", "GreaterEqual", "GroupNorm", "HardSigmoid", "HardSigmoidBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "Maximum", "MaxPool", "MaxPoolBackward", "Minimum", "Mish", "MishBackward", "Multiply", "Pow", "PReLU", "PReLUBackward", "Quantize", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReLU", "ReLUBackward", "Reorder", "Round", "Select", "Sigmoid", "SigmoidBackward", "SoftMax", "SoftMaxBackward", "SoftPlus", "SoftPlusBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "OpenCL Interoperability", "Configuring oneDNN for Benchmarking", "Persistent Cache", "Pooling", "PReLU", "Primitive Cache", "Profiling oneDNN Performance", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sparse memory formats", "Sum", "System Requirements", "Using oneDNN with Threadpool-Based Threading", "Training", "Bfloat16 Training", "Transitioning from Intel MKL-DNN to oneDNN", "Basic Concepts", "Batch-Reduce General Matrix Multiplication", "Data transformation", "Understanding Memory Formats", "Verbose Mode", "Verbose Message Catalogue", "Profiling with VTune(TM) Profiler", "enum api_kind", "enum dnnl::accumulation_mode", "enum dnnl_accumulation_mode_t", "enum dnnl_alg_kind_t", "enum dnnl::algorithm", "enum dnnl::cpu_isa", "enum dnnl::cpu_isa_hints", "enum dnnl_cpu_isa_hints_t", "enum dnnl_cpu_isa_t", "enum dnnl_data_type_t", "enum dnnl::engine::kind", "enum dnnl_engine_kind_t", "enum dnnl_format_kind_t", "enum dnnl_format_tag_t", "enum dnnl::fpmath_mode", "enum dnnl_fpmath_mode_t", "enum dnnl_graph_layout_type_t", "enum dnnl::graph::logical_tensor::data_type", "enum dnnl::graph::logical_tensor::layout_type", "enum dnnl::graph::logical_tensor::property_type", "enum dnnl::graph::op::attr", "enum dnnl_graph_op_attr_t", "enum dnnl::graph::op::kind", "enum dnnl_graph_op_kind_t", "enum dnnl::graph::partition::policy", "enum dnnl_graph_partition_policy_t", "enum dnnl::graph::status", "enum dnnl_graph_tensor_property_t", "enum dnnl::memory::data_type", "enum dnnl::memory::format_kind", "enum dnnl::memory::format_tag", "enum dnnl::memory::sparse_encoding", "enum dnnl::normalization_flags", "enum dnnl_normalization_flags_t", "enum dnnl::ocl_interop::memory_kind", "enum dnnl_ocl_interop_memory_kind_t", "enum dnnl_pack_type_t", "enum dnnl::primitive::kind", "enum dnnl_primitive_kind_t", "enum dnnl::profiling_data_kind", "enum dnnl_profiling_data_kind_t", "enum dnnl::prop_kind", "enum dnnl_prop_kind_t", "enum dnnl::query", "enum dnnl_query_t", "enum dnnl::rnn_direction", "enum dnnl_rnn_direction_t", "enum dnnl::rnn_flags", "enum dnnl_rnn_flags_t", "enum dnnl::rounding_mode", "enum dnnl_rounding_mode_t", "enum dnnl::scratchpad_mode", "enum dnnl_scratchpad_mode_t", "enum dnnl_sparse_encoding_t", "enum dnnl::status", "enum dnnl_status_t", "enum dnnl::stream::flags", "enum dnnl_stream_flags_t", "enum dnnl::sycl_interop::memory_kind", "enum dnnl_sycl_interop_memory_kind_t", "enum dnnl::ukernel::pack_type", "augru.cpp", "batch_normalization.cpp", "binary.cpp", "bnorm_u8_via_binary_postops.cpp", "cnn_inference_f32.c", "cnn_inference_f32.cpp", "cnn_inference_int8.cpp", "cnn_training_bf16.cpp", "cnn_training_f32.cpp", "concat.cpp", "convolution.cpp", "cpu_brgemm.cpp", "cpu_cnn_training_f32.c", "cpu_getting_started.cpp", "cpu_inference_int8.cpp", "cpu_matmul_coo.cpp", "cpu_matmul_csr.cpp", "cpu_matmul_quantization.cpp", "cpu_matmul_weights_compression.cpp", "cpu_rnn_inference_f32.cpp", "cpu_rnn_inference_int8.cpp", "cpu_sgemm_and_matmul.cpp", "cpu_single_op_partition.cpp", "cross_engine_reorder.c", "cross_engine_reorder.cpp", "deconvolution.cpp", "eltwise.cpp", "getting_started.cpp", "gpu_opencl_getting_started.cpp", "gpu_opencl_interop.cpp", "group_normalization.cpp", "inference_int8_matmul.cpp", "inner_product.cpp", "layer_normalization.cpp", "lbr_gru.cpp", "lrn.cpp", "lstm.cpp", "matmul.cpp", "matmul_perf.cpp", "memory_format_propagation.cpp", "performance_profiling.cpp", "pooling.cpp", "prelu.cpp", "reduction.cpp", "reorder.cpp", "resampling.cpp", "rnn_training_f32.cpp", "shuffle.cpp", "softmax.cpp", "sum.cpp", "sycl_getting_started.cpp", "sycl_interop_buffer.cpp", "sycl_interop_usm.cpp", "sycl_single_op_partition.cpp", "vanilla_rnn.cpp", "weights_decompression_matmul.cpp", "Global Namespace", "Graph Extension", "Fusion Patterns", "Programming Model", "Supported Operations", "oneDNN API", "Accumulation Mode", "Attributes", "Batch Normalization", "Binary", "BLAS functions", "Common API", "Concat", "Convolution", "Data types", "Deconvolution", "Eltwise", "Engine", "Floating-point Math Mode", "Group Normalization", "Inner Product", "Runtime interoperability API", "Layer Normalization", "LRN", "Matrix Multiplication", "Memory", "OpenCL interoperability API", "Pooling", "PReLU", "Primitive Cache", "Primitives", "Common", "Profiling", "Reduction", "Reorder", "Resampling", "RNN", "Service", "Shuffle", "Softmax", "Stream", "Sum", "SYCL interoperability API", "Threadpool interoperability API", "Ukernels", "BRGeMM ukernel", "Transform ukernel", "ukernel utils", "Utilities", "Graph API", "Allocator", "Compiled Partition", "Compiled Partition Cache", "Constant Tensor Cache", "Engine", "Graph", "Runtime interoperability API", "Logical Tensor", "OpenCL interoperability API", "Op", "Partition", "Status", "SYCL interoperability API", "Tensor", "Utilities", "oneAPI Deep Neural Network Library (oneDNN) Developer Guide and Reference", "Interoperability with DPC++ and OpenCL", "namespace dnnl", "namespace dnnl::graph", "namespace dnnl::graph::ocl_interop", "namespace dnnl::graph::sycl_interop", "namespace dnnl::ocl_interop", "namespace dnnl::sycl_interop", "namespace dnnl::threadpool_interop", "namespace dnnl::ukernel", "namespace oneapi", "namespace std", "namespace sycl", "Orphans", "AUGRU RNN Primitive Example", "&lt;Untitled&gt;", "Batch Normalization Primitive Example", "&lt;Untitled&gt;", "Binary Primitive Example", "&lt;Untitled&gt;", "Bnorm u8 by binary post-ops example", "&lt;Untitled&gt;", "CNN f32 inference example", "CNN f32 inference example", "CNN int8 inference example", "CNN bf16 training example", "CNN f32 training example", "Concat Primitive Example", "&lt;Untitled&gt;", "Convolution Primitive Example", "&lt;Untitled&gt;", "BRGeMM ukernel example", "CNN f32 training example", "MatMul Primitive Example", "MatMul Primitive Example", "MatMul Tutorial: Quantization", "&lt;Untitled&gt;", "MatMul Primitive Example", "RNN f32 inference example", "RNN int8 inference example", "MatMul Tutorial: Comparison with SGEMM", "&lt;Untitled&gt;", "Reorder between CPU and GPU engines", "Reorder between CPU and GPU engines", "Deconvolution Primitive Example", "&lt;Untitled&gt;", "Element-Wise Primitive Example", "&lt;Untitled&gt;", "oneDNN API Basic Workflow Tutorial", "Getting started on GPU with OpenCL extensions API", "Getting started on CPU with Graph API", "Convolution int8 inference example with Graph API", "Single op partition on CPU", "Getting started with OpenCL extensions and Graph API", "Getting started with SYCL extensions API and Graph API", "Single op partition on GPU", "Group Normalization Primitive Example", "&lt;Untitled&gt;", "MatMul Tutorial: INT8 Inference", "&lt;Untitled&gt;", "Inner Product Primitive Example", "&lt;Untitled&gt;", "Layer Normalization Primitive Example", "&lt;Untitled&gt;", "Linear-Before-Reset GRU RNN Primitive Example", "&lt;Untitled&gt;", "Legal Information", "Local Response Normalization Primitive Example", "&lt;Untitled&gt;", "LSTM RNN Primitive Example", "&lt;Untitled&gt;", "Matmul Primitive Example", "&lt;Untitled&gt;", "Matrix Multiplication Performance Example", "Memory Format Propagation", "Performance Profiling Example", "Pooling Primitive Example", "&lt;Untitled&gt;", "Primitive Example", "&lt;Untitled&gt;", "Reduction Primitive Example", "&lt;Untitled&gt;", "Reorder Primitive Example", "&lt;Untitled&gt;", "Resampling Primitive Example", "&lt;Untitled&gt;", "RNN f32 training example", "Shuffle Primitive Example", "&lt;Untitled&gt;", "Softmax Primitive Example", "&lt;Untitled&gt;", "Sum Primitive Example", "&lt;Untitled&gt;", "Getting started on both CPU and GPU with SYCL extensions API", "SYCL USM example", "Todo List", "Vanilla RNN Primitive Example", "&lt;Untitled&gt;", "MatMul Tutorial: weights decompression", "&lt;Untitled&gt;", "Performance Profiling and Inspection", "oneDNN Concepts", "struct args_t", "struct cpu_deletor_t", "struct dnnl::augru_backward", "struct dnnl::augru_backward::primitive_desc", "struct dnnl::augru_forward", "struct dnnl::augru_forward::primitive_desc", "struct dnnl::batch_normalization_backward", "struct dnnl::batch_normalization_backward::primitive_desc", "struct dnnl::batch_normalization_forward", "struct dnnl::batch_normalization_forward::primitive_desc", "struct dnnl::binary", "struct dnnl::binary::primitive_desc", "struct dnnl_brgemm", "struct dnnl::concat", "struct dnnl::concat::primitive_desc", "struct dnnl::convolution_backward_data", "struct dnnl::convolution_backward_data::primitive_desc", "struct dnnl::convolution_backward_weights", "struct dnnl::convolution_backward_weights::primitive_desc", "struct dnnl::convolution_forward", "struct dnnl::convolution_forward::primitive_desc", "struct dnnl::deconvolution_backward_data", "struct dnnl::deconvolution_backward_data::primitive_desc", "struct dnnl::deconvolution_backward_weights", "struct dnnl::deconvolution_backward_weights::primitive_desc", "struct dnnl::deconvolution_forward", "struct dnnl::deconvolution_forward::primitive_desc", "struct dnnl::eltwise_backward", "struct dnnl::eltwise_backward::primitive_desc", "struct dnnl::eltwise_forward", "struct dnnl::eltwise_forward::primitive_desc", "struct dnnl_engine", "struct dnnl::engine", "struct dnnl::error", "struct dnnl_exec_arg_t", "struct dnnl_graph_inplace_pair_t", "struct dnnl_graph_logical_tensor_t", "struct dnnl::group_normalization_backward", "struct dnnl::group_normalization_backward::primitive_desc", "struct dnnl::group_normalization_forward", "struct dnnl::group_normalization_forward::primitive_desc", "struct dnnl::gru_backward", "struct dnnl::gru_backward::primitive_desc", "struct dnnl::gru_forward", "struct dnnl::gru_forward::primitive_desc", "template struct dnnl::handle", "template struct dnnl::handle_traits", "struct dnnl::inner_product_backward_data", "struct dnnl::inner_product_backward_data::primitive_desc", "struct dnnl::inner_product_backward_weights", "struct dnnl::inner_product_backward_weights::primitive_desc", "struct dnnl::inner_product_forward", "struct dnnl::inner_product_forward::primitive_desc", "struct dnnl::layer_normalization_backward", "struct dnnl::layer_normalization_backward::primitive_desc", "struct dnnl::layer_normalization_forward", "struct dnnl::layer_normalization_forward::primitive_desc", "struct dnnl::lbr_augru_backward", "struct dnnl::lbr_augru_backward::primitive_desc", "struct dnnl::lbr_augru_forward", "struct dnnl::lbr_augru_forward::primitive_desc", "struct dnnl::lbr_gru_backward", "struct dnnl::lbr_gru_backward::primitive_desc", "struct dnnl::lbr_gru_forward", "struct dnnl::lbr_gru_forward::primitive_desc", "struct dnnl::lrn_backward", "struct dnnl::lrn_backward::primitive_desc", "struct dnnl::lrn_forward", "struct dnnl::lrn_forward::primitive_desc", "struct dnnl::lstm_backward", "struct dnnl::lstm_backward::primitive_desc", "struct dnnl::lstm_forward", "struct dnnl::lstm_forward::primitive_desc", "struct dnnl::matmul", "struct dnnl::matmul::primitive_desc", "struct dnnl_memory", "struct dnnl::memory", "struct dnnl_memory_desc", "struct dnnl::memory::desc", "struct dnnl::pooling_backward", "struct dnnl::pooling_backward::primitive_desc", "struct dnnl::pooling_forward", "struct dnnl::pooling_forward::primitive_desc", "struct dnnl_post_ops", "struct dnnl::post_ops", "struct dnnl::prelu_backward", "struct dnnl::prelu_backward::primitive_desc", "struct dnnl::prelu_forward", "struct dnnl::prelu_forward::primitive_desc", "struct dnnl_primitive", "struct dnnl::primitive", "struct dnnl_primitive_attr", "struct dnnl::primitive_attr", "struct dnnl_primitive_desc", "struct dnnl::primitive_desc", "struct dnnl::primitive_desc_base", "struct dnnl::reduction", "struct dnnl::reduction::primitive_desc", "struct dnnl::reorder", "struct dnnl::reorder::primitive_desc", "struct dnnl::resampling_backward", "struct dnnl::resampling_backward::primitive_desc", "struct dnnl::resampling_forward", "struct dnnl::resampling_forward::primitive_desc", "struct dnnl::rnn_primitive_desc_base", "struct dnnl::shuffle_backward", "struct dnnl::shuffle_backward::primitive_desc", "struct dnnl::shuffle_forward", "struct dnnl::shuffle_forward::primitive_desc", "struct dnnl::softmax_backward", "struct dnnl::softmax_backward::primitive_desc", "struct dnnl::softmax_forward", "struct dnnl::softmax_forward::primitive_desc", "struct dnnl_stream", "struct dnnl::stream", "struct dnnl::sum", "struct dnnl::sum::primitive_desc", "struct dnnl::threadpool_interop::threadpool_iface", "struct dnnl_transform", "struct dnnl_ukernel_attr_params", "struct dnnl::ukernel::attr_params", "struct dnnl::ukernel::brgemm", "struct dnnl::ukernel::transform", "struct dnnl::vanilla_rnn_backward", "struct dnnl::vanilla_rnn_backward::primitive_desc", "struct dnnl::vanilla_rnn_forward", "struct dnnl::vanilla_rnn_forward::primitive_desc", "struct dnnl_version_t", "struct example_allows_unimplemented", "struct gemm_dims_t", "struct gqa_dims_t", "struct mlp_dims_t", "struct mqa_dims_t", "struct sdpa_dims_t", "struct sycl_deletor_t", "Supported Primitives", "Ukernels"], "terms": {"transit": 0, "from": [0, 1, 3, 4, 7, 10, 11, 13, 14, 15, 16, 18, 19, 24, 26, 28, 29, 32, 34, 37, 39, 42, 43, 47, 49, 50, 51, 53, 54, 55, 58, 59, 60, 61, 63, 65, 66, 67, 77, 89, 90, 104, 105, 106, 107, 110, 111, 112, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 136, 139, 140, 147, 148, 152, 155, 156, 157, 159, 160, 162, 164, 165, 166, 174, 175, 176, 177, 178, 179, 184, 185, 194, 211, 213, 214, 226, 227, 232, 233, 242, 243, 244, 245, 246, 249, 250, 252, 253, 254, 255, 256, 259, 260, 261, 262, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 300, 304, 305, 315, 316, 320, 323, 324, 329, 334, 343, 349, 353, 358, 367, 368, 369, 370, 377, 378, 379, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 400, 401, 402, 407, 408, 409, 411, 412, 413, 419, 421, 423, 424, 425, 427, 428, 430, 432, 433, 434, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 459, 460, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 586, 588, 589, 590, 591], "intel": [0, 24, 29, 30, 36, 42, 43, 53, 54, 62, 67, 154, 155, 162, 172, 175, 176, 178, 186, 189, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 363, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 412, 419, 421, 423, 425, 427, 429, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461], "mkl": 0, "dnn": [0, 13, 32, 177], "onednn": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 154, 156, 159, 162, 163, 164, 167, 169, 172, 174, 177, 178, 179, 180, 194, 259, 263, 269, 271, 280, 282, 283, 293, 294, 300, 324, 335, 341, 347, 352, 355, 356, 360, 365, 366, 369, 371, 376, 387, 398, 401, 402, 403, 413, 414, 415, 416, 417, 418, 436, 437, 438, 439, 457, 463, 498, 501, 510, 511, 582], "understand": [0, 37, 194, 323, 437], "memori": [0, 3, 5, 8, 10, 11, 15, 16, 20, 22, 26, 29, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 147, 148, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 172, 175, 176, 178, 182, 183, 184, 185, 190, 193, 194, 207, 215, 216, 224, 225, 228, 229, 232, 233, 234, 235, 236, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 317, 318, 320, 321, 322, 324, 325, 326, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 348, 349, 355, 356, 360, 361, 365, 369, 370, 371, 376, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 407, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 455, 457, 459, 460, 461, 462, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 584, 585, 586, 587, 588, 589, 590, 591, 594], "format": [0, 15, 16, 19, 20, 22, 26, 29, 34, 35, 43, 57, 58, 59, 60, 61, 64, 66, 67, 81, 82, 83, 84, 85, 86, 104, 105, 121, 122, 157, 158, 160, 161, 162, 163, 164, 165, 168, 174, 175, 176, 178, 179, 193, 194, 210, 211, 212, 224, 225, 234, 246, 247, 249, 250, 253, 254, 256, 257, 258, 259, 269, 273, 274, 281, 282, 288, 297, 310, 323, 329, 376, 377, 378, 379, 380, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 407, 408, 411, 412, 414, 419, 420, 421, 423, 424, 427, 428, 432, 433, 449, 454, 455, 456, 459, 460, 461, 464, 468, 472, 479, 481, 483, 487, 489, 493, 503, 507, 513, 515, 519, 523, 527, 531, 535, 541, 543, 545, 551, 566, 571, 575, 589], "nuanc": [0, 16, 26, 32, 308, 341, 371], "int8": [0, 10, 15, 16, 26, 29, 32, 35, 53, 54, 57, 59, 61, 64, 67, 87, 123, 161, 164, 166, 175, 176, 248, 253, 256, 259, 262, 273, 305, 308, 341, 371, 376, 394, 398, 422, 557], "comput": [0, 3, 4, 6, 7, 10, 11, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 32, 34, 37, 41, 43, 45, 53, 54, 57, 58, 59, 60, 61, 64, 66, 67, 69, 71, 73, 77, 79, 81, 82, 83, 84, 85, 86, 92, 95, 96, 101, 103, 105, 106, 107, 111, 112, 114, 118, 122, 133, 138, 139, 140, 142, 144, 151, 152, 153, 155, 157, 158, 160, 163, 164, 165, 166, 170, 172, 174, 175, 176, 177, 178, 179, 182, 183, 187, 188, 200, 208, 213, 214, 222, 223, 242, 243, 244, 245, 251, 252, 253, 259, 260, 261, 262, 267, 268, 269, 272, 274, 275, 276, 277, 278, 279, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 300, 305, 306, 308, 312, 315, 317, 318, 320, 323, 324, 328, 329, 331, 333, 334, 337, 338, 340, 341, 349, 353, 357, 358, 369, 370, 371, 377, 379, 381, 383, 386, 387, 390, 392, 394, 398, 399, 400, 401, 402, 406, 407, 409, 411, 412, 419, 423, 425, 427, 430, 432, 434, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 459, 472, 500, 503, 519, 549, 555, 563, 575, 577], "primit": [0, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 42, 43, 53, 54, 57, 58, 59, 60, 61, 63, 64, 66, 74, 81, 134, 154, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 172, 177, 181, 184, 193, 194, 207, 210, 211, 212, 213, 214, 219, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 303, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 365, 369, 370, 376, 378, 380, 382, 383, 385, 386, 387, 388, 389, 391, 393, 395, 398, 401, 402, 403, 404, 408, 410, 420, 421, 422, 424, 426, 428, 431, 433, 435, 436, 438, 440, 442, 444, 446, 448, 449, 451, 453, 455, 457, 460, 461, 462, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 586, 588, 589, 590, 591], "cach": [0, 3, 19, 24, 54, 58, 67, 160, 174, 177, 200, 208, 224, 225, 255, 256, 270, 292, 299, 300, 303, 324, 329, 347, 349, 356, 367, 369, 414, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 544, 546, 550, 552, 555, 560, 561, 563, 565, 567, 570, 572, 574, 576, 580, 588, 590], "persist": [0, 159], "us": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 45, 49, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 73, 79, 81, 82, 87, 88, 89, 90, 92, 93, 95, 98, 104, 105, 106, 107, 113, 116, 119, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 144, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 178, 179, 182, 183, 184, 185, 187, 188, 190, 193, 194, 200, 205, 206, 208, 209, 210, 211, 212, 213, 214, 219, 224, 225, 232, 233, 234, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 348, 349, 351, 353, 355, 356, 358, 360, 361, 367, 368, 369, 370, 371, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 429, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 462, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 500, 501, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 548, 549, 551, 553, 555, 557, 562, 563, 564, 566, 568, 571, 573, 575, 577, 579, 581, 585, 586, 589, 591], "threadpool": [0, 29, 43, 53, 298, 303, 319, 371, 582], "base": [0, 10, 15, 16, 18, 19, 20, 22, 23, 24, 25, 29, 30, 32, 33, 34, 36, 42, 43, 53, 54, 57, 58, 59, 61, 62, 63, 64, 66, 107, 108, 117, 120, 121, 154, 155, 157, 158, 160, 161, 163, 164, 165, 166, 172, 173, 178, 179, 184, 185, 264, 288, 295, 341, 343, 363, 371, 386, 411, 417, 418, 437, 449, 479, 501, 510, 548, 555, 559, 560, 564, 569, 581, 586], "thread": [0, 18, 19, 23, 29, 36, 43, 53, 160, 174, 232, 233, 341, 351, 371, 438, 582], "spars": [0, 67, 162, 175, 176, 179, 193, 210, 212, 224, 225, 234, 253, 257, 258, 260, 323, 394, 396, 397, 543], "experiment": [0, 20, 24, 179, 363], "featur": [0, 15, 20, 24, 25, 27, 29, 30, 31, 41, 63, 64, 159, 175, 176, 177, 178, 179, 187, 188, 253, 261, 262, 288, 305, 335, 387, 394, 411, 449, 549], "system": [1, 18, 19, 23, 24, 29, 32, 36, 62, 63, 65, 155, 156, 160, 164, 165, 175, 176, 177, 178, 179, 253, 315, 343, 394], "requir": [1, 3, 5, 10, 15, 16, 18, 20, 22, 23, 24, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 164, 168, 170, 172, 173, 174, 175, 176, 177, 178, 201, 207, 213, 214, 224, 225, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 305, 306, 314, 323, 324, 329, 330, 340, 343, 349, 355, 369, 370, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 406, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 468, 470, 472, 474, 503, 505, 507, 509, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 543, 545, 547, 549, 560, 586, 589, 591], "sourc": [1, 10, 15, 16, 18, 24, 26, 28, 29, 34, 37, 58, 59, 60, 61, 63, 67, 158, 162, 163, 165, 172, 179, 224, 225, 242, 243, 244, 249, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 296, 306, 307, 310, 311, 313, 314, 317, 318, 320, 321, 322, 323, 325, 326, 329, 331, 332, 333, 336, 337, 339, 363, 377, 379, 380, 381, 387, 388, 389, 390, 391, 392, 395, 398, 400, 406, 407, 409, 411, 412, 419, 420, 421, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 450, 452, 454, 455, 459, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 560, 562, 563, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591, 592], "option": [1, 18, 20, 21, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 164, 170, 173, 175, 176, 178, 232, 233, 242, 253, 276, 278, 296, 306, 323, 329, 335, 356, 360, 367, 368, 369, 370, 377, 394, 403, 411, 427, 432, 436, 438, 459, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 543, 545, 547, 551, 553, 559, 562, 563, 564, 566, 568, 571, 573, 575, 577, 581, 586, 587, 589, 591], "librari": [1, 3, 4, 5, 7, 8, 10, 12, 14, 15, 16, 19, 25, 27, 29, 30, 33, 36, 37, 41, 53, 58, 59, 60, 61, 62, 87, 89, 90, 112, 123, 153, 154, 155, 156, 157, 165, 170, 173, 178, 186, 189, 197, 199, 200, 207, 208, 213, 214, 218, 219, 232, 233, 235, 236, 266, 269, 323, 324, 335, 340, 349, 351, 353, 355, 358, 359, 361, 369, 370, 406, 411, 412, 421, 437, 438, 456, 461, 497, 500, 501, 510, 541, 555, 579, 582], "more": [2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 19, 20, 24, 26, 29, 32, 36, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 67, 136, 147, 160, 161, 162, 164, 168, 172, 173, 175, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 253, 259, 300, 305, 306, 307, 308, 310, 311, 313, 314, 315, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 353, 355, 356, 357, 358, 360, 361, 367, 368, 369, 370, 371, 373, 386, 394, 398, 403, 406, 411, 421, 438, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592], "includ": [2, 3, 4, 5, 6, 7, 8, 16, 19, 20, 22, 23, 24, 26, 29, 32, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 61, 64, 65, 67, 160, 162, 164, 165, 166, 168, 170, 173, 175, 176, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 323, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 439, 441, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592], "dnnl_graph": [2, 3, 4, 5, 6, 7, 8, 65, 198, 199, 200, 201, 203, 205, 207, 255, 256, 264, 270, 292, 295, 413, 414, 415, 416, 417, 418], "hpp": [2, 3, 4, 5, 6, 7, 8, 33, 65, 154, 170, 173, 175, 176, 177, 182, 185, 186, 187, 191, 195, 198, 199, 200, 201, 203, 205, 207, 209, 210, 211, 212, 213, 215, 218, 220, 222, 224, 226, 228, 230, 232, 235, 237, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 388, 389, 390, 392, 394, 396, 397, 398, 400, 403, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591], "public": [2, 3, 4, 5, 6, 7, 8, 9, 65, 170, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591, 593], "allocator_handl": 2, "dnnl_graph_host_allocate_f": [2, 298, 348], "host_malloc": [2, 298, 348], "dnnl_graph_host_deallocate_f": [2, 298, 348], "host_fre": [2, 298, 348], "an": [2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 42, 43, 44, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 175, 176, 177, 178, 179, 191, 192, 194, 197, 199, 201, 202, 207, 211, 212, 213, 214, 218, 219, 220, 221, 224, 225, 234, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 304, 305, 308, 310, 314, 315, 316, 318, 321, 323, 324, 329, 334, 335, 336, 338, 339, 340, 341, 343, 348, 349, 351, 353, 355, 356, 357, 358, 360, 361, 363, 367, 368, 369, 370, 371, 373, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 430, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591], "accord": [2, 3, 4, 6, 7, 8, 16, 26, 37, 59, 60, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 162, 168, 207, 232, 233, 236, 298, 300, 334, 349, 353, 355, 358, 386, 501, 535, 537], "given": [2, 4, 7, 8, 11, 12, 13, 14, 16, 17, 22, 26, 29, 32, 37, 53, 57, 59, 60, 61, 63, 64, 67, 68, 70, 88, 98, 109, 113, 116, 117, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 143, 145, 146, 149, 152, 156, 162, 166, 167, 174, 175, 177, 179, 207, 235, 236, 255, 256, 257, 258, 264, 270, 282, 292, 295, 305, 323, 324, 329, 340, 343, 348, 356, 358, 360, 369, 370, 396, 397, 398, 403, 406, 411, 412, 413, 415, 417, 418, 456, 541, 543, 549, 557], "function": [2, 4, 12, 14, 15, 16, 19, 20, 25, 27, 28, 30, 31, 32, 33, 34, 36, 42, 43, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 78, 94, 108, 110, 117, 125, 126, 127, 128, 129, 130, 131, 154, 159, 160, 162, 167, 170, 173, 175, 176, 177, 178, 184, 207, 225, 235, 236, 253, 255, 256, 259, 269, 270, 273, 282, 288, 292, 297, 303, 345, 359, 365, 366, 394, 398, 403, 404, 421, 438, 449, 461, 497, 498, 510, 541, 543, 555, 579, 582], "pointer": [2, 7, 8, 18, 25, 33, 154, 167, 174, 175, 176, 179, 224, 225, 253, 259, 263, 308, 323, 324, 329, 335, 340, 341, 342, 343, 348, 356, 360, 361, 367, 368, 369, 370, 371, 394, 398, 403, 411, 457, 497, 510, 541, 543, 555, 579, 585, 586, 587], "paramet": [2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 19, 20, 25, 29, 45, 57, 59, 60, 61, 62, 63, 64, 81, 82, 106, 107, 158, 159, 160, 164, 165, 174, 178, 179, 213, 214, 222, 223, 224, 225, 259, 261, 262, 263, 269, 273, 282, 283, 288, 297, 298, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 353, 355, 356, 357, 358, 360, 361, 367, 368, 369, 370, 371, 386, 387, 398, 401, 402, 403, 406, 411, 412, 421, 436, 437, 439, 449, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591], "A": [2, 3, 4, 5, 7, 8, 10, 18, 19, 29, 37, 45, 53, 54, 58, 60, 61, 63, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 90, 104, 105, 114, 115, 123, 125, 126, 127, 128, 129, 130, 131, 147, 148, 157, 160, 162, 163, 164, 165, 167, 175, 176, 177, 178, 179, 193, 210, 212, 217, 218, 219, 226, 227, 234, 241, 242, 253, 257, 258, 259, 263, 269, 273, 276, 278, 280, 296, 297, 298, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 353, 355, 356, 357, 358, 360, 361, 365, 367, 369, 370, 371, 377, 387, 394, 396, 397, 398, 403, 411, 412, 421, 427, 432, 436, 437, 456, 459, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 498, 499, 503, 505, 507, 509, 510, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 551, 553, 555, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 579, 581, 585, 586, 587, 589, 591], "malloc": [2, 246, 254, 265, 348, 356, 360, 367, 368, 385, 395, 405], "cpu": [2, 8, 15, 16, 19, 20, 27, 29, 32, 33, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 67, 156, 157, 159, 160, 162, 164, 167, 170, 174, 175, 176, 178, 179, 186, 187, 188, 189, 191, 192, 200, 208, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 280, 293, 297, 315, 323, 335, 341, 363, 371, 376, 394, 395, 396, 397, 398, 401, 402, 403, 411, 414, 416, 417, 418, 436, 437, 438, 457, 461, 463, 464, 541, 582, 592], "free": [2, 5, 37, 246, 254, 265, 294, 348, 356, 360, 367, 368, 385, 395, 403, 405, 457, 541], "default": [2, 3, 4, 5, 8, 10, 11, 12, 15, 17, 18, 19, 23, 24, 27, 30, 31, 32, 33, 36, 41, 58, 60, 62, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 98, 99, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 136, 138, 139, 140, 141, 142, 144, 146, 149, 151, 154, 159, 160, 164, 175, 176, 177, 178, 182, 183, 187, 188, 195, 196, 215, 216, 232, 233, 237, 238, 239, 240, 253, 276, 296, 305, 316, 334, 335, 350, 351, 394, 427, 459, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 550, 551, 552, 553, 555, 557, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 586, 587, 588, 589, 590, 591], "constructor": [2, 3, 5, 8, 10, 19, 37, 156, 164, 175, 176, 253, 387, 394, 411, 437, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 544, 545, 546, 547, 550, 551, 552, 553, 555, 557, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 586, 587, 588, 589, 590, 591], "compil": [3, 7, 18, 36, 58, 62, 112, 155, 159, 169, 197, 199, 207, 236, 255, 256, 264, 270, 292, 293, 294, 295, 300, 303, 335, 347, 348, 351, 355, 356, 358, 360, 361, 367, 368, 406, 411, 412, 436, 437, 438, 456, 457, 500, 501], "partit": [3, 4, 35, 41, 42, 45, 53, 197, 199, 206, 255, 256, 264, 270, 292, 295, 298, 300, 303, 347, 348, 353, 355, 356, 360, 361, 366, 367, 368, 500, 501], "object": [3, 4, 5, 6, 7, 8, 10, 15, 16, 20, 24, 29, 37, 54, 57, 60, 61, 64, 67, 156, 160, 163, 164, 167, 174, 175, 176, 177, 179, 212, 225, 234, 242, 243, 244, 245, 251, 252, 253, 259, 260, 267, 268, 269, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 320, 323, 324, 329, 332, 338, 340, 342, 343, 353, 357, 361, 367, 368, 369, 370, 377, 379, 381, 383, 387, 390, 392, 394, 398, 400, 407, 409, 416, 417, 419, 423, 425, 426, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 586, 587, 588, 589, 590, 591], "compiled_partition_handl": 3, "dnnl_graph_compiled_partition_t": [3, 298, 349, 358], "logical_tensor": [3, 6, 7, 8, 37, 178, 255, 256, 264, 270, 292, 295, 298, 355, 361, 366, 413, 414, 415, 416, 417, 418], "query_logical_tensor": [3, 37, 255, 256, 264, 270, 292, 295], "size_t": [3, 5, 6, 7, 9, 175, 176, 246, 247, 249, 250, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 280, 282, 292, 293, 294, 295, 298, 315, 323, 324, 329, 343, 348, 349, 351, 352, 353, 355, 356, 357, 358, 360, 366, 385, 386, 388, 389, 394, 395, 398, 400, 401, 402, 403, 405, 412, 436, 456, 457, 497, 500, 501, 541, 543, 586], "tid": [3, 5, 298, 349, 355], "const": [3, 4, 5, 6, 7, 8, 9, 15, 16, 33, 154, 156, 160, 167, 170, 175, 176, 177, 225, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 305, 308, 310, 311, 313, 323, 324, 325, 329, 333, 334, 335, 338, 339, 340, 341, 342, 343, 348, 349, 352, 353, 355, 356, 357, 358, 360, 361, 365, 366, 367, 368, 369, 370, 371, 377, 379, 381, 383, 385, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 402, 403, 405, 406, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 599], "std": [3, 4, 5, 6, 7, 9, 15, 16, 18, 36, 156, 167, 170, 175, 176, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 330, 335, 340, 365, 367, 368, 369, 370, 377, 379, 381, 383, 386, 387, 388, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 403, 406, 407, 409, 411, 412, 413, 414, 416, 417, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 582, 586, 588, 589, 590, 591], "vector": [3, 4, 5, 6, 7, 16, 29, 30, 31, 32, 36, 61, 62, 63, 81, 82, 156, 160, 167, 174, 175, 176, 177, 186, 189, 201, 224, 225, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 305, 324, 329, 330, 334, 339, 340, 365, 367, 368, 369, 370, 377, 379, 381, 383, 386, 387, 388, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 403, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 459, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 586, 588, 589, 590, 591], "pair": [3, 27, 63, 175, 176, 253, 324, 329, 340, 349, 369, 370, 394, 500, 555, 563, 586], "get_inplace_port": 3, "void": [3, 4, 6, 8, 9, 15, 16, 18, 19, 33, 154, 167, 170, 175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 323, 324, 327, 329, 330, 335, 340, 341, 342, 343, 348, 350, 351, 356, 360, 361, 365, 366, 369, 370, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 599], "execut": [3, 10, 12, 13, 15, 16, 17, 18, 19, 24, 30, 33, 36, 37, 54, 58, 59, 60, 63, 65, 154, 172, 174, 175, 176, 177, 178, 207, 220, 221, 224, 225, 226, 227, 232, 233, 235, 236, 237, 238, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 305, 315, 323, 324, 329, 330, 335, 338, 340, 341, 343, 348, 349, 355, 356, 358, 360, 361, 367, 368, 369, 370, 371, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 407, 408, 409, 410, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 460, 461, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 497, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 541, 544, 546, 549, 550, 552, 555, 557, 561, 563, 565, 567, 570, 572, 574, 576, 578, 579, 580, 582, 586, 587, 588, 590], "stream": [3, 18, 24, 30, 32, 33, 36, 37, 58, 59, 154, 173, 175, 176, 178, 186, 189, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 303, 309, 323, 324, 329, 330, 340, 341, 349, 356, 360, 365, 367, 368, 369, 370, 371, 377, 379, 381, 383, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 407, 409, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 541, 544, 546, 550, 552, 555, 561, 563, 565, 567, 570, 572, 574, 576, 578, 580, 582, 588, 590], "astream": [3, 298, 341, 367, 368, 369, 370, 371, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 544, 546, 550, 552, 555, 561, 563, 565, 567, 570, 572, 574, 576, 580, 588, 590], "tensor": [3, 5, 6, 7, 10, 15, 16, 18, 19, 20, 22, 26, 29, 34, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 70, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 141, 143, 145, 146, 147, 149, 150, 152, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 172, 175, 176, 177, 178, 179, 185, 193, 194, 197, 199, 200, 208, 210, 211, 212, 213, 214, 218, 234, 242, 243, 244, 245, 248, 251, 252, 253, 255, 256, 257, 258, 260, 264, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 298, 299, 303, 305, 307, 310, 311, 312, 313, 320, 322, 323, 325, 329, 331, 333, 336, 339, 342, 343, 347, 349, 353, 356, 357, 358, 360, 366, 367, 368, 377, 379, 381, 383, 385, 386, 387, 390, 392, 394, 400, 403, 404, 406, 407, 409, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 427, 430, 432, 434, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 453, 454, 455, 459, 476, 478, 479, 481, 483, 485, 487, 489, 491, 500, 501, 541, 543, 545, 547, 549, 557, 585, 586], "input": [3, 4, 5, 6, 7, 13, 16, 17, 18, 20, 22, 24, 26, 28, 29, 32, 34, 37, 42, 53, 54, 57, 58, 59, 60, 61, 62, 64, 66, 67, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 174, 175, 176, 177, 178, 179, 184, 185, 194, 201, 211, 213, 214, 224, 225, 248, 249, 250, 252, 253, 255, 256, 259, 261, 262, 264, 267, 269, 270, 273, 274, 280, 282, 283, 287, 288, 292, 295, 297, 298, 305, 314, 323, 329, 334, 343, 349, 353, 355, 356, 357, 358, 360, 361, 367, 368, 385, 386, 387, 388, 389, 392, 394, 398, 401, 402, 403, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 436, 437, 438, 439, 447, 449, 461, 468, 470, 499, 500, 501, 507, 509, 523, 525, 527, 529, 535, 537, 549, 557, 587, 589, 591], "output": [3, 4, 5, 6, 7, 10, 12, 13, 15, 20, 22, 23, 24, 26, 29, 32, 34, 36, 37, 39, 42, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 66, 67, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 174, 175, 176, 177, 179, 194, 211, 213, 214, 224, 225, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 266, 267, 269, 270, 273, 274, 276, 280, 283, 286, 287, 288, 292, 293, 294, 295, 297, 298, 305, 306, 307, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 353, 355, 356, 357, 358, 360, 361, 367, 368, 369, 370, 371, 385, 386, 387, 388, 389, 392, 394, 395, 396, 397, 398, 401, 402, 403, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 427, 436, 437, 438, 439, 445, 446, 447, 449, 456, 457, 461, 468, 470, 499, 500, 501, 507, 509, 523, 525, 527, 529, 535, 537, 549, 556, 557, 586, 587, 589, 591], "empti": [3, 4, 5, 8, 10, 15, 18, 24, 59, 121, 125, 126, 127, 128, 129, 130, 131, 175, 176, 178, 179, 190, 193, 209, 210, 212, 234, 252, 253, 280, 305, 307, 324, 329, 343, 349, 353, 356, 360, 369, 392, 394, 436, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 586, 587, 588, 589, 590, 591], "queri": [3, 15, 16, 18, 19, 27, 29, 30, 31, 33, 36, 37, 53, 54, 58, 59, 61, 66, 154, 156, 164, 167, 174, 175, 176, 177, 179, 207, 212, 220, 221, 225, 232, 233, 234, 235, 236, 249, 250, 253, 254, 255, 256, 264, 270, 292, 295, 300, 305, 315, 323, 324, 327, 329, 330, 340, 343, 349, 350, 351, 365, 369, 370, 388, 389, 394, 395, 411, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 500, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 543, 545, 547, 551, 553, 555, 557, 559, 560, 562, 563, 564, 566, 568, 569, 571, 573, 575, 577, 581, 586, 589, 591], "logic": [3, 5, 6, 7, 8, 19, 20, 26, 29, 34, 36, 42, 43, 45, 53, 54, 57, 59, 64, 66, 90, 153, 155, 157, 158, 162, 165, 166, 168, 174, 177, 194, 197, 199, 208, 211, 224, 225, 255, 256, 264, 269, 270, 292, 295, 298, 303, 305, 320, 323, 347, 349, 353, 357, 358, 361, 411, 413, 414, 415, 416, 417, 418, 501, 543, 557], "id": [3, 5, 6, 7, 13, 23, 28, 37, 156, 224, 225, 255, 256, 264, 270, 271, 272, 292, 293, 294, 295, 298, 324, 349, 355, 357, 358, 369, 412, 419, 456, 457, 500, 501, 560], "If": [3, 5, 10, 13, 15, 18, 20, 23, 25, 27, 28, 39, 40, 42, 46, 49, 50, 51, 54, 57, 59, 64, 72, 75, 79, 82, 83, 86, 87, 89, 90, 92, 123, 125, 126, 127, 128, 129, 130, 131, 133, 136, 138, 139, 144, 151, 155, 164, 165, 175, 176, 177, 178, 213, 214, 225, 253, 255, 256, 270, 280, 292, 305, 320, 323, 324, 327, 329, 335, 342, 343, 349, 350, 351, 355, 369, 370, 386, 394, 416, 417, 436, 438, 519, 521, 543, 549, 564, 582, 585, 586], "doesn": [3, 5, 8, 30, 48, 67, 154, 162, 175, 176, 194, 205, 206, 253, 323, 324, 334, 340, 349, 355, 361, 369, 370, 394, 411, 413, 414, 416, 417, 421, 461, 501, 535, 537, 541], "t": [3, 5, 6, 7, 8, 27, 28, 30, 33, 48, 53, 58, 60, 64, 67, 106, 107, 154, 160, 162, 164, 175, 176, 178, 179, 184, 185, 194, 205, 206, 242, 246, 249, 250, 253, 254, 259, 261, 262, 263, 275, 276, 278, 280, 288, 296, 298, 305, 308, 323, 324, 334, 340, 341, 346, 349, 355, 361, 365, 369, 370, 371, 377, 385, 388, 389, 394, 395, 398, 403, 411, 413, 414, 416, 417, 421, 425, 427, 432, 436, 449, 456, 459, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591], "belong": [3, 160, 305, 349, 369, 370, 555, 563, 582], "ani": [3, 7, 10, 11, 13, 14, 15, 16, 19, 20, 22, 24, 26, 29, 30, 31, 34, 36, 37, 58, 59, 61, 62, 63, 66, 67, 68, 69, 78, 79, 93, 94, 102, 103, 104, 105, 109, 117, 118, 124, 132, 134, 135, 137, 143, 145, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 178, 179, 182, 191, 195, 197, 199, 205, 206, 210, 211, 212, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 305, 323, 329, 335, 343, 349, 355, 358, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 407, 409, 411, 419, 421, 422, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 462, 468, 470, 481, 483, 485, 487, 489, 491, 497, 501, 507, 509, 510, 513, 515, 517, 523, 525, 527, 529, 535, 537, 541, 543, 555, 557, 562, 568, 579, 589, 591], "except": [3, 4, 5, 10, 11, 19, 22, 24, 25, 26, 53, 80, 104, 156, 164, 175, 176, 177, 179, 182, 186, 189, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 315, 335, 370, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 411, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 498, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 551, 553, 555, 562, 564, 566, 568, 571, 573, 575, 577, 579, 581, 586, 587, 589, 591, 593], "rais": [3, 5], "api": [3, 4, 5, 7, 10, 12, 14, 15, 18, 19, 20, 22, 26, 29, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 64, 65, 66, 67, 154, 157, 158, 161, 162, 163, 164, 165, 166, 168, 173, 174, 175, 176, 177, 178, 213, 214, 224, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 266, 269, 270, 271, 288, 292, 293, 295, 298, 300, 304, 305, 308, 315, 316, 323, 329, 334, 335, 349, 351, 352, 353, 355, 358, 369, 370, 371, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 460, 461, 462, 464, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 498, 501, 503, 505, 507, 509, 510, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 562, 564, 566, 568, 569, 571, 573, 575, 577, 579, 581, 589, 591], "The": [3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 194, 201, 202, 205, 206, 207, 211, 213, 214, 225, 232, 233, 235, 236, 245, 252, 253, 263, 267, 269, 273, 282, 288, 297, 300, 305, 306, 308, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 329, 330, 334, 335, 336, 340, 341, 343, 348, 349, 350, 351, 353, 355, 356, 357, 358, 360, 361, 363, 367, 368, 369, 370, 371, 373, 383, 385, 386, 387, 388, 389, 392, 394, 395, 398, 401, 402, 403, 406, 407, 411, 412, 413, 414, 416, 417, 421, 436, 437, 438, 449, 456, 457, 461, 468, 470, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 498, 500, 501, 507, 509, 510, 515, 517, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 555, 557, 559, 560, 563, 564, 568, 571, 573, 579, 581, 582, 586, 589, 591], "uniqu": [3, 5, 6, 7, 16, 37, 125, 126, 127, 128, 129, 130, 131, 262, 349, 355, 357, 501, 549], "return": [3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 18, 24, 25, 30, 31, 32, 37, 45, 59, 60, 63, 66, 136, 147, 148, 154, 156, 157, 170, 175, 176, 177, 205, 206, 207, 225, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 367, 368, 369, 370, 371, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 406, 407, 409, 411, 412, 413, 414, 416, 417, 419, 421, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 498, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 560, 562, 563, 564, 566, 568, 569, 571, 573, 575, 577, 579, 581, 582, 586, 589, 591], "hint": [3, 10, 24, 59, 187, 188, 249, 250, 254, 288, 335, 349, 388, 389, 395, 449, 463, 468, 472, 481, 483, 487, 489, 493, 500, 503, 507, 513, 515, 519, 523, 527, 531, 535, 545, 551, 566, 571, 575, 589], "place": [3, 15, 20, 22, 23, 25, 34, 57, 59, 64, 147, 148, 155, 166, 168, 176, 218, 219, 243, 244, 245, 268, 269, 272, 275, 282, 283, 284, 290, 305, 306, 310, 314, 317, 320, 335, 339, 349, 379, 380, 381, 382, 383, 386, 401, 402, 409, 411, 419, 420, 425, 426, 439, 441, 452, 453, 474, 479, 500, 505, 549, 580], "It": [3, 4, 13, 15, 16, 18, 19, 22, 24, 27, 30, 32, 36, 37, 39, 43, 45, 47, 49, 50, 51, 53, 54, 55, 58, 59, 60, 63, 65, 87, 89, 90, 104, 106, 108, 120, 123, 134, 152, 153, 154, 155, 159, 167, 175, 176, 177, 178, 200, 205, 206, 208, 212, 234, 253, 270, 306, 317, 320, 323, 324, 329, 330, 335, 349, 353, 369, 394, 398, 411, 412, 413, 414, 416, 417, 437, 438, 456, 457, 468, 472, 481, 483, 487, 489, 493, 500, 501, 503, 507, 513, 515, 519, 523, 527, 531, 535, 541, 543, 545, 551, 555, 564, 566, 571, 575, 589], "indic": [3, 4, 5, 15, 19, 28, 29, 32, 37, 43, 45, 54, 60, 66, 67, 81, 82, 89, 99, 106, 107, 125, 126, 127, 128, 129, 130, 131, 157, 158, 164, 165, 167, 176, 177, 193, 194, 201, 210, 224, 225, 256, 262, 273, 283, 297, 305, 311, 313, 323, 325, 329, 334, 343, 349, 358, 403, 411, 413, 414, 416, 417, 421, 439, 461, 468, 470, 481, 483, 485, 487, 489, 491, 500, 507, 509, 523, 525, 527, 529, 535, 537, 541, 543, 545, 547, 549, 557, 586, 589, 591], "can": [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 84, 88, 98, 99, 106, 108, 110, 112, 113, 116, 119, 136, 139, 147, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 182, 194, 201, 202, 211, 212, 232, 233, 234, 237, 253, 263, 269, 273, 282, 288, 297, 300, 305, 306, 307, 310, 311, 312, 313, 314, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 343, 349, 350, 351, 355, 358, 369, 394, 398, 399, 403, 406, 411, 412, 413, 414, 416, 417, 421, 422, 437, 438, 449, 456, 461, 462, 474, 500, 505, 510, 535, 537, 541, 543, 548, 549, 555, 557, 560, 586, 591], "share": [3, 18, 24, 33, 37, 54, 60, 67, 154, 158, 160, 164, 175, 176, 177, 201, 215, 216, 239, 240, 249, 250, 253, 254, 349, 388, 389, 394, 395, 500], "same": [3, 5, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 28, 29, 32, 33, 34, 36, 37, 42, 43, 45, 53, 54, 57, 59, 60, 64, 66, 67, 74, 76, 80, 81, 84, 89, 97, 99, 106, 107, 147, 152, 155, 156, 158, 161, 162, 163, 164, 165, 168, 172, 175, 176, 177, 182, 183, 194, 201, 211, 213, 214, 225, 232, 233, 249, 250, 251, 253, 254, 262, 269, 281, 288, 305, 306, 307, 308, 311, 313, 314, 317, 320, 323, 324, 325, 327, 329, 340, 341, 349, 350, 355, 357, 369, 370, 371, 386, 387, 388, 389, 390, 394, 395, 401, 402, 406, 411, 437, 438, 449, 474, 481, 483, 485, 487, 489, 491, 500, 501, 505, 510, 543, 545, 547, 549, 555, 560, 563], "buffer": [3, 8, 10, 13, 17, 18, 19, 25, 37, 59, 67, 166, 167, 174, 175, 176, 215, 216, 224, 225, 232, 233, 239, 240, 242, 243, 244, 245, 247, 248, 251, 252, 253, 255, 256, 260, 261, 262, 264, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 295, 296, 298, 323, 324, 329, 340, 343, 349, 355, 361, 369, 370, 377, 379, 381, 383, 386, 390, 392, 394, 400, 402, 407, 409, 411, 412, 419, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 450, 452, 454, 456, 457, 459, 500, 541, 543, 586, 587], "In": [3, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 42, 43, 53, 54, 57, 58, 59, 60, 61, 63, 64, 67, 81, 82, 112, 139, 154, 155, 156, 160, 162, 163, 164, 166, 168, 173, 174, 175, 177, 178, 194, 211, 213, 214, 222, 223, 224, 237, 242, 245, 251, 252, 255, 256, 259, 264, 267, 268, 270, 274, 276, 278, 284, 292, 295, 296, 305, 306, 317, 320, 323, 324, 330, 340, 349, 361, 369, 370, 377, 379, 380, 381, 382, 383, 386, 387, 390, 392, 398, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 426, 427, 432, 437, 438, 441, 452, 453, 456, 459, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 500, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 559, 562, 564, 566, 568, 571, 573, 575, 577, 581, 586, 587, 589, 591], "help": [3, 24, 37, 93, 153, 175, 176, 253, 255, 256, 264, 270, 292, 295, 349, 394, 500], "reduc": [3, 15, 16, 18, 19, 24, 27, 29, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 67, 125, 126, 127, 128, 129, 130, 131, 156, 159, 161, 172, 232, 233, 259, 267, 300, 329, 349, 398, 399, 407, 500, 549, 601], "footprint": [3, 18, 54, 168, 172, 232, 233, 349, 500], "improv": [3, 13, 15, 20, 25, 27, 32, 34, 42, 54, 57, 59, 60, 64, 74, 99, 106, 107, 139, 177, 259, 305, 349, 363, 398, 500, 549], "local": [3, 18, 155, 174, 184, 185, 224, 225, 246, 247, 249, 250, 254, 277, 321, 349, 376, 385, 388, 389, 395, 431, 437, 500, 530, 531, 532, 533, 560, 600], "But": [3, 24, 63, 259, 349, 355, 398, 413, 414, 415, 416, 417, 418, 500], "sinc": [3, 15, 16, 28, 36, 45, 63, 158, 175, 176, 177, 178, 179, 194, 253, 259, 268, 269, 273, 284, 305, 330, 349, 394, 398, 409, 411, 421, 437, 438, 441, 461, 500], "mai": [3, 7, 13, 14, 15, 19, 22, 23, 24, 25, 29, 31, 32, 33, 34, 37, 41, 43, 45, 53, 54, 59, 63, 65, 147, 148, 154, 155, 156, 160, 161, 162, 172, 175, 176, 178, 179, 200, 201, 202, 208, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 305, 308, 312, 323, 329, 334, 335, 341, 349, 355, 358, 371, 377, 379, 381, 383, 385, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 411, 419, 421, 423, 425, 427, 429, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 468, 470, 481, 483, 485, 487, 489, 491, 500, 507, 509, 513, 515, 517, 523, 525, 527, 529, 535, 537, 541, 543, 549, 556, 562, 568, 589, 591, 592], "have": [3, 4, 7, 10, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 32, 34, 37, 42, 43, 53, 58, 59, 61, 63, 64, 67, 81, 89, 147, 148, 152, 155, 156, 158, 159, 161, 162, 168, 172, 174, 177, 179, 288, 305, 307, 311, 312, 313, 323, 324, 325, 329, 334, 335, 339, 340, 349, 353, 355, 358, 369, 370, 398, 406, 411, 421, 437, 449, 456, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 500, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 560, 562, 563, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "global": [3, 18, 32, 159, 213, 214, 365, 366, 376, 500, 586], "view": [3, 62, 147, 148, 164, 261, 262, 288, 349, 401, 402, 449, 500], "user": [3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 19, 20, 24, 25, 26, 27, 29, 33, 36, 37, 53, 57, 58, 59, 61, 63, 64, 67, 106, 154, 156, 157, 159, 160, 162, 163, 168, 170, 174, 175, 176, 177, 205, 206, 213, 214, 225, 232, 233, 242, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 264, 267, 269, 270, 274, 276, 278, 280, 282, 284, 288, 292, 295, 296, 320, 323, 324, 329, 340, 349, 353, 355, 358, 361, 369, 370, 377, 385, 386, 387, 388, 389, 392, 394, 395, 401, 402, 403, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 423, 427, 432, 436, 437, 438, 441, 449, 456, 459, 500, 519, 521, 541, 548, 555, 582], "": [3, 5, 6, 10, 13, 15, 16, 18, 19, 22, 23, 24, 25, 26, 28, 29, 33, 34, 36, 37, 43, 45, 53, 54, 57, 58, 59, 61, 63, 64, 65, 67, 89, 95, 99, 106, 107, 114, 115, 147, 153, 154, 160, 162, 166, 172, 175, 176, 177, 200, 208, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 305, 323, 324, 329, 330, 349, 351, 355, 357, 369, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 398, 400, 401, 402, 403, 405, 406, 407, 409, 411, 412, 413, 414, 416, 417, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 459, 461, 500, 541, 549, 555], "applic": [3, 10, 11, 12, 14, 15, 16, 18, 19, 24, 25, 27, 29, 31, 32, 36, 37, 41, 42, 58, 59, 63, 65, 155, 156, 159, 173, 175, 176, 177, 178, 179, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 323, 335, 349, 363, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 500, 543], "possibl": [3, 16, 19, 20, 22, 24, 25, 26, 30, 31, 33, 34, 57, 58, 59, 60, 63, 64, 67, 154, 155, 161, 164, 166, 168, 174, 177, 288, 305, 306, 311, 313, 314, 316, 317, 318, 320, 321, 323, 325, 326, 329, 331, 333, 334, 335, 336, 337, 349, 411, 437, 449, 470, 472, 474, 481, 483, 485, 489, 491, 495, 500, 503, 505, 509, 517, 519, 521, 525, 529, 533, 537, 543, 547, 553, 562, 568, 573, 577, 589, 591], "iother": [3, 5, 10, 15, 18, 19, 20, 22, 24, 26, 28, 29, 30, 31, 32, 33, 42, 53, 58, 59, 61, 62, 63, 65, 66, 67, 89, 154, 155, 156, 157, 160, 162, 164, 165, 166, 168, 176, 177, 178, 179, 194, 205, 206, 211, 232, 233, 248, 249, 260, 261, 262, 288, 323, 329, 335, 349, 353, 355, 357, 386, 388, 398, 400, 402, 403, 411, 429, 437, 438, 449, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591], "thi": [3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 76, 77, 81, 87, 98, 99, 106, 107, 123, 139, 147, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 173, 174, 175, 176, 177, 178, 179, 194, 213, 214, 222, 223, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 305, 306, 308, 310, 317, 320, 323, 324, 329, 332, 334, 335, 340, 341, 343, 349, 351, 352, 355, 356, 358, 360, 361, 369, 370, 371, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 498, 500, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 548, 549, 551, 553, 559, 562, 564, 566, 568, 571, 573, 575, 577, 581, 582, 586, 587, 589, 591], "case": [3, 5, 7, 8, 10, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 37, 42, 45, 53, 54, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 71, 91, 98, 101, 108, 121, 122, 124, 132, 139, 147, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 168, 172, 175, 176, 177, 178, 194, 242, 249, 250, 252, 253, 259, 263, 267, 269, 274, 276, 278, 280, 284, 296, 305, 306, 311, 313, 317, 320, 323, 324, 325, 329, 335, 340, 349, 355, 358, 361, 369, 370, 377, 386, 388, 389, 392, 394, 398, 403, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 423, 427, 432, 436, 437, 441, 456, 459, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 498, 500, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 559, 562, 564, 566, 568, 571, 573, 575, 577, 581, 582, 586, 587, 589, 591], "should": [3, 5, 7, 12, 15, 16, 18, 19, 20, 22, 24, 26, 27, 29, 34, 36, 37, 45, 50, 54, 57, 58, 59, 61, 63, 64, 66, 67, 70, 72, 73, 75, 76, 80, 82, 83, 86, 88, 89, 90, 98, 99, 104, 105, 113, 116, 119, 125, 126, 127, 128, 129, 130, 131, 136, 149, 155, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176, 177, 200, 201, 208, 232, 233, 245, 246, 253, 254, 261, 263, 269, 273, 288, 305, 308, 315, 323, 330, 334, 335, 341, 343, 348, 349, 353, 355, 356, 358, 360, 367, 368, 371, 383, 385, 386, 387, 394, 395, 403, 406, 411, 412, 413, 414, 415, 416, 417, 418, 421, 437, 449, 456, 468, 470, 479, 500, 507, 509, 510, 523, 525, 527, 529, 535, 537, 541, 548, 549, 557, 559, 564, 581, 589, 591], "take": [3, 13, 14, 15, 16, 19, 24, 27, 29, 30, 31, 34, 43, 45, 53, 54, 58, 59, 62, 85, 86, 87, 89, 90, 112, 123, 125, 126, 127, 128, 129, 130, 131, 136, 156, 158, 159, 160, 177, 178, 269, 306, 317, 320, 329, 335, 349, 383, 385, 386, 411, 413, 415, 416, 417, 418, 500], "pass": [3, 4, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 29, 33, 36, 37, 45, 53, 57, 58, 59, 64, 65, 66, 67, 99, 106, 147, 154, 157, 158, 160, 162, 163, 164, 175, 176, 178, 179, 194, 213, 214, 246, 247, 253, 254, 259, 263, 265, 269, 288, 293, 294, 305, 311, 313, 318, 322, 323, 324, 329, 335, 343, 349, 353, 355, 369, 370, 385, 386, 387, 394, 395, 398, 403, 405, 406, 411, 412, 437, 449, 456, 457, 483, 485, 489, 491, 497, 499, 500, 510, 541, 549, 555, 557, 563, 579, 582, 586], "differ": [3, 5, 13, 15, 16, 18, 19, 22, 24, 25, 27, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 63, 66, 67, 70, 84, 88, 98, 112, 113, 116, 119, 134, 146, 147, 148, 149, 156, 160, 161, 162, 164, 167, 172, 175, 176, 177, 184, 185, 200, 201, 202, 208, 232, 233, 242, 249, 250, 252, 253, 254, 267, 274, 276, 278, 283, 284, 288, 296, 306, 315, 317, 320, 323, 343, 349, 355, 377, 383, 386, 388, 389, 392, 394, 395, 398, 403, 407, 411, 413, 414, 416, 417, 423, 427, 432, 437, 438, 439, 441, 449, 459, 479, 500, 510, 543, 559, 564, 581, 586], "avoid": [3, 16, 17, 22, 24, 25, 26, 31, 32, 36, 43, 58, 59, 63, 73, 74, 75, 159, 161, 175, 176, 245, 249, 250, 253, 254, 349, 383, 388, 389, 394, 395, 437, 500], "overwrit": [3, 22, 27, 29, 61, 67, 161, 163, 168, 349, 500], "which": [3, 6, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 42, 43, 45, 53, 54, 57, 58, 59, 60, 61, 63, 64, 67, 71, 80, 81, 87, 89, 90, 97, 99, 106, 107, 108, 110, 111, 123, 125, 126, 127, 128, 129, 130, 131, 139, 140, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 172, 174, 175, 176, 177, 178, 194, 197, 199, 201, 211, 253, 255, 256, 261, 262, 263, 264, 266, 267, 269, 270, 273, 281, 282, 288, 292, 295, 305, 306, 308, 311, 313, 314, 323, 325, 329, 332, 335, 336, 337, 338, 341, 348, 349, 351, 355, 356, 357, 361, 371, 394, 401, 402, 403, 406, 407, 411, 412, 413, 414, 416, 417, 421, 437, 438, 449, 456, 468, 472, 479, 481, 483, 487, 489, 493, 500, 501, 503, 507, 510, 513, 515, 519, 523, 527, 531, 535, 541, 545, 551, 557, 560, 564, 566, 571, 573, 575, 577, 581, 589], "probabl": [3, 13, 15, 43, 53, 67, 305, 329, 349, 500, 557], "caus": [3, 11, 58, 59, 349, 497, 500, 510, 541, 555, 579], "unexpect": [3, 25, 257, 258, 266, 293, 294, 308, 341, 349, 371, 396, 397, 406, 456, 457, 500], "incorrect": [3, 18, 24, 178, 179, 207, 235, 236, 265, 280, 282, 349, 405, 411, 436, 500], "result": [3, 10, 12, 13, 15, 16, 18, 20, 22, 24, 25, 28, 29, 31, 32, 34, 37, 43, 53, 54, 57, 59, 60, 61, 63, 64, 66, 67, 97, 125, 126, 127, 128, 129, 130, 131, 146, 156, 157, 158, 160, 161, 163, 166, 172, 175, 176, 177, 179, 213, 214, 225, 226, 227, 248, 253, 255, 256, 259, 261, 262, 263, 266, 269, 270, 271, 280, 283, 292, 293, 298, 300, 305, 308, 323, 329, 341, 343, 349, 371, 386, 387, 394, 398, 399, 403, 436, 438, 439, 457, 500, 543, 549, 556, 557, 560, 586], "list": [3, 6, 7, 23, 24, 34, 36, 58, 59, 65, 71, 72, 81, 82, 83, 84, 85, 86, 87, 89, 104, 105, 114, 115, 123, 125, 126, 127, 128, 129, 130, 131, 147, 148, 155, 160, 164, 169, 178, 179, 186, 189, 298, 335, 349, 356, 358, 360, 376, 411, 413, 414, 416, 417], "run": [3, 10, 12, 18, 19, 20, 23, 24, 32, 36, 57, 59, 60, 62, 63, 67, 73, 155, 175, 176, 179, 232, 233, 248, 253, 255, 256, 261, 262, 263, 264, 270, 273, 280, 282, 292, 295, 297, 298, 319, 324, 340, 341, 354, 356, 360, 367, 368, 387, 394, 398, 401, 402, 403, 404, 406, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 436, 437, 438, 456, 461], "over": [3, 13, 18, 24, 26, 30, 31, 59, 60, 62, 64, 72, 80, 82, 83, 86, 106, 107, 125, 126, 127, 128, 129, 130, 131, 159, 160, 164, 166, 175, 176, 177, 178, 253, 307, 310, 335, 337, 367, 368, 394, 413, 416, 417, 479, 559, 575, 577], "graph_handl": 4, "engin": [4, 7, 8, 10, 15, 16, 24, 27, 29, 32, 33, 35, 36, 37, 58, 59, 61, 67, 134, 154, 160, 164, 167, 175, 176, 178, 192, 200, 207, 208, 224, 225, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 303, 305, 306, 307, 309, 310, 311, 313, 314, 317, 318, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 347, 349, 351, 353, 356, 358, 360, 361, 365, 366, 367, 368, 369, 370, 371, 376, 377, 379, 381, 383, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 407, 409, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 464, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 496, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 545, 547, 549, 551, 553, 555, 557, 559, 560, 562, 563, 564, 566, 568, 569, 571, 573, 575, 577, 579, 581, 589, 591], "kind": [4, 6, 7, 10, 15, 17, 20, 24, 27, 29, 33, 34, 36, 37, 54, 57, 60, 61, 64, 154, 157, 158, 163, 164, 165, 166, 167, 175, 176, 178, 179, 184, 185, 192, 193, 204, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 225, 234, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 305, 306, 307, 311, 313, 314, 315, 317, 318, 320, 321, 323, 324, 325, 326, 329, 330, 331, 333, 334, 336, 337, 340, 351, 352, 353, 357, 358, 365, 366, 369, 370, 377, 379, 381, 383, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 588, 589, 590, 591], "engine_kind": [4, 27, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 260, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 353, 377, 379, 381, 383, 385, 386, 388, 389, 390, 392, 400, 407, 409, 411, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461], "fpmath_mod": [4, 14, 175, 178, 297, 316, 335, 365, 461, 557], "mode": [4, 10, 12, 18, 20, 22, 24, 29, 34, 36, 37, 57, 60, 66, 73, 87, 89, 90, 95, 96, 104, 105, 123, 139, 156, 157, 158, 159, 160, 163, 164, 179, 182, 183, 195, 196, 201, 202, 222, 223, 230, 231, 232, 233, 242, 243, 245, 276, 277, 278, 293, 296, 297, 298, 303, 305, 309, 314, 322, 329, 335, 353, 365, 376, 377, 378, 379, 380, 383, 392, 393, 403, 407, 408, 409, 410, 419, 420, 425, 426, 427, 428, 430, 431, 432, 433, 437, 439, 440, 441, 442, 447, 448, 452, 453, 456, 459, 460, 461, 463, 510, 557], "set_fpmath_mod": [4, 14, 37, 54, 297, 461, 557], "bool": [4, 5, 6, 7, 9, 32, 71, 72, 79, 92, 99, 106, 107, 112, 121, 125, 126, 127, 128, 129, 130, 131, 133, 138, 144, 147, 151, 170, 175, 176, 177, 253, 257, 258, 259, 263, 264, 280, 281, 288, 295, 298, 323, 365, 394, 396, 397, 398, 403, 415, 418, 436, 437, 449, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591], "apply_to_int": [4, 54, 297, 298, 305, 353, 461, 557], "fals": [4, 5, 7, 12, 48, 53, 71, 72, 79, 92, 98, 99, 106, 107, 112, 121, 125, 126, 127, 128, 129, 130, 131, 133, 138, 144, 147, 151, 175, 176, 253, 255, 256, 264, 270, 288, 292, 295, 394, 415, 418, 449, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591], "get_fpmath_mod": [4, 557], "statu": [4, 7, 24, 25, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 175, 176, 236, 248, 249, 253, 260, 262, 269, 271, 280, 293, 294, 298, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 351, 353, 355, 356, 357, 358, 360, 361, 365, 366, 369, 371, 388, 394, 400, 402, 411, 436, 456, 457, 498], "add_op": [4, 37, 255, 256, 270, 292, 353, 413, 414, 416, 417], "op": [4, 7, 10, 13, 16, 32, 35, 39, 40, 42, 46, 49, 50, 51, 53, 58, 59, 60, 72, 77, 99, 105, 106, 107, 153, 175, 176, 179, 202, 205, 206, 207, 213, 214, 236, 243, 244, 245, 248, 252, 253, 255, 256, 264, 267, 270, 273, 274, 279, 280, 282, 286, 292, 295, 297, 298, 303, 305, 308, 341, 343, 347, 353, 358, 366, 371, 376, 379, 380, 381, 382, 387, 392, 393, 394, 407, 408, 413, 414, 416, 417, 421, 423, 424, 434, 435, 436, 438, 445, 461, 549, 557, 586], "allow_except": 4, "true": [4, 5, 6, 7, 9, 12, 14, 53, 54, 59, 65, 67, 71, 72, 79, 92, 98, 99, 106, 107, 112, 121, 125, 126, 127, 128, 129, 130, 131, 133, 138, 144, 147, 151, 155, 175, 176, 177, 253, 255, 256, 270, 288, 292, 297, 355, 394, 449, 461, 510, 543, 559, 564, 582, 586], "final": [4, 15, 16, 18, 24, 34, 37, 60, 63, 174, 175, 176, 177, 184, 194, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 298, 323, 343, 353, 355, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 398, 400, 406, 407, 409, 411, 412, 413, 414, 416, 417, 419, 423, 425, 427, 430, 432, 434, 438, 439, 441, 443, 445, 447, 450, 452, 454, 456, 457, 459, 586], "is_fin": 4, "get_partit": [4, 7, 37, 255, 256, 270, 292, 358, 413, 414, 416, 417], "polici": [4, 7, 18, 53, 206, 232, 233, 298, 353, 416, 417], "fusion": [4, 15, 19, 20, 36, 67, 205, 206, 282, 299, 305, 421, 422, 461, 462], "creat": [4, 7, 8, 10, 15, 16, 18, 20, 22, 23, 24, 26, 29, 33, 34, 36, 37, 42, 43, 53, 57, 58, 59, 61, 64, 66, 67, 97, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 179, 200, 208, 212, 224, 225, 232, 233, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 305, 306, 307, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 353, 355, 356, 358, 360, 361, 367, 368, 369, 370, 371, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 460, 461, 462, 541, 543, 549, 557, 564, 579], "new": [4, 7, 19, 23, 27, 36, 37, 60, 167, 170, 175, 176, 184, 185, 194, 219, 253, 323, 327, 329, 349, 350, 351, 353, 355, 358, 361, 394, 413, 416, 417, 510, 543], "float": [4, 6, 10, 11, 15, 16, 17, 25, 29, 32, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 59, 60, 67, 74, 75, 87, 123, 162, 163, 166, 167, 172, 175, 176, 179, 182, 183, 190, 195, 196, 198, 209, 225, 230, 231, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 303, 305, 306, 308, 309, 314, 317, 320, 321, 323, 331, 333, 334, 335, 339, 341, 353, 357, 365, 371, 376, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 412, 414, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 549, 551, 553, 557, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "point": [4, 10, 11, 15, 16, 17, 22, 23, 24, 25, 29, 32, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 59, 60, 67, 87, 89, 123, 160, 162, 163, 166, 172, 174, 175, 179, 182, 183, 190, 195, 196, 198, 209, 225, 230, 231, 259, 273, 297, 303, 305, 309, 323, 329, 334, 335, 353, 357, 376, 387, 398, 399, 401, 402, 403, 421, 422, 438, 461, 462, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 549, 557, 559, 589, 591], "math": [4, 10, 32, 37, 179, 195, 196, 250, 261, 262, 288, 303, 305, 309, 335, 353, 376, 389, 449], "all": [4, 5, 7, 10, 14, 15, 16, 18, 22, 23, 24, 26, 29, 32, 33, 34, 36, 42, 43, 45, 50, 53, 54, 58, 60, 63, 67, 77, 80, 82, 84, 85, 86, 112, 125, 126, 127, 128, 129, 130, 131, 136, 139, 147, 155, 158, 159, 160, 162, 163, 164, 166, 168, 172, 173, 174, 175, 176, 177, 178, 179, 201, 202, 222, 223, 225, 232, 233, 253, 255, 256, 261, 262, 263, 264, 269, 270, 273, 280, 282, 292, 295, 297, 305, 306, 307, 316, 317, 320, 323, 324, 330, 334, 335, 338, 343, 351, 353, 355, 356, 369, 370, 394, 398, 401, 402, 403, 411, 412, 413, 414, 415, 416, 417, 418, 421, 436, 438, 456, 461, 468, 470, 472, 481, 483, 485, 487, 489, 491, 503, 507, 509, 513, 515, 517, 519, 523, 525, 527, 529, 535, 537, 543, 548, 555, 559, 560, 579, 586, 589, 591], "inherit": [4, 63, 282, 323, 353, 438], "set": [4, 6, 7, 8, 10, 12, 14, 15, 16, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 32, 36, 37, 41, 53, 54, 57, 59, 60, 62, 63, 64, 67, 71, 81, 99, 106, 107, 121, 125, 126, 127, 128, 129, 130, 131, 136, 139, 159, 160, 162, 164, 166, 174, 175, 176, 178, 179, 186, 189, 243, 244, 248, 249, 253, 255, 256, 261, 262, 270, 272, 275, 282, 283, 284, 290, 292, 297, 298, 305, 307, 311, 313, 316, 318, 320, 322, 323, 324, 326, 327, 329, 331, 333, 334, 335, 340, 341, 342, 343, 350, 351, 353, 357, 361, 369, 370, 379, 381, 386, 387, 388, 394, 412, 413, 414, 415, 417, 418, 419, 425, 436, 437, 438, 439, 441, 452, 461, 510, 541, 543, 549, 557, 582, 585, 586], "enabl": [4, 10, 14, 15, 18, 19, 20, 24, 27, 29, 30, 31, 32, 33, 34, 36, 41, 57, 60, 61, 62, 63, 64, 65, 67, 154, 155, 159, 160, 166, 170, 177, 179, 242, 252, 255, 256, 267, 270, 274, 276, 278, 284, 292, 296, 298, 323, 335, 351, 365, 377, 386, 387, 392, 403, 407, 411, 414, 421, 423, 427, 432, 441, 459, 461, 541], "automat": [4, 10, 36, 63, 159, 185, 193, 194, 210, 211, 280, 436, 479, 581], "down": [4, 10, 14, 17, 29, 37, 42, 45, 63, 175, 177, 178, 438], "convers": [4, 10, 14, 16, 17, 29, 32, 39, 45, 47, 49, 50, 51, 55, 63, 134, 175, 176, 195, 196, 230, 231], "promot": 4, "speedup": [4, 14, 438], "lower": [4, 10, 11, 16, 20, 28, 29, 32, 37, 54, 57, 60, 63, 78, 79, 155, 157, 158, 163, 177, 178, 194], "precis": [4, 10, 11, 16, 17, 25, 29, 32, 54, 58, 60, 61, 63, 67, 152, 162, 166, 172, 175, 176, 177, 190, 198, 209, 253, 259, 263, 301, 305, 308, 341, 371, 394, 398, 399, 403, 543, 557], "data": [4, 5, 8, 11, 14, 15, 16, 17, 18, 19, 24, 25, 28, 36, 37, 45, 58, 59, 63, 160, 167, 172, 174, 179, 190, 194, 198, 207, 209, 211, 220, 221, 222, 223, 224, 225, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 300, 303, 305, 308, 309, 310, 314, 315, 320, 323, 330, 331, 332, 333, 334, 336, 339, 341, 342, 343, 353, 355, 361, 371, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 464, 501, 519, 521, 541, 543, 549, 557, 563, 571, 573, 581, 585, 586, 587, 589, 601], "type": [4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 33, 37, 45, 58, 59, 60, 160, 167, 172, 173, 177, 178, 179, 190, 197, 198, 199, 207, 209, 213, 214, 217, 223, 224, 225, 236, 241, 248, 249, 253, 257, 258, 259, 266, 269, 280, 282, 297, 298, 303, 304, 305, 309, 315, 316, 320, 323, 324, 329, 334, 340, 342, 343, 346, 353, 355, 358, 361, 362, 369, 370, 383, 387, 388, 394, 396, 397, 398, 406, 411, 412, 414, 421, 436, 438, 456, 461, 464, 501, 510, 519, 521, 541, 543, 549, 557, 560, 585, 586, 587], "when": [4, 5, 8, 10, 11, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 175, 176, 177, 178, 179, 194, 200, 201, 205, 206, 208, 211, 213, 214, 232, 233, 253, 261, 265, 266, 305, 323, 324, 329, 330, 335, 341, 343, 351, 355, 371, 394, 401, 402, 405, 406, 411, 437, 438, 501, 541, 549, 557, 586], "avail": [4, 11, 14, 21, 24, 25, 29, 30, 32, 36, 43, 53, 54, 58, 62, 65, 67, 125, 126, 127, 128, 129, 130, 131, 147, 156, 160, 162, 178, 179, 207, 235, 236, 242, 248, 249, 260, 261, 262, 329, 377, 388, 400, 401, 402, 412, 437, 456, 559], "enforc": [4, 10, 12, 59], "compli": [4, 14, 438], "specifi": [4, 6, 10, 11, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 29, 31, 34, 36, 37, 42, 43, 45, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 80, 82, 87, 88, 89, 90, 95, 96, 97, 98, 99, 104, 105, 113, 114, 115, 116, 119, 123, 125, 126, 127, 128, 129, 130, 131, 136, 139, 146, 147, 148, 149, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 172, 175, 176, 178, 179, 194, 201, 202, 213, 214, 232, 233, 246, 247, 249, 250, 253, 254, 261, 262, 263, 266, 280, 282, 305, 306, 308, 317, 320, 323, 324, 335, 340, 341, 343, 349, 358, 367, 368, 369, 370, 371, 385, 386, 388, 389, 394, 395, 401, 402, 403, 406, 411, 412, 413, 414, 415, 416, 417, 418, 421, 436, 437, 456, 461, 497, 510, 519, 521, 541, 549, 555, 557, 560, 563, 579, 586, 587], "boolean": [4, 32, 37, 53, 54, 98, 136, 190, 198, 305, 357, 557], "flag": [4, 20, 24, 32, 36, 37, 41, 54, 57, 64, 160, 164, 178, 179, 186, 187, 188, 189, 213, 214, 224, 225, 228, 229, 238, 266, 298, 306, 308, 317, 320, 329, 334, 335, 338, 341, 343, 351, 353, 358, 365, 366, 371, 379, 380, 406, 437, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 551, 553, 555, 560, 562, 564, 566, 568, 571, 573, 575, 577, 579, 581, 582, 586, 587, 589, 591], "setter": [4, 10, 27, 31, 37, 175], "control": [4, 10, 17, 18, 19, 20, 23, 24, 29, 32, 57, 64, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 99, 104, 105, 112, 114, 115, 147, 155, 174, 175, 176, 253, 305, 306, 317, 320, 327, 335, 350, 351, 353, 394, 463, 579], "whether": [4, 29, 33, 37, 43, 63, 66, 71, 72, 99, 106, 112, 121, 154, 305, 323, 324, 329, 353, 369, 386, 437, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 551, 553, 555, 557, 562, 564, 566, 568, 571, 573, 575, 577, 579, 581, 586, 587, 589, 591], "arithmet": [4, 32, 37, 128, 146, 160, 166, 175, 263, 305, 353, 403, 557], "integr": [4, 11, 19, 24, 32, 37, 54, 59, 65, 160, 255, 256, 264, 270, 292, 295, 297, 335, 353, 461], "oper": [4, 5, 6, 7, 10, 12, 13, 15, 16, 18, 19, 20, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 172, 175, 176, 177, 178, 185, 201, 202, 203, 204, 205, 206, 207, 213, 214, 235, 236, 237, 245, 253, 255, 256, 264, 267, 269, 270, 273, 277, 282, 292, 295, 297, 299, 300, 305, 306, 307, 308, 314, 317, 320, 323, 324, 329, 331, 333, 341, 342, 343, 353, 355, 356, 357, 358, 365, 369, 371, 379, 380, 383, 386, 387, 394, 398, 406, 407, 411, 412, 413, 414, 416, 417, 421, 422, 430, 436, 437, 438, 456, 457, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591, 599], "get": [4, 13, 17, 22, 23, 27, 35, 42, 43, 53, 58, 59, 160, 162, 177, 178, 255, 256, 259, 266, 269, 270, 271, 288, 292, 293, 300, 314, 334, 335, 341, 353, 355, 361, 376, 398, 411, 437, 449, 457, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591], "add": [4, 6, 14, 22, 24, 29, 38, 53, 58, 61, 63, 65, 67, 71, 72, 76, 81, 82, 83, 84, 85, 86, 114, 115, 161, 163, 175, 176, 178, 184, 185, 203, 213, 214, 228, 229, 247, 253, 255, 256, 261, 270, 282, 292, 300, 302, 323, 353, 357, 386, 387, 394, 401, 402, 413, 414, 438, 543], "dag": [4, 42, 43, 53, 54, 353], "failur": [4, 23, 178, 179, 201, 323, 353, 413, 416, 417, 498, 543], "ha": [4, 5, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 28, 32, 36, 37, 43, 45, 60, 63, 67, 97, 99, 106, 107, 108, 155, 156, 158, 159, 160, 167, 172, 175, 176, 178, 179, 194, 211, 213, 214, 252, 253, 262, 263, 267, 305, 323, 324, 327, 329, 335, 340, 350, 353, 355, 363, 369, 370, 386, 392, 394, 398, 401, 403, 406, 407, 411, 412, 437, 438, 456, 501, 543, 559], "alreadi": [4, 36, 59, 160, 175, 327, 350, 353, 411, 437, 559], "been": [4, 15, 23, 24, 172, 305, 323, 324, 329, 340, 353, 369, 370, 438, 541, 559], "ad": [4, 6, 17, 18, 29, 37, 58, 63, 64, 73, 74, 75, 76, 99, 106, 107, 177, 194, 201, 230, 231, 282, 329, 343, 353, 357, 413, 414, 416, 417, 438, 586], "cannot": [4, 10, 15, 33, 37, 39, 59, 63, 67, 134, 156, 157, 162, 164, 167, 173, 177, 178, 207, 212, 232, 233, 234, 236, 259, 323, 335, 353, 398, 497, 510, 541, 543, 555, 564, 579], "schema": [4, 207, 212, 234, 236, 353], "check": [4, 7, 10, 16, 20, 22, 29, 34, 37, 57, 59, 61, 66, 67, 134, 157, 164, 165, 175, 176, 178, 179, 201, 202, 246, 248, 249, 253, 254, 255, 256, 259, 262, 263, 265, 266, 269, 270, 271, 273, 292, 293, 298, 305, 323, 324, 329, 351, 353, 358, 369, 385, 386, 388, 394, 395, 398, 402, 403, 405, 411, 412, 413, 414, 415, 416, 417, 418, 421, 437, 479, 498, 510, 543, 555, 557, 559, 564, 569, 581], "eg": [4, 5, 205, 206, 297, 353, 355, 461], "number": [4, 5, 7, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 28, 29, 32, 36, 37, 43, 53, 54, 57, 58, 59, 64, 67, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 89, 90, 99, 114, 115, 123, 153, 155, 158, 159, 161, 164, 167, 174, 175, 176, 177, 178, 179, 194, 201, 224, 225, 249, 250, 251, 253, 254, 257, 258, 261, 262, 276, 288, 291, 305, 307, 308, 310, 311, 312, 313, 315, 323, 324, 325, 327, 329, 330, 335, 339, 340, 341, 343, 349, 350, 353, 355, 356, 357, 358, 360, 370, 371, 385, 386, 387, 388, 389, 390, 394, 395, 396, 397, 398, 427, 436, 449, 454, 481, 483, 485, 487, 489, 491, 497, 501, 541, 543, 545, 547, 549, 557, 560, 571, 573, 575, 577, 582, 586], "attribut": [4, 6, 19, 32, 37, 42, 53, 54, 58, 59, 159, 160, 174, 178, 179, 201, 202, 213, 214, 224, 253, 263, 273, 282, 297, 303, 306, 307, 310, 311, 313, 314, 317, 318, 320, 321, 322, 325, 326, 328, 329, 331, 332, 333, 334, 336, 337, 339, 342, 343, 353, 357, 376, 381, 382, 387, 392, 393, 394, 402, 403, 407, 408, 413, 415, 416, 417, 418, 421, 423, 424, 434, 435, 438, 445, 446, 461, 464, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 501, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 549, 551, 553, 556, 557, 560, 562, 563, 564, 566, 568, 571, 573, 575, 577, 581, 584, 585, 586, 589, 591], "etc": [4, 5, 12, 19, 23, 28, 42, 53, 67, 159, 160, 162, 163, 177, 178, 179, 300, 315, 353, 355, 413, 416, 417, 543, 560], "allow": [4, 10, 11, 14, 16, 17, 19, 24, 26, 29, 30, 31, 32, 36, 37, 59, 60, 61, 65, 67, 70, 88, 98, 113, 116, 119, 136, 149, 158, 168, 172, 174, 176, 183, 195, 196, 254, 282, 305, 307, 308, 323, 326, 331, 333, 341, 371, 395, 438, 456, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 543, 545, 547, 551, 553, 562, 564, 566, 568, 571, 573, 575, 577, 581, 586, 587, 589, 591], "throw": [4, 10, 25, 156, 175, 176, 242, 248, 249, 253, 257, 258, 259, 260, 262, 263, 266, 269, 271, 273, 280, 282, 293, 294, 370, 377, 388, 394, 396, 397, 398, 400, 402, 403, 406, 411, 412, 421, 436, 456, 457, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 498, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 551, 553, 559, 562, 564, 566, 568, 571, 573, 575, 577, 581, 586, 587, 589, 591], "fail": [4, 23, 160, 178, 179, 207, 235, 236, 259, 263, 269, 271, 273, 293, 294, 398, 403, 411, 412, 421, 456, 457, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 498, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 551, 553, 559, 562, 564, 566, 568, 571, 573, 575, 577, 581, 586, 587, 589, 591], "success": [4, 66, 175, 176, 207, 235, 236, 253, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 353, 355, 356, 357, 358, 360, 361, 369, 371, 394, 438, 559], "describ": [4, 5, 8, 11, 14, 15, 16, 17, 19, 28, 32, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 59, 60, 63, 104, 105, 155, 162, 164, 167, 173, 174, 176, 177, 193, 194, 210, 259, 288, 300, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 353, 355, 356, 357, 358, 360, 361, 369, 371, 386, 398, 411, 412, 437, 449, 456, 477, 496, 540, 542, 543, 554, 558, 569, 578, 583, 584], "error": [4, 15, 16, 24, 25, 30, 31, 37, 43, 53, 54, 59, 60, 63, 156, 175, 176, 178, 248, 249, 253, 259, 260, 262, 269, 280, 293, 294, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 348, 349, 353, 355, 356, 357, 358, 360, 361, 365, 369, 371, 388, 394, 398, 400, 402, 411, 436, 437, 456, 457, 548, 557], "otherwis": [4, 5, 13, 17, 20, 24, 30, 32, 34, 59, 79, 92, 101, 125, 126, 127, 128, 129, 130, 131, 133, 138, 144, 151, 156, 175, 176, 213, 214, 253, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 353, 355, 356, 357, 358, 360, 361, 369, 371, 394, 493, 510, 543, 586], "mean": [4, 5, 14, 15, 16, 22, 26, 27, 28, 34, 36, 37, 43, 59, 66, 73, 74, 75, 81, 82, 83, 84, 85, 86, 89, 90, 99, 106, 107, 110, 111, 114, 115, 128, 147, 148, 155, 157, 158, 161, 162, 165, 166, 167, 168, 175, 176, 177, 184, 185, 197, 199, 200, 208, 213, 214, 243, 245, 253, 269, 272, 275, 281, 306, 308, 311, 313, 314, 317, 320, 323, 329, 331, 341, 351, 353, 358, 371, 379, 383, 394, 406, 411, 412, 419, 425, 437, 456, 472, 474, 481, 483, 485, 487, 489, 491, 493, 495, 501, 503, 505, 519, 521, 543], "finish": [4, 37, 175, 176, 253, 255, 256, 264, 270, 292, 295, 338, 353, 394, 413, 414, 416, 417, 579, 582], "readi": [4, 37, 59, 343, 353, 411, 413, 416, 417, 437, 586], "similarli": [4, 43, 53, 63, 64, 157, 164, 353, 437], "un": [4, 353], "also": [4, 7, 15, 18, 19, 20, 24, 27, 28, 29, 30, 31, 32, 36, 37, 42, 43, 53, 58, 60, 64, 65, 67, 108, 155, 159, 160, 162, 170, 174, 175, 176, 177, 178, 194, 212, 224, 234, 242, 253, 263, 276, 278, 288, 296, 305, 306, 307, 310, 311, 314, 315, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 355, 358, 371, 377, 386, 394, 403, 406, 411, 412, 413, 414, 415, 416, 417, 418, 427, 432, 437, 449, 456, 459, 541, 543, 549, 557, 560], "filter": [4, 23, 28, 160, 177, 178, 353], "claim": [4, 353, 429], "intern": [4, 7, 18, 24, 30, 31, 32, 33, 37, 175, 176, 178, 219, 242, 247, 252, 253, 267, 274, 276, 278, 284, 288, 296, 305, 353, 377, 392, 394, 401, 407, 412, 416, 417, 423, 427, 432, 441, 449, 456, 459], "capabl": [4, 10, 15, 30, 32, 36, 45, 179, 353], "store": [4, 8, 16, 18, 19, 28, 29, 43, 53, 54, 58, 60, 63, 147, 154, 159, 160, 164, 166, 175, 176, 177, 249, 253, 262, 273, 297, 308, 323, 341, 371, 388, 394, 398, 402, 411, 413, 414, 416, 417, 421, 461, 510, 541, 556], "dnnl_dim_t": [5, 225, 246, 254, 265, 298, 305, 308, 312, 317, 321, 323, 336, 341, 343, 365, 371, 385, 395, 405, 541], "dim": [5, 15, 16, 67, 162, 167, 175, 176, 177, 194, 224, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 305, 323, 329, 355, 377, 379, 381, 383, 385, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 501, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 557, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 586, 587, 589, 591, 594, 595, 596, 597, 598], "enum": [5, 6, 7, 174, 177, 298, 304, 305, 312, 315, 316, 323, 324, 329, 330, 334, 335, 338, 340, 342, 345, 346, 355, 357, 358, 359, 365, 366, 369, 370, 372, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 497, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 541, 544, 546, 550, 552, 555, 561, 563, 565, 567, 570, 572, 574, 576, 579, 580, 588, 590], "data_typ": [5, 15, 16, 63, 162, 167, 175, 176, 177, 178, 179, 224, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 305, 323, 365, 377, 379, 381, 383, 386, 387, 388, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 403, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 501, 519, 521, 541, 543, 549, 557, 586, 587], "layout_typ": [5, 37, 255, 256, 264, 270, 292, 295, 298, 355, 413, 414, 415, 416, 417, 418, 501], "property_typ": [5, 256, 298, 414], "dnnl_graph_logical_tensor_t": [5, 298, 349, 355, 357, 358, 361], "c_data": [5, 280, 436], "dtype": [5, 298, 355], "int32_t": [5, 63, 167, 257, 258, 259, 262, 273, 298, 305, 308, 323, 329, 341, 355, 365, 371, 396, 397, 398, 421, 549], "ndim": [5, 33, 64, 167, 177, 179, 194, 246, 254, 298, 305, 323, 355, 370, 385, 395, 501], "ltype": [5, 298, 355], "ptype": [5, 298, 355], "undef": [5, 15, 175, 176, 178, 179, 185, 198, 199, 200, 201, 209, 210, 211, 212, 218, 220, 222, 224, 226, 228, 241, 253, 255, 256, 270, 280, 292, 298, 394, 413, 414, 416, 417, 436, 437, 438, 468, 470, 472, 474, 476, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 545, 547, 549, 551, 553, 560, 562, 571, 573, 575, 577, 589, 591], "adim": [5, 266, 298, 543], "stride": [5, 10, 15, 16, 28, 29, 37, 42, 67, 71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 134, 174, 178, 179, 193, 194, 197, 199, 201, 202, 210, 211, 224, 225, 246, 247, 248, 249, 250, 252, 254, 255, 256, 264, 267, 269, 270, 281, 282, 283, 288, 292, 295, 298, 305, 311, 313, 323, 325, 355, 385, 386, 387, 388, 389, 392, 395, 407, 411, 413, 414, 416, 417, 421, 437, 438, 439, 449, 461, 481, 483, 485, 487, 489, 491, 501, 543, 545, 547, 549, 560], "lid": 5, "get_dim": [5, 177, 259, 273, 282, 297, 398, 421, 438, 461, 543], "get_id": [5, 7, 255, 256, 264, 270, 292, 295], "get_data_typ": [5, 175, 176, 253, 255, 256, 264, 270, 282, 292, 295, 394, 438, 543], "get_property_typ": 5, "get_layout_typ": 5, "get_layout_id": 5, "get_strid": [5, 177, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 543, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_mem_s": [5, 37], "is_equ": [5, 298, 355], "lt": [5, 8, 298, 349], "integ": [5, 13, 16, 30, 32, 45, 60, 63, 67, 135, 160, 175, 182, 183, 186, 189, 190, 198, 209, 259, 261, 305, 308, 341, 357, 371, 387, 398, 541, 557], "repres": [5, 6, 7, 15, 16, 19, 28, 29, 37, 45, 63, 78, 81, 97, 110, 111, 139, 140, 153, 160, 167, 175, 178, 255, 256, 257, 258, 264, 270, 292, 295, 300, 349, 353, 358, 386, 396, 397, 401, 402, 406, 411, 412, 438, 456, 541], "dimens": [5, 7, 13, 15, 16, 18, 19, 20, 22, 26, 28, 29, 34, 37, 42, 43, 44, 45, 53, 54, 57, 60, 61, 64, 67, 71, 72, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 97, 99, 104, 106, 107, 110, 111, 112, 114, 115, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 136, 139, 147, 148, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 179, 193, 194, 201, 210, 211, 217, 224, 225, 241, 242, 243, 244, 245, 251, 252, 253, 260, 263, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 305, 307, 308, 310, 311, 312, 313, 320, 323, 325, 333, 341, 343, 355, 358, 361, 370, 371, 377, 379, 381, 383, 390, 392, 394, 398, 400, 401, 402, 403, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 459, 461, 479, 481, 483, 485, 487, 489, 491, 501, 541, 543, 545, 547, 549, 557, 566, 568, 586, 587], "size": [5, 9, 15, 16, 18, 20, 22, 25, 27, 28, 32, 36, 37, 43, 53, 54, 57, 59, 60, 63, 64, 71, 72, 76, 89, 104, 105, 114, 115, 139, 156, 157, 158, 161, 163, 167, 168, 174, 175, 176, 177, 190, 194, 198, 201, 202, 211, 224, 225, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 298, 305, 307, 308, 321, 323, 324, 329, 330, 336, 341, 343, 348, 351, 355, 356, 360, 366, 369, 371, 377, 379, 381, 383, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 401, 402, 403, 407, 409, 411, 419, 423, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 459, 461, 501, 503, 505, 531, 533, 541, 543, 549, 557, 560, 571, 573, 586], "implement": [5, 10, 11, 12, 15, 16, 18, 19, 24, 25, 30, 32, 36, 37, 45, 51, 58, 59, 60, 63, 87, 89, 90, 95, 112, 123, 153, 155, 156, 159, 170, 172, 173, 177, 179, 182, 183, 190, 198, 207, 213, 214, 219, 224, 225, 235, 236, 242, 245, 248, 249, 252, 255, 256, 260, 262, 263, 264, 266, 267, 269, 270, 274, 282, 284, 292, 295, 329, 335, 341, 371, 377, 379, 380, 383, 385, 386, 388, 389, 392, 395, 400, 401, 402, 403, 406, 407, 411, 412, 419, 420, 423, 437, 441, 456, 510, 541, 559, 560, 582], "ar": [5, 10, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 89, 90, 97, 99, 106, 107, 112, 114, 115, 123, 125, 126, 127, 128, 129, 130, 131, 136, 139, 146, 147, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 178, 179, 194, 201, 211, 222, 223, 224, 225, 232, 233, 242, 252, 253, 255, 256, 259, 261, 262, 263, 264, 267, 268, 270, 273, 274, 276, 278, 282, 284, 288, 292, 295, 296, 297, 305, 306, 307, 308, 311, 313, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 329, 333, 334, 335, 336, 337, 340, 341, 342, 343, 351, 355, 369, 370, 371, 377, 383, 385, 386, 387, 392, 394, 398, 401, 402, 403, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 427, 429, 432, 437, 438, 441, 449, 456, 459, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 501, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 548, 549, 551, 553, 555, 557, 560, 562, 563, 564, 566, 568, 571, 573, 575, 577, 581, 582, 585, 586, 589, 591], "forc": [5, 14, 53, 67, 541], "limit": [5, 15, 16, 23, 25, 30, 31, 58, 159, 160, 179, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 351, 377, 379, 381, 383, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 541], "length": [5, 43, 53, 54, 121, 122, 261, 262, 288, 305, 357, 449, 541], "copi": [5, 10, 15, 147, 148, 162, 172, 175, 176, 225, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 323, 332, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 497, 510, 541, 543, 555, 557, 579], "layout": [5, 7, 13, 15, 22, 37, 58, 64, 67, 77, 134, 147, 148, 152, 164, 174, 175, 176, 179, 194, 197, 199, 217, 241, 242, 252, 255, 256, 262, 264, 267, 270, 273, 274, 276, 278, 284, 288, 292, 295, 296, 297, 298, 305, 323, 355, 358, 361, 377, 386, 392, 401, 402, 407, 413, 416, 417, 421, 423, 427, 432, 437, 441, 449, 459, 461, 501, 543, 549, 557], "properti": [5, 8, 10, 37, 174, 178, 200, 208, 232, 233, 259, 292, 295, 355, 398, 414, 417, 418, 429, 501], "element": [5, 15, 25, 28, 29, 32, 34, 53, 54, 59, 67, 68, 70, 78, 81, 87, 88, 89, 90, 91, 94, 95, 97, 98, 100, 102, 106, 107, 108, 109, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 141, 143, 145, 146, 147, 148, 149, 150, 152, 161, 174, 177, 179, 194, 201, 205, 206, 207, 218, 219, 235, 236, 268, 305, 307, 308, 310, 311, 313, 323, 324, 325, 339, 340, 341, 355, 357, 361, 369, 370, 371, 376, 398, 406, 410, 411, 481, 483, 485, 487, 489, 491, 501, 541, 545, 547, 549], "1": [5, 13, 14, 15, 19, 20, 22, 24, 26, 30, 32, 33, 34, 36, 42, 43, 51, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 155, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 184, 185, 186, 189, 190, 194, 197, 206, 208, 209, 211, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 305, 307, 308, 323, 329, 335, 341, 343, 355, 358, 370, 371, 377, 379, 381, 383, 385, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 425, 427, 430, 432, 434, 436, 437, 438, 439, 443, 445, 449, 450, 451, 452, 453, 456, 457, 459, 461, 476, 479, 501, 543, 549, 559, 560, 564, 581, 582], "unknown": [5, 7, 37, 215, 216, 239, 240, 249, 250, 255, 256, 270, 280, 292, 323, 355, 358, 388, 389, 403, 421, 436, 461, 501], "see": [5, 10, 15, 16, 19, 20, 21, 23, 24, 26, 29, 32, 34, 39, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 63, 64, 67, 84, 106, 157, 159, 160, 161, 164, 168, 169, 170, 173, 175, 176, 177, 178, 180, 194, 211, 212, 224, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 305, 306, 307, 310, 311, 314, 315, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 348, 369, 370, 371, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 406, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 541, 543, 549, 555, 557, 560, 563, 582, 589, 591], "dnnl_graph_unknown_ndim": [5, 255, 256, 264, 270, 292, 295, 298, 355, 501], "0": [5, 9, 13, 15, 16, 18, 22, 24, 29, 34, 36, 38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 162, 163, 164, 165, 167, 170, 173, 175, 176, 177, 178, 190, 193, 194, 197, 200, 202, 208, 209, 213, 214, 217, 221, 223, 225, 227, 234, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 305, 307, 315, 323, 324, 327, 329, 335, 343, 350, 351, 353, 355, 358, 369, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 501, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 557, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 582, 586, 589, 591], "scalar": [5, 8, 15, 160, 200, 208, 305, 308, 341, 361, 371, 501, 549], "deleg": [5, 175, 176, 253, 394], "basic": [5, 10, 15, 24, 35, 160, 162, 175, 176, 253, 269, 300, 301, 308, 315, 323, 328, 338, 355, 358, 363, 376, 394, 406, 412, 437, 456, 543, 601], "inform": [5, 15, 28, 37, 54, 58, 59, 65, 67, 156, 159, 162, 174, 177, 178, 179, 224, 257, 258, 281, 288, 323, 329, 335, 343, 349, 355, 376, 396, 397, 413, 414, 415, 416, 417, 418, 437, 449, 586, 592], "dnnl_graph_unknown_dim": [5, 298, 355, 501], "defin": [5, 10, 11, 15, 17, 19, 20, 23, 24, 26, 29, 32, 33, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 80, 81, 87, 89, 90, 101, 106, 108, 112, 123, 139, 154, 157, 158, 163, 164, 165, 166, 167, 170, 173, 174, 175, 176, 177, 190, 198, 201, 202, 246, 249, 250, 253, 254, 269, 271, 280, 292, 295, 298, 300, 305, 308, 312, 323, 329, 335, 341, 355, 371, 385, 388, 389, 394, 395, 402, 406, 411, 413, 414, 415, 416, 417, 418, 436, 438, 501, 549, 557], "zero": [5, 13, 15, 16, 20, 29, 32, 45, 50, 53, 54, 59, 60, 64, 67, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 89, 90, 108, 114, 115, 123, 139, 147, 162, 164, 167, 175, 177, 179, 213, 214, 224, 225, 245, 249, 250, 257, 258, 259, 273, 288, 297, 305, 311, 313, 318, 320, 322, 323, 329, 334, 351, 353, 383, 388, 389, 396, 397, 398, 399, 421, 422, 449, 461, 462, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 501, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 543, 545, 547, 549, 551, 553, 557, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "field": [5, 9, 42, 43, 53, 54, 178, 194, 197, 199, 261, 305, 323, 355, 465, 498, 593, 594, 595, 596, 597, 598, 599], "deduc": [5, 7, 37, 163, 358, 437, 501], "accordingli": [5, 15, 16, 177, 323, 355, 387, 412, 456, 543, 548], "alwai": [5, 13, 15, 19, 20, 24, 32, 34, 53, 57, 59, 60, 61, 63, 64, 66, 67, 162, 164, 177, 194, 305, 323, 335, 398, 406, 411, 543, 549, 557], "current": [5, 10, 13, 14, 15, 16, 20, 23, 27, 30, 31, 32, 53, 54, 58, 59, 63, 67, 156, 158, 160, 162, 164, 167, 177, 178, 179, 263, 273, 288, 297, 300, 323, 335, 351, 367, 368, 403, 421, 449, 461, 501], "support": [5, 7, 12, 14, 16, 17, 18, 19, 23, 24, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 67, 154, 155, 159, 160, 163, 165, 167, 169, 175, 176, 177, 178, 179, 186, 189, 201, 202, 213, 214, 218, 248, 249, 253, 260, 261, 262, 263, 297, 299, 300, 305, 306, 307, 308, 311, 312, 313, 314, 317, 320, 322, 323, 329, 335, 341, 343, 358, 363, 367, 368, 371, 387, 388, 394, 400, 401, 402, 403, 411, 437, 461, 474, 476, 479, 501, 505, 541, 548, 549, 557, 559, 564, 581], "neg": [5, 15, 20, 29, 32, 60, 71, 72, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 106, 107, 108, 110, 111, 114, 115, 148, 175, 176, 213, 214, 248, 253, 265, 266, 269, 293, 294, 334, 351, 387, 394, 405, 406, 411, 456, 457, 501, 560, 571, 573, 575, 577, 589, 591], "valu": [5, 6, 8, 10, 13, 14, 15, 16, 17, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 41, 43, 45, 50, 53, 59, 60, 61, 62, 63, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 154, 156, 157, 159, 160, 162, 166, 167, 172, 174, 175, 176, 177, 178, 179, 245, 249, 250, 253, 257, 258, 259, 262, 265, 266, 269, 273, 293, 294, 297, 298, 300, 304, 305, 306, 307, 308, 311, 313, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 329, 331, 333, 334, 335, 336, 337, 340, 341, 342, 343, 350, 351, 353, 355, 357, 359, 361, 369, 370, 371, 383, 387, 388, 389, 394, 396, 397, 398, 401, 402, 403, 405, 406, 411, 421, 437, 438, 456, 457, 461, 468, 470, 472, 474, 479, 481, 483, 485, 487, 489, 491, 495, 497, 501, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 533, 535, 537, 541, 543, 545, 547, 549, 553, 555, 557, 559, 560, 562, 563, 564, 568, 573, 577, 581, 585, 586, 589, 591], "opaqu": [5, 7, 10, 15, 37, 134, 157, 193, 197, 199, 210, 212, 225, 234, 355, 358, 477, 496, 501, 540, 542, 548, 554, 556, 558, 578, 583, 584], "assign": [5, 28, 243, 244, 262, 272, 275, 283, 290, 323, 379, 381, 402, 419, 425, 439, 452, 510, 543], "each": [5, 7, 15, 16, 18, 22, 28, 29, 32, 36, 37, 41, 42, 43, 53, 54, 58, 59, 60, 61, 82, 84, 85, 86, 97, 99, 125, 126, 127, 128, 129, 130, 131, 136, 146, 155, 156, 158, 161, 163, 164, 165, 167, 174, 178, 193, 201, 205, 206, 210, 232, 233, 251, 262, 269, 305, 308, 311, 313, 323, 324, 325, 329, 330, 339, 340, 341, 343, 351, 353, 355, 358, 369, 370, 371, 386, 387, 390, 398, 406, 411, 438, 481, 483, 485, 487, 489, 491, 501, 541, 543, 545, 547, 549, 557, 581, 586], "call": [5, 7, 15, 18, 21, 25, 27, 28, 29, 30, 31, 33, 36, 37, 42, 58, 59, 61, 63, 108, 154, 156, 164, 165, 175, 176, 177, 178, 253, 305, 323, 324, 330, 335, 340, 341, 343, 348, 351, 353, 356, 358, 360, 369, 370, 386, 394, 398, 401, 402, 406, 411, 412, 413, 414, 416, 417, 418, 437, 438, 456, 497, 498, 510, 541, 555, 557, 579, 582, 586], "byte": [5, 18, 25, 32, 63, 224, 225, 323, 324, 329, 355, 356, 369, 541, 543], "compar": [5, 18, 54, 59, 63, 67, 136, 172, 259, 263, 323, 355, 398, 399, 403, 437, 569], "two": [5, 18, 19, 22, 24, 28, 29, 32, 33, 36, 37, 42, 43, 45, 49, 51, 53, 54, 59, 60, 63, 67, 70, 88, 98, 112, 113, 116, 119, 134, 136, 146, 149, 154, 157, 160, 164, 174, 175, 176, 177, 178, 194, 211, 232, 233, 253, 288, 307, 315, 323, 332, 355, 392, 393, 394, 403, 406, 411, 413, 416, 417, 418, 449], "tenor": [5, 355], "equal": [5, 15, 20, 22, 26, 33, 36, 43, 48, 53, 54, 57, 59, 61, 64, 71, 89, 90, 98, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 136, 147, 154, 156, 157, 158, 163, 166, 168, 177, 184, 185, 194, 211, 256, 305, 307, 308, 323, 324, 330, 340, 341, 355, 369, 370, 371, 411, 414, 510, 541, 543, 549, 557], "decid": [5, 37, 197, 199, 255, 256, 270, 292, 355, 437, 468, 472, 481, 483, 487, 489, 493, 503, 507, 513, 515, 519, 523, 527, 531, 535, 545, 551, 566, 571, 575, 589], "reorder": [5, 16, 19, 24, 26, 27, 32, 35, 53, 58, 59, 60, 63, 67, 160, 168, 175, 176, 178, 179, 203, 218, 219, 224, 242, 246, 247, 248, 249, 250, 252, 253, 254, 259, 260, 261, 262, 265, 266, 267, 273, 274, 276, 278, 280, 281, 282, 284, 288, 296, 297, 298, 300, 302, 303, 315, 323, 328, 329, 355, 365, 376, 377, 385, 386, 387, 388, 389, 392, 394, 395, 398, 400, 401, 402, 407, 421, 423, 427, 432, 436, 438, 441, 446, 449, 459, 461, 464, 555, 600], "need": [5, 16, 18, 23, 24, 29, 33, 37, 42, 43, 53, 54, 58, 59, 99, 154, 164, 175, 176, 177, 213, 214, 225, 246, 247, 249, 250, 253, 254, 255, 256, 264, 270, 281, 282, 283, 288, 292, 295, 323, 329, 343, 353, 355, 361, 385, 388, 389, 394, 395, 406, 411, 412, 413, 414, 416, 417, 439, 449, 456, 582, 586], "below": [5, 10, 15, 19, 20, 22, 23, 24, 25, 27, 29, 30, 33, 34, 36, 41, 42, 45, 53, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 163, 164, 165, 167, 170, 173, 177, 273, 297, 300, 305, 355, 386, 411, 416, 417, 421, 437, 461, 549, 582], "circumst": [5, 7, 156, 178, 355, 358, 437], "regard": [5, 84, 355], "struct": [5, 246, 254, 280, 298, 305, 306, 307, 310, 311, 313, 314, 315, 317, 318, 320, 321, 322, 323, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 348, 349, 353, 355, 357, 358, 361, 365, 371, 372, 385, 395, 411, 436, 438], "underli": [5, 8, 33, 154, 159, 167, 319, 323, 324, 340, 341, 354, 355, 356, 360, 361, 369, 370, 412, 456, 510, 541, 555], "For": [5, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 66, 67, 87, 89, 90, 104, 105, 112, 123, 125, 126, 127, 128, 129, 130, 131, 154, 156, 158, 160, 162, 164, 168, 169, 172, 174, 175, 176, 177, 179, 194, 200, 201, 208, 211, 213, 214, 225, 242, 252, 253, 262, 267, 269, 274, 276, 278, 284, 296, 305, 306, 308, 317, 320, 323, 324, 329, 335, 340, 341, 343, 348, 355, 358, 369, 370, 371, 377, 386, 387, 392, 394, 398, 401, 402, 406, 407, 411, 412, 413, 414, 423, 427, 432, 437, 441, 456, 457, 459, 501, 541, 548, 549, 557, 560, 586], "exampl": [5, 19, 21, 23, 24, 25, 27, 28, 30, 31, 32, 36, 37, 41, 45, 58, 59, 63, 65, 87, 89, 90, 93, 112, 123, 125, 126, 127, 128, 129, 130, 131, 136, 147, 155, 173, 177, 179, 194, 200, 208, 211, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 305, 306, 317, 320, 323, 329, 335, 355, 376, 378, 380, 382, 384, 391, 393, 398, 399, 403, 404, 405, 406, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 424, 426, 428, 433, 435, 437, 440, 442, 444, 446, 448, 451, 453, 455, 456, 460, 461, 462, 463, 501, 543, 549, 557, 560, 601], "one": [5, 7, 11, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 43, 45, 47, 49, 50, 51, 53, 54, 55, 57, 59, 60, 61, 63, 64, 65, 67, 80, 82, 87, 89, 90, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 136, 147, 154, 155, 156, 157, 161, 162, 163, 164, 166, 168, 172, 175, 176, 177, 178, 179, 194, 211, 242, 252, 253, 255, 256, 262, 264, 267, 270, 274, 276, 278, 282, 284, 288, 292, 295, 296, 305, 308, 314, 315, 323, 324, 329, 340, 341, 343, 355, 358, 369, 370, 371, 377, 386, 392, 394, 398, 399, 401, 402, 406, 407, 411, 412, 414, 421, 422, 423, 427, 432, 437, 438, 441, 449, 456, 459, 461, 462, 493, 501, 543, 548, 549, 555, 563, 586, 587], "while": [5, 18, 24, 25, 28, 29, 32, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 63, 89, 112, 154, 162, 164, 172, 194, 249, 250, 267, 271, 280, 355, 358, 388, 389, 403, 407, 411, 436, 569], "underneath": [5, 42, 53, 175, 176, 253, 355, 394], "both": [5, 18, 20, 22, 23, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 42, 43, 46, 49, 50, 51, 53, 54, 57, 58, 59, 64, 67, 70, 72, 73, 75, 81, 82, 83, 84, 85, 86, 87, 88, 90, 98, 99, 106, 107, 113, 116, 119, 123, 149, 154, 155, 156, 160, 164, 166, 168, 172, 178, 194, 262, 268, 281, 284, 293, 306, 307, 314, 317, 320, 323, 335, 343, 355, 376, 401, 406, 409, 411, 412, 413, 416, 417, 421, 437, 441, 457, 543], "nhwc": [5, 28, 163, 211, 245, 269, 286, 355, 383, 411, 445], "still": [5, 16, 24, 30, 58, 164, 177, 355, 411], "op_handl": 6, "attr": [6, 10, 15, 16, 18, 29, 58, 156, 162, 179, 255, 256, 262, 263, 264, 270, 273, 282, 292, 295, 297, 298, 305, 306, 307, 310, 311, 313, 314, 317, 318, 320, 321, 322, 325, 326, 329, 331, 332, 333, 334, 336, 337, 339, 402, 403, 413, 414, 415, 416, 417, 418, 421, 438, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 549, 551, 553, 557, 562, 563, 564, 566, 568, 571, 573, 575, 577, 581, 589, 591], "akind": [6, 298, 305, 315, 329, 365, 369, 370, 497], "string": [6, 24, 27, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 98, 99, 104, 105, 113, 114, 115, 116, 119, 121, 122, 123, 136, 139, 146, 149, 175, 176, 178, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 296, 329, 335, 357, 365, 377, 379, 381, 383, 385, 390, 392, 394, 395, 396, 397, 400, 406, 407, 409, 411, 412, 413, 414, 416, 417, 419, 423, 425, 427, 430, 432, 434, 436, 439, 441, 445, 447, 450, 452, 454, 456, 457, 459, 498], "verbose_nam": [6, 298, 357], "add_input": 6, "add_output": 6, "templat": [6, 160, 178, 259, 335, 346, 365, 370, 398, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "typenam": [6, 259, 346, 365, 370, 398, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "type_i": 6, "req": 6, "is_sam": [6, 259, 398], "int64_t": [6, 225, 255, 256, 259, 263, 270, 273, 292, 297, 298, 312, 357, 398, 403, 413, 414, 416, 417, 421, 461, 560], "set_attr": [6, 255, 256, 264, 270, 292, 295, 413, 414, 415, 416, 417, 418], "name": [6, 15, 20, 22, 23, 24, 26, 27, 29, 31, 34, 35, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 160, 162, 163, 164, 165, 166, 168, 173, 177, 178, 179, 194, 211, 224, 225, 232, 233, 298, 305, 335, 357, 376, 411, 429, 437, 458, 560], "type_f": 6, "type_b": 6, "type_": 6, "convolut": [6, 12, 15, 18, 19, 24, 26, 28, 32, 34, 35, 36, 40, 45, 50, 58, 59, 63, 82, 83, 84, 85, 86, 157, 160, 162, 177, 178, 179, 184, 185, 194, 203, 205, 206, 211, 218, 219, 246, 247, 248, 249, 250, 254, 255, 256, 267, 270, 281, 282, 292, 300, 302, 303, 305, 323, 328, 329, 376, 385, 386, 387, 388, 389, 393, 395, 407, 411, 413, 416, 417, 438, 480, 481, 482, 483, 484, 485, 501, 535, 548, 549, 560, 600], "relu": [6, 19, 20, 28, 29, 34, 42, 47, 58, 67, 108, 121, 133, 158, 164, 175, 176, 184, 185, 203, 205, 206, 213, 214, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 260, 265, 266, 267, 268, 269, 270, 271, 273, 274, 279, 282, 292, 293, 294, 300, 302, 306, 314, 326, 379, 381, 385, 386, 387, 388, 389, 392, 394, 395, 400, 405, 407, 409, 412, 413, 414, 416, 417, 421, 422, 423, 434, 438, 456, 457], "bound": [6, 18, 34, 59, 60, 78, 79, 160, 255, 256, 264, 270, 292, 295], "self": [6, 160, 179, 413, 414, 415, 416, 417, 418], "partition_handl": 7, "dnnl_graph_partition_t": [7, 298, 349, 353, 358], "p": [7, 13, 23, 62, 160, 161, 179, 224, 225, 261, 262, 298, 331, 401, 402, 560, 562], "aop": 7, "ekind": [7, 292, 298, 358, 417, 418], "get_ops_num": 7, "get_op": 7, "compiled_partit": [7, 37, 178, 255, 256, 264, 270, 292, 295, 298, 349, 356, 358, 360, 366, 367, 368, 413, 414, 415, 417, 418], "e": [7, 15, 16, 18, 20, 23, 24, 26, 34, 57, 58, 59, 61, 64, 67, 91, 94, 106, 107, 117, 118, 137, 141, 162, 166, 173, 174, 175, 176, 177, 178, 194, 211, 243, 248, 249, 253, 255, 256, 259, 260, 262, 263, 265, 266, 269, 270, 272, 273, 275, 276, 277, 280, 288, 292, 293, 294, 297, 300, 305, 323, 335, 379, 388, 394, 398, 400, 402, 403, 405, 411, 419, 421, 425, 427, 430, 436, 449, 456, 457, 461, 479, 499, 543, 549, 559, 564, 581], "is_support": [7, 255, 256, 264, 270, 292, 295, 298, 358], "get_input_port": [7, 37, 255, 256, 264, 270, 292, 295], "get_output_port": [7, 37, 255, 256, 264, 270, 292, 295], "get_engine_kind": 7, "raw": [7, 25, 259, 263, 398, 403, 411], "c": [7, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 28, 29, 32, 34, 35, 57, 61, 64, 65, 66, 67, 71, 73, 74, 76, 80, 99, 106, 107, 114, 139, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 173, 175, 176, 177, 190, 194, 198, 211, 224, 242, 247, 248, 249, 250, 253, 257, 258, 259, 260, 261, 262, 263, 266, 269, 271, 273, 275, 278, 280, 288, 296, 297, 298, 304, 305, 308, 315, 316, 322, 323, 329, 334, 335, 341, 343, 365, 369, 370, 371, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 498, 503, 505, 507, 509, 510, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 562, 564, 566, 568, 569, 571, 573, 575, 577, 579, 581, 586, 589, 591], "handl": [7, 8, 15, 16, 18, 19, 25, 36, 37, 63, 162, 167, 175, 176, 177, 179, 242, 243, 244, 245, 251, 252, 253, 255, 256, 260, 261, 262, 263, 264, 267, 268, 270, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 292, 295, 296, 298, 305, 308, 315, 323, 324, 329, 338, 340, 341, 342, 343, 346, 348, 349, 353, 355, 356, 357, 358, 360, 361, 365, 369, 370, 371, 377, 379, 381, 383, 390, 392, 394, 400, 401, 402, 403, 407, 409, 411, 413, 414, 415, 416, 417, 418, 419, 423, 425, 427, 430, 432, 434, 436, 437, 439, 441, 443, 445, 447, 450, 452, 454, 456, 459, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591], "directli": [7, 20, 24, 29, 36, 63, 166, 172, 177, 259, 323, 358, 398, 411, 415, 418, 456, 541, 582], "without": [7, 8, 11, 14, 16, 19, 24, 25, 29, 32, 36, 155, 164, 173, 175, 176, 184, 219, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 311, 313, 323, 324, 340, 341, 358, 361, 369, 370, 371, 377, 379, 381, 383, 385, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 407, 409, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 551, 553, 562, 564, 566, 568, 571, 573, 575, 577, 581, 586, 587, 589, 591], "contain": [7, 8, 15, 19, 20, 23, 24, 28, 37, 41, 45, 59, 71, 72, 81, 82, 83, 84, 85, 86, 87, 104, 105, 114, 115, 123, 125, 126, 127, 128, 129, 130, 131, 147, 148, 160, 174, 177, 178, 194, 242, 252, 267, 269, 274, 276, 278, 284, 296, 305, 311, 313, 323, 324, 325, 335, 340, 355, 356, 358, 369, 370, 373, 377, 387, 392, 406, 407, 411, 412, 413, 415, 416, 417, 418, 423, 427, 432, 441, 456, 459, 481, 483, 485, 487, 489, 491, 499, 543, 545, 547, 555, 556, 563, 592], "onli": [7, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 44, 46, 47, 49, 50, 51, 53, 54, 57, 58, 59, 61, 63, 64, 66, 67, 87, 89, 90, 107, 121, 122, 123, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 194, 211, 212, 213, 214, 222, 223, 225, 234, 245, 249, 250, 253, 254, 288, 305, 311, 312, 313, 315, 323, 324, 325, 335, 341, 343, 355, 358, 367, 368, 369, 371, 383, 385, 386, 388, 389, 394, 395, 398, 403, 406, 411, 413, 414, 415, 416, 417, 418, 421, 437, 438, 449, 461, 481, 483, 485, 487, 489, 491, 543, 545, 547, 549, 557, 586], "unord": 7, "gener": [7, 15, 17, 19, 23, 24, 28, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 62, 65, 155, 159, 160, 173, 174, 178, 193, 197, 199, 210, 224, 225, 242, 243, 244, 245, 251, 252, 253, 260, 267, 268, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 300, 314, 323, 335, 343, 349, 377, 379, 381, 383, 390, 392, 394, 400, 403, 406, 407, 409, 411, 413, 414, 415, 417, 418, 419, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 459, 501, 586, 587, 601], "debug": [7, 12, 23, 24, 30, 159, 160, 178, 205, 206, 323, 335, 406, 411, 412, 456, 541], "purpos": [7, 10, 11, 24, 25, 30, 32, 33, 154, 159, 177, 178, 323, 398, 411, 438, 541], "verbos": [7, 23, 24, 25, 36, 156, 159, 335, 437, 463], "shape": [7, 19, 20, 26, 29, 37, 42, 43, 53, 54, 57, 58, 64, 67, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 88, 89, 97, 98, 99, 104, 105, 112, 113, 114, 115, 116, 119, 125, 126, 127, 128, 129, 130, 131, 136, 146, 147, 149, 152, 162, 168, 174, 177, 179, 201, 202, 207, 236, 248, 255, 256, 259, 263, 264, 270, 281, 288, 292, 295, 324, 329, 340, 355, 358, 369, 370, 386, 387, 398, 403, 404, 413, 416, 417, 421, 422, 437, 449, 461, 501, 555, 563], "choos": [7, 16, 23, 24, 25, 26, 29, 30, 37, 59, 61, 63, 67, 158, 168, 242, 248, 252, 267, 274, 276, 278, 280, 281, 284, 296, 323, 358, 377, 386, 387, 392, 403, 407, 421, 423, 427, 432, 436, 437, 438, 441, 459, 461], "optim": [7, 13, 15, 20, 22, 24, 25, 26, 29, 32, 34, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 66, 67, 157, 159, 162, 164, 165, 166, 168, 175, 176, 177, 200, 208, 242, 252, 253, 267, 274, 276, 278, 282, 284, 296, 300, 358, 363, 377, 378, 379, 380, 381, 382, 386, 390, 391, 392, 393, 394, 406, 407, 408, 411, 412, 419, 420, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 437, 438, 441, 445, 446, 450, 451, 452, 453, 454, 455, 456, 459, 460], "save": [7, 24, 36, 37, 62, 66, 157, 213, 214, 283, 358, 439], "some": [7, 10, 11, 12, 13, 14, 15, 16, 18, 24, 26, 29, 32, 34, 36, 59, 62, 66, 155, 156, 157, 159, 160, 162, 172, 173, 174, 177, 178, 182, 183, 249, 250, 254, 269, 273, 288, 297, 308, 323, 341, 358, 371, 383, 385, 386, 388, 389, 395, 398, 403, 406, 411, 412, 413, 414, 415, 416, 417, 418, 421, 437, 449, 456, 461, 543, 548], "under": [7, 36, 175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 358, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "certain": [7, 19, 20, 25, 29, 30, 31, 61, 178, 194, 211, 312, 358, 497, 548, 549], "dure": [7, 10, 14, 15, 16, 17, 18, 19, 20, 23, 24, 29, 30, 32, 34, 36, 37, 57, 58, 59, 60, 61, 63, 64, 66, 67, 147, 152, 154, 156, 157, 160, 162, 177, 179, 182, 183, 197, 199, 200, 208, 213, 214, 225, 264, 288, 295, 300, 308, 341, 358, 371, 398, 412, 437, 449, 456, 501, 541, 543, 549, 557, 582, 587], "stage": [7, 29, 37, 61, 67, 147, 255, 256, 264, 270, 292, 295, 343, 351, 355, 358, 413, 414, 415, 416, 417, 418, 586], "unsupport": [7, 16, 24, 60, 178, 179, 255, 256, 264, 270, 280, 292, 293, 294, 295, 358, 413, 414, 415, 416, 417, 418, 436, 456, 457], "befor": [7, 10, 13, 16, 17, 18, 25, 26, 27, 29, 30, 31, 32, 33, 37, 45, 58, 81, 82, 83, 84, 85, 86, 108, 112, 136, 146, 154, 160, 168, 175, 178, 184, 185, 230, 231, 246, 254, 262, 276, 288, 305, 323, 335, 351, 356, 358, 385, 395, 401, 402, 406, 411, 412, 428, 437, 438, 449, 456, 541, 549], "transform": [7, 13, 18, 19, 42, 43, 53, 60, 99, 104, 105, 175, 253, 298, 300, 323, 343, 358, 372, 386, 387, 394, 411, 510, 543, 583, 601], "isn": [7, 67], "tensor_handl": 8, "aengin": [8, 369, 370, 371, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 545, 547, 551, 553, 562, 566, 568, 571, 573, 575, 577, 579, 581, 589, 591], "get_data_handl": [8, 33, 154, 167, 175, 176, 249, 250, 253, 261, 262, 323, 388, 389, 394, 401, 402, 411, 541], "set_data_handl": [8, 261, 262, 323, 369, 370, 401, 402, 541], "get_engin": [8, 323, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 579, 581, 589, 591], "get_logical_tensor": 8, "static": [8, 16, 24, 45, 65, 67, 167, 175, 176, 242, 243, 244, 245, 246, 251, 252, 253, 254, 259, 260, 263, 267, 268, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 296, 298, 377, 379, 381, 383, 385, 390, 392, 394, 395, 398, 399, 400, 403, 407, 409, 419, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 450, 452, 454, 459, 497, 498, 541, 543, 582, 586], "make_scalar_tensor": 8, "storag": [8, 14, 19, 32, 175, 176, 212, 234, 253, 323, 324, 329, 340, 342, 343, 361, 369, 370, 394, 584, 585], "alloc": [8, 9, 18, 19, 25, 33, 154, 155, 175, 176, 215, 216, 232, 233, 239, 240, 242, 243, 244, 245, 247, 248, 251, 252, 253, 255, 256, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 298, 303, 323, 324, 340, 347, 352, 356, 360, 361, 366, 367, 368, 369, 370, 377, 379, 381, 383, 386, 390, 392, 394, 400, 403, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 459, 541, 543, 564], "own": [8, 18, 19, 33, 36, 58, 154, 155, 323, 324, 329, 340, 361, 369, 370, 411, 541, 582], "dnnl_memory_alloc": [8, 33, 154, 246, 254, 265, 298, 323, 324, 340, 361, 369, 370, 385, 395, 405, 541], "special": [8, 13, 19, 22, 26, 32, 33, 34, 37, 63, 67, 76, 154, 158, 161, 162, 165, 166, 168, 175, 176, 177, 193, 210, 253, 263, 300, 323, 324, 329, 340, 349, 361, 369, 370, 394, 403, 541], "instruct": [8, 14, 24, 29, 30, 32, 60, 62, 63, 67, 155, 160, 172, 175, 176, 178, 186, 189, 211, 253, 323, 324, 335, 340, 361, 369, 370, 394, 411, 541], "dnnl_memory_non": [8, 33, 154, 298, 323, 324, 340, 361, 369, 370, 541], "On": [8, 24, 25, 32, 58, 59, 67, 89, 172, 177, 178, 194, 211, 213, 214, 308, 341, 371, 398, 412, 456, 541], "usm": [8, 35, 215, 216, 239, 240, 294, 323, 324, 340, 356, 360, 367, 368, 369, 370, 541], "associ": [8, 22, 26, 32, 34, 37, 45, 58, 158, 161, 162, 165, 166, 168, 323, 324, 329, 330, 340, 353, 356, 367, 369, 370, 541, 543, 579], "host": [8, 33, 154, 200, 208, 215, 216, 239, 240, 323, 348, 360, 368, 412, 456, 541], "side": [8, 18, 29, 112, 175, 176, 253, 323, 394, 541], "interpret": [8, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 99, 104, 105, 112, 114, 115, 147], "must": [8, 10, 13, 14, 15, 16, 18, 20, 22, 23, 24, 26, 29, 33, 37, 39, 40, 43, 46, 49, 50, 51, 54, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 162, 164, 173, 174, 175, 176, 194, 225, 253, 297, 305, 307, 308, 311, 313, 323, 324, 325, 329, 334, 335, 340, 341, 343, 351, 355, 369, 370, 371, 386, 387, 394, 406, 411, 412, 413, 414, 415, 416, 417, 418, 456, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 551, 553, 555, 557, 562, 563, 564, 566, 568, 571, 573, 575, 577, 581, 586, 587, 589, 591], "host_scalar": [8, 200], "align": [9, 43, 53, 54, 136, 164, 178, 261, 262, 298, 348, 356, 360, 411, 438], "cl_device_id": [9, 154, 156, 298, 324, 356, 367, 369], "dev": [9, 298, 360], "cl_context": [9, 154, 156, 271, 298, 324, 356, 367, 369], "ctx": [9, 261, 262, 298, 599], "lock_guard": 9, "mutex": 9, "pool_guard": 9, "pool_lock": 9, "ptr": [9, 298, 466, 599], "nullptr": [9, 18, 175, 176, 177, 179, 253, 271, 323, 324, 329, 351, 369, 394, 412, 510], "need_alloc_new_mm": 9, "auto": [9, 15, 16, 18, 25, 29, 45, 58, 59, 63, 70, 88, 98, 113, 116, 119, 136, 146, 149, 164, 167, 175, 176, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 386, 387, 388, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 403, 406, 407, 409, 411, 412, 413, 414, 416, 417, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461], "cnt": 9, "map_size_ptr_": 9, "count": [9, 71, 72, 89, 90, 110, 111, 147, 148, 160, 247, 255, 256, 270, 280, 292, 298, 305, 315, 436, 497], "method": [9, 16, 23, 58, 155, 163, 179, 184, 185, 333, 355, 406, 411, 456, 466, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 544, 546, 550, 552, 561, 565, 567, 570, 572, 574, 576, 580, 588, 590, 593, 599], "allocate_host": 9, "dealloc": [9, 348, 356, 360, 411], "devic": [9, 12, 17, 19, 24, 32, 33, 154, 156, 179, 215, 216, 239, 240, 292, 298, 315, 324, 340, 351, 356, 360, 367, 368, 369, 370, 406, 411, 412, 413, 414, 415, 416, 417, 418, 456], "context": [9, 19, 29, 33, 156, 175, 176, 179, 194, 211, 253, 261, 262, 298, 323, 324, 338, 340, 343, 356, 360, 367, 368, 369, 370, 394, 401, 402, 406, 411, 412, 416, 417, 418, 456, 543, 586, 599], "event": [9, 33, 154, 160, 298, 324, 340, 356, 360, 367, 368, 369, 370], "cl_event": [9, 298, 324, 356, 367, 369], "deallocate_host": 9, "clear": [9, 323, 327, 350, 351], "quick": 10, "recap": 10, "creation": [10, 11, 14, 15, 16, 17, 18, 20, 24, 26, 29, 34, 57, 58, 61, 64, 67, 156, 159, 164, 168, 261, 262, 263, 271, 273, 293, 297, 323, 335, 343, 355, 377, 378, 387, 390, 391, 392, 393, 398, 403, 406, 407, 408, 411, 412, 421, 423, 424, 425, 426, 427, 428, 432, 433, 438, 456, 459, 460, 461, 582], "step": [10, 19, 24, 29, 43, 53, 58, 59, 60, 63, 64, 136, 156, 174, 175, 176, 242, 253, 255, 256, 264, 270, 275, 276, 278, 292, 295, 296, 343, 377, 394, 406, 411, 412, 413, 416, 417, 425, 427, 432, 436, 437, 456, 457, 459, 586], "consist": [10, 19, 22, 24, 28, 30, 42, 53, 59, 67, 155, 164, 177, 179, 323, 437, 543], "follow": [10, 13, 15, 16, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 173, 175, 176, 177, 178, 179, 194, 211, 213, 214, 245, 255, 256, 264, 270, 273, 282, 283, 288, 292, 295, 297, 300, 305, 323, 324, 334, 335, 340, 343, 363, 369, 370, 383, 398, 406, 411, 412, 421, 436, 437, 438, 439, 449, 456, 457, 461, 468, 470, 507, 509, 510, 523, 525, 527, 529, 535, 537, 541, 543, 548, 557, 586, 589, 591], "descriptor": [10, 15, 16, 17, 18, 19, 20, 24, 26, 29, 34, 57, 58, 59, 61, 64, 66, 157, 162, 163, 164, 167, 168, 177, 179, 190, 193, 209, 210, 212, 224, 225, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 257, 258, 259, 262, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 305, 306, 307, 310, 311, 313, 314, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 336, 337, 339, 340, 369, 370, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 402, 406, 407, 408, 409, 412, 419, 421, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 460, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 588, 589, 590, 591], "backward": [10, 18, 19, 22, 24, 26, 28, 30, 58, 89, 90, 99, 106, 107, 161, 164, 168, 178, 179, 184, 185, 213, 214, 222, 223, 242, 243, 249, 250, 254, 268, 276, 277, 278, 283, 284, 288, 296, 306, 311, 313, 314, 317, 318, 320, 321, 325, 326, 329, 333, 334, 336, 337, 377, 379, 386, 388, 389, 395, 409, 427, 430, 432, 437, 439, 441, 449, 459, 467, 468, 471, 472, 480, 481, 486, 487, 492, 493, 502, 503, 506, 507, 512, 513, 518, 519, 522, 523, 526, 527, 530, 531, 534, 535, 544, 545, 550, 551, 565, 566, 570, 571, 574, 575, 588, 589], "propag": [10, 17, 18, 19, 20, 22, 24, 26, 28, 29, 34, 35, 57, 58, 61, 64, 66, 107, 157, 158, 161, 163, 164, 165, 166, 168, 178, 179, 213, 214, 222, 223, 224, 225, 242, 243, 268, 276, 277, 278, 281, 282, 284, 296, 305, 306, 311, 313, 314, 317, 318, 320, 321, 325, 326, 329, 333, 334, 336, 337, 376, 377, 378, 379, 380, 386, 392, 393, 407, 408, 409, 410, 411, 419, 420, 425, 426, 427, 428, 430, 431, 432, 433, 438, 439, 440, 441, 442, 447, 448, 452, 453, 459, 460, 464, 467, 468, 469, 470, 471, 472, 473, 474, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 544, 545, 546, 547, 550, 551, 552, 553, 559, 560, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 588, 589, 590, 591], "forward": [10, 18, 19, 22, 24, 26, 28, 42, 58, 72, 160, 161, 164, 168, 179, 213, 214, 222, 223, 246, 247, 248, 249, 250, 254, 266, 271, 277, 288, 293, 294, 305, 306, 311, 313, 314, 317, 318, 320, 321, 323, 325, 326, 329, 333, 334, 336, 337, 377, 378, 379, 380, 385, 386, 387, 388, 389, 392, 393, 395, 406, 407, 408, 409, 410, 412, 419, 420, 425, 426, 427, 428, 430, 431, 432, 433, 437, 439, 440, 441, 442, 447, 448, 449, 452, 453, 456, 457, 459, 460, 468, 469, 470, 472, 473, 474, 481, 483, 484, 485, 487, 489, 490, 491, 493, 494, 495, 503, 504, 505, 507, 508, 509, 513, 515, 516, 517, 519, 520, 521, 523, 524, 525, 527, 528, 529, 531, 532, 533, 535, 536, 537, 545, 546, 547, 549, 551, 552, 553, 566, 567, 568, 571, 572, 573, 575, 576, 577, 589, 590, 591], "might": [10, 12, 15, 16, 18, 20, 22, 28, 29, 32, 34, 36, 57, 59, 61, 63, 64, 66, 157, 162, 164, 165, 174, 176, 177, 194, 249, 250, 254, 263, 307, 388, 389, 395, 398, 403, 406, 411, 421, 476, 548], "well": [10, 16, 18, 19, 24, 32, 58, 59, 155, 173, 175, 177, 178, 262, 263, 386, 398, 401, 403, 416, 417, 437, 510], "train": [10, 13, 15, 16, 17, 18, 24, 35, 43, 58, 60, 62, 63, 66, 73, 108, 155, 159, 177, 213, 214, 222, 223, 249, 250, 254, 277, 288, 306, 314, 376, 377, 378, 379, 380, 386, 409, 410, 419, 420, 427, 428, 430, 431, 432, 433, 437, 439, 440, 441, 442, 447, 448, 452, 453, 459, 460, 464], "specif": [10, 14, 15, 19, 20, 22, 23, 27, 29, 31, 34, 37, 43, 53, 54, 57, 60, 66, 136, 155, 157, 163, 164, 165, 174, 175, 176, 179, 190, 194, 197, 199, 205, 206, 209, 211, 217, 224, 225, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 305, 314, 315, 323, 324, 331, 335, 340, 343, 351, 353, 361, 369, 370, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 493, 495, 541, 562, 586], "aspect": [10, 437, 464], "sole": [10, 58], "detail": [10, 14, 16, 19, 23, 24, 32, 37, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 58, 59, 63, 160, 169, 172, 178, 248, 249, 260, 262, 300, 388, 398, 400, 402, 411, 457], "why": [10, 177], "found": [10, 16, 23, 24, 32, 156, 157, 172, 173, 175, 176, 177, 178, 179, 253, 265, 283, 294, 394, 405, 439, 457], "concept": [10, 67, 162, 300, 301, 315, 328, 338, 398, 399, 403, 404, 406, 411, 412, 421, 422, 437, 456, 461, 462, 601], "fact": [10, 65, 162, 411, 438], "import": [10, 15, 16, 19, 24, 58, 59, 63, 65, 155, 177, 406, 412, 456], "u": [10, 28, 164, 165, 184, 185, 259, 263, 273, 276, 297, 398, 403, 411, 421, 427, 461], "now": [10, 16, 25, 28, 29, 53, 58, 61, 164, 242, 247, 249, 250, 252, 267, 274, 276, 278, 280, 284, 288, 296, 377, 388, 389, 392, 401, 402, 406, 407, 411, 423, 427, 432, 436, 437, 441, 449, 456, 459], "2": [10, 15, 20, 30, 32, 33, 34, 36, 42, 43, 53, 54, 57, 60, 62, 64, 66, 67, 73, 74, 75, 81, 82, 83, 84, 86, 89, 90, 95, 99, 105, 106, 107, 112, 118, 121, 122, 126, 136, 146, 155, 156, 160, 164, 167, 174, 175, 176, 177, 178, 184, 185, 186, 189, 190, 194, 197, 198, 206, 208, 209, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 305, 323, 329, 335, 342, 343, 355, 377, 379, 381, 383, 385, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 476, 479, 543, 549, 557, 559, 564, 581, 585, 586], "fulli": [10, 18, 19, 42, 45, 59, 61, 67, 438], "correspond": [10, 13, 15, 16, 19, 20, 22, 24, 25, 26, 28, 29, 31, 32, 34, 36, 37, 38, 47, 48, 52, 53, 56, 57, 59, 60, 61, 64, 67, 81, 82, 112, 125, 126, 127, 128, 129, 130, 131, 147, 155, 156, 158, 162, 163, 164, 165, 166, 175, 177, 178, 179, 194, 201, 211, 225, 266, 269, 282, 304, 305, 311, 313, 315, 316, 323, 324, 329, 334, 340, 351, 369, 370, 398, 406, 411, 412, 437, 438, 456, 481, 483, 485, 487, 489, 491, 541, 543, 549, 557], "onc": [10, 15, 18, 27, 30, 31, 39, 40, 46, 47, 49, 50, 51, 58, 59, 63, 67, 159, 164, 174, 175, 176, 177, 253, 262, 329, 335, 343, 351, 355, 386, 394, 401, 402, 403, 404, 406, 411, 421, 422, 461, 462, 586], "chang": [10, 14, 15, 16, 19, 23, 24, 30, 31, 32, 36, 45, 58, 67, 147, 159, 162, 170, 177, 194, 200, 208, 219, 281, 305, 323, 329, 332, 335, 370, 386, 411, 437, 438, 541, 549, 559], "problem": [10, 63, 162, 178, 179, 263, 398, 403], "where": [10, 13, 14, 15, 16, 18, 20, 22, 23, 26, 28, 29, 32, 34, 42, 43, 53, 57, 59, 60, 61, 63, 64, 66, 67, 71, 74, 80, 81, 82, 87, 89, 90, 97, 106, 107, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 139, 147, 156, 157, 161, 163, 164, 165, 177, 178, 194, 201, 211, 230, 231, 283, 286, 305, 308, 341, 371, 385, 386, 387, 398, 411, 437, 439, 445, 549], "destin": [10, 15, 16, 17, 26, 28, 29, 34, 58, 60, 61, 63, 67, 158, 162, 163, 165, 172, 175, 176, 179, 224, 225, 242, 243, 244, 251, 252, 260, 267, 268, 269, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 305, 306, 307, 310, 311, 313, 314, 317, 318, 320, 321, 322, 323, 325, 326, 329, 331, 332, 333, 336, 337, 339, 377, 379, 381, 387, 390, 391, 392, 400, 406, 407, 409, 411, 419, 421, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 455, 459, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 549, 551, 553, 560, 562, 563, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "so": [10, 15, 16, 19, 25, 26, 31, 42, 58, 59, 63, 65, 67, 139, 160, 164, 168, 174, 175, 177, 259, 262, 288, 305, 323, 329, 386, 387, 398, 406, 411, 412, 413, 416, 417, 438, 449, 456, 548], "extra": [10, 18, 20, 31, 43, 59, 63, 175, 176, 177, 178, 213, 214, 225, 253, 276, 394, 411, 427, 437], "were": [10, 18, 33, 154, 178, 406, 411, 412, 456, 586], "design": [10, 15, 16, 26, 64, 80, 165, 174, 437], "extens": [10, 30, 32, 33, 35, 36, 43, 53, 54, 62, 63, 67, 154, 164, 186, 189, 270, 271, 292, 293, 319, 324, 340, 341, 354, 356, 360, 376, 457], "henc": [10, 15, 18, 20, 29, 34, 57, 59, 64, 159, 164, 165, 166, 172, 175, 177, 178, 255, 256, 259, 264, 270, 292, 295, 311, 313, 325, 398, 411, 437, 481, 483, 485, 487, 489, 491, 545, 547], "thei": [10, 15, 18, 19, 20, 25, 29, 33, 36, 37, 43, 57, 59, 60, 61, 63, 64, 67, 99, 104, 106, 107, 154, 157, 164, 175, 176, 177, 178, 194, 253, 255, 256, 261, 264, 267, 270, 273, 292, 295, 394, 401, 406, 407, 411, 412, 421, 437, 438, 456], "structur": [10, 15, 53, 177, 194, 225, 300, 323, 335, 477, 496, 499, 540, 542, 548, 554, 556, 558, 578, 583, 584, 592], "them": [10, 24, 25, 34, 36, 37, 45, 58, 59, 63, 125, 126, 127, 128, 129, 130, 131, 136, 155, 175, 176, 177, 201, 213, 214, 253, 300, 305, 306, 317, 320, 323, 334, 394, 406, 411, 437, 468, 470, 501, 507, 509, 523, 525, 527, 529, 535, 537, 591], "destroi": [10, 18, 154, 225, 305, 315, 323, 329, 338, 342, 343, 348, 349, 353, 357, 358, 361, 411, 437, 456, 543, 549, 557], "right": [10, 13, 29, 34, 42, 53, 66, 67, 71, 72, 81, 82, 83, 84, 85, 86, 106, 107, 112, 114, 115, 136, 157, 163, 165, 166, 177, 178, 224, 225, 226, 227, 252, 267, 281, 283, 288, 311, 313, 323, 325, 392, 407, 437, 439, 449, 481, 483, 485, 487, 489, 491, 545, 547, 560], "after": [10, 15, 16, 20, 23, 29, 37, 43, 53, 59, 61, 146, 160, 164, 173, 175, 176, 178, 194, 247, 252, 253, 255, 256, 264, 265, 266, 267, 269, 270, 288, 292, 293, 294, 295, 305, 329, 335, 343, 353, 358, 392, 394, 405, 406, 407, 411, 412, 413, 414, 416, 417, 437, 438, 449, 456, 457, 479, 548, 549, 559, 564, 581, 586], "modifi": [10, 20, 24, 29, 57, 59, 61, 64, 67, 166, 305, 327, 350], "stai": [10, 177, 543], "equival": [10, 33, 154, 497, 510, 541, 555, 579], "null": [10, 179, 246, 254, 265, 305, 306, 307, 310, 311, 313, 314, 317, 318, 320, 321, 322, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 371, 385, 395, 405, 497, 510, 541, 555, 579], "upon": [10, 17, 58, 406, 411, 412, 437, 456], "unless": [10, 22, 25, 32, 64, 175, 176, 178, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 323, 324, 329, 340, 369, 370, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 541, 555, 563], "simpli": [10, 26, 29, 168, 323, 398], "omit": [10, 15, 87, 89, 90, 123, 222, 223, 386], "skeleton": [10, 15], "simplifi": [10, 28, 29, 43, 59, 81, 110, 163, 173, 175, 176, 177, 253, 394], "read": [10, 27, 33, 154, 242, 243, 244, 245, 252, 259, 260, 267, 268, 272, 274, 275, 276, 277, 278, 279, 283, 284, 285, 286, 287, 289, 290, 291, 296, 377, 379, 381, 383, 392, 398, 400, 407, 409, 412, 419, 423, 425, 427, 430, 432, 434, 438, 439, 441, 443, 445, 447, 450, 452, 454, 456, 459, 541], "dnnl_primitive_attr_t": [10, 298, 305, 557], "dnnl_primitive_attr_cr": [10, 298, 305], "dnnl_primitive_attr_set_someth": 10, "param": [10, 15, 18, 175, 176, 179, 246, 253, 254, 259, 385, 394, 395, 398, 549, 586], "dnnl_primitive_attr_set_something_els": 10, "other_param": [10, 15], "dnnl_eltwise_backward_primitive_desc_cr": [10, 254, 298, 314, 395], "op_pd": [10, 15, 18], "hint_fwd_pd": [10, 298, 306, 311, 313, 314, 317, 318, 320, 321, 325, 326, 333, 334, 336, 337, 468, 472, 481, 483, 487, 489, 493, 503, 507, 513, 515, 519, 523, 527, 531, 535, 545, 551, 566, 571, 575, 589], "here": [10, 15, 16, 18, 20, 23, 26, 28, 29, 34, 37, 58, 59, 60, 66, 67, 80, 81, 104, 105, 155, 157, 160, 164, 165, 172, 173, 175, 176, 177, 178, 184, 242, 243, 249, 253, 259, 266, 267, 273, 276, 277, 278, 283, 288, 296, 297, 323, 351, 377, 379, 387, 388, 394, 398, 401, 402, 406, 407, 411, 416, 417, 421, 427, 430, 432, 437, 438, 439, 449, 458, 459, 461, 543], "doe": [10, 15, 16, 18, 22, 23, 24, 26, 29, 32, 34, 36, 42, 43, 54, 58, 60, 61, 63, 64, 66, 68, 69, 93, 94, 102, 103, 109, 117, 118, 124, 132, 134, 135, 137, 143, 145, 146, 150, 152, 153, 155, 157, 159, 160, 161, 163, 165, 168, 173, 176, 177, 178, 179, 213, 214, 281, 305, 308, 310, 323, 341, 371, 387, 411, 437, 438, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 543, 545, 547, 549, 551, 553, 557, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "effect": [10, 15, 27, 29, 30, 112, 156, 174, 178, 335, 501], "we": [10, 15, 16, 18, 20, 28, 29, 34, 54, 57, 58, 60, 64, 67, 81, 82, 136, 155, 157, 158, 163, 164, 165, 177, 178, 242, 246, 249, 250, 252, 254, 259, 261, 262, 263, 267, 269, 274, 276, 278, 281, 284, 288, 296, 377, 385, 388, 389, 392, 395, 398, 401, 402, 403, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 423, 427, 432, 437, 438, 441, 449, 456, 459], "immedi": [10, 437, 582], "dnnl_primitive_attr_destroi": [10, 298, 305], "dnnl": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 29, 30, 31, 33, 34, 36, 37, 54, 57, 58, 59, 61, 63, 64, 65, 67, 154, 156, 160, 161, 163, 164, 167, 170, 173, 175, 176, 177, 178, 179, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 373, 377, 379, 381, 383, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 462], "primitive_attr": [10, 12, 13, 14, 15, 16, 18, 19, 29, 58, 63, 67, 175, 176, 179, 244, 245, 248, 252, 253, 259, 262, 263, 267, 273, 274, 279, 282, 286, 297, 298, 305, 365, 381, 383, 387, 392, 394, 398, 399, 402, 403, 404, 407, 421, 422, 423, 434, 438, 445, 461, 462, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 549, 551, 553, 559, 560, 562, 563, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "set_someth": 10, "set_something_els": 10, "primitive_desc": [10, 15, 16, 18, 19, 20, 25, 29, 34, 57, 58, 59, 64, 156, 164, 179, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 306, 307, 311, 313, 314, 317, 318, 320, 321, 322, 325, 326, 329, 331, 333, 334, 336, 337, 365, 369, 370, 377, 379, 381, 383, 386, 387, 388, 389, 390, 392, 396, 397, 398, 400, 401, 402, 403, 406, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 544, 546, 549, 550, 552, 555, 557, 560, 561, 563, 565, 567, 569, 570, 572, 574, 576, 580, 588, 590], "pd": [10, 15, 25, 28, 261, 288, 449, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 544, 545, 546, 547, 550, 551, 552, 553, 555, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 588, 589, 590, 591], "happen": [10, 16, 29, 30, 36, 59, 63, 80, 156, 162, 174, 175, 176, 177, 246, 253, 254, 273, 308, 341, 343, 371, 385, 394, 395, 411, 421, 437], "As": [10, 15, 16, 17, 18, 20, 24, 25, 28, 29, 34, 37, 58, 59, 63, 162, 172, 177, 261, 283, 288, 305, 323, 401, 402, 439, 449, 543, 549], "mention": [10, 18, 20, 34, 59, 63, 136, 261, 387, 401, 402, 411], "abov": [10, 16, 18, 20, 30, 33, 34, 53, 59, 61, 63, 67, 112, 136, 154, 155, 166, 177, 178, 201, 202, 261, 300, 323, 401, 402, 411, 413, 414, 416, 417, 438, 543], "extend": [10, 16, 33, 43, 54, 154, 219, 305, 343, 586], "behavior": [10, 11, 14, 15, 17, 18, 20, 24, 29, 30, 57, 59, 61, 62, 63, 64, 66, 67, 160, 164, 166, 182, 183, 195, 196, 213, 214, 297, 305, 323, 324, 338, 355, 369, 413, 414, 415, 416, 417, 418, 461, 543, 579, 582], "explan": [10, 178, 179], "provid": [10, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24, 25, 27, 29, 31, 32, 33, 36, 37, 39, 42, 43, 45, 46, 49, 53, 54, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 163, 164, 174, 175, 176, 178, 213, 214, 232, 233, 242, 249, 252, 253, 257, 258, 267, 274, 276, 278, 284, 288, 296, 305, 320, 323, 327, 329, 350, 351, 355, 369, 370, 377, 388, 392, 394, 396, 397, 407, 413, 414, 415, 416, 417, 418, 423, 427, 432, 437, 438, 441, 449, 459, 511, 519, 521, 541, 549], "section": [10, 14, 15, 16, 19, 20, 22, 24, 27, 28, 29, 32, 34, 36, 57, 58, 59, 63, 66, 157, 159, 160, 164, 165, 173, 175, 176, 253, 259, 300, 394, 398, 411, 413, 414, 415, 416, 417, 418], "scratchpad": [10, 19, 24, 28, 29, 59, 175, 176, 179, 224, 225, 232, 233, 253, 305, 329, 343, 376, 394, 557, 560, 586], "intermedi": [10, 15, 16, 28, 29, 32, 34, 37, 43, 53, 54, 59, 63, 66, 162, 166, 175, 176, 253, 259, 281, 305, 308, 341, 343, 371, 394, 398, 403, 586], "temporari": [10, 18, 19, 28, 59, 261, 262, 329, 335], "implicit": [10, 14, 22, 26, 28, 29, 53, 67, 162, 168, 195, 196], "f32": [10, 11, 13, 14, 15, 16, 20, 22, 29, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 161, 162, 163, 164, 165, 166, 167, 172, 175, 176, 177, 178, 182, 183, 195, 196, 198, 209, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 305, 376, 377, 379, 381, 383, 387, 388, 390, 392, 394, 396, 397, 398, 400, 402, 403, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 450, 452, 454, 456, 457, 459, 461, 549, 557], "accumul": [10, 15, 16, 25, 32, 63, 77, 157, 158, 162, 164, 175, 176, 179, 182, 183, 253, 271, 288, 293, 294, 303, 305, 309, 330, 343, 353, 376, 394, 412, 449, 456, 457, 548, 549, 557, 586], "datatyp": [10, 11, 14, 16, 17, 32, 164, 174, 178, 179, 182, 183, 305], "round": [10, 11, 16, 34, 60, 71, 87, 89, 90, 114, 123, 152, 177, 182, 183, 184, 185, 203, 230, 231, 280, 300, 302, 305, 329, 376, 436, 557], "argument": [10, 14, 15, 17, 32, 58, 120, 175, 176, 179, 207, 224, 225, 235, 236, 242, 243, 244, 245, 249, 250, 251, 252, 253, 260, 267, 268, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 296, 305, 306, 317, 320, 324, 329, 334, 340, 342, 355, 367, 368, 369, 370, 377, 379, 381, 383, 386, 388, 389, 390, 392, 394, 400, 401, 402, 407, 409, 411, 412, 419, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 450, 452, 454, 459, 468, 470, 499, 507, 509, 523, 525, 527, 529, 535, 537, 543, 555, 557, 563, 585, 586, 589, 591], "downconvers": [10, 32, 195, 196], "determinist": [10, 13, 17, 37, 179, 305, 376, 557], "dropout": [10, 53, 67, 305, 329, 557], "appli": [10, 13, 15, 16, 20, 22, 23, 29, 32, 34, 43, 49, 50, 51, 53, 54, 57, 58, 60, 61, 63, 64, 67, 68, 70, 78, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 102, 108, 109, 110, 112, 113, 116, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 137, 139, 141, 146, 148, 149, 150, 157, 161, 163, 164, 166, 175, 178, 194, 200, 205, 206, 208, 211, 213, 214, 265, 267, 273, 286, 297, 305, 307, 308, 323, 324, 329, 334, 340, 341, 343, 369, 370, 371, 387, 405, 406, 407, 411, 421, 438, 445, 461, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 541, 557, 586, 589, 591], "pseudo": [10, 29, 36, 63, 67, 156, 162, 177], "random": [10, 17, 67, 230, 231, 259, 260, 263, 273, 280, 297, 398, 400, 403, 421, 436, 461], "quantiz": [10, 14, 15, 32, 39, 40, 45, 46, 47, 53, 54, 55, 58, 63, 67, 87, 89, 90, 162, 164, 175, 176, 201, 202, 203, 245, 248, 253, 256, 259, 262, 297, 298, 300, 302, 305, 343, 376, 383, 387, 394, 399, 402, 414, 421, 422, 461, 462, 549, 557, 586], "infer": [10, 15, 16, 24, 35, 36, 47, 54, 62, 63, 67, 155, 159, 164, 177, 200, 207, 208, 213, 214, 222, 223, 236, 246, 247, 248, 256, 261, 262, 264, 273, 288, 295, 297, 298, 300, 376, 398, 422, 438, 449, 461, 464], "post": [10, 13, 16, 32, 35, 39, 42, 53, 58, 59, 60, 63, 175, 176, 179, 205, 206, 213, 214, 243, 244, 245, 248, 252, 253, 267, 274, 279, 282, 286, 305, 329, 342, 343, 376, 379, 380, 381, 382, 392, 393, 394, 407, 408, 414, 423, 424, 434, 435, 438, 445, 548, 549, 557, 585, 586], "fuse": [10, 13, 15, 16, 19, 20, 22, 29, 34, 39, 45, 54, 58, 59, 60, 61, 67, 213, 214, 282, 305, 306, 329, 379, 380, 381, 382, 392, 393, 407, 408, 421, 422, 423, 424, 434, 435, 549], "mostli": [10, 59, 194, 211, 323], "becaus": [10, 15, 16, 20, 24, 30, 31, 34, 53, 57, 59, 60, 64, 66, 175, 178, 179, 207, 211, 224, 235, 236, 288, 314, 323, 386, 387, 411, 413, 414, 416, 417, 437, 438, 449, 456, 549], "separ": [10, 15, 20, 24, 27, 29, 57, 59, 64, 99, 155, 162, 178, 179, 288, 323, 329, 401, 402, 411, 438, 449], "delai": [10, 249, 250, 388, 389], "successfulli": [10, 586], "whatev": [10, 282, 438], "configur": [10, 18, 20, 23, 29, 31, 32, 54, 57, 59, 60, 64, 67, 107, 158, 164, 174, 175, 178, 179, 213, 214, 232, 233, 237, 238, 248, 305, 306, 317, 320, 335, 385, 386, 387, 392, 393, 437, 463, 548, 549, 557], "want": [10, 16, 18, 59, 63, 155, 416, 417], "howev": [10, 12, 14, 15, 16, 18, 20, 24, 26, 33, 34, 43, 57, 58, 59, 63, 64, 67, 155, 157, 158, 165, 166, 172, 177, 262, 263, 267, 288, 314, 323, 386, 398, 401, 403, 406, 407, 411, 412, 438, 449, 456], "try": [10, 248, 249, 260, 262, 269, 280, 288, 293, 294, 388, 400, 402, 411, 413, 414, 415, 416, 417, 418, 436, 449, 456, 457], "dnnl_unimpl": [10, 156, 207, 235, 236, 248, 249, 260, 262, 280, 335, 388, 400, 402, 436], "unfortun": [10, 63, 155, 173], "about": [10, 15, 18, 59, 67, 156, 159, 160, 177, 178, 257, 258, 300, 323, 396, 397, 411, 438], "what": [10, 15, 16, 59, 60, 178, 201, 269, 293, 294, 298, 323, 329, 406, 411, 437, 456, 457, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 498, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591, 593], "exactli": [10, 16, 29, 59, 63, 67, 125, 126, 127, 128, 129, 130, 131, 323], "go": [10, 58, 84, 177, 259, 398, 406, 411, 412, 456], "wrong": [10, 156, 411], "document": [10, 15, 16, 24, 28, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 63, 65, 155, 172], "benefit": [11, 19, 24, 58, 159, 174, 314], "speed": [11, 18, 31, 58, 156, 277, 430], "up": [11, 14, 23, 24, 32, 42, 63, 67, 156, 157, 158, 160, 175, 176, 177, 243, 244, 246, 253, 254, 265, 272, 275, 277, 283, 290, 329, 355, 379, 381, 385, 394, 395, 405, 419, 425, 430, 436, 437, 439, 452, 501], "notic": [11, 14, 24, 178, 205, 206, 411], "impact": [11, 12, 14, 16, 32, 36, 173, 177, 178], "accuraci": [11, 14, 16, 29, 36, 54, 58, 59, 60, 63, 67, 166, 259, 269, 271, 398, 399, 411, 412], "numer": [11, 14, 17, 20, 34, 45, 57, 63, 64, 74, 99, 106, 107, 139, 166, 172, 185, 261, 262, 269, 271, 288, 293, 294, 412, 449, 456, 457], "alter": [11, 14, 17, 164], "low": [11, 17, 19, 32, 36, 54, 58, 174, 175, 176, 253, 301, 305, 311, 313, 325, 394, 481, 483, 485, 487, 489, 491, 545, 547, 557], "accumulation_mod": [11, 32, 304, 365, 557], "accept": [11, 12, 17, 25, 27, 37, 41, 58, 60, 72, 82, 83, 115, 153, 160, 335, 353], "strict": [11, 14, 166, 182, 183, 195, 305], "f64": [11, 29, 32, 34, 64, 67, 157, 166, 183, 209, 280, 305, 436], "s32": [11, 13, 15, 16, 17, 22, 29, 32, 34, 54, 60, 61, 63, 67, 70, 72, 82, 83, 86, 89, 90, 97, 98, 104, 105, 125, 126, 127, 128, 129, 130, 131, 149, 157, 158, 162, 163, 165, 167, 175, 176, 182, 183, 198, 209, 253, 257, 258, 259, 273, 305, 394, 396, 397, 398, 421, 557], "relax": [11, 166, 182], "partial": [11, 18, 20, 30, 57, 64, 182, 183, 335, 421, 437], "src": [11, 15, 16, 20, 26, 28, 29, 32, 34, 39, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 165, 166, 168, 173, 176, 178, 182, 183, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 260, 267, 268, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 298, 305, 306, 314, 317, 320, 377, 379, 381, 383, 385, 388, 389, 390, 391, 392, 395, 400, 401, 402, 407, 409, 411, 419, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 455, 459, 474, 479, 505, 513, 515, 517, 563, 564, 581], "dst": [11, 13, 15, 16, 17, 20, 22, 26, 28, 29, 32, 34, 38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 165, 166, 168, 176, 182, 183, 184, 185, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 260, 267, 268, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 296, 298, 305, 306, 314, 317, 320, 377, 379, 381, 383, 385, 387, 388, 389, 390, 391, 392, 395, 400, 401, 402, 407, 409, 411, 419, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 450, 452, 454, 455, 459, 474, 476, 479, 505, 513, 515, 517, 549, 563, 564, 581], "fastest": [11, 182, 183], "higher": [11, 15, 20, 27, 29, 31, 57, 60, 64, 67, 155, 157, 158, 163, 177, 178, 179], "f16": [11, 14, 15, 20, 22, 29, 32, 34, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 161, 162, 163, 164, 165, 166, 172, 175, 176, 182, 183, 195, 196, 198, 209, 280, 436], "To": [12, 13, 15, 16, 24, 25, 27, 28, 29, 32, 33, 36, 37, 43, 58, 59, 60, 63, 66, 81, 84, 136, 139, 154, 159, 160, 162, 163, 173, 178, 252, 262, 288, 392, 401, 403, 406, 411, 412, 413, 414, 415, 416, 417, 418, 436, 437, 449, 456], "valid": [12, 24, 32, 59, 67, 71, 72, 78, 79, 81, 82, 83, 84, 85, 86, 114, 115, 160, 164, 175, 176, 178, 201, 202, 225, 253, 282, 298, 307, 323, 343, 353, 355, 356, 367, 394, 437, 457, 501, 541, 543, 586], "certif": 12, "guarante": [12, 32, 36, 59, 147, 148, 156, 177, 398], "multipl": [12, 15, 16, 18, 19, 20, 22, 28, 29, 35, 36, 37, 43, 45, 46, 51, 57, 59, 63, 64, 130, 155, 161, 162, 170, 176, 178, 184, 185, 194, 211, 218, 219, 253, 260, 279, 280, 288, 297, 300, 303, 308, 323, 324, 328, 339, 340, 351, 369, 370, 383, 386, 394, 398, 399, 400, 403, 404, 406, 411, 421, 422, 434, 437, 438, 449, 461, 462, 538, 541, 543, 559, 600, 601], "platform": [12, 29, 32, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 63, 160, 169, 175, 176, 179, 248, 249, 253, 260, 262, 363, 388, 394, 400, 402, 438], "exact": [12, 45, 63, 158, 164, 259, 398, 411], "bitwis": [12, 20, 24, 57, 64, 237], "most": [12, 15, 16, 19, 22, 23, 24, 25, 26, 29, 30, 32, 59, 61, 63, 66, 67, 112, 155, 161, 162, 168, 172, 177, 194, 224, 315, 329, 398, 411, 421, 437, 461, 497, 510, 541, 555, 579], "fix": [12, 177], "environ": [12, 14, 17, 23, 24, 30, 31, 32, 36, 41, 62, 63, 65, 155, 156, 159, 160, 173, 178, 179, 230, 231, 335, 437, 438], "particular": [12, 15, 17, 18, 19, 28, 29, 32, 36, 59, 63, 67, 166, 174, 177, 178, 194, 266, 269, 315, 323, 329, 338, 398, 406, 411, 412, 456, 497, 543], "hardwar": [12, 14, 16, 20, 22, 29, 33, 34, 37, 57, 60, 63, 66, 155, 157, 160, 164, 165, 169, 172, 174, 175, 176, 253, 343, 349, 394, 437, 586], "softwar": [12, 23, 62, 63, 175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "runtim": [12, 15, 16, 20, 25, 27, 32, 33, 36, 42, 43, 53, 57, 64, 67, 73, 106, 154, 156, 162, 170, 174, 178, 179, 224, 225, 270, 273, 297, 303, 305, 324, 329, 340, 341, 347, 348, 351, 356, 360, 367, 368, 371, 398, 411, 412, 416, 417, 421, 437, 438, 456, 457, 461, 549, 592], "version": [12, 20, 23, 24, 25, 57, 58, 65, 156, 173, 175, 176, 178, 184, 185, 194, 211, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 323, 329, 335, 365, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 479, 581, 592], "variabl": [12, 14, 20, 22, 23, 24, 26, 29, 30, 31, 34, 36, 41, 57, 61, 62, 64, 65, 66, 67, 68, 71, 78, 80, 81, 91, 94, 95, 100, 102, 108, 109, 112, 114, 132, 137, 139, 141, 150, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 173, 178, 200, 208, 288, 298, 329, 335, 411, 437, 438, 449], "ident": [12, 26, 64, 65, 125, 126, 127, 128, 129, 130, 131, 156, 159, 166, 168, 242, 252, 267, 274, 276, 278, 284, 296, 377, 390, 391, 392, 407, 423, 427, 432, 441, 454, 455, 459], "between": [12, 15, 16, 18, 19, 22, 23, 24, 33, 35, 37, 38, 39, 40, 42, 43, 45, 46, 49, 50, 51, 53, 54, 63, 71, 81, 98, 99, 114, 115, 134, 154, 155, 162, 172, 174, 177, 178, 179, 200, 208, 232, 233, 246, 247, 249, 250, 254, 255, 256, 265, 266, 267, 270, 288, 292, 305, 315, 323, 332, 355, 376, 385, 386, 388, 389, 395, 398, 403, 407, 411, 437, 449, 464, 501, 543, 549, 557, 563], "producbit": [12, 14, 15, 17, 24, 25, 30, 32, 45, 58, 59, 60, 63, 172, 186, 189, 190, 198, 209, 217, 230, 231, 241, 259, 262, 305, 308, 335, 341, 363, 371, 387, 398, 412, 549, 557, 582], "wise": [12, 25, 28, 34, 59, 68, 70, 88, 94, 98, 109, 113, 116, 117, 119, 120, 121, 124, 135, 143, 145, 146, 149, 152, 158, 177, 205, 206, 218, 219, 252, 267, 268, 283, 376, 392, 407, 410, 439], "reli": [12, 28, 162], "non": [12, 16, 17, 19, 23, 26, 29, 32, 45, 58, 60, 63, 64, 67, 71, 72, 81, 82, 83, 84, 85, 86, 91, 92, 104, 108, 114, 115, 155, 162, 164, 167, 175, 176, 177, 178, 179, 184, 185, 190, 198, 209, 213, 214, 224, 225, 249, 250, 253, 257, 258, 273, 282, 323, 343, 348, 349, 356, 360, 368, 388, 389, 394, 396, 397, 411, 421, 438, 543, 586], "construct": [12, 19, 33, 37, 39, 41, 42, 43, 46, 47, 49, 50, 51, 53, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 175, 176, 253, 288, 323, 324, 340, 353, 367, 368, 369, 370, 371, 394, 412, 449, 456, 559, 593, 599], "atom": [12, 429], "order": [12, 15, 16, 19, 24, 28, 29, 30, 31, 33, 36, 58, 59, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 162, 164, 165, 177, 178, 194, 201, 202, 211, 237, 238, 249, 250, 254, 269, 276, 305, 308, 310, 311, 313, 323, 324, 325, 330, 335, 341, 371, 388, 389, 395, 411, 413, 414, 416, 417, 427, 438, 479, 481, 483, 485, 487, 489, 491, 501, 543, 545, 547, 549, 557], "dnnl_primitive_attr_set_determinist": [12, 298, 305], "set_determinist": [12, 557], "permit": [12, 25], "dispatch": [12, 14, 19, 24, 29, 31, 335, 463], "perform": [12, 13, 15, 16, 18, 19, 24, 25, 27, 30, 31, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 59, 60, 63, 68, 70, 71, 73, 81, 84, 88, 98, 99, 104, 106, 107, 109, 113, 114, 116, 117, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 136, 139, 143, 145, 146, 149, 152, 155, 164, 170, 172, 177, 178, 179, 180, 213, 214, 222, 223, 249, 250, 254, 255, 256, 270, 280, 281, 282, 283, 292, 300, 305, 306, 307, 308, 311, 313, 314, 317, 320, 321, 322, 323, 325, 326, 335, 337, 341, 363, 371, 376, 385, 386, 387, 388, 389, 395, 398, 399, 403, 411, 412, 414, 421, 439, 456, 461, 479, 541, 548, 549, 557, 581, 586], "matmul": [12, 14, 17, 24, 32, 42, 43, 53, 67, 178, 179, 203, 218, 257, 258, 259, 260, 263, 264, 273, 280, 295, 297, 298, 300, 302, 322, 365, 376, 399, 404, 415, 418, 422, 435, 436, 462, 555], "normal": [12, 28, 32, 36, 59, 73, 74, 99, 106, 107, 139, 184, 185, 213, 214, 218, 219, 243, 245, 272, 275, 277, 303, 321, 328, 329, 376, 380, 383, 403, 411, 420, 426, 431, 437, 471, 472, 473, 474, 502, 503, 504, 505, 518, 519, 520, 521, 530, 532, 600], "especi": [12, 43, 54, 59, 63, 159, 178, 323, 548], "gpu": [12, 15, 19, 20, 22, 23, 26, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 64, 66, 67, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 178, 179, 191, 192, 242, 265, 266, 270, 271, 280, 292, 293, 295, 297, 315, 356, 363, 367, 376, 377, 411, 416, 417, 436, 437, 438, 457, 461, 464, 592], "mani": [13, 24, 28, 37, 42, 43, 53, 58, 155, 177, 329, 411], "gnn": 13, "model": [13, 15, 19, 28, 29, 32, 33, 37, 42, 43, 45, 53, 54, 59, 60, 61, 87, 99, 123, 154, 164, 247, 249, 250, 254, 261, 262, 269, 288, 299, 300, 388, 389, 395, 401, 402, 403, 411, 449], "layer": [13, 28, 32, 58, 59, 104, 106, 107, 164, 218, 219, 242, 259, 261, 262, 273, 275, 276, 278, 288, 296, 297, 300, 303, 323, 328, 329, 334, 376, 377, 385, 386, 387, 388, 389, 395, 398, 401, 402, 421, 426, 427, 432, 437, 449, 459, 461, 468, 470, 507, 509, 518, 519, 520, 521, 523, 525, 527, 529, 535, 537, 569, 589, 591, 600], "signific": [13, 16, 25, 59, 172, 177], "amount": [13, 18, 24, 29, 81, 82, 83, 84, 85, 86, 178, 312, 323], "time": [13, 16, 18, 19, 20, 22, 23, 24, 29, 57, 58, 59, 61, 62, 63, 66, 67, 81, 82, 87, 119, 155, 156, 157, 163, 165, 174, 175, 177, 184, 220, 221, 242, 247, 263, 269, 273, 275, 276, 278, 280, 288, 296, 297, 305, 319, 323, 324, 327, 329, 335, 340, 341, 350, 351, 354, 355, 356, 360, 377, 386, 387, 398, 403, 404, 406, 411, 421, 422, 425, 427, 432, 436, 438, 449, 459, 461, 462, 557], "enhanc": [13, 64, 300], "akin": 13, "binari": [13, 16, 20, 24, 29, 34, 35, 37, 39, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 61, 62, 64, 67, 156, 157, 161, 163, 166, 174, 175, 176, 184, 185, 213, 214, 218, 219, 245, 253, 300, 303, 305, 323, 328, 329, 365, 376, 382, 384, 394, 437, 479, 543, 549, 555, 559, 564, 581, 586, 600], "depend": [13, 15, 16, 18, 19, 20, 23, 24, 32, 37, 43, 45, 57, 60, 63, 64, 65, 67, 77, 136, 155, 158, 159, 164, 166, 176, 177, 178, 179, 194, 211, 305, 308, 310, 314, 323, 324, 329, 340, 341, 356, 360, 367, 368, 369, 370, 371, 385, 386, 398, 411, 412, 436, 437, 456, 479, 493, 495, 543, 549, 557], "prng": 13, "variat": [13, 155], "philox": 13, "algorithm": [13, 15, 16, 20, 24, 34, 58, 59, 157, 161, 163, 175, 176, 178, 179, 184, 224, 225, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 257, 258, 260, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 296, 305, 307, 311, 313, 314, 321, 325, 331, 333, 337, 365, 377, 379, 381, 383, 386, 387, 388, 389, 390, 392, 394, 396, 397, 400, 406, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 450, 452, 454, 456, 457, 459, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 549, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "mathrm": [13, 67], "mask": [13, 15, 16, 29, 43, 53, 60, 61, 67, 155, 162, 175, 176, 248, 253, 259, 263, 273, 297, 298, 305, 329, 342, 343, 387, 394, 398, 403, 421, 461, 549, 557, 582, 585, 586], "cdot": [13, 15, 16, 20, 22, 28, 29, 34, 42, 53, 57, 60, 61, 63, 64, 66, 67, 71, 74, 81, 87, 89, 90, 99, 101, 106, 112, 114, 123, 125, 126, 127, 128, 129, 130, 131, 148, 157, 158, 162, 163, 164, 168, 175, 185, 398], "usual": [13, 33, 42, 53, 59, 60, 108, 155, 156, 160, 175, 176, 178, 197, 199, 253, 394, 412, 456, 501], "potenti": [13, 16, 29, 34, 63, 160, 174, 175, 176, 201, 253, 329, 394, 437, 543], "u8": [13, 15, 16, 22, 25, 29, 32, 34, 35, 47, 49, 50, 51, 54, 55, 60, 61, 64, 67, 87, 89, 90, 123, 157, 158, 162, 163, 164, 165, 166, 175, 176, 178, 198, 209, 245, 248, 253, 256, 259, 260, 262, 273, 280, 376, 384, 387, 394, 398, 400, 402, 414, 421, 436], "whose": 13, "either": [13, 16, 19, 20, 22, 24, 26, 37, 57, 59, 60, 63, 64, 67, 72, 73, 75, 82, 83, 86, 104, 105, 136, 158, 161, 168, 172, 175, 176, 177, 178, 184, 185, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 306, 317, 320, 321, 323, 325, 333, 334, 337, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 531, 533, 543, 545, 547, 566, 568, 575, 577], "got": [13, 175, 176, 179, 253, 255, 256, 264, 269, 270, 271, 292, 295, 394, 411, 412], "k": [13, 18, 42, 53, 54, 66, 67, 89, 112, 167, 175, 176, 179, 217, 224, 225, 241, 246, 249, 250, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 273, 277, 279, 280, 295, 297, 298, 308, 321, 341, 343, 365, 371, 385, 388, 389, 394, 395, 396, 397, 398, 400, 403, 421, 430, 434, 436, 461, 531, 533, 560, 586, 587, 594], "drop": [13, 14], "out": [13, 15, 16, 19, 20, 28, 33, 36, 37, 43, 53, 54, 66, 81, 82, 83, 84, 85, 86, 154, 157, 160, 165, 166, 174, 176, 177, 178, 179, 194, 207, 211, 218, 219, 235, 236, 237, 238, 246, 254, 261, 268, 269, 280, 284, 298, 305, 310, 323, 332, 339, 385, 395, 401, 402, 409, 411, 436, 437, 441, 479, 549, 580, 587], "seed": [13, 17, 67, 329], "leq": [13, 22, 34, 132, 158, 165], "dnnl_primitive_attr_get_dropout": [13, 298, 305], "dnnl_primitive_attr_set_dropout": [13, 298, 305], "get_dropout": [13, 557], "set_dropout": [13, 557], "three": [13, 24, 28, 42, 54, 58, 67, 155, 164, 177, 280, 406, 412, 436, 438, 456], "addit": [13, 14, 15, 19, 20, 22, 24, 27, 28, 29, 30, 31, 32, 37, 43, 54, 59, 61, 63, 67, 70, 82, 84, 85, 86, 112, 131, 155, 160, 166, 175, 176, 179, 213, 214, 225, 242, 252, 253, 267, 274, 276, 278, 284, 296, 323, 343, 355, 377, 387, 392, 394, 406, 407, 411, 412, 423, 427, 432, 437, 438, 441, 456, 459, 586], "dnnl_arg_attr_dropout_mask": [13, 67, 298, 329], "through": [13, 15, 24, 27, 32, 37, 42, 43, 53, 54, 58, 60, 156, 173, 174, 175, 288, 355, 387, 406, 411, 413, 414, 416, 417, 437, 449, 456, 501], "dnnl_arg_attr_dropout_prob": [13, 67, 298, 329], "singl": [13, 16, 17, 20, 22, 24, 29, 32, 35, 36, 42, 43, 45, 58, 60, 64, 66, 120, 125, 126, 127, 128, 129, 130, 131, 162, 164, 172, 175, 176, 177, 184, 185, 190, 198, 205, 206, 209, 253, 264, 280, 295, 297, 305, 308, 323, 329, 341, 343, 371, 387, 394, 398, 411, 436, 461, 543, 549], "hold": [13, 18, 34, 67, 125, 126, 127, 128, 129, 130, 131, 259, 262, 288, 305, 343, 386, 398, 401, 411, 437, 449, 557, 586], "dnnl_arg_attr_dropout_se": [13, 67, 298, 329], "benefici": [14, 34, 59, 177, 548], "how": [14, 15, 16, 18, 20, 22, 26, 29, 33, 34, 37, 39, 42, 43, 46, 49, 53, 57, 58, 60, 61, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 99, 104, 105, 114, 115, 147, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 172, 175, 176, 177, 178, 184, 185, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 270, 288, 292, 295, 305, 308, 323, 329, 341, 371, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 401, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 460, 461, 462, 549], "narrow": 14, "bf16": [14, 15, 20, 22, 25, 29, 32, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 161, 162, 163, 164, 165, 166, 172, 175, 176, 195, 196, 198, 209, 249, 280, 297, 376, 436, 461], "tf32": [14, 195, 196], "furthermor": [14, 29, 81], "do": [14, 15, 16, 18, 20, 25, 32, 36, 53, 58, 59, 63, 71, 114, 154, 155, 162, 163, 168, 172, 177, 179, 194, 211, 228, 229, 255, 256, 262, 264, 270, 271, 281, 292, 295, 323, 401, 437, 438, 541, 543], "affect": [14, 15, 24, 36, 60, 63, 156, 177, 194, 335, 586], "remain": [14, 24, 28, 29, 81, 177, 261, 262, 288, 401, 402, 437, 449, 543, 549], "3": [14, 15, 16, 32, 34, 42, 43, 53, 57, 60, 63, 67, 73, 74, 75, 95, 102, 107, 121, 136, 160, 164, 167, 170, 175, 176, 177, 190, 197, 198, 208, 209, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 267, 268, 269, 270, 271, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 323, 329, 355, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 407, 409, 411, 412, 413, 414, 416, 417, 423, 425, 427, 430, 434, 436, 437, 438, 439, 441, 443, 445, 447, 450, 452, 454, 456, 457, 459, 501, 543], "disabl": [14, 24, 27, 30, 31, 36, 62, 159, 160, 178, 311, 313, 318, 322, 327, 335, 350, 351, 483, 485, 489, 491], "smaller": [14, 24, 78, 79, 112, 162, 273, 421], "least": [14, 19, 23, 67, 80, 159, 308, 341, 342, 369, 371, 406, 411, 541, 585], "accur": [14, 29, 63, 263, 403], "expon": [14, 32, 120, 124, 172, 184, 185, 190, 198, 209], "mantissa": [14, 17, 32, 172, 190, 198, 209, 230, 231], "ignor": [14, 29, 31, 32, 71, 72, 75, 82, 104, 105, 114, 115, 269, 305, 320, 323, 330, 411, 519, 521, 549], "second": [14, 15, 27, 28, 42, 43, 50, 53, 54, 63, 81, 122, 125, 126, 127, 128, 129, 130, 131, 136, 194, 211, 224, 225, 255, 270, 288, 292, 305, 323, 355, 406, 413, 414, 416, 417, 436, 437, 449, 543, 549], "dnnl_primitive_attr_set_fpmath_mode_v2": [14, 298, 305], "weight": [14, 15, 18, 24, 26, 27, 28, 29, 32, 39, 40, 42, 46, 49, 50, 51, 58, 59, 60, 61, 63, 67, 81, 82, 83, 84, 85, 86, 112, 158, 162, 164, 172, 177, 178, 179, 194, 200, 208, 211, 222, 223, 224, 225, 228, 229, 242, 247, 248, 249, 250, 252, 254, 256, 260, 261, 262, 267, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 288, 296, 297, 305, 311, 313, 318, 322, 323, 326, 329, 334, 376, 377, 386, 387, 388, 389, 392, 395, 400, 401, 402, 407, 414, 421, 422, 423, 427, 432, 434, 436, 437, 438, 439, 441, 449, 459, 462, 468, 470, 472, 474, 481, 482, 483, 485, 487, 488, 489, 491, 503, 505, 507, 509, 513, 514, 515, 517, 519, 521, 523, 525, 527, 529, 535, 537, 539, 549, 557, 560, 569, 589, 591], "de": [14, 54, 87, 89, 90, 178, 297, 437, 461], "refer": [14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 38, 39, 40, 44, 46, 47, 48, 49, 50, 52, 55, 56, 57, 60, 61, 64, 65, 66, 67, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176, 177, 225, 248, 249, 253, 255, 256, 260, 262, 264, 292, 295, 300, 305, 306, 308, 314, 317, 320, 323, 329, 341, 371, 388, 394, 398, 400, 402, 406, 411, 412, 437, 438, 456, 457, 474, 505, 586], "tutori": [14, 32, 67, 259, 263, 269, 273, 297, 376], "decompress": [14, 32, 67, 297, 376], "onednn_default_fpmath_mod": 14, "dnnl_set_default_fpmath_mod": [14, 298, 316], "set_default_fpmath_mod": [14, 335, 365], "build": [14, 18, 62, 65, 147, 170, 232, 233, 246, 247, 249, 250, 254, 255, 256, 261, 262, 264, 270, 288, 292, 295, 335, 355, 363, 385, 386, 388, 389, 395, 401, 402, 412, 449, 501], "arm": [14, 178, 363], "bfloat16": [14, 30, 32, 59, 186, 189, 190, 198, 249, 376, 388], "kernel": [14, 15, 24, 28, 31, 33, 36, 42, 53, 62, 71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 157, 160, 174, 175, 176, 177, 179, 201, 202, 224, 225, 246, 247, 249, 250, 253, 254, 271, 281, 283, 293, 298, 305, 325, 335, 343, 349, 385, 386, 388, 389, 394, 395, 403, 437, 439, 457, 545, 547, 549, 560, 586], "introduc": [14, 36, 43, 53, 63, 159, 172, 177, 411, 438], "typic": [15, 16, 19, 20, 26, 37, 39, 42, 43, 46, 49, 53, 54, 57, 59, 60, 63, 66, 112, 153, 155, 162, 165, 166, 177, 179, 205, 206, 255, 256, 259, 270, 273, 292, 297, 323, 329, 332, 398, 411, 421, 461], "bandwidth": [15, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 59, 300, 437], "pressur": [15, 59], "lead": [15, 18, 20, 22, 24, 25, 29, 32, 34, 43, 53, 54, 57, 59, 63, 64, 66, 162, 175, 176, 177, 201, 253, 263, 308, 341, 343, 371, 394, 403, 411, 413, 416, 417, 586, 587], "append": [15, 36, 175, 176, 253, 305, 394, 549], "mechan": [15, 33, 36, 45, 54, 62, 65, 154, 155, 261, 262, 300, 401, 402], "just": [15, 16, 24, 28, 29, 31, 34, 59, 62, 159, 160, 173, 175, 176, 177, 178, 184, 194, 248, 249, 253, 260, 262, 388, 394, 400, 402, 403, 406, 411, 412, 413, 414, 415, 416, 417, 418, 437, 456], "like": [15, 19, 20, 24, 28, 29, 37, 42, 54, 59, 61, 63, 65, 66, 74, 112, 157, 164, 175, 176, 177, 178, 253, 300, 305, 355, 394, 398, 403, 411, 413, 414, 415, 416, 417, 418, 548, 549], "dnnl_post_ops_t": [15, 298, 305, 549], "post_op": [15, 58, 175, 176, 179, 244, 245, 248, 252, 253, 263, 267, 273, 274, 279, 282, 298, 305, 342, 343, 365, 381, 383, 387, 392, 394, 403, 407, 421, 423, 434, 438, 510, 557, 585, 586], "attach": [15, 16, 24, 26, 58, 59, 155, 175, 176, 253, 394, 406, 411, 412, 413, 415, 416, 417, 418, 456, 541, 549], "set_post_op": [15, 29, 58, 175, 176, 244, 245, 248, 252, 253, 263, 267, 273, 274, 279, 282, 381, 383, 387, 392, 394, 403, 407, 421, 423, 434, 438, 557, 586], "dnnl_primitive_attr_set_post_op": [15, 298, 305], "simpl": [15, 16, 25, 29, 156, 173, 174, 178, 246, 254, 255, 259, 263, 264, 270, 273, 280, 292, 295, 385, 387, 395, 398, 403, 411, 413, 415, 416, 417, 418, 421, 436], "po": [15, 263, 273, 403, 421, 586], "assert": [15, 18, 36, 167, 177, 247, 249, 250, 255, 256, 259, 261, 262, 264, 270, 292, 295, 323, 386, 388, 389, 398, 413, 414, 415, 416, 417, 418, 543], "len": [15, 308, 341, 371, 549], "append_someth": 15, "append_something_els": 15, "note": [15, 16, 18, 24, 32, 36, 38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 63, 83, 155, 164, 175, 176, 177, 178, 194, 242, 243, 251, 253, 255, 256, 259, 262, 264, 276, 277, 278, 283, 288, 292, 295, 296, 300, 310, 329, 351, 355, 377, 379, 386, 387, 390, 394, 398, 401, 402, 411, 427, 430, 432, 439, 449, 459, 479], "matter": [15, 59, 63, 413, 414, 416, 417], "further": [15, 28, 29, 33, 42, 81, 154, 163, 194, 211, 438], "would": [15, 16, 18, 20, 24, 28, 29, 31, 57, 58, 59, 63, 64, 67, 157, 162, 175, 176, 177, 253, 259, 305, 306, 308, 323, 334, 341, 371, 387, 394, 398, 411, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 543, 549, 557, 563, 589, 591], "togeth": [15, 41, 177, 334, 342, 438, 468, 507, 523, 527, 535, 537, 548, 585, 589], "anoth": [15, 18, 23, 28, 39, 43, 47, 49, 51, 55, 59, 134, 155, 160, 164, 175, 177, 179, 255, 256, 270, 292, 329, 355, 386, 406, 411, 412, 456, 501, 510, 543], "sequenc": [15, 19, 28, 29, 43, 53, 54, 63, 160, 194, 261, 262, 288, 305, 401, 402, 406, 412, 438, 449, 456, 549], "appear": [15, 26, 39, 40, 46, 47, 49, 50, 51, 59, 165, 177, 178], "maximum": [15, 16, 19, 22, 36, 38, 59, 127, 139, 157, 174, 179, 203, 261, 262, 283, 288, 300, 302, 312, 341, 398, 439, 449], "32": [15, 25, 32, 59, 60, 63, 172, 175, 176, 190, 194, 198, 209, 217, 241, 249, 250, 252, 253, 261, 262, 264, 267, 295, 297, 298, 305, 308, 329, 341, 371, 387, 388, 389, 392, 394, 407, 461, 549, 557], "page": [15, 19, 26, 59, 60, 67, 84, 160, 161, 162, 168, 458], "moreov": [15, 28, 31, 34, 60, 155, 194, 211], "actual": [15, 16, 18, 19, 29, 59, 61, 63, 155, 164, 166, 167, 175, 176, 177, 193, 210, 212, 234, 253, 305, 323, 329, 394, 398, 406, 411, 437, 541, 543, 557, 569], "instanc": [15, 16, 18, 20, 28, 29, 31, 36, 58, 63, 67, 155, 159, 162, 173, 177, 194, 272, 323, 341, 353, 358, 371, 411, 419, 498, 548, 582, 586], "veri": [15, 16, 18, 59, 63, 172, 177, 406, 411], "slow": 15, "robust": [15, 58, 59], "code": [15, 19, 24, 25, 26, 28, 29, 30, 31, 33, 36, 37, 58, 59, 63, 65, 154, 156, 159, 160, 162, 168, 174, 175, 176, 177, 178, 253, 255, 256, 270, 271, 292, 323, 335, 386, 387, 394, 401, 402, 406, 412, 413, 414, 415, 416, 417, 418, 437, 438, 456, 463], "inspect": [15, 19, 329, 411], "index": [15, 20, 22, 26, 28, 29, 34, 57, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 164, 165, 166, 168, 177, 179, 246, 254, 269, 298, 305, 310, 315, 323, 324, 329, 340, 352, 366, 369, 370, 385, 386, 395, 401, 402, 406, 411, 412, 456, 476, 479, 497, 499, 541, 543, 549, 555, 557, 560, 563, 581], "less": [15, 22, 29, 67, 112, 155, 163, 184, 185, 288, 327, 350, 387, 449, 497], "than": [15, 18, 22, 24, 27, 29, 32, 34, 59, 63, 67, 78, 79, 98, 112, 147, 162, 163, 168, 177, 178, 184, 185, 225, 232, 233, 249, 250, 254, 273, 327, 350, 388, 389, 395, 411, 421, 438, 497], "its": [15, 18, 19, 22, 24, 30, 32, 34, 42, 45, 50, 53, 58, 61, 63, 66, 67, 120, 122, 154, 155, 164, 174, 175, 176, 177, 178, 194, 213, 214, 253, 273, 288, 297, 323, 353, 357, 386, 387, 394, 411, 412, 421, 429, 449, 456, 461, 497, 510, 541, 555, 579, 582], "popular": [15, 16, 45, 177, 411], "activ": [15, 16, 18, 20, 23, 28, 42, 60, 61, 78, 94, 108, 117, 164, 177, 194, 211, 224, 225, 273, 281, 298, 305, 334, 421, 437, 501, 549, 557, 560, 589, 591], "preced": [15, 20, 24, 28, 30, 31, 39, 62, 66, 72, 82, 83, 86, 157, 159, 160, 165, 178, 194, 437], "inner": [15, 28, 32, 58, 63, 177, 194, 218, 219, 247, 274, 303, 328, 376, 386, 424, 437, 512, 513, 514, 515, 516, 517, 543, 600], "product": [15, 28, 32, 42, 43, 54, 58, 63, 67, 112, 147, 175, 176, 218, 219, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 265, 266, 267, 268, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 296, 298, 300, 303, 308, 323, 328, 341, 371, 376, 377, 379, 381, 383, 385, 386, 388, 389, 390, 392, 394, 395, 400, 405, 407, 409, 419, 424, 425, 427, 430, 432, 434, 436, 437, 439, 441, 443, 445, 447, 450, 452, 454, 459, 512, 513, 514, 515, 516, 517, 543, 600], "dnnl_post_ops_append_eltwis": [15, 298, 305], "append_eltwis": [15, 58, 175, 176, 244, 248, 252, 253, 267, 273, 274, 279, 282, 381, 387, 392, 394, 407, 421, 423, 434, 438, 549], "simplic": [15, 16, 164, 177, 251, 390, 398, 406, 412, 456], "alg": [15, 178, 437, 438], "alpha": [15, 20, 29, 34, 57, 60, 66, 91, 92, 100, 101, 108, 121, 158, 175, 176, 179, 201, 202, 224, 225, 244, 246, 249, 250, 252, 253, 254, 263, 267, 269, 273, 274, 277, 279, 297, 298, 305, 308, 314, 321, 326, 334, 341, 365, 371, 381, 385, 388, 389, 392, 394, 395, 403, 407, 411, 421, 423, 430, 434, 438, 461, 493, 495, 531, 533, 549, 551, 553, 560, 589, 591], "beta": [15, 20, 29, 34, 57, 64, 66, 73, 74, 99, 100, 101, 106, 107, 120, 141, 142, 162, 175, 176, 179, 201, 202, 224, 225, 244, 246, 249, 250, 252, 253, 254, 263, 267, 269, 274, 277, 279, 298, 305, 306, 308, 314, 317, 320, 321, 334, 341, 365, 371, 381, 385, 388, 389, 392, 394, 395, 403, 407, 411, 423, 430, 434, 438, 493, 495, 531, 533, 549, 560, 589, 591], "replac": [15, 34, 42, 63, 64, 67, 78, 79, 160, 164, 165, 173, 178, 403, 404, 411], "operatornam": [15, 16, 32, 34, 175], "preserv": [15, 18, 58, 59, 246, 254, 385, 395], "exist": [15, 19, 32, 33, 36, 39, 67, 154, 228, 229, 323, 352, 356, 360, 543], "prior": [15, 305, 324, 329, 330, 369, 411, 549, 555, 556, 586], "shift": [15, 28, 60, 63, 74, 106, 213, 214, 243, 245, 272, 275, 297, 298, 305, 306, 317, 320, 329, 379, 383, 419, 425, 461, 519, 521, 557], "multipli": [15, 18, 28, 38, 42, 51, 53, 63, 164, 203, 263, 271, 288, 293, 294, 300, 302, 305, 308, 323, 339, 341, 371, 403, 412, 449, 456, 457, 549, 581], "scale": [15, 22, 26, 27, 28, 29, 32, 43, 45, 50, 54, 58, 61, 63, 67, 74, 87, 89, 90, 91, 92, 99, 104, 105, 106, 107, 123, 162, 163, 166, 168, 175, 176, 179, 190, 201, 202, 209, 213, 214, 243, 245, 248, 253, 256, 259, 262, 272, 273, 275, 286, 291, 297, 298, 300, 305, 306, 308, 317, 320, 329, 333, 339, 341, 342, 343, 371, 379, 383, 387, 394, 398, 399, 401, 402, 403, 404, 414, 419, 421, 422, 425, 445, 446, 454, 461, 462, 519, 521, 549, 556, 557, 566, 568, 581, 585, 586], "residu": [15, 261, 548], "learn": [15, 16, 24, 28, 29, 30, 32, 45, 58, 59, 63, 155, 186, 189, 281, 363, 437, 548], "block": [15, 19, 26, 28, 36, 53, 160, 174, 175, 176, 178, 179, 193, 194, 210, 211, 224, 225, 253, 282, 323, 343, 363, 394, 411, 437, 543, 548, 587], "previous": [15, 60, 255, 256, 270, 292, 323, 387, 412, 437, 456, 541, 543, 557], "scenario": [15, 32, 33, 53, 154, 155, 157, 176, 200, 208, 387], "previou": [15, 16, 24, 34, 53, 58, 60, 162, 164, 177, 246, 254, 259, 273, 297, 305, 385, 395, 398, 421, 461, 549], "magnitud": 15, "operand": [15, 63, 178, 305, 549], "s8": [15, 16, 20, 22, 25, 29, 32, 34, 47, 49, 50, 51, 54, 55, 57, 60, 61, 64, 67, 87, 89, 90, 123, 157, 158, 162, 163, 164, 165, 166, 175, 176, 178, 198, 209, 248, 253, 256, 259, 260, 262, 273, 280, 286, 297, 387, 394, 398, 400, 402, 414, 421, 436, 445, 461], "gemm": [15, 18, 24, 29, 63, 177, 179, 261, 262, 402, 438], "_point": 15, "origin": [15, 16, 20, 34, 57, 59, 60, 64, 104, 105, 162, 163, 166, 168, 176, 177, 178, 184, 273, 297, 305, 314, 323, 387, 398, 421, 461, 549], "reinterpret": [15, 29, 33, 305, 549], "_data": 15, "_type": 15, "1x1": [15, 39, 179, 305, 549], "seen": [15, 438], "mobilenet_v1": 15, "stack": [15, 164], "opportun": 15, "dnnl_post_ops_append_dw": [15, 298, 305], "append_dw": [15, 549], "better": [15, 22, 24, 59, 172, 177, 179, 323, 386, 398, 403, 411, 414, 437, 438], "readabl": [15, 411, 456], "assum": [15, 16, 19, 23, 24, 29, 63, 64, 65, 81, 87, 89, 90, 123, 158, 160, 163, 177, 213, 214, 242, 252, 259, 263, 267, 274, 276, 278, 284, 288, 296, 305, 308, 323, 329, 341, 371, 377, 392, 398, 401, 402, 403, 407, 411, 412, 423, 427, 432, 437, 438, 441, 449, 456, 459, 543, 549], "2d": [15, 20, 29, 34, 57, 61, 63, 66, 67, 112, 157, 158, 163, 165, 166, 174, 177, 179, 194, 211, 305, 311, 313, 325, 333, 411, 438, 452, 453, 481, 483, 485, 487, 489, 491, 545, 547, 549], "notat": [15, 18, 34, 43, 53, 54, 67, 177, 194, 211], "conv_1x1": 15, "spatial": [15, 18, 20, 28, 29, 44, 57, 61, 66, 71, 72, 81, 82, 83, 84, 85, 86, 104, 105, 114, 115, 157, 158, 163, 165, 177, 179, 194, 211, 305, 311, 313, 323, 325, 333, 411, 481, 483, 485, 487, 489, 491, 501, 545, 547, 549, 566, 568], "kh": [15, 16, 28, 29, 61, 63, 71, 81, 82, 114, 157, 252, 256, 267, 281, 282, 283, 305, 392, 407, 437, 438, 439, 549], "kw": [15, 16, 28, 29, 61, 63, 71, 81, 114, 157, 252, 256, 267, 281, 282, 283, 305, 392, 407, 437, 438, 439, 549], "conv_dw": 15, "g": [15, 16, 18, 20, 23, 24, 28, 29, 34, 54, 57, 59, 61, 64, 65, 67, 81, 89, 99, 106, 107, 162, 165, 173, 174, 175, 176, 177, 178, 211, 242, 252, 253, 255, 256, 259, 262, 263, 270, 276, 278, 280, 288, 292, 296, 297, 298, 300, 305, 323, 377, 392, 394, 398, 403, 411, 413, 414, 416, 417, 427, 432, 436, 449, 459, 461, 479, 499, 549, 557, 559, 564, 581], "oc": [15, 16, 28, 29, 61, 81, 246, 252, 254, 256, 267, 274, 276, 281, 282, 298, 305, 385, 392, 395, 407, 423, 427, 437, 438, 549, 596], "ic": [15, 16, 28, 29, 61, 81, 87, 123, 163, 166, 243, 244, 245, 246, 251, 252, 254, 255, 256, 267, 268, 270, 272, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 298, 305, 379, 381, 383, 385, 390, 392, 395, 407, 409, 419, 423, 427, 430, 437, 438, 439, 441, 443, 445, 447, 450, 452, 454, 549, 596], "pad_l": 15, "pad_r": 15, "conv_": [15, 16], "dw": [15, 28, 29, 71, 81, 82, 114, 157, 283, 439], "dst_": [15, 16, 34, 63, 87, 120, 123], "n": [15, 16, 18, 20, 22, 23, 26, 28, 29, 43, 53, 54, 57, 60, 61, 64, 66, 67, 71, 73, 74, 76, 80, 81, 106, 107, 110, 112, 114, 148, 157, 158, 160, 162, 163, 165, 167, 168, 170, 175, 176, 177, 179, 194, 211, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 305, 308, 310, 323, 339, 341, 342, 343, 365, 371, 377, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 397, 398, 400, 402, 403, 405, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 543, 549, 582, 585, 586, 587, 594], "oc_": 15, "ceil": [15, 48, 71, 114, 201, 202, 305, 549], "oh_": 15, "ow_": 15, "oh_conv_1x1": 15, "ow_conv_1x1": 15, "height": [15, 28, 29, 81, 82, 114, 115, 177, 194, 211, 243, 244, 245, 251, 252, 267, 268, 272, 274, 277, 283, 284, 285, 286, 287, 289, 291, 311, 313, 325, 379, 381, 383, 386, 390, 392, 407, 409, 419, 423, 430, 439, 441, 443, 445, 447, 450, 454, 481, 483, 485, 487, 489, 491, 545, 547], "width": [15, 28, 29, 81, 82, 114, 115, 177, 194, 211, 243, 244, 245, 251, 252, 267, 268, 272, 274, 277, 283, 284, 285, 286, 287, 289, 291, 311, 313, 325, 379, 381, 383, 386, 390, 392, 407, 409, 419, 423, 430, 439, 441, 443, 445, 447, 450, 454, 481, 483, 485, 487, 489, 491, 545, 547], "conv": [15, 16, 29, 58, 156, 160, 173, 178, 246, 248, 249, 250, 254, 255, 256, 270, 281, 282, 292, 385, 387, 388, 389, 395, 414, 437, 438], "bia": [15, 16, 17, 28, 29, 39, 40, 46, 49, 50, 51, 60, 61, 67, 76, 77, 81, 84, 99, 106, 107, 112, 164, 179, 185, 194, 211, 222, 223, 230, 231, 242, 248, 249, 250, 252, 254, 267, 274, 276, 278, 279, 280, 288, 296, 305, 311, 313, 318, 322, 329, 334, 377, 386, 387, 388, 389, 392, 395, 407, 423, 427, 432, 434, 436, 449, 459, 468, 470, 483, 485, 489, 491, 507, 509, 515, 517, 523, 525, 527, 529, 535, 537, 539, 549, 560, 569, 589, 591], "though": [15, 18, 25, 59, 63, 164, 232, 233, 398, 403, 411], "convent": [15, 20, 22, 26, 29, 34, 57, 59, 61, 64, 66, 67, 68, 71, 78, 80, 81, 91, 94, 95, 100, 102, 108, 109, 112, 114, 132, 137, 139, 141, 150, 157, 158, 162, 163, 164, 165, 166, 168, 177, 178, 323, 376, 411, 437, 458], "impli": [15, 147, 175, 176, 213, 214, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 305, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "part": [15, 16, 19, 24, 37, 45, 53, 62, 156, 159, 175, 176, 253, 255, 256, 264, 270, 292, 295, 323, 343, 394, 411, 415, 418, 437, 543, 586, 587], "dst_1x1": 15, "wei_dw": 15, "dst_dw": 15, "dnnl_format_tag_ani": [15, 157, 164, 194, 211, 246, 254, 307, 311, 313, 318, 323, 326, 329, 331, 333, 334, 385, 395], "coincid": [15, 177, 343, 586], "util": [15, 18, 31, 36, 155, 175, 176, 253, 288, 303, 309, 394, 412, 449, 457], "lifetim": [15, 37, 154, 225, 255, 256, 264, 270, 292, 295, 305, 324, 329, 369], "thu": [15, 29, 67, 155, 288, 437, 449], "gain": [15, 58, 438], "expect": [15, 19, 20, 24, 29, 36, 45, 57, 61, 63, 64, 66, 67, 89, 156, 157, 162, 163, 175, 176, 178, 179, 184, 185, 213, 214, 224, 225, 253, 269, 271, 305, 342, 343, 394, 411, 412, 437, 438, 479, 541, 557, 559, 564, 569, 581, 582, 585, 586], "dnnl_post_ops_append_binari": [15, 298, 305], "append_binari": [15, 175, 176, 245, 253, 383, 394, 549], "desc": [15, 16, 18, 19, 33, 58, 59, 154, 156, 160, 167, 175, 176, 177, 179, 224, 225, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 323, 369, 370, 377, 379, 381, 383, 386, 387, 388, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 403, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 545, 547, 549, 551, 553, 557, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "src1": [15, 38, 305, 476, 549], "_1": [15, 113, 116], "per": [15, 22, 26, 29, 43, 45, 57, 61, 64, 67, 82, 84, 85, 86, 87, 89, 90, 99, 106, 107, 122, 123, 155, 166, 247, 286, 323, 335, 398, 438, 445, 549, 592], "broadcast": [15, 22, 26, 42, 43, 53, 67, 70, 76, 88, 98, 112, 113, 116, 119, 146, 149, 158, 162, 168, 305, 307, 549], "channel": [15, 20, 28, 29, 45, 57, 60, 61, 64, 66, 74, 76, 77, 81, 82, 83, 84, 85, 86, 87, 89, 90, 99, 106, 107, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 158, 164, 165, 166, 179, 184, 185, 194, 211, 242, 243, 244, 245, 251, 252, 256, 267, 268, 272, 274, 275, 276, 277, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 321, 323, 377, 379, 381, 383, 386, 390, 392, 407, 409, 411, 414, 419, 423, 425, 427, 430, 432, 437, 439, 441, 443, 445, 447, 449, 450, 451, 452, 454, 459, 501, 549], "format_tag": [15, 16, 19, 22, 29, 58, 59, 61, 67, 158, 161, 163, 164, 175, 176, 177, 178, 179, 217, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 257, 258, 260, 261, 262, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 323, 365, 377, 379, 381, 383, 386, 387, 388, 389, 390, 392, 394, 396, 397, 400, 401, 402, 406, 407, 409, 411, 412, 419, 421, 422, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 462, 468, 470, 481, 483, 485, 487, 489, 491, 507, 509, 513, 515, 517, 523, 525, 527, 529, 535, 537, 541, 543, 562, 568, 589, 591], "tag": [15, 16, 18, 29, 59, 61, 67, 157, 163, 167, 179, 194, 211, 212, 234, 249, 250, 269, 282, 284, 298, 323, 329, 388, 389, 406, 411, 421, 437, 438, 441, 461, 543], "later": [15, 19, 23, 24, 59, 99, 106, 177, 242, 243, 268, 276, 278, 284, 296, 377, 379, 409, 411, 427, 432, 441, 459], "mismatch": [15, 59, 178, 179, 269, 411], "suboptim": [15, 20, 29, 34, 57, 64, 66, 323, 438, 541], "initi": [15, 19, 28, 30, 33, 59, 67, 155, 158, 164, 175, 176, 177, 179, 186, 189, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 259, 260, 261, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 291, 293, 296, 297, 307, 311, 313, 318, 323, 324, 326, 331, 333, 334, 335, 340, 343, 355, 357, 369, 370, 377, 379, 381, 383, 386, 388, 389, 390, 392, 394, 395, 398, 400, 401, 402, 403, 407, 409, 411, 419, 421, 423, 425, 427, 432, 434, 436, 441, 443, 445, 447, 450, 454, 457, 459, 461, 468, 470, 481, 483, 485, 487, 489, 491, 507, 509, 513, 515, 517, 523, 525, 527, 529, 535, 537, 541, 562, 568, 586, 589, 591], "get_params_binari": [15, 549], "select": [15, 22, 23, 24, 25, 36, 46, 51, 53, 60, 179, 184, 185, 193, 194, 203, 210, 211, 302, 342, 438, 585], "condit": [15, 22, 29, 34, 58, 136, 164, 175, 176, 207, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 343, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "src2": [15, 476], "third": [15, 22, 36, 136, 305, 411, 549], "becom": [15, 20, 43, 53, 57, 64, 173, 178, 194, 211, 438], "_2": 15, "There": [15, 19, 20, 22, 25, 26, 29, 34, 36, 53, 57, 58, 60, 61, 66, 155, 157, 158, 161, 162, 163, 164, 165, 166, 168, 173, 175, 176, 253, 288, 305, 307, 323, 394, 406, 412, 438, 449, 456, 557, 560], "dnnl_post_ops_append_prelu": [15, 298, 305], "append_prelu": [15, 549], "int": [15, 16, 63, 160, 170, 175, 176, 177, 194, 225, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 305, 310, 323, 324, 327, 329, 330, 335, 336, 337, 339, 340, 341, 343, 350, 351, 353, 356, 365, 366, 369, 370, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 582, 586, 588, 589, 590, 591, 592], "assumpt": [15, 28, 163, 413, 414, 415, 416, 417, 418, 421, 461], "dnnl_arg_attr_multiple_post_op": [15, 22, 29, 34, 57, 61, 64, 67, 157, 161, 163, 166, 245, 298, 329, 383, 549], "dnnl_arg_weight": [15, 16, 29, 58, 61, 67, 158, 246, 247, 248, 249, 250, 252, 254, 257, 258, 259, 260, 263, 267, 273, 274, 279, 280, 281, 282, 284, 297, 298, 329, 385, 387, 388, 389, 392, 395, 396, 397, 398, 400, 403, 407, 421, 423, 434, 436, 437, 438, 441, 461, 549], "fp32": [15, 24, 32, 59], "plain": [15, 16, 26, 67, 162, 194, 211, 217, 241, 305, 323, 438, 549], "ab": [15, 28, 34, 42, 43, 51, 53, 54, 60, 61, 67, 69, 162, 175, 176, 184, 185, 203, 211, 217, 241, 245, 253, 260, 273, 280, 297, 300, 302, 305, 383, 394, 400, 421, 436, 461, 543, 549], "acb": [15, 211, 305, 549], "acdb": [15, 28, 211, 305, 549], "acdeb": [15, 211, 305, 549], "th": [15, 60, 125, 126, 127, 128, 129, 130, 131, 305, 549, 557], "dedic": [15, 58, 167, 174, 175, 176, 253, 305, 394, 549, 557], "along": [15, 37, 67, 80, 89, 90, 97, 125, 126, 127, 128, 129, 130, 131, 139, 156, 161, 165, 166, 173, 178, 179, 217, 241, 297, 305, 323, 336, 450, 451, 452, 453, 461, 549, 557, 571, 573], "common": [15, 16, 19, 37, 59, 155, 162, 175, 176, 178, 232, 233, 253, 288, 303, 305, 328, 394, 406, 411, 412, 449, 456, 549, 557], "whole": [15, 16, 24, 158, 175, 176, 177, 253, 288, 305, 394, 449, 549, 557], "laid": [15, 19, 28, 177, 194, 211, 305, 323, 332, 411, 437, 549], "cnn": [15, 20, 28, 29, 35, 36, 59, 60, 61, 62, 64, 157, 165, 172, 194, 211, 247, 248, 249, 250, 305, 323, 376, 398, 411, 437, 549], "4d": [15, 53, 54, 61, 106, 107, 177, 194, 211, 305, 323, 411, 549], "h": [15, 20, 22, 28, 29, 32, 53, 54, 57, 61, 65, 66, 73, 74, 76, 157, 158, 162, 173, 177, 179, 183, 184, 188, 189, 190, 192, 193, 194, 196, 197, 202, 204, 206, 208, 211, 214, 216, 217, 219, 221, 223, 225, 227, 229, 231, 233, 234, 236, 238, 240, 246, 247, 250, 254, 255, 256, 260, 261, 262, 264, 265, 269, 270, 271, 281, 288, 292, 293, 294, 295, 305, 323, 385, 389, 395, 400, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 437, 449, 456, 457, 499, 500, 501, 549, 592], "w": [15, 20, 22, 28, 29, 42, 57, 60, 61, 66, 67, 73, 74, 76, 157, 158, 162, 164, 177, 190, 194, 198, 211, 246, 247, 249, 250, 254, 262, 269, 281, 282, 305, 323, 385, 388, 389, 395, 401, 402, 411, 437, 549], "let": [15, 16, 29, 58, 59, 61, 81, 82, 89, 163, 177, 197, 199, 249, 250, 259, 281, 388, 389, 398, 406, 411, 412, 437, 438, 456], "consid": [15, 16, 18, 20, 26, 29, 32, 53, 57, 59, 63, 64, 168, 177, 213, 214, 311, 313, 323, 325, 398, 406, 411, 510], "pattern": [15, 19, 45, 299, 413, 416, 417], "pretti": [15, 411], "topologi": [15, 29, 58, 157, 165, 246, 247, 249, 250, 273, 288, 297, 385, 386, 388, 389, 421, 437, 449, 461], "resnet": [15, 300], "famili": [15, 24, 63, 186, 189], "append_sum": [15, 263, 403, 549], "eltwise_relu": [15, 58, 175, 176, 185, 244, 247, 248, 249, 250, 252, 253, 266, 267, 268, 269, 271, 273, 274, 279, 282, 293, 294, 381, 386, 387, 388, 389, 392, 394, 406, 407, 409, 411, 412, 421, 423, 434, 438, 456, 457, 589, 591], "slope": [15, 20, 29, 108, 121, 122, 213, 214, 248, 269, 334, 387, 411, 589, 591], "f": [15, 23, 28, 67, 141, 142, 161, 163, 164, 175, 176, 211, 242, 243, 244, 245, 248, 251, 252, 253, 259, 260, 261, 262, 263, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 289, 290, 291, 296, 298, 305, 308, 341, 371, 377, 379, 381, 383, 387, 390, 392, 394, 398, 400, 402, 403, 407, 409, 411, 419, 421, 423, 425, 427, 430, 432, 434, 438, 439, 441, 443, 445, 447, 450, 452, 454, 459, 549, 557], "unus": [15, 298, 334], "convolution_forward": [15, 16, 19, 29, 58, 156, 247, 248, 249, 250, 252, 281, 282, 311, 365, 386, 387, 388, 389, 392, 437, 438, 481, 483, 555], "conv_d": [15, 438, 549], "hypothet": 15, "illustr": 15, "set_scales_mask": [15, 16, 67, 248, 259, 263, 273, 286, 387, 398, 399, 403, 404, 421, 422, 445, 557], "cover": [15, 16, 59, 63, 177, 411, 437], "eltwise_tanh": [15, 185, 296, 459, 589, 591], "eltwise_linear": [15, 185], "linear": [15, 19, 34, 42, 87, 89, 90, 104, 105, 123, 163, 177, 184, 185, 201, 202, 276, 308, 314, 333, 412, 428, 456, 541], "dnnl_arg_src": [15, 16, 20, 29, 34, 57, 58, 61, 64, 66, 67, 157, 158, 161, 163, 165, 166, 243, 246, 247, 248, 249, 250, 252, 254, 257, 258, 259, 260, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 294, 297, 298, 324, 329, 340, 369, 370, 379, 385, 386, 387, 388, 389, 392, 395, 396, 397, 398, 400, 403, 405, 406, 407, 409, 411, 412, 419, 421, 423, 425, 430, 434, 436, 437, 438, 439, 441, 443, 445, 447, 450, 452, 456, 457, 461, 499, 555, 563], "dnnl_arg_dst": [15, 16, 20, 22, 26, 29, 34, 57, 58, 61, 64, 66, 67, 157, 158, 161, 163, 165, 166, 168, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 257, 258, 259, 260, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 297, 298, 329, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 403, 405, 406, 407, 409, 411, 412, 419, 421, 423, 425, 430, 434, 436, 437, 438, 439, 441, 443, 445, 447, 450, 452, 454, 456, 457, 461], "s_": 15, "mobilenet": 15, "pad": [15, 28, 29, 53, 71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 157, 164, 177, 178, 179, 184, 185, 224, 225, 252, 262, 267, 281, 282, 283, 288, 298, 305, 311, 313, 323, 325, 329, 386, 392, 401, 407, 437, 438, 439, 449, 481, 483, 485, 487, 489, 491, 543, 545, 547, 549, 560], "dnnl_arg_attr_post_op_dw": [15, 29, 298, 329], "cpd": 15, "dw_weight_md": 15, "exec_arg_md": [15, 224, 369, 370, 555, 563], "dw_bias_md": 15, "dnnl_arg_bia": [15, 29, 61, 67, 164, 242, 246, 247, 248, 249, 250, 252, 254, 261, 262, 267, 274, 276, 278, 279, 288, 296, 298, 329, 377, 385, 387, 388, 389, 392, 395, 401, 402, 407, 423, 427, 432, 434, 449, 459], "behaviour": 15, "relu_": [15, 294, 457], "scales_": 15, "conv_dst_md": [15, 246, 248, 249, 250, 252, 254, 281, 282, 385, 387, 388, 389, 392, 395, 437, 438], "mb": [15, 27, 28, 160, 279, 305, 434, 549, 557, 595, 596, 597, 598], "nchw": [15, 20, 28, 57, 66, 157, 163, 165, 211, 243, 244, 247, 248, 249, 250, 251, 252, 266, 267, 268, 271, 274, 277, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 379, 381, 386, 387, 388, 389, 390, 392, 406, 407, 409, 411, 412, 423, 430, 437, 438, 439, 441, 443, 445, 447, 450, 454, 456, 457], "abcd": [15, 28, 178, 211, 289, 437, 438, 450], "binary_add": [15, 175, 176, 185, 245, 253, 383, 394], "src1_md": 15, "unordered_map": [15, 242, 243, 244, 245, 247, 249, 250, 251, 252, 255, 256, 257, 258, 260, 261, 262, 264, 267, 268, 270, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 292, 295, 296, 298, 369, 370, 377, 379, 381, 383, 386, 388, 389, 390, 392, 396, 397, 400, 401, 402, 407, 409, 413, 414, 415, 416, 417, 418, 419, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 450, 452, 454, 459, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 544, 546, 549, 550, 552, 555, 561, 563, 565, 567, 570, 572, 574, 576, 580, 588, 590], "arg": [15, 16, 58, 246, 254, 298, 305, 324, 329, 340, 369, 370, 385, 395, 465, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 499, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 544, 546, 550, 552, 555, 557, 561, 563, 565, 567, 570, 572, 574, 576, 580, 588, 590], "insert": [15, 45, 112, 242, 243, 244, 245, 249, 250, 251, 252, 257, 258, 260, 267, 268, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 296, 377, 379, 381, 383, 388, 389, 390, 392, 396, 397, 400, 407, 409, 419, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 450, 452, 454, 459, 549], "conv_src_memori": [15, 246, 248, 249, 250, 254, 385, 387, 388, 389, 395], "binary_post_op_posit": [15, 22, 29, 34, 57, 61, 64, 67, 157, 161, 163, 166], "hard": 15, "dnnl_arg_src_1": [15, 20, 22, 29, 34, 57, 61, 64, 67, 157, 161, 163, 166, 244, 245, 298, 329, 381, 383], "parenthes": 15, "around": [15, 19, 25, 259, 398, 421, 437], "binary_post_op_src1_memori": 15, "sign": [16, 32, 45, 60, 63, 175, 176, 190, 198, 209, 253, 305, 308, 329, 341, 371, 387, 394, 557], "unsign": [16, 32, 45, 63, 190, 198, 209, 225, 273, 298, 305, 306, 308, 317, 320, 334, 335, 338, 341, 365, 371, 387, 421, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 557, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591, 592], "primari": 16, "goal": 16, "compat": [16, 24, 30, 60, 98, 175, 176, 253, 394], "relat": [16, 20, 22, 24, 26, 29, 32, 34, 57, 64, 66, 67, 157, 160, 161, 162, 163, 164, 165, 166, 168, 263, 300, 401, 402, 403, 411, 412, 438, 456, 457], "materi": 16, "deep": [16, 28, 29, 30, 32, 45, 58, 59, 63, 155, 173, 186, 189, 281, 357, 437], "annot": [16, 160, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 401, 402], "x_": [16, 60, 63, 398], "scale_": [16, 29, 32, 162], "x": [16, 22, 28, 29, 42, 63, 70, 88, 99, 104, 105, 113, 116, 119, 149, 160, 162, 168, 177, 185, 211, 243, 246, 247, 248, 249, 250, 254, 271, 272, 273, 275, 286, 297, 298, 308, 341, 343, 371, 379, 385, 386, 387, 388, 389, 395, 412, 419, 421, 425, 445, 456, 461, 586], "zp_": [16, 32], "factor": [16, 22, 26, 29, 43, 53, 54, 57, 58, 61, 63, 64, 67, 89, 91, 92, 162, 163, 166, 175, 201, 224, 225, 248, 262, 291, 298, 305, 329, 333, 387, 398, 402, 421, 437, 454, 461, 549, 557, 560, 566, 568], "int32": 16, "denot": [16, 24, 28, 34, 60, 63, 72, 82, 83, 86, 114, 115, 121, 122, 147, 174, 177, 178, 194, 211, 437], "elementwis": [16, 22, 179, 185, 213, 214, 305, 314, 437, 475, 476, 492, 493, 494, 495, 549], "formula": [16, 20, 29, 32, 34, 53, 57, 59, 61, 63, 64, 66, 68, 71, 73, 74, 78, 81, 82, 89, 90, 91, 94, 95, 100, 101, 102, 106, 108, 109, 112, 114, 117, 120, 121, 132, 137, 139, 141, 150, 157, 158, 163, 164, 165, 166, 177, 184, 283, 305, 334, 343, 398, 439, 535, 537, 557, 586], "arrai": [16, 18, 60, 177, 224, 225, 259, 265, 266, 288, 291, 305, 308, 310, 311, 313, 323, 324, 325, 329, 333, 339, 340, 341, 355, 369, 370, 371, 398, 405, 449, 454, 481, 483, 485, 487, 489, 491, 541, 545, 547, 557], "best": [16, 24, 29, 30, 64, 67, 155, 158, 162, 178, 179, 249, 250, 254, 255, 256, 270, 282, 292, 323, 386, 388, 389, 395, 421, 438, 461], "those": [16, 19, 24, 32, 34, 53, 112, 155, 175, 176, 177, 186, 189, 253, 262, 394, 398, 401, 413, 414, 416, 417, 438], "These": [16, 19, 24, 37, 41, 60, 63, 194, 211, 273, 411, 421, 437, 438], "ahead": [16, 175, 176, 253, 394], "calibr": 16, "tool": [16, 23, 62], "minimum": [16, 22, 24, 25, 38, 129, 203, 300, 302, 356, 398, 541], "dynam": [16, 32, 65, 67, 89, 160, 259, 263, 369, 370, 398, 399, 403, 555, 563], "conjunct": 16, "behav": [16, 63, 164], "dimension": [16, 28, 37, 60, 67, 110, 177, 305, 323, 361, 543, 557], "reason": [16, 28, 31, 63, 156, 175, 176, 177, 253, 263, 305, 394, 403, 437, 557], "subset": [16, 186, 189, 308], "guid": [16, 24, 32, 38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 160, 174, 248, 249, 260, 262, 306, 307, 310, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 331, 332, 333, 334, 336, 337, 339, 340, 388, 400, 402], "appropri": [16, 22, 26, 29, 31, 61, 63, 67, 157, 158, 161, 168, 175, 177, 259, 398, 411, 421, 461], "convert": [16, 17, 32, 34, 39, 43, 45, 47, 49, 50, 51, 54, 55, 60, 63, 87, 89, 90, 123, 134, 162, 172, 175, 249, 259, 280, 304, 305, 315, 316, 329, 334, 369, 370, 388, 398, 436, 438, 510, 541], "wider": [16, 32, 54, 182, 183, 305], "int16": 16, "overflow": [16, 25, 32, 63, 262], "maintain": [16, 159, 172, 323, 413, 414, 416, 417, 543], "necessari": [16, 19, 24, 29, 30, 33, 43, 45, 58, 59, 61, 154, 160, 162, 164, 177, 222, 223, 263, 281, 323, 329, 386, 403, 413, 414, 416, 417], "written": [16, 18, 63, 323, 353], "satur": [16, 63, 162, 308, 341, 371], "underflow": [16, 60], "architectur": [16, 29, 30, 42, 43, 53, 54, 63, 67, 155, 160, 174, 175, 176, 178, 179, 308, 341, 363, 371, 437], "slightli": [16, 63, 398], "vari": [16, 63, 178, 413, 414, 416, 417], "_op": [16, 161, 175], "dequant": [16, 45, 49, 50, 51, 54, 60, 89, 134, 162, 203, 248, 256, 302, 305, 387, 414, 549], "achiev": [16, 29, 43, 58, 60, 162, 164, 177, 255, 256, 270, 292, 387, 436], "eltwis": [16, 20, 22, 24, 29, 42, 57, 59, 61, 67, 157, 161, 163, 166, 175, 179, 184, 185, 218, 303, 328, 376, 387, 406, 411, 438, 492, 493, 494, 495, 548, 549, 600], "dev_guide_attributes_post_ops_eltwis": 16, "dev_guide_attributes_post_ops_binari": 16, "src_": [16, 32, 34, 63, 87, 89, 90, 120, 123, 125, 126, 127, 128, 129, 130, 131], "weights_": [16, 32], "work": [16, 18, 19, 21, 22, 24, 26, 29, 33, 34, 41, 43, 59, 60, 63, 64, 67, 154, 155, 158, 160, 161, 162, 165, 166, 167, 168, 172, 177, 178, 255, 256, 263, 269, 270, 288, 292, 323, 398, 403, 411, 421, 437, 449, 461, 541], "task": [16, 18, 33, 154, 160], "form": [16, 27, 28, 37, 42, 58, 166, 177, 194, 211, 411], "22": [16, 160], "45": 16, "46": [16, 160], "zero_point": [16, 162, 298, 305, 549, 557], "zero_point_": 16, "mathemat": [16, 29, 58, 59, 117, 120, 121, 162, 164, 179, 438], "_to": 16, "_int8": 16, "_f32": [16, 225], "comp_": 16, "bias_": 16, "_": [16, 20, 26, 28, 57, 63, 64, 73, 80, 89, 90, 106, 125, 126, 127, 128, 129, 130, 131, 163, 178, 305], "regular": [16, 24, 36, 178, 321, 411, 456, 531, 533], "chosen": [16, 19, 59, 162, 184, 185, 249, 250, 254, 288, 323, 386, 387, 388, 389, 395, 411, 437, 449], "compens": [16, 26, 63, 175, 262, 298, 402], "term": [16, 18, 28, 29, 155, 163, 164, 175, 311, 313, 318, 322, 483, 485, 489, 491], "account": [16, 29, 158], "pre": [16, 19, 67, 273, 297, 421, 422, 461, 462], "_s8": 16, "rang": [16, 25, 58, 63, 80, 87, 89, 90, 97, 123, 125, 126, 127, 128, 129, 130, 131, 148, 160, 172, 179, 259, 293, 294, 398, 456, 457], "loss": [16, 29, 58, 300, 403], "re": [16, 22, 26, 27, 63, 64, 160, 245, 248, 249, 260, 262, 383, 388, 398, 400, 402, 421, 461], "end": [16, 24, 34, 58, 68, 69, 89, 90, 91, 98, 101, 108, 121, 124, 132, 158, 160, 163, 164, 165, 170, 175, 176, 201, 202, 203, 242, 243, 244, 245, 247, 251, 252, 253, 255, 256, 260, 262, 267, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 302, 377, 379, 381, 383, 390, 392, 394, 400, 401, 402, 407, 409, 412, 419, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459], "seem": [16, 160, 411], "imposs": [16, 63, 323, 543], "trick": [16, 63, 259, 398], "everi": [16, 18, 23, 33, 34, 67, 68, 78, 91, 94, 95, 100, 102, 108, 109, 132, 137, 139, 141, 150, 154, 159, 160, 173, 177, 308, 341, 371, 411], "ih": [16, 28, 29, 61, 81, 163, 243, 244, 245, 246, 251, 252, 254, 255, 256, 267, 268, 270, 272, 274, 277, 282, 283, 284, 285, 286, 287, 289, 291, 292, 379, 381, 383, 385, 390, 392, 395, 407, 409, 419, 423, 430, 438, 439, 441, 443, 445, 447, 450, 454], "iw": [16, 28, 29, 61, 81, 163, 243, 244, 245, 246, 251, 252, 254, 255, 256, 267, 268, 270, 272, 274, 277, 282, 283, 284, 285, 286, 287, 289, 291, 292, 379, 381, 383, 385, 390, 392, 395, 407, 409, 419, 423, 430, 438, 439, 441, 443, 445, 447, 450, 454], "oh": [16, 28, 29, 71, 81, 114, 157, 163, 252, 267, 282, 283, 287, 392, 407, 438, 439, 447, 549], "ow": [16, 28, 29, 71, 81, 114, 157, 163, 252, 267, 282, 283, 287, 392, 407, 438, 439, 447, 549], "frac": [16, 20, 29, 34, 53, 57, 60, 63, 64, 66, 71, 73, 74, 81, 95, 99, 102, 106, 110, 118, 128, 137, 139, 157, 161, 163, 165, 166, 398], "respons": [16, 24, 25, 33, 36, 37, 63, 154, 175, 184, 185, 277, 321, 323, 324, 329, 369, 376, 411, 431, 437, 530, 532, 555, 600], "prepar": [16, 59, 63, 175, 176, 248, 253, 259, 263, 282, 387, 394, 398, 403, 438, 456], "wa": [16, 18, 34, 59, 64, 65, 156, 157, 159, 175, 176, 177, 178, 179, 207, 232, 233, 235, 236, 253, 273, 283, 330, 335, 341, 371, 394, 421, 439], "long": [16, 24, 43, 53, 54, 160, 164, 232, 233], "fit": [16, 174, 179, 280, 288, 436, 449], "everyth": [16, 411, 456], "fine": [16, 18, 438], "mind": 16, "tri": [16, 59], "minim": [16, 18, 23, 25, 32, 58, 174, 177], "yet": [16, 259, 263, 323, 398, 401, 402, 403], "power": [16, 120, 124, 161, 363], "enough": [16, 18, 43, 53, 63, 175, 176, 253, 353, 394], "wai": [16, 17, 18, 19, 26, 28, 29, 33, 36, 58, 60, 63, 136, 154, 155, 168, 172, 177, 219, 267, 305, 332, 355, 407, 436, 437, 438, 456, 479, 541, 557, 559, 564, 581], "essenti": [16, 58, 59, 165, 255, 256, 264, 270, 292, 295, 398], "abil": [16, 30, 31, 33, 154, 411], "That": [16, 29, 147, 156, 159, 177, 411], "equat": [16, 34, 164], "_scale": 16, "standard": [16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 32, 34, 57, 61, 64, 65, 66, 67, 68, 71, 78, 80, 81, 91, 94, 95, 100, 102, 108, 109, 112, 114, 132, 137, 139, 141, 150, 157, 158, 162, 163, 164, 165, 166, 168, 190, 198, 209, 308, 341, 371], "downconvert": 16, "hw": [16, 23, 32, 57, 160, 177], "mxcsr": [16, 60], "regist": [16, 31, 60, 187, 188, 429], "dnnl_primitive_attr_set_scales_mask": [16, 298, 305, 557], "simplest": [16, 305, 398, 456, 549], "sever": [16, 19, 24, 26, 29, 34, 65, 166, 173, 177, 416, 417], "sai": 16, "d_0": [16, 60], "d_": [16, 60], "d_i": [16, 60], "le": 16, "Then": [16, 61, 136, 147, 177, 412, 438, 456], "sum": [16, 18, 20, 22, 24, 26, 29, 57, 61, 63, 64, 66, 67, 71, 73, 106, 125, 126, 128, 131, 157, 161, 162, 163, 164, 166, 178, 179, 184, 185, 218, 219, 285, 286, 303, 305, 328, 331, 365, 376, 437, 443, 445, 455, 549, 555, 600], "limits_": [16, 20, 57, 63, 64, 66, 71, 73, 106, 114, 125, 126, 128, 130, 131, 157, 161, 166, 168, 305, 557], "prod": [16, 130, 246, 254, 305, 385, 395, 557], "wei_plain_f32_md": 16, "hwigo": [16, 211], "wei_scal": [16, 256, 414], "conv_pd": [16, 156, 246, 249, 250, 252, 254, 281, 282, 385, 388, 389, 392, 395, 437, 438, 549], "next": [16, 32, 53, 177, 179, 249, 250, 282, 288, 329, 385, 386, 387, 388, 389, 401, 402, 411, 412, 413, 416, 417, 437, 438, 449, 456, 559], "wei_conv_s8_md": 16, "weights_desc": [16, 242, 247, 248, 249, 250, 252, 260, 267, 273, 274, 276, 278, 280, 281, 282, 284, 296, 297, 298, 311, 313, 318, 322, 326, 377, 386, 387, 388, 389, 392, 400, 407, 421, 423, 427, 432, 436, 437, 438, 441, 459, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "quantization_mask": 16, "wei_s8": [16, 178], "wei_f32": [16, 178, 437, 438], "wei_reorder_pd": 16, "wei_reord": 16, "complementari": 16, "ideal": [16, 63], "first": [16, 27, 28, 29, 30, 31, 34, 39, 40, 42, 46, 49, 50, 51, 53, 60, 61, 63, 67, 81, 136, 156, 164, 175, 176, 177, 178, 194, 211, 253, 255, 261, 262, 270, 292, 323, 335, 355, 394, 398, 401, 402, 406, 411, 412, 413, 414, 416, 417, 418, 436, 438, 456, 501, 543], "src_scale": [16, 248, 387], "src_f32": [16, 178, 437, 438], "src_s8": 16, "dst_scale": [16, 248, 387], "dst_f32": [16, 178, 437, 438], "dst_s8": 16, "declar": [16, 261, 262, 401, 402], "chose": [16, 249, 250, 254, 323, 388, 389, 395], "src_conv_s8_any_md": 16, "batch": [16, 28, 29, 36, 43, 53, 54, 57, 58, 59, 67, 73, 74, 81, 99, 112, 160, 166, 177, 194, 211, 218, 219, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 261, 262, 267, 268, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 298, 303, 322, 323, 328, 343, 376, 377, 380, 381, 383, 385, 386, 387, 388, 389, 390, 392, 395, 401, 402, 407, 409, 411, 419, 421, 423, 425, 427, 430, 432, 434, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 459, 471, 472, 473, 474, 501, 586, 600, 601], "wei_conv_s8_any_md": 16, "dst_conv_s8_any_md": 16, "ditto": 16, "data_mask": 16, "wei_mask": 16, "set_zero_points_mask": [16, 67, 259, 273, 398, 399, 421, 422, 557], "prop_kind": [16, 29, 58, 59, 61, 178, 179, 213, 214, 224, 242, 243, 247, 248, 249, 250, 252, 261, 262, 266, 267, 268, 269, 271, 272, 274, 275, 276, 277, 278, 281, 282, 283, 284, 287, 288, 289, 290, 293, 294, 296, 298, 305, 306, 311, 313, 314, 317, 318, 320, 321, 325, 326, 333, 334, 336, 337, 365, 377, 379, 386, 387, 388, 389, 392, 401, 402, 406, 407, 409, 411, 412, 419, 423, 425, 427, 430, 432, 437, 438, 439, 441, 447, 449, 450, 452, 456, 457, 459, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "forward_infer": [16, 29, 58, 59, 61, 178, 222, 247, 261, 262, 269, 281, 282, 288, 386, 401, 402, 411, 437, 438, 449, 470, 474, 485, 491, 495, 505, 509, 517, 521, 525, 529, 533, 537, 547, 553, 568, 573, 577, 591], "convolution_direct": [16, 178, 185, 247, 248, 249, 250, 252, 282, 386, 387, 388, 389, 392, 437, 438, 481, 483, 485, 487], "padding_l": [16, 29, 224, 298, 311, 313, 325, 481, 483, 485, 487, 489, 491, 545, 547], "padding_r": [16, 29, 224, 298, 311, 313, 325, 481, 483, 485, 487, 489, 491, 545, 547], "padding_kind": 16, "flow": [16, 265, 266, 405, 406], "respect": [17, 28, 29, 32, 34, 37, 45, 53, 59, 61, 67, 81, 105, 108, 156, 163, 177, 178, 179, 194, 211, 213, 214, 222, 223, 249, 250, 254, 288, 305, 306, 311, 313, 314, 317, 318, 320, 321, 325, 326, 329, 333, 334, 335, 336, 337, 388, 389, 395, 403, 438, 449, 501, 557, 589], "rounding_mod": [17, 32, 305, 365, 557], "sycl": [17, 24, 32, 35, 36, 179, 292, 293, 294, 295, 298, 303, 319, 323, 347, 348, 354, 368, 369, 370, 376, 418, 599], "opencl": [17, 19, 23, 32, 35, 36, 156, 179, 270, 271, 303, 319, 323, 347, 354, 367, 369, 376, 411, 429, 464, 541], "languag": [17, 25, 42, 53, 175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "stochast": [17, 32, 230, 231, 329], "truncat": 17, "dnnl_arg_attr_rounding_se": [17, 298, 329], "interest": [17, 177, 363, 411, 437], "vanish": 17, "gradient": [17, 28, 53, 59, 69, 75, 77, 79, 84, 92, 96, 101, 103, 105, 108, 111, 118, 122, 133, 138, 140, 142, 144, 151, 164, 172, 224, 225, 228, 229, 311, 313, 318, 329, 437, 482, 483, 488, 489, 514, 515], "diffsrc": [17, 20, 28, 29, 34, 57, 61, 64, 66, 72, 82, 85, 107, 115, 157, 158, 163, 165, 166], "diffweight": [17, 28, 29, 61, 83, 86, 158], "independ": [18, 23, 24, 63, 64, 67, 112, 164, 166, 174, 177, 329], "core": [18, 29, 32, 53, 186, 189, 429, 438], "parallel": [18, 23, 43, 53, 174, 232, 233, 341, 582], "reduct": [18, 24, 25, 125, 126, 127, 128, 129, 130, 131, 184, 185, 218, 219, 224, 225, 300, 303, 328, 365, 376, 444, 555, 560, 600], "privat": [18, 170, 232, 233, 386], "matrix": [18, 28, 29, 30, 32, 35, 43, 46, 51, 53, 54, 63, 112, 162, 164, 165, 167, 177, 218, 219, 257, 258, 259, 260, 261, 262, 263, 273, 279, 280, 297, 300, 303, 308, 328, 341, 371, 396, 397, 398, 399, 400, 403, 421, 434, 437, 461, 538, 539, 600, 601], "im2col": 18, "longer": [18, 43, 225], "complet": [18, 21, 25, 36, 153, 157, 160, 175, 176, 178, 253, 269, 281, 282, 323, 330, 335, 356, 394, 406, 411, 412, 437, 456, 541, 586], "confus": [18, 59], "workspac": [18, 20, 28, 29, 66, 157, 164, 179, 213, 214, 224, 225, 242, 243, 246, 249, 250, 254, 276, 277, 278, 283, 288, 296, 306, 329, 377, 379, 385, 386, 388, 389, 395, 427, 430, 432, 439, 449, 459, 468, 470, 472, 474, 503, 505, 507, 509, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 545, 547, 560, 589, 591], "space": [18, 19, 24, 175, 176, 177, 178, 179, 246, 253, 254, 312, 329, 353, 385, 394, 395, 541], "direct": [18, 28, 32, 42, 43, 53, 54, 59, 70, 88, 98, 113, 116, 119, 146, 149, 164, 173, 184, 185, 224, 225, 226, 227, 242, 276, 278, 288, 296, 298, 323, 334, 377, 427, 432, 449, 459, 468, 470, 507, 509, 510, 523, 525, 527, 529, 535, 537, 541, 555, 559, 560, 569, 589, 591], "too": [18, 263, 335, 403], "few": [18, 23, 29, 54, 58, 61, 164, 329, 388, 389, 395], "proport": 18, "imag": [18, 28, 58, 71, 157, 177, 269, 300, 411], "diff_weight": [18, 28, 59, 83, 86, 228, 229, 249, 250, 288, 326, 388, 389, 449], "group": [18, 28, 37, 54, 60, 82, 83, 84, 85, 86, 89, 99, 160, 165, 177, 179, 194, 201, 202, 211, 218, 219, 224, 225, 252, 255, 256, 270, 272, 289, 292, 297, 298, 300, 303, 305, 323, 328, 336, 376, 392, 393, 413, 414, 416, 417, 420, 450, 461, 502, 503, 504, 505, 557, 560, 571, 573, 600], "upper": [18, 28, 53, 78, 79, 159, 177, 194, 335], "total": [18, 82, 155, 160, 288, 449], "By": [18, 19, 24, 32, 36, 37, 58, 351], "contrast": 18, "littl": [18, 259, 398], "sizeof": [18, 167, 177, 246, 254, 265, 271, 280, 282, 294, 385, 395, 405, 412, 436, 457], "summand": 18, "scratchpad_mod": [18, 24, 305, 365, 557], "worri": 18, "onednn_enable_concurrent_exec": [18, 24], "cmake": [18, 23, 24, 30, 31, 36, 41, 156, 159, 160, 173, 178], "off": [18, 24, 30, 31, 41, 159, 160, 175, 176, 178, 232, 233, 253, 257, 258, 269, 335, 394, 396, 397, 411], "across": [18, 24, 29, 59, 60, 64, 66, 67, 164, 184, 185, 288, 321, 449], "level": [18, 36, 37, 41, 156, 160, 174, 178, 298, 323, 335, 365], "freed": 18, "referenc": 18, "segment": 18, "fault": 18, "you": [18, 19, 20, 23, 24, 25, 29, 33, 37, 42, 43, 53, 54, 57, 58, 59, 61, 63, 64, 65, 67, 84, 139, 160, 164, 166, 173, 175, 176, 177, 225, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 412, 416, 417, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "ON": [18, 23, 24, 30, 31, 36, 41, 159, 160, 178, 232, 233], "larger": [18, 29, 232, 233, 288, 449], "concurr": [18, 33, 36, 154, 232, 233, 327, 341, 350], "suffici": 18, "dnnl_arg_scratchpad": [18, 298, 329], "reus": [18, 19, 29, 58, 59, 67, 164, 175, 176, 177, 253, 288, 394, 449], "make": [18, 19, 23, 31, 41, 59, 63, 65, 67, 89, 112, 153, 155, 175, 176, 177, 194, 211, 225, 253, 314, 323, 353, 394, 543, 548], "safe": [18, 19, 34, 155, 156, 177, 232, 233, 269, 327, 350, 351, 411, 541], "good": [18, 58, 67, 177, 398, 411], "dnnl_primitive_attr_set_scratchpad_mod": [18, 298, 305], "set_scratchpad_mod": [18, 557], "highlight": [18, 59], "consum": [18, 36, 37, 174, 288, 323, 449], "due": [18, 28, 43, 59, 63, 175, 176, 178, 179, 207, 235, 236, 253, 263, 394, 398, 403, 543], "print": [18, 23, 36, 178, 179, 436], "much": [18, 19, 63, 174, 175, 176, 178, 253, 263, 394, 403, 412, 456], "cout": [18, 247, 255, 256, 261, 262, 264, 269, 270, 271, 280, 282, 292, 293, 294, 295, 411, 412, 436, 456, 457], "query_s64": [18, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "memory_consumption_s64": [18, 224], "endl": [18, 247, 255, 256, 261, 262, 264, 269, 270, 271, 280, 292, 293, 294, 295, 411, 412, 436, 456, 457], "visibl": 18, "zero_md": 18, "scratchpad_desc": [18, 281, 437, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_scratchpad_mod": [18, 557], "custom": [18, 19, 23, 24, 33, 36, 37, 174, 175, 177], "scratchpad_md": [18, 224], "prim": [18, 178, 246, 254, 282, 385, 395, 438], "get_siz": [18, 59, 167, 177, 260, 261, 262, 282, 323, 369, 400, 401, 402, 541, 543], "scratchpad_ptr": [18, 298, 343], "user_memory_manag": 18, "outlin": [19, 59, 155], "program": [19, 21, 23, 29, 33, 37, 61, 63, 154, 164, 265, 266, 269, 271, 299, 300, 403, 405, 406, 411, 412, 438, 456, 457], "present": [19, 23, 39, 40, 46, 47, 49, 50, 51, 112, 156, 164, 175, 437], "kei": [19, 20, 22, 26, 29, 37, 43, 53, 57, 59, 61, 64, 65, 67, 156, 162, 164, 165, 166, 168, 267, 300, 377, 378, 379, 380, 381, 382, 383, 385, 386, 390, 391, 392, 393, 407, 408, 411, 413, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 445, 446, 450, 451, 452, 453, 454, 455, 459, 460], "discuss": [19, 58, 59, 155, 323, 411], "essenc": 19, "process": [19, 23, 27, 43, 45, 58, 59, 63, 155, 159, 160, 164, 175, 176, 177, 179, 253, 288, 300, 343, 394, 398, 437, 449, 586], "relationship": [19, 37, 255, 256, 292, 298, 413, 416, 417], "entiti": [19, 37, 329], "briefli": 19, "figur": [19, 164], "relev": [19, 59, 288, 438, 449], "built": [19, 21, 23, 24, 36, 65, 170, 173, 178, 341, 371, 437, 438], "notion": [19, 22, 26, 59, 161, 168, 437], "encapsul": [19, 324, 338, 356, 357, 361, 369, 406, 411, 412, 456, 541], "lstm": [19, 63, 184, 185, 194, 211, 262, 288, 329, 334, 376, 402, 433, 449, 534, 535, 536, 537], "addition": [19, 37, 54, 63, 67, 112, 155, 172, 175, 176, 249, 253, 388, 394, 437, 438], "complex": [19, 29], "pure": 19, "state": [19, 28, 36, 59, 63, 164, 194, 211, 262, 276, 288, 296, 323, 329, 330, 334, 353, 401, 402, 427, 429, 449, 459, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 586, 589, 591], "One": [19, 33, 43, 53, 134, 172, 177, 179], "immut": [19, 37], "approach": [19, 43, 59, 155, 177, 323, 387, 398, 437], "tailor": [19, 36], "amort": 19, "mutabl": [19, 37, 355], "card": [19, 315], "transfer": [19, 259, 315, 398], "ti": [19, 338, 406, 411, 412, 456], "command": [19, 23, 24, 65, 155, 160, 324, 340, 412, 438], "queue": [19, 33, 36, 154, 292, 293, 294, 295, 298, 324, 340, 369, 370, 412, 416, 417, 418, 456, 457], "map": [19, 20, 22, 26, 29, 33, 34, 43, 57, 58, 61, 64, 66, 67, 87, 89, 90, 123, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 173, 177, 179, 255, 256, 264, 269, 270, 292, 295, 323, 335, 367, 368, 369, 370, 398, 406, 411, 412, 479, 541, 555, 559, 563, 564, 581], "offset": [19, 42, 87, 89, 90, 123, 175, 176, 177, 178, 179, 224, 225, 253, 259, 269, 288, 298, 308, 323, 341, 343, 371, 394, 398, 411, 449, 541, 543, 586], "conceptu": [19, 63], "expos": [19, 20, 32, 57, 64, 155, 174], "flexibl": [19, 172, 174, 177, 403], "dnnl_memory_desc_t": [19, 173, 177, 194, 246, 254, 265, 298, 323, 329, 385, 395, 405, 543], "variou": [19, 38, 44, 47, 48, 52, 55, 56, 156, 174, 323, 329], "via": [19, 20, 22, 24, 30, 31, 32, 34, 36, 42, 43, 45, 53, 54, 64, 90, 147, 155, 156, 157, 159, 177, 178, 245, 282, 288, 323, 329, 335, 353, 358, 369, 370, 379, 380, 383, 384, 387, 406, 411, 412, 437, 449, 456, 457, 541, 549, 555, 557, 563], "instanti": 19, "iter": [19, 159, 164, 175, 176, 200, 208, 247, 249, 250, 253, 254, 261, 262, 288, 388, 389, 394, 395, 401, 402, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 559, 569, 589, 591], "prefer": [19, 25, 31, 187, 188, 249, 250, 254, 288, 388, 389, 395, 449], "concret": [19, 255, 256, 264, 270, 292, 295, 413, 416, 417], "embodi": 19, "extract": [19, 29, 412, 456], "submemory_desc": [19, 261, 262, 288, 401, 402, 449, 543], "src_desc": [19, 58, 247, 248, 249, 250, 252, 260, 267, 280, 281, 282, 298, 306, 310, 311, 313, 314, 317, 318, 320, 321, 322, 325, 326, 331, 332, 333, 336, 337, 339, 386, 387, 388, 389, 392, 400, 407, 436, 437, 438, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "action": [19, 59], "placehold": [19, 29, 61, 67, 164, 211, 281, 437], "obtain": [19, 59, 60, 63, 156, 175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 323, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 413, 414, 416, 417, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 564], "high": [19, 25, 60, 178, 311, 313, 325, 481, 483, 485, 487, 489, 491, 545, 547], "instead": [19, 22, 23, 24, 28, 29, 34, 61, 63, 64, 65, 67, 157, 161, 162, 163, 177, 213, 214, 288, 305, 308, 334, 341, 343, 371, 386, 411, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 549, 586, 589, 591], "individu": [19, 32, 34, 36, 155, 308, 312, 341, 371, 386], "transpar": 19, "effort": 19, "backend": [19, 24, 134, 176, 178, 179, 343, 413, 414, 416, 417], "awar": [19, 31, 411], "scalabl": [19, 63, 186, 189], "ukernel": [19, 65, 174, 175, 176, 253, 298, 303, 365, 477, 584], "sequenti": [19, 24, 36, 174, 385, 386], "compos": [19, 36, 174], "full": [19, 23, 25, 65, 160, 173, 174, 178, 412, 456], "show": [20, 29, 57, 60, 61, 64, 157, 158, 163, 172, 177, 178, 403, 411], "straightforward": [20, 29, 57, 64, 157, 158, 163, 411], "gamma": [20, 29, 57, 64, 73, 74, 75, 99, 106, 107, 306, 317, 320], "mu": [20, 57, 64, 73, 74, 106, 107], "sqrt": [20, 34, 53, 57, 64, 74, 95, 99, 106, 126, 144, 203, 259, 263, 300, 302, 398, 403], "sigma": [20, 57, 64, 73, 74, 75, 106, 107, 164], "varepsilon": [20, 57, 64, 74], "dnnl_use_scal": [20, 57, 64, 213, 214], "dnnl_use_shift": [20, 57, 64, 213, 214], "dnnl_use_global_stat": [20, 57, 64, 213, 214], "constant": [20, 53, 57, 58, 64, 74, 99, 106, 107, 108, 147, 156, 200, 208, 225, 256, 299, 303, 305, 323, 329, 335, 338, 342, 343, 347, 348, 349, 353, 357, 358, 361, 414, 543, 557, 586], "stabil": [20, 34, 57, 64, 74, 99, 106, 107, 139], "nhw": [20, 73], "learnabl": [20, 28, 57, 59, 64, 106, 107], "dnnl_fuse_norm_relu": [20, 213, 214], "dnnl_fuse_norm_add_relu": [20, 213, 214], "popul": [20, 57, 164], "sampl": [20, 57, 60, 157, 160, 170, 412, 456, 457], "unbias": [20, 57], "hat": [20, 57], "dnnl_forward_train": [20, 29, 34, 57, 64, 157, 158, 163, 165, 166, 222, 223, 306, 311, 313, 314, 317, 318, 320, 321, 325, 326, 333, 334, 336, 337], "dnnl_forward_infer": [20, 29, 34, 57, 64, 157, 158, 163, 165, 166, 222, 223, 306, 311, 313, 314, 317, 318, 320, 321, 325, 326, 333, 334, 336, 337], "diffgamma": [20, 57, 64, 107], "diffbeta": [20, 57, 64, 107], "diffdst": [20, 28, 29, 34, 57, 61, 64, 66, 72, 77, 82, 83, 85, 86, 107, 115, 157, 158, 163, 165, 166], "mark": [20, 57, 63, 64, 107, 177], "asterisk": [20, 57, 64, 107], "clariti": [20, 57, 64], "summari": [20, 57, 64, 160, 437], "shown": [20, 25, 57, 59, 63, 64, 100, 101, 155, 160, 164, 177, 411, 438], "dnnl_backward": [20, 57, 64, 214, 222, 223, 306, 317, 320, 334], "dnnl_backward_data": [20, 57, 64, 214, 222, 223, 306, 317, 320], "dnnl_normalization_flags_non": [20, 57, 64, 213, 214], "Not": [20, 25, 57, 64, 160], "src_1": [20, 22, 38, 70, 88, 98, 113, 116, 119, 136, 146, 149, 244, 381], "diffsrc_1": 20, "tabl": [20, 22, 25, 26, 28, 29, 32, 33, 34, 57, 61, 64, 66, 67, 87, 123, 154, 157, 158, 161, 162, 163, 164, 165, 166, 168, 225], "dnnl_arg_scal": [20, 57, 64, 243, 272, 275, 298, 329, 379, 419, 425], "dnnl_arg_shift": [20, 57, 64, 243, 272, 275, 298, 329, 379, 419, 425], "dnnl_arg_mean": [20, 57, 64, 243, 272, 275, 298, 329, 379, 419, 425], "dnnl_arg_vari": [20, 57, 64, 243, 272, 275, 298, 329, 379, 419, 425], "dnnl_arg_workspac": [20, 59, 66, 157, 242, 243, 246, 249, 250, 254, 276, 277, 278, 283, 288, 296, 298, 329, 377, 379, 385, 388, 389, 395, 427, 430, 432, 439, 449, 459], "dnnl_arg_diff_dst": [20, 29, 34, 57, 61, 64, 66, 157, 158, 163, 165, 166, 249, 250, 254, 298, 329, 388, 389, 395], "dnnl_arg_diff_src": [20, 29, 34, 57, 61, 64, 66, 157, 158, 163, 165, 166, 249, 250, 254, 298, 329, 388, 389, 395], "dnnl_arg_diff_src_1": [20, 298, 329], "dnnl_arg_diff_scal": [20, 57, 64, 298, 329], "dnnl_arg_diff_shift": [20, 57, 64, 298, 329], "flavor": [20, 57, 64, 343, 411, 586], "batch_normalization_forward": [20, 243, 306, 365, 379, 472, 555], "OR": [20, 57, 64, 175, 176, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "latter": [20, 24, 28, 33, 57, 59, 63, 64, 65, 154, 172, 323, 385, 386, 559], "overwritten": [20, 22, 34, 57, 64, 166], "dst_desc": [20, 58, 247, 248, 249, 250, 251, 252, 260, 267, 280, 281, 282, 291, 298, 306, 307, 310, 311, 313, 314, 317, 318, 320, 321, 322, 325, 326, 331, 332, 333, 336, 337, 339, 386, 388, 389, 390, 392, 400, 407, 436, 437, 438, 454, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "diff_dst_desc": [20, 249, 250, 298, 306, 311, 313, 314, 317, 318, 320, 321, 325, 326, 333, 336, 337, 388, 389, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "even": [20, 32, 59, 63, 152, 155, 164, 177, 314, 411], "combin": [20, 22, 29, 34, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 160, 162, 163, 164, 165, 166, 175, 178, 179, 237, 323, 406, 411, 543, 548], "scaleshift": [20, 57], "restrict": [20, 22, 29, 30, 31, 34, 57, 61, 64, 66, 67, 76, 157, 161, 163, 164, 165, 166, 175, 179, 312, 335], "1d": [20, 29, 33, 57, 61, 64, 66, 76, 90, 99, 104, 105, 106, 107, 112, 121, 122, 125, 126, 127, 128, 129, 130, 131, 157, 163, 177, 179, 194, 211, 311, 313, 333, 411], "dnnl_x": [20, 57, 194, 246, 254, 385, 395], "dnnl_a": [20, 57, 194, 211], "sp_n": [20, 57], "sp_0": [20, 57], "0d": [20, 66, 411], "nc": [20, 61, 64, 211, 247, 257, 258, 274, 290, 396, 397, 423, 452], "dnnl_nc": [20, 57, 61, 64, 194], "dnnl_ab": [20, 57, 64, 194, 211, 323], "ncw": [20, 57, 157, 211], "dnnl_ncw": [20, 29, 57, 61, 157, 194], "dnnl_abc": [20, 57, 64, 157, 194, 211], "dnnl_nwc": [20, 29, 57, 61, 157, 194], "dnnl_acb": [20, 57, 157, 194, 211], "dnnl_nchw": [20, 26, 29, 57, 61, 66, 157, 165, 177, 194, 246, 254, 265, 323, 385, 395, 405], "dnnl_abcd": [20, 57, 64, 66, 157, 165, 194, 211], "dnnl_nhwc": [20, 26, 29, 57, 61, 66, 157, 165, 177, 194, 323], "dnnl_acdb": [20, 57, 66, 157, 165, 194, 211], "3d": [20, 29, 57, 61, 64, 66, 67, 106, 107, 157, 158, 163, 165, 175, 176, 177, 179, 194, 211, 253, 311, 313, 322, 325, 333, 394, 411, 481, 483, 485, 487, 489, 491, 545, 547], "ncdhw": [20, 57, 157, 165, 194, 211, 272, 419], "dnnl_ncdhw": [20, 29, 57, 61, 157, 165, 194], "dnnl_ndhwc": [20, 29, 57, 61, 157, 165, 194], "dnnl_acdeb": [20, 57, 157, 165, 194, 211], "come": [20, 34, 59, 60, 65, 66, 155, 157, 165, 194, 211, 232, 233, 273, 288, 297, 411, 421, 449, 461], "intens": [20, 32, 58, 66, 155, 157, 165, 323, 411, 437, 438], "chain": [20, 29, 59, 60, 61, 63, 175, 176, 253, 305, 343, 394, 438, 548], "descript": [20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 34, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 136, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 157, 159, 160, 161, 163, 164, 166, 175, 177, 178, 179, 211, 300, 312, 323, 361, 401, 402, 411, 437, 438], "dnnl_eltwise_relu": [20, 34, 184, 185, 246, 254, 265, 334, 385, 395, 405], "correctli": [20, 29, 32, 160, 335, 411, 437], "highli": [20, 26, 34, 57, 64, 66, 168, 403], "whenev": [20, 22, 26, 34, 57, 59, 64, 161, 166, 168, 177, 305, 411], "caveat": [20, 34, 57, 64, 168], "statist": [20, 64, 178, 194, 211, 213, 214, 398, 519, 521], "calcul": [20, 36, 42, 43, 53, 58, 60, 67, 71, 72, 73, 75, 79, 81, 82, 83, 84, 85, 86, 92, 99, 104, 105, 110, 111, 114, 115, 125, 126, 127, 128, 129, 130, 131, 133, 138, 139, 140, 144, 147, 151, 157, 158, 178, 184, 185, 213, 214, 262, 283, 355, 387, 439], "pleas": [20, 24, 58, 67, 134, 160, 178, 248, 249, 262, 323, 329, 351, 355, 388, 402, 437], "review": [20, 437], "demonstr": [20, 22, 26, 29, 34, 36, 39, 42, 43, 46, 49, 53, 57, 58, 61, 64, 66, 67, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 175, 176, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 281, 282, 284, 288, 292, 295, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462], "benchdnn": [21, 24, 67, 155, 160, 178], "readm": 21, "overlin": [22, 26, 29, 34, 70, 80, 88, 113, 116, 119, 149, 162, 165, 166, 168], "src_0": [22, 38, 70, 88, 98, 113, 116, 119, 136, 146, 149, 168, 244, 381], "mathbin": [22, 70, 88], "subtract": [22, 29, 38, 53, 63, 139, 146, 203, 283, 300, 302, 305, 439, 549], "divis": [22, 28, 73, 74, 75, 81, 82, 83, 84, 85, 86, 88, 99, 162, 245, 297, 383, 461], "div": [22, 63, 184, 185], "greater": [22, 59, 63, 78, 79, 98, 163, 184, 185], "geq": [22, 29, 34, 163, 387], "neq": [22, 124], "max": [22, 32, 34, 58, 59, 60, 63, 67, 78, 79, 100, 102, 113, 114, 127, 139, 157, 161, 162, 166, 175, 176, 184, 185, 201, 202, 253, 259, 263, 280, 308, 325, 331, 341, 371, 394, 398, 403, 412, 436, 456], "min": [22, 34, 63, 78, 79, 100, 102, 116, 129, 158, 160, 161, 170, 184, 185, 201, 202, 259, 280, 331, 398, 436], "src_2": 22, "dnnl_arg_src_0": [22, 244, 245, 298, 329, 381, 383], "dnnl_arg_src_2": [22, 29, 34, 57, 61, 64, 67, 157, 161, 163, 166, 298, 329], "text": [22, 29, 34, 57, 61, 64, 67, 68, 69, 91, 98, 100, 101, 108, 121, 124, 132, 157, 161, 163, 166, 177, 456], "scale0": 22, "dnnl_arg_attr_scal": [22, 29, 61, 64, 67, 162, 166, 248, 259, 263, 273, 286, 297, 298, 305, 329, 387, 398, 403, 421, 445, 461, 557], "scale1": 22, "semant": [22, 28, 43, 45, 63, 67, 112, 121, 122, 154, 158, 305, 335, 411, 510, 549, 592], "recommend": [22, 23, 25, 26, 58, 59, 63, 67, 155, 158, 161, 168, 178, 300, 437, 438], "match": [22, 26, 37, 58, 59, 70, 80, 88, 89, 98, 104, 112, 113, 116, 119, 136, 149, 156, 158, 162, 168, 178, 179, 201, 284, 323, 369, 370, 438, 441, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 555, 562, 563, 564, 566, 568, 571, 573, 575, 577, 581, 589, 591], "syntax": [22, 58], "d": [22, 28, 29, 34, 43, 53, 54, 61, 62, 66, 67, 76, 112, 125, 126, 127, 128, 129, 130, 131, 157, 158, 175, 176, 177, 179, 194, 200, 208, 211, 242, 253, 259, 265, 276, 278, 280, 288, 296, 305, 323, 342, 343, 377, 394, 398, 405, 411, 427, 432, 436, 449, 459, 557, 585, 586], "nxcxdxhxw": 22, "pytorch": [22, 29, 122, 283, 439], "explicitli": [22, 23, 24, 25, 29, 45, 53, 155, 161, 164, 353, 355, 411], "deriv": [22, 26, 157, 161, 168, 213, 214, 305, 320, 479, 549, 581], "ones": [22, 50, 63, 163, 173, 177, 242, 252, 255, 256, 264, 267, 270, 276, 278, 292, 295, 296, 323, 377, 392, 403, 407, 427, 432, 459, 543], "unavoid": 22, "correct": [22, 23, 24, 177, 205, 206, 273, 406, 411, 413, 414, 415, 416, 417, 418, 421], "issu": [22, 25, 33, 59, 63, 154, 160, 205, 206, 263, 403], "arbitrari": [22, 26, 34, 64, 78, 79, 91, 92, 99, 100, 101, 106, 107, 108, 110, 111, 120, 139, 140, 141, 142, 153, 158, 161, 162, 163, 165, 166, 168, 177, 262, 263, 310, 387, 402, 403, 421], "6": [22, 26, 29, 34, 60, 64, 67, 102, 118, 160, 161, 162, 165, 166, 167, 168, 175, 176, 177, 190, 236, 242, 245, 247, 253, 255, 256, 257, 258, 270, 272, 278, 292, 377, 383, 394, 396, 397, 413, 414, 416, 417, 419, 432], "fewer": [22, 26, 34, 45, 64, 161, 162, 165, 166, 168], "bnorm": [22, 35, 245, 376, 384], "postop": [22, 179, 384, 387], "distribut": [23, 58, 160, 175, 176, 184, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "ensur": [23, 24, 25, 30, 59, 98, 154, 255, 256, 270, 292, 323, 412, 437, 456, 543], "clone": [23, 305, 323, 329, 479, 559, 564, 581], "repositori": [23, 24], "git": [23, 156, 178, 335, 437, 592], "http": [23, 42, 43, 51, 53, 54, 65, 175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "github": [23, 24, 42, 53, 259, 398], "com": [23, 65], "uxlfound": [23, 24, 42, 53, 259, 398], "cd": 23, "quickli": [23, 415, 418], "start": [23, 27, 35, 60, 106, 107, 121, 122, 170, 173, 174, 177, 178, 255, 261, 270, 271, 280, 292, 293, 329, 376, 406, 411, 414, 415, 418, 436, 437, 438, 457], "involv": [23, 43, 543], "your": [23, 25, 58, 59, 65, 160, 438], "locat": [23, 24, 59, 65, 177, 323, 332, 335, 361, 560, 564], "mkdir": 23, "b": [23, 28, 32, 62, 67, 164, 175, 176, 177, 194, 211, 253, 259, 263, 273, 280, 297, 298, 308, 322, 323, 341, 342, 343, 365, 371, 394, 398, 403, 421, 436, 437, 461, 539, 585, 586], "path": [23, 24, 36, 65, 172, 335], "file": [23, 24, 36, 41, 62, 160, 173, 175, 176, 177, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 335, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461], "directori": [23, 36, 65, 160, 335], "studio": [23, 65, 155, 173], "17": [23, 60, 160, 177, 438], "2022": [23, 242, 246, 254, 261, 262, 265, 266, 271, 273, 280, 377, 385, 395, 405, 421, 436], "ninja": 23, "unix": [23, 178], "makefil": 23, "dcmake_install_prefix": 23, "dcmake_build_typ": 23, "releas": [23, 24, 154, 175, 176, 253, 335, 343, 351, 356, 394, 586], "relwithdebinfo": 23, "dcmake_prefix_path": 23, "search": 23, "unifi": [23, 33, 37, 154], "project": [23, 24, 25, 173, 194, 211, 305, 329, 334, 535, 537, 557, 569], "multi": [23, 37, 43, 53, 70, 88, 98, 113, 116, 119, 146, 149, 155, 300, 361], "faster": [23, 32], "job": 23, "choic": [23, 177, 179, 186, 189], "uncom": 23, "line": [23, 155, 160, 177, 178, 438], "export": [23, 27, 155, 438], "cc": 23, "cxx": 23, "icx": [23, 65], "icpx": [23, 65], "nproc": 23, "sysctl": 23, "ncpu": 23, "setvar": 23, "sh": [23, 28, 29, 71, 81, 82, 114, 157, 252, 267, 283, 392, 407, 439], "script": [23, 173], "folder": [23, 24], "opt": [23, 24, 166], "donednn_cpu_runtim": [23, 24], "donednn_gpu_runtim": [23, 24], "open": [23, 24, 42, 363], "driver": [23, 24], "openclroot": 23, "gnu": [23, 24], "dcmake_system_nam": 23, "dcmake_system_processor": 23, "dcmake_library_path": 23, "usr": 23, "lib": [23, 65], "acl_root_dir": [23, 24], "computelibrari": [23, 24], "donednn_aarch64_use_acl": [23, 24], "vsdevcmd": 23, "bat": 23, "profession": 23, "common7": 23, "startdir": 23, "none": [23, 24, 34, 67, 70, 71, 72, 81, 82, 83, 84, 85, 86, 88, 98, 104, 105, 113, 114, 115, 116, 119, 136, 139, 146, 149, 178, 201, 202, 213, 437], "arch": 23, "host_arch": 23, "nativ": [23, 32, 43, 305, 557], "prompt": 23, "menu": 23, "config": [23, 173], "number_of_processor": 23, "cmake_build_typ": 23, "rerun": 23, "scratch": [23, 225], "solut": [23, 65, 173, 177], "altern": [23, 33, 53, 59, 154, 163], "sln": [23, 173], "x86": [23, 62, 175], "commmand": 23, "v3": [23, 63, 178, 305], "23": [23, 172], "predefin": 23, "test": [23, 30, 36, 67, 160, 170, 263, 280, 323, 403, 436, 541], "ctest": 23, "io": [23, 42, 53, 211, 259, 398], "dev_guide_build_opt": 23, "html": [23, 42, 53, 259, 398], "determin": [23, 29, 60, 197, 199, 281, 413, 414, 416, 417, 438], "scope": [23, 58, 437], "depth": [23, 28, 29, 81, 82, 177, 194, 211, 272, 311, 313, 325, 419, 481, 483, 485, 487, 489, 491, 545, 547], "smoke": [23, 24, 273, 421], "smallest": 23, "ci": [23, 24], "nightli": [23, 24], "comprehens": 23, "reconfigur": 23, "entir": [23, 29, 58, 61, 67, 125, 126, 127, 128, 129, 130, 131], "miss": [23, 159, 160, 178, 201, 247, 249, 250, 261, 262, 386, 388, 389], "donednn_test_set": 23, "r": [23, 24, 28, 43, 53, 54, 60, 62, 63, 67, 80, 87, 89, 90, 97, 106, 107, 123, 125, 126, 127, 128, 129, 130, 131, 160, 161, 162, 164, 184, 185, 271, 276, 308, 341, 363, 371, 412, 427, 438, 456, 457], "toolkit": 23, "ld_library_path": [23, 65], "sure": [23, 65, 67, 112, 175, 176, 253, 353, 394], "conda": 23, "env": [23, 175, 176, 253, 394], "doc": [23, 58, 177], "yml": 23, "header": [23, 25, 32, 33, 154, 160, 173, 178, 255, 256, 264, 270, 292, 295], "cmake_install_prefix": 23, "administr": 23, "privileg": 23, "sudo": 23, "bold": [24, 30, 31, 41, 159, 178], "onednn_library_typ": 24, "onednn_cpu_runtim": 24, "omp": [24, 160], "seq": 24, "onednn_gpu_runtim": 24, "ocl": [24, 271, 416], "offload": 24, "onednn_build_doc": 24, "onednn_build_exampl": 24, "onednn_build_test": 24, "onednn_build_graph": [24, 41], "onednn_enable_graph_dump": [24, 41], "dump": [24, 62, 160, 299, 335], "artifact": [24, 41], "onednn_arch_opt_flag": 24, "warn": [24, 160, 178, 263, 403], "onednn_enable_jit_profil": [24, 160], "profil": [24, 35, 36, 179, 220, 221, 282, 303, 335, 376], "onednn_enable_itt_task": [24, 160], "onednn_enable_primitive_cach": [24, 159], "onednn_enable_max_cpu_isa": [24, 30], "onednn_enable_cpu_isa_hint": [24, 31], "isa": [24, 30, 32, 37, 62, 63, 67, 178, 179, 186, 187, 188, 189, 298, 335, 363, 365, 437, 463], "workload": [24, 29, 58, 164, 437, 438], "primitive_nam": 24, "cpu_isa_nam": 24, "gpu_isa_nam": 24, "isa_nam": 24, "onednn_experiment": [24, 36], "onednn_verbos": [24, 36, 175, 176, 253, 335, 394, 437, 438], "onednn_dev_mod": [24, 178], "trace": [24, 178, 438], "debuginfo": [24, 178], "log": [24, 34, 36, 110, 139, 178, 203, 263, 300, 302, 403], "develop": [24, 25, 32, 36, 62, 63, 178, 248, 249, 260, 262, 306, 307, 310, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 331, 332, 333, 334, 336, 337, 339, 340, 388, 400, 402], "onednn_aarch64_use_acl": 24, "onednn_blas_vendor": 24, "armpl": 24, "acceler": [24, 32, 59, 66, 174], "extern": 24, "link": [24, 62, 81, 82, 83, 84, 85, 86], "onednn_gpu_vendor": 24, "nvidia": [24, 363], "amd": [24, 363], "dnnl_gpu_runtim": [24, 173], "onednn_dpcpp_host_compil": 24, "clang": [24, 65, 155, 257, 258, 396, 397], "onednn_library_nam": 24, "modifier_nam": 24, "coverag": [24, 25], "counterpart": [24, 63, 173, 323, 543], "prefix": [24, 335], "sub": [24, 37, 155, 164, 173, 177, 184, 185, 288, 323, 401, 437, 449], "intend": [24, 29, 172, 178, 324, 363, 369], "subject": 24, "oneapi": [24, 65, 170, 173, 175, 176, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 303, 377, 379, 381, 385, 388, 389, 390, 392, 394, 395, 398, 400, 403, 405, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 430, 432, 434, 436, 439, 443, 445, 447, 449, 450, 452, 454, 456, 457, 461], "dpc": [24, 340, 376, 456, 457, 464], "main": [24, 172, 174, 175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 323, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461, 549], "discov": 24, "absolut": [24, 68, 125], "cmake_cxx_compil": 24, "window": [24, 59, 63, 71, 72, 114, 115, 157, 178, 335, 429], "linux": [24, 155, 178, 335], "7": [24, 160, 170, 172, 175, 176, 177, 190, 198, 209, 236, 253, 255, 256, 257, 258, 265, 266, 270, 292, 394, 396, 397, 401, 402, 405, 413, 414, 416, 417, 438], "4": [24, 30, 32, 34, 38, 39, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 63, 67, 73, 74, 75, 107, 118, 136, 155, 160, 167, 175, 176, 177, 184, 185, 186, 189, 190, 194, 198, 209, 236, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 261, 262, 264, 265, 267, 270, 271, 278, 280, 282, 283, 288, 289, 292, 293, 294, 295, 296, 298, 323, 355, 383, 385, 388, 389, 392, 394, 395, 396, 397, 405, 407, 412, 413, 414, 416, 417, 432, 436, 438, 439, 449, 450, 456, 457, 459], "gcc": 24, "interoper": [24, 36, 162, 303, 347, 367, 368, 369, 370, 371, 376, 412, 416, 417, 456, 457, 464], "8": [24, 30, 32, 45, 60, 63, 65, 155, 160, 172, 175, 176, 186, 189, 190, 194, 198, 209, 211, 236, 245, 246, 248, 253, 254, 255, 256, 257, 258, 270, 292, 305, 308, 341, 371, 383, 385, 387, 394, 395, 396, 397, 413, 414, 416, 417, 437, 557], "disk": 24, "occupi": [24, 172, 323, 541], "app": 24, "remov": [24, 125, 126, 127, 128, 129, 130, 131, 320, 323, 335, 351, 543], "batch_norm": [24, 218, 376], "concat": [24, 179, 203, 218, 219, 302, 303, 323, 328, 365, 376, 391, 437, 555, 600], "deconvolut": [24, 184, 185, 218, 219, 303, 328, 408, 486, 487, 488, 489, 490, 491], "group_norm": [24, 179, 218, 376], "inner_product": [24, 218, 247, 376], "layer_norm": [24, 218, 376], "lrn": [24, 184, 185, 218, 219, 224, 225, 246, 247, 249, 250, 254, 303, 328, 376, 385, 388, 389, 395, 437, 530, 531, 532, 533, 560, 600], "pool": [24, 32, 59, 63, 71, 72, 114, 115, 184, 185, 218, 219, 224, 225, 246, 247, 249, 250, 254, 281, 300, 303, 328, 376, 385, 386, 388, 389, 395, 440, 544, 545, 546, 547, 560, 600], "prelu": [24, 29, 61, 67, 108, 122, 203, 218, 219, 302, 303, 305, 328, 376, 441, 442, 549, 550, 551, 552, 553, 600], "resampl": [24, 184, 185, 218, 219, 224, 225, 303, 328, 376, 448, 560, 565, 566, 567, 568, 600], "rnn": [24, 26, 35, 58, 59, 63, 64, 179, 184, 185, 194, 211, 218, 219, 224, 225, 226, 227, 228, 229, 242, 261, 262, 276, 278, 288, 296, 303, 305, 323, 328, 329, 376, 378, 428, 433, 437, 460, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 557, 560, 569, 588, 589, 590, 591, 600], "sdpa": [24, 43, 300], "shuffl": [24, 179, 218, 219, 224, 225, 303, 328, 376, 437, 451, 570, 571, 572, 573, 600], "softmax": [24, 43, 53, 59, 110, 140, 179, 184, 185, 201, 202, 203, 218, 219, 261, 262, 300, 302, 303, 328, 376, 437, 453, 574, 575, 576, 577, 600], "attempt": [24, 329, 497, 510, 541, 555, 579], "unimpl": [24, 160, 207, 224, 235, 280, 335, 436], "style": 24, "semicolon": 24, "delimit": [24, 160], "donednn_enable_primit": 24, "sse41": [24, 30, 31, 186, 335], "avx2": [24, 30, 32, 62, 186, 189, 335, 437], "avx512": [24, 32, 63, 177], "amx": [24, 30, 32, 67, 164, 175, 176, 186, 189, 253, 394], "linearli": 24, "complianc": [24, 175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "unit": [24, 27, 37, 42, 164, 166, 175, 176, 184, 185, 253, 314, 358, 394, 412, 429, 456], "donednn_enable_primitive_cpu_isa": 24, "xelp": 24, "xehp": 24, "xehpg": 24, "xehpc": 24, "xe2": [24, 29, 32, 67], "xe3": 24, "donednn_enable_primitive_gpu_isa": 24, "x64": [24, 32, 160, 176, 178, 343], "interfac": [24, 160, 170, 175, 176, 253, 341, 348, 355, 356, 360, 371, 394, 412, 456, 457, 582], "leav": [24, 53, 249, 250, 388, 389, 403], "donednn_enable_gemm_kernels_isa": 24, "no_corr": 24, "add_bitwis": 24, "short": [24, 164, 173, 437], "verifi": [24, 156, 479, 559, 564, 581], "largest": 24, "unmodifi": 24, "processor": [24, 29, 30, 42, 43, 53, 54, 155, 186, 189, 271, 363, 412, 456, 457], "jit": [24, 30, 31, 58, 65, 159, 160, 178, 335, 437, 438, 463], "detect": [24, 30, 157, 305, 557], "xsse4": 24, "sse4": [24, 30, 32, 177, 186, 189], "older": [24, 30, 32], "msse4": 24, "give": [24, 164, 177, 398], "therefor": [24, 43, 154, 156, 160, 172, 323, 543], "arch_opt_flag": 24, "portabl": [24, 155, 323], "throughout": [24, 58, 288, 411, 449], "undefin": [24, 59, 179, 185, 190, 193, 194, 197, 199, 200, 201, 202, 208, 209, 210, 211, 212, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 234, 241, 323, 329, 355, 543], "crash": [24, 411], "conflict": [24, 456], "tbbroot": 24, "environment": 24, "instal": [24, 65], "dtbbroot": 24, "winograd": [24, 26, 162, 178, 179, 184, 185], "_onednn_test_threadpool_impl": 24, "standalon": 24, "eigen": [24, 170], "eigen3_dir": 24, "d_onednn_test_threadpool_impl": 24, "deigen3_dir": 24, "eigen3": 24, "plu": 24, "decomposit": 24, "At": [24, 30, 31, 58, 67, 80, 159, 160, 174, 178, 269, 411], "balanc": [24, 403], "item": [24, 160], "worker": [24, 582], "64": [24, 25, 62, 63, 160, 175, 176, 190, 223, 252, 253, 256, 262, 267, 286, 297, 305, 363, 392, 394, 407, 414, 445, 461, 557], "optimis": 24, "machin": [24, 176, 263, 403], "mlplatform": 24, "org": [24, 42, 43, 51, 53, 54, 175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "download": 24, "advis": [24, 30, 31, 64, 174], "v23": 24, "11": [24, 25, 60, 160, 190, 246, 247, 249, 250, 254, 255, 256, 257, 258, 270, 282, 283, 292, 385, 388, 389, 395, 396, 397, 406, 411, 414, 438, 439], "donednn_blas_vendor": 24, "graphic": [24, 42, 43, 53, 54, 62, 67, 271, 363, 412, 456, 457], "sdk": 24, "dopenclroot": 24, "simultan": [24, 36, 162, 343], "conveni": [25, 34, 67, 177, 194, 211, 329, 412, 498, 560], "almost": [25, 155, 177], "far": [25, 63], "concern": [25, 63], "switch": [25, 173, 177], "back": [25, 29, 37, 59, 63, 71, 72, 81, 82, 83, 84, 85, 86, 110, 111, 114, 115, 160, 162, 179, 249, 250, 251, 291, 311, 313, 323, 325, 348, 356, 360, 388, 389, 390, 417, 418, 454, 456, 481, 483, 485, 487, 489, 491, 541, 545, 547], "forth": 25, "desir": [25, 59, 155, 335], "c99": 25, "medium": 25, "insid": [25, 27, 37, 177, 200, 208, 259, 273, 297, 323, 398, 413, 414, 421, 461, 543], "thin": 25, "wrapper": [25, 497, 510, 541, 555, 579], "stabl": [25, 53, 166, 185], "abi": [25, 173, 219], "usabl": [25, 28], "target": [25, 37, 90, 175, 176, 253, 261, 262, 305, 343, 349, 353, 356, 358, 360, 394, 557], "audienc": 25, "experienc": 25, "ffi": 25, "framework": [25, 37, 45, 59, 153, 155, 159, 177, 355, 363, 411, 413, 414, 415, 416, 417, 418], "overhead": [25, 27, 43, 58, 156, 159, 160, 174, 177, 178], "sanit": 25, "consequ": [25, 438], "nan": [25, 139], "larg": [25, 42, 159, 179], "16": [25, 28, 32, 54, 59, 160, 172, 175, 176, 178, 190, 194, 198, 209, 253, 265, 266, 280, 323, 394, 405, 406, 436], "close": [25, 155, 172], "overlap": [25, 71, 157], "proper": [25, 33, 59, 60, 154, 175, 176, 253, 263, 394, 398, 403, 411], "maxim": [25, 58, 335], "effici": [25, 42, 58, 63, 176, 177, 300], "No": [25, 29, 30, 32, 41, 163, 164, 176, 179, 187, 188, 242, 248, 249, 260, 262, 288, 377, 388, 400, 402, 437, 449], "128": [25, 63, 175, 176, 178, 223, 225, 247, 253, 273, 279, 280, 281, 282, 394, 421, 434, 436, 437, 438], "workaround": [25, 246, 254, 385, 395], "next_impl": [25, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "strstr": 25, "impl_info_str": [25, 224, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "ref": [25, 27, 175, 176, 253, 394], "concaten": [26, 80, 164, 179, 218, 226, 227, 251, 310, 323, 390, 478, 479], "concat_dimens": [26, 298, 310, 479], "ou": [26, 80, 165, 166], "src_i": [26, 78, 80, 110, 139, 168], "c_1": [26, 80], "c_": [26, 80, 164], "dnnl_arg_multiple_src": [26, 168, 251, 291, 298, 329, 390, 454], "sum_i": [26, 175, 262], "c_i": 26, "necessarili": [26, 163, 172, 175, 176, 253, 394], "dnnl_nchw16c": [26, 194, 211], "dnnl_ncdhw8c": [26, 194, 211], "prepack": 26, "dnnl_format_kind_opaqu": [26, 193, 210], "s8s8": [26, 63], "abl": [26, 30, 67, 162, 168, 411], "slower": [26, 32, 168], "graph": [27, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 93, 147, 153, 178, 181, 236, 255, 256, 264, 270, 292, 295, 298, 300, 303, 335, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 365, 500], "compon": [27, 178], "fold": 27, "redund": 27, "megabyt": 27, "won": [27, 178], "reach": [27, 36, 166, 207, 235, 236, 351, 559], "getter": 27, "dnnl_graph_set_constant_tensor_cache_capac": [27, 298, 351], "dnnl_graph_get_constant_tensor_cache_capac": [27, 298, 351], "programm": 27, "onednn_graph_constant_tensor_cache_capac": 27, "engine_kind1": 27, "size1": 27, "engine_kind2": 27, "size2": 27, "1024": [27, 36, 67, 159, 162, 264, 288, 295, 298, 350, 449], "2048": [27, 264, 295], "pars": 27, "prioriti": 27, "neural": [28, 29, 32, 173, 246, 247, 300, 334, 357, 385, 386], "network": [28, 29, 32, 42, 58, 173, 246, 247, 300, 334, 357, 385, 386], "df_": 28, "commonli": [28, 29], "wide": [28, 42, 300], "known": [28, 29, 67, 175, 263, 269, 273, 297, 323, 398, 403, 411, 413, 416, 417, 421, 461], "summar": [28, 33, 154, 164], "scale_shift": 28, "carri": [28, 175], "diff_src": [28, 59, 66, 69, 72, 75, 79, 82, 85, 92, 96, 101, 103, 105, 107, 111, 115, 118, 122, 133, 138, 140, 142, 144, 151, 157, 163, 249, 250, 254, 288, 306, 314, 317, 320, 388, 389, 395, 449], "diff_dst": [28, 59, 66, 69, 72, 75, 77, 79, 82, 83, 85, 86, 92, 96, 101, 103, 105, 107, 111, 115, 118, 122, 133, 138, 140, 142, 144, 151, 249, 250, 254, 306, 314, 317, 320, 388, 389, 395], "diff_bia": [28, 77], "diff_scale_shift": 28, "_layer": 28, "_iter": 28, "recurr": [28, 32, 164, 242, 276, 278, 296, 329, 334, 377, 427, 432, 459, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "letter": [28, 177, 194, 211, 437], "od": 28, "kd": [28, 29, 61], "sd": [28, 29, 81, 82], "sw": [28, 29, 71, 81, 82, 114, 157, 252, 267, 283, 392, 407, 439], "dd": [28, 29, 34, 81, 82], "dh": [28, 29, 71, 81, 82, 114, 157, 283, 439], "dilat": [28, 82, 83, 84, 85, 86, 114, 115, 201, 202, 224, 225, 246, 254, 255, 256, 270, 281, 283, 292, 298, 311, 313, 325, 385, 395, 413, 414, 416, 417, 437, 439, 481, 483, 485, 487, 489, 491, 545, 547, 560], "ph": 28, "pw": 28, "transposit": [28, 308, 341, 371], "hidden": [28, 63, 262, 276, 296, 329, 334, 401, 427, 459, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 589, 591], "_t": [28, 164], "timestamp": [28, 160, 164], "l": [28, 65, 66, 164, 194, 242, 276, 278, 288, 296, 305, 323, 377, 427, 432, 449, 459, 557], "tanh": [28, 29, 34, 95, 117, 151, 164, 184, 185, 203, 242, 252, 267, 274, 276, 278, 279, 296, 300, 302, 377, 392, 407, 423, 427, 432, 434, 459], "logist": [28, 34, 184, 185], "cell": [28, 32, 63, 184, 185, 194, 211, 224, 225, 228, 229, 262, 276, 296, 329, 334, 401, 402, 427, 459, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 560, 569, 589, 591], "tild": [28, 164], "candid": [28, 67, 194, 211, 300], "gate": [28, 164, 184, 185, 194, 211, 242, 276, 278, 288, 296, 300, 323, 377, 427, 432, 449, 459], "forget": [28, 194, 211, 249, 250, 388, 389], "o": [28, 43, 53, 54, 155, 160, 164, 177, 179, 194, 211, 262, 276, 282, 288, 305, 323, 401, 402, 427, 449, 557], "updat": [28, 29, 32, 61, 164, 172, 173, 194, 211, 249, 250, 254, 255, 256, 264, 270, 276, 288, 292, 295, 388, 389, 395, 427, 449, 515], "reset": [28, 36, 170, 184, 185, 194, 211, 276, 330, 428, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591], "english": 28, "alphabet": 28, "canon": 28, "z": [28, 63], "outermost": [28, 165, 166, 177, 194, 211, 323], "innermost": [28, 165, 166, 194, 211, 224, 225, 323], "dens": [28, 67, 162, 177, 178, 323, 543], "ba": [28, 67, 211, 217, 241, 543], "last": [28, 36, 42, 49, 51, 63, 64, 106, 107, 112, 148, 155, 166, 175, 176, 177, 178, 207, 235, 236, 253, 320, 330, 386, 394, 401, 402, 411, 501, 559], "transpos": [28, 40, 50, 53, 112, 165, 176, 194, 211, 217, 241, 267, 273, 308, 341, 371, 407, 421], "natur": [28, 109, 184, 185, 411], "suppos": [28, 60, 288, 449], "column": [28, 67, 112, 160, 167, 174, 177, 308, 341, 371, 436], "row": [28, 112, 165, 167, 174, 177, 212, 234, 259, 262, 298, 308, 341, 355, 371, 398, 436], "major": [28, 63, 165, 177, 259, 308, 335, 341, 355, 371, 398, 592], "fortran": 28, "todo": [28, 157, 261, 376, 401], "pictur": [28, 157, 177, 458], "ab16a": 28, "similar": [28, 32, 43, 53, 58, 158, 167, 173, 177, 179, 212, 217, 234, 241, 255, 256, 264, 270, 288, 292, 295, 323, 387, 398, 411, 449, 543], "split": [28, 43, 59, 155, 160, 175, 176, 177, 253, 323, 394, 543], "contigu": [28, 67, 177, 308, 341, 343, 355, 371], "represent": [28, 32, 45, 177, 323, 398, 401, 406, 411, 412, 456, 543], "domain": [28, 177, 194, 211, 305, 398, 549], "four": [28, 63, 164], "cross": [29, 134, 155, 178, 363], "correl": 29, "comment": [29, 81, 82], "front": [29, 71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 160, 311, 313, 325, 481, 483, 485, 487, 489, 491, 545, 547], "top": [29, 42, 53, 71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 160, 177, 305, 311, 313, 323, 325, 481, 483, 485, 487, 489, 491, 545, 547, 549], "left": [29, 34, 42, 53, 66, 67, 71, 72, 81, 82, 83, 84, 85, 86, 106, 107, 112, 114, 115, 136, 157, 163, 165, 166, 177, 178, 224, 225, 226, 227, 252, 267, 281, 283, 288, 305, 311, 313, 323, 325, 392, 407, 437, 439, 449, 481, 483, 485, 487, 489, 491, 545, 547, 549, 560], "pd_l": [29, 81, 82], "ph_l": [29, 71, 81, 82, 114, 157, 252, 267, 283, 392, 407, 439], "pw_l": [29, 71, 81, 82, 114, 157, 252, 267, 283, 392, 407, 439], "_l": 29, "stand": [29, 155], "bottom": [29, 42, 53, 71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 177, 311, 313, 325, 481, 483, 485, 487, 489, 491, 545, 547], "pd_r": [29, 81, 82], "ph_r": [29, 81, 82, 252, 267, 283, 392, 407, 439], "pw_r": [29, 81, 82, 252, 267, 283, 392, 407, 439], "_r": 29, "broken": [29, 175, 176, 253, 394], "exposit": 29, "realiti": 29, "sum_": [29, 61, 67, 81, 110, 112, 139], "lfloor": [29, 81, 163], "rfloor": [29, 81, 163], "oc_g": [29, 81], "ic_g": [29, 81], "5d": [29, 64, 177, 194, 211, 305, 549], "depthwis": [29, 39, 305, 329, 549], "dkh": [29, 81], "dkw": [29, 81], "tensorflow": [29, 122, 172, 177, 283, 439], "adjust": [29, 177, 283, 323, 439, 543], "dh_onednn": 29, "dh_torch": 29, "dw_onednn": 29, "dw_torch": 29, "fraction": 29, "swap": [29, 323, 543], "li": [29, 43], "expand": [29, 267, 407], "plai": [29, 411], "crucial": 29, "role": 29, "diffbia": [29, 61, 164], "dnnl_arg_diff_weight": [29, 61, 158, 249, 250, 254, 298, 329, 388, 389, 395], "dnnl_arg_diff_bia": [29, 61, 164, 249, 250, 254, 288, 298, 329, 388, 389, 395, 449], "prelu_post_op_posit": [29, 61, 67], "f8_e5m2": [29, 32, 67, 87, 123, 162, 175, 176, 198, 209], "f8_e4m3": [29, 32, 67, 87, 123, 162, 175, 176, 198, 209], "f4_e2m1": [29, 32, 67, 209], "f4_e3m0": [29, 32, 67, 209], "physic": [29, 64, 155, 177, 194, 269, 323, 411, 543], "critic": [29, 58, 59, 61, 156, 175, 176, 253, 281, 394, 437], "shorten": [29, 61, 164, 178], "dnnl_wio": [29, 61, 194], "dnnl_hwio": [29, 61, 194], "dnnl_dhwio": [29, 61, 194], "xe": [29, 43, 53, 54], "hpc": [29, 32], "dnnl_arg_": [29, 61, 67, 324, 329, 340, 369, 370, 555, 563], "memory_index": [29, 61, 67], "dnnl_arg_attr_zero_point": [29, 67, 259, 273, 297, 298, 305, 329, 398, 421, 461, 557], "prevent": [29, 33, 60, 139, 154, 329], "feasibl": 29, "usag": [29, 31, 32, 36, 37, 54, 62, 134, 178, 194, 211, 242, 243, 255, 256, 264, 270, 276, 278, 280, 292, 295, 296, 300, 305, 377, 379, 427, 432, 436, 438, 459, 549, 557], "deploi": 29, "done": [29, 34, 59, 67, 157, 162, 175, 176, 253, 386, 387, 394, 411, 412], "set_scal": [29, 67, 297, 461, 462, 557], "wei": [29, 32], "eta": 29, "set_zero_point": [29, 67, 297, 461, 462, 557], "shift_": [29, 162], "simd": [29, 30, 32, 186, 189], "expens": [29, 59, 406, 411, 437, 543], "fast": [29, 43, 53, 175, 176, 177, 253, 394], "lavin": 29, "grai": 29, "often": [29, 43, 160, 178], "aarch64": [29, 160, 179, 363], "rearrang": [29, 148], "fallback": 29, "exce": [29, 179], "half": [29, 32, 172, 190, 198, 209], "14": [29, 60, 160, 190, 281, 437, 438, 549], "constraint": [29, 67], "met": [29, 121, 122], "silent": [29, 31], "fall": [29, 179], "explicit": [29, 53, 170, 288, 323, 449], "weigh": 29, "against": 29, "boost": [29, 30, 32, 172, 178, 186, 189], "consumpt": [29, 225, 323, 411], "grow": 29, "significantli": [29, 159, 172], "growth": 29, "rest": [29, 81], "conv1_pd": 29, "convolution_winograd": [29, 185, 481, 483, 485, 487], "conv1_src_md": [29, 247, 386], "conv1_weights_md": [29, 247, 386], "conv1_bias_md": [29, 247, 386], "conv1_dst_md": [29, 247, 386], "conv1_strid": [29, 247, 386], "conv1_padding_l": 29, "conv1_padding_r": 29, "convolution_auto": [29, 185, 281, 437, 481, 483, 485], "heurist": [29, 179], "affin": [29, 106, 107, 155], "f8": 29, "iplement": 29, "xmx": [29, 32, 43, 53, 54], "lpg": [29, 32], "hpg": [29, 32], "uarch": [29, 32, 160], "fp8": [29, 32, 67], "sometim": [30, 58, 59, 61, 63, 177, 288, 406, 411, 449], "explor": [30, 160, 175, 176, 253, 394], "onednn_max_cpu_isa": 30, "avx": [30, 32, 178, 186, 189, 335, 437], "advanc": [30, 32, 62, 67, 162, 164, 186, 189, 263, 403, 421, 461], "avx2_vnni": [30, 186, 335], "dl": [30, 32, 172, 178, 186, 189], "avx512_cor": [30, 178, 186, 335], "512": [30, 32, 43, 53, 67, 178, 186, 189, 260, 279, 400, 434], "avx512bw": [30, 32], "avx512vl": 30, "avx512dq": 30, "avx512_core_vnni": [30, 186, 335], "avx512_core_bf16": [30, 178, 186, 335], "avx10_1_512": [30, 186, 335], "avx512_core_fp16": [30, 178, 186, 335], "avx10": [30, 186, 189], "float16": [30, 186, 189], "avx10_1_512_amx": [30, 186, 335], "avx512_core_amx": [30, 178, 186, 335], "avx2_vnni_2": [30, 186, 335], "avx10_1_512_amx_fp16": [30, 186, 335], "avx512_core_amx_fp16": [30, 178, 186, 335], "exclud": [30, 184, 185], "preview": 30, "avx10_2_512": [30, 186, 335], "avx10_2_512_amx_2": [30, 186, 335], "float8": [30, 186, 189], "alias": [30, 160, 194, 211, 335], "introduct": [30, 62], "manag": [30, 31, 37, 154, 160, 178, 232, 233, 255, 256, 264, 270, 292, 295, 324, 369, 510], "set_max_cpu_isa": [30, 335, 365], "ed": [30, 160], "observ": [30, 155, 178], "get_effective_cpu_isa": [30, 335, 365], "highest": [30, 58, 178], "zmm": 31, "advantag": [31, 172], "clock": [31, 160], "onednn_cpu_isa_hint": 31, "set_cpu_isa_hint": [31, 335, 365], "routin": [31, 175, 176, 253, 343, 344, 394, 583], "no_hint": [31, 187, 335], "prefer_ymm": [31, 187], "ymm": [31, 187, 188], "get_cpu_isa_hint": [31, 335, 365], "pose": 31, "bypass": 31, "ieee": [32, 172], "golden": 32, "comparison": [32, 67, 98, 175, 176, 253, 263, 323, 376, 394], "s4": [32, 54, 67, 89, 198, 209], "u4": [32, 54, 67, 89, 198, 209], "doubl": [32, 190, 225, 259, 263, 280, 298, 398, 403, 436], "ofp8": [32, 190, 198, 209], "5": [32, 34, 42, 60, 63, 95, 99, 104, 105, 106, 107, 136, 160, 163, 167, 172, 174, 175, 176, 177, 190, 194, 198, 209, 236, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 264, 270, 271, 277, 280, 282, 286, 292, 293, 294, 295, 355, 385, 388, 389, 394, 395, 396, 397, 412, 413, 414, 416, 417, 430, 436, 445, 456, 457], "e8m0": [32, 209], "mx": [32, 190, 209], "center": [32, 64, 67, 162, 259, 398, 421], "seri": [32, 62, 63, 67, 162], "newer": 32, "converison": 32, "lack": [32, 175, 176, 253, 394], "topic": [32, 35, 54, 67, 162, 323, 411, 437, 438], "govern": [32, 175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "convert_": 32, "_dt": 32, "postops_": 32, "mix": [32, 42, 43, 45, 57, 152], "faithfulli": [32, 45], "closest": 32, "fp4": 32, "nearest": [32, 104, 105, 135, 152, 184, 185, 201, 202, 333], "tie": 32, "flush": [32, 280, 351, 436], "fenv": 32, "fesetround": 32, "xmmintrin": 32, "_mm_set_flush_zero_mod": 32, "_mm_flush_zero_on": 32, "ftz": 32, "explain": [32, 60, 386, 387], "recogn": [32, 45], "fp16": 32, "tba": 32, "word": [32, 59, 63, 67, 194, 211, 232, 233], "4x": 32, "microarchitectur": 32, "lp": [32, 161, 184], "dp4a": 32, "uhd": 32, "11th": 32, "14th": 32, "gen": [32, 62, 259, 263, 273, 297, 398, 403, 421, 461], "iri": [32, 429], "formerli": [32, 63], "dg1": 32, "aka": [32, 194, 261, 262, 411], "dpa": 32, "arc": [32, 62, 429], "tm": [32, 160, 376], "achemist": 32, "flex": 32, "arctic": 32, "sound": [32, 177], "mad": 32, "pont": 32, "vecchio": 32, "ultra": 32, "lunar": 32, "lake": [32, 63], "battlemag": 32, "upconvers": 32, "interact": [33, 154, 319, 324, 340, 341, 354, 356, 360], "dnnl_sycl": [33, 239, 292, 293, 294, 295, 417, 418, 456, 457], "seamlessli": 33, "submit": [33, 154, 293, 294, 330, 383, 385, 386, 412, 456, 457, 582], "access": [33, 58, 154, 155, 172, 262, 288, 293, 323, 327, 335, 350, 355, 401, 406, 411, 412, 449, 456, 457, 541], "uint8_t": [33, 63, 156, 175, 176, 225, 253, 259, 262, 273, 298, 308, 323, 324, 329, 341, 353, 355, 356, 357, 358, 365, 367, 369, 371, 394, 398, 402, 421, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 543, 544, 545, 546, 547, 550, 551, 552, 553, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 588, 589, 590, 591], "sycl_interop": [33, 292, 293, 294, 295, 298, 303, 323, 340, 347, 348, 360, 365, 366, 417, 418, 456, 457], "make_engin": [33, 154, 156, 369, 370], "get_devic": [33, 36, 154, 156, 292, 294, 295, 369, 370, 417, 418, 457], "get_context": [33, 36, 154, 271, 292, 294, 295, 369, 370, 412, 417, 418, 457], "make_stream": [33, 36, 154, 292, 295, 369, 370, 371, 417, 418], "get_queu": [33, 293, 294, 370, 456, 457], "make_memori": [33, 154, 293, 294, 369, 370, 456, 457], "get_buff": [33, 293, 323, 370, 456], "uniform": [33, 154, 155], "memory_kind": [33, 154, 293, 294, 298, 324, 340, 369, 370, 456, 457], "could": [33, 45, 154, 160, 172, 175, 176, 182, 183, 253, 259, 334, 394, 398, 411], "identifi": [33, 36, 37, 154, 160, 300, 323, 358], "get_memory_kind": [33, 154, 369, 370], "track": [33, 37, 93], "accessor": [33, 456], "write": [33, 36, 43, 53, 58, 154, 160, 175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 323, 343, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 541, 586], "i_1": 34, "ldot": [34, 60, 67], "i_k": 34, "dnnl_eltwise_ab": [34, 184, 185], "begin": [34, 68, 69, 91, 98, 101, 108, 121, 124, 132, 158, 163, 164, 165, 175, 176, 242, 243, 244, 245, 247, 251, 252, 253, 260, 262, 267, 268, 271, 272, 274, 275, 276, 277, 278, 279, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 377, 379, 381, 383, 390, 392, 394, 400, 402, 407, 409, 412, 419, 423, 425, 427, 430, 432, 434, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459], "clip": [34, 78, 184, 185], "dnnl_eltwise_clip": [34, 184, 185], "clip_v2": 34, "dnnl_eltwise_clip_v2": [34, 184, 185], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [34, 184, 185], "elu": [34, 92, 184, 185, 203, 300, 302], "dnnl_eltwise_elu": [34, 184, 185], "dnnl_eltwise_elu_use_dst_for_bwd": [34, 184, 185], "exp": [34, 53, 110, 139, 184, 203, 262, 300, 302], "dnnl_eltwise_exp": [34, 184, 185], "dnnl_eltwise_exp_use_dst_for_bwd": [34, 184, 185], "gelu_erf": [34, 95, 96, 201, 202], "dnnl_eltwise_gelu_erf": [34, 184, 185], "erf": [34, 95, 184, 185], "pi": [34, 95], "gelu_tanh": [34, 95, 96, 201, 202], "dnnl_eltwise_gelu_tanh": [34, 184, 185], "044715": [34, 95], "hardsigmoid": [34, 101, 184, 185, 203, 300, 302], "dnnl_eltwise_hardsigmoid": [34, 184, 185], "hardswish": [34, 103, 184, 185, 203, 300, 302], "dnnl_eltwise_hardswish": [34, 184, 185], "dnnl_eltwise_linear": [34, 184, 185], "dnnl_eltwise_log": [34, 184, 185], "log_": 34, "dnnl_eltwise_logist": [34, 184, 185, 334], "dnnl_eltwise_logistic_use_dst_for_bwd": [34, 184, 185], "mish": [34, 118, 184, 185, 203, 300, 302], "dnnl_eltwise_mish": [34, 184, 185], "omega": [34, 60, 118], "delta": [34, 118], "pow": [34, 184, 185, 203, 302], "dnnl_eltwise_pow": [34, 184, 185], "dnnl_eltwise_relu_use_dst_for_bwd": [34, 184, 185, 314, 493], "dnnl_eltwise_round": [34, 184, 185], "soft_relu": [34, 184, 185], "dnnl_eltwise_soft_relu": [34, 184, 185], "dnnl_eltwise_sqrt": [34, 184, 185], "dnnl_eltwise_sqrt_use_dst_for_bwd": [34, 184, 185], "squar": [34, 126, 143, 146, 184, 185, 203, 213, 214, 300, 302], "dnnl_eltwise_squar": [34, 184, 185], "swish": [34, 42, 184, 185], "dnnl_eltwise_swish": [34, 184, 185], "dnnl_eltwise_tanh": [34, 184, 185, 334], "dnnl_eltwise_tanh_use_dst_for_bwd": [34, 184, 185], "134145": 34, "_relu": 34, "logsigmoid": 34, "soft": [34, 58], "eltwise_forward": [34, 247, 249, 250, 266, 268, 269, 271, 282, 293, 294, 314, 365, 386, 388, 389, 406, 409, 411, 412, 456, 457, 493, 555], "rather": [34, 288, 449], "Such": [34, 59, 155, 543], "satisfi": [34, 37], "workflow": [35, 59, 269, 376, 412, 413, 414, 415, 416, 417, 418, 436, 437, 456, 457], "aggress": 36, "onednn_experimental_bnorm_stats_one_pass": 36, "varianc": [36, 73, 74, 75, 99, 106, 107, 213, 214, 243, 245, 272, 275, 306, 317, 320, 329, 379, 383, 419, 425, 472, 474, 503, 505, 519, 521], "bn": 36, "rfc": 36, "onednn_experimental_gpu_conv_v2": 36, "shapeless": 36, "microkernel": 36, "onlin": 36, "collect": [36, 37, 160, 178, 342, 358, 398], "agnost": [36, 162, 194, 211, 323], "cl_command_queu": [36, 154, 271, 298, 324, 369, 412], "ocl_queu": [36, 271, 412], "cl_queue_properti": 36, "prop": 36, "cl_queue_profiling_en": 36, "clcreatecommandqueuewithproperti": 36, "ocl_interop": [36, 154, 156, 271, 298, 303, 324, 347, 356, 365, 366, 412], "reset_profil": [36, 330, 365], "enqueu": [36, 412], "twice": 36, "wait": [36, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 330, 338, 377, 379, 381, 383, 388, 389, 390, 392, 396, 397, 398, 400, 403, 406, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 437, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 541, 579, 582], "conv_prim": [36, 252, 392], "uint64_t": [36, 170, 298, 330, 365, 582], "nsec": 36, "get_profiling_data": [36, 330, 365], "profiling_data_kind": [36, 330, 365], "resourc": [36, 37, 159, 348], "vendor": 36, "logfil": 36, "parti": 36, "spdlog": 36, "onednn_verbose_logfil": 36, "cnn_test_logg": 36, "cpp": [36, 62, 65, 170, 178, 376, 386, 387, 401, 402, 406, 411, 412, 413, 414, 415, 416, 417, 418, 436, 437, 438, 456], "consol": 36, "logger": 36, "until": [36, 175, 176, 249, 250, 253, 255, 256, 264, 270, 292, 295, 323, 386, 388, 389, 394, 403, 456, 541], "filepath": 36, "dnnl_verbose_logfil": 36, "stdout": [36, 178, 335], "rotat": 36, "lazi": 36, "onednn_verbose_logfile_s": 36, "50": 36, "onednn_verbose_log_with_consol": 36, "onednn_verbose_num_logfil": 36, "invok": [36, 335], "ai": 37, "class": [37, 156, 170, 224, 293, 294, 298, 341, 348, 349, 353, 355, 357, 358, 361, 366, 371, 457, 498, 510, 511, 555, 559, 560, 569], "bind": [37, 255, 256, 264, 270, 292, 295], "besid": [37, 43], "metadata": [37, 167, 257, 258, 396, 397], "know": [37, 59, 259, 398], "connect": [37, 42, 61, 153, 255, 256, 261, 270, 288, 292, 298, 355, 357, 413, 414, 416, 417, 449, 501], "edg": 37, "paramt": 37, "subgraph": [37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 300], "within": [37, 63, 66, 160, 174, 177, 184, 185, 308, 320, 321, 323, 341, 371], "cycl": [37, 398], "procedur": 37, "port": 37, "node": [37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 147, 155, 246, 254, 298, 385, 395, 438], "abstract": [37, 156, 174, 175, 176, 253, 315, 323, 357, 361, 394, 406, 411, 412, 456, 582], "lifecycl": 37, "anymor": [37, 177], "categori": [38, 47, 48, 52, 194, 211, 300], "divid": [38, 53, 63, 81, 82, 83, 84, 85, 86, 99, 175, 176, 179, 194, 203, 211, 253, 300, 302, 394], "blue": [38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "brown": [38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "epilogu": [38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56], "unari": [38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 55, 300, 492, 494], "rule": [38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 70, 88, 98, 112, 113, 116, 119, 146, 149, 225], "src0": [38, 476], "definit": [38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 163, 164, 165, 323, 346, 348, 359, 362, 500], "biasadd": [39, 40, 46, 49, 50, 51, 77, 203, 255, 270, 292, 302, 413, 416, 417], "batchnorminfer": [39, 47, 73, 203, 300, 302], "f2f": [39, 47, 49, 51, 55], "typecast": [39, 45, 47, 49, 51, 53, 55, 134, 203, 300, 302], "co": [39, 167, 177, 242, 243, 244, 245, 251, 252, 260, 262, 267, 268, 269, 272, 274, 275, 276, 277, 278, 279, 283, 284, 285, 286, 287, 289, 290, 291, 296, 298, 308, 341, 365, 371, 377, 379, 381, 383, 390, 392, 400, 407, 409, 411, 419, 423, 425, 427, 430, 432, 434, 439, 441, 443, 445, 447, 450, 452, 454, 459], "visual": [41, 65, 81, 82, 83, 84, 85, 86, 155, 173], "benchmark": [41, 438, 463], "onednn_graph_dump": 41, "serial": [41, 156, 323, 367], "json": 41, "onednn_graph_verbos": 41, "info": [41, 160, 178, 305, 334, 437, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 549, 589, 591], "100001": 41, "100002": 41, "1313609102600373579": 41, "100003": 41, "12829238476173481280": 41, "variant": [42, 155, 164, 311, 313], "feed": 42, "ffn": 42, "llm": [42, 54, 300], "v": [42, 53, 54, 67, 165, 259, 260, 263, 273, 282, 297, 298, 363, 398, 400, 403, 421, 461, 541], "glu": 42, "adopt": [42, 54, 89], "qualiti": [42, 43], "w_1": 42, "w_2": 42, "otim": 42, "sigmoid": [42, 138, 164, 185, 203, 300, 302], "fc": 42, "swiglu": 42, "llama": 42, "qwen": 42, "acycl": [42, 43, 53, 54], "gelu": [42, 96, 184, 185, 201, 202, 203, 300, 302], "meet": [42, 43, 53, 54], "properli": [42, 53, 164, 177, 179, 329], "attent": [42, 54, 164, 242, 261, 262, 276, 296, 300, 329, 334, 377, 401, 402, 427, 459, 468, 470, 523, 525, 569], "arxiv": [42, 43, 51, 53, 54], "1706": [42, 43, 53, 54], "03762v7": [42, 43, 53, 54], "2002": 42, "05202": 42, "foundat": 42, "2302": 42, "13971": 42, "technic": 42, "report": [42, 160, 162, 280, 305, 436, 557], "2309": 42, "16609": 42, "graph_extens": [42, 53], "dot": [43, 54, 300], "head": [43, 53, 54, 160], "bottleneck": [43, 178], "load": [43, 160], "sentenc": 43, "mqa": [43, 53], "degrad": 43, "instabl": 43, "interpol": [43, 105, 163, 201, 202, 203, 300, 302, 333], "propos": [43, 172], "subgroup": 43, "mini": [43, 53, 54, 194, 211, 273, 323, 421, 501], "h_q": 43, "h_kv": 43, "n_rep": 43, "staticreshap": [43, 53, 203, 302], "manipul": [43, 323], "reshap": [43, 53, 323, 543], "unnecessari": [43, 59, 155, 437], "openmp": [43, 53, 155, 178, 437], "decod": [43, 53, 62, 261, 262, 401, 402], "1911": [43, 53], "02150": [43, 53], "checkpoint": 43, "2305": 43, "13245": 43, "half_pixel": [44, 104, 105, 201, 202], "coordinate_transformation_mod": [44, 104, 105, 201, 202], "strictli": 45, "symmetr": [45, 63, 311, 313, 325], "scheme": 45, "asymmetr": [45, 67, 87, 89, 90, 123, 305, 398, 399, 421, 422, 461, 462, 549], "manual": [45, 59, 63, 175, 176, 253, 261, 280, 394, 436], "honor": 45, "elimin": 45, "implicitli": [45, 164, 305, 323, 549], "vice": [45, 67, 112], "versa": [45, 67, 112], "clearli": 45, "groupnorm": [47, 203, 300, 302], "layernorm": [47, 107, 203, 300, 302], "f2q": [47, 49, 50, 51, 55], "avgpool": [48, 203, 300, 302], "maxpool": [48, 203, 300, 302], "rounding_typ": [48, 71, 114, 201, 202], "exclude_pad": [48, 71, 72, 201, 202], "q2f": [49, 50, 51], "zp": [50, 87, 89, 90, 123, 201, 202, 256, 259, 398, 414], "per_tensor": [50, 87, 89, 90, 123, 201, 202, 256, 414], "smoothquant": 51, "2211": 51, "10438": 51, "reducel1": [52, 203, 300, 302], "reducel2": [52, 203, 300, 302], "reducemax": [52, 203, 300, 302], "reducemean": [52, 203, 300, 302], "reducemin": [52, 203, 300, 302], "reduceprod": [52, 203, 300, 302], "reducesum": [52, 203, 300, 302], "backbon": 53, "bert": [53, 300], "diffus": 53, "gpt": [53, 300], "q": [53, 54, 160, 292, 293, 294, 295, 298, 417, 418, 456, 457], "qk": 53, "d_k": 53, "d_qk": 53, "d_v": 53, "causal": 53, "triangular": 53, "diagon": 53, "fill": [53, 58, 59, 67, 136, 175, 176, 177, 248, 253, 262, 263, 265, 266, 273, 282, 284, 297, 298, 394, 402, 403, 405, 406, 421, 437, 441, 461], "inf": [53, 124], "elsewher": [53, 438], "entri": [53, 167, 178, 224, 225, 257, 258, 305, 323, 327, 330, 350, 396, 397, 543, 549], "unchang": [53, 200, 208, 329, 559], "genindex": [53, 203, 302], "greaterequ": [53, 203, 302], "statictranspos": [53, 203, 302], "stat": [53, 139, 320], "score": 53, "recov": 53, "softmaxbackward": [53, 203, 302], "tra": 53, "dq": 53, "dk": 53, "dv": 53, "cast": [53, 58, 63, 134, 152, 269, 411], "proid": 53, "int4": 54, "exploit": 54, "kv": [54, 300], "subsequ": [54, 67, 173, 177, 178, 222, 223, 288, 316, 335, 401, 402, 411, 449], "dynamicdequant": [54, 203, 302], "dynamicquant": [54, 203, 302], "apart": 54, "group_shap": [54, 89, 201], "scale_k": 54, "zp_k": 54, "scale_v": 54, "zp_v": 54, "dt_fp": 54, "dt_int": 54, "c_g": 57, "c_ghw": 57, "group_normalization_forward": [57, 272, 317, 365, 419, 503, 555], "preprocess": 58, "classifi": 58, "depict": [58, 164, 177], "conv_prim_descr": 58, "friendli": [58, 288, 387, 438, 449], "accomplish": 58, "manner": [58, 323, 543], "don": [58, 67, 246, 254, 259, 288, 385, 395, 398, 449], "find": [58, 125, 126, 127, 128, 129, 173, 255, 256, 259, 263, 266, 270, 292, 293, 398, 403, 406, 456], "look": [58, 177], "source_mem_descr": 58, "dest_mem_descr": 58, "weights_mem_descr": 58, "weight_memori": 58, "conv_source_memori": 58, "user_source_memori": 58, "get_desc": [58, 175, 176, 242, 247, 248, 249, 250, 252, 253, 259, 260, 261, 262, 266, 267, 273, 274, 276, 278, 281, 282, 284, 288, 296, 297, 323, 369, 377, 386, 387, 388, 389, 392, 394, 398, 400, 401, 402, 406, 407, 421, 423, 427, 432, 437, 438, 441, 449, 459, 461, 541], "reorder_prim_descr": 58, "conv_weights_memori": [58, 246, 248, 249, 250, 254, 385, 387, 388, 389, 395], "conv_dest_memori": 58, "durat": [58, 280, 436], "grab": 58, "infus": 58, "compress": [58, 67, 167, 212, 234, 297, 300, 461, 462], "fed": [59, 172, 255, 256, 270, 292], "turn": [59, 177, 178, 411, 437], "predict": 59, "forward_train": [59, 61, 164, 178, 179, 222, 242, 243, 252, 267, 268, 272, 274, 275, 276, 277, 278, 283, 284, 287, 288, 289, 290, 296, 377, 379, 392, 407, 409, 419, 423, 425, 427, 430, 432, 439, 441, 447, 449, 450, 452, 459, 470, 474, 485, 491, 495, 505, 509, 517, 521, 525, 529, 533, 537, 547, 553, 568, 573, 577, 591], "suffix": [59, 411], "_train": 59, "versu": [59, 172], "_infer": 59, "answer": 59, "backward_data": [59, 179, 213, 222, 472, 503, 519], "sens": [59, 194, 211, 259, 398], "backward_weight": [59, 179, 222], "solver": 59, "practic": [59, 155, 162, 178, 255, 256, 264, 270, 282, 292, 295, 387, 437, 438], "consider": [59, 398], "care": 59, "pooling_max": [59, 185, 247, 249, 250, 281, 283, 386, 388, 389, 437, 439, 545, 547], "slide": 59, "posit": [59, 60, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 99, 104, 105, 106, 107, 108, 114, 115, 147, 177, 245, 323, 351, 383], "Of": [59, 548], "cours": [59, 177, 548], "again": [59, 164], "takeawai": 59, "former": [59, 63, 173, 177], "invoc": 59, "techniqu": 59, "perspect": [59, 162, 177, 411], "varieti": 59, "emit": 59, "bullet": 59, "9": [59, 60, 62, 190, 236, 255, 256, 270, 280, 292, 413, 414, 416, 417, 436, 438], "pick": [59, 282, 437, 438], "occasion": 59, "brain": 59, "workspace_desc": [59, 157, 242, 243, 249, 250, 276, 277, 278, 283, 288, 296, 377, 379, 388, 389, 427, 430, 432, 439, 449, 459, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "perfectli": 59, "inde": 59, "fwd": 59, "forward_primitive_desc": 59, "workspace_md": [59, 224], "primitive_forward": 59, "anywher": [59, 411], "els": [59, 104, 105, 175, 176, 246, 249, 250, 252, 253, 254, 255, 256, 259, 267, 270, 280, 282, 288, 292, 293, 294, 385, 388, 389, 392, 394, 395, 398, 407, 411, 436, 449, 456, 457], "bwd": 59, "primitive_backward": 59, "push": [60, 261, 262], "recent": [60, 159, 172], "focus": [60, 63, 155, 398], "shrink": [60, 63, 259, 398], "throughput": [60, 155, 172], "eight": 60, "offer": [60, 172], "pack": [60, 162, 167, 175, 176, 177, 212, 217, 234, 241, 253, 260, 273, 297, 323, 342, 343, 394, 400, 421, 422, 461, 462, 543, 585, 586, 587], "cost": [60, 288, 438, 449], "dataset": [60, 387], "establish": 60, "q_": 60, "255": [60, 63, 225, 273, 421], "r_": 60, "127": [60, 63, 162, 262, 402], "alpha_": 60, "lceil": [60, 163], "rceil": [60, 163], "w_": [60, 63, 163, 164], "roundnearesteven": 60, "approx": [60, 160], "approxim": [60, 95, 184], "t_": 60, "15": [60, 63, 160, 177, 190, 257, 258, 280, 396, 397, 436], "12": [60, 160, 178, 190, 194, 242, 256, 275, 278, 377, 414, 425, 432], "96": [60, 223, 246, 247, 249, 250, 254, 255, 270, 273, 274, 282, 292, 385, 388, 389, 395, 421, 423, 438], "bigl": 60, "bigr": 60, "238": 60, "187": 60, "66": 60, "88": 60, "net": [60, 246, 247, 254, 261, 262, 288, 298, 385, 386, 387, 395, 401, 402, 449], "uniformli": 60, "g_0": 60, "o_1": 60, "i_2": 60, "h_3": 60, "w_4": 60, "walk": 60, "treat": [61, 63, 162, 166, 172], "minibatch": [61, 155, 323], "flatten": 61, "dnnl_io": [61, 194], "dnnl_oi": [61, 194], "dnnl_oiw": [61, 194], "dnnl_oihw": [61, 194, 246, 254, 385, 395], "dnnl_oidhw": [61, 194], "onednn_jit_dump": 62, "dnnl_set_jit_dump": [62, 298, 335], "dnnl_dump_cpu_jit_avx2_conv_fwd_kernel_f32": 62, "bin": 62, "dnnl_dump_cpu_jit_avx_gemv_t_f32_kern": 62, "30": [62, 259, 262, 263, 398, 402, 403], "disassembl": 62, "objdump": 62, "mi386": 62, "xed": 62, "ir": 62, "emul": 62, "sde": 62, "dnnl_dump_gpu_gen_reord": 62, "dnnl_dump_gpu_gen_conv": 62, "iga64": 62, "assembli": 62, "emphas": 63, "signed": 63, "int8_t": [63, 259, 262, 273, 286, 297, 298, 308, 341, 365, 371, 398, 402, 421, 445, 461], "dnnl_gemm_u8s8s32": [63, 262, 298, 308], "averag": [63, 71, 157, 160, 184, 185, 325], "biggl": 63, "biggr": 63, "dnnl_gemm_s8s8s32": [63, 298, 308], "gru": [63, 184, 185, 194, 211, 276, 296, 334, 428, 459, 506, 507, 508, 509, 526, 527, 528, 529], "behind": [63, 177, 437], "xeon": [63, 186, 189, 429, 438], "e7": 63, "haswel": 63, "x1xx": 63, "skylak": 63, "vpmaddubsw": 63, "vpmaddwd": 63, "vpaddd": 63, "s16": 63, "int16_t": 63, "c_s32": [63, 259, 398], "a_u8": [63, 259, 273, 398, 421], "b_s8": [63, 259, 273, 297, 398, 421, 461], "u8s8s32_compute_avx512": 63, "ab_s16": 63, "vpmaddubsw_r": 63, "saturate_to_s16": 63, "caution": 63, "snippet": 63, "u8s8s32_comput": 63, "32767": 63, "int16_min": 63, "int16_max": 63, "64770": 63, "pitfal": [63, 177], "vpmovsxbw": 63, "vpmovzxbw": 63, "2x": 63, "occur": [63, 177, 179, 201], "u7": 63, "s7": 63, "63": [63, 160, 262, 305, 557], "worth": [63, 398, 411, 438], "data_": 63, "set_rnn_data_qparam": [63, 262, 402, 557], "set_rnn_weights_qparam": [63, 262, 402, 557], "w_max": 63, "x2xx": 63, "cascad": 63, "bring": 63, "vpdpbusd": 63, "u8s8s32_compute_avx512_dl_boost": 63, "real": [63, 162, 177, 194, 259, 398, 413, 414, 415, 416, 417, 418], "world": [63, 259, 398], "overcom": 63, "emploi": 63, "y_": 63, "a_s8": 63, "u8s8": 63, "s8s8s32_comput": 63, "32258": 63, "solv": [63, 175, 176, 253, 394], "overview": 63, "x_s8": 63, "precomput": [63, 261, 262, 387, 402], "embed": [63, 401, 402], "rescal": 63, "insignificantli": 63, "noth": [63, 175, 176, 253, 394], "meaningless": 63, "ia": 63, "volum": [63, 147, 323], "2a": 63, "2b": 63, "2c": [63, 261, 262], "325383": 63, "070u": 63, "2019": [63, 249, 259, 263, 265, 266, 269, 271, 273, 281, 282, 293, 294, 388, 398, 403, 405, 421, 457], "futur": [63, 351], "319433": 63, "037": 63, "chapter": 63, "rodriguez": 63, "andr": 63, "et": 63, "al": 63, "white": 63, "paper": [63, 177], "2018": [63, 248, 261, 262, 288, 449], "axi": [64, 67, 77, 80, 81, 82, 84, 85, 86, 87, 89, 90, 97, 99, 104, 105, 106, 107, 110, 111, 123, 125, 126, 127, 128, 129, 130, 131, 139, 140, 148, 165, 166, 179, 201, 202, 224, 225, 251, 256, 289, 290, 298, 323, 336, 337, 390, 414, 450, 451, 452, 453, 560, 571, 573, 575, 577], "stat_desc": [64, 298, 320, 519, 521], "layer_normalization_forward": [64, 275, 320, 365, 425, 519, 555], "rmsnorm": 64, "dnnl_rms_norm": [64, 213, 214], "simplif": 64, "skip": [64, 160, 175, 176, 179, 253, 323, 343, 394, 415, 418, 541, 586], "rm": [64, 213, 214], "never": [64, 323, 335], "_ndim": 64, "_dim": [64, 67], "dnnl_tnc": [64, 164, 194], "dnnl_tn": [64, 194], "dnnl_nt": [64, 194], "dnnl_ldnc": [64, 164, 194], "unlik": [64, 89, 108, 134, 308, 341, 371, 416, 417, 501], "tnc": [64, 106, 107, 211, 242, 261, 262, 275, 276, 278, 288, 296, 377, 401, 402, 425, 427, 432, 449, 459], "dnnl_ntc": [64, 164, 194], "dnnl_bac": [64, 194, 211], "ldnc": [64, 106, 107, 211, 261, 262, 401, 402], "dnnl_type": [65, 177, 184, 188, 189, 193, 194, 214, 219, 221, 223, 225, 227, 229, 231, 233, 234, 499], "auxiliari": [65, 178, 269, 288, 411, 449], "dnnl_config": 65, "dnnl_version": [65, 298, 335], "dnnl_graph_typ": [65, 197, 202, 204, 206, 208, 500, 501], "dnnl_ukernel": [65, 175, 176, 241, 253, 394, 585, 586, 587], "dnnl_ukernel_typ": [65, 217], "libdnnl": [65, 160], "dnnl_library_typ": [65, 173], "dylib": 65, "bindnnl": 65, "dll": 65, "dnnlroot": 65, "getting_start": [65, 376, 411], "ldnnl": 65, "resolv": [65, 262, 401], "dyld_library_path": 65, "rpath": 65, "appl": [65, 429], "secur": 65, "entitl": 65, "fly": [65, 411], "xcode": 65, "codesign": 65, "plist": 65, "xml": 65, "encod": [65, 162, 179, 212, 224, 225, 234, 257, 258, 260, 261, 262, 323, 400, 401, 402, 543], "utf": 65, "doctyp": 65, "dtd": 65, "en": 65, "www": [65, 175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "propertylist": 65, "dict": 65, "eha": 65, "cl": [65, 160, 270, 271, 412, 416, 456], "microsoft": [65, 155, 173, 429], "msv": 65, "n_": 66, "j": [66, 89, 110, 139, 160, 170, 247, 261, 262, 323, 386, 543], "local_s": [66, 246, 249, 250, 254, 277, 298, 321, 385, 388, 389, 395, 430, 531, 533], "m": [67, 112, 160, 167, 175, 176, 247, 253, 257, 258, 259, 260, 263, 264, 273, 279, 280, 282, 295, 297, 298, 308, 341, 343, 365, 371, 394, 396, 397, 398, 400, 403, 421, 434, 436, 438, 461, 586, 594], "12d": [67, 194, 211], "bs_0": 67, "bs_1": 67, "rng": [67, 329], "dnnl_runtime_dim_v": [67, 179, 263, 273, 298, 323, 324, 329, 340, 369, 370, 403, 404, 421, 422, 555, 563], "wildcard": [67, 203, 302, 323, 355], "hand": [67, 177, 194, 211, 323], "situat": [67, 438], "inconsist": [67, 178, 179], "being": [67, 162, 164, 213, 214, 323, 330, 335, 412, 456, 543], "invalid": [67, 175, 176, 178, 179, 253, 327, 335, 350, 351, 394], "nd": [67, 121, 122, 177], "sake": [67, 177, 411], "prod_": 67, "mbox": [67, 158], "ax": [67, 104, 105, 112, 125, 126, 127, 128, 129, 130, 131, 158, 166, 179, 201, 202, 323, 543], "abc": [67, 211, 279, 323, 434, 543], "bac": [67, 211], "1x1x": 67, "x1": 67, "dnnl_arg_dropout_se": 67, "int_min": 67, "int_max": 67, "99": 67, "wtag": 67, "dtag": 67, "4x1000000": 67, "1000000x128": 67, "1000000": 67, "dt": [67, 178, 179, 298, 549], "3x512x1024": 67, "1x1024x512": 67, "encd": [67, 162], "matric": [67, 174, 175, 179, 259, 263, 273, 297, 308, 341, 371, 398, 403, 421, 461], "sgemm": [67, 263, 308, 365, 371, 376, 404], "ge": [68, 91, 98, 108, 121], "diff": [69, 101, 175, 176, 224, 249, 250, 253, 254, 259, 263, 288, 306, 311, 313, 314, 317, 318, 320, 321, 325, 326, 329, 333, 334, 336, 337, 388, 389, 394, 395, 398, 403, 449, 468, 472, 481, 483, 487, 489, 493, 503, 507, 513, 515, 519, 523, 527, 531, 535, 545, 551, 560, 566, 569, 571, 575, 589], "_dst": [69, 101], "auto_broadcast": [70, 88, 98, 113, 116, 119, 136, 146, 149, 201, 202], "numpi": [70, 88, 98, 113, 116, 119, 136, 146, 149, 201, 202, 323], "denom": [71, 157], "move": [71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 177, 260, 400, 401, 402, 406, 497, 510, 541, 555, 579], "s64": [71, 72, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 97, 99, 104, 105, 106, 107, 110, 111, 114, 115, 123, 125, 126, 127, 128, 129, 130, 131, 139, 140, 147, 148], "pads_begin": [71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 201, 202, 255, 256, 270, 292, 413, 414, 416, 417], "auto_pad": [71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 201, 202], "same_upp": [71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 201, 202], "same_low": [71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 201, 202], "pads_end": [71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 201, 202, 255, 256, 270, 292, 413, 414, 416, 417], "floor": [71, 82, 114, 201, 202], "data_format": [71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 99, 104, 105, 114, 115, 121, 122, 178, 201, 202, 255, 256, 270, 292, 413, 414, 416, 417, 501], "ncx": [71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 99, 104, 105, 114, 115, 121, 122, 201, 202, 255, 270, 292, 413, 416, 417], "nxc": [71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 99, 104, 105, 114, 115, 121, 122, 201, 202, 256, 414, 501], "srcshape": 72, "src_shape": [72, 104, 105, 201], "epsilon": [73, 74, 75, 99, 106, 107, 201, 202, 224, 225, 263, 275, 298, 306, 317, 320, 403, 425, 472, 474, 503, 505, 519, 521, 560, 562], "momentum": [73, 201, 202], "neither": [73, 75, 320, 406, 411, 412, 456, 519, 521], "running_mean": 73, "running_vari": 73, "batch_mean": 73, "batch_vari": 73, "diff_gamma": [75, 107], "diff_beta": [75, 107], "_valu": 78, "clamp": [79, 203, 300, 302], "use_dst": [79, 92, 133, 138, 144, 151, 201, 202], "rank": [80, 87, 89, 90, 97, 106, 107, 112, 123, 125, 126, 127, 128, 129, 130, 131], "weights_format": [81, 82, 83, 84, 85, 86, 201, 202, 255, 256, 270, 292, 413, 414, 416, 417], "oix": [81, 82, 83, 84, 85, 86, 201, 202, 255, 270, 292, 413, 416, 417], "fist": 81, "stretch": [81, 82, 83, 84, 85, 86], "xio": [81, 82, 83, 84, 85, 86, 201, 202, 256, 414], "_channel": [81, 82, 83, 84, 85, 86], "_shape": [81, 82, 83, 84, 85, 86, 122], "firstli": [82, 112], "_pad": 82, "_h": 82, "_padding_h": 82, "output_pad": [82, 84, 85, 86, 201, 202], "dst_shape": [82, 104, 105, 136, 201, 202], "weights_shap": [83, 86, 201], "iox": [84, 85, 86, 201, 202], "xoi": [84, 85, 86, 201, 202], "zps_i": [87, 89, 90], "scale_i": [87, 123], "qtype": [87, 89, 90, 123, 201, 202, 256, 414], "per_channel": [87, 89, 90, 121, 123, 201, 202, 256, 414], "scales_i": [89, 90], "channelnum": [89, 90, 125, 126, 127, 128, 129, 130, 131], "gx1": 89, "groupnum": 89, "zps_j": 89, "scales_j": 89, "groupsiz": 89, "gropup": 89, "src_dim": [89, 242, 243, 245, 251, 252, 260, 267, 268, 272, 274, 275, 276, 277, 278, 279, 283, 284, 285, 286, 287, 289, 290, 291, 296, 377, 379, 383, 390, 392, 400, 407, 409, 419, 423, 425, 427, 430, 432, 434, 439, 441, 443, 445, 447, 450, 452, 454, 459], "group_siz": [89, 165, 289, 298, 336, 450, 571, 573], "exponenti": [94, 184, 185], "sqrt2": 95, "y": 99, "coeffici": [99, 108], "keep_stat": [99, 106, 201, 202], "use_affin": [99, 106, 107, 201, 202], "modul": [99, 106, 107, 160], "1e": [99, 106, 107, 259, 280, 398, 436], "span": [99, 106, 107], "_src": 101, "bilinear": [104, 105, 185, 201, 202, 333], "trilinear": [104, 105, 163, 185, 201, 202, 333], "coordin": [104, 105, 212, 234], "resiz": [104, 105, 260, 280, 400, 436], "align_corn": [104, 105, 201, 202], "x_resiz": [104, 105], "differenti": [104, 156, 173, 357], "begin_norm_axi": [106, 107, 201, 202], "small": [108, 155, 174, 175, 179, 438], "leakag": 108, "logarithm": [109, 184, 185], "formul": [110, 141, 142, 411], "dst_i": [110, 139, 146], "big": 110, "src_j": [110, 139], "logsoftmax": [111, 166, 184, 185, 203, 302], "unsqueez": 112, "transpose_a": [112, 201, 202, 264, 295, 415, 418], "transpose_b": [112, 201, 202, 264, 295, 415, 418], "_0": [113, 116], "distanc": [114, 115], "avgpoolbackward": [115, 203, 302], "softplu": [117, 142, 203, 300, 302], "ln": [117, 141, 166], "diff_": [118, 164], "3src": 118, "2src": 118, "parametr": 121, "per_channel_broadcast": [121, 201, 202], "uni": [121, 122, 178, 261, 262, 437, 438], "direction": [121, 122], "rightmost": [121, 288, 449], "shape_i": 121, "_forward": 122, "diff_slop": 122, "zp_i": 123, "infin": [124, 139], "l1": [125, 160], "norm": [125, 126, 161, 184, 213, 214, 259, 263, 300, 398, 403], "keep_dim": [125, 126, 127, 128, 129, 130, 131, 201, 202], "shapeof": [125, 126, 127, 128, 129, 130, 131], "l2": [126, 160, 259, 398], "root": [126, 143, 161, 184, 185, 213, 214], "cond": 136, "invalid_shap": [136, 207], "request": [139, 166, 175, 176, 207, 235, 236, 253, 315, 323, 329, 330, 356, 370, 394, 560], "inf_as_zero": [139, 201, 202], "_0_i": 146, "_1_i": 146, "special_zero": [147, 201, 202], "keep": [147, 172, 174, 177, 200, 208, 225, 249, 250, 254, 288, 386, 388, 389, 395, 438, 449], "overal": [147, 177, 438], "permut": [148, 194, 211, 298, 323, 543], "dnnl_ocl": [154, 215, 270, 271, 412, 416], "cl_mem": [154, 271, 298, 323, 324, 369, 411, 412, 541], "get_command_queu": [154, 271, 369, 412], "get_mem_object": [154, 271, 369, 412], "retain": 154, "destruct": [154, 543, 549, 557], "measur": [155, 178, 387, 436], "affinit": 155, "tbb": [155, 160], "intention": 155, "nor": [155, 320, 406, 411, 412, 456, 519, 521], "principl": 155, "numactl": 155, "easi": 155, "modern": 155, "socket": [155, 438], "chip": 155, "tile": 155, "cluster": 155, "setup": [155, 160], "among": [155, 160, 355], "orient": 155, "latenc": [155, 160], "server": 155, "interleav": [155, 174], "chanc": 155, "traffic": 155, "omp_proc_bind": 155, "spread": 155, "omp_plac": 155, "omp_num_thread": [155, 438], "membind": 155, "cpunodebind": 155, "physcpubind": 155, "kmp_hw_subset": 155, "1t": 155, "costli": 156, "mitig": [156, 159, 262], "blob": [156, 224, 225, 298, 323, 324, 329, 356, 367, 369, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 543, 544, 546, 550, 552, 555, 560, 561, 563, 565, 567, 570, 572, 574, 576, 580, 588, 590], "content": [156, 167, 323, 541, 543], "commit": [156, 178, 335], "hash": [156, 178, 335, 437, 592], "dnnl_version_t": [156, 298, 335, 365], "packag": [156, 173], "fetch": 156, "primitive_desc_bas": [156, 329, 365, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_cache_blob_id": [156, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_cache_blob": [156, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 544, 546, 550, 552, 555, 561, 563, 565, 567, 570, 572, 574, 576, 580, 588, 590], "cache_miss": [156, 178], "cache_hit": [156, 178], "persistent_cache_hit": [156, 178], "namespac": [156, 167, 173, 175, 176, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 303, 324, 340, 341, 342, 347, 356, 360, 376, 377, 379, 381, 383, 388, 389, 390, 392, 394, 396, 397, 398, 400, 403, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461], "store_cache_blob_on_disk": 156, "load_cache_blob_from_disk": 156, "conv_from_cache_blob": 156, "get_engine_cache_blob_id": [156, 369], "get_engine_cache_blob": [156, 369], "ocl_engin": 156, "get_blob": [156, 543], "deseri": 156, "dnnl_pooling_avg_include_pad": [157, 184, 185, 325], "dnnl_pooling_avg_exclude_pad": [157, 184, 185, 325], "nice": 157, "restor": 157, "itself": [157, 329, 411, 559, 579], "dnnl_pooling_max": [157, 184, 185, 246, 254, 325, 385, 395], "flt_max": 157, "dbl_max": 157, "area": [157, 178, 323, 543], "leaki": [158, 326], "trainabl": [158, 326], "Its": 158, "weights_md": [158, 224, 246, 279, 284, 385, 434, 441, 560], "repeat": [159, 437], "capac": [159, 298, 327, 350, 351, 365, 366], "exceed": [159, 179], "evict": [159, 327, 350], "hit": 159, "profile_cr": [159, 178], "onednn_primitive_cache_capac": 159, "dnnl_set_primitive_cache_capac": [159, 298, 327], "notifi": 160, "address": [160, 174, 177, 288, 356, 449], "onednn_jit_profil": 160, "tsc": [160, 335], "dnnl_set_jit_profiling_flag": [160, 298, 335], "box": 160, "overrid": [160, 170, 335], "dnnl_set_jit_profiling_jitdumpdir": [160, 298, 335], "timelin": 160, "chart": 160, "fp": [160, 305, 316, 335], "onednn_itt_task_level": 160, "trigger": [160, 438], "master": [160, 172], "amplx": 160, "knob": 160, "shapes_alexnet": 160, "nmi": 160, "watchdog": 160, "timer": 160, "impl": [160, 170, 179], "prb": 160, "gop": [160, 436], "gfreq": 160, "gflop": [160, 436], "0time": 160, "0gflop": 160, "avx512_common": [160, 438], "alexnet": [160, 246, 247, 248, 249, 250, 254, 385, 386, 387, 388, 389, 395], "conv1": [160, 247, 255, 270, 292, 385, 386, 413, 416, 417], "g1mb256ic3ih227oc96oh55kh11sh4ph0n": 160, "53": 160, "9726": 160, "4285": 160, "3096": 160, "81": 160, "5851": 160, "2389": 160, "74": 160, "conv2": [160, 247, 385, 386], "g2mb256ic96ih27oc256oh27kh5ph2n": 160, "104": 160, "696": 160, "20": [160, 259, 263, 272, 355, 398, 403, 419], "2195": 160, "5177": 160, "98": 160, "21": [160, 438], "9233": 160, "4775": 160, "56": [160, 256], "conv3": [160, 247, 248, 387], "mb256ic256ih13oc384oh13kh3ph1n": 160, "68": 160, "904": 160, "5134": 160, "4441": 160, "57": 160, "18": [160, 178, 438], "1391": 160, "3798": 160, "conv4": [160, 247], "g2mb256ic384ih13oc384oh13kh3ph1n": 160, "51": 160, "678": 160, "7397": 160, "4401": 160, "97": [160, 178], "4623": 160, "4146": 160, "76": 160, "conv5": [160, 247], "g2mb256ic384ih13oc256oh13kh3ph1n": 160, "34": 160, "452": 160, "77148": 160, "4433": 160, "13": [160, 190, 194, 247, 248, 252, 267, 269, 387, 392, 407, 411], "50435": 160, "4051": 160, "mistrust": 160, "72": [160, 289, 450], "6726": 160, "avg": 160, "83": 160, "6142": 160, "10": [160, 172, 190, 236, 242, 243, 244, 245, 246, 251, 252, 254, 255, 256, 259, 260, 261, 262, 263, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 283, 284, 285, 286, 287, 289, 290, 291, 292, 296, 298, 377, 379, 381, 383, 385, 390, 392, 395, 398, 400, 403, 407, 409, 411, 413, 414, 416, 417, 419, 423, 425, 427, 430, 432, 434, 439, 441, 443, 445, 447, 450, 452, 454, 459], "csv": 160, "_jit_avx512_common_conv_fwd_kernel": 160, "300": 160, "128503": 160, "293": 160, "946143": 160, "285": 160, "549830": 160, "268": 160, "868599": 160, "256": [160, 247, 248, 256, 261, 262, 272, 279, 281, 298, 387, 419, 434, 437], "715527": 160, "libgomp": 160, "func": [160, 249, 250, 254, 388, 389, 395], "0x194f0": 160, "186": 160, "604226": 160, "0x19370": 160, "82": 160, "609694": 160, "jit_avx512_co": 160, "35": 160, "682241": 160, "vmlinux": 160, "763433": 160, "1451": 160, "459338": 160, "outsid": [160, 341, 417, 418], "280": 160, "489764": 160, "434821": 160, "interv": 160, "2000": 160, "ue": 160, "2344": 160, "3131": 160, "24": [160, 177], "1246": 160, "2237": 160, "2988": 160, "5157": 160, "6731": 160, "4617": 160, "5369": 160, "4434": 160, "87": 160, "1371": 160, "4020": 160, "75": [160, 246, 247, 249, 250, 254, 385, 388, 389, 395], "428": 160, "4522": 160, "06": 160, "7986": 160, "4037": 160, "79": 160, "64233": 160, "4508": 160, "05": 160, "99841": 160, "3828": 160, "1404": 160, "85": 160, "7318": 160, "dtlb": 160, "lock": 160, "4k": 160, "fb": 160, "26": [160, 242, 278, 377, 432], "icach": 160, "micro": [160, 174], "itlb": 160, "bad": [160, 179], "specul": 160, "l3": 160, "dram": 160, "frequenc": 160, "clocktick": 160, "retir": 160, "cpi": 160, "rate": [160, 178], "x87": 160, "microcod": 160, "assist": 160, "jitdump": [160, 335], "perfmap": [160, 335], "jitdumpdir": [160, 335], "record": [160, 255, 256, 270, 292], "k1": [160, 247], "mb1ic32ih14oc32oh14kh3ph1n": 160, "resnet_50": 160, "res4a_branch2b": 160, "mb1ic32ih14oc32oh14kh3ph1nresnet_50": 160, "0032768": 160, "0131836": 160, "248": 160, "551": 160, "0262988": 160, "124": [160, 162], "599": 160, "woken": 160, "captur": [160, 498], "wrote": 160, "884": 160, "23102": 160, "inject": 160, "displai": [160, 178, 179, 280, 436], "stdio": [160, 246, 254, 265, 385, 395, 405], "n20": 160, "lost": 160, "23k": 160, "uhh": 160, "5775500000": 160, "symbol": [160, 173], "39": 160, "33": 160, "0x000000000001d8ba": 160, "29": 160, "41": [160, 438], "31475": 160, "jit_avx2_conv_fwd_kernel_f32": 160, "49": 160, "0x000000000001d712": 160, "47": 160, "jit_avx2_convolution_fwd_t": 160, "execute_forward": 160, "exec_ctx_t": 160, "lambda": 160, "52": 160, "0x000000000001d8be": 160, "93": 160, "0x000000000001d716": 160, "0x000000000001d8c5": 160, "55": [160, 246, 247, 249, 250, 254, 282, 385, 388, 389, 395, 438], "0x000000000001d8c3": 160, "0x000000000001d71d": 160, "resolut": 160, "disassembli": 160, "brendan": 160, "gregg": 160, "excel": 160, "mathop": 161, "mul": [161, 184, 185, 331], "idl": 161, "ep": [161, 298, 331, 562], "kept": [162, 177, 194, 329, 559], "dnnl_arg_from": [162, 246, 247, 248, 249, 250, 254, 262, 265, 281, 298, 329, 385, 386, 387, 388, 389, 395, 402, 405, 437], "dnnl_arg_to": [162, 246, 247, 248, 249, 250, 254, 262, 265, 281, 298, 329, 385, 386, 387, 388, 389, 395, 402, 405, 437], "encount": [162, 178, 179, 386], "bug": [162, 205, 206], "team": 162, "dnnl_s8": [162, 190, 198, 209], "dnnl_f32": [162, 177, 190, 194, 198, 209, 246, 254, 265, 343, 385, 395, 405], "allevi": [162, 263, 403], "dt_src": 162, "memory_format": 162, "fmt_src": 162, "dt_dst": 162, "fmt_dst": 162, "upsampl": [163, 283, 300, 439], "downsampl": 163, "f_h": 163, "f_w": 163, "ih_0": 163, "iw_0": 163, "ih_1": 163, "iw_1": 163, "nchw16c": [163, 177, 211], "_spatial": 163, "_size": 163, "unrol": 164, "srciter": 164, "dstiter": 164, "evalu": 164, "left2right": 164, "increas": [164, 172, 438], "right2left": 164, "decreas": [164, 166, 438], "bidirectional_concat": [164, 226, 261, 262, 401, 402], "dstlayer": 164, "bidirectional_sum": [164, 226], "srclayer": 164, "h_": [164, 184, 185], "And": [164, 177, 323, 543], "vanilla_rnn_forward": [164, 296, 334, 365, 459, 555, 557, 589], "vanilla_rnn_backward": [164, 334, 365, 555], "vanilla_rnn_pd": [164, 296, 459], "aprop": 164, "src_layer_desc": [164, 262, 288, 298, 334, 402, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "src_iter_desc": [164, 242, 276, 278, 288, 296, 298, 334, 377, 427, 432, 449, 459, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "weights_layer_desc": [164, 261, 262, 288, 298, 334, 401, 402, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "weights_iter_desc": [164, 242, 261, 262, 276, 278, 288, 296, 298, 334, 377, 401, 427, 432, 449, 459, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "bias_desc": [164, 248, 249, 288, 298, 311, 313, 318, 322, 334, 387, 388, 449, 468, 470, 485, 491, 507, 509, 517, 523, 525, 527, 529, 535, 537, 539, 569, 589, 591], "dst_layer_desc": [164, 261, 262, 288, 298, 334, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "dst_iter_desc": [164, 242, 276, 278, 288, 296, 298, 334, 377, 427, 432, 449, 459, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "a_t": [164, 262], "h_t": 164, "lstm_forward": [164, 261, 262, 278, 288, 334, 365, 401, 402, 432, 449, 535, 555], "lstm_backward": [164, 288, 334, 365, 449, 555], "lstm_pd": [164, 278, 432], "src_iter_h_desc": 164, "src_iter_c_desc": [164, 278, 288, 298, 334, 432, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "dst_iter_h_desc": 164, "dst_iter_c_desc": [164, 278, 288, 298, 334, 432, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "i_t": 164, "w_i": 164, "u_i": 164, "b_i": [164, 175], "f_t": 164, "w_f": 164, "u_f": 164, "b_f": 164, "c_t": [164, 184, 185], "u_": 164, "b_": [164, 184, 185], "o_t": 164, "w_o": 164, "u_o": 164, "b_o": 164, "weightslay": 164, "weightsit": 164, "srciterc": 164, "dstiterc": 164, "weights_peephole_desc": [164, 298, 334, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "p_i": 164, "p_f": 164, "p_o": 164, "p_": 164, "weights_peephol": 164, "weights_projection_desc": [164, 298, 334, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "weights_project": 164, "gru_forward": [164, 334, 365, 507, 555], "gru_backward": [164, 334, 365, 555], "gru_pd": 164, "u_t": 164, "w_u": 164, "u_u": 164, "b_u": 164, "r_t": [164, 184, 185], "w_r": 164, "u_r": 164, "b_r": 164, "lbr_gru_forward": [164, 276, 334, 365, 427, 527, 555], "lbr_gru_backward": [164, 334, 365, 555], "lbr_gru_pd": [164, 276, 427], "rsquo": 164, "augru_forward": [164, 242, 334, 365, 377, 468, 555], "augru_backward": [164, 334, 365, 555], "augru_pd": [164, 242, 377], "attention_desc": [164, 298, 334, 468, 470, 523, 525], "lbr_augru_forward": [164, 334, 365, 523, 555], "lbr_augru_backward": [164, 334, 365, 555], "lbr_augru_pd": 164, "diffweightslay": 164, "diffweightsit": 164, "diffweightspeephol": 164, "diffweightsproject": 164, "diff_weights_overwrit": [164, 228], "dnnl_arg_src_lay": [164, 242, 261, 262, 276, 278, 288, 296, 298, 329, 377, 401, 402, 427, 432, 449, 459], "srclayerattent": 164, "dnnl_arg_src_layer_attent": 164, "dnnl_arg_src_it": [164, 242, 261, 262, 276, 278, 288, 296, 298, 329, 377, 401, 427, 432, 449, 459], "dnnl_arg_src_iter_c": [164, 261, 262, 278, 288, 298, 329, 401, 432, 449], "dnnl_arg_weights_lay": [164, 242, 261, 262, 276, 278, 288, 296, 298, 329, 377, 401, 402, 427, 432, 449, 459], "dnnl_arg_weights_it": [164, 242, 261, 262, 276, 278, 288, 296, 298, 329, 377, 401, 402, 427, 432, 449, 459], "weightspeephol": 164, "dnnl_arg_weights_peephol": [164, 298, 329], "weightsproject": 164, "dnnl_arg_weights_project": [164, 298, 329], "dnnl_arg_dst_lay": [164, 242, 261, 262, 276, 278, 288, 296, 298, 329, 377, 401, 402, 427, 432, 449, 459], "dnnl_arg_dst_it": [164, 242, 261, 262, 276, 278, 288, 296, 298, 329, 377, 401, 427, 432, 449, 459], "dnnl_arg_dst_iter_c": [164, 261, 262, 278, 288, 298, 329, 401, 432, 449], "dnnl_workspac": 164, "diffsrclay": 164, "dnnl_arg_diff_src_lay": [164, 288, 298, 329, 449], "diffsrclayerattent": 164, "dnnl_arg_diff_src_layer_attent": 164, "diffsrcit": 164, "dnnl_arg_diff_src_it": [164, 288, 298, 329, 449], "diffsrciterc": 164, "dnnl_arg_diff_src_iter_c": [164, 288, 298, 329, 449], "dnnl_arg_diff_weights_lay": [164, 288, 298, 329, 449], "dnnl_arg_diff_weights_it": [164, 288, 298, 329, 449], "dnnl_arg_diff_weights_peephol": [164, 298, 329], "dnnl_arg_diff_weights_project": [164, 298, 329], "diffdstlay": 164, "dnnl_arg_diff_dst_lay": [164, 288, 298, 329, 449], "diffdstit": 164, "dnnl_arg_diff_dst_it": [164, 288, 298, 329, 449], "diffdstiterc": 164, "dnnl_arg_diff_dst_iter_c": [164, 288, 298, 329, 449], "With": [164, 172, 456], "dnnl_ldgo": [164, 194], "dnnl_ldigo": [164, 194], "dnnl_ldio": [164, 194], "dnnl_ldgoi": [164, 194], "dnnl_ldoi": [164, 194], "markdown": 164, "thought": 165, "formal": 165, "ug": 165, "nu": 166, "minor": [166, 335, 592], "piec": [166, 323, 329], "ulp": 166, "format_kind": [167, 173, 178, 179, 224, 307, 311, 313, 318, 320, 322, 323, 326, 331, 333, 334, 541, 543], "enumer": [167, 560], "ordin": 167, "sparse_encod": [167, 224, 541, 543], "member": [167, 224], "unspecifi": [167, 178, 191, 192, 323, 543], "pseudocod": 167, "nnz": [167, 257, 258, 260, 298, 323, 396, 397, 400, 543], "values_dt": 167, "indices_dt": [167, 298, 323], "pointers_dt": [167, 298, 323], "csr_md": 167, "csr_valu": 167, "5f": [167, 245, 257, 258, 262, 273, 383, 396, 397, 402, 421], "0f": [167, 246, 247, 248, 249, 250, 254, 257, 258, 260, 261, 262, 265, 266, 271, 280, 288, 293, 294, 298, 385, 387, 388, 389, 395, 396, 397, 400, 401, 402, 405, 406, 412, 436, 449, 456, 457], "csr_indic": 167, "csr_pointer": 167, "csr_mem": 167, "values_sz": 167, "indices_sz": 167, "pointers_sz": 167, "values_handl": 167, "indices_handl": 167, "pointers_handl": 167, "coo_md": 167, "coo_valu": 167, "coo_row_indic": 167, "coo_col_indic": 167, "coo_mem": 167, "row_indices_handl": 167, "col_indices_handl": 167, "bigger": [168, 177], "broad": 169, "dnnl_threadpool_ifac": [170, 582], "test_thread": 170, "threadpool_t": 170, "threadpool_interop": [170, 298, 303, 341, 365], "threadpool_ifac": [170, 371], "nonblockingthreadpool": 170, "unique_ptr": 170, "tp_": 170, "num_thread": 170, "hardware_concurr": 170, "get_num_thread": [170, 582], "numthread": 170, "get_in_parallel": [170, 582], "currentthreadid": 170, "get_flag": [170, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 582, 589, 591], "asynchron": [170, 406, 412, 437, 456, 582], "parallel_for": [170, 293, 294, 456, 457, 582], "fn": [170, 582], "nthr": [170, 178], "njob": 170, "schedul": 170, "balance211": 170, "new_content_goes_her": 171, "idea": [172, 177, 398], "spot": 172, "trade": 172, "site": [172, 498], "themselv": [172, 177, 255, 256, 264, 270, 292, 295, 411, 413, 414, 415, 416, 417, 418, 501], "afterward": 172, "incompat": [173, 179], "migrat": [173, 232, 233], "mkldnn": 173, "substr": [173, 179], "renam": 173, "macro": [173, 298], "v1": [173, 178, 259, 263, 398, 403], "mkldnn_memory_desc_t": 173, "md": [173, 177, 179, 411, 438, 541, 543], "mkldnn_block": 173, "exec": [173, 178, 271, 293, 437, 438], "mkldnn_args_src": 173, "dnnl_block": [173, 193, 210, 323, 543], "dnnl_args_src": 173, "mkldnn_dnnl_mangl": 173, "preprocessor": 173, "mkldnn_memory_desc_init_by_tag": 173, "dnnl_memory_desc_init_by_tag": 173, "mkldnn_arch_opt_flag": 173, "dnnl_arch_opt_flag": 173, "mkldnn_build_exampl": 173, "dnnl_build_exampl": 173, "mkldnn_build_for_ci": 173, "dnnl_build_for_ci": 173, "mkldnn_build_test": 173, "dnnl_build_test": 173, "mkldnn_cpu_runtim": 173, "dnnl_cpu_runtim": 173, "mkldnn_enable_concurrent_exec": 173, "dnnl_enable_concurrent_exec": [173, 232, 233], "mkldnn_enable_jit_profil": 173, "dnnl_enable_jit_profil": 173, "mkldnn_gpu_backend": 173, "dnnl_gpu_backend": 173, "mkldnn_gpu_runtim": 173, "mkldnn_install_mod": 173, "dnnl_install_mod": 173, "mkldnn_library_typ": 173, "mkldnn_thread": 173, "dnnl_thread": 173, "mkldnn_use_clang_sanit": 173, "dnnl_use_clang_sanit": 173, "mkldnn_verbos": 173, "dnnl_verbos": 173, "mkldnn_werror": 173, "dnnl_werror": 173, "find_packag": 173, "target_link_librari": 173, "project_app": 173, "Or": 173, "inclus": 173, "add_subdirectori": 173, "dnnl_dir": 173, "include_directori": 173, "thing": [173, 411, 437], "recompil": 173, "patch": [173, 335, 592], "region": [174, 323, 543], "consecut": [174, 323, 543], "granular": [174, 438], "fundament": 174, "freez": 174, "hoist": 174, "loop": [174, 175, 176, 253, 394], "brgemm": [175, 176, 253, 298, 303, 342, 372, 477, 510, 601], "a_i": [175, 262], "_arg": 175, "shall": 175, "express": [175, 176, 178, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 413, 416, 417, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "pack_typ": [175, 176, 253, 298, 343, 345, 372, 394, 586, 587], "get_b_pack_typ": [175, 176, 253, 394, 586], "no_tran": [175, 176, 241, 253, 394, 587], "copyright": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "2024": [175, 176, 253, 255, 256, 257, 264, 267, 270, 276, 281, 292, 293, 295, 296, 297, 394, 396, 407, 427, 459, 461], "2025": [175, 176, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 263, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 296, 377, 379, 381, 383, 388, 389, 390, 392, 394, 396, 397, 398, 400, 403, 407, 409, 419, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459], "corpor": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 429, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "licens": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "apach": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "law": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "agre": [175, 176, 225, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "AS": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "basi": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "warranti": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "OF": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "permiss": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 419, 421, 423, 425, 427, 429, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459, 461], "cmath": [175, 176, 242, 243, 244, 245, 249, 251, 252, 253, 257, 258, 259, 260, 263, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 296, 297, 377, 379, 381, 383, 388, 390, 392, 394, 396, 397, 398, 400, 403, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 450, 452, 454, 459, 461], "iostream": [175, 176, 242, 243, 244, 245, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 388, 390, 392, 394, 396, 397, 398, 400, 403, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 445, 447, 450, 452, 454, 456, 457, 459, 461], "example_util": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 405, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461], "brgemm_exampl": [175, 176, 253, 298, 394], "engine_stream": [175, 176, 242, 243, 244, 245, 251, 252, 253, 260, 267, 268, 269, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 296, 377, 379, 381, 383, 390, 392, 394, 400, 407, 409, 411, 419, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 450, 452, 454, 459], "k_blk": [175, 176, 253, 394], "48": [175, 176, 247, 253, 394], "printf": [175, 176, 246, 253, 254, 259, 263, 265, 385, 394, 395, 398, 403, 405], "n_call": [175, 176, 253, 394], "a_dt": [175, 176, 253, 298, 343, 394, 586], "b_dt": [175, 176, 253, 298, 343, 394, 586], "c_dt": [175, 176, 253, 298, 343, 394, 586], "d_dt": [175, 176, 253, 298, 343, 394, 586], "no_pack": [175, 176, 253, 394], "ldb": [175, 176, 253, 263, 298, 308, 341, 343, 365, 371, 394, 403, 586], "need_pack": [175, 176, 253, 394], "lda": [175, 176, 253, 263, 298, 308, 341, 343, 365, 371, 394, 403, 586], "n_block": [175, 176, 253, 394], "ldc": [175, 176, 253, 263, 298, 308, 341, 343, 365, 371, 394, 403, 586], "ldd": [175, 176, 253, 298, 343, 394, 586], "batch_siz": [175, 176, 253, 298, 343, 394, 586], "a_dim": [175, 176, 253, 280, 394, 436], "b_dim": [175, 176, 253, 280, 394, 436], "c_dim": [175, 176, 253, 280, 394, 436], "d_dim": [175, 176, 253, 394], "binary_add_dim": [175, 176, 253, 394], "b_scales_dim": [175, 176, 253, 394], "a_user_data": [175, 176, 253, 394], "b_user_data": [175, 176, 253, 394], "binary_add_user_data": [175, 176, 253, 394], "b_scales_user_data": [175, 176, 253, 394], "d_data": [175, 176, 253, 394], "d_user_data": [175, 176, 253, 394], "sign_gen": [175, 176, 253, 394], "val": [175, 176, 253, 394], "holder": [175, 176, 253, 394], "a_f32_md": [175, 176, 253, 394], "b_f32_md": [175, 176, 253, 394], "binary_add_f32_md": [175, 176, 253, 394], "b_scales_f32_md": [175, 176, 253, 394], "d_f32_md": [175, 176, 253, 394], "a_f32_mem": [175, 176, 253, 297, 298, 394, 461], "b_f32_mem": [175, 176, 253, 273, 297, 394, 421, 461], "binary_add_f32_mem": [175, 176, 253, 394], "b_scales_f32_mem": [175, 176, 253, 394], "d_f32_mem": [175, 176, 253, 394], "a_md": [175, 176, 253, 259, 263, 273, 280, 297, 394, 398, 403, 421, 436, 461], "b_md": [175, 176, 253, 259, 263, 273, 280, 297, 394, 398, 403, 421, 436, 461], "binary_add_md": [175, 176, 253, 394], "b_scales_md": [175, 176, 253, 394], "c_md": [175, 176, 253, 259, 263, 273, 280, 297, 394, 398, 403, 421, 436, 461], "d_md": [175, 176, 253, 394], "a_mem": [175, 176, 253, 280, 394, 436], "b_mem": [175, 176, 253, 280, 394, 436], "binary_add_mem": [175, 176, 253, 394], "b_scales_mem": [175, 176, 253, 394], "c_mem": [175, 176, 253, 280, 394, 436], "d_mem": [175, 176, 253, 394], "a_ptr": [175, 176, 253, 298, 343, 394], "reinterpret_cast": [175, 176, 253, 394], "b_ptr": [175, 176, 253, 298, 343, 394], "a_dt_siz": [175, 176, 253, 394], "data_type_s": [175, 176, 253, 394, 541], "b_dt_size": [175, 176, 253, 394], "set_add_c": [175, 176, 253, 394, 586], "c_ptr": [175, 176, 253, 298, 343, 394], "brgemm_op": [175, 176, 253, 394], "brg": [175, 176, 178, 253, 394], "minu": [175, 176, 253, 394], "brg_po": [175, 176, 253, 394], "allow_empti": [175, 176, 253, 394, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591], "var": [175, 176, 253, 394], "ok": [175, 176, 253, 259, 263, 394, 398, 403], "set_b_scal": [175, 176, 253, 394, 585, 586], "servic": [175, 176, 253, 303, 309, 394], "scratchpad_s": [175, 176, 253, 394], "get_scratchpad_s": [175, 176, 253, 394, 586], "b_block": [175, 176, 253, 394], "b_base_ptr": [175, 176, 253, 394], "blocked_b_s": [175, 176, 253, 394], "vnni": [175, 176, 253, 394], "bfloat16_t": [175, 176, 253, 394], "incorpor": [175, 176, 253, 394, 438], "pack_b": [175, 176, 253, 394], "in_pack_typ": [175, 176, 253, 298, 343, 394, 587], "in_ld": [175, 176, 253, 298, 343, 394, 587], "out_ld": [175, 176, 253, 298, 343, 394, 587], "in_dt": [175, 176, 253, 298, 343, 394, 587], "out_dt": [175, 176, 253, 298, 343, 394, 587], "a_b_offset": [175, 176, 253, 298, 343, 394, 586], "a_offset_i": [175, 176, 253, 394], "b_offset_i": [175, 176, 253, 394], "make_pair": [175, 176, 253, 394], "set_hw_context": [175, 176, 253, 394, 586], "a_b_po_offset": [175, 176, 253, 394], "a_offset_po": [175, 176, 253, 394], "b_offset_po": [175, 176, 253, 394], "emplace_back": [175, 176, 251, 253, 291, 390, 394, 454], "put": [175, 176, 249, 250, 253, 324, 369, 388, 389, 394], "sit": [175, 176, 253, 394], "bin_po_ptr": [175, 176, 253, 394], "push_back": [175, 176, 247, 249, 250, 253, 261, 262, 386, 388, 389, 394, 401, 402], "attr_param": [175, 176, 253, 298, 342, 343, 345, 372, 394, 510, 586], "set_post_ops_arg": [175, 176, 253, 394, 585], "is_execute_postops_valid": [175, 176, 253, 394, 586], "release_hw_context": [175, 176, 253, 394, 586], "clean": [175, 176, 246, 253, 254, 265, 385, 394, 395, 405, 438], "delet": [175, 176, 253, 394, 510], "verif": [175, 176, 253, 394], "uncondit": [175, 176, 253, 394], "user_d_mem": [175, 176, 253, 394], "saniti": [175, 176, 253, 269, 273, 394, 411, 421], "pop": [175, 176, 253, 394], "to_throw": [175, 176, 253, 394], "fabsf": [175, 176, 253, 394], "19e": [175, 176, 253, 394], "12g": [175, 176, 253, 394], "runtime_error": [175, 176, 207, 235, 253, 257, 258, 335, 394, 396, 397], "argc": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 407, 409, 411, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461], "char": [175, 176, 225, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 308, 335, 341, 357, 365, 371, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 498, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591, 592, 593], "argv": [175, 176, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 377, 379, 381, 383, 385, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 403, 407, 409, 411, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461], "handle_example_error": [175, 176, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 377, 379, 381, 383, 388, 389, 390, 392, 394, 396, 397, 398, 400, 403, 407, 409, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 459, 461], "pack32": [176, 241], "analyz": 177, "facilit": 177, "articl": [177, 438], "devot": 177, "multidimension": 177, "interchang": 177, "focu": 177, "phase": [177, 305, 549], "simpler": 177, "chw": 177, "displac": 177, "jump": 177, "plane": 177, "offset_nchw": 177, "adjac": 177, "border": 177, "contrari": [177, 398, 412, 456], "pixel": [177, 269, 411], "bvlc": 177, "caff": 177, "dnnl_format_tag_t": [177, 211, 246, 254, 298, 323, 365, 385, 395, 541], "quit": [177, 263, 269, 403, 411], "offset_nhwc": 177, "hwc": 177, "wc": 177, "bmp": 177, "color": 177, "24bit": 177, "recognit": 177, "outer": [177, 194], "offset_chwn": 177, "hwn": 177, "wn": 177, "dnnl_chwn": [177, 194], "artifici": 177, "disjoint": 177, "trivial": [177, 179, 548], "tip": 177, "stride_n": [177, 269, 411], "stride_c": [177, 269, 411], "stride_h": [177, 269, 411], "stride_w": [177, 269, 411], "dnnl_dims_t": [177, 194, 225, 246, 254, 265, 298, 305, 311, 312, 313, 323, 325, 355, 385, 395, 405, 501, 541], "dnnl_memory_desc_init_by_strid": 177, "dnnl_memory_desc_create_with_strid": [177, 298, 323], "behalf": 177, "great": 177, "nchw8c": [177, 211], "guess": [177, 398], "offset_nchw8c": 177, "slice": 177, "uppercas": 177, "distinguish": 177, "8c": 177, "dnnl_memory_desc_create_with_tag": [177, 194, 246, 254, 265, 298, 323, 385, 395, 405], "dnnl_nchw8c": [177, 194, 211], "ptrdiff_t": 177, "inner_nblk": 177, "inner_idx": [177, 224], "1st": [177, 194, 211, 323], "0st": [177, 323], "3rd": [177, 194], "inner_blk": [177, 224], "q_stride": 177, "q_inner_nblk": 177, "q_inner_idx": 177, "q_inner_blk": 177, "dnnl_memory_desc_queri": [177, 298, 323], "dnnl_query_strid": [177, 224, 225, 323], "dnnl_query_inner_nblk": 177, "dnnl_query_inner_idx": [177, 224, 225, 323], "dnnl_query_inner_blk": [177, 224, 225, 323], "memcmp": 177, "dnnl_max_ndim": [177, 298, 312], "tail": 177, "somehow": 177, "came": 177, "div_up": 177, "price": 177, "neglig": [177, 178, 438], "d0": [177, 179], "dnnl_memory_desc_get_s": [177, 298, 323], "phys_siz": 177, "eltwise_op": [177, 305, 549], "block_siz": 177, "c_pad": 177, "expect_stride_n": 177, "expect_stride_c": 177, "expect_stride_h": 177, "expect_stride_w": 177, "expect_stride_8c": 177, "expect_tru": 177, "get_padded_dim": [177, 543], "get_inner_nblk": [177, 543], "get_inner_idx": [177, 543], "get_inner_blk": [177, 543], "messag": [178, 259, 263, 398, 403, 411, 456, 463, 498, 593], "profile_exec": [178, 438], "onednn_verbose_timestamp": 178, "rel": 178, "gemm_api": 178, "legaci": 178, "dnnl_set_verbos": [178, 298, 335], "face": 178, "insight": 178, "256x256": 178, "25x256": 178, "v0": [178, 437, 438], "6afab8e57f65a8995685d97ba6f80fa6c24b87a0": 178, "dnnl_backend": 178, "memory_descriptor": 178, "problem_desc": 178, "exec_tim": 178, "partition_id": 178, "partition_kind": 178, "op_nam": 178, "144": 178, "break": [178, 280, 436], "spent": [178, 398], "tune": [178, 438], "led": 178, "breviti": [178, 259, 398], "src_u8": 178, "f0": [178, 437, 438], "brgemm_matmul": 178, "did": 178, "ic16ih7oc16oh7kh5ph2n": 178, "wip": 178, "1693533460193": 178, "346924": 178, "abcd16b": [178, 211, 438], "abcd16b16a": [178, 211], "bia_f32": 178, "mb2_ic16oc16_ih7oh7kh5sh1dh0ph2_iw7ow7kw5sw1dw0pw2": 178, "709961": 178, "1693533460194": 178, "199951": 178, "0161133": 178, "1693533460228": 178, "559082": 178, "16x16x5x5": 178, "724854": 178, "1693533460229": 178, "437012": 178, "481": 178, "1693533460259": 178, "165039": 178, "blk": 178, "2x16x7x7": 178, "349854": 178, "586914": 178, "604": 178, "1693533460272": 178, "332031": 178, "0358887": 178, "416992": 178, "052002": 178, "561035": 178, "0878906": 178, "1693533460313": 178, "719971": 178, "275146": 178, "1693533460314": 178, "072021": 178, "8389": 178, "__repro": 178, "ic16ih7oc16oh7kh5ph2nwip": 178, "comma": 178, "marker": 178, "millisecond": [178, 247, 438], "epoch": 178, "kernel_cache_hit": 178, "nested_cache_hit": 178, "cpu2gpu": [178, 266], "gpu2cpu": [178, 266], "tensor_nam": 178, "extra_flag": 178, "synchron": [178, 323, 412, 437, 456, 541], "exit": [178, 271], "wall": 178, "evenli": 179, "mandatori": [179, 343], "primitv": 179, "t0": [179, 288, 298, 449], "a0": 179, "t1": [179, 288, 298, 449], "a1": 179, "beyond": 179, "explanatori": [179, 498], "msg": [179, 298], "unavail": 179, "gnorm": 179, "fpmath": [179, 297, 316, 461, 557], "ip": 179, "miscellan": 179, "nest": 179, "pm": 179, "unsuccess": 179, "runtime_kind": 179, "d1": 179, "onednn_experimental_profil": 179, "exhaust": 179, "dnnl_common": [182, 191, 195, 237, 497, 498, 510, 579], "dnnl_accumulation_mode_strict": [182, 183, 305], "dnnl_accumulation_mode_relax": [182, 183, 305], "dnnl_accumulation_mode_ani": [182, 183, 305], "dnnl_accumulation_mode_s32": [182, 183, 305], "dnnl_accumulation_mode_f32": [182, 183, 305], "dnnl_accumulation_mode_f16": [182, 183, 305], "dnnl_common_typ": [183, 190, 192, 196, 236, 238, 592], "dnnl_alg_kind_undef": [184, 185], "dnnl_convolution_direct": [184, 185, 246, 254, 311, 385, 395], "0x1": [184, 188, 189, 202, 229], "dnnl_convolution_winograd": [184, 185, 311], "0x2": 184, "dnnl_convolution_auto": [184, 185, 311], "0x3": [184, 189], "dnnl_deconvolution_direct": [184, 185, 313], "0xa": 184, "dnnl_deconvolution_winograd": [184, 185, 313], "0xb": 184, "0x20": [184, 202], "0x100": 184, "0x1ff": 184, "0x2ff": 184, "0x3ff": 184, "dnnl_lrn_across_channel": [184, 185, 246, 254, 321, 385, 395], "0xaff": 184, "dnnl_lrn_within_channel": [184, 185, 321], "0xbff": 184, "dnnl_vanilla_rnn": [184, 185], "0x1fff": 184, "dnnl_vanilla_lstm": [184, 185], "0x2fff": 184, "dnnl_vanilla_gru": [184, 185], "0x3fff": 184, "dnnl_lbr_gru": [184, 185], "0x4fff": 184, "dnnl_vanilla_augru": [184, 185], "0x5fff": 184, "dnnl_lbr_augru": [184, 185], "0x6fff": 184, "dnnl_binary_add": [184, 185, 307], "0x1fff0": 184, "dnnl_binary_mul": [184, 185, 307], "0x1fff1": 184, "dnnl_binary_max": [184, 185, 307], "0x1fff2": 184, "dnnl_binary_min": [184, 185, 307], "0x1fff3": 184, "dnnl_binary_div": [184, 185, 307], "0x1fff4": 184, "dnnl_binary_sub": [184, 185, 307], "0x1fff5": 184, "dnnl_binary_g": [184, 185, 307], "0x1fff6": 184, "dnnl_binary_gt": [184, 185, 307], "0x1fff7": 184, "dnnl_binary_l": [184, 185, 307], "0x1fff8": 184, "dnnl_binary_lt": [184, 185, 307], "0x1fff9": 184, "dnnl_binary_eq": [184, 185, 307], "0x1fffa": 184, "dnnl_binary_n": [184, 185, 307], "0x1fffb": 184, "dnnl_binary_select": [184, 185], "0x1fffc": 184, "dnnl_resampling_nearest": [184, 185, 333], "0x2fff0": 184, "dnnl_resampling_linear": [184, 185, 333], "0x2fff1": 184, "dnnl_reduction_max": [184, 185, 331, 562], "dnnl_reduction_min": [184, 185, 331, 562], "dnnl_reduction_sum": [184, 185, 331, 562], "dnnl_reduction_mul": [184, 185, 331, 562], "dnnl_reduction_mean": [184, 185, 331, 562], "dnnl_reduction_norm_lp_max": [184, 185, 331, 562], "dnnl_reduction_norm_lp_sum": [184, 185, 331, 562], "dnnl_reduction_norm_lp_power_p_max": [184, 185, 331, 562], "dnnl_reduction_norm_lp_power_p_sum": [184, 185, 331, 562], "dnnl_softmax_accur": [184, 185, 337], "0x30000": 184, "dnnl_softmax_log": [184, 185, 337], "hyperbol": [184, 185], "tangent": [184, 185], "cumul": [184, 438], "gaussian": 184, "modif": 184, "w_c": [184, 185], "x_t": [184, 185], "c_x": [184, 185], "u_c": [184, 185], "c_h": [184, 185], "bias": [184, 288, 449], "augru": [184, 185, 334, 376, 378, 467, 468, 469, 470, 522, 523, 524, 525, 569], "neighbor": [184, 185, 333], "pth": 184, "deconvolution_direct": [185, 267, 407, 489, 491], "deconvolution_winograd": [185, 489, 491], "eltwise_elu": 185, "eltwise_squar": 185, "eltwise_ab": 185, "eltwise_sqrt": 185, "eltwise_swish": 185, "eltwise_soft_relu": 185, "eltwise_mish": 185, "eltwise_logist": [185, 589, 591], "eltwise_exp": 185, "eltwise_gelu_tanh": 185, "eltwise_gelu_erf": 185, "eltwise_log": 185, "eltwise_clip": 185, "eltwise_clip_v2": 185, "eltwise_pow": 185, "eltwise_round": 185, "eltwise_hardswish": 185, "eltwise_hardsigmoid": 185, "eltwise_relu_use_dst_for_bwd": 185, "eltwise_tanh_use_dst_for_bwd": 185, "eltwise_elu_use_dst_for_bwd": 185, "eltwise_sqrt_use_dst_for_bwd": 185, "eltwise_logistic_use_dst_for_bwd": 185, "eltwise_exp_use_dst_for_bwd": 185, "eltwise_clip_v2_use_dst_for_bwd": 185, "lrn_across_channel": [185, 247, 249, 250, 277, 388, 389, 430, 531, 533], "lrn_within_channel": [185, 531, 533], "pooling_avg_include_pad": [185, 545, 547], "pooling_avg_exclude_pad": [185, 545, 547], "vanilla_rnn": 185, "vanilla_lstm": 185, "vanilla_gru": 185, "lbr_gru": [185, 427], "vanilla_augru": 185, "lbr_augru": 185, "binary_mul": [185, 244, 245, 381, 383], "binary_max": 185, "binary_min": 185, "binary_div": [185, 245, 383], "binary_sub": [185, 245, 383], "binary_g": 185, "binary_gt": 185, "binary_l": 185, "binary_lt": 185, "binary_eq": 185, "binary_n": 185, "binary_select": 185, "resampling_nearest": [185, 566, 568], "resampling_linear": [185, 287, 447, 566, 568], "reduction_max": 185, "reduction_min": 185, "reduction_sum": [185, 285, 443], "reduction_mul": 185, "reduction_mean": 185, "reduction_norm_lp_max": 185, "reduction_norm_lp_sum": 185, "reduction_norm_lp_power_p_max": 185, "reduction_norm_lp_power_p_sum": 185, "softmax_accur": [185, 290, 452, 575, 577], "softmax_log": [185, 575, 577], "rectifi": [185, 314, 412, 456], "linar": 185, "vanilla": [185, 296, 334, 460, 588, 589, 590, 591], "lrb": 185, "norm_lp_max": 185, "norm_lp_sum": 185, "norm_lp_power_p_max": 185, "norm_lp_power_p_sum": 185, "isa_default": [186, 335], "dnnl_cpu_isa_default": [186, 189, 335], "dnnl_cpu_isa_sse41": [186, 189], "dnnl_cpu_isa_avx": [186, 189], "dnnl_cpu_isa_avx2": [186, 189], "dnnl_cpu_isa_avx2_vnni": [186, 189], "dnnl_cpu_isa_avx2_vnni_2": [186, 189], "dnnl_cpu_isa_avx512_cor": [186, 189], "dnnl_cpu_isa_avx512_core_vnni": [186, 189], "dnnl_cpu_isa_avx512_core_bf16": [186, 189], "dnnl_cpu_isa_avx10_1_512": [186, 189], "dnnl_cpu_isa_avx512_core_fp16": [186, 189], "dnnl_cpu_isa_avx10_1_512_amx": [186, 189], "dnnl_cpu_isa_avx512_core_amx": [186, 189], "dnnl_cpu_isa_avx10_1_512_amx_fp16": [186, 189], "dnnl_cpu_isa_avx512_core_amx_fp16": [186, 189], "dnnl_cpu_isa_avx10_2_512": [186, 189], "dnnl_cpu_isa_avx10_2_512_amx_2": [186, 189], "dnnl_cpu_isa_no_hint": [187, 188, 335], "dnnl_cpu_isa_prefer_ymm": [187, 188], "exclus": [187, 188, 323, 541], "0x0": [188, 189, 229], "0x7": 189, "0xf": 189, "0x1f": 189, "0x27": 189, "0x67": 189, "0xe7": 189, "0x1ef": 189, "0xfef": 189, "0x1fef": 189, "0x201ff": 189, "0x22fff": 189, "dnnl_data_type_undef": [190, 198, 209], "dnnl_f16": [190, 198, 209], "dnnl_bf16": [190, 198, 209], "dnnl_s32": [190, 198, 209], "dnnl_u8": [190, 198, 209], "dnnl_f64": [190, 209], "dnnl_boolean": [190, 198], "dnnl_f8_e5m2": [190, 198, 209], "dnnl_f8_e4m3": [190, 198, 209], "dnnl_s4": [190, 198, 209], "dnnl_u4": [190, 198, 209], "dnnl_e8m0": [190, 209], "dnnl_f4_e2m1": [190, 209], "dnnl_f4_e3m0": [190, 209], "dnnl_data_type_max": 190, "0x7fff": [190, 193, 219, 221, 225, 238], "compliant": [190, 209], "dnnl_any_engin": [191, 192], "dnnl_cpu": [191, 192, 254, 265, 395, 405], "dnnl_gpu": [191, 192, 265, 405], "dnnl_format_kind_undef": [193, 210, 311, 313, 318, 320, 322], "dnnl_format_kind_ani": [193, 210, 307, 311, 313, 318, 323, 326, 331, 333, 334], "dnnl_format_kind_spars": [193, 210], "dnnl_format_kind_max": 193, "dnnl_format_tag_undef": [194, 211], "dnnl_abcdef": [194, 211], "dnnl_abcdefg": [194, 211], "dnnl_abcdefgh": [194, 211], "dnnl_abcdefghi": [194, 211], "dnnl_abcdefghij": [194, 211], "dnnl_abcdefghijk": [194, 211], "dnnl_abcdefghijkl": [194, 211], "dnnl_ba": [194, 211, 323], "dnnl_bca": [194, 211], "dnnl_cab": [194, 211], "dnnl_cba": [194, 211], "dnnl_abdc": [194, 211], "dnnl_acbd": [194, 211], "dnnl_adbc": [194, 211], "dnnl_adcb": [194, 211], "dnnl_bacd": [194, 211], "dnnl_bcda": [194, 211], "dnnl_cdab": [194, 211], "dnnl_cdba": [194, 211], "dnnl_dcab": [194, 211], "dnnl_abdec": [194, 211], "dnnl_adecb": [194, 211], "dnnl_bcdea": [194, 211], "dnnl_cdeab": [194, 211], "dnnl_cdeba": [194, 211], "dnnl_decab": [194, 211], "dnnl_abcdf": [194, 211], "dnnl_abdefc": [194, 211], "dnnl_abdfc": [194, 211], "dnnl_acbdef": [194, 211], "dnnl_adefcb": [194, 211], "dnnl_defcab": [194, 211], "dnnl_abcdegf": [194, 211], "dnnl_abcdefhg": [194, 211], "dnnl_abcdefgih": [194, 211], "dnnl_abcdefghji": [194, 211], "dnnl_abcdefghikj": [194, 211], "dnnl_abcdefghijlk": [194, 211], "dnnl_abc16a": [194, 211], "dnnl_abc16a16b": [194, 211], "dnnl_abc32a32b": [194, 211], "dnnl_abc4a4b": [194, 211], "dnnl_abc16b": [194, 211], "dnnl_abc16b16a": [194, 211], "dnnl_abc4a": [194, 211], "dnnl_abc32b": [194, 211], "dnnl_abc4b": [194, 211], "dnnl_abc4b16a4b": [194, 211], "dnnl_abc2b8a4b": [194, 211], "dnnl_abc16b16a4b": [194, 211], "dnnl_abc16b16a2b": [194, 211], "dnnl_abc4b4a": [194, 211], "dnnl_abc8a16b2a": [194, 211], "dnnl_abc8a8b": [194, 211], "dnnl_abc8a4b": [194, 211], "dnnl_abc8b": [194, 211], "dnnl_abc8b16a2b": [194, 211], "dnnl_bac8a16b2a": [194, 211], "dnnl_abc8b8a": [194, 211], "dnnl_abcd16a": [194, 211], "dnnl_abcd8a": [194, 211], "dnnl_abcd16a16b": [194, 211], "dnnl_abcd32a": [194, 211], "dnnl_abcd32a32b": [194, 211], "dnnl_abcd16b": [194, 211], "dnnl_abcd16b16a": [194, 211], "dnnl_abcd16b16c": [194, 211], "dnnl_abcd16c16b": [194, 211], "dnnl_abcd4a": [194, 211], "dnnl_abcd32b": [194, 211], "dnnl_abcd4b": [194, 211], "dnnl_abcd4b16a4b": [194, 211], "dnnl_abcd16b16a4b": [194, 211], "dnnl_abcd16b16a2b": [194, 211], "dnnl_abcd4b4a": [194, 211], "dnnl_abcd4a4b": [194, 211], "dnnl_abcd2c4b2c": [194, 211], "dnnl_abcd4b8c2b": [194, 211], "dnnl_abcd4c16b4c": [194, 211], "dnnl_abcd2c8b4c": [194, 211], "dnnl_abcd16c16b4c": [194, 211], "dnnl_abcd16c16b2c": [194, 211], "dnnl_abcd4c4b": [194, 211], "dnnl_abcd4b4c": [194, 211], "dnnl_abcd8a16b2a": [194, 211], "dnnl_abcd2b8a4b": [194, 211], "dnnl_abcd8a8b": [194, 211], "dnnl_abcd8a4b": [194, 211], "dnnl_abcd8b": [194, 211], "dnnl_abcd4c8b2c": [194, 211], "dnnl_abcd8b16a2b": [194, 211], "dnnl_abcd8b16c2b": [194, 211], "dnnl_bacd8a16b2a": [194, 211], "dnnl_abcd8b8a": [194, 211], "dnnl_abcd8b8c": [194, 211], "dnnl_abcd8b4c": [194, 211], "dnnl_abcd8c16b2c": [194, 211], "dnnl_abcde8a16b2a": [194, 211], "dnnl_acbd8b16c2b": [194, 211], "dnnl_abcd8c8b": [194, 211], "dnnl_abcde16a": [194, 211], "dnnl_abcde32a": [194, 211], "dnnl_abcde16a16b": [194, 211], "dnnl_bacde8a16b2a": [194, 211], "dnnl_abcd2b4c2b": [194, 211], "dnnl_abcde4b16a4b": [194, 211], "dnnl_abcde2b8a4b": [194, 211], "dnnl_abcde16b": [194, 211], "dnnl_abcde16b16a": [194, 211], "dnnl_abcde16b16c": [194, 211], "dnnl_abcde16c16b": [194, 211], "dnnl_abcde2c8b4c": [194, 211], "dnnl_abcde4a": [194, 211], "dnnl_abcde32b": [194, 211], "dnnl_abcde4b": [194, 211], "dnnl_abcde4b4a": [194, 211], "dnnl_abcde4a4b": [194, 211], "dnnl_abcde4b4c": [194, 211], "dnnl_abcde2c4b2c": [194, 211], "dnnl_abcde4b8c2b": [194, 211], "dnnl_abcde4c16b4c": [194, 211], "dnnl_abcde16c16b4c": [194, 211], "dnnl_abcde16c16b2c": [194, 211], "dnnl_abcde4c4b": [194, 211], "dnnl_abcde8a": [194, 211], "dnnl_abcde8a8b": [194, 211], "dnnl_abcde8a4b": [194, 211], "dnnl_bacde16b16a": [194, 211], "dnnl_abcde8b": [194, 211], "dnnl_abcde8b16a2b": [194, 211], "dnnl_abcde8b16c2b": [194, 211], "dnnl_abcde4c8b2c": [194, 211], "dnnl_acbde8b16c2b": [194, 211], "dnnl_abcde8b8a": [194, 211], "dnnl_abcde32a32b": [194, 211], "dnnl_abcde8b8c": [194, 211], "dnnl_abcde8b4c": [194, 211], "dnnl_abc4a8b8a4b": [194, 211], "dnnl_abcd4a8b8a4b": [194, 211], "dnnl_abcde4a8b8a4b": [194, 211], "dnnl_bac4b8a8b4a": [194, 211], "dnnl_bacd4b8a8b4a": [194, 211], "dnnl_bacde4b8a8b4a": [194, 211], "dnnl_abcd2a8b8a2b": [194, 211], "dnnl_abcd4b8c8b4c": [194, 211], "dnnl_abcde4b8c8b4c": [194, 211], "dnnl_abcde2b8c8b2c": [194, 211], "dnnl_abcde8c16b2c": [194, 211], "dnnl_abcde8c8b": [194, 211], "dnnl_abcde2b4c2b": [194, 211], "dnnl_abcdef16b": [194, 211], "dnnl_abcdef16b16c": [194, 211], "dnnl_abcdef16c16b": [194, 211], "dnnl_abcdef4c16b4c": [194, 211], "dnnl_abcdef2c8b4c": [194, 211], "dnnl_abcdef4c8b2c": [194, 211], "dnnl_abcdef2b4c2b": [194, 211], "dnnl_abcdef4b": [194, 211], "dnnl_abcdef4c4b": [194, 211], "dnnl_abcdef4b4c": [194, 211], "dnnl_abcdef2c4b2c": [194, 211], "dnnl_abcdef4b8c2b": [194, 211], "dnnl_abcdef8b8c": [194, 211], "dnnl_abcdef8b4c": [194, 211], "dnnl_abcdef8c16b2c": [194, 211], "dnnl_abcdef4b8c8b4c": [194, 211], "dnnl_abcdef8b16c2b": [194, 211], "dnnl_acbdef8b16c2b": [194, 211], "dnnl_abcdef8c8b": [194, 211], "dnnl_abdc16b": [194, 211], "dnnl_abdc16b2c": [194, 211], "dnnl_abdc16b4c": [194, 211], "dnnl_abdc4b": [194, 211], "dnnl_abdc8b": [194, 211], "dnnl_abdec16b": [194, 211], "dnnl_abdec16b2c": [194, 211], "dnnl_abdec16b4c": [194, 211], "dnnl_abdec32b": [194, 211], "dnnl_abdec4b": [194, 211], "dnnl_abdec8b": [194, 211], "dnnl_abdefc16b": [194, 211], "dnnl_abdefc16b2c": [194, 211], "dnnl_acbdef16c16b": [194, 211], "dnnl_abdefc4b": [194, 211], "dnnl_abdefc8b": [194, 211], "dnnl_abcdef16a": [194, 211], "dnnl_abcdef32a": [194, 211], "dnnl_abedc16b": [194, 211], "dnnl_acb16a": [194, 211], "dnnl_acb16a2b": [194, 211], "dnnl_acb16a4b": [194, 211], "dnnl_acb4a": [194, 211], "dnnl_acb8a": [194, 211], "dnnl_acbd16b16c": [194, 211], "dnnl_acbd16c16b": [194, 211], "dnnl_acbde16b16c": [194, 211], "dnnl_acbde16c16b": [194, 211], "dnnl_acdb16a": [194, 211], "dnnl_acdb16a2b": [194, 211], "dnnl_acdb16a4b": [194, 211], "dnnl_acdb32a": [194, 211], "dnnl_acdb4a": [194, 211], "dnnl_acdb8a": [194, 211], "dnnl_acdeb16a": [194, 211], "dnnl_acdeb16a2b": [194, 211], "dnnl_acdeb4a": [194, 211], "dnnl_acdeb8a": [194, 211], "dnnl_adcb16a": [194, 211], "dnnl_bac16a16b": [194, 211], "dnnl_bac16b16a": [194, 211], "dnnl_bacd16a16b": [194, 211], "dnnl_bacd16b16a": [194, 211], "dnnl_acbd4c8b8c4b": [194, 211], "dnnl_acbde4c8b8c4b": [194, 211], "dnnl_acbdef4c8b8c4b": [194, 211], "dnnl_bacde16a16b": [194, 211], "dnnl_acbdef16b16c": [194, 211], "dnnl_abc16b32a": [194, 211], "dnnl_abc16b64a": [194, 211], "dnnl_abc4b32a4b": [194, 211], "dnnl_abc4b64a4b": [194, 211], "dnnl_abc8b32a2b": [194, 211], "dnnl_abc8b64a2b": [194, 211], "dnnl_ab16b16a": [194, 211], "dnnl_ab16b32a": [194, 211], "dnnl_ab16b64a": [194, 211], "dnnl_ab8b16a2b": [194, 211], "dnnl_ab8b32a2b": [194, 211], "dnnl_ab8b64a2b": [194, 211], "dnnl_ab4b16a4b": [194, 211], "dnnl_ab4b32a4b": [194, 211], "dnnl_ab4b64a4b": [194, 211], "dnnl_ab16b16a4b": [194, 211], "dnnl_abcd16b32a": [194, 211], "dnnl_abcd16b64a": [194, 211], "dnnl_abcd4b32a4b": [194, 211], "dnnl_abcd4b64a4b": [194, 211], "dnnl_abcd8b32a2b": [194, 211], "dnnl_abcd8b64a2b": [194, 211], "dnnl_abcde4b32a4b": [194, 211], "dnnl_abcde4b64a4b": [194, 211], "dnnl_abcde16b16a4b": [194, 211], "dnnl_abcde16b16a2b": [194, 211], "dnnl_abcde16b32a": [194, 211], "dnnl_abcde16b64a": [194, 211], "dnnl_abcde8b32a2b": [194, 211], "dnnl_abcde8b64a2b": [194, 211], "dnnl_abcdef16c16b4c": [194, 211], "dnnl_abcdef16c16b2c": [194, 211], "dnnl_ab32a32b8a4b": [194, 211], "dnnl_ab8a4b": [194, 211], "dnnl_ab32a32b8a2b": [194, 211], "dnnl_ab8a2b": [194, 211], "dnnl_abdc32d": [194, 211], "dnnl_abdc32d4c": [194, 211], "dnnl_abdec32": [194, 211], "dnnl_abdec32e2c": [194, 211], "dnnl_abdec32e4c": [194, 211], "dnnl_abdefc16b4c": [194, 211], "dnnl_acdeb16a4b": [194, 211], "dnnl_abcd16a16b2a": [194, 211], "dnnl_abc16a16b2a": [194, 211], "dnnl_abcd16b16c2b": [194, 211], "dnnl_abcde16b16c2b": [194, 211], "dnnl_acb32a": [194, 211], "dnnl_acb32a2b": [194, 211], "dnnl_acb32a4b": [194, 211], "dnnl_acb48a": [194, 211], "dnnl_acb48a2b": [194, 211], "dnnl_acb48a4b": [194, 211], "dnnl_acb64a": [194, 211], "dnnl_acb64a2b": [194, 211], "dnnl_acb64a4b": [194, 211], "dnnl_cba2b": [194, 211], "dnnl_cba4b": [194, 211], "dnnl_abdc32b": [194, 211], "dnnl_abdc32b2c": [194, 211], "dnnl_abdc32b4c": [194, 211], "dnnl_abdc48b": [194, 211], "dnnl_abdc48b2c": [194, 211], "dnnl_abdc48b4c": [194, 211], "dnnl_abdc64b": [194, 211], "dnnl_abdc64b2c": [194, 211], "dnnl_abdc64b4c": [194, 211], "dnnl_adcb2c": [194, 211], "dnnl_adcb4c": [194, 211], "dnnl_acdb32a2b": [194, 211], "dnnl_acdb32a4b": [194, 211], "dnnl_acdb48a": [194, 211], "dnnl_acdb48a2b": [194, 211], "dnnl_acdb48a4b": [194, 211], "dnnl_acdb64a": [194, 211], "dnnl_acdb64a2b": [194, 211], "dnnl_acdb64a4b": [194, 211], "dnnl_cdba2b": [194, 211], "dnnl_cdba4b": [194, 211], "dnnl_abdec32b2c": [194, 211], "dnnl_abdec32b4c": [194, 211], "dnnl_abdec48b": [194, 211], "dnnl_abdec48b2c": [194, 211], "dnnl_abdec48b4c": [194, 211], "dnnl_abdec64b": [194, 211], "dnnl_abdec64b2c": [194, 211], "dnnl_abdec64b4c": [194, 211], "dnnl_adecb2c": [194, 211], "dnnl_adecb4c": [194, 211], "dnnl_acdeb32a": [194, 211], "dnnl_acdeb32a2b": [194, 211], "dnnl_acdeb32a4b": [194, 211], "dnnl_acdeb48a": [194, 211], "dnnl_acdeb48a2b": [194, 211], "dnnl_acdeb48a4b": [194, 211], "dnnl_acdeb64a": [194, 211], "dnnl_acdeb64a2b": [194, 211], "dnnl_acdeb64a4b": [194, 211], "dnnl_cdeba2b": [194, 211], "dnnl_cdeba4b": [194, 211], "dnnl_abdefc32b": [194, 211], "dnnl_abdefc32b2c": [194, 211], "dnnl_abdefc32b4c": [194, 211], "dnnl_abdefc48b": [194, 211], "dnnl_abdefc48b2c": [194, 211], "dnnl_abdefc48b4c": [194, 211], "dnnl_abdefc64b": [194, 211], "dnnl_abdefc64b2c": [194, 211], "dnnl_abdefc64b4c": [194, 211], "dnnl_adefcb2c": [194, 211], "dnnl_adefcb4c": [194, 211], "dnnl_ab16b32a4b": [194, 211], "dnnl_ab16b48a4b": [194, 211], "dnnl_ab16b64a4b": [194, 211], "dnnl_ab16b16a2b": [194, 211], "dnnl_ab16b32a2b": [194, 211], "dnnl_ab16b48a2b": [194, 211], "dnnl_ab16b64a2b": [194, 211], "dnnl_abc16b32a4b": [194, 211], "dnnl_abc16b48a4b": [194, 211], "dnnl_abc16b64a4b": [194, 211], "dnnl_abc16b32a2b": [194, 211], "dnnl_abc16b48a2b": [194, 211], "dnnl_abc16b64a2b": [194, 211], "dnnl_abcd16b32a4b": [194, 211], "dnnl_abcd16b48a4b": [194, 211], "dnnl_abcd16b64a4b": [194, 211], "dnnl_abcd16b32a2b": [194, 211], "dnnl_abcd16b48a2b": [194, 211], "dnnl_abcd16b64a2b": [194, 211], "dnnl_abcde16b32a4b": [194, 211], "dnnl_abcde16b48a4b": [194, 211], "dnnl_abcde16b64a4b": [194, 211], "dnnl_abcde16b32a2b": [194, 211], "dnnl_abcde16b48a2b": [194, 211], "dnnl_abcde16b64a2b": [194, 211], "dnnl_abc32a16b": [194, 211], "dnnl_abcd32a16b": [194, 211], "dnnl_abcde32a16b": [194, 211], "dnnl_ab48a16b": [194, 211], "dnnl_ab48a32b": [194, 211], "dnnl_abc40a16b": [194, 211], "dnnl_abc40a32b": [194, 211], "dnnl_abc48b16c": [194, 211], "dnnl_abc48b32c": [194, 211], "dnnl_abcd40a16b": [194, 211], "dnnl_abcd40a32b": [194, 211], "dnnl_abcd32c": [194, 211], "dnnl_abdce32c": [194, 211], "dnnl_abdce32c2": [194, 211], "dnnl_ba16a16b2a": [194, 211], "dnnl_ba16a32b2a": [194, 211], "dnnl_ba16a48b2a": [194, 211], "dnnl_ba16a64b2a": [194, 211], "dnnl_ba16a16b4a": [194, 211], "dnnl_ba16a32b4a": [194, 211], "dnnl_ba16a48b4a": [194, 211], "dnnl_ba16a64b4a": [194, 211], "dnnl_abcd8a2b": [194, 211], "dnnl_abdec16c16b2c": [194, 211], "dnnl_abdec16c16b4c": [194, 211], "dnnl_abdefc16c16b2c": [194, 211], "dnnl_acb16b16a2b": [194, 211], "dnnl_acb16b16a4b": [194, 211], "dnnl_acdb16b16a2b": [194, 211], "dnnl_acdb16b16a4b": [194, 211], "dnnl_acdeb16b16a2b": [194, 211], "dnnl_abdefc16c16b4c": [194, 211], "dnnl_acdeb16b16a4b": [194, 211], "dnnl_acb16b32a2b": [194, 211], "dnnl_acb16b32a4b": [194, 211], "dnnl_acb16b48a2b": [194, 211], "dnnl_acb16b48a4b": [194, 211], "dnnl_acb16b64a2b": [194, 211], "dnnl_acb16b64a4b": [194, 211], "dnnl_abdc16c16b2c": [194, 211], "dnnl_abdc16c16b4c": [194, 211], "dnnl_abdc16c32b2c": [194, 211], "dnnl_abdc16c32b4c": [194, 211], "dnnl_abdc16c48b2c": [194, 211], "dnnl_abdc16c48b4c": [194, 211], "dnnl_abdc16c64b2c": [194, 211], "dnnl_abdc16c64b4c": [194, 211], "dnnl_acdb16b32a2b": [194, 211], "dnnl_acdb16b32a4b": [194, 211], "dnnl_acdb16b48a2b": [194, 211], "dnnl_acdb16b48a4b": [194, 211], "dnnl_acdb16b64a2b": [194, 211], "dnnl_acdb16b64a4b": [194, 211], "dnnl_abdec16c32b2c": [194, 211], "dnnl_abdec16c32b4c": [194, 211], "dnnl_abdec16c48b2c": [194, 211], "dnnl_abdec16c48b4c": [194, 211], "dnnl_abdec16c64b2c": [194, 211], "dnnl_abdec16c64b4c": [194, 211], "dnnl_acdeb16b32a2b": [194, 211], "dnnl_acdeb16b32a4b": [194, 211], "dnnl_acdeb16b48a2b": [194, 211], "dnnl_acdeb16b48a4b": [194, 211], "dnnl_acdeb16b64a2b": [194, 211], "dnnl_acdeb16b64a4b": [194, 211], "dnnl_abdefc16c32b2c": [194, 211], "dnnl_abdefc16c32b4c": [194, 211], "dnnl_abdefc16c48b2c": [194, 211], "dnnl_abdefc16c48b4c": [194, 211], "dnnl_abdefc16c64b2c": [194, 211], "dnnl_abdefc16c64b4c": [194, 211], "dnnl_decba16a": [194, 211], "dnnl_abc4a2b": [194, 211], "dnnl_abc8a2b": [194, 211], "dnnl_abcd8b2c": [194, 211], "dnnl_abcde4a2b": [194, 211], "dnnl_abcde8a2b": [194, 211], "dnnl_abcde40a16b": [194, 211], "dnnl_abcde40a32b": [194, 211], "dnnl_abcde8b2c": [194, 211], "dnnl_abcde4a8b8a2b": [194, 211], "dnnl_abcd4a8b8a2b": [194, 211], "dnnl_abc4a8b8a2b": [194, 211], "dnnl_abcdef4b8c8b2c": [194, 211], "dnnl_abcde4b8c8b2c": [194, 211], "dnnl_abcd4b8c8b2c": [194, 211], "dnnl_bacde4b8a8b2a": [194, 211], "dnnl_bacd4b8a8b2a": [194, 211], "dnnl_bac4b8a8b2a": [194, 211], "dnnl_acbdef4c8b8c2b": [194, 211], "dnnl_acbde4c8b8c2b": [194, 211], "dnnl_acbd4c8b8c2b": [194, 211], "dnnl_abcdef8b2c": [194, 211], "dnnl_ab32a16b": [194, 211], "dnnl_ab32a32b": [194, 211], "dnnl_ba4b8a8b2a": [194, 211], "dnnl_ba4b8a8b4a": [194, 211], "dnnl_abc32b16c": [194, 211], "dnnl_abc32b32c": [194, 211], "dnnl_acb4c8b8c2b": [194, 211], "dnnl_acb4c8b8c4b": [194, 211], "dnnl_abcd4a2b": [194, 211], "dnnl_abc2b8a16b4a": [194, 211], "dnnl_abcd2b8a16b4a": [194, 211], "dnnl_abcde2b8a16b4a": [194, 211], "dnnl_abc2a8b16a4b": [194, 211], "dnnl_abc2a8b16a2b": [194, 211], "dnnl_abc2b32a8b": [194, 211], "dnnl_abcd2a8b16a4b": [194, 211], "dnnl_abcd2a8b16a2b": [194, 211], "dnnl_acbd2c8b16c2b": [194, 211], "dnnl_abcd2b32a8b": [194, 211], "dnnl_abcd2c8b16c2b": [194, 211], "dnnl_abcde2a8b16a4b": [194, 211], "dnnl_abcde2a8b16a2b": [194, 211], "dnnl_acbde2c8b16c2b": [194, 211], "dnnl_abcde2b32a8b": [194, 211], "dnnl_abc2b8c16b2c": [194, 211], "dnnl_abcd2b8c16b2c": [194, 211], "dnnl_abcde2b8c16b2c": [194, 211], "dnnl_abcdef2b8c16b2c": [194, 211], "dnnl_bacde2b8a16b4a": [194, 211], "dnnl_bacd2b8a16b4a": [194, 211], "dnnl_bac2b8a16b4a": [194, 211], "dnnl_bacde2b8a16b2a": [194, 211], "dnnl_bacd2b8a16b2a": [194, 211], "dnnl_bac2b8a16b2a": [194, 211], "dnnl_abcde2c8b16c2b": [194, 211], "dnnl_abcdef2c8b16c2b": [194, 211], "dnnl_acbdef2c8b16c2b": [194, 211], "dnnl_abcd2b8c16b4c": [194, 211], "dnnl_abcde2b8c16b4c": [194, 211], "dnnl_ba4b8a16b2a": [194, 211], "dnnl_ba4b8a16b4a": [194, 211], "dnnl_acb4c8b16c2b": [194, 211], "dnnl_acb4c8b16c4b": [194, 211], "dnnl_ba16a16b": [194, 211], "dnnl_ba16a32b": [194, 211], "dnnl_ba16a48b": [194, 211], "dnnl_ba16a64b": [194, 211], "dnnl_acb16c2b": [194, 211], "dnnl_acb16c4b": [194, 211], "dnnl_ba16b2a": [194, 211], "dnnl_ba16b4a": [194, 211], "dnnl_abc16b16c": [194, 211], "dnnl_abc16b32c": [194, 211], "dnnl_ab16a16b": [194, 211], "dnnl_ab16a32b": [194, 211], "dnnl_abcde16a16b2a": [194, 211], "dnnl_abcdef16b16c2b": [194, 211], "dnnl_acedb16a": [194, 211], "dnnl_abdfec16b": [194, 211], "dnnl_abdec64e2c": [194, 211], "dnnl_abdec64e4c": [194, 211], "dnnl_acb16b16c": [194, 211], "dnnl_acb16b32c": [194, 211], "dnnl_acb16b48c": [194, 211], "dnnl_acb16b64c": [194, 211], "dnnl_acb16b16c2b": [194, 211], "dnnl_acb16b32c2b": [194, 211], "dnnl_acb16b48c2b": [194, 211], "dnnl_acb16b64c2b": [194, 211], "dnnl_acb16b16c4b": [194, 211], "dnnl_acb16b32c4b": [194, 211], "dnnl_acb16b48c4b": [194, 211], "dnnl_acb16b64c4b": [194, 211], "dnnl_abcd4c": [194, 211], "dnnl_abcde4c": [194, 211], "dnnl_abcdef4c": [194, 211], "dnnl_abcde32c": [194, 211], "dnnl_abcdef32c": [194, 211], "dnnl_abcd16a32b": [194, 211], "dnnl_decba8a": [194, 211], "dnnl_acdefb16b32c2b": [194, 211], "dnnl_acdefb16b32c4b": [194, 211], "dnnl_acdefb16b48c2b": [194, 211], "dnnl_acdefb16b48c4b": [194, 211], "dnnl_acdefb16b64c2b": [194, 211], "dnnl_acdefb16b64c4b": [194, 211], "dnnl_bcdea16a32b2a": [194, 211], "dnnl_bcdea16a32b4a": [194, 211], "dnnl_bcdea16a48b2a": [194, 211], "dnnl_bcdea16a48b4a": [194, 211], "dnnl_bcdea16a64b2a": [194, 211], "dnnl_bcdea16a64b4a": [194, 211], "dnnl_acdefb32c": [194, 211], "dnnl_acdefb32c2b": [194, 211], "dnnl_acdefb32c4b": [194, 211], "dnnl_acdefb48c": [194, 211], "dnnl_acdefb48c2b": [194, 211], "dnnl_acdefb48c4b": [194, 211], "dnnl_acdefb64c": [194, 211], "dnnl_acdefb64c2b": [194, 211], "dnnl_acdefb64c4b": [194, 211], "dnnl_bcdea32b": [194, 211], "dnnl_bcdea32b2a": [194, 211], "dnnl_bcdea32b4a": [194, 211], "dnnl_bcdea48b": [194, 211], "dnnl_bcdea48b2a": [194, 211], "dnnl_bcdea48b4a": [194, 211], "dnnl_bcdea64b": [194, 211], "dnnl_bcdea64b2a": [194, 211], "dnnl_bcdea64b4a": [194, 211], "dnnl_bca32b": [194, 211], "dnnl_bca32b2a": [194, 211], "dnnl_bca32b4a": [194, 211], "dnnl_bca48b": [194, 211], "dnnl_bca48b2a": [194, 211], "dnnl_bca48b4a": [194, 211], "dnnl_bca64b": [194, 211], "dnnl_bca64b2a": [194, 211], "dnnl_bca64b4a": [194, 211], "dnnl_acdb32c": [194, 211], "dnnl_acdb32c2b": [194, 211], "dnnl_acdb32c4b": [194, 211], "dnnl_acdb48c": [194, 211], "dnnl_acdb48c2b": [194, 211], "dnnl_acdb48c4b": [194, 211], "dnnl_acdb64c": [194, 211], "dnnl_acdb64c2b": [194, 211], "dnnl_acdb64c4b": [194, 211], "dnnl_bca16a16b2a": [194, 211], "dnnl_bca16a16b4a": [194, 211], "dnnl_bcda16a16b2a": [194, 211], "dnnl_bcda16a16b4a": [194, 211], "dnnl_bcdea16a16b2a": [194, 211], "dnnl_bcdea16a16b4a": [194, 211], "dnnl_acdb16b16c2b": [194, 211], "dnnl_acdb16b16c4b": [194, 211], "dnnl_acdeb16b16c2b": [194, 211], "dnnl_acdeb16b16c4b": [194, 211], "dnnl_acdefb16b16c2b": [194, 211], "dnnl_acdefb16b16c4b": [194, 211], "dnnl_bca16a32b2a": [194, 211], "dnnl_bca16a32b4a": [194, 211], "dnnl_bca16a48b2a": [194, 211], "dnnl_bca16a48b4a": [194, 211], "dnnl_bca16a64b2a": [194, 211], "dnnl_bca16a64b4a": [194, 211], "dnnl_acdb16b32c2b": [194, 211], "dnnl_acdb16b32c4b": [194, 211], "dnnl_acdb16b48c2b": [194, 211], "dnnl_acdb16b48c4b": [194, 211], "dnnl_acdb16b64c2b": [194, 211], "dnnl_acdb16b64c4b": [194, 211], "dnnl_bcda16a32b2a": [194, 211], "dnnl_bcda16a32b4a": [194, 211], "dnnl_bcda16a48b2a": [194, 211], "dnnl_bcda16a48b4a": [194, 211], "dnnl_bcda16a64b2a": [194, 211], "dnnl_bcda16a64b4a": [194, 211], "dnnl_acdeb16b32c2b": [194, 211], "dnnl_acdeb16b32c4b": [194, 211], "dnnl_acdeb16b48c2b": [194, 211], "dnnl_acdeb16b48c4b": [194, 211], "dnnl_acdeb16b64c2b": [194, 211], "dnnl_acdeb16b64c4b": [194, 211], "dnnl_bca16b": [194, 211], "dnnl_bca16b2a": [194, 211], "dnnl_bca16b4a": [194, 211], "dnnl_bcda16b": [194, 211], "dnnl_bcda16b2a": [194, 211], "dnnl_bcda16b4a": [194, 211], "dnnl_bcdea16b": [194, 211], "dnnl_bcdea16b2a": [194, 211], "dnnl_bcdea16b4a": [194, 211], "dnnl_acdb16c": [194, 211], "dnnl_acdb16c2b": [194, 211], "dnnl_acdb16c4b": [194, 211], "dnnl_acdeb16c": [194, 211], "dnnl_acdeb16c2b": [194, 211], "dnnl_acdeb16c4b": [194, 211], "dnnl_acdefb16c": [194, 211], "dnnl_acdefb16c2b": [194, 211], "dnnl_acdefb16c4b": [194, 211], "dnnl_bcda32b": [194, 211], "dnnl_bcda32b2a": [194, 211], "dnnl_bcda32b4a": [194, 211], "dnnl_bcda48b": [194, 211], "dnnl_bcda48b2a": [194, 211], "dnnl_bcda48b4a": [194, 211], "dnnl_bcda64b": [194, 211], "dnnl_bcda64b2a": [194, 211], "dnnl_bcda64b4a": [194, 211], "dnnl_acdeb32c": [194, 211], "dnnl_acdeb32c2b": [194, 211], "dnnl_acdeb32c4b": [194, 211], "dnnl_acdeb48c": [194, 211], "dnnl_acdeb48c2b": [194, 211], "dnnl_acdeb48c4b": [194, 211], "dnnl_acdeb64c": [194, 211], "dnnl_acdeb64c2b": [194, 211], "dnnl_acdeb64c4b": [194, 211], "dnnl_acb24a": [194, 211], "dnnl_acdb24a": [194, 211], "dnnl_acdeb24a": [194, 211], "dnnl_abdc24b": [194, 211], "dnnl_abdec24b": [194, 211], "dnnl_abdefc24b": [194, 211], "dnnl_abdc16d": [194, 211], "dnnl_abdec16": [194, 211], "dnnl_abdce16c": [194, 211], "dnnl_acb24a2b": [194, 211], "dnnl_acdb24a2b": [194, 211], "dnnl_acdeb24a2b": [194, 211], "dnnl_abdc24b2c": [194, 211], "dnnl_abdec24b2c": [194, 211], "dnnl_abdefc24b2c": [194, 211], "dnnl_acb8a2b": [194, 211], "dnnl_acdb8a2b": [194, 211], "dnnl_acdeb8a2b": [194, 211], "dnnl_abdc8b2c": [194, 211], "dnnl_abdec8b2c": [194, 211], "dnnl_abdefc8b2c": [194, 211], "dnnl_ab8b32a": [194, 211], "dnnl_abc8b32a": [194, 211], "dnnl_abcd8b32a": [194, 211], "dnnl_abcde8b32a": [194, 211], "dnnl_ab8b24a": [194, 211], "dnnl_abc8b24a": [194, 211], "dnnl_abcd8b24a": [194, 211], "dnnl_abcde8b24a": [194, 211], "dnnl_ab8b16a": [194, 211], "dnnl_abc8b16a": [194, 211], "dnnl_abcd8b16a": [194, 211], "dnnl_abcde8b16a": [194, 211], "dnnl_ab8b8a": [194, 211], "dnnl_ab4b8a4b": [194, 211], "dnnl_ab4b24a4b": [194, 211], "dnnl_abc4b8a4b": [194, 211], "dnnl_abc4b24a4b": [194, 211], "dnnl_abcd4b8a4b": [194, 211], "dnnl_abcd4b24a4b": [194, 211], "dnnl_abcde4b8a4b": [194, 211], "dnnl_abcde4b24a4b": [194, 211], "dnnl_ab8b24a2b": [194, 211], "dnnl_abc8b24a2b": [194, 211], "dnnl_abcd8b24a2b": [194, 211], "dnnl_abcde8b24a2b": [194, 211], "dnnl_ab8b8a2b": [194, 211], "dnnl_abc8b8a2b": [194, 211], "dnnl_abcd8b8a2b": [194, 211], "dnnl_abcde8b8a2b": [194, 211], "dnnl_acb24a4b": [194, 211], "dnnl_acdb24a4b": [194, 211], "dnnl_acdeb24a4b": [194, 211], "dnnl_abdc24b4c": [194, 211], "dnnl_abdec24b4c": [194, 211], "dnnl_abdefc24b4c": [194, 211], "dnnl_acb8a4b": [194, 211], "dnnl_acdb8a4b": [194, 211], "dnnl_acdeb8a4b": [194, 211], "dnnl_abdc8b4c": [194, 211], "dnnl_abdec8b4c": [194, 211], "dnnl_abdefc8b4c": [194, 211], "dnnl_bca8b": [194, 211], "dnnl_bca8b2a": [194, 211], "dnnl_bcda8b": [194, 211], "dnnl_bcda8b2a": [194, 211], "dnnl_bcdea8b": [194, 211], "dnnl_bcdea8b2a": [194, 211], "dnnl_acdb8c": [194, 211], "dnnl_acdb8c2b": [194, 211], "dnnl_acdeb8c": [194, 211], "dnnl_acdeb8c2b": [194, 211], "dnnl_acdefb8c": [194, 211], "dnnl_acdefb8c2b": [194, 211], "dnnl_bca24b": [194, 211], "dnnl_bca24b2a": [194, 211], "dnnl_bcda24b": [194, 211], "dnnl_bcda24b2a": [194, 211], "dnnl_bcdea24b": [194, 211], "dnnl_bcdea24b2a": [194, 211], "dnnl_acdb24c": [194, 211], "dnnl_acdb24c2b": [194, 211], "dnnl_acdeb24c": [194, 211], "dnnl_acdeb24c2b": [194, 211], "dnnl_acdefb24c": [194, 211], "dnnl_acdefb24c2b": [194, 211], "dnnl_bca8b4a": [194, 211], "dnnl_bcda8b4a": [194, 211], "dnnl_bcdea8b4a": [194, 211], "dnnl_acdb8c4b": [194, 211], "dnnl_acdeb8c4b": [194, 211], "dnnl_acdefb8c4b": [194, 211], "dnnl_bca24b4a": [194, 211], "dnnl_bcda24b4a": [194, 211], "dnnl_bcdea24b4a": [194, 211], "dnnl_acdb24c4b": [194, 211], "dnnl_acdeb24c4b": [194, 211], "dnnl_acdefb24c4b": [194, 211], "dnnl_ab16b48a": [194, 211], "dnnl_abc16b48a": [194, 211], "dnnl_abcd16b48a": [194, 211], "dnnl_abcde16b48a": [194, 211], "dnnl_abc16a4b": [194, 211], "dnnl_abcd16a4b": [194, 211], "dnnl_abcde16a4b": [194, 211], "dnnl_defcba16a": [194, 211], "dnnl_defcba8a": [194, 211], "dnnl_acb16b64a": [194, 211], "dnnl_acdb16b64a": [194, 211], "dnnl_acdeb16b64a": [194, 211], "dnnl_acb16b48a": [194, 211], "dnnl_acdb16b48a": [194, 211], "dnnl_acdeb16b48a": [194, 211], "dnnl_acb16b32a": [194, 211], "dnnl_acdb16b32a": [194, 211], "dnnl_acdeb16b32a": [194, 211], "dnnl_acb16b16a": [194, 211], "dnnl_acdb16b16a": [194, 211], "dnnl_acdeb16b16a": [194, 211], "dnnl_acb8b32a": [194, 211], "dnnl_acdb8b32a": [194, 211], "dnnl_acdeb8b32a": [194, 211], "dnnl_acb8b24a": [194, 211], "dnnl_acdb8b24a": [194, 211], "dnnl_acdeb8b24a": [194, 211], "dnnl_acb8b16a": [194, 211], "dnnl_acdb8b16a": [194, 211], "dnnl_acdeb8b16a": [194, 211], "dnnl_acb8b8a": [194, 211], "dnnl_acdb8b8a": [194, 211], "dnnl_acdeb8b8a": [194, 211], "dnnl_acb8b64a2b": [194, 211], "dnnl_acdb8b64a2b": [194, 211], "dnnl_acdeb8b64a2b": [194, 211], "dnnl_acb8b32a2b": [194, 211], "dnnl_acdb8b32a2b": [194, 211], "dnnl_acdeb8b32a2b": [194, 211], "dnnl_acb8b24a2b": [194, 211], "dnnl_acdb8b24a2b": [194, 211], "dnnl_acdeb8b24a2b": [194, 211], "dnnl_acb8b16a2b": [194, 211], "dnnl_acdb8b16a2b": [194, 211], "dnnl_acdeb8b16a2b": [194, 211], "dnnl_acb8b8a2b": [194, 211], "dnnl_acdb8b8a2b": [194, 211], "dnnl_acdeb8b8a2b": [194, 211], "dnnl_acb4b64a4b": [194, 211], "dnnl_acdb4b64a4b": [194, 211], "dnnl_acdeb4b64a4b": [194, 211], "dnnl_acb4b32a4b": [194, 211], "dnnl_acdb4b32a4b": [194, 211], "dnnl_acdeb4b32a4b": [194, 211], "dnnl_acb4b24a4b": [194, 211], "dnnl_acdb4b24a4b": [194, 211], "dnnl_acdeb4b24a4b": [194, 211], "dnnl_acb4b16a4b": [194, 211], "dnnl_acdb4b16a4b": [194, 211], "dnnl_acdeb4b16a4b": [194, 211], "dnnl_acb4b8a4b": [194, 211], "dnnl_acdb4b8a4b": [194, 211], "dnnl_acdeb4b8a4b": [194, 211], "dnnl_ab4a": [194, 211], "dnnl_ab8a": [194, 211], "dnnl_ba4b4a": [194, 211], "dnnl_ba8b4a": [194, 211], "dnnl_ba2a24b": [194, 211], "dnnl_acb2b24c": [194, 211], "dnnl_ba2a8b": [194, 211], "dnnl_acb2b8c": [194, 211], "dnnl_ba8a24b": [194, 211], "dnnl_acb8b24c": [194, 211], "dnnl_ba8a16b": [194, 211], "dnnl_acb8b16c": [194, 211], "dnnl_ba8a8b": [194, 211], "dnnl_acb8b8c": [194, 211], "dnnl_bcad": [194, 211], "dnnl_cabd": [194, 211], "dnnl_dabc": [194, 211], "dnnl_ab32a": [194, 211], "dnnl_acbd8b8c": [194, 211], "dnnl_acbde8b8c": [194, 211], "dnnl_bac8a8b": [194, 211], "dnnl_bacd8a8b": [194, 211], "dnnl_bacde8a8b": [194, 211], "dnnl_acbdef8b8c": [194, 211], "dnnl_abdec16e4c": [194, 211], "dnnl_abdc16d4c": [194, 211], "dnnl_ba24b8a": [194, 211], "dnnl_acb24c8b": [194, 211], "dnnl_abdc24d8c": [194, 211], "dnnl_decba4a": [194, 211], "dnnl_defcba4a": [194, 211], "dnnl_format_tag_last": [194, 211], "dnnl_cn": 194, "dnnl_owi": 194, "dnnl_woi": [194, 211], "dnnl_iwo": 194, "dnnl_hwoi": [194, 211], "dnnl_ohwi": 194, "dnnl_ihwo": 194, "dnnl_iohw": 194, "dnnl_iodhw": 194, "dnnl_dhwoi": [194, 211], "dnnl_odhwi": 194, "dnnl_idhwo": 194, "dnnl_goiw": 194, "dnnl_gowi": 194, "dnnl_wigo": 194, "dnnl_goihw": 194, "dnnl_gohwi": 194, "dnnl_hwigo": 194, "dnnl_giohw": 194, "dnnl_goidhw": 194, "dnnl_godhwi": 194, "dnnl_giodhw": 194, "dnnl_dhwigo": 194, "dnnl_ldoi16o": 194, "dnnl_ldoi32o": 194, "dnnl_ldoi16o4i": 194, "dnnl_ldoi32o4i": 194, "dnnl_ldio32i": [194, 211], "dnnl_ldgoi16o": 194, "dnnl_ldgoi16o4i": 194, "dnnl_ldgoi32o": 194, "dnnl_ldgoi32o2i": 194, "dnnl_ldgoi32o4i": 194, "dnnl_ldgoi64o2i": 194, "dnnl_ldgoi64o4i": 194, "dnnl_ldgio16i": [194, 211], "dnnl_ldgio32i": [194, 211], "dnnl_ldgio32i2o": [194, 211], "dnnl_ncdhw32c": [194, 211], "dnnl_ncdhw16c": [194, 211], "dnnl_ncdhw4c": [194, 211], "dnnl_nchw32c": [194, 211], "dnnl_nchw4c": [194, 211], "dnnl_ncw32c": [194, 211], "dnnl_ncw16c": [194, 211], "dnnl_ncw4c": [194, 211], "dnnl_ncw8c": [194, 211], "dnnl_ncw16n16c": [194, 211], "dnnl_ncdhw16n16c": [194, 211], "dnnl_nchw16n16c": [194, 211], "dnnl_ncw32n16c": [194, 211], "dnnl_nchw32n16c": [194, 211], "dnnl_nchw16n32c": [194, 211], "dnnl_ncdhw32n16c": [194, 211], "dnnl_ncw32n32c": [194, 211], "dnnl_nchw32n32c": [194, 211], "dnnl_ncdhw32n32c": [194, 211], "dnnl_oi16i16o": [194, 211], "dnnl_oi16i32o": [194, 211], "dnnl_oi16i48o": [194, 211], "dnnl_oi16i64o": [194, 211], "dnnl_oi8i8o2i": [194, 211], "dnnl_oi8i16o2i": [194, 211], "dnnl_oi8i24o2i": [194, 211], "dnnl_oi8i32o2i": [194, 211], "dnnl_oi8i64o2i": [194, 211], "dnnl_oi4i8o4i": [194, 211], "dnnl_oi4i16o4i": [194, 211], "dnnl_oi4i24o4i": [194, 211], "dnnl_oi4i32o4i": [194, 211], "dnnl_oi4i64o4i": [194, 211], "dnnl_oi16i16o4i": [194, 211], "dnnl_oi8i32o": [194, 211], "dnnl_oi8i24o": [194, 211], "dnnl_oi8i16o": [194, 211], "dnnl_oi8i8o": [194, 211], "dnnl_iow8o8i": [194, 211], "dnnl_iow16o16i": [194, 211], "dnnl_iow16i16o": [194, 211], "dnnl_oiw16i16o": [194, 211], "dnnl_owi16i16o": [194, 211], "dnnl_oiw16i32o": [194, 211], "dnnl_owi16i32o": [194, 211], "dnnl_oiw16i48o": [194, 211], "dnnl_owi16i48o": [194, 211], "dnnl_oiw16i64o": [194, 211], "dnnl_owi16i64o": [194, 211], "dnnl_oiw16o16i": [194, 211], "dnnl_oiw16o": [194, 211], "dnnl_oiw4i8o4i": [194, 211], "dnnl_owi4i8o4i": [194, 211], "dnnl_oiw4i16o4i": [194, 211], "dnnl_owi4i16o4i": [194, 211], "dnnl_oiw4i24o4i": [194, 211], "dnnl_owi4i24o4i": [194, 211], "dnnl_oiw4i32o4i": [194, 211], "dnnl_owi4i32o4i": [194, 211], "dnnl_oiw4i64o4i": [194, 211], "dnnl_owi4i64o4i": [194, 211], "dnnl_oiw2i8o4i": [194, 211], "dnnl_oiw16i16o4i": [194, 211], "dnnl_oiw16i16o2i": [194, 211], "dnnl_oiw16o16i2o": [194, 211], "dnnl_oiw4i4o": [194, 211], "dnnl_oiw4o4i": [194, 211], "dnnl_oiw4o": [194, 211], "dnnl_oiw8i8o2i": [194, 211], "dnnl_owi8i8o2i": [194, 211], "dnnl_oiw8i16o2i": [194, 211], "dnnl_owi8i16o2i": [194, 211], "dnnl_oiw8i24o2i": [194, 211], "dnnl_owi8i24o2i": [194, 211], "dnnl_oiw8i32o2i": [194, 211], "dnnl_owi8i32o2i": [194, 211], "dnnl_oiw8i64o2i": [194, 211], "dnnl_owi8i64o2i": [194, 211], "dnnl_oiw8i8o": [194, 211], "dnnl_owi8i8o": [194, 211], "dnnl_oiw8o16i2o": [194, 211], "dnnl_iow8o16i2o": [194, 211], "dnnl_oiw8o8i": [194, 211], "dnnl_oiw8o4i": [194, 211], "dnnl_owi16o": [194, 211], "dnnl_owi16o2i": [194, 211], "dnnl_owi16o4i": [194, 211], "dnnl_iwo8i": [194, 211], "dnnl_iwo8i2o": [194, 211], "dnnl_iwo8i4o": [194, 211], "dnnl_iwo16i": [194, 211], "dnnl_iwo16i2o": [194, 211], "dnnl_iwo16i4o": [194, 211], "dnnl_iwo24i": [194, 211], "dnnl_iwo24i2o": [194, 211], "dnnl_iwo24i4o": [194, 211], "dnnl_owi4o": [194, 211], "dnnl_owi8o": [194, 211], "dnnl_owi8o2i": [194, 211], "dnnl_oiw8i32o": [194, 211], "dnnl_owi8i32o": [194, 211], "dnnl_oiw8i24o": [194, 211], "dnnl_owi8i24o": [194, 211], "dnnl_oiw8i16o": [194, 211], "dnnl_owi8i16o": [194, 211], "dnnl_owi8o4i": [194, 211], "dnnl_iohw16i16o": [194, 211], "dnnl_iohw8o8i": [194, 211], "dnnl_iohw16o16i": [194, 211], "dnnl_ohwi16o": [194, 211], "dnnl_ohwi16o2i": [194, 211], "dnnl_ohwi16o4i": [194, 211], "dnnl_ihwo8i": [194, 211], "dnnl_ihwo8i2o": [194, 211], "dnnl_ihwo8i4o": [194, 211], "dnnl_ihwo16i": [194, 211], "dnnl_ihwo16i2o": [194, 211], "dnnl_ihwo16i4o": [194, 211], "dnnl_ihwo24i": [194, 211], "dnnl_ihwo24i2o": [194, 211], "dnnl_ihwo24i4o": [194, 211], "dnnl_ohwi24o": [194, 211], "dnnl_ohwi32o": [194, 211], "dnnl_ohwi4o": [194, 211], "dnnl_ohwi8o": [194, 211], "dnnl_ohwi8o2i": [194, 211], "dnnl_ohwi8o4i": [194, 211], "dnnl_oihw16i16o": [194, 211], "dnnl_ohwi16i16o": [194, 211], "dnnl_oihw16i32o": [194, 211], "dnnl_ohwi16i32o": [194, 211], "dnnl_oihw16i48o": [194, 211], "dnnl_ohwi16i48o": [194, 211], "dnnl_oihw16i64o": [194, 211], "dnnl_ohwi16i64o": [194, 211], "dnnl_oihw16o16i": [194, 211], "dnnl_oihw16o": [194, 211], "dnnl_oihw4i8o4i": [194, 211], "dnnl_ohwi4i8o4i": [194, 211], "dnnl_oihw4i16o4i": [194, 211], "dnnl_ohwi4i16o4i": [194, 211], "dnnl_oihw4i24o4i": [194, 211], "dnnl_ohwi4i24o4i": [194, 211], "dnnl_oihw4i32o4i": [194, 211], "dnnl_ohwi4i32o4i": [194, 211], "dnnl_oihw4i64o4i": [194, 211], "dnnl_ohwi4i64o4i": [194, 211], "dnnl_oihw16i16o4i": [194, 211], "dnnl_oihw16i16o2i": [194, 211], "dnnl_oihw16o16i2o": [194, 211], "dnnl_oihw4i4o": [194, 211], "dnnl_oihw4o4i": [194, 211], "dnnl_oihw4o": [194, 211], "dnnl_oihw8i8o2i": [194, 211], "dnnl_ohwi8i8o2i": [194, 211], "dnnl_oihw8i16o2i": [194, 211], "dnnl_ohwi8i16o2i": [194, 211], "dnnl_oihw8i32o2i": [194, 211], "dnnl_ohwi8i32o2i": [194, 211], "dnnl_oihw8i24o2i": [194, 211], "dnnl_ohwi8i24o2i": [194, 211], "dnnl_oihw8i64o2i": [194, 211], "dnnl_ohwi8i64o2i": [194, 211], "dnnl_oihw8i8o": [194, 211], "dnnl_ohwi8i8o": [194, 211], "dnnl_oihw8o16i2o": [194, 211], "dnnl_oihw2i8o4i": [194, 211], "dnnl_iohw8o16i2o": [194, 211], "dnnl_oihw8o8i": [194, 211], "dnnl_oihw8o4i": [194, 211], "dnnl_owhi16o": [194, 211], "dnnl_oihw8i32o": [194, 211], "dnnl_ohwi8i32o": [194, 211], "dnnl_oihw8i24o": [194, 211], "dnnl_ohwi8i24o": [194, 211], "dnnl_oihw8i16o": [194, 211], "dnnl_ohwi8i16o": [194, 211], "dnnl_odhwi16o": [194, 211], "dnnl_odhwi16o2i": [194, 211], "dnnl_odhwi16o4i": [194, 211], "dnnl_idhwo8i": [194, 211], "dnnl_idhwo8i2o": [194, 211], "dnnl_idhwo8i4o": [194, 211], "dnnl_idhwo16i": [194, 211], "dnnl_idhwo16i2o": [194, 211], "dnnl_idhwo16i4o": [194, 211], "dnnl_idhwo24i": [194, 211], "dnnl_idhwo24i2o": [194, 211], "dnnl_idhwo24i4o": [194, 211], "dnnl_odhwi4o": [194, 211], "dnnl_odhwi8o": [194, 211], "dnnl_odhwi8o2i": [194, 211], "dnnl_odhwi8o4i": [194, 211], "dnnl_odwhi16o": [194, 211], "dnnl_oidhw16i16o": [194, 211], "dnnl_odhwi16i16o": [194, 211], "dnnl_oidhw16i32o": [194, 211], "dnnl_odhwi16i32o": [194, 211], "dnnl_oidhw16i48o": [194, 211], "dnnl_odhwi16i48o": [194, 211], "dnnl_oidhw16i64o": [194, 211], "dnnl_odhwi16i64o": [194, 211], "dnnl_oidhw16o16i": [194, 211], "dnnl_oidhw16o": [194, 211], "dnnl_oidhw4i4o": [194, 211], "dnnl_oidhw4o4i": [194, 211], "dnnl_oidhw4o": [194, 211], "dnnl_oidhw8i8o2i": [194, 211], "dnnl_odhwi8i8o2i": [194, 211], "dnnl_oidhw8i16o2i": [194, 211], "dnnl_odhwi8i16o2i": [194, 211], "dnnl_oidhw8i32o2i": [194, 211], "dnnl_odhwi8i32o2i": [194, 211], "dnnl_oidhw8i24o2i": [194, 211], "dnnl_odhwi8i24o2i": [194, 211], "dnnl_oidhw8i64o2i": [194, 211], "dnnl_odhwi8i64o2i": [194, 211], "dnnl_oidhw8i8o": [194, 211], "dnnl_odhwi8i8o": [194, 211], "dnnl_oidhw8o16i2o": [194, 211], "dnnl_iodhw8o16i2o": [194, 211], "dnnl_oidhw4i8o4i": [194, 211], "dnnl_odhwi4i8o4i": [194, 211], "dnnl_oidhw4i16o4i": [194, 211], "dnnl_odhwi4i16o4i": [194, 211], "dnnl_oidhw4i24o4i": [194, 211], "dnnl_odhwi4i24o4i": [194, 211], "dnnl_oidhw4i32o4i": [194, 211], "dnnl_odhwi4i32o4i": [194, 211], "dnnl_oidhw4i64o4i": [194, 211], "dnnl_odhwi4i64o4i": [194, 211], "dnnl_oidhw16i16o4i": [194, 211], "dnnl_oidhw16i16o2i": [194, 211], "dnnl_oidhw2i8o4i": [194, 211], "dnnl_oidhw8o8i": [194, 211], "dnnl_oidhw8o4i": [194, 211], "dnnl_iodhw16i16o": [194, 211], "dnnl_oidhw4o8i8o4i": [194, 211], "dnnl_iodhw8o8i": [194, 211], "dnnl_iodhw16o16i": [194, 211], "dnnl_oidhw16o16i2o": [194, 211], "dnnl_oidhw8i32o": [194, 211], "dnnl_odhwi8i32o": [194, 211], "dnnl_oidhw8i24o": [194, 211], "dnnl_odhwi8i24o": [194, 211], "dnnl_oidhw8i16o": [194, 211], "dnnl_odhwi8i16o": [194, 211], "dnnl_goiw16g": [194, 211], "dnnl_goiw8g": [194, 211], "dnnl_goiw4g": [194, 211], "dnnl_giow8o8i": [194, 211], "dnnl_giow16o16i": [194, 211], "dnnl_giow16i16o": [194, 211], "dnnl_goiw16i16o": [194, 211], "dnnl_goiw16o16i": [194, 211], "dnnl_goiw16o": [194, 211], "dnnl_goiw4i16o4i": [194, 211], "dnnl_goiw2i8o4i": [194, 211], "dnnl_goiw16i16o4i": [194, 211], "dnnl_goiw16i16o2i": [194, 211], "dnnl_goiw16o16i2o": [194, 211], "dnnl_goiw4i4o": [194, 211], "dnnl_goiw4o4i": [194, 211], "dnnl_goiw4o": [194, 211], "dnnl_goiw8i16o2i": [194, 211], "dnnl_goiw8i8o": [194, 211], "dnnl_goiw8o16i2o": [194, 211], "dnnl_giow8o16i2o": [194, 211], "dnnl_goiw8o8i": [194, 211], "dnnl_goiw8o4i": [194, 211], "dnnl_gowi16o": [194, 211], "dnnl_gowi16o2i": [194, 211], "dnnl_gowi16o4i": [194, 211], "dnnl_giwo8i": [194, 211], "dnnl_giwo8i2o": [194, 211], "dnnl_giwo8i4o": [194, 211], "dnnl_giwo16i": [194, 211], "dnnl_giwo16i2o": [194, 211], "dnnl_giwo16i4o": [194, 211], "dnnl_giwo24i": [194, 211], "dnnl_giwo24i2o": [194, 211], "dnnl_giwo24i4o": [194, 211], "dnnl_gowi4o": [194, 211], "dnnl_gowi8o": [194, 211], "dnnl_gowi8o2i": [194, 211], "dnnl_gowi8o4i": [194, 211], "dnnl_goiw32g": [194, 211], "dnnl_goiw2i4o2i": [194, 211], "dnnl_goiw2o4i2o": [194, 211], "dnnl_goiw4i8o2i": [194, 211], "dnnl_goiw4o8i2o": [194, 211], "dnnl_goiw4i": [194, 211], "dnnl_goiw32i": [194, 211], "dnnl_giohw16i16o": [194, 211], "dnnl_giohw8o8i": [194, 211], "dnnl_giohw16o16i": [194, 211], "dnnl_gohwi16o": [194, 211], "dnnl_gohwi16o2i": [194, 211], "dnnl_gohwi16o4i": [194, 211], "dnnl_gihwo8i": [194, 211], "dnnl_gihwo8i2o": [194, 211], "dnnl_gihwo8i4o": [194, 211], "dnnl_gihwo16i": [194, 211], "dnnl_gihwo16i2o": [194, 211], "dnnl_gihwo16i4o": [194, 211], "dnnl_gihwo24i": [194, 211], "dnnl_gihwo24i2o": [194, 211], "dnnl_gihwo24i4o": [194, 211], "dnnl_gohwi32o": [194, 211], "dnnl_gohwi24o": [194, 211], "dnnl_gohwi24o2i": [194, 211], "dnnl_gohwi24o4i": [194, 211], "dnnl_gohwi4o": [194, 211], "dnnl_gohwi8o": [194, 211], "dnnl_gohwi8o2i": [194, 211], "dnnl_gohwi8o4i": [194, 211], "dnnl_goihw16g": [194, 211], "dnnl_goihw16i16o": [194, 211], "dnnl_goihw16o16i": [194, 211], "dnnl_goihw16o": [194, 211], "dnnl_goihw2i8o4i": [194, 211], "dnnl_goihw4i16o4i": [194, 211], "dnnl_goihw16i16o4i": [194, 211], "dnnl_goihw16i16o2i": [194, 211], "dnnl_goihw16o16i2o": [194, 211], "dnnl_goihw4i4o": [194, 211], "dnnl_goihw4o4i": [194, 211], "dnnl_goihw4o": [194, 211], "dnnl_goihw8g": [194, 211], "dnnl_goihw4g": [194, 211], "dnnl_goihw8i16o2i": [194, 211], "dnnl_goihw8i8o": [194, 211], "dnnl_goihw8o16i2o": [194, 211], "dnnl_giohw8o16i2o": [194, 211], "dnnl_goihw8o8i": [194, 211], "dnnl_goihw8o4i": [194, 211], "dnnl_goihw32g": [194, 211], "dnnl_gowhi16o": [194, 211], "dnnl_goihw4i": [194, 211], "dnnl_goihw32i": [194, 211], "dnnl_oiw4o8i8o4i": [194, 211], "dnnl_oihw4o8i8o4i": [194, 211], "dnnl_iow4i8o8i4o": [194, 211], "dnnl_iohw4i8o8i4o": [194, 211], "dnnl_iodhw4i8o8i4o": [194, 211], "dnnl_oihw2o8i8o2i": [194, 211], "dnnl_goiw4o8i8o4i": [194, 211], "dnnl_goihw4o8i8o4i": [194, 211], "dnnl_goidhw4o8i8o4i": [194, 211], "dnnl_giow4i8o8i4o": [194, 211], "dnnl_giohw4i8o8i4o": [194, 211], "dnnl_giodhw4i8o8i4o": [194, 211], "dnnl_goihw2o8i8o2i": [194, 211], "dnnl_goihw2i4o2i": [194, 211], "dnnl_goihw2o4i2o": [194, 211], "dnnl_goihw4i8o2i": [194, 211], "dnnl_goihw4o8i2o": [194, 211], "dnnl_giodhw16i16o": [194, 211], "dnnl_giodhw8o8i": [194, 211], "dnnl_giodhw16o16i": [194, 211], "dnnl_godhwi16o": [194, 211], "dnnl_godhwi16o2i": [194, 211], "dnnl_godhwi16o4i": [194, 211], "dnnl_gidhwo8i": [194, 211], "dnnl_gidhwo8i2o": [194, 211], "dnnl_gidhwo8i4o": [194, 211], "dnnl_gidhwo16i": [194, 211], "dnnl_gidhwo16i2o": [194, 211], "dnnl_gidhwo16i4o": [194, 211], "dnnl_gidhwo24i": [194, 211], "dnnl_gidhwo24i2o": [194, 211], "dnnl_gidhwo24i4o": [194, 211], "dnnl_godhwi4o": [194, 211], "dnnl_godhwi8o": [194, 211], "dnnl_godhwi8o2i": [194, 211], "dnnl_godhwi8o4i": [194, 211], "dnnl_godwhi16o": [194, 211], "dnnl_goidhw16i16o": [194, 211], "dnnl_goidhw4i16o4i": [194, 211], "dnnl_goidhw16i16o4i": [194, 211], "dnnl_goidhw2i8o4i": [194, 211], "dnnl_goidhw16i16o2i": [194, 211], "dnnl_goidhw16o16i": [194, 211], "dnnl_goidhw16o16i2o": [194, 211], "dnnl_goidhw16o": [194, 211], "dnnl_goidhw4i4o": [194, 211], "dnnl_goidhw4o4i": [194, 211], "dnnl_goidhw4o": [194, 211], "dnnl_goidhw8i16o2i": [194, 211], "dnnl_goidhw8i8o": [194, 211], "dnnl_goidhw8o16i2o": [194, 211], "dnnl_giodhw8o16i2o": [194, 211], "dnnl_goidhw8o8i": [194, 211], "dnnl_goidhw8o4i": [194, 211], "dnnl_goidhw16g": [194, 211], "dnnl_goidhw32g": [194, 211], "dnnl_goidhw2i4o2i": [194, 211], "dnnl_goidhw4i8o2i": [194, 211], "dnnl_goidhw2o4i2o": [194, 211], "dnnl_goidhw4o8i2o": [194, 211], "dnnl_goidhw4i": [194, 211], "dnnl_goidhw32i": [194, 211], "dnnl_owi24o": [194, 211], "dnnl_owi24o2i": [194, 211], "dnnl_owi24o4i": [194, 211], "dnnl_owi32o": [194, 211], "dnnl_owi32o2i": [194, 211], "dnnl_owi32o4i": [194, 211], "dnnl_owi48o": [194, 211], "dnnl_owi48o2i": [194, 211], "dnnl_owi48o4i": [194, 211], "dnnl_owi64o": [194, 211], "dnnl_owi64o2i": [194, 211], "dnnl_owi64o4i": [194, 211], "dnnl_iwo32i": [194, 211], "dnnl_iwo32i2o": [194, 211], "dnnl_iwo32i4o": [194, 211], "dnnl_iwo48i": [194, 211], "dnnl_iwo48i2o": [194, 211], "dnnl_iwo48i4o": [194, 211], "dnnl_iwo64i": [194, 211], "dnnl_iwo64i2o": [194, 211], "dnnl_iwo64i4o": [194, 211], "dnnl_wio2i": [194, 211], "dnnl_wio4i": [194, 211], "dnnl_gowi24o": [194, 211], "dnnl_gowi24o2i": [194, 211], "dnnl_gowi24o4i": [194, 211], "dnnl_gowi32o": [194, 211], "dnnl_gowi32o2i": [194, 211], "dnnl_gowi32o4i": [194, 211], "dnnl_gowi48o": [194, 211], "dnnl_gowi48o2i": [194, 211], "dnnl_gowi48o4i": [194, 211], "dnnl_gowi64o": [194, 211], "dnnl_gowi64o2i": [194, 211], "dnnl_gowi64o4i": [194, 211], "dnnl_giwo32i": [194, 211], "dnnl_giwo32i2o": [194, 211], "dnnl_giwo32i4o": [194, 211], "dnnl_giwo48i": [194, 211], "dnnl_giwo48i2o": [194, 211], "dnnl_giwo48i4o": [194, 211], "dnnl_giwo64i": [194, 211], "dnnl_giwo64i2o": [194, 211], "dnnl_giwo64i4o": [194, 211], "dnnl_gwio": [194, 211], "dnnl_gwio2i": [194, 211], "dnnl_gwio4i": [194, 211], "dnnl_ohwi24o2i": [194, 211], "dnnl_ohwi24o4i": [194, 211], "dnnl_ohwi32o2i": [194, 211], "dnnl_ohwi32o4i": [194, 211], "dnnl_ohwi48o": [194, 211], "dnnl_ohwi48o2i": [194, 211], "dnnl_ohwi48o4i": [194, 211], "dnnl_ohwi64o": [194, 211], "dnnl_ohwi64o2i": [194, 211], "dnnl_ohwi64o4i": [194, 211], "dnnl_ihwo32i": [194, 211], "dnnl_ihwo32i2o": [194, 211], "dnnl_ihwo32i4o": [194, 211], "dnnl_ihwo48i": [194, 211], "dnnl_ihwo48i2o": [194, 211], "dnnl_ihwo48i4o": [194, 211], "dnnl_ihwo64i": [194, 211], "dnnl_ihwo64i2o": [194, 211], "dnnl_ihwo64i4o": [194, 211], "dnnl_hwio2i": [194, 211], "dnnl_hwio4i": [194, 211], "dnnl_gohwi32o2i": [194, 211], "dnnl_gohwi32o4i": [194, 211], "dnnl_gohwi48o": [194, 211], "dnnl_gohwi48o2i": [194, 211], "dnnl_gohwi48o4i": [194, 211], "dnnl_gohwi64o": [194, 211], "dnnl_gohwi64o2i": [194, 211], "dnnl_gohwi64o4i": [194, 211], "dnnl_gihwo32i": [194, 211], "dnnl_gihwo32i2o": [194, 211], "dnnl_gihwo32i4o": [194, 211], "dnnl_gihwo48i": [194, 211], "dnnl_gihwo48i2o": [194, 211], "dnnl_gihwo48i4o": [194, 211], "dnnl_gihwo64i": [194, 211], "dnnl_gihwo64i2o": [194, 211], "dnnl_gihwo64i4o": [194, 211], "dnnl_ghwio": [194, 211], "dnnl_ghwio2i": [194, 211], "dnnl_ghwio4i": [194, 211], "dnnl_odhwi24o": [194, 211], "dnnl_odhwi24o2i": [194, 211], "dnnl_odhwi24o4i": [194, 211], "dnnl_odhwi32o": [194, 211], "dnnl_odhwi32o2i": [194, 211], "dnnl_odhwi32o4i": [194, 211], "dnnl_odhwi48o": [194, 211], "dnnl_odhwi48o2i": [194, 211], "dnnl_odhwi48o4i": [194, 211], "dnnl_odhwi64o": [194, 211], "dnnl_odhwi64o2i": [194, 211], "dnnl_odhwi64o4i": [194, 211], "dnnl_idhwo32i": [194, 211], "dnnl_idhwo32i2o": [194, 211], "dnnl_idhwo32i4o": [194, 211], "dnnl_idhwo48i": [194, 211], "dnnl_idhwo48i2o": [194, 211], "dnnl_idhwo48i4o": [194, 211], "dnnl_idhwo64i": [194, 211], "dnnl_idhwo64i2o": [194, 211], "dnnl_idhwo64i4o": [194, 211], "dnnl_dhwio2i": [194, 211], "dnnl_dhwio4i": [194, 211], "dnnl_godhwi24o": [194, 211], "dnnl_godhwi24o2i": [194, 211], "dnnl_godhwi24o4i": [194, 211], "dnnl_godhwi32o": [194, 211], "dnnl_godhwi32o2i": [194, 211], "dnnl_godhwi32o4i": [194, 211], "dnnl_godhwi48o": [194, 211], "dnnl_godhwi48o2i": [194, 211], "dnnl_godhwi48o4i": [194, 211], "dnnl_godhwi64o": [194, 211], "dnnl_godhwi64o2i": [194, 211], "dnnl_godhwi64o4i": [194, 211], "dnnl_gidhwo32i": [194, 211], "dnnl_gidhwo32i2o": [194, 211], "dnnl_gidhwo32i4o": [194, 211], "dnnl_gidhwo48i": [194, 211], "dnnl_gidhwo48i2o": [194, 211], "dnnl_gidhwo48i4o": [194, 211], "dnnl_gidhwo64i": [194, 211], "dnnl_gidhwo64i2o": [194, 211], "dnnl_gidhwo64i4o": [194, 211], "dnnl_gdhwio": [194, 211], "dnnl_gdhwio2i": [194, 211], "dnnl_gdhwio4i": [194, 211], "dnnl_oi16i32o4i": [194, 211], "dnnl_oi16i48o4i": [194, 211], "dnnl_oi16i64o4i": [194, 211], "dnnl_oi16i16o2i": [194, 211], "dnnl_oi16i32o2i": [194, 211], "dnnl_oi16i48o2i": [194, 211], "dnnl_oi16i64o2i": [194, 211], "dnnl_oiw16i32o4i": [194, 211], "dnnl_oiw16i48o4i": [194, 211], "dnnl_oiw16i64o4i": [194, 211], "dnnl_oiw16i32o2i": [194, 211], "dnnl_oiw16i48o2i": [194, 211], "dnnl_oiw16i64o2i": [194, 211], "dnnl_oihw16i32o4i": [194, 211], "dnnl_oihw16i48o4i": [194, 211], "dnnl_oihw16i64o4i": [194, 211], "dnnl_oihw16i32o2i": [194, 211], "dnnl_oihw16i48o2i": [194, 211], "dnnl_oihw16i64o2i": [194, 211], "dnnl_oidhw16i32o4i": [194, 211], "dnnl_oidhw16i48o4i": [194, 211], "dnnl_oidhw16i64o4i": [194, 211], "dnnl_oidhw16i32o2i": [194, 211], "dnnl_oidhw16i48o2i": [194, 211], "dnnl_oidhw16i64o2i": [194, 211], "dnnl_owi16i16o2i": [194, 211], "dnnl_owi16i16o4i": [194, 211], "dnnl_ohwi16i16o2i": [194, 211], "dnnl_ohwi16i16o4i": [194, 211], "dnnl_odhwi16i16o2i": [194, 211], "dnnl_odhwi16i16o4i": [194, 211], "dnnl_iwo16o16i2o": [194, 211], "dnnl_iwo16o16i4o": [194, 211], "dnnl_ihwo16o16i2o": [194, 211], "dnnl_ihwo16o16i4o": [194, 211], "dnnl_idhwo16o16i2o": [194, 211], "dnnl_idhwo16o16i4o": [194, 211], "dnnl_gowi16i16o2i": [194, 211], "dnnl_gowi16i16o4i": [194, 211], "dnnl_gohwi16i16o2i": [194, 211], "dnnl_gohwi16i16o4i": [194, 211], "dnnl_godhwi16i16o2i": [194, 211], "dnnl_godhwi16i16o4i": [194, 211], "dnnl_giwo16o16i2o": [194, 211], "dnnl_giwo16o16i4o": [194, 211], "dnnl_gihwo16o16i2o": [194, 211], "dnnl_gihwo16o16i4o": [194, 211], "dnnl_gidhwo16o16i2o": [194, 211], "dnnl_gidhwo16o16i4o": [194, 211], "dnnl_owi16i32o2i": [194, 211], "dnnl_owi16i32o4i": [194, 211], "dnnl_owi16i48o2i": [194, 211], "dnnl_owi16i48o4i": [194, 211], "dnnl_owi16i64o2i": [194, 211], "dnnl_owi16i64o4i": [194, 211], "dnnl_iwo16o32i2o": [194, 211], "dnnl_iwo16o32i4o": [194, 211], "dnnl_iwo16o48i2o": [194, 211], "dnnl_iwo16o48i4o": [194, 211], "dnnl_iwo16o64i2o": [194, 211], "dnnl_iwo16o64i4o": [194, 211], "dnnl_gowi16i32o2i": [194, 211], "dnnl_gowi16i32o4i": [194, 211], "dnnl_gowi16i48o2i": [194, 211], "dnnl_gowi16i48o4i": [194, 211], "dnnl_gowi16i64o2i": [194, 211], "dnnl_gowi16i64o4i": [194, 211], "dnnl_giwo16o32i2o": [194, 211], "dnnl_giwo16o32i4o": [194, 211], "dnnl_giwo16o48i2o": [194, 211], "dnnl_giwo16o48i4o": [194, 211], "dnnl_giwo16o64i2o": [194, 211], "dnnl_giwo16o64i4o": [194, 211], "dnnl_ohwi16i32o2i": [194, 211], "dnnl_ohwi16i32o4i": [194, 211], "dnnl_ohwi16i48o2i": [194, 211], "dnnl_ohwi16i48o4i": [194, 211], "dnnl_ohwi16i64o2i": [194, 211], "dnnl_ohwi16i64o4i": [194, 211], "dnnl_ihwo16o32i2o": [194, 211], "dnnl_ihwo16o32i4o": [194, 211], "dnnl_ihwo16o48i2o": [194, 211], "dnnl_ihwo16o48i4o": [194, 211], "dnnl_ihwo16o64i2o": [194, 211], "dnnl_ihwo16o64i4o": [194, 211], "dnnl_gohwi16i32o2i": [194, 211], "dnnl_gohwi16i32o4i": [194, 211], "dnnl_gohwi16i48o2i": [194, 211], "dnnl_gohwi16i48o4i": [194, 211], "dnnl_gohwi16i64o2i": [194, 211], "dnnl_gohwi16i64o4i": [194, 211], "dnnl_gihwo16o32i2o": [194, 211], "dnnl_gihwo16o32i4o": [194, 211], "dnnl_gihwo16o48i2o": [194, 211], "dnnl_gihwo16o48i4o": [194, 211], "dnnl_gihwo16o64i2o": [194, 211], "dnnl_gihwo16o64i4o": [194, 211], "dnnl_odhwi16i32o2i": [194, 211], "dnnl_odhwi16i32o4i": [194, 211], "dnnl_odhwi16i48o2i": [194, 211], "dnnl_odhwi16i48o4i": [194, 211], "dnnl_odhwi16i64o2i": [194, 211], "dnnl_odhwi16i64o4i": [194, 211], "dnnl_idhwo16o32i2o": [194, 211], "dnnl_idhwo16o32i4o": [194, 211], "dnnl_idhwo16o48i2o": [194, 211], "dnnl_idhwo16o48i4o": [194, 211], "dnnl_idhwo16o64i2o": [194, 211], "dnnl_idhwo16o64i4o": [194, 211], "dnnl_godhwi16i32o2i": [194, 211], "dnnl_godhwi16i32o4i": [194, 211], "dnnl_godhwi16i48o2i": [194, 211], "dnnl_godhwi16i48o4i": [194, 211], "dnnl_godhwi16i64o2i": [194, 211], "dnnl_godhwi16i64o4i": [194, 211], "dnnl_gidhwo16o32i2o": [194, 211], "dnnl_gidhwo16o32i4o": [194, 211], "dnnl_gidhwo16o48i2o": [194, 211], "dnnl_gidhwo16o48i4o": [194, 211], "dnnl_gidhwo16o64i2o": [194, 211], "dnnl_gidhwo16o64i4o": [194, 211], "dnnl_hwiog16g": [194, 211], "dnnl_hwiog8g": [194, 211], "dnnl_hwiog4g": [194, 211], "dnnl_dhwiog16g": [194, 211], "dnnl_dhwiog8g": [194, 211], "dnnl_dhwiog4g": [194, 211], "dnnl_ncdhw40n16c": [194, 211], "dnnl_ncw40n16c": [194, 211], "dnnl_nchw40n16c": [194, 211], "dnnl_ncw40n32c": [194, 211], "dnnl_nchw40n32c": [194, 211], "dnnl_ncdhw40n32c": [194, 211], "dnnl_oidhw4o8i8o2i": [194, 211], "dnnl_oihw4o8i8o2i": [194, 211], "dnnl_oiw4o8i8o2i": [194, 211], "dnnl_goidhw4o8i8o2i": [194, 211], "dnnl_goihw4o8i8o2i": [194, 211], "dnnl_goiw4o8i8o2i": [194, 211], "dnnl_iodhw4i8o8i2o": [194, 211], "dnnl_iohw4i8o8i2o": [194, 211], "dnnl_iow4i8o8i2o": [194, 211], "dnnl_giodhw4i8o8i2o": [194, 211], "dnnl_giohw4i8o8i2o": [194, 211], "dnnl_giow4i8o8i2o": [194, 211], "dnnl_ncw2c32n8c": [194, 211], "dnnl_nchw2c32n8c": [194, 211], "dnnl_ncdhw2c32n8c": [194, 211], "dnnl_oiw2i8o16i4o": [194, 211], "dnnl_oihw2i8o16i4o": [194, 211], "dnnl_oidhw2i8o16i4o": [194, 211], "dnnl_oiw2o8i16o4i": [194, 211], "dnnl_oiw2o8i16o2i": [194, 211], "dnnl_iow2i8o16i4o": [194, 211], "dnnl_iow2i8o16i2o": [194, 211], "dnnl_oihw2o8i16o4i": [194, 211], "dnnl_oihw2o8i16o2i": [194, 211], "dnnl_iohw2i8o16i4o": [194, 211], "dnnl_iohw2i8o16i2o": [194, 211], "dnnl_oidhw2o8i16o4i": [194, 211], "dnnl_oidhw2o8i16o2i": [194, 211], "dnnl_iodhw2i8o16i4o": [194, 211], "dnnl_iodhw2i8o16i2o": [194, 211], "dnnl_goiw2o8i16o2i": [194, 211], "dnnl_giow2i8o16i2o": [194, 211], "dnnl_giohw2i8o16i2o": [194, 211], "dnnl_giodhw2i8o16i2o": [194, 211], "dnnl_goihw2o8i16o2i": [194, 211], "dnnl_goidhw2o8i16o2i": [194, 211], "dnnl_goiw2o8i16o4i": [194, 211], "dnnl_goihw2o8i16o4i": [194, 211], "ndhwc": [194, 211], "data_in_ncdhw": 194, "data_in_ndhwc": 194, "dnnl_memory_desc_destroi": [194, 246, 254, 265, 298, 323, 385, 395, 405], "alia": [194, 211, 222, 223, 329, 373], "6d": [194, 211], "7d": [194, 211], "8d": [194, 211], "9d": [194, 211], "10d": [194, 211], "11d": [194, 211], "2nd": [194, 211], "sentinel": 194, "incl": 194, "seq_length": [194, 211], "num_lay": [194, 211, 276, 296, 427, 459], "num_direct": [194, 211, 276, 296, 427, 459], "input_channel": [194, 211, 276, 296, 427, 459], "num_gat": [194, 211, 276, 296, 427, 459], "output_channel": [194, 211, 276, 296, 427, 459], "num_channels_in_hidden_st": [194, 211], "num_channels_in_recurrent_project": [194, 211], "dnnl_fpmath_mode_strict": [195, 196, 305, 316, 335], "dnnl_fpmath_mode_bf16": [195, 196, 305, 316, 335], "dnnl_fpmath_mode_f16": [195, 196, 305, 316, 335], "dnnl_fpmath_mode_tf32": [195, 196, 305, 316, 335], "dnnl_fpmath_mode_ani": [195, 196, 305, 316, 335], "dnnl_graph_layout_type_undef": [197, 199], "dnnl_graph_layout_type_ani": [197, 199, 355], "dnnl_graph_layout_type_strid": [197, 199, 355, 501], "dnnl_graph_layout_type_opaqu": [197, 199, 501], "dnnl_graph_tensor_property_undef": [200, 208], "dnnl_graph_tensor_property_vari": [200, 208], "dnnl_graph_tensor_property_const": [200, 208], "dnnl_graph_tensor_property_host_scalar": [200, 208], "dnnl_graph_op_attr_undef": [201, 202], "dnnl_graph_op_attr_alpha": [201, 202], "dnnl_graph_op_attr_beta": [201, 202], "dnnl_graph_op_attr_epsilon": [201, 202], "dnnl_graph_op_attr_max": [201, 202], "dnnl_graph_op_attr_min": [201, 202], "dnnl_graph_op_attr_momentum": [201, 202], "dnnl_graph_op_attr_scal": [201, 202], "dnnl_graph_op_attr_axi": [201, 202], "dnnl_graph_op_attr_begin_norm_axi": [201, 202], "dnnl_graph_op_attr_group": [201, 202], "dnnl_graph_op_attr_ax": [201, 202], "dnnl_graph_op_attr_dil": [201, 202], "dnnl_graph_op_attr_dst_shap": [201, 202], "dnnl_graph_op_attr_kernel": [201, 202], "dnnl_graph_op_attr_ord": [201, 202], "dnnl_graph_op_attr_output_pad": [201, 202], "dnnl_graph_op_attr_pads_begin": [201, 202], "dnnl_graph_op_attr_pads_end": [201, 202], "dnnl_graph_op_attr_shap": [201, 202], "dnnl_graph_op_attr_s": [201, 202], "dnnl_graph_op_attr_src_shap": [201, 202], "dnnl_graph_op_attr_strid": [201, 202], "dnnl_graph_op_attr_weights_shap": [201, 202], "dnnl_graph_op_attr_zp": [201, 202], "dnnl_graph_op_attr_group_shap": [201, 202], "dnnl_graph_op_attr_exclude_pad": [201, 202], "dnnl_graph_op_attr_keep_dim": [201, 202], "dnnl_graph_op_attr_keep_stat": [201, 202], "dnnl_graph_op_attr_per_channel_broadcast": [201, 202], "dnnl_graph_op_attr_special_zero": [201, 202], "dnnl_graph_op_attr_transpose_a": [201, 202], "dnnl_graph_op_attr_transpose_b": [201, 202], "dnnl_graph_op_attr_use_affin": [201, 202], "dnnl_graph_op_attr_use_dst": [201, 202], "dnnl_graph_op_attr_auto_broadcast": [201, 202], "dnnl_graph_op_attr_auto_pad": [201, 202], "dnnl_graph_op_attr_coordinate_transformation_mod": [201, 202], "dnnl_graph_op_attr_data_format": [201, 202, 501], "dnnl_graph_op_attr_mod": [201, 202], "dnnl_graph_op_attr_qtyp": [201, 202], "dnnl_graph_op_attr_rounding_typ": [201, 202], "dnnl_graph_op_attr_weights_format": [201, 202, 501], "dnnl_graph_op_attr_end": [201, 202], "illeg": 201, "weight_shap": [201, 202], "gelubackward": [201, 202, 203, 302], "exter": [201, 202], "0x30": 202, "0x40": 202, "0x60": 202, "0x80": 202, "0xff": 202, "input_shap": 202, "dnnl_graph_op_ab": [203, 204], "absbackward": [203, 302], "dnnl_graph_op_abs_backward": [203, 204], "dnnl_graph_op_add": [203, 204], "dnnl_graph_op_avg_pool": [203, 204], "dnnl_graph_op_avg_pool_backward": [203, 204], "batchnormforwardtrain": [203, 302], "dnnl_graph_op_batch_norm_forward_train": [203, 204], "dnnl_graph_op_batch_norm_infer": [203, 204], "batchnormtrainingbackward": [203, 302], "dnnl_graph_op_batch_norm_backward": [203, 204], "dnnl_graph_op_bias_add": [203, 204], "biasaddbackward": [203, 302], "dnnl_graph_op_bias_add_backward": [203, 204], "dnnl_graph_op_clamp": [203, 204], "clampbackward": [203, 302], "dnnl_graph_op_clamp_backward": [203, 204], "dnnl_graph_op_concat": [203, 204], "dnnl_graph_op_convolut": [203, 204], "convolutionbackwarddata": [203, 302], "dnnl_graph_op_convolution_backward_data": [203, 204], "convolutionbackwardweight": [203, 302], "dnnl_graph_op_convolution_backward_weight": [203, 204], "convtranspos": [203, 300, 302], "dnnl_graph_op_conv_transpos": [203, 204], "convtransposebackwarddata": [203, 302], "dnnl_graph_op_conv_transpose_backward_data": [203, 204], "convtransposebackwardweight": [203, 302], "dnnl_graph_op_conv_transpose_backward_weight": [203, 204], "dnnl_graph_op_dequant": [203, 204], "dnnl_graph_op_divid": [203, 204], "dnnl_graph_op_dynamic_dequant": [203, 204], "dnnl_graph_op_dynamic_quant": [203, 204], "dnnl_graph_op_elu": [203, 204], "elubackward": [203, 302], "dnnl_graph_op_elu_backward": [203, 204], "dnnl_graph_op_end": [203, 204], "dnnl_graph_op_exp": [203, 204], "dnnl_graph_op_gelu": [203, 204], "dnnl_graph_op_gelu_backward": [203, 204], "dnnl_graph_op_group_norm": [203, 204], "dnnl_graph_op_hard_sigmoid": [203, 204], "hardsigmoidbackward": [203, 302], "dnnl_graph_op_hard_sigmoid_backward": [203, 204], "dnnl_graph_op_hard_swish": [203, 204], "hardswishbackward": [203, 302], "dnnl_graph_op_hard_swish_backward": [203, 204], "dnnl_graph_op_interpol": [203, 204], "interpolatebackward": [203, 302], "dnnl_graph_op_interpolate_backward": [203, 204], "dnnl_graph_op_layer_norm": [203, 204], "layernormbackward": [203, 302], "dnnl_graph_op_layer_norm_backward": [203, 204], "leakyrelu": [203, 300, 302], "dnnl_graph_op_leaky_relu": [203, 204], "dnnl_graph_op_log": [203, 204], "dnnl_graph_op_log_softmax": [203, 204], "logsoftmaxbackward": [203, 302], "dnnl_graph_op_log_softmax_backward": [203, 204], "dnnl_graph_op_matmul": [203, 204], "dnnl_graph_op_maximum": [203, 204], "dnnl_graph_op_max_pool": [203, 204], "maxpoolbackward": [203, 302], "dnnl_graph_op_max_pool_backward": [203, 204], "dnnl_graph_op_minimum": [203, 204], "dnnl_graph_op_mish": [203, 204], "mishbackward": [203, 302], "dnnl_graph_op_mish_backward": [203, 204], "dnnl_graph_op_multipli": [203, 204], "dnnl_graph_op_pow": [203, 204], "dnnl_graph_op_prelu": [203, 204], "prelubackward": [203, 302], "dnnl_graph_op_prelu_backward": [203, 204], "dnnl_graph_op_quant": [203, 204], "reciproc": [203, 302], "dnnl_graph_op_reciproc": [203, 204], "dnnl_graph_op_reduce_l1": [203, 204], "dnnl_graph_op_reduce_l2": [203, 204], "dnnl_graph_op_reduce_max": [203, 204], "dnnl_graph_op_reduce_mean": [203, 204], "dnnl_graph_op_reduce_min": [203, 204], "dnnl_graph_op_reduce_prod": [203, 204], "dnnl_graph_op_reduce_sum": [203, 204], "dnnl_graph_op_relu": [203, 204], "relubackward": [203, 302], "dnnl_graph_op_relu_backward": [203, 204], "dnnl_graph_op_reord": [203, 204], "dnnl_graph_op_round": [203, 204], "dnnl_graph_op_select": [203, 204], "dnnl_graph_op_sigmoid": [203, 204], "sigmoidbackward": [203, 302], "dnnl_graph_op_sigmoid_backward": [203, 204], "dnnl_graph_op_softmax": [203, 204], "dnnl_graph_op_softmax_backward": [203, 204], "dnnl_graph_op_softplu": [203, 204], "softplusbackward": [203, 302], "dnnl_graph_op_softplus_backward": [203, 204], "dnnl_graph_op_sqrt": [203, 204], "sqrtbackward": [203, 302], "dnnl_graph_op_sqrt_backward": [203, 204], "dnnl_graph_op_squar": [203, 204], "squareddiffer": [203, 302], "dnnl_graph_op_squared_differ": [203, 204], "dnnl_graph_op_static_reshap": [203, 204], "dnnl_graph_op_static_transpos": [203, 204], "dnnl_graph_op_subtract": [203, 204], "dnnl_graph_op_tanh": [203, 204], "tanhbackward": [203, 302], "dnnl_graph_op_tanh_backward": [203, 204], "dnnl_graph_op_type_cast": [203, 204], "dnnl_graph_op_wildcard": [203, 204], "dnnl_graph_op_gen_index": [203, 204], "dnnl_graph_op_greater_equ": [203, 204], "lastsymbol": 203, "dnnl_graph_op_last_symbol": [203, 204], "dnnl_graph_partition_policy_fus": [205, 206], "dnnl_graph_partition_policy_debug": [205, 206], "chian": [205, 206], "dnnl_success": [207, 235, 236, 246, 254, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 353, 355, 356, 357, 358, 360, 361, 369, 371, 385, 395], "out_of_memori": [207, 235], "dnnl_out_of_memori": [207, 235, 236], "invalid_argu": [207, 235, 280, 282, 327, 335, 411, 436], "dnnl_invalid_argu": [207, 235, 236, 305, 323, 327, 335, 349, 350, 351], "last_impl_reach": [207, 235], "dnnl_last_impl_reach": [207, 235, 236, 329], "dnnl_runtime_error": [207, 235, 236, 335], "not_requir": [207, 235], "dnnl_not_requir": [207, 235, 236, 329], "invalid_graph": 207, "dnnl_invalid_graph": [207, 236], "invalid_graph_op": 207, "dnnl_invalid_graph_op": [207, 236], "dnnl_invalid_shap": [207, 236], "invalid_data_typ": 207, "dnnl_invalid_data_typ": [207, 236], "legitim": [207, 236], "bca": 211, "cba": 211, "abdc": 211, "acbd": 211, "adbc": 211, "bacd": 211, "bcda": 211, "cdba": 211, "dcab": 211, "abdec": 211, "bcdea": 211, "cdeba": 211, "decab": 211, "abcdef": 211, "abdfc": 211, "acbdef": 211, "abdefc": 211, "defcab": 211, "abcdf": 211, "abcdefg": 211, "abcdegf": 211, "abcdefgh": 211, "abcdefhg": 211, "abcdefghi": 211, "abcdefgih": 211, "abcdefghij": 211, "abcdefghji": 211, "abcdefghijk": 211, "abcdefghikj": 211, "abcdefghijkl": 211, "abcdefghijlk": 211, "cn": [211, 323], "tn": 211, "nt": 211, "nwc": 211, "chwn": [211, 411], "oi": [211, 257, 258, 396, 397], "oiw": 211, "owi": 211, "wio": 211, "iwo": 211, "oihw": [211, 247, 248, 249, 250, 252, 267, 274, 281, 282, 386, 387, 388, 389, 392, 407, 423, 437, 438], "hwio": 211, "ohwi": 211, "ihwo": 211, "iohw": 211, "oidhw": 211, "dhwio": 211, "odhwi": 211, "iodhw": 211, "idhwo": 211, "goiw": 211, "gowi": 211, "wigo": 211, "gohwi": 211, "goihw": [211, 247, 252, 392], "giohw": 211, "goidhw": 211, "giodhw": 211, "godhwi": 211, "dhwigo": 211, "ntc": 211, "ldigo": [211, 242, 261, 262, 276, 278, 288, 296, 377, 401, 402, 427, 432, 449, 459], "ldgoi": 211, "ldio": 211, "ldoi": 211, "ldgo": [211, 242, 261, 262, 276, 278, 288, 296, 377, 401, 402, 427, 432, 449, 459], "ab16b16a": 211, "ab16b32a": 211, "ab16b48a": 211, "ab16b64a": 211, "ab8b16a2b": 211, "ab8b32a2b": 211, "ab8b64a2b": 211, "ab4b16a4b": 211, "ab4b32a4b": 211, "ab4b64a4b": 211, "ab16b16a4b": 211, "ab16b32a4b": 211, "ab16b48a4b": 211, "ab16b64a4b": 211, "ab16b16a2b": 211, "ab16b32a2b": 211, "ab16b48a2b": 211, "ab16b64a2b": 211, "ab4a": 211, "ab8a": 211, "ab32a": 211, "abc16a": 211, "abc16a16b": 211, "abc4a4b": 211, "abc16b": 211, "abc32b": 211, "abc16b16a": 211, "acb16b16a": 211, "abc16b32a": 211, "acb16b32a": 211, "abc16b48a": 211, "acb16b48a": 211, "abc16b64a": 211, "acb16b64a": 211, "abc4a": 211, "abc4b": 211, "abc4b16a4b": 211, "acb4b16a4b": 211, "abc4b32a4b": 211, "acb4b32a4b": 211, "abc4b64a4b": 211, "acb4b64a4b": 211, "abc2b8a4b": 211, "abc16a16b2a": 211, "abc16b16a4b": 211, "abc16b32a4b": 211, "abc16b48a4b": 211, "abc16b64a4b": 211, "abc16b16a2b": 211, "abc16b32a2b": 211, "abc16b48a2b": 211, "abc16b64a2b": 211, "abc4b4a": 211, "abc8a16b2a": 211, "abc8a8b": 211, "abc8a4b": 211, "abc8b": 211, "abc8b16a2b": 211, "acb8b16a2b": 211, "abc8b32a2b": 211, "acb8b32a2b": 211, "abc8b64a2b": 211, "acb8b64a2b": 211, "abc8b8a": 211, "acb8b8a": 211, "abcd8a": 211, "abcd16a": 211, "abcd32a": 211, "abcd16a16b": 211, "abcd32b": 211, "acdb16b16a": 211, "abcd16b32a": 211, "acdb16b32a": 211, "abcd16b48a": 211, "acdb16b48a": 211, "abcd16b64a": 211, "acdb16b64a": 211, "abcd16b16c": 211, "abcd16c16b": 211, "abcd4a": 211, "abcd4b": 211, "abcd4b16a4b": 211, "acdb4b16a4b": 211, "abcd4b32a4b": 211, "acdb4b32a4b": 211, "abcd4b64a4b": 211, "acdb4b64a4b": 211, "abcd2b8a4b": 211, "abcd4b4a": 211, "abcd4a4b": 211, "abcd4c16b4c": 211, "abcd2c8b4c": 211, "abcd16a16b2a": 211, "abcd16b16a4b": 211, "abcd16b32a4b": 211, "abcd16b48a4b": 211, "abcd16b64a4b": 211, "abcd16b16a2b": 211, "abcd16b32a2b": 211, "abcd16b48a2b": 211, "abcd16b64a2b": 211, "abcd16b16c2b": 211, "abcd16c16b4c": 211, "abcd16c16b2c": 211, "abcd4c4b": 211, "abcd4b4c": 211, "abcd8a16b2a": 211, "abcd8a8b": 211, "abcd8a4b": 211, "abcd8a2b": 211, "abcd8b": [211, 437], "abcd8b16a2b": 211, "acdb8b16a2b": 211, "abcd8b32a2b": 211, "acdb8b32a2b": 211, "abcd8b64a2b": 211, "acdb8b64a2b": 211, "abcd8b16c2b": 211, "abcd8b8a": [211, 437], "acdb8b8a": 211, "abcd8b8c": 211, "abcd8b4c": 211, "abcd8c16b2c": 211, "abcd8c8b": 211, "abcde16a": 211, "abcde32a": 211, "abcde16a16b": 211, "abcde16b": 211, "abcde32b": 211, "abcde16b16a": 211, "acdeb16b16a": 211, "abcde16b32a": 211, "acdeb16b32a": 211, "abcde16b48a": 211, "acdeb16b48a": 211, "abcde16b64a": 211, "acdeb16b64a": 211, "abcde16b16c": 211, "abcde16c16b": 211, "abcde2c8b4c": 211, "abcde4a": 211, "abcde4b": 211, "abcde4b4a": 211, "abcde4a4b": 211, "abcde4b4c": 211, "abcde4c16b4c": 211, "abcde16b16c2b": 211, "abcde16c16b4c": 211, "abcde16c16b2c": 211, "abcdef16c16b2c": 211, "abcde4c4b": 211, "abcde8a": 211, "abcde8a8b": 211, "abcde8a4b": 211, "abcde8b": 211, "abcde8b16a2b": 211, "acdeb8b16a2b": 211, "abcde8b32a2b": 211, "acdeb8b32a2b": 211, "abcde8b64a2b": 211, "acdeb8b64a2b": 211, "abcde4b16a4b": 211, "acdeb4b16a4b": 211, "abcde4b32a4b": 211, "acdeb4b32a4b": 211, "abcde4b64a4b": 211, "acdeb4b64a4b": 211, "abcde16b16a4b": 211, "abcde16b32a4b": 211, "abcde16b48a4b": 211, "abcde16b64a4b": 211, "abcde16b16a2b": 211, "abcde16b32a2b": 211, "abcde16b48a2b": 211, "abcde16b64a2b": 211, "abcde2b8a4b": 211, "abcde8b16c2b": 211, "abcde8b8a": 211, "acdeb8b8a": 211, "abcde8b8c": 211, "abcde8b4c": 211, "abcd4a8b8a4b": 211, "abcd2a8b8a2b": 211, "abcde4b8c8b4c": 211, "abcde2b8c8b2c": 211, "abcde8c16b2c": 211, "abcde8c8b": 211, "abcdef16b": 211, "abcdef16b16c": 211, "abcdef16c16b": 211, "abcdef4b": 211, "abcdef2c8b4c": 211, "abcdef4c4b": 211, "abcdef4b4c": 211, "abcdef8b8c": 211, "abcdef8b4c": 211, "abcdef8c16b2c": 211, "abcdef4c16b4c": 211, "abcdef8c8b": 211, "abdc16b": 211, "abdc4b": 211, "abdc8b": 211, "abdc8b2c": 211, "abdc8b4c": 211, "abdec16b": 211, "abdec4b": 211, "abdec8b": 211, "abdec8b2c": 211, "abdec8b4c": 211, "abdefc16b": 211, "acbdef16c16b": 211, "acbdef8b8c": 211, "acbdef16b16c": 211, "abdefc4b": 211, "abdefc8b": 211, "abdefc8b2c": 211, "abdefc8b4c": 211, "acb16a": 211, "acb4a": 211, "acb8a": 211, "acb8a2b": 211, "acb8a4b": 211, "acbd8b8c": 211, "acbd16b16c": 211, "acbd16c16b": 211, "acbde8b8c": 211, "acbde16b16c": 211, "acbde16c16b": 211, "acdb16a": [211, 438], "acdb4a": 211, "acdb8a": 211, "acdb8a2b": 211, "acdb8a4b": 211, "acdeb16a": 211, "acdeb4a": 211, "acdeb8a": 211, "acdeb8a2b": 211, "acdeb8a4b": 211, "bac8a8b": 211, "bac16a16b": 211, "bac16b16a": 211, "bacd8a8b": 211, "bacd16a16b": 211, "bacd16b16a": 211, "abcd32a32b": 211, "bacde16b16a": 211, "bacde8a8b": 211, "bacde16a16b": 211, "abdec32b": 211, "abcdef16a": 211, "abcdef32a": 211, "acdb32a": 211, "abcd2b4c2b": 211, "abcde2b4c2b": 211, "abcdef2b4c2b": 211, "abcd2c4b2c": 211, "abcde2c4b2c": 211, "abcdef2c4b2c": 211, "abcd4b8c2b": 211, "abcde4b8c2b": 211, "abcdef4b8c2b": 211, "abcd4c8b2c": 211, "abcde4c8b2c": 211, "abcdef4c8b2c": 211, "ab32a32b8a4b": 211, "ab32a32b8a2b": 211, "ab8a4b": 211, "ab8a2b": 211, "abdc16d": 211, "abdc32d": 211, "abdc16d4c": 211, "abdc32d4c": 211, "abcd32c": 211, "abdec16": 211, "abdec32": 211, "abdec16e4c": 211, "abdec32e2c": 211, "abdec32e4c": 211, "abdce16c": 211, "abdce32c": 211, "abdce32c2": 211, "abcdef16c16b4c": 211, "abdc16b4c": 211, "abdec16b4c": 211, "acb16a4b": 211, "acdb16a2b": 211, "abdefc16b4c": 211, "acdeb16a4b": 211, "acb32a": 211, "acb32a2b": 211, "acb32a4b": 211, "acb48a": 211, "acb48a2b": 211, "acb48a4b": 211, "acb64a": 211, "acb64a2b": 211, "acb64a4b": 211, "cba2b": 211, "cba4b": 211, "abdc32b": 211, "abdc32b2c": 211, "abdc32b4c": 211, "abdc48b": 211, "abdc48b2c": 211, "abdc48b4c": 211, "abdc64b": 211, "abdc64b2c": 211, "abdc64b4c": 211, "adcb": 211, "adcb2c": 211, "adcb4c": 211, "acdb32a2b": 211, "acdb32a4b": 211, "acdb48a": 211, "acdb48a2b": 211, "acdb48a4b": 211, "acdb64a": 211, "acdb64a2b": 211, "acdb64a4b": 211, "cdba2b": 211, "cdba4b": 211, "abdec32b2c": 211, "abdec32b4c": 211, "abdec48b": 211, "abdec48b2c": 211, "abdec48b4c": 211, "abdec64b": 211, "abdec64b2c": 211, "abdec64b4c": 211, "adecb": 211, "adecb2c": 211, "adecb4c": 211, "acdeb32a": 211, "acdeb32a2b": 211, "acdeb32a4b": 211, "acdeb48a": 211, "acdeb48a2b": 211, "acdeb48a4b": 211, "acdeb64a": 211, "acdeb64a2b": 211, "acdeb64a4b": 211, "cdeba2b": 211, "cdeba4b": 211, "abdefc32b": 211, "abdefc32b2c": 211, "abdefc32b4c": 211, "abdefc48b": 211, "abdefc48b2c": 211, "abdefc48b4c": 211, "abdefc64b": 211, "abdefc64b2c": 211, "abdefc64b4c": 211, "adefcb": 211, "adefcb2c": 211, "adefcb4c": 211, "abc32a32b": 211, "bac8a16b2a": 211, "bacd8a16b2a": 211, "abcde8a16b2a": 211, "acbd8b16c2b": 211, "bacde8a16b2a": 211, "acbde8b16c2b": 211, "abcde32a32b": 211, "abc4a8b8a4b": 211, "abcde4a8b8a4b": 211, "bac4b8a8b4a": 211, "bacd4b8a8b4a": 211, "bacde4b8a8b4a": 211, "abcd4b8c8b4c": 211, "abcdef4b8c8b4c": 211, "abcdef8b16c2b": 211, "acbdef8b16c2b": 211, "abdc16b2c": 211, "abdec16b2c": 211, "abdefc16b2c": 211, "abedc16b": 211, "acb16a2b": 211, "acdb16a4b": 211, "acdeb16a2b": 211, "adcb16a": 211, "acbd4c8b8c4b": 211, "acbde4c8b8c4b": 211, "acbdef4c8b8c4b": 211, "abc32a16b": 211, "abcd16a32b": 211, "abcd32a16b": 211, "abcde32a16b": 211, "ab48a16b": 211, "ab48a32b": 211, "abc40a16b": 211, "abc40a32b": 211, "abc48b16c": 211, "abc48b32c": 211, "abcd40a16b": 211, "abcd40a32b": 211, "ba16a16b": 211, "ba16a32b": 211, "ba16a48b": 211, "ba16a64b": 211, "ba16a16b2a": 211, "ba16a32b2a": 211, "ba16a48b2a": 211, "ba16a64b2a": 211, "ba16a16b4a": 211, "ba16a32b4a": 211, "ba16a48b4a": 211, "ba16a64b4a": 211, "ba24b8a": 211, "acb24c8b": 211, "abdc24d8c": 211, "decba16a": 211, "decba8a": 211, "defcba16a": 211, "defcba8a": 211, "acb16b16c": 211, "acb16b32c": 211, "acb16b48c": 211, "acb16b64c": 211, "acb16b16c2b": 211, "acb16b32c2b": 211, "acb16b48c2b": 211, "acb16b64c2b": 211, "acb16b16c4b": 211, "acb16b32c4b": 211, "acb16b48c4b": 211, "acb16b64c4b": 211, "acb24a": 211, "acdb24a": 211, "acdeb24a": 211, "abdc24b": 211, "abdec24b": 211, "abdefc24b": 211, "acb24a2b": 211, "acdb24a2b": 211, "acdeb24a2b": 211, "abdc24b2c": 211, "abdec24b2c": 211, "abdefc24b2c": 211, "acb24a4b": 211, "acdb24a4b": 211, "acdeb24a4b": 211, "abdc24b4c": 211, "abdec24b4c": 211, "abdefc24b4c": 211, "ab8b32a": 211, "abc8b32a": 211, "acb8b32a": 211, "abcd8b32a": 211, "acdb8b32a": 211, "abcde8b32a": 211, "acdeb8b32a": 211, "ab8b24a": 211, "abc8b24a": 211, "acb8b24a": 211, "abcd8b24a": 211, "acdb8b24a": 211, "abcde8b24a": 211, "acdeb8b24a": 211, "ab8b16a": 211, "abc8b16a": 211, "acb8b16a": 211, "abcd8b16a": 211, "acdb8b16a": 211, "abcde8b16a": 211, "acdeb8b16a": 211, "ab8b8a": 211, "format_tag_last": 211, "ncdhw16c": 211, "ncdhw4c": 211, "ncdhw8c": 211, "nchw4c": 211, "ncw16c": 211, "ncw4c": 211, "ncw8c": 211, "ncw16n16c": 211, "nchw16n16c": 211, "ncdhw16n16c": 211, "ncdhw32n32c": 211, "nchw32n32c": 211, "iohw16i16o": 211, "oi16i16o": 211, "oi16i32o": 211, "oi16i48o": 211, "oi16i64o": 211, "oi8i16o2i": 211, "oi8i32o2i": 211, "oi8i64o2i": 211, "oi4i8o4i": 211, "oi4i16o4i": 211, "oi4i24o4i": 211, "oi4i32o4i": 211, "oi4i64o4i": 211, "ohwi32o": 211, "iodhw16i16o": 211, "giohw16i16o": 211, "gohwi32o": 211, "goidhw16g": 211, "iow8o8i": 211, "iow16o16i": 211, "oiw16i16o": 211, "owi16i16o": 211, "oiw16i32o": 211, "owi16i32o": 211, "oiw16i48o": 211, "owi16i48o": 211, "oiw16i64o": 211, "owi16i64o": 211, "iow16i16o": 211, "giow16i16o": 211, "oiw16o16i": 211, "oiw16o": 211, "oiw4i8o4i": 211, "owi4i8o4i": 211, "oiw4i16o4i": 211, "owi4i16o4i": 211, "oiw4i24o4i": 211, "owi4i24o4i": 211, "oiw4i32o4i": 211, "owi4i32o4i": 211, "oiw4i64o4i": 211, "owi4i64o4i": 211, "oiw2i8o4i": 211, "oiw4i4o": 211, "oiw4o4i": 211, "oiw4o": 211, "oiw8i16o2i": 211, "owi8i16o2i": 211, "oiw8i32o2i": 211, "owi8i32o2i": 211, "oiw8i64o2i": 211, "owi8i64o2i": 211, "oiw8i8o": 211, "owi8i8o": 211, "oiw8o16i2o": 211, "oiw8o8i": 211, "oiw8o4i": 211, "oiw16i16o4i": 211, "oiw16i32o4i": 211, "oiw16i48o4i": 211, "oiw16i64o4i": 211, "oiw16i16o2i": 211, "oiw16i32o2i": 211, "oiw16i48o2i": 211, "oiw16i64o2i": 211, "oiw16o16i2o": 211, "owi16o": 211, "owi16o2i": 211, "iwo16i": 211, "iwo16i2o": 211, "iwo16i4o": 211, "owi4o": 211, "owi8o": 211, "owi8o2i": 211, "owi8o4i": 211, "iohw8o8i": 211, "iohw16o16i": 211, "ohwi16o": 211, "ohwi16o2i": 211, "ihwo16i": 211, "ihwo16i2o": 211, "ihwo16i4o": 211, "ohwi4o": 211, "ohwi8o": 211, "ohwi8o2i": 211, "ohwi8o4i": 211, "oihw16i16o": 211, "ohwi16i16o": 211, "oihw16i32o": 211, "ohwi16i32o": 211, "oihw16i48o": 211, "ohwi16i48o": 211, "oihw16i64o": 211, "ohwi16i64o": 211, "oihw16o16i": 211, "oihw16o": 211, "oihw4i8o4i": 211, "ohwi4i8o4i": 211, "oihw4i16o4i": 211, "ohwi4i16o4i": 211, "oihw4i24o4i": 211, "ohwi4i24o4i": 211, "oihw4i32o4i": 211, "ohwi4i32o4i": 211, "oihw4i64o4i": 211, "ohwi4i64o4i": 211, "oihw4i4o": 211, "oihw4o4i": 211, "oihw4o": 211, "oihw8i16o2i": 211, "ohwi8i16o2i": 211, "oihw8i32o2i": 211, "ohwi8i32o2i": 211, "oihw8i64o2i": 211, "ohwi8i64o2i": 211, "oihw8i8o": 211, "ohwi8i8o": 211, "oihw8o16i2o": 211, "oihw8o8i": 211, "oihw8o4i": 211, "oihw2i8o4i": 211, "iodhw8o8i": 211, "iodhw16o16i": 211, "odhwi16o": 211, "odhwi16o2i": 211, "idhwo16i": 211, "idhwo16i2o": 211, "idhwo16i4o": 211, "odhwi4o": 211, "odhwi8o": 211, "odhwi8o2i": 211, "odhwi8o4i": 211, "oidhw16i16o": 211, "odhwi16i16o": 211, "oidhw16i32o": 211, "odhwi16i32o": 211, "oidhw16i48o": 211, "odhwi16i48o": 211, "oidhw16i64o": 211, "odhwi16i64o": 211, "oidhw16o16i": 211, "oidhw16o16i2o": 211, "oidhw16o": 211, "oidhw4i4o": 211, "oidhw4o4i": 211, "oidhw4o": 211, "oidhw8i16o2i": 211, "odhwi8i16o2i": 211, "oidhw8i32o2i": 211, "odhwi8i32o2i": 211, "oidhw8i64o2i": 211, "odhwi8i64o2i": 211, "oidhw4i8o4i": 211, "odhwi4i8o4i": 211, "oidhw4i16o4i": 211, "odhwi4i16o4i": 211, "oidhw16i16o4i": 211, "oidhw16i32o4i": 211, "oidhw16i48o4i": 211, "oidhw16i64o4i": 211, "oidhw16i16o2i": 211, "oidhw16i32o2i": 211, "oidhw16i48o2i": 211, "oidhw16i64o2i": 211, "oidhw4i24o4i": 211, "odhwi4i24o4i": 211, "oidhw4i32o4i": 211, "odhwi4i32o4i": 211, "oidhw4i64o4i": 211, "odhwi4i64o4i": 211, "oidhw2i8o4i": 211, "oidhw8i8o": 211, "odhwi8i8o": 211, "oidhw8o8i": 211, "oidhw8o4i": 211, "giow8o8i": 211, "giow16o16i": 211, "goiw16i16o": 211, "goiw16o16i": 211, "goiw16o": 211, "goiw4i16o4i": 211, "goiw2i8o4i": 211, "goiw4i4o": 211, "goiw4o4i": 211, "goiw4o": 211, "goiw8i16o2i": 211, "goiw8i8o": 211, "goiw8o16i2o": 211, "goiw8o8i": 211, "goiw8o4i": 211, "goiw16i16o4i": 211, "goiw16i16o2i": 211, "goiw16o16i2o": 211, "gowi16o": 211, "gowi16o2i": 211, "giwo16i": 211, "giwo16i2o": 211, "giwo16i4o": 211, "gowi4o": 211, "gowi8o": 211, "gowi8o2i": 211, "gowi8o4i": 211, "goiw8g": 211, "goiw16g": 211, "giohw8o8i": 211, "giohw16o16i": 211, "gohwi16o": 211, "gohwi16o2i": 211, "gihwo16i": 211, "gihwo16i2o": 211, "gihwo16i4o": 211, "gohwi4o": 211, "gohwi8o": 211, "gohwi8o2i": 211, "gohwi8o4i": 211, "goihw16g": 211, "goihw16i16o": 211, "goihw16o16i": 211, "goihw16o": 211, "goihw4i16o4i": 211, "goihw2i8o4i": 211, "goihw4i4o": 211, "goihw4o4i": 211, "goihw4o": 211, "goihw8g": 211, "goihw8i16o2i": 211, "goihw8i8o": 211, "goihw8o16i2o": 211, "oiw4o8i8o4i": 211, "oidhw4o8i8o4i": 211, "oihw4o8i8o4i": 211, "oihw2o8i8o2i": 211, "goiw4o8i8o4i": 211, "goidhw4o8i8o4i": 211, "goihw4o8i8o4i": 211, "goihw2o8i8o2i": 211, "oihw16i16o4i": 211, "oihw16i32o4i": 211, "oihw16i48o4i": 211, "oihw16i64o4i": 211, "oihw16i16o2i": 211, "oihw16i32o2i": 211, "oihw16i48o2i": 211, "oihw16i64o2i": 211, "oihw16o16i2o": 211, "goihw16i16o4i": 211, "goihw16i16o2i": 211, "goihw16o16i2o": 211, "goihw8o8i": 211, "goihw8o4i": 211, "giodhw16i16o": 211, "giodhw8o8i": 211, "giodhw16o16i": 211, "godhwi16o": 211, "godhwi16o2i": 211, "gidhwo16i": 211, "gidhwo16i2o": 211, "gidhwo16i4o": 211, "godhwi4o": 211, "godhwi8o": 211, "godhwi8o2i": 211, "godhwi8o4i": 211, "goidhw16i16o": 211, "goidhw16o16i": 211, "goidhw16o16i2o": 211, "goidhw16o": 211, "goidhw4i4o": 211, "goidhw4o4i": 211, "goidhw4o": 211, "goidhw8i16o2i": 211, "goidhw4i16o4i": 211, "goidhw16i16o4i": 211, "goidhw16i16o2i": 211, "goidhw2i8o4i": 211, "goidhw8i8o": 211, "goidhw8o8i": 211, "goidhw8o4i": 211, "goiw2i4o2i": 211, "goihw2i4o2i": 211, "goidhw2i4o2i": 211, "goiw2o4i2o": 211, "goihw2o4i2o": 211, "goidhw2o4i2o": 211, "goiw4i8o2i": 211, "goihw4i8o2i": 211, "goidhw4i8o2i": 211, "goiw4o8i2o": 211, "goihw4o8i2o": 211, "goidhw4o8i2o": 211, "ldoi16o": 211, "ldoi32o": 211, "ldoi16o4i": 211, "ldoi32o4i": 211, "ldgoi16o": 211, "ldgoi16o4i": 211, "ldgoi32o": 211, "ldgoi32o2i": 211, "ldgoi32o4i": 211, "owi16o4i": 211, "ohwi16o4i": 211, "gowi16o4i": 211, "gohwi16o4i": 211, "odhwi16o4i": 211, "godhwi16o4i": 211, "owi32o": 211, "owi32o2i": 211, "owi32o4i": 211, "owi48o": 211, "owi48o2i": 211, "owi48o4i": 211, "owi64o": 211, "owi64o2i": 211, "owi64o4i": 211, "iwo32i": 211, "iwo32i2o": 211, "iwo32i4o": 211, "iwo48i": 211, "iwo48i2o": 211, "iwo48i4o": 211, "iwo64i": 211, "iwo64i2o": 211, "iwo64i4o": 211, "wio2i": 211, "wio4i": 211, "gowi32o": 211, "gowi32o2i": 211, "gowi32o4i": 211, "gowi48o": 211, "gowi48o2i": 211, "gowi48o4i": 211, "gowi64o": 211, "gowi64o2i": 211, "gowi64o4i": 211, "giwo32i": 211, "giwo32i2o": 211, "giwo32i4o": 211, "giwo48i": 211, "giwo48i2o": 211, "giwo48i4o": 211, "giwo64i": 211, "giwo64i2o": 211, "giwo64i4o": 211, "gwio": 211, "gwio2i": 211, "gwio4i": 211, "ohwi32o2i": 211, "ohwi32o4i": 211, "ohwi48o": 211, "ohwi48o2i": 211, "ohwi48o4i": 211, "ohwi64o": 211, "ohwi64o2i": 211, "ohwi64o4i": 211, "ihwo32i": 211, "ihwo32i2o": 211, "ihwo32i4o": 211, "ihwo48i": 211, "ihwo48i2o": 211, "ihwo48i4o": 211, "ihwo64i": 211, "ihwo64i2o": 211, "ihwo64i4o": 211, "hwio2i": 211, "hwio4i": 211, "gohwi32o2i": 211, "gohwi32o4i": 211, "gohwi48o": 211, "gohwi48o2i": 211, "gohwi48o4i": 211, "gohwi64o": 211, "gohwi64o2i": 211, "gohwi64o4i": 211, "gihwo32i": 211, "gihwo32i2o": 211, "gihwo32i4o": 211, "gihwo48i": 211, "gihwo48i2o": 211, "gihwo48i4o": 211, "gihwo64i": 211, "gihwo64i2o": 211, "gihwo64i4o": 211, "ghwio": 211, "ghwio2i": 211, "ghwio4i": 211, "odhwi32o": 211, "odhwi32o2i": 211, "odhwi32o4i": 211, "odhwi48o": 211, "odhwi48o2i": 211, "odhwi48o4i": 211, "odhwi64o": 211, "odhwi64o2i": 211, "odhwi64o4i": 211, "idhwo32i": 211, "idhwo32i2o": 211, "idhwo32i4o": 211, "idhwo48i": 211, "idhwo48i2o": 211, "idhwo48i4o": 211, "idhwo64i": 211, "idhwo64i2o": 211, "idhwo64i4o": 211, "dhwio2i": 211, "dhwio4i": 211, "godhwi32o": 211, "godhwi32o2i": 211, "godhwi32o4i": 211, "godhwi48o": 211, "godhwi48o2i": 211, "godhwi48o4i": 211, "godhwi64o": 211, "godhwi64o2i": 211, "godhwi64o4i": 211, "gidhwo32i": 211, "gidhwo32i2o": 211, "gidhwo32i4o": 211, "gidhwo48i": 211, "gidhwo48i2o": 211, "gidhwo48i4o": 211, "gidhwo64i": 211, "gidhwo64i2o": 211, "gidhwo64i4o": 211, "gdhwio": 211, "gdhwio2i": 211, "gdhwio4i": 211, "ldio32i": 211, "ldgio16i": 211, "ldgio32i": 211, "ldgio32i2o": 211, "ncdhw32c": 211, "nchw32c": 211, "ncw32c": 211, "ncw32n16c": 211, "nchw32n16c": 211, "ncdhw32n16c": 211, "ncw32n32c": 211, "oi16i16o4i": 211, "iow8o16i2o": 211, "iohw8o16i2o": 211, "owhi16o": 211, "oidhw8o16i2o": 211, "iodhw8o16i2o": 211, "goiw4g": 211, "giow8o16i2o": 211, "goiw32g": 211, "goihw4g": 211, "giohw8o16i2o": 211, "goihw32g": 211, "gowhi16o": 211, "iow4i8o8i4o": 211, "iohw4i8o8i4o": 211, "iodhw4i8o8i4o": 211, "giow4i8o8i4o": 211, "giohw4i8o8i4o": 211, "giodhw4i8o8i4o": 211, "goidhw8o16i2o": 211, "giodhw8o16i2o": 211, "goidhw32g": 211, "oi16i32o4i": 211, "oi16i48o4i": 211, "oi16i64o4i": 211, "oi16i16o2i": 211, "oi16i32o2i": 211, "oi16i48o2i": 211, "oi16i64o2i": 211, "abdec16c16b4c": 211, "acb16b16a2b": 211, "abdc16c16b2c": 211, "acb16b16a4b": 211, "abdc16c16b4c": 211, "acdb16b16a2b": 211, "abdefc16c16b4c": 211, "acdeb16b16a4b": 211, "acb16b32a2b": 211, "acb16b32a4b": 211, "acb16b48a2b": 211, "acb16b48a4b": 211, "acb16b64a2b": 211, "acb16b64a4b": 211, "abdc16c32b2c": 211, "abdc16c32b4c": 211, "abdc16c48b2c": 211, "abdc16c48b4c": 211, "abdc16c64b2c": 211, "abdc16c64b4c": 211, "acdb16b32a2b": 211, "acdb16b32a4b": 211, "acdb16b48a2b": 211, "acdb16b48a4b": 211, "acdb16b64a2b": 211, "acdb16b64a4b": 211, "abdec16c32b2c": 211, "abdec16c32b4c": 211, "abdec16c48b2c": 211, "abdec16c48b4c": 211, "abdec16c64b2c": 211, "abdec16c64b4c": 211, "acdeb16b32a2b": 211, "acdeb16b32a4b": 211, "acdeb16b48a2b": 211, "acdeb16b48a4b": 211, "acdeb16b64a2b": 211, "acdeb16b64a4b": 211, "abdefc16c32b2c": 211, "abdefc16c32b4c": 211, "abdefc16c48b2c": 211, "abdefc16c48b4c": 211, "abdefc16c64b2c": 211, "abdefc16c64b4c": 211, "owi16i16o2i": 211, "gowi16i16o2i": 211, "ohwi16i16o2i": 211, "gohwi16i16o2i": 211, "odhwi16i16o2i": 211, "godhwi16i16o2i": 211, "owi16i16o4i": 211, "gowi16i16o4i": 211, "ohwi16i16o4i": 211, "gohwi16i16o4i": 211, "odhwi16i16o4i": 211, "godhwi16i16o4i": 211, "owi16i32o2i": 211, "owi16i32o4i": 211, "owi16i48o2i": 211, "owi16i48o4i": 211, "owi16i64o2i": 211, "owi16i64o4i": 211, "gowi16i32o2i": 211, "gowi16i32o4i": 211, "gowi16i48o2i": 211, "gowi16i48o4i": 211, "gowi16i64o2i": 211, "gowi16i64o4i": 211, "ohwi16i32o2i": 211, "ohwi16i32o4i": 211, "ohwi16i48o2i": 211, "ohwi16i48o4i": 211, "ohwi16i64o2i": 211, "ohwi16i64o4i": 211, "gohwi16i32o2i": 211, "gohwi16i32o4i": 211, "gohwi16i48o2i": 211, "gohwi16i48o4i": 211, "gohwi16i64o2i": 211, "gohwi16i64o4i": 211, "odhwi16i32o2i": 211, "odhwi16i32o4i": 211, "odhwi16i48o2i": 211, "odhwi16i48o4i": 211, "odhwi16i64o2i": 211, "odhwi16i64o4i": 211, "idhwo16o32i2o": 211, "idhwo16o32i4o": 211, "idhwo16o48i2o": 211, "idhwo16o48i4o": 211, "idhwo16o64i2o": 211, "idhwo16o64i4o": 211, "godhwi16i32o2i": 211, "godhwi16i32o4i": 211, "godhwi16i48o2i": 211, "godhwi16i48o4i": 211, "godhwi16i64o2i": 211, "godhwi16i64o4i": 211, "gidhwo16o32i2o": 211, "gidhwo16o32i4o": 211, "gidhwo16o48i2o": 211, "gidhwo16o48i4o": 211, "gidhwo16o64i2o": 211, "gidhwo16o64i4o": 211, "iwo16o16i2o": 211, "iwo16o16i4o": 211, "ihwo16o16i2o": 211, "ihwo16o16i4o": 211, "idhwo16o16i2o": 211, "idhwo16o16i4o": 211, "giwo16o16i2o": 211, "giwo16o16i4o": 211, "gihwo16o16i2o": 211, "gihwo16o16i4o": 211, "gidhwo16o16i2o": 211, "gidhwo16o16i4o": 211, "iwo16o32i2o": 211, "iwo16o32i4o": 211, "iwo16o48i2o": 211, "iwo16o48i4o": 211, "iwo16o64i2o": 211, "iwo16o64i4o": 211, "giwo16o32i2o": 211, "giwo16o32i4o": 211, "giwo16o48i2o": 211, "giwo16o48i4o": 211, "giwo16o64i2o": 211, "giwo16o64i4o": 211, "ihwo16o32i2o": 211, "ihwo16o32i4o": 211, "ihwo16o48i2o": 211, "ihwo16o48i4o": 211, "ihwo16o64i2o": 211, "ihwo16o64i4o": 211, "gihwo16o32i2o": 211, "gihwo16o32i4o": 211, "gihwo16o48i2o": 211, "gihwo16o48i4o": 211, "gihwo16o64i2o": 211, "gihwo16o64i4o": 211, "abdec16c16b2c": 211, "abdefc16c16b2c": 211, "acdb16b16a4b": 211, "acdeb16b16a2b": 211, "hwiog16g": 211, "hwiog8g": 211, "dhwiog16g": 211, "dhwiog8g": 211, "abc4a2b": 211, "abc8a2b": 211, "abcd4a2b": 211, "abcde4a2b": 211, "abcde8a2b": 211, "abcd4a8b8a2b": 211, "ncdhw40n32c": 211, "nchw40n32c": 211, "ncw40n32c": 211, "oidhw4o8i8o2i": 211, "oihw4o8i8o2i": 211, "oiw4o8i8o2i": 211, "goidhw4o8i8o2i": 211, "goihw4o8i8o2i": 211, "goiw4o8i8o2i": 211, "iodhw4i8o8i2o": 211, "iohw4i8o8i2o": 211, "iow4i8o8i2o": 211, "giodhw4i8o8i2o": 211, "giohw4i8o8i2o": 211, "giow4i8o8i2o": 211, "abcd8b2c": 211, "abcde40a16b": 211, "abcde40a32b": 211, "abcde8b2c": 211, "abcde4a8b8a2b": 211, "abc4a8b8a2b": 211, "abcdef4b8c8b2c": 211, "abcde4b8c8b2c": 211, "abcd4b8c8b2c": 211, "bacde4b8a8b2a": 211, "bacd4b8a8b2a": 211, "bac4b8a8b2a": 211, "acbdef4c8b8c2b": 211, "acbde4c8b8c2b": 211, "acbd4c8b8c2b": 211, "abcdef8b2c": 211, "ab32a16b": 211, "ab32a32b": 211, "ba4b8a8b2a": 211, "ba4b8a8b4a": 211, "abc32b16c": 211, "abc32b32c": 211, "acb4c8b8c2b": 211, "acb4c8b8c4b": 211, "abc2b8a16b4a": 211, "abcd2b8a16b4a": 211, "abcde2b8a16b4a": 211, "abc2a8b16a4b": 211, "abc2a8b16a2b": 211, "abc2b32a8b": 211, "abcd2a8b16a4b": 211, "abcd2a8b16a2b": 211, "acbd2c8b16c2b": 211, "abcd2b32a8b": 211, "abcd2c8b16c2b": 211, "abcde2a8b16a4b": 211, "abcde2a8b16a2b": 211, "acbde2c8b16c2b": 211, "abcde2b32a8b": 211, "abc2b8c16b2c": 211, "abcd2b8c16b2c": 211, "abcde2b8c16b2c": 211, "abcdef2b8c16b2c": 211, "bacde2b8a16b4a": 211, "bacd2b8a16b4a": 211, "bac2b8a16b4a": 211, "bacde2b8a16b2a": 211, "bacd2b8a16b2a": 211, "bac2b8a16b2a": 211, "abcde2c8b16c2b": 211, "abcdef2c8b16c2b": 211, "acbdef2c8b16c2b": 211, "abcd2b8c16b4c": 211, "abcde2b8c16b4c": 211, "ncdhw40n16c": 211, "ncw40n16c": 211, "nchw40n16c": 211, "ncw2c32n8c": 211, "nchw2c32n8c": 211, "ncdhw2c32n8c": 211, "oiw2i8o16i4o": 211, "oihw2i8o16i4o": 211, "oidhw2i8o16i4o": 211, "oiw2o8i16o4i": 211, "oiw2o8i16o2i": 211, "iow2i8o16i4o": 211, "iow2i8o16i2o": 211, "oihw2o8i16o4i": 211, "oihw2o8i16o2i": 211, "iohw2i8o16i4o": 211, "iohw2i8o16i2o": 211, "oidhw2o8i16o4i": 211, "oidhw2o8i16o2i": 211, "iodhw2i8o16i4o": 211, "iodhw2i8o16i2o": 211, "goiw2o8i16o2i": 211, "giow2i8o16i2o": 211, "giohw2i8o16i2o": 211, "giodhw2i8o16i2o": 211, "goihw2o8i16o2i": 211, "goidhw2o8i16o2i": 211, "goiw2o8i16o4i": 211, "goihw2o8i16o4i": 211, "ba4b8a16b2a": 211, "ba4b8a16b4a": 211, "acb4c8b16c2b": 211, "acb4c8b16c4b": 211, "acb16c2b": 211, "acb16c4b": 211, "ba16b2a": 211, "ba16b4a": 211, "ba4b4a": 211, "ba8b4a": 211, "abc16b16c": 211, "abc16b32c": 211, "ab16a16b": 211, "ab16a32b": 211, "abcde16a16b2a": 211, "abcdef16b16c2b": 211, "acedb16a": 211, "abdfec16b": 211, "odwhi16o": 211, "godwhi16o": 211, "abdec64e2c": 211, "abdec64e4c": 211, "ldgoi64o2i": 211, "ldgoi64o4i": 211, "abcd4c": 211, "abcde4c": 211, "abcdef4c": 211, "abcde32c": 211, "abcdef32c": 211, "acdefb16b32c2b": 211, "acdefb16b32c4b": 211, "acdefb16b48c2b": 211, "acdefb16b48c4b": 211, "acdefb16b64c2b": 211, "acdefb16b64c4b": 211, "bcdea16a32b2a": 211, "bcdea16a32b4a": 211, "bcdea16a48b2a": 211, "bcdea16a48b4a": 211, "bcdea16a64b2a": 211, "bcdea16a64b4a": 211, "acdefb32c": 211, "acdefb32c2b": 211, "acdefb32c4b": 211, "acdefb48c": 211, "acdefb48c2b": 211, "acdefb48c4b": 211, "acdefb64c": 211, "acdefb64c2b": 211, "acdefb64c4b": 211, "bcdea32b": 211, "bcdea32b2a": 211, "bcdea32b4a": 211, "bcdea48b": 211, "bcdea48b2a": 211, "bcdea48b4a": 211, "bcdea64b": 211, "bcdea64b2a": 211, "bcdea64b4a": 211, "bca32b": 211, "bca32b2a": 211, "bca32b4a": 211, "bca48b": 211, "bca48b2a": 211, "bca48b4a": 211, "bca64b": 211, "bca64b2a": 211, "bca64b4a": 211, "acdb32c": 211, "acdb32c2b": 211, "acdb32c4b": 211, "acdb48c": 211, "acdb48c2b": 211, "acdb48c4b": 211, "acdb64c": 211, "acdb64c2b": 211, "acdb64c4b": 211, "bca16a16b2a": 211, "bca16a16b4a": 211, "bcda16a16b2a": 211, "bcda16a16b4a": 211, "bcdea16a16b2a": 211, "bcdea16a16b4a": 211, "acdb16b16c2b": 211, "acdb16b16c4b": 211, "acdeb16b16c2b": 211, "acdeb16b16c4b": 211, "acdefb16b16c2b": 211, "acdefb16b16c4b": 211, "bca16a32b2a": 211, "bca16a32b4a": 211, "bca16a48b2a": 211, "bca16a48b4a": 211, "bca16a64b2a": 211, "bca16a64b4a": 211, "acdb16b32c2b": 211, "acdb16b32c4b": 211, "acdb16b48c2b": 211, "acdb16b48c4b": 211, "acdb16b64c2b": 211, "acdb16b64c4b": 211, "bcda16a32b2a": 211, "bcda16a32b4a": 211, "bcda16a48b2a": 211, "bcda16a48b4a": 211, "bcda16a64b2a": 211, "bcda16a64b4a": 211, "acdeb16b32c2b": 211, "acdeb16b32c4b": 211, "acdeb16b48c2b": 211, "acdeb16b48c4b": 211, "acdeb16b64c2b": 211, "acdeb16b64c4b": 211, "bca16b": 211, "bca16b2a": 211, "bca16b4a": 211, "bcda16b": 211, "bcda16b2a": 211, "bcda16b4a": 211, "bcdea16b": 211, "bcdea16b2a": 211, "bcdea16b4a": 211, "acdb16c": 211, "acdb16c2b": 211, "acdb16c4b": 211, "acdeb16c": 211, "acdeb16c2b": 211, "acdeb16c4b": 211, "acdefb16c": 211, "acdefb16c2b": 211, "acdefb16c4b": 211, "bcda32b": 211, "bcda32b2a": 211, "bcda32b4a": 211, "bcda48b": 211, "bcda48b2a": 211, "bcda48b4a": 211, "bcda64b": 211, "bcda64b2a": 211, "bcda64b4a": 211, "acdeb32c": 211, "acdeb32c2b": 211, "acdeb32c4b": 211, "acdeb48c": 211, "acdeb48c2b": 211, "acdeb48c4b": 211, "acdeb64c": 211, "acdeb64c2b": 211, "acdeb64c4b": 211, "nchw16n32c": 211, "goiw4i": 211, "goiw32i": 211, "goihw4i": 211, "goihw32i": 211, "goidhw4i": 211, "goidhw32i": 211, "cab": 211, "cdab": 211, "cdeab": 211, "woi": 211, "hwoi": 211, "dhwoi": 211, "owi24o": 211, "ohwi24o": 211, "odhwi24o": 211, "gowi24o": 211, "gohwi24o": 211, "godhwi24o": 211, "owi24o2i": 211, "ohwi24o2i": 211, "odhwi24o2i": 211, "gowi24o2i": 211, "gohwi24o2i": 211, "godhwi24o2i": 211, "owi24o4i": 211, "ohwi24o4i": 211, "odhwi24o4i": 211, "gowi24o4i": 211, "gohwi24o4i": 211, "godhwi24o4i": 211, "oi8i32o": 211, "oiw8i32o": 211, "owi8i32o": 211, "oihw8i32o": 211, "ohwi8i32o": 211, "oidhw8i32o": 211, "odhwi8i32o": 211, "oi8i24o": 211, "oiw8i24o": 211, "owi8i24o": 211, "oihw8i24o": 211, "ohwi8i24o": 211, "oidhw8i24o": 211, "odhwi8i24o": 211, "oi8i16o": 211, "oiw8i16o": 211, "owi8i16o": 211, "oihw8i16o": 211, "ohwi8i16o": 211, "oidhw8i16o": 211, "odhwi8i16o": 211, "oi8i8o": 211, "ab4b8a4b": 211, "ab4b24a4b": 211, "abc4b8a4b": 211, "acb4b8a4b": 211, "abc4b24a4b": 211, "acb4b24a4b": 211, "abcd4b8a4b": 211, "acdb4b8a4b": 211, "abcd4b24a4b": 211, "acdb4b24a4b": 211, "abcde4b8a4b": 211, "acdeb4b8a4b": 211, "abcde4b24a4b": 211, "acdeb4b24a4b": 211, "bca8b": 211, "bca8b2a": 211, "bcda8b": 211, "bcda8b2a": 211, "bcdea8b": 211, "bcdea8b2a": 211, "acdb8c": 211, "acdb8c2b": 211, "acdeb8c": 211, "acdeb8c2b": 211, "acdefb8c": 211, "acdefb8c2b": 211, "bca24b": 211, "bca24b2a": 211, "bcda24b": 211, "bcda24b2a": 211, "bcdea24b": 211, "bcdea24b2a": 211, "acdb24c": 211, "acdb24c2b": 211, "acdeb24c": 211, "acdeb24c2b": 211, "acdefb24c": 211, "acdefb24c2b": 211, "iwo8i": 211, "iwo8i2o": 211, "iwo24i": 211, "iwo24i2o": 211, "ihwo8i": 211, "ihwo8i2o": 211, "ihwo24i": 211, "ihwo24i2o": 211, "idhwo8i": 211, "idhwo8i2o": 211, "idhwo24i": 211, "idhwo24i2o": 211, "giwo8i": 211, "giwo8i2o": 211, "giwo24i": 211, "giwo24i2o": 211, "gihwo8i": 211, "gihwo8i2o": 211, "gihwo24i": 211, "gihwo24i2o": 211, "gidhwo8i": 211, "gidhwo8i2o": 211, "gidhwo24i": 211, "gidhwo24i2o": 211, "ab8b24a2b": 211, "abc8b24a2b": 211, "acb8b24a2b": 211, "abcd8b24a2b": 211, "acdb8b24a2b": 211, "abcde8b24a2b": 211, "acdeb8b24a2b": 211, "ab8b8a2b": 211, "abc8b8a2b": 211, "acb8b8a2b": 211, "abcd8b8a2b": 211, "acdb8b8a2b": 211, "abcde8b8a2b": 211, "acdeb8b8a2b": 211, "oi8i8o2i": 211, "oi8i24o2i": 211, "oiw8i8o2i": 211, "owi8i8o2i": 211, "oiw8i24o2i": 211, "owi8i24o2i": 211, "oihw8i8o2i": 211, "ohwi8i8o2i": 211, "oihw8i24o2i": 211, "ohwi8i24o2i": 211, "oidhw8i8o2i": 211, "odhwi8i8o2i": 211, "oidhw8i24o2i": 211, "odhwi8i24o2i": 211, "bca8b4a": 211, "bcda8b4a": 211, "bcdea8b4a": 211, "acdb8c4b": 211, "acdeb8c4b": 211, "acdefb8c4b": 211, "bca24b4a": 211, "bcda24b4a": 211, "bcdea24b4a": 211, "acdb24c4b": 211, "acdeb24c4b": 211, "acdefb24c4b": 211, "abc16a4b": 211, "abcd16a4b": 211, "abcde16a4b": 211, "iwo8i4o": 211, "iwo24i4o": 211, "ihwo8i4o": 211, "ihwo24i4o": 211, "idhwo8i4o": 211, "idhwo24i4o": 211, "giwo8i4o": 211, "giwo24i4o": 211, "gihwo8i4o": 211, "gihwo24i4o": 211, "gidhwo8i4o": 211, "gidhwo24i4o": 211, "ba2a24b": 211, "acb2b24c": 211, "ba2a8b": 211, "acb2b8c": 211, "ba8a24b": 211, "acb8b24c": 211, "ba8a16b": 211, "acb8b16c": 211, "ba8a8b": 211, "acb8b8c": 211, "bcad": 211, "cabd": 211, "dabc": 211, "decba4a": 211, "defcba4a": 211, "hwiog4g": 211, "dhwiog4g": 211, "dnnl_sparse_encoding_undef": [212, 234], "csr": [212, 234, 258, 323, 397, 543], "dnnl_csr": [212, 234], "dnnl_pack": [212, 234], "coo": [212, 234, 257, 323, 396, 543], "dnnl_coo": [212, 234], "unstructur": [212, 234], "sparsiti": [212, 234], "use_global_stat": 213, "use_scal": [213, 243, 272, 275, 379, 419, 425], "use_shift": [213, 243, 272, 275, 379, 419, 425], "fuse_norm_relu": [213, 243, 379], "fuse_norm_add_relu": 213, "rms_norm": 213, "0x0u": 214, "0x1u": [214, 238], "0x2u": [214, 238], "0x4u": 214, "0x8u": 214, "0x10u": 214, "0x20u": 214, "dnnl_ocl_interop_usm": [215, 216, 324, 369], "dnnl_ocl_interop_buff": [215, 216, 324, 369], "dnnl_ocl_typ": 216, "dnnl_pack_type_undef": [217, 241], "dnnl_pack_type_no_tran": [217, 241, 343], "dnnl_pack_type_tran": [217, 241, 343], "dnnl_pack_type_pack32": [217, 241, 343], "guard": [217, 241], "dnnl_undefined_primit": [218, 219, 305], "dnnl_reorder": [218, 219], "dnnl_shuffl": [218, 219], "dnnl_concat": [218, 219], "dnnl_sum": [218, 219, 305], "dnnl_convolut": [218, 219, 305, 549], "dnnl_deconvolut": [218, 219], "dnnl_eltwis": [218, 219, 305], "dnnl_lrn": [218, 219], "dnnl_batch_norm": [218, 219], "dnnl_inner_product": [218, 219], "dnnl_rnn": [218, 219], "dnnl_binari": [218, 219, 305, 549], "dnnl_matmul": [218, 219], "dnnl_resampl": [218, 219], "dnnl_pool": [218, 219], "dnnl_reduct": [218, 219], "dnnl_prelu": [218, 219], "dnnl_softmax": [218, 219], "dnnl_layer_norm": [218, 219], "dnnl_group_norm": [218, 219], "summat": [218, 226, 227, 580], "dnnl_gemm": 219, "dnnl_primitive_kind_max": 219, "dnnl_profiling_data_kind_undef": [220, 221], "dnnl_profiling_data_kind_tim": [220, 221], "nanosecond": [220, 221], "dnnl_profiling_data_max": 221, "dnnl_prop_kind_undef": [222, 223], "dnnl_forward": [222, 223, 246, 254, 265, 385, 395, 405], "dnnl_backward_weight": [222, 223], "backward_bia": 222, "dnnl_backward_bia": [222, 223], "160": 223, "192": [223, 247, 438], "193": 223, "dnnl_query_undef": [224, 225], "dnnl_query_engin": [224, 225], "primitive_kind": 224, "dnnl_query_primitive_kind": [224, 225], "num_of_inputs_s32": 224, "dnnl_query_num_of_inputs_s32": [224, 225, 329], "num_of_outputs_s32": 224, "dnnl_query_num_of_outputs_s32": [224, 225, 329], "time_estimate_f64": 224, "dnnl_query_time_estimate_f64": [224, 225], "dnnl_query_memory_consumption_s64": [224, 225], "scratchpad_engin": [224, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "dnnl_query_scratchpad_engin": [224, 225], "reorder_src_engin": 224, "dnnl_query_reorder_src_engin": [224, 225], "reorder_dst_engin": 224, "dnnl_query_reorder_dst_engin": [224, 225], "dnnl_query_impl_info_str": [224, 225, 329], "dnnl_query_prop_kind": [224, 225], "cache_blob_id_size_s64": 224, "dnnl_query_cache_blob_id_size_s64": [224, 225], "cache_blob_id": [224, 298, 324, 369], "dnnl_query_cache_blob_id": [224, 225], "dnnl_query_dil": [224, 225], "dnnl_query_padding_l": [224, 225], "dnnl_query_padding_r": [224, 225], "epsilon_f32": 224, "dnnl_query_epsilon_f32": [224, 225], "dnnl_query_flag": [224, 225], "alg_kind": [224, 298, 305, 307, 311, 313, 314, 321, 325, 331, 333, 337], "dnnl_query_alg_kind": [224, 225], "alpha_f32": 224, "dnnl_query_alpha_f32": [224, 225], "beta_f32": 224, "dnnl_query_beta_f32": [224, 225], "axis_s32": 224, "dnnl_query_axis_s32": [224, 225], "local_size_s64": 224, "dnnl_query_local_size_s64": [224, 225], "k_f32": 224, "dnnl_query_k_f32": [224, 225], "p_f32": 224, "dnnl_query_p_f32": [224, 225], "dnnl_query_factor": [224, 225], "cell_kind": [224, 569], "dnnl_query_cell_kind": [224, 225], "dnnl_query_direct": [224, 225], "activation_kind": 224, "dnnl_query_activation_kind": [224, 225], "dnnl_query_kernel": [224, 225], "group_size_s64": 224, "dnnl_query_group_size_s64": [224, 225], "src_md": [224, 243, 245, 246, 251, 260, 268, 269, 272, 274, 275, 277, 279, 283, 284, 285, 286, 287, 289, 290, 291, 379, 383, 385, 390, 400, 409, 411, 419, 423, 425, 430, 434, 439, 441, 443, 445, 447, 450, 452, 454, 560, 564], "dnnl_query_src_md": [224, 225, 246, 254, 329, 385, 395], "diff_src_md": 224, "dnnl_query_diff_src_md": [224, 225], "dnnl_query_weights_md": [224, 225, 246, 254, 329, 385, 395], "diff_weights_md": 224, "dnnl_query_diff_weights_md": [224, 225, 254, 395], "dst_md": [224, 243, 244, 246, 257, 258, 260, 268, 272, 274, 275, 277, 279, 283, 284, 285, 286, 287, 289, 290, 379, 381, 385, 396, 397, 400, 409, 419, 423, 425, 430, 434, 439, 441, 443, 445, 447, 450, 452, 560, 564], "dnnl_query_dst_md": [224, 225, 246, 254, 329, 385, 395], "diff_dst_md": 224, "dnnl_query_diff_dst_md": [224, 225, 254, 395], "dnnl_query_workspace_md": [224, 225, 246, 254, 329, 385, 395], "dnnl_query_scratchpad_md": [224, 225], "dnnl_query_exec_arg_md": [224, 225, 324, 329, 340], "ndims_s32": 224, "dnnl_query_ndims_s32": [224, 225, 323], "dnnl_query_dim": [224, 225, 323], "dnnl_query_data_typ": [224, 225, 323], "submemory_offset_s64": 224, "dnnl_query_submemory_offset_s64": [224, 225, 323], "padded_dim": [224, 323, 329, 543], "dnnl_query_padded_dim": [224, 225, 323], "padded_offset": 224, "dnnl_query_padded_offset": [224, 225, 323], "dnnl_query_format_kind": [224, 225, 323], "inner_nblks_s32": 224, "dnnl_query_inner_nblks_s32": [224, 225, 323], "dnnl_query_sparse_encod": [224, 225, 323], "nnz_s64": 224, "dnnl_query_nnz_s64": [224, 225, 323], "num_handles_s32": 224, "dnnl_query_num_handles_s32": [224, 225, 323], "dnnl_query_t": [224, 298, 323, 329, 365], "estim": [224, 225], "submemori": [224, 225, 323, 543], "dnnl_query_some_md": 225, "dnnl_query_max": 225, "dnnl_primitive_desc_queri": [225, 298, 329], "dnnl_query_": 225, "_engin": 225, "dnnl_engine_t": [225, 246, 254, 265, 298, 306, 307, 310, 311, 313, 314, 315, 317, 318, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 352, 356, 358, 360, 361, 385, 395, 405], "dnnl_primitive_kind_t": [225, 298, 305, 329, 365], "_s32": 225, "_s64": 225, "_f64": 225, "_str": 225, "_md": [225, 411, 438], "const_dnnl_memory_desc_t": [225, 246, 254, 298, 305, 306, 307, 310, 311, 313, 314, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 336, 337, 339, 340, 385, 395], "_pd": [225, 411], "const_dnnl_primitive_desc_t": [225, 298, 306, 311, 313, 314, 317, 318, 320, 321, 325, 326, 329, 333, 334, 336, 337, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 544, 546, 550, 552, 555, 561, 563, 565, 567, 570, 572, 574, 576, 580, 588, 590], "dnnl_alg_kind_t": [225, 298, 305, 307, 311, 313, 314, 321, 325, 329, 331, 333, 334, 337, 365], "dnnl_rnn_direction_t": [225, 298, 334, 365], "dnnl_data_type_t": [225, 298, 305, 312, 320, 323, 343, 355, 365, 501, 541], "dnnl_format_kind_t": [225, 298, 323], "dnnl_sparse_encoding_t": [225, 298, 323], "thumb": 225, "dnnl_primitive_desc_clon": [225, 298, 329], "stub": 225, "grad": 225, "dnnl_rnn_direction_undef": [226, 227], "unidirectional_left2right": [226, 242, 261, 262, 276, 278, 288, 296, 377, 401, 402, 427, 432, 449, 459], "dnnl_unidirectional_left2right": [226, 227], "unidirectional_right2left": 226, "dnnl_unidirectional_right2left": [226, 227], "dnnl_bidirectional_concat": [226, 227], "dnnl_bidirectional_sum": [226, 227], "unidirect": [226, 227, 261, 262, 288, 401, 402, 449], "bidirect": [226, 227, 261, 262, 401, 402], "dnnl_rnn_flags_undef": [228, 229], "dnnl_rnn_flags_diff_weights_overwrit": [228, 229], "dnnl_rounding_mode_environ": [230, 231], "dnnl_rounding_mode_stochast": [230, 231], "dictat": [230, 231], "trail": [230, 231], "dnnl_scratchpad_mode_librari": [232, 233, 305], "dnnl_scratchpad_mode_us": [232, 233, 305], "safeti": [232, 233], "in_ord": [237, 266, 292, 295, 406, 417, 418], "dnnl_stream_in_ord": [237, 238], "out_of_ord": 237, "dnnl_stream_out_of_ord": [237, 238], "default_flag": [237, 579], "dnnl_stream_default_flag": [237, 238, 246, 254, 265, 385, 395, 405], "dnnl_stream_flags_max": 238, "dnnl_sycl_interop_usm": [239, 240, 340], "dnnl_sycl_interop_buff": [239, 240, 340], "dnnl_sycl_typ": 240, "tran": [241, 587], "augru_exampl": [242, 298, 377], "example_allows_unimpl": [242, 248, 249, 260, 262, 298, 377, 388, 400, 402], "attention_dim": [242, 377], "weights_dim": [242, 252, 260, 267, 274, 278, 279, 284, 296, 377, 392, 400, 407, 423, 432, 434, 441, 459], "bias_dim": [242, 252, 267, 274, 276, 278, 279, 296, 377, 392, 407, 423, 427, 432, 434, 459], "dst_dim": [242, 252, 260, 267, 268, 274, 278, 279, 283, 284, 285, 287, 377, 392, 400, 407, 409, 423, 432, 434, 439, 441, 443, 447], "src_layer_data": [242, 276, 278, 296, 377, 427, 432, 459], "attention_data": [242, 377], "weights_layer_data": [242, 276, 278, 296, 377, 427, 432, 459], "weights_iter_data": [242, 276, 278, 296, 377, 427, 432, 459], "bias_data": [242, 252, 267, 274, 276, 278, 279, 296, 377, 392, 407, 423, 427, 432, 434, 459], "dst_layer_data": [242, 276, 278, 296, 377, 427, 432, 459], "sin": [242, 243, 244, 245, 252, 260, 267, 272, 274, 275, 276, 278, 279, 291, 296, 377, 379, 381, 383, 392, 400, 407, 419, 423, 425, 427, 432, 434, 454, 459], "src_layer_md": [242, 276, 278, 296, 377, 427, 432, 459], "attention_md": [242, 377], "bias_md": [242, 274, 276, 278, 279, 296, 377, 423, 427, 432, 434, 459], "dst_layer_md": [242, 276, 278, 296, 377, 427, 432, 459], "src_layer_mem": [242, 276, 278, 296, 377, 427, 432, 459], "attention_mem": [242, 377], "bias_mem": [242, 274, 276, 278, 279, 296, 377, 423, 427, 432, 434, 459], "dst_layer_mem": [242, 276, 278, 296, 377, 427, 432, 459], "user_weights_layer_mem": [242, 276, 278, 296, 377, 427, 432, 459], "user_weights_iter_mem": [242, 276, 278, 296, 377, 427, 432, 459], "write_to_dnnl_memori": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 260, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 395, 400, 405, 407, 409, 411, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 459, 461], "augru_weights_layer_md": [242, 377], "augru_weights_iter_md": [242, 377], "src_iter_md": [242, 276, 278, 296, 377, 427, 432, 459], "dst_iter_md": [242, 276, 278, 296, 377, 427, 432, 459], "rnn_direct": [242, 261, 262, 276, 278, 288, 296, 334, 365, 377, 401, 402, 427, 432, 449, 459, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "augru_weights_layer_mem": [242, 377], "augru_weights_iter_mem": [242, 377], "src_iter_mem": [242, 276, 278, 296, 377, 427, 432, 459], "weights_iter_mem": [242, 276, 278, 296, 377, 427, 432, 459], "dst_iter_mem": [242, 276, 278, 296, 377, 427, 432, 459], "workspace_mem": [242, 243, 276, 277, 278, 283, 296, 377, 379, 427, 430, 432, 439, 459], "augru_prim": [242, 377], "augru_arg": [242, 377], "dnnl_arg_augru_attent": [242, 298, 329, 377], "read_from_dnnl_memori": [242, 243, 244, 245, 252, 257, 258, 260, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 284, 285, 286, 287, 289, 290, 291, 296, 298, 377, 379, 381, 383, 392, 396, 397, 400, 405, 407, 409, 411, 412, 419, 421, 423, 425, 427, 430, 432, 434, 439, 441, 443, 445, 447, 450, 452, 454, 459], "parse_engine_kind": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 260, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 377, 379, 381, 383, 385, 388, 389, 390, 392, 400, 407, 409, 411, 419, 421, 423, 425, 427, 430, 432, 434, 436, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 457, 459, 461], "2020": [243, 244, 245, 251, 252, 268, 274, 275, 277, 278, 279, 283, 284, 285, 286, 287, 289, 290, 291, 379, 381, 383, 390, 392, 409, 423, 425, 430, 432, 434, 439, 441, 443, 445, 447, 450, 452, 454], "batch_normalization_exampl": [243, 298, 379], "227": [243, 246, 247, 249, 250, 254, 268, 270, 274, 275, 277, 282, 284, 285, 286, 287, 289, 291, 292, 379, 385, 386, 388, 389, 395, 409, 423, 425, 430, 438, 441, 443, 445, 447, 450, 454], "scaleshift_dim": [243, 272, 275, 379, 419, 425], "src_data": [243, 245, 251, 252, 260, 267, 268, 272, 274, 275, 277, 279, 283, 284, 285, 286, 287, 289, 290, 291, 379, 383, 390, 392, 400, 407, 409, 419, 423, 425, 430, 434, 439, 441, 443, 445, 447, 450, 452, 454], "scale_data": [243, 245, 272, 275, 379, 383, 419, 425], "shift_data": [243, 245, 272, 275, 379, 383, 419, 425], "tan": [243, 272, 275, 379, 419, 425], "scaleshift_md": [243, 272, 275, 379, 419, 425], "src_mem": [243, 245, 251, 260, 268, 269, 272, 274, 275, 277, 279, 281, 283, 285, 286, 287, 289, 290, 291, 379, 383, 390, 400, 409, 411, 419, 423, 425, 430, 434, 437, 439, 443, 445, 447, 450, 452, 454], "scale_mem": [243, 245, 272, 275, 379, 383, 419, 425], "shift_mem": [243, 245, 272, 275, 379, 383, 419, 425], "bnorm_pd": [243, 379], "10f": [243, 272, 275, 379, 419, 425], "normalization_flag": [243, 272, 275, 306, 317, 320, 329, 365, 379, 419, 425, 472, 474, 503, 505, 519, 521], "mean_mem": [243, 245, 272, 275, 379, 383, 419, 425], "mean_desc": [243, 272, 275, 379, 419, 425, 472, 474, 503, 505, 519, 521], "variance_mem": [243, 245, 272, 275, 379, 383, 419, 425], "variance_desc": [243, 272, 275, 379, 419, 425, 472, 474, 503, 505, 519, 521], "bnorm_prim": [243, 379], "bnorm_arg": [243, 379], "binary_exampl": [244, 298, 381], "150": [244, 245, 381, 383], "src_0_dim": [244, 381], "src_1_dim": [244, 381], "src_0_data": [244, 381], "src_1_data": [244, 381], "src_0_md": [244, 381], "src_1_md": [244, 381], "src_0_mem": [244, 381], "src_1_mem": [244, 381], "binary_op": [244, 245, 305, 381, 383, 549], "binary_attr": [244, 245, 381, 383], "binary_pd": [244, 245, 381, 383], "binary_prim": [244, 245, 381, 383], "binary_arg": [244, 245, 381, 383], "tmp_dst": [245, 383], "params_dim": [245, 383], "mean_data": [245, 383], "variance_data": [245, 383], "oscale_data": [245, 383], "mean_md": [245, 383], "variance_md": [245, 383], "scale_md": [245, 383], "shift_md": [245, 383], "oscale_md": [245, 383], "oscale_mem": [245, 383], "dst_tmp": [245, 383], "output_scal": [245, 383], "2016": [246, 247, 250, 254, 385, 389, 395], "posix_memalign": [246, 254, 385, 395], "_posix_c_sourc": [246, 254, 298, 385, 395], "200112l": [246, 254, 385, 395], "stdlib": [246, 254, 265, 385, 395, 405], "conv_ih": [246, 254, 298, 385, 395], "conv_iw": [246, 254, 298, 385, 395], "conv_oh": [246, 254, 298, 385, 395], "conv_ow": [246, 254, 298, 385, 395], "conv_strid": [246, 248, 249, 250, 254, 298, 385, 387, 388, 389, 395], "conv_pad": [246, 248, 249, 250, 254, 298, 385, 387, 388, 389, 395], "pool_oh": [246, 254, 298, 385, 395], "27": [246, 247, 249, 250, 254, 283, 385, 388, 389, 395, 439], "pool_ow": [246, 254, 298, 385, 395], "pool_strid": [246, 249, 250, 254, 298, 385, 388, 389, 395], "pool_pad": [246, 247, 249, 250, 254, 298, 385, 386, 388, 389, 395], "arr": [246, 254, 298, 385, 395], "init_net_data": [246, 254, 298, 385, 395], "uint32_t": [246, 249, 250, 254, 298, 385, 388, 389, 395], "1637": [246, 254, 385, 395], "indx": [246, 254, 385, 395], "typedef": [246, 254, 298, 365, 385, 395], "narg": [246, 254, 298, 324, 329, 340, 385, 395, 465], "dnnl_exec_arg_t": [246, 254, 265, 298, 324, 329, 340, 385, 395, 405, 465], "args_t": [246, 254, 298, 385, 395], "prepare_arg_nod": [246, 254, 298, 385, 395], "free_arg_nod": [246, 254, 298, 385, 395], "set_arg": [246, 254, 298, 385, 395], "arg_idx": [246, 254, 298, 385, 395], "dnnl_memory_t": [246, 254, 265, 298, 323, 324, 329, 340, 385, 395, 405, 499], "init_data_memori": [246, 254, 298, 385, 395], "user_tag": [246, 254, 298, 385, 395], "user_md": [246, 254, 385, 395], "dnnl_memory_cr": [246, 254, 265, 298, 323, 385, 395, 405], "dnnl_status_t": [246, 254, 298, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361, 371, 385, 395, 411, 456, 498], "prepare_reord": [246, 254, 298, 385, 395], "user_memori": [246, 254, 298, 385, 395], "prim_memory_md": [246, 254, 298, 385, 395], "prim_engin": [246, 254, 298, 385, 395], "dir_is_user_to_prim": [246, 254, 298, 385, 395], "prim_memori": [246, 254, 298, 385, 395], "dnnl_primitive_t": [246, 254, 265, 298, 329, 385, 395, 405], "net_index": [246, 254, 298, 385, 395], "inc": [246, 254, 385, 395, 429], "net_arg": [246, 247, 254, 298, 385, 386, 395], "user_memory_md": [246, 254, 385, 395], "dnnl_memory_get_memory_desc": [246, 254, 298, 323, 385, 395], "user_mem_engin": [246, 254, 385, 395], "dnnl_memory_get_engin": [246, 254, 298, 323, 385, 395], "dnnl_memory_desc_equ": [246, 254, 298, 323, 385, 395], "dnnl_primitive_desc_t": [246, 254, 265, 298, 305, 306, 307, 310, 311, 313, 314, 317, 318, 320, 321, 322, 325, 326, 329, 331, 332, 333, 334, 336, 337, 339, 385, 395, 405, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "reorder_pd": [246, 254, 286, 385, 395, 445], "dnnl_reorder_primitive_desc_cr": [246, 254, 265, 298, 332, 385, 395, 405], "dnnl_primitive_cr": [246, 254, 265, 298, 329, 385, 395, 405], "dnnl_primitive_desc_destroi": [246, 254, 265, 298, 329, 385, 395, 405], "simple_net": [246, 247, 249, 250, 254, 261, 262, 288, 298, 385, 387, 388, 389, 395, 449], "dnnl_engine_kind_t": [246, 298, 315, 351, 352, 353, 358, 365, 385], "dnnl_engine_cr": [246, 254, 265, 298, 315, 385, 395, 405], "net_src_siz": [246, 254, 385, 395], "net_dst_siz": [246, 254, 385, 395], "net_src": [246, 249, 250, 254, 261, 262, 288, 385, 388, 389, 395, 401, 402, 449], "net_dst": [246, 250, 254, 261, 262, 288, 385, 389, 395, 401, 402, 449], "memset": [246, 254, 261, 262, 385, 395, 401, 402], "conv_user_src_s": [246, 254, 385, 395], "conv_user_weights_s": [246, 254, 385, 395], "conv_bias_s": [246, 254, 385, 395], "conv_user_dst_s": [246, 254, 385, 395], "conv_dil": [246, 254, 385, 395], "conv_src": [246, 254, 282, 385, 395, 438], "conv_weight": [246, 248, 249, 250, 254, 385, 387, 388, 389, 395], "conv_bia": [246, 248, 249, 250, 254, 385, 387, 388, 389, 395], "conv_user_src_memori": [246, 249, 250, 254, 385, 388, 389, 395], "conv_user_weights_memori": [246, 249, 250, 254, 385, 388, 389, 395], "conv_user_bias_memori": [246, 249, 250, 254, 385, 388, 389, 395], "conv_src_md": [246, 248, 249, 250, 252, 254, 281, 282, 385, 387, 388, 389, 392, 395, 437, 438], "conv_weights_md": [246, 248, 249, 250, 252, 254, 281, 385, 387, 388, 389, 392, 395, 437], "conv_bias_md": [246, 248, 249, 250, 254, 385, 387, 388, 389, 395], "dnnl_convolution_forward_primitive_desc_cr": [246, 254, 298, 311, 385, 395], "conv_internal_src_memori": [246, 254, 385, 395], "conv_internal_weights_memori": [246, 254, 385, 395], "conv_internal_dst_memori": [246, 254, 385, 395], "dnnl_primitive_desc_query_md": [246, 254, 298, 324, 329, 340, 385, 395], "conv_reorder_src": [246, 254, 385, 395], "conv_reorder_weight": [246, 254, 385, 395], "negative_slop": [246, 249, 250, 254, 385, 388, 389, 395], "relu_src_md": [246, 249, 250, 254, 385, 388, 389, 395], "relu_dst_md": [246, 254, 385, 395], "relu_pd": [246, 249, 250, 254, 265, 266, 269, 271, 282, 293, 294, 385, 388, 389, 395, 405, 406, 411, 412, 456, 457], "dnnl_eltwise_forward_primitive_desc_cr": [246, 254, 265, 298, 314, 385, 395, 405], "relu_dst_memori": [246, 249, 250, 254, 385, 388, 389, 395], "0001": [246, 247, 249, 250, 254, 385, 388, 389, 395], "0001f": [246, 247, 249, 250, 254, 385, 388, 389, 395], "75f": [246, 247, 249, 250, 254, 277, 385, 388, 389, 395, 430], "lrn_src_md": [246, 254, 385, 395], "lrn_dst_md": [246, 254, 385, 395], "lrn_pd": [246, 249, 250, 254, 277, 385, 388, 389, 395, 430], "dnnl_lrn_forward_primitive_desc_cr": [246, 254, 298, 321, 385, 395], "lrn_dst_memori": [246, 249, 250, 254, 385, 388, 389, 395], "lrn_ws_memori": [246, 254, 385, 395], "lrn_ws_md": [246, 254, 385, 395], "pool_dst_siz": [246, 254, 385, 395], "pool_kernel": [246, 249, 250, 254, 385, 388, 389, 395], "pool_dil": [246, 247, 249, 250, 254, 385, 386, 388, 389, 395], "pool_src_md": [246, 254, 385, 395], "pool_dst_any_md": [246, 385], "pool_user_dst_memori": [246, 249, 250, 254, 385, 388, 389, 395], "pool_pd": [246, 249, 250, 254, 281, 385, 388, 389, 395, 437], "dnnl_pooling_forward_primitive_desc_cr": [246, 254, 298, 325, 385, 395], "pool_ws_memori": [246, 254, 385, 395], "pool_ws_md": [246, 254, 385, 395], "pool_dst_memori": [246, 249, 250, 254, 385, 388, 389, 395], "pool_reorder_dst": [246, 254, 385, 395], "pool_internal_dst_memori": [246, 254, 385, 395], "pool_dst_md": [246, 249, 250, 254, 281, 385, 388, 389, 395, 437], "tent": [246, 254, 385, 395], "dnnl_stream_t": [246, 254, 265, 298, 324, 329, 330, 338, 340, 341, 349, 356, 360, 385, 395, 405], "dnnl_stream_creat": [246, 254, 265, 298, 338, 385, 395, 405], "dnnl_primitive_execut": [246, 254, 265, 298, 305, 329, 385, 395, 405, 499], "dnnl_stream_wait": [246, 254, 265, 298, 323, 330, 338, 385, 395, 405], "dnnl_stream_destroi": [246, 254, 265, 298, 338, 385, 395, 405], "dnnl_memory_destroi": [246, 254, 265, 298, 323, 385, 395, 405], "dnnl_primitive_destroi": [246, 254, 265, 298, 329, 385, 395, 405], "dnnl_engine_destroi": [246, 254, 265, 298, 315, 385, 395, 405], "engine_kind2str_upp": [246, 269, 293, 294, 298, 385, 411, 456, 457], "chrono": [247, 280, 436], "100": [247, 273, 297, 421, 461], "eng": [247, 248, 249, 250, 255, 256, 259, 263, 264, 269, 270, 271, 273, 281, 282, 288, 292, 293, 294, 295, 297, 298, 386, 387, 388, 389, 398, 403, 411, 412, 413, 414, 415, 417, 418, 421, 437, 438, 449, 456, 457, 461, 549], "conv1_src_tz": [247, 386], "conv1_weights_tz": [247, 386], "conv1_bias_tz": [247, 386], "conv1_dst_tz": [247, 386], "conv1_pad": [247, 386], "user_src": [247, 248, 282, 386, 387, 438], "user_dst": [247, 248, 282, 386, 387, 438], "1000": [247, 273, 280, 290, 297, 386, 421, 436, 452, 461], "conv1_weight": [247, 386], "conv1_bia": [247, 386], "user_src_memori": [247, 248, 386, 387], "user_weights_memori": [247, 248, 386, 387], "conv1_user_bias_memori": [247, 386], "conv1_prim_desc": [247, 386], "conv1_src_memori": [247, 386], "conv1_weights_memori": [247, 386], "conv1_dst_memori": [247, 386], "relu1": [247, 255, 270, 292, 413, 416, 417], "negative1_slop": [247, 386], "relu1_prim_desc": [247, 386], "lrn1": 247, "alpha1": 247, "beta1": 247, "local1_s": 247, "lrn1_prim_desc": 247, "lrn_forward": [247, 249, 250, 277, 321, 365, 388, 389, 430, 531, 555], "lrn1_dst_memori": [247, 386], "pool1": [247, 385, 386], "pool1_dst_tz": 247, "pool1_kernel": [247, 386], "pool1_strid": [247, 386], "pool1_dst_md": [247, 386], "pool1_pd": [247, 386], "pooling_forward": [247, 249, 250, 281, 283, 325, 365, 386, 388, 389, 437, 439, 545, 555], "pool1_dst_memori": [247, 386], "conv2_src_tz": 247, "conv2_weights_tz": 247, "conv2_bias_tz": 247, "conv2_dst_tz": 247, "conv2_strid": 247, "conv2_pad": 247, "conv2_weight": 247, "conv2_bia": 247, "conv2_user_weights_memori": 247, "conv2_user_bias_memori": 247, "conv2_src_md": 247, "conv2_bias_md": 247, "conv2_weights_md": 247, "conv2_dst_md": 247, "conv2_prim_desc": 247, "conv2_src_memori": 247, "conv2_weights_memori": 247, "conv2_dst_memori": 247, "relu2": 247, "negative2_slop": 247, "relu2_prim_desc": 247, "lrn2": 247, "alpha2": 247, "beta2": 247, "local2_s": 247, "k2": 247, "lrn2_prim_desc": 247, "lrn2_dst_memori": 247, "pool2": 247, "pool2_dst_tz": 247, "pool2_kernel": 247, "pool2_strid": 247, "pool2_dil": 247, "pool2_pad": 247, "pool2_dst_md": 247, "pool2_pd": 247, "pool2_dst_memori": 247, "384": [247, 248, 387], "conv3_src_tz": 247, "conv3_weights_tz": 247, "conv3_bias_tz": 247, "conv3_dst_tz": 247, "conv3_strid": 247, "conv3_pad": 247, "conv3_weight": 247, "conv3_bia": 247, "conv3_user_weights_memori": 247, "conv3_user_bias_memori": 247, "conv3_src_md": 247, "conv3_bias_md": 247, "conv3_weights_md": 247, "conv3_dst_md": 247, "conv3_prim_desc": 247, "conv3_src_memori": 247, "conv3_weights_memori": 247, "conv3_dst_memori": 247, "relu3": [247, 248, 387], "negative3_slop": 247, "relu3_prim_desc": 247, "conv4_src_tz": 247, "conv4_weights_tz": 247, "conv4_bias_tz": 247, "conv4_dst_tz": 247, "conv4_strid": 247, "conv4_pad": 247, "conv4_weight": 247, "conv4_bia": 247, "conv4_user_weights_memori": 247, "conv4_user_bias_memori": 247, "conv4_src_md": 247, "conv4_bias_md": 247, "conv4_weights_md": 247, "conv4_dst_md": 247, "conv4_prim_desc": 247, "conv4_src_memori": 247, "conv4_weights_memori": 247, "conv4_dst_memori": 247, "relu4": 247, "negative4_slop": 247, "relu4_prim_desc": 247, "conv5_src_tz": 247, "conv5_weights_tz": 247, "conv5_bias_tz": 247, "conv5_dst_tz": 247, "conv5_strid": 247, "conv5_pad": 247, "conv5_weight": 247, "conv5_bia": 247, "conv5_user_weights_memori": 247, "conv5_user_bias_memori": 247, "conv5_src_md": 247, "conv5_weights_md": 247, "conv5_bias_md": 247, "conv5_dst_md": 247, "conv5_prim_desc": 247, "conv5_src_memori": 247, "conv5_weights_memori": 247, "conv5_dst_memori": 247, "relu5": 247, "negative5_slop": 247, "relu5_prim_desc": 247, "pool5": 247, "pool5_dst_tz": 247, "pool5_kernel": 247, "pool5_strid": 247, "pool5_dil": 247, "pool5_pad": 247, "pool5_dst": 247, "pool5_dst_md": 247, "pool5_pd": 247, "pool5_dst_memori": 247, "fc6": 247, "4096": 247, "fc6_src_tz": 247, "fc6_weights_tz": 247, "fc6_bias_tz": 247, "fc6_dst_tz": 247, "fc6_weight": 247, "fc6_bia": 247, "fc6_user_weights_memori": 247, "fc6_user_bias_memori": 247, "fc6_src_md": 247, "fc6_bias_md": 247, "fc6_weights_md": 247, "fc6_dst_md": 247, "fc6_prim_desc": 247, "inner_product_forward": [247, 274, 318, 365, 423, 513, 515, 555], "fc6_src_memori": 247, "fc6_weights_memori": 247, "fc6_dst_memori": 247, "fc7": 247, "fc7_weights_tz": 247, "fc7_bias_tz": 247, "fc7_dst_tz": 247, "fc7_weight": 247, "fc7_bia": 247, "fc7_user_weights_memori": 247, "fc7_user_bias_memori": 247, "fc7_bias_md": 247, "fc7_weights_md": 247, "fc7_dst_md": 247, "fc7_prim_desc": 247, "fc7_weights_memori": 247, "fc7_dst_memori": 247, "fc8": 247, "fc8_weights_tz": 247, "fc8_bias_tz": 247, "fc8_dst_tz": 247, "fc8_weight": 247, "fc8_bia": 247, "fc8_user_weights_memori": 247, "fc8_user_bias_memori": 247, "user_dst_memori": [247, 248, 387], "fc8_bias_md": 247, "fc8_weights_md": 247, "fc8_dst_md": 247, "fc8_prim_desc": 247, "fc8_weights_memori": 247, "fc8_dst_memori": 247, "someth": [247, 249, 250, 261, 262, 288, 386, 388, 389, 449], "duration_cast": 247, "steady_clock": [247, 280, 436], "time_since_epoch": 247, "stdexcept": [248, 249, 259, 263, 266, 269, 271, 273, 282, 297, 388, 398, 403, 412, 421, 461], "simple_net_int8": 248, "conv_src_tz": [248, 249, 250, 387, 388, 389], "conv_weights_tz": [248, 249, 250, 387, 388, 389], "conv_bias_tz": [248, 249, 250, 387, 388, 389], "conv_dst_tz": [248, 249, 250, 387, 388, 389], "8f": [248, 387], "weight_scal": [248, 387], "55f": [248, 387], "src_mask": [248, 387], "weight_mask": [248, 387], "dst_mask": [248, 387], "user_bias_memori": [248, 387], "conv_attr": [248, 252, 387, 392], "dst_scale_md": [248, 387], "dst_scale_memori": [248, 387], "ops_alpha": [248, 387], "ops_beta": [248, 387], "catch": [248, 249, 260, 262, 269, 280, 293, 294, 388, 400, 402, 411, 436, 456, 457], "conv_prim_desc": [248, 282, 387], "src_attr": [248, 387], "src_scale_md": [248, 387], "src_scale_memori": [248, 387], "src_reorder_pd": [248, 387], "src_reorder": [248, 387], "weight_attr": [248, 387], "wei_scale_md": [248, 387], "wei_scale_memori": [248, 387], "weight_reorder_pd": [248, 387], "weight_reord": [248, 387], "conv_bias_memori": [248, 249, 254, 387, 388, 395], "conv_dst_memori": [248, 249, 250, 387, 388, 389], "dst_attr": [248, 387], "dst_reorder_pd": [248, 387], "dst_reorder": [248, 387], "cassert": [249, 259, 263, 273, 293, 294, 297, 388, 398, 403, 421, 456, 457, 461], "net_fwd": [249, 250, 254, 388, 389, 395], "net_bwd": [249, 250, 254, 388, 389, 395], "net_fwd_arg": [249, 250, 254, 388, 389, 395], "net_bwd_arg": [249, 250, 254, 388, 389, 395], "sinf": [249, 250, 388, 389], "relu_data_tz": [249, 250, 388, 389], "lrn_data_tz": [249, 250, 388, 389], "lrn_workspace_memori": [249, 250, 388, 389], "pool_dst_tz": [249, 250, 388, 389], "pool_workspace_memori": [249, 250, 388, 389], "diff_data": [249, 250, 254, 388, 389, 395], "net_diff_dst": [249, 250, 254, 288, 388, 389, 395, 449], "pool_user_diff_dst_memori": [249, 250, 254, 388, 389, 395], "pool_diff_src_md": [249, 250, 254, 388, 389, 395], "pool_diff_dst_md": [249, 250, 254, 388, 389, 395], "pool_bwd_pd": [249, 250, 254, 388, 389, 395], "pooling_backward": [249, 250, 325, 365, 388, 389, 555], "pool_diff_dst_memori": [249, 250, 254, 388, 389, 395], "pool_diff_src_memori": [249, 250, 254, 388, 389, 395], "diff_src_desc": [249, 250, 298, 306, 311, 313, 314, 317, 318, 320, 321, 325, 326, 333, 336, 337, 388, 389, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "lrn_diff_dst_md": [249, 250, 254, 388, 389, 395], "lrn_diff_src_md": [249, 250, 254, 388, 389, 395], "lrn_bwd_pd": [249, 250, 254, 388, 389, 395], "lrn_backward": [249, 250, 321, 365, 388, 389, 555], "lrn_diff_dst_memori": [249, 250, 388, 389], "lrn_diff_src_memori": [249, 250, 254, 388, 389, 395], "relu_diff_src_md": [249, 250, 254, 388, 389, 395], "relu_diff_dst_md": [249, 250, 254, 388, 389, 395], "primitive_descriptor": [249, 250, 306, 317, 318, 320, 321, 388, 389], "relu_bwd_pd": [249, 250, 254, 388, 389, 395], "eltwise_backward": [249, 250, 314, 365, 388, 389, 555], "relu_diff_dst_memori": [249, 250, 388, 389], "relu_diff_src_memori": [249, 250, 254, 388, 389, 395], "conv_user_diff_weights_memori": [249, 250, 254, 388, 389, 395], "conv_diff_bias_memori": [249, 250, 254, 388, 389, 395], "conv_bwd_src_md": [249, 250, 388, 389], "conv_diff_weights_md": [249, 250, 254, 388, 389, 395], "conv_diff_dst_md": [249, 250, 254, 388, 389, 395], "conv_diff_bias_md": [249, 250, 254, 388, 389, 395], "conv_bwd_weights_pd": [249, 250, 254, 388, 389, 395], "convolution_backward_weight": [249, 250, 311, 365, 388, 389, 555], "conv_bwd_src_memori": [249, 250, 388, 389], "relu_bwd": [249, 250, 254, 388, 389, 395], "conv_diff_weight": [249, 250, 254, 388, 389, 395], "conv_diff_dst_memori": [249, 250, 254, 388, 389, 395], "conv_diff_weights_memori": [249, 250, 254, 388, 389, 395], "diff_weights_desc": [249, 250, 298, 311, 313, 318, 326, 388, 389, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "didn": [249, 250, 388, 389], "anyth": [249, 250, 324, 369, 388, 389], "n_iter": [249, 250, 254, 388, 389, 395], "net_output": [249, 250, 254, 388, 389, 395], "update_diff_dst": [249, 250, 254, 388, 389, 395], "net_diff_weight": [249, 250, 254, 388, 389, 395], "net_diff_bia": [249, 250, 254, 388, 389, 395], "update_weight": [249, 250, 254, 388, 389, 395], "conv_user_diff_weights_buff": [250, 254, 389, 395], "conv_diff_bias_buff": [250, 254, 389, 395], "concat_exampl": [251, 298, 390], "120": [251, 390], "num_src": [251, 291, 390, 454], "concat_pd": [251, 390], "dst_mem": [251, 257, 258, 260, 268, 269, 274, 277, 279, 281, 283, 285, 286, 287, 289, 291, 298, 390, 396, 397, 400, 409, 411, 423, 430, 434, 437, 439, 443, 445, 447, 450, 454], "concat_prim": [251, 390], "concat_arg": [251, 390], "convolution_exampl": [252, 298, 392], "simul": [252, 392, 413, 414, 415, 416, 417, 418], "strides_dim": [252, 267, 283, 392, 407, 439], "padding_dims_l": [252, 267, 283, 392, 407, 439], "padding_dims_r": [252, 267, 283, 392, 407, 439], "weights_data": [252, 257, 258, 260, 267, 274, 279, 284, 392, 396, 397, 400, 407, 423, 434, 441], "dst_data": [252, 257, 258, 260, 267, 268, 274, 277, 279, 283, 284, 285, 286, 287, 289, 291, 392, 396, 397, 400, 407, 409, 423, 430, 434, 439, 441, 443, 445, 447, 450, 454], "user_src_mem": [252, 260, 267, 284, 392, 400, 407, 441], "user_weights_mem": [252, 260, 267, 274, 284, 392, 400, 407, 423, 441], "user_dst_mem": [252, 260, 267, 284, 392, 400, 407, 441], "user_bias_md": [252, 267, 392, 407], "user_bias_mem": [252, 267, 392, 407], "conv_op": [252, 392], "conv_src_mem": [252, 281, 392, 437], "conv_weights_mem": [252, 281, 392, 437], "conv_dst_mem": [252, 281, 392, 437], "conv_arg": [252, 392, 549], "depthwise_convolution_exampl": [252, 298, 392], "exit_cod": [252, 269, 293, 294, 392, 411, 456, 457], "idx": [254, 293, 294, 298, 329, 395, 456, 457, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "n_fwd": [254, 395], "n_bwd": [254, 395], "dnnl_pooling_backward_primitive_desc_cr": [254, 298, 325, 395], "pool_internal_diff_dst_memori": [254, 395], "pool_reorder_diff_dst": [254, 395], "pool_bwd": [254, 395], "dnnl_lrn_backward_primitive_desc_cr": [254, 298, 321, 395], "lrn_bwd": [254, 395], "conv_diff_src_md": [254, 395], "dnnl_convolution_backward_weights_primitive_desc_cr": [254, 298, 311, 395], "conv_bwd_reorder_src": [254, 395], "conv_bwd_internal_src_memori": [254, 395], "conv_bwd_weights_src_memori": [254, 395], "conv_reorder_diff_dst": [254, 395], "conv_internal_diff_dst_memori": [254, 395], "conv_reorder_diff_weight": [254, 395], "conv_internal_diff_weights_memori": [254, 395], "conv_bwd_weight": [254, 395], "dnnl_memory_set_data_handl": [254, 298, 323, 324, 340, 395], "dnnl_memory_get_data_handl": [254, 298, 323, 395], "cleanup": [254, 395], "2023": [255, 256, 258, 260, 272, 292, 297, 397, 400, 419, 461], "unordered_set": [255, 256, 264, 270, 292, 295, 298, 413, 414, 415, 416, 417, 418], "graph_example_util": [255, 256, 264, 270, 292, 295, 413, 414, 415, 416, 417, 418], "cpu_getting_started_tutori": 255, "oc1": [255, 270, 292], "oc2": [255, 270, 292], "225": 255, "kh1": [255, 270, 292], "kw1": [255, 270, 292], "kh2": [255, 270, 292], "kw2": [255, 270, 292], "conv0_input_dim": [255, 270, 292], "conv0_weight_dim": [255, 270, 292], "conv0_bias_dim": [255, 270, 292], "conv1_weight_dim": [255, 270, 292], "conv1_bias_dim": [255, 270, 292], "conv0_src_desc": [255, 270, 292, 413, 416, 417], "conv0_weight_desc": [255, 270, 292, 413, 416, 417], "conv0_dst_desc": [255, 270, 292, 413, 416, 417], "conv0": [255, 270, 292, 413, 416, 417], "bias_add": [255, 270, 292], "conv0_bias_desc": [255, 270, 292, 413, 416, 417], "conv0_bias_add_dst_desc": [255, 270, 292, 413, 416, 417], "conv0_bias_add": [255, 270, 292, 413, 416, 417], "relu0_dst_desc": [255, 270, 292, 413, 416, 417], "relu0": [255, 270, 292, 413, 416, 417], "conv1_weight_desc": [255, 270, 292, 413, 416, 417], "conv1_dst_desc": [255, 270, 292, 413, 416, 417], "conv1_bias_desc": [255, 270, 292, 413, 416, 417], "conv1_bias_add_dst_desc": [255, 270, 292, 413, 416, 417], "conv1_bias_add": [255, 270, 292, 413, 416, 417], "relu1_dst_desc": [255, 270, 292, 413, 416, 417], "make_engine_with_alloc": [255, 256, 264, 292, 295, 352, 366, 367, 368, 413, 414, 415, 417, 418], "strm": [255, 256, 264, 270, 271, 292, 293, 294, 295, 412, 413, 414, 415, 417, 418, 456, 457], "global_outputs_ts_map": [255, 256, 270, 292, 298], "shared_ptr": [255, 256, 264, 270, 292, 295, 298, 510], "data_buff": [255, 256, 264, 270, 292, 295, 298], "id_to_queried_logical_tensor": [255, 256, 270, 292], "helper": [255, 256, 270, 292, 541], "ids_with_any_layout": [255, 256, 270, 292], "set_any_layout": [255, 256, 270, 292, 298], "mock": [255, 256, 264, 270, 292, 295], "concrete_shap": [255, 256, 264, 270, 292, 295], "although": [255, 256, 264, 270, 292, 295, 387], "cpu_get_start": 255, "continu": [255, 256, 270, 292, 386, 411], "cp": [255, 256, 261, 262, 264, 270, 292, 295, 413, 414, 415, 417, 418], "inputs_t": [255, 256, 264, 270, 292, 295, 413, 414, 415, 417, 418], "outputs_t": [255, 256, 264, 270, 292, 295, 413, 414, 415, 417, 418], "allocate_graph_mem": [255, 256, 264, 298], "conv0_src": [255, 292], "conv0_wei": [255, 292], "conv0_bias_src1": [255, 292], "conv1_wei": [255, 292], "conv1_bias_src1": [255, 292], "relu_dst": [255, 292], "simple_pattern_int8": 256, "conv_input_dim": 256, "conv_weight_dim": 256, "conv_bias_dim": 256, "dequant0_src_desc": [256, 414], "conv_src_desc": [256, 414], "dequant0": [256, 414], "1f": [256, 260, 262, 263, 400, 402, 403, 414], "dequant1_src_desc": [256, 414], "conv_weight_desc": [256, 414], "dequant1": [256, 414], "wei_zp": [256, 414], "conv_bias_desc": [256, 414], "conv_dst_desc": [256, 414], "relu_dst_desc": [256, 414], "quant_dst_desc": [256, 414], "quant": [256, 414], "dq0_src": 256, "dq1_src": 256, "quant_dst": 256, "check_result": [257, 258, 298, 396, 397], "expected_result": [257, 258, 396, 397], "750000": [257, 258, 396, 397], "250000": [257, 258, 396, 397], "500000": [257, 258, 396, 397], "000000": [257, 258, 396, 397], "19": [257, 258, 396, 397], "sparse_matmul": [257, 258, 298, 396, 397], "src_coo_valu": [257, 396], "src_coo_row_indic": [257, 396], "src_coo_col_indic": [257, 396], "static_cast": [257, 258, 273, 280, 396, 397, 421, 436], "src_coo_md": [257, 396], "wei_md": [257, 258, 396, 397], "src_coo_mem": [257, 396], "wei_mem": [257, 258, 396, 397], "sparse_matmul_pd": [257, 258, 396, 397], "sparse_matmul_prim": [257, 258, 396, 397], "sparse_matmul_arg": [257, 258, 396, 397], "src_csr_valu": [258, 397], "src_csr_indic": [258, 397], "src_csr_pointer": [258, 397], "src_csr_md": [258, 397], "src_csr_mem": [258, 397], "cctype": [259, 263, 273, 297, 398, 403, 421, 461], "cstdio": [259, 263, 273, 297, 398, 403, 421, 461], "type_trait": [259, 398], "init_vector": [259, 263, 273, 297, 398, 403, 421, 461], "min_valu": [259, 398], "max_valu": [259, 398], "mt19937": [259, 263, 273, 280, 297, 398, 403, 421, 436, 461], "uniform_real_distribut": [259, 263, 273, 280, 297, 398, 403, 421, 436, 461], "find_min_max": [259, 398], "compute_q10n_param": [259, 398], "max_int": [259, 398], "numeric_limit": [259, 263, 398, 403], "min_int": [259, 398], "lowest": [259, 398], "ifndef": [259, 398], "omit_workaround_for_skx": [259, 398], "dev_guide_int8_comput": [259, 398], "endif": [259, 293, 294, 398, 456, 457], "min_val": [259, 398], "max_val": [259, 398], "tcomput": [259, 398], "q10n": [259, 398], "tdata": [259, 398], "tscale": [259, 398], "3g": [259, 398], "invers": [259, 398], "tzero": [259, 398], "compare_vector": [259, 263, 398, 403], "v2": [259, 263, 398, 403], "scale_v2": [259, 398], "zp_v2": [259, 398], "threshold": [259, 263, 398, 403], "v1_l2": [259, 263, 398, 403], "diff_l2": [259, 263, 398, 403], "v2_n": [259, 398], "deq10n": [259, 398], "tcomparison": [259, 398], "trefer": [259, 263, 398, 403], "terror": [259, 263, 398, 403], "trel": [259, 398], "naccuraci": [259, 398], "x_int_m": [259, 298, 398], "x_f32": [259, 298, 398], "scale_x": [259, 298, 398], "zp_x": [259, 298, 398], "q10n_scheme": [259, 398], "mimic": [259, 398], "wrt": [259, 398], "x_int_md": [259, 398], "x_f32_md": [259, 398], "x_f32_m": [259, 398], "q10n_attr": [259, 398], "q10n_pd": [259, 398], "dst_scale_x_m": [259, 398], "zp_x_m": [259, 398], "f32_matmul_comput": [259, 298, 398], "a_f32": [259, 297, 298, 398, 461], "b_f32": [259, 273, 297, 298, 398, 421, 461], "c_f32": [259, 297, 298, 398, 461], "wrap": [259, 263, 266, 398, 403, 497, 498, 510, 541, 555, 579], "a_f32_m": [259, 398], "b_f32_m": [259, 398], "c_f32_m": [259, 398], "matmul_pd": [259, 260, 263, 273, 279, 280, 297, 398, 400, 403, 421, 434, 436, 461], "matmul_p": [259, 263, 273, 297, 298, 398, 403, 421, 461], "scale_c": [259, 298, 398], "zp_c": [259, 273, 298, 398, 421], "dynamic_q10n_matmul": [259, 298, 398], "c_u8": [259, 273, 298, 398, 421], "scale_a": [259, 398], "scale_b": [259, 398], "zp_a": [259, 273, 398, 421], "zp_b": [259, 297, 398, 461], "a_u8_md": [259, 398], "a_u8_m": [259, 398], "b_s8_md": [259, 398], "b_s8_m": [259, 398], "emb": [259, 398], "anywai": [259, 398], "theori": [259, 398], "postpon": [259, 398], "exercis": [259, 398], "c_f32_md": [259, 398], "matmul_attr": [259, 279, 398, 434], "scales_a_m": [259, 398], "scales_b_m": [259, 398], "zp_a_m": [259, 398], "c_u8_md": [259, 398], "c_u8_m": [259, 398], "compare_f32_and_quantized_matmul": [259, 298, 398], "param_a_min_v": [259, 398], "param_a_max_v": [259, 398], "4f": [259, 277, 398, 430], "param_b_min_v": [259, 398], "param_b_max_v": [259, 398], "threshold_dynamic_q10n": [259, 398], "2f": [259, 262, 398, 402], "_true_": [259, 398], "c_u8_dynamic_q10n": [259, 398], "scale_c_dynamic_q10n": [259, 398], "zp_c_dynamic_q10n": [259, 398], "rc": [259, 263, 398, 403], "logic_error": [259, 263, 266, 269, 271, 273, 398, 403, 406, 411, 412, 421], "matmul_exampl": [260, 279, 298, 400, 434], "densiti": [260, 400], "default_random_engin": [260, 400], "def_gen": [260, 400], "bernoulli_distribut": [260, 400], "b_dist": [260, 400], "is_on": [260, 400], "count_if": [260, 400], "matmul_src_md": [260, 400], "matmul_weights_md": [260, 400], "matmul_dst_md": [260, 400], "npleas": [260, 400], "matmul_src_mem": [260, 400], "matmul_weights_mem": [260, 400], "matmul_dst_mem": [260, 400], "matmul_prim": [260, 279, 280, 400, 434, 436], "wei_packed_md": [260, 400], "nhandl": [260, 298, 323, 324, 340, 400], "get_num_handl": [260, 400, 543], "wei_handl": [260, 400], "wei_buff": [260, 400], "buf_sz": [260, 400], "matmul_arg": [260, 279, 280, 400, 434, 436], "gnmt": [261, 262, 288, 401, 402, 449], "cstring": [261, 262, 288, 449], "dim_t": [261, 262, 298, 402], "src_seq_length_max": [261, 262, 298, 401, 402], "tgt_seq_length_max": [261, 262, 298, 401, 402], "feature_s": [261, 262, 298, 401, 402], "enc_bidir_n_lay": [261, 262, 298, 401, 402], "enc_unidir_n_lay": [261, 262, 298, 401, 402], "dec_n_lay": [261, 262, 298, 401, 402], "lstm_n_gate": [261, 262, 288, 298, 401, 402, 449], "weighted_src_lay": [261, 262, 298], "alignment_model": [261, 262, 298], "exp_sum": [261, 262, 298], "compute_weighted_annot": [261, 262, 298, 401, 402], "weighted_annot": [261, 262, 298, 401, 402], "weights_annot": [261, 262, 298], "enc_dst_lay": [261, 262], "num_weighted_annot": [261, 262], "dnnl_sgemm": [261, 262, 263, 298, 308, 403], "compute_attent": [261, 262, 298, 401, 402], "context_vector": [261, 262, 298], "weights_src_lay": [261, 262, 298], "dec_src_lay": [261, 262, 298], "weights_align": [261, 262, 298], "dst_iter": [261, 262, 288, 305, 401, 449, 557], "src_layer": [261, 262, 288, 305, 401, 402, 449, 557], "weights_yi": [261, 262], "weights_ai": [261, 262], "tmp": [261, 262, 335], "weighted_dec_src_lay": [261, 262], "alignment_model_ptr": [261, 262], "pragma_omp_parallel_for_collaps": [261, 262, 298], "tanhf": [261, 262], "gemv": [261, 262], "expf": [261, 262], "copy_context": [261, 262, 298, 401, 402], "src_iter": [261, 262, 288, 298, 305, 401, 402, 449, 557], "n_layer": [261, 262, 298], "cpu_engin": [261, 262, 266, 401, 402, 406], "encoder_net": [261, 262, 401, 402], "decoder_net": [261, 262, 401, 402], "encoder_net_arg": [261, 262, 401, 402], "decoder_net_arg": [261, 262, 401, 402], "enc_bidir_src_layer_tz": [261, 262, 401, 402], "enc_bidir_weights_layer_tz": [261, 262, 401, 402], "enc_bidir_weights_iter_tz": [261, 262, 401, 402], "enc_bidir_bias_tz": [261, 262, 401, 402], "enc_bidir_dst_layer_tz": [261, 262, 401, 402], "user_enc_bidir_wei_lay": [261, 262, 401, 402], "user_enc_bidir_wei_it": [261, 262, 401, 402], "user_enc_bidir_bia": [261, 262, 401, 402], "user_enc_bidir_src_layer_md": [261, 262, 401, 402], "user_enc_bidir_wei_layer_md": [261, 262, 401, 402], "user_enc_bidir_wei_iter_md": [261, 262, 401, 402], "user_enc_bidir_bias_md": [261, 262, 401, 402], "user_enc_bidir_src_layer_memori": [261, 262, 401, 402], "user_enc_bidir_wei_layer_memori": [261, 262, 401, 402], "user_enc_bidir_wei_iter_memori": [261, 262, 401, 402], "user_enc_bidir_bias_memori": [261, 262, 401, 402], "enc_bidir_wei_layer_md": [261, 262, 401, 402], "enc_bidir_wei_iter_md": [261, 262, 401, 402], "enc_bidir_dst_layer_md": [261, 262, 401, 402], "enc_bidir_prim_desc": [261, 262, 401, 402], "enc_bidir_wei_layer_memori": [261, 262, 401, 402], "enc_bidir_wei_layer_reorder_pd": [261, 262, 401], "enc_bidir_wei_iter_memori": [261, 262, 401, 402], "enc_bidir_wei_iter_reorder_pd": [261, 262], "enc_bidir_dst_layer_memori": [261, 262, 401, 402], "bi": [261, 262], "user_enc_uni_first_wei_lay": [261, 262, 401, 402], "user_enc_uni_first_wei_it": [261, 262, 401, 402], "user_enc_uni_first_bia": [261, 262, 401, 402], "user_enc_uni_first_wei_layer_dim": [261, 262], "user_enc_uni_first_wei_iter_dim": [261, 262], "user_enc_uni_first_bias_dim": [261, 262], "enc_uni_first_dst_layer_dim": [261, 262], "user_enc_uni_first_wei_layer_md": [261, 262], "user_enc_uni_first_wei_iter_md": [261, 262], "user_enc_uni_first_bias_md": [261, 262, 401, 402], "user_enc_uni_first_wei_layer_memori": [261, 262], "user_enc_uni_first_wei_iter_memori": [261, 262], "user_enc_uni_first_bias_memori": [261, 262, 401, 402], "enc_uni_first_wei_layer_md": [261, 262, 401, 402], "enc_uni_first_wei_iter_md": [261, 262, 401, 402], "enc_uni_first_dst_layer_md": [261, 262, 401, 402], "enc_uni_first_prim_desc": [261, 262, 401, 402], "enc_uni_first_wei_layer_memori": [261, 262, 401, 402], "enc_uni_first_wei_layer_reorder_pd": 261, "enc_uni_first_wei_iter_memori": [261, 262, 401, 402], "enc_uni_first_wei_iter_reorder_pd": 261, "enc_uni_first_dst_layer_memori": [261, 262, 401, 402], "user_enc_uni_wei_lay": [261, 262, 401, 402], "user_enc_uni_wei_it": [261, 262, 401, 402], "user_enc_uni_bia": [261, 262, 401, 402], "user_enc_uni_wei_layer_dim": [261, 262], "user_enc_uni_wei_iter_dim": [261, 262], "user_enc_uni_bias_dim": [261, 262], "enc_dst_layer_dim": [261, 262], "user_enc_uni_wei_layer_md": [261, 262], "user_enc_uni_wei_iter_md": [261, 262], "user_enc_uni_bias_md": [261, 262, 401, 402], "user_enc_uni_wei_layer_memori": [261, 262], "user_enc_uni_wei_iter_memori": [261, 262], "user_enc_uni_bias_memori": [261, 262, 401, 402], "enc_uni_wei_layer_md": [261, 262, 401, 402], "enc_uni_wei_iter_md": [261, 262, 401, 402], "enc_dst_layer_md": [261, 262, 401, 402], "enc_uni_prim_desc": [261, 262, 401, 402], "enc_uni_wei_layer_memori": [261, 262, 401, 402], "enc_uni_wei_layer_reorder_pd": [261, 262], "enc_uni_wei_iter_memori": [261, 262, 401, 402], "enc_uni_wei_iter_reorder_pd": [261, 262], "enc_dst_layer_memori": [261, 262, 401, 402], "dec": [261, 262], "mem": [261, 262, 265, 266, 271, 293, 294, 298, 405, 412, 456, 457], "user_dec_wei_lay": [261, 262, 401, 402], "user_dec_wei_it": [261, 262, 401, 402], "user_dec_bia": [261, 262, 401, 402], "user_dec_dst": [261, 401], "user_weights_attention_src_lay": [261, 262, 401, 402], "user_weights_annot": [261, 262, 401, 402], "user_weights_align": [261, 262, 401, 402], "user_dec_wei_layer_dim": [261, 262, 401, 402], "user_dec_wei_iter_dim": [261, 262, 401, 402], "user_dec_bias_dim": [261, 262, 401, 402], "dec_src_layer_dim": [261, 262, 401, 402], "dec_dst_layer_dim": [261, 262, 401, 402], "dec_dst_iter_c_dim": [261, 262, 401, 402], "noctx": [261, 262], "dec_dst_iter_dim": [261, 262, 401, 402], "dec_dst_iter_noctx_dim": [261, 262, 401, 402], "user_dec_wei_layer_md": [261, 262, 401, 402], "user_dec_wei_iter_md": [261, 262, 401, 402], "user_dec_bias_md": [261, 262, 401, 402], "dec_dst_layer_md": [261, 262, 401, 402], "dec_src_layer_md": [261, 262, 401, 402], "dec_dst_iter_md": [261, 262, 401, 402], "dec_dst_iter_c_md": [261, 262, 401, 402], "user_dec_wei_layer_memori": [261, 262, 401, 402], "user_dec_wei_iter_memori": [261, 262, 401, 402], "user_dec_bias_memori": [261, 262, 401, 402], "user_dec_dst_layer_memori": [261, 401], "dec_src_layer_memori": [261, 262, 401, 402], "dec_dst_iter_c_memori": [261, 262, 401, 402], "dec_wei_layer_md": [261, 262, 401], "dec_wei_iter_md": [261, 262, 401], "dec_dst_iter_memori": [261, 262, 401, 402], "dec_dst_iter_noctx_md": [261, 262, 401, 402], "dec_ctx_prim_desc": [261, 262, 401, 402], "dec_wei_layer_memori": [261, 262, 401, 402], "dec_wei_layer_reorder_pd": [261, 262, 401, 402], "dec_wei_iter_memori": [261, 262, 401], "dec_wei_iter_reorder_pd": [261, 262, 401], "enc": [261, 262], "ano": [261, 262], "init": [261, 262, 269, 271, 282, 412], "src_att_layer_handl": [261, 262, 401, 402], "src_att_iter_handl": [261, 262, 401, 402], "att": [261, 262], "dst_layer_handl": [261, 262, 401, 402], "compute_sum_of_row": [262, 298, 402], "col": [262, 298], "a_reduc": [262, 298], "weights_src_layer_scal": [262, 298], "dec_src_layer_scal": [262, 298], "dec_src_layer_shift": [262, 298], "tnc_offset": 262, "max_idx": 262, "max_idx_v": 262, "data_shift": [262, 402], "data_scal": [262, 402], "weights_scale_mask": [262, 402], "weights_scal": [262, 402], "halv": [262, 402], "scales_half": [262, 402], "65": [262, 402], "3f": [262, 284, 402, 441], "enc_bidir_src_layer_md": [262, 402], "attri": 262, "enc_bidir_src_layer_memori": [262, 402], "enc_bidir_src_layer_reorder_pd": [262, 402], "weights_attention_scal": [262, 402], "dec_dst": [262, 402], "dec_src_it": [262, 401], "dec_dst_it": [262, 401, 402], "dec_dst_layer_memori": [262, 402], "weights_attention_sum_row": [262, 402], "s8u8s32": [262, 402], "tight": [263, 403], "difficult": [263, 403], "finit": [263, 403], "tl2": [263, 403], "trelative_error": [263, 403], "taccuraci": [263, 403], "number_of_run": [263, 273, 297, 298, 403, 421, 461], "fixed_beta": [263, 298, 403], "_dynamic_": [263, 403], "dynamic_matmul_cr": [263, 298, 403], "a_shap": [263, 403], "b_shape": [263, 403], "c_shape": [263, 403], "a_strid": [263, 403], "b_stride": [263, 403], "c_stride": [263, 403], "earlier": [263, 403, 411, 456], "dynamic_matmul_execut": [263, 298, 403], "transa": [263, 298, 308, 341, 365, 371, 403], "transb": [263, 298, 308, 341, 365, 371, 403], "translat": [263, 403], "tolow": [263, 403], "a_m": [263, 403], "b_m": [263, 403], "c_m": [263, 403], "alpha_m": [263, 403], "sgemm_and_matmul_with_param": [263, 298, 403], "c_sgemm": [263, 403], "c_dynamic_matmul": [263, 403], "dynamic_matmul": [263, 403], "diverg": [263, 403], "sgemm_and_matmul": [263, 298, 403], "cpu_single_op_partition_tutori": 264, "src0_dim": [264, 295], "src1_dim": [264, 295], "matmul_src0_desc": [264, 295, 415, 418], "matmul_src1_desc": [264, 295, 415, 418], "matmul_dst_desc": [264, 295, 415, 418], "matmul_src0": [264, 295], "matmul_src1": [264, 295], "matmul_dst": [264, 295], "n_dim": [265, 298, 405], "n_elem": [265, 405], "complain_example_error_and_exit": [265, 298, 405], "find_neg": [265, 266, 298, 405, 406], "engine_cpu": [265, 405], "engine_gpu": [265, 405], "validate_engine_kind": [265, 266, 295, 298, 405, 406], "tz": [265, 266, 405, 406], "m_cpu_md": [265, 405], "m_gpu_md": [265, 405], "m_cpu": [265, 266, 405, 406], "m_gpu": [265, 266, 405, 406], "r1_pd": [265, 405], "r1": [265, 266, 405, 406], "r2_pd": [265, 405], "r2": [265, 266, 405, 406], "stream_gpu": [265, 266, 405, 406], "r1_arg": [265, 405], "relu_arg": [265, 405], "r2_arg": [265, 405], "prologu": [266, 269, 271, 282, 293], "nelem": 266, "cross_engine_reorder_tutori": 266, "gpu_engin": [266, 406], "deconvolution_exampl": [267, 298, 407], "revers": [267, 407], "deconv_src_md": [267, 407], "deconv_weights_md": [267, 407], "deconv_dst_md": [267, 407], "deconv_op": [267, 407], "deconv_attr": [267, 407], "deconv_pd": [267, 407], "deconvolution_forward": [267, 313, 365, 407, 487, 489, 555], "deconv_src_mem": [267, 407], "deconv_weights_mem": [267, 407], "deconv_dst_mem": [267, 407], "deconv_prim": [267, 407], "deconv_arg": [267, 407], "eltwise_exampl": [268, 298, 409], "eltwise_pd": [268, 409], "eltwise_prim": [268, 409], "eltwise_arg": [268, 409], "dnnl_debug": [269, 293, 294, 406, 411, 412, 456, 457], "getting_started_tutori": 269, "image_s": [269, 411], "alt_src_md": [269, 411], "obj": [269, 411], "relu_imag": [269, 411], "caught": [269, 293, 294, 411, 456, 457], "tstatu": [269, 293, 294, 411, 456, 457], "dnnl_status2str": [269, 293, 294, 298, 411, 456, 457], "tmessag": [269, 293, 294, 411, 456, 457], "cl_ext": [270, 416], "ocl_getting_started_tutori": 270, "allocate_ocl_graph_mem": [270, 298], "ocl_check": [271, 298, 412], "cl_int": 271, "cl_success": 271, "__file__": 271, "__line__": 271, "cl_kernel": [271, 298, 412], "create_init_opencl_kernel": [271, 298, 412], "ocl_ctx": [271, 298], "kernel_nam": [271, 298, 412], "ocl_cod": [271, 298, 412], "err": 271, "cl_program": 271, "ocl_program": 271, "clcreateprogramwithsourc": 271, "clbuildprogram": 271, "ocl_kernel": 271, "clcreatekernel": 271, "clreleaseprogram": 271, "gpu_opencl_interop_tutori": 271, "tz_dim": [271, 288, 293, 294, 412, 449, 456, 457], "mem_d": [271, 293, 294, 412, 456, 457], "__kernel": [271, 412], "__global": [271, 412], "get_global_id": [271, 412], "oclkernel": 271, "ocl_init_kernel": [271, 412], "oclexecut": 271, "ocl_buf": [271, 412], "clsetkernelarg": [271, 412], "clenqueuendrangekernel": [271, 412], "mem_data": [271, 412], "clreleasekernel": 271, "group_normalization_exampl": [272, 298, 419], "28": [272, 419, 438], "gnorm_pd": [272, 419], "gnorm_prim": [272, 419], "gnorm_arg": [272, 419], "uniform_int_distribut": [273, 280, 421, 436], "sc_a": [273, 421], "sc_b": [273, 297, 421, 461], "sc_c": [273, 421], "mlp": [273, 297, 300, 421, 461], "matmul_pd_cr": [273, 297, 298, 421, 461], "prepare_input": [273, 297, 298, 421, 461], "a_u8_mem": [273, 298, 421], "sc_a_mem": [273, 298, 421], "sc_b_mem": [273, 297, 298, 421, 461], "sc_c_mem": [273, 298, 421], "zp_a_mem": [273, 298, 421], "zp_c_mem": [273, 298, 421], "25f": [273, 421], "40": [273, 421], "sanity_check": [273, 298, 421], "c_u8_mem": [273, 298, 421], "tquantiz": [273, 421], "twhich": [273, 421], "b_s8_mem": [273, 297, 298, 421, 461], "meaning": [273, 297, 421, 461], "inner_product_exampl": [274, 298, 423], "inner_product_weights_md": [274, 423], "inner_product_op": [274, 423], "inner_product_attr": [274, 423], "inner_product_pd": [274, 423], "inner_product_weights_mem": [274, 423], "inner_product_prim": [274, 423], "inner_product_arg": [274, 423], "layer_normalization_exampl": [275, 298, 425], "lnorm_pd": [275, 425], "lnorm_prim": [275, 425], "lnorm_arg": [275, 425], "lbr_gru_exampl": [276, 298, 427], "weights_layer_dim": [276, 427], "weights_iter_dim": [276, 427], "dst_layer_dim": [276, 296, 427, 459], "dst_iter_dim": [276, 296, 427, 459], "dst_iter_data": [276, 296, 427, 459], "weights_layer_md": [276, 296, 427, 459], "weights_iter_md": [276, 296, 427, 459], "weights_layer_mem": [276, 296, 427, 459], "lbr_gru_prim": [276, 427], "lbr_gru_arg": [276, 427], "lrn_exampl": [277, 298, 430], "lrn_prim": [277, 430], "lrn_arg": [277, 430], "lstm_exampl": [278, 298, 432], "lstm_weights_layer_md": [278, 432], "lstm_weights_iter_md": [278, 432], "src_iter_c_md": [278, 432], "dst_iter_c_md": [278, 432], "lstm_weights_layer_mem": [278, 432], "lstm_weights_iter_mem": [278, 432], "src_iter_c_mem": [278, 432], "dst_iter_c_mem": [278, 432], "lstm_prim": [278, 432], "lstm_arg": [278, 432], "weights_mem": [279, 281, 434, 437], "matmul_op": [279, 434], "iomanip": [280, 436], "gemm_dims_t": [280, 298, 436], "min_run": [280, 298, 436], "get_type_str": [280, 298, 436], "type_str": [280, 436], "type_cas": [280, 298, 436], "print_test_cas": [280, 298, 436], "setw": [280, 436], "fill_random": [280, 298, 436], "is_integ": [280, 298, 436], "random_data_i": [280, 436], "random_data_f": [280, 436], "constexpr": [280, 436, 582], "nrand": [280, 436], "1037": [280, 436], "dist_i": [280, 436], "dist_f": [280, 436], "rd": [280, 436], "chunk": [280, 288, 436, 449], "memcpi": [280, 436], "run_cas": [280, 298, 436], "time_limit": [280, 298, 436], "quick_test": [280, 436], "a_data": [280, 436], "b_data": [280, 436], "a_in_md": [280, 436], "b_in_md": [280, 436], "a_in_mem": [280, 436], "b_in_mem": [280, 436], "repack": [280, 436], "warmup": [280, 436], "start_first": [280, 436], "end_first": [280, 436], "dur_first": [280, 436], "avg_tim": [280, 436], "total_op": [280, 436], "perf": [280, 335, 436], "scale_str": [280, 436], "unit_str": [280, 436], "flop": [280, 436], "mnk": [280, 436], "max_mnk": [280, 436], "8192": [280, 436], "time1": [280, 436], "nruns_est": [280, 436], "mnk_expand": [280, 436], "exp2": [280, 436], "log2": [280, 436], "bad_arg": [280, 298, 436], "cerr": [280, 436], "atoi": [280, 436], "sstream": 281, "memory_format_propagation_tutori": 281, "3x3": [281, 437], "need_reorder_src": [281, 437], "need_reorder_weight": [281, 437], "need_reorder_dst": [281, 437], "pool_dst_mem": [281, 437], "reorder_src": [281, 437], "reorder_weight": [281, 437], "conv_scratchpad_mem": [281, 437], "pool_scratchpad_mem": [281, 437], "reorder_dst": [281, 437], "init_data": [282, 298], "create_and_execute_relu": [282, 298, 438], "create_attr_with_relu_post_op": [282, 298, 438], "naiv": 282, "conv_relu_na": [282, 438], "user_wei": [282, 438], "mem_desc": 282, "conv_wei_md": [282, 438], "conv_primit": 282, "conv_relu_block": [282, 438], "implementation2": 282, "condition": 282, "r_pd": [282, 438], "conv_wei": [282, 438], "conv_dst": [282, 438], "prim_descriptor": 282, "conv_relu_fus": [282, 438], "prim_desc": 282, "implementation3": 282, "synthet": [282, 438], "pooling_exampl": [283, 298, 439], "dilation_onednn": [283, 439], "dilation_torch": [283, 439], "kernel_dim": [283, 439], "pooling_pd": [283, 439], "pooling_prim": [283, 439], "pooling_arg": [283, 439], "prelu_exampl": [284, 298, 441], "prelu_pd": [284, 441], "prelu_forward": [284, 326, 365, 441, 551, 555], "prelu_weights_mem": [284, 441], "prelu_prim": [284, 441], "prelu_arg": [284, 441], "reduction_exampl": [285, 298, 443], "reduction_pd": [285, 443], "reduction_prim": [285, 443], "reduction_arg": [285, 443], "reorder_exampl": [286, 298, 445], "ic_dim": [286, 445], "reorder_attr": [286, 445], "dst_scales_mem": [286, 445], "reorder_prim": [286, 445], "reorder_arg": [286, 445], "resampling_exampl": [287, 298, 447], "350": [287, 447], "resampling_pd": [287, 447], "resampling_forward": [287, 333, 365, 447, 555, 566], "resampling_prim": [287, 447], "resampling_arg": [287, 447], "n0": [288, 298, 449], "rand": [288, 298, 449], "31": [288, 298, 449], "n1": [288, 298, 449], "compact": [288, 438, 449], "leftmost": [288, 449], "leftmost_batch": [288, 298, 449], "rightmost_batch": [288, 298, 449], "leftmost_seq_length": [288, 298, 449], "rightmost_seq_length": [288, 298, 449], "common_feature_s": [288, 298, 449], "characterist": [288, 411, 449], "common_n_lay": [288, 298, 449], "is_train": [288, 449], "fwd_inf_train": [288, 449], "fwd_net": [288, 449], "bwd_net": [288, 449], "shorter": [288, 449], "net_src_dim": [288, 449], "leftmost_src_layer_dim": [288, 449], "rightmost_src_layer_dim": [288, 449], "common_weights_layer_dim": [288, 449], "common_weights_iter_dim": [288, 449], "common_bias_dim": [288, 449], "leftmost_dst_layer_dim": [288, 449], "rightmost_dst_layer_dim": [288, 449], "arrang": [288, 449], "our": [288, 412, 437, 449, 456], "leftmost_dst_iter_dim": [288, 449], "leftmost_dst_iter_c_dim": [288, 449], "rightmost_src_iter_dim": [288, 449], "rightmost_src_iter_c_dim": [288, 449], "tz_volum": [288, 449], "suppli": [288, 343, 449], "formatted_md": [288, 449], "generic_md": [288, 449], "studi": [288, 449], "suggest": [288, 449], "leftmost_dst_layer_memori": [288, 449], "rightmost_dst_layer_memori": [288, 449], "net_src_memori": [288, 449], "accommod": [288, 437, 449], "user_leftmost_src_layer_md": [288, 449], "user_rightmost_src_layer_md": [288, 449], "leftmost_src_layer_memori": [288, 449], "rightmost_src_layer_memori": [288, 449], "ll": [288, 449], "user_common_weights_lay": [288, 449], "user_common_weights_layer_memori": [288, 449], "user_common_weights_it": [288, 449], "user_common_weights_iter_memori": [288, 449], "user_common_bia": [288, 449], "user_common_bias_memori": [288, 449], "user_leftmost_dst_lay": [288, 449], "user_leftmost_dst_layer_memori": [288, 449], "user_rightmost_dst_lay": [288, 449], "user_rightmost_dst_layer_memori": [288, 449], "leftmost_prim_desc": [288, 449], "aprop_kind": [288, 449, 468, 470, 472, 474, 479, 485, 491, 495, 503, 505, 507, 509, 517, 519, 521, 523, 525, 527, 529, 533, 535, 537, 547, 553, 559, 564, 568, 569, 573, 577, 581, 589, 591], "leftmost_dst_iter_memori": [288, 449], "leftmost_dst_iter_c_memori": [288, 449], "rightmost_src_iter_md": [288, 449], "rightmost_src_iter_memori": [288, 449], "rightmost_src_iter_c_md": [288, 449], "rightmost_src_iter_c_memori": [288, 449], "rightmost_prim_desc": [288, 449], "rigthmost": [288, 449], "common_weights_layer_memori": [288, 449], "common_weights_iter_memori": [288, 449], "common_bias_memori": [288, 449], "workspace_primitive_desc": [288, 449], "commun": [288, 449], "create_w": [288, 449], "leftmost_workspace_memori": [288, 449], "rightmost_workspace_memori": [288, 449], "leftmost_lay": [288, 449], "rightmost_lay": [288, 449], "net_diff_src": [288, 449], "net_diff_src_memori": [288, 449], "user_leftmost_diff_src_layer_md": [288, 449], "user_rightmost_diff_src_layer_md": [288, 449], "leftmost_diff_src_layer_memori": [288, 449], "rightmost_diff_src_layer_memori": [288, 449], "backpropag": [288, 449], "user_common_diff_weights_lay": [288, 449], "user_common_diff_weights_layer_memori": [288, 449], "user_common_diff_bia": [288, 449], "user_common_diff_bias_memori": [288, 449], "net_diff_dst_dim": [288, 449], "net_diff_dst_memori": [288, 449], "diff_dst_lay": [288, 449], "user_leftmost_diff_dst_layer_md": [288, 449], "user_rightmost_diff_dst_layer_md": [288, 449], "leftmost_diff_dst_layer_memori": [288, 449], "rightmost_diff_dst_layer_memori": [288, 449], "leftmost_bwd_prim_desc": [288, 449], "diff_src_layer_desc": [288, 298, 334, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "diff_src_iter_desc": [288, 298, 334, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "diff_src_iter_c_desc": [288, 298, 334, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "diff_weights_layer_desc": [288, 298, 334, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "diff_weights_iter_desc": [288, 298, 334, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "diff_bias_desc": [288, 298, 311, 313, 318, 334, 449, 468, 470, 483, 489, 507, 509, 515, 523, 525, 527, 529, 535, 537, 569, 589, 591], "diff_dst_layer_desc": [288, 298, 334, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "diff_dst_iter_desc": [288, 298, 334, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "diff_dst_iter_c_desc": [288, 298, 334, 449, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "leftmost_diff_dst_iter_memori": [288, 449], "leftmost_diff_dst_iter_c_memori": [288, 449], "rightmost_diff_src_iter_md": [288, 449], "rightmost_diff_src_iter_memori": [288, 449], "rightmost_diff_src_iter_c_md": [288, 449], "rightmost_diff_src_iter_c_memori": [288, 449], "rightmost_bwd_prim_desc": [288, 449], "leftmost_src_layer_bwd_memori": [288, 449], "rightmost_src_layer_bwd_memori": [288, 449], "common_weights_layer_bwd_memori": [288, 449], "common_weights_iter_bwd_memori": [288, 449], "common_bias_bwd_memori": [288, 449], "common_diff_weights_layer_memori": [288, 449], "reorder_common_diff_weights_lay": [288, 449], "common_diff_bias_memori": [288, 449], "reorder_common_diff_bia": [288, 449], "dst_layer": [288, 305, 449, 557], "leftmost_dst_layer_bwd_memori": [288, 449], "rightmost_dst_layer_bwd_memori": [288, 449], "common_diff_weights_iter_memori": [288, 449], "leftmost_dst_iter_bwd_memori": [288, 449], "leftmost_dst_iter_c_bwd_memori": [288, 449], "rightmost_layer_bwd": [288, 449], "leftmost_layer_bwd": [288, 449], "shuffle_exampl": [289, 298, 450], "shuffle_axi": [289, 450], "shuffle_pd": [289, 450], "shuffle_forward": [289, 336, 365, 450, 555, 571], "shuffle_prim": [289, 450], "shuffle_arg": [289, 450], "softmax_exampl": [290, 298, 452], "softmax_pd": [290, 452], "softmax_forward": [290, 337, 365, 452, 555, 575], "softmax_prim": [290, 452], "softmax_arg": [290, 452], "sum_exampl": [291, 298, 454], "sum_pd": [291, 454], "sum_prim": [291, 454], "sum_arg": [291, 454], "dnnl_graph_sycl": [292, 295, 417, 418], "sycl_getting_started_tutori": 292, "make_alloc": [292, 295, 348, 367, 368, 417, 418], "sycl_malloc_wrapp": [292, 295, 298, 417, 418], "sycl_free_wrapp": [292, 295, 298, 417, 418], "gpu_selector_v": [292, 295, 417, 418], "cpu_selector_v": [292, 417, 418], "sycl_get_start": 292, "allocate_sycl_graph_mem": [292, 295, 298], "__has_includ": [293, 294, 456, 457], "kernel_tag": [293, 294, 456, 457], "sycl_interop_buffer_tutori": 293, "buf": [293, 298, 356, 360], "sycl_buf": [293, 456], "handler": [293, 294, 456, 457], "cgh": [293, 294, 456, 457], "get_access": [293, 456], "host_acc": [293, 456], "get_host_access": [293, 456], "exp_valu": [293, 294, 456, 457], "sycl_usm_tutori": [294, 298, 457], "usm_buff": [294, 457], "malloc_shar": [294, 457], "fill_": [294, 457], "gpu_single_op_partition_tutori": 295, "vanilla_rnn_exampl": [296, 298, 459], "vanilla_rnn_prim": [296, 459], "vanilla_rnn_arg": [296, 459], "zp_b_mem": [297, 298, 461], "num_g": [297, 461], "n_group": [297, 461], "c_f32_mem": [297, 461], "dnnl_memory_desc": [298, 323], "dnnl_memori": [298, 323], "const_dnnl_memory_t": [298, 323, 324, 340], "dnnl_primitive_desc": [298, 329], "dnnl_primitive_attr": [298, 305], "const_dnnl_primitive_attr_t": [298, 305, 306, 307, 310, 311, 313, 314, 317, 318, 320, 321, 322, 325, 326, 329, 331, 332, 333, 334, 336, 337, 339], "dnnl_post_op": [298, 305], "const_dnnl_post_ops_t": [298, 305, 343], "dnnl_primit": [298, 329], "const_dnnl_primitive_t": [298, 324, 329, 340], "dnnl_engin": [298, 315], "dnnl_stream": [298, 338], "const_dnnl_stream_t": [298, 338], "dnnl_graph_ocl_allocate_f": [298, 356, 367], "dnnl_graph_ocl_deallocate_f": [298, 356, 367], "dnnl_graph_sycl_allocate_f": [298, 348, 360, 368, 417, 418], "dnnl_graph_sycl_deallocate_f": [298, 348, 360, 368, 417, 418], "dnnl_graph_partit": [298, 358], "const_dnnl_graph_partition_t": [298, 358], "dnnl_graph_graph": [298, 353], "dnnl_graph_graph_t": [298, 353], "const_dnnl_graph_graph_t": [298, 353], "dnnl_graph_op": [298, 357], "dnnl_graph_op_t": [298, 353, 357], "const_dnnl_graph_op_t": [298, 357, 358], "dnnl_graph_alloc": [298, 348], "dnnl_graph_allocator_t": [298, 348, 356, 360], "const_dnnl_graph_allocator_t": [298, 348, 352, 356, 360], "dnnl_graph_compiled_partit": [298, 349], "const_dnnl_graph_compiled_partition_t": [298, 349, 356, 360], "dnnl_graph_tensor": [298, 361], "dnnl_graph_tensor_t": [298, 361], "const_dnnl_graph_tensor_t": [298, 349, 356, 360, 361], "dnnl_ukernel_attr_param": [298, 342], "dnnl_ukernel_attr_params_t": [298, 342], "const_dnnl_ukernel_attr_params_t": [298, 342, 343], "dnnl_brgemm": [298, 343], "dnnl_brgemm_t": [298, 343], "const_dnnl_brgemm_t": [298, 343], "dnnl_transform": [298, 343], "dnnl_transform_t": [298, 343], "const_dnnl_transform_t": [298, 343], "api_kind": 298, "dnnl_accumulation_mode_t": [298, 304, 305, 365], "dnnl_cpu_isa_hints_t": [298, 335], "dnnl_cpu_isa_t": [298, 335], "dnnl_fpmath_mode_t": [298, 305, 316, 353, 365], "dnnl_graph_layout_type_t": [298, 355, 501], "dnnl_graph_op_attr_t": [298, 357], "dnnl_graph_op_kind_t": [298, 357], "dnnl_graph_partition_policy_t": [298, 353, 358], "dnnl_graph_tensor_property_t": [298, 355, 501], "dnnl_normalization_flags_t": [298, 306, 317, 320, 329, 365], "dnnl_ocl_interop_memory_kind_t": [298, 324, 369], "dnnl_pack_type_t": [298, 342, 343], "dnnl_profiling_data_kind_t": [298, 323, 330], "dnnl_prop_kind_t": [298, 305, 306, 311, 313, 314, 317, 318, 320, 321, 325, 326, 329, 333, 334, 336, 337, 365], "dnnl_rnn_flags_t": [298, 334, 365], "dnnl_rounding_mode_t": [298, 305, 365], "dnnl_scratchpad_mode_t": [298, 305, 365], "dnnl_stream_flags_t": [298, 338], "dnnl_sycl_interop_memory_kind_t": [298, 340, 370], "cpu_deletor_t": 298, "dnnl_graph_inplace_pair_t": [298, 349], "gqa_dims_t": 298, "mlp_dims_t": 298, "mqa_dims_t": 298, "sdpa_dims_t": 298, "sycl_deletor_t": 298, "simple_memory_pool_t": 298, "bnorm_u8_via_binary_postop": [298, 376, 383], "cnn_inference_f32": [298, 376, 386], "cross_engine_reord": [298, 376, 405, 406], "initializer_list": 298, "extra_arg": 298, "bench_gated_mlp": 298, "bench": 298, "mlp_perf": 298, "size_of": 298, "fill_mask": 298, "seq_len": [298, 595, 597, 598], "bench_gqa": 298, "gqa_perf": 298, "id_to_set_any_layout": 298, "is_input": 298, "ocl_malloc_devic": 298, "ocl_fre": [298, 356, 367], "ocl_memcpi": 298, "make_md": 298, "write_dt": 298, "write_to_dnnl_tensor": 298, "get_mem_pool": 298, "create_alloc": 298, "bench_mqa": 298, "mqa_perf": 298, "bench_sdpa_primit": 298, "bench_sdpa": 298, "sdpa_perf": 298, "matmul_perf": [298, 436], "performance_profil": [298, 376, 438], "inference_int8_matmul": [298, 376, 421], "weights_decompression_matmul": [298, 376, 461], "dnnl_api": [298, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361], "dnnl_primitive_desc_next_impl": [298, 329], "existing_primitive_desc": [298, 329], "dnnl_primitive_desc_get_attr": [298, 329], "dnnl_primitive_desc_query_s32": [298, 329], "dnnl_primitive_create_from_cache_blob": [298, 329], "cache_blob": [298, 324, 329, 356, 367, 369, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 544, 546, 550, 552, 555, 561, 563, 565, 567, 570, 572, 574, 576, 580, 588, 590], "dnnl_primitive_get_primitive_desc": [298, 329], "dnnl_primitive_get_cache_blob": [298, 329], "dnnl_primitive_attr_clon": [298, 305], "existing_attr": [298, 305], "dropout_desc": [298, 305], "dnnl_primitive_attr_get_fpmath_mod": [298, 305], "dnnl_primitive_attr_set_fpmath_mod": [298, 305], "dnnl_primitive_attr_get_fpmath_mode_v2": [298, 305], "dnnl_primitive_attr_get_determinist": [298, 305], "dnnl_primitive_attr_get_accumulation_mod": [298, 305], "dnnl_primitive_attr_set_accumulation_mod": [298, 305], "dnnl_primitive_attr_get_scratchpad_mod": [298, 305], "dnnl_primitive_attr_set_scal": [298, 305, 557], "group_dim": [298, 305], "dnnl_primitive_attr_set_zero_points_mask": [298, 305, 557], "dnnl_primitive_attr_set_zero_point": [298, 305, 557], "dnnl_primitive_attr_set_round": [298, 305], "dnnl_primitive_attr_get_round": [298, 305], "dnnl_primitive_attr_get_post_op": [298, 305], "dnnl_post_ops_cr": [298, 305], "dnnl_post_ops_clon": [298, 305], "existing_post_op": [298, 305], "dnnl_post_ops_destroi": [298, 305], "dnnl_post_ops_len": [298, 305], "dnnl_post_ops_get_kind": [298, 305], "dnnl_post_ops_append_sum": [298, 305], "dnnl_post_ops_get_params_sum": [298, 305], "dnnl_post_ops_get_params_eltwis": [298, 305], "weights_data_typ": [298, 305, 549], "bias_data_typ": [298, 305, 549], "dst_data_typ": [298, 305, 549], "kernel_s": [298, 305, 549], "stride_s": [298, 305, 549], "padding_l_s": [298, 305, 549], "dnnl_post_ops_get_params_dw": [298, 305], "src1_desc": [298, 305, 307, 476, 549], "dnnl_post_ops_append_binary_v2": [298, 305], "src2_desc": [298, 305, 307, 476, 549], "dnnl_post_ops_get_params_binari": [298, 305], "dnnl_post_ops_get_params_binary_v2": [298, 305], "dnnl_post_ops_get_params_prelu": [298, 305], "memory_desc": [298, 323, 324, 340, 369, 370], "dnnl_memory_desc_clon": [298, 323], "existing_memory_desc": [298, 323], "dnnl_memory_desc_get_blob": [298, 323], "dnnl_memory_desc_create_with_blob": [298, 323], "dnnl_memory_desc_create_with_csr_encod": [298, 323], "dnnl_memory_desc_create_with_coo_encod": [298, 323], "dnnl_memory_desc_create_with_packed_encod": [298, 323], "dnnl_memory_desc_create_submemori": [298, 323], "parent_memory_desc": [298, 323], "dnnl_memory_desc_reshap": [298, 323], "out_memory_desc": [298, 323], "in_memory_desc": [298, 323], "dnnl_memory_desc_permute_ax": [298, 323], "dnnl_memory_desc_query_v2": [298, 323], "lh": [298, 323], "rh": [298, 323], "dnnl_memory_desc_get_size_v2": [298, 323], "dnnl_data_type_s": [298, 323], "dnnl_memory_create_v2": [298, 323], "dnnl_memory_map_data": [298, 323], "mapped_ptr": [298, 323, 541], "dnnl_memory_map_data_v2": [298, 323], "dnnl_memory_unmap_data": [298, 323], "dnnl_memory_unmap_data_v2": [298, 323], "dnnl_memory_get_data_handle_v2": [298, 323], "dnnl_memory_set_data_handle_v2": [298, 323], "reorder_primitive_desc": [298, 332], "src_engin": [298, 332, 564], "dst_engin": [298, 332, 564], "dnnl_concat_primitive_desc_cr": [298, 310], "concat_primitive_desc": [298, 310], "dnnl_sum_primitive_desc_cr": [298, 339], "sum_primitive_desc": [298, 339], "dnnl_binary_primitive_desc_cr": [298, 307], "src0_desc": [298, 307, 476], "dnnl_binary_primitive_desc_create_v2": [298, 307], "dnnl_convolution_backward_data_primitive_desc_cr": [298, 311], "dnnl_deconvolution_forward_primitive_desc_cr": [298, 313], "dnnl_deconvolution_backward_data_primitive_desc_cr": [298, 313], "dnnl_deconvolution_backward_weights_primitive_desc_cr": [298, 313], "dnnl_shuffle_forward_primitive_desc_cr": [298, 336], "dnnl_shuffle_backward_primitive_desc_cr": [298, 336], "data_desc": [298, 314, 493], "dnnl_softmax_forward_primitive_desc_cr": [298, 337], "softmax_axi": [298, 337], "dnnl_softmax_backward_primitive_desc_cr": [298, 337], "dnnl_prelu_forward_primitive_desc_cr": [298, 326], "dnnl_prelu_backward_primitive_desc_cr": [298, 326], "dnnl_batch_normalization_forward_primitive_desc_cr": [298, 306], "dnnl_batch_normalization_backward_primitive_desc_cr": [298, 306], "dnnl_group_normalization_forward_primitive_desc_cr": [298, 317], "dnnl_group_normalization_backward_primitive_desc_cr": [298, 317], "dnnl_layer_normalization_forward_primitive_desc_cr": [298, 320], "dnnl_layer_normalization_backward_primitive_desc_cr": [298, 320], "dnnl_layer_normalization_forward_primitive_desc_create_v2": [298, 320], "scale_shift_data_typ": [298, 320, 519, 521], "dnnl_layer_normalization_backward_primitive_desc_create_v2": [298, 320], "diff_scale_shift_data_typ": [298, 320, 519], "dnnl_inner_product_forward_primitive_desc_cr": [298, 318], "dnnl_inner_product_backward_data_primitive_desc_cr": [298, 318], "dnnl_inner_product_backward_weights_primitive_desc_cr": [298, 318], "dnnl_primitive_attr_set_rnn_data_qparam": [298, 305], "dnnl_primitive_attr_get_rnn_data_qparam": [298, 305], "dnnl_primitive_attr_set_rnn_weights_qparam": [298, 305], "dnnl_primitive_attr_get_rnn_weights_qparam": [298, 305], "dnnl_primitive_attr_set_rnn_weights_projection_qparam": [298, 305], "dnnl_primitive_attr_get_rnn_weights_projection_qparam": [298, 305], "dnnl_vanilla_rnn_forward_primitive_desc_cr": [298, 305, 334], "dnnl_vanilla_rnn_backward_primitive_desc_cr": [298, 334], "dnnl_lstm_forward_primitive_desc_cr": [298, 334], "dnnl_lstm_backward_primitive_desc_cr": [298, 334], "diff_weights_peephole_desc": [298, 334, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "diff_weights_projection_desc": [298, 334, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "dnnl_gru_forward_primitive_desc_cr": [298, 334], "dnnl_gru_backward_primitive_desc_cr": [298, 334], "dnnl_lbr_gru_forward_primitive_desc_cr": [298, 334], "dnnl_lbr_gru_backward_primitive_desc_cr": [298, 334], "dnnl_augru_forward_primitive_desc_cr": [298, 334], "dnnl_augru_backward_primitive_desc_cr": [298, 334], "diff_attention_desc": [298, 334, 468, 523], "dnnl_lbr_augru_forward_primitive_desc_cr": [298, 334], "dnnl_lbr_augru_backward_primitive_desc_cr": [298, 334], "dnnl_matmul_primitive_desc_cr": [298, 322], "dnnl_resampling_forward_primitive_desc_cr": [298, 333], "dnnl_resampling_backward_primitive_desc_cr": [298, 333], "dnnl_reduction_primitive_desc_cr": [298, 331], "dnnl_get_primitive_cache_capac": [298, 327], "dir": [298, 334, 335, 365], "dnnl_set_max_cpu_isa": [298, 335], "dnnl_get_effective_cpu_isa": [298, 335], "dnnl_set_cpu_isa_hint": [298, 335], "isa_hint": [298, 335, 365], "dnnl_get_cpu_isa_hint": [298, 335], "dnnl_reset_profil": [298, 330], "dnnl_query_profiling_data": [298, 330], "data_kind": [298, 330, 365], "num_entri": [298, 330], "offsetc": [298, 308, 341, 365, 371], "ao": [298, 308, 341, 365, 371], "bo": [298, 308, 341, 365, 371], "dnnl_dt2str": 298, "dnnl_fpmath_mode2str": 298, "dnnl_accumulation_mode2str": 298, "dnnl_engine_kind2str": 298, "dnnl_sparse_encoding2str": 298, "dnnl_fmt_tag2str": 298, "dnnl_prop_kind2str": 298, "dnnl_prim_kind2str": 298, "dnnl_alg_kind2str": 298, "dnnl_rnn_flags2str": 298, "dnnl_rnn_direction2str": 298, "dnnl_scratchpad_mode2str": 298, "dnnl_rounding_mode2str": 298, "dnnl_cpu_isa2str": 298, "dnnl_cpu_isa_hints2str": 298, "dnnl_runtime2str": 298, "dnnl_fmt_kind2str": 298, "dnnl_ocl_interop_memory_cr": [298, 324], "dnnl_ocl_interop_memory_create_v2": [298, 324], "dnnl_ocl_interop_memory_get_memory_kind": [298, 324], "dnnl_ocl_interop_memory_get_mem_object": [298, 324], "mem_object": [298, 324, 369], "dnnl_ocl_interop_memory_set_mem_object": [298, 324], "dnnl_ocl_interop_engine_get_cache_blob_id": [298, 324], "dnnl_ocl_interop_engine_get_cache_blob": [298, 324, 369], "dnnl_ocl_interop_engine_create_from_cache_blob": [298, 324, 356], "dnnl_ocl_interop_engine_cr": [298, 324, 356], "dnnl_ocl_interop_engine_get_context": [298, 324], "dnnl_ocl_interop_get_devic": [298, 324], "dnnl_ocl_interop_stream_cr": [298, 324], "dnnl_ocl_interop_stream_get_command_queu": [298, 324], "dnnl_ocl_interop_primitive_execut": [298, 324], "dep": [298, 324, 340, 356, 360, 367, 368, 369, 370], "ndep": [298, 324, 356], "return_ev": [298, 324, 340, 356], "dnnl_sycl_interop_engine_cr": [298, 340], "dnnl_sycl_interop_engine_get_context": [298, 340], "dnnl_sycl_interop_engine_get_devic": [298, 340], "dnnl_sycl_interop_memory_cr": [298, 340], "dnnl_sycl_interop_memory_create_v2": [298, 340], "dnnl_sycl_interop_memory_get_memory_kind": [298, 340], "dnnl_sycl_interop_memory_set_buff": [298, 340], "dnnl_sycl_interop_stream_cr": [298, 340], "dnnl_sycl_interop_stream_get_queu": [298, 340], "dnnl_sycl_interop_primitive_execut": [298, 340], "dnnl_threadpool_interop_stream_cr": [298, 341], "dnnl_threadpool_interop_stream_get_threadpool": [298, 341], "dnnl_threadpool_interop_set_max_concurr": [298, 341], "max_concurr": [298, 341], "dnnl_threadpool_interop_get_max_concurr": [298, 341], "dnnl_threadpool_interop_sgemm": [298, 341], "dnnl_threadpool_interop_gemm_u8s8s32": [298, 341], "dnnl_threadpool_interop_gemm_s8s8s32": [298, 341], "dnnl_engine_get_count": [298, 315], "dnnl_engine_get_kind": [298, 315], "dnnl_stream_get_engin": [298, 338], "dnnl_get_default_fpmath_mod": [298, 316], "dnnl_graph_allocator_cr": [298, 348], "dnnl_graph_allocator_destroi": [298, 348], "dnnl_graph_make_engine_with_alloc": [298, 352], "dnnl_graph_logical_tensor_init": [298, 355], "dnnl_graph_logical_tensor_init_with_dim": [298, 355], "dnnl_graph_logical_tensor_init_with_strid": [298, 355], "dnnl_graph_logical_tensor_get_mem_s": [298, 355], "dnnl_graph_logical_tensor_is_equ": [298, 355], "lt1": [298, 355], "lt2": [298, 355], "dnnl_graph_tensor_cr": [298, 361], "dnnl_graph_tensor_create_scalar": [298, 361], "dnnl_graph_tensor_destroi": [298, 361], "dnnl_graph_tensor_get_data_handl": [298, 361], "dnnl_graph_tensor_set_data_handl": [298, 361], "dnnl_graph_tensor_get_engin": [298, 361], "dnnl_graph_tensor_get_logical_tensor": [298, 361], "dnnl_graph_op_cr": [298, 357], "dnnl_graph_op_destroi": [298, 357], "dnnl_graph_op_add_input": [298, 357], "dnnl_graph_op_add_output": [298, 357], "dnnl_graph_op_set_attr_f32": [298, 357], "value_len": [298, 357], "dnnl_graph_op_set_attr_bool": [298, 357], "dnnl_graph_op_set_attr_s64": [298, 357], "dnnl_graph_op_set_attr_str": [298, 357], "dnnl_graph_op_get_id": [298, 357], "dnnl_graph_op_get_kind": [298, 357], "dnnl_graph_partition_create_with_op": [298, 358], "dnnl_graph_partition_destroi": [298, 353, 358], "dnnl_graph_partition_get_op_num": [298, 358], "num": [298, 353, 358], "dnnl_graph_partition_get_op": [298, 358], "dnnl_graph_partition_get_id": [298, 358], "dnnl_graph_partition_compil": [298, 358], "in_num": [298, 358], "out_num": [298, 358], "dnnl_graph_partition_get_input_ports_num": [298, 358], "dnnl_graph_partition_get_input_port": [298, 358], "dnnl_graph_partition_get_output_ports_num": [298, 358], "dnnl_graph_partition_get_output_port": [298, 358], "dnnl_graph_partition_is_support": [298, 358], "dnnl_graph_partition_get_engine_kind": [298, 358], "dnnl_graph_compiled_partition_cr": [298, 349], "dnnl_graph_compiled_partition_execut": [298, 349], "num_input": [298, 349, 356, 360], "num_output": [298, 349, 356, 360], "dnnl_graph_compiled_partition_destroi": [298, 349], "dnnl_graph_compiled_partition_query_logical_tensor": [298, 349], "dnnl_graph_compiled_partition_get_inplace_port": [298, 349], "num_inplace_pair": [298, 349], "inplace_pair": [298, 349], "dnnl_graph_graph_cr": [298, 353], "dnnl_graph_graph_create_with_fpmath_mod": [298, 353], "dnnl_graph_graph_destroi": [298, 353], "dnnl_graph_graph_set_fpmath_mod": [298, 353], "dnnl_graph_graph_get_fpmath_mod": [298, 353], "dnnl_graph_add_op": [298, 353], "dnnl_graph_graph_fin": [298, 353], "dnnl_graph_graph_is_fin": [298, 353], "dnnl_graph_graph_filt": [298, 353], "dnnl_graph_graph_get_partition_num": [298, 353], "dnnl_graph_graph_get_partit": [298, 353], "dnnl_graph_get_compiled_partition_cache_capac": [298, 350], "dnnl_graph_set_compiled_partition_cache_capac": [298, 350], "dnnl_graph_set_constant_tensor_cach": [298, 351], "dnnl_graph_get_constant_tensor_cach": [298, 351], "eng_kind": [298, 351], "dnnl_graph_ocl_interop_allocator_cr": [298, 356], "ocl_malloc": [298, 356, 367], "dnnl_graph_ocl_interop_make_engine_with_alloc": [298, 356], "dnnl_graph_ocl_interop_make_engine_from_cache_blob_with_alloc": [298, 356], "dnnl_graph_ocl_interop_compiled_partition_execut": [298, 356], "dnnl_graph_sycl_interop_allocator_cr": [298, 360], "sycl_malloc": [298, 360, 368], "sycl_fre": [298, 360, 368], "dnnl_graph_sycl_interop_make_engine_with_alloc": [298, 360], "dnnl_graph_sycl_interop_compiled_partition_execut": [298, 360], "sycl_ev": [298, 360], "dnnl_ukernel_attr_params_cr": [298, 342], "dnnl_ukernel_attr_params_set_post_ops_arg": [298, 342], "post_ops_arg": [298, 342, 585], "dnnl_ukernel_attr_params_set_a_scal": [298, 342], "a_scal": [298, 342, 585], "dnnl_ukernel_attr_params_set_b_scal": [298, 342], "b_scale": [298, 342, 585], "dnnl_ukernel_attr_params_set_d_scal": [298, 342], "d_scale": [298, 342, 585], "dnnl_ukernel_attr_params_destroi": [298, 342], "dnnl_brgemm_creat": [298, 343], "dnnl_brgemm_set_add_c": [298, 343], "add_c": [298, 343, 586], "dnnl_brgemm_set_post_op": [298, 343], "dnnl_brgemm_set_a_scal": [298, 343], "a_scale_mask": [298, 343, 586], "dnnl_brgemm_set_b_scal": [298, 342, 343], "b_scale_mask": [298, 343, 586], "dnnl_brgemm_set_d_scal": [298, 343], "d_scale_mask": [298, 343, 586], "dnnl_brgemm_fin": [298, 343], "dnnl_brgemm_get_b_pack_typ": [298, 343], "dnnl_brgemm_get_scratchpad_s": [298, 343], "dnnl_brgemm_is_execute_postops_valid": [298, 343], "dnnl_brgemm_set_hw_context": [298, 343], "dnnl_brgemm_release_hw_context": [298, 343], "dnnl_brgemm_gener": [298, 343], "dnnl_brgemm_execut": [298, 343], "dnnl_brgemm_execute_postop": [298, 343], "d_ptr": [298, 343], "dnnl_brgemm_destroi": [298, 343], "dnnl_transform_cr": [298, 343], "dnnl_transform_gener": [298, 343], "dnnl_transform_execut": [298, 343], "in_ptr": [298, 343], "out_ptr": [298, 343], "dnnl_transform_destroi": [298, 343], "complain_dnnl_error_and_exit": 298, "complain_fmt": 298, "dnnl_arg_attr_multiple_post_op_bas": [298, 329], "dnnl_arg_attr_output_scal": [298, 329], "dnnl_arg_diff_augru_attent": [298, 329], "dnnl_arg_diff_dst_0": [298, 329], "dnnl_arg_diff_dst_1": [298, 329], "dnnl_arg_diff_dst_2": [298, 329], "dnnl_arg_diff_src_0": [298, 329], "dnnl_arg_diff_src_2": [298, 329], "dnnl_arg_diff_src_3": [298, 329], "dnnl_arg_diff_weights_0": [298, 329], "dnnl_arg_diff_weights_1": [298, 329], "dnnl_arg_diff_weights_2": [298, 329], "dnnl_arg_diff_weights_3": [298, 329], "dnnl_arg_dst_0": [298, 329], "dnnl_arg_dst_1": [298, 329], "dnnl_arg_dst_2": [298, 329], "dnnl_arg_multiple_dst": [298, 329], "dnnl_arg_reduc": [298, 329], "dnnl_arg_src_3": [298, 329], "dnnl_arg_undef": [298, 329], "dnnl_arg_weights_0": [298, 329], "dnnl_arg_weights_1": [298, 329], "dnnl_arg_weights_2": [298, 329], "dnnl_arg_weights_3": [298, 329], "dnnl_enable_except": 298, "dnnl_jit_profile_linux_jitdump": [298, 335], "dnnl_jit_profile_linux_jitdump_use_tsc": [298, 335], "dnnl_jit_profile_linux_perf": [298, 335], "dnnl_jit_profile_linux_perfmap": [298, 335], "dnnl_jit_profile_non": [298, 335], "dnnl_jit_profile_vtun": [298, 335], "dnnl_runtime_f32_v": [298, 323, 403], "dnnl_runtime_s32_v": [298, 323], "dnnl_runtime_size_v": [298, 323], "dnnl_throw_error": 298, "pragma_macro": 298, "llama2": 300, "70b": 300, "llama3": 300, "gqa": 300, "perceptron": 300, "feedforward": 300, "vision": 300, "vit": 300, "dlrm": 300, "resnext": 300, "ssd": 300, "adversari": 300, "densenet": 300, "bla": [303, 341, 371, 582], "convert_to_c": [304, 305, 315, 316, 329, 334, 365, 369, 370, 541], "aalgorithm": [305, 365, 476, 481, 483, 485, 487, 489, 491, 493, 495, 531, 533, 545, 547, 549, 562, 566, 568, 575, 577], "dnnl_": 305, "_primitive_desc_cr": 305, "as_data_typ": [305, 549], "output_height": [305, 549], "output_height_1x1_convolut": [305, 549], "output_width": [305, 549], "output_width_1x1_convolut": [305, 549], "dev_guide_attributes_post_ops_depthwis": [305, 549], "dev_guide_attributes_post_ops_depthwise_fus": [305, 329, 549], "categor": [305, 549], "another_input": [305, 549], "ternari": [305, 307, 476, 549], "another_input1": [305, 549], "another_input2": [305, 549], "sic": [305, 557], "slc": [305, 557], "dic": [305, 557], "dlc": [305, 557], "rnn_attr": 305, "rnn_pd": 305, "five": [305, 557], "weights_lay": [305, 557], "weights_iter": [305, 557], "violat": [305, 557], "batch_normalization_backward": [306, 365, 555], "algebra": 308, "gemm_u8s8s32": [308, 365, 371], "gemm_s8s8s32": [308, 365, 371], "mxk": [308, 341, 371], "kxn": [308, 341, 371], "mxn": [308, 341, 371], "xerbla": [308, 341, 371], "a_offset": [308, 341, 371], "b_offset": [308, 341, 371], "c_offset": [308, 341, 371], "convolution_backward_data": [311, 365, 555], "deconvolution_backward_data": [313, 365, 555], "deconvolution_backward_weight": [313, 365, 555], "use_dst_for_bwd": [314, 493], "group_normalization_backward": [317, 365, 555], "inner_product_backward_data": [318, 365, 555], "inner_product_backward_weight": [318, 365, 555], "layer_normalization_backward": [320, 365, 555], "discourag": 323, "inequ": [323, 510, 543], "set_buff": [323, 370], "ordinari": 323, "ill": 323, "retriev": [323, 324, 329], "newli": 323, "encompass": [323, 543], "join": [323, 543], "in_md": [323, 543], "out_md": 323, "expect_out_md": [323, 543], "in_dim": 323, "out_dim": 323, "in_tag": 323, "out_tag": 323, "lie": 323, "oihw_4i16o4i": 323, "oihw_4i16o4i_": 323, "4i16o4i": 323, "had": [323, 340, 369, 370, 437, 541], "unmap": [323, 541], "mainli": [323, 541], "made": [323, 541], "prelu_backward": [326, 365, 555], "get_primitive_cache_capac": [327, 365], "set_primitive_cache_capac": [327, 365], "held": [327, 350], "excess": [327, 350], "aqueri": [329, 365], "32bit": 329, "qualifi": 329, "dev_guide_attributes_post_ops_binary_fus": 329, "deprec": [329, 351], "mnemon": 329, "peephol": [329, 334, 535, 537, 569], "reserv": 329, "norm_lp": 331, "resampling_backward": [333, 365, 555], "resampling": 333, "rnn_flag": [334, 365], "rnn_primitive_desc_bas": [334, 365, 468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 559, 589, 591], "lbr": [334, 522, 523, 524, 525, 526, 527, 528, 529], "aid": 335, "version_t": [335, 365], "cpu_isa": [335, 365], "cpu_isa_hint": [335, 365], "set_verbos": [335, 365], "get_default_fpmath_mod": [335, 365], "set_jit_dump": [335, 365], "set_jit_profiling_flag": [335, 365], "set_jit_profiling_jitdumpdir": [335, 365], "dnnl_jit_dump": 335, "dnnl_jit_profil": 335, "vtune": [335, 376, 429], "pid": 335, "mkdtemp": 335, "xxxxxx": 335, "home": 335, "revert": 335, "dnnl_max_cpu_isa": 335, "dnnl_cpu_isa": 335, "reflect": 335, "dnnl_cpu_isa_hint": 335, "shuffle_backward": [336, 365, 555], "softmax_backward": [337, 365, 555], "threapdool_ifac": [341, 371], "threadloc": 341, "dnnl_brgemm_pack_undef": 343, "dnnl_brgemm_no_tran": 343, "trait": [346, 365, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591], "handle_trait": [346, 365, 510], "acquir": 348, "input_id": [349, 500], "get_compiled_partition_cache_capac": [350, 366], "set_compiled_partition_cache_capac": [350, 366], "set_constant_tensor_cach": [351, 366], "get_constant_tensor_cach": [351, 366], "set_constant_tensor_cache_capac": [351, 366], "get_constant_tensor_cache_capac": [351, 366], "supplement": [352, 356, 360], "meta": 355, "enrich": 355, "progress": 355, "toward": 355, "60": 355, "layout_id": [355, 501], "openpow": 363, "ppc64": 363, "ibmz": 363, "s390x": 363, "risc": 363, "c_partit": [367, 368], "beforehand": 367, "adevic": [368, 370], "acontext": [368, 370], "amemori": [369, 370], "set_mem_object": 369, "aprimit": [369, 370], "query_md": [369, 370, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 555, 559, 560, 562, 563, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "aqueu": 370, "abuff": 370, "get_threadpool": 371, "cnn_inference_int8": [376, 387], "cnn_training_bf16": 376, "cnn_training_f32": 376, "cpu_cnn_training_f32": 376, "cpu_matmul_csr": 376, "cpu_matmul_coo": 376, "cpu_matmul_quant": 376, "cpu_matmul_weights_compress": 376, "cpu_rnn_inference_f32": [376, 401], "cpu_rnn_inference_int8": [376, 402], "cpu_sgemm_and_matmul": 376, "gpu_opencl_interop": [376, 412], "memory_format_propag": 376, "rnn_training_f32": 376, "sycl_interop_buff": [376, 456], "untitl": 376, "legal": 376, "trademark": 376, "awai": [383, 385, 386, 413, 415, 416, 417, 418], "detriment": [385, 386], "realist": 387, "_x": 398, "research": 398, "max_": 398, "min_": 398, "earli": 398, "obviou": 398, "disadvantag": 398, "wors": 398, "inevit": 398, "unidirectin": [401, 402], "charact": [401, 402], "facil": [406, 411, 412, 456], "resid": [406, 411, 412, 413, 414, 415, 416, 417, 418, 456], "thank": [406, 411], "lightweight": [406, 411], "compris": 411, "singleton": 411, "ten": 411, "educ": 411, "aliv": 411, "_d": 411, "relu_d": 411, "human": [411, 456], "encourag": 411, "experi": 411, "familiar": 411, "spoil": 411, "oop": 411, "forgot": 411, "liter": 412, "get_ocl_mem_object": 412, "realiz": [412, 456], "heavier": [412, 456], "serv": 412, "submiss": 412, "cpu_getting_start": 413, "till": [413, 416, 417], "mayb": [413, 414, 416, 417], "unfin": [413, 416, 417], "cpu_inference_int8": 414, "cpu_single_op_partit": 415, "gpu_opencl_getting_start": 416, "dnnl_graph_ocl": 416, "sycl_getting_start": 417, "sycl_single_op_partit": 418, "logo": 429, "openvino": 429, "pentium": 429, "subsidiari": 429, "brand": 429, "countri": 429, "khrono": 429, "central": 437, "understood": 437, "reader": 437, "bother": 437, "idiomat": 437, "realli": 437, "ver": 437, "1x128x14x14": 437, "326904": 437, "256x128x3x3": 437, "244141": 437, "bia_undef": [437, 438], "mb1_ic128oc256_ih14oh14kh3sh1dh0ph1_iw14ow14kw3sw1dw0pw1": 437, "20312": 437, "ws_undef": 437, "mb1ic256_ih14oh14kh3sh1ph1_iw14ow14kw3sw1pw1": 437, "187012": 437, "1x256x14x14": 437, "0419922": 437, "knowledg": 438, "ex": 438, "user_": 438, "meant": 438, "enter": 438, "easili": 438, "launch": 438, "shell": 438, "tell": 438, "38": 438, "mb128_ic3oc96_ih227oh55kh11sh4dh0ph0_iw227ow55kw11sw4dw0pw0": 438, "314": 438, "data_f32": 438, "diff_undef": 438, "128x96x55x55": 438, "87695": 438, "conv_dst1": 438, "pai": 438, "penalti": 438, "96x3x11x11": 438, "0310059": 438, "3101": 438, "66895": 438, "80396": 438, "closer": 438, "0148926": 438, "968": 438, "66797": 438, "kmp_affin": 438, "platinum": 438, "8180": 438, "50ghz": 438, "numa": 438, "ram": 438, "ddr4": 438, "gb": 438, "walkthrough": 457, "catalogu": 463, "weak": [467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591], "get_primitive_desc": [467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 490, 492, 494, 502, 504, 506, 508, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 544, 546, 550, 552, 555, 561, 563, 565, 567, 570, 572, 574, 576, 580, 588, 590], "get_kind": [467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 544, 545, 546, 547, 550, 551, 552, 553, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 588, 589, 590, 591], "default_attr": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 562, 564, 566, 568, 571, 573, 575, 577, 581, 589, 591], "get_cell_kind": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_prop_kind": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_direct": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_dil": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_padding_l": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_padding_r": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_epsilon": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_algorithm": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_alpha": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_beta": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_axi": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_local_s": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_k": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_p": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_factor": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_activation_kind": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_kernel": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_group_s": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "get_primitive_attr": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 560, 562, 564, 566, 568, 569, 571, 573, 575, 577, 581, 589, 591], "augru_attention_desc": [468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "diff_augru_attention_desc": [468, 470, 507, 509, 523, 525, 527, 529, 535, 537, 569, 589, 591], "signifi": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 543, 545, 547, 551, 553, 562, 564, 566, 568, 571, 573, 575, 577, 581, 586, 587, 589, 591], "caller": [479, 559, 564, 581], "prim_kind": [479, 559, 564, 581], "prop_kind1": [479, 559, 564, 581], "prop_kind2": [479, 559, 564, 581], "get_count": 497, "uniniti": [497, 510, 541, 555, 579], "thrown": [497, 510, 541, 555, 579], "wrap_c_api": 498, "output_id": 500, "union": 501, "descend": [510, 555, 559, 560, 569], "weak_ptr": 510, "dummi": 510, "destructor": 511, "validate_dim": 541, "min_siz": 541, "adata_typ": [541, 543], "map_data": 541, "unmap_data": 541, "absenc": [541, 543], "aformat_tag": 543, "permute_ax": 543, "get_ndim": 543, "get_padded_offset": 543, "get_submemory_offset": 543, "get_nnz": 543, "get_sparse_encod": 543, "get_format_kind": 543, "is_zero": 543, "index_dt": 543, "pointer_dt": 543, "new_desc": 543, "get_params_sum": 549, "get_params_eltwis": 549, "get_params_dw": 549, "get_params_prelu": 549, "zeropoint": 549, "oc_dim": 549, "mb_dim": 549, "channel_dim": 549, "height_dim": 549, "prelu_weight": 549, "weight_desc": [551, 553], "c_pd": 555, "mask_desc": 557, "get_accumulation_mod": 557, "set_accumulation_mod": 557, "get_determinist": 557, "get_rounding_mod": 557, "set_rounding_mod": 557, "get_post_op": 557, "get_rnn_data_qparam": 557, "get_rnn_weights_qparam": 557, "set_rnn_weights_projection_qparam": 557, "get_rnn_weights_projection_qparam": 557, "rnn_d": 557, "get_src_engin": 564, "get_dst_engin": 564, "aflag": 579, "virtual": 582, "subclass": 582, "closur": 582, "set_a_scal": [585, 586], "set_d_scal": [585, 586], "default_post_op": 586, "default_attr_param": 586, "cpu_runtim": 592, "gpu_runtim": 592, "absent": 592, "q_head_num": [595, 597], "kv_head_num": 595, "head_siz": [595, 597, 598], "gr": 596, "head_num": 598, "query_num": 598, "ctx_": 599}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"advanc": 0, "topic": 0, "build": [1, 23, 24, 27, 30, 31, 36, 41, 159, 160, 173, 178, 413, 414, 415, 416, 417, 418], "link": [1, 65], "onednn": [1, 32, 65, 155, 160, 170, 173, 303, 363, 406, 411, 412, 456, 464], "class": [2, 3, 4, 5, 6, 7, 8, 9], "dnnl": [2, 3, 4, 5, 6, 7, 8, 182, 185, 186, 187, 191, 195, 198, 199, 200, 201, 203, 205, 207, 209, 210, 211, 212, 213, 215, 218, 220, 222, 224, 226, 228, 230, 232, 235, 237, 239, 241, 365, 366, 367, 368, 369, 370, 371, 372, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591], "graph": [2, 3, 4, 5, 6, 7, 8, 19, 24, 35, 37, 41, 198, 199, 200, 201, 203, 205, 207, 299, 347, 353, 366, 367, 368, 413, 414, 415, 416, 417, 418], "alloc": [2, 348, 437], "overview": [2, 3, 4, 5, 6, 7, 8, 33, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 154, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 298, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361, 367, 368, 369, 370, 371, 373, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592], "detail": [2, 3, 4, 5, 6, 7, 8, 20, 22, 26, 29, 34, 36, 57, 61, 64, 66, 67, 157, 158, 161, 162, 163, 164, 166, 168, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 298, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361, 367, 368, 369, 370, 371, 373, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592], "document": [2, 3, 4, 5, 6, 7, 8, 23, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 298, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361, 367, 368, 369, 370, 371, 373, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592], "construct": [2, 3, 4, 5, 6, 7, 8, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 586, 587, 588, 589, 590, 591], "compiled_partit": 3, "method": [3, 4, 5, 6, 7, 8, 468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 498, 503, 505, 507, 509, 510, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 560, 562, 563, 564, 566, 568, 569, 571, 573, 575, 577, 579, 581, 582, 585, 586, 587, 589, 591], "logical_tensor": [5, 198, 199, 200], "typedef": [5, 305, 312, 315, 323, 329, 335, 338, 342, 343, 348, 349, 353, 356, 357, 358, 360, 361, 541], "op": [6, 15, 20, 22, 26, 29, 34, 37, 57, 61, 64, 66, 67, 157, 161, 162, 163, 164, 165, 166, 168, 201, 203, 357, 383, 415, 418], "partit": [7, 37, 205, 349, 350, 358, 413, 414, 415, 416, 417, 418], "tensor": [8, 27, 28, 37, 351, 355, 361], "simple_memory_pool_t": 9, "primit": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 67, 156, 159, 160, 178, 179, 218, 327, 328, 377, 379, 381, 390, 392, 396, 397, 400, 406, 407, 409, 411, 412, 419, 423, 425, 427, 430, 432, 434, 437, 439, 441, 443, 445, 447, 450, 452, 454, 456, 459, 555, 600], "attribut": [10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 26, 29, 34, 57, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 161, 162, 163, 164, 165, 166, 168, 175, 176, 305], "usag": [10, 156], "support": [10, 15, 20, 22, 26, 34, 57, 60, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 164, 166, 168, 172, 302, 600], "relat": [10, 156, 179], "error": [10, 498], "handl": [10, 32, 33, 154, 510], "accumul": [11, 166, 304], "mode": [11, 14, 17, 32, 54, 64, 166, 178, 304, 316], "determinist": 12, "dropout": 13, "introduct": [13, 16, 19, 37, 60, 172, 174, 177, 437], "implement": [13, 20, 22, 26, 29, 34, 39, 42, 43, 44, 47, 48, 49, 50, 53, 54, 57, 61, 64, 66, 67, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176, 178, 438], "api": [13, 16, 25, 27, 35, 156, 167, 303, 309, 319, 324, 340, 341, 347, 354, 356, 360, 411, 412, 413, 414, 416, 417, 456], "float": [14, 42, 53, 54, 316], "point": [14, 42, 53, 54, 316], "math": [14, 54, 316], "The": 14, "enforc": 14, "an": 14, "integr": 14, "A": 14, "note": [14, 20, 22, 25, 26, 29, 34, 57, 61, 64, 66, 67, 157, 158, 161, 162, 163, 166, 168], "default": 14, "post": [15, 20, 22, 26, 29, 34, 57, 61, 64, 66, 67, 157, 161, 162, 163, 164, 165, 166, 168, 383], "eltwis": [15, 34, 268, 314], "sum": [15, 168, 291, 339, 454, 580, 581], "depthwis": 15, "binari": [15, 22, 38, 244, 307, 381, 383, 475, 476], "prelu": [15, 121, 158, 284, 326], "exampl": [15, 16, 18, 20, 22, 26, 29, 34, 35, 39, 42, 43, 46, 49, 53, 57, 60, 61, 62, 64, 66, 67, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 172, 175, 176, 178, 377, 379, 381, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 400, 401, 402, 407, 409, 414, 419, 423, 425, 427, 430, 432, 434, 436, 438, 439, 441, 443, 445, 447, 449, 450, 452, 454, 457, 459], "chain": 15, "relu": [15, 132, 406, 411], "tanh": [15, 150], "scaleshift": 15, "quantiz": [16, 49, 50, 51, 60, 123, 398], "model": [16, 301], "numer": [16, 32], "behavior": [16, 32], "convolut": [16, 29, 39, 49, 81, 252, 311, 392, 414, 437], "workflow": [16, 60, 172, 411], "per": 16, "channel": [16, 177], "scale": [16, 20, 53, 57, 60, 64], "argument": [16, 20, 22, 26, 29, 34, 57, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 164, 165, 166, 168], "1": [16, 23, 29, 63], "weight": [16, 461], "output": [16, 28, 43, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 178], "2": [16, 23, 29, 63], "round": [17, 32, 135], "scratchpad": 18, "memori": [18, 19, 25, 28, 33, 154, 156, 159, 167, 174, 177, 179, 209, 210, 211, 212, 323, 406, 411, 412, 437, 456, 541, 543], "engin": [18, 19, 156, 179, 191, 315, 352, 405, 406, 411, 412, 456, 497], "librari": [18, 23, 24, 32, 65, 363], "manag": [18, 159], "user": 18, "basic": [19, 37, 174, 411], "concept": [19, 37, 174, 464], "stream": [19, 237, 338, 406, 411, 412, 456, 579], "object": [19, 33, 154, 406, 411, 412, 437, 456], "level": 19, "abstract": 19, "creat": [19, 406, 411, 412, 437, 456], "extens": [19, 299, 412, 416, 417, 456], "micro": 19, "kernel": [19, 412, 456], "batch": [20, 175, 306, 379], "normal": [20, 57, 64, 66, 306, 317, 320, 379, 419, 425, 430], "gener": [20, 22, 26, 29, 32, 34, 57, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176, 177], "forward": [20, 29, 34, 53, 57, 59, 61, 64, 66, 157, 158, 163, 165, 166], "differ": [20, 29, 34, 57, 59, 61, 64, 157, 158, 163, 165, 166], "between": [20, 29, 34, 57, 59, 61, 64, 157, 158, 163, 165, 166, 405, 406], "train": [20, 29, 32, 34, 53, 57, 59, 61, 64, 157, 158, 163, 164, 165, 166, 171, 172, 388, 389, 395, 449], "infer": [20, 29, 32, 34, 53, 57, 58, 59, 60, 61, 64, 157, 158, 163, 165, 166, 385, 386, 387, 401, 402, 414, 421], "backward": [20, 29, 34, 57, 59, 61, 64, 66, 157, 158, 163, 165, 166], "execut": [20, 22, 26, 29, 34, 57, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 406, 411, 412, 413, 414, 415, 416, 417, 418, 437, 456], "data": [20, 22, 26, 29, 32, 34, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176, 177, 312, 406, 411, 412, 437, 456], "type": [20, 22, 26, 29, 32, 34, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176, 312], "represent": [20, 22, 26, 29, 34, 57, 61, 64, 66, 67, 157, 158, 161, 162, 164, 166, 168, 174, 175, 176], "mean": [20, 57, 64], "varianc": [20, 57, 64], "shift": [20, 57, 64], "sourc": [20, 22, 23, 57, 64, 66, 157, 161, 166, 168, 173, 437], "destin": [20, 22, 57, 64, 66, 157, 161, 166, 168, 437], "Their": [20, 57, 64, 66, 157, 166], "gradient": [20, 57, 64, 66, 157, 166], "limit": [20, 22, 24, 26, 29, 32, 34, 36, 39, 42, 43, 44, 47, 48, 49, 50, 51, 53, 54, 57, 61, 64, 66, 67, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176], "perform": [20, 21, 22, 26, 29, 34, 57, 61, 64, 66, 67, 157, 158, 160, 161, 162, 163, 165, 166, 168, 436, 437, 438, 463], "tip": [20, 22, 26, 29, 34, 57, 61, 64, 66, 67, 157, 158, 161, 162, 163, 165, 166, 168], "benchmark": [21, 155], "from": [23, 173, 406], "prerequisit": 23, "step": 23, "download": 23, "code": [23, 62, 173, 411], "linux": [23, 65, 160], "maco": [23, 65], "us": [23, 24, 170, 177], "gcc": 23, "clang": 23, "intel": [23, 25, 32, 63, 173], "oneapi": [23, 363, 373], "dpc": [23, 33, 364], "c": [23, 246, 254, 265], "compil": [23, 24, 37, 349, 350, 413, 414, 415, 416, 417, 418], "sycl": [23, 33, 340, 360, 375, 417, 456, 457], "runtim": [23, 24, 30, 65, 155, 319, 354], "target": [23, 24], "aarch64": [23, 24], "x64": 23, "host": [23, 24], "arm": [23, 24], "comput": [23, 24, 63], "acl": 23, "window": [23, 65], "microsoft": 23, "visual": 23, "3": [23, 29], "option": [23, 24], "valid": [23, 25, 406, 411, 412, 456], "4": 23, "5": 23, "instal": 23, "common": [24, 309, 329], "configur": [24, 155, 438], "function": [24, 35, 164, 298, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361, 367, 368, 369, 370, 371, 406, 411, 412, 413, 414, 415, 416, 417, 418, 437, 456], "onednn_enable_workload": 24, "onednn_enable_primit": 24, "onednn_enable_primitive_cpu_isa": 24, "onednn_enable_primitive_gpu_isa": 24, "onednn_enable_gemm_kernels_isa": 24, "test": 24, "onednn_test_set": 24, "cpu": [24, 30, 31, 62, 63, 155, 405, 406, 413, 415, 456], "specif": [24, 28, 59], "architectur": [24, 25, 32], "openmp": 24, "thread": [24, 155, 170], "block": [24, 177, 438], "tbb": 24, "threadpool": [24, 170, 341], "vendor": 24, "bla": [24, 308], "gpu": [24, 62, 63, 405, 406, 412, 418, 456], "opencl": [24, 154, 324, 356, 364, 412, 416], "compon": 24, "input": [25, 43, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "align": 25, "requir": [25, 169], "r": [25, 32], "processor": [25, 32, 63], "graphic": [25, 32], "xe": [25, 32], "concat": [26, 80, 251, 310, 390, 478, 479], "constant": [27, 351], "cach": [27, 156, 159, 327, 350, 351], "time": [27, 30, 31, 36, 41, 159, 160, 178], "control": [27, 30, 31, 36, 41, 159, 160, 178], "run": [27, 31, 41, 159, 160, 178], "capac": 27, "environ": 27, "variabl": [27, 28], "name": 28, "convent": 28, "formula": 28, "verbos": [28, 178, 179], "rnn": [28, 164, 334, 377, 401, 402, 427, 432, 449, 459], "notat": 28, "format": [28, 167, 177, 437, 438], "tag": [28, 160], "regular": [29, 81], "group": [29, 43, 57, 81, 317, 419], "dilat": [29, 81], "deconvolut": [29, 267, 313, 407], "transpos": 29, "algorithm": [29, 185], "direct": 29, "winograd": 29, "automat": 29, "select": [29, 136], "dispatch": [30, 178, 179], "isa": 31, "hint": 31, "denorm": 32, "hardwar": 32, "interoper": [33, 154, 319, 324, 340, 341, 354, 356, 360, 364], "buffer": [33, 154, 437], "usm": [33, 154, 457], "interfac": [33, 154], "depend": [33, 154], "except": 34, "tutori": [35, 398, 403, 411, 421, 437, 461], "experiment": 36, "featur": [36, 160], "onednn_experimental_ukernel": 36, "onednn_experimental_profil": 36, "onednn_experimental_log": 36, "onednn_experimental_sycl_kernel_compil": 36, "logic": [37, 355], "fusion": [38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 300], "pattern": [38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 300], "structur": [38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56], "convtranspos": [40, 50, 84], "dump": 41, "gate": 42, "multi": 42, "layer": [42, 64, 320, 425], "perceptron": 42, "mlp": 42, "refer": [42, 43, 51, 53, 54, 63, 363], "queri": [43, 224], "attent": [43, 53], "gqa": 43, "4d": 43, "5d": 43, "interpol": [44, 104], "low": 45, "precis": 45, "int8": [45, 58, 60, 63, 387, 402, 414, 421], "bf16": [45, 388], "f16": 45, "matmul": [46, 51, 112, 279, 396, 397, 398, 400, 403, 421, 434, 461, 538, 539], "norm": 47, "pool": [48, 157, 283, 325, 437, 439], "reduct": [52, 161, 285, 331, 443, 561, 562], "dot": 53, "product": [53, 61, 318, 423], "sdpa": [53, 54], "propag": [53, 59, 437], "backpropag": 53, "compress": 54, "kei": 54, "valu": [54, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241], "softmax": [55, 139, 166, 290, 337, 452], "unari": 56, "best": 58, "practic": 58, "fp32": [58, 171], "aspect": 59, "kind": [59, 191, 203, 218], "workspac": 59, "process": [60, 173], "rang": 60, "factor": 60, "inner": [61, 318, 423], "inspect": [62, 463], "jit": 62, "nuanc": 63, "mix": 63, "u8": [63, 383], "s8": 63, "avx2": 63, "avx": 63, "512": 63, "dl": 63, "boost": 63, "same": 63, "root": 64, "squar": [64, 145], "header": [65, 406, 411, 412, 413, 414, 415, 416, 417, 418, 456], "file": 65, "harden": 65, "local": [66, 430], "respons": [66, 430], "lrn": [66, 277, 321], "matrix": [67, 175, 322, 436], "multipl": [67, 175, 177, 322, 436], "sparsiti": [67, 162], "csr": [67, 167], "encod": [67, 167], "coo": [67, 167], "pack": 67, "ab": 68, "oper": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 174, 179, 302], "absbackward": 69, "add": 70, "avgpool": 71, "avgpoolbackward": 72, "batchnormforwardtrain": 73, "batchnorminfer": 74, "batchnormtrainingbackward": 75, "biasadd": 76, "biasaddbackward": 77, "clamp": 78, "clampbackward": 79, "convolutionbackwarddata": 82, "convolutionbackwardweight": 83, "convtransposebackwarddata": 85, "convtransposebackwardweight": 86, "dequant": 87, "divid": 88, "dynamicdequant": 89, "dynamicquant": 90, "elu": 91, "elubackward": 92, "end": 93, "exp": 94, "gelu": 95, "gelubackward": 96, "genindex": 97, "greaterequ": 98, "groupnorm": 99, "hardsigmoid": 100, "hardsigmoidbackward": 101, "hardswish": 102, "hardswishbackward": 103, "interpolatebackward": 105, "layernorm": 106, "layernormbackward": 107, "leakyrelu": 108, "log": 109, "logsoftmax": 110, "logsoftmaxbackward": 111, "maximum": 113, "maxpool": 114, "maxpoolbackward": 115, "minimum": 116, "mish": 117, "mishbackward": 118, "multipli": 119, "pow": 120, "broadcast": [121, 122, 136], "rule": [121, 122, 136], "prelubackward": 122, "reciproc": 124, "reducel1": 125, "reducel2": 126, "reducemax": 127, "reducemean": 128, "reducemin": 129, "reduceprod": 130, "reducesum": 131, "relubackward": 133, "reorder": [134, 162, 286, 332, 405, 406, 437, 445, 563, 564], "sigmoid": 137, "sigmoidbackward": 138, "softmaxbackward": 140, "softplu": 141, "softplusbackward": 142, "sqrt": 143, "sqrtbackward": 144, "squareddiffer": 146, "staticreshap": 147, "statictranspos": 148, "subtract": 149, "tanhbackward": 151, "typecast": 152, "wildcard": 153, "set": 155, "whole": 155, "machin": 155, "singl": [155, 415, 418], "numa": 155, "domain": 155, "sever": 155, "core": 155, "within": 155, "persist": 156, "descriptor": [156, 411], "consumpt": 159, "profil": [159, 160, 178, 180, 330, 438, 463], "vtune": [160, 180], "itt": 160, "hotspot": 160, "microarchitectur": 160, "inform": [160, 173, 429], "perf": 160, "resampl": [163, 287, 333, 447], "nearest": 163, "neighbor": 163, "bilinear": 163, "cell": 164, "vanilla": [164, 459], "lstm": [164, 278, 432], "peephol": 164, "project": 164, "lstmp": 164, "gru": [164, 427], "linear": [164, 427], "befor": [164, 427], "reset": [164, 427], "augru": [164, 242, 377], "consider": 164, "shuffl": [165, 289, 336, 450], "layout": [165, 177], "spars": 167, "sort": 167, "system": 169, "base": 170, "bfp16": 171, "bfloat16": 172, "transit": 173, "mkl": 173, "dnn": 173, "summari": [173, 438], "chang": 173, "broken": 173, "compat": 173, "develop": [173, 363], "reduc": 175, "transform": [176, 344, 587], "understand": [177, 178], "nomenclatur": 177, "plain": 177, "nchw": 177, "nhwc": 177, "chwn": 177, "relev": 177, "read": 177, "stride": 177, "what": 177, "ar": 177, "8": 177, "16": 177, "troubleshoot": 178, "creation": [178, 179], "issu": 178, "workload": 178, "why": 178, "given": 178, "i": 178, "enabl": 178, "onednn_verbos": 178, "timestamp": 178, "decrypt": 178, "messag": 179, "catalogu": 179, "tm": 180, "enum": [181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241], "api_kind": 181, "accumulation_mod": 182, "dnnl_accumulation_mode_t": 183, "dnnl_alg_kind_t": 184, "cpu_isa": 186, "cpu_isa_hint": 187, "dnnl_cpu_isa_hints_t": 188, "dnnl_cpu_isa_t": 189, "dnnl_data_type_t": 190, "dnnl_engine_kind_t": 192, "dnnl_format_kind_t": 193, "dnnl_format_tag_t": 194, "fpmath_mod": 195, "dnnl_fpmath_mode_t": 196, "dnnl_graph_layout_type_t": 197, "data_typ": [198, 209], "layout_typ": 199, "property_typ": 200, "attr": 201, "dnnl_graph_op_attr_t": 202, "dnnl_graph_op_kind_t": 204, "polici": 205, "dnnl_graph_partition_policy_t": 206, "statu": [207, 235, 359], "dnnl_graph_tensor_property_t": 208, "format_kind": 210, "format_tag": 211, "sparse_encod": 212, "normalization_flag": 213, "dnnl_normalization_flags_t": 214, "ocl_interop": [215, 367, 369], "memory_kind": [215, 239], "dnnl_ocl_interop_memory_kind_t": 216, "dnnl_pack_type_t": 217, "dnnl_primitive_kind_t": 219, "profiling_data_kind": 220, "dnnl_profiling_data_kind_t": 221, "prop_kind": 222, "dnnl_prop_kind_t": 223, "dnnl_query_t": 225, "rnn_direct": 226, "dnnl_rnn_direction_t": 227, "rnn_flag": 228, "dnnl_rnn_flags_t": 229, "rounding_mod": 230, "dnnl_rounding_mode_t": 231, "scratchpad_mod": 232, "dnnl_scratchpad_mode_t": 233, "dnnl_sparse_encoding_t": 234, "dnnl_status_t": 236, "flag": 237, "dnnl_stream_flags_t": 238, "sycl_interop": [239, 368, 370], "dnnl_sycl_interop_memory_kind_t": 240, "ukernel": [241, 342, 343, 344, 345, 372, 394, 585, 586, 587, 601], "pack_typ": 241, "cpp": [242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "batch_norm": 243, "bnorm_u8_via_binary_postop": 245, "cnn_inference_f32": [246, 247], "cnn_inference_int8": 248, "cnn_training_bf16": 249, "cnn_training_f32": 250, "cpu_brgemm": 253, "cpu_cnn_training_f32": 254, "cpu_getting_start": 255, "cpu_inference_int8": 256, "cpu_matmul_coo": 257, "cpu_matmul_csr": 258, "cpu_matmul_quant": 259, "cpu_matmul_weights_compress": 260, "cpu_rnn_inference_f32": 261, "cpu_rnn_inference_int8": 262, "cpu_sgemm_and_matmul": 263, "cpu_single_op_partit": 264, "cross_engine_reord": [265, 266], "getting_start": 269, "gpu_opencl_getting_start": 270, "gpu_opencl_interop": 271, "group_norm": 272, "inference_int8_matmul": 273, "inner_product": 274, "layer_norm": 275, "lbr_gru": 276, "matmul_perf": 280, "memory_format_propag": [281, 437], "performance_profil": 282, "rnn_training_f32": 288, "sycl_getting_start": 292, "sycl_interop_buff": 293, "sycl_interop_usm": 294, "sycl_single_op_partit": 295, "vanilla_rnn": 296, "weights_decompression_matmul": 297, "global": [298, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361, 367, 368, 369, 370, 371], "namespac": [298, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "other": 300, "program": 301, "macro": [312, 323, 329, 335, 355], "servic": 335, "brgemm": [343, 394, 586], "util": [345, 346, 362], "deep": 363, "neural": 363, "network": 363, "guid": 363, "threadpool_interop": [371, 582], "std": 374, "orphan": 376, "untitl": [378, 380, 382, 384, 391, 393, 399, 404, 408, 410, 420, 422, 424, 426, 428, 431, 433, 435, 440, 442, 444, 446, 448, 451, 453, 455, 460, 462], "bnorm": 383, "cnn": [385, 386, 387, 388, 389, 395], "f32": [385, 386, 389, 395, 401, 449], "comparison": 403, "sgemm": 403, "public": [406, 411, 412, 413, 414, 415, 416, 417, 418, 456], "cross_engine_reorder_tutori": 406, "wrap": [406, 411, 412, 456], "get": [406, 412, 413, 414, 415, 416, 417, 418, 456], "result": [406, 411, 412, 437, 456], "all": 406, "element": 409, "wise": 409, "getting_started_tutori": 411, "prepar": 411, "outsid": 411, "altern": 411, "wai": 411, "obtain": 411, "main": [411, 456], "start": [412, 413, 416, 417, 456], "gpu_opencl_interop_tutori": 412, "initi": [412, 437, 456], "custom": [412, 456], "cpu_getting_started_tutori": 413, "simple_pattern_int8": 414, "cpu_single_op_partition_tutori": 415, "ocl_getting_started_tutori": 416, "sycl_getting_started_tutori": 417, "sycl_single_op_partition_tutori": 418, "legal": 429, "trademark": 429, "determin": 437, "need": 437, "intermedi": 437, "necessari": 437, "walkthrough": 438, "naiv": 438, "fuse": 438, "notic": 438, "both": 456, "sycl_interop_buffer_tutori": 456, "todo": 458, "list": 458, "decompress": 461, "struct": [465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599], "args_t": 465, "cpu_deletor_t": 466, "augru_backward": [467, 468], "inherit": [467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591], "member": [467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591], "primitive_desc": [468, 470, 472, 474, 476, 479, 481, 483, 485, 487, 489, 491, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 545, 547, 551, 553, 559, 562, 564, 566, 568, 571, 573, 575, 577, 581, 589, 591], "augru_forward": [469, 470], "batch_normalization_backward": [471, 472], "batch_normalization_forward": [473, 474], "dnnl_brgemm": 477, "convolution_backward_data": [480, 481], "convolution_backward_weight": [482, 483], "convolution_forward": [484, 485], "deconvolution_backward_data": [486, 487], "deconvolution_backward_weight": [488, 489], "deconvolution_forward": [490, 491], "eltwise_backward": [492, 493], "eltwise_forward": [494, 495], "dnnl_engin": 496, "dnnl_exec_arg_t": 499, "field": [499, 500, 501, 582, 592], "dnnl_graph_inplace_pair_t": 500, "dnnl_graph_logical_tensor_t": 501, "group_normalization_backward": [502, 503], "group_normalization_forward": [504, 505], "gru_backward": [506, 507], "gru_forward": [508, 509], "templat": [510, 511], "handle_trait": 511, "inner_product_backward_data": [512, 513], "inner_product_backward_weight": [514, 515], "inner_product_forward": [516, 517], "layer_normalization_backward": [518, 519], "layer_normalization_forward": [520, 521], "lbr_augru_backward": [522, 523], "lbr_augru_forward": [524, 525], "lbr_gru_backward": [526, 527], "lbr_gru_forward": [528, 529], "lrn_backward": [530, 531], "lrn_forward": [532, 533], "lstm_backward": [534, 535], "lstm_forward": [536, 537], "dnnl_memori": 540, "dnnl_memory_desc": 542, "desc": 543, "pooling_backward": [544, 545], "pooling_forward": [546, 547], "dnnl_post_op": 548, "post_op": 549, "prelu_backward": [550, 551], "prelu_forward": [552, 553], "dnnl_primit": 554, "dnnl_primitive_attr": 556, "primitive_attr": 557, "dnnl_primitive_desc": 558, "primitive_desc_bas": 560, "resampling_backward": [565, 566], "resampling_forward": [567, 568], "rnn_primitive_desc_bas": 569, "shuffle_backward": [570, 571], "shuffle_forward": [572, 573], "softmax_backward": [574, 575], "softmax_forward": [576, 577], "dnnl_stream": 578, "threadpool_ifac": 582, "dnnl_transform": 583, "dnnl_ukernel_attr_param": 584, "attr_param": 585, "vanilla_rnn_backward": [588, 589], "vanilla_rnn_forward": [590, 591], "dnnl_version_t": 592, "example_allows_unimpl": 593, "gemm_dims_t": 594, "gqa_dims_t": 595, "mlp_dims_t": 596, "mqa_dims_t": 597, "sdpa_dims_t": 598, "sycl_deletor_t": 599}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Build and Link oneDNN": [[1, "build-and-link-onednn"]], "Advanced Topics": [[0, "advanced-topics"]], "Primitive Attributes: dropout": [[13, "primitive-attributes-dropout"]], "Introduction": [[13, "introduction"], [19, "introduction"], [16, "introduction"], [37, "introduction"], [60, "introduction"], [172, "introduction"], [174, "introduction"], [177, "introduction"]], "Implementation": [[13, "implementation"]], "API": [[13, "api"], [16, "api"], [25, "api"], [167, "api"]], "Primitive Attributes: deterministic": [[12, "primitive-attributes-deterministic"]], "Primitive Attributes": [[10, "primitive-attributes"]], "Attributes Usage": [[10, "attributes-usage"]], "Supported Attributes": [[10, "supported-attributes"]], "Attribute Related Error Handling": [[10, "attribute-related-error-handling"]], "Primitive Attributes: accumulation mode": [[11, "primitive-attributes-accumulation-mode"]], "class dnnl::graph::allocator": [[2, "class-dnnl-graph-allocator"]], "Overview": [[2, "overview"], [3, "overview"], [8, "overview"], [39, "overview"], [38, "overview"], [40, "overview"], [43, "overview"], [42, "overview"], [44, "overview"], [33, "overview"], [47, "overview"], [46, "overview"], [48, "overview"], [49, "overview"], [50, "overview"], [51, "overview"], [53, "overview"], [52, "overview"], [54, "overview"], [55, "overview"], [56, "overview"], [6, "overview"], [7, "overview"], [5, "overview"], [4, "overview"], [154, "overview"], [182, "overview"], [183, "overview"], [184, "overview"], [185, "overview"], [186, "overview"], [187, "overview"], [189, "overview"], [188, "overview"], [191, "overview"], [190, "overview"], [192, "overview"], [193, "overview"], [194, "overview"], [195, "overview"], [196, "overview"], [197, "overview"], [199, "overview"], [198, "overview"], [200, "overview"], [201, "overview"], [202, "overview"], [205, "overview"], [207, "overview"], [206, "overview"], [208, "overview"], [209, "overview"], [211, "overview"], [210, "overview"], [212, "overview"], [213, "overview"], [215, "overview"], [214, "overview"], [217, "overview"], [216, "overview"], [218, "overview"], [219, "overview"], [221, "overview"], [220, "overview"], [222, "overview"], [223, "overview"], [225, "overview"], [224, "overview"], [227, "overview"], [226, "overview"], [228, "overview"], [229, "overview"], [230, "overview"], [231, "overview"], [232, "overview"], [233, "overview"], [235, "overview"], [234, "overview"], [237, "overview"], [236, "overview"], [238, "overview"], [239, "overview"], [240, "overview"], [241, "overview"], [298, "overview"], [304, "overview"], [305, "overview"], [307, "overview"], [306, "overview"], [308, "overview"], [311, "overview"], [310, "overview"], [312, "overview"], [313, "overview"], [315, "overview"], [314, "overview"], [317, "overview"], [316, "overview"], [318, "overview"], [321, "overview"], [320, "overview"], [323, "overview"], [322, "overview"], [324, "overview"], [325, "overview"], [326, "overview"], [327, "overview"], [328, "overview"], [329, "overview"], [330, "overview"], [331, "overview"], [333, "overview"], [332, "overview"], [334, "overview"], [335, "overview"], [337, "overview"], [336, "overview"], [339, "overview"], [338, "overview"], [340, "overview"], [341, "overview"], [343, "overview"], [342, "overview"], [349, "overview"], [348, "overview"], [351, "overview"], [350, "overview"], [352, "overview"], [353, "overview"], [355, "overview"], [357, "overview"], [356, "overview"], [358, "overview"], [360, "overview"], [361, "overview"], [367, "overview"], [369, "overview"], [368, "overview"], [371, "overview"], [370, "overview"], [373, "overview"], [467, "overview"], [469, "overview"], [468, "overview"], [471, "overview"], [470, "overview"], [473, "overview"], [472, "overview"], [475, "overview"], [474, "overview"], [476, "overview"], [478, "overview"], [479, "overview"], [480, "overview"], [481, "overview"], [482, "overview"], [483, "overview"], [485, "overview"], [484, "overview"], [486, "overview"], [487, "overview"], [488, "overview"], [489, "overview"], [490, "overview"], [491, "overview"], [492, "overview"], [493, "overview"], [495, "overview"], [494, "overview"], [497, "overview"], [499, "overview"], [498, "overview"], [501, "overview"], [500, "overview"], [503, "overview"], [502, "overview"], [504, "overview"], [505, "overview"], [506, "overview"], [507, "overview"], [509, "overview"], [508, "overview"], [510, "overview"], [512, "overview"], [513, "overview"], [515, "overview"], [514, "overview"], [517, "overview"], [516, "overview"], [518, "overview"], [519, "overview"], [520, "overview"], [521, "overview"], [522, "overview"], [523, "overview"], [525, "overview"], [524, "overview"], [527, "overview"], [526, "overview"], [528, "overview"], [529, "overview"], [531, "overview"], [530, "overview"], [533, "overview"], [532, "overview"], [534, "overview"], [535, "overview"], [537, "overview"], [536, "overview"], [538, "overview"], [539, "overview"], [541, "overview"], [543, "overview"], [544, "overview"], [545, "overview"], [547, "overview"], [546, "overview"], [548, "overview"], [549, "overview"], [550, "overview"], [551, "overview"], [552, "overview"], [553, "overview"], [555, "overview"], [556, "overview"], [557, "overview"], [559, "overview"], [560, "overview"], [561, "overview"], [563, "overview"], [562, "overview"], [565, "overview"], [564, "overview"], [566, "overview"], [567, "overview"], [568, "overview"], [569, "overview"], [571, "overview"], [570, "overview"], [573, "overview"], [572, "overview"], [574, "overview"], [575, "overview"], [576, "overview"], [577, "overview"], [579, "overview"], [580, "overview"], [581, "overview"], [582, "overview"], [585, "overview"], [587, "overview"], [586, "overview"], [588, "overview"], [589, "overview"], [591, "overview"], [590, "overview"], [592, "overview"]], "Detailed Documentation": [[2, "detailed-documentation"], [3, "detailed-documentation"], [8, "detailed-documentation"], [6, "detailed-documentation"], [7, "detailed-documentation"], [5, "detailed-documentation"], [4, "detailed-documentation"], [182, "detailed-documentation"], [183, "detailed-documentation"], [184, "detailed-documentation"], [185, "detailed-documentation"], [186, "detailed-documentation"], [187, "detailed-documentation"], [189, "detailed-documentation"], [188, "detailed-documentation"], [191, "detailed-documentation"], [190, "detailed-documentation"], [192, "detailed-documentation"], [193, "detailed-documentation"], [194, "detailed-documentation"], [195, "detailed-documentation"], [196, "detailed-documentation"], [197, "detailed-documentation"], [199, "detailed-documentation"], [198, "detailed-documentation"], [200, "detailed-documentation"], [201, "detailed-documentation"], [202, "detailed-documentation"], [205, "detailed-documentation"], [207, "detailed-documentation"], [206, "detailed-documentation"], [208, "detailed-documentation"], [209, "detailed-documentation"], [211, "detailed-documentation"], [210, "detailed-documentation"], [212, "detailed-documentation"], [213, "detailed-documentation"], [215, "detailed-documentation"], [214, "detailed-documentation"], [217, "detailed-documentation"], [216, "detailed-documentation"], [218, "detailed-documentation"], [219, "detailed-documentation"], [221, "detailed-documentation"], [220, "detailed-documentation"], [222, "detailed-documentation"], [223, "detailed-documentation"], [225, "detailed-documentation"], [224, "detailed-documentation"], [227, "detailed-documentation"], [226, "detailed-documentation"], [228, "detailed-documentation"], [229, "detailed-documentation"], [230, "detailed-documentation"], [231, "detailed-documentation"], [232, "detailed-documentation"], [233, "detailed-documentation"], [235, "detailed-documentation"], [234, "detailed-documentation"], [237, "detailed-documentation"], [236, "detailed-documentation"], [238, "detailed-documentation"], [239, "detailed-documentation"], [240, "detailed-documentation"], [241, "detailed-documentation"], [298, "detailed-documentation"], [304, "detailed-documentation"], [305, "detailed-documentation"], [307, "detailed-documentation"], [306, "detailed-documentation"], [308, "detailed-documentation"], [311, "detailed-documentation"], [310, "detailed-documentation"], [312, "detailed-documentation"], [313, "detailed-documentation"], [315, "detailed-documentation"], [314, "detailed-documentation"], [317, "detailed-documentation"], [316, "detailed-documentation"], [318, "detailed-documentation"], [321, "detailed-documentation"], [320, "detailed-documentation"], [323, "detailed-documentation"], [322, "detailed-documentation"], [324, "detailed-documentation"], [325, "detailed-documentation"], [326, "detailed-documentation"], [327, "detailed-documentation"], [328, "detailed-documentation"], [329, "detailed-documentation"], [330, "detailed-documentation"], [331, "detailed-documentation"], [333, "detailed-documentation"], [332, "detailed-documentation"], [334, "detailed-documentation"], [335, "detailed-documentation"], [337, "detailed-documentation"], [336, "detailed-documentation"], [339, "detailed-documentation"], [338, "detailed-documentation"], [340, "detailed-documentation"], [341, "detailed-documentation"], [343, "detailed-documentation"], [342, "detailed-documentation"], [349, "detailed-documentation"], [348, "detailed-documentation"], [351, "detailed-documentation"], [350, "detailed-documentation"], [352, "detailed-documentation"], [353, "detailed-documentation"], [355, "detailed-documentation"], [357, "detailed-documentation"], [356, "detailed-documentation"], [358, "detailed-documentation"], [360, "detailed-documentation"], [361, "detailed-documentation"], [367, "detailed-documentation"], [369, "detailed-documentation"], [368, "detailed-documentation"], [371, "detailed-documentation"], [370, "detailed-documentation"], [373, "detailed-documentation"], [467, "detailed-documentation"], [469, "detailed-documentation"], [468, "detailed-documentation"], [471, "detailed-documentation"], [470, "detailed-documentation"], [473, "detailed-documentation"], [472, "detailed-documentation"], [475, "detailed-documentation"], [474, "detailed-documentation"], [476, "detailed-documentation"], [478, "detailed-documentation"], [479, "detailed-documentation"], [480, "detailed-documentation"], [481, "detailed-documentation"], [482, "detailed-documentation"], [483, "detailed-documentation"], [485, "detailed-documentation"], [484, "detailed-documentation"], [486, "detailed-documentation"], [487, "detailed-documentation"], [488, "detailed-documentation"], [489, "detailed-documentation"], [490, "detailed-documentation"], [491, "detailed-documentation"], [492, "detailed-documentation"], [493, "detailed-documentation"], [495, "detailed-documentation"], [494, "detailed-documentation"], [497, "detailed-documentation"], [499, "detailed-documentation"], [498, "detailed-documentation"], [501, "detailed-documentation"], [500, "detailed-documentation"], [503, "detailed-documentation"], [502, "detailed-documentation"], [504, "detailed-documentation"], [505, "detailed-documentation"], [506, "detailed-documentation"], [507, "detailed-documentation"], [509, "detailed-documentation"], [508, "detailed-documentation"], [510, "detailed-documentation"], [512, "detailed-documentation"], [513, "detailed-documentation"], [515, "detailed-documentation"], [514, "detailed-documentation"], [517, "detailed-documentation"], [516, "detailed-documentation"], [518, "detailed-documentation"], [519, "detailed-documentation"], [520, "detailed-documentation"], [521, "detailed-documentation"], [522, "detailed-documentation"], [523, "detailed-documentation"], [525, "detailed-documentation"], [524, "detailed-documentation"], [527, "detailed-documentation"], [526, "detailed-documentation"], [528, "detailed-documentation"], [529, "detailed-documentation"], [531, "detailed-documentation"], [530, "detailed-documentation"], [533, "detailed-documentation"], [532, "detailed-documentation"], [534, "detailed-documentation"], [535, "detailed-documentation"], [537, "detailed-documentation"], [536, "detailed-documentation"], [538, "detailed-documentation"], [539, "detailed-documentation"], [541, "detailed-documentation"], [543, "detailed-documentation"], [544, "detailed-documentation"], [545, "detailed-documentation"], [547, "detailed-documentation"], [546, "detailed-documentation"], [548, "detailed-documentation"], [549, "detailed-documentation"], [550, "detailed-documentation"], [551, "detailed-documentation"], [552, "detailed-documentation"], [553, "detailed-documentation"], [555, "detailed-documentation"], [556, "detailed-documentation"], [557, "detailed-documentation"], [559, "detailed-documentation"], [560, "detailed-documentation"], [561, "detailed-documentation"], [563, "detailed-documentation"], [562, "detailed-documentation"], [565, "detailed-documentation"], [564, "detailed-documentation"], [566, "detailed-documentation"], [567, "detailed-documentation"], [568, "detailed-documentation"], [569, "detailed-documentation"], [571, "detailed-documentation"], [570, "detailed-documentation"], [573, "detailed-documentation"], [572, "detailed-documentation"], [574, "detailed-documentation"], [575, "detailed-documentation"], [576, "detailed-documentation"], [577, "detailed-documentation"], [579, "detailed-documentation"], [580, "detailed-documentation"], [581, "detailed-documentation"], [582, "detailed-documentation"], [585, "detailed-documentation"], [587, "detailed-documentation"], [586, "detailed-documentation"], [588, "detailed-documentation"], [589, "detailed-documentation"], [591, "detailed-documentation"], [590, "detailed-documentation"], [592, "detailed-documentation"]], "Construction": [[2, "construction"], [3, "construction"], [8, "construction"], [6, "construction"], [7, "construction"], [5, "construction"], [4, "construction"], [467, "construction"], [469, "construction"], [468, "construction"], [471, "construction"], [470, "construction"], [473, "construction"], [472, "construction"], [475, "construction"], [474, "construction"], [476, "construction"], [478, "construction"], [479, "construction"], [480, "construction"], [481, "construction"], [482, "construction"], [483, "construction"], [485, "construction"], [484, "construction"], [486, "construction"], [487, "construction"], [488, "construction"], [489, "construction"], [490, "construction"], [491, "construction"], [492, "construction"], [493, "construction"], [495, "construction"], [494, "construction"], [497, "construction"], [498, "construction"], [503, "construction"], [502, "construction"], [504, "construction"], [505, "construction"], [506, "construction"], [507, "construction"], [509, "construction"], [508, "construction"], [510, "construction"], [512, "construction"], [513, "construction"], [515, "construction"], [514, "construction"], [517, "construction"], [516, "construction"], [518, "construction"], [519, "construction"], [520, "construction"], [521, "construction"], [522, "construction"], [523, "construction"], [525, "construction"], [524, "construction"], [527, "construction"], [526, "construction"], [528, "construction"], [529, "construction"], [531, "construction"], [530, "construction"], [533, "construction"], [532, "construction"], [534, "construction"], [535, "construction"], [537, "construction"], [536, "construction"], [538, "construction"], [539, "construction"], [541, "construction"], [543, "construction"], [544, "construction"], [545, "construction"], [547, "construction"], [546, "construction"], [549, "construction"], [550, "construction"], [551, "construction"], [552, "construction"], [553, "construction"], [555, "construction"], [557, "construction"], [561, "construction"], [563, "construction"], [562, "construction"], [565, "construction"], [564, "construction"], [566, "construction"], [567, "construction"], [568, "construction"], [569, "construction"], [571, "construction"], [570, "construction"], [573, "construction"], [572, "construction"], [574, "construction"], [575, "construction"], [576, "construction"], [577, "construction"], [579, "construction"], [580, "construction"], [581, "construction"], [587, "construction"], [586, "construction"], [588, "construction"], [589, "construction"], [591, "construction"], [590, "construction"]], "class dnnl::graph::compiled_partition": [[3, "class-dnnl-graph-compiled-partition"]], "Methods": [[3, "methods"], [8, "methods"], [6, "methods"], [7, "methods"], [5, "methods"], [4, "methods"], [468, "methods"], [470, "methods"], [472, "methods"], [474, "methods"], [476, "methods"], [479, "methods"], [481, "methods"], [483, "methods"], [485, "methods"], [487, "methods"], [489, "methods"], [491, "methods"], [493, "methods"], [495, "methods"], [497, "methods"], [498, "methods"], [503, "methods"], [505, "methods"], [507, "methods"], [509, "methods"], [510, "methods"], [513, "methods"], [515, "methods"], [517, "methods"], [519, "methods"], [521, "methods"], [523, "methods"], [525, "methods"], [527, "methods"], [529, "methods"], [531, "methods"], [533, "methods"], [535, "methods"], [537, "methods"], [539, "methods"], [541, "methods"], [543, "methods"], [545, "methods"], [547, "methods"], [549, "methods"], [551, "methods"], [553, "methods"], [555, "methods"], [557, "methods"], [559, "methods"], [560, "methods"], [563, "methods"], [562, "methods"], [564, "methods"], [566, "methods"], [568, "methods"], [569, "methods"], [571, "methods"], [573, "methods"], [575, "methods"], [577, "methods"], [579, "methods"], [581, "methods"], [582, "methods"], [585, "methods"], [587, "methods"], [586, "methods"], [589, "methods"], [591, "methods"]], "Primitive Attributes: Scratchpad": [[18, "primitive-attributes-scratchpad"]], "Scratchpad Memory Engine": [[18, "scratchpad-memory-engine"]], "Examples": [[18, "examples"], [42, "examples"], [20, "examples"], [22, "examples"], [57, "examples"], [67, "examples"], [175, "examples"], [176, "examples"]], "Library Manages Scratchpad": [[18, "library-manages-scratchpad"]], "User Manages Scratchpad": [[18, "user-manages-scratchpad"]], "Basic Concepts": [[19, "basic-concepts"], [37, "basic-concepts"], [174, "basic-concepts"]], "Primitives": [[19, "primitives"], [19, "id2"], [328, "primitives"]], "Engines": [[19, "engines"]], "Streams": [[19, "streams"]], "Memory Objects": [[19, "memory-objects"], [19, "id1"]], "Levels of Abstraction": [[19, "levels-of-abstraction"]], "Creating Memory Objects and Primitives": [[19, "creating-memory-objects-and-primitives"]], "Graph Extension": [[19, "graph-extension"], [299, "graph-extension"]], "Micro-kernel Extension": [[19, "micro-kernel-extension"]], "class dnnl::graph::tensor": [[8, "class-dnnl-graph-tensor"]], "class simple_memory_pool_t": [[9, "class-simple-memory-pool-t"]], "Primitive Attributes: rounding mode": [[17, "primitive-attributes-rounding-mode"]], "Primitive Attributes: Quantization": [[16, "primitive-attributes-quantization"]], "Quantization Model": [[16, "quantization-model"]], "Numerical behavior": [[16, "numerical-behavior"]], "Example: Convolution Quantization Workflow": [[16, "example-convolution-quantization-workflow"]], "Per-Channel Scaling": [[16, "per-channel-scaling"]], "Argument Scaling": [[16, "argument-scaling"]], "Example 1: weights quantization with per-output-channel scaling": [[16, "example-1-weights-quantization-with-per-output-channel-scaling"]], "Example 2: convolution with per-output-channel quantization": [[16, "example-2-convolution-with-per-output-channel-quantization"]], "Concat": [[26, "concat"], [80, "concat"], [310, "concat"]], "General": [[26, "general"], [20, "general"], [22, "general"], [57, "general"], [61, "general"], [34, "general"], [29, "general"], [64, "general"], [67, "general"], [66, "general"], [68, "general"], [69, "general"], [71, "general"], [70, "general"], [72, "general"], [73, "general"], [74, "general"], [75, "general"], [76, "general"], [77, "general"], [79, "general"], [78, "general"], [80, "general"], [81, "general"], [82, "general"], [83, "general"], [85, "general"], [84, "general"], [87, "general"], [86, "general"], [89, "general"], [88, "general"], [90, "general"], [91, "general"], [92, "general"], [93, "general"], [94, "general"], [95, "general"], [97, "general"], [96, "general"], [99, "general"], [98, "general"], [101, "general"], [100, "general"], [102, "general"], [103, "general"], [105, "general"], [104, "general"], [106, "general"], [107, "general"], [109, "general"], [108, "general"], [111, "general"], [110, "general"], [112, "general"], [113, "general"], [114, "general"], [115, "general"], [117, "general"], [116, "general"], [118, "general"], [119, "general"], [121, "general"], [120, "general"], [122, "general"], [123, "general"], [125, "general"], [124, "general"], [127, "general"], [126, "general"], [128, "general"], [129, "general"], [131, "general"], [130, "general"], [133, "general"], [132, "general"], [135, "general"], [134, "general"], [136, "general"], [137, "general"], [138, "general"], [139, "general"], [140, "general"], [141, "general"], [143, "general"], [142, "general"], [144, "general"], [145, "general"], [147, "general"], [146, "general"], [149, "general"], [148, "general"], [150, "general"], [151, "general"], [152, "general"], [153, "general"], [157, "general"], [158, "general"], [161, "general"], [162, "general"], [163, "general"], [164, "general"], [165, "general"], [166, "general"], [168, "general"], [175, "general"], [176, "general"]], "Execution Arguments": [[26, "execution-arguments"], [20, "execution-arguments"], [22, "execution-arguments"], [57, "execution-arguments"], [61, "execution-arguments"], [34, "execution-arguments"], [29, "execution-arguments"], [64, "execution-arguments"], [67, "execution-arguments"], [66, "execution-arguments"], [97, "execution-arguments"], [98, "execution-arguments"], [157, "execution-arguments"], [158, "execution-arguments"], [161, "execution-arguments"], [162, "execution-arguments"], [163, "execution-arguments"], [164, "execution-arguments"], [165, "execution-arguments"], [166, "execution-arguments"], [168, "execution-arguments"]], "Implementation Details": [[26, "implementation-details"], [20, "implementation-details"], [22, "implementation-details"], [57, "implementation-details"], [61, "implementation-details"], [34, "implementation-details"], [29, "implementation-details"], [64, "implementation-details"], [67, "implementation-details"], [66, "implementation-details"], [157, "implementation-details"], [158, "implementation-details"], [161, "implementation-details"], [162, "implementation-details"], [163, "implementation-details"], [164, "implementation-details"], [166, "implementation-details"], [168, "implementation-details"]], "General Notes": [[26, "general-notes"], [20, "general-notes"], [22, "general-notes"], [57, "general-notes"], [61, "general-notes"], [34, "general-notes"], [29, "general-notes"], [64, "general-notes"], [67, "general-notes"], [66, "general-notes"], [157, "general-notes"], [158, "general-notes"], [161, "general-notes"], [162, "general-notes"], [163, "general-notes"], [166, "general-notes"], [168, "general-notes"]], "Data Types Support": [[26, "data-types-support"], [22, "data-types-support"], [161, "data-types-support"], [162, "data-types-support"], [168, "data-types-support"]], "Data Representation": [[26, "data-representation"], [20, "data-representation"], [22, "data-representation"], [57, "data-representation"], [61, "data-representation"], [34, "data-representation"], [29, "data-representation"], [64, "data-representation"], [67, "data-representation"], [66, "data-representation"], [157, "data-representation"], [158, "data-representation"], [161, "data-representation"], [162, "data-representation"], [164, "data-representation"], [166, "data-representation"], [168, "data-representation"], [175, "data-representation"], [176, "data-representation"]], "Post-Ops and Attributes": [[26, "post-ops-and-attributes"], [20, "post-ops-and-attributes"], [22, "post-ops-and-attributes"], [57, "post-ops-and-attributes"], [61, "post-ops-and-attributes"], [34, "post-ops-and-attributes"], [157, "post-ops-and-attributes"], [161, "post-ops-and-attributes"], [162, "post-ops-and-attributes"], [163, "post-ops-and-attributes"], [164, "post-ops-and-attributes"], [165, "post-ops-and-attributes"], [168, "post-ops-and-attributes"]], "Implementation Limitations": [[26, "implementation-limitations"], [39, "implementation-limitations"], [43, "implementation-limitations"], [44, "implementation-limitations"], [47, "implementation-limitations"], [20, "implementation-limitations"], [48, "implementation-limitations"], [49, "implementation-limitations"], [50, "implementation-limitations"], [22, "implementation-limitations"], [54, "implementation-limitations"], [57, "implementation-limitations"], [61, "implementation-limitations"], [34, "implementation-limitations"], [29, "implementation-limitations"], [64, "implementation-limitations"], [67, "implementation-limitations"], [66, "implementation-limitations"], [157, "implementation-limitations"], [158, "implementation-limitations"], [161, "implementation-limitations"], [162, "implementation-limitations"], [163, "implementation-limitations"], [164, "implementation-limitations"], [165, "implementation-limitations"], [166, "implementation-limitations"], [168, "implementation-limitations"]], "Performance Tips": [[26, "performance-tips"], [20, "performance-tips"], [22, "performance-tips"], [57, "performance-tips"], [61, "performance-tips"], [34, "performance-tips"], [29, "performance-tips"], [64, "performance-tips"], [67, "performance-tips"], [66, "performance-tips"], [157, "performance-tips"], [158, "performance-tips"], [161, "performance-tips"], [162, "performance-tips"], [163, "performance-tips"], [165, "performance-tips"], [166, "performance-tips"], [168, "performance-tips"]], "Example": [[26, "example"], [39, "example"], [43, "example"], [46, "example"], [49, "example"], [53, "example"], [60, "example"], [61, "example"], [34, "example"], [29, "example"], [64, "example"], [66, "example"], [157, "example"], [158, "example"], [161, "example"], [162, "example"], [163, "example"], [164, "example"], [165, "example"], [166, "example"], [168, "example"], [172, "example"], [178, "example"]], "Constant Tensor Cache": [[27, "constant-tensor-cache"], [351, "constant-tensor-cache"]], "Build-Time Controls": [[27, "build-time-controls"], [41, "build-time-controls"], [160, "build-time-controls"], [160, "id1"], [178, "build-time-controls"]], "Run-Time Controls": [[27, "run-time-controls"], [41, "run-time-controls"], [160, "run-time-controls"], [160, "id2"], [178, "run-time-controls"]], "Constant Tensor Cache Capacity Control API": [[27, "constant-tensor-cache-capacity-control-api"]], "Environment Variable": [[27, "environment-variable"]], "CPU Dispatcher Control": [[30, "cpu-dispatcher-control"]], "Build-time Controls": [[30, "build-time-controls"], [31, "build-time-controls"], [36, "build-time-controls"], [159, "build-time-controls"]], "Runtime Controls": [[30, "runtime-controls"]], "CPU ISA Hints": [[31, "cpu-isa-hints"]], "Run-time Controls": [[31, "run-time-controls"], [159, "run-time-controls"]], "Experimental features": [[36, "experimental-features"], [36, "id1"]], "Features details": [[36, "features-details"]], "ONEDNN_EXPERIMENTAL_UKERNEL": [[36, "onednn-experimental-ukernel"]], "ONEDNN_EXPERIMENTAL_PROFILING": [[36, "onednn-experimental-profiling"]], "Limitations": [[36, "limitations"], [51, "limitations"], [156, "limitations"]], "ONEDNN_EXPERIMENTAL_LOGGING": [[36, "onednn-experimental-logging"]], "ONEDNN_EXPERIMENTAL_SYCL_KERNEL_COMPILER": [[36, "onednn-experimental-sycl-kernel-compiler"]], "Logical Tensor": [[37, "logical-tensor"], [355, "logical-tensor"]], "Op": [[37, "op"], [357, "op"]], "Graph": [[37, "graph"], [353, "graph"]], "Partition": [[37, "partition"], [358, "partition"]], "Compiled Partition": [[37, "compiled-partition"], [349, "compiled-partition"]], "Tensor": [[37, "tensor"], [361, "tensor"]], "Convolution Fusion Patterns": [[39, "convolution-fusion-patterns"]], "Pattern Structure": [[39, "pattern-structure"], [38, "pattern-structure"], [40, "pattern-structure"], [44, "pattern-structure"], [47, "pattern-structure"], [46, "pattern-structure"], [48, "pattern-structure"], [49, "pattern-structure"], [50, "pattern-structure"], [51, "pattern-structure"], [52, "pattern-structure"], [55, "pattern-structure"], [56, "pattern-structure"]], "Data Types": [[39, "data-types"], [38, "data-types"], [40, "data-types"], [43, "data-types"], [42, "data-types"], [44, "data-types"], [32, "data-types"], [47, "data-types"], [46, "data-types"], [48, "data-types"], [49, "data-types"], [50, "data-types"], [51, "data-types"], [53, "data-types"], [52, "data-types"], [54, "data-types"], [55, "data-types"], [56, "data-types"], [61, "data-types"], [29, "data-types"], [67, "data-types"], [163, "data-types"], [165, "data-types"], [175, "data-types"], [176, "data-types"]], "Binary Fusion Patterns": [[38, "binary-fusion-patterns"]], "Graph Dump": [[41, "graph-dump"]], "ConvTranspose Fusion Patterns": [[40, "convtranspose-fusion-patterns"]], "Grouped Query Attention (GQA)": [[43, "grouped-query-attention-gqa"]], "GQA Pattern": [[43, "gqa-pattern"]], "GQA Pattern with 4D input and output": [[43, "gqa-pattern-with-4d-input-and-output"]], "GQA Pattern with 5D input and output": [[43, "gqa-pattern-with-5d-input-and-output"]], "References": [[43, "references"], [42, "references"], [53, "references"], [54, "references"], [63, "references"]], "Gated Multi-Layer Perceptron (Gated-MLP)": [[42, "gated-multi-layer-perceptron-gated-mlp"]], "Gated-MLP patterns": [[42, "gated-mlp-patterns"]], "Floating-point Gated-MLP": [[42, "floating-point-gated-mlp"]], "Implementation limitations": [[42, "implementation-limitations"], [53, "implementation-limitations"], [175, "implementation-limitations"], [176, "implementation-limitations"]], "Interpolate Fusion Patterns": [[44, "interpolate-fusion-patterns"]], "Low Precision": [[45, "low-precision"]], "INT8": [[45, "int8"]], "BF16/F16": [[45, "bf16-f16"]], "Primitive Attributes: floating-point math mode": [[14, "primitive-attributes-floating-point-math-mode"]], "The floating-point math mode attribute.": [[14, "the-floating-point-math-mode-attribute"]], "Enforcing the floating-point math mode to an integral primitive.": [[14, "enforcing-the-floating-point-math-mode-to-an-integral-primitive"]], "A note on the default floating-point math mode.": [[14, "a-note-on-the-default-floating-point-math-mode"]], "Primitive Attributes: Post-ops": [[15, "primitive-attributes-post-ops"]], "Supported Post-ops": [[15, "supported-post-ops"]], "Eltwise Post-op": [[15, "eltwise-post-op"]], "Sum Post-op": [[15, "sum-post-op"]], "Depthwise Post-op": [[15, "depthwise-post-op"]], "Binary Post-op": [[15, "binary-post-op"]], "Prelu Post-op": [[15, "prelu-post-op"]], "Examples of Chained Post-ops": [[15, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[15, "sum-relu"]], "Tanh -> Sum -> ScaleShift": [[15, "tanh-sum-scaleshift"]], "Relu -> Depthwise -> Relu": [[15, "relu-depthwise-relu"]], "Binary": [[15, "binary"], [22, "binary"], [307, "binary"]], "Inference and Training": [[32, "inference-and-training"]], "General numerical behavior of the oneDNN library": [[32, "general-numerical-behavior-of-the-onednn-library"]], "Rounding mode and denormal handling": [[32, "rounding-mode-and-denormal-handling"]], "Hardware Limitations": [[32, "hardware-limitations"]], "Intel(R) Architecture Processors": [[32, "intel-r-architecture-processors"], [25, "intel-r-architecture-processors"]], "Intel(R) Processor Graphics and Xe Architecture graphics": [[32, "intel-r-processor-graphics-and-xe-architecture-graphics"], [25, "intel-r-processor-graphics-and-xe-architecture-graphics"]], "DPC++ Interoperability": [[33, "dpc-interoperability"]], "SYCL Buffers and DPC++ USM Interfaces for Memory Objects": [[33, "sycl-buffers-and-dpc-usm-interfaces-for-memory-objects"]], "Handling Dependencies with USM": [[33, "handling-dependencies-with-usm"]], "Use Build Options": [[24, "use-build-options"]], "Common options": [[24, "common-options"]], "Host compiler": [[24, "host-compiler"]], "Configuring functionality": [[24, "configuring-functionality"]], "ONEDNN_ENABLE_WORKLOAD": [[24, "onednn-enable-workload"]], "ONEDNN_ENABLE_PRIMITIVE": [[24, "onednn-enable-primitive"]], "ONEDNN_ENABLE_PRIMITIVE_CPU_ISA": [[24, "onednn-enable-primitive-cpu-isa"]], "ONEDNN_ENABLE_PRIMITIVE_GPU_ISA": [[24, "onednn-enable-primitive-gpu-isa"]], "ONEDNN_ENABLE_GEMM_KERNELS_ISA": [[24, "onednn-enable-gemm-kernels-isa"]], "Configuring testing": [[24, "configuring-testing"]], "ONEDNN_TEST_SET": [[24, "onednn-test-set"]], "CPU Options": [[24, "cpu-options"]], "Targeting Specific Architecture": [[24, "targeting-specific-architecture"]], "Runtimes": [[24, "runtimes"], [24, "id1"]], "OpenMP": [[24, "openmp"]], "Threading Building Blocks (TBB)": [[24, "threading-building-blocks-tbb"]], "Threadpool": [[24, "threadpool"]], "AArch64 Options": [[24, "aarch64-options"]], "Arm Compute Library": [[24, "arm-compute-library"]], "Vendor BLAS libraries": [[24, "vendor-blas-libraries"]], "GPU Options": [[24, "gpu-options"]], "OpenCL*": [[24, "opencl"]], "Graph component limitations": [[24, "graph-component-limitations"]], "Input validation notes": [[25, "input-validation-notes"]], "Memory Alignment Requirements": [[25, "memory-alignment-requirements"]], "Norm Fusion Patterns": [[47, "norm-fusion-patterns"]], "MatMul Fusion Patterns": [[46, "matmul-fusion-patterns"]], "Benchmarking Performance": [[21, "benchmarking-performance"]], "Batch Normalization": [[20, "batch-normalization"], [306, "batch-normalization"]], "Forward": [[20, "forward"], [57, "forward"], [61, "forward"], [34, "forward"], [29, "forward"], [64, "forward"], [66, "forward"], [157, "forward"], [158, "forward"], [163, "forward"], [165, "forward"], [166, "forward"]], "Difference Between Forward Training and Forward Inference": [[20, "difference-between-forward-training-and-forward-inference"], [57, "difference-between-forward-training-and-forward-inference"], [61, "difference-between-forward-training-and-forward-inference"], [34, "difference-between-forward-training-and-forward-inference"], [29, "difference-between-forward-training-and-forward-inference"], [64, "difference-between-forward-training-and-forward-inference"], [157, "difference-between-forward-training-and-forward-inference"], [158, "difference-between-forward-training-and-forward-inference"], [163, "difference-between-forward-training-and-forward-inference"], [165, "difference-between-forward-training-and-forward-inference"], [166, "difference-between-forward-training-and-forward-inference"]], "Backward": [[20, "backward"], [57, "backward"], [61, "backward"], [34, "backward"], [29, "backward"], [64, "backward"], [66, "backward"], [157, "backward"], [158, "backward"], [163, "backward"], [165, "backward"], [166, "backward"]], "Data Type Support": [[20, "data-type-support"], [57, "data-type-support"], [34, "data-type-support"], [64, "data-type-support"], [66, "data-type-support"], [157, "data-type-support"], [158, "data-type-support"], [164, "data-type-support"], [166, "data-type-support"]], "Mean and Variance": [[20, "mean-and-variance"], [57, "mean-and-variance"], [64, "mean-and-variance"]], "Scale and Shift": [[20, "scale-and-shift"], [57, "scale-and-shift"], [64, "scale-and-shift"]], "Source, Destination, and Their Gradients": [[20, "source-destination-and-their-gradients"], [57, "source-destination-and-their-gradients"], [64, "source-destination-and-their-gradients"], [66, "source-destination-and-their-gradients"], [157, "source-destination-and-their-gradients"], [166, "source-destination-and-their-gradients"]], "Pool Fusion Patterns": [[48, "pool-fusion-patterns"]], "Quantized Convolution Fusion Patterns": [[49, "quantized-convolution-fusion-patterns"]], "Quantized ConvTranspose Fusion Patterns": [[50, "quantized-convtranspose-fusion-patterns"]], "Quantized MatMul Fusion Patterns": [[51, "quantized-matmul-fusion-patterns"]], "Reference": [[51, "reference"]], "Scaled Dot-Product Attention (SDPA)": [[53, "scaled-dot-product-attention-sdpa"]], "SDPA patterns": [[53, "sdpa-patterns"]], "Floating-point SDPA for Inference": [[53, "floating-point-sdpa-for-inference"]], "Floating-point SDPA for Training Forward Propagation": [[53, "floating-point-sdpa-for-training-forward-propagation"]], "Floating-point SDPA for Training Backpropagation": [[53, "floating-point-sdpa-for-training-backpropagation"]], "Reduction Fusion Patterns": [[52, "reduction-fusion-patterns"]], "Build from Source": [[23, "build-from-source"]], "Prerequisites": [[23, "prerequisites"]], "Step 1. Download the Source Code": [[23, "step-1-download-the-source-code"]], "Step 2. Build the Library": [[23, "step-2-build-the-library"]], "Build on Linux and macOS": [[23, "build-on-linux-and-macos"]], "Use GCC, Clang, or Intel oneAPI DPC++/C++ Compiler": [[23, "use-gcc-clang-or-intel-oneapi-dpc-c-compiler"]], "Use Intel oneAPI DPC++/C++ Compiler with SYCL runtime": [[23, "use-intel-oneapi-dpc-c-compiler-with-sycl-runtime"]], "Use GCC targeting AArch64 on x64 host": [[23, "use-gcc-targeting-aarch64-on-x64-host"]], "Use GCC with Arm Compute Library (ACL) on AArch64 host": [[23, "use-gcc-with-arm-compute-library-acl-on-aarch64-host"]], "Build on Windows": [[23, "build-on-windows"]], "Use Microsoft Visual C++ Compiler": [[23, "use-microsoft-visual-c-compiler"]], "Use Intel oneAPI DPC++/C++ Compiler with SYCL Runtime": [[23, "id1"]], "Step 3. (Optional) Validate the Build": [[23, "step-3-optional-validate-the-build"]], "Step 4. (Optional) Build Documentation": [[23, "step-4-optional-build-documentation"]], "Step 5. Install the Library": [[23, "step-5-install-the-library"]], "Sources, Destination": [[22, "sources-destination"], [161, "sources-destination"], [168, "sources-destination"]], "SDPA with Compressed Key and Value": [[54, "sdpa-with-compressed-key-and-value"]], "SDPA Pattern": [[54, "sdpa-pattern"]], "Floating-point Math Mode": [[54, "floating-point-math-mode"], [316, "floating-point-math-mode"]], "Softmax Fusion Patterns": [[55, "softmax-fusion-patterns"]], "Group Normalization": [[57, "group-normalization"], [317, "group-normalization"]], "Unary Fusion Patterns": [[56, "unary-fusion-patterns"]], "Inference and Training Aspects": [[59, "inference-and-training-aspects"]], "Propagation Kinds": [[59, "propagation-kinds"]], "Difference Between Forward Propagation on Training and Inference": [[59, "difference-between-forward-propagation-on-training-and-inference"]], "Different Backward Propagation Kinds": [[59, "different-backward-propagation-kinds"]], "Inference-Specific Aspects": [[59, "inference-specific-aspects"]], "Training-Specific Aspects": [[59, "training-specific-aspects"]], "Workspace": [[59, "workspace"]], "Inference": [[58, "inference"]], "Best Practices for Inference": [[58, "best-practices-for-inference"]], "fp32 Inference": [[58, "fp32-inference"]], "int8 Inference": [[58, "int8-inference"]], "Int8 Inference": [[60, "int8-inference"]], "Int8 Workflow": [[60, "int8-workflow"]], "Quantization Process": [[60, "quantization-process"]], "Range of the Data": [[60, "range-of-the-data"]], "Scaling Factor": [[60, "scaling-factor"]], "Quantization Example": [[60, "quantization-example"]], "int8 Support": [[60, "int8-support"]], "Attributes": [[60, "attributes"], [175, "attributes"], [176, "attributes"], [305, "attributes"]], "Inner Product": [[61, "inner-product"], [318, "inner-product"]], "Nuances of int8 Computations": [[63, "nuances-of-int8-computations"]], "CPU": [[63, "cpu"], [155, "cpu"]], "1. Inputs of mixed type: u8 and s8": [[63, "inputs-of-mixed-type-u8-and-s8"]], "1.1. Processors with the Intel AVX2 or Intel AVX-512 Support": [[63, "processors-with-the-intel-avx2-or-intel-avx-512-support"]], "1.2. Processors with the Intel DL Boost Support": [[63, "processors-with-the-intel-dl-boost-support"]], "2. Inputs of the same type: s8": [[63, "inputs-of-the-same-type-s8"]], "GPU": [[63, "gpu"]], "Inspecting JIT Code": [[62, "inspecting-jit-code"]], "Example (CPU)": [[62, "example-cpu"]], "Example (GPU)": [[62, "example-gpu"]], "class dnnl::graph::op": [[6, "class-dnnl-graph-op"]], "class dnnl::graph::partition": [[7, "class-dnnl-graph-partition"]], "Eltwise": [[34, "eltwise"], [314, "eltwise"]], "Exceptions": [[34, "exceptions"]], "Examples and Tutorials": [[35, "examples-and-tutorials"]], "Functional API": [[35, "functional-api"]], "Graph API": [[35, "graph-api"], [347, "graph-api"]], "class dnnl::graph::logical_tensor": [[5, "class-dnnl-graph-logical-tensor"]], "Typedefs": [[5, "typedefs"], [305, "typedefs"], [312, "typedefs"], [315, "typedefs"], [323, "typedefs"], [329, "typedefs"], [335, "typedefs"], [338, "typedefs"], [343, "typedefs"], [342, "typedefs"], [349, "typedefs"], [348, "typedefs"], [353, "typedefs"], [357, "typedefs"], [356, "typedefs"], [358, "typedefs"], [360, "typedefs"], [361, "typedefs"], [541, "typedefs"]], "class dnnl::graph::graph": [[4, "class-dnnl-graph-graph"]], "Convolution": [[29, "convolution"], [81, "convolution"], [311, "convolution"]], "Regular Convolution": [[29, "regular-convolution"], [81, "regular-convolution"]], "Convolution with Groups": [[29, "convolution-with-groups"], [81, "convolution-with-groups"]], "Convolution with Dilation": [[29, "convolution-with-dilation"], [81, "convolution-with-dilation"]], "Deconvolution (Transposed Convolution)": [[29, "deconvolution-transposed-convolution"]], "Post-ops and Attributes": [[29, "post-ops-and-attributes"], [64, "post-ops-and-attributes"], [66, "post-ops-and-attributes"], [166, "post-ops-and-attributes"]], "Example 1": [[29, "example-1"]], "Example 2": [[29, "example-2"]], "Example 3": [[29, "example-3"]], "Algorithms": [[29, "algorithms"]], "Direct Algorithm": [[29, "direct-algorithm"]], "Winograd Convolution": [[29, "winograd-convolution"]], "Automatic Algorithm Selection": [[29, "automatic-algorithm-selection"]], "Naming Conventions": [[28, "naming-conventions"]], "Variable (Tensor) Names": [[28, "variable-tensor-names"]], "Formulas and Verbose Output": [[28, "formulas-and-verbose-output"]], "RNN-Specific Notation": [[28, "rnn-specific-notation"]], "Memory Formats Tags": [[28, "memory-formats-tags"]], "Link to the Library": [[65, "link-to-the-library"]], "Header Files": [[65, "header-files"]], "Libraries": [[65, "libraries"]], "Linux": [[65, "linux"]], "macOS": [[65, "macos"]], "Windows": [[65, "windows"], [65, "id1"]], "Linking to oneDNN": [[65, "linking-to-onednn"]], "Linux/macOS": [[65, "linux-macos"]], "Support for macOS hardened runtime": [[65, "support-for-macos-hardened-runtime"]], "Layer Normalization": [[64, "layer-normalization"], [320, "layer-normalization"]], "Root Mean Square Normalization Mode": [[64, "root-mean-square-normalization-mode"]], "Matrix Multiplication": [[67, "matrix-multiplication"], [322, "matrix-multiplication"]], "Attributes and Post-ops": [[67, "attributes-and-post-ops"]], "Sparsity": [[67, "sparsity"], [162, "sparsity"]], "CSR encoding": [[67, "csr-encoding"]], "COO encoding": [[67, "coo-encoding"]], "PACKED encoding": [[67, "packed-encoding"]], "Matrix Multiplication Primitive Examples": [[67, "matrix-multiplication-primitive-examples"]], "Local Response Normalization (LRN)": [[66, "local-response-normalization-lrn"]], "Abs": [[68, "abs"]], "Operation attributes": [[68, "operation-attributes"], [69, "operation-attributes"], [71, "operation-attributes"], [70, "operation-attributes"], [72, "operation-attributes"], [73, "operation-attributes"], [74, "operation-attributes"], [75, "operation-attributes"], [76, "operation-attributes"], [77, "operation-attributes"], [79, "operation-attributes"], [78, "operation-attributes"], [80, "operation-attributes"], [81, "operation-attributes"], [82, "operation-attributes"], [83, "operation-attributes"], [85, "operation-attributes"], [84, "operation-attributes"], [87, "operation-attributes"], [86, "operation-attributes"], [89, "operation-attributes"], [88, "operation-attributes"], [90, "operation-attributes"], [91, "operation-attributes"], [92, "operation-attributes"], [93, "operation-attributes"], [94, "operation-attributes"], [95, "operation-attributes"], [96, "operation-attributes"], [99, "operation-attributes"], [101, "operation-attributes"], [100, "operation-attributes"], [102, "operation-attributes"], [103, "operation-attributes"], [105, "operation-attributes"], [104, "operation-attributes"], [106, "operation-attributes"], [107, "operation-attributes"], [109, "operation-attributes"], [108, "operation-attributes"], [111, "operation-attributes"], [110, "operation-attributes"], [112, "operation-attributes"], [113, "operation-attributes"], [114, "operation-attributes"], [115, "operation-attributes"], [117, "operation-attributes"], [116, "operation-attributes"], [118, "operation-attributes"], [119, "operation-attributes"], [121, "operation-attributes"], [120, "operation-attributes"], [122, "operation-attributes"], [123, "operation-attributes"], [125, "operation-attributes"], [124, "operation-attributes"], [127, "operation-attributes"], [126, "operation-attributes"], [128, "operation-attributes"], [129, "operation-attributes"], [131, "operation-attributes"], [130, "operation-attributes"], [133, "operation-attributes"], [132, "operation-attributes"], [135, "operation-attributes"], [134, "operation-attributes"], [136, "operation-attributes"], [137, "operation-attributes"], [138, "operation-attributes"], [139, "operation-attributes"], [140, "operation-attributes"], [141, "operation-attributes"], [143, "operation-attributes"], [142, "operation-attributes"], [144, "operation-attributes"], [145, "operation-attributes"], [147, "operation-attributes"], [146, "operation-attributes"], [149, "operation-attributes"], [148, "operation-attributes"], [150, "operation-attributes"], [151, "operation-attributes"], [152, "operation-attributes"], [153, "operation-attributes"]], "Execution arguments": [[68, "execution-arguments"], [69, "execution-arguments"], [71, "execution-arguments"], [70, "execution-arguments"], [72, "execution-arguments"], [73, "execution-arguments"], [74, "execution-arguments"], [75, "execution-arguments"], [76, "execution-arguments"], [77, "execution-arguments"], [79, "execution-arguments"], [78, "execution-arguments"], [80, "execution-arguments"], [81, "execution-arguments"], [82, "execution-arguments"], [83, "execution-arguments"], [85, "execution-arguments"], [84, "execution-arguments"], [87, "execution-arguments"], [86, "execution-arguments"], [89, "execution-arguments"], [88, "execution-arguments"], [90, "execution-arguments"], [91, "execution-arguments"], [92, "execution-arguments"], [93, "execution-arguments"], [94, "execution-arguments"], [95, "execution-arguments"], [96, "execution-arguments"], [99, "execution-arguments"], [101, "execution-arguments"], [100, "execution-arguments"], [102, "execution-arguments"], [103, "execution-arguments"], [105, "execution-arguments"], [104, "execution-arguments"], [106, "execution-arguments"], [107, "execution-arguments"], [109, "execution-arguments"], [108, "execution-arguments"], [111, "execution-arguments"], [110, "execution-arguments"], [112, "execution-arguments"], [113, "execution-arguments"], [114, "execution-arguments"], [115, "execution-arguments"], [117, "execution-arguments"], [116, "execution-arguments"], [118, "execution-arguments"], [119, "execution-arguments"], [121, "execution-arguments"], [122, "execution-arguments"], [123, "execution-arguments"], [125, "execution-arguments"], [124, "execution-arguments"], [127, "execution-arguments"], [126, "execution-arguments"], [128, "execution-arguments"], [129, "execution-arguments"], [131, "execution-arguments"], [130, "execution-arguments"], [133, "execution-arguments"], [132, "execution-arguments"], [135, "execution-arguments"], [134, "execution-arguments"], [136, "execution-arguments"], [137, "execution-arguments"], [138, "execution-arguments"], [139, "execution-arguments"], [140, "execution-arguments"], [141, "execution-arguments"], [143, "execution-arguments"], [142, "execution-arguments"], [144, "execution-arguments"], [145, "execution-arguments"], [147, "execution-arguments"], [146, "execution-arguments"], [149, "execution-arguments"], [148, "execution-arguments"], [150, "execution-arguments"], [151, "execution-arguments"], [152, "execution-arguments"], [153, "execution-arguments"]], "Inputs": [[68, "inputs"], [69, "inputs"], [71, "inputs"], [70, "inputs"], [72, "inputs"], [73, "inputs"], [74, "inputs"], [75, "inputs"], [76, "inputs"], [77, "inputs"], [79, "inputs"], [78, "inputs"], [80, "inputs"], [81, "inputs"], [82, "inputs"], [83, "inputs"], [85, "inputs"], [84, "inputs"], [87, "inputs"], [86, "inputs"], [89, "inputs"], [88, "inputs"], [90, "inputs"], [91, "inputs"], [92, "inputs"], [93, "inputs"], [94, "inputs"], [95, "inputs"], [96, "inputs"], [99, "inputs"], [101, "inputs"], [100, "inputs"], [102, "inputs"], [103, "inputs"], [105, "inputs"], [104, "inputs"], [106, "inputs"], [107, "inputs"], [109, "inputs"], [108, "inputs"], [111, "inputs"], [110, "inputs"], [112, "inputs"], [113, "inputs"], [114, "inputs"], [115, "inputs"], [117, "inputs"], [116, "inputs"], [118, "inputs"], [119, "inputs"], [121, "inputs"], [120, "inputs"], [122, "inputs"], [123, "inputs"], [125, "inputs"], [124, "inputs"], [127, "inputs"], [126, "inputs"], [128, "inputs"], [129, "inputs"], [131, "inputs"], [130, "inputs"], [133, "inputs"], [132, "inputs"], [135, "inputs"], [134, "inputs"], [136, "inputs"], [137, "inputs"], [138, "inputs"], [139, "inputs"], [140, "inputs"], [141, "inputs"], [143, "inputs"], [142, "inputs"], [144, "inputs"], [145, "inputs"], [147, "inputs"], [146, "inputs"], [149, "inputs"], [148, "inputs"], [150, "inputs"], [151, "inputs"], [152, "inputs"], [153, "inputs"]], "Outputs": [[68, "outputs"], [69, "outputs"], [71, "outputs"], [70, "outputs"], [72, "outputs"], [73, "outputs"], [74, "outputs"], [75, "outputs"], [76, "outputs"], [77, "outputs"], [79, "outputs"], [78, "outputs"], [80, "outputs"], [81, "outputs"], [82, "outputs"], [83, "outputs"], [85, "outputs"], [84, "outputs"], [87, "outputs"], [86, "outputs"], [89, "outputs"], [88, "outputs"], [90, "outputs"], [91, "outputs"], [92, "outputs"], [93, "outputs"], [94, "outputs"], [95, "outputs"], [96, "outputs"], [99, "outputs"], [101, "outputs"], [100, "outputs"], [102, "outputs"], [103, "outputs"], [105, "outputs"], [104, "outputs"], [106, "outputs"], [107, "outputs"], [109, "outputs"], [108, "outputs"], [111, "outputs"], [110, "outputs"], [112, "outputs"], [113, "outputs"], [114, "outputs"], [115, "outputs"], [117, "outputs"], [116, "outputs"], [118, "outputs"], [119, "outputs"], [121, "outputs"], [120, "outputs"], [122, "outputs"], [123, "outputs"], [125, "outputs"], [124, "outputs"], [127, "outputs"], [126, "outputs"], [128, "outputs"], [129, "outputs"], [131, "outputs"], [130, "outputs"], [133, "outputs"], [132, "outputs"], [135, "outputs"], [134, "outputs"], [136, "outputs"], [137, "outputs"], [138, "outputs"], [139, "outputs"], [140, "outputs"], [141, "outputs"], [143, "outputs"], [142, "outputs"], [144, "outputs"], [145, "outputs"], [147, "outputs"], [146, "outputs"], [149, "outputs"], [148, "outputs"], [150, "outputs"], [151, "outputs"], [152, "outputs"], [153, "outputs"]], "Supported data types": [[68, "supported-data-types"], [69, "supported-data-types"], [71, "supported-data-types"], [70, "supported-data-types"], [72, "supported-data-types"], [73, "supported-data-types"], [74, "supported-data-types"], [75, "supported-data-types"], [76, "supported-data-types"], [77, "supported-data-types"], [79, "supported-data-types"], [78, "supported-data-types"], [80, "supported-data-types"], [81, "supported-data-types"], [82, "supported-data-types"], [83, "supported-data-types"], [85, "supported-data-types"], [84, "supported-data-types"], [87, "supported-data-types"], [86, "supported-data-types"], [89, "supported-data-types"], [88, "supported-data-types"], [90, "supported-data-types"], [91, "supported-data-types"], [92, "supported-data-types"], [93, "supported-data-types"], [94, "supported-data-types"], [95, "supported-data-types"], [96, "supported-data-types"], [99, "supported-data-types"], [101, "supported-data-types"], [100, "supported-data-types"], [102, "supported-data-types"], [103, "supported-data-types"], [105, "supported-data-types"], [104, "supported-data-types"], [106, "supported-data-types"], [107, "supported-data-types"], [109, "supported-data-types"], [108, "supported-data-types"], [111, "supported-data-types"], [110, "supported-data-types"], [112, "supported-data-types"], [113, "supported-data-types"], [114, "supported-data-types"], [115, "supported-data-types"], [117, "supported-data-types"], [116, "supported-data-types"], [118, "supported-data-types"], [119, "supported-data-types"], [121, "supported-data-types"], [120, "supported-data-types"], [122, "supported-data-types"], [123, "supported-data-types"], [125, "supported-data-types"], [124, "supported-data-types"], [127, "supported-data-types"], [126, "supported-data-types"], [128, "supported-data-types"], [129, "supported-data-types"], [131, "supported-data-types"], [130, "supported-data-types"], [133, "supported-data-types"], [132, "supported-data-types"], [135, "supported-data-types"], [134, "supported-data-types"], [136, "supported-data-types"], [137, "supported-data-types"], [138, "supported-data-types"], [139, "supported-data-types"], [140, "supported-data-types"], [141, "supported-data-types"], [143, "supported-data-types"], [142, "supported-data-types"], [144, "supported-data-types"], [145, "supported-data-types"], [147, "supported-data-types"], [146, "supported-data-types"], [149, "supported-data-types"], [148, "supported-data-types"], [150, "supported-data-types"], [151, "supported-data-types"], [152, "supported-data-types"], [153, "supported-data-types"]], "AbsBackward": [[69, "absbackward"]], "AvgPool": [[71, "avgpool"]], "Add": [[70, "add"]], "AvgPoolBackward": [[72, "avgpoolbackward"]], "BatchNormForwardTraining": [[73, "batchnormforwardtraining"]], "BatchNormInference": [[74, "batchnorminference"]], "BatchNormTrainingBackward": [[75, "batchnormtrainingbackward"]], "BiasAdd": [[76, "biasadd"]], "BiasAddBackward": [[77, "biasaddbackward"]], "ClampBackward": [[79, "clampbackward"]], "Clamp": [[78, "clamp"]], "ConvolutionBackwardData": [[82, "convolutionbackwarddata"]], "ConvolutionBackwardWeights": [[83, "convolutionbackwardweights"]], "ConvTransposeBackwardData": [[85, "convtransposebackwarddata"]], "ConvTranspose": [[84, "convtranspose"]], "Dequantize": [[87, "dequantize"]], "ConvTransposeBackwardWeights": [[86, "convtransposebackwardweights"]], "DynamicDequantize": [[89, "dynamicdequantize"]], "Divide": [[88, "divide"]], "DynamicQuantize": [[90, "dynamicquantize"]], "Elu": [[91, "elu"]], "EluBackward": [[92, "elubackward"]], "End": [[93, "end"]], "Exp": [[94, "exp"]], "GELU": [[95, "gelu"]], "GenIndex": [[97, "genindex"]], "Operation Attributes": [[97, "operation-attributes"], [98, "operation-attributes"]], "Input": [[97, "input"], [98, "input"]], "Output": [[97, "output"], [98, "output"]], "Supported Data Types": [[97, "supported-data-types"], [98, "supported-data-types"]], "GELUBackward": [[96, "gelubackward"]], "GroupNorm": [[99, "groupnorm"]], "GreaterEqual": [[98, "greaterequal"]], "HardSigmoidBackward": [[101, "hardsigmoidbackward"]], "HardSigmoid": [[100, "hardsigmoid"]], "HardSwish": [[102, "hardswish"]], "HardSwishBackward": [[103, "hardswishbackward"]], "InterpolateBackward": [[105, "interpolatebackward"]], "Interpolate": [[104, "interpolate"]], "LayerNorm": [[106, "layernorm"]], "LayerNormBackward": [[107, "layernormbackward"]], "Log": [[109, "log"]], "LeakyReLU": [[108, "leakyrelu"]], "LogSoftmaxBackward": [[111, "logsoftmaxbackward"]], "LogSoftmax": [[110, "logsoftmax"]], "MatMul": [[112, "matmul"]], "Maximum": [[113, "maximum"]], "MaxPool": [[114, "maxpool"]], "MaxPoolBackward": [[115, "maxpoolbackward"]], "Mish": [[117, "mish"]], "Minimum": [[116, "minimum"]], "MishBackward": [[118, "mishbackward"]], "Multiply": [[119, "multiply"]], "PReLU": [[121, "prelu"], [158, "prelu"], [326, "prelu"]], "Broadcasting Rules": [[121, "broadcasting-rules"], [122, "broadcasting-rules"]], "Pow": [[120, "pow"]], "PReLUBackward": [[122, "prelubackward"]], "Quantize": [[123, "quantize"]], "ReduceL1": [[125, "reducel1"]], "Reciprocal": [[124, "reciprocal"]], "ReduceMax": [[127, "reducemax"]], "ReduceL2": [[126, "reducel2"]], "ReduceMean": [[128, "reducemean"]], "ReduceMin": [[129, "reducemin"]], "ReduceSum": [[131, "reducesum"]], "ReduceProd": [[130, "reduceprod"]], "ReLUBackward": [[133, "relubackward"]], "ReLU": [[132, "relu"]], "Round": [[135, "round"]], "Reorder": [[134, "reorder"], [162, "reorder"], [332, "reorder"]], "Select": [[136, "select"]], "Broadcasting rules": [[136, "broadcasting-rules"]], "Sigmoid": [[137, "sigmoid"]], "SigmoidBackward": [[138, "sigmoidbackward"]], "SoftMax": [[139, "softmax"]], "SoftMaxBackward": [[140, "softmaxbackward"]], "SoftPlus": [[141, "softplus"]], "Sqrt": [[143, "sqrt"]], "SoftPlusBackward": [[142, "softplusbackward"]], "SqrtBackward": [[144, "sqrtbackward"]], "Square": [[145, "square"]], "StaticReshape": [[147, "staticreshape"]], "SquaredDifference": [[146, "squareddifference"]], "Subtract": [[149, "subtract"]], "StaticTranspose": [[148, "statictranspose"]], "Tanh": [[150, "tanh"]], "TanhBackward": [[151, "tanhbackward"]], "TypeCast": [[152, "typecast"]], "Wildcard": [[153, "wildcard"]], "Configuring oneDNN for Benchmarking": [[155, "configuring-onednn-for-benchmarking"]], "Threading Runtimes": [[155, "threading-runtimes"]], "Benchmarking Settings": [[155, "benchmarking-settings"]], "Whole Machine": [[155, "whole-machine"]], "Single NUMA Domain": [[155, "single-numa-domain"]], "Several Cores Within a NUMA Domain": [[155, "several-cores-within-a-numa-domain"]], "OpenCL Interoperability": [[154, "opencl-interoperability"]], "OpenCL Buffers and USM Interfaces for Memory Objects": [[154, "opencl-buffers-and-usm-interfaces-for-memory-objects"]], "Handling Dependencies": [[154, "handling-dependencies"]], "Persistent Cache": [[156, "persistent-cache"]], "Primitive": [[156, "primitive"]], "Relation to Primitive Cache": [[156, "relation-to-primitive-cache"]], "API Usage Example": [[156, "api-usage-example"], [156, "id1"]], "Engine": [[156, "engine"], [315, "engine"], [352, "engine"]], "Memory descriptor": [[156, "memory-descriptor"], [411, "memory-descriptor"]], "Pooling": [[157, "pooling"], [325, "pooling"]], "Primitive Cache": [[159, "primitive-cache"], [327, "primitive-cache"]], "Managing Memory Consumption": [[159, "managing-memory-consumption"]], "Profiling": [[159, "profiling"], [330, "profiling"]], "Profiling oneDNN Performance": [[160, "profiling-onednn-performance"]], "Features for VTune Profiler": [[160, "features-for-vtune-profiler"]], "ITT Tagging for Primitive Execution": [[160, "itt-tagging-for-primitive-execution"]], "Example: Profiling with VTune Profiler": [[160, "example-profiling-with-vtune-profiler"]], "Profiling for Hotspots": [[160, "profiling-for-hotspots"]], "Profiling for Microarchitecture Information": [[160, "profiling-for-microarchitecture-information"]], "Example: Profiling with Linux Perf": [[160, "example-profiling-with-linux-perf"]], "Reduction": [[161, "reduction"], [331, "reduction"]], "Notes": [[161, "notes"]], "Resampling": [[163, "resampling"], [333, "resampling"]], "Nearest Neighbor Resampling": [[163, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[163, "bilinear-resampling"]], "RNN": [[164, "rnn"], [334, "rnn"]], "Cell Functions": [[164, "cell-functions"]], "Vanilla RNN": [[164, "vanilla-rnn"]], "LSTM": [[164, "lstm"]], "LSTM (or Vanilla LSTM)": [[164, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[164, "lstm-with-peephole"]], "LSTM with Projection (or LSTMP)": [[164, "lstm-with-projection-or-lstmp"]], "GRU": [[164, "gru"]], "Linear-Before-Reset GRU": [[164, "linear-before-reset-gru"]], "AUGRU": [[164, "augru"]], "Linear-Before-Reset AUGRU": [[164, "linear-before-reset-augru"]], "Considerations for Training": [[164, "considerations-for-training"]], "Shuffle": [[165, "shuffle"], [336, "shuffle"]], "Data Layouts": [[165, "data-layouts"]], "Softmax": [[166, "softmax"], [337, "softmax"]], "Accumulation Mode": [[166, "accumulation-mode"], [304, "accumulation-mode"]], "Sparse memory formats": [[167, "sparse-memory-formats"]], "CSR Encoding": [[167, "csr-encoding"]], "Sorted COO Encoding": [[167, "sorted-coo-encoding"]], "System Requirements": [[169, "system-requirements"]], "Sum": [[168, "sum"], [339, "sum"]], "Training": [[171, "training"]], "fp32 Training": [[171, "fp32-training"]], "bfp16 Training": [[171, "bfp16-training"]], "Using oneDNN with Threadpool-Based Threading": [[170, "using-onednn-with-threadpool-based-threading"]], "Bfloat16 Training": [[172, "bfloat16-training"]], "bfloat16 Support": [[172, "bfloat16-support"]], "bfloat16 Workflow": [[172, "bfloat16-workflow"]], "Transitioning from Intel MKL-DNN to oneDNN": [[173, "transitioning-from-intel-mkl-dnn-to-onednn"]], "Summary of Changes": [[173, "summary-of-changes"]], "Source Code Changes": [[173, "source-code-changes"]], "Build Process": [[173, "build-process"]], "Broken Compatibility with Intel MKL-DNN": [[173, "broken-compatibility-with-intel-mkl-dnn"]], "Information for Developers": [[173, "information-for-developers"]], "Memory representation": [[174, "memory-representation"]], "Operation representation": [[174, "operation-representation"]], "Batch-Reduce General Matrix Multiplication": [[175, "batch-reduce-general-matrix-multiplication"]], "Data transformation": [[176, "data-transformation"]], "Understanding Memory Formats": [[177, "understanding-memory-formats"]], "Nomenclature Used": [[177, "nomenclature-used"]], "Data Formats": [[177, "data-formats"]], "Plain Data Formats": [[177, "plain-data-formats"]], "NCHW": [[177, "nchw"]], "NHWC": [[177, "nhwc"]], "CHWN": [[177, "chwn"]], "Relevant Reading": [[177, "relevant-reading"]], "Generalization of the Plain Data Layout": [[177, "generalization-of-the-plain-data-layout"]], "Strides": [[177, "strides"]], "Blocked Layout": [[177, "blocked-layout"]], "What if Channels Are not Multiples of 8 (or 16)?": [[177, "what-if-channels-are-not-multiples-of-8-or-16"]], "Verbose Message Catalogue": [[179, "verbose-message-catalogue"]], "Primitive Creation/Dispatching": [[179, "primitive-creation-dispatching"]], "Engine Creation": [[179, "engine-creation"]], "Memory Creation and Related Operations": [[179, "memory-creation-and-related-operations"]], "Verbose Mode": [[178, "verbose-mode"]], "Troubleshooting primitive creation issues": [[178, "troubleshooting-primitive-creation-issues"]], "Profiling a workload": [[178, "profiling-a-workload"]], "Understanding why a given implementation is dispatched": [[178, "understanding-why-a-given-implementation-is-dispatched"]], "Enable ONEDNN_VERBOSE with timestamps": [[178, "enable-onednn-verbose-with-timestamps"]], "Decrypting the Output": [[178, "decrypting-the-output"]], "Profiling with VTune(TM) Profiler": [[180, "profiling-with-vtune-tm-profiler"]], "enum api_kind": [[181, "enum-api-kind"]], "enum dnnl::accumulation_mode": [[182, "enum-dnnl-accumulation-mode"]], "Enum Values": [[182, "enum-values"], [183, "enum-values"], [184, "enum-values"], [185, "enum-values"], [186, "enum-values"], [187, "enum-values"], [189, "enum-values"], [188, "enum-values"], [191, "enum-values"], [190, "enum-values"], [192, "enum-values"], [193, "enum-values"], [194, "enum-values"], [195, "enum-values"], [196, "enum-values"], [197, "enum-values"], [199, "enum-values"], [198, "enum-values"], [200, "enum-values"], [201, "enum-values"], [202, "enum-values"], [205, "enum-values"], [207, "enum-values"], [206, "enum-values"], [208, "enum-values"], [209, "enum-values"], [211, "enum-values"], [210, "enum-values"], [212, "enum-values"], [213, "enum-values"], [215, "enum-values"], [214, "enum-values"], [217, "enum-values"], [216, "enum-values"], [218, "enum-values"], [219, "enum-values"], [221, "enum-values"], [220, "enum-values"], [222, "enum-values"], [223, "enum-values"], [225, "enum-values"], [224, "enum-values"], [227, "enum-values"], [226, "enum-values"], [228, "enum-values"], [229, "enum-values"], [230, "enum-values"], [231, "enum-values"], [232, "enum-values"], [233, "enum-values"], [235, "enum-values"], [234, "enum-values"], [237, "enum-values"], [236, "enum-values"], [238, "enum-values"], [239, "enum-values"], [240, "enum-values"], [241, "enum-values"]], "enum dnnl_accumulation_mode_t": [[183, "enum-dnnl-accumulation-mode-t"]], "enum dnnl_alg_kind_t": [[184, "enum-dnnl-alg-kind-t"]], "enum dnnl::algorithm": [[185, "enum-dnnl-algorithm"]], "enum dnnl::cpu_isa": [[186, "enum-dnnl-cpu-isa"]], "enum dnnl::cpu_isa_hints": [[187, "enum-dnnl-cpu-isa-hints"]], "enum dnnl_cpu_isa_t": [[189, "enum-dnnl-cpu-isa-t"]], "enum dnnl_cpu_isa_hints_t": [[188, "enum-dnnl-cpu-isa-hints-t"]], "enum dnnl::engine::kind": [[191, "enum-dnnl-engine-kind"]], "enum dnnl_data_type_t": [[190, "enum-dnnl-data-type-t"]], "enum dnnl_engine_kind_t": [[192, "enum-dnnl-engine-kind-t"]], "enum dnnl_format_kind_t": [[193, "enum-dnnl-format-kind-t"]], "enum dnnl_format_tag_t": [[194, "enum-dnnl-format-tag-t"]], "enum dnnl::fpmath_mode": [[195, "enum-dnnl-fpmath-mode"]], "enum dnnl_fpmath_mode_t": [[196, "enum-dnnl-fpmath-mode-t"]], "enum dnnl_graph_layout_type_t": [[197, "enum-dnnl-graph-layout-type-t"]], "enum dnnl::graph::logical_tensor::layout_type": [[199, "enum-dnnl-graph-logical-tensor-layout-type"]], "enum dnnl::graph::logical_tensor::data_type": [[198, "enum-dnnl-graph-logical-tensor-data-type"]], "enum dnnl::graph::logical_tensor::property_type": [[200, "enum-dnnl-graph-logical-tensor-property-type"]], "enum dnnl::graph::op::attr": [[201, "enum-dnnl-graph-op-attr"]], "enum dnnl_graph_op_attr_t": [[202, "enum-dnnl-graph-op-attr-t"]], "enum dnnl::graph::op::kind": [[203, "enum-dnnl-graph-op-kind"]], "enum dnnl::graph::partition::policy": [[205, "enum-dnnl-graph-partition-policy"]], "enum dnnl_graph_op_kind_t": [[204, "enum-dnnl-graph-op-kind-t"]], "enum dnnl::graph::status": [[207, "enum-dnnl-graph-status"]], "enum dnnl_graph_partition_policy_t": [[206, "enum-dnnl-graph-partition-policy-t"]], "enum dnnl_graph_tensor_property_t": [[208, "enum-dnnl-graph-tensor-property-t"]], "enum dnnl::memory::data_type": [[209, "enum-dnnl-memory-data-type"]], "enum dnnl::memory::format_tag": [[211, "enum-dnnl-memory-format-tag"]], "enum dnnl::memory::format_kind": [[210, "enum-dnnl-memory-format-kind"]], "enum dnnl::memory::sparse_encoding": [[212, "enum-dnnl-memory-sparse-encoding"]], "enum dnnl::normalization_flags": [[213, "enum-dnnl-normalization-flags"]], "enum dnnl::ocl_interop::memory_kind": [[215, "enum-dnnl-ocl-interop-memory-kind"]], "enum dnnl_normalization_flags_t": [[214, "enum-dnnl-normalization-flags-t"]], "enum dnnl_pack_type_t": [[217, "enum-dnnl-pack-type-t"]], "enum dnnl_ocl_interop_memory_kind_t": [[216, "enum-dnnl-ocl-interop-memory-kind-t"]], "enum dnnl::primitive::kind": [[218, "enum-dnnl-primitive-kind"]], "enum dnnl_primitive_kind_t": [[219, "enum-dnnl-primitive-kind-t"]], "enum dnnl_profiling_data_kind_t": [[221, "enum-dnnl-profiling-data-kind-t"]], "enum dnnl::profiling_data_kind": [[220, "enum-dnnl-profiling-data-kind"]], "enum dnnl::prop_kind": [[222, "enum-dnnl-prop-kind"]], "enum dnnl_prop_kind_t": [[223, "enum-dnnl-prop-kind-t"]], "enum dnnl_query_t": [[225, "enum-dnnl-query-t"]], "enum dnnl::query": [[224, "enum-dnnl-query"]], "enum dnnl_rnn_direction_t": [[227, "enum-dnnl-rnn-direction-t"]], "enum dnnl::rnn_direction": [[226, "enum-dnnl-rnn-direction"]], "enum dnnl::rnn_flags": [[228, "enum-dnnl-rnn-flags"]], "enum dnnl_rnn_flags_t": [[229, "enum-dnnl-rnn-flags-t"]], "enum dnnl::rounding_mode": [[230, "enum-dnnl-rounding-mode"]], "enum dnnl_rounding_mode_t": [[231, "enum-dnnl-rounding-mode-t"]], "enum dnnl::scratchpad_mode": [[232, "enum-dnnl-scratchpad-mode"]], "enum dnnl_scratchpad_mode_t": [[233, "enum-dnnl-scratchpad-mode-t"]], "enum dnnl::status": [[235, "enum-dnnl-status"]], "enum dnnl_sparse_encoding_t": [[234, "enum-dnnl-sparse-encoding-t"]], "enum dnnl::stream::flags": [[237, "enum-dnnl-stream-flags"]], "enum dnnl_status_t": [[236, "enum-dnnl-status-t"]], "enum dnnl_stream_flags_t": [[238, "enum-dnnl-stream-flags-t"]], "enum dnnl::sycl_interop::memory_kind": [[239, "enum-dnnl-sycl-interop-memory-kind"]], "enum dnnl_sycl_interop_memory_kind_t": [[240, "enum-dnnl-sycl-interop-memory-kind-t"]], "enum dnnl::ukernel::pack_type": [[241, "enum-dnnl-ukernel-pack-type"]], "augru.cpp": [[242, "augru-cpp"]], "batch_normalization.cpp": [[243, "batch-normalization-cpp"]], "bnorm_u8_via_binary_postops.cpp": [[245, "bnorm-u8-via-binary-postops-cpp"]], "binary.cpp": [[244, "binary-cpp"]], "cnn_inference_f32.cpp": [[247, "cnn-inference-f32-cpp"]], "cnn_inference_f32.c": [[246, "cnn-inference-f32-c"]], "cnn_inference_int8.cpp": [[248, "cnn-inference-int8-cpp"]], "cnn_training_bf16.cpp": [[249, "cnn-training-bf16-cpp"]], "concat.cpp": [[251, "concat-cpp"]], "cnn_training_f32.cpp": [[250, "cnn-training-f32-cpp"]], "convolution.cpp": [[252, "convolution-cpp"]], "cpu_brgemm.cpp": [[253, "cpu-brgemm-cpp"]], "cpu_cnn_training_f32.c": [[254, "cpu-cnn-training-f32-c"]], "cpu_getting_started.cpp": [[255, "cpu-getting-started-cpp"]], "cpu_matmul_coo.cpp": [[257, "cpu-matmul-coo-cpp"]], "cpu_inference_int8.cpp": [[256, "cpu-inference-int8-cpp"]], "cpu_matmul_quantization.cpp": [[259, "cpu-matmul-quantization-cpp"]], "cpu_matmul_csr.cpp": [[258, "cpu-matmul-csr-cpp"]], "cpu_rnn_inference_f32.cpp": [[261, "cpu-rnn-inference-f32-cpp"]], "cpu_matmul_weights_compression.cpp": [[260, "cpu-matmul-weights-compression-cpp"]], "cpu_rnn_inference_int8.cpp": [[262, "cpu-rnn-inference-int8-cpp"]], "cpu_sgemm_and_matmul.cpp": [[263, "cpu-sgemm-and-matmul-cpp"]], "cross_engine_reorder.c": [[265, "cross-engine-reorder-c"]], "cpu_single_op_partition.cpp": [[264, "cpu-single-op-partition-cpp"]], "cross_engine_reorder.cpp": [[266, "cross-engine-reorder-cpp"]], "deconvolution.cpp": [[267, "deconvolution-cpp"]], "eltwise.cpp": [[268, "eltwise-cpp"]], "getting_started.cpp": [[269, "getting-started-cpp"]], "gpu_opencl_getting_started.cpp": [[270, "gpu-opencl-getting-started-cpp"]], "gpu_opencl_interop.cpp": [[271, "gpu-opencl-interop-cpp"]], "group_normalization.cpp": [[272, "group-normalization-cpp"]], "inference_int8_matmul.cpp": [[273, "inference-int8-matmul-cpp"]], "layer_normalization.cpp": [[275, "layer-normalization-cpp"]], "inner_product.cpp": [[274, "inner-product-cpp"]], "lrn.cpp": [[277, "lrn-cpp"]], "lbr_gru.cpp": [[276, "lbr-gru-cpp"]], "matmul.cpp": [[279, "matmul-cpp"]], "lstm.cpp": [[278, "lstm-cpp"]], "matmul_perf.cpp": [[280, "matmul-perf-cpp"]], "memory_format_propagation.cpp": [[281, "memory-format-propagation-cpp"]], "performance_profiling.cpp": [[282, "performance-profiling-cpp"]], "pooling.cpp": [[283, "pooling-cpp"]], "prelu.cpp": [[284, "prelu-cpp"]], "reduction.cpp": [[285, "reduction-cpp"]], "resampling.cpp": [[287, "resampling-cpp"]], "reorder.cpp": [[286, "reorder-cpp"]], "shuffle.cpp": [[289, "shuffle-cpp"]], "rnn_training_f32.cpp": [[288, "rnn-training-f32-cpp"]], "softmax.cpp": [[290, "softmax-cpp"]], "sum.cpp": [[291, "sum-cpp"]], "sycl_interop_buffer.cpp": [[293, "sycl-interop-buffer-cpp"]], "sycl_getting_started.cpp": [[292, "sycl-getting-started-cpp"]], "sycl_interop_usm.cpp": [[294, "sycl-interop-usm-cpp"]], "sycl_single_op_partition.cpp": [[295, "sycl-single-op-partition-cpp"]], "vanilla_rnn.cpp": [[296, "vanilla-rnn-cpp"]], "weights_decompression_matmul.cpp": [[297, "weights-decompression-matmul-cpp"]], "Global Namespace": [[298, "global-namespace"]], "Global Functions": [[298, "global-functions"], [304, "global-functions"], [305, "global-functions"], [307, "global-functions"], [306, "global-functions"], [308, "global-functions"], [311, "global-functions"], [310, "global-functions"], [313, "global-functions"], [315, "global-functions"], [314, "global-functions"], [317, "global-functions"], [316, "global-functions"], [318, "global-functions"], [321, "global-functions"], [320, "global-functions"], [323, "global-functions"], [322, "global-functions"], [324, "global-functions"], [325, "global-functions"], [326, "global-functions"], [327, "global-functions"], [329, "global-functions"], [330, "global-functions"], [331, "global-functions"], [333, "global-functions"], [332, "global-functions"], [334, "global-functions"], [335, "global-functions"], [337, "global-functions"], [336, "global-functions"], [339, "global-functions"], [338, "global-functions"], [340, "global-functions"], [341, "global-functions"], [343, "global-functions"], [342, "global-functions"], [349, "global-functions"], [348, "global-functions"], [351, "global-functions"], [350, "global-functions"], [352, "global-functions"], [353, "global-functions"], [355, "global-functions"], [357, "global-functions"], [356, "global-functions"], [358, "global-functions"], [360, "global-functions"], [361, "global-functions"], [367, "global-functions"], [369, "global-functions"], [368, "global-functions"], [371, "global-functions"], [370, "global-functions"]], "Programming Model": [[301, "programming-model"]], "Fusion Patterns": [[300, "fusion-patterns"]], "Other Fusion Patterns": [[300, "other-fusion-patterns"]], "oneDNN API": [[303, "onednn-api"]], "Supported Operations": [[302, "supported-operations"]], "Common API": [[309, "common-api"]], "BLAS functions": [[308, "blas-functions"]], "Data types": [[312, "data-types"]], "Macros": [[312, "macros"], [323, "macros"], [329, "macros"], [335, "macros"], [355, "macros"]], "Deconvolution": [[313, "deconvolution"]], "Runtime interoperability API": [[319, "runtime-interoperability-api"], [354, "runtime-interoperability-api"]], "LRN": [[321, "lrn"]], "Memory": [[323, "memory"]], "OpenCL interoperability API": [[324, "opencl-interoperability-api"], [356, "opencl-interoperability-api"]], "Common": [[329, "common"]], "Service": [[335, "service"]], "Stream": [[338, "stream"]], "SYCL interoperability API": [[340, "sycl-interoperability-api"], [360, "sycl-interoperability-api"]], "Threadpool interoperability API": [[341, "threadpool-interoperability-api"]], "BRGeMM ukernel": [[343, "brgemm-ukernel"]], "Ukernels": [[342, "ukernels"], [601, "ukernels"]], "Transform ukernel": [[344, "transform-ukernel"]], "ukernel utils": [[345, "ukernel-utils"]], "Utilities": [[346, "utilities"], [362, "utilities"]], "Allocator": [[348, "allocator"]], "Compiled Partition Cache": [[350, "compiled-partition-cache"]], "Status": [[359, "status"]], "oneAPI Deep Neural Network Library (oneDNN) Developer Guide and Reference": [[363, "oneapi-deep-neural-network-library-onednn-developer-guide-and-reference"]], "Interoperability with DPC++ and OpenCL": [[364, "interoperability-with-dpc-and-opencl"]], "namespace dnnl": [[365, "namespace-dnnl"]], "namespace dnnl::graph::ocl_interop": [[367, "namespace-dnnl-graph-ocl-interop"]], "namespace dnnl::graph": [[366, "namespace-dnnl-graph"]], "namespace dnnl::ocl_interop": [[369, "namespace-dnnl-ocl-interop"]], "namespace dnnl::graph::sycl_interop": [[368, "namespace-dnnl-graph-sycl-interop"]], "namespace dnnl::threadpool_interop": [[371, "namespace-dnnl-threadpool-interop"]], "namespace dnnl::sycl_interop": [[370, "namespace-dnnl-sycl-interop"]], "namespace oneapi": [[373, "namespace-oneapi"]], "namespace dnnl::ukernel": [[372, "namespace-dnnl-ukernel"]], "namespace std": [[374, "namespace-std"]], "namespace sycl": [[375, "namespace-sycl"]], "Orphans": [[376, "orphans"]], "AUGRU RNN Primitive Example": [[377, "augru-rnn-primitive-example"]], "Batch Normalization Primitive Example": [[379, "batch-normalization-primitive-example"]], "<Untitled>": [[378, "untitled"], [380, "untitled"], [382, "untitled"], [384, "untitled"], [391, "untitled"], [393, "untitled"], [399, "untitled"], [404, "untitled"], [408, "untitled"], [410, "untitled"], [420, "untitled"], [422, "untitled"], [424, "untitled"], [426, "untitled"], [428, "untitled"], [431, "untitled"], [433, "untitled"], [435, "untitled"], [440, "untitled"], [442, "untitled"], [444, "untitled"], [446, "untitled"], [448, "untitled"], [451, "untitled"], [453, "untitled"], [455, "untitled"], [460, "untitled"], [462, "untitled"]], "Binary Primitive Example": [[381, "binary-primitive-example"]], "Bnorm u8 by binary post-ops example": [[383, "bnorm-u8-by-binary-post-ops-example"]], "CNN f32 inference example": [[385, "cnn-f32-inference-example"], [386, "cnn-f32-inference-example"]], "CNN int8 inference example": [[387, "cnn-int8-inference-example"]], "CNN bf16 training example": [[388, "cnn-bf16-training-example"]], "CNN f32 training example": [[389, "cnn-f32-training-example"], [395, "cnn-f32-training-example"]], "Concat Primitive Example": [[390, "concat-primitive-example"]], "Convolution Primitive Example": [[392, "convolution-primitive-example"]], "BRGeMM ukernel example": [[394, "brgemm-ukernel-example"]], "MatMul Primitive Example": [[397, "matmul-primitive-example"], [396, "matmul-primitive-example"], [400, "matmul-primitive-example"]], "MatMul Tutorial: Quantization": [[398, "matmul-tutorial-quantization"]], "RNN f32 inference example": [[401, "rnn-f32-inference-example"]], "MatMul Tutorial: Comparison with SGEMM": [[403, "matmul-tutorial-comparison-with-sgemm"]], "RNN int8 inference example": [[402, "rnn-int8-inference-example"]], "Reorder between CPU and GPU engines": [[405, "reorder-between-cpu-and-gpu-engines"], [406, "reorder-between-cpu-and-gpu-engines"]], "Deconvolution Primitive Example": [[407, "deconvolution-primitive-example"]], "Public headers": [[406, "public-headers"], [411, "public-headers"], [412, "public-headers"], [413, "public-headers"], [415, "public-headers"], [414, "public-headers"], [417, "public-headers"], [416, "public-headers"], [418, "public-headers"], [456, "public-headers"]], "cross_engine_reorder_tutorial() function": [[406, "cross-engine-reorder-tutorial-function"]], "Engine and stream": [[406, "engine-and-stream"], [411, "engine-and-stream"], [412, "engine-and-stream"], [456, "engine-and-stream"]], "Wrapping data into oneDNN GPU memory object": [[406, "wrapping-data-into-onednn-gpu-memory-object"]], "Creating a ReLU primitive": [[406, "creating-a-relu-primitive"], [411, "creating-a-relu-primitive"]], "Getting results from a oneDNN GPU memory object": [[406, "getting-results-from-a-onednn-gpu-memory-object"]], "Executing all primitives": [[406, "executing-all-primitives"]], "Validate the result": [[406, "validate-the-result"]], "Element-Wise Primitive Example": [[409, "element-wise-primitive-example"]], "oneDNN API Basic Workflow Tutorial": [[411, "onednn-api-basic-workflow-tutorial"]], "getting_started_tutorial() function": [[411, "getting-started-tutorial-function"]], "Data preparation (code outside of oneDNN)": [[411, "data-preparation-code-outside-of-onednn"]], "Wrapping data into a oneDNN memory object": [[411, "wrapping-data-into-a-onednn-memory-object"]], "Alternative way to create a memory descriptor": [[411, "alternative-way-to-create-a-memory-descriptor"]], "Creating a memory object": [[411, "creating-a-memory-object"]], "Executing the ReLU primitive": [[411, "executing-the-relu-primitive"]], "Obtaining the result and validation": [[411, "obtaining-the-result-and-validation"]], "main() function": [[411, "main-function"], [456, "main-function"]], "Getting started on GPU with OpenCL extensions API": [[412, "getting-started-on-gpu-with-opencl-extensions-api"]], "gpu_opencl_interop_tutorial() function": [[412, "gpu-opencl-interop-tutorial-function"]], "Wrapping data into oneDNN memory object": [[412, "wrapping-data-into-onednn-memory-object"], [456, "wrapping-data-into-onednn-memory-object"]], "Initialize the data by executing a custom OpenCL kernel": [[412, "initialize-the-data-by-executing-a-custom-opencl-kernel"]], "Create and execute a primitive": [[412, "create-and-execute-a-primitive"], [456, "create-and-execute-a-primitive"]], "Validate the results": [[412, "validate-the-results"], [456, "validate-the-results"]], "Getting started on CPU with Graph API": [[413, "getting-started-on-cpu-with-graph-api"]], "cpu_getting_started_tutorial() function": [[413, "cpu-getting-started-tutorial-function"]], "Build Graph and Get Partitions": [[413, "build-graph-and-get-partitions"], [415, "build-graph-and-get-partitions"], [414, "build-graph-and-get-partitions"], [418, "build-graph-and-get-partitions"]], "Compile and Execute Partition": [[413, "compile-and-execute-partition"], [415, "compile-and-execute-partition"], [414, "compile-and-execute-partition"], [417, "compile-and-execute-partition"], [416, "compile-and-execute-partition"], [418, "compile-and-execute-partition"]], "Single op partition on CPU": [[415, "single-op-partition-on-cpu"]], "cpu_single_op_partition_tutorial() function": [[415, "cpu-single-op-partition-tutorial-function"]], "Convolution int8 inference example with Graph API": [[414, "convolution-int8-inference-example-with-graph-api"]], "simple_pattern_int8() function": [[414, "simple-pattern-int8-function"]], "Getting started with SYCL extensions API and Graph API": [[417, "getting-started-with-sycl-extensions-api-and-graph-api"]], "sycl_getting_started_tutorial() function": [[417, "sycl-getting-started-tutorial-function"]], "Build Graph and Get Partitions.": [[417, "build-graph-and-get-partitions"], [416, "build-graph-and-get-partitions"]], "Getting started with OpenCL extensions and Graph API": [[416, "getting-started-with-opencl-extensions-and-graph-api"]], "ocl_getting_started_tutorial() function": [[416, "ocl-getting-started-tutorial-function"]], "Single op partition on GPU": [[418, "single-op-partition-on-gpu"]], "sycl_single_op_partition_tutorial() function": [[418, "sycl-single-op-partition-tutorial-function"]], "Group Normalization Primitive Example": [[419, "group-normalization-primitive-example"]], "MatMul Tutorial: INT8 Inference": [[421, "matmul-tutorial-int8-inference"]], "Inner Product Primitive Example": [[423, "inner-product-primitive-example"]], "Layer Normalization Primitive Example": [[425, "layer-normalization-primitive-example"]], "Linear-Before-Reset GRU RNN Primitive Example": [[427, "linear-before-reset-gru-rnn-primitive-example"]], "Legal Information": [[429, "legal-information"]], "Trademark Information": [[429, "trademark-information"]], "Local Response Normalization Primitive Example": [[430, "local-response-normalization-primitive-example"]], "LSTM RNN Primitive Example": [[432, "lstm-rnn-primitive-example"]], "Matmul Primitive Example": [[434, "matmul-primitive-example"]], "Memory Format Propagation": [[437, "memory-format-propagation"]], "Introduction to the tutorial": [[437, "introduction-to-the-tutorial"]], "memory_format_propagation() function": [[437, "memory-format-propagation-function"]], "Initialization": [[437, "initialization"]], "Create convolution and pooling primitives": [[437, "create-convolution-and-pooling-primitives"]], "Create source and destination memory objects": [[437, "create-source-and-destination-memory-objects"]], "Determine if source and destination need to be reordered": [[437, "determine-if-source-and-destination-need-to-be-reordered"]], "Allocate intermediate buffers if necessary": [[437, "allocate-intermediate-buffers-if-necessary"]], "Perform reorders for source data if necessary": [[437, "perform-reorders-for-source-data-if-necessary"]], "Create and execute convolution and pooling primitives": [[437, "create-and-execute-convolution-and-pooling-primitives"]], "Reorder destination data if necessary": [[437, "reorder-destination-data-if-necessary"]], "Results": [[437, "results"]], "Matrix Multiplication Performance Example": [[436, "matrix-multiplication-performance-example"]], "Performance Profiling Example": [[438, "performance-profiling-example"]], "Walkthrough": [[438, "walkthrough"]], "Naive Implementation": [[438, "naive-implementation"]], "Blocked format implementation": [[438, "blocked-format-implementation"]], "Fused Implementation": [[438, "fused-implementation"]], "Performance summary": [[438, "performance-summary"]], "Configuration Notice": [[438, "configuration-notice"]], "Pooling Primitive Example": [[439, "pooling-primitive-example"]], "Primitive Example": [[441, "primitive-example"]], "Reduction Primitive Example": [[443, "reduction-primitive-example"]], "Reorder Primitive Example": [[445, "reorder-primitive-example"]], "Resampling Primitive Example": [[447, "resampling-primitive-example"]], "RNN f32 training example": [[449, "rnn-f32-training-example"]], "Shuffle Primitive Example": [[450, "shuffle-primitive-example"]], "Softmax Primitive Example": [[452, "softmax-primitive-example"]], "Sum Primitive Example": [[454, "sum-primitive-example"]], "SYCL USM example": [[457, "sycl-usm-example"]], "Getting started on both CPU and GPU with SYCL extensions API": [[456, "getting-started-on-both-cpu-and-gpu-with-sycl-extensions-api"]], "sycl_interop_buffer_tutorial() function": [[456, "sycl-interop-buffer-tutorial-function"]], "Initialize the data executing a custom SYCL kernel": [[456, "initialize-the-data-executing-a-custom-sycl-kernel"]], "Todo List": [[458, "todo-list"]], "Vanilla RNN Primitive Example": [[459, "vanilla-rnn-primitive-example"]], "MatMul Tutorial: weights decompression": [[461, "matmul-tutorial-weights-decompression"]], "Performance Profiling and Inspection": [[463, "performance-profiling-and-inspection"]], "struct args_t": [[465, "struct-args-t"]], "oneDNN Concepts": [[464, "onednn-concepts"]], "struct dnnl::augru_backward": [[467, "struct-dnnl-augru-backward"]], "Inherited Members": [[467, "inherited-members"], [469, "inherited-members"], [468, "inherited-members"], [471, "inherited-members"], [470, "inherited-members"], [473, "inherited-members"], [472, "inherited-members"], [475, "inherited-members"], [474, "inherited-members"], [476, "inherited-members"], [478, "inherited-members"], [479, "inherited-members"], [480, "inherited-members"], [481, "inherited-members"], [482, "inherited-members"], [483, "inherited-members"], [485, "inherited-members"], [484, "inherited-members"], [486, "inherited-members"], [487, "inherited-members"], [488, "inherited-members"], [489, "inherited-members"], [490, "inherited-members"], [491, "inherited-members"], [492, "inherited-members"], [493, "inherited-members"], [495, "inherited-members"], [494, "inherited-members"], [497, "inherited-members"], [503, "inherited-members"], [502, "inherited-members"], [504, "inherited-members"], [505, "inherited-members"], [506, "inherited-members"], [507, "inherited-members"], [509, "inherited-members"], [508, "inherited-members"], [512, "inherited-members"], [513, "inherited-members"], [515, "inherited-members"], [514, "inherited-members"], [517, "inherited-members"], [516, "inherited-members"], [518, "inherited-members"], [519, "inherited-members"], [520, "inherited-members"], [521, "inherited-members"], [522, "inherited-members"], [523, "inherited-members"], [525, "inherited-members"], [524, "inherited-members"], [527, "inherited-members"], [526, "inherited-members"], [528, "inherited-members"], [529, "inherited-members"], [531, "inherited-members"], [530, "inherited-members"], [533, "inherited-members"], [532, "inherited-members"], [534, "inherited-members"], [535, "inherited-members"], [537, "inherited-members"], [536, "inherited-members"], [538, "inherited-members"], [539, "inherited-members"], [541, "inherited-members"], [543, "inherited-members"], [544, "inherited-members"], [545, "inherited-members"], [547, "inherited-members"], [546, "inherited-members"], [549, "inherited-members"], [550, "inherited-members"], [551, "inherited-members"], [552, "inherited-members"], [553, "inherited-members"], [555, "inherited-members"], [557, "inherited-members"], [559, "inherited-members"], [560, "inherited-members"], [561, "inherited-members"], [563, "inherited-members"], [562, "inherited-members"], [565, "inherited-members"], [564, "inherited-members"], [566, "inherited-members"], [567, "inherited-members"], [568, "inherited-members"], [569, "inherited-members"], [571, "inherited-members"], [570, "inherited-members"], [573, "inherited-members"], [572, "inherited-members"], [574, "inherited-members"], [575, "inherited-members"], [576, "inherited-members"], [577, "inherited-members"], [579, "inherited-members"], [580, "inherited-members"], [581, "inherited-members"], [585, "inherited-members"], [587, "inherited-members"], [586, "inherited-members"], [588, "inherited-members"], [589, "inherited-members"], [591, "inherited-members"], [590, "inherited-members"]], "struct cpu_deletor_t": [[466, "struct-cpu-deletor-t"]], "struct dnnl::augru_forward": [[469, "struct-dnnl-augru-forward"]], "struct dnnl::augru_backward::primitive_desc": [[468, "struct-dnnl-augru-backward-primitive-desc"]], "struct dnnl::batch_normalization_backward": [[471, "struct-dnnl-batch-normalization-backward"]], "struct dnnl::augru_forward::primitive_desc": [[470, "struct-dnnl-augru-forward-primitive-desc"]], "struct dnnl::batch_normalization_forward": [[473, "struct-dnnl-batch-normalization-forward"]], "struct dnnl::batch_normalization_backward::primitive_desc": [[472, "struct-dnnl-batch-normalization-backward-primitive-desc"]], "struct dnnl::binary": [[475, "struct-dnnl-binary"]], "struct dnnl::batch_normalization_forward::primitive_desc": [[474, "struct-dnnl-batch-normalization-forward-primitive-desc"]], "struct dnnl::binary::primitive_desc": [[476, "struct-dnnl-binary-primitive-desc"]], "struct dnnl_brgemm": [[477, "struct-dnnl-brgemm"]], "struct dnnl::concat": [[478, "struct-dnnl-concat"]], "struct dnnl::concat::primitive_desc": [[479, "struct-dnnl-concat-primitive-desc"]], "struct dnnl::convolution_backward_data": [[480, "struct-dnnl-convolution-backward-data"]], "struct dnnl::convolution_backward_data::primitive_desc": [[481, "struct-dnnl-convolution-backward-data-primitive-desc"]], "struct dnnl::convolution_backward_weights": [[482, "struct-dnnl-convolution-backward-weights"]], "struct dnnl::convolution_backward_weights::primitive_desc": [[483, "struct-dnnl-convolution-backward-weights-primitive-desc"]], "struct dnnl::convolution_forward::primitive_desc": [[485, "struct-dnnl-convolution-forward-primitive-desc"]], "struct dnnl::convolution_forward": [[484, "struct-dnnl-convolution-forward"]], "struct dnnl::deconvolution_backward_data": [[486, "struct-dnnl-deconvolution-backward-data"]], "struct dnnl::deconvolution_backward_data::primitive_desc": [[487, "struct-dnnl-deconvolution-backward-data-primitive-desc"]], "struct dnnl::deconvolution_backward_weights": [[488, "struct-dnnl-deconvolution-backward-weights"]], "struct dnnl::deconvolution_backward_weights::primitive_desc": [[489, "struct-dnnl-deconvolution-backward-weights-primitive-desc"]], "struct dnnl::deconvolution_forward": [[490, "struct-dnnl-deconvolution-forward"]], "struct dnnl::deconvolution_forward::primitive_desc": [[491, "struct-dnnl-deconvolution-forward-primitive-desc"]], "struct dnnl::eltwise_backward": [[492, "struct-dnnl-eltwise-backward"]], "struct dnnl::eltwise_backward::primitive_desc": [[493, "struct-dnnl-eltwise-backward-primitive-desc"]], "struct dnnl::eltwise_forward::primitive_desc": [[495, "struct-dnnl-eltwise-forward-primitive-desc"]], "struct dnnl::eltwise_forward": [[494, "struct-dnnl-eltwise-forward"]], "struct dnnl::engine": [[497, "struct-dnnl-engine"]], "struct dnnl_engine": [[496, "struct-dnnl-engine"]], "struct dnnl_exec_arg_t": [[499, "struct-dnnl-exec-arg-t"]], "Fields": [[499, "fields"], [501, "fields"], [500, "fields"], [582, "fields"], [592, "fields"]], "struct dnnl::error": [[498, "struct-dnnl-error"]], "struct dnnl_graph_logical_tensor_t": [[501, "struct-dnnl-graph-logical-tensor-t"]], "struct dnnl_graph_inplace_pair_t": [[500, "struct-dnnl-graph-inplace-pair-t"]], "struct dnnl::group_normalization_backward::primitive_desc": [[503, "struct-dnnl-group-normalization-backward-primitive-desc"]], "struct dnnl::group_normalization_backward": [[502, "struct-dnnl-group-normalization-backward"]], "struct dnnl::group_normalization_forward": [[504, "struct-dnnl-group-normalization-forward"]], "struct dnnl::group_normalization_forward::primitive_desc": [[505, "struct-dnnl-group-normalization-forward-primitive-desc"]], "struct dnnl::gru_backward": [[506, "struct-dnnl-gru-backward"]], "struct dnnl::gru_backward::primitive_desc": [[507, "struct-dnnl-gru-backward-primitive-desc"]], "struct dnnl::gru_forward::primitive_desc": [[509, "struct-dnnl-gru-forward-primitive-desc"]], "struct dnnl::gru_forward": [[508, "struct-dnnl-gru-forward"]], "template struct dnnl::handle": [[510, "template-struct-dnnl-handle"]], "template struct dnnl::handle_traits": [[511, "template-struct-dnnl-handle-traits"]], "struct dnnl::inner_product_backward_data": [[512, "struct-dnnl-inner-product-backward-data"]], "struct dnnl::inner_product_backward_data::primitive_desc": [[513, "struct-dnnl-inner-product-backward-data-primitive-desc"]], "struct dnnl::inner_product_backward_weights::primitive_desc": [[515, "struct-dnnl-inner-product-backward-weights-primitive-desc"]], "struct dnnl::inner_product_backward_weights": [[514, "struct-dnnl-inner-product-backward-weights"]], "struct dnnl::inner_product_forward::primitive_desc": [[517, "struct-dnnl-inner-product-forward-primitive-desc"]], "struct dnnl::inner_product_forward": [[516, "struct-dnnl-inner-product-forward"]], "struct dnnl::layer_normalization_backward": [[518, "struct-dnnl-layer-normalization-backward"]], "struct dnnl::layer_normalization_backward::primitive_desc": [[519, "struct-dnnl-layer-normalization-backward-primitive-desc"]], "struct dnnl::layer_normalization_forward": [[520, "struct-dnnl-layer-normalization-forward"]], "struct dnnl::layer_normalization_forward::primitive_desc": [[521, "struct-dnnl-layer-normalization-forward-primitive-desc"]], "struct dnnl::lbr_augru_backward": [[522, "struct-dnnl-lbr-augru-backward"]], "struct dnnl::lbr_augru_backward::primitive_desc": [[523, "struct-dnnl-lbr-augru-backward-primitive-desc"]], "struct dnnl::lbr_augru_forward::primitive_desc": [[525, "struct-dnnl-lbr-augru-forward-primitive-desc"]], "struct dnnl::lbr_augru_forward": [[524, "struct-dnnl-lbr-augru-forward"]], "struct dnnl::lbr_gru_backward::primitive_desc": [[527, "struct-dnnl-lbr-gru-backward-primitive-desc"]], "struct dnnl::lbr_gru_backward": [[526, "struct-dnnl-lbr-gru-backward"]], "struct dnnl::lbr_gru_forward": [[528, "struct-dnnl-lbr-gru-forward"]], "struct dnnl::lbr_gru_forward::primitive_desc": [[529, "struct-dnnl-lbr-gru-forward-primitive-desc"]], "struct dnnl::lrn_backward::primitive_desc": [[531, "struct-dnnl-lrn-backward-primitive-desc"]], "struct dnnl::lrn_backward": [[530, "struct-dnnl-lrn-backward"]], "struct dnnl::lrn_forward::primitive_desc": [[533, "struct-dnnl-lrn-forward-primitive-desc"]], "struct dnnl::lrn_forward": [[532, "struct-dnnl-lrn-forward"]], "struct dnnl::lstm_backward": [[534, "struct-dnnl-lstm-backward"]], "struct dnnl::lstm_backward::primitive_desc": [[535, "struct-dnnl-lstm-backward-primitive-desc"]], "struct dnnl::lstm_forward::primitive_desc": [[537, "struct-dnnl-lstm-forward-primitive-desc"]], "struct dnnl::lstm_forward": [[536, "struct-dnnl-lstm-forward"]], "struct dnnl::matmul": [[538, "struct-dnnl-matmul"]], "struct dnnl::matmul::primitive_desc": [[539, "struct-dnnl-matmul-primitive-desc"]], "struct dnnl::memory": [[541, "struct-dnnl-memory"]], "struct dnnl_memory": [[540, "struct-dnnl-memory"]], "struct dnnl_memory_desc": [[542, "struct-dnnl-memory-desc"]], "struct dnnl::memory::desc": [[543, "struct-dnnl-memory-desc"]], "struct dnnl::pooling_backward": [[544, "struct-dnnl-pooling-backward"]], "struct dnnl::pooling_backward::primitive_desc": [[545, "struct-dnnl-pooling-backward-primitive-desc"]], "struct dnnl::pooling_forward::primitive_desc": [[547, "struct-dnnl-pooling-forward-primitive-desc"]], "struct dnnl::pooling_forward": [[546, "struct-dnnl-pooling-forward"]], "struct dnnl_post_ops": [[548, "struct-dnnl-post-ops"]], "struct dnnl::post_ops": [[549, "struct-dnnl-post-ops"]], "struct dnnl::prelu_backward": [[550, "struct-dnnl-prelu-backward"]], "struct dnnl::prelu_backward::primitive_desc": [[551, "struct-dnnl-prelu-backward-primitive-desc"]], "struct dnnl::prelu_forward": [[552, "struct-dnnl-prelu-forward"]], "struct dnnl::prelu_forward::primitive_desc": [[553, "struct-dnnl-prelu-forward-primitive-desc"]], "struct dnnl::primitive": [[555, "struct-dnnl-primitive"]], "struct dnnl_primitive": [[554, "struct-dnnl-primitive"]], "struct dnnl_primitive_attr": [[556, "struct-dnnl-primitive-attr"]], "struct dnnl::primitive_attr": [[557, "struct-dnnl-primitive-attr"]], "struct dnnl::primitive_desc": [[559, "struct-dnnl-primitive-desc"]], "struct dnnl_primitive_desc": [[558, "struct-dnnl-primitive-desc"]], "struct dnnl::primitive_desc_base": [[560, "struct-dnnl-primitive-desc-base"]], "struct dnnl::reduction": [[561, "struct-dnnl-reduction"]], "struct dnnl::reorder": [[563, "struct-dnnl-reorder"]], "struct dnnl::reduction::primitive_desc": [[562, "struct-dnnl-reduction-primitive-desc"]], "struct dnnl::resampling_backward": [[565, "struct-dnnl-resampling-backward"]], "struct dnnl::reorder::primitive_desc": [[564, "struct-dnnl-reorder-primitive-desc"]], "struct dnnl::resampling_backward::primitive_desc": [[566, "struct-dnnl-resampling-backward-primitive-desc"]], "struct dnnl::resampling_forward": [[567, "struct-dnnl-resampling-forward"]], "struct dnnl::resampling_forward::primitive_desc": [[568, "struct-dnnl-resampling-forward-primitive-desc"]], "struct dnnl::rnn_primitive_desc_base": [[569, "struct-dnnl-rnn-primitive-desc-base"]], "struct dnnl::shuffle_backward::primitive_desc": [[571, "struct-dnnl-shuffle-backward-primitive-desc"]], "struct dnnl::shuffle_backward": [[570, "struct-dnnl-shuffle-backward"]], "struct dnnl::shuffle_forward::primitive_desc": [[573, "struct-dnnl-shuffle-forward-primitive-desc"]], "struct dnnl::shuffle_forward": [[572, "struct-dnnl-shuffle-forward"]], "struct dnnl::softmax_backward": [[574, "struct-dnnl-softmax-backward"]], "struct dnnl::softmax_backward::primitive_desc": [[575, "struct-dnnl-softmax-backward-primitive-desc"]], "struct dnnl::softmax_forward": [[576, "struct-dnnl-softmax-forward"]], "struct dnnl::softmax_forward::primitive_desc": [[577, "struct-dnnl-softmax-forward-primitive-desc"]], "struct dnnl_stream": [[578, "struct-dnnl-stream"]], "struct dnnl::stream": [[579, "struct-dnnl-stream"]], "struct dnnl::sum": [[580, "struct-dnnl-sum"]], "struct dnnl::sum::primitive_desc": [[581, "struct-dnnl-sum-primitive-desc"]], "struct dnnl_transform": [[583, "struct-dnnl-transform"]], "struct dnnl::threadpool_interop::threadpool_iface": [[582, "struct-dnnl-threadpool-interop-threadpool-iface"]], "struct dnnl::ukernel::attr_params": [[585, "struct-dnnl-ukernel-attr-params"]], "struct dnnl_ukernel_attr_params": [[584, "struct-dnnl-ukernel-attr-params"]], "struct dnnl::ukernel::transform": [[587, "struct-dnnl-ukernel-transform"]], "struct dnnl::ukernel::brgemm": [[586, "struct-dnnl-ukernel-brgemm"]], "struct dnnl::vanilla_rnn_backward": [[588, "struct-dnnl-vanilla-rnn-backward"]], "struct dnnl::vanilla_rnn_backward::primitive_desc": [[589, "struct-dnnl-vanilla-rnn-backward-primitive-desc"]], "struct dnnl::vanilla_rnn_forward::primitive_desc": [[591, "struct-dnnl-vanilla-rnn-forward-primitive-desc"]], "struct dnnl::vanilla_rnn_forward": [[590, "struct-dnnl-vanilla-rnn-forward"]], "struct example_allows_unimplemented": [[593, "struct-example-allows-unimplemented"]], "struct dnnl_version_t": [[592, "struct-dnnl-version-t"]], "struct gqa_dims_t": [[595, "struct-gqa-dims-t"]], "struct gemm_dims_t": [[594, "struct-gemm-dims-t"]], "struct mqa_dims_t": [[597, "struct-mqa-dims-t"]], "struct mlp_dims_t": [[596, "struct-mlp-dims-t"]], "struct sycl_deletor_t": [[599, "struct-sycl-deletor-t"]], "struct sdpa_dims_t": [[598, "struct-sdpa-dims-t"]], "Supported Primitives": [[600, "supported-primitives"]]}, "indexentries": {"allocator": [[2, "index-1"], [2, "index-2"], [348, "index-0"]], "class": [[2, "index-0"], [3, "index-0"], [4, "index-0"], [5, "index-0"], [6, "index-0"], [7, "index-0"], [8, "index-0"], [9, "index-0"]], "dnnl::graph::allocator": [[2, "index-0"]], "function": [[2, "index-1"], [2, "index-2"], [3, "index-1"], [3, "index-2"], [3, "index-3"], [3, "index-4"], [3, "index-5"], [4, "index-1"], [4, "index-2"], [4, "index-3"], [4, "index-4"], [4, "index-5"], [4, "index-6"], [4, "index-7"], [4, "index-8"], [5, "index-10"], [5, "index-11"], [5, "index-12"], [5, "index-13"], [5, "index-14"], [5, "index-15"], [5, "index-16"], [5, "index-17"], [5, "index-18"], [5, "index-19"], [5, "index-20"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"], [6, "index-1"], [6, "index-10"], [6, "index-11"], [6, "index-12"], [6, "index-2"], [6, "index-3"], [6, "index-4"], [6, "index-5"], [6, "index-6"], [6, "index-7"], [6, "index-8"], [6, "index-9"], [7, "index-1"], [7, "index-10"], [7, "index-2"], [7, "index-3"], [7, "index-4"], [7, "index-5"], [7, "index-6"], [7, "index-7"], [7, "index-8"], [7, "index-9"], [8, "index-1"], [8, "index-2"], [8, "index-3"], [8, "index-4"], [8, "index-5"], [8, "index-6"], [8, "index-7"], [8, "index-8"], [298, "index-1"], [304, "index-1"], [305, "index-10"], [305, "index-11"], [305, "index-12"], [305, "index-13"], [305, "index-14"], [305, "index-15"], [305, "index-16"], [305, "index-17"], [305, "index-18"], [305, "index-19"], [305, "index-20"], [305, "index-21"], [305, "index-22"], [305, "index-23"], [305, "index-24"], [305, "index-25"], [305, "index-26"], [305, "index-27"], [305, "index-28"], [305, "index-29"], [305, "index-30"], [305, "index-31"], [305, "index-32"], [305, "index-33"], [305, "index-34"], [305, "index-35"], [305, "index-36"], [305, "index-37"], [305, "index-38"], [305, "index-39"], [305, "index-40"], [305, "index-41"], [305, "index-42"], [305, "index-43"], [305, "index-44"], [305, "index-45"], [305, "index-46"], [305, "index-47"], [305, "index-48"], [305, "index-49"], [305, "index-5"], [305, "index-50"], [305, "index-51"], [305, "index-52"], [305, "index-53"], [305, "index-54"], [305, "index-6"], [305, "index-7"], [305, "index-8"], [305, "index-9"], [306, "index-1"], [306, "index-2"], [307, "index-1"], [307, "index-2"], [308, "index-1"], [308, "index-2"], [308, "index-3"], [308, "index-4"], [308, "index-5"], [308, "index-6"], [310, "index-1"], [311, "index-1"], [311, "index-2"], [311, "index-3"], [313, "index-1"], [313, "index-2"], [313, "index-3"], [314, "index-1"], [314, "index-2"], [315, "index-2"], [315, "index-3"], [315, "index-4"], [315, "index-5"], [315, "index-6"], [316, "index-1"], [316, "index-2"], [316, "index-3"], [317, "index-1"], [317, "index-2"], [318, "index-1"], [318, "index-2"], [318, "index-3"], [320, "index-1"], [320, "index-2"], [320, "index-3"], [320, "index-4"], [321, "index-1"], [321, "index-2"], [322, "index-1"], [323, "index-10"], [323, "index-11"], [323, "index-12"], [323, "index-13"], [323, "index-14"], [323, "index-15"], [323, "index-16"], [323, "index-17"], [323, "index-18"], [323, "index-19"], [323, "index-20"], [323, "index-21"], [323, "index-22"], [323, "index-23"], [323, "index-24"], [323, "index-25"], [323, "index-26"], [323, "index-27"], [323, "index-28"], [323, "index-29"], [323, "index-30"], [323, "index-31"], [323, "index-32"], [323, "index-33"], [323, "index-34"], [323, "index-35"], [323, "index-5"], [323, "index-6"], [323, "index-7"], [323, "index-8"], [323, "index-9"], [324, "index-1"], [324, "index-10"], [324, "index-11"], [324, "index-12"], [324, "index-13"], [324, "index-14"], [324, "index-2"], [324, "index-3"], [324, "index-4"], [324, "index-5"], [324, "index-6"], [324, "index-7"], [324, "index-8"], [324, "index-9"], [325, "index-1"], [325, "index-2"], [326, "index-1"], [326, "index-2"], [327, "index-1"], [327, "index-2"], [327, "index-3"], [327, "index-4"], [329, "index-10"], [329, "index-11"], [329, "index-12"], [329, "index-13"], [329, "index-14"], [329, "index-15"], [329, "index-16"], [329, "index-17"], [329, "index-18"], [329, "index-19"], [329, "index-20"], [329, "index-5"], [329, "index-6"], [329, "index-7"], [329, "index-8"], [329, "index-9"], [330, "index-1"], [330, "index-2"], [330, "index-3"], [330, "index-4"], [331, "index-1"], [332, "index-1"], [333, "index-1"], [333, "index-2"], [334, "index-1"], [334, "index-10"], [334, "index-11"], [334, "index-12"], [334, "index-13"], [334, "index-14"], [334, "index-2"], [334, "index-3"], [334, "index-4"], [334, "index-5"], [334, "index-6"], [334, "index-7"], [334, "index-8"], [334, "index-9"], [335, "index-10"], [335, "index-11"], [335, "index-12"], [335, "index-13"], [335, "index-14"], [335, "index-15"], [335, "index-16"], [335, "index-17"], [335, "index-18"], [335, "index-19"], [335, "index-2"], [335, "index-20"], [335, "index-21"], [335, "index-3"], [335, "index-4"], [335, "index-5"], [335, "index-6"], [335, "index-7"], [335, "index-8"], [335, "index-9"], [336, "index-1"], [336, "index-2"], [337, "index-1"], [337, "index-2"], [338, "index-3"], [338, "index-4"], [338, "index-5"], [338, "index-6"], [339, "index-1"], [340, "index-1"], [340, "index-10"], [340, "index-2"], [340, "index-3"], [340, "index-4"], [340, "index-5"], [340, "index-6"], [340, "index-7"], [340, "index-8"], [340, "index-9"], [341, "index-1"], [341, "index-2"], [341, "index-3"], [341, "index-4"], [341, "index-5"], [341, "index-6"], [341, "index-7"], [342, "index-3"], [342, "index-4"], [342, "index-5"], [342, "index-6"], [342, "index-7"], [342, "index-8"], [343, "index-10"], [343, "index-11"], [343, "index-12"], [343, "index-13"], [343, "index-14"], [343, "index-15"], [343, "index-16"], [343, "index-17"], [343, "index-18"], [343, "index-19"], [343, "index-20"], [343, "index-21"], [343, "index-22"], [343, "index-23"], [343, "index-24"], [343, "index-5"], [343, "index-6"], [343, "index-7"], [343, "index-8"], [343, "index-9"], [348, "index-5"], [348, "index-6"], [349, "index-3"], [349, "index-4"], [349, "index-5"], [349, "index-6"], [349, "index-7"], [350, "index-1"], [350, "index-2"], [350, "index-3"], [350, "index-4"], [351, "index-1"], [351, "index-2"], [351, "index-3"], [351, "index-4"], [351, "index-5"], [351, "index-6"], [351, "index-7"], [351, "index-8"], [352, "index-1"], [352, "index-2"], [353, "index-10"], [353, "index-11"], [353, "index-12"], [353, "index-13"], [353, "index-3"], [353, "index-4"], [353, "index-5"], [353, "index-6"], [353, "index-7"], [353, "index-8"], [353, "index-9"], [355, "index-1"], [355, "index-2"], [355, "index-3"], [355, "index-4"], [355, "index-5"], [356, "index-3"], [356, "index-4"], [356, "index-5"], [356, "index-6"], [357, "index-10"], [357, "index-11"], [357, "index-12"], [357, "index-3"], [357, "index-4"], [357, "index-5"], [357, "index-6"], [357, "index-7"], [357, "index-8"], [357, "index-9"], [358, "index-10"], [358, "index-11"], [358, "index-12"], [358, "index-13"], [358, "index-14"], [358, "index-3"], [358, "index-4"], [358, "index-5"], [358, "index-6"], [358, "index-7"], [358, "index-8"], [358, "index-9"], [360, "index-3"], [360, "index-4"], [360, "index-5"], [361, "index-3"], [361, "index-4"], [361, "index-5"], [361, "index-6"], [361, "index-7"], [361, "index-8"], [361, "index-9"], [367, "index-1"], [367, "index-2"], [367, "index-3"], [367, "index-4"], [368, "index-1"], [368, "index-2"], [369, "index-1"], [369, "index-10"], [369, "index-11"], [369, "index-12"], [369, "index-13"], [369, "index-14"], [369, "index-15"], [369, "index-16"], [369, "index-17"], [369, "index-2"], [369, "index-3"], [369, "index-4"], [369, "index-5"], [369, "index-6"], [369, "index-7"], [369, "index-8"], [369, "index-9"], [370, "index-1"], [370, "index-10"], [370, "index-11"], [370, "index-12"], [370, "index-13"], [370, "index-2"], [370, "index-3"], [370, "index-4"], [370, "index-5"], [370, "index-6"], [370, "index-7"], [370, "index-8"], [370, "index-9"], [371, "index-1"], [371, "index-2"], [371, "index-3"], [371, "index-4"], [371, "index-5"], [467, "index-1"], [467, "index-2"], [467, "index-3"], [468, "index-1"], [468, "index-10"], [468, "index-11"], [468, "index-12"], [468, "index-13"], [468, "index-14"], [468, "index-15"], [468, "index-16"], [468, "index-17"], [468, "index-18"], [468, "index-19"], [468, "index-2"], [468, "index-20"], [468, "index-21"], [468, "index-22"], [468, "index-23"], [468, "index-3"], [468, "index-4"], [468, "index-5"], [468, "index-6"], [468, "index-7"], [468, "index-8"], [468, "index-9"], [469, "index-1"], [469, "index-2"], [469, "index-3"], [470, "index-1"], [470, "index-10"], [470, "index-11"], [470, "index-12"], [470, "index-13"], [470, "index-14"], [470, "index-15"], [470, "index-2"], [470, "index-3"], [470, "index-4"], [470, "index-5"], [470, "index-6"], [470, "index-7"], [470, "index-8"], [470, "index-9"], [471, "index-1"], [471, "index-2"], [471, "index-3"], [472, "index-1"], [472, "index-10"], [472, "index-11"], [472, "index-12"], [472, "index-13"], [472, "index-14"], [472, "index-15"], [472, "index-2"], [472, "index-3"], [472, "index-4"], [472, "index-5"], [472, "index-6"], [472, "index-7"], [472, "index-8"], [472, "index-9"], [473, "index-1"], [473, "index-2"], [473, "index-3"], [474, "index-1"], [474, "index-10"], [474, "index-11"], [474, "index-12"], [474, "index-2"], [474, "index-3"], [474, "index-4"], [474, "index-5"], [474, "index-6"], [474, "index-7"], [474, "index-8"], [474, "index-9"], [475, "index-1"], [475, "index-2"], [475, "index-3"], [476, "index-1"], [476, "index-10"], [476, "index-2"], [476, "index-3"], [476, "index-4"], [476, "index-5"], [476, "index-6"], [476, "index-7"], [476, "index-8"], [476, "index-9"], [478, "index-1"], [478, "index-2"], [478, "index-3"], [479, "index-1"], [479, "index-10"], [479, "index-2"], [479, "index-3"], [479, "index-4"], [479, "index-5"], [479, "index-6"], [479, "index-7"], [479, "index-8"], [479, "index-9"], [480, "index-1"], [480, "index-2"], [480, "index-3"], [481, "index-1"], [481, "index-10"], [481, "index-11"], [481, "index-12"], [481, "index-13"], [481, "index-2"], [481, "index-3"], [481, "index-4"], [481, "index-5"], [481, "index-6"], [481, "index-7"], [481, "index-8"], [481, "index-9"], [482, "index-1"], [482, "index-2"], [482, "index-3"], [483, "index-1"], [483, "index-10"], [483, "index-11"], [483, "index-12"], [483, "index-13"], [483, "index-14"], [483, "index-15"], [483, "index-16"], [483, "index-2"], [483, "index-3"], [483, "index-4"], [483, "index-5"], [483, "index-6"], [483, "index-7"], [483, "index-8"], [483, "index-9"], [484, "index-1"], [484, "index-2"], [484, "index-3"], [485, "index-1"], [485, "index-10"], [485, "index-11"], [485, "index-12"], [485, "index-13"], [485, "index-14"], [485, "index-15"], [485, "index-16"], [485, "index-2"], [485, "index-3"], [485, "index-4"], [485, "index-5"], [485, "index-6"], [485, "index-7"], [485, "index-8"], [485, "index-9"], [486, "index-1"], [486, "index-2"], [486, "index-3"], [487, "index-1"], [487, "index-10"], [487, "index-11"], [487, "index-12"], [487, "index-13"], [487, "index-2"], [487, "index-3"], [487, "index-4"], [487, "index-5"], [487, "index-6"], [487, "index-7"], [487, "index-8"], [487, "index-9"], [488, "index-1"], [488, "index-2"], [488, "index-3"], [489, "index-1"], [489, "index-10"], [489, "index-11"], [489, "index-12"], [489, "index-13"], [489, "index-14"], [489, "index-15"], [489, "index-16"], [489, "index-2"], [489, "index-3"], [489, "index-4"], [489, "index-5"], [489, "index-6"], [489, "index-7"], [489, "index-8"], [489, "index-9"], [490, "index-1"], [490, "index-2"], [490, "index-3"], [491, "index-1"], [491, "index-10"], [491, "index-11"], [491, "index-12"], [491, "index-13"], [491, "index-14"], [491, "index-15"], [491, "index-16"], [491, "index-2"], [491, "index-3"], [491, "index-4"], [491, "index-5"], [491, "index-6"], [491, "index-7"], [491, "index-8"], [491, "index-9"], [492, "index-1"], [492, "index-2"], [492, "index-3"], [493, "index-1"], [493, "index-10"], [493, "index-11"], [493, "index-12"], [493, "index-2"], [493, "index-3"], [493, "index-4"], [493, "index-5"], [493, "index-6"], [493, "index-7"], [493, "index-8"], [493, "index-9"], [494, "index-1"], [494, "index-2"], [494, "index-3"], [495, "index-1"], [495, "index-10"], [495, "index-11"], [495, "index-2"], [495, "index-3"], [495, "index-4"], [495, "index-5"], [495, "index-6"], [495, "index-7"], [495, "index-8"], [495, "index-9"], [497, "index-1"], [497, "index-2"], [497, "index-3"], [497, "index-4"], [497, "index-5"], [497, "index-6"], [497, "index-7"], [497, "index-8"], [498, "index-1"], [498, "index-2"], [498, "index-3"], [502, "index-1"], [502, "index-2"], [502, "index-3"], [503, "index-1"], [503, "index-10"], [503, "index-11"], [503, "index-12"], [503, "index-13"], [503, "index-14"], [503, "index-15"], [503, "index-16"], [503, "index-2"], [503, "index-3"], [503, "index-4"], [503, "index-5"], [503, "index-6"], [503, "index-7"], [503, "index-8"], [503, "index-9"], [504, "index-1"], [504, "index-2"], [504, "index-3"], [505, "index-1"], [505, "index-10"], [505, "index-11"], [505, "index-12"], [505, "index-13"], [505, "index-2"], [505, "index-3"], [505, "index-4"], [505, "index-5"], [505, "index-6"], [505, "index-7"], [505, "index-8"], [505, "index-9"], [506, "index-1"], [506, "index-2"], [506, "index-3"], [507, "index-1"], [507, "index-10"], [507, "index-11"], [507, "index-12"], [507, "index-13"], [507, "index-14"], [507, "index-15"], [507, "index-16"], [507, "index-17"], [507, "index-18"], [507, "index-19"], [507, "index-2"], [507, "index-20"], [507, "index-21"], [507, "index-3"], [507, "index-4"], [507, "index-5"], [507, "index-6"], [507, "index-7"], [507, "index-8"], [507, "index-9"], [508, "index-1"], [508, "index-2"], [508, "index-3"], [509, "index-1"], [509, "index-10"], [509, "index-11"], [509, "index-12"], [509, "index-13"], [509, "index-14"], [509, "index-2"], [509, "index-3"], [509, "index-4"], [509, "index-5"], [509, "index-6"], [509, "index-7"], [509, "index-8"], [509, "index-9"], [510, "index-1"], [510, "index-10"], [510, "index-11"], [510, "index-12"], [510, "index-2"], [510, "index-3"], [510, "index-4"], [510, "index-5"], [510, "index-6"], [510, "index-7"], [510, "index-8"], [510, "index-9"], [512, "index-1"], [512, "index-2"], [512, "index-3"], [513, "index-1"], [513, "index-2"], [513, "index-3"], [513, "index-4"], [513, "index-5"], [513, "index-6"], [513, "index-7"], [514, "index-1"], [514, "index-2"], [514, "index-3"], [515, "index-1"], [515, "index-2"], [515, "index-3"], [515, "index-4"], [515, "index-5"], [515, "index-6"], [515, "index-7"], [515, "index-8"], [515, "index-9"], [516, "index-1"], [516, "index-2"], [516, "index-3"], [517, "index-1"], [517, "index-2"], [517, "index-3"], [517, "index-4"], [517, "index-5"], [517, "index-6"], [517, "index-7"], [517, "index-8"], [517, "index-9"], [518, "index-1"], [518, "index-2"], [518, "index-3"], [519, "index-1"], [519, "index-10"], [519, "index-11"], [519, "index-12"], [519, "index-13"], [519, "index-14"], [519, "index-15"], [519, "index-16"], [519, "index-17"], [519, "index-18"], [519, "index-2"], [519, "index-3"], [519, "index-4"], [519, "index-5"], [519, "index-6"], [519, "index-7"], [519, "index-8"], [519, "index-9"], [520, "index-1"], [520, "index-2"], [520, "index-3"], [521, "index-1"], [521, "index-10"], [521, "index-11"], [521, "index-12"], [521, "index-13"], [521, "index-14"], [521, "index-15"], [521, "index-2"], [521, "index-3"], [521, "index-4"], [521, "index-5"], [521, "index-6"], [521, "index-7"], [521, "index-8"], [521, "index-9"], [522, "index-1"], [522, "index-2"], [522, "index-3"], [523, "index-1"], [523, "index-10"], [523, "index-11"], [523, "index-12"], [523, "index-13"], [523, "index-14"], [523, "index-15"], [523, "index-16"], [523, "index-17"], [523, "index-18"], [523, "index-19"], [523, "index-2"], [523, "index-20"], [523, "index-21"], [523, "index-22"], [523, "index-23"], [523, "index-3"], [523, "index-4"], [523, "index-5"], [523, "index-6"], [523, "index-7"], [523, "index-8"], [523, "index-9"], [524, "index-1"], [524, "index-2"], [524, "index-3"], [525, "index-1"], [525, "index-10"], [525, "index-11"], [525, "index-12"], [525, "index-13"], [525, "index-14"], [525, "index-15"], [525, "index-2"], [525, "index-3"], [525, "index-4"], [525, "index-5"], [525, "index-6"], [525, "index-7"], [525, "index-8"], [525, "index-9"], [526, "index-1"], [526, "index-2"], [526, "index-3"], [527, "index-1"], [527, "index-10"], [527, "index-11"], [527, "index-12"], [527, "index-13"], [527, "index-14"], [527, "index-15"], [527, "index-16"], [527, "index-17"], [527, "index-18"], [527, "index-19"], [527, "index-2"], [527, "index-20"], [527, "index-21"], [527, "index-3"], [527, "index-4"], [527, "index-5"], [527, "index-6"], [527, "index-7"], [527, "index-8"], [527, "index-9"], [528, "index-1"], [528, "index-2"], [528, "index-3"], [529, "index-1"], [529, "index-10"], [529, "index-11"], [529, "index-12"], [529, "index-13"], [529, "index-14"], [529, "index-2"], [529, "index-3"], [529, "index-4"], [529, "index-5"], [529, "index-6"], [529, "index-7"], [529, "index-8"], [529, "index-9"], [530, "index-1"], [530, "index-2"], [530, "index-3"], [531, "index-1"], [531, "index-10"], [531, "index-11"], [531, "index-12"], [531, "index-2"], [531, "index-3"], [531, "index-4"], [531, "index-5"], [531, "index-6"], [531, "index-7"], [531, "index-8"], [531, "index-9"], [532, "index-1"], [532, "index-2"], [532, "index-3"], [533, "index-1"], [533, "index-10"], [533, "index-11"], [533, "index-12"], [533, "index-2"], [533, "index-3"], [533, "index-4"], [533, "index-5"], [533, "index-6"], [533, "index-7"], [533, "index-8"], [533, "index-9"], [534, "index-1"], [534, "index-2"], [534, "index-3"], [535, "index-1"], [535, "index-10"], [535, "index-11"], [535, "index-12"], [535, "index-13"], [535, "index-14"], [535, "index-15"], [535, "index-16"], [535, "index-17"], [535, "index-18"], [535, "index-19"], [535, "index-2"], [535, "index-20"], [535, "index-21"], [535, "index-22"], [535, "index-23"], [535, "index-24"], [535, "index-25"], [535, "index-26"], [535, "index-27"], [535, "index-28"], [535, "index-29"], [535, "index-3"], [535, "index-30"], [535, "index-31"], [535, "index-4"], [535, "index-5"], [535, "index-6"], [535, "index-7"], [535, "index-8"], [535, "index-9"], [536, "index-1"], [536, "index-2"], [536, "index-3"], [537, "index-1"], [537, "index-10"], [537, "index-11"], [537, "index-12"], [537, "index-13"], [537, "index-14"], [537, "index-15"], [537, "index-16"], [537, "index-17"], [537, "index-18"], [537, "index-19"], [537, "index-2"], [537, "index-20"], [537, "index-3"], [537, "index-4"], [537, "index-5"], [537, "index-6"], [537, "index-7"], [537, "index-8"], [537, "index-9"], [538, "index-1"], [538, "index-2"], [538, "index-3"], [539, "index-1"], [539, "index-2"], [539, "index-3"], [539, "index-4"], [539, "index-5"], [539, "index-6"], [539, "index-7"], [539, "index-8"], [541, "index-10"], [541, "index-11"], [541, "index-12"], [541, "index-13"], [541, "index-14"], [541, "index-15"], [541, "index-16"], [541, "index-17"], [541, "index-18"], [541, "index-3"], [541, "index-4"], [541, "index-5"], [541, "index-6"], [541, "index-7"], [541, "index-8"], [541, "index-9"], [543, "index-1"], [543, "index-10"], [543, "index-11"], [543, "index-12"], [543, "index-13"], [543, "index-14"], [543, "index-15"], [543, "index-16"], [543, "index-17"], [543, "index-18"], [543, "index-19"], [543, "index-2"], [543, "index-20"], [543, "index-21"], [543, "index-22"], [543, "index-23"], [543, "index-24"], [543, "index-25"], [543, "index-26"], [543, "index-27"], [543, "index-28"], [543, "index-29"], [543, "index-3"], [543, "index-30"], [543, "index-4"], [543, "index-5"], [543, "index-6"], [543, "index-7"], [543, "index-8"], [543, "index-9"], [544, "index-1"], [544, "index-2"], [544, "index-3"], [545, "index-1"], [545, "index-10"], [545, "index-11"], [545, "index-12"], [545, "index-13"], [545, "index-2"], [545, "index-3"], [545, "index-4"], [545, "index-5"], [545, "index-6"], [545, "index-7"], [545, "index-8"], [545, "index-9"], [546, "index-1"], [546, "index-2"], [546, "index-3"], [547, "index-1"], [547, "index-10"], [547, "index-11"], [547, "index-12"], [547, "index-13"], [547, "index-2"], [547, "index-3"], [547, "index-4"], [547, "index-5"], [547, "index-6"], [547, "index-7"], [547, "index-8"], [547, "index-9"], [549, "index-1"], [549, "index-10"], [549, "index-11"], [549, "index-12"], [549, "index-13"], [549, "index-14"], [549, "index-15"], [549, "index-16"], [549, "index-17"], [549, "index-18"], [549, "index-2"], [549, "index-3"], [549, "index-4"], [549, "index-5"], [549, "index-6"], [549, "index-7"], [549, "index-8"], [549, "index-9"], [550, "index-1"], [550, "index-2"], [550, "index-3"], [551, "index-1"], [551, "index-2"], [551, "index-3"], [551, "index-4"], [551, "index-5"], [551, "index-6"], [551, "index-7"], [552, "index-1"], [552, "index-2"], [552, "index-3"], [553, "index-1"], [553, "index-2"], [553, "index-3"], [553, "index-4"], [553, "index-5"], [553, "index-6"], [555, "index-1"], [555, "index-10"], [555, "index-11"], [555, "index-12"], [555, "index-13"], [555, "index-2"], [555, "index-3"], [555, "index-4"], [555, "index-5"], [555, "index-6"], [555, "index-7"], [555, "index-8"], [555, "index-9"], [557, "index-1"], [557, "index-10"], [557, "index-11"], [557, "index-12"], [557, "index-13"], [557, "index-14"], [557, "index-15"], [557, "index-16"], [557, "index-17"], [557, "index-18"], [557, "index-19"], [557, "index-2"], [557, "index-20"], [557, "index-21"], [557, "index-22"], [557, "index-23"], [557, "index-24"], [557, "index-25"], [557, "index-26"], [557, "index-27"], [557, "index-3"], [557, "index-4"], [557, "index-5"], [557, "index-6"], [557, "index-7"], [557, "index-8"], [557, "index-9"], [559, "index-1"], [559, "index-2"], [559, "index-3"], [559, "index-4"], [559, "index-5"], [560, "index-1"], [560, "index-10"], [560, "index-11"], [560, "index-12"], [560, "index-13"], [560, "index-14"], [560, "index-15"], [560, "index-16"], [560, "index-17"], [560, "index-18"], [560, "index-19"], [560, "index-2"], [560, "index-20"], [560, "index-21"], [560, "index-22"], [560, "index-23"], [560, "index-24"], [560, "index-25"], [560, "index-26"], [560, "index-27"], [560, "index-28"], [560, "index-29"], [560, "index-3"], [560, "index-30"], [560, "index-31"], [560, "index-32"], [560, "index-33"], [560, "index-34"], [560, "index-35"], [560, "index-36"], [560, "index-37"], [560, "index-38"], [560, "index-39"], [560, "index-4"], [560, "index-40"], [560, "index-41"], [560, "index-42"], [560, "index-5"], [560, "index-6"], [560, "index-7"], [560, "index-8"], [560, "index-9"], [561, "index-1"], [561, "index-2"], [561, "index-3"], [562, "index-1"], [562, "index-2"], [562, "index-3"], [562, "index-4"], [562, "index-5"], [562, "index-6"], [562, "index-7"], [562, "index-8"], [563, "index-1"], [563, "index-2"], [563, "index-3"], [563, "index-4"], [563, "index-5"], [563, "index-6"], [564, "index-1"], [564, "index-10"], [564, "index-11"], [564, "index-12"], [564, "index-2"], [564, "index-3"], [564, "index-4"], [564, "index-5"], [564, "index-6"], [564, "index-7"], [564, "index-8"], [564, "index-9"], [565, "index-1"], [565, "index-2"], [565, "index-3"], [566, "index-1"], [566, "index-2"], [566, "index-3"], [566, "index-4"], [566, "index-5"], [566, "index-6"], [567, "index-1"], [567, "index-2"], [567, "index-3"], [568, "index-1"], [568, "index-2"], [568, "index-3"], [568, "index-4"], [568, "index-5"], [568, "index-6"], [568, "index-7"], [569, "index-1"], [569, "index-10"], [569, "index-11"], [569, "index-12"], [569, "index-13"], [569, "index-14"], [569, "index-15"], [569, "index-16"], [569, "index-17"], [569, "index-18"], [569, "index-19"], [569, "index-2"], [569, "index-20"], [569, "index-21"], [569, "index-22"], [569, "index-23"], [569, "index-24"], [569, "index-25"], [569, "index-26"], [569, "index-3"], [569, "index-4"], [569, "index-5"], [569, "index-6"], [569, "index-7"], [569, "index-8"], [569, "index-9"], [570, "index-1"], [570, "index-2"], [570, "index-3"], [571, "index-1"], [571, "index-2"], [571, "index-3"], [571, "index-4"], [571, "index-5"], [571, "index-6"], [571, "index-7"], [571, "index-8"], [572, "index-1"], [572, "index-2"], [572, "index-3"], [573, "index-1"], [573, "index-2"], [573, "index-3"], [573, "index-4"], [573, "index-5"], [573, "index-6"], [573, "index-7"], [573, "index-8"], [574, "index-1"], [574, "index-2"], [574, "index-3"], [575, "index-1"], [575, "index-2"], [575, "index-3"], [575, "index-4"], [575, "index-5"], [575, "index-6"], [575, "index-7"], [575, "index-8"], [575, "index-9"], [576, "index-1"], [576, "index-2"], [576, "index-3"], [577, "index-1"], [577, "index-2"], [577, "index-3"], [577, "index-4"], [577, "index-5"], [577, "index-6"], [577, "index-7"], [577, "index-8"], [579, "index-1"], [579, "index-2"], [579, "index-3"], [579, "index-4"], [579, "index-5"], [579, "index-6"], [579, "index-7"], [579, "index-8"], [580, "index-1"], [580, "index-2"], [580, "index-3"], [581, "index-1"], [581, "index-10"], [581, "index-2"], [581, "index-3"], [581, "index-4"], [581, "index-5"], [581, "index-6"], [581, "index-7"], [581, "index-8"], [581, "index-9"], [582, "index-2"], [582, "index-3"], [582, "index-4"], [582, "index-5"], [585, "index-1"], [585, "index-2"], [585, "index-3"], [585, "index-4"], [586, "index-1"], [586, "index-10"], [586, "index-11"], [586, "index-12"], [586, "index-13"], [586, "index-14"], [586, "index-15"], [586, "index-16"], [586, "index-17"], [586, "index-18"], [586, "index-2"], [586, "index-3"], [586, "index-4"], [586, "index-5"], [586, "index-6"], [586, "index-7"], [586, "index-8"], [586, "index-9"], [587, "index-1"], [587, "index-2"], [587, "index-3"], [587, "index-4"], [588, "index-1"], [588, "index-2"], [588, "index-3"], [589, "index-1"], [589, "index-10"], [589, "index-11"], [589, "index-12"], [589, "index-13"], [589, "index-14"], [589, "index-15"], [589, "index-16"], [589, "index-17"], [589, "index-18"], [589, "index-19"], [589, "index-2"], [589, "index-20"], [589, "index-21"], [589, "index-22"], [589, "index-23"], [589, "index-24"], [589, "index-25"], [589, "index-3"], [589, "index-4"], [589, "index-5"], [589, "index-6"], [589, "index-7"], [589, "index-8"], [589, "index-9"], [590, "index-1"], [590, "index-2"], [590, "index-3"], [591, "index-1"], [591, "index-10"], [591, "index-11"], [591, "index-12"], [591, "index-13"], [591, "index-14"], [591, "index-15"], [591, "index-16"], [591, "index-17"], [591, "index-18"], [591, "index-2"], [591, "index-3"], [591, "index-4"], [591, "index-5"], [591, "index-6"], [591, "index-7"], [591, "index-8"], [591, "index-9"]], "compiled_partition": [[3, "index-1"], [3, "index-2"]], "dnnl::graph::compiled_partition": [[3, "index-0"]], "execute": [[3, "index-5"], [367, "index-4"], [368, "index-2"], [369, "index-17"], [370, "index-13"], [555, "index-9"], [563, "index-5"], [563, "index-6"], [586, "index-13"], [586, "index-14"], [587, "index-4"]], "get_inplace_ports": [[3, "index-4"]], "query_logical_tensor": [[3, "index-3"]], "add_op": [[4, "index-5"]], "dnnl::graph::graph": [[4, "index-0"]], "finalize": [[4, "index-6"], [586, "index-8"]], "get_fpmath_mode": [[4, "index-4"], [557, "index-5"], [557, "index-6"]], "get_partitions": [[4, "index-8"]], "graph": [[4, "index-1"], [4, "index-2"], [353, "index-0"]], "is_finalized": [[4, "index-7"]], "set_fpmath_mode": [[4, "index-3"], [557, "index-7"]], "dim": [[5, "index-1"], [541, "index-1"]], "dims": [[5, "index-2"], [224, "index-44"], [501, "index-3"], [541, "index-2"]], "dnnl::graph::logical_tensor": [[5, "index-0"]], "get_data_type": [[5, "index-14"], [543, "index-20"]], "get_dims": [[5, "index-12"], [543, "index-22"]], "get_id": [[5, "index-13"], [7, "index-5"]], "get_layout_id": [[5, "index-17"]], "get_layout_type": [[5, "index-16"]], "get_mem_size": [[5, "index-19"]], "get_property_type": [[5, "index-15"]], "get_strides": [[5, "index-18"], [481, "index-10"], [483, "index-13"], [485, "index-13"], [487, "index-10"], [489, "index-13"], [491, "index-13"], [543, "index-13"], [545, "index-9"], [547, "index-9"], [560, "index-4"]], "is_equal": [[5, "index-20"]], "logical_tensor": [[5, "index-10"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"]], "operator=": [[5, "index-11"], [510, "index-5"], [510, "index-6"]], "typedef": [[5, "index-1"], [5, "index-2"], [305, "index-1"], [305, "index-2"], [305, "index-3"], [305, "index-4"], [312, "index-1"], [312, "index-2"], [315, "index-1"], [323, "index-1"], [323, "index-2"], [323, "index-3"], [323, "index-4"], [329, "index-1"], [329, "index-2"], [329, "index-3"], [329, "index-4"], [335, "index-1"], [338, "index-1"], [338, "index-2"], [342, "index-1"], [342, "index-2"], [343, "index-1"], [343, "index-2"], [343, "index-3"], [343, "index-4"], [348, "index-1"], [348, "index-2"], [348, "index-3"], [348, "index-4"], [349, "index-1"], [349, "index-2"], [353, "index-1"], [353, "index-2"], [356, "index-1"], [356, "index-2"], [357, "index-1"], [357, "index-2"], [358, "index-1"], [358, "index-2"], [360, "index-1"], [360, "index-2"], [361, "index-1"], [361, "index-2"], [541, "index-1"], [541, "index-2"]], "add_input": [[6, "index-3"]], "add_inputs": [[6, "index-4"]], "add_output": [[6, "index-5"]], "add_outputs": [[6, "index-6"]], "dnnl::graph::op": [[6, "index-0"]], "op": [[6, "index-1"], [6, "index-2"], [357, "index-0"]], "set_attr": [[6, "index-10"], [6, "index-11"], [6, "index-12"], [6, "index-7"], [6, "index-8"], [6, "index-9"]], "compile": [[7, "index-6"]], "dnnl::graph::partition": [[7, "index-0"]], "get_engine_kind": [[7, "index-10"]], "get_input_ports": [[7, "index-8"]], "get_ops": [[7, "index-4"]], "get_ops_num": [[7, "index-3"]], "get_output_ports": [[7, "index-9"]], "is_supported": [[7, "index-7"]], "partition": [[7, "index-1"], [7, "index-2"], [358, "index-0"]], "dnnl::graph::tensor": [[8, "index-0"]], "get_data_handle": [[8, "index-4"], [541, "index-11"]], "get_engine": [[8, "index-6"], [541, "index-10"], [560, "index-1"], [579, "index-3"]], "get_logical_tensor": [[8, "index-7"]], "make_scalar_tensor": [[8, "index-8"]], "set_data_handle": [[8, "index-5"], [541, "index-12"]], "tensor": [[8, "index-1"], [8, "index-2"], [8, "index-3"], [361, "index-0"]], "simple_memory_pool_t": [[9, "index-0"]], "primitive attributes": [[10, "index-0"]], "page": [[10, "index-0"], [11, "index-0"], [12, "index-0"], [13, "index-0"], [14, "index-0"], [15, "index-0"], [16, "index-0"], [17, "index-0"], [18, "index-0"], [19, "index-0"], [20, "index-0"], [21, "index-0"], [22, "index-0"], [23, "index-0"], [24, "index-0"], [25, "index-0"], [26, "index-0"], [27, "index-0"], [28, "index-0"], [29, "index-0"], [30, "index-0"], [31, "index-0"], [32, "index-0"], [33, "index-0"], [34, "index-0"], [35, "index-0"], [36, "index-0"], [37, "index-0"], [38, "index-0"], [39, "index-0"], [40, "index-0"], [41, "index-0"], [42, "index-0"], [43, "index-0"], [44, "index-0"], [45, "index-0"], [46, "index-0"], [47, "index-0"], [48, "index-0"], [49, "index-0"], [50, "index-0"], [51, "index-0"], [52, "index-0"], [53, "index-0"], [54, "index-0"], [55, "index-0"], [56, "index-0"], [57, "index-0"], [58, "index-0"], [59, "index-0"], [60, "index-0"], [61, "index-0"], [62, "index-0"], [63, "index-0"], [64, "index-0"], [65, "index-0"], [66, "index-0"], [67, "index-0"], [68, "index-0"], [69, "index-0"], [70, "index-0"], [71, "index-0"], [72, "index-0"], [73, "index-0"], [74, "index-0"], [75, "index-0"], [76, "index-0"], [77, "index-0"], [78, "index-0"], [79, "index-0"], [80, "index-0"], [81, "index-0"], [82, "index-0"], [83, "index-0"], [84, "index-0"], [85, "index-0"], [86, "index-0"], [87, "index-0"], [88, "index-0"], [89, "index-0"], [90, "index-0"], [91, "index-0"], [92, "index-0"], [93, "index-0"], [94, "index-0"], [95, "index-0"], [96, "index-0"], [97, "index-0"], [98, "index-0"], [99, "index-0"], [100, "index-0"], [101, "index-0"], [102, "index-0"], [103, "index-0"], [104, "index-0"], [105, "index-0"], [106, "index-0"], [107, "index-0"], [108, "index-0"], [109, "index-0"], [110, "index-0"], [111, "index-0"], [112, "index-0"], [113, "index-0"], [114, "index-0"], [115, "index-0"], [116, "index-0"], [117, "index-0"], [118, "index-0"], [119, "index-0"], [120, "index-0"], [121, "index-0"], [122, "index-0"], [123, "index-0"], [124, "index-0"], [125, "index-0"], [126, "index-0"], [127, "index-0"], [128, "index-0"], [129, "index-0"], [130, "index-0"], [131, "index-0"], [132, "index-0"], [133, "index-0"], [134, "index-0"], [135, "index-0"], [136, "index-0"], [137, "index-0"], [138, "index-0"], [139, "index-0"], [140, "index-0"], [141, "index-0"], [142, "index-0"], [143, "index-0"], [144, "index-0"], [145, "index-0"], [146, "index-0"], [147, "index-0"], [148, "index-0"], [149, "index-0"], [150, "index-0"], [151, "index-0"], [152, "index-0"], [153, "index-0"], [154, "index-0"], [155, "index-0"], [156, "index-0"], [157, "index-0"], [158, "index-0"], [159, "index-0"], [160, "index-0"], [161, "index-0"], [162, "index-0"], [163, "index-0"], [164, "index-0"], [165, "index-0"], [166, "index-0"], [167, "index-0"], [168, "index-0"], [169, "index-0"], [170, "index-0"], [171, "index-0"], [172, "index-0"], [173, "index-0"], [174, "index-0"], [175, "index-0"], [176, "index-0"], [177, "index-0"], [178, "index-0"], [179, "index-0"], [180, "index-0"], [377, "index-0"], [379, "index-0"], [381, "index-0"], [383, "index-0"], [385, "index-0"], [386, "index-0"], [387, "index-0"], [388, "index-0"], [389, "index-0"], [390, "index-0"], [392, "index-0"], [394, "index-0"], [395, "index-0"], [396, "index-0"], [397, "index-0"], [398, "index-0"], [400, "index-0"], [401, "index-0"], [402, "index-0"], [403, "index-0"], [405, "index-0"], [406, "index-0"], [407, "index-0"], [409, "index-0"], [411, "index-0"], [412, "index-0"], [413, "index-0"], [414, "index-0"], [415, "index-0"], [416, "index-0"], [417, "index-0"], [418, "index-0"], [419, "index-0"], [421, "index-0"], [423, "index-0"], [425, "index-0"], [427, "index-0"], [429, "index-0"], [430, "index-0"], [432, "index-0"], [434, "index-0"], [436, "index-0"], [437, "index-0"], [438, "index-0"], [439, "index-0"], [441, "index-0"], [443, "index-0"], [445, "index-0"], [447, "index-0"], [449, "index-0"], [450, "index-0"], [452, "index-0"], [454, "index-0"], [456, "index-0"], [457, "index-0"], [458, "index-0"], [459, "index-0"], [461, "index-0"]], "primitive attributes: accumulation mode": [[11, "index-0"]], "primitive attributes: deterministic": [[12, "index-0"]], "primitive attributes: dropout": [[13, "index-0"]], "primitive attributes: floating-point math mode": [[14, "index-0"]], "primitive attributes: post-ops": [[15, "index-0"]], "primitive attributes: quantization": [[16, "index-0"]], "primitive attributes: rounding mode": [[17, "index-0"]], "primitive attributes: scratchpad": [[18, "index-0"]], "basic concepts": [[19, "index-0"], [37, "index-0"], [174, "index-0"]], "batch normalization": [[20, "index-0"], [306, "index-0"]], "benchmarking performance": [[21, "index-0"]], "binary": [[22, "index-0"], [218, "index-13"], [307, "index-0"], [475, "index-1"], [475, "index-2"], [475, "index-3"]], "build from source": [[23, "index-0"]], "use build options": [[24, "index-0"]], "api": [[25, "index-0"]], "concat": [[26, "index-0"], [80, "index-0"], [218, "index-4"], [310, "index-0"], [478, "index-1"], [478, "index-2"], [478, "index-3"]], "constant tensor cache": [[27, "index-0"], [351, "index-0"]], "naming conventions": [[28, "index-0"]], "convolution": [[29, "index-0"], [81, "index-0"], [218, "index-6"], [311, "index-0"]], "cpu dispatcher control": [[30, "index-0"]], "cpu isa hints": [[31, "index-0"]], "data types": [[32, "index-0"], [312, "index-0"]], "dpc++ interoperability": [[33, "index-0"]], "eltwise": [[34, "index-0"], [218, "index-8"], [314, "index-0"]], "examples": [[35, "index-0"]], "experimental features": [[36, "index-0"]], "binary fusion patterns": [[38, "index-0"]], "convolution fusion patterns": [[39, "index-0"]], "convtranspose fusion patterns": [[40, "index-0"]], "graph dump": [[41, "index-0"]], "gated multi-layer perceptron (gated-mlp)": [[42, "index-0"]], "grouped query attention (gqa)": [[43, "index-0"]], "interpolate fusion patterns": [[44, "index-0"]], "low precision": [[45, "index-0"]], "matmul fusion patterns": [[46, "index-0"]], "norm fusion patterns": [[47, "index-0"]], "pool fusion patterns": [[48, "index-0"]], "quantized convolution fusion patterns": [[49, "index-0"]], "quantized convtranspose fusion patterns": [[50, "index-0"]], "quantized matmul fusion patterns": [[51, "index-0"]], "reduction fusion patterns": [[52, "index-0"]], "scaled dot-product attention (sdpa)": [[53, "index-0"]], "sdpa with compressed key and value": [[54, "index-0"]], "softmax fusion patterns": [[55, "index-0"]], "unary fusion patterns": [[56, "index-0"]], "group normalization": [[57, "index-0"], [317, "index-0"]], "inference": [[58, "index-0"]], "inference and training aspects": [[59, "index-0"]], "int8 inference": [[60, "index-0"]], "inner product": [[61, "index-0"], [318, "index-0"]], "inspecting jit code": [[62, "index-0"]], "nuances of int8 computations": [[63, "index-0"]], "layer normalization": [[64, "index-0"], [320, "index-0"]], "link to the library": [[65, "index-0"]], "local response normalization (lrn)": [[66, "index-0"]], "matrix multiplication": [[67, "index-0"], [322, "index-0"]], "abs": [[68, "index-0"]], "absbackward": [[69, "index-0"]], "add": [[70, "index-0"]], "avgpool": [[71, "index-0"]], "avgpoolbackward": [[72, "index-0"]], "batchnormforwardtraining": [[73, "index-0"]], "batchnorminference": [[74, "index-0"]], "batchnormtrainingbackward": [[75, "index-0"]], "biasadd": [[76, "index-0"]], "biasaddbackward": [[77, "index-0"]], "clamp": [[78, "index-0"]], "clampbackward": [[79, "index-0"]], "convolutionbackwarddata": [[82, "index-0"]], "convolutionbackwardweights": [[83, "index-0"]], "convtranspose": [[84, "index-0"]], "convtransposebackwarddata": [[85, "index-0"]], "convtransposebackwardweights": [[86, "index-0"]], "dequantize": [[87, "index-0"]], "divide": [[88, "index-0"]], "dynamicdequantize": [[89, "index-0"]], "dynamicquantize": [[90, "index-0"]], "elu": [[91, "index-0"]], "elubackward": [[92, "index-0"]], "end": [[93, "index-0"], [201, "index-44"]], "exp": [[94, "index-0"]], "gelu": [[95, "index-0"]], "gelubackward": [[96, "index-0"]], "genindex": [[97, "index-0"]], "greaterequal": [[98, "index-0"]], "groupnorm": [[99, "index-0"]], "hardsigmoid": [[100, "index-0"]], "hardsigmoidbackward": [[101, "index-0"]], "hardswish": [[102, "index-0"]], "hardswishbackward": [[103, "index-0"]], "interpolate": [[104, "index-0"]], "interpolatebackward": [[105, "index-0"]], "layernorm": [[106, "index-0"]], "layernormbackward": [[107, "index-0"]], "leakyrelu": [[108, "index-0"]], "log": [[109, "index-0"]], "logsoftmax": [[110, "index-0"]], "logsoftmaxbackward": [[111, "index-0"]], "matmul": [[112, "index-0"], [218, "index-14"], [538, "index-1"], [538, "index-2"], [538, "index-3"]], "maximum": [[113, "index-0"]], "maxpool": [[114, "index-0"]], "maxpoolbackward": [[115, "index-0"]], "minimum": [[116, "index-0"]], "mish": [[117, "index-0"]], "mishbackward": [[118, "index-0"]], "multiply": [[119, "index-0"]], "pow": [[120, "index-0"]], "prelu": [[121, "index-0"], [158, "index-0"], [218, "index-18"], [326, "index-0"]], "prelubackward": [[122, "index-0"]], "quantize": [[123, "index-0"]], "reciprocal": [[124, "index-0"]], "reducel1": [[125, "index-0"]], "reducel2": [[126, "index-0"]], "reducemax": [[127, "index-0"]], "reducemean": [[128, "index-0"]], "reducemin": [[129, "index-0"]], "reduceprod": [[130, "index-0"]], "reducesum": [[131, "index-0"]], "relu": [[132, "index-0"]], "relubackward": [[133, "index-0"]], "reorder": [[134, "index-0"], [162, "index-0"], [218, "index-2"], [332, "index-0"], [563, "index-1"], [563, "index-2"], [563, "index-3"], [563, "index-4"]], "round": [[135, "index-0"]], "select": [[136, "index-0"]], "sigmoid": [[137, "index-0"]], "sigmoidbackward": [[138, "index-0"]], "softmax": [[139, "index-0"], [166, "index-0"], [218, "index-19"], [337, "index-0"]], "softmaxbackward": [[140, "index-0"]], "softplus": [[141, "index-0"]], "softplusbackward": [[142, "index-0"]], "sqrt": [[143, "index-0"]], "sqrtbackward": [[144, "index-0"]], "square": [[145, "index-0"]], "squareddifference": [[146, "index-0"]], "staticreshape": [[147, "index-0"]], "statictranspose": [[148, "index-0"]], "subtract": [[149, "index-0"]], "tanh": [[150, "index-0"]], "tanhbackward": [[151, "index-0"]], "typecast": [[152, "index-0"]], "wildcard": [[153, "index-0"]], "opencl interoperability": [[154, "index-0"]], "configuring onednn for benchmarking": [[155, "index-0"]], "persistent cache": [[156, "index-0"]], "pooling": [[157, "index-0"], [218, "index-16"], [325, "index-0"]], "primitive cache": [[159, "index-0"], [327, "index-0"]], "profiling onednn performance": [[160, "index-0"]], "reduction": [[161, "index-0"], [218, "index-17"], [331, "index-0"], [561, "index-1"], [561, "index-2"], [561, "index-3"]], "resampling": [[163, "index-0"], [218, "index-15"], [333, "index-0"]], "rnn": [[164, "index-0"], [218, "index-12"], [334, "index-0"]], "shuffle": [[165, "index-0"], [218, "index-3"], [336, "index-0"]], "sparse memory formats": [[167, "index-0"]], "sum": [[168, "index-0"], [218, "index-5"], [339, "index-0"], [580, "index-1"], [580, "index-2"], [580, "index-3"]], "system requirements": [[169, "index-0"]], "using onednn with threadpool-based threading": [[170, "index-0"]], "training": [[171, "index-0"]], "bfloat16 training": [[172, "index-0"]], "transitioning from intel mkl-dnn to onednn": [[173, "index-0"]], "batch-reduce general matrix multiplication": [[175, "index-0"]], "data transformation": [[176, "index-0"]], "understanding memory formats": [[177, "index-0"]], "verbose mode": [[178, "index-0"]], "verbose message catalogue": [[179, "index-0"]], "profiling with vtune(tm) profiler": [[180, "index-0"]], "api_kind": [[181, "index-0"]], "enum": [[181, "index-0"], [182, "index-0"], [183, "index-0"], [184, "index-0"], [185, "index-0"], [186, "index-0"], [187, "index-0"], [188, "index-0"], [189, "index-0"], [190, "index-0"], [191, "index-0"], [192, "index-0"], [193, "index-0"], [194, "index-0"], [195, "index-0"], [196, "index-0"], [197, "index-0"], [198, "index-0"], [199, "index-0"], [200, "index-0"], [201, "index-0"], [202, "index-0"], [203, "index-0"], [204, "index-0"], [205, "index-0"], [206, "index-0"], [207, "index-0"], [208, "index-0"], [209, "index-0"], [210, "index-0"], [211, "index-0"], [212, "index-0"], [213, "index-0"], [214, "index-0"], [215, "index-0"], [216, "index-0"], [217, "index-0"], [218, "index-0"], [219, "index-0"], [220, "index-0"], [221, "index-0"], [222, "index-0"], [223, "index-0"], [224, "index-0"], [225, "index-0"], [226, "index-0"], [227, "index-0"], [228, "index-0"], [229, "index-0"], [230, "index-0"], [231, "index-0"], [232, "index-0"], [233, "index-0"], [234, "index-0"], [235, "index-0"], [236, "index-0"], [237, "index-0"], [238, "index-0"], [239, "index-0"], [240, "index-0"], [241, "index-0"]], "accumulation_mode": [[182, "index-0"]], "any": [[182, "index-3"], [191, "index-1"], [195, "index-5"], [199, "index-2"], [210, "index-2"], [211, "index-2"]], "enumvalue": [[182, "index-1"], [182, "index-2"], [182, "index-3"], [182, "index-4"], [182, "index-5"], [182, "index-6"], [183, "index-1"], [183, "index-2"], [183, "index-3"], [183, "index-4"], [183, "index-5"], [183, "index-6"], [184, "index-1"], [184, "index-10"], [184, "index-11"], [184, "index-12"], [184, "index-13"], [184, "index-14"], [184, "index-15"], [184, "index-16"], [184, "index-17"], [184, "index-18"], [184, "index-19"], [184, "index-2"], [184, "index-20"], [184, "index-21"], [184, "index-22"], [184, "index-23"], [184, "index-24"], [184, "index-25"], [184, "index-26"], [184, "index-27"], [184, "index-28"], [184, "index-29"], [184, "index-3"], [184, "index-30"], [184, "index-31"], [184, "index-32"], [184, "index-33"], [184, "index-34"], [184, "index-35"], [184, "index-36"], [184, "index-37"], [184, "index-38"], [184, "index-39"], [184, "index-4"], [184, "index-40"], [184, "index-41"], [184, "index-42"], [184, "index-43"], [184, "index-44"], [184, "index-45"], [184, "index-46"], [184, "index-47"], [184, "index-48"], [184, "index-49"], [184, "index-5"], [184, "index-50"], [184, "index-51"], [184, "index-52"], [184, "index-53"], [184, "index-54"], [184, "index-55"], [184, "index-56"], [184, "index-57"], [184, "index-58"], [184, "index-59"], [184, "index-6"], [184, "index-60"], [184, "index-61"], [184, "index-62"], [184, "index-63"], [184, "index-64"], [184, "index-65"], [184, "index-66"], [184, "index-67"], [184, "index-68"], [184, "index-69"], [184, "index-7"], [184, "index-70"], [184, "index-8"], [184, "index-9"], [185, "index-1"], [185, "index-10"], [185, "index-11"], [185, "index-12"], [185, "index-13"], [185, "index-14"], [185, "index-15"], [185, "index-16"], [185, "index-17"], [185, "index-18"], [185, "index-19"], [185, "index-2"], [185, "index-20"], [185, "index-21"], [185, "index-22"], [185, "index-23"], [185, "index-24"], [185, "index-25"], [185, "index-26"], [185, "index-27"], [185, "index-28"], [185, "index-29"], [185, "index-3"], [185, "index-30"], [185, "index-31"], [185, "index-32"], [185, "index-33"], [185, "index-34"], [185, "index-35"], [185, "index-36"], [185, "index-37"], [185, "index-38"], [185, "index-39"], [185, "index-4"], [185, "index-40"], [185, "index-41"], [185, "index-42"], [185, "index-43"], [185, "index-44"], [185, "index-45"], [185, "index-46"], [185, "index-47"], [185, "index-48"], [185, "index-49"], [185, "index-5"], [185, "index-50"], [185, "index-51"], [185, "index-52"], [185, "index-53"], [185, "index-54"], [185, "index-55"], [185, "index-56"], [185, "index-57"], [185, "index-58"], [185, "index-59"], [185, "index-6"], [185, "index-60"], [185, "index-61"], [185, "index-62"], [185, "index-63"], [185, "index-64"], [185, "index-65"], [185, "index-66"], [185, "index-67"], [185, "index-68"], [185, "index-69"], [185, "index-7"], [185, "index-70"], [185, "index-71"], [185, "index-8"], [185, "index-9"], [186, "index-1"], [186, "index-10"], [186, "index-11"], [186, "index-12"], [186, "index-13"], [186, "index-14"], [186, "index-15"], [186, "index-16"], [186, "index-17"], [186, "index-2"], [186, "index-3"], [186, "index-4"], [186, "index-5"], [186, "index-6"], [186, "index-7"], [186, "index-8"], [186, "index-9"], [187, "index-1"], [187, "index-2"], [188, "index-1"], [188, "index-2"], [189, "index-1"], [189, "index-10"], [189, "index-11"], [189, "index-12"], [189, "index-13"], [189, "index-14"], [189, "index-15"], [189, "index-16"], [189, "index-17"], [189, "index-2"], [189, "index-3"], [189, "index-4"], [189, "index-5"], [189, "index-6"], [189, "index-7"], [189, "index-8"], [189, "index-9"], [190, "index-1"], [190, "index-10"], [190, "index-11"], [190, "index-12"], [190, "index-13"], [190, "index-14"], [190, "index-15"], [190, "index-16"], [190, "index-2"], [190, "index-3"], [190, "index-4"], [190, "index-5"], [190, "index-6"], [190, "index-7"], [190, "index-8"], [190, "index-9"], [191, "index-1"], [191, "index-2"], [191, "index-3"], [192, "index-1"], [192, "index-2"], [192, "index-3"], [193, "index-1"], [193, "index-2"], [193, "index-3"], [193, "index-4"], [193, "index-5"], [194, "index-1"], [194, "index-10"], [194, "index-100"], [194, "index-101"], [194, "index-102"], [194, "index-103"], [194, "index-104"], [194, "index-105"], [194, "index-106"], [194, "index-107"], [194, "index-108"], [194, "index-109"], [194, "index-11"], [194, "index-110"], [194, "index-111"], [194, "index-112"], [194, "index-113"], [194, "index-114"], [194, "index-115"], [194, "index-116"], [194, "index-117"], [194, "index-118"], [194, "index-119"], [194, "index-12"], [194, "index-120"], [194, "index-121"], [194, "index-122"], [194, "index-123"], [194, "index-124"], [194, "index-125"], [194, "index-126"], [194, "index-127"], [194, "index-128"], [194, "index-129"], [194, "index-13"], [194, "index-130"], [194, "index-131"], [194, "index-132"], [194, "index-133"], [194, "index-134"], [194, "index-135"], [194, "index-136"], [194, "index-137"], [194, "index-138"], [194, "index-14"], [194, "index-15"], [194, "index-16"], [194, "index-17"], [194, "index-18"], [194, "index-19"], [194, "index-2"], [194, "index-20"], [194, "index-21"], [194, "index-22"], [194, "index-23"], [194, "index-24"], [194, "index-25"], [194, "index-26"], [194, "index-27"], [194, "index-28"], [194, "index-29"], [194, "index-3"], [194, "index-30"], [194, "index-31"], [194, "index-32"], [194, "index-33"], [194, "index-34"], [194, "index-35"], [194, "index-36"], [194, "index-37"], [194, "index-38"], [194, "index-39"], [194, "index-4"], [194, "index-40"], [194, "index-41"], [194, "index-42"], [194, "index-43"], [194, "index-44"], [194, "index-45"], [194, "index-46"], [194, "index-47"], [194, "index-48"], [194, "index-49"], [194, "index-5"], [194, "index-50"], [194, "index-51"], [194, "index-52"], [194, "index-53"], [194, "index-54"], [194, "index-55"], [194, "index-56"], [194, "index-57"], [194, "index-58"], [194, "index-59"], [194, "index-6"], [194, "index-60"], [194, "index-61"], [194, "index-62"], [194, "index-63"], [194, "index-64"], [194, "index-65"], [194, "index-66"], [194, "index-67"], [194, "index-68"], [194, "index-69"], [194, "index-7"], [194, "index-70"], [194, "index-71"], [194, "index-72"], [194, "index-73"], [194, "index-74"], [194, "index-75"], [194, "index-76"], [194, "index-77"], [194, "index-78"], [194, "index-79"], [194, "index-8"], [194, "index-80"], [194, "index-81"], [194, "index-82"], [194, "index-83"], [194, "index-84"], [194, "index-85"], [194, "index-86"], [194, "index-87"], [194, "index-88"], [194, "index-89"], [194, "index-9"], [194, "index-90"], [194, "index-91"], [194, "index-92"], [194, "index-93"], [194, "index-94"], [194, "index-95"], [194, "index-96"], [194, "index-97"], [194, "index-98"], [194, "index-99"], [195, "index-1"], [195, "index-2"], [195, "index-3"], [195, "index-4"], [195, "index-5"], [196, "index-1"], [196, "index-2"], [196, "index-3"], [196, "index-4"], [196, "index-5"], [197, "index-1"], [197, "index-2"], [197, "index-3"], [197, "index-4"], [198, "index-1"], [198, "index-10"], [198, "index-11"], [198, "index-2"], [198, "index-3"], [198, "index-4"], [198, "index-5"], [198, "index-6"], [198, "index-7"], [198, "index-8"], [198, "index-9"], [199, "index-1"], [199, "index-2"], [199, "index-3"], [199, "index-4"], [200, "index-1"], [200, "index-2"], [200, "index-3"], [200, "index-4"], [201, "index-1"], [201, "index-10"], [201, "index-11"], [201, "index-12"], [201, "index-13"], [201, "index-14"], [201, "index-15"], [201, "index-16"], [201, "index-17"], [201, "index-18"], [201, "index-19"], [201, "index-2"], [201, "index-20"], [201, "index-21"], [201, "index-22"], [201, "index-23"], [201, "index-24"], [201, "index-25"], [201, "index-26"], [201, "index-27"], [201, "index-28"], [201, "index-29"], [201, "index-3"], [201, "index-30"], [201, "index-31"], [201, "index-32"], [201, "index-33"], [201, "index-34"], [201, "index-35"], [201, "index-36"], [201, "index-37"], [201, "index-38"], [201, "index-39"], [201, "index-4"], [201, "index-40"], [201, "index-41"], [201, "index-42"], [201, "index-43"], [201, "index-44"], [201, "index-5"], [201, "index-6"], [201, "index-7"], [201, "index-8"], [201, "index-9"], [202, "index-1"], [202, "index-10"], [202, "index-11"], [202, "index-12"], [202, "index-13"], [202, "index-14"], [202, "index-15"], [202, "index-16"], [202, "index-17"], [202, "index-18"], [202, "index-19"], [202, "index-2"], [202, "index-20"], [202, "index-21"], [202, "index-22"], [202, "index-23"], [202, "index-24"], [202, "index-25"], [202, "index-26"], [202, "index-27"], [202, "index-28"], [202, "index-29"], [202, "index-3"], [202, "index-30"], [202, "index-31"], [202, "index-32"], [202, "index-33"], [202, "index-34"], [202, "index-35"], [202, "index-36"], [202, "index-37"], [202, "index-38"], [202, "index-39"], [202, "index-4"], [202, "index-40"], [202, "index-41"], [202, "index-42"], [202, "index-43"], [202, "index-44"], [202, "index-5"], [202, "index-6"], [202, "index-7"], [202, "index-8"], [202, "index-9"], [205, "index-1"], [205, "index-2"], [206, "index-1"], [206, "index-2"], [207, "index-1"], [207, "index-10"], [207, "index-11"], [207, "index-2"], [207, "index-3"], [207, "index-4"], [207, "index-5"], [207, "index-6"], [207, "index-7"], [207, "index-8"], [207, "index-9"], [208, "index-1"], [208, "index-2"], [208, "index-3"], [208, "index-4"], [209, "index-1"], [209, "index-10"], [209, "index-11"], [209, "index-12"], [209, "index-13"], [209, "index-14"], [209, "index-2"], [209, "index-3"], [209, "index-4"], [209, "index-5"], [209, "index-6"], [209, "index-7"], [209, "index-8"], [209, "index-9"], [210, "index-1"], [210, "index-2"], [210, "index-3"], [210, "index-4"], [210, "index-5"], [211, "index-1"], [211, "index-10"], [211, "index-11"], [211, "index-12"], [211, "index-13"], [211, "index-14"], [211, "index-15"], [211, "index-16"], [211, "index-17"], [211, "index-18"], [211, "index-19"], [211, "index-2"], [211, "index-20"], [211, "index-21"], [211, "index-22"], [211, "index-23"], [211, "index-24"], [211, "index-25"], [211, "index-26"], [211, "index-27"], [211, "index-28"], [211, "index-29"], [211, "index-3"], [211, "index-30"], [211, "index-31"], [211, "index-32"], [211, "index-33"], [211, "index-34"], [211, "index-35"], [211, "index-36"], [211, "index-37"], [211, "index-38"], [211, "index-39"], [211, "index-4"], [211, "index-40"], [211, "index-41"], [211, "index-42"], [211, "index-43"], [211, "index-44"], [211, "index-45"], [211, "index-46"], [211, "index-47"], [211, "index-48"], [211, "index-49"], [211, "index-5"], [211, "index-50"], [211, "index-51"], [211, "index-52"], [211, "index-53"], [211, "index-54"], [211, "index-55"], [211, "index-56"], [211, "index-57"], [211, "index-58"], [211, "index-59"], [211, "index-6"], [211, "index-60"], [211, "index-61"], [211, "index-62"], [211, "index-63"], [211, "index-64"], [211, "index-65"], [211, "index-66"], [211, "index-67"], [211, "index-68"], [211, "index-69"], [211, "index-7"], [211, "index-70"], [211, "index-71"], [211, "index-72"], [211, "index-73"], [211, "index-74"], [211, "index-75"], [211, "index-76"], [211, "index-77"], [211, "index-78"], [211, "index-79"], [211, "index-8"], [211, "index-80"], [211, "index-81"], [211, "index-82"], [211, "index-83"], [211, "index-84"], [211, "index-85"], [211, "index-86"], [211, "index-87"], [211, "index-88"], [211, "index-89"], [211, "index-9"], [211, "index-90"], [211, "index-91"], [211, "index-92"], [211, "index-93"], [211, "index-94"], [211, "index-95"], [212, "index-1"], [212, "index-2"], [212, "index-3"], [212, "index-4"], [213, "index-1"], [213, "index-2"], [213, "index-3"], [213, "index-4"], [213, "index-5"], [213, "index-6"], [213, "index-7"], [214, "index-1"], [214, "index-2"], [214, "index-3"], [214, "index-4"], [214, "index-5"], [214, "index-6"], [214, "index-7"], [215, "index-1"], [215, "index-2"], [216, "index-1"], [216, "index-2"], [217, "index-1"], [217, "index-2"], [217, "index-3"], [217, "index-4"], [218, "index-1"], [218, "index-10"], [218, "index-11"], [218, "index-12"], [218, "index-13"], [218, "index-14"], [218, "index-15"], [218, "index-16"], [218, "index-17"], [218, "index-18"], [218, "index-19"], [218, "index-2"], [218, "index-20"], [218, "index-21"], [218, "index-3"], [218, "index-4"], [218, "index-5"], [218, "index-6"], [218, "index-7"], [218, "index-8"], [218, "index-9"], [219, "index-1"], [219, "index-10"], [219, "index-11"], [219, "index-12"], [219, "index-13"], [219, "index-14"], [219, "index-15"], [219, "index-16"], [219, "index-17"], [219, "index-18"], [219, "index-19"], [219, "index-2"], [219, "index-20"], [219, "index-21"], [219, "index-22"], [219, "index-3"], [219, "index-4"], [219, "index-5"], [219, "index-6"], [219, "index-7"], [219, "index-8"], [219, "index-9"], [220, "index-1"], [220, "index-2"], [221, "index-1"], [221, "index-2"], [222, "index-1"], [222, "index-2"], [222, "index-3"], [222, "index-4"], [222, "index-5"], [222, "index-6"], [222, "index-7"], [222, "index-8"], [223, "index-1"], [223, "index-2"], [223, "index-3"], [223, "index-4"], [223, "index-5"], [223, "index-6"], [223, "index-7"], [223, "index-8"], [224, "index-1"], [224, "index-10"], [224, "index-11"], [224, "index-12"], [224, "index-13"], [224, "index-14"], [224, "index-15"], [224, "index-16"], [224, "index-17"], [224, "index-18"], [224, "index-19"], [224, "index-2"], [224, "index-20"], [224, "index-21"], [224, "index-22"], [224, "index-23"], [224, "index-24"], [224, "index-25"], [224, "index-26"], [224, "index-27"], [224, "index-28"], [224, "index-29"], [224, "index-3"], [224, "index-30"], [224, "index-31"], [224, "index-32"], [224, "index-33"], [224, "index-34"], [224, "index-35"], [224, "index-36"], [224, "index-37"], [224, "index-38"], [224, "index-39"], [224, "index-4"], [224, "index-40"], [224, "index-41"], [224, "index-42"], [224, "index-43"], [224, "index-44"], [224, "index-45"], [224, "index-46"], [224, "index-47"], [224, "index-48"], [224, "index-49"], [224, "index-5"], [224, "index-50"], [224, "index-51"], [224, "index-52"], [224, "index-53"], [224, "index-54"], [224, "index-55"], [224, "index-6"], [224, "index-7"], [224, "index-8"], [224, "index-9"], [225, "index-1"], [225, "index-10"], [225, "index-11"], [225, "index-12"], [225, "index-13"], [225, "index-14"], [225, "index-15"], [225, "index-16"], [225, "index-17"], [225, "index-18"], [225, "index-19"], [225, "index-2"], [225, "index-20"], [225, "index-21"], [225, "index-22"], [225, "index-23"], [225, "index-24"], [225, "index-25"], [225, "index-26"], [225, "index-27"], [225, "index-28"], [225, "index-29"], [225, "index-3"], [225, "index-30"], [225, "index-31"], [225, "index-32"], [225, "index-33"], [225, "index-34"], [225, "index-35"], [225, "index-36"], [225, "index-37"], [225, "index-38"], [225, "index-39"], [225, "index-4"], [225, "index-40"], [225, "index-41"], [225, "index-42"], [225, "index-43"], [225, "index-44"], [225, "index-45"], [225, "index-46"], [225, "index-47"], [225, "index-48"], [225, "index-49"], [225, "index-5"], [225, "index-50"], [225, "index-51"], [225, "index-52"], [225, "index-53"], [225, "index-54"], [225, "index-55"], [225, "index-56"], [225, "index-6"], [225, "index-7"], [225, "index-8"], [225, "index-9"], [226, "index-1"], [226, "index-2"], [226, "index-3"], [226, "index-4"], [226, "index-5"], [227, "index-1"], [227, "index-2"], [227, "index-3"], [227, "index-4"], [227, "index-5"], [228, "index-1"], [228, "index-2"], [229, "index-1"], [229, "index-2"], [230, "index-1"], [230, "index-2"], [231, "index-1"], [231, "index-2"], [232, "index-1"], [232, "index-2"], [233, "index-1"], [233, "index-2"], [234, "index-1"], [234, "index-2"], [234, "index-3"], [234, "index-4"], [235, "index-1"], [235, "index-2"], [235, "index-3"], [235, "index-4"], [235, "index-5"], [235, "index-6"], [235, "index-7"], [236, "index-1"], [236, "index-10"], [236, "index-11"], [236, "index-2"], [236, "index-3"], [236, "index-4"], [236, "index-5"], [236, "index-6"], [236, "index-7"], [236, "index-8"], [236, "index-9"], [237, "index-1"], [237, "index-2"], [237, "index-3"], [238, "index-1"], [238, "index-2"], [239, "index-1"], [239, "index-2"], [240, "index-1"], [240, "index-2"], [241, "index-1"], [241, "index-2"], [241, "index-3"], [241, "index-4"]], "f16": [[182, "index-6"], [195, "index-3"], [198, "index-1"], [209, "index-7"]], "f32": [[182, "index-5"], [198, "index-3"], [209, "index-9"]], "relaxed": [[182, "index-2"]], "s32": [[182, "index-4"], [198, "index-4"], [209, "index-10"]], "strict": [[182, "index-1"], [195, "index-1"]], "dnnl_accumulation_mode_any": [[183, "index-3"]], "dnnl_accumulation_mode_f16": [[183, "index-6"]], "dnnl_accumulation_mode_f32": [[183, "index-5"]], "dnnl_accumulation_mode_relaxed": [[183, "index-2"]], "dnnl_accumulation_mode_s32": [[183, "index-4"]], "dnnl_accumulation_mode_strict": [[183, "index-1"]], "dnnl_accumulation_mode_t": [[183, "index-0"]], "dnnl_alg_kind_t": [[184, "index-0"]], "dnnl_binary_add": [[184, "index-45"]], "dnnl_binary_div": [[184, "index-49"]], "dnnl_binary_eq": [[184, "index-55"]], "dnnl_binary_ge": [[184, "index-51"]], "dnnl_binary_gt": [[184, "index-52"]], "dnnl_binary_le": [[184, "index-53"]], "dnnl_binary_lt": [[184, "index-54"]], "dnnl_binary_max": [[184, "index-47"]], "dnnl_binary_min": [[184, "index-48"]], "dnnl_binary_mul": [[184, "index-46"]], "dnnl_binary_ne": [[184, "index-56"]], "dnnl_binary_select": [[184, "index-57"]], "dnnl_binary_sub": [[184, "index-50"]], "dnnl_convolution_auto": [[184, "index-3"]], "dnnl_convolution_direct": [[184, "index-1"]], "dnnl_convolution_winograd": [[184, "index-2"]], "dnnl_deconvolution_direct": [[184, "index-4"]], "dnnl_deconvolution_winograd": [[184, "index-5"]], "dnnl_eltwise_abs": [[184, "index-10"]], "dnnl_eltwise_clip": [[184, "index-20"]], "dnnl_eltwise_clip_v2": [[184, "index-21"]], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [[184, "index-33"]], "dnnl_eltwise_elu": [[184, "index-8"]], "dnnl_eltwise_elu_use_dst_for_bwd": [[184, "index-29"]], "dnnl_eltwise_exp": [[184, "index-16"]], "dnnl_eltwise_exp_use_dst_for_bwd": [[184, "index-32"]], "dnnl_eltwise_gelu_erf": [[184, "index-23"]], "dnnl_eltwise_gelu_tanh": [[184, "index-17"]], "dnnl_eltwise_hardsigmoid": [[184, "index-14"]], "dnnl_eltwise_hardswish": [[184, "index-26"]], "dnnl_eltwise_linear": [[184, "index-12"]], "dnnl_eltwise_log": [[184, "index-19"]], "dnnl_eltwise_logistic": [[184, "index-15"]], "dnnl_eltwise_logistic_use_dst_for_bwd": [[184, "index-31"]], "dnnl_eltwise_mish": [[184, "index-25"]], "dnnl_eltwise_pow": [[184, "index-22"]], "dnnl_eltwise_relu": [[184, "index-6"]], "dnnl_eltwise_relu_use_dst_for_bwd": [[184, "index-27"]], "dnnl_eltwise_round": [[184, "index-24"]], "dnnl_eltwise_soft_relu": [[184, "index-13"]], "dnnl_eltwise_sqrt": [[184, "index-11"]], "dnnl_eltwise_sqrt_use_dst_for_bwd": [[184, "index-30"]], "dnnl_eltwise_square": [[184, "index-9"]], "dnnl_eltwise_swish": [[184, "index-18"]], "dnnl_eltwise_tanh": [[184, "index-7"]], "dnnl_eltwise_tanh_use_dst_for_bwd": [[184, "index-28"]], "dnnl_lbr_augru": [[184, "index-44"]], "dnnl_lbr_gru": [[184, "index-42"]], "dnnl_lrn_across_channels": [[184, "index-37"]], "dnnl_lrn_within_channel": [[184, "index-38"]], "dnnl_pooling_avg_exclude_padding": [[184, "index-36"]], "dnnl_pooling_avg_include_padding": [[184, "index-35"]], "dnnl_pooling_max": [[184, "index-34"]], "dnnl_reduction_max": [[184, "index-60"]], "dnnl_reduction_mean": [[184, "index-64"]], "dnnl_reduction_min": [[184, "index-61"]], "dnnl_reduction_mul": [[184, "index-63"]], "dnnl_reduction_norm_lp_max": [[184, "index-65"]], "dnnl_reduction_norm_lp_power_p_max": [[184, "index-67"]], "dnnl_reduction_norm_lp_power_p_sum": [[184, "index-68"]], "dnnl_reduction_norm_lp_sum": [[184, "index-66"]], "dnnl_reduction_sum": [[184, "index-62"]], "dnnl_resampling_linear": [[184, "index-59"]], "dnnl_resampling_nearest": [[184, "index-58"]], "dnnl_softmax_accurate": [[184, "index-69"]], "dnnl_softmax_log": [[184, "index-70"]], "dnnl_vanilla_augru": [[184, "index-43"]], "dnnl_vanilla_gru": [[184, "index-41"]], "dnnl_vanilla_lstm": [[184, "index-40"]], "dnnl_vanilla_rnn": [[184, "index-39"]], "algorithm": [[185, "index-0"]], "binary_add": [[185, "index-46"]], "binary_div": [[185, "index-50"]], "binary_eq": [[185, "index-56"]], "binary_ge": [[185, "index-52"]], "binary_gt": [[185, "index-53"]], "binary_le": [[185, "index-54"]], "binary_lt": [[185, "index-55"]], "binary_max": [[185, "index-48"]], "binary_min": [[185, "index-49"]], "binary_mul": [[185, "index-47"]], "binary_ne": [[185, "index-57"]], "binary_select": [[185, "index-58"]], "binary_sub": [[185, "index-51"]], "convolution_auto": [[185, "index-2"]], "convolution_direct": [[185, "index-3"]], "convolution_winograd": [[185, "index-4"]], "deconvolution_direct": [[185, "index-5"]], "deconvolution_winograd": [[185, "index-6"]], "eltwise_abs": [[185, "index-11"]], "eltwise_clip": [[185, "index-22"]], "eltwise_clip_v2": [[185, "index-23"]], "eltwise_clip_v2_use_dst_for_bwd": [[185, "index-34"]], "eltwise_elu": [[185, "index-9"]], "eltwise_elu_use_dst_for_bwd": [[185, "index-30"]], "eltwise_exp": [[185, "index-18"]], "eltwise_exp_use_dst_for_bwd": [[185, "index-33"]], "eltwise_gelu_erf": [[185, "index-20"]], "eltwise_gelu_tanh": [[185, "index-19"]], "eltwise_hardsigmoid": [[185, "index-27"]], "eltwise_hardswish": [[185, "index-26"]], "eltwise_linear": [[185, "index-14"]], "eltwise_log": [[185, "index-21"]], "eltwise_logistic": [[185, "index-17"]], "eltwise_logistic_use_dst_for_bwd": [[185, "index-32"]], "eltwise_mish": [[185, "index-16"]], "eltwise_pow": [[185, "index-24"]], "eltwise_relu": [[185, "index-7"]], "eltwise_relu_use_dst_for_bwd": [[185, "index-28"]], "eltwise_round": [[185, "index-25"]], "eltwise_soft_relu": [[185, "index-15"]], "eltwise_sqrt": [[185, "index-12"]], "eltwise_sqrt_use_dst_for_bwd": [[185, "index-31"]], "eltwise_square": [[185, "index-10"]], "eltwise_swish": [[185, "index-13"]], "eltwise_tanh": [[185, "index-8"]], "eltwise_tanh_use_dst_for_bwd": [[185, "index-29"]], "lbr_augru": [[185, "index-45"]], "lbr_gru": [[185, "index-43"]], "lrn_across_channels": [[185, "index-35"]], "lrn_within_channel": [[185, "index-36"]], "pooling_avg_exclude_padding": [[185, "index-39"]], "pooling_avg_include_padding": [[185, "index-38"]], "pooling_max": [[185, "index-37"]], "reduction_max": [[185, "index-61"]], "reduction_mean": [[185, "index-65"]], "reduction_min": [[185, "index-62"]], "reduction_mul": [[185, "index-64"]], "reduction_norm_lp_max": [[185, "index-66"]], "reduction_norm_lp_power_p_max": [[185, "index-68"]], "reduction_norm_lp_power_p_sum": [[185, "index-69"]], "reduction_norm_lp_sum": [[185, "index-67"]], "reduction_sum": [[185, "index-63"]], "resampling_linear": [[185, "index-60"]], "resampling_nearest": [[185, "index-59"]], "softmax_accurate": [[185, "index-70"]], "softmax_log": [[185, "index-71"]], "undef": [[185, "index-1"], [199, "index-1"], [200, "index-1"], [201, "index-1"], [209, "index-1"], [210, "index-1"], [211, "index-1"], [212, "index-1"], [218, "index-1"], [220, "index-1"], [222, "index-1"], [224, "index-1"], [226, "index-1"], [228, "index-1"], [241, "index-1"]], "vanilla_augru": [[185, "index-44"]], "vanilla_gru": [[185, "index-42"]], "vanilla_lstm": [[185, "index-41"]], "vanilla_rnn": [[185, "index-40"]], "avx": [[186, "index-3"]], "avx10_1_512": [[186, "index-10"]], "avx10_1_512_amx": [[186, "index-12"]], "avx10_1_512_amx_fp16": [[186, "index-14"]], "avx10_2_512": [[186, "index-16"]], "avx10_2_512_amx_2": [[186, "index-17"]], "avx2": [[186, "index-4"]], "avx2_vnni": [[186, "index-5"]], "avx2_vnni_2": [[186, "index-6"]], "avx512_core": [[186, "index-7"]], "avx512_core_amx": [[186, "index-13"]], "avx512_core_amx_fp16": [[186, "index-15"]], "avx512_core_bf16": [[186, "index-9"]], "avx512_core_fp16": [[186, "index-11"]], "avx512_core_vnni": [[186, "index-8"]], "cpu_isa": [[186, "index-0"]], "isa_default": [[186, "index-1"]], "sse41": [[186, "index-2"]], "cpu_isa_hints": [[187, "index-0"]], "no_hints": [[187, "index-1"]], "prefer_ymm": [[187, "index-2"]], "dnnl_cpu_isa_hints_t": [[188, "index-0"]], "dnnl_cpu_isa_no_hints": [[188, "index-1"]], "dnnl_cpu_isa_prefer_ymm": [[188, "index-2"]], "dnnl_cpu_isa_avx": [[189, "index-3"]], "dnnl_cpu_isa_avx10_1_512": [[189, "index-10"]], "dnnl_cpu_isa_avx10_1_512_amx": [[189, "index-12"]], "dnnl_cpu_isa_avx10_1_512_amx_fp16": [[189, "index-14"]], "dnnl_cpu_isa_avx10_2_512": [[189, "index-16"]], "dnnl_cpu_isa_avx10_2_512_amx_2": [[189, "index-17"]], "dnnl_cpu_isa_avx2": [[189, "index-4"]], "dnnl_cpu_isa_avx2_vnni": [[189, "index-5"]], "dnnl_cpu_isa_avx2_vnni_2": [[189, "index-6"]], "dnnl_cpu_isa_avx512_core": [[189, "index-7"]], "dnnl_cpu_isa_avx512_core_amx": [[189, "index-13"]], "dnnl_cpu_isa_avx512_core_amx_fp16": [[189, "index-15"]], "dnnl_cpu_isa_avx512_core_bf16": [[189, "index-9"]], "dnnl_cpu_isa_avx512_core_fp16": [[189, "index-11"]], "dnnl_cpu_isa_avx512_core_vnni": [[189, "index-8"]], "dnnl_cpu_isa_default": [[189, "index-1"]], "dnnl_cpu_isa_sse41": [[189, "index-2"]], "dnnl_cpu_isa_t": [[189, "index-0"]], "dnnl_bf16": [[190, "index-3"]], "dnnl_boolean": [[190, "index-9"]], "dnnl_data_type_t": [[190, "index-0"]], "dnnl_data_type_undef": [[190, "index-1"]], "dnnl_e8m0": [[190, "index-14"]], "dnnl_f16": [[190, "index-2"]], "dnnl_f32": [[190, "index-4"]], "dnnl_f4_e2m1": [[190, "index-15"]], "dnnl_f4_e3m0": [[190, "index-16"]], "dnnl_f64": [[190, "index-8"]], "dnnl_f8_e4m3": [[190, "index-11"]], "dnnl_f8_e5m2": [[190, "index-10"]], "dnnl_s32": [[190, "index-5"]], "dnnl_s4": [[190, "index-12"]], "dnnl_s8": [[190, "index-6"]], "dnnl_u4": [[190, "index-13"]], "dnnl_u8": [[190, "index-7"]], "cpu": [[191, "index-2"]], "gpu": [[191, "index-3"]], "kind": [[191, "index-0"], [203, "index-0"], [218, "index-0"], [549, "index-4"]], "dnnl_any_engine": [[192, "index-1"]], "dnnl_cpu": [[192, "index-2"]], "dnnl_engine_kind_t": [[192, "index-0"]], "dnnl_gpu": [[192, "index-3"]], "dnnl_blocked": [[193, "index-3"]], "dnnl_format_kind_any": [[193, "index-2"]], "dnnl_format_kind_opaque": [[193, "index-4"]], "dnnl_format_kind_sparse": [[193, "index-5"]], "dnnl_format_kind_t": [[193, "index-0"]], "dnnl_format_kind_undef": [[193, "index-1"]], "dnnl_abcd8b8a": [[194, "index-61"]], "dnnl_abcde2b8a4b": [[194, "index-64"]], "dnnl_abcde4b16a4b": [[194, "index-63"]], "dnnl_a": [[194, "index-3"]], "dnnl_abcd2b4c2b": [[194, "index-62"]], "dnnl_abcde2b4c2b": [[194, "index-69"]], "dnnl_abcdef2b4c2b": [[194, "index-72"]], "dnnl_abcdef2c8b4c": [[194, "index-71"]], "dnnl_abc16b": [[194, "index-53"]], "dnnl_abc32b": [[194, "index-54"]], "dnnl_abc4b": [[194, "index-55"]], "dnnl_abc8b": [[194, "index-56"]], "dnnl_abcd16b": [[194, "index-57"]], "dnnl_abcd32b": [[194, "index-58"]], "dnnl_abcd4b": [[194, "index-59"]], "dnnl_abcd8b": [[194, "index-60"]], "dnnl_abcde16b": [[194, "index-65"]], "dnnl_abcde32b": [[194, "index-66"]], "dnnl_abcde4b": [[194, "index-67"]], "dnnl_abcde8b": [[194, "index-68"]], "dnnl_abcdef16b": [[194, "index-70"]], "dnnl_abcdef4b": [[194, "index-73"]], "dnnl_ab": [[194, "index-4"]], "dnnl_abc": [[194, "index-5"]], "dnnl_abcd": [[194, "index-6"]], "dnnl_abcde": [[194, "index-7"]], "dnnl_abcdef": [[194, "index-8"]], "dnnl_abcdefg": [[194, "index-9"]], "dnnl_abcdefgh": [[194, "index-10"]], "dnnl_abcdefghi": [[194, "index-11"]], "dnnl_abcdefghij": [[194, "index-12"]], "dnnl_abcdefghijk": [[194, "index-13"]], "dnnl_abcdefghijkl": [[194, "index-14"]], "dnnl_abcdefghijlk": [[194, "index-52"]], "dnnl_abcdefghikj": [[194, "index-51"]], "dnnl_abcdefghji": [[194, "index-50"]], "dnnl_abcdefgih": [[194, "index-49"]], "dnnl_abcdefhg": [[194, "index-48"]], "dnnl_abcdegf": [[194, "index-47"]], "dnnl_abcdfe": [[194, "index-41"]], "dnnl_abced": [[194, "index-31"]], "dnnl_abdc": [[194, "index-21"]], "dnnl_abdec": [[194, "index-32"]], "dnnl_abdefc": [[194, "index-42"]], "dnnl_abdfce": [[194, "index-43"]], "dnnl_acb": [[194, "index-16"]], "dnnl_acbd": [[194, "index-22"]], "dnnl_acbde": [[194, "index-33"]], "dnnl_acbdef": [[194, "index-44"]], "dnnl_acdb": [[194, "index-23"]], "dnnl_acdeb": [[194, "index-34"]], "dnnl_adbc": [[194, "index-24"]], "dnnl_adcb": [[194, "index-25"]], "dnnl_adecb": [[194, "index-35"]], "dnnl_adefcb": [[194, "index-45"]], "dnnl_ba": [[194, "index-15"]], "dnnl_bac": [[194, "index-17"]], "dnnl_bacd": [[194, "index-26"]], "dnnl_bacde": [[194, "index-36"]], "dnnl_bca": [[194, "index-18"]], "dnnl_bcda": [[194, "index-27"]], "dnnl_bcdea": [[194, "index-37"]], "dnnl_cab": [[194, "index-19"]], "dnnl_cba": [[194, "index-20"]], "dnnl_cdab": [[194, "index-28"]], "dnnl_cdba": [[194, "index-29"]], "dnnl_cdeab": [[194, "index-38"]], "dnnl_cdeba": [[194, "index-39"]], "dnnl_chwn": [[194, "index-84"]], "dnnl_cn": [[194, "index-77"]], "dnnl_dcab": [[194, "index-30"]], "dnnl_decab": [[194, "index-40"]], "dnnl_defcab": [[194, "index-46"]], "dnnl_dhwigo": [[194, "index-116"]], "dnnl_dhwio": [[194, "index-102"]], "dnnl_dhwoi": [[194, "index-103"]], "dnnl_format_tag_any": [[194, "index-2"]], "dnnl_format_tag_last": [[194, "index-74"]], "dnnl_format_tag_t": [[194, "index-0"]], "dnnl_format_tag_undef": [[194, "index-1"]], "dnnl_giodhw": [[194, "index-115"]], "dnnl_giohw": [[194, "index-112"]], "dnnl_godhwi": [[194, "index-114"]], "dnnl_gohwi": [[194, "index-110"]], "dnnl_goidhw": [[194, "index-113"]], "dnnl_goihw": [[194, "index-109"]], "dnnl_goiw": [[194, "index-106"]], "dnnl_gowi": [[194, "index-107"]], "dnnl_hwigo": [[194, "index-111"]], "dnnl_hwio": [[194, "index-95"]], "dnnl_hwoi": [[194, "index-96"]], "dnnl_idhwo": [[194, "index-105"]], "dnnl_ihwo": [[194, "index-98"]], "dnnl_io": [[194, "index-88"]], "dnnl_iodhw": [[194, "index-101"]], "dnnl_iohw": [[194, "index-99"]], "dnnl_iwo": [[194, "index-93"]], "dnnl_ldoi16o": [[194, "index-125"]], "dnnl_ldgoi16o": [[194, "index-126"]], "dnnl_ldgo": [[194, "index-124"]], "dnnl_ldgoi": [[194, "index-121"]], "dnnl_ldigo": [[194, "index-120"]], "dnnl_ldio": [[194, "index-122"]], "dnnl_ldnc": [[194, "index-119"]], "dnnl_ldoi": [[194, "index-123"]], "dnnl_ncdhw16c": [[194, "index-128"]], "dnnl_ncdhw32c": [[194, "index-127"]], "dnnl_ncdhw4c": [[194, "index-129"]], "dnnl_ncdhw8c": [[194, "index-130"]], "dnnl_nchw16c": [[194, "index-132"]], "dnnl_nchw32c": [[194, "index-131"]], "dnnl_nchw4c": [[194, "index-133"]], "dnnl_nchw8c": [[194, "index-134"]], "dnnl_ncw16c": [[194, "index-136"]], "dnnl_ncw32c": [[194, "index-135"]], "dnnl_ncw4c": [[194, "index-137"]], "dnnl_ncw8c": [[194, "index-138"]], "dnnl_nc": [[194, "index-76"]], "dnnl_ncdhw": [[194, "index-85"]], "dnnl_nchw": [[194, "index-82"]], "dnnl_ncw": [[194, "index-80"]], "dnnl_ndhwc": [[194, "index-86"]], "dnnl_nhwc": [[194, "index-83"]], "dnnl_nt": [[194, "index-79"]], "dnnl_ntc": [[194, "index-118"]], "dnnl_nwc": [[194, "index-81"]], "dnnl_odhwi": [[194, "index-104"]], "dnnl_ohwi": [[194, "index-97"]], "dnnl_oi": [[194, "index-87"]], "dnnl_oidhw": [[194, "index-100"]], "dnnl_oihw": [[194, "index-94"]], "dnnl_oiw": [[194, "index-89"]], "dnnl_owi": [[194, "index-90"]], "dnnl_tn": [[194, "index-78"]], "dnnl_tnc": [[194, "index-117"]], "dnnl_wigo": [[194, "index-108"]], "dnnl_wio": [[194, "index-91"]], "dnnl_woi": [[194, "index-92"]], "dnnl_x": [[194, "index-75"]], "bf16": [[195, "index-2"], [198, "index-2"], [209, "index-8"]], "fpmath_mode": [[195, "index-0"]], "tf32": [[195, "index-4"]], "dnnl_fpmath_mode_any": [[196, "index-4"]], "dnnl_fpmath_mode_bf16": [[196, "index-2"]], "dnnl_fpmath_mode_f16": [[196, "index-3"]], "dnnl_fpmath_mode_strict": [[196, "index-1"]], "dnnl_fpmath_mode_t": [[196, "index-0"]], "dnnl_fpmath_mode_tf32": [[196, "index-5"]], "dnnl_graph_layout_type_any": [[197, "index-2"]], "dnnl_graph_layout_type_opaque": [[197, "index-4"]], "dnnl_graph_layout_type_strided": [[197, "index-3"]], "dnnl_graph_layout_type_t": [[197, "index-0"]], "dnnl_graph_layout_type_undef": [[197, "index-1"]], "boolean": [[198, "index-7"]], "data_type": [[198, "index-0"], [209, "index-0"], [224, "index-45"], [501, "index-4"]], "f8_e4m3": [[198, "index-9"], [209, "index-6"]], "f8_e5m2": [[198, "index-8"], [209, "index-5"]], "s4": [[198, "index-10"], [209, "index-13"]], "s8": [[198, "index-5"], [209, "index-11"]], "u4": [[198, "index-11"], [209, "index-14"]], "u8": [[198, "index-6"], [209, "index-12"]], "layout_type": [[199, "index-0"], [501, "index-6"]], "opaque": [[199, "index-4"], [210, "index-5"]], "strided": [[199, "index-3"]], "constant": [[200, "index-3"]], "host_scalar": [[200, "index-4"]], "property_type": [[200, "index-0"]], "variable": [[200, "index-2"], [499, "index-1"], [499, "index-2"], [500, "index-1"], [500, "index-2"], [501, "index-1"], [501, "index-2"], [501, "index-3"], [501, "index-4"], [501, "index-5"], [501, "index-6"], [501, "index-7"], [501, "index-8"], [582, "index-1"], [592, "index-1"], [592, "index-2"], [592, "index-3"], [592, "index-4"], [592, "index-5"], [592, "index-6"]], "alpha": [[201, "index-2"]], "attr": [[201, "index-0"]], "auto_broadcast": [[201, "index-36"]], "auto_pad": [[201, "index-37"]], "axes": [[201, "index-12"]], "axis": [[201, "index-9"]], "begin_norm_axis": [[201, "index-10"]], "beta": [[201, "index-3"]], "coordinate_transformation_mode": [[201, "index-38"]], "data_format": [[201, "index-39"]], "dilations": [[201, "index-13"], [224, "index-16"]], "dst_shape": [[201, "index-14"]], "epsilon": [[201, "index-4"]], "exclude_pad": [[201, "index-27"]], "group_shape": [[201, "index-26"]], "groups": [[201, "index-11"]], "keep_dims": [[201, "index-28"]], "keep_stats": [[201, "index-29"]], "kernel": [[201, "index-15"], [224, "index-32"]], "max": [[201, "index-5"]], "min": [[201, "index-6"]], "mode": [[201, "index-40"]], "momentum": [[201, "index-7"]], "order": [[201, "index-16"]], "output_padding": [[201, "index-17"]], "pads_begin": [[201, "index-18"]], "pads_end": [[201, "index-19"]], "per_channel_broadcast": [[201, "index-30"]], "qtype": [[201, "index-41"]], "rounding_type": [[201, "index-42"]], "scales": [[201, "index-8"]], "shape": [[201, "index-20"]], "sizes": [[201, "index-21"]], "special_zero": [[201, "index-31"]], "src_shape": [[201, "index-22"]], "strides": [[201, "index-23"], [224, "index-15"], [501, "index-7"]], "transpose_a": [[201, "index-32"]], "transpose_b": [[201, "index-33"]], "use_affine": [[201, "index-34"]], "use_dst": [[201, "index-35"]], "weights_format": [[201, "index-43"]], "weights_shape": [[201, "index-24"]], "zps": [[201, "index-25"]], "dnnl_graph_op_attr_alpha": [[202, "index-2"]], "dnnl_graph_op_attr_auto_broadcast": [[202, "index-36"]], "dnnl_graph_op_attr_auto_pad": [[202, "index-37"]], "dnnl_graph_op_attr_axes": [[202, "index-12"]], "dnnl_graph_op_attr_axis": [[202, "index-9"]], "dnnl_graph_op_attr_begin_norm_axis": [[202, "index-10"]], "dnnl_graph_op_attr_beta": [[202, "index-3"]], "dnnl_graph_op_attr_coordinate_transformation_mode": [[202, "index-38"]], "dnnl_graph_op_attr_data_format": [[202, "index-39"]], "dnnl_graph_op_attr_dilations": [[202, "index-13"]], "dnnl_graph_op_attr_dst_shape": [[202, "index-14"]], "dnnl_graph_op_attr_end": [[202, "index-44"]], "dnnl_graph_op_attr_epsilon": [[202, "index-4"]], "dnnl_graph_op_attr_exclude_pad": [[202, "index-27"]], "dnnl_graph_op_attr_group_shape": [[202, "index-26"]], "dnnl_graph_op_attr_groups": [[202, "index-11"]], "dnnl_graph_op_attr_keep_dims": [[202, "index-28"]], "dnnl_graph_op_attr_keep_stats": [[202, "index-29"]], "dnnl_graph_op_attr_kernel": [[202, "index-15"]], "dnnl_graph_op_attr_max": [[202, "index-5"]], "dnnl_graph_op_attr_min": [[202, "index-6"]], "dnnl_graph_op_attr_mode": [[202, "index-40"]], "dnnl_graph_op_attr_momentum": [[202, "index-7"]], "dnnl_graph_op_attr_order": [[202, "index-16"]], "dnnl_graph_op_attr_output_padding": [[202, "index-17"]], "dnnl_graph_op_attr_pads_begin": [[202, "index-18"]], "dnnl_graph_op_attr_pads_end": [[202, "index-19"]], "dnnl_graph_op_attr_per_channel_broadcast": [[202, "index-30"]], "dnnl_graph_op_attr_qtype": [[202, "index-41"]], "dnnl_graph_op_attr_rounding_type": [[202, "index-42"]], "dnnl_graph_op_attr_scales": [[202, "index-8"]], "dnnl_graph_op_attr_shape": [[202, "index-20"]], "dnnl_graph_op_attr_sizes": [[202, "index-21"]], "dnnl_graph_op_attr_special_zero": [[202, "index-31"]], "dnnl_graph_op_attr_src_shape": [[202, "index-22"]], "dnnl_graph_op_attr_strides": [[202, "index-23"]], "dnnl_graph_op_attr_t": [[202, "index-0"]], "dnnl_graph_op_attr_transpose_a": [[202, "index-32"]], "dnnl_graph_op_attr_transpose_b": [[202, "index-33"]], "dnnl_graph_op_attr_undef": [[202, "index-1"]], "dnnl_graph_op_attr_use_affine": [[202, "index-34"]], "dnnl_graph_op_attr_use_dst": [[202, "index-35"]], "dnnl_graph_op_attr_weights_format": [[202, "index-43"]], "dnnl_graph_op_attr_weights_shape": [[202, "index-24"]], "dnnl_graph_op_attr_zps": [[202, "index-25"]], "dnnl_graph_op_kind_t": [[204, "index-0"]], "debug": [[205, "index-2"]], "fusion": [[205, "index-1"]], "policy": [[205, "index-0"]], "dnnl_graph_partition_policy_debug": [[206, "index-2"]], "dnnl_graph_partition_policy_fusion": [[206, "index-1"]], "dnnl_graph_partition_policy_t": [[206, "index-0"]], "invalid_arguments": [[207, "index-3"], [235, "index-3"]], "invalid_data_type": [[207, "index-11"]], "invalid_graph": [[207, "index-8"]], "invalid_graph_op": [[207, "index-9"]], "invalid_shape": [[207, "index-10"]], "last_impl_reached": [[207, "index-5"], [235, "index-5"]], "not_required": [[207, "index-7"], [235, "index-7"]], "out_of_memory": [[207, "index-2"], [235, "index-2"]], "runtime_error": [[207, "index-6"], [235, "index-6"]], "status": [[207, "index-0"], [235, "index-0"], [359, "index-0"]], "success": [[207, "index-1"], [235, "index-1"]], "unimplemented": [[207, "index-4"], [235, "index-4"]], "dnnl_graph_tensor_property_constant": [[208, "index-3"]], "dnnl_graph_tensor_property_host_scalar": [[208, "index-4"]], "dnnl_graph_tensor_property_t": [[208, "index-0"]], "dnnl_graph_tensor_property_undef": [[208, "index-1"]], "dnnl_graph_tensor_property_variable": [[208, "index-2"]], "e8m0": [[209, "index-4"]], "f4_e2m1": [[209, "index-3"]], "f4_e3m0": [[209, "index-2"]], "blocked": [[210, "index-3"]], "format_kind": [[210, "index-0"], [224, "index-49"]], "sparse": [[210, "index-4"]], "abcd8b8a": [[211, "index-95"]], "a": [[211, "index-3"]], "abcd8b": [[211, "index-94"]], "ab": [[211, "index-4"]], "abc": [[211, "index-6"]], "abcd": [[211, "index-11"]], "abcde": [[211, "index-20"]], "abcdef": [[211, "index-29"]], "abcdefg": [[211, "index-35"]], "abcdefgh": [[211, "index-37"]], "abcdefghi": [[211, "index-39"]], "abcdefghij": [[211, "index-41"]], "abcdefghijk": [[211, "index-43"]], "abcdefghijkl": [[211, "index-45"]], "abcdefghijlk": [[211, "index-46"]], "abcdefghikj": [[211, "index-44"]], "abcdefghji": [[211, "index-42"]], "abcdefgih": [[211, "index-40"]], "abcdefhg": [[211, "index-38"]], "abcdegf": [[211, "index-36"]], "abcdfe": [[211, "index-34"]], "abced": [[211, "index-28"]], "abdc": [[211, "index-12"]], "abdec": [[211, "index-21"]], "abdefc": [[211, "index-32"]], "abdfce": [[211, "index-30"]], "acb": [[211, "index-7"]], "acbd": [[211, "index-13"]], "acbde": [[211, "index-22"]], "acbdef": [[211, "index-31"]], "acdb": [[211, "index-14"]], "acdeb": [[211, "index-23"]], "adbc": [[211, "index-15"]], "ba": [[211, "index-5"]], "bac": [[211, "index-8"]], "bacd": [[211, "index-16"]], "bacde": [[211, "index-24"]], "bca": [[211, "index-9"]], "bcda": [[211, "index-17"]], "bcdea": [[211, "index-25"]], "cba": [[211, "index-10"]], "cdba": [[211, "index-18"]], "cdeba": [[211, "index-26"]], "chwn": [[211, "index-56"]], "cn": [[211, "index-49"]], "dcab": [[211, "index-19"]], "decab": [[211, "index-27"]], "defcab": [[211, "index-33"]], "dhwigo": [[211, "index-85"]], "dhwio": [[211, "index-71"]], "format_tag": [[211, "index-0"]], "giodhw": [[211, "index-83"]], "giohw": [[211, "index-81"]], "godhwi": [[211, "index-84"]], "gohwi": [[211, "index-78"]], "goidhw": [[211, "index-82"]], "goihw": [[211, "index-79"]], "goiw": [[211, "index-75"]], "gowi": [[211, "index-76"]], "hwigo": [[211, "index-80"]], "hwio": [[211, "index-66"]], "idhwo": [[211, "index-74"]], "ihwo": [[211, "index-68"]], "io": [[211, "index-60"]], "iodhw": [[211, "index-73"]], "iohw": [[211, "index-69"]], "iwo": [[211, "index-64"]], "ldgo": [[211, "index-93"]], "ldgoi": [[211, "index-90"]], "ldigo": [[211, "index-89"]], "ldio": [[211, "index-91"]], "ldnc": [[211, "index-88"]], "ldoi": [[211, "index-92"]], "nc": [[211, "index-48"]], "ncdhw": [[211, "index-57"]], "nchw": [[211, "index-54"]], "ncw": [[211, "index-52"]], "ndhwc": [[211, "index-58"]], "nhwc": [[211, "index-55"]], "nt": [[211, "index-51"]], "ntc": [[211, "index-87"]], "nwc": [[211, "index-53"]], "odhwi": [[211, "index-72"]], "ohwi": [[211, "index-67"]], "oi": [[211, "index-59"]], "oidhw": [[211, "index-70"]], "oihw": [[211, "index-65"]], "oiw": [[211, "index-61"]], "owi": [[211, "index-62"]], "tn": [[211, "index-50"]], "tnc": [[211, "index-86"]], "wigo": [[211, "index-77"]], "wio": [[211, "index-63"]], "x": [[211, "index-47"]], "coo": [[212, "index-4"], [543, "index-29"]], "csr": [[212, "index-2"], [543, "index-28"]], "packed": [[212, "index-3"], [543, "index-30"]], "sparse_encoding": [[212, "index-0"], [224, "index-53"]], "fuse_norm_add_relu": [[213, "index-6"]], "fuse_norm_relu": [[213, "index-5"]], "none": [[213, "index-1"]], "normalization_flags": [[213, "index-0"]], "rms_norm": [[213, "index-7"]], "use_global_stats": [[213, "index-2"]], "use_scale": [[213, "index-3"]], "use_shift": [[213, "index-4"]], "dnnl_fuse_norm_add_relu": [[214, "index-6"]], "dnnl_fuse_norm_relu": [[214, "index-5"]], "dnnl_normalization_flags_none": [[214, "index-1"]], "dnnl_normalization_flags_t": [[214, "index-0"]], "dnnl_rms_norm": [[214, "index-7"]], "dnnl_use_global_stats": [[214, "index-2"]], "dnnl_use_scale": [[214, "index-3"]], "dnnl_use_shift": [[214, "index-4"]], "buffer": [[215, "index-2"], [239, "index-2"]], "memory_kind": [[215, "index-0"], [239, "index-0"]], "usm": [[215, "index-1"], [239, "index-1"]], "dnnl_ocl_interop_buffer": [[216, "index-2"]], "dnnl_ocl_interop_memory_kind_t": [[216, "index-0"]], "dnnl_ocl_interop_usm": [[216, "index-1"]], "dnnl_pack_type_no_trans": [[217, "index-2"]], "dnnl_pack_type_pack32": [[217, "index-4"]], "dnnl_pack_type_t": [[217, "index-0"]], "dnnl_pack_type_trans": [[217, "index-3"]], "dnnl_pack_type_undef": [[217, "index-1"]], "batch_normalization": [[218, "index-10"]], "deconvolution": [[218, "index-7"], [313, "index-0"]], "group_normalization": [[218, "index-21"]], "inner_product": [[218, "index-11"]], "layer_normalization": [[218, "index-20"]], "lrn": [[218, "index-9"], [321, "index-0"]], "dnnl_batch_normalization": [[219, "index-10"]], "dnnl_binary": [[219, "index-14"]], "dnnl_concat": [[219, "index-4"]], "dnnl_convolution": [[219, "index-6"]], "dnnl_deconvolution": [[219, "index-7"]], "dnnl_eltwise": [[219, "index-8"]], "dnnl_gemm": [[219, "index-13"]], "dnnl_group_normalization": [[219, "index-22"]], "dnnl_inner_product": [[219, "index-11"]], "dnnl_layer_normalization": [[219, "index-21"]], "dnnl_lrn": [[219, "index-9"]], "dnnl_matmul": [[219, "index-15"]], "dnnl_pooling": [[219, "index-17"]], "dnnl_prelu": [[219, "index-19"]], "dnnl_primitive_kind_t": [[219, "index-0"]], "dnnl_reduction": [[219, "index-18"]], "dnnl_reorder": [[219, "index-2"]], "dnnl_resampling": [[219, "index-16"]], "dnnl_rnn": [[219, "index-12"]], "dnnl_shuffle": [[219, "index-3"]], "dnnl_softmax": [[219, "index-20"]], "dnnl_sum": [[219, "index-5"]], "dnnl_undefined_primitive": [[219, "index-1"]], "profiling_data_kind": [[220, "index-0"]], "time": [[220, "index-2"]], "dnnl_profiling_data_kind_t": [[221, "index-0"]], "dnnl_profiling_data_kind_time": [[221, "index-2"]], "dnnl_profiling_data_kind_undef": [[221, "index-1"]], "backward": [[222, "index-5"]], "backward_bias": [[222, "index-8"]], "backward_data": [[222, "index-6"]], "backward_weights": [[222, "index-7"]], "forward": [[222, "index-4"]], "forward_inference": [[222, "index-3"]], "forward_training": [[222, "index-2"]], "prop_kind": [[222, "index-0"], [224, "index-12"]], "dnnl_backward": [[223, "index-5"]], "dnnl_backward_bias": [[223, "index-8"]], "dnnl_backward_data": [[223, "index-6"]], "dnnl_backward_weights": [[223, "index-7"]], "dnnl_forward": [[223, "index-4"]], "dnnl_forward_inference": [[223, "index-3"]], "dnnl_forward_training": [[223, "index-2"]], "dnnl_prop_kind_t": [[223, "index-0"]], "dnnl_prop_kind_undef": [[223, "index-1"]], "activation_kind": [[224, "index-31"]], "alg_kind": [[224, "index-21"]], "alpha_f32": [[224, "index-22"]], "axis_s32": [[224, "index-24"]], "beta_f32": [[224, "index-23"]], "cache_blob_id": [[224, "index-14"]], "cache_blob_id_size_s64": [[224, "index-13"]], "cell_kind": [[224, "index-29"]], "diff_dst_md": [[224, "index-39"]], "diff_src_md": [[224, "index-35"]], "diff_weights_md": [[224, "index-37"]], "direction": [[224, "index-30"]], "dst_md": [[224, "index-38"]], "engine": [[224, "index-2"], [315, "index-0"], [352, "index-0"], [497, "index-1"], [497, "index-2"]], "epsilon_f32": [[224, "index-19"]], "exec_arg_md": [[224, "index-42"]], "factors": [[224, "index-28"]], "flags": [[224, "index-20"], [237, "index-0"]], "group_size_s64": [[224, "index-33"]], "impl_info_str": [[224, "index-11"], [560, "index-2"]], "inner_blks": [[224, "index-51"]], "inner_idxs": [[224, "index-52"]], "inner_nblks_s32": [[224, "index-50"]], "k_f32": [[224, "index-26"]], "local_size_s64": [[224, "index-25"]], "memory_consumption_s64": [[224, "index-7"]], "ndims_s32": [[224, "index-43"]], "nnz_s64": [[224, "index-54"]], "num_handles_s32": [[224, "index-55"]], "num_of_inputs_s32": [[224, "index-4"]], "num_of_outputs_s32": [[224, "index-5"]], "p_f32": [[224, "index-27"]], "padded_dims": [[224, "index-47"]], "padded_offsets": [[224, "index-48"]], "padding_l": [[224, "index-17"]], "padding_r": [[224, "index-18"]], "primitive_kind": [[224, "index-3"]], "query": [[224, "index-0"]], "reorder_dst_engine": [[224, "index-10"]], "reorder_src_engine": [[224, "index-9"]], "scratchpad_engine": [[224, "index-8"], [560, "index-39"]], "scratchpad_md": [[224, "index-41"]], "src_md": [[224, "index-34"]], "submemory_offset_s64": [[224, "index-46"]], "time_estimate_f64": [[224, "index-6"]], "weights_md": [[224, "index-36"]], "workspace_md": [[224, "index-40"]], "dnnl_query_activation_kind": [[225, "index-31"]], "dnnl_query_alg_kind": [[225, "index-21"]], "dnnl_query_alpha_f32": [[225, "index-22"]], "dnnl_query_axis_s32": [[225, "index-24"]], "dnnl_query_beta_f32": [[225, "index-23"]], "dnnl_query_cache_blob_id": [[225, "index-14"]], "dnnl_query_cache_blob_id_size_s64": [[225, "index-13"]], "dnnl_query_cell_kind": [[225, "index-29"]], "dnnl_query_data_type": [[225, "index-46"]], "dnnl_query_diff_dst_md": [[225, "index-40"]], "dnnl_query_diff_src_md": [[225, "index-36"]], "dnnl_query_diff_weights_md": [[225, "index-38"]], "dnnl_query_dilations": [[225, "index-16"]], "dnnl_query_dims": [[225, "index-45"]], "dnnl_query_direction": [[225, "index-30"]], "dnnl_query_dst_md": [[225, "index-39"]], "dnnl_query_engine": [[225, "index-2"]], "dnnl_query_epsilon_f32": [[225, "index-19"]], "dnnl_query_exec_arg_md": [[225, "index-43"]], "dnnl_query_factors": [[225, "index-28"]], "dnnl_query_flags": [[225, "index-20"]], "dnnl_query_format_kind": [[225, "index-50"]], "dnnl_query_group_size_s64": [[225, "index-33"]], "dnnl_query_impl_info_str": [[225, "index-9"]], "dnnl_query_inner_blks": [[225, "index-52"]], "dnnl_query_inner_idxs": [[225, "index-53"]], "dnnl_query_inner_nblks_s32": [[225, "index-51"]], "dnnl_query_k_f32": [[225, "index-26"]], "dnnl_query_kernel": [[225, "index-32"]], "dnnl_query_local_size_s64": [[225, "index-25"]], "dnnl_query_memory_consumption_s64": [[225, "index-7"]], "dnnl_query_ndims_s32": [[225, "index-44"]], "dnnl_query_nnz_s64": [[225, "index-55"]], "dnnl_query_num_handles_s32": [[225, "index-56"]], "dnnl_query_num_of_inputs_s32": [[225, "index-4"]], "dnnl_query_num_of_outputs_s32": [[225, "index-5"]], "dnnl_query_p_f32": [[225, "index-27"]], "dnnl_query_padded_dims": [[225, "index-48"]], "dnnl_query_padded_offsets": [[225, "index-49"]], "dnnl_query_padding_l": [[225, "index-17"]], "dnnl_query_padding_r": [[225, "index-18"]], "dnnl_query_primitive_kind": [[225, "index-3"]], "dnnl_query_prop_kind": [[225, "index-12"]], "dnnl_query_reorder_dst_engine": [[225, "index-11"]], "dnnl_query_reorder_src_engine": [[225, "index-10"]], "dnnl_query_scratchpad_engine": [[225, "index-8"]], "dnnl_query_scratchpad_md": [[225, "index-42"]], "dnnl_query_some_md": [[225, "index-34"]], "dnnl_query_sparse_encoding": [[225, "index-54"]], "dnnl_query_src_md": [[225, "index-35"]], "dnnl_query_strides": [[225, "index-15"]], "dnnl_query_submemory_offset_s64": [[225, "index-47"]], "dnnl_query_t": [[225, "index-0"]], "dnnl_query_time_estimate_f64": [[225, "index-6"]], "dnnl_query_undef": [[225, "index-1"]], "dnnl_query_weights_md": [[225, "index-37"]], "dnnl_query_workspace_md": [[225, "index-41"]], "bidirectional_concat": [[226, "index-4"]], "bidirectional_sum": [[226, "index-5"]], "rnn_direction": [[226, "index-0"]], "unidirectional_left2right": [[226, "index-2"]], "unidirectional_right2left": [[226, "index-3"]], "dnnl_bidirectional_concat": [[227, "index-4"]], "dnnl_bidirectional_sum": [[227, "index-5"]], "dnnl_rnn_direction_t": [[227, "index-0"]], "dnnl_rnn_direction_undef": [[227, "index-1"]], "dnnl_unidirectional_left2right": [[227, "index-2"]], "dnnl_unidirectional_right2left": [[227, "index-3"]], "diff_weights_overwrite": [[228, "index-2"]], "rnn_flags": [[228, "index-0"]], "dnnl_rnn_flags_diff_weights_overwrite": [[229, "index-2"]], "dnnl_rnn_flags_t": [[229, "index-0"]], "dnnl_rnn_flags_undef": [[229, "index-1"]], "environment": [[230, "index-1"]], "rounding_mode": [[230, "index-0"]], "stochastic": [[230, "index-2"]], "dnnl_rounding_mode_environment": [[231, "index-1"]], "dnnl_rounding_mode_stochastic": [[231, "index-2"]], "dnnl_rounding_mode_t": [[231, "index-0"]], "library": [[232, "index-1"]], "scratchpad_mode": [[232, "index-0"]], "user": [[232, "index-2"]], "dnnl_scratchpad_mode_library": [[233, "index-1"]], "dnnl_scratchpad_mode_t": [[233, "index-0"]], "dnnl_scratchpad_mode_user": [[233, "index-2"]], "dnnl_coo": [[234, "index-4"]], "dnnl_csr": [[234, "index-2"]], "dnnl_packed": [[234, "index-3"]], "dnnl_sparse_encoding_t": [[234, "index-0"]], "dnnl_sparse_encoding_undef": [[234, "index-1"]], "dnnl_invalid_arguments": [[236, "index-3"]], "dnnl_invalid_data_type": [[236, "index-11"]], "dnnl_invalid_graph": [[236, "index-8"]], "dnnl_invalid_graph_op": [[236, "index-9"]], "dnnl_invalid_shape": [[236, "index-10"]], "dnnl_last_impl_reached": [[236, "index-5"]], "dnnl_not_required": [[236, "index-7"]], "dnnl_out_of_memory": [[236, "index-2"]], "dnnl_runtime_error": [[236, "index-6"]], "dnnl_status_t": [[236, "index-0"]], "dnnl_success": [[236, "index-1"]], "dnnl_unimplemented": [[236, "index-4"]], "default_flags": [[237, "index-3"]], "in_order": [[237, "index-1"]], "out_of_order": [[237, "index-2"]], "dnnl_stream_default_flags": [[238, "index-2"]], "dnnl_stream_flags_t": [[238, "index-0"]], "dnnl_stream_out_of_order": [[238, "index-1"]], "dnnl_sycl_interop_buffer": [[240, "index-2"]], "dnnl_sycl_interop_memory_kind_t": [[240, "index-0"]], "dnnl_sycl_interop_usm": [[240, "index-1"]], "no_trans": [[241, "index-2"]], "pack32": [[241, "index-4"]], "pack_type": [[241, "index-0"]], "trans": [[241, "index-3"]], "augru.cpp": [[242, "index-0"]], "example": [[242, "index-0"], [243, "index-0"], [244, "index-0"], [245, "index-0"], [246, "index-0"], [247, "index-0"], [248, "index-0"], [249, "index-0"], [250, "index-0"], [251, "index-0"], [252, "index-0"], [253, "index-0"], [254, "index-0"], [255, "index-0"], [256, "index-0"], [257, "index-0"], [258, "index-0"], [259, "index-0"], [260, "index-0"], [261, "index-0"], [262, "index-0"], [263, "index-0"], [264, "index-0"], [265, "index-0"], [266, "index-0"], [267, "index-0"], [268, "index-0"], [269, "index-0"], [270, "index-0"], [271, "index-0"], [272, "index-0"], [273, "index-0"], [274, "index-0"], [275, "index-0"], [276, "index-0"], [277, "index-0"], [278, "index-0"], [279, "index-0"], [280, "index-0"], [281, "index-0"], [282, "index-0"], [283, "index-0"], [284, "index-0"], [285, "index-0"], [286, "index-0"], [287, "index-0"], [288, "index-0"], [289, "index-0"], [290, "index-0"], [291, "index-0"], [292, "index-0"], [293, "index-0"], [294, "index-0"], [295, "index-0"], [296, "index-0"], [297, "index-0"]], "batch_normalization.cpp": [[243, "index-0"]], "binary.cpp": [[244, "index-0"]], "bnorm_u8_via_binary_postops.cpp": [[245, "index-0"]], "cnn_inference_f32.c": [[246, "index-0"]], "cnn_inference_f32.cpp": [[247, "index-0"]], "cnn_inference_int8.cpp": [[248, "index-0"]], "cnn_training_bf16.cpp": [[249, "index-0"]], "cnn_training_f32.cpp": [[250, "index-0"]], "concat.cpp": [[251, "index-0"]], "convolution.cpp": [[252, "index-0"]], "cpu_brgemm.cpp": [[253, "index-0"]], "cpu_cnn_training_f32.c": [[254, "index-0"]], "cpu_getting_started.cpp": [[255, "index-0"]], "cpu_inference_int8.cpp": [[256, "index-0"]], "cpu_matmul_coo.cpp": [[257, "index-0"]], "cpu_matmul_csr.cpp": [[258, "index-0"]], "cpu_matmul_quantization.cpp": [[259, "index-0"]], "cpu_matmul_weights_compression.cpp": [[260, "index-0"]], "cpu_rnn_inference_f32.cpp": [[261, "index-0"]], "cpu_rnn_inference_int8.cpp": [[262, "index-0"]], "cpu_sgemm_and_matmul.cpp": [[263, "index-0"]], "cpu_single_op_partition.cpp": [[264, "index-0"]], "cross_engine_reorder.c": [[265, "index-0"]], "cross_engine_reorder.cpp": [[266, "index-0"]], "deconvolution.cpp": [[267, "index-0"]], "eltwise.cpp": [[268, "index-0"]], "getting_started.cpp": [[269, "index-0"]], "gpu_opencl_getting_started.cpp": [[270, "index-0"]], "gpu_opencl_interop.cpp": [[271, "index-0"]], "group_normalization.cpp": [[272, "index-0"]], "inference_int8_matmul.cpp": [[273, "index-0"]], "inner_product.cpp": [[274, "index-0"]], "layer_normalization.cpp": [[275, "index-0"]], "lbr_gru.cpp": [[276, "index-0"]], "lrn.cpp": [[277, "index-0"]], "lstm.cpp": [[278, "index-0"]], "matmul.cpp": [[279, "index-0"]], "matmul_perf.cpp": [[280, "index-0"]], "memory_format_propagation.cpp": [[281, "index-0"]], "performance_profiling.cpp": [[282, "index-0"]], "pooling.cpp": [[283, "index-0"]], "prelu.cpp": [[284, "index-0"]], "reduction.cpp": [[285, "index-0"]], "reorder.cpp": [[286, "index-0"]], "resampling.cpp": [[287, "index-0"]], "rnn_training_f32.cpp": [[288, "index-0"]], "shuffle.cpp": [[289, "index-0"]], "softmax.cpp": [[290, "index-0"]], "sum.cpp": [[291, "index-0"]], "sycl_getting_started.cpp": [[292, "index-0"]], "sycl_interop_buffer.cpp": [[293, "index-0"]], "sycl_interop_usm.cpp": [[294, "index-0"]], "sycl_single_op_partition.cpp": [[295, "index-0"]], "vanilla_rnn.cpp": [[296, "index-0"]], "weights_decompression_matmul.cpp": [[297, "index-0"]], "global": [[298, "index-0"]], "namespace": [[298, "index-0"], [365, "index-0"], [366, "index-0"], [367, "index-0"], [368, "index-0"], [369, "index-0"], [370, "index-0"], [371, "index-0"], [372, "index-0"], [373, "index-0"], [374, "index-0"], [375, "index-0"]], "set_any_layout": [[298, "index-1"]], "group": [[303, "index-0"], [304, "index-0"], [305, "index-0"], [306, "index-0"], [307, "index-0"], [308, "index-0"], [309, "index-0"], [310, "index-0"], [311, "index-0"], [312, "index-0"], [313, "index-0"], [314, "index-0"], [315, "index-0"], [316, "index-0"], [317, "index-0"], [318, "index-0"], [319, "index-0"], [320, "index-0"], [321, "index-0"], [322, "index-0"], [323, "index-0"], [324, "index-0"], [325, "index-0"], [326, "index-0"], [327, "index-0"], [328, "index-0"], [329, "index-0"], [330, "index-0"], [331, "index-0"], [332, "index-0"], [333, "index-0"], [334, "index-0"], [335, "index-0"], [336, "index-0"], [337, "index-0"], [338, "index-0"], [339, "index-0"], [340, "index-0"], [341, "index-0"], [342, "index-0"], [343, "index-0"], [344, "index-0"], [345, "index-0"], [346, "index-0"], [347, "index-0"], [348, "index-0"], [349, "index-0"], [350, "index-0"], [351, "index-0"], [352, "index-0"], [353, "index-0"], [354, "index-0"], [355, "index-0"], [356, "index-0"], [357, "index-0"], [358, "index-0"], [359, "index-0"], [360, "index-0"], [361, "index-0"], [362, "index-0"]], "onednn api": [[303, "index-0"]], "accumulation mode": [[304, "index-0"]], "convert_to_c": [[304, "index-1"], [305, "index-5"], [305, "index-6"], [305, "index-7"], [305, "index-8"], [315, "index-2"], [316, "index-1"], [329, "index-5"], [329, "index-6"], [329, "index-7"], [334, "index-1"], [334, "index-2"], [369, "index-1"], [370, "index-1"]], "attributes": [[305, "index-0"]], "const_dnnl_post_ops_t": [[305, "index-4"]], "const_dnnl_primitive_attr_t": [[305, "index-2"]], "dnnl_post_ops_append_binary": [[305, "index-43"]], "dnnl_post_ops_append_binary_v2": [[305, "index-44"]], "dnnl_post_ops_append_dw": [[305, "index-41"]], "dnnl_post_ops_append_eltwise": [[305, "index-39"]], "dnnl_post_ops_append_prelu": [[305, "index-47"]], "dnnl_post_ops_append_sum": [[305, "index-37"]], "dnnl_post_ops_clone": [[305, "index-33"]], "dnnl_post_ops_create": [[305, "index-32"]], "dnnl_post_ops_destroy": [[305, "index-34"]], "dnnl_post_ops_get_kind": [[305, "index-36"]], "dnnl_post_ops_get_params_binary": [[305, "index-45"]], "dnnl_post_ops_get_params_binary_v2": [[305, "index-46"]], "dnnl_post_ops_get_params_dw": [[305, "index-42"]], "dnnl_post_ops_get_params_eltwise": [[305, "index-40"]], "dnnl_post_ops_get_params_prelu": [[305, "index-48"]], "dnnl_post_ops_get_params_sum": [[305, "index-38"]], "dnnl_post_ops_len": [[305, "index-35"]], "dnnl_post_ops_t": [[305, "index-3"]], "dnnl_primitive_attr_clone": [[305, "index-10"]], "dnnl_primitive_attr_create": [[305, "index-9"]], "dnnl_primitive_attr_destroy": [[305, "index-11"]], "dnnl_primitive_attr_get_accumulation_mode": [[305, "index-20"]], "dnnl_primitive_attr_get_deterministic": [[305, "index-18"]], "dnnl_primitive_attr_get_dropout": [[305, "index-12"]], "dnnl_primitive_attr_get_fpmath_mode": [[305, "index-14"]], "dnnl_primitive_attr_get_fpmath_mode_v2": [[305, "index-16"]], "dnnl_primitive_attr_get_post_ops": [[305, "index-30"]], "dnnl_primitive_attr_get_rnn_data_qparams": [[305, "index-50"]], "dnnl_primitive_attr_get_rnn_weights_projection_qparams": [[305, "index-54"]], "dnnl_primitive_attr_get_rnn_weights_qparams": [[305, "index-52"]], "dnnl_primitive_attr_get_rounding": [[305, "index-29"]], "dnnl_primitive_attr_get_scratchpad_mode": [[305, "index-22"]], "dnnl_primitive_attr_set_accumulation_mode": [[305, "index-21"]], "dnnl_primitive_attr_set_deterministic": [[305, "index-19"]], "dnnl_primitive_attr_set_dropout": [[305, "index-13"]], "dnnl_primitive_attr_set_fpmath_mode": [[305, "index-15"]], "dnnl_primitive_attr_set_fpmath_mode_v2": [[305, "index-17"]], "dnnl_primitive_attr_set_post_ops": [[305, "index-31"]], "dnnl_primitive_attr_set_rnn_data_qparams": [[305, "index-49"]], "dnnl_primitive_attr_set_rnn_weights_projection_qparams": [[305, "index-53"]], "dnnl_primitive_attr_set_rnn_weights_qparams": [[305, "index-51"]], "dnnl_primitive_attr_set_rounding": [[305, "index-28"]], "dnnl_primitive_attr_set_scales": [[305, "index-25"]], "dnnl_primitive_attr_set_scales_mask": [[305, "index-24"]], "dnnl_primitive_attr_set_scratchpad_mode": [[305, "index-23"]], "dnnl_primitive_attr_set_zero_points": [[305, "index-27"]], "dnnl_primitive_attr_set_zero_points_mask": [[305, "index-26"]], "dnnl_primitive_attr_t": [[305, "index-1"]], "dnnl_batch_normalization_backward_primitive_desc_create": [[306, "index-2"]], "dnnl_batch_normalization_forward_primitive_desc_create": [[306, "index-1"]], "dnnl_binary_primitive_desc_create": [[307, "index-1"]], "dnnl_binary_primitive_desc_create_v2": [[307, "index-2"]], "blas functions": [[308, "index-0"]], "dnnl_gemm_s8s8s32": [[308, "index-6"]], "dnnl_gemm_u8s8s32": [[308, "index-5"]], "dnnl_sgemm": [[308, "index-4"]], "gemm_s8s8s32": [[308, "index-3"], [371, "index-5"]], "gemm_u8s8s32": [[308, "index-2"], [371, "index-4"]], "sgemm": [[308, "index-1"], [371, "index-3"]], "common api": [[309, "index-0"]], "dnnl_concat_primitive_desc_create": [[310, "index-1"]], "dnnl_convolution_backward_data_primitive_desc_create": [[311, "index-2"]], "dnnl_convolution_backward_weights_primitive_desc_create": [[311, "index-3"]], "dnnl_convolution_forward_primitive_desc_create": [[311, "index-1"]], "dnnl_max_ndims": [[312, "index-3"]], "define": [[312, "index-3"], [323, "index-36"], [323, "index-37"], [323, "index-38"], [323, "index-39"], [323, "index-40"], [323, "index-41"], [329, "index-21"], [329, "index-22"], [329, "index-23"], [329, "index-24"], [329, "index-25"], [329, "index-26"], [329, "index-27"], [329, "index-28"], [329, "index-29"], [329, "index-30"], [329, "index-31"], [329, "index-32"], [329, "index-33"], [329, "index-34"], [329, "index-35"], [329, "index-36"], [329, "index-37"], [329, "index-38"], [329, "index-39"], [329, "index-40"], [329, "index-41"], [329, "index-42"], [329, "index-43"], [329, "index-44"], [329, "index-45"], [329, "index-46"], [329, "index-47"], [329, "index-48"], [329, "index-49"], [329, "index-50"], [329, "index-51"], [329, "index-52"], [329, "index-53"], [329, "index-54"], [329, "index-55"], [329, "index-56"], [329, "index-57"], [329, "index-58"], [329, "index-59"], [329, "index-60"], [329, "index-61"], [329, "index-62"], [329, "index-63"], [329, "index-64"], [329, "index-65"], [329, "index-66"], [329, "index-67"], [329, "index-68"], [329, "index-69"], [329, "index-70"], [329, "index-71"], [329, "index-72"], [329, "index-73"], [329, "index-74"], [329, "index-75"], [329, "index-76"], [329, "index-77"], [329, "index-78"], [329, "index-79"], [329, "index-80"], [329, "index-81"], [329, "index-82"], [329, "index-83"], [329, "index-84"], [329, "index-85"], [329, "index-86"], [329, "index-87"], [329, "index-88"], [329, "index-89"], [329, "index-90"], [329, "index-91"], [329, "index-92"], [329, "index-93"], [329, "index-94"], [329, "index-95"], [329, "index-96"], [335, "index-22"], [335, "index-23"], [335, "index-24"], [335, "index-25"], [335, "index-26"], [335, "index-27"], [355, "index-6"], [355, "index-7"]], "dnnl_dim_t": [[312, "index-1"]], "dnnl_dims_t": [[312, "index-2"]], "dnnl_deconvolution_backward_data_primitive_desc_create": [[313, "index-2"]], "dnnl_deconvolution_backward_weights_primitive_desc_create": [[313, "index-3"]], "dnnl_deconvolution_forward_primitive_desc_create": [[313, "index-1"]], "dnnl_eltwise_backward_primitive_desc_create": [[314, "index-2"]], "dnnl_eltwise_forward_primitive_desc_create": [[314, "index-1"]], "dnnl_engine_create": [[315, "index-4"]], "dnnl_engine_destroy": [[315, "index-6"]], "dnnl_engine_get_count": [[315, "index-3"]], "dnnl_engine_get_kind": [[315, "index-5"]], "dnnl_engine_t": [[315, "index-1"]], "floating-point math mode": [[316, "index-0"]], "dnnl_get_default_fpmath_mode": [[316, "index-2"]], "dnnl_set_default_fpmath_mode": [[316, "index-3"]], "dnnl_group_normalization_backward_primitive_desc_create": [[317, "index-2"]], "dnnl_group_normalization_forward_primitive_desc_create": [[317, "index-1"]], "dnnl_inner_product_backward_data_primitive_desc_create": [[318, "index-2"]], "dnnl_inner_product_backward_weights_primitive_desc_create": [[318, "index-3"]], "dnnl_inner_product_forward_primitive_desc_create": [[318, "index-1"]], "runtime interoperability api": [[319, "index-0"], [354, "index-0"]], "dnnl_layer_normalization_backward_primitive_desc_create": [[320, "index-2"]], "dnnl_layer_normalization_backward_primitive_desc_create_v2": [[320, "index-4"]], "dnnl_layer_normalization_forward_primitive_desc_create": [[320, "index-1"]], "dnnl_layer_normalization_forward_primitive_desc_create_v2": [[320, "index-3"]], "dnnl_lrn_backward_primitive_desc_create": [[321, "index-2"]], "dnnl_lrn_forward_primitive_desc_create": [[321, "index-1"]], "dnnl_matmul_primitive_desc_create": [[322, "index-1"]], "dnnl_memory_allocate": [[323, "index-36"]], "dnnl_memory_none": [[323, "index-37"]], "dnnl_runtime_dim_val": [[323, "index-38"]], "dnnl_runtime_f32_val": [[323, "index-39"]], "dnnl_runtime_s32_val": [[323, "index-40"]], "dnnl_runtime_size_val": [[323, "index-41"]], "memory": [[323, "index-0"], [499, "index-2"], [541, "index-3"], [541, "index-4"], [541, "index-5"], [541, "index-6"]], "const_dnnl_memory_desc_t": [[323, "index-2"]], "const_dnnl_memory_t": [[323, "index-4"]], "dnnl_data_type_size": [[323, "index-22"]], "dnnl_memory_create": [[323, "index-23"]], "dnnl_memory_create_v2": [[323, "index-24"]], "dnnl_memory_desc_clone": [[323, "index-6"]], "dnnl_memory_desc_create_submemory": [[323, "index-14"]], "dnnl_memory_desc_create_with_blob": [[323, "index-8"]], "dnnl_memory_desc_create_with_coo_encoding": [[323, "index-12"]], "dnnl_memory_desc_create_with_csr_encoding": [[323, "index-11"]], "dnnl_memory_desc_create_with_packed_encoding": [[323, "index-13"]], "dnnl_memory_desc_create_with_strides": [[323, "index-9"]], "dnnl_memory_desc_create_with_tag": [[323, "index-10"]], "dnnl_memory_desc_destroy": [[323, "index-5"]], "dnnl_memory_desc_equal": [[323, "index-19"]], "dnnl_memory_desc_get_blob": [[323, "index-7"]], "dnnl_memory_desc_get_size": [[323, "index-20"]], "dnnl_memory_desc_get_size_v2": [[323, "index-21"]], "dnnl_memory_desc_permute_axes": [[323, "index-16"]], "dnnl_memory_desc_query": [[323, "index-17"]], "dnnl_memory_desc_query_v2": [[323, "index-18"]], "dnnl_memory_desc_reshape": [[323, "index-15"]], "dnnl_memory_desc_t": [[323, "index-1"]], "dnnl_memory_destroy": [[323, "index-35"]], "dnnl_memory_get_data_handle": [[323, "index-31"]], "dnnl_memory_get_data_handle_v2": [[323, "index-33"]], "dnnl_memory_get_engine": [[323, "index-26"]], "dnnl_memory_get_memory_desc": [[323, "index-25"]], "dnnl_memory_map_data": [[323, "index-27"]], "dnnl_memory_map_data_v2": [[323, "index-28"]], "dnnl_memory_set_data_handle": [[323, "index-32"]], "dnnl_memory_set_data_handle_v2": [[323, "index-34"]], "dnnl_memory_t": [[323, "index-3"]], "dnnl_memory_unmap_data": [[323, "index-29"]], "dnnl_memory_unmap_data_v2": [[323, "index-30"]], "opencl interoperability api": [[324, "index-0"], [356, "index-0"]], "dnnl_ocl_interop_engine_create": [[324, "index-9"]], "dnnl_ocl_interop_engine_create_from_cache_blob": [[324, "index-8"]], "dnnl_ocl_interop_engine_get_cache_blob": [[324, "index-7"]], "dnnl_ocl_interop_engine_get_cache_blob_id": [[324, "index-6"]], "dnnl_ocl_interop_engine_get_context": [[324, "index-10"]], "dnnl_ocl_interop_get_device": [[324, "index-11"]], "dnnl_ocl_interop_memory_create": [[324, "index-1"]], "dnnl_ocl_interop_memory_create_v2": [[324, "index-2"]], "dnnl_ocl_interop_memory_get_mem_object": [[324, "index-4"]], "dnnl_ocl_interop_memory_get_memory_kind": [[324, "index-3"]], "dnnl_ocl_interop_memory_set_mem_object": [[324, "index-5"]], "dnnl_ocl_interop_primitive_execute": [[324, "index-14"]], "dnnl_ocl_interop_stream_create": [[324, "index-12"]], "dnnl_ocl_interop_stream_get_command_queue": [[324, "index-13"]], "dnnl_pooling_backward_primitive_desc_create": [[325, "index-2"]], "dnnl_pooling_forward_primitive_desc_create": [[325, "index-1"]], "dnnl_prelu_backward_primitive_desc_create": [[326, "index-2"]], "dnnl_prelu_forward_primitive_desc_create": [[326, "index-1"]], "dnnl_get_primitive_cache_capacity": [[327, "index-3"]], "dnnl_set_primitive_cache_capacity": [[327, "index-4"]], "get_primitive_cache_capacity": [[327, "index-1"]], "set_primitive_cache_capacity": [[327, "index-2"]], "primitives": [[328, "index-0"]], "common": [[329, "index-0"]], "dnnl_arg_attr_dropout_mask": [[329, "index-21"]], "dnnl_arg_attr_dropout_probability": [[329, "index-22"]], "dnnl_arg_attr_dropout_seed": [[329, "index-23"]], "dnnl_arg_attr_multiple_post_op": [[329, "index-24"]], "dnnl_arg_attr_multiple_post_op_base": [[329, "index-25"]], "dnnl_arg_attr_output_scales": [[329, "index-26"]], "dnnl_arg_attr_post_op_dw": [[329, "index-27"]], "dnnl_arg_attr_rounding_seed": [[329, "index-28"]], "dnnl_arg_attr_scales": [[329, "index-29"]], "dnnl_arg_attr_zero_points": [[329, "index-30"]], "dnnl_arg_augru_attention": [[329, "index-31"]], "dnnl_arg_bias": [[329, "index-32"]], "dnnl_arg_diff_augru_attention": [[329, "index-33"]], "dnnl_arg_diff_bias": [[329, "index-34"]], "dnnl_arg_diff_dst": [[329, "index-35"]], "dnnl_arg_diff_dst_0": [[329, "index-36"]], "dnnl_arg_diff_dst_1": [[329, "index-37"]], "dnnl_arg_diff_dst_2": [[329, "index-38"]], "dnnl_arg_diff_dst_iter": [[329, "index-39"]], "dnnl_arg_diff_dst_iter_c": [[329, "index-40"]], "dnnl_arg_diff_dst_layer": [[329, "index-41"]], "dnnl_arg_diff_scale": [[329, "index-42"]], "dnnl_arg_diff_shift": [[329, "index-43"]], "dnnl_arg_diff_src": [[329, "index-44"]], "dnnl_arg_diff_src_0": [[329, "index-45"]], "dnnl_arg_diff_src_1": [[329, "index-46"]], "dnnl_arg_diff_src_2": [[329, "index-47"]], "dnnl_arg_diff_src_3": [[329, "index-48"]], "dnnl_arg_diff_src_iter": [[329, "index-49"]], "dnnl_arg_diff_src_iter_c": [[329, "index-50"]], "dnnl_arg_diff_src_layer": [[329, "index-51"]], "dnnl_arg_diff_weights": [[329, "index-52"]], "dnnl_arg_diff_weights_0": [[329, "index-53"]], "dnnl_arg_diff_weights_1": [[329, "index-54"]], "dnnl_arg_diff_weights_2": [[329, "index-55"]], "dnnl_arg_diff_weights_3": [[329, "index-56"]], "dnnl_arg_diff_weights_iter": [[329, "index-57"]], "dnnl_arg_diff_weights_layer": [[329, "index-58"]], "dnnl_arg_diff_weights_peephole": [[329, "index-59"]], "dnnl_arg_diff_weights_projection": [[329, "index-60"]], "dnnl_arg_dst": [[329, "index-61"]], "dnnl_arg_dst_0": [[329, "index-62"]], "dnnl_arg_dst_1": [[329, "index-63"]], "dnnl_arg_dst_2": [[329, "index-64"]], "dnnl_arg_dst_iter": [[329, "index-65"]], "dnnl_arg_dst_iter_c": [[329, "index-66"]], "dnnl_arg_dst_layer": [[329, "index-67"]], "dnnl_arg_from": [[329, "index-68"]], "dnnl_arg_mean": [[329, "index-69"]], "dnnl_arg_multiple_dst": [[329, "index-70"]], "dnnl_arg_multiple_src": [[329, "index-71"]], "dnnl_arg_reduce": [[329, "index-72"]], "dnnl_arg_scale": [[329, "index-73"]], "dnnl_arg_scratchpad": [[329, "index-74"]], "dnnl_arg_shift": [[329, "index-75"]], "dnnl_arg_src": [[329, "index-76"]], "dnnl_arg_src_0": [[329, "index-77"]], "dnnl_arg_src_1": [[329, "index-78"]], "dnnl_arg_src_2": [[329, "index-79"]], "dnnl_arg_src_3": [[329, "index-80"]], "dnnl_arg_src_iter": [[329, "index-81"]], "dnnl_arg_src_iter_c": [[329, "index-82"]], "dnnl_arg_src_layer": [[329, "index-83"]], "dnnl_arg_to": [[329, "index-84"]], "dnnl_arg_undef": [[329, "index-85"]], "dnnl_arg_variance": [[329, "index-86"]], "dnnl_arg_weights": [[329, "index-87"]], "dnnl_arg_weights_0": [[329, "index-88"]], "dnnl_arg_weights_1": [[329, "index-89"]], "dnnl_arg_weights_2": [[329, "index-90"]], "dnnl_arg_weights_3": [[329, "index-91"]], "dnnl_arg_weights_iter": [[329, "index-92"]], "dnnl_arg_weights_layer": [[329, "index-93"]], "dnnl_arg_weights_peephole": [[329, "index-94"]], "dnnl_arg_weights_projection": [[329, "index-95"]], "dnnl_arg_workspace": [[329, "index-96"]], "const_dnnl_primitive_desc_t": [[329, "index-2"]], "const_dnnl_primitive_t": [[329, "index-4"]], "dnnl_primitive_create": [[329, "index-15"]], "dnnl_primitive_create_from_cache_blob": [[329, "index-16"]], "dnnl_primitive_desc_clone": [[329, "index-9"]], "dnnl_primitive_desc_destroy": [[329, "index-11"]], "dnnl_primitive_desc_get_attr": [[329, "index-10"]], "dnnl_primitive_desc_next_impl": [[329, "index-8"]], "dnnl_primitive_desc_query": [[329, "index-12"]], "dnnl_primitive_desc_query_md": [[329, "index-13"]], "dnnl_primitive_desc_query_s32": [[329, "index-14"]], "dnnl_primitive_desc_t": [[329, "index-1"]], "dnnl_primitive_destroy": [[329, "index-20"]], "dnnl_primitive_execute": [[329, "index-17"]], "dnnl_primitive_get_cache_blob": [[329, "index-19"]], "dnnl_primitive_get_primitive_desc": [[329, "index-18"]], "dnnl_primitive_t": [[329, "index-3"]], "profiling": [[330, "index-0"]], "dnnl_query_profiling_data": [[330, "index-4"]], "dnnl_reset_profiling": [[330, "index-3"]], "get_profiling_data": [[330, "index-2"]], "reset_profiling": [[330, "index-1"]], "dnnl_reduction_primitive_desc_create": [[331, "index-1"]], "dnnl_reorder_primitive_desc_create": [[332, "index-1"]], "dnnl_resampling_backward_primitive_desc_create": [[333, "index-2"]], "dnnl_resampling_forward_primitive_desc_create": [[333, "index-1"]], "dnnl_augru_backward_primitive_desc_create": [[334, "index-12"]], "dnnl_augru_forward_primitive_desc_create": [[334, "index-11"]], "dnnl_gru_backward_primitive_desc_create": [[334, "index-8"]], "dnnl_gru_forward_primitive_desc_create": [[334, "index-7"]], "dnnl_lbr_augru_backward_primitive_desc_create": [[334, "index-14"]], "dnnl_lbr_augru_forward_primitive_desc_create": [[334, "index-13"]], "dnnl_lbr_gru_backward_primitive_desc_create": [[334, "index-10"]], "dnnl_lbr_gru_forward_primitive_desc_create": [[334, "index-9"]], "dnnl_lstm_backward_primitive_desc_create": [[334, "index-6"]], "dnnl_lstm_forward_primitive_desc_create": [[334, "index-5"]], "dnnl_vanilla_rnn_backward_primitive_desc_create": [[334, "index-4"]], "dnnl_vanilla_rnn_forward_primitive_desc_create": [[334, "index-3"]], "dnnl_jit_profile_linux_jitdump": [[335, "index-22"]], "dnnl_jit_profile_linux_jitdump_use_tsc": [[335, "index-23"]], "dnnl_jit_profile_linux_perf": [[335, "index-24"]], "dnnl_jit_profile_linux_perfmap": [[335, "index-25"]], "dnnl_jit_profile_none": [[335, "index-26"]], "dnnl_jit_profile_vtune": [[335, "index-27"]], "service": [[335, "index-0"]], "dnnl_get_cpu_isa_hints": [[335, "index-19"]], "dnnl_get_effective_cpu_isa": [[335, "index-17"]], "dnnl_set_cpu_isa_hints": [[335, "index-18"]], "dnnl_set_jit_dump": [[335, "index-13"]], "dnnl_set_jit_profiling_flags": [[335, "index-14"]], "dnnl_set_jit_profiling_jitdumpdir": [[335, "index-15"]], "dnnl_set_max_cpu_isa": [[335, "index-16"]], "dnnl_set_verbose": [[335, "index-20"]], "dnnl_version": [[335, "index-21"]], "get_cpu_isa_hints": [[335, "index-12"]], "get_default_fpmath_mode": [[335, "index-4"]], "get_effective_cpu_isa": [[335, "index-10"]], "set_cpu_isa_hints": [[335, "index-11"]], "set_default_fpmath_mode": [[335, "index-5"]], "set_jit_dump": [[335, "index-6"]], "set_jit_profiling_flags": [[335, "index-7"]], "set_jit_profiling_jitdumpdir": [[335, "index-8"]], "set_max_cpu_isa": [[335, "index-9"]], "set_verbose": [[335, "index-2"]], "version": [[335, "index-3"]], "version_t": [[335, "index-1"]], "dnnl_shuffle_backward_primitive_desc_create": [[336, "index-2"]], "dnnl_shuffle_forward_primitive_desc_create": [[336, "index-1"]], "dnnl_softmax_backward_primitive_desc_create": [[337, "index-2"]], "dnnl_softmax_forward_primitive_desc_create": [[337, "index-1"]], "stream": [[338, "index-0"], [579, "index-1"], [579, "index-2"]], "const_dnnl_stream_t": [[338, "index-2"]], "dnnl_stream_create": [[338, "index-3"]], "dnnl_stream_destroy": [[338, "index-6"]], "dnnl_stream_get_engine": [[338, "index-4"]], "dnnl_stream_t": [[338, "index-1"]], "dnnl_stream_wait": [[338, "index-5"]], "dnnl_sum_primitive_desc_create": [[339, "index-1"]], "sycl interoperability api": [[340, "index-0"], [360, "index-0"]], "dnnl_sycl_interop_engine_create": [[340, "index-1"]], "dnnl_sycl_interop_engine_get_context": [[340, "index-2"]], "dnnl_sycl_interop_engine_get_device": [[340, "index-3"]], "dnnl_sycl_interop_memory_create": [[340, "index-4"]], "dnnl_sycl_interop_memory_create_v2": [[340, "index-5"]], "dnnl_sycl_interop_memory_get_memory_kind": [[340, "index-6"]], "dnnl_sycl_interop_memory_set_buffer": [[340, "index-7"]], "dnnl_sycl_interop_primitive_execute": [[340, "index-10"]], "dnnl_sycl_interop_stream_create": [[340, "index-8"]], "dnnl_sycl_interop_stream_get_queue": [[340, "index-9"]], "threadpool interoperability api": [[341, "index-0"]], "dnnl_threadpool_interop_gemm_s8s8s32": [[341, "index-7"]], "dnnl_threadpool_interop_gemm_u8s8s32": [[341, "index-6"]], "dnnl_threadpool_interop_get_max_concurrency": [[341, "index-4"]], "dnnl_threadpool_interop_set_max_concurrency": [[341, "index-3"]], "dnnl_threadpool_interop_sgemm": [[341, "index-5"]], "dnnl_threadpool_interop_stream_create": [[341, "index-1"]], "dnnl_threadpool_interop_stream_get_threadpool": [[341, "index-2"]], "ukernels": [[342, "index-0"]], "const_dnnl_ukernel_attr_params_t": [[342, "index-2"]], "dnnl_ukernel_attr_params_create": [[342, "index-3"]], "dnnl_ukernel_attr_params_destroy": [[342, "index-8"]], "dnnl_ukernel_attr_params_set_a_scales": [[342, "index-5"]], "dnnl_ukernel_attr_params_set_b_scales": [[342, "index-6"]], "dnnl_ukernel_attr_params_set_d_scales": [[342, "index-7"]], "dnnl_ukernel_attr_params_set_post_ops_args": [[342, "index-4"]], "dnnl_ukernel_attr_params_t": [[342, "index-1"]], "brgemm ukernel": [[343, "index-0"]], "const_dnnl_brgemm_t": [[343, "index-2"]], "const_dnnl_transform_t": [[343, "index-4"]], "dnnl_brgemm_create": [[343, "index-5"]], "dnnl_brgemm_destroy": [[343, "index-20"]], "dnnl_brgemm_execute": [[343, "index-18"]], "dnnl_brgemm_execute_postops": [[343, "index-19"]], "dnnl_brgemm_finalize": [[343, "index-11"]], "dnnl_brgemm_generate": [[343, "index-17"]], "dnnl_brgemm_get_b_pack_type": [[343, "index-12"]], "dnnl_brgemm_get_scratchpad_size": [[343, "index-13"]], "dnnl_brgemm_is_execute_postops_valid": [[343, "index-14"]], "dnnl_brgemm_release_hw_context": [[343, "index-16"]], "dnnl_brgemm_set_a_scales": [[343, "index-8"]], "dnnl_brgemm_set_b_scales": [[343, "index-9"]], "dnnl_brgemm_set_d_scales": [[343, "index-10"]], "dnnl_brgemm_set_add_c": [[343, "index-6"]], "dnnl_brgemm_set_hw_context": [[343, "index-15"]], "dnnl_brgemm_set_post_ops": [[343, "index-7"]], "dnnl_brgemm_t": [[343, "index-1"]], "dnnl_transform_create": [[343, "index-21"]], "dnnl_transform_destroy": [[343, "index-24"]], "dnnl_transform_execute": [[343, "index-23"]], "dnnl_transform_generate": [[343, "index-22"]], "dnnl_transform_t": [[343, "index-3"]], "transform ukernel": [[344, "index-0"]], "ukernel utils": [[345, "index-0"]], "utilities": [[346, "index-0"], [362, "index-0"]], "graph api": [[347, "index-0"]], "const_dnnl_graph_allocator_t": [[348, "index-4"]], "dnnl_graph_allocator_create": [[348, "index-5"]], "dnnl_graph_allocator_destroy": [[348, "index-6"]], "dnnl_graph_allocator_t": [[348, "index-3"]], "dnnl_graph_host_allocate_f": [[348, "index-1"]], "dnnl_graph_host_deallocate_f": [[348, "index-2"]], "compiled partition": [[349, "index-0"]], "const_dnnl_graph_compiled_partition_t": [[349, "index-2"]], "dnnl_graph_compiled_partition_create": [[349, "index-3"]], "dnnl_graph_compiled_partition_destroy": [[349, "index-5"]], "dnnl_graph_compiled_partition_execute": [[349, "index-4"]], "dnnl_graph_compiled_partition_get_inplace_ports": [[349, "index-7"]], "dnnl_graph_compiled_partition_query_logical_tensor": [[349, "index-6"]], "dnnl_graph_compiled_partition_t": [[349, "index-1"]], "compiled partition cache": [[350, "index-0"]], "dnnl_graph_get_compiled_partition_cache_capacity": [[350, "index-3"]], "dnnl_graph_set_compiled_partition_cache_capacity": [[350, "index-4"]], "get_compiled_partition_cache_capacity": [[350, "index-1"]], "set_compiled_partition_cache_capacity": [[350, "index-2"]], "dnnl_graph_get_constant_tensor_cache": [[351, "index-6"]], "dnnl_graph_get_constant_tensor_cache_capacity": [[351, "index-8"]], "dnnl_graph_set_constant_tensor_cache": [[351, "index-5"]], "dnnl_graph_set_constant_tensor_cache_capacity": [[351, "index-7"]], "get_constant_tensor_cache": [[351, "index-2"]], "get_constant_tensor_cache_capacity": [[351, "index-4"]], "set_constant_tensor_cache": [[351, "index-1"]], "set_constant_tensor_cache_capacity": [[351, "index-3"]], "dnnl_graph_make_engine_with_allocator": [[352, "index-2"]], "make_engine_with_allocator": [[352, "index-1"], [367, "index-2"], [367, "index-3"]], "const_dnnl_graph_graph_t": [[353, "index-2"]], "dnnl_graph_add_op": [[353, "index-8"]], "dnnl_graph_graph_create": [[353, "index-3"]], "dnnl_graph_graph_create_with_fpmath_mode": [[353, "index-4"]], "dnnl_graph_graph_destroy": [[353, "index-5"]], "dnnl_graph_graph_filter": [[353, "index-11"]], "dnnl_graph_graph_finalize": [[353, "index-9"]], "dnnl_graph_graph_get_fpmath_mode": [[353, "index-7"]], "dnnl_graph_graph_get_partition_num": [[353, "index-12"]], "dnnl_graph_graph_get_partitions": [[353, "index-13"]], "dnnl_graph_graph_is_finalized": [[353, "index-10"]], "dnnl_graph_graph_set_fpmath_mode": [[353, "index-6"]], "dnnl_graph_graph_t": [[353, "index-1"]], "dnnl_graph_unknown_dim": [[355, "index-6"]], "dnnl_graph_unknown_ndims": [[355, "index-7"]], "logical tensor": [[355, "index-0"]], "dnnl_graph_logical_tensor_get_mem_size": [[355, "index-4"]], "dnnl_graph_logical_tensor_init": [[355, "index-1"]], "dnnl_graph_logical_tensor_init_with_dims": [[355, "index-2"]], "dnnl_graph_logical_tensor_init_with_strides": [[355, "index-3"]], "dnnl_graph_logical_tensor_is_equal": [[355, "index-5"]], "dnnl_graph_ocl_allocate_f": [[356, "index-1"]], "dnnl_graph_ocl_deallocate_f": [[356, "index-2"]], "dnnl_graph_ocl_interop_allocator_create": [[356, "index-3"]], "dnnl_graph_ocl_interop_compiled_partition_execute": [[356, "index-6"]], "dnnl_graph_ocl_interop_make_engine_from_cache_blob_with_allocator": [[356, "index-5"]], "dnnl_graph_ocl_interop_make_engine_with_allocator": [[356, "index-4"]], "const_dnnl_graph_op_t": [[357, "index-2"]], "dnnl_graph_op_add_input": [[357, "index-5"]], "dnnl_graph_op_add_output": [[357, "index-6"]], "dnnl_graph_op_create": [[357, "index-3"]], "dnnl_graph_op_destroy": [[357, "index-4"]], "dnnl_graph_op_get_id": [[357, "index-11"]], "dnnl_graph_op_get_kind": [[357, "index-12"]], "dnnl_graph_op_set_attr_bool": [[357, "index-8"]], "dnnl_graph_op_set_attr_f32": [[357, "index-7"]], "dnnl_graph_op_set_attr_s64": [[357, "index-9"]], "dnnl_graph_op_set_attr_str": [[357, "index-10"]], "dnnl_graph_op_t": [[357, "index-1"]], "const_dnnl_graph_partition_t": [[358, "index-2"]], "dnnl_graph_partition_compile": [[358, "index-8"]], "dnnl_graph_partition_create_with_op": [[358, "index-3"]], "dnnl_graph_partition_destroy": [[358, "index-4"]], "dnnl_graph_partition_get_engine_kind": [[358, "index-14"]], "dnnl_graph_partition_get_id": [[358, "index-7"]], "dnnl_graph_partition_get_input_ports": [[358, "index-10"]], "dnnl_graph_partition_get_input_ports_num": [[358, "index-9"]], "dnnl_graph_partition_get_op_num": [[358, "index-5"]], "dnnl_graph_partition_get_ops": [[358, "index-6"]], "dnnl_graph_partition_get_output_ports": [[358, "index-12"]], "dnnl_graph_partition_get_output_ports_num": [[358, "index-11"]], "dnnl_graph_partition_is_supported": [[358, "index-13"]], "dnnl_graph_partition_t": [[358, "index-1"]], "dnnl_graph_sycl_allocate_f": [[360, "index-1"]], "dnnl_graph_sycl_deallocate_f": [[360, "index-2"]], "dnnl_graph_sycl_interop_allocator_create": [[360, "index-3"]], "dnnl_graph_sycl_interop_compiled_partition_execute": [[360, "index-5"]], "dnnl_graph_sycl_interop_make_engine_with_allocator": [[360, "index-4"]], "const_dnnl_graph_tensor_t": [[361, "index-2"]], "dnnl_graph_tensor_create": [[361, "index-3"]], "dnnl_graph_tensor_create_scalar": [[361, "index-4"]], "dnnl_graph_tensor_destroy": [[361, "index-5"]], "dnnl_graph_tensor_get_data_handle": [[361, "index-6"]], "dnnl_graph_tensor_get_engine": [[361, "index-8"]], "dnnl_graph_tensor_get_logical_tensor": [[361, "index-9"]], "dnnl_graph_tensor_set_data_handle": [[361, "index-7"]], "dnnl_graph_tensor_t": [[361, "index-1"]], "dnnl": [[365, "index-0"]], "dnnl::graph": [[366, "index-0"]], "dnnl::graph::ocl_interop": [[367, "index-0"]], "make_allocator": [[367, "index-1"], [368, "index-1"]], "dnnl::graph::sycl_interop": [[368, "index-0"]], "dnnl::ocl_interop": [[369, "index-0"]], "get_command_queue": [[369, "index-9"]], "get_context": [[369, "index-6"], [370, "index-3"]], "get_device": [[369, "index-7"], [370, "index-4"]], "get_engine_cache_blob": [[369, "index-3"]], "get_engine_cache_blob_id": [[369, "index-2"]], "get_mem_object": [[369, "index-10"]], "get_memory_kind": [[369, "index-12"], [370, "index-9"]], "make_engine": [[369, "index-4"], [369, "index-5"], [370, "index-2"]], "make_memory": [[369, "index-13"], [369, "index-14"], [369, "index-15"], [369, "index-16"], [370, "index-10"], [370, "index-11"], [370, "index-12"]], "make_stream": [[369, "index-8"], [370, "index-5"], [371, "index-1"]], "set_mem_object": [[369, "index-11"]], "dnnl::sycl_interop": [[370, "index-0"]], "get_buffer": [[370, "index-7"]], "get_queue": [[370, "index-6"]], "set_buffer": [[370, "index-8"]], "dnnl::threadpool_interop": [[371, "index-0"]], "get_threadpool": [[371, "index-2"]], "dnnl::ukernel": [[372, "index-0"]], "oneapi": [[373, "index-0"]], "std": [[374, "index-0"]], "sycl": [[375, "index-0"]], "augru rnn primitive example": [[377, "index-0"]], "batch normalization primitive example": [[379, "index-0"]], "binary primitive example": [[381, "index-0"]], "bnorm u8 by binary post-ops example": [[383, "index-0"]], "cnn f32 inference example": [[385, "index-0"], [386, "index-0"]], "cnn int8 inference example": [[387, "index-0"]], "cnn bf16 training example": [[388, "index-0"]], "cnn f32 training example": [[389, "index-0"], [395, "index-0"]], "concat primitive example": [[390, "index-0"]], "convolution primitive example": [[392, "index-0"]], "brgemm ukernel example": [[394, "index-0"]], "matmul primitive example": [[396, "index-0"], [397, "index-0"], [400, "index-0"], [434, "index-0"]], "matmul tutorial: quantization": [[398, "index-0"]], "rnn f32 inference example": [[401, "index-0"]], "rnn int8 inference example": [[402, "index-0"]], "matmul tutorial: comparison with sgemm": [[403, "index-0"]], "reorder between cpu and gpu engines": [[405, "index-0"], [406, "index-0"]], "deconvolution primitive example": [[407, "index-0"]], "element-wise primitive example": [[409, "index-0"]], "onednn api basic workflow tutorial": [[411, "index-0"]], "getting started on gpu with opencl extensions api": [[412, "index-0"]], "getting started on cpu with graph api": [[413, "index-0"]], "convolution int8 inference example with graph api": [[414, "index-0"]], "single op partition on cpu": [[415, "index-0"]], "getting started with opencl extensions and graph api": [[416, "index-0"]], "getting started with sycl extensions api and graph api": [[417, "index-0"]], "single op partition on gpu": [[418, "index-0"]], "group normalization primitive example": [[419, "index-0"]], "matmul tutorial: int8 inference": [[421, "index-0"]], "inner product primitive example": [[423, "index-0"]], "layer normalization primitive example": [[425, "index-0"]], "linear-before-reset gru rnn primitive example": [[427, "index-0"]], "legal information": [[429, "index-0"]], "local response normalization primitive example": [[430, "index-0"]], "lstm rnn primitive example": [[432, "index-0"]], "matrix multiplication performance example": [[436, "index-0"]], "memory format propagation": [[437, "index-0"]], "performance profiling example": [[438, "index-0"]], "pooling primitive example": [[439, "index-0"]], "primitive example": [[441, "index-0"]], "reduction primitive example": [[443, "index-0"]], "reorder primitive example": [[445, "index-0"]], "resampling primitive example": [[447, "index-0"]], "rnn f32 training example": [[449, "index-0"]], "shuffle primitive example": [[450, "index-0"]], "softmax primitive example": [[452, "index-0"]], "sum primitive example": [[454, "index-0"]], "getting started on both cpu and gpu with sycl extensions api": [[456, "index-0"]], "sycl usm example": [[457, "index-0"]], "todo list": [[458, "index-0"]], "vanilla rnn primitive example": [[459, "index-0"]], "matmul tutorial: weights decompression": [[461, "index-0"]], "args_t": [[465, "index-0"]], "struct": [[465, "index-0"], [466, "index-0"], [467, "index-0"], [468, "index-0"], [469, "index-0"], [470, "index-0"], [471, "index-0"], [472, "index-0"], [473, "index-0"], [474, "index-0"], [475, "index-0"], [476, "index-0"], [477, "index-0"], [478, "index-0"], [479, "index-0"], [480, "index-0"], [481, "index-0"], [482, "index-0"], [483, "index-0"], [484, "index-0"], [485, "index-0"], [486, "index-0"], [487, "index-0"], [488, "index-0"], [489, "index-0"], [490, "index-0"], [491, "index-0"], [492, "index-0"], [493, "index-0"], [494, "index-0"], [495, "index-0"], [496, "index-0"], [497, "index-0"], [498, "index-0"], [499, "index-0"], [500, "index-0"], [501, "index-0"], [502, "index-0"], [503, "index-0"], [504, "index-0"], [505, "index-0"], [506, "index-0"], [507, "index-0"], [508, "index-0"], [509, "index-0"], [510, "index-0"], [511, "index-0"], [512, "index-0"], [513, "index-0"], [514, "index-0"], [515, "index-0"], [516, "index-0"], [517, "index-0"], [518, "index-0"], [519, "index-0"], [520, "index-0"], [521, "index-0"], [522, "index-0"], [523, "index-0"], [524, "index-0"], [525, "index-0"], [526, "index-0"], [527, "index-0"], [528, "index-0"], [529, "index-0"], [530, "index-0"], [531, "index-0"], [532, "index-0"], [533, "index-0"], [534, "index-0"], [535, "index-0"], [536, "index-0"], [537, "index-0"], [538, "index-0"], [539, "index-0"], [540, "index-0"], [541, "index-0"], [542, "index-0"], [543, "index-0"], [544, "index-0"], [545, "index-0"], [546, "index-0"], [547, "index-0"], [548, "index-0"], [549, "index-0"], [550, "index-0"], [551, "index-0"], [552, "index-0"], [553, "index-0"], [554, "index-0"], [555, "index-0"], [556, "index-0"], [557, "index-0"], [558, "index-0"], [559, "index-0"], [560, "index-0"], [561, "index-0"], [562, "index-0"], [563, "index-0"], [564, "index-0"], [565, "index-0"], [566, "index-0"], [567, "index-0"], [568, "index-0"], [569, "index-0"], [570, "index-0"], [571, "index-0"], [572, "index-0"], [573, "index-0"], [574, "index-0"], [575, "index-0"], [576, "index-0"], [577, "index-0"], [578, "index-0"], [579, "index-0"], [580, "index-0"], [581, "index-0"], [582, "index-0"], [583, "index-0"], [584, "index-0"], [585, "index-0"], [586, "index-0"], [587, "index-0"], [588, "index-0"], [589, "index-0"], [590, "index-0"], [591, "index-0"], [592, "index-0"], [593, "index-0"], [594, "index-0"], [595, "index-0"], [596, "index-0"], [597, "index-0"], [598, "index-0"], [599, "index-0"]], "cpu_deletor_t": [[466, "index-0"]], "augru_backward": [[467, "index-1"], [467, "index-2"], [467, "index-3"]], "dnnl::augru_backward": [[467, "index-0"]], "attention_desc": [[468, "index-6"], [470, "index-6"], [523, "index-6"], [525, "index-6"]], "bias_desc": [[468, "index-9"], [470, "index-9"], [485, "index-10"], [491, "index-10"], [507, "index-8"], [509, "index-8"], [517, "index-8"], [523, "index-9"], [525, "index-9"], [527, "index-8"], [529, "index-8"], [535, "index-13"], [537, "index-13"], [539, "index-7"], [569, "index-11"], [589, "index-9"], [591, "index-9"]], "diff_attention_desc": [[468, "index-15"], [523, "index-15"]], "diff_bias_desc": [[468, "index-18"], [483, "index-10"], [489, "index-10"], [507, "index-16"], [515, "index-8"], [523, "index-18"], [527, "index-16"], [535, "index-25"], [569, "index-23"], [589, "index-17"]], "diff_dst_iter_desc": [[468, "index-20"], [507, "index-18"], [523, "index-20"], [527, "index-18"], [535, "index-27"], [569, "index-25"], [589, "index-19"]], "diff_dst_layer_desc": [[468, "index-19"], [507, "index-17"], [523, "index-19"], [527, "index-17"], [535, "index-26"], [569, "index-24"], [589, "index-18"]], "diff_src_iter_desc": [[468, "index-14"], [507, "index-13"], [523, "index-14"], [527, "index-13"], [535, "index-19"], [569, "index-17"], [589, "index-14"]], "diff_src_layer_desc": [[468, "index-13"], [507, "index-12"], [523, "index-13"], [527, "index-12"], [535, "index-18"], [569, "index-15"], [589, "index-13"]], "diff_weights_iter_desc": [[468, "index-17"], [507, "index-15"], [523, "index-17"], [527, "index-15"], [535, "index-22"], [569, "index-20"], [589, "index-16"]], "diff_weights_layer_desc": [[468, "index-16"], [507, "index-14"], [523, "index-16"], [527, "index-14"], [535, "index-21"], [569, "index-19"], [589, "index-15"]], "dnnl::augru_backward::primitive_desc": [[468, "index-0"]], "dst_iter_desc": [[468, "index-11"], [470, "index-11"], [507, "index-10"], [509, "index-10"], [523, "index-11"], [525, "index-11"], [527, "index-10"], [529, "index-10"], [535, "index-15"], [537, "index-15"], [569, "index-13"], [589, "index-11"], [591, "index-11"]], "dst_layer_desc": [[468, "index-10"], [470, "index-10"], [507, "index-9"], [509, "index-9"], [523, "index-10"], [525, "index-10"], [527, "index-9"], [529, "index-9"], [535, "index-14"], [537, "index-14"], [569, "index-12"], [589, "index-10"], [591, "index-10"]], "get_cell_kind": [[468, "index-21"], [470, "index-13"], [507, "index-19"], [509, "index-12"], [523, "index-21"], [525, "index-13"], [527, "index-19"], [529, "index-12"], [535, "index-29"], [537, "index-18"], [560, "index-18"], [589, "index-20"], [591, "index-13"]], "get_direction": [[468, "index-23"], [470, "index-15"], [507, "index-21"], [509, "index-14"], [523, "index-23"], [525, "index-15"], [527, "index-21"], [529, "index-14"], [535, "index-31"], [537, "index-20"], [560, "index-19"], [589, "index-23"], [591, "index-16"]], "get_prop_kind": [[468, "index-22"], [470, "index-14"], [472, "index-13"], [474, "index-10"], [481, "index-9"], [483, "index-12"], [485, "index-12"], [487, "index-9"], [489, "index-12"], [491, "index-12"], [493, "index-10"], [495, "index-9"], [503, "index-13"], [505, "index-10"], [507, "index-20"], [509, "index-13"], [513, "index-7"], [515, "index-9"], [517, "index-9"], [519, "index-16"], [521, "index-13"], [523, "index-22"], [525, "index-14"], [527, "index-20"], [529, "index-13"], [531, "index-8"], [533, "index-8"], [535, "index-30"], [537, "index-19"], [545, "index-8"], [547, "index-8"], [551, "index-7"], [553, "index-6"], [560, "index-23"], [571, "index-6"], [573, "index-6"], [575, "index-8"], [577, "index-7"], [589, "index-21"], [591, "index-14"]], "primitive_desc": [[468, "index-1"], [468, "index-2"], [468, "index-3"], [470, "index-1"], [470, "index-2"], [470, "index-3"], [472, "index-1"], [472, "index-2"], [472, "index-3"], [474, "index-1"], [474, "index-2"], [474, "index-3"], [476, "index-1"], [476, "index-2"], [476, "index-3"], [476, "index-4"], [479, "index-1"], [479, "index-2"], [479, "index-3"], [479, "index-4"], [481, "index-1"], [481, "index-2"], [481, "index-3"], [481, "index-4"], [483, "index-1"], [483, "index-2"], [483, "index-3"], [483, "index-4"], [483, "index-5"], [483, "index-6"], [485, "index-1"], [485, "index-2"], [485, "index-3"], [485, "index-4"], [485, "index-5"], [485, "index-6"], [487, "index-1"], [487, "index-2"], [487, "index-3"], [487, "index-4"], [489, "index-1"], [489, "index-2"], [489, "index-3"], [489, "index-4"], [489, "index-5"], [489, "index-6"], [491, "index-1"], [491, "index-2"], [491, "index-3"], [491, "index-4"], [491, "index-5"], [491, "index-6"], [493, "index-1"], [493, "index-2"], [493, "index-3"], [493, "index-4"], [493, "index-5"], [495, "index-1"], [495, "index-2"], [495, "index-3"], [495, "index-4"], [495, "index-5"], [503, "index-1"], [503, "index-2"], [503, "index-3"], [505, "index-1"], [505, "index-2"], [505, "index-3"], [507, "index-1"], [507, "index-2"], [507, "index-3"], [509, "index-1"], [509, "index-2"], [509, "index-3"], [513, "index-1"], [513, "index-2"], [513, "index-3"], [515, "index-1"], [515, "index-2"], [515, "index-3"], [515, "index-4"], [517, "index-1"], [517, "index-2"], [517, "index-3"], [517, "index-4"], [519, "index-1"], [519, "index-2"], [519, "index-3"], [519, "index-4"], [519, "index-5"], [519, "index-6"], [521, "index-1"], [521, "index-2"], [521, "index-3"], [521, "index-4"], [521, "index-5"], [521, "index-6"], [523, "index-1"], [523, "index-2"], [523, "index-3"], [525, "index-1"], [525, "index-2"], [525, "index-3"], [527, "index-1"], [527, "index-2"], [527, "index-3"], [529, "index-1"], [529, "index-2"], [529, "index-3"], [531, "index-1"], [531, "index-2"], [531, "index-3"], [533, "index-1"], [533, "index-2"], [533, "index-3"], [535, "index-1"], [535, "index-2"], [535, "index-3"], [535, "index-4"], [535, "index-5"], [537, "index-1"], [537, "index-2"], [537, "index-3"], [537, "index-4"], [537, "index-5"], [539, "index-1"], [539, "index-2"], [539, "index-3"], [539, "index-4"], [545, "index-1"], [545, "index-2"], [545, "index-3"], [547, "index-1"], [547, "index-2"], [547, "index-3"], [551, "index-1"], [551, "index-2"], [551, "index-3"], [553, "index-1"], [553, "index-2"], [553, "index-3"], [562, "index-1"], [562, "index-2"], [562, "index-3"], [564, "index-1"], [564, "index-2"], [564, "index-3"], [564, "index-4"], [566, "index-1"], [566, "index-2"], [566, "index-3"], [566, "index-4"], [568, "index-1"], [568, "index-2"], [568, "index-3"], [568, "index-4"], [568, "index-5"], [571, "index-1"], [571, "index-2"], [571, "index-3"], [573, "index-1"], [573, "index-2"], [573, "index-3"], [575, "index-1"], [575, "index-2"], [575, "index-3"], [577, "index-1"], [577, "index-2"], [577, "index-3"], [581, "index-1"], [581, "index-2"], [581, "index-3"], [581, "index-4"], [589, "index-1"], [589, "index-2"], [589, "index-3"], [589, "index-4"], [591, "index-1"], [591, "index-2"], [591, "index-3"], [591, "index-4"]], "src_iter_desc": [[468, "index-5"], [470, "index-5"], [507, "index-5"], [509, "index-5"], [523, "index-5"], [525, "index-5"], [527, "index-5"], [529, "index-5"], [535, "index-7"], [537, "index-7"], [569, "index-5"], [589, "index-6"], [591, "index-6"]], "src_layer_desc": [[468, "index-4"], [470, "index-4"], [507, "index-4"], [509, "index-4"], [523, "index-4"], [525, "index-4"], [527, "index-4"], [529, "index-4"], [535, "index-6"], [537, "index-6"], [569, "index-3"], [589, "index-5"], [591, "index-5"]], "weights_iter_desc": [[468, "index-8"], [470, "index-8"], [507, "index-7"], [509, "index-7"], [523, "index-8"], [525, "index-8"], [527, "index-7"], [529, "index-7"], [535, "index-10"], [537, "index-10"], [569, "index-8"], [589, "index-8"], [591, "index-8"]], "weights_layer_desc": [[468, "index-7"], [470, "index-7"], [507, "index-6"], [509, "index-6"], [523, "index-7"], [525, "index-7"], [527, "index-6"], [529, "index-6"], [535, "index-9"], [537, "index-9"], [569, "index-7"], [589, "index-7"], [591, "index-7"]], "workspace_desc": [[468, "index-12"], [470, "index-12"], [472, "index-12"], [474, "index-7"], [503, "index-12"], [505, "index-7"], [507, "index-11"], [509, "index-11"], [519, "index-15"], [521, "index-10"], [523, "index-12"], [525, "index-12"], [527, "index-11"], [529, "index-11"], [531, "index-6"], [533, "index-6"], [535, "index-17"], [537, "index-17"], [545, "index-6"], [547, "index-6"], [560, "index-37"], [589, "index-12"], [591, "index-12"]], "augru_forward": [[469, "index-1"], [469, "index-2"], [469, "index-3"]], "dnnl::augru_forward": [[469, "index-0"]], "dnnl::augru_forward::primitive_desc": [[470, "index-0"]], "batch_normalization_backward": [[471, "index-1"], [471, "index-2"], [471, "index-3"]], "dnnl::batch_normalization_backward": [[471, "index-0"]], "diff_dst_desc": [[472, "index-8"], [481, "index-7"], [483, "index-9"], [487, "index-7"], [489, "index-9"], [493, "index-8"], [503, "index-8"], [513, "index-6"], [515, "index-7"], [519, "index-11"], [531, "index-5"], [545, "index-5"], [551, "index-6"], [560, "index-29"], [560, "index-35"], [566, "index-6"], [571, "index-5"], [575, "index-6"]], "diff_src_desc": [[472, "index-7"], [481, "index-5"], [487, "index-5"], [493, "index-7"], [503, "index-7"], [513, "index-4"], [519, "index-10"], [531, "index-4"], [545, "index-4"], [551, "index-5"], [560, "index-28"], [560, "index-34"], [566, "index-5"], [571, "index-4"], [575, "index-5"]], "diff_weights_desc": [[472, "index-9"], [483, "index-8"], [489, "index-8"], [503, "index-9"], [515, "index-6"], [519, "index-12"], [560, "index-30"], [560, "index-36"]], "dnnl::batch_normalization_backward::primitive_desc": [[472, "index-0"]], "dst_desc": [[472, "index-6"], [474, "index-5"], [476, "index-9"], [479, "index-6"], [485, "index-9"], [491, "index-9"], [495, "index-7"], [503, "index-6"], [505, "index-5"], [517, "index-7"], [519, "index-9"], [521, "index-8"], [533, "index-5"], [539, "index-8"], [547, "index-5"], [553, "index-5"], [560, "index-26"], [560, "index-32"], [562, "index-5"], [564, "index-8"], [568, "index-7"], [573, "index-5"], [575, "index-4"], [577, "index-5"], [581, "index-6"]], "get_epsilon": [[472, "index-14"], [474, "index-11"], [503, "index-15"], [505, "index-12"], [519, "index-17"], [521, "index-14"], [560, "index-8"], [562, "index-7"]], "get_flags": [[472, "index-15"], [474, "index-12"], [503, "index-16"], [505, "index-13"], [519, "index-18"], [521, "index-15"], [560, "index-9"], [582, "index-5"]], "mean_desc": [[472, "index-10"], [474, "index-8"], [503, "index-10"], [505, "index-8"], [519, "index-13"], [521, "index-11"]], "src_desc": [[472, "index-4"], [474, "index-4"], [476, "index-5"], [479, "index-5"], [483, "index-7"], [485, "index-7"], [489, "index-7"], [491, "index-7"], [493, "index-6"], [495, "index-6"], [503, "index-4"], [505, "index-4"], [515, "index-5"], [517, "index-5"], [519, "index-7"], [521, "index-7"], [533, "index-4"], [539, "index-5"], [547, "index-4"], [551, "index-4"], [553, "index-4"], [560, "index-25"], [560, "index-31"], [562, "index-4"], [564, "index-7"], [568, "index-6"], [573, "index-4"], [577, "index-4"], [581, "index-5"]], "variance_desc": [[472, "index-11"], [474, "index-9"], [503, "index-11"], [505, "index-9"], [519, "index-14"], [521, "index-12"]], "weights_desc": [[472, "index-5"], [474, "index-6"], [481, "index-6"], [485, "index-8"], [487, "index-6"], [491, "index-8"], [503, "index-5"], [505, "index-6"], [513, "index-5"], [517, "index-6"], [519, "index-8"], [521, "index-9"], [539, "index-6"], [560, "index-27"], [560, "index-33"]], "batch_normalization_forward": [[473, "index-1"], [473, "index-2"], [473, "index-3"]], "dnnl::batch_normalization_forward": [[473, "index-0"]], "dnnl::batch_normalization_forward::primitive_desc": [[474, "index-0"]], "dnnl::binary": [[475, "index-0"]], "dnnl::binary::primitive_desc": [[476, "index-0"]], "get_algorithm": [[476, "index-10"], [481, "index-8"], [483, "index-11"], [485, "index-11"], [487, "index-8"], [489, "index-11"], [491, "index-11"], [493, "index-9"], [495, "index-8"], [531, "index-7"], [533, "index-7"], [545, "index-7"], [547, "index-7"], [560, "index-10"], [562, "index-8"], [575, "index-7"], [577, "index-6"]], "src0_desc": [[476, "index-6"]], "src1_desc": [[476, "index-7"]], "src2_desc": [[476, "index-8"]], "dnnl_brgemm": [[477, "index-0"]], "dnnl::concat": [[478, "index-0"]], "dnnl::concat::primitive_desc": [[479, "index-0"]], "primitive_desc_base": [[479, "index-10"], [479, "index-7"], [479, "index-8"], [479, "index-9"], [559, "index-2"], [559, "index-3"], [559, "index-4"], [559, "index-5"], [564, "index-10"], [564, "index-11"], [564, "index-12"], [564, "index-9"], [581, "index-10"], [581, "index-7"], [581, "index-8"], [581, "index-9"]], "convolution_backward_data": [[480, "index-1"], [480, "index-2"], [480, "index-3"]], "dnnl::convolution_backward_data": [[480, "index-0"]], "dnnl::convolution_backward_data::primitive_desc": [[481, "index-0"]], "get_dilations": [[481, "index-11"], [483, "index-14"], [485, "index-14"], [487, "index-11"], [489, "index-14"], [491, "index-14"], [545, "index-11"], [547, "index-11"], [560, "index-5"]], "get_padding_l": [[481, "index-12"], [483, "index-15"], [485, "index-15"], [487, "index-12"], [489, "index-15"], [491, "index-15"], [545, "index-12"], [547, "index-12"], [560, "index-6"]], "get_padding_r": [[481, "index-13"], [483, "index-16"], [485, "index-16"], [487, "index-13"], [489, "index-16"], [491, "index-16"], [545, "index-13"], [547, "index-13"], [560, "index-7"]], "convolution_backward_weights": [[482, "index-1"], [482, "index-2"], [482, "index-3"]], "dnnl::convolution_backward_weights": [[482, "index-0"]], "dnnl::convolution_backward_weights::primitive_desc": [[483, "index-0"]], "convolution_forward": [[484, "index-1"], [484, "index-2"], [484, "index-3"]], "dnnl::convolution_forward": [[484, "index-0"]], "dnnl::convolution_forward::primitive_desc": [[485, "index-0"]], "deconvolution_backward_data": [[486, "index-1"], [486, "index-2"], [486, "index-3"]], "dnnl::deconvolution_backward_data": [[486, "index-0"]], "dnnl::deconvolution_backward_data::primitive_desc": [[487, "index-0"]], "deconvolution_backward_weights": [[488, "index-1"], [488, "index-2"], [488, "index-3"]], "dnnl::deconvolution_backward_weights": [[488, "index-0"]], "dnnl::deconvolution_backward_weights::primitive_desc": [[489, "index-0"]], "deconvolution_forward": [[490, "index-1"], [490, "index-2"], [490, "index-3"]], "dnnl::deconvolution_forward": [[490, "index-0"]], "dnnl::deconvolution_forward::primitive_desc": [[491, "index-0"]], "dnnl::eltwise_backward": [[492, "index-0"]], "eltwise_backward": [[492, "index-1"], [492, "index-2"], [492, "index-3"]], "dnnl::eltwise_backward::primitive_desc": [[493, "index-0"]], "get_alpha": [[493, "index-11"], [495, "index-10"], [531, "index-9"], [533, "index-9"], [560, "index-11"], [589, "index-24"], [591, "index-17"]], "get_beta": [[493, "index-12"], [495, "index-11"], [531, "index-10"], [533, "index-10"], [560, "index-12"], [589, "index-25"], [591, "index-18"]], "dnnl::eltwise_forward": [[494, "index-0"]], "eltwise_forward": [[494, "index-1"], [494, "index-2"], [494, "index-3"]], "dnnl::eltwise_forward::primitive_desc": [[495, "index-0"]], "dnnl_engine": [[496, "index-0"]], "dnnl::engine": [[497, "index-0"]], "get_count": [[497, "index-8"]], "get_kind": [[497, "index-3"], [555, "index-7"], [560, "index-41"]], "handle": [[497, "index-4"], [497, "index-5"], [497, "index-6"], [497, "index-7"], [510, "index-1"], [510, "index-2"], [510, "index-3"], [510, "index-4"], [541, "index-15"], [541, "index-16"], [541, "index-17"], [541, "index-18"], [555, "index-10"], [555, "index-11"], [555, "index-12"], [555, "index-13"], [579, "index-5"], [579, "index-6"], [579, "index-7"], [579, "index-8"]], "dnnl::error": [[498, "index-0"]], "error": [[498, "index-1"]], "what": [[498, "index-2"]], "wrap_c_api": [[498, "index-3"]], "arg": [[499, "index-1"]], "dnnl_exec_arg_t": [[499, "index-0"]], "dnnl_graph_inplace_pair_t": [[500, "index-0"]], "input_id": [[500, "index-1"]], "output_id": [[500, "index-2"]], "dnnl_graph_logical_tensor_t": [[501, "index-0"]], "id": [[501, "index-1"]], "layout_id": [[501, "index-8"]], "ndims": [[501, "index-2"]], "property": [[501, "index-5"]], "dnnl::group_normalization_backward": [[502, "index-0"]], "group_normalization_backward": [[502, "index-1"], [502, "index-2"], [502, "index-3"]], "dnnl::group_normalization_backward::primitive_desc": [[503, "index-0"]], "get_group_size": [[503, "index-14"], [505, "index-11"], [560, "index-22"], [571, "index-8"], [573, "index-8"]], "dnnl::group_normalization_forward": [[504, "index-0"]], "group_normalization_forward": [[504, "index-1"], [504, "index-2"], [504, "index-3"]], "dnnl::group_normalization_forward::primitive_desc": [[505, "index-0"]], "dnnl::gru_backward": [[506, "index-0"]], "gru_backward": [[506, "index-1"], [506, "index-2"], [506, "index-3"]], "dnnl::gru_backward::primitive_desc": [[507, "index-0"]], "dnnl::gru_forward": [[508, "index-0"]], "gru_forward": [[508, "index-1"], [508, "index-2"], [508, "index-3"]], "dnnl::gru_forward::primitive_desc": [[509, "index-0"]], "dnnl::handle": [[510, "index-0"]], "get": [[510, "index-8"]], "operator t": [[510, "index-9"]], "operator bool": [[510, "index-10"]], "operator!=": [[510, "index-12"], [543, "index-27"]], "operator==": [[510, "index-11"], [543, "index-26"]], "reset": [[510, "index-7"]], "dnnl::handle_traits": [[511, "index-0"]], "dnnl::inner_product_backward_data": [[512, "index-0"]], "inner_product_backward_data": [[512, "index-1"], [512, "index-2"], [512, "index-3"]], "dnnl::inner_product_backward_data::primitive_desc": [[513, "index-0"]], "dnnl::inner_product_backward_weights": [[514, "index-0"]], "inner_product_backward_weights": [[514, "index-1"], [514, "index-2"], [514, "index-3"]], "dnnl::inner_product_backward_weights::primitive_desc": [[515, "index-0"]], "dnnl::inner_product_forward": [[516, "index-0"]], "inner_product_forward": [[516, "index-1"], [516, "index-2"], [516, "index-3"]], "dnnl::inner_product_forward::primitive_desc": [[517, "index-0"]], "dnnl::layer_normalization_backward": [[518, "index-0"]], "layer_normalization_backward": [[518, "index-1"], [518, "index-2"], [518, "index-3"]], "dnnl::layer_normalization_backward::primitive_desc": [[519, "index-0"]], "dnnl::layer_normalization_forward": [[520, "index-0"]], "layer_normalization_forward": [[520, "index-1"], [520, "index-2"], [520, "index-3"]], "dnnl::layer_normalization_forward::primitive_desc": [[521, "index-0"]], "dnnl::lbr_augru_backward": [[522, "index-0"]], "lbr_augru_backward": [[522, "index-1"], [522, "index-2"], [522, "index-3"]], "dnnl::lbr_augru_backward::primitive_desc": [[523, "index-0"]], "dnnl::lbr_augru_forward": [[524, "index-0"]], "lbr_augru_forward": [[524, "index-1"], [524, "index-2"], [524, "index-3"]], "dnnl::lbr_augru_forward::primitive_desc": [[525, "index-0"]], "dnnl::lbr_gru_backward": [[526, "index-0"]], "lbr_gru_backward": [[526, "index-1"], [526, "index-2"], [526, "index-3"]], "dnnl::lbr_gru_backward::primitive_desc": [[527, "index-0"]], "dnnl::lbr_gru_forward": [[528, "index-0"]], "lbr_gru_forward": [[528, "index-1"], [528, "index-2"], [528, "index-3"]], "dnnl::lbr_gru_forward::primitive_desc": [[529, "index-0"]], "dnnl::lrn_backward": [[530, "index-0"]], "lrn_backward": [[530, "index-1"], [530, "index-2"], [530, "index-3"]], "dnnl::lrn_backward::primitive_desc": [[531, "index-0"]], "get_k": [[531, "index-12"], [533, "index-12"], [560, "index-15"]], "get_local_size": [[531, "index-11"], [533, "index-11"], [560, "index-14"]], "dnnl::lrn_forward": [[532, "index-0"]], "lrn_forward": [[532, "index-1"], [532, "index-2"], [532, "index-3"]], "dnnl::lrn_forward::primitive_desc": [[533, "index-0"]], "dnnl::lstm_backward": [[534, "index-0"]], "lstm_backward": [[534, "index-1"], [534, "index-2"], [534, "index-3"]], "diff_dst_iter_c_desc": [[535, "index-28"], [569, "index-26"]], "diff_src_iter_c_desc": [[535, "index-20"], [569, "index-18"]], "diff_weights_peephole_desc": [[535, "index-23"], [569, "index-21"]], "diff_weights_projection_desc": [[535, "index-24"], [569, "index-22"]], "dnnl::lstm_backward::primitive_desc": [[535, "index-0"]], "dst_iter_c_desc": [[535, "index-16"], [537, "index-16"], [569, "index-14"]], "src_iter_c_desc": [[535, "index-8"], [537, "index-8"], [569, "index-6"]], "weights_peephole_desc": [[535, "index-11"], [537, "index-11"], [569, "index-9"]], "weights_projection_desc": [[535, "index-12"], [537, "index-12"], [569, "index-10"]], "dnnl::lstm_forward": [[536, "index-0"]], "lstm_forward": [[536, "index-1"], [536, "index-2"], [536, "index-3"]], "dnnl::lstm_forward::primitive_desc": [[537, "index-0"]], "dnnl::matmul": [[538, "index-0"]], "dnnl::matmul::primitive_desc": [[539, "index-0"]], "dnnl_memory": [[540, "index-0"]], "data_type_size": [[541, "index-8"]], "dnnl::memory": [[541, "index-0"]], "get_desc": [[541, "index-9"]], "map_data": [[541, "index-13"]], "unmap_data": [[541, "index-14"]], "validate_dims": [[541, "index-7"]], "dnnl_memory_desc": [[542, "index-0"]], "desc": [[543, "index-1"], [543, "index-2"], [543, "index-3"], [543, "index-4"], [543, "index-5"]], "dnnl::memory::desc": [[543, "index-0"]], "get_blob": [[543, "index-24"]], "get_format_kind": [[543, "index-21"]], "get_inner_blks": [[543, "index-15"]], "get_inner_idxs": [[543, "index-16"]], "get_inner_nblks": [[543, "index-14"]], "get_ndims": [[543, "index-9"]], "get_nnz": [[543, "index-18"]], "get_num_handles": [[543, "index-17"]], "get_padded_dims": [[543, "index-10"]], "get_padded_offsets": [[543, "index-11"]], "get_size": [[543, "index-23"]], "get_sparse_encoding": [[543, "index-19"]], "get_submemory_offset": [[543, "index-12"]], "is_zero": [[543, "index-25"]], "permute_axes": [[543, "index-8"]], "reshape": [[543, "index-7"]], "submemory_desc": [[543, "index-6"]], "dnnl::pooling_backward": [[544, "index-0"]], "pooling_backward": [[544, "index-1"], [544, "index-2"], [544, "index-3"]], "dnnl::pooling_backward::primitive_desc": [[545, "index-0"]], "get_kernel": [[545, "index-10"], [547, "index-10"], [560, "index-21"]], "dnnl::pooling_forward": [[546, "index-0"]], "pooling_forward": [[546, "index-1"], [546, "index-2"], [546, "index-3"]], "dnnl::pooling_forward::primitive_desc": [[547, "index-0"]], "dnnl_post_ops": [[548, "index-0"]], "append_binary": [[549, "index-13"], [549, "index-14"]], "append_dw": [[549, "index-11"]], "append_eltwise": [[549, "index-9"]], "append_prelu": [[549, "index-17"]], "append_sum": [[549, "index-5"]], "dnnl::post_ops": [[549, "index-0"]], "get_params_binary": [[549, "index-15"], [549, "index-16"]], "get_params_dw": [[549, "index-12"]], "get_params_eltwise": [[549, "index-10"]], "get_params_prelu": [[549, "index-18"]], "get_params_sum": [[549, "index-6"], [549, "index-7"], [549, "index-8"]], "len": [[549, "index-3"]], "post_ops": [[549, "index-1"], [549, "index-2"]], "dnnl::prelu_backward": [[550, "index-0"]], "prelu_backward": [[550, "index-1"], [550, "index-2"], [550, "index-3"]], "dnnl::prelu_backward::primitive_desc": [[551, "index-0"]], "dnnl::prelu_forward": [[552, "index-0"]], "prelu_forward": [[552, "index-1"], [552, "index-2"], [552, "index-3"]], "dnnl::prelu_forward::primitive_desc": [[553, "index-0"]], "dnnl_primitive": [[554, "index-0"]], "dnnl::primitive": [[555, "index-0"]], "get_cache_blob": [[555, "index-8"]], "get_primitive_desc": [[555, "index-6"]], "primitive": [[555, "index-1"], [555, "index-2"], [555, "index-3"], [555, "index-4"], [555, "index-5"]], "dnnl_primitive_attr": [[556, "index-0"]], "dnnl::primitive_attr": [[557, "index-0"]], "get_accumulation_mode": [[557, "index-8"]], "get_deterministic": [[557, "index-10"]], "get_dropout": [[557, "index-3"]], "get_post_ops": [[557, "index-20"]], "get_rnn_data_qparams": [[557, "index-23"]], "get_rnn_weights_projection_qparams": [[557, "index-27"]], "get_rnn_weights_qparams": [[557, "index-25"]], "get_rounding_mode": [[557, "index-12"]], "get_scratchpad_mode": [[557, "index-14"]], "primitive_attr": [[557, "index-1"], [557, "index-2"]], "set_accumulation_mode": [[557, "index-9"]], "set_deterministic": [[557, "index-11"]], "set_dropout": [[557, "index-4"]], "set_post_ops": [[557, "index-21"], [586, "index-4"]], "set_rnn_data_qparams": [[557, "index-22"]], "set_rnn_weights_projection_qparams": [[557, "index-26"]], "set_rnn_weights_qparams": [[557, "index-24"]], "set_rounding_mode": [[557, "index-13"]], "set_scales": [[557, "index-17"]], "set_scales_mask": [[557, "index-16"]], "set_scratchpad_mode": [[557, "index-15"]], "set_zero_points": [[557, "index-19"]], "set_zero_points_mask": [[557, "index-18"]], "dnnl_primitive_desc": [[558, "index-0"]], "dnnl::primitive_desc": [[559, "index-0"]], "next_impl": [[559, "index-1"]], "dnnl::primitive_desc_base": [[560, "index-0"]], "get_activation_kind": [[560, "index-20"], [589, "index-22"], [591, "index-15"]], "get_axis": [[560, "index-13"], [571, "index-7"], [573, "index-7"], [575, "index-9"], [577, "index-8"]], "get_cache_blob_id": [[560, "index-42"]], "get_factors": [[560, "index-17"]], "get_p": [[560, "index-16"], [562, "index-6"]], "get_primitive_attr": [[560, "index-40"]], "query_md": [[560, "index-24"]], "query_s64": [[560, "index-3"]], "scratchpad_desc": [[560, "index-38"]], "dnnl::reduction": [[561, "index-0"]], "dnnl::reduction::primitive_desc": [[562, "index-0"]], "dnnl::reorder": [[563, "index-0"]], "dnnl::reorder::primitive_desc": [[564, "index-0"]], "get_dst_engine": [[564, "index-6"]], "get_src_engine": [[564, "index-5"]], "dnnl::resampling_backward": [[565, "index-0"]], "resampling_backward": [[565, "index-1"], [565, "index-2"], [565, "index-3"]], "dnnl::resampling_backward::primitive_desc": [[566, "index-0"]], "dnnl::resampling_forward": [[567, "index-0"]], "resampling_forward": [[567, "index-1"], [567, "index-2"], [567, "index-3"]], "dnnl::resampling_forward::primitive_desc": [[568, "index-0"]], "augru_attention_desc": [[569, "index-4"]], "diff_augru_attention_desc": [[569, "index-16"]], "dnnl::rnn_primitive_desc_base": [[569, "index-0"]], "rnn_primitive_desc_base": [[569, "index-1"], [569, "index-2"]], "dnnl::shuffle_backward": [[570, "index-0"]], "shuffle_backward": [[570, "index-1"], [570, "index-2"], [570, "index-3"]], "dnnl::shuffle_backward::primitive_desc": [[571, "index-0"]], "dnnl::shuffle_forward": [[572, "index-0"]], "shuffle_forward": [[572, "index-1"], [572, "index-2"], [572, "index-3"]], "dnnl::shuffle_forward::primitive_desc": [[573, "index-0"]], "dnnl::softmax_backward": [[574, "index-0"]], "softmax_backward": [[574, "index-1"], [574, "index-2"], [574, "index-3"]], "dnnl::softmax_backward::primitive_desc": [[575, "index-0"]], "dnnl::softmax_forward": [[576, "index-0"]], "softmax_forward": [[576, "index-1"], [576, "index-2"], [576, "index-3"]], "dnnl::softmax_forward::primitive_desc": [[577, "index-0"]], "dnnl_stream": [[578, "index-0"]], "dnnl::stream": [[579, "index-0"]], "wait": [[579, "index-4"]], "dnnl::sum": [[580, "index-0"]], "dnnl::sum::primitive_desc": [[581, "index-0"]], "asynchronous": [[582, "index-1"]], "dnnl::threadpool_interop::threadpool_iface": [[582, "index-0"]], "get_in_parallel": [[582, "index-3"]], "get_num_threads": [[582, "index-2"]], "parallel_for": [[582, "index-4"]], "dnnl_transform": [[583, "index-0"]], "dnnl_ukernel_attr_params": [[584, "index-0"]], "dnnl::ukernel::attr_params": [[585, "index-0"]], "set_a_scales": [[585, "index-2"], [586, "index-5"]], "set_b_scales": [[585, "index-3"], [586, "index-6"]], "set_d_scales": [[585, "index-4"], [586, "index-7"]], "set_post_ops_args": [[585, "index-1"]], "brgemm": [[586, "index-1"], [586, "index-2"]], "default_attr_params": [[586, "index-18"]], "default_post_ops": [[586, "index-17"]], "dnnl::ukernel::brgemm": [[586, "index-0"]], "generate": [[586, "index-12"], [587, "index-3"]], "get_b_pack_type": [[586, "index-15"]], "get_scratchpad_size": [[586, "index-9"]], "is_execute_postops_valid": [[586, "index-10"]], "release_hw_context": [[586, "index-16"]], "set_add_c": [[586, "index-3"]], "set_hw_context": [[586, "index-11"]], "dnnl::ukernel::transform": [[587, "index-0"]], "transform": [[587, "index-1"], [587, "index-2"]], "dnnl::vanilla_rnn_backward": [[588, "index-0"]], "vanilla_rnn_backward": [[588, "index-1"], [588, "index-2"], [588, "index-3"]], "dnnl::vanilla_rnn_backward::primitive_desc": [[589, "index-0"]], "dnnl::vanilla_rnn_forward": [[590, "index-0"]], "vanilla_rnn_forward": [[590, "index-1"], [590, "index-2"], [590, "index-3"]], "dnnl::vanilla_rnn_forward::primitive_desc": [[591, "index-0"]], "cpu_runtime": [[592, "index-5"]], "dnnl_version_t": [[592, "index-0"]], "gpu_runtime": [[592, "index-6"]], "hash": [[592, "index-4"]], "major": [[592, "index-1"]], "minor": [[592, "index-2"]], "patch": [[592, "index-3"]], "example_allows_unimplemented": [[593, "index-0"]], "gemm_dims_t": [[594, "index-0"]], "gqa_dims_t": [[595, "index-0"]], "mlp_dims_t": [[596, "index-0"]], "mqa_dims_t": [[597, "index-0"]], "sdpa_dims_t": [[598, "index-0"]], "sycl_deletor_t": [[599, "index-0"]]}})