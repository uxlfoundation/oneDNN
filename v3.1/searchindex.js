Search.setIndex({"docnames": ["advanced_topics", "build_and_link", "class_dnnl_graph_allocator", "class_dnnl_graph_compiled_partition", "class_dnnl_graph_graph", "class_dnnl_graph_logical_tensor", "class_dnnl_graph_op", "class_dnnl_graph_partition", "class_dnnl_graph_tensor", "dev_guide_attributes", "dev_guide_attributes_fpmath_mode", "dev_guide_attributes_post_ops", "dev_guide_attributes_quantization", "dev_guide_attributes_scratchpad", "dev_guide_basic_concepts", "dev_guide_batch_normalization", "dev_guide_benchdnn", "dev_guide_binary", "dev_guide_build", "dev_guide_build_options", "dev_guide_c_and_cpp_apis", "dev_guide_concat", "dev_guide_conventions", "dev_guide_convolution", "dev_guide_cpu_dispatcher_control", "dev_guide_cpu_isa_hints", "dev_guide_data_types", "dev_guide_dpcpp_interoperability", "dev_guide_eltwise", "dev_guide_examples", "dev_guide_experimental", "dev_guide_graph_basic_concepts", "dev_guide_graph_dump", "dev_guide_graph_fusion_patterns", "dev_guide_graph_low_precision", "dev_guide_inference", "dev_guide_inference_and_training_aspects", "dev_guide_inference_int8", "dev_guide_inner_product", "dev_guide_inspecting_jit", "dev_guide_int8_computations", "dev_guide_layer_normalization", "dev_guide_link", "dev_guide_lrn", "dev_guide_matmul", "dev_guide_op_abs", "dev_guide_op_absbackward", "dev_guide_op_add", "dev_guide_op_avgpool", "dev_guide_op_avgpoolbackward", "dev_guide_op_batchnormforwardtraining", "dev_guide_op_batchnorminference", "dev_guide_op_batchnormtrainingbackward", "dev_guide_op_biasadd", "dev_guide_op_biasaddbackward", "dev_guide_op_clamp", "dev_guide_op_clampbackward", "dev_guide_op_concat", "dev_guide_op_convolution", "dev_guide_op_convolutionbackwarddata", "dev_guide_op_convolutionbackwardweights", "dev_guide_op_convtranspose", "dev_guide_op_convtransposebackwarddata", "dev_guide_op_convtransposebackwardweights", "dev_guide_op_dequantize", "dev_guide_op_divide", "dev_guide_op_dynamicdequantize", "dev_guide_op_dynamicquantize", "dev_guide_op_elu", "dev_guide_op_elubackward", "dev_guide_op_end", "dev_guide_op_exp", "dev_guide_op_gelu", "dev_guide_op_gelubackward", "dev_guide_op_hardsigmoid", "dev_guide_op_hardsigmoidbackward", "dev_guide_op_hardswish", "dev_guide_op_hardswishbackward", "dev_guide_op_interpolate", "dev_guide_op_interpolatebackward", "dev_guide_op_layernorm", "dev_guide_op_layernormbackward", "dev_guide_op_leakyrelu", "dev_guide_op_log", "dev_guide_op_logsoftmax", "dev_guide_op_logsoftmaxbackward", "dev_guide_op_matmul", "dev_guide_op_maximum", "dev_guide_op_maxpool", "dev_guide_op_maxpoolbackward", "dev_guide_op_minimum", "dev_guide_op_mish", "dev_guide_op_mishbackward", "dev_guide_op_multiply", "dev_guide_op_prelu", "dev_guide_op_prelubackward", "dev_guide_op_quantize", "dev_guide_op_reciprocal", "dev_guide_op_reducel1", "dev_guide_op_reducel2", "dev_guide_op_reducemax", "dev_guide_op_reducemean", "dev_guide_op_reducemin", "dev_guide_op_reduceprod", "dev_guide_op_reducesum", "dev_guide_op_relu", "dev_guide_op_relubackward", "dev_guide_op_reorder", "dev_guide_op_round", "dev_guide_op_sigmoid", "dev_guide_op_sigmoidbackward", "dev_guide_op_softmax", "dev_guide_op_softmaxbackward", "dev_guide_op_softplus", "dev_guide_op_softplusbackward", "dev_guide_op_sqrt", "dev_guide_op_sqrtbackward", "dev_guide_op_square", "dev_guide_op_squareddifference", "dev_guide_op_staticreshape", "dev_guide_op_statictranspose", "dev_guide_op_subtract", "dev_guide_op_tanh", "dev_guide_op_tanhbackward", "dev_guide_op_typecast", "dev_guide_op_wildcard", "dev_guide_opencl_interoperability", "dev_guide_performance_settings", "dev_guide_persistent_cache", "dev_guide_pooling", "dev_guide_prelu", "dev_guide_primitive_cache", "dev_guide_profilers", "dev_guide_reduction", "dev_guide_reorder", "dev_guide_resampling", "dev_guide_rnn", "dev_guide_shuffle", "dev_guide_softmax", "dev_guide_sum", "dev_guide_threadpool", "dev_guide_training", "dev_guide_training_bf16", "dev_guide_transition_to_dnnl", "dev_guide_understanding_memory_formats", "dev_guide_verbose", "dev_guide_vtune", "enum_dnnl_alg_kind_t", "enum_dnnl_algorithm", "enum_dnnl_cpu_isa", "enum_dnnl_cpu_isa_hints", "enum_dnnl_cpu_isa_hints_t", "enum_dnnl_cpu_isa_t", "enum_dnnl_data_type_t", "enum_dnnl_engine_kind", "enum_dnnl_engine_kind_t", "enum_dnnl_format_kind_t", "enum_dnnl_format_tag_t", "enum_dnnl_fpmath_mode", "enum_dnnl_fpmath_mode_t", "enum_dnnl_graph_layout_type_t", "enum_dnnl_graph_logical_tensor_data_type", "enum_dnnl_graph_logical_tensor_layout_type", "enum_dnnl_graph_logical_tensor_property_type", "enum_dnnl_graph_op_attr", "enum_dnnl_graph_op_attr_t", "enum_dnnl_graph_op_kind", "enum_dnnl_graph_op_kind_t", "enum_dnnl_graph_partition_policy", "enum_dnnl_graph_partition_policy_t", "enum_dnnl_graph_status", "enum_dnnl_graph_tensor_property_t", "enum_dnnl_memory_data_type", "enum_dnnl_memory_format_kind", "enum_dnnl_memory_format_tag", "enum_dnnl_memory_sparse_encoding", "enum_dnnl_normalization_flags", "enum_dnnl_normalization_flags_t", "enum_dnnl_ocl_interop_memory_kind", "enum_dnnl_ocl_interop_memory_kind_t", "enum_dnnl_primitive_kind", "enum_dnnl_primitive_kind_t", "enum_dnnl_prop_kind", "enum_dnnl_prop_kind_t", "enum_dnnl_query", "enum_dnnl_query_t", "enum_dnnl_rnn_direction", "enum_dnnl_rnn_direction_t", "enum_dnnl_rnn_flags", "enum_dnnl_rnn_flags_t", "enum_dnnl_scratchpad_mode", "enum_dnnl_scratchpad_mode_t", "enum_dnnl_sparse_encoding_t", "enum_dnnl_status", "enum_dnnl_status_t", "enum_dnnl_stream_flags", "enum_dnnl_stream_flags_t", "enum_dnnl_sycl_interop_memory_kind", "enum_dnnl_sycl_interop_memory_kind_t", "example_augru.cpp", "example_batch_normalization.cpp", "example_binary.cpp", "example_bnorm_u8_via_binary_postops.cpp", "example_cnn_inference_f32.c", "example_cnn_inference_f32.cpp", "example_cnn_inference_int8.cpp", "example_cnn_training_bf16.cpp", "example_cnn_training_f32.cpp", "example_concat.cpp", "example_convolution.cpp", "example_cpu_cnn_training_f32.c", "example_cpu_matmul_quantization.cpp", "example_cpu_rnn_inference_f32.cpp", "example_cpu_rnn_inference_int8.cpp", "example_cpu_sgemm_and_matmul.cpp", "example_cross_engine_reorder.c", "example_cross_engine_reorder.cpp", "example_eltwise.cpp", "example_getting_started.cpp", "example_gpu_opencl_interop.cpp", "example_inference_int8_matmul.cpp", "example_inner_product.cpp", "example_layer_normalization.cpp", "example_lrn.cpp", "example_lstm.cpp", "example_matmul.cpp", "example_memory_format_propagation.cpp", "example_performance_profiling.cpp", "example_pooling.cpp", "example_prelu.cpp", "example_reduction.cpp", "example_reorder.cpp", "example_resampling.cpp", "example_rnn_training_f32.cpp", "example_shuffle.cpp", "example_softmax.cpp", "example_sum.cpp", "example_sycl_interop_buffer.cpp", "global", "graph_extension", "graph_programming_model", "graph_supported_operations", "group_dnnl_api", "group_dnnl_api_attributes", "group_dnnl_api_batch_normalization", "group_dnnl_api_binary", "group_dnnl_api_blas", "group_dnnl_api_common", "group_dnnl_api_concat", "group_dnnl_api_convolution", "group_dnnl_api_data_types", "group_dnnl_api_deconvolution", "group_dnnl_api_eltwise", "group_dnnl_api_engine", "group_dnnl_api_fpmath_mode", "group_dnnl_api_inner_product", "group_dnnl_api_interop", "group_dnnl_api_layer_normalization", "group_dnnl_api_lrn", "group_dnnl_api_matmul", "group_dnnl_api_memory", "group_dnnl_api_ocl_interop", "group_dnnl_api_pooling", "group_dnnl_api_prelu", "group_dnnl_api_primitive_cache", "group_dnnl_api_primitives", "group_dnnl_api_primitives_common", "group_dnnl_api_reduction", "group_dnnl_api_reorder", "group_dnnl_api_resampling", "group_dnnl_api_rnn", "group_dnnl_api_service", "group_dnnl_api_shuffle", "group_dnnl_api_softmax", "group_dnnl_api_stream", "group_dnnl_api_sum", "group_dnnl_api_sycl_interop", "group_dnnl_api_threadpool_interop", "group_dnnl_api_utils", "group_dnnl_graph_api", "group_dnnl_graph_api_allocator", "group_dnnl_graph_api_compiled_partition", "group_dnnl_graph_api_compiled_partition_cache", "group_dnnl_graph_api_constant_tensor_cache", "group_dnnl_graph_api_engine", "group_dnnl_graph_api_graph", "group_dnnl_graph_api_interop", "group_dnnl_graph_api_logical_tensor", "group_dnnl_graph_api_op", "group_dnnl_graph_api_partition", "group_dnnl_graph_api_status", "group_dnnl_graph_api_sycl_interop", "group_dnnl_graph_api_tensor", "group_dnnl_graph_api_utils", "index", "interop_with_dpcpp_and_opencl", "namespace_dnnl", "namespace_dnnl_graph", "namespace_dnnl_graph_sycl_interop", "namespace_dnnl_ocl_interop", "namespace_dnnl_sycl_interop", "namespace_dnnl_threadpool_interop", "namespace_oneapi", "namespace_std", "namespace_sycl", "orphans", "page_augru_example_cpp", "page_augru_example_cpp_short", "page_batch_normalization_example_cpp", "page_batch_normalization_example_cpp_short", "page_binary_example_cpp", "page_binary_example_cpp_short", "page_bnorm_u8_via_binary_postops_cpp", "page_bnorm_u8_via_binary_postops_cpp_short", "page_cnn_inference_f32_c", "page_cnn_inference_f32_cpp", "page_cnn_inference_int8_cpp", "page_cnn_training_bf16_cpp", "page_cnn_training_f32_cpp", "page_concat_example_cpp", "page_concat_example_cpp_short", "page_convolution_example_cpp", "page_convolution_example_cpp_short", "page_cpu_cnn_training_f32_c", "page_cpu_matmul_quantization_cpp", "page_cpu_matmul_quantization_cpp_short", "page_cpu_rnn_inference_f32_cpp", "page_cpu_rnn_inference_int8_cpp", "page_cpu_sgemm_and_matmul_cpp", "page_cpu_sgemm_and_matmul_cpp_short", "page_cross_engine_reorder_c", "page_cross_engine_reorder_cpp", "page_eltwise_example_cpp", "page_eltwise_example_cpp_short", "page_getting_started_cpp", "page_gpu_opencl_interop_cpp", "page_inference_int8_matmul_cpp", "page_inference_int8_matmul_cpp_short", "page_inner_product_example_cpp", "page_inner_product_example_cpp_short", "page_layer_normalization_example_cpp", "page_layer_normalization_example_cpp_short", "page_legal_information", "page_lrn_example_cpp", "page_lrn_example_cpp_short", "page_lstm_example_cpp", "page_lstm_example_cpp_short", "page_matmul_example_cpp", "page_matmul_example_cpp_short", "page_memory_format_propagation_cpp", "page_performance_profiling_cpp", "page_pooling_example_cpp", "page_pooling_example_cpp_short", "page_prelu_example_cpp", "page_prelu_example_cpp_short", "page_reduction_example_cpp", "page_reduction_example_cpp_short", "page_reorder_example_cpp", "page_reorder_example_cpp_short", "page_resampling_example_cpp", "page_resampling_example_cpp_short", "page_rnn_training_f32_cpp", "page_shuffle_example_cpp", "page_shuffle_example_cpp_short", "page_softmax_example_cpp", "page_softmax_example_cpp_short", "page_sum_example_cpp", "page_sum_example_cpp_short", "page_sycl_interop_buffer_cpp", "page_todo", "performance_profiling_and_inspection", "programming_model", "struct_args_t", "struct_dnnl_augru_backward", "struct_dnnl_augru_backward_primitive_desc", "struct_dnnl_augru_forward", "struct_dnnl_augru_forward_primitive_desc", "struct_dnnl_batch_normalization_backward", "struct_dnnl_batch_normalization_backward_primitive_desc", "struct_dnnl_batch_normalization_forward", "struct_dnnl_batch_normalization_forward_primitive_desc", "struct_dnnl_binary", "struct_dnnl_binary_primitive_desc", "struct_dnnl_concat", "struct_dnnl_concat_primitive_desc", "struct_dnnl_convolution_backward_data", "struct_dnnl_convolution_backward_data_primitive_desc", "struct_dnnl_convolution_backward_weights", "struct_dnnl_convolution_backward_weights_primitive_desc", "struct_dnnl_convolution_forward", "struct_dnnl_convolution_forward_primitive_desc", "struct_dnnl_deconvolution_backward_data", "struct_dnnl_deconvolution_backward_data_primitive_desc", "struct_dnnl_deconvolution_backward_weights", "struct_dnnl_deconvolution_backward_weights_primitive_desc", "struct_dnnl_deconvolution_forward", "struct_dnnl_deconvolution_forward_primitive_desc", "struct_dnnl_eltwise_backward", "struct_dnnl_eltwise_backward_primitive_desc", "struct_dnnl_eltwise_forward", "struct_dnnl_eltwise_forward_primitive_desc", "struct_dnnl_engine", "struct_dnnl_engine-2", "struct_dnnl_error", "struct_dnnl_exec_arg_t", "struct_dnnl_graph_inplace_pair_t", "struct_dnnl_graph_logical_tensor_t", "struct_dnnl_gru_backward", "struct_dnnl_gru_backward_primitive_desc", "struct_dnnl_gru_forward", "struct_dnnl_gru_forward_primitive_desc", "struct_dnnl_handle", "struct_dnnl_handle_traits", "struct_dnnl_inner_product_backward_data", "struct_dnnl_inner_product_backward_data_primitive_desc", "struct_dnnl_inner_product_backward_weights", "struct_dnnl_inner_product_backward_weights_primitive_desc", "struct_dnnl_inner_product_forward", "struct_dnnl_inner_product_forward_primitive_desc", "struct_dnnl_layer_normalization_backward", "struct_dnnl_layer_normalization_backward_primitive_desc", "struct_dnnl_layer_normalization_forward", "struct_dnnl_layer_normalization_forward_primitive_desc", "struct_dnnl_lbr_augru_backward", "struct_dnnl_lbr_augru_backward_primitive_desc", "struct_dnnl_lbr_augru_forward", "struct_dnnl_lbr_augru_forward_primitive_desc", "struct_dnnl_lbr_gru_backward", "struct_dnnl_lbr_gru_backward_primitive_desc", "struct_dnnl_lbr_gru_forward", "struct_dnnl_lbr_gru_forward_primitive_desc", "struct_dnnl_lrn_backward", "struct_dnnl_lrn_backward_primitive_desc", "struct_dnnl_lrn_forward", "struct_dnnl_lrn_forward_primitive_desc", "struct_dnnl_lstm_backward", "struct_dnnl_lstm_backward_primitive_desc", "struct_dnnl_lstm_forward", "struct_dnnl_lstm_forward_primitive_desc", "struct_dnnl_matmul", "struct_dnnl_matmul_primitive_desc", "struct_dnnl_memory", "struct_dnnl_memory-2", "struct_dnnl_memory_desc", "struct_dnnl_memory_desc-2", "struct_dnnl_pooling_backward", "struct_dnnl_pooling_backward_primitive_desc", "struct_dnnl_pooling_forward", "struct_dnnl_pooling_forward_primitive_desc", "struct_dnnl_post_ops", "struct_dnnl_post_ops-2", "struct_dnnl_prelu_backward", "struct_dnnl_prelu_backward_primitive_desc", "struct_dnnl_prelu_forward", "struct_dnnl_prelu_forward_primitive_desc", "struct_dnnl_primitive", "struct_dnnl_primitive-2", "struct_dnnl_primitive_attr", "struct_dnnl_primitive_attr-2", "struct_dnnl_primitive_desc", "struct_dnnl_primitive_desc-2", "struct_dnnl_primitive_desc_base", "struct_dnnl_reduction", "struct_dnnl_reduction_primitive_desc", "struct_dnnl_reorder", "struct_dnnl_reorder_primitive_desc", "struct_dnnl_resampling_backward", "struct_dnnl_resampling_backward_primitive_desc", "struct_dnnl_resampling_forward", "struct_dnnl_resampling_forward_primitive_desc", "struct_dnnl_rnn_primitive_desc_base", "struct_dnnl_shuffle_backward", "struct_dnnl_shuffle_backward_primitive_desc", "struct_dnnl_shuffle_forward", "struct_dnnl_shuffle_forward_primitive_desc", "struct_dnnl_softmax_backward", "struct_dnnl_softmax_backward_primitive_desc", "struct_dnnl_softmax_forward", "struct_dnnl_softmax_forward_primitive_desc", "struct_dnnl_stream", "struct_dnnl_stream-2", "struct_dnnl_sum", "struct_dnnl_sum_primitive_desc", "struct_dnnl_threadpool_interop_threadpool_iface", "struct_dnnl_vanilla_rnn_backward", "struct_dnnl_vanilla_rnn_backward_primitive_desc", "struct_dnnl_vanilla_rnn_forward", "struct_dnnl_vanilla_rnn_forward_primitive_desc", "struct_dnnl_version_t", "struct_example_allows_unimplemented", "struct_gemm_dims_t", "supported_primitives"], "filenames": ["advanced_topics.rst", "build_and_link.rst", "class_dnnl_graph_allocator.rst", "class_dnnl_graph_compiled_partition.rst", "class_dnnl_graph_graph.rst", "class_dnnl_graph_logical_tensor.rst", "class_dnnl_graph_op.rst", "class_dnnl_graph_partition.rst", "class_dnnl_graph_tensor.rst", "dev_guide_attributes.rst", "dev_guide_attributes_fpmath_mode.rst", "dev_guide_attributes_post_ops.rst", "dev_guide_attributes_quantization.rst", "dev_guide_attributes_scratchpad.rst", "dev_guide_basic_concepts.rst", "dev_guide_batch_normalization.rst", "dev_guide_benchdnn.rst", "dev_guide_binary.rst", "dev_guide_build.rst", "dev_guide_build_options.rst", "dev_guide_c_and_cpp_apis.rst", "dev_guide_concat.rst", "dev_guide_conventions.rst", "dev_guide_convolution.rst", "dev_guide_cpu_dispatcher_control.rst", "dev_guide_cpu_isa_hints.rst", "dev_guide_data_types.rst", "dev_guide_dpcpp_interoperability.rst", "dev_guide_eltwise.rst", "dev_guide_examples.rst", "dev_guide_experimental.rst", "dev_guide_graph_basic_concepts.rst", "dev_guide_graph_dump.rst", "dev_guide_graph_fusion_patterns.rst", "dev_guide_graph_low_precision.rst", "dev_guide_inference.rst", "dev_guide_inference_and_training_aspects.rst", "dev_guide_inference_int8.rst", "dev_guide_inner_product.rst", "dev_guide_inspecting_jit.rst", "dev_guide_int8_computations.rst", "dev_guide_layer_normalization.rst", "dev_guide_link.rst", "dev_guide_lrn.rst", "dev_guide_matmul.rst", "dev_guide_op_abs.rst", "dev_guide_op_absbackward.rst", "dev_guide_op_add.rst", "dev_guide_op_avgpool.rst", "dev_guide_op_avgpoolbackward.rst", "dev_guide_op_batchnormforwardtraining.rst", "dev_guide_op_batchnorminference.rst", "dev_guide_op_batchnormtrainingbackward.rst", "dev_guide_op_biasadd.rst", "dev_guide_op_biasaddbackward.rst", "dev_guide_op_clamp.rst", "dev_guide_op_clampbackward.rst", "dev_guide_op_concat.rst", "dev_guide_op_convolution.rst", "dev_guide_op_convolutionbackwarddata.rst", "dev_guide_op_convolutionbackwardweights.rst", "dev_guide_op_convtranspose.rst", "dev_guide_op_convtransposebackwarddata.rst", "dev_guide_op_convtransposebackwardweights.rst", "dev_guide_op_dequantize.rst", "dev_guide_op_divide.rst", "dev_guide_op_dynamicdequantize.rst", "dev_guide_op_dynamicquantize.rst", "dev_guide_op_elu.rst", "dev_guide_op_elubackward.rst", "dev_guide_op_end.rst", "dev_guide_op_exp.rst", "dev_guide_op_gelu.rst", "dev_guide_op_gelubackward.rst", "dev_guide_op_hardsigmoid.rst", "dev_guide_op_hardsigmoidbackward.rst", "dev_guide_op_hardswish.rst", "dev_guide_op_hardswishbackward.rst", "dev_guide_op_interpolate.rst", "dev_guide_op_interpolatebackward.rst", "dev_guide_op_layernorm.rst", "dev_guide_op_layernormbackward.rst", "dev_guide_op_leakyrelu.rst", "dev_guide_op_log.rst", "dev_guide_op_logsoftmax.rst", "dev_guide_op_logsoftmaxbackward.rst", "dev_guide_op_matmul.rst", "dev_guide_op_maximum.rst", "dev_guide_op_maxpool.rst", "dev_guide_op_maxpoolbackward.rst", "dev_guide_op_minimum.rst", "dev_guide_op_mish.rst", "dev_guide_op_mishbackward.rst", "dev_guide_op_multiply.rst", "dev_guide_op_prelu.rst", "dev_guide_op_prelubackward.rst", "dev_guide_op_quantize.rst", "dev_guide_op_reciprocal.rst", "dev_guide_op_reducel1.rst", "dev_guide_op_reducel2.rst", "dev_guide_op_reducemax.rst", "dev_guide_op_reducemean.rst", "dev_guide_op_reducemin.rst", "dev_guide_op_reduceprod.rst", "dev_guide_op_reducesum.rst", "dev_guide_op_relu.rst", "dev_guide_op_relubackward.rst", "dev_guide_op_reorder.rst", "dev_guide_op_round.rst", "dev_guide_op_sigmoid.rst", "dev_guide_op_sigmoidbackward.rst", "dev_guide_op_softmax.rst", "dev_guide_op_softmaxbackward.rst", "dev_guide_op_softplus.rst", "dev_guide_op_softplusbackward.rst", "dev_guide_op_sqrt.rst", "dev_guide_op_sqrtbackward.rst", "dev_guide_op_square.rst", "dev_guide_op_squareddifference.rst", "dev_guide_op_staticreshape.rst", "dev_guide_op_statictranspose.rst", "dev_guide_op_subtract.rst", "dev_guide_op_tanh.rst", "dev_guide_op_tanhbackward.rst", "dev_guide_op_typecast.rst", "dev_guide_op_wildcard.rst", "dev_guide_opencl_interoperability.rst", "dev_guide_performance_settings.rst", "dev_guide_persistent_cache.rst", "dev_guide_pooling.rst", "dev_guide_prelu.rst", "dev_guide_primitive_cache.rst", "dev_guide_profilers.rst", "dev_guide_reduction.rst", "dev_guide_reorder.rst", "dev_guide_resampling.rst", "dev_guide_rnn.rst", "dev_guide_shuffle.rst", "dev_guide_softmax.rst", "dev_guide_sum.rst", "dev_guide_threadpool.rst", "dev_guide_training.rst", "dev_guide_training_bf16.rst", "dev_guide_transition_to_dnnl.rst", "dev_guide_understanding_memory_formats.rst", "dev_guide_verbose.rst", "dev_guide_vtune.rst", "enum_dnnl_alg_kind_t.rst", "enum_dnnl_algorithm.rst", "enum_dnnl_cpu_isa.rst", "enum_dnnl_cpu_isa_hints.rst", "enum_dnnl_cpu_isa_hints_t.rst", "enum_dnnl_cpu_isa_t.rst", "enum_dnnl_data_type_t.rst", "enum_dnnl_engine_kind.rst", "enum_dnnl_engine_kind_t.rst", "enum_dnnl_format_kind_t.rst", "enum_dnnl_format_tag_t.rst", "enum_dnnl_fpmath_mode.rst", "enum_dnnl_fpmath_mode_t.rst", "enum_dnnl_graph_layout_type_t.rst", "enum_dnnl_graph_logical_tensor_data_type.rst", "enum_dnnl_graph_logical_tensor_layout_type.rst", "enum_dnnl_graph_logical_tensor_property_type.rst", "enum_dnnl_graph_op_attr.rst", "enum_dnnl_graph_op_attr_t.rst", "enum_dnnl_graph_op_kind.rst", "enum_dnnl_graph_op_kind_t.rst", "enum_dnnl_graph_partition_policy.rst", "enum_dnnl_graph_partition_policy_t.rst", "enum_dnnl_graph_status.rst", "enum_dnnl_graph_tensor_property_t.rst", "enum_dnnl_memory_data_type.rst", "enum_dnnl_memory_format_kind.rst", "enum_dnnl_memory_format_tag.rst", "enum_dnnl_memory_sparse_encoding.rst", "enum_dnnl_normalization_flags.rst", "enum_dnnl_normalization_flags_t.rst", "enum_dnnl_ocl_interop_memory_kind.rst", "enum_dnnl_ocl_interop_memory_kind_t.rst", "enum_dnnl_primitive_kind.rst", "enum_dnnl_primitive_kind_t.rst", "enum_dnnl_prop_kind.rst", "enum_dnnl_prop_kind_t.rst", "enum_dnnl_query.rst", "enum_dnnl_query_t.rst", "enum_dnnl_rnn_direction.rst", "enum_dnnl_rnn_direction_t.rst", "enum_dnnl_rnn_flags.rst", "enum_dnnl_rnn_flags_t.rst", "enum_dnnl_scratchpad_mode.rst", "enum_dnnl_scratchpad_mode_t.rst", "enum_dnnl_sparse_encoding_t.rst", "enum_dnnl_status.rst", "enum_dnnl_status_t.rst", "enum_dnnl_stream_flags.rst", "enum_dnnl_stream_flags_t.rst", "enum_dnnl_sycl_interop_memory_kind.rst", "enum_dnnl_sycl_interop_memory_kind_t.rst", "example_augru.cpp.rst", "example_batch_normalization.cpp.rst", "example_binary.cpp.rst", "example_bnorm_u8_via_binary_postops.cpp.rst", "example_cnn_inference_f32.c.rst", "example_cnn_inference_f32.cpp.rst", "example_cnn_inference_int8.cpp.rst", "example_cnn_training_bf16.cpp.rst", "example_cnn_training_f32.cpp.rst", "example_concat.cpp.rst", "example_convolution.cpp.rst", "example_cpu_cnn_training_f32.c.rst", "example_cpu_matmul_quantization.cpp.rst", "example_cpu_rnn_inference_f32.cpp.rst", "example_cpu_rnn_inference_int8.cpp.rst", "example_cpu_sgemm_and_matmul.cpp.rst", "example_cross_engine_reorder.c.rst", "example_cross_engine_reorder.cpp.rst", "example_eltwise.cpp.rst", "example_getting_started.cpp.rst", "example_gpu_opencl_interop.cpp.rst", "example_inference_int8_matmul.cpp.rst", "example_inner_product.cpp.rst", "example_layer_normalization.cpp.rst", "example_lrn.cpp.rst", "example_lstm.cpp.rst", "example_matmul.cpp.rst", "example_memory_format_propagation.cpp.rst", "example_performance_profiling.cpp.rst", "example_pooling.cpp.rst", "example_prelu.cpp.rst", "example_reduction.cpp.rst", "example_reorder.cpp.rst", "example_resampling.cpp.rst", "example_rnn_training_f32.cpp.rst", "example_shuffle.cpp.rst", "example_softmax.cpp.rst", "example_sum.cpp.rst", "example_sycl_interop_buffer.cpp.rst", "global.rst", "graph_extension.rst", "graph_programming_model.rst", "graph_supported_operations.rst", "group_dnnl_api.rst", "group_dnnl_api_attributes.rst", "group_dnnl_api_batch_normalization.rst", "group_dnnl_api_binary.rst", "group_dnnl_api_blas.rst", "group_dnnl_api_common.rst", "group_dnnl_api_concat.rst", "group_dnnl_api_convolution.rst", "group_dnnl_api_data_types.rst", "group_dnnl_api_deconvolution.rst", "group_dnnl_api_eltwise.rst", "group_dnnl_api_engine.rst", "group_dnnl_api_fpmath_mode.rst", "group_dnnl_api_inner_product.rst", "group_dnnl_api_interop.rst", "group_dnnl_api_layer_normalization.rst", "group_dnnl_api_lrn.rst", "group_dnnl_api_matmul.rst", "group_dnnl_api_memory.rst", "group_dnnl_api_ocl_interop.rst", "group_dnnl_api_pooling.rst", "group_dnnl_api_prelu.rst", "group_dnnl_api_primitive_cache.rst", "group_dnnl_api_primitives.rst", "group_dnnl_api_primitives_common.rst", "group_dnnl_api_reduction.rst", "group_dnnl_api_reorder.rst", "group_dnnl_api_resampling.rst", "group_dnnl_api_rnn.rst", "group_dnnl_api_service.rst", "group_dnnl_api_shuffle.rst", "group_dnnl_api_softmax.rst", "group_dnnl_api_stream.rst", "group_dnnl_api_sum.rst", "group_dnnl_api_sycl_interop.rst", "group_dnnl_api_threadpool_interop.rst", "group_dnnl_api_utils.rst", "group_dnnl_graph_api.rst", "group_dnnl_graph_api_allocator.rst", "group_dnnl_graph_api_compiled_partition.rst", "group_dnnl_graph_api_compiled_partition_cache.rst", "group_dnnl_graph_api_constant_tensor_cache.rst", "group_dnnl_graph_api_engine.rst", "group_dnnl_graph_api_graph.rst", "group_dnnl_graph_api_interop.rst", "group_dnnl_graph_api_logical_tensor.rst", "group_dnnl_graph_api_op.rst", "group_dnnl_graph_api_partition.rst", "group_dnnl_graph_api_status.rst", "group_dnnl_graph_api_sycl_interop.rst", "group_dnnl_graph_api_tensor.rst", "group_dnnl_graph_api_utils.rst", "index.rst", "interop_with_dpcpp_and_opencl.rst", "namespace_dnnl.rst", "namespace_dnnl_graph.rst", "namespace_dnnl_graph_sycl_interop.rst", "namespace_dnnl_ocl_interop.rst", "namespace_dnnl_sycl_interop.rst", "namespace_dnnl_threadpool_interop.rst", "namespace_oneapi.rst", "namespace_std.rst", "namespace_sycl.rst", "orphans.rst", "page_augru_example_cpp.rst", "page_augru_example_cpp_short.rst", "page_batch_normalization_example_cpp.rst", "page_batch_normalization_example_cpp_short.rst", "page_binary_example_cpp.rst", "page_binary_example_cpp_short.rst", "page_bnorm_u8_via_binary_postops_cpp.rst", "page_bnorm_u8_via_binary_postops_cpp_short.rst", "page_cnn_inference_f32_c.rst", "page_cnn_inference_f32_cpp.rst", "page_cnn_inference_int8_cpp.rst", "page_cnn_training_bf16_cpp.rst", "page_cnn_training_f32_cpp.rst", "page_concat_example_cpp.rst", "page_concat_example_cpp_short.rst", "page_convolution_example_cpp.rst", "page_convolution_example_cpp_short.rst", "page_cpu_cnn_training_f32_c.rst", "page_cpu_matmul_quantization_cpp.rst", "page_cpu_matmul_quantization_cpp_short.rst", "page_cpu_rnn_inference_f32_cpp.rst", "page_cpu_rnn_inference_int8_cpp.rst", "page_cpu_sgemm_and_matmul_cpp.rst", "page_cpu_sgemm_and_matmul_cpp_short.rst", "page_cross_engine_reorder_c.rst", "page_cross_engine_reorder_cpp.rst", "page_eltwise_example_cpp.rst", "page_eltwise_example_cpp_short.rst", "page_getting_started_cpp.rst", "page_gpu_opencl_interop_cpp.rst", "page_inference_int8_matmul_cpp.rst", "page_inference_int8_matmul_cpp_short.rst", "page_inner_product_example_cpp.rst", "page_inner_product_example_cpp_short.rst", "page_layer_normalization_example_cpp.rst", "page_layer_normalization_example_cpp_short.rst", "page_legal_information.rst", "page_lrn_example_cpp.rst", "page_lrn_example_cpp_short.rst", "page_lstm_example_cpp.rst", "page_lstm_example_cpp_short.rst", "page_matmul_example_cpp.rst", "page_matmul_example_cpp_short.rst", "page_memory_format_propagation_cpp.rst", "page_performance_profiling_cpp.rst", "page_pooling_example_cpp.rst", "page_pooling_example_cpp_short.rst", "page_prelu_example_cpp.rst", "page_prelu_example_cpp_short.rst", "page_reduction_example_cpp.rst", "page_reduction_example_cpp_short.rst", "page_reorder_example_cpp.rst", "page_reorder_example_cpp_short.rst", "page_resampling_example_cpp.rst", "page_resampling_example_cpp_short.rst", "page_rnn_training_f32_cpp.rst", "page_shuffle_example_cpp.rst", "page_shuffle_example_cpp_short.rst", "page_softmax_example_cpp.rst", "page_softmax_example_cpp_short.rst", "page_sum_example_cpp.rst", "page_sum_example_cpp_short.rst", "page_sycl_interop_buffer_cpp.rst", "page_todo.rst", "performance_profiling_and_inspection.rst", "programming_model.rst", "struct_args_t.rst", "struct_dnnl_augru_backward.rst", "struct_dnnl_augru_backward_primitive_desc.rst", "struct_dnnl_augru_forward.rst", "struct_dnnl_augru_forward_primitive_desc.rst", "struct_dnnl_batch_normalization_backward.rst", "struct_dnnl_batch_normalization_backward_primitive_desc.rst", "struct_dnnl_batch_normalization_forward.rst", "struct_dnnl_batch_normalization_forward_primitive_desc.rst", "struct_dnnl_binary.rst", "struct_dnnl_binary_primitive_desc.rst", "struct_dnnl_concat.rst", "struct_dnnl_concat_primitive_desc.rst", "struct_dnnl_convolution_backward_data.rst", "struct_dnnl_convolution_backward_data_primitive_desc.rst", "struct_dnnl_convolution_backward_weights.rst", "struct_dnnl_convolution_backward_weights_primitive_desc.rst", "struct_dnnl_convolution_forward.rst", "struct_dnnl_convolution_forward_primitive_desc.rst", "struct_dnnl_deconvolution_backward_data.rst", "struct_dnnl_deconvolution_backward_data_primitive_desc.rst", "struct_dnnl_deconvolution_backward_weights.rst", "struct_dnnl_deconvolution_backward_weights_primitive_desc.rst", "struct_dnnl_deconvolution_forward.rst", "struct_dnnl_deconvolution_forward_primitive_desc.rst", "struct_dnnl_eltwise_backward.rst", "struct_dnnl_eltwise_backward_primitive_desc.rst", "struct_dnnl_eltwise_forward.rst", "struct_dnnl_eltwise_forward_primitive_desc.rst", "struct_dnnl_engine.rst", "struct_dnnl_engine-2.rst", "struct_dnnl_error.rst", "struct_dnnl_exec_arg_t.rst", "struct_dnnl_graph_inplace_pair_t.rst", "struct_dnnl_graph_logical_tensor_t.rst", "struct_dnnl_gru_backward.rst", "struct_dnnl_gru_backward_primitive_desc.rst", "struct_dnnl_gru_forward.rst", "struct_dnnl_gru_forward_primitive_desc.rst", "struct_dnnl_handle.rst", "struct_dnnl_handle_traits.rst", "struct_dnnl_inner_product_backward_data.rst", "struct_dnnl_inner_product_backward_data_primitive_desc.rst", "struct_dnnl_inner_product_backward_weights.rst", "struct_dnnl_inner_product_backward_weights_primitive_desc.rst", "struct_dnnl_inner_product_forward.rst", "struct_dnnl_inner_product_forward_primitive_desc.rst", "struct_dnnl_layer_normalization_backward.rst", "struct_dnnl_layer_normalization_backward_primitive_desc.rst", "struct_dnnl_layer_normalization_forward.rst", "struct_dnnl_layer_normalization_forward_primitive_desc.rst", "struct_dnnl_lbr_augru_backward.rst", "struct_dnnl_lbr_augru_backward_primitive_desc.rst", "struct_dnnl_lbr_augru_forward.rst", "struct_dnnl_lbr_augru_forward_primitive_desc.rst", "struct_dnnl_lbr_gru_backward.rst", "struct_dnnl_lbr_gru_backward_primitive_desc.rst", "struct_dnnl_lbr_gru_forward.rst", "struct_dnnl_lbr_gru_forward_primitive_desc.rst", "struct_dnnl_lrn_backward.rst", "struct_dnnl_lrn_backward_primitive_desc.rst", "struct_dnnl_lrn_forward.rst", "struct_dnnl_lrn_forward_primitive_desc.rst", "struct_dnnl_lstm_backward.rst", "struct_dnnl_lstm_backward_primitive_desc.rst", "struct_dnnl_lstm_forward.rst", "struct_dnnl_lstm_forward_primitive_desc.rst", "struct_dnnl_matmul.rst", "struct_dnnl_matmul_primitive_desc.rst", "struct_dnnl_memory.rst", "struct_dnnl_memory-2.rst", "struct_dnnl_memory_desc.rst", "struct_dnnl_memory_desc-2.rst", "struct_dnnl_pooling_backward.rst", "struct_dnnl_pooling_backward_primitive_desc.rst", "struct_dnnl_pooling_forward.rst", "struct_dnnl_pooling_forward_primitive_desc.rst", "struct_dnnl_post_ops.rst", "struct_dnnl_post_ops-2.rst", "struct_dnnl_prelu_backward.rst", "struct_dnnl_prelu_backward_primitive_desc.rst", "struct_dnnl_prelu_forward.rst", "struct_dnnl_prelu_forward_primitive_desc.rst", "struct_dnnl_primitive.rst", "struct_dnnl_primitive-2.rst", "struct_dnnl_primitive_attr.rst", "struct_dnnl_primitive_attr-2.rst", "struct_dnnl_primitive_desc.rst", "struct_dnnl_primitive_desc-2.rst", "struct_dnnl_primitive_desc_base.rst", "struct_dnnl_reduction.rst", "struct_dnnl_reduction_primitive_desc.rst", "struct_dnnl_reorder.rst", "struct_dnnl_reorder_primitive_desc.rst", "struct_dnnl_resampling_backward.rst", "struct_dnnl_resampling_backward_primitive_desc.rst", "struct_dnnl_resampling_forward.rst", "struct_dnnl_resampling_forward_primitive_desc.rst", "struct_dnnl_rnn_primitive_desc_base.rst", "struct_dnnl_shuffle_backward.rst", "struct_dnnl_shuffle_backward_primitive_desc.rst", "struct_dnnl_shuffle_forward.rst", "struct_dnnl_shuffle_forward_primitive_desc.rst", "struct_dnnl_softmax_backward.rst", "struct_dnnl_softmax_backward_primitive_desc.rst", "struct_dnnl_softmax_forward.rst", "struct_dnnl_softmax_forward_primitive_desc.rst", "struct_dnnl_stream.rst", "struct_dnnl_stream-2.rst", "struct_dnnl_sum.rst", "struct_dnnl_sum_primitive_desc.rst", "struct_dnnl_threadpool_interop_threadpool_iface.rst", "struct_dnnl_vanilla_rnn_backward.rst", "struct_dnnl_vanilla_rnn_backward_primitive_desc.rst", "struct_dnnl_vanilla_rnn_forward.rst", "struct_dnnl_vanilla_rnn_forward_primitive_desc.rst", "struct_dnnl_version_t.rst", "struct_example_allows_unimplemented.rst", "struct_gemm_dims_t.rst", "supported_primitives.rst"], "titles": ["Advanced Topics", "Building and Linking", "class dnnl::graph::allocator", "class dnnl::graph::compiled_partition", "class dnnl::graph::graph", "class dnnl::graph::logical_tensor", "class dnnl::graph::op", "class dnnl::graph::partition", "class dnnl::graph::tensor", "Primitive Attributes", "Primitive Attributes: floating-point math mode", "Primitive Attributes: Post-ops", "Primitive Attributes: Quantization", "Primitive Attributes: Scratchpad", "Basic Concepts", "Batch Normalization", "Benchmarking Performance", "Binary", "Build from Source", "Build Options", "API", "Concat", "Naming Conventions", "Convolution", "CPU Dispatcher Control", "CPU ISA Hints", "Data Types", "DPC++ Interoperability", "Eltwise", "Examples", "Experimental features", "Basic Concepts", "Graph Dump", "Supported Fusion Patterns", "Low Precision", "Inference", "Inference and Training Aspects", "Int8 Inference", "Inner Product", "Inspecting JIT Code", "Nuances of int8 Computations", "Layer Normalization", "Linking to the Library", "Local Response Normalization (LRN)", "Matrix Multiplication", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "HardSigmoid", "HardSigmoidBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "Maximum", "MaxPool", "MaxPoolBackward", "Minimum", "Mish", "MishBackward", "Multiply", "PReLU", "PReLUBackward", "Quantize", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReLU", "ReLUBackward", "Reorder", "Round", "Sigmoid", "SigmoidBackward", "Softmax", "SoftmaxBackward", "SoftPlus", "SoftPlusBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "OpenCL Interoperability", "Configuring oneDNN for Benchmarking", "Persistent Cache", "Pooling", "PReLU", "Primitive Cache", "Profiling oneDNN Performance", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sum", "Using oneDNN with Threadpool-Based Threading", "Training", "Bfloat16 Training", "Transitioning from Intel MKL-DNN to oneDNN", "Understanding Memory Formats", "Verbose Mode", "Profiling with VTune(TM) Amplifier", "enum dnnl_alg_kind_t", "enum dnnl::algorithm", "enum dnnl::cpu_isa", "enum dnnl::cpu_isa_hints", "enum dnnl_cpu_isa_hints_t", "enum dnnl_cpu_isa_t", "enum dnnl_data_type_t", "enum dnnl::engine::kind", "enum dnnl_engine_kind_t", "enum dnnl_format_kind_t", "enum dnnl_format_tag_t", "enum dnnl::fpmath_mode", "enum dnnl_fpmath_mode_t", "enum dnnl_graph_layout_type_t", "enum dnnl::graph::logical_tensor::data_type", "enum dnnl::graph::logical_tensor::layout_type", "enum dnnl::graph::logical_tensor::property_type", "enum dnnl::graph::op::attr", "enum dnnl_graph_op_attr_t", "enum dnnl::graph::op::kind", "enum dnnl_graph_op_kind_t", "enum dnnl::graph::partition::policy", "enum dnnl_graph_partition_policy_t", "enum dnnl::graph::status", "enum dnnl_graph_tensor_property_t", "enum dnnl::memory::data_type", "enum dnnl::memory::format_kind", "enum dnnl::memory::format_tag", "enum dnnl::memory::sparse_encoding", "enum dnnl::normalization_flags", "enum dnnl_normalization_flags_t", "enum dnnl::ocl_interop::memory_kind", "enum dnnl_ocl_interop_memory_kind_t", "enum dnnl::primitive::kind", "enum dnnl_primitive_kind_t", "enum dnnl::prop_kind", "enum dnnl_prop_kind_t", "enum dnnl::query", "enum dnnl_query_t", "enum dnnl::rnn_direction", "enum dnnl_rnn_direction_t", "enum dnnl::rnn_flags", "enum dnnl_rnn_flags_t", "enum dnnl::scratchpad_mode", "enum dnnl_scratchpad_mode_t", "enum dnnl_sparse_encoding_t", "enum dnnl::status", "enum dnnl_status_t", "enum dnnl::stream::flags", "enum dnnl_stream_flags_t", "enum dnnl::sycl_interop::memory_kind", "enum dnnl_sycl_interop_memory_kind_t", "augru.cpp", "batch_normalization.cpp", "binary.cpp", "bnorm_u8_via_binary_postops.cpp", "cnn_inference_f32.c", "cnn_inference_f32.cpp", "cnn_inference_int8.cpp", "cnn_training_bf16.cpp", "cnn_training_f32.cpp", "concat.cpp", "convolution.cpp", "cpu_cnn_training_f32.c", "cpu_matmul_quantization.cpp", "cpu_rnn_inference_f32.cpp", "cpu_rnn_inference_int8.cpp", "cpu_sgemm_and_matmul.cpp", "cross_engine_reorder.c", "cross_engine_reorder.cpp", "eltwise.cpp", "getting_started.cpp", "gpu_opencl_interop.cpp", "inference_int8_matmul.cpp", "inner_product.cpp", "layer_normalization.cpp", "lrn.cpp", "lstm.cpp", "matmul.cpp", "memory_format_propagation.cpp", "performance_profiling.cpp", "pooling.cpp", "prelu.cpp", "reduction.cpp", "reorder.cpp", "resampling.cpp", "rnn_training_f32.cpp", "shuffle.cpp", "softmax.cpp", "sum.cpp", "sycl_interop_buffer.cpp", "Global Namespace", "Graph Extension", "Programming Model", "Supported Operations", "oneDNN API", "Attributes", "Batch Normalization", "Binary", "BLAS functions", "Common API", "Concat", "Convolution", "Data types", "Deconvolution", "Eltwise", "Engine", "Floating-point Math Mode", "Inner Product", "Runtime interoperability API", "Layer Normalization", "LRN", "Matrix Multiplication", "Memory", "OpenCL interoperability API", "Pooling", "PReLU", "Primitive Cache", "Primitives", "Common", "Reduction", "Reorder", "Resampling", "RNN", "Service", "Shuffle", "Softmax", "Stream", "Sum", "SYCL interoperability API", "Threadpool interoperability API", "Utilities", "Graph API", "Allocator", "Compiled Partition", "Compiled Partition Cache", "Constant Tensor Cache", "Engine", "Graph", "Runtime interoperability API", "Logical Tensor", "Op", "Partition", "Status", "SYCL interoperability API", "Tensor", "Utilities", "oneAPI Deep Neural Network Library Developer Guide and Reference", "Interoperability with DPC++ and OpenCL", "namespace dnnl", "namespace dnnl::graph", "namespace dnnl::graph::sycl_interop", "namespace dnnl::ocl_interop", "namespace dnnl::sycl_interop", "namespace dnnl::threadpool_interop", "namespace oneapi", "namespace std", "namespace sycl", "Orphans", "AUGRU RNN Primitive Example", "&lt;Untitled&gt;", "Batch Normalization Primitive Example", "&lt;Untitled&gt;", "Binary Primitive Example", "&lt;Untitled&gt;", "Bnorm u8 by binary post-ops example", "&lt;Untitled&gt;", "CNN f32 inference example", "CNN f32 inference example", "CNN int8 inference example", "CNN bf16 training example", "CNN f32 training example", "Concat Primitive Example", "&lt;Untitled&gt;", "Convolution Primitive Example", "&lt;Untitled&gt;", "CNN f32 training example", "MatMul Tutorial: Quantization", "&lt;Untitled&gt;", "RNN f32 inference example", "RNN int8 inference example", "MatMul Tutorial: Comparison with SGEMM", "&lt;Untitled&gt;", "Reorder between CPU and GPU engines", "Reorder between CPU and GPU engines", "Element-Wise Primitive Example", "&lt;Untitled&gt;", "Getting started", "Getting started on GPU with OpenCL extensions API", "MatMul Tutorial: INT8 Inference", "&lt;Untitled&gt;", "Inner Product Primitive Example", "&lt;Untitled&gt;", "Layer Normalization Primitive Example", "&lt;Untitled&gt;", "Legal Information", "Local Response Normalization Primitive Example", "&lt;Untitled&gt;", "LSTM RNN Primitive Example", "&lt;Untitled&gt;", "Matmul Primitive Example", "&lt;Untitled&gt;", "Memory Format Propagation", "Performance Profiling Example", "Pooling Primitive Example", "&lt;Untitled&gt;", "Primitive Example", "&lt;Untitled&gt;", "Reduction Primitive Example", "&lt;Untitled&gt;", "Reorder Primitive Example", "&lt;Untitled&gt;", "Resampling Primitive Example", "&lt;Untitled&gt;", "RNN f32 training example", "Shuffle Primitive Example", "&lt;Untitled&gt;", "Softmax Primitive Example", "&lt;Untitled&gt;", "Sum Primitive Example", "&lt;Untitled&gt;", "Getting started on both CPU and GPU with SYCL extensions API", "Todo List", "Performance Profiling and Inspection", "Programming Model", "struct args_t", "struct dnnl::augru_backward", "struct dnnl::augru_backward::primitive_desc", "struct dnnl::augru_forward", "struct dnnl::augru_forward::primitive_desc", "struct dnnl::batch_normalization_backward", "struct dnnl::batch_normalization_backward::primitive_desc", "struct dnnl::batch_normalization_forward", "struct dnnl::batch_normalization_forward::primitive_desc", "struct dnnl::binary", "struct dnnl::binary::primitive_desc", "struct dnnl::concat", "struct dnnl::concat::primitive_desc", "struct dnnl::convolution_backward_data", "struct dnnl::convolution_backward_data::primitive_desc", "struct dnnl::convolution_backward_weights", "struct dnnl::convolution_backward_weights::primitive_desc", "struct dnnl::convolution_forward", "struct dnnl::convolution_forward::primitive_desc", "struct dnnl::deconvolution_backward_data", "struct dnnl::deconvolution_backward_data::primitive_desc", "struct dnnl::deconvolution_backward_weights", "struct dnnl::deconvolution_backward_weights::primitive_desc", "struct dnnl::deconvolution_forward", "struct dnnl::deconvolution_forward::primitive_desc", "struct dnnl::eltwise_backward", "struct dnnl::eltwise_backward::primitive_desc", "struct dnnl::eltwise_forward", "struct dnnl::eltwise_forward::primitive_desc", "struct dnnl_engine", "struct dnnl::engine", "struct dnnl::error", "struct dnnl_exec_arg_t", "struct dnnl_graph_inplace_pair_t", "struct dnnl_graph_logical_tensor_t", "struct dnnl::gru_backward", "struct dnnl::gru_backward::primitive_desc", "struct dnnl::gru_forward", "struct dnnl::gru_forward::primitive_desc", "template struct dnnl::handle", "template struct dnnl::handle_traits", "struct dnnl::inner_product_backward_data", "struct dnnl::inner_product_backward_data::primitive_desc", "struct dnnl::inner_product_backward_weights", "struct dnnl::inner_product_backward_weights::primitive_desc", "struct dnnl::inner_product_forward", "struct dnnl::inner_product_forward::primitive_desc", "struct dnnl::layer_normalization_backward", "struct dnnl::layer_normalization_backward::primitive_desc", "struct dnnl::layer_normalization_forward", "struct dnnl::layer_normalization_forward::primitive_desc", "struct dnnl::lbr_augru_backward", "struct dnnl::lbr_augru_backward::primitive_desc", "struct dnnl::lbr_augru_forward", "struct dnnl::lbr_augru_forward::primitive_desc", "struct dnnl::lbr_gru_backward", "struct dnnl::lbr_gru_backward::primitive_desc", "struct dnnl::lbr_gru_forward", "struct dnnl::lbr_gru_forward::primitive_desc", "struct dnnl::lrn_backward", "struct dnnl::lrn_backward::primitive_desc", "struct dnnl::lrn_forward", "struct dnnl::lrn_forward::primitive_desc", "struct dnnl::lstm_backward", "struct dnnl::lstm_backward::primitive_desc", "struct dnnl::lstm_forward", "struct dnnl::lstm_forward::primitive_desc", "struct dnnl::matmul", "struct dnnl::matmul::primitive_desc", "struct dnnl_memory", "struct dnnl::memory", "struct dnnl_memory_desc", "struct dnnl::memory::desc", "struct dnnl::pooling_backward", "struct dnnl::pooling_backward::primitive_desc", "struct dnnl::pooling_forward", "struct dnnl::pooling_forward::primitive_desc", "struct dnnl_post_ops", "struct dnnl::post_ops", "struct dnnl::prelu_backward", "struct dnnl::prelu_backward::primitive_desc", "struct dnnl::prelu_forward", "struct dnnl::prelu_forward::primitive_desc", "struct dnnl_primitive", "struct dnnl::primitive", "struct dnnl_primitive_attr", "struct dnnl::primitive_attr", "struct dnnl_primitive_desc", "struct dnnl::primitive_desc", "struct dnnl::primitive_desc_base", "struct dnnl::reduction", "struct dnnl::reduction::primitive_desc", "struct dnnl::reorder", "struct dnnl::reorder::primitive_desc", "struct dnnl::resampling_backward", "struct dnnl::resampling_backward::primitive_desc", "struct dnnl::resampling_forward", "struct dnnl::resampling_forward::primitive_desc", "struct dnnl::rnn_primitive_desc_base", "struct dnnl::shuffle_backward", "struct dnnl::shuffle_backward::primitive_desc", "struct dnnl::shuffle_forward", "struct dnnl::shuffle_forward::primitive_desc", "struct dnnl::softmax_backward", "struct dnnl::softmax_backward::primitive_desc", "struct dnnl::softmax_forward", "struct dnnl::softmax_forward::primitive_desc", "struct dnnl_stream", "struct dnnl::stream", "struct dnnl::sum", "struct dnnl::sum::primitive_desc", "struct dnnl::threadpool_interop::threadpool_iface", "struct dnnl::vanilla_rnn_backward", "struct dnnl::vanilla_rnn_backward::primitive_desc", "struct dnnl::vanilla_rnn_forward", "struct dnnl::vanilla_rnn_forward::primitive_desc", "struct dnnl_version_t", "struct example_allows_unimplemented", "struct gemm_dims_t", "Supported Primitives"], "terms": {"transit": 0, "from": [0, 1, 3, 4, 7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 23, 28, 31, 33, 35, 36, 37, 38, 40, 42, 43, 54, 66, 67, 78, 79, 80, 81, 84, 85, 86, 94, 95, 98, 99, 100, 101, 102, 103, 104, 107, 119, 120, 124, 127, 128, 129, 131, 132, 134, 136, 137, 144, 145, 147, 148, 157, 174, 177, 186, 187, 190, 191, 199, 200, 201, 202, 203, 206, 207, 209, 210, 211, 212, 213, 216, 217, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 253, 254, 257, 260, 261, 266, 270, 281, 285, 289, 298, 299, 300, 306, 307, 308, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 332, 334, 335, 336, 338, 339, 340, 343, 345, 346, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "intel": [0, 19, 23, 24, 39, 126, 127, 142, 145, 149, 152, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 294, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 335, 336, 338, 340, 342, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368], "mkl": 0, "dnn": [0, 26, 144], "onednn": [0, 10, 11, 12, 13, 14, 16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 126, 128, 131, 134, 135, 136, 142, 144, 145, 146, 157, 211, 214, 218, 219, 227, 237, 261, 271, 277, 284, 287, 291, 294, 296, 299, 301, 316, 324, 326, 327, 328, 349, 350, 370, 403, 406, 411, 412, 483], "understand": [0, 31, 157, 260, 349], "memori": [0, 3, 5, 8, 9, 11, 12, 15, 17, 20, 21, 23, 28, 29, 30, 31, 35, 36, 37, 38, 40, 41, 43, 44, 119, 120, 127, 129, 130, 132, 133, 134, 135, 136, 137, 139, 142, 145, 147, 148, 153, 156, 157, 170, 178, 179, 184, 185, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 248, 249, 251, 252, 255, 257, 258, 259, 261, 262, 263, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 280, 281, 287, 291, 292, 296, 299, 300, 301, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 332, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 367, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 484, 485, 486, 487, 490], "format": [0, 11, 12, 14, 15, 17, 21, 23, 28, 29, 30, 35, 36, 37, 38, 41, 43, 44, 58, 59, 60, 61, 62, 63, 78, 79, 94, 95, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 145, 156, 157, 173, 174, 184, 185, 203, 204, 206, 207, 210, 211, 218, 220, 221, 226, 227, 233, 248, 260, 266, 305, 306, 307, 308, 309, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 334, 335, 336, 338, 339, 345, 346, 361, 366, 367, 368, 371, 374, 378, 384, 386, 388, 392, 394, 398, 408, 414, 416, 420, 424, 428, 432, 436, 442, 444, 446, 452, 467, 472, 476, 485], "nuanc": [0, 12, 21, 26, 246, 277, 301], "int8": [0, 9, 11, 12, 21, 23, 26, 29, 36, 38, 41, 44, 64, 96, 133, 136, 138, 205, 211, 213, 220, 243, 246, 277, 301, 305, 324, 337, 458], "comput": [0, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 34, 35, 36, 37, 38, 41, 43, 44, 46, 48, 50, 54, 56, 58, 59, 60, 61, 62, 63, 69, 73, 75, 77, 79, 80, 81, 85, 86, 88, 92, 95, 106, 110, 112, 114, 116, 123, 124, 125, 127, 129, 130, 132, 135, 136, 137, 138, 140, 142, 144, 145, 150, 151, 163, 171, 176, 177, 182, 183, 199, 200, 201, 202, 208, 209, 211, 212, 213, 217, 218, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244, 246, 250, 253, 255, 257, 260, 261, 265, 266, 267, 269, 270, 273, 274, 276, 277, 281, 285, 288, 289, 299, 300, 301, 306, 308, 310, 312, 315, 316, 319, 321, 324, 325, 326, 327, 331, 332, 334, 335, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 378, 405, 420, 450, 456, 464, 476, 478], "primit": [0, 15, 17, 19, 21, 22, 23, 26, 27, 28, 31, 35, 36, 37, 38, 40, 41, 43, 51, 58, 107, 126, 129, 130, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 147, 156, 157, 170, 173, 174, 176, 177, 181, 182, 183, 184, 185, 186, 187, 190, 191, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 294, 296, 299, 300, 305, 307, 309, 311, 312, 314, 315, 316, 317, 318, 320, 322, 323, 324, 326, 327, 328, 329, 333, 336, 337, 339, 341, 344, 346, 348, 350, 352, 354, 356, 358, 360, 361, 363, 365, 367, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "cach": [0, 3, 14, 19, 35, 44, 132, 144, 163, 171, 184, 185, 242, 261, 266, 279, 281, 299, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 405, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 445, 447, 451, 453, 456, 461, 462, 464, 466, 468, 471, 473, 475, 477, 481, 484, 486], "persist": [0, 131], "us": [0, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 50, 56, 58, 59, 64, 65, 66, 67, 69, 70, 78, 79, 80, 81, 87, 90, 93, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 110, 116, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 147, 148, 150, 151, 153, 156, 157, 163, 168, 169, 171, 172, 173, 174, 175, 176, 177, 181, 184, 185, 190, 191, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 280, 281, 285, 287, 289, 291, 292, 294, 298, 299, 300, 301, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 341, 342, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 405, 406, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 449, 450, 452, 454, 456, 458, 463, 464, 465, 467, 469, 472, 474, 476, 478, 480, 482, 485, 487], "threadpool": [0, 238, 242, 256, 271, 301, 483], "base": [0, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24, 26, 27, 28, 35, 36, 38, 39, 40, 41, 43, 81, 82, 91, 94, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138, 142, 143, 145, 147, 148, 233, 277, 301, 315, 334, 349, 361, 384, 406, 411, 449, 456, 460, 461, 465, 470, 482], "thread": [0, 13, 14, 23, 132, 190, 191, 277, 301, 350, 483], "experiment": [0, 15, 19, 294], "featur": [0, 11, 15, 19, 20, 24, 25, 32, 40, 41, 131, 144, 145, 150, 151, 212, 213, 233, 243, 271, 316, 334, 361, 450], "sourc": [1, 9, 11, 12, 13, 19, 21, 22, 23, 28, 30, 31, 35, 36, 37, 38, 40, 44, 97, 98, 99, 100, 101, 102, 103, 104, 130, 134, 135, 137, 142, 184, 185, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 244, 245, 248, 249, 251, 252, 255, 257, 258, 259, 260, 262, 263, 266, 267, 268, 269, 272, 273, 275, 294, 306, 308, 309, 310, 316, 317, 318, 319, 320, 321, 323, 324, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 362, 364, 366, 367, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 461, 463, 464, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487, 488], "option": [1, 13, 15, 16, 18, 24, 25, 30, 32, 40, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 123, 125, 127, 131, 132, 136, 140, 143, 145, 177, 190, 191, 199, 224, 244, 260, 266, 271, 291, 298, 299, 300, 306, 328, 334, 345, 350, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 444, 446, 448, 452, 454, 460, 463, 464, 465, 467, 469, 472, 474, 476, 478, 482, 485, 487], "librari": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 20, 23, 24, 27, 30, 31, 32, 33, 35, 36, 37, 38, 39, 64, 66, 67, 86, 96, 125, 126, 127, 128, 129, 137, 140, 143, 145, 149, 152, 160, 162, 163, 170, 171, 176, 180, 181, 190, 191, 193, 194, 216, 218, 260, 261, 271, 276, 281, 283, 285, 287, 289, 290, 299, 300, 331, 334, 335, 336, 349, 350, 368, 402, 405, 406, 411, 442, 456, 480, 483], "more": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 19, 21, 23, 34, 36, 37, 38, 119, 132, 133, 136, 139, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 211, 243, 244, 245, 246, 248, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 285, 287, 288, 289, 291, 292, 298, 299, 300, 301, 302, 315, 324, 328, 331, 334, 336, 350, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488], "includ": [2, 3, 4, 5, 6, 7, 8, 12, 14, 15, 17, 19, 21, 23, 26, 31, 33, 34, 35, 38, 41, 42, 44, 132, 134, 136, 137, 138, 139, 140, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 260, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 328, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 343, 345, 346, 347, 348, 350, 351, 353, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488], "dnnl_graph": [2, 3, 4, 5, 6, 7, 8, 42, 161, 162, 163, 164, 166, 168, 170], "hpp": [2, 3, 4, 5, 6, 7, 8, 27, 42, 126, 140, 143, 144, 148, 149, 150, 154, 158, 161, 162, 163, 164, 166, 168, 170, 172, 173, 174, 175, 176, 178, 180, 182, 184, 186, 188, 190, 193, 195, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 317, 318, 319, 321, 324, 328, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487], "public": [2, 3, 4, 5, 6, 7, 8, 42, 140, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487, 489], "allocator_handl": 2, "dnnl_graph_host_allocate_f": [2, 238, 280], "host_malloc": [2, 238, 280], "dnnl_graph_host_deallocate_f": [2, 238, 280], "host_fre": [2, 238, 280], "an": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 154, 155, 157, 160, 162, 164, 165, 170, 174, 176, 177, 180, 181, 184, 185, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 246, 248, 252, 253, 254, 255, 258, 260, 261, 266, 270, 271, 272, 274, 275, 276, 277, 280, 281, 285, 287, 288, 289, 291, 292, 294, 298, 299, 300, 301, 302, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 343, 345, 346, 347, 349, 350, 351, 353, 354, 355, 357, 359, 361, 362, 364, 366, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "accord": [2, 3, 4, 6, 7, 8, 12, 21, 31, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 134, 139, 170, 190, 191, 194, 270, 281, 285, 287, 289, 315, 406, 436, 438], "given": [2, 7, 8, 10, 12, 17, 21, 23, 30, 36, 37, 38, 40, 41, 44, 45, 47, 65, 83, 87, 90, 91, 93, 94, 98, 99, 100, 101, 102, 103, 104, 115, 117, 118, 121, 124, 128, 134, 138, 144, 170, 193, 194, 227, 243, 260, 261, 266, 276, 280, 289, 291, 299, 300, 324, 328, 331, 334, 335, 368, 442, 450, 458], "function": [2, 10, 11, 12, 14, 15, 20, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 41, 42, 43, 44, 55, 71, 82, 84, 91, 98, 99, 100, 101, 102, 103, 104, 126, 131, 132, 140, 143, 144, 145, 147, 170, 185, 193, 194, 211, 218, 220, 227, 233, 238, 242, 290, 296, 297, 324, 328, 329, 336, 350, 361, 402, 403, 411, 442, 444, 456, 480, 483], "pointer": [2, 7, 8, 13, 20, 27, 30, 126, 184, 185, 211, 214, 246, 260, 261, 266, 271, 276, 277, 280, 291, 292, 298, 299, 300, 301, 324, 328, 334, 402, 411, 442, 444, 456, 480], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 20, 23, 34, 36, 37, 38, 39, 40, 41, 58, 59, 80, 81, 130, 131, 132, 136, 137, 145, 153, 156, 176, 177, 181, 182, 183, 184, 185, 211, 212, 213, 214, 218, 220, 227, 233, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 285, 287, 288, 289, 291, 292, 298, 299, 300, 301, 315, 316, 324, 326, 327, 328, 331, 334, 335, 336, 349, 361, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "A": [2, 3, 4, 5, 7, 8, 9, 13, 14, 23, 30, 31, 33, 34, 35, 37, 38, 40, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 78, 79, 88, 89, 96, 98, 99, 100, 101, 102, 103, 104, 120, 129, 132, 134, 135, 136, 137, 138, 144, 145, 156, 173, 180, 181, 186, 187, 199, 211, 214, 218, 220, 224, 238, 243, 244, 245, 246, 248, 249, 250, 251, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 285, 287, 288, 289, 291, 292, 296, 299, 300, 301, 306, 316, 324, 328, 334, 335, 336, 345, 349, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 403, 404, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 456, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 480, 482, 485, 487], "malloc": [2, 203, 210, 215, 280, 291, 298, 314, 323, 330], "cpu": [2, 8, 12, 14, 15, 23, 26, 27, 29, 30, 35, 38, 44, 128, 129, 131, 132, 134, 136, 140, 145, 149, 150, 151, 152, 154, 155, 210, 211, 212, 213, 214, 215, 216, 237, 238, 253, 260, 271, 277, 294, 301, 305, 323, 324, 326, 327, 328, 334, 349, 350, 370, 371, 442, 483, 488], "free": [2, 5, 31, 203, 210, 215, 280, 291, 298, 314, 323, 328, 330, 442], "default": [2, 3, 4, 5, 8, 9, 11, 13, 14, 18, 19, 24, 25, 26, 27, 32, 33, 35, 37, 39, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 110, 111, 112, 113, 114, 116, 118, 119, 121, 123, 126, 131, 132, 136, 144, 145, 150, 151, 158, 159, 178, 179, 190, 191, 195, 196, 197, 198, 243, 254, 270, 271, 282, 283, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 451, 452, 453, 454, 456, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "constructor": [2, 3, 5, 8, 9, 14, 128, 136, 316, 334, 349, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 446, 447, 448, 451, 452, 453, 454, 456, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "compil": [3, 7, 13, 35, 39, 86, 127, 131, 160, 162, 170, 194, 237, 242, 279, 280, 283, 287, 289, 291, 292, 298, 331, 334, 335, 349, 350, 368, 405, 406], "partit": [3, 4, 32, 33, 34, 160, 162, 169, 238, 242, 279, 280, 285, 287, 291, 292, 297, 298, 405, 406], "object": [3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 19, 23, 30, 31, 37, 38, 41, 44, 128, 132, 135, 136, 144, 185, 199, 200, 201, 202, 208, 209, 211, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 260, 261, 266, 268, 274, 276, 285, 288, 292, 298, 299, 300, 306, 308, 310, 312, 316, 319, 321, 324, 332, 338, 340, 341, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487], "compiled_partition_handl": 3, "dnnl_graph_compiled_partition_t": [3, 238, 281, 289], "logical_tensor": [3, 6, 7, 8, 31, 238, 287, 292, 297], "query_logical_tensor": [3, 31], "size_t": [3, 5, 6, 7, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 219, 227, 237, 238, 253, 260, 261, 266, 280, 281, 284, 285, 287, 288, 289, 291, 297, 314, 315, 317, 318, 323, 324, 326, 327, 328, 330, 335, 368, 402, 405, 406, 442, 444], "tid": [3, 5, 238, 281, 287], "const": [3, 4, 5, 6, 7, 8, 11, 12, 27, 30, 126, 128, 132, 140, 144, 185, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 246, 248, 249, 251, 260, 261, 262, 266, 269, 270, 271, 274, 275, 276, 277, 280, 281, 284, 285, 287, 288, 289, 291, 292, 296, 297, 298, 299, 300, 301, 306, 308, 310, 312, 314, 316, 317, 318, 319, 321, 323, 324, 327, 328, 330, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "std": [3, 4, 5, 6, 7, 11, 12, 13, 30, 128, 140, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 271, 276, 296, 298, 299, 300, 306, 308, 310, 312, 315, 316, 317, 318, 319, 321, 324, 326, 327, 328, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487], "vector": [3, 4, 5, 6, 7, 12, 23, 24, 25, 26, 30, 38, 39, 40, 58, 59, 128, 132, 144, 149, 152, 184, 185, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 243, 261, 266, 270, 275, 276, 298, 299, 300, 306, 308, 310, 312, 315, 316, 317, 318, 319, 321, 324, 326, 327, 328, 332, 334, 335, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 484, 485, 486, 487], "pair": [3, 40, 261, 266, 276, 281, 299, 300, 405, 456, 464], "get_inplace_port": 3, "void": [3, 4, 6, 8, 11, 12, 13, 14, 27, 30, 126, 140, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 260, 261, 264, 266, 271, 276, 277, 280, 282, 283, 291, 292, 296, 297, 299, 300, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 334, 335, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487], "execut": [3, 9, 11, 12, 13, 14, 19, 24, 27, 31, 35, 36, 37, 40, 42, 126, 142, 144, 145, 170, 184, 185, 186, 187, 190, 191, 193, 194, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 253, 260, 261, 266, 271, 274, 276, 277, 280, 281, 287, 289, 291, 292, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 332, 333, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 402, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 442, 445, 447, 450, 451, 453, 456, 458, 462, 464, 466, 468, 471, 473, 475, 477, 479, 480, 481, 483, 484, 486], "stream": [3, 13, 19, 24, 26, 27, 31, 35, 36, 126, 143, 145, 149, 152, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 247, 260, 261, 266, 276, 277, 281, 291, 296, 298, 299, 300, 301, 306, 308, 310, 312, 314, 315, 317, 318, 319, 321, 323, 324, 326, 327, 328, 332, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 442, 445, 447, 451, 453, 456, 462, 464, 466, 468, 471, 473, 475, 477, 479, 481, 483, 484, 486], "astream": [3, 238, 277, 298, 299, 300, 301, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 445, 447, 451, 453, 456, 462, 464, 466, 468, 471, 473, 475, 477, 481, 484, 486], "tensor": [3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 21, 23, 28, 30, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 113, 115, 117, 118, 119, 121, 122, 124, 129, 130, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 148, 156, 157, 160, 162, 163, 171, 173, 174, 177, 180, 199, 200, 201, 202, 205, 208, 209, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 245, 248, 249, 250, 251, 257, 259, 260, 262, 266, 267, 269, 272, 275, 279, 281, 285, 288, 289, 291, 297, 298, 306, 308, 310, 312, 314, 315, 316, 319, 321, 328, 329, 331, 332, 334, 336, 337, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 365, 366, 367, 382, 383, 384, 386, 388, 390, 392, 394, 396, 405, 406, 442, 444, 446, 448, 450, 458], "input": [3, 4, 5, 6, 7, 12, 13, 15, 17, 21, 22, 23, 26, 28, 30, 31, 33, 35, 36, 37, 38, 39, 41, 43, 44, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 147, 148, 157, 174, 176, 177, 184, 185, 205, 206, 207, 209, 211, 212, 213, 218, 220, 221, 227, 228, 232, 233, 238, 243, 252, 260, 266, 270, 281, 285, 287, 288, 289, 291, 292, 298, 314, 315, 316, 317, 318, 321, 324, 326, 327, 328, 331, 334, 335, 336, 338, 349, 350, 351, 359, 361, 374, 376, 404, 405, 406, 408, 410, 424, 426, 428, 430, 436, 438, 458, 485, 487], "output": [3, 4, 5, 6, 7, 11, 15, 17, 21, 23, 26, 28, 30, 31, 33, 35, 36, 37, 38, 39, 41, 43, 44, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 157, 174, 176, 177, 184, 185, 204, 205, 206, 207, 209, 210, 211, 213, 216, 218, 220, 221, 231, 232, 233, 237, 238, 243, 244, 245, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 285, 287, 288, 289, 291, 292, 298, 299, 300, 301, 314, 315, 316, 317, 318, 321, 323, 324, 326, 327, 328, 331, 334, 335, 336, 338, 349, 350, 357, 358, 359, 361, 368, 374, 376, 404, 405, 406, 408, 410, 424, 426, 428, 430, 436, 438, 450, 457, 458, 485, 487], "empti": [3, 4, 5, 8, 9, 11, 13, 19, 36, 94, 98, 99, 100, 101, 102, 103, 104, 153, 156, 172, 173, 175, 192, 243, 261, 266, 281, 285, 291, 299, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "queri": [3, 11, 12, 13, 14, 23, 24, 25, 27, 31, 35, 36, 38, 43, 126, 128, 136, 144, 170, 185, 190, 191, 193, 194, 206, 207, 210, 253, 260, 261, 264, 266, 276, 281, 282, 283, 296, 299, 300, 317, 318, 323, 334, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 405, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 456, 460, 461, 463, 464, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "logic": [3, 5, 6, 7, 8, 14, 15, 21, 23, 28, 34, 36, 41, 43, 67, 125, 127, 129, 130, 134, 137, 138, 139, 144, 157, 160, 162, 171, 174, 184, 185, 218, 242, 243, 257, 260, 279, 281, 285, 288, 289, 292, 334, 406, 444, 458], "id": [3, 5, 6, 7, 18, 22, 31, 128, 184, 185, 219, 237, 238, 261, 281, 287, 288, 289, 299, 335, 368, 405, 406, 461], "If": [3, 5, 9, 11, 13, 15, 18, 22, 33, 36, 41, 49, 52, 56, 59, 60, 63, 66, 67, 69, 98, 99, 100, 101, 102, 103, 104, 106, 110, 116, 123, 127, 136, 144, 176, 177, 185, 243, 257, 260, 261, 264, 266, 271, 281, 282, 287, 315, 350, 444, 450, 465, 483], "doesn": [3, 5, 44, 126, 134, 157, 168, 169, 260, 261, 270, 276, 281, 287, 299, 300, 334, 336, 406, 436, 438, 442], "t": [3, 5, 6, 7, 22, 27, 35, 37, 41, 44, 80, 81, 126, 132, 134, 136, 147, 148, 157, 168, 169, 199, 203, 206, 207, 210, 211, 212, 213, 214, 222, 224, 233, 238, 243, 246, 260, 261, 270, 276, 277, 278, 281, 287, 296, 299, 300, 301, 306, 314, 317, 318, 323, 324, 328, 334, 336, 340, 345, 361, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "belong": [3, 132, 243, 281, 299, 300, 456, 464, 483], "ani": [3, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 28, 31, 33, 35, 36, 38, 39, 40, 43, 44, 45, 46, 55, 56, 70, 71, 72, 73, 76, 77, 78, 79, 83, 91, 92, 97, 105, 107, 108, 109, 115, 117, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 145, 154, 158, 160, 162, 168, 169, 173, 174, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 260, 266, 271, 281, 287, 289, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 326, 327, 328, 330, 332, 334, 336, 337, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 386, 388, 390, 392, 394, 396, 402, 406, 408, 410, 411, 414, 416, 418, 424, 426, 428, 430, 436, 438, 442, 444, 456, 458, 463, 469, 480, 485, 487], "except": [3, 4, 5, 9, 14, 17, 19, 20, 21, 30, 57, 78, 128, 136, 144, 149, 152, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 253, 271, 300, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 334, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 378, 380, 382, 386, 388, 390, 392, 394, 396, 398, 400, 402, 403, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 456, 463, 465, 467, 469, 472, 474, 476, 478, 480, 485, 487, 489], "rais": [3, 5], "api": [3, 4, 5, 7, 9, 10, 11, 13, 15, 17, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 36, 38, 41, 42, 43, 44, 126, 129, 130, 133, 134, 135, 136, 137, 138, 139, 143, 144, 176, 177, 184, 203, 204, 205, 206, 207, 210, 212, 213, 215, 216, 218, 219, 233, 237, 243, 246, 253, 254, 260, 266, 270, 271, 281, 283, 284, 285, 287, 289, 294, 299, 300, 301, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 403, 406, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 463, 465, 467, 469, 470, 472, 474, 476, 478, 480, 482, 485, 487], "The": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 157, 164, 165, 168, 169, 170, 174, 177, 185, 190, 191, 193, 194, 202, 209, 214, 218, 220, 227, 233, 241, 243, 244, 246, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 266, 270, 271, 272, 276, 277, 280, 281, 282, 283, 285, 287, 288, 289, 291, 292, 294, 298, 299, 300, 301, 302, 312, 314, 315, 316, 317, 318, 321, 323, 324, 326, 327, 328, 331, 334, 335, 336, 349, 350, 361, 368, 374, 376, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 403, 405, 406, 408, 410, 411, 416, 418, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 456, 458, 460, 461, 464, 465, 469, 472, 474, 480, 482, 483, 485, 487], "uniqu": [3, 5, 6, 7, 12, 31, 98, 99, 100, 101, 102, 103, 104, 213, 281, 287, 288, 406, 450], "requir": [3, 5, 6, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 31, 35, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 136, 139, 140, 142, 143, 144, 164, 170, 176, 177, 184, 185, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 244, 252, 260, 261, 266, 276, 281, 287, 299, 300, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 328, 330, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 378, 380, 408, 410, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 444, 446, 448, 461, 485, 487], "return": [3, 4, 5, 6, 7, 8, 9, 11, 13, 19, 20, 24, 25, 31, 34, 36, 37, 40, 43, 119, 120, 126, 128, 140, 144, 168, 169, 170, 185, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 298, 299, 300, 301, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 403, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 461, 463, 464, 465, 467, 469, 470, 472, 474, 476, 478, 480, 482, 483, 485, 487], "hint": [3, 9, 36, 150, 151, 206, 207, 210, 233, 271, 281, 317, 318, 323, 361, 370, 374, 378, 386, 388, 392, 394, 398, 405, 408, 414, 416, 420, 424, 428, 432, 436, 446, 452, 467, 472, 476, 485], "place": [3, 11, 15, 17, 18, 20, 28, 36, 41, 119, 120, 127, 138, 139, 180, 181, 200, 201, 202, 217, 218, 222, 227, 228, 229, 235, 243, 244, 248, 252, 257, 271, 275, 281, 308, 309, 310, 311, 312, 315, 326, 327, 332, 334, 340, 341, 351, 353, 364, 365, 380, 384, 405, 450, 481], "It": [3, 4, 11, 12, 13, 14, 17, 19, 24, 26, 31, 34, 35, 36, 37, 40, 42, 44, 64, 66, 67, 78, 80, 82, 96, 107, 124, 125, 126, 127, 131, 144, 145, 163, 168, 169, 171, 244, 257, 260, 261, 266, 271, 281, 285, 299, 324, 334, 335, 349, 350, 368, 374, 378, 386, 388, 392, 394, 398, 405, 406, 408, 414, 416, 420, 424, 428, 432, 436, 442, 446, 452, 456, 465, 467, 472, 476, 485], "indic": [3, 4, 5, 11, 14, 22, 23, 26, 30, 31, 34, 37, 43, 58, 59, 80, 81, 98, 99, 100, 101, 102, 103, 104, 129, 130, 136, 137, 144, 156, 157, 173, 184, 185, 213, 220, 228, 243, 249, 251, 260, 262, 270, 281, 289, 328, 334, 336, 351, 374, 376, 386, 388, 390, 392, 394, 396, 405, 408, 410, 424, 426, 428, 430, 436, 438, 442, 444, 446, 448, 450, 458, 485, 487], "can": [3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 61, 65, 66, 67, 80, 82, 84, 86, 87, 90, 93, 119, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 142, 143, 144, 145, 157, 164, 165, 174, 190, 191, 195, 214, 218, 220, 227, 233, 243, 244, 245, 248, 249, 250, 251, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 281, 282, 287, 289, 299, 324, 325, 328, 331, 334, 335, 336, 337, 349, 350, 361, 368, 380, 405, 411, 436, 438, 442, 444, 449, 450, 456, 458, 461, 487], "share": [3, 13, 19, 27, 31, 33, 37, 126, 130, 132, 136, 144, 178, 179, 197, 198, 206, 207, 210, 281, 317, 318, 323, 405], "same": [3, 5, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 26, 27, 28, 33, 34, 36, 37, 41, 43, 44, 51, 53, 57, 58, 61, 80, 81, 119, 124, 127, 128, 130, 133, 134, 135, 136, 137, 139, 142, 144, 157, 174, 176, 177, 185, 190, 191, 206, 207, 208, 210, 213, 218, 226, 233, 243, 244, 245, 246, 249, 251, 252, 257, 260, 261, 262, 264, 266, 276, 277, 281, 282, 287, 288, 299, 300, 301, 315, 316, 317, 318, 319, 323, 326, 327, 331, 334, 349, 350, 361, 380, 386, 388, 390, 392, 394, 396, 405, 406, 411, 444, 446, 448, 450, 456, 461, 464], "buffer": [3, 8, 13, 14, 20, 30, 31, 36, 178, 179, 184, 185, 190, 191, 197, 198, 199, 200, 201, 202, 204, 205, 208, 209, 212, 213, 217, 218, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 260, 261, 276, 281, 287, 292, 299, 300, 306, 308, 310, 312, 315, 319, 321, 327, 332, 334, 335, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 362, 364, 366, 368, 405, 442, 444], "In": [3, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 38, 40, 41, 44, 58, 59, 86, 126, 127, 128, 132, 134, 135, 136, 138, 139, 143, 144, 157, 174, 182, 183, 184, 195, 199, 202, 208, 209, 211, 217, 221, 224, 229, 243, 244, 257, 260, 261, 276, 281, 299, 300, 306, 308, 309, 310, 311, 312, 315, 316, 319, 321, 324, 331, 332, 334, 335, 338, 340, 341, 345, 349, 350, 353, 364, 365, 368, 374, 376, 378, 380, 382, 386, 388, 390, 392, 394, 396, 398, 400, 405, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 460, 463, 465, 467, 469, 472, 474, 476, 478, 485, 487], "help": [3, 19, 31, 70, 125, 281, 405], "reduc": [3, 11, 12, 13, 14, 19, 23, 35, 36, 37, 44, 98, 99, 100, 101, 102, 103, 104, 128, 131, 133, 142, 177, 190, 191, 211, 281, 324, 325, 405, 450], "footprint": [3, 13, 139, 142, 190, 191, 281, 405], "improv": [3, 11, 15, 20, 26, 28, 36, 37, 41, 51, 80, 81, 144, 211, 243, 281, 294, 324, 405, 450], "local": [3, 13, 127, 147, 148, 184, 185, 203, 204, 206, 207, 210, 223, 258, 281, 305, 314, 317, 318, 323, 344, 349, 405, 431, 432, 433, 434, 461, 491], "But": [3, 19, 30, 40, 211, 281, 287, 324, 405], "sinc": [3, 11, 12, 22, 34, 40, 130, 144, 145, 157, 177, 211, 217, 218, 220, 229, 243, 281, 324, 332, 334, 336, 349, 350, 353, 405], "mai": [3, 7, 10, 11, 14, 17, 18, 19, 20, 23, 25, 26, 27, 28, 31, 32, 33, 34, 36, 40, 42, 119, 120, 126, 127, 128, 132, 133, 134, 142, 145, 163, 164, 165, 171, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 246, 250, 260, 266, 270, 271, 277, 281, 287, 289, 301, 306, 308, 310, 312, 314, 316, 317, 318, 319, 321, 323, 324, 328, 330, 332, 334, 336, 338, 340, 342, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 374, 376, 386, 388, 390, 392, 394, 396, 405, 408, 410, 414, 416, 418, 424, 426, 428, 430, 436, 438, 442, 444, 450, 457, 463, 469, 485, 487, 488], "have": [3, 4, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 26, 28, 30, 31, 35, 36, 38, 40, 41, 44, 58, 119, 120, 124, 127, 128, 130, 131, 133, 134, 139, 142, 144, 233, 243, 245, 249, 250, 251, 260, 261, 262, 266, 270, 271, 275, 276, 281, 285, 287, 289, 299, 300, 324, 331, 334, 336, 349, 361, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 405, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 461, 463, 464, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "global": [3, 13, 131, 176, 177, 211, 214, 296, 297, 305, 324, 328, 405], "view": [3, 39, 119, 120, 136, 212, 213, 233, 281, 326, 327, 361, 405], "user": [3, 4, 5, 7, 9, 11, 12, 14, 15, 19, 20, 21, 23, 27, 30, 35, 36, 38, 40, 41, 44, 80, 126, 128, 129, 131, 132, 134, 135, 139, 140, 144, 168, 169, 176, 177, 185, 190, 191, 199, 203, 204, 205, 206, 207, 209, 210, 218, 221, 224, 227, 229, 233, 260, 261, 266, 276, 281, 285, 287, 289, 299, 300, 306, 314, 315, 316, 317, 318, 321, 323, 326, 327, 328, 331, 334, 335, 338, 345, 349, 350, 353, 361, 368, 405, 442, 449, 456, 483], "": [3, 5, 6, 9, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 27, 28, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 80, 81, 88, 89, 119, 125, 126, 132, 134, 138, 142, 144, 163, 171, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 243, 260, 261, 266, 281, 287, 288, 299, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 326, 327, 328, 330, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 405, 442, 450, 456], "applic": [3, 9, 10, 11, 12, 13, 19, 20, 23, 25, 26, 31, 32, 33, 35, 36, 40, 42, 127, 128, 131, 143, 144, 145, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 260, 271, 281, 294, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 331, 332, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 405, 444], "possibl": [3, 12, 14, 15, 17, 19, 21, 24, 25, 27, 28, 35, 36, 37, 40, 41, 44, 126, 127, 133, 136, 138, 139, 144, 233, 243, 244, 249, 251, 252, 254, 255, 257, 258, 260, 262, 263, 266, 267, 269, 270, 271, 272, 273, 281, 334, 349, 361, 376, 378, 380, 386, 388, 390, 394, 396, 400, 405, 410, 418, 420, 422, 426, 430, 434, 438, 444, 448, 454, 463, 469, 474, 478, 485, 487], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 75, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 153, 156, 157, 160, 162, 164, 165, 168, 169, 170, 173, 174, 176, 177, 181, 190, 191, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 243, 244, 245, 246, 249, 251, 252, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 294, 298, 299, 300, 301, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 326, 327, 328, 330, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 405, 406, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 461, 463, 465, 467, 469, 472, 474, 476, 478, 480, 482, 483, 485, 487], "other": [3, 5, 9, 11, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 27, 33, 35, 36, 38, 39, 40, 42, 43, 44, 126, 127, 128, 129, 132, 134, 136, 137, 138, 139, 144, 157, 168, 169, 174, 190, 191, 205, 206, 212, 213, 233, 260, 266, 271, 281, 285, 287, 288, 294, 315, 317, 324, 327, 328, 334, 342, 349, 350, 361, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "thi": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 53, 54, 58, 64, 80, 81, 96, 119, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 153, 156, 157, 177, 181, 182, 183, 190, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 246, 248, 257, 260, 261, 266, 268, 270, 271, 276, 277, 281, 283, 284, 287, 289, 291, 292, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 403, 405, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 449, 450, 452, 454, 460, 463, 465, 467, 469, 472, 474, 476, 478, 482, 483, 485, 487], "case": [3, 5, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 48, 68, 75, 82, 94, 95, 97, 105, 119, 126, 127, 128, 129, 130, 133, 134, 135, 137, 138, 139, 142, 144, 145, 157, 199, 206, 207, 209, 211, 214, 218, 221, 224, 229, 243, 244, 249, 251, 257, 260, 261, 262, 266, 271, 276, 281, 287, 289, 299, 300, 306, 315, 317, 318, 321, 324, 328, 331, 334, 335, 338, 345, 349, 353, 368, 374, 376, 378, 380, 382, 386, 388, 390, 392, 394, 396, 398, 400, 403, 405, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 460, 463, 465, 467, 469, 472, 474, 476, 478, 483, 485, 487], "should": [3, 5, 7, 11, 12, 13, 14, 15, 17, 19, 21, 23, 28, 30, 31, 34, 35, 36, 38, 40, 41, 43, 44, 47, 49, 50, 52, 53, 57, 59, 60, 63, 65, 66, 67, 78, 79, 87, 90, 93, 98, 99, 100, 101, 102, 103, 104, 121, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 144, 190, 191, 202, 203, 210, 212, 214, 218, 220, 233, 243, 246, 253, 260, 270, 271, 277, 280, 281, 285, 287, 289, 291, 294, 298, 301, 312, 314, 315, 316, 323, 328, 331, 334, 335, 336, 349, 361, 368, 374, 376, 384, 405, 408, 410, 411, 424, 426, 428, 430, 436, 438, 442, 449, 450, 458, 460, 465, 482, 485, 487], "take": [3, 10, 11, 12, 14, 19, 23, 24, 25, 28, 30, 33, 34, 35, 36, 39, 62, 63, 64, 66, 67, 86, 96, 98, 99, 100, 101, 102, 103, 104, 128, 130, 131, 132, 144, 145, 218, 244, 257, 266, 271, 281, 312, 314, 315, 334, 405], "pass": [3, 4, 9, 10, 11, 12, 13, 14, 15, 19, 20, 23, 27, 30, 31, 33, 34, 35, 36, 41, 42, 43, 44, 80, 119, 126, 129, 130, 132, 134, 135, 136, 157, 176, 177, 203, 204, 210, 211, 214, 215, 218, 233, 237, 243, 249, 251, 255, 259, 260, 261, 266, 271, 281, 285, 287, 299, 300, 314, 315, 316, 323, 324, 328, 330, 331, 334, 335, 349, 361, 368, 388, 390, 394, 396, 402, 404, 405, 411, 442, 450, 456, 458, 464, 480, 483], "differ": [3, 5, 11, 12, 13, 14, 17, 19, 20, 26, 27, 30, 31, 32, 37, 40, 43, 44, 47, 61, 65, 86, 87, 90, 93, 107, 118, 119, 120, 121, 128, 132, 133, 134, 136, 142, 144, 147, 148, 163, 164, 165, 171, 190, 191, 199, 206, 207, 209, 210, 221, 224, 229, 233, 244, 253, 257, 260, 281, 287, 306, 312, 315, 317, 318, 321, 323, 324, 328, 334, 338, 345, 349, 350, 353, 361, 384, 405, 411, 444, 460, 465, 482], "avoid": [3, 12, 17, 19, 21, 25, 26, 35, 36, 40, 50, 51, 52, 131, 133, 202, 206, 207, 210, 281, 312, 317, 318, 323, 349, 405], "overwrit": [3, 17, 23, 38, 44, 133, 135, 139, 281, 405], "which": [3, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 27, 28, 31, 33, 34, 35, 36, 37, 38, 40, 41, 44, 48, 57, 58, 64, 66, 67, 80, 81, 82, 84, 85, 96, 98, 99, 100, 101, 102, 103, 104, 111, 112, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 138, 142, 144, 145, 157, 160, 162, 174, 212, 213, 214, 216, 218, 220, 226, 227, 233, 243, 244, 246, 249, 251, 252, 260, 262, 266, 268, 271, 272, 273, 274, 277, 280, 281, 287, 288, 292, 301, 326, 327, 328, 331, 334, 335, 336, 349, 350, 361, 368, 374, 378, 384, 386, 388, 392, 394, 398, 405, 406, 408, 411, 414, 416, 420, 424, 428, 432, 436, 442, 446, 452, 461, 465, 467, 472, 474, 476, 478, 482, 485], "probabl": [3, 11, 281, 405], "caus": [3, 35, 36, 281, 402, 405, 411, 442, 456, 480], "unexpect": [3, 20, 216, 237, 246, 277, 281, 301, 331, 368, 405], "incorrect": [3, 13, 19, 170, 193, 194, 215, 227, 281, 330, 334, 405], "result": [3, 9, 11, 12, 13, 15, 17, 19, 20, 22, 23, 25, 26, 28, 31, 36, 37, 38, 40, 43, 44, 98, 99, 100, 101, 102, 103, 104, 118, 128, 129, 130, 132, 133, 135, 138, 142, 144, 177, 185, 186, 187, 205, 211, 212, 213, 214, 216, 218, 219, 237, 238, 243, 246, 260, 266, 277, 281, 301, 315, 316, 324, 325, 328, 350, 405, 444, 450, 457, 458, 461], "list": [3, 6, 7, 19, 28, 35, 36, 42, 48, 49, 58, 59, 60, 61, 62, 63, 64, 78, 79, 88, 89, 96, 98, 99, 100, 101, 102, 103, 104, 120, 127, 132, 136, 145, 149, 152, 271, 281, 289, 291, 305, 334], "run": [3, 13, 14, 15, 18, 19, 36, 37, 39, 40, 44, 50, 127, 190, 191, 205, 212, 213, 214, 220, 227, 238, 256, 261, 276, 277, 286, 291, 298, 316, 324, 326, 327, 328, 329, 331, 334, 335, 336, 337, 349, 350, 368], "over": [3, 13, 19, 21, 24, 25, 36, 37, 39, 41, 49, 57, 59, 60, 63, 80, 81, 98, 99, 100, 101, 102, 103, 104, 131, 132, 136, 138, 144, 145, 245, 248, 271, 273, 298, 384, 460, 476, 478], "graph_handl": 4, "engin": [4, 7, 8, 9, 11, 12, 19, 23, 26, 27, 29, 30, 31, 35, 36, 38, 44, 107, 126, 132, 136, 145, 155, 170, 184, 185, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 247, 248, 249, 251, 252, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 281, 285, 289, 291, 292, 296, 297, 298, 299, 300, 301, 305, 306, 308, 310, 312, 314, 315, 317, 318, 319, 321, 323, 324, 326, 327, 328, 332, 336, 338, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 362, 364, 366, 371, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 401, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 446, 448, 450, 452, 454, 456, 458, 460, 461, 463, 464, 465, 467, 469, 470, 472, 474, 476, 478, 480, 482, 485, 487], "kind": [4, 6, 7, 9, 11, 15, 19, 23, 27, 28, 30, 31, 37, 38, 41, 126, 128, 129, 130, 135, 136, 137, 138, 145, 147, 148, 155, 156, 167, 173, 175, 178, 179, 181, 182, 183, 184, 185, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 244, 245, 249, 251, 252, 253, 255, 257, 258, 260, 261, 262, 263, 266, 267, 269, 270, 272, 273, 276, 284, 285, 288, 289, 296, 297, 299, 300, 306, 308, 310, 312, 314, 315, 317, 318, 319, 321, 323, 324, 326, 327, 328, 330, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 484, 485, 486, 487], "engine_kind": [4, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 285, 306, 308, 310, 312, 314, 315, 317, 318, 319, 321, 332, 334, 336, 338, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368], "fpmath_mod": [4, 10, 254, 271, 296, 458], "mode": [4, 9, 13, 15, 17, 19, 23, 26, 28, 37, 41, 43, 50, 64, 66, 67, 78, 79, 96, 128, 129, 130, 131, 132, 135, 136, 138, 158, 159, 164, 165, 182, 183, 190, 191, 199, 200, 202, 223, 224, 237, 238, 242, 243, 247, 252, 259, 271, 285, 296, 305, 306, 307, 308, 309, 312, 321, 322, 328, 332, 333, 340, 341, 343, 344, 345, 346, 349, 351, 352, 353, 354, 359, 360, 364, 365, 368, 370, 411, 458], "statu": [4, 7, 19, 20, 194, 205, 206, 213, 218, 219, 237, 238, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 283, 285, 287, 288, 289, 291, 292, 296, 297, 301, 317, 327, 334, 368, 403], "add_op": [4, 31, 285], "op": [4, 7, 9, 12, 26, 29, 33, 35, 36, 37, 49, 54, 79, 80, 81, 125, 165, 168, 169, 170, 176, 177, 194, 200, 201, 202, 205, 209, 220, 221, 225, 227, 231, 238, 242, 243, 246, 277, 279, 285, 289, 297, 301, 305, 308, 309, 310, 311, 316, 321, 322, 336, 338, 339, 347, 348, 350, 357, 450, 458], "bool": [4, 5, 7, 48, 49, 56, 69, 80, 81, 86, 94, 98, 99, 100, 101, 102, 103, 104, 106, 110, 116, 119, 123, 140, 144, 211, 214, 226, 233, 238, 260, 296, 324, 328, 349, 361, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487], "allow_except": 4, "true": [4, 5, 6, 7, 36, 42, 44, 48, 49, 56, 69, 80, 81, 86, 94, 98, 99, 100, 101, 102, 103, 104, 106, 110, 116, 119, 123, 127, 144, 233, 287, 361, 411, 444, 460, 465, 483], "final": [4, 11, 12, 13, 19, 28, 31, 37, 40, 144, 147, 157, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 217, 218, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 260, 285, 287, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 331, 332, 334, 335, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 362, 364, 366, 368], "is_fin": 4, "get_partit": [4, 7, 31, 289], "polici": [4, 7, 13, 169, 190, 191, 238, 285], "fusion": [4, 11, 14, 15, 44, 168, 169, 227, 239, 243, 336, 337], "creat": [4, 7, 9, 11, 12, 13, 15, 17, 18, 19, 21, 23, 27, 28, 30, 31, 35, 36, 38, 41, 43, 44, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 184, 185, 190, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244, 245, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 285, 287, 289, 291, 292, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 332, 333, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 442, 444, 450, 458, 465, 480], "new": [4, 7, 14, 30, 31, 37, 140, 147, 148, 157, 181, 260, 264, 281, 282, 285, 287, 289, 292, 411, 444], "float": [4, 9, 11, 12, 20, 23, 30, 36, 37, 44, 51, 64, 96, 134, 135, 142, 153, 158, 159, 161, 172, 185, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 246, 247, 252, 257, 258, 260, 267, 269, 270, 271, 275, 277, 285, 288, 296, 301, 305, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 330, 332, 334, 335, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 450, 452, 454, 458, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "point": [4, 9, 11, 12, 17, 19, 20, 23, 34, 36, 37, 44, 66, 132, 134, 135, 142, 153, 158, 159, 161, 172, 185, 211, 220, 242, 243, 247, 260, 266, 270, 271, 285, 288, 305, 316, 324, 325, 326, 327, 328, 336, 337, 350, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 450, 458, 460, 485, 487], "math": [4, 9, 26, 158, 159, 207, 212, 213, 233, 242, 243, 247, 271, 285, 305, 318, 361], "all": [4, 5, 7, 9, 10, 11, 12, 13, 17, 18, 19, 21, 23, 26, 27, 28, 33, 34, 35, 37, 40, 44, 54, 57, 59, 61, 62, 63, 86, 98, 99, 100, 101, 102, 103, 104, 119, 127, 130, 132, 135, 136, 138, 139, 142, 143, 144, 145, 182, 183, 185, 190, 191, 212, 213, 214, 218, 220, 227, 243, 244, 254, 257, 260, 261, 270, 271, 274, 285, 287, 299, 324, 326, 327, 328, 334, 335, 336, 350, 368, 374, 376, 378, 386, 388, 390, 392, 394, 396, 408, 410, 414, 416, 418, 420, 424, 426, 428, 430, 436, 438, 444, 449, 456, 460, 461, 480, 485, 487], "inherit": [4, 40, 227, 260, 285, 350], "add": [4, 6, 17, 23, 30, 33, 35, 38, 40, 42, 44, 48, 49, 53, 58, 59, 60, 61, 62, 63, 88, 89, 133, 135, 145, 147, 148, 166, 176, 177, 188, 189, 204, 212, 227, 260, 285, 288, 315, 316, 326, 327, 350, 444], "dag": [4, 285], "failur": [4, 145, 164, 260, 285, 403, 444], "oper": [4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 148, 164, 165, 166, 167, 168, 169, 170, 177, 193, 194, 195, 202, 218, 220, 223, 227, 239, 243, 244, 245, 246, 252, 257, 260, 261, 266, 267, 269, 277, 285, 287, 288, 289, 296, 299, 301, 308, 309, 312, 315, 316, 324, 331, 334, 335, 336, 337, 343, 349, 350, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "ha": [4, 5, 11, 13, 14, 15, 16, 19, 20, 22, 26, 30, 31, 34, 37, 40, 80, 81, 82, 127, 128, 130, 131, 132, 142, 145, 157, 174, 177, 209, 213, 214, 243, 260, 261, 264, 266, 271, 276, 282, 285, 287, 299, 300, 315, 321, 324, 326, 328, 331, 334, 335, 349, 350, 368, 406, 444, 460], "alreadi": [4, 36, 132, 264, 282, 285, 334, 349, 460], "been": [4, 11, 19, 142, 243, 260, 261, 266, 276, 285, 299, 300, 350, 442, 460], "ad": [4, 6, 13, 23, 31, 35, 40, 50, 51, 52, 53, 80, 81, 144, 145, 157, 164, 227, 285, 288, 350], "cannot": [4, 9, 11, 27, 31, 36, 40, 44, 107, 128, 129, 134, 136, 143, 144, 170, 190, 191, 194, 211, 260, 271, 285, 324, 402, 411, 442, 456, 465, 480], "schema": [4, 170, 194, 285], "check": [4, 7, 9, 12, 15, 17, 23, 28, 36, 38, 43, 44, 107, 129, 136, 137, 164, 203, 205, 206, 210, 211, 213, 214, 215, 216, 218, 219, 220, 237, 238, 243, 260, 261, 266, 285, 289, 299, 314, 315, 317, 323, 324, 327, 328, 330, 334, 335, 336, 349, 384, 403, 411, 444, 456, 458, 460, 465, 470, 482], "eg": [4, 5, 168, 169, 285, 287], "number": [4, 5, 7, 10, 11, 12, 13, 15, 17, 19, 20, 22, 23, 26, 30, 31, 33, 35, 36, 41, 44, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 66, 67, 88, 89, 96, 125, 127, 130, 131, 133, 136, 144, 145, 157, 184, 185, 206, 207, 208, 210, 212, 213, 233, 236, 243, 245, 246, 248, 249, 250, 251, 253, 260, 261, 262, 264, 266, 271, 275, 276, 277, 281, 282, 285, 287, 288, 289, 291, 300, 301, 314, 315, 316, 317, 318, 319, 323, 324, 361, 366, 386, 388, 390, 392, 394, 396, 402, 406, 442, 444, 446, 448, 450, 461, 472, 474, 476, 478, 483], "data": [4, 5, 8, 10, 11, 12, 13, 14, 19, 20, 22, 30, 31, 33, 34, 35, 36, 40, 132, 142, 153, 157, 161, 170, 172, 174, 177, 182, 183, 184, 185, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 246, 247, 248, 252, 253, 257, 260, 267, 268, 269, 270, 272, 275, 277, 285, 287, 292, 301, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 326, 327, 328, 330, 332, 336, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 371, 406, 442, 444, 450, 458, 464, 472, 474, 482, 485], "type": [4, 5, 6, 7, 10, 11, 12, 13, 14, 18, 19, 20, 27, 30, 31, 34, 35, 36, 37, 132, 142, 143, 144, 153, 160, 161, 162, 170, 172, 176, 183, 184, 185, 194, 205, 206, 211, 216, 218, 227, 238, 242, 243, 247, 253, 254, 260, 261, 266, 270, 276, 278, 285, 287, 289, 292, 293, 299, 300, 312, 316, 317, 324, 331, 334, 335, 336, 350, 368, 371, 406, 411, 442, 444, 450, 458, 461], "attribut": [4, 6, 14, 26, 31, 35, 36, 131, 132, 145, 164, 165, 177, 184, 214, 220, 227, 242, 244, 245, 248, 249, 251, 252, 255, 257, 258, 259, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 285, 288, 305, 310, 311, 316, 321, 322, 327, 328, 336, 338, 339, 347, 348, 350, 357, 358, 371, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 406, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 450, 452, 454, 457, 458, 461, 463, 464, 465, 467, 469, 472, 474, 476, 478, 482, 485, 487], "etc": [4, 5, 14, 22, 33, 131, 132, 135, 144, 145, 253, 285, 287, 444, 461], "flag": [4, 15, 19, 26, 32, 41, 132, 136, 149, 150, 151, 152, 176, 177, 184, 185, 188, 189, 196, 216, 238, 244, 246, 257, 266, 270, 271, 274, 277, 283, 289, 296, 297, 301, 308, 309, 331, 349, 374, 376, 378, 380, 382, 386, 388, 390, 392, 394, 396, 398, 400, 402, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 456, 461, 463, 465, 467, 469, 472, 474, 476, 478, 480, 483, 485, 487], "whether": [4, 23, 27, 40, 43, 48, 49, 80, 86, 94, 126, 243, 260, 261, 266, 299, 315, 349, 374, 376, 378, 380, 382, 386, 388, 390, 392, 394, 396, 398, 400, 402, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 456, 458, 463, 465, 467, 469, 472, 474, 476, 478, 480, 485, 487], "allow": [4, 9, 10, 12, 14, 19, 21, 23, 24, 25, 26, 30, 31, 33, 36, 37, 38, 42, 47, 65, 87, 90, 93, 121, 130, 139, 142, 153, 156, 158, 159, 181, 210, 227, 246, 260, 263, 267, 269, 277, 301, 323, 350, 368, 374, 376, 378, 380, 382, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 444, 446, 448, 452, 454, 463, 465, 467, 469, 472, 474, 476, 478, 485, 487], "throw": [4, 9, 20, 128, 199, 205, 206, 211, 213, 214, 216, 218, 219, 220, 227, 237, 300, 306, 317, 324, 327, 328, 331, 334, 335, 336, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 403, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 460, 463, 465, 467, 469, 472, 474, 476, 478, 482, 485, 487], "fail": [4, 132, 170, 193, 194, 211, 214, 218, 219, 220, 237, 324, 328, 334, 335, 336, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 403, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 460, 463, 465, 467, 469, 472, 474, 476, 478, 482, 485, 487], "success": [4, 43, 170, 193, 194, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 285, 287, 288, 289, 291, 292, 301, 350, 460], "describ": [4, 5, 10, 11, 12, 14, 22, 26, 31, 33, 36, 37, 40, 78, 79, 127, 134, 136, 143, 144, 156, 157, 173, 211, 233, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 285, 287, 288, 289, 291, 292, 301, 315, 324, 334, 335, 349, 361, 368, 401, 441, 443, 444, 455, 459, 470, 479], "error": [4, 11, 12, 19, 20, 24, 25, 31, 36, 37, 40, 128, 205, 206, 211, 213, 218, 237, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 285, 287, 288, 289, 291, 292, 296, 301, 317, 324, 327, 334, 349, 368, 449, 458], "otherwis": [4, 5, 15, 24, 26, 28, 36, 56, 69, 75, 98, 99, 100, 101, 102, 103, 104, 106, 110, 116, 123, 128, 176, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 285, 287, 288, 289, 291, 292, 301, 398, 411, 444], "mean": [4, 5, 10, 11, 12, 17, 21, 22, 28, 30, 31, 33, 36, 43, 50, 51, 52, 58, 59, 60, 61, 62, 63, 66, 67, 80, 81, 84, 85, 88, 89, 101, 119, 120, 127, 129, 130, 133, 134, 137, 138, 139, 144, 147, 148, 160, 162, 163, 171, 176, 177, 200, 202, 218, 222, 226, 244, 246, 249, 251, 252, 257, 260, 266, 267, 277, 285, 289, 301, 308, 312, 331, 334, 335, 340, 349, 368, 378, 380, 386, 388, 390, 392, 394, 396, 398, 400, 406, 420, 422, 444], "finish": [4, 31, 274, 285, 480, 483], "readi": [4, 31, 36, 285, 334, 349], "similarli": [4, 40, 129, 136, 285, 349], "un": [4, 285], "also": [4, 7, 11, 13, 14, 15, 18, 19, 22, 23, 24, 25, 26, 30, 31, 35, 37, 42, 44, 82, 127, 131, 132, 134, 140, 144, 145, 157, 184, 199, 214, 224, 233, 243, 244, 245, 248, 249, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 285, 287, 289, 301, 306, 315, 328, 331, 334, 335, 345, 349, 361, 368, 442, 444, 450, 458, 461], "fals": [4, 5, 7, 48, 49, 56, 69, 80, 81, 86, 94, 98, 99, 100, 101, 102, 103, 104, 106, 110, 116, 119, 123, 233, 361, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "get": [4, 17, 29, 35, 36, 132, 144, 211, 216, 218, 219, 233, 237, 252, 270, 271, 277, 287, 292, 305, 324, 349, 361, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "filter": [4, 22, 132, 144, 285], "claim": [4, 285, 342], "intern": [4, 7, 13, 24, 25, 27, 31, 153, 156, 181, 199, 204, 209, 221, 224, 229, 233, 243, 285, 306, 321, 326, 335, 338, 345, 353, 361, 368], "capabl": [4, 9, 11, 19, 26, 34, 285], "store": [4, 8, 12, 13, 14, 22, 23, 35, 37, 40, 119, 126, 131, 132, 136, 144, 177, 206, 213, 220, 246, 260, 277, 301, 317, 324, 327, 334, 336, 411, 442, 457], "dnnl_dim_t": [5, 185, 203, 210, 215, 238, 243, 246, 250, 258, 260, 272, 277, 296, 301, 314, 323, 330, 442], "dim": [5, 11, 12, 30, 44, 134, 144, 157, 184, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 260, 266, 287, 306, 308, 310, 312, 314, 316, 317, 318, 319, 321, 323, 324, 326, 327, 328, 330, 331, 332, 334, 335, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 406, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 458, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487, 490], "enum": [5, 6, 7, 144, 238, 243, 250, 253, 254, 260, 261, 266, 270, 271, 274, 276, 278, 287, 288, 289, 290, 296, 297, 299, 300, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 402, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 442, 445, 447, 451, 453, 456, 462, 464, 466, 468, 471, 473, 475, 477, 480, 481, 484, 486], "data_typ": [5, 11, 12, 30, 40, 134, 144, 145, 153, 184, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 260, 296, 306, 308, 310, 312, 317, 318, 319, 321, 324, 326, 327, 328, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 406, 442, 444, 450], "layout_typ": [5, 31, 287, 406], "property_typ": 5, "dnnl_graph_logical_tensor_t": [5, 238, 281, 287, 288, 289, 292], "c_data": 5, "dtype": [5, 238, 287], "int32_t": [5, 30, 40, 211, 213, 220, 238, 243, 246, 260, 266, 277, 287, 296, 301, 324, 336, 450], "ndim": [5, 27, 41, 144, 157, 203, 210, 238, 260, 287, 300, 314, 323, 406], "ltype": [5, 238, 287], "ptype": [5, 238, 287], "undef": [5, 11, 145, 148, 161, 162, 163, 164, 172, 173, 174, 175, 180, 182, 184, 186, 188, 349, 350, 374, 376, 378, 380, 382, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 446, 448, 450, 452, 454, 461, 463, 472, 474, 476, 478, 485, 487], "adim": [5, 216, 238, 444], "stride": [5, 9, 11, 12, 22, 23, 44, 48, 49, 58, 59, 60, 61, 62, 63, 88, 89, 107, 156, 157, 160, 162, 164, 165, 173, 174, 184, 185, 203, 204, 205, 206, 207, 209, 210, 218, 226, 227, 228, 233, 238, 243, 249, 251, 260, 262, 287, 314, 315, 316, 317, 318, 321, 323, 334, 336, 349, 350, 351, 361, 386, 388, 390, 392, 394, 396, 406, 444, 446, 448, 450, 461], "lid": 5, "get_dim": [5, 144, 211, 220, 227, 324, 336, 350, 444], "get_id": [5, 7], "get_data_typ": [5, 227, 350, 444], "get_property_typ": 5, "get_layout_typ": 5, "get_layout_id": 5, "get_strid": [5, 144, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 444, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_mem_s": [5, 31], "is_equ": [5, 238, 287], "lt": [5, 8, 238, 281], "integ": [5, 12, 24, 26, 34, 37, 40, 41, 108, 132, 149, 152, 153, 161, 172, 211, 212, 243, 246, 277, 288, 301, 316, 324, 442, 458], "repres": [5, 6, 7, 11, 12, 14, 22, 23, 30, 31, 34, 40, 55, 58, 84, 85, 111, 112, 125, 132, 145, 281, 285, 289, 315, 326, 327, 331, 334, 335, 350, 368, 442], "dimens": [5, 7, 11, 12, 13, 14, 15, 17, 21, 22, 23, 28, 30, 31, 34, 37, 38, 41, 44, 48, 49, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 78, 80, 81, 84, 85, 86, 88, 89, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 111, 119, 120, 129, 130, 133, 134, 135, 136, 137, 138, 139, 144, 156, 157, 173, 174, 184, 185, 199, 200, 201, 202, 208, 209, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 245, 246, 248, 249, 250, 251, 257, 260, 262, 269, 277, 287, 289, 292, 300, 301, 306, 308, 310, 312, 319, 321, 324, 326, 327, 328, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 384, 386, 388, 390, 392, 394, 396, 406, 442, 444, 446, 448, 450, 458, 467, 469], "size": [5, 11, 12, 13, 15, 17, 20, 22, 23, 30, 31, 36, 37, 40, 41, 48, 49, 53, 78, 79, 88, 89, 111, 128, 129, 130, 133, 135, 137, 139, 144, 157, 164, 165, 174, 184, 185, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 243, 245, 246, 258, 260, 261, 266, 272, 277, 280, 287, 291, 299, 301, 306, 308, 310, 312, 314, 315, 317, 318, 319, 321, 323, 324, 326, 327, 328, 332, 334, 338, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 406, 432, 434, 442, 444, 450, 458, 461, 472, 474], "implement": [5, 9, 11, 12, 13, 14, 19, 20, 24, 26, 31, 34, 35, 36, 37, 40, 64, 66, 67, 86, 96, 125, 127, 128, 131, 140, 142, 143, 144, 145, 170, 176, 181, 184, 185, 193, 194, 199, 202, 205, 206, 209, 213, 214, 216, 218, 221, 227, 229, 241, 266, 271, 277, 301, 306, 308, 309, 312, 314, 315, 317, 318, 321, 323, 326, 327, 328, 331, 334, 335, 338, 349, 353, 368, 411, 442, 460, 461, 483], "ar": [5, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 80, 81, 86, 88, 89, 98, 99, 100, 101, 102, 103, 104, 118, 119, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 157, 164, 174, 177, 182, 183, 184, 185, 190, 191, 199, 209, 211, 212, 213, 214, 217, 220, 221, 224, 227, 229, 233, 243, 244, 245, 246, 249, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 266, 269, 270, 271, 272, 273, 276, 277, 283, 287, 299, 300, 301, 306, 312, 314, 315, 316, 321, 324, 326, 327, 328, 331, 332, 334, 335, 336, 338, 342, 345, 349, 350, 353, 361, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 406, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 449, 450, 452, 454, 456, 458, 461, 463, 464, 465, 467, 469, 472, 474, 476, 478, 482, 483, 485, 487], "forc": [5, 44, 442], "limit": [5, 11, 12, 20, 24, 25, 33, 35, 131, 132, 190, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 315, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 362, 364, 366, 442], "length": [5, 94, 95, 212, 213, 233, 243, 288, 361, 442], "copi": [5, 9, 11, 119, 120, 134, 142, 185, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 260, 268, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 326, 327, 328, 330, 332, 334, 335, 336, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 402, 411, 442, 444, 456, 458, 480], "layout": [5, 7, 11, 31, 35, 41, 54, 107, 119, 120, 124, 136, 157, 160, 162, 199, 209, 213, 220, 221, 224, 229, 233, 243, 260, 287, 289, 292, 306, 315, 321, 326, 327, 336, 338, 345, 349, 353, 361, 406, 444, 450, 458], "properti": [5, 9, 31, 163, 171, 190, 191, 211, 287, 324, 342, 406], "element": [5, 11, 22, 23, 26, 28, 30, 36, 45, 47, 55, 58, 64, 65, 66, 67, 68, 71, 72, 74, 76, 80, 81, 82, 83, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 133, 144, 157, 168, 169, 170, 177, 180, 181, 193, 194, 217, 243, 245, 246, 248, 249, 251, 260, 262, 275, 277, 287, 288, 292, 301, 305, 324, 331, 333, 334, 386, 388, 390, 392, 394, 396, 406, 442, 446, 448, 450], "1": [5, 11, 14, 15, 17, 19, 21, 24, 26, 27, 28, 30, 33, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 123, 127, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 148, 149, 152, 153, 157, 160, 169, 171, 174, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 237, 238, 243, 245, 246, 260, 266, 271, 277, 287, 289, 300, 301, 306, 308, 310, 312, 314, 316, 317, 318, 319, 321, 323, 324, 326, 327, 328, 330, 331, 334, 335, 336, 340, 343, 345, 347, 349, 350, 351, 355, 357, 361, 362, 363, 364, 365, 368, 382, 384, 406, 444, 450, 460, 461, 465, 482, 483], "unknown": [5, 7, 31, 178, 179, 197, 198, 206, 207, 260, 287, 289, 317, 318, 328, 336, 406], "see": [5, 9, 11, 12, 14, 15, 16, 18, 19, 21, 23, 26, 28, 35, 36, 37, 40, 41, 44, 61, 80, 129, 131, 132, 133, 136, 139, 140, 143, 144, 145, 146, 157, 174, 184, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 248, 249, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 299, 300, 301, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 442, 450, 456, 458, 461, 464, 483, 485, 487], "dnnl_graph_unknown_ndim": [5, 238, 287, 406], "0": [5, 11, 12, 13, 17, 19, 23, 28, 30, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 130, 131, 132, 134, 135, 136, 137, 138, 140, 143, 144, 145, 153, 156, 157, 160, 165, 171, 177, 183, 185, 187, 192, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 245, 253, 260, 261, 264, 266, 271, 282, 283, 285, 287, 289, 299, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 326, 327, 328, 330, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 406, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 458, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 483, 485, 487], "scalar": [5, 11, 132, 243, 246, 277, 301, 406, 450], "deleg": 5, "basic": [5, 9, 11, 132, 134, 145, 218, 246, 253, 260, 265, 274, 287, 289, 294, 331, 334, 335, 368, 371, 444], "inform": [5, 11, 19, 22, 35, 36, 42, 44, 128, 131, 144, 145, 184, 226, 233, 260, 266, 271, 281, 287, 305, 349, 361, 488], "dnnl_graph_unknown_dim": [5, 238, 287, 406], "defin": [5, 9, 11, 14, 15, 19, 21, 23, 26, 27, 30, 36, 37, 38, 40, 41, 42, 43, 44, 57, 58, 64, 66, 67, 75, 80, 82, 86, 96, 126, 129, 130, 135, 136, 137, 138, 140, 143, 144, 164, 165, 203, 206, 207, 210, 218, 219, 238, 241, 243, 246, 250, 260, 266, 271, 277, 287, 301, 314, 317, 318, 323, 327, 331, 334, 350, 406, 450, 458], "zero": [5, 11, 12, 15, 23, 26, 30, 34, 36, 37, 44, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 66, 67, 82, 88, 89, 96, 119, 134, 136, 144, 177, 184, 185, 202, 206, 207, 211, 220, 233, 243, 249, 251, 255, 257, 259, 260, 266, 270, 285, 312, 317, 318, 324, 325, 336, 337, 361, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 406, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 444, 446, 448, 450, 452, 454, 458, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "field": [5, 145, 157, 160, 162, 212, 243, 260, 287, 372, 403, 489, 490], "deduc": [5, 7, 31, 135, 289, 349, 406], "accordingli": [5, 11, 12, 66, 67, 144, 260, 287, 316, 335, 368, 444, 449], "alwai": [5, 11, 14, 15, 19, 26, 28, 30, 36, 37, 38, 40, 41, 43, 44, 134, 136, 144, 157, 243, 260, 271, 324, 331, 334, 444, 450, 458], "current": [5, 9, 10, 11, 12, 15, 24, 25, 26, 30, 35, 36, 40, 128, 130, 132, 134, 136, 138, 144, 214, 220, 233, 260, 271, 298, 328, 336, 361, 406], "support": [5, 7, 10, 12, 13, 14, 18, 19, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 38, 39, 44, 126, 127, 131, 132, 135, 137, 144, 145, 149, 152, 164, 165, 177, 180, 205, 206, 212, 213, 214, 239, 243, 244, 245, 246, 249, 250, 251, 252, 257, 259, 260, 266, 271, 277, 289, 294, 298, 301, 317, 326, 327, 328, 334, 349, 380, 384, 406, 442, 449, 450, 458, 460, 465, 482], "neg": [5, 11, 15, 23, 26, 37, 48, 49, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 80, 81, 82, 84, 85, 88, 89, 120, 177, 205, 215, 216, 218, 237, 270, 283, 316, 330, 331, 334, 368, 406, 461, 472, 474, 476, 478, 485, 487], "valu": [5, 6, 9, 10, 11, 12, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 40, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 93, 96, 98, 99, 100, 101, 102, 103, 104, 108, 111, 112, 113, 114, 118, 119, 120, 121, 126, 128, 131, 132, 134, 142, 144, 145, 202, 206, 207, 211, 213, 215, 216, 218, 220, 237, 238, 243, 244, 245, 246, 249, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 276, 277, 282, 283, 285, 287, 288, 290, 299, 300, 301, 312, 316, 317, 318, 324, 326, 327, 328, 330, 331, 334, 336, 349, 350, 368, 374, 376, 378, 380, 384, 386, 388, 390, 392, 394, 396, 400, 402, 406, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 434, 436, 438, 442, 444, 446, 448, 450, 454, 456, 458, 460, 461, 463, 464, 465, 469, 474, 478, 482, 485, 487], "opaqu": [5, 7, 9, 11, 31, 107, 129, 156, 160, 162, 173, 185, 287, 289, 401, 406, 441, 443, 449, 455, 457, 459, 479], "assign": [5, 22, 200, 201, 213, 222, 228, 235, 308, 310, 327, 340, 351, 364, 411, 444], "each": [5, 7, 11, 12, 13, 17, 22, 23, 26, 30, 31, 32, 33, 35, 36, 37, 38, 59, 61, 62, 63, 98, 99, 100, 101, 102, 103, 104, 118, 127, 128, 130, 133, 135, 136, 137, 145, 156, 164, 168, 169, 173, 190, 191, 208, 213, 218, 243, 246, 249, 251, 260, 261, 262, 266, 275, 276, 277, 285, 287, 289, 301, 315, 316, 319, 324, 331, 334, 350, 386, 388, 390, 392, 394, 396, 406, 442, 444, 446, 448, 450, 458, 482], "call": [5, 7, 11, 13, 16, 20, 22, 23, 24, 25, 27, 31, 35, 36, 38, 40, 82, 126, 128, 136, 137, 144, 145, 243, 260, 261, 271, 276, 277, 280, 283, 285, 289, 291, 299, 300, 315, 324, 326, 327, 331, 334, 335, 349, 350, 368, 402, 403, 411, 442, 456, 458, 480, 483], "byte": [5, 13, 26, 40, 184, 185, 260, 261, 266, 287, 299, 442, 444], "compar": [5, 13, 36, 40, 44, 142, 211, 214, 260, 287, 324, 325, 328, 349, 470], "two": [5, 13, 14, 19, 22, 23, 27, 30, 31, 33, 34, 36, 37, 40, 44, 47, 65, 86, 87, 90, 93, 107, 118, 121, 126, 129, 132, 136, 144, 157, 174, 190, 191, 233, 245, 253, 260, 268, 287, 321, 322, 328, 331, 334, 361], "tenor": [5, 287], "equal": [5, 11, 15, 17, 21, 27, 36, 38, 41, 48, 66, 67, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 119, 126, 128, 129, 130, 135, 139, 144, 147, 148, 157, 174, 243, 245, 246, 260, 261, 276, 277, 287, 299, 300, 301, 334, 411, 442, 444, 450, 458], "decid": [5, 31, 160, 162, 287, 349, 374, 378, 386, 388, 392, 394, 398, 408, 414, 416, 420, 424, 428, 432, 436, 446, 452, 467, 472, 476, 485], "reorder": [5, 12, 14, 19, 21, 29, 33, 35, 36, 37, 40, 44, 132, 139, 145, 166, 180, 181, 184, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 220, 221, 224, 226, 227, 229, 233, 238, 242, 253, 260, 265, 266, 287, 296, 305, 306, 314, 315, 316, 317, 318, 321, 323, 324, 326, 327, 336, 338, 345, 350, 353, 358, 361, 371, 456, 482, 491], "need": [5, 12, 13, 18, 19, 27, 31, 33, 35, 36, 126, 136, 144, 185, 203, 204, 206, 207, 210, 226, 227, 233, 260, 266, 285, 287, 292, 314, 317, 318, 323, 331, 334, 335, 361, 368, 483], "below": [5, 9, 11, 14, 15, 17, 18, 19, 20, 23, 24, 27, 28, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 135, 136, 137, 140, 143, 144, 220, 243, 287, 315, 334, 336, 349, 450, 483], "circumst": [5, 7, 287, 289, 349], "regard": [5, 33, 61, 287], "struct": [5, 203, 210, 238, 243, 244, 245, 248, 249, 251, 252, 253, 255, 257, 258, 259, 260, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 280, 281, 285, 287, 288, 289, 292, 296, 301, 314, 323, 334, 350], "when": [5, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 27, 28, 31, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 157, 164, 168, 169, 174, 176, 190, 191, 212, 215, 216, 243, 260, 261, 266, 271, 277, 287, 301, 326, 327, 330, 331, 334, 349, 350, 406, 442, 450, 458], "underli": [5, 8, 27, 30, 126, 131, 256, 260, 261, 276, 277, 286, 287, 291, 292, 299, 300, 335, 368, 411, 442, 456], "For": [5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 25, 27, 28, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 64, 66, 67, 78, 79, 86, 96, 98, 99, 100, 101, 102, 103, 104, 126, 128, 130, 132, 134, 136, 138, 139, 142, 144, 157, 163, 171, 174, 177, 185, 199, 209, 213, 218, 221, 224, 229, 243, 244, 246, 257, 260, 261, 266, 271, 277, 280, 287, 289, 299, 301, 306, 315, 316, 321, 324, 326, 327, 331, 334, 335, 338, 345, 349, 353, 368, 406, 442, 449, 450, 458, 461], "exampl": [5, 14, 16, 19, 20, 22, 31, 32, 33, 34, 35, 36, 40, 42, 64, 66, 67, 70, 86, 96, 98, 99, 100, 101, 102, 103, 104, 119, 127, 143, 144, 157, 163, 171, 174, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 244, 257, 260, 266, 271, 287, 294, 305, 307, 309, 311, 313, 320, 322, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 341, 346, 348, 349, 352, 354, 356, 358, 360, 363, 365, 367, 368, 370, 406, 444, 450, 458, 461], "one": [5, 7, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 27, 28, 30, 31, 33, 34, 36, 37, 38, 40, 41, 42, 44, 57, 59, 64, 66, 67, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 119, 126, 127, 128, 129, 133, 134, 135, 136, 138, 139, 142, 144, 145, 157, 174, 177, 199, 209, 213, 221, 224, 227, 229, 233, 243, 246, 252, 253, 260, 261, 266, 276, 277, 287, 289, 294, 299, 300, 301, 306, 315, 321, 324, 325, 326, 327, 331, 334, 335, 336, 337, 338, 345, 349, 350, 353, 361, 368, 398, 406, 444, 449, 456, 464], "while": [5, 13, 19, 20, 22, 23, 26, 35, 36, 40, 86, 126, 134, 136, 142, 157, 206, 207, 219, 287, 289, 317, 318, 328, 334, 470], "underneath": [5, 287], "both": [5, 13, 15, 17, 18, 19, 20, 22, 24, 27, 28, 29, 30, 31, 35, 36, 41, 44, 47, 49, 50, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 80, 81, 87, 90, 93, 96, 121, 126, 127, 132, 136, 138, 139, 142, 157, 213, 217, 226, 229, 237, 244, 245, 252, 257, 260, 271, 287, 305, 326, 331, 332, 334, 335, 336, 349, 353, 444], "nhwc": [5, 22, 135, 174, 202, 218, 231, 287, 312, 334, 357], "still": [5, 12, 19, 35, 136, 144, 287, 334], "op_handl": 6, "attr": [6, 9, 11, 12, 13, 23, 35, 128, 134, 213, 214, 220, 227, 238, 243, 244, 245, 248, 249, 251, 252, 255, 257, 258, 259, 262, 263, 266, 267, 268, 269, 270, 272, 273, 275, 327, 328, 336, 350, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 450, 452, 454, 458, 463, 464, 465, 467, 469, 472, 474, 476, 478, 482, 485, 487], "akind": [6, 238, 243, 253, 266, 296, 299, 300, 402], "string": [6, 19, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 78, 79, 87, 88, 89, 90, 93, 94, 95, 96, 118, 119, 121, 145, 199, 200, 201, 202, 203, 208, 209, 210, 212, 213, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 266, 271, 288, 296, 306, 308, 310, 312, 314, 319, 321, 323, 331, 332, 334, 335, 338, 340, 343, 345, 347, 351, 353, 357, 359, 362, 364, 366, 368, 403], "verbose_nam": [6, 238, 288], "add_input": 6, "add_output": 6, "templat": [6, 132, 145, 211, 271, 278, 296, 300, 324, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "typenam": [6, 211, 278, 296, 300, 324, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "is_sam": [6, 211, 324], "int64_t": [6, 185, 211, 214, 220, 238, 250, 288, 324, 328, 336, 461], "set_attr": 6, "name": [6, 11, 15, 17, 18, 19, 21, 23, 25, 28, 33, 36, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 129, 130, 132, 134, 135, 136, 137, 138, 139, 143, 144, 145, 157, 174, 184, 185, 190, 191, 238, 243, 271, 288, 305, 334, 342, 349, 369, 461], "specifi": [6, 9, 10, 11, 12, 15, 17, 18, 19, 21, 23, 25, 28, 30, 31, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 57, 59, 60, 64, 65, 66, 67, 78, 79, 87, 88, 89, 90, 93, 96, 98, 99, 100, 101, 102, 103, 104, 118, 119, 120, 121, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 142, 145, 157, 164, 165, 176, 177, 190, 191, 203, 204, 206, 207, 210, 212, 213, 214, 216, 227, 243, 244, 246, 257, 260, 261, 271, 276, 277, 281, 289, 298, 299, 300, 301, 314, 315, 317, 318, 323, 326, 327, 328, 331, 334, 335, 336, 349, 368, 402, 411, 442, 450, 456, 458, 461, 464, 480], "convolut": [6, 11, 13, 14, 19, 21, 22, 26, 28, 33, 34, 35, 36, 40, 59, 60, 61, 62, 63, 129, 132, 134, 144, 145, 147, 148, 157, 166, 168, 169, 174, 180, 181, 203, 204, 205, 206, 207, 210, 226, 227, 242, 243, 260, 265, 266, 305, 314, 315, 316, 317, 318, 322, 323, 334, 350, 385, 386, 387, 388, 389, 390, 406, 436, 449, 450, 461, 491], "relu": [6, 14, 15, 22, 23, 28, 33, 35, 44, 82, 94, 106, 130, 136, 147, 148, 166, 168, 169, 176, 177, 200, 201, 203, 204, 205, 206, 207, 209, 210, 215, 216, 217, 218, 219, 220, 221, 225, 227, 237, 244, 252, 263, 308, 310, 314, 315, 316, 317, 318, 321, 323, 330, 332, 335, 336, 337, 338, 347, 350, 368], "bound": [6, 13, 28, 36, 37, 55, 56, 132], "set": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 22, 23, 24, 25, 26, 31, 32, 36, 37, 39, 40, 41, 44, 48, 58, 80, 81, 94, 98, 99, 100, 101, 102, 103, 104, 131, 132, 134, 136, 145, 149, 152, 200, 201, 205, 206, 212, 213, 222, 227, 228, 229, 235, 241, 243, 245, 249, 251, 254, 255, 257, 259, 260, 261, 263, 264, 266, 267, 269, 270, 271, 276, 277, 282, 283, 285, 288, 292, 299, 300, 308, 310, 315, 316, 317, 335, 340, 349, 350, 351, 353, 364, 411, 442, 444, 450, 458, 483], "self": [6, 132], "partition_handl": 7, "dnnl_graph_partition_t": [7, 238, 281, 285, 289], "p": [7, 18, 39, 132, 133, 184, 185, 212, 213, 238, 267, 326, 327, 461, 463], "aop": 7, "ekind": [7, 238, 289], "get_ops_num": 7, "get_op": 7, "compiled_partit": [7, 31, 238, 281, 289, 291, 297, 298], "e": [7, 11, 12, 13, 15, 21, 28, 35, 36, 38, 41, 44, 68, 71, 80, 81, 91, 92, 109, 113, 138, 143, 144, 157, 174, 200, 205, 206, 211, 213, 214, 215, 216, 218, 220, 222, 223, 233, 237, 243, 260, 271, 308, 317, 324, 327, 328, 330, 334, 336, 340, 343, 361, 368, 384, 404, 444, 450, 460, 465, 482], "is_support": [7, 238, 289], "get_input_port": [7, 31], "get_output_port": [7, 31], "get_engine_kind": 7, "raw": [7, 20, 211, 214, 324, 328, 334], "c": [7, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 26, 28, 29, 33, 38, 41, 42, 43, 44, 48, 50, 51, 53, 57, 80, 81, 88, 111, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 143, 144, 157, 174, 184, 199, 204, 205, 206, 207, 211, 212, 213, 214, 216, 218, 219, 220, 222, 224, 233, 238, 243, 246, 253, 254, 259, 260, 266, 270, 271, 277, 296, 299, 300, 301, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 403, 408, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 463, 465, 467, 469, 470, 472, 474, 476, 478, 480, 482, 485, 487], "handl": [7, 8, 11, 12, 13, 14, 20, 26, 31, 40, 134, 144, 199, 200, 201, 202, 208, 209, 212, 213, 214, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 238, 243, 246, 253, 260, 261, 266, 274, 276, 277, 278, 280, 281, 285, 287, 288, 289, 291, 292, 296, 299, 300, 301, 306, 308, 310, 312, 319, 321, 326, 327, 328, 332, 334, 338, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 362, 364, 366, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "directli": [7, 15, 19, 23, 40, 142, 144, 211, 260, 289, 324, 334, 368, 442, 483], "without": [7, 10, 12, 14, 19, 23, 26, 30, 31, 127, 136, 143, 147, 153, 156, 181, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 249, 251, 260, 261, 276, 277, 289, 299, 300, 301, 306, 308, 310, 312, 314, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 374, 376, 378, 380, 382, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 463, 465, 467, 469, 472, 474, 476, 478, 485, 487], "contain": [7, 11, 14, 15, 18, 22, 30, 31, 32, 33, 34, 36, 48, 49, 58, 59, 60, 61, 62, 63, 64, 78, 79, 88, 89, 96, 98, 99, 100, 101, 102, 103, 104, 120, 132, 144, 145, 157, 199, 209, 218, 221, 224, 229, 243, 249, 251, 260, 261, 262, 271, 276, 287, 289, 299, 300, 302, 306, 316, 321, 331, 334, 335, 338, 345, 353, 368, 386, 388, 390, 392, 394, 396, 404, 444, 446, 448, 456, 457, 464, 488], "onli": [7, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 35, 36, 38, 40, 41, 43, 44, 64, 66, 67, 81, 94, 95, 96, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 153, 156, 157, 174, 177, 181, 182, 183, 185, 202, 206, 207, 210, 233, 241, 243, 249, 250, 251, 253, 260, 261, 262, 271, 277, 287, 289, 298, 299, 301, 312, 314, 315, 317, 318, 323, 324, 328, 331, 334, 336, 349, 350, 361, 386, 388, 390, 392, 394, 396, 444, 446, 448, 450, 458], "unord": 7, "gener": [7, 11, 14, 18, 19, 22, 24, 25, 31, 32, 33, 36, 39, 42, 127, 131, 132, 143, 156, 160, 162, 173, 184, 185, 199, 200, 201, 202, 208, 209, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 252, 260, 271, 281, 306, 308, 310, 312, 319, 321, 328, 331, 332, 334, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 406], "debug": [7, 18, 19, 24, 131, 132, 168, 169, 260, 271, 331, 334, 335, 368, 442], "purpos": [7, 9, 19, 20, 24, 26, 27, 126, 131, 144, 145, 260, 324, 334, 350, 442], "verbos": [7, 19, 20, 128, 131, 271, 349, 370], "shape": [7, 14, 15, 21, 23, 31, 35, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 65, 78, 79, 86, 87, 88, 89, 90, 93, 98, 99, 100, 101, 102, 103, 104, 118, 119, 121, 124, 134, 139, 144, 164, 165, 170, 194, 205, 211, 214, 226, 233, 261, 266, 276, 287, 289, 299, 300, 315, 316, 324, 328, 329, 336, 337, 349, 361, 406, 456, 464], "choos": [7, 12, 18, 19, 20, 21, 23, 24, 31, 36, 38, 40, 44, 130, 139, 199, 205, 209, 221, 224, 226, 229, 260, 289, 306, 315, 316, 321, 328, 336, 338, 345, 349, 350, 353], "optim": [7, 11, 15, 17, 19, 21, 23, 26, 28, 30, 31, 37, 38, 39, 41, 43, 44, 66, 67, 129, 131, 134, 136, 137, 138, 139, 144, 163, 171, 199, 209, 221, 224, 227, 229, 289, 294, 306, 307, 308, 309, 310, 311, 315, 319, 320, 321, 322, 331, 334, 335, 338, 339, 340, 341, 345, 346, 347, 348, 349, 350, 353, 357, 358, 362, 363, 364, 365, 366, 367, 368], "save": [7, 31, 39, 43, 129, 177, 228, 289, 351], "some": [7, 9, 10, 11, 12, 13, 19, 21, 23, 28, 36, 39, 43, 127, 128, 129, 131, 132, 134, 142, 143, 144, 145, 206, 207, 210, 218, 220, 233, 246, 260, 277, 289, 301, 312, 314, 315, 317, 318, 323, 324, 328, 331, 334, 335, 336, 349, 361, 368, 444, 449], "under": [7, 23, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 289, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "certain": [7, 14, 15, 23, 24, 25, 33, 38, 145, 157, 174, 250, 289, 402, 449, 450], "dure": [7, 9, 10, 11, 12, 13, 14, 15, 19, 23, 24, 25, 26, 28, 31, 35, 36, 37, 38, 40, 41, 43, 44, 119, 124, 126, 128, 129, 132, 134, 144, 160, 162, 163, 171, 185, 233, 246, 277, 289, 301, 324, 335, 349, 361, 368, 406, 442, 444, 450, 458, 483], "stage": [7, 23, 38, 44, 119, 283, 287, 289], "unsupport": [7, 12, 37, 237, 289, 368], "befor": [7, 9, 12, 13, 20, 21, 23, 24, 25, 26, 27, 31, 34, 35, 58, 59, 60, 61, 62, 63, 82, 86, 118, 126, 132, 139, 145, 147, 148, 203, 210, 213, 233, 243, 260, 271, 283, 289, 314, 323, 326, 327, 331, 334, 335, 349, 350, 361, 368, 442, 450], "transform": [7, 13, 14, 37, 78, 79, 260, 289, 315, 316, 334, 444], "isn": [7, 44], "tensor_handl": 8, "aengin": [8, 299, 300, 301, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 446, 448, 452, 454, 463, 467, 469, 472, 474, 476, 478, 480, 482, 485, 487], "get_data_handl": [8, 27, 30, 126, 206, 207, 212, 213, 260, 317, 318, 326, 327, 334, 442], "set_data_handl": [8, 212, 213, 260, 299, 300, 326, 327, 442], "get_engin": [8, 260, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 480, 482, 485, 487], "storag": [8, 10, 14, 260, 261, 266, 276, 292, 299, 300], "On": [8, 19, 26, 35, 36, 44, 142, 144, 145, 157, 174, 176, 177, 246, 277, 301, 324, 335, 368, 442], "usm": [8, 178, 179, 197, 198, 260, 261, 276, 291, 298, 299, 300, 442], "alloc": [8, 13, 14, 20, 27, 126, 127, 178, 179, 190, 191, 197, 198, 199, 200, 201, 202, 204, 205, 208, 209, 212, 213, 214, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 260, 261, 276, 279, 284, 291, 292, 297, 298, 299, 300, 306, 308, 310, 312, 315, 319, 321, 328, 332, 334, 335, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 442, 444, 465], "associ": [8, 17, 21, 28, 31, 34, 35, 130, 133, 134, 137, 138, 139, 261, 266, 276, 285, 299, 300, 442, 480], "quick": 9, "recap": 9, "creation": [9, 10, 11, 12, 13, 15, 19, 21, 23, 28, 35, 38, 41, 44, 128, 131, 136, 139, 145, 212, 213, 214, 219, 220, 237, 260, 271, 287, 306, 307, 316, 319, 320, 321, 322, 324, 328, 331, 334, 335, 336, 338, 339, 340, 341, 345, 346, 350, 368, 483], "step": [9, 14, 19, 23, 35, 36, 37, 40, 128, 199, 222, 224, 306, 331, 334, 335, 340, 345, 349, 368], "consist": [9, 14, 17, 22, 24, 36, 44, 127, 136, 144, 260, 349, 444], "follow": [9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 157, 174, 202, 220, 227, 233, 243, 260, 270, 271, 312, 324, 331, 334, 335, 336, 349, 350, 361, 368, 374, 376, 408, 410, 411, 424, 426, 428, 430, 436, 438, 442, 444, 449, 458, 485, 487], "descriptor": [9, 11, 12, 13, 14, 15, 19, 21, 23, 28, 30, 35, 36, 38, 41, 43, 128, 129, 135, 136, 139, 144, 153, 156, 172, 173, 175, 184, 185, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244, 245, 248, 249, 251, 252, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 272, 273, 275, 276, 299, 300, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 331, 332, 335, 336, 338, 339, 340, 341, 343, 345, 346, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 484, 485, 486, 487], "backward": [9, 13, 14, 17, 19, 21, 22, 35, 66, 67, 80, 81, 133, 136, 139, 145, 147, 148, 176, 177, 182, 183, 199, 200, 206, 207, 210, 217, 223, 224, 228, 229, 233, 244, 249, 251, 252, 255, 257, 258, 262, 263, 266, 269, 270, 272, 273, 306, 308, 315, 317, 318, 323, 332, 343, 345, 349, 351, 353, 361, 373, 374, 377, 378, 385, 386, 391, 392, 397, 398, 407, 408, 413, 414, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 445, 446, 451, 452, 466, 467, 471, 472, 475, 476, 484, 485], "propag": [9, 13, 14, 15, 17, 19, 21, 22, 23, 28, 29, 35, 38, 41, 43, 81, 129, 130, 133, 135, 136, 137, 138, 139, 145, 176, 177, 182, 183, 184, 185, 199, 200, 217, 223, 224, 226, 227, 229, 243, 244, 249, 251, 252, 255, 257, 258, 262, 263, 266, 269, 270, 272, 273, 305, 306, 307, 308, 309, 315, 321, 322, 332, 333, 334, 340, 341, 343, 344, 345, 346, 350, 351, 352, 353, 354, 359, 360, 364, 365, 371, 373, 374, 375, 376, 377, 378, 379, 380, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 407, 408, 409, 410, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 445, 446, 447, 448, 451, 452, 453, 454, 460, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 482, 484, 485, 486, 487], "forward": [9, 13, 14, 17, 19, 21, 22, 35, 49, 132, 133, 136, 139, 176, 177, 182, 183, 203, 204, 205, 206, 207, 210, 216, 219, 223, 233, 237, 243, 244, 249, 251, 252, 255, 257, 258, 260, 262, 263, 266, 269, 270, 272, 273, 306, 307, 308, 309, 314, 315, 316, 317, 318, 321, 322, 323, 331, 332, 333, 335, 340, 341, 343, 344, 345, 346, 349, 351, 352, 353, 354, 359, 360, 361, 364, 365, 368, 374, 375, 376, 378, 379, 380, 386, 388, 389, 390, 392, 394, 395, 396, 398, 399, 400, 408, 409, 410, 414, 416, 417, 418, 420, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 446, 447, 448, 450, 452, 453, 454, 467, 468, 469, 472, 473, 474, 476, 477, 478, 485, 486, 487], "might": [9, 11, 12, 13, 15, 17, 19, 22, 23, 26, 28, 30, 36, 38, 40, 41, 43, 129, 134, 136, 137, 144, 157, 206, 207, 210, 214, 317, 318, 323, 324, 328, 331, 334, 336, 449], "well": [9, 12, 13, 14, 35, 36, 127, 143, 144, 145, 213, 214, 315, 324, 326, 328, 349, 411], "train": [9, 11, 12, 13, 19, 29, 35, 37, 40, 43, 50, 82, 127, 131, 144, 176, 177, 182, 183, 206, 207, 210, 223, 233, 244, 252, 305, 306, 307, 308, 309, 315, 332, 333, 343, 344, 345, 346, 349, 351, 352, 353, 354, 359, 360, 364, 365, 371], "specif": [9, 10, 11, 14, 15, 17, 18, 23, 25, 28, 31, 37, 43, 127, 129, 135, 136, 137, 153, 157, 160, 162, 168, 169, 172, 174, 184, 185, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 252, 253, 260, 261, 267, 271, 276, 285, 292, 299, 300, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 328, 330, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 398, 400, 442, 463], "aspect": [9, 349, 371], "sole": [9, 35], "detail": [9, 12, 14, 18, 19, 26, 35, 36, 40, 132, 142, 145, 205, 206, 213, 317, 324, 327, 334], "why": [9, 144], "found": [9, 12, 19, 128, 129, 142, 143, 144, 215, 228, 330, 351], "concept": [9, 44, 134, 253, 265, 274, 324, 325, 328, 329, 331, 334, 335, 336, 337, 349, 368, 371], "fact": [9, 42, 134, 334, 350], "import": [9, 11, 12, 14, 19, 35, 36, 40, 42, 127, 144, 331, 335, 368], "u": [9, 22, 136, 137, 147, 148, 211, 214, 220, 324, 328, 334, 336], "now": [9, 12, 22, 23, 30, 35, 38, 136, 199, 204, 206, 207, 209, 221, 224, 229, 233, 306, 317, 318, 321, 326, 327, 331, 334, 338, 345, 349, 353, 361, 368], "2": [9, 11, 15, 24, 26, 27, 28, 30, 37, 39, 41, 43, 44, 50, 51, 52, 58, 59, 60, 61, 63, 66, 67, 79, 80, 81, 86, 92, 94, 95, 99, 118, 127, 128, 131, 132, 136, 138, 144, 145, 147, 148, 149, 152, 153, 156, 157, 160, 169, 171, 181, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 260, 266, 271, 287, 306, 308, 310, 312, 314, 316, 317, 318, 319, 321, 323, 324, 326, 327, 328, 330, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 384, 406, 444, 450, 458, 460, 465, 482], "fulli": [9, 13, 14, 34, 36, 38, 44, 350], "correspond": [9, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 25, 26, 28, 30, 31, 36, 37, 38, 41, 44, 58, 59, 86, 98, 99, 100, 101, 102, 103, 104, 119, 127, 128, 130, 134, 135, 136, 137, 138, 144, 145, 157, 174, 185, 216, 218, 227, 243, 249, 251, 253, 254, 260, 261, 266, 270, 276, 299, 300, 324, 331, 334, 335, 349, 350, 368, 386, 388, 390, 392, 394, 396, 442, 444, 450, 458], "onc": [9, 11, 13, 24, 25, 35, 36, 40, 44, 131, 136, 144, 213, 266, 271, 283, 287, 315, 326, 327, 328, 329, 331, 334, 336, 337], "chang": [9, 10, 11, 12, 14, 19, 24, 25, 26, 30, 34, 35, 44, 119, 131, 134, 140, 144, 157, 163, 171, 181, 226, 243, 260, 266, 268, 271, 300, 315, 334, 349, 350, 442, 450, 460], "problem": [9, 23, 40, 134, 145, 214, 324, 328], "where": [9, 10, 11, 12, 13, 15, 17, 21, 22, 23, 26, 28, 36, 37, 38, 40, 41, 43, 44, 48, 51, 57, 58, 59, 64, 66, 67, 80, 81, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 119, 128, 129, 133, 135, 136, 137, 138, 144, 145, 157, 174, 228, 231, 243, 246, 277, 301, 314, 315, 316, 324, 334, 349, 351, 357, 450], "destin": [9, 11, 12, 21, 22, 23, 28, 35, 37, 38, 40, 44, 130, 134, 135, 137, 142, 184, 185, 199, 200, 201, 208, 209, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244, 245, 248, 249, 251, 252, 255, 257, 258, 259, 260, 262, 263, 266, 267, 268, 269, 272, 273, 275, 306, 308, 310, 316, 319, 320, 321, 331, 332, 334, 336, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 367, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 450, 452, 454, 461, 463, 464, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "so": [9, 11, 12, 14, 19, 20, 21, 25, 35, 36, 40, 42, 44, 132, 136, 139, 144, 153, 156, 181, 211, 213, 233, 243, 260, 266, 315, 316, 324, 331, 334, 335, 350, 361, 368, 449], "extra": [9, 13, 15, 18, 19, 25, 33, 36, 40, 144, 145, 177, 185, 334, 349], "were": [9, 13, 27, 126, 145, 177, 331, 334, 335, 368], "design": [9, 11, 12, 21, 41, 57, 137, 349], "extens": [9, 23, 24, 26, 27, 29, 39, 40, 126, 136, 149, 152, 219, 237, 256, 261, 276, 277, 286, 291, 294, 305], "henc": [9, 11, 13, 15, 23, 28, 36, 41, 131, 136, 137, 138, 142, 144, 177, 211, 249, 251, 262, 324, 334, 349, 386, 388, 390, 392, 394, 396, 446, 448], "thei": [9, 11, 13, 14, 15, 20, 23, 27, 31, 33, 36, 37, 38, 40, 41, 44, 78, 80, 81, 126, 129, 136, 144, 157, 212, 220, 326, 331, 334, 335, 336, 349, 350, 368], "structur": [9, 11, 144, 157, 185, 260, 271, 401, 404, 441, 443, 449, 455, 457, 459, 479, 488], "must": [9, 10, 11, 12, 13, 15, 17, 19, 21, 23, 27, 31, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 134, 136, 143, 157, 185, 243, 245, 246, 249, 251, 260, 261, 262, 266, 270, 271, 276, 277, 283, 287, 299, 300, 301, 315, 316, 331, 334, 335, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 456, 458, 463, 464, 465, 467, 469, 472, 474, 476, 478, 482, 485, 487], "them": [9, 19, 20, 28, 30, 31, 33, 34, 35, 36, 40, 98, 99, 100, 101, 102, 103, 104, 127, 128, 144, 164, 176, 243, 244, 257, 260, 270, 331, 334, 349, 374, 376, 406, 408, 410, 424, 426, 428, 430, 436, 438, 487], "setter": [9, 25], "destroi": [9, 13, 126, 185, 243, 253, 260, 266, 274, 280, 281, 285, 288, 289, 292, 334, 349, 368, 444, 450, 458], "right": [9, 23, 28, 43, 44, 48, 49, 58, 59, 60, 61, 62, 63, 80, 81, 86, 88, 89, 129, 135, 137, 138, 144, 145, 184, 185, 186, 187, 209, 226, 228, 233, 249, 251, 260, 262, 321, 349, 351, 361, 386, 388, 390, 392, 394, 396, 446, 448, 461], "after": [9, 11, 12, 15, 23, 31, 36, 38, 118, 132, 136, 143, 145, 157, 204, 209, 215, 216, 218, 233, 237, 243, 271, 285, 289, 321, 330, 331, 334, 335, 349, 350, 361, 368, 384, 449, 450, 460, 465, 482], "modifi": [9, 15, 23, 31, 36, 38, 41, 44, 138, 243, 264, 282], "stai": [9, 144, 444], "equival": [9, 27, 126, 402, 411, 442, 456, 480], "null": [9, 203, 210, 215, 243, 244, 245, 248, 249, 251, 252, 255, 257, 258, 259, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 301, 314, 323, 330, 402, 411, 442, 456, 480], "upon": [9, 35, 331, 334, 335, 349, 368], "unless": [9, 17, 20, 41, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 260, 261, 266, 276, 299, 300, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 362, 364, 366, 442, 456, 464], "simpli": [9, 21, 23, 139, 260, 324], "omit": [9, 11, 182, 183, 315], "skeleton": [9, 11], "simplifi": [9, 22, 23, 36, 58, 84, 135, 143, 144], "read": [9, 27, 126, 199, 200, 201, 202, 209, 211, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 306, 308, 310, 312, 321, 324, 332, 335, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 362, 364, 366, 368, 442], "dnnl_primitive_attr_t": [9, 238, 243, 458], "dnnl_primitive_attr_cr": [9, 238, 243], "dnnl_primitive_attr_set_someth": 9, "param": [9, 11, 13, 203, 210, 211, 314, 323, 324, 450], "dnnl_primitive_attr_set_something_els": 9, "other_param": [9, 11], "dnnl_eltwise_backward_primitive_desc_cr": [9, 210, 238, 252, 323], "op_pd": [9, 11, 13], "hint_fwd_pd": [9, 238, 244, 249, 251, 252, 255, 257, 258, 262, 263, 269, 270, 272, 273, 374, 378, 386, 388, 392, 394, 398, 408, 414, 416, 420, 424, 428, 432, 436, 446, 452, 467, 472, 476, 485], "here": [9, 11, 12, 13, 15, 21, 22, 23, 28, 31, 35, 36, 37, 43, 57, 58, 78, 79, 127, 129, 132, 136, 137, 142, 143, 144, 145, 147, 199, 200, 206, 211, 216, 220, 223, 224, 228, 233, 241, 260, 306, 308, 316, 317, 324, 326, 327, 331, 334, 336, 343, 345, 349, 350, 351, 361, 369, 444], "doe": [9, 11, 12, 13, 17, 18, 19, 21, 23, 26, 28, 30, 35, 38, 40, 43, 45, 46, 70, 71, 72, 73, 76, 77, 83, 91, 92, 97, 105, 107, 108, 109, 115, 117, 118, 122, 124, 125, 127, 129, 131, 132, 133, 135, 137, 139, 143, 144, 176, 226, 243, 246, 248, 260, 277, 301, 334, 349, 350, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 444, 446, 448, 450, 452, 454, 458, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "effect": [9, 11, 23, 86, 128, 271, 406], "we": [9, 11, 12, 13, 15, 22, 23, 28, 33, 35, 37, 41, 44, 58, 59, 127, 129, 130, 135, 136, 137, 138, 144, 199, 203, 206, 207, 209, 210, 211, 212, 213, 214, 218, 221, 224, 226, 229, 233, 306, 314, 317, 318, 321, 323, 324, 326, 327, 328, 331, 334, 335, 338, 345, 349, 350, 353, 361, 368], "immedi": [9, 349, 483], "dnnl_primitive_attr_destroi": [9, 238, 243], "dnnl": [9, 10, 11, 12, 13, 14, 15, 17, 19, 23, 24, 25, 27, 28, 30, 31, 35, 36, 38, 40, 41, 42, 44, 126, 128, 132, 133, 135, 136, 140, 143, 144, 145, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 302, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368], "primitive_attr": [9, 11, 12, 13, 14, 23, 35, 40, 44, 201, 202, 205, 209, 211, 213, 214, 220, 221, 225, 227, 231, 238, 243, 296, 310, 312, 316, 321, 324, 325, 327, 328, 329, 336, 337, 338, 347, 350, 357, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 450, 452, 454, 460, 461, 463, 464, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "set_someth": 9, "set_something_els": 9, "primitive_desc": [9, 11, 12, 13, 14, 15, 23, 28, 35, 36, 41, 128, 136, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 244, 245, 249, 251, 252, 255, 257, 258, 259, 262, 263, 266, 267, 269, 270, 272, 273, 296, 299, 300, 306, 308, 310, 312, 315, 316, 317, 318, 319, 321, 324, 326, 327, 328, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 445, 447, 450, 451, 453, 456, 458, 461, 462, 464, 466, 468, 470, 471, 473, 475, 477, 481, 484, 486], "pd": [9, 11, 22, 212, 233, 361, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 445, 446, 447, 448, 451, 452, 453, 454, 456, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 484, 485, 486, 487], "happen": [9, 12, 23, 36, 40, 57, 134, 144, 203, 210, 220, 246, 277, 301, 314, 323, 334, 336, 349], "automat": [9, 40, 131, 148, 156, 157, 173, 174, 384, 482], "As": [9, 11, 12, 13, 15, 19, 20, 22, 23, 28, 31, 35, 36, 40, 134, 142, 144, 212, 233, 243, 260, 326, 327, 361, 444, 450], "mention": [9, 13, 15, 28, 36, 40, 212, 316, 326, 327, 334], "abov": [9, 12, 13, 15, 18, 24, 27, 28, 30, 33, 36, 38, 40, 86, 126, 127, 138, 144, 212, 260, 326, 327, 334, 350, 444], "enabl": [9, 10, 11, 13, 14, 15, 19, 23, 24, 25, 26, 27, 28, 30, 32, 37, 38, 39, 40, 41, 42, 44, 126, 127, 131, 132, 138, 140, 144, 199, 209, 221, 224, 229, 238, 260, 271, 283, 294, 296, 306, 315, 316, 321, 328, 334, 336, 338, 345, 353, 442], "extend": [9, 12, 27, 30, 126, 181, 243], "behavior": [9, 10, 11, 13, 15, 19, 23, 36, 38, 39, 40, 41, 43, 44, 132, 136, 138, 153, 156, 158, 159, 176, 177, 181, 243, 261, 274, 287, 299, 480, 483], "explan": 9, "provid": [9, 10, 11, 12, 13, 14, 15, 19, 20, 23, 25, 27, 30, 31, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 136, 176, 177, 190, 191, 199, 206, 209, 221, 224, 229, 233, 243, 260, 264, 266, 282, 283, 287, 306, 317, 321, 338, 345, 349, 350, 353, 361, 412, 442, 450], "section": [9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 26, 28, 35, 36, 40, 43, 129, 131, 132, 136, 137, 143, 211, 324, 334], "scratchpad": [9, 14, 19, 22, 23, 36, 184, 185, 190, 191, 243, 266, 305, 458, 461], "intermedi": [9, 11, 12, 22, 23, 26, 28, 31, 36, 40, 43, 134, 211, 226, 246, 277, 301, 324, 328], "temporari": [9, 13, 14, 22, 36, 212, 213, 266, 271], "implicit": [9, 10, 17, 21, 22, 23, 33, 44, 134, 139, 158, 159], "down": [9, 10, 23, 31, 34, 40, 144, 350], "convers": [9, 10, 12, 23, 34, 40, 107, 158, 159], "f32": [9, 10, 11, 12, 15, 17, 23, 26, 28, 29, 30, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 130, 133, 134, 135, 136, 137, 138, 142, 144, 158, 159, 161, 172, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 305, 306, 308, 310, 312, 316, 317, 319, 321, 324, 327, 328, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 362, 364, 366, 368, 450], "quantiz": [9, 11, 26, 34, 35, 40, 44, 64, 66, 67, 134, 136, 164, 165, 166, 202, 205, 211, 213, 238, 243, 305, 312, 316, 325, 327, 336, 337, 450, 458], "infer": [9, 11, 12, 19, 29, 39, 40, 44, 127, 131, 136, 144, 163, 170, 171, 176, 177, 182, 183, 194, 203, 204, 205, 212, 213, 220, 233, 238, 305, 324, 337, 350, 361, 371], "post": [9, 12, 26, 29, 35, 36, 37, 40, 168, 169, 176, 177, 200, 201, 202, 205, 209, 221, 225, 227, 231, 243, 266, 305, 308, 309, 310, 311, 321, 322, 338, 339, 347, 348, 350, 357, 449, 450, 458], "fuse": [9, 11, 12, 14, 15, 17, 23, 28, 34, 35, 36, 37, 38, 44, 176, 177, 227, 243, 244, 266, 308, 309, 310, 311, 321, 322, 336, 337, 338, 339, 347, 348, 450], "appli": [9, 11, 12, 15, 17, 23, 26, 28, 35, 37, 38, 40, 44, 45, 47, 55, 64, 65, 66, 67, 68, 71, 72, 74, 76, 82, 83, 84, 86, 87, 90, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 109, 111, 113, 118, 120, 121, 122, 129, 133, 135, 136, 157, 163, 168, 169, 171, 174, 177, 215, 220, 231, 245, 246, 260, 266, 270, 277, 301, 316, 330, 331, 334, 336, 350, 357, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 442, 485, 487], "mostli": [9, 36, 157, 174, 260], "becaus": [9, 11, 12, 15, 19, 24, 25, 28, 36, 37, 41, 43, 170, 174, 184, 193, 194, 233, 252, 260, 315, 316, 334, 349, 350, 361, 368, 450], "separ": [9, 11, 15, 23, 36, 41, 127, 134, 145, 233, 260, 266, 326, 327, 334, 350, 361], "delai": [9, 206, 207, 317, 318], "successfulli": 9, "whatev": [9, 227, 350], "configur": [9, 13, 15, 18, 23, 25, 26, 36, 37, 41, 44, 81, 130, 136, 177, 190, 191, 195, 196, 205, 243, 244, 257, 271, 314, 315, 316, 321, 322, 349, 370, 449, 450, 458], "want": [9, 12, 13, 19, 36, 40, 127], "howev": [9, 10, 11, 12, 13, 15, 19, 21, 27, 28, 35, 36, 40, 41, 44, 127, 129, 130, 137, 138, 142, 144, 213, 214, 233, 252, 260, 315, 324, 326, 328, 331, 334, 335, 350, 361, 368], "try": [9, 205, 206, 213, 218, 233, 237, 317, 327, 334, 361, 368], "dnnl_unimpl": [9, 128, 170, 193, 194, 205, 206, 213, 271, 317, 327], "unfortun": [9, 40, 127, 143], "about": [9, 11, 13, 36, 44, 128, 131, 132, 144, 145, 260, 334, 350], "what": [9, 11, 12, 36, 37, 164, 218, 237, 238, 260, 266, 331, 334, 349, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 403, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487, 489], "exactli": [9, 12, 23, 36, 40, 98, 99, 100, 101, 102, 103, 104, 260], "go": [9, 35, 61, 144, 211, 324, 331, 334, 335, 368], "wrong": [9, 128, 334], "document": [9, 11, 12, 22, 36, 40, 42, 127, 142], "benefici": [10, 28, 36, 144, 449], "speedup": [10, 350], "notic": [10, 19, 168, 169, 334], "impact": [10, 12, 26, 30, 143, 144, 145], "accuraci": [10, 12, 23, 30, 35, 36, 37, 40, 44, 211, 218, 219, 324, 325, 334, 335], "how": [10, 11, 12, 13, 15, 17, 21, 23, 27, 28, 30, 31, 35, 37, 38, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 78, 79, 88, 89, 119, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 142, 144, 145, 147, 148, 203, 204, 205, 206, 207, 210, 211, 212, 213, 233, 243, 246, 260, 277, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 450], "numer": [10, 15, 28, 34, 40, 41, 51, 80, 81, 138, 142, 148, 212, 213, 218, 219, 233, 237, 335, 361, 368], "alter": [10, 136], "narrow": 10, "f16": [10, 11, 15, 17, 23, 26, 28, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 130, 133, 134, 135, 136, 137, 138, 142, 158, 159, 161, 172], "bf16": [10, 11, 15, 17, 20, 23, 26, 28, 29, 36, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 130, 133, 134, 135, 136, 137, 138, 142, 158, 159, 161, 172, 206, 305], "tf32": [10, 158, 159], "furthermor": [10, 23, 58], "do": [10, 11, 12, 13, 15, 20, 26, 35, 36, 40, 48, 88, 126, 127, 135, 139, 142, 144, 157, 174, 188, 189, 213, 219, 226, 260, 326, 349, 350, 442, 444], "affect": [10, 11, 30, 37, 40, 128, 144, 157, 271], "datatyp": [10, 12, 26, 136], "remain": [10, 22, 23, 58, 144, 212, 213, 233, 326, 327, 349, 361, 444, 450], "3": [10, 11, 12, 26, 28, 33, 37, 40, 44, 50, 51, 52, 76, 81, 94, 132, 136, 138, 140, 144, 145, 153, 160, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 260, 266, 287, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 332, 334, 335, 338, 340, 343, 347, 349, 350, 351, 353, 355, 357, 359, 362, 364, 366, 368, 444], "strict": [10, 158], "disabl": [10, 19, 24, 25, 39, 131, 132, 145, 249, 251, 255, 259, 264, 271, 282, 283, 388, 390, 394, 396], "smaller": [10, 19, 55, 56, 86, 134, 220, 336], "least": [10, 14, 18, 44, 57, 131, 246, 277, 299, 301, 331, 334, 442], "accur": [10, 23, 40, 214, 328], "expon": [10, 97, 142, 147, 148], "mantissa": [10, 142, 153, 161, 172], "bit": [10, 11, 19, 20, 24, 26, 34, 35, 36, 37, 40, 142, 149, 152, 153, 161, 172, 211, 213, 243, 246, 271, 277, 294, 301, 316, 324, 335, 450, 458, 483], "ignor": [10, 23, 25, 26, 48, 49, 52, 59, 60, 78, 79, 88, 89, 218, 260, 334], "integr": [10, 14, 19, 26, 31, 36, 42, 132, 271], "onednn_default_fpmath_mod": 10, "environ": [10, 18, 19, 24, 25, 30, 32, 39, 40, 42, 127, 131, 132, 143, 145, 271, 349, 350], "variabl": [10, 15, 17, 18, 19, 21, 23, 24, 25, 28, 30, 32, 38, 39, 41, 42, 43, 44, 45, 48, 55, 57, 58, 68, 71, 72, 74, 76, 82, 83, 86, 88, 105, 109, 111, 113, 122, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 143, 145, 163, 171, 233, 238, 266, 271, 334, 349, 350, 361], "dnnl_set_default_fpmath_mod": [10, 238, 254], "set_default_fpmath_mod": [10, 271, 296], "build": [10, 13, 39, 42, 119, 140, 190, 191, 203, 204, 206, 207, 210, 212, 213, 233, 271, 287, 294, 314, 315, 317, 318, 323, 326, 327, 335, 361, 406], "arm": [10, 145, 294], "instruct": [10, 19, 23, 24, 26, 37, 39, 40, 127, 132, 142, 145, 149, 152, 174, 260, 261, 271, 276, 299, 300, 334, 442], "dispatch": [10, 14, 23, 25, 271, 370], "bfloat16": [10, 24, 26, 36, 149, 152, 153, 161, 206, 305, 317], "kernel": [10, 11, 19, 22, 25, 27, 39, 48, 49, 58, 59, 60, 61, 62, 63, 66, 67, 88, 89, 132, 144, 164, 165, 184, 185, 203, 204, 206, 207, 210, 219, 226, 228, 237, 238, 243, 262, 271, 281, 314, 315, 317, 318, 323, 328, 349, 351, 446, 448, 450, 461], "avail": [10, 16, 19, 20, 23, 24, 26, 35, 39, 42, 44, 98, 99, 100, 101, 102, 103, 104, 119, 128, 132, 145, 170, 193, 194, 199, 205, 206, 212, 213, 266, 306, 317, 326, 327, 335, 349, 368, 460], "hardwar": [10, 12, 15, 17, 23, 27, 28, 31, 37, 40, 43, 127, 129, 132, 136, 137, 142, 281, 349], "introduc": [10, 30, 40, 131, 142, 144, 334, 350], "drop": 10, "typic": [11, 12, 15, 21, 31, 36, 37, 40, 43, 86, 125, 127, 134, 137, 138, 144, 168, 169, 211, 220, 260, 266, 268, 324, 334, 336], "bandwidth": [11, 36, 349], "pressur": [11, 36], "lead": [11, 13, 15, 17, 19, 20, 23, 26, 28, 33, 36, 40, 41, 43, 134, 144, 164, 214, 246, 277, 301, 328, 334], "higher": [11, 15, 19, 23, 34, 37, 41, 44, 127, 129, 130, 135, 144], "perform": [11, 12, 13, 14, 19, 20, 24, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 40, 45, 47, 48, 50, 58, 61, 65, 66, 67, 78, 80, 81, 83, 87, 88, 90, 91, 93, 94, 98, 99, 100, 101, 102, 103, 104, 115, 117, 118, 121, 124, 127, 136, 140, 142, 144, 145, 146, 177, 182, 183, 206, 207, 210, 226, 227, 228, 243, 244, 245, 246, 249, 251, 252, 257, 258, 259, 260, 262, 263, 271, 273, 277, 294, 301, 305, 314, 315, 316, 317, 318, 323, 324, 325, 328, 334, 335, 336, 351, 368, 384, 442, 449, 450, 458, 482], "append": [11, 243, 450], "mechan": [11, 27, 34, 39, 42, 126, 127, 212, 213, 326, 327], "multipl": [11, 12, 13, 14, 15, 17, 22, 23, 30, 31, 33, 34, 36, 40, 41, 103, 127, 133, 134, 140, 147, 148, 157, 174, 180, 181, 225, 233, 242, 246, 260, 265, 275, 312, 315, 324, 325, 328, 329, 331, 334, 336, 337, 347, 349, 350, 361, 439, 442, 444, 460, 491], "order": [11, 12, 14, 19, 22, 23, 24, 27, 30, 35, 36, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 132, 134, 136, 144, 145, 157, 164, 165, 174, 195, 196, 206, 207, 210, 218, 243, 246, 248, 249, 251, 260, 261, 262, 271, 277, 301, 317, 318, 323, 334, 350, 384, 386, 388, 390, 392, 394, 396, 406, 444, 446, 448, 450, 458], "just": [11, 12, 19, 22, 23, 25, 28, 36, 39, 131, 132, 143, 144, 147, 157, 205, 206, 213, 317, 327, 328, 331, 334, 335, 349, 368], "like": [11, 14, 15, 19, 22, 23, 31, 36, 38, 40, 42, 43, 51, 86, 129, 136, 144, 145, 243, 287, 324, 328, 334, 449, 450], "dnnl_post_ops_t": [11, 238, 243, 450], "post_op": [11, 35, 201, 202, 205, 209, 214, 220, 221, 225, 227, 238, 243, 296, 310, 312, 316, 321, 328, 336, 338, 347, 350, 411, 458], "attach": [11, 12, 19, 21, 35, 36, 127, 331, 334, 335, 368, 450], "set_post_op": [11, 23, 35, 201, 202, 205, 209, 214, 220, 221, 225, 227, 310, 312, 316, 321, 328, 336, 338, 347, 350, 458], "dnnl_primitive_attr_set_post_op": [11, 238, 243], "simpl": [11, 12, 20, 23, 39, 128, 143, 145, 203, 210, 211, 214, 220, 314, 316, 323, 324, 328, 334, 336], "po": [11, 214, 220, 328, 336], "assert": [11, 13, 30, 144, 204, 206, 207, 211, 212, 213, 260, 315, 317, 318, 324, 444], "len": [11, 246, 277, 301, 450], "append_someth": 11, "particular": [11, 13, 14, 19, 22, 23, 26, 30, 36, 40, 44, 138, 144, 145, 157, 216, 218, 253, 260, 266, 274, 324, 331, 334, 335, 368, 402, 444], "append_something_els": 11, "note": [11, 12, 13, 19, 35, 36, 37, 40, 60, 127, 136, 144, 145, 157, 199, 200, 208, 211, 213, 223, 224, 228, 233, 248, 266, 287, 306, 308, 315, 316, 319, 324, 326, 327, 334, 343, 345, 351, 361, 384], "matter": [11, 30, 36, 40], "further": [11, 22, 23, 27, 58, 126, 135, 157, 174], "would": [11, 12, 13, 15, 19, 22, 23, 25, 35, 36, 40, 41, 44, 129, 134, 144, 211, 243, 244, 246, 260, 270, 277, 301, 316, 324, 334, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 444, 450, 458, 464, 485, 487], "togeth": [11, 32, 144, 270, 350, 374, 408, 424, 428, 436, 438, 449, 485], "anoth": [11, 13, 22, 36, 107, 127, 132, 136, 144, 266, 287, 315, 331, 334, 335, 368, 406, 411, 444], "sequenc": [11, 14, 22, 23, 40, 132, 157, 212, 213, 233, 243, 326, 327, 331, 335, 350, 361, 368, 450], "appear": [11, 21, 36, 137, 144, 145], "maximum": [11, 12, 14, 17, 33, 36, 100, 129, 166, 212, 213, 228, 233, 250, 277, 324, 351, 361], "32": [11, 20, 36, 37, 40, 142, 153, 157, 161, 172, 206, 207, 209, 212, 213, 238, 243, 246, 266, 277, 301, 316, 317, 318, 321, 450, 458], "page": [11, 14, 21, 36, 37, 61, 132, 133, 134, 139, 145, 369], "moreov": [11, 22, 23, 25, 28, 37, 127, 157, 174], "depend": [11, 12, 13, 14, 15, 18, 19, 26, 31, 34, 37, 40, 41, 42, 44, 54, 127, 130, 131, 136, 144, 157, 174, 243, 246, 248, 252, 260, 261, 266, 276, 277, 291, 298, 299, 300, 301, 314, 315, 324, 334, 335, 349, 368, 384, 398, 400, 444, 450, 458], "actual": [11, 12, 13, 14, 23, 36, 38, 40, 127, 136, 144, 156, 173, 243, 260, 266, 324, 331, 334, 349, 442, 458, 470], "instanc": [11, 12, 13, 15, 22, 23, 25, 35, 40, 44, 127, 131, 134, 138, 143, 144, 157, 260, 277, 285, 289, 301, 334, 403, 449, 483], "refer": [11, 12, 13, 14, 15, 17, 19, 21, 23, 27, 28, 33, 37, 38, 41, 42, 43, 44, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 144, 185, 205, 206, 213, 243, 244, 246, 252, 257, 260, 266, 277, 301, 317, 324, 327, 331, 334, 335, 349, 350, 368, 380], "veri": [11, 12, 13, 36, 40, 142, 144, 331, 334], "slow": 11, "robust": [11, 35, 36], "code": [11, 14, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 35, 36, 40, 42, 126, 128, 131, 132, 134, 139, 144, 145, 219, 260, 271, 315, 316, 326, 327, 331, 335, 349, 350, 368, 370], "inspect": [11, 14, 266, 294, 334], "index": [11, 15, 17, 21, 22, 23, 28, 30, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 133, 134, 135, 136, 137, 138, 139, 144, 203, 210, 218, 238, 243, 248, 253, 260, 261, 266, 276, 284, 294, 297, 299, 300, 314, 315, 323, 326, 327, 331, 334, 335, 368, 382, 384, 402, 404, 442, 444, 450, 456, 458, 461, 464, 482], "less": [11, 17, 23, 44, 86, 127, 135, 147, 148, 233, 264, 282, 316, 361, 402], "than": [11, 13, 17, 19, 23, 26, 28, 36, 40, 44, 55, 56, 86, 119, 134, 135, 139, 144, 147, 148, 185, 190, 191, 206, 207, 210, 220, 264, 282, 317, 318, 323, 334, 336, 350, 402], "its": [11, 13, 14, 17, 19, 24, 26, 28, 30, 33, 34, 35, 38, 40, 43, 95, 126, 127, 136, 144, 157, 176, 220, 233, 260, 285, 288, 315, 316, 334, 335, 336, 342, 361, 368, 402, 411, 442, 456, 480, 483], "most": [11, 12, 14, 17, 19, 20, 21, 23, 24, 26, 30, 33, 36, 38, 40, 43, 44, 86, 127, 133, 134, 139, 142, 144, 145, 157, 184, 253, 266, 324, 334, 336, 349, 402, 411, 442, 456, 480], "popular": [11, 12, 34, 144, 334], "activ": [11, 12, 13, 15, 18, 22, 37, 38, 55, 71, 82, 91, 136, 144, 157, 174, 184, 185, 220, 226, 238, 243, 270, 336, 349, 406, 450, 458, 461, 485, 487], "preced": [11, 15, 19, 22, 24, 25, 33, 39, 43, 49, 59, 60, 63, 129, 131, 132, 137, 145, 157, 349], "inner": [11, 22, 26, 35, 40, 144, 157, 180, 181, 204, 221, 242, 265, 305, 315, 339, 349, 413, 414, 415, 416, 417, 418, 444, 491], "product": [11, 22, 26, 35, 40, 44, 86, 119, 180, 181, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 238, 242, 246, 260, 265, 277, 301, 305, 306, 308, 310, 312, 314, 315, 317, 318, 319, 321, 323, 330, 332, 339, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 362, 364, 366, 413, 414, 415, 416, 417, 418, 444, 491], "dnnl_post_ops_append_eltwis": [11, 238, 243], "append_eltwis": [11, 35, 201, 205, 209, 220, 221, 225, 227, 310, 316, 321, 336, 338, 347, 350, 450], "simplic": [11, 12, 136, 144, 208, 211, 214, 319, 324, 328, 331, 335, 368], "algorithm": [11, 12, 15, 19, 28, 35, 36, 129, 133, 135, 145, 147, 184, 185, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 243, 245, 249, 251, 252, 258, 262, 267, 269, 273, 296, 306, 308, 310, 312, 315, 316, 317, 318, 319, 321, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 362, 364, 366, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 450, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "alg": [11, 145, 349, 350], "alpha": [11, 15, 23, 28, 37, 43, 68, 69, 74, 75, 82, 94, 130, 134, 164, 165, 184, 185, 201, 203, 206, 207, 209, 210, 214, 218, 220, 221, 223, 225, 238, 243, 246, 252, 258, 263, 270, 277, 296, 301, 310, 314, 317, 318, 321, 323, 328, 334, 336, 338, 343, 347, 350, 398, 400, 432, 434, 450, 452, 454, 461, 485, 487], "beta": [11, 15, 23, 28, 41, 43, 50, 51, 74, 75, 80, 81, 113, 114, 134, 164, 165, 184, 185, 201, 203, 206, 207, 209, 210, 214, 218, 221, 223, 225, 238, 243, 244, 246, 252, 257, 258, 270, 277, 296, 301, 310, 314, 317, 318, 321, 323, 328, 334, 338, 343, 347, 350, 398, 400, 432, 434, 450, 461, 485, 487], "replac": [11, 28, 40, 44, 55, 56, 132, 136, 137, 143, 328, 329, 334], "dst": [11, 12, 15, 17, 21, 22, 23, 26, 28, 36, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 76, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 133, 134, 135, 137, 138, 139, 147, 148, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 243, 244, 252, 257, 306, 308, 310, 312, 314, 316, 317, 318, 319, 320, 321, 323, 326, 327, 332, 334, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 362, 364, 366, 367, 380, 382, 384, 414, 416, 418, 450, 464, 465, 482], "operatornam": [11, 12, 26, 28], "preserv": [11, 13, 35, 36, 203, 210, 314, 323], "accumul": [11, 12, 20, 26, 33, 40, 54, 129, 130, 134, 136, 219, 233, 237, 243, 285, 335, 361, 368, 449, 450], "exist": [11, 14, 26, 27, 30, 44, 126, 188, 189, 260, 284, 291, 444], "prior": [11, 243, 261, 266, 299, 334, 450, 456, 457], "shift": [11, 22, 37, 40, 51, 80, 176, 177, 200, 202, 222, 238, 243, 244, 257, 266, 308, 312, 340, 458], "multipli": [11, 13, 22, 33, 40, 136, 166, 214, 219, 233, 237, 243, 246, 260, 275, 277, 301, 328, 335, 361, 368, 450, 482], "scale": [11, 17, 21, 22, 23, 34, 35, 38, 40, 44, 51, 64, 66, 67, 68, 69, 78, 79, 80, 81, 96, 134, 135, 138, 139, 164, 165, 176, 177, 200, 202, 205, 211, 213, 220, 222, 231, 236, 238, 243, 244, 246, 257, 266, 269, 275, 277, 301, 308, 312, 316, 324, 325, 326, 327, 328, 329, 336, 337, 340, 357, 358, 366, 450, 457, 458, 467, 469, 482], "residu": [11, 212, 449], "learn": [11, 12, 19, 22, 23, 24, 26, 34, 35, 36, 40, 127, 149, 152, 226, 294, 349, 449], "block": [11, 14, 21, 22, 132, 145, 156, 157, 173, 174, 184, 185, 227, 260, 294, 334, 349, 444, 449], "previous": [11, 37, 260, 316, 335, 349, 368, 442, 458], "previou": [11, 12, 19, 28, 35, 37, 134, 136, 144, 203, 210, 211, 220, 243, 314, 323, 324, 336, 450], "magnitud": 11, "cdot": [11, 12, 15, 22, 23, 28, 37, 38, 40, 41, 43, 44, 48, 51, 58, 64, 66, 67, 75, 80, 86, 88, 96, 98, 99, 100, 101, 102, 103, 104, 120, 129, 130, 134, 135, 136, 138, 139, 148, 324], "_point": 11, "origin": [11, 12, 15, 28, 36, 37, 41, 78, 79, 134, 135, 138, 139, 144, 147, 220, 243, 252, 260, 316, 324, 336, 450], "reinterpret": [11, 23, 27, 243, 450], "_data": 11, "_type": 11, "gpu": [11, 14, 15, 17, 21, 23, 26, 27, 28, 29, 41, 43, 44, 126, 131, 132, 133, 134, 136, 137, 138, 139, 145, 154, 155, 199, 215, 216, 219, 237, 253, 294, 305, 306, 334, 349, 350, 371, 488], "u8": [11, 12, 17, 20, 23, 26, 28, 29, 33, 37, 38, 41, 44, 64, 66, 67, 96, 129, 130, 134, 135, 136, 137, 138, 161, 172, 202, 205, 211, 213, 220, 305, 313, 316, 324, 327, 336], "s8": [11, 12, 15, 17, 20, 23, 26, 28, 33, 37, 38, 41, 44, 64, 66, 67, 96, 129, 130, 134, 135, 136, 137, 138, 161, 172, 205, 211, 213, 220, 231, 316, 324, 327, 336, 357], "1x1": [11, 243, 450], "seen": [11, 350], "model": [11, 14, 22, 23, 26, 27, 31, 33, 34, 36, 37, 38, 64, 96, 126, 136, 204, 206, 207, 210, 212, 213, 218, 233, 239, 294, 317, 318, 323, 326, 327, 328, 334, 361], "mobilenet_v1": 11, "stack": [11, 136], "opportun": 11, "dnnl_post_ops_append_dw": [11, 238, 243], "append_dw": [11, 450], "better": [11, 17, 19, 36, 142, 144, 260, 315, 324, 328, 334, 349, 350], "readabl": [11, 334, 368], "assum": [11, 12, 14, 18, 19, 23, 40, 42, 58, 66, 67, 130, 132, 135, 144, 199, 209, 211, 214, 221, 224, 229, 233, 243, 246, 260, 266, 277, 301, 306, 321, 324, 326, 327, 328, 334, 335, 338, 345, 349, 350, 353, 361, 368, 444, 450], "2d": [11, 15, 23, 28, 38, 40, 43, 44, 86, 129, 130, 135, 137, 138, 144, 157, 174, 243, 249, 251, 262, 269, 334, 350, 364, 365, 386, 388, 390, 392, 394, 396, 446, 448, 450], "notat": [11, 13, 28, 44, 144, 157, 174], "conv_1x1": 11, "weight": [11, 13, 19, 21, 22, 23, 26, 35, 36, 37, 38, 40, 44, 58, 59, 60, 61, 62, 63, 86, 130, 134, 136, 142, 144, 145, 157, 163, 171, 174, 182, 183, 184, 185, 188, 189, 199, 204, 205, 206, 207, 209, 210, 212, 213, 220, 221, 224, 225, 226, 227, 229, 233, 243, 249, 251, 255, 259, 260, 263, 266, 270, 306, 315, 316, 317, 318, 321, 323, 326, 327, 336, 337, 338, 345, 347, 349, 350, 353, 361, 374, 376, 378, 380, 386, 387, 388, 390, 392, 393, 394, 396, 408, 410, 414, 415, 416, 418, 420, 422, 424, 426, 428, 430, 436, 438, 440, 450, 458, 461, 470, 485, 487], "spatial": [11, 13, 15, 22, 23, 38, 43, 48, 49, 58, 59, 60, 61, 62, 63, 78, 79, 88, 89, 129, 130, 135, 137, 144, 157, 174, 243, 249, 251, 260, 262, 269, 334, 386, 388, 390, 392, 394, 396, 406, 446, 448, 450, 467, 469], "kh": [11, 12, 22, 23, 38, 40, 48, 58, 59, 88, 129, 209, 226, 227, 228, 243, 321, 349, 350, 351, 450], "kw": [11, 12, 22, 23, 38, 40, 48, 58, 88, 129, 209, 226, 227, 228, 243, 321, 349, 350, 351, 450], "conv_dw": 11, "g": [11, 12, 13, 15, 18, 22, 23, 28, 36, 38, 41, 42, 58, 80, 81, 137, 143, 144, 174, 199, 209, 211, 213, 214, 224, 233, 243, 260, 306, 321, 324, 328, 334, 345, 361, 384, 404, 450, 458, 460, 465, 482], "oc": [11, 12, 22, 23, 38, 58, 203, 209, 210, 221, 226, 227, 238, 243, 314, 321, 323, 338, 349, 350, 450], "ic": [11, 12, 22, 23, 38, 58, 64, 96, 135, 138, 200, 201, 202, 203, 208, 209, 210, 217, 221, 223, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 243, 308, 310, 312, 314, 319, 321, 323, 332, 338, 343, 349, 350, 351, 353, 355, 357, 359, 362, 364, 366, 450], "pad_l": 11, "pad_r": 11, "conv_": [11, 12], "dw": [11, 22, 23, 48, 58, 59, 88, 129, 228, 351], "dst_": [11, 12, 28, 40, 64, 96], "n": [11, 12, 13, 15, 17, 21, 22, 23, 30, 33, 37, 38, 41, 43, 44, 48, 50, 51, 53, 57, 58, 80, 81, 84, 86, 88, 120, 129, 130, 132, 134, 135, 137, 139, 140, 144, 145, 157, 174, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 246, 248, 260, 275, 277, 296, 301, 306, 308, 310, 312, 314, 317, 319, 321, 323, 324, 327, 328, 330, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 450, 483, 490], "oc_": 11, "ceil": [11, 48, 88, 164, 165, 243, 450], "oh_": 11, "ow_": 11, "oh_conv_1x1": 11, "ow_conv_1x1": 11, "height": [11, 22, 23, 58, 59, 88, 89, 144, 157, 174, 200, 201, 202, 208, 209, 217, 221, 223, 228, 229, 230, 231, 232, 234, 236, 249, 251, 262, 308, 310, 312, 315, 319, 321, 332, 338, 343, 351, 353, 355, 357, 359, 362, 366, 386, 388, 390, 392, 394, 396, 446, 448], "width": [11, 22, 23, 58, 59, 88, 89, 144, 145, 157, 174, 200, 201, 202, 208, 209, 217, 221, 223, 228, 229, 230, 231, 232, 234, 236, 249, 251, 262, 308, 310, 312, 315, 319, 321, 332, 338, 343, 351, 353, 355, 357, 359, 362, 366, 386, 388, 390, 392, 394, 396, 446, 448], "conv": [11, 12, 23, 35, 128, 132, 143, 145, 203, 205, 206, 207, 210, 226, 227, 314, 316, 317, 318, 323, 349, 350], "bia": [11, 12, 22, 23, 37, 38, 44, 53, 54, 58, 61, 80, 81, 86, 136, 148, 157, 174, 177, 182, 183, 199, 205, 206, 207, 209, 210, 221, 224, 225, 233, 243, 249, 251, 255, 259, 266, 270, 306, 315, 316, 317, 318, 321, 323, 338, 345, 347, 361, 374, 376, 388, 390, 394, 396, 408, 410, 416, 418, 424, 426, 428, 430, 436, 438, 440, 450, 461, 470, 485, 487], "s32": [11, 12, 23, 26, 28, 30, 37, 38, 40, 44, 59, 60, 63, 66, 67, 78, 79, 98, 99, 100, 101, 102, 103, 104, 129, 130, 134, 135, 137, 161, 172, 211, 220, 324, 336], "though": [11, 13, 20, 36, 40, 136, 190, 191, 324, 328, 334], "convent": [11, 15, 17, 21, 23, 28, 33, 36, 38, 41, 43, 44, 45, 48, 55, 57, 58, 68, 71, 72, 74, 76, 82, 83, 86, 88, 105, 109, 111, 113, 122, 129, 130, 134, 135, 136, 137, 138, 139, 144, 145, 260, 305, 334, 349, 369], "impli": [11, 119, 177, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 362, 364, 366], "part": [11, 12, 14, 19, 31, 34, 39, 128, 131, 260, 334, 349, 444], "dst_1x1": 11, "wei_dw": 11, "dst_dw": 11, "dnnl_format_tag_ani": [11, 129, 136, 157, 174, 203, 210, 245, 249, 251, 255, 260, 263, 266, 267, 269, 270, 314, 323], "coincid": [11, 144], "util": [11, 13, 25, 30, 127, 233, 242, 247, 335, 361], "lifetim": [11, 31, 126, 185, 243, 261, 266, 299], "through": [11, 31, 35, 37, 143, 233, 287, 316, 331, 334, 349, 361, 368, 406], "thu": [11, 44, 127, 233, 349, 361], "gain": [11, 35, 350], "expect": [11, 14, 15, 23, 34, 38, 40, 41, 43, 44, 129, 135, 147, 148, 176, 184, 185, 218, 219, 243, 334, 335, 349, 350, 384, 442, 458, 460, 465, 470, 482, 483], "dnnl_post_ops_append_binari": [11, 238, 243], "append_binari": [11, 202, 312, 450], "desc": [11, 12, 13, 14, 27, 30, 32, 35, 36, 126, 128, 132, 144, 184, 185, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 260, 299, 300, 306, 308, 310, 312, 315, 316, 317, 318, 319, 321, 324, 326, 327, 328, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 446, 448, 450, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "src1": [11, 243, 382, 450], "second": [11, 22, 33, 40, 58, 95, 98, 99, 100, 101, 102, 103, 104, 157, 174, 184, 185, 233, 243, 260, 287, 331, 349, 361, 444, 450], "operand": [11, 33, 40, 243, 450], "_1": [11, 87, 90], "scenario": [11, 26, 27, 126, 127, 163, 171, 316], "per": [11, 17, 21, 23, 34, 38, 41, 44, 59, 61, 62, 63, 64, 66, 67, 80, 81, 95, 96, 127, 138, 204, 231, 260, 271, 324, 350, 357, 450, 488], "broadcast": [11, 17, 21, 44, 47, 53, 65, 86, 87, 90, 93, 118, 119, 121, 130, 134, 139, 243, 245, 450], "channel": [11, 15, 22, 23, 34, 37, 38, 41, 43, 51, 53, 54, 58, 59, 60, 61, 62, 63, 64, 66, 67, 80, 81, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 130, 136, 137, 138, 147, 148, 157, 174, 199, 200, 201, 202, 208, 209, 217, 221, 222, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 258, 260, 306, 308, 310, 312, 315, 319, 321, 332, 334, 338, 340, 343, 345, 349, 351, 353, 355, 357, 359, 361, 362, 363, 364, 366, 406, 450], "format_tag": [11, 12, 14, 17, 23, 35, 36, 38, 44, 130, 133, 135, 136, 144, 145, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 260, 296, 306, 308, 310, 312, 317, 318, 319, 321, 326, 327, 331, 332, 334, 335, 336, 337, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 386, 388, 390, 392, 394, 396, 408, 410, 414, 416, 418, 424, 426, 428, 430, 436, 438, 442, 444, 463, 469, 485, 487], "tag": [11, 12, 13, 23, 30, 36, 38, 44, 129, 135, 138, 157, 174, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 260, 266, 306, 308, 310, 312, 315, 316, 317, 318, 319, 321, 331, 332, 334, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 444], "later": [11, 14, 18, 19, 36, 80, 144, 199, 200, 217, 224, 229, 306, 308, 332, 334, 345, 353], "mismatch": [11, 36, 218, 334], "suboptim": [11, 15, 23, 28, 41, 43, 260, 350, 442], "initi": [11, 14, 22, 24, 27, 36, 44, 127, 130, 136, 144, 149, 152, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 234, 236, 237, 245, 249, 251, 255, 260, 261, 263, 267, 269, 270, 271, 276, 287, 288, 299, 300, 306, 308, 310, 312, 315, 317, 318, 319, 321, 323, 324, 326, 327, 328, 332, 334, 336, 338, 340, 345, 347, 353, 355, 357, 359, 362, 366, 374, 376, 386, 388, 390, 392, 394, 396, 408, 410, 414, 416, 418, 424, 426, 428, 430, 436, 438, 442, 463, 469, 485, 487], "get_params_binari": [11, 450], "dnnl_post_ops_append_prelu": [11, 238, 243], "append_prelu": [11, 450], "int": [11, 12, 40, 132, 140, 144, 153, 156, 157, 181, 185, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 248, 260, 261, 264, 266, 271, 272, 273, 275, 276, 277, 282, 283, 296, 297, 299, 300, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 326, 327, 328, 330, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488], "mask": [11, 12, 23, 37, 38, 44, 127, 134, 205, 211, 214, 220, 238, 243, 316, 324, 328, 336, 450, 458, 483], "assumpt": [11, 22, 135, 336], "runtim": [11, 12, 15, 27, 30, 41, 44, 50, 80, 126, 128, 134, 140, 145, 184, 185, 220, 242, 243, 261, 266, 271, 276, 277, 279, 280, 291, 298, 301, 324, 334, 335, 336, 349, 350, 368, 450, 488], "dnnl_arg_attr_multiple_post_op": [11, 17, 23, 28, 38, 44, 129, 133, 135, 202, 238, 266, 312, 450], "dnnl_arg_weight": [11, 12, 23, 35, 38, 44, 130, 203, 204, 205, 206, 207, 209, 210, 211, 214, 220, 221, 225, 226, 227, 229, 238, 266, 314, 316, 317, 318, 321, 323, 324, 328, 336, 338, 347, 349, 350, 353, 450], "fp32": [11, 19, 26, 36], "plain": [11, 12, 21, 44, 134, 157, 174, 243, 260, 350, 450], "ab": [11, 22, 28, 30, 33, 37, 38, 44, 46, 147, 148, 166, 174, 202, 220, 243, 312, 336, 444, 450], "acb": [11, 174, 243, 450], "acdb": [11, 22, 174, 243, 450], "acdeb": [11, 174, 243, 450], "between": [11, 12, 13, 14, 17, 18, 19, 27, 29, 31, 33, 34, 40, 48, 58, 88, 89, 107, 126, 127, 134, 142, 144, 163, 171, 190, 191, 203, 204, 206, 207, 210, 215, 216, 233, 243, 253, 260, 268, 287, 305, 314, 315, 317, 318, 323, 324, 328, 334, 349, 361, 371, 406, 444, 450, 458, 464], "th": [11, 37, 98, 99, 100, 101, 102, 103, 104, 243, 450, 458], "dedic": [11, 30, 35, 243, 450, 458], "along": [11, 31, 44, 57, 66, 67, 98, 99, 100, 101, 102, 103, 104, 111, 128, 133, 137, 138, 143, 243, 260, 272, 362, 363, 364, 365, 450, 458, 472, 474], "common": [11, 12, 14, 31, 36, 127, 190, 191, 233, 242, 243, 265, 331, 334, 335, 361, 368, 450, 458], "whole": [11, 12, 130, 144, 233, 243, 361, 450, 458], "laid": [11, 14, 22, 144, 157, 174, 243, 260, 268, 334, 349, 450], "out": [11, 12, 14, 15, 22, 27, 31, 33, 43, 58, 59, 60, 61, 62, 63, 126, 129, 132, 137, 144, 145, 157, 170, 174, 180, 181, 193, 194, 195, 196, 203, 210, 212, 217, 218, 229, 238, 243, 248, 260, 268, 275, 314, 323, 326, 327, 332, 334, 349, 353, 384, 450, 481], "cnn": [11, 15, 22, 23, 29, 36, 37, 38, 39, 41, 129, 137, 142, 157, 174, 204, 205, 206, 207, 243, 260, 305, 324, 334, 349, 450], "4d": [11, 38, 80, 81, 138, 144, 157, 174, 243, 260, 334, 450], "h": [11, 15, 17, 22, 23, 26, 38, 42, 43, 50, 51, 53, 129, 130, 134, 143, 144, 147, 151, 152, 153, 155, 156, 157, 159, 160, 165, 167, 169, 171, 174, 177, 179, 181, 183, 185, 187, 189, 191, 192, 194, 196, 198, 203, 204, 207, 210, 212, 213, 215, 218, 219, 226, 233, 237, 243, 260, 314, 318, 323, 330, 331, 334, 335, 349, 361, 368, 404, 405, 406, 450, 488], "w": [11, 15, 17, 22, 23, 37, 38, 43, 44, 50, 51, 53, 129, 130, 134, 136, 144, 153, 157, 161, 174, 203, 204, 206, 207, 210, 213, 218, 226, 227, 243, 260, 314, 317, 318, 323, 326, 327, 334, 349, 450], "let": [11, 12, 23, 35, 36, 38, 58, 59, 135, 144, 160, 162, 206, 207, 211, 226, 317, 318, 324, 331, 334, 335, 349, 350, 368], "consid": [11, 12, 13, 15, 21, 23, 26, 36, 40, 41, 139, 144, 177, 249, 251, 260, 262, 324, 331, 334, 411], "pattern": [11, 14, 34, 239], "pretti": [11, 334], "topologi": [11, 23, 35, 129, 137, 203, 204, 206, 207, 220, 233, 314, 315, 317, 318, 336, 349, 361], "resnet": [11, 33], "famili": [11, 40, 149, 152], "append_sum": [11, 214, 328, 450], "eltwise_relu": [11, 35, 148, 201, 204, 205, 206, 207, 209, 216, 217, 218, 219, 220, 221, 225, 227, 237, 310, 315, 316, 317, 318, 321, 331, 332, 334, 335, 336, 338, 347, 350, 368, 485, 487], "slope": [11, 15, 23, 82, 94, 95, 177, 205, 218, 270, 316, 334, 485, 487], "f": [11, 18, 22, 23, 113, 114, 133, 135, 136, 174, 199, 200, 201, 202, 205, 208, 209, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 243, 246, 277, 301, 306, 308, 310, 312, 316, 319, 321, 324, 327, 328, 332, 334, 336, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 362, 364, 366, 450, 458], "unus": [11, 270], "convolution_forward": [11, 12, 14, 23, 35, 128, 204, 205, 206, 207, 209, 226, 227, 249, 296, 315, 316, 317, 318, 321, 349, 350, 386, 388, 456], "conv_d": [11, 350, 450], "src": [11, 12, 15, 16, 18, 19, 21, 22, 23, 26, 28, 36, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 133, 134, 135, 137, 138, 139, 143, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244, 252, 257, 306, 308, 310, 312, 314, 317, 318, 319, 320, 321, 323, 324, 326, 327, 332, 334, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 367, 380, 384, 414, 416, 418, 464, 465, 482], "hypothet": 11, "illustr": 11, "set_scales_mask": [11, 12, 44, 205, 211, 214, 220, 231, 316, 324, 325, 328, 329, 336, 337, 357, 458], "cover": [11, 12, 26, 36, 40, 144, 334, 349], "eltwise_tanh": [11, 148, 485, 487], "eltwise_linear": [11, 148], "linear": [11, 14, 28, 64, 66, 67, 78, 79, 96, 135, 144, 147, 148, 164, 165, 246, 252, 269, 335, 368, 442], "dnnl_arg_src": [11, 12, 15, 23, 28, 35, 38, 41, 43, 44, 129, 130, 133, 135, 137, 138, 200, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 261, 266, 276, 299, 300, 308, 314, 315, 316, 317, 318, 321, 323, 324, 328, 330, 331, 332, 334, 335, 336, 338, 340, 343, 347, 349, 350, 351, 353, 355, 357, 359, 362, 364, 368, 404, 456, 464], "dnnl_arg_dst": [11, 12, 15, 17, 21, 23, 28, 35, 38, 41, 43, 44, 129, 130, 133, 135, 137, 138, 139, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 266, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 324, 328, 330, 331, 332, 334, 335, 336, 338, 340, 343, 347, 349, 350, 351, 353, 355, 357, 359, 362, 364, 366, 368], "s_": 11, "mobilenet": 11, "pad": [11, 22, 23, 48, 49, 58, 59, 60, 61, 62, 63, 88, 89, 136, 144, 147, 148, 184, 185, 209, 213, 226, 227, 228, 233, 238, 243, 249, 251, 260, 262, 266, 315, 321, 326, 349, 350, 351, 361, 386, 388, 390, 392, 394, 396, 444, 446, 448, 450, 461], "dnnl_arg_attr_post_op_dw": [11, 23, 238, 266], "auto": [11, 12, 13, 23, 30, 34, 35, 36, 40, 47, 65, 87, 90, 93, 118, 119, 121, 136, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 315, 316, 317, 318, 319, 321, 324, 326, 327, 328, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368], "cpd": 11, "dw_weight_md": 11, "exec_arg_md": [11, 184, 299, 300, 456, 464], "dw_bias_md": 11, "dnnl_arg_bia": [11, 23, 38, 44, 136, 199, 203, 204, 205, 206, 207, 209, 210, 212, 213, 221, 224, 225, 233, 238, 266, 306, 314, 316, 317, 318, 321, 323, 326, 327, 338, 345, 347, 361], "behaviour": 11, "relu_": 11, "scales_": 11, "addit": [11, 14, 15, 17, 19, 22, 23, 24, 25, 26, 30, 36, 38, 40, 44, 47, 59, 61, 62, 63, 86, 104, 127, 132, 177, 185, 199, 209, 221, 224, 229, 260, 287, 306, 316, 321, 331, 334, 335, 338, 345, 349, 350, 353, 368], "conv_dst_md": [11, 203, 205, 206, 207, 209, 210, 226, 227, 314, 316, 317, 318, 321, 323, 349, 350], "mb": [11, 22, 132, 225, 243, 347, 450, 458], "nchw": [11, 15, 22, 43, 129, 135, 137, 174, 200, 201, 204, 205, 206, 207, 208, 209, 216, 217, 219, 221, 223, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 308, 310, 315, 316, 317, 318, 319, 321, 331, 332, 334, 335, 338, 343, 349, 350, 351, 353, 355, 357, 359, 362, 366, 368], "abcd": [11, 22, 145, 174, 234, 349, 350, 362], "binary_add": [11, 148, 202, 312], "src1_md": 11, "To": [11, 12, 19, 22, 23, 26, 27, 30, 31, 35, 36, 37, 40, 43, 58, 61, 126, 131, 132, 134, 135, 143, 213, 233, 326, 328, 331, 334, 335, 349, 361, 368], "argument": [11, 12, 35, 170, 184, 185, 193, 194, 199, 200, 201, 202, 206, 207, 208, 209, 217, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 243, 244, 257, 261, 266, 270, 276, 287, 298, 299, 300, 306, 308, 310, 312, 315, 317, 318, 319, 321, 326, 327, 332, 334, 335, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 362, 364, 366, 374, 376, 404, 408, 410, 424, 426, 428, 430, 436, 438, 444, 456, 458, 464, 485, 487], "unordered_map": [11, 199, 200, 201, 202, 204, 206, 207, 208, 209, 212, 213, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 299, 300, 306, 308, 310, 312, 315, 317, 318, 319, 321, 326, 327, 332, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 362, 364, 366, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 445, 447, 450, 451, 453, 456, 462, 464, 466, 468, 471, 473, 475, 477, 481, 484, 486], "arg": [11, 12, 35, 203, 210, 238, 243, 261, 266, 276, 299, 300, 314, 323, 372, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 404, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 445, 447, 451, 453, 456, 458, 462, 464, 466, 468, 471, 473, 475, 477, 481, 484, 486], "insert": [11, 34, 86, 199, 200, 201, 202, 206, 207, 208, 209, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 306, 308, 310, 312, 317, 318, 319, 321, 332, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 362, 364, 366, 450], "conv_src_memori": [11, 203, 205, 206, 207, 210, 314, 316, 317, 318, 323], "binary_post_op_posit": [11, 17, 23, 28, 38, 44, 129, 133, 135], "hard": 11, "dnnl_arg_src_1": [11, 15, 17, 23, 28, 38, 44, 129, 133, 135, 201, 202, 238, 266, 310, 312], "parenthes": 11, "around": [11, 14, 20, 211, 324, 336, 349], "binary_post_op_src1_memori": 11, "either": [12, 14, 15, 17, 19, 21, 33, 36, 37, 40, 41, 44, 49, 50, 52, 59, 60, 63, 78, 79, 130, 133, 139, 142, 144, 147, 148, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 244, 257, 258, 260, 262, 269, 270, 273, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 432, 434, 444, 446, 448, 467, 469, 476, 478], "sign": [12, 26, 34, 37, 40, 153, 161, 172, 243, 246, 266, 277, 301, 316, 458], "unsign": [12, 26, 34, 40, 153, 161, 172, 185, 220, 238, 243, 244, 246, 257, 270, 271, 274, 277, 296, 301, 316, 336, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 458, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487, 488], "primari": 12, "goal": 12, "precis": [12, 20, 23, 26, 35, 37, 38, 40, 44, 124, 134, 142, 144, 153, 161, 172, 211, 214, 243, 246, 277, 301, 324, 325, 328, 444, 458], "compat": [12, 19, 37], "relat": [12, 15, 17, 19, 21, 23, 26, 28, 33, 41, 43, 129, 132, 133, 134, 135, 136, 137, 138, 139, 214, 326, 327, 328, 334, 335, 350, 368], "materi": 12, "lower": [12, 15, 22, 23, 26, 31, 37, 40, 55, 56, 127, 129, 130, 135, 144, 157], "deep": [12, 22, 23, 24, 26, 34, 35, 36, 40, 127, 143, 149, 152, 226, 288, 349], "annot": [12, 132, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 326, 327], "x_": [12, 37, 40, 324], "scale_": 12, "x": [12, 17, 22, 23, 40, 47, 65, 78, 79, 87, 90, 93, 121, 132, 134, 139, 144, 148, 174, 200, 203, 204, 205, 206, 207, 210, 219, 220, 222, 231, 238, 246, 277, 301, 308, 314, 315, 316, 317, 318, 323, 335, 336, 340, 357, 368], "zp_": 12, "factor": [12, 17, 21, 23, 35, 38, 40, 41, 44, 68, 69, 134, 135, 138, 184, 185, 205, 213, 236, 238, 243, 266, 269, 316, 324, 327, 336, 349, 366, 450, 458, 461, 467, 469], "int32": 12, "denot": [12, 22, 28, 33, 37, 40, 49, 59, 60, 63, 88, 89, 94, 95, 144, 145, 157, 174, 349], "elementwis": [12, 17, 148, 176, 243, 252, 349, 381, 382, 397, 398, 399, 400, 450], "formula": [12, 15, 23, 26, 28, 36, 38, 40, 41, 43, 45, 48, 50, 51, 55, 58, 59, 66, 67, 68, 71, 72, 74, 75, 76, 80, 82, 83, 86, 88, 91, 94, 105, 109, 111, 113, 122, 129, 130, 135, 136, 137, 138, 144, 147, 243, 270, 324, 436, 438, 458], "arrai": [12, 13, 37, 144, 184, 185, 211, 215, 216, 233, 236, 243, 246, 248, 249, 251, 260, 261, 262, 266, 269, 275, 276, 277, 287, 301, 324, 330, 361, 366, 386, 388, 390, 392, 394, 396, 442, 446, 448], "best": [12, 19, 23, 24, 41, 44, 127, 130, 134, 145, 206, 207, 210, 227, 260, 315, 317, 318, 323, 336, 350], "those": [12, 19, 26, 28, 86, 127, 144, 145, 149, 152, 213, 324, 326, 350], "These": [12, 14, 19, 31, 32, 37, 40, 157, 174, 220, 334, 336, 349, 350], "ahead": 12, "time": [12, 13, 14, 15, 18, 19, 23, 35, 36, 38, 39, 40, 43, 44, 58, 59, 64, 93, 127, 128, 129, 135, 137, 138, 144, 147, 199, 204, 214, 218, 220, 222, 224, 233, 243, 256, 260, 261, 264, 266, 271, 276, 277, 282, 286, 287, 291, 306, 315, 316, 324, 328, 329, 331, 334, 336, 337, 340, 345, 350, 361, 458], "calibr": 12, "tool": [12, 39], "static": [12, 19, 30, 34, 42, 44, 199, 200, 201, 202, 203, 208, 209, 210, 211, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 238, 306, 308, 310, 312, 314, 319, 321, 323, 324, 325, 332, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 362, 364, 366, 402, 403, 442, 444, 483], "minimum": [12, 17, 19, 33, 102, 166, 324, 442], "dynam": [12, 26, 42, 44, 132, 211, 214, 299, 300, 324, 325, 328, 456, 464], "method": [12, 35, 127, 135, 147, 148, 269, 287, 331, 334, 368, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 445, 447, 451, 453, 462, 466, 468, 471, 473, 475, 477, 481, 484, 486, 489], "conjuct": 12, "behav": [12, 40, 136, 177], "dimension": [12, 22, 23, 31, 37, 44, 84, 144, 243, 292, 458], "reason": [12, 19, 22, 25, 40, 128, 144, 214, 243, 328, 349, 458], "subset": [12, 149, 152, 241, 246], "guid": [12, 19, 26, 132, 205, 206, 213, 244, 245, 248, 249, 252, 255, 257, 258, 259, 261, 262, 263, 267, 268, 269, 270, 272, 273, 275, 276, 317, 327], "appropri": [12, 17, 21, 23, 25, 38, 40, 44, 129, 130, 133, 139, 144, 211, 324, 334, 336], "convert": [12, 26, 28, 34, 37, 40, 64, 66, 67, 96, 107, 134, 142, 206, 211, 243, 253, 254, 266, 270, 299, 300, 317, 324, 350, 411, 442], "wider": [12, 26], "int16": 12, "overflow": [12, 20, 26, 33, 40, 213], "maintain": [12, 131, 142, 260, 444], "necessari": [12, 14, 19, 23, 24, 27, 34, 35, 36, 38, 126, 132, 134, 136, 144, 182, 183, 214, 226, 260, 266, 315, 328], "written": [12, 13, 40, 285], "satur": [12, 40, 134, 246, 277, 301], "underflow": [12, 37], "architectur": [12, 23, 24, 40, 127, 132, 145, 246, 277, 294, 301, 349], "slightli": [12, 40, 324], "vari": [12, 40, 145], "singl": [12, 15, 17, 23, 26, 30, 34, 35, 37, 41, 98, 99, 100, 101, 102, 103, 104, 134, 136, 142, 144, 147, 148, 153, 161, 168, 169, 172, 243, 246, 260, 266, 277, 301, 316, 324, 334, 444, 450], "_op": [12, 133], "dequant": [12, 33, 34, 37, 66, 107, 134, 166, 205, 243, 316, 450], "achiev": [12, 23, 35, 37, 134, 136, 144, 316], "eltwis": [12, 15, 17, 19, 23, 36, 38, 44, 133, 135, 147, 148, 180, 242, 265, 305, 316, 331, 334, 350, 397, 398, 399, 400, 449, 450, 491], "dev_guide_attributes_post_ops_eltwis": 12, "binari": [12, 15, 19, 23, 28, 29, 31, 33, 38, 39, 44, 129, 133, 135, 147, 148, 176, 177, 180, 181, 202, 242, 243, 265, 266, 296, 305, 311, 313, 349, 384, 450, 456, 460, 465, 482, 491], "dev_guide_attributes_post_ops_binari": 12, "src_": [12, 26, 28, 40, 64, 66, 67, 96, 98, 99, 100, 101, 102, 103, 104], "weights_": [12, 26], "work": [12, 13, 14, 16, 17, 19, 21, 23, 27, 28, 30, 32, 36, 37, 40, 41, 126, 127, 130, 132, 133, 134, 137, 138, 139, 142, 144, 214, 218, 233, 260, 324, 328, 334, 336, 349, 361, 442], "task": [12, 13, 27, 126, 132], "form": [12, 22, 31, 35, 138, 144, 157, 174, 334], "12": [12, 37, 132, 157, 199, 222, 224, 306, 340, 345], "35": [12, 132], "36": 12, "zero_point": [12, 134, 238, 243, 450, 458], "zero_point_": 12, "mathemat": [12, 23, 35, 36, 91, 94, 134, 136, 350], "_to": 12, "_int8": 12, "_f32": [12, 185], "comp_": 12, "_": [12, 15, 21, 22, 33, 40, 41, 50, 57, 66, 67, 80, 98, 99, 100, 101, 102, 103, 104, 135, 145, 243], "regular": [12, 30, 258, 334, 368, 432, 434], "chosen": [12, 14, 36, 134, 147, 148, 153, 156, 181, 206, 207, 210, 233, 260, 315, 316, 317, 318, 323, 334, 349, 361], "compens": [12, 21, 40, 213, 238, 327], "term": [12, 13, 22, 23, 127, 135, 136, 249, 251, 255, 259, 388, 390, 394, 396], "account": [12, 23, 130], "non": [12, 14, 18, 21, 23, 26, 30, 34, 35, 37, 40, 41, 48, 49, 58, 59, 60, 61, 62, 63, 68, 69, 78, 82, 88, 89, 127, 134, 136, 138, 144, 145, 147, 148, 153, 161, 172, 177, 184, 185, 206, 207, 220, 227, 260, 280, 281, 291, 298, 317, 318, 334, 336, 350, 444], "pre": [12, 14, 44, 220, 336, 337], "_s8": 12, "potenti": [12, 23, 28, 40, 132, 164, 349, 444], "rang": [12, 20, 33, 35, 40, 57, 64, 66, 67, 96, 98, 99, 100, 101, 102, 103, 104, 120, 132, 142, 211, 237, 324, 368], "round": [12, 26, 28, 33, 37, 48, 64, 66, 67, 88, 96, 124, 144, 147, 148, 166], "signific": [12, 20, 36, 142, 144], "loss": [12, 23, 33, 35, 328], "re": [12, 17, 21, 40, 74, 75, 132, 202, 205, 206, 213, 312, 317, 324, 327, 336], "end": [12, 19, 28, 35, 45, 46, 66, 67, 68, 75, 82, 94, 97, 105, 130, 132, 135, 136, 137, 140, 166, 199, 200, 201, 202, 204, 208, 209, 213, 217, 219, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 319, 321, 326, 327, 332, 335, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368], "seem": [12, 132, 334], "imposs": [12, 40, 260, 444], "trick": [12, 40, 211, 324], "everi": [12, 13, 27, 28, 44, 45, 55, 68, 71, 72, 74, 76, 82, 83, 105, 109, 111, 113, 122, 126, 131, 132, 143, 144, 246, 277, 301, 334], "ih": [12, 22, 23, 38, 58, 135, 200, 201, 202, 203, 208, 209, 210, 217, 221, 223, 227, 228, 229, 230, 231, 232, 234, 236, 308, 310, 312, 314, 319, 321, 323, 332, 338, 343, 350, 351, 353, 355, 357, 359, 362, 366], "iw": [12, 22, 23, 38, 58, 135, 200, 201, 202, 203, 208, 209, 210, 217, 221, 223, 227, 228, 229, 230, 231, 232, 234, 236, 308, 310, 312, 314, 319, 321, 323, 332, 338, 343, 350, 351, 353, 355, 357, 359, 362, 366], "oh": [12, 22, 23, 48, 58, 88, 129, 135, 209, 227, 228, 232, 321, 350, 351, 359, 450], "ow": [12, 22, 23, 48, 58, 88, 129, 135, 209, 227, 228, 232, 321, 350, 351, 359, 450], "frac": [12, 15, 23, 28, 37, 40, 41, 43, 48, 50, 51, 58, 76, 80, 84, 92, 101, 109, 111, 129, 133, 135, 137, 138, 324], "respons": [12, 19, 20, 27, 31, 33, 40, 44, 126, 147, 148, 223, 258, 260, 261, 266, 299, 305, 334, 344, 349, 431, 433, 456, 491], "prepar": [12, 36, 40, 205, 211, 214, 227, 316, 324, 328, 350, 368], "wa": [12, 13, 28, 36, 41, 42, 128, 129, 131, 144, 170, 190, 191, 193, 194, 220, 228, 271, 277, 301, 336, 351], "long": [12, 19, 132, 136, 153, 156, 181, 190, 191], "fit": [12, 145, 233, 361], "everyth": [12, 334, 368], "fine": [12, 13, 350], "mind": 12, "tri": [12, 36], "minim": [12, 13, 18, 20, 26, 33, 35, 144], "yet": [12, 211, 214, 260, 324, 326, 327, 328], "power": [12, 97, 133, 294], "enough": [12, 13, 40, 285], "wai": [12, 13, 14, 21, 22, 23, 27, 35, 37, 40, 126, 127, 139, 142, 144, 181, 243, 268, 287, 349, 350, 368, 384, 442, 458, 460, 465, 482], "essenti": [12, 35, 36, 137, 324], "abil": [12, 24, 25, 27, 126, 334], "That": [12, 23, 119, 128, 131, 144, 334], "equat": [12, 28, 136], "_scale": 12, "standard": [12, 15, 17, 18, 19, 20, 21, 22, 23, 26, 28, 38, 41, 42, 43, 44, 45, 48, 55, 57, 58, 68, 71, 72, 74, 76, 82, 83, 86, 88, 105, 109, 111, 113, 122, 129, 130, 134, 135, 136, 137, 138, 139, 153, 161, 172, 246, 277, 301], "downconvert": 12, "hw": [12, 26, 132, 144], "mxcsr": [12, 37], "regist": [12, 19, 25, 37, 150, 151, 342], "dnnl_primitive_attr_set_scales_mask": [12, 238, 243, 458], "simplest": [12, 243, 324, 368, 450], "sever": [12, 14, 19, 21, 23, 28, 42, 143, 144], "sai": [12, 33], "d_0": [12, 37], "d_": [12, 37], "d_i": [12, 37], "le": 12, "Then": [12, 38, 119, 144, 335, 350, 368], "sum": [12, 13, 15, 17, 19, 21, 23, 38, 40, 41, 43, 44, 48, 50, 80, 98, 99, 101, 104, 129, 133, 134, 135, 136, 138, 145, 147, 148, 180, 181, 230, 231, 242, 243, 265, 267, 296, 305, 349, 355, 357, 367, 450, 456, 491], "limits_": [12, 15, 40, 41, 43, 48, 50, 80, 88, 98, 99, 101, 103, 104, 129, 133, 138, 139, 243, 458], "prod": [12, 103, 203, 210, 243, 314, 323, 458], "wei_plain_f32_md": 12, "hwigo": [12, 174], "wei_scal": 12, "conv_pd": [12, 128, 203, 206, 207, 209, 210, 226, 227, 314, 317, 318, 321, 323, 349, 350, 450], "next": [12, 26, 144, 206, 207, 227, 233, 266, 314, 315, 316, 317, 318, 326, 327, 334, 335, 349, 350, 361, 368, 460], "wei_conv_s8_md": 12, "weights_desc": [12, 199, 204, 205, 206, 207, 209, 220, 221, 224, 226, 227, 229, 238, 249, 251, 255, 259, 263, 306, 315, 316, 317, 318, 321, 336, 338, 345, 349, 350, 353, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "quantization_mask": 12, "wei_s8": 12, "wei_f32": [12, 145, 349, 350], "wei_reorder_pd": 12, "wei_reord": 12, "complementari": 12, "ideal": [12, 40], "first": [12, 22, 23, 24, 25, 28, 33, 37, 38, 40, 44, 58, 128, 136, 144, 145, 157, 174, 212, 213, 260, 271, 287, 324, 326, 327, 331, 334, 335, 350, 368, 406, 444], "src_scale": [12, 205, 316], "src_f32": [12, 145, 349, 350], "src_s8": 12, "dst_scale": [12, 205, 316], "dst_f32": [12, 145, 349, 350], "dst_s8": 12, "declar": [12, 212, 213, 326, 327], "chose": [12, 206, 207, 210, 260, 317, 318, 323], "src_conv_s8_any_md": 12, "batch": [12, 22, 23, 30, 35, 36, 44, 50, 51, 58, 86, 132, 138, 144, 157, 174, 180, 181, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 217, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 259, 260, 265, 305, 306, 309, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 326, 327, 332, 334, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 377, 378, 379, 380, 406, 491], "wei_conv_s8_any_md": 12, "dst_conv_s8_any_md": 12, "ditto": 12, "data_mask": 12, "wei_mask": 12, "set_zero_points_mask": [12, 44, 211, 220, 324, 325, 336, 337, 458], "prop_kind": [12, 23, 35, 36, 38, 145, 176, 177, 184, 199, 200, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 232, 233, 234, 235, 237, 238, 243, 244, 249, 251, 252, 255, 257, 258, 262, 263, 269, 270, 272, 273, 296, 306, 308, 315, 316, 317, 318, 321, 326, 327, 331, 332, 334, 335, 338, 340, 343, 345, 349, 350, 351, 353, 359, 361, 362, 364, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "forward_infer": [12, 23, 35, 36, 38, 145, 182, 204, 212, 213, 218, 226, 227, 233, 315, 326, 327, 334, 349, 350, 361, 376, 380, 390, 396, 400, 410, 418, 422, 426, 430, 434, 438, 448, 454, 469, 474, 478, 487], "convolution_direct": [12, 145, 148, 204, 205, 206, 207, 209, 227, 315, 316, 317, 318, 321, 349, 350, 386, 388, 390, 392], "padding_l": [12, 23, 184, 238, 249, 251, 262, 386, 388, 390, 392, 394, 396, 446, 448], "padding_r": [12, 23, 184, 238, 249, 251, 262, 386, 388, 390, 392, 394, 396, 446, 448], "padding_kind": 12, "flow": [12, 215, 216, 330, 331], "independ": [13, 19, 40, 41, 44, 86, 136, 138, 144], "core": [13, 149, 152, 342, 350], "system": [13, 14, 18, 19, 23, 26, 39, 40, 42, 127, 128, 132, 136, 137, 144, 145, 253], "parallel": [13, 190, 191, 277, 483], "reduct": [13, 19, 20, 33, 98, 99, 100, 101, 102, 103, 104, 147, 148, 180, 181, 184, 185, 242, 265, 296, 305, 356, 456, 461, 491], "k": [13, 30, 43, 44, 86, 184, 185, 203, 206, 207, 210, 211, 212, 213, 214, 220, 223, 225, 238, 246, 258, 277, 296, 301, 314, 317, 318, 323, 324, 328, 336, 343, 347, 432, 434, 461, 490], "gemm": [13, 19, 23, 40, 144, 212, 213, 327, 350], "partial": [13, 15, 24, 41, 271, 336, 349], "privat": [13, 140, 190, 191, 315], "produc": [13, 15, 23, 28, 31, 32, 33, 36, 38, 39, 82, 138, 145, 260, 266, 271, 324, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 445, 446, 447, 448, 451, 452, 453, 454, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 484, 485, 486, 487], "matrix": [13, 22, 23, 24, 26, 30, 40, 86, 136, 144, 180, 181, 211, 212, 213, 214, 220, 225, 242, 246, 265, 277, 301, 324, 325, 328, 336, 347, 349, 439, 440, 491], "im2col": 13, "longer": [13, 185], "complet": [13, 16, 20, 125, 132, 218, 226, 227, 241, 260, 271, 331, 334, 335, 349, 368, 442], "confus": [13, 36], "workspac": [13, 15, 22, 23, 43, 129, 136, 176, 177, 184, 185, 199, 200, 203, 206, 207, 210, 223, 224, 228, 233, 244, 266, 306, 308, 314, 315, 317, 318, 323, 343, 345, 351, 361, 374, 376, 378, 380, 408, 410, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 446, 448, 461, 485, 487], "amount": [13, 19, 23, 58, 59, 60, 61, 62, 63, 145, 177, 250, 260], "space": [13, 14, 19, 144, 145, 203, 210, 250, 285, 314, 323, 442], "direct": [13, 22, 36, 47, 65, 87, 90, 93, 118, 121, 136, 143, 147, 148, 184, 185, 186, 187, 199, 224, 233, 238, 260, 270, 306, 345, 361, 374, 376, 408, 410, 411, 424, 426, 428, 430, 436, 438, 442, 456, 460, 461, 470, 485, 487], "too": [13, 214, 271, 328], "few": [13, 23, 35, 38, 136, 266, 317, 318, 323], "proport": 13, "imag": [13, 22, 33, 35, 48, 129, 144, 218, 334], "diff_weight": [13, 22, 36, 60, 63, 130, 188, 189, 206, 207, 233, 263, 317, 318, 361], "group": [13, 22, 31, 37, 59, 60, 61, 62, 63, 132, 137, 144, 157, 164, 165, 174, 184, 185, 209, 234, 260, 272, 321, 322, 362, 461, 472, 474], "upper": [13, 22, 55, 56, 131, 144, 157, 271], "total": [13, 59, 127, 132, 233, 361], "By": [13, 14, 19, 31, 35, 283], "contrast": 13, "littl": [13, 211, 324], "sizeof": [13, 30, 144, 153, 156, 181, 203, 210, 215, 219, 227, 314, 323, 330, 335], "summand": 13, "scratchpad_mod": [13, 19, 243, 296, 458], "worri": 13, "onednn_enable_concurrent_exec": [13, 19], "cmake": [13, 18, 19, 24, 25, 30, 32, 128, 131, 132, 143, 145], "off": [13, 19, 24, 25, 32, 131, 132, 145, 190, 191, 218, 271, 334], "across": [13, 19, 23, 36, 37, 41, 43, 44, 136, 147, 148, 233, 258, 361], "level": [13, 31, 32, 128, 131, 132, 145, 238, 260, 271, 296], "freed": 13, "referenc": 13, "segment": 13, "fault": 13, "you": [13, 14, 15, 18, 19, 23, 27, 33, 35, 36, 38, 40, 41, 42, 61, 132, 136, 138, 143, 144, 185, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366], "ON": [13, 18, 19, 24, 25, 30, 32, 131, 132, 145, 190, 191], "own": [13, 14, 27, 30, 35, 126, 127, 260, 261, 266, 276, 299, 300, 334, 442, 483], "larger": [13, 190, 191, 233, 361], "concurr": [13, 27, 126, 190, 191, 264, 277, 282], "suffici": 13, "dnnl_arg_scratchpad": [13, 238, 266], "reus": [13, 14, 23, 35, 36, 44, 136, 144, 233, 361], "make": [13, 14, 18, 19, 25, 32, 36, 40, 42, 44, 86, 125, 127, 144, 157, 174, 185, 252, 260, 285, 444, 449], "safe": [13, 14, 28, 127, 128, 144, 190, 191, 218, 264, 282, 334, 442], "good": [13, 35, 44, 144, 324, 334], "speed": [13, 19, 35, 128, 223, 343], "side": [13, 23, 86, 260, 442], "control": [13, 15, 18, 23, 26, 41, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 78, 79, 86, 88, 89, 119, 127, 243, 244, 257, 264, 271, 282, 283, 370, 480], "dnnl_primitive_attr_set_scratchpad_mod": [13, 238, 243], "set_scratchpad_mod": [13, 458], "highlight": [13, 36], "consum": [13, 31, 33, 233, 260, 361], "due": [13, 22, 36, 40, 170, 193, 194, 214, 324, 328, 444], "print": [13, 145], "much": [13, 14, 40, 145, 214, 328, 335, 368], "hold": [13, 28, 44, 98, 99, 100, 101, 102, 103, 104, 211, 213, 233, 243, 315, 324, 326, 334, 349, 361, 458], "cout": [13, 204, 212, 213, 218, 219, 227, 237, 334, 335, 368], "query_s64": [13, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "memory_consumption_s64": [13, 184], "endl": [13, 204, 212, 213, 218, 219, 237, 334, 335, 368], "visibl": 13, "zero_md": 13, "scratchpad_desc": [13, 226, 349, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_scratchpad_mod": [13, 458], "custom": [13, 18, 19, 27, 31, 144], "scratchpad_md": [13, 184], "prim": [13, 203, 210, 227, 314, 323, 350], "get_siz": [13, 30, 36, 144, 212, 213, 227, 260, 299, 326, 327, 442, 444], "scratchpad_ptr": 13, "nullptr": [13, 144, 219, 261, 266, 283, 299, 335, 411], "user_memory_manag": 13, "outlin": [14, 36, 127], "program": [14, 16, 18, 23, 27, 31, 38, 40, 126, 136, 215, 216, 218, 219, 239, 294, 328, 330, 331, 334, 335, 350, 368], "present": [14, 86, 128, 136, 349], "kei": [14, 15, 17, 21, 23, 31, 36, 38, 41, 42, 44, 128, 134, 136, 137, 138, 139, 306, 307, 308, 309, 310, 311, 312, 314, 315, 319, 320, 321, 322, 334, 338, 339, 340, 341, 345, 346, 347, 348, 357, 358, 362, 363, 364, 365, 366, 367], "discuss": [14, 35, 36, 127, 260, 334], "essenc": 14, "process": [14, 33, 34, 35, 36, 40, 127, 131, 132, 136, 144, 233, 324, 349, 361], "context": [14, 23, 27, 128, 157, 174, 212, 213, 238, 260, 261, 274, 276, 291, 298, 299, 300, 326, 327, 331, 334, 335, 368, 444], "relationship": [14, 31], "entiti": [14, 31, 266], "briefli": 14, "figur": [14, 136], "relev": [14, 36, 233, 350, 361], "built": [14, 16, 18, 19, 30, 42, 140, 143, 277, 301, 349, 350], "notion": [14, 17, 21, 36, 133, 139, 349], "encapsul": [14, 261, 274, 288, 292, 299, 331, 334, 335, 368, 442], "lstm": [14, 40, 147, 148, 157, 174, 213, 233, 266, 270, 305, 327, 346, 361, 435, 436, 437, 438], "addition": [14, 23, 40, 44, 86, 127, 142, 206, 317, 349, 350], "complex": [14, 23], "pure": 14, "state": [14, 22, 36, 40, 136, 157, 174, 213, 233, 260, 266, 270, 285, 326, 327, 342, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "One": [14, 23, 27, 107, 142, 144], "immut": [14, 31], "approach": [14, 36, 127, 144, 260, 316, 324, 349], "tailor": 14, "amort": 14, "mutabl": [14, 287], "devic": [14, 19, 26, 27, 126, 128, 178, 179, 197, 198, 238, 253, 261, 276, 291, 298, 299, 300, 331, 334, 335, 368], "card": [14, 253], "transfer": [14, 211, 253, 324], "ti": [14, 274, 331, 334, 335, 368], "opencl": [14, 18, 29, 30, 128, 219, 242, 256, 260, 271, 299, 305, 334, 342, 371, 442], "command": [14, 18, 42, 127, 132, 261, 276, 335, 350], "queue": [14, 27, 126, 237, 238, 261, 276, 299, 300, 335, 368], "map": [14, 15, 17, 21, 23, 27, 28, 35, 38, 41, 43, 44, 64, 66, 67, 96, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 218, 260, 271, 298, 299, 300, 324, 331, 334, 335, 384, 442, 456, 460, 464, 465, 482], "offset": [14, 64, 66, 67, 96, 144, 184, 185, 211, 218, 233, 238, 246, 260, 277, 301, 324, 334, 361, 442, 444], "conceptu": [14, 40], "expos": [14, 15, 41, 127], "flexibl": [14, 142, 144, 328], "dnnl_memory_desc_t": [14, 143, 144, 157, 203, 210, 215, 238, 260, 266, 314, 323, 330, 444], "special": [14, 17, 21, 26, 27, 28, 31, 40, 44, 53, 126, 130, 133, 134, 137, 138, 139, 144, 156, 173, 214, 260, 261, 266, 276, 281, 299, 300, 328, 442], "construct": [14, 27, 31, 32, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 233, 260, 261, 276, 285, 298, 299, 300, 301, 335, 361, 368, 460, 489], "variou": [14, 128, 260, 266], "via": [14, 15, 17, 19, 24, 25, 28, 34, 67, 119, 127, 128, 129, 131, 144, 145, 202, 227, 233, 260, 271, 285, 289, 299, 300, 308, 309, 312, 313, 316, 331, 334, 335, 349, 361, 368, 442, 450, 456, 458, 464], "instanti": 14, "iter": [14, 131, 136, 163, 171, 204, 206, 207, 210, 212, 213, 233, 317, 318, 323, 326, 327, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 460, 470, 485, 487], "prefer": [14, 19, 20, 25, 150, 151, 206, 207, 210, 233, 317, 318, 323, 361], "concret": 14, "embodi": 14, "There": [14, 15, 17, 19, 20, 21, 23, 28, 30, 35, 37, 38, 43, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 143, 233, 243, 260, 331, 335, 350, 361, 368, 458, 461], "extract": [14, 335, 368], "submemory_desc": [14, 212, 213, 233, 326, 327, 361, 444], "src_desc": [14, 35, 204, 205, 206, 207, 209, 226, 227, 238, 244, 248, 249, 251, 252, 255, 257, 258, 259, 262, 263, 267, 268, 269, 272, 273, 275, 315, 316, 317, 318, 321, 349, 350, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "action": [14, 36], "placehold": [14, 23, 38, 44, 136, 174, 226, 349], "obtain": [14, 19, 36, 37, 40, 128, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 260, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 362, 364, 366, 465], "high": [14, 20, 37, 145, 249, 251, 262, 386, 388, 390, 392, 394, 396, 446, 448], "instead": [14, 17, 18, 19, 22, 23, 28, 33, 38, 40, 42, 44, 133, 134, 135, 144, 233, 243, 246, 270, 277, 301, 315, 334, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 450, 485, 487], "individu": [14, 26, 28, 30, 127, 246, 250, 277, 301, 315], "transpar": 14, "effort": 14, "backend": [14, 19, 107], "awar": [14, 25, 334], "scalabl": [14, 40, 149, 152], "benefit": [14, 19, 35, 131, 252], "show": [15, 23, 37, 38, 41, 129, 130, 135, 142, 144, 328, 334], "straightforward": [15, 23, 41, 129, 130, 135, 334], "gamma": [15, 23, 41, 50, 51, 52, 80, 81, 244, 257], "mu": [15, 41, 50, 51, 80, 81], "sqrt": [15, 28, 33, 41, 51, 80, 99, 116, 166, 211, 214, 324, 328], "sigma": [15, 41, 50, 51, 52, 80, 81, 136], "varepsilon": [15, 41, 51], "dnnl_use_scal": [15, 41, 176, 177], "dnnl_use_shift": [15, 41, 176, 177], "dnnl_use_global_stat": [15, 41, 176, 177], "constant": [15, 35, 41, 51, 80, 81, 82, 119, 163, 171, 177, 185, 242, 243, 260, 266, 271, 274, 279, 280, 281, 285, 288, 289, 292, 444, 458], "stabil": [15, 28, 41, 51, 80, 81], "nhw": [15, 50], "learnabl": [15, 22, 36, 41, 80, 81], "dnnl_fuse_norm_relu": [15, 176, 177], "dnnl_fuse_norm_add_relu": [15, 176, 177], "popul": [15, 136], "sampl": [15, 37, 129, 132, 140, 335, 368], "unbias": 15, "version": [15, 18, 19, 20, 35, 42, 128, 143, 145, 147, 148, 157, 174, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 260, 266, 271, 296, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 384, 482, 488], "hat": 15, "becom": [15, 41, 143, 157, 174, 350], "dnnl_forward_train": [15, 23, 28, 41, 129, 130, 135, 137, 138, 182, 183, 244, 249, 251, 252, 255, 257, 258, 262, 263, 269, 270, 272, 273], "dnnl_forward_infer": [15, 23, 28, 41, 129, 130, 135, 137, 138, 182, 183, 244, 249, 251, 252, 255, 257, 258, 262, 263, 269, 270, 272, 273], "diffsrc": [15, 22, 23, 28, 38, 41, 43, 49, 59, 62, 81, 89, 129, 130, 135, 137, 138], "diffgamma": [15, 41, 81], "diffbeta": [15, 41, 81], "diffdst": [15, 22, 23, 28, 38, 41, 43, 49, 54, 59, 60, 62, 63, 81, 89, 129, 130, 135, 137, 138], "mark": [15, 33, 40, 41, 81, 144], "asterisk": [15, 41, 81], "clariti": [15, 41], "summari": [15, 41, 132, 349], "shown": [15, 20, 36, 40, 41, 74, 75, 127, 132, 136, 137, 144, 334, 350], "dnnl_backward": [15, 41, 177, 182, 183, 244, 257, 270], "dnnl_backward_data": [15, 41, 177, 182, 183, 244, 257], "dnnl_normalization_flags_non": [15, 41, 176, 177], "Not": [15, 20, 41, 132], "src_1": [15, 17, 47, 65, 87, 90, 93, 118, 121, 201, 310], "diff_src_1": 15, "tabl": [15, 17, 20, 21, 22, 23, 26, 27, 28, 38, 41, 43, 44, 126, 129, 130, 133, 134, 135, 136, 137, 138, 139, 185], "dnnl_arg_scal": [15, 41, 200, 222, 238, 266, 308, 340], "dnnl_arg_shift": [15, 41, 200, 222, 238, 266, 308, 340], "dnnl_arg_mean": [15, 41, 200, 222, 238, 266, 308, 340], "dnnl_arg_vari": [15, 41, 200, 222, 238, 266, 308, 340], "dnnl_arg_workspac": [15, 36, 43, 129, 199, 200, 203, 206, 207, 210, 223, 224, 228, 233, 238, 266, 306, 308, 314, 317, 318, 323, 343, 345, 351, 361], "dnnl_arg_diff_dst": [15, 23, 28, 38, 41, 43, 129, 130, 135, 137, 138, 206, 207, 210, 238, 266, 317, 318, 323], "dnnl_arg_diff_src": [15, 23, 28, 38, 41, 43, 129, 130, 135, 137, 138, 206, 207, 210, 238, 266, 317, 318, 323], "dnnl_arg_diff_src_1": [15, 238, 266], "dnnl_arg_diff_scal": [15, 41, 238, 266], "dnnl_arg_diff_shift": [15, 41, 238, 266], "flavor": [15, 41, 334], "batch_normalization_forward": [15, 200, 244, 296, 308, 378, 456], "bitwis": [15, 41, 195], "OR": [15, 41, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "latter": [15, 19, 22, 27, 36, 40, 41, 42, 126, 142, 260, 314, 315, 460], "overwritten": [15, 17, 28, 41, 138], "dst_desc": [15, 35, 204, 205, 206, 207, 208, 209, 226, 227, 236, 238, 244, 245, 248, 249, 251, 252, 255, 257, 258, 259, 262, 263, 267, 268, 269, 272, 273, 275, 315, 317, 318, 319, 321, 349, 350, 366, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "diff_dst_desc": [15, 206, 207, 238, 244, 249, 251, 252, 255, 257, 258, 262, 263, 269, 272, 273, 317, 318, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "even": [15, 26, 36, 40, 124, 127, 136, 144, 252, 334], "combin": [15, 17, 23, 28, 30, 32, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 132, 134, 135, 136, 137, 138, 195, 260, 331, 334, 444, 449], "scaleshift": [15, 41], "restrict": [15, 17, 23, 24, 25, 28, 38, 41, 43, 44, 53, 129, 133, 135, 136, 137, 138, 250, 271], "1d": [15, 23, 27, 38, 41, 43, 53, 66, 67, 78, 79, 80, 81, 86, 94, 95, 98, 99, 100, 101, 102, 103, 104, 129, 135, 144, 157, 174, 249, 251, 269, 334], "dnnl_x": [15, 157, 203, 210, 314, 323], "dnnl_a": [15, 157, 174], "dnnl_nc": [15, 38, 41, 157], "dnnl_ab": [15, 41, 138, 157, 174, 260], "sp_n": 15, "sp_0": 15, "0d": [15, 43, 334], "nc": [15, 38, 41, 174, 204, 221, 235, 338, 364], "ncw": [15, 129, 174], "dnnl_ncw": [15, 23, 38, 129, 157], "dnnl_abc": [15, 41, 129, 157, 174], "dnnl_nwc": [15, 23, 38, 129, 157], "dnnl_acb": [15, 129, 157, 174], "dnnl_nchw": [15, 21, 23, 38, 43, 129, 137, 144, 157, 203, 210, 215, 260, 314, 323, 330], "dnnl_abcd": [15, 41, 43, 129, 137, 138, 157, 174], "dnnl_nhwc": [15, 21, 23, 38, 43, 129, 137, 144, 157, 260], "dnnl_acdb": [15, 43, 129, 137, 138, 157, 174], "3d": [15, 23, 38, 41, 43, 44, 80, 81, 129, 130, 135, 137, 144, 157, 174, 249, 251, 259, 262, 269, 334, 386, 388, 390, 392, 394, 396, 446, 448], "ncdhw": [15, 129, 137, 157, 174], "dnnl_ncdhw": [15, 23, 38, 129, 137, 157], "dnnl_ndhwc": [15, 23, 38, 129, 137, 157], "dnnl_acdeb": [15, 129, 137, 157, 174], "come": [15, 28, 36, 37, 42, 43, 127, 129, 137, 157, 174, 190, 191, 220, 233, 334, 336, 361], "intens": [15, 26, 35, 43, 127, 129, 137, 260, 334, 349, 350], "chain": [15, 23, 33, 36, 37, 38, 40, 243, 350, 449], "descript": [15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 30, 33, 35, 38, 41, 42, 43, 44, 129, 131, 132, 133, 135, 136, 138, 144, 145, 174, 250, 260, 292, 326, 327, 334, 349, 350], "dnnl_eltwise_relu": [15, 28, 147, 148, 203, 210, 215, 270, 314, 323, 330], "correctli": [15, 23, 132, 271, 334, 349], "diff_dst": [15, 22, 36, 43, 46, 49, 52, 54, 56, 59, 60, 62, 63, 65, 69, 73, 75, 77, 79, 81, 85, 89, 92, 95, 106, 110, 112, 114, 116, 123, 130, 138, 206, 207, 210, 244, 252, 257, 317, 318, 323], "diff_src": [15, 22, 36, 43, 46, 49, 52, 56, 59, 62, 69, 73, 75, 77, 79, 81, 85, 89, 92, 95, 106, 110, 112, 114, 116, 123, 129, 130, 135, 138, 206, 207, 210, 233, 244, 252, 257, 317, 318, 323, 361], "highli": [15, 21, 28, 41, 43, 139, 328], "whenev": [15, 17, 21, 28, 36, 41, 133, 138, 139, 144, 243, 334], "caveat": [15, 28, 41, 139], "statist": [15, 41, 145, 157, 174, 176, 177, 324, 420, 422], "calcul": [15, 30, 35, 37, 48, 49, 50, 52, 56, 58, 59, 60, 61, 62, 63, 69, 78, 79, 84, 85, 88, 89, 98, 99, 100, 101, 102, 103, 104, 106, 110, 111, 112, 116, 119, 123, 129, 130, 145, 147, 148, 213, 287, 316], "pleas": [15, 19, 35, 44, 107, 132, 145, 205, 206, 213, 260, 287, 317, 327, 349], "review": [15, 349], "demonstr": [15, 17, 21, 23, 28, 35, 38, 41, 43, 44, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 203, 204, 205, 206, 207, 208, 210, 212, 213, 215, 216, 217, 218, 219, 226, 227, 229, 233, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "benchdnn": [16, 30, 127, 132, 145], "oneapi": [16, 19, 42, 140, 143, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 306, 308, 310, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 335, 336, 338, 340, 343, 345, 347, 351, 355, 357, 359, 361, 362, 364, 366, 368], "readm": 16, "overlin": [17, 21, 23, 28, 47, 57, 65, 87, 90, 93, 121, 134, 137, 138, 139], "src_0": [17, 47, 65, 87, 90, 93, 121, 139, 201, 310], "mathbin": [17, 47, 65], "subtract": [17, 33, 40, 118, 166, 243, 450], "divis": [17, 22, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 134, 202, 312], "greater": [17, 36, 40, 55, 56, 135, 147, 148], "dnnl_arg_src_0": [17, 201, 202, 238, 266, 310, 312], "text": [17, 23, 28, 38, 44, 45, 46, 68, 74, 75, 82, 94, 97, 105, 129, 133, 135, 144, 368], "scale0": 17, "dnnl_arg_attr_scal": [17, 23, 38, 41, 44, 134, 138, 205, 211, 214, 220, 231, 238, 243, 266, 316, 324, 328, 336, 357, 458], "scale1": 17, "semant": [17, 22, 30, 34, 40, 44, 86, 94, 95, 126, 130, 243, 271, 334, 411, 450, 488], "recommend": [17, 21, 33, 35, 36, 40, 44, 127, 130, 133, 139, 349, 350], "match": [17, 21, 31, 35, 36, 47, 57, 65, 78, 86, 87, 90, 93, 121, 130, 134, 139, 229, 260, 299, 300, 350, 353, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 456, 463, 464, 465, 467, 469, 472, 474, 476, 478, 482, 485, 487], "syntax": [17, 35], "d": [17, 22, 23, 28, 38, 39, 43, 44, 45, 48, 53, 55, 57, 64, 68, 71, 72, 74, 76, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 113, 115, 117, 122, 124, 129, 130, 138, 144, 157, 174, 199, 211, 215, 224, 233, 243, 260, 306, 324, 330, 334, 345, 361, 458], "nxcxdxhxw": 17, "pytorch": [17, 95], "explicitli": [17, 19, 20, 23, 33, 34, 127, 133, 136, 285, 287, 334], "deriv": [17, 21, 129, 133, 139, 176, 177, 243, 257, 384, 450, 482], "ones": [17, 40, 135, 143, 144, 199, 209, 224, 260, 306, 321, 328, 345, 444], "unavoid": 17, "correct": [17, 144, 168, 169, 220, 331, 334, 336], "issu": [17, 27, 36, 40, 126, 132, 168, 169, 214, 328], "arbitrari": [17, 21, 28, 30, 41, 55, 56, 68, 69, 74, 75, 80, 81, 82, 84, 85, 111, 112, 113, 114, 125, 130, 133, 134, 135, 137, 138, 139, 144, 213, 214, 248, 316, 327, 328, 336], "6": [17, 21, 23, 28, 30, 37, 41, 44, 76, 92, 132, 133, 134, 137, 138, 139, 144, 153, 194, 199, 202, 204, 224, 306, 312, 345], "fewer": [17, 21, 28, 34, 41, 133, 134, 137, 138, 139], "bnorm": [17, 29, 202, 305, 313], "postop": [17, 313, 316], "clone": [18, 243, 260, 266, 384, 460, 465, 482], "repositori": [18, 19], "git": [18, 128, 145, 271, 349, 488], "http": [18, 42, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "github": [18, 19, 211, 324], "com": [18, 42], "ensur": [18, 19, 20, 24, 36, 126, 260, 335, 349, 368, 444], "softwar": [18, 39, 40, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "cmake_install_prefix": 18, "locat": [18, 19, 36, 42, 144, 260, 268, 271, 292, 461, 465], "cmake_build_typ": 18, "select": [18, 19, 30, 37, 156, 157, 173, 174, 350], "releas": [18, 19, 126, 271], "relwithdebinfo": 18, "cmake_prefix_path": 18, "directori": [18, 42, 132, 271], "search": 18, "up": [18, 19, 26, 40, 44, 128, 129, 130, 132, 144, 200, 201, 203, 210, 215, 222, 223, 228, 235, 266, 287, 308, 310, 314, 323, 330, 340, 343, 349, 351, 364, 406], "makefil": 18, "mkdir": 18, "cd": 18, "uncom": 18, "line": [18, 127, 132, 144, 145, 350], "export": [18, 127, 350], "cc": 18, "cxx": 18, "icx": [18, 42], "icpx": [18, 42], "j": [18, 43, 84, 111, 132, 140, 204, 212, 213, 260, 315, 444], "setvar": 18, "sh": [18, 22, 23, 48, 58, 59, 88, 129, 209, 228, 321, 351], "script": [18, 143], "folder": 18, "your": [18, 35, 36, 42, 132, 350], "opt": [18, 19], "ddnnl_cpu_runtim": 18, "ddnnl_gpu_runtim": 18, "open": [18, 19, 294], "driver": [18, 19], "openclroot": 18, "path": [18, 19, 42, 142, 271], "gnu": [18, 19], "dcmake_system_nam": 18, "dcmake_system_processor": 18, "dcmake_library_path": 18, "usr": 18, "lib": [18, 42], "acl_root_dir": [18, 19], "ddnnl_aarch64_use_acl": 18, "studio": [18, 42, 127, 143], "solut": [18, 42, 143, 144], "16": [18, 20, 22, 26, 36, 132, 142, 145, 153, 157, 161, 172, 215, 216, 260, 330, 331], "2019": [18, 40, 206, 211, 214, 215, 216, 218, 219, 220, 226, 227, 237, 317, 324, 328, 330, 336], "config": [18, 143], "respect": [18, 22, 23, 26, 28, 31, 34, 36, 38, 44, 58, 79, 82, 128, 135, 144, 145, 157, 174, 176, 182, 183, 206, 207, 210, 233, 243, 244, 249, 251, 252, 255, 257, 258, 262, 263, 266, 269, 270, 271, 272, 273, 317, 318, 323, 328, 350, 361, 406, 458, 485], "file": [18, 19, 32, 39, 132, 143, 144, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 271, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368], "being": [18, 19, 44, 134, 136, 137, 177, 260, 271, 335, 368, 444], "sln": [18, 143], "project": [18, 20, 143, 157, 174, 243, 266, 270, 436, 438, 458, 470], "bat": 18, "x86": [18, 39], "commmand": 18, "prompt": 18, "ninja": 18, "v3": [18, 40, 243], "23": [18, 142], "unit": [18, 31, 136, 147, 148, 252, 289, 335, 342, 368], "test": [18, 19, 30, 132, 140, 214, 260, 328, 442], "ctest": 18, "conda": 18, "env": 18, "doc": [18, 35, 144], "yml": 18, "header": [18, 20, 26, 27, 126, 132, 143], "administr": 18, "privileg": 18, "sudo": 18, "mac": 18, "bold": [19, 24, 25, 32, 131, 145], "onednn_library_typ": 19, "onednn_cpu_runtim": 19, "none": [19, 28, 44, 47, 48, 49, 58, 59, 60, 61, 62, 63, 65, 78, 79, 87, 88, 89, 90, 93, 118, 119, 121, 145, 164, 165, 176, 349], "omp": [19, 132], "seq": 19, "sycl": [19, 29, 30, 237, 238, 242, 256, 260, 271, 279, 280, 286, 298, 299, 300, 305], "onednn_gpu_runtim": 19, "ocl": [19, 219], "offload": 19, "onednn_build_exampl": 19, "onednn_build_test": 19, "onednn_build_graph": [19, 32], "onednn_enable_graph_dump": [19, 32], "dump": [19, 39, 132, 239, 271], "artifact": [19, 32], "onednn_arch_opt_flag": 19, "warn": [19, 132, 214, 328], "onednn_enable_jit_profil": [19, 132], "profil": [19, 29, 145, 227, 271, 294, 305], "onednn_enable_itt_task": [19, 132], "onednn_enable_primitive_cach": [19, 131], "onednn_enable_max_cpu_isa": [19, 24], "onednn_enable_cpu_isa_hint": [19, 25], "workload": [19, 23, 35, 349, 350], "primitive_nam": 19, "cpu_isa_nam": 19, "gpu_isa_nam": 19, "onednn_experiment": [19, 30], "onednn_verbos": [19, 271, 349, 350], "onednn_aarch64_use_acl": 19, "onednn_blas_vendor": 19, "armpl": 19, "extern": 19, "link": [19, 39, 58, 59, 60, 61, 62, 63, 294], "onednn_gpu_vendor": 19, "nvidia": 19, "onednn_dpcpp_host_compil": 19, "onednn_library_nam": 19, "counterpart": [19, 40, 143, 260, 444], "prefix": [19, 271], "intend": [19, 23, 142, 145, 261, 294, 299], "develop": [19, 20, 26, 39, 40, 145, 205, 206, 213, 244, 245, 248, 249, 252, 255, 257, 258, 259, 261, 262, 263, 267, 268, 269, 270, 272, 273, 275, 276, 317, 327], "subject": 19, "dpc": [19, 271, 276, 305, 368, 371], "main": [19, 30, 142, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 260, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 362, 364, 366, 450], "discov": 19, "absolut": [19, 45, 98], "cmake_cxx_compil": 19, "window": [19, 36, 40, 48, 49, 88, 89, 129, 145, 271, 342], "linux": [19, 127, 145, 271], "7": [19, 132, 140, 142, 144, 153, 161, 172, 194, 215, 216, 326, 327, 330, 350], "4": [19, 23, 24, 26, 28, 30, 37, 40, 44, 50, 51, 52, 81, 92, 127, 132, 144, 147, 148, 149, 152, 153, 157, 194, 202, 203, 204, 206, 207, 209, 210, 212, 213, 215, 219, 224, 227, 228, 233, 234, 237, 238, 260, 287, 312, 314, 317, 318, 321, 323, 330, 335, 345, 350, 351, 361, 362, 368], "gcc": 19, "interoper": [19, 30, 242, 279, 298, 299, 300, 301, 305, 335, 368, 371], "disk": 19, "occupi": [19, 142, 260, 442], "app": 19, "remov": [19, 98, 99, 100, 101, 102, 103, 104, 257, 260, 271, 444], "batch_norm": [19, 180, 305], "concat": [19, 166, 180, 181, 242, 260, 265, 296, 305, 320, 349, 456, 491], "deconvolut": [19, 147, 148, 180, 181, 242, 265, 391, 392, 393, 394, 395, 396], "inner_product": [19, 180, 204, 305], "layer_norm": [19, 180, 305], "lrn": [19, 147, 148, 180, 181, 184, 185, 203, 204, 206, 207, 210, 242, 265, 305, 314, 317, 318, 323, 349, 431, 432, 433, 434, 461, 491], "matmul": [19, 30, 33, 44, 166, 180, 211, 214, 220, 238, 259, 296, 305, 325, 329, 337, 348, 456], "pool": [19, 36, 40, 48, 49, 88, 89, 147, 148, 180, 181, 184, 185, 203, 204, 206, 207, 210, 226, 242, 265, 305, 314, 315, 317, 318, 323, 352, 445, 446, 447, 448, 461, 491], "prelu": [19, 82, 95, 166, 180, 181, 242, 243, 265, 305, 353, 354, 450, 451, 452, 453, 454, 491], "resampl": [19, 147, 148, 180, 181, 184, 185, 242, 265, 305, 360, 461, 466, 467, 468, 469, 491], "rnn": [19, 21, 29, 35, 36, 40, 41, 147, 148, 157, 174, 180, 181, 184, 185, 186, 187, 188, 189, 199, 212, 213, 224, 233, 242, 243, 260, 265, 266, 305, 307, 346, 349, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 458, 461, 470, 484, 485, 486, 487, 491], "shuffl": [19, 180, 181, 184, 185, 242, 265, 305, 349, 363, 461, 471, 472, 473, 474, 491], "softmax": [19, 36, 84, 112, 147, 148, 166, 180, 181, 212, 213, 242, 265, 305, 349, 365, 475, 476, 477, 478, 491], "attempt": [19, 266, 402, 411, 442, 456, 480], "unimpl": [19, 132, 170, 184, 193, 271], "style": 19, "semicolon": 19, "delimit": [19, 132], "donednn_enable_primit": 19, "sse41": [19, 24, 25, 149, 271], "avx2": [19, 24, 26, 39, 145, 149, 152, 271, 349], "avx512": [19, 26, 40, 144], "amx": [19, 24, 26, 136, 149, 152], "linearli": 19, "donednn_enable_primitive_cpu_isa": 19, "gen9": [19, 26, 39], "gen11": [19, 26], "xelp": 19, "xehp": 19, "xehpg": 19, "xehpc": 19, "donednn_enable_primitive_gpu_isa": 19, "processor": [19, 23, 24, 39, 127, 149, 152, 219, 294, 335, 368], "jit": [19, 24, 25, 35, 42, 131, 132, 145, 271, 349, 350, 370], "detect": [19, 24, 129, 243, 458], "r": [19, 22, 23, 37, 39, 40, 57, 64, 66, 67, 80, 81, 96, 98, 99, 100, 101, 102, 103, 104, 132, 133, 136, 147, 148, 219, 246, 277, 301, 335, 350, 368], "xsse4": 19, "sse4": [19, 24, 26, 144, 149, 152], "older": [19, 24, 26], "clang": [19, 42, 127], "msse4": 19, "give": [19, 136, 144, 324], "therefor": [19, 126, 128, 132, 142], "arch_opt_flag": 19, "portabl": [19, 127, 260], "reli": [19, 22, 134], "situat": [19, 44, 350], "sometim": [19, 24, 35, 36, 38, 40, 144, 233, 331, 334, 361], "zmm": 19, "usag": [19, 23, 26, 39, 107, 157, 174, 199, 200, 224, 243, 306, 308, 345, 350, 450, 458], "advantag": [19, 142], "clock": [19, 132], "sequenti": [19, 271, 314, 315], "throughout": [19, 35, 233, 334, 361], "undefin": [19, 36, 148, 153, 156, 157, 160, 162, 163, 164, 165, 171, 172, 173, 174, 175, 180, 181, 182, 183, 186, 187, 188, 189, 192, 287], "crash": [19, 334], "conflict": [19, 368], "donednn_cpu_runtim": 19, "tbbroot": 19, "environment": 19, "instal": [19, 42], "dtbbroot": 19, "winograd": [19, 21, 134, 145, 147, 148], "_onednn_test_threadpool_impl": 19, "three": [19, 22, 33, 35, 44, 127, 136, 144, 331, 335, 350, 368], "standalon": 19, "eigen": [19, 140], "eigen3_dir": 19, "d_onednn_test_threadpool_impl": 19, "deigen3_dir": 19, "eigen3": 19, "plu": 19, "decomposit": 19, "At": [19, 24, 25, 35, 44, 57, 131, 132, 145, 218, 334], "balanc": [19, 328], "item": [19, 132], "worker": [19, 483], "64": [19, 39, 40, 132, 153, 183, 209, 213, 231, 243, 294, 321, 357, 458], "optimis": 19, "computelibrari": 19, "machin": [19, 214, 328], "mlplatform": 19, "org": [19, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "donednn_aarch64_use_acl": 19, "download": 19, "advis": [19, 24, 25, 41], "v22": 19, "08": 19, "donednn_blas_vendor": 19, "graphic": [19, 39, 219, 294, 335, 368], "sdk": 19, "dopenclroot": 19, "donednn_gpu_runtim": 19, "simultan": [19, 30, 134], "conveni": [20, 28, 44, 144, 157, 174, 266, 335, 403, 461], "almost": [20, 127, 144], "far": [20, 40], "concern": [20, 40], "languag": [20, 33, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "switch": [20, 143, 144], "back": [20, 23, 31, 36, 40, 48, 49, 58, 59, 60, 61, 62, 63, 84, 85, 88, 89, 132, 134, 206, 207, 249, 251, 260, 262, 280, 291, 317, 318, 368, 386, 388, 390, 392, 394, 396, 442, 446, 448], "forth": 20, "desir": [20, 36, 127, 271], "c99": 20, "11": [20, 37, 132, 203, 204, 206, 207, 210, 227, 228, 314, 317, 318, 323, 331, 334, 350, 351], "coverag": 20, "full": [20, 42, 132, 143, 177, 335, 368], "medium": 20, "insid": [20, 31, 144, 163, 171, 211, 220, 260, 324, 336, 444], "thin": 20, "wrapper": [20, 402, 411, 442, 456, 480], "stabl": [20, 138, 148], "abi": [20, 143, 181], "usabl": [20, 22], "target": [20, 31, 67, 212, 213, 243, 281, 285, 289, 291, 458], "audienc": 20, "experienc": 20, "ffi": 20, "framework": [20, 31, 34, 36, 125, 127, 131, 144, 287, 294, 334], "overhead": [20, 33, 35, 128, 131, 132, 144], "sanit": [20, 33], "consequ": [20, 350], "nan": 20, "larg": [20, 33, 131], "close": [20, 127, 142], "accept": [20, 32, 35, 37, 49, 59, 60, 89, 125, 132, 271, 285], "overlap": [20, 48, 129], "permit": 20, "concaten": [21, 57, 136, 180, 186, 187, 208, 248, 260, 319, 383, 384], "concat_dimens": [21, 238, 248, 384], "ou": [21, 57, 137, 138], "src_i": [21, 55, 57, 84, 111, 139], "c_1": [21, 57], "c_": [21, 57, 136], "ident": [21, 41, 42, 98, 99, 100, 101, 102, 103, 104, 128, 131, 138, 139, 199, 209, 221, 224, 229, 306, 319, 320, 321, 338, 345, 353, 366, 367], "dnnl_arg_multiple_src": [21, 139, 208, 236, 238, 266, 319, 366], "sum_i": [21, 213], "c_i": 21, "necessarili": [21, 135, 142], "dnnl_nchw16c": [21, 157, 174], "dnnl_ncdhw8c": [21, 157, 174], "prepack": 21, "dnnl_format_kind_opaqu": [21, 156, 173], "s8s8": [21, 40], "abl": [21, 24, 44, 134, 139, 177, 334], "slower": [21, 26, 139], "neural": [22, 23, 26, 33, 143, 203, 204, 270, 288, 314, 315], "network": [22, 23, 26, 33, 35, 143, 203, 204, 270, 288, 314, 315], "gradient": [22, 36, 46, 52, 54, 56, 61, 69, 73, 75, 77, 79, 82, 85, 92, 95, 106, 110, 112, 114, 116, 123, 136, 142, 184, 185, 188, 189, 249, 251, 255, 266, 349, 387, 388, 393, 394, 415, 416], "df_": 22, "diffweight": [22, 23, 38, 60, 63, 130], "commonli": [22, 23], "wide": [22, 33], "known": [22, 23, 26, 44, 214, 218, 220, 260, 324, 328, 334, 336], "summar": [22, 27, 126, 136], "scale_shift": 22, "normal": [22, 26, 30, 36, 50, 51, 80, 81, 147, 148, 176, 177, 180, 181, 200, 202, 222, 223, 242, 258, 265, 266, 305, 309, 312, 328, 334, 341, 344, 349, 377, 378, 379, 380, 419, 420, 421, 422, 431, 433, 491], "layer": [22, 26, 35, 36, 78, 80, 81, 136, 180, 181, 199, 211, 212, 213, 220, 222, 224, 233, 242, 260, 265, 266, 270, 305, 306, 314, 315, 316, 317, 318, 323, 324, 326, 327, 336, 341, 345, 349, 361, 374, 376, 408, 410, 419, 420, 421, 422, 424, 426, 428, 430, 436, 438, 470, 485, 487, 491], "carri": 22, "diff_bia": [22, 54], "diff_scale_shift": 22, "_layer": 22, "_iter": 22, "recurr": [22, 26, 136, 199, 224, 266, 270, 306, 345, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "letter": [22, 144, 157, 174, 349], "od": 22, "depth": [22, 23, 58, 59, 144, 157, 174, 249, 251, 262, 386, 388, 390, 392, 394, 396, 446, 448], "kd": [22, 23, 38], "sd": [22, 23, 58, 59], "sw": [22, 23, 48, 58, 59, 88, 129, 209, 228, 321, 351], "dd": [22, 23, 28, 58, 59], "dh": [22, 23, 48, 58, 59, 88, 129, 228, 351], "dilat": [22, 59, 60, 61, 62, 63, 88, 89, 164, 165, 184, 185, 203, 210, 226, 228, 238, 249, 251, 262, 314, 323, 349, 351, 386, 388, 390, 392, 394, 396, 446, 448, 461], "ph": 22, "pw": 22, "wise": [22, 28, 36, 45, 47, 65, 71, 83, 87, 90, 91, 93, 94, 97, 108, 115, 117, 118, 121, 124, 130, 144, 168, 169, 177, 180, 181, 209, 217, 228, 305, 321, 333, 351], "transposit": [22, 246, 277, 301], "b": [22, 33, 39, 44, 136, 138, 144, 157, 174, 211, 214, 220, 238, 246, 259, 260, 277, 296, 301, 324, 328, 336, 349, 440], "hidden": [22, 40, 213, 266, 270, 326, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 485, 487], "_t": [22, 136], "timestamp": [22, 132, 136], "l": [22, 42, 43, 136, 157, 199, 224, 233, 243, 260, 306, 345, 361, 458], "tanh": [22, 23, 28, 33, 91, 123, 136, 147, 148, 166, 199, 209, 221, 224, 225, 306, 321, 338, 345, 347], "logist": [22, 28, 147, 148], "cell": [22, 26, 40, 147, 148, 157, 174, 184, 185, 188, 189, 213, 266, 270, 326, 327, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 461, 470, 485, 487], "tild": [22, 136], "candid": [22, 33, 44, 157, 174], "gate": [22, 136, 147, 148, 157, 174, 199, 224, 233, 260, 306, 345, 361], "forget": [22, 157, 174, 206, 207, 317, 318], "o": [22, 127, 132, 136, 144, 157, 174, 213, 227, 233, 243, 260, 326, 327, 361, 458], "updat": [22, 23, 26, 38, 136, 142, 143, 157, 174, 206, 207, 210, 233, 317, 318, 323, 361, 416], "reset": [22, 140, 147, 148, 157, 174, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "english": 22, "alphabet": 22, "canon": 22, "z": [22, 40], "outermost": [22, 137, 138, 144, 157, 174, 260], "innermost": [22, 137, 138, 157, 174, 184, 185, 260], "dens": [22, 30, 138, 144, 260, 444], "ba": [22, 174, 444], "last": [22, 40, 41, 80, 81, 86, 120, 127, 144, 145, 170, 193, 194, 257, 315, 326, 327, 334, 406, 460], "transpos": [22, 86, 137, 157, 174, 220, 246, 277, 301, 336], "natur": [22, 83, 147, 148, 334], "suppos": [22, 37, 233, 361], "column": [22, 44, 86, 132, 144, 246, 277, 301], "row": [22, 30, 86, 144, 175, 192, 211, 213, 238, 246, 277, 287, 301, 324], "major": [22, 40, 144, 211, 246, 271, 277, 287, 301, 324, 488], "fortran": 22, "todo": [22, 129, 212, 305, 326], "pictur": [22, 129, 144, 369], "ab16a": 22, "similar": [22, 26, 35, 130, 143, 144, 233, 316, 324, 334, 361], "split": [22, 36, 127, 132, 144, 260, 444], "contigu": [22, 44, 144, 246, 277, 287, 301], "represent": [22, 34, 144, 260, 324, 326, 331, 334, 335, 368, 444], "mani": [22, 31, 35, 127, 144, 334], "domain": [22, 23, 30, 144, 157, 174, 243, 324, 450], "four": [22, 40, 136], "cross": [23, 107, 127, 145, 294], "correl": 23, "comment": 23, "front": [23, 48, 49, 58, 59, 60, 61, 62, 63, 88, 89, 132, 249, 251, 262, 386, 388, 390, 392, 394, 396, 446, 448], "top": [23, 48, 49, 58, 59, 60, 61, 62, 63, 88, 89, 132, 144, 243, 249, 251, 260, 262, 386, 388, 390, 392, 394, 396, 446, 448, 450], "left": [23, 28, 43, 44, 48, 49, 58, 59, 60, 61, 62, 63, 80, 81, 86, 88, 89, 129, 135, 137, 138, 144, 145, 184, 185, 186, 187, 209, 226, 228, 233, 243, 249, 251, 260, 262, 321, 349, 351, 361, 386, 388, 390, 392, 394, 396, 446, 448, 450, 461], "pd_l": [23, 58, 59], "ph_l": [23, 48, 58, 59, 88, 129, 209, 228, 321, 351], "pw_l": [23, 48, 58, 59, 88, 129, 209, 228, 321, 351], "_l": 23, "stand": [23, 127], "bottom": [23, 48, 49, 58, 59, 60, 61, 62, 63, 88, 89, 144, 249, 251, 262, 386, 388, 390, 392, 394, 396, 446, 448], "pd_r": [23, 58, 59], "ph_r": [23, 58, 59, 209, 228, 321, 351], "pw_r": [23, 58, 59, 209, 228, 321, 351], "_r": 23, "broken": 23, "exposit": 23, "realiti": 23, "geq": [23, 28, 135, 316], "sum_": [23, 38, 44, 58, 84, 86, 111], "lfloor": [23, 58, 135], "rfloor": [23, 58, 135], "oc_g": [23, 58], "ic_g": [23, 58], "5d": [23, 41, 144, 157, 174, 243, 450], "depthwis": [23, 243, 266, 450], "dkh": [23, 58], "dkw": [23, 58], "fraction": 23, "swap": [23, 260, 444], "put": [23, 206, 207, 261, 299, 317, 318], "determin": [23, 31, 37, 160, 162, 226, 350], "diffbia": [23, 38, 136], "dnnl_arg_diff_weight": [23, 38, 130, 206, 207, 210, 238, 266, 317, 318, 323], "dnnl_arg_diff_bia": [23, 38, 136, 206, 207, 210, 233, 238, 266, 317, 318, 323, 361], "f64": [23, 26, 41, 172], "physic": [23, 41, 127, 138, 144, 157, 218, 260, 334, 444], "critic": [23, 35, 36, 38, 128, 226, 349], "shorten": [23, 38, 136], "dnnl_wio": [23, 38, 157], "dnnl_hwio": [23, 38, 157], "dnnl_dhwio": [23, 38, 157], "xe": [23, 294], "hpc": [23, 26], "entir": [23, 35, 38, 44, 98, 99, 100, 101, 102, 103, 104], "dnnl_arg_": [23, 38, 44, 261, 266, 276, 299, 300, 456, 464], "memory_index": [23, 38, 44], "dnnl_arg_attr_zero_point": [23, 44, 211, 220, 238, 243, 266, 324, 336, 458], "prevent": [23, 27, 37, 126, 266], "feasibl": 23, "deploi": 23, "done": [23, 28, 36, 44, 129, 134, 315, 316, 334, 335], "pseudo": [23, 30, 40, 128, 134, 144], "set_output_scal": 23, "eta": 23, "set_zero_point": 23, "shift_src": [23, 134], "shift_dst": [23, 134], "shift_": [23, 134], "simd": [23, 24, 26, 149, 152], "expens": [23, 36, 331, 334, 349, 444], "fast": [23, 144], "lavin": 23, "grai": 23, "often": [23, 132, 145], "rearrang": [23, 120], "fallback": 23, "platform": [23, 26, 39, 40, 132, 205, 206, 213, 294, 317, 327, 350], "condit": [23, 28, 35, 136, 170, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366], "exce": 23, "half": [23, 26, 142, 153, 161, 172], "14": [23, 37, 132, 226, 349, 350, 450], "constraint": [23, 44], "met": [23, 94, 95], "silent": [23, 25], "fall": 23, "explicit": [23, 140, 233, 260, 361], "advanc": [23, 24, 26, 39, 44, 136, 149, 152, 214, 294, 328, 336], "512": [23, 24, 26, 149, 152, 225, 347], "avx": [23, 24, 26, 149, 152, 271, 349], "boost": [23, 24, 26, 142, 149, 152], "dl": [23, 24, 26, 142, 149, 152], "3x3": [23, 226, 349], "tile": [23, 127], "weigh": 23, "against": 23, "consumpt": [23, 185, 260, 334], "grow": 23, "significantli": [23, 131, 142], "growth": 23, "rest": [23, 58], "conv1_pd": 23, "convolution_winograd": [23, 148, 386, 388, 390, 392], "conv1_src_md": [23, 204, 315], "conv1_weights_md": [23, 204, 315], "conv1_bias_md": [23, 204, 315], "conv1_dst_md": [23, 204, 315], "conv1_strid": [23, 204, 315], "conv1_padding_l": 23, "conv1_padding_r": 23, "convolution_auto": [23, 148, 226, 349, 386, 388, 390], "heurist": 23, "affin": [23, 80, 81, 127], "explor": [24, 132], "onednn_max_cpu_isa": 24, "isa": [24, 26, 31, 39, 40, 145, 149, 150, 151, 152, 238, 271, 294, 296, 349, 370], "avx2_vnni": [24, 149, 271], "avx512_cor": [24, 149, 271], "avx512bw": [24, 26], "avx512vl": 24, "avx512dq": 24, "avx512_core_vnni": [24, 149, 271], "avx512_core_bf16": [24, 149, 271], "avx512_core_fp16": [24, 149, 271], "float16": [24, 149, 152], "avx512_core_amx": [24, 149, 271], "8": [24, 26, 34, 37, 40, 42, 127, 132, 142, 149, 152, 153, 157, 161, 172, 174, 194, 202, 203, 205, 210, 243, 246, 277, 301, 312, 314, 316, 323, 349, 458], "No": [24, 26, 32, 135, 136, 150, 151, 199, 205, 206, 213, 233, 271, 306, 317, 327, 349, 361], "exclud": [24, 147, 148], "preview": [24, 149, 152], "avx2_vnni_2": [24, 149, 271], "avx512_core_amx_fp16": [24, 149, 271], "manag": [24, 25, 31, 126, 132, 145, 190, 191, 261, 299, 411], "set_max_cpu_isa": [24, 271, 296], "ed": [24, 132], "observ": [24, 127], "get_effective_cpu_isa": [24, 271, 296], "highest": [24, 35], "onednn_cpu_isa_hint": 25, "set_cpu_isa_hint": [25, 271, 296], "routin": 25, "no_hint": [25, 150, 271], "prefer_ymm": [25, 150], "ymm": [25, 150, 151], "get_cpu_isa_hint": [25, 271, 296], "pose": 25, "bypass": 25, "ieee": [26, 142], "golden": 26, "low": [26, 35, 243, 249, 251, 262, 386, 388, 390, 392, 394, 396, 446, 448, 458], "comparison": [26, 44, 214, 260, 305], "doubl": [26, 153, 185, 211, 214, 238, 324, 328], "arithmet": [26, 101, 118, 132, 214, 328], "topic": [26, 29, 260, 294, 334, 349, 350], "govern": [26, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "convert_": 26, "_dt": 26, "_zero": 26, "_point_": 26, "postops_": 26, "oscale_": 26, "wei": 26, "mix": [26, 34, 124], "downconvers": [26, 158, 159], "fenv": 26, "nearest": [26, 78, 79, 108, 124, 147, 148, 164, 165, 269], "tie": 26, "x64": [26, 132], "fesetround": 26, "denorm": 26, "flush": 26, "xmmintrin": 26, "_mm_set_flush_zero_mod": 26, "_mm_flush_zero_on": 26, "acceler": [26, 36, 43], "explain": [26, 37, 315, 316], "recogn": [26, 33, 34], "fp16": 26, "word": [26, 36, 40, 44, 157, 174, 190, 191], "valid": [26, 33, 36, 44, 48, 49, 55, 56, 58, 59, 60, 61, 62, 63, 88, 89, 132, 136, 145, 153, 156, 164, 165, 181, 185, 227, 245, 260, 285, 287, 349, 406, 442, 444], "4x": 26, "microarchitectur": 26, "uarch": [26, 132], "lp": [26, 133, 147], "previoulsi": 26, "gen12lp": 26, "hp": 26, "newer": 26, "interact": [27, 126, 256, 261, 276, 277, 286, 291], "dnnl_sycl": [27, 197, 237, 368], "seamlessli": 27, "submit": [27, 126, 237, 312, 314, 315, 335, 368, 483], "access": [27, 35, 126, 127, 142, 213, 233, 237, 260, 264, 271, 282, 287, 326, 331, 334, 335, 361, 368, 442], "uint8_t": [27, 40, 128, 185, 211, 213, 220, 238, 246, 261, 266, 277, 285, 287, 288, 289, 296, 299, 301, 324, 327, 336, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 445, 446, 447, 448, 451, 452, 453, 454, 456, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 484, 485, 486, 487], "unifi": [27, 31, 126], "sycl_interop": [27, 237, 238, 260, 276, 279, 280, 291, 296, 297, 368], "make_engin": [27, 126, 128, 299, 300], "get_devic": [27, 126, 128, 299, 300], "get_context": [27, 126, 219, 299, 300, 335], "make_stream": [27, 126, 299, 300, 301], "get_queu": [27, 237, 300, 368], "make_memori": [27, 126, 237, 299, 300, 368], "get_buff": [27, 237, 260, 300, 368], "altern": [27, 36, 126, 135], "uniform": [27, 126, 127], "host": [27, 126, 178, 179, 197, 198, 260, 280, 291, 298, 335, 368, 442], "usual": [27, 36, 37, 82, 127, 128, 132, 160, 162, 335, 368, 406], "memory_kind": [27, 126, 237, 238, 261, 276, 299, 300, 368], "could": [27, 33, 34, 126, 132, 142, 211, 270, 324, 334], "dnnl_memory_alloc": [27, 126, 203, 210, 215, 238, 260, 261, 276, 299, 300, 314, 323, 330, 442], "dnnl_memory_non": [27, 126, 238, 260, 261, 276, 299, 300, 442], "identifi": [27, 31, 126, 132, 260, 289], "get_memory_kind": [27, 126, 299, 300], "track": [27, 31, 70], "accessor": [27, 368], "event": [27, 126, 132, 238, 261, 276, 291, 298, 299, 300], "proper": [27, 36, 37, 126, 214, 324, 328, 334], "write": [27, 35, 126, 132, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 260, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 335, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 442], "i_1": 28, "ldot": [28, 37, 44], "i_k": 28, "dnnl_eltwise_ab": [28, 147, 148], "begin": [28, 45, 46, 68, 75, 82, 94, 97, 105, 130, 135, 136, 137, 199, 200, 201, 202, 204, 208, 209, 213, 217, 219, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 319, 321, 327, 332, 335, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368], "leq": [28, 105, 130, 137], "clip": [28, 55, 147, 148], "dnnl_eltwise_clip": [28, 147, 148], "clip_v2": 28, "dnnl_eltwise_clip_v2": [28, 147, 148], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [28, 147, 148], "elu": [28, 33, 69, 147, 148, 166], "dnnl_eltwise_elu": [28, 147, 148], "dnnl_eltwise_elu_use_dst_for_bwd": [28, 147, 148], "exp": [28, 33, 84, 111, 147, 166, 213], "dnnl_eltwise_exp": [28, 147, 148], "dnnl_eltwise_exp_use_dst_for_bwd": [28, 147, 148], "gelu_erf": 28, "dnnl_eltwise_gelu_erf": [28, 147, 148], "5": [28, 30, 37, 40, 72, 78, 79, 80, 81, 132, 135, 142, 144, 153, 157, 194, 203, 204, 206, 207, 210, 219, 223, 227, 231, 237, 287, 314, 317, 318, 323, 335, 343, 357, 368], "erf": [28, 72, 147, 148], "pi": 28, "gelu_tanh": 28, "dnnl_eltwise_gelu_tanh": [28, 147, 148], "044715": 28, "hardsigmoid": [28, 75, 147, 148, 166], "dnnl_eltwise_hardsigmoid": [28, 147, 148], "max": [28, 30, 35, 36, 37, 40, 55, 56, 74, 76, 87, 88, 100, 129, 133, 138, 147, 148, 164, 165, 211, 214, 246, 262, 267, 277, 301, 324, 328, 335, 368], "min": [28, 40, 55, 56, 74, 76, 90, 102, 130, 132, 133, 140, 147, 148, 164, 165, 211, 267, 324], "hardswish": [28, 33, 77, 147, 148, 166], "dnnl_eltwise_hardswish": [28, 147, 148], "dnnl_eltwise_linear": [28, 147, 148], "log": [28, 33, 84, 166, 214, 328], "dnnl_eltwise_log": [28, 147, 148], "log_": 28, "dnnl_eltwise_logist": [28, 147, 148, 270], "dnnl_eltwise_logistic_use_dst_for_bwd": [28, 147, 148], "mish": [28, 92, 147, 148, 166], "dnnl_eltwise_mish": [28, 147, 148], "omega": [28, 37, 92], "delta": [28, 92], "pow": [28, 33, 147, 148], "dnnl_eltwise_pow": [28, 147, 148], "dnnl_eltwise_relu_use_dst_for_bwd": [28, 147, 148, 252, 398], "dnnl_eltwise_round": [28, 147, 148], "soft_relu": [28, 147, 148], "dnnl_eltwise_soft_relu": [28, 147, 148], "dnnl_eltwise_sqrt": [28, 147, 148], "dnnl_eltwise_sqrt_use_dst_for_bwd": [28, 147, 148], "squar": [28, 33, 99, 115, 118, 147, 148, 166], "dnnl_eltwise_squar": [28, 147, 148], "swish": [28, 147, 148], "dnnl_eltwise_swish": [28, 147, 148], "dnnl_eltwise_tanh": [28, 147, 148, 270], "dnnl_eltwise_tanh_use_dst_for_bwd": [28, 147, 148], "134145": 28, "_relu": 28, "logsigmoid": 28, "soft": [28, 35], "eltwise_forward": [28, 204, 206, 207, 216, 217, 218, 219, 227, 237, 252, 296, 315, 317, 318, 331, 332, 334, 335, 368, 398, 456], "rather": [28, 233, 361], "Such": [28, 36, 127, 444], "satisfi": [28, 31], "tutori": [29, 44, 211, 214, 220, 305], "start": [29, 30, 33, 37, 80, 81, 94, 95, 140, 143, 144, 145, 212, 218, 219, 237, 266, 305, 331, 349, 350, 371], "aggress": 30, "onednn_experimental_bnorm_stats_one_pass": 30, "varianc": [30, 50, 51, 52, 80, 81, 176, 177, 200, 202, 222, 244, 257, 266, 308, 312, 340, 378, 380, 420, 422], "bn": 30, "rfc": 30, "spars": [30, 156, 173, 175, 184, 185, 192, 260, 444], "metadata": [30, 31], "enumer": [30, 461], "format_kind": [30, 143, 145, 184, 245, 249, 251, 255, 257, 259, 260, 263, 267, 269, 270, 442, 444], "encod": [30, 42, 175, 184, 185, 192, 212, 213, 260, 326, 327, 444], "csr": [30, 175, 192, 260, 444], "compress": [30, 35, 175, 192], "sparse_encod": [30, 184, 442, 444], "member": [30, 184], "namespac": [30, 128, 143, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 242, 261, 276, 277, 279, 291, 305, 306, 308, 310, 312, 317, 318, 319, 321, 324, 328, 331, 332, 335, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368], "m": [30, 44, 86, 132, 204, 211, 214, 220, 225, 227, 238, 246, 277, 296, 301, 324, 328, 336, 347, 350, 490], "nnz": [30, 238, 260, 444], "values_dt": 30, "indices_dt": [30, 238, 260], "pointers_dt": [30, 238, 260], "csr_md": 30, "entri": [30, 145, 184, 185, 243, 260, 264, 282, 444, 450], "csr_valu": 30, "5f": [30, 202, 213, 220, 312, 327, 336], "0f": [30, 203, 204, 205, 206, 207, 210, 212, 213, 215, 216, 219, 233, 237, 238, 314, 316, 317, 318, 323, 326, 327, 330, 331, 335, 361, 368], "csr_indic": 30, "csr_pointer": 30, "csr_mem": 30, "values_sz": 30, "indices_sz": 30, "pointers_sz": 30, "values_handl": 30, "indices_handl": 30, "pointers_handl": 30, "99": 30, "wtag": 30, "dtag": 30, "4x1000000": 30, "1000000x128": 30, "1000000": 30, "guarante": [30, 36, 119, 120, 144, 324], "sub": [31, 127, 136, 143, 144, 147, 148, 233, 260, 326, 349, 361], "ai": 31, "class": [31, 128, 140, 184, 237, 277, 280, 281, 285, 287, 288, 289, 292, 297, 301, 403, 411, 412, 456, 460, 461, 470], "bind": 31, "besid": [31, 33], "know": [31, 36, 211, 324], "connect": [31, 38, 125, 212, 233, 287, 288, 361, 406], "edg": 31, "collect": [31, 132, 145, 289, 324], "subgraph": [31, 32, 33, 34], "within": [31, 33, 40, 43, 132, 144, 147, 148, 246, 257, 258, 260, 277, 301], "cycl": [31, 324], "procedur": 31, "port": 31, "node": [31, 119, 127, 203, 210, 238, 314, 323, 350], "abstract": [31, 128, 253, 260, 288, 292, 331, 334, 335, 368, 483], "multi": [31, 47, 65, 87, 90, 93, 118, 121, 127, 292], "lifecycl": 31, "resourc": [31, 131, 280], "anymor": [31, 144], "visual": [32, 42, 58, 59, 60, 61, 62, 63, 127, 143], "benchmark": [32, 350, 370], "onednn_graph_dump": 32, "serial": 32, "de": [32, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 78, 79, 80, 81, 86, 87, 88, 89, 90, 93, 96, 98, 99, 100, 101, 102, 103, 104, 119, 120, 121, 349], "json": 32, "onednn_graph_verbos": 32, "info": [32, 132, 145, 243, 270, 349, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 450, 485, 487], "100001": 32, "100002": 32, "1313609102600373579": 32, "100003": 32, "12829238476173481280": 32, "graph": [33, 34, 42, 70, 119, 125, 194, 238, 242, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 294, 296, 405], "compon": 33, "overal": [33, 119, 144, 350], "choic": [33, 144, 149, 152], "bracket": 33, "compos": 33, "superscript": 33, "repetit": 33, "subscript": 33, "t1": [33, 233, 238, 361], "neighbor": [33, 147, 148, 269], "implicitli": [33, 34, 136, 243, 260, 450], "in1": 33, "proceed": 33, "categori": [33, 157, 174], "unari": [33, 397, 399], "clamp": [33, 56, 166], "gelu": [33, 73, 147, 148, 166], "leakyrelu": [33, 166], "sigmoid": [33, 110, 136, 148, 166], "softplu": [33, 91, 114, 166], "divid": [33, 40, 58, 59, 60, 61, 62, 63, 157, 166, 174], "reducel1": [33, 166], "reducel2": [33, 166], "reducemax": [33, 166], "reducemean": [33, 166], "reducemin": [33, 166], "reduceprod": [33, 166], "reducesum": [33, 166], "biasadd": [33, 54, 166], "batchnorminfer": [33, 50, 166], "resnext": 33, "ssd": 33, "convtranspos": [33, 166], "adversari": 33, "interpol": [33, 79, 135, 164, 165, 166, 269], "bert": 33, "dlrm": 33, "parallelwavegan": 33, "avgpool": [33, 166], "maxpool": [33, 166], "densenet": 33, "reciproc": [33, 166], "t2": 33, "convolutionbackwardweight": [33, 166], "biasaddbackward": [33, 166], "relubackward": [33, 166], "batchnormtrainingbackward": [33, 166], "strictli": 34, "symmetr": [34, 40, 66, 67, 249, 251, 262], "scheme": 34, "asymmetr": [34, 44, 64, 66, 67, 96, 243, 324, 325, 336, 337, 450], "manual": [34, 36, 40, 212], "honor": 34, "faithfulli": 34, "exact": [34, 40, 130, 136, 211, 324, 334], "elimin": 34, "typecast": [34, 107, 166], "vice": [34, 44, 86], "versa": [34, 44, 86], "clearli": 34, "scope": [35, 349], "preprocess": 35, "classifi": 35, "depict": [35, 136, 144], "conv_prim_descr": 35, "friendli": [35, 233, 316, 350, 361], "maxim": [35, 271], "accomplish": 35, "manner": [35, 260, 444], "don": [35, 44, 203, 210, 211, 233, 314, 323, 324, 361], "find": [35, 98, 99, 100, 101, 102, 143, 211, 214, 216, 237, 324, 328, 331, 368], "look": [35, 144], "source_mem_descr": 35, "dest_mem_descr": 35, "weights_mem_descr": 35, "weight_memori": 35, "conv_source_memori": 35, "user_source_memori": 35, "get_desc": [35, 199, 204, 205, 206, 207, 209, 211, 212, 213, 216, 220, 221, 224, 226, 227, 229, 233, 260, 299, 306, 315, 316, 317, 318, 321, 324, 326, 327, 331, 336, 338, 345, 349, 350, 353, 361, 442], "reorder_prim_descr": 35, "conv_weights_memori": [35, 203, 205, 206, 207, 210, 314, 316, 317, 318, 323], "conv_dest_memori": 35, "durat": 35, "grab": 35, "infus": 35, "cast": [35, 40, 107, 124, 218, 334], "distribut": [35, 132, 147, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "effici": [35, 40, 144], "fill": [35, 36, 144, 205, 213, 214, 215, 216, 220, 227, 229, 238, 327, 328, 330, 331, 336, 349, 353], "fed": [36, 142], "turn": [36, 144, 145, 334, 349], "predict": 36, "forward_train": [36, 38, 136, 145, 182, 199, 200, 209, 217, 221, 222, 223, 224, 228, 229, 232, 233, 234, 235, 306, 308, 321, 332, 338, 340, 343, 345, 351, 353, 359, 361, 362, 364, 376, 380, 390, 396, 400, 410, 418, 422, 426, 430, 434, 438, 448, 454, 469, 474, 478, 487], "suffix": [36, 334], "_train": 36, "versu": [36, 142], "_infer": 36, "answer": 36, "backward_data": [36, 182, 378, 420], "sens": [36, 157, 174, 211, 324], "backward_weight": [36, 182], "solver": 36, "practic": [36, 127, 134, 145, 227, 316, 349, 350], "consider": [36, 324], "care": 36, "pooling_max": [36, 148, 204, 206, 207, 226, 228, 315, 317, 318, 349, 351, 446, 448], "slide": 36, "posit": [36, 37, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 78, 79, 80, 81, 82, 88, 89, 144, 202, 260, 283, 312], "Of": [36, 449], "cours": [36, 144, 449], "again": [36, 136], "takeawai": 36, "former": [36, 40, 143, 144], "invoc": 36, "especi": [36, 40, 131, 145, 260, 449], "techniqu": 36, "perspect": [36, 134, 144, 334], "varieti": 36, "emit": 36, "unnecessari": [36, 127, 349], "bullet": 36, "9": [36, 37, 39, 194, 350], "pick": [36, 227, 349, 350], "occasion": 36, "enforc": 36, "brain": 36, "workflow": [36, 335, 368], "workspace_desc": [36, 129, 199, 200, 206, 207, 223, 224, 228, 233, 306, 308, 317, 318, 343, 345, 351, 361, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "perfectli": 36, "inde": 36, "fwd": 36, "forward_primitive_desc": 36, "workspace_md": [36, 184], "primitive_forward": 36, "anywher": [36, 334], "els": [36, 78, 79, 203, 206, 207, 209, 210, 211, 227, 233, 237, 314, 317, 318, 321, 323, 324, 334, 361, 368], "bwd": 36, "primitive_backward": 36, "push": [37, 212, 213], "recent": [37, 131, 142], "focus": [37, 40, 127, 324], "shrink": [37, 40, 211, 324], "throughput": [37, 127, 142], "eight": 37, "offer": [37, 142], "pack": [37, 44, 144, 220, 336, 337], "cost": [37, 233, 350, 361], "dataset": [37, 316], "establish": 37, "q_": 37, "255": [37, 40, 185, 220, 336], "r_": 37, "127": [37, 40, 134, 213, 327], "alpha_": 37, "lceil": [37, 135], "rceil": [37, 135], "w_": [37, 40, 135, 136], "b_": [37, 136, 147, 148], "31": [37, 233, 238, 361], "roundnearesteven": 37, "approx": [37, 132], "approxim": [37, 147], "t_": 37, "15": [37, 40, 132, 144], "17": [37, 132, 144, 350], "96": [37, 183, 203, 204, 206, 207, 210, 220, 221, 227, 314, 317, 318, 323, 336, 338, 350], "bigl": 37, "bigr": 37, "238": 37, "187": 37, "66": 37, "88": 37, "528": 37, "1145": 37, "1762": 37, "net": [37, 39, 203, 204, 210, 212, 213, 233, 238, 314, 315, 316, 323, 326, 327, 361], "uniformli": 37, "g_0": 37, "o_1": 37, "i_2": 37, "h_3": 37, "w_4": 37, "walk": 37, "treat": [38, 40, 134, 138, 142], "minibatch": [38, 127, 260], "flatten": 38, "dnnl_io": [38, 157], "dnnl_oi": [38, 157], "dnnl_oiw": [38, 157], "dnnl_oihw": [38, 157, 203, 210, 314, 323], "dnnl_oidhw": [38, 157], "onednn_jit_dump": 39, "dnnl_set_jit_dump": [39, 238, 271], "cpp": [39, 42, 140, 305, 315, 316, 326, 327, 331, 334, 335, 349, 350, 368], "dnnl_dump_cpu_jit_avx2_conv_fwd_kernel_f32": 39, "bin": 39, "dnnl_dump_cpu_jit_avx_gemv_t_f32_kern": 39, "30": [39, 211, 213, 214, 324, 327, 328], "disassembl": 39, "objdump": 39, "mi386": 39, "xed": 39, "ir": 39, "decod": [39, 212, 213, 326, 327], "emul": 39, "sde": 39, "dnnl_dump_gpu_simple_reord": 39, "dnnl_dump_gpu_gen9_conv_fwd": 39, "iga64": 39, "introduct": 39, "gen": [39, 211, 214, 220, 324, 328, 336], "assembli": 39, "emphas": 40, "signed": 40, "int8_t": [40, 211, 213, 220, 231, 238, 246, 277, 296, 301, 324, 327, 336, 357], "dnnl_gemm_u8s8s32": [40, 213, 238, 246], "averag": [40, 48, 129, 132, 147, 148, 262], "biggl": 40, "biggr": 40, "div": [40, 147, 148], "dnnl_gemm_s8s8s32": [40, 238, 246], "gru": [40, 147, 148, 157, 174, 270, 407, 408, 409, 410, 427, 428, 429, 430], "behind": [40, 144, 349], "xeon": [40, 149, 152, 342, 350], "e7": 40, "formerli": 40, "haswel": 40, "x1xx": 40, "seri": 40, "skylak": 40, "vpmaddubsw": 40, "vpmaddwd": 40, "vpaddd": 40, "s16": 40, "int16_t": 40, "c_s32": [40, 211, 324], "a_u8": [40, 211, 220, 324, 336], "b_s8": [40, 211, 220, 324, 336], "u8s8s32_compute_avx512": 40, "ab_s16": 40, "vpmaddubsw_r": 40, "saturate_to_s16": 40, "caution": 40, "snippet": 40, "u8s8s32_comput": 40, "32767": 40, "int16_min": 40, "int16_max": 40, "64770": 40, "pitfal": [40, 144], "vpmovsxbw": 40, "vpmovzxbw": 40, "2x": 40, "occur": [40, 144], "u7": 40, "s7": 40, "63": [40, 132, 213, 243, 458], "worth": [40, 324, 334, 350], "data_": 40, "set_rnn_data_qparam": [40, 213, 327, 458], "set_rnn_weights_qparam": [40, 213, 327, 458], "128": [40, 183, 185, 204, 220, 225, 226, 227, 336, 347, 349, 350], "w_max": 40, "x2xx": 40, "cascad": 40, "lake": 40, "bring": 40, "vpdpbusd": 40, "u8s8s32_compute_avx512_dl_boost": 40, "real": [40, 134, 144, 157, 211, 324], "world": [40, 211, 324], "overcom": 40, "emploi": 40, "y_": 40, "a_s8": 40, "u8s8": 40, "s8s8s32_comput": 40, "32258": 40, "solv": 40, "overview": 40, "x_s8": 40, "precomput": [40, 212, 213, 316, 327], "embed": [40, 326, 327], "rescal": 40, "insignificantli": 40, "noth": 40, "meaningless": 40, "ia": 40, "volum": [40, 119, 260], "2a": 40, "2b": 40, "2c": [40, 212, 213], "325383": 40, "070u": 40, "futur": 40, "319433": 40, "037": 40, "chapter": 40, "rodriguez": 40, "andr": 40, "et": 40, "al": 40, "white": 40, "paper": [40, 144], "2018": [40, 205, 212, 213, 233, 361], "axi": [41, 44, 54, 57, 58, 59, 61, 62, 63, 64, 66, 67, 78, 79, 80, 81, 84, 85, 96, 98, 99, 100, 101, 102, 103, 104, 111, 112, 120, 137, 138, 164, 165, 184, 185, 208, 234, 235, 238, 260, 272, 273, 319, 362, 363, 364, 365, 461, 472, 474, 476, 478], "stat_desc": [41, 238, 257, 420, 422], "layer_normalization_forward": [41, 222, 257, 296, 340, 420, 456], "_ndim": 41, "_dim": [41, 44], "dnnl_tnc": [41, 136, 157], "dnnl_tn": [41, 157], "dnnl_nt": [41, 157], "dnnl_ldnc": [41, 136, 157], "unlik": [41, 66, 82, 107, 246, 277, 301, 406], "tnc": [41, 80, 81, 174, 199, 212, 213, 222, 224, 233, 306, 326, 327, 340, 345, 361], "dnnl_ntc": [41, 136, 157], "dnnl_bac": [41, 157, 174], "ldnc": [41, 80, 81, 174, 212, 213, 326, 327], "dnnl_type": [42, 144, 147, 151, 152, 156, 157, 177, 181, 183, 185, 187, 189, 191, 192, 404], "auxiliari": [42, 145, 218, 334], "dnnl_config": 42, "dnnl_version": [42, 238, 271], "dnnl_graph_typ": [42, 160, 165, 167, 169, 171, 405, 406], "libdnnl": [42, 132], "dnnl_library_typ": [42, 143], "dylib": 42, "bindnnl": 42, "dll": 42, "dnnlroot": 42, "getting_start": [42, 305, 334], "ldnnl": 42, "resolv": [42, 213, 326], "sure": [42, 44, 86, 285], "ld_library_path": 42, "dyld_library_path": 42, "rpath": 42, "appl": [42, 342], "secur": 42, "entitl": 42, "fly": [42, 334], "xcode": 42, "codesign": 42, "plist": 42, "xml": 42, "utf": 42, "doctyp": 42, "dtd": 42, "en": 42, "www": [42, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "propertylist": 42, "dict": 42, "eha": 42, "cl": [42, 132, 219, 237, 335, 368], "microsoft": [42, 127, 143, 342], "msv": 42, "n_": 43, "local_s": [43, 203, 206, 207, 210, 223, 238, 258, 314, 317, 318, 323, 343, 432, 434], "12d": [44, 157, 174], "bs_0": 44, "bs_1": 44, "dnnl_runtime_dim_v": [44, 214, 220, 238, 260, 261, 266, 276, 299, 300, 328, 329, 336, 337, 456, 464], "wildcard": [44, 166, 260, 287], "hand": [44, 144, 157, 174, 260], "inconsist": 44, "v": [44, 137, 211, 214, 220, 227, 238, 324, 328, 336, 442], "invalid": [44, 264, 271, 282, 283], "nd": [44, 94, 95, 144], "sake": [44, 144, 334], "prod_": 44, "mathrm": 44, "mbox": [44, 130], "ax": [44, 78, 79, 86, 98, 99, 100, 101, 102, 103, 104, 130, 138, 164, 165, 260, 444], "abc": [44, 174, 225, 260, 347, 444], "bac": [44, 174], "matric": [44, 211, 214, 220, 246, 277, 301, 324, 328, 336], "subsequ": [44, 143, 144, 145, 182, 183, 233, 254, 271, 326, 327, 334, 361], "sgemm": [44, 214, 246, 296, 301, 305, 329], "ge": [45, 68, 82, 94], "argu": [45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124], "diff": [46, 75, 79, 89, 177, 184, 206, 207, 210, 211, 214, 233, 244, 249, 251, 252, 255, 257, 258, 262, 263, 266, 269, 270, 272, 273, 317, 318, 323, 324, 328, 361, 374, 378, 386, 388, 392, 394, 398, 408, 414, 416, 420, 424, 428, 432, 436, 446, 452, 461, 467, 470, 472, 476, 485], "_dst": [46, 75], "diff_d": [46, 56, 60, 63, 69, 73, 77, 81, 92, 106, 110, 112, 114, 116, 123], "rule": [47, 65, 86, 87, 90, 93, 118, 119, 121, 185], "auto_broadcast": [47, 65, 87, 90, 93, 118, 121, 164, 165], "numpi": [47, 65, 87, 90, 93, 118, 119, 121, 164, 165, 260], "source0": [47, 87, 90, 93, 121], "denom": [48, 129], "exclude_pad": [48, 49, 164, 165], "move": [48, 49, 58, 59, 60, 61, 62, 63, 88, 89, 144, 326, 327, 331, 402, 411, 442, 456, 480], "s64": [48, 49, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 78, 79, 80, 81, 84, 85, 88, 89, 96, 98, 99, 100, 101, 102, 103, 104, 111, 112, 120], "pads_begin": [48, 49, 58, 59, 60, 61, 62, 63, 88, 89, 164, 165], "auto_pad": [48, 49, 58, 59, 60, 61, 62, 63, 88, 89, 164, 165], "same_upp": [48, 49, 58, 59, 60, 61, 62, 63, 88, 89, 164, 165], "same_low": [48, 49, 58, 59, 60, 61, 62, 63, 88, 89, 164, 165], "pads_end": [48, 49, 58, 59, 60, 61, 62, 63, 88, 89, 164, 165], "count": [48, 49, 66, 67, 84, 85, 119, 120, 132, 204, 238, 243, 253, 402], "rounding_typ": [48, 88, 164, 165], "floor": [48, 59, 88, 164, 165], "data_format": [48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 78, 79, 88, 89, 94, 95, 164, 165, 406], "interpret": [48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 78, 79, 86, 88, 89, 119], "ncx": [48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 78, 79, 88, 89, 94, 95, 164, 165], "nxc": [48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 78, 79, 88, 89, 94, 95, 164, 165, 406], "srcshape": 49, "src_shape": [49, 78, 79, 164], "epsilon": [50, 51, 52, 80, 81, 164, 165, 184, 185, 214, 222, 238, 244, 257, 328, 340, 378, 380, 420, 422, 461, 463], "momentum": [50, 164, 165], "neither": [50, 52, 331, 334, 335, 368], "running_mean": 50, "running_vari": 50, "batch_mean": 50, "batch_vari": 50, "diff_gamma": [52, 81], "diff_beta": [52, 81], "di": [54, 65, 75], "_valu": 55, "descr": [55, 56, 68, 69, 74, 75, 82, 84, 85, 94, 95, 106, 110, 111, 112, 113, 114, 116, 118, 123], "use_dst": [56, 69, 106, 110, 116, 123, 164, 165], "rank": [57, 64, 66, 67, 80, 81, 86, 96, 98, 99, 100, 101, 102, 103, 104], "weights_format": [58, 59, 60, 61, 62, 63, 164, 165], "oix": [58, 59, 60, 164, 165], "fist": 58, "stretch": [58, 59, 60, 61, 62, 63], "xio": [58, 59, 60, 164, 165], "_channel": [58, 59, 60, 61, 62, 63], "_shape": [58, 59, 60, 61, 62, 63, 95], "firstli": [59, 86], "_pad": 59, "_h": 59, "_padding_h": 59, "output_pad": [59, 61, 62, 63, 164, 165], "dst_shape": [59, 78, 79, 164, 165], "weights_shap": [60, 63, 164], "vdumoulin": 61, "conv_arithmet": 61, "iox": [61, 62, 63, 164, 165], "xoi": [61, 62, 63, 164, 165], "zp": [64, 66, 67, 96, 164, 165, 211, 324], "zps_i": [64, 66, 67], "scale_i": [64, 96], "qtype": [64, 66, 67, 96, 164, 165], "per_tensor": [64, 66, 67, 96, 164, 165], "per_channel": [64, 66, 67, 94, 96, 164, 165], "scales_i": [66, 67], "channelnum": [66, 67, 98, 99, 100, 101, 102, 103, 104], "destinat": 70, "exponenti": [71, 147, 148], "sqrt2": 72, "_src": 75, "bilinear": [78, 79, 148, 164, 165, 269], "trilinear": [78, 79, 135, 148, 164, 165, 269], "coordinate_transformation_mod": [78, 79, 164, 165], "coordin": [78, 79], "resiz": [78, 79], "half_pixel": [78, 79, 164, 165], "align_corn": [78, 79, 164, 165], "x_resiz": [78, 79], "differenti": [78, 128, 143, 288], "s3": 78, "nam": 79, "begin_norm_axi": [80, 81, 164, 165], "keep_stat": [80, 164, 165], "use_affin": [80, 81, 164, 165], "modul": [80, 81, 132], "1e": [80, 81, 211, 324], "span": [80, 81], "layernorm": [81, 166], "small": [82, 127, 350], "coeffici": 82, "leakag": 82, "logarithm": [83, 147, 148], "formul": [84, 113, 114, 334], "dst_i": [84, 111, 118], "big": 84, "src_j": [84, 111], "logsoftmax": [85, 138, 147, 148, 166], "unsqueez": 86, "transpose_a": [86, 164, 165], "transpose_b": [86, 164, 165], "_0": [87, 90], "distanc": [88, 89], "avgpoolbackward": [89, 166], "ln": [91, 113, 138], "diff_": [92, 136], "3src": 92, "2src": 92, "parametr": 94, "per_channel_broadcast": [94, 164, 165], "uni": [94, 95, 145, 212, 213, 349, 350], "direction": [94, 95], "rightmost": [94, 233, 361], "shape_i": 94, "tensorflow": [95, 142, 144], "_forward": 95, "diff_slop": 95, "zp_i": 96, "infin": 97, "neq": 97, "inf": 97, "dest": 97, "l1": [98, 132], "norm": [98, 99, 133, 147, 211, 214, 324, 328], "keep_dim": [98, 99, 100, 101, 102, 103, 104, 164, 165], "shapeof": [98, 99, 100, 101, 102, 103, 104], "destina": [98, 99, 100, 101, 102, 103, 104], "l2": [99, 132, 211, 324], "root": [99, 115, 133, 147, 148], "src_2": 118, "_1_i": 118, "_2_i": 118, "source1": 118, "special_zero": [119, 164, 165], "keep": [119, 142, 144, 163, 171, 185, 206, 207, 210, 233, 315, 317, 318, 323, 350, 361], "permut": [120, 157, 174, 238, 260, 444], "substract": 121, "dnnl_ocl": [126, 178, 219, 335], "cl_device_id": [126, 128, 238, 261, 299], "cl_context": [126, 128, 219, 238, 261, 299], "cl_command_queu": [126, 219, 238, 261, 299, 335], "cl_mem": [126, 219, 238, 260, 261, 299, 334, 335, 442], "ocl_interop": [126, 128, 219, 238, 261, 279, 296, 335], "get_command_queu": [126, 219, 299, 335], "get_mem_object": [126, 219, 299, 335], "retain": 126, "destruct": [126, 444, 450, 458], "measur": [127, 145, 316], "affinit": 127, "tbb": [127, 132, 271], "intention": 127, "openmp": [127, 145, 271, 349], "nor": [127, 331, 334, 335, 368], "principl": 127, "numactl": 127, "easi": 127, "modern": 127, "socket": [127, 350], "chip": 127, "cluster": 127, "setup": [127, 132], "variant": [127, 136, 249, 251], "among": [127, 132, 287], "orient": 127, "latenc": [127, 132], "server": 127, "interleav": 127, "chanc": 127, "traffic": 127, "variat": 127, "omp_proc_bind": 127, "spread": 127, "omp_plac": 127, "omp_num_thread": [127, 350], "membind": 127, "cpunodebind": 127, "physcpubind": 127, "kmp_hw_subset": 127, "1t": 127, "costli": 128, "mitig": [128, 131, 213], "blob": [128, 184, 185, 261, 266, 299, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 445, 447, 451, 453, 456, 461, 462, 464, 466, 468, 471, 473, 475, 477, 481, 484, 486], "content": [128, 260, 442], "commit": [128, 145, 271], "hash": [128, 145, 271, 349, 488], "dnnl_version_t": [128, 238, 271, 296], "packag": [128, 143], "fetch": 128, "primitive_desc_bas": [128, 266, 296, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_cache_blob_id": [128, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_cache_blob": [128, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 445, 447, 451, 453, 456, 462, 464, 466, 468, 471, 473, 475, 477, 481, 484, 486], "cache_miss": [128, 145], "cache_hit": [128, 145], "from_cache_blob": [128, 145], "store_cache_blob_on_disk": 128, "load_cache_blob_from_disk": 128, "conv_from_cache_blob": 128, "get_engine_cache_blob_id": [128, 299], "get_engine_cache_blob": [128, 299], "ocl_engin": 128, "dnnl_pooling_avg_include_pad": [129, 147, 148, 262], "dnnl_pooling_avg_exclude_pad": [129, 147, 148, 262], "nice": 129, "restor": 129, "itself": [129, 266, 334, 460, 480], "leaki": [130, 263], "trainabl": [130, 263], "align": [130, 136, 145, 212, 213, 238, 280, 291, 334, 350], "Its": 130, "weights_md": [130, 184, 203, 225, 229, 314, 347, 353, 461], "repeat": [131, 349], "capac": [131, 238, 264, 282, 296, 297], "exceed": 131, "evict": [131, 264, 282], "hit": 131, "miss": [131, 132, 145, 164, 204, 206, 207, 212, 213, 315, 317, 318], "onednn_primitive_cache_capac": 131, "1024": [131, 134, 233, 238, 282, 361], "dnnl_set_primitive_cache_capac": [131, 238, 264], "notifi": 132, "address": [132, 144, 233, 361], "tm": [132, 305], "onednn_jit_profil": 132, "aarch64": [132, 294], "tsc": [132, 271], "dnnl_set_jit_profiling_flag": [132, 238, 271], "box": 132, "overrid": [132, 140, 271], "dnnl_set_jit_profiling_jitdumpdir": [132, 238, 271], "timelin": 132, "chart": 132, "fp": [132, 243, 254, 271], "onednn_itt_task_level": 132, "trigger": [132, 350], "master": [132, 142], "amplx": 132, "q": [132, 237, 368], "knob": 132, "shapes_alexnet": 132, "nmi": 132, "watchdog": 132, "timer": 132, "impl": [132, 140], "prb": 132, "gop": 132, "gfreq": 132, "gflop": 132, "0time": 132, "0gflop": 132, "avx512_common": [132, 350], "alexnet": [132, 203, 204, 205, 206, 207, 210, 314, 315, 316, 317, 318, 323], "conv1": [132, 204, 314, 315], "g1mb256ic3ih227oc96oh55kh11sh4ph0n": 132, "53": 132, "9726": 132, "4285": 132, "3096": 132, "81": 132, "22": 132, "5851": 132, "2389": 132, "74": 132, "conv2": [132, 204, 314, 315], "g2mb256ic96ih27oc256oh27kh5ph2n": 132, "104": 132, "696": 132, "20": [132, 211, 214, 287, 324, 328], "2195": 132, "5177": 132, "98": 132, "21": [132, 350], "9233": 132, "4775": 132, "56": 132, "conv3": [132, 204, 205, 316], "mb256ic256ih13oc384oh13kh3ph1n": 132, "68": 132, "904": 132, "5134": 132, "4441": 132, "57": 132, "18": [132, 350], "1391": 132, "3798": 132, "conv4": [132, 204], "g2mb256ic384ih13oc384oh13kh3ph1n": 132, "51": 132, "678": 132, "7397": 132, "4401": 132, "97": 132, "4623": 132, "4146": 132, "76": 132, "conv5": [132, 204], "g2mb256ic384ih13oc256oh13kh3ph1n": 132, "34": 132, "452": 132, "77148": 132, "4433": 132, "13": [132, 157, 204, 205, 209, 218, 316, 321, 334], "50435": 132, "4051": 132, "skip": [132, 260, 442], "mistrust": 132, "72": [132, 234, 362], "6726": 132, "avg": 132, "83": 132, "6142": 132, "10": [132, 142, 194, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 238, 306, 308, 310, 312, 314, 319, 321, 323, 324, 328, 332, 334, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 362, 364, 366], "interfac": [132, 140, 277, 280, 287, 291, 301, 335, 368, 483], "report": [132, 134, 243, 458], "csv": 132, "head": 132, "_jit_avx512_common_conv_fwd_kernel": 132, "300": 132, "128503": 132, "293": 132, "946143": 132, "285": 132, "549830": 132, "268": 132, "868599": 132, "256": [132, 204, 205, 212, 213, 225, 226, 238, 316, 347, 349], "715527": 132, "libgomp": 132, "func": [132, 206, 207, 210, 317, 318, 323], "0x194f0": 132, "186": 132, "604226": 132, "0x19370": 132, "82": 132, "609694": 132, "jit_avx512_co": 132, "682241": 132, "vmlinux": 132, "763433": 132, "1451": 132, "459338": 132, "outsid": [132, 277], "280": 132, "489764": 132, "434821": 132, "interv": 132, "2000": 132, "ue": 132, "2344": 132, "3131": 132, "24": [132, 144], "1246": 132, "2237": 132, "2988": 132, "5157": 132, "6731": 132, "4617": 132, "5369": 132, "4434": 132, "87": 132, "1371": 132, "4020": 132, "75": [132, 203, 204, 206, 207, 210, 314, 317, 318, 323], "428": 132, "4522": 132, "06": 132, "7986": 132, "4037": 132, "79": 132, "64233": 132, "4508": 132, "05": 132, "99841": 132, "3828": 132, "1404": 132, "85": 132, "7318": 132, "dtlb": 132, "load": 132, "lock": 132, "4k": 132, "alias": [132, 157, 174], "fb": 132, "26": [132, 199, 224, 306, 345], "icach": 132, "micro": 132, "itlb": 132, "bad": 132, "specul": 132, "l3": 132, "dram": 132, "frequenc": 132, "clocktick": 132, "retir": 132, "cpi": 132, "rate": [132, 145], "x87": 132, "microcod": 132, "assist": 132, "jitdump": [132, 271], "perfmap": [132, 271], "jitdumpdir": [132, 271], "record": 132, "k1": [132, 204], "mb1ic32ih14oc32oh14kh3ph1n": 132, "resnet_50": 132, "res4a_branch2b": 132, "mb1ic32ih14oc32oh14kh3ph1nresnet_50": 132, "0032768": 132, "0131836": 132, "248": 132, "551": 132, "0262988": 132, "124": [132, 134], "599": 132, "woken": 132, "captur": [132, 403], "wrote": 132, "884": 132, "23102": 132, "inject": 132, "displai": [132, 145], "stdio": [132, 203, 210, 215, 314, 323, 330], "n20": 132, "lost": 132, "23k": 132, "uhh": 132, "5775500000": 132, "symbol": [132, 143], "39": 132, "33": 132, "0x000000000001d8ba": 132, "29": 132, "41": [132, 350], "31475": 132, "jit_avx2_conv_fwd_kernel_f32": 132, "49": 132, "0x000000000001d712": 132, "47": 132, "jit_avx2_convolution_fwd_t": 132, "execute_forward": 132, "exec_ctx_t": 132, "lambda": 132, "52": 132, "0x000000000001d8be": 132, "93": 132, "0x000000000001d716": 132, "0x000000000001d8c5": 132, "55": [132, 203, 204, 206, 207, 210, 227, 314, 317, 318, 323, 350], "0x000000000001d8c3": 132, "46": 132, "0x000000000001d71d": 132, "resolut": 132, "disassembli": 132, "brendan": 132, "gregg": 132, "excel": 132, "mathop": 133, "mul": [133, 147, 148, 267], "idl": 133, "ep": [133, 238, 267, 463], "kept": [134, 144, 157, 266, 460], "dnnl_arg_from": [134, 203, 204, 205, 206, 207, 210, 213, 215, 226, 238, 266, 314, 315, 316, 317, 318, 323, 327, 330, 349], "dnnl_arg_to": [134, 203, 204, 205, 206, 207, 210, 213, 215, 226, 238, 266, 314, 315, 316, 317, 318, 323, 327, 330, 349], "encount": [134, 315], "bug": [134, 168, 169], "team": 134, "dnnl_s8": [134, 153, 161, 172], "dnnl_f32": [134, 144, 153, 157, 161, 172, 203, 210, 215, 314, 323, 330], "allevi": [134, 214, 328], "dt_src": 134, "memory_format": 134, "fmt_src": 134, "dt_dst": 134, "fmt_dst": 134, "upsampl": [135, 228, 351], "downsampl": 135, "f_h": 135, "f_w": 135, "definit": [135, 136, 137, 260, 278, 280, 290, 293, 405], "ih_0": 135, "iw_0": 135, "ih_1": 135, "iw_1": 135, "nchw16c": [135, 144, 174], "_spatial": 135, "_size": 135, "unrol": 136, "srciter": 136, "dstiter": 136, "evalu": 136, "left2right": 136, "increas": [136, 142, 350], "right2left": 136, "decreas": [136, 350], "bidirectional_concat": [136, 186, 212, 213, 326, 327], "dstlayer": 136, "bidirectional_sum": [136, 186], "srclayer": 136, "h_": [136, 147, 148], "And": [136, 144, 260, 444], "short": [136, 143, 349], "attent": [136, 199, 212, 213, 266, 270, 306, 326, 327, 374, 376, 424, 426, 470], "vanilla_rnn_forward": [136, 270, 296, 456, 458, 485], "vanilla_rnn_backward": [136, 270, 296, 456], "vanilla_rnn_pd": 136, "aprop": 136, "src_layer_desc": [136, 213, 233, 238, 270, 327, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "src_iter_desc": [136, 199, 224, 233, 238, 270, 306, 345, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "weights_layer_desc": [136, 212, 213, 233, 238, 270, 326, 327, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "weights_iter_desc": [136, 199, 212, 213, 224, 233, 238, 270, 306, 326, 345, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "bias_desc": [136, 205, 206, 233, 238, 249, 251, 255, 259, 270, 316, 317, 361, 374, 376, 390, 396, 408, 410, 418, 424, 426, 428, 430, 436, 438, 440, 470, 485, 487], "dst_layer_desc": [136, 212, 213, 233, 238, 270, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "dst_iter_desc": [136, 199, 224, 233, 238, 270, 306, 345, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "a_t": [136, 213], "h_t": 136, "lstm_forward": [136, 212, 213, 224, 233, 270, 296, 326, 327, 345, 361, 436, 456], "lstm_backward": [136, 233, 270, 296, 361, 456], "lstm_pd": [136, 224, 345], "src_iter_h_desc": 136, "src_iter_c_desc": [136, 224, 233, 238, 270, 345, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "dst_iter_h_desc": 136, "dst_iter_c_desc": [136, 224, 233, 238, 270, 345, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "i_t": 136, "w_i": 136, "u_i": 136, "b_i": 136, "f_t": 136, "w_f": 136, "u_f": 136, "b_f": 136, "c_t": [136, 147, 148], "u_": 136, "o_t": 136, "w_o": 136, "u_o": 136, "b_o": 136, "weightslay": 136, "weightsit": 136, "srciterc": 136, "dstiterc": 136, "weights_peephole_desc": [136, 238, 270, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "p_i": 136, "p_f": 136, "p_o": 136, "p_": 136, "weights_peephol": 136, "desciptor": 136, "weights_projection_desc": [136, 238, 270, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "weights_project": 136, "gru_forward": [136, 270, 296, 408, 456], "gru_backward": [136, 270, 296, 456], "gru_pd": 136, "u_t": 136, "w_u": 136, "u_u": 136, "b_u": 136, "r_t": [136, 147, 148], "w_r": 136, "u_r": 136, "b_r": 136, "lbr_gru_forward": [136, 270, 296, 428, 456], "lbr_gru_backward": [136, 270, 296, 456], "lbr_gru_pd": 136, "augru_forward": [136, 199, 270, 296, 306, 374, 456], "augru_backward": [136, 270, 296, 456], "augru_pd": [136, 199, 306], "attention_desc": [136, 238, 270, 374, 376, 424, 426], "lbr_augru_forward": [136, 270, 296, 424, 456], "lbr_augru_backward": [136, 270, 296, 456], "lbr_augru_pd": 136, "diffweightslay": 136, "diffweightsit": 136, "diffweightspeephol": 136, "diffweightsproject": 136, "properli": [136, 144, 266], "diff_weights_overwrit": [136, 188], "dnnl_arg_src_lay": [136, 199, 212, 213, 224, 233, 238, 266, 306, 326, 327, 345, 361], "srclayerattent": 136, "dnnl_arg_src_layer_attent": 136, "dnnl_arg_src_it": [136, 199, 212, 213, 224, 233, 238, 266, 306, 326, 345, 361], "dnnl_arg_src_iter_c": [136, 212, 213, 224, 233, 238, 266, 326, 345, 361], "dnnl_arg_weights_lay": [136, 199, 212, 213, 224, 233, 238, 266, 306, 326, 327, 345, 361], "dnnl_arg_weights_it": [136, 199, 212, 213, 224, 233, 238, 266, 306, 326, 327, 345, 361], "weightspeephol": 136, "dnnl_arg_weights_peephol": [136, 238, 266], "weightsproject": 136, "dnnl_arg_weights_project": [136, 238, 266], "dnnl_arg_dst_lay": [136, 199, 212, 213, 224, 233, 238, 266, 306, 326, 327, 345, 361], "dnnl_arg_dst_it": [136, 199, 212, 213, 224, 233, 238, 266, 306, 326, 345, 361], "dnnl_arg_dst_iter_c": [136, 212, 213, 224, 233, 238, 266, 326, 345, 361], "dnnl_workspac": 136, "diffsrclay": 136, "dnnl_arg_diff_src_lay": [136, 233, 238, 266, 361], "diffsrclayerattent": 136, "dnnl_arg_diff_src_layer_attent": 136, "diffsrcit": 136, "dnnl_arg_diff_src_it": [136, 233, 238, 266, 361], "diffsrciterc": 136, "dnnl_arg_diff_src_iter_c": [136, 233, 238, 266, 361], "dnnl_arg_diff_weights_lay": [136, 233, 238, 266, 361], "dnnl_arg_diff_weights_it": [136, 233, 238, 266, 361], "dnnl_arg_diff_weights_peephol": [136, 238, 266], "dnnl_arg_diff_weights_project": [136, 238, 266], "diffdstlay": 136, "dnnl_arg_diff_dst_lay": [136, 233, 238, 266, 361], "diffdstit": 136, "dnnl_arg_diff_dst_it": [136, 233, 238, 266, 361], "diffdstiterc": 136, "dnnl_arg_diff_dst_iter_c": [136, 233, 238, 266, 361], "With": [136, 142, 368], "dnnl_ldgo": [136, 157], "dnnl_ldigo": [136, 157], "dnnl_ldio": [136, 157], "dnnl_ldgoi": [136, 157], "dnnl_ldoi": [136, 157], "markdown": 136, "thought": 137, "formal": 137, "group_siz": [137, 234, 238, 272, 362, 472, 474], "ug": 137, "nu": 138, "dnnl_abcd16b": [138, 157, 174], "ne": 138, "dnnl_ba": [138, 157, 174, 260], "bigger": [139, 144], "dnnl_threadpool_ifac": [140, 483], "test_thread": 140, "threadpool_t": 140, "threadpool_interop": [140, 238, 277, 279, 296], "threadpool_ifac": [140, 301], "nonblockingthreadpool": 140, "unique_ptr": 140, "tp_": 140, "num_thread": 140, "hardware_concurr": 140, "get_num_thread": [140, 483], "numthread": 140, "get_in_parallel": [140, 483], "currentthreadid": 140, "uint64_t": [140, 483], "get_flag": [140, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 483, 485, 487], "asynchron": [140, 331, 335, 349, 368, 483], "parallel_for": [140, 237, 368, 483], "fn": [140, 483], "nthr": 140, "njob": 140, "schedul": 140, "balance211": 140, "new_content_goes_her": 141, "propos": 142, "idea": [142, 144, 324], "spot": 142, "trade": 142, "site": [142, 403], "themselv": [142, 144, 334, 406], "afterward": 142, "incompat": 143, "migrat": [143, 190, 191], "mkldnn": 143, "substr": 143, "renam": 143, "macro": [143, 238], "v1": [143, 145, 211, 214, 324, 328], "mkldnn_memory_desc_t": 143, "md": [143, 144, 208, 236, 319, 334, 350, 366, 442, 444], "mkldnn_block": 143, "exec": [143, 145, 219, 237, 349, 350], "mkldnn_args_src": 143, "dnnl_block": [143, 156, 173, 260, 444], "dnnl_args_src": 143, "mkldnn_dnnl_mangl": 143, "preprocessor": 143, "mkldnn_memory_desc_init_by_tag": 143, "dnnl_memory_desc_init_by_tag": 143, "mkldnn_arch_opt_flag": 143, "dnnl_arch_opt_flag": 143, "mkldnn_build_exampl": 143, "dnnl_build_exampl": 143, "mkldnn_build_for_ci": 143, "dnnl_build_for_ci": 143, "mkldnn_build_test": 143, "dnnl_build_test": 143, "mkldnn_cpu_runtim": 143, "dnnl_cpu_runtim": 143, "mkldnn_enable_concurrent_exec": 143, "dnnl_enable_concurrent_exec": [143, 190, 191], "mkldnn_enable_jit_profil": 143, "dnnl_enable_jit_profil": 143, "mkldnn_gpu_backend": 143, "dnnl_gpu_backend": 143, "mkldnn_gpu_runtim": 143, "dnnl_gpu_runtim": 143, "mkldnn_install_mod": 143, "dnnl_install_mod": 143, "mkldnn_library_typ": 143, "mkldnn_thread": 143, "dnnl_thread": 143, "mkldnn_use_clang_sanit": 143, "dnnl_use_clang_sanit": 143, "mkldnn_verbos": 143, "dnnl_verbos": [143, 145], "mkldnn_werror": 143, "dnnl_werror": 143, "find_packag": 143, "target_link_librari": 143, "project_app": 143, "Or": 143, "inclus": 143, "add_subdirectori": 143, "dnnl_dir": 143, "include_directori": 143, "thing": [143, 334, 349], "recompil": 143, "patch": [143, 271, 488], "analyz": 144, "adjust": [144, 260, 444], "sound": 144, "facilit": 144, "articl": [144, 350], "devot": 144, "multidimension": 144, "interchang": 144, "focu": 144, "phase": [144, 243, 450], "simpler": 144, "chw": 144, "displac": 144, "jump": 144, "plane": 144, "offset_nchw": 144, "adjac": 144, "border": 144, "contrari": [144, 324, 335, 368], "pixel": [144, 218, 334], "bvlc": 144, "caff": 144, "dnnl_format_tag_t": [144, 174, 203, 210, 238, 260, 296, 314, 323, 442], "quit": [144, 214, 218, 328, 334], "offset_nhwc": 144, "hwc": 144, "wc": 144, "bmp": 144, "color": 144, "24bit": 144, "neon": 144, "interest": [144, 294, 334, 349], "outer": [144, 157], "offset_chwn": 144, "hwn": 144, "wn": 144, "dnnl_chwn": [144, 157], "artifici": 144, "disjoint": 144, "trivial": [144, 449], "tip": 144, "stride_n": [144, 218, 334], "stride_c": [144, 218, 334], "stride_h": [144, 218, 334], "stride_w": [144, 218, 334], "dnnl_dims_t": [144, 157, 185, 203, 210, 215, 238, 249, 250, 251, 260, 262, 287, 314, 323, 330, 406, 442], "dnnl_memory_desc_init_by_strid": 144, "dnnl_memory_desc_create_with_strid": [144, 238, 260], "behalf": 144, "great": 144, "fix": 144, "nchw8c": [144, 174], "guess": [144, 324], "offset_nchw8c": 144, "slice": 144, "uppercas": 144, "distinguish": 144, "8c": 144, "co": [144, 199, 200, 201, 202, 208, 209, 213, 217, 218, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 238, 246, 277, 296, 301, 306, 308, 310, 312, 319, 321, 332, 334, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 362, 364, 366], "dnnl_memory_desc_create_with_tag": [144, 157, 203, 210, 215, 238, 260, 314, 323, 330], "dnnl_nchw8c": [144, 157, 174], "ptrdiff_t": 144, "inner_nblk": 144, "inner_idx": [144, 184], "1st": [144, 157, 174, 260], "0st": [144, 260], "3rd": [144, 157], "inner_blk": [144, 184], "q_stride": 144, "q_inner_nblk": 144, "q_inner_idx": 144, "q_inner_blk": 144, "dnnl_memory_desc_queri": [144, 238, 260], "dnnl_query_strid": [144, 184, 185, 260], "dnnl_query_inner_nblk": 144, "dnnl_query_inner_idx": [144, 184, 185, 260], "dnnl_query_inner_blk": [144, 184, 185, 260], "memcmp": 144, "dnnl_max_ndim": [144, 238, 250], "tail": 144, "somehow": 144, "came": 144, "div_up": 144, "price": 144, "neglig": [144, 145, 350], "d0": 144, "dnnl_memory_desc_get_s": [144, 238, 260], "phys_siz": 144, "eltwise_op": [144, 243, 450], "block_siz": 144, "c_pad": 144, "expect_stride_n": 144, "expect_stride_c": 144, "expect_stride_h": 144, "expect_stride_w": 144, "expect_stride_8c": 144, "expect_tru": 144, "get_padded_dim": [144, 444], "get_inner_nblk": [144, 444], "get_inner_idx": [144, 444], "get_inner_blk": [144, 444], "spent": [145, 324], "trace": [145, 350], "stdout": [145, 271], "onednn_verbose_timestamp": 145, "dnnl_set_verbos": [145, 238, 271], "ic16ih7oc16oh7kh5ph2n": 145, "wip": 145, "break": 145, "d0fc158e98590dfad0165e568ca466876a794597": 145, "prim_templ": 145, "memory_descriptor": 145, "problem_desc": 145, "exec_tim": 145, "f0": [145, 349, 350], "abcd8b": [145, 174, 349], "2x16x7x7": 145, "0200195": 145, "abcd8b8a": [145, 174, 349], "16x16x5x5": 145, "0251465": 145, "0180664": 145, "0229492": 145, "bia_f32": 145, "mb2_ic16oc16_ih7oh7kh5sh1dh0ph2_iw7ow7kw5sw1dw0pw2": 145, "0390625": 145, "173096": 145, "v2": [145, 211, 214, 324, 328], "1607393146348": 145, "667969": 145, "blk": 145, "58594": 145, "1607393146356": 145, "743896": 145, "63916": 145, "1607393146364": 145, "541992": 145, "35693": 145, "1607393146367": 145, "198975": 145, "71191": 145, "1607393146371": 145, "002930": 145, "93018": 145, "1607393146380": 145, "145020": 145, "75708": 145, "deped": 145, "enviro": 145, "comma": 145, "marker": 145, "millisecond": [145, 204, 350], "unix": 145, "epoch": 145, "cpu2gpu": [145, 216], "gpu2cpu": [145, 216], "tensor_nam": 145, "extra_flag": 145, "unspecifi": [145, 154, 155], "tune": [145, 350], "synchron": [145, 260, 335, 349, 368, 442], "exit": [145, 219], "wall": 145, "dnnl_alg_kind_undef": [147, 148], "dnnl_convolution_direct": [147, 148, 203, 210, 249, 314, 323], "0x1": [147, 151, 152, 165, 189], "dnnl_convolution_winograd": [147, 148, 249], "0x2": 147, "dnnl_convolution_auto": [147, 148, 249], "0x3": [147, 152], "dnnl_deconvolution_direct": [147, 148, 251], "0xa": 147, "dnnl_deconvolution_winograd": [147, 148, 251], "0xb": 147, "0x20": [147, 165], "0x100": 147, "dnnl_pooling_max": [147, 148, 203, 210, 262, 314, 323], "0x1ff": 147, "0x2ff": 147, "0x3ff": 147, "dnnl_lrn_across_channel": [147, 148, 203, 210, 258, 314, 323], "0xaff": 147, "dnnl_lrn_within_channel": [147, 148, 258], "0xbff": 147, "dnnl_vanilla_rnn": [147, 148], "0x1fff": 147, "dnnl_vanilla_lstm": [147, 148], "0x2fff": 147, "dnnl_vanilla_gru": [147, 148], "0x3fff": 147, "dnnl_lbr_gru": [147, 148], "0x4fff": 147, "dnnl_vanilla_augru": [147, 148], "0x5fff": 147, "dnnl_lbr_augru": [147, 148], "0x6fff": 147, "dnnl_binary_add": [147, 148, 245], "0x1fff0": 147, "dnnl_binary_mul": [147, 148, 245], "0x1fff1": 147, "dnnl_binary_max": [147, 148, 245], "0x1fff2": 147, "dnnl_binary_min": [147, 148, 245], "0x1fff3": 147, "dnnl_binary_div": [147, 148, 245], "0x1fff4": 147, "dnnl_binary_sub": [147, 148, 245], "0x1fff5": 147, "dnnl_binary_g": [147, 148, 245], "0x1fff6": 147, "dnnl_binary_gt": [147, 148, 245], "0x1fff7": 147, "dnnl_binary_l": [147, 148, 245], "0x1fff8": 147, "dnnl_binary_lt": [147, 148, 245], "0x1fff9": 147, "dnnl_binary_eq": [147, 148, 245], "0x1fffa": 147, "dnnl_binary_n": [147, 148, 245], "0x1fffb": 147, "dnnl_resampling_nearest": [147, 148, 269], "0x2fff0": 147, "dnnl_resampling_linear": [147, 148, 269], "0x2fff1": 147, "dnnl_reduction_max": [147, 148, 267, 463], "dnnl_reduction_min": [147, 148, 267, 463], "dnnl_reduction_sum": [147, 148, 267, 463], "dnnl_reduction_mul": [147, 148, 267, 463], "dnnl_reduction_mean": [147, 148, 267, 463], "dnnl_reduction_norm_lp_max": [147, 148, 267, 463], "dnnl_reduction_norm_lp_sum": [147, 148, 267, 463], "dnnl_reduction_norm_lp_power_p_max": [147, 148, 267, 463], "dnnl_reduction_norm_lp_power_p_sum": [147, 148, 267, 463], "dnnl_softmax_accur": [147, 148, 273], "0x30000": 147, "dnnl_softmax_log": [147, 148, 273], "hyperbol": [147, 148], "tangent": [147, 148], "cumul": [147, 350], "gaussian": 147, "modif": 147, "w_c": [147, 148], "x_t": [147, 148], "c_x": [147, 148], "u_c": [147, 148], "c_h": [147, 148], "bias": [147, 233, 361], "augru": [147, 148, 270, 305, 307, 373, 374, 375, 376, 423, 424, 425, 426, 470], "pth": 147, "deconvolution_direct": [148, 394, 396], "deconvolution_winograd": [148, 394, 396], "eltwise_elu": 148, "eltwise_squar": 148, "eltwise_ab": 148, "eltwise_sqrt": 148, "eltwise_swish": 148, "eltwise_soft_relu": 148, "eltwise_mish": 148, "eltwise_logist": [148, 485, 487], "eltwise_exp": 148, "eltwise_gelu_tanh": 148, "eltwise_gelu_erf": 148, "eltwise_log": 148, "eltwise_clip": 148, "eltwise_clip_v2": 148, "eltwise_pow": 148, "eltwise_round": 148, "eltwise_hardswish": 148, "eltwise_hardsigmoid": 148, "eltwise_relu_use_dst_for_bwd": 148, "eltwise_tanh_use_dst_for_bwd": 148, "eltwise_elu_use_dst_for_bwd": 148, "eltwise_sqrt_use_dst_for_bwd": 148, "eltwise_logistic_use_dst_for_bwd": 148, "eltwise_exp_use_dst_for_bwd": 148, "eltwise_clip_v2_use_dst_for_bwd": 148, "lrn_across_channel": [148, 204, 206, 207, 223, 317, 318, 343, 432, 434], "lrn_within_channel": [148, 432, 434], "pooling_avg_include_pad": [148, 446, 448], "pooling_avg_exclude_pad": [148, 446, 448], "vanilla_rnn": 148, "vanilla_lstm": 148, "vanilla_gru": 148, "lbr_gru": 148, "vanilla_augru": 148, "lbr_augru": 148, "binary_mul": [148, 201, 202, 310, 312], "binary_max": 148, "binary_min": 148, "binary_div": [148, 202, 312], "binary_sub": [148, 202, 312], "binary_g": 148, "binary_gt": 148, "binary_l": 148, "binary_lt": 148, "binary_eq": 148, "binary_n": 148, "resampling_nearest": [148, 467, 469], "resampling_linear": [148, 232, 359, 467, 469], "reduction_max": 148, "reduction_min": 148, "reduction_sum": [148, 230, 355], "reduction_mul": 148, "reduction_mean": 148, "reduction_norm_lp_max": 148, "reduction_norm_lp_sum": 148, "reduction_norm_lp_power_p_max": 148, "reduction_norm_lp_power_p_sum": 148, "softmax_accur": [148, 235, 364, 476, 478], "softmax_log": [148, 476, 478], "rectifi": [148, 252, 335, 368], "linar": 148, "vanilla": [148, 270, 484, 485, 486, 487], "lrb": 148, "norm_lp_max": 148, "norm_lp_sum": 148, "norm_lp_power_p_max": 148, "norm_lp_power_p_sum": 148, "isa_default": [149, 271], "dnnl_cpu_isa_default": [149, 152, 271], "dnnl_cpu_isa_sse41": [149, 152], "dnnl_cpu_isa_avx": [149, 152], "dnnl_cpu_isa_avx2": [149, 152], "dnnl_cpu_isa_avx2_vnni": [149, 152], "dnnl_cpu_isa_avx2_vnni_2": [149, 152], "dnnl_cpu_isa_avx512_cor": [149, 152], "dnnl_cpu_isa_avx512_core_vnni": [149, 152], "dnnl_cpu_isa_avx512_core_bf16": [149, 152], "dnnl_cpu_isa_avx512_core_fp16": [149, 152], "dnnl_cpu_isa_avx512_core_amx": [149, 152], "dnnl_cpu_isa_avx512_core_amx_fp16": [149, 152], "dnnl_cpu_isa_no_hint": [150, 151, 271], "dnnl_cpu_isa_prefer_ymm": [150, 151], "exclus": [150, 151, 260, 442], "0x0": [151, 152, 189], "0x7": 152, "0xf": 152, "0x1f": 152, "0x27": 152, "0x67": 152, "0xe7": 152, "0x1ef": 152, "0xfef": 152, "0x1fef": 152, "dnnl_common_typ": [153, 155, 159, 194, 196, 488], "dnnl_data_type_undef": [153, 161, 172], "dnnl_f16": [153, 161, 172], "dnnl_bf16": [153, 161, 172], "dnnl_s32": [153, 161, 172], "dnnl_u8": [153, 161, 172], "dnnl_f64": [153, 172], "dnnl_data_type_max": 153, "0x7fff": [153, 156, 181, 185], "dnnl_common": [154, 158, 195, 402, 403, 411, 480], "dnnl_any_engin": [154, 155], "dnnl_cpu": [154, 155, 210, 215, 323, 330], "dnnl_gpu": [154, 155, 215, 330], "dnnl_format_kind_undef": [156, 173, 249, 251, 255, 257, 259], "dnnl_format_kind_ani": [156, 173, 245, 249, 251, 255, 260, 263, 267, 269, 270], "dnnl_format_kind_spars": [156, 173], "dnnl_format_kind_max": 156, "dnnl_format_tag_undef": [157, 174], "dnnl_abcdef": [157, 174], "dnnl_abcdefg": [157, 174], "dnnl_abcdefgh": [157, 174], "dnnl_abcdefghi": [157, 174], "dnnl_abcdefghij": [157, 174], "dnnl_abcdefghijk": [157, 174], "dnnl_abcdefghijkl": [157, 174], "dnnl_bca": [157, 174], "dnnl_cab": [157, 174], "dnnl_cba": [157, 174], "dnnl_abdc": [157, 174], "dnnl_acbd": [157, 174], "dnnl_adbc": [157, 174], "dnnl_adcb": [157, 174], "dnnl_bacd": [157, 174], "dnnl_bcda": [157, 174], "dnnl_cdab": [157, 174], "dnnl_cdba": [157, 174], "dnnl_dcab": [157, 174], "dnnl_abdec": [157, 174], "dnnl_adecb": [157, 174], "dnnl_bcdea": [157, 174], "dnnl_cdeab": [157, 174], "dnnl_cdeba": [157, 174], "dnnl_decab": [157, 174], "dnnl_abcdf": [157, 174], "dnnl_abdefc": [157, 174], "dnnl_abdfc": [157, 174], "dnnl_acbdef": [157, 174], "dnnl_adefcb": [157, 174], "dnnl_defcab": [157, 174], "dnnl_abcdegf": [157, 174], "dnnl_abcdefhg": [157, 174], "dnnl_abcdefgih": [157, 174], "dnnl_abcdefghji": [157, 174], "dnnl_abcdefghikj": [157, 174], "dnnl_abcdefghijlk": [157, 174], "dnnl_abc16a": [157, 174], "dnnl_abc16a16b": [157, 174], "dnnl_abc32a32b": [157, 174], "dnnl_abc4a4b": [157, 174], "dnnl_abc16b": [157, 174], "dnnl_abc16b16a": [157, 174], "dnnl_abc4a": [157, 174], "dnnl_abc32b": [157, 174], "dnnl_abc4b": [157, 174], "dnnl_abc4b16a4b": [157, 174], "dnnl_abc2b8a4b": [157, 174], "dnnl_abc16b16a4b": [157, 174], "dnnl_abc16b16a2b": [157, 174], "dnnl_abc4b4a": [157, 174], "dnnl_abc8a16b2a": [157, 174], "dnnl_abc8a8b": [157, 174], "dnnl_abc8a4b": [157, 174], "dnnl_abc8b": [157, 174], "dnnl_abc8b16a2b": [157, 174], "dnnl_bac8a16b2a": [157, 174], "dnnl_abc8b8a": [157, 174], "dnnl_abcd16a": [157, 174], "dnnl_abcd8a": [157, 174], "dnnl_abcd16a16b": [157, 174], "dnnl_abcd32a": [157, 174], "dnnl_abcd32a32b": [157, 174], "dnnl_abcd16b16a": [157, 174], "dnnl_abcd16b16c": [157, 174], "dnnl_abcd16c16b": [157, 174], "dnnl_abcd4a": [157, 174], "dnnl_abcd32b": [157, 174], "dnnl_abcd4b": [157, 174], "dnnl_abcd4b16a4b": [157, 174], "dnnl_abcd16b16a4b": [157, 174], "dnnl_abcd16b16a2b": [157, 174], "dnnl_abcd4b4a": [157, 174], "dnnl_abcd4a4b": [157, 174], "dnnl_abcd2c4b2c": [157, 174], "dnnl_abcd4b8c2b": [157, 174], "dnnl_abcd4c16b4c": [157, 174], "dnnl_abcd2c8b4c": [157, 174], "dnnl_abcd16c16b4c": [157, 174], "dnnl_abcd16c16b2c": [157, 174], "dnnl_abcd4c4b": [157, 174], "dnnl_abcd4b4c": [157, 174], "dnnl_abcd8a16b2a": [157, 174], "dnnl_abcd2b8a4b": [157, 174], "dnnl_abcd8a8b": [157, 174], "dnnl_abcd8a4b": [157, 174], "dnnl_abcd8b": [157, 174], "dnnl_abcd4c8b2c": [157, 174], "dnnl_abcd8b16a2b": [157, 174], "dnnl_abcd8b16c2b": [157, 174], "dnnl_bacd8a16b2a": [157, 174], "dnnl_abcd8b8a": [157, 174], "dnnl_abcd8b8c": [157, 174], "dnnl_abcd8b4c": [157, 174], "dnnl_abcd8c16b2c": [157, 174], "dnnl_abcde8a16b2a": [157, 174], "dnnl_acbd8b16c2b": [157, 174], "dnnl_abcd8c8b": [157, 174], "dnnl_abcde16a": [157, 174], "dnnl_abcde32a": [157, 174], "dnnl_abcde16a16b": [157, 174], "dnnl_bacde8a16b2a": [157, 174], "dnnl_abcd2b4c2b": [157, 174], "dnnl_abcde4b16a4b": [157, 174], "dnnl_abcde2b8a4b": [157, 174], "dnnl_abcde16b": [157, 174], "dnnl_abcde16b16a": [157, 174], "dnnl_abcde16b16c": [157, 174], "dnnl_abcde16c16b": [157, 174], "dnnl_abcde2c8b4c": [157, 174], "dnnl_abcde4a": [157, 174], "dnnl_abcde32b": [157, 174], "dnnl_abcde4b": [157, 174], "dnnl_abcde4b4a": [157, 174], "dnnl_abcde4a4b": [157, 174], "dnnl_abcde4b4c": [157, 174], "dnnl_abcde2c4b2c": [157, 174], "dnnl_abcde4b8c2b": [157, 174], "dnnl_abcde4c16b4c": [157, 174], "dnnl_abcde16c16b4c": [157, 174], "dnnl_abcde16c16b2c": [157, 174], "dnnl_abcde4c4b": [157, 174], "dnnl_abcde8a": [157, 174], "dnnl_abcde8a8b": [157, 174], "dnnl_abcde8a4b": [157, 174], "dnnl_bacde16b16a": [157, 174], "dnnl_abcde8b": [157, 174], "dnnl_abcde8b16a2b": [157, 174], "dnnl_abcde8b16c2b": [157, 174], "dnnl_abcde4c8b2c": [157, 174], "dnnl_acbde8b16c2b": [157, 174], "dnnl_abcde8b8a": [157, 174], "dnnl_abcde32a32b": [157, 174], "dnnl_abcde8b8c": [157, 174], "dnnl_abcde8b4c": [157, 174], "dnnl_abc4a8b8a4b": [157, 174], "dnnl_abcd4a8b8a4b": [157, 174], "dnnl_abcde4a8b8a4b": [157, 174], "dnnl_bac4b8a8b4a": [157, 174], "dnnl_bacd4b8a8b4a": [157, 174], "dnnl_bacde4b8a8b4a": [157, 174], "dnnl_abcd2a8b8a2b": [157, 174], "dnnl_abcd4b8c8b4c": [157, 174], "dnnl_abcde4b8c8b4c": [157, 174], "dnnl_abcde2b8c8b2c": [157, 174], "dnnl_abcde8c16b2c": [157, 174], "dnnl_abcde8c8b": [157, 174], "dnnl_abcde2b4c2b": [157, 174], "dnnl_abcdef16b": [157, 174], "dnnl_abcdef16b16c": [157, 174], "dnnl_abcdef16c16b": [157, 174], "dnnl_abcdef4c16b4c": [157, 174], "dnnl_abcdef2c8b4c": [157, 174], "dnnl_abcdef4c8b2c": [157, 174], "dnnl_abcdef2b4c2b": [157, 174], "dnnl_abcdef4b": [157, 174], "dnnl_abcdef4c4b": [157, 174], "dnnl_abcdef4b4c": [157, 174], "dnnl_abcdef2c4b2c": [157, 174], "dnnl_abcdef4b8c2b": [157, 174], "dnnl_abcdef8b8c": [157, 174], "dnnl_abcdef8b4c": [157, 174], "dnnl_abcdef8c16b2c": [157, 174], "dnnl_abcdef4b8c8b4c": [157, 174], "dnnl_abcdef8b16c2b": [157, 174], "dnnl_acbdef8b16c2b": [157, 174], "dnnl_abcdef8c8b": [157, 174], "dnnl_abdc16b": [157, 174], "dnnl_abdc16b2c": [157, 174], "dnnl_abdc16b4c": [157, 174], "dnnl_abdc4b": [157, 174], "dnnl_abdc8b": [157, 174], "dnnl_abdec16b": [157, 174], "dnnl_abdec16b2c": [157, 174], "dnnl_abdec16b4c": [157, 174], "dnnl_abdec32b": [157, 174], "dnnl_abdec4b": [157, 174], "dnnl_abdec8b": [157, 174], "dnnl_abdefc16b": [157, 174], "dnnl_abdefc16b2c": [157, 174], "dnnl_acbdef16c16b": [157, 174], "dnnl_abdefc4b": [157, 174], "dnnl_abdefc8b": [157, 174], "dnnl_abcdef16a": [157, 174], "dnnl_abcdef32a": [157, 174], "dnnl_abedc16b": [157, 174], "dnnl_acb16a": [157, 174], "dnnl_acb16a2b": [157, 174], "dnnl_acb16a4b": [157, 174], "dnnl_acb4a": [157, 174], "dnnl_acb8a": [157, 174], "dnnl_acbd16b16c": [157, 174], "dnnl_acbd16c16b": [157, 174], "dnnl_acbde16b16c": [157, 174], "dnnl_acbde16c16b": [157, 174], "dnnl_acdb16a": [157, 174], "dnnl_acdb16a2b": [157, 174], "dnnl_acdb16a4b": [157, 174], "dnnl_acdb32a": [157, 174], "dnnl_acdb4a": [157, 174], "dnnl_acdb8a": [157, 174], "dnnl_acdeb16a": [157, 174], "dnnl_acdeb16a2b": [157, 174], "dnnl_acdeb4a": [157, 174], "dnnl_acdeb8a": [157, 174], "dnnl_adcb16a": [157, 174], "dnnl_bac16a16b": [157, 174], "dnnl_bac16b16a": [157, 174], "dnnl_bacd16a16b": [157, 174], "dnnl_bacd16b16a": [157, 174], "dnnl_acbd4c8b8c4b": [157, 174], "dnnl_acbde4c8b8c4b": [157, 174], "dnnl_acbdef4c8b8c4b": [157, 174], "dnnl_bacde16a16b": [157, 174], "dnnl_acbdef16b16c": [157, 174], "dnnl_abc16b32a": [157, 174], "dnnl_abc16b64a": [157, 174], "dnnl_abc4b32a4b": [157, 174], "dnnl_abc4b64a4b": [157, 174], "dnnl_abc8b32a2b": [157, 174], "dnnl_abc8b64a2b": [157, 174], "dnnl_ab16b16a": [157, 174], "dnnl_ab16b32a": [157, 174], "dnnl_ab16b64a": [157, 174], "dnnl_ab8b16a2b": [157, 174], "dnnl_ab8b32a2b": [157, 174], "dnnl_ab8b64a2b": [157, 174], "dnnl_ab4b16a4b": [157, 174], "dnnl_ab4b32a4b": [157, 174], "dnnl_ab4b64a4b": [157, 174], "dnnl_ab16b16a4b": [157, 174], "dnnl_abcd16b32a": [157, 174], "dnnl_abcd16b64a": [157, 174], "dnnl_abcd4b32a4b": [157, 174], "dnnl_abcd4b64a4b": [157, 174], "dnnl_abcd8b32a2b": [157, 174], "dnnl_abcd8b64a2b": [157, 174], "dnnl_abcde4b32a4b": [157, 174], "dnnl_abcde4b64a4b": [157, 174], "dnnl_abcde16b16a4b": [157, 174], "dnnl_abcde16b16a2b": [157, 174], "dnnl_abcde16b32a": [157, 174], "dnnl_abcde16b64a": [157, 174], "dnnl_abcde8b32a2b": [157, 174], "dnnl_abcde8b64a2b": [157, 174], "dnnl_abcdef16c16b4c": [157, 174], "dnnl_abcdef16c16b2c": [157, 174], "dnnl_ab32a32b8a4b": [157, 174], "dnnl_ab8a4b": [157, 174], "dnnl_ab32a32b8a2b": [157, 174], "dnnl_ab8a2b": [157, 174], "dnnl_abdc32d": [157, 174], "dnnl_abdc32d4c": [157, 174], "dnnl_abdec32": [157, 174], "dnnl_abdec32e2c": [157, 174], "dnnl_abdec32e4c": [157, 174], "dnnl_abdefc16b4c": [157, 174], "dnnl_acdeb16a4b": [157, 174], "dnnl_abcd16a16b2a": [157, 174], "dnnl_abc16a16b2a": [157, 174], "dnnl_abcd16b16c2b": [157, 174], "dnnl_abcde16b16c2b": [157, 174], "dnnl_acb32a": [157, 174], "dnnl_acb32a2b": [157, 174], "dnnl_acb32a4b": [157, 174], "dnnl_acb48a": [157, 174], "dnnl_acb48a2b": [157, 174], "dnnl_acb48a4b": [157, 174], "dnnl_acb64a": [157, 174], "dnnl_acb64a2b": [157, 174], "dnnl_acb64a4b": [157, 174], "dnnl_cba2b": [157, 174], "dnnl_cba4b": [157, 174], "dnnl_abdc32b": [157, 174], "dnnl_abdc32b2c": [157, 174], "dnnl_abdc32b4c": [157, 174], "dnnl_abdc48b": [157, 174], "dnnl_abdc48b2c": [157, 174], "dnnl_abdc48b4c": [157, 174], "dnnl_abdc64b": [157, 174], "dnnl_abdc64b2c": [157, 174], "dnnl_abdc64b4c": [157, 174], "dnnl_adcb2c": [157, 174], "dnnl_adcb4c": [157, 174], "dnnl_acdb32a2b": [157, 174], "dnnl_acdb32a4b": [157, 174], "dnnl_acdb48a": [157, 174], "dnnl_acdb48a2b": [157, 174], "dnnl_acdb48a4b": [157, 174], "dnnl_acdb64a": [157, 174], "dnnl_acdb64a2b": [157, 174], "dnnl_acdb64a4b": [157, 174], "dnnl_cdba2b": [157, 174], "dnnl_cdba4b": [157, 174], "dnnl_abdec32b2c": [157, 174], "dnnl_abdec32b4c": [157, 174], "dnnl_abdec48b": [157, 174], "dnnl_abdec48b2c": [157, 174], "dnnl_abdec48b4c": [157, 174], "dnnl_abdec64b": [157, 174], "dnnl_abdec64b2c": [157, 174], "dnnl_abdec64b4c": [157, 174], "dnnl_adecb2c": [157, 174], "dnnl_adecb4c": [157, 174], "dnnl_acdeb32a": [157, 174], "dnnl_acdeb32a2b": [157, 174], "dnnl_acdeb32a4b": [157, 174], "dnnl_acdeb48a": [157, 174], "dnnl_acdeb48a2b": [157, 174], "dnnl_acdeb48a4b": [157, 174], "dnnl_acdeb64a": [157, 174], "dnnl_acdeb64a2b": [157, 174], "dnnl_acdeb64a4b": [157, 174], "dnnl_cdeba2b": [157, 174], "dnnl_cdeba4b": [157, 174], "dnnl_abdefc32b": [157, 174], "dnnl_abdefc32b2c": [157, 174], "dnnl_abdefc32b4c": [157, 174], "dnnl_abdefc48b": [157, 174], "dnnl_abdefc48b2c": [157, 174], "dnnl_abdefc48b4c": [157, 174], "dnnl_abdefc64b": [157, 174], "dnnl_abdefc64b2c": [157, 174], "dnnl_abdefc64b4c": [157, 174], "dnnl_adefcb2c": [157, 174], "dnnl_adefcb4c": [157, 174], "dnnl_ab16b32a4b": [157, 174], "dnnl_ab16b48a4b": [157, 174], "dnnl_ab16b64a4b": [157, 174], "dnnl_ab16b16a2b": [157, 174], "dnnl_ab16b32a2b": [157, 174], "dnnl_ab16b48a2b": [157, 174], "dnnl_ab16b64a2b": [157, 174], "dnnl_abc16b32a4b": [157, 174], "dnnl_abc16b48a4b": [157, 174], "dnnl_abc16b64a4b": [157, 174], "dnnl_abc16b32a2b": [157, 174], "dnnl_abc16b48a2b": [157, 174], "dnnl_abc16b64a2b": [157, 174], "dnnl_abcd16b32a4b": [157, 174], "dnnl_abcd16b48a4b": [157, 174], "dnnl_abcd16b64a4b": [157, 174], "dnnl_abcd16b32a2b": [157, 174], "dnnl_abcd16b48a2b": [157, 174], "dnnl_abcd16b64a2b": [157, 174], "dnnl_abcde16b32a4b": [157, 174], "dnnl_abcde16b48a4b": [157, 174], "dnnl_abcde16b64a4b": [157, 174], "dnnl_abcde16b32a2b": [157, 174], "dnnl_abcde16b48a2b": [157, 174], "dnnl_abcde16b64a2b": [157, 174], "dnnl_abc32a16b": [157, 174], "dnnl_abcd32a16b": [157, 174], "dnnl_abcde32a16b": [157, 174], "dnnl_ab48a16b": [157, 174], "dnnl_ab48a32b": [157, 174], "dnnl_abc40a16b": [157, 174], "dnnl_abc40a32b": [157, 174], "dnnl_abc48b16c": [157, 174], "dnnl_abc48b32c": [157, 174], "dnnl_abcd40a16b": [157, 174], "dnnl_abcd40a32b": [157, 174], "dnnl_abcd32c": [157, 174], "dnnl_abdce32c": [157, 174], "dnnl_abdce32c2": [157, 174], "dnnl_ba16a16b2a": [157, 174], "dnnl_ba16a32b2a": [157, 174], "dnnl_ba16a48b2a": [157, 174], "dnnl_ba16a64b2a": [157, 174], "dnnl_ba16a16b4a": [157, 174], "dnnl_ba16a32b4a": [157, 174], "dnnl_ba16a48b4a": [157, 174], "dnnl_ba16a64b4a": [157, 174], "dnnl_abcd8a2b": [157, 174], "dnnl_abdec16c16b2c": [157, 174], "dnnl_abdec16c16b4c": [157, 174], "dnnl_abdefc16c16b2c": [157, 174], "dnnl_acb16b16a2b": [157, 174], "dnnl_acb16b16a4b": [157, 174], "dnnl_acdb16b16a2b": [157, 174], "dnnl_acdb16b16a4b": [157, 174], "dnnl_acdeb16b16a2b": [157, 174], "dnnl_abdefc16c16b4c": [157, 174], "dnnl_acdeb16b16a4b": [157, 174], "dnnl_acb16b32a2b": [157, 174], "dnnl_acb16b32a4b": [157, 174], "dnnl_acb16b48a2b": [157, 174], "dnnl_acb16b48a4b": [157, 174], "dnnl_acb16b64a2b": [157, 174], "dnnl_acb16b64a4b": [157, 174], "dnnl_abdc16c16b2c": [157, 174], "dnnl_abdc16c16b4c": [157, 174], "dnnl_abdc16c32b2c": [157, 174], "dnnl_abdc16c32b4c": [157, 174], "dnnl_abdc16c48b2c": [157, 174], "dnnl_abdc16c48b4c": [157, 174], "dnnl_abdc16c64b2c": [157, 174], "dnnl_abdc16c64b4c": [157, 174], "dnnl_acdb16b32a2b": [157, 174], "dnnl_acdb16b32a4b": [157, 174], "dnnl_acdb16b48a2b": [157, 174], "dnnl_acdb16b48a4b": [157, 174], "dnnl_acdb16b64a2b": [157, 174], "dnnl_acdb16b64a4b": [157, 174], "dnnl_abdec16c32b2c": [157, 174], "dnnl_abdec16c32b4c": [157, 174], "dnnl_abdec16c48b2c": [157, 174], "dnnl_abdec16c48b4c": [157, 174], "dnnl_abdec16c64b2c": [157, 174], "dnnl_abdec16c64b4c": [157, 174], "dnnl_acdeb16b32a2b": [157, 174], "dnnl_acdeb16b32a4b": [157, 174], "dnnl_acdeb16b48a2b": [157, 174], "dnnl_acdeb16b48a4b": [157, 174], "dnnl_acdeb16b64a2b": [157, 174], "dnnl_acdeb16b64a4b": [157, 174], "dnnl_abdefc16c32b2c": [157, 174], "dnnl_abdefc16c32b4c": [157, 174], "dnnl_abdefc16c48b2c": [157, 174], "dnnl_abdefc16c48b4c": [157, 174], "dnnl_abdefc16c64b2c": [157, 174], "dnnl_abdefc16c64b4c": [157, 174], "dnnl_decba16a": [157, 174], "dnnl_abc4a2b": [157, 174], "dnnl_abc8a2b": [157, 174], "dnnl_abcd8b2c": [157, 174], "dnnl_abcde4a2b": [157, 174], "dnnl_abcde8a2b": [157, 174], "dnnl_abcde40a16b": [157, 174], "dnnl_abcde40a32b": [157, 174], "dnnl_abcde8b2c": [157, 174], "dnnl_abcde4a8b8a2b": [157, 174], "dnnl_abcd4a8b8a2b": [157, 174], "dnnl_abc4a8b8a2b": [157, 174], "dnnl_abcdef4b8c8b2c": [157, 174], "dnnl_abcde4b8c8b2c": [157, 174], "dnnl_abcd4b8c8b2c": [157, 174], "dnnl_bacde4b8a8b2a": [157, 174], "dnnl_bacd4b8a8b2a": [157, 174], "dnnl_bac4b8a8b2a": [157, 174], "dnnl_acbdef4c8b8c2b": [157, 174], "dnnl_acbde4c8b8c2b": [157, 174], "dnnl_acbd4c8b8c2b": [157, 174], "dnnl_abcdef8b2c": [157, 174], "dnnl_ab32a16b": [157, 174], "dnnl_ab32a32b": [157, 174], "dnnl_ba4b8a8b2a": [157, 174], "dnnl_ba4b8a8b4a": [157, 174], "dnnl_abc32b16c": [157, 174], "dnnl_abc32b32c": [157, 174], "dnnl_acb4c8b8c2b": [157, 174], "dnnl_acb4c8b8c4b": [157, 174], "dnnl_abcd4a2b": [157, 174], "dnnl_abc2b8a16b4a": [157, 174], "dnnl_abcd2b8a16b4a": [157, 174], "dnnl_abcde2b8a16b4a": [157, 174], "dnnl_abc2a8b16a4b": [157, 174], "dnnl_abc2a8b16a2b": [157, 174], "dnnl_abc2b32a8b": [157, 174], "dnnl_abcd2a8b16a4b": [157, 174], "dnnl_abcd2a8b16a2b": [157, 174], "dnnl_acbd2c8b16c2b": [157, 174], "dnnl_abcd2b32a8b": [157, 174], "dnnl_abcd2c8b16c2b": [157, 174], "dnnl_abcde2a8b16a4b": [157, 174], "dnnl_abcde2a8b16a2b": [157, 174], "dnnl_acbde2c8b16c2b": [157, 174], "dnnl_abcde2b32a8b": [157, 174], "dnnl_abc2b8c16b2c": [157, 174], "dnnl_abcd2b8c16b2c": [157, 174], "dnnl_abcde2b8c16b2c": [157, 174], "dnnl_abcdef2b8c16b2c": [157, 174], "dnnl_bacde2b8a16b4a": [157, 174], "dnnl_bacd2b8a16b4a": [157, 174], "dnnl_bac2b8a16b4a": [157, 174], "dnnl_bacde2b8a16b2a": [157, 174], "dnnl_bacd2b8a16b2a": [157, 174], "dnnl_bac2b8a16b2a": [157, 174], "dnnl_abcde2c8b16c2b": [157, 174], "dnnl_abcdef2c8b16c2b": [157, 174], "dnnl_acbdef2c8b16c2b": [157, 174], "dnnl_abcd2b8c16b4c": [157, 174], "dnnl_abcde2b8c16b4c": [157, 174], "dnnl_ba4b8a16b2a": [157, 174], "dnnl_ba4b8a16b4a": [157, 174], "dnnl_acb4c8b16c2b": [157, 174], "dnnl_acb4c8b16c4b": [157, 174], "dnnl_ba16a16b": [157, 174], "dnnl_ba16a32b": [157, 174], "dnnl_ba16a48b": [157, 174], "dnnl_ba16a64b": [157, 174], "dnnl_acb16c2b": [157, 174], "dnnl_acb16c4b": [157, 174], "dnnl_ba16b2a": [157, 174], "dnnl_ba16b4a": [157, 174], "dnnl_abc16b16c": [157, 174], "dnnl_abc16b32c": [157, 174], "dnnl_ab16a16b": [157, 174], "dnnl_ab16a32b": [157, 174], "dnnl_abcde16a16b2a": [157, 174], "dnnl_abcdef16b16c2b": [157, 174], "dnnl_acedb16a": [157, 174], "dnnl_abdfec16b": [157, 174], "dnnl_abdec64e2c": [157, 174], "dnnl_abdec64e4c": [157, 174], "dnnl_acb16b16c": [157, 174], "dnnl_acb16b32c": [157, 174], "dnnl_acb16b48c": [157, 174], "dnnl_acb16b64c": [157, 174], "dnnl_acb16b16c2b": [157, 174], "dnnl_acb16b32c2b": [157, 174], "dnnl_acb16b48c2b": [157, 174], "dnnl_acb16b64c2b": [157, 174], "dnnl_acb16b16c4b": [157, 174], "dnnl_acb16b32c4b": [157, 174], "dnnl_acb16b48c4b": [157, 174], "dnnl_acb16b64c4b": [157, 174], "dnnl_abcd4c": [157, 174], "dnnl_abcde4c": [157, 174], "dnnl_abcdef4c": [157, 174], "dnnl_abcde32c": [157, 174], "dnnl_abcdef32c": [157, 174], "dnnl_abcd16a32b": [157, 174], "dnnl_decba8a": [157, 174], "dnnl_acdefb16b32c2b": [157, 174], "dnnl_acdefb16b32c4b": [157, 174], "dnnl_acdefb16b48c2b": [157, 174], "dnnl_acdefb16b48c4b": [157, 174], "dnnl_acdefb16b64c2b": [157, 174], "dnnl_acdefb16b64c4b": [157, 174], "dnnl_bcdea16a32b2a": [157, 174], "dnnl_bcdea16a32b4a": [157, 174], "dnnl_bcdea16a48b2a": [157, 174], "dnnl_bcdea16a48b4a": [157, 174], "dnnl_bcdea16a64b2a": [157, 174], "dnnl_bcdea16a64b4a": [157, 174], "dnnl_acdefb32c": [157, 174], "dnnl_acdefb32c2b": [157, 174], "dnnl_acdefb32c4b": [157, 174], "dnnl_acdefb48c": [157, 174], "dnnl_acdefb48c2b": [157, 174], "dnnl_acdefb48c4b": [157, 174], "dnnl_acdefb64c": [157, 174], "dnnl_acdefb64c2b": [157, 174], "dnnl_acdefb64c4b": [157, 174], "dnnl_bcdea32b": [157, 174], "dnnl_bcdea32b2a": [157, 174], "dnnl_bcdea32b4a": [157, 174], "dnnl_bcdea48b": [157, 174], "dnnl_bcdea48b2a": [157, 174], "dnnl_bcdea48b4a": [157, 174], "dnnl_bcdea64b": [157, 174], "dnnl_bcdea64b2a": [157, 174], "dnnl_bcdea64b4a": [157, 174], "dnnl_bca32b": [157, 174], "dnnl_bca32b2a": [157, 174], "dnnl_bca32b4a": [157, 174], "dnnl_bca48b": [157, 174], "dnnl_bca48b2a": [157, 174], "dnnl_bca48b4a": [157, 174], "dnnl_bca64b": [157, 174], "dnnl_bca64b2a": [157, 174], "dnnl_bca64b4a": [157, 174], "dnnl_acdb32c": [157, 174], "dnnl_acdb32c2b": [157, 174], "dnnl_acdb32c4b": [157, 174], "dnnl_acdb48c": [157, 174], "dnnl_acdb48c2b": [157, 174], "dnnl_acdb48c4b": [157, 174], "dnnl_acdb64c": [157, 174], "dnnl_acdb64c2b": [157, 174], "dnnl_acdb64c4b": [157, 174], "dnnl_bca16a16b2a": [157, 174], "dnnl_bca16a16b4a": [157, 174], "dnnl_bcda16a16b2a": [157, 174], "dnnl_bcda16a16b4a": [157, 174], "dnnl_bcdea16a16b2a": [157, 174], "dnnl_bcdea16a16b4a": [157, 174], "dnnl_acdb16b16c2b": [157, 174], "dnnl_acdb16b16c4b": [157, 174], "dnnl_acdeb16b16c2b": [157, 174], "dnnl_acdeb16b16c4b": [157, 174], "dnnl_acdefb16b16c2b": [157, 174], "dnnl_acdefb16b16c4b": [157, 174], "dnnl_bca16a32b2a": [157, 174], "dnnl_bca16a32b4a": [157, 174], "dnnl_bca16a48b2a": [157, 174], "dnnl_bca16a48b4a": [157, 174], "dnnl_bca16a64b2a": [157, 174], "dnnl_bca16a64b4a": [157, 174], "dnnl_acdb16b32c2b": [157, 174], "dnnl_acdb16b32c4b": [157, 174], "dnnl_acdb16b48c2b": [157, 174], "dnnl_acdb16b48c4b": [157, 174], "dnnl_acdb16b64c2b": [157, 174], "dnnl_acdb16b64c4b": [157, 174], "dnnl_bcda16a32b2a": [157, 174], "dnnl_bcda16a32b4a": [157, 174], "dnnl_bcda16a48b2a": [157, 174], "dnnl_bcda16a48b4a": [157, 174], "dnnl_bcda16a64b2a": [157, 174], "dnnl_bcda16a64b4a": [157, 174], "dnnl_acdeb16b32c2b": [157, 174], "dnnl_acdeb16b32c4b": [157, 174], "dnnl_acdeb16b48c2b": [157, 174], "dnnl_acdeb16b48c4b": [157, 174], "dnnl_acdeb16b64c2b": [157, 174], "dnnl_acdeb16b64c4b": [157, 174], "dnnl_bca16b": [157, 174], "dnnl_bca16b2a": [157, 174], "dnnl_bca16b4a": [157, 174], "dnnl_bcda16b": [157, 174], "dnnl_bcda16b2a": [157, 174], "dnnl_bcda16b4a": [157, 174], "dnnl_bcdea16b": [157, 174], "dnnl_bcdea16b2a": [157, 174], "dnnl_bcdea16b4a": [157, 174], "dnnl_acdb16c": [157, 174], "dnnl_acdb16c2b": [157, 174], "dnnl_acdb16c4b": [157, 174], "dnnl_acdeb16c": [157, 174], "dnnl_acdeb16c2b": [157, 174], "dnnl_acdeb16c4b": [157, 174], "dnnl_acdefb16c": [157, 174], "dnnl_acdefb16c2b": [157, 174], "dnnl_acdefb16c4b": [157, 174], "dnnl_bcda32b": [157, 174], "dnnl_bcda32b2a": [157, 174], "dnnl_bcda32b4a": [157, 174], "dnnl_bcda48b": [157, 174], "dnnl_bcda48b2a": [157, 174], "dnnl_bcda48b4a": [157, 174], "dnnl_bcda64b": [157, 174], "dnnl_bcda64b2a": [157, 174], "dnnl_bcda64b4a": [157, 174], "dnnl_acdeb32c": [157, 174], "dnnl_acdeb32c2b": [157, 174], "dnnl_acdeb32c4b": [157, 174], "dnnl_acdeb48c": [157, 174], "dnnl_acdeb48c2b": [157, 174], "dnnl_acdeb48c4b": [157, 174], "dnnl_acdeb64c": [157, 174], "dnnl_acdeb64c2b": [157, 174], "dnnl_acdeb64c4b": [157, 174], "dnnl_acb24a": [157, 174], "dnnl_acdb24a": [157, 174], "dnnl_acdeb24a": [157, 174], "dnnl_abdc24b": [157, 174], "dnnl_abdec24b": [157, 174], "dnnl_abdefc24b": [157, 174], "dnnl_abdc16d": [157, 174], "dnnl_abdec16": [157, 174], "dnnl_abdce16c": [157, 174], "dnnl_acb24a2b": [157, 174], "dnnl_acdb24a2b": [157, 174], "dnnl_acdeb24a2b": [157, 174], "dnnl_abdc24b2c": [157, 174], "dnnl_abdec24b2c": [157, 174], "dnnl_abdefc24b2c": [157, 174], "dnnl_acb8a2b": [157, 174], "dnnl_acdb8a2b": [157, 174], "dnnl_acdeb8a2b": [157, 174], "dnnl_abdc8b2c": [157, 174], "dnnl_abdec8b2c": [157, 174], "dnnl_abdefc8b2c": [157, 174], "dnnl_ab8b32a": [157, 174], "dnnl_abc8b32a": [157, 174], "dnnl_abcd8b32a": [157, 174], "dnnl_abcde8b32a": [157, 174], "dnnl_ab8b24a": [157, 174], "dnnl_abc8b24a": [157, 174], "dnnl_abcd8b24a": [157, 174], "dnnl_abcde8b24a": [157, 174], "dnnl_ab8b16a": [157, 174], "dnnl_abc8b16a": [157, 174], "dnnl_abcd8b16a": [157, 174], "dnnl_abcde8b16a": [157, 174], "dnnl_ab8b8a": [157, 174], "dnnl_ab4b8a4b": [157, 174], "dnnl_ab4b24a4b": [157, 174], "dnnl_abc4b8a4b": [157, 174], "dnnl_abc4b24a4b": [157, 174], "dnnl_abcd4b8a4b": [157, 174], "dnnl_abcd4b24a4b": [157, 174], "dnnl_abcde4b8a4b": [157, 174], "dnnl_abcde4b24a4b": [157, 174], "dnnl_ab8b24a2b": [157, 174], "dnnl_abc8b24a2b": [157, 174], "dnnl_abcd8b24a2b": [157, 174], "dnnl_abcde8b24a2b": [157, 174], "dnnl_ab8b8a2b": [157, 174], "dnnl_abc8b8a2b": [157, 174], "dnnl_abcd8b8a2b": [157, 174], "dnnl_abcde8b8a2b": [157, 174], "dnnl_format_tag_last": [157, 174], "dnnl_cn": 157, "dnnl_owi": 157, "dnnl_woi": [157, 174], "dnnl_iwo": 157, "dnnl_hwoi": [157, 174], "dnnl_ohwi": 157, "dnnl_ihwo": 157, "dnnl_iohw": 157, "dnnl_iodhw": 157, "dnnl_dhwoi": [157, 174], "dnnl_odhwi": 157, "dnnl_idhwo": 157, "dnnl_goiw": 157, "dnnl_gowi": 157, "dnnl_wigo": 157, "dnnl_goihw": 157, "dnnl_gohwi": 157, "dnnl_hwigo": 157, "dnnl_giohw": 157, "dnnl_goidhw": 157, "dnnl_godhwi": 157, "dnnl_giodhw": 157, "dnnl_dhwigo": 157, "dnnl_ldoi16o": 157, "dnnl_ldoi32o": 157, "dnnl_ldoi32o4i": 157, "dnnl_ldio32i": [157, 174], "dnnl_ldgoi16o": 157, "dnnl_ldgoi32o": 157, "dnnl_ldgoi32o2i": 157, "dnnl_ldgoi32o4i": 157, "dnnl_ldgoi64o2i": 157, "dnnl_ldgoi64o4i": 157, "dnnl_ldgio16i": [157, 174], "dnnl_ldgio32i": [157, 174], "dnnl_ldgio32i2o": [157, 174], "dnnl_ncdhw32c": [157, 174], "dnnl_ncdhw16c": [157, 174], "dnnl_ncdhw4c": [157, 174], "dnnl_nchw32c": [157, 174], "dnnl_nchw4c": [157, 174], "dnnl_ncw32c": [157, 174], "dnnl_ncw16c": [157, 174], "dnnl_ncw4c": [157, 174], "dnnl_ncw8c": [157, 174], "dnnl_ncw16n16c": [157, 174], "dnnl_ncdhw16n16c": [157, 174], "dnnl_nchw16n16c": [157, 174], "dnnl_ncw32n16c": [157, 174], "dnnl_nchw32n16c": [157, 174], "dnnl_nchw16n32c": [157, 174], "dnnl_ncdhw32n16c": [157, 174], "dnnl_ncw32n32c": [157, 174], "dnnl_nchw32n32c": [157, 174], "dnnl_ncdhw32n32c": [157, 174], "dnnl_oi16i16o": [157, 174], "dnnl_oi16i32o": [157, 174], "dnnl_oi16i64o": [157, 174], "dnnl_oi8i8o2i": [157, 174], "dnnl_oi8i16o2i": [157, 174], "dnnl_oi8i24o2i": [157, 174], "dnnl_oi8i32o2i": [157, 174], "dnnl_oi8i64o2i": [157, 174], "dnnl_oi4i8o4i": [157, 174], "dnnl_oi4i16o4i": [157, 174], "dnnl_oi4i24o4i": [157, 174], "dnnl_oi4i32o4i": [157, 174], "dnnl_oi4i64o4i": [157, 174], "dnnl_oi16i16o4i": [157, 174], "dnnl_oi8i32o": [157, 174], "dnnl_oi8i24o": [157, 174], "dnnl_oi8i16o": [157, 174], "dnnl_oi8i8o": [157, 174], "dnnl_iow16o16i": [157, 174], "dnnl_iow16i16o": [157, 174], "dnnl_oiw16i16o": [157, 174], "dnnl_oiw16i32o": [157, 174], "dnnl_oiw16i64o": [157, 174], "dnnl_oiw16o16i": [157, 174], "dnnl_oiw16o": [157, 174], "dnnl_oiw4i8o4i": [157, 174], "dnnl_oiw4i16o4i": [157, 174], "dnnl_oiw4i24o4i": [157, 174], "dnnl_oiw4i32o4i": [157, 174], "dnnl_oiw4i64o4i": [157, 174], "dnnl_oiw2i8o4i": [157, 174], "dnnl_oiw16i16o4i": [157, 174], "dnnl_oiw16i16o2i": [157, 174], "dnnl_oiw16o16i2o": [157, 174], "dnnl_oiw4i4o": [157, 174], "dnnl_oiw4o4i": [157, 174], "dnnl_oiw4o": [157, 174], "dnnl_oiw8i8o2i": [157, 174], "dnnl_oiw8i16o2i": [157, 174], "dnnl_oiw8i24o2i": [157, 174], "dnnl_oiw8i32o2i": [157, 174], "dnnl_oiw8i64o2i": [157, 174], "dnnl_oiw8i8o": [157, 174], "dnnl_oiw8o16i2o": [157, 174], "dnnl_iow8o16i2o": [157, 174], "dnnl_oiw8o8i": [157, 174], "dnnl_oiw8o4i": [157, 174], "dnnl_owi16o": [157, 174], "dnnl_owi16o2i": [157, 174], "dnnl_owi16o4i": [157, 174], "dnnl_iwo16i": [157, 174], "dnnl_iwo16i2o": [157, 174], "dnnl_iwo16i4o": [157, 174], "dnnl_owi4o": [157, 174], "dnnl_owi8o": [157, 174], "dnnl_owi8o2i": [157, 174], "dnnl_oiw8i32o": [157, 174], "dnnl_oiw8i24o": [157, 174], "dnnl_oiw8i16o": [157, 174], "dnnl_iohw16i16o": [157, 174], "dnnl_iohw16o16i": [157, 174], "dnnl_ohwi16o": [157, 174], "dnnl_ohwi16o2i": [157, 174], "dnnl_ohwi16o4i": [157, 174], "dnnl_ihwo16i": [157, 174], "dnnl_ihwo16i2o": [157, 174], "dnnl_ihwo16i4o": [157, 174], "dnnl_ohwi24o": [157, 174], "dnnl_ohwi32o": [157, 174], "dnnl_ohwi4o": [157, 174], "dnnl_ohwi8o": [157, 174], "dnnl_ohwi8o2i": [157, 174], "dnnl_oihw16i16o": [157, 174], "dnnl_oihw16i32o": [157, 174], "dnnl_oihw16i64o": [157, 174], "dnnl_oihw16o16i": [157, 174], "dnnl_oihw16o": [157, 174], "dnnl_oihw4i8o4i": [157, 174], "dnnl_oihw4i16o4i": [157, 174], "dnnl_oihw4i24o4i": [157, 174], "dnnl_oihw4i32o4i": [157, 174], "dnnl_oihw4i64o4i": [157, 174], "dnnl_oihw16i16o4i": [157, 174], "dnnl_oihw16i16o2i": [157, 174], "dnnl_oihw16o16i2o": [157, 174], "dnnl_oihw4i4o": [157, 174], "dnnl_oihw4o4i": [157, 174], "dnnl_oihw4o": [157, 174], "dnnl_oihw8i8o2i": [157, 174], "dnnl_oihw8i16o2i": [157, 174], "dnnl_oihw8i32o2i": [157, 174], "dnnl_oihw8i24o2i": [157, 174], "dnnl_oihw8i64o2i": [157, 174], "dnnl_oihw8i8o": [157, 174], "dnnl_oihw8o16i2o": [157, 174], "dnnl_oihw2i8o4i": [157, 174], "dnnl_iohw8o16i2o": [157, 174], "dnnl_oihw8o8i": [157, 174], "dnnl_oihw8o4i": [157, 174], "dnnl_owhi16o": [157, 174], "dnnl_oihw8i32o": [157, 174], "dnnl_oihw8i24o": [157, 174], "dnnl_oihw8i16o": [157, 174], "dnnl_odhwi16o": [157, 174], "dnnl_odhwi16o2i": [157, 174], "dnnl_odhwi16o4i": [157, 174], "dnnl_idhwo16i": [157, 174], "dnnl_idhwo16i2o": [157, 174], "dnnl_idhwo16i4o": [157, 174], "dnnl_odhwi4o": [157, 174], "dnnl_odhwi8o": [157, 174], "dnnl_odhwi8o2i": [157, 174], "dnnl_odwhi16o": [157, 174], "dnnl_oidhw16i16o": [157, 174], "dnnl_oidhw16i32o": [157, 174], "dnnl_oidhw16i64o": [157, 174], "dnnl_oidhw16o16i": [157, 174], "dnnl_oidhw16o": [157, 174], "dnnl_oidhw4i4o": [157, 174], "dnnl_oidhw4o4i": [157, 174], "dnnl_oidhw4o": [157, 174], "dnnl_oidhw8i8o2i": [157, 174], "dnnl_oidhw8i16o2i": [157, 174], "dnnl_oidhw8i32o2i": [157, 174], "dnnl_oidhw8i24o2i": [157, 174], "dnnl_oidhw8i64o2i": [157, 174], "dnnl_oidhw8i8o": [157, 174], "dnnl_oidhw8o16i2o": [157, 174], "dnnl_iodhw8o16i2o": [157, 174], "dnnl_oidhw4i8o4i": [157, 174], "dnnl_oidhw4i16o4i": [157, 174], "dnnl_oidhw4i24o4i": [157, 174], "dnnl_oidhw4i32o4i": [157, 174], "dnnl_oidhw4i64o4i": [157, 174], "dnnl_oidhw16i16o4i": [157, 174], "dnnl_oidhw16i16o2i": [157, 174], "dnnl_oidhw2i8o4i": [157, 174], "dnnl_oidhw8o8i": [157, 174], "dnnl_oidhw8o4i": [157, 174], "dnnl_iodhw16i16o": [157, 174], "dnnl_oidhw4o8i8o4i": [157, 174], "dnnl_iodhw16o16i": [157, 174], "dnnl_oidhw16o16i2o": [157, 174], "dnnl_oidhw8i32o": [157, 174], "dnnl_oidhw8i24o": [157, 174], "dnnl_oidhw8i16o": [157, 174], "dnnl_goiw16g": [157, 174], "dnnl_goiw8g": [157, 174], "dnnl_goiw4g": [157, 174], "dnnl_giow16o16i": [157, 174], "dnnl_giow16i16o": [157, 174], "dnnl_goiw16i16o": [157, 174], "dnnl_goiw16o16i": [157, 174], "dnnl_goiw16o": [157, 174], "dnnl_goiw4i16o4i": [157, 174], "dnnl_goiw2i8o4i": [157, 174], "dnnl_goiw16i16o4i": [157, 174], "dnnl_goiw16i16o2i": [157, 174], "dnnl_goiw16o16i2o": [157, 174], "dnnl_goiw4i4o": [157, 174], "dnnl_goiw4o4i": [157, 174], "dnnl_goiw4o": [157, 174], "dnnl_goiw8i16o2i": [157, 174], "dnnl_goiw8i8o": [157, 174], "dnnl_goiw8o16i2o": [157, 174], "dnnl_giow8o16i2o": [157, 174], "dnnl_goiw8o8i": [157, 174], "dnnl_goiw8o4i": [157, 174], "dnnl_gowi16o": [157, 174], "dnnl_gowi16o2i": [157, 174], "dnnl_gowi16o4i": [157, 174], "dnnl_giwo16i": [157, 174], "dnnl_giwo16i2o": [157, 174], "dnnl_giwo16i4o": [157, 174], "dnnl_gowi4o": [157, 174], "dnnl_gowi8o": [157, 174], "dnnl_gowi8o2i": [157, 174], "dnnl_goiw32g": [157, 174], "dnnl_goiw2i4o2i": [157, 174], "dnnl_goiw2o4i2o": [157, 174], "dnnl_goiw4i8o2i": [157, 174], "dnnl_goiw4o8i2o": [157, 174], "dnnl_goiw4i": [157, 174], "dnnl_goiw32i": [157, 174], "dnnl_giohw16i16o": [157, 174], "dnnl_giohw16o16i": [157, 174], "dnnl_gohwi16o": [157, 174], "dnnl_gohwi16o2i": [157, 174], "dnnl_gohwi16o4i": [157, 174], "dnnl_gihwo16i": [157, 174], "dnnl_gihwo16i2o": [157, 174], "dnnl_gihwo16i4o": [157, 174], "dnnl_gohwi32o": [157, 174], "dnnl_gohwi24o": [157, 174], "dnnl_gohwi24o2i": [157, 174], "dnnl_gohwi4o": [157, 174], "dnnl_gohwi8o": [157, 174], "dnnl_gohwi8o2i": [157, 174], "dnnl_goihw16g": [157, 174], "dnnl_goihw16i16o": [157, 174], "dnnl_goihw16o16i": [157, 174], "dnnl_goihw16o": [157, 174], "dnnl_goihw2i8o4i": [157, 174], "dnnl_goihw4i16o4i": [157, 174], "dnnl_goihw16i16o4i": [157, 174], "dnnl_goihw16i16o2i": [157, 174], "dnnl_goihw16o16i2o": [157, 174], "dnnl_goihw4i4o": [157, 174], "dnnl_goihw4o4i": [157, 174], "dnnl_goihw4o": [157, 174], "dnnl_goihw8g": [157, 174], "dnnl_goihw4g": [157, 174], "dnnl_goihw8i16o2i": [157, 174], "dnnl_goihw8i8o": [157, 174], "dnnl_goihw8o16i2o": [157, 174], "dnnl_giohw8o16i2o": [157, 174], "dnnl_goihw8o8i": [157, 174], "dnnl_goihw8o4i": [157, 174], "dnnl_goihw32g": [157, 174], "dnnl_gowhi16o": [157, 174], "dnnl_goihw4i": [157, 174], "dnnl_goihw32i": [157, 174], "dnnl_oiw4o8i8o4i": [157, 174], "dnnl_oihw4o8i8o4i": [157, 174], "dnnl_iow4i8o8i4o": [157, 174], "dnnl_iohw4i8o8i4o": [157, 174], "dnnl_iodhw4i8o8i4o": [157, 174], "dnnl_oihw2o8i8o2i": [157, 174], "dnnl_goiw4o8i8o4i": [157, 174], "dnnl_goihw4o8i8o4i": [157, 174], "dnnl_goidhw4o8i8o4i": [157, 174], "dnnl_giow4i8o8i4o": [157, 174], "dnnl_giohw4i8o8i4o": [157, 174], "dnnl_giodhw4i8o8i4o": [157, 174], "dnnl_goihw2o8i8o2i": [157, 174], "dnnl_goihw2i4o2i": [157, 174], "dnnl_goihw2o4i2o": [157, 174], "dnnl_goihw4i8o2i": [157, 174], "dnnl_goihw4o8i2o": [157, 174], "dnnl_giodhw16i16o": [157, 174], "dnnl_giodhw16o16i": [157, 174], "dnnl_godhwi16o": [157, 174], "dnnl_godhwi16o2i": [157, 174], "dnnl_godhwi16o4i": [157, 174], "dnnl_gidhwo16i": [157, 174], "dnnl_gidhwo16i2o": [157, 174], "dnnl_gidhwo16i4o": [157, 174], "dnnl_godhwi4o": [157, 174], "dnnl_godhwi8o": [157, 174], "dnnl_godhwi8o2i": [157, 174], "dnnl_godwhi16o": [157, 174], "dnnl_goidhw16i16o": [157, 174], "dnnl_goidhw4i16o4i": [157, 174], "dnnl_goidhw16i16o4i": [157, 174], "dnnl_goidhw2i8o4i": [157, 174], "dnnl_goidhw16i16o2i": [157, 174], "dnnl_goidhw16o16i": [157, 174], "dnnl_goidhw16o16i2o": [157, 174], "dnnl_goidhw16o": [157, 174], "dnnl_goidhw4i4o": [157, 174], "dnnl_goidhw4o4i": [157, 174], "dnnl_goidhw4o": [157, 174], "dnnl_goidhw8i16o2i": [157, 174], "dnnl_goidhw8i8o": [157, 174], "dnnl_goidhw8o16i2o": [157, 174], "dnnl_giodhw8o16i2o": [157, 174], "dnnl_goidhw8o8i": [157, 174], "dnnl_goidhw8o4i": [157, 174], "dnnl_goidhw16g": [157, 174], "dnnl_goidhw32g": [157, 174], "dnnl_goidhw2i4o2i": [157, 174], "dnnl_goidhw4i8o2i": [157, 174], "dnnl_goidhw2o4i2o": [157, 174], "dnnl_goidhw4o8i2o": [157, 174], "dnnl_goidhw4i": [157, 174], "dnnl_goidhw32i": [157, 174], "dnnl_owi24o": [157, 174], "dnnl_owi24o2i": [157, 174], "dnnl_owi32o": [157, 174], "dnnl_owi32o2i": [157, 174], "dnnl_owi32o4i": [157, 174], "dnnl_owi48o": [157, 174], "dnnl_owi48o2i": [157, 174], "dnnl_owi48o4i": [157, 174], "dnnl_owi64o": [157, 174], "dnnl_owi64o2i": [157, 174], "dnnl_owi64o4i": [157, 174], "dnnl_iwo32i": [157, 174], "dnnl_iwo32i2o": [157, 174], "dnnl_iwo32i4o": [157, 174], "dnnl_iwo48i": [157, 174], "dnnl_iwo48i2o": [157, 174], "dnnl_iwo48i4o": [157, 174], "dnnl_iwo64i": [157, 174], "dnnl_iwo64i2o": [157, 174], "dnnl_iwo64i4o": [157, 174], "dnnl_wio2i": [157, 174], "dnnl_wio4i": [157, 174], "dnnl_gowi24o": [157, 174], "dnnl_gowi24o2i": [157, 174], "dnnl_gowi32o": [157, 174], "dnnl_gowi32o2i": [157, 174], "dnnl_gowi32o4i": [157, 174], "dnnl_gowi48o": [157, 174], "dnnl_gowi48o2i": [157, 174], "dnnl_gowi48o4i": [157, 174], "dnnl_gowi64o": [157, 174], "dnnl_gowi64o2i": [157, 174], "dnnl_gowi64o4i": [157, 174], "dnnl_giwo32i": [157, 174], "dnnl_giwo32i2o": [157, 174], "dnnl_giwo32i4o": [157, 174], "dnnl_giwo48i": [157, 174], "dnnl_giwo48i2o": [157, 174], "dnnl_giwo48i4o": [157, 174], "dnnl_giwo64i": [157, 174], "dnnl_giwo64i2o": [157, 174], "dnnl_giwo64i4o": [157, 174], "dnnl_gwio": [157, 174], "dnnl_gwio2i": [157, 174], "dnnl_gwio4i": [157, 174], "dnnl_ohwi24o2i": [157, 174], "dnnl_ohwi32o2i": [157, 174], "dnnl_ohwi32o4i": [157, 174], "dnnl_ohwi48o": [157, 174], "dnnl_ohwi48o2i": [157, 174], "dnnl_ohwi48o4i": [157, 174], "dnnl_ohwi64o": [157, 174], "dnnl_ohwi64o2i": [157, 174], "dnnl_ohwi64o4i": [157, 174], "dnnl_ihwo32i": [157, 174], "dnnl_ihwo32i2o": [157, 174], "dnnl_ihwo32i4o": [157, 174], "dnnl_ihwo48i": [157, 174], "dnnl_ihwo48i2o": [157, 174], "dnnl_ihwo48i4o": [157, 174], "dnnl_ihwo64i": [157, 174], "dnnl_ihwo64i2o": [157, 174], "dnnl_ihwo64i4o": [157, 174], "dnnl_hwio2i": [157, 174], "dnnl_hwio4i": [157, 174], "dnnl_gohwi32o2i": [157, 174], "dnnl_gohwi32o4i": [157, 174], "dnnl_gohwi48o": [157, 174], "dnnl_gohwi48o2i": [157, 174], "dnnl_gohwi48o4i": [157, 174], "dnnl_gohwi64o": [157, 174], "dnnl_gohwi64o2i": [157, 174], "dnnl_gohwi64o4i": [157, 174], "dnnl_gihwo32i": [157, 174], "dnnl_gihwo32i2o": [157, 174], "dnnl_gihwo32i4o": [157, 174], "dnnl_gihwo48i": [157, 174], "dnnl_gihwo48i2o": [157, 174], "dnnl_gihwo48i4o": [157, 174], "dnnl_gihwo64i": [157, 174], "dnnl_gihwo64i2o": [157, 174], "dnnl_gihwo64i4o": [157, 174], "dnnl_ghwio": [157, 174], "dnnl_ghwio2i": [157, 174], "dnnl_ghwio4i": [157, 174], "dnnl_odhwi24o": [157, 174], "dnnl_odhwi24o2i": [157, 174], "dnnl_odhwi32o": [157, 174], "dnnl_odhwi32o2i": [157, 174], "dnnl_odhwi32o4i": [157, 174], "dnnl_odhwi48o": [157, 174], "dnnl_odhwi48o2i": [157, 174], "dnnl_odhwi48o4i": [157, 174], "dnnl_odhwi64o": [157, 174], "dnnl_odhwi64o2i": [157, 174], "dnnl_odhwi64o4i": [157, 174], "dnnl_idhwo32i": [157, 174], "dnnl_idhwo32i2o": [157, 174], "dnnl_idhwo32i4o": [157, 174], "dnnl_idhwo48i": [157, 174], "dnnl_idhwo48i2o": [157, 174], "dnnl_idhwo48i4o": [157, 174], "dnnl_idhwo64i": [157, 174], "dnnl_idhwo64i2o": [157, 174], "dnnl_idhwo64i4o": [157, 174], "dnnl_dhwio2i": [157, 174], "dnnl_dhwio4i": [157, 174], "dnnl_godhwi24o": [157, 174], "dnnl_godhwi24o2i": [157, 174], "dnnl_godhwi32o": [157, 174], "dnnl_godhwi32o2i": [157, 174], "dnnl_godhwi32o4i": [157, 174], "dnnl_godhwi48o": [157, 174], "dnnl_godhwi48o2i": [157, 174], "dnnl_godhwi48o4i": [157, 174], "dnnl_godhwi64o": [157, 174], "dnnl_godhwi64o2i": [157, 174], "dnnl_godhwi64o4i": [157, 174], "dnnl_gidhwo32i": [157, 174], "dnnl_gidhwo32i2o": [157, 174], "dnnl_gidhwo32i4o": [157, 174], "dnnl_gidhwo48i": [157, 174], "dnnl_gidhwo48i2o": [157, 174], "dnnl_gidhwo48i4o": [157, 174], "dnnl_gidhwo64i": [157, 174], "dnnl_gidhwo64i2o": [157, 174], "dnnl_gidhwo64i4o": [157, 174], "dnnl_gdhwio": [157, 174], "dnnl_gdhwio2i": [157, 174], "dnnl_gdhwio4i": [157, 174], "dnnl_oi16i32o4i": [157, 174], "dnnl_oi16i48o4i": [157, 174], "dnnl_oi16i64o4i": [157, 174], "dnnl_oi16i16o2i": [157, 174], "dnnl_oi16i32o2i": [157, 174], "dnnl_oi16i48o2i": [157, 174], "dnnl_oi16i64o2i": [157, 174], "dnnl_oiw16i32o4i": [157, 174], "dnnl_oiw16i48o4i": [157, 174], "dnnl_oiw16i64o4i": [157, 174], "dnnl_oiw16i32o2i": [157, 174], "dnnl_oiw16i48o2i": [157, 174], "dnnl_oiw16i64o2i": [157, 174], "dnnl_oihw16i32o4i": [157, 174], "dnnl_oihw16i48o4i": [157, 174], "dnnl_oihw16i64o4i": [157, 174], "dnnl_oihw16i32o2i": [157, 174], "dnnl_oihw16i48o2i": [157, 174], "dnnl_oihw16i64o2i": [157, 174], "dnnl_oidhw16i32o4i": [157, 174], "dnnl_oidhw16i48o4i": [157, 174], "dnnl_oidhw16i64o4i": [157, 174], "dnnl_oidhw16i32o2i": [157, 174], "dnnl_oidhw16i48o2i": [157, 174], "dnnl_oidhw16i64o2i": [157, 174], "dnnl_owi16i16o2i": [157, 174], "dnnl_owi16i16o4i": [157, 174], "dnnl_ohwi16i16o2i": [157, 174], "dnnl_ohwi16i16o4i": [157, 174], "dnnl_odhwi16i16o2i": [157, 174], "dnnl_odhwi16i16o4i": [157, 174], "dnnl_iwo16o16i2o": [157, 174], "dnnl_iwo16o16i4o": [157, 174], "dnnl_ihwo16o16i2o": [157, 174], "dnnl_ihwo16o16i4o": [157, 174], "dnnl_idhwo16o16i2o": [157, 174], "dnnl_idhwo16o16i4o": [157, 174], "dnnl_gowi16i16o2i": [157, 174], "dnnl_gowi16i16o4i": [157, 174], "dnnl_gohwi16i16o2i": [157, 174], "dnnl_gohwi16i16o4i": [157, 174], "dnnl_godhwi16i16o2i": [157, 174], "dnnl_godhwi16i16o4i": [157, 174], "dnnl_giwo16o16i2o": [157, 174], "dnnl_giwo16o16i4o": [157, 174], "dnnl_gihwo16o16i2o": [157, 174], "dnnl_gihwo16o16i4o": [157, 174], "dnnl_gidhwo16o16i2o": [157, 174], "dnnl_gidhwo16o16i4o": [157, 174], "dnnl_owi16i32o2i": [157, 174], "dnnl_owi16i32o4i": [157, 174], "dnnl_owi16i48o2i": [157, 174], "dnnl_owi16i48o4i": [157, 174], "dnnl_owi16i64o2i": [157, 174], "dnnl_owi16i64o4i": [157, 174], "dnnl_iwo16o32i2o": [157, 174], "dnnl_iwo16o32i4o": [157, 174], "dnnl_iwo16o48i2o": [157, 174], "dnnl_iwo16o48i4o": [157, 174], "dnnl_iwo16o64i2o": [157, 174], "dnnl_iwo16o64i4o": [157, 174], "dnnl_gowi16i32o2i": [157, 174], "dnnl_gowi16i32o4i": [157, 174], "dnnl_gowi16i48o2i": [157, 174], "dnnl_gowi16i48o4i": [157, 174], "dnnl_gowi16i64o2i": [157, 174], "dnnl_gowi16i64o4i": [157, 174], "dnnl_giwo16o32i2o": [157, 174], "dnnl_giwo16o32i4o": [157, 174], "dnnl_giwo16o48i2o": [157, 174], "dnnl_giwo16o48i4o": [157, 174], "dnnl_giwo16o64i2o": [157, 174], "dnnl_giwo16o64i4o": [157, 174], "dnnl_ohwi16i32o2i": [157, 174], "dnnl_ohwi16i32o4i": [157, 174], "dnnl_ohwi16i48o2i": [157, 174], "dnnl_ohwi16i48o4i": [157, 174], "dnnl_ohwi16i64o2i": [157, 174], "dnnl_ohwi16i64o4i": [157, 174], "dnnl_ihwo16o32i2o": [157, 174], "dnnl_ihwo16o32i4o": [157, 174], "dnnl_ihwo16o48i2o": [157, 174], "dnnl_ihwo16o48i4o": [157, 174], "dnnl_ihwo16o64i2o": [157, 174], "dnnl_ihwo16o64i4o": [157, 174], "dnnl_gohwi16i32o2i": [157, 174], "dnnl_gohwi16i32o4i": [157, 174], "dnnl_gohwi16i48o2i": [157, 174], "dnnl_gohwi16i48o4i": [157, 174], "dnnl_gohwi16i64o2i": [157, 174], "dnnl_gohwi16i64o4i": [157, 174], "dnnl_gihwo16o32i2o": [157, 174], "dnnl_gihwo16o32i4o": [157, 174], "dnnl_gihwo16o48i2o": [157, 174], "dnnl_gihwo16o48i4o": [157, 174], "dnnl_gihwo16o64i2o": [157, 174], "dnnl_gihwo16o64i4o": [157, 174], "dnnl_odhwi16i32o2i": [157, 174], "dnnl_odhwi16i32o4i": [157, 174], "dnnl_odhwi16i48o2i": [157, 174], "dnnl_odhwi16i48o4i": [157, 174], "dnnl_odhwi16i64o2i": [157, 174], "dnnl_odhwi16i64o4i": [157, 174], "dnnl_idhwo16o32i2o": [157, 174], "dnnl_idhwo16o32i4o": [157, 174], "dnnl_idhwo16o48i2o": [157, 174], "dnnl_idhwo16o48i4o": [157, 174], "dnnl_idhwo16o64i2o": [157, 174], "dnnl_idhwo16o64i4o": [157, 174], "dnnl_godhwi16i32o2i": [157, 174], "dnnl_godhwi16i32o4i": [157, 174], "dnnl_godhwi16i48o2i": [157, 174], "dnnl_godhwi16i48o4i": [157, 174], "dnnl_godhwi16i64o2i": [157, 174], "dnnl_godhwi16i64o4i": [157, 174], "dnnl_gidhwo16o32i2o": [157, 174], "dnnl_gidhwo16o32i4o": [157, 174], "dnnl_gidhwo16o48i2o": [157, 174], "dnnl_gidhwo16o48i4o": [157, 174], "dnnl_gidhwo16o64i2o": [157, 174], "dnnl_gidhwo16o64i4o": [157, 174], "dnnl_hwiog16g": [157, 174], "dnnl_hwiog8g": [157, 174], "dnnl_ncdhw40n16c": [157, 174], "dnnl_ncw40n16c": [157, 174], "dnnl_nchw40n16c": [157, 174], "dnnl_ncw40n32c": [157, 174], "dnnl_nchw40n32c": [157, 174], "dnnl_ncdhw40n32c": [157, 174], "dnnl_oidhw4o8i8o2i": [157, 174], "dnnl_oihw4o8i8o2i": [157, 174], "dnnl_oiw4o8i8o2i": [157, 174], "dnnl_goidhw4o8i8o2i": [157, 174], "dnnl_goihw4o8i8o2i": [157, 174], "dnnl_goiw4o8i8o2i": [157, 174], "dnnl_iodhw4i8o8i2o": [157, 174], "dnnl_iohw4i8o8i2o": [157, 174], "dnnl_iow4i8o8i2o": [157, 174], "dnnl_giodhw4i8o8i2o": [157, 174], "dnnl_giohw4i8o8i2o": [157, 174], "dnnl_giow4i8o8i2o": [157, 174], "dnnl_ncw2c32n8c": [157, 174], "dnnl_nchw2c32n8c": [157, 174], "dnnl_ncdhw2c32n8c": [157, 174], "dnnl_oiw2i8o16i4o": [157, 174], "dnnl_oihw2i8o16i4o": [157, 174], "dnnl_oidhw2i8o16i4o": [157, 174], "dnnl_oiw2o8i16o4i": [157, 174], "dnnl_oiw2o8i16o2i": [157, 174], "dnnl_iow2i8o16i4o": [157, 174], "dnnl_iow2i8o16i2o": [157, 174], "dnnl_oihw2o8i16o4i": [157, 174], "dnnl_oihw2o8i16o2i": [157, 174], "dnnl_iohw2i8o16i4o": [157, 174], "dnnl_iohw2i8o16i2o": [157, 174], "dnnl_oidhw2o8i16o4i": [157, 174], "dnnl_oidhw2o8i16o2i": [157, 174], "dnnl_iodhw2i8o16i4o": [157, 174], "dnnl_iodhw2i8o16i2o": [157, 174], "dnnl_goiw2o8i16o2i": [157, 174], "dnnl_giow2i8o16i2o": [157, 174], "dnnl_giohw2i8o16i2o": [157, 174], "dnnl_giodhw2i8o16i2o": [157, 174], "dnnl_goihw2o8i16o2i": [157, 174], "dnnl_goidhw2o8i16o2i": [157, 174], "dnnl_goiw2o8i16o4i": [157, 174], "dnnl_goihw2o8i16o4i": [157, 174], "ndhwc": [157, 174], "data_in_ncdhw": 157, "data_in_ndhwc": 157, "dnnl_memory_desc_destroi": [157, 203, 210, 215, 238, 260, 314, 323, 330], "agnost": [157, 174, 260], "aka": [157, 177, 212, 213, 334], "alia": [157, 174, 182, 183, 266, 302], "mini": [157, 174, 220, 260, 336, 406], "6d": [157, 174], "7d": [157, 174], "8d": [157, 174], "9d": [157, 174], "10d": [157, 174], "11d": [157, 174], "2nd": [157, 174], "sentinel": 157, "incl": 157, "seq_length": [157, 174], "num_lay": [157, 174], "num_direct": [157, 174], "input_channel": [157, 174], "num_gat": [157, 174], "output_channel": [157, 174], "num_channels_in_hidden_st": [157, 174], "num_channels_in_recurrent_project": [157, 174], "dnnl_fpmath_mode_strict": [158, 159, 243, 254, 271], "dnnl_fpmath_mode_bf16": [158, 159, 243, 254, 271], "dnnl_fpmath_mode_f16": [158, 159, 243, 254, 271], "dnnl_fpmath_mode_tf32": [158, 159, 243, 254, 271], "dnnl_fpmath_mode_ani": [158, 159, 243, 254, 271], "dnnl_graph_layout_type_undef": [160, 162], "dnnl_graph_layout_type_ani": [160, 162, 287], "dnnl_graph_layout_type_strid": [160, 162, 287, 406], "dnnl_graph_layout_type_opaqu": [160, 162, 406], "dnnl_graph_tensor_property_undef": [163, 171], "dnnl_graph_tensor_property_vari": [163, 171], "dnnl_graph_tensor_property_const": [163, 171], "unchang": [163, 171, 266, 460], "dnnl_graph_op_attr_undef": [164, 165], "dnnl_graph_op_attr_alpha": [164, 165], "dnnl_graph_op_attr_beta": [164, 165], "dnnl_graph_op_attr_epsilon": [164, 165], "dnnl_graph_op_attr_max": [164, 165], "dnnl_graph_op_attr_min": [164, 165], "dnnl_graph_op_attr_momentum": [164, 165], "dnnl_graph_op_attr_scal": [164, 165], "dnnl_graph_op_attr_axi": [164, 165], "dnnl_graph_op_attr_begin_norm_axi": [164, 165], "dnnl_graph_op_attr_group": [164, 165], "dnnl_graph_op_attr_ax": [164, 165], "dnnl_graph_op_attr_dil": [164, 165], "dnnl_graph_op_attr_dst_shap": [164, 165], "dnnl_graph_op_attr_kernel": [164, 165], "dnnl_graph_op_attr_ord": [164, 165], "dnnl_graph_op_attr_output_pad": [164, 165], "dnnl_graph_op_attr_pads_begin": [164, 165], "dnnl_graph_op_attr_pads_end": [164, 165], "dnnl_graph_op_attr_shap": [164, 165], "dnnl_graph_op_attr_s": [164, 165], "dnnl_graph_op_attr_src_shap": [164, 165], "dnnl_graph_op_attr_strid": [164, 165], "dnnl_graph_op_attr_weights_shap": [164, 165], "dnnl_graph_op_attr_zp": [164, 165], "dnnl_graph_op_attr_exclude_pad": [164, 165], "dnnl_graph_op_attr_keep_dim": [164, 165], "dnnl_graph_op_attr_keep_stat": [164, 165], "dnnl_graph_op_attr_per_channel_broadcast": [164, 165], "dnnl_graph_op_attr_special_zero": [164, 165], "dnnl_graph_op_attr_transpose_a": [164, 165], "dnnl_graph_op_attr_transpose_b": [164, 165], "dnnl_graph_op_attr_use_affin": [164, 165], "dnnl_graph_op_attr_use_dst": [164, 165], "dnnl_graph_op_attr_auto_broadcast": [164, 165], "dnnl_graph_op_attr_auto_pad": [164, 165], "dnnl_graph_op_attr_coordinate_transformation_mod": [164, 165], "dnnl_graph_op_attr_data_format": [164, 165, 406], "dnnl_graph_op_attr_mod": [164, 165], "dnnl_graph_op_attr_qtyp": [164, 165], "dnnl_graph_op_attr_rounding_typ": [164, 165], "dnnl_graph_op_attr_weights_format": [164, 165, 406], "illeg": 164, "weight_shap": [164, 165], "0x30": 165, "0x40": 165, "0x60": 165, "0x80": 165, "input_shap": 165, "dnnl_graph_op_ab": [166, 167], "absbackward": 166, "dnnl_graph_op_abs_backward": [166, 167], "dnnl_graph_op_add": [166, 167], "dnnl_graph_op_avg_pool": [166, 167], "dnnl_graph_op_avg_pool_backward": [166, 167], "batchnormforwardtrain": 166, "dnnl_graph_op_batch_norm_forward_train": [166, 167], "dnnl_graph_op_batch_norm_infer": [166, 167], "dnnl_graph_op_batch_norm_backward": [166, 167], "dnnl_graph_op_bias_add": [166, 167], "dnnl_graph_op_bias_add_backward": [166, 167], "dnnl_graph_op_clamp": [166, 167], "clampbackward": 166, "dnnl_graph_op_clamp_backward": [166, 167], "dnnl_graph_op_concat": [166, 167], "dnnl_graph_op_convolut": [166, 167], "convolutionbackwarddata": 166, "dnnl_graph_op_convolution_backward_data": [166, 167], "dnnl_graph_op_convolution_backward_weight": [166, 167], "dnnl_graph_op_conv_transpos": [166, 167], "convtransposebackwarddata": 166, "dnnl_graph_op_conv_transpose_backward_data": [166, 167], "convtransposebackwardweight": 166, "dnnl_graph_op_conv_transpose_backward_weight": [166, 167], "dnnl_graph_op_dequant": [166, 167], "dnnl_graph_op_divid": [166, 167], "dynamicdequant": 166, "dnnl_graph_op_dynamic_dequant": [166, 167], "dynamicquant": 166, "dnnl_graph_op_dynamic_quant": [166, 167], "dnnl_graph_op_elu": [166, 167], "elubackward": 166, "dnnl_graph_op_elu_backward": [166, 167], "dnnl_graph_op_end": [166, 167], "dnnl_graph_op_exp": [166, 167], "dnnl_graph_op_gelu": [166, 167], "gelubackward": 166, "dnnl_graph_op_gelu_backward": [166, 167], "dnnl_graph_op_hard_sigmoid": [166, 167], "hardsigmoidbackward": 166, "dnnl_graph_op_hard_sigmoid_backward": [166, 167], "dnnl_graph_op_hard_swish": [166, 167], "hardswishbackward": 166, "dnnl_graph_op_hard_swish_backward": [166, 167], "dnnl_graph_op_interpol": [166, 167], "interpolatebackward": 166, "dnnl_graph_op_interpolate_backward": [166, 167], "dnnl_graph_op_layer_norm": [166, 167], "layernormbackward": 166, "dnnl_graph_op_layer_norm_backward": [166, 167], "dnnl_graph_op_leaky_relu": [166, 167], "dnnl_graph_op_log": [166, 167], "dnnl_graph_op_log_softmax": [166, 167], "logsoftmaxbackward": 166, "dnnl_graph_op_log_softmax_backward": [166, 167], "dnnl_graph_op_matmul": [166, 167], "dnnl_graph_op_maximum": [166, 167], "dnnl_graph_op_max_pool": [166, 167], "maxpoolbackward": 166, "dnnl_graph_op_max_pool_backward": [166, 167], "dnnl_graph_op_minimum": [166, 167], "dnnl_graph_op_mish": [166, 167], "mishbackward": 166, "dnnl_graph_op_mish_backward": [166, 167], "dnnl_graph_op_multipli": [166, 167], "dnnl_graph_op_prelu": [166, 167], "prelubackward": 166, "dnnl_graph_op_prelu_backward": [166, 167], "dnnl_graph_op_quant": [166, 167], "dnnl_graph_op_reciproc": [166, 167], "dnnl_graph_op_reduce_l1": [166, 167], "dnnl_graph_op_reduce_l2": [166, 167], "dnnl_graph_op_reduce_max": [166, 167], "dnnl_graph_op_reduce_mean": [166, 167], "dnnl_graph_op_reduce_min": [166, 167], "dnnl_graph_op_reduce_prod": [166, 167], "dnnl_graph_op_reduce_sum": [166, 167], "dnnl_graph_op_relu": [166, 167], "dnnl_graph_op_relu_backward": [166, 167], "dnnl_graph_op_reord": [166, 167], "dnnl_graph_op_round": [166, 167], "dnnl_graph_op_sigmoid": [166, 167], "sigmoidbackward": 166, "dnnl_graph_op_sigmoid_backward": [166, 167], "dnnl_graph_op_softmax": [166, 167], "softmaxbackward": 166, "dnnl_graph_op_softmax_backward": [166, 167], "dnnl_graph_op_softplu": [166, 167], "softplusbackward": 166, "dnnl_graph_op_softplus_backward": [166, 167], "dnnl_graph_op_sqrt": [166, 167], "sqrtbackward": 166, "dnnl_graph_op_sqrt_backward": [166, 167], "dnnl_graph_op_squar": [166, 167], "squareddiffer": 166, "dnnl_graph_op_squared_differ": [166, 167], "staticreshap": 166, "dnnl_graph_op_static_reshap": [166, 167], "statictranspos": 166, "dnnl_graph_op_static_transpos": [166, 167], "dnnl_graph_op_subtract": [166, 167], "dnnl_graph_op_tanh": [166, 167], "tanhbackward": 166, "dnnl_graph_op_tanh_backward": [166, 167], "dnnl_graph_op_type_cast": [166, 167], "dnnl_graph_op_wildcard": [166, 167], "lastsymbol": 166, "dnnl_graph_op_last_symbol": [166, 167], "dnnl_graph_partition_policy_fus": [168, 169], "dnnl_graph_partition_policy_debug": [168, 169], "chian": [168, 169], "dnnl_success": [170, 193, 194, 203, 210, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 285, 287, 288, 289, 291, 292, 301, 314, 323], "out_of_memori": [170, 193], "dnnl_out_of_memori": [170, 193, 194], "invalid_argu": [170, 193, 227, 264, 271, 334], "dnnl_invalid_argu": [170, 193, 194, 243, 260, 264, 271, 281, 282, 283], "last_impl_reach": [170, 193], "dnnl_last_impl_reach": [170, 193, 194, 266], "runtime_error": [170, 193, 271], "dnnl_runtime_error": [170, 193, 194, 271], "not_requir": [170, 193], "dnnl_not_requir": [170, 193, 194, 266], "invalid_graph": 170, "dnnl_invalid_graph": [170, 194], "invalid_graph_op": 170, "dnnl_invalid_graph_op": [170, 194], "invalid_shap": 170, "dnnl_invalid_shap": [170, 194], "invalid_data_typ": 170, "dnnl_invalid_data_typ": [170, 194], "request": [170, 193, 194, 253, 260, 266, 300, 461], "reach": [170, 193, 194, 460], "legitim": [170, 194], "bca": 174, "cba": 174, "abdc": 174, "acbd": 174, "adbc": 174, "bacd": 174, "bcda": 174, "cdba": 174, "dcab": 174, "abdec": 174, "bcdea": 174, "cdeba": 174, "decab": 174, "abcdef": 174, "abdfc": 174, "acbdef": 174, "abdefc": 174, "defcab": 174, "abcdf": 174, "abcdefg": 174, "abcdegf": 174, "abcdefgh": 174, "abcdefhg": 174, "abcdefghi": 174, "abcdefgih": 174, "abcdefghij": 174, "abcdefghji": 174, "abcdefghijk": 174, "abcdefghikj": 174, "abcdefghijkl": 174, "abcdefghijlk": 174, "cn": [174, 260], "tn": 174, "nt": 174, "nwc": 174, "chwn": [174, 334], "oi": 174, "io": [174, 211, 324], "oiw": 174, "owi": 174, "wio": 174, "iwo": 174, "oihw": [174, 204, 205, 206, 207, 209, 221, 226, 227, 315, 316, 317, 318, 321, 338, 349, 350], "hwio": 174, "ohwi": 174, "ihwo": 174, "iohw": 174, "oidhw": 174, "dhwio": 174, "odhwi": 174, "iodhw": 174, "idhwo": 174, "goiw": 174, "gowi": 174, "wigo": 174, "gohwi": 174, "goihw": [174, 204, 209, 321], "giohw": 174, "goidhw": 174, "giodhw": 174, "godhwi": 174, "dhwigo": 174, "ntc": 174, "ldigo": [174, 199, 212, 213, 224, 233, 306, 326, 327, 345, 361], "ldgoi": 174, "ldio": 174, "ldoi": 174, "ldgo": [174, 199, 212, 213, 224, 233, 306, 326, 327, 345, 361], "ab16b16a": 174, "ab16b32a": 174, "ab16b64a": 174, "ab8b16a2b": 174, "ab8b32a2b": 174, "ab8b64a2b": 174, "ab4b16a4b": 174, "ab4b32a4b": 174, "ab4b64a4b": 174, "ab16b16a4b": 174, "ab16b32a4b": 174, "ab16b48a4b": 174, "ab16b64a4b": 174, "ab16b16a2b": 174, "ab16b32a2b": 174, "ab16b48a2b": 174, "ab16b64a2b": 174, "abc16a": 174, "abc16a16b": 174, "abc4a4b": 174, "abc16b": 174, "abc32b": 174, "abc16b16a": 174, "abc16b32a": 174, "abc16b64a": 174, "abc4a": 174, "abc4b": 174, "abc4b16a4b": 174, "abc4b32a4b": 174, "abc4b64a4b": 174, "abc2b8a4b": 174, "abc16a16b2a": 174, "abc16b16a4b": 174, "abc16b32a4b": 174, "abc16b48a4b": 174, "abc16b64a4b": 174, "abc16b16a2b": 174, "abc16b32a2b": 174, "abc16b48a2b": 174, "abc16b64a2b": 174, "abc4b4a": 174, "abc8a16b2a": 174, "abc8a8b": 174, "abc8a4b": 174, "abc8b": 174, "abc8b16a2b": 174, "abc8b32a2b": 174, "abc8b64a2b": 174, "abc8b8a": 174, "abcd8a": 174, "abcd16a": 174, "abcd32a": 174, "abcd16a16b": 174, "abcd16b": [174, 350], "abcd32b": 174, "abcd16b16a": 174, "abcd16b32a": 174, "abcd16b64a": 174, "abcd16b16c": 174, "abcd16c16b": 174, "abcd4a": 174, "abcd4b": 174, "abcd4b16a4b": 174, "abcd4b32a4b": 174, "abcd4b64a4b": 174, "abcd2b8a4b": 174, "abcd4b4a": 174, "abcd4a4b": 174, "abcd4c16b4c": 174, "abcd2c8b4c": 174, "abcd16a16b2a": 174, "abcd16b16a4b": 174, "abcd16b32a4b": 174, "abcd16b48a4b": 174, "abcd16b64a4b": 174, "abcd16b16a2b": 174, "abcd16b32a2b": 174, "abcd16b48a2b": 174, "abcd16b64a2b": 174, "abcd16b16c2b": 174, "abcd16c16b4c": 174, "abcd16c16b2c": 174, "abcd4c4b": 174, "abcd4b4c": 174, "abcd8a16b2a": 174, "abcd8a8b": 174, "abcd8a4b": 174, "abcd8a2b": 174, "abcd8b16a2b": 174, "abcd8b32a2b": 174, "abcd8b64a2b": 174, "abcd8b16c2b": 174, "abcd8b8c": 174, "abcd8b4c": 174, "abcd8c16b2c": 174, "abcd8c8b": 174, "abcde16a": 174, "abcde32a": 174, "abcde16a16b": 174, "abcde16b": 174, "abcde32b": 174, "abcde16b16a": 174, "abcde16b32a": 174, "abcde16b64a": 174, "abcde16b16c": 174, "abcde16c16b": 174, "abcde2c8b4c": 174, "abcde4a": 174, "abcde4b": 174, "abcde4b4a": 174, "abcde4a4b": 174, "abcde4b4c": 174, "abcde4c16b4c": 174, "abcde16b16c2b": 174, "abcde16c16b4c": 174, "abcde16c16b2c": 174, "abcdef16c16b2c": 174, "abcde4c4b": 174, "abcde8a": 174, "abcde8a8b": 174, "abcde8a4b": 174, "abcde8b": 174, "abcde8b16a2b": 174, "abcde8b32a2b": 174, "abcde8b64a2b": 174, "abcde4b16a4b": 174, "abcde4b32a4b": 174, "abcde4b64a4b": 174, "abcde16b16a4b": 174, "abcde16b32a4b": 174, "abcde16b48a4b": 174, "abcde16b64a4b": 174, "abcde16b16a2b": 174, "abcde16b32a2b": 174, "abcde16b48a2b": 174, "abcde16b64a2b": 174, "abcde2b8a4b": 174, "abcde8b16c2b": 174, "abcde8b8a": 174, "abcde8b8c": 174, "abcde8b4c": 174, "abcd4a8b8a4b": 174, "abcd2a8b8a2b": 174, "abcde4b8c8b4c": 174, "abcde2b8c8b2c": 174, "abcde8c16b2c": 174, "abcde8c8b": 174, "abcdef16b": 174, "abcdef16b16c": 174, "abcdef16c16b": 174, "abcdef4b": 174, "abcdef2c8b4c": 174, "abcdef4c4b": 174, "abcdef4b4c": 174, "abcdef8b8c": 174, "abcdef8b4c": 174, "abcdef8c16b2c": 174, "abcdef4c16b4c": 174, "abcdef8c8b": 174, "abdc16b": 174, "abdc4b": 174, "abdc8b": 174, "abdc8b2c": 174, "abdec16b": 174, "abdec4b": 174, "abdec8b": 174, "abdec8b2c": 174, "abdefc16b": 174, "acbdef16c16b": 174, "acbdef16b16c": 174, "abdefc4b": 174, "abdefc8b": 174, "abdefc8b2c": 174, "acb16a": 174, "acb4a": 174, "acb8a": 174, "acb8a2b": 174, "acbd16b16c": 174, "acbd16c16b": 174, "acbde16b16c": 174, "acbde16c16b": 174, "acdb16a": [174, 350], "acdb4a": 174, "acdb8a": 174, "acdb8a2b": 174, "acdeb16a": 174, "acdeb4a": 174, "acdeb8a": 174, "acdeb8a2b": 174, "bac16a16b": 174, "bac16b16a": 174, "bacd16a16b": 174, "bacd16b16a": 174, "abcd32a32b": 174, "bacde16b16a": 174, "bacde16a16b": 174, "abdec32b": 174, "abcdef16a": 174, "abcdef32a": 174, "acdb32a": 174, "abcd2b4c2b": 174, "abcde2b4c2b": 174, "abcdef2b4c2b": 174, "abcd2c4b2c": 174, "abcde2c4b2c": 174, "abcdef2c4b2c": 174, "abcd4b8c2b": 174, "abcde4b8c2b": 174, "abcdef4b8c2b": 174, "abcd4c8b2c": 174, "abcde4c8b2c": 174, "abcdef4c8b2c": 174, "ab32a32b8a4b": 174, "ab32a32b8a2b": 174, "ab8a4b": 174, "ab8a2b": 174, "abdc16d": 174, "abdc32d": 174, "abdc32d4c": 174, "abcd32c": 174, "abdec16": 174, "abdec32": 174, "abdec32e2c": 174, "abdec32e4c": 174, "abdce16c": 174, "abdce32c": 174, "abdce32c2": 174, "abcdef16c16b4c": 174, "abdc16b4c": 174, "abdec16b4c": 174, "acb16a4b": 174, "acdb16a2b": 174, "abdefc16b4c": 174, "acdeb16a4b": 174, "acb32a": 174, "acb32a2b": 174, "acb32a4b": 174, "acb48a": 174, "acb48a2b": 174, "acb48a4b": 174, "acb64a": 174, "acb64a2b": 174, "acb64a4b": 174, "cba2b": 174, "cba4b": 174, "abdc32b": 174, "abdc32b2c": 174, "abdc32b4c": 174, "abdc48b": 174, "abdc48b2c": 174, "abdc48b4c": 174, "abdc64b": 174, "abdc64b2c": 174, "abdc64b4c": 174, "adcb": 174, "adcb2c": 174, "adcb4c": 174, "acdb32a2b": 174, "acdb32a4b": 174, "acdb48a": 174, "acdb48a2b": 174, "acdb48a4b": 174, "acdb64a": 174, "acdb64a2b": 174, "acdb64a4b": 174, "cdba2b": 174, "cdba4b": 174, "abdec32b2c": 174, "abdec32b4c": 174, "abdec48b": 174, "abdec48b2c": 174, "abdec48b4c": 174, "abdec64b": 174, "abdec64b2c": 174, "abdec64b4c": 174, "adecb": 174, "adecb2c": 174, "adecb4c": 174, "acdeb32a": 174, "acdeb32a2b": 174, "acdeb32a4b": 174, "acdeb48a": 174, "acdeb48a2b": 174, "acdeb48a4b": 174, "acdeb64a": 174, "acdeb64a2b": 174, "acdeb64a4b": 174, "cdeba2b": 174, "cdeba4b": 174, "abdefc32b": 174, "abdefc32b2c": 174, "abdefc32b4c": 174, "abdefc48b": 174, "abdefc48b2c": 174, "abdefc48b4c": 174, "abdefc64b": 174, "abdefc64b2c": 174, "abdefc64b4c": 174, "adefcb": 174, "adefcb2c": 174, "adefcb4c": 174, "abc32a32b": 174, "bac8a16b2a": 174, "bacd8a16b2a": 174, "abcde8a16b2a": 174, "acbd8b16c2b": 174, "bacde8a16b2a": 174, "acbde8b16c2b": 174, "abcde32a32b": 174, "abc4a8b8a4b": 174, "abcde4a8b8a4b": 174, "bac4b8a8b4a": 174, "bacd4b8a8b4a": 174, "bacde4b8a8b4a": 174, "abcd4b8c8b4c": 174, "abcdef4b8c8b4c": 174, "abcdef8b16c2b": 174, "acbdef8b16c2b": 174, "abdc16b2c": 174, "abdec16b2c": 174, "abdefc16b2c": 174, "abedc16b": 174, "acb16a2b": 174, "acdb16a4b": 174, "acdeb16a2b": 174, "adcb16a": 174, "acbd4c8b8c4b": 174, "acbde4c8b8c4b": 174, "acbdef4c8b8c4b": 174, "abc32a16b": 174, "abcd16a32b": 174, "abcd32a16b": 174, "abcde32a16b": 174, "ab48a16b": 174, "ab48a32b": 174, "abc40a16b": 174, "abc40a32b": 174, "abc48b16c": 174, "abc48b32c": 174, "abcd40a16b": 174, "abcd40a32b": 174, "ba16a16b": 174, "ba16a32b": 174, "ba16a48b": 174, "ba16a64b": 174, "ba16a16b2a": 174, "ba16a32b2a": 174, "ba16a48b2a": 174, "ba16a64b2a": 174, "ba16a16b4a": 174, "ba16a32b4a": 174, "ba16a48b4a": 174, "ba16a64b4a": 174, "decba16a": 174, "decba8a": 174, "acb16b16c": 174, "acb16b32c": 174, "acb16b48c": 174, "acb16b64c": 174, "acb16b16c2b": 174, "acb16b32c2b": 174, "acb16b48c2b": 174, "acb16b64c2b": 174, "acb16b16c4b": 174, "acb16b32c4b": 174, "acb16b48c4b": 174, "acb16b64c4b": 174, "acb24a": 174, "acdb24a": 174, "acdeb24a": 174, "abdc24b": 174, "abdec24b": 174, "abdefc24b": 174, "acb24a2b": 174, "acdb24a2b": 174, "acdeb24a2b": 174, "abdc24b2c": 174, "abdec24b2c": 174, "abdefc24b2c": 174, "ab8b32a": 174, "abc8b32a": 174, "abcd8b32a": 174, "abcde8b32a": 174, "ab8b24a": 174, "abc8b24a": 174, "abcd8b24a": 174, "abcde8b24a": 174, "ab8b16a": 174, "abc8b16a": 174, "abcd8b16a": 174, "abcde8b16a": 174, "ab8b8a": 174, "format_tag_last": 174, "ncdhw16c": 174, "ncdhw4c": 174, "ncdhw8c": 174, "nchw4c": 174, "ncw16c": 174, "ncw4c": 174, "ncw8c": 174, "ncw16n16c": 174, "nchw16n16c": 174, "ncdhw16n16c": 174, "ncdhw32n32c": 174, "nchw32n32c": 174, "iohw16i16o": 174, "oi16i16o": 174, "oi16i32o": 174, "oi16i64o": 174, "oi8i16o2i": 174, "oi8i32o2i": 174, "oi8i64o2i": 174, "oi4i8o4i": 174, "oi4i16o4i": 174, "oi4i24o4i": 174, "oi4i32o4i": 174, "oi4i64o4i": 174, "ohwi32o": 174, "iodhw16i16o": 174, "giohw16i16o": 174, "gohwi32o": 174, "goidhw16g": 174, "iow16o16i": 174, "oiw16i16o": 174, "oiw16i32o": 174, "oiw16i64o": 174, "iow16i16o": 174, "giow16i16o": 174, "oiw16o16i": 174, "oiw16o": 174, "oiw4i8o4i": 174, "oiw4i16o4i": 174, "oiw4i24o4i": 174, "oiw4i32o4i": 174, "oiw4i64o4i": 174, "oiw2i8o4i": 174, "oiw4i4o": 174, "oiw4o4i": 174, "oiw4o": 174, "oiw8i16o2i": 174, "oiw8i32o2i": 174, "oiw8i64o2i": 174, "oiw8i8o": 174, "oiw8o16i2o": 174, "oiw8o8i": 174, "oiw8o4i": 174, "oiw16i16o4i": 174, "oiw16i32o4i": 174, "oiw16i48o4i": 174, "oiw16i64o4i": 174, "oiw16i16o2i": 174, "oiw16i32o2i": 174, "oiw16i48o2i": 174, "oiw16i64o2i": 174, "oiw16o16i2o": 174, "owi16o": 174, "owi16o2i": 174, "iwo16i": 174, "iwo16i2o": 174, "iwo16i4o": 174, "owi4o": 174, "owi8o": 174, "owi8o2i": 174, "iohw16o16i": 174, "ohwi16o": 174, "ohwi16o2i": 174, "ihwo16i": 174, "ihwo16i2o": 174, "ihwo16i4o": 174, "ohwi4o": 174, "ohwi8o": 174, "ohwi8o2i": 174, "oihw16i16o": 174, "oihw16i32o": 174, "oihw16i64o": 174, "oihw16o16i": 174, "oihw16o": 174, "oihw4i8o4i": 174, "oihw4i16o4i": 174, "oihw4i24o4i": 174, "oihw4i32o4i": 174, "oihw4i64o4i": 174, "oihw4i4o": 174, "oihw4o4i": 174, "oihw4o": 174, "oihw8i16o2i": 174, "oihw8i32o2i": 174, "oihw8i64o2i": 174, "oihw8i8o": 174, "oihw8o16i2o": 174, "oihw8o8i": 174, "oihw8o4i": 174, "oihw2i8o4i": 174, "iodhw16o16i": 174, "odhwi16o": 174, "odhwi16o2i": 174, "idhwo16i": 174, "idhwo16i2o": 174, "idhwo16i4o": 174, "odhwi4o": 174, "odhwi8o": 174, "odhwi8o2i": 174, "oidhw16i16o": 174, "oidhw16i32o": 174, "oidhw16i64o": 174, "oidhw16o16i": 174, "oidhw16o16i2o": 174, "oidhw16o": 174, "oidhw4i4o": 174, "oidhw4o4i": 174, "oidhw4o": 174, "oidhw8i16o2i": 174, "oidhw8i32o2i": 174, "oidhw8i64o2i": 174, "oidhw4i8o4i": 174, "oidhw4i16o4i": 174, "oidhw16i16o4i": 174, "oidhw16i32o4i": 174, "oidhw16i48o4i": 174, "oidhw16i64o4i": 174, "oidhw16i16o2i": 174, "oidhw16i32o2i": 174, "oidhw16i48o2i": 174, "oidhw16i64o2i": 174, "oidhw4i24o4i": 174, "oidhw4i32o4i": 174, "oidhw4i64o4i": 174, "oidhw2i8o4i": 174, "oidhw8i8o": 174, "oidhw8o8i": 174, "oidhw8o4i": 174, "giow16o16i": 174, "goiw16i16o": 174, "goiw16o16i": 174, "goiw16o": 174, "goiw4i16o4i": 174, "goiw2i8o4i": 174, "goiw4i4o": 174, "goiw4o4i": 174, "goiw4o": 174, "goiw8i16o2i": 174, "goiw8i8o": 174, "goiw8o16i2o": 174, "goiw8o8i": 174, "goiw8o4i": 174, "goiw16i16o4i": 174, "goiw16i16o2i": 174, "goiw16o16i2o": 174, "gowi16o": 174, "gowi16o2i": 174, "giwo16i": 174, "giwo16i2o": 174, "giwo16i4o": 174, "gowi4o": 174, "gowi8o": 174, "gowi8o2i": 174, "goiw8g": 174, "goiw16g": 174, "giohw16o16i": 174, "gohwi16o": 174, "gohwi16o2i": 174, "gihwo16i": 174, "gihwo16i2o": 174, "gihwo16i4o": 174, "gohwi4o": 174, "gohwi8o": 174, "gohwi8o2i": 174, "goihw16g": 174, "goihw16i16o": 174, "goihw16o16i": 174, "goihw16o": 174, "goihw4i16o4i": 174, "goihw2i8o4i": 174, "goihw4i4o": 174, "goihw4o4i": 174, "goihw4o": 174, "goihw8g": 174, "goihw8i16o2i": 174, "goihw8i8o": 174, "goihw8o16i2o": 174, "oiw4o8i8o4i": 174, "oidhw4o8i8o4i": 174, "oihw4o8i8o4i": 174, "oihw2o8i8o2i": 174, "goiw4o8i8o4i": 174, "goidhw4o8i8o4i": 174, "goihw4o8i8o4i": 174, "goihw2o8i8o2i": 174, "oihw16i16o4i": 174, "oihw16i32o4i": 174, "oihw16i48o4i": 174, "oihw16i64o4i": 174, "oihw16i16o2i": 174, "oihw16i32o2i": 174, "oihw16i48o2i": 174, "oihw16i64o2i": 174, "oihw16o16i2o": 174, "goihw16i16o4i": 174, "goihw16i16o2i": 174, "goihw16o16i2o": 174, "goihw8o8i": 174, "goihw8o4i": 174, "giodhw16i16o": 174, "giodhw16o16i": 174, "godhwi16o": 174, "godhwi16o2i": 174, "gidhwo16i": 174, "gidhwo16i2o": 174, "gidhwo16i4o": 174, "godhwi4o": 174, "godhwi8o": 174, "godhwi8o2i": 174, "goidhw16i16o": 174, "goidhw16o16i": 174, "goidhw16o16i2o": 174, "goidhw16o": 174, "goidhw4i4o": 174, "goidhw4o4i": 174, "goidhw4o": 174, "goidhw8i16o2i": 174, "goidhw4i16o4i": 174, "goidhw16i16o4i": 174, "goidhw16i16o2i": 174, "goidhw2i8o4i": 174, "goidhw8i8o": 174, "goidhw8o8i": 174, "goidhw8o4i": 174, "goiw2i4o2i": 174, "goihw2i4o2i": 174, "goidhw2i4o2i": 174, "goiw2o4i2o": 174, "goihw2o4i2o": 174, "goidhw2o4i2o": 174, "goiw4i8o2i": 174, "goihw4i8o2i": 174, "goidhw4i8o2i": 174, "goiw4o8i2o": 174, "goihw4o8i2o": 174, "goidhw4o8i2o": 174, "ldoi16o": 174, "ldoi32o": 174, "ldoi32o4i": 174, "ldgoi16o": 174, "ldgoi32o": 174, "ldgoi32o2i": 174, "ldgoi32o4i": 174, "owi16o4i": 174, "ohwi16o4i": 174, "gowi16o4i": 174, "gohwi16o4i": 174, "odhwi16o4i": 174, "godhwi16o4i": 174, "owi32o": 174, "owi32o2i": 174, "owi32o4i": 174, "owi48o": 174, "owi48o2i": 174, "owi48o4i": 174, "owi64o": 174, "owi64o2i": 174, "owi64o4i": 174, "iwo32i": 174, "iwo32i2o": 174, "iwo32i4o": 174, "iwo48i": 174, "iwo48i2o": 174, "iwo48i4o": 174, "iwo64i": 174, "iwo64i2o": 174, "iwo64i4o": 174, "wio2i": 174, "wio4i": 174, "gowi32o": 174, "gowi32o2i": 174, "gowi32o4i": 174, "gowi48o": 174, "gowi48o2i": 174, "gowi48o4i": 174, "gowi64o": 174, "gowi64o2i": 174, "gowi64o4i": 174, "giwo32i": 174, "giwo32i2o": 174, "giwo32i4o": 174, "giwo48i": 174, "giwo48i2o": 174, "giwo48i4o": 174, "giwo64i": 174, "giwo64i2o": 174, "giwo64i4o": 174, "gwio": 174, "gwio2i": 174, "gwio4i": 174, "ohwi32o2i": 174, "ohwi32o4i": 174, "ohwi48o": 174, "ohwi48o2i": 174, "ohwi48o4i": 174, "ohwi64o": 174, "ohwi64o2i": 174, "ohwi64o4i": 174, "ihwo32i": 174, "ihwo32i2o": 174, "ihwo32i4o": 174, "ihwo48i": 174, "ihwo48i2o": 174, "ihwo48i4o": 174, "ihwo64i": 174, "ihwo64i2o": 174, "ihwo64i4o": 174, "hwio2i": 174, "hwio4i": 174, "gohwi32o2i": 174, "gohwi32o4i": 174, "gohwi48o": 174, "gohwi48o2i": 174, "gohwi48o4i": 174, "gohwi64o": 174, "gohwi64o2i": 174, "gohwi64o4i": 174, "gihwo32i": 174, "gihwo32i2o": 174, "gihwo32i4o": 174, "gihwo48i": 174, "gihwo48i2o": 174, "gihwo48i4o": 174, "gihwo64i": 174, "gihwo64i2o": 174, "gihwo64i4o": 174, "ghwio": 174, "ghwio2i": 174, "ghwio4i": 174, "odhwi32o": 174, "odhwi32o2i": 174, "odhwi32o4i": 174, "odhwi48o": 174, "odhwi48o2i": 174, "odhwi48o4i": 174, "odhwi64o": 174, "odhwi64o2i": 174, "odhwi64o4i": 174, "idhwo32i": 174, "idhwo32i2o": 174, "idhwo32i4o": 174, "idhwo48i": 174, "idhwo48i2o": 174, "idhwo48i4o": 174, "idhwo64i": 174, "idhwo64i2o": 174, "idhwo64i4o": 174, "dhwio2i": 174, "dhwio4i": 174, "godhwi32o": 174, "godhwi32o2i": 174, "godhwi32o4i": 174, "godhwi48o": 174, "godhwi48o2i": 174, "godhwi48o4i": 174, "godhwi64o": 174, "godhwi64o2i": 174, "godhwi64o4i": 174, "gidhwo32i": 174, "gidhwo32i2o": 174, "gidhwo32i4o": 174, "gidhwo48i": 174, "gidhwo48i2o": 174, "gidhwo48i4o": 174, "gidhwo64i": 174, "gidhwo64i2o": 174, "gidhwo64i4o": 174, "gdhwio": 174, "gdhwio2i": 174, "gdhwio4i": 174, "ldio32i": 174, "ldgio16i": 174, "ldgio32i": 174, "ldgio32i2o": 174, "ncdhw32c": 174, "nchw32c": 174, "ncw32c": 174, "ncw32n16c": 174, "nchw32n16c": 174, "ncdhw32n16c": 174, "ncw32n32c": 174, "oi16i16o4i": 174, "iow8o16i2o": 174, "iohw8o16i2o": 174, "owhi16o": 174, "oidhw8o16i2o": 174, "iodhw8o16i2o": 174, "goiw4g": 174, "giow8o16i2o": 174, "goiw32g": 174, "goihw4g": 174, "giohw8o16i2o": 174, "goihw32g": 174, "gowhi16o": 174, "iow4i8o8i4o": 174, "iohw4i8o8i4o": 174, "iodhw4i8o8i4o": 174, "giow4i8o8i4o": 174, "giohw4i8o8i4o": 174, "giodhw4i8o8i4o": 174, "goidhw8o16i2o": 174, "giodhw8o16i2o": 174, "goidhw32g": 174, "oi16i32o4i": 174, "oi16i48o4i": 174, "oi16i64o4i": 174, "oi16i16o2i": 174, "oi16i32o2i": 174, "oi16i48o2i": 174, "oi16i64o2i": 174, "abdec16c16b4c": 174, "acb16b16a2b": 174, "abdc16c16b2c": 174, "acb16b16a4b": 174, "abdc16c16b4c": 174, "acdb16b16a2b": 174, "abdefc16c16b4c": 174, "acdeb16b16a4b": 174, "acb16b32a2b": 174, "acb16b32a4b": 174, "acb16b48a2b": 174, "acb16b48a4b": 174, "acb16b64a2b": 174, "acb16b64a4b": 174, "abdc16c32b2c": 174, "abdc16c32b4c": 174, "abdc16c48b2c": 174, "abdc16c48b4c": 174, "abdc16c64b2c": 174, "abdc16c64b4c": 174, "acdb16b32a2b": 174, "acdb16b32a4b": 174, "acdb16b48a2b": 174, "acdb16b48a4b": 174, "acdb16b64a2b": 174, "acdb16b64a4b": 174, "abdec16c32b2c": 174, "abdec16c32b4c": 174, "abdec16c48b2c": 174, "abdec16c48b4c": 174, "abdec16c64b2c": 174, "abdec16c64b4c": 174, "acdeb16b32a2b": 174, "acdeb16b32a4b": 174, "acdeb16b48a2b": 174, "acdeb16b48a4b": 174, "acdeb16b64a2b": 174, "acdeb16b64a4b": 174, "abdefc16c32b2c": 174, "abdefc16c32b4c": 174, "abdefc16c48b2c": 174, "abdefc16c48b4c": 174, "abdefc16c64b2c": 174, "abdefc16c64b4c": 174, "owi16i16o2i": 174, "gowi16i16o2i": 174, "ohwi16i16o2i": 174, "gohwi16i16o2i": 174, "odhwi16i16o2i": 174, "godhwi16i16o2i": 174, "owi16i16o4i": 174, "gowi16i16o4i": 174, "ohwi16i16o4i": 174, "gohwi16i16o4i": 174, "odhwi16i16o4i": 174, "godhwi16i16o4i": 174, "owi16i32o2i": 174, "owi16i32o4i": 174, "owi16i48o2i": 174, "owi16i48o4i": 174, "owi16i64o2i": 174, "owi16i64o4i": 174, "gowi16i32o2i": 174, "gowi16i32o4i": 174, "gowi16i48o2i": 174, "gowi16i48o4i": 174, "gowi16i64o2i": 174, "gowi16i64o4i": 174, "ohwi16i32o2i": 174, "ohwi16i32o4i": 174, "ohwi16i48o2i": 174, "ohwi16i48o4i": 174, "ohwi16i64o2i": 174, "ohwi16i64o4i": 174, "gohwi16i32o2i": 174, "gohwi16i32o4i": 174, "gohwi16i48o2i": 174, "gohwi16i48o4i": 174, "gohwi16i64o2i": 174, "gohwi16i64o4i": 174, "odhwi16i32o2i": 174, "odhwi16i32o4i": 174, "odhwi16i48o2i": 174, "odhwi16i48o4i": 174, "odhwi16i64o2i": 174, "odhwi16i64o4i": 174, "idhwo16o32i2o": 174, "idhwo16o32i4o": 174, "idhwo16o48i2o": 174, "idhwo16o48i4o": 174, "idhwo16o64i2o": 174, "idhwo16o64i4o": 174, "godhwi16i32o2i": 174, "godhwi16i32o4i": 174, "godhwi16i48o2i": 174, "godhwi16i48o4i": 174, "godhwi16i64o2i": 174, "godhwi16i64o4i": 174, "gidhwo16o32i2o": 174, "gidhwo16o32i4o": 174, "gidhwo16o48i2o": 174, "gidhwo16o48i4o": 174, "gidhwo16o64i2o": 174, "gidhwo16o64i4o": 174, "iwo16o16i2o": 174, "iwo16o16i4o": 174, "ihwo16o16i2o": 174, "ihwo16o16i4o": 174, "idhwo16o16i2o": 174, "idhwo16o16i4o": 174, "giwo16o16i2o": 174, "giwo16o16i4o": 174, "gihwo16o16i2o": 174, "gihwo16o16i4o": 174, "gidhwo16o16i2o": 174, "gidhwo16o16i4o": 174, "iwo16o32i2o": 174, "iwo16o32i4o": 174, "iwo16o48i2o": 174, "iwo16o48i4o": 174, "iwo16o64i2o": 174, "iwo16o64i4o": 174, "giwo16o32i2o": 174, "giwo16o32i4o": 174, "giwo16o48i2o": 174, "giwo16o48i4o": 174, "giwo16o64i2o": 174, "giwo16o64i4o": 174, "ihwo16o32i2o": 174, "ihwo16o32i4o": 174, "ihwo16o48i2o": 174, "ihwo16o48i4o": 174, "ihwo16o64i2o": 174, "ihwo16o64i4o": 174, "gihwo16o32i2o": 174, "gihwo16o32i4o": 174, "gihwo16o48i2o": 174, "gihwo16o48i4o": 174, "gihwo16o64i2o": 174, "gihwo16o64i4o": 174, "abdec16c16b2c": 174, "abdefc16c16b2c": 174, "acdb16b16a4b": 174, "acdeb16b16a2b": 174, "hwiog16g": 174, "hwiog8g": 174, "abc4a2b": 174, "abc8a2b": 174, "abcd4a2b": 174, "abcde4a2b": 174, "abcde8a2b": 174, "abcd4a8b8a2b": 174, "ncdhw40n32c": 174, "nchw40n32c": 174, "ncw40n32c": 174, "oidhw4o8i8o2i": 174, "oihw4o8i8o2i": 174, "oiw4o8i8o2i": 174, "goidhw4o8i8o2i": 174, "goihw4o8i8o2i": 174, "goiw4o8i8o2i": 174, "iodhw4i8o8i2o": 174, "iohw4i8o8i2o": 174, "iow4i8o8i2o": 174, "giodhw4i8o8i2o": 174, "giohw4i8o8i2o": 174, "giow4i8o8i2o": 174, "abcd8b2c": 174, "abcde40a16b": 174, "abcde40a32b": 174, "abcde8b2c": 174, "abcde4a8b8a2b": 174, "abc4a8b8a2b": 174, "abcdef4b8c8b2c": 174, "abcde4b8c8b2c": 174, "abcd4b8c8b2c": 174, "bacde4b8a8b2a": 174, "bacd4b8a8b2a": 174, "bac4b8a8b2a": 174, "acbdef4c8b8c2b": 174, "acbde4c8b8c2b": 174, "acbd4c8b8c2b": 174, "abcdef8b2c": 174, "ab32a16b": 174, "ab32a32b": 174, "ba4b8a8b2a": 174, "ba4b8a8b4a": 174, "abc32b16c": 174, "abc32b32c": 174, "acb4c8b8c2b": 174, "acb4c8b8c4b": 174, "abc2b8a16b4a": 174, "abcd2b8a16b4a": 174, "abcde2b8a16b4a": 174, "abc2a8b16a4b": 174, "abc2a8b16a2b": 174, "abc2b32a8b": 174, "abcd2a8b16a4b": 174, "abcd2a8b16a2b": 174, "acbd2c8b16c2b": 174, "abcd2b32a8b": 174, "abcd2c8b16c2b": 174, "abcde2a8b16a4b": 174, "abcde2a8b16a2b": 174, "acbde2c8b16c2b": 174, "abcde2b32a8b": 174, "abc2b8c16b2c": 174, "abcd2b8c16b2c": 174, "abcde2b8c16b2c": 174, "abcdef2b8c16b2c": 174, "bacde2b8a16b4a": 174, "bacd2b8a16b4a": 174, "bac2b8a16b4a": 174, "bacde2b8a16b2a": 174, "bacd2b8a16b2a": 174, "bac2b8a16b2a": 174, "abcde2c8b16c2b": 174, "abcdef2c8b16c2b": 174, "acbdef2c8b16c2b": 174, "abcd2b8c16b4c": 174, "abcde2b8c16b4c": 174, "ncdhw40n16c": 174, "ncw40n16c": 174, "nchw40n16c": 174, "ncw2c32n8c": 174, "nchw2c32n8c": 174, "ncdhw2c32n8c": 174, "oiw2i8o16i4o": 174, "oihw2i8o16i4o": 174, "oidhw2i8o16i4o": 174, "oiw2o8i16o4i": 174, "oiw2o8i16o2i": 174, "iow2i8o16i4o": 174, "iow2i8o16i2o": 174, "oihw2o8i16o4i": 174, "oihw2o8i16o2i": 174, "iohw2i8o16i4o": 174, "iohw2i8o16i2o": 174, "oidhw2o8i16o4i": 174, "oidhw2o8i16o2i": 174, "iodhw2i8o16i4o": 174, "iodhw2i8o16i2o": 174, "goiw2o8i16o2i": 174, "giow2i8o16i2o": 174, "giohw2i8o16i2o": 174, "giodhw2i8o16i2o": 174, "goihw2o8i16o2i": 174, "goidhw2o8i16o2i": 174, "goiw2o8i16o4i": 174, "goihw2o8i16o4i": 174, "ba4b8a16b2a": 174, "ba4b8a16b4a": 174, "acb4c8b16c2b": 174, "acb4c8b16c4b": 174, "acb16c2b": 174, "acb16c4b": 174, "ba16b2a": 174, "ba16b4a": 174, "abc16b16c": 174, "abc16b32c": 174, "ab16a16b": 174, "ab16a32b": 174, "abcde16a16b2a": 174, "abcdef16b16c2b": 174, "acedb16a": 174, "abdfec16b": 174, "odwhi16o": 174, "godwhi16o": 174, "abdec64e2c": 174, "abdec64e4c": 174, "ldgoi64o2i": 174, "ldgoi64o4i": 174, "abcd4c": 174, "abcde4c": 174, "abcdef4c": 174, "abcde32c": 174, "abcdef32c": 174, "acdefb16b32c2b": 174, "acdefb16b32c4b": 174, "acdefb16b48c2b": 174, "acdefb16b48c4b": 174, "acdefb16b64c2b": 174, "acdefb16b64c4b": 174, "bcdea16a32b2a": 174, "bcdea16a32b4a": 174, "bcdea16a48b2a": 174, "bcdea16a48b4a": 174, "bcdea16a64b2a": 174, "bcdea16a64b4a": 174, "acdefb32c": 174, "acdefb32c2b": 174, "acdefb32c4b": 174, "acdefb48c": 174, "acdefb48c2b": 174, "acdefb48c4b": 174, "acdefb64c": 174, "acdefb64c2b": 174, "acdefb64c4b": 174, "bcdea32b": 174, "bcdea32b2a": 174, "bcdea32b4a": 174, "bcdea48b": 174, "bcdea48b2a": 174, "bcdea48b4a": 174, "bcdea64b": 174, "bcdea64b2a": 174, "bcdea64b4a": 174, "bca32b": 174, "bca32b2a": 174, "bca32b4a": 174, "bca48b": 174, "bca48b2a": 174, "bca48b4a": 174, "bca64b": 174, "bca64b2a": 174, "bca64b4a": 174, "acdb32c": 174, "acdb32c2b": 174, "acdb32c4b": 174, "acdb48c": 174, "acdb48c2b": 174, "acdb48c4b": 174, "acdb64c": 174, "acdb64c2b": 174, "acdb64c4b": 174, "bca16a16b2a": 174, "bca16a16b4a": 174, "bcda16a16b2a": 174, "bcda16a16b4a": 174, "bcdea16a16b2a": 174, "bcdea16a16b4a": 174, "acdb16b16c2b": 174, "acdb16b16c4b": 174, "acdeb16b16c2b": 174, "acdeb16b16c4b": 174, "acdefb16b16c2b": 174, "acdefb16b16c4b": 174, "bca16a32b2a": 174, "bca16a32b4a": 174, "bca16a48b2a": 174, "bca16a48b4a": 174, "bca16a64b2a": 174, "bca16a64b4a": 174, "acdb16b32c2b": 174, "acdb16b32c4b": 174, "acdb16b48c2b": 174, "acdb16b48c4b": 174, "acdb16b64c2b": 174, "acdb16b64c4b": 174, "bcda16a32b2a": 174, "bcda16a32b4a": 174, "bcda16a48b2a": 174, "bcda16a48b4a": 174, "bcda16a64b2a": 174, "bcda16a64b4a": 174, "acdeb16b32c2b": 174, "acdeb16b32c4b": 174, "acdeb16b48c2b": 174, "acdeb16b48c4b": 174, "acdeb16b64c2b": 174, "acdeb16b64c4b": 174, "bca16b": 174, "bca16b2a": 174, "bca16b4a": 174, "bcda16b": 174, "bcda16b2a": 174, "bcda16b4a": 174, "bcdea16b": 174, "bcdea16b2a": 174, "bcdea16b4a": 174, "acdb16c": 174, "acdb16c2b": 174, "acdb16c4b": 174, "acdeb16c": 174, "acdeb16c2b": 174, "acdeb16c4b": 174, "acdefb16c": 174, "acdefb16c2b": 174, "acdefb16c4b": 174, "bcda32b": 174, "bcda32b2a": 174, "bcda32b4a": 174, "bcda48b": 174, "bcda48b2a": 174, "bcda48b4a": 174, "bcda64b": 174, "bcda64b2a": 174, "bcda64b4a": 174, "acdeb32c": 174, "acdeb32c2b": 174, "acdeb32c4b": 174, "acdeb48c": 174, "acdeb48c2b": 174, "acdeb48c4b": 174, "acdeb64c": 174, "acdeb64c2b": 174, "acdeb64c4b": 174, "nchw16n32c": 174, "goiw4i": 174, "goiw32i": 174, "goihw4i": 174, "goihw32i": 174, "goidhw4i": 174, "goidhw32i": 174, "cab": 174, "cdab": 174, "cdeab": 174, "woi": 174, "hwoi": 174, "dhwoi": 174, "owi24o": 174, "ohwi24o": 174, "odhwi24o": 174, "gowi24o": 174, "gohwi24o": 174, "godhwi24o": 174, "owi24o2i": 174, "ohwi24o2i": 174, "odhwi24o2i": 174, "gowi24o2i": 174, "gohwi24o2i": 174, "godhwi24o2i": 174, "oi8i32o": 174, "oiw8i32o": 174, "oihw8i32o": 174, "oidhw8i32o": 174, "oi8i24o": 174, "oiw8i24o": 174, "oihw8i24o": 174, "oidhw8i24o": 174, "oi8i16o": 174, "oiw8i16o": 174, "oihw8i16o": 174, "oidhw8i16o": 174, "oi8i8o": 174, "ab4b8a4b": 174, "ab4b24a4b": 174, "abc4b8a4b": 174, "abc4b24a4b": 174, "abcd4b8a4b": 174, "abcd4b24a4b": 174, "abcde4b8a4b": 174, "abcde4b24a4b": 174, "ab8b24a2b": 174, "abc8b24a2b": 174, "abcd8b24a2b": 174, "abcde8b24a2b": 174, "ab8b8a2b": 174, "abc8b8a2b": 174, "abcd8b8a2b": 174, "abcde8b8a2b": 174, "oi8i8o2i": 174, "oi8i24o2i": 174, "oiw8i8o2i": 174, "oiw8i24o2i": 174, "oihw8i8o2i": 174, "oihw8i24o2i": 174, "oidhw8i8o2i": 174, "oidhw8i24o2i": 174, "dnnl_sparse_encoding_undef": [175, 192], "dnnl_csr": [175, 192], "use_global_stat": 176, "use_scal": [176, 200, 222, 308, 340], "use_shift": [176, 200, 222, 308, 340], "fuse_norm_relu": [176, 200, 308], "fuse_norm_add_relu": 176, "0x0u": 177, "0x1u": [177, 196], "0x2u": [177, 196], "0x4u": 177, "0x8u": 177, "0x10u": 177, "wrt": [177, 211, 324], "dnnl_ocl_interop_usm": [178, 179, 261], "dnnl_ocl_interop_buff": [178, 179, 261], "dnnl_ocl_typ": 179, "dnnl_undefined_primit": [180, 181, 243], "dnnl_reorder": [180, 181], "dnnl_shuffl": [180, 181], "dnnl_concat": [180, 181], "dnnl_sum": [180, 181, 243], "dnnl_convolut": [180, 181, 243, 450], "dnnl_deconvolut": [180, 181], "dnnl_eltwis": [180, 181, 243], "dnnl_lrn": [180, 181], "dnnl_batch_norm": [180, 181], "dnnl_inner_product": [180, 181], "dnnl_rnn": [180, 181], "dnnl_binari": [180, 181, 243, 450], "dnnl_matmul": [180, 181], "dnnl_resampl": [180, 181], "dnnl_pool": [180, 181], "dnnl_reduct": [180, 181], "dnnl_prelu": [180, 181], "dnnl_softmax": [180, 181], "dnnl_layer_norm": [180, 181], "summat": [180, 186, 187, 481], "dnnl_gemm": 181, "dnnl_primitive_kind_max": 181, "dnnl_prop_kind_undef": [182, 183], "dnnl_forward": [182, 183, 203, 210, 215, 314, 323, 330], "dnnl_backward_weight": [182, 183], "backward_bia": 182, "dnnl_backward_bia": [182, 183], "160": 183, "192": [183, 204, 350], "193": 183, "dnnl_query_undef": [184, 185], "dnnl_query_engin": [184, 185], "primitive_kind": 184, "dnnl_query_primitive_kind": [184, 185], "num_of_inputs_s32": 184, "dnnl_query_num_of_inputs_s32": [184, 185, 266], "num_of_outputs_s32": 184, "dnnl_query_num_of_outputs_s32": [184, 185, 266], "time_estimate_f64": 184, "dnnl_query_time_estimate_f64": [184, 185], "dnnl_query_memory_consumption_s64": [184, 185], "scratchpad_engin": [184, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "dnnl_query_scratchpad_engin": [184, 185], "reorder_src_engin": 184, "dnnl_query_reorder_src_engin": [184, 185], "reorder_dst_engin": 184, "dnnl_query_reorder_dst_engin": [184, 185], "impl_info_str": [184, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "dnnl_query_impl_info_str": [184, 185, 266], "dnnl_query_prop_kind": [184, 185], "cache_blob_id_size_s64": 184, "dnnl_query_cache_blob_id_size_s64": [184, 185], "cache_blob_id": [184, 238, 261, 299], "dnnl_query_cache_blob_id": [184, 185], "dnnl_query_dil": [184, 185], "dnnl_query_padding_l": [184, 185], "dnnl_query_padding_r": [184, 185], "epsilon_f32": 184, "dnnl_query_epsilon_f32": [184, 185], "dnnl_query_flag": [184, 185], "alg_kind": [184, 238, 243, 245, 249, 251, 252, 258, 262, 267, 269, 273], "dnnl_query_alg_kind": [184, 185], "alpha_f32": 184, "dnnl_query_alpha_f32": [184, 185], "beta_f32": 184, "dnnl_query_beta_f32": [184, 185], "axis_s32": 184, "dnnl_query_axis_s32": [184, 185], "local_size_s64": 184, "dnnl_query_local_size_s64": [184, 185], "k_f32": 184, "dnnl_query_k_f32": [184, 185], "p_f32": 184, "dnnl_query_p_f32": [184, 185], "dnnl_query_factor": [184, 185], "cell_kind": [184, 470], "dnnl_query_cell_kind": [184, 185], "dnnl_query_direct": [184, 185], "activation_kind": 184, "dnnl_query_activation_kind": [184, 185], "dnnl_query_kernel": [184, 185], "group_size_s64": 184, "dnnl_query_group_size_s64": [184, 185], "src_md": [184, 200, 202, 203, 208, 217, 218, 221, 222, 223, 225, 228, 229, 230, 231, 232, 234, 235, 236, 308, 312, 314, 319, 332, 334, 338, 340, 343, 347, 351, 353, 355, 357, 359, 362, 364, 366, 461, 465], "dnnl_query_src_md": [184, 185, 203, 210, 266, 314, 323], "diff_src_md": 184, "dnnl_query_diff_src_md": [184, 185], "dnnl_query_weights_md": [184, 185, 203, 210, 266, 314, 323], "diff_weights_md": 184, "dnnl_query_diff_weights_md": [184, 185, 210, 323], "dst_md": [184, 200, 201, 203, 217, 221, 222, 223, 225, 228, 229, 230, 231, 232, 234, 235, 308, 310, 314, 332, 338, 340, 343, 347, 351, 353, 355, 357, 359, 362, 364, 461, 465], "dnnl_query_dst_md": [184, 185, 203, 210, 266, 314, 323], "diff_dst_md": 184, "dnnl_query_diff_dst_md": [184, 185, 210, 323], "dnnl_query_workspace_md": [184, 185, 203, 210, 266, 314, 323], "dnnl_query_scratchpad_md": [184, 185], "dnnl_query_exec_arg_md": [184, 185, 261, 266, 276], "ndims_s32": 184, "dnnl_query_ndims_s32": [184, 185, 260], "dnnl_query_dim": [184, 185, 260], "dnnl_query_data_typ": [184, 185, 260], "submemory_offset_s64": 184, "dnnl_query_submemory_offset_s64": [184, 185, 260], "padded_dim": [184, 260, 266, 444], "dnnl_query_padded_dim": [184, 185, 260], "padded_offset": 184, "dnnl_query_padded_offset": [184, 185, 260], "dnnl_query_format_kind": [184, 185, 260], "inner_nblks_s32": 184, "dnnl_query_inner_nblks_s32": [184, 185, 260], "dnnl_query_sparse_encod": [184, 185, 260], "nnz_s64": 184, "dnnl_query_nnz_s64": [184, 185, 260], "num_handles_s32": 184, "dnnl_query_num_handles_s32": [184, 185, 260], "dnnl_query_t": [184, 238, 260, 266, 296], "estim": [184, 185], "submemori": [184, 185, 260, 444], "dnnl_query_some_md": 185, "dnnl_query_max": 185, "dnnl_primitive_desc_queri": [185, 238, 266], "agre": [185, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "dnnl_query_": 185, "_engin": 185, "dnnl_engine_t": [185, 203, 210, 215, 238, 244, 245, 248, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 284, 289, 291, 292, 314, 323, 330], "dnnl_primitive_kind_t": [185, 238, 243, 266, 296], "_s32": 185, "_s64": 185, "_f64": 185, "_str": 185, "char": [185, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 246, 271, 277, 288, 296, 301, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 332, 334, 335, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 403, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487, 488, 489], "_md": [185, 334, 350], "const_dnnl_memory_desc_t": [185, 203, 210, 238, 243, 244, 245, 248, 249, 251, 252, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 272, 273, 275, 276, 314, 323], "_pd": [185, 334], "const_dnnl_primitive_desc_t": [185, 238, 244, 249, 251, 252, 255, 257, 258, 262, 263, 266, 269, 270, 272, 273, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 445, 447, 451, 453, 456, 462, 464, 466, 468, 471, 473, 475, 477, 481, 484, 486], "dnnl_alg_kind_t": [185, 238, 243, 245, 249, 251, 252, 258, 262, 266, 267, 269, 270, 273, 296], "dnnl_rnn_direction_t": [185, 238, 270, 296], "dnnl_data_type_t": [185, 238, 243, 250, 260, 287, 296, 406, 442], "dnnl_format_kind_t": [185, 238, 260], "dnnl_sparse_encoding_t": [185, 238, 260], "thumb": 185, "dnnl_primitive_desc_clon": [185, 238, 266], "scratch": 185, "stub": 185, "grad": 185, "dnnl_rnn_direction_undef": [186, 187], "unidirectional_left2right": [186, 199, 212, 213, 224, 233, 306, 326, 327, 345, 361], "dnnl_unidirectional_left2right": [186, 187], "unidirectional_right2left": 186, "dnnl_unidirectional_right2left": [186, 187], "dnnl_bidirectional_concat": [186, 187], "dnnl_bidirectional_sum": [186, 187], "unidirect": [186, 187, 212, 213, 233, 326, 327, 361], "bidirect": [186, 187, 212, 213, 326, 327], "dnnl_rnn_flags_undef": [188, 189], "dnnl_rnn_flags_diff_weights_overwrit": [188, 189], "dnnl_scratchpad_mode_librari": [190, 191, 243], "dnnl_scratchpad_mode_us": [190, 191, 243], "safeti": [190, 191], "in_ord": [195, 216, 331], "dnnl_stream_in_ord": [195, 196], "out_of_ord": 195, "dnnl_stream_out_of_ord": [195, 196], "default_flag": [195, 480], "dnnl_stream_default_flag": [195, 196, 203, 210, 215, 314, 323, 330], "dnnl_sycl_interop_usm": [197, 198, 276], "dnnl_sycl_interop_buff": [197, 198, 276], "dnnl_sycl_typ": 198, "copyright": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "2022": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "corpor": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 342, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "licens": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "apach": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "complianc": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "law": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "AS": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "basi": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "warranti": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "OF": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "express": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "permiss": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 336, 338, 340, 342, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "cmath": [199, 200, 201, 202, 206, 208, 209, 211, 214, 217, 218, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 306, 308, 310, 312, 317, 319, 321, 324, 328, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 362, 364, 366], "iostream": [199, 200, 201, 202, 206, 208, 209, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 234, 235, 236, 237, 306, 308, 310, 312, 317, 319, 321, 324, 328, 332, 335, 336, 338, 340, 343, 345, 347, 351, 357, 359, 362, 364, 366, 368], "example_util": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 330, 332, 334, 335, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368], "dt": [199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 306, 308, 310, 312, 315, 316, 317, 318, 319, 321, 324, 332, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 450], "augru_exampl": [199, 238, 306], "example_allows_unimpl": [199, 205, 206, 213, 238, 306, 317, 327], "engine_stream": [199, 200, 201, 202, 208, 209, 217, 218, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 306, 308, 310, 312, 319, 321, 332, 334, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 362, 364, 366], "src_dim": [199, 200, 202, 208, 209, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 306, 308, 312, 319, 321, 332, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 362, 364, 366], "attention_dim": [199, 306], "weights_dim": [199, 209, 221, 224, 225, 229, 306, 321, 338, 345, 347, 353], "bias_dim": [199, 209, 221, 224, 225, 306, 321, 338, 345, 347], "dst_dim": [199, 209, 217, 221, 224, 225, 228, 229, 230, 232, 306, 321, 332, 338, 345, 347, 351, 353, 355, 359], "src_layer_data": [199, 224, 306, 345], "attention_data": [199, 306], "weights_layer_data": [199, 224, 306, 345], "weights_iter_data": [199, 224, 306, 345], "bias_data": [199, 209, 221, 224, 225, 306, 321, 338, 345, 347], "dst_layer_data": [199, 224, 306, 345], "sin": [199, 200, 201, 202, 209, 221, 222, 224, 225, 236, 306, 308, 310, 312, 321, 338, 340, 345, 347, 366], "src_layer_md": [199, 224, 306, 345], "attention_md": [199, 306], "bias_md": [199, 221, 224, 225, 306, 338, 345, 347], "dst_layer_md": [199, 224, 306, 345], "src_layer_mem": [199, 224, 306, 345], "attention_mem": [199, 306], "bias_mem": [199, 221, 224, 225, 306, 338, 345, 347], "dst_layer_mem": [199, 224, 306, 345], "user_weights_layer_mem": [199, 224, 306, 345], "user_weights_iter_mem": [199, 224, 306, 345], "write_to_dnnl_memori": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 330, 332, 334, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "augru_weights_layer_md": [199, 306], "augru_weights_iter_md": [199, 306], "src_iter_md": [199, 224, 306, 345], "dst_iter_md": [199, 224, 306, 345], "rnn_direct": [199, 212, 213, 224, 233, 270, 296, 306, 326, 327, 345, 361, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "augru_weights_layer_mem": [199, 306], "augru_weights_iter_mem": [199, 306], "src_iter_mem": [199, 224, 306, 345], "weights_iter_mem": [199, 224, 306, 345], "dst_iter_mem": [199, 224, 306, 345], "workspace_mem": [199, 200, 223, 224, 228, 306, 308, 343, 345, 351], "augru_prim": [199, 306], "augru_arg": [199, 306], "dnnl_arg_augru_attent": [199, 238, 266, 306], "wait": [199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 274, 306, 308, 310, 312, 317, 318, 319, 321, 324, 328, 331, 332, 334, 335, 336, 338, 340, 343, 345, 347, 349, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368, 442, 480, 483], "read_from_dnnl_memori": [199, 200, 201, 202, 209, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 238, 306, 308, 310, 312, 321, 330, 332, 334, 335, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 362, 364, 366], "argc": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 332, 334, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368], "argv": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 306, 308, 310, 312, 314, 317, 318, 319, 321, 323, 324, 328, 332, 334, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368], "handle_example_error": [199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 306, 308, 310, 312, 317, 318, 319, 321, 324, 328, 332, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366], "parse_engine_kind": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 306, 308, 310, 312, 314, 317, 318, 319, 321, 332, 334, 336, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 361, 362, 364, 366, 368], "2020": [200, 201, 202, 208, 209, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 308, 310, 312, 319, 321, 332, 338, 340, 343, 345, 347, 351, 353, 355, 357, 359, 362, 364, 366], "batch_normalization_exampl": [200, 238, 308], "227": [200, 203, 204, 206, 207, 210, 217, 221, 222, 223, 227, 229, 230, 231, 232, 234, 236, 308, 314, 315, 317, 318, 323, 332, 338, 340, 343, 350, 353, 355, 357, 359, 362, 366], "scaleshift_dim": [200, 222, 308, 340], "src_data": [200, 202, 208, 209, 217, 221, 222, 223, 225, 228, 229, 230, 231, 232, 234, 235, 236, 308, 312, 319, 321, 332, 338, 340, 343, 347, 351, 353, 355, 357, 359, 362, 364, 366], "scale_data": [200, 202, 222, 308, 312, 340], "shift_data": [200, 202, 222, 308, 312, 340], "tan": [200, 222, 308, 340], "scaleshift_md": [200, 222, 308, 340], "src_mem": [200, 202, 208, 217, 218, 221, 222, 223, 225, 226, 228, 230, 231, 232, 234, 235, 236, 308, 312, 319, 332, 334, 338, 340, 343, 347, 349, 351, 355, 357, 359, 362, 364, 366], "scale_mem": [200, 202, 222, 308, 312, 340], "shift_mem": [200, 202, 222, 308, 312, 340], "bnorm_pd": [200, 308], "10f": [200, 222, 308, 340], "normalization_flag": [200, 222, 244, 257, 266, 296, 308, 340, 378, 380, 420, 422], "mean_mem": [200, 202, 222, 308, 312, 340], "mean_desc": [200, 222, 308, 340, 378, 380, 420, 422], "variance_mem": [200, 202, 222, 308, 312, 340], "variance_desc": [200, 222, 308, 340, 378, 380, 420, 422], "bnorm_prim": [200, 308], "bnorm_arg": [200, 308], "binary_exampl": [201, 238, 310], "150": [201, 202, 310, 312], "src_0_dim": [201, 310], "src_1_dim": [201, 310], "src_0_data": [201, 310], "src_1_data": [201, 310], "src_0_md": [201, 310], "src_1_md": [201, 310], "src_0_mem": [201, 310], "src_1_mem": [201, 310], "binary_op": [201, 202, 243, 310, 312, 450], "binary_attr": [201, 202, 310, 312], "binary_pd": [201, 202, 310, 312], "binary_prim": [201, 202, 310, 312], "binary_arg": [201, 202, 310, 312], "tmp_dst": [202, 312], "params_dim": [202, 312], "mean_data": [202, 312], "variance_data": [202, 312], "oscale_data": [202, 312], "mean_md": [202, 312], "variance_md": [202, 312], "scale_md": [202, 312], "shift_md": [202, 312], "oscale_md": [202, 312], "oscale_mem": [202, 312], "dst_tmp": [202, 312], "output_scal": [202, 312], "2016": [203, 204, 207, 210, 314, 318, 323], "posix_memalign": [203, 210, 314, 323], "_posix_c_sourc": [203, 210, 238, 314, 323], "200112l": [203, 210, 314, 323], "stdlib": [203, 210, 215, 314, 323, 330], "conv_ih": [203, 210, 238, 314, 323], "conv_iw": [203, 210, 238, 314, 323], "conv_oh": [203, 210, 238, 314, 323], "conv_ow": [203, 210, 238, 314, 323], "conv_strid": [203, 205, 206, 207, 210, 238, 314, 316, 317, 318, 323], "conv_pad": [203, 205, 206, 207, 210, 238, 314, 316, 317, 318, 323], "pool_oh": [203, 210, 238, 314, 323], "27": [203, 204, 206, 207, 210, 228, 314, 317, 318, 323, 351], "pool_ow": [203, 210, 238, 314, 323], "pool_strid": [203, 206, 207, 210, 238, 314, 317, 318, 323], "pool_pad": [203, 204, 206, 207, 210, 238, 314, 315, 317, 318, 323], "arr": [203, 210, 238, 314, 323], "init_net_data": [203, 210, 238, 314, 323], "uint32_t": [203, 206, 207, 210, 238, 314, 317, 318, 323], "1637": [203, 210, 314, 323], "indx": [203, 210, 314, 323], "typedef": [203, 210, 238, 296, 314, 323], "narg": [203, 210, 238, 261, 266, 276, 314, 323, 372], "dnnl_exec_arg_t": [203, 210, 215, 238, 261, 266, 276, 314, 323, 330, 372], "args_t": [203, 210, 238, 314, 323], "prepare_arg_nod": [203, 210, 238, 314, 323], "free_arg_nod": [203, 210, 238, 314, 323], "set_arg": [203, 210, 238, 314, 323], "arg_idx": [203, 210, 238, 314, 323], "dnnl_memory_t": [203, 210, 215, 238, 260, 261, 266, 276, 314, 323, 330, 404], "init_data_memori": [203, 210, 238, 314, 323], "user_tag": [203, 210, 238, 314, 323], "user_md": [203, 210, 314, 323], "dnnl_memory_cr": [203, 210, 215, 238, 260, 314, 323, 330], "dnnl_status_t": [203, 210, 238, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 301, 314, 323, 334, 368, 403], "prepare_reord": [203, 210, 238, 314, 323], "user_memori": [203, 210, 238, 314, 323], "prim_memory_md": [203, 210, 238, 314, 323], "prim_engin": [203, 210, 238, 314, 323], "dir_is_user_to_prim": [203, 210, 238, 314, 323], "prim_memori": [203, 210, 238, 314, 323], "dnnl_primitive_t": [203, 210, 215, 238, 266, 314, 323, 330], "net_index": [203, 210, 238, 314, 323], "inc": [203, 210, 314, 323, 342], "net_arg": [203, 204, 210, 238, 314, 315, 323], "user_memory_md": [203, 210, 314, 323], "dnnl_memory_get_memory_desc": [203, 210, 238, 260, 314, 323], "user_mem_engin": [203, 210, 314, 323], "dnnl_memory_get_engin": [203, 210, 238, 260, 314, 323], "dnnl_memory_desc_equ": [203, 210, 238, 260, 314, 323], "dnnl_primitive_desc_t": [203, 210, 215, 238, 243, 244, 245, 248, 249, 251, 252, 255, 257, 258, 259, 262, 263, 266, 267, 268, 269, 270, 272, 273, 275, 314, 323, 330, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "reorder_pd": [203, 210, 231, 314, 323, 357], "dnnl_reorder_primitive_desc_cr": [203, 210, 215, 238, 268, 314, 323, 330], "dnnl_primitive_cr": [203, 210, 215, 238, 266, 314, 323, 330], "dnnl_primitive_desc_destroi": [203, 210, 215, 238, 266, 314, 323, 330], "simple_net": [203, 204, 206, 207, 210, 212, 213, 233, 238, 314, 316, 317, 318, 323, 361], "dnnl_engine_kind_t": [203, 238, 253, 284, 285, 289, 296, 314], "dnnl_engine_cr": [203, 210, 215, 238, 253, 314, 323, 330], "net_src_siz": [203, 210, 314, 323], "net_dst_siz": [203, 210, 314, 323], "net_src": [203, 206, 207, 210, 212, 213, 233, 314, 317, 318, 323, 326, 327, 361], "net_dst": [203, 207, 210, 212, 213, 233, 314, 318, 323, 326, 327, 361], "memset": [203, 210, 212, 213, 314, 323, 326, 327], "conv_user_src_s": [203, 210, 314, 323], "conv_user_weights_s": [203, 210, 314, 323], "conv_bias_s": [203, 210, 314, 323], "conv_user_dst_s": [203, 210, 314, 323], "conv_dil": [203, 210, 314, 323], "conv_src": [203, 210, 227, 314, 323, 350], "conv_weight": [203, 205, 206, 207, 210, 314, 316, 317, 318, 323], "conv_bia": [203, 205, 206, 207, 210, 314, 316, 317, 318, 323], "conv_user_src_memori": [203, 206, 207, 210, 314, 317, 318, 323], "conv_user_weights_memori": [203, 206, 207, 210, 314, 317, 318, 323], "conv_user_bias_memori": [203, 206, 207, 210, 314, 317, 318, 323], "conv_src_md": [203, 205, 206, 207, 209, 210, 226, 227, 314, 316, 317, 318, 321, 323, 349, 350], "conv_weights_md": [203, 205, 206, 207, 209, 210, 226, 314, 316, 317, 318, 321, 323, 349], "conv_bias_md": [203, 205, 206, 207, 210, 314, 316, 317, 318, 323], "dnnl_convolution_forward_primitive_desc_cr": [203, 210, 238, 249, 314, 323], "conv_internal_src_memori": [203, 210, 314, 323], "conv_internal_weights_memori": [203, 210, 314, 323], "conv_internal_dst_memori": [203, 210, 314, 323], "dnnl_primitive_desc_query_md": [203, 210, 238, 261, 266, 276, 314, 323], "conv_reorder_src": [203, 210, 314, 323], "conv_reorder_weight": [203, 210, 314, 323], "negative_slop": [203, 206, 207, 210, 314, 317, 318, 323], "relu_src_md": [203, 206, 207, 210, 314, 317, 318, 323], "relu_dst_md": [203, 210, 314, 323], "relu_pd": [203, 206, 207, 210, 215, 216, 218, 219, 227, 237, 314, 317, 318, 323, 330, 331, 334, 335, 368], "dnnl_eltwise_forward_primitive_desc_cr": [203, 210, 215, 238, 252, 314, 323, 330], "relu_dst_memori": [203, 206, 207, 210, 314, 317, 318, 323], "0001": [203, 204, 206, 207, 210, 314, 317, 318, 323], "0001f": [203, 204, 206, 207, 210, 314, 317, 318, 323], "75f": [203, 204, 206, 207, 210, 223, 314, 317, 318, 323, 343], "lrn_src_md": [203, 210, 314, 323], "lrn_dst_md": [203, 210, 314, 323], "lrn_pd": [203, 206, 207, 210, 223, 314, 317, 318, 323, 343], "dnnl_lrn_forward_primitive_desc_cr": [203, 210, 238, 258, 314, 323], "lrn_dst_memori": [203, 206, 207, 210, 314, 317, 318, 323], "lrn_ws_memori": [203, 210, 314, 323], "lrn_ws_md": [203, 210, 314, 323], "pool_dst_siz": [203, 210, 314, 323], "pool_kernel": [203, 206, 207, 210, 314, 317, 318, 323], "pool_dil": [203, 204, 206, 207, 210, 314, 315, 317, 318, 323], "pool_src_md": [203, 210, 314, 323], "pool_dst_any_md": [203, 314], "pool_user_dst_memori": [203, 206, 207, 210, 314, 317, 318, 323], "pool_pd": [203, 206, 207, 210, 226, 314, 317, 318, 323, 349], "dnnl_pooling_forward_primitive_desc_cr": [203, 210, 238, 262, 314, 323], "pool_ws_memori": [203, 210, 314, 323], "pool_ws_md": [203, 210, 314, 323], "pool_dst_memori": [203, 206, 207, 210, 314, 317, 318, 323], "pool_reorder_dst": [203, 210, 314, 323], "pool_internal_dst_memori": [203, 210, 314, 323], "pool_dst_md": [203, 206, 207, 210, 226, 314, 317, 318, 323, 349], "tent": [203, 210, 314, 323], "workaround": [203, 210, 314, 323], "dnnl_stream_t": [203, 210, 215, 238, 261, 266, 274, 276, 277, 281, 291, 314, 323, 330], "dnnl_stream_creat": [203, 210, 215, 238, 274, 314, 323, 330], "dnnl_primitive_execut": [203, 210, 215, 238, 243, 266, 314, 323, 330, 404], "dnnl_stream_wait": [203, 210, 215, 238, 260, 274, 314, 323, 330], "clean": [203, 210, 215, 314, 323, 330, 350], "dnnl_stream_destroi": [203, 210, 215, 238, 274, 314, 323, 330], "dnnl_memory_destroi": [203, 210, 215, 238, 260, 314, 323, 330], "dnnl_primitive_destroi": [203, 210, 215, 238, 266, 314, 323, 330], "dnnl_engine_destroi": [203, 210, 215, 238, 253, 314, 323, 330], "printf": [203, 210, 211, 214, 215, 314, 323, 324, 328, 330], "engine_kind2str_upp": [203, 218, 237, 238, 314, 334, 368], "chrono": 204, "100": [204, 220, 336], "eng": [204, 205, 206, 207, 211, 214, 218, 219, 220, 226, 227, 233, 237, 238, 315, 316, 317, 318, 324, 328, 334, 335, 336, 349, 350, 361, 368, 450], "conv1_src_tz": [204, 315], "conv1_weights_tz": [204, 315], "conv1_bias_tz": [204, 315], "conv1_dst_tz": [204, 315], "conv1_pad": [204, 315], "user_src": [204, 205, 227, 315, 316, 350], "user_dst": [204, 205, 227, 315, 316, 350], "1000": [204, 220, 235, 315, 336, 364], "conv1_weight": [204, 315], "conv1_bia": [204, 315], "user_src_memori": [204, 205, 315, 316], "user_weights_memori": [204, 205, 315, 316], "conv1_user_bias_memori": [204, 315], "conv1_prim_desc": [204, 315], "conv1_src_memori": [204, 315], "push_back": [204, 206, 207, 208, 212, 213, 236, 315, 317, 318, 319, 326, 327, 366], "conv1_weights_memori": [204, 315], "conv1_dst_memori": [204, 315], "relu1": 204, "negative1_slop": [204, 315], "relu1_prim_desc": [204, 315], "lrn1": 204, "alpha1": 204, "beta1": 204, "local1_s": 204, "lrn1_prim_desc": 204, "lrn_forward": [204, 206, 207, 223, 258, 296, 317, 318, 343, 432, 456], "lrn1_dst_memori": [204, 315], "pool1": [204, 314, 315], "pool1_dst_tz": 204, "pool1_kernel": [204, 315], "pool1_strid": [204, 315], "pool1_dst_md": [204, 315], "pool1_pd": [204, 315], "pooling_forward": [204, 206, 207, 226, 228, 262, 296, 315, 317, 318, 349, 351, 446, 456], "pool1_dst_memori": [204, 315], "48": 204, "conv2_src_tz": 204, "conv2_weights_tz": 204, "conv2_bias_tz": 204, "conv2_dst_tz": 204, "conv2_strid": 204, "conv2_pad": 204, "conv2_weight": 204, "conv2_bia": 204, "conv2_user_weights_memori": 204, "conv2_user_bias_memori": 204, "conv2_src_md": 204, "conv2_bias_md": 204, "conv2_weights_md": 204, "conv2_dst_md": 204, "conv2_prim_desc": 204, "conv2_src_memori": 204, "conv2_weights_memori": 204, "conv2_dst_memori": 204, "relu2": 204, "negative2_slop": 204, "relu2_prim_desc": 204, "lrn2": 204, "alpha2": 204, "beta2": 204, "local2_s": 204, "k2": 204, "lrn2_prim_desc": 204, "lrn2_dst_memori": 204, "pool2": 204, "pool2_dst_tz": 204, "pool2_kernel": 204, "pool2_strid": 204, "pool2_dil": 204, "pool2_pad": 204, "pool2_dst_md": 204, "pool2_pd": 204, "pool2_dst_memori": 204, "384": [204, 205, 316], "conv3_src_tz": 204, "conv3_weights_tz": 204, "conv3_bias_tz": 204, "conv3_dst_tz": 204, "conv3_strid": 204, "conv3_pad": 204, "conv3_weight": 204, "conv3_bia": 204, "conv3_user_weights_memori": 204, "conv3_user_bias_memori": 204, "conv3_src_md": 204, "conv3_bias_md": 204, "conv3_weights_md": 204, "conv3_dst_md": 204, "conv3_prim_desc": 204, "conv3_src_memori": 204, "conv3_weights_memori": 204, "conv3_dst_memori": 204, "relu3": [204, 205, 316], "negative3_slop": 204, "relu3_prim_desc": 204, "conv4_src_tz": 204, "conv4_weights_tz": 204, "conv4_bias_tz": 204, "conv4_dst_tz": 204, "conv4_strid": 204, "conv4_pad": 204, "conv4_weight": 204, "conv4_bia": 204, "conv4_user_weights_memori": 204, "conv4_user_bias_memori": 204, "conv4_src_md": 204, "conv4_bias_md": 204, "conv4_weights_md": 204, "conv4_dst_md": 204, "conv4_prim_desc": 204, "conv4_src_memori": 204, "conv4_weights_memori": 204, "conv4_dst_memori": 204, "relu4": 204, "negative4_slop": 204, "relu4_prim_desc": 204, "conv5_src_tz": 204, "conv5_weights_tz": 204, "conv5_bias_tz": 204, "conv5_dst_tz": 204, "conv5_strid": 204, "conv5_pad": 204, "conv5_weight": 204, "conv5_bia": 204, "conv5_user_weights_memori": 204, "conv5_user_bias_memori": 204, "conv5_src_md": 204, "conv5_weights_md": 204, "conv5_bias_md": 204, "conv5_dst_md": 204, "conv5_prim_desc": 204, "conv5_src_memori": 204, "conv5_weights_memori": 204, "conv5_dst_memori": 204, "relu5": 204, "negative5_slop": 204, "relu5_prim_desc": 204, "pool5": 204, "pool5_dst_tz": 204, "pool5_kernel": 204, "pool5_strid": 204, "pool5_dil": 204, "pool5_pad": 204, "pool5_dst": 204, "pool5_dst_md": 204, "pool5_pd": 204, "pool5_dst_memori": 204, "fc6": 204, "4096": 204, "fc6_src_tz": 204, "fc6_weights_tz": 204, "fc6_bias_tz": 204, "fc6_dst_tz": 204, "fc6_weight": 204, "fc6_bia": 204, "fc6_user_weights_memori": 204, "fc6_user_bias_memori": 204, "fc6_src_md": 204, "fc6_bias_md": 204, "fc6_weights_md": 204, "fc6_dst_md": 204, "fc6_prim_desc": 204, "inner_product_forward": [204, 221, 255, 296, 338, 414, 416, 456], "fc6_src_memori": 204, "fc6_weights_memori": 204, "fc6_dst_memori": 204, "fc7": 204, "fc7_weights_tz": 204, "fc7_bias_tz": 204, "fc7_dst_tz": 204, "fc7_weight": 204, "fc7_bia": 204, "fc7_user_weights_memori": 204, "fc7_user_bias_memori": 204, "fc7_bias_md": 204, "fc7_weights_md": 204, "fc7_dst_md": 204, "fc7_prim_desc": 204, "fc7_weights_memori": 204, "fc7_dst_memori": 204, "fc8": 204, "fc8_weights_tz": 204, "fc8_bias_tz": 204, "fc8_dst_tz": 204, "fc8_weight": 204, "fc8_bia": 204, "fc8_user_weights_memori": 204, "fc8_user_bias_memori": 204, "user_dst_memori": [204, 205, 316], "fc8_bias_md": 204, "fc8_weights_md": 204, "fc8_dst_md": 204, "fc8_prim_desc": 204, "fc8_weights_memori": 204, "fc8_dst_memori": 204, "someth": [204, 206, 207, 212, 213, 233, 315, 317, 318, 361], "duration_cast": 204, "steady_clock": 204, "time_since_epoch": 204, "stdexcept": [205, 206, 211, 214, 216, 218, 219, 220, 227, 317, 324, 328, 335, 336], "simple_net_int8": 205, "conv_src_tz": [205, 206, 207, 316, 317, 318], "conv_weights_tz": [205, 206, 207, 316, 317, 318], "conv_bias_tz": [205, 206, 207, 316, 317, 318], "conv_dst_tz": [205, 206, 207, 316, 317, 318], "8f": [205, 316], "weight_scal": [205, 316], "55f": [205, 316], "src_mask": [205, 316], "weight_mask": [205, 316], "dst_mask": [205, 316], "user_bias_memori": [205, 316], "conv_attr": [205, 209, 316, 321], "dst_scale_md": [205, 316], "dst_scale_memori": [205, 316], "ops_alpha": [205, 316], "ops_beta": [205, 316], "catch": [205, 206, 213, 218, 237, 317, 327, 334, 368], "conv_prim_desc": [205, 227, 316], "src_attr": [205, 316], "src_scale_md": [205, 316], "src_scale_memori": [205, 316], "src_reorder_pd": [205, 316], "src_reorder": [205, 316], "weight_attr": [205, 316], "wei_scale_md": [205, 316], "wei_scale_memori": [205, 316], "weight_reorder_pd": [205, 316], "weight_reord": [205, 316], "conv_bias_memori": [205, 206, 210, 316, 317, 323], "conv_dst_memori": [205, 206, 207, 316, 317, 318], "dst_attr": [205, 316], "dst_reorder_pd": [205, 316], "dst_reorder": [205, 316], "cassert": [206, 211, 214, 220, 237, 317, 324, 328, 336, 368], "net_fwd": [206, 207, 210, 317, 318, 323], "net_bwd": [206, 207, 210, 317, 318, 323], "net_fwd_arg": [206, 207, 210, 317, 318, 323], "net_bwd_arg": [206, 207, 210, 317, 318, 323], "sinf": [206, 207, 317, 318], "relu_data_tz": [206, 207, 317, 318], "lrn_data_tz": [206, 207, 317, 318], "lrn_workspace_memori": [206, 207, 317, 318], "pool_dst_tz": [206, 207, 317, 318], "pool_workspace_memori": [206, 207, 317, 318], "leav": [206, 207, 317, 318, 328], "until": [206, 207, 260, 315, 317, 318, 328, 368, 442], "diff_data": [206, 207, 210, 317, 318, 323], "net_diff_dst": [206, 207, 210, 233, 317, 318, 323, 361], "pool_user_diff_dst_memori": [206, 207, 210, 317, 318, 323], "pool_diff_src_md": [206, 207, 210, 317, 318, 323], "pool_diff_dst_md": [206, 207, 210, 317, 318, 323], "pool_bwd_pd": [206, 207, 210, 317, 318, 323], "pooling_backward": [206, 207, 262, 296, 317, 318, 456], "pool_diff_dst_memori": [206, 207, 210, 317, 318, 323], "pool_diff_src_memori": [206, 207, 210, 317, 318, 323], "diff_src_desc": [206, 207, 238, 244, 249, 251, 252, 255, 257, 258, 262, 263, 269, 272, 273, 317, 318, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "lrn_diff_dst_md": [206, 207, 210, 317, 318, 323], "lrn_diff_src_md": [206, 207, 210, 317, 318, 323], "lrn_bwd_pd": [206, 207, 210, 317, 318, 323], "lrn_backward": [206, 207, 258, 296, 317, 318, 456], "lrn_diff_dst_memori": [206, 207, 317, 318], "lrn_diff_src_memori": [206, 207, 210, 317, 318, 323], "relu_diff_src_md": [206, 207, 210, 317, 318, 323], "relu_diff_dst_md": [206, 207, 210, 317, 318, 323], "primitive_descriptor": [206, 207, 244, 255, 257, 258, 317, 318], "relu_bwd_pd": [206, 207, 210, 317, 318, 323], "eltwise_backward": [206, 207, 252, 296, 317, 318, 456], "relu_diff_dst_memori": [206, 207, 317, 318], "relu_diff_src_memori": [206, 207, 210, 317, 318, 323], "conv_user_diff_weights_memori": [206, 207, 210, 317, 318, 323], "conv_diff_bias_memori": [206, 207, 210, 317, 318, 323], "conv_bwd_src_md": [206, 207, 317, 318], "conv_diff_weights_md": [206, 207, 210, 317, 318, 323], "conv_diff_dst_md": [206, 207, 210, 317, 318, 323], "conv_diff_bias_md": [206, 207, 210, 317, 318, 323], "conv_bwd_weights_pd": [206, 207, 210, 317, 318, 323], "convolution_backward_weight": [206, 207, 249, 296, 317, 318, 456], "conv_bwd_src_memori": [206, 207, 317, 318], "relu_bwd": [206, 207, 210, 317, 318, 323], "conv_diff_weight": [206, 207, 210, 317, 318, 323], "conv_diff_dst_memori": [206, 207, 210, 317, 318, 323], "conv_diff_weights_memori": [206, 207, 210, 317, 318, 323], "diff_weights_desc": [206, 207, 238, 249, 251, 255, 263, 317, 318, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "didn": [206, 207, 317, 318], "anyth": [206, 207, 261, 299, 317, 318], "n_iter": [206, 207, 210, 317, 318, 323], "net_output": [206, 207, 210, 317, 318, 323], "update_diff_dst": [206, 207, 210, 317, 318, 323], "net_diff_weight": [206, 207, 210, 317, 318, 323], "net_diff_bia": [206, 207, 210, 317, 318, 323], "update_weight": [206, 207, 210, 317, 318, 323], "conv_user_diff_weights_buff": [207, 210, 318, 323], "conv_diff_bias_buff": [207, 210, 318, 323], "concat_exampl": [208, 238, 319], "120": [208, 319], "num_src": [208, 236, 319, 366], "mem": [208, 212, 213, 215, 216, 219, 236, 237, 238, 319, 330, 335, 366, 368], "concat_pd": [208, 319], "dst_mem": [208, 217, 218, 221, 223, 225, 226, 228, 230, 231, 232, 234, 236, 238, 319, 332, 334, 338, 343, 347, 349, 351, 355, 357, 359, 362, 366], "concat_prim": [208, 319], "concat_arg": [208, 319], "convolution_exampl": [209, 238, 321], "strides_dim": [209, 228, 321, 351], "padding_dims_l": [209, 228, 321, 351], "padding_dims_r": [209, 228, 321, 351], "weights_data": [209, 221, 225, 229, 321, 338, 347, 353], "dst_data": [209, 217, 221, 223, 225, 228, 229, 230, 231, 232, 234, 236, 321, 332, 338, 343, 347, 351, 353, 355, 357, 359, 362, 366], "user_src_mem": [209, 229, 321, 353], "user_weights_mem": [209, 221, 229, 321, 338, 353], "user_dst_mem": [209, 229, 321, 353], "user_bias_md": [209, 321], "user_bias_mem": [209, 321], "conv_op": [209, 321], "conv_src_mem": [209, 226, 321, 349], "conv_weights_mem": [209, 226, 321, 349], "conv_dst_mem": [209, 226, 321, 349], "conv_prim": [209, 321], "conv_arg": [209, 321, 450], "depthwise_convolution_exampl": [209, 238, 321], "exit_cod": [209, 218, 237, 321, 334, 368], "idx": [210, 237, 238, 266, 323, 368, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "n_fwd": [210, 323], "n_bwd": [210, 323], "dnnl_pooling_backward_primitive_desc_cr": [210, 238, 262, 323], "pool_internal_diff_dst_memori": [210, 323], "pool_reorder_diff_dst": [210, 323], "pool_bwd": [210, 323], "dnnl_lrn_backward_primitive_desc_cr": [210, 238, 258, 323], "lrn_bwd": [210, 323], "conv_diff_src_md": [210, 323], "dnnl_convolution_backward_weights_primitive_desc_cr": [210, 238, 249, 323], "conv_bwd_reorder_src": [210, 323], "conv_bwd_internal_src_memori": [210, 323], "conv_bwd_weights_src_memori": [210, 323], "conv_reorder_diff_dst": [210, 323], "conv_internal_diff_dst_memori": [210, 323], "conv_reorder_diff_weight": [210, 323], "conv_internal_diff_weights_memori": [210, 323], "conv_bwd_weight": [210, 323], "dnnl_memory_set_data_handl": [210, 238, 260, 261, 276, 323], "dnnl_memory_get_data_handl": [210, 238, 260, 323], "cleanup": [210, 323], "cctype": [211, 214, 220, 324, 328, 336], "cstdio": [211, 214, 220, 324, 328, 336], "random": [211, 214, 220, 324, 328, 336], "type_trait": [211, 324], "init_vector": [211, 214, 220, 324, 328, 336], "min_valu": [211, 324], "max_valu": [211, 324], "mt19937": [211, 214, 220, 324, 328, 336], "uniform_real_distribut": [211, 214, 220, 324, 328, 336], "find_min_max": [211, 324], "compute_q10n_param": [211, 324], "messag": [211, 214, 324, 328, 334, 368, 403, 489], "max_int": [211, 324], "numeric_limit": [211, 214, 324, 328], "min_int": [211, 324], "lowest": [211, 324], "ifndef": [211, 324], "omit_workaround_for_skx": [211, 324], "dev_guide_int8_comput": [211, 324], "html": [211, 324], "endif": [211, 237, 324, 368], "min_val": [211, 324], "max_val": [211, 324], "tcomput": [211, 324], "q10n": [211, 324], "tdata": [211, 324], "tscale": [211, 324], "3g": [211, 324], "invers": [211, 324], "tzero": [211, 324], "compare_vector": [211, 214, 324, 328], "scale_v2": [211, 324], "zp_v2": [211, 324], "threshold": [211, 214, 324, 328], "v1_l2": [211, 214, 324, 328], "diff_l2": [211, 214, 324, 328], "v2_n": [211, 324], "deq10n": [211, 324], "ok": [211, 214, 324, 328], "tcomparison": [211, 324], "trefer": [211, 214, 324, 328], "terror": [211, 214, 324, 328], "trel": [211, 324], "naccuraci": [211, 324], "x_int_m": [211, 238, 324], "x_f32": [211, 238, 324], "scale_x": [211, 238, 324], "zp_x": [211, 238, 324], "q10n_scheme": [211, 324], "mimic": [211, 324], "x_int_md": [211, 324], "x_f32_md": [211, 324], "x_f32_m": [211, 324], "q10n_attr": [211, 324], "q10n_pd": [211, 324], "dst_scale_x_m": [211, 324], "zp_x_m": [211, 324], "f32_matmul_comput": [211, 238, 324], "a_f32": [211, 238, 324], "b_f32": [211, 220, 238, 324, 336], "c_f32": [211, 238, 324], "a_md": [211, 214, 220, 324, 328, 336], "b_md": [211, 214, 220, 324, 328, 336], "c_md": [211, 214, 220, 324, 328, 336], "wrap": [211, 214, 216, 324, 328, 402, 403, 411, 442, 456, 480], "a_f32_m": [211, 324], "b_f32_m": [211, 324], "c_f32_m": [211, 324], "matmul_pd": [211, 214, 220, 225, 324, 328, 336, 347], "matmul_p": [211, 214, 220, 238, 324, 328, 336], "scale_c": [211, 238, 324], "zp_c": [211, 220, 238, 324, 336], "dynamic_q10n_matmul": [211, 238, 324], "c_u8": [211, 220, 238, 324, 336], "scale_a": [211, 324], "scale_b": [211, 324], "zp_a": [211, 220, 324, 336], "zp_b": [211, 324], "a_u8_md": [211, 324], "a_u8_m": [211, 324], "b_s8_md": [211, 324], "b_s8_m": [211, 324], "breviti": [211, 324], "emb": [211, 324], "anywai": [211, 324], "theori": [211, 324], "postpon": [211, 324], "exercis": [211, 324], "c_f32_md": [211, 324], "matmul_attr": [211, 225, 324, 347], "scales_a_m": [211, 324], "scales_b_m": [211, 324], "zp_a_m": [211, 324], "c_u8_md": [211, 324], "c_u8_m": [211, 324], "compare_f32_and_quantized_matmul": [211, 238, 324], "param_a_min_v": [211, 324], "param_a_max_v": [211, 324], "4f": [211, 223, 324, 343], "param_b_min_v": [211, 324], "param_b_max_v": [211, 324], "center": [211, 324, 336], "threshold_dynamic_q10n": [211, 324], "2f": [211, 213, 324, 327], "_true_": [211, 324], "c_u8_dynamic_q10n": [211, 324], "scale_c_dynamic_q10n": [211, 324], "zp_c_dynamic_q10n": [211, 324], "rc": [211, 214, 324, 328], "logic_error": [211, 214, 216, 218, 219, 220, 324, 328, 331, 334, 335, 336], "gnmt": [212, 213, 233, 326, 327, 361], "cstring": [212, 213, 233, 361], "dim_t": [212, 213, 238, 327], "src_seq_length_max": [212, 213, 238, 326, 327], "tgt_seq_length_max": [212, 213, 238, 326, 327], "feature_s": [212, 213, 238, 326, 327], "enc_bidir_n_lay": [212, 213, 238, 326, 327], "enc_unidir_n_lay": [212, 213, 238, 326, 327], "dec_n_lay": [212, 213, 238, 326, 327], "lstm_n_gate": [212, 213, 233, 238, 326, 327, 361], "weighted_src_lay": [212, 213, 238], "alignment_model": [212, 213, 238], "exp_sum": [212, 213, 238], "compute_weighted_annot": [212, 213, 238, 326, 327], "weighted_annot": [212, 213, 238, 326, 327], "weights_annot": [212, 213, 238], "enc_dst_lay": [212, 213], "num_weighted_annot": [212, 213], "dnnl_sgemm": [212, 213, 214, 238, 246, 328], "compute_attent": [212, 213, 238, 326, 327], "context_vector": [212, 213, 238], "weights_src_lay": [212, 213, 238], "dec_src_lay": [212, 213, 238], "weights_align": [212, 213, 238], "dst_iter": [212, 213, 233, 243, 326, 361, 458], "src_layer": [212, 213, 233, 243, 326, 327, 361, 458], "weights_yi": [212, 213], "weights_ai": [212, 213], "tmp": [212, 213, 271], "weighted_dec_src_lay": [212, 213], "alignment_model_ptr": [212, 213], "pragma_omp_parallel_for_collaps": [212, 213, 238], "tanhf": [212, 213], "gemv": [212, 213], "expf": [212, 213], "copy_context": [212, 213, 238, 326, 327], "src_iter": [212, 213, 233, 238, 243, 326, 327, 361, 458], "n_layer": [212, 213, 238], "cpu_engin": [212, 213, 216, 326, 327, 331], "encoder_net": [212, 213, 326, 327], "decoder_net": [212, 213, 326, 327], "encoder_net_arg": [212, 213, 326, 327], "decoder_net_arg": [212, 213, 326, 327], "enc_bidir_src_layer_tz": [212, 213, 326, 327], "enc_bidir_weights_layer_tz": [212, 213, 326, 327], "enc_bidir_weights_iter_tz": [212, 213, 326, 327], "enc_bidir_bias_tz": [212, 213, 326, 327], "enc_bidir_dst_layer_tz": [212, 213, 326, 327], "user_enc_bidir_wei_lay": [212, 213, 326, 327], "user_enc_bidir_wei_it": [212, 213, 326, 327], "user_enc_bidir_bia": [212, 213, 326, 327], "user_enc_bidir_src_layer_md": [212, 213, 326, 327], "user_enc_bidir_wei_layer_md": [212, 213, 326, 327], "user_enc_bidir_wei_iter_md": [212, 213, 326, 327], "user_enc_bidir_bias_md": [212, 213, 326, 327], "user_enc_bidir_src_layer_memori": [212, 213, 326, 327], "user_enc_bidir_wei_layer_memori": [212, 213, 326, 327], "user_enc_bidir_wei_iter_memori": [212, 213, 326, 327], "user_enc_bidir_bias_memori": [212, 213, 326, 327], "enc_bidir_wei_layer_md": [212, 213, 326, 327], "enc_bidir_wei_iter_md": [212, 213, 326, 327], "enc_bidir_dst_layer_md": [212, 213, 326, 327], "enc_bidir_prim_desc": [212, 213, 326, 327], "enc_bidir_wei_layer_memori": [212, 213, 326, 327], "enc_bidir_wei_layer_reorder_pd": [212, 213, 326], "enc_bidir_wei_iter_memori": [212, 213, 326, 327], "enc_bidir_wei_iter_reorder_pd": [212, 213], "enc_bidir_dst_layer_memori": [212, 213, 326, 327], "bi": [212, 213], "user_enc_uni_first_wei_lay": [212, 213, 326, 327], "user_enc_uni_first_wei_it": [212, 213, 326, 327], "user_enc_uni_first_bia": [212, 213, 326, 327], "user_enc_uni_first_wei_layer_dim": [212, 213], "user_enc_uni_first_wei_iter_dim": [212, 213], "user_enc_uni_first_bias_dim": [212, 213], "enc_uni_first_dst_layer_dim": [212, 213], "user_enc_uni_first_wei_layer_md": [212, 213], "user_enc_uni_first_wei_iter_md": [212, 213], "user_enc_uni_first_bias_md": [212, 213, 326, 327], "user_enc_uni_first_wei_layer_memori": [212, 213], "user_enc_uni_first_wei_iter_memori": [212, 213], "user_enc_uni_first_bias_memori": [212, 213, 326, 327], "enc_uni_first_wei_layer_md": [212, 213, 326, 327], "enc_uni_first_wei_iter_md": [212, 213, 326, 327], "enc_uni_first_dst_layer_md": [212, 213, 326, 327], "enc_uni_first_prim_desc": [212, 213, 326, 327], "enc_uni_first_wei_layer_memori": [212, 213, 326, 327], "enc_uni_first_wei_layer_reorder_pd": 212, "enc_uni_first_wei_iter_memori": [212, 213, 326, 327], "enc_uni_first_wei_iter_reorder_pd": 212, "enc_uni_first_dst_layer_memori": [212, 213, 326, 327], "user_enc_uni_wei_lay": [212, 213, 326, 327], "user_enc_uni_wei_it": [212, 213, 326, 327], "user_enc_uni_bia": [212, 213, 326, 327], "user_enc_uni_wei_layer_dim": [212, 213], "user_enc_uni_wei_iter_dim": [212, 213], "user_enc_uni_bias_dim": [212, 213], "enc_dst_layer_dim": [212, 213], "user_enc_uni_wei_layer_md": [212, 213], "user_enc_uni_wei_iter_md": [212, 213], "user_enc_uni_bias_md": [212, 213, 326, 327], "user_enc_uni_wei_layer_memori": [212, 213], "user_enc_uni_wei_iter_memori": [212, 213], "user_enc_uni_bias_memori": [212, 213, 326, 327], "enc_uni_wei_layer_md": [212, 213, 326, 327], "enc_uni_wei_iter_md": [212, 213, 326, 327], "enc_dst_layer_md": [212, 213, 326, 327], "enc_uni_prim_desc": [212, 213, 326, 327], "enc_uni_wei_layer_memori": [212, 213, 326, 327], "enc_uni_wei_layer_reorder_pd": [212, 213], "enc_uni_wei_iter_memori": [212, 213, 326, 327], "enc_uni_wei_iter_reorder_pd": [212, 213], "enc_dst_layer_memori": [212, 213, 326, 327], "dec": [212, 213], "user_dec_wei_lay": [212, 213, 326, 327], "user_dec_wei_it": [212, 213, 326, 327], "user_dec_bia": [212, 213, 326, 327], "user_dec_dst": [212, 326], "user_weights_attention_src_lay": [212, 213, 326, 327], "user_weights_annot": [212, 213, 326, 327], "user_weights_align": [212, 213, 326, 327], "user_dec_wei_layer_dim": [212, 213, 326, 327], "user_dec_wei_iter_dim": [212, 213, 326, 327], "user_dec_bias_dim": [212, 213, 326, 327], "dec_src_layer_dim": [212, 213, 326, 327], "dec_dst_layer_dim": [212, 213, 326, 327], "dec_dst_iter_c_dim": [212, 213, 326, 327], "noctx": [212, 213], "dec_dst_iter_dim": [212, 213, 326, 327], "dec_dst_iter_noctx_dim": [212, 213, 326, 327], "user_dec_wei_layer_md": [212, 213, 326, 327], "user_dec_wei_iter_md": [212, 213, 326, 327], "user_dec_bias_md": [212, 213, 326, 327], "dec_dst_layer_md": [212, 213, 326, 327], "dec_src_layer_md": [212, 213, 326, 327], "dec_dst_iter_md": [212, 213, 326, 327], "dec_dst_iter_c_md": [212, 213, 326, 327], "user_dec_wei_layer_memori": [212, 213, 326, 327], "user_dec_wei_iter_memori": [212, 213, 326, 327], "user_dec_bias_memori": [212, 213, 326, 327], "user_dec_dst_layer_memori": [212, 326], "dec_src_layer_memori": [212, 213, 326, 327], "dec_dst_iter_c_memori": [212, 213, 326, 327], "dec_wei_layer_md": [212, 213, 326], "dec_wei_iter_md": [212, 213, 326], "dec_dst_iter_memori": [212, 213, 326, 327], "dec_dst_iter_noctx_md": [212, 213, 326, 327], "dec_ctx_prim_desc": [212, 213, 326, 327], "dec_wei_layer_memori": [212, 213, 326, 327], "dec_wei_layer_reorder_pd": [212, 213, 326, 327], "dec_wei_iter_memori": [212, 213, 326], "dec_wei_iter_reorder_pd": [212, 213, 326], "enc": [212, 213], "ano": [212, 213], "init": [212, 213, 218, 219, 227, 335], "src_att_layer_handl": [212, 213, 326, 327], "src_att_iter_handl": [212, 213, 326, 327], "att": [212, 213], "ctx": [212, 213], "cp": [212, 213], "dst_layer_handl": [212, 213, 326, 327], "compute_sum_of_row": [213, 238, 327], "col": [213, 238], "a_reduc": [213, 238], "weights_src_layer_scal": [213, 238], "dec_src_layer_scal": [213, 238], "dec_src_layer_shift": [213, 238], "tnc_offset": 213, "a_i": 213, "max_idx": 213, "max_idx_v": 213, "1f": [213, 214, 327, 328], "data_shift": [213, 327], "data_scal": [213, 327], "weights_scale_mask": [213, 327], "weights_scal": [213, 327], "halv": [213, 327], "scales_half": [213, 327], "65": [213, 327], "3f": [213, 229, 327, 353], "enc_bidir_src_layer_md": [213, 327], "attri": 213, "enc_bidir_src_layer_memori": [213, 327], "enc_bidir_src_layer_reorder_pd": [213, 327], "weights_attention_scal": [213, 327], "dec_dst": [213, 327], "dec_src_it": [213, 326], "dec_dst_it": [213, 326, 327], "dec_dst_layer_memori": [213, 327], "weights_attention_sum_row": [213, 327], "s8u8s32": [213, 327], "tight": [214, 328], "difficult": [214, 328], "finit": [214, 328], "tl2": [214, 328], "trelative_error": [214, 328], "taccuraci": [214, 328], "number_of_run": [214, 220, 238, 328, 336], "fixed_beta": [214, 238, 328], "_dynamic_": [214, 328], "dynamic_matmul_cr": [214, 238, 328], "a_shap": [214, 328], "b_shape": [214, 328], "c_shape": [214, 328], "a_strid": [214, 328], "b_stride": [214, 328], "c_stride": [214, 328], "earlier": [214, 328, 334, 368], "dynamic_matmul_execut": [214, 238, 328], "transa": [214, 238, 246, 277, 296, 301, 328], "transb": [214, 238, 246, 277, 296, 301, 328], "lda": [214, 238, 246, 277, 296, 301, 328], "ldb": [214, 238, 246, 277, 296, 301, 328], "ldc": [214, 238, 246, 277, 296, 301, 328], "translat": [214, 328], "tolow": [214, 328], "a_m": [214, 328], "b_m": [214, 328], "c_m": [214, 328], "alpha_m": [214, 328], "sgemm_and_matmul_with_param": [214, 238, 328], "c_sgemm": [214, 328], "c_dynamic_matmul": [214, 328], "dynamic_matmul": [214, 328], "diverg": [214, 328], "sgemm_and_matmul": [214, 238, 328], "n_dim": [215, 238, 330], "n_elem": [215, 330], "complain_example_error_and_exit": [215, 238, 330], "find_neg": [215, 216, 238, 330, 331], "engine_cpu": [215, 330], "engine_gpu": [215, 330], "validate_engine_kind": [215, 216, 238, 330, 331], "tz": [215, 216, 330, 331], "m_cpu_md": [215, 330], "m_gpu_md": [215, 330], "m_cpu": [215, 216, 330, 331], "m_gpu": [215, 216, 330, 331], "r1_pd": [215, 330], "r1": [215, 216, 330, 331], "r2_pd": [215, 330], "r2": [215, 216, 330, 331], "stream_gpu": [215, 216, 330, 331], "r1_arg": [215, 330], "relu_arg": [215, 330], "r2_arg": [215, 330], "prologu": [216, 218, 219, 227, 237], "nelem": 216, "cross_engine_reorder_tutori": 216, "gpu_engin": [216, 331], "eltwise_exampl": [217, 238, 332], "eltwise_pd": [217, 332], "eltwise_prim": [217, 332], "eltwise_arg": [217, 332], "dnnl_debug": [218, 237, 331, 334, 335, 368], "getting_started_tutori": 218, "image_s": [218, 334], "alt_src_md": [218, 334], "saniti": [218, 220, 334, 336], "obj": [218, 334], "relu_imag": [218, 334], "got": [218, 219, 334, 335], "caught": [218, 237, 334, 368], "tstatu": [218, 237, 334, 368], "dnnl_status2str": [218, 237, 238, 334, 368], "tmessag": [218, 237, 334, 368], "ocl_check": [219, 238, 335], "cl_int": 219, "cl_success": 219, "__file__": 219, "__line__": 219, "cl_kernel": [219, 238, 335], "create_init_opencl_kernel": [219, 238, 335], "ocl_ctx": [219, 238], "kernel_nam": [219, 238, 335], "ocl_cod": [219, 238, 335], "err": 219, "cl_program": 219, "ocl_program": 219, "clcreateprogramwithsourc": 219, "clbuildprogram": 219, "ocl_kernel": 219, "clcreatekernel": 219, "clreleaseprogram": 219, "gpu_opencl_interop_tutori": 219, "strm": [219, 237, 335, 368], "tz_dim": [219, 233, 237, 335, 361, 368], "mem_d": [219, 237, 335, 368], "__kernel": [219, 335], "__global": [219, 335], "get_global_id": [219, 335], "oclkernel": 219, "ocl_init_kernel": [219, 335], "oclexecut": 219, "ocl_buf": [219, 335], "clsetkernelarg": [219, 335], "ocl_queu": [219, 335], "clenqueuendrangekernel": [219, 335], "mem_data": [219, 335], "clreleasekernel": 219, "uniform_int_distribut": [220, 336], "static_cast": [220, 336], "sc_a": [220, 336], "sc_b": [220, 336], "sc_c": [220, 336], "mlp": [220, 336], "matmul_pd_cr": [220, 238, 336], "prepare_input": [220, 238, 336], "a_u8_mem": [220, 238, 336], "sc_a_mem": [220, 238, 336], "sc_b_mem": [220, 238, 336], "sc_c_mem": [220, 238, 336], "zp_a_mem": [220, 238, 336], "zp_c_mem": [220, 238, 336], "25f": [220, 336], "40": [220, 336], "sanity_check": [220, 238, 336], "c_u8_mem": [220, 238, 336], "smoke": [220, 336], "tquantiz": [220, 336], "twhich": [220, 336], "b_s8_mem": [220, 238, 336], "meaning": [220, 336], "b_f32_mem": [220, 336], "inner_product_exampl": [221, 238, 338], "inner_product_weights_md": [221, 338], "inner_product_op": [221, 338], "inner_product_attr": [221, 338], "inner_product_pd": [221, 338], "inner_product_weights_mem": [221, 338], "inner_product_prim": [221, 338], "inner_product_arg": [221, 338], "layer_normalization_exampl": [222, 238, 340], "lnorm_pd": [222, 340], "lnorm_prim": [222, 340], "lnorm_arg": [222, 340], "lrn_exampl": [223, 238, 343], "lrn_prim": [223, 343], "lrn_arg": [223, 343], "lstm_exampl": [224, 238, 345], "lstm_weights_layer_md": [224, 345], "lstm_weights_iter_md": [224, 345], "src_iter_c_md": [224, 345], "dst_iter_c_md": [224, 345], "lstm_weights_layer_mem": [224, 345], "lstm_weights_iter_mem": [224, 345], "src_iter_c_mem": [224, 345], "dst_iter_c_mem": [224, 345], "lstm_prim": [224, 345], "lstm_arg": [224, 345], "matmul_exampl": [225, 238, 347], "weights_mem": [225, 226, 347, 349], "matmul_op": [225, 347], "matmul_prim": [225, 347], "matmul_arg": [225, 347], "sstream": 226, "memory_format_propagation_tutori": 226, "need_reorder_src": [226, 349], "need_reorder_weight": [226, 349], "need_reorder_dst": [226, 349], "pool_dst_mem": [226, 349], "reorder_src": [226, 349], "reorder_weight": [226, 349], "conv_scratchpad_mem": [226, 349], "pool_scratchpad_mem": [226, 349], "reorder_dst": [226, 349], "init_data": [227, 238], "create_and_execute_relu": [227, 238, 350], "create_attr_with_relu_post_op": [227, 238, 350], "naiv": 227, "conv_relu_na": [227, 350], "user_wei": [227, 350], "mem_desc": 227, "conv_wei_md": [227, 350], "conv_primit": 227, "conv_relu_block": [227, 350], "implementation2": 227, "condition": 227, "r_pd": [227, 350], "conv_wei": [227, 350], "conv_dst": [227, 350], "prim_descriptor": 227, "conv_relu_fus": [227, 350], "prim_desc": 227, "implementation3": 227, "synthet": [227, 350], "pooling_exampl": [228, 238, 351], "kernel_dim": [228, 351], "pooling_pd": [228, 351], "pooling_prim": [228, 351], "pooling_arg": [228, 351], "prelu_exampl": [229, 238, 353], "prelu_pd": [229, 353], "prelu_forward": [229, 263, 296, 353, 452, 456], "prelu_weights_mem": [229, 353], "prelu_prim": [229, 353], "prelu_arg": [229, 353], "reduction_exampl": [230, 238, 355], "reduction_pd": [230, 355], "reduction_prim": [230, 355], "reduction_arg": [230, 355], "reorder_exampl": [231, 238, 357], "ic_dim": [231, 357], "reorder_attr": [231, 357], "dst_scales_mem": [231, 357], "reorder_prim": [231, 357], "reorder_arg": [231, 357], "resampling_exampl": [232, 238, 359], "350": [232, 359], "resampling_pd": [232, 359], "resampling_forward": [232, 269, 296, 359, 456, 467], "resampling_prim": [232, 359], "resampling_arg": [232, 359], "n0": [233, 238, 361], "t0": [233, 238, 361], "rand": [233, 238, 361], "n1": [233, 238, 361], "chunk": [233, 361], "compact": [233, 350, 361], "leftmost": [233, 361], "leftmost_batch": [233, 238, 361], "rightmost_batch": [233, 238, 361], "leftmost_seq_length": [233, 238, 361], "rightmost_seq_length": [233, 238, 361], "common_feature_s": [233, 238, 361], "characterist": [233, 334, 361], "common_n_lay": [233, 238, 361], "is_train": [233, 361], "fwd_inf_train": [233, 361], "fwd_net": [233, 361], "bwd_net": [233, 361], "shorter": [233, 361], "net_src_dim": [233, 361], "leftmost_src_layer_dim": [233, 361], "rightmost_src_layer_dim": [233, 361], "common_weights_layer_dim": [233, 361], "common_weights_iter_dim": [233, 361], "common_bias_dim": [233, 361], "leftmost_dst_layer_dim": [233, 361], "rightmost_dst_layer_dim": [233, 361], "arrang": [233, 361], "our": [233, 335, 349, 361, 368], "leftmost_dst_iter_dim": [233, 361], "leftmost_dst_iter_c_dim": [233, 361], "rightmost_src_iter_dim": [233, 361], "rightmost_src_iter_c_dim": [233, 361], "tz_volum": [233, 361], "auxillari": [233, 361], "suppli": [233, 361], "formatted_md": [233, 361], "generic_md": [233, 361], "studi": [233, 361], "suggest": [233, 361], "leftmost_dst_layer_memori": [233, 361], "rightmost_dst_layer_memori": [233, 361], "net_src_memori": [233, 361], "accommod": [233, 349, 361], "user_leftmost_src_layer_md": [233, 361], "user_rightmost_src_layer_md": [233, 361], "leftmost_src_layer_memori": [233, 361], "rightmost_src_layer_memori": [233, 361], "ll": [233, 361], "user_common_weights_lay": [233, 361], "user_common_weights_layer_memori": [233, 361], "user_common_weights_it": [233, 361], "user_common_weights_iter_memori": [233, 361], "user_common_bia": [233, 361], "user_common_bias_memori": [233, 361], "user_leftmost_dst_lay": [233, 361], "user_leftmost_dst_layer_memori": [233, 361], "user_rightmost_dst_lay": [233, 361], "user_rightmost_dst_layer_memori": [233, 361], "leftmost_prim_desc": [233, 361], "aprop_kind": [233, 361, 374, 376, 378, 380, 384, 390, 396, 400, 408, 410, 418, 420, 422, 424, 426, 428, 430, 434, 436, 438, 448, 454, 460, 465, 469, 470, 474, 478, 482, 485, 487], "leftmost_dst_iter_memori": [233, 361], "leftmost_dst_iter_c_memori": [233, 361], "rightmost_src_iter_md": [233, 361], "rightmost_src_iter_memori": [233, 361], "rightmost_src_iter_c_md": [233, 361], "rightmost_src_iter_c_memori": [233, 361], "rightmost_prim_desc": [233, 361], "rigthmost": [233, 361], "common_weights_layer_memori": [233, 361], "common_weights_iter_memori": [233, 361], "common_bias_memori": [233, 361], "workspace_primitive_desc": [233, 361], "commun": [233, 361], "create_w": [233, 361], "leftmost_workspace_memori": [233, 361], "rightmost_workspace_memori": [233, 361], "leftmost_lay": [233, 361], "rightmost_lay": [233, 361], "net_diff_src": [233, 361], "net_diff_src_memori": [233, 361], "user_leftmost_diff_src_layer_md": [233, 361], "user_rightmost_diff_src_layer_md": [233, 361], "leftmost_diff_src_layer_memori": [233, 361], "rightmost_diff_src_layer_memori": [233, 361], "backpropag": [233, 361], "user_common_diff_weights_lay": [233, 361], "user_common_diff_weights_layer_memori": [233, 361], "user_common_diff_bia": [233, 361], "user_common_diff_bias_memori": [233, 361], "net_diff_dst_dim": [233, 361], "net_diff_dst_memori": [233, 361], "diff_dst_lay": [233, 361], "user_leftmost_diff_dst_layer_md": [233, 361], "user_rightmost_diff_dst_layer_md": [233, 361], "leftmost_diff_dst_layer_memori": [233, 361], "rightmost_diff_dst_layer_memori": [233, 361], "leftmost_bwd_prim_desc": [233, 361], "diff_src_layer_desc": [233, 238, 270, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "diff_src_iter_desc": [233, 238, 270, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "diff_src_iter_c_desc": [233, 238, 270, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "diff_weights_layer_desc": [233, 238, 270, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "diff_weights_iter_desc": [233, 238, 270, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "diff_bias_desc": [233, 238, 249, 251, 255, 270, 361, 374, 376, 388, 394, 408, 410, 416, 424, 426, 428, 430, 436, 438, 470, 485, 487], "diff_dst_layer_desc": [233, 238, 270, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "diff_dst_iter_desc": [233, 238, 270, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "diff_dst_iter_c_desc": [233, 238, 270, 361, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "leftmost_diff_dst_iter_memori": [233, 361], "leftmost_diff_dst_iter_c_memori": [233, 361], "rightmost_diff_src_iter_md": [233, 361], "rightmost_diff_src_iter_memori": [233, 361], "rightmost_diff_src_iter_c_md": [233, 361], "rightmost_diff_src_iter_c_memori": [233, 361], "rightmost_bwd_prim_desc": [233, 361], "leftmost_src_layer_bwd_memori": [233, 361], "rightmost_src_layer_bwd_memori": [233, 361], "common_weights_layer_bwd_memori": [233, 361], "common_weights_iter_bwd_memori": [233, 361], "common_bias_bwd_memori": [233, 361], "common_diff_weights_layer_memori": [233, 361], "reorder_common_diff_weights_lay": [233, 361], "common_diff_bias_memori": [233, 361], "reorder_common_diff_bia": [233, 361], "dst_layer": [233, 243, 361, 458], "leftmost_dst_layer_bwd_memori": [233, 361], "rightmost_dst_layer_bwd_memori": [233, 361], "common_diff_weights_iter_memori": [233, 361], "leftmost_dst_iter_bwd_memori": [233, 361], "leftmost_dst_iter_c_bwd_memori": [233, 361], "rightmost_layer_bwd": [233, 361], "leftmost_layer_bwd": [233, 361], "shuffle_exampl": [234, 238, 362], "shuffle_axi": [234, 362], "shuffle_pd": [234, 362], "shuffle_forward": [234, 272, 296, 362, 456, 472], "shuffle_prim": [234, 362], "shuffle_arg": [234, 362], "softmax_exampl": [235, 238, 364], "softmax_pd": [235, 364], "softmax_forward": [235, 273, 296, 364, 456, 476], "softmax_prim": [235, 364], "softmax_arg": [235, 364], "sum_exampl": [236, 238, 366], "sum_pd": [236, 366], "sum_prim": [236, 366], "sum_arg": [236, 366], "2023": 237, "__has_includ": [237, 368], "elif": [237, 368], "kernel_tag": [237, 368], "sycl_interop_buffer_tutori": 237, "buf": [237, 238, 291], "sycl_buf": [237, 368], "handler": [237, 368], "cgh": [237, 368], "get_access": [237, 368], "host_acc": [237, 368], "get_host_access": [237, 368], "exp_valu": [237, 368], "dnnl_memory_desc": [238, 260], "dnnl_memori": [238, 260], "const_dnnl_memory_t": [238, 260, 261, 276], "dnnl_primitive_desc": [238, 266], "dnnl_primitive_attr": [238, 243], "const_dnnl_primitive_attr_t": [238, 243, 244, 245, 248, 249, 251, 252, 255, 257, 258, 259, 262, 263, 266, 267, 268, 269, 270, 272, 273, 275], "dnnl_post_op": [238, 243], "const_dnnl_post_ops_t": [238, 243], "dnnl_primit": [238, 266], "const_dnnl_primitive_t": [238, 261, 266, 276], "dnnl_engin": [238, 253], "dnnl_stream": [238, 274], "const_dnnl_stream_t": [238, 274], "dnnl_graph_sycl_allocate_f": [238, 280, 291, 298], "dev": [238, 291], "dnnl_graph_sycl_deallocate_f": [238, 280, 291, 298], "dnnl_graph_partit": [238, 289], "const_dnnl_graph_partition_t": [238, 289], "dnnl_graph_graph": [238, 285], "dnnl_graph_graph_t": [238, 285], "const_dnnl_graph_graph_t": [238, 285], "dnnl_graph_op": [238, 288], "dnnl_graph_op_t": [238, 285, 288], "const_dnnl_graph_op_t": [238, 288, 289], "dnnl_graph_alloc": [238, 280], "dnnl_graph_allocator_t": [238, 280, 291], "const_dnnl_graph_allocator_t": [238, 280, 284, 291], "dnnl_graph_compiled_partit": [238, 281], "const_dnnl_graph_compiled_partition_t": [238, 281, 291], "dnnl_graph_tensor": [238, 292], "dnnl_graph_tensor_t": [238, 292], "const_dnnl_graph_tensor_t": [238, 281, 291, 292], "dnnl_cpu_isa_hints_t": [238, 271], "dnnl_cpu_isa_t": [238, 271], "dnnl_fpmath_mode_t": [238, 243, 254, 285, 296], "dnnl_graph_layout_type_t": [238, 287, 406], "dnnl_graph_op_attr_t": [238, 288], "dnnl_graph_op_kind_t": [238, 288], "dnnl_graph_partition_policy_t": [238, 285, 289], "dnnl_graph_tensor_property_t": [238, 287, 406], "dnnl_normalization_flags_t": [238, 244, 257, 266, 296], "dnnl_ocl_interop_memory_kind_t": [238, 261, 299], "dnnl_prop_kind_t": [238, 243, 244, 249, 251, 252, 255, 257, 258, 262, 263, 266, 269, 270, 272, 273, 296], "dnnl_rnn_flags_t": [238, 270, 296], "dnnl_scratchpad_mode_t": [238, 243, 296], "dnnl_stream_flags_t": [238, 274], "dnnl_sycl_interop_memory_kind_t": [238, 276, 300], "dnnl_graph_inplace_pair_t": [238, 281], "gemm_dims_t": 238, "min_run": 238, "bnorm_u8_via_binary_postop": [238, 305, 312], "cnn_inference_f32": [238, 305, 315], "check_result": 238, "sparse_matmul": 238, "cross_engine_reord": [238, 305, 330, 331], "initializer_list": 238, "extra_arg": 238, "get_type_str": 238, "print_test_cas": 238, "fill_random": 238, "is_integ": 238, "run_cas": 238, "time_limit": 238, "bad_arg": 238, "matmul_perf": 238, "performance_profil": [238, 305, 350], "sycl_usm_tutori": 238, "inference_int8_matmul": [238, 305, 336], "dnnl_api": [238, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292], "dnnl_primitive_desc_next_impl": [238, 266], "existing_primitive_desc": [238, 266], "dnnl_primitive_desc_get_attr": [238, 266], "dnnl_primitive_desc_query_s32": [238, 266], "dnnl_primitive_create_from_cache_blob": [238, 266], "cache_blob": [238, 261, 266, 299, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 445, 447, 451, 453, 456, 462, 464, 466, 468, 471, 473, 475, 477, 481, 484, 486], "dnnl_primitive_get_primitive_desc": [238, 266], "dnnl_primitive_get_cache_blob": [238, 266], "dnnl_primitive_attr_clon": [238, 243], "existing_attr": [238, 243], "dnnl_primitive_attr_get_fpmath_mod": [238, 243], "dnnl_primitive_attr_set_fpmath_mod": [238, 243], "dnnl_primitive_attr_get_scratchpad_mod": [238, 243], "dnnl_primitive_attr_set_zero_points_mask": [238, 243, 458], "dnnl_primitive_attr_get_post_op": [238, 243], "dnnl_post_ops_cr": [238, 243], "dnnl_post_ops_clon": [238, 243], "existing_post_op": [238, 243], "dnnl_post_ops_destroi": [238, 243], "dnnl_post_ops_len": [238, 243], "dnnl_post_ops_get_kind": [238, 243], "dnnl_post_ops_append_sum": [238, 243], "dnnl_post_ops_get_params_sum": [238, 243], "dnnl_post_ops_get_params_eltwis": [238, 243], "weights_data_typ": [238, 243, 450], "bias_data_typ": [238, 243, 450], "dst_data_typ": [238, 243, 450], "kernel_s": [238, 243, 450], "stride_s": [238, 243, 450], "padding_l_s": [238, 243, 450], "dnnl_post_ops_get_params_dw": [238, 243], "src1_desc": [238, 243, 245, 382, 450], "dnnl_post_ops_get_params_binari": [238, 243], "dnnl_post_ops_get_params_prelu": [238, 243], "memory_desc": [238, 260, 261, 276, 299, 300], "dnnl_memory_desc_clon": [238, 260], "existing_memory_desc": [238, 260], "dnnl_memory_desc_create_with_csr_encod": [238, 260], "dnnl_memory_desc_create_submemori": [238, 260], "parent_memory_desc": [238, 260], "dnnl_memory_desc_reshap": [238, 260], "out_memory_desc": [238, 260], "in_memory_desc": [238, 260], "dnnl_memory_desc_permute_ax": [238, 260], "dnnl_memory_desc_query_v2": [238, 260], "lh": [238, 260], "rh": [238, 260], "dnnl_memory_desc_get_size_v2": [238, 260], "dnnl_data_type_s": [238, 260], "dnnl_memory_create_v2": [238, 260], "nhandl": [238, 260], "dnnl_memory_map_data": [238, 260], "mapped_ptr": [238, 260, 442], "dnnl_memory_map_data_v2": [238, 260], "dnnl_memory_unmap_data": [238, 260], "dnnl_memory_unmap_data_v2": [238, 260], "dnnl_memory_get_data_handle_v2": [238, 260], "dnnl_memory_set_data_handle_v2": [238, 260], "reorder_primitive_desc": [238, 268], "src_engin": [238, 268, 465], "dst_engin": [238, 268, 465], "dnnl_concat_primitive_desc_cr": [238, 248], "concat_primitive_desc": [238, 248], "dnnl_sum_primitive_desc_cr": [238, 275], "sum_primitive_desc": [238, 275], "dnnl_binary_primitive_desc_cr": [238, 245], "src0_desc": [238, 245, 382], "dnnl_convolution_backward_data_primitive_desc_cr": [238, 249], "dnnl_deconvolution_forward_primitive_desc_cr": [238, 251], "dnnl_deconvolution_backward_data_primitive_desc_cr": [238, 251], "dnnl_deconvolution_backward_weights_primitive_desc_cr": [238, 251], "dnnl_shuffle_forward_primitive_desc_cr": [238, 272], "dnnl_shuffle_backward_primitive_desc_cr": [238, 272], "data_desc": [238, 252, 398], "dnnl_softmax_forward_primitive_desc_cr": [238, 273], "softmax_axi": [238, 273], "dnnl_softmax_backward_primitive_desc_cr": [238, 273], "dnnl_prelu_forward_primitive_desc_cr": [238, 263], "dnnl_prelu_backward_primitive_desc_cr": [238, 263], "dnnl_batch_normalization_forward_primitive_desc_cr": [238, 244], "dnnl_batch_normalization_backward_primitive_desc_cr": [238, 244], "dnnl_layer_normalization_forward_primitive_desc_cr": [238, 257], "dnnl_layer_normalization_backward_primitive_desc_cr": [238, 257], "dnnl_inner_product_forward_primitive_desc_cr": [238, 255], "dnnl_inner_product_backward_data_primitive_desc_cr": [238, 255], "dnnl_inner_product_backward_weights_primitive_desc_cr": [238, 255], "dnnl_primitive_attr_set_rnn_data_qparam": [238, 243], "dnnl_primitive_attr_get_rnn_data_qparam": [238, 243], "dnnl_primitive_attr_set_rnn_weights_qparam": [238, 243], "dnnl_primitive_attr_get_rnn_weights_qparam": [238, 243], "dnnl_primitive_attr_set_rnn_weights_projection_qparam": [238, 243], "dnnl_primitive_attr_get_rnn_weights_projection_qparam": [238, 243], "dnnl_vanilla_rnn_forward_primitive_desc_cr": [238, 243, 270], "dnnl_vanilla_rnn_backward_primitive_desc_cr": [238, 270], "dnnl_lstm_forward_primitive_desc_cr": [238, 270], "dnnl_lstm_backward_primitive_desc_cr": [238, 270], "diff_weights_peephole_desc": [238, 270, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "diff_weights_projection_desc": [238, 270, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "dnnl_gru_forward_primitive_desc_cr": [238, 270], "dnnl_gru_backward_primitive_desc_cr": [238, 270], "dnnl_lbr_gru_forward_primitive_desc_cr": [238, 270], "dnnl_lbr_gru_backward_primitive_desc_cr": [238, 270], "dnnl_augru_forward_primitive_desc_cr": [238, 270], "dnnl_augru_backward_primitive_desc_cr": [238, 270], "diff_attention_desc": [238, 270, 374, 424], "dnnl_lbr_augru_forward_primitive_desc_cr": [238, 270], "dnnl_lbr_augru_backward_primitive_desc_cr": [238, 270], "dnnl_matmul_primitive_desc_cr": [238, 259], "dnnl_resampling_forward_primitive_desc_cr": [238, 269], "dnnl_resampling_backward_primitive_desc_cr": [238, 269], "dnnl_reduction_primitive_desc_cr": [238, 267], "dnnl_get_primitive_cache_capac": [238, 264], "dir": [238, 270, 271, 296], "dnnl_set_max_cpu_isa": [238, 271], "dnnl_get_effective_cpu_isa": [238, 271], "dnnl_set_cpu_isa_hint": [238, 271], "isa_hint": [238, 271, 296], "dnnl_get_cpu_isa_hint": [238, 271], "offsetc": [238, 246, 277, 296, 301], "ao": [238, 246, 277, 296, 301], "bo": [238, 246, 277, 296, 301], "dnnl_dt2str": 238, "dnnl_fpmath_mode2str": 238, "dnnl_engine_kind2str": 238, "dnnl_sparse_encoding2str": 238, "dnnl_fmt_tag2str": 238, "dnnl_prop_kind2str": 238, "dnnl_prim_kind2str": 238, "dnnl_alg_kind2str": 238, "dnnl_rnn_flags2str": 238, "dnnl_rnn_direction2str": 238, "dnnl_scratchpad_mode2str": 238, "dnnl_cpu_isa2str": 238, "dnnl_cpu_isa_hints2str": 238, "dnnl_runtime2str": 238, "dnnl_fmt_kind2str": 238, "dnnl_ocl_interop_memory_cr": [238, 261], "dnnl_ocl_interop_memory_get_memory_kind": [238, 261], "dnnl_ocl_interop_memory_get_mem_object": [238, 261], "mem_object": [238, 261, 299], "dnnl_ocl_interop_memory_set_mem_object": [238, 261], "dnnl_ocl_interop_engine_get_cache_blob_id": [238, 261], "dnnl_ocl_interop_engine_get_cache_blob": [238, 261, 299], "dnnl_ocl_interop_engine_create_from_cache_blob": [238, 261], "dnnl_ocl_interop_engine_cr": [238, 261], "dnnl_ocl_interop_engine_get_context": [238, 261], "dnnl_ocl_interop_get_devic": [238, 261], "dnnl_ocl_interop_stream_cr": [238, 261], "dnnl_ocl_interop_stream_get_command_queu": [238, 261], "dnnl_ocl_interop_primitive_execut": [238, 261], "cl_event": [238, 261, 299], "dep": [238, 261, 276, 291, 298, 299, 300], "ndep": [238, 261], "return_ev": [238, 261, 276], "dnnl_sycl_interop_engine_cr": [238, 276], "dnnl_sycl_interop_engine_get_context": [238, 276], "dnnl_sycl_interop_engine_get_devic": [238, 276], "dnnl_sycl_interop_memory_cr": [238, 276], "dnnl_sycl_interop_memory_get_memory_kind": [238, 276], "dnnl_sycl_interop_memory_set_buff": [238, 276], "dnnl_sycl_interop_stream_cr": [238, 276], "dnnl_sycl_interop_stream_get_queu": [238, 276], "dnnl_sycl_interop_primitive_execut": [238, 276], "dnnl_threadpool_interop_stream_cr": [238, 277], "dnnl_threadpool_interop_stream_get_threadpool": [238, 277], "dnnl_threadpool_interop_set_max_concurr": [238, 277], "max_concurr": [238, 277], "dnnl_threadpool_interop_get_max_concurr": [238, 277], "dnnl_threadpool_interop_sgemm": [238, 277], "dnnl_threadpool_interop_gemm_u8s8s32": [238, 277], "dnnl_threadpool_interop_gemm_s8s8s32": [238, 277], "dnnl_engine_get_count": [238, 253], "dnnl_engine_get_kind": [238, 253], "dnnl_stream_get_engin": [238, 274], "dnnl_get_default_fpmath_mod": [238, 254], "dnnl_graph_allocator_cr": [238, 280], "dnnl_graph_allocator_destroi": [238, 280], "dnnl_graph_make_engine_with_alloc": [238, 284], "dnnl_graph_logical_tensor_init": [238, 287], "dnnl_graph_logical_tensor_init_with_dim": [238, 287], "dnnl_graph_logical_tensor_init_with_strid": [238, 287], "dnnl_graph_logical_tensor_get_mem_s": [238, 287], "dnnl_graph_logical_tensor_is_equ": [238, 287], "lt1": [238, 287], "lt2": [238, 287], "dnnl_graph_tensor_cr": [238, 292], "dnnl_graph_tensor_destroi": [238, 292], "dnnl_graph_tensor_get_data_handl": [238, 292], "dnnl_graph_tensor_set_data_handl": [238, 292], "dnnl_graph_tensor_get_engin": [238, 292], "dnnl_graph_op_cr": [238, 288], "dnnl_graph_op_destroi": [238, 288], "dnnl_graph_op_add_input": [238, 288], "dnnl_graph_op_add_output": [238, 288], "dnnl_graph_op_set_attr_f32": [238, 288], "value_len": [238, 288], "dnnl_graph_op_set_attr_bool": [238, 288], "dnnl_graph_op_set_attr_s64": [238, 288], "dnnl_graph_op_set_attr_str": [238, 288], "dnnl_graph_op_get_id": [238, 288], "dnnl_graph_op_get_kind": [238, 288], "dnnl_graph_partition_create_with_op": [238, 289], "dnnl_graph_partition_destroi": [238, 285, 289], "dnnl_graph_partition_get_op_num": [238, 289], "num": [238, 285, 289], "dnnl_graph_partition_get_op": [238, 289], "dnnl_graph_partition_get_id": [238, 289], "dnnl_graph_partition_compil": [238, 289], "in_num": [238, 289], "out_num": [238, 289], "dnnl_graph_partition_get_input_ports_num": [238, 289], "dnnl_graph_partition_get_input_port": [238, 289], "dnnl_graph_partition_get_output_ports_num": [238, 289], "dnnl_graph_partition_get_output_port": [238, 289], "dnnl_graph_partition_is_support": [238, 289], "dnnl_graph_partition_get_engine_kind": [238, 289], "dnnl_graph_compiled_partition_cr": [238, 281], "dnnl_graph_compiled_partition_execut": [238, 281], "num_input": [238, 281, 291], "num_output": [238, 281, 291], "dnnl_graph_compiled_partition_destroi": [238, 281], "dnnl_graph_compiled_partition_query_logical_tensor": [238, 281], "dnnl_graph_compiled_partition_get_inplace_port": [238, 281], "num_inplace_pair": [238, 281], "inplace_pair": [238, 281], "dnnl_graph_graph_cr": [238, 285], "dnnl_graph_graph_create_with_fpmath_mod": [238, 285], "dnnl_graph_graph_destroi": [238, 285], "dnnl_graph_add_op": [238, 285], "dnnl_graph_graph_fin": [238, 285], "dnnl_graph_graph_is_fin": [238, 285], "dnnl_graph_graph_filt": [238, 285], "dnnl_graph_graph_get_partition_num": [238, 285], "dnnl_graph_graph_get_partit": [238, 285], "dnnl_graph_get_compiled_partition_cache_capac": [238, 282], "dnnl_graph_set_compiled_partition_cache_capac": [238, 282], "dnnl_graph_set_constant_tensor_cach": [238, 283], "dnnl_graph_get_constant_tensor_cach": [238, 283], "dnnl_graph_sycl_interop_allocator_cr": [238, 291], "sycl_malloc": [238, 291, 298], "sycl_fre": [238, 291, 298], "dnnl_graph_sycl_interop_make_engine_with_alloc": [238, 291], "dnnl_graph_sycl_interop_compiled_partition_execut": [238, 291], "sycl_ev": [238, 291], "complain_dnnl_error_and_exit": 238, "complain_fmt": 238, "dnnl_arg_attr_multiple_post_op_bas": [238, 266], "dnnl_arg_attr_output_scal": [238, 266], "dnnl_arg_diff_augru_attent": [238, 266], "dnnl_arg_diff_dst_0": [238, 266], "dnnl_arg_diff_dst_1": [238, 266], "dnnl_arg_diff_dst_2": [238, 266], "dnnl_arg_diff_src_0": [238, 266], "dnnl_arg_diff_src_2": [238, 266], "dnnl_arg_diff_src_3": [238, 266], "dnnl_arg_diff_weights_0": [238, 266], "dnnl_arg_diff_weights_1": [238, 266], "dnnl_arg_diff_weights_2": [238, 266], "dnnl_arg_diff_weights_3": [238, 266], "dnnl_arg_dst_0": [238, 266], "dnnl_arg_dst_1": [238, 266], "dnnl_arg_dst_2": [238, 266], "dnnl_arg_multiple_dst": [238, 266], "dnnl_arg_src_2": [238, 266], "dnnl_arg_src_3": [238, 266], "dnnl_arg_weights_0": [238, 266], "dnnl_arg_weights_1": [238, 266], "dnnl_arg_weights_2": [238, 266], "dnnl_arg_weights_3": [238, 266], "dnnl_enable_except": 238, "dnnl_jit_profile_linux_jitdump": [238, 271], "dnnl_jit_profile_linux_jitdump_use_tsc": [238, 271], "dnnl_jit_profile_linux_perf": [238, 271], "dnnl_jit_profile_linux_perfmap": [238, 271], "dnnl_jit_profile_non": [238, 271], "dnnl_jit_profile_vtun": [238, 271], "dnnl_runtime_dpcpp": [238, 271], "dnnl_runtime_f32_v": [238, 260, 328], "dnnl_runtime_non": [238, 271], "dnnl_runtime_ocl": [238, 271], "dnnl_runtime_omp": [238, 271], "dnnl_runtime_s32_v": [238, 260], "dnnl_runtime_seq": [238, 271], "dnnl_runtime_size_v": [238, 260], "dnnl_runtime_sycl": [238, 271], "dnnl_runtime_tbb": [238, 271], "dnnl_runtime_threadpool": [238, 271], "dnnl_throw_error": 238, "msg": 238, "pragma_macro": 238, "type_cas": 238, "bla": [242, 277, 301, 483], "servic": [242, 247], "convert_to_c": [243, 253, 254, 266, 270, 296, 299, 300, 442], "aalgorithm": [243, 296, 382, 386, 388, 390, 392, 394, 396, 398, 400, 432, 434, 446, 448, 450, 463, 467, 469, 476, 478], "dnnl_": 243, "_primitive_desc_cr": 243, "as_data_typ": [243, 450], "output_height": [243, 450], "output_height_1x1_convolut": [243, 450], "output_width": [243, 450], "output_width_1x1_convolut": [243, 450], "dev_guide_attributes_post_ops_depthwis": [243, 450], "dev_guide_attributes_post_ops_depthwise_fus": [243, 266, 450], "another_input": [243, 450], "sic": [243, 458], "slc": [243, 458], "dic": [243, 458], "dlc": [243, 458], "rnn_attr": 243, "rnn_pd": 243, "nativ": [243, 458], "five": [243, 458], "weights_lay": [243, 458], "weights_iter": [243, 458], "violat": [243, 458], "batch_normalization_backward": [244, 296, 456], "allowed": 245, "algebra": 246, "gemm_u8s8s32": [246, 296, 301], "gemm_s8s8s32": [246, 296, 301], "mxk": [246, 277, 301], "kxn": [246, 277, 301], "mxn": [246, 277, 301], "xerbla": [246, 277, 301], "a_offset": [246, 277, 301], "b_offset": [246, 277, 301], "c_offset": [246, 277, 301], "convolution_backward_data": [249, 296, 456], "deconvolution_backward_data": [251, 296, 456], "deconvolution_backward_weight": [251, 296, 456], "deconvolution_forward": [251, 296, 392, 394, 456], "use_dst_for_bwd": [252, 398], "fpmath": [254, 458], "inner_product_backward_data": [255, 296, 456], "inner_product_backward_weight": [255, 296, 456], "layer_normalization_backward": [257, 296, 456], "stat": 257, "manipul": 260, "discourag": 260, "inequ": [260, 411, 444], "set_buff": [260, 300], "ordinari": 260, "ill": 260, "clear": [260, 264, 282], "never": [260, 271], "region": [260, 444], "area": [260, 444], "encompass": [260, 444], "reshap": [260, 444], "join": [260, 444], "consecut": [260, 444], "in_md": [260, 444], "out_md": 260, "expect_out_md": [260, 444], "in_dim": 260, "out_dim": 260, "in_tag": 260, "out_tag": 260, "piec": [260, 266], "lie": 260, "oihw_4i16o4i": 260, "oihw_4i16o4i_": 260, "4i16o4i": 260, "had": [260, 276, 299, 300, 349, 442], "unmap": [260, 442], "mainli": [260, 442], "made": [260, 442], "retriev": [261, 266], "prelu_backward": [263, 296, 456], "get_primitive_cache_capac": [264, 296], "set_primitive_cache_capac": [264, 296], "held": [264, 282], "excess": [264, 282], "aqueri": [266, 296], "32bit": 266, "qualifi": 266, "dev_guide_attributes_post_ops_binary_fus": 266, "mnemon": 266, "peephol": [266, 270, 436, 438, 470], "norm_lp": 267, "resampling_backward": [269, 296, 456], "resampling": 269, "rnn_flag": [270, 296], "rnn_primitive_desc_bas": [270, 296, 374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 460, 485, 487], "lbr": [270, 423, 424, 425, 426, 427, 428, 429, 430], "aid": 271, "version_t": [271, 296], "cpu_isa": [271, 296], "cpu_isa_hint": [271, 296], "set_verbos": [271, 296], "get_default_fpmath_mod": [271, 296], "set_jit_dump": [271, 296], "set_jit_profiling_flag": [271, 296], "set_jit_profiling_jitdumpdir": [271, 296], "minor": [271, 488], "dnnl_jit_dump": 271, "dnnl_jit_profil": 271, "vtune": [271, 305, 342], "amplifi": [271, 305], "pid": 271, "perf": 271, "mkdtemp": 271, "xxxxxx": 271, "home": 271, "revert": 271, "invok": 271, "dnnl_max_cpu_isa": 271, "dnnl_cpu_isa": 271, "reflect": 271, "dnnl_cpu_isa_hint": 271, "shuffle_backward": [272, 296, 456], "softmax_backward": [273, 296, 456], "threapdool_ifac": [277, 301], "threadloc": 277, "trait": [278, 296, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "handle_trait": [278, 296, 411], "acquir": 280, "make_alloc": [280, 298], "dealloc": [280, 291, 334], "input_id": [281, 405], "get_compiled_partition_cache_capac": [282, 297], "set_compiled_partition_cache_capac": [282, 297], "set_constant_tensor_cach": [283, 297], "get_constant_tensor_cach": [283, 297], "make_engine_with_alloc": [284, 297, 298], "supplement": [284, 291], "meta": 287, "enrich": 287, "progress": 287, "toward": 287, "60": 287, "layout_id": [287, 406], "boolean": 288, "openpow": 294, "ppc64": 294, "practition": 294, "adevic": [298, 300], "acontext": [298, 300], "c_partit": 298, "amemori": [299, 300], "set_mem_object": 299, "aprimit": [299, 300], "query_md": [299, 300, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 456, 460, 461, 463, 464, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "aqueu": 300, "abuff": 300, "get_threadpool": 301, "cnn_inference_int8": [305, 316], "cnn_training_bf16": 305, "cnn_training_f32": 305, "cpu_cnn_training_f32": 305, "cpu_matmul_quant": 305, "cpu_rnn_inference_f32": [305, 326], "cpu_rnn_inference_int8": [305, 327], "cpu_sgemm_and_matmul": 305, "gpu_opencl_interop": [305, 335], "memory_format_propag": 305, "rnn_training_f32": 305, "sycl_interop_buff": [305, 368], "untitl": 305, "legal": 305, "trademark": 305, "awai": [312, 314, 315], "detriment": [314, 315], "continu": [315, 334], "although": 316, "realist": 316, "_x": 324, "research": 324, "max_": 324, "min_": 324, "earli": 324, "obviou": 324, "disadvantag": 324, "wors": 324, "inevit": 324, "unidirectin": [326, 327], "charact": [326, 327], "facil": [331, 334, 335, 368], "resid": [331, 334, 335, 368], "thank": [331, 334], "lightweight": [331, 334], "compris": 334, "singleton": 334, "ten": 334, "third": 334, "plai": 334, "educ": 334, "aliv": 334, "_d": 334, "relu_d": 334, "human": [334, 368], "encourag": 334, "experi": 334, "familiar": 334, "spoil": 334, "oop": 334, "forgot": 334, "liter": 335, "enqueu": 335, "get_ocl_mem_object": 335, "realiz": [335, 368], "heavier": [335, 368], "serv": 335, "submiss": 335, "logo": 342, "arc": 342, "atom": 342, "iri": 342, "openvino": 342, "pentium": 342, "subsidiari": 342, "brand": 342, "countri": 342, "khrono": 342, "central": 349, "understood": 349, "reader": 349, "bother": 349, "idiomat": 349, "realli": 349, "ver": 349, "1x128x14x14": 349, "326904": 349, "256x128x3x3": 349, "244141": 349, "bia_undef": [349, 350], "mb1_ic128oc256_ih14oh14kh3sh1dh0ph1_iw14ow14kw3sw1dw0pw1": 349, "20312": 349, "ws_undef": 349, "mb1ic256_ih14oh14kh3sh1ph1_iw14ow14kw3sw1pw1": 349, "187012": 349, "1x256x14x14": 349, "0419922": 349, "knowledg": 350, "ex": 350, "user_": 350, "meant": 350, "enter": 350, "easili": 350, "launch": 350, "shell": 350, "tell": 350, "elsewher": 350, "38": 350, "mb128_ic3oc96_ih227oh55kh11sh4dh0ph0_iw227ow55kw11sw4dw0pw0": 350, "314": 350, "data_f32": 350, "diff_undef": 350, "128x96x55x55": 350, "87695": 350, "incorpor": 350, "reoder": 350, "conv_dst1": 350, "pai": 350, "penalti": 350, "96x3x11x11": 350, "0310059": 350, "3101": 350, "66895": 350, "80396": 350, "closer": 350, "futher": 350, "desctiptor": 350, "compli": 350, "0148926": 350, "968": 350, "66797": 350, "kmp_affin": 350, "granular": 350, "platinum": 350, "8180": 350, "50ghz": 350, "28": 350, "numa": 350, "ram": 350, "ddr4": 350, "gb": 350, "weak": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "allow_empti": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "get_primitive_desc": [373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 407, 409, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 445, 447, 451, 453, 456, 462, 464, 466, 468, 471, 473, 475, 477, 481, 484, 486], "get_kind": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 445, 446, 447, 448, 451, 452, 453, 454, 456, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 484, 485, 486, 487], "default_attr": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 463, 465, 467, 469, 472, 474, 476, 478, 482, 485, 487], "get_cell_kind": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_prop_kind": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_direct": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_dil": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_padding_l": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_padding_r": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_epsilon": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_algorithm": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_alpha": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_beta": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_axi": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_local_s": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_k": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_p": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_factor": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_activation_kind": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_kernel": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_group_s": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "get_primitive_attr": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 461, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "next_impl": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 463, 465, 467, 469, 470, 472, 474, 476, 478, 482, 485, 487], "augru_attention_desc": [374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "diff_augru_attention_desc": [374, 376, 408, 410, 424, 426, 428, 430, 436, 438, 470, 485, 487], "signifi": [374, 376, 378, 380, 382, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 444, 446, 448, 452, 454, 463, 465, 467, 469, 472, 474, 476, 478, 485, 487], "src0": 382, "verifi": [384, 460, 465, 482], "caller": [384, 460, 465, 482], "prim_kind": [384, 460, 465, 482], "prop_kind1": [384, 460, 465, 482], "prop_kind2": [384, 460, 465, 482], "get_count": 402, "uniniti": [402, 411, 442, 456, 480], "thrown": [402, 411, 442, 456, 480], "wrap_c_api": 403, "explanatori": 403, "output_id": 405, "union": 406, "descend": [411, 456, 460, 461, 470], "weak_ptr": 411, "shared_ptr": 411, "delet": 411, "dummi": 411, "destructor": 412, "validate_dim": 442, "min_siz": 442, "data_type_s": 442, "adata_typ": [442, 444], "map_data": 442, "unmap_data": 442, "absenc": [442, 444], "helper": 442, "aformat_tag": 444, "permute_ax": 444, "get_ndim": 444, "get_padded_offset": 444, "get_submemory_offset": 444, "get_num_handl": 444, "get_nnz": 444, "get_sparse_encod": 444, "get_format_kind": 444, "is_zero": 444, "index_dt": 444, "pointer_dt": 444, "new_desc": 444, "involv": 444, "get_params_sum": 450, "get_params_eltwis": 450, "get_params_dw": 450, "get_params_prelu": 450, "zeropoint": 450, "oc_dim": 450, "mb_dim": 450, "channel_dim": 450, "height_dim": 450, "prelu_weight": 450, "weight_desc": [452, 454], "c_pd": 456, "get_fpmath_mod": 458, "set_fpmath_mod": 458, "get_post_op": 458, "get_rnn_data_qparam": 458, "get_rnn_weights_qparam": 458, "set_rnn_weights_projection_qparam": 458, "get_rnn_weights_projection_qparam": 458, "rnn_d": 458, "get_src_engin": 465, "get_dst_engin": 465, "aflag": 480, "constexpr": 483, "virtual": 483, "subclass": 483, "closur": 483, "cpu_runtim": 488, "gpu_runtim": 488, "absent": 488}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"advanc": 0, "topic": 0, "build": [1, 18, 19, 24, 25, 30, 32, 131, 132, 143, 145], "link": [1, 42], "class": [2, 3, 4, 5, 6, 7, 8], "dnnl": [2, 3, 4, 5, 6, 7, 8, 148, 149, 150, 154, 158, 161, 162, 163, 164, 166, 168, 170, 172, 173, 174, 175, 176, 178, 180, 182, 184, 186, 188, 190, 193, 195, 197, 296, 297, 298, 299, 300, 301, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487], "graph": [2, 3, 4, 5, 6, 7, 8, 14, 19, 31, 32, 161, 162, 163, 164, 166, 168, 170, 239, 279, 285, 297, 298], "alloc": [2, 280, 349], "overview": [2, 3, 4, 5, 6, 7, 8, 27, 126, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 298, 299, 300, 301, 302, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488], "detail": [2, 3, 4, 5, 6, 7, 8, 15, 17, 21, 23, 28, 30, 38, 41, 43, 44, 129, 130, 133, 134, 135, 136, 138, 139, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 298, 299, 300, 301, 302, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488], "document": [2, 3, 4, 5, 6, 7, 8, 18, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 298, 299, 300, 301, 302, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488], "construct": [2, 3, 4, 5, 6, 7, 8, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "compiled_partit": 3, "method": [3, 4, 5, 6, 7, 8, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 403, 408, 410, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 461, 463, 464, 465, 467, 469, 470, 472, 474, 476, 478, 480, 482, 483, 485, 487], "logical_tensor": [5, 161, 162, 163], "typedef": [5, 243, 250, 253, 260, 266, 271, 274, 280, 281, 285, 288, 289, 291, 292, 442], "op": [6, 11, 15, 17, 21, 23, 28, 31, 38, 41, 43, 44, 129, 133, 134, 135, 136, 137, 138, 139, 164, 166, 288, 312], "partit": [7, 31, 168, 281, 282, 289], "tensor": [8, 22, 31, 283, 287, 292], "primit": [9, 10, 11, 12, 13, 14, 30, 44, 128, 131, 132, 180, 264, 265, 306, 308, 310, 319, 321, 331, 332, 334, 335, 338, 340, 343, 345, 347, 349, 351, 353, 355, 357, 359, 362, 364, 366, 368, 456, 491], "attribut": [9, 10, 11, 12, 13, 15, 17, 21, 23, 28, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 133, 134, 135, 136, 137, 138, 139, 243], "usag": [9, 128], "support": [9, 11, 15, 17, 21, 28, 33, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 133, 134, 136, 138, 139, 142, 241, 491], "relat": [9, 128], "error": [9, 403], "handl": [9, 27, 126, 411], "float": [10, 26, 33, 254], "point": [10, 26, 33, 254], "math": [10, 254], "mode": [10, 145, 254], "The": 10, "A": 10, "note": [10, 15, 17, 20, 21, 23, 28, 38, 41, 43, 44, 129, 130, 133, 134, 135, 138, 139], "default": 10, "post": [11, 15, 17, 21, 23, 28, 38, 41, 43, 44, 129, 133, 134, 135, 136, 137, 138, 139, 312], "eltwis": [11, 28, 217, 252], "sum": [11, 139, 236, 275, 366, 481, 482], "depthwis": 11, "binari": [11, 17, 201, 245, 310, 312, 381, 382], "prelu": [11, 94, 130, 229, 263], "exampl": [11, 12, 13, 15, 17, 21, 23, 28, 29, 37, 38, 39, 41, 43, 44, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 145, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 326, 327, 332, 338, 340, 343, 345, 347, 350, 351, 353, 355, 357, 359, 361, 362, 364, 366], "chain": 11, "relu": [11, 105, 331, 334], "tanh": [11, 122], "scaleshift": 11, "quantiz": [12, 33, 37, 96, 324], "introduct": [12, 14, 31, 37, 142, 144, 349], "model": [12, 240, 371], "numer": [12, 26], "behavior": [12, 26], "convolut": [12, 23, 58, 209, 249, 321, 349], "workflow": [12, 37, 142], "per": 12, "channel": [12, 144], "scale": [12, 15, 37, 41], "api": [12, 20, 30, 128, 242, 247, 256, 261, 276, 277, 279, 286, 291, 335, 368], "output": [12, 22, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 145], "1": [12, 23, 40], "weight": 12, "2": [12, 23, 40], "group": [12, 23, 58], "scratchpad": 13, "memori": [13, 14, 22, 27, 126, 131, 144, 172, 173, 174, 175, 260, 331, 334, 335, 349, 368, 442, 444], "engin": [13, 14, 128, 154, 253, 284, 330, 331, 334, 335, 368, 402], "librari": [13, 18, 19, 26, 42, 294], "manag": [13, 131], "user": 13, "basic": [14, 31], "concept": [14, 31], "stream": [14, 195, 274, 331, 334, 335, 368, 480], "object": [14, 27, 126, 331, 334, 335, 349, 368], "level": 14, "abstract": 14, "creat": [14, 331, 334, 335, 349, 368], "extens": [14, 239, 335, 368], "batch": [15, 244, 308], "normal": [15, 41, 43, 244, 257, 308, 340, 343], "gener": [15, 17, 21, 23, 26, 28, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 133, 134, 135, 136, 137, 138, 139, 144], "forward": [15, 23, 28, 36, 38, 41, 43, 129, 130, 135, 137, 138], "differ": [15, 23, 28, 36, 38, 41, 129, 130, 135, 137, 138], "between": [15, 23, 28, 36, 38, 41, 129, 130, 135, 137, 138, 330, 331], "train": [15, 23, 26, 28, 33, 36, 38, 41, 129, 130, 135, 136, 137, 138, 141, 142, 317, 318, 323, 361], "infer": [15, 23, 26, 28, 33, 35, 36, 37, 38, 41, 129, 130, 135, 137, 138, 314, 315, 316, 326, 327, 336], "backward": [15, 23, 28, 36, 38, 41, 43, 129, 130, 135, 137, 138], "execut": [15, 17, 21, 23, 28, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 331, 334, 335, 349, 368], "argument": [15, 17, 21, 23, 28, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 133, 134, 135, 136, 137, 138, 139], "implement": [15, 17, 21, 23, 28, 38, 41, 43, 44, 129, 130, 133, 134, 135, 136, 137, 138, 139, 350], "data": [15, 17, 21, 23, 26, 28, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 133, 134, 135, 136, 137, 138, 139, 144, 250, 331, 334, 335, 349, 368], "type": [15, 17, 21, 23, 26, 28, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 133, 134, 135, 136, 137, 138, 139, 250], "represent": [15, 17, 21, 23, 28, 38, 41, 43, 44, 129, 130, 133, 134, 136, 138, 139], "mean": [15, 41], "varianc": [15, 41], "shift": [15, 41], "sourc": [15, 17, 18, 41, 43, 129, 133, 138, 139, 143, 349], "destin": [15, 17, 41, 43, 129, 133, 138, 139, 349], "Their": [15, 41, 43, 129, 138], "gradient": [15, 41, 43, 129, 138], "limit": [15, 17, 19, 21, 23, 26, 28, 30, 38, 41, 43, 44, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139], "perform": [15, 16, 17, 21, 23, 28, 38, 41, 43, 44, 129, 130, 132, 133, 134, 135, 137, 138, 139, 349, 350, 370], "tip": [15, 17, 21, 23, 28, 38, 41, 43, 44, 129, 130, 133, 134, 135, 137, 138, 139], "benchmark": [16, 127], "from": [18, 143, 331], "download": 18, "code": [18, 39, 143, 334], "linux": [18, 42, 132], "maco": [18, 42], "gcc": 18, "clang": 18, "intel": [18, 26, 40, 143], "oneapi": [18, 294, 302], "dpc": [18, 27, 295], "c": [18, 203, 210, 215], "compil": [18, 19, 31, 281, 282], "sycl": [18, 27, 276, 291, 304, 368], "runtim": [18, 19, 24, 42, 127, 256, 286], "target": [18, 19], "aarch64": [18, 19], "x64": 18, "host": [18, 19], "arm": [18, 19], "comput": [18, 19, 40], "acl": 18, "window": [18, 42], "microsoft": 18, "visual": 18, "valid": [18, 20, 331, 334, 335, 368], "instal": 18, "option": 19, "common": [19, 247, 266], "configur": [19, 127, 350], "function": [19, 136, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 298, 299, 300, 301, 331, 334, 335, 349, 368], "onednn_enable_workload": 19, "onednn_enable_primit": 19, "onednn_enable_primitive_cpu_isa": 19, "onednn_enable_primitive_gpu_isa": 19, "cpu": [19, 24, 25, 39, 40, 127, 330, 331, 368], "specif": [19, 22, 36], "architectur": [19, 26], "dispatch": [19, 24], "control": [19, 24, 25, 30, 32, 131, 132, 145], "isa": [19, 25], "hint": [19, 25], "openmp": 19, "thread": [19, 127, 140], "block": [19, 144, 350], "tbb": 19, "threadpool": [19, 140, 277], "vendor": 19, "bla": [19, 246], "gpu": [19, 39, 40, 330, 331, 335, 368], "opencl": [19, 126, 261, 295, 335], "compon": 19, "input": [20, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "concat": [21, 57, 208, 248, 319, 383, 384], "name": 22, "convent": 22, "variabl": 22, "formula": 22, "verbos": [22, 145], "rnn": [22, 136, 270, 306, 326, 327, 345, 361], "notat": 22, "format": [22, 144, 349, 350], "tag": [22, 132], "regular": [23, 58], "dilat": [23, 58], "deconvolut": [23, 251], "transpos": 23, "3": 23, "algorithm": [23, 148], "direct": 23, "winograd": 23, "automat": 23, "select": 23, "time": [24, 25, 30, 32, 131, 132, 145], "run": [25, 32, 131, 132, 145], "onednn": [26, 42, 127, 132, 140, 143, 242, 331, 334, 335, 368], "environ": 26, "hardwar": 26, "r": 26, "processor": [26, 40], "graphic": 26, "xe": 26, "interoper": [27, 126, 256, 261, 276, 277, 286, 291, 295], "buffer": [27, 126, 349], "usm": [27, 126], "interfac": [27, 126], "depend": [27, 126], "except": 28, "experiment": 30, "featur": [30, 132], "onednn_experimental_spars": 30, "logic": [31, 287], "dump": 32, "fusion": 33, "pattern": 33, "low": 34, "precis": 34, "int8": [34, 35, 37, 40, 316, 327, 336], "bf16": [34, 317], "f16": 34, "best": 35, "practic": 35, "fp32": [35, 141], "aspect": 36, "propag": [36, 349], "kind": [36, 154, 166, 180], "workspac": 36, "process": [37, 143], "rang": 37, "factor": 37, "inner": [38, 255, 338], "product": [38, 255, 338], "inspect": [39, 370], "jit": 39, "nuanc": 40, "mix": 40, "u8": [40, 312], "s8": 40, "avx2": 40, "avx": 40, "512": 40, "dl": 40, "boost": 40, "same": 40, "refer": [40, 294], "layer": [41, 257, 340], "header": [42, 331, 334, 335, 368], "file": 42, "harden": 42, "local": [43, 343], "respons": [43, 343], "lrn": [43, 223, 258], "matrix": [44, 259], "multipl": [44, 144, 259], "ab": 45, "oper": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 241], "absbackward": 46, "add": 47, "avgpool": 48, "avgpoolbackward": 49, "batchnormforwardtrain": 50, "batchnorminfer": 51, "batchnormtrainingbackward": 52, "biasadd": 53, "biasaddbackward": 54, "clamp": 55, "clampbackward": 56, "convolutionbackwarddata": 59, "convolutionbackwardweight": 60, "convtranspos": 61, "convtransposebackwarddata": 62, "convtransposebackwardweight": 63, "dequant": 64, "divid": 65, "dynamicdequant": 66, "dynamicquant": 67, "elu": 68, "elubackward": 69, "end": 70, "exp": 71, "gelu": 72, "gelubackward": 73, "hardsigmoid": 74, "hardsigmoidbackward": 75, "hardswish": 76, "hardswishbackward": 77, "interpol": 78, "interpolatebackward": 79, "layernorm": 80, "layernormbackward": 81, "leakyrelu": 82, "log": 83, "logsoftmax": 84, "logsoftmaxbackward": 85, "matmul": [86, 225, 324, 328, 336, 347, 439, 440], "maximum": 87, "maxpool": 88, "maxpoolbackward": 89, "minimum": 90, "mish": 91, "mishbackward": 92, "multipli": 93, "broadcast": [94, 95], "rule": [94, 95], "prelubackward": 95, "reciproc": 97, "reducel1": 98, "reducel2": 99, "reducemax": 100, "reducemean": 101, "reducemin": 102, "reduceprod": 103, "reducesum": 104, "relubackward": 106, "reorder": [107, 134, 231, 268, 330, 331, 349, 357, 464, 465], "round": 108, "sigmoid": 109, "sigmoidbackward": 110, "softmax": [111, 138, 235, 273, 364], "softmaxbackward": 112, "softplu": 113, "softplusbackward": 114, "sqrt": 115, "sqrtbackward": 116, "squar": 117, "squareddiffer": 118, "staticreshap": 119, "statictranspos": 120, "subtract": 121, "tanhbackward": 123, "typecast": 124, "wildcard": 125, "set": 127, "whole": 127, "machin": 127, "singl": 127, "numa": 127, "domain": 127, "sever": 127, "core": 127, "within": 127, "persist": 128, "cach": [128, 131, 264, 282, 283], "pool": [129, 228, 262, 349, 351], "consumpt": 131, "profil": [131, 132, 146, 350, 370], "vtune": [132, 146], "amplifi": [132, 146], "itt": 132, "hotspot": 132, "microarchitectur": 132, "inform": [132, 143, 342], "perf": 132, "reduct": [133, 230, 267, 355, 462, 463], "resampl": [135, 232, 269, 359], "nearest": 135, "neighbor": 135, "bilinear": 135, "cell": 136, "vanilla": 136, "lstm": [136, 224, 345], "peephol": 136, "project": 136, "lstmp": 136, "gru": 136, "linear": 136, "befor": 136, "reset": 136, "augru": [136, 199, 306], "consider": 136, "shuffl": [137, 234, 272, 362], "layout": [137, 144], "us": [140, 144], "base": 140, "bfp16": 141, "bfloat16": 142, "transit": 143, "mkl": 143, "dnn": 143, "summari": [143, 350], "chang": 143, "broken": 143, "compat": 143, "develop": [143, 294], "understand": 144, "nomenclatur": 144, "plain": 144, "nchw": 144, "nhwc": 144, "chwn": 144, "relev": 144, "read": 144, "stride": 144, "what": 144, "ar": 144, "8": 144, "16": 144, "enabl": 145, "onednn_verbos": 145, "timestamp": 145, "decrypt": 145, "tm": 146, "enum": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "dnnl_alg_kind_t": 147, "valu": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "cpu_isa": 149, "cpu_isa_hint": 150, "dnnl_cpu_isa_hints_t": 151, "dnnl_cpu_isa_t": 152, "dnnl_data_type_t": 153, "dnnl_engine_kind_t": 155, "dnnl_format_kind_t": 156, "dnnl_format_tag_t": 157, "fpmath_mod": 158, "dnnl_fpmath_mode_t": 159, "dnnl_graph_layout_type_t": 160, "data_typ": [161, 172], "layout_typ": 162, "property_typ": 163, "attr": 164, "dnnl_graph_op_attr_t": 165, "dnnl_graph_op_kind_t": 167, "polici": 168, "dnnl_graph_partition_policy_t": 169, "statu": [170, 193, 290], "dnnl_graph_tensor_property_t": 171, "format_kind": 173, "format_tag": 174, "sparse_encod": 175, "normalization_flag": 176, "dnnl_normalization_flags_t": 177, "ocl_interop": [178, 299], "memory_kind": [178, 197], "dnnl_ocl_interop_memory_kind_t": 179, "dnnl_primitive_kind_t": 181, "prop_kind": 182, "dnnl_prop_kind_t": 183, "queri": 184, "dnnl_query_t": 185, "rnn_direct": 186, "dnnl_rnn_direction_t": 187, "rnn_flag": 188, "dnnl_rnn_flags_t": 189, "scratchpad_mod": 190, "dnnl_scratchpad_mode_t": 191, "dnnl_sparse_encoding_t": 192, "dnnl_status_t": 194, "flag": 195, "dnnl_stream_flags_t": 196, "sycl_interop": [197, 298, 300], "dnnl_sycl_interop_memory_kind_t": 198, "cpp": [199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "batch_norm": 200, "bnorm_u8_via_binary_postop": 202, "cnn_inference_f32": [203, 204], "cnn_inference_int8": 205, "cnn_training_bf16": 206, "cnn_training_f32": 207, "cpu_cnn_training_f32": 210, "cpu_matmul_quant": 211, "cpu_rnn_inference_f32": 212, "cpu_rnn_inference_int8": 213, "cpu_sgemm_and_matmul": 214, "cross_engine_reord": [215, 216], "getting_start": 218, "gpu_opencl_interop": 219, "inference_int8_matmul": 220, "inner_product": 221, "layer_norm": 222, "memory_format_propag": [226, 349], "performance_profil": 227, "rnn_training_f32": 233, "sycl_interop_buff": 237, "global": [238, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 298, 299, 300, 301], "namespac": [238, 296, 297, 298, 299, 300, 301, 302, 303, 304], "program": [240, 371], "macro": [250, 260, 266, 271, 287], "servic": 271, "util": [278, 293], "constant": 283, "deep": 294, "neural": 294, "network": 294, "guid": 294, "threadpool_interop": [301, 483], "std": 303, "orphan": 305, "untitl": [307, 309, 311, 313, 320, 322, 325, 329, 333, 337, 339, 341, 344, 346, 348, 352, 354, 356, 358, 360, 363, 365, 367], "bnorm": 312, "cnn": [314, 315, 316, 317, 318, 323], "f32": [314, 315, 318, 323, 326, 361], "tutori": [324, 328, 336, 349], "comparison": 328, "sgemm": 328, "public": [331, 334, 335, 368], "cross_engine_reorder_tutori": 331, "wrap": [331, 334, 335, 368], "get": [331, 334, 335, 368], "result": [331, 334, 335, 349, 368], "all": 331, "element": 332, "wise": 332, "start": [334, 335, 368], "getting_started_tutori": 334, "prepar": 334, "outsid": 334, "descriptor": 334, "altern": 334, "wai": 334, "obtain": 334, "main": [334, 368], "gpu_opencl_interop_tutori": 335, "initi": [335, 349, 368], "custom": [335, 368], "kernel": [335, 368], "legal": 342, "trademark": 342, "determin": 349, "need": 349, "intermedi": 349, "necessari": 349, "walkthrough": 350, "naiv": 350, "fuse": 350, "notic": 350, "both": 368, "sycl_interop_buffer_tutori": 368, "todo": 369, "list": 369, "struct": [372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "args_t": 372, "augru_backward": [373, 374], "inherit": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "member": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487], "primitive_desc": [374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 408, 410, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 446, 448, 452, 454, 460, 463, 465, 467, 469, 472, 474, 476, 478, 482, 485, 487], "augru_forward": [375, 376], "batch_normalization_backward": [377, 378], "batch_normalization_forward": [379, 380], "convolution_backward_data": [385, 386], "convolution_backward_weight": [387, 388], "convolution_forward": [389, 390], "deconvolution_backward_data": [391, 392], "deconvolution_backward_weight": [393, 394], "deconvolution_forward": [395, 396], "eltwise_backward": [397, 398], "eltwise_forward": [399, 400], "dnnl_engin": 401, "dnnl_exec_arg_t": 404, "field": [404, 405, 406, 483, 488], "dnnl_graph_inplace_pair_t": 405, "dnnl_graph_logical_tensor_t": 406, "gru_backward": [407, 408], "gru_forward": [409, 410], "templat": [411, 412], "handle_trait": 412, "inner_product_backward_data": [413, 414], "inner_product_backward_weight": [415, 416], "inner_product_forward": [417, 418], "layer_normalization_backward": [419, 420], "layer_normalization_forward": [421, 422], "lbr_augru_backward": [423, 424], "lbr_augru_forward": [425, 426], "lbr_gru_backward": [427, 428], "lbr_gru_forward": [429, 430], "lrn_backward": [431, 432], "lrn_forward": [433, 434], "lstm_backward": [435, 436], "lstm_forward": [437, 438], "dnnl_memori": 441, "dnnl_memory_desc": 443, "desc": 444, "pooling_backward": [445, 446], "pooling_forward": [447, 448], "dnnl_post_op": 449, "post_op": 450, "prelu_backward": [451, 452], "prelu_forward": [453, 454], "dnnl_primit": 455, "dnnl_primitive_attr": 457, "primitive_attr": 458, "dnnl_primitive_desc": 459, "primitive_desc_bas": 461, "resampling_backward": [466, 467], "resampling_forward": [468, 469], "rnn_primitive_desc_bas": 470, "shuffle_backward": [471, 472], "shuffle_forward": [473, 474], "softmax_backward": [475, 476], "softmax_forward": [477, 478], "dnnl_stream": 479, "threadpool_ifac": 483, "vanilla_rnn_backward": [484, 485], "vanilla_rnn_forward": [486, 487], "dnnl_version_t": 488, "example_allows_unimpl": 489, "gemm_dims_t": 490}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Building and Linking": [[1, "building-and-linking"]], "Advanced Topics": [[0, "advanced-topics"]], "class dnnl::graph::compiled_partition": [[3, "class-dnnl-graph-compiled-partition"]], "Overview": [[3, "overview"], [2, "overview"], [8, "overview"], [27, "overview"], [6, "overview"], [7, "overview"], [4, "overview"], [5, "overview"], [126, "overview"], [147, "overview"], [148, "overview"], [149, "overview"], [151, "overview"], [150, "overview"], [152, "overview"], [153, "overview"], [155, "overview"], [154, "overview"], [156, "overview"], [157, "overview"], [158, "overview"], [159, "overview"], [160, "overview"], [161, "overview"], [163, "overview"], [162, "overview"], [164, "overview"], [165, "overview"], [169, "overview"], [168, "overview"], [171, "overview"], [170, "overview"], [173, "overview"], [172, "overview"], [174, "overview"], [175, "overview"], [176, "overview"], [177, "overview"], [178, "overview"], [179, "overview"], [181, "overview"], [180, "overview"], [182, "overview"], [183, "overview"], [185, "overview"], [184, "overview"], [186, "overview"], [187, "overview"], [188, "overview"], [189, "overview"], [191, "overview"], [190, "overview"], [193, "overview"], [192, "overview"], [194, "overview"], [195, "overview"], [196, "overview"], [197, "overview"], [198, "overview"], [243, "overview"], [244, "overview"], [245, "overview"], [246, "overview"], [249, "overview"], [248, "overview"], [250, "overview"], [251, "overview"], [253, "overview"], [252, "overview"], [254, "overview"], [255, "overview"], [257, "overview"], [259, "overview"], [258, "overview"], [261, "overview"], [260, "overview"], [262, "overview"], [263, "overview"], [264, "overview"], [265, "overview"], [266, "overview"], [267, "overview"], [268, "overview"], [269, "overview"], [270, "overview"], [271, "overview"], [273, "overview"], [272, "overview"], [274, "overview"], [275, "overview"], [276, "overview"], [277, "overview"], [281, "overview"], [280, "overview"], [283, "overview"], [282, "overview"], [284, "overview"], [285, "overview"], [287, "overview"], [289, "overview"], [288, "overview"], [291, "overview"], [292, "overview"], [299, "overview"], [298, "overview"], [300, "overview"], [301, "overview"], [302, "overview"], [373, "overview"], [374, "overview"], [375, "overview"], [377, "overview"], [376, "overview"], [378, "overview"], [379, "overview"], [381, "overview"], [380, "overview"], [382, "overview"], [383, "overview"], [385, "overview"], [384, "overview"], [387, "overview"], [386, "overview"], [388, "overview"], [389, "overview"], [391, "overview"], [390, "overview"], [392, "overview"], [393, "overview"], [395, "overview"], [394, "overview"], [397, "overview"], [396, "overview"], [398, "overview"], [399, "overview"], [400, "overview"], [403, "overview"], [402, "overview"], [404, "overview"], [405, "overview"], [407, "overview"], [406, "overview"], [409, "overview"], [408, "overview"], [411, "overview"], [410, "overview"], [413, "overview"], [415, "overview"], [414, "overview"], [416, "overview"], [417, "overview"], [418, "overview"], [419, "overview"], [421, "overview"], [420, "overview"], [422, "overview"], [423, "overview"], [424, "overview"], [425, "overview"], [426, "overview"], [427, "overview"], [429, "overview"], [428, "overview"], [430, "overview"], [431, "overview"], [433, "overview"], [432, "overview"], [434, "overview"], [435, "overview"], [436, "overview"], [437, "overview"], [438, "overview"], [439, "overview"], [440, "overview"], [442, "overview"], [445, "overview"], [444, "overview"], [447, "overview"], [446, "overview"], [448, "overview"], [449, "overview"], [451, "overview"], [450, "overview"], [452, "overview"], [453, "overview"], [454, "overview"], [456, "overview"], [457, "overview"], [458, "overview"], [460, "overview"], [461, "overview"], [462, "overview"], [463, "overview"], [464, "overview"], [465, "overview"], [466, "overview"], [467, "overview"], [468, "overview"], [469, "overview"], [470, "overview"], [471, "overview"], [473, "overview"], [472, "overview"], [474, "overview"], [475, "overview"], [476, "overview"], [477, "overview"], [478, "overview"], [481, "overview"], [480, "overview"], [483, "overview"], [482, "overview"], [484, "overview"], [485, "overview"], [486, "overview"], [487, "overview"], [488, "overview"]], "Detailed Documentation": [[3, "detailed-documentation"], [2, "detailed-documentation"], [8, "detailed-documentation"], [6, "detailed-documentation"], [7, "detailed-documentation"], [4, "detailed-documentation"], [5, "detailed-documentation"], [147, "detailed-documentation"], [148, "detailed-documentation"], [149, "detailed-documentation"], [151, "detailed-documentation"], [150, "detailed-documentation"], [152, "detailed-documentation"], [153, "detailed-documentation"], [155, "detailed-documentation"], [154, "detailed-documentation"], [156, "detailed-documentation"], [157, "detailed-documentation"], [158, "detailed-documentation"], [159, "detailed-documentation"], [160, "detailed-documentation"], [161, "detailed-documentation"], [163, "detailed-documentation"], [162, "detailed-documentation"], [164, "detailed-documentation"], [165, "detailed-documentation"], [169, "detailed-documentation"], [168, "detailed-documentation"], [171, "detailed-documentation"], [170, "detailed-documentation"], [173, "detailed-documentation"], [172, "detailed-documentation"], [174, "detailed-documentation"], [175, "detailed-documentation"], [176, "detailed-documentation"], [177, "detailed-documentation"], [178, "detailed-documentation"], [179, "detailed-documentation"], [181, "detailed-documentation"], [180, "detailed-documentation"], [182, "detailed-documentation"], [183, "detailed-documentation"], [185, "detailed-documentation"], [184, "detailed-documentation"], [186, "detailed-documentation"], [187, "detailed-documentation"], [188, "detailed-documentation"], [189, "detailed-documentation"], [191, "detailed-documentation"], [190, "detailed-documentation"], [193, "detailed-documentation"], [192, "detailed-documentation"], [194, "detailed-documentation"], [195, "detailed-documentation"], [196, "detailed-documentation"], [197, "detailed-documentation"], [198, "detailed-documentation"], [243, "detailed-documentation"], [244, "detailed-documentation"], [245, "detailed-documentation"], [246, "detailed-documentation"], [249, "detailed-documentation"], [248, "detailed-documentation"], [250, "detailed-documentation"], [251, "detailed-documentation"], [253, "detailed-documentation"], [252, "detailed-documentation"], [254, "detailed-documentation"], [255, "detailed-documentation"], [257, "detailed-documentation"], [259, "detailed-documentation"], [258, "detailed-documentation"], [261, "detailed-documentation"], [260, "detailed-documentation"], [262, "detailed-documentation"], [263, "detailed-documentation"], [264, "detailed-documentation"], [265, "detailed-documentation"], [266, "detailed-documentation"], [267, "detailed-documentation"], [268, "detailed-documentation"], [269, "detailed-documentation"], [270, "detailed-documentation"], [271, "detailed-documentation"], [273, "detailed-documentation"], [272, "detailed-documentation"], [274, "detailed-documentation"], [275, "detailed-documentation"], [276, "detailed-documentation"], [277, "detailed-documentation"], [281, "detailed-documentation"], [280, "detailed-documentation"], [283, "detailed-documentation"], [282, "detailed-documentation"], [284, "detailed-documentation"], [285, "detailed-documentation"], [287, "detailed-documentation"], [289, "detailed-documentation"], [288, "detailed-documentation"], [291, "detailed-documentation"], [292, "detailed-documentation"], [299, "detailed-documentation"], [298, "detailed-documentation"], [300, "detailed-documentation"], [301, "detailed-documentation"], [302, "detailed-documentation"], [373, "detailed-documentation"], [374, "detailed-documentation"], [375, "detailed-documentation"], [377, "detailed-documentation"], [376, "detailed-documentation"], [378, "detailed-documentation"], [379, "detailed-documentation"], [381, "detailed-documentation"], [380, "detailed-documentation"], [382, "detailed-documentation"], [383, "detailed-documentation"], [385, "detailed-documentation"], [384, "detailed-documentation"], [387, "detailed-documentation"], [386, "detailed-documentation"], [388, "detailed-documentation"], [389, "detailed-documentation"], [391, "detailed-documentation"], [390, "detailed-documentation"], [392, "detailed-documentation"], [393, "detailed-documentation"], [395, "detailed-documentation"], [394, "detailed-documentation"], [397, "detailed-documentation"], [396, "detailed-documentation"], [398, "detailed-documentation"], [399, "detailed-documentation"], [400, "detailed-documentation"], [403, "detailed-documentation"], [402, "detailed-documentation"], [404, "detailed-documentation"], [405, "detailed-documentation"], [407, "detailed-documentation"], [406, "detailed-documentation"], [409, "detailed-documentation"], [408, "detailed-documentation"], [411, "detailed-documentation"], [410, "detailed-documentation"], [413, "detailed-documentation"], [415, "detailed-documentation"], [414, "detailed-documentation"], [416, "detailed-documentation"], [417, "detailed-documentation"], [418, "detailed-documentation"], [419, "detailed-documentation"], [421, "detailed-documentation"], [420, "detailed-documentation"], [422, "detailed-documentation"], [423, "detailed-documentation"], [424, "detailed-documentation"], [425, "detailed-documentation"], [426, "detailed-documentation"], [427, "detailed-documentation"], [429, "detailed-documentation"], [428, "detailed-documentation"], [430, "detailed-documentation"], [431, "detailed-documentation"], [433, "detailed-documentation"], [432, "detailed-documentation"], [434, "detailed-documentation"], [435, "detailed-documentation"], [436, "detailed-documentation"], [437, "detailed-documentation"], [438, "detailed-documentation"], [439, "detailed-documentation"], [440, "detailed-documentation"], [442, "detailed-documentation"], [445, "detailed-documentation"], [444, "detailed-documentation"], [447, "detailed-documentation"], [446, "detailed-documentation"], [448, "detailed-documentation"], [449, "detailed-documentation"], [451, "detailed-documentation"], [450, "detailed-documentation"], [452, "detailed-documentation"], [453, "detailed-documentation"], [454, "detailed-documentation"], [456, "detailed-documentation"], [457, "detailed-documentation"], [458, "detailed-documentation"], [460, "detailed-documentation"], [461, "detailed-documentation"], [462, "detailed-documentation"], [463, "detailed-documentation"], [464, "detailed-documentation"], [465, "detailed-documentation"], [466, "detailed-documentation"], [467, "detailed-documentation"], [468, "detailed-documentation"], [469, "detailed-documentation"], [470, "detailed-documentation"], [471, "detailed-documentation"], [473, "detailed-documentation"], [472, "detailed-documentation"], [474, "detailed-documentation"], [475, "detailed-documentation"], [476, "detailed-documentation"], [477, "detailed-documentation"], [478, "detailed-documentation"], [481, "detailed-documentation"], [480, "detailed-documentation"], [483, "detailed-documentation"], [482, "detailed-documentation"], [484, "detailed-documentation"], [485, "detailed-documentation"], [486, "detailed-documentation"], [487, "detailed-documentation"], [488, "detailed-documentation"]], "Construction": [[3, "construction"], [2, "construction"], [8, "construction"], [6, "construction"], [7, "construction"], [4, "construction"], [5, "construction"], [373, "construction"], [374, "construction"], [375, "construction"], [377, "construction"], [376, "construction"], [378, "construction"], [379, "construction"], [381, "construction"], [380, "construction"], [382, "construction"], [383, "construction"], [385, "construction"], [384, "construction"], [387, "construction"], [386, "construction"], [388, "construction"], [389, "construction"], [391, "construction"], [390, "construction"], [392, "construction"], [393, "construction"], [395, "construction"], [394, "construction"], [397, "construction"], [396, "construction"], [398, "construction"], [399, "construction"], [400, "construction"], [403, "construction"], [402, "construction"], [407, "construction"], [409, "construction"], [408, "construction"], [411, "construction"], [410, "construction"], [413, "construction"], [415, "construction"], [414, "construction"], [416, "construction"], [417, "construction"], [418, "construction"], [419, "construction"], [421, "construction"], [420, "construction"], [422, "construction"], [423, "construction"], [424, "construction"], [425, "construction"], [426, "construction"], [427, "construction"], [429, "construction"], [428, "construction"], [430, "construction"], [431, "construction"], [433, "construction"], [432, "construction"], [434, "construction"], [435, "construction"], [436, "construction"], [437, "construction"], [438, "construction"], [439, "construction"], [440, "construction"], [442, "construction"], [445, "construction"], [444, "construction"], [447, "construction"], [446, "construction"], [448, "construction"], [451, "construction"], [450, "construction"], [452, "construction"], [453, "construction"], [454, "construction"], [456, "construction"], [458, "construction"], [462, "construction"], [463, "construction"], [464, "construction"], [465, "construction"], [466, "construction"], [467, "construction"], [468, "construction"], [469, "construction"], [470, "construction"], [471, "construction"], [473, "construction"], [472, "construction"], [474, "construction"], [475, "construction"], [476, "construction"], [477, "construction"], [478, "construction"], [481, "construction"], [480, "construction"], [482, "construction"], [484, "construction"], [485, "construction"], [486, "construction"], [487, "construction"]], "Methods": [[3, "methods"], [8, "methods"], [6, "methods"], [7, "methods"], [4, "methods"], [5, "methods"], [374, "methods"], [376, "methods"], [378, "methods"], [380, "methods"], [382, "methods"], [384, "methods"], [386, "methods"], [388, "methods"], [390, "methods"], [392, "methods"], [394, "methods"], [396, "methods"], [398, "methods"], [400, "methods"], [403, "methods"], [402, "methods"], [408, "methods"], [411, "methods"], [410, "methods"], [414, "methods"], [416, "methods"], [418, "methods"], [420, "methods"], [422, "methods"], [424, "methods"], [426, "methods"], [428, "methods"], [430, "methods"], [432, "methods"], [434, "methods"], [436, "methods"], [438, "methods"], [440, "methods"], [442, "methods"], [444, "methods"], [446, "methods"], [448, "methods"], [450, "methods"], [452, "methods"], [454, "methods"], [456, "methods"], [458, "methods"], [460, "methods"], [461, "methods"], [463, "methods"], [464, "methods"], [465, "methods"], [467, "methods"], [469, "methods"], [470, "methods"], [472, "methods"], [474, "methods"], [476, "methods"], [478, "methods"], [480, "methods"], [483, "methods"], [482, "methods"], [485, "methods"], [487, "methods"]], "class dnnl::graph::allocator": [[2, "class-dnnl-graph-allocator"]], "Primitive Attributes": [[9, "primitive-attributes"]], "Attributes Usage": [[9, "attributes-usage"]], "Supported Attributes": [[9, "supported-attributes"]], "Attribute Related Error Handling": [[9, "attribute-related-error-handling"]], "class dnnl::graph::tensor": [[8, "class-dnnl-graph-tensor"]], "Binary": [[17, "binary"], [11, "binary"], [245, "binary"]], "General": [[17, "general"], [21, "general"], [38, "general"], [43, "general"], [45, "general"], [44, "general"], [28, "general"], [46, "general"], [47, "general"], [48, "general"], [49, "general"], [15, "general"], [41, "general"], [51, "general"], [50, "general"], [53, "general"], [52, "general"], [54, "general"], [55, "general"], [57, "general"], [56, "general"], [58, "general"], [59, "general"], [61, "general"], [60, "general"], [23, "general"], [62, "general"], [63, "general"], [65, "general"], [64, "general"], [66, "general"], [67, "general"], [68, "general"], [69, "general"], [70, "general"], [71, "general"], [73, "general"], [72, "general"], [74, "general"], [75, "general"], [77, "general"], [76, "general"], [78, "general"], [79, "general"], [81, "general"], [80, "general"], [83, "general"], [82, "general"], [84, "general"], [85, "general"], [87, "general"], [86, "general"], [89, "general"], [88, "general"], [91, "general"], [90, "general"], [92, "general"], [93, "general"], [94, "general"], [95, "general"], [96, "general"], [97, "general"], [98, "general"], [99, "general"], [101, "general"], [100, "general"], [103, "general"], [102, "general"], [105, "general"], [104, "general"], [107, "general"], [106, "general"], [109, "general"], [108, "general"], [111, "general"], [110, "general"], [112, "general"], [113, "general"], [115, "general"], [114, "general"], [117, "general"], [116, "general"], [119, "general"], [118, "general"], [120, "general"], [121, "general"], [122, "general"], [123, "general"], [125, "general"], [124, "general"], [129, "general"], [130, "general"], [133, "general"], [134, "general"], [135, "general"], [137, "general"], [136, "general"], [139, "general"], [138, "general"]], "Execution Arguments": [[17, "execution-arguments"], [21, "execution-arguments"], [38, "execution-arguments"], [43, "execution-arguments"], [44, "execution-arguments"], [28, "execution-arguments"], [15, "execution-arguments"], [41, "execution-arguments"], [23, "execution-arguments"], [129, "execution-arguments"], [130, "execution-arguments"], [133, "execution-arguments"], [134, "execution-arguments"], [135, "execution-arguments"], [137, "execution-arguments"], [136, "execution-arguments"], [139, "execution-arguments"], [138, "execution-arguments"]], "Implementation Details": [[17, "implementation-details"], [21, "implementation-details"], [38, "implementation-details"], [43, "implementation-details"], [44, "implementation-details"], [28, "implementation-details"], [15, "implementation-details"], [41, "implementation-details"], [23, "implementation-details"], [129, "implementation-details"], [130, "implementation-details"], [133, "implementation-details"], [134, "implementation-details"], [135, "implementation-details"], [136, "implementation-details"], [139, "implementation-details"], [138, "implementation-details"]], "General Notes": [[17, "general-notes"], [21, "general-notes"], [38, "general-notes"], [43, "general-notes"], [44, "general-notes"], [28, "general-notes"], [15, "general-notes"], [41, "general-notes"], [23, "general-notes"], [129, "general-notes"], [130, "general-notes"], [133, "general-notes"], [134, "general-notes"], [135, "general-notes"], [139, "general-notes"], [138, "general-notes"]], "Post-Ops and Attributes": [[17, "post-ops-and-attributes"], [21, "post-ops-and-attributes"], [38, "post-ops-and-attributes"], [28, "post-ops-and-attributes"], [15, "post-ops-and-attributes"], [129, "post-ops-and-attributes"], [133, "post-ops-and-attributes"], [134, "post-ops-and-attributes"], [135, "post-ops-and-attributes"], [137, "post-ops-and-attributes"], [136, "post-ops-and-attributes"], [139, "post-ops-and-attributes"]], "Data Types Support": [[17, "data-types-support"], [21, "data-types-support"], [133, "data-types-support"], [134, "data-types-support"], [139, "data-types-support"]], "Data Representation": [[17, "data-representation"], [21, "data-representation"], [38, "data-representation"], [43, "data-representation"], [44, "data-representation"], [28, "data-representation"], [15, "data-representation"], [41, "data-representation"], [23, "data-representation"], [129, "data-representation"], [130, "data-representation"], [133, "data-representation"], [134, "data-representation"], [136, "data-representation"], [139, "data-representation"], [138, "data-representation"]], "Sources, Destination": [[17, "sources-destination"], [133, "sources-destination"], [139, "sources-destination"]], "Implementation Limitations": [[17, "implementation-limitations"], [21, "implementation-limitations"], [38, "implementation-limitations"], [43, "implementation-limitations"], [44, "implementation-limitations"], [28, "implementation-limitations"], [15, "implementation-limitations"], [41, "implementation-limitations"], [23, "implementation-limitations"], [129, "implementation-limitations"], [130, "implementation-limitations"], [133, "implementation-limitations"], [134, "implementation-limitations"], [135, "implementation-limitations"], [137, "implementation-limitations"], [136, "implementation-limitations"], [139, "implementation-limitations"], [138, "implementation-limitations"]], "Performance Tips": [[17, "performance-tips"], [21, "performance-tips"], [38, "performance-tips"], [43, "performance-tips"], [44, "performance-tips"], [28, "performance-tips"], [15, "performance-tips"], [41, "performance-tips"], [23, "performance-tips"], [129, "performance-tips"], [130, "performance-tips"], [133, "performance-tips"], [134, "performance-tips"], [135, "performance-tips"], [137, "performance-tips"], [139, "performance-tips"], [138, "performance-tips"]], "Examples": [[17, "examples"], [13, "examples"], [44, "examples"], [29, "examples"], [15, "examples"]], "Benchmarking Performance": [[16, "benchmarking-performance"]], "Concat": [[21, "concat"], [57, "concat"], [248, "concat"]], "Example": [[21, "example"], [37, "example"], [38, "example"], [43, "example"], [28, "example"], [41, "example"], [23, "example"], [129, "example"], [130, "example"], [133, "example"], [134, "example"], [135, "example"], [137, "example"], [136, "example"], [139, "example"], [138, "example"], [142, "example"], [145, "example"]], "API": [[20, "api"], [12, "api"], [30, "api"]], "Input validation notes": [[20, "input-validation-notes"]], "CPU ISA Hints": [[25, "cpu-isa-hints"]], "Build-time Controls": [[25, "build-time-controls"], [24, "build-time-controls"], [30, "build-time-controls"], [131, "build-time-controls"]], "Run-time Controls": [[25, "run-time-controls"], [131, "run-time-controls"]], "CPU Dispatcher Control": [[24, "cpu-dispatcher-control"]], "Runtime Controls": [[24, "runtime-controls"]], "Primitive Attributes: Quantization": [[12, "primitive-attributes-quantization"]], "Introduction": [[12, "introduction"], [31, "introduction"], [37, "introduction"], [14, "introduction"], [142, "introduction"], [144, "introduction"]], "Quantization Model": [[12, "quantization-model"]], "Numerical behavior": [[12, "numerical-behavior"]], "Example: Convolution Quantization Workflow": [[12, "example-convolution-quantization-workflow"]], "Per-Channel Scaling": [[12, "per-channel-scaling"]], "Output Scaling Attribute": [[12, "output-scaling-attribute"]], "Example 1: weights quantization with per-output-channel scaling": [[12, "example-1-weights-quantization-with-per-output-channel-scaling"]], "Example 2: convolution with groups, with per-output-channel quantization": [[12, "example-2-convolution-with-groups-with-per-output-channel-quantization"]], "Primitive Attributes: Scratchpad": [[13, "primitive-attributes-scratchpad"]], "Scratchpad Memory Engine": [[13, "scratchpad-memory-engine"]], "Library Manages Scratchpad": [[13, "library-manages-scratchpad"]], "User Manages Scratchpad": [[13, "user-manages-scratchpad"]], "Experimental features": [[30, "experimental-features"], [30, "id1"]], "Features details": [[30, "features-details"]], "ONEDNN_EXPERIMENTAL_SPARSE": [[30, "onednn-experimental-sparse"]], "Primitives": [[30, "primitives"], [14, "primitives"], [14, "id2"], [265, "primitives"]], "Limitations": [[30, "limitations"], [128, "limitations"]], "Basic Concepts": [[31, "basic-concepts"], [14, "basic-concepts"]], "Logical Tensor": [[31, "logical-tensor"], [287, "logical-tensor"]], "Op": [[31, "op"], [288, "op"]], "Graph": [[31, "graph"], [285, "graph"]], "Partition": [[31, "partition"], [289, "partition"]], "Compiled Partition": [[31, "compiled-partition"], [281, "compiled-partition"]], "Tensor": [[31, "tensor"], [292, "tensor"]], "DPC++ Interoperability": [[27, "dpc-interoperability"]], "SYCL Buffers and DPC++ USM Interfaces for Memory Objects": [[27, "sycl-buffers-and-dpc-usm-interfaces-for-memory-objects"]], "Handling Dependencies with USM": [[27, "handling-dependencies-with-usm"]], "Data Types": [[26, "data-types"], [38, "data-types"], [44, "data-types"], [23, "data-types"], [135, "data-types"], [137, "data-types"]], "Inference and Training": [[26, "inference-and-training"]], "General numerical behavior of the oneDNN library": [[26, "general-numerical-behavior-of-the-onednn-library"]], "Floating-point environment": [[26, "floating-point-environment"]], "Hardware Limitations": [[26, "hardware-limitations"]], "Intel(R) Architecture Processors": [[26, "intel-r-architecture-processors"]], "Intel(R) Processor Graphics and Xe Architecture graphics": [[26, "intel-r-processor-graphics-and-xe-architecture-graphics"]], "Supported Fusion Patterns": [[33, "supported-fusion-patterns"]], "Fusion Patterns": [[33, "fusion-patterns"]], "Inference": [[33, "inference"], [35, "inference"]], "Floating Point Patterns": [[33, "floating-point-patterns"]], "Quantized Patterns": [[33, "quantized-patterns"]], "Training": [[33, "training"], [141, "training"]], "Graph Dump": [[32, "graph-dump"]], "Build-Time Controls": [[32, "build-time-controls"], [132, "build-time-controls"], [132, "id1"], [145, "build-time-controls"]], "Run-Time Controls": [[32, "run-time-controls"], [132, "run-time-controls"], [132, "id2"], [145, "run-time-controls"]], "Primitive Attributes: floating-point math mode": [[10, "primitive-attributes-floating-point-math-mode"]], "The floating-point math mode attribute.": [[10, "the-floating-point-math-mode-attribute"]], "A note on default floating-point math mode": [[10, "a-note-on-default-floating-point-math-mode"]], "Primitive Attributes: Post-ops": [[11, "primitive-attributes-post-ops"]], "Supported Post-ops": [[11, "supported-post-ops"]], "Eltwise Post-op": [[11, "eltwise-post-op"]], "Sum Post-op": [[11, "sum-post-op"]], "Depthwise Post-op": [[11, "depthwise-post-op"]], "Binary Post-op": [[11, "binary-post-op"]], "Prelu Post-op": [[11, "prelu-post-op"]], "Examples of Chained Post-ops": [[11, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[11, "sum-relu"]], "Tanh -> Sum -> ScaleShift": [[11, "tanh-sum-scaleshift"]], "Relu -> Depthwise -> Relu": [[11, "relu-depthwise-relu"]], "Best Practices for Inference": [[35, "best-practices-for-inference"]], "fp32 Inference": [[35, "fp32-inference"]], "int8 Inference": [[35, "int8-inference"]], "Low Precision": [[34, "low-precision"]], "INT8": [[34, "int8"]], "BF16/F16": [[34, "bf16-f16"]], "Int8 Inference": [[37, "int8-inference"]], "Int8 Workflow": [[37, "int8-workflow"]], "Quantization Process": [[37, "quantization-process"]], "Range of the Data": [[37, "range-of-the-data"]], "Scaling Factor": [[37, "scaling-factor"]], "Quantization Example": [[37, "quantization-example"]], "int8 Support": [[37, "int8-support"]], "Attributes": [[37, "attributes"], [243, "attributes"]], "Inference and Training Aspects": [[36, "inference-and-training-aspects"]], "Propagation Kinds": [[36, "propagation-kinds"]], "Difference Between Forward Propagation on Training and Inference": [[36, "difference-between-forward-propagation-on-training-and-inference"]], "Different Backward Propagation Kinds": [[36, "different-backward-propagation-kinds"]], "Inference-Specific Aspects": [[36, "inference-specific-aspects"]], "Training-Specific Aspects": [[36, "training-specific-aspects"]], "Workspace": [[36, "workspace"]], "Inspecting JIT Code": [[39, "inspecting-jit-code"]], "Example (CPU)": [[39, "example-cpu"]], "Example (GPU)": [[39, "example-gpu"]], "Inner Product": [[38, "inner-product"], [255, "inner-product"]], "Forward": [[38, "forward"], [43, "forward"], [28, "forward"], [15, "forward"], [41, "forward"], [23, "forward"], [129, "forward"], [130, "forward"], [135, "forward"], [137, "forward"], [138, "forward"]], "Difference Between Forward Training and Forward Inference": [[38, "difference-between-forward-training-and-forward-inference"], [28, "difference-between-forward-training-and-forward-inference"], [15, "difference-between-forward-training-and-forward-inference"], [41, "difference-between-forward-training-and-forward-inference"], [23, "difference-between-forward-training-and-forward-inference"], [129, "difference-between-forward-training-and-forward-inference"], [130, "difference-between-forward-training-and-forward-inference"], [135, "difference-between-forward-training-and-forward-inference"], [137, "difference-between-forward-training-and-forward-inference"], [138, "difference-between-forward-training-and-forward-inference"]], "Backward": [[38, "backward"], [43, "backward"], [28, "backward"], [15, "backward"], [41, "backward"], [23, "backward"], [129, "backward"], [130, "backward"], [135, "backward"], [137, "backward"], [138, "backward"]], "Linking to the Library": [[42, "linking-to-the-library"]], "Header Files": [[42, "header-files"]], "Libraries": [[42, "libraries"]], "Linux": [[42, "linux"]], "macOS": [[42, "macos"]], "Windows": [[42, "windows"], [42, "id1"], [18, "windows"]], "Linking to oneDNN": [[42, "linking-to-onednn"]], "Linux/macOS": [[42, "linux-macos"], [18, "linux-macos"]], "Support for macOS hardened runtime": [[42, "support-for-macos-hardened-runtime"]], "Local Response Normalization (LRN)": [[43, "local-response-normalization-lrn"]], "Data Type Support": [[43, "data-type-support"], [28, "data-type-support"], [15, "data-type-support"], [41, "data-type-support"], [129, "data-type-support"], [130, "data-type-support"], [136, "data-type-support"], [138, "data-type-support"]], "Source, Destination, and Their Gradients": [[43, "source-destination-and-their-gradients"], [15, "source-destination-and-their-gradients"], [41, "source-destination-and-their-gradients"], [129, "source-destination-and-their-gradients"], [138, "source-destination-and-their-gradients"]], "Post-ops and Attributes": [[43, "post-ops-and-attributes"], [41, "post-ops-and-attributes"], [23, "post-ops-and-attributes"], [138, "post-ops-and-attributes"]], "Abs": [[45, "abs"]], "Operation attributes": [[45, "operation-attributes"], [46, "operation-attributes"], [47, "operation-attributes"], [48, "operation-attributes"], [49, "operation-attributes"], [51, "operation-attributes"], [50, "operation-attributes"], [53, "operation-attributes"], [52, "operation-attributes"], [54, "operation-attributes"], [55, "operation-attributes"], [57, "operation-attributes"], [56, "operation-attributes"], [58, "operation-attributes"], [59, "operation-attributes"], [61, "operation-attributes"], [60, "operation-attributes"], [62, "operation-attributes"], [63, "operation-attributes"], [65, "operation-attributes"], [64, "operation-attributes"], [66, "operation-attributes"], [67, "operation-attributes"], [68, "operation-attributes"], [69, "operation-attributes"], [70, "operation-attributes"], [71, "operation-attributes"], [73, "operation-attributes"], [72, "operation-attributes"], [74, "operation-attributes"], [75, "operation-attributes"], [77, "operation-attributes"], [76, "operation-attributes"], [78, "operation-attributes"], [79, "operation-attributes"], [81, "operation-attributes"], [80, "operation-attributes"], [83, "operation-attributes"], [82, "operation-attributes"], [84, "operation-attributes"], [85, "operation-attributes"], [87, "operation-attributes"], [86, "operation-attributes"], [89, "operation-attributes"], [88, "operation-attributes"], [91, "operation-attributes"], [90, "operation-attributes"], [92, "operation-attributes"], [93, "operation-attributes"], [94, "operation-attributes"], [95, "operation-attributes"], [96, "operation-attributes"], [97, "operation-attributes"], [98, "operation-attributes"], [99, "operation-attributes"], [101, "operation-attributes"], [100, "operation-attributes"], [103, "operation-attributes"], [102, "operation-attributes"], [105, "operation-attributes"], [104, "operation-attributes"], [107, "operation-attributes"], [106, "operation-attributes"], [109, "operation-attributes"], [108, "operation-attributes"], [111, "operation-attributes"], [110, "operation-attributes"], [112, "operation-attributes"], [113, "operation-attributes"], [115, "operation-attributes"], [114, "operation-attributes"], [117, "operation-attributes"], [116, "operation-attributes"], [119, "operation-attributes"], [118, "operation-attributes"], [120, "operation-attributes"], [121, "operation-attributes"], [122, "operation-attributes"], [123, "operation-attributes"], [125, "operation-attributes"], [124, "operation-attributes"]], "Execution arguments": [[45, "execution-arguments"], [46, "execution-arguments"], [47, "execution-arguments"], [48, "execution-arguments"], [49, "execution-arguments"], [51, "execution-arguments"], [50, "execution-arguments"], [53, "execution-arguments"], [52, "execution-arguments"], [54, "execution-arguments"], [55, "execution-arguments"], [57, "execution-arguments"], [56, "execution-arguments"], [58, "execution-arguments"], [59, "execution-arguments"], [61, "execution-arguments"], [60, "execution-arguments"], [62, "execution-arguments"], [63, "execution-arguments"], [65, "execution-arguments"], [64, "execution-arguments"], [66, "execution-arguments"], [67, "execution-arguments"], [68, "execution-arguments"], [69, "execution-arguments"], [70, "execution-arguments"], [71, "execution-arguments"], [73, "execution-arguments"], [72, "execution-arguments"], [74, "execution-arguments"], [75, "execution-arguments"], [77, "execution-arguments"], [76, "execution-arguments"], [78, "execution-arguments"], [79, "execution-arguments"], [81, "execution-arguments"], [80, "execution-arguments"], [83, "execution-arguments"], [82, "execution-arguments"], [84, "execution-arguments"], [85, "execution-arguments"], [87, "execution-arguments"], [86, "execution-arguments"], [89, "execution-arguments"], [88, "execution-arguments"], [91, "execution-arguments"], [90, "execution-arguments"], [92, "execution-arguments"], [93, "execution-arguments"], [94, "execution-arguments"], [95, "execution-arguments"], [96, "execution-arguments"], [97, "execution-arguments"], [98, "execution-arguments"], [99, "execution-arguments"], [101, "execution-arguments"], [100, "execution-arguments"], [103, "execution-arguments"], [102, "execution-arguments"], [105, "execution-arguments"], [104, "execution-arguments"], [107, "execution-arguments"], [106, "execution-arguments"], [109, "execution-arguments"], [108, "execution-arguments"], [111, "execution-arguments"], [110, "execution-arguments"], [112, "execution-arguments"], [113, "execution-arguments"], [115, "execution-arguments"], [114, "execution-arguments"], [117, "execution-arguments"], [116, "execution-arguments"], [119, "execution-arguments"], [118, "execution-arguments"], [120, "execution-arguments"], [121, "execution-arguments"], [122, "execution-arguments"], [123, "execution-arguments"], [125, "execution-arguments"], [124, "execution-arguments"]], "Inputs": [[45, "inputs"], [46, "inputs"], [47, "inputs"], [48, "inputs"], [49, "inputs"], [51, "inputs"], [50, "inputs"], [53, "inputs"], [52, "inputs"], [54, "inputs"], [55, "inputs"], [57, "inputs"], [56, "inputs"], [58, "inputs"], [59, "inputs"], [61, "inputs"], [60, "inputs"], [62, "inputs"], [63, "inputs"], [65, "inputs"], [64, "inputs"], [66, "inputs"], [67, "inputs"], [68, "inputs"], [69, "inputs"], [70, "inputs"], [71, "inputs"], [73, "inputs"], [72, "inputs"], [74, "inputs"], [75, "inputs"], [77, "inputs"], [76, "inputs"], [78, "inputs"], [79, "inputs"], [81, "inputs"], [80, "inputs"], [83, "inputs"], [82, "inputs"], [84, "inputs"], [85, "inputs"], [87, "inputs"], [86, "inputs"], [89, "inputs"], [88, "inputs"], [91, "inputs"], [90, "inputs"], [92, "inputs"], [93, "inputs"], [94, "inputs"], [95, "inputs"], [96, "inputs"], [97, "inputs"], [98, "inputs"], [99, "inputs"], [101, "inputs"], [100, "inputs"], [103, "inputs"], [102, "inputs"], [105, "inputs"], [104, "inputs"], [107, "inputs"], [106, "inputs"], [109, "inputs"], [108, "inputs"], [111, "inputs"], [110, "inputs"], [112, "inputs"], [113, "inputs"], [115, "inputs"], [114, "inputs"], [117, "inputs"], [116, "inputs"], [119, "inputs"], [118, "inputs"], [120, "inputs"], [121, "inputs"], [122, "inputs"], [123, "inputs"], [125, "inputs"], [124, "inputs"]], "Outputs": [[45, "outputs"], [46, "outputs"], [47, "outputs"], [48, "outputs"], [49, "outputs"], [51, "outputs"], [50, "outputs"], [53, "outputs"], [52, "outputs"], [54, "outputs"], [55, "outputs"], [57, "outputs"], [56, "outputs"], [58, "outputs"], [59, "outputs"], [61, "outputs"], [60, "outputs"], [62, "outputs"], [63, "outputs"], [65, "outputs"], [64, "outputs"], [66, "outputs"], [67, "outputs"], [68, "outputs"], [69, "outputs"], [70, "outputs"], [71, "outputs"], [73, "outputs"], [72, "outputs"], [74, "outputs"], [75, "outputs"], [77, "outputs"], [76, "outputs"], [78, "outputs"], [79, "outputs"], [81, "outputs"], [80, "outputs"], [83, "outputs"], [82, "outputs"], [84, "outputs"], [85, "outputs"], [87, "outputs"], [86, "outputs"], [89, "outputs"], [88, "outputs"], [91, "outputs"], [90, "outputs"], [92, "outputs"], [93, "outputs"], [94, "outputs"], [95, "outputs"], [96, "outputs"], [97, "outputs"], [98, "outputs"], [99, "outputs"], [101, "outputs"], [100, "outputs"], [103, "outputs"], [102, "outputs"], [105, "outputs"], [104, "outputs"], [107, "outputs"], [106, "outputs"], [109, "outputs"], [108, "outputs"], [111, "outputs"], [110, "outputs"], [112, "outputs"], [113, "outputs"], [115, "outputs"], [114, "outputs"], [117, "outputs"], [116, "outputs"], [119, "outputs"], [118, "outputs"], [120, "outputs"], [121, "outputs"], [122, "outputs"], [123, "outputs"], [125, "outputs"], [124, "outputs"]], "Supported data types": [[45, "supported-data-types"], [46, "supported-data-types"], [47, "supported-data-types"], [48, "supported-data-types"], [49, "supported-data-types"], [51, "supported-data-types"], [50, "supported-data-types"], [53, "supported-data-types"], [52, "supported-data-types"], [54, "supported-data-types"], [55, "supported-data-types"], [57, "supported-data-types"], [56, "supported-data-types"], [58, "supported-data-types"], [59, "supported-data-types"], [61, "supported-data-types"], [60, "supported-data-types"], [62, "supported-data-types"], [63, "supported-data-types"], [65, "supported-data-types"], [64, "supported-data-types"], [66, "supported-data-types"], [67, "supported-data-types"], [68, "supported-data-types"], [69, "supported-data-types"], [70, "supported-data-types"], [71, "supported-data-types"], [73, "supported-data-types"], [72, "supported-data-types"], [74, "supported-data-types"], [75, "supported-data-types"], [77, "supported-data-types"], [76, "supported-data-types"], [78, "supported-data-types"], [79, "supported-data-types"], [81, "supported-data-types"], [80, "supported-data-types"], [83, "supported-data-types"], [82, "supported-data-types"], [84, "supported-data-types"], [85, "supported-data-types"], [87, "supported-data-types"], [86, "supported-data-types"], [89, "supported-data-types"], [88, "supported-data-types"], [91, "supported-data-types"], [90, "supported-data-types"], [92, "supported-data-types"], [93, "supported-data-types"], [94, "supported-data-types"], [95, "supported-data-types"], [96, "supported-data-types"], [97, "supported-data-types"], [98, "supported-data-types"], [99, "supported-data-types"], [101, "supported-data-types"], [100, "supported-data-types"], [103, "supported-data-types"], [102, "supported-data-types"], [105, "supported-data-types"], [104, "supported-data-types"], [107, "supported-data-types"], [106, "supported-data-types"], [109, "supported-data-types"], [108, "supported-data-types"], [111, "supported-data-types"], [110, "supported-data-types"], [112, "supported-data-types"], [113, "supported-data-types"], [115, "supported-data-types"], [114, "supported-data-types"], [117, "supported-data-types"], [116, "supported-data-types"], [119, "supported-data-types"], [118, "supported-data-types"], [120, "supported-data-types"], [121, "supported-data-types"], [122, "supported-data-types"], [123, "supported-data-types"], [125, "supported-data-types"], [124, "supported-data-types"]], "Matrix Multiplication": [[44, "matrix-multiplication"], [259, "matrix-multiplication"]], "Attributes and Post-ops": [[44, "attributes-and-post-ops"]], "Matrix Multiplication Primitive Examples": [[44, "matrix-multiplication-primitive-examples"]], "Eltwise": [[28, "eltwise"], [252, "eltwise"]], "Exceptions": [[28, "exceptions"]], "AbsBackward": [[46, "absbackward"]], "Add": [[47, "add"]], "AvgPool": [[48, "avgpool"]], "AvgPoolBackward": [[49, "avgpoolbackward"]], "Engines": [[14, "engines"]], "Streams": [[14, "streams"]], "Memory Objects": [[14, "memory-objects"], [14, "id1"]], "Levels of Abstraction": [[14, "levels-of-abstraction"]], "Creating Memory Objects and Primitives": [[14, "creating-memory-objects-and-primitives"]], "Graph Extension": [[14, "graph-extension"], [239, "graph-extension"]], "Batch Normalization": [[15, "batch-normalization"], [244, "batch-normalization"]], "Mean and Variance": [[15, "mean-and-variance"], [41, "mean-and-variance"]], "Scale and Shift": [[15, "scale-and-shift"], [41, "scale-and-shift"]], "class dnnl::graph::op": [[6, "class-dnnl-graph-op"]], "class dnnl::graph::partition": [[7, "class-dnnl-graph-partition"]], "Nuances of int8 Computations": [[40, "nuances-of-int8-computations"]], "CPU": [[40, "cpu"], [127, "cpu"]], "1. Inputs of mixed type: u8 and s8": [[40, "inputs-of-mixed-type-u8-and-s8"]], "1.1. Processors with the Intel AVX2 or Intel AVX-512 Support": [[40, "processors-with-the-intel-avx2-or-intel-avx-512-support"]], "1.2. Processors with the Intel DL Boost Support": [[40, "processors-with-the-intel-dl-boost-support"]], "2. Inputs of the same type: s8": [[40, "inputs-of-the-same-type-s8"]], "GPU": [[40, "gpu"]], "References": [[40, "references"]], "Layer Normalization": [[41, "layer-normalization"], [257, "layer-normalization"]], "BatchNormInference": [[51, "batchnorminference"]], "BatchNormForwardTraining": [[50, "batchnormforwardtraining"]], "Build from Source": [[18, "build-from-source"]], "Download the Source Code": [[18, "download-the-source-code"]], "Build the Library": [[18, "build-the-library"]], "GCC, Clang, or Intel oneAPI DPC++/C++ Compiler": [[18, "gcc-clang-or-intel-oneapi-dpc-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL runtime": [[18, "intel-oneapi-dpc-c-compiler-with-sycl-runtime"]], "GCC targeting AArch64 on x64 host": [[18, "gcc-targeting-aarch64-on-x64-host"]], "GCC with Arm Compute Library (ACL) on AArch64 host": [[18, "gcc-with-arm-compute-library-acl-on-aarch64-host"]], "Microsoft Visual C++ Compiler": [[18, "microsoft-visual-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL Runtime": [[18, "id1"]], "Validate the Build": [[18, "validate-the-build"]], "Build documentation": [[18, "build-documentation"]], "Install library": [[18, "install-library"]], "Build Options": [[19, "build-options"]], "Common options": [[19, "common-options"]], "Host compiler": [[19, "host-compiler"]], "Configuring functionality": [[19, "configuring-functionality"]], "ONEDNN_ENABLE_WORKLOAD": [[19, "onednn-enable-workload"]], "ONEDNN_ENABLE_PRIMITIVE": [[19, "onednn-enable-primitive"]], "ONEDNN_ENABLE_PRIMITIVE_CPU_ISA": [[19, "onednn-enable-primitive-cpu-isa"]], "ONEDNN_ENABLE_PRIMITIVE_GPU_ISA": [[19, "onednn-enable-primitive-gpu-isa"]], "CPU Options": [[19, "cpu-options"]], "Targeting Specific Architecture": [[19, "targeting-specific-architecture"]], "Runtime CPU dispatcher control": [[19, "runtime-cpu-dispatcher-control"]], "Runtime CPU ISA hints": [[19, "runtime-cpu-isa-hints"]], "Runtimes": [[19, "runtimes"], [19, "id1"]], "OpenMP": [[19, "openmp"]], "Threading Building Blocks (TBB)": [[19, "threading-building-blocks-tbb"]], "Threadpool": [[19, "threadpool"]], "AArch64 Options": [[19, "aarch64-options"]], "Arm Compute Library": [[19, "arm-compute-library"]], "Vendor BLAS libraries": [[19, "vendor-blas-libraries"]], "GPU Options": [[19, "gpu-options"]], "OpenCL*": [[19, "opencl"]], "Graph component limitations": [[19, "graph-component-limitations"]], "BiasAdd": [[53, "biasadd"]], "BatchNormTrainingBackward": [[52, "batchnormtrainingbackward"]], "BiasAddBackward": [[54, "biasaddbackward"]], "Clamp": [[55, "clamp"]], "ClampBackward": [[56, "clampbackward"]], "Convolution": [[58, "convolution"], [23, "convolution"], [249, "convolution"]], "Regular Convolution": [[58, "regular-convolution"], [23, "regular-convolution"]], "Convolution with Groups": [[58, "convolution-with-groups"], [23, "convolution-with-groups"]], "Convolution with Dilation": [[58, "convolution-with-dilation"], [23, "convolution-with-dilation"]], "ConvolutionBackwardData": [[59, "convolutionbackwarddata"]], "class dnnl::graph::graph": [[4, "class-dnnl-graph-graph"]], "class dnnl::graph::logical_tensor": [[5, "class-dnnl-graph-logical-tensor"]], "Typedefs": [[5, "typedefs"], [243, "typedefs"], [250, "typedefs"], [253, "typedefs"], [260, "typedefs"], [266, "typedefs"], [271, "typedefs"], [274, "typedefs"], [281, "typedefs"], [280, "typedefs"], [285, "typedefs"], [289, "typedefs"], [288, "typedefs"], [291, "typedefs"], [292, "typedefs"], [442, "typedefs"]], "ConvTranspose": [[61, "convtranspose"]], "ConvolutionBackwardWeights": [[60, "convolutionbackwardweights"]], "Deconvolution (Transposed Convolution)": [[23, "deconvolution-transposed-convolution"]], "Example 1": [[23, "example-1"]], "Example 2": [[23, "example-2"]], "Example 3": [[23, "example-3"]], "Algorithms": [[23, "algorithms"]], "Direct Algorithm": [[23, "direct-algorithm"]], "Winograd Convolution": [[23, "winograd-convolution"]], "Automatic Algorithm Selection": [[23, "automatic-algorithm-selection"]], "Naming Conventions": [[22, "naming-conventions"]], "Variable (Tensor) Names": [[22, "variable-tensor-names"]], "Formulas and Verbose Output": [[22, "formulas-and-verbose-output"]], "RNN-Specific Notation": [[22, "rnn-specific-notation"]], "Memory Formats Tags": [[22, "memory-formats-tags"]], "ConvTransposeBackwardData": [[62, "convtransposebackwarddata"]], "ConvTransposeBackwardWeights": [[63, "convtransposebackwardweights"]], "Divide": [[65, "divide"]], "Dequantize": [[64, "dequantize"]], "DynamicDequantize": [[66, "dynamicdequantize"]], "DynamicQuantize": [[67, "dynamicquantize"]], "Elu": [[68, "elu"]], "EluBackward": [[69, "elubackward"]], "End": [[70, "end"]], "Exp": [[71, "exp"]], "GELUBackward": [[73, "gelubackward"]], "GELU": [[72, "gelu"]], "HardSigmoid": [[74, "hardsigmoid"]], "HardSigmoidBackward": [[75, "hardsigmoidbackward"]], "HardSwishBackward": [[77, "hardswishbackward"]], "HardSwish": [[76, "hardswish"]], "Interpolate": [[78, "interpolate"]], "InterpolateBackward": [[79, "interpolatebackward"]], "LayerNormBackward": [[81, "layernormbackward"]], "LayerNorm": [[80, "layernorm"]], "Log": [[83, "log"]], "LeakyReLU": [[82, "leakyrelu"]], "LogSoftmax": [[84, "logsoftmax"]], "LogSoftmaxBackward": [[85, "logsoftmaxbackward"]], "Maximum": [[87, "maximum"]], "MatMul": [[86, "matmul"]], "MaxPoolBackward": [[89, "maxpoolbackward"]], "MaxPool": [[88, "maxpool"]], "Mish": [[91, "mish"]], "Minimum": [[90, "minimum"]], "MishBackward": [[92, "mishbackward"]], "Multiply": [[93, "multiply"]], "PReLU": [[94, "prelu"], [130, "prelu"], [263, "prelu"]], "Broadcasting Rules": [[94, "broadcasting-rules"], [95, "broadcasting-rules"]], "PReLUBackward": [[95, "prelubackward"]], "Quantize": [[96, "quantize"]], "Reciprocal": [[97, "reciprocal"]], "ReduceL1": [[98, "reducel1"]], "ReduceL2": [[99, "reducel2"]], "ReduceMean": [[101, "reducemean"]], "ReduceMax": [[100, "reducemax"]], "ReduceProd": [[103, "reduceprod"]], "ReduceMin": [[102, "reducemin"]], "ReLU": [[105, "relu"]], "ReduceSum": [[104, "reducesum"]], "Reorder": [[107, "reorder"], [134, "reorder"], [268, "reorder"]], "ReLUBackward": [[106, "relubackward"]], "Sigmoid": [[109, "sigmoid"]], "Round": [[108, "round"]], "Softmax": [[111, "softmax"], [138, "softmax"], [273, "softmax"]], "SigmoidBackward": [[110, "sigmoidbackward"]], "SoftmaxBackward": [[112, "softmaxbackward"]], "SoftPlus": [[113, "softplus"]], "Sqrt": [[115, "sqrt"]], "SoftPlusBackward": [[114, "softplusbackward"]], "Square": [[117, "square"]], "SqrtBackward": [[116, "sqrtbackward"]], "StaticReshape": [[119, "staticreshape"]], "SquaredDifference": [[118, "squareddifference"]], "StaticTranspose": [[120, "statictranspose"]], "Subtract": [[121, "subtract"]], "Tanh": [[122, "tanh"]], "TanhBackward": [[123, "tanhbackward"]], "Wildcard": [[125, "wildcard"]], "TypeCast": [[124, "typecast"]], "OpenCL Interoperability": [[126, "opencl-interoperability"]], "OpenCL Buffers and USM Interfaces for Memory Objects": [[126, "opencl-buffers-and-usm-interfaces-for-memory-objects"]], "Handling Dependencies": [[126, "handling-dependencies"]], "Configuring oneDNN for Benchmarking": [[127, "configuring-onednn-for-benchmarking"]], "Threading Runtimes": [[127, "threading-runtimes"]], "Benchmarking Settings": [[127, "benchmarking-settings"]], "Whole Machine": [[127, "whole-machine"]], "Single NUMA Domain": [[127, "single-numa-domain"]], "Several Cores Within a NUMA Domain": [[127, "several-cores-within-a-numa-domain"]], "Persistent Cache": [[128, "persistent-cache"]], "Primitive": [[128, "primitive"]], "Relation to Primitive Cache": [[128, "relation-to-primitive-cache"]], "API Usage Example": [[128, "api-usage-example"], [128, "id1"]], "Engine": [[128, "engine"], [253, "engine"], [284, "engine"]], "Pooling": [[129, "pooling"], [262, "pooling"]], "Primitive Cache": [[131, "primitive-cache"], [264, "primitive-cache"]], "Managing Memory Consumption": [[131, "managing-memory-consumption"]], "Profiling": [[131, "profiling"]], "Profiling oneDNN Performance": [[132, "profiling-onednn-performance"]], "Features for VTune Amplifier": [[132, "features-for-vtune-amplifier"]], "ITT Tagging for Primitive Execution": [[132, "itt-tagging-for-primitive-execution"]], "Example: Profiling with VTune Amplifier": [[132, "example-profiling-with-vtune-amplifier"]], "Profiling for Hotspots": [[132, "profiling-for-hotspots"]], "Profiling for Microarchitecture Information": [[132, "profiling-for-microarchitecture-information"]], "Example: Profiling with Linux Perf": [[132, "example-profiling-with-linux-perf"]], "Reduction": [[133, "reduction"], [267, "reduction"]], "Notes": [[133, "notes"]], "Resampling": [[135, "resampling"], [269, "resampling"]], "Nearest Neighbor Resampling": [[135, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[135, "bilinear-resampling"]], "Shuffle": [[137, "shuffle"], [272, "shuffle"]], "Data Layouts": [[137, "data-layouts"]], "RNN": [[136, "rnn"], [270, "rnn"]], "Cell Functions": [[136, "cell-functions"]], "Vanilla RNN": [[136, "vanilla-rnn"]], "LSTM": [[136, "lstm"]], "LSTM (or Vanilla LSTM)": [[136, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[136, "lstm-with-peephole"]], "LSTM with Projection (or LSTMP)": [[136, "lstm-with-projection-or-lstmp"]], "GRU": [[136, "gru"]], "Linear-Before-Reset GRU": [[136, "linear-before-reset-gru"]], "AUGRU": [[136, "augru"]], "Linear-Before-Reset AUGRU": [[136, "linear-before-reset-augru"]], "Considerations for Training": [[136, "considerations-for-training"]], "Sum": [[139, "sum"], [275, "sum"]], "fp32 Training": [[141, "fp32-training"]], "bfp16 Training": [[141, "bfp16-training"]], "Using oneDNN with Threadpool-Based Threading": [[140, "using-onednn-with-threadpool-based-threading"]], "Transitioning from Intel MKL-DNN to oneDNN": [[143, "transitioning-from-intel-mkl-dnn-to-onednn"]], "Summary of Changes": [[143, "summary-of-changes"]], "Source Code Changes": [[143, "source-code-changes"]], "Build Process": [[143, "build-process"]], "Broken Compatibility with Intel MKL-DNN": [[143, "broken-compatibility-with-intel-mkl-dnn"]], "Information for Developers": [[143, "information-for-developers"]], "Bfloat16 Training": [[142, "bfloat16-training"]], "bfloat16 Support": [[142, "bfloat16-support"]], "bfloat16 Workflow": [[142, "bfloat16-workflow"]], "Understanding Memory Formats": [[144, "understanding-memory-formats"]], "Nomenclature Used": [[144, "nomenclature-used"]], "Data Formats": [[144, "data-formats"]], "Plain Data Formats": [[144, "plain-data-formats"]], "NCHW": [[144, "nchw"]], "NHWC": [[144, "nhwc"]], "CHWN": [[144, "chwn"]], "Relevant Reading": [[144, "relevant-reading"]], "Generalization of the Plain Data Layout": [[144, "generalization-of-the-plain-data-layout"]], "Strides": [[144, "strides"]], "Blocked Layout": [[144, "blocked-layout"]], "What if Channels Are not Multiples of 8 (or 16)?": [[144, "what-if-channels-are-not-multiples-of-8-or-16"]], "Verbose Mode": [[145, "verbose-mode"]], "Enable ONEDNN_VERBOSE": [[145, "enable-onednn-verbose"]], "Enable ONEDNN_VERBOSE with timestamps": [[145, "enable-onednn-verbose-with-timestamps"]], "Decrypting the Output": [[145, "decrypting-the-output"]], "Profiling with VTune(TM) Amplifier": [[146, "profiling-with-vtune-tm-amplifier"]], "enum dnnl_alg_kind_t": [[147, "enum-dnnl-alg-kind-t"]], "Enum Values": [[147, "enum-values"], [148, "enum-values"], [149, "enum-values"], [151, "enum-values"], [150, "enum-values"], [152, "enum-values"], [153, "enum-values"], [155, "enum-values"], [154, "enum-values"], [156, "enum-values"], [157, "enum-values"], [158, "enum-values"], [159, "enum-values"], [160, "enum-values"], [161, "enum-values"], [163, "enum-values"], [162, "enum-values"], [164, "enum-values"], [165, "enum-values"], [169, "enum-values"], [168, "enum-values"], [171, "enum-values"], [170, "enum-values"], [173, "enum-values"], [172, "enum-values"], [174, "enum-values"], [175, "enum-values"], [176, "enum-values"], [177, "enum-values"], [178, "enum-values"], [179, "enum-values"], [181, "enum-values"], [180, "enum-values"], [182, "enum-values"], [183, "enum-values"], [185, "enum-values"], [184, "enum-values"], [186, "enum-values"], [187, "enum-values"], [188, "enum-values"], [189, "enum-values"], [191, "enum-values"], [190, "enum-values"], [193, "enum-values"], [192, "enum-values"], [194, "enum-values"], [195, "enum-values"], [196, "enum-values"], [197, "enum-values"], [198, "enum-values"]], "enum dnnl::algorithm": [[148, "enum-dnnl-algorithm"]], "enum dnnl::cpu_isa": [[149, "enum-dnnl-cpu-isa"]], "enum dnnl_cpu_isa_hints_t": [[151, "enum-dnnl-cpu-isa-hints-t"]], "enum dnnl::cpu_isa_hints": [[150, "enum-dnnl-cpu-isa-hints"]], "enum dnnl_cpu_isa_t": [[152, "enum-dnnl-cpu-isa-t"]], "enum dnnl_data_type_t": [[153, "enum-dnnl-data-type-t"]], "enum dnnl_engine_kind_t": [[155, "enum-dnnl-engine-kind-t"]], "enum dnnl::engine::kind": [[154, "enum-dnnl-engine-kind"]], "enum dnnl_format_kind_t": [[156, "enum-dnnl-format-kind-t"]], "enum dnnl_format_tag_t": [[157, "enum-dnnl-format-tag-t"]], "enum dnnl::fpmath_mode": [[158, "enum-dnnl-fpmath-mode"]], "enum dnnl_fpmath_mode_t": [[159, "enum-dnnl-fpmath-mode-t"]], "enum dnnl_graph_layout_type_t": [[160, "enum-dnnl-graph-layout-type-t"]], "enum dnnl::graph::logical_tensor::data_type": [[161, "enum-dnnl-graph-logical-tensor-data-type"]], "enum dnnl::graph::logical_tensor::property_type": [[163, "enum-dnnl-graph-logical-tensor-property-type"]], "enum dnnl::graph::logical_tensor::layout_type": [[162, "enum-dnnl-graph-logical-tensor-layout-type"]], "enum dnnl::graph::op::attr": [[164, "enum-dnnl-graph-op-attr"]], "enum dnnl_graph_op_attr_t": [[165, "enum-dnnl-graph-op-attr-t"]], "enum dnnl_graph_op_kind_t": [[167, "enum-dnnl-graph-op-kind-t"]], "enum dnnl::graph::op::kind": [[166, "enum-dnnl-graph-op-kind"]], "enum dnnl_graph_partition_policy_t": [[169, "enum-dnnl-graph-partition-policy-t"]], "enum dnnl::graph::partition::policy": [[168, "enum-dnnl-graph-partition-policy"]], "enum dnnl_graph_tensor_property_t": [[171, "enum-dnnl-graph-tensor-property-t"]], "enum dnnl::graph::status": [[170, "enum-dnnl-graph-status"]], "enum dnnl::memory::format_kind": [[173, "enum-dnnl-memory-format-kind"]], "enum dnnl::memory::data_type": [[172, "enum-dnnl-memory-data-type"]], "enum dnnl::memory::format_tag": [[174, "enum-dnnl-memory-format-tag"]], "enum dnnl::memory::sparse_encoding": [[175, "enum-dnnl-memory-sparse-encoding"]], "enum dnnl::normalization_flags": [[176, "enum-dnnl-normalization-flags"]], "enum dnnl_normalization_flags_t": [[177, "enum-dnnl-normalization-flags-t"]], "enum dnnl::ocl_interop::memory_kind": [[178, "enum-dnnl-ocl-interop-memory-kind"]], "enum dnnl_ocl_interop_memory_kind_t": [[179, "enum-dnnl-ocl-interop-memory-kind-t"]], "enum dnnl_primitive_kind_t": [[181, "enum-dnnl-primitive-kind-t"]], "enum dnnl::primitive::kind": [[180, "enum-dnnl-primitive-kind"]], "enum dnnl::prop_kind": [[182, "enum-dnnl-prop-kind"]], "enum dnnl_prop_kind_t": [[183, "enum-dnnl-prop-kind-t"]], "enum dnnl_query_t": [[185, "enum-dnnl-query-t"]], "enum dnnl::query": [[184, "enum-dnnl-query"]], "enum dnnl::rnn_direction": [[186, "enum-dnnl-rnn-direction"]], "enum dnnl_rnn_direction_t": [[187, "enum-dnnl-rnn-direction-t"]], "enum dnnl::rnn_flags": [[188, "enum-dnnl-rnn-flags"]], "enum dnnl_rnn_flags_t": [[189, "enum-dnnl-rnn-flags-t"]], "enum dnnl_scratchpad_mode_t": [[191, "enum-dnnl-scratchpad-mode-t"]], "enum dnnl::scratchpad_mode": [[190, "enum-dnnl-scratchpad-mode"]], "enum dnnl::status": [[193, "enum-dnnl-status"]], "enum dnnl_sparse_encoding_t": [[192, "enum-dnnl-sparse-encoding-t"]], "enum dnnl_status_t": [[194, "enum-dnnl-status-t"]], "enum dnnl::stream::flags": [[195, "enum-dnnl-stream-flags"]], "enum dnnl_stream_flags_t": [[196, "enum-dnnl-stream-flags-t"]], "enum dnnl::sycl_interop::memory_kind": [[197, "enum-dnnl-sycl-interop-memory-kind"]], "augru.cpp": [[199, "augru-cpp"]], "enum dnnl_sycl_interop_memory_kind_t": [[198, "enum-dnnl-sycl-interop-memory-kind-t"]], "batch_normalization.cpp": [[200, "batch-normalization-cpp"]], "binary.cpp": [[201, "binary-cpp"]], "bnorm_u8_via_binary_postops.cpp": [[202, "bnorm-u8-via-binary-postops-cpp"]], "cnn_inference_f32.c": [[203, "cnn-inference-f32-c"]], "cnn_inference_f32.cpp": [[204, "cnn-inference-f32-cpp"]], "cnn_inference_int8.cpp": [[205, "cnn-inference-int8-cpp"]], "cnn_training_bf16.cpp": [[206, "cnn-training-bf16-cpp"]], "cnn_training_f32.cpp": [[207, "cnn-training-f32-cpp"]], "concat.cpp": [[208, "concat-cpp"]], "convolution.cpp": [[209, "convolution-cpp"]], "cpu_matmul_quantization.cpp": [[211, "cpu-matmul-quantization-cpp"]], "cpu_cnn_training_f32.c": [[210, "cpu-cnn-training-f32-c"]], "cpu_rnn_inference_int8.cpp": [[213, "cpu-rnn-inference-int8-cpp"]], "cpu_rnn_inference_f32.cpp": [[212, "cpu-rnn-inference-f32-cpp"]], "cpu_sgemm_and_matmul.cpp": [[214, "cpu-sgemm-and-matmul-cpp"]], "cross_engine_reorder.c": [[215, "cross-engine-reorder-c"]], "cross_engine_reorder.cpp": [[216, "cross-engine-reorder-cpp"]], "eltwise.cpp": [[217, "eltwise-cpp"]], "gpu_opencl_interop.cpp": [[219, "gpu-opencl-interop-cpp"]], "getting_started.cpp": [[218, "getting-started-cpp"]], "inference_int8_matmul.cpp": [[220, "inference-int8-matmul-cpp"]], "inner_product.cpp": [[221, "inner-product-cpp"]], "lrn.cpp": [[223, "lrn-cpp"]], "layer_normalization.cpp": [[222, "layer-normalization-cpp"]], "matmul.cpp": [[225, "matmul-cpp"]], "lstm.cpp": [[224, "lstm-cpp"]], "performance_profiling.cpp": [[227, "performance-profiling-cpp"]], "memory_format_propagation.cpp": [[226, "memory-format-propagation-cpp"]], "pooling.cpp": [[228, "pooling-cpp"]], "prelu.cpp": [[229, "prelu-cpp"]], "reduction.cpp": [[230, "reduction-cpp"]], "reorder.cpp": [[231, "reorder-cpp"]], "resampling.cpp": [[232, "resampling-cpp"]], "rnn_training_f32.cpp": [[233, "rnn-training-f32-cpp"]], "softmax.cpp": [[235, "softmax-cpp"]], "shuffle.cpp": [[234, "shuffle-cpp"]], "sycl_interop_buffer.cpp": [[237, "sycl-interop-buffer-cpp"]], "sum.cpp": [[236, "sum-cpp"]], "Global Namespace": [[238, "global-namespace"]], "Programming Model": [[240, "programming-model"], [371, "programming-model"]], "Supported Operations": [[241, "supported-operations"]], "oneDNN API": [[242, "onednn-api"]], "Global Functions": [[243, "global-functions"], [244, "global-functions"], [245, "global-functions"], [246, "global-functions"], [249, "global-functions"], [248, "global-functions"], [251, "global-functions"], [253, "global-functions"], [252, "global-functions"], [254, "global-functions"], [255, "global-functions"], [257, "global-functions"], [259, "global-functions"], [258, "global-functions"], [261, "global-functions"], [260, "global-functions"], [262, "global-functions"], [263, "global-functions"], [264, "global-functions"], [266, "global-functions"], [267, "global-functions"], [268, "global-functions"], [269, "global-functions"], [270, "global-functions"], [271, "global-functions"], [273, "global-functions"], [272, "global-functions"], [274, "global-functions"], [275, "global-functions"], [276, "global-functions"], [277, "global-functions"], [281, "global-functions"], [280, "global-functions"], [283, "global-functions"], [282, "global-functions"], [284, "global-functions"], [285, "global-functions"], [287, "global-functions"], [289, "global-functions"], [288, "global-functions"], [291, "global-functions"], [292, "global-functions"], [299, "global-functions"], [298, "global-functions"], [300, "global-functions"], [301, "global-functions"]], "BLAS functions": [[246, "blas-functions"]], "Common API": [[247, "common-api"]], "Data types": [[250, "data-types"]], "Macros": [[250, "macros"], [260, "macros"], [266, "macros"], [271, "macros"], [287, "macros"]], "Deconvolution": [[251, "deconvolution"]], "Floating-point Math Mode": [[254, "floating-point-math-mode"]], "Runtime interoperability API": [[256, "runtime-interoperability-api"], [286, "runtime-interoperability-api"]], "LRN": [[258, "lrn"]], "OpenCL interoperability API": [[261, "opencl-interoperability-api"]], "Memory": [[260, "memory"]], "Common": [[266, "common"]], "Service": [[271, "service"]], "Stream": [[274, "stream"]], "SYCL interoperability API": [[276, "sycl-interoperability-api"], [291, "sycl-interoperability-api"]], "Threadpool interoperability API": [[277, "threadpool-interoperability-api"]], "Graph API": [[279, "graph-api"]], "Utilities": [[278, "utilities"], [293, "utilities"]], "Allocator": [[280, "allocator"]], "Constant Tensor Cache": [[283, "constant-tensor-cache"]], "Compiled Partition Cache": [[282, "compiled-partition-cache"]], "Status": [[290, "status"]], "oneAPI Deep Neural Network Library Developer Guide and Reference": [[294, "oneapi-deep-neural-network-library-developer-guide-and-reference"]], "Interoperability with DPC++ and OpenCL": [[295, "interoperability-with-dpc-and-opencl"]], "namespace dnnl": [[296, "namespace-dnnl"]], "namespace dnnl::graph": [[297, "namespace-dnnl-graph"]], "namespace dnnl::ocl_interop": [[299, "namespace-dnnl-ocl-interop"]], "namespace dnnl::graph::sycl_interop": [[298, "namespace-dnnl-graph-sycl-interop"]], "namespace dnnl::sycl_interop": [[300, "namespace-dnnl-sycl-interop"]], "namespace dnnl::threadpool_interop": [[301, "namespace-dnnl-threadpool-interop"]], "namespace std": [[303, "namespace-std"]], "namespace oneapi": [[302, "namespace-oneapi"]], "namespace sycl": [[304, "namespace-sycl"]], "Orphans": [[305, "orphans"]], "<Untitled>": [[307, "untitled"], [309, "untitled"], [311, "untitled"], [313, "untitled"], [320, "untitled"], [322, "untitled"], [325, "untitled"], [329, "untitled"], [333, "untitled"], [337, "untitled"], [339, "untitled"], [341, "untitled"], [344, "untitled"], [346, "untitled"], [348, "untitled"], [352, "untitled"], [354, "untitled"], [356, "untitled"], [358, "untitled"], [360, "untitled"], [363, "untitled"], [365, "untitled"], [367, "untitled"]], "AUGRU RNN Primitive Example": [[306, "augru-rnn-primitive-example"]], "Batch Normalization Primitive Example": [[308, "batch-normalization-primitive-example"]], "Binary Primitive Example": [[310, "binary-primitive-example"]], "Bnorm u8 by binary post-ops example": [[312, "bnorm-u8-by-binary-post-ops-example"]], "CNN f32 inference example": [[314, "cnn-f32-inference-example"], [315, "cnn-f32-inference-example"]], "CNN int8 inference example": [[316, "cnn-int8-inference-example"]], "CNN bf16 training example": [[317, "cnn-bf16-training-example"]], "Concat Primitive Example": [[319, "concat-primitive-example"]], "CNN f32 training example": [[318, "cnn-f32-training-example"], [323, "cnn-f32-training-example"]], "Convolution Primitive Example": [[321, "convolution-primitive-example"]], "MatMul Tutorial: Quantization": [[324, "matmul-tutorial-quantization"]], "RNN f32 inference example": [[326, "rnn-f32-inference-example"]], "RNN int8 inference example": [[327, "rnn-int8-inference-example"]], "MatMul Tutorial: Comparison with SGEMM": [[328, "matmul-tutorial-comparison-with-sgemm"]], "Reorder between CPU and GPU engines": [[330, "reorder-between-cpu-and-gpu-engines"], [331, "reorder-between-cpu-and-gpu-engines"]], "Public headers": [[331, "public-headers"], [334, "public-headers"], [335, "public-headers"], [368, "public-headers"]], "cross_engine_reorder_tutorial() function": [[331, "cross-engine-reorder-tutorial-function"]], "Engine and stream": [[331, "engine-and-stream"], [334, "engine-and-stream"], [335, "engine-and-stream"], [368, "engine-and-stream"]], "Wrapping data into oneDNN GPU memory object": [[331, "wrapping-data-into-onednn-gpu-memory-object"]], "Creating a ReLU primitive": [[331, "creating-a-relu-primitive"], [334, "creating-a-relu-primitive"]], "Getting results from a oneDNN GPU memory object": [[331, "getting-results-from-a-onednn-gpu-memory-object"]], "Executing all primitives": [[331, "executing-all-primitives"]], "Validate the result": [[331, "validate-the-result"]], "Element-Wise Primitive Example": [[332, "element-wise-primitive-example"]], "Getting started": [[334, "getting-started"]], "getting_started_tutorial() function": [[334, "getting-started-tutorial-function"]], "Data preparation (code outside of oneDNN)": [[334, "data-preparation-code-outside-of-onednn"]], "Wrapping data into a oneDNN memory object": [[334, "wrapping-data-into-a-onednn-memory-object"]], "Memory descriptor": [[334, "memory-descriptor"]], "Alternative way to create a memory descriptor": [[334, "alternative-way-to-create-a-memory-descriptor"]], "Creating a memory object": [[334, "creating-a-memory-object"]], "Executing the ReLU primitive": [[334, "executing-the-relu-primitive"]], "Obtaining the result and validation": [[334, "obtaining-the-result-and-validation"]], "main() function": [[334, "main-function"], [368, "main-function"]], "Getting started on GPU with OpenCL extensions API": [[335, "getting-started-on-gpu-with-opencl-extensions-api"]], "gpu_opencl_interop_tutorial() function": [[335, "gpu-opencl-interop-tutorial-function"]], "Wrapping data into oneDNN memory object": [[335, "wrapping-data-into-onednn-memory-object"], [368, "wrapping-data-into-onednn-memory-object"]], "Initialize the data by executing a custom OpenCL kernel": [[335, "initialize-the-data-by-executing-a-custom-opencl-kernel"]], "Create and execute a primitive": [[335, "create-and-execute-a-primitive"], [368, "create-and-execute-a-primitive"]], "Validate the results": [[335, "validate-the-results"], [368, "validate-the-results"]], "MatMul Tutorial: INT8 Inference": [[336, "matmul-tutorial-int8-inference"]], "Inner Product Primitive Example": [[338, "inner-product-primitive-example"]], "Layer Normalization Primitive Example": [[340, "layer-normalization-primitive-example"]], "Legal Information": [[342, "legal-information"]], "Trademark Information": [[342, "trademark-information"]], "Local Response Normalization Primitive Example": [[343, "local-response-normalization-primitive-example"]], "LSTM RNN Primitive Example": [[345, "lstm-rnn-primitive-example"]], "Matmul Primitive Example": [[347, "matmul-primitive-example"]], "Memory Format Propagation": [[349, "memory-format-propagation"]], "Introduction to the tutorial": [[349, "introduction-to-the-tutorial"]], "memory_format_propagation() function": [[349, "memory-format-propagation-function"]], "Initialization": [[349, "initialization"]], "Create convolution and pooling primitives": [[349, "create-convolution-and-pooling-primitives"]], "Create source and destination memory objects": [[349, "create-source-and-destination-memory-objects"]], "Determine if source and destination need to be reordered": [[349, "determine-if-source-and-destination-need-to-be-reordered"]], "Allocate intermediate buffers if necessary": [[349, "allocate-intermediate-buffers-if-necessary"]], "Perform reorders for source data if necessary": [[349, "perform-reorders-for-source-data-if-necessary"]], "Create and execute convolution and pooling primitives": [[349, "create-and-execute-convolution-and-pooling-primitives"]], "Reorder destination data if necessary": [[349, "reorder-destination-data-if-necessary"]], "Results": [[349, "results"]], "Performance Profiling Example": [[350, "performance-profiling-example"]], "Walkthrough": [[350, "walkthrough"]], "Naive Implementation": [[350, "naive-implementation"]], "Blocked format implementation": [[350, "blocked-format-implementation"]], "Fused Implementation": [[350, "fused-implementation"]], "Performance summary": [[350, "performance-summary"]], "Configuration Notice": [[350, "configuration-notice"]], "Pooling Primitive Example": [[351, "pooling-primitive-example"]], "Primitive Example": [[353, "primitive-example"]], "Reduction Primitive Example": [[355, "reduction-primitive-example"]], "Reorder Primitive Example": [[357, "reorder-primitive-example"]], "Resampling Primitive Example": [[359, "resampling-primitive-example"]], "RNN f32 training example": [[361, "rnn-f32-training-example"]], "Shuffle Primitive Example": [[362, "shuffle-primitive-example"]], "Softmax Primitive Example": [[364, "softmax-primitive-example"]], "Sum Primitive Example": [[366, "sum-primitive-example"]], "Getting started on both CPU and GPU with SYCL extensions API": [[368, "getting-started-on-both-cpu-and-gpu-with-sycl-extensions-api"]], "sycl_interop_buffer_tutorial() function": [[368, "sycl-interop-buffer-tutorial-function"]], "Initialize the data executing a custom SYCL kernel": [[368, "initialize-the-data-executing-a-custom-sycl-kernel"]], "Todo List": [[369, "todo-list"]], "Performance Profiling and Inspection": [[370, "performance-profiling-and-inspection"]], "struct dnnl::augru_backward": [[373, "struct-dnnl-augru-backward"]], "Inherited Members": [[373, "inherited-members"], [374, "inherited-members"], [375, "inherited-members"], [377, "inherited-members"], [376, "inherited-members"], [378, "inherited-members"], [379, "inherited-members"], [381, "inherited-members"], [380, "inherited-members"], [382, "inherited-members"], [383, "inherited-members"], [385, "inherited-members"], [384, "inherited-members"], [387, "inherited-members"], [386, "inherited-members"], [388, "inherited-members"], [389, "inherited-members"], [391, "inherited-members"], [390, "inherited-members"], [392, "inherited-members"], [393, "inherited-members"], [395, "inherited-members"], [394, "inherited-members"], [397, "inherited-members"], [396, "inherited-members"], [398, "inherited-members"], [399, "inherited-members"], [400, "inherited-members"], [402, "inherited-members"], [407, "inherited-members"], [409, "inherited-members"], [408, "inherited-members"], [410, "inherited-members"], [413, "inherited-members"], [415, "inherited-members"], [414, "inherited-members"], [416, "inherited-members"], [417, "inherited-members"], [418, "inherited-members"], [419, "inherited-members"], [421, "inherited-members"], [420, "inherited-members"], [422, "inherited-members"], [423, "inherited-members"], [424, "inherited-members"], [425, "inherited-members"], [426, "inherited-members"], [427, "inherited-members"], [429, "inherited-members"], [428, "inherited-members"], [430, "inherited-members"], [431, "inherited-members"], [433, "inherited-members"], [432, "inherited-members"], [434, "inherited-members"], [435, "inherited-members"], [436, "inherited-members"], [437, "inherited-members"], [438, "inherited-members"], [439, "inherited-members"], [440, "inherited-members"], [442, "inherited-members"], [445, "inherited-members"], [444, "inherited-members"], [447, "inherited-members"], [446, "inherited-members"], [448, "inherited-members"], [451, "inherited-members"], [450, "inherited-members"], [452, "inherited-members"], [453, "inherited-members"], [454, "inherited-members"], [456, "inherited-members"], [458, "inherited-members"], [460, "inherited-members"], [461, "inherited-members"], [462, "inherited-members"], [463, "inherited-members"], [464, "inherited-members"], [465, "inherited-members"], [466, "inherited-members"], [467, "inherited-members"], [468, "inherited-members"], [469, "inherited-members"], [470, "inherited-members"], [471, "inherited-members"], [473, "inherited-members"], [472, "inherited-members"], [474, "inherited-members"], [475, "inherited-members"], [476, "inherited-members"], [477, "inherited-members"], [478, "inherited-members"], [481, "inherited-members"], [480, "inherited-members"], [482, "inherited-members"], [484, "inherited-members"], [485, "inherited-members"], [486, "inherited-members"], [487, "inherited-members"]], "struct args_t": [[372, "struct-args-t"]], "struct dnnl::augru_backward::primitive_desc": [[374, "struct-dnnl-augru-backward-primitive-desc"]], "struct dnnl::augru_forward": [[375, "struct-dnnl-augru-forward"]], "struct dnnl::batch_normalization_backward": [[377, "struct-dnnl-batch-normalization-backward"]], "struct dnnl::augru_forward::primitive_desc": [[376, "struct-dnnl-augru-forward-primitive-desc"]], "struct dnnl::batch_normalization_backward::primitive_desc": [[378, "struct-dnnl-batch-normalization-backward-primitive-desc"]], "struct dnnl::batch_normalization_forward": [[379, "struct-dnnl-batch-normalization-forward"]], "struct dnnl::binary": [[381, "struct-dnnl-binary"]], "struct dnnl::batch_normalization_forward::primitive_desc": [[380, "struct-dnnl-batch-normalization-forward-primitive-desc"]], "struct dnnl::binary::primitive_desc": [[382, "struct-dnnl-binary-primitive-desc"]], "struct dnnl::concat": [[383, "struct-dnnl-concat"]], "struct dnnl::convolution_backward_data": [[385, "struct-dnnl-convolution-backward-data"]], "struct dnnl::concat::primitive_desc": [[384, "struct-dnnl-concat-primitive-desc"]], "struct dnnl::convolution_backward_weights": [[387, "struct-dnnl-convolution-backward-weights"]], "struct dnnl::convolution_backward_data::primitive_desc": [[386, "struct-dnnl-convolution-backward-data-primitive-desc"]], "struct dnnl::convolution_backward_weights::primitive_desc": [[388, "struct-dnnl-convolution-backward-weights-primitive-desc"]], "struct dnnl::convolution_forward": [[389, "struct-dnnl-convolution-forward"]], "struct dnnl::deconvolution_backward_data": [[391, "struct-dnnl-deconvolution-backward-data"]], "struct dnnl::convolution_forward::primitive_desc": [[390, "struct-dnnl-convolution-forward-primitive-desc"]], "struct dnnl::deconvolution_backward_data::primitive_desc": [[392, "struct-dnnl-deconvolution-backward-data-primitive-desc"]], "struct dnnl::deconvolution_backward_weights": [[393, "struct-dnnl-deconvolution-backward-weights"]], "struct dnnl::deconvolution_forward": [[395, "struct-dnnl-deconvolution-forward"]], "struct dnnl::deconvolution_backward_weights::primitive_desc": [[394, "struct-dnnl-deconvolution-backward-weights-primitive-desc"]], "struct dnnl::eltwise_backward": [[397, "struct-dnnl-eltwise-backward"]], "struct dnnl::deconvolution_forward::primitive_desc": [[396, "struct-dnnl-deconvolution-forward-primitive-desc"]], "struct dnnl::eltwise_backward::primitive_desc": [[398, "struct-dnnl-eltwise-backward-primitive-desc"]], "struct dnnl::eltwise_forward": [[399, "struct-dnnl-eltwise-forward"]], "struct dnnl_engine": [[401, "struct-dnnl-engine"]], "struct dnnl::eltwise_forward::primitive_desc": [[400, "struct-dnnl-eltwise-forward-primitive-desc"]], "struct dnnl::error": [[403, "struct-dnnl-error"]], "struct dnnl::engine": [[402, "struct-dnnl-engine"]], "struct dnnl_exec_arg_t": [[404, "struct-dnnl-exec-arg-t"]], "Fields": [[404, "fields"], [405, "fields"], [406, "fields"], [483, "fields"], [488, "fields"]], "struct dnnl_graph_inplace_pair_t": [[405, "struct-dnnl-graph-inplace-pair-t"]], "struct dnnl::gru_backward": [[407, "struct-dnnl-gru-backward"]], "struct dnnl_graph_logical_tensor_t": [[406, "struct-dnnl-graph-logical-tensor-t"]], "struct dnnl::gru_forward": [[409, "struct-dnnl-gru-forward"]], "struct dnnl::gru_backward::primitive_desc": [[408, "struct-dnnl-gru-backward-primitive-desc"]], "template struct dnnl::handle": [[411, "template-struct-dnnl-handle"]], "struct dnnl::gru_forward::primitive_desc": [[410, "struct-dnnl-gru-forward-primitive-desc"]], "struct dnnl::inner_product_backward_data": [[413, "struct-dnnl-inner-product-backward-data"]], "template struct dnnl::handle_traits": [[412, "template-struct-dnnl-handle-traits"]], "struct dnnl::inner_product_backward_weights": [[415, "struct-dnnl-inner-product-backward-weights"]], "struct dnnl::inner_product_backward_data::primitive_desc": [[414, "struct-dnnl-inner-product-backward-data-primitive-desc"]], "struct dnnl::inner_product_backward_weights::primitive_desc": [[416, "struct-dnnl-inner-product-backward-weights-primitive-desc"]], "struct dnnl::inner_product_forward": [[417, "struct-dnnl-inner-product-forward"]], "struct dnnl::inner_product_forward::primitive_desc": [[418, "struct-dnnl-inner-product-forward-primitive-desc"]], "struct dnnl::layer_normalization_backward": [[419, "struct-dnnl-layer-normalization-backward"]], "struct dnnl::layer_normalization_forward": [[421, "struct-dnnl-layer-normalization-forward"]], "struct dnnl::layer_normalization_backward::primitive_desc": [[420, "struct-dnnl-layer-normalization-backward-primitive-desc"]], "struct dnnl::layer_normalization_forward::primitive_desc": [[422, "struct-dnnl-layer-normalization-forward-primitive-desc"]], "struct dnnl::lbr_augru_backward": [[423, "struct-dnnl-lbr-augru-backward"]], "struct dnnl::lbr_augru_backward::primitive_desc": [[424, "struct-dnnl-lbr-augru-backward-primitive-desc"]], "struct dnnl::lbr_augru_forward": [[425, "struct-dnnl-lbr-augru-forward"]], "struct dnnl::lbr_augru_forward::primitive_desc": [[426, "struct-dnnl-lbr-augru-forward-primitive-desc"]], "struct dnnl::lbr_gru_backward": [[427, "struct-dnnl-lbr-gru-backward"]], "struct dnnl::lbr_gru_forward": [[429, "struct-dnnl-lbr-gru-forward"]], "struct dnnl::lbr_gru_backward::primitive_desc": [[428, "struct-dnnl-lbr-gru-backward-primitive-desc"]], "struct dnnl::lbr_gru_forward::primitive_desc": [[430, "struct-dnnl-lbr-gru-forward-primitive-desc"]], "struct dnnl::lrn_backward": [[431, "struct-dnnl-lrn-backward"]], "struct dnnl::lrn_forward": [[433, "struct-dnnl-lrn-forward"]], "struct dnnl::lrn_backward::primitive_desc": [[432, "struct-dnnl-lrn-backward-primitive-desc"]], "struct dnnl::lrn_forward::primitive_desc": [[434, "struct-dnnl-lrn-forward-primitive-desc"]], "struct dnnl::lstm_backward": [[435, "struct-dnnl-lstm-backward"]], "struct dnnl::lstm_backward::primitive_desc": [[436, "struct-dnnl-lstm-backward-primitive-desc"]], "struct dnnl::lstm_forward": [[437, "struct-dnnl-lstm-forward"]], "struct dnnl::lstm_forward::primitive_desc": [[438, "struct-dnnl-lstm-forward-primitive-desc"]], "struct dnnl::matmul": [[439, "struct-dnnl-matmul"]], "struct dnnl::matmul::primitive_desc": [[440, "struct-dnnl-matmul-primitive-desc"]], "struct dnnl_memory": [[441, "struct-dnnl-memory"]], "struct dnnl::memory": [[442, "struct-dnnl-memory"]], "struct dnnl_memory_desc": [[443, "struct-dnnl-memory-desc"]], "struct dnnl::pooling_backward": [[445, "struct-dnnl-pooling-backward"]], "struct dnnl::memory::desc": [[444, "struct-dnnl-memory-desc"]], "struct dnnl::pooling_forward": [[447, "struct-dnnl-pooling-forward"]], "struct dnnl::pooling_backward::primitive_desc": [[446, "struct-dnnl-pooling-backward-primitive-desc"]], "struct dnnl::pooling_forward::primitive_desc": [[448, "struct-dnnl-pooling-forward-primitive-desc"]], "struct dnnl_post_ops": [[449, "struct-dnnl-post-ops"]], "struct dnnl::prelu_backward": [[451, "struct-dnnl-prelu-backward"]], "struct dnnl::post_ops": [[450, "struct-dnnl-post-ops"]], "struct dnnl::prelu_backward::primitive_desc": [[452, "struct-dnnl-prelu-backward-primitive-desc"]], "struct dnnl::prelu_forward": [[453, "struct-dnnl-prelu-forward"]], "struct dnnl::prelu_forward::primitive_desc": [[454, "struct-dnnl-prelu-forward-primitive-desc"]], "struct dnnl_primitive": [[455, "struct-dnnl-primitive"]], "struct dnnl::primitive": [[456, "struct-dnnl-primitive"]], "struct dnnl_primitive_attr": [[457, "struct-dnnl-primitive-attr"]], "struct dnnl_primitive_desc": [[459, "struct-dnnl-primitive-desc"]], "struct dnnl::primitive_attr": [[458, "struct-dnnl-primitive-attr"]], "struct dnnl::primitive_desc": [[460, "struct-dnnl-primitive-desc"]], "struct dnnl::primitive_desc_base": [[461, "struct-dnnl-primitive-desc-base"]], "struct dnnl::reduction": [[462, "struct-dnnl-reduction"]], "struct dnnl::reduction::primitive_desc": [[463, "struct-dnnl-reduction-primitive-desc"]], "struct dnnl::reorder": [[464, "struct-dnnl-reorder"]], "struct dnnl::reorder::primitive_desc": [[465, "struct-dnnl-reorder-primitive-desc"]], "struct dnnl::resampling_backward": [[466, "struct-dnnl-resampling-backward"]], "struct dnnl::resampling_backward::primitive_desc": [[467, "struct-dnnl-resampling-backward-primitive-desc"]], "struct dnnl::resampling_forward": [[468, "struct-dnnl-resampling-forward"]], "struct dnnl::resampling_forward::primitive_desc": [[469, "struct-dnnl-resampling-forward-primitive-desc"]], "struct dnnl::rnn_primitive_desc_base": [[470, "struct-dnnl-rnn-primitive-desc-base"]], "struct dnnl::shuffle_backward": [[471, "struct-dnnl-shuffle-backward"]], "struct dnnl::shuffle_forward": [[473, "struct-dnnl-shuffle-forward"]], "struct dnnl::shuffle_backward::primitive_desc": [[472, "struct-dnnl-shuffle-backward-primitive-desc"]], "struct dnnl::shuffle_forward::primitive_desc": [[474, "struct-dnnl-shuffle-forward-primitive-desc"]], "struct dnnl::softmax_backward": [[475, "struct-dnnl-softmax-backward"]], "struct dnnl::softmax_backward::primitive_desc": [[476, "struct-dnnl-softmax-backward-primitive-desc"]], "struct dnnl::softmax_forward": [[477, "struct-dnnl-softmax-forward"]], "struct dnnl_stream": [[479, "struct-dnnl-stream"]], "struct dnnl::softmax_forward::primitive_desc": [[478, "struct-dnnl-softmax-forward-primitive-desc"]], "struct dnnl::sum": [[481, "struct-dnnl-sum"]], "struct dnnl::stream": [[480, "struct-dnnl-stream"]], "struct dnnl::threadpool_interop::threadpool_iface": [[483, "struct-dnnl-threadpool-interop-threadpool-iface"]], "struct dnnl::sum::primitive_desc": [[482, "struct-dnnl-sum-primitive-desc"]], "struct dnnl::vanilla_rnn_backward": [[484, "struct-dnnl-vanilla-rnn-backward"]], "struct dnnl::vanilla_rnn_backward::primitive_desc": [[485, "struct-dnnl-vanilla-rnn-backward-primitive-desc"]], "struct dnnl::vanilla_rnn_forward": [[486, "struct-dnnl-vanilla-rnn-forward"]], "struct dnnl::vanilla_rnn_forward::primitive_desc": [[487, "struct-dnnl-vanilla-rnn-forward-primitive-desc"]], "struct example_allows_unimplemented": [[489, "struct-example-allows-unimplemented"]], "struct dnnl_version_t": [[488, "struct-dnnl-version-t"]], "struct gemm_dims_t": [[490, "struct-gemm-dims-t"]], "Supported Primitives": [[491, "supported-primitives"]]}, "indexentries": {"allocator": [[2, "index-1"], [2, "index-2"], [280, "index-0"]], "class": [[2, "index-0"], [3, "index-0"], [4, "index-0"], [5, "index-0"], [6, "index-0"], [7, "index-0"], [8, "index-0"]], "dnnl::graph::allocator": [[2, "index-0"]], "function": [[2, "index-1"], [2, "index-2"], [3, "index-1"], [3, "index-2"], [3, "index-3"], [3, "index-4"], [3, "index-5"], [4, "index-1"], [4, "index-2"], [4, "index-3"], [4, "index-4"], [4, "index-5"], [4, "index-6"], [5, "index-10"], [5, "index-11"], [5, "index-12"], [5, "index-13"], [5, "index-14"], [5, "index-15"], [5, "index-16"], [5, "index-17"], [5, "index-18"], [5, "index-19"], [5, "index-20"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"], [6, "index-1"], [6, "index-2"], [6, "index-3"], [6, "index-4"], [6, "index-5"], [6, "index-6"], [6, "index-7"], [7, "index-1"], [7, "index-10"], [7, "index-2"], [7, "index-3"], [7, "index-4"], [7, "index-5"], [7, "index-6"], [7, "index-7"], [7, "index-8"], [7, "index-9"], [8, "index-1"], [8, "index-2"], [8, "index-3"], [8, "index-4"], [8, "index-5"], [243, "index-10"], [243, "index-11"], [243, "index-12"], [243, "index-13"], [243, "index-14"], [243, "index-15"], [243, "index-16"], [243, "index-17"], [243, "index-18"], [243, "index-19"], [243, "index-20"], [243, "index-21"], [243, "index-22"], [243, "index-23"], [243, "index-24"], [243, "index-25"], [243, "index-26"], [243, "index-27"], [243, "index-28"], [243, "index-29"], [243, "index-30"], [243, "index-31"], [243, "index-32"], [243, "index-33"], [243, "index-34"], [243, "index-35"], [243, "index-36"], [243, "index-37"], [243, "index-38"], [243, "index-39"], [243, "index-5"], [243, "index-6"], [243, "index-7"], [243, "index-8"], [243, "index-9"], [244, "index-1"], [244, "index-2"], [245, "index-1"], [246, "index-1"], [246, "index-2"], [246, "index-3"], [246, "index-4"], [246, "index-5"], [246, "index-6"], [248, "index-1"], [249, "index-1"], [249, "index-2"], [249, "index-3"], [251, "index-1"], [251, "index-2"], [251, "index-3"], [252, "index-1"], [252, "index-2"], [253, "index-2"], [253, "index-3"], [253, "index-4"], [253, "index-5"], [253, "index-6"], [254, "index-1"], [254, "index-2"], [254, "index-3"], [255, "index-1"], [255, "index-2"], [255, "index-3"], [257, "index-1"], [257, "index-2"], [258, "index-1"], [258, "index-2"], [259, "index-1"], [260, "index-10"], [260, "index-11"], [260, "index-12"], [260, "index-13"], [260, "index-14"], [260, "index-15"], [260, "index-16"], [260, "index-17"], [260, "index-18"], [260, "index-19"], [260, "index-20"], [260, "index-21"], [260, "index-22"], [260, "index-23"], [260, "index-24"], [260, "index-25"], [260, "index-26"], [260, "index-27"], [260, "index-28"], [260, "index-29"], [260, "index-30"], [260, "index-31"], [260, "index-5"], [260, "index-6"], [260, "index-7"], [260, "index-8"], [260, "index-9"], [261, "index-1"], [261, "index-10"], [261, "index-11"], [261, "index-12"], [261, "index-13"], [261, "index-2"], [261, "index-3"], [261, "index-4"], [261, "index-5"], [261, "index-6"], [261, "index-7"], [261, "index-8"], [261, "index-9"], [262, "index-1"], [262, "index-2"], [263, "index-1"], [263, "index-2"], [264, "index-1"], [264, "index-2"], [264, "index-3"], [264, "index-4"], [266, "index-10"], [266, "index-11"], [266, "index-12"], [266, "index-13"], [266, "index-14"], [266, "index-15"], [266, "index-16"], [266, "index-17"], [266, "index-18"], [266, "index-19"], [266, "index-20"], [266, "index-5"], [266, "index-6"], [266, "index-7"], [266, "index-8"], [266, "index-9"], [267, "index-1"], [268, "index-1"], [269, "index-1"], [269, "index-2"], [270, "index-1"], [270, "index-10"], [270, "index-11"], [270, "index-12"], [270, "index-13"], [270, "index-14"], [270, "index-2"], [270, "index-3"], [270, "index-4"], [270, "index-5"], [270, "index-6"], [270, "index-7"], [270, "index-8"], [270, "index-9"], [271, "index-10"], [271, "index-11"], [271, "index-12"], [271, "index-13"], [271, "index-14"], [271, "index-15"], [271, "index-16"], [271, "index-17"], [271, "index-18"], [271, "index-19"], [271, "index-2"], [271, "index-20"], [271, "index-21"], [271, "index-3"], [271, "index-4"], [271, "index-5"], [271, "index-6"], [271, "index-7"], [271, "index-8"], [271, "index-9"], [272, "index-1"], [272, "index-2"], [273, "index-1"], [273, "index-2"], [274, "index-3"], [274, "index-4"], [274, "index-5"], [274, "index-6"], [275, "index-1"], [276, "index-1"], [276, "index-2"], [276, "index-3"], [276, "index-4"], [276, "index-5"], [276, "index-6"], [276, "index-7"], [276, "index-8"], [276, "index-9"], [277, "index-1"], [277, "index-2"], [277, "index-3"], [277, "index-4"], [277, "index-5"], [277, "index-6"], [277, "index-7"], [280, "index-5"], [280, "index-6"], [281, "index-3"], [281, "index-4"], [281, "index-5"], [281, "index-6"], [281, "index-7"], [282, "index-1"], [282, "index-2"], [282, "index-3"], [282, "index-4"], [283, "index-1"], [283, "index-2"], [283, "index-3"], [283, "index-4"], [284, "index-1"], [284, "index-2"], [285, "index-10"], [285, "index-11"], [285, "index-3"], [285, "index-4"], [285, "index-5"], [285, "index-6"], [285, "index-7"], [285, "index-8"], [285, "index-9"], [287, "index-1"], [287, "index-2"], [287, "index-3"], [287, "index-4"], [287, "index-5"], [288, "index-10"], [288, "index-11"], [288, "index-12"], [288, "index-3"], [288, "index-4"], [288, "index-5"], [288, "index-6"], [288, "index-7"], [288, "index-8"], [288, "index-9"], [289, "index-10"], [289, "index-11"], [289, "index-12"], [289, "index-13"], [289, "index-14"], [289, "index-3"], [289, "index-4"], [289, "index-5"], [289, "index-6"], [289, "index-7"], [289, "index-8"], [289, "index-9"], [291, "index-3"], [291, "index-4"], [291, "index-5"], [292, "index-3"], [292, "index-4"], [292, "index-5"], [292, "index-6"], [292, "index-7"], [298, "index-1"], [298, "index-2"], [299, "index-1"], [299, "index-10"], [299, "index-11"], [299, "index-12"], [299, "index-13"], [299, "index-14"], [299, "index-15"], [299, "index-2"], [299, "index-3"], [299, "index-4"], [299, "index-5"], [299, "index-6"], [299, "index-7"], [299, "index-8"], [299, "index-9"], [300, "index-1"], [300, "index-10"], [300, "index-11"], [300, "index-12"], [300, "index-2"], [300, "index-3"], [300, "index-4"], [300, "index-5"], [300, "index-6"], [300, "index-7"], [300, "index-8"], [300, "index-9"], [301, "index-1"], [301, "index-2"], [301, "index-3"], [301, "index-4"], [301, "index-5"], [373, "index-1"], [373, "index-2"], [373, "index-3"], [374, "index-1"], [374, "index-10"], [374, "index-11"], [374, "index-12"], [374, "index-13"], [374, "index-14"], [374, "index-15"], [374, "index-16"], [374, "index-17"], [374, "index-18"], [374, "index-19"], [374, "index-2"], [374, "index-20"], [374, "index-21"], [374, "index-22"], [374, "index-23"], [374, "index-3"], [374, "index-4"], [374, "index-5"], [374, "index-6"], [374, "index-7"], [374, "index-8"], [374, "index-9"], [375, "index-1"], [375, "index-2"], [375, "index-3"], [376, "index-1"], [376, "index-10"], [376, "index-11"], [376, "index-12"], [376, "index-13"], [376, "index-14"], [376, "index-15"], [376, "index-2"], [376, "index-3"], [376, "index-4"], [376, "index-5"], [376, "index-6"], [376, "index-7"], [376, "index-8"], [376, "index-9"], [377, "index-1"], [377, "index-2"], [377, "index-3"], [378, "index-1"], [378, "index-10"], [378, "index-11"], [378, "index-12"], [378, "index-13"], [378, "index-14"], [378, "index-15"], [378, "index-2"], [378, "index-3"], [378, "index-4"], [378, "index-5"], [378, "index-6"], [378, "index-7"], [378, "index-8"], [378, "index-9"], [379, "index-1"], [379, "index-2"], [379, "index-3"], [380, "index-1"], [380, "index-10"], [380, "index-11"], [380, "index-12"], [380, "index-2"], [380, "index-3"], [380, "index-4"], [380, "index-5"], [380, "index-6"], [380, "index-7"], [380, "index-8"], [380, "index-9"], [381, "index-1"], [381, "index-2"], [381, "index-3"], [382, "index-1"], [382, "index-2"], [382, "index-3"], [382, "index-4"], [382, "index-5"], [382, "index-6"], [382, "index-7"], [382, "index-8"], [383, "index-1"], [383, "index-2"], [383, "index-3"], [384, "index-1"], [384, "index-10"], [384, "index-2"], [384, "index-3"], [384, "index-4"], [384, "index-5"], [384, "index-6"], [384, "index-7"], [384, "index-8"], [384, "index-9"], [385, "index-1"], [385, "index-2"], [385, "index-3"], [386, "index-1"], [386, "index-10"], [386, "index-11"], [386, "index-12"], [386, "index-13"], [386, "index-2"], [386, "index-3"], [386, "index-4"], [386, "index-5"], [386, "index-6"], [386, "index-7"], [386, "index-8"], [386, "index-9"], [387, "index-1"], [387, "index-2"], [387, "index-3"], [388, "index-1"], [388, "index-10"], [388, "index-11"], [388, "index-12"], [388, "index-13"], [388, "index-14"], [388, "index-15"], [388, "index-16"], [388, "index-2"], [388, "index-3"], [388, "index-4"], [388, "index-5"], [388, "index-6"], [388, "index-7"], [388, "index-8"], [388, "index-9"], [389, "index-1"], [389, "index-2"], [389, "index-3"], [390, "index-1"], [390, "index-10"], [390, "index-11"], [390, "index-12"], [390, "index-13"], [390, "index-14"], [390, "index-15"], [390, "index-16"], [390, "index-2"], [390, "index-3"], [390, "index-4"], [390, "index-5"], [390, "index-6"], [390, "index-7"], [390, "index-8"], [390, "index-9"], [391, "index-1"], [391, "index-2"], [391, "index-3"], [392, "index-1"], [392, "index-10"], [392, "index-11"], [392, "index-12"], [392, "index-13"], [392, "index-2"], [392, "index-3"], [392, "index-4"], [392, "index-5"], [392, "index-6"], [392, "index-7"], [392, "index-8"], [392, "index-9"], [393, "index-1"], [393, "index-2"], [393, "index-3"], [394, "index-1"], [394, "index-10"], [394, "index-11"], [394, "index-12"], [394, "index-13"], [394, "index-14"], [394, "index-15"], [394, "index-16"], [394, "index-2"], [394, "index-3"], [394, "index-4"], [394, "index-5"], [394, "index-6"], [394, "index-7"], [394, "index-8"], [394, "index-9"], [395, "index-1"], [395, "index-2"], [395, "index-3"], [396, "index-1"], [396, "index-10"], [396, "index-11"], [396, "index-12"], [396, "index-13"], [396, "index-14"], [396, "index-15"], [396, "index-16"], [396, "index-2"], [396, "index-3"], [396, "index-4"], [396, "index-5"], [396, "index-6"], [396, "index-7"], [396, "index-8"], [396, "index-9"], [397, "index-1"], [397, "index-2"], [397, "index-3"], [398, "index-1"], [398, "index-10"], [398, "index-11"], [398, "index-12"], [398, "index-2"], [398, "index-3"], [398, "index-4"], [398, "index-5"], [398, "index-6"], [398, "index-7"], [398, "index-8"], [398, "index-9"], [399, "index-1"], [399, "index-2"], [399, "index-3"], [400, "index-1"], [400, "index-10"], [400, "index-11"], [400, "index-2"], [400, "index-3"], [400, "index-4"], [400, "index-5"], [400, "index-6"], [400, "index-7"], [400, "index-8"], [400, "index-9"], [402, "index-1"], [402, "index-2"], [402, "index-3"], [402, "index-4"], [402, "index-5"], [402, "index-6"], [402, "index-7"], [402, "index-8"], [403, "index-1"], [403, "index-2"], [403, "index-3"], [407, "index-1"], [407, "index-2"], [407, "index-3"], [408, "index-1"], [408, "index-10"], [408, "index-11"], [408, "index-12"], [408, "index-13"], [408, "index-14"], [408, "index-15"], [408, "index-16"], [408, "index-17"], [408, "index-18"], [408, "index-19"], [408, "index-2"], [408, "index-20"], [408, "index-21"], [408, "index-3"], [408, "index-4"], [408, "index-5"], [408, "index-6"], [408, "index-7"], [408, "index-8"], [408, "index-9"], [409, "index-1"], [409, "index-2"], [409, "index-3"], [410, "index-1"], [410, "index-10"], [410, "index-11"], [410, "index-12"], [410, "index-13"], [410, "index-14"], [410, "index-2"], [410, "index-3"], [410, "index-4"], [410, "index-5"], [410, "index-6"], [410, "index-7"], [410, "index-8"], [410, "index-9"], [411, "index-1"], [411, "index-10"], [411, "index-11"], [411, "index-12"], [411, "index-2"], [411, "index-3"], [411, "index-4"], [411, "index-5"], [411, "index-6"], [411, "index-7"], [411, "index-8"], [411, "index-9"], [413, "index-1"], [413, "index-2"], [413, "index-3"], [414, "index-1"], [414, "index-2"], [414, "index-3"], [414, "index-4"], [414, "index-5"], [414, "index-6"], [414, "index-7"], [415, "index-1"], [415, "index-2"], [415, "index-3"], [416, "index-1"], [416, "index-2"], [416, "index-3"], [416, "index-4"], [416, "index-5"], [416, "index-6"], [416, "index-7"], [416, "index-8"], [416, "index-9"], [417, "index-1"], [417, "index-2"], [417, "index-3"], [418, "index-1"], [418, "index-2"], [418, "index-3"], [418, "index-4"], [418, "index-5"], [418, "index-6"], [418, "index-7"], [418, "index-8"], [418, "index-9"], [419, "index-1"], [419, "index-2"], [419, "index-3"], [420, "index-1"], [420, "index-10"], [420, "index-11"], [420, "index-12"], [420, "index-13"], [420, "index-14"], [420, "index-15"], [420, "index-16"], [420, "index-2"], [420, "index-3"], [420, "index-4"], [420, "index-5"], [420, "index-6"], [420, "index-7"], [420, "index-8"], [420, "index-9"], [421, "index-1"], [421, "index-2"], [421, "index-3"], [422, "index-1"], [422, "index-10"], [422, "index-11"], [422, "index-12"], [422, "index-13"], [422, "index-2"], [422, "index-3"], [422, "index-4"], [422, "index-5"], [422, "index-6"], [422, "index-7"], [422, "index-8"], [422, "index-9"], [423, "index-1"], [423, "index-2"], [423, "index-3"], [424, "index-1"], [424, "index-10"], [424, "index-11"], [424, "index-12"], [424, "index-13"], [424, "index-14"], [424, "index-15"], [424, "index-16"], [424, "index-17"], [424, "index-18"], [424, "index-19"], [424, "index-2"], [424, "index-20"], [424, "index-21"], [424, "index-22"], [424, "index-23"], [424, "index-3"], [424, "index-4"], [424, "index-5"], [424, "index-6"], [424, "index-7"], [424, "index-8"], [424, "index-9"], [425, "index-1"], [425, "index-2"], [425, "index-3"], [426, "index-1"], [426, "index-10"], [426, "index-11"], [426, "index-12"], [426, "index-13"], [426, "index-14"], [426, "index-15"], [426, "index-2"], [426, "index-3"], [426, "index-4"], [426, "index-5"], [426, "index-6"], [426, "index-7"], [426, "index-8"], [426, "index-9"], [427, "index-1"], [427, "index-2"], [427, "index-3"], [428, "index-1"], [428, "index-10"], [428, "index-11"], [428, "index-12"], [428, "index-13"], [428, "index-14"], [428, "index-15"], [428, "index-16"], [428, "index-17"], [428, "index-18"], [428, "index-19"], [428, "index-2"], [428, "index-20"], [428, "index-21"], [428, "index-3"], [428, "index-4"], [428, "index-5"], [428, "index-6"], [428, "index-7"], [428, "index-8"], [428, "index-9"], [429, "index-1"], [429, "index-2"], [429, "index-3"], [430, "index-1"], [430, "index-10"], [430, "index-11"], [430, "index-12"], [430, "index-13"], [430, "index-14"], [430, "index-2"], [430, "index-3"], [430, "index-4"], [430, "index-5"], [430, "index-6"], [430, "index-7"], [430, "index-8"], [430, "index-9"], [431, "index-1"], [431, "index-2"], [431, "index-3"], [432, "index-1"], [432, "index-10"], [432, "index-11"], [432, "index-12"], [432, "index-2"], [432, "index-3"], [432, "index-4"], [432, "index-5"], [432, "index-6"], [432, "index-7"], [432, "index-8"], [432, "index-9"], [433, "index-1"], [433, "index-2"], [433, "index-3"], [434, "index-1"], [434, "index-10"], [434, "index-11"], [434, "index-12"], [434, "index-2"], [434, "index-3"], [434, "index-4"], [434, "index-5"], [434, "index-6"], [434, "index-7"], [434, "index-8"], [434, "index-9"], [435, "index-1"], [435, "index-2"], [435, "index-3"], [436, "index-1"], [436, "index-10"], [436, "index-11"], [436, "index-12"], [436, "index-13"], [436, "index-14"], [436, "index-15"], [436, "index-16"], [436, "index-17"], [436, "index-18"], [436, "index-19"], [436, "index-2"], [436, "index-20"], [436, "index-21"], [436, "index-22"], [436, "index-23"], [436, "index-24"], [436, "index-25"], [436, "index-26"], [436, "index-27"], [436, "index-28"], [436, "index-29"], [436, "index-3"], [436, "index-30"], [436, "index-31"], [436, "index-4"], [436, "index-5"], [436, "index-6"], [436, "index-7"], [436, "index-8"], [436, "index-9"], [437, "index-1"], [437, "index-2"], [437, "index-3"], [438, "index-1"], [438, "index-10"], [438, "index-11"], [438, "index-12"], [438, "index-13"], [438, "index-14"], [438, "index-15"], [438, "index-16"], [438, "index-17"], [438, "index-18"], [438, "index-19"], [438, "index-2"], [438, "index-20"], [438, "index-3"], [438, "index-4"], [438, "index-5"], [438, "index-6"], [438, "index-7"], [438, "index-8"], [438, "index-9"], [439, "index-1"], [439, "index-2"], [439, "index-3"], [440, "index-1"], [440, "index-2"], [440, "index-3"], [440, "index-4"], [440, "index-5"], [440, "index-6"], [440, "index-7"], [440, "index-8"], [442, "index-10"], [442, "index-11"], [442, "index-12"], [442, "index-13"], [442, "index-14"], [442, "index-15"], [442, "index-16"], [442, "index-17"], [442, "index-18"], [442, "index-3"], [442, "index-4"], [442, "index-5"], [442, "index-6"], [442, "index-7"], [442, "index-8"], [442, "index-9"], [444, "index-1"], [444, "index-10"], [444, "index-11"], [444, "index-12"], [444, "index-13"], [444, "index-14"], [444, "index-15"], [444, "index-16"], [444, "index-17"], [444, "index-18"], [444, "index-19"], [444, "index-2"], [444, "index-20"], [444, "index-21"], [444, "index-22"], [444, "index-23"], [444, "index-24"], [444, "index-25"], [444, "index-26"], [444, "index-3"], [444, "index-4"], [444, "index-5"], [444, "index-6"], [444, "index-7"], [444, "index-8"], [444, "index-9"], [445, "index-1"], [445, "index-2"], [445, "index-3"], [446, "index-1"], [446, "index-10"], [446, "index-11"], [446, "index-12"], [446, "index-13"], [446, "index-2"], [446, "index-3"], [446, "index-4"], [446, "index-5"], [446, "index-6"], [446, "index-7"], [446, "index-8"], [446, "index-9"], [447, "index-1"], [447, "index-2"], [447, "index-3"], [448, "index-1"], [448, "index-10"], [448, "index-11"], [448, "index-12"], [448, "index-13"], [448, "index-2"], [448, "index-3"], [448, "index-4"], [448, "index-5"], [448, "index-6"], [448, "index-7"], [448, "index-8"], [448, "index-9"], [450, "index-1"], [450, "index-10"], [450, "index-11"], [450, "index-12"], [450, "index-13"], [450, "index-14"], [450, "index-15"], [450, "index-16"], [450, "index-2"], [450, "index-3"], [450, "index-4"], [450, "index-5"], [450, "index-6"], [450, "index-7"], [450, "index-8"], [450, "index-9"], [451, "index-1"], [451, "index-2"], [451, "index-3"], [452, "index-1"], [452, "index-2"], [452, "index-3"], [452, "index-4"], [452, "index-5"], [452, "index-6"], [452, "index-7"], [453, "index-1"], [453, "index-2"], [453, "index-3"], [454, "index-1"], [454, "index-2"], [454, "index-3"], [454, "index-4"], [454, "index-5"], [454, "index-6"], [456, "index-1"], [456, "index-10"], [456, "index-11"], [456, "index-12"], [456, "index-13"], [456, "index-2"], [456, "index-3"], [456, "index-4"], [456, "index-5"], [456, "index-6"], [456, "index-7"], [456, "index-8"], [456, "index-9"], [458, "index-1"], [458, "index-10"], [458, "index-11"], [458, "index-12"], [458, "index-13"], [458, "index-14"], [458, "index-15"], [458, "index-16"], [458, "index-2"], [458, "index-3"], [458, "index-4"], [458, "index-5"], [458, "index-6"], [458, "index-7"], [458, "index-8"], [458, "index-9"], [460, "index-1"], [460, "index-2"], [460, "index-3"], [460, "index-4"], [460, "index-5"], [461, "index-1"], [461, "index-10"], [461, "index-11"], [461, "index-12"], [461, "index-13"], [461, "index-14"], [461, "index-15"], [461, "index-16"], [461, "index-17"], [461, "index-18"], [461, "index-19"], [461, "index-2"], [461, "index-20"], [461, "index-21"], [461, "index-22"], [461, "index-23"], [461, "index-24"], [461, "index-25"], [461, "index-26"], [461, "index-27"], [461, "index-28"], [461, "index-29"], [461, "index-3"], [461, "index-30"], [461, "index-31"], [461, "index-32"], [461, "index-33"], [461, "index-34"], [461, "index-35"], [461, "index-36"], [461, "index-37"], [461, "index-38"], [461, "index-39"], [461, "index-4"], [461, "index-40"], [461, "index-41"], [461, "index-42"], [461, "index-5"], [461, "index-6"], [461, "index-7"], [461, "index-8"], [461, "index-9"], [462, "index-1"], [462, "index-2"], [462, "index-3"], [463, "index-1"], [463, "index-2"], [463, "index-3"], [463, "index-4"], [463, "index-5"], [463, "index-6"], [463, "index-7"], [463, "index-8"], [464, "index-1"], [464, "index-2"], [464, "index-3"], [464, "index-4"], [464, "index-5"], [464, "index-6"], [465, "index-1"], [465, "index-10"], [465, "index-11"], [465, "index-12"], [465, "index-2"], [465, "index-3"], [465, "index-4"], [465, "index-5"], [465, "index-6"], [465, "index-7"], [465, "index-8"], [465, "index-9"], [466, "index-1"], [466, "index-2"], [466, "index-3"], [467, "index-1"], [467, "index-2"], [467, "index-3"], [467, "index-4"], [467, "index-5"], [467, "index-6"], [468, "index-1"], [468, "index-2"], [468, "index-3"], [469, "index-1"], [469, "index-2"], [469, "index-3"], [469, "index-4"], [469, "index-5"], [469, "index-6"], [469, "index-7"], [470, "index-1"], [470, "index-10"], [470, "index-11"], [470, "index-12"], [470, "index-13"], [470, "index-14"], [470, "index-15"], [470, "index-16"], [470, "index-17"], [470, "index-18"], [470, "index-19"], [470, "index-2"], [470, "index-20"], [470, "index-21"], [470, "index-22"], [470, "index-23"], [470, "index-24"], [470, "index-25"], [470, "index-26"], [470, "index-3"], [470, "index-4"], [470, "index-5"], [470, "index-6"], [470, "index-7"], [470, "index-8"], [470, "index-9"], [471, "index-1"], [471, "index-2"], [471, "index-3"], [472, "index-1"], [472, "index-2"], [472, "index-3"], [472, "index-4"], [472, "index-5"], [472, "index-6"], [472, "index-7"], [472, "index-8"], [473, "index-1"], [473, "index-2"], [473, "index-3"], [474, "index-1"], [474, "index-2"], [474, "index-3"], [474, "index-4"], [474, "index-5"], [474, "index-6"], [474, "index-7"], [474, "index-8"], [475, "index-1"], [475, "index-2"], [475, "index-3"], [476, "index-1"], [476, "index-2"], [476, "index-3"], [476, "index-4"], [476, "index-5"], [476, "index-6"], [476, "index-7"], [476, "index-8"], [476, "index-9"], [477, "index-1"], [477, "index-2"], [477, "index-3"], [478, "index-1"], [478, "index-2"], [478, "index-3"], [478, "index-4"], [478, "index-5"], [478, "index-6"], [478, "index-7"], [478, "index-8"], [480, "index-1"], [480, "index-2"], [480, "index-3"], [480, "index-4"], [480, "index-5"], [480, "index-6"], [480, "index-7"], [480, "index-8"], [481, "index-1"], [481, "index-2"], [481, "index-3"], [482, "index-1"], [482, "index-10"], [482, "index-2"], [482, "index-3"], [482, "index-4"], [482, "index-5"], [482, "index-6"], [482, "index-7"], [482, "index-8"], [482, "index-9"], [483, "index-2"], [483, "index-3"], [483, "index-4"], [483, "index-5"], [484, "index-1"], [484, "index-2"], [484, "index-3"], [485, "index-1"], [485, "index-10"], [485, "index-11"], [485, "index-12"], [485, "index-13"], [485, "index-14"], [485, "index-15"], [485, "index-16"], [485, "index-17"], [485, "index-18"], [485, "index-19"], [485, "index-2"], [485, "index-20"], [485, "index-21"], [485, "index-22"], [485, "index-23"], [485, "index-24"], [485, "index-25"], [485, "index-3"], [485, "index-4"], [485, "index-5"], [485, "index-6"], [485, "index-7"], [485, "index-8"], [485, "index-9"], [486, "index-1"], [486, "index-2"], [486, "index-3"], [487, "index-1"], [487, "index-10"], [487, "index-11"], [487, "index-12"], [487, "index-13"], [487, "index-14"], [487, "index-15"], [487, "index-16"], [487, "index-17"], [487, "index-18"], [487, "index-2"], [487, "index-3"], [487, "index-4"], [487, "index-5"], [487, "index-6"], [487, "index-7"], [487, "index-8"], [487, "index-9"]], "compiled_partition": [[3, "index-1"], [3, "index-2"]], "dnnl::graph::compiled_partition": [[3, "index-0"]], "execute": [[3, "index-5"], [298, "index-2"], [299, "index-15"], [300, "index-12"], [456, "index-9"], [464, "index-5"], [464, "index-6"]], "get_inplace_ports": [[3, "index-4"]], "query_logical_tensor": [[3, "index-3"]], "add_op": [[4, "index-3"]], "dnnl::graph::graph": [[4, "index-0"]], "finalize": [[4, "index-4"]], "get_partitions": [[4, "index-6"]], "graph": [[4, "index-1"], [4, "index-2"], [285, "index-0"]], "is_finalized": [[4, "index-5"]], "dim": [[5, "index-1"], [442, "index-1"]], "dims": [[5, "index-2"], [184, "index-44"], [406, "index-3"], [442, "index-2"]], "dnnl::graph::logical_tensor": [[5, "index-0"]], "get_data_type": [[5, "index-14"], [444, "index-19"]], "get_dims": [[5, "index-12"], [444, "index-21"]], "get_id": [[5, "index-13"], [7, "index-5"]], "get_layout_id": [[5, "index-17"]], "get_layout_type": [[5, "index-16"]], "get_mem_size": [[5, "index-19"]], "get_property_type": [[5, "index-15"]], "get_strides": [[5, "index-18"], [386, "index-10"], [388, "index-13"], [390, "index-13"], [392, "index-10"], [394, "index-13"], [396, "index-13"], [444, "index-12"], [446, "index-9"], [448, "index-9"], [461, "index-4"]], "is_equal": [[5, "index-20"]], "logical_tensor": [[5, "index-10"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"]], "operator=": [[5, "index-11"], [411, "index-5"], [411, "index-6"]], "typedef": [[5, "index-1"], [5, "index-2"], [243, "index-1"], [243, "index-2"], [243, "index-3"], [243, "index-4"], [250, "index-1"], [250, "index-2"], [253, "index-1"], [260, "index-1"], [260, "index-2"], [260, "index-3"], [260, "index-4"], [266, "index-1"], [266, "index-2"], [266, "index-3"], [266, "index-4"], [271, "index-1"], [274, "index-1"], [274, "index-2"], [280, "index-1"], [280, "index-2"], [280, "index-3"], [280, "index-4"], [281, "index-1"], [281, "index-2"], [285, "index-1"], [285, "index-2"], [288, "index-1"], [288, "index-2"], [289, "index-1"], [289, "index-2"], [291, "index-1"], [291, "index-2"], [292, "index-1"], [292, "index-2"], [442, "index-1"], [442, "index-2"]], "add_input": [[6, "index-3"]], "add_inputs": [[6, "index-4"]], "add_output": [[6, "index-5"]], "add_outputs": [[6, "index-6"]], "dnnl::graph::op": [[6, "index-0"]], "op": [[6, "index-1"], [6, "index-2"], [288, "index-0"]], "set_attr": [[6, "index-7"]], "compile": [[7, "index-6"]], "dnnl::graph::partition": [[7, "index-0"]], "get_engine_kind": [[7, "index-10"]], "get_input_ports": [[7, "index-8"]], "get_ops": [[7, "index-4"]], "get_ops_num": [[7, "index-3"]], "get_output_ports": [[7, "index-9"]], "is_supported": [[7, "index-7"]], "partition": [[7, "index-1"], [7, "index-2"], [289, "index-0"]], "dnnl::graph::tensor": [[8, "index-0"]], "get_data_handle": [[8, "index-3"], [442, "index-11"]], "get_engine": [[8, "index-5"], [442, "index-10"], [461, "index-1"], [480, "index-3"]], "set_data_handle": [[8, "index-4"], [442, "index-12"]], "tensor": [[8, "index-1"], [8, "index-2"], [292, "index-0"]], "primitive attributes": [[9, "index-0"]], "page": [[9, "index-0"], [10, "index-0"], [11, "index-0"], [12, "index-0"], [13, "index-0"], [14, "index-0"], [15, "index-0"], [16, "index-0"], [17, "index-0"], [18, "index-0"], [19, "index-0"], [20, "index-0"], [21, "index-0"], [22, "index-0"], [23, "index-0"], [24, "index-0"], [25, "index-0"], [26, "index-0"], [27, "index-0"], [28, "index-0"], [29, "index-0"], [30, "index-0"], [31, "index-0"], [32, "index-0"], [33, "index-0"], [34, "index-0"], [35, "index-0"], [36, "index-0"], [37, "index-0"], [38, "index-0"], [39, "index-0"], [40, "index-0"], [41, "index-0"], [42, "index-0"], [43, "index-0"], [44, "index-0"], [45, "index-0"], [46, "index-0"], [47, "index-0"], [48, "index-0"], [49, "index-0"], [50, "index-0"], [51, "index-0"], [52, "index-0"], [53, "index-0"], [54, "index-0"], [55, "index-0"], [56, "index-0"], [57, "index-0"], [58, "index-0"], [59, "index-0"], [60, "index-0"], [61, "index-0"], [62, "index-0"], [63, "index-0"], [64, "index-0"], [65, "index-0"], [66, "index-0"], [67, "index-0"], [68, "index-0"], [69, "index-0"], [70, "index-0"], [71, "index-0"], [72, "index-0"], [73, "index-0"], [74, "index-0"], [75, "index-0"], [76, "index-0"], [77, "index-0"], [78, "index-0"], [79, "index-0"], [80, "index-0"], [81, "index-0"], [82, "index-0"], [83, "index-0"], [84, "index-0"], [85, "index-0"], [86, "index-0"], [87, "index-0"], [88, "index-0"], [89, "index-0"], [90, "index-0"], [91, "index-0"], [92, "index-0"], [93, "index-0"], [94, "index-0"], [95, "index-0"], [96, "index-0"], [97, "index-0"], [98, "index-0"], [99, "index-0"], [100, "index-0"], [101, "index-0"], [102, "index-0"], [103, "index-0"], [104, "index-0"], [105, "index-0"], [106, "index-0"], [107, "index-0"], [108, "index-0"], [109, "index-0"], [110, "index-0"], [111, "index-0"], [112, "index-0"], [113, "index-0"], [114, "index-0"], [115, "index-0"], [116, "index-0"], [117, "index-0"], [118, "index-0"], [119, "index-0"], [120, "index-0"], [121, "index-0"], [122, "index-0"], [123, "index-0"], [124, "index-0"], [125, "index-0"], [126, "index-0"], [127, "index-0"], [128, "index-0"], [129, "index-0"], [130, "index-0"], [131, "index-0"], [132, "index-0"], [133, "index-0"], [134, "index-0"], [135, "index-0"], [136, "index-0"], [137, "index-0"], [138, "index-0"], [139, "index-0"], [140, "index-0"], [141, "index-0"], [142, "index-0"], [143, "index-0"], [144, "index-0"], [145, "index-0"], [146, "index-0"], [306, "index-0"], [308, "index-0"], [310, "index-0"], [312, "index-0"], [314, "index-0"], [315, "index-0"], [316, "index-0"], [317, "index-0"], [318, "index-0"], [319, "index-0"], [321, "index-0"], [323, "index-0"], [324, "index-0"], [326, "index-0"], [327, "index-0"], [328, "index-0"], [330, "index-0"], [331, "index-0"], [332, "index-0"], [334, "index-0"], [335, "index-0"], [336, "index-0"], [338, "index-0"], [340, "index-0"], [342, "index-0"], [343, "index-0"], [345, "index-0"], [347, "index-0"], [349, "index-0"], [350, "index-0"], [351, "index-0"], [353, "index-0"], [355, "index-0"], [357, "index-0"], [359, "index-0"], [361, "index-0"], [362, "index-0"], [364, "index-0"], [366, "index-0"], [368, "index-0"], [369, "index-0"]], "primitive attributes: floating-point math mode": [[10, "index-0"]], "primitive attributes: post-ops": [[11, "index-0"]], "primitive attributes: quantization": [[12, "index-0"]], "primitive attributes: scratchpad": [[13, "index-0"]], "basic concepts": [[14, "index-0"], [31, "index-0"]], "batch normalization": [[15, "index-0"], [244, "index-0"]], "benchmarking performance": [[16, "index-0"]], "binary": [[17, "index-0"], [180, "index-13"], [245, "index-0"], [381, "index-1"], [381, "index-2"], [381, "index-3"]], "build from source": [[18, "index-0"]], "build options": [[19, "index-0"]], "api": [[20, "index-0"]], "concat": [[21, "index-0"], [57, "index-0"], [180, "index-4"], [248, "index-0"], [383, "index-1"], [383, "index-2"], [383, "index-3"]], "naming conventions": [[22, "index-0"]], "convolution": [[23, "index-0"], [58, "index-0"], [180, "index-6"], [249, "index-0"]], "cpu dispatcher control": [[24, "index-0"]], "cpu isa hints": [[25, "index-0"]], "data types": [[26, "index-0"], [250, "index-0"]], "dpc++ interoperability": [[27, "index-0"]], "eltwise": [[28, "index-0"], [180, "index-8"], [252, "index-0"]], "examples": [[29, "index-0"]], "experimental features": [[30, "index-0"]], "graph dump": [[32, "index-0"]], "supported fusion patterns": [[33, "index-0"]], "low precision": [[34, "index-0"]], "inference": [[35, "index-0"]], "inference and training aspects": [[36, "index-0"]], "int8 inference": [[37, "index-0"]], "inner product": [[38, "index-0"], [255, "index-0"]], "inspecting jit code": [[39, "index-0"]], "nuances of int8 computations": [[40, "index-0"]], "layer normalization": [[41, "index-0"], [257, "index-0"]], "linking to the library": [[42, "index-0"]], "local response normalization (lrn)": [[43, "index-0"]], "matrix multiplication": [[44, "index-0"], [259, "index-0"]], "abs": [[45, "index-0"]], "absbackward": [[46, "index-0"]], "add": [[47, "index-0"]], "avgpool": [[48, "index-0"]], "avgpoolbackward": [[49, "index-0"]], "batchnormforwardtraining": [[50, "index-0"]], "batchnorminference": [[51, "index-0"]], "batchnormtrainingbackward": [[52, "index-0"]], "biasadd": [[53, "index-0"]], "biasaddbackward": [[54, "index-0"]], "clamp": [[55, "index-0"]], "clampbackward": [[56, "index-0"]], "convolutionbackwarddata": [[59, "index-0"]], "convolutionbackwardweights": [[60, "index-0"]], "convtranspose": [[61, "index-0"]], "convtransposebackwarddata": [[62, "index-0"]], "convtransposebackwardweights": [[63, "index-0"]], "dequantize": [[64, "index-0"]], "divide": [[65, "index-0"]], "dynamicdequantize": [[66, "index-0"]], "dynamicquantize": [[67, "index-0"]], "elu": [[68, "index-0"]], "elubackward": [[69, "index-0"]], "end": [[70, "index-0"]], "exp": [[71, "index-0"]], "gelu": [[72, "index-0"]], "gelubackward": [[73, "index-0"]], "hardsigmoid": [[74, "index-0"]], "hardsigmoidbackward": [[75, "index-0"]], "hardswish": [[76, "index-0"]], "hardswishbackward": [[77, "index-0"]], "interpolate": [[78, "index-0"]], "interpolatebackward": [[79, "index-0"]], "layernorm": [[80, "index-0"]], "layernormbackward": [[81, "index-0"]], "leakyrelu": [[82, "index-0"]], "log": [[83, "index-0"]], "logsoftmax": [[84, "index-0"]], "logsoftmaxbackward": [[85, "index-0"]], "matmul": [[86, "index-0"], [180, "index-14"], [439, "index-1"], [439, "index-2"], [439, "index-3"]], "maximum": [[87, "index-0"]], "maxpool": [[88, "index-0"]], "maxpoolbackward": [[89, "index-0"]], "minimum": [[90, "index-0"]], "mish": [[91, "index-0"]], "mishbackward": [[92, "index-0"]], "multiply": [[93, "index-0"]], "prelu": [[94, "index-0"], [130, "index-0"], [180, "index-18"], [263, "index-0"]], "prelubackward": [[95, "index-0"]], "quantize": [[96, "index-0"]], "reciprocal": [[97, "index-0"]], "reducel1": [[98, "index-0"]], "reducel2": [[99, "index-0"]], "reducemax": [[100, "index-0"]], "reducemean": [[101, "index-0"]], "reducemin": [[102, "index-0"]], "reduceprod": [[103, "index-0"]], "reducesum": [[104, "index-0"]], "relu": [[105, "index-0"]], "relubackward": [[106, "index-0"]], "reorder": [[107, "index-0"], [134, "index-0"], [180, "index-2"], [268, "index-0"], [464, "index-1"], [464, "index-2"], [464, "index-3"], [464, "index-4"]], "round": [[108, "index-0"]], "sigmoid": [[109, "index-0"]], "sigmoidbackward": [[110, "index-0"]], "softmax": [[111, "index-0"], [138, "index-0"], [180, "index-19"], [273, "index-0"]], "softmaxbackward": [[112, "index-0"]], "softplus": [[113, "index-0"]], "softplusbackward": [[114, "index-0"]], "sqrt": [[115, "index-0"]], "sqrtbackward": [[116, "index-0"]], "square": [[117, "index-0"]], "squareddifference": [[118, "index-0"]], "staticreshape": [[119, "index-0"]], "statictranspose": [[120, "index-0"]], "subtract": [[121, "index-0"]], "tanh": [[122, "index-0"]], "tanhbackward": [[123, "index-0"]], "typecast": [[124, "index-0"]], "wildcard": [[125, "index-0"]], "opencl interoperability": [[126, "index-0"]], "configuring onednn for benchmarking": [[127, "index-0"]], "persistent cache": [[128, "index-0"]], "pooling": [[129, "index-0"], [180, "index-16"], [262, "index-0"]], "primitive cache": [[131, "index-0"], [264, "index-0"]], "profiling onednn performance": [[132, "index-0"]], "reduction": [[133, "index-0"], [180, "index-17"], [267, "index-0"], [462, "index-1"], [462, "index-2"], [462, "index-3"]], "resampling": [[135, "index-0"], [180, "index-15"], [269, "index-0"]], "rnn": [[136, "index-0"], [180, "index-12"], [270, "index-0"]], "shuffle": [[137, "index-0"], [180, "index-3"], [272, "index-0"]], "sum": [[139, "index-0"], [180, "index-5"], [275, "index-0"], [481, "index-1"], [481, "index-2"], [481, "index-3"]], "using onednn with threadpool-based threading": [[140, "index-0"]], "training": [[141, "index-0"]], "bfloat16 training": [[142, "index-0"]], "transitioning from intel mkl-dnn to onednn": [[143, "index-0"]], "understanding memory formats": [[144, "index-0"]], "verbose mode": [[145, "index-0"]], "profiling with vtune(tm) amplifier": [[146, "index-0"]], "dnnl_alg_kind_t": [[147, "index-0"]], "dnnl_binary_add": [[147, "index-45"]], "dnnl_binary_div": [[147, "index-49"]], "dnnl_binary_eq": [[147, "index-55"]], "dnnl_binary_ge": [[147, "index-51"]], "dnnl_binary_gt": [[147, "index-52"]], "dnnl_binary_le": [[147, "index-53"]], "dnnl_binary_lt": [[147, "index-54"]], "dnnl_binary_max": [[147, "index-47"]], "dnnl_binary_min": [[147, "index-48"]], "dnnl_binary_mul": [[147, "index-46"]], "dnnl_binary_ne": [[147, "index-56"]], "dnnl_binary_sub": [[147, "index-50"]], "dnnl_convolution_auto": [[147, "index-3"]], "dnnl_convolution_direct": [[147, "index-1"]], "dnnl_convolution_winograd": [[147, "index-2"]], "dnnl_deconvolution_direct": [[147, "index-4"]], "dnnl_deconvolution_winograd": [[147, "index-5"]], "dnnl_eltwise_abs": [[147, "index-10"]], "dnnl_eltwise_clip": [[147, "index-20"]], "dnnl_eltwise_clip_v2": [[147, "index-21"]], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [[147, "index-33"]], "dnnl_eltwise_elu": [[147, "index-8"]], "dnnl_eltwise_elu_use_dst_for_bwd": [[147, "index-29"]], "dnnl_eltwise_exp": [[147, "index-16"]], "dnnl_eltwise_exp_use_dst_for_bwd": [[147, "index-32"]], "dnnl_eltwise_gelu_erf": [[147, "index-23"]], "dnnl_eltwise_gelu_tanh": [[147, "index-17"]], "dnnl_eltwise_hardsigmoid": [[147, "index-14"]], "dnnl_eltwise_hardswish": [[147, "index-26"]], "dnnl_eltwise_linear": [[147, "index-12"]], "dnnl_eltwise_log": [[147, "index-19"]], "dnnl_eltwise_logistic": [[147, "index-15"]], "dnnl_eltwise_logistic_use_dst_for_bwd": [[147, "index-31"]], "dnnl_eltwise_mish": [[147, "index-25"]], "dnnl_eltwise_pow": [[147, "index-22"]], "dnnl_eltwise_relu": [[147, "index-6"]], "dnnl_eltwise_relu_use_dst_for_bwd": [[147, "index-27"]], "dnnl_eltwise_round": [[147, "index-24"]], "dnnl_eltwise_soft_relu": [[147, "index-13"]], "dnnl_eltwise_sqrt": [[147, "index-11"]], "dnnl_eltwise_sqrt_use_dst_for_bwd": [[147, "index-30"]], "dnnl_eltwise_square": [[147, "index-9"]], "dnnl_eltwise_swish": [[147, "index-18"]], "dnnl_eltwise_tanh": [[147, "index-7"]], "dnnl_eltwise_tanh_use_dst_for_bwd": [[147, "index-28"]], "dnnl_lbr_augru": [[147, "index-44"]], "dnnl_lbr_gru": [[147, "index-42"]], "dnnl_lrn_across_channels": [[147, "index-37"]], "dnnl_lrn_within_channel": [[147, "index-38"]], "dnnl_pooling_avg_exclude_padding": [[147, "index-36"]], "dnnl_pooling_avg_include_padding": [[147, "index-35"]], "dnnl_pooling_max": [[147, "index-34"]], "dnnl_reduction_max": [[147, "index-59"]], "dnnl_reduction_mean": [[147, "index-63"]], "dnnl_reduction_min": [[147, "index-60"]], "dnnl_reduction_mul": [[147, "index-62"]], "dnnl_reduction_norm_lp_max": [[147, "index-64"]], "dnnl_reduction_norm_lp_power_p_max": [[147, "index-66"]], "dnnl_reduction_norm_lp_power_p_sum": [[147, "index-67"]], "dnnl_reduction_norm_lp_sum": [[147, "index-65"]], "dnnl_reduction_sum": [[147, "index-61"]], "dnnl_resampling_linear": [[147, "index-58"]], "dnnl_resampling_nearest": [[147, "index-57"]], "dnnl_softmax_accurate": [[147, "index-68"]], "dnnl_softmax_log": [[147, "index-69"]], "dnnl_vanilla_augru": [[147, "index-43"]], "dnnl_vanilla_gru": [[147, "index-41"]], "dnnl_vanilla_lstm": [[147, "index-40"]], "dnnl_vanilla_rnn": [[147, "index-39"]], "enum": [[147, "index-0"], [148, "index-0"], [149, "index-0"], [150, "index-0"], [151, "index-0"], [152, "index-0"], [153, "index-0"], [154, "index-0"], [155, "index-0"], [156, "index-0"], [157, "index-0"], [158, "index-0"], [159, "index-0"], [160, "index-0"], [161, "index-0"], [162, "index-0"], [163, "index-0"], [164, "index-0"], [165, "index-0"], [166, "index-0"], [167, "index-0"], [168, "index-0"], [169, "index-0"], [170, "index-0"], [171, "index-0"], [172, "index-0"], [173, "index-0"], [174, "index-0"], [175, "index-0"], [176, "index-0"], [177, "index-0"], [178, "index-0"], [179, "index-0"], [180, "index-0"], [181, "index-0"], [182, "index-0"], [183, "index-0"], [184, "index-0"], [185, "index-0"], [186, "index-0"], [187, "index-0"], [188, "index-0"], [189, "index-0"], [190, "index-0"], [191, "index-0"], [192, "index-0"], [193, "index-0"], [194, "index-0"], [195, "index-0"], [196, "index-0"], [197, "index-0"], [198, "index-0"]], "enumvalue": [[147, "index-1"], [147, "index-10"], [147, "index-11"], [147, "index-12"], [147, "index-13"], [147, "index-14"], [147, "index-15"], [147, "index-16"], [147, "index-17"], [147, "index-18"], [147, "index-19"], [147, "index-2"], [147, "index-20"], [147, "index-21"], [147, "index-22"], [147, "index-23"], [147, "index-24"], [147, "index-25"], [147, "index-26"], [147, "index-27"], [147, "index-28"], [147, "index-29"], [147, "index-3"], [147, "index-30"], [147, "index-31"], [147, "index-32"], [147, "index-33"], [147, "index-34"], [147, "index-35"], [147, "index-36"], [147, "index-37"], [147, "index-38"], [147, "index-39"], [147, "index-4"], [147, "index-40"], [147, "index-41"], [147, "index-42"], [147, "index-43"], [147, "index-44"], [147, "index-45"], [147, "index-46"], [147, "index-47"], [147, "index-48"], [147, "index-49"], [147, "index-5"], [147, "index-50"], [147, "index-51"], [147, "index-52"], [147, "index-53"], [147, "index-54"], [147, "index-55"], [147, "index-56"], [147, "index-57"], [147, "index-58"], [147, "index-59"], [147, "index-6"], [147, "index-60"], [147, "index-61"], [147, "index-62"], [147, "index-63"], [147, "index-64"], [147, "index-65"], [147, "index-66"], [147, "index-67"], [147, "index-68"], [147, "index-69"], [147, "index-7"], [147, "index-8"], [147, "index-9"], [148, "index-1"], [148, "index-10"], [148, "index-11"], [148, "index-12"], [148, "index-13"], [148, "index-14"], [148, "index-15"], [148, "index-16"], [148, "index-17"], [148, "index-18"], [148, "index-19"], [148, "index-2"], [148, "index-20"], [148, "index-21"], [148, "index-22"], [148, "index-23"], [148, "index-24"], [148, "index-25"], [148, "index-26"], [148, "index-27"], [148, "index-28"], [148, "index-29"], [148, "index-3"], [148, "index-30"], [148, "index-31"], [148, "index-32"], [148, "index-33"], [148, "index-34"], [148, "index-35"], [148, "index-36"], [148, "index-37"], [148, "index-38"], [148, "index-39"], [148, "index-4"], [148, "index-40"], [148, "index-41"], [148, "index-42"], [148, "index-43"], [148, "index-44"], [148, "index-45"], [148, "index-46"], [148, "index-47"], [148, "index-48"], [148, "index-49"], [148, "index-5"], [148, "index-50"], [148, "index-51"], [148, "index-52"], [148, "index-53"], [148, "index-54"], [148, "index-55"], [148, "index-56"], [148, "index-57"], [148, "index-58"], [148, "index-59"], [148, "index-6"], [148, "index-60"], [148, "index-61"], [148, "index-62"], [148, "index-63"], [148, "index-64"], [148, "index-65"], [148, "index-66"], [148, "index-67"], [148, "index-68"], [148, "index-69"], [148, "index-7"], [148, "index-70"], [148, "index-8"], [148, "index-9"], [149, "index-1"], [149, "index-10"], [149, "index-11"], [149, "index-12"], [149, "index-2"], [149, "index-3"], [149, "index-4"], [149, "index-5"], [149, "index-6"], [149, "index-7"], [149, "index-8"], [149, "index-9"], [150, "index-1"], [150, "index-2"], [151, "index-1"], [151, "index-2"], [152, "index-1"], [152, "index-10"], [152, "index-11"], [152, "index-12"], [152, "index-2"], [152, "index-3"], [152, "index-4"], [152, "index-5"], [152, "index-6"], [152, "index-7"], [152, "index-8"], [152, "index-9"], [153, "index-1"], [153, "index-2"], [153, "index-3"], [153, "index-4"], [153, "index-5"], [153, "index-6"], [153, "index-7"], [153, "index-8"], [153, "index-9"], [154, "index-1"], [154, "index-2"], [154, "index-3"], [155, "index-1"], [155, "index-2"], [155, "index-3"], [156, "index-1"], [156, "index-2"], [156, "index-3"], [156, "index-4"], [156, "index-5"], [156, "index-6"], [157, "index-1"], [157, "index-10"], [157, "index-100"], [157, "index-101"], [157, "index-102"], [157, "index-103"], [157, "index-104"], [157, "index-105"], [157, "index-106"], [157, "index-107"], [157, "index-108"], [157, "index-109"], [157, "index-11"], [157, "index-110"], [157, "index-111"], [157, "index-112"], [157, "index-113"], [157, "index-114"], [157, "index-115"], [157, "index-116"], [157, "index-117"], [157, "index-118"], [157, "index-119"], [157, "index-12"], [157, "index-120"], [157, "index-121"], [157, "index-122"], [157, "index-123"], [157, "index-124"], [157, "index-125"], [157, "index-126"], [157, "index-127"], [157, "index-128"], [157, "index-129"], [157, "index-13"], [157, "index-130"], [157, "index-131"], [157, "index-132"], [157, "index-133"], [157, "index-134"], [157, "index-135"], [157, "index-136"], [157, "index-137"], [157, "index-138"], [157, "index-14"], [157, "index-15"], [157, "index-16"], [157, "index-17"], [157, "index-18"], [157, "index-19"], [157, "index-2"], [157, "index-20"], [157, "index-21"], [157, "index-22"], [157, "index-23"], [157, "index-24"], [157, "index-25"], [157, "index-26"], [157, "index-27"], [157, "index-28"], [157, "index-29"], [157, "index-3"], [157, "index-30"], [157, "index-31"], [157, "index-32"], [157, "index-33"], [157, "index-34"], [157, "index-35"], [157, "index-36"], [157, "index-37"], [157, "index-38"], [157, "index-39"], [157, "index-4"], [157, "index-40"], [157, "index-41"], [157, "index-42"], [157, "index-43"], [157, "index-44"], [157, "index-45"], [157, "index-46"], [157, "index-47"], [157, "index-48"], [157, "index-49"], [157, "index-5"], [157, "index-50"], [157, "index-51"], [157, "index-52"], [157, "index-53"], [157, "index-54"], [157, "index-55"], [157, "index-56"], [157, "index-57"], [157, "index-58"], [157, "index-59"], [157, "index-6"], [157, "index-60"], [157, "index-61"], [157, "index-62"], [157, "index-63"], [157, "index-64"], [157, "index-65"], [157, "index-66"], [157, "index-67"], [157, "index-68"], [157, "index-69"], [157, "index-7"], [157, "index-70"], [157, "index-71"], [157, "index-72"], [157, "index-73"], [157, "index-74"], [157, "index-75"], [157, "index-76"], [157, "index-77"], [157, "index-78"], [157, "index-79"], [157, "index-8"], [157, "index-80"], [157, "index-81"], [157, "index-82"], [157, "index-83"], [157, "index-84"], [157, "index-85"], [157, "index-86"], [157, "index-87"], [157, "index-88"], [157, "index-89"], [157, "index-9"], [157, "index-90"], [157, "index-91"], [157, "index-92"], [157, "index-93"], [157, "index-94"], [157, "index-95"], [157, "index-96"], [157, "index-97"], [157, "index-98"], [157, "index-99"], [158, "index-1"], [158, "index-2"], [158, "index-3"], [158, "index-4"], [158, "index-5"], [159, "index-1"], [159, "index-2"], [159, "index-3"], [159, "index-4"], [159, "index-5"], [160, "index-1"], [160, "index-2"], [160, "index-3"], [160, "index-4"], [161, "index-1"], [161, "index-2"], [161, "index-3"], [161, "index-4"], [161, "index-5"], [161, "index-6"], [162, "index-1"], [162, "index-2"], [162, "index-3"], [162, "index-4"], [163, "index-1"], [163, "index-2"], [163, "index-3"], [164, "index-1"], [164, "index-10"], [164, "index-11"], [164, "index-12"], [164, "index-13"], [164, "index-14"], [164, "index-15"], [164, "index-16"], [164, "index-17"], [164, "index-18"], [164, "index-19"], [164, "index-2"], [164, "index-20"], [164, "index-21"], [164, "index-22"], [164, "index-23"], [164, "index-24"], [164, "index-25"], [164, "index-26"], [164, "index-27"], [164, "index-28"], [164, "index-29"], [164, "index-3"], [164, "index-30"], [164, "index-31"], [164, "index-32"], [164, "index-33"], [164, "index-34"], [164, "index-35"], [164, "index-36"], [164, "index-37"], [164, "index-38"], [164, "index-39"], [164, "index-4"], [164, "index-40"], [164, "index-41"], [164, "index-42"], [164, "index-5"], [164, "index-6"], [164, "index-7"], [164, "index-8"], [164, "index-9"], [165, "index-1"], [165, "index-10"], [165, "index-11"], [165, "index-12"], [165, "index-13"], [165, "index-14"], [165, "index-15"], [165, "index-16"], [165, "index-17"], [165, "index-18"], [165, "index-19"], [165, "index-2"], [165, "index-20"], [165, "index-21"], [165, "index-22"], [165, "index-23"], [165, "index-24"], [165, "index-25"], [165, "index-26"], [165, "index-27"], [165, "index-28"], [165, "index-29"], [165, "index-3"], [165, "index-30"], [165, "index-31"], [165, "index-32"], [165, "index-33"], [165, "index-34"], [165, "index-35"], [165, "index-36"], [165, "index-37"], [165, "index-38"], [165, "index-39"], [165, "index-4"], [165, "index-40"], [165, "index-41"], [165, "index-42"], [165, "index-5"], [165, "index-6"], [165, "index-7"], [165, "index-8"], [165, "index-9"], [168, "index-1"], [168, "index-2"], [169, "index-1"], [169, "index-2"], [170, "index-1"], [170, "index-10"], [170, "index-11"], [170, "index-2"], [170, "index-3"], [170, "index-4"], [170, "index-5"], [170, "index-6"], [170, "index-7"], [170, "index-8"], [170, "index-9"], [171, "index-1"], [171, "index-2"], [171, "index-3"], [172, "index-1"], [172, "index-2"], [172, "index-3"], [172, "index-4"], [172, "index-5"], [172, "index-6"], [172, "index-7"], [173, "index-1"], [173, "index-2"], [173, "index-3"], [173, "index-4"], [173, "index-5"], [174, "index-1"], [174, "index-10"], [174, "index-11"], [174, "index-12"], [174, "index-13"], [174, "index-14"], [174, "index-15"], [174, "index-16"], [174, "index-17"], [174, "index-18"], [174, "index-19"], [174, "index-2"], [174, "index-20"], [174, "index-21"], [174, "index-22"], [174, "index-23"], [174, "index-24"], [174, "index-25"], [174, "index-26"], [174, "index-27"], [174, "index-28"], [174, "index-29"], [174, "index-3"], [174, "index-30"], [174, "index-31"], [174, "index-32"], [174, "index-33"], [174, "index-34"], [174, "index-35"], [174, "index-36"], [174, "index-37"], [174, "index-38"], [174, "index-39"], [174, "index-4"], [174, "index-40"], [174, "index-41"], [174, "index-42"], [174, "index-43"], [174, "index-44"], [174, "index-45"], [174, "index-46"], [174, "index-47"], [174, "index-48"], [174, "index-49"], [174, "index-5"], [174, "index-50"], [174, "index-51"], [174, "index-52"], [174, "index-53"], [174, "index-54"], [174, "index-55"], [174, "index-56"], [174, "index-57"], [174, "index-58"], [174, "index-59"], [174, "index-6"], [174, "index-60"], [174, "index-61"], [174, "index-62"], [174, "index-63"], [174, "index-64"], [174, "index-65"], [174, "index-66"], [174, "index-67"], [174, "index-68"], [174, "index-69"], [174, "index-7"], [174, "index-70"], [174, "index-71"], [174, "index-72"], [174, "index-73"], [174, "index-74"], [174, "index-75"], [174, "index-76"], [174, "index-77"], [174, "index-78"], [174, "index-79"], [174, "index-8"], [174, "index-80"], [174, "index-81"], [174, "index-82"], [174, "index-83"], [174, "index-84"], [174, "index-85"], [174, "index-86"], [174, "index-87"], [174, "index-88"], [174, "index-89"], [174, "index-9"], [174, "index-90"], [174, "index-91"], [174, "index-92"], [174, "index-93"], [174, "index-94"], [174, "index-95"], [175, "index-1"], [175, "index-2"], [176, "index-1"], [176, "index-2"], [176, "index-3"], [176, "index-4"], [176, "index-5"], [176, "index-6"], [177, "index-1"], [177, "index-2"], [177, "index-3"], [177, "index-4"], [177, "index-5"], [177, "index-6"], [178, "index-1"], [178, "index-2"], [179, "index-1"], [179, "index-2"], [180, "index-1"], [180, "index-10"], [180, "index-11"], [180, "index-12"], [180, "index-13"], [180, "index-14"], [180, "index-15"], [180, "index-16"], [180, "index-17"], [180, "index-18"], [180, "index-19"], [180, "index-2"], [180, "index-20"], [180, "index-3"], [180, "index-4"], [180, "index-5"], [180, "index-6"], [180, "index-7"], [180, "index-8"], [180, "index-9"], [181, "index-1"], [181, "index-10"], [181, "index-11"], [181, "index-12"], [181, "index-13"], [181, "index-14"], [181, "index-15"], [181, "index-16"], [181, "index-17"], [181, "index-18"], [181, "index-19"], [181, "index-2"], [181, "index-20"], [181, "index-21"], [181, "index-22"], [181, "index-3"], [181, "index-4"], [181, "index-5"], [181, "index-6"], [181, "index-7"], [181, "index-8"], [181, "index-9"], [182, "index-1"], [182, "index-2"], [182, "index-3"], [182, "index-4"], [182, "index-5"], [182, "index-6"], [182, "index-7"], [182, "index-8"], [183, "index-1"], [183, "index-2"], [183, "index-3"], [183, "index-4"], [183, "index-5"], [183, "index-6"], [183, "index-7"], [183, "index-8"], [184, "index-1"], [184, "index-10"], [184, "index-11"], [184, "index-12"], [184, "index-13"], [184, "index-14"], [184, "index-15"], [184, "index-16"], [184, "index-17"], [184, "index-18"], [184, "index-19"], [184, "index-2"], [184, "index-20"], [184, "index-21"], [184, "index-22"], [184, "index-23"], [184, "index-24"], [184, "index-25"], [184, "index-26"], [184, "index-27"], [184, "index-28"], [184, "index-29"], [184, "index-3"], [184, "index-30"], [184, "index-31"], [184, "index-32"], [184, "index-33"], [184, "index-34"], [184, "index-35"], [184, "index-36"], [184, "index-37"], [184, "index-38"], [184, "index-39"], [184, "index-4"], [184, "index-40"], [184, "index-41"], [184, "index-42"], [184, "index-43"], [184, "index-44"], [184, "index-45"], [184, "index-46"], [184, "index-47"], [184, "index-48"], [184, "index-49"], [184, "index-5"], [184, "index-50"], [184, "index-51"], [184, "index-52"], [184, "index-53"], [184, "index-54"], [184, "index-55"], [184, "index-6"], [184, "index-7"], [184, "index-8"], [184, "index-9"], [185, "index-1"], [185, "index-10"], [185, "index-11"], [185, "index-12"], [185, "index-13"], [185, "index-14"], [185, "index-15"], [185, "index-16"], [185, "index-17"], [185, "index-18"], [185, "index-19"], [185, "index-2"], [185, "index-20"], [185, "index-21"], [185, "index-22"], [185, "index-23"], [185, "index-24"], [185, "index-25"], [185, "index-26"], [185, "index-27"], [185, "index-28"], [185, "index-29"], [185, "index-3"], [185, "index-30"], [185, "index-31"], [185, "index-32"], [185, "index-33"], [185, "index-34"], [185, "index-35"], [185, "index-36"], [185, "index-37"], [185, "index-38"], [185, "index-39"], [185, "index-4"], [185, "index-40"], [185, "index-41"], [185, "index-42"], [185, "index-43"], [185, "index-44"], [185, "index-45"], [185, "index-46"], [185, "index-47"], [185, "index-48"], [185, "index-49"], [185, "index-5"], [185, "index-50"], [185, "index-51"], [185, "index-52"], [185, "index-53"], [185, "index-54"], [185, "index-55"], [185, "index-56"], [185, "index-57"], [185, "index-6"], [185, "index-7"], [185, "index-8"], [185, "index-9"], [186, "index-1"], [186, "index-2"], [186, "index-3"], [186, "index-4"], [186, "index-5"], [187, "index-1"], [187, "index-2"], [187, "index-3"], [187, "index-4"], [187, "index-5"], [188, "index-1"], [188, "index-2"], [189, "index-1"], [189, "index-2"], [190, "index-1"], [190, "index-2"], [191, "index-1"], [191, "index-2"], [192, "index-1"], [192, "index-2"], [193, "index-1"], [193, "index-2"], [193, "index-3"], [193, "index-4"], [193, "index-5"], [193, "index-6"], [193, "index-7"], [194, "index-1"], [194, "index-10"], [194, "index-11"], [194, "index-2"], [194, "index-3"], [194, "index-4"], [194, "index-5"], [194, "index-6"], [194, "index-7"], [194, "index-8"], [194, "index-9"], [195, "index-1"], [195, "index-2"], [195, "index-3"], [196, "index-1"], [196, "index-2"], [197, "index-1"], [197, "index-2"], [198, "index-1"], [198, "index-2"]], "algorithm": [[148, "index-0"]], "binary_add": [[148, "index-46"]], "binary_div": [[148, "index-50"]], "binary_eq": [[148, "index-56"]], "binary_ge": [[148, "index-52"]], "binary_gt": [[148, "index-53"]], "binary_le": [[148, "index-54"]], "binary_lt": [[148, "index-55"]], "binary_max": [[148, "index-48"]], "binary_min": [[148, "index-49"]], "binary_mul": [[148, "index-47"]], "binary_ne": [[148, "index-57"]], "binary_sub": [[148, "index-51"]], "convolution_auto": [[148, "index-2"]], "convolution_direct": [[148, "index-3"]], "convolution_winograd": [[148, "index-4"]], "deconvolution_direct": [[148, "index-5"]], "deconvolution_winograd": [[148, "index-6"]], "eltwise_abs": [[148, "index-11"]], "eltwise_clip": [[148, "index-22"]], "eltwise_clip_v2": [[148, "index-23"]], "eltwise_clip_v2_use_dst_for_bwd": [[148, "index-34"]], "eltwise_elu": [[148, "index-9"]], "eltwise_elu_use_dst_for_bwd": [[148, "index-30"]], "eltwise_exp": [[148, "index-18"]], "eltwise_exp_use_dst_for_bwd": [[148, "index-33"]], "eltwise_gelu_erf": [[148, "index-20"]], "eltwise_gelu_tanh": [[148, "index-19"]], "eltwise_hardsigmoid": [[148, "index-27"]], "eltwise_hardswish": [[148, "index-26"]], "eltwise_linear": [[148, "index-14"]], "eltwise_log": [[148, "index-21"]], "eltwise_logistic": [[148, "index-17"]], "eltwise_logistic_use_dst_for_bwd": [[148, "index-32"]], "eltwise_mish": [[148, "index-16"]], "eltwise_pow": [[148, "index-24"]], "eltwise_relu": [[148, "index-7"]], "eltwise_relu_use_dst_for_bwd": [[148, "index-28"]], "eltwise_round": [[148, "index-25"]], "eltwise_soft_relu": [[148, "index-15"]], "eltwise_sqrt": [[148, "index-12"]], "eltwise_sqrt_use_dst_for_bwd": [[148, "index-31"]], "eltwise_square": [[148, "index-10"]], "eltwise_swish": [[148, "index-13"]], "eltwise_tanh": [[148, "index-8"]], "eltwise_tanh_use_dst_for_bwd": [[148, "index-29"]], "lbr_augru": [[148, "index-45"]], "lbr_gru": [[148, "index-43"]], "lrn_across_channels": [[148, "index-35"]], "lrn_within_channel": [[148, "index-36"]], "pooling_avg_exclude_padding": [[148, "index-39"]], "pooling_avg_include_padding": [[148, "index-38"]], "pooling_max": [[148, "index-37"]], "reduction_max": [[148, "index-60"]], "reduction_mean": [[148, "index-64"]], "reduction_min": [[148, "index-61"]], "reduction_mul": [[148, "index-63"]], "reduction_norm_lp_max": [[148, "index-65"]], "reduction_norm_lp_power_p_max": [[148, "index-67"]], "reduction_norm_lp_power_p_sum": [[148, "index-68"]], "reduction_norm_lp_sum": [[148, "index-66"]], "reduction_sum": [[148, "index-62"]], "resampling_linear": [[148, "index-59"]], "resampling_nearest": [[148, "index-58"]], "softmax_accurate": [[148, "index-69"]], "softmax_log": [[148, "index-70"]], "undef": [[148, "index-1"], [162, "index-1"], [163, "index-1"], [164, "index-1"], [172, "index-1"], [173, "index-1"], [174, "index-1"], [175, "index-1"], [180, "index-1"], [182, "index-1"], [184, "index-1"], [186, "index-1"], [188, "index-1"]], "vanilla_augru": [[148, "index-44"]], "vanilla_gru": [[148, "index-42"]], "vanilla_lstm": [[148, "index-41"]], "vanilla_rnn": [[148, "index-40"]], "avx": [[149, "index-3"]], "avx2": [[149, "index-4"]], "avx2_vnni": [[149, "index-5"]], "avx2_vnni_2": [[149, "index-6"]], "avx512_core": [[149, "index-7"]], "avx512_core_amx": [[149, "index-11"]], "avx512_core_amx_fp16": [[149, "index-12"]], "avx512_core_bf16": [[149, "index-9"]], "avx512_core_fp16": [[149, "index-10"]], "avx512_core_vnni": [[149, "index-8"]], "cpu_isa": [[149, "index-0"]], "isa_default": [[149, "index-1"]], "sse41": [[149, "index-2"]], "cpu_isa_hints": [[150, "index-0"]], "no_hints": [[150, "index-1"]], "prefer_ymm": [[150, "index-2"]], "dnnl_cpu_isa_hints_t": [[151, "index-0"]], "dnnl_cpu_isa_no_hints": [[151, "index-1"]], "dnnl_cpu_isa_prefer_ymm": [[151, "index-2"]], "dnnl_cpu_isa_avx": [[152, "index-3"]], "dnnl_cpu_isa_avx2": [[152, "index-4"]], "dnnl_cpu_isa_avx2_vnni": [[152, "index-5"]], "dnnl_cpu_isa_avx2_vnni_2": [[152, "index-6"]], "dnnl_cpu_isa_avx512_core": [[152, "index-7"]], "dnnl_cpu_isa_avx512_core_amx": [[152, "index-11"]], "dnnl_cpu_isa_avx512_core_amx_fp16": [[152, "index-12"]], "dnnl_cpu_isa_avx512_core_bf16": [[152, "index-9"]], "dnnl_cpu_isa_avx512_core_fp16": [[152, "index-10"]], "dnnl_cpu_isa_avx512_core_vnni": [[152, "index-8"]], "dnnl_cpu_isa_default": [[152, "index-1"]], "dnnl_cpu_isa_sse41": [[152, "index-2"]], "dnnl_cpu_isa_t": [[152, "index-0"]], "dnnl_bf16": [[153, "index-3"]], "dnnl_data_type_max": [[153, "index-9"]], "dnnl_data_type_t": [[153, "index-0"]], "dnnl_data_type_undef": [[153, "index-1"]], "dnnl_f16": [[153, "index-2"]], "dnnl_f32": [[153, "index-4"]], "dnnl_f64": [[153, "index-8"]], "dnnl_s32": [[153, "index-5"]], "dnnl_s8": [[153, "index-6"]], "dnnl_u8": [[153, "index-7"]], "any": [[154, "index-1"], [158, "index-5"], [162, "index-2"], [173, "index-2"], [174, "index-2"]], "cpu": [[154, "index-2"]], "gpu": [[154, "index-3"]], "kind": [[154, "index-0"], [166, "index-0"], [180, "index-0"], [450, "index-4"]], "dnnl_any_engine": [[155, "index-1"]], "dnnl_cpu": [[155, "index-2"]], "dnnl_engine_kind_t": [[155, "index-0"]], "dnnl_gpu": [[155, "index-3"]], "dnnl_blocked": [[156, "index-3"]], "dnnl_format_kind_any": [[156, "index-2"]], "dnnl_format_kind_max": [[156, "index-6"]], "dnnl_format_kind_opaque": [[156, "index-4"]], "dnnl_format_kind_sparse": [[156, "index-5"]], "dnnl_format_kind_t": [[156, "index-0"]], "dnnl_format_kind_undef": [[156, "index-1"]], "dnnl_abcd8b8a": [[157, "index-61"]], "dnnl_abcde2b8a4b": [[157, "index-64"]], "dnnl_abcde4b16a4b": [[157, "index-63"]], "dnnl_a": [[157, "index-3"]], "dnnl_abcd2b4c2b": [[157, "index-62"]], "dnnl_abcde2b4c2b": [[157, "index-69"]], "dnnl_abcdef2b4c2b": [[157, "index-72"]], "dnnl_abcdef2c8b4c": [[157, "index-71"]], "dnnl_abc16b": [[157, "index-53"]], "dnnl_abc32b": [[157, "index-54"]], "dnnl_abc4b": [[157, "index-55"]], "dnnl_abc8b": [[157, "index-56"]], "dnnl_abcd16b": [[157, "index-57"]], "dnnl_abcd32b": [[157, "index-58"]], "dnnl_abcd4b": [[157, "index-59"]], "dnnl_abcd8b": [[157, "index-60"]], "dnnl_abcde16b": [[157, "index-65"]], "dnnl_abcde32b": [[157, "index-66"]], "dnnl_abcde4b": [[157, "index-67"]], "dnnl_abcde8b": [[157, "index-68"]], "dnnl_abcdef16b": [[157, "index-70"]], "dnnl_abcdef4b": [[157, "index-73"]], "dnnl_ab": [[157, "index-4"]], "dnnl_abc": [[157, "index-5"]], "dnnl_abcd": [[157, "index-6"]], "dnnl_abcde": [[157, "index-7"]], "dnnl_abcdef": [[157, "index-8"]], "dnnl_abcdefg": [[157, "index-9"]], "dnnl_abcdefgh": [[157, "index-10"]], "dnnl_abcdefghi": [[157, "index-11"]], "dnnl_abcdefghij": [[157, "index-12"]], "dnnl_abcdefghijk": [[157, "index-13"]], "dnnl_abcdefghijkl": [[157, "index-14"]], "dnnl_abcdefghijlk": [[157, "index-52"]], "dnnl_abcdefghikj": [[157, "index-51"]], "dnnl_abcdefghji": [[157, "index-50"]], "dnnl_abcdefgih": [[157, "index-49"]], "dnnl_abcdefhg": [[157, "index-48"]], "dnnl_abcdegf": [[157, "index-47"]], "dnnl_abcdfe": [[157, "index-41"]], "dnnl_abced": [[157, "index-31"]], "dnnl_abdc": [[157, "index-21"]], "dnnl_abdec": [[157, "index-32"]], "dnnl_abdefc": [[157, "index-42"]], "dnnl_abdfce": [[157, "index-43"]], "dnnl_acb": [[157, "index-16"]], "dnnl_acbd": [[157, "index-22"]], "dnnl_acbde": [[157, "index-33"]], "dnnl_acbdef": [[157, "index-44"]], "dnnl_acdb": [[157, "index-23"]], "dnnl_acdeb": [[157, "index-34"]], "dnnl_adbc": [[157, "index-24"]], "dnnl_adcb": [[157, "index-25"]], "dnnl_adecb": [[157, "index-35"]], "dnnl_adefcb": [[157, "index-45"]], "dnnl_ba": [[157, "index-15"]], "dnnl_bac": [[157, "index-17"]], "dnnl_bacd": [[157, "index-26"]], "dnnl_bacde": [[157, "index-36"]], "dnnl_bca": [[157, "index-18"]], "dnnl_bcda": [[157, "index-27"]], "dnnl_bcdea": [[157, "index-37"]], "dnnl_cab": [[157, "index-19"]], "dnnl_cba": [[157, "index-20"]], "dnnl_cdab": [[157, "index-28"]], "dnnl_cdba": [[157, "index-29"]], "dnnl_cdeab": [[157, "index-38"]], "dnnl_cdeba": [[157, "index-39"]], "dnnl_chwn": [[157, "index-84"]], "dnnl_cn": [[157, "index-77"]], "dnnl_dcab": [[157, "index-30"]], "dnnl_decab": [[157, "index-40"]], "dnnl_defcab": [[157, "index-46"]], "dnnl_dhwigo": [[157, "index-116"]], "dnnl_dhwio": [[157, "index-102"]], "dnnl_dhwoi": [[157, "index-103"]], "dnnl_format_tag_any": [[157, "index-2"]], "dnnl_format_tag_last": [[157, "index-74"]], "dnnl_format_tag_t": [[157, "index-0"]], "dnnl_format_tag_undef": [[157, "index-1"]], "dnnl_giodhw": [[157, "index-115"]], "dnnl_giohw": [[157, "index-112"]], "dnnl_godhwi": [[157, "index-114"]], "dnnl_gohwi": [[157, "index-110"]], "dnnl_goidhw": [[157, "index-113"]], "dnnl_goihw": [[157, "index-109"]], "dnnl_goiw": [[157, "index-106"]], "dnnl_gowi": [[157, "index-107"]], "dnnl_hwigo": [[157, "index-111"]], "dnnl_hwio": [[157, "index-95"]], "dnnl_hwoi": [[157, "index-96"]], "dnnl_idhwo": [[157, "index-105"]], "dnnl_ihwo": [[157, "index-98"]], "dnnl_io": [[157, "index-88"]], "dnnl_iodhw": [[157, "index-101"]], "dnnl_iohw": [[157, "index-99"]], "dnnl_iwo": [[157, "index-93"]], "dnnl_ldoi16o": [[157, "index-125"]], "dnnl_ldgoi16o": [[157, "index-126"]], "dnnl_ldgo": [[157, "index-124"]], "dnnl_ldgoi": [[157, "index-121"]], "dnnl_ldigo": [[157, "index-120"]], "dnnl_ldio": [[157, "index-122"]], "dnnl_ldnc": [[157, "index-119"]], "dnnl_ldoi": [[157, "index-123"]], "dnnl_ncdhw16c": [[157, "index-128"]], "dnnl_ncdhw32c": [[157, "index-127"]], "dnnl_ncdhw4c": [[157, "index-129"]], "dnnl_ncdhw8c": [[157, "index-130"]], "dnnl_nchw16c": [[157, "index-132"]], "dnnl_nchw32c": [[157, "index-131"]], "dnnl_nchw4c": [[157, "index-133"]], "dnnl_nchw8c": [[157, "index-134"]], "dnnl_ncw16c": [[157, "index-136"]], "dnnl_ncw32c": [[157, "index-135"]], "dnnl_ncw4c": [[157, "index-137"]], "dnnl_ncw8c": [[157, "index-138"]], "dnnl_nc": [[157, "index-76"]], "dnnl_ncdhw": [[157, "index-85"]], "dnnl_nchw": [[157, "index-82"]], "dnnl_ncw": [[157, "index-80"]], "dnnl_ndhwc": [[157, "index-86"]], "dnnl_nhwc": [[157, "index-83"]], "dnnl_nt": [[157, "index-79"]], "dnnl_ntc": [[157, "index-118"]], "dnnl_nwc": [[157, "index-81"]], "dnnl_odhwi": [[157, "index-104"]], "dnnl_ohwi": [[157, "index-97"]], "dnnl_oi": [[157, "index-87"]], "dnnl_oidhw": [[157, "index-100"]], "dnnl_oihw": [[157, "index-94"]], "dnnl_oiw": [[157, "index-89"]], "dnnl_owi": [[157, "index-90"]], "dnnl_tn": [[157, "index-78"]], "dnnl_tnc": [[157, "index-117"]], "dnnl_wigo": [[157, "index-108"]], "dnnl_wio": [[157, "index-91"]], "dnnl_woi": [[157, "index-92"]], "dnnl_x": [[157, "index-75"]], "bf16": [[158, "index-2"], [161, "index-2"], [172, "index-3"]], "f16": [[158, "index-3"], [161, "index-1"], [172, "index-2"]], "fpmath_mode": [[158, "index-0"]], "strict": [[158, "index-1"]], "tf32": [[158, "index-4"]], "dnnl_fpmath_mode_any": [[159, "index-4"]], "dnnl_fpmath_mode_bf16": [[159, "index-2"]], "dnnl_fpmath_mode_f16": [[159, "index-3"]], "dnnl_fpmath_mode_strict": [[159, "index-1"]], "dnnl_fpmath_mode_t": [[159, "index-0"]], "dnnl_fpmath_mode_tf32": [[159, "index-5"]], "dnnl_graph_layout_type_any": [[160, "index-2"]], "dnnl_graph_layout_type_opaque": [[160, "index-4"]], "dnnl_graph_layout_type_strided": [[160, "index-3"]], "dnnl_graph_layout_type_t": [[160, "index-0"]], "dnnl_graph_layout_type_undef": [[160, "index-1"]], "data_type": [[161, "index-0"], [172, "index-0"], [184, "index-45"], [406, "index-4"]], "f32": [[161, "index-3"], [172, "index-4"]], "s32": [[161, "index-4"], [172, "index-5"]], "s8": [[161, "index-5"], [172, "index-6"]], "u8": [[161, "index-6"], [172, "index-7"]], "layout_type": [[162, "index-0"], [406, "index-6"]], "opaque": [[162, "index-4"], [173, "index-5"]], "strided": [[162, "index-3"]], "constant": [[163, "index-3"]], "property_type": [[163, "index-0"]], "variable": [[163, "index-2"], [404, "index-1"], [404, "index-2"], [405, "index-1"], [405, "index-2"], [406, "index-1"], [406, "index-2"], [406, "index-3"], [406, "index-4"], [406, "index-5"], [406, "index-6"], [406, "index-7"], [406, "index-8"], [483, "index-1"], [488, "index-1"], [488, "index-2"], [488, "index-3"], [488, "index-4"], [488, "index-5"], [488, "index-6"]], "alpha": [[164, "index-2"]], "attr": [[164, "index-0"]], "auto_broadcast": [[164, "index-35"]], "auto_pad": [[164, "index-36"]], "axes": [[164, "index-12"]], "axis": [[164, "index-9"]], "begin_norm_axis": [[164, "index-10"]], "beta": [[164, "index-3"]], "coordinate_transformation_mode": [[164, "index-37"]], "data_format": [[164, "index-38"]], "dilations": [[164, "index-13"], [184, "index-16"]], "dst_shape": [[164, "index-14"]], "epsilon": [[164, "index-4"]], "exclude_pad": [[164, "index-26"]], "groups": [[164, "index-11"]], "keep_dims": [[164, "index-27"]], "keep_stats": [[164, "index-28"]], "kernel": [[164, "index-15"], [184, "index-32"]], "max": [[164, "index-5"]], "min": [[164, "index-6"]], "mode": [[164, "index-39"]], "momentum": [[164, "index-7"]], "order": [[164, "index-16"]], "output_padding": [[164, "index-17"]], "pads_begin": [[164, "index-18"]], "pads_end": [[164, "index-19"]], "per_channel_broadcast": [[164, "index-29"]], "qtype": [[164, "index-40"]], "rounding_type": [[164, "index-41"]], "scales": [[164, "index-8"]], "shape": [[164, "index-20"]], "sizes": [[164, "index-21"]], "special_zero": [[164, "index-30"]], "src_shape": [[164, "index-22"]], "strides": [[164, "index-23"], [184, "index-15"], [406, "index-7"]], "transpose_a": [[164, "index-31"]], "transpose_b": [[164, "index-32"]], "use_affine": [[164, "index-33"]], "use_dst": [[164, "index-34"]], "weights_format": [[164, "index-42"]], "weights_shape": [[164, "index-24"]], "zps": [[164, "index-25"]], "dnnl_graph_op_attr_alpha": [[165, "index-2"]], "dnnl_graph_op_attr_auto_broadcast": [[165, "index-35"]], "dnnl_graph_op_attr_auto_pad": [[165, "index-36"]], "dnnl_graph_op_attr_axes": [[165, "index-12"]], "dnnl_graph_op_attr_axis": [[165, "index-9"]], "dnnl_graph_op_attr_begin_norm_axis": [[165, "index-10"]], "dnnl_graph_op_attr_beta": [[165, "index-3"]], "dnnl_graph_op_attr_coordinate_transformation_mode": [[165, "index-37"]], "dnnl_graph_op_attr_data_format": [[165, "index-38"]], "dnnl_graph_op_attr_dilations": [[165, "index-13"]], "dnnl_graph_op_attr_dst_shape": [[165, "index-14"]], "dnnl_graph_op_attr_epsilon": [[165, "index-4"]], "dnnl_graph_op_attr_exclude_pad": [[165, "index-26"]], "dnnl_graph_op_attr_groups": [[165, "index-11"]], "dnnl_graph_op_attr_keep_dims": [[165, "index-27"]], "dnnl_graph_op_attr_keep_stats": [[165, "index-28"]], "dnnl_graph_op_attr_kernel": [[165, "index-15"]], "dnnl_graph_op_attr_max": [[165, "index-5"]], "dnnl_graph_op_attr_min": [[165, "index-6"]], "dnnl_graph_op_attr_mode": [[165, "index-39"]], "dnnl_graph_op_attr_momentum": [[165, "index-7"]], "dnnl_graph_op_attr_order": [[165, "index-16"]], "dnnl_graph_op_attr_output_padding": [[165, "index-17"]], "dnnl_graph_op_attr_pads_begin": [[165, "index-18"]], "dnnl_graph_op_attr_pads_end": [[165, "index-19"]], "dnnl_graph_op_attr_per_channel_broadcast": [[165, "index-29"]], "dnnl_graph_op_attr_qtype": [[165, "index-40"]], "dnnl_graph_op_attr_rounding_type": [[165, "index-41"]], "dnnl_graph_op_attr_scales": [[165, "index-8"]], "dnnl_graph_op_attr_shape": [[165, "index-20"]], "dnnl_graph_op_attr_sizes": [[165, "index-21"]], "dnnl_graph_op_attr_special_zero": [[165, "index-30"]], "dnnl_graph_op_attr_src_shape": [[165, "index-22"]], "dnnl_graph_op_attr_strides": [[165, "index-23"]], "dnnl_graph_op_attr_t": [[165, "index-0"]], "dnnl_graph_op_attr_transpose_a": [[165, "index-31"]], "dnnl_graph_op_attr_transpose_b": [[165, "index-32"]], "dnnl_graph_op_attr_undef": [[165, "index-1"]], "dnnl_graph_op_attr_use_affine": [[165, "index-33"]], "dnnl_graph_op_attr_use_dst": [[165, "index-34"]], "dnnl_graph_op_attr_weights_format": [[165, "index-42"]], "dnnl_graph_op_attr_weights_shape": [[165, "index-24"]], "dnnl_graph_op_attr_zps": [[165, "index-25"]], "dnnl_graph_op_kind_t": [[167, "index-0"]], "debug": [[168, "index-2"]], "fusion": [[168, "index-1"]], "policy": [[168, "index-0"]], "dnnl_graph_partition_policy_debug": [[169, "index-2"]], "dnnl_graph_partition_policy_fusion": [[169, "index-1"]], "dnnl_graph_partition_policy_t": [[169, "index-0"]], "invalid_arguments": [[170, "index-3"], [193, "index-3"]], "invalid_data_type": [[170, "index-11"]], "invalid_graph": [[170, "index-8"]], "invalid_graph_op": [[170, "index-9"]], "invalid_shape": [[170, "index-10"]], "last_impl_reached": [[170, "index-5"], [193, "index-5"]], "not_required": [[170, "index-7"], [193, "index-7"]], "out_of_memory": [[170, "index-2"], [193, "index-2"]], "runtime_error": [[170, "index-6"], [193, "index-6"]], "status": [[170, "index-0"], [193, "index-0"], [290, "index-0"]], "success": [[170, "index-1"], [193, "index-1"]], "unimplemented": [[170, "index-4"], [193, "index-4"]], "dnnl_graph_tensor_property_constant": [[171, "index-3"]], "dnnl_graph_tensor_property_t": [[171, "index-0"]], "dnnl_graph_tensor_property_undef": [[171, "index-1"]], "dnnl_graph_tensor_property_variable": [[171, "index-2"]], "blocked": [[173, "index-3"]], "format_kind": [[173, "index-0"], [184, "index-49"]], "sparse": [[173, "index-4"]], "abcd8b8a": [[174, "index-95"]], "a": [[174, "index-3"]], "abcd8b": [[174, "index-94"]], "ab": [[174, "index-4"]], "abc": [[174, "index-6"]], "abcd": [[174, "index-11"]], "abcde": [[174, "index-20"]], "abcdef": [[174, "index-29"]], "abcdefg": [[174, "index-35"]], "abcdefgh": [[174, "index-37"]], "abcdefghi": [[174, "index-39"]], "abcdefghij": [[174, "index-41"]], "abcdefghijk": [[174, "index-43"]], "abcdefghijkl": [[174, "index-45"]], "abcdefghijlk": [[174, "index-46"]], "abcdefghikj": [[174, "index-44"]], "abcdefghji": [[174, "index-42"]], "abcdefgih": [[174, "index-40"]], "abcdefhg": [[174, "index-38"]], "abcdegf": [[174, "index-36"]], "abcdfe": [[174, "index-34"]], "abced": [[174, "index-28"]], "abdc": [[174, "index-12"]], "abdec": [[174, "index-21"]], "abdefc": [[174, "index-32"]], "abdfce": [[174, "index-30"]], "acb": [[174, "index-7"]], "acbd": [[174, "index-13"]], "acbde": [[174, "index-22"]], "acbdef": [[174, "index-31"]], "acdb": [[174, "index-14"]], "acdeb": [[174, "index-23"]], "adbc": [[174, "index-15"]], "ba": [[174, "index-5"]], "bac": [[174, "index-8"]], "bacd": [[174, "index-16"]], "bacde": [[174, "index-24"]], "bca": [[174, "index-9"]], "bcda": [[174, "index-17"]], "bcdea": [[174, "index-25"]], "cba": [[174, "index-10"]], "cdba": [[174, "index-18"]], "cdeba": [[174, "index-26"]], "chwn": [[174, "index-56"]], "cn": [[174, "index-49"]], "dcab": [[174, "index-19"]], "decab": [[174, "index-27"]], "defcab": [[174, "index-33"]], "dhwigo": [[174, "index-85"]], "dhwio": [[174, "index-71"]], "format_tag": [[174, "index-0"]], "giodhw": [[174, "index-83"]], "giohw": [[174, "index-81"]], "godhwi": [[174, "index-84"]], "gohwi": [[174, "index-78"]], "goidhw": [[174, "index-82"]], "goihw": [[174, "index-79"]], "goiw": [[174, "index-75"]], "gowi": [[174, "index-76"]], "hwigo": [[174, "index-80"]], "hwio": [[174, "index-66"]], "idhwo": [[174, "index-74"]], "ihwo": [[174, "index-68"]], "io": [[174, "index-60"]], "iodhw": [[174, "index-73"]], "iohw": [[174, "index-69"]], "iwo": [[174, "index-64"]], "ldgo": [[174, "index-93"]], "ldgoi": [[174, "index-90"]], "ldigo": [[174, "index-89"]], "ldio": [[174, "index-91"]], "ldnc": [[174, "index-88"]], "ldoi": [[174, "index-92"]], "nc": [[174, "index-48"]], "ncdhw": [[174, "index-57"]], "nchw": [[174, "index-54"]], "ncw": [[174, "index-52"]], "ndhwc": [[174, "index-58"]], "nhwc": [[174, "index-55"]], "nt": [[174, "index-51"]], "ntc": [[174, "index-87"]], "nwc": [[174, "index-53"]], "odhwi": [[174, "index-72"]], "ohwi": [[174, "index-67"]], "oi": [[174, "index-59"]], "oidhw": [[174, "index-70"]], "oihw": [[174, "index-65"]], "oiw": [[174, "index-61"]], "owi": [[174, "index-62"]], "tn": [[174, "index-50"]], "tnc": [[174, "index-86"]], "wigo": [[174, "index-77"]], "wio": [[174, "index-63"]], "x": [[174, "index-47"]], "csr": [[175, "index-2"], [444, "index-26"]], "sparse_encoding": [[175, "index-0"], [184, "index-53"]], "fuse_norm_add_relu": [[176, "index-6"]], "fuse_norm_relu": [[176, "index-5"]], "none": [[176, "index-1"]], "normalization_flags": [[176, "index-0"]], "use_global_stats": [[176, "index-2"]], "use_scale": [[176, "index-3"]], "use_shift": [[176, "index-4"]], "dnnl_fuse_norm_add_relu": [[177, "index-6"]], "dnnl_fuse_norm_relu": [[177, "index-5"]], "dnnl_normalization_flags_none": [[177, "index-1"]], "dnnl_normalization_flags_t": [[177, "index-0"]], "dnnl_use_global_stats": [[177, "index-2"]], "dnnl_use_scale": [[177, "index-3"]], "dnnl_use_shift": [[177, "index-4"]], "buffer": [[178, "index-2"], [197, "index-2"]], "memory_kind": [[178, "index-0"], [197, "index-0"]], "usm": [[178, "index-1"], [197, "index-1"]], "dnnl_ocl_interop_buffer": [[179, "index-2"]], "dnnl_ocl_interop_memory_kind_t": [[179, "index-0"]], "dnnl_ocl_interop_usm": [[179, "index-1"]], "batch_normalization": [[180, "index-10"]], "deconvolution": [[180, "index-7"], [251, "index-0"]], "inner_product": [[180, "index-11"]], "layer_normalization": [[180, "index-20"]], "lrn": [[180, "index-9"], [258, "index-0"]], "dnnl_batch_normalization": [[181, "index-10"]], "dnnl_binary": [[181, "index-14"]], "dnnl_concat": [[181, "index-4"]], "dnnl_convolution": [[181, "index-6"]], "dnnl_deconvolution": [[181, "index-7"]], "dnnl_eltwise": [[181, "index-8"]], "dnnl_gemm": [[181, "index-13"]], "dnnl_inner_product": [[181, "index-11"]], "dnnl_layer_normalization": [[181, "index-21"]], "dnnl_lrn": [[181, "index-9"]], "dnnl_matmul": [[181, "index-15"]], "dnnl_pooling": [[181, "index-17"]], "dnnl_prelu": [[181, "index-19"]], "dnnl_primitive_kind_max": [[181, "index-22"]], "dnnl_primitive_kind_t": [[181, "index-0"]], "dnnl_reduction": [[181, "index-18"]], "dnnl_reorder": [[181, "index-2"]], "dnnl_resampling": [[181, "index-16"]], "dnnl_rnn": [[181, "index-12"]], "dnnl_shuffle": [[181, "index-3"]], "dnnl_softmax": [[181, "index-20"]], "dnnl_sum": [[181, "index-5"]], "dnnl_undefined_primitive": [[181, "index-1"]], "backward": [[182, "index-5"]], "backward_bias": [[182, "index-8"]], "backward_data": [[182, "index-6"]], "backward_weights": [[182, "index-7"]], "forward": [[182, "index-4"]], "forward_inference": [[182, "index-3"]], "forward_training": [[182, "index-2"]], "prop_kind": [[182, "index-0"], [184, "index-12"]], "dnnl_backward": [[183, "index-5"]], "dnnl_backward_bias": [[183, "index-8"]], "dnnl_backward_data": [[183, "index-6"]], "dnnl_backward_weights": [[183, "index-7"]], "dnnl_forward": [[183, "index-4"]], "dnnl_forward_inference": [[183, "index-3"]], "dnnl_forward_training": [[183, "index-2"]], "dnnl_prop_kind_t": [[183, "index-0"]], "dnnl_prop_kind_undef": [[183, "index-1"]], "activation_kind": [[184, "index-31"]], "alg_kind": [[184, "index-21"]], "alpha_f32": [[184, "index-22"]], "axis_s32": [[184, "index-24"]], "beta_f32": [[184, "index-23"]], "cache_blob_id": [[184, "index-14"]], "cache_blob_id_size_s64": [[184, "index-13"]], "cell_kind": [[184, "index-29"]], "diff_dst_md": [[184, "index-39"]], "diff_src_md": [[184, "index-35"]], "diff_weights_md": [[184, "index-37"]], "direction": [[184, "index-30"]], "dst_md": [[184, "index-38"]], "engine": [[184, "index-2"], [253, "index-0"], [284, "index-0"], [402, "index-1"], [402, "index-2"]], "epsilon_f32": [[184, "index-19"]], "exec_arg_md": [[184, "index-42"]], "factors": [[184, "index-28"]], "flags": [[184, "index-20"], [195, "index-0"]], "group_size_s64": [[184, "index-33"]], "impl_info_str": [[184, "index-11"], [461, "index-2"]], "inner_blks": [[184, "index-51"]], "inner_idxs": [[184, "index-52"]], "inner_nblks_s32": [[184, "index-50"]], "k_f32": [[184, "index-26"]], "local_size_s64": [[184, "index-25"]], "memory_consumption_s64": [[184, "index-7"]], "ndims_s32": [[184, "index-43"]], "nnz_s64": [[184, "index-54"]], "num_handles_s32": [[184, "index-55"]], "num_of_inputs_s32": [[184, "index-4"]], "num_of_outputs_s32": [[184, "index-5"]], "p_f32": [[184, "index-27"]], "padded_dims": [[184, "index-47"]], "padded_offsets": [[184, "index-48"]], "padding_l": [[184, "index-17"]], "padding_r": [[184, "index-18"]], "primitive_kind": [[184, "index-3"]], "query": [[184, "index-0"]], "reorder_dst_engine": [[184, "index-10"]], "reorder_src_engine": [[184, "index-9"]], "scratchpad_engine": [[184, "index-8"], [461, "index-39"]], "scratchpad_md": [[184, "index-41"]], "src_md": [[184, "index-34"]], "submemory_offset_s64": [[184, "index-46"]], "time_estimate_f64": [[184, "index-6"]], "weights_md": [[184, "index-36"]], "workspace_md": [[184, "index-40"]], "dnnl_query_activation_kind": [[185, "index-31"]], "dnnl_query_alg_kind": [[185, "index-21"]], "dnnl_query_alpha_f32": [[185, "index-22"]], "dnnl_query_axis_s32": [[185, "index-24"]], "dnnl_query_beta_f32": [[185, "index-23"]], "dnnl_query_cache_blob_id": [[185, "index-14"]], "dnnl_query_cache_blob_id_size_s64": [[185, "index-13"]], "dnnl_query_cell_kind": [[185, "index-29"]], "dnnl_query_data_type": [[185, "index-46"]], "dnnl_query_diff_dst_md": [[185, "index-40"]], "dnnl_query_diff_src_md": [[185, "index-36"]], "dnnl_query_diff_weights_md": [[185, "index-38"]], "dnnl_query_dilations": [[185, "index-16"]], "dnnl_query_dims": [[185, "index-45"]], "dnnl_query_direction": [[185, "index-30"]], "dnnl_query_dst_md": [[185, "index-39"]], "dnnl_query_engine": [[185, "index-2"]], "dnnl_query_epsilon_f32": [[185, "index-19"]], "dnnl_query_exec_arg_md": [[185, "index-43"]], "dnnl_query_factors": [[185, "index-28"]], "dnnl_query_flags": [[185, "index-20"]], "dnnl_query_format_kind": [[185, "index-50"]], "dnnl_query_group_size_s64": [[185, "index-33"]], "dnnl_query_impl_info_str": [[185, "index-9"]], "dnnl_query_inner_blks": [[185, "index-52"]], "dnnl_query_inner_idxs": [[185, "index-53"]], "dnnl_query_inner_nblks_s32": [[185, "index-51"]], "dnnl_query_k_f32": [[185, "index-26"]], "dnnl_query_kernel": [[185, "index-32"]], "dnnl_query_local_size_s64": [[185, "index-25"]], "dnnl_query_max": [[185, "index-57"]], "dnnl_query_memory_consumption_s64": [[185, "index-7"]], "dnnl_query_ndims_s32": [[185, "index-44"]], "dnnl_query_nnz_s64": [[185, "index-55"]], "dnnl_query_num_handles_s32": [[185, "index-56"]], "dnnl_query_num_of_inputs_s32": [[185, "index-4"]], "dnnl_query_num_of_outputs_s32": [[185, "index-5"]], "dnnl_query_p_f32": [[185, "index-27"]], "dnnl_query_padded_dims": [[185, "index-48"]], "dnnl_query_padded_offsets": [[185, "index-49"]], "dnnl_query_padding_l": [[185, "index-17"]], "dnnl_query_padding_r": [[185, "index-18"]], "dnnl_query_primitive_kind": [[185, "index-3"]], "dnnl_query_prop_kind": [[185, "index-12"]], "dnnl_query_reorder_dst_engine": [[185, "index-11"]], "dnnl_query_reorder_src_engine": [[185, "index-10"]], "dnnl_query_scratchpad_engine": [[185, "index-8"]], "dnnl_query_scratchpad_md": [[185, "index-42"]], "dnnl_query_some_md": [[185, "index-34"]], "dnnl_query_sparse_encoding": [[185, "index-54"]], "dnnl_query_src_md": [[185, "index-35"]], "dnnl_query_strides": [[185, "index-15"]], "dnnl_query_submemory_offset_s64": [[185, "index-47"]], "dnnl_query_t": [[185, "index-0"]], "dnnl_query_time_estimate_f64": [[185, "index-6"]], "dnnl_query_undef": [[185, "index-1"]], "dnnl_query_weights_md": [[185, "index-37"]], "dnnl_query_workspace_md": [[185, "index-41"]], "bidirectional_concat": [[186, "index-4"]], "bidirectional_sum": [[186, "index-5"]], "rnn_direction": [[186, "index-0"]], "unidirectional_left2right": [[186, "index-2"]], "unidirectional_right2left": [[186, "index-3"]], "dnnl_bidirectional_concat": [[187, "index-4"]], "dnnl_bidirectional_sum": [[187, "index-5"]], "dnnl_rnn_direction_t": [[187, "index-0"]], "dnnl_rnn_direction_undef": [[187, "index-1"]], "dnnl_unidirectional_left2right": [[187, "index-2"]], "dnnl_unidirectional_right2left": [[187, "index-3"]], "diff_weights_overwrite": [[188, "index-2"]], "rnn_flags": [[188, "index-0"]], "dnnl_rnn_flags_diff_weights_overwrite": [[189, "index-2"]], "dnnl_rnn_flags_t": [[189, "index-0"]], "dnnl_rnn_flags_undef": [[189, "index-1"]], "library": [[190, "index-1"]], "scratchpad_mode": [[190, "index-0"]], "user": [[190, "index-2"]], "dnnl_scratchpad_mode_library": [[191, "index-1"]], "dnnl_scratchpad_mode_t": [[191, "index-0"]], "dnnl_scratchpad_mode_user": [[191, "index-2"]], "dnnl_csr": [[192, "index-2"]], "dnnl_sparse_encoding_t": [[192, "index-0"]], "dnnl_sparse_encoding_undef": [[192, "index-1"]], "dnnl_invalid_arguments": [[194, "index-3"]], "dnnl_invalid_data_type": [[194, "index-11"]], "dnnl_invalid_graph": [[194, "index-8"]], "dnnl_invalid_graph_op": [[194, "index-9"]], "dnnl_invalid_shape": [[194, "index-10"]], "dnnl_last_impl_reached": [[194, "index-5"]], "dnnl_not_required": [[194, "index-7"]], "dnnl_out_of_memory": [[194, "index-2"]], "dnnl_runtime_error": [[194, "index-6"]], "dnnl_status_t": [[194, "index-0"]], "dnnl_success": [[194, "index-1"]], "dnnl_unimplemented": [[194, "index-4"]], "default_flags": [[195, "index-3"]], "in_order": [[195, "index-1"]], "out_of_order": [[195, "index-2"]], "dnnl_stream_default_flags": [[196, "index-2"]], "dnnl_stream_flags_t": [[196, "index-0"]], "dnnl_stream_out_of_order": [[196, "index-1"]], "dnnl_sycl_interop_buffer": [[198, "index-2"]], "dnnl_sycl_interop_memory_kind_t": [[198, "index-0"]], "dnnl_sycl_interop_usm": [[198, "index-1"]], "augru.cpp": [[199, "index-0"]], "example": [[199, "index-0"], [200, "index-0"], [201, "index-0"], [202, "index-0"], [203, "index-0"], [204, "index-0"], [205, "index-0"], [206, "index-0"], [207, "index-0"], [208, "index-0"], [209, "index-0"], [210, "index-0"], [211, "index-0"], [212, "index-0"], [213, "index-0"], [214, "index-0"], [215, "index-0"], [216, "index-0"], [217, "index-0"], [218, "index-0"], [219, "index-0"], [220, "index-0"], [221, "index-0"], [222, "index-0"], [223, "index-0"], [224, "index-0"], [225, "index-0"], [226, "index-0"], [227, "index-0"], [228, "index-0"], [229, "index-0"], [230, "index-0"], [231, "index-0"], [232, "index-0"], [233, "index-0"], [234, "index-0"], [235, "index-0"], [236, "index-0"], [237, "index-0"]], "batch_normalization.cpp": [[200, "index-0"]], "binary.cpp": [[201, "index-0"]], "bnorm_u8_via_binary_postops.cpp": [[202, "index-0"]], "cnn_inference_f32.c": [[203, "index-0"]], "cnn_inference_f32.cpp": [[204, "index-0"]], "cnn_inference_int8.cpp": [[205, "index-0"]], "cnn_training_bf16.cpp": [[206, "index-0"]], "cnn_training_f32.cpp": [[207, "index-0"]], "concat.cpp": [[208, "index-0"]], "convolution.cpp": [[209, "index-0"]], "cpu_cnn_training_f32.c": [[210, "index-0"]], "cpu_matmul_quantization.cpp": [[211, "index-0"]], "cpu_rnn_inference_f32.cpp": [[212, "index-0"]], "cpu_rnn_inference_int8.cpp": [[213, "index-0"]], "cpu_sgemm_and_matmul.cpp": [[214, "index-0"]], "cross_engine_reorder.c": [[215, "index-0"]], "cross_engine_reorder.cpp": [[216, "index-0"]], "eltwise.cpp": [[217, "index-0"]], "getting_started.cpp": [[218, "index-0"]], "gpu_opencl_interop.cpp": [[219, "index-0"]], "inference_int8_matmul.cpp": [[220, "index-0"]], "inner_product.cpp": [[221, "index-0"]], "layer_normalization.cpp": [[222, "index-0"]], "lrn.cpp": [[223, "index-0"]], "lstm.cpp": [[224, "index-0"]], "matmul.cpp": [[225, "index-0"]], "memory_format_propagation.cpp": [[226, "index-0"]], "performance_profiling.cpp": [[227, "index-0"]], "pooling.cpp": [[228, "index-0"]], "prelu.cpp": [[229, "index-0"]], "reduction.cpp": [[230, "index-0"]], "reorder.cpp": [[231, "index-0"]], "resampling.cpp": [[232, "index-0"]], "rnn_training_f32.cpp": [[233, "index-0"]], "shuffle.cpp": [[234, "index-0"]], "softmax.cpp": [[235, "index-0"]], "sum.cpp": [[236, "index-0"]], "sycl_interop_buffer.cpp": [[237, "index-0"]], "global": [[238, "index-0"]], "namespace": [[238, "index-0"], [296, "index-0"], [297, "index-0"], [298, "index-0"], [299, "index-0"], [300, "index-0"], [301, "index-0"], [302, "index-0"], [303, "index-0"], [304, "index-0"]], "group": [[242, "index-0"], [243, "index-0"], [244, "index-0"], [245, "index-0"], [246, "index-0"], [247, "index-0"], [248, "index-0"], [249, "index-0"], [250, "index-0"], [251, "index-0"], [252, "index-0"], [253, "index-0"], [254, "index-0"], [255, "index-0"], [256, "index-0"], [257, "index-0"], [258, "index-0"], [259, "index-0"], [260, "index-0"], [261, "index-0"], [262, "index-0"], [263, "index-0"], [264, "index-0"], [265, "index-0"], [266, "index-0"], [267, "index-0"], [268, "index-0"], [269, "index-0"], [270, "index-0"], [271, "index-0"], [272, "index-0"], [273, "index-0"], [274, "index-0"], [275, "index-0"], [276, "index-0"], [277, "index-0"], [278, "index-0"], [279, "index-0"], [280, "index-0"], [281, "index-0"], [282, "index-0"], [283, "index-0"], [284, "index-0"], [285, "index-0"], [286, "index-0"], [287, "index-0"], [288, "index-0"], [289, "index-0"], [290, "index-0"], [291, "index-0"], [292, "index-0"], [293, "index-0"]], "onednn api": [[242, "index-0"]], "attributes": [[243, "index-0"]], "const_dnnl_post_ops_t": [[243, "index-4"]], "const_dnnl_primitive_attr_t": [[243, "index-2"]], "convert_to_c": [[243, "index-5"], [243, "index-6"], [243, "index-7"], [253, "index-2"], [254, "index-1"], [266, "index-5"], [266, "index-6"], [266, "index-7"], [270, "index-1"], [270, "index-2"], [299, "index-1"], [300, "index-1"]], "dnnl_post_ops_append_binary": [[243, "index-30"]], "dnnl_post_ops_append_dw": [[243, "index-28"]], "dnnl_post_ops_append_eltwise": [[243, "index-26"]], "dnnl_post_ops_append_prelu": [[243, "index-32"]], "dnnl_post_ops_append_sum": [[243, "index-24"]], "dnnl_post_ops_clone": [[243, "index-20"]], "dnnl_post_ops_create": [[243, "index-19"]], "dnnl_post_ops_destroy": [[243, "index-21"]], "dnnl_post_ops_get_kind": [[243, "index-23"]], "dnnl_post_ops_get_params_binary": [[243, "index-31"]], "dnnl_post_ops_get_params_dw": [[243, "index-29"]], "dnnl_post_ops_get_params_eltwise": [[243, "index-27"]], "dnnl_post_ops_get_params_prelu": [[243, "index-33"]], "dnnl_post_ops_get_params_sum": [[243, "index-25"]], "dnnl_post_ops_len": [[243, "index-22"]], "dnnl_post_ops_t": [[243, "index-3"]], "dnnl_primitive_attr_clone": [[243, "index-9"]], "dnnl_primitive_attr_create": [[243, "index-8"]], "dnnl_primitive_attr_destroy": [[243, "index-10"]], "dnnl_primitive_attr_get_fpmath_mode": [[243, "index-11"]], "dnnl_primitive_attr_get_post_ops": [[243, "index-17"]], "dnnl_primitive_attr_get_rnn_data_qparams": [[243, "index-35"]], "dnnl_primitive_attr_get_rnn_weights_projection_qparams": [[243, "index-39"]], "dnnl_primitive_attr_get_rnn_weights_qparams": [[243, "index-37"]], "dnnl_primitive_attr_get_scratchpad_mode": [[243, "index-13"]], "dnnl_primitive_attr_set_fpmath_mode": [[243, "index-12"]], "dnnl_primitive_attr_set_post_ops": [[243, "index-18"]], "dnnl_primitive_attr_set_rnn_data_qparams": [[243, "index-34"]], "dnnl_primitive_attr_set_rnn_weights_projection_qparams": [[243, "index-38"]], "dnnl_primitive_attr_set_rnn_weights_qparams": [[243, "index-36"]], "dnnl_primitive_attr_set_scales_mask": [[243, "index-15"]], "dnnl_primitive_attr_set_scratchpad_mode": [[243, "index-14"]], "dnnl_primitive_attr_set_zero_points_mask": [[243, "index-16"]], "dnnl_primitive_attr_t": [[243, "index-1"]], "dnnl_batch_normalization_backward_primitive_desc_create": [[244, "index-2"]], "dnnl_batch_normalization_forward_primitive_desc_create": [[244, "index-1"]], "dnnl_binary_primitive_desc_create": [[245, "index-1"]], "blas functions": [[246, "index-0"]], "dnnl_gemm_s8s8s32": [[246, "index-6"]], "dnnl_gemm_u8s8s32": [[246, "index-5"]], "dnnl_sgemm": [[246, "index-4"]], "gemm_s8s8s32": [[246, "index-3"], [301, "index-5"]], "gemm_u8s8s32": [[246, "index-2"], [301, "index-4"]], "sgemm": [[246, "index-1"], [301, "index-3"]], "common api": [[247, "index-0"]], "dnnl_concat_primitive_desc_create": [[248, "index-1"]], "dnnl_convolution_backward_data_primitive_desc_create": [[249, "index-2"]], "dnnl_convolution_backward_weights_primitive_desc_create": [[249, "index-3"]], "dnnl_convolution_forward_primitive_desc_create": [[249, "index-1"]], "dnnl_max_ndims": [[250, "index-3"]], "define": [[250, "index-3"], [260, "index-32"], [260, "index-33"], [260, "index-34"], [260, "index-35"], [260, "index-36"], [260, "index-37"], [266, "index-21"], [266, "index-22"], [266, "index-23"], [266, "index-24"], [266, "index-25"], [266, "index-26"], [266, "index-27"], [266, "index-28"], [266, "index-29"], [266, "index-30"], [266, "index-31"], [266, "index-32"], [266, "index-33"], [266, "index-34"], [266, "index-35"], [266, "index-36"], [266, "index-37"], [266, "index-38"], [266, "index-39"], [266, "index-40"], [266, "index-41"], [266, "index-42"], [266, "index-43"], [266, "index-44"], [266, "index-45"], [266, "index-46"], [266, "index-47"], [266, "index-48"], [266, "index-49"], [266, "index-50"], [266, "index-51"], [266, "index-52"], [266, "index-53"], [266, "index-54"], [266, "index-55"], [266, "index-56"], [266, "index-57"], [266, "index-58"], [266, "index-59"], [266, "index-60"], [266, "index-61"], [266, "index-62"], [266, "index-63"], [266, "index-64"], [266, "index-65"], [266, "index-66"], [266, "index-67"], [266, "index-68"], [266, "index-69"], [266, "index-70"], [266, "index-71"], [266, "index-72"], [266, "index-73"], [266, "index-74"], [266, "index-75"], [266, "index-76"], [266, "index-77"], [266, "index-78"], [266, "index-79"], [266, "index-80"], [266, "index-81"], [266, "index-82"], [266, "index-83"], [266, "index-84"], [266, "index-85"], [266, "index-86"], [266, "index-87"], [266, "index-88"], [266, "index-89"], [266, "index-90"], [271, "index-22"], [271, "index-23"], [271, "index-24"], [271, "index-25"], [271, "index-26"], [271, "index-27"], [271, "index-28"], [271, "index-29"], [271, "index-30"], [271, "index-31"], [271, "index-32"], [271, "index-33"], [271, "index-34"], [271, "index-35"], [287, "index-6"], [287, "index-7"]], "dnnl_dim_t": [[250, "index-1"]], "dnnl_dims_t": [[250, "index-2"]], "dnnl_deconvolution_backward_data_primitive_desc_create": [[251, "index-2"]], "dnnl_deconvolution_backward_weights_primitive_desc_create": [[251, "index-3"]], "dnnl_deconvolution_forward_primitive_desc_create": [[251, "index-1"]], "dnnl_eltwise_backward_primitive_desc_create": [[252, "index-2"]], "dnnl_eltwise_forward_primitive_desc_create": [[252, "index-1"]], "dnnl_engine_create": [[253, "index-4"]], "dnnl_engine_destroy": [[253, "index-6"]], "dnnl_engine_get_count": [[253, "index-3"]], "dnnl_engine_get_kind": [[253, "index-5"]], "dnnl_engine_t": [[253, "index-1"]], "floating-point math mode": [[254, "index-0"]], "dnnl_get_default_fpmath_mode": [[254, "index-2"]], "dnnl_set_default_fpmath_mode": [[254, "index-3"]], "dnnl_inner_product_backward_data_primitive_desc_create": [[255, "index-2"]], "dnnl_inner_product_backward_weights_primitive_desc_create": [[255, "index-3"]], "dnnl_inner_product_forward_primitive_desc_create": [[255, "index-1"]], "runtime interoperability api": [[256, "index-0"], [286, "index-0"]], "dnnl_layer_normalization_backward_primitive_desc_create": [[257, "index-2"]], "dnnl_layer_normalization_forward_primitive_desc_create": [[257, "index-1"]], "dnnl_lrn_backward_primitive_desc_create": [[258, "index-2"]], "dnnl_lrn_forward_primitive_desc_create": [[258, "index-1"]], "dnnl_matmul_primitive_desc_create": [[259, "index-1"]], "dnnl_memory_allocate": [[260, "index-32"]], "dnnl_memory_none": [[260, "index-33"]], "dnnl_runtime_dim_val": [[260, "index-34"]], "dnnl_runtime_f32_val": [[260, "index-35"]], "dnnl_runtime_s32_val": [[260, "index-36"]], "dnnl_runtime_size_val": [[260, "index-37"]], "memory": [[260, "index-0"], [404, "index-2"], [442, "index-3"], [442, "index-4"], [442, "index-5"], [442, "index-6"]], "const_dnnl_memory_desc_t": [[260, "index-2"]], "const_dnnl_memory_t": [[260, "index-4"]], "dnnl_data_type_size": [[260, "index-18"]], "dnnl_memory_create": [[260, "index-19"]], "dnnl_memory_create_v2": [[260, "index-20"]], "dnnl_memory_desc_clone": [[260, "index-6"]], "dnnl_memory_desc_create_submemory": [[260, "index-10"]], "dnnl_memory_desc_create_with_csr_encoding": [[260, "index-9"]], "dnnl_memory_desc_create_with_strides": [[260, "index-7"]], "dnnl_memory_desc_create_with_tag": [[260, "index-8"]], "dnnl_memory_desc_destroy": [[260, "index-5"]], "dnnl_memory_desc_equal": [[260, "index-15"]], "dnnl_memory_desc_get_size": [[260, "index-16"]], "dnnl_memory_desc_get_size_v2": [[260, "index-17"]], "dnnl_memory_desc_permute_axes": [[260, "index-12"]], "dnnl_memory_desc_query": [[260, "index-13"]], "dnnl_memory_desc_query_v2": [[260, "index-14"]], "dnnl_memory_desc_reshape": [[260, "index-11"]], "dnnl_memory_desc_t": [[260, "index-1"]], "dnnl_memory_destroy": [[260, "index-31"]], "dnnl_memory_get_data_handle": [[260, "index-27"]], "dnnl_memory_get_data_handle_v2": [[260, "index-29"]], "dnnl_memory_get_engine": [[260, "index-22"]], "dnnl_memory_get_memory_desc": [[260, "index-21"]], "dnnl_memory_map_data": [[260, "index-23"]], "dnnl_memory_map_data_v2": [[260, "index-24"]], "dnnl_memory_set_data_handle": [[260, "index-28"]], "dnnl_memory_set_data_handle_v2": [[260, "index-30"]], "dnnl_memory_t": [[260, "index-3"]], "dnnl_memory_unmap_data": [[260, "index-25"]], "dnnl_memory_unmap_data_v2": [[260, "index-26"]], "opencl interoperability api": [[261, "index-0"]], "dnnl_ocl_interop_engine_create": [[261, "index-8"]], "dnnl_ocl_interop_engine_create_from_cache_blob": [[261, "index-7"]], "dnnl_ocl_interop_engine_get_cache_blob": [[261, "index-6"]], "dnnl_ocl_interop_engine_get_cache_blob_id": [[261, "index-5"]], "dnnl_ocl_interop_engine_get_context": [[261, "index-9"]], "dnnl_ocl_interop_get_device": [[261, "index-10"]], "dnnl_ocl_interop_memory_create": [[261, "index-1"]], "dnnl_ocl_interop_memory_get_mem_object": [[261, "index-3"]], "dnnl_ocl_interop_memory_get_memory_kind": [[261, "index-2"]], "dnnl_ocl_interop_memory_set_mem_object": [[261, "index-4"]], "dnnl_ocl_interop_primitive_execute": [[261, "index-13"]], "dnnl_ocl_interop_stream_create": [[261, "index-11"]], "dnnl_ocl_interop_stream_get_command_queue": [[261, "index-12"]], "dnnl_pooling_backward_primitive_desc_create": [[262, "index-2"]], "dnnl_pooling_forward_primitive_desc_create": [[262, "index-1"]], "dnnl_prelu_backward_primitive_desc_create": [[263, "index-2"]], "dnnl_prelu_forward_primitive_desc_create": [[263, "index-1"]], "dnnl_get_primitive_cache_capacity": [[264, "index-3"]], "dnnl_set_primitive_cache_capacity": [[264, "index-4"]], "get_primitive_cache_capacity": [[264, "index-1"]], "set_primitive_cache_capacity": [[264, "index-2"]], "primitives": [[265, "index-0"]], "common": [[266, "index-0"]], "dnnl_arg_attr_multiple_post_op": [[266, "index-21"]], "dnnl_arg_attr_multiple_post_op_base": [[266, "index-22"]], "dnnl_arg_attr_output_scales": [[266, "index-23"]], "dnnl_arg_attr_post_op_dw": [[266, "index-24"]], "dnnl_arg_attr_scales": [[266, "index-25"]], "dnnl_arg_attr_zero_points": [[266, "index-26"]], "dnnl_arg_augru_attention": [[266, "index-27"]], "dnnl_arg_bias": [[266, "index-28"]], "dnnl_arg_diff_augru_attention": [[266, "index-29"]], "dnnl_arg_diff_bias": [[266, "index-30"]], "dnnl_arg_diff_dst": [[266, "index-31"]], "dnnl_arg_diff_dst_0": [[266, "index-32"]], "dnnl_arg_diff_dst_1": [[266, "index-33"]], "dnnl_arg_diff_dst_2": [[266, "index-34"]], "dnnl_arg_diff_dst_iter": [[266, "index-35"]], "dnnl_arg_diff_dst_iter_c": [[266, "index-36"]], "dnnl_arg_diff_dst_layer": [[266, "index-37"]], "dnnl_arg_diff_scale": [[266, "index-38"]], "dnnl_arg_diff_shift": [[266, "index-39"]], "dnnl_arg_diff_src": [[266, "index-40"]], "dnnl_arg_diff_src_0": [[266, "index-41"]], "dnnl_arg_diff_src_1": [[266, "index-42"]], "dnnl_arg_diff_src_2": [[266, "index-43"]], "dnnl_arg_diff_src_3": [[266, "index-44"]], "dnnl_arg_diff_src_iter": [[266, "index-45"]], "dnnl_arg_diff_src_iter_c": [[266, "index-46"]], "dnnl_arg_diff_src_layer": [[266, "index-47"]], "dnnl_arg_diff_weights": [[266, "index-48"]], "dnnl_arg_diff_weights_0": [[266, "index-49"]], "dnnl_arg_diff_weights_1": [[266, "index-50"]], "dnnl_arg_diff_weights_2": [[266, "index-51"]], "dnnl_arg_diff_weights_3": [[266, "index-52"]], "dnnl_arg_diff_weights_iter": [[266, "index-53"]], "dnnl_arg_diff_weights_layer": [[266, "index-54"]], "dnnl_arg_diff_weights_peephole": [[266, "index-55"]], "dnnl_arg_diff_weights_projection": [[266, "index-56"]], "dnnl_arg_dst": [[266, "index-57"]], "dnnl_arg_dst_0": [[266, "index-58"]], "dnnl_arg_dst_1": [[266, "index-59"]], "dnnl_arg_dst_2": [[266, "index-60"]], "dnnl_arg_dst_iter": [[266, "index-61"]], "dnnl_arg_dst_iter_c": [[266, "index-62"]], "dnnl_arg_dst_layer": [[266, "index-63"]], "dnnl_arg_from": [[266, "index-64"]], "dnnl_arg_mean": [[266, "index-65"]], "dnnl_arg_multiple_dst": [[266, "index-66"]], "dnnl_arg_multiple_src": [[266, "index-67"]], "dnnl_arg_scale": [[266, "index-68"]], "dnnl_arg_scratchpad": [[266, "index-69"]], "dnnl_arg_shift": [[266, "index-70"]], "dnnl_arg_src": [[266, "index-71"]], "dnnl_arg_src_0": [[266, "index-72"]], "dnnl_arg_src_1": [[266, "index-73"]], "dnnl_arg_src_2": [[266, "index-74"]], "dnnl_arg_src_3": [[266, "index-75"]], "dnnl_arg_src_iter": [[266, "index-76"]], "dnnl_arg_src_iter_c": [[266, "index-77"]], "dnnl_arg_src_layer": [[266, "index-78"]], "dnnl_arg_to": [[266, "index-79"]], "dnnl_arg_variance": [[266, "index-80"]], "dnnl_arg_weights": [[266, "index-81"]], "dnnl_arg_weights_0": [[266, "index-82"]], "dnnl_arg_weights_1": [[266, "index-83"]], "dnnl_arg_weights_2": [[266, "index-84"]], "dnnl_arg_weights_3": [[266, "index-85"]], "dnnl_arg_weights_iter": [[266, "index-86"]], "dnnl_arg_weights_layer": [[266, "index-87"]], "dnnl_arg_weights_peephole": [[266, "index-88"]], "dnnl_arg_weights_projection": [[266, "index-89"]], "dnnl_arg_workspace": [[266, "index-90"]], "const_dnnl_primitive_desc_t": [[266, "index-2"]], "const_dnnl_primitive_t": [[266, "index-4"]], "dnnl_primitive_create": [[266, "index-15"]], "dnnl_primitive_create_from_cache_blob": [[266, "index-16"]], "dnnl_primitive_desc_clone": [[266, "index-9"]], "dnnl_primitive_desc_destroy": [[266, "index-11"]], "dnnl_primitive_desc_get_attr": [[266, "index-10"]], "dnnl_primitive_desc_next_impl": [[266, "index-8"]], "dnnl_primitive_desc_query": [[266, "index-12"]], "dnnl_primitive_desc_query_md": [[266, "index-13"]], "dnnl_primitive_desc_query_s32": [[266, "index-14"]], "dnnl_primitive_desc_t": [[266, "index-1"]], "dnnl_primitive_destroy": [[266, "index-20"]], "dnnl_primitive_execute": [[266, "index-17"]], "dnnl_primitive_get_cache_blob": [[266, "index-19"]], "dnnl_primitive_get_primitive_desc": [[266, "index-18"]], "dnnl_primitive_t": [[266, "index-3"]], "dnnl_reduction_primitive_desc_create": [[267, "index-1"]], "dnnl_reorder_primitive_desc_create": [[268, "index-1"]], "dnnl_resampling_backward_primitive_desc_create": [[269, "index-2"]], "dnnl_resampling_forward_primitive_desc_create": [[269, "index-1"]], "dnnl_augru_backward_primitive_desc_create": [[270, "index-12"]], "dnnl_augru_forward_primitive_desc_create": [[270, "index-11"]], "dnnl_gru_backward_primitive_desc_create": [[270, "index-8"]], "dnnl_gru_forward_primitive_desc_create": [[270, "index-7"]], "dnnl_lbr_augru_backward_primitive_desc_create": [[270, "index-14"]], "dnnl_lbr_augru_forward_primitive_desc_create": [[270, "index-13"]], "dnnl_lbr_gru_backward_primitive_desc_create": [[270, "index-10"]], "dnnl_lbr_gru_forward_primitive_desc_create": [[270, "index-9"]], "dnnl_lstm_backward_primitive_desc_create": [[270, "index-6"]], "dnnl_lstm_forward_primitive_desc_create": [[270, "index-5"]], "dnnl_vanilla_rnn_backward_primitive_desc_create": [[270, "index-4"]], "dnnl_vanilla_rnn_forward_primitive_desc_create": [[270, "index-3"]], "dnnl_jit_profile_linux_jitdump": [[271, "index-22"]], "dnnl_jit_profile_linux_jitdump_use_tsc": [[271, "index-23"]], "dnnl_jit_profile_linux_perf": [[271, "index-24"]], "dnnl_jit_profile_linux_perfmap": [[271, "index-25"]], "dnnl_jit_profile_none": [[271, "index-26"]], "dnnl_jit_profile_vtune": [[271, "index-27"]], "dnnl_runtime_dpcpp": [[271, "index-28"]], "dnnl_runtime_none": [[271, "index-29"]], "dnnl_runtime_ocl": [[271, "index-30"]], "dnnl_runtime_omp": [[271, "index-31"]], "dnnl_runtime_seq": [[271, "index-32"]], "dnnl_runtime_sycl": [[271, "index-33"]], "dnnl_runtime_tbb": [[271, "index-34"]], "dnnl_runtime_threadpool": [[271, "index-35"]], "service": [[271, "index-0"]], "dnnl_get_cpu_isa_hints": [[271, "index-19"]], "dnnl_get_effective_cpu_isa": [[271, "index-17"]], "dnnl_set_cpu_isa_hints": [[271, "index-18"]], "dnnl_set_jit_dump": [[271, "index-13"]], "dnnl_set_jit_profiling_flags": [[271, "index-14"]], "dnnl_set_jit_profiling_jitdumpdir": [[271, "index-15"]], "dnnl_set_max_cpu_isa": [[271, "index-16"]], "dnnl_set_verbose": [[271, "index-20"]], "dnnl_version": [[271, "index-21"]], "get_cpu_isa_hints": [[271, "index-12"]], "get_default_fpmath_mode": [[271, "index-4"]], "get_effective_cpu_isa": [[271, "index-10"]], "set_cpu_isa_hints": [[271, "index-11"]], "set_default_fpmath_mode": [[271, "index-5"]], "set_jit_dump": [[271, "index-6"]], "set_jit_profiling_flags": [[271, "index-7"]], "set_jit_profiling_jitdumpdir": [[271, "index-8"]], "set_max_cpu_isa": [[271, "index-9"]], "set_verbose": [[271, "index-2"]], "version": [[271, "index-3"]], "version_t": [[271, "index-1"]], "dnnl_shuffle_backward_primitive_desc_create": [[272, "index-2"]], "dnnl_shuffle_forward_primitive_desc_create": [[272, "index-1"]], "dnnl_softmax_backward_primitive_desc_create": [[273, "index-2"]], "dnnl_softmax_forward_primitive_desc_create": [[273, "index-1"]], "stream": [[274, "index-0"], [480, "index-1"], [480, "index-2"]], "const_dnnl_stream_t": [[274, "index-2"]], "dnnl_stream_create": [[274, "index-3"]], "dnnl_stream_destroy": [[274, "index-6"]], "dnnl_stream_get_engine": [[274, "index-4"]], "dnnl_stream_t": [[274, "index-1"]], "dnnl_stream_wait": [[274, "index-5"]], "dnnl_sum_primitive_desc_create": [[275, "index-1"]], "sycl interoperability api": [[276, "index-0"], [291, "index-0"]], "dnnl_sycl_interop_engine_create": [[276, "index-1"]], "dnnl_sycl_interop_engine_get_context": [[276, "index-2"]], "dnnl_sycl_interop_engine_get_device": [[276, "index-3"]], "dnnl_sycl_interop_memory_create": [[276, "index-4"]], "dnnl_sycl_interop_memory_get_memory_kind": [[276, "index-5"]], "dnnl_sycl_interop_memory_set_buffer": [[276, "index-6"]], "dnnl_sycl_interop_primitive_execute": [[276, "index-9"]], "dnnl_sycl_interop_stream_create": [[276, "index-7"]], "dnnl_sycl_interop_stream_get_queue": [[276, "index-8"]], "threadpool interoperability api": [[277, "index-0"]], "dnnl_threadpool_interop_gemm_s8s8s32": [[277, "index-7"]], "dnnl_threadpool_interop_gemm_u8s8s32": [[277, "index-6"]], "dnnl_threadpool_interop_get_max_concurrency": [[277, "index-4"]], "dnnl_threadpool_interop_set_max_concurrency": [[277, "index-3"]], "dnnl_threadpool_interop_sgemm": [[277, "index-5"]], "dnnl_threadpool_interop_stream_create": [[277, "index-1"]], "dnnl_threadpool_interop_stream_get_threadpool": [[277, "index-2"]], "utilities": [[278, "index-0"], [293, "index-0"]], "graph api": [[279, "index-0"]], "const_dnnl_graph_allocator_t": [[280, "index-4"]], "dnnl_graph_allocator_create": [[280, "index-5"]], "dnnl_graph_allocator_destroy": [[280, "index-6"]], "dnnl_graph_allocator_t": [[280, "index-3"]], "dnnl_graph_host_allocate_f": [[280, "index-1"]], "dnnl_graph_host_deallocate_f": [[280, "index-2"]], "compiled partition": [[281, "index-0"]], "const_dnnl_graph_compiled_partition_t": [[281, "index-2"]], "dnnl_graph_compiled_partition_create": [[281, "index-3"]], "dnnl_graph_compiled_partition_destroy": [[281, "index-5"]], "dnnl_graph_compiled_partition_execute": [[281, "index-4"]], "dnnl_graph_compiled_partition_get_inplace_ports": [[281, "index-7"]], "dnnl_graph_compiled_partition_query_logical_tensor": [[281, "index-6"]], "dnnl_graph_compiled_partition_t": [[281, "index-1"]], "compiled partition cache": [[282, "index-0"]], "dnnl_graph_get_compiled_partition_cache_capacity": [[282, "index-3"]], "dnnl_graph_set_compiled_partition_cache_capacity": [[282, "index-4"]], "get_compiled_partition_cache_capacity": [[282, "index-1"]], "set_compiled_partition_cache_capacity": [[282, "index-2"]], "constant tensor cache": [[283, "index-0"]], "dnnl_graph_get_constant_tensor_cache": [[283, "index-4"]], "dnnl_graph_set_constant_tensor_cache": [[283, "index-3"]], "get_constant_tensor_cache": [[283, "index-2"]], "set_constant_tensor_cache": [[283, "index-1"]], "dnnl_graph_make_engine_with_allocator": [[284, "index-2"]], "make_engine_with_allocator": [[284, "index-1"]], "const_dnnl_graph_graph_t": [[285, "index-2"]], "dnnl_graph_add_op": [[285, "index-6"]], "dnnl_graph_graph_create": [[285, "index-3"]], "dnnl_graph_graph_create_with_fpmath_mode": [[285, "index-4"]], "dnnl_graph_graph_destroy": [[285, "index-5"]], "dnnl_graph_graph_filter": [[285, "index-9"]], "dnnl_graph_graph_finalize": [[285, "index-7"]], "dnnl_graph_graph_get_partition_num": [[285, "index-10"]], "dnnl_graph_graph_get_partitions": [[285, "index-11"]], "dnnl_graph_graph_is_finalized": [[285, "index-8"]], "dnnl_graph_graph_t": [[285, "index-1"]], "dnnl_graph_unknown_dim": [[287, "index-6"]], "dnnl_graph_unknown_ndims": [[287, "index-7"]], "logical tensor": [[287, "index-0"]], "dnnl_graph_logical_tensor_get_mem_size": [[287, "index-4"]], "dnnl_graph_logical_tensor_init": [[287, "index-1"]], "dnnl_graph_logical_tensor_init_with_dims": [[287, "index-2"]], "dnnl_graph_logical_tensor_init_with_strides": [[287, "index-3"]], "dnnl_graph_logical_tensor_is_equal": [[287, "index-5"]], "const_dnnl_graph_op_t": [[288, "index-2"]], "dnnl_graph_op_add_input": [[288, "index-5"]], "dnnl_graph_op_add_output": [[288, "index-6"]], "dnnl_graph_op_create": [[288, "index-3"]], "dnnl_graph_op_destroy": [[288, "index-4"]], "dnnl_graph_op_get_id": [[288, "index-11"]], "dnnl_graph_op_get_kind": [[288, "index-12"]], "dnnl_graph_op_set_attr_bool": [[288, "index-8"]], "dnnl_graph_op_set_attr_f32": [[288, "index-7"]], "dnnl_graph_op_set_attr_s64": [[288, "index-9"]], "dnnl_graph_op_set_attr_str": [[288, "index-10"]], "dnnl_graph_op_t": [[288, "index-1"]], "const_dnnl_graph_partition_t": [[289, "index-2"]], "dnnl_graph_partition_compile": [[289, "index-8"]], "dnnl_graph_partition_create_with_op": [[289, "index-3"]], "dnnl_graph_partition_destroy": [[289, "index-4"]], "dnnl_graph_partition_get_engine_kind": [[289, "index-14"]], "dnnl_graph_partition_get_id": [[289, "index-7"]], "dnnl_graph_partition_get_input_ports": [[289, "index-10"]], "dnnl_graph_partition_get_input_ports_num": [[289, "index-9"]], "dnnl_graph_partition_get_op_num": [[289, "index-5"]], "dnnl_graph_partition_get_ops": [[289, "index-6"]], "dnnl_graph_partition_get_output_ports": [[289, "index-12"]], "dnnl_graph_partition_get_output_ports_num": [[289, "index-11"]], "dnnl_graph_partition_is_supported": [[289, "index-13"]], "dnnl_graph_partition_t": [[289, "index-1"]], "dnnl_graph_sycl_allocate_f": [[291, "index-1"]], "dnnl_graph_sycl_deallocate_f": [[291, "index-2"]], "dnnl_graph_sycl_interop_allocator_create": [[291, "index-3"]], "dnnl_graph_sycl_interop_compiled_partition_execute": [[291, "index-5"]], "dnnl_graph_sycl_interop_make_engine_with_allocator": [[291, "index-4"]], "const_dnnl_graph_tensor_t": [[292, "index-2"]], "dnnl_graph_tensor_create": [[292, "index-3"]], "dnnl_graph_tensor_destroy": [[292, "index-4"]], "dnnl_graph_tensor_get_data_handle": [[292, "index-5"]], "dnnl_graph_tensor_get_engine": [[292, "index-7"]], "dnnl_graph_tensor_set_data_handle": [[292, "index-6"]], "dnnl_graph_tensor_t": [[292, "index-1"]], "dnnl": [[296, "index-0"]], "dnnl::graph": [[297, "index-0"]], "dnnl::graph::sycl_interop": [[298, "index-0"]], "make_allocator": [[298, "index-1"]], "dnnl::ocl_interop": [[299, "index-0"]], "get_command_queue": [[299, "index-9"]], "get_context": [[299, "index-6"], [300, "index-3"]], "get_device": [[299, "index-7"], [300, "index-4"]], "get_engine_cache_blob": [[299, "index-3"]], "get_engine_cache_blob_id": [[299, "index-2"]], "get_mem_object": [[299, "index-10"]], "get_memory_kind": [[299, "index-12"], [300, "index-9"]], "make_engine": [[299, "index-4"], [299, "index-5"], [300, "index-2"]], "make_memory": [[299, "index-13"], [299, "index-14"], [300, "index-10"], [300, "index-11"]], "make_stream": [[299, "index-8"], [300, "index-5"], [301, "index-1"]], "set_mem_object": [[299, "index-11"]], "dnnl::sycl_interop": [[300, "index-0"]], "get_buffer": [[300, "index-7"]], "get_queue": [[300, "index-6"]], "set_buffer": [[300, "index-8"]], "dnnl::threadpool_interop": [[301, "index-0"]], "get_threadpool": [[301, "index-2"]], "oneapi": [[302, "index-0"]], "std": [[303, "index-0"]], "sycl": [[304, "index-0"]], "augru rnn primitive example": [[306, "index-0"]], "batch normalization primitive example": [[308, "index-0"]], "binary primitive example": [[310, "index-0"]], "bnorm u8 by binary post-ops example": [[312, "index-0"]], "cnn f32 inference example": [[314, "index-0"], [315, "index-0"]], "cnn int8 inference example": [[316, "index-0"]], "cnn bf16 training example": [[317, "index-0"]], "cnn f32 training example": [[318, "index-0"], [323, "index-0"]], "concat primitive example": [[319, "index-0"]], "convolution primitive example": [[321, "index-0"]], "matmul tutorial: quantization": [[324, "index-0"]], "rnn f32 inference example": [[326, "index-0"]], "rnn int8 inference example": [[327, "index-0"]], "matmul tutorial: comparison with sgemm": [[328, "index-0"]], "reorder between cpu and gpu engines": [[330, "index-0"], [331, "index-0"]], "element-wise primitive example": [[332, "index-0"]], "getting started": [[334, "index-0"]], "getting started on gpu with opencl extensions api": [[335, "index-0"]], "matmul tutorial: int8 inference": [[336, "index-0"]], "inner product primitive example": [[338, "index-0"]], "layer normalization primitive example": [[340, "index-0"]], "legal information": [[342, "index-0"]], "local response normalization primitive example": [[343, "index-0"]], "lstm rnn primitive example": [[345, "index-0"]], "matmul primitive example": [[347, "index-0"]], "memory format propagation": [[349, "index-0"]], "performance profiling example": [[350, "index-0"]], "pooling primitive example": [[351, "index-0"]], "primitive example": [[353, "index-0"]], "reduction primitive example": [[355, "index-0"]], "reorder primitive example": [[357, "index-0"]], "resampling primitive example": [[359, "index-0"]], "rnn f32 training example": [[361, "index-0"]], "shuffle primitive example": [[362, "index-0"]], "softmax primitive example": [[364, "index-0"]], "sum primitive example": [[366, "index-0"]], "getting started on both cpu and gpu with sycl extensions api": [[368, "index-0"]], "todo list": [[369, "index-0"]], "args_t": [[372, "index-0"]], "struct": [[372, "index-0"], [373, "index-0"], [374, "index-0"], [375, "index-0"], [376, "index-0"], [377, "index-0"], [378, "index-0"], [379, "index-0"], [380, "index-0"], [381, "index-0"], [382, "index-0"], [383, "index-0"], [384, "index-0"], [385, "index-0"], [386, "index-0"], [387, "index-0"], [388, "index-0"], [389, "index-0"], [390, "index-0"], [391, "index-0"], [392, "index-0"], [393, "index-0"], [394, "index-0"], [395, "index-0"], [396, "index-0"], [397, "index-0"], [398, "index-0"], [399, "index-0"], [400, "index-0"], [401, "index-0"], [402, "index-0"], [403, "index-0"], [404, "index-0"], [405, "index-0"], [406, "index-0"], [407, "index-0"], [408, "index-0"], [409, "index-0"], [410, "index-0"], [411, "index-0"], [412, "index-0"], [413, "index-0"], [414, "index-0"], [415, "index-0"], [416, "index-0"], [417, "index-0"], [418, "index-0"], [419, "index-0"], [420, "index-0"], [421, "index-0"], [422, "index-0"], [423, "index-0"], [424, "index-0"], [425, "index-0"], [426, "index-0"], [427, "index-0"], [428, "index-0"], [429, "index-0"], [430, "index-0"], [431, "index-0"], [432, "index-0"], [433, "index-0"], [434, "index-0"], [435, "index-0"], [436, "index-0"], [437, "index-0"], [438, "index-0"], [439, "index-0"], [440, "index-0"], [441, "index-0"], [442, "index-0"], [443, "index-0"], [444, "index-0"], [445, "index-0"], [446, "index-0"], [447, "index-0"], [448, "index-0"], [449, "index-0"], [450, "index-0"], [451, "index-0"], [452, "index-0"], [453, "index-0"], [454, "index-0"], [455, "index-0"], [456, "index-0"], [457, "index-0"], [458, "index-0"], [459, "index-0"], [460, "index-0"], [461, "index-0"], [462, "index-0"], [463, "index-0"], [464, "index-0"], [465, "index-0"], [466, "index-0"], [467, "index-0"], [468, "index-0"], [469, "index-0"], [470, "index-0"], [471, "index-0"], [472, "index-0"], [473, "index-0"], [474, "index-0"], [475, "index-0"], [476, "index-0"], [477, "index-0"], [478, "index-0"], [479, "index-0"], [480, "index-0"], [481, "index-0"], [482, "index-0"], [483, "index-0"], [484, "index-0"], [485, "index-0"], [486, "index-0"], [487, "index-0"], [488, "index-0"], [489, "index-0"], [490, "index-0"]], "augru_backward": [[373, "index-1"], [373, "index-2"], [373, "index-3"]], "dnnl::augru_backward": [[373, "index-0"]], "attention_desc": [[374, "index-6"], [376, "index-6"], [424, "index-6"], [426, "index-6"]], "bias_desc": [[374, "index-9"], [376, "index-9"], [390, "index-10"], [396, "index-10"], [408, "index-8"], [410, "index-8"], [418, "index-8"], [424, "index-9"], [426, "index-9"], [428, "index-8"], [430, "index-8"], [436, "index-13"], [438, "index-13"], [440, "index-7"], [470, "index-11"], [485, "index-9"], [487, "index-9"]], "diff_attention_desc": [[374, "index-15"], [424, "index-15"]], "diff_bias_desc": [[374, "index-18"], [388, "index-10"], [394, "index-10"], [408, "index-16"], [416, "index-8"], [424, "index-18"], [428, "index-16"], [436, "index-25"], [470, "index-23"], [485, "index-17"]], "diff_dst_iter_desc": [[374, "index-20"], [408, "index-18"], [424, "index-20"], [428, "index-18"], [436, "index-27"], [470, "index-25"], [485, "index-19"]], "diff_dst_layer_desc": [[374, "index-19"], [408, "index-17"], [424, "index-19"], [428, "index-17"], [436, "index-26"], [470, "index-24"], [485, "index-18"]], "diff_src_iter_desc": [[374, "index-14"], [408, "index-13"], [424, "index-14"], [428, "index-13"], [436, "index-19"], [470, "index-17"], [485, "index-14"]], "diff_src_layer_desc": [[374, "index-13"], [408, "index-12"], [424, "index-13"], [428, "index-12"], [436, "index-18"], [470, "index-15"], [485, "index-13"]], "diff_weights_iter_desc": [[374, "index-17"], [408, "index-15"], [424, "index-17"], [428, "index-15"], [436, "index-22"], [470, "index-20"], [485, "index-16"]], "diff_weights_layer_desc": [[374, "index-16"], [408, "index-14"], [424, "index-16"], [428, "index-14"], [436, "index-21"], [470, "index-19"], [485, "index-15"]], "dnnl::augru_backward::primitive_desc": [[374, "index-0"]], "dst_iter_desc": [[374, "index-11"], [376, "index-11"], [408, "index-10"], [410, "index-10"], [424, "index-11"], [426, "index-11"], [428, "index-10"], [430, "index-10"], [436, "index-15"], [438, "index-15"], [470, "index-13"], [485, "index-11"], [487, "index-11"]], "dst_layer_desc": [[374, "index-10"], [376, "index-10"], [408, "index-9"], [410, "index-9"], [424, "index-10"], [426, "index-10"], [428, "index-9"], [430, "index-9"], [436, "index-14"], [438, "index-14"], [470, "index-12"], [485, "index-10"], [487, "index-10"]], "get_cell_kind": [[374, "index-21"], [376, "index-13"], [408, "index-19"], [410, "index-12"], [424, "index-21"], [426, "index-13"], [428, "index-19"], [430, "index-12"], [436, "index-29"], [438, "index-18"], [461, "index-18"], [485, "index-20"], [487, "index-13"]], "get_direction": [[374, "index-23"], [376, "index-15"], [408, "index-21"], [410, "index-14"], [424, "index-23"], [426, "index-15"], [428, "index-21"], [430, "index-14"], [436, "index-31"], [438, "index-20"], [461, "index-19"], [485, "index-23"], [487, "index-16"]], "get_prop_kind": [[374, "index-22"], [376, "index-14"], [378, "index-13"], [380, "index-10"], [386, "index-9"], [388, "index-12"], [390, "index-12"], [392, "index-9"], [394, "index-12"], [396, "index-12"], [398, "index-10"], [400, "index-9"], [408, "index-20"], [410, "index-13"], [414, "index-7"], [416, "index-9"], [418, "index-9"], [420, "index-14"], [422, "index-11"], [424, "index-22"], [426, "index-14"], [428, "index-20"], [430, "index-13"], [432, "index-8"], [434, "index-8"], [436, "index-30"], [438, "index-19"], [446, "index-8"], [448, "index-8"], [452, "index-7"], [454, "index-6"], [461, "index-23"], [472, "index-6"], [474, "index-6"], [476, "index-8"], [478, "index-7"], [485, "index-21"], [487, "index-14"]], "primitive_desc": [[374, "index-1"], [374, "index-2"], [374, "index-3"], [376, "index-1"], [376, "index-2"], [376, "index-3"], [378, "index-1"], [378, "index-2"], [378, "index-3"], [380, "index-1"], [380, "index-2"], [380, "index-3"], [382, "index-1"], [382, "index-2"], [382, "index-3"], [384, "index-1"], [384, "index-2"], [384, "index-3"], [384, "index-4"], [386, "index-1"], [386, "index-2"], [386, "index-3"], [386, "index-4"], [388, "index-1"], [388, "index-2"], [388, "index-3"], [388, "index-4"], [388, "index-5"], [388, "index-6"], [390, "index-1"], [390, "index-2"], [390, "index-3"], [390, "index-4"], [390, "index-5"], [390, "index-6"], [392, "index-1"], [392, "index-2"], [392, "index-3"], [392, "index-4"], [394, "index-1"], [394, "index-2"], [394, "index-3"], [394, "index-4"], [394, "index-5"], [394, "index-6"], [396, "index-1"], [396, "index-2"], [396, "index-3"], [396, "index-4"], [396, "index-5"], [396, "index-6"], [398, "index-1"], [398, "index-2"], [398, "index-3"], [398, "index-4"], [398, "index-5"], [400, "index-1"], [400, "index-2"], [400, "index-3"], [400, "index-4"], [400, "index-5"], [408, "index-1"], [408, "index-2"], [408, "index-3"], [410, "index-1"], [410, "index-2"], [410, "index-3"], [414, "index-1"], [414, "index-2"], [414, "index-3"], [416, "index-1"], [416, "index-2"], [416, "index-3"], [416, "index-4"], [418, "index-1"], [418, "index-2"], [418, "index-3"], [418, "index-4"], [420, "index-1"], [420, "index-2"], [420, "index-3"], [420, "index-4"], [422, "index-1"], [422, "index-2"], [422, "index-3"], [422, "index-4"], [424, "index-1"], [424, "index-2"], [424, "index-3"], [426, "index-1"], [426, "index-2"], [426, "index-3"], [428, "index-1"], [428, "index-2"], [428, "index-3"], [430, "index-1"], [430, "index-2"], [430, "index-3"], [432, "index-1"], [432, "index-2"], [432, "index-3"], [434, "index-1"], [434, "index-2"], [434, "index-3"], [436, "index-1"], [436, "index-2"], [436, "index-3"], [436, "index-4"], [436, "index-5"], [438, "index-1"], [438, "index-2"], [438, "index-3"], [438, "index-4"], [438, "index-5"], [440, "index-1"], [440, "index-2"], [440, "index-3"], [440, "index-4"], [446, "index-1"], [446, "index-2"], [446, "index-3"], [448, "index-1"], [448, "index-2"], [448, "index-3"], [452, "index-1"], [452, "index-2"], [452, "index-3"], [454, "index-1"], [454, "index-2"], [454, "index-3"], [463, "index-1"], [463, "index-2"], [463, "index-3"], [465, "index-1"], [465, "index-2"], [465, "index-3"], [465, "index-4"], [467, "index-1"], [467, "index-2"], [467, "index-3"], [467, "index-4"], [469, "index-1"], [469, "index-2"], [469, "index-3"], [469, "index-4"], [469, "index-5"], [472, "index-1"], [472, "index-2"], [472, "index-3"], [474, "index-1"], [474, "index-2"], [474, "index-3"], [476, "index-1"], [476, "index-2"], [476, "index-3"], [478, "index-1"], [478, "index-2"], [478, "index-3"], [482, "index-1"], [482, "index-2"], [482, "index-3"], [482, "index-4"], [485, "index-1"], [485, "index-2"], [485, "index-3"], [485, "index-4"], [487, "index-1"], [487, "index-2"], [487, "index-3"], [487, "index-4"]], "src_iter_desc": [[374, "index-5"], [376, "index-5"], [408, "index-5"], [410, "index-5"], [424, "index-5"], [426, "index-5"], [428, "index-5"], [430, "index-5"], [436, "index-7"], [438, "index-7"], [470, "index-5"], [485, "index-6"], [487, "index-6"]], "src_layer_desc": [[374, "index-4"], [376, "index-4"], [408, "index-4"], [410, "index-4"], [424, "index-4"], [426, "index-4"], [428, "index-4"], [430, "index-4"], [436, "index-6"], [438, "index-6"], [470, "index-3"], [485, "index-5"], [487, "index-5"]], "weights_iter_desc": [[374, "index-8"], [376, "index-8"], [408, "index-7"], [410, "index-7"], [424, "index-8"], [426, "index-8"], [428, "index-7"], [430, "index-7"], [436, "index-10"], [438, "index-10"], [470, "index-8"], [485, "index-8"], [487, "index-8"]], "weights_layer_desc": [[374, "index-7"], [376, "index-7"], [408, "index-6"], [410, "index-6"], [424, "index-7"], [426, "index-7"], [428, "index-6"], [430, "index-6"], [436, "index-9"], [438, "index-9"], [470, "index-7"], [485, "index-7"], [487, "index-7"]], "workspace_desc": [[374, "index-12"], [376, "index-12"], [378, "index-12"], [380, "index-7"], [408, "index-11"], [410, "index-11"], [420, "index-13"], [422, "index-8"], [424, "index-12"], [426, "index-12"], [428, "index-11"], [430, "index-11"], [432, "index-6"], [434, "index-6"], [436, "index-17"], [438, "index-17"], [446, "index-6"], [448, "index-6"], [461, "index-37"], [485, "index-12"], [487, "index-12"]], "augru_forward": [[375, "index-1"], [375, "index-2"], [375, "index-3"]], "dnnl::augru_forward": [[375, "index-0"]], "dnnl::augru_forward::primitive_desc": [[376, "index-0"]], "batch_normalization_backward": [[377, "index-1"], [377, "index-2"], [377, "index-3"]], "dnnl::batch_normalization_backward": [[377, "index-0"]], "diff_dst_desc": [[378, "index-8"], [386, "index-7"], [388, "index-9"], [392, "index-7"], [394, "index-9"], [398, "index-8"], [414, "index-6"], [416, "index-7"], [420, "index-9"], [432, "index-5"], [446, "index-5"], [452, "index-6"], [461, "index-29"], [461, "index-35"], [467, "index-6"], [472, "index-5"], [476, "index-6"]], "diff_src_desc": [[378, "index-7"], [386, "index-5"], [392, "index-5"], [398, "index-7"], [414, "index-4"], [420, "index-8"], [432, "index-4"], [446, "index-4"], [452, "index-5"], [461, "index-28"], [461, "index-34"], [467, "index-5"], [472, "index-4"], [476, "index-5"]], "diff_weights_desc": [[378, "index-9"], [388, "index-8"], [394, "index-8"], [416, "index-6"], [420, "index-10"], [461, "index-30"], [461, "index-36"]], "dnnl::batch_normalization_backward::primitive_desc": [[378, "index-0"]], "dst_desc": [[378, "index-6"], [380, "index-5"], [382, "index-7"], [384, "index-6"], [390, "index-9"], [396, "index-9"], [400, "index-7"], [418, "index-7"], [420, "index-7"], [422, "index-6"], [434, "index-5"], [440, "index-8"], [448, "index-5"], [454, "index-5"], [461, "index-26"], [461, "index-32"], [463, "index-5"], [465, "index-8"], [469, "index-7"], [474, "index-5"], [476, "index-4"], [478, "index-5"], [482, "index-6"]], "get_epsilon": [[378, "index-14"], [380, "index-11"], [420, "index-15"], [422, "index-12"], [461, "index-8"], [463, "index-7"]], "get_flags": [[378, "index-15"], [380, "index-12"], [420, "index-16"], [422, "index-13"], [461, "index-9"], [483, "index-5"]], "mean_desc": [[378, "index-10"], [380, "index-8"], [420, "index-11"], [422, "index-9"]], "src_desc": [[378, "index-4"], [380, "index-4"], [382, "index-4"], [384, "index-5"], [388, "index-7"], [390, "index-7"], [394, "index-7"], [396, "index-7"], [398, "index-6"], [400, "index-6"], [416, "index-5"], [418, "index-5"], [420, "index-5"], [422, "index-5"], [434, "index-4"], [440, "index-5"], [448, "index-4"], [452, "index-4"], [454, "index-4"], [461, "index-25"], [461, "index-31"], [463, "index-4"], [465, "index-7"], [469, "index-6"], [474, "index-4"], [478, "index-4"], [482, "index-5"]], "variance_desc": [[378, "index-11"], [380, "index-9"], [420, "index-12"], [422, "index-10"]], "weights_desc": [[378, "index-5"], [380, "index-6"], [386, "index-6"], [390, "index-8"], [392, "index-6"], [396, "index-8"], [414, "index-5"], [418, "index-6"], [420, "index-6"], [422, "index-7"], [440, "index-6"], [461, "index-27"], [461, "index-33"]], "batch_normalization_forward": [[379, "index-1"], [379, "index-2"], [379, "index-3"]], "dnnl::batch_normalization_forward": [[379, "index-0"]], "dnnl::batch_normalization_forward::primitive_desc": [[380, "index-0"]], "dnnl::binary": [[381, "index-0"]], "dnnl::binary::primitive_desc": [[382, "index-0"]], "get_algorithm": [[382, "index-8"], [386, "index-8"], [388, "index-11"], [390, "index-11"], [392, "index-8"], [394, "index-11"], [396, "index-11"], [398, "index-9"], [400, "index-8"], [432, "index-7"], [434, "index-7"], [446, "index-7"], [448, "index-7"], [461, "index-10"], [463, "index-8"], [476, "index-7"], [478, "index-6"]], "src0_desc": [[382, "index-5"]], "src1_desc": [[382, "index-6"]], "dnnl::concat": [[383, "index-0"]], "dnnl::concat::primitive_desc": [[384, "index-0"]], "primitive_desc_base": [[384, "index-10"], [384, "index-7"], [384, "index-8"], [384, "index-9"], [460, "index-2"], [460, "index-3"], [460, "index-4"], [460, "index-5"], [465, "index-10"], [465, "index-11"], [465, "index-12"], [465, "index-9"], [482, "index-10"], [482, "index-7"], [482, "index-8"], [482, "index-9"]], "convolution_backward_data": [[385, "index-1"], [385, "index-2"], [385, "index-3"]], "dnnl::convolution_backward_data": [[385, "index-0"]], "dnnl::convolution_backward_data::primitive_desc": [[386, "index-0"]], "get_dilations": [[386, "index-11"], [388, "index-14"], [390, "index-14"], [392, "index-11"], [394, "index-14"], [396, "index-14"], [446, "index-11"], [448, "index-11"], [461, "index-5"]], "get_padding_l": [[386, "index-12"], [388, "index-15"], [390, "index-15"], [392, "index-12"], [394, "index-15"], [396, "index-15"], [446, "index-12"], [448, "index-12"], [461, "index-6"]], "get_padding_r": [[386, "index-13"], [388, "index-16"], [390, "index-16"], [392, "index-13"], [394, "index-16"], [396, "index-16"], [446, "index-13"], [448, "index-13"], [461, "index-7"]], "convolution_backward_weights": [[387, "index-1"], [387, "index-2"], [387, "index-3"]], "dnnl::convolution_backward_weights": [[387, "index-0"]], "dnnl::convolution_backward_weights::primitive_desc": [[388, "index-0"]], "convolution_forward": [[389, "index-1"], [389, "index-2"], [389, "index-3"]], "dnnl::convolution_forward": [[389, "index-0"]], "dnnl::convolution_forward::primitive_desc": [[390, "index-0"]], "deconvolution_backward_data": [[391, "index-1"], [391, "index-2"], [391, "index-3"]], "dnnl::deconvolution_backward_data": [[391, "index-0"]], "dnnl::deconvolution_backward_data::primitive_desc": [[392, "index-0"]], "deconvolution_backward_weights": [[393, "index-1"], [393, "index-2"], [393, "index-3"]], "dnnl::deconvolution_backward_weights": [[393, "index-0"]], "dnnl::deconvolution_backward_weights::primitive_desc": [[394, "index-0"]], "deconvolution_forward": [[395, "index-1"], [395, "index-2"], [395, "index-3"]], "dnnl::deconvolution_forward": [[395, "index-0"]], "dnnl::deconvolution_forward::primitive_desc": [[396, "index-0"]], "dnnl::eltwise_backward": [[397, "index-0"]], "eltwise_backward": [[397, "index-1"], [397, "index-2"], [397, "index-3"]], "dnnl::eltwise_backward::primitive_desc": [[398, "index-0"]], "get_alpha": [[398, "index-11"], [400, "index-10"], [432, "index-9"], [434, "index-9"], [461, "index-11"], [485, "index-24"], [487, "index-17"]], "get_beta": [[398, "index-12"], [400, "index-11"], [432, "index-10"], [434, "index-10"], [461, "index-12"], [485, "index-25"], [487, "index-18"]], "dnnl::eltwise_forward": [[399, "index-0"]], "eltwise_forward": [[399, "index-1"], [399, "index-2"], [399, "index-3"]], "dnnl::eltwise_forward::primitive_desc": [[400, "index-0"]], "dnnl_engine": [[401, "index-0"]], "dnnl::engine": [[402, "index-0"]], "get_count": [[402, "index-8"]], "get_kind": [[402, "index-3"], [456, "index-7"], [461, "index-41"]], "handle": [[402, "index-4"], [402, "index-5"], [402, "index-6"], [402, "index-7"], [411, "index-1"], [411, "index-2"], [411, "index-3"], [411, "index-4"], [442, "index-15"], [442, "index-16"], [442, "index-17"], [442, "index-18"], [456, "index-10"], [456, "index-11"], [456, "index-12"], [456, "index-13"], [480, "index-5"], [480, "index-6"], [480, "index-7"], [480, "index-8"]], "dnnl::error": [[403, "index-0"]], "error": [[403, "index-1"]], "what": [[403, "index-2"]], "wrap_c_api": [[403, "index-3"]], "arg": [[404, "index-1"]], "dnnl_exec_arg_t": [[404, "index-0"]], "dnnl_graph_inplace_pair_t": [[405, "index-0"]], "input_id": [[405, "index-1"]], "output_id": [[405, "index-2"]], "dnnl_graph_logical_tensor_t": [[406, "index-0"]], "id": [[406, "index-1"]], "layout_id": [[406, "index-8"]], "ndims": [[406, "index-2"]], "property": [[406, "index-5"]], "dnnl::gru_backward": [[407, "index-0"]], "gru_backward": [[407, "index-1"], [407, "index-2"], [407, "index-3"]], "dnnl::gru_backward::primitive_desc": [[408, "index-0"]], "dnnl::gru_forward": [[409, "index-0"]], "gru_forward": [[409, "index-1"], [409, "index-2"], [409, "index-3"]], "dnnl::gru_forward::primitive_desc": [[410, "index-0"]], "dnnl::handle": [[411, "index-0"]], "get": [[411, "index-8"]], "operator t": [[411, "index-9"]], "operator bool": [[411, "index-10"]], "operator!=": [[411, "index-12"], [444, "index-25"]], "operator==": [[411, "index-11"], [444, "index-24"]], "reset": [[411, "index-7"]], "dnnl::handle_traits": [[412, "index-0"]], "dnnl::inner_product_backward_data": [[413, "index-0"]], "inner_product_backward_data": [[413, "index-1"], [413, "index-2"], [413, "index-3"]], "dnnl::inner_product_backward_data::primitive_desc": [[414, "index-0"]], "dnnl::inner_product_backward_weights": [[415, "index-0"]], "inner_product_backward_weights": [[415, "index-1"], [415, "index-2"], [415, "index-3"]], "dnnl::inner_product_backward_weights::primitive_desc": [[416, "index-0"]], "dnnl::inner_product_forward": [[417, "index-0"]], "inner_product_forward": [[417, "index-1"], [417, "index-2"], [417, "index-3"]], "dnnl::inner_product_forward::primitive_desc": [[418, "index-0"]], "dnnl::layer_normalization_backward": [[419, "index-0"]], "layer_normalization_backward": [[419, "index-1"], [419, "index-2"], [419, "index-3"]], "dnnl::layer_normalization_backward::primitive_desc": [[420, "index-0"]], "dnnl::layer_normalization_forward": [[421, "index-0"]], "layer_normalization_forward": [[421, "index-1"], [421, "index-2"], [421, "index-3"]], "dnnl::layer_normalization_forward::primitive_desc": [[422, "index-0"]], "dnnl::lbr_augru_backward": [[423, "index-0"]], "lbr_augru_backward": [[423, "index-1"], [423, "index-2"], [423, "index-3"]], "dnnl::lbr_augru_backward::primitive_desc": [[424, "index-0"]], "dnnl::lbr_augru_forward": [[425, "index-0"]], "lbr_augru_forward": [[425, "index-1"], [425, "index-2"], [425, "index-3"]], "dnnl::lbr_augru_forward::primitive_desc": [[426, "index-0"]], "dnnl::lbr_gru_backward": [[427, "index-0"]], "lbr_gru_backward": [[427, "index-1"], [427, "index-2"], [427, "index-3"]], "dnnl::lbr_gru_backward::primitive_desc": [[428, "index-0"]], "dnnl::lbr_gru_forward": [[429, "index-0"]], "lbr_gru_forward": [[429, "index-1"], [429, "index-2"], [429, "index-3"]], "dnnl::lbr_gru_forward::primitive_desc": [[430, "index-0"]], "dnnl::lrn_backward": [[431, "index-0"]], "lrn_backward": [[431, "index-1"], [431, "index-2"], [431, "index-3"]], "dnnl::lrn_backward::primitive_desc": [[432, "index-0"]], "get_k": [[432, "index-12"], [434, "index-12"], [461, "index-15"]], "get_local_size": [[432, "index-11"], [434, "index-11"], [461, "index-14"]], "dnnl::lrn_forward": [[433, "index-0"]], "lrn_forward": [[433, "index-1"], [433, "index-2"], [433, "index-3"]], "dnnl::lrn_forward::primitive_desc": [[434, "index-0"]], "dnnl::lstm_backward": [[435, "index-0"]], "lstm_backward": [[435, "index-1"], [435, "index-2"], [435, "index-3"]], "diff_dst_iter_c_desc": [[436, "index-28"], [470, "index-26"]], "diff_src_iter_c_desc": [[436, "index-20"], [470, "index-18"]], "diff_weights_peephole_desc": [[436, "index-23"], [470, "index-21"]], "diff_weights_projection_desc": [[436, "index-24"], [470, "index-22"]], "dnnl::lstm_backward::primitive_desc": [[436, "index-0"]], "dst_iter_c_desc": [[436, "index-16"], [438, "index-16"], [470, "index-14"]], "src_iter_c_desc": [[436, "index-8"], [438, "index-8"], [470, "index-6"]], "weights_peephole_desc": [[436, "index-11"], [438, "index-11"], [470, "index-9"]], "weights_projection_desc": [[436, "index-12"], [438, "index-12"], [470, "index-10"]], "dnnl::lstm_forward": [[437, "index-0"]], "lstm_forward": [[437, "index-1"], [437, "index-2"], [437, "index-3"]], "dnnl::lstm_forward::primitive_desc": [[438, "index-0"]], "dnnl::matmul": [[439, "index-0"]], "dnnl::matmul::primitive_desc": [[440, "index-0"]], "dnnl_memory": [[441, "index-0"]], "data_type_size": [[442, "index-8"]], "dnnl::memory": [[442, "index-0"]], "get_desc": [[442, "index-9"]], "map_data": [[442, "index-13"]], "unmap_data": [[442, "index-14"]], "validate_dims": [[442, "index-7"]], "dnnl_memory_desc": [[443, "index-0"]], "desc": [[444, "index-1"], [444, "index-2"], [444, "index-3"], [444, "index-4"]], "dnnl::memory::desc": [[444, "index-0"]], "get_format_kind": [[444, "index-20"]], "get_inner_blks": [[444, "index-14"]], "get_inner_idxs": [[444, "index-15"]], "get_inner_nblks": [[444, "index-13"]], "get_ndims": [[444, "index-8"]], "get_nnz": [[444, "index-17"]], "get_num_handles": [[444, "index-16"]], "get_padded_dims": [[444, "index-9"]], "get_padded_offsets": [[444, "index-10"]], "get_size": [[444, "index-22"]], "get_sparse_encoding": [[444, "index-18"]], "get_submemory_offset": [[444, "index-11"]], "is_zero": [[444, "index-23"]], "permute_axes": [[444, "index-7"]], "reshape": [[444, "index-6"]], "submemory_desc": [[444, "index-5"]], "dnnl::pooling_backward": [[445, "index-0"]], "pooling_backward": [[445, "index-1"], [445, "index-2"], [445, "index-3"]], "dnnl::pooling_backward::primitive_desc": [[446, "index-0"]], "get_kernel": [[446, "index-10"], [448, "index-10"], [461, "index-21"]], "dnnl::pooling_forward": [[447, "index-0"]], "pooling_forward": [[447, "index-1"], [447, "index-2"], [447, "index-3"]], "dnnl::pooling_forward::primitive_desc": [[448, "index-0"]], "dnnl_post_ops": [[449, "index-0"]], "append_binary": [[450, "index-13"]], "append_dw": [[450, "index-11"]], "append_eltwise": [[450, "index-9"]], "append_prelu": [[450, "index-15"]], "append_sum": [[450, "index-5"]], "dnnl::post_ops": [[450, "index-0"]], "get_params_binary": [[450, "index-14"]], "get_params_dw": [[450, "index-12"]], "get_params_eltwise": [[450, "index-10"]], "get_params_prelu": [[450, "index-16"]], "get_params_sum": [[450, "index-6"], [450, "index-7"], [450, "index-8"]], "len": [[450, "index-3"]], "post_ops": [[450, "index-1"], [450, "index-2"]], "dnnl::prelu_backward": [[451, "index-0"]], "prelu_backward": [[451, "index-1"], [451, "index-2"], [451, "index-3"]], "dnnl::prelu_backward::primitive_desc": [[452, "index-0"]], "dnnl::prelu_forward": [[453, "index-0"]], "prelu_forward": [[453, "index-1"], [453, "index-2"], [453, "index-3"]], "dnnl::prelu_forward::primitive_desc": [[454, "index-0"]], "dnnl_primitive": [[455, "index-0"]], "dnnl::primitive": [[456, "index-0"]], "get_cache_blob": [[456, "index-8"]], "get_primitive_desc": [[456, "index-6"]], "primitive": [[456, "index-1"], [456, "index-2"], [456, "index-3"], [456, "index-4"], [456, "index-5"]], "dnnl_primitive_attr": [[457, "index-0"]], "dnnl::primitive_attr": [[458, "index-0"]], "get_fpmath_mode": [[458, "index-3"]], "get_post_ops": [[458, "index-9"]], "get_rnn_data_qparams": [[458, "index-12"]], "get_rnn_weights_projection_qparams": [[458, "index-16"]], "get_rnn_weights_qparams": [[458, "index-14"]], "get_scratchpad_mode": [[458, "index-5"]], "primitive_attr": [[458, "index-1"], [458, "index-2"]], "set_fpmath_mode": [[458, "index-4"]], "set_post_ops": [[458, "index-10"]], "set_rnn_data_qparams": [[458, "index-11"]], "set_rnn_weights_projection_qparams": [[458, "index-15"]], "set_rnn_weights_qparams": [[458, "index-13"]], "set_scales_mask": [[458, "index-7"]], "set_scratchpad_mode": [[458, "index-6"]], "set_zero_points_mask": [[458, "index-8"]], "dnnl_primitive_desc": [[459, "index-0"]], "dnnl::primitive_desc": [[460, "index-0"]], "next_impl": [[460, "index-1"]], "dnnl::primitive_desc_base": [[461, "index-0"]], "get_activation_kind": [[461, "index-20"], [485, "index-22"], [487, "index-15"]], "get_axis": [[461, "index-13"], [472, "index-7"], [474, "index-7"], [476, "index-9"], [478, "index-8"]], "get_cache_blob_id": [[461, "index-42"]], "get_factors": [[461, "index-17"]], "get_group_size": [[461, "index-22"], [472, "index-8"], [474, "index-8"]], "get_p": [[461, "index-16"], [463, "index-6"]], "get_primitive_attr": [[461, "index-40"]], "query_md": [[461, "index-24"]], "query_s64": [[461, "index-3"]], "scratchpad_desc": [[461, "index-38"]], "dnnl::reduction": [[462, "index-0"]], "dnnl::reduction::primitive_desc": [[463, "index-0"]], "dnnl::reorder": [[464, "index-0"]], "dnnl::reorder::primitive_desc": [[465, "index-0"]], "get_dst_engine": [[465, "index-6"]], "get_src_engine": [[465, "index-5"]], "dnnl::resampling_backward": [[466, "index-0"]], "resampling_backward": [[466, "index-1"], [466, "index-2"], [466, "index-3"]], "dnnl::resampling_backward::primitive_desc": [[467, "index-0"]], "dnnl::resampling_forward": [[468, "index-0"]], "resampling_forward": [[468, "index-1"], [468, "index-2"], [468, "index-3"]], "dnnl::resampling_forward::primitive_desc": [[469, "index-0"]], "augru_attention_desc": [[470, "index-4"]], "diff_augru_attention_desc": [[470, "index-16"]], "dnnl::rnn_primitive_desc_base": [[470, "index-0"]], "rnn_primitive_desc_base": [[470, "index-1"], [470, "index-2"]], "dnnl::shuffle_backward": [[471, "index-0"]], "shuffle_backward": [[471, "index-1"], [471, "index-2"], [471, "index-3"]], "dnnl::shuffle_backward::primitive_desc": [[472, "index-0"]], "dnnl::shuffle_forward": [[473, "index-0"]], "shuffle_forward": [[473, "index-1"], [473, "index-2"], [473, "index-3"]], "dnnl::shuffle_forward::primitive_desc": [[474, "index-0"]], "dnnl::softmax_backward": [[475, "index-0"]], "softmax_backward": [[475, "index-1"], [475, "index-2"], [475, "index-3"]], "dnnl::softmax_backward::primitive_desc": [[476, "index-0"]], "dnnl::softmax_forward": [[477, "index-0"]], "softmax_forward": [[477, "index-1"], [477, "index-2"], [477, "index-3"]], "dnnl::softmax_forward::primitive_desc": [[478, "index-0"]], "dnnl_stream": [[479, "index-0"]], "dnnl::stream": [[480, "index-0"]], "wait": [[480, "index-4"]], "dnnl::sum": [[481, "index-0"]], "dnnl::sum::primitive_desc": [[482, "index-0"]], "asynchronous": [[483, "index-1"]], "dnnl::threadpool_interop::threadpool_iface": [[483, "index-0"]], "get_in_parallel": [[483, "index-3"]], "get_num_threads": [[483, "index-2"]], "parallel_for": [[483, "index-4"]], "dnnl::vanilla_rnn_backward": [[484, "index-0"]], "vanilla_rnn_backward": [[484, "index-1"], [484, "index-2"], [484, "index-3"]], "dnnl::vanilla_rnn_backward::primitive_desc": [[485, "index-0"]], "dnnl::vanilla_rnn_forward": [[486, "index-0"]], "vanilla_rnn_forward": [[486, "index-1"], [486, "index-2"], [486, "index-3"]], "dnnl::vanilla_rnn_forward::primitive_desc": [[487, "index-0"]], "cpu_runtime": [[488, "index-5"]], "dnnl_version_t": [[488, "index-0"]], "gpu_runtime": [[488, "index-6"]], "hash": [[488, "index-4"]], "major": [[488, "index-1"]], "minor": [[488, "index-2"]], "patch": [[488, "index-3"]], "example_allows_unimplemented": [[489, "index-0"]], "gemm_dims_t": [[490, "index-0"]]}})