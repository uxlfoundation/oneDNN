Search.setIndex({"docnames": ["advanced_topics", "build_and_link", "class_dnnl_graph_allocator", "class_dnnl_graph_compiled_partition", "class_dnnl_graph_graph", "class_dnnl_graph_logical_tensor", "class_dnnl_graph_op", "class_dnnl_graph_partition", "class_dnnl_graph_tensor", "dev_guide_attributes", "dev_guide_attributes_accumulation_mode", "dev_guide_attributes_deterministic", "dev_guide_attributes_fpmath_mode", "dev_guide_attributes_post_ops", "dev_guide_attributes_quantization", "dev_guide_attributes_scratchpad", "dev_guide_basic_concepts", "dev_guide_batch_normalization", "dev_guide_benchdnn", "dev_guide_binary", "dev_guide_build", "dev_guide_build_options", "dev_guide_c_and_cpp_apis", "dev_guide_concat", "dev_guide_constant_tensor_cache", "dev_guide_conventions", "dev_guide_convolution", "dev_guide_cpu_dispatcher_control", "dev_guide_cpu_isa_hints", "dev_guide_data_types", "dev_guide_dpcpp_interoperability", "dev_guide_eltwise", "dev_guide_examples", "dev_guide_experimental", "dev_guide_graph_basic_concepts", "dev_guide_graph_compiler", "dev_guide_graph_dump", "dev_guide_graph_fusion_patterns", "dev_guide_graph_low_precision", "dev_guide_group_normalization", "dev_guide_inference", "dev_guide_inference_and_training_aspects", "dev_guide_inference_int8", "dev_guide_inner_product", "dev_guide_inspecting_jit", "dev_guide_int8_computations", "dev_guide_layer_normalization", "dev_guide_link", "dev_guide_lrn", "dev_guide_matmul", "dev_guide_op_abs", "dev_guide_op_absbackward", "dev_guide_op_add", "dev_guide_op_avgpool", "dev_guide_op_avgpoolbackward", "dev_guide_op_batchnormforwardtraining", "dev_guide_op_batchnorminference", "dev_guide_op_batchnormtrainingbackward", "dev_guide_op_biasadd", "dev_guide_op_biasaddbackward", "dev_guide_op_clamp", "dev_guide_op_clampbackward", "dev_guide_op_concat", "dev_guide_op_convolution", "dev_guide_op_convolutionbackwarddata", "dev_guide_op_convolutionbackwardweights", "dev_guide_op_convtranspose", "dev_guide_op_convtransposebackwarddata", "dev_guide_op_convtransposebackwardweights", "dev_guide_op_dequantize", "dev_guide_op_divide", "dev_guide_op_dynamicdequantize", "dev_guide_op_dynamicquantize", "dev_guide_op_elu", "dev_guide_op_elubackward", "dev_guide_op_end", "dev_guide_op_exp", "dev_guide_op_gelu", "dev_guide_op_gelubackward", "dev_guide_op_hardsigmoid", "dev_guide_op_hardsigmoidbackward", "dev_guide_op_hardswish", "dev_guide_op_hardswishbackward", "dev_guide_op_interpolate", "dev_guide_op_interpolatebackward", "dev_guide_op_layernorm", "dev_guide_op_layernormbackward", "dev_guide_op_leakyrelu", "dev_guide_op_log", "dev_guide_op_logsoftmax", "dev_guide_op_logsoftmaxbackward", "dev_guide_op_matmul", "dev_guide_op_maximum", "dev_guide_op_maxpool", "dev_guide_op_maxpoolbackward", "dev_guide_op_minimum", "dev_guide_op_mish", "dev_guide_op_mishbackward", "dev_guide_op_multiply", "dev_guide_op_pow", "dev_guide_op_prelu", "dev_guide_op_prelubackward", "dev_guide_op_quantize", "dev_guide_op_reciprocal", "dev_guide_op_reducel1", "dev_guide_op_reducel2", "dev_guide_op_reducemax", "dev_guide_op_reducemean", "dev_guide_op_reducemin", "dev_guide_op_reduceprod", "dev_guide_op_reducesum", "dev_guide_op_relu", "dev_guide_op_relubackward", "dev_guide_op_reorder", "dev_guide_op_round", "dev_guide_op_select", "dev_guide_op_sigmoid", "dev_guide_op_sigmoidbackward", "dev_guide_op_softmax", "dev_guide_op_softmaxbackward", "dev_guide_op_softplus", "dev_guide_op_softplusbackward", "dev_guide_op_sqrt", "dev_guide_op_sqrtbackward", "dev_guide_op_square", "dev_guide_op_squareddifference", "dev_guide_op_staticreshape", "dev_guide_op_statictranspose", "dev_guide_op_subtract", "dev_guide_op_tanh", "dev_guide_op_tanhbackward", "dev_guide_op_typecast", "dev_guide_op_wildcard", "dev_guide_opencl_interoperability", "dev_guide_performance_settings", "dev_guide_persistent_cache", "dev_guide_pooling", "dev_guide_prelu", "dev_guide_primitive_cache", "dev_guide_profilers", "dev_guide_reduction", "dev_guide_reorder", "dev_guide_resampling", "dev_guide_rnn", "dev_guide_shuffle", "dev_guide_softmax", "dev_guide_sum", "dev_guide_threadpool", "dev_guide_training", "dev_guide_training_bf16", "dev_guide_transition_to_dnnl", "dev_guide_ukernel_basic_concepts", "dev_guide_ukernel_brgemm", "dev_guide_ukernel_transform", "dev_guide_understanding_memory_formats", "dev_guide_verbose", "dev_guide_verbose_table", "dev_guide_vtune", "enum_dnnl_accumulation_mode", "enum_dnnl_accumulation_mode_t", "enum_dnnl_alg_kind_t", "enum_dnnl_algorithm", "enum_dnnl_cpu_isa", "enum_dnnl_cpu_isa_hints", "enum_dnnl_cpu_isa_hints_t", "enum_dnnl_cpu_isa_t", "enum_dnnl_data_type_t", "enum_dnnl_engine_kind", "enum_dnnl_engine_kind_t", "enum_dnnl_format_kind_t", "enum_dnnl_format_tag_t", "enum_dnnl_fpmath_mode", "enum_dnnl_fpmath_mode_t", "enum_dnnl_graph_layout_type_t", "enum_dnnl_graph_logical_tensor_data_type", "enum_dnnl_graph_logical_tensor_layout_type", "enum_dnnl_graph_logical_tensor_property_type", "enum_dnnl_graph_op_attr", "enum_dnnl_graph_op_attr_t", "enum_dnnl_graph_op_kind", "enum_dnnl_graph_op_kind_t", "enum_dnnl_graph_partition_policy", "enum_dnnl_graph_partition_policy_t", "enum_dnnl_graph_status", "enum_dnnl_graph_tensor_property_t", "enum_dnnl_memory_data_type", "enum_dnnl_memory_format_kind", "enum_dnnl_memory_format_tag", "enum_dnnl_memory_sparse_encoding", "enum_dnnl_normalization_flags", "enum_dnnl_normalization_flags_t", "enum_dnnl_ocl_interop_memory_kind", "enum_dnnl_ocl_interop_memory_kind_t", "enum_dnnl_primitive_kind", "enum_dnnl_primitive_kind_t", "enum_dnnl_profiling_data_kind", "enum_dnnl_profiling_data_kind_t", "enum_dnnl_prop_kind", "enum_dnnl_prop_kind_t", "enum_dnnl_query", "enum_dnnl_query_t", "enum_dnnl_rnn_direction", "enum_dnnl_rnn_direction_t", "enum_dnnl_rnn_flags", "enum_dnnl_rnn_flags_t", "enum_dnnl_scratchpad_mode", "enum_dnnl_scratchpad_mode_t", "enum_dnnl_sparse_encoding_t", "enum_dnnl_status", "enum_dnnl_status_t", "enum_dnnl_stream_flags", "enum_dnnl_stream_flags_t", "enum_dnnl_sycl_interop_memory_kind", "enum_dnnl_sycl_interop_memory_kind_t", "example_augru.cpp", "example_batch_normalization.cpp", "example_binary.cpp", "example_bnorm_u8_via_binary_postops.cpp", "example_cnn_inference_f32.c", "example_cnn_inference_f32.cpp", "example_cnn_inference_int8.cpp", "example_cnn_training_bf16.cpp", "example_cnn_training_f32.cpp", "example_concat.cpp", "example_convolution.cpp", "example_cpu_brgemm.cpp", "example_cpu_cnn_training_f32.c", "example_cpu_getting_started.cpp", "example_cpu_inference_int8.cpp", "example_cpu_matmul_csr.cpp", "example_cpu_matmul_quantization.cpp", "example_cpu_matmul_weights_compression.cpp", "example_cpu_rnn_inference_f32.cpp", "example_cpu_rnn_inference_int8.cpp", "example_cpu_sgemm_and_matmul.cpp", "example_cpu_single_op_partition.cpp", "example_cross_engine_reorder.c", "example_cross_engine_reorder.cpp", "example_eltwise.cpp", "example_getting_started.cpp", "example_gpu_opencl_getting_started.cpp", "example_gpu_opencl_interop.cpp", "example_group_normalization.cpp", "example_inference_int8_matmul.cpp", "example_inner_product.cpp", "example_layer_normalization.cpp", "example_lrn.cpp", "example_lstm.cpp", "example_matmul.cpp", "example_memory_format_propagation.cpp", "example_performance_profiling.cpp", "example_pooling.cpp", "example_prelu.cpp", "example_reduction.cpp", "example_reorder.cpp", "example_resampling.cpp", "example_rnn_training_f32.cpp", "example_shuffle.cpp", "example_softmax.cpp", "example_sum.cpp", "example_sycl_getting_started.cpp", "example_sycl_interop_buffer.cpp", "example_sycl_single_op_partition.cpp", "example_weights_decompression_matmul.cpp", "global", "graph_extension", "graph_programming_model", "graph_supported_operations", "group_dnnl_api", "group_dnnl_api_accumulation_mode", "group_dnnl_api_attributes", "group_dnnl_api_batch_normalization", "group_dnnl_api_binary", "group_dnnl_api_blas", "group_dnnl_api_common", "group_dnnl_api_concat", "group_dnnl_api_convolution", "group_dnnl_api_data_types", "group_dnnl_api_deconvolution", "group_dnnl_api_eltwise", "group_dnnl_api_engine", "group_dnnl_api_fpmath_mode", "group_dnnl_api_group_normalization", "group_dnnl_api_inner_product", "group_dnnl_api_interop", "group_dnnl_api_layer_normalization", "group_dnnl_api_lrn", "group_dnnl_api_matmul", "group_dnnl_api_memory", "group_dnnl_api_ocl_interop", "group_dnnl_api_pooling", "group_dnnl_api_prelu", "group_dnnl_api_primitive_cache", "group_dnnl_api_primitives", "group_dnnl_api_primitives_common", "group_dnnl_api_profiling", "group_dnnl_api_reduction", "group_dnnl_api_reorder", "group_dnnl_api_resampling", "group_dnnl_api_rnn", "group_dnnl_api_service", "group_dnnl_api_shuffle", "group_dnnl_api_softmax", "group_dnnl_api_stream", "group_dnnl_api_sum", "group_dnnl_api_sycl_interop", "group_dnnl_api_threadpool_interop", "group_dnnl_api_ukernel", "group_dnnl_api_ukernel_brgemm", "group_dnnl_api_utils", "group_dnnl_graph_api", "group_dnnl_graph_api_allocator", "group_dnnl_graph_api_compiled_partition", "group_dnnl_graph_api_compiled_partition_cache", "group_dnnl_graph_api_constant_tensor_cache", "group_dnnl_graph_api_engine", "group_dnnl_graph_api_graph", "group_dnnl_graph_api_interop", "group_dnnl_graph_api_logical_tensor", "group_dnnl_graph_api_ocl_interop", "group_dnnl_graph_api_op", "group_dnnl_graph_api_partition", "group_dnnl_graph_api_status", "group_dnnl_graph_api_sycl_interop", "group_dnnl_graph_api_tensor", "group_dnnl_graph_api_utils", "index", "interop_with_dpcpp_and_opencl", "namespace_dnnl", "namespace_dnnl_graph", "namespace_dnnl_graph_ocl_interop", "namespace_dnnl_graph_sycl_interop", "namespace_dnnl_ocl_interop", "namespace_dnnl_sycl_interop", "namespace_dnnl_threadpool_interop", "namespace_dnnl_ukernel", "namespace_oneapi", "namespace_std", "namespace_sycl", "orphans", "page_augru_example_cpp", "page_augru_example_cpp_short", "page_batch_normalization_example_cpp", "page_batch_normalization_example_cpp_short", "page_binary_example_cpp", "page_binary_example_cpp_short", "page_bnorm_u8_via_binary_postops_cpp", "page_bnorm_u8_via_binary_postops_cpp_short", "page_cnn_inference_f32_c", "page_cnn_inference_f32_cpp", "page_cnn_inference_int8_cpp", "page_cnn_training_bf16_cpp", "page_cnn_training_f32_cpp", "page_concat_example_cpp", "page_concat_example_cpp_short", "page_convolution_example_cpp", "page_convolution_example_cpp_short", "page_cpu_brgemm_example_cpp", "page_cpu_cnn_training_f32_c", "page_cpu_matmul_csr_cpp", "page_cpu_matmul_quantization_cpp", "page_cpu_matmul_quantization_cpp_short", "page_cpu_matmul_weights_compression_cpp", "page_cpu_rnn_inference_f32_cpp", "page_cpu_rnn_inference_int8_cpp", "page_cpu_sgemm_and_matmul_cpp", "page_cpu_sgemm_and_matmul_cpp_short", "page_cross_engine_reorder_c", "page_cross_engine_reorder_cpp", "page_eltwise_example_cpp", "page_eltwise_example_cpp_short", "page_getting_started_cpp", "page_gpu_opencl_interop_cpp", "page_graph_cpu_getting_started_cpp", "page_graph_cpu_inference_int8_cpp", "page_graph_cpu_single_op_partition_cpp", "page_graph_gpu_opencl_getting_started_cpp", "page_graph_sycl_getting_started_cpp", "page_graph_sycl_single_op_partition_cpp", "page_group_normalization_example_cpp", "page_group_normalization_example_cpp_short", "page_inference_int8_matmul_cpp", "page_inference_int8_matmul_cpp_short", "page_inner_product_example_cpp", "page_inner_product_example_cpp_short", "page_layer_normalization_example_cpp", "page_layer_normalization_example_cpp_short", "page_legal_information", "page_lrn_example_cpp", "page_lrn_example_cpp_short", "page_lstm_example_cpp", "page_lstm_example_cpp_short", "page_matmul_example_cpp", "page_matmul_example_cpp_short", "page_memory_format_propagation_cpp", "page_performance_profiling_cpp", "page_pooling_example_cpp", "page_pooling_example_cpp_short", "page_prelu_example_cpp", "page_prelu_example_cpp_short", "page_reduction_example_cpp", "page_reduction_example_cpp_short", "page_reorder_example_cpp", "page_reorder_example_cpp_short", "page_resampling_example_cpp", "page_resampling_example_cpp_short", "page_rnn_training_f32_cpp", "page_shuffle_example_cpp", "page_shuffle_example_cpp_short", "page_softmax_example_cpp", "page_softmax_example_cpp_short", "page_sum_example_cpp", "page_sum_example_cpp_short", "page_sycl_interop_buffer_cpp", "page_todo", "page_weights_decompression_matmul_cpp", "page_weights_decompression_matmul_cpp_short", "performance_profiling_and_inspection", "programming_model", "struct_args_t", "struct_cpu_deletor", "struct_dnnl_augru_backward", "struct_dnnl_augru_backward_primitive_desc", "struct_dnnl_augru_forward", "struct_dnnl_augru_forward_primitive_desc", "struct_dnnl_batch_normalization_backward", "struct_dnnl_batch_normalization_backward_primitive_desc", "struct_dnnl_batch_normalization_forward", "struct_dnnl_batch_normalization_forward_primitive_desc", "struct_dnnl_binary", "struct_dnnl_binary_primitive_desc", "struct_dnnl_brgemm", "struct_dnnl_brgemm_pack_b", "struct_dnnl_concat", "struct_dnnl_concat_primitive_desc", "struct_dnnl_convolution_backward_data", "struct_dnnl_convolution_backward_data_primitive_desc", "struct_dnnl_convolution_backward_weights", "struct_dnnl_convolution_backward_weights_primitive_desc", "struct_dnnl_convolution_forward", "struct_dnnl_convolution_forward_primitive_desc", "struct_dnnl_deconvolution_backward_data", "struct_dnnl_deconvolution_backward_data_primitive_desc", "struct_dnnl_deconvolution_backward_weights", "struct_dnnl_deconvolution_backward_weights_primitive_desc", "struct_dnnl_deconvolution_forward", "struct_dnnl_deconvolution_forward_primitive_desc", "struct_dnnl_eltwise_backward", "struct_dnnl_eltwise_backward_primitive_desc", "struct_dnnl_eltwise_forward", "struct_dnnl_eltwise_forward_primitive_desc", "struct_dnnl_engine", "struct_dnnl_engine-2", "struct_dnnl_error", "struct_dnnl_exec_arg_t", "struct_dnnl_graph_inplace_pair_t", "struct_dnnl_graph_logical_tensor_t", "struct_dnnl_group_normalization_backward", "struct_dnnl_group_normalization_backward_primitive_desc", "struct_dnnl_group_normalization_forward", "struct_dnnl_group_normalization_forward_primitive_desc", "struct_dnnl_gru_backward", "struct_dnnl_gru_backward_primitive_desc", "struct_dnnl_gru_forward", "struct_dnnl_gru_forward_primitive_desc", "struct_dnnl_handle", "struct_dnnl_handle_traits", "struct_dnnl_inner_product_backward_data", "struct_dnnl_inner_product_backward_data_primitive_desc", "struct_dnnl_inner_product_backward_weights", "struct_dnnl_inner_product_backward_weights_primitive_desc", "struct_dnnl_inner_product_forward", "struct_dnnl_inner_product_forward_primitive_desc", "struct_dnnl_layer_normalization_backward", "struct_dnnl_layer_normalization_backward_primitive_desc", "struct_dnnl_layer_normalization_forward", "struct_dnnl_layer_normalization_forward_primitive_desc", "struct_dnnl_lbr_augru_backward", "struct_dnnl_lbr_augru_backward_primitive_desc", "struct_dnnl_lbr_augru_forward", "struct_dnnl_lbr_augru_forward_primitive_desc", "struct_dnnl_lbr_gru_backward", "struct_dnnl_lbr_gru_backward_primitive_desc", "struct_dnnl_lbr_gru_forward", "struct_dnnl_lbr_gru_forward_primitive_desc", "struct_dnnl_lrn_backward", "struct_dnnl_lrn_backward_primitive_desc", "struct_dnnl_lrn_forward", "struct_dnnl_lrn_forward_primitive_desc", "struct_dnnl_lstm_backward", "struct_dnnl_lstm_backward_primitive_desc", "struct_dnnl_lstm_forward", "struct_dnnl_lstm_forward_primitive_desc", "struct_dnnl_matmul", "struct_dnnl_matmul_primitive_desc", "struct_dnnl_memory", "struct_dnnl_memory-2", "struct_dnnl_memory_desc", "struct_dnnl_memory_desc-2", "struct_dnnl_pooling_backward", "struct_dnnl_pooling_backward_primitive_desc", "struct_dnnl_pooling_forward", "struct_dnnl_pooling_forward_primitive_desc", "struct_dnnl_post_ops", "struct_dnnl_post_ops-2", "struct_dnnl_prelu_backward", "struct_dnnl_prelu_backward_primitive_desc", "struct_dnnl_prelu_forward", "struct_dnnl_prelu_forward_primitive_desc", "struct_dnnl_primitive", "struct_dnnl_primitive-2", "struct_dnnl_primitive_attr", "struct_dnnl_primitive_attr-2", "struct_dnnl_primitive_desc", "struct_dnnl_primitive_desc-2", "struct_dnnl_primitive_desc_base", "struct_dnnl_reduction", "struct_dnnl_reduction_primitive_desc", "struct_dnnl_reorder", "struct_dnnl_reorder_primitive_desc", "struct_dnnl_resampling_backward", "struct_dnnl_resampling_backward_primitive_desc", "struct_dnnl_resampling_forward", "struct_dnnl_resampling_forward_primitive_desc", "struct_dnnl_rnn_primitive_desc_base", "struct_dnnl_shuffle_backward", "struct_dnnl_shuffle_backward_primitive_desc", "struct_dnnl_shuffle_forward", "struct_dnnl_shuffle_forward_primitive_desc", "struct_dnnl_softmax_backward", "struct_dnnl_softmax_backward_primitive_desc", "struct_dnnl_softmax_forward", "struct_dnnl_softmax_forward_primitive_desc", "struct_dnnl_stream", "struct_dnnl_stream-2", "struct_dnnl_sum", "struct_dnnl_sum_primitive_desc", "struct_dnnl_threadpool_interop_threadpool_iface", "struct_dnnl_ukernel_brgemm", "struct_dnnl_ukernel_brgemm_pack_b", "struct_dnnl_vanilla_rnn_backward", "struct_dnnl_vanilla_rnn_backward_primitive_desc", "struct_dnnl_vanilla_rnn_forward", "struct_dnnl_vanilla_rnn_forward_primitive_desc", "struct_dnnl_version_t", "struct_example_allows_unimplemented", "struct_gemm_dims_t", "struct_sycl_deletor", "supported_primitives", "ukernels"], "filenames": ["advanced_topics.rst", "build_and_link.rst", "class_dnnl_graph_allocator.rst", "class_dnnl_graph_compiled_partition.rst", "class_dnnl_graph_graph.rst", "class_dnnl_graph_logical_tensor.rst", "class_dnnl_graph_op.rst", "class_dnnl_graph_partition.rst", "class_dnnl_graph_tensor.rst", "dev_guide_attributes.rst", "dev_guide_attributes_accumulation_mode.rst", "dev_guide_attributes_deterministic.rst", "dev_guide_attributes_fpmath_mode.rst", "dev_guide_attributes_post_ops.rst", "dev_guide_attributes_quantization.rst", "dev_guide_attributes_scratchpad.rst", "dev_guide_basic_concepts.rst", "dev_guide_batch_normalization.rst", "dev_guide_benchdnn.rst", "dev_guide_binary.rst", "dev_guide_build.rst", "dev_guide_build_options.rst", "dev_guide_c_and_cpp_apis.rst", "dev_guide_concat.rst", "dev_guide_constant_tensor_cache.rst", "dev_guide_conventions.rst", "dev_guide_convolution.rst", "dev_guide_cpu_dispatcher_control.rst", "dev_guide_cpu_isa_hints.rst", "dev_guide_data_types.rst", "dev_guide_dpcpp_interoperability.rst", "dev_guide_eltwise.rst", "dev_guide_examples.rst", "dev_guide_experimental.rst", "dev_guide_graph_basic_concepts.rst", "dev_guide_graph_compiler.rst", "dev_guide_graph_dump.rst", "dev_guide_graph_fusion_patterns.rst", "dev_guide_graph_low_precision.rst", "dev_guide_group_normalization.rst", "dev_guide_inference.rst", "dev_guide_inference_and_training_aspects.rst", "dev_guide_inference_int8.rst", "dev_guide_inner_product.rst", "dev_guide_inspecting_jit.rst", "dev_guide_int8_computations.rst", "dev_guide_layer_normalization.rst", "dev_guide_link.rst", "dev_guide_lrn.rst", "dev_guide_matmul.rst", "dev_guide_op_abs.rst", "dev_guide_op_absbackward.rst", "dev_guide_op_add.rst", "dev_guide_op_avgpool.rst", "dev_guide_op_avgpoolbackward.rst", "dev_guide_op_batchnormforwardtraining.rst", "dev_guide_op_batchnorminference.rst", "dev_guide_op_batchnormtrainingbackward.rst", "dev_guide_op_biasadd.rst", "dev_guide_op_biasaddbackward.rst", "dev_guide_op_clamp.rst", "dev_guide_op_clampbackward.rst", "dev_guide_op_concat.rst", "dev_guide_op_convolution.rst", "dev_guide_op_convolutionbackwarddata.rst", "dev_guide_op_convolutionbackwardweights.rst", "dev_guide_op_convtranspose.rst", "dev_guide_op_convtransposebackwarddata.rst", "dev_guide_op_convtransposebackwardweights.rst", "dev_guide_op_dequantize.rst", "dev_guide_op_divide.rst", "dev_guide_op_dynamicdequantize.rst", "dev_guide_op_dynamicquantize.rst", "dev_guide_op_elu.rst", "dev_guide_op_elubackward.rst", "dev_guide_op_end.rst", "dev_guide_op_exp.rst", "dev_guide_op_gelu.rst", "dev_guide_op_gelubackward.rst", "dev_guide_op_hardsigmoid.rst", "dev_guide_op_hardsigmoidbackward.rst", "dev_guide_op_hardswish.rst", "dev_guide_op_hardswishbackward.rst", "dev_guide_op_interpolate.rst", "dev_guide_op_interpolatebackward.rst", "dev_guide_op_layernorm.rst", "dev_guide_op_layernormbackward.rst", "dev_guide_op_leakyrelu.rst", "dev_guide_op_log.rst", "dev_guide_op_logsoftmax.rst", "dev_guide_op_logsoftmaxbackward.rst", "dev_guide_op_matmul.rst", "dev_guide_op_maximum.rst", "dev_guide_op_maxpool.rst", "dev_guide_op_maxpoolbackward.rst", "dev_guide_op_minimum.rst", "dev_guide_op_mish.rst", "dev_guide_op_mishbackward.rst", "dev_guide_op_multiply.rst", "dev_guide_op_pow.rst", "dev_guide_op_prelu.rst", "dev_guide_op_prelubackward.rst", "dev_guide_op_quantize.rst", "dev_guide_op_reciprocal.rst", "dev_guide_op_reducel1.rst", "dev_guide_op_reducel2.rst", "dev_guide_op_reducemax.rst", "dev_guide_op_reducemean.rst", "dev_guide_op_reducemin.rst", "dev_guide_op_reduceprod.rst", "dev_guide_op_reducesum.rst", "dev_guide_op_relu.rst", "dev_guide_op_relubackward.rst", "dev_guide_op_reorder.rst", "dev_guide_op_round.rst", "dev_guide_op_select.rst", "dev_guide_op_sigmoid.rst", "dev_guide_op_sigmoidbackward.rst", "dev_guide_op_softmax.rst", "dev_guide_op_softmaxbackward.rst", "dev_guide_op_softplus.rst", "dev_guide_op_softplusbackward.rst", "dev_guide_op_sqrt.rst", "dev_guide_op_sqrtbackward.rst", "dev_guide_op_square.rst", "dev_guide_op_squareddifference.rst", "dev_guide_op_staticreshape.rst", "dev_guide_op_statictranspose.rst", "dev_guide_op_subtract.rst", "dev_guide_op_tanh.rst", "dev_guide_op_tanhbackward.rst", "dev_guide_op_typecast.rst", "dev_guide_op_wildcard.rst", "dev_guide_opencl_interoperability.rst", "dev_guide_performance_settings.rst", "dev_guide_persistent_cache.rst", "dev_guide_pooling.rst", "dev_guide_prelu.rst", "dev_guide_primitive_cache.rst", "dev_guide_profilers.rst", "dev_guide_reduction.rst", "dev_guide_reorder.rst", "dev_guide_resampling.rst", "dev_guide_rnn.rst", "dev_guide_shuffle.rst", "dev_guide_softmax.rst", "dev_guide_sum.rst", "dev_guide_threadpool.rst", "dev_guide_training.rst", "dev_guide_training_bf16.rst", "dev_guide_transition_to_dnnl.rst", "dev_guide_ukernel_basic_concepts.rst", "dev_guide_ukernel_brgemm.rst", "dev_guide_ukernel_transform.rst", "dev_guide_understanding_memory_formats.rst", "dev_guide_verbose.rst", "dev_guide_verbose_table.rst", "dev_guide_vtune.rst", "enum_dnnl_accumulation_mode.rst", "enum_dnnl_accumulation_mode_t.rst", "enum_dnnl_alg_kind_t.rst", "enum_dnnl_algorithm.rst", "enum_dnnl_cpu_isa.rst", "enum_dnnl_cpu_isa_hints.rst", "enum_dnnl_cpu_isa_hints_t.rst", "enum_dnnl_cpu_isa_t.rst", "enum_dnnl_data_type_t.rst", "enum_dnnl_engine_kind.rst", "enum_dnnl_engine_kind_t.rst", "enum_dnnl_format_kind_t.rst", "enum_dnnl_format_tag_t.rst", "enum_dnnl_fpmath_mode.rst", "enum_dnnl_fpmath_mode_t.rst", "enum_dnnl_graph_layout_type_t.rst", "enum_dnnl_graph_logical_tensor_data_type.rst", "enum_dnnl_graph_logical_tensor_layout_type.rst", "enum_dnnl_graph_logical_tensor_property_type.rst", "enum_dnnl_graph_op_attr.rst", "enum_dnnl_graph_op_attr_t.rst", "enum_dnnl_graph_op_kind.rst", "enum_dnnl_graph_op_kind_t.rst", "enum_dnnl_graph_partition_policy.rst", "enum_dnnl_graph_partition_policy_t.rst", "enum_dnnl_graph_status.rst", "enum_dnnl_graph_tensor_property_t.rst", "enum_dnnl_memory_data_type.rst", "enum_dnnl_memory_format_kind.rst", "enum_dnnl_memory_format_tag.rst", "enum_dnnl_memory_sparse_encoding.rst", "enum_dnnl_normalization_flags.rst", "enum_dnnl_normalization_flags_t.rst", "enum_dnnl_ocl_interop_memory_kind.rst", "enum_dnnl_ocl_interop_memory_kind_t.rst", "enum_dnnl_primitive_kind.rst", "enum_dnnl_primitive_kind_t.rst", "enum_dnnl_profiling_data_kind.rst", "enum_dnnl_profiling_data_kind_t.rst", "enum_dnnl_prop_kind.rst", "enum_dnnl_prop_kind_t.rst", "enum_dnnl_query.rst", "enum_dnnl_query_t.rst", "enum_dnnl_rnn_direction.rst", "enum_dnnl_rnn_direction_t.rst", "enum_dnnl_rnn_flags.rst", "enum_dnnl_rnn_flags_t.rst", "enum_dnnl_scratchpad_mode.rst", "enum_dnnl_scratchpad_mode_t.rst", "enum_dnnl_sparse_encoding_t.rst", "enum_dnnl_status.rst", "enum_dnnl_status_t.rst", "enum_dnnl_stream_flags.rst", "enum_dnnl_stream_flags_t.rst", "enum_dnnl_sycl_interop_memory_kind.rst", "enum_dnnl_sycl_interop_memory_kind_t.rst", "example_augru.cpp.rst", "example_batch_normalization.cpp.rst", "example_binary.cpp.rst", "example_bnorm_u8_via_binary_postops.cpp.rst", "example_cnn_inference_f32.c.rst", "example_cnn_inference_f32.cpp.rst", "example_cnn_inference_int8.cpp.rst", "example_cnn_training_bf16.cpp.rst", "example_cnn_training_f32.cpp.rst", "example_concat.cpp.rst", "example_convolution.cpp.rst", "example_cpu_brgemm.cpp.rst", "example_cpu_cnn_training_f32.c.rst", "example_cpu_getting_started.cpp.rst", "example_cpu_inference_int8.cpp.rst", "example_cpu_matmul_csr.cpp.rst", "example_cpu_matmul_quantization.cpp.rst", "example_cpu_matmul_weights_compression.cpp.rst", "example_cpu_rnn_inference_f32.cpp.rst", "example_cpu_rnn_inference_int8.cpp.rst", "example_cpu_sgemm_and_matmul.cpp.rst", "example_cpu_single_op_partition.cpp.rst", "example_cross_engine_reorder.c.rst", "example_cross_engine_reorder.cpp.rst", "example_eltwise.cpp.rst", "example_getting_started.cpp.rst", "example_gpu_opencl_getting_started.cpp.rst", "example_gpu_opencl_interop.cpp.rst", "example_group_normalization.cpp.rst", "example_inference_int8_matmul.cpp.rst", "example_inner_product.cpp.rst", "example_layer_normalization.cpp.rst", "example_lrn.cpp.rst", "example_lstm.cpp.rst", "example_matmul.cpp.rst", "example_memory_format_propagation.cpp.rst", "example_performance_profiling.cpp.rst", "example_pooling.cpp.rst", "example_prelu.cpp.rst", "example_reduction.cpp.rst", "example_reorder.cpp.rst", "example_resampling.cpp.rst", "example_rnn_training_f32.cpp.rst", "example_shuffle.cpp.rst", "example_softmax.cpp.rst", "example_sum.cpp.rst", "example_sycl_getting_started.cpp.rst", "example_sycl_interop_buffer.cpp.rst", "example_sycl_single_op_partition.cpp.rst", "example_weights_decompression_matmul.cpp.rst", "global.rst", "graph_extension.rst", "graph_programming_model.rst", "graph_supported_operations.rst", "group_dnnl_api.rst", "group_dnnl_api_accumulation_mode.rst", "group_dnnl_api_attributes.rst", "group_dnnl_api_batch_normalization.rst", "group_dnnl_api_binary.rst", "group_dnnl_api_blas.rst", "group_dnnl_api_common.rst", "group_dnnl_api_concat.rst", "group_dnnl_api_convolution.rst", "group_dnnl_api_data_types.rst", "group_dnnl_api_deconvolution.rst", "group_dnnl_api_eltwise.rst", "group_dnnl_api_engine.rst", "group_dnnl_api_fpmath_mode.rst", "group_dnnl_api_group_normalization.rst", "group_dnnl_api_inner_product.rst", "group_dnnl_api_interop.rst", "group_dnnl_api_layer_normalization.rst", "group_dnnl_api_lrn.rst", "group_dnnl_api_matmul.rst", "group_dnnl_api_memory.rst", "group_dnnl_api_ocl_interop.rst", "group_dnnl_api_pooling.rst", "group_dnnl_api_prelu.rst", "group_dnnl_api_primitive_cache.rst", "group_dnnl_api_primitives.rst", "group_dnnl_api_primitives_common.rst", "group_dnnl_api_profiling.rst", "group_dnnl_api_reduction.rst", "group_dnnl_api_reorder.rst", "group_dnnl_api_resampling.rst", "group_dnnl_api_rnn.rst", "group_dnnl_api_service.rst", "group_dnnl_api_shuffle.rst", "group_dnnl_api_softmax.rst", "group_dnnl_api_stream.rst", "group_dnnl_api_sum.rst", "group_dnnl_api_sycl_interop.rst", "group_dnnl_api_threadpool_interop.rst", "group_dnnl_api_ukernel.rst", "group_dnnl_api_ukernel_brgemm.rst", "group_dnnl_api_utils.rst", "group_dnnl_graph_api.rst", "group_dnnl_graph_api_allocator.rst", "group_dnnl_graph_api_compiled_partition.rst", "group_dnnl_graph_api_compiled_partition_cache.rst", "group_dnnl_graph_api_constant_tensor_cache.rst", "group_dnnl_graph_api_engine.rst", "group_dnnl_graph_api_graph.rst", "group_dnnl_graph_api_interop.rst", "group_dnnl_graph_api_logical_tensor.rst", "group_dnnl_graph_api_ocl_interop.rst", "group_dnnl_graph_api_op.rst", "group_dnnl_graph_api_partition.rst", "group_dnnl_graph_api_status.rst", "group_dnnl_graph_api_sycl_interop.rst", "group_dnnl_graph_api_tensor.rst", "group_dnnl_graph_api_utils.rst", "index.rst", "interop_with_dpcpp_and_opencl.rst", "namespace_dnnl.rst", "namespace_dnnl_graph.rst", "namespace_dnnl_graph_ocl_interop.rst", "namespace_dnnl_graph_sycl_interop.rst", "namespace_dnnl_ocl_interop.rst", "namespace_dnnl_sycl_interop.rst", "namespace_dnnl_threadpool_interop.rst", "namespace_dnnl_ukernel.rst", "namespace_oneapi.rst", "namespace_std.rst", "namespace_sycl.rst", "orphans.rst", "page_augru_example_cpp.rst", "page_augru_example_cpp_short.rst", "page_batch_normalization_example_cpp.rst", "page_batch_normalization_example_cpp_short.rst", "page_binary_example_cpp.rst", "page_binary_example_cpp_short.rst", "page_bnorm_u8_via_binary_postops_cpp.rst", "page_bnorm_u8_via_binary_postops_cpp_short.rst", "page_cnn_inference_f32_c.rst", "page_cnn_inference_f32_cpp.rst", "page_cnn_inference_int8_cpp.rst", "page_cnn_training_bf16_cpp.rst", "page_cnn_training_f32_cpp.rst", "page_concat_example_cpp.rst", "page_concat_example_cpp_short.rst", "page_convolution_example_cpp.rst", "page_convolution_example_cpp_short.rst", "page_cpu_brgemm_example_cpp.rst", "page_cpu_cnn_training_f32_c.rst", "page_cpu_matmul_csr_cpp.rst", "page_cpu_matmul_quantization_cpp.rst", "page_cpu_matmul_quantization_cpp_short.rst", "page_cpu_matmul_weights_compression_cpp.rst", "page_cpu_rnn_inference_f32_cpp.rst", "page_cpu_rnn_inference_int8_cpp.rst", "page_cpu_sgemm_and_matmul_cpp.rst", "page_cpu_sgemm_and_matmul_cpp_short.rst", "page_cross_engine_reorder_c.rst", "page_cross_engine_reorder_cpp.rst", "page_eltwise_example_cpp.rst", "page_eltwise_example_cpp_short.rst", "page_getting_started_cpp.rst", "page_gpu_opencl_interop_cpp.rst", "page_graph_cpu_getting_started_cpp.rst", "page_graph_cpu_inference_int8_cpp.rst", "page_graph_cpu_single_op_partition_cpp.rst", "page_graph_gpu_opencl_getting_started_cpp.rst", "page_graph_sycl_getting_started_cpp.rst", "page_graph_sycl_single_op_partition_cpp.rst", "page_group_normalization_example_cpp.rst", "page_group_normalization_example_cpp_short.rst", "page_inference_int8_matmul_cpp.rst", "page_inference_int8_matmul_cpp_short.rst", "page_inner_product_example_cpp.rst", "page_inner_product_example_cpp_short.rst", "page_layer_normalization_example_cpp.rst", "page_layer_normalization_example_cpp_short.rst", "page_legal_information.rst", "page_lrn_example_cpp.rst", "page_lrn_example_cpp_short.rst", "page_lstm_example_cpp.rst", "page_lstm_example_cpp_short.rst", "page_matmul_example_cpp.rst", "page_matmul_example_cpp_short.rst", "page_memory_format_propagation_cpp.rst", "page_performance_profiling_cpp.rst", "page_pooling_example_cpp.rst", "page_pooling_example_cpp_short.rst", "page_prelu_example_cpp.rst", "page_prelu_example_cpp_short.rst", "page_reduction_example_cpp.rst", "page_reduction_example_cpp_short.rst", "page_reorder_example_cpp.rst", "page_reorder_example_cpp_short.rst", "page_resampling_example_cpp.rst", "page_resampling_example_cpp_short.rst", "page_rnn_training_f32_cpp.rst", "page_shuffle_example_cpp.rst", "page_shuffle_example_cpp_short.rst", "page_softmax_example_cpp.rst", "page_softmax_example_cpp_short.rst", "page_sum_example_cpp.rst", "page_sum_example_cpp_short.rst", "page_sycl_interop_buffer_cpp.rst", "page_todo.rst", "page_weights_decompression_matmul_cpp.rst", "page_weights_decompression_matmul_cpp_short.rst", "performance_profiling_and_inspection.rst", "programming_model.rst", "struct_args_t.rst", "struct_cpu_deletor.rst", "struct_dnnl_augru_backward.rst", "struct_dnnl_augru_backward_primitive_desc.rst", "struct_dnnl_augru_forward.rst", "struct_dnnl_augru_forward_primitive_desc.rst", "struct_dnnl_batch_normalization_backward.rst", "struct_dnnl_batch_normalization_backward_primitive_desc.rst", "struct_dnnl_batch_normalization_forward.rst", "struct_dnnl_batch_normalization_forward_primitive_desc.rst", "struct_dnnl_binary.rst", "struct_dnnl_binary_primitive_desc.rst", "struct_dnnl_brgemm.rst", "struct_dnnl_brgemm_pack_b.rst", "struct_dnnl_concat.rst", "struct_dnnl_concat_primitive_desc.rst", "struct_dnnl_convolution_backward_data.rst", "struct_dnnl_convolution_backward_data_primitive_desc.rst", "struct_dnnl_convolution_backward_weights.rst", "struct_dnnl_convolution_backward_weights_primitive_desc.rst", "struct_dnnl_convolution_forward.rst", "struct_dnnl_convolution_forward_primitive_desc.rst", "struct_dnnl_deconvolution_backward_data.rst", "struct_dnnl_deconvolution_backward_data_primitive_desc.rst", "struct_dnnl_deconvolution_backward_weights.rst", "struct_dnnl_deconvolution_backward_weights_primitive_desc.rst", "struct_dnnl_deconvolution_forward.rst", "struct_dnnl_deconvolution_forward_primitive_desc.rst", "struct_dnnl_eltwise_backward.rst", "struct_dnnl_eltwise_backward_primitive_desc.rst", "struct_dnnl_eltwise_forward.rst", "struct_dnnl_eltwise_forward_primitive_desc.rst", "struct_dnnl_engine.rst", "struct_dnnl_engine-2.rst", "struct_dnnl_error.rst", "struct_dnnl_exec_arg_t.rst", "struct_dnnl_graph_inplace_pair_t.rst", "struct_dnnl_graph_logical_tensor_t.rst", "struct_dnnl_group_normalization_backward.rst", "struct_dnnl_group_normalization_backward_primitive_desc.rst", "struct_dnnl_group_normalization_forward.rst", "struct_dnnl_group_normalization_forward_primitive_desc.rst", "struct_dnnl_gru_backward.rst", "struct_dnnl_gru_backward_primitive_desc.rst", "struct_dnnl_gru_forward.rst", "struct_dnnl_gru_forward_primitive_desc.rst", "struct_dnnl_handle.rst", "struct_dnnl_handle_traits.rst", "struct_dnnl_inner_product_backward_data.rst", "struct_dnnl_inner_product_backward_data_primitive_desc.rst", "struct_dnnl_inner_product_backward_weights.rst", "struct_dnnl_inner_product_backward_weights_primitive_desc.rst", "struct_dnnl_inner_product_forward.rst", "struct_dnnl_inner_product_forward_primitive_desc.rst", "struct_dnnl_layer_normalization_backward.rst", "struct_dnnl_layer_normalization_backward_primitive_desc.rst", "struct_dnnl_layer_normalization_forward.rst", "struct_dnnl_layer_normalization_forward_primitive_desc.rst", "struct_dnnl_lbr_augru_backward.rst", "struct_dnnl_lbr_augru_backward_primitive_desc.rst", "struct_dnnl_lbr_augru_forward.rst", "struct_dnnl_lbr_augru_forward_primitive_desc.rst", "struct_dnnl_lbr_gru_backward.rst", "struct_dnnl_lbr_gru_backward_primitive_desc.rst", "struct_dnnl_lbr_gru_forward.rst", "struct_dnnl_lbr_gru_forward_primitive_desc.rst", "struct_dnnl_lrn_backward.rst", "struct_dnnl_lrn_backward_primitive_desc.rst", "struct_dnnl_lrn_forward.rst", "struct_dnnl_lrn_forward_primitive_desc.rst", "struct_dnnl_lstm_backward.rst", "struct_dnnl_lstm_backward_primitive_desc.rst", "struct_dnnl_lstm_forward.rst", "struct_dnnl_lstm_forward_primitive_desc.rst", "struct_dnnl_matmul.rst", "struct_dnnl_matmul_primitive_desc.rst", "struct_dnnl_memory.rst", "struct_dnnl_memory-2.rst", "struct_dnnl_memory_desc.rst", "struct_dnnl_memory_desc-2.rst", "struct_dnnl_pooling_backward.rst", "struct_dnnl_pooling_backward_primitive_desc.rst", "struct_dnnl_pooling_forward.rst", "struct_dnnl_pooling_forward_primitive_desc.rst", "struct_dnnl_post_ops.rst", "struct_dnnl_post_ops-2.rst", "struct_dnnl_prelu_backward.rst", "struct_dnnl_prelu_backward_primitive_desc.rst", "struct_dnnl_prelu_forward.rst", "struct_dnnl_prelu_forward_primitive_desc.rst", "struct_dnnl_primitive.rst", "struct_dnnl_primitive-2.rst", "struct_dnnl_primitive_attr.rst", "struct_dnnl_primitive_attr-2.rst", "struct_dnnl_primitive_desc.rst", "struct_dnnl_primitive_desc-2.rst", "struct_dnnl_primitive_desc_base.rst", "struct_dnnl_reduction.rst", "struct_dnnl_reduction_primitive_desc.rst", "struct_dnnl_reorder.rst", "struct_dnnl_reorder_primitive_desc.rst", "struct_dnnl_resampling_backward.rst", "struct_dnnl_resampling_backward_primitive_desc.rst", "struct_dnnl_resampling_forward.rst", "struct_dnnl_resampling_forward_primitive_desc.rst", "struct_dnnl_rnn_primitive_desc_base.rst", "struct_dnnl_shuffle_backward.rst", "struct_dnnl_shuffle_backward_primitive_desc.rst", "struct_dnnl_shuffle_forward.rst", "struct_dnnl_shuffle_forward_primitive_desc.rst", "struct_dnnl_softmax_backward.rst", "struct_dnnl_softmax_backward_primitive_desc.rst", "struct_dnnl_softmax_forward.rst", "struct_dnnl_softmax_forward_primitive_desc.rst", "struct_dnnl_stream.rst", "struct_dnnl_stream-2.rst", "struct_dnnl_sum.rst", "struct_dnnl_sum_primitive_desc.rst", "struct_dnnl_threadpool_interop_threadpool_iface.rst", "struct_dnnl_ukernel_brgemm.rst", "struct_dnnl_ukernel_brgemm_pack_b.rst", "struct_dnnl_vanilla_rnn_backward.rst", "struct_dnnl_vanilla_rnn_backward_primitive_desc.rst", "struct_dnnl_vanilla_rnn_forward.rst", "struct_dnnl_vanilla_rnn_forward_primitive_desc.rst", "struct_dnnl_version_t.rst", "struct_example_allows_unimplemented.rst", "struct_gemm_dims_t.rst", "struct_sycl_deletor.rst", "supported_primitives.rst", "ukernels.rst"], "titles": ["Advanced Topics", "Building and Linking", "class dnnl::graph::allocator", "class dnnl::graph::compiled_partition", "class dnnl::graph::graph", "class dnnl::graph::logical_tensor", "class dnnl::graph::op", "class dnnl::graph::partition", "class dnnl::graph::tensor", "Primitive Attributes", "Primitive Attributes: accumulation mode", "Primitive Attributes: deterministic", "Primitive Attributes: floating-point math mode", "Primitive Attributes: Post-ops", "Primitive Attributes: Quantization", "Primitive Attributes: Scratchpad", "Basic Concepts", "Batch Normalization", "Benchmarking Performance", "Binary", "Build from Source", "Build Options", "API", "Concat", "Constant Tensor Cache", "Naming Conventions", "Convolution", "CPU Dispatcher Control", "CPU ISA Hints", "Data Types", "DPC++ Interoperability", "Eltwise", "Examples", "Experimental features", "Basic Concepts", "Graph Compiler", "Graph Dump", "Supported Fusion Patterns", "Low Precision", "Group Normalization", "Inference", "Inference and Training Aspects", "Int8 Inference", "Inner Product", "Inspecting JIT Code", "Nuances of int8 Computations", "Layer Normalization", "Linking to the Library", "Local Response Normalization (LRN)", "Matrix Multiplication", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "HardSigmoid", "HardSigmoidBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "Maximum", "MaxPool", "MaxPoolBackward", "Minimum", "Mish", "MishBackward", "Multiply", "Pow", "PReLU", "PReLUBackward", "Quantize", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReLU", "ReLUBackward", "Reorder", "Round", "Select", "Sigmoid", "SigmoidBackward", "SoftMax", "SoftMaxBackward", "SoftPlus", "SoftPlusBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "OpenCL Interoperability", "Configuring oneDNN for Benchmarking", "Persistent Cache", "Pooling", "PReLU", "Primitive Cache", "Profiling oneDNN Performance", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sum", "Using oneDNN with Threadpool-Based Threading", "Training", "Bfloat16 Training", "Transitioning from Intel MKL-DNN to oneDNN", "Basic Concepts", "Batch-Reduce General Matrix Multiplication", "Data transformation", "Understanding Memory Formats", "Verbose Mode", "Verbose Message Catalogue", "Profiling with VTune(TM) Profiler", "enum dnnl::accumulation_mode", "enum dnnl_accumulation_mode_t", "enum dnnl_alg_kind_t", "enum dnnl::algorithm", "enum dnnl::cpu_isa", "enum dnnl::cpu_isa_hints", "enum dnnl_cpu_isa_hints_t", "enum dnnl_cpu_isa_t", "enum dnnl_data_type_t", "enum dnnl::engine::kind", "enum dnnl_engine_kind_t", "enum dnnl_format_kind_t", "enum dnnl_format_tag_t", "enum dnnl::fpmath_mode", "enum dnnl_fpmath_mode_t", "enum dnnl_graph_layout_type_t", "enum dnnl::graph::logical_tensor::data_type", "enum dnnl::graph::logical_tensor::layout_type", "enum dnnl::graph::logical_tensor::property_type", "enum dnnl::graph::op::attr", "enum dnnl_graph_op_attr_t", "enum dnnl::graph::op::kind", "enum dnnl_graph_op_kind_t", "enum dnnl::graph::partition::policy", "enum dnnl_graph_partition_policy_t", "enum dnnl::graph::status", "enum dnnl_graph_tensor_property_t", "enum dnnl::memory::data_type", "enum dnnl::memory::format_kind", "enum dnnl::memory::format_tag", "enum dnnl::memory::sparse_encoding", "enum dnnl::normalization_flags", "enum dnnl_normalization_flags_t", "enum dnnl::ocl_interop::memory_kind", "enum dnnl_ocl_interop_memory_kind_t", "enum dnnl::primitive::kind", "enum dnnl_primitive_kind_t", "enum dnnl::profiling_data_kind", "enum dnnl_profiling_data_kind_t", "enum dnnl::prop_kind", "enum dnnl_prop_kind_t", "enum dnnl::query", "enum dnnl_query_t", "enum dnnl::rnn_direction", "enum dnnl_rnn_direction_t", "enum dnnl::rnn_flags", "enum dnnl_rnn_flags_t", "enum dnnl::scratchpad_mode", "enum dnnl_scratchpad_mode_t", "enum dnnl_sparse_encoding_t", "enum dnnl::status", "enum dnnl_status_t", "enum dnnl::stream::flags", "enum dnnl_stream_flags_t", "enum dnnl::sycl_interop::memory_kind", "enum dnnl_sycl_interop_memory_kind_t", "augru.cpp", "batch_normalization.cpp", "binary.cpp", "bnorm_u8_via_binary_postops.cpp", "cnn_inference_f32.c", "cnn_inference_f32.cpp", "cnn_inference_int8.cpp", "cnn_training_bf16.cpp", "cnn_training_f32.cpp", "concat.cpp", "convolution.cpp", "cpu_brgemm.cpp", "cpu_cnn_training_f32.c", "cpu_getting_started.cpp", "cpu_inference_int8.cpp", "cpu_matmul_csr.cpp", "cpu_matmul_quantization.cpp", "cpu_matmul_weights_compression.cpp", "cpu_rnn_inference_f32.cpp", "cpu_rnn_inference_int8.cpp", "cpu_sgemm_and_matmul.cpp", "cpu_single_op_partition.cpp", "cross_engine_reorder.c", "cross_engine_reorder.cpp", "eltwise.cpp", "getting_started.cpp", "gpu_opencl_getting_started.cpp", "gpu_opencl_interop.cpp", "group_normalization.cpp", "inference_int8_matmul.cpp", "inner_product.cpp", "layer_normalization.cpp", "lrn.cpp", "lstm.cpp", "matmul.cpp", "memory_format_propagation.cpp", "performance_profiling.cpp", "pooling.cpp", "prelu.cpp", "reduction.cpp", "reorder.cpp", "resampling.cpp", "rnn_training_f32.cpp", "shuffle.cpp", "softmax.cpp", "sum.cpp", "sycl_getting_started.cpp", "sycl_interop_buffer.cpp", "sycl_single_op_partition.cpp", "weights_decompression_matmul.cpp", "Global Namespace", "Graph Extension", "Programming Model", "Supported Operations", "oneDNN API", "Accumulation Mode", "Attributes", "Batch Normalization", "Binary", "BLAS functions", "Common API", "Concat", "Convolution", "Data types", "Deconvolution", "Eltwise", "Engine", "Floating-point Math Mode", "Group Normalization", "Inner Product", "Runtime interoperability API", "Layer Normalization", "LRN", "Matrix Multiplication", "Memory", "OpenCL interoperability API", "Pooling", "PReLU", "Primitive Cache", "Primitives", "Common", "Profiling", "Reduction", "Reorder", "Resampling", "RNN", "Service", "Shuffle", "Softmax", "Stream", "Sum", "SYCL interoperability API", "Threadpool interoperability API", "Ukernels", "BRGeMM ukernel", "Utilities", "Graph API", "Allocator", "Compiled Partition", "Compiled Partition Cache", "Constant Tensor Cache", "Engine", "Graph", "Runtime interoperability API", "Logical Tensor", "OpenCL interoperability API API", "Op", "Partition", "Status", "SYCL interoperability API", "Tensor", "Utilities", "oneAPI Deep Neural Network Library Developer Guide and Reference", "Interoperability with DPC++ and OpenCL", "namespace dnnl", "namespace dnnl::graph", "namespace dnnl::graph::ocl_interop", "namespace dnnl::graph::sycl_interop", "namespace dnnl::ocl_interop", "namespace dnnl::sycl_interop", "namespace dnnl::threadpool_interop", "namespace dnnl::ukernel", "namespace oneapi", "namespace std", "namespace sycl", "Orphans", "AUGRU RNN Primitive Example", "&lt;Untitled&gt;", "Batch Normalization Primitive Example", "&lt;Untitled&gt;", "Binary Primitive Example", "&lt;Untitled&gt;", "Bnorm u8 by binary post-ops example", "&lt;Untitled&gt;", "CNN f32 inference example", "CNN f32 inference example", "CNN int8 inference example", "CNN bf16 training example", "CNN f32 training example", "Concat Primitive Example", "&lt;Untitled&gt;", "Convolution Primitive Example", "&lt;Untitled&gt;", "BRGeMM ukernel example", "CNN f32 training example", "MatMul Primitive Example", "MatMul Tutorial: Quantization", "&lt;Untitled&gt;", "MatMul Primitive Example", "RNN f32 inference example", "RNN int8 inference example", "MatMul Tutorial: Comparison with SGEMM", "&lt;Untitled&gt;", "Reorder between CPU and GPU engines", "Reorder between CPU and GPU engines", "Element-Wise Primitive Example", "&lt;Untitled&gt;", "Getting started", "Getting started on GPU with OpenCL extensions API", "Getting started on CPU with Graph API", "Convolution int8 inference example with Graph API", "Single op partition on CPU", "Getting started with OpenCL extensions and Graph API", "Getting started with SYCL extensions API and Graph API", "Single op partition on GPU", "Group Normalization Primitive Example", "&lt;Untitled&gt;", "MatMul Tutorial: INT8 Inference", "&lt;Untitled&gt;", "Inner Product Primitive Example", "&lt;Untitled&gt;", "Layer Normalization Primitive Example", "&lt;Untitled&gt;", "Legal Information", "Local Response Normalization Primitive Example", "&lt;Untitled&gt;", "LSTM RNN Primitive Example", "&lt;Untitled&gt;", "Matmul Primitive Example", "&lt;Untitled&gt;", "Memory Format Propagation", "Performance Profiling Example", "Pooling Primitive Example", "&lt;Untitled&gt;", "Primitive Example", "&lt;Untitled&gt;", "Reduction Primitive Example", "&lt;Untitled&gt;", "Reorder Primitive Example", "&lt;Untitled&gt;", "Resampling Primitive Example", "&lt;Untitled&gt;", "RNN f32 training example", "Shuffle Primitive Example", "&lt;Untitled&gt;", "Softmax Primitive Example", "&lt;Untitled&gt;", "Sum Primitive Example", "&lt;Untitled&gt;", "Getting started on both CPU and GPU with SYCL extensions API", "Todo List", "MatMul Tutorial: weights decompression", "&lt;Untitled&gt;", "Performance Profiling and Inspection", "Programming Model", "struct args_t", "struct cpu_deletor", "struct dnnl::augru_backward", "struct dnnl::augru_backward::primitive_desc", "struct dnnl::augru_forward", "struct dnnl::augru_forward::primitive_desc", "struct dnnl::batch_normalization_backward", "struct dnnl::batch_normalization_backward::primitive_desc", "struct dnnl::batch_normalization_forward", "struct dnnl::batch_normalization_forward::primitive_desc", "struct dnnl::binary", "struct dnnl::binary::primitive_desc", "struct dnnl_brgemm", "struct dnnl_brgemm_pack_b", "struct dnnl::concat", "struct dnnl::concat::primitive_desc", "struct dnnl::convolution_backward_data", "struct dnnl::convolution_backward_data::primitive_desc", "struct dnnl::convolution_backward_weights", "struct dnnl::convolution_backward_weights::primitive_desc", "struct dnnl::convolution_forward", "struct dnnl::convolution_forward::primitive_desc", "struct dnnl::deconvolution_backward_data", "struct dnnl::deconvolution_backward_data::primitive_desc", "struct dnnl::deconvolution_backward_weights", "struct dnnl::deconvolution_backward_weights::primitive_desc", "struct dnnl::deconvolution_forward", "struct dnnl::deconvolution_forward::primitive_desc", "struct dnnl::eltwise_backward", "struct dnnl::eltwise_backward::primitive_desc", "struct dnnl::eltwise_forward", "struct dnnl::eltwise_forward::primitive_desc", "struct dnnl_engine", "struct dnnl::engine", "struct dnnl::error", "struct dnnl_exec_arg_t", "struct dnnl_graph_inplace_pair_t", "struct dnnl_graph_logical_tensor_t", "struct dnnl::group_normalization_backward", "struct dnnl::group_normalization_backward::primitive_desc", "struct dnnl::group_normalization_forward", "struct dnnl::group_normalization_forward::primitive_desc", "struct dnnl::gru_backward", "struct dnnl::gru_backward::primitive_desc", "struct dnnl::gru_forward", "struct dnnl::gru_forward::primitive_desc", "template struct dnnl::handle", "template struct dnnl::handle_traits", "struct dnnl::inner_product_backward_data", "struct dnnl::inner_product_backward_data::primitive_desc", "struct dnnl::inner_product_backward_weights", "struct dnnl::inner_product_backward_weights::primitive_desc", "struct dnnl::inner_product_forward", "struct dnnl::inner_product_forward::primitive_desc", "struct dnnl::layer_normalization_backward", "struct dnnl::layer_normalization_backward::primitive_desc", "struct dnnl::layer_normalization_forward", "struct dnnl::layer_normalization_forward::primitive_desc", "struct dnnl::lbr_augru_backward", "struct dnnl::lbr_augru_backward::primitive_desc", "struct dnnl::lbr_augru_forward", "struct dnnl::lbr_augru_forward::primitive_desc", "struct dnnl::lbr_gru_backward", "struct dnnl::lbr_gru_backward::primitive_desc", "struct dnnl::lbr_gru_forward", "struct dnnl::lbr_gru_forward::primitive_desc", "struct dnnl::lrn_backward", "struct dnnl::lrn_backward::primitive_desc", "struct dnnl::lrn_forward", "struct dnnl::lrn_forward::primitive_desc", "struct dnnl::lstm_backward", "struct dnnl::lstm_backward::primitive_desc", "struct dnnl::lstm_forward", "struct dnnl::lstm_forward::primitive_desc", "struct dnnl::matmul", "struct dnnl::matmul::primitive_desc", "struct dnnl_memory", "struct dnnl::memory", "struct dnnl_memory_desc", "struct dnnl::memory::desc", "struct dnnl::pooling_backward", "struct dnnl::pooling_backward::primitive_desc", "struct dnnl::pooling_forward", "struct dnnl::pooling_forward::primitive_desc", "struct dnnl_post_ops", "struct dnnl::post_ops", "struct dnnl::prelu_backward", "struct dnnl::prelu_backward::primitive_desc", "struct dnnl::prelu_forward", "struct dnnl::prelu_forward::primitive_desc", "struct dnnl_primitive", "struct dnnl::primitive", "struct dnnl_primitive_attr", "struct dnnl::primitive_attr", "struct dnnl_primitive_desc", "struct dnnl::primitive_desc", "struct dnnl::primitive_desc_base", "struct dnnl::reduction", "struct dnnl::reduction::primitive_desc", "struct dnnl::reorder", "struct dnnl::reorder::primitive_desc", "struct dnnl::resampling_backward", "struct dnnl::resampling_backward::primitive_desc", "struct dnnl::resampling_forward", "struct dnnl::resampling_forward::primitive_desc", "struct dnnl::rnn_primitive_desc_base", "struct dnnl::shuffle_backward", "struct dnnl::shuffle_backward::primitive_desc", "struct dnnl::shuffle_forward", "struct dnnl::shuffle_forward::primitive_desc", "struct dnnl::softmax_backward", "struct dnnl::softmax_backward::primitive_desc", "struct dnnl::softmax_forward", "struct dnnl::softmax_forward::primitive_desc", "struct dnnl_stream", "struct dnnl::stream", "struct dnnl::sum", "struct dnnl::sum::primitive_desc", "struct dnnl::threadpool_interop::threadpool_iface", "struct dnnl::ukernel::brgemm", "struct dnnl::ukernel::brgemm_pack_b", "struct dnnl::vanilla_rnn_backward", "struct dnnl::vanilla_rnn_backward::primitive_desc", "struct dnnl::vanilla_rnn_forward", "struct dnnl::vanilla_rnn_forward::primitive_desc", "struct dnnl_version_t", "struct example_allows_unimplemented", "struct gemm_dims_t", "struct sycl_deletor", "Supported Primitives", "Ukernels"], "terms": {"transit": 0, "from": [0, 1, 3, 4, 7, 9, 10, 12, 13, 14, 15, 16, 21, 23, 25, 26, 31, 33, 34, 35, 37, 40, 41, 42, 43, 45, 47, 48, 59, 71, 72, 83, 84, 85, 86, 89, 90, 91, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 115, 118, 119, 126, 127, 131, 134, 135, 136, 138, 139, 141, 143, 144, 151, 154, 155, 156, 160, 161, 170, 187, 190, 201, 202, 205, 206, 214, 215, 216, 217, 218, 221, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 269, 270, 280, 281, 285, 288, 289, 294, 299, 308, 312, 316, 321, 330, 331, 332, 333, 340, 341, 342, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 362, 363, 364, 369, 371, 372, 373, 379, 381, 383, 384, 385, 388, 390, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 540, 541, 542, 543], "intel": [0, 21, 26, 27, 33, 44, 49, 133, 134, 141, 149, 152, 153, 155, 162, 165, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 326, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 372, 379, 381, 383, 385, 387, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415], "mkl": 0, "dnn": [0, 29, 154], "onednn": [0, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 133, 135, 138, 141, 142, 143, 149, 151, 154, 155, 156, 157, 170, 230, 234, 239, 241, 250, 261, 289, 300, 306, 315, 318, 319, 323, 326, 328, 332, 334, 350, 360, 363, 364, 365, 373, 374, 375, 376, 377, 378, 394, 395, 417, 453, 456, 465, 466, 537], "understand": [0, 34, 170, 288, 394], "memori": [0, 3, 5, 8, 9, 10, 13, 14, 17, 19, 22, 23, 26, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 46, 48, 49, 126, 127, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 149, 152, 153, 155, 158, 159, 160, 161, 166, 169, 170, 183, 191, 192, 199, 200, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 285, 286, 287, 289, 290, 291, 294, 296, 297, 298, 299, 301, 302, 304, 305, 306, 308, 311, 312, 318, 319, 323, 324, 328, 332, 333, 334, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 412, 415, 416, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 538, 539, 540, 541, 542, 543, 546], "format": [0, 13, 14, 16, 17, 19, 23, 26, 31, 32, 33, 35, 39, 40, 41, 42, 43, 46, 48, 49, 63, 64, 65, 66, 67, 68, 83, 84, 100, 101, 136, 137, 139, 140, 141, 142, 143, 144, 146, 151, 152, 153, 155, 156, 169, 170, 186, 187, 188, 199, 200, 207, 218, 219, 221, 222, 225, 226, 228, 229, 230, 239, 243, 244, 249, 250, 256, 263, 275, 288, 294, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 371, 372, 374, 379, 380, 381, 383, 384, 390, 391, 406, 411, 412, 413, 415, 418, 422, 426, 434, 436, 438, 442, 444, 448, 458, 462, 468, 470, 474, 478, 482, 486, 490, 496, 498, 500, 506, 521, 526, 530, 541], "nuanc": [0, 14, 23, 29, 273, 306, 334], "int8": [0, 9, 13, 14, 23, 26, 29, 32, 39, 41, 43, 46, 49, 69, 102, 140, 143, 145, 220, 228, 230, 233, 243, 270, 273, 306, 334, 339, 360, 382, 512], "comput": [0, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 29, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 48, 49, 51, 53, 55, 59, 61, 63, 64, 65, 66, 67, 68, 74, 78, 80, 82, 84, 85, 86, 90, 91, 93, 97, 101, 112, 117, 119, 121, 123, 130, 131, 132, 134, 136, 137, 139, 142, 143, 144, 145, 147, 149, 151, 152, 153, 154, 155, 156, 158, 159, 163, 164, 176, 184, 189, 190, 197, 198, 214, 215, 216, 217, 223, 224, 225, 230, 231, 232, 233, 238, 239, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 270, 271, 273, 277, 280, 282, 283, 285, 288, 289, 293, 294, 296, 298, 299, 302, 303, 305, 306, 312, 316, 320, 321, 332, 333, 334, 340, 342, 344, 346, 349, 350, 353, 355, 357, 360, 361, 362, 363, 364, 368, 369, 371, 372, 379, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 426, 455, 458, 474, 504, 510, 518, 530, 532], "primit": [0, 17, 19, 21, 23, 25, 26, 29, 30, 31, 34, 39, 40, 41, 42, 43, 45, 46, 48, 56, 63, 113, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 154, 160, 169, 170, 183, 186, 187, 188, 189, 190, 194, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 268, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 326, 328, 332, 333, 339, 341, 343, 345, 346, 348, 349, 350, 351, 352, 354, 356, 358, 360, 363, 364, 365, 366, 370, 380, 381, 382, 384, 386, 389, 391, 393, 395, 397, 399, 401, 403, 405, 406, 408, 410, 412, 415, 416, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 540, 541, 542, 543], "cach": [0, 3, 16, 21, 40, 49, 139, 151, 152, 153, 154, 176, 184, 199, 200, 225, 227, 228, 240, 260, 265, 268, 289, 294, 310, 312, 319, 330, 332, 357, 374, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 455, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 499, 501, 505, 507, 510, 515, 516, 518, 520, 522, 525, 527, 529, 531, 535, 540, 542], "persist": [0, 138], "usthreadpool": [0, 26, 264, 268, 284, 334, 537], "base": [0, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 26, 27, 29, 30, 31, 39, 40, 41, 43, 44, 45, 46, 48, 86, 87, 96, 99, 100, 133, 134, 136, 137, 139, 140, 142, 143, 144, 145, 149, 150, 155, 156, 160, 161, 235, 256, 262, 306, 308, 334, 349, 371, 377, 378, 394, 406, 434, 456, 465, 503, 510, 514, 515, 519, 524, 536, 538], "thread": [0, 15, 16, 26, 33, 37, 139, 151, 205, 206, 306, 314, 334, 395, 537], "experiment": [0, 17, 21, 35, 156, 326], "featur": [0, 13, 17, 21, 22, 24, 27, 28, 36, 45, 46, 138, 154, 155, 156, 163, 164, 232, 233, 256, 270, 300, 350, 371, 406, 504], "sourc": [1, 9, 13, 14, 15, 21, 23, 25, 26, 31, 33, 34, 35, 40, 41, 42, 43, 45, 49, 137, 141, 142, 144, 149, 153, 156, 199, 200, 214, 215, 216, 221, 222, 223, 224, 226, 230, 231, 232, 233, 237, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 271, 272, 275, 276, 278, 279, 282, 283, 285, 286, 287, 288, 290, 291, 294, 296, 297, 298, 301, 302, 304, 326, 340, 342, 343, 344, 350, 351, 352, 353, 354, 355, 358, 360, 362, 368, 369, 371, 372, 379, 380, 381, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 407, 409, 411, 412, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 515, 517, 518, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543, 544], "option": [1, 15, 17, 18, 20, 27, 28, 33, 36, 39, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 138, 139, 143, 147, 150, 155, 190, 205, 206, 214, 247, 271, 288, 294, 300, 319, 323, 330, 331, 332, 333, 340, 365, 371, 390, 395, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 498, 500, 502, 506, 508, 514, 517, 518, 519, 521, 523, 526, 528, 530, 532, 536, 538, 539, 541, 543], "librari": [1, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16, 22, 24, 26, 27, 30, 33, 34, 36, 37, 40, 41, 42, 43, 44, 69, 71, 72, 91, 102, 132, 133, 134, 135, 136, 144, 147, 150, 155, 162, 165, 173, 175, 176, 183, 184, 189, 193, 194, 205, 206, 208, 209, 237, 239, 288, 289, 300, 305, 312, 314, 316, 318, 321, 322, 324, 332, 333, 368, 371, 372, 381, 394, 395, 413, 415, 452, 455, 456, 465, 496, 510, 534, 537], "more": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 21, 23, 26, 29, 33, 35, 38, 39, 41, 42, 43, 115, 126, 139, 140, 143, 146, 149, 150, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 225, 230, 270, 271, 272, 273, 275, 276, 278, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 336, 349, 357, 360, 365, 368, 371, 381, 395, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 540, 541, 542, 543, 544], "includ": [2, 3, 4, 5, 6, 7, 8, 14, 16, 17, 19, 21, 23, 26, 29, 34, 35, 37, 38, 39, 40, 43, 46, 47, 49, 139, 141, 143, 144, 145, 146, 147, 150, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 288, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 390, 391, 392, 393, 395, 396, 398, 400, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 540, 541, 542, 543, 544], "dnnl_graph": [2, 3, 4, 5, 6, 7, 8, 47, 174, 175, 176, 177, 179, 181, 183, 227, 228, 235, 240, 260, 262, 373, 374, 375, 376, 377, 378], "hpp": [2, 3, 4, 5, 6, 7, 8, 30, 35, 47, 133, 147, 150, 152, 153, 154, 158, 161, 162, 163, 167, 171, 174, 175, 176, 177, 179, 181, 183, 185, 186, 187, 188, 189, 191, 193, 195, 197, 199, 201, 203, 205, 208, 210, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 351, 352, 353, 355, 357, 359, 360, 362, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 540, 541, 542, 543], "public": [2, 3, 4, 5, 6, 7, 8, 47, 147, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543, 545], "allocator_handl": 2, "dnnl_graph_host_allocate_f": [2, 264, 311], "host_malloc": [2, 264, 311], "dnnl_graph_host_deallocate_f": [2, 264, 311], "host_fre": [2, 264, 311], "an": [2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155, 156, 167, 168, 170, 173, 175, 177, 178, 183, 187, 188, 189, 190, 193, 194, 195, 196, 199, 200, 207, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 269, 270, 273, 275, 279, 280, 281, 283, 286, 288, 289, 294, 299, 300, 301, 303, 304, 305, 306, 308, 311, 312, 314, 316, 318, 319, 320, 321, 323, 324, 326, 330, 331, 332, 333, 334, 336, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 388, 390, 391, 392, 394, 395, 396, 398, 399, 400, 402, 404, 406, 407, 409, 411, 413, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "accord": [2, 3, 4, 6, 7, 8, 14, 23, 34, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 141, 146, 183, 205, 206, 209, 264, 299, 312, 316, 318, 321, 349, 456, 490, 492], "given": [2, 7, 8, 10, 11, 12, 14, 19, 23, 26, 33, 35, 39, 41, 42, 43, 45, 46, 49, 50, 52, 70, 88, 92, 95, 96, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 122, 124, 125, 128, 131, 135, 141, 145, 151, 152, 154, 156, 183, 208, 209, 227, 228, 229, 235, 240, 250, 260, 262, 270, 288, 289, 294, 305, 311, 319, 321, 323, 332, 333, 359, 360, 365, 368, 371, 372, 373, 375, 377, 378, 413, 496, 498, 504, 512], "function": [2, 11, 12, 13, 14, 16, 17, 22, 24, 25, 27, 28, 29, 30, 31, 33, 35, 39, 40, 41, 44, 45, 46, 47, 48, 49, 60, 76, 87, 89, 96, 104, 105, 106, 107, 108, 109, 110, 133, 138, 139, 147, 150, 154, 155, 160, 183, 200, 208, 209, 227, 228, 230, 239, 240, 243, 250, 256, 260, 263, 268, 322, 328, 329, 360, 365, 366, 381, 395, 406, 415, 452, 453, 465, 496, 498, 510, 534, 537], "pointer": [2, 7, 8, 15, 22, 30, 33, 133, 151, 152, 153, 156, 199, 200, 225, 230, 234, 273, 288, 289, 294, 300, 305, 306, 308, 311, 319, 323, 324, 330, 331, 332, 333, 334, 357, 360, 365, 371, 452, 465, 496, 498, 510, 534, 538, 539], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 22, 26, 38, 39, 41, 42, 43, 44, 45, 46, 63, 64, 85, 86, 137, 138, 139, 143, 144, 151, 155, 156, 166, 169, 189, 190, 194, 197, 198, 199, 200, 230, 232, 233, 234, 239, 243, 250, 256, 263, 264, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 349, 350, 360, 363, 364, 365, 368, 371, 372, 381, 394, 406, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "A": [2, 3, 4, 5, 7, 8, 9, 15, 16, 26, 33, 34, 37, 38, 40, 42, 43, 45, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 83, 84, 93, 94, 102, 104, 105, 106, 107, 108, 109, 110, 126, 127, 136, 139, 141, 142, 143, 144, 152, 153, 154, 155, 156, 169, 186, 188, 193, 194, 201, 202, 207, 214, 225, 229, 230, 234, 239, 243, 247, 263, 264, 270, 271, 272, 273, 275, 276, 277, 278, 279, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 316, 318, 319, 320, 321, 323, 324, 328, 330, 332, 333, 334, 340, 350, 357, 359, 360, 365, 371, 372, 381, 390, 394, 413, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 453, 454, 458, 460, 462, 464, 465, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 506, 508, 510, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 534, 536, 538, 539, 541, 543], "malloc": [2, 218, 226, 236, 311, 319, 323, 330, 331, 348, 358, 367], "cpu": [2, 8, 14, 16, 17, 24, 26, 29, 30, 32, 33, 35, 40, 43, 49, 135, 136, 138, 139, 141, 143, 147, 151, 152, 153, 155, 156, 162, 163, 164, 165, 167, 168, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 261, 263, 264, 280, 288, 300, 306, 334, 339, 357, 358, 359, 360, 363, 364, 365, 371, 374, 376, 377, 378, 394, 395, 415, 417, 418, 496, 537, 544], "free": [2, 5, 34, 218, 226, 236, 311, 319, 323, 330, 331, 348, 358, 365, 367, 496], "default": [2, 3, 4, 5, 8, 9, 10, 11, 13, 15, 16, 20, 21, 24, 27, 28, 29, 30, 35, 36, 37, 40, 42, 44, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 115, 117, 118, 119, 120, 121, 123, 125, 128, 130, 133, 138, 139, 143, 154, 155, 158, 159, 163, 164, 171, 172, 191, 192, 205, 206, 210, 211, 212, 213, 270, 281, 299, 300, 313, 314, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 505, 506, 507, 508, 510, 512, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "constructor": [2, 3, 5, 8, 9, 16, 135, 143, 152, 153, 225, 350, 357, 371, 394, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 499, 500, 501, 502, 505, 506, 507, 508, 510, 512, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "compil": [3, 7, 15, 29, 33, 37, 40, 44, 91, 134, 138, 173, 175, 183, 209, 227, 228, 235, 240, 260, 261, 262, 265, 268, 300, 310, 311, 314, 318, 319, 321, 323, 324, 330, 331, 368, 371, 372, 394, 395, 413, 455, 456], "partit": [3, 4, 32, 36, 37, 38, 152, 153, 173, 175, 182, 225, 227, 228, 235, 240, 260, 262, 264, 268, 310, 311, 316, 318, 319, 323, 324, 329, 330, 331, 357, 455, 456], "object": [3, 4, 5, 6, 7, 8, 9, 13, 14, 17, 21, 26, 33, 34, 39, 42, 43, 46, 49, 135, 139, 142, 143, 151, 152, 153, 154, 156, 188, 200, 207, 214, 215, 216, 217, 223, 224, 225, 230, 231, 238, 239, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 285, 288, 289, 294, 297, 303, 305, 308, 316, 320, 324, 330, 331, 332, 333, 340, 342, 344, 346, 350, 353, 355, 357, 360, 362, 369, 376, 377, 379, 383, 385, 386, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "compiled_partition_handl": 3, "dnnl_graph_compiled_partition_t": [3, 264, 312, 321], "logical_tensor": [3, 6, 7, 8, 34, 155, 227, 228, 235, 240, 260, 262, 264, 318, 324, 329, 373, 374, 375, 376, 377, 378], "query_logical_tensor": [3, 34, 227, 228, 235, 240, 260, 262], "size_t": [3, 5, 6, 7, 152, 153, 218, 219, 221, 222, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 250, 260, 261, 262, 264, 280, 288, 289, 294, 308, 311, 312, 314, 315, 316, 318, 319, 320, 321, 323, 329, 348, 349, 351, 352, 357, 358, 360, 362, 363, 364, 365, 367, 372, 413, 452, 455, 456, 496, 498, 538], "tid": [3, 5, 264, 312, 318], "const": [3, 4, 5, 6, 7, 8, 13, 14, 30, 33, 133, 135, 139, 147, 152, 153, 154, 200, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 273, 275, 276, 278, 288, 289, 290, 294, 298, 299, 300, 303, 304, 305, 306, 308, 311, 312, 315, 316, 318, 319, 320, 321, 323, 324, 328, 329, 330, 331, 332, 333, 334, 340, 342, 344, 346, 348, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 364, 365, 367, 368, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547], "std": [3, 4, 5, 6, 7, 13, 14, 15, 33, 135, 147, 152, 153, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 295, 300, 305, 328, 330, 331, 332, 333, 340, 342, 344, 346, 349, 350, 351, 352, 353, 355, 357, 359, 360, 362, 363, 364, 365, 368, 369, 371, 372, 373, 374, 376, 377, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 540, 541, 542, 543], "vector": [3, 4, 5, 6, 7, 14, 26, 27, 28, 29, 33, 43, 44, 45, 63, 64, 135, 139, 151, 152, 153, 154, 162, 165, 199, 200, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 270, 289, 294, 295, 299, 304, 305, 328, 330, 331, 332, 333, 340, 342, 344, 346, 349, 350, 351, 352, 353, 355, 357, 359, 360, 362, 363, 364, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 538, 540, 541, 542, 543], "pair": [3, 24, 45, 152, 153, 225, 289, 294, 305, 312, 332, 333, 357, 455, 510, 518, 538], "get_inplace_port": 3, "void": [3, 4, 6, 8, 13, 14, 15, 16, 30, 33, 133, 147, 152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 288, 289, 292, 294, 295, 300, 305, 306, 308, 311, 313, 314, 319, 323, 324, 328, 329, 332, 333, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 547], "execut": [3, 9, 11, 13, 14, 15, 16, 21, 27, 30, 33, 34, 35, 40, 41, 42, 45, 47, 133, 149, 151, 152, 153, 154, 155, 183, 195, 196, 199, 200, 201, 202, 205, 206, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 280, 288, 289, 294, 295, 300, 303, 305, 306, 308, 311, 312, 318, 319, 321, 323, 324, 330, 331, 332, 333, 334, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 369, 370, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 452, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 496, 499, 501, 504, 505, 507, 510, 512, 516, 518, 520, 522, 525, 527, 529, 531, 533, 534, 535, 537, 538, 539, 540, 542], "stream": [3, 15, 21, 27, 29, 30, 33, 34, 35, 40, 41, 133, 150, 152, 153, 155, 162, 165, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 274, 288, 289, 294, 295, 305, 306, 312, 319, 323, 328, 330, 331, 332, 333, 334, 340, 342, 344, 346, 348, 349, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 369, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 457, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 496, 499, 501, 505, 507, 510, 516, 518, 520, 522, 525, 527, 529, 531, 533, 535, 537, 540, 542], "astream": [3, 264, 306, 330, 331, 332, 333, 334, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 499, 501, 505, 507, 510, 516, 518, 520, 522, 525, 527, 529, 531, 535, 540, 542], "tensor": [3, 5, 6, 7, 9, 13, 14, 15, 16, 17, 19, 23, 26, 31, 33, 35, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 52, 54, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 120, 122, 124, 125, 126, 128, 129, 131, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 161, 169, 170, 173, 175, 176, 184, 186, 187, 188, 190, 193, 207, 214, 215, 216, 217, 220, 223, 224, 225, 227, 228, 229, 231, 235, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 268, 270, 272, 275, 276, 277, 278, 285, 287, 288, 290, 294, 296, 298, 301, 304, 308, 310, 312, 316, 319, 320, 321, 323, 329, 330, 331, 340, 342, 344, 346, 348, 349, 350, 353, 355, 357, 362, 365, 366, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 410, 411, 412, 430, 433, 434, 436, 438, 440, 442, 444, 446, 455, 456, 496, 498, 500, 502, 504, 512, 538, 539], "input": [3, 4, 5, 6, 7, 14, 15, 17, 19, 21, 23, 25, 26, 29, 31, 33, 34, 37, 39, 40, 41, 42, 43, 44, 46, 48, 49, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 160, 161, 170, 187, 189, 190, 199, 200, 220, 221, 222, 224, 225, 227, 228, 230, 232, 233, 235, 239, 240, 243, 244, 250, 251, 255, 256, 260, 262, 263, 264, 270, 279, 288, 294, 299, 308, 312, 316, 318, 319, 320, 321, 323, 324, 330, 331, 348, 349, 350, 351, 352, 355, 357, 360, 363, 364, 365, 368, 371, 372, 373, 374, 375, 376, 377, 378, 381, 383, 394, 395, 396, 404, 406, 415, 422, 424, 454, 455, 456, 462, 464, 478, 480, 482, 484, 490, 492, 512, 539, 541, 543], "output": [3, 4, 5, 6, 7, 11, 13, 17, 19, 21, 23, 26, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 48, 49, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 153, 154, 156, 170, 187, 189, 190, 199, 200, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 235, 237, 239, 240, 243, 244, 254, 255, 256, 260, 261, 262, 263, 264, 270, 271, 272, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 348, 349, 350, 351, 352, 355, 357, 358, 359, 360, 363, 364, 365, 368, 371, 372, 373, 374, 375, 376, 377, 378, 381, 383, 394, 395, 402, 403, 404, 406, 413, 415, 422, 424, 454, 455, 456, 462, 464, 478, 480, 482, 484, 490, 492, 504, 511, 512, 538, 539, 541, 543], "empti": [3, 4, 5, 8, 9, 13, 15, 21, 41, 100, 104, 105, 106, 107, 108, 109, 110, 155, 156, 166, 169, 185, 186, 188, 207, 270, 289, 294, 308, 312, 316, 319, 323, 332, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "queri": [3, 13, 14, 15, 16, 24, 26, 27, 28, 30, 33, 34, 40, 41, 43, 48, 133, 135, 143, 151, 152, 153, 154, 156, 183, 188, 195, 196, 200, 205, 206, 207, 208, 209, 221, 222, 225, 226, 227, 228, 235, 240, 260, 262, 280, 288, 289, 292, 294, 295, 305, 312, 313, 314, 328, 332, 333, 351, 352, 357, 358, 371, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 455, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 498, 500, 502, 506, 508, 510, 514, 515, 517, 518, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "logic": [3, 5, 6, 7, 8, 16, 17, 23, 26, 31, 33, 38, 39, 41, 46, 48, 72, 132, 134, 136, 137, 141, 144, 145, 146, 151, 154, 170, 173, 175, 184, 187, 199, 200, 227, 228, 235, 239, 240, 260, 262, 264, 268, 270, 285, 288, 310, 312, 316, 320, 321, 324, 371, 373, 374, 375, 376, 377, 378, 456, 498, 512], "id": [3, 5, 6, 7, 20, 25, 34, 135, 199, 200, 227, 228, 235, 240, 241, 242, 260, 261, 262, 264, 289, 312, 318, 320, 321, 332, 372, 379, 413, 455, 456, 515], "If": [3, 5, 9, 13, 15, 17, 20, 24, 25, 35, 37, 39, 41, 46, 54, 57, 61, 64, 65, 68, 69, 71, 72, 74, 102, 104, 105, 106, 107, 108, 109, 110, 112, 115, 117, 123, 130, 134, 143, 144, 152, 154, 155, 189, 190, 200, 227, 228, 240, 260, 270, 285, 288, 289, 292, 294, 300, 308, 312, 313, 314, 318, 349, 376, 377, 395, 474, 476, 498, 504, 519, 537, 538], "doesn": [3, 5, 8, 27, 49, 133, 141, 152, 153, 170, 181, 182, 225, 288, 289, 299, 305, 312, 318, 324, 332, 333, 357, 371, 373, 374, 376, 377, 381, 415, 456, 490, 492, 496], "t": [3, 5, 6, 7, 8, 24, 25, 27, 30, 40, 42, 46, 49, 85, 86, 133, 139, 141, 143, 152, 153, 155, 156, 160, 161, 170, 181, 182, 214, 218, 221, 222, 225, 226, 230, 232, 233, 234, 245, 247, 256, 264, 270, 273, 288, 289, 299, 305, 306, 309, 312, 318, 324, 328, 332, 333, 334, 340, 348, 351, 352, 357, 358, 360, 365, 371, 373, 374, 376, 377, 381, 385, 390, 406, 413, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "belong": [3, 139, 270, 312, 332, 333, 510, 518, 537], "ani": [3, 7, 9, 10, 12, 13, 14, 16, 17, 19, 21, 23, 26, 27, 28, 31, 33, 34, 37, 40, 41, 43, 44, 45, 48, 49, 50, 51, 60, 61, 75, 76, 77, 78, 81, 82, 83, 84, 88, 96, 97, 103, 111, 113, 114, 116, 122, 124, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 155, 156, 158, 167, 171, 173, 175, 181, 182, 186, 187, 188, 207, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 288, 294, 300, 308, 312, 318, 321, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 367, 369, 371, 379, 381, 382, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 416, 422, 424, 436, 438, 440, 442, 444, 446, 452, 456, 462, 464, 465, 468, 470, 472, 478, 480, 482, 484, 490, 492, 496, 498, 510, 512, 517, 523, 534, 541, 543], "except": [3, 4, 5, 9, 10, 16, 19, 21, 22, 23, 33, 62, 83, 135, 143, 152, 153, 154, 156, 158, 162, 165, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 280, 300, 333, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 371, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 453, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 506, 508, 510, 517, 519, 521, 523, 526, 528, 530, 532, 534, 536, 538, 539, 541, 543, 545], "rais": [3, 5], "api": [3, 4, 5, 7, 9, 11, 12, 13, 15, 16, 17, 19, 23, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 46, 47, 48, 49, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 189, 190, 199, 218, 219, 220, 221, 222, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 239, 240, 241, 256, 260, 261, 262, 269, 270, 273, 280, 281, 288, 294, 299, 300, 312, 314, 315, 316, 318, 321, 326, 332, 333, 334, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 418, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 453, 456, 458, 460, 462, 464, 465, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 517, 519, 521, 523, 524, 526, 528, 530, 532, 534, 536, 541, 543], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 170, 177, 178, 181, 182, 183, 187, 190, 200, 205, 206, 208, 209, 217, 224, 225, 234, 239, 243, 250, 256, 263, 270, 271, 273, 276, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 294, 295, 299, 300, 301, 305, 306, 308, 311, 312, 313, 314, 316, 318, 319, 320, 321, 323, 324, 326, 330, 331, 332, 333, 334, 336, 346, 348, 349, 350, 351, 352, 355, 357, 358, 360, 363, 364, 365, 368, 371, 372, 373, 374, 376, 377, 381, 394, 395, 406, 413, 415, 422, 424, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 453, 455, 456, 462, 464, 465, 470, 472, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 510, 512, 514, 515, 518, 519, 523, 526, 528, 534, 536, 537, 538, 541, 543], "uniqu": [3, 5, 6, 7, 14, 34, 104, 105, 106, 107, 108, 109, 110, 233, 312, 318, 320, 456, 504], "requir": [3, 5, 9, 13, 14, 15, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 34, 35, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 177, 183, 189, 190, 199, 200, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 271, 279, 288, 289, 294, 295, 305, 308, 312, 318, 332, 333, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 368, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 422, 424, 426, 428, 458, 460, 462, 464, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 498, 500, 502, 515, 538, 541, 543], "return": [3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 21, 22, 27, 28, 34, 38, 41, 42, 45, 48, 115, 126, 127, 133, 135, 136, 147, 152, 153, 154, 181, 182, 183, 200, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 330, 331, 332, 333, 334, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 368, 369, 371, 372, 373, 374, 376, 377, 379, 381, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 453, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 515, 517, 518, 519, 521, 523, 524, 526, 528, 530, 532, 534, 536, 537, 538, 539, 541, 543], "hint": [3, 9, 21, 41, 163, 164, 221, 222, 226, 256, 300, 312, 351, 352, 358, 406, 417, 422, 426, 436, 438, 442, 444, 448, 455, 458, 462, 468, 470, 474, 478, 482, 486, 490, 500, 506, 521, 526, 530, 541], "place": [3, 13, 17, 19, 20, 22, 31, 39, 41, 46, 126, 127, 134, 145, 146, 153, 193, 194, 215, 216, 217, 238, 239, 242, 245, 250, 251, 252, 258, 270, 271, 275, 279, 282, 285, 300, 304, 312, 342, 343, 344, 345, 346, 349, 363, 364, 369, 371, 379, 380, 385, 386, 396, 398, 409, 410, 428, 434, 455, 460, 504, 535], "It": [3, 4, 13, 14, 15, 16, 19, 21, 24, 27, 29, 33, 34, 35, 38, 40, 41, 42, 45, 47, 49, 69, 71, 72, 83, 85, 87, 99, 102, 113, 131, 132, 133, 134, 138, 152, 153, 154, 155, 176, 181, 182, 184, 188, 207, 225, 240, 271, 282, 285, 288, 289, 294, 295, 300, 312, 316, 332, 357, 360, 371, 372, 373, 374, 376, 377, 394, 395, 413, 422, 426, 436, 438, 442, 444, 448, 455, 456, 458, 462, 468, 470, 474, 478, 482, 486, 490, 496, 498, 500, 506, 510, 519, 521, 526, 530, 541], "indic": [3, 4, 5, 13, 16, 25, 26, 29, 33, 34, 38, 42, 48, 63, 64, 85, 86, 104, 105, 106, 107, 108, 109, 110, 136, 137, 143, 144, 154, 169, 170, 186, 199, 200, 228, 233, 243, 251, 263, 270, 276, 278, 288, 290, 299, 312, 321, 365, 371, 373, 374, 376, 377, 381, 396, 415, 422, 424, 436, 438, 440, 442, 444, 446, 455, 462, 464, 478, 480, 482, 484, 490, 492, 496, 498, 500, 502, 504, 512, 541, 543], "can": [3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 66, 70, 85, 87, 89, 91, 92, 95, 98, 115, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 154, 155, 158, 170, 177, 178, 187, 188, 205, 206, 207, 210, 234, 239, 243, 250, 256, 263, 270, 271, 272, 275, 276, 277, 278, 279, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 312, 313, 314, 318, 321, 332, 360, 361, 365, 368, 371, 372, 373, 374, 376, 377, 381, 382, 394, 395, 406, 413, 415, 416, 428, 455, 460, 465, 490, 492, 496, 498, 503, 504, 510, 512, 515, 543], "share": [3, 15, 21, 30, 34, 37, 42, 133, 137, 139, 143, 154, 191, 192, 212, 213, 221, 222, 226, 312, 351, 352, 358, 455], "same": [3, 5, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 46, 48, 49, 56, 58, 62, 63, 66, 85, 86, 126, 131, 134, 135, 137, 140, 141, 142, 143, 144, 146, 149, 152, 153, 154, 158, 159, 170, 187, 189, 190, 200, 205, 206, 221, 222, 223, 225, 226, 233, 239, 249, 256, 270, 271, 272, 273, 276, 278, 279, 282, 285, 288, 289, 290, 292, 294, 305, 306, 312, 313, 318, 320, 332, 333, 334, 349, 350, 351, 352, 353, 357, 358, 363, 364, 368, 371, 394, 395, 406, 428, 436, 438, 440, 442, 444, 446, 455, 456, 460, 465, 498, 500, 502, 504, 510, 515, 518], "buffer": [3, 8, 15, 16, 22, 33, 34, 41, 151, 152, 153, 191, 192, 199, 200, 205, 206, 212, 213, 214, 215, 216, 217, 219, 220, 223, 224, 225, 227, 228, 231, 232, 233, 235, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 288, 289, 305, 308, 312, 318, 324, 332, 333, 340, 342, 344, 346, 349, 353, 355, 357, 362, 364, 369, 371, 372, 379, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411, 413, 455, 496, 498, 538, 539], "In": [3, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 39, 40, 41, 42, 43, 45, 46, 49, 63, 64, 91, 133, 134, 135, 139, 141, 142, 143, 145, 146, 150, 151, 152, 154, 155, 170, 187, 197, 198, 199, 210, 214, 217, 223, 224, 227, 228, 230, 235, 238, 240, 244, 247, 252, 260, 262, 270, 271, 282, 285, 288, 289, 295, 305, 312, 324, 332, 333, 340, 342, 343, 344, 345, 346, 349, 350, 353, 355, 360, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 385, 386, 390, 394, 395, 398, 409, 410, 413, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 455, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 514, 517, 519, 521, 523, 526, 528, 530, 532, 536, 538, 539, 541, 543], "help": [3, 21, 34, 75, 132, 227, 228, 235, 240, 260, 262, 312, 455], "reduc": [3, 13, 14, 15, 16, 21, 24, 26, 40, 41, 42, 49, 104, 105, 106, 107, 108, 109, 110, 135, 138, 140, 149, 190, 205, 206, 230, 312, 360, 361, 455, 504, 549], "footprint": [3, 15, 146, 149, 205, 206, 312, 455], "improv": [3, 13, 17, 22, 24, 29, 31, 35, 39, 41, 42, 46, 56, 85, 86, 154, 230, 270, 312, 326, 360, 455, 504], "local": [3, 15, 134, 151, 160, 161, 199, 200, 218, 219, 221, 222, 226, 246, 286, 312, 339, 348, 351, 352, 358, 389, 394, 455, 485, 486, 487, 488, 515, 548], "But": [3, 21, 33, 35, 45, 230, 312, 318, 360, 373, 374, 375, 376, 377, 378, 455], "sinc": [3, 13, 14, 25, 33, 38, 45, 137, 152, 153, 154, 155, 156, 170, 190, 225, 230, 238, 239, 243, 252, 270, 295, 312, 357, 360, 369, 371, 381, 394, 395, 398, 415, 455], "mai": [3, 7, 12, 13, 16, 19, 20, 21, 22, 26, 28, 29, 30, 31, 34, 36, 37, 38, 41, 45, 47, 126, 127, 133, 134, 135, 139, 140, 141, 149, 152, 153, 155, 156, 176, 177, 178, 184, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 273, 277, 288, 294, 299, 300, 306, 312, 318, 321, 334, 340, 342, 344, 346, 348, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 371, 379, 381, 383, 385, 387, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 422, 424, 436, 438, 440, 442, 444, 446, 455, 462, 464, 468, 470, 472, 478, 480, 482, 484, 490, 492, 496, 498, 504, 511, 517, 523, 541, 543, 544], "have": [3, 4, 7, 9, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 29, 31, 33, 34, 35, 40, 41, 43, 45, 46, 49, 63, 126, 127, 131, 134, 135, 137, 138, 140, 141, 146, 149, 151, 154, 156, 256, 270, 272, 276, 277, 278, 288, 289, 290, 294, 299, 300, 304, 305, 312, 316, 318, 321, 332, 333, 360, 368, 371, 381, 394, 406, 413, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 455, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 515, 517, 518, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "global": [3, 15, 138, 189, 190, 230, 234, 328, 329, 339, 360, 365, 455, 538], "view": [3, 44, 126, 127, 143, 232, 233, 256, 312, 363, 364, 406, 455], "user": [3, 4, 5, 7, 8, 9, 12, 13, 14, 16, 17, 21, 22, 23, 24, 26, 30, 33, 34, 35, 39, 40, 41, 43, 45, 46, 49, 85, 133, 135, 136, 138, 139, 141, 142, 146, 147, 151, 152, 153, 154, 181, 182, 189, 190, 200, 205, 206, 214, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 235, 239, 240, 244, 247, 250, 252, 256, 260, 262, 285, 288, 289, 294, 305, 312, 316, 318, 321, 324, 332, 333, 340, 348, 349, 350, 351, 352, 355, 357, 358, 363, 364, 365, 368, 371, 372, 373, 374, 375, 376, 377, 378, 383, 390, 394, 395, 398, 406, 413, 455, 474, 476, 496, 503, 510, 537], "": [3, 5, 6, 9, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 30, 31, 33, 34, 37, 38, 39, 40, 41, 43, 45, 46, 47, 49, 85, 86, 93, 94, 126, 132, 133, 139, 141, 145, 149, 152, 153, 154, 176, 184, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 270, 288, 289, 294, 295, 312, 314, 318, 320, 332, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 376, 377, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 455, 496, 504, 510], "applic": [3, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 24, 26, 28, 29, 33, 34, 35, 36, 37, 40, 41, 45, 47, 134, 135, 138, 150, 152, 153, 154, 155, 156, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 288, 300, 312, 326, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 455, 498], "possibl": [3, 14, 16, 17, 19, 21, 23, 27, 28, 30, 31, 39, 40, 41, 42, 45, 46, 49, 133, 134, 140, 143, 145, 146, 151, 154, 256, 270, 271, 276, 278, 279, 281, 282, 283, 285, 286, 288, 290, 291, 294, 296, 298, 299, 300, 301, 302, 308, 312, 371, 394, 406, 424, 426, 428, 436, 438, 440, 444, 446, 450, 455, 458, 460, 464, 472, 474, 476, 480, 484, 488, 492, 498, 502, 508, 517, 523, 528, 532, 541, 543], "i": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 118, 119, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 160, 161, 166, 169, 170, 173, 174, 175, 177, 178, 181, 182, 183, 186, 187, 188, 189, 190, 194, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 271, 272, 273, 276, 278, 279, 282, 285, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 326, 330, 331, 332, 333, 334, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 456, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 515, 517, 519, 521, 523, 526, 528, 530, 532, 534, 536, 537, 538, 539, 541, 543], "other": [3, 5, 9, 13, 15, 16, 17, 19, 21, 23, 25, 26, 27, 28, 29, 30, 33, 37, 40, 41, 43, 44, 45, 47, 48, 49, 133, 134, 135, 136, 139, 141, 143, 144, 145, 146, 152, 153, 154, 155, 156, 170, 181, 182, 187, 205, 206, 220, 221, 225, 231, 232, 233, 256, 288, 294, 300, 312, 316, 318, 320, 326, 349, 351, 357, 360, 362, 364, 365, 371, 387, 394, 395, 406, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "thi": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 58, 59, 63, 69, 85, 86, 102, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 166, 169, 170, 190, 194, 197, 198, 205, 206, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 271, 273, 275, 282, 285, 288, 289, 294, 297, 299, 300, 305, 306, 312, 314, 315, 318, 319, 321, 323, 324, 332, 333, 334, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 453, 455, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 503, 504, 506, 508, 514, 517, 519, 521, 523, 526, 528, 530, 532, 536, 537, 538, 539, 541, 543], "case": [3, 5, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 53, 73, 80, 87, 100, 101, 103, 111, 126, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 149, 152, 153, 154, 155, 170, 214, 221, 222, 224, 225, 230, 234, 239, 244, 247, 252, 270, 271, 276, 278, 282, 285, 288, 289, 290, 294, 300, 305, 312, 318, 321, 324, 332, 333, 340, 349, 351, 352, 355, 357, 360, 365, 368, 371, 372, 373, 374, 375, 376, 377, 378, 383, 390, 394, 398, 413, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 453, 455, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 514, 517, 519, 521, 523, 526, 528, 530, 532, 536, 537, 538, 539, 541, 543], "should": [3, 5, 7, 11, 13, 14, 15, 16, 17, 19, 21, 23, 24, 26, 31, 33, 34, 38, 39, 40, 41, 43, 45, 46, 48, 49, 52, 54, 55, 57, 58, 62, 64, 65, 68, 70, 71, 72, 83, 84, 92, 95, 98, 104, 105, 106, 107, 108, 109, 110, 115, 128, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 205, 206, 217, 218, 225, 226, 232, 234, 239, 243, 256, 270, 273, 280, 288, 295, 299, 300, 306, 308, 311, 312, 316, 318, 319, 321, 323, 326, 330, 331, 334, 346, 348, 349, 350, 357, 358, 365, 368, 371, 372, 373, 374, 375, 376, 377, 378, 381, 394, 406, 413, 422, 424, 434, 455, 462, 464, 465, 478, 480, 482, 484, 490, 492, 496, 503, 504, 512, 514, 519, 536, 541, 543], "take": [3, 12, 13, 14, 16, 21, 24, 26, 27, 28, 29, 31, 33, 37, 38, 40, 41, 44, 67, 68, 69, 71, 72, 91, 102, 104, 105, 106, 107, 108, 109, 110, 115, 135, 137, 138, 139, 152, 153, 154, 155, 225, 239, 271, 282, 285, 294, 300, 312, 346, 348, 349, 357, 371, 373, 375, 376, 377, 378, 455], "pass": [3, 4, 9, 10, 12, 13, 14, 15, 16, 17, 21, 22, 26, 30, 33, 34, 35, 37, 38, 39, 40, 41, 46, 47, 48, 49, 85, 126, 133, 136, 137, 139, 141, 142, 143, 152, 153, 155, 156, 170, 189, 190, 218, 219, 225, 226, 230, 234, 236, 239, 256, 261, 270, 276, 278, 283, 287, 288, 289, 294, 300, 308, 312, 316, 318, 332, 333, 348, 349, 350, 357, 358, 360, 365, 367, 368, 371, 372, 394, 406, 413, 438, 440, 444, 446, 452, 454, 455, 465, 496, 504, 510, 512, 518, 534, 537, 538], "differ": [3, 5, 13, 14, 15, 16, 19, 21, 22, 24, 29, 30, 33, 34, 36, 42, 45, 48, 49, 52, 66, 70, 91, 92, 95, 98, 113, 125, 126, 127, 128, 135, 139, 140, 141, 143, 149, 152, 153, 154, 160, 161, 176, 177, 178, 184, 205, 206, 214, 221, 222, 224, 225, 226, 244, 247, 252, 256, 271, 280, 282, 285, 288, 308, 312, 318, 340, 346, 349, 351, 352, 355, 357, 358, 360, 365, 371, 373, 374, 376, 377, 383, 390, 394, 395, 398, 406, 434, 455, 465, 498, 514, 519, 536], "avoid": [3, 14, 19, 21, 23, 28, 29, 33, 40, 41, 45, 55, 56, 57, 138, 140, 152, 153, 217, 221, 222, 225, 226, 312, 346, 351, 352, 357, 358, 394, 455], "overwrit": [3, 19, 24, 26, 43, 49, 140, 142, 146, 312, 455], "which": [3, 6, 9, 10, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 53, 62, 63, 69, 71, 72, 85, 86, 87, 89, 90, 102, 104, 105, 106, 107, 108, 109, 110, 118, 119, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 145, 149, 151, 152, 153, 154, 155, 170, 173, 175, 187, 225, 227, 228, 232, 233, 234, 235, 237, 239, 240, 243, 249, 250, 256, 260, 262, 270, 271, 273, 276, 278, 279, 288, 290, 294, 297, 300, 301, 302, 303, 306, 311, 312, 314, 318, 319, 320, 324, 334, 357, 363, 364, 365, 368, 371, 372, 373, 374, 376, 377, 381, 394, 395, 406, 413, 422, 426, 434, 436, 438, 442, 444, 448, 455, 456, 458, 462, 465, 468, 470, 474, 478, 482, 486, 490, 496, 500, 506, 515, 519, 521, 526, 528, 530, 532, 536, 541], "probabl": [3, 13, 312, 455], "caus": [3, 10, 40, 41, 312, 452, 455, 465, 496, 510, 534], "unexpect": [3, 22, 229, 237, 261, 273, 306, 312, 334, 359, 368, 413, 455], "incorrect": [3, 15, 21, 155, 156, 183, 208, 209, 236, 250, 312, 367, 371, 455], "result": [3, 9, 11, 13, 14, 15, 17, 19, 21, 22, 25, 26, 28, 29, 31, 34, 39, 41, 42, 43, 45, 46, 48, 49, 104, 105, 106, 107, 108, 109, 110, 125, 135, 136, 137, 139, 140, 142, 145, 149, 152, 153, 154, 156, 190, 200, 201, 202, 220, 225, 227, 228, 230, 232, 233, 234, 237, 239, 240, 241, 260, 261, 264, 270, 273, 288, 294, 306, 312, 334, 349, 350, 357, 360, 361, 365, 395, 455, 498, 504, 511, 512, 515], "list": [3, 6, 7, 21, 31, 40, 41, 47, 53, 54, 63, 64, 65, 66, 67, 68, 69, 83, 84, 93, 94, 102, 104, 105, 106, 107, 108, 109, 110, 126, 127, 134, 139, 143, 155, 156, 162, 165, 264, 300, 312, 319, 321, 323, 339, 371, 373, 374, 376, 377], "run": [3, 9, 11, 15, 16, 17, 20, 21, 39, 41, 42, 44, 45, 49, 55, 134, 152, 153, 156, 205, 206, 220, 225, 227, 228, 232, 233, 234, 235, 240, 243, 250, 260, 262, 263, 264, 284, 289, 305, 306, 317, 319, 323, 330, 331, 350, 357, 360, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 394, 395, 413, 415], "over": [3, 15, 21, 23, 27, 28, 35, 41, 42, 44, 46, 54, 62, 64, 65, 68, 85, 86, 104, 105, 106, 107, 108, 109, 110, 138, 139, 143, 145, 152, 153, 154, 155, 225, 272, 275, 300, 302, 330, 331, 357, 373, 376, 377, 434, 514, 530, 532], "graph_handl": 4, "engin": [4, 7, 8, 9, 13, 14, 21, 24, 26, 29, 30, 32, 33, 34, 40, 41, 43, 49, 113, 133, 139, 143, 152, 153, 155, 168, 183, 199, 200, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 270, 271, 272, 274, 275, 276, 278, 279, 282, 283, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 310, 312, 314, 316, 319, 321, 323, 324, 328, 329, 330, 331, 332, 333, 334, 339, 340, 342, 344, 346, 348, 349, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 369, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 418, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 451, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 500, 502, 504, 506, 508, 510, 512, 514, 515, 517, 518, 519, 521, 523, 524, 526, 528, 530, 532, 534, 536, 541, 543], "kind": [4, 6, 7, 9, 13, 17, 21, 24, 26, 30, 31, 33, 34, 39, 42, 43, 46, 133, 136, 137, 142, 143, 144, 145, 152, 153, 155, 156, 160, 161, 168, 169, 180, 186, 188, 191, 192, 194, 195, 196, 197, 198, 199, 200, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 271, 272, 276, 278, 279, 280, 282, 283, 285, 286, 288, 289, 290, 291, 294, 295, 296, 298, 299, 301, 302, 305, 314, 315, 316, 320, 321, 328, 329, 332, 333, 340, 342, 344, 346, 348, 349, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 540, 541, 542, 543], "engine_kind": [4, 24, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 231, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 316, 340, 342, 344, 346, 348, 349, 351, 352, 353, 355, 362, 369, 371, 379, 381, 383, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415], "fpmath_mod": [4, 12, 152, 155, 263, 281, 300, 328, 415, 512], "mode": [4, 9, 11, 15, 17, 19, 21, 26, 29, 31, 33, 39, 42, 46, 48, 55, 69, 71, 72, 83, 84, 102, 135, 136, 137, 138, 139, 142, 143, 145, 156, 158, 159, 171, 172, 177, 178, 197, 198, 205, 206, 214, 215, 217, 246, 247, 261, 263, 264, 268, 270, 274, 279, 287, 300, 316, 328, 339, 340, 341, 342, 343, 346, 355, 356, 365, 369, 370, 379, 380, 385, 386, 388, 389, 390, 391, 394, 396, 397, 398, 399, 404, 405, 409, 410, 413, 415, 417, 465, 512], "statu": [4, 7, 21, 22, 152, 153, 209, 220, 221, 225, 231, 233, 239, 241, 261, 264, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 314, 316, 318, 319, 320, 321, 323, 324, 328, 329, 334, 351, 357, 362, 364, 371, 413, 453], "add_op": [4, 34, 227, 228, 240, 260, 316, 373, 374, 376, 377], "op": [4, 7, 9, 14, 29, 32, 33, 37, 40, 41, 42, 54, 59, 84, 85, 86, 132, 152, 153, 156, 178, 181, 182, 183, 189, 190, 209, 215, 216, 217, 220, 224, 225, 227, 228, 235, 240, 243, 244, 248, 250, 254, 260, 262, 263, 264, 268, 270, 273, 306, 308, 310, 316, 321, 329, 334, 339, 342, 343, 344, 345, 350, 355, 356, 357, 373, 374, 376, 377, 381, 383, 384, 392, 393, 395, 402, 415, 504, 512, 538], "bool": [4, 5, 7, 29, 53, 54, 61, 74, 85, 86, 91, 100, 104, 105, 106, 107, 108, 109, 110, 112, 117, 123, 126, 130, 147, 152, 153, 154, 225, 229, 230, 234, 235, 249, 256, 262, 264, 288, 328, 357, 359, 360, 365, 375, 378, 394, 406, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "allow_except": 4, "true": [4, 5, 6, 7, 11, 12, 41, 47, 49, 53, 54, 61, 74, 85, 86, 91, 100, 104, 105, 106, 107, 108, 109, 110, 112, 117, 123, 126, 130, 134, 152, 153, 154, 225, 227, 228, 240, 256, 260, 263, 318, 357, 406, 415, 465, 498, 514, 519, 537], "final": [4, 13, 14, 15, 21, 31, 34, 42, 45, 151, 152, 153, 154, 160, 170, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 238, 239, 240, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 264, 288, 308, 316, 318, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 360, 362, 368, 369, 371, 372, 373, 374, 376, 377, 379, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413], "is_fin": 4, "get_partit": [4, 7, 34, 227, 228, 240, 260, 321, 373, 374, 376, 377], "polici": [4, 7, 15, 182, 205, 206, 264, 316, 376, 377], "fusion": [4, 13, 16, 17, 33, 35, 49, 181, 182, 250, 265, 270, 381, 382, 415, 416], "creat": [4, 7, 8, 9, 13, 14, 15, 17, 19, 20, 21, 23, 26, 30, 31, 33, 34, 39, 40, 41, 43, 46, 48, 49, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 188, 199, 200, 205, 206, 207, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 270, 271, 272, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 316, 318, 319, 321, 323, 324, 330, 331, 332, 333, 334, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 496, 498, 504, 512, 519, 534], "new": [4, 7, 16, 24, 33, 34, 42, 147, 152, 153, 160, 161, 170, 194, 225, 288, 292, 312, 313, 314, 316, 318, 321, 324, 357, 373, 376, 377, 465, 498], "float": [4, 9, 10, 13, 14, 22, 26, 33, 41, 42, 49, 56, 57, 69, 102, 141, 142, 149, 152, 153, 156, 158, 159, 166, 171, 172, 174, 185, 200, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 268, 270, 271, 273, 274, 279, 282, 285, 286, 288, 296, 298, 299, 300, 304, 306, 308, 316, 320, 328, 334, 339, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 374, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 504, 506, 508, 512, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 538, 541, 543], "point": [4, 9, 10, 13, 14, 19, 21, 22, 26, 33, 38, 41, 42, 49, 69, 71, 102, 139, 141, 142, 149, 151, 152, 156, 158, 159, 166, 171, 172, 174, 185, 200, 230, 243, 263, 268, 270, 274, 288, 294, 299, 300, 316, 320, 339, 350, 360, 361, 363, 364, 365, 381, 382, 395, 415, 416, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 504, 512, 514, 541, 543], "math": [4, 9, 29, 156, 171, 172, 222, 232, 233, 256, 268, 270, 274, 300, 316, 339, 352, 406], "all": [4, 5, 7, 9, 12, 13, 14, 15, 19, 20, 21, 23, 26, 29, 30, 31, 33, 35, 37, 38, 40, 42, 45, 49, 59, 62, 64, 66, 67, 68, 91, 104, 105, 106, 107, 108, 109, 110, 115, 126, 134, 137, 138, 139, 142, 143, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 177, 178, 197, 198, 200, 205, 206, 225, 227, 228, 232, 233, 234, 235, 239, 240, 243, 250, 260, 262, 263, 270, 271, 281, 282, 285, 288, 289, 295, 299, 300, 303, 308, 314, 316, 318, 319, 332, 357, 360, 363, 364, 365, 371, 372, 373, 374, 375, 376, 377, 378, 381, 395, 413, 415, 422, 424, 426, 436, 438, 440, 442, 444, 446, 458, 462, 464, 468, 470, 472, 474, 478, 480, 482, 484, 490, 492, 498, 503, 510, 514, 515, 534, 538, 541, 543], "inherit": [4, 45, 250, 288, 316, 395], "add": [4, 6, 12, 19, 21, 26, 33, 37, 40, 43, 45, 47, 49, 53, 54, 58, 63, 64, 65, 66, 67, 68, 93, 94, 140, 142, 152, 153, 155, 160, 161, 179, 189, 190, 203, 204, 219, 225, 227, 228, 232, 240, 250, 260, 267, 288, 316, 320, 349, 350, 357, 363, 364, 373, 374, 395, 498], "dag": [4, 316], "failur": [4, 155, 156, 177, 288, 316, 373, 376, 377, 453, 498], "oper": [4, 5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 19, 21, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 161, 177, 178, 179, 180, 181, 182, 183, 190, 208, 209, 210, 217, 225, 227, 228, 235, 239, 240, 243, 246, 250, 260, 262, 263, 265, 270, 271, 272, 273, 279, 282, 285, 288, 289, 294, 296, 298, 306, 308, 316, 318, 319, 320, 321, 328, 332, 334, 342, 343, 346, 349, 350, 357, 360, 368, 371, 372, 373, 374, 376, 377, 381, 382, 388, 394, 395, 413, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543, 547], "ha": [4, 5, 13, 15, 16, 17, 18, 21, 22, 25, 29, 33, 34, 35, 38, 42, 45, 85, 86, 87, 134, 135, 137, 138, 139, 149, 152, 153, 155, 156, 170, 187, 190, 224, 225, 233, 234, 270, 288, 289, 292, 294, 300, 305, 313, 316, 318, 332, 333, 349, 355, 357, 360, 363, 365, 368, 371, 372, 394, 395, 413, 456, 498, 514], "alreadi": [4, 41, 139, 152, 292, 313, 316, 371, 394, 514], "been": [4, 13, 21, 149, 270, 288, 289, 294, 305, 316, 332, 333, 395, 496, 514], "ad": [4, 6, 15, 26, 34, 40, 45, 55, 56, 57, 58, 85, 86, 154, 170, 177, 250, 316, 320, 373, 374, 376, 377, 395], "cannot": [4, 9, 13, 30, 33, 34, 41, 45, 49, 113, 135, 136, 141, 143, 150, 154, 155, 183, 188, 205, 206, 207, 209, 230, 288, 300, 316, 360, 452, 465, 496, 498, 510, 519, 534], "schema": [4, 183, 188, 207, 209, 316], "check": [4, 7, 9, 14, 17, 19, 26, 31, 34, 39, 41, 43, 48, 49, 113, 136, 143, 144, 155, 156, 177, 178, 218, 220, 221, 226, 227, 228, 230, 233, 234, 236, 237, 239, 240, 241, 243, 260, 261, 264, 270, 288, 289, 294, 314, 316, 321, 332, 348, 349, 351, 358, 360, 364, 365, 367, 371, 372, 373, 374, 375, 376, 377, 378, 381, 394, 434, 453, 465, 498, 510, 512, 514, 519, 524, 536], "eg": [4, 5, 181, 182, 263, 316, 318, 415], "number": [4, 5, 7, 12, 13, 14, 15, 17, 19, 21, 22, 25, 26, 29, 33, 34, 37, 39, 40, 41, 46, 49, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 71, 72, 93, 94, 102, 132, 134, 137, 138, 140, 143, 151, 154, 155, 156, 170, 199, 200, 221, 222, 223, 226, 229, 232, 233, 256, 259, 270, 272, 273, 275, 276, 277, 278, 280, 288, 289, 290, 292, 294, 295, 300, 304, 305, 306, 308, 312, 313, 316, 318, 319, 320, 321, 323, 333, 334, 348, 349, 350, 351, 352, 353, 358, 359, 360, 406, 411, 436, 438, 440, 442, 444, 446, 452, 456, 496, 498, 500, 502, 504, 512, 515, 526, 528, 530, 532, 537, 538], "data": [4, 5, 8, 10, 12, 13, 14, 15, 16, 21, 22, 25, 33, 34, 35, 37, 38, 40, 41, 45, 139, 149, 151, 156, 166, 170, 174, 183, 185, 187, 190, 195, 196, 197, 198, 199, 200, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 268, 270, 273, 274, 275, 279, 280, 285, 288, 295, 296, 297, 298, 299, 301, 304, 306, 308, 316, 318, 324, 334, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 418, 456, 474, 476, 496, 498, 504, 512, 518, 526, 528, 536, 538, 539, 541, 549], "type": [4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 20, 21, 22, 30, 33, 34, 35, 38, 40, 41, 42, 139, 149, 150, 154, 155, 156, 166, 173, 174, 175, 183, 185, 189, 198, 199, 200, 209, 220, 221, 225, 229, 230, 237, 239, 250, 263, 264, 268, 269, 270, 274, 280, 281, 285, 288, 289, 294, 299, 305, 308, 309, 316, 318, 321, 324, 325, 332, 333, 346, 350, 351, 357, 359, 360, 368, 371, 372, 374, 381, 395, 413, 415, 418, 456, 465, 474, 476, 496, 498, 504, 512, 515, 538, 539], "attribut": [4, 6, 16, 29, 34, 40, 41, 138, 139, 151, 155, 156, 177, 178, 190, 199, 225, 234, 243, 250, 263, 268, 271, 272, 275, 276, 278, 279, 282, 283, 285, 286, 287, 290, 291, 293, 294, 296, 297, 298, 299, 301, 302, 304, 308, 316, 320, 339, 344, 345, 350, 355, 356, 357, 364, 365, 373, 375, 376, 377, 378, 381, 383, 384, 392, 393, 395, 402, 403, 415, 418, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 456, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 504, 506, 508, 511, 512, 515, 517, 518, 519, 521, 523, 526, 528, 530, 532, 536, 538, 541, 543], "etc": [4, 5, 11, 16, 25, 33, 37, 138, 139, 142, 154, 155, 156, 280, 316, 318, 373, 376, 377, 498, 515], "flag": [4, 17, 21, 29, 33, 36, 39, 46, 139, 143, 155, 156, 162, 163, 164, 165, 189, 190, 199, 200, 203, 204, 211, 237, 264, 271, 273, 282, 285, 294, 299, 300, 303, 306, 308, 314, 321, 328, 329, 334, 342, 343, 368, 394, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 506, 508, 510, 515, 517, 519, 521, 523, 526, 528, 530, 532, 534, 536, 537, 538, 539, 541, 543], "whether": [4, 26, 30, 45, 48, 53, 54, 85, 91, 100, 133, 270, 288, 289, 294, 332, 349, 394, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 506, 508, 510, 512, 517, 519, 521, 523, 526, 528, 530, 532, 534, 536, 538, 539, 541, 543], "allow": [4, 9, 10, 12, 14, 16, 21, 23, 26, 27, 28, 29, 33, 34, 37, 41, 42, 43, 47, 52, 70, 92, 95, 98, 115, 128, 137, 146, 149, 151, 153, 159, 166, 169, 171, 172, 194, 226, 250, 270, 273, 288, 291, 296, 298, 306, 334, 358, 395, 413, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 498, 500, 502, 506, 508, 517, 519, 521, 523, 526, 528, 530, 532, 536, 538, 539, 541, 543], "throw": [4, 9, 22, 135, 152, 153, 214, 220, 221, 225, 229, 230, 231, 233, 234, 237, 239, 241, 243, 250, 261, 333, 340, 351, 357, 359, 360, 362, 364, 365, 368, 371, 372, 381, 413, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 453, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 506, 508, 514, 517, 519, 521, 523, 526, 528, 530, 532, 536, 538, 539, 541, 543], "fail": [4, 35, 139, 155, 156, 183, 208, 209, 230, 234, 239, 241, 243, 261, 360, 365, 371, 372, 381, 413, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 453, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 506, 508, 514, 517, 519, 521, 523, 526, 528, 530, 532, 536, 538, 539, 541, 543], "success": [4, 48, 183, 208, 209, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 316, 318, 319, 320, 321, 323, 324, 334, 395, 514], "describ": [4, 5, 10, 12, 13, 14, 16, 21, 25, 29, 34, 37, 41, 42, 45, 83, 84, 134, 141, 143, 150, 151, 154, 169, 170, 186, 230, 256, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 316, 318, 319, 320, 321, 323, 324, 334, 349, 360, 371, 372, 394, 406, 413, 431, 432, 451, 495, 497, 498, 509, 513, 524, 533], "error": [4, 13, 14, 21, 22, 27, 28, 34, 35, 41, 42, 45, 135, 152, 153, 155, 220, 221, 225, 230, 231, 233, 239, 261, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 316, 318, 319, 320, 321, 323, 324, 328, 334, 351, 357, 360, 362, 364, 371, 394, 413, 503, 512], "otherwis": [4, 5, 17, 27, 29, 31, 35, 41, 61, 74, 80, 104, 105, 106, 107, 108, 109, 110, 112, 117, 123, 130, 135, 189, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 316, 318, 319, 320, 321, 323, 324, 334, 448, 465, 498], "mean": [4, 5, 12, 13, 14, 19, 23, 24, 25, 31, 33, 34, 37, 41, 48, 55, 56, 57, 63, 64, 65, 66, 67, 68, 71, 72, 85, 86, 89, 90, 93, 94, 107, 126, 127, 134, 136, 137, 140, 141, 144, 145, 146, 154, 160, 161, 173, 175, 176, 184, 189, 190, 215, 217, 239, 242, 245, 249, 271, 273, 276, 278, 279, 282, 285, 288, 294, 296, 306, 314, 316, 321, 334, 342, 346, 368, 371, 372, 379, 385, 394, 413, 426, 428, 436, 438, 440, 442, 444, 446, 448, 450, 456, 458, 460, 474, 476, 498], "finish": [4, 34, 152, 153, 225, 227, 228, 235, 240, 260, 262, 303, 316, 357, 373, 374, 376, 377, 534, 537], "readi": [4, 34, 41, 316, 371, 373, 376, 377, 394], "similarli": [4, 45, 136, 143, 316, 394], "un": [4, 316], "also": [4, 7, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 33, 34, 35, 37, 40, 42, 47, 49, 87, 134, 138, 139, 141, 147, 151, 152, 153, 154, 155, 170, 199, 214, 225, 234, 247, 256, 270, 271, 272, 275, 276, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 316, 318, 321, 334, 340, 349, 357, 365, 368, 371, 372, 373, 374, 375, 376, 377, 378, 390, 394, 406, 413, 496, 498, 504, 512, 515], "fals": [4, 5, 7, 11, 53, 54, 61, 74, 85, 86, 91, 100, 104, 105, 106, 107, 108, 109, 110, 112, 117, 123, 126, 130, 152, 153, 225, 227, 228, 235, 240, 256, 260, 262, 357, 375, 378, 406, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "get": [4, 19, 24, 32, 40, 41, 139, 154, 155, 227, 228, 230, 237, 239, 240, 241, 256, 260, 261, 279, 299, 300, 306, 318, 324, 339, 360, 394, 406, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "filter": [4, 25, 139, 154, 155, 316], "claim": [4, 316, 387], "intern": [4, 7, 15, 21, 27, 28, 30, 34, 155, 166, 169, 194, 214, 219, 224, 244, 247, 252, 256, 270, 316, 340, 355, 363, 372, 376, 377, 383, 390, 398, 406, 413], "capabl": [4, 9, 13, 27, 29, 33, 38, 156, 316], "store": [4, 8, 14, 15, 16, 25, 26, 35, 40, 42, 45, 126, 133, 138, 139, 143, 152, 153, 154, 190, 221, 225, 233, 243, 263, 273, 288, 306, 334, 351, 357, 360, 364, 371, 373, 374, 376, 377, 381, 415, 465, 496, 511], "dnnl_dim_t": [5, 200, 218, 226, 236, 264, 270, 273, 277, 282, 286, 288, 301, 306, 308, 328, 334, 348, 358, 367, 496], "dim": [5, 13, 14, 33, 49, 141, 152, 153, 154, 170, 199, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 270, 288, 294, 318, 340, 342, 344, 346, 348, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 456, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 512, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 538, 539, 541, 543, 546], "enum": [5, 6, 7, 151, 154, 264, 269, 270, 277, 280, 281, 288, 289, 294, 295, 299, 300, 303, 305, 309, 318, 320, 321, 322, 328, 329, 332, 333, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 452, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 496, 499, 501, 505, 507, 510, 516, 518, 520, 522, 525, 527, 529, 531, 534, 535, 540, 542], "data_typ": [5, 13, 14, 33, 45, 141, 152, 153, 154, 155, 156, 166, 199, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 288, 328, 340, 342, 344, 346, 351, 352, 353, 355, 357, 359, 360, 362, 363, 364, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 456, 474, 476, 496, 498, 504, 512, 538, 539], "layout_typ": [5, 34, 227, 228, 235, 240, 260, 262, 264, 318, 373, 374, 375, 376, 377, 378, 456], "property_typ": [5, 228, 264, 374], "dnnl_graph_logical_tensor_t": [5, 264, 312, 318, 320, 321, 324], "c_data": 5, "dtype": [5, 264, 318], "int32_t": [5, 33, 45, 229, 230, 233, 243, 264, 270, 273, 288, 294, 306, 318, 328, 334, 359, 360, 381, 504], "ndim": [5, 30, 46, 154, 156, 170, 218, 226, 264, 270, 288, 318, 333, 348, 358, 456], "ltype": [5, 264, 318], "ptype": [5, 264, 318], "undef": [5, 13, 152, 153, 155, 156, 161, 174, 175, 176, 177, 185, 186, 187, 188, 193, 195, 197, 199, 201, 203, 225, 227, 228, 240, 260, 357, 373, 374, 376, 377, 394, 395, 422, 424, 426, 428, 430, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 500, 502, 504, 506, 508, 515, 517, 526, 528, 530, 532, 541, 543], "adim": [5, 237, 264, 498], "stride": [5, 9, 13, 14, 25, 26, 34, 49, 53, 54, 63, 64, 65, 66, 67, 68, 93, 94, 113, 151, 155, 156, 169, 170, 173, 175, 177, 178, 186, 187, 199, 200, 218, 219, 220, 221, 222, 224, 226, 227, 228, 235, 239, 240, 249, 250, 251, 256, 260, 262, 264, 270, 276, 278, 288, 290, 318, 348, 349, 350, 351, 352, 355, 358, 371, 373, 374, 376, 377, 381, 394, 395, 396, 406, 415, 436, 438, 440, 442, 444, 446, 456, 498, 500, 502, 504, 515], "lid": 5, "get_dim": [5, 154, 230, 243, 250, 263, 360, 381, 395, 415, 498], "get_id": [5, 7, 227, 228, 235, 240, 260, 262], "get_data_typ": [5, 152, 153, 225, 227, 228, 235, 240, 250, 260, 262, 357, 395, 498], "get_property_typ": 5, "get_layout_typ": 5, "get_layout_id": 5, "get_strid": [5, 154, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 498, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_mem_s": [5, 34], "is_equ": [5, 264, 318], "lt": [5, 8, 264, 312], "integ": [5, 14, 27, 29, 38, 42, 45, 49, 114, 139, 152, 158, 159, 162, 165, 166, 174, 185, 230, 232, 270, 273, 306, 320, 334, 350, 360, 496, 512], "repres": [5, 6, 7, 13, 14, 16, 25, 26, 33, 34, 38, 45, 60, 63, 89, 90, 118, 119, 132, 139, 152, 155, 227, 228, 229, 235, 240, 260, 262, 312, 316, 321, 349, 359, 363, 364, 368, 371, 372, 395, 413, 496], "dimens": [5, 7, 13, 14, 15, 16, 17, 19, 23, 25, 26, 31, 33, 34, 38, 39, 42, 43, 46, 49, 53, 54, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 83, 85, 86, 89, 90, 91, 93, 94, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 115, 118, 126, 127, 136, 137, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 169, 170, 186, 187, 199, 200, 214, 215, 216, 217, 223, 224, 225, 231, 234, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 270, 272, 273, 275, 276, 277, 278, 285, 288, 290, 298, 306, 308, 318, 321, 324, 333, 334, 340, 342, 344, 346, 353, 355, 357, 360, 362, 363, 364, 365, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 434, 436, 438, 440, 442, 444, 446, 456, 496, 498, 500, 502, 504, 512, 521, 523, 538, 539], "size": [5, 13, 14, 15, 17, 19, 22, 24, 25, 29, 33, 34, 39, 41, 42, 45, 46, 53, 54, 58, 83, 84, 93, 94, 118, 135, 136, 137, 140, 142, 146, 151, 152, 153, 154, 166, 170, 174, 177, 178, 187, 199, 200, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 237, 238, 239, 240, 242, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 270, 272, 273, 286, 288, 289, 294, 295, 301, 306, 308, 311, 314, 318, 319, 323, 329, 332, 334, 340, 342, 344, 346, 348, 349, 351, 352, 353, 355, 357, 358, 359, 360, 363, 364, 365, 369, 371, 379, 383, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 456, 458, 460, 486, 488, 496, 498, 504, 512, 515, 526, 528, 538], "implement": [5, 9, 10, 11, 13, 14, 15, 16, 21, 22, 27, 29, 33, 34, 35, 38, 40, 41, 42, 45, 69, 71, 72, 91, 102, 132, 134, 135, 138, 147, 149, 150, 154, 156, 158, 159, 166, 174, 183, 189, 194, 199, 200, 208, 209, 214, 217, 220, 221, 224, 227, 228, 231, 233, 234, 235, 237, 239, 240, 244, 250, 252, 260, 262, 294, 300, 306, 334, 340, 342, 343, 346, 348, 349, 351, 352, 355, 358, 362, 363, 364, 365, 368, 371, 372, 379, 380, 383, 394, 398, 413, 465, 496, 514, 515, 537], "ar": [5, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 53, 54, 55, 56, 63, 64, 65, 66, 67, 68, 69, 71, 72, 85, 86, 91, 93, 94, 102, 104, 105, 106, 107, 108, 109, 110, 115, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 170, 177, 187, 190, 197, 198, 199, 200, 205, 206, 214, 224, 225, 227, 228, 230, 232, 233, 234, 235, 238, 240, 243, 244, 247, 250, 252, 256, 260, 262, 263, 270, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 294, 298, 299, 300, 301, 302, 305, 306, 308, 314, 318, 332, 333, 334, 340, 346, 348, 349, 350, 355, 357, 360, 363, 364, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 381, 383, 387, 390, 394, 395, 398, 406, 413, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 456, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 503, 504, 506, 508, 510, 512, 515, 517, 518, 519, 521, 523, 526, 528, 530, 532, 536, 537, 541, 543], "forc": [5, 12, 49, 496], "limit": [5, 13, 14, 22, 27, 28, 37, 40, 138, 139, 156, 205, 206, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 314, 340, 342, 344, 346, 348, 349, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 496], "length": [5, 100, 101, 232, 233, 256, 270, 320, 406, 496], "copi": [5, 9, 13, 126, 127, 141, 149, 152, 153, 200, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 288, 297, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 367, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 452, 465, 496, 498, 510, 512, 534], "layout": [5, 7, 13, 34, 40, 46, 59, 113, 126, 127, 131, 143, 151, 152, 153, 156, 170, 173, 175, 214, 224, 227, 228, 233, 235, 240, 243, 244, 247, 252, 256, 260, 262, 263, 264, 270, 288, 318, 321, 324, 340, 349, 355, 363, 364, 373, 376, 377, 381, 383, 390, 394, 398, 406, 415, 456, 498, 504, 512], "properti": [5, 9, 34, 151, 155, 176, 184, 205, 206, 230, 260, 262, 318, 360, 374, 377, 378, 387, 456], "element": [5, 13, 25, 26, 29, 31, 33, 41, 50, 52, 60, 63, 69, 70, 71, 72, 73, 76, 77, 79, 81, 85, 86, 87, 88, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 118, 120, 122, 124, 125, 126, 127, 128, 129, 131, 140, 151, 154, 156, 170, 181, 182, 183, 190, 193, 194, 208, 209, 238, 270, 272, 273, 275, 276, 278, 288, 290, 304, 306, 318, 320, 324, 334, 339, 360, 368, 370, 371, 436, 438, 440, 442, 444, 446, 456, 496, 500, 502, 504], "1": [5, 12, 13, 16, 17, 19, 21, 23, 27, 29, 30, 31, 33, 35, 37, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 130, 134, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 160, 161, 162, 165, 166, 170, 173, 182, 184, 187, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 260, 261, 262, 263, 264, 270, 272, 273, 288, 294, 300, 306, 308, 318, 321, 333, 334, 340, 342, 344, 346, 348, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 385, 388, 390, 392, 394, 395, 396, 400, 402, 406, 407, 408, 409, 410, 413, 415, 430, 434, 456, 498, 504, 514, 515, 519, 536, 537], "unknown": [5, 7, 34, 191, 192, 212, 213, 221, 222, 227, 228, 240, 260, 288, 318, 321, 351, 352, 365, 381, 415, 456], "see": [5, 9, 13, 14, 16, 17, 18, 20, 21, 23, 26, 29, 31, 33, 35, 39, 40, 41, 42, 45, 46, 49, 66, 85, 136, 138, 139, 140, 143, 146, 147, 150, 152, 153, 154, 155, 157, 170, 187, 199, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 271, 272, 275, 276, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 332, 333, 334, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 368, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 496, 504, 510, 512, 515, 518, 537, 541, 543], "dnnl_graph_unknown_ndim": [5, 227, 228, 235, 240, 260, 262, 264, 318, 456], "0": [5, 13, 14, 15, 19, 21, 26, 31, 33, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 141, 142, 143, 144, 147, 150, 152, 153, 154, 155, 166, 169, 170, 173, 178, 184, 190, 196, 198, 200, 202, 207, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 272, 280, 288, 289, 292, 294, 300, 308, 313, 314, 316, 318, 321, 332, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 456, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 512, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 537, 541, 543], "scalar": [5, 13, 139, 270, 273, 306, 334, 456, 504], "deleg": 5, "basic": [5, 9, 13, 21, 139, 141, 239, 266, 273, 280, 288, 293, 303, 318, 321, 326, 368, 371, 372, 413, 418, 498, 549], "inform": [5, 13, 25, 34, 35, 40, 41, 47, 49, 135, 138, 151, 154, 155, 156, 199, 229, 249, 256, 288, 294, 300, 312, 318, 339, 359, 373, 374, 375, 376, 377, 378, 394, 406, 544], "dnnl_graph_unknown_dim": [5, 264, 318, 456], "defin": [5, 9, 10, 13, 16, 17, 21, 23, 26, 29, 30, 33, 35, 37, 39, 41, 42, 43, 45, 46, 47, 48, 49, 62, 63, 69, 71, 72, 80, 85, 87, 91, 102, 133, 136, 137, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 166, 174, 177, 178, 218, 221, 222, 225, 226, 239, 241, 260, 262, 264, 270, 273, 277, 288, 294, 300, 306, 318, 334, 348, 351, 352, 357, 358, 364, 368, 371, 373, 374, 375, 376, 377, 378, 395, 456, 504, 512], "zero": [5, 13, 14, 17, 26, 29, 33, 38, 41, 42, 49, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 71, 72, 87, 93, 94, 102, 126, 141, 143, 152, 153, 154, 156, 190, 199, 200, 217, 221, 222, 225, 229, 230, 243, 256, 263, 270, 276, 278, 283, 285, 287, 288, 294, 299, 314, 316, 346, 351, 352, 357, 359, 360, 361, 381, 382, 406, 415, 416, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 456, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 498, 500, 502, 504, 506, 508, 512, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "field": [5, 155, 170, 173, 175, 232, 270, 288, 318, 419, 453, 545, 546, 547], "deduc": [5, 7, 34, 142, 321, 394, 456], "accordingli": [5, 13, 14, 154, 288, 318, 350, 372, 413, 498, 503], "alwai": [5, 13, 16, 17, 21, 29, 31, 33, 39, 41, 42, 43, 45, 46, 48, 49, 141, 143, 154, 170, 270, 288, 300, 360, 368, 371, 498, 504, 512], "current": [5, 9, 12, 13, 14, 17, 24, 27, 28, 29, 33, 40, 41, 45, 135, 137, 139, 141, 143, 154, 155, 156, 234, 243, 256, 263, 288, 300, 314, 330, 331, 365, 381, 406, 415, 456], "support": [5, 7, 11, 12, 14, 15, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 38, 40, 41, 43, 44, 49, 133, 134, 138, 139, 142, 144, 152, 153, 154, 155, 156, 162, 165, 177, 178, 190, 193, 220, 221, 225, 231, 232, 233, 234, 263, 265, 270, 271, 272, 273, 276, 277, 278, 279, 282, 285, 287, 288, 294, 300, 306, 321, 326, 330, 331, 334, 350, 351, 357, 362, 363, 364, 365, 371, 394, 415, 428, 434, 456, 460, 496, 503, 504, 512, 514, 519, 536], "neg": [5, 13, 17, 26, 29, 42, 53, 54, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 85, 86, 87, 89, 90, 93, 94, 127, 190, 220, 236, 237, 239, 261, 299, 314, 350, 367, 368, 371, 413, 456, 515, 526, 528, 530, 532, 541, 543], "valu": [5, 6, 8, 9, 12, 13, 14, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 41, 42, 43, 44, 45, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 130, 133, 135, 136, 138, 139, 141, 149, 151, 152, 153, 154, 155, 156, 217, 221, 222, 225, 229, 230, 233, 236, 237, 239, 243, 261, 263, 264, 269, 270, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 292, 294, 296, 298, 299, 300, 301, 302, 305, 306, 308, 313, 314, 316, 318, 320, 322, 324, 332, 333, 334, 346, 350, 351, 352, 357, 359, 360, 363, 364, 365, 367, 368, 371, 381, 394, 395, 413, 415, 422, 424, 426, 428, 434, 436, 438, 440, 442, 444, 446, 450, 452, 456, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 488, 490, 492, 496, 498, 500, 502, 504, 508, 510, 512, 514, 515, 517, 518, 519, 523, 528, 532, 536, 538, 541, 543], "opaqu": [5, 7, 9, 13, 34, 113, 136, 169, 173, 175, 186, 188, 200, 207, 318, 321, 431, 432, 451, 456, 495, 497, 503, 509, 511, 513, 533], "assign": [5, 25, 215, 216, 233, 242, 245, 251, 258, 342, 344, 364, 379, 385, 396, 409, 465, 498], "each": [5, 7, 13, 14, 15, 19, 25, 26, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 64, 66, 67, 68, 104, 105, 106, 107, 108, 109, 110, 115, 125, 134, 135, 137, 140, 142, 143, 144, 151, 155, 169, 177, 181, 182, 186, 205, 206, 223, 233, 239, 270, 273, 276, 278, 288, 289, 290, 294, 295, 304, 305, 306, 308, 314, 316, 318, 321, 334, 349, 350, 353, 360, 368, 371, 395, 436, 438, 440, 442, 444, 446, 456, 496, 498, 500, 502, 504, 512, 536, 538], "call": [5, 7, 13, 15, 18, 22, 24, 25, 26, 27, 28, 30, 33, 34, 40, 41, 43, 45, 87, 133, 135, 143, 144, 152, 153, 154, 155, 225, 270, 288, 289, 295, 300, 305, 306, 308, 311, 314, 316, 319, 321, 323, 332, 333, 349, 357, 360, 363, 364, 368, 371, 372, 373, 374, 376, 377, 378, 394, 395, 413, 452, 453, 465, 496, 510, 512, 534, 537, 538], "byte": [5, 15, 29, 45, 199, 200, 288, 289, 294, 318, 319, 332, 496, 498], "compar": [5, 15, 35, 41, 45, 49, 115, 149, 230, 234, 288, 318, 360, 361, 365, 394, 524], "two": [5, 15, 16, 21, 25, 26, 30, 33, 34, 37, 38, 41, 42, 45, 49, 52, 70, 91, 92, 95, 98, 113, 115, 125, 128, 133, 136, 139, 143, 151, 152, 153, 154, 155, 170, 187, 205, 206, 225, 256, 272, 280, 288, 297, 318, 355, 356, 357, 365, 368, 371, 373, 376, 377, 378, 406], "tenor": [5, 318], "equal": [5, 13, 17, 19, 23, 30, 33, 39, 41, 43, 46, 53, 71, 72, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 115, 126, 133, 135, 136, 137, 142, 146, 153, 154, 160, 161, 170, 187, 228, 270, 272, 273, 288, 289, 295, 305, 306, 318, 332, 333, 334, 371, 374, 465, 496, 498, 504, 512], "decid": [5, 34, 173, 175, 227, 228, 240, 260, 318, 394, 422, 426, 436, 438, 442, 444, 448, 458, 462, 468, 470, 474, 478, 482, 486, 490, 500, 506, 521, 526, 530, 541], "reorder": [5, 14, 16, 21, 23, 24, 29, 32, 37, 40, 41, 42, 45, 49, 139, 146, 152, 153, 155, 156, 179, 193, 194, 199, 214, 218, 219, 220, 221, 222, 224, 225, 226, 230, 231, 232, 233, 236, 237, 243, 244, 247, 249, 250, 252, 256, 263, 264, 267, 268, 280, 288, 293, 294, 318, 328, 339, 340, 348, 349, 350, 351, 352, 355, 357, 358, 360, 362, 363, 364, 381, 383, 390, 395, 398, 403, 406, 415, 418, 510, 548], "need": [5, 14, 15, 20, 21, 30, 34, 37, 40, 41, 133, 143, 152, 153, 154, 200, 218, 219, 221, 222, 225, 226, 227, 228, 235, 240, 249, 250, 256, 260, 262, 288, 294, 308, 316, 318, 324, 348, 351, 352, 357, 358, 368, 371, 372, 373, 374, 376, 377, 406, 413, 537, 538], "below": [5, 9, 13, 16, 17, 19, 20, 21, 22, 24, 26, 27, 30, 31, 33, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 142, 143, 144, 147, 150, 154, 243, 263, 270, 318, 349, 371, 376, 377, 381, 394, 415, 504, 537], "circumst": [5, 7, 135, 155, 318, 321, 394], "regard": [5, 37, 66, 318], "struct": [5, 218, 226, 264, 270, 271, 272, 275, 276, 278, 279, 280, 282, 283, 285, 286, 287, 288, 290, 291, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 308, 309, 311, 312, 316, 318, 320, 321, 324, 328, 334, 335, 348, 358, 371, 395], "when": [5, 8, 9, 10, 12, 13, 14, 15, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 170, 177, 181, 182, 187, 189, 205, 206, 225, 232, 236, 237, 270, 288, 289, 294, 295, 300, 306, 314, 318, 334, 357, 363, 364, 367, 368, 371, 394, 395, 456, 496, 504, 512], "underli": [5, 8, 30, 33, 133, 138, 284, 288, 289, 305, 306, 317, 318, 319, 323, 324, 332, 333, 372, 413, 465, 496, 510], "For": [5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 69, 71, 72, 83, 84, 91, 102, 104, 105, 106, 107, 108, 109, 110, 133, 135, 137, 139, 141, 143, 146, 149, 151, 152, 153, 154, 156, 170, 176, 184, 187, 190, 200, 214, 224, 225, 233, 239, 244, 247, 252, 270, 271, 273, 282, 285, 288, 289, 294, 300, 306, 311, 318, 321, 332, 334, 340, 349, 350, 355, 357, 360, 363, 364, 368, 371, 372, 373, 374, 383, 390, 394, 398, 413, 456, 496, 503, 504, 512, 515], "exampl": [5, 16, 18, 21, 22, 24, 25, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 45, 47, 69, 71, 72, 75, 91, 102, 104, 105, 106, 107, 108, 109, 110, 115, 126, 134, 150, 154, 156, 170, 176, 184, 187, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 271, 282, 285, 288, 294, 300, 318, 326, 339, 341, 343, 345, 347, 354, 356, 360, 361, 365, 366, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 384, 386, 391, 393, 394, 397, 399, 401, 403, 405, 408, 410, 412, 413, 415, 416, 417, 456, 498, 504, 512, 515, 549], "one": [5, 7, 10, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 30, 31, 33, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 62, 64, 69, 71, 72, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 115, 126, 133, 134, 135, 136, 140, 141, 142, 143, 145, 146, 149, 152, 153, 154, 155, 156, 170, 187, 190, 214, 224, 225, 227, 228, 233, 235, 240, 244, 247, 250, 252, 256, 260, 262, 270, 273, 279, 280, 288, 289, 294, 305, 306, 308, 318, 321, 326, 332, 333, 334, 340, 349, 355, 357, 360, 361, 363, 364, 368, 371, 372, 374, 381, 382, 383, 390, 394, 395, 398, 406, 413, 415, 416, 448, 456, 498, 503, 510, 518], "while": [5, 15, 21, 22, 25, 26, 29, 40, 41, 45, 91, 133, 141, 143, 149, 170, 221, 222, 241, 318, 321, 351, 352, 365, 371, 524], "underneath": [5, 318], "both": [5, 15, 17, 19, 20, 21, 22, 25, 27, 30, 31, 32, 33, 34, 35, 39, 40, 41, 46, 49, 52, 54, 55, 57, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 86, 92, 95, 98, 102, 128, 133, 134, 135, 139, 143, 145, 146, 149, 155, 170, 233, 238, 249, 252, 261, 271, 272, 279, 282, 285, 288, 300, 308, 318, 339, 363, 368, 369, 371, 372, 373, 376, 377, 381, 394, 398, 498], "nhwc": [5, 25, 142, 187, 217, 239, 254, 318, 346, 371, 402], "still": [5, 14, 21, 27, 40, 143, 154, 318, 371], "op_handl": 6, "attrakind": [6, 264, 270, 280, 294, 328, 332, 333, 452], "string": [6, 21, 24, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 83, 84, 92, 93, 94, 95, 98, 100, 101, 102, 115, 125, 128, 152, 153, 155, 214, 215, 216, 217, 218, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 264, 294, 300, 320, 328, 340, 342, 344, 346, 348, 353, 355, 357, 358, 359, 362, 368, 369, 371, 372, 373, 374, 376, 377, 379, 383, 385, 388, 390, 392, 396, 398, 402, 404, 407, 409, 411, 413, 453], "verbose_nam": [6, 264, 320], "add_input": 6, "add_output": 6, "templat": [6, 139, 155, 230, 300, 309, 328, 333, 360, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "typenam": [6, 230, 309, 328, 333, 360, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "req": 6, "is_sam": [6, 230, 360], "int64_t": [6, 200, 227, 228, 230, 234, 240, 243, 260, 263, 264, 277, 320, 360, 365, 373, 374, 376, 377, 381, 415, 515], "set_attr": [6, 227, 228, 235, 240, 260, 262, 373, 374, 375, 376, 377, 378], "name": [6, 13, 17, 19, 20, 21, 23, 24, 26, 28, 31, 37, 39, 41, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 139, 141, 142, 143, 144, 145, 146, 150, 154, 155, 170, 187, 199, 200, 205, 206, 264, 270, 300, 320, 339, 371, 387, 394, 414, 515], "specifi": [6, 9, 10, 12, 13, 14, 17, 19, 20, 21, 23, 24, 26, 28, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 62, 64, 69, 70, 71, 72, 83, 84, 92, 93, 94, 95, 98, 102, 104, 105, 106, 107, 108, 109, 110, 115, 125, 126, 127, 128, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 155, 156, 170, 177, 178, 189, 190, 205, 206, 218, 219, 221, 222, 226, 232, 233, 234, 237, 250, 270, 271, 273, 282, 285, 288, 289, 300, 305, 306, 308, 312, 321, 330, 331, 332, 333, 334, 348, 349, 351, 352, 358, 363, 364, 365, 368, 371, 372, 373, 374, 375, 376, 377, 378, 381, 394, 413, 415, 452, 465, 474, 476, 496, 504, 510, 512, 515, 518, 534, 538, 539], "convolut": [6, 11, 13, 15, 16, 21, 23, 25, 29, 31, 32, 33, 35, 37, 38, 40, 41, 45, 64, 65, 66, 67, 68, 136, 139, 141, 154, 155, 156, 160, 161, 170, 179, 181, 182, 187, 193, 194, 218, 219, 220, 221, 222, 226, 227, 228, 240, 249, 250, 260, 267, 268, 270, 288, 293, 294, 339, 348, 349, 350, 351, 352, 356, 358, 371, 373, 376, 377, 395, 435, 436, 437, 438, 439, 440, 456, 490, 503, 504, 515, 548], "relu": [6, 16, 17, 25, 26, 31, 37, 40, 49, 87, 100, 112, 137, 143, 152, 153, 160, 161, 179, 181, 182, 189, 190, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 231, 236, 237, 238, 239, 240, 241, 243, 244, 248, 250, 260, 261, 267, 271, 279, 291, 342, 344, 348, 349, 350, 351, 352, 355, 357, 358, 362, 367, 369, 372, 373, 374, 376, 377, 381, 382, 383, 392, 395, 413], "bound": [6, 15, 31, 41, 42, 60, 61, 139, 227, 228, 235, 240, 260, 262], "set": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 39, 41, 42, 44, 45, 46, 49, 53, 63, 85, 86, 100, 104, 105, 106, 107, 108, 109, 110, 115, 138, 139, 141, 143, 151, 152, 153, 155, 156, 162, 165, 215, 216, 220, 221, 225, 227, 228, 232, 233, 240, 242, 245, 250, 251, 252, 258, 260, 263, 264, 270, 272, 276, 278, 281, 283, 285, 287, 288, 289, 291, 292, 294, 296, 298, 299, 300, 305, 306, 308, 313, 314, 316, 320, 324, 332, 333, 342, 344, 349, 350, 351, 357, 372, 373, 374, 375, 377, 378, 379, 385, 394, 395, 396, 398, 409, 415, 465, 496, 498, 504, 512, 537], "self": [6, 139, 156, 373, 374, 375, 376, 377, 378], "partition_handl": 7, "dnnl_graph_partition_t": [7, 264, 312, 316, 321], "p": [7, 20, 44, 139, 140, 156, 199, 200, 232, 233, 264, 296, 363, 364, 515, 517], "aop": 7, "ekind": [7, 260, 264, 321, 377, 378], "get_ops_num": 7, "get_op": 7, "compiled_partit": [7, 34, 155, 227, 228, 235, 240, 260, 262, 264, 312, 319, 321, 323, 329, 330, 331, 373, 374, 375, 377, 378], "e": [7, 13, 14, 15, 17, 21, 23, 31, 33, 35, 39, 40, 41, 43, 46, 49, 73, 76, 85, 86, 96, 97, 116, 120, 145, 150, 151, 152, 153, 154, 155, 170, 187, 215, 220, 221, 225, 227, 228, 230, 231, 233, 234, 236, 237, 239, 240, 242, 243, 245, 246, 256, 260, 261, 263, 270, 288, 300, 342, 351, 357, 360, 362, 364, 365, 367, 371, 379, 381, 385, 388, 406, 413, 415, 434, 454, 498, 504, 514, 519, 536], "is_support": [7, 227, 228, 235, 240, 260, 262, 264, 321], "get_input_port": [7, 34, 227, 228, 235, 240, 260, 262], "get_output_port": [7, 34, 227, 228, 235, 240, 260, 262], "get_engine_kind": 7, "raw": [7, 22, 230, 234, 360, 365, 371], "c": [7, 9, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 25, 26, 29, 31, 32, 37, 39, 43, 46, 47, 48, 49, 53, 55, 56, 58, 62, 85, 86, 93, 118, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 152, 153, 154, 166, 170, 174, 187, 199, 214, 219, 220, 221, 222, 225, 229, 230, 231, 232, 233, 234, 237, 239, 241, 243, 245, 247, 256, 263, 264, 269, 270, 273, 280, 281, 287, 288, 294, 299, 300, 306, 308, 328, 332, 333, 334, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 453, 458, 460, 462, 464, 465, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 517, 519, 521, 523, 524, 526, 528, 530, 532, 534, 536, 538, 541, 543], "handl": [7, 8, 13, 14, 15, 16, 22, 29, 33, 34, 45, 141, 154, 156, 214, 215, 216, 217, 223, 224, 227, 228, 231, 232, 233, 234, 235, 238, 240, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 264, 270, 273, 280, 288, 289, 294, 303, 305, 306, 308, 309, 311, 312, 316, 318, 319, 320, 321, 323, 324, 328, 332, 333, 334, 340, 342, 344, 346, 353, 355, 362, 363, 364, 365, 369, 371, 373, 374, 375, 376, 377, 378, 379, 383, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 407, 409, 411, 413, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "directli": [7, 17, 21, 26, 45, 149, 154, 230, 288, 321, 360, 371, 375, 378, 413, 496, 537], "without": [7, 8, 10, 12, 14, 16, 21, 26, 29, 33, 134, 143, 150, 152, 153, 160, 166, 169, 194, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 276, 278, 288, 289, 305, 306, 321, 324, 332, 333, 334, 340, 342, 344, 346, 348, 351, 352, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 369, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 506, 508, 517, 519, 521, 523, 526, 528, 530, 532, 536, 538, 539, 541, 543], "contain": [7, 13, 16, 17, 20, 21, 25, 33, 34, 36, 37, 38, 41, 53, 54, 63, 64, 65, 66, 67, 68, 69, 83, 84, 93, 94, 102, 104, 105, 106, 107, 108, 109, 110, 126, 127, 139, 151, 154, 155, 170, 214, 224, 239, 244, 247, 252, 270, 276, 278, 288, 289, 290, 300, 305, 318, 319, 321, 332, 333, 336, 340, 350, 355, 368, 371, 372, 373, 375, 376, 377, 378, 383, 390, 398, 413, 436, 438, 440, 442, 444, 446, 454, 498, 500, 502, 510, 511, 518, 544], "onli": [7, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 49, 69, 71, 72, 86, 100, 101, 102, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 166, 169, 170, 187, 188, 190, 194, 197, 198, 200, 207, 217, 221, 222, 225, 226, 256, 270, 276, 277, 278, 280, 288, 289, 290, 300, 306, 318, 321, 330, 331, 332, 334, 346, 348, 349, 351, 352, 357, 358, 360, 365, 368, 371, 373, 374, 375, 376, 377, 378, 381, 394, 395, 406, 415, 436, 438, 440, 442, 444, 446, 498, 500, 502, 504, 512], "unord": 7, "gener": [7, 13, 16, 20, 21, 25, 27, 28, 33, 34, 35, 36, 37, 41, 44, 47, 134, 138, 139, 150, 151, 155, 169, 173, 175, 186, 199, 200, 214, 215, 216, 217, 223, 224, 225, 231, 238, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 279, 288, 300, 308, 312, 340, 342, 344, 346, 353, 355, 357, 362, 365, 368, 369, 371, 373, 374, 375, 377, 378, 379, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 456, 538, 539, 549], "debug": [7, 11, 20, 21, 27, 35, 138, 139, 155, 181, 182, 288, 300, 368, 371, 372, 413, 496], "purpos": [7, 9, 10, 21, 22, 27, 29, 30, 35, 133, 138, 154, 155, 288, 360, 371, 395, 496], "verbos": [7, 21, 22, 35, 135, 138, 300, 394, 417], "shape": [7, 16, 17, 23, 26, 34, 39, 40, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 70, 83, 84, 91, 92, 93, 94, 95, 98, 104, 105, 106, 107, 108, 109, 110, 115, 125, 126, 128, 131, 141, 146, 151, 154, 156, 177, 178, 183, 209, 220, 227, 228, 230, 234, 235, 240, 249, 256, 260, 262, 289, 294, 305, 318, 321, 332, 333, 349, 350, 360, 365, 366, 373, 376, 377, 381, 382, 394, 406, 415, 456, 510, 518], "choos": [7, 14, 20, 21, 22, 23, 26, 27, 34, 35, 41, 43, 45, 49, 137, 146, 214, 220, 224, 244, 247, 249, 252, 288, 321, 340, 349, 350, 355, 365, 381, 383, 390, 394, 395, 398, 415], "optim": [7, 13, 17, 19, 21, 23, 26, 29, 31, 33, 34, 35, 39, 42, 43, 44, 46, 48, 49, 136, 138, 141, 143, 144, 145, 146, 153, 154, 176, 184, 214, 224, 244, 247, 250, 252, 321, 326, 340, 341, 342, 343, 344, 345, 349, 353, 354, 355, 356, 368, 371, 372, 379, 380, 383, 384, 385, 386, 390, 391, 392, 393, 394, 395, 398, 402, 403, 407, 408, 409, 410, 411, 412, 413], "save": [7, 21, 34, 44, 48, 136, 190, 251, 321, 396], "some": [7, 9, 10, 11, 12, 13, 14, 15, 21, 23, 26, 31, 33, 41, 44, 48, 134, 135, 136, 138, 139, 141, 149, 150, 151, 154, 155, 158, 159, 221, 222, 226, 239, 243, 256, 263, 273, 288, 306, 321, 334, 346, 348, 349, 351, 352, 358, 360, 365, 368, 371, 372, 373, 374, 375, 376, 377, 378, 381, 394, 406, 413, 415, 498, 503], "under": [7, 35, 152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 321, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "certain": [7, 16, 17, 26, 27, 28, 37, 43, 155, 170, 187, 277, 321, 452, 503, 504], "dure": [7, 9, 12, 13, 14, 15, 16, 17, 21, 26, 27, 29, 31, 34, 35, 39, 40, 41, 42, 43, 45, 46, 48, 49, 126, 131, 133, 135, 136, 139, 141, 154, 156, 158, 159, 173, 175, 176, 184, 200, 235, 256, 262, 273, 306, 308, 321, 334, 360, 372, 394, 406, 413, 456, 496, 498, 504, 512, 537, 539], "stage": [7, 26, 34, 35, 43, 49, 126, 227, 228, 235, 240, 260, 262, 308, 314, 318, 321, 373, 374, 375, 376, 377, 378, 538], "unsupport": [7, 14, 21, 42, 155, 156, 227, 228, 235, 240, 260, 261, 262, 321, 373, 374, 375, 376, 377, 378, 413], "befor": [7, 9, 14, 15, 22, 23, 24, 26, 27, 28, 29, 30, 34, 38, 40, 63, 64, 65, 66, 67, 68, 87, 91, 115, 125, 133, 139, 146, 152, 153, 155, 160, 161, 218, 226, 233, 256, 270, 288, 300, 314, 319, 321, 348, 358, 363, 364, 368, 371, 372, 394, 395, 406, 413, 496, 504], "transform": [7, 15, 16, 42, 83, 84, 288, 321, 349, 350, 371, 498, 549], "isn": [7, 49], "tensor_handl": 8, "aengin": [8, 332, 333, 334, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 500, 502, 506, 508, 517, 521, 523, 526, 528, 530, 532, 534, 536, 541, 543], "get_data_handl": [8, 30, 33, 133, 152, 153, 221, 222, 225, 232, 233, 288, 351, 352, 357, 363, 364, 371, 496], "set_data_handl": [8, 232, 233, 288, 332, 333, 363, 364, 496], "get_engin": [8, 288, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 534, 536, 541, 543], "storag": [8, 12, 16, 29, 188, 207, 288, 289, 294, 305, 324, 332, 333], "alloc": [8, 15, 16, 22, 30, 133, 134, 152, 153, 191, 192, 205, 206, 212, 213, 214, 215, 216, 217, 219, 220, 223, 224, 225, 227, 228, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 268, 288, 289, 305, 310, 315, 319, 323, 324, 329, 330, 331, 332, 333, 340, 342, 344, 346, 349, 353, 355, 357, 362, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 496, 498, 519], "own": [8, 15, 16, 30, 33, 40, 133, 134, 288, 289, 294, 305, 324, 332, 333, 371, 496, 537], "dnnl_memory_alloc": [8, 30, 133, 218, 226, 236, 264, 288, 289, 305, 324, 332, 333, 348, 358, 367, 496], "special": [8, 16, 19, 23, 29, 30, 31, 34, 45, 49, 58, 133, 137, 140, 141, 144, 145, 146, 152, 153, 154, 169, 186, 225, 234, 288, 289, 294, 305, 312, 324, 332, 333, 357, 365, 496], "instruct": [8, 12, 21, 26, 27, 29, 33, 42, 44, 45, 134, 139, 149, 155, 162, 165, 187, 288, 289, 300, 305, 324, 332, 333, 371, 496], "dnnl_memory_non": [8, 30, 133, 264, 288, 289, 305, 324, 332, 333, 496], "On": [8, 21, 29, 40, 41, 49, 149, 154, 155, 170, 187, 189, 190, 273, 306, 334, 360, 372, 413, 496], "usm": [8, 191, 192, 212, 213, 288, 289, 305, 319, 323, 330, 331, 332, 333, 496], "associ": [8, 19, 23, 29, 31, 34, 38, 40, 137, 140, 141, 144, 145, 146, 288, 289, 294, 295, 305, 316, 319, 330, 332, 333, 496, 498, 534], "quick": 9, "recap": 9, "creation": [9, 10, 12, 13, 14, 15, 17, 21, 23, 26, 31, 39, 40, 43, 46, 49, 135, 138, 143, 146, 232, 233, 234, 241, 243, 261, 263, 288, 300, 308, 318, 340, 341, 350, 353, 354, 355, 356, 360, 365, 368, 371, 372, 381, 383, 384, 385, 386, 390, 391, 395, 413, 415, 537], "step": [9, 16, 21, 26, 40, 41, 42, 45, 115, 135, 151, 152, 153, 214, 225, 227, 228, 235, 240, 245, 247, 260, 262, 340, 357, 368, 371, 372, 373, 376, 377, 385, 390, 394, 413], "consist": [9, 16, 19, 21, 25, 27, 41, 49, 134, 143, 154, 156, 288, 394, 498], "follow": [9, 13, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 152, 154, 155, 156, 170, 187, 217, 227, 228, 235, 240, 243, 250, 256, 260, 262, 263, 270, 288, 299, 300, 308, 346, 360, 368, 371, 372, 381, 394, 395, 406, 413, 415, 422, 424, 462, 464, 465, 478, 480, 482, 484, 490, 492, 496, 498, 503, 512, 538, 541, 543], "descriptor": [9, 13, 14, 15, 16, 17, 21, 23, 26, 31, 33, 39, 40, 41, 43, 46, 48, 136, 142, 143, 146, 154, 156, 166, 169, 185, 186, 188, 199, 200, 207, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 230, 233, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 270, 271, 272, 275, 276, 278, 279, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 301, 302, 304, 305, 332, 333, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 368, 369, 372, 379, 381, 383, 384, 385, 386, 388, 390, 391, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 540, 541, 542, 543], "backward": [9, 15, 16, 19, 21, 23, 25, 27, 37, 40, 71, 72, 85, 86, 140, 143, 146, 155, 156, 160, 161, 189, 190, 197, 198, 214, 215, 221, 222, 226, 238, 246, 247, 251, 252, 256, 271, 276, 278, 279, 282, 283, 285, 286, 290, 291, 294, 298, 299, 301, 302, 340, 342, 349, 351, 352, 358, 369, 388, 390, 394, 396, 398, 406, 421, 422, 425, 426, 435, 436, 441, 442, 447, 448, 457, 458, 461, 462, 467, 468, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 499, 500, 505, 506, 520, 521, 525, 526, 529, 530, 540, 541], "propag": [9, 15, 16, 17, 19, 21, 23, 25, 26, 31, 32, 39, 40, 43, 46, 48, 86, 136, 137, 140, 142, 143, 144, 145, 146, 155, 156, 189, 190, 197, 198, 199, 200, 214, 215, 238, 246, 247, 249, 250, 252, 270, 271, 276, 278, 279, 282, 283, 285, 286, 290, 291, 294, 298, 299, 301, 302, 339, 340, 341, 342, 343, 349, 355, 356, 369, 370, 371, 379, 380, 385, 386, 388, 389, 390, 391, 395, 396, 397, 398, 399, 404, 405, 409, 410, 418, 421, 422, 423, 424, 425, 426, 427, 428, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 499, 500, 501, 502, 505, 506, 507, 508, 514, 515, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 536, 540, 541, 542, 543], "forward": [9, 15, 16, 19, 21, 23, 25, 37, 40, 54, 139, 140, 143, 146, 156, 189, 190, 197, 198, 218, 219, 220, 221, 222, 226, 237, 241, 246, 256, 261, 270, 271, 276, 278, 279, 282, 283, 285, 286, 288, 290, 291, 294, 298, 299, 301, 302, 340, 341, 342, 343, 348, 349, 350, 351, 352, 355, 356, 358, 368, 369, 370, 372, 379, 380, 385, 386, 388, 389, 390, 391, 394, 396, 397, 398, 399, 404, 405, 406, 409, 410, 413, 422, 423, 424, 426, 427, 428, 436, 438, 439, 440, 442, 444, 445, 446, 448, 449, 450, 458, 459, 460, 462, 463, 464, 468, 470, 471, 472, 474, 475, 476, 478, 479, 480, 482, 483, 484, 486, 487, 488, 490, 491, 492, 500, 501, 502, 504, 506, 507, 508, 521, 522, 523, 526, 527, 528, 530, 531, 532, 541, 542, 543], "might": [9, 11, 13, 14, 15, 17, 19, 25, 26, 29, 31, 33, 39, 41, 43, 45, 46, 48, 136, 141, 143, 144, 151, 154, 170, 221, 222, 226, 234, 351, 352, 358, 360, 365, 368, 371, 381, 503], "well": [9, 14, 15, 16, 40, 41, 134, 150, 152, 154, 155, 233, 234, 349, 360, 363, 365, 376, 377, 394, 465], "train": [9, 13, 14, 15, 21, 32, 35, 40, 42, 45, 48, 55, 87, 134, 138, 154, 189, 190, 197, 198, 221, 222, 226, 246, 256, 271, 279, 339, 340, 341, 342, 343, 349, 369, 370, 379, 380, 388, 389, 390, 391, 394, 396, 397, 398, 399, 404, 405, 409, 410, 418], "specif": [9, 12, 13, 16, 17, 19, 20, 24, 26, 28, 31, 34, 35, 39, 42, 48, 115, 134, 136, 142, 143, 144, 151, 152, 153, 156, 166, 170, 173, 175, 181, 182, 185, 187, 199, 200, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 279, 280, 288, 289, 296, 300, 305, 308, 314, 316, 324, 332, 333, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 448, 450, 496, 517, 538], "aspect": [9, 394, 418], "sole": [9, 40], "detail": [9, 12, 14, 16, 20, 21, 29, 34, 40, 41, 45, 139, 149, 155, 220, 221, 231, 233, 351, 360, 362, 364, 371], "why": [9, 154], "found": [9, 14, 21, 135, 136, 149, 150, 154, 155, 156, 236, 251, 367, 396], "concept": [9, 49, 141, 266, 280, 293, 303, 360, 361, 365, 366, 368, 371, 372, 381, 382, 394, 413, 415, 416, 418, 549], "fact": [9, 47, 141, 371, 395], "import": [9, 13, 14, 16, 21, 40, 41, 45, 47, 134, 154, 368, 372, 413], "u": [9, 25, 143, 144, 160, 161, 230, 234, 243, 263, 360, 365, 371, 381, 415], "now": [9, 14, 25, 26, 33, 40, 43, 143, 214, 219, 221, 222, 224, 244, 247, 252, 256, 340, 351, 352, 355, 363, 364, 368, 371, 383, 390, 394, 398, 406, 413], "2": [9, 13, 17, 27, 29, 30, 31, 33, 35, 37, 39, 42, 44, 46, 48, 49, 55, 56, 57, 63, 64, 65, 66, 68, 71, 72, 84, 85, 86, 91, 97, 100, 101, 105, 115, 125, 134, 135, 139, 143, 151, 152, 153, 154, 155, 160, 161, 162, 165, 166, 169, 170, 173, 174, 182, 184, 185, 194, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 288, 294, 300, 318, 340, 342, 344, 346, 348, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 434, 498, 504, 512, 514, 519, 536], "fulli": [9, 15, 16, 38, 41, 43, 49, 395], "correspond": [9, 13, 14, 16, 17, 19, 21, 22, 23, 25, 26, 28, 29, 31, 33, 34, 35, 39, 41, 42, 43, 46, 49, 63, 64, 91, 104, 105, 106, 107, 108, 109, 110, 126, 134, 135, 137, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 170, 187, 200, 225, 237, 239, 250, 269, 270, 276, 278, 280, 281, 288, 289, 294, 299, 305, 314, 332, 333, 357, 360, 368, 371, 372, 394, 395, 413, 436, 438, 440, 442, 444, 446, 496, 498, 504, 512], "onc": [9, 13, 15, 24, 27, 28, 40, 41, 45, 49, 138, 143, 151, 152, 153, 154, 225, 233, 294, 300, 314, 318, 349, 357, 363, 364, 365, 366, 368, 371, 381, 382, 415, 416], "chang": [9, 12, 13, 14, 16, 21, 27, 28, 29, 33, 35, 38, 40, 49, 126, 138, 141, 147, 154, 170, 176, 184, 194, 249, 270, 288, 294, 297, 300, 333, 349, 371, 394, 395, 496, 504, 514], "problem": [9, 45, 141, 155, 156, 234, 360, 365], "where": [9, 12, 13, 14, 15, 17, 19, 23, 25, 26, 29, 31, 39, 41, 42, 43, 45, 46, 48, 49, 53, 56, 62, 63, 64, 69, 71, 72, 85, 86, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 126, 135, 136, 140, 142, 143, 144, 154, 155, 170, 187, 251, 254, 270, 273, 306, 334, 348, 349, 350, 360, 371, 394, 396, 402, 504], "destin": [9, 13, 14, 23, 25, 26, 31, 33, 35, 40, 42, 43, 45, 49, 137, 141, 142, 144, 149, 152, 153, 156, 199, 200, 214, 215, 216, 223, 224, 231, 238, 239, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 270, 271, 272, 275, 276, 278, 279, 282, 283, 285, 286, 287, 288, 290, 291, 294, 296, 297, 298, 301, 302, 304, 340, 342, 344, 350, 353, 354, 355, 362, 368, 369, 371, 379, 381, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 412, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 504, 506, 508, 515, 517, 518, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "so": [9, 13, 14, 16, 21, 22, 23, 28, 40, 41, 45, 47, 49, 139, 143, 146, 151, 152, 154, 166, 169, 194, 230, 233, 256, 270, 288, 294, 349, 350, 360, 368, 371, 372, 373, 376, 377, 395, 406, 413, 503], "extra": [9, 15, 17, 20, 21, 28, 35, 37, 41, 45, 152, 153, 154, 155, 190, 200, 225, 357, 371, 394], "were": [9, 15, 30, 133, 155, 190, 368, 371, 372, 413], "design": [9, 13, 14, 23, 46, 62, 144, 151, 394], "extens": [9, 27, 29, 30, 32, 33, 44, 45, 133, 143, 162, 165, 240, 241, 260, 261, 284, 289, 305, 306, 317, 319, 323, 326, 339], "henc": [9, 13, 15, 17, 26, 31, 39, 41, 46, 138, 143, 144, 145, 149, 152, 154, 155, 190, 227, 228, 230, 235, 240, 260, 262, 276, 278, 290, 360, 371, 394, 436, 438, 440, 442, 444, 446, 500, 502], "thei": [9, 13, 15, 16, 17, 22, 26, 30, 34, 37, 39, 41, 42, 43, 45, 46, 49, 83, 85, 86, 133, 136, 143, 152, 153, 154, 155, 170, 225, 227, 228, 232, 235, 240, 243, 260, 262, 357, 363, 368, 371, 372, 381, 394, 395, 413], "structur": [9, 13, 37, 154, 170, 200, 288, 300, 431, 432, 451, 454, 495, 497, 503, 509, 511, 513, 533, 544], "must": [9, 12, 13, 14, 15, 17, 19, 21, 23, 26, 30, 34, 35, 39, 40, 41, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 141, 143, 150, 151, 152, 153, 170, 200, 225, 270, 272, 273, 276, 278, 288, 289, 290, 294, 299, 300, 305, 306, 308, 314, 318, 332, 333, 334, 349, 350, 357, 368, 371, 372, 373, 374, 375, 376, 377, 378, 413, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 506, 508, 510, 512, 517, 518, 519, 521, 523, 526, 528, 530, 532, 536, 538, 541, 543], "them": [9, 21, 22, 31, 33, 34, 35, 37, 38, 40, 41, 45, 104, 105, 106, 107, 108, 109, 110, 115, 134, 154, 177, 189, 270, 271, 282, 285, 288, 299, 368, 371, 394, 422, 424, 456, 462, 464, 478, 480, 482, 484, 490, 492, 543], "setter": [9, 24, 28, 152], "destroi": [9, 15, 133, 200, 270, 280, 288, 294, 303, 308, 311, 312, 316, 320, 321, 324, 371, 394, 413, 498, 504, 512], "right": [9, 26, 31, 48, 49, 53, 54, 63, 64, 65, 66, 67, 68, 85, 86, 91, 93, 94, 115, 136, 142, 144, 145, 154, 155, 199, 200, 201, 202, 224, 249, 251, 256, 276, 278, 288, 290, 355, 394, 396, 406, 436, 438, 440, 442, 444, 446, 500, 502, 515], "after": [9, 13, 14, 17, 26, 34, 35, 41, 43, 125, 139, 143, 150, 152, 153, 155, 170, 219, 224, 225, 227, 228, 235, 236, 237, 239, 240, 256, 260, 261, 262, 270, 300, 308, 316, 321, 355, 357, 367, 368, 371, 372, 373, 374, 376, 377, 394, 395, 406, 413, 434, 503, 504, 514, 519, 536, 538], "modifi": [9, 17, 21, 26, 39, 41, 43, 46, 49, 145, 270, 292, 313], "stai": [9, 154, 498], "equival": [9, 30, 133, 452, 465, 496, 510, 534], "null": [9, 156, 218, 226, 236, 270, 271, 272, 275, 276, 278, 279, 282, 283, 285, 286, 287, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 306, 334, 348, 358, 367, 452, 465, 496, 510, 534], "upon": [9, 40, 368, 371, 372, 394, 413], "unless": [9, 19, 22, 29, 46, 152, 153, 155, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 288, 289, 294, 305, 332, 333, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 496, 510, 518], "simpli": [9, 23, 26, 146, 288, 360], "omit": [9, 13, 69, 71, 72, 102, 197, 198, 349], "skeleton": [9, 13], "simplifi": [9, 25, 26, 41, 63, 89, 142, 150, 152, 153, 154, 225, 357], "read": [9, 24, 30, 133, 214, 215, 216, 217, 224, 230, 231, 238, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 340, 342, 344, 346, 355, 360, 362, 369, 372, 379, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 496], "dnnl_primitive_attr_t": [9, 264, 270, 512], "dnnl_primitive_attr_cr": [9, 264, 270], "dnnl_primitive_attr_set_someth": 9, "param": [9, 13, 15, 156, 218, 226, 230, 348, 358, 360, 504], "dnnl_primitive_attr_set_something_els": 9, "other_param": [9, 13], "dnnl_eltwise_backward_primitive_desc_cr": [9, 226, 264, 279, 358], "op_pd": [9, 13, 15], "hint_fwd_pd": [9, 264, 271, 276, 278, 279, 282, 283, 285, 286, 290, 291, 298, 299, 301, 302, 422, 426, 436, 438, 442, 444, 448, 458, 462, 468, 470, 474, 478, 482, 486, 490, 500, 506, 521, 526, 530, 541], "here": [9, 13, 14, 15, 17, 23, 25, 26, 31, 33, 34, 35, 40, 41, 42, 48, 62, 63, 83, 84, 134, 136, 139, 143, 144, 149, 150, 152, 153, 154, 155, 160, 214, 215, 221, 225, 230, 237, 243, 246, 247, 251, 256, 263, 288, 314, 340, 342, 350, 351, 357, 360, 363, 364, 368, 371, 376, 377, 381, 388, 390, 394, 395, 396, 406, 414, 415, 498], "doe": [9, 13, 14, 15, 19, 20, 21, 23, 26, 29, 31, 33, 35, 40, 42, 43, 45, 48, 50, 51, 75, 76, 77, 78, 81, 82, 88, 96, 97, 103, 111, 113, 114, 116, 122, 124, 125, 129, 131, 132, 134, 136, 138, 139, 140, 142, 144, 146, 150, 153, 154, 155, 156, 189, 249, 270, 273, 275, 288, 306, 334, 350, 371, 394, 395, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 498, 500, 502, 504, 506, 508, 512, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "effect": [9, 13, 24, 26, 27, 35, 91, 135, 151, 152, 153, 155, 225, 300, 357, 456], "we": [9, 13, 14, 15, 17, 25, 26, 31, 37, 39, 40, 42, 46, 49, 63, 64, 115, 134, 136, 137, 142, 143, 144, 154, 155, 214, 218, 221, 222, 224, 226, 230, 232, 233, 234, 239, 244, 247, 249, 252, 256, 340, 348, 351, 352, 355, 358, 360, 363, 364, 365, 368, 371, 372, 373, 374, 375, 376, 377, 378, 383, 390, 394, 395, 398, 406, 413], "immedi": [9, 394, 537], "dnnl_primitive_attr_destroi": [9, 264, 270], "dnnl": [9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26, 27, 28, 30, 31, 33, 34, 39, 40, 41, 43, 45, 46, 47, 49, 133, 135, 139, 140, 142, 143, 147, 150, 152, 153, 154, 155, 156, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 336, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 416], "primitive_attr": [9, 11, 12, 13, 14, 15, 16, 26, 40, 45, 49, 152, 153, 156, 216, 217, 220, 224, 225, 230, 233, 234, 243, 244, 248, 250, 254, 263, 264, 270, 328, 344, 346, 350, 355, 357, 360, 361, 364, 365, 366, 381, 382, 383, 392, 395, 402, 415, 416, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 504, 506, 508, 514, 515, 517, 518, 519, 521, 523, 524, 526, 528, 530, 532, 536, 538, 541, 543], "set_someth": 9, "set_something_els": 9, "primitive_desc": [9, 13, 14, 15, 16, 17, 26, 31, 39, 40, 41, 46, 135, 143, 156, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 229, 230, 231, 232, 233, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 271, 272, 276, 278, 279, 282, 283, 285, 286, 287, 290, 291, 294, 296, 298, 299, 301, 302, 328, 332, 333, 340, 342, 344, 346, 349, 350, 351, 352, 353, 355, 359, 360, 362, 363, 364, 365, 368, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 499, 501, 504, 505, 507, 510, 512, 515, 516, 518, 520, 522, 524, 525, 527, 529, 531, 535, 540, 542], "pd": [9, 13, 25, 232, 256, 406, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 501, 502, 505, 506, 507, 508, 510, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 540, 541, 542, 543], "happen": [9, 14, 26, 27, 33, 41, 45, 62, 135, 141, 151, 152, 154, 218, 226, 243, 273, 306, 308, 334, 348, 358, 371, 381, 394], "automat": [9, 35, 45, 138, 161, 169, 170, 186, 187, 434, 536], "As": [9, 13, 14, 15, 17, 21, 22, 25, 26, 31, 34, 40, 41, 45, 141, 149, 154, 232, 256, 270, 288, 363, 364, 406, 498, 504], "mention": [9, 15, 17, 31, 41, 45, 115, 232, 350, 363, 364, 371], "abov": [9, 14, 15, 17, 20, 21, 27, 30, 31, 33, 35, 37, 41, 43, 45, 91, 115, 133, 134, 145, 154, 155, 177, 178, 232, 288, 363, 364, 371, 373, 374, 376, 377, 395, 498], "enabl": [9, 12, 13, 15, 16, 17, 21, 24, 26, 27, 28, 29, 30, 31, 33, 36, 37, 39, 42, 43, 44, 45, 46, 47, 49, 133, 134, 138, 139, 145, 147, 154, 156, 214, 224, 227, 228, 240, 244, 247, 252, 260, 264, 288, 300, 314, 326, 328, 340, 349, 350, 355, 365, 371, 374, 381, 383, 390, 398, 415, 496], "extend": [9, 14, 30, 33, 133, 194, 270, 308, 538], "behavior": [9, 10, 12, 13, 15, 17, 21, 26, 27, 39, 41, 43, 44, 45, 46, 48, 49, 139, 143, 145, 158, 159, 166, 169, 171, 172, 189, 190, 194, 263, 270, 288, 289, 303, 318, 332, 373, 374, 375, 376, 377, 378, 415, 498, 534, 537], "explan": [9, 155, 156], "provid": [9, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 26, 28, 30, 33, 34, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 151, 152, 153, 155, 189, 190, 205, 206, 214, 221, 224, 225, 229, 244, 247, 252, 256, 270, 285, 288, 292, 294, 313, 314, 318, 340, 351, 355, 357, 359, 373, 374, 375, 376, 377, 378, 383, 390, 394, 395, 398, 406, 466, 474, 476, 496, 504], "section": [9, 12, 13, 14, 16, 17, 19, 21, 24, 25, 26, 29, 31, 33, 37, 39, 40, 41, 45, 48, 136, 138, 139, 143, 144, 150, 152, 153, 225, 230, 357, 360, 371, 373, 374, 375, 376, 377, 378], "scratchpad": [9, 16, 21, 25, 26, 41, 152, 153, 156, 199, 200, 205, 206, 225, 270, 294, 308, 339, 357, 512, 515, 538], "intermedi": [9, 13, 14, 25, 26, 29, 31, 34, 41, 45, 48, 141, 152, 153, 225, 230, 249, 270, 273, 306, 334, 357, 360, 365], "temporari": [9, 15, 16, 25, 35, 41, 232, 233, 294, 300], "implicit": [9, 12, 19, 23, 25, 26, 37, 49, 141, 146, 171, 172], "down": [9, 12, 26, 34, 38, 45, 152, 154, 155, 395], "convers": [9, 12, 14, 26, 38, 45, 113, 152, 153, 171, 172], "f32": [9, 10, 12, 13, 14, 17, 19, 26, 29, 31, 32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 140, 141, 142, 143, 144, 145, 149, 152, 153, 154, 155, 158, 159, 171, 172, 174, 185, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 339, 340, 342, 344, 346, 350, 351, 353, 355, 357, 359, 360, 362, 364, 365, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 415, 504, 512, 538], "accumul": [9, 13, 14, 22, 29, 37, 45, 59, 136, 137, 141, 143, 152, 153, 156, 158, 159, 225, 241, 256, 261, 268, 270, 274, 295, 308, 316, 339, 357, 372, 406, 413, 503, 504, 512, 538], "lower": [9, 10, 14, 17, 25, 26, 29, 34, 35, 39, 42, 45, 60, 61, 134, 136, 137, 142, 154, 155, 170], "precis": [9, 10, 14, 22, 26, 29, 40, 42, 43, 45, 49, 131, 141, 149, 152, 153, 154, 166, 174, 185, 225, 230, 234, 266, 270, 273, 306, 334, 357, 360, 361, 365, 498, 512], "datatyp": [9, 10, 12, 14, 29, 143, 151, 155, 156, 158, 159, 270], "determinist": [9, 34, 156, 270, 339, 512], "enforc": [9, 11, 41], "quantiz": [9, 12, 13, 29, 38, 40, 45, 49, 69, 71, 72, 141, 143, 177, 178, 179, 217, 220, 228, 230, 233, 263, 264, 267, 270, 339, 346, 350, 361, 364, 374, 381, 382, 415, 416, 504, 512], "infer": [9, 13, 14, 21, 32, 35, 44, 45, 49, 134, 138, 143, 154, 176, 183, 184, 189, 190, 197, 198, 209, 218, 219, 220, 228, 232, 233, 235, 243, 256, 262, 263, 264, 339, 360, 382, 395, 406, 415, 418], "post": [9, 14, 29, 32, 33, 40, 41, 42, 45, 152, 153, 156, 181, 182, 189, 190, 215, 216, 217, 220, 224, 225, 244, 248, 250, 254, 270, 294, 308, 339, 342, 343, 344, 345, 355, 356, 357, 374, 383, 384, 392, 393, 395, 402, 503, 504, 512, 538], "fuse": [9, 13, 14, 16, 17, 19, 26, 31, 37, 38, 40, 41, 42, 43, 49, 189, 190, 250, 270, 271, 294, 342, 343, 344, 345, 355, 356, 381, 382, 383, 384, 392, 393, 504], "appli": [9, 13, 14, 17, 19, 26, 29, 31, 39, 40, 42, 43, 45, 46, 49, 50, 52, 60, 69, 70, 71, 72, 73, 76, 77, 79, 81, 87, 88, 89, 91, 92, 95, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 120, 125, 127, 128, 129, 136, 140, 142, 143, 145, 152, 155, 170, 176, 181, 182, 184, 187, 190, 236, 243, 254, 263, 272, 273, 288, 294, 299, 306, 308, 334, 350, 367, 368, 371, 381, 395, 402, 415, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 496, 541, 543], "mostli": [9, 41, 170, 187, 288], "becaus": [9, 13, 14, 17, 21, 27, 28, 31, 39, 41, 42, 46, 48, 152, 155, 156, 183, 187, 199, 208, 209, 256, 279, 288, 349, 350, 371, 373, 374, 376, 377, 394, 395, 406, 413, 504], "separ": [9, 13, 17, 21, 24, 26, 39, 41, 46, 134, 141, 155, 156, 256, 288, 294, 363, 364, 371, 395, 406], "delai": [9, 221, 222, 351, 352], "successfulli": 9, "whatev": [9, 250, 395], "configur": [9, 15, 17, 20, 26, 28, 29, 35, 39, 41, 42, 46, 49, 86, 137, 143, 151, 152, 155, 156, 190, 205, 206, 210, 211, 220, 270, 271, 282, 285, 300, 348, 349, 350, 355, 356, 394, 417, 503, 504, 512], "want": [9, 14, 15, 35, 41, 45, 134, 376, 377], "howev": [9, 11, 12, 13, 14, 15, 17, 21, 23, 30, 31, 39, 40, 41, 45, 46, 49, 134, 136, 137, 144, 145, 149, 154, 233, 234, 256, 279, 288, 349, 360, 363, 365, 368, 371, 372, 395, 406, 413], "try": [9, 152, 153, 220, 221, 225, 231, 233, 239, 256, 261, 351, 357, 362, 364, 371, 373, 374, 375, 376, 377, 378, 406, 413], "dnnl_unimpl": [9, 135, 152, 153, 183, 208, 209, 220, 221, 225, 231, 233, 300, 351, 357, 362, 364], "unfortun": [9, 45, 134, 150], "about": [9, 13, 15, 41, 49, 135, 138, 139, 154, 155, 229, 288, 359, 371, 395], "what": [9, 13, 14, 41, 42, 155, 177, 239, 261, 264, 288, 294, 368, 371, 394, 413, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 453, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543, 545], "exactli": [9, 14, 26, 41, 45, 104, 105, 106, 107, 108, 109, 110, 288], "go": [9, 40, 66, 154, 230, 360, 368, 371, 372, 413], "wrong": [9, 135, 371], "document": [9, 13, 14, 21, 25, 34, 41, 45, 47, 134, 149], "benefit": [10, 16, 21, 40, 138, 151, 152, 153, 225, 279, 357], "speed": [10, 15, 28, 40, 135, 246, 388], "up": [10, 12, 20, 21, 29, 45, 49, 135, 136, 137, 139, 152, 153, 154, 215, 216, 218, 225, 226, 236, 242, 245, 246, 251, 258, 294, 318, 342, 344, 348, 357, 358, 367, 379, 385, 388, 394, 396, 409, 456], "notic": [10, 12, 21, 155, 181, 182, 371], "impact": [10, 11, 12, 14, 29, 33, 150, 154, 155], "accuraci": [10, 12, 14, 26, 33, 40, 41, 42, 45, 49, 230, 239, 241, 360, 361, 371, 372], "numer": [10, 12, 17, 31, 38, 39, 45, 46, 56, 85, 86, 145, 149, 161, 232, 233, 239, 241, 256, 261, 372, 406, 413], "alter": [10, 12, 143], "low": [10, 16, 29, 33, 40, 151, 152, 153, 225, 266, 270, 276, 278, 290, 357, 436, 438, 440, 442, 444, 446, 500, 502, 512], "accumulation_mod": [10, 29, 269, 328, 512], "accept": [10, 11, 22, 24, 36, 40, 42, 54, 64, 65, 94, 132, 139, 300, 316], "strict": [10, 12, 158, 159, 171, 270], "f64": [10, 26, 29, 31, 46, 136, 145, 159, 185, 270], "integr": [10, 16, 21, 29, 34, 35, 41, 47, 139, 227, 228, 235, 240, 260, 262, 263, 300, 415], "s32": [10, 13, 14, 19, 26, 29, 31, 33, 42, 43, 45, 49, 54, 64, 65, 68, 71, 72, 83, 84, 104, 105, 106, 107, 108, 109, 110, 136, 137, 141, 142, 144, 152, 158, 159, 174, 185, 229, 230, 243, 270, 359, 360, 381, 512], "relax": [10, 158], "partial": [10, 15, 17, 27, 39, 46, 158, 159, 300, 381, 394], "round": [10, 14, 29, 31, 37, 42, 53, 69, 71, 72, 93, 102, 131, 154, 158, 159, 160, 161, 179, 267], "src": [10, 13, 14, 17, 20, 21, 23, 25, 26, 29, 31, 35, 39, 41, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 140, 141, 142, 144, 145, 146, 150, 153, 155, 158, 159, 214, 215, 216, 217, 218, 221, 222, 223, 224, 226, 230, 231, 238, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 270, 271, 279, 282, 285, 340, 342, 344, 346, 348, 351, 352, 353, 354, 355, 358, 360, 362, 363, 364, 369, 371, 379, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 412, 428, 434, 460, 468, 470, 472, 518, 519, 536], "dst": [10, 13, 14, 17, 19, 23, 25, 26, 29, 31, 39, 41, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 140, 141, 142, 144, 145, 146, 153, 158, 159, 160, 161, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 231, 238, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 270, 271, 279, 282, 285, 340, 342, 344, 346, 348, 350, 351, 352, 353, 354, 355, 358, 362, 363, 364, 369, 371, 379, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411, 412, 428, 430, 434, 460, 468, 470, 472, 504, 518, 519, 536], "fastest": [10, 158, 159], "avail": [10, 12, 18, 21, 22, 26, 27, 29, 33, 35, 40, 44, 47, 49, 104, 105, 106, 107, 108, 109, 110, 126, 135, 139, 141, 155, 156, 183, 208, 209, 214, 220, 221, 231, 232, 233, 294, 340, 351, 362, 363, 364, 372, 394, 413, 514], "higher": [10, 13, 17, 24, 26, 28, 35, 38, 39, 42, 46, 49, 134, 136, 137, 142, 154, 155, 156], "f16": [10, 12, 13, 17, 19, 26, 29, 31, 39, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 140, 141, 142, 143, 144, 145, 149, 152, 153, 158, 159, 171, 172, 174, 185], "To": [11, 13, 14, 21, 24, 25, 26, 29, 30, 33, 34, 40, 41, 42, 45, 48, 63, 66, 115, 133, 138, 139, 141, 142, 150, 155, 233, 256, 363, 365, 368, 371, 372, 373, 374, 375, 376, 377, 378, 394, 406, 413], "valid": [11, 21, 29, 37, 41, 49, 53, 54, 60, 61, 63, 64, 65, 66, 67, 68, 93, 94, 139, 143, 155, 166, 169, 177, 178, 194, 200, 250, 272, 288, 316, 318, 319, 330, 394, 456, 496, 498], "certif": 11, "guarante": [11, 33, 41, 126, 127, 135, 154, 360], "multipl": [11, 13, 14, 15, 16, 17, 19, 25, 26, 34, 35, 37, 38, 39, 41, 45, 46, 109, 134, 140, 141, 147, 155, 160, 161, 170, 187, 193, 194, 231, 248, 256, 263, 268, 273, 288, 293, 304, 314, 346, 349, 360, 361, 362, 365, 366, 368, 371, 381, 382, 392, 394, 395, 406, 415, 416, 493, 496, 498, 514, 548, 549], "platform": [11, 26, 29, 44, 45, 139, 152, 153, 156, 220, 221, 225, 231, 233, 326, 351, 357, 362, 364, 395], "exact": [11, 38, 45, 137, 143, 230, 360, 371], "bitwis": [11, 17, 21, 39, 46, 210], "most": [11, 13, 14, 16, 19, 21, 22, 23, 26, 27, 29, 33, 37, 41, 43, 45, 48, 49, 91, 134, 140, 141, 146, 149, 154, 170, 199, 280, 294, 360, 371, 381, 394, 415, 452, 465, 496, 510, 534], "fix": [11, 154], "environ": [11, 12, 20, 21, 27, 28, 33, 36, 44, 45, 47, 134, 135, 138, 139, 150, 155, 156, 300, 394, 395], "particular": [11, 13, 15, 16, 25, 26, 29, 33, 41, 45, 49, 145, 151, 154, 155, 170, 237, 239, 280, 288, 294, 303, 360, 368, 371, 372, 413, 452, 498], "hardwar": [11, 12, 14, 17, 19, 26, 30, 31, 34, 39, 42, 45, 48, 134, 136, 139, 143, 144, 149, 151, 152, 308, 312, 394, 538], "softwar": [11, 20, 44, 45, 152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "runtim": [11, 13, 14, 17, 24, 30, 33, 35, 37, 39, 46, 49, 55, 85, 133, 135, 141, 147, 151, 155, 156, 199, 200, 240, 243, 263, 268, 270, 289, 294, 305, 306, 310, 311, 314, 319, 323, 330, 331, 334, 360, 371, 372, 376, 377, 381, 394, 395, 413, 415, 504, 544], "version": [11, 17, 20, 21, 22, 35, 39, 40, 47, 135, 150, 152, 153, 155, 160, 161, 170, 187, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 288, 294, 300, 328, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 434, 536, 544], "variabl": [11, 12, 17, 19, 20, 21, 23, 26, 27, 28, 31, 33, 36, 39, 43, 44, 46, 47, 48, 49, 50, 53, 60, 62, 63, 73, 76, 77, 79, 81, 87, 88, 91, 93, 111, 116, 118, 120, 129, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 150, 155, 176, 184, 256, 264, 294, 300, 371, 394, 395, 406], "ident": [11, 23, 37, 46, 47, 104, 105, 106, 107, 108, 109, 110, 135, 138, 145, 146, 214, 224, 244, 247, 252, 340, 353, 354, 355, 383, 390, 398, 411, 412], "between": [11, 13, 14, 15, 16, 19, 20, 21, 30, 32, 34, 37, 38, 45, 53, 63, 93, 94, 113, 133, 134, 141, 149, 151, 154, 155, 156, 176, 184, 205, 206, 218, 219, 221, 222, 226, 227, 228, 236, 237, 240, 256, 260, 270, 280, 288, 297, 318, 339, 348, 349, 351, 352, 358, 360, 365, 371, 394, 406, 418, 456, 498, 504, 512, 518], "produc": [11, 15, 17, 26, 31, 34, 35, 36, 37, 41, 43, 44, 87, 145, 155, 288, 294, 300, 360, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 501, 502, 505, 506, 507, 508, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 538, 539, 540, 541, 542, 543], "bit": [11, 12, 13, 21, 22, 27, 29, 38, 40, 41, 42, 45, 149, 162, 165, 166, 174, 185, 230, 233, 270, 273, 300, 306, 326, 334, 350, 360, 372, 504, 512, 537], "wise": [11, 25, 31, 41, 50, 52, 70, 76, 88, 92, 95, 96, 98, 99, 100, 103, 114, 122, 124, 125, 128, 131, 137, 154, 181, 182, 190, 193, 194, 224, 238, 251, 339, 355, 370, 396], "reli": [11, 25, 35, 141], "non": [11, 14, 16, 20, 23, 26, 29, 33, 38, 40, 42, 45, 46, 53, 54, 63, 64, 65, 66, 67, 68, 73, 74, 83, 87, 93, 94, 134, 141, 143, 154, 155, 156, 160, 161, 166, 174, 185, 190, 199, 200, 221, 222, 229, 243, 250, 288, 308, 311, 312, 319, 323, 331, 351, 352, 359, 371, 381, 395, 498], "construct": [11, 16, 30, 34, 36, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 256, 288, 289, 305, 316, 330, 331, 332, 333, 334, 372, 406, 413, 514, 545, 547], "atom": [11, 387], "order": [11, 13, 14, 16, 21, 25, 26, 27, 28, 30, 33, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 141, 143, 144, 154, 155, 170, 177, 178, 187, 210, 211, 221, 222, 226, 239, 270, 273, 275, 276, 278, 288, 289, 290, 295, 300, 306, 334, 351, 352, 358, 371, 373, 374, 376, 377, 395, 434, 436, 438, 440, 442, 444, 446, 456, 498, 500, 502, 504, 512], "dnnl_primitive_attr_set_determinist": [11, 264, 270], "set_determinist": [11, 512], "permit": [11, 22], "dispatch": [11, 12, 16, 21, 26, 28, 300, 417], "perform": [11, 13, 14, 15, 16, 21, 22, 24, 27, 28, 29, 32, 33, 35, 36, 37, 38, 40, 41, 42, 45, 50, 52, 53, 55, 63, 66, 70, 83, 85, 86, 88, 92, 93, 95, 96, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 115, 122, 124, 125, 128, 131, 134, 143, 147, 149, 152, 153, 154, 155, 156, 157, 190, 197, 198, 221, 222, 225, 226, 227, 228, 240, 249, 250, 251, 260, 270, 271, 272, 273, 276, 278, 279, 282, 285, 286, 287, 288, 290, 291, 300, 302, 306, 326, 334, 339, 348, 349, 350, 351, 352, 357, 358, 360, 361, 365, 371, 372, 374, 381, 396, 413, 415, 434, 496, 503, 504, 512, 536], "matmul": [11, 12, 21, 29, 33, 37, 49, 155, 156, 179, 193, 229, 230, 231, 234, 235, 243, 262, 263, 264, 267, 287, 328, 339, 361, 366, 375, 378, 382, 393, 416, 510], "normal": [11, 25, 29, 33, 35, 41, 55, 56, 85, 86, 160, 161, 189, 190, 193, 194, 215, 217, 242, 245, 246, 268, 286, 293, 294, 339, 343, 346, 365, 371, 380, 386, 389, 394, 425, 426, 427, 428, 457, 458, 459, 460, 473, 474, 475, 476, 485, 487, 548], "especi": [11, 41, 45, 138, 155, 288, 503], "gpu": [11, 13, 16, 17, 19, 23, 24, 26, 29, 30, 31, 32, 33, 46, 48, 49, 133, 136, 138, 139, 140, 141, 143, 144, 145, 146, 155, 156, 167, 168, 214, 236, 237, 240, 241, 260, 261, 262, 263, 280, 319, 330, 339, 340, 371, 376, 377, 394, 395, 415, 418, 544], "devic": [11, 16, 21, 29, 30, 133, 135, 156, 191, 192, 212, 213, 260, 264, 280, 289, 305, 314, 319, 323, 330, 331, 332, 333, 368, 371, 372, 373, 374, 375, 376, 377, 378, 413], "benefici": [12, 31, 41, 152, 153, 154, 225, 357, 503], "speedup": [12, 395], "how": [12, 13, 14, 15, 17, 19, 23, 26, 30, 31, 33, 34, 39, 40, 42, 43, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 83, 84, 93, 94, 126, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 160, 161, 218, 219, 220, 221, 222, 226, 227, 228, 229, 230, 231, 232, 233, 235, 240, 256, 260, 262, 270, 273, 288, 306, 334, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 504], "narrow": 12, "bf16": [12, 13, 17, 19, 22, 26, 29, 31, 32, 39, 41, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 140, 141, 142, 143, 144, 145, 149, 152, 153, 171, 172, 174, 185, 221, 225, 263, 339, 357, 415], "tf32": [12, 171, 172], "furthermor": [12, 26, 63], "do": [12, 13, 14, 15, 17, 21, 22, 29, 40, 41, 45, 53, 93, 133, 134, 142, 146, 149, 152, 154, 156, 170, 187, 203, 204, 227, 228, 233, 235, 240, 241, 249, 260, 262, 288, 363, 394, 395, 496, 498], "affect": [12, 13, 33, 42, 45, 135, 154, 170, 300, 538], "remain": [12, 21, 25, 26, 63, 154, 232, 233, 256, 363, 364, 394, 406, 498, 504], "3": [12, 13, 14, 29, 31, 35, 37, 39, 42, 45, 49, 55, 56, 57, 81, 86, 100, 115, 139, 143, 147, 152, 153, 154, 166, 173, 174, 185, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 238, 239, 240, 241, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 288, 294, 318, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 369, 371, 372, 373, 374, 376, 377, 383, 385, 388, 392, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 456, 498], "disabl": [12, 21, 24, 27, 28, 44, 138, 139, 155, 276, 278, 283, 287, 292, 300, 313, 314, 438, 440, 444, 446], "smaller": [12, 21, 60, 61, 91, 141, 243, 381], "least": [12, 16, 20, 49, 62, 138, 273, 306, 332, 334, 368, 371, 496], "accur": [12, 26, 45, 234, 365], "expon": [12, 29, 99, 103, 149, 160, 161, 166, 174, 185], "mantissa": [12, 29, 149, 166, 174, 185], "ignor": [12, 26, 28, 29, 53, 54, 57, 64, 83, 84, 93, 94, 239, 285, 288, 295, 371, 474, 476], "compli": [12, 395], "second": [12, 13, 24, 25, 37, 45, 63, 101, 104, 105, 106, 107, 108, 109, 110, 115, 170, 187, 199, 200, 227, 240, 256, 260, 270, 288, 318, 368, 373, 374, 376, 377, 394, 406, 498, 504], "argument": [12, 13, 29, 40, 99, 156, 183, 199, 200, 208, 209, 214, 215, 216, 217, 221, 222, 223, 224, 231, 238, 242, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 270, 271, 282, 285, 289, 294, 299, 305, 318, 330, 331, 332, 333, 340, 342, 344, 346, 349, 351, 352, 353, 355, 362, 363, 364, 369, 371, 372, 379, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411, 422, 424, 454, 462, 464, 478, 480, 482, 484, 490, 492, 498, 510, 512, 518, 541, 543], "dnnl_primitive_attr_set_fpmath_mode_v2": [12, 264, 270], "set_fpmath_mod": [12, 263, 415, 512], "weight": [12, 13, 15, 21, 23, 24, 25, 26, 29, 33, 40, 41, 42, 43, 45, 49, 63, 64, 65, 66, 67, 68, 91, 137, 141, 143, 149, 154, 155, 156, 170, 176, 184, 187, 197, 198, 199, 200, 203, 204, 214, 219, 220, 221, 222, 224, 226, 228, 229, 231, 232, 233, 243, 244, 247, 248, 249, 250, 252, 256, 263, 270, 276, 278, 283, 287, 288, 291, 294, 299, 339, 340, 349, 350, 351, 352, 355, 358, 362, 363, 364, 374, 381, 382, 383, 390, 392, 394, 395, 398, 406, 416, 422, 424, 426, 428, 436, 437, 438, 440, 442, 443, 444, 446, 458, 460, 462, 464, 468, 469, 470, 472, 474, 476, 478, 480, 482, 484, 490, 492, 494, 504, 512, 515, 524, 541, 543], "addit": [12, 13, 16, 17, 19, 21, 24, 25, 26, 27, 28, 29, 33, 34, 41, 43, 45, 49, 52, 64, 66, 67, 68, 91, 110, 134, 139, 152, 153, 156, 190, 200, 214, 224, 225, 244, 247, 252, 288, 318, 340, 350, 355, 357, 368, 371, 372, 383, 390, 394, 395, 398, 413], "de": [12, 69, 71, 72, 155, 263, 394, 415], "refer": [12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 26, 29, 30, 31, 33, 37, 39, 42, 43, 46, 47, 48, 49, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 200, 220, 221, 225, 227, 228, 231, 233, 235, 260, 262, 270, 271, 273, 279, 282, 285, 288, 294, 306, 334, 351, 357, 360, 362, 364, 368, 371, 372, 394, 395, 413, 428, 460], "tutori": [12, 29, 32, 49, 230, 234, 243, 263, 339], "decompress": [12, 29, 49, 263, 339], "onednn_default_fpmath_mod": 12, "dnnl_set_default_fpmath_mod": [12, 264, 281], "set_default_fpmath_mod": [12, 300, 328], "build": [12, 15, 44, 47, 126, 147, 205, 206, 218, 219, 221, 222, 226, 227, 228, 232, 233, 235, 240, 256, 260, 262, 300, 318, 326, 348, 349, 351, 352, 358, 363, 364, 372, 406, 456], "arm": [12, 155, 326], "bfloat16": [12, 27, 29, 41, 162, 165, 166, 174, 221, 339, 351], "kernel": [12, 13, 21, 25, 28, 30, 35, 44, 53, 54, 63, 64, 65, 66, 67, 68, 93, 94, 136, 139, 151, 152, 153, 154, 156, 177, 178, 199, 200, 218, 219, 221, 222, 225, 226, 241, 249, 251, 261, 264, 270, 290, 300, 308, 312, 348, 349, 351, 352, 357, 358, 365, 394, 396, 500, 502, 504, 515, 538, 539], "introduc": [12, 33, 35, 45, 138, 149, 154, 371, 395], "drop": 12, "typic": [13, 14, 16, 17, 23, 34, 35, 39, 41, 42, 45, 48, 91, 132, 134, 141, 144, 145, 154, 156, 181, 182, 227, 228, 230, 240, 243, 260, 263, 288, 294, 297, 360, 371, 381, 415], "bandwidth": [13, 41, 394], "pressur": [13, 41], "lead": [13, 15, 17, 19, 21, 22, 26, 29, 31, 37, 39, 41, 45, 46, 48, 141, 152, 153, 154, 177, 225, 234, 273, 306, 308, 334, 357, 365, 371, 373, 376, 377, 538, 539], "append": [13, 270, 308, 504, 538], "mechan": [13, 30, 38, 44, 47, 133, 134, 232, 233, 363, 364], "just": [13, 14, 21, 25, 26, 28, 31, 41, 44, 138, 139, 150, 152, 153, 154, 155, 160, 170, 220, 221, 225, 231, 233, 351, 357, 362, 364, 365, 368, 371, 372, 373, 374, 375, 376, 377, 378, 394, 413], "like": [13, 16, 17, 21, 25, 26, 34, 41, 43, 45, 47, 48, 56, 91, 136, 143, 154, 155, 270, 318, 360, 365, 371, 373, 374, 375, 376, 377, 378, 503, 504], "dnnl_post_ops_t": [13, 264, 270, 504], "post_op": [13, 40, 152, 153, 156, 216, 217, 220, 224, 225, 234, 243, 244, 248, 250, 264, 270, 328, 344, 346, 350, 355, 357, 365, 381, 383, 392, 395, 465, 512], "attach": [13, 14, 21, 23, 40, 41, 134, 152, 153, 225, 357, 368, 371, 372, 373, 375, 376, 377, 378, 413, 496, 504], "set_post_op": [13, 26, 40, 152, 153, 216, 217, 220, 224, 225, 234, 243, 244, 248, 250, 344, 346, 350, 355, 357, 365, 381, 383, 392, 395, 512], "dnnl_primitive_attr_set_post_op": [13, 264, 270], "simpl": [13, 14, 22, 26, 44, 135, 150, 151, 155, 218, 226, 227, 230, 234, 235, 240, 243, 260, 262, 348, 350, 358, 360, 365, 371, 373, 375, 376, 377, 378, 381], "po": [13, 234, 243, 365, 381], "assert": [13, 15, 33, 154, 219, 221, 222, 227, 228, 230, 232, 233, 235, 240, 260, 262, 288, 349, 351, 352, 360, 373, 374, 375, 376, 377, 378, 498], "len": [13, 273, 306, 334, 504], "append_someth": 13, "append_something_els": 13, "note": [13, 14, 15, 21, 29, 40, 41, 42, 45, 65, 134, 143, 152, 153, 154, 155, 170, 214, 215, 223, 225, 227, 228, 230, 233, 235, 246, 247, 251, 256, 260, 262, 275, 294, 314, 318, 340, 342, 349, 350, 353, 357, 360, 363, 364, 371, 388, 390, 396, 406, 434], "matter": [13, 33, 41, 45, 373, 374, 376, 377], "further": [13, 25, 26, 30, 63, 133, 142, 170, 187, 395], "would": [13, 14, 15, 17, 21, 25, 26, 28, 35, 39, 40, 41, 45, 46, 49, 136, 141, 152, 153, 154, 225, 230, 270, 271, 273, 288, 299, 306, 334, 350, 357, 360, 371, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 498, 504, 512, 518, 541, 543], "togeth": [13, 36, 154, 299, 395, 422, 462, 478, 482, 490, 492, 503, 541], "anoth": [13, 15, 25, 41, 113, 134, 139, 143, 152, 154, 227, 228, 240, 260, 294, 318, 349, 368, 371, 372, 413, 456, 465, 498], "sequenc": [13, 16, 25, 26, 45, 139, 170, 232, 233, 256, 270, 363, 364, 368, 372, 395, 406, 413, 504], "appear": [13, 23, 41, 144, 154, 155], "maximum": [13, 14, 16, 19, 37, 41, 106, 136, 151, 179, 232, 233, 251, 256, 267, 277, 306, 360, 396, 406], "32": [13, 22, 41, 42, 45, 149, 152, 153, 166, 170, 174, 185, 221, 222, 224, 225, 232, 233, 235, 262, 264, 270, 273, 294, 306, 334, 350, 351, 352, 355, 357, 504, 512], "page": [13, 16, 23, 41, 42, 66, 139, 140, 141, 146, 414], "moreov": [13, 25, 28, 31, 42, 134, 170, 187], "depend": [13, 14, 15, 16, 17, 20, 21, 29, 34, 35, 38, 39, 42, 45, 46, 47, 49, 59, 115, 134, 137, 138, 143, 154, 155, 156, 170, 187, 270, 273, 275, 279, 288, 289, 294, 305, 306, 319, 323, 330, 331, 332, 333, 334, 348, 349, 360, 371, 372, 394, 413, 434, 448, 450, 498, 504, 512], "actual": [13, 14, 15, 16, 26, 33, 41, 43, 45, 134, 143, 152, 153, 154, 169, 186, 188, 207, 225, 270, 288, 294, 357, 360, 368, 371, 394, 496, 498, 512, 524], "instanc": [13, 14, 15, 17, 25, 26, 28, 40, 45, 49, 134, 138, 141, 150, 154, 170, 242, 288, 306, 316, 321, 334, 371, 379, 453, 503, 537], "veri": [13, 14, 15, 41, 45, 149, 154, 368, 371], "slow": 13, "robust": [13, 40, 41], "code": [13, 16, 21, 22, 23, 25, 26, 27, 28, 30, 33, 34, 40, 41, 45, 47, 133, 135, 138, 139, 141, 146, 151, 152, 153, 154, 155, 225, 227, 228, 240, 241, 260, 288, 300, 349, 350, 357, 363, 364, 368, 372, 373, 374, 375, 376, 377, 378, 394, 395, 413, 417], "inspect": [13, 16, 294, 326, 371], "index": [13, 17, 19, 23, 25, 26, 31, 33, 39, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 140, 141, 142, 143, 144, 145, 146, 154, 156, 218, 226, 239, 264, 270, 275, 280, 288, 289, 294, 305, 315, 326, 329, 332, 333, 348, 349, 358, 363, 364, 368, 371, 372, 413, 430, 434, 452, 454, 496, 498, 504, 510, 512, 515, 518, 536], "less": [13, 19, 26, 49, 91, 134, 142, 160, 161, 256, 292, 313, 350, 406, 452], "than": [13, 15, 19, 21, 24, 26, 29, 31, 41, 45, 49, 60, 61, 91, 126, 141, 142, 146, 154, 155, 160, 161, 200, 205, 206, 221, 222, 226, 243, 292, 313, 351, 352, 358, 371, 381, 395, 452], "its": [13, 15, 16, 19, 21, 27, 29, 31, 33, 37, 38, 40, 43, 45, 48, 99, 101, 133, 134, 143, 151, 154, 155, 170, 189, 243, 256, 263, 288, 316, 320, 349, 350, 371, 372, 381, 387, 406, 413, 415, 452, 465, 496, 510, 534, 537], "popular": [13, 14, 38, 154, 371], "activ": [13, 14, 15, 17, 20, 25, 37, 42, 43, 60, 76, 87, 96, 143, 154, 170, 187, 199, 200, 243, 249, 264, 270, 299, 381, 394, 456, 504, 512, 515, 541, 543], "preced": [13, 17, 21, 25, 27, 28, 37, 44, 48, 54, 64, 65, 68, 136, 138, 139, 144, 155, 170, 394], "inner": [13, 25, 29, 40, 45, 154, 170, 193, 194, 219, 244, 268, 293, 339, 349, 384, 394, 467, 468, 469, 470, 471, 472, 498, 548], "product": [13, 25, 29, 40, 45, 49, 91, 126, 152, 153, 193, 194, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 231, 236, 237, 238, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 264, 268, 273, 288, 293, 306, 334, 339, 340, 342, 344, 346, 348, 349, 351, 352, 353, 355, 357, 358, 362, 367, 369, 379, 384, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 407, 409, 411, 467, 468, 469, 470, 471, 472, 498, 548], "dnnl_post_ops_append_eltwis": [13, 264, 270], "append_eltwis": [13, 40, 152, 153, 216, 220, 224, 225, 243, 244, 248, 250, 344, 350, 355, 357, 381, 383, 392, 395, 504], "simplic": [13, 14, 143, 154, 223, 230, 234, 353, 360, 365, 368, 372, 413], "algorithm": [13, 14, 17, 21, 31, 40, 41, 136, 140, 142, 152, 153, 155, 156, 160, 199, 200, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 229, 231, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 270, 272, 276, 278, 279, 286, 290, 296, 298, 302, 328, 340, 342, 344, 346, 349, 350, 351, 352, 353, 355, 357, 359, 362, 368, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 504, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "alg": [13, 155, 394, 395], "alpha": [13, 17, 26, 31, 39, 42, 48, 73, 74, 79, 80, 87, 100, 137, 152, 153, 156, 177, 178, 199, 200, 216, 218, 221, 222, 224, 225, 226, 234, 239, 243, 244, 246, 248, 263, 264, 270, 273, 279, 286, 291, 299, 306, 308, 328, 334, 344, 348, 351, 352, 355, 357, 358, 365, 371, 381, 383, 388, 392, 395, 415, 448, 450, 486, 488, 504, 506, 508, 515, 538, 541, 543], "beta": [13, 17, 26, 31, 39, 46, 48, 55, 56, 79, 80, 85, 86, 99, 120, 121, 141, 152, 153, 156, 177, 178, 199, 200, 216, 218, 221, 222, 224, 225, 226, 234, 239, 244, 246, 248, 264, 270, 271, 273, 279, 282, 285, 286, 299, 306, 308, 328, 334, 344, 348, 351, 352, 355, 357, 358, 365, 371, 383, 388, 392, 395, 448, 450, 486, 488, 504, 515, 538, 541, 543], "replac": [13, 31, 45, 49, 60, 61, 139, 143, 144, 150, 155, 365, 366, 371], "operatornam": [13, 14, 29, 31, 152], "preserv": [13, 15, 40, 41, 218, 226, 348, 358], "exist": [13, 16, 29, 30, 33, 35, 49, 133, 203, 204, 288, 315, 319, 323, 498], "prior": [13, 270, 289, 294, 295, 332, 371, 504, 510, 511], "shift": [13, 25, 42, 45, 56, 85, 189, 190, 215, 217, 242, 245, 263, 264, 270, 271, 282, 285, 294, 342, 346, 379, 385, 415, 474, 476, 512], "multipli": [13, 15, 25, 37, 45, 143, 179, 234, 241, 256, 261, 267, 270, 273, 288, 304, 306, 334, 365, 372, 406, 413, 504, 536], "scale": [13, 19, 23, 24, 25, 26, 33, 37, 38, 40, 43, 45, 49, 56, 69, 71, 72, 73, 74, 83, 84, 85, 86, 102, 141, 142, 145, 146, 152, 156, 177, 178, 189, 190, 215, 217, 220, 228, 230, 233, 242, 243, 245, 254, 259, 263, 264, 270, 271, 273, 282, 285, 294, 298, 304, 306, 308, 334, 342, 346, 350, 360, 361, 363, 364, 365, 366, 374, 379, 381, 382, 385, 402, 403, 411, 415, 416, 474, 476, 504, 511, 512, 521, 523, 536, 538], "residu": [13, 35, 232, 503], "learn": [13, 14, 21, 25, 26, 27, 29, 38, 40, 41, 45, 134, 162, 165, 249, 326, 394, 503], "block": [13, 16, 23, 25, 33, 35, 139, 151, 152, 153, 155, 156, 169, 170, 186, 187, 199, 200, 225, 250, 288, 308, 326, 357, 371, 394, 498, 503, 539], "previous": [13, 42, 227, 228, 240, 260, 288, 350, 372, 394, 413, 496, 498, 512], "scenario": [13, 29, 30, 37, 133, 134, 136, 176, 184, 350], "previou": [13, 14, 21, 31, 37, 40, 42, 141, 143, 154, 218, 226, 230, 243, 263, 270, 348, 358, 360, 381, 415, 504], "magnitud": 13, "operand": [13, 37, 45, 155, 270, 504], "s8": [13, 14, 17, 19, 22, 26, 29, 31, 33, 37, 39, 42, 43, 46, 49, 69, 71, 72, 102, 136, 137, 141, 142, 143, 144, 145, 152, 153, 155, 174, 185, 220, 228, 230, 231, 233, 243, 254, 263, 350, 360, 362, 364, 374, 381, 402, 415], "u8": [13, 14, 19, 22, 26, 29, 31, 32, 37, 42, 43, 46, 49, 69, 71, 72, 102, 136, 137, 141, 142, 143, 144, 145, 152, 153, 155, 174, 185, 217, 220, 228, 230, 231, 233, 243, 339, 347, 350, 360, 362, 364, 374, 381], "gemm": [13, 15, 21, 26, 45, 154, 156, 232, 233, 364, 395], "cdot": [13, 14, 17, 25, 26, 31, 39, 42, 43, 45, 46, 48, 49, 53, 56, 63, 69, 71, 72, 80, 85, 91, 93, 102, 104, 105, 106, 107, 108, 109, 110, 127, 136, 137, 141, 142, 143, 146, 152, 161, 360], "_point": 13, "origin": [13, 14, 17, 31, 39, 41, 42, 46, 83, 84, 141, 142, 145, 146, 154, 155, 160, 243, 263, 270, 279, 288, 350, 360, 381, 415, 504], "reinterpret": [13, 26, 30, 270, 504], "_data": 13, "_type": 13, "1x1": [13, 156, 270, 504], "seen": [13, 395], "model": [13, 16, 25, 26, 29, 30, 34, 35, 37, 38, 41, 42, 43, 69, 102, 133, 143, 219, 221, 222, 226, 232, 233, 239, 256, 265, 326, 351, 352, 358, 363, 364, 365, 371, 406], "mobilenet_v1": 13, "stack": [13, 143], "opportun": 13, "dnnl_post_ops_append_dw": [13, 264, 270], "append_dw": [13, 504], "better": [13, 19, 21, 41, 149, 154, 156, 288, 349, 360, 365, 371, 374, 394, 395], "readabl": [13, 35, 371, 413], "assum": [13, 14, 16, 20, 21, 26, 45, 47, 63, 69, 71, 72, 102, 137, 139, 142, 154, 214, 224, 230, 234, 244, 247, 252, 256, 270, 273, 288, 294, 306, 334, 340, 355, 360, 363, 364, 365, 371, 372, 383, 390, 394, 395, 398, 406, 413, 498, 504], "2d": [13, 17, 26, 31, 39, 43, 45, 48, 49, 91, 136, 137, 142, 144, 145, 151, 154, 156, 170, 187, 270, 276, 278, 290, 298, 371, 395, 409, 410, 436, 438, 440, 442, 444, 446, 500, 502, 504], "notat": [13, 15, 31, 49, 154, 170, 187], "conv_1x1": 13, "spatial": [13, 15, 17, 25, 26, 39, 43, 48, 53, 54, 63, 64, 65, 66, 67, 68, 83, 84, 93, 94, 136, 137, 142, 144, 154, 156, 170, 187, 270, 276, 278, 288, 290, 298, 371, 436, 438, 440, 442, 444, 446, 456, 500, 502, 504, 521, 523], "kh": [13, 14, 25, 26, 43, 45, 53, 63, 64, 93, 136, 224, 228, 249, 250, 251, 270, 355, 394, 395, 396, 504], "kw": [13, 14, 25, 26, 43, 45, 53, 63, 93, 136, 224, 228, 249, 250, 251, 270, 355, 394, 395, 396, 504], "conv_dw": 13, "g": [13, 14, 15, 17, 20, 21, 25, 26, 31, 33, 35, 39, 41, 43, 46, 47, 63, 85, 86, 144, 150, 151, 152, 153, 154, 155, 187, 214, 224, 225, 227, 228, 230, 233, 234, 240, 247, 256, 260, 263, 264, 270, 288, 340, 355, 357, 360, 365, 371, 373, 374, 376, 377, 390, 406, 415, 434, 454, 504, 512, 514, 519, 536], "oc": [13, 14, 25, 26, 43, 63, 218, 224, 226, 228, 244, 249, 250, 264, 270, 348, 355, 358, 383, 394, 395, 504], "ic": [13, 14, 25, 26, 43, 63, 69, 102, 142, 145, 215, 216, 217, 218, 223, 224, 226, 227, 228, 238, 240, 242, 244, 246, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 264, 270, 342, 344, 346, 348, 353, 355, 358, 369, 379, 383, 388, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 504], "pad_l": 13, "pad_r": 13, "conv_": [13, 14], "dw": [13, 25, 26, 53, 63, 64, 93, 136, 251, 396], "dst_": [13, 14, 31, 45, 69, 99, 102], "n": [13, 14, 15, 17, 19, 23, 25, 26, 33, 37, 39, 42, 43, 46, 48, 49, 53, 55, 56, 58, 62, 63, 85, 86, 89, 91, 93, 127, 136, 137, 139, 141, 142, 144, 146, 147, 152, 153, 154, 156, 170, 187, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 273, 275, 288, 304, 306, 308, 328, 334, 340, 342, 344, 346, 348, 351, 353, 355, 357, 358, 359, 360, 362, 364, 365, 367, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 504, 537, 538, 539, 546], "oc_": 13, "ceil": [13, 53, 93, 177, 178, 270, 504], "oh_": 13, "ow_": 13, "oh_conv_1x1": 13, "ow_conv_1x1": 13, "height": [13, 25, 26, 63, 64, 93, 94, 154, 170, 187, 215, 216, 217, 223, 224, 238, 242, 244, 246, 251, 252, 253, 254, 255, 257, 259, 276, 278, 290, 342, 344, 346, 349, 353, 355, 369, 379, 383, 388, 396, 398, 400, 402, 404, 407, 411, 436, 438, 440, 442, 444, 446, 500, 502], "width": [13, 25, 26, 63, 64, 93, 94, 154, 170, 187, 215, 216, 217, 223, 224, 238, 242, 244, 246, 251, 252, 253, 254, 255, 257, 259, 276, 278, 290, 342, 344, 346, 349, 353, 355, 369, 379, 383, 388, 396, 398, 400, 402, 404, 407, 411, 436, 438, 440, 442, 444, 446, 500, 502], "conv": [13, 14, 26, 40, 135, 139, 150, 155, 218, 220, 221, 222, 226, 227, 228, 240, 249, 250, 260, 348, 350, 351, 352, 358, 374, 394, 395], "bia": [13, 14, 25, 26, 42, 43, 49, 58, 59, 63, 66, 85, 86, 91, 143, 156, 161, 170, 187, 190, 197, 198, 214, 220, 221, 222, 224, 226, 244, 247, 248, 256, 270, 276, 278, 283, 287, 294, 299, 340, 349, 350, 351, 352, 355, 358, 383, 390, 392, 406, 422, 424, 438, 440, 444, 446, 462, 464, 470, 472, 478, 480, 482, 484, 490, 492, 494, 504, 515, 524, 541, 543], "though": [13, 15, 22, 41, 45, 143, 205, 206, 360, 365, 371], "convent": [13, 17, 19, 23, 26, 31, 37, 39, 41, 43, 46, 48, 49, 50, 53, 60, 62, 63, 73, 76, 77, 79, 81, 87, 88, 91, 93, 111, 116, 118, 120, 129, 136, 137, 141, 142, 143, 144, 145, 146, 154, 155, 288, 339, 371, 394, 414], "impli": [13, 126, 152, 153, 190, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "part": [13, 14, 16, 21, 34, 38, 44, 135, 138, 152, 153, 225, 227, 228, 235, 240, 260, 262, 288, 308, 357, 371, 375, 378, 394, 498, 538, 539], "dst_1x1": 13, "wei_dw": 13, "dst_dw": 13, "dnnl_format_tag_ani": [13, 136, 143, 170, 187, 218, 226, 272, 276, 278, 283, 288, 291, 294, 296, 298, 299, 348, 358], "coincid": [13, 154, 308, 538], "util": [13, 15, 28, 33, 134, 152, 153, 225, 256, 268, 274, 357, 372, 406], "lifetim": [13, 34, 133, 200, 227, 228, 235, 240, 260, 262, 270, 289, 294, 332], "through": [13, 21, 24, 29, 34, 40, 42, 135, 150, 151, 152, 256, 318, 350, 368, 371, 373, 374, 376, 377, 394, 406, 413, 456], "thu": [13, 49, 134, 256, 394, 406], "gain": [13, 40, 395], "expect": [13, 16, 17, 21, 26, 33, 38, 39, 43, 45, 46, 48, 49, 135, 136, 142, 152, 153, 155, 156, 160, 161, 189, 199, 200, 225, 239, 241, 270, 308, 357, 371, 372, 394, 395, 434, 496, 512, 514, 519, 524, 536, 537, 539], "dnnl_post_ops_append_binari": [13, 264, 270], "append_binari": [13, 152, 153, 217, 225, 346, 357, 504], "desc": [13, 14, 15, 16, 30, 33, 40, 41, 133, 135, 139, 152, 153, 154, 156, 199, 200, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 288, 332, 333, 340, 342, 344, 346, 349, 350, 351, 352, 353, 355, 357, 359, 360, 362, 363, 364, 365, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 500, 502, 504, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "src1": [13, 270, 430, 504], "_1": [13, 92, 95], "per": [13, 19, 23, 26, 38, 39, 43, 46, 49, 64, 66, 67, 68, 69, 71, 72, 85, 86, 101, 102, 134, 145, 219, 254, 288, 300, 360, 395, 402, 504, 544], "broadcast": [13, 19, 23, 49, 52, 58, 70, 91, 92, 95, 98, 125, 128, 137, 141, 146, 270, 272, 504], "channel": [13, 17, 25, 26, 38, 39, 42, 43, 46, 48, 56, 58, 59, 63, 64, 65, 66, 67, 68, 69, 71, 72, 85, 86, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 137, 143, 144, 145, 156, 160, 161, 170, 187, 214, 215, 216, 217, 223, 224, 228, 238, 242, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 286, 288, 340, 342, 344, 346, 349, 353, 355, 369, 371, 374, 379, 383, 385, 388, 390, 394, 396, 398, 400, 402, 404, 406, 407, 408, 409, 411, 456, 504], "format_tag": [13, 14, 16, 19, 26, 40, 41, 43, 49, 137, 140, 142, 143, 152, 153, 154, 155, 156, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 229, 231, 232, 233, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 288, 328, 340, 342, 344, 346, 351, 352, 353, 355, 357, 359, 362, 363, 364, 368, 369, 371, 372, 379, 381, 382, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 416, 422, 424, 436, 438, 440, 442, 444, 446, 462, 464, 468, 470, 472, 478, 480, 482, 484, 490, 492, 496, 498, 517, 523, 541, 543], "tag": [13, 14, 15, 26, 33, 41, 43, 49, 136, 142, 152, 153, 156, 170, 187, 188, 207, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 229, 231, 238, 239, 242, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 288, 294, 340, 342, 344, 346, 349, 350, 351, 352, 353, 355, 357, 359, 362, 368, 369, 371, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 498], "later": [13, 16, 20, 21, 41, 85, 154, 214, 215, 238, 247, 252, 340, 342, 369, 371, 390, 398], "mismatch": [13, 41, 155, 156, 239, 371], "suboptim": [13, 17, 26, 31, 39, 46, 48, 288, 395, 496], "initi": [13, 16, 25, 27, 30, 41, 49, 134, 137, 143, 152, 153, 154, 156, 162, 165, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 257, 259, 261, 263, 272, 276, 278, 283, 288, 289, 291, 296, 298, 299, 300, 305, 308, 318, 320, 332, 333, 340, 342, 344, 346, 349, 351, 352, 353, 355, 357, 358, 360, 362, 363, 364, 365, 369, 371, 379, 381, 383, 385, 390, 392, 398, 400, 402, 404, 407, 411, 415, 422, 424, 436, 438, 440, 442, 444, 446, 462, 464, 468, 470, 472, 478, 480, 482, 484, 490, 492, 496, 517, 523, 538, 541, 543], "get_params_binari": [13, 504], "dnnl_post_ops_append_prelu": [13, 264, 270], "append_prelu": [13, 504], "int": [13, 14, 45, 139, 147, 152, 153, 154, 166, 169, 170, 194, 200, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 275, 288, 289, 292, 294, 295, 300, 301, 302, 304, 305, 306, 308, 313, 314, 319, 328, 329, 332, 333, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 367, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 537, 540, 541, 542, 543, 544], "mask": [13, 14, 26, 42, 43, 49, 134, 141, 220, 230, 234, 243, 263, 264, 270, 350, 360, 365, 381, 415, 504, 512, 537], "assumpt": [13, 25, 142, 373, 374, 375, 376, 377, 378, 381, 415], "dnnl_arg_attr_multiple_post_op": [13, 19, 26, 31, 39, 43, 46, 49, 136, 140, 142, 145, 217, 264, 294, 346, 504], "dnnl_arg_weight": [13, 14, 26, 40, 43, 49, 137, 218, 219, 220, 221, 222, 224, 226, 229, 230, 231, 234, 243, 244, 248, 249, 250, 252, 263, 264, 294, 348, 350, 351, 352, 355, 358, 359, 360, 362, 365, 381, 383, 392, 394, 395, 398, 415, 504], "fp32": [13, 21, 29, 41], "plain": [13, 14, 23, 49, 141, 170, 187, 270, 288, 395, 504], "ab": [13, 25, 31, 33, 37, 42, 43, 49, 51, 152, 153, 160, 161, 179, 187, 217, 225, 231, 243, 263, 267, 270, 346, 357, 362, 381, 415, 498, 504], "acb": [13, 187, 270, 504], "acdb": [13, 25, 187, 270, 504], "acdeb": [13, 187, 270, 504], "th": [13, 42, 104, 105, 106, 107, 108, 109, 110, 270, 504, 512], "dedic": [13, 33, 40, 151, 152, 270, 504, 512], "along": [13, 34, 49, 62, 71, 72, 104, 105, 106, 107, 108, 109, 110, 118, 135, 140, 144, 145, 150, 155, 156, 263, 270, 288, 301, 407, 408, 409, 410, 415, 504, 512, 526, 528], "common": [13, 14, 16, 34, 41, 134, 152, 153, 155, 205, 206, 225, 256, 268, 270, 293, 357, 368, 371, 372, 406, 413, 504, 512], "whole": [13, 14, 137, 152, 153, 154, 225, 256, 270, 357, 406, 504, 512], "laid": [13, 16, 25, 154, 170, 187, 270, 288, 297, 371, 394, 504], "out": [13, 14, 16, 17, 25, 30, 33, 34, 37, 48, 63, 64, 65, 66, 67, 68, 133, 136, 139, 144, 151, 153, 154, 155, 156, 170, 183, 187, 193, 194, 208, 209, 210, 211, 218, 226, 232, 238, 239, 252, 264, 270, 275, 288, 297, 304, 348, 358, 363, 364, 369, 371, 394, 398, 434, 504, 535, 539], "cnn": [13, 17, 25, 26, 32, 41, 42, 43, 44, 46, 136, 144, 149, 170, 187, 219, 220, 221, 222, 270, 288, 339, 360, 371, 394, 504], "4d": [13, 43, 85, 86, 154, 170, 187, 270, 288, 371, 504], "h": [13, 17, 19, 25, 26, 29, 39, 43, 47, 48, 55, 56, 58, 136, 137, 141, 150, 154, 156, 159, 160, 164, 165, 166, 168, 169, 170, 172, 173, 178, 180, 182, 184, 187, 190, 192, 194, 196, 198, 200, 202, 204, 206, 207, 209, 211, 213, 218, 219, 222, 226, 227, 228, 231, 232, 233, 235, 236, 239, 240, 241, 249, 256, 260, 261, 262, 270, 288, 348, 352, 358, 362, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 394, 406, 413, 454, 455, 456, 504, 544], "w": [13, 17, 19, 25, 26, 39, 42, 43, 48, 49, 55, 56, 58, 136, 137, 141, 143, 154, 166, 170, 174, 187, 218, 219, 221, 222, 226, 233, 239, 249, 250, 270, 288, 348, 351, 352, 358, 363, 364, 371, 394, 504], "let": [13, 14, 26, 40, 41, 43, 63, 64, 142, 154, 173, 175, 221, 222, 230, 249, 351, 352, 360, 368, 371, 372, 394, 395, 413], "consid": [13, 14, 15, 17, 23, 26, 29, 39, 41, 45, 46, 146, 154, 190, 276, 278, 288, 290, 360, 368, 371, 465], "pattern": [13, 16, 33, 38, 265, 373, 376, 377], "pretti": [13, 371], "topologi": [13, 26, 40, 136, 144, 218, 219, 221, 222, 243, 256, 263, 348, 349, 351, 352, 381, 394, 406, 415], "resnet": [13, 37], "famili": [13, 45, 162, 165], "append_sum": [13, 234, 365, 504], "eltwise_relu": [13, 40, 152, 153, 161, 216, 219, 220, 221, 222, 224, 225, 237, 238, 239, 241, 243, 244, 248, 250, 261, 344, 349, 350, 351, 352, 355, 357, 368, 369, 371, 372, 381, 383, 392, 395, 413, 541, 543], "slope": [13, 17, 26, 87, 100, 101, 190, 220, 239, 299, 350, 371, 541, 543], "f": [13, 20, 25, 120, 121, 140, 142, 143, 152, 153, 187, 214, 215, 216, 217, 220, 223, 224, 225, 230, 231, 232, 233, 234, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 264, 270, 273, 306, 334, 340, 342, 344, 346, 350, 353, 355, 357, 360, 362, 364, 365, 369, 371, 379, 381, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 407, 409, 411, 504, 512], "unus": [13, 264, 299], "convolution_forward": [13, 14, 16, 26, 40, 135, 219, 220, 221, 222, 224, 249, 250, 276, 328, 349, 350, 351, 352, 355, 394, 395, 436, 438, 510], "conv_d": [13, 395, 504], "hypothet": 13, "illustr": 13, "set_scales_mask": [13, 14, 49, 220, 230, 234, 243, 254, 350, 360, 361, 365, 366, 381, 382, 402, 512], "cover": [13, 14, 33, 41, 45, 154, 371, 394], "eltwise_tanh": [13, 161, 541, 543], "eltwise_linear": [13, 161], "linear": [13, 16, 31, 69, 71, 72, 83, 84, 102, 142, 154, 160, 161, 177, 178, 273, 279, 298, 372, 413, 496], "dnnl_arg_src": [13, 14, 17, 26, 31, 39, 40, 43, 46, 48, 49, 136, 137, 140, 142, 144, 145, 215, 218, 219, 220, 221, 222, 224, 226, 229, 230, 231, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 261, 263, 264, 289, 294, 305, 332, 333, 342, 348, 349, 350, 351, 352, 355, 358, 359, 360, 362, 365, 367, 368, 369, 371, 372, 379, 381, 383, 385, 388, 392, 394, 395, 396, 398, 400, 402, 404, 407, 409, 413, 415, 454, 510, 518], "dnnl_arg_dst": [13, 14, 17, 19, 23, 26, 31, 39, 40, 43, 46, 48, 49, 136, 137, 140, 142, 144, 145, 146, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 263, 264, 294, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 358, 359, 360, 362, 365, 367, 368, 369, 371, 372, 379, 381, 383, 385, 388, 392, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 415], "s_": 13, "mobilenet": 13, "pad": [13, 25, 26, 53, 54, 63, 64, 65, 66, 67, 68, 93, 94, 136, 143, 154, 155, 156, 160, 161, 199, 200, 224, 233, 249, 250, 251, 256, 264, 270, 276, 278, 288, 290, 294, 349, 355, 363, 394, 395, 396, 406, 436, 438, 440, 442, 444, 446, 498, 500, 502, 504, 515], "dnnl_arg_attr_post_op_dw": [13, 26, 264, 294], "auto": [13, 14, 15, 26, 33, 35, 38, 40, 41, 45, 52, 70, 92, 95, 98, 115, 125, 128, 143, 152, 153, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 349, 350, 351, 352, 353, 355, 357, 359, 360, 362, 363, 364, 365, 368, 369, 371, 372, 373, 374, 376, 377, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415], "cpd": 13, "dw_weight_md": 13, "exec_arg_md": [13, 199, 332, 333, 510, 518], "dw_bias_md": 13, "dnnl_arg_bia": [13, 26, 43, 49, 143, 214, 218, 219, 220, 221, 222, 224, 226, 232, 233, 244, 247, 248, 256, 264, 294, 340, 348, 350, 351, 352, 355, 358, 363, 364, 383, 390, 392, 406], "behaviour": 13, "relu_": 13, "scales_": 13, "conv_dst_md": [13, 218, 220, 221, 222, 224, 226, 249, 250, 348, 350, 351, 352, 355, 358, 394, 395], "mb": [13, 24, 25, 139, 248, 270, 392, 504, 512], "nchw": [13, 17, 25, 39, 48, 136, 142, 144, 187, 215, 216, 219, 220, 221, 222, 223, 224, 237, 238, 241, 244, 246, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 342, 344, 349, 350, 351, 352, 353, 355, 368, 369, 371, 372, 383, 388, 394, 395, 396, 398, 400, 402, 404, 407, 411, 413], "abcd": [13, 25, 155, 187, 257, 394, 395, 407], "binary_add": [13, 152, 153, 161, 217, 225, 346, 357], "src1_md": 13, "unordered_map": [13, 214, 215, 216, 217, 219, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 235, 238, 240, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 264, 332, 333, 340, 342, 344, 346, 349, 351, 352, 353, 355, 359, 362, 363, 364, 369, 373, 374, 375, 376, 377, 378, 379, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 499, 501, 504, 505, 507, 510, 516, 518, 520, 522, 525, 527, 529, 531, 535, 540, 542], "arg": [13, 14, 40, 218, 226, 264, 270, 289, 294, 305, 332, 333, 348, 358, 419, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 454, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 499, 501, 505, 507, 510, 512, 516, 518, 520, 522, 525, 527, 529, 531, 535, 540, 542], "insert": [13, 38, 91, 214, 215, 216, 217, 221, 222, 223, 224, 229, 231, 238, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 340, 342, 344, 346, 351, 352, 353, 355, 359, 362, 369, 379, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 407, 409, 411, 504], "conv_src_memori": [13, 218, 220, 221, 222, 226, 348, 350, 351, 352, 358], "binary_post_op_posit": [13, 19, 26, 31, 39, 43, 46, 49, 136, 140, 142, 145], "hard": 13, "dnnl_arg_src_1": [13, 17, 19, 26, 31, 39, 43, 46, 49, 136, 140, 142, 145, 216, 217, 264, 294, 344, 346], "parenthes": 13, "around": [13, 16, 22, 230, 360, 381, 394], "binary_post_op_src1_memori": 13, "either": [14, 16, 17, 19, 21, 23, 34, 37, 39, 41, 42, 45, 46, 49, 54, 55, 57, 64, 65, 68, 83, 84, 115, 137, 140, 146, 149, 152, 153, 154, 155, 160, 161, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 271, 282, 285, 286, 288, 290, 298, 299, 302, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 486, 488, 498, 500, 502, 521, 523, 530, 532], "sign": [14, 29, 38, 42, 45, 152, 153, 166, 174, 185, 225, 270, 273, 294, 306, 334, 350, 357, 512], "unsign": [14, 29, 38, 45, 166, 174, 185, 200, 243, 264, 270, 271, 273, 282, 285, 299, 300, 303, 306, 328, 334, 350, 381, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 512, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543, 544], "primari": 14, "goal": 14, "compat": [14, 21, 27, 42], "relat": [14, 17, 19, 21, 23, 26, 29, 31, 33, 35, 37, 39, 46, 48, 136, 139, 140, 141, 142, 143, 144, 145, 146, 234, 363, 364, 365, 371, 372, 395, 413], "materi": 14, "deep": [14, 25, 26, 27, 29, 38, 40, 41, 45, 134, 150, 162, 165, 249, 320, 394], "annot": [14, 139, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 363, 364], "x_": [14, 42, 45, 360], "scale_": [14, 26, 141], "x": [14, 19, 25, 26, 45, 52, 70, 83, 84, 92, 95, 98, 128, 139, 141, 146, 154, 161, 187, 215, 218, 219, 220, 221, 222, 226, 241, 242, 243, 245, 254, 263, 264, 273, 306, 308, 334, 342, 348, 349, 350, 351, 352, 358, 372, 379, 381, 385, 402, 413, 415, 538], "zp_": 14, "factor": [14, 19, 23, 26, 39, 40, 43, 45, 46, 49, 73, 74, 141, 142, 145, 152, 199, 200, 220, 233, 259, 264, 270, 294, 298, 350, 360, 364, 381, 394, 411, 415, 504, 512, 515, 521, 523], "int32": 14, "denot": [14, 25, 31, 37, 42, 45, 54, 64, 65, 68, 93, 94, 100, 101, 126, 151, 154, 155, 170, 187, 394], "elementwis": [14, 19, 156, 161, 189, 270, 279, 394, 429, 430, 447, 448, 449, 450, 504], "formula": [14, 17, 26, 29, 31, 39, 41, 43, 45, 46, 48, 50, 53, 55, 56, 60, 63, 64, 71, 72, 73, 76, 77, 79, 80, 81, 85, 87, 88, 91, 93, 96, 99, 100, 111, 116, 118, 120, 129, 136, 137, 142, 143, 144, 145, 154, 160, 270, 299, 308, 360, 490, 492, 512, 538], "arrai": [14, 15, 42, 154, 199, 200, 230, 236, 237, 256, 259, 270, 273, 275, 276, 278, 288, 289, 290, 294, 298, 304, 305, 306, 318, 334, 360, 367, 406, 411, 436, 438, 440, 442, 444, 446, 496, 500, 502, 512], "best": [14, 21, 26, 27, 35, 46, 49, 134, 137, 141, 155, 156, 221, 222, 226, 227, 228, 240, 250, 260, 288, 349, 351, 352, 358, 381, 395, 415], "those": [14, 16, 21, 29, 31, 91, 134, 152, 153, 154, 162, 165, 225, 233, 357, 360, 363, 373, 374, 376, 377, 395], "These": [14, 16, 21, 34, 36, 42, 45, 170, 187, 243, 371, 381, 394, 395], "ahead": 14, "time": [14, 15, 16, 17, 20, 21, 26, 39, 40, 41, 43, 44, 45, 48, 49, 63, 64, 69, 98, 134, 135, 136, 142, 144, 151, 152, 154, 160, 195, 196, 214, 219, 234, 239, 243, 245, 247, 256, 263, 270, 284, 288, 289, 292, 294, 300, 305, 306, 313, 314, 317, 318, 319, 323, 340, 349, 350, 360, 365, 366, 368, 371, 381, 382, 385, 390, 395, 406, 415, 416, 512], "calibr": 14, "tool": [14, 44], "static": [14, 21, 33, 38, 47, 49, 152, 153, 214, 215, 216, 217, 218, 223, 224, 225, 226, 230, 231, 238, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 264, 340, 342, 344, 346, 348, 353, 355, 357, 358, 360, 361, 362, 369, 379, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411, 452, 453, 496, 498, 537, 538], "minimum": [14, 19, 21, 37, 108, 179, 267, 319, 360, 496], "dynam": [14, 29, 47, 49, 139, 230, 234, 332, 333, 360, 361, 365, 510, 518], "method": [14, 40, 134, 142, 152, 156, 160, 161, 298, 318, 368, 371, 413, 420, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 499, 501, 505, 507, 516, 520, 522, 525, 527, 529, 531, 535, 540, 542, 545, 547], "conjunct": 14, "behav": [14, 45, 143, 190], "dimension": [14, 25, 34, 42, 49, 89, 154, 270, 324, 512], "reason": [14, 25, 28, 45, 135, 152, 153, 154, 225, 234, 270, 357, 365, 394, 512], "subset": [14, 35, 162, 165, 273], "guid": [14, 21, 29, 139, 151, 220, 221, 231, 233, 271, 272, 275, 276, 279, 282, 283, 285, 286, 287, 289, 290, 291, 296, 297, 298, 299, 301, 302, 304, 305, 351, 362, 364], "appropri": [14, 19, 23, 26, 28, 43, 45, 49, 136, 137, 140, 146, 154, 230, 360, 371, 381, 415], "convert": [14, 29, 31, 33, 38, 42, 45, 69, 71, 72, 102, 113, 141, 149, 152, 221, 230, 269, 270, 280, 281, 294, 299, 332, 333, 351, 360, 395, 465, 496], "wider": [14, 29, 158, 159, 270], "int16": 14, "overflow": [14, 22, 29, 37, 45, 233], "maintain": [14, 138, 149, 288, 373, 374, 376, 377, 498], "necessari": [14, 16, 21, 26, 27, 30, 38, 40, 41, 43, 133, 139, 141, 143, 152, 154, 197, 198, 234, 249, 288, 294, 349, 365, 373, 374, 376, 377], "written": [14, 15, 45, 288, 316], "satur": [14, 45, 141, 273, 306, 334], "underflow": [14, 42], "architectur": [14, 26, 27, 33, 45, 134, 139, 151, 155, 156, 273, 306, 326, 334, 394], "slightli": [14, 45, 360], "vari": [14, 45, 155, 373, 374, 376, 377], "singl": [14, 17, 19, 21, 26, 29, 32, 33, 37, 38, 40, 42, 46, 99, 104, 105, 106, 107, 108, 109, 110, 141, 143, 149, 152, 153, 154, 160, 161, 166, 174, 181, 182, 185, 225, 235, 262, 263, 270, 273, 288, 294, 306, 308, 334, 350, 357, 360, 371, 415, 498, 504], "_op": [14, 140, 152], "dequant": [14, 37, 38, 42, 71, 113, 141, 179, 220, 228, 267, 270, 350, 374, 504], "achiev": [14, 26, 40, 42, 141, 143, 154, 227, 228, 240, 260, 350], "eltwis": [14, 17, 19, 21, 26, 39, 41, 43, 49, 136, 140, 142, 145, 152, 156, 160, 161, 193, 268, 293, 339, 350, 368, 371, 395, 447, 448, 449, 450, 503, 504, 548], "dev_guide_attributes_post_ops_eltwis": 14, "binari": [14, 17, 21, 26, 31, 32, 34, 35, 37, 39, 43, 44, 46, 49, 135, 136, 140, 142, 145, 151, 152, 153, 160, 161, 189, 190, 193, 194, 217, 225, 268, 270, 288, 293, 294, 308, 328, 339, 345, 347, 357, 394, 434, 498, 504, 510, 514, 519, 536, 538, 548], "dev_guide_attributes_post_ops_binari": 14, "src_": [14, 29, 31, 45, 69, 71, 72, 99, 102, 104, 105, 106, 107, 108, 109, 110], "weights_": [14, 29], "work": [14, 15, 16, 18, 19, 21, 23, 26, 30, 31, 33, 35, 36, 41, 42, 45, 46, 133, 134, 137, 139, 140, 141, 144, 145, 146, 149, 154, 155, 227, 228, 234, 239, 240, 256, 260, 288, 360, 365, 371, 381, 394, 406, 415, 496], "task": [14, 15, 30, 133, 139], "form": [14, 24, 25, 34, 40, 145, 154, 170, 187, 371], "12": [14, 42, 139, 155, 166, 170, 214, 228, 245, 247, 340, 374, 385, 390], "35": [14, 139], "36": 14, "zero_point": [14, 141, 264, 270, 504, 512], "zero_point_": 14, "mathemat": [14, 26, 40, 41, 96, 99, 100, 141, 143, 156, 395], "_to": 14, "_int8": 14, "_f32": [14, 200], "comp_": 14, "bias_": 14, "_": [14, 17, 23, 25, 37, 39, 45, 46, 55, 62, 71, 72, 85, 104, 105, 106, 107, 108, 109, 110, 142, 155, 270], "regular": [14, 21, 33, 155, 286, 371, 413, 486, 488], "chosen": [14, 16, 35, 41, 141, 160, 161, 166, 169, 194, 221, 222, 226, 256, 288, 349, 350, 351, 352, 358, 371, 394, 406], "compens": [14, 23, 45, 152, 233, 264, 364], "term": [14, 15, 25, 26, 134, 142, 143, 152, 276, 278, 283, 287, 438, 440, 444, 446], "account": [14, 26, 137], "pre": [14, 16, 35, 49, 243, 263, 381, 382, 415, 416], "_s8": 14, "potenti": [14, 26, 31, 45, 139, 151, 152, 153, 177, 225, 357, 394, 498], "rang": [14, 22, 37, 40, 45, 62, 69, 71, 72, 102, 104, 105, 106, 107, 108, 109, 110, 127, 139, 149, 156, 230, 261, 360, 413], "signific": [14, 22, 41, 149, 154], "loss": [14, 26, 37, 40, 365], "re": [14, 19, 23, 24, 45, 139, 152, 153, 217, 220, 221, 225, 231, 233, 346, 351, 357, 360, 362, 364, 381, 415], "end": [14, 21, 31, 40, 50, 51, 71, 72, 73, 80, 87, 100, 103, 111, 137, 139, 142, 143, 144, 147, 152, 153, 177, 178, 179, 214, 215, 216, 217, 219, 223, 224, 225, 227, 228, 231, 233, 238, 240, 241, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 267, 340, 342, 344, 346, 353, 355, 357, 362, 363, 364, 369, 372, 379, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413], "seem": [14, 139, 371], "imposs": [14, 45, 288, 498], "trick": [14, 45, 230, 360], "everi": [14, 15, 30, 31, 49, 50, 60, 73, 76, 77, 79, 81, 87, 88, 111, 116, 118, 120, 129, 133, 138, 139, 150, 154, 273, 306, 334, 371], "ih": [14, 25, 26, 43, 63, 142, 215, 216, 217, 218, 223, 224, 226, 227, 228, 238, 240, 242, 244, 246, 250, 251, 252, 253, 254, 255, 257, 259, 260, 342, 344, 346, 348, 353, 355, 358, 369, 379, 383, 388, 395, 396, 398, 400, 402, 404, 407, 411], "iw": [14, 25, 26, 43, 63, 142, 215, 216, 217, 218, 223, 224, 226, 227, 228, 238, 240, 242, 244, 246, 250, 251, 252, 253, 254, 255, 257, 259, 260, 342, 344, 346, 348, 353, 355, 358, 369, 379, 383, 388, 395, 396, 398, 400, 402, 404, 407, 411], "oh": [14, 25, 26, 53, 63, 93, 136, 142, 224, 250, 251, 255, 355, 395, 396, 404, 504], "ow": [14, 25, 26, 53, 63, 93, 136, 142, 224, 250, 251, 255, 355, 395, 396, 404, 504], "frac": [14, 17, 26, 31, 39, 42, 45, 46, 48, 53, 55, 56, 63, 81, 85, 89, 97, 107, 116, 118, 136, 140, 142, 144, 145, 360], "respons": [14, 21, 22, 30, 33, 34, 37, 45, 49, 133, 152, 153, 160, 161, 225, 246, 286, 288, 289, 294, 332, 339, 357, 371, 389, 394, 485, 487, 510, 548], "prepar": [14, 41, 45, 152, 153, 220, 225, 230, 234, 250, 350, 357, 360, 365, 395, 413], "wa": [14, 15, 31, 41, 46, 47, 135, 136, 138, 154, 155, 156, 183, 205, 206, 208, 209, 243, 251, 295, 300, 306, 334, 381, 396, 538], "long": [14, 21, 139, 143, 166, 169, 194, 205, 206], "fit": [14, 151, 156, 256, 406], "everyth": [14, 371, 413], "fine": [14, 15, 395], "mind": 14, "tri": [14, 41], "minim": [14, 15, 20, 22, 29, 37, 40, 151, 154], "yet": [14, 230, 234, 288, 360, 363, 364, 365], "power": [14, 99, 103, 140, 152, 153, 225, 326, 357], "enough": [14, 15, 45, 316], "wai": [14, 15, 16, 23, 25, 26, 30, 33, 40, 42, 45, 115, 133, 134, 146, 149, 152, 153, 154, 194, 225, 270, 297, 318, 357, 394, 395, 413, 434, 496, 512, 514, 519, 536], "essenti": [14, 40, 41, 144, 227, 228, 235, 240, 260, 262, 360], "abil": [14, 27, 28, 30, 133, 371], "That": [14, 26, 126, 135, 138, 154, 371], "equat": [14, 31, 143], "_scale": 14, "standard": [14, 17, 19, 20, 21, 22, 23, 25, 26, 29, 31, 39, 43, 46, 47, 48, 49, 50, 53, 60, 62, 63, 73, 76, 77, 79, 81, 87, 88, 91, 93, 111, 116, 118, 120, 129, 136, 137, 141, 142, 143, 144, 145, 146, 166, 174, 185, 273, 306, 334], "downconvert": 14, "hw": [14, 29, 39, 139, 152, 153, 154, 225, 357], "mxcsr": [14, 42], "regist": [14, 28, 42, 163, 164, 387], "dnnl_primitive_attr_set_scales_mask": [14, 264, 270, 512], "simplest": [14, 270, 360, 413, 504], "sever": [14, 16, 21, 23, 26, 31, 35, 47, 150, 154, 376, 377], "sai": [14, 37], "d_0": [14, 42], "d_": [14, 42], "d_i": [14, 42], "le": 14, "Then": [14, 43, 115, 126, 154, 372, 395, 413], "sum": [14, 15, 17, 19, 21, 23, 26, 39, 43, 45, 46, 48, 49, 53, 55, 85, 104, 105, 107, 110, 136, 140, 141, 142, 143, 145, 155, 156, 160, 161, 193, 194, 253, 254, 268, 270, 293, 296, 328, 339, 394, 400, 402, 412, 504, 510, 548], "limits_": [14, 17, 39, 45, 46, 48, 53, 55, 85, 93, 104, 105, 107, 109, 110, 136, 140, 145, 146, 270, 512], "prod": [14, 109, 218, 226, 270, 348, 358, 512], "wei_plain_f32_md": 14, "hwigo": [14, 187], "wei_scal": [14, 228, 374], "conv_pd": [14, 135, 218, 221, 222, 224, 226, 249, 250, 348, 351, 352, 355, 358, 394, 395, 504], "next": [14, 29, 154, 156, 221, 222, 250, 256, 294, 348, 349, 350, 351, 352, 363, 364, 371, 372, 373, 376, 377, 394, 395, 406, 413, 514], "wei_conv_s8_md": 14, "weights_desc": [14, 214, 219, 220, 221, 222, 224, 231, 243, 244, 247, 249, 250, 252, 263, 264, 276, 278, 283, 287, 291, 340, 349, 350, 351, 352, 355, 362, 381, 383, 390, 394, 395, 398, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "quantization_mask": 14, "wei_s8": [14, 155], "wei_f32": [14, 155, 394, 395], "wei_reorder_pd": 14, "wei_reord": 14, "complementari": 14, "ideal": [14, 45], "first": [14, 24, 25, 26, 27, 28, 31, 37, 42, 43, 45, 49, 63, 115, 135, 143, 152, 153, 154, 155, 170, 187, 225, 227, 232, 233, 240, 260, 288, 300, 318, 357, 360, 363, 364, 368, 371, 372, 373, 374, 376, 377, 378, 395, 413, 456, 498], "src_scale": [14, 220, 350], "src_f32": [14, 155, 394, 395], "src_s8": 14, "dst_scale": [14, 220, 350], "dst_f32": [14, 155, 394, 395], "dst_s8": 14, "declar": [14, 35, 232, 233, 363, 364], "chose": [14, 221, 222, 226, 288, 351, 352, 358], "src_conv_s8_any_md": 14, "batch": [14, 25, 26, 33, 39, 40, 41, 49, 55, 56, 63, 91, 139, 145, 154, 170, 187, 193, 194, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 232, 233, 238, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 268, 287, 288, 293, 308, 339, 340, 343, 344, 346, 348, 349, 350, 351, 352, 353, 355, 358, 363, 364, 369, 371, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 425, 426, 427, 428, 456, 538, 548, 549], "wei_conv_s8_any_md": 14, "dst_conv_s8_any_md": 14, "ditto": 14, "data_mask": 14, "wei_mask": 14, "set_zero_points_mask": [14, 49, 230, 243, 360, 361, 381, 382, 512], "prop_kind": [14, 26, 40, 41, 43, 155, 156, 189, 190, 199, 214, 215, 219, 220, 221, 222, 224, 232, 233, 237, 238, 239, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 255, 256, 257, 258, 261, 264, 270, 271, 276, 278, 279, 282, 283, 285, 286, 290, 291, 298, 299, 301, 302, 328, 340, 342, 349, 350, 351, 352, 355, 363, 364, 368, 369, 371, 372, 379, 383, 385, 388, 390, 394, 395, 396, 398, 404, 406, 407, 409, 413, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "forward_infer": [14, 26, 40, 41, 43, 155, 197, 219, 232, 233, 239, 249, 250, 256, 349, 363, 364, 371, 394, 395, 406, 424, 428, 440, 446, 450, 460, 464, 472, 476, 480, 484, 488, 492, 502, 508, 523, 528, 532, 543], "convolution_direct": [14, 155, 161, 219, 220, 221, 222, 224, 250, 349, 350, 351, 352, 355, 394, 395, 436, 438, 440, 442], "padding_l": [14, 26, 199, 264, 276, 278, 290, 436, 438, 440, 442, 444, 446, 500, 502], "padding_r": [14, 26, 199, 264, 276, 278, 290, 436, 438, 440, 442, 444, 446, 500, 502], "padding_kind": 14, "flow": [14, 236, 237, 367, 368], "independ": [15, 21, 45, 46, 49, 91, 143, 145, 151, 154], "core": [15, 35, 162, 165, 387, 395], "system": [15, 16, 20, 21, 26, 29, 33, 44, 45, 47, 134, 135, 139, 143, 144, 154, 155, 156, 280], "parallel": [15, 151, 205, 206, 306, 537], "reduct": [15, 21, 22, 37, 104, 105, 106, 107, 108, 109, 110, 160, 161, 193, 194, 199, 200, 268, 293, 328, 339, 401, 510, 515, 548], "k": [15, 33, 48, 49, 91, 152, 153, 199, 200, 218, 221, 222, 225, 226, 229, 230, 231, 232, 233, 234, 235, 243, 246, 248, 262, 263, 264, 273, 286, 306, 308, 328, 334, 348, 351, 352, 357, 358, 359, 360, 362, 365, 381, 388, 392, 415, 486, 488, 515, 538, 539, 546], "privat": [15, 147, 205, 206, 349], "matrix": [15, 25, 26, 27, 29, 45, 91, 143, 144, 154, 193, 194, 229, 230, 231, 232, 233, 234, 243, 248, 263, 268, 273, 293, 306, 334, 359, 360, 361, 362, 365, 381, 392, 394, 415, 493, 494, 548, 549], "im2col": 15, "longer": [15, 200], "complet": [15, 18, 22, 33, 132, 136, 139, 155, 239, 249, 250, 288, 295, 300, 319, 368, 371, 372, 394, 413, 496], "confus": [15, 41], "workspac": [15, 17, 25, 26, 48, 136, 143, 156, 189, 190, 199, 200, 214, 215, 218, 221, 222, 226, 246, 247, 251, 256, 271, 294, 340, 342, 348, 349, 351, 352, 358, 388, 390, 396, 406, 422, 424, 426, 428, 458, 460, 462, 464, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 500, 502, 515, 541, 543], "amount": [15, 21, 26, 63, 64, 65, 66, 67, 68, 155, 190, 277, 288], "space": [15, 16, 21, 152, 153, 154, 155, 156, 218, 225, 226, 277, 316, 348, 357, 358, 496], "direct": [15, 25, 41, 52, 70, 92, 95, 98, 125, 128, 143, 150, 160, 161, 199, 200, 201, 202, 214, 247, 256, 264, 288, 299, 340, 390, 406, 422, 424, 462, 464, 465, 478, 480, 482, 484, 490, 492, 496, 510, 514, 515, 524, 541, 543], "too": [15, 234, 300, 365], "few": [15, 26, 40, 43, 143, 294, 351, 352, 358], "proport": 15, "imag": [15, 25, 37, 40, 53, 136, 154, 239, 371], "diff_weight": [15, 25, 41, 65, 68, 137, 203, 204, 221, 222, 256, 291, 351, 352, 406], "group": [15, 25, 34, 42, 64, 65, 66, 67, 68, 139, 144, 154, 156, 170, 177, 178, 187, 193, 194, 199, 200, 224, 227, 228, 240, 242, 257, 260, 263, 264, 268, 270, 288, 293, 301, 339, 355, 356, 373, 374, 376, 377, 380, 407, 415, 457, 458, 459, 460, 512, 515, 526, 528, 548], "upper": [15, 25, 60, 61, 138, 154, 170, 300], "total": [15, 64, 134, 139, 256, 406], "By": [15, 16, 21, 29, 33, 34, 35, 40, 314], "contrast": 15, "littl": [15, 230, 360], "sizeof": [15, 33, 154, 166, 169, 194, 218, 226, 236, 241, 250, 348, 358, 367, 372], "summand": 15, "scratchpad_mod": [15, 21, 270, 328, 512], "worri": 15, "onednn_enable_concurrent_exec": [15, 21], "cmake": [15, 20, 21, 27, 28, 33, 35, 36, 135, 138, 139, 150, 155], "off": [15, 21, 27, 28, 35, 36, 138, 139, 152, 153, 155, 205, 206, 225, 229, 239, 300, 357, 359, 371], "across": [15, 21, 26, 41, 42, 46, 48, 49, 143, 160, 161, 256, 286, 406], "level": [15, 33, 34, 35, 36, 135, 139, 151, 155, 264, 288, 300, 328], "freed": 15, "referenc": 15, "segment": 15, "fault": 15, "you": [15, 16, 17, 20, 21, 26, 30, 37, 39, 40, 41, 43, 45, 46, 47, 66, 139, 143, 145, 150, 152, 153, 154, 200, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 372, 376, 377, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "ON": [15, 20, 21, 27, 28, 33, 35, 36, 138, 139, 155, 205, 206], "larger": [15, 33, 205, 206, 256, 406], "concurr": [15, 30, 133, 205, 206, 292, 306, 313], "suffici": 15, "dnnl_arg_scratchpad": [15, 264, 294], "reus": [15, 16, 26, 40, 41, 49, 143, 152, 153, 154, 225, 256, 357, 406], "make": [15, 16, 20, 28, 36, 41, 45, 47, 49, 91, 132, 134, 152, 153, 154, 170, 187, 200, 225, 279, 288, 316, 357, 498, 503], "safe": [15, 16, 31, 134, 135, 154, 205, 206, 239, 292, 313, 314, 371, 496], "good": [15, 40, 49, 154, 360, 371], "side": [15, 26, 91, 288, 496], "control": [15, 16, 17, 20, 21, 26, 29, 39, 46, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 83, 84, 91, 93, 94, 126, 134, 151, 270, 271, 282, 285, 292, 300, 313, 314, 417, 534], "dnnl_primitive_attr_set_scratchpad_mod": [15, 264, 270], "set_scratchpad_mod": [15, 512], "highlight": [15, 41], "consum": [15, 33, 34, 37, 151, 256, 288, 406], "due": [15, 25, 41, 45, 155, 156, 183, 208, 209, 234, 360, 365, 498], "print": [15, 35, 155, 156], "much": [15, 16, 45, 151, 152, 153, 155, 225, 234, 357, 365, 372, 413], "hold": [15, 31, 49, 104, 105, 106, 107, 108, 109, 110, 230, 233, 256, 270, 308, 349, 360, 363, 371, 394, 406, 512], "cout": [15, 219, 227, 228, 232, 233, 235, 239, 240, 241, 250, 260, 261, 262, 371, 372, 413], "query_s64": [15, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "memory_consumption_s64": [15, 199], "endl": [15, 219, 227, 228, 232, 233, 235, 239, 240, 241, 260, 261, 262, 371, 372, 413], "visibl": 15, "zero_md": 15, "scratchpad_desc": [15, 249, 394, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_scratchpad_mod": [15, 512], "custom": [15, 16, 20, 21, 30, 33, 34, 151, 154], "scratchpad_md": [15, 199], "prim": [15, 155, 218, 226, 250, 348, 358, 395], "get_siz": [15, 33, 41, 154, 231, 232, 233, 250, 288, 332, 362, 363, 364, 496, 498], "scratchpad_ptr": [15, 264, 308], "nullptr": [15, 152, 153, 154, 156, 225, 241, 288, 289, 294, 314, 332, 357, 372, 465, 538], "user_memory_manag": 15, "outlin": [16, 41, 134], "program": [16, 18, 20, 26, 30, 34, 35, 43, 45, 133, 143, 236, 237, 239, 241, 265, 326, 365, 367, 368, 371, 372, 395, 413], "present": [16, 91, 135, 143, 152, 394], "kei": [16, 17, 19, 23, 26, 34, 39, 41, 43, 46, 47, 49, 135, 141, 143, 144, 145, 146, 340, 341, 342, 343, 344, 345, 346, 348, 349, 353, 354, 355, 356, 371, 373, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 390, 391, 392, 393, 402, 403, 407, 408, 409, 410, 411, 412], "discuss": [16, 40, 41, 134, 288, 371], "essenc": 16, "process": [16, 24, 37, 38, 40, 41, 45, 134, 138, 139, 143, 152, 153, 154, 156, 225, 256, 308, 357, 360, 394, 406, 538], "context": [16, 26, 30, 135, 152, 153, 156, 170, 187, 225, 232, 233, 264, 288, 289, 303, 305, 308, 319, 323, 330, 331, 332, 333, 357, 363, 364, 368, 371, 372, 376, 377, 378, 413, 498, 538, 547], "relationship": [16, 34, 227, 228, 260, 264, 373, 376, 377], "entiti": [16, 34, 294], "briefli": 16, "figur": [16, 143], "relev": [16, 41, 256, 395, 406], "built": [16, 18, 20, 21, 33, 35, 47, 147, 150, 155, 306, 334, 394, 395], "notion": [16, 19, 23, 41, 140, 146, 394], "encapsul": [16, 289, 303, 319, 320, 324, 332, 368, 371, 372, 413, 496], "lstm": [16, 45, 160, 161, 170, 187, 233, 256, 294, 299, 339, 364, 391, 406, 489, 490, 491, 492], "addition": [16, 34, 45, 49, 91, 134, 149, 221, 351, 394, 395], "complex": [16, 26, 35], "pure": 16, "state": [16, 25, 33, 41, 45, 143, 170, 187, 233, 256, 288, 294, 295, 299, 316, 363, 364, 387, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 538, 541, 543], "One": [16, 26, 30, 113, 149, 154], "immut": [16, 34], "approach": [16, 35, 41, 134, 154, 288, 350, 360, 394], "tailor": [16, 33], "amort": 16, "mutabl": [16, 34, 318], "card": [16, 280], "transfer": [16, 230, 280, 360], "ti": [16, 303, 368, 371, 372, 413], "opencl": [16, 20, 32, 33, 135, 156, 240, 241, 268, 284, 288, 310, 317, 330, 332, 339, 371, 387, 418, 496], "command": [16, 20, 21, 47, 134, 139, 289, 305, 372, 395], "queue": [16, 30, 33, 133, 260, 261, 262, 264, 289, 305, 332, 333, 372, 376, 377, 378, 413], "map": [16, 17, 19, 23, 26, 30, 31, 39, 40, 43, 46, 48, 49, 69, 71, 72, 102, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 150, 154, 156, 227, 228, 235, 239, 240, 260, 262, 288, 300, 330, 331, 332, 333, 360, 368, 371, 372, 434, 496, 510, 514, 518, 519, 536], "offset": [16, 69, 71, 72, 102, 154, 155, 156, 199, 200, 230, 239, 256, 264, 273, 288, 306, 308, 334, 360, 371, 406, 496, 498, 538], "conceptu": [16, 45], "expos": [16, 17, 39, 46, 134, 151], "flexibl": [16, 35, 149, 151, 154, 365], "dnnl_memory_desc_t": [16, 150, 154, 170, 218, 226, 236, 264, 288, 294, 348, 358, 367, 498], "variou": [16, 135, 151, 288, 294], "via": [16, 17, 19, 21, 27, 28, 29, 31, 38, 72, 126, 134, 135, 136, 138, 154, 155, 217, 250, 256, 288, 300, 316, 321, 332, 333, 342, 343, 346, 347, 350, 368, 371, 372, 394, 406, 413, 496, 504, 510, 512, 518], "instanti": 16, "iter": [16, 138, 143, 152, 153, 176, 184, 219, 221, 222, 225, 226, 232, 233, 256, 351, 352, 357, 358, 363, 364, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 514, 524, 541, 543], "prefer": [16, 22, 28, 163, 164, 221, 222, 226, 256, 351, 352, 358, 406], "concret": [16, 227, 228, 235, 240, 260, 262, 373, 376, 377], "embodi": 16, "There": [16, 17, 19, 22, 23, 26, 31, 33, 39, 40, 42, 43, 48, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 152, 153, 225, 256, 270, 288, 357, 368, 372, 395, 406, 413, 512, 515], "extract": [16, 372, 413], "submemory_desc": [16, 232, 233, 256, 363, 364, 406, 498], "src_desc": [16, 40, 219, 220, 221, 222, 224, 231, 249, 250, 264, 271, 275, 276, 278, 279, 282, 283, 285, 286, 287, 290, 291, 296, 297, 298, 301, 302, 304, 349, 350, 351, 352, 355, 362, 394, 395, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "action": [16, 41], "placehold": [16, 26, 43, 49, 143, 187, 249, 394], "obtain": [16, 41, 42, 45, 135, 152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 288, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 373, 374, 376, 377, 379, 381, 383, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 519], "high": [16, 22, 42, 155, 276, 278, 290, 436, 438, 440, 442, 444, 446, 500, 502], "instead": [16, 19, 20, 21, 25, 26, 31, 37, 43, 45, 47, 49, 136, 140, 141, 142, 154, 256, 270, 273, 299, 306, 334, 349, 371, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 504, 541, 543], "individu": [16, 29, 31, 33, 134, 273, 277, 306, 334, 349], "transpar": [16, 35], "effort": 16, "backend": [16, 29, 33, 35, 113, 155, 156, 373, 374, 376, 377], "awar": [16, 28, 371], "scalabl": [16, 45, 162, 165], "ukernel": [16, 47, 151, 152, 153, 225, 264, 268, 310, 326, 328, 431, 432], "sequenti": [16, 21, 33, 151, 348, 349], "compos": [16, 33, 37, 151], "full": [16, 22, 47, 139, 150, 151, 155, 190, 372, 413], "show": [17, 26, 39, 42, 43, 46, 136, 137, 142, 149, 154, 155, 365, 371], "straightforward": [17, 26, 39, 46, 136, 137, 142, 371], "gamma": [17, 26, 39, 46, 55, 56, 57, 85, 86, 271, 282, 285], "mu": [17, 39, 46, 55, 56, 85, 86], "sqrt": [17, 31, 37, 39, 46, 56, 85, 105, 123, 179, 230, 234, 267, 360, 365], "sigma": [17, 39, 46, 55, 56, 57, 85, 86, 143], "varepsilon": [17, 39, 46, 56], "dnnl_use_scal": [17, 39, 46, 189, 190], "dnnl_use_shift": [17, 39, 46, 189, 190], "dnnl_use_global_stat": [17, 39, 46, 189, 190], "constant": [17, 39, 40, 46, 56, 85, 86, 87, 126, 135, 176, 184, 190, 200, 228, 265, 268, 270, 288, 294, 300, 303, 308, 310, 311, 312, 316, 320, 321, 324, 374, 498, 512], "stabil": [17, 31, 39, 46, 56, 85, 86], "nhw": [17, 55], "learnabl": [17, 25, 39, 41, 46, 85, 86], "dnnl_fuse_norm_relu": [17, 189, 190], "dnnl_fuse_norm_add_relu": [17, 189, 190], "popul": [17, 39, 143], "sampl": [17, 39, 42, 136, 139, 147, 372, 413], "unbias": [17, 39], "hat": [17, 39], "becom": [17, 39, 46, 150, 155, 170, 187, 395], "dnnl_forward_train": [17, 26, 31, 39, 46, 136, 137, 142, 144, 145, 197, 198, 271, 276, 278, 279, 282, 283, 285, 286, 290, 291, 298, 299, 301, 302], "dnnl_forward_infer": [17, 26, 31, 39, 46, 136, 137, 142, 144, 145, 197, 198, 271, 276, 278, 279, 282, 283, 285, 286, 290, 291, 298, 299, 301, 302], "diffsrc": [17, 25, 26, 31, 39, 43, 46, 48, 54, 64, 67, 86, 94, 136, 137, 142, 144, 145], "diffgamma": [17, 39, 46, 86], "diffbeta": [17, 39, 46, 86], "diffdst": [17, 25, 26, 31, 39, 43, 46, 48, 54, 59, 64, 65, 67, 68, 86, 94, 136, 137, 142, 144, 145], "mark": [17, 37, 39, 45, 46, 86, 154], "asterisk": [17, 39, 46, 86], "clariti": [17, 39, 46], "summari": [17, 39, 46, 139, 394], "shown": [17, 22, 39, 41, 45, 46, 79, 80, 134, 139, 143, 154, 371, 395], "dnnl_backward": [17, 39, 46, 190, 197, 198, 271, 282, 285, 299], "dnnl_backward_data": [17, 39, 46, 190, 197, 198, 271, 282, 285], "dnnl_normalization_flags_non": [17, 39, 46, 189, 190], "Not": [17, 22, 39, 46, 139], "src_1": [17, 19, 52, 70, 92, 95, 98, 115, 125, 128, 216, 344], "diffsrc_1": 17, "tabl": [17, 19, 22, 23, 25, 26, 29, 30, 31, 39, 43, 46, 48, 49, 69, 102, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 200], "dnnl_arg_scal": [17, 39, 46, 215, 242, 245, 264, 294, 342, 379, 385], "dnnl_arg_shift": [17, 39, 46, 215, 242, 245, 264, 294, 342, 379, 385], "dnnl_arg_mean": [17, 39, 46, 215, 242, 245, 264, 294, 342, 379, 385], "dnnl_arg_vari": [17, 39, 46, 215, 242, 245, 264, 294, 342, 379, 385], "dnnl_arg_workspac": [17, 41, 48, 136, 214, 215, 218, 221, 222, 226, 246, 247, 251, 256, 264, 294, 340, 342, 348, 351, 352, 358, 388, 390, 396, 406], "dnnl_arg_diff_dst": [17, 26, 31, 39, 43, 46, 48, 136, 137, 142, 144, 145, 221, 222, 226, 264, 294, 351, 352, 358], "dnnl_arg_diff_src": [17, 26, 31, 39, 43, 46, 48, 136, 137, 142, 144, 145, 221, 222, 226, 264, 294, 351, 352, 358], "dnnl_arg_diff_src_1": [17, 264, 294], "dnnl_arg_diff_scal": [17, 39, 46, 264, 294], "dnnl_arg_diff_shift": [17, 39, 46, 264, 294], "flavor": [17, 39, 46, 371], "batch_normalization_forward": [17, 215, 271, 328, 342, 426, 510], "OR": [17, 39, 46, 152, 153, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "latter": [17, 21, 25, 30, 39, 41, 45, 46, 47, 133, 149, 288, 348, 349, 514], "overwritten": [17, 19, 31, 39, 46, 145], "dst_desc": [17, 40, 219, 220, 221, 222, 223, 224, 231, 249, 250, 259, 264, 271, 272, 275, 276, 278, 279, 282, 283, 285, 286, 287, 290, 291, 296, 297, 298, 301, 302, 304, 349, 351, 352, 353, 355, 362, 394, 395, 411, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "diff_dst_desc": [17, 221, 222, 264, 271, 276, 278, 279, 282, 283, 285, 286, 290, 291, 298, 301, 302, 351, 352, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "even": [17, 29, 41, 45, 131, 134, 143, 154, 279, 371], "combin": [17, 19, 26, 31, 33, 36, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 139, 141, 142, 143, 144, 145, 152, 155, 156, 210, 288, 368, 371, 498, 503], "scaleshift": [17, 39], "restrict": [17, 19, 26, 27, 28, 31, 39, 43, 46, 48, 49, 58, 136, 140, 142, 143, 144, 145, 152, 156, 277, 300], "1d": [17, 26, 30, 39, 43, 46, 48, 58, 71, 72, 83, 84, 85, 86, 91, 100, 101, 104, 105, 106, 107, 108, 109, 110, 136, 142, 154, 156, 170, 187, 276, 278, 298, 371], "dnnl_x": [17, 39, 170, 218, 226, 348, 358], "dnnl_a": [17, 39, 170, 187], "dnnl_nc": [17, 39, 43, 46, 170], "dnnl_ab": [17, 39, 46, 170, 187, 288], "sp_n": [17, 39], "sp_0": [17, 39], "0d": [17, 48, 371], "nc": [17, 43, 46, 187, 219, 229, 244, 258, 359, 383, 409], "ncw": [17, 39, 136, 187], "dnnl_ncw": [17, 26, 39, 43, 136, 170], "dnnl_abc": [17, 39, 46, 136, 170, 187], "dnnl_nwc": [17, 26, 39, 43, 136, 170], "dnnl_acb": [17, 39, 136, 170, 187], "dnnl_nchw": [17, 23, 26, 39, 43, 48, 136, 144, 154, 170, 218, 226, 236, 288, 348, 358, 367], "dnnl_abcd": [17, 39, 46, 48, 136, 144, 170, 187], "dnnl_nhwc": [17, 23, 26, 39, 43, 48, 136, 144, 154, 170, 288], "dnnl_acdb": [17, 39, 48, 136, 144, 170, 187], "3d": [17, 26, 39, 43, 46, 48, 49, 85, 86, 136, 137, 142, 144, 152, 153, 154, 156, 170, 187, 225, 276, 278, 287, 290, 298, 357, 371, 436, 438, 440, 442, 444, 446, 500, 502], "ncdhw": [17, 39, 136, 144, 170, 187, 242, 379], "dnnl_ncdhw": [17, 26, 39, 43, 136, 144, 170], "dnnl_ndhwc": [17, 26, 39, 43, 136, 144, 170], "dnnl_acdeb": [17, 39, 136, 144, 170, 187], "come": [17, 31, 41, 42, 47, 48, 134, 136, 144, 170, 187, 205, 206, 243, 256, 263, 371, 381, 406, 415], "intens": [17, 29, 40, 48, 134, 136, 144, 288, 371, 394, 395], "chain": [17, 26, 37, 41, 42, 43, 45, 152, 153, 225, 270, 308, 357, 395, 503], "descript": [17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 33, 35, 36, 37, 39, 40, 43, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 115, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 130, 136, 138, 139, 140, 142, 143, 145, 152, 154, 155, 156, 187, 277, 288, 324, 363, 364, 371, 394, 395], "dnnl_eltwise_relu": [17, 31, 160, 161, 218, 226, 236, 299, 348, 358, 367], "correctli": [17, 26, 139, 300, 371, 394], "highli": [17, 23, 31, 39, 46, 48, 146, 365], "whenev": [17, 19, 23, 31, 39, 41, 46, 140, 145, 146, 154, 270, 371], "caveat": [17, 31, 39, 46, 146], "statist": [17, 46, 155, 170, 187, 189, 190, 360, 474, 476], "calcul": [17, 33, 40, 42, 53, 54, 55, 57, 61, 63, 64, 65, 66, 67, 68, 74, 83, 84, 89, 90, 93, 94, 104, 105, 106, 107, 108, 109, 110, 112, 117, 118, 119, 123, 126, 130, 136, 137, 155, 160, 161, 233, 318, 350], "pleas": [17, 21, 40, 49, 113, 139, 155, 220, 221, 233, 288, 314, 318, 351, 364, 394], "review": [17, 394], "demonstr": [17, 19, 23, 26, 31, 33, 39, 40, 43, 46, 48, 49, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 152, 153, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 249, 250, 252, 256, 260, 262, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416], "benchdnn": [18, 21, 33, 134, 139, 155], "readm": 18, "overlin": [19, 23, 26, 31, 52, 62, 70, 92, 95, 98, 128, 141, 144, 145, 146], "src_0": [19, 52, 70, 92, 95, 98, 115, 125, 128, 146, 216, 344], "mathbin": [19, 52, 70], "subtract": [19, 37, 45, 125, 179, 267, 270, 504], "divis": [19, 25, 55, 56, 57, 63, 64, 65, 66, 67, 68, 70, 141, 217, 346], "greater": [19, 41, 45, 60, 61, 142, 153, 160, 161], "dnnl_arg_src_0": [19, 216, 217, 264, 294, 344, 346], "text": [19, 26, 31, 39, 43, 46, 49, 50, 51, 73, 79, 80, 87, 100, 103, 111, 136, 140, 142, 145, 154, 413], "scale0": 19, "dnnl_arg_attr_scal": [19, 26, 43, 46, 49, 141, 145, 220, 230, 234, 243, 254, 263, 264, 270, 294, 350, 360, 365, 381, 402, 415, 512], "scale1": 19, "semant": [19, 25, 33, 38, 45, 49, 91, 100, 101, 133, 137, 270, 300, 371, 465, 504, 544], "recommend": [19, 23, 37, 40, 41, 45, 49, 134, 137, 140, 146, 155, 394, 395], "match": [19, 23, 34, 40, 41, 52, 62, 70, 83, 91, 92, 95, 98, 115, 128, 135, 137, 141, 146, 155, 156, 252, 288, 332, 333, 395, 398, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 510, 517, 518, 519, 521, 523, 526, 528, 530, 532, 536, 541, 543], "syntax": [19, 40], "d": [19, 25, 26, 31, 43, 44, 48, 49, 58, 91, 104, 105, 106, 107, 108, 109, 110, 136, 137, 152, 153, 154, 156, 170, 187, 214, 225, 230, 236, 247, 256, 270, 288, 308, 340, 357, 360, 367, 371, 390, 406, 512, 538], "nxcxdxhxw": 19, "pytorch": [19, 101], "explicitli": [19, 21, 22, 26, 35, 37, 38, 134, 140, 143, 316, 318, 371], "deriv": [19, 23, 136, 140, 146, 189, 190, 270, 285, 434, 504, 536], "ones": [19, 45, 142, 150, 154, 214, 224, 227, 228, 235, 240, 247, 260, 262, 288, 340, 355, 365, 390, 498], "unavoid": 19, "correct": [19, 21, 153, 154, 181, 182, 243, 368, 371, 373, 374, 375, 376, 377, 378, 381], "issu": [19, 30, 41, 45, 133, 139, 181, 182, 234, 365], "arbitrari": [19, 23, 31, 33, 46, 60, 61, 73, 74, 79, 80, 85, 86, 87, 89, 90, 99, 118, 119, 120, 121, 132, 137, 140, 141, 142, 144, 145, 146, 154, 233, 234, 275, 350, 364, 365, 381], "6": [19, 23, 26, 31, 33, 42, 46, 49, 81, 97, 139, 140, 141, 144, 145, 146, 152, 153, 154, 166, 209, 214, 217, 219, 225, 227, 228, 229, 240, 242, 247, 260, 340, 346, 357, 359, 373, 374, 376, 377, 379, 390], "fewer": [19, 23, 31, 38, 46, 140, 141, 144, 145, 146], "bnorm": [19, 32, 217, 339, 347], "postop": [19, 156, 347, 350], "clone": [20, 270, 288, 294, 434, 514, 519, 536], "repositori": [20, 21], "git": [20, 135, 155, 300, 394, 544], "http": [20, 47, 152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "github": [20, 21, 230, 360], "com": [20, 47], "ensur": [20, 21, 22, 27, 41, 133, 227, 228, 240, 260, 288, 372, 394, 413, 498], "cmake_install_prefix": 20, "locat": [20, 21, 41, 47, 154, 288, 297, 300, 324, 515, 519], "cmake_build_typ": 20, "select": [20, 21, 33, 35, 37, 42, 156, 169, 170, 179, 186, 187, 267, 395], "releas": [20, 21, 133, 152, 153, 225, 300, 308, 314, 319, 357, 538], "relwithdebinfo": 20, "cmake_prefix_path": 20, "directori": [20, 47, 139, 300], "search": 20, "makefil": 20, "mkdir": 20, "cd": 20, "uncom": 20, "line": [20, 134, 139, 154, 155, 395], "export": [20, 24, 134, 395], "cc": 20, "cxx": 20, "icx": [20, 47], "icpx": [20, 47], "j": [20, 48, 89, 118, 139, 147, 219, 232, 233, 288, 349, 498], "setvar": 20, "sh": [20, 25, 26, 53, 63, 64, 93, 136, 224, 251, 355, 396], "script": [20, 150], "folder": [20, 21, 35], "your": [20, 40, 41, 47, 139, 395], "opt": [20, 21], "ddnnl_cpu_runtim": 20, "ddnnl_gpu_runtim": 20, "open": [20, 21, 326], "driver": [20, 21], "openclroot": 20, "path": [20, 21, 35, 47, 149, 300], "gnu": [20, 21], "dcmake_system_nam": 20, "dcmake_system_processor": 20, "dcmake_library_path": 20, "usr": 20, "lib": [20, 47], "acl_root_dir": [20, 21], "ddnnl_aarch64_use_acl": 20, "studio": [20, 47, 134, 150], "solut": [20, 47, 150, 154], "16": [20, 22, 25, 29, 41, 139, 149, 153, 155, 166, 170, 174, 185, 236, 237, 288, 367, 368], "2019": [20, 45, 221, 230, 234, 236, 237, 239, 241, 243, 249, 250, 261, 351, 360, 365, 367, 381], "config": [20, 35, 150], "respect": [20, 25, 26, 29, 31, 34, 38, 41, 43, 49, 63, 84, 87, 135, 142, 154, 155, 156, 170, 187, 189, 197, 198, 221, 222, 226, 256, 270, 271, 276, 278, 279, 282, 283, 285, 286, 290, 291, 294, 298, 299, 300, 301, 302, 351, 352, 358, 365, 395, 406, 456, 512, 541], "file": [20, 21, 35, 36, 44, 139, 150, 152, 153, 154, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 300, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415], "being": [20, 49, 141, 143, 190, 288, 295, 300, 372, 413, 498], "sln": [20, 150], "project": [20, 21, 22, 150, 170, 187, 270, 294, 299, 490, 492, 512, 524], "bat": 20, "x86": [20, 44], "commmand": 20, "prompt": 20, "ninja": 20, "v3": [20, 45, 155, 270], "23": [20, 149], "unit": [20, 24, 34, 143, 152, 153, 160, 161, 225, 279, 321, 357, 372, 387, 413], "test": [20, 27, 33, 139, 147, 234, 288, 365, 496], "ctest": 20, "conda": 20, "env": 20, "doc": [20, 40, 154], "yml": 20, "header": [20, 22, 29, 30, 35, 133, 139, 150, 155, 227, 228, 235, 240, 260, 262], "administr": 20, "privileg": 20, "sudo": 20, "mac": 20, "bold": [21, 27, 28, 35, 36, 138, 155], "onednn_library_typ": 21, "onednn_cpu_runtim": 21, "none": [21, 31, 49, 52, 53, 54, 63, 64, 65, 66, 67, 68, 70, 83, 84, 92, 93, 94, 95, 98, 115, 125, 128, 155, 177, 178, 189, 394], "omp": [21, 139], "seq": 21, "sycl": [21, 32, 33, 156, 260, 261, 262, 264, 268, 284, 288, 310, 311, 317, 331, 332, 333, 339, 378, 547], "onednn_gpu_runtim": 21, "ocl": [21, 241, 376], "offload": 21, "onednn_build_doc": 21, "onednn_build_exampl": 21, "onednn_build_test": 21, "onednn_build_graph": [21, 36], "onednn_enable_graph_dump": [21, 36], "dump": [21, 44, 139, 265, 300], "artifact": [21, 36], "onednn_experimental_graph_compiler_backend": [21, 35], "onednn_arch_opt_flag": 21, "warn": [21, 35, 139, 234, 365], "onednn_enable_jit_profil": [21, 139], "profil": [21, 32, 33, 156, 195, 196, 250, 268, 300, 326, 339], "onednn_enable_itt_task": [21, 139], "onednn_enable_primitive_cach": [21, 138], "onednn_enable_max_cpu_isa": [21, 27], "onednn_enable_cpu_isa_hint": [21, 28], "isa": [21, 27, 29, 33, 34, 44, 45, 155, 156, 162, 163, 164, 165, 264, 300, 326, 328, 394, 417], "workload": [21, 26, 40, 143, 394, 395], "primitive_nam": 21, "cpu_isa_nam": 21, "gpu_isa_nam": 21, "isa_nam": 21, "onednn_experiment": [21, 33], "onednn_verbos": [21, 300, 394, 395], "onednn_dev_mod": [21, 155], "trace": [21, 155, 395], "debuginfo": [21, 155], "log": [21, 31, 35, 37, 89, 155, 179, 234, 267, 365], "develop": [21, 22, 29, 35, 44, 45, 155, 220, 221, 231, 233, 271, 272, 275, 276, 279, 282, 283, 285, 286, 287, 289, 290, 291, 296, 297, 298, 299, 301, 302, 304, 305, 351, 362, 364], "onednn_aarch64_use_acl": 21, "onednn_blas_vendor": 21, "armpl": 21, "acceler": [21, 29, 41, 48, 151], "extern": 21, "link": [21, 44, 63, 64, 65, 66, 67, 68, 326], "onednn_gpu_vendor": 21, "nvidia": 21, "amd": 21, "onednn_dpcpp_host_compil": 21, "clang": [21, 47, 134, 229, 359], "onednn_library_nam": 21, "smoke": [21, 243, 381], "ci": 21, "nightli": 21, "modifier_nam": 21, "coverag": [21, 22, 33], "counterpart": [21, 45, 150, 288, 498], "prefix": [21, 300], "sub": [21, 34, 134, 143, 150, 154, 160, 161, 256, 288, 363, 394, 406], "intend": [21, 26, 149, 155, 289, 326, 332], "subject": 21, "oneapi": [21, 47, 147, 150, 152, 153, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 340, 342, 344, 348, 351, 352, 353, 355, 357, 358, 360, 362, 365, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 396, 400, 402, 404, 406, 407, 409, 411, 413, 415], "dpc": [21, 305, 339, 413, 418], "main": [21, 33, 149, 151, 152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 288, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 504], "discov": 21, "absolut": [21, 50, 104], "cmake_cxx_compil": 21, "window": [21, 41, 45, 53, 54, 93, 94, 136, 155, 300, 387], "linux": [21, 134, 155, 300], "7": [21, 139, 147, 149, 152, 153, 154, 166, 174, 185, 209, 225, 227, 228, 229, 236, 237, 240, 260, 357, 359, 363, 364, 367, 373, 374, 376, 377, 395], "4": [21, 27, 29, 31, 33, 37, 45, 49, 55, 56, 57, 86, 97, 115, 134, 139, 152, 153, 154, 160, 161, 162, 165, 166, 170, 174, 185, 209, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 235, 236, 240, 241, 247, 250, 251, 256, 257, 260, 261, 262, 264, 288, 318, 346, 348, 351, 352, 355, 357, 358, 359, 367, 372, 373, 374, 376, 377, 390, 395, 396, 406, 407, 413], "gcc": 21, "interoper": [21, 33, 268, 310, 330, 331, 332, 333, 334, 339, 372, 376, 377, 413, 418], "8": [21, 27, 29, 38, 42, 45, 47, 134, 139, 149, 152, 153, 162, 165, 166, 170, 174, 185, 187, 209, 217, 218, 220, 225, 226, 227, 228, 229, 240, 260, 270, 273, 306, 334, 346, 348, 350, 357, 358, 359, 373, 374, 376, 377, 394, 512], "disk": 21, "occupi": [21, 149, 288, 496], "app": 21, "remov": [21, 104, 105, 106, 107, 108, 109, 110, 285, 288, 300, 314, 498], "batch_norm": [21, 193, 339], "concat": [21, 156, 179, 193, 194, 267, 268, 288, 293, 328, 339, 354, 394, 510, 548], "deconvolut": [21, 160, 161, 193, 194, 268, 293, 441, 442, 443, 444, 445, 446], "inner_product": [21, 193, 219, 339], "layer_norm": [21, 193, 339], "lrn": [21, 160, 161, 193, 194, 199, 200, 218, 219, 221, 222, 226, 268, 293, 339, 348, 351, 352, 358, 394, 485, 486, 487, 488, 515, 548], "pool": [21, 29, 41, 45, 53, 54, 93, 94, 160, 161, 193, 194, 199, 200, 218, 219, 221, 222, 226, 249, 268, 293, 339, 348, 349, 351, 352, 358, 397, 499, 500, 501, 502, 515, 548], "prelu": [21, 26, 43, 49, 87, 101, 179, 193, 194, 267, 268, 270, 293, 339, 398, 399, 504, 505, 506, 507, 508, 548], "resampl": [21, 160, 161, 193, 194, 199, 200, 268, 293, 339, 405, 515, 520, 521, 522, 523, 548], "rnn": [21, 23, 32, 40, 41, 45, 46, 156, 160, 161, 170, 187, 193, 194, 199, 200, 201, 202, 203, 204, 214, 232, 233, 247, 256, 268, 270, 288, 293, 294, 339, 341, 391, 394, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 512, 515, 524, 540, 541, 542, 543, 548], "shuffl": [21, 156, 193, 194, 199, 200, 268, 293, 339, 394, 408, 525, 526, 527, 528, 548], "softmax": [21, 37, 41, 89, 119, 156, 160, 161, 179, 193, 194, 232, 233, 267, 268, 293, 339, 394, 410, 529, 530, 531, 532, 548], "attempt": [21, 294, 452, 465, 496, 510, 534], "unimpl": [21, 139, 183, 199, 208, 300], "style": 21, "semicolon": 21, "delimit": [21, 139], "donednn_enable_primit": 21, "sse41": [21, 27, 28, 162, 300], "avx2": [21, 27, 29, 44, 162, 165, 300, 394], "avx512": [21, 29, 45, 154], "amx": [21, 27, 29, 33, 143, 152, 153, 162, 165, 225, 357], "linearli": 21, "donednn_enable_primitive_cpu_isa": 21, "gen9": [21, 44], "gen11": 21, "xelp": 21, "xehp": 21, "xehpg": 21, "xehpc": 21, "xe2": 21, "donednn_enable_primitive_gpu_isa": 21, "x64": [21, 29, 139, 155], "interfac": [21, 139, 147, 306, 311, 318, 319, 323, 334, 372, 413, 537], "leav": [21, 221, 222, 351, 352, 365], "donednn_enable_gemm_kernels_isa": 21, "mani": [21, 25, 34, 40, 134, 154, 371], "no_corr": 21, "add_bitwis": 21, "short": [21, 143, 150, 394], "verifi": [21, 135, 434, 514, 519, 536], "largest": 21, "unmodifi": 21, "processor": [21, 26, 27, 44, 134, 162, 165, 241, 326, 372, 413], "jit": [21, 27, 28, 40, 47, 138, 139, 152, 153, 155, 225, 300, 357, 394, 395, 417], "detect": [21, 27, 35, 136, 270, 512], "r": [21, 25, 26, 42, 44, 45, 49, 62, 69, 71, 72, 85, 86, 102, 104, 105, 106, 107, 108, 109, 110, 139, 140, 141, 143, 160, 161, 241, 273, 306, 334, 372, 395, 413], "xsse4": 21, "sse4": [21, 27, 29, 154, 162, 165], "older": [21, 27, 29], "msse4": 21, "give": [21, 143, 154, 360], "therefor": [21, 133, 135, 139, 149, 288, 498], "arch_opt_flag": 21, "portabl": [21, 134, 288], "throughout": [21, 40, 256, 371, 406], "undefin": [21, 41, 156, 161, 166, 169, 170, 173, 175, 176, 177, 178, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 207, 288, 294, 318, 498], "crash": [21, 371], "conflict": [21, 413], "donednn_cpu_runtim": 21, "tbbroot": 21, "environment": 21, "instal": [21, 35, 47], "dtbbroot": 21, "winograd": [21, 23, 141, 155, 156, 160, 161], "_onednn_test_threadpool_impl": 21, "three": [21, 25, 35, 37, 40, 49, 134, 143, 154, 368, 372, 395, 413], "standalon": 21, "eigen": [21, 147], "eigen3_dir": 21, "d_onednn_test_threadpool_impl": 21, "deigen3_dir": 21, "eigen3": 21, "plu": 21, "decomposit": 21, "At": [21, 27, 28, 40, 49, 62, 138, 139, 151, 155, 239, 371], "balanc": [21, 365], "item": [21, 139], "worker": [21, 537], "64": [21, 44, 45, 139, 152, 153, 166, 198, 224, 225, 228, 233, 254, 270, 326, 355, 357, 374, 402, 512], "optimis": 21, "computelibrari": 21, "machin": [21, 234, 365], "mlplatform": 21, "org": [21, 152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "donednn_aarch64_use_acl": 21, "download": [21, 35], "advis": [21, 27, 28, 46, 151], "v23": 21, "11": [21, 22, 42, 139, 166, 218, 219, 221, 222, 226, 227, 228, 229, 240, 250, 251, 260, 348, 351, 352, 358, 359, 368, 371, 374, 395, 396], "donednn_blas_vendor": 21, "graphic": [21, 44, 241, 326, 372, 413], "sdk": 21, "dopenclroot": 21, "donednn_gpu_runtim": 21, "simultan": [21, 33, 35, 141, 308], "besid": [21, 34, 37], "avx512_cor": [21, 27, 155, 162, 300], "conveni": [22, 31, 49, 154, 170, 187, 294, 372, 453, 515], "almost": [22, 134, 154], "far": [22, 45], "concern": [22, 45], "languag": [22, 37, 152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "switch": [22, 150, 154], "back": [22, 26, 34, 41, 45, 53, 54, 63, 64, 65, 66, 67, 68, 89, 90, 93, 94, 139, 141, 156, 221, 222, 276, 278, 288, 290, 311, 319, 323, 351, 352, 377, 378, 413, 436, 438, 440, 442, 444, 446, 496, 500, 502], "forth": 22, "desir": [22, 41, 134, 300], "c99": 22, "medium": 22, "insid": [22, 24, 34, 35, 154, 176, 184, 230, 243, 263, 288, 360, 373, 374, 381, 415, 498], "thin": 22, "wrapper": [22, 452, 465, 496, 510, 534], "stabl": [22, 145, 161], "abi": [22, 150, 194], "usabl": [22, 25], "target": [22, 34, 72, 152, 153, 225, 232, 233, 270, 312, 316, 319, 321, 323, 357, 512], "audienc": 22, "experienc": 22, "ffi": 22, "framework": [22, 34, 38, 41, 132, 134, 138, 154, 318, 326, 371, 373, 374, 375, 376, 377, 378], "overhead": [22, 24, 37, 40, 135, 138, 139, 151, 154, 155], "sanit": [22, 37], "consequ": [22, 395], "nan": 22, "larg": [22, 37, 138, 156], "close": [22, 134, 149], "overlap": [22, 53, 136], "concaten": [23, 62, 143, 156, 193, 201, 202, 223, 275, 288, 353, 433, 434], "concat_dimens": [23, 264, 275, 434], "ou": [23, 62, 144, 145], "src_i": [23, 60, 62, 89, 118, 146], "c_1": [23, 62], "c_": [23, 62, 143], "dnnl_arg_multiple_src": [23, 146, 223, 259, 264, 294, 353, 411], "sum_i": [23, 152, 233], "c_i": 23, "necessarili": [23, 142, 149], "dnnl_nchw16c": [23, 170, 187], "dnnl_ncdhw8c": [23, 170, 187], "prepack": 23, "dnnl_format_kind_opaqu": [23, 169, 186], "s8s8": [23, 45], "abl": [23, 27, 49, 141, 146, 190, 371], "slower": [23, 29, 146], "graph": [24, 29, 32, 33, 37, 38, 47, 75, 126, 132, 155, 209, 227, 228, 235, 240, 260, 262, 264, 268, 300, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 326, 328, 455], "compon": [24, 33, 37, 155], "fold": 24, "redund": 24, "megabyt": 24, "won": [24, 155], "reach": [24, 183, 208, 209, 314, 514], "getter": 24, "ref": [24, 152, 153, 225, 357], "dnnl_graph_set_constant_tensor_cache_capac": [24, 264, 314], "dnnl_graph_get_constant_tensor_cache_capac": [24, 264, 314], "programm": 24, "onednn_graph_constant_tensor_cache_capac": 24, "engine_kind1": 24, "size1": 24, "engine_kind2": 24, "size2": 24, "1024": [24, 33, 138, 141, 235, 256, 262, 264, 313, 406], "2048": [24, 235, 262], "start": [24, 32, 33, 37, 42, 85, 86, 100, 101, 147, 150, 151, 154, 155, 227, 232, 239, 240, 241, 260, 261, 294, 339, 368, 374, 375, 378, 394, 395, 418], "pars": 24, "prioriti": [24, 35], "neural": [25, 26, 29, 37, 150, 218, 219, 299, 320, 348, 349], "network": [25, 26, 29, 37, 40, 150, 218, 219, 299, 320, 348, 349], "gradient": [25, 41, 51, 57, 59, 61, 66, 74, 78, 80, 82, 84, 87, 90, 97, 101, 112, 117, 119, 121, 123, 130, 143, 149, 199, 200, 203, 204, 276, 278, 283, 294, 394, 437, 438, 443, 444, 469, 470], "df_": 25, "diffweight": [25, 26, 43, 65, 68, 137], "commonli": [25, 26], "wide": [25, 37], "known": [25, 26, 49, 152, 234, 239, 243, 263, 288, 360, 365, 371, 373, 376, 377, 381, 415], "summar": [25, 30, 133, 143], "scale_shift": 25, "layer": [25, 29, 35, 37, 40, 41, 83, 85, 86, 143, 193, 194, 214, 230, 232, 233, 243, 245, 247, 256, 263, 268, 288, 293, 294, 299, 339, 340, 348, 349, 350, 351, 352, 358, 360, 363, 364, 381, 386, 390, 394, 406, 415, 422, 424, 462, 464, 473, 474, 475, 476, 478, 480, 482, 484, 490, 492, 524, 541, 543, 548], "carri": [25, 152], "diff_src": [25, 41, 48, 51, 54, 57, 61, 64, 67, 74, 78, 80, 82, 84, 86, 90, 94, 97, 101, 112, 117, 119, 121, 123, 130, 136, 142, 221, 222, 226, 256, 271, 279, 282, 285, 351, 352, 358, 406], "diff_dst": [25, 41, 48, 51, 54, 57, 59, 61, 64, 65, 67, 68, 74, 78, 80, 82, 84, 86, 90, 94, 97, 101, 112, 117, 119, 121, 123, 130, 221, 222, 226, 271, 279, 282, 285, 351, 352, 358], "diff_bia": [25, 59], "diff_scale_shift": 25, "_layer": 25, "_iter": 25, "recurr": [25, 29, 143, 214, 247, 294, 299, 340, 390, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "letter": [25, 154, 170, 187, 394], "od": 25, "depth": [25, 26, 63, 64, 154, 170, 187, 242, 276, 278, 290, 379, 436, 438, 440, 442, 444, 446, 500, 502], "kd": [25, 26, 43], "sd": [25, 26, 63, 64], "sw": [25, 26, 53, 63, 64, 93, 136, 224, 251, 355, 396], "dd": [25, 26, 31, 63, 64], "dh": [25, 26, 53, 63, 64, 93, 136, 251, 396], "dilat": [25, 64, 65, 66, 67, 68, 93, 94, 177, 178, 199, 200, 218, 226, 227, 228, 240, 249, 251, 260, 264, 276, 278, 290, 348, 358, 373, 374, 376, 377, 394, 396, 436, 438, 440, 442, 444, 446, 500, 502, 515], "ph": 25, "pw": 25, "transposit": [25, 273, 306, 334], "b": [25, 37, 44, 49, 143, 152, 153, 154, 170, 187, 225, 230, 234, 243, 263, 264, 273, 287, 288, 306, 308, 328, 334, 357, 360, 365, 381, 394, 415, 432, 494, 538, 539], "hidden": [25, 45, 233, 294, 299, 363, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 541, 543], "_t": [25, 143], "timestamp": [25, 139, 143], "l": [25, 47, 48, 143, 170, 214, 247, 256, 270, 288, 340, 390, 406, 512], "tanh": [25, 26, 31, 37, 96, 130, 143, 160, 161, 179, 214, 224, 244, 247, 248, 267, 340, 355, 383, 390, 392], "logist": [25, 31, 160, 161], "cell": [25, 29, 45, 160, 161, 170, 187, 199, 200, 203, 204, 233, 294, 299, 363, 364, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 515, 524, 541, 543], "tild": [25, 143], "candid": [25, 37, 49, 170, 187], "gate": [25, 143, 160, 161, 170, 187, 214, 247, 256, 288, 340, 390, 406], "forget": [25, 170, 187, 221, 222, 351, 352], "o": [25, 134, 139, 143, 154, 156, 170, 187, 233, 250, 256, 270, 288, 363, 364, 406, 512], "updat": [25, 26, 29, 43, 143, 149, 150, 170, 187, 221, 222, 226, 227, 228, 235, 240, 256, 260, 262, 351, 352, 358, 406, 470], "reset": [25, 33, 147, 160, 161, 170, 187, 295, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "english": 25, "alphabet": 25, "canon": 25, "z": [25, 45], "outermost": [25, 144, 145, 154, 170, 187, 288], "innermost": [25, 144, 145, 170, 187, 199, 200, 288], "dens": [25, 33, 154, 155, 288, 498], "ba": [25, 187, 498], "last": [25, 33, 45, 46, 85, 86, 91, 127, 134, 152, 153, 154, 155, 183, 208, 209, 225, 285, 295, 349, 357, 363, 364, 371, 456, 514], "transpos": [25, 91, 144, 170, 187, 243, 273, 306, 334, 381], "natur": [25, 88, 160, 161, 371], "suppos": [25, 42, 256, 406], "column": [25, 49, 91, 139, 151, 154, 273, 306, 334], "row": [25, 33, 91, 144, 151, 154, 188, 207, 230, 233, 264, 273, 306, 318, 334, 360], "major": [25, 45, 144, 154, 230, 273, 300, 306, 318, 334, 360, 544], "fortran": 25, "todo": [25, 136, 232, 339, 363], "pictur": [25, 136, 154, 414], "ab16a": 25, "similar": [25, 29, 33, 40, 137, 150, 154, 156, 188, 207, 227, 228, 235, 240, 256, 260, 262, 288, 350, 360, 371, 406, 498], "split": [25, 41, 134, 139, 152, 153, 154, 225, 288, 357, 498], "contigu": [25, 49, 154, 273, 306, 308, 318, 334], "represent": [25, 38, 154, 288, 360, 363, 368, 371, 372, 413, 498], "domain": [25, 33, 154, 170, 187, 270, 360, 504], "four": [25, 45, 143], "cross": [26, 113, 134, 155, 326], "correl": 26, "comment": [26, 63, 64], "front": [26, 53, 54, 63, 64, 65, 66, 67, 68, 93, 94, 139, 276, 278, 290, 436, 438, 440, 442, 444, 446, 500, 502], "top": [26, 53, 54, 63, 64, 65, 66, 67, 68, 93, 94, 139, 154, 270, 276, 278, 288, 290, 436, 438, 440, 442, 444, 446, 500, 502, 504], "left": [26, 31, 48, 49, 53, 54, 63, 64, 65, 66, 67, 68, 85, 86, 91, 93, 94, 115, 136, 142, 144, 145, 154, 155, 199, 200, 201, 202, 224, 249, 251, 256, 270, 276, 278, 288, 290, 355, 394, 396, 406, 436, 438, 440, 442, 444, 446, 500, 502, 504, 515], "pd_l": [26, 63, 64], "ph_l": [26, 53, 63, 64, 93, 136, 224, 251, 355, 396], "pw_l": [26, 53, 63, 64, 93, 136, 224, 251, 355, 396], "_l": 26, "stand": [26, 134], "bottom": [26, 53, 54, 63, 64, 65, 66, 67, 68, 93, 94, 154, 276, 278, 290, 436, 438, 440, 442, 444, 446, 500, 502], "pd_r": [26, 63, 64], "ph_r": [26, 63, 64, 224, 251, 355, 396], "pw_r": [26, 63, 64, 224, 251, 355, 396], "_r": 26, "broken": 26, "exposit": 26, "realiti": 26, "geq": [26, 31, 142, 350], "sum_": [26, 43, 49, 63, 89, 91, 118], "lfloor": [26, 63, 142], "rfloor": [26, 63, 142], "oc_g": [26, 63], "ic_g": [26, 63], "5d": [26, 46, 154, 170, 187, 270, 504], "depthwis": [26, 270, 294, 504], "dkh": [26, 63], "dkw": [26, 63], "fraction": 26, "swap": [26, 288, 498], "put": [26, 221, 222, 289, 332, 351, 352], "determin": [26, 42, 152, 173, 175, 249, 373, 374, 376, 377, 395], "diffbia": [26, 43, 143], "dnnl_arg_diff_weight": [26, 43, 137, 221, 222, 226, 264, 294, 351, 352, 358], "dnnl_arg_diff_bia": [26, 43, 143, 221, 222, 226, 256, 264, 294, 351, 352, 358, 406], "prelu_post_op_posit": [26, 43, 49], "f8_e5m2": [26, 29, 49, 69, 102, 141, 174, 185], "physic": [26, 46, 134, 154, 170, 239, 288, 371, 498], "critic": [26, 40, 41, 43, 135, 249, 394], "shorten": [26, 43, 143, 155], "dnnl_wio": [26, 43, 170], "dnnl_hwio": [26, 43, 170], "dnnl_dhwio": [26, 43, 170], "xe": [26, 326], "hpc": [26, 29], "entir": [26, 40, 43, 49, 104, 105, 106, 107, 108, 109, 110], "dnnl_arg_": [26, 43, 49, 289, 294, 305, 332, 333, 510, 518], "memory_index": [26, 43, 49], "dnnl_arg_attr_zero_point": [26, 49, 230, 243, 263, 264, 270, 294, 360, 381, 415, 512], "prevent": [26, 30, 42, 133, 294], "feasibl": 26, "usag": [26, 28, 29, 33, 34, 44, 113, 155, 170, 187, 214, 215, 227, 228, 235, 240, 247, 260, 262, 270, 340, 342, 390, 395, 504, 512], "deploi": 26, "done": [26, 31, 41, 49, 136, 141, 152, 153, 225, 349, 350, 357, 371, 372], "pseudo": [26, 33, 45, 135, 141, 154], "set_scal": [26, 49, 263, 415, 416, 512], "wei": [26, 29], "eta": 26, "set_zero_point": [26, 49, 263, 415, 416, 512], "shift_": [26, 141], "simd": [26, 27, 29, 162, 165], "expens": [26, 41, 368, 371, 394, 498], "fast": [26, 152, 153, 154, 225, 357], "lavin": 26, "grai": 26, "often": [26, 139, 155], "aarch64": [26, 139, 156, 326], "rearrang": [26, 127], "fallback": 26, "condit": [26, 31, 40, 115, 143, 152, 153, 183, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 308, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "exce": [26, 156], "half": [26, 29, 149, 166, 174, 185], "14": [26, 42, 139, 249, 394, 395, 504], "constraint": [26, 49], "met": [26, 100, 101], "silent": [26, 28], "fall": [26, 156], "explicit": [26, 147, 256, 288, 406], "weigh": 26, "against": 26, "boost": [26, 27, 29, 149, 155, 162, 165], "consumpt": [26, 200, 288, 371], "grow": 26, "significantli": [26, 138, 149], "growth": 26, "rest": [26, 63], "conv1_pd": 26, "convolution_winograd": [26, 161, 436, 438, 440, 442], "conv1_src_md": [26, 219, 349], "conv1_weights_md": [26, 219, 349], "conv1_bias_md": [26, 219, 349], "conv1_dst_md": [26, 219, 349], "conv1_strid": [26, 219, 349], "conv1_padding_l": 26, "conv1_padding_r": 26, "convolution_auto": [26, 161, 249, 394, 436, 438, 440], "heurist": [26, 156], "affin": [26, 85, 86, 134], "f8_e4m3": [26, 29, 49, 69, 102, 141, 174, 185], "center": [26, 29, 49, 141, 230, 360, 381], "max": [26, 29, 31, 33, 40, 41, 42, 45, 49, 60, 61, 79, 81, 92, 93, 106, 136, 140, 141, 145, 152, 153, 160, 161, 177, 178, 225, 230, 234, 273, 290, 296, 306, 334, 357, 360, 365, 372, 413], "seri": [26, 29, 45, 49, 141], "fp8": [26, 49], "No": [26, 27, 29, 35, 36, 142, 143, 153, 156, 163, 164, 214, 220, 221, 231, 233, 256, 340, 351, 362, 364, 394, 406], "sometim": [27, 40, 41, 43, 45, 154, 256, 368, 371, 406], "explor": [27, 139], "onednn_max_cpu_isa": 27, "avx": [27, 29, 155, 162, 165, 300, 394], "advanc": [27, 29, 33, 44, 49, 143, 162, 165, 234, 326, 365, 381, 415], "avx2_vnni": [27, 162, 300], "dl": [27, 29, 149, 155, 162, 165], "512": [27, 29, 33, 155, 162, 165, 231, 248, 362, 392], "avx512bw": [27, 29], "avx512vl": 27, "avx512dq": 27, "avx512_core_vnni": [27, 162, 300], "avx512_core_bf16": [27, 155, 162, 300], "avx10_1_512": [27, 162, 300], "avx512_core_fp16": [27, 155, 162, 300], "avx10": 27, "float16": [27, 162, 165], "avx10_1_512_amx": [27, 162, 300], "avx512_core_amx": [27, 155, 162, 300], "avx2_vnni_2": [27, 162, 300], "avx10_1_512_amx_fp16": [27, 162, 300], "avx512_core_amx_fp16": [27, 155, 162, 300], "exclud": [27, 160, 161], "preview": 27, "alias": [27, 139, 152, 153, 170, 187, 225, 300, 357], "introduct": [27, 44], "manag": [27, 28, 34, 133, 139, 155, 205, 206, 227, 228, 235, 240, 260, 262, 289, 332, 465], "set_max_cpu_isa": [27, 300, 328], "ed": [27, 139], "observ": [27, 134, 155], "get_effective_cpu_isa": [27, 300, 328], "highest": [27, 35, 40, 155], "zmm": 28, "advantag": [28, 149], "clock": [28, 139], "onednn_cpu_isa_hint": 28, "set_cpu_isa_hint": [28, 300, 328], "routin": [28, 152, 153, 225, 308, 357, 432], "no_hint": [28, 163, 300], "prefer_ymm": [28, 163], "ymm": [28, 163, 164], "get_cpu_isa_hint": [28, 300, 328], "pose": 28, "bypass": 28, "ieee": [29, 149], "golden": 29, "comparison": [29, 49, 152, 153, 225, 234, 288, 339, 357], "boolean": [29, 115, 166, 174, 270, 320, 512], "s4": [29, 185], "u4": [29, 185], "doubl": [29, 166, 200, 230, 234, 264, 360, 365], "ofp8": [29, 166, 174, 185], "5": [29, 31, 33, 42, 45, 77, 83, 84, 85, 86, 115, 139, 142, 149, 151, 152, 153, 154, 166, 170, 174, 185, 209, 218, 219, 221, 222, 225, 226, 227, 228, 229, 235, 240, 241, 246, 250, 254, 260, 261, 262, 318, 348, 351, 352, 357, 358, 359, 372, 373, 374, 376, 377, 388, 402, 413], "arithmet": [29, 107, 125, 139, 152, 234, 270, 365, 512], "topic": [29, 32, 288, 326, 371, 394, 395], "govern": [29, 152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "convert_": 29, "_dt": 29, "_zero": 29, "_point_": 29, "postops_": 29, "oscale_": 29, "mix": [29, 38, 39, 131], "downconvers": [29, 171, 172], "fenv": 29, "nearest": [29, 83, 84, 114, 131, 160, 161, 177, 178, 298], "tie": 29, "fesetround": 29, "denorm": 29, "flush": [29, 314], "xmmintrin": 29, "_mm_set_flush_zero_mod": 29, "_mm_flush_zero_on": 29, "explain": [29, 42, 349, 350], "recogn": [29, 37, 38], "fp16": 29, "tba": 29, "word": [29, 41, 45, 49, 170, 187, 205, 206], "4x": 29, "microarchitectur": 29, "uarch": [29, 139], "lp": [29, 140, 160], "dp4a": 29, "uhd": 29, "11th": 29, "14th": 29, "gen": [29, 44, 230, 234, 243, 263, 360, 365, 381, 415], "iri": [29, 387], "formerli": [29, 45], "dg1": 29, "hpg": 29, "xmx": 29, "aka": [29, 170, 190, 232, 233, 371], "dpa": 29, "arc": [29, 387], "tm": [29, 139, 339], "achemist": 29, "flex": 29, "arctic": 29, "sound": [29, 154], "mad": 29, "pont": 29, "vecchio": 29, "upconvers": 29, "faster": 29, "newer": 29, "interact": [30, 133, 284, 289, 305, 306, 317, 319, 323], "dnnl_sycl": [30, 212, 260, 261, 262, 377, 378, 413], "seamlessli": 30, "submit": [30, 133, 261, 295, 346, 348, 349, 372, 413, 537], "access": [30, 40, 133, 134, 149, 233, 256, 261, 288, 292, 300, 313, 318, 363, 368, 371, 372, 406, 413, 496], "uint8_t": [30, 45, 135, 152, 153, 200, 225, 230, 233, 243, 264, 273, 288, 289, 294, 306, 316, 318, 319, 320, 321, 328, 330, 332, 334, 357, 360, 364, 381, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 498, 499, 500, 501, 502, 505, 506, 507, 508, 510, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 540, 541, 542, 543], "unifi": [30, 34, 133], "sycl_interop": [30, 260, 261, 262, 264, 288, 305, 310, 311, 323, 328, 329, 377, 378, 413], "make_engin": [30, 133, 135, 332, 333], "get_devic": [30, 33, 133, 135, 260, 262, 332, 333, 377, 378], "get_context": [30, 33, 133, 241, 260, 262, 332, 333, 372, 377, 378], "make_stream": [30, 33, 133, 260, 262, 332, 333, 334, 377, 378], "get_queu": [30, 261, 333, 413], "make_memori": [30, 133, 261, 332, 333, 413], "get_buff": [30, 261, 288, 333, 413], "altern": [30, 41, 133, 142], "uniform": [30, 133, 134], "host": [30, 133, 191, 192, 212, 213, 288, 311, 323, 331, 372, 413, 496], "usual": [30, 41, 42, 87, 134, 135, 139, 152, 153, 155, 173, 175, 225, 357, 372, 413, 456], "memory_kind": [30, 133, 261, 264, 289, 305, 332, 333, 413], "could": [30, 37, 38, 133, 139, 149, 152, 153, 158, 159, 225, 230, 299, 357, 360, 371], "identifi": [30, 33, 34, 133, 139, 288, 321], "get_memory_kind": [30, 133, 332, 333], "track": [30, 34, 75], "accessor": [30, 413], "event": [30, 133, 139, 264, 289, 305, 319, 323, 330, 331, 332, 333], "proper": [30, 41, 42, 133, 234, 360, 365, 371], "write": [30, 40, 133, 139, 152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 288, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 372, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 496], "i_1": 31, "ldot": [31, 42, 49], "i_k": 31, "dnnl_eltwise_ab": [31, 160, 161], "begin": [31, 50, 51, 73, 80, 87, 100, 103, 111, 137, 142, 143, 144, 152, 153, 214, 215, 216, 217, 219, 223, 224, 225, 231, 233, 238, 241, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 340, 342, 344, 346, 353, 355, 357, 362, 364, 369, 372, 379, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413], "leq": [31, 111, 137, 144], "clip": [31, 60, 160, 161], "dnnl_eltwise_clip": [31, 160, 161], "clip_v2": 31, "dnnl_eltwise_clip_v2": [31, 160, 161], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [31, 160, 161], "elu": [31, 37, 74, 160, 161, 179, 267], "dnnl_eltwise_elu": [31, 160, 161], "dnnl_eltwise_elu_use_dst_for_bwd": [31, 160, 161], "exp": [31, 37, 89, 118, 160, 179, 233, 267], "dnnl_eltwise_exp": [31, 160, 161], "dnnl_eltwise_exp_use_dst_for_bwd": [31, 160, 161], "gelu_erf": 31, "dnnl_eltwise_gelu_erf": [31, 160, 161], "erf": [31, 77, 160, 161], "pi": 31, "gelu_tanh": 31, "dnnl_eltwise_gelu_tanh": [31, 160, 161], "044715": 31, "hardsigmoid": [31, 80, 160, 161, 179, 267], "dnnl_eltwise_hardsigmoid": [31, 160, 161], "min": [31, 45, 60, 61, 79, 81, 95, 108, 137, 139, 140, 147, 160, 161, 177, 178, 230, 296, 360], "hardswish": [31, 37, 82, 160, 161, 179, 267], "dnnl_eltwise_hardswish": [31, 160, 161], "dnnl_eltwise_linear": [31, 160, 161], "dnnl_eltwise_log": [31, 160, 161], "log_": 31, "dnnl_eltwise_logist": [31, 160, 161, 299], "dnnl_eltwise_logistic_use_dst_for_bwd": [31, 160, 161], "mish": [31, 97, 160, 161, 179, 267], "dnnl_eltwise_mish": [31, 160, 161], "omega": [31, 42, 97], "delta": [31, 97], "pow": [31, 37, 160, 161, 179, 267], "dnnl_eltwise_pow": [31, 160, 161], "dnnl_eltwise_relu_use_dst_for_bwd": [31, 160, 161, 279, 448], "dnnl_eltwise_round": [31, 160, 161], "soft_relu": [31, 160, 161], "dnnl_eltwise_soft_relu": [31, 160, 161], "dnnl_eltwise_sqrt": [31, 160, 161], "dnnl_eltwise_sqrt_use_dst_for_bwd": [31, 160, 161], "squar": [31, 37, 105, 122, 125, 160, 161, 179, 267], "dnnl_eltwise_squar": [31, 160, 161], "swish": [31, 160, 161], "dnnl_eltwise_swish": [31, 160, 161], "dnnl_eltwise_tanh": [31, 160, 161, 299], "dnnl_eltwise_tanh_use_dst_for_bwd": [31, 160, 161], "134145": 31, "_relu": 31, "logsigmoid": 31, "soft": [31, 40], "eltwise_forward": [31, 219, 221, 222, 237, 238, 239, 241, 250, 261, 279, 328, 349, 351, 352, 368, 369, 371, 372, 413, 448, 510], "rather": [31, 256, 406], "Such": [31, 41, 134, 498], "satisfi": [31, 34], "aggress": 33, "onednn_experimental_bnorm_stats_one_pass": 33, "varianc": [33, 55, 56, 57, 85, 86, 189, 190, 215, 217, 242, 245, 271, 282, 285, 294, 342, 346, 379, 385, 426, 428, 458, 460, 474, 476], "bn": 33, "rfc": 33, "spars": [33, 152, 153, 156, 169, 186, 188, 199, 200, 207, 225, 229, 231, 288, 357, 359, 498], "microkernel": 33, "metadata": [33, 34, 229, 359], "enumer": [33, 515], "format_kind": [33, 150, 155, 156, 199, 272, 276, 278, 283, 285, 287, 288, 291, 296, 298, 299, 496, 498], "compress": [33, 40, 49, 188, 207, 263, 415, 416], "sparse_encod": [33, 199, 496, 498], "sparse_encoding_pack": 33, "member": [33, 199], "content": [33, 135, 288, 496, 498], "unspecifi": [33, 155, 167, 168, 288, 498], "namespac": [33, 135, 150, 152, 153, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 268, 289, 305, 306, 307, 310, 319, 323, 339, 340, 342, 344, 346, 351, 352, 353, 355, 357, 359, 360, 362, 365, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415], "m": [33, 49, 91, 139, 152, 153, 219, 225, 229, 230, 231, 234, 235, 243, 248, 250, 262, 263, 264, 273, 306, 308, 328, 334, 357, 359, 360, 362, 365, 381, 392, 395, 415, 538, 546], "nnz": [33, 229, 231, 264, 288, 359, 362, 498], "values_dt": 33, "indices_dt": [33, 264, 288], "pointers_dt": [33, 264, 288], "csr_md": 33, "entri": [33, 155, 199, 200, 229, 270, 288, 292, 295, 313, 359, 498, 504], "csr_valu": 33, "5f": [33, 217, 229, 233, 243, 346, 359, 364, 381], "0f": [33, 218, 219, 220, 221, 222, 226, 229, 231, 232, 233, 236, 237, 241, 256, 261, 264, 348, 350, 351, 352, 358, 359, 362, 363, 364, 367, 368, 372, 406, 413], "csr_indic": 33, "csr_pointer": 33, "csr_mem": 33, "values_sz": 33, "indices_sz": 33, "pointers_sz": 33, "values_handl": 33, "indices_handl": 33, "pointers_handl": 33, "99": 33, "wtag": 33, "dtag": 33, "4x1000000": 33, "1000000x128": 33, "1000000": 33, "dt": [33, 152, 153, 155, 156, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 238, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 340, 342, 344, 346, 349, 350, 351, 352, 353, 355, 357, 359, 360, 362, 369, 379, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 504], "3x512x1024": 33, "1x1024x512": 33, "collect": [33, 34, 139, 155, 307, 321, 360], "agnost": [33, 170, 187, 288], "cl_command_queu": [33, 133, 241, 264, 289, 332, 372], "ocl_queu": [33, 241, 372], "cl_queue_properti": 33, "prop": 33, "cl_queue_profiling_en": 33, "clcreatecommandqueuewithproperti": 33, "ocl_interop": [33, 133, 135, 241, 264, 289, 310, 319, 328, 329, 372], "reset_profil": [33, 295, 328], "enqueu": [33, 372], "twice": 33, "wait": [33, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 295, 303, 340, 342, 344, 346, 351, 352, 353, 355, 359, 360, 362, 365, 368, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 394, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 496, 534, 537], "conv_prim": [33, 224, 355], "uint64_t": [33, 147, 264, 295, 328, 537], "nsec": 33, "get_profiling_data": [33, 295, 328], "profiling_data_kind": [33, 295, 328], "resourc": [33, 34, 138, 311], "vendor": 33, "scope": [33, 40, 394], "apart": 33, "ai": 34, "class": [34, 135, 147, 199, 261, 306, 311, 312, 316, 318, 320, 321, 324, 329, 334, 453, 465, 466, 510, 514, 515, 524], "bind": [34, 227, 228, 235, 240, 260, 262], "know": [34, 41, 230, 360], "connect": [34, 43, 132, 227, 228, 232, 240, 256, 260, 264, 318, 320, 373, 374, 376, 377, 406, 456], "edg": 34, "subgraph": [34, 36, 37, 38], "within": [34, 37, 45, 48, 139, 151, 154, 160, 161, 273, 285, 286, 288, 306, 334], "cycl": [34, 360], "procedur": 34, "port": 34, "node": [34, 126, 134, 218, 226, 264, 348, 358, 395], "abstract": [34, 135, 151, 152, 153, 225, 280, 288, 320, 324, 357, 368, 371, 372, 413, 537], "multi": [34, 35, 37, 52, 70, 92, 95, 98, 125, 128, 134, 324], "lifecycl": 34, "anymor": [34, 154], "head": [35, 37, 139], "attent": [35, 37, 143, 214, 232, 233, 294, 299, 340, 363, 364, 422, 424, 478, 480, 524], "mha": 35, "perceptron": [35, 37], "mlp": [35, 243, 263, 381, 415], "bring": [35, 45], "involv": [35, 498], "onednn_experimental_graph_compiler_cpu_jit": 35, "onednn_experimental_graph_compiler_cpu_llvm_config": 35, "xbyak": 35, "donednn_build_graph": 35, "donednn_experimental_graph_compiler_backend": 35, "donednn_experimental_graph_compiler_cpu_jit": 35, "cpp": [35, 44, 47, 147, 155, 339, 349, 350, 363, 364, 368, 371, 372, 373, 374, 375, 376, 377, 378, 394, 395, 413], "adopt": 35, "friendli": [35, 40, 152, 153, 225, 256, 350, 357, 395, 406], "ir": [35, 44], "among": [35, 134, 139, 318], "occur": [35, 45, 154, 156], "shall": [35, 152], "guidelin": 35, "10": [35, 139, 149, 166, 209, 214, 215, 216, 217, 218, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 238, 239, 240, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 260, 264, 340, 342, 344, 346, 348, 353, 355, 358, 360, 362, 365, 369, 371, 373, 374, 376, 377, 379, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411], "technologi": 35, "onednn_experimental_graph_compiler_opt_level": 35, "turn": [35, 41, 154, 155, 371, 394], "onednn_experimental_graph_compiler_kernel_trac": 35, "stderr": 35, "filenam": 35, "json": [35, 36], "chrome": 35, "onednn_experimental_graph_compiler_print_pass_result": 35, "onednn_experimental_graph_compiler_verbos": 35, "messag": [35, 155, 230, 234, 360, 365, 371, 413, 417, 453, 545], "info": [35, 36, 139, 155, 270, 299, 394, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 504, 541, 543], "onednn_experimental_graph_compiler_dump_gencod": 35, "path_to_dump": 35, "onednn_experimental_graph_compiler_c_includ": 35, "path_to_c_codegen_head": 35, "sctrace": 35, "tmp": [35, 232, 233, 300], "rank": [35, 62, 69, 71, 72, 85, 86, 91, 102, 104, 105, 106, 107, 108, 109, 110], "cpu_includ": 35, "manual": [35, 38, 41, 45, 232], "path_to_onednn_repo": 35, "graph_compil": 35, "offlin": 35, "dump_cod": 35, "visual": [36, 47, 63, 64, 65, 66, 67, 68, 134, 150], "benchmark": [36, 395, 417], "onednn_graph_dump": 36, "serial": [36, 135, 288, 330], "onednn_graph_verbos": 36, "100001": 36, "100002": 36, "1313609102600373579": 36, "100003": 36, "12829238476173481280": 36, "overal": [37, 126, 154, 395], "choic": [37, 154, 156, 162, 165], "bracket": 37, "superscript": 37, "repetit": 37, "subscript": 37, "t1": [37, 156, 256, 264, 406], "neighbor": [37, 160, 161, 298], "implicitli": [37, 38, 143, 270, 288, 504], "in1": 37, "proceed": 37, "categori": [37, 170, 187], "unari": [37, 447, 449], "clamp": [37, 61, 179, 267], "gelu": [37, 78, 160, 161, 179, 267], "leakyrelu": [37, 179, 267], "sigmoid": [37, 117, 143, 161, 179, 267], "softplu": [37, 96, 121, 179, 267], "divid": [37, 45, 63, 64, 65, 66, 67, 68, 152, 153, 156, 170, 179, 187, 225, 267, 357], "reducel1": [37, 179, 267], "reducel2": [37, 179, 267], "reducemax": [37, 179, 267], "reducemean": [37, 179, 267], "reducemin": [37, 179, 267], "reduceprod": [37, 179, 267], "reducesum": [37, 179, 267], "biasadd": [37, 59, 179, 227, 240, 260, 267, 373, 376, 377], "batchnorminfer": [37, 55, 179, 267], "resnext": 37, "ssd": 37, "convtranspos": [37, 179, 267], "adversari": 37, "interpol": [37, 84, 142, 177, 178, 179, 267, 298], "bert": 37, "dlrm": 37, "parallelwavegan": 37, "avgpool": [37, 179, 267], "maxpool": [37, 179, 267], "densenet": 37, "reciproc": [37, 179, 267], "t2": 37, "layernorm": [37, 86, 179, 267], "smoothquant": 37, "convolutionbackwardweight": [37, 179, 267], "biasaddbackward": [37, 179, 267], "relubackward": [37, 179, 267], "batchnormtrainingbackward": [37, 179, 267], "reshapetranspos": 37, "staticreshap": [37, 179, 267], "statictranspos": [37, 179, 267], "activationbackward": 37, "sigmoidbackward": [37, 179, 267], "gelubackward": [37, 179, 267], "encod": [37, 47, 156, 188, 199, 200, 207, 229, 231, 232, 233, 288, 362, 363, 364, 498], "decod": [37, 44, 232, 233, 363, 364], "bottleneck": [37, 155], "t3": 37, "t4": 37, "out1": 37, "out2": 37, "out3": 37, "out4": 37, "out5": 37, "out6": 37, "t0": [37, 156, 256, 264, 406], "t5": 37, "t6": 37, "out7": 37, "batchnormforwardtrain": [37, 179, 267], "out8": 37, "out9": 37, "out10": 37, "out11": 37, "convolutionbackwarddata": [37, 179, 267], "strictli": 38, "symmetr": [38, 45, 276, 278, 290], "scheme": 38, "asymmetr": [38, 49, 69, 71, 72, 102, 270, 360, 361, 381, 382, 415, 416, 504], "honor": 38, "faithfulli": 38, "elimin": 38, "typecast": [38, 113, 179, 267], "vice": [38, 49, 91], "versa": [38, 49, 91], "clearli": 38, "c_g": 39, "c_ghw": 39, "group_normalization_forward": [39, 242, 282, 328, 379, 458, 510], "preprocess": 40, "classifi": 40, "depict": [40, 143, 154], "conv_prim_descr": 40, "maxim": [40, 300], "accomplish": 40, "manner": [40, 288, 498], "don": [40, 49, 218, 226, 230, 256, 348, 358, 360, 406], "find": [40, 104, 105, 106, 107, 108, 150, 227, 228, 230, 234, 237, 240, 260, 261, 360, 365, 368, 413], "look": [40, 154], "source_mem_descr": 40, "dest_mem_descr": 40, "weights_mem_descr": 40, "weight_memori": 40, "conv_source_memori": 40, "user_source_memori": 40, "get_desc": [40, 152, 153, 214, 219, 220, 221, 222, 224, 225, 230, 231, 232, 233, 237, 243, 244, 247, 249, 250, 252, 256, 263, 288, 332, 340, 349, 350, 351, 352, 355, 357, 360, 362, 363, 364, 368, 381, 383, 390, 394, 395, 398, 406, 415, 496], "reorder_prim_descr": 40, "conv_weights_memori": [40, 218, 220, 221, 222, 226, 348, 350, 351, 352, 358], "conv_dest_memori": 40, "durat": 40, "grab": 40, "infus": 40, "cast": [40, 45, 113, 131, 239, 371], "distribut": [40, 139, 152, 153, 160, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "effici": [40, 45, 154], "fill": [40, 41, 115, 152, 153, 154, 220, 225, 233, 234, 236, 237, 243, 250, 252, 263, 264, 357, 364, 365, 367, 368, 381, 394, 398, 415], "fed": [41, 149, 227, 228, 240, 260], "predict": 41, "forward_train": [41, 43, 143, 155, 156, 197, 214, 215, 224, 238, 242, 244, 245, 246, 247, 251, 252, 255, 256, 257, 258, 340, 342, 355, 369, 379, 383, 385, 388, 390, 396, 398, 404, 406, 407, 409, 424, 428, 440, 446, 450, 460, 464, 472, 476, 480, 484, 488, 492, 502, 508, 523, 528, 532, 543], "suffix": [41, 371], "_train": 41, "versu": [41, 149], "_infer": 41, "answer": 41, "backward_data": [41, 156, 197, 426, 458, 474], "sens": [41, 170, 187, 230, 360], "backward_weight": [41, 156, 197], "solver": 41, "practic": [41, 134, 141, 155, 227, 228, 235, 240, 250, 260, 262, 350, 394, 395], "consider": [41, 360], "care": 41, "pooling_max": [41, 161, 219, 221, 222, 249, 251, 349, 351, 352, 394, 396, 500, 502], "slide": 41, "posit": [41, 42, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 83, 84, 85, 86, 87, 93, 94, 126, 154, 217, 288, 314, 346], "Of": [41, 503], "cours": [41, 154, 503], "again": [41, 143], "takeawai": 41, "former": [41, 45, 150, 154], "invoc": 41, "techniqu": 41, "perspect": [41, 141, 154, 371], "varieti": 41, "emit": 41, "unnecessari": [41, 134, 394], "bullet": 41, "9": [41, 42, 44, 166, 209, 227, 228, 240, 260, 373, 374, 376, 377, 395], "pick": [41, 250, 394, 395], "occasion": 41, "brain": 41, "workflow": [41, 372, 373, 374, 375, 376, 377, 378, 413], "workspace_desc": [41, 136, 214, 215, 221, 222, 246, 247, 251, 256, 340, 342, 351, 352, 388, 390, 396, 406, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "perfectli": 41, "inde": 41, "fwd": 41, "forward_primitive_desc": 41, "workspace_md": [41, 199], "primitive_forward": 41, "anywher": [41, 371], "els": [41, 83, 84, 218, 221, 222, 224, 226, 227, 228, 230, 240, 250, 256, 260, 261, 348, 351, 352, 355, 358, 360, 371, 406, 413], "bwd": 41, "primitive_backward": 41, "push": [42, 232, 233], "recent": [42, 138, 149], "focus": [42, 45, 134, 360], "shrink": [42, 45, 230, 360], "throughput": [42, 134, 149], "eight": 42, "offer": [42, 149], "pack": [42, 49, 152, 153, 154, 188, 207, 225, 231, 243, 263, 288, 308, 357, 362, 381, 382, 415, 416, 432, 498, 539], "cost": [42, 256, 395, 406], "dataset": [42, 350], "establish": 42, "q_": 42, "255": [42, 45, 200, 243, 381], "r_": 42, "127": [42, 45, 141, 233, 364], "alpha_": 42, "lceil": [42, 142], "rceil": [42, 142], "w_": [42, 45, 142, 143], "roundnearesteven": 42, "approx": [42, 139], "approxim": [42, 160], "t_": 42, "15": [42, 45, 139, 154, 229, 359], "17": [42, 139, 154, 395], "96": [42, 198, 218, 219, 221, 222, 226, 227, 240, 243, 244, 250, 260, 263, 348, 351, 352, 358, 381, 383, 395, 415], "bigl": 42, "bigr": 42, "238": 42, "187": 42, "66": 42, "88": 42, "net": [42, 44, 218, 219, 226, 232, 233, 256, 264, 348, 349, 350, 358, 363, 364, 406], "uniformli": 42, "g_0": 42, "o_1": 42, "i_2": 42, "h_3": 42, "w_4": 42, "walk": 42, "treat": [43, 45, 141, 145, 149], "minibatch": [43, 134, 288], "flatten": 43, "dnnl_io": [43, 170], "dnnl_oi": [43, 170], "dnnl_oiw": [43, 170], "dnnl_oihw": [43, 170, 218, 226, 348, 358], "dnnl_oidhw": [43, 170], "onednn_jit_dump": 44, "dnnl_set_jit_dump": [44, 264, 300], "dnnl_dump_cpu_jit_avx2_conv_fwd_kernel_f32": 44, "bin": 44, "dnnl_dump_cpu_jit_avx_gemv_t_f32_kern": 44, "30": [44, 230, 233, 234, 360, 364, 365], "disassembl": 44, "objdump": 44, "mi386": 44, "xed": 44, "emul": 44, "sde": 44, "dnnl_dump_gpu_simple_reord": 44, "dnnl_dump_gpu_gen9_conv_fwd": 44, "iga64": 44, "assembli": 44, "emphas": 45, "signed": 45, "int8_t": [45, 230, 233, 243, 254, 263, 264, 273, 306, 328, 334, 360, 364, 381, 402, 415], "dnnl_gemm_u8s8s32": [45, 233, 264, 273], "averag": [45, 53, 136, 139, 160, 161, 290], "biggl": 45, "biggr": 45, "div": [45, 160, 161], "dnnl_gemm_s8s8s32": [45, 264, 273], "gru": [45, 160, 161, 170, 187, 299, 461, 462, 463, 464, 481, 482, 483, 484], "behind": [45, 154, 394], "xeon": [45, 162, 165, 387, 395], "e7": 45, "haswel": 45, "x1xx": 45, "skylak": 45, "vpmaddubsw": 45, "vpmaddwd": 45, "vpaddd": 45, "s16": 45, "int16_t": 45, "c_s32": [45, 230, 360], "a_u8": [45, 230, 243, 360, 381], "b_s8": [45, 230, 243, 263, 360, 381, 415], "u8s8s32_compute_avx512": 45, "ab_s16": 45, "vpmaddubsw_r": 45, "saturate_to_s16": 45, "caution": 45, "snippet": 45, "u8s8s32_comput": 45, "32767": 45, "int16_min": 45, "int16_max": 45, "64770": 45, "pitfal": [45, 154], "vpmovsxbw": 45, "vpmovzxbw": 45, "2x": 45, "u7": 45, "s7": 45, "63": [45, 139, 233, 270, 512], "worth": [45, 360, 371, 395], "data_": 45, "set_rnn_data_qparam": [45, 233, 364, 512], "set_rnn_weights_qparam": [45, 233, 364, 512], "128": [45, 155, 198, 200, 219, 243, 248, 249, 250, 381, 392, 394, 395], "w_max": 45, "x2xx": 45, "cascad": 45, "lake": 45, "vpdpbusd": 45, "u8s8s32_compute_avx512_dl_boost": 45, "real": [45, 141, 154, 170, 230, 360, 373, 374, 375, 376, 377, 378], "world": [45, 230, 360], "overcom": 45, "emploi": 45, "y_": 45, "a_s8": 45, "u8s8": 45, "s8s8s32_comput": 45, "32258": 45, "solv": [45, 152, 153, 225, 357], "overview": 45, "x_s8": 45, "precomput": [45, 232, 233, 350, 364], "embed": [45, 363, 364], "rescal": 45, "insignificantli": 45, "noth": [45, 152, 153, 225, 357], "meaningless": 45, "ia": 45, "volum": [45, 126, 288], "2a": 45, "2b": 45, "2c": [45, 232, 233], "325383": 45, "070u": 45, "futur": [45, 314], "319433": 45, "037": 45, "chapter": 45, "rodriguez": 45, "andr": 45, "et": 45, "al": 45, "white": 45, "paper": [45, 154], "2018": [45, 220, 232, 233, 256, 406], "axi": [46, 49, 59, 62, 63, 64, 66, 67, 68, 69, 71, 72, 83, 84, 85, 86, 89, 90, 102, 104, 105, 106, 107, 108, 109, 110, 118, 119, 127, 144, 145, 156, 177, 178, 199, 200, 223, 228, 257, 258, 264, 288, 301, 302, 353, 374, 407, 408, 409, 410, 515, 526, 528, 530, 532], "stat_desc": [46, 264, 285, 474, 476], "layer_normalization_forward": [46, 245, 285, 328, 385, 474, 510], "_ndim": 46, "_dim": [46, 49], "dnnl_tnc": [46, 143, 170], "dnnl_tn": [46, 170], "dnnl_nt": [46, 170], "dnnl_ldnc": [46, 143, 170], "unlik": [46, 71, 87, 113, 273, 306, 334, 376, 377, 456], "tnc": [46, 85, 86, 187, 214, 232, 233, 245, 247, 256, 340, 363, 364, 385, 390, 406], "dnnl_ntc": [46, 143, 170], "dnnl_bac": [46, 170, 187], "ldnc": [46, 85, 86, 187, 232, 233, 363, 364], "dnnl_type": [47, 154, 160, 164, 165, 169, 170, 190, 194, 196, 198, 200, 202, 204, 206, 207, 454], "auxiliari": [47, 155, 239, 256, 371, 406], "dnnl_config": 47, "dnnl_version": [47, 264, 300], "dnnl_graph_typ": [47, 173, 178, 180, 182, 184, 455, 456], "dnnl_ukernel": [47, 152, 153, 225, 357], "dnnl_ukernel_typ": 47, "libdnnl": [47, 139], "dnnl_library_typ": [47, 150], "dylib": 47, "bindnnl": 47, "dll": 47, "dnnlroot": 47, "getting_start": [47, 339, 371], "ldnnl": 47, "resolv": [47, 233, 363], "sure": [47, 49, 91, 316], "ld_library_path": 47, "dyld_library_path": 47, "rpath": 47, "appl": [47, 387], "secur": 47, "entitl": 47, "fly": [47, 371], "xcode": 47, "codesign": 47, "plist": 47, "xml": 47, "utf": 47, "doctyp": 47, "dtd": 47, "en": 47, "www": [47, 152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "propertylist": 47, "dict": 47, "eha": 47, "cl": [47, 139, 240, 241, 261, 372, 376, 413], "microsoft": [47, 134, 150, 387], "msv": 47, "n_": 48, "local_s": [48, 218, 221, 222, 226, 246, 264, 286, 348, 351, 352, 358, 388, 486, 488], "12d": [49, 170, 187], "bs_0": 49, "bs_1": 49, "dnnl_runtime_dim_v": [49, 156, 234, 243, 264, 288, 289, 294, 305, 332, 333, 365, 366, 381, 382, 510, 518], "wildcard": [49, 179, 267, 288, 318], "hand": [49, 154, 170, 187, 288], "situat": [49, 395], "inconsist": [49, 155, 156], "v": [49, 144, 230, 231, 234, 243, 250, 263, 264, 360, 362, 365, 381, 415, 496], "invalid": [49, 155, 156, 292, 300, 313, 314], "nd": [49, 100, 101, 154], "sake": [49, 154, 371], "prod_": 49, "mathrm": 49, "mbox": [49, 137], "ax": [49, 83, 84, 91, 104, 105, 106, 107, 108, 109, 110, 137, 145, 156, 177, 178, 288, 498], "abc": [49, 187, 248, 288, 392, 498], "bac": [49, 187], "matric": [49, 151, 152, 153, 156, 230, 234, 243, 263, 273, 306, 334, 360, 365, 381, 415], "subsequ": [49, 150, 154, 155, 197, 198, 256, 281, 300, 363, 364, 371, 406], "sgemm": [49, 234, 273, 328, 334, 339, 366], "ge": [50, 73, 87, 100], "diff": [51, 80, 152, 153, 190, 199, 221, 222, 225, 226, 230, 234, 256, 271, 276, 278, 279, 282, 283, 285, 286, 290, 291, 294, 298, 299, 301, 302, 351, 352, 357, 358, 360, 365, 406, 422, 426, 436, 438, 442, 444, 448, 458, 462, 468, 470, 474, 478, 482, 486, 490, 500, 506, 515, 521, 524, 526, 530, 541], "_dst": [51, 80], "rule": [52, 70, 91, 92, 95, 98, 125, 128, 200], "auto_broadcast": [52, 70, 92, 95, 98, 115, 125, 128, 177, 178], "numpi": [52, 70, 92, 95, 98, 115, 125, 128, 177, 178, 288], "denom": [53, 136], "exclude_pad": [53, 54, 177, 178], "move": [53, 54, 63, 64, 65, 66, 67, 68, 93, 94, 154, 231, 362, 363, 364, 368, 452, 465, 496, 510, 534], "s64": [53, 54, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 83, 84, 85, 86, 89, 90, 93, 94, 102, 104, 105, 106, 107, 108, 109, 110, 118, 119, 126, 127], "pads_begin": [53, 54, 63, 64, 65, 66, 67, 68, 93, 94, 177, 178, 227, 228, 240, 260, 373, 374, 376, 377], "auto_pad": [53, 54, 63, 64, 65, 66, 67, 68, 93, 94, 177, 178], "same_upp": [53, 54, 63, 64, 65, 66, 67, 68, 93, 94, 177, 178], "same_low": [53, 54, 63, 64, 65, 66, 67, 68, 93, 94, 177, 178], "pads_end": [53, 54, 63, 64, 65, 66, 67, 68, 93, 94, 177, 178, 227, 228, 240, 260, 373, 374, 376, 377], "count": [53, 54, 71, 72, 89, 90, 126, 127, 139, 219, 227, 228, 240, 260, 264, 270, 280, 452], "rounding_typ": [53, 93, 177, 178], "floor": [53, 64, 93, 177, 178], "data_format": [53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 83, 84, 93, 94, 100, 101, 155, 177, 178, 227, 228, 240, 260, 373, 374, 376, 377, 456], "interpret": [53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 83, 84, 91, 93, 94, 126], "ncx": [53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 83, 84, 93, 94, 100, 101, 177, 178, 227, 240, 260, 373, 376, 377], "nxc": [53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 83, 84, 93, 94, 100, 101, 177, 178, 228, 374, 456], "srcshape": 54, "src_shape": [54, 83, 84, 177], "epsilon": [55, 56, 57, 85, 86, 177, 178, 199, 200, 234, 245, 264, 271, 282, 285, 365, 385, 426, 428, 458, 460, 474, 476, 515, 517], "momentum": [55, 177, 178], "neither": [55, 57, 285, 368, 371, 372, 413, 474, 476], "running_mean": 55, "running_vari": 55, "batch_mean": 55, "batch_vari": 55, "diff_gamma": [57, 86], "diff_beta": [57, 86], "_valu": 60, "use_dst": [61, 74, 112, 117, 123, 130, 177, 178], "weights_format": [63, 64, 65, 66, 67, 68, 177, 178, 227, 228, 240, 260, 373, 374, 376, 377], "oix": [63, 64, 65, 66, 67, 68, 177, 178, 227, 240, 260, 373, 376, 377], "fist": 63, "stretch": [63, 64, 65, 66, 67, 68], "xio": [63, 64, 65, 66, 67, 68, 177, 178, 228, 374], "_channel": [63, 64, 65, 66, 67, 68], "_shape": [63, 64, 65, 66, 67, 68, 101], "firstli": [64, 91], "_pad": 64, "_h": 64, "_padding_h": 64, "output_pad": [64, 66, 67, 68, 177, 178], "dst_shape": [64, 83, 84, 115, 177, 178], "weights_shap": [65, 68, 177], "iox": [66, 67, 68, 177, 178], "xoi": [66, 67, 68, 177, 178], "zp": [69, 71, 72, 102, 177, 178, 228, 230, 360, 374], "zps_i": [69, 71, 72], "scale_i": [69, 102], "qtype": [69, 71, 72, 102, 177, 178, 228, 374], "per_tensor": [69, 71, 72, 102, 177, 178, 228, 374], "per_channel": [69, 71, 72, 100, 102, 177, 178, 228, 374], "scales_i": [71, 72], "channelnum": [71, 72, 104, 105, 106, 107, 108, 109, 110], "exponenti": [76, 160, 161], "sqrt2": 77, "_src": 80, "bilinear": [83, 84, 161, 177, 178, 298], "trilinear": [83, 84, 142, 161, 177, 178, 298], "coordinate_transformation_mod": [83, 84, 177, 178], "coordin": [83, 84], "resiz": [83, 84, 231, 362], "half_pixel": [83, 84, 177, 178], "align_corn": [83, 84, 177, 178], "x_resiz": [83, 84], "differenti": [83, 135, 150, 320], "begin_norm_axi": [85, 86, 177, 178], "keep_stat": [85, 177, 178], "use_affin": [85, 86, 177, 178], "modul": [85, 86, 139], "1e": [85, 86, 230, 360], "span": [85, 86], "small": [87, 134, 151, 152, 156, 395], "coeffici": 87, "leakag": 87, "logarithm": [88, 160, 161], "formul": [89, 120, 121, 371], "dst_i": [89, 118, 125], "big": [89, 152, 153, 225, 357], "src_j": [89, 118], "logsoftmax": [90, 145, 160, 161, 179, 267], "unsqueez": 91, "transpose_a": [91, 177, 178, 235, 262, 375, 378], "transpose_b": [91, 177, 178, 235, 262, 375, 378], "_0": [92, 95], "distanc": [93, 94], "avgpoolbackward": [94, 179, 267], "ln": [96, 120, 145], "diff_": [97, 143], "3src": 97, "2src": 97, "parametr": 100, "per_channel_broadcast": [100, 177, 178], "uni": [100, 101, 155, 232, 233, 394, 395], "direction": [100, 101], "rightmost": [100, 256, 406], "shape_i": 100, "tensorflow": [101, 149, 154], "_forward": 101, "diff_slop": 101, "zp_i": 102, "infin": 103, "neq": 103, "inf": 103, "l1": [104, 139], "norm": [104, 105, 140, 160, 230, 234, 360, 365], "keep_dim": [104, 105, 106, 107, 108, 109, 110, 177, 178], "shapeof": [104, 105, 106, 107, 108, 109, 110], "l2": [105, 139, 230, 360], "root": [105, 122, 140, 160, 161], "third": [115, 371], "cond": 115, "align": [115, 143, 155, 232, 233, 264, 311, 319, 323, 371, 395], "invalid_shap": [115, 183], "_0_i": 125, "_1_i": 125, "special_zero": [126, 177, 178], "keep": [126, 149, 151, 154, 176, 184, 200, 221, 222, 226, 256, 349, 351, 352, 358, 395, 406], "permut": [127, 170, 187, 264, 288, 498], "dnnl_ocl": [133, 191, 240, 241, 372, 376], "cl_device_id": [133, 135, 264, 289, 319, 330, 332], "cl_context": [133, 135, 241, 264, 289, 319, 330, 332], "cl_mem": [133, 241, 264, 288, 289, 332, 371, 372, 496], "get_command_queu": [133, 241, 332, 372], "get_mem_object": [133, 241, 332, 372], "retain": 133, "destruct": [133, 498, 504, 512], "measur": [134, 155, 350], "affinit": 134, "tbb": [134, 139], "intention": 134, "openmp": [134, 155, 394], "nor": [134, 285, 368, 371, 372, 413, 474, 476], "principl": 134, "numactl": 134, "easi": 134, "modern": 134, "socket": [134, 395], "chip": 134, "tile": 134, "cluster": 134, "setup": [134, 139], "variant": [134, 143, 276, 278], "orient": 134, "latenc": [134, 139], "server": 134, "interleav": [134, 151], "chanc": 134, "traffic": 134, "variat": 134, "omp_proc_bind": 134, "spread": 134, "omp_plac": 134, "omp_num_thread": [134, 395], "membind": 134, "cpunodebind": 134, "physcpubind": 134, "kmp_hw_subset": 134, "1t": 134, "costli": 135, "mitig": [135, 138, 233], "blob": [135, 199, 200, 264, 288, 289, 294, 319, 330, 332, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 498, 499, 501, 505, 507, 510, 515, 516, 518, 520, 522, 525, 527, 529, 531, 535, 540, 542], "commit": [135, 155, 300], "hash": [135, 155, 300, 394, 544], "dnnl_version_t": [135, 264, 300, 328], "packag": [135, 150], "fetch": 135, "primitive_desc_bas": [135, 294, 328, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_cache_blob_id": [135, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_cache_blob": [135, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 499, 501, 505, 507, 510, 516, 518, 520, 522, 525, 527, 529, 531, 535, 540, 542], "cache_miss": [135, 155], "cache_hit": [135, 155], "from_cache_blob": [135, 155], "store_cache_blob_on_disk": 135, "load_cache_blob_from_disk": 135, "conv_from_cache_blob": 135, "get_engine_cache_blob_id": [135, 332], "get_engine_cache_blob": [135, 332], "ocl_engin": 135, "get_blob": [135, 498], "deseri": 135, "dnnl_pooling_avg_include_pad": [136, 160, 161, 290], "dnnl_pooling_avg_exclude_pad": [136, 160, 161, 290], "nice": 136, "restor": 136, "itself": [136, 294, 371, 514, 534], "dnnl_pooling_max": [136, 160, 161, 218, 226, 290, 348, 358], "flt_max": 136, "dbl_max": 136, "area": [136, 155, 288, 498], "leaki": [137, 291], "trainabl": [137, 291], "Its": 137, "weights_md": [137, 199, 218, 248, 252, 348, 392, 398, 515], "repeat": [138, 394], "capac": [138, 264, 292, 313, 314, 328, 329], "exceed": [138, 156], "evict": [138, 292, 313], "hit": 138, "miss": [138, 139, 155, 177, 219, 221, 222, 232, 233, 349, 351, 352], "profile_cr": [138, 155], "onednn_primitive_cache_capac": 138, "dnnl_set_primitive_cache_capac": [138, 264, 292], "notifi": 139, "address": [139, 151, 154, 256, 319, 406], "onednn_jit_profil": 139, "tsc": [139, 300], "dnnl_set_jit_profiling_flag": [139, 264, 300], "box": 139, "overrid": [139, 147, 300], "dnnl_set_jit_profiling_jitdumpdir": [139, 264, 300], "timelin": 139, "chart": 139, "fp": [139, 270, 281, 300], "onednn_itt_task_level": 139, "trigger": [139, 395], "master": [139, 149], "amplx": 139, "q": [139, 260, 261, 262, 264, 377, 378, 413], "knob": 139, "shapes_alexnet": 139, "nmi": 139, "watchdog": 139, "timer": 139, "impl": [139, 147], "prb": 139, "gop": 139, "gfreq": 139, "gflop": 139, "0time": 139, "0gflop": 139, "avx512_common": [139, 395], "alexnet": [139, 218, 219, 220, 221, 222, 226, 348, 349, 350, 351, 352, 358], "conv1": [139, 219, 227, 240, 260, 348, 349, 373, 376, 377], "g1mb256ic3ih227oc96oh55kh11sh4ph0n": 139, "53": 139, "9726": 139, "4285": 139, "3096": 139, "81": 139, "22": 139, "5851": 139, "2389": 139, "74": 139, "conv2": [139, 219, 348, 349], "g2mb256ic96ih27oc256oh27kh5ph2n": 139, "104": 139, "696": 139, "20": [139, 230, 234, 242, 318, 360, 365, 379], "2195": 139, "5177": 139, "98": 139, "21": [139, 395], "9233": 139, "4775": 139, "56": [139, 228], "conv3": [139, 219, 220, 350], "mb256ic256ih13oc384oh13kh3ph1n": 139, "68": 139, "904": 139, "5134": 139, "4441": 139, "57": 139, "18": [139, 155, 395], "1391": 139, "3798": 139, "conv4": [139, 219], "g2mb256ic384ih13oc384oh13kh3ph1n": 139, "51": 139, "678": 139, "7397": 139, "4401": 139, "97": [139, 155], "4623": 139, "4146": 139, "76": 139, "conv5": [139, 219], "g2mb256ic384ih13oc256oh13kh3ph1n": 139, "34": 139, "452": 139, "77148": 139, "4433": 139, "13": [139, 170, 219, 220, 224, 239, 350, 355, 371], "50435": 139, "4051": 139, "skip": [139, 156, 288, 375, 378, 496], "mistrust": 139, "72": [139, 257, 407], "6726": 139, "avg": 139, "83": 139, "6142": 139, "report": [139, 141, 270, 512], "csv": 139, "_jit_avx512_common_conv_fwd_kernel": 139, "300": 139, "128503": 139, "293": 139, "946143": 139, "285": 139, "549830": 139, "268": 139, "868599": 139, "256": [139, 219, 220, 228, 232, 233, 242, 248, 249, 264, 350, 379, 392, 394], "715527": 139, "libgomp": 139, "func": [139, 221, 222, 226, 351, 352, 358], "0x194f0": 139, "186": 139, "604226": 139, "0x19370": 139, "82": 139, "609694": 139, "jit_avx512_co": 139, "682241": 139, "vmlinux": 139, "763433": 139, "1451": 139, "459338": 139, "outsid": [139, 306, 377, 378], "280": 139, "489764": 139, "434821": 139, "interv": 139, "2000": 139, "ue": 139, "2344": 139, "3131": 139, "24": [139, 154], "1246": 139, "2237": 139, "2988": 139, "5157": 139, "6731": 139, "4617": 139, "5369": 139, "4434": 139, "87": 139, "1371": 139, "4020": 139, "75": [139, 218, 219, 221, 222, 226, 348, 351, 352, 358], "428": 139, "4522": 139, "06": 139, "7986": 139, "4037": 139, "79": 139, "64233": 139, "4508": 139, "05": 139, "99841": 139, "3828": 139, "1404": 139, "85": 139, "7318": 139, "dtlb": 139, "load": 139, "lock": 139, "4k": 139, "fb": 139, "26": [139, 214, 247, 340, 390], "icach": 139, "micro": [139, 151], "itlb": 139, "bad": [139, 156], "specul": 139, "l3": 139, "dram": 139, "frequenc": 139, "clocktick": 139, "retir": 139, "cpi": 139, "rate": [139, 155], "x87": 139, "microcod": 139, "assist": 139, "jitdump": [139, 300], "perfmap": [139, 300], "jitdumpdir": [139, 300], "record": [139, 227, 228, 240, 260], "k1": [139, 219], "mb1ic32ih14oc32oh14kh3ph1n": 139, "resnet_50": 139, "res4a_branch2b": 139, "mb1ic32ih14oc32oh14kh3ph1nresnet_50": 139, "0032768": 139, "0131836": 139, "248": 139, "551": 139, "0262988": 139, "124": [139, 141], "599": 139, "woken": 139, "captur": [139, 453], "wrote": 139, "884": 139, "23102": 139, "inject": 139, "displai": [139, 155, 156], "stdio": [139, 218, 226, 236, 348, 358, 367], "n20": 139, "lost": 139, "23k": 139, "uhh": 139, "5775500000": 139, "symbol": [139, 150], "39": 139, "33": 139, "0x000000000001d8ba": 139, "29": 139, "41": [139, 395], "31475": 139, "jit_avx2_conv_fwd_kernel_f32": 139, "49": 139, "0x000000000001d712": 139, "47": 139, "jit_avx2_convolution_fwd_t": 139, "execute_forward": 139, "exec_ctx_t": 139, "lambda": 139, "52": 139, "0x000000000001d8be": 139, "93": 139, "0x000000000001d716": 139, "0x000000000001d8c5": 139, "55": [139, 218, 219, 221, 222, 226, 250, 348, 351, 352, 358, 395], "0x000000000001d8c3": 139, "46": 139, "0x000000000001d71d": 139, "resolut": 139, "disassembli": 139, "brendan": 139, "gregg": 139, "excel": 139, "mathop": 140, "mul": [140, 160, 161, 296], "idl": 140, "ep": [140, 264, 296, 517], "kept": [141, 154, 170, 294, 514], "dnnl_arg_from": [141, 218, 219, 220, 221, 222, 226, 233, 236, 249, 264, 294, 348, 349, 350, 351, 352, 358, 364, 367, 394], "dnnl_arg_to": [141, 218, 219, 220, 221, 222, 226, 233, 236, 249, 264, 294, 348, 349, 350, 351, 352, 358, 364, 367, 394], "encount": [141, 155, 156, 349], "bug": [141, 181, 182], "team": 141, "dnnl_s8": [141, 166, 174, 185], "dnnl_f32": [141, 154, 166, 170, 174, 185, 218, 226, 236, 308, 348, 358, 367], "allevi": [141, 234, 365], "dt_src": 141, "memory_format": 141, "fmt_src": 141, "dt_dst": 141, "fmt_dst": 141, "upsampl": [142, 251, 396], "downsampl": 142, "f_h": 142, "f_w": 142, "definit": [142, 143, 144, 288, 309, 311, 322, 325, 455], "ih_0": 142, "iw_0": 142, "ih_1": 142, "iw_1": 142, "nchw16c": [142, 154, 187], "_spatial": 142, "_size": 142, "unrol": 143, "srciter": 143, "dstiter": 143, "evalu": 143, "left2right": 143, "increas": [143, 149, 395], "right2left": 143, "decreas": [143, 395], "bidirectional_concat": [143, 201, 232, 233, 363, 364], "dstlayer": 143, "bidirectional_sum": [143, 201], "srclayer": 143, "h_": [143, 160, 161], "And": [143, 154, 288, 498], "vanilla_rnn_forward": [143, 299, 328, 510, 512, 541], "vanilla_rnn_backward": [143, 299, 328, 510], "vanilla_rnn_pd": 143, "aprop": 143, "src_layer_desc": [143, 233, 256, 264, 299, 364, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "src_iter_desc": [143, 214, 247, 256, 264, 299, 340, 390, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "weights_layer_desc": [143, 232, 233, 256, 264, 299, 363, 364, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "weights_iter_desc": [143, 214, 232, 233, 247, 256, 264, 299, 340, 363, 390, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "bias_desc": [143, 220, 221, 256, 264, 276, 278, 283, 287, 299, 350, 351, 406, 422, 424, 440, 446, 462, 464, 472, 478, 480, 482, 484, 490, 492, 494, 524, 541, 543], "dst_layer_desc": [143, 232, 233, 256, 264, 299, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "dst_iter_desc": [143, 214, 247, 256, 264, 299, 340, 390, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "a_t": [143, 233], "h_t": 143, "lstm_forward": [143, 232, 233, 247, 256, 299, 328, 363, 364, 390, 406, 490, 510], "lstm_backward": [143, 256, 299, 328, 406, 510], "lstm_pd": [143, 247, 390], "src_iter_h_desc": 143, "src_iter_c_desc": [143, 247, 256, 264, 299, 390, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "dst_iter_h_desc": 143, "dst_iter_c_desc": [143, 247, 256, 264, 299, 390, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "i_t": 143, "w_i": 143, "u_i": 143, "b_i": [143, 152], "f_t": 143, "w_f": 143, "u_f": 143, "b_f": 143, "c_t": [143, 160, 161], "u_": 143, "b_": [143, 160, 161], "o_t": 143, "w_o": 143, "u_o": 143, "b_o": 143, "weightslay": 143, "weightsit": 143, "srciterc": 143, "dstiterc": 143, "weights_peephole_desc": [143, 264, 299, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "p_i": 143, "p_f": 143, "p_o": 143, "p_": 143, "weights_peephol": 143, "weights_projection_desc": [143, 264, 299, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "weights_project": 143, "gru_forward": [143, 299, 328, 462, 510], "gru_backward": [143, 299, 328, 510], "gru_pd": 143, "u_t": 143, "w_u": 143, "u_u": 143, "b_u": 143, "r_t": [143, 160, 161], "w_r": 143, "u_r": 143, "b_r": 143, "lbr_gru_forward": [143, 299, 328, 482, 510], "lbr_gru_backward": [143, 299, 328, 510], "lbr_gru_pd": 143, "augru_forward": [143, 214, 299, 328, 340, 422, 510], "augru_backward": [143, 299, 328, 510], "augru_pd": [143, 214, 340], "attention_desc": [143, 264, 299, 422, 424, 478, 480], "lbr_augru_forward": [143, 299, 328, 478, 510], "lbr_augru_backward": [143, 299, 328, 510], "lbr_augru_pd": 143, "diffweightslay": 143, "diffweightsit": 143, "diffweightspeephol": 143, "diffweightsproject": 143, "properli": [143, 154, 156, 294], "diff_weights_overwrit": [143, 203], "dnnl_arg_src_lay": [143, 214, 232, 233, 247, 256, 264, 294, 340, 363, 364, 390, 406], "srclayerattent": 143, "dnnl_arg_src_layer_attent": 143, "dnnl_arg_src_it": [143, 214, 232, 233, 247, 256, 264, 294, 340, 363, 390, 406], "dnnl_arg_src_iter_c": [143, 232, 233, 247, 256, 264, 294, 363, 390, 406], "dnnl_arg_weights_lay": [143, 214, 232, 233, 247, 256, 264, 294, 340, 363, 364, 390, 406], "dnnl_arg_weights_it": [143, 214, 232, 233, 247, 256, 264, 294, 340, 363, 364, 390, 406], "weightspeephol": 143, "dnnl_arg_weights_peephol": [143, 264, 294], "weightsproject": 143, "dnnl_arg_weights_project": [143, 264, 294], "dnnl_arg_dst_lay": [143, 214, 232, 233, 247, 256, 264, 294, 340, 363, 364, 390, 406], "dnnl_arg_dst_it": [143, 214, 232, 233, 247, 256, 264, 294, 340, 363, 390, 406], "dnnl_arg_dst_iter_c": [143, 232, 233, 247, 256, 264, 294, 363, 390, 406], "dnnl_workspac": 143, "diffsrclay": 143, "dnnl_arg_diff_src_lay": [143, 256, 264, 294, 406], "diffsrclayerattent": 143, "dnnl_arg_diff_src_layer_attent": 143, "diffsrcit": 143, "dnnl_arg_diff_src_it": [143, 256, 264, 294, 406], "diffsrciterc": 143, "dnnl_arg_diff_src_iter_c": [143, 256, 264, 294, 406], "dnnl_arg_diff_weights_lay": [143, 256, 264, 294, 406], "dnnl_arg_diff_weights_it": [143, 256, 264, 294, 406], "dnnl_arg_diff_weights_peephol": [143, 264, 294], "dnnl_arg_diff_weights_project": [143, 264, 294], "diffdstlay": 143, "dnnl_arg_diff_dst_lay": [143, 256, 264, 294, 406], "diffdstit": 143, "dnnl_arg_diff_dst_it": [143, 256, 264, 294, 406], "diffdstiterc": 143, "dnnl_arg_diff_dst_iter_c": [143, 256, 264, 294, 406], "With": [143, 149, 413], "dnnl_ldgo": [143, 170], "dnnl_ldigo": [143, 170], "dnnl_ldio": [143, 170], "dnnl_ldgoi": [143, 170], "dnnl_ldoi": [143, 170], "markdown": 143, "thought": 144, "formal": 144, "group_siz": [144, 257, 264, 301, 407, 526, 528], "ug": 144, "nu": 145, "bigger": [146, 154], "dnnl_threadpool_ifac": [147, 537], "test_thread": 147, "threadpool_t": 147, "threadpool_interop": [147, 264, 306, 310, 328], "threadpool_ifac": [147, 334], "nonblockingthreadpool": 147, "unique_ptr": 147, "tp_": 147, "num_thread": 147, "hardware_concurr": 147, "get_num_thread": [147, 537], "numthread": 147, "get_in_parallel": [147, 537], "currentthreadid": 147, "get_flag": [147, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 537, 541, 543], "asynchron": [147, 368, 372, 394, 413, 537], "parallel_for": [147, 261, 413, 537], "fn": [147, 537], "nthr": [147, 155], "njob": 147, "schedul": 147, "balance211": 147, "new_content_goes_her": 148, "propos": 149, "idea": [149, 154, 360], "spot": 149, "trade": 149, "site": [149, 453], "themselv": [149, 154, 227, 228, 235, 240, 260, 262, 371, 373, 374, 375, 376, 377, 378, 456], "afterward": 149, "incompat": [150, 156], "migrat": [150, 205, 206], "mkldnn": 150, "substr": [150, 156], "renam": 150, "macro": [150, 264], "v1": [150, 230, 234, 360, 365], "mkldnn_memory_desc_t": 150, "md": [150, 154, 156, 223, 259, 353, 371, 395, 411, 496, 498], "mkldnn_block": 150, "exec": [150, 155, 241, 261, 394, 395], "mkldnn_args_src": 150, "dnnl_block": [150, 169, 186, 288, 498], "dnnl_args_src": 150, "mkldnn_dnnl_mangl": 150, "preprocessor": 150, "mkldnn_memory_desc_init_by_tag": 150, "dnnl_memory_desc_init_by_tag": 150, "mkldnn_arch_opt_flag": 150, "dnnl_arch_opt_flag": 150, "mkldnn_build_exampl": 150, "dnnl_build_exampl": 150, "mkldnn_build_for_ci": 150, "dnnl_build_for_ci": 150, "mkldnn_build_test": 150, "dnnl_build_test": 150, "mkldnn_cpu_runtim": 150, "dnnl_cpu_runtim": 150, "mkldnn_enable_concurrent_exec": 150, "dnnl_enable_concurrent_exec": [150, 205, 206], "mkldnn_enable_jit_profil": 150, "dnnl_enable_jit_profil": 150, "mkldnn_gpu_backend": 150, "dnnl_gpu_backend": 150, "mkldnn_gpu_runtim": 150, "dnnl_gpu_runtim": 150, "mkldnn_install_mod": 150, "dnnl_install_mod": 150, "mkldnn_library_typ": 150, "mkldnn_thread": 150, "dnnl_thread": 150, "mkldnn_use_clang_sanit": 150, "dnnl_use_clang_sanit": 150, "mkldnn_verbos": 150, "dnnl_verbos": 150, "mkldnn_werror": 150, "dnnl_werror": 150, "find_packag": 150, "target_link_librari": 150, "project_app": 150, "Or": 150, "inclus": 150, "add_subdirectori": 150, "dnnl_dir": 150, "include_directori": 150, "thing": [150, 371, 394], "recompil": 150, "patch": [150, 300, 544], "region": [151, 288, 498], "consecut": [151, 288, 498], "granular": [151, 395], "fundament": 151, "freez": 151, "hoist": 151, "loop": 151, "brgemm": [152, 153, 225, 264, 268, 307, 335, 431, 432, 465, 539, 549], "a_i": [152, 233], "_arg": 152, "dnnl_brgemm_pack_b_need_pack": [152, 264, 308], "packb": [152, 153], "copyright": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "2024": [152, 153, 220, 225, 227, 228, 235, 240, 242, 250, 256, 260, 262, 263, 357, 379, 406, 415], "corpor": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 387, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "licens": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "apach": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "complianc": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "law": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "agre": [152, 153, 200, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "AS": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "basi": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "warranti": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "OF": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "express": [152, 153, 155, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 373, 376, 377, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "permiss": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 379, 381, 383, 385, 387, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "cmath": [152, 153, 214, 215, 216, 217, 221, 223, 224, 225, 229, 230, 231, 234, 238, 239, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 263, 340, 342, 344, 346, 351, 353, 355, 357, 359, 360, 362, 365, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411, 415], "iostream": [152, 153, 214, 215, 216, 217, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 351, 353, 355, 357, 359, 360, 362, 365, 369, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 396, 402, 404, 407, 409, 411, 413, 415], "example_util": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415], "brgemm_exampl": [152, 153, 225, 264, 357], "engine_stream": [152, 153, 214, 215, 216, 217, 223, 224, 225, 231, 238, 239, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 340, 342, 344, 346, 353, 355, 357, 362, 369, 371, 379, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411], "k_k": [152, 153, 225, 357], "48": [152, 153, 219, 225, 357], "printf": [152, 153, 218, 225, 226, 230, 234, 236, 348, 357, 358, 360, 365, 367], "n_call": [152, 153, 225, 357], "lda": [152, 153, 225, 234, 264, 273, 306, 308, 328, 334, 357, 365, 538], "ldb": [152, 153, 225, 234, 264, 273, 306, 308, 328, 334, 357, 365, 538], "ldc": [152, 153, 225, 234, 264, 273, 306, 308, 328, 334, 357, 365, 538], "ldd": [152, 153, 225, 264, 308, 357, 538], "batch_siz": [152, 153, 225, 264, 308, 357, 538], "a_dt": [152, 153, 225, 264, 308, 357, 538], "b_dt": [152, 153, 225, 264, 308, 357, 538], "c_dt": [152, 153, 225, 264, 308, 357, 538], "d_dt": [152, 153, 225, 264, 308, 357, 538], "a_dim": [152, 153, 225, 357], "b_dim": [152, 153, 225, 357], "c_dim": [152, 153, 225, 357], "d_dim": [152, 153, 225, 357], "binary_add_dim": [152, 153, 225, 357], "a_user_data": [152, 153, 225, 357], "b_user_data": [152, 153, 225, 357], "binary_add_user_data": [152, 153, 225, 357], "d_data": [152, 153, 225, 357], "d_user_data": [152, 153, 225, 357], "sign_gen": [152, 153, 225, 357], "val": [152, 153, 225, 357], "holder": [152, 153, 225, 357], "a_f32_md": [152, 153, 225, 357], "b_f32_md": [152, 153, 225, 357], "binary_add_f32_md": [152, 153, 225, 357], "d_f32_md": [152, 153, 225, 357], "a_f32_mem": [152, 153, 225, 263, 264, 357, 415], "b_f32_mem": [152, 153, 225, 243, 263, 357, 381, 415], "binary_add_f32_mem": [152, 153, 225, 357], "d_f32_mem": [152, 153, 225, 357], "request": [152, 153, 183, 208, 209, 225, 280, 288, 294, 295, 319, 333, 357, 515], "a_md": [152, 153, 225, 230, 234, 243, 263, 357, 360, 365, 381, 415], "b_md": [152, 153, 225, 230, 234, 243, 263, 357, 360, 365, 381, 415], "binary_add_md": [152, 153, 225, 357], "c_md": [152, 153, 225, 230, 234, 243, 263, 357, 360, 365, 381, 415], "d_md": [152, 153, 225, 357], "a_mem": [152, 153, 225, 357], "b_mem": [152, 153, 225, 357], "binary_add_mem": [152, 153, 225, 357], "c_mem": [152, 153, 225, 357], "d_mem": [152, 153, 225, 357], "a_ptr": [152, 153, 225, 264, 308, 357], "reinterpret_cast": [152, 153, 225, 357], "b_ptr": [152, 153, 225, 264, 308, 357], "a_dt_siz": [152, 153, 225, 357], "data_type_s": [152, 153, 225, 357, 496], "b_dt_size": [152, 153, 225, 357], "c_ptr": [152, 153, 225, 264, 308, 357], "brgemm_op": [152, 153, 225, 357], "brgemm_attr": [152, 153, 225, 357], "brg": [152, 153, 155, 225, 357], "brg_po": [152, 153, 225, 357], "reusabl": [152, 153, 225, 357], "piec": [152, 153, 225, 288, 294, 357], "catch": [152, 153, 220, 221, 225, 231, 233, 239, 261, 351, 357, 362, 364, 371, 413], "example_allows_unimpl": [152, 153, 214, 220, 221, 225, 231, 233, 264, 340, 351, 357, 362, 364], "servic": [152, 153, 225, 268, 274, 357], "scratchpad_s": [152, 153, 225, 357], "get_scratchpad_s": [152, 153, 225, 357, 538], "vnni": [152, 153, 225, 357], "brgemm_pack_b": [152, 153, 225, 264, 308, 335, 357, 465], "pack_b": [152, 153, 225, 357], "in_ld": [152, 153, 225, 264, 308, 357, 539], "out_ld": [152, 153, 225, 264, 308, 357, 539], "in_dt": [152, 153, 225, 264, 308, 357, 539], "out_dt": [152, 153, 225, 264, 308, 357, 539], "b_block": [152, 153, 225, 357], "b_base_ptr": [152, 153, 225, 357], "blocked_b_s": [152, 153, 225, 357], "need_pack": [152, 153, 225, 264, 308, 357, 539], "b_ptr_i": [152, 153, 225, 357], "b_blocked_ptr_i": [152, 153, 225, 357], "a_b_offset": [152, 153, 225, 264, 308, 357, 538], "a_offset_i": [152, 153, 225, 357], "b_offset_i": [152, 153, 225, 357], "make_pair": [152, 153, 225, 357], "set_hw_context": [152, 153, 225, 357, 538], "a_b": [152, 153, 225, 357], "acc_ptr": [152, 153, 225, 357], "a_b_po_offset": [152, 153, 225, 357], "a_offset_po": [152, 153, 225, 357], "b_offset_po": [152, 153, 225, 357], "emplace_back": [152, 153, 225, 357], "release_hw_context": [152, 153, 225, 357, 538], "clean": [152, 153, 218, 225, 226, 236, 348, 357, 358, 367, 395], "delet": [152, 153, 225, 357, 465], "verif": [152, 153, 225, 357], "uncondit": [152, 153, 225, 357], "user_d_mem": [152, 153, 225, 357], "pop": [152, 153, 225, 357], "to_throw": [152, 153, 225, 357], "fabsf": [152, 153, 225, 357], "19e": [152, 153, 225, 357], "12g": [152, 153, 225, 357], "got": [152, 153, 156, 225, 227, 228, 235, 239, 240, 241, 260, 262, 357, 371, 372], "runtime_error": [152, 153, 183, 208, 225, 229, 300, 357, 359], "argc": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 369, 371, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415], "char": [152, 153, 200, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 273, 300, 306, 320, 328, 334, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 453, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543, 544, 545], "argv": [152, 153, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 340, 342, 344, 346, 348, 351, 352, 353, 355, 357, 358, 359, 360, 362, 365, 369, 371, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415], "handle_example_error": [152, 153, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 340, 342, 344, 346, 351, 352, 353, 355, 357, 359, 360, 362, 365, 369, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "analyz": 154, "adjust": [154, 288, 498], "facilit": 154, "articl": [154, 395], "devot": 154, "multidimension": 154, "interchang": 154, "focu": 154, "phase": [154, 270, 504], "simpler": 154, "chw": 154, "displac": 154, "jump": 154, "plane": 154, "offset_nchw": 154, "adjac": 154, "border": 154, "contrari": [154, 360, 372, 413], "pixel": [154, 239, 371], "bvlc": 154, "caff": 154, "dnnl_format_tag_t": [154, 187, 218, 226, 264, 288, 328, 348, 358, 496], "quit": [154, 234, 239, 365, 371], "offset_nhwc": 154, "hwc": 154, "wc": 154, "bmp": 154, "color": 154, "24bit": 154, "recognit": 154, "interest": [154, 326, 371, 394], "outer": [154, 170], "offset_chwn": 154, "hwn": 154, "wn": 154, "dnnl_chwn": [154, 170], "artifici": 154, "disjoint": 154, "trivial": [154, 156, 503], "tip": 154, "stride_n": [154, 239, 371], "stride_c": [154, 239, 371], "stride_h": [154, 239, 371], "stride_w": [154, 239, 371], "dnnl_dims_t": [154, 170, 200, 218, 226, 236, 264, 270, 276, 277, 278, 288, 290, 318, 348, 358, 367, 456, 496], "dnnl_memory_desc_init_by_strid": 154, "dnnl_memory_desc_create_with_strid": [154, 264, 288], "behalf": 154, "great": 154, "nchw8c": [154, 187], "guess": [154, 360], "offset_nchw8c": 154, "slice": 154, "uppercas": 154, "distinguish": 154, "8c": 154, "co": [154, 214, 215, 216, 217, 223, 224, 231, 233, 238, 239, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 264, 273, 306, 328, 334, 340, 342, 344, 346, 353, 355, 362, 369, 371, 379, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411], "dnnl_memory_desc_create_with_tag": [154, 170, 218, 226, 236, 264, 288, 348, 358, 367], "dnnl_nchw8c": [154, 170, 187], "ptrdiff_t": 154, "inner_nblk": 154, "inner_idx": [154, 199], "1st": [154, 170, 187, 288], "0st": [154, 288], "3rd": [154, 170], "inner_blk": [154, 199], "q_stride": 154, "q_inner_nblk": 154, "q_inner_idx": 154, "q_inner_blk": 154, "dnnl_memory_desc_queri": [154, 264, 288], "dnnl_query_strid": [154, 199, 200, 288], "dnnl_query_inner_nblk": 154, "dnnl_query_inner_idx": [154, 199, 200, 288], "dnnl_query_inner_blk": [154, 199, 200, 288], "memcmp": 154, "dnnl_max_ndim": [154, 264, 277], "tail": 154, "somehow": 154, "came": 154, "div_up": 154, "price": 154, "neglig": [154, 155, 395], "d0": [154, 156], "dnnl_memory_desc_get_s": [154, 264, 288], "phys_siz": 154, "eltwise_op": [154, 270, 504], "block_siz": 154, "c_pad": 154, "expect_stride_n": 154, "expect_stride_c": 154, "expect_stride_h": 154, "expect_stride_w": 154, "expect_stride_8c": 154, "expect_tru": 154, "get_padded_dim": [154, 498], "get_inner_nblk": [154, 498], "get_inner_idx": [154, 498], "get_inner_blk": [154, 498], "stdout": [155, 300], "profile_exec": [155, 395], "onednn_verbose_timestamp": 155, "rel": 155, "gemm_api": 155, "legaci": 155, "dnnl_set_verbos": [155, 264, 300], "face": 155, "insight": 155, "256x256": 155, "25x256": 155, "6afab8e57f65a8995685d97ba6f80fa6c24b87a0": 155, "dnnl_backend": 155, "memory_descriptor": 155, "problem_desc": 155, "exec_tim": 155, "partition_id": 155, "partition_kind": 155, "op_nam": 155, "144": 155, "break": 155, "spent": [155, 360], "tune": [155, 395], "led": 155, "breviti": [155, 230, 360], "src_u8": 155, "f0": [155, 394, 395], "brgemm_matmul": 155, "did": 155, "ic16ih7oc16oh7kh5ph2n": 155, "wip": 155, "1693533460193": 155, "346924": 155, "abcd16b": [155, 187, 395], "abcd16b16a": [155, 187], "bia_f32": 155, "mb2_ic16oc16_ih7oh7kh5sh1dh0ph2_iw7ow7kw5sw1dw0pw2": 155, "709961": 155, "1693533460194": 155, "199951": 155, "0161133": 155, "1693533460228": 155, "559082": 155, "16x16x5x5": 155, "724854": 155, "1693533460229": 155, "437012": 155, "481": 155, "1693533460259": 155, "165039": 155, "blk": 155, "2x16x7x7": 155, "349854": 155, "586914": 155, "604": 155, "1693533460272": 155, "332031": 155, "0358887": 155, "416992": 155, "052002": 155, "561035": 155, "0878906": 155, "1693533460313": 155, "719971": 155, "275146": 155, "1693533460314": 155, "072021": 155, "8389": 155, "__repro": 155, "ic16ih7oc16oh7kh5ph2nwip": 155, "comma": 155, "marker": 155, "millisecond": [155, 219, 395], "unix": 155, "epoch": 155, "cpu2gpu": [155, 237], "gpu2cpu": [155, 237], "tensor_nam": 155, "extra_flag": 155, "synchron": [155, 288, 372, 394, 413, 496], "exit": [155, 241], "wall": 155, "group_norm": [156, 193, 339], "evenli": 156, "mandatori": 156, "primitv": 156, "a0": 156, "a1": 156, "explanatori": [156, 453], "msg": [156, 264], "unavail": 156, "gnorm": 156, "fpmath": [156, 263, 281, 415, 512], "ip": 156, "miscellan": 156, "nest": 156, "pm": 156, "unsuccess": 156, "d1": 156, "onednn_experimental_profil": 156, "exhaust": 156, "dnnl_common": [158, 167, 171, 210, 452, 453, 465, 534], "dnnl_accumulation_mode_strict": [158, 159, 270], "dnnl_accumulation_mode_relax": [158, 159, 270], "dnnl_accumulation_mode_ani": [158, 159, 270], "dnnl_accumulation_mode_s32": [158, 159, 270], "dnnl_accumulation_mode_f32": [158, 159, 270], "dnnl_accumulation_mode_f16": [158, 159, 270], "dnnl_common_typ": [159, 166, 168, 172, 209, 211, 544], "dnnl_alg_kind_undef": [160, 161], "dnnl_convolution_direct": [160, 161, 218, 226, 276, 348, 358], "0x1": [160, 164, 165, 178, 204], "dnnl_convolution_winograd": [160, 161, 276], "0x2": 160, "dnnl_convolution_auto": [160, 161, 276], "0x3": [160, 165], "dnnl_deconvolution_direct": [160, 161, 278], "0xa": 160, "dnnl_deconvolution_winograd": [160, 161, 278], "0xb": 160, "0x20": [160, 178], "0x100": 160, "0x1ff": 160, "0x2ff": 160, "0x3ff": 160, "dnnl_lrn_across_channel": [160, 161, 218, 226, 286, 348, 358], "0xaff": 160, "dnnl_lrn_within_channel": [160, 161, 286], "0xbff": 160, "dnnl_vanilla_rnn": [160, 161], "0x1fff": 160, "dnnl_vanilla_lstm": [160, 161], "0x2fff": 160, "dnnl_vanilla_gru": [160, 161], "0x3fff": 160, "dnnl_lbr_gru": [160, 161], "0x4fff": 160, "dnnl_vanilla_augru": [160, 161], "0x5fff": 160, "dnnl_lbr_augru": [160, 161], "0x6fff": 160, "dnnl_binary_add": [160, 161, 272], "0x1fff0": 160, "dnnl_binary_mul": [160, 161, 272], "0x1fff1": 160, "dnnl_binary_max": [160, 161, 272], "0x1fff2": 160, "dnnl_binary_min": [160, 161, 272], "0x1fff3": 160, "dnnl_binary_div": [160, 161, 272], "0x1fff4": 160, "dnnl_binary_sub": [160, 161, 272], "0x1fff5": 160, "dnnl_binary_g": [160, 161, 272], "0x1fff6": 160, "dnnl_binary_gt": [160, 161, 272], "0x1fff7": 160, "dnnl_binary_l": [160, 161, 272], "0x1fff8": 160, "dnnl_binary_lt": [160, 161, 272], "0x1fff9": 160, "dnnl_binary_eq": [160, 161, 272], "0x1fffa": 160, "dnnl_binary_n": [160, 161, 272], "0x1fffb": 160, "dnnl_resampling_nearest": [160, 161, 298], "0x2fff0": 160, "dnnl_resampling_linear": [160, 161, 298], "0x2fff1": 160, "dnnl_reduction_max": [160, 161, 296, 517], "dnnl_reduction_min": [160, 161, 296, 517], "dnnl_reduction_sum": [160, 161, 296, 517], "dnnl_reduction_mul": [160, 161, 296, 517], "dnnl_reduction_mean": [160, 161, 296, 517], "dnnl_reduction_norm_lp_max": [160, 161, 296, 517], "dnnl_reduction_norm_lp_sum": [160, 161, 296, 517], "dnnl_reduction_norm_lp_power_p_max": [160, 161, 296, 517], "dnnl_reduction_norm_lp_power_p_sum": [160, 161, 296, 517], "dnnl_softmax_accur": [160, 161, 302], "0x30000": 160, "dnnl_softmax_log": [160, 161, 302], "hyperbol": [160, 161], "tangent": [160, 161], "cumul": [160, 395], "gaussian": 160, "modif": 160, "w_c": [160, 161], "x_t": [160, 161], "c_x": [160, 161], "u_c": [160, 161], "c_h": [160, 161], "bias": [160, 256, 406], "augru": [160, 161, 299, 339, 341, 421, 422, 423, 424, 477, 478, 479, 480, 524], "pth": 160, "deconvolution_direct": [161, 444, 446], "deconvolution_winograd": [161, 444, 446], "eltwise_elu": 161, "eltwise_squar": 161, "eltwise_ab": 161, "eltwise_sqrt": 161, "eltwise_swish": 161, "eltwise_soft_relu": 161, "eltwise_mish": 161, "eltwise_logist": [161, 541, 543], "eltwise_exp": 161, "eltwise_gelu_tanh": 161, "eltwise_gelu_erf": 161, "eltwise_log": 161, "eltwise_clip": 161, "eltwise_clip_v2": 161, "eltwise_pow": 161, "eltwise_round": 161, "eltwise_hardswish": 161, "eltwise_hardsigmoid": 161, "eltwise_relu_use_dst_for_bwd": 161, "eltwise_tanh_use_dst_for_bwd": 161, "eltwise_elu_use_dst_for_bwd": 161, "eltwise_sqrt_use_dst_for_bwd": 161, "eltwise_logistic_use_dst_for_bwd": 161, "eltwise_exp_use_dst_for_bwd": 161, "eltwise_clip_v2_use_dst_for_bwd": 161, "lrn_across_channel": [161, 219, 221, 222, 246, 351, 352, 388, 486, 488], "lrn_within_channel": [161, 486, 488], "pooling_avg_include_pad": [161, 500, 502], "pooling_avg_exclude_pad": [161, 500, 502], "vanilla_rnn": 161, "vanilla_lstm": 161, "vanilla_gru": 161, "lbr_gru": 161, "vanilla_augru": 161, "lbr_augru": 161, "binary_mul": [161, 216, 217, 344, 346], "binary_max": 161, "binary_min": 161, "binary_div": [161, 217, 346], "binary_sub": [161, 217, 346], "binary_g": 161, "binary_gt": 161, "binary_l": 161, "binary_lt": 161, "binary_eq": 161, "binary_n": 161, "resampling_nearest": [161, 521, 523], "resampling_linear": [161, 255, 404, 521, 523], "reduction_max": 161, "reduction_min": 161, "reduction_sum": [161, 253, 400], "reduction_mul": 161, "reduction_mean": 161, "reduction_norm_lp_max": 161, "reduction_norm_lp_sum": 161, "reduction_norm_lp_power_p_max": 161, "reduction_norm_lp_power_p_sum": 161, "softmax_accur": [161, 258, 409, 530, 532], "softmax_log": [161, 530, 532], "rectifi": [161, 279, 372, 413], "linar": 161, "vanilla": [161, 299, 540, 541, 542, 543], "lrb": 161, "norm_lp_max": 161, "norm_lp_sum": 161, "norm_lp_power_p_max": 161, "norm_lp_power_p_sum": 161, "isa_default": [162, 300], "dnnl_cpu_isa_default": [162, 165, 300], "dnnl_cpu_isa_sse41": [162, 165], "dnnl_cpu_isa_avx": [162, 165], "dnnl_cpu_isa_avx2": [162, 165], "dnnl_cpu_isa_avx2_vnni": [162, 165], "dnnl_cpu_isa_avx2_vnni_2": [162, 165], "dnnl_cpu_isa_avx512_cor": [162, 165], "dnnl_cpu_isa_avx512_core_vnni": [162, 165], "dnnl_cpu_isa_avx512_core_bf16": [162, 165], "dnnl_cpu_isa_avx10_1_512": [162, 165], "dnnl_cpu_isa_avx512_core_fp16": [162, 165], "dnnl_cpu_isa_avx10_1_512_amx": [162, 165], "dnnl_cpu_isa_avx512_core_amx": [162, 165], "dnnl_cpu_isa_avx10_1_512_amx_fp16": [162, 165], "dnnl_cpu_isa_avx512_core_amx_fp16": [162, 165], "dnnl_cpu_isa_no_hint": [163, 164, 300], "dnnl_cpu_isa_prefer_ymm": [163, 164], "exclus": [163, 164, 288, 496], "0x0": [164, 165, 204], "0x7": 165, "0xf": 165, "0x1f": 165, "0x27": 165, "0x67": 165, "0xe7": 165, "0x1ef": 165, "0xfef": 165, "0x1fef": 165, "dnnl_data_type_undef": [166, 174, 185], "dnnl_f16": [166, 174, 185], "dnnl_bf16": [166, 174, 185], "dnnl_s32": [166, 174, 185], "dnnl_u8": [166, 174, 185], "dnnl_f64": [166, 185], "dnnl_boolean": [166, 174], "dnnl_f8_e5m2": [166, 174, 185], "dnnl_f8_e4m3": [166, 174, 185], "dnnl_s4": [166, 185], "dnnl_u4": [166, 185], "dnnl_data_type_max": 166, "0x7fff": [166, 169, 194, 200], "dnnl_any_engin": [167, 168], "dnnl_cpu": [167, 168, 226, 236, 358, 367], "dnnl_gpu": [167, 168, 236, 367], "dnnl_format_kind_undef": [169, 186, 276, 278, 283, 285, 287], "dnnl_format_kind_ani": [169, 186, 272, 276, 278, 283, 288, 291, 296, 298, 299], "dnnl_format_kind_spars": [169, 186], "dnnl_format_kind_max": 169, "dnnl_format_tag_undef": [170, 187], "dnnl_abcdef": [170, 187], "dnnl_abcdefg": [170, 187], "dnnl_abcdefgh": [170, 187], "dnnl_abcdefghi": [170, 187], "dnnl_abcdefghij": [170, 187], "dnnl_abcdefghijk": [170, 187], "dnnl_abcdefghijkl": [170, 187], "dnnl_ba": [170, 187, 288], "dnnl_bca": [170, 187], "dnnl_cab": [170, 187], "dnnl_cba": [170, 187], "dnnl_abdc": [170, 187], "dnnl_acbd": [170, 187], "dnnl_adbc": [170, 187], "dnnl_adcb": [170, 187], "dnnl_bacd": [170, 187], "dnnl_bcda": [170, 187], "dnnl_cdab": [170, 187], "dnnl_cdba": [170, 187], "dnnl_dcab": [170, 187], "dnnl_abdec": [170, 187], "dnnl_adecb": [170, 187], "dnnl_bcdea": [170, 187], "dnnl_cdeab": [170, 187], "dnnl_cdeba": [170, 187], "dnnl_decab": [170, 187], "dnnl_abcdf": [170, 187], "dnnl_abdefc": [170, 187], "dnnl_abdfc": [170, 187], "dnnl_acbdef": [170, 187], "dnnl_adefcb": [170, 187], "dnnl_defcab": [170, 187], "dnnl_abcdegf": [170, 187], "dnnl_abcdefhg": [170, 187], "dnnl_abcdefgih": [170, 187], "dnnl_abcdefghji": [170, 187], "dnnl_abcdefghikj": [170, 187], "dnnl_abcdefghijlk": [170, 187], "dnnl_abc16a": [170, 187], "dnnl_abc16a16b": [170, 187], "dnnl_abc32a32b": [170, 187], "dnnl_abc4a4b": [170, 187], "dnnl_abc16b": [170, 187], "dnnl_abc16b16a": [170, 187], "dnnl_abc4a": [170, 187], "dnnl_abc32b": [170, 187], "dnnl_abc4b": [170, 187], "dnnl_abc4b16a4b": [170, 187], "dnnl_abc2b8a4b": [170, 187], "dnnl_abc16b16a4b": [170, 187], "dnnl_abc16b16a2b": [170, 187], "dnnl_abc4b4a": [170, 187], "dnnl_abc8a16b2a": [170, 187], "dnnl_abc8a8b": [170, 187], "dnnl_abc8a4b": [170, 187], "dnnl_abc8b": [170, 187], "dnnl_abc8b16a2b": [170, 187], "dnnl_bac8a16b2a": [170, 187], "dnnl_abc8b8a": [170, 187], "dnnl_abcd16a": [170, 187], "dnnl_abcd8a": [170, 187], "dnnl_abcd16a16b": [170, 187], "dnnl_abcd32a": [170, 187], "dnnl_abcd32a32b": [170, 187], "dnnl_abcd16b": [170, 187], "dnnl_abcd16b16a": [170, 187], "dnnl_abcd16b16c": [170, 187], "dnnl_abcd16c16b": [170, 187], "dnnl_abcd4a": [170, 187], "dnnl_abcd32b": [170, 187], "dnnl_abcd4b": [170, 187], "dnnl_abcd4b16a4b": [170, 187], "dnnl_abcd16b16a4b": [170, 187], "dnnl_abcd16b16a2b": [170, 187], "dnnl_abcd4b4a": [170, 187], "dnnl_abcd4a4b": [170, 187], "dnnl_abcd2c4b2c": [170, 187], "dnnl_abcd4b8c2b": [170, 187], "dnnl_abcd4c16b4c": [170, 187], "dnnl_abcd2c8b4c": [170, 187], "dnnl_abcd16c16b4c": [170, 187], "dnnl_abcd16c16b2c": [170, 187], "dnnl_abcd4c4b": [170, 187], "dnnl_abcd4b4c": [170, 187], "dnnl_abcd8a16b2a": [170, 187], "dnnl_abcd2b8a4b": [170, 187], "dnnl_abcd8a8b": [170, 187], "dnnl_abcd8a4b": [170, 187], "dnnl_abcd8b": [170, 187], "dnnl_abcd4c8b2c": [170, 187], "dnnl_abcd8b16a2b": [170, 187], "dnnl_abcd8b16c2b": [170, 187], "dnnl_bacd8a16b2a": [170, 187], "dnnl_abcd8b8a": [170, 187], "dnnl_abcd8b8c": [170, 187], "dnnl_abcd8b4c": [170, 187], "dnnl_abcd8c16b2c": [170, 187], "dnnl_abcde8a16b2a": [170, 187], "dnnl_acbd8b16c2b": [170, 187], "dnnl_abcd8c8b": [170, 187], "dnnl_abcde16a": [170, 187], "dnnl_abcde32a": [170, 187], "dnnl_abcde16a16b": [170, 187], "dnnl_bacde8a16b2a": [170, 187], "dnnl_abcd2b4c2b": [170, 187], "dnnl_abcde4b16a4b": [170, 187], "dnnl_abcde2b8a4b": [170, 187], "dnnl_abcde16b": [170, 187], "dnnl_abcde16b16a": [170, 187], "dnnl_abcde16b16c": [170, 187], "dnnl_abcde16c16b": [170, 187], "dnnl_abcde2c8b4c": [170, 187], "dnnl_abcde4a": [170, 187], "dnnl_abcde32b": [170, 187], "dnnl_abcde4b": [170, 187], "dnnl_abcde4b4a": [170, 187], "dnnl_abcde4a4b": [170, 187], "dnnl_abcde4b4c": [170, 187], "dnnl_abcde2c4b2c": [170, 187], "dnnl_abcde4b8c2b": [170, 187], "dnnl_abcde4c16b4c": [170, 187], "dnnl_abcde16c16b4c": [170, 187], "dnnl_abcde16c16b2c": [170, 187], "dnnl_abcde4c4b": [170, 187], "dnnl_abcde8a": [170, 187], "dnnl_abcde8a8b": [170, 187], "dnnl_abcde8a4b": [170, 187], "dnnl_bacde16b16a": [170, 187], "dnnl_abcde8b": [170, 187], "dnnl_abcde8b16a2b": [170, 187], "dnnl_abcde8b16c2b": [170, 187], "dnnl_abcde4c8b2c": [170, 187], "dnnl_acbde8b16c2b": [170, 187], "dnnl_abcde8b8a": [170, 187], "dnnl_abcde32a32b": [170, 187], "dnnl_abcde8b8c": [170, 187], "dnnl_abcde8b4c": [170, 187], "dnnl_abc4a8b8a4b": [170, 187], "dnnl_abcd4a8b8a4b": [170, 187], "dnnl_abcde4a8b8a4b": [170, 187], "dnnl_bac4b8a8b4a": [170, 187], "dnnl_bacd4b8a8b4a": [170, 187], "dnnl_bacde4b8a8b4a": [170, 187], "dnnl_abcd2a8b8a2b": [170, 187], "dnnl_abcd4b8c8b4c": [170, 187], "dnnl_abcde4b8c8b4c": [170, 187], "dnnl_abcde2b8c8b2c": [170, 187], "dnnl_abcde8c16b2c": [170, 187], "dnnl_abcde8c8b": [170, 187], "dnnl_abcde2b4c2b": [170, 187], "dnnl_abcdef16b": [170, 187], "dnnl_abcdef16b16c": [170, 187], "dnnl_abcdef16c16b": [170, 187], "dnnl_abcdef4c16b4c": [170, 187], "dnnl_abcdef2c8b4c": [170, 187], "dnnl_abcdef4c8b2c": [170, 187], "dnnl_abcdef2b4c2b": [170, 187], "dnnl_abcdef4b": [170, 187], "dnnl_abcdef4c4b": [170, 187], "dnnl_abcdef4b4c": [170, 187], "dnnl_abcdef2c4b2c": [170, 187], "dnnl_abcdef4b8c2b": [170, 187], "dnnl_abcdef8b8c": [170, 187], "dnnl_abcdef8b4c": [170, 187], "dnnl_abcdef8c16b2c": [170, 187], "dnnl_abcdef4b8c8b4c": [170, 187], "dnnl_abcdef8b16c2b": [170, 187], "dnnl_acbdef8b16c2b": [170, 187], "dnnl_abcdef8c8b": [170, 187], "dnnl_abdc16b": [170, 187], "dnnl_abdc16b2c": [170, 187], "dnnl_abdc16b4c": [170, 187], "dnnl_abdc4b": [170, 187], "dnnl_abdc8b": [170, 187], "dnnl_abdec16b": [170, 187], "dnnl_abdec16b2c": [170, 187], "dnnl_abdec16b4c": [170, 187], "dnnl_abdec32b": [170, 187], "dnnl_abdec4b": [170, 187], "dnnl_abdec8b": [170, 187], "dnnl_abdefc16b": [170, 187], "dnnl_abdefc16b2c": [170, 187], "dnnl_acbdef16c16b": [170, 187], "dnnl_abdefc4b": [170, 187], "dnnl_abdefc8b": [170, 187], "dnnl_abcdef16a": [170, 187], "dnnl_abcdef32a": [170, 187], "dnnl_abedc16b": [170, 187], "dnnl_acb16a": [170, 187], "dnnl_acb16a2b": [170, 187], "dnnl_acb16a4b": [170, 187], "dnnl_acb4a": [170, 187], "dnnl_acb8a": [170, 187], "dnnl_acbd16b16c": [170, 187], "dnnl_acbd16c16b": [170, 187], "dnnl_acbde16b16c": [170, 187], "dnnl_acbde16c16b": [170, 187], "dnnl_acdb16a": [170, 187], "dnnl_acdb16a2b": [170, 187], "dnnl_acdb16a4b": [170, 187], "dnnl_acdb32a": [170, 187], "dnnl_acdb4a": [170, 187], "dnnl_acdb8a": [170, 187], "dnnl_acdeb16a": [170, 187], "dnnl_acdeb16a2b": [170, 187], "dnnl_acdeb4a": [170, 187], "dnnl_acdeb8a": [170, 187], "dnnl_adcb16a": [170, 187], "dnnl_bac16a16b": [170, 187], "dnnl_bac16b16a": [170, 187], "dnnl_bacd16a16b": [170, 187], "dnnl_bacd16b16a": [170, 187], "dnnl_acbd4c8b8c4b": [170, 187], "dnnl_acbde4c8b8c4b": [170, 187], "dnnl_acbdef4c8b8c4b": [170, 187], "dnnl_bacde16a16b": [170, 187], "dnnl_acbdef16b16c": [170, 187], "dnnl_abc16b32a": [170, 187], "dnnl_abc16b64a": [170, 187], "dnnl_abc4b32a4b": [170, 187], "dnnl_abc4b64a4b": [170, 187], "dnnl_abc8b32a2b": [170, 187], "dnnl_abc8b64a2b": [170, 187], "dnnl_ab16b16a": [170, 187], "dnnl_ab16b32a": [170, 187], "dnnl_ab16b64a": [170, 187], "dnnl_ab8b16a2b": [170, 187], "dnnl_ab8b32a2b": [170, 187], "dnnl_ab8b64a2b": [170, 187], "dnnl_ab4b16a4b": [170, 187], "dnnl_ab4b32a4b": [170, 187], "dnnl_ab4b64a4b": [170, 187], "dnnl_ab16b16a4b": [170, 187], "dnnl_abcd16b32a": [170, 187], "dnnl_abcd16b64a": [170, 187], "dnnl_abcd4b32a4b": [170, 187], "dnnl_abcd4b64a4b": [170, 187], "dnnl_abcd8b32a2b": [170, 187], "dnnl_abcd8b64a2b": [170, 187], "dnnl_abcde4b32a4b": [170, 187], "dnnl_abcde4b64a4b": [170, 187], "dnnl_abcde16b16a4b": [170, 187], "dnnl_abcde16b16a2b": [170, 187], "dnnl_abcde16b32a": [170, 187], "dnnl_abcde16b64a": [170, 187], "dnnl_abcde8b32a2b": [170, 187], "dnnl_abcde8b64a2b": [170, 187], "dnnl_abcdef16c16b4c": [170, 187], "dnnl_abcdef16c16b2c": [170, 187], "dnnl_ab32a32b8a4b": [170, 187], "dnnl_ab8a4b": [170, 187], "dnnl_ab32a32b8a2b": [170, 187], "dnnl_ab8a2b": [170, 187], "dnnl_abdc32d": [170, 187], "dnnl_abdc32d4c": [170, 187], "dnnl_abdec32": [170, 187], "dnnl_abdec32e2c": [170, 187], "dnnl_abdec32e4c": [170, 187], "dnnl_abdefc16b4c": [170, 187], "dnnl_acdeb16a4b": [170, 187], "dnnl_abcd16a16b2a": [170, 187], "dnnl_abc16a16b2a": [170, 187], "dnnl_abcd16b16c2b": [170, 187], "dnnl_abcde16b16c2b": [170, 187], "dnnl_acb32a": [170, 187], "dnnl_acb32a2b": [170, 187], "dnnl_acb32a4b": [170, 187], "dnnl_acb48a": [170, 187], "dnnl_acb48a2b": [170, 187], "dnnl_acb48a4b": [170, 187], "dnnl_acb64a": [170, 187], "dnnl_acb64a2b": [170, 187], "dnnl_acb64a4b": [170, 187], "dnnl_cba2b": [170, 187], "dnnl_cba4b": [170, 187], "dnnl_abdc32b": [170, 187], "dnnl_abdc32b2c": [170, 187], "dnnl_abdc32b4c": [170, 187], "dnnl_abdc48b": [170, 187], "dnnl_abdc48b2c": [170, 187], "dnnl_abdc48b4c": [170, 187], "dnnl_abdc64b": [170, 187], "dnnl_abdc64b2c": [170, 187], "dnnl_abdc64b4c": [170, 187], "dnnl_adcb2c": [170, 187], "dnnl_adcb4c": [170, 187], "dnnl_acdb32a2b": [170, 187], "dnnl_acdb32a4b": [170, 187], "dnnl_acdb48a": [170, 187], "dnnl_acdb48a2b": [170, 187], "dnnl_acdb48a4b": [170, 187], "dnnl_acdb64a": [170, 187], "dnnl_acdb64a2b": [170, 187], "dnnl_acdb64a4b": [170, 187], "dnnl_cdba2b": [170, 187], "dnnl_cdba4b": [170, 187], "dnnl_abdec32b2c": [170, 187], "dnnl_abdec32b4c": [170, 187], "dnnl_abdec48b": [170, 187], "dnnl_abdec48b2c": [170, 187], "dnnl_abdec48b4c": [170, 187], "dnnl_abdec64b": [170, 187], "dnnl_abdec64b2c": [170, 187], "dnnl_abdec64b4c": [170, 187], "dnnl_adecb2c": [170, 187], "dnnl_adecb4c": [170, 187], "dnnl_acdeb32a": [170, 187], "dnnl_acdeb32a2b": [170, 187], "dnnl_acdeb32a4b": [170, 187], "dnnl_acdeb48a": [170, 187], "dnnl_acdeb48a2b": [170, 187], "dnnl_acdeb48a4b": [170, 187], "dnnl_acdeb64a": [170, 187], "dnnl_acdeb64a2b": [170, 187], "dnnl_acdeb64a4b": [170, 187], "dnnl_cdeba2b": [170, 187], "dnnl_cdeba4b": [170, 187], "dnnl_abdefc32b": [170, 187], "dnnl_abdefc32b2c": [170, 187], "dnnl_abdefc32b4c": [170, 187], "dnnl_abdefc48b": [170, 187], "dnnl_abdefc48b2c": [170, 187], "dnnl_abdefc48b4c": [170, 187], "dnnl_abdefc64b": [170, 187], "dnnl_abdefc64b2c": [170, 187], "dnnl_abdefc64b4c": [170, 187], "dnnl_adefcb2c": [170, 187], "dnnl_adefcb4c": [170, 187], "dnnl_ab16b32a4b": [170, 187], "dnnl_ab16b48a4b": [170, 187], "dnnl_ab16b64a4b": [170, 187], "dnnl_ab16b16a2b": [170, 187], "dnnl_ab16b32a2b": [170, 187], "dnnl_ab16b48a2b": [170, 187], "dnnl_ab16b64a2b": [170, 187], "dnnl_abc16b32a4b": [170, 187], "dnnl_abc16b48a4b": [170, 187], "dnnl_abc16b64a4b": [170, 187], "dnnl_abc16b32a2b": [170, 187], "dnnl_abc16b48a2b": [170, 187], "dnnl_abc16b64a2b": [170, 187], "dnnl_abcd16b32a4b": [170, 187], "dnnl_abcd16b48a4b": [170, 187], "dnnl_abcd16b64a4b": [170, 187], "dnnl_abcd16b32a2b": [170, 187], "dnnl_abcd16b48a2b": [170, 187], "dnnl_abcd16b64a2b": [170, 187], "dnnl_abcde16b32a4b": [170, 187], "dnnl_abcde16b48a4b": [170, 187], "dnnl_abcde16b64a4b": [170, 187], "dnnl_abcde16b32a2b": [170, 187], "dnnl_abcde16b48a2b": [170, 187], "dnnl_abcde16b64a2b": [170, 187], "dnnl_abc32a16b": [170, 187], "dnnl_abcd32a16b": [170, 187], "dnnl_abcde32a16b": [170, 187], "dnnl_ab48a16b": [170, 187], "dnnl_ab48a32b": [170, 187], "dnnl_abc40a16b": [170, 187], "dnnl_abc40a32b": [170, 187], "dnnl_abc48b16c": [170, 187], "dnnl_abc48b32c": [170, 187], "dnnl_abcd40a16b": [170, 187], "dnnl_abcd40a32b": [170, 187], "dnnl_abcd32c": [170, 187], "dnnl_abdce32c": [170, 187], "dnnl_abdce32c2": [170, 187], "dnnl_ba16a16b2a": [170, 187], "dnnl_ba16a32b2a": [170, 187], "dnnl_ba16a48b2a": [170, 187], "dnnl_ba16a64b2a": [170, 187], "dnnl_ba16a16b4a": [170, 187], "dnnl_ba16a32b4a": [170, 187], "dnnl_ba16a48b4a": [170, 187], "dnnl_ba16a64b4a": [170, 187], "dnnl_abcd8a2b": [170, 187], "dnnl_abdec16c16b2c": [170, 187], "dnnl_abdec16c16b4c": [170, 187], "dnnl_abdefc16c16b2c": [170, 187], "dnnl_acb16b16a2b": [170, 187], "dnnl_acb16b16a4b": [170, 187], "dnnl_acdb16b16a2b": [170, 187], "dnnl_acdb16b16a4b": [170, 187], "dnnl_acdeb16b16a2b": [170, 187], "dnnl_abdefc16c16b4c": [170, 187], "dnnl_acdeb16b16a4b": [170, 187], "dnnl_acb16b32a2b": [170, 187], "dnnl_acb16b32a4b": [170, 187], "dnnl_acb16b48a2b": [170, 187], "dnnl_acb16b48a4b": [170, 187], "dnnl_acb16b64a2b": [170, 187], "dnnl_acb16b64a4b": [170, 187], "dnnl_abdc16c16b2c": [170, 187], "dnnl_abdc16c16b4c": [170, 187], "dnnl_abdc16c32b2c": [170, 187], "dnnl_abdc16c32b4c": [170, 187], "dnnl_abdc16c48b2c": [170, 187], "dnnl_abdc16c48b4c": [170, 187], "dnnl_abdc16c64b2c": [170, 187], "dnnl_abdc16c64b4c": [170, 187], "dnnl_acdb16b32a2b": [170, 187], "dnnl_acdb16b32a4b": [170, 187], "dnnl_acdb16b48a2b": [170, 187], "dnnl_acdb16b48a4b": [170, 187], "dnnl_acdb16b64a2b": [170, 187], "dnnl_acdb16b64a4b": [170, 187], "dnnl_abdec16c32b2c": [170, 187], "dnnl_abdec16c32b4c": [170, 187], "dnnl_abdec16c48b2c": [170, 187], "dnnl_abdec16c48b4c": [170, 187], "dnnl_abdec16c64b2c": [170, 187], "dnnl_abdec16c64b4c": [170, 187], "dnnl_acdeb16b32a2b": [170, 187], "dnnl_acdeb16b32a4b": [170, 187], "dnnl_acdeb16b48a2b": [170, 187], "dnnl_acdeb16b48a4b": [170, 187], "dnnl_acdeb16b64a2b": [170, 187], "dnnl_acdeb16b64a4b": [170, 187], "dnnl_abdefc16c32b2c": [170, 187], "dnnl_abdefc16c32b4c": [170, 187], "dnnl_abdefc16c48b2c": [170, 187], "dnnl_abdefc16c48b4c": [170, 187], "dnnl_abdefc16c64b2c": [170, 187], "dnnl_abdefc16c64b4c": [170, 187], "dnnl_decba16a": [170, 187], "dnnl_abc4a2b": [170, 187], "dnnl_abc8a2b": [170, 187], "dnnl_abcd8b2c": [170, 187], "dnnl_abcde4a2b": [170, 187], "dnnl_abcde8a2b": [170, 187], "dnnl_abcde40a16b": [170, 187], "dnnl_abcde40a32b": [170, 187], "dnnl_abcde8b2c": [170, 187], "dnnl_abcde4a8b8a2b": [170, 187], "dnnl_abcd4a8b8a2b": [170, 187], "dnnl_abc4a8b8a2b": [170, 187], "dnnl_abcdef4b8c8b2c": [170, 187], "dnnl_abcde4b8c8b2c": [170, 187], "dnnl_abcd4b8c8b2c": [170, 187], "dnnl_bacde4b8a8b2a": [170, 187], "dnnl_bacd4b8a8b2a": [170, 187], "dnnl_bac4b8a8b2a": [170, 187], "dnnl_acbdef4c8b8c2b": [170, 187], "dnnl_acbde4c8b8c2b": [170, 187], "dnnl_acbd4c8b8c2b": [170, 187], "dnnl_abcdef8b2c": [170, 187], "dnnl_ab32a16b": [170, 187], "dnnl_ab32a32b": [170, 187], "dnnl_ba4b8a8b2a": [170, 187], "dnnl_ba4b8a8b4a": [170, 187], "dnnl_abc32b16c": [170, 187], "dnnl_abc32b32c": [170, 187], "dnnl_acb4c8b8c2b": [170, 187], "dnnl_acb4c8b8c4b": [170, 187], "dnnl_abcd4a2b": [170, 187], "dnnl_abc2b8a16b4a": [170, 187], "dnnl_abcd2b8a16b4a": [170, 187], "dnnl_abcde2b8a16b4a": [170, 187], "dnnl_abc2a8b16a4b": [170, 187], "dnnl_abc2a8b16a2b": [170, 187], "dnnl_abc2b32a8b": [170, 187], "dnnl_abcd2a8b16a4b": [170, 187], "dnnl_abcd2a8b16a2b": [170, 187], "dnnl_acbd2c8b16c2b": [170, 187], "dnnl_abcd2b32a8b": [170, 187], "dnnl_abcd2c8b16c2b": [170, 187], "dnnl_abcde2a8b16a4b": [170, 187], "dnnl_abcde2a8b16a2b": [170, 187], "dnnl_acbde2c8b16c2b": [170, 187], "dnnl_abcde2b32a8b": [170, 187], "dnnl_abc2b8c16b2c": [170, 187], "dnnl_abcd2b8c16b2c": [170, 187], "dnnl_abcde2b8c16b2c": [170, 187], "dnnl_abcdef2b8c16b2c": [170, 187], "dnnl_bacde2b8a16b4a": [170, 187], "dnnl_bacd2b8a16b4a": [170, 187], "dnnl_bac2b8a16b4a": [170, 187], "dnnl_bacde2b8a16b2a": [170, 187], "dnnl_bacd2b8a16b2a": [170, 187], "dnnl_bac2b8a16b2a": [170, 187], "dnnl_abcde2c8b16c2b": [170, 187], "dnnl_abcdef2c8b16c2b": [170, 187], "dnnl_acbdef2c8b16c2b": [170, 187], "dnnl_abcd2b8c16b4c": [170, 187], "dnnl_abcde2b8c16b4c": [170, 187], "dnnl_ba4b8a16b2a": [170, 187], "dnnl_ba4b8a16b4a": [170, 187], "dnnl_acb4c8b16c2b": [170, 187], "dnnl_acb4c8b16c4b": [170, 187], "dnnl_ba16a16b": [170, 187], "dnnl_ba16a32b": [170, 187], "dnnl_ba16a48b": [170, 187], "dnnl_ba16a64b": [170, 187], "dnnl_acb16c2b": [170, 187], "dnnl_acb16c4b": [170, 187], "dnnl_ba16b2a": [170, 187], "dnnl_ba16b4a": [170, 187], "dnnl_abc16b16c": [170, 187], "dnnl_abc16b32c": [170, 187], "dnnl_ab16a16b": [170, 187], "dnnl_ab16a32b": [170, 187], "dnnl_abcde16a16b2a": [170, 187], "dnnl_abcdef16b16c2b": [170, 187], "dnnl_acedb16a": [170, 187], "dnnl_abdfec16b": [170, 187], "dnnl_abdec64e2c": [170, 187], "dnnl_abdec64e4c": [170, 187], "dnnl_acb16b16c": [170, 187], "dnnl_acb16b32c": [170, 187], "dnnl_acb16b48c": [170, 187], "dnnl_acb16b64c": [170, 187], "dnnl_acb16b16c2b": [170, 187], "dnnl_acb16b32c2b": [170, 187], "dnnl_acb16b48c2b": [170, 187], "dnnl_acb16b64c2b": [170, 187], "dnnl_acb16b16c4b": [170, 187], "dnnl_acb16b32c4b": [170, 187], "dnnl_acb16b48c4b": [170, 187], "dnnl_acb16b64c4b": [170, 187], "dnnl_abcd4c": [170, 187], "dnnl_abcde4c": [170, 187], "dnnl_abcdef4c": [170, 187], "dnnl_abcde32c": [170, 187], "dnnl_abcdef32c": [170, 187], "dnnl_abcd16a32b": [170, 187], "dnnl_decba8a": [170, 187], "dnnl_acdefb16b32c2b": [170, 187], "dnnl_acdefb16b32c4b": [170, 187], "dnnl_acdefb16b48c2b": [170, 187], "dnnl_acdefb16b48c4b": [170, 187], "dnnl_acdefb16b64c2b": [170, 187], "dnnl_acdefb16b64c4b": [170, 187], "dnnl_bcdea16a32b2a": [170, 187], "dnnl_bcdea16a32b4a": [170, 187], "dnnl_bcdea16a48b2a": [170, 187], "dnnl_bcdea16a48b4a": [170, 187], "dnnl_bcdea16a64b2a": [170, 187], "dnnl_bcdea16a64b4a": [170, 187], "dnnl_acdefb32c": [170, 187], "dnnl_acdefb32c2b": [170, 187], "dnnl_acdefb32c4b": [170, 187], "dnnl_acdefb48c": [170, 187], "dnnl_acdefb48c2b": [170, 187], "dnnl_acdefb48c4b": [170, 187], "dnnl_acdefb64c": [170, 187], "dnnl_acdefb64c2b": [170, 187], "dnnl_acdefb64c4b": [170, 187], "dnnl_bcdea32b": [170, 187], "dnnl_bcdea32b2a": [170, 187], "dnnl_bcdea32b4a": [170, 187], "dnnl_bcdea48b": [170, 187], "dnnl_bcdea48b2a": [170, 187], "dnnl_bcdea48b4a": [170, 187], "dnnl_bcdea64b": [170, 187], "dnnl_bcdea64b2a": [170, 187], "dnnl_bcdea64b4a": [170, 187], "dnnl_bca32b": [170, 187], "dnnl_bca32b2a": [170, 187], "dnnl_bca32b4a": [170, 187], "dnnl_bca48b": [170, 187], "dnnl_bca48b2a": [170, 187], "dnnl_bca48b4a": [170, 187], "dnnl_bca64b": [170, 187], "dnnl_bca64b2a": [170, 187], "dnnl_bca64b4a": [170, 187], "dnnl_acdb32c": [170, 187], "dnnl_acdb32c2b": [170, 187], "dnnl_acdb32c4b": [170, 187], "dnnl_acdb48c": [170, 187], "dnnl_acdb48c2b": [170, 187], "dnnl_acdb48c4b": [170, 187], "dnnl_acdb64c": [170, 187], "dnnl_acdb64c2b": [170, 187], "dnnl_acdb64c4b": [170, 187], "dnnl_bca16a16b2a": [170, 187], "dnnl_bca16a16b4a": [170, 187], "dnnl_bcda16a16b2a": [170, 187], "dnnl_bcda16a16b4a": [170, 187], "dnnl_bcdea16a16b2a": [170, 187], "dnnl_bcdea16a16b4a": [170, 187], "dnnl_acdb16b16c2b": [170, 187], "dnnl_acdb16b16c4b": [170, 187], "dnnl_acdeb16b16c2b": [170, 187], "dnnl_acdeb16b16c4b": [170, 187], "dnnl_acdefb16b16c2b": [170, 187], "dnnl_acdefb16b16c4b": [170, 187], "dnnl_bca16a32b2a": [170, 187], "dnnl_bca16a32b4a": [170, 187], "dnnl_bca16a48b2a": [170, 187], "dnnl_bca16a48b4a": [170, 187], "dnnl_bca16a64b2a": [170, 187], "dnnl_bca16a64b4a": [170, 187], "dnnl_acdb16b32c2b": [170, 187], "dnnl_acdb16b32c4b": [170, 187], "dnnl_acdb16b48c2b": [170, 187], "dnnl_acdb16b48c4b": [170, 187], "dnnl_acdb16b64c2b": [170, 187], "dnnl_acdb16b64c4b": [170, 187], "dnnl_bcda16a32b2a": [170, 187], "dnnl_bcda16a32b4a": [170, 187], "dnnl_bcda16a48b2a": [170, 187], "dnnl_bcda16a48b4a": [170, 187], "dnnl_bcda16a64b2a": [170, 187], "dnnl_bcda16a64b4a": [170, 187], "dnnl_acdeb16b32c2b": [170, 187], "dnnl_acdeb16b32c4b": [170, 187], "dnnl_acdeb16b48c2b": [170, 187], "dnnl_acdeb16b48c4b": [170, 187], "dnnl_acdeb16b64c2b": [170, 187], "dnnl_acdeb16b64c4b": [170, 187], "dnnl_bca16b": [170, 187], "dnnl_bca16b2a": [170, 187], "dnnl_bca16b4a": [170, 187], "dnnl_bcda16b": [170, 187], "dnnl_bcda16b2a": [170, 187], "dnnl_bcda16b4a": [170, 187], "dnnl_bcdea16b": [170, 187], "dnnl_bcdea16b2a": [170, 187], "dnnl_bcdea16b4a": [170, 187], "dnnl_acdb16c": [170, 187], "dnnl_acdb16c2b": [170, 187], "dnnl_acdb16c4b": [170, 187], "dnnl_acdeb16c": [170, 187], "dnnl_acdeb16c2b": [170, 187], "dnnl_acdeb16c4b": [170, 187], "dnnl_acdefb16c": [170, 187], "dnnl_acdefb16c2b": [170, 187], "dnnl_acdefb16c4b": [170, 187], "dnnl_bcda32b": [170, 187], "dnnl_bcda32b2a": [170, 187], "dnnl_bcda32b4a": [170, 187], "dnnl_bcda48b": [170, 187], "dnnl_bcda48b2a": [170, 187], "dnnl_bcda48b4a": [170, 187], "dnnl_bcda64b": [170, 187], "dnnl_bcda64b2a": [170, 187], "dnnl_bcda64b4a": [170, 187], "dnnl_acdeb32c": [170, 187], "dnnl_acdeb32c2b": [170, 187], "dnnl_acdeb32c4b": [170, 187], "dnnl_acdeb48c": [170, 187], "dnnl_acdeb48c2b": [170, 187], "dnnl_acdeb48c4b": [170, 187], "dnnl_acdeb64c": [170, 187], "dnnl_acdeb64c2b": [170, 187], "dnnl_acdeb64c4b": [170, 187], "dnnl_acb24a": [170, 187], "dnnl_acdb24a": [170, 187], "dnnl_acdeb24a": [170, 187], "dnnl_abdc24b": [170, 187], "dnnl_abdec24b": [170, 187], "dnnl_abdefc24b": [170, 187], "dnnl_abdc16d": [170, 187], "dnnl_abdec16": [170, 187], "dnnl_abdce16c": [170, 187], "dnnl_acb24a2b": [170, 187], "dnnl_acdb24a2b": [170, 187], "dnnl_acdeb24a2b": [170, 187], "dnnl_abdc24b2c": [170, 187], "dnnl_abdec24b2c": [170, 187], "dnnl_abdefc24b2c": [170, 187], "dnnl_acb8a2b": [170, 187], "dnnl_acdb8a2b": [170, 187], "dnnl_acdeb8a2b": [170, 187], "dnnl_abdc8b2c": [170, 187], "dnnl_abdec8b2c": [170, 187], "dnnl_abdefc8b2c": [170, 187], "dnnl_ab8b32a": [170, 187], "dnnl_abc8b32a": [170, 187], "dnnl_abcd8b32a": [170, 187], "dnnl_abcde8b32a": [170, 187], "dnnl_ab8b24a": [170, 187], "dnnl_abc8b24a": [170, 187], "dnnl_abcd8b24a": [170, 187], "dnnl_abcde8b24a": [170, 187], "dnnl_ab8b16a": [170, 187], "dnnl_abc8b16a": [170, 187], "dnnl_abcd8b16a": [170, 187], "dnnl_abcde8b16a": [170, 187], "dnnl_ab8b8a": [170, 187], "dnnl_ab4b8a4b": [170, 187], "dnnl_ab4b24a4b": [170, 187], "dnnl_abc4b8a4b": [170, 187], "dnnl_abc4b24a4b": [170, 187], "dnnl_abcd4b8a4b": [170, 187], "dnnl_abcd4b24a4b": [170, 187], "dnnl_abcde4b8a4b": [170, 187], "dnnl_abcde4b24a4b": [170, 187], "dnnl_ab8b24a2b": [170, 187], "dnnl_abc8b24a2b": [170, 187], "dnnl_abcd8b24a2b": [170, 187], "dnnl_abcde8b24a2b": [170, 187], "dnnl_ab8b8a2b": [170, 187], "dnnl_abc8b8a2b": [170, 187], "dnnl_abcd8b8a2b": [170, 187], "dnnl_abcde8b8a2b": [170, 187], "dnnl_acb24a4b": [170, 187], "dnnl_acdb24a4b": [170, 187], "dnnl_acdeb24a4b": [170, 187], "dnnl_abdc24b4c": [170, 187], "dnnl_abdec24b4c": [170, 187], "dnnl_abdefc24b4c": [170, 187], "dnnl_acb8a4b": [170, 187], "dnnl_acdb8a4b": [170, 187], "dnnl_acdeb8a4b": [170, 187], "dnnl_abdc8b4c": [170, 187], "dnnl_abdec8b4c": [170, 187], "dnnl_abdefc8b4c": [170, 187], "dnnl_bca8b": [170, 187], "dnnl_bca8b2a": [170, 187], "dnnl_bcda8b": [170, 187], "dnnl_bcda8b2a": [170, 187], "dnnl_bcdea8b": [170, 187], "dnnl_bcdea8b2a": [170, 187], "dnnl_acdb8c": [170, 187], "dnnl_acdb8c2b": [170, 187], "dnnl_acdeb8c": [170, 187], "dnnl_acdeb8c2b": [170, 187], "dnnl_acdefb8c": [170, 187], "dnnl_acdefb8c2b": [170, 187], "dnnl_bca24b": [170, 187], "dnnl_bca24b2a": [170, 187], "dnnl_bcda24b": [170, 187], "dnnl_bcda24b2a": [170, 187], "dnnl_bcdea24b": [170, 187], "dnnl_bcdea24b2a": [170, 187], "dnnl_acdb24c": [170, 187], "dnnl_acdb24c2b": [170, 187], "dnnl_acdeb24c": [170, 187], "dnnl_acdeb24c2b": [170, 187], "dnnl_acdefb24c": [170, 187], "dnnl_acdefb24c2b": [170, 187], "dnnl_bca8b4a": [170, 187], "dnnl_bcda8b4a": [170, 187], "dnnl_bcdea8b4a": [170, 187], "dnnl_acdb8c4b": [170, 187], "dnnl_acdeb8c4b": [170, 187], "dnnl_acdefb8c4b": [170, 187], "dnnl_bca24b4a": [170, 187], "dnnl_bcda24b4a": [170, 187], "dnnl_bcdea24b4a": [170, 187], "dnnl_acdb24c4b": [170, 187], "dnnl_acdeb24c4b": [170, 187], "dnnl_acdefb24c4b": [170, 187], "dnnl_ab16b48a": [170, 187], "dnnl_abc16b48a": [170, 187], "dnnl_abcd16b48a": [170, 187], "dnnl_abcde16b48a": [170, 187], "dnnl_abc16a4b": [170, 187], "dnnl_abcd16a4b": [170, 187], "dnnl_abcde16a4b": [170, 187], "dnnl_defcba16a": [170, 187], "dnnl_defcba8a": [170, 187], "dnnl_acb16b64a": [170, 187], "dnnl_acdb16b64a": [170, 187], "dnnl_acdeb16b64a": [170, 187], "dnnl_acb16b48a": [170, 187], "dnnl_acdb16b48a": [170, 187], "dnnl_acdeb16b48a": [170, 187], "dnnl_acb16b32a": [170, 187], "dnnl_acdb16b32a": [170, 187], "dnnl_acdeb16b32a": [170, 187], "dnnl_acb16b16a": [170, 187], "dnnl_acdb16b16a": [170, 187], "dnnl_acdeb16b16a": [170, 187], "dnnl_acb8b32a": [170, 187], "dnnl_acdb8b32a": [170, 187], "dnnl_acdeb8b32a": [170, 187], "dnnl_acb8b24a": [170, 187], "dnnl_acdb8b24a": [170, 187], "dnnl_acdeb8b24a": [170, 187], "dnnl_acb8b16a": [170, 187], "dnnl_acdb8b16a": [170, 187], "dnnl_acdeb8b16a": [170, 187], "dnnl_acb8b8a": [170, 187], "dnnl_acdb8b8a": [170, 187], "dnnl_acdeb8b8a": [170, 187], "dnnl_acb8b64a2b": [170, 187], "dnnl_acdb8b64a2b": [170, 187], "dnnl_acdeb8b64a2b": [170, 187], "dnnl_acb8b32a2b": [170, 187], "dnnl_acdb8b32a2b": [170, 187], "dnnl_acdeb8b32a2b": [170, 187], "dnnl_acb8b24a2b": [170, 187], "dnnl_acdb8b24a2b": [170, 187], "dnnl_acdeb8b24a2b": [170, 187], "dnnl_acb8b16a2b": [170, 187], "dnnl_acdb8b16a2b": [170, 187], "dnnl_acdeb8b16a2b": [170, 187], "dnnl_acb8b8a2b": [170, 187], "dnnl_acdb8b8a2b": [170, 187], "dnnl_acdeb8b8a2b": [170, 187], "dnnl_acb4b64a4b": [170, 187], "dnnl_acdb4b64a4b": [170, 187], "dnnl_acdeb4b64a4b": [170, 187], "dnnl_acb4b32a4b": [170, 187], "dnnl_acdb4b32a4b": [170, 187], "dnnl_acdeb4b32a4b": [170, 187], "dnnl_acb4b24a4b": [170, 187], "dnnl_acdb4b24a4b": [170, 187], "dnnl_acdeb4b24a4b": [170, 187], "dnnl_acb4b16a4b": [170, 187], "dnnl_acdb4b16a4b": [170, 187], "dnnl_acdeb4b16a4b": [170, 187], "dnnl_acb4b8a4b": [170, 187], "dnnl_acdb4b8a4b": [170, 187], "dnnl_acdeb4b8a4b": [170, 187], "dnnl_ab4a": [170, 187], "dnnl_ab8a": [170, 187], "dnnl_ba4b4a": [170, 187], "dnnl_ba8b4a": [170, 187], "dnnl_ba2a24b": [170, 187], "dnnl_acb2b24c": [170, 187], "dnnl_ba2a8b": [170, 187], "dnnl_acb2b8c": [170, 187], "dnnl_ba8a24b": [170, 187], "dnnl_acb8b24c": [170, 187], "dnnl_ba8a16b": [170, 187], "dnnl_acb8b16c": [170, 187], "dnnl_ba8a8b": [170, 187], "dnnl_acb8b8c": [170, 187], "dnnl_bcad": [170, 187], "dnnl_cabd": [170, 187], "dnnl_dabc": [170, 187], "dnnl_format_tag_last": [170, 187], "dnnl_cn": 170, "dnnl_owi": 170, "dnnl_woi": [170, 187], "dnnl_iwo": 170, "dnnl_hwoi": [170, 187], "dnnl_ohwi": 170, "dnnl_ihwo": 170, "dnnl_iohw": 170, "dnnl_iodhw": 170, "dnnl_dhwoi": [170, 187], "dnnl_odhwi": 170, "dnnl_idhwo": 170, "dnnl_goiw": 170, "dnnl_gowi": 170, "dnnl_wigo": 170, "dnnl_goihw": 170, "dnnl_gohwi": 170, "dnnl_hwigo": 170, "dnnl_giohw": 170, "dnnl_goidhw": 170, "dnnl_godhwi": 170, "dnnl_giodhw": 170, "dnnl_dhwigo": 170, "dnnl_ldoi16o": 170, "dnnl_ldoi32o": 170, "dnnl_ldoi32o4i": 170, "dnnl_ldio32i": [170, 187], "dnnl_ldgoi16o": 170, "dnnl_ldgoi32o": 170, "dnnl_ldgoi32o2i": 170, "dnnl_ldgoi32o4i": 170, "dnnl_ldgoi64o2i": 170, "dnnl_ldgoi64o4i": 170, "dnnl_ldgio16i": [170, 187], "dnnl_ldgio32i": [170, 187], "dnnl_ldgio32i2o": [170, 187], "dnnl_ncdhw32c": [170, 187], "dnnl_ncdhw16c": [170, 187], "dnnl_ncdhw4c": [170, 187], "dnnl_nchw32c": [170, 187], "dnnl_nchw4c": [170, 187], "dnnl_ncw32c": [170, 187], "dnnl_ncw16c": [170, 187], "dnnl_ncw4c": [170, 187], "dnnl_ncw8c": [170, 187], "dnnl_ncw16n16c": [170, 187], "dnnl_ncdhw16n16c": [170, 187], "dnnl_nchw16n16c": [170, 187], "dnnl_ncw32n16c": [170, 187], "dnnl_nchw32n16c": [170, 187], "dnnl_nchw16n32c": [170, 187], "dnnl_ncdhw32n16c": [170, 187], "dnnl_ncw32n32c": [170, 187], "dnnl_nchw32n32c": [170, 187], "dnnl_ncdhw32n32c": [170, 187], "dnnl_oi16i16o": [170, 187], "dnnl_oi16i32o": [170, 187], "dnnl_oi16i48o": [170, 187], "dnnl_oi16i64o": [170, 187], "dnnl_oi8i8o2i": [170, 187], "dnnl_oi8i16o2i": [170, 187], "dnnl_oi8i24o2i": [170, 187], "dnnl_oi8i32o2i": [170, 187], "dnnl_oi8i64o2i": [170, 187], "dnnl_oi4i8o4i": [170, 187], "dnnl_oi4i16o4i": [170, 187], "dnnl_oi4i24o4i": [170, 187], "dnnl_oi4i32o4i": [170, 187], "dnnl_oi4i64o4i": [170, 187], "dnnl_oi16i16o4i": [170, 187], "dnnl_oi8i32o": [170, 187], "dnnl_oi8i24o": [170, 187], "dnnl_oi8i16o": [170, 187], "dnnl_oi8i8o": [170, 187], "dnnl_iow16o16i": [170, 187], "dnnl_iow16i16o": [170, 187], "dnnl_oiw16i16o": [170, 187], "dnnl_owi16i16o": [170, 187], "dnnl_oiw16i32o": [170, 187], "dnnl_owi16i32o": [170, 187], "dnnl_oiw16i48o": [170, 187], "dnnl_owi16i48o": [170, 187], "dnnl_oiw16i64o": [170, 187], "dnnl_owi16i64o": [170, 187], "dnnl_oiw16o16i": [170, 187], "dnnl_oiw16o": [170, 187], "dnnl_oiw4i8o4i": [170, 187], "dnnl_owi4i8o4i": [170, 187], "dnnl_oiw4i16o4i": [170, 187], "dnnl_owi4i16o4i": [170, 187], "dnnl_oiw4i24o4i": [170, 187], "dnnl_owi4i24o4i": [170, 187], "dnnl_oiw4i32o4i": [170, 187], "dnnl_owi4i32o4i": [170, 187], "dnnl_oiw4i64o4i": [170, 187], "dnnl_owi4i64o4i": [170, 187], "dnnl_oiw2i8o4i": [170, 187], "dnnl_oiw16i16o4i": [170, 187], "dnnl_oiw16i16o2i": [170, 187], "dnnl_oiw16o16i2o": [170, 187], "dnnl_oiw4i4o": [170, 187], "dnnl_oiw4o4i": [170, 187], "dnnl_oiw4o": [170, 187], "dnnl_oiw8i8o2i": [170, 187], "dnnl_owi8i8o2i": [170, 187], "dnnl_oiw8i16o2i": [170, 187], "dnnl_owi8i16o2i": [170, 187], "dnnl_oiw8i24o2i": [170, 187], "dnnl_owi8i24o2i": [170, 187], "dnnl_oiw8i32o2i": [170, 187], "dnnl_owi8i32o2i": [170, 187], "dnnl_oiw8i64o2i": [170, 187], "dnnl_owi8i64o2i": [170, 187], "dnnl_oiw8i8o": [170, 187], "dnnl_owi8i8o": [170, 187], "dnnl_oiw8o16i2o": [170, 187], "dnnl_iow8o16i2o": [170, 187], "dnnl_oiw8o8i": [170, 187], "dnnl_oiw8o4i": [170, 187], "dnnl_owi16o": [170, 187], "dnnl_owi16o2i": [170, 187], "dnnl_owi16o4i": [170, 187], "dnnl_iwo8i": [170, 187], "dnnl_iwo8i2o": [170, 187], "dnnl_iwo8i4o": [170, 187], "dnnl_iwo16i": [170, 187], "dnnl_iwo16i2o": [170, 187], "dnnl_iwo16i4o": [170, 187], "dnnl_iwo24i": [170, 187], "dnnl_iwo24i2o": [170, 187], "dnnl_iwo24i4o": [170, 187], "dnnl_owi4o": [170, 187], "dnnl_owi8o": [170, 187], "dnnl_owi8o2i": [170, 187], "dnnl_oiw8i32o": [170, 187], "dnnl_owi8i32o": [170, 187], "dnnl_oiw8i24o": [170, 187], "dnnl_owi8i24o": [170, 187], "dnnl_oiw8i16o": [170, 187], "dnnl_owi8i16o": [170, 187], "dnnl_owi8o4i": [170, 187], "dnnl_iohw16i16o": [170, 187], "dnnl_iohw16o16i": [170, 187], "dnnl_ohwi16o": [170, 187], "dnnl_ohwi16o2i": [170, 187], "dnnl_ohwi16o4i": [170, 187], "dnnl_ihwo8i": [170, 187], "dnnl_ihwo8i2o": [170, 187], "dnnl_ihwo8i4o": [170, 187], "dnnl_ihwo16i": [170, 187], "dnnl_ihwo16i2o": [170, 187], "dnnl_ihwo16i4o": [170, 187], "dnnl_ihwo24i": [170, 187], "dnnl_ihwo24i2o": [170, 187], "dnnl_ihwo24i4o": [170, 187], "dnnl_ohwi24o": [170, 187], "dnnl_ohwi32o": [170, 187], "dnnl_ohwi4o": [170, 187], "dnnl_ohwi8o": [170, 187], "dnnl_ohwi8o2i": [170, 187], "dnnl_ohwi8o4i": [170, 187], "dnnl_oihw16i16o": [170, 187], "dnnl_ohwi16i16o": [170, 187], "dnnl_oihw16i32o": [170, 187], "dnnl_ohwi16i32o": [170, 187], "dnnl_oihw16i48o": [170, 187], "dnnl_ohwi16i48o": [170, 187], "dnnl_oihw16i64o": [170, 187], "dnnl_ohwi16i64o": [170, 187], "dnnl_oihw16o16i": [170, 187], "dnnl_oihw16o": [170, 187], "dnnl_oihw4i8o4i": [170, 187], "dnnl_ohwi4i8o4i": [170, 187], "dnnl_oihw4i16o4i": [170, 187], "dnnl_ohwi4i16o4i": [170, 187], "dnnl_oihw4i24o4i": [170, 187], "dnnl_ohwi4i24o4i": [170, 187], "dnnl_oihw4i32o4i": [170, 187], "dnnl_ohwi4i32o4i": [170, 187], "dnnl_oihw4i64o4i": [170, 187], "dnnl_ohwi4i64o4i": [170, 187], "dnnl_oihw16i16o4i": [170, 187], "dnnl_oihw16i16o2i": [170, 187], "dnnl_oihw16o16i2o": [170, 187], "dnnl_oihw4i4o": [170, 187], "dnnl_oihw4o4i": [170, 187], "dnnl_oihw4o": [170, 187], "dnnl_oihw8i8o2i": [170, 187], "dnnl_ohwi8i8o2i": [170, 187], "dnnl_oihw8i16o2i": [170, 187], "dnnl_ohwi8i16o2i": [170, 187], "dnnl_oihw8i32o2i": [170, 187], "dnnl_ohwi8i32o2i": [170, 187], "dnnl_oihw8i24o2i": [170, 187], "dnnl_ohwi8i24o2i": [170, 187], "dnnl_oihw8i64o2i": [170, 187], "dnnl_ohwi8i64o2i": [170, 187], "dnnl_oihw8i8o": [170, 187], "dnnl_ohwi8i8o": [170, 187], "dnnl_oihw8o16i2o": [170, 187], "dnnl_oihw2i8o4i": [170, 187], "dnnl_iohw8o16i2o": [170, 187], "dnnl_oihw8o8i": [170, 187], "dnnl_oihw8o4i": [170, 187], "dnnl_owhi16o": [170, 187], "dnnl_oihw8i32o": [170, 187], "dnnl_ohwi8i32o": [170, 187], "dnnl_oihw8i24o": [170, 187], "dnnl_ohwi8i24o": [170, 187], "dnnl_oihw8i16o": [170, 187], "dnnl_ohwi8i16o": [170, 187], "dnnl_odhwi16o": [170, 187], "dnnl_odhwi16o2i": [170, 187], "dnnl_odhwi16o4i": [170, 187], "dnnl_idhwo8i": [170, 187], "dnnl_idhwo8i2o": [170, 187], "dnnl_idhwo8i4o": [170, 187], "dnnl_idhwo16i": [170, 187], "dnnl_idhwo16i2o": [170, 187], "dnnl_idhwo16i4o": [170, 187], "dnnl_idhwo24i": [170, 187], "dnnl_idhwo24i2o": [170, 187], "dnnl_idhwo24i4o": [170, 187], "dnnl_odhwi4o": [170, 187], "dnnl_odhwi8o": [170, 187], "dnnl_odhwi8o2i": [170, 187], "dnnl_odhwi8o4i": [170, 187], "dnnl_odwhi16o": [170, 187], "dnnl_oidhw16i16o": [170, 187], "dnnl_odhwi16i16o": [170, 187], "dnnl_oidhw16i32o": [170, 187], "dnnl_odhwi16i32o": [170, 187], "dnnl_oidhw16i48o": [170, 187], "dnnl_odhwi16i48o": [170, 187], "dnnl_oidhw16i64o": [170, 187], "dnnl_odhwi16i64o": [170, 187], "dnnl_oidhw16o16i": [170, 187], "dnnl_oidhw16o": [170, 187], "dnnl_oidhw4i4o": [170, 187], "dnnl_oidhw4o4i": [170, 187], "dnnl_oidhw4o": [170, 187], "dnnl_oidhw8i8o2i": [170, 187], "dnnl_odhwi8i8o2i": [170, 187], "dnnl_oidhw8i16o2i": [170, 187], "dnnl_odhwi8i16o2i": [170, 187], "dnnl_oidhw8i32o2i": [170, 187], "dnnl_odhwi8i32o2i": [170, 187], "dnnl_oidhw8i24o2i": [170, 187], "dnnl_odhwi8i24o2i": [170, 187], "dnnl_oidhw8i64o2i": [170, 187], "dnnl_odhwi8i64o2i": [170, 187], "dnnl_oidhw8i8o": [170, 187], "dnnl_odhwi8i8o": [170, 187], "dnnl_oidhw8o16i2o": [170, 187], "dnnl_iodhw8o16i2o": [170, 187], "dnnl_oidhw4i8o4i": [170, 187], "dnnl_odhwi4i8o4i": [170, 187], "dnnl_oidhw4i16o4i": [170, 187], "dnnl_odhwi4i16o4i": [170, 187], "dnnl_oidhw4i24o4i": [170, 187], "dnnl_odhwi4i24o4i": [170, 187], "dnnl_oidhw4i32o4i": [170, 187], "dnnl_odhwi4i32o4i": [170, 187], "dnnl_oidhw4i64o4i": [170, 187], "dnnl_odhwi4i64o4i": [170, 187], "dnnl_oidhw16i16o4i": [170, 187], "dnnl_oidhw16i16o2i": [170, 187], "dnnl_oidhw2i8o4i": [170, 187], "dnnl_oidhw8o8i": [170, 187], "dnnl_oidhw8o4i": [170, 187], "dnnl_iodhw16i16o": [170, 187], "dnnl_oidhw4o8i8o4i": [170, 187], "dnnl_iodhw16o16i": [170, 187], "dnnl_oidhw16o16i2o": [170, 187], "dnnl_oidhw8i32o": [170, 187], "dnnl_odhwi8i32o": [170, 187], "dnnl_oidhw8i24o": [170, 187], "dnnl_odhwi8i24o": [170, 187], "dnnl_oidhw8i16o": [170, 187], "dnnl_odhwi8i16o": [170, 187], "dnnl_goiw16g": [170, 187], "dnnl_goiw8g": [170, 187], "dnnl_goiw4g": [170, 187], "dnnl_giow16o16i": [170, 187], "dnnl_giow16i16o": [170, 187], "dnnl_goiw16i16o": [170, 187], "dnnl_goiw16o16i": [170, 187], "dnnl_goiw16o": [170, 187], "dnnl_goiw4i16o4i": [170, 187], "dnnl_goiw2i8o4i": [170, 187], "dnnl_goiw16i16o4i": [170, 187], "dnnl_goiw16i16o2i": [170, 187], "dnnl_goiw16o16i2o": [170, 187], "dnnl_goiw4i4o": [170, 187], "dnnl_goiw4o4i": [170, 187], "dnnl_goiw4o": [170, 187], "dnnl_goiw8i16o2i": [170, 187], "dnnl_goiw8i8o": [170, 187], "dnnl_goiw8o16i2o": [170, 187], "dnnl_giow8o16i2o": [170, 187], "dnnl_goiw8o8i": [170, 187], "dnnl_goiw8o4i": [170, 187], "dnnl_gowi16o": [170, 187], "dnnl_gowi16o2i": [170, 187], "dnnl_gowi16o4i": [170, 187], "dnnl_giwo8i": [170, 187], "dnnl_giwo8i2o": [170, 187], "dnnl_giwo8i4o": [170, 187], "dnnl_giwo16i": [170, 187], "dnnl_giwo16i2o": [170, 187], "dnnl_giwo16i4o": [170, 187], "dnnl_giwo24i": [170, 187], "dnnl_giwo24i2o": [170, 187], "dnnl_giwo24i4o": [170, 187], "dnnl_gowi4o": [170, 187], "dnnl_gowi8o": [170, 187], "dnnl_gowi8o2i": [170, 187], "dnnl_gowi8o4i": [170, 187], "dnnl_goiw32g": [170, 187], "dnnl_goiw2i4o2i": [170, 187], "dnnl_goiw2o4i2o": [170, 187], "dnnl_goiw4i8o2i": [170, 187], "dnnl_goiw4o8i2o": [170, 187], "dnnl_goiw4i": [170, 187], "dnnl_goiw32i": [170, 187], "dnnl_giohw16i16o": [170, 187], "dnnl_giohw16o16i": [170, 187], "dnnl_gohwi16o": [170, 187], "dnnl_gohwi16o2i": [170, 187], "dnnl_gohwi16o4i": [170, 187], "dnnl_gihwo8i": [170, 187], "dnnl_gihwo8i2o": [170, 187], "dnnl_gihwo8i4o": [170, 187], "dnnl_gihwo16i": [170, 187], "dnnl_gihwo16i2o": [170, 187], "dnnl_gihwo16i4o": [170, 187], "dnnl_gihwo24i": [170, 187], "dnnl_gihwo24i2o": [170, 187], "dnnl_gihwo24i4o": [170, 187], "dnnl_gohwi32o": [170, 187], "dnnl_gohwi24o": [170, 187], "dnnl_gohwi24o2i": [170, 187], "dnnl_gohwi24o4i": [170, 187], "dnnl_gohwi4o": [170, 187], "dnnl_gohwi8o": [170, 187], "dnnl_gohwi8o2i": [170, 187], "dnnl_gohwi8o4i": [170, 187], "dnnl_goihw16g": [170, 187], "dnnl_goihw16i16o": [170, 187], "dnnl_goihw16o16i": [170, 187], "dnnl_goihw16o": [170, 187], "dnnl_goihw2i8o4i": [170, 187], "dnnl_goihw4i16o4i": [170, 187], "dnnl_goihw16i16o4i": [170, 187], "dnnl_goihw16i16o2i": [170, 187], "dnnl_goihw16o16i2o": [170, 187], "dnnl_goihw4i4o": [170, 187], "dnnl_goihw4o4i": [170, 187], "dnnl_goihw4o": [170, 187], "dnnl_goihw8g": [170, 187], "dnnl_goihw4g": [170, 187], "dnnl_goihw8i16o2i": [170, 187], "dnnl_goihw8i8o": [170, 187], "dnnl_goihw8o16i2o": [170, 187], "dnnl_giohw8o16i2o": [170, 187], "dnnl_goihw8o8i": [170, 187], "dnnl_goihw8o4i": [170, 187], "dnnl_goihw32g": [170, 187], "dnnl_gowhi16o": [170, 187], "dnnl_goihw4i": [170, 187], "dnnl_goihw32i": [170, 187], "dnnl_oiw4o8i8o4i": [170, 187], "dnnl_oihw4o8i8o4i": [170, 187], "dnnl_iow4i8o8i4o": [170, 187], "dnnl_iohw4i8o8i4o": [170, 187], "dnnl_iodhw4i8o8i4o": [170, 187], "dnnl_oihw2o8i8o2i": [170, 187], "dnnl_goiw4o8i8o4i": [170, 187], "dnnl_goihw4o8i8o4i": [170, 187], "dnnl_goidhw4o8i8o4i": [170, 187], "dnnl_giow4i8o8i4o": [170, 187], "dnnl_giohw4i8o8i4o": [170, 187], "dnnl_giodhw4i8o8i4o": [170, 187], "dnnl_goihw2o8i8o2i": [170, 187], "dnnl_goihw2i4o2i": [170, 187], "dnnl_goihw2o4i2o": [170, 187], "dnnl_goihw4i8o2i": [170, 187], "dnnl_goihw4o8i2o": [170, 187], "dnnl_giodhw16i16o": [170, 187], "dnnl_giodhw16o16i": [170, 187], "dnnl_godhwi16o": [170, 187], "dnnl_godhwi16o2i": [170, 187], "dnnl_godhwi16o4i": [170, 187], "dnnl_gidhwo8i": [170, 187], "dnnl_gidhwo8i2o": [170, 187], "dnnl_gidhwo8i4o": [170, 187], "dnnl_gidhwo16i": [170, 187], "dnnl_gidhwo16i2o": [170, 187], "dnnl_gidhwo16i4o": [170, 187], "dnnl_gidhwo24i": [170, 187], "dnnl_gidhwo24i2o": [170, 187], "dnnl_gidhwo24i4o": [170, 187], "dnnl_godhwi4o": [170, 187], "dnnl_godhwi8o": [170, 187], "dnnl_godhwi8o2i": [170, 187], "dnnl_godhwi8o4i": [170, 187], "dnnl_godwhi16o": [170, 187], "dnnl_goidhw16i16o": [170, 187], "dnnl_goidhw4i16o4i": [170, 187], "dnnl_goidhw16i16o4i": [170, 187], "dnnl_goidhw2i8o4i": [170, 187], "dnnl_goidhw16i16o2i": [170, 187], "dnnl_goidhw16o16i": [170, 187], "dnnl_goidhw16o16i2o": [170, 187], "dnnl_goidhw16o": [170, 187], "dnnl_goidhw4i4o": [170, 187], "dnnl_goidhw4o4i": [170, 187], "dnnl_goidhw4o": [170, 187], "dnnl_goidhw8i16o2i": [170, 187], "dnnl_goidhw8i8o": [170, 187], "dnnl_goidhw8o16i2o": [170, 187], "dnnl_giodhw8o16i2o": [170, 187], "dnnl_goidhw8o8i": [170, 187], "dnnl_goidhw8o4i": [170, 187], "dnnl_goidhw16g": [170, 187], "dnnl_goidhw32g": [170, 187], "dnnl_goidhw2i4o2i": [170, 187], "dnnl_goidhw4i8o2i": [170, 187], "dnnl_goidhw2o4i2o": [170, 187], "dnnl_goidhw4o8i2o": [170, 187], "dnnl_goidhw4i": [170, 187], "dnnl_goidhw32i": [170, 187], "dnnl_owi24o": [170, 187], "dnnl_owi24o2i": [170, 187], "dnnl_owi24o4i": [170, 187], "dnnl_owi32o": [170, 187], "dnnl_owi32o2i": [170, 187], "dnnl_owi32o4i": [170, 187], "dnnl_owi48o": [170, 187], "dnnl_owi48o2i": [170, 187], "dnnl_owi48o4i": [170, 187], "dnnl_owi64o": [170, 187], "dnnl_owi64o2i": [170, 187], "dnnl_owi64o4i": [170, 187], "dnnl_iwo32i": [170, 187], "dnnl_iwo32i2o": [170, 187], "dnnl_iwo32i4o": [170, 187], "dnnl_iwo48i": [170, 187], "dnnl_iwo48i2o": [170, 187], "dnnl_iwo48i4o": [170, 187], "dnnl_iwo64i": [170, 187], "dnnl_iwo64i2o": [170, 187], "dnnl_iwo64i4o": [170, 187], "dnnl_wio2i": [170, 187], "dnnl_wio4i": [170, 187], "dnnl_gowi24o": [170, 187], "dnnl_gowi24o2i": [170, 187], "dnnl_gowi24o4i": [170, 187], "dnnl_gowi32o": [170, 187], "dnnl_gowi32o2i": [170, 187], "dnnl_gowi32o4i": [170, 187], "dnnl_gowi48o": [170, 187], "dnnl_gowi48o2i": [170, 187], "dnnl_gowi48o4i": [170, 187], "dnnl_gowi64o": [170, 187], "dnnl_gowi64o2i": [170, 187], "dnnl_gowi64o4i": [170, 187], "dnnl_giwo32i": [170, 187], "dnnl_giwo32i2o": [170, 187], "dnnl_giwo32i4o": [170, 187], "dnnl_giwo48i": [170, 187], "dnnl_giwo48i2o": [170, 187], "dnnl_giwo48i4o": [170, 187], "dnnl_giwo64i": [170, 187], "dnnl_giwo64i2o": [170, 187], "dnnl_giwo64i4o": [170, 187], "dnnl_gwio": [170, 187], "dnnl_gwio2i": [170, 187], "dnnl_gwio4i": [170, 187], "dnnl_ohwi24o2i": [170, 187], "dnnl_ohwi24o4i": [170, 187], "dnnl_ohwi32o2i": [170, 187], "dnnl_ohwi32o4i": [170, 187], "dnnl_ohwi48o": [170, 187], "dnnl_ohwi48o2i": [170, 187], "dnnl_ohwi48o4i": [170, 187], "dnnl_ohwi64o": [170, 187], "dnnl_ohwi64o2i": [170, 187], "dnnl_ohwi64o4i": [170, 187], "dnnl_ihwo32i": [170, 187], "dnnl_ihwo32i2o": [170, 187], "dnnl_ihwo32i4o": [170, 187], "dnnl_ihwo48i": [170, 187], "dnnl_ihwo48i2o": [170, 187], "dnnl_ihwo48i4o": [170, 187], "dnnl_ihwo64i": [170, 187], "dnnl_ihwo64i2o": [170, 187], "dnnl_ihwo64i4o": [170, 187], "dnnl_hwio2i": [170, 187], "dnnl_hwio4i": [170, 187], "dnnl_gohwi32o2i": [170, 187], "dnnl_gohwi32o4i": [170, 187], "dnnl_gohwi48o": [170, 187], "dnnl_gohwi48o2i": [170, 187], "dnnl_gohwi48o4i": [170, 187], "dnnl_gohwi64o": [170, 187], "dnnl_gohwi64o2i": [170, 187], "dnnl_gohwi64o4i": [170, 187], "dnnl_gihwo32i": [170, 187], "dnnl_gihwo32i2o": [170, 187], "dnnl_gihwo32i4o": [170, 187], "dnnl_gihwo48i": [170, 187], "dnnl_gihwo48i2o": [170, 187], "dnnl_gihwo48i4o": [170, 187], "dnnl_gihwo64i": [170, 187], "dnnl_gihwo64i2o": [170, 187], "dnnl_gihwo64i4o": [170, 187], "dnnl_ghwio": [170, 187], "dnnl_ghwio2i": [170, 187], "dnnl_ghwio4i": [170, 187], "dnnl_odhwi24o": [170, 187], "dnnl_odhwi24o2i": [170, 187], "dnnl_odhwi24o4i": [170, 187], "dnnl_odhwi32o": [170, 187], "dnnl_odhwi32o2i": [170, 187], "dnnl_odhwi32o4i": [170, 187], "dnnl_odhwi48o": [170, 187], "dnnl_odhwi48o2i": [170, 187], "dnnl_odhwi48o4i": [170, 187], "dnnl_odhwi64o": [170, 187], "dnnl_odhwi64o2i": [170, 187], "dnnl_odhwi64o4i": [170, 187], "dnnl_idhwo32i": [170, 187], "dnnl_idhwo32i2o": [170, 187], "dnnl_idhwo32i4o": [170, 187], "dnnl_idhwo48i": [170, 187], "dnnl_idhwo48i2o": [170, 187], "dnnl_idhwo48i4o": [170, 187], "dnnl_idhwo64i": [170, 187], "dnnl_idhwo64i2o": [170, 187], "dnnl_idhwo64i4o": [170, 187], "dnnl_dhwio2i": [170, 187], "dnnl_dhwio4i": [170, 187], "dnnl_godhwi24o": [170, 187], "dnnl_godhwi24o2i": [170, 187], "dnnl_godhwi24o4i": [170, 187], "dnnl_godhwi32o": [170, 187], "dnnl_godhwi32o2i": [170, 187], "dnnl_godhwi32o4i": [170, 187], "dnnl_godhwi48o": [170, 187], "dnnl_godhwi48o2i": [170, 187], "dnnl_godhwi48o4i": [170, 187], "dnnl_godhwi64o": [170, 187], "dnnl_godhwi64o2i": [170, 187], "dnnl_godhwi64o4i": [170, 187], "dnnl_gidhwo32i": [170, 187], "dnnl_gidhwo32i2o": [170, 187], "dnnl_gidhwo32i4o": [170, 187], "dnnl_gidhwo48i": [170, 187], "dnnl_gidhwo48i2o": [170, 187], "dnnl_gidhwo48i4o": [170, 187], "dnnl_gidhwo64i": [170, 187], "dnnl_gidhwo64i2o": [170, 187], "dnnl_gidhwo64i4o": [170, 187], "dnnl_gdhwio": [170, 187], "dnnl_gdhwio2i": [170, 187], "dnnl_gdhwio4i": [170, 187], "dnnl_oi16i32o4i": [170, 187], "dnnl_oi16i48o4i": [170, 187], "dnnl_oi16i64o4i": [170, 187], "dnnl_oi16i16o2i": [170, 187], "dnnl_oi16i32o2i": [170, 187], "dnnl_oi16i48o2i": [170, 187], "dnnl_oi16i64o2i": [170, 187], "dnnl_oiw16i32o4i": [170, 187], "dnnl_oiw16i48o4i": [170, 187], "dnnl_oiw16i64o4i": [170, 187], "dnnl_oiw16i32o2i": [170, 187], "dnnl_oiw16i48o2i": [170, 187], "dnnl_oiw16i64o2i": [170, 187], "dnnl_oihw16i32o4i": [170, 187], "dnnl_oihw16i48o4i": [170, 187], "dnnl_oihw16i64o4i": [170, 187], "dnnl_oihw16i32o2i": [170, 187], "dnnl_oihw16i48o2i": [170, 187], "dnnl_oihw16i64o2i": [170, 187], "dnnl_oidhw16i32o4i": [170, 187], "dnnl_oidhw16i48o4i": [170, 187], "dnnl_oidhw16i64o4i": [170, 187], "dnnl_oidhw16i32o2i": [170, 187], "dnnl_oidhw16i48o2i": [170, 187], "dnnl_oidhw16i64o2i": [170, 187], "dnnl_owi16i16o2i": [170, 187], "dnnl_owi16i16o4i": [170, 187], "dnnl_ohwi16i16o2i": [170, 187], "dnnl_ohwi16i16o4i": [170, 187], "dnnl_odhwi16i16o2i": [170, 187], "dnnl_odhwi16i16o4i": [170, 187], "dnnl_iwo16o16i2o": [170, 187], "dnnl_iwo16o16i4o": [170, 187], "dnnl_ihwo16o16i2o": [170, 187], "dnnl_ihwo16o16i4o": [170, 187], "dnnl_idhwo16o16i2o": [170, 187], "dnnl_idhwo16o16i4o": [170, 187], "dnnl_gowi16i16o2i": [170, 187], "dnnl_gowi16i16o4i": [170, 187], "dnnl_gohwi16i16o2i": [170, 187], "dnnl_gohwi16i16o4i": [170, 187], "dnnl_godhwi16i16o2i": [170, 187], "dnnl_godhwi16i16o4i": [170, 187], "dnnl_giwo16o16i2o": [170, 187], "dnnl_giwo16o16i4o": [170, 187], "dnnl_gihwo16o16i2o": [170, 187], "dnnl_gihwo16o16i4o": [170, 187], "dnnl_gidhwo16o16i2o": [170, 187], "dnnl_gidhwo16o16i4o": [170, 187], "dnnl_owi16i32o2i": [170, 187], "dnnl_owi16i32o4i": [170, 187], "dnnl_owi16i48o2i": [170, 187], "dnnl_owi16i48o4i": [170, 187], "dnnl_owi16i64o2i": [170, 187], "dnnl_owi16i64o4i": [170, 187], "dnnl_iwo16o32i2o": [170, 187], "dnnl_iwo16o32i4o": [170, 187], "dnnl_iwo16o48i2o": [170, 187], "dnnl_iwo16o48i4o": [170, 187], "dnnl_iwo16o64i2o": [170, 187], "dnnl_iwo16o64i4o": [170, 187], "dnnl_gowi16i32o2i": [170, 187], "dnnl_gowi16i32o4i": [170, 187], "dnnl_gowi16i48o2i": [170, 187], "dnnl_gowi16i48o4i": [170, 187], "dnnl_gowi16i64o2i": [170, 187], "dnnl_gowi16i64o4i": [170, 187], "dnnl_giwo16o32i2o": [170, 187], "dnnl_giwo16o32i4o": [170, 187], "dnnl_giwo16o48i2o": [170, 187], "dnnl_giwo16o48i4o": [170, 187], "dnnl_giwo16o64i2o": [170, 187], "dnnl_giwo16o64i4o": [170, 187], "dnnl_ohwi16i32o2i": [170, 187], "dnnl_ohwi16i32o4i": [170, 187], "dnnl_ohwi16i48o2i": [170, 187], "dnnl_ohwi16i48o4i": [170, 187], "dnnl_ohwi16i64o2i": [170, 187], "dnnl_ohwi16i64o4i": [170, 187], "dnnl_ihwo16o32i2o": [170, 187], "dnnl_ihwo16o32i4o": [170, 187], "dnnl_ihwo16o48i2o": [170, 187], "dnnl_ihwo16o48i4o": [170, 187], "dnnl_ihwo16o64i2o": [170, 187], "dnnl_ihwo16o64i4o": [170, 187], "dnnl_gohwi16i32o2i": [170, 187], "dnnl_gohwi16i32o4i": [170, 187], "dnnl_gohwi16i48o2i": [170, 187], "dnnl_gohwi16i48o4i": [170, 187], "dnnl_gohwi16i64o2i": [170, 187], "dnnl_gohwi16i64o4i": [170, 187], "dnnl_gihwo16o32i2o": [170, 187], "dnnl_gihwo16o32i4o": [170, 187], "dnnl_gihwo16o48i2o": [170, 187], "dnnl_gihwo16o48i4o": [170, 187], "dnnl_gihwo16o64i2o": [170, 187], "dnnl_gihwo16o64i4o": [170, 187], "dnnl_odhwi16i32o2i": [170, 187], "dnnl_odhwi16i32o4i": [170, 187], "dnnl_odhwi16i48o2i": [170, 187], "dnnl_odhwi16i48o4i": [170, 187], "dnnl_odhwi16i64o2i": [170, 187], "dnnl_odhwi16i64o4i": [170, 187], "dnnl_idhwo16o32i2o": [170, 187], "dnnl_idhwo16o32i4o": [170, 187], "dnnl_idhwo16o48i2o": [170, 187], "dnnl_idhwo16o48i4o": [170, 187], "dnnl_idhwo16o64i2o": [170, 187], "dnnl_idhwo16o64i4o": [170, 187], "dnnl_godhwi16i32o2i": [170, 187], "dnnl_godhwi16i32o4i": [170, 187], "dnnl_godhwi16i48o2i": [170, 187], "dnnl_godhwi16i48o4i": [170, 187], "dnnl_godhwi16i64o2i": [170, 187], "dnnl_godhwi16i64o4i": [170, 187], "dnnl_gidhwo16o32i2o": [170, 187], "dnnl_gidhwo16o32i4o": [170, 187], "dnnl_gidhwo16o48i2o": [170, 187], "dnnl_gidhwo16o48i4o": [170, 187], "dnnl_gidhwo16o64i2o": [170, 187], "dnnl_gidhwo16o64i4o": [170, 187], "dnnl_hwiog16g": [170, 187], "dnnl_hwiog8g": [170, 187], "dnnl_dhwiog16g": [170, 187], "dnnl_dhwiog8g": [170, 187], "dnnl_ncdhw40n16c": [170, 187], "dnnl_ncw40n16c": [170, 187], "dnnl_nchw40n16c": [170, 187], "dnnl_ncw40n32c": [170, 187], "dnnl_nchw40n32c": [170, 187], "dnnl_ncdhw40n32c": [170, 187], "dnnl_oidhw4o8i8o2i": [170, 187], "dnnl_oihw4o8i8o2i": [170, 187], "dnnl_oiw4o8i8o2i": [170, 187], "dnnl_goidhw4o8i8o2i": [170, 187], "dnnl_goihw4o8i8o2i": [170, 187], "dnnl_goiw4o8i8o2i": [170, 187], "dnnl_iodhw4i8o8i2o": [170, 187], "dnnl_iohw4i8o8i2o": [170, 187], "dnnl_iow4i8o8i2o": [170, 187], "dnnl_giodhw4i8o8i2o": [170, 187], "dnnl_giohw4i8o8i2o": [170, 187], "dnnl_giow4i8o8i2o": [170, 187], "dnnl_ncw2c32n8c": [170, 187], "dnnl_nchw2c32n8c": [170, 187], "dnnl_ncdhw2c32n8c": [170, 187], "dnnl_oiw2i8o16i4o": [170, 187], "dnnl_oihw2i8o16i4o": [170, 187], "dnnl_oidhw2i8o16i4o": [170, 187], "dnnl_oiw2o8i16o4i": [170, 187], "dnnl_oiw2o8i16o2i": [170, 187], "dnnl_iow2i8o16i4o": [170, 187], "dnnl_iow2i8o16i2o": [170, 187], "dnnl_oihw2o8i16o4i": [170, 187], "dnnl_oihw2o8i16o2i": [170, 187], "dnnl_iohw2i8o16i4o": [170, 187], "dnnl_iohw2i8o16i2o": [170, 187], "dnnl_oidhw2o8i16o4i": [170, 187], "dnnl_oidhw2o8i16o2i": [170, 187], "dnnl_iodhw2i8o16i4o": [170, 187], "dnnl_iodhw2i8o16i2o": [170, 187], "dnnl_goiw2o8i16o2i": [170, 187], "dnnl_giow2i8o16i2o": [170, 187], "dnnl_giohw2i8o16i2o": [170, 187], "dnnl_giodhw2i8o16i2o": [170, 187], "dnnl_goihw2o8i16o2i": [170, 187], "dnnl_goidhw2o8i16o2i": [170, 187], "dnnl_goiw2o8i16o4i": [170, 187], "dnnl_goihw2o8i16o4i": [170, 187], "ndhwc": [170, 187], "data_in_ncdhw": 170, "data_in_ndhwc": 170, "dnnl_memory_desc_destroi": [170, 218, 226, 236, 264, 288, 348, 358, 367], "alia": [170, 187, 197, 198, 294, 336], "mini": [170, 187, 243, 288, 381, 456], "6d": [170, 187], "7d": [170, 187], "8d": [170, 187], "9d": [170, 187], "10d": [170, 187], "11d": [170, 187], "2nd": [170, 187], "sentinel": 170, "incl": 170, "seq_length": [170, 187], "num_lay": [170, 187], "num_direct": [170, 187], "input_channel": [170, 187], "num_gat": [170, 187], "output_channel": [170, 187], "num_channels_in_hidden_st": [170, 187], "num_channels_in_recurrent_project": [170, 187], "dnnl_fpmath_mode_strict": [171, 172, 270, 281, 300], "dnnl_fpmath_mode_bf16": [171, 172, 270, 281, 300], "dnnl_fpmath_mode_f16": [171, 172, 270, 281, 300], "dnnl_fpmath_mode_tf32": [171, 172, 270, 281, 300], "dnnl_fpmath_mode_ani": [171, 172, 270, 281, 300], "dnnl_graph_layout_type_undef": [173, 175], "dnnl_graph_layout_type_ani": [173, 175, 318], "dnnl_graph_layout_type_strid": [173, 175, 318, 456], "dnnl_graph_layout_type_opaqu": [173, 175, 456], "dnnl_graph_tensor_property_undef": [176, 184], "dnnl_graph_tensor_property_vari": [176, 184], "dnnl_graph_tensor_property_const": [176, 184], "unchang": [176, 184, 294, 514], "dnnl_graph_op_attr_undef": [177, 178], "dnnl_graph_op_attr_alpha": [177, 178], "dnnl_graph_op_attr_beta": [177, 178], "dnnl_graph_op_attr_epsilon": [177, 178], "dnnl_graph_op_attr_max": [177, 178], "dnnl_graph_op_attr_min": [177, 178], "dnnl_graph_op_attr_momentum": [177, 178], "dnnl_graph_op_attr_scal": [177, 178], "dnnl_graph_op_attr_axi": [177, 178], "dnnl_graph_op_attr_begin_norm_axi": [177, 178], "dnnl_graph_op_attr_group": [177, 178], "dnnl_graph_op_attr_ax": [177, 178], "dnnl_graph_op_attr_dil": [177, 178], "dnnl_graph_op_attr_dst_shap": [177, 178], "dnnl_graph_op_attr_kernel": [177, 178], "dnnl_graph_op_attr_ord": [177, 178], "dnnl_graph_op_attr_output_pad": [177, 178], "dnnl_graph_op_attr_pads_begin": [177, 178], "dnnl_graph_op_attr_pads_end": [177, 178], "dnnl_graph_op_attr_shap": [177, 178], "dnnl_graph_op_attr_s": [177, 178], "dnnl_graph_op_attr_src_shap": [177, 178], "dnnl_graph_op_attr_strid": [177, 178], "dnnl_graph_op_attr_weights_shap": [177, 178], "dnnl_graph_op_attr_zp": [177, 178], "dnnl_graph_op_attr_exclude_pad": [177, 178], "dnnl_graph_op_attr_keep_dim": [177, 178], "dnnl_graph_op_attr_keep_stat": [177, 178], "dnnl_graph_op_attr_per_channel_broadcast": [177, 178], "dnnl_graph_op_attr_special_zero": [177, 178], "dnnl_graph_op_attr_transpose_a": [177, 178], "dnnl_graph_op_attr_transpose_b": [177, 178], "dnnl_graph_op_attr_use_affin": [177, 178], "dnnl_graph_op_attr_use_dst": [177, 178], "dnnl_graph_op_attr_auto_broadcast": [177, 178], "dnnl_graph_op_attr_auto_pad": [177, 178], "dnnl_graph_op_attr_coordinate_transformation_mod": [177, 178], "dnnl_graph_op_attr_data_format": [177, 178, 456], "dnnl_graph_op_attr_mod": [177, 178], "dnnl_graph_op_attr_qtyp": [177, 178], "dnnl_graph_op_attr_rounding_typ": [177, 178], "dnnl_graph_op_attr_weights_format": [177, 178, 456], "dnnl_graph_op_attr_end": [177, 178], "illeg": 177, "weight_shap": [177, 178], "exter": [177, 178], "0x30": 178, "0x40": 178, "0x60": 178, "0x80": 178, "0xff": 178, "input_shap": 178, "dnnl_graph_op_ab": [179, 180], "absbackward": [179, 267], "dnnl_graph_op_abs_backward": [179, 180], "dnnl_graph_op_add": [179, 180], "dnnl_graph_op_avg_pool": [179, 180], "dnnl_graph_op_avg_pool_backward": [179, 180], "dnnl_graph_op_batch_norm_forward_train": [179, 180], "dnnl_graph_op_batch_norm_infer": [179, 180], "dnnl_graph_op_batch_norm_backward": [179, 180], "dnnl_graph_op_bias_add": [179, 180], "dnnl_graph_op_bias_add_backward": [179, 180], "dnnl_graph_op_clamp": [179, 180], "clampbackward": [179, 267], "dnnl_graph_op_clamp_backward": [179, 180], "dnnl_graph_op_concat": [179, 180], "dnnl_graph_op_convolut": [179, 180], "dnnl_graph_op_convolution_backward_data": [179, 180], "dnnl_graph_op_convolution_backward_weight": [179, 180], "dnnl_graph_op_conv_transpos": [179, 180], "convtransposebackwarddata": [179, 267], "dnnl_graph_op_conv_transpose_backward_data": [179, 180], "convtransposebackwardweight": [179, 267], "dnnl_graph_op_conv_transpose_backward_weight": [179, 180], "dnnl_graph_op_dequant": [179, 180], "dnnl_graph_op_divid": [179, 180], "dynamicdequant": [179, 267], "dnnl_graph_op_dynamic_dequant": [179, 180], "dynamicquant": [179, 267], "dnnl_graph_op_dynamic_quant": [179, 180], "dnnl_graph_op_elu": [179, 180], "elubackward": [179, 267], "dnnl_graph_op_elu_backward": [179, 180], "dnnl_graph_op_end": [179, 180], "dnnl_graph_op_exp": [179, 180], "dnnl_graph_op_gelu": [179, 180], "dnnl_graph_op_gelu_backward": [179, 180], "dnnl_graph_op_hard_sigmoid": [179, 180], "hardsigmoidbackward": [179, 267], "dnnl_graph_op_hard_sigmoid_backward": [179, 180], "dnnl_graph_op_hard_swish": [179, 180], "hardswishbackward": [179, 267], "dnnl_graph_op_hard_swish_backward": [179, 180], "dnnl_graph_op_interpol": [179, 180], "interpolatebackward": [179, 267], "dnnl_graph_op_interpolate_backward": [179, 180], "dnnl_graph_op_layer_norm": [179, 180], "layernormbackward": [179, 267], "dnnl_graph_op_layer_norm_backward": [179, 180], "dnnl_graph_op_leaky_relu": [179, 180], "dnnl_graph_op_log": [179, 180], "dnnl_graph_op_log_softmax": [179, 180], "logsoftmaxbackward": [179, 267], "dnnl_graph_op_log_softmax_backward": [179, 180], "dnnl_graph_op_matmul": [179, 180], "dnnl_graph_op_maximum": [179, 180], "dnnl_graph_op_max_pool": [179, 180], "maxpoolbackward": [179, 267], "dnnl_graph_op_max_pool_backward": [179, 180], "dnnl_graph_op_minimum": [179, 180], "dnnl_graph_op_mish": [179, 180], "mishbackward": [179, 267], "dnnl_graph_op_mish_backward": [179, 180], "dnnl_graph_op_multipli": [179, 180], "dnnl_graph_op_pow": [179, 180], "dnnl_graph_op_prelu": [179, 180], "prelubackward": [179, 267], "dnnl_graph_op_prelu_backward": [179, 180], "dnnl_graph_op_quant": [179, 180], "dnnl_graph_op_reciproc": [179, 180], "dnnl_graph_op_reduce_l1": [179, 180], "dnnl_graph_op_reduce_l2": [179, 180], "dnnl_graph_op_reduce_max": [179, 180], "dnnl_graph_op_reduce_mean": [179, 180], "dnnl_graph_op_reduce_min": [179, 180], "dnnl_graph_op_reduce_prod": [179, 180], "dnnl_graph_op_reduce_sum": [179, 180], "dnnl_graph_op_relu": [179, 180], "dnnl_graph_op_relu_backward": [179, 180], "dnnl_graph_op_reord": [179, 180], "dnnl_graph_op_round": [179, 180], "dnnl_graph_op_select": [179, 180], "dnnl_graph_op_sigmoid": [179, 180], "dnnl_graph_op_sigmoid_backward": [179, 180], "dnnl_graph_op_softmax": [179, 180], "softmaxbackward": [179, 267], "dnnl_graph_op_softmax_backward": [179, 180], "dnnl_graph_op_softplu": [179, 180], "softplusbackward": [179, 267], "dnnl_graph_op_softplus_backward": [179, 180], "dnnl_graph_op_sqrt": [179, 180], "sqrtbackward": [179, 267], "dnnl_graph_op_sqrt_backward": [179, 180], "dnnl_graph_op_squar": [179, 180], "squareddiffer": [179, 267], "dnnl_graph_op_squared_differ": [179, 180], "dnnl_graph_op_static_reshap": [179, 180], "dnnl_graph_op_static_transpos": [179, 180], "dnnl_graph_op_subtract": [179, 180], "dnnl_graph_op_tanh": [179, 180], "tanhbackward": [179, 267], "dnnl_graph_op_tanh_backward": [179, 180], "dnnl_graph_op_type_cast": [179, 180], "dnnl_graph_op_wildcard": [179, 180], "lastsymbol": 179, "dnnl_graph_op_last_symbol": [179, 180], "dnnl_graph_partition_policy_fus": [181, 182], "dnnl_graph_partition_policy_debug": [181, 182], "chian": [181, 182], "dnnl_success": [183, 208, 209, 218, 226, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 316, 318, 319, 320, 321, 323, 324, 334, 348, 358], "out_of_memori": [183, 208], "dnnl_out_of_memori": [183, 208, 209], "invalid_argu": [183, 208, 250, 292, 300, 371], "dnnl_invalid_argu": [183, 208, 209, 270, 288, 292, 300, 312, 313, 314], "last_impl_reach": [183, 208], "dnnl_last_impl_reach": [183, 208, 209, 294], "dnnl_runtime_error": [183, 208, 209, 300], "not_requir": [183, 208], "dnnl_not_requir": [183, 208, 209, 294], "invalid_graph": 183, "dnnl_invalid_graph": [183, 209], "invalid_graph_op": 183, "dnnl_invalid_graph_op": [183, 209], "dnnl_invalid_shap": [183, 209], "invalid_data_typ": 183, "dnnl_invalid_data_typ": [183, 209], "legitim": [183, 209], "bca": 187, "cba": 187, "abdc": 187, "acbd": 187, "adbc": 187, "bacd": 187, "bcda": 187, "cdba": 187, "dcab": 187, "abdec": 187, "bcdea": 187, "cdeba": 187, "decab": 187, "abcdef": 187, "abdfc": 187, "acbdef": 187, "abdefc": 187, "defcab": 187, "abcdf": 187, "abcdefg": 187, "abcdegf": 187, "abcdefgh": 187, "abcdefhg": 187, "abcdefghi": 187, "abcdefgih": 187, "abcdefghij": 187, "abcdefghji": 187, "abcdefghijk": 187, "abcdefghikj": 187, "abcdefghijkl": 187, "abcdefghijlk": 187, "cn": [187, 288], "tn": 187, "nt": 187, "nwc": 187, "chwn": [187, 371], "oi": [187, 229, 359], "io": [187, 230, 360], "oiw": 187, "owi": 187, "wio": 187, "iwo": 187, "oihw": [187, 219, 220, 221, 222, 224, 244, 249, 250, 349, 350, 351, 352, 355, 383, 394, 395], "hwio": 187, "ohwi": 187, "ihwo": 187, "iohw": 187, "oidhw": 187, "dhwio": 187, "odhwi": 187, "iodhw": 187, "idhwo": 187, "goiw": 187, "gowi": 187, "wigo": 187, "gohwi": 187, "goihw": [187, 219, 224, 355], "giohw": 187, "goidhw": 187, "giodhw": 187, "godhwi": 187, "dhwigo": 187, "ntc": 187, "ldigo": [187, 214, 232, 233, 247, 256, 340, 363, 364, 390, 406], "ldgoi": 187, "ldio": 187, "ldoi": 187, "ldgo": [187, 214, 232, 233, 247, 256, 340, 363, 364, 390, 406], "ab16b16a": 187, "ab16b32a": 187, "ab16b48a": 187, "ab16b64a": 187, "ab8b16a2b": 187, "ab8b32a2b": 187, "ab8b64a2b": 187, "ab4b16a4b": 187, "ab4b32a4b": 187, "ab4b64a4b": 187, "ab16b16a4b": 187, "ab16b32a4b": 187, "ab16b48a4b": 187, "ab16b64a4b": 187, "ab16b16a2b": 187, "ab16b32a2b": 187, "ab16b48a2b": 187, "ab16b64a2b": 187, "ab4a": 187, "ab8a": 187, "abc16a": 187, "abc16a16b": 187, "abc4a4b": 187, "abc16b": 187, "abc32b": 187, "abc16b16a": 187, "acb16b16a": 187, "abc16b32a": 187, "acb16b32a": 187, "abc16b48a": 187, "acb16b48a": 187, "abc16b64a": 187, "acb16b64a": 187, "abc4a": 187, "abc4b": 187, "abc4b16a4b": 187, "acb4b16a4b": 187, "abc4b32a4b": 187, "acb4b32a4b": 187, "abc4b64a4b": 187, "acb4b64a4b": 187, "abc2b8a4b": 187, "abc16a16b2a": 187, "abc16b16a4b": 187, "abc16b32a4b": 187, "abc16b48a4b": 187, "abc16b64a4b": 187, "abc16b16a2b": 187, "abc16b32a2b": 187, "abc16b48a2b": 187, "abc16b64a2b": 187, "abc4b4a": 187, "abc8a16b2a": 187, "abc8a8b": 187, "abc8a4b": 187, "abc8b": 187, "abc8b16a2b": 187, "acb8b16a2b": 187, "abc8b32a2b": 187, "acb8b32a2b": 187, "abc8b64a2b": 187, "acb8b64a2b": 187, "abc8b8a": 187, "acb8b8a": 187, "abcd8a": 187, "abcd16a": 187, "abcd32a": 187, "abcd16a16b": 187, "abcd32b": 187, "acdb16b16a": 187, "abcd16b32a": 187, "acdb16b32a": 187, "abcd16b48a": 187, "acdb16b48a": 187, "abcd16b64a": 187, "acdb16b64a": 187, "abcd16b16c": 187, "abcd16c16b": 187, "abcd4a": 187, "abcd4b": 187, "abcd4b16a4b": 187, "acdb4b16a4b": 187, "abcd4b32a4b": 187, "acdb4b32a4b": 187, "abcd4b64a4b": 187, "acdb4b64a4b": 187, "abcd2b8a4b": 187, "abcd4b4a": 187, "abcd4a4b": 187, "abcd4c16b4c": 187, "abcd2c8b4c": 187, "abcd16a16b2a": 187, "abcd16b16a4b": 187, "abcd16b32a4b": 187, "abcd16b48a4b": 187, "abcd16b64a4b": 187, "abcd16b16a2b": 187, "abcd16b32a2b": 187, "abcd16b48a2b": 187, "abcd16b64a2b": 187, "abcd16b16c2b": 187, "abcd16c16b4c": 187, "abcd16c16b2c": 187, "abcd4c4b": 187, "abcd4b4c": 187, "abcd8a16b2a": 187, "abcd8a8b": 187, "abcd8a4b": 187, "abcd8a2b": 187, "abcd8b": [187, 394], "abcd8b16a2b": 187, "acdb8b16a2b": 187, "abcd8b32a2b": 187, "acdb8b32a2b": 187, "abcd8b64a2b": 187, "acdb8b64a2b": 187, "abcd8b16c2b": 187, "abcd8b8a": [187, 394], "acdb8b8a": 187, "abcd8b8c": 187, "abcd8b4c": 187, "abcd8c16b2c": 187, "abcd8c8b": 187, "abcde16a": 187, "abcde32a": 187, "abcde16a16b": 187, "abcde16b": 187, "abcde32b": 187, "abcde16b16a": 187, "acdeb16b16a": 187, "abcde16b32a": 187, "acdeb16b32a": 187, "abcde16b48a": 187, "acdeb16b48a": 187, "abcde16b64a": 187, "acdeb16b64a": 187, "abcde16b16c": 187, "abcde16c16b": 187, "abcde2c8b4c": 187, "abcde4a": 187, "abcde4b": 187, "abcde4b4a": 187, "abcde4a4b": 187, "abcde4b4c": 187, "abcde4c16b4c": 187, "abcde16b16c2b": 187, "abcde16c16b4c": 187, "abcde16c16b2c": 187, "abcdef16c16b2c": 187, "abcde4c4b": 187, "abcde8a": 187, "abcde8a8b": 187, "abcde8a4b": 187, "abcde8b": 187, "abcde8b16a2b": 187, "acdeb8b16a2b": 187, "abcde8b32a2b": 187, "acdeb8b32a2b": 187, "abcde8b64a2b": 187, "acdeb8b64a2b": 187, "abcde4b16a4b": 187, "acdeb4b16a4b": 187, "abcde4b32a4b": 187, "acdeb4b32a4b": 187, "abcde4b64a4b": 187, "acdeb4b64a4b": 187, "abcde16b16a4b": 187, "abcde16b32a4b": 187, "abcde16b48a4b": 187, "abcde16b64a4b": 187, "abcde16b16a2b": 187, "abcde16b32a2b": 187, "abcde16b48a2b": 187, "abcde16b64a2b": 187, "abcde2b8a4b": 187, "abcde8b16c2b": 187, "abcde8b8a": 187, "acdeb8b8a": 187, "abcde8b8c": 187, "abcde8b4c": 187, "abcd4a8b8a4b": 187, "abcd2a8b8a2b": 187, "abcde4b8c8b4c": 187, "abcde2b8c8b2c": 187, "abcde8c16b2c": 187, "abcde8c8b": 187, "abcdef16b": 187, "abcdef16b16c": 187, "abcdef16c16b": 187, "abcdef4b": 187, "abcdef2c8b4c": 187, "abcdef4c4b": 187, "abcdef4b4c": 187, "abcdef8b8c": 187, "abcdef8b4c": 187, "abcdef8c16b2c": 187, "abcdef4c16b4c": 187, "abcdef8c8b": 187, "abdc16b": 187, "abdc4b": 187, "abdc8b": 187, "abdc8b2c": 187, "abdc8b4c": 187, "abdec16b": 187, "abdec4b": 187, "abdec8b": 187, "abdec8b2c": 187, "abdec8b4c": 187, "abdefc16b": 187, "acbdef16c16b": 187, "acbdef16b16c": 187, "abdefc4b": 187, "abdefc8b": 187, "abdefc8b2c": 187, "abdefc8b4c": 187, "acb16a": 187, "acb4a": 187, "acb8a": 187, "acb8a2b": 187, "acb8a4b": 187, "acbd16b16c": 187, "acbd16c16b": 187, "acbde16b16c": 187, "acbde16c16b": 187, "acdb16a": [187, 395], "acdb4a": 187, "acdb8a": 187, "acdb8a2b": 187, "acdb8a4b": 187, "acdeb16a": 187, "acdeb4a": 187, "acdeb8a": 187, "acdeb8a2b": 187, "acdeb8a4b": 187, "bac16a16b": 187, "bac16b16a": 187, "bacd16a16b": 187, "bacd16b16a": 187, "abcd32a32b": 187, "bacde16b16a": 187, "bacde16a16b": 187, "abdec32b": 187, "abcdef16a": 187, "abcdef32a": 187, "acdb32a": 187, "abcd2b4c2b": 187, "abcde2b4c2b": 187, "abcdef2b4c2b": 187, "abcd2c4b2c": 187, "abcde2c4b2c": 187, "abcdef2c4b2c": 187, "abcd4b8c2b": 187, "abcde4b8c2b": 187, "abcdef4b8c2b": 187, "abcd4c8b2c": 187, "abcde4c8b2c": 187, "abcdef4c8b2c": 187, "ab32a32b8a4b": 187, "ab32a32b8a2b": 187, "ab8a4b": 187, "ab8a2b": 187, "abdc16d": 187, "abdc32d": 187, "abdc32d4c": 187, "abcd32c": 187, "abdec16": 187, "abdec32": 187, "abdec32e2c": 187, "abdec32e4c": 187, "abdce16c": 187, "abdce32c": 187, "abdce32c2": 187, "abcdef16c16b4c": 187, "abdc16b4c": 187, "abdec16b4c": 187, "acb16a4b": 187, "acdb16a2b": 187, "abdefc16b4c": 187, "acdeb16a4b": 187, "acb32a": 187, "acb32a2b": 187, "acb32a4b": 187, "acb48a": 187, "acb48a2b": 187, "acb48a4b": 187, "acb64a": 187, "acb64a2b": 187, "acb64a4b": 187, "cba2b": 187, "cba4b": 187, "abdc32b": 187, "abdc32b2c": 187, "abdc32b4c": 187, "abdc48b": 187, "abdc48b2c": 187, "abdc48b4c": 187, "abdc64b": 187, "abdc64b2c": 187, "abdc64b4c": 187, "adcb": 187, "adcb2c": 187, "adcb4c": 187, "acdb32a2b": 187, "acdb32a4b": 187, "acdb48a": 187, "acdb48a2b": 187, "acdb48a4b": 187, "acdb64a": 187, "acdb64a2b": 187, "acdb64a4b": 187, "cdba2b": 187, "cdba4b": 187, "abdec32b2c": 187, "abdec32b4c": 187, "abdec48b": 187, "abdec48b2c": 187, "abdec48b4c": 187, "abdec64b": 187, "abdec64b2c": 187, "abdec64b4c": 187, "adecb": 187, "adecb2c": 187, "adecb4c": 187, "acdeb32a": 187, "acdeb32a2b": 187, "acdeb32a4b": 187, "acdeb48a": 187, "acdeb48a2b": 187, "acdeb48a4b": 187, "acdeb64a": 187, "acdeb64a2b": 187, "acdeb64a4b": 187, "cdeba2b": 187, "cdeba4b": 187, "abdefc32b": 187, "abdefc32b2c": 187, "abdefc32b4c": 187, "abdefc48b": 187, "abdefc48b2c": 187, "abdefc48b4c": 187, "abdefc64b": 187, "abdefc64b2c": 187, "abdefc64b4c": 187, "adefcb": 187, "adefcb2c": 187, "adefcb4c": 187, "abc32a32b": 187, "bac8a16b2a": 187, "bacd8a16b2a": 187, "abcde8a16b2a": 187, "acbd8b16c2b": 187, "bacde8a16b2a": 187, "acbde8b16c2b": 187, "abcde32a32b": 187, "abc4a8b8a4b": 187, "abcde4a8b8a4b": 187, "bac4b8a8b4a": 187, "bacd4b8a8b4a": 187, "bacde4b8a8b4a": 187, "abcd4b8c8b4c": 187, "abcdef4b8c8b4c": 187, "abcdef8b16c2b": 187, "acbdef8b16c2b": 187, "abdc16b2c": 187, "abdec16b2c": 187, "abdefc16b2c": 187, "abedc16b": 187, "acb16a2b": 187, "acdb16a4b": 187, "acdeb16a2b": 187, "adcb16a": 187, "acbd4c8b8c4b": 187, "acbde4c8b8c4b": 187, "acbdef4c8b8c4b": 187, "abc32a16b": 187, "abcd16a32b": 187, "abcd32a16b": 187, "abcde32a16b": 187, "ab48a16b": 187, "ab48a32b": 187, "abc40a16b": 187, "abc40a32b": 187, "abc48b16c": 187, "abc48b32c": 187, "abcd40a16b": 187, "abcd40a32b": 187, "ba16a16b": 187, "ba16a32b": 187, "ba16a48b": 187, "ba16a64b": 187, "ba16a16b2a": 187, "ba16a32b2a": 187, "ba16a48b2a": 187, "ba16a64b2a": 187, "ba16a16b4a": 187, "ba16a32b4a": 187, "ba16a48b4a": 187, "ba16a64b4a": 187, "decba16a": 187, "decba8a": 187, "defcba16a": 187, "defcba8a": 187, "acb16b16c": 187, "acb16b32c": 187, "acb16b48c": 187, "acb16b64c": 187, "acb16b16c2b": 187, "acb16b32c2b": 187, "acb16b48c2b": 187, "acb16b64c2b": 187, "acb16b16c4b": 187, "acb16b32c4b": 187, "acb16b48c4b": 187, "acb16b64c4b": 187, "acb24a": 187, "acdb24a": 187, "acdeb24a": 187, "abdc24b": 187, "abdec24b": 187, "abdefc24b": 187, "acb24a2b": 187, "acdb24a2b": 187, "acdeb24a2b": 187, "abdc24b2c": 187, "abdec24b2c": 187, "abdefc24b2c": 187, "acb24a4b": 187, "acdb24a4b": 187, "acdeb24a4b": 187, "abdc24b4c": 187, "abdec24b4c": 187, "abdefc24b4c": 187, "ab8b32a": 187, "abc8b32a": 187, "acb8b32a": 187, "abcd8b32a": 187, "acdb8b32a": 187, "abcde8b32a": 187, "acdeb8b32a": 187, "ab8b24a": 187, "abc8b24a": 187, "acb8b24a": 187, "abcd8b24a": 187, "acdb8b24a": 187, "abcde8b24a": 187, "acdeb8b24a": 187, "ab8b16a": 187, "abc8b16a": 187, "acb8b16a": 187, "abcd8b16a": 187, "acdb8b16a": 187, "abcde8b16a": 187, "acdeb8b16a": 187, "ab8b8a": 187, "format_tag_last": 187, "ncdhw16c": 187, "ncdhw4c": 187, "ncdhw8c": 187, "nchw4c": 187, "ncw16c": 187, "ncw4c": 187, "ncw8c": 187, "ncw16n16c": 187, "nchw16n16c": 187, "ncdhw16n16c": 187, "ncdhw32n32c": 187, "nchw32n32c": 187, "iohw16i16o": 187, "oi16i16o": 187, "oi16i32o": 187, "oi16i48o": 187, "oi16i64o": 187, "oi8i16o2i": 187, "oi8i32o2i": 187, "oi8i64o2i": 187, "oi4i8o4i": 187, "oi4i16o4i": 187, "oi4i24o4i": 187, "oi4i32o4i": 187, "oi4i64o4i": 187, "ohwi32o": 187, "iodhw16i16o": 187, "giohw16i16o": 187, "gohwi32o": 187, "goidhw16g": 187, "iow16o16i": 187, "oiw16i16o": 187, "owi16i16o": 187, "oiw16i32o": 187, "owi16i32o": 187, "oiw16i48o": 187, "owi16i48o": 187, "oiw16i64o": 187, "owi16i64o": 187, "iow16i16o": 187, "giow16i16o": 187, "oiw16o16i": 187, "oiw16o": 187, "oiw4i8o4i": 187, "owi4i8o4i": 187, "oiw4i16o4i": 187, "owi4i16o4i": 187, "oiw4i24o4i": 187, "owi4i24o4i": 187, "oiw4i32o4i": 187, "owi4i32o4i": 187, "oiw4i64o4i": 187, "owi4i64o4i": 187, "oiw2i8o4i": 187, "oiw4i4o": 187, "oiw4o4i": 187, "oiw4o": 187, "oiw8i16o2i": 187, "owi8i16o2i": 187, "oiw8i32o2i": 187, "owi8i32o2i": 187, "oiw8i64o2i": 187, "owi8i64o2i": 187, "oiw8i8o": 187, "owi8i8o": 187, "oiw8o16i2o": 187, "oiw8o8i": 187, "oiw8o4i": 187, "oiw16i16o4i": 187, "oiw16i32o4i": 187, "oiw16i48o4i": 187, "oiw16i64o4i": 187, "oiw16i16o2i": 187, "oiw16i32o2i": 187, "oiw16i48o2i": 187, "oiw16i64o2i": 187, "oiw16o16i2o": 187, "owi16o": 187, "owi16o2i": 187, "iwo16i": 187, "iwo16i2o": 187, "iwo16i4o": 187, "owi4o": 187, "owi8o": 187, "owi8o2i": 187, "owi8o4i": 187, "iohw16o16i": 187, "ohwi16o": 187, "ohwi16o2i": 187, "ihwo16i": 187, "ihwo16i2o": 187, "ihwo16i4o": 187, "ohwi4o": 187, "ohwi8o": 187, "ohwi8o2i": 187, "ohwi8o4i": 187, "oihw16i16o": 187, "ohwi16i16o": 187, "oihw16i32o": 187, "ohwi16i32o": 187, "oihw16i48o": 187, "ohwi16i48o": 187, "oihw16i64o": 187, "ohwi16i64o": 187, "oihw16o16i": 187, "oihw16o": 187, "oihw4i8o4i": 187, "ohwi4i8o4i": 187, "oihw4i16o4i": 187, "ohwi4i16o4i": 187, "oihw4i24o4i": 187, "ohwi4i24o4i": 187, "oihw4i32o4i": 187, "ohwi4i32o4i": 187, "oihw4i64o4i": 187, "ohwi4i64o4i": 187, "oihw4i4o": 187, "oihw4o4i": 187, "oihw4o": 187, "oihw8i16o2i": 187, "ohwi8i16o2i": 187, "oihw8i32o2i": 187, "ohwi8i32o2i": 187, "oihw8i64o2i": 187, "ohwi8i64o2i": 187, "oihw8i8o": 187, "ohwi8i8o": 187, "oihw8o16i2o": 187, "oihw8o8i": 187, "oihw8o4i": 187, "oihw2i8o4i": 187, "iodhw16o16i": 187, "odhwi16o": 187, "odhwi16o2i": 187, "idhwo16i": 187, "idhwo16i2o": 187, "idhwo16i4o": 187, "odhwi4o": 187, "odhwi8o": 187, "odhwi8o2i": 187, "odhwi8o4i": 187, "oidhw16i16o": 187, "odhwi16i16o": 187, "oidhw16i32o": 187, "odhwi16i32o": 187, "oidhw16i48o": 187, "odhwi16i48o": 187, "oidhw16i64o": 187, "odhwi16i64o": 187, "oidhw16o16i": 187, "oidhw16o16i2o": 187, "oidhw16o": 187, "oidhw4i4o": 187, "oidhw4o4i": 187, "oidhw4o": 187, "oidhw8i16o2i": 187, "odhwi8i16o2i": 187, "oidhw8i32o2i": 187, "odhwi8i32o2i": 187, "oidhw8i64o2i": 187, "odhwi8i64o2i": 187, "oidhw4i8o4i": 187, "odhwi4i8o4i": 187, "oidhw4i16o4i": 187, "odhwi4i16o4i": 187, "oidhw16i16o4i": 187, "oidhw16i32o4i": 187, "oidhw16i48o4i": 187, "oidhw16i64o4i": 187, "oidhw16i16o2i": 187, "oidhw16i32o2i": 187, "oidhw16i48o2i": 187, "oidhw16i64o2i": 187, "oidhw4i24o4i": 187, "odhwi4i24o4i": 187, "oidhw4i32o4i": 187, "odhwi4i32o4i": 187, "oidhw4i64o4i": 187, "odhwi4i64o4i": 187, "oidhw2i8o4i": 187, "oidhw8i8o": 187, "odhwi8i8o": 187, "oidhw8o8i": 187, "oidhw8o4i": 187, "giow16o16i": 187, "goiw16i16o": 187, "goiw16o16i": 187, "goiw16o": 187, "goiw4i16o4i": 187, "goiw2i8o4i": 187, "goiw4i4o": 187, "goiw4o4i": 187, "goiw4o": 187, "goiw8i16o2i": 187, "goiw8i8o": 187, "goiw8o16i2o": 187, "goiw8o8i": 187, "goiw8o4i": 187, "goiw16i16o4i": 187, "goiw16i16o2i": 187, "goiw16o16i2o": 187, "gowi16o": 187, "gowi16o2i": 187, "giwo16i": 187, "giwo16i2o": 187, "giwo16i4o": 187, "gowi4o": 187, "gowi8o": 187, "gowi8o2i": 187, "gowi8o4i": 187, "goiw8g": 187, "goiw16g": 187, "giohw16o16i": 187, "gohwi16o": 187, "gohwi16o2i": 187, "gihwo16i": 187, "gihwo16i2o": 187, "gihwo16i4o": 187, "gohwi4o": 187, "gohwi8o": 187, "gohwi8o2i": 187, "gohwi8o4i": 187, "goihw16g": 187, "goihw16i16o": 187, "goihw16o16i": 187, "goihw16o": 187, "goihw4i16o4i": 187, "goihw2i8o4i": 187, "goihw4i4o": 187, "goihw4o4i": 187, "goihw4o": 187, "goihw8g": 187, "goihw8i16o2i": 187, "goihw8i8o": 187, "goihw8o16i2o": 187, "oiw4o8i8o4i": 187, "oidhw4o8i8o4i": 187, "oihw4o8i8o4i": 187, "oihw2o8i8o2i": 187, "goiw4o8i8o4i": 187, "goidhw4o8i8o4i": 187, "goihw4o8i8o4i": 187, "goihw2o8i8o2i": 187, "oihw16i16o4i": 187, "oihw16i32o4i": 187, "oihw16i48o4i": 187, "oihw16i64o4i": 187, "oihw16i16o2i": 187, "oihw16i32o2i": 187, "oihw16i48o2i": 187, "oihw16i64o2i": 187, "oihw16o16i2o": 187, "goihw16i16o4i": 187, "goihw16i16o2i": 187, "goihw16o16i2o": 187, "goihw8o8i": 187, "goihw8o4i": 187, "giodhw16i16o": 187, "giodhw16o16i": 187, "godhwi16o": 187, "godhwi16o2i": 187, "gidhwo16i": 187, "gidhwo16i2o": 187, "gidhwo16i4o": 187, "godhwi4o": 187, "godhwi8o": 187, "godhwi8o2i": 187, "godhwi8o4i": 187, "goidhw16i16o": 187, "goidhw16o16i": 187, "goidhw16o16i2o": 187, "goidhw16o": 187, "goidhw4i4o": 187, "goidhw4o4i": 187, "goidhw4o": 187, "goidhw8i16o2i": 187, "goidhw4i16o4i": 187, "goidhw16i16o4i": 187, "goidhw16i16o2i": 187, "goidhw2i8o4i": 187, "goidhw8i8o": 187, "goidhw8o8i": 187, "goidhw8o4i": 187, "goiw2i4o2i": 187, "goihw2i4o2i": 187, "goidhw2i4o2i": 187, "goiw2o4i2o": 187, "goihw2o4i2o": 187, "goidhw2o4i2o": 187, "goiw4i8o2i": 187, "goihw4i8o2i": 187, "goidhw4i8o2i": 187, "goiw4o8i2o": 187, "goihw4o8i2o": 187, "goidhw4o8i2o": 187, "ldoi16o": 187, "ldoi32o": 187, "ldoi32o4i": 187, "ldgoi16o": 187, "ldgoi32o": 187, "ldgoi32o2i": 187, "ldgoi32o4i": 187, "owi16o4i": 187, "ohwi16o4i": 187, "gowi16o4i": 187, "gohwi16o4i": 187, "odhwi16o4i": 187, "godhwi16o4i": 187, "owi32o": 187, "owi32o2i": 187, "owi32o4i": 187, "owi48o": 187, "owi48o2i": 187, "owi48o4i": 187, "owi64o": 187, "owi64o2i": 187, "owi64o4i": 187, "iwo32i": 187, "iwo32i2o": 187, "iwo32i4o": 187, "iwo48i": 187, "iwo48i2o": 187, "iwo48i4o": 187, "iwo64i": 187, "iwo64i2o": 187, "iwo64i4o": 187, "wio2i": 187, "wio4i": 187, "gowi32o": 187, "gowi32o2i": 187, "gowi32o4i": 187, "gowi48o": 187, "gowi48o2i": 187, "gowi48o4i": 187, "gowi64o": 187, "gowi64o2i": 187, "gowi64o4i": 187, "giwo32i": 187, "giwo32i2o": 187, "giwo32i4o": 187, "giwo48i": 187, "giwo48i2o": 187, "giwo48i4o": 187, "giwo64i": 187, "giwo64i2o": 187, "giwo64i4o": 187, "gwio": 187, "gwio2i": 187, "gwio4i": 187, "ohwi32o2i": 187, "ohwi32o4i": 187, "ohwi48o": 187, "ohwi48o2i": 187, "ohwi48o4i": 187, "ohwi64o": 187, "ohwi64o2i": 187, "ohwi64o4i": 187, "ihwo32i": 187, "ihwo32i2o": 187, "ihwo32i4o": 187, "ihwo48i": 187, "ihwo48i2o": 187, "ihwo48i4o": 187, "ihwo64i": 187, "ihwo64i2o": 187, "ihwo64i4o": 187, "hwio2i": 187, "hwio4i": 187, "gohwi32o2i": 187, "gohwi32o4i": 187, "gohwi48o": 187, "gohwi48o2i": 187, "gohwi48o4i": 187, "gohwi64o": 187, "gohwi64o2i": 187, "gohwi64o4i": 187, "gihwo32i": 187, "gihwo32i2o": 187, "gihwo32i4o": 187, "gihwo48i": 187, "gihwo48i2o": 187, "gihwo48i4o": 187, "gihwo64i": 187, "gihwo64i2o": 187, "gihwo64i4o": 187, "ghwio": 187, "ghwio2i": 187, "ghwio4i": 187, "odhwi32o": 187, "odhwi32o2i": 187, "odhwi32o4i": 187, "odhwi48o": 187, "odhwi48o2i": 187, "odhwi48o4i": 187, "odhwi64o": 187, "odhwi64o2i": 187, "odhwi64o4i": 187, "idhwo32i": 187, "idhwo32i2o": 187, "idhwo32i4o": 187, "idhwo48i": 187, "idhwo48i2o": 187, "idhwo48i4o": 187, "idhwo64i": 187, "idhwo64i2o": 187, "idhwo64i4o": 187, "dhwio2i": 187, "dhwio4i": 187, "godhwi32o": 187, "godhwi32o2i": 187, "godhwi32o4i": 187, "godhwi48o": 187, "godhwi48o2i": 187, "godhwi48o4i": 187, "godhwi64o": 187, "godhwi64o2i": 187, "godhwi64o4i": 187, "gidhwo32i": 187, "gidhwo32i2o": 187, "gidhwo32i4o": 187, "gidhwo48i": 187, "gidhwo48i2o": 187, "gidhwo48i4o": 187, "gidhwo64i": 187, "gidhwo64i2o": 187, "gidhwo64i4o": 187, "gdhwio": 187, "gdhwio2i": 187, "gdhwio4i": 187, "ldio32i": 187, "ldgio16i": 187, "ldgio32i": 187, "ldgio32i2o": 187, "ncdhw32c": 187, "nchw32c": 187, "ncw32c": 187, "ncw32n16c": 187, "nchw32n16c": 187, "ncdhw32n16c": 187, "ncw32n32c": 187, "oi16i16o4i": 187, "iow8o16i2o": 187, "iohw8o16i2o": 187, "owhi16o": 187, "oidhw8o16i2o": 187, "iodhw8o16i2o": 187, "goiw4g": 187, "giow8o16i2o": 187, "goiw32g": 187, "goihw4g": 187, "giohw8o16i2o": 187, "goihw32g": 187, "gowhi16o": 187, "iow4i8o8i4o": 187, "iohw4i8o8i4o": 187, "iodhw4i8o8i4o": 187, "giow4i8o8i4o": 187, "giohw4i8o8i4o": 187, "giodhw4i8o8i4o": 187, "goidhw8o16i2o": 187, "giodhw8o16i2o": 187, "goidhw32g": 187, "oi16i32o4i": 187, "oi16i48o4i": 187, "oi16i64o4i": 187, "oi16i16o2i": 187, "oi16i32o2i": 187, "oi16i48o2i": 187, "oi16i64o2i": 187, "abdec16c16b4c": 187, "acb16b16a2b": 187, "abdc16c16b2c": 187, "acb16b16a4b": 187, "abdc16c16b4c": 187, "acdb16b16a2b": 187, "abdefc16c16b4c": 187, "acdeb16b16a4b": 187, "acb16b32a2b": 187, "acb16b32a4b": 187, "acb16b48a2b": 187, "acb16b48a4b": 187, "acb16b64a2b": 187, "acb16b64a4b": 187, "abdc16c32b2c": 187, "abdc16c32b4c": 187, "abdc16c48b2c": 187, "abdc16c48b4c": 187, "abdc16c64b2c": 187, "abdc16c64b4c": 187, "acdb16b32a2b": 187, "acdb16b32a4b": 187, "acdb16b48a2b": 187, "acdb16b48a4b": 187, "acdb16b64a2b": 187, "acdb16b64a4b": 187, "abdec16c32b2c": 187, "abdec16c32b4c": 187, "abdec16c48b2c": 187, "abdec16c48b4c": 187, "abdec16c64b2c": 187, "abdec16c64b4c": 187, "acdeb16b32a2b": 187, "acdeb16b32a4b": 187, "acdeb16b48a2b": 187, "acdeb16b48a4b": 187, "acdeb16b64a2b": 187, "acdeb16b64a4b": 187, "abdefc16c32b2c": 187, "abdefc16c32b4c": 187, "abdefc16c48b2c": 187, "abdefc16c48b4c": 187, "abdefc16c64b2c": 187, "abdefc16c64b4c": 187, "owi16i16o2i": 187, "gowi16i16o2i": 187, "ohwi16i16o2i": 187, "gohwi16i16o2i": 187, "odhwi16i16o2i": 187, "godhwi16i16o2i": 187, "owi16i16o4i": 187, "gowi16i16o4i": 187, "ohwi16i16o4i": 187, "gohwi16i16o4i": 187, "odhwi16i16o4i": 187, "godhwi16i16o4i": 187, "owi16i32o2i": 187, "owi16i32o4i": 187, "owi16i48o2i": 187, "owi16i48o4i": 187, "owi16i64o2i": 187, "owi16i64o4i": 187, "gowi16i32o2i": 187, "gowi16i32o4i": 187, "gowi16i48o2i": 187, "gowi16i48o4i": 187, "gowi16i64o2i": 187, "gowi16i64o4i": 187, "ohwi16i32o2i": 187, "ohwi16i32o4i": 187, "ohwi16i48o2i": 187, "ohwi16i48o4i": 187, "ohwi16i64o2i": 187, "ohwi16i64o4i": 187, "gohwi16i32o2i": 187, "gohwi16i32o4i": 187, "gohwi16i48o2i": 187, "gohwi16i48o4i": 187, "gohwi16i64o2i": 187, "gohwi16i64o4i": 187, "odhwi16i32o2i": 187, "odhwi16i32o4i": 187, "odhwi16i48o2i": 187, "odhwi16i48o4i": 187, "odhwi16i64o2i": 187, "odhwi16i64o4i": 187, "idhwo16o32i2o": 187, "idhwo16o32i4o": 187, "idhwo16o48i2o": 187, "idhwo16o48i4o": 187, "idhwo16o64i2o": 187, "idhwo16o64i4o": 187, "godhwi16i32o2i": 187, "godhwi16i32o4i": 187, "godhwi16i48o2i": 187, "godhwi16i48o4i": 187, "godhwi16i64o2i": 187, "godhwi16i64o4i": 187, "gidhwo16o32i2o": 187, "gidhwo16o32i4o": 187, "gidhwo16o48i2o": 187, "gidhwo16o48i4o": 187, "gidhwo16o64i2o": 187, "gidhwo16o64i4o": 187, "iwo16o16i2o": 187, "iwo16o16i4o": 187, "ihwo16o16i2o": 187, "ihwo16o16i4o": 187, "idhwo16o16i2o": 187, "idhwo16o16i4o": 187, "giwo16o16i2o": 187, "giwo16o16i4o": 187, "gihwo16o16i2o": 187, "gihwo16o16i4o": 187, "gidhwo16o16i2o": 187, "gidhwo16o16i4o": 187, "iwo16o32i2o": 187, "iwo16o32i4o": 187, "iwo16o48i2o": 187, "iwo16o48i4o": 187, "iwo16o64i2o": 187, "iwo16o64i4o": 187, "giwo16o32i2o": 187, "giwo16o32i4o": 187, "giwo16o48i2o": 187, "giwo16o48i4o": 187, "giwo16o64i2o": 187, "giwo16o64i4o": 187, "ihwo16o32i2o": 187, "ihwo16o32i4o": 187, "ihwo16o48i2o": 187, "ihwo16o48i4o": 187, "ihwo16o64i2o": 187, "ihwo16o64i4o": 187, "gihwo16o32i2o": 187, "gihwo16o32i4o": 187, "gihwo16o48i2o": 187, "gihwo16o48i4o": 187, "gihwo16o64i2o": 187, "gihwo16o64i4o": 187, "abdec16c16b2c": 187, "abdefc16c16b2c": 187, "acdb16b16a4b": 187, "acdeb16b16a2b": 187, "hwiog16g": 187, "hwiog8g": 187, "dhwiog16g": 187, "dhwiog8g": 187, "abc4a2b": 187, "abc8a2b": 187, "abcd4a2b": 187, "abcde4a2b": 187, "abcde8a2b": 187, "abcd4a8b8a2b": 187, "ncdhw40n32c": 187, "nchw40n32c": 187, "ncw40n32c": 187, "oidhw4o8i8o2i": 187, "oihw4o8i8o2i": 187, "oiw4o8i8o2i": 187, "goidhw4o8i8o2i": 187, "goihw4o8i8o2i": 187, "goiw4o8i8o2i": 187, "iodhw4i8o8i2o": 187, "iohw4i8o8i2o": 187, "iow4i8o8i2o": 187, "giodhw4i8o8i2o": 187, "giohw4i8o8i2o": 187, "giow4i8o8i2o": 187, "abcd8b2c": 187, "abcde40a16b": 187, "abcde40a32b": 187, "abcde8b2c": 187, "abcde4a8b8a2b": 187, "abc4a8b8a2b": 187, "abcdef4b8c8b2c": 187, "abcde4b8c8b2c": 187, "abcd4b8c8b2c": 187, "bacde4b8a8b2a": 187, "bacd4b8a8b2a": 187, "bac4b8a8b2a": 187, "acbdef4c8b8c2b": 187, "acbde4c8b8c2b": 187, "acbd4c8b8c2b": 187, "abcdef8b2c": 187, "ab32a16b": 187, "ab32a32b": 187, "ba4b8a8b2a": 187, "ba4b8a8b4a": 187, "abc32b16c": 187, "abc32b32c": 187, "acb4c8b8c2b": 187, "acb4c8b8c4b": 187, "abc2b8a16b4a": 187, "abcd2b8a16b4a": 187, "abcde2b8a16b4a": 187, "abc2a8b16a4b": 187, "abc2a8b16a2b": 187, "abc2b32a8b": 187, "abcd2a8b16a4b": 187, "abcd2a8b16a2b": 187, "acbd2c8b16c2b": 187, "abcd2b32a8b": 187, "abcd2c8b16c2b": 187, "abcde2a8b16a4b": 187, "abcde2a8b16a2b": 187, "acbde2c8b16c2b": 187, "abcde2b32a8b": 187, "abc2b8c16b2c": 187, "abcd2b8c16b2c": 187, "abcde2b8c16b2c": 187, "abcdef2b8c16b2c": 187, "bacde2b8a16b4a": 187, "bacd2b8a16b4a": 187, "bac2b8a16b4a": 187, "bacde2b8a16b2a": 187, "bacd2b8a16b2a": 187, "bac2b8a16b2a": 187, "abcde2c8b16c2b": 187, "abcdef2c8b16c2b": 187, "acbdef2c8b16c2b": 187, "abcd2b8c16b4c": 187, "abcde2b8c16b4c": 187, "ncdhw40n16c": 187, "ncw40n16c": 187, "nchw40n16c": 187, "ncw2c32n8c": 187, "nchw2c32n8c": 187, "ncdhw2c32n8c": 187, "oiw2i8o16i4o": 187, "oihw2i8o16i4o": 187, "oidhw2i8o16i4o": 187, "oiw2o8i16o4i": 187, "oiw2o8i16o2i": 187, "iow2i8o16i4o": 187, "iow2i8o16i2o": 187, "oihw2o8i16o4i": 187, "oihw2o8i16o2i": 187, "iohw2i8o16i4o": 187, "iohw2i8o16i2o": 187, "oidhw2o8i16o4i": 187, "oidhw2o8i16o2i": 187, "iodhw2i8o16i4o": 187, "iodhw2i8o16i2o": 187, "goiw2o8i16o2i": 187, "giow2i8o16i2o": 187, "giohw2i8o16i2o": 187, "giodhw2i8o16i2o": 187, "goihw2o8i16o2i": 187, "goidhw2o8i16o2i": 187, "goiw2o8i16o4i": 187, "goihw2o8i16o4i": 187, "ba4b8a16b2a": 187, "ba4b8a16b4a": 187, "acb4c8b16c2b": 187, "acb4c8b16c4b": 187, "acb16c2b": 187, "acb16c4b": 187, "ba16b2a": 187, "ba16b4a": 187, "ba4b4a": 187, "ba8b4a": 187, "abc16b16c": 187, "abc16b32c": 187, "ab16a16b": 187, "ab16a32b": 187, "abcde16a16b2a": 187, "abcdef16b16c2b": 187, "acedb16a": 187, "abdfec16b": 187, "odwhi16o": 187, "godwhi16o": 187, "abdec64e2c": 187, "abdec64e4c": 187, "ldgoi64o2i": 187, "ldgoi64o4i": 187, "abcd4c": 187, "abcde4c": 187, "abcdef4c": 187, "abcde32c": 187, "abcdef32c": 187, "acdefb16b32c2b": 187, "acdefb16b32c4b": 187, "acdefb16b48c2b": 187, "acdefb16b48c4b": 187, "acdefb16b64c2b": 187, "acdefb16b64c4b": 187, "bcdea16a32b2a": 187, "bcdea16a32b4a": 187, "bcdea16a48b2a": 187, "bcdea16a48b4a": 187, "bcdea16a64b2a": 187, "bcdea16a64b4a": 187, "acdefb32c": 187, "acdefb32c2b": 187, "acdefb32c4b": 187, "acdefb48c": 187, "acdefb48c2b": 187, "acdefb48c4b": 187, "acdefb64c": 187, "acdefb64c2b": 187, "acdefb64c4b": 187, "bcdea32b": 187, "bcdea32b2a": 187, "bcdea32b4a": 187, "bcdea48b": 187, "bcdea48b2a": 187, "bcdea48b4a": 187, "bcdea64b": 187, "bcdea64b2a": 187, "bcdea64b4a": 187, "bca32b": 187, "bca32b2a": 187, "bca32b4a": 187, "bca48b": 187, "bca48b2a": 187, "bca48b4a": 187, "bca64b": 187, "bca64b2a": 187, "bca64b4a": 187, "acdb32c": 187, "acdb32c2b": 187, "acdb32c4b": 187, "acdb48c": 187, "acdb48c2b": 187, "acdb48c4b": 187, "acdb64c": 187, "acdb64c2b": 187, "acdb64c4b": 187, "bca16a16b2a": 187, "bca16a16b4a": 187, "bcda16a16b2a": 187, "bcda16a16b4a": 187, "bcdea16a16b2a": 187, "bcdea16a16b4a": 187, "acdb16b16c2b": 187, "acdb16b16c4b": 187, "acdeb16b16c2b": 187, "acdeb16b16c4b": 187, "acdefb16b16c2b": 187, "acdefb16b16c4b": 187, "bca16a32b2a": 187, "bca16a32b4a": 187, "bca16a48b2a": 187, "bca16a48b4a": 187, "bca16a64b2a": 187, "bca16a64b4a": 187, "acdb16b32c2b": 187, "acdb16b32c4b": 187, "acdb16b48c2b": 187, "acdb16b48c4b": 187, "acdb16b64c2b": 187, "acdb16b64c4b": 187, "bcda16a32b2a": 187, "bcda16a32b4a": 187, "bcda16a48b2a": 187, "bcda16a48b4a": 187, "bcda16a64b2a": 187, "bcda16a64b4a": 187, "acdeb16b32c2b": 187, "acdeb16b32c4b": 187, "acdeb16b48c2b": 187, "acdeb16b48c4b": 187, "acdeb16b64c2b": 187, "acdeb16b64c4b": 187, "bca16b": 187, "bca16b2a": 187, "bca16b4a": 187, "bcda16b": 187, "bcda16b2a": 187, "bcda16b4a": 187, "bcdea16b": 187, "bcdea16b2a": 187, "bcdea16b4a": 187, "acdb16c": 187, "acdb16c2b": 187, "acdb16c4b": 187, "acdeb16c": 187, "acdeb16c2b": 187, "acdeb16c4b": 187, "acdefb16c": 187, "acdefb16c2b": 187, "acdefb16c4b": 187, "bcda32b": 187, "bcda32b2a": 187, "bcda32b4a": 187, "bcda48b": 187, "bcda48b2a": 187, "bcda48b4a": 187, "bcda64b": 187, "bcda64b2a": 187, "bcda64b4a": 187, "acdeb32c": 187, "acdeb32c2b": 187, "acdeb32c4b": 187, "acdeb48c": 187, "acdeb48c2b": 187, "acdeb48c4b": 187, "acdeb64c": 187, "acdeb64c2b": 187, "acdeb64c4b": 187, "nchw16n32c": 187, "goiw4i": 187, "goiw32i": 187, "goihw4i": 187, "goihw32i": 187, "goidhw4i": 187, "goidhw32i": 187, "cab": 187, "cdab": 187, "cdeab": 187, "woi": 187, "hwoi": 187, "dhwoi": 187, "owi24o": 187, "ohwi24o": 187, "odhwi24o": 187, "gowi24o": 187, "gohwi24o": 187, "godhwi24o": 187, "owi24o2i": 187, "ohwi24o2i": 187, "odhwi24o2i": 187, "gowi24o2i": 187, "gohwi24o2i": 187, "godhwi24o2i": 187, "owi24o4i": 187, "ohwi24o4i": 187, "odhwi24o4i": 187, "gowi24o4i": 187, "gohwi24o4i": 187, "godhwi24o4i": 187, "oi8i32o": 187, "oiw8i32o": 187, "owi8i32o": 187, "oihw8i32o": 187, "ohwi8i32o": 187, "oidhw8i32o": 187, "odhwi8i32o": 187, "oi8i24o": 187, "oiw8i24o": 187, "owi8i24o": 187, "oihw8i24o": 187, "ohwi8i24o": 187, "oidhw8i24o": 187, "odhwi8i24o": 187, "oi8i16o": 187, "oiw8i16o": 187, "owi8i16o": 187, "oihw8i16o": 187, "ohwi8i16o": 187, "oidhw8i16o": 187, "odhwi8i16o": 187, "oi8i8o": 187, "ab4b8a4b": 187, "ab4b24a4b": 187, "abc4b8a4b": 187, "acb4b8a4b": 187, "abc4b24a4b": 187, "acb4b24a4b": 187, "abcd4b8a4b": 187, "acdb4b8a4b": 187, "abcd4b24a4b": 187, "acdb4b24a4b": 187, "abcde4b8a4b": 187, "acdeb4b8a4b": 187, "abcde4b24a4b": 187, "acdeb4b24a4b": 187, "bca8b": 187, "bca8b2a": 187, "bcda8b": 187, "bcda8b2a": 187, "bcdea8b": 187, "bcdea8b2a": 187, "acdb8c": 187, "acdb8c2b": 187, "acdeb8c": 187, "acdeb8c2b": 187, "acdefb8c": 187, "acdefb8c2b": 187, "bca24b": 187, "bca24b2a": 187, "bcda24b": 187, "bcda24b2a": 187, "bcdea24b": 187, "bcdea24b2a": 187, "acdb24c": 187, "acdb24c2b": 187, "acdeb24c": 187, "acdeb24c2b": 187, "acdefb24c": 187, "acdefb24c2b": 187, "iwo8i": 187, "iwo8i2o": 187, "iwo24i": 187, "iwo24i2o": 187, "ihwo8i": 187, "ihwo8i2o": 187, "ihwo24i": 187, "ihwo24i2o": 187, "idhwo8i": 187, "idhwo8i2o": 187, "idhwo24i": 187, "idhwo24i2o": 187, "giwo8i": 187, "giwo8i2o": 187, "giwo24i": 187, "giwo24i2o": 187, "gihwo8i": 187, "gihwo8i2o": 187, "gihwo24i": 187, "gihwo24i2o": 187, "gidhwo8i": 187, "gidhwo8i2o": 187, "gidhwo24i": 187, "gidhwo24i2o": 187, "ab8b24a2b": 187, "abc8b24a2b": 187, "acb8b24a2b": 187, "abcd8b24a2b": 187, "acdb8b24a2b": 187, "abcde8b24a2b": 187, "acdeb8b24a2b": 187, "ab8b8a2b": 187, "abc8b8a2b": 187, "acb8b8a2b": 187, "abcd8b8a2b": 187, "acdb8b8a2b": 187, "abcde8b8a2b": 187, "acdeb8b8a2b": 187, "oi8i8o2i": 187, "oi8i24o2i": 187, "oiw8i8o2i": 187, "owi8i8o2i": 187, "oiw8i24o2i": 187, "owi8i24o2i": 187, "oihw8i8o2i": 187, "ohwi8i8o2i": 187, "oihw8i24o2i": 187, "ohwi8i24o2i": 187, "oidhw8i8o2i": 187, "odhwi8i8o2i": 187, "oidhw8i24o2i": 187, "odhwi8i24o2i": 187, "bca8b4a": 187, "bcda8b4a": 187, "bcdea8b4a": 187, "acdb8c4b": 187, "acdeb8c4b": 187, "acdefb8c4b": 187, "bca24b4a": 187, "bcda24b4a": 187, "bcdea24b4a": 187, "acdb24c4b": 187, "acdeb24c4b": 187, "acdefb24c4b": 187, "abc16a4b": 187, "abcd16a4b": 187, "abcde16a4b": 187, "iwo8i4o": 187, "iwo24i4o": 187, "ihwo8i4o": 187, "ihwo24i4o": 187, "idhwo8i4o": 187, "idhwo24i4o": 187, "giwo8i4o": 187, "giwo24i4o": 187, "gihwo8i4o": 187, "gihwo24i4o": 187, "gidhwo8i4o": 187, "gidhwo24i4o": 187, "ba2a24b": 187, "acb2b24c": 187, "ba2a8b": 187, "acb2b8c": 187, "ba8a24b": 187, "acb8b24c": 187, "ba8a16b": 187, "acb8b16c": 187, "ba8a8b": 187, "acb8b8c": 187, "bcad": 187, "cabd": 187, "dabc": 187, "dnnl_sparse_encoding_undef": [188, 207], "csr": [188, 207, 229, 288, 359, 498], "dnnl_csr": [188, 207], "dnnl_pack": [188, 207], "unstructur": [188, 207], "sparsiti": [188, 207], "use_global_stat": 189, "use_scal": [189, 215, 242, 245, 342, 379, 385], "use_shift": [189, 215, 242, 245, 342, 379, 385], "fuse_norm_relu": [189, 215, 342], "fuse_norm_add_relu": 189, "0x0u": 190, "0x1u": [190, 211], "0x2u": [190, 211], "0x4u": 190, "0x8u": 190, "0x10u": 190, "wrt": [190, 230, 360], "dnnl_ocl_interop_usm": [191, 192, 289], "dnnl_ocl_interop_buff": [191, 192, 289], "dnnl_ocl_typ": 192, "dnnl_undefined_primit": [193, 194, 270], "dnnl_reorder": [193, 194], "dnnl_shuffl": [193, 194], "dnnl_concat": [193, 194], "dnnl_sum": [193, 194, 270], "dnnl_convolut": [193, 194, 270, 504], "dnnl_deconvolut": [193, 194], "dnnl_eltwis": [193, 194, 270], "dnnl_lrn": [193, 194], "dnnl_batch_norm": [193, 194], "dnnl_inner_product": [193, 194], "dnnl_rnn": [193, 194], "dnnl_binari": [193, 194, 270, 504], "dnnl_matmul": [193, 194], "dnnl_resampl": [193, 194], "dnnl_pool": [193, 194], "dnnl_reduct": [193, 194], "dnnl_prelu": [193, 194], "dnnl_softmax": [193, 194], "dnnl_layer_norm": [193, 194], "dnnl_group_norm": [193, 194], "summat": [193, 201, 202, 535], "dnnl_gemm": 194, "dnnl_primitive_kind_max": 194, "dnnl_profiling_data_kind_undef": [195, 196], "dnnl_profiling_data_kind_tim": [195, 196], "nanosecond": [195, 196], "dnnl_prop_kind_undef": [197, 198], "dnnl_forward": [197, 198, 218, 226, 236, 348, 358, 367], "dnnl_backward_weight": [197, 198], "backward_bia": 197, "dnnl_backward_bia": [197, 198], "160": 198, "192": [198, 219, 395], "193": 198, "dnnl_query_undef": [199, 200], "dnnl_query_engin": [199, 200], "primitive_kind": 199, "dnnl_query_primitive_kind": [199, 200], "num_of_inputs_s32": 199, "dnnl_query_num_of_inputs_s32": [199, 200, 294], "num_of_outputs_s32": 199, "dnnl_query_num_of_outputs_s32": [199, 200, 294], "time_estimate_f64": 199, "dnnl_query_time_estimate_f64": [199, 200], "dnnl_query_memory_consumption_s64": [199, 200], "scratchpad_engin": [199, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "dnnl_query_scratchpad_engin": [199, 200], "reorder_src_engin": 199, "dnnl_query_reorder_src_engin": [199, 200], "reorder_dst_engin": 199, "dnnl_query_reorder_dst_engin": [199, 200], "impl_info_str": [199, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "dnnl_query_impl_info_str": [199, 200, 294], "dnnl_query_prop_kind": [199, 200], "cache_blob_id_size_s64": 199, "dnnl_query_cache_blob_id_size_s64": [199, 200], "cache_blob_id": [199, 264, 289, 332], "dnnl_query_cache_blob_id": [199, 200], "dnnl_query_dil": [199, 200], "dnnl_query_padding_l": [199, 200], "dnnl_query_padding_r": [199, 200], "epsilon_f32": 199, "dnnl_query_epsilon_f32": [199, 200], "dnnl_query_flag": [199, 200], "alg_kind": [199, 264, 270, 272, 276, 278, 279, 286, 290, 296, 298, 302], "dnnl_query_alg_kind": [199, 200], "alpha_f32": 199, "dnnl_query_alpha_f32": [199, 200], "beta_f32": 199, "dnnl_query_beta_f32": [199, 200], "axis_s32": 199, "dnnl_query_axis_s32": [199, 200], "local_size_s64": 199, "dnnl_query_local_size_s64": [199, 200], "k_f32": 199, "dnnl_query_k_f32": [199, 200], "p_f32": 199, "dnnl_query_p_f32": [199, 200], "dnnl_query_factor": [199, 200], "cell_kind": [199, 524], "dnnl_query_cell_kind": [199, 200], "dnnl_query_direct": [199, 200], "activation_kind": 199, "dnnl_query_activation_kind": [199, 200], "dnnl_query_kernel": [199, 200], "group_size_s64": 199, "dnnl_query_group_size_s64": [199, 200], "src_md": [199, 215, 217, 218, 223, 231, 238, 239, 242, 244, 245, 246, 248, 251, 252, 253, 254, 255, 257, 258, 259, 342, 346, 348, 353, 362, 369, 371, 379, 383, 385, 388, 392, 396, 398, 400, 402, 404, 407, 409, 411, 515, 519], "dnnl_query_src_md": [199, 200, 218, 226, 294, 348, 358], "diff_src_md": 199, "dnnl_query_diff_src_md": [199, 200], "dnnl_query_weights_md": [199, 200, 218, 226, 294, 348, 358], "diff_weights_md": 199, "dnnl_query_diff_weights_md": [199, 200, 226, 358], "dst_md": [199, 215, 216, 218, 229, 231, 238, 242, 244, 245, 246, 248, 251, 252, 253, 254, 255, 257, 258, 342, 344, 348, 359, 362, 369, 379, 383, 385, 388, 392, 396, 398, 400, 402, 404, 407, 409, 515, 519], "dnnl_query_dst_md": [199, 200, 218, 226, 294, 348, 358], "diff_dst_md": 199, "dnnl_query_diff_dst_md": [199, 200, 226, 358], "dnnl_query_workspace_md": [199, 200, 218, 226, 294, 348, 358], "dnnl_query_scratchpad_md": [199, 200], "dnnl_query_exec_arg_md": [199, 200, 289, 294, 305], "ndims_s32": 199, "dnnl_query_ndims_s32": [199, 200, 288], "dnnl_query_dim": [199, 200, 288], "dnnl_query_data_typ": [199, 200, 288], "submemory_offset_s64": 199, "dnnl_query_submemory_offset_s64": [199, 200, 288], "padded_dim": [199, 288, 294, 498], "dnnl_query_padded_dim": [199, 200, 288], "padded_offset": 199, "dnnl_query_padded_offset": [199, 200, 288], "dnnl_query_format_kind": [199, 200, 288], "inner_nblks_s32": 199, "dnnl_query_inner_nblks_s32": [199, 200, 288], "dnnl_query_sparse_encod": [199, 200, 288], "nnz_s64": 199, "dnnl_query_nnz_s64": [199, 200, 288], "num_handles_s32": 199, "dnnl_query_num_handles_s32": [199, 200, 288], "dnnl_query_t": [199, 264, 288, 294, 328], "estim": [199, 200], "submemori": [199, 200, 288, 498], "dnnl_query_some_md": 200, "dnnl_query_max": 200, "dnnl_primitive_desc_queri": [200, 264, 294], "dnnl_query_": 200, "_engin": 200, "dnnl_engine_t": [200, 218, 226, 236, 264, 271, 272, 275, 276, 278, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 315, 319, 321, 323, 324, 348, 358, 367], "dnnl_primitive_kind_t": [200, 264, 270, 294, 328], "_s32": 200, "_s64": 200, "_f64": 200, "_str": 200, "_md": [200, 371, 395], "const_dnnl_memory_desc_t": [200, 218, 226, 264, 270, 271, 272, 275, 276, 278, 279, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 301, 302, 304, 305, 348, 358], "_pd": [200, 371], "const_dnnl_primitive_desc_t": [200, 264, 271, 276, 278, 279, 282, 283, 285, 286, 290, 291, 294, 298, 299, 301, 302, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 499, 501, 505, 507, 510, 516, 518, 520, 522, 525, 527, 529, 531, 535, 540, 542], "dnnl_alg_kind_t": [200, 264, 270, 272, 276, 278, 279, 286, 290, 294, 296, 298, 299, 302, 328], "dnnl_rnn_direction_t": [200, 264, 299, 328], "dnnl_data_type_t": [200, 264, 270, 277, 285, 288, 308, 318, 328, 456, 496], "dnnl_format_kind_t": [200, 264, 288], "dnnl_sparse_encoding_t": [200, 264, 288], "thumb": 200, "dnnl_primitive_desc_clon": [200, 264, 294], "scratch": 200, "stub": 200, "grad": 200, "dnnl_rnn_direction_undef": [201, 202], "unidirectional_left2right": [201, 214, 232, 233, 247, 256, 340, 363, 364, 390, 406], "dnnl_unidirectional_left2right": [201, 202], "unidirectional_right2left": 201, "dnnl_unidirectional_right2left": [201, 202], "dnnl_bidirectional_concat": [201, 202], "dnnl_bidirectional_sum": [201, 202], "unidirect": [201, 202, 232, 233, 256, 363, 364, 406], "bidirect": [201, 202, 232, 233, 363, 364], "dnnl_rnn_flags_undef": [203, 204], "dnnl_rnn_flags_diff_weights_overwrit": [203, 204], "dnnl_scratchpad_mode_librari": [205, 206, 270], "dnnl_scratchpad_mode_us": [205, 206, 270], "safeti": [205, 206], "in_ord": [210, 237, 260, 262, 368, 377, 378], "dnnl_stream_in_ord": [210, 211], "out_of_ord": 210, "dnnl_stream_out_of_ord": [210, 211], "default_flag": [210, 534], "dnnl_stream_default_flag": [210, 211, 218, 226, 236, 348, 358, 367], "dnnl_sycl_interop_usm": [212, 213, 305], "dnnl_sycl_interop_buff": [212, 213, 305], "dnnl_sycl_typ": 213, "2022": [214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 230, 232, 233, 234, 236, 237, 238, 241, 243, 244, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 340, 342, 344, 346, 348, 351, 352, 353, 355, 358, 360, 365, 367, 369, 381, 383, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411], "augru_exampl": [214, 264, 340], "src_dim": [214, 215, 217, 223, 224, 231, 238, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 340, 342, 346, 353, 355, 362, 369, 379, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411], "attention_dim": [214, 340], "weights_dim": [214, 224, 231, 244, 247, 248, 252, 340, 355, 362, 383, 390, 392, 398], "bias_dim": [214, 224, 244, 247, 248, 340, 355, 383, 390, 392], "dst_dim": [214, 224, 231, 238, 244, 247, 248, 251, 252, 253, 255, 340, 355, 362, 369, 383, 390, 392, 396, 398, 400, 404], "src_layer_data": [214, 247, 340, 390], "attention_data": [214, 340], "weights_layer_data": [214, 247, 340, 390], "weights_iter_data": [214, 247, 340, 390], "bias_data": [214, 224, 244, 247, 248, 340, 355, 383, 390, 392], "dst_layer_data": [214, 247, 340, 390], "sin": [214, 215, 216, 217, 224, 231, 242, 244, 245, 247, 248, 259, 340, 342, 344, 346, 355, 362, 379, 383, 385, 390, 392, 411], "src_layer_md": [214, 247, 340, 390], "attention_md": [214, 340], "bias_md": [214, 244, 247, 248, 340, 383, 390, 392], "dst_layer_md": [214, 247, 340, 390], "src_layer_mem": [214, 247, 340, 390], "attention_mem": [214, 340], "bias_mem": [214, 244, 247, 248, 340, 383, 390, 392], "dst_layer_mem": [214, 247, 340, 390], "user_weights_layer_mem": [214, 247, 340, 390], "user_weights_iter_mem": [214, 247, 340, 390], "write_to_dnnl_memori": [214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 231, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 358, 362, 367, 369, 371, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415], "augru_weights_layer_md": [214, 340], "augru_weights_iter_md": [214, 340], "src_iter_md": [214, 247, 340, 390], "dst_iter_md": [214, 247, 340, 390], "rnn_direct": [214, 232, 233, 247, 256, 299, 328, 340, 363, 364, 390, 406, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "augru_weights_layer_mem": [214, 340], "augru_weights_iter_mem": [214, 340], "src_iter_mem": [214, 247, 340, 390], "weights_iter_mem": [214, 247, 340, 390], "dst_iter_mem": [214, 247, 340, 390], "workspace_mem": [214, 215, 246, 247, 251, 340, 342, 388, 390, 396], "augru_prim": [214, 340], "augru_arg": [214, 340], "dnnl_arg_augru_attent": [214, 264, 294, 340], "read_from_dnnl_memori": [214, 215, 216, 217, 224, 229, 231, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 264, 340, 342, 344, 346, 355, 359, 362, 367, 369, 371, 372, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411], "parse_engine_kind": [214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 231, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 340, 342, 344, 346, 348, 351, 352, 353, 355, 362, 369, 371, 379, 381, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 415], "2020": [215, 216, 217, 223, 224, 238, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 342, 344, 346, 353, 355, 369, 383, 385, 388, 390, 392, 396, 398, 400, 402, 404, 407, 409, 411], "batch_normalization_exampl": [215, 264, 342], "227": [215, 218, 219, 221, 222, 226, 238, 240, 244, 245, 246, 250, 252, 253, 254, 255, 257, 259, 260, 342, 348, 349, 351, 352, 358, 369, 383, 385, 388, 395, 398, 400, 402, 404, 407, 411], "scaleshift_dim": [215, 242, 245, 342, 379, 385], "src_data": [215, 217, 223, 224, 231, 238, 242, 244, 245, 246, 248, 251, 252, 253, 254, 255, 257, 258, 259, 342, 346, 353, 355, 362, 369, 379, 383, 385, 388, 392, 396, 398, 400, 402, 404, 407, 409, 411], "scale_data": [215, 217, 242, 245, 342, 346, 379, 385], "shift_data": [215, 217, 242, 245, 342, 346, 379, 385], "tan": [215, 242, 245, 342, 379, 385], "scaleshift_md": [215, 242, 245, 342, 379, 385], "src_mem": [215, 217, 223, 231, 238, 239, 242, 244, 245, 246, 248, 249, 251, 253, 254, 255, 257, 258, 259, 342, 346, 353, 362, 369, 371, 379, 383, 385, 388, 392, 394, 396, 400, 402, 404, 407, 409, 411], "scale_mem": [215, 217, 242, 245, 342, 346, 379, 385], "shift_mem": [215, 217, 242, 245, 342, 346, 379, 385], "bnorm_pd": [215, 342], "10f": [215, 242, 245, 342, 379, 385], "normalization_flag": [215, 242, 245, 271, 282, 285, 294, 328, 342, 379, 385, 426, 428, 458, 460, 474, 476], "mean_mem": [215, 217, 242, 245, 342, 346, 379, 385], "mean_desc": [215, 242, 245, 342, 379, 385, 426, 428, 458, 460, 474, 476], "variance_mem": [215, 217, 242, 245, 342, 346, 379, 385], "variance_desc": [215, 242, 245, 342, 379, 385, 426, 428, 458, 460, 474, 476], "bnorm_prim": [215, 342], "bnorm_arg": [215, 342], "binary_exampl": [216, 264, 344], "150": [216, 217, 344, 346], "src_0_dim": [216, 344], "src_1_dim": [216, 344], "src_0_data": [216, 344], "src_1_data": [216, 344], "src_0_md": [216, 344], "src_1_md": [216, 344], "src_0_mem": [216, 344], "src_1_mem": [216, 344], "binary_op": [216, 217, 270, 344, 346, 504], "binary_attr": [216, 217, 344, 346], "binary_pd": [216, 217, 344, 346], "binary_prim": [216, 217, 344, 346], "binary_arg": [216, 217, 344, 346], "tmp_dst": [217, 346], "params_dim": [217, 346], "mean_data": [217, 346], "variance_data": [217, 346], "oscale_data": [217, 346], "mean_md": [217, 346], "variance_md": [217, 346], "scale_md": [217, 346], "shift_md": [217, 346], "oscale_md": [217, 346], "oscale_mem": [217, 346], "dst_tmp": [217, 346], "output_scal": [217, 346], "2016": [218, 219, 222, 226, 348, 352, 358], "posix_memalign": [218, 226, 348, 358], "_posix_c_sourc": [218, 226, 264, 348, 358], "200112l": [218, 226, 348, 358], "stdlib": [218, 226, 236, 348, 358, 367], "conv_ih": [218, 226, 264, 348, 358], "conv_iw": [218, 226, 264, 348, 358], "conv_oh": [218, 226, 264, 348, 358], "conv_ow": [218, 226, 264, 348, 358], "conv_strid": [218, 220, 221, 222, 226, 264, 348, 350, 351, 352, 358], "conv_pad": [218, 220, 221, 222, 226, 264, 348, 350, 351, 352, 358], "pool_oh": [218, 226, 264, 348, 358], "27": [218, 219, 221, 222, 226, 251, 348, 351, 352, 358, 396], "pool_ow": [218, 226, 264, 348, 358], "pool_strid": [218, 221, 222, 226, 264, 348, 351, 352, 358], "pool_pad": [218, 219, 221, 222, 226, 264, 348, 349, 351, 352, 358], "arr": [218, 226, 264, 348, 358], "init_net_data": [218, 226, 264, 348, 358], "uint32_t": [218, 221, 222, 226, 264, 348, 351, 352, 358], "1637": [218, 226, 348, 358], "indx": [218, 226, 348, 358], "typedef": [218, 226, 264, 328, 348, 358], "narg": [218, 226, 264, 289, 294, 305, 348, 358, 419], "dnnl_exec_arg_t": [218, 226, 236, 264, 289, 294, 305, 348, 358, 367, 419], "args_t": [218, 226, 264, 348, 358], "prepare_arg_nod": [218, 226, 264, 348, 358], "free_arg_nod": [218, 226, 264, 348, 358], "set_arg": [218, 226, 264, 348, 358], "arg_idx": [218, 226, 264, 348, 358], "dnnl_memory_t": [218, 226, 236, 264, 288, 289, 294, 305, 348, 358, 367, 454], "init_data_memori": [218, 226, 264, 348, 358], "user_tag": [218, 226, 264, 348, 358], "user_md": [218, 226, 348, 358], "dnnl_memory_cr": [218, 226, 236, 264, 288, 348, 358, 367], "dnnl_status_t": [218, 226, 264, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 334, 348, 358, 371, 413, 453], "prepare_reord": [218, 226, 264, 348, 358], "user_memori": [218, 226, 264, 348, 358], "prim_memory_md": [218, 226, 264, 348, 358], "prim_engin": [218, 226, 264, 348, 358], "dir_is_user_to_prim": [218, 226, 264, 348, 358], "prim_memori": [218, 226, 264, 348, 358], "dnnl_primitive_t": [218, 226, 236, 264, 294, 348, 358, 367], "net_index": [218, 226, 264, 348, 358], "inc": [218, 226, 348, 358, 387], "net_arg": [218, 219, 226, 264, 348, 349, 358], "user_memory_md": [218, 226, 348, 358], "dnnl_memory_get_memory_desc": [218, 226, 264, 288, 348, 358], "user_mem_engin": [218, 226, 348, 358], "dnnl_memory_get_engin": [218, 226, 264, 288, 348, 358], "dnnl_memory_desc_equ": [218, 226, 264, 288, 348, 358], "dnnl_primitive_desc_t": [218, 226, 236, 264, 270, 271, 272, 275, 276, 278, 279, 282, 283, 285, 286, 287, 290, 291, 294, 296, 297, 298, 299, 301, 302, 304, 348, 358, 367, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "reorder_pd": [218, 226, 254, 348, 358, 402], "dnnl_reorder_primitive_desc_cr": [218, 226, 236, 264, 297, 348, 358, 367], "dnnl_primitive_cr": [218, 226, 236, 264, 294, 348, 358, 367], "dnnl_primitive_desc_destroi": [218, 226, 236, 264, 294, 348, 358, 367], "simple_net": [218, 219, 221, 222, 226, 232, 233, 256, 264, 348, 350, 351, 352, 358, 406], "dnnl_engine_kind_t": [218, 264, 280, 314, 315, 316, 321, 328, 348], "dnnl_engine_cr": [218, 226, 236, 264, 280, 348, 358, 367], "net_src_siz": [218, 226, 348, 358], "net_dst_siz": [218, 226, 348, 358], "net_src": [218, 221, 222, 226, 232, 233, 256, 348, 351, 352, 358, 363, 364, 406], "net_dst": [218, 222, 226, 232, 233, 256, 348, 352, 358, 363, 364, 406], "memset": [218, 226, 232, 233, 348, 358, 363, 364], "conv_user_src_s": [218, 226, 348, 358], "conv_user_weights_s": [218, 226, 348, 358], "conv_bias_s": [218, 226, 348, 358], "conv_user_dst_s": [218, 226, 348, 358], "conv_dil": [218, 226, 348, 358], "conv_src": [218, 226, 250, 348, 358, 395], "conv_weight": [218, 220, 221, 222, 226, 348, 350, 351, 352, 358], "conv_bia": [218, 220, 221, 222, 226, 348, 350, 351, 352, 358], "conv_user_src_memori": [218, 221, 222, 226, 348, 351, 352, 358], "conv_user_weights_memori": [218, 221, 222, 226, 348, 351, 352, 358], "conv_user_bias_memori": [218, 221, 222, 226, 348, 351, 352, 358], "conv_src_md": [218, 220, 221, 222, 224, 226, 249, 250, 348, 350, 351, 352, 355, 358, 394, 395], "conv_weights_md": [218, 220, 221, 222, 224, 226, 249, 348, 350, 351, 352, 355, 358, 394], "conv_bias_md": [218, 220, 221, 222, 226, 348, 350, 351, 352, 358], "dnnl_convolution_forward_primitive_desc_cr": [218, 226, 264, 276, 348, 358], "conv_internal_src_memori": [218, 226, 348, 358], "conv_internal_weights_memori": [218, 226, 348, 358], "conv_internal_dst_memori": [218, 226, 348, 358], "dnnl_primitive_desc_query_md": [218, 226, 264, 289, 294, 305, 348, 358], "conv_reorder_src": [218, 226, 348, 358], "conv_reorder_weight": [218, 226, 348, 358], "negative_slop": [218, 221, 222, 226, 348, 351, 352, 358], "relu_src_md": [218, 221, 222, 226, 348, 351, 352, 358], "relu_dst_md": [218, 226, 348, 358], "relu_pd": [218, 221, 222, 226, 236, 237, 239, 241, 250, 261, 348, 351, 352, 358, 367, 368, 371, 372, 413], "dnnl_eltwise_forward_primitive_desc_cr": [218, 226, 236, 264, 279, 348, 358, 367], "relu_dst_memori": [218, 221, 222, 226, 348, 351, 352, 358], "0001": [218, 219, 221, 222, 226, 348, 351, 352, 358], "0001f": [218, 219, 221, 222, 226, 348, 351, 352, 358], "75f": [218, 219, 221, 222, 226, 246, 348, 351, 352, 358, 388], "lrn_src_md": [218, 226, 348, 358], "lrn_dst_md": [218, 226, 348, 358], "lrn_pd": [218, 221, 222, 226, 246, 348, 351, 352, 358, 388], "dnnl_lrn_forward_primitive_desc_cr": [218, 226, 264, 286, 348, 358], "lrn_dst_memori": [218, 221, 222, 226, 348, 351, 352, 358], "lrn_ws_memori": [218, 226, 348, 358], "lrn_ws_md": [218, 226, 348, 358], "pool_dst_siz": [218, 226, 348, 358], "pool_kernel": [218, 221, 222, 226, 348, 351, 352, 358], "pool_dil": [218, 219, 221, 222, 226, 348, 349, 351, 352, 358], "pool_src_md": [218, 226, 348, 358], "pool_dst_any_md": [218, 348], "pool_user_dst_memori": [218, 221, 222, 226, 348, 351, 352, 358], "pool_pd": [218, 221, 222, 226, 249, 348, 351, 352, 358, 394], "dnnl_pooling_forward_primitive_desc_cr": [218, 226, 264, 290, 348, 358], "pool_ws_memori": [218, 226, 348, 358], "pool_ws_md": [218, 226, 348, 358], "pool_dst_memori": [218, 221, 222, 226, 348, 351, 352, 358], "pool_reorder_dst": [218, 226, 348, 358], "pool_internal_dst_memori": [218, 226, 348, 358], "pool_dst_md": [218, 221, 222, 226, 249, 348, 351, 352, 358, 394], "tent": [218, 226, 348, 358], "workaround": [218, 226, 348, 358], "dnnl_stream_t": [218, 226, 236, 264, 289, 294, 295, 303, 305, 306, 312, 319, 323, 348, 358, 367], "dnnl_stream_creat": [218, 226, 236, 264, 303, 348, 358, 367], "dnnl_primitive_execut": [218, 226, 236, 264, 270, 294, 348, 358, 367, 454], "dnnl_stream_wait": [218, 226, 236, 264, 288, 295, 303, 348, 358, 367], "dnnl_stream_destroi": [218, 226, 236, 264, 303, 348, 358, 367], "dnnl_memory_destroi": [218, 226, 236, 264, 288, 348, 358, 367], "dnnl_primitive_destroi": [218, 226, 236, 264, 294, 348, 358, 367], "dnnl_engine_destroi": [218, 226, 236, 264, 280, 348, 358, 367], "engine_kind2str_upp": [218, 239, 261, 264, 348, 371, 413], "chrono": 219, "100": [219, 243, 263, 381, 415], "eng": [219, 220, 221, 222, 227, 228, 230, 234, 235, 239, 240, 241, 243, 249, 250, 256, 260, 261, 262, 263, 264, 349, 350, 351, 352, 360, 365, 371, 372, 373, 374, 375, 377, 378, 381, 394, 395, 406, 413, 415, 504], "conv1_src_tz": [219, 349], "conv1_weights_tz": [219, 349], "conv1_bias_tz": [219, 349], "conv1_dst_tz": [219, 349], "conv1_pad": [219, 349], "user_src": [219, 220, 250, 349, 350, 395], "user_dst": [219, 220, 250, 349, 350, 395], "1000": [219, 243, 258, 263, 349, 381, 409, 415], "conv1_weight": [219, 349], "conv1_bia": [219, 349], "user_src_memori": [219, 220, 349, 350], "user_weights_memori": [219, 220, 349, 350], "conv1_user_bias_memori": [219, 349], "conv1_prim_desc": [219, 349], "conv1_src_memori": [219, 349], "push_back": [219, 221, 222, 223, 232, 233, 259, 349, 351, 352, 353, 363, 364, 411], "conv1_weights_memori": [219, 349], "conv1_dst_memori": [219, 349], "relu1": [219, 227, 240, 260, 373, 376, 377], "negative1_slop": [219, 349], "relu1_prim_desc": [219, 349], "lrn1": 219, "alpha1": 219, "beta1": 219, "local1_s": 219, "lrn1_prim_desc": 219, "lrn_forward": [219, 221, 222, 246, 286, 328, 351, 352, 388, 486, 510], "lrn1_dst_memori": [219, 349], "pool1": [219, 348, 349], "pool1_dst_tz": 219, "pool1_kernel": [219, 349], "pool1_strid": [219, 349], "pool1_dst_md": [219, 349], "pool1_pd": [219, 349], "pooling_forward": [219, 221, 222, 249, 251, 290, 328, 349, 351, 352, 394, 396, 500, 510], "pool1_dst_memori": [219, 349], "conv2_src_tz": 219, "conv2_weights_tz": 219, "conv2_bias_tz": 219, "conv2_dst_tz": 219, "conv2_strid": 219, "conv2_pad": 219, "conv2_weight": 219, "conv2_bia": 219, "conv2_user_weights_memori": 219, "conv2_user_bias_memori": 219, "conv2_src_md": 219, "conv2_bias_md": 219, "conv2_weights_md": 219, "conv2_dst_md": 219, "conv2_prim_desc": 219, "conv2_src_memori": 219, "conv2_weights_memori": 219, "conv2_dst_memori": 219, "relu2": 219, "negative2_slop": 219, "relu2_prim_desc": 219, "lrn2": 219, "alpha2": 219, "beta2": 219, "local2_s": 219, "k2": 219, "lrn2_prim_desc": 219, "lrn2_dst_memori": 219, "pool2": 219, "pool2_dst_tz": 219, "pool2_kernel": 219, "pool2_strid": 219, "pool2_dil": 219, "pool2_pad": 219, "pool2_dst_md": 219, "pool2_pd": 219, "pool2_dst_memori": 219, "384": [219, 220, 350], "conv3_src_tz": 219, "conv3_weights_tz": 219, "conv3_bias_tz": 219, "conv3_dst_tz": 219, "conv3_strid": 219, "conv3_pad": 219, "conv3_weight": 219, "conv3_bia": 219, "conv3_user_weights_memori": 219, "conv3_user_bias_memori": 219, "conv3_src_md": 219, "conv3_bias_md": 219, "conv3_weights_md": 219, "conv3_dst_md": 219, "conv3_prim_desc": 219, "conv3_src_memori": 219, "conv3_weights_memori": 219, "conv3_dst_memori": 219, "relu3": [219, 220, 350], "negative3_slop": 219, "relu3_prim_desc": 219, "conv4_src_tz": 219, "conv4_weights_tz": 219, "conv4_bias_tz": 219, "conv4_dst_tz": 219, "conv4_strid": 219, "conv4_pad": 219, "conv4_weight": 219, "conv4_bia": 219, "conv4_user_weights_memori": 219, "conv4_user_bias_memori": 219, "conv4_src_md": 219, "conv4_bias_md": 219, "conv4_weights_md": 219, "conv4_dst_md": 219, "conv4_prim_desc": 219, "conv4_src_memori": 219, "conv4_weights_memori": 219, "conv4_dst_memori": 219, "relu4": 219, "negative4_slop": 219, "relu4_prim_desc": 219, "conv5_src_tz": 219, "conv5_weights_tz": 219, "conv5_bias_tz": 219, "conv5_dst_tz": 219, "conv5_strid": 219, "conv5_pad": 219, "conv5_weight": 219, "conv5_bia": 219, "conv5_user_weights_memori": 219, "conv5_user_bias_memori": 219, "conv5_src_md": 219, "conv5_weights_md": 219, "conv5_bias_md": 219, "conv5_dst_md": 219, "conv5_prim_desc": 219, "conv5_src_memori": 219, "conv5_weights_memori": 219, "conv5_dst_memori": 219, "relu5": 219, "negative5_slop": 219, "relu5_prim_desc": 219, "pool5": 219, "pool5_dst_tz": 219, "pool5_kernel": 219, "pool5_strid": 219, "pool5_dil": 219, "pool5_pad": 219, "pool5_dst": 219, "pool5_dst_md": 219, "pool5_pd": 219, "pool5_dst_memori": 219, "fc6": 219, "4096": 219, "fc6_src_tz": 219, "fc6_weights_tz": 219, "fc6_bias_tz": 219, "fc6_dst_tz": 219, "fc6_weight": 219, "fc6_bia": 219, "fc6_user_weights_memori": 219, "fc6_user_bias_memori": 219, "fc6_src_md": 219, "fc6_bias_md": 219, "fc6_weights_md": 219, "fc6_dst_md": 219, "fc6_prim_desc": 219, "inner_product_forward": [219, 244, 283, 328, 383, 468, 470, 510], "fc6_src_memori": 219, "fc6_weights_memori": 219, "fc6_dst_memori": 219, "fc7": 219, "fc7_weights_tz": 219, "fc7_bias_tz": 219, "fc7_dst_tz": 219, "fc7_weight": 219, "fc7_bia": 219, "fc7_user_weights_memori": 219, "fc7_user_bias_memori": 219, "fc7_bias_md": 219, "fc7_weights_md": 219, "fc7_dst_md": 219, "fc7_prim_desc": 219, "fc7_weights_memori": 219, "fc7_dst_memori": 219, "fc8": 219, "fc8_weights_tz": 219, "fc8_bias_tz": 219, "fc8_dst_tz": 219, "fc8_weight": 219, "fc8_bia": 219, "fc8_user_weights_memori": 219, "fc8_user_bias_memori": 219, "user_dst_memori": [219, 220, 350], "fc8_bias_md": 219, "fc8_weights_md": 219, "fc8_dst_md": 219, "fc8_prim_desc": 219, "fc8_weights_memori": 219, "fc8_dst_memori": 219, "someth": [219, 221, 222, 232, 233, 256, 349, 351, 352, 406], "duration_cast": 219, "steady_clock": 219, "time_since_epoch": 219, "stdexcept": [220, 221, 230, 234, 237, 239, 241, 243, 250, 263, 351, 360, 365, 372, 381, 415], "simple_net_int8": 220, "conv_src_tz": [220, 221, 222, 350, 351, 352], "conv_weights_tz": [220, 221, 222, 350, 351, 352], "conv_bias_tz": [220, 221, 222, 350, 351, 352], "conv_dst_tz": [220, 221, 222, 350, 351, 352], "8f": [220, 350], "weight_scal": [220, 350], "55f": [220, 350], "src_mask": [220, 350], "weight_mask": [220, 350], "dst_mask": [220, 350], "user_bias_memori": [220, 350], "conv_attr": [220, 224, 350, 355], "dst_scale_md": [220, 350], "dst_scale_memori": [220, 350], "ops_alpha": [220, 350], "ops_beta": [220, 350], "conv_prim_desc": [220, 250, 350], "src_attr": [220, 350], "src_scale_md": [220, 350], "src_scale_memori": [220, 350], "src_reorder_pd": [220, 350], "src_reorder": [220, 350], "weight_attr": [220, 350], "wei_scale_md": [220, 350], "wei_scale_memori": [220, 350], "weight_reorder_pd": [220, 350], "weight_reord": [220, 350], "conv_bias_memori": [220, 221, 226, 350, 351, 358], "conv_dst_memori": [220, 221, 222, 350, 351, 352], "dst_attr": [220, 350], "dst_reorder_pd": [220, 350], "dst_reorder": [220, 350], "cassert": [221, 230, 234, 243, 261, 263, 351, 360, 365, 381, 413, 415], "net_fwd": [221, 222, 226, 351, 352, 358], "net_bwd": [221, 222, 226, 351, 352, 358], "net_fwd_arg": [221, 222, 226, 351, 352, 358], "net_bwd_arg": [221, 222, 226, 351, 352, 358], "sinf": [221, 222, 351, 352], "relu_data_tz": [221, 222, 351, 352], "lrn_data_tz": [221, 222, 351, 352], "lrn_workspace_memori": [221, 222, 351, 352], "pool_dst_tz": [221, 222, 351, 352], "pool_workspace_memori": [221, 222, 351, 352], "until": [221, 222, 227, 228, 235, 240, 260, 262, 288, 349, 351, 352, 365, 413, 496], "diff_data": [221, 222, 226, 351, 352, 358], "net_diff_dst": [221, 222, 226, 256, 351, 352, 358, 406], "pool_user_diff_dst_memori": [221, 222, 226, 351, 352, 358], "pool_diff_src_md": [221, 222, 226, 351, 352, 358], "pool_diff_dst_md": [221, 222, 226, 351, 352, 358], "pool_bwd_pd": [221, 222, 226, 351, 352, 358], "pooling_backward": [221, 222, 290, 328, 351, 352, 510], "pool_diff_dst_memori": [221, 222, 226, 351, 352, 358], "pool_diff_src_memori": [221, 222, 226, 351, 352, 358], "diff_src_desc": [221, 222, 264, 271, 276, 278, 279, 282, 283, 285, 286, 290, 291, 298, 301, 302, 351, 352, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "lrn_diff_dst_md": [221, 222, 226, 351, 352, 358], "lrn_diff_src_md": [221, 222, 226, 351, 352, 358], "lrn_bwd_pd": [221, 222, 226, 351, 352, 358], "lrn_backward": [221, 222, 286, 328, 351, 352, 510], "lrn_diff_dst_memori": [221, 222, 351, 352], "lrn_diff_src_memori": [221, 222, 226, 351, 352, 358], "relu_diff_src_md": [221, 222, 226, 351, 352, 358], "relu_diff_dst_md": [221, 222, 226, 351, 352, 358], "primitive_descriptor": [221, 222, 271, 282, 283, 285, 286, 351, 352], "relu_bwd_pd": [221, 222, 226, 351, 352, 358], "eltwise_backward": [221, 222, 279, 328, 351, 352, 510], "relu_diff_dst_memori": [221, 222, 351, 352], "relu_diff_src_memori": [221, 222, 226, 351, 352, 358], "conv_user_diff_weights_memori": [221, 222, 226, 351, 352, 358], "conv_diff_bias_memori": [221, 222, 226, 351, 352, 358], "conv_bwd_src_md": [221, 222, 351, 352], "conv_diff_weights_md": [221, 222, 226, 351, 352, 358], "conv_diff_dst_md": [221, 222, 226, 351, 352, 358], "conv_diff_bias_md": [221, 222, 226, 351, 352, 358], "conv_bwd_weights_pd": [221, 222, 226, 351, 352, 358], "convolution_backward_weight": [221, 222, 276, 328, 351, 352, 510], "conv_bwd_src_memori": [221, 222, 351, 352], "relu_bwd": [221, 222, 226, 351, 352, 358], "conv_diff_weight": [221, 222, 226, 351, 352, 358], "conv_diff_dst_memori": [221, 222, 226, 351, 352, 358], "conv_diff_weights_memori": [221, 222, 226, 351, 352, 358], "diff_weights_desc": [221, 222, 264, 276, 278, 283, 291, 351, 352, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "didn": [221, 222, 351, 352], "anyth": [221, 222, 289, 332, 351, 352], "n_iter": [221, 222, 226, 351, 352, 358], "net_output": [221, 222, 226, 351, 352, 358], "update_diff_dst": [221, 222, 226, 351, 352, 358], "net_diff_weight": [221, 222, 226, 351, 352, 358], "net_diff_bia": [221, 222, 226, 351, 352, 358], "update_weight": [221, 222, 226, 351, 352, 358], "conv_user_diff_weights_buff": [222, 226, 352, 358], "conv_diff_bias_buff": [222, 226, 352, 358], "concat_exampl": [223, 264, 353], "120": [223, 353], "num_src": [223, 259, 353, 411], "mem": [223, 232, 233, 236, 237, 241, 259, 261, 264, 353, 367, 372, 411, 413], "concat_pd": [223, 353], "dst_mem": [223, 229, 231, 238, 239, 244, 246, 248, 249, 251, 253, 254, 255, 257, 259, 264, 353, 359, 362, 369, 371, 383, 388, 392, 394, 396, 400, 402, 404, 407, 411], "concat_prim": [223, 353], "concat_arg": [223, 353], "convolution_exampl": [224, 264, 355], "strides_dim": [224, 251, 355, 396], "padding_dims_l": [224, 251, 355, 396], "padding_dims_r": [224, 251, 355, 396], "weights_data": [224, 229, 231, 244, 248, 252, 355, 359, 362, 383, 392, 398], "dst_data": [224, 229, 231, 238, 244, 246, 248, 251, 252, 253, 254, 255, 257, 259, 355, 359, 362, 369, 383, 388, 392, 396, 398, 400, 402, 404, 407, 411], "user_src_mem": [224, 231, 252, 355, 362, 398], "user_weights_mem": [224, 231, 244, 252, 355, 362, 383, 398], "user_dst_mem": [224, 231, 252, 355, 362, 398], "user_bias_md": [224, 355], "user_bias_mem": [224, 355], "conv_op": [224, 355], "conv_src_mem": [224, 249, 355, 394], "conv_weights_mem": [224, 249, 355, 394], "conv_dst_mem": [224, 249, 355, 394], "conv_arg": [224, 355, 504], "depthwise_convolution_exampl": [224, 264, 355], "exit_cod": [224, 239, 261, 355, 371, 413], "idx": [226, 261, 264, 294, 358, 413, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "n_fwd": [226, 358], "n_bwd": [226, 358], "dnnl_pooling_backward_primitive_desc_cr": [226, 264, 290, 358], "pool_internal_diff_dst_memori": [226, 358], "pool_reorder_diff_dst": [226, 358], "pool_bwd": [226, 358], "dnnl_lrn_backward_primitive_desc_cr": [226, 264, 286, 358], "lrn_bwd": [226, 358], "conv_diff_src_md": [226, 358], "dnnl_convolution_backward_weights_primitive_desc_cr": [226, 264, 276, 358], "conv_bwd_reorder_src": [226, 358], "conv_bwd_internal_src_memori": [226, 358], "conv_bwd_weights_src_memori": [226, 358], "conv_reorder_diff_dst": [226, 358], "conv_internal_diff_dst_memori": [226, 358], "conv_reorder_diff_weight": [226, 358], "conv_internal_diff_weights_memori": [226, 358], "conv_bwd_weight": [226, 358], "dnnl_memory_set_data_handl": [226, 264, 288, 289, 305, 358], "dnnl_memory_get_data_handl": [226, 264, 288, 358], "cleanup": [226, 358], "2023": [227, 228, 229, 231, 239, 242, 245, 260, 261, 263, 359, 362, 379, 385, 415], "unordered_set": [227, 228, 235, 240, 260, 262, 264, 373, 374, 375, 376, 377, 378], "graph_example_util": [227, 228, 235, 240, 260, 262, 373, 374, 375, 376, 377, 378], "cpu_getting_started_tutori": 227, "oc1": [227, 240, 260], "oc2": [227, 240, 260], "225": 227, "kh1": [227, 240, 260], "kw1": [227, 240, 260], "kh2": [227, 240, 260], "kw2": [227, 240, 260], "conv0_input_dim": [227, 240, 260], "conv0_weight_dim": [227, 240, 260], "conv0_bias_dim": [227, 240, 260], "conv1_weight_dim": [227, 240, 260], "conv1_bias_dim": [227, 240, 260], "conv0_src_desc": [227, 240, 260, 373, 376, 377], "conv0_weight_desc": [227, 240, 260, 373, 376, 377], "conv0_dst_desc": [227, 240, 260, 373, 376, 377], "conv0": [227, 240, 260, 373, 376, 377], "bias_add": [227, 240, 260], "conv0_bias_desc": [227, 240, 260, 373, 376, 377], "conv0_bias_add_dst_desc": [227, 240, 260, 373, 376, 377], "conv0_bias_add": [227, 240, 260, 373, 376, 377], "relu0_dst_desc": [227, 240, 260, 373, 376, 377], "relu0": [227, 240, 260, 373, 376, 377], "conv1_weight_desc": [227, 240, 260, 373, 376, 377], "conv1_dst_desc": [227, 240, 260, 373, 376, 377], "conv1_bias_desc": [227, 240, 260, 373, 376, 377], "conv1_bias_add_dst_desc": [227, 240, 260, 373, 376, 377], "conv1_bias_add": [227, 240, 260, 373, 376, 377], "relu1_dst_desc": [227, 240, 260, 373, 376, 377], "make_engine_with_alloc": [227, 228, 235, 260, 262, 315, 329, 330, 331, 373, 374, 375, 377, 378], "strm": [227, 228, 235, 240, 241, 260, 261, 262, 372, 373, 374, 375, 377, 378, 413], "global_outputs_ts_map": [227, 228, 240, 260, 264], "shared_ptr": [227, 228, 235, 240, 260, 262, 264, 465], "data_buff": [227, 228, 235, 240, 260, 262, 264], "id_to_queried_logical_tensor": [227, 228, 240, 260], "helper": [227, 228, 240, 260, 496], "ids_with_any_layout": [227, 228, 240, 260], "set_any_layout": [227, 228, 240, 260, 264], "mock": [227, 228, 235, 240, 260, 262], "concrete_shap": [227, 228, 235, 240, 260, 262], "although": [227, 228, 235, 240, 260, 262, 350], "cpu_get_start": 227, "continu": [227, 228, 240, 260, 349, 371], "cp": [227, 228, 232, 233, 235, 240, 260, 262, 373, 374, 375, 377, 378], "inputs_t": [227, 228, 235, 240, 260, 262, 373, 374, 375, 377, 378], "outputs_t": [227, 228, 235, 240, 260, 262, 373, 374, 375, 377, 378], "allocate_graph_mem": [227, 228, 235, 264], "conv0_src": [227, 260], "conv0_wei": [227, 260], "conv0_bias_src1": [227, 260], "conv1_wei": [227, 260], "conv1_bias_src1": [227, 260], "relu_dst": [227, 260], "simple_pattern_int8": 228, "conv_input_dim": 228, "conv_weight_dim": 228, "conv_bias_dim": 228, "dequant0_src_desc": [228, 374], "conv_src_desc": [228, 374], "dequant0": [228, 374], "1f": [228, 231, 233, 234, 362, 364, 365, 374], "dequant1_src_desc": [228, 374], "conv_weight_desc": [228, 374], "dequant1": [228, 374], "wei_zp": [228, 374], "conv_bias_desc": [228, 374], "conv_dst_desc": [228, 374], "relu_dst_desc": [228, 374], "quant_dst_desc": [228, 374], "quant": [228, 374], "dq0_src": 228, "dq1_src": 228, "quant_dst": 228, "check_result": [229, 264, 359], "expected_result": [229, 359], "750000": [229, 359], "250000": [229, 359], "500000": [229, 359], "000000": [229, 359], "19": [229, 359], "sparse_matmul": [229, 264, 359], "src_csr_valu": [229, 359], "src_csr_indic": [229, 359], "src_csr_pointer": [229, 359], "static_cast": [229, 243, 359, 381], "src_csr_md": [229, 359], "wei_md": [229, 359], "src_csr_mem": [229, 359], "wei_mem": [229, 359], "sparse_matmul_pd": [229, 359], "sparse_matmul_prim": [229, 359], "sparse_matmul_arg": [229, 359], "cctype": [230, 234, 243, 263, 360, 365, 381, 415], "cstdio": [230, 234, 243, 263, 360, 365, 381, 415], "random": [230, 231, 234, 243, 263, 360, 362, 365, 381, 415], "type_trait": [230, 360], "init_vector": [230, 234, 243, 263, 360, 365, 381, 415], "min_valu": [230, 360], "max_valu": [230, 360], "mt19937": [230, 234, 243, 263, 360, 365, 381, 415], "uniform_real_distribut": [230, 234, 243, 263, 360, 365, 381, 415], "find_min_max": [230, 360], "compute_q10n_param": [230, 360], "max_int": [230, 360], "numeric_limit": [230, 234, 360, 365], "min_int": [230, 360], "lowest": [230, 360], "ifndef": [230, 360], "omit_workaround_for_skx": [230, 360], "dev_guide_int8_comput": [230, 360], "html": [230, 360], "endif": [230, 261, 360, 413], "min_val": [230, 360], "max_val": [230, 360], "tcomput": [230, 360], "q10n": [230, 360], "tdata": [230, 360], "tscale": [230, 360], "3g": [230, 360], "invers": [230, 360], "tzero": [230, 360], "compare_vector": [230, 234, 360, 365], "v2": [230, 234, 360, 365], "scale_v2": [230, 360], "zp_v2": [230, 360], "threshold": [230, 234, 360, 365], "v1_l2": [230, 234, 360, 365], "diff_l2": [230, 234, 360, 365], "v2_n": [230, 360], "deq10n": [230, 360], "ok": [230, 234, 360, 365], "tcomparison": [230, 360], "trefer": [230, 234, 360, 365], "terror": [230, 234, 360, 365], "trel": [230, 360], "naccuraci": [230, 360], "x_int_m": [230, 264, 360], "x_f32": [230, 264, 360], "scale_x": [230, 264, 360], "zp_x": [230, 264, 360], "q10n_scheme": [230, 360], "mimic": [230, 360], "x_int_md": [230, 360], "x_f32_md": [230, 360], "x_f32_m": [230, 360], "q10n_attr": [230, 360], "q10n_pd": [230, 360], "dst_scale_x_m": [230, 360], "zp_x_m": [230, 360], "f32_matmul_comput": [230, 264, 360], "a_f32": [230, 263, 264, 360, 415], "b_f32": [230, 243, 263, 264, 360, 381, 415], "c_f32": [230, 263, 264, 360, 415], "wrap": [230, 234, 237, 360, 365, 452, 453, 465, 496, 510, 534], "a_f32_m": [230, 360], "b_f32_m": [230, 360], "c_f32_m": [230, 360], "matmul_pd": [230, 231, 234, 243, 248, 263, 360, 362, 365, 381, 392, 415], "matmul_p": [230, 234, 243, 263, 264, 360, 365, 381, 415], "scale_c": [230, 264, 360], "zp_c": [230, 243, 264, 360, 381], "dynamic_q10n_matmul": [230, 264, 360], "c_u8": [230, 243, 264, 360, 381], "scale_a": [230, 360], "scale_b": [230, 360], "zp_a": [230, 243, 360, 381], "zp_b": [230, 263, 360, 415], "a_u8_md": [230, 360], "a_u8_m": [230, 360], "b_s8_md": [230, 360], "b_s8_m": [230, 360], "emb": [230, 360], "anywai": [230, 360], "theori": [230, 360], "postpon": [230, 360], "exercis": [230, 360], "c_f32_md": [230, 360], "matmul_attr": [230, 248, 360, 392], "scales_a_m": [230, 360], "scales_b_m": [230, 360], "zp_a_m": [230, 360], "c_u8_md": [230, 360], "c_u8_m": [230, 360], "compare_f32_and_quantized_matmul": [230, 264, 360], "param_a_min_v": [230, 360], "param_a_max_v": [230, 360], "4f": [230, 246, 360, 388], "param_b_min_v": [230, 360], "param_b_max_v": [230, 360], "threshold_dynamic_q10n": [230, 360], "2f": [230, 233, 360, 364], "_true_": [230, 360], "c_u8_dynamic_q10n": [230, 360], "scale_c_dynamic_q10n": [230, 360], "zp_c_dynamic_q10n": [230, 360], "rc": [230, 234, 360, 365], "logic_error": [230, 234, 237, 239, 241, 243, 360, 365, 368, 371, 372, 381], "matmul_exampl": [231, 248, 264, 362, 392], "densiti": [231, 362], "default_random_engin": [231, 362], "def_gen": [231, 362], "bernoulli_distribut": [231, 362], "b_dist": [231, 362], "is_on": [231, 362], "count_if": [231, 362], "matmul_src_md": [231, 362], "matmul_weights_md": [231, 362], "matmul_dst_md": [231, 362], "npleas": [231, 362], "matmul_src_mem": [231, 362], "matmul_weights_mem": [231, 362], "matmul_dst_mem": [231, 362], "matmul_prim": [231, 248, 362, 392], "wei_packed_md": [231, 362], "nhandl": [231, 264, 288, 362], "get_num_handl": [231, 362, 498], "wei_handl": [231, 362], "wei_buff": [231, 362], "buf_sz": [231, 362], "matmul_arg": [231, 248, 362, 392], "gnmt": [232, 233, 256, 363, 364, 406], "cstring": [232, 233, 256, 406], "dim_t": [232, 233, 264, 364], "src_seq_length_max": [232, 233, 264, 363, 364], "tgt_seq_length_max": [232, 233, 264, 363, 364], "feature_s": [232, 233, 264, 363, 364], "enc_bidir_n_lay": [232, 233, 264, 363, 364], "enc_unidir_n_lay": [232, 233, 264, 363, 364], "dec_n_lay": [232, 233, 264, 363, 364], "lstm_n_gate": [232, 233, 256, 264, 363, 364, 406], "weighted_src_lay": [232, 233, 264], "alignment_model": [232, 233, 264], "exp_sum": [232, 233, 264], "compute_weighted_annot": [232, 233, 264, 363, 364], "weighted_annot": [232, 233, 264, 363, 364], "weights_annot": [232, 233, 264], "enc_dst_lay": [232, 233], "num_weighted_annot": [232, 233], "dnnl_sgemm": [232, 233, 234, 264, 273, 365], "compute_attent": [232, 233, 264, 363, 364], "context_vector": [232, 233, 264], "weights_src_lay": [232, 233, 264], "dec_src_lay": [232, 233, 264], "weights_align": [232, 233, 264], "dst_iter": [232, 233, 256, 270, 363, 406, 512], "src_layer": [232, 233, 256, 270, 363, 364, 406, 512], "weights_yi": [232, 233], "weights_ai": [232, 233], "weighted_dec_src_lay": [232, 233], "alignment_model_ptr": [232, 233], "pragma_omp_parallel_for_collaps": [232, 233, 264], "tanhf": [232, 233], "gemv": [232, 233], "expf": [232, 233], "copy_context": [232, 233, 264, 363, 364], "src_iter": [232, 233, 256, 264, 270, 363, 364, 406, 512], "n_layer": [232, 233, 264], "cpu_engin": [232, 233, 237, 363, 364, 368], "encoder_net": [232, 233, 363, 364], "decoder_net": [232, 233, 363, 364], "encoder_net_arg": [232, 233, 363, 364], "decoder_net_arg": [232, 233, 363, 364], "enc_bidir_src_layer_tz": [232, 233, 363, 364], "enc_bidir_weights_layer_tz": [232, 233, 363, 364], "enc_bidir_weights_iter_tz": [232, 233, 363, 364], "enc_bidir_bias_tz": [232, 233, 363, 364], "enc_bidir_dst_layer_tz": [232, 233, 363, 364], "user_enc_bidir_wei_lay": [232, 233, 363, 364], "user_enc_bidir_wei_it": [232, 233, 363, 364], "user_enc_bidir_bia": [232, 233, 363, 364], "user_enc_bidir_src_layer_md": [232, 233, 363, 364], "user_enc_bidir_wei_layer_md": [232, 233, 363, 364], "user_enc_bidir_wei_iter_md": [232, 233, 363, 364], "user_enc_bidir_bias_md": [232, 233, 363, 364], "user_enc_bidir_src_layer_memori": [232, 233, 363, 364], "user_enc_bidir_wei_layer_memori": [232, 233, 363, 364], "user_enc_bidir_wei_iter_memori": [232, 233, 363, 364], "user_enc_bidir_bias_memori": [232, 233, 363, 364], "enc_bidir_wei_layer_md": [232, 233, 363, 364], "enc_bidir_wei_iter_md": [232, 233, 363, 364], "enc_bidir_dst_layer_md": [232, 233, 363, 364], "enc_bidir_prim_desc": [232, 233, 363, 364], "enc_bidir_wei_layer_memori": [232, 233, 363, 364], "enc_bidir_wei_layer_reorder_pd": [232, 233, 363], "enc_bidir_wei_iter_memori": [232, 233, 363, 364], "enc_bidir_wei_iter_reorder_pd": [232, 233], "enc_bidir_dst_layer_memori": [232, 233, 363, 364], "bi": [232, 233], "user_enc_uni_first_wei_lay": [232, 233, 363, 364], "user_enc_uni_first_wei_it": [232, 233, 363, 364], "user_enc_uni_first_bia": [232, 233, 363, 364], "user_enc_uni_first_wei_layer_dim": [232, 233], "user_enc_uni_first_wei_iter_dim": [232, 233], "user_enc_uni_first_bias_dim": [232, 233], "enc_uni_first_dst_layer_dim": [232, 233], "user_enc_uni_first_wei_layer_md": [232, 233], "user_enc_uni_first_wei_iter_md": [232, 233], "user_enc_uni_first_bias_md": [232, 233, 363, 364], "user_enc_uni_first_wei_layer_memori": [232, 233], "user_enc_uni_first_wei_iter_memori": [232, 233], "user_enc_uni_first_bias_memori": [232, 233, 363, 364], "enc_uni_first_wei_layer_md": [232, 233, 363, 364], "enc_uni_first_wei_iter_md": [232, 233, 363, 364], "enc_uni_first_dst_layer_md": [232, 233, 363, 364], "enc_uni_first_prim_desc": [232, 233, 363, 364], "enc_uni_first_wei_layer_memori": [232, 233, 363, 364], "enc_uni_first_wei_layer_reorder_pd": 232, "enc_uni_first_wei_iter_memori": [232, 233, 363, 364], "enc_uni_first_wei_iter_reorder_pd": 232, "enc_uni_first_dst_layer_memori": [232, 233, 363, 364], "user_enc_uni_wei_lay": [232, 233, 363, 364], "user_enc_uni_wei_it": [232, 233, 363, 364], "user_enc_uni_bia": [232, 233, 363, 364], "user_enc_uni_wei_layer_dim": [232, 233], "user_enc_uni_wei_iter_dim": [232, 233], "user_enc_uni_bias_dim": [232, 233], "enc_dst_layer_dim": [232, 233], "user_enc_uni_wei_layer_md": [232, 233], "user_enc_uni_wei_iter_md": [232, 233], "user_enc_uni_bias_md": [232, 233, 363, 364], "user_enc_uni_wei_layer_memori": [232, 233], "user_enc_uni_wei_iter_memori": [232, 233], "user_enc_uni_bias_memori": [232, 233, 363, 364], "enc_uni_wei_layer_md": [232, 233, 363, 364], "enc_uni_wei_iter_md": [232, 233, 363, 364], "enc_dst_layer_md": [232, 233, 363, 364], "enc_uni_prim_desc": [232, 233, 363, 364], "enc_uni_wei_layer_memori": [232, 233, 363, 364], "enc_uni_wei_layer_reorder_pd": [232, 233], "enc_uni_wei_iter_memori": [232, 233, 363, 364], "enc_uni_wei_iter_reorder_pd": [232, 233], "enc_dst_layer_memori": [232, 233, 363, 364], "dec": [232, 233], "user_dec_wei_lay": [232, 233, 363, 364], "user_dec_wei_it": [232, 233, 363, 364], "user_dec_bia": [232, 233, 363, 364], "user_dec_dst": [232, 363], "user_weights_attention_src_lay": [232, 233, 363, 364], "user_weights_annot": [232, 233, 363, 364], "user_weights_align": [232, 233, 363, 364], "user_dec_wei_layer_dim": [232, 233, 363, 364], "user_dec_wei_iter_dim": [232, 233, 363, 364], "user_dec_bias_dim": [232, 233, 363, 364], "dec_src_layer_dim": [232, 233, 363, 364], "dec_dst_layer_dim": [232, 233, 363, 364], "dec_dst_iter_c_dim": [232, 233, 363, 364], "noctx": [232, 233], "dec_dst_iter_dim": [232, 233, 363, 364], "dec_dst_iter_noctx_dim": [232, 233, 363, 364], "user_dec_wei_layer_md": [232, 233, 363, 364], "user_dec_wei_iter_md": [232, 233, 363, 364], "user_dec_bias_md": [232, 233, 363, 364], "dec_dst_layer_md": [232, 233, 363, 364], "dec_src_layer_md": [232, 233, 363, 364], "dec_dst_iter_md": [232, 233, 363, 364], "dec_dst_iter_c_md": [232, 233, 363, 364], "user_dec_wei_layer_memori": [232, 233, 363, 364], "user_dec_wei_iter_memori": [232, 233, 363, 364], "user_dec_bias_memori": [232, 233, 363, 364], "user_dec_dst_layer_memori": [232, 363], "dec_src_layer_memori": [232, 233, 363, 364], "dec_dst_iter_c_memori": [232, 233, 363, 364], "dec_wei_layer_md": [232, 233, 363], "dec_wei_iter_md": [232, 233, 363], "dec_dst_iter_memori": [232, 233, 363, 364], "dec_dst_iter_noctx_md": [232, 233, 363, 364], "dec_ctx_prim_desc": [232, 233, 363, 364], "dec_wei_layer_memori": [232, 233, 363, 364], "dec_wei_layer_reorder_pd": [232, 233, 363, 364], "dec_wei_iter_memori": [232, 233, 363], "dec_wei_iter_reorder_pd": [232, 233, 363], "enc": [232, 233], "ano": [232, 233], "init": [232, 233, 239, 241, 250, 372], "src_att_layer_handl": [232, 233, 363, 364], "src_att_iter_handl": [232, 233, 363, 364], "att": [232, 233], "ctx": [232, 233, 264, 547], "dst_layer_handl": [232, 233, 363, 364], "compute_sum_of_row": [233, 264, 364], "col": [233, 264], "a_reduc": [233, 264], "weights_src_layer_scal": [233, 264], "dec_src_layer_scal": [233, 264], "dec_src_layer_shift": [233, 264], "tnc_offset": 233, "max_idx": 233, "max_idx_v": 233, "data_shift": [233, 364], "data_scal": [233, 364], "weights_scale_mask": [233, 364], "weights_scal": [233, 364], "halv": [233, 364], "scales_half": [233, 364], "65": [233, 364], "3f": [233, 252, 364, 398], "enc_bidir_src_layer_md": [233, 364], "attri": 233, "enc_bidir_src_layer_memori": [233, 364], "enc_bidir_src_layer_reorder_pd": [233, 364], "weights_attention_scal": [233, 364], "dec_dst": [233, 364], "dec_src_it": [233, 363], "dec_dst_it": [233, 363, 364], "dec_dst_layer_memori": [233, 364], "weights_attention_sum_row": [233, 364], "s8u8s32": [233, 364], "tight": [234, 365], "difficult": [234, 365], "finit": [234, 365], "tl2": [234, 365], "trelative_error": [234, 365], "taccuraci": [234, 365], "number_of_run": [234, 243, 263, 264, 365, 381, 415], "fixed_beta": [234, 264, 365], "_dynamic_": [234, 365], "dynamic_matmul_cr": [234, 264, 365], "a_shap": [234, 365], "b_shape": [234, 365], "c_shape": [234, 365], "a_strid": [234, 365], "b_stride": [234, 365], "c_stride": [234, 365], "earlier": [234, 365, 371, 413], "dynamic_matmul_execut": [234, 264, 365], "transa": [234, 264, 273, 306, 328, 334, 365], "transb": [234, 264, 273, 306, 328, 334, 365], "translat": [234, 365], "tolow": [234, 365], "a_m": [234, 365], "b_m": [234, 365], "c_m": [234, 365], "alpha_m": [234, 365], "sgemm_and_matmul_with_param": [234, 264, 365], "c_sgemm": [234, 365], "c_dynamic_matmul": [234, 365], "dynamic_matmul": [234, 365], "diverg": [234, 365], "sgemm_and_matmul": [234, 264, 365], "cpu_single_op_partition_tutori": 235, "src0_dim": [235, 262], "src1_dim": [235, 262], "matmul_src0_desc": [235, 262, 375, 378], "matmul_src1_desc": [235, 262, 375, 378], "matmul_dst_desc": [235, 262, 375, 378], "matmul_src0": [235, 262], "matmul_src1": [235, 262], "matmul_dst": [235, 262], "n_dim": [236, 264, 367], "n_elem": [236, 367], "complain_example_error_and_exit": [236, 264, 367], "find_neg": [236, 237, 264, 367, 368], "engine_cpu": [236, 367], "engine_gpu": [236, 367], "validate_engine_kind": [236, 237, 262, 264, 367, 368], "tz": [236, 237, 367, 368], "m_cpu_md": [236, 367], "m_gpu_md": [236, 367], "m_cpu": [236, 237, 367, 368], "m_gpu": [236, 237, 367, 368], "r1_pd": [236, 367], "r1": [236, 237, 367, 368], "r2_pd": [236, 367], "r2": [236, 237, 367, 368], "stream_gpu": [236, 237, 367, 368], "r1_arg": [236, 367], "relu_arg": [236, 367], "r2_arg": [236, 367], "prologu": [237, 239, 241, 250, 261], "nelem": 237, "cross_engine_reorder_tutori": 237, "gpu_engin": [237, 368], "eltwise_exampl": [238, 264, 369], "eltwise_pd": [238, 369], "eltwise_prim": [238, 369], "eltwise_arg": [238, 369], "dnnl_debug": [239, 261, 368, 371, 372, 413], "getting_started_tutori": 239, "image_s": [239, 371], "alt_src_md": [239, 371], "saniti": [239, 243, 371, 381], "obj": [239, 371], "relu_imag": [239, 371], "caught": [239, 261, 371, 413], "tstatu": [239, 261, 371, 413], "dnnl_status2str": [239, 261, 264, 371, 413], "tmessag": [239, 261, 371, 413], "cl_ext": [240, 376], "ocl_getting_started_tutori": 240, "allocate_ocl_graph_mem": [240, 264], "ocl_check": [241, 264, 372], "cl_int": 241, "cl_success": 241, "__file__": 241, "__line__": 241, "cl_kernel": [241, 264, 372], "create_init_opencl_kernel": [241, 264, 372], "ocl_ctx": [241, 264], "kernel_nam": [241, 264, 372], "ocl_cod": [241, 264, 372], "err": 241, "cl_program": 241, "ocl_program": 241, "clcreateprogramwithsourc": 241, "clbuildprogram": 241, "ocl_kernel": 241, "clcreatekernel": 241, "clreleaseprogram": 241, "gpu_opencl_interop_tutori": 241, "tz_dim": [241, 256, 261, 372, 406, 413], "mem_d": [241, 261, 372, 413], "__kernel": [241, 372], "__global": [241, 372], "get_global_id": [241, 372], "oclkernel": 241, "ocl_init_kernel": [241, 372], "oclexecut": 241, "ocl_buf": [241, 372], "clsetkernelarg": [241, 372], "clenqueuendrangekernel": [241, 372], "mem_data": [241, 372], "clreleasekernel": 241, "group_normalization_exampl": [242, 264, 379], "28": [242, 379, 395], "gnorm_pd": [242, 379], "gnorm_prim": [242, 379], "gnorm_arg": [242, 379], "uniform_int_distribut": [243, 381], "sc_a": [243, 381], "sc_b": [243, 263, 381, 415], "sc_c": [243, 381], "matmul_pd_cr": [243, 263, 264, 381, 415], "prepare_input": [243, 263, 264, 381, 415], "a_u8_mem": [243, 264, 381], "sc_a_mem": [243, 264, 381], "sc_b_mem": [243, 263, 264, 381, 415], "sc_c_mem": [243, 264, 381], "zp_a_mem": [243, 264, 381], "zp_c_mem": [243, 264, 381], "25f": [243, 381], "40": [243, 381], "sanity_check": [243, 264, 381], "c_u8_mem": [243, 264, 381], "tquantiz": [243, 381], "twhich": [243, 381], "b_s8_mem": [243, 263, 264, 381, 415], "meaning": [243, 263, 381, 415], "inner_product_exampl": [244, 264, 383], "inner_product_weights_md": [244, 383], "inner_product_op": [244, 383], "inner_product_attr": [244, 383], "inner_product_pd": [244, 383], "inner_product_weights_mem": [244, 383], "inner_product_prim": [244, 383], "inner_product_arg": [244, 383], "layer_normalization_exampl": [245, 264, 385], "lnorm_pd": [245, 385], "lnorm_prim": [245, 385], "lnorm_arg": [245, 385], "lrn_exampl": [246, 264, 388], "lrn_prim": [246, 388], "lrn_arg": [246, 388], "lstm_exampl": [247, 264, 390], "lstm_weights_layer_md": [247, 390], "lstm_weights_iter_md": [247, 390], "src_iter_c_md": [247, 390], "dst_iter_c_md": [247, 390], "lstm_weights_layer_mem": [247, 390], "lstm_weights_iter_mem": [247, 390], "src_iter_c_mem": [247, 390], "dst_iter_c_mem": [247, 390], "lstm_prim": [247, 390], "lstm_arg": [247, 390], "weights_mem": [248, 249, 392, 394], "matmul_op": [248, 392], "sstream": 249, "memory_format_propagation_tutori": 249, "3x3": [249, 394], "need_reorder_src": [249, 394], "need_reorder_weight": [249, 394], "need_reorder_dst": [249, 394], "pool_dst_mem": [249, 394], "reorder_src": [249, 394], "reorder_weight": [249, 394], "conv_scratchpad_mem": [249, 394], "pool_scratchpad_mem": [249, 394], "reorder_dst": [249, 394], "init_data": [250, 264], "create_and_execute_relu": [250, 264, 395], "create_attr_with_relu_post_op": [250, 264, 395], "naiv": 250, "conv_relu_na": [250, 395], "user_wei": [250, 395], "mem_desc": 250, "conv_wei_md": [250, 395], "conv_primit": 250, "conv_relu_block": [250, 395], "implementation2": 250, "condition": 250, "r_pd": [250, 395], "conv_wei": [250, 395], "conv_dst": [250, 395], "prim_descriptor": 250, "conv_relu_fus": [250, 395], "prim_desc": 250, "implementation3": 250, "synthet": [250, 395], "pooling_exampl": [251, 264, 396], "kernel_dim": [251, 396], "pooling_pd": [251, 396], "pooling_prim": [251, 396], "pooling_arg": [251, 396], "prelu_exampl": [252, 264, 398], "prelu_pd": [252, 398], "prelu_forward": [252, 291, 328, 398, 506, 510], "prelu_weights_mem": [252, 398], "prelu_prim": [252, 398], "prelu_arg": [252, 398], "reduction_exampl": [253, 264, 400], "reduction_pd": [253, 400], "reduction_prim": [253, 400], "reduction_arg": [253, 400], "reorder_exampl": [254, 264, 402], "ic_dim": [254, 402], "reorder_attr": [254, 402], "dst_scales_mem": [254, 402], "reorder_prim": [254, 402], "reorder_arg": [254, 402], "resampling_exampl": [255, 264, 404], "350": [255, 404], "resampling_pd": [255, 404], "resampling_forward": [255, 298, 328, 404, 510, 521], "resampling_prim": [255, 404], "resampling_arg": [255, 404], "n0": [256, 264, 406], "rand": [256, 264, 406], "31": [256, 264, 406], "n1": [256, 264, 406], "chunk": [256, 406], "compact": [256, 395, 406], "leftmost": [256, 406], "leftmost_batch": [256, 264, 406], "rightmost_batch": [256, 264, 406], "leftmost_seq_length": [256, 264, 406], "rightmost_seq_length": [256, 264, 406], "common_feature_s": [256, 264, 406], "characterist": [256, 371, 406], "common_n_lay": [256, 264, 406], "is_train": [256, 406], "fwd_inf_train": [256, 406], "fwd_net": [256, 406], "bwd_net": [256, 406], "shorter": [256, 406], "net_src_dim": [256, 406], "leftmost_src_layer_dim": [256, 406], "rightmost_src_layer_dim": [256, 406], "common_weights_layer_dim": [256, 406], "common_weights_iter_dim": [256, 406], "common_bias_dim": [256, 406], "leftmost_dst_layer_dim": [256, 406], "rightmost_dst_layer_dim": [256, 406], "arrang": [256, 406], "our": [256, 372, 394, 406, 413], "leftmost_dst_iter_dim": [256, 406], "leftmost_dst_iter_c_dim": [256, 406], "rightmost_src_iter_dim": [256, 406], "rightmost_src_iter_c_dim": [256, 406], "tz_volum": [256, 406], "suppli": [256, 308, 406], "formatted_md": [256, 406], "generic_md": [256, 406], "studi": [256, 406], "suggest": [256, 406], "leftmost_dst_layer_memori": [256, 406], "rightmost_dst_layer_memori": [256, 406], "net_src_memori": [256, 406], "accommod": [256, 394, 406], "user_leftmost_src_layer_md": [256, 406], "user_rightmost_src_layer_md": [256, 406], "leftmost_src_layer_memori": [256, 406], "rightmost_src_layer_memori": [256, 406], "ll": [256, 406], "user_common_weights_lay": [256, 406], "user_common_weights_layer_memori": [256, 406], "user_common_weights_it": [256, 406], "user_common_weights_iter_memori": [256, 406], "user_common_bia": [256, 406], "user_common_bias_memori": [256, 406], "user_leftmost_dst_lay": [256, 406], "user_leftmost_dst_layer_memori": [256, 406], "user_rightmost_dst_lay": [256, 406], "user_rightmost_dst_layer_memori": [256, 406], "leftmost_prim_desc": [256, 406], "aprop_kind": [256, 406, 422, 424, 426, 428, 434, 440, 446, 450, 458, 460, 462, 464, 472, 474, 476, 478, 480, 482, 484, 488, 490, 492, 502, 508, 514, 519, 523, 524, 528, 532, 536, 541, 543], "leftmost_dst_iter_memori": [256, 406], "leftmost_dst_iter_c_memori": [256, 406], "rightmost_src_iter_md": [256, 406], "rightmost_src_iter_memori": [256, 406], "rightmost_src_iter_c_md": [256, 406], "rightmost_src_iter_c_memori": [256, 406], "rightmost_prim_desc": [256, 406], "rigthmost": [256, 406], "common_weights_layer_memori": [256, 406], "common_weights_iter_memori": [256, 406], "common_bias_memori": [256, 406], "workspace_primitive_desc": [256, 406], "commun": [256, 406], "create_w": [256, 406], "leftmost_workspace_memori": [256, 406], "rightmost_workspace_memori": [256, 406], "leftmost_lay": [256, 406], "rightmost_lay": [256, 406], "net_diff_src": [256, 406], "net_diff_src_memori": [256, 406], "user_leftmost_diff_src_layer_md": [256, 406], "user_rightmost_diff_src_layer_md": [256, 406], "leftmost_diff_src_layer_memori": [256, 406], "rightmost_diff_src_layer_memori": [256, 406], "backpropag": [256, 406], "user_common_diff_weights_lay": [256, 406], "user_common_diff_weights_layer_memori": [256, 406], "user_common_diff_bia": [256, 406], "user_common_diff_bias_memori": [256, 406], "net_diff_dst_dim": [256, 406], "net_diff_dst_memori": [256, 406], "diff_dst_lay": [256, 406], "user_leftmost_diff_dst_layer_md": [256, 406], "user_rightmost_diff_dst_layer_md": [256, 406], "leftmost_diff_dst_layer_memori": [256, 406], "rightmost_diff_dst_layer_memori": [256, 406], "leftmost_bwd_prim_desc": [256, 406], "diff_src_layer_desc": [256, 264, 299, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "diff_src_iter_desc": [256, 264, 299, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "diff_src_iter_c_desc": [256, 264, 299, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "diff_weights_layer_desc": [256, 264, 299, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "diff_weights_iter_desc": [256, 264, 299, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "diff_bias_desc": [256, 264, 276, 278, 283, 299, 406, 422, 424, 438, 444, 462, 464, 470, 478, 480, 482, 484, 490, 492, 524, 541, 543], "diff_dst_layer_desc": [256, 264, 299, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "diff_dst_iter_desc": [256, 264, 299, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "diff_dst_iter_c_desc": [256, 264, 299, 406, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "leftmost_diff_dst_iter_memori": [256, 406], "leftmost_diff_dst_iter_c_memori": [256, 406], "rightmost_diff_src_iter_md": [256, 406], "rightmost_diff_src_iter_memori": [256, 406], "rightmost_diff_src_iter_c_md": [256, 406], "rightmost_diff_src_iter_c_memori": [256, 406], "rightmost_bwd_prim_desc": [256, 406], "leftmost_src_layer_bwd_memori": [256, 406], "rightmost_src_layer_bwd_memori": [256, 406], "common_weights_layer_bwd_memori": [256, 406], "common_weights_iter_bwd_memori": [256, 406], "common_bias_bwd_memori": [256, 406], "common_diff_weights_layer_memori": [256, 406], "reorder_common_diff_weights_lay": [256, 406], "common_diff_bias_memori": [256, 406], "reorder_common_diff_bia": [256, 406], "dst_layer": [256, 270, 406, 512], "leftmost_dst_layer_bwd_memori": [256, 406], "rightmost_dst_layer_bwd_memori": [256, 406], "common_diff_weights_iter_memori": [256, 406], "leftmost_dst_iter_bwd_memori": [256, 406], "leftmost_dst_iter_c_bwd_memori": [256, 406], "rightmost_layer_bwd": [256, 406], "leftmost_layer_bwd": [256, 406], "shuffle_exampl": [257, 264, 407], "shuffle_axi": [257, 407], "shuffle_pd": [257, 407], "shuffle_forward": [257, 301, 328, 407, 510, 526], "shuffle_prim": [257, 407], "shuffle_arg": [257, 407], "softmax_exampl": [258, 264, 409], "softmax_pd": [258, 409], "softmax_forward": [258, 302, 328, 409, 510, 530], "softmax_prim": [258, 409], "softmax_arg": [258, 409], "sum_exampl": [259, 264, 411], "sum_pd": [259, 411], "sum_prim": [259, 411], "sum_arg": [259, 411], "dnnl_graph_sycl": [260, 262, 377, 378], "sycl_getting_started_tutori": 260, "make_alloc": [260, 262, 311, 330, 331, 377, 378], "sycl_malloc_wrapp": [260, 262, 264, 377, 378], "sycl_free_wrapp": [260, 262, 264, 377, 378], "gpu_selector_v": [260, 262, 377, 378], "cpu_selector_v": [260, 377, 378], "sycl_get_start": 260, "allocate_sycl_graph_mem": [260, 262, 264], "__has_includ": [261, 413], "elif": [261, 413], "kernel_tag": [261, 413], "sycl_interop_buffer_tutori": 261, "buf": [261, 264, 319, 323], "sycl_buf": [261, 413], "handler": [261, 413], "cgh": [261, 413], "get_access": [261, 413], "host_acc": [261, 413], "get_host_access": [261, 413], "exp_valu": [261, 413], "gpu_single_op_partition_tutori": 262, "apply_to_int": [263, 264, 270, 415, 512], "zp_b_mem": [263, 264, 415], "num_g": [263, 415], "n_group": [263, 415], "c_f32_mem": [263, 415], "dnnl_memory_desc": [264, 288], "dnnl_memori": [264, 288], "const_dnnl_memory_t": [264, 288, 289, 305], "dnnl_primitive_desc": [264, 294], "dnnl_primitive_attr": [264, 270], "const_dnnl_primitive_attr_t": [264, 270, 271, 272, 275, 276, 278, 279, 282, 283, 285, 286, 287, 290, 291, 294, 296, 297, 298, 299, 301, 302, 304, 308], "dnnl_post_op": [264, 270], "const_dnnl_post_ops_t": [264, 270], "dnnl_primit": [264, 294], "const_dnnl_primitive_t": [264, 289, 294, 305], "dnnl_engin": [264, 280], "dnnl_stream": [264, 303], "const_dnnl_stream_t": [264, 303], "dnnl_graph_ocl_allocate_f": [264, 319, 330], "dnnl_graph_ocl_deallocate_f": [264, 319, 330], "cl_event": [264, 289, 319, 330, 332], "dnnl_graph_sycl_allocate_f": [264, 311, 323, 331, 377, 378], "dev": [264, 323], "dnnl_graph_sycl_deallocate_f": [264, 311, 323, 331, 377, 378], "dnnl_graph_partit": [264, 321], "const_dnnl_graph_partition_t": [264, 321], "dnnl_graph_graph": [264, 316], "dnnl_graph_graph_t": [264, 316], "const_dnnl_graph_graph_t": [264, 316], "dnnl_graph_op": [264, 320], "dnnl_graph_op_t": [264, 316, 320], "const_dnnl_graph_op_t": [264, 320, 321], "dnnl_graph_alloc": [264, 311], "dnnl_graph_allocator_t": [264, 311, 319, 323], "const_dnnl_graph_allocator_t": [264, 311, 315, 319, 323], "dnnl_graph_compiled_partit": [264, 312], "const_dnnl_graph_compiled_partition_t": [264, 312, 319, 323], "dnnl_graph_tensor": [264, 324], "dnnl_graph_tensor_t": [264, 324], "const_dnnl_graph_tensor_t": [264, 312, 319, 323, 324], "dnnl_brgemm": [264, 308], "dnnl_brgemm_t": [264, 308], "const_dnnl_brgemm_t": [264, 308], "dnnl_brgemm_pack_b": [264, 308], "dnnl_brgemm_pack_b_t": [264, 308], "const_dnnl_brgemm_pack_b_t": [264, 308], "dnnl_accumulation_mode_t": [264, 269, 270, 328], "dnnl_cpu_isa_hints_t": [264, 300], "dnnl_cpu_isa_t": [264, 300], "dnnl_fpmath_mode_t": [264, 270, 281, 316, 328], "dnnl_graph_layout_type_t": [264, 318, 456], "dnnl_graph_op_attr_t": [264, 320], "dnnl_graph_op_kind_t": [264, 320], "dnnl_graph_partition_policy_t": [264, 316, 321], "dnnl_graph_tensor_property_t": [264, 318, 456], "dnnl_normalization_flags_t": [264, 271, 282, 285, 294, 328], "dnnl_ocl_interop_memory_kind_t": [264, 289, 332], "dnnl_profiling_data_kind_t": [264, 288, 295], "dnnl_prop_kind_t": [264, 270, 271, 276, 278, 279, 282, 283, 285, 286, 290, 291, 294, 298, 299, 301, 302, 328], "dnnl_rnn_flags_t": [264, 299, 328], "dnnl_scratchpad_mode_t": [264, 270, 328], "dnnl_stream_flags_t": [264, 303], "dnnl_sycl_interop_memory_kind_t": [264, 305, 333], "cpu_deletor": 264, "dnnl_graph_inplace_pair_t": [264, 312], "gemm_dims_t": 264, "sycl_deletor": 264, "min_run": 264, "bnorm_u8_via_binary_postop": [264, 339, 346], "cnn_inference_f32": [264, 339, 349], "cross_engine_reord": [264, 339, 367, 368], "initializer_list": 264, "extra_arg": 264, "gpu_float_sdpa": 264, "seq_len": 264, "num_head": 264, "head_dim": 264, "str2data_typ": 264, "id_to_set_any_layout": 264, "ptr": [264, 420, 547], "is_input": 264, "ocl_malloc_shar": 264, "ocl_fre": [264, 319, 330], "get_type_str": 264, "print_test_cas": 264, "fill_random": 264, "is_integ": 264, "run_cas": 264, "time_limit": 264, "bad_arg": 264, "matmul_perf": 264, "performance_profil": [264, 339, 395], "sycl_usm_tutori": 264, "inference_int8_matmul": [264, 339, 381], "weights_decompression_matmul": [264, 339, 415], "dnnl_api": [264, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324], "dnnl_primitive_desc_next_impl": [264, 294], "existing_primitive_desc": [264, 294], "dnnl_primitive_desc_get_attr": [264, 294], "dnnl_primitive_desc_query_s32": [264, 294], "dnnl_primitive_create_from_cache_blob": [264, 294], "cache_blob": [264, 289, 294, 319, 330, 332, 421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 499, 501, 505, 507, 510, 516, 518, 520, 522, 525, 527, 529, 531, 535, 540, 542], "dnnl_primitive_get_primitive_desc": [264, 294], "dnnl_primitive_get_cache_blob": [264, 294], "dnnl_primitive_attr_clon": [264, 270], "existing_attr": [264, 270], "dnnl_primitive_attr_get_fpmath_mod": [264, 270], "dnnl_primitive_attr_set_fpmath_mod": [264, 270], "dnnl_primitive_attr_get_fpmath_mode_v2": [264, 270], "dnnl_primitive_attr_get_determinist": [264, 270], "dnnl_primitive_attr_get_accumulation_mod": [264, 270], "dnnl_primitive_attr_set_accumulation_mod": [264, 270], "dnnl_primitive_attr_get_scratchpad_mod": [264, 270], "dnnl_primitive_attr_set_scal": [264, 270, 512], "group_dim": [264, 270], "dnnl_primitive_attr_set_zero_points_mask": [264, 270, 512], "dnnl_primitive_attr_set_zero_point": [264, 270, 512], "dnnl_primitive_attr_get_post_op": [264, 270], "dnnl_post_ops_cr": [264, 270], "dnnl_post_ops_clon": [264, 270], "existing_post_op": [264, 270], "dnnl_post_ops_destroi": [264, 270], "dnnl_post_ops_len": [264, 270], "dnnl_post_ops_get_kind": [264, 270], "dnnl_post_ops_append_sum": [264, 270], "dnnl_post_ops_get_params_sum": [264, 270], "dnnl_post_ops_get_params_eltwis": [264, 270], "weights_data_typ": [264, 270, 504], "bias_data_typ": [264, 270, 504], "dst_data_typ": [264, 270, 504], "kernel_s": [264, 270, 504], "stride_s": [264, 270, 504], "padding_l_s": [264, 270, 504], "dnnl_post_ops_get_params_dw": [264, 270], "src1_desc": [264, 270, 272, 430, 504], "dnnl_post_ops_get_params_binari": [264, 270], "dnnl_post_ops_get_params_prelu": [264, 270], "memory_desc": [264, 288, 289, 305, 332, 333], "dnnl_memory_desc_clon": [264, 288], "existing_memory_desc": [264, 288], "dnnl_memory_desc_get_blob": [264, 288], "dnnl_memory_desc_create_with_blob": [264, 288], "dnnl_memory_desc_create_with_csr_encod": [264, 288], "dnnl_memory_desc_create_with_packed_encod": [264, 288], "dnnl_memory_desc_create_submemori": [264, 288], "parent_memory_desc": [264, 288], "dnnl_memory_desc_reshap": [264, 288], "out_memory_desc": [264, 288], "in_memory_desc": [264, 288], "dnnl_memory_desc_permute_ax": [264, 288], "dnnl_memory_desc_query_v2": [264, 288], "lh": [264, 288], "rh": [264, 288], "dnnl_memory_desc_get_size_v2": [264, 288], "dnnl_data_type_s": [264, 288], "dnnl_memory_create_v2": [264, 288], "dnnl_memory_map_data": [264, 288], "mapped_ptr": [264, 288, 496], "dnnl_memory_map_data_v2": [264, 288], "dnnl_memory_unmap_data": [264, 288], "dnnl_memory_unmap_data_v2": [264, 288], "dnnl_memory_get_data_handle_v2": [264, 288], "dnnl_memory_set_data_handle_v2": [264, 288], "reorder_primitive_desc": [264, 297], "src_engin": [264, 297, 519], "dst_engin": [264, 297, 519], "dnnl_concat_primitive_desc_cr": [264, 275], "concat_primitive_desc": [264, 275], "dnnl_sum_primitive_desc_cr": [264, 304], "sum_primitive_desc": [264, 304], "dnnl_binary_primitive_desc_cr": [264, 272], "src0_desc": [264, 272, 430], "dnnl_convolution_backward_data_primitive_desc_cr": [264, 276], "dnnl_deconvolution_forward_primitive_desc_cr": [264, 278], "dnnl_deconvolution_backward_data_primitive_desc_cr": [264, 278], "dnnl_deconvolution_backward_weights_primitive_desc_cr": [264, 278], "dnnl_shuffle_forward_primitive_desc_cr": [264, 301], "dnnl_shuffle_backward_primitive_desc_cr": [264, 301], "data_desc": [264, 279, 448], "dnnl_softmax_forward_primitive_desc_cr": [264, 302], "softmax_axi": [264, 302], "dnnl_softmax_backward_primitive_desc_cr": [264, 302], "dnnl_prelu_forward_primitive_desc_cr": [264, 291], "dnnl_prelu_backward_primitive_desc_cr": [264, 291], "dnnl_batch_normalization_forward_primitive_desc_cr": [264, 271], "dnnl_batch_normalization_backward_primitive_desc_cr": [264, 271], "dnnl_group_normalization_forward_primitive_desc_cr": [264, 282], "dnnl_group_normalization_backward_primitive_desc_cr": [264, 282], "dnnl_layer_normalization_forward_primitive_desc_cr": [264, 285], "dnnl_layer_normalization_backward_primitive_desc_cr": [264, 285], "dnnl_layer_normalization_forward_primitive_desc_create_v2": [264, 285], "scale_shift_data_typ": [264, 285, 474, 476], "dnnl_layer_normalization_backward_primitive_desc_create_v2": [264, 285], "diff_scale_shift_data_typ": [264, 285, 474], "dnnl_inner_product_forward_primitive_desc_cr": [264, 283], "dnnl_inner_product_backward_data_primitive_desc_cr": [264, 283], "dnnl_inner_product_backward_weights_primitive_desc_cr": [264, 283], "dnnl_primitive_attr_set_rnn_data_qparam": [264, 270], "dnnl_primitive_attr_get_rnn_data_qparam": [264, 270], "dnnl_primitive_attr_set_rnn_weights_qparam": [264, 270], "dnnl_primitive_attr_get_rnn_weights_qparam": [264, 270], "dnnl_primitive_attr_set_rnn_weights_projection_qparam": [264, 270], "dnnl_primitive_attr_get_rnn_weights_projection_qparam": [264, 270], "dnnl_vanilla_rnn_forward_primitive_desc_cr": [264, 270, 299], "dnnl_vanilla_rnn_backward_primitive_desc_cr": [264, 299], "dnnl_lstm_forward_primitive_desc_cr": [264, 299], "dnnl_lstm_backward_primitive_desc_cr": [264, 299], "diff_weights_peephole_desc": [264, 299, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "diff_weights_projection_desc": [264, 299, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "dnnl_gru_forward_primitive_desc_cr": [264, 299], "dnnl_gru_backward_primitive_desc_cr": [264, 299], "dnnl_lbr_gru_forward_primitive_desc_cr": [264, 299], "dnnl_lbr_gru_backward_primitive_desc_cr": [264, 299], "dnnl_augru_forward_primitive_desc_cr": [264, 299], "dnnl_augru_backward_primitive_desc_cr": [264, 299], "diff_attention_desc": [264, 299, 422, 478], "dnnl_lbr_augru_forward_primitive_desc_cr": [264, 299], "dnnl_lbr_augru_backward_primitive_desc_cr": [264, 299], "dnnl_matmul_primitive_desc_cr": [264, 287], "dnnl_resampling_forward_primitive_desc_cr": [264, 298], "dnnl_resampling_backward_primitive_desc_cr": [264, 298], "dnnl_reduction_primitive_desc_cr": [264, 296], "dnnl_get_primitive_cache_capac": [264, 292], "dir": [264, 299, 300, 328], "dnnl_set_max_cpu_isa": [264, 300], "dnnl_get_effective_cpu_isa": [264, 300], "dnnl_set_cpu_isa_hint": [264, 300], "isa_hint": [264, 300, 328], "dnnl_get_cpu_isa_hint": [264, 300], "dnnl_reset_profil": [264, 295], "dnnl_query_profiling_data": [264, 295], "data_kind": [264, 295, 328], "num_entri": [264, 295], "offsetc": [264, 273, 306, 328, 334], "ao": [264, 273, 306, 328, 334], "bo": [264, 273, 306, 328, 334], "dnnl_dt2str": 264, "dnnl_fpmath_mode2str": 264, "dnnl_accumulation_mode2str": 264, "dnnl_engine_kind2str": 264, "dnnl_sparse_encoding2str": 264, "dnnl_fmt_tag2str": 264, "dnnl_prop_kind2str": 264, "dnnl_prim_kind2str": 264, "dnnl_alg_kind2str": 264, "dnnl_rnn_flags2str": 264, "dnnl_rnn_direction2str": 264, "dnnl_scratchpad_mode2str": 264, "dnnl_cpu_isa2str": 264, "dnnl_cpu_isa_hints2str": 264, "dnnl_runtime2str": 264, "dnnl_fmt_kind2str": 264, "dnnl_ocl_interop_memory_cr": [264, 289], "dnnl_ocl_interop_memory_get_memory_kind": [264, 289], "dnnl_ocl_interop_memory_get_mem_object": [264, 289], "mem_object": [264, 289, 332], "dnnl_ocl_interop_memory_set_mem_object": [264, 289], "dnnl_ocl_interop_engine_get_cache_blob_id": [264, 289], "dnnl_ocl_interop_engine_get_cache_blob": [264, 289, 332], "dnnl_ocl_interop_engine_create_from_cache_blob": [264, 289, 319], "dnnl_ocl_interop_engine_cr": [264, 289, 319], "dnnl_ocl_interop_engine_get_context": [264, 289], "dnnl_ocl_interop_get_devic": [264, 289], "dnnl_ocl_interop_stream_cr": [264, 289], "dnnl_ocl_interop_stream_get_command_queu": [264, 289], "dnnl_ocl_interop_primitive_execut": [264, 289], "dep": [264, 289, 305, 319, 323, 330, 331, 332, 333], "ndep": [264, 289, 319], "return_ev": [264, 289, 305, 319], "dnnl_sycl_interop_engine_cr": [264, 305], "dnnl_sycl_interop_engine_get_context": [264, 305], "dnnl_sycl_interop_engine_get_devic": [264, 305], "dnnl_sycl_interop_memory_cr": [264, 305], "dnnl_sycl_interop_memory_get_memory_kind": [264, 305], "dnnl_sycl_interop_memory_set_buff": [264, 305], "dnnl_sycl_interop_stream_cr": [264, 305], "dnnl_sycl_interop_stream_get_queu": [264, 305], "dnnl_sycl_interop_primitive_execut": [264, 305], "dnnl_threadpool_interop_stream_cr": [264, 306], "dnnl_threadpool_interop_stream_get_threadpool": [264, 306], "dnnl_threadpool_interop_set_max_concurr": [264, 306], "max_concurr": [264, 306], "dnnl_threadpool_interop_get_max_concurr": [264, 306], "dnnl_threadpool_interop_sgemm": [264, 306], "dnnl_threadpool_interop_gemm_u8s8s32": [264, 306], "dnnl_threadpool_interop_gemm_s8s8s32": [264, 306], "dnnl_engine_get_count": [264, 280], "dnnl_engine_get_kind": [264, 280], "dnnl_stream_get_engin": [264, 303], "dnnl_get_default_fpmath_mod": [264, 281], "dnnl_graph_allocator_cr": [264, 311], "dnnl_graph_allocator_destroi": [264, 311], "dnnl_graph_make_engine_with_alloc": [264, 315], "dnnl_graph_logical_tensor_init": [264, 318], "dnnl_graph_logical_tensor_init_with_dim": [264, 318], "dnnl_graph_logical_tensor_init_with_strid": [264, 318], "dnnl_graph_logical_tensor_get_mem_s": [264, 318], "dnnl_graph_logical_tensor_is_equ": [264, 318], "lt1": [264, 318], "lt2": [264, 318], "dnnl_graph_tensor_cr": [264, 324], "dnnl_graph_tensor_destroi": [264, 324], "dnnl_graph_tensor_get_data_handl": [264, 324], "dnnl_graph_tensor_set_data_handl": [264, 324], "dnnl_graph_tensor_get_engin": [264, 324], "dnnl_graph_op_cr": [264, 320], "dnnl_graph_op_destroi": [264, 320], "dnnl_graph_op_add_input": [264, 320], "dnnl_graph_op_add_output": [264, 320], "dnnl_graph_op_set_attr_f32": [264, 320], "value_len": [264, 320], "dnnl_graph_op_set_attr_bool": [264, 320], "dnnl_graph_op_set_attr_s64": [264, 320], "dnnl_graph_op_set_attr_str": [264, 320], "dnnl_graph_op_get_id": [264, 320], "dnnl_graph_op_get_kind": [264, 320], "dnnl_graph_partition_create_with_op": [264, 321], "dnnl_graph_partition_destroi": [264, 316, 321], "dnnl_graph_partition_get_op_num": [264, 321], "num": [264, 316, 321], "dnnl_graph_partition_get_op": [264, 321], "dnnl_graph_partition_get_id": [264, 321], "dnnl_graph_partition_compil": [264, 321], "in_num": [264, 321], "out_num": [264, 321], "dnnl_graph_partition_get_input_ports_num": [264, 321], "dnnl_graph_partition_get_input_port": [264, 321], "dnnl_graph_partition_get_output_ports_num": [264, 321], "dnnl_graph_partition_get_output_port": [264, 321], "dnnl_graph_partition_is_support": [264, 321], "dnnl_graph_partition_get_engine_kind": [264, 321], "dnnl_graph_compiled_partition_cr": [264, 312], "dnnl_graph_compiled_partition_execut": [264, 312], "num_input": [264, 312, 319, 323], "num_output": [264, 312, 319, 323], "dnnl_graph_compiled_partition_destroi": [264, 312], "dnnl_graph_compiled_partition_query_logical_tensor": [264, 312], "dnnl_graph_compiled_partition_get_inplace_port": [264, 312], "num_inplace_pair": [264, 312], "inplace_pair": [264, 312], "dnnl_graph_graph_cr": [264, 316], "dnnl_graph_graph_create_with_fpmath_mod": [264, 316], "dnnl_graph_graph_destroi": [264, 316], "dnnl_graph_add_op": [264, 316], "dnnl_graph_graph_fin": [264, 316], "dnnl_graph_graph_is_fin": [264, 316], "dnnl_graph_graph_filt": [264, 316], "dnnl_graph_graph_get_partition_num": [264, 316], "dnnl_graph_graph_get_partit": [264, 316], "dnnl_graph_get_compiled_partition_cache_capac": [264, 313], "dnnl_graph_set_compiled_partition_cache_capac": [264, 313], "dnnl_graph_set_constant_tensor_cach": [264, 314], "dnnl_graph_get_constant_tensor_cach": [264, 314], "eng_kind": [264, 314], "dnnl_graph_ocl_interop_allocator_cr": [264, 319], "ocl_malloc": [264, 319, 330], "dnnl_graph_ocl_interop_make_engine_with_alloc": [264, 319], "dnnl_graph_ocl_interop_make_engine_from_cache_blob_with_alloc": [264, 319], "dnnl_graph_ocl_interop_compiled_partition_execut": [264, 319], "dnnl_graph_sycl_interop_allocator_cr": [264, 323], "sycl_malloc": [264, 323, 331], "sycl_fre": [264, 323, 331], "dnnl_graph_sycl_interop_make_engine_with_alloc": [264, 323], "dnnl_graph_sycl_interop_compiled_partition_execut": [264, 323], "sycl_ev": [264, 323], "dnnl_brgemm_creat": [264, 308], "dnnl_brgemm_get_scratchpad_s": [264, 308], "dnnl_brgemm_set_hw_context": [264, 308], "dnnl_brgemm_release_hw_context": [264, 308], "dnnl_brgemm_gener": [264, 308], "dnnl_brgemm_execut": [264, 308], "dnnl_brgemm_execute_postop": [264, 308], "d_ptr": [264, 308], "binary_po_ptr": [264, 308], "dnnl_brgemm_destroi": [264, 308], "dnnl_brgemm_pack_b_cr": [264, 308], "dnnl_brgemm_pack_b_gener": [264, 308], "dnnl_brgemm_pack_b_execut": [264, 308], "in_ptr": [264, 308], "out_ptr": [264, 308], "dnnl_brgemm_pack_b_destroi": [264, 308], "complain_dnnl_error_and_exit": 264, "complain_fmt": 264, "dnnl_arg_attr_multiple_post_op_bas": [264, 294], "dnnl_arg_attr_output_scal": [264, 294], "dnnl_arg_diff_augru_attent": [264, 294], "dnnl_arg_diff_dst_0": [264, 294], "dnnl_arg_diff_dst_1": [264, 294], "dnnl_arg_diff_dst_2": [264, 294], "dnnl_arg_diff_src_0": [264, 294], "dnnl_arg_diff_src_2": [264, 294], "dnnl_arg_diff_src_3": [264, 294], "dnnl_arg_diff_weights_0": [264, 294], "dnnl_arg_diff_weights_1": [264, 294], "dnnl_arg_diff_weights_2": [264, 294], "dnnl_arg_diff_weights_3": [264, 294], "dnnl_arg_dst_0": [264, 294], "dnnl_arg_dst_1": [264, 294], "dnnl_arg_dst_2": [264, 294], "dnnl_arg_multiple_dst": [264, 294], "dnnl_arg_src_2": [264, 294], "dnnl_arg_src_3": [264, 294], "dnnl_arg_undef": [264, 294], "dnnl_arg_weights_0": [264, 294], "dnnl_arg_weights_1": [264, 294], "dnnl_arg_weights_2": [264, 294], "dnnl_arg_weights_3": [264, 294], "dnnl_enable_except": 264, "dnnl_jit_profile_linux_jitdump": [264, 300], "dnnl_jit_profile_linux_jitdump_use_tsc": [264, 300], "dnnl_jit_profile_linux_perf": [264, 300], "dnnl_jit_profile_linux_perfmap": [264, 300], "dnnl_jit_profile_non": [264, 300], "dnnl_jit_profile_vtun": [264, 300], "dnnl_runtime_f32_v": [264, 288, 365], "dnnl_runtime_s32_v": [264, 288], "dnnl_runtime_size_v": [264, 288], "dnnl_throw_error": 264, "pragma_macro": 264, "type_cas": 264, "bla": [268, 306, 334, 537], "convert_to_c": [269, 270, 280, 281, 294, 299, 328, 332, 333, 496], "aalgorithm": [270, 328, 430, 436, 438, 440, 442, 444, 446, 448, 450, 486, 488, 500, 502, 504, 517, 521, 523, 530, 532], "dnnl_": 270, "_primitive_desc_cr": 270, "as_data_typ": [270, 504], "output_height": [270, 504], "output_height_1x1_convolut": [270, 504], "output_width": [270, 504], "output_width_1x1_convolut": [270, 504], "dev_guide_attributes_post_ops_depthwis": [270, 504], "dev_guide_attributes_post_ops_depthwise_fus": [270, 294, 504], "another_input": [270, 504], "sic": [270, 512], "slc": [270, 512], "dic": [270, 512], "dlc": [270, 512], "rnn_attr": 270, "rnn_pd": 270, "nativ": [270, 512], "five": [270, 512], "weights_lay": [270, 512], "weights_iter": [270, 512], "violat": [270, 512], "batch_normalization_backward": [271, 328, 510], "allowed": 272, "algebra": 273, "gemm_u8s8s32": [273, 328, 334], "gemm_s8s8s32": [273, 328, 334], "mxk": [273, 306, 334], "kxn": [273, 306, 334], "mxn": [273, 306, 334], "xerbla": [273, 306, 334], "a_offset": [273, 306, 334], "b_offset": [273, 306, 334], "c_offset": [273, 306, 334], "convolution_backward_data": [276, 328, 510], "deconvolution_backward_data": [278, 328, 510], "deconvolution_backward_weight": [278, 328, 510], "deconvolution_forward": [278, 328, 442, 444, 510], "use_dst_for_bwd": [279, 448], "group_normalization_backward": [282, 328, 510], "inner_product_backward_data": [283, 328, 510], "inner_product_backward_weight": [283, 328, 510], "layer_normalization_backward": [285, 328, 510], "stat": 285, "manipul": 288, "discourag": 288, "inequ": [288, 465, 498], "set_buff": [288, 333], "ordinari": 288, "ill": 288, "clear": [288, 292, 313, 314], "never": [288, 300], "retriev": [288, 289, 294], "newli": 288, "encompass": [288, 498], "reshap": [288, 498], "join": [288, 498], "in_md": [288, 498], "out_md": 288, "expect_out_md": [288, 498], "in_dim": 288, "out_dim": 288, "in_tag": 288, "out_tag": 288, "lie": 288, "oihw_4i16o4i": 288, "oihw_4i16o4i_": 288, "4i16o4i": 288, "had": [288, 305, 332, 333, 394, 496], "unmap": [288, 496], "mainli": [288, 496], "made": [288, 496], "prelu_backward": [291, 328, 510], "get_primitive_cache_capac": [292, 328], "set_primitive_cache_capac": [292, 328], "held": [292, 313], "excess": [292, 313], "aqueri": [294, 328], "32bit": 294, "qualifi": 294, "dev_guide_attributes_post_ops_binary_fus": 294, "mnemon": 294, "peephol": [294, 299, 490, 492, 524], "norm_lp": 296, "resampling_backward": [298, 328, 510], "resampling": 298, "rnn_flag": [299, 328], "rnn_primitive_desc_bas": [299, 328, 422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 514, 541, 543], "lbr": [299, 477, 478, 479, 480, 481, 482, 483, 484], "aid": 300, "version_t": [300, 328], "cpu_isa": [300, 328], "cpu_isa_hint": [300, 328], "set_verbos": [300, 328], "get_default_fpmath_mod": [300, 328], "set_jit_dump": [300, 328], "set_jit_profiling_flag": [300, 328], "set_jit_profiling_jitdumpdir": [300, 328], "minor": [300, 544], "dnnl_jit_dump": 300, "dnnl_jit_profil": 300, "vtune": [300, 339, 387], "pid": 300, "perf": 300, "mkdtemp": 300, "xxxxxx": 300, "home": 300, "revert": 300, "invok": 300, "dnnl_max_cpu_isa": 300, "dnnl_cpu_isa": 300, "reflect": 300, "dnnl_cpu_isa_hint": 300, "shuffle_backward": [301, 328, 510], "softmax_backward": [302, 328, 510], "threapdool_ifac": [306, 334], "threadloc": 306, "trait": [309, 328, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "handle_trait": [309, 328, 465], "acquir": 311, "dealloc": [311, 319, 323, 371], "input_id": [312, 455], "get_compiled_partition_cache_capac": [313, 329], "set_compiled_partition_cache_capac": [313, 329], "set_constant_tensor_cach": [314, 329], "get_constant_tensor_cach": [314, 329], "set_constant_tensor_cache_capac": [314, 329], "get_constant_tensor_cache_capac": [314, 329], "deprec": 314, "supplement": [315, 319, 323], "meta": 318, "enrich": 318, "progress": 318, "toward": 318, "60": 318, "layout_id": [318, 456], "openpow": 326, "ppc64": 326, "practition": 326, "c_partit": [330, 331], "beforehand": 330, "adevic": [331, 333], "acontext": [331, 333], "amemori": [332, 333], "set_mem_object": 332, "aprimit": [332, 333], "query_md": [332, 333, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 510, 514, 515, 517, 518, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "aqueu": 333, "abuff": 333, "get_threadpool": 334, "cnn_inference_int8": [339, 350], "cnn_training_bf16": 339, "cnn_training_f32": 339, "cpu_cnn_training_f32": 339, "cpu_matmul_csr": 339, "cpu_matmul_quant": 339, "cpu_matmul_weights_compress": 339, "cpu_rnn_inference_f32": [339, 363], "cpu_rnn_inference_int8": [339, 364], "cpu_sgemm_and_matmul": 339, "gpu_opencl_interop": [339, 372], "memory_format_propag": 339, "rnn_training_f32": 339, "sycl_interop_buff": [339, 413], "untitl": 339, "legal": 339, "trademark": 339, "awai": [346, 348, 349, 373, 375, 376, 377, 378], "detriment": [348, 349], "realist": 350, "_x": 360, "research": 360, "max_": 360, "min_": 360, "earli": 360, "obviou": 360, "disadvantag": 360, "wors": 360, "inevit": 360, "unidirectin": [363, 364], "charact": [363, 364], "facil": [368, 371, 372, 413], "resid": [368, 371, 372, 373, 374, 375, 376, 377, 378, 413], "thank": [368, 371], "lightweight": [368, 371], "compris": 371, "singleton": 371, "ten": 371, "plai": 371, "educ": 371, "aliv": 371, "_d": 371, "relu_d": 371, "human": [371, 413], "encourag": 371, "experi": 371, "familiar": 371, "spoil": 371, "oop": 371, "forgot": 371, "liter": 372, "get_ocl_mem_object": 372, "realiz": [372, 413], "heavier": [372, 413], "serv": 372, "submiss": 372, "cpu_getting_start": 373, "till": [373, 376, 377], "mayb": [373, 374, 376, 377], "unfin": [373, 376, 377], "simul": [373, 374, 375, 376, 377, 378], "cpu_inference_int8": 374, "cpu_single_op_partit": 375, "quickli": [375, 378], "gpu_opencl_getting_start": 376, "dnnl_graph_ocl": 376, "sycl_getting_start": 377, "sycl_single_op_partit": 378, "logo": 387, "openvino": 387, "pentium": 387, "subsidiari": 387, "brand": 387, "countri": 387, "khrono": 387, "central": 394, "understood": 394, "reader": 394, "bother": 394, "idiomat": 394, "realli": 394, "ver": 394, "1x128x14x14": 394, "326904": 394, "256x128x3x3": 394, "244141": 394, "bia_undef": [394, 395], "mb1_ic128oc256_ih14oh14kh3sh1dh0ph1_iw14ow14kw3sw1dw0pw1": 394, "20312": 394, "ws_undef": 394, "mb1ic256_ih14oh14kh3sh1ph1_iw14ow14kw3sw1pw1": 394, "187012": 394, "1x256x14x14": 394, "0419922": 394, "knowledg": 395, "ex": 395, "user_": 395, "meant": 395, "enter": 395, "easili": 395, "launch": 395, "shell": 395, "tell": 395, "elsewher": 395, "38": 395, "mb128_ic3oc96_ih227oh55kh11sh4dh0ph0_iw227ow55kw11sw4dw0pw0": 395, "314": 395, "data_f32": 395, "diff_undef": 395, "128x96x55x55": 395, "87695": 395, "incorpor": 395, "reoder": 395, "conv_dst1": 395, "pai": 395, "penalti": 395, "96x3x11x11": 395, "0310059": 395, "3101": 395, "66895": 395, "80396": 395, "closer": 395, "0148926": 395, "968": 395, "66797": 395, "kmp_affin": 395, "platinum": 395, "8180": 395, "50ghz": 395, "numa": 395, "ram": 395, "ddr4": 395, "gb": 395, "catalogu": 417, "weak": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "allow_empti": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "get_primitive_desc": [421, 423, 425, 427, 429, 433, 435, 437, 439, 441, 443, 445, 447, 449, 457, 459, 461, 463, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 499, 501, 505, 507, 510, 516, 518, 520, 522, 525, 527, 529, 531, 535, 540, 542], "get_kind": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 501, 502, 505, 506, 507, 508, 510, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 540, 541, 542, 543], "default_attr": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 517, 519, 521, 523, 526, 528, 530, 532, 536, 541, 543], "get_cell_kind": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_prop_kind": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_direct": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_dil": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_padding_l": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_padding_r": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_epsilon": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_algorithm": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_alpha": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_beta": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_axi": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_local_s": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_k": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_p": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_factor": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_activation_kind": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_kernel": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_group_s": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "get_primitive_attr": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 515, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "next_impl": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 517, 519, 521, 523, 524, 526, 528, 530, 532, 536, 541, 543], "augru_attention_desc": [422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "diff_augru_attention_desc": [422, 424, 462, 464, 478, 480, 482, 484, 490, 492, 524, 541, 543], "signifi": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 498, 500, 502, 506, 508, 517, 519, 521, 523, 526, 528, 530, 532, 536, 538, 539, 541, 543], "src0": 430, "caller": [434, 514, 519, 536], "prim_kind": [434, 514, 519, 536], "prop_kind1": [434, 514, 519, 536], "prop_kind2": [434, 514, 519, 536], "get_count": 452, "uniniti": [452, 465, 496, 510, 534], "thrown": [452, 465, 496, 510, 534], "wrap_c_api": 453, "output_id": 455, "union": 456, "descend": [465, 510, 514, 515, 524], "weak_ptr": 465, "dummi": 465, "destructor": 466, "validate_dim": 496, "min_siz": 496, "adata_typ": [496, 498], "map_data": 496, "unmap_data": 496, "absenc": [496, 498], "aformat_tag": 498, "permute_ax": 498, "get_ndim": 498, "get_padded_offset": 498, "get_submemory_offset": 498, "get_nnz": 498, "get_sparse_encod": 498, "get_format_kind": 498, "is_zero": 498, "index_dt": 498, "pointer_dt": 498, "new_desc": 498, "get_params_sum": 504, "get_params_eltwis": 504, "get_params_dw": 504, "get_params_prelu": 504, "zeropoint": 504, "oc_dim": 504, "mb_dim": 504, "channel_dim": 504, "height_dim": 504, "prelu_weight": 504, "weight_desc": [506, 508], "c_pd": 510, "get_fpmath_mod": 512, "get_accumulation_mod": 512, "set_accumulation_mod": 512, "get_determinist": 512, "get_post_op": 512, "get_rnn_data_qparam": 512, "get_rnn_weights_qparam": 512, "set_rnn_weights_projection_qparam": 512, "get_rnn_weights_projection_qparam": 512, "rnn_d": 512, "get_src_engin": 519, "get_dst_engin": 519, "aflag": 534, "constexpr": 537, "virtual": 537, "subclass": 537, "closur": 537, "binary_po": 538, "cpu_runtim": 544, "gpu_runtim": 544, "absent": 544, "ctx_": 547}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"advanc": 0, "topic": 0, "build": [1, 20, 21, 24, 27, 28, 33, 35, 36, 138, 139, 150, 155, 373, 374, 375, 376, 377, 378], "link": [1, 47], "class": [2, 3, 4, 5, 6, 7, 8], "dnnl": [2, 3, 4, 5, 6, 7, 8, 158, 161, 162, 163, 167, 171, 174, 175, 176, 177, 179, 181, 183, 185, 186, 187, 188, 189, 191, 193, 195, 197, 199, 201, 203, 205, 208, 210, 212, 328, 329, 330, 331, 332, 333, 334, 335, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "graph": [2, 3, 4, 5, 6, 7, 8, 16, 21, 34, 35, 36, 174, 175, 176, 177, 179, 181, 183, 265, 310, 316, 329, 330, 331, 373, 374, 375, 376, 377, 378], "alloc": [2, 311, 394], "overview": [2, 3, 4, 5, 6, 7, 8, 30, 133, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 264, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 336, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "detail": [2, 3, 4, 5, 6, 7, 8, 17, 19, 23, 26, 31, 33, 39, 43, 46, 48, 49, 136, 137, 140, 141, 142, 143, 145, 146, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 264, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 336, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "document": [2, 3, 4, 5, 6, 7, 8, 20, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 264, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 336, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "construct": [2, 3, 4, 5, 6, 7, 8, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "compiled_partit": 3, "method": [3, 4, 5, 6, 7, 8, 35, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 453, 458, 460, 462, 464, 465, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 515, 517, 518, 519, 521, 523, 524, 526, 528, 530, 532, 534, 536, 537, 538, 539, 541, 543], "logical_tensor": [5, 174, 175, 176], "typedef": [5, 270, 277, 280, 288, 294, 300, 303, 308, 311, 312, 316, 319, 320, 321, 323, 324, 496], "op": [6, 13, 17, 19, 23, 26, 31, 34, 39, 43, 46, 48, 49, 136, 140, 141, 142, 143, 144, 145, 146, 177, 179, 320, 346, 375, 378], "partit": [7, 34, 181, 312, 313, 321, 373, 374, 375, 376, 377, 378], "tensor": [8, 24, 25, 34, 314, 318, 324], "primit": [9, 10, 11, 12, 13, 14, 15, 16, 33, 49, 135, 138, 139, 155, 156, 193, 292, 293, 340, 342, 344, 353, 355, 359, 362, 368, 369, 371, 372, 379, 383, 385, 388, 390, 392, 394, 396, 398, 400, 402, 404, 407, 409, 411, 413, 510, 548], "attribut": [9, 10, 11, 12, 13, 14, 15, 17, 19, 23, 26, 31, 39, 42, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 140, 141, 142, 143, 144, 145, 146, 152, 153, 270], "usag": [9, 135], "support": [9, 13, 17, 19, 23, 31, 37, 39, 42, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 140, 141, 143, 145, 146, 149, 267, 548], "relat": [9, 135, 156], "error": [9, 453], "handl": [9, 30, 133, 465], "accumul": [10, 269], "mode": [10, 12, 155, 269, 281], "determinist": 11, "float": [12, 29, 37, 281], "point": [12, 29, 37, 281], "math": [12, 281], "The": 12, "enforc": 12, "an": 12, "integr": 12, "A": 12, "note": [12, 17, 19, 22, 23, 26, 31, 39, 43, 46, 48, 49, 136, 137, 140, 141, 142, 145, 146], "default": 12, "post": [13, 17, 19, 23, 26, 31, 39, 43, 46, 48, 49, 136, 140, 141, 142, 143, 144, 145, 146, 346], "eltwis": [13, 31, 238, 279], "sum": [13, 146, 259, 304, 411, 535, 536], "depthwis": 13, "binari": [13, 19, 216, 272, 344, 346, 429, 430], "prelu": [13, 100, 137, 252, 291], "exampl": [13, 14, 15, 17, 19, 23, 26, 31, 32, 39, 42, 43, 44, 46, 48, 49, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 149, 152, 153, 155, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 362, 363, 364, 369, 374, 379, 383, 385, 388, 390, 392, 395, 396, 398, 400, 402, 404, 406, 407, 409, 411], "chain": 13, "relu": [13, 111, 368, 371], "tanh": [13, 129], "scaleshift": 13, "quantiz": [14, 37, 42, 102, 360], "introduct": [14, 16, 34, 42, 149, 151, 154, 394], "model": [14, 266, 418], "numer": [14, 29], "behavior": [14, 29], "convolut": [14, 26, 63, 224, 276, 355, 374, 394], "workflow": [14, 42, 149], "per": 14, "channel": [14, 154], "scale": [14, 17, 39, 42, 46], "api": [14, 22, 24, 33, 135, 268, 274, 284, 289, 305, 306, 310, 317, 319, 323, 372, 373, 374, 376, 377, 413], "argument": [14, 17, 19, 23, 26, 31, 39, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 140, 141, 142, 143, 144, 145, 146], "1": [14, 26, 45], "weight": [14, 415], "output": [14, 25, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 155], "2": [14, 26, 45], "scratchpad": 15, "memori": [15, 16, 25, 30, 133, 135, 138, 151, 154, 156, 185, 186, 187, 188, 288, 368, 371, 372, 394, 413, 496, 498], "engin": [15, 16, 135, 156, 167, 280, 315, 367, 368, 371, 372, 413, 452], "librari": [15, 20, 21, 29, 47, 326], "manag": [15, 138], "user": 15, "basic": [16, 34, 151], "concept": [16, 34, 151], "stream": [16, 210, 303, 368, 371, 372, 413, 534], "object": [16, 30, 133, 368, 371, 372, 394, 413], "level": 16, "abstract": 16, "creat": [16, 368, 371, 372, 394, 413], "extens": [16, 265, 372, 376, 377, 413], "micro": 16, "kernel": [16, 372, 413], "batch": [17, 152, 271, 342], "normal": [17, 39, 46, 48, 271, 282, 285, 342, 379, 385, 388], "gener": [17, 19, 23, 26, 29, 31, 39, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154], "forward": [17, 26, 31, 39, 41, 43, 46, 48, 136, 137, 142, 144, 145], "differ": [17, 26, 31, 35, 39, 41, 43, 46, 136, 137, 142, 144, 145], "between": [17, 26, 31, 35, 39, 41, 43, 46, 136, 137, 142, 144, 145, 367, 368], "train": [17, 26, 29, 31, 37, 39, 41, 43, 46, 136, 137, 142, 143, 144, 145, 148, 149, 351, 352, 358, 406], "infer": [17, 26, 29, 31, 37, 39, 40, 41, 42, 43, 46, 136, 137, 142, 144, 145, 348, 349, 350, 363, 364, 374, 381], "backward": [17, 26, 31, 39, 41, 43, 46, 48, 136, 137, 142, 144, 145], "execut": [17, 19, 23, 26, 31, 39, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 368, 371, 372, 373, 374, 375, 376, 377, 378, 394, 413], "implement": [17, 19, 23, 26, 31, 39, 43, 46, 48, 49, 136, 137, 140, 141, 142, 143, 144, 145, 146, 152, 153, 155, 395], "data": [17, 19, 23, 26, 29, 31, 39, 42, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 277, 368, 371, 372, 394, 413], "type": [17, 19, 23, 26, 29, 31, 39, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 140, 141, 142, 143, 144, 145, 146, 152, 153, 277], "represent": [17, 19, 23, 26, 31, 39, 43, 46, 48, 49, 136, 137, 140, 141, 143, 145, 146, 151, 152, 153], "mean": [17, 39, 46], "varianc": [17, 39, 46], "shift": [17, 39, 46], "sourc": [17, 19, 20, 39, 46, 48, 136, 140, 145, 146, 150, 394], "destin": [17, 19, 39, 46, 48, 136, 140, 145, 146, 394], "Their": [17, 39, 46, 48, 136, 145], "gradient": [17, 39, 46, 48, 136, 145], "limit": [17, 19, 21, 23, 26, 29, 31, 33, 39, 43, 46, 48, 49, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 152, 153], "perform": [17, 18, 19, 23, 26, 31, 39, 43, 46, 48, 49, 136, 137, 139, 140, 141, 142, 144, 145, 146, 394, 395, 417], "tip": [17, 19, 23, 26, 31, 39, 43, 46, 48, 49, 136, 137, 140, 141, 142, 144, 145, 146], "benchmark": [18, 134], "from": [20, 150, 368], "download": 20, "code": [20, 35, 44, 150, 371], "linux": [20, 47, 139], "maco": [20, 47], "gcc": 20, "clang": 20, "intel": [20, 29, 45, 150], "oneapi": [20, 326, 336], "dpc": [20, 30, 327], "c": [20, 35, 218, 226, 236], "compil": [20, 21, 34, 35, 312, 313, 373, 374, 375, 376, 377, 378], "sycl": [20, 30, 305, 323, 338, 377, 413], "runtim": [20, 21, 27, 47, 134, 284, 317], "target": [20, 21], "aarch64": [20, 21], "x64": 20, "host": [20, 21], "arm": [20, 21], "comput": [20, 21, 45], "acl": 20, "window": [20, 47], "microsoft": 20, "visual": 20, "valid": [20, 22, 368, 371, 372, 413], "instal": 20, "option": [21, 35], "common": [21, 33, 274, 294], "configur": [21, 134, 395], "function": [21, 143, 264, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 368, 371, 372, 373, 374, 375, 376, 377, 378, 394, 413], "onednn_enable_workload": 21, "onednn_enable_primit": 21, "onednn_enable_primitive_cpu_isa": 21, "onednn_enable_primitive_gpu_isa": 21, "onednn_enable_gemm_kernels_isa": 21, "test": 21, "onednn_test_set": 21, "cpu": [21, 27, 28, 44, 45, 134, 367, 368, 373, 375, 413], "specif": [21, 25, 41], "architectur": [21, 29], "openmp": 21, "thread": [21, 134, 147], "block": [21, 154, 395], "tbb": 21, "threadpool": [21, 147, 306], "vendor": 21, "bla": [21, 273], "gpu": [21, 44, 45, 367, 368, 372, 378, 413], "opencl": [21, 133, 289, 319, 327, 372, 376], "compon": 21, "backend": 21, "input": [22, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "concat": [23, 62, 223, 275, 353, 433, 434], "constant": [24, 314], "cach": [24, 135, 138, 292, 313, 314], "time": [24, 27, 28, 33, 35, 36, 138, 139, 155], "control": [24, 27, 28, 33, 35, 36, 138, 139, 155], "run": [24, 28, 36, 138, 139, 155], "capac": 24, "environ": [24, 29, 35], "variabl": [24, 25, 35], "name": 25, "convent": 25, "formula": 25, "verbos": [25, 155, 156], "rnn": [25, 143, 299, 340, 363, 364, 390, 406], "notat": 25, "format": [25, 154, 394, 395], "tag": [25, 139], "regular": [26, 63], "group": [26, 39, 63, 282, 379], "dilat": [26, 63], "deconvolut": [26, 278], "transpos": 26, "3": 26, "algorithm": [26, 161], "direct": 26, "winograd": 26, "automat": 26, "select": [26, 115], "dispatch": [27, 155, 156], "isa": 28, "hint": 28, "onednn": [29, 47, 134, 139, 147, 150, 268, 368, 371, 372, 413], "hardwar": 29, "r": 29, "processor": [29, 45], "graphic": 29, "xe": 29, "interoper": [30, 133, 284, 289, 305, 306, 317, 319, 323, 327], "buffer": [30, 133, 394], "usm": [30, 133], "interfac": [30, 133], "depend": [30, 133], "except": 31, "experiment": 33, "featur": [33, 139], "onednn_experimental_spars": 33, "matrix": [33, 49, 152, 287], "multipl": [33, 49, 152, 154, 287], "csr": 33, "encod": 33, "pack": 33, "reorder": [33, 113, 141, 254, 297, 367, 368, 394, 402, 518, 519], "onednn_experimental_ukernel": 33, "onednn_experimental_profil": 33, "onednn_experimental_graph_compiler_backend": 33, "logic": [34, 318], "codegen": 35, "jit": [35, 44], "llvm": 35, "builtin": 35, "enabl": [35, 155], "trace": 35, "switch": 35, "dump": [35, 36], "fusion": 37, "pattern": 37, "aggress": 37, "low": 38, "precis": 38, "int8": [38, 40, 42, 45, 350, 364, 374, 381], "bf16": [38, 351], "f16": 38, "best": 40, "practic": 40, "fp32": [40, 148], "aspect": 41, "propag": [41, 394], "kind": [41, 167, 179, 193], "workspac": 41, "process": [42, 150], "rang": 42, "factor": 42, "inner": [43, 283, 383], "product": [43, 283, 383], "inspect": [44, 417], "nuanc": 45, "mix": 45, "u8": [45, 346], "s8": 45, "avx2": 45, "avx": 45, "512": 45, "dl": 45, "boost": 45, "same": 45, "refer": [45, 326], "layer": [46, 285, 385], "header": [47, 368, 371, 372, 373, 374, 375, 376, 377, 378, 413], "file": 47, "harden": 47, "local": [48, 388], "respons": [48, 388], "lrn": [48, 246, 286], "ab": 50, "oper": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 151, 156, 267], "absbackward": 51, "add": 52, "avgpool": 53, "avgpoolbackward": 54, "batchnormforwardtrain": 55, "batchnorminfer": 56, "batchnormtrainingbackward": 57, "biasadd": 58, "biasaddbackward": 59, "clamp": 60, "clampbackward": 61, "convolutionbackwarddata": 64, "convolutionbackwardweight": 65, "convtranspos": 66, "convtransposebackwarddata": 67, "convtransposebackwardweight": 68, "dequant": 69, "divid": 70, "dynamicdequant": 71, "dynamicquant": 72, "elu": 73, "elubackward": 74, "end": 75, "exp": 76, "gelu": 77, "gelubackward": 78, "hardsigmoid": 79, "hardsigmoidbackward": 80, "hardswish": 81, "hardswishbackward": 82, "interpol": 83, "interpolatebackward": 84, "layernorm": 85, "layernormbackward": 86, "leakyrelu": 87, "log": 88, "logsoftmax": 89, "logsoftmaxbackward": 90, "matmul": [91, 248, 359, 360, 362, 365, 381, 392, 415, 493, 494], "maximum": 92, "maxpool": 93, "maxpoolbackward": 94, "minimum": 95, "mish": 96, "mishbackward": 97, "multipli": 98, "pow": 99, "broadcast": [100, 101, 115], "rule": [100, 101, 115], "prelubackward": 101, "reciproc": 103, "reducel1": 104, "reducel2": 105, "reducemax": 106, "reducemean": 107, "reducemin": 108, "reduceprod": 109, "reducesum": 110, "relubackward": 112, "round": 114, "sigmoid": 116, "sigmoidbackward": 117, "softmax": [118, 145, 258, 302, 409], "softmaxbackward": 119, "softplu": 120, "softplusbackward": 121, "sqrt": 122, "sqrtbackward": 123, "squar": 124, "squareddiffer": 125, "staticreshap": 126, "statictranspos": 127, "subtract": 128, "tanhbackward": 130, "typecast": 131, "wildcard": 132, "set": 134, "whole": 134, "machin": 134, "singl": [134, 375, 378], "numa": 134, "domain": 134, "sever": 134, "core": 134, "within": 134, "persist": 135, "descriptor": [135, 371], "pool": [136, 251, 290, 394, 396], "consumpt": 138, "profil": [138, 139, 155, 157, 295, 395, 417], "vtune": [139, 157], "itt": 139, "hotspot": 139, "microarchitectur": 139, "inform": [139, 150, 387], "perf": 139, "reduct": [140, 253, 296, 400, 516, 517], "resampl": [142, 255, 298, 404], "nearest": 142, "neighbor": 142, "bilinear": 142, "cell": 143, "vanilla": 143, "lstm": [143, 247, 390], "peephol": 143, "project": 143, "lstmp": 143, "gru": 143, "linear": 143, "befor": 143, "reset": 143, "augru": [143, 214, 340], "consider": 143, "shuffl": [144, 257, 301, 407], "layout": [144, 154], "us": [147, 154], "base": 147, "bfp16": 148, "bfloat16": 149, "transit": 150, "mkl": 150, "dnn": 150, "summari": [150, 395], "chang": 150, "broken": 150, "compat": 150, "develop": [150, 326], "reduc": 152, "transform": 153, "understand": [154, 155], "nomenclatur": 154, "plain": 154, "nchw": 154, "nhwc": 154, "chwn": 154, "relev": 154, "read": 154, "stride": 154, "what": 154, "ar": 154, "8": 154, "16": 154, "troubleshoot": 155, "creation": [155, 156], "issu": 155, "workload": 155, "why": 155, "given": 155, "i": 155, "onednn_verbos": 155, "timestamp": 155, "decrypt": 155, "messag": 156, "catalogu": 156, "tm": 157, "enum": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "accumulation_mod": 158, "valu": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "dnnl_accumulation_mode_t": 159, "dnnl_alg_kind_t": 160, "cpu_isa": 162, "cpu_isa_hint": 163, "dnnl_cpu_isa_hints_t": 164, "dnnl_cpu_isa_t": 165, "dnnl_data_type_t": 166, "dnnl_engine_kind_t": 168, "dnnl_format_kind_t": 169, "dnnl_format_tag_t": 170, "fpmath_mod": 171, "dnnl_fpmath_mode_t": 172, "dnnl_graph_layout_type_t": 173, "data_typ": [174, 185], "layout_typ": 175, "property_typ": 176, "attr": 177, "dnnl_graph_op_attr_t": 178, "dnnl_graph_op_kind_t": 180, "polici": 181, "dnnl_graph_partition_policy_t": 182, "statu": [183, 208, 322], "dnnl_graph_tensor_property_t": 184, "format_kind": 186, "format_tag": 187, "sparse_encod": 188, "normalization_flag": 189, "dnnl_normalization_flags_t": 190, "ocl_interop": [191, 330, 332], "memory_kind": [191, 212], "dnnl_ocl_interop_memory_kind_t": 192, "dnnl_primitive_kind_t": 194, "profiling_data_kind": 195, "dnnl_profiling_data_kind_t": 196, "prop_kind": 197, "dnnl_prop_kind_t": 198, "queri": 199, "dnnl_query_t": 200, "rnn_direct": 201, "dnnl_rnn_direction_t": 202, "rnn_flag": 203, "dnnl_rnn_flags_t": 204, "scratchpad_mod": 205, "dnnl_scratchpad_mode_t": 206, "dnnl_sparse_encoding_t": 207, "dnnl_status_t": 209, "flag": 210, "dnnl_stream_flags_t": 211, "sycl_interop": [212, 331, 333], "dnnl_sycl_interop_memory_kind_t": 213, "cpp": [214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "batch_norm": 215, "bnorm_u8_via_binary_postop": 217, "cnn_inference_f32": [218, 219], "cnn_inference_int8": 220, "cnn_training_bf16": 221, "cnn_training_f32": 222, "cpu_brgemm": 225, "cpu_cnn_training_f32": 226, "cpu_getting_start": 227, "cpu_inference_int8": 228, "cpu_matmul_csr": 229, "cpu_matmul_quant": 230, "cpu_matmul_weights_compress": 231, "cpu_rnn_inference_f32": 232, "cpu_rnn_inference_int8": 233, "cpu_sgemm_and_matmul": 234, "cpu_single_op_partit": 235, "cross_engine_reord": [236, 237], "getting_start": 239, "gpu_opencl_getting_start": 240, "gpu_opencl_interop": 241, "group_norm": 242, "inference_int8_matmul": 243, "inner_product": 244, "layer_norm": 245, "memory_format_propag": [249, 394], "performance_profil": 250, "rnn_training_f32": 256, "sycl_getting_start": 260, "sycl_interop_buff": 261, "sycl_single_op_partit": 262, "weights_decompression_matmul": 263, "global": [264, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334], "namespac": [264, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "program": [266, 418], "macro": [277, 288, 294, 300, 318], "servic": 300, "ukernel": [307, 308, 335, 357, 538, 539, 549], "brgemm": [308, 357, 538], "util": [309, 325], "deep": 326, "neural": 326, "network": 326, "guid": 326, "threadpool_interop": [334, 537], "std": 337, "orphan": 339, "untitl": [341, 343, 345, 347, 354, 356, 361, 366, 370, 380, 382, 384, 386, 389, 391, 393, 397, 399, 401, 403, 405, 408, 410, 412, 416], "bnorm": 346, "cnn": [348, 349, 350, 351, 352, 358], "f32": [348, 349, 352, 358, 363, 406], "tutori": [360, 365, 381, 394, 415], "comparison": 365, "sgemm": 365, "public": [368, 371, 372, 373, 374, 375, 376, 377, 378, 413], "cross_engine_reorder_tutori": 368, "wrap": [368, 371, 372, 413], "get": [368, 371, 372, 373, 374, 375, 376, 377, 378, 413], "result": [368, 371, 372, 394, 413], "all": 368, "element": 369, "wise": 369, "start": [371, 372, 373, 376, 377, 413], "getting_started_tutori": 371, "prepar": 371, "outsid": 371, "altern": 371, "wai": 371, "obtain": 371, "main": [371, 413], "gpu_opencl_interop_tutori": 372, "initi": [372, 394, 413], "custom": [372, 413], "cpu_getting_started_tutori": 373, "simple_pattern_int8": 374, "cpu_single_op_partition_tutori": 375, "ocl_getting_started_tutori": 376, "sycl_getting_started_tutori": 377, "sycl_single_op_partition_tutori": 378, "legal": 387, "trademark": 387, "determin": 394, "need": 394, "intermedi": 394, "necessari": 394, "walkthrough": 395, "naiv": 395, "fuse": 395, "notic": 395, "both": 413, "sycl_interop_buffer_tutori": 413, "todo": 414, "list": 414, "decompress": 415, "struct": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547], "args_t": 419, "cpu_deletor": 420, "augru_backward": [421, 422], "inherit": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "member": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543], "primitive_desc": [422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 458, 460, 462, 464, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 500, 502, 506, 508, 514, 517, 519, 521, 523, 526, 528, 530, 532, 536, 541, 543], "augru_forward": [423, 424], "batch_normalization_backward": [425, 426], "batch_normalization_forward": [427, 428], "dnnl_brgemm": 431, "dnnl_brgemm_pack_b": 432, "convolution_backward_data": [435, 436], "convolution_backward_weight": [437, 438], "convolution_forward": [439, 440], "deconvolution_backward_data": [441, 442], "deconvolution_backward_weight": [443, 444], "deconvolution_forward": [445, 446], "eltwise_backward": [447, 448], "eltwise_forward": [449, 450], "dnnl_engin": 451, "dnnl_exec_arg_t": 454, "field": [454, 455, 456, 537, 544], "dnnl_graph_inplace_pair_t": 455, "dnnl_graph_logical_tensor_t": 456, "group_normalization_backward": [457, 458], "group_normalization_forward": [459, 460], "gru_backward": [461, 462], "gru_forward": [463, 464], "templat": [465, 466], "handle_trait": 466, "inner_product_backward_data": [467, 468], "inner_product_backward_weight": [469, 470], "inner_product_forward": [471, 472], "layer_normalization_backward": [473, 474], "layer_normalization_forward": [475, 476], "lbr_augru_backward": [477, 478], "lbr_augru_forward": [479, 480], "lbr_gru_backward": [481, 482], "lbr_gru_forward": [483, 484], "lrn_backward": [485, 486], "lrn_forward": [487, 488], "lstm_backward": [489, 490], "lstm_forward": [491, 492], "dnnl_memori": 495, "dnnl_memory_desc": 497, "desc": 498, "pooling_backward": [499, 500], "pooling_forward": [501, 502], "dnnl_post_op": 503, "post_op": 504, "prelu_backward": [505, 506], "prelu_forward": [507, 508], "dnnl_primit": 509, "dnnl_primitive_attr": 511, "primitive_attr": 512, "dnnl_primitive_desc": 513, "primitive_desc_bas": 515, "resampling_backward": [520, 521], "resampling_forward": [522, 523], "rnn_primitive_desc_bas": 524, "shuffle_backward": [525, 526], "shuffle_forward": [527, 528], "softmax_backward": [529, 530], "softmax_forward": [531, 532], "dnnl_stream": 533, "threadpool_ifac": 537, "brgemm_pack_b": 539, "vanilla_rnn_backward": [540, 541], "vanilla_rnn_forward": [542, 543], "dnnl_version_t": 544, "example_allows_unimpl": 545, "gemm_dims_t": 546, "sycl_deletor": 547}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Building and Linking": [[1, "building-and-linking"]], "Advanced Topics": [[0, "advanced-topics"]], "Primitive Attributes: deterministic": [[11, "primitive-attributes-deterministic"]], "Primitive Attributes: accumulation mode": [[10, "primitive-attributes-accumulation-mode"]], "class dnnl::graph::compiled_partition": [[3, "class-dnnl-graph-compiled-partition"]], "Overview": [[3, "overview"], [2, "overview"], [8, "overview"], [30, "overview"], [7, "overview"], [6, "overview"], [5, "overview"], [4, "overview"], [133, "overview"], [159, "overview"], [158, "overview"], [160, "overview"], [161, "overview"], [162, "overview"], [163, "overview"], [164, "overview"], [165, "overview"], [167, "overview"], [166, "overview"], [168, "overview"], [169, "overview"], [170, "overview"], [171, "overview"], [173, "overview"], [172, "overview"], [174, "overview"], [175, "overview"], [177, "overview"], [176, "overview"], [178, "overview"], [181, "overview"], [182, "overview"], [183, "overview"], [185, "overview"], [184, "overview"], [187, "overview"], [186, "overview"], [189, "overview"], [188, "overview"], [190, "overview"], [191, "overview"], [192, "overview"], [193, "overview"], [194, "overview"], [195, "overview"], [196, "overview"], [197, "overview"], [198, "overview"], [199, "overview"], [201, "overview"], [200, "overview"], [202, "overview"], [203, "overview"], [205, "overview"], [204, "overview"], [206, "overview"], [207, "overview"], [208, "overview"], [209, "overview"], [211, "overview"], [210, "overview"], [213, "overview"], [212, "overview"], [264, "overview"], [269, "overview"], [270, "overview"], [271, "overview"], [272, "overview"], [273, "overview"], [275, "overview"], [276, "overview"], [277, "overview"], [279, "overview"], [278, "overview"], [280, "overview"], [281, "overview"], [283, "overview"], [282, "overview"], [285, "overview"], [286, "overview"], [287, "overview"], [289, "overview"], [288, "overview"], [290, "overview"], [291, "overview"], [292, "overview"], [293, "overview"], [294, "overview"], [295, "overview"], [296, "overview"], [297, "overview"], [299, "overview"], [298, "overview"], [300, "overview"], [301, "overview"], [302, "overview"], [303, "overview"], [304, "overview"], [305, "overview"], [306, "overview"], [308, "overview"], [311, "overview"], [312, "overview"], [313, "overview"], [314, "overview"], [315, "overview"], [316, "overview"], [319, "overview"], [318, "overview"], [321, "overview"], [320, "overview"], [323, "overview"], [324, "overview"], [330, "overview"], [331, "overview"], [332, "overview"], [333, "overview"], [334, "overview"], [336, "overview"], [421, "overview"], [423, "overview"], [422, "overview"], [424, "overview"], [425, "overview"], [427, "overview"], [426, "overview"], [428, "overview"], [429, "overview"], [430, "overview"], [433, "overview"], [434, "overview"], [435, "overview"], [436, "overview"], [437, "overview"], [439, "overview"], [438, "overview"], [440, "overview"], [441, "overview"], [442, "overview"], [443, "overview"], [445, "overview"], [444, "overview"], [446, "overview"], [447, "overview"], [449, "overview"], [448, "overview"], [450, "overview"], [452, "overview"], [453, "overview"], [454, "overview"], [455, "overview"], [456, "overview"], [457, "overview"], [459, "overview"], [458, "overview"], [461, "overview"], [460, "overview"], [462, "overview"], [463, "overview"], [464, "overview"], [465, "overview"], [467, "overview"], [469, "overview"], [468, "overview"], [471, "overview"], [470, "overview"], [473, "overview"], [472, "overview"], [475, "overview"], [474, "overview"], [476, "overview"], [477, "overview"], [478, "overview"], [479, "overview"], [481, "overview"], [480, "overview"], [482, "overview"], [483, "overview"], [485, "overview"], [484, "overview"], [486, "overview"], [487, "overview"], [488, "overview"], [489, "overview"], [491, "overview"], [490, "overview"], [492, "overview"], [493, "overview"], [494, "overview"], [496, "overview"], [499, "overview"], [498, "overview"], [501, "overview"], [500, "overview"], [503, "overview"], [502, "overview"], [505, "overview"], [504, "overview"], [506, "overview"], [507, "overview"], [508, "overview"], [511, "overview"], [510, "overview"], [512, "overview"], [515, "overview"], [514, "overview"], [516, "overview"], [517, "overview"], [519, "overview"], [518, "overview"], [520, "overview"], [521, "overview"], [523, "overview"], [522, "overview"], [524, "overview"], [525, "overview"], [526, "overview"], [527, "overview"], [528, "overview"], [529, "overview"], [530, "overview"], [531, "overview"], [532, "overview"], [535, "overview"], [534, "overview"], [536, "overview"], [537, "overview"], [538, "overview"], [539, "overview"], [541, "overview"], [540, "overview"], [543, "overview"], [542, "overview"], [544, "overview"]], "Detailed Documentation": [[3, "detailed-documentation"], [2, "detailed-documentation"], [8, "detailed-documentation"], [7, "detailed-documentation"], [6, "detailed-documentation"], [5, "detailed-documentation"], [4, "detailed-documentation"], [159, "detailed-documentation"], [158, "detailed-documentation"], [160, "detailed-documentation"], [161, "detailed-documentation"], [162, "detailed-documentation"], [163, "detailed-documentation"], [164, "detailed-documentation"], [165, "detailed-documentation"], [167, "detailed-documentation"], [166, "detailed-documentation"], [168, "detailed-documentation"], [169, "detailed-documentation"], [170, "detailed-documentation"], [171, "detailed-documentation"], [173, "detailed-documentation"], [172, "detailed-documentation"], [174, "detailed-documentation"], [175, "detailed-documentation"], [177, "detailed-documentation"], [176, "detailed-documentation"], [178, "detailed-documentation"], [181, "detailed-documentation"], [182, "detailed-documentation"], [183, "detailed-documentation"], [185, "detailed-documentation"], [184, "detailed-documentation"], [187, "detailed-documentation"], [186, "detailed-documentation"], [189, "detailed-documentation"], [188, "detailed-documentation"], [190, "detailed-documentation"], [191, "detailed-documentation"], [192, "detailed-documentation"], [193, "detailed-documentation"], [194, "detailed-documentation"], [195, "detailed-documentation"], [196, "detailed-documentation"], [197, "detailed-documentation"], [198, "detailed-documentation"], [199, "detailed-documentation"], [201, "detailed-documentation"], [200, "detailed-documentation"], [202, "detailed-documentation"], [203, "detailed-documentation"], [205, "detailed-documentation"], [204, "detailed-documentation"], [206, "detailed-documentation"], [207, "detailed-documentation"], [208, "detailed-documentation"], [209, "detailed-documentation"], [211, "detailed-documentation"], [210, "detailed-documentation"], [213, "detailed-documentation"], [212, "detailed-documentation"], [264, "detailed-documentation"], [269, "detailed-documentation"], [270, "detailed-documentation"], [271, "detailed-documentation"], [272, "detailed-documentation"], [273, "detailed-documentation"], [275, "detailed-documentation"], [276, "detailed-documentation"], [277, "detailed-documentation"], [279, "detailed-documentation"], [278, "detailed-documentation"], [280, "detailed-documentation"], [281, "detailed-documentation"], [283, "detailed-documentation"], [282, "detailed-documentation"], [285, "detailed-documentation"], [286, "detailed-documentation"], [287, "detailed-documentation"], [289, "detailed-documentation"], [288, "detailed-documentation"], [290, "detailed-documentation"], [291, "detailed-documentation"], [292, "detailed-documentation"], [293, "detailed-documentation"], [294, "detailed-documentation"], [295, "detailed-documentation"], [296, "detailed-documentation"], [297, "detailed-documentation"], [299, "detailed-documentation"], [298, "detailed-documentation"], [300, "detailed-documentation"], [301, "detailed-documentation"], [302, "detailed-documentation"], [303, "detailed-documentation"], [304, "detailed-documentation"], [305, "detailed-documentation"], [306, "detailed-documentation"], [308, "detailed-documentation"], [311, "detailed-documentation"], [312, "detailed-documentation"], [313, "detailed-documentation"], [314, "detailed-documentation"], [315, "detailed-documentation"], [316, "detailed-documentation"], [319, "detailed-documentation"], [318, "detailed-documentation"], [321, "detailed-documentation"], [320, "detailed-documentation"], [323, "detailed-documentation"], [324, "detailed-documentation"], [330, "detailed-documentation"], [331, "detailed-documentation"], [332, "detailed-documentation"], [333, "detailed-documentation"], [334, "detailed-documentation"], [336, "detailed-documentation"], [421, "detailed-documentation"], [423, "detailed-documentation"], [422, "detailed-documentation"], [424, "detailed-documentation"], [425, "detailed-documentation"], [427, "detailed-documentation"], [426, "detailed-documentation"], [428, "detailed-documentation"], [429, "detailed-documentation"], [430, "detailed-documentation"], [433, "detailed-documentation"], [434, "detailed-documentation"], [435, "detailed-documentation"], [436, "detailed-documentation"], [437, "detailed-documentation"], [439, "detailed-documentation"], [438, "detailed-documentation"], [440, "detailed-documentation"], [441, "detailed-documentation"], [442, "detailed-documentation"], [443, "detailed-documentation"], [445, "detailed-documentation"], [444, "detailed-documentation"], [446, "detailed-documentation"], [447, "detailed-documentation"], [449, "detailed-documentation"], [448, "detailed-documentation"], [450, "detailed-documentation"], [452, "detailed-documentation"], [453, "detailed-documentation"], [454, "detailed-documentation"], [455, "detailed-documentation"], [456, "detailed-documentation"], [457, "detailed-documentation"], [459, "detailed-documentation"], [458, "detailed-documentation"], [461, "detailed-documentation"], [460, "detailed-documentation"], [462, "detailed-documentation"], [463, "detailed-documentation"], [464, "detailed-documentation"], [465, "detailed-documentation"], [467, "detailed-documentation"], [469, "detailed-documentation"], [468, "detailed-documentation"], [471, "detailed-documentation"], [470, "detailed-documentation"], [473, "detailed-documentation"], [472, "detailed-documentation"], [475, "detailed-documentation"], [474, "detailed-documentation"], [476, "detailed-documentation"], [477, "detailed-documentation"], [478, "detailed-documentation"], [479, "detailed-documentation"], [481, "detailed-documentation"], [480, "detailed-documentation"], [482, "detailed-documentation"], [483, "detailed-documentation"], [485, "detailed-documentation"], [484, "detailed-documentation"], [486, "detailed-documentation"], [487, "detailed-documentation"], [488, "detailed-documentation"], [489, "detailed-documentation"], [491, "detailed-documentation"], [490, "detailed-documentation"], [492, "detailed-documentation"], [493, "detailed-documentation"], [494, "detailed-documentation"], [496, "detailed-documentation"], [499, "detailed-documentation"], [498, "detailed-documentation"], [501, "detailed-documentation"], [500, "detailed-documentation"], [503, "detailed-documentation"], [502, "detailed-documentation"], [505, "detailed-documentation"], [504, "detailed-documentation"], [506, "detailed-documentation"], [507, "detailed-documentation"], [508, "detailed-documentation"], [511, "detailed-documentation"], [510, "detailed-documentation"], [512, "detailed-documentation"], [515, "detailed-documentation"], [514, "detailed-documentation"], [516, "detailed-documentation"], [517, "detailed-documentation"], [519, "detailed-documentation"], [518, "detailed-documentation"], [520, "detailed-documentation"], [521, "detailed-documentation"], [523, "detailed-documentation"], [522, "detailed-documentation"], [524, "detailed-documentation"], [525, "detailed-documentation"], [526, "detailed-documentation"], [527, "detailed-documentation"], [528, "detailed-documentation"], [529, "detailed-documentation"], [530, "detailed-documentation"], [531, "detailed-documentation"], [532, "detailed-documentation"], [535, "detailed-documentation"], [534, "detailed-documentation"], [536, "detailed-documentation"], [537, "detailed-documentation"], [538, "detailed-documentation"], [539, "detailed-documentation"], [541, "detailed-documentation"], [540, "detailed-documentation"], [543, "detailed-documentation"], [542, "detailed-documentation"], [544, "detailed-documentation"]], "Construction": [[3, "construction"], [2, "construction"], [8, "construction"], [7, "construction"], [6, "construction"], [5, "construction"], [4, "construction"], [421, "construction"], [423, "construction"], [422, "construction"], [424, "construction"], [425, "construction"], [427, "construction"], [426, "construction"], [428, "construction"], [429, "construction"], [430, "construction"], [433, "construction"], [434, "construction"], [435, "construction"], [436, "construction"], [437, "construction"], [439, "construction"], [438, "construction"], [440, "construction"], [441, "construction"], [442, "construction"], [443, "construction"], [445, "construction"], [444, "construction"], [446, "construction"], [447, "construction"], [449, "construction"], [448, "construction"], [450, "construction"], [452, "construction"], [453, "construction"], [457, "construction"], [459, "construction"], [458, "construction"], [461, "construction"], [460, "construction"], [462, "construction"], [463, "construction"], [464, "construction"], [465, "construction"], [467, "construction"], [469, "construction"], [468, "construction"], [471, "construction"], [470, "construction"], [473, "construction"], [472, "construction"], [475, "construction"], [474, "construction"], [476, "construction"], [477, "construction"], [478, "construction"], [479, "construction"], [481, "construction"], [480, "construction"], [482, "construction"], [483, "construction"], [485, "construction"], [484, "construction"], [486, "construction"], [487, "construction"], [488, "construction"], [489, "construction"], [491, "construction"], [490, "construction"], [492, "construction"], [493, "construction"], [494, "construction"], [496, "construction"], [499, "construction"], [498, "construction"], [501, "construction"], [500, "construction"], [502, "construction"], [505, "construction"], [504, "construction"], [506, "construction"], [507, "construction"], [508, "construction"], [510, "construction"], [512, "construction"], [516, "construction"], [517, "construction"], [519, "construction"], [518, "construction"], [520, "construction"], [521, "construction"], [523, "construction"], [522, "construction"], [524, "construction"], [525, "construction"], [526, "construction"], [527, "construction"], [528, "construction"], [529, "construction"], [530, "construction"], [531, "construction"], [532, "construction"], [535, "construction"], [534, "construction"], [536, "construction"], [538, "construction"], [539, "construction"], [541, "construction"], [540, "construction"], [543, "construction"], [542, "construction"]], "Methods": [[3, "methods"], [8, "methods"], [7, "methods"], [6, "methods"], [5, "methods"], [4, "methods"], [422, "methods"], [424, "methods"], [426, "methods"], [428, "methods"], [430, "methods"], [434, "methods"], [436, "methods"], [438, "methods"], [440, "methods"], [442, "methods"], [444, "methods"], [446, "methods"], [448, "methods"], [450, "methods"], [452, "methods"], [453, "methods"], [458, "methods"], [460, "methods"], [462, "methods"], [464, "methods"], [465, "methods"], [468, "methods"], [470, "methods"], [472, "methods"], [474, "methods"], [476, "methods"], [478, "methods"], [480, "methods"], [482, "methods"], [484, "methods"], [486, "methods"], [488, "methods"], [490, "methods"], [492, "methods"], [494, "methods"], [496, "methods"], [498, "methods"], [500, "methods"], [502, "methods"], [504, "methods"], [506, "methods"], [508, "methods"], [510, "methods"], [512, "methods"], [515, "methods"], [514, "methods"], [517, "methods"], [519, "methods"], [518, "methods"], [521, "methods"], [523, "methods"], [524, "methods"], [526, "methods"], [528, "methods"], [530, "methods"], [532, "methods"], [534, "methods"], [536, "methods"], [537, "methods"], [538, "methods"], [539, "methods"], [541, "methods"], [543, "methods"]], "class dnnl::graph::allocator": [[2, "class-dnnl-graph-allocator"]], "Benchmarking Performance": [[18, "benchmarking-performance"]], "Binary": [[19, "binary"], [13, "binary"], [272, "binary"]], "General": [[19, "general"], [23, "general"], [50, "general"], [51, "general"], [53, "general"], [52, "general"], [31, "general"], [39, "general"], [17, "general"], [43, "general"], [46, "general"], [48, "general"], [49, "general"], [55, "general"], [54, "general"], [57, "general"], [56, "general"], [59, "general"], [58, "general"], [26, "general"], [60, "general"], [61, "general"], [62, "general"], [63, "general"], [64, "general"], [65, "general"], [67, "general"], [66, "general"], [69, "general"], [68, "general"], [70, "general"], [71, "general"], [72, "general"], [73, "general"], [74, "general"], [75, "general"], [77, "general"], [76, "general"], [78, "general"], [79, "general"], [80, "general"], [81, "general"], [83, "general"], [82, "general"], [85, "general"], [84, "general"], [87, "general"], [86, "general"], [89, "general"], [88, "general"], [91, "general"], [90, "general"], [93, "general"], [92, "general"], [94, "general"], [95, "general"], [97, "general"], [96, "general"], [98, "general"], [99, "general"], [101, "general"], [100, "general"], [103, "general"], [102, "general"], [105, "general"], [104, "general"], [106, "general"], [107, "general"], [109, "general"], [108, "general"], [110, "general"], [111, "general"], [113, "general"], [112, "general"], [115, "general"], [114, "general"], [116, "general"], [117, "general"], [119, "general"], [118, "general"], [121, "general"], [120, "general"], [122, "general"], [123, "general"], [125, "general"], [124, "general"], [127, "general"], [126, "general"], [129, "general"], [128, "general"], [131, "general"], [130, "general"], [132, "general"], [137, "general"], [136, "general"], [140, "general"], [141, "general"], [142, "general"], [143, "general"], [145, "general"], [144, "general"], [146, "general"], [153, "general"], [152, "general"]], "Execution Arguments": [[19, "execution-arguments"], [23, "execution-arguments"], [31, "execution-arguments"], [39, "execution-arguments"], [17, "execution-arguments"], [43, "execution-arguments"], [46, "execution-arguments"], [48, "execution-arguments"], [49, "execution-arguments"], [26, "execution-arguments"], [137, "execution-arguments"], [136, "execution-arguments"], [140, "execution-arguments"], [141, "execution-arguments"], [142, "execution-arguments"], [143, "execution-arguments"], [145, "execution-arguments"], [144, "execution-arguments"], [146, "execution-arguments"]], "Implementation Details": [[19, "implementation-details"], [23, "implementation-details"], [31, "implementation-details"], [39, "implementation-details"], [17, "implementation-details"], [43, "implementation-details"], [46, "implementation-details"], [48, "implementation-details"], [49, "implementation-details"], [26, "implementation-details"], [137, "implementation-details"], [136, "implementation-details"], [140, "implementation-details"], [141, "implementation-details"], [142, "implementation-details"], [143, "implementation-details"], [145, "implementation-details"], [146, "implementation-details"]], "General Notes": [[19, "general-notes"], [23, "general-notes"], [31, "general-notes"], [39, "general-notes"], [17, "general-notes"], [43, "general-notes"], [46, "general-notes"], [48, "general-notes"], [49, "general-notes"], [26, "general-notes"], [137, "general-notes"], [136, "general-notes"], [140, "general-notes"], [141, "general-notes"], [142, "general-notes"], [145, "general-notes"], [146, "general-notes"]], "Post-Ops and Attributes": [[19, "post-ops-and-attributes"], [23, "post-ops-and-attributes"], [31, "post-ops-and-attributes"], [39, "post-ops-and-attributes"], [17, "post-ops-and-attributes"], [43, "post-ops-and-attributes"], [136, "post-ops-and-attributes"], [140, "post-ops-and-attributes"], [141, "post-ops-and-attributes"], [142, "post-ops-and-attributes"], [143, "post-ops-and-attributes"], [144, "post-ops-and-attributes"], [146, "post-ops-and-attributes"]], "Data Types Support": [[19, "data-types-support"], [23, "data-types-support"], [140, "data-types-support"], [141, "data-types-support"], [146, "data-types-support"]], "Data Representation": [[19, "data-representation"], [23, "data-representation"], [31, "data-representation"], [39, "data-representation"], [17, "data-representation"], [43, "data-representation"], [46, "data-representation"], [48, "data-representation"], [49, "data-representation"], [26, "data-representation"], [137, "data-representation"], [136, "data-representation"], [140, "data-representation"], [141, "data-representation"], [143, "data-representation"], [145, "data-representation"], [146, "data-representation"], [153, "data-representation"], [152, "data-representation"]], "Sources, Destination": [[19, "sources-destination"], [140, "sources-destination"], [146, "sources-destination"]], "Implementation Limitations": [[19, "implementation-limitations"], [23, "implementation-limitations"], [31, "implementation-limitations"], [39, "implementation-limitations"], [17, "implementation-limitations"], [43, "implementation-limitations"], [46, "implementation-limitations"], [48, "implementation-limitations"], [49, "implementation-limitations"], [26, "implementation-limitations"], [137, "implementation-limitations"], [136, "implementation-limitations"], [140, "implementation-limitations"], [141, "implementation-limitations"], [142, "implementation-limitations"], [143, "implementation-limitations"], [145, "implementation-limitations"], [144, "implementation-limitations"], [146, "implementation-limitations"]], "Performance Tips": [[19, "performance-tips"], [23, "performance-tips"], [31, "performance-tips"], [39, "performance-tips"], [17, "performance-tips"], [43, "performance-tips"], [46, "performance-tips"], [48, "performance-tips"], [49, "performance-tips"], [26, "performance-tips"], [137, "performance-tips"], [136, "performance-tips"], [140, "performance-tips"], [141, "performance-tips"], [142, "performance-tips"], [145, "performance-tips"], [144, "performance-tips"], [146, "performance-tips"]], "Examples": [[19, "examples"], [15, "examples"], [32, "examples"], [39, "examples"], [17, "examples"], [49, "examples"], [153, "examples"], [152, "examples"]], "class dnnl::graph::tensor": [[8, "class-dnnl-graph-tensor"]], "Primitive Attributes": [[9, "primitive-attributes"]], "Attributes Usage": [[9, "attributes-usage"]], "Supported Attributes": [[9, "supported-attributes"]], "Attribute Related Error Handling": [[9, "attribute-related-error-handling"]], "API": [[22, "api"], [14, "api"], [33, "api"]], "Input validation notes": [[22, "input-validation-notes"]], "Concat": [[23, "concat"], [62, "concat"], [275, "concat"]], "Example": [[23, "example"], [31, "example"], [42, "example"], [43, "example"], [46, "example"], [48, "example"], [26, "example"], [137, "example"], [136, "example"], [140, "example"], [141, "example"], [142, "example"], [143, "example"], [145, "example"], [144, "example"], [146, "example"], [149, "example"], [155, "example"]], "Primitive Attributes: Quantization": [[14, "primitive-attributes-quantization"]], "Introduction": [[14, "introduction"], [34, "introduction"], [16, "introduction"], [42, "introduction"], [149, "introduction"], [151, "introduction"], [154, "introduction"]], "Quantization Model": [[14, "quantization-model"]], "Numerical behavior": [[14, "numerical-behavior"]], "Example: Convolution Quantization Workflow": [[14, "example-convolution-quantization-workflow"]], "Per-Channel Scaling": [[14, "per-channel-scaling"]], "Argument Scaling": [[14, "argument-scaling"]], "Example 1: weights quantization with per-output-channel scaling": [[14, "example-1-weights-quantization-with-per-output-channel-scaling"]], "Example 2: convolution with per-output-channel quantization": [[14, "example-2-convolution-with-per-output-channel-quantization"]], "Primitive Attributes: Scratchpad": [[15, "primitive-attributes-scratchpad"]], "Scratchpad Memory Engine": [[15, "scratchpad-memory-engine"]], "Library Manages Scratchpad": [[15, "library-manages-scratchpad"]], "User Manages Scratchpad": [[15, "user-manages-scratchpad"]], "Naming Conventions": [[25, "naming-conventions"]], "Variable (Tensor) Names": [[25, "variable-tensor-names"]], "Formulas and Verbose Output": [[25, "formulas-and-verbose-output"]], "RNN-Specific Notation": [[25, "rnn-specific-notation"]], "Memory Formats Tags": [[25, "memory-formats-tags"]], "Constant Tensor Cache": [[24, "constant-tensor-cache"], [314, "constant-tensor-cache"]], "Build-Time Controls": [[24, "build-time-controls"], [35, "build-time-controls"], [36, "build-time-controls"], [139, "build-time-controls"], [139, "id1"], [155, "build-time-controls"]], "Run-Time Controls": [[24, "run-time-controls"], [36, "run-time-controls"], [139, "run-time-controls"], [139, "id2"], [155, "run-time-controls"]], "Constant Tensor Cache Capacity Control API": [[24, "constant-tensor-cache-capacity-control-api"]], "Environment Variable": [[24, "environment-variable"]], "Data Types": [[29, "data-types"], [43, "data-types"], [49, "data-types"], [26, "data-types"], [142, "data-types"], [144, "data-types"], [153, "data-types"], [152, "data-types"]], "Inference and Training": [[29, "inference-and-training"]], "General numerical behavior of the oneDNN library": [[29, "general-numerical-behavior-of-the-onednn-library"]], "Floating-point environment": [[29, "floating-point-environment"]], "Hardware Limitations": [[29, "hardware-limitations"]], "Intel(R) Architecture Processors": [[29, "intel-r-architecture-processors"]], "Intel(R) Processor Graphics and Xe Architecture graphics": [[29, "intel-r-processor-graphics-and-xe-architecture-graphics"]], "CPU ISA Hints": [[28, "cpu-isa-hints"]], "Build-time Controls": [[28, "build-time-controls"], [33, "build-time-controls"], [27, "build-time-controls"], [138, "build-time-controls"]], "Run-time Controls": [[28, "run-time-controls"], [138, "run-time-controls"]], "Basic Concepts": [[34, "basic-concepts"], [16, "basic-concepts"], [151, "basic-concepts"]], "Logical Tensor": [[34, "logical-tensor"], [318, "logical-tensor"]], "Op": [[34, "op"], [320, "op"]], "Graph": [[34, "graph"], [316, "graph"]], "Partition": [[34, "partition"], [321, "partition"]], "Compiled Partition": [[34, "compiled-partition"], [312, "compiled-partition"]], "Tensor": [[34, "tensor"], [324, "tensor"]], "Graph Compiler": [[35, "graph-compiler"]], "Codegen and JIT Options": [[35, "codegen-and-jit-options"]], "C": [[35, "c"]], "LLVM": [[35, "llvm"]], "Builtin": [[35, "builtin"]], "Environment Variables": [[35, "environment-variables"]], "Enable Tracing": [[35, "enable-tracing"]], "Switch Between Different Codegen Methods": [[35, "switch-between-different-codegen-methods"]], "Enable Code Dumping": [[35, "enable-code-dumping"]], "Inspecting JIT Code": [[44, "inspecting-jit-code"]], "Example (CPU)": [[44, "example-cpu"]], "Example (GPU)": [[44, "example-gpu"]], "Nuances of int8 Computations": [[45, "nuances-of-int8-computations"]], "CPU": [[45, "cpu"], [134, "cpu"]], "1. Inputs of mixed type: u8 and s8": [[45, "inputs-of-mixed-type-u8-and-s8"]], "1.1. Processors with the Intel AVX2 or Intel AVX-512 Support": [[45, "processors-with-the-intel-avx2-or-intel-avx-512-support"]], "1.2. Processors with the Intel DL Boost Support": [[45, "processors-with-the-intel-dl-boost-support"]], "2. Inputs of the same type: s8": [[45, "inputs-of-the-same-type-s8"]], "GPU": [[45, "gpu"]], "References": [[45, "references"]], "Primitive Attributes: floating-point math mode": [[12, "primitive-attributes-floating-point-math-mode"]], "The floating-point math mode attribute.": [[12, "the-floating-point-math-mode-attribute"]], "Enforcing the floating-point math mode to an integral primitive.": [[12, "enforcing-the-floating-point-math-mode-to-an-integral-primitive"]], "A note on the default floating-point math mode.": [[12, "a-note-on-the-default-floating-point-math-mode"]], "Primitive Attributes: Post-ops": [[13, "primitive-attributes-post-ops"]], "Supported Post-ops": [[13, "supported-post-ops"]], "Eltwise Post-op": [[13, "eltwise-post-op"]], "Sum Post-op": [[13, "sum-post-op"]], "Depthwise Post-op": [[13, "depthwise-post-op"]], "Binary Post-op": [[13, "binary-post-op"]], "Prelu Post-op": [[13, "prelu-post-op"]], "Examples of Chained Post-ops": [[13, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[13, "sum-relu"]], "Tanh -> Sum -> ScaleShift": [[13, "tanh-sum-scaleshift"]], "Relu -> Depthwise -> Relu": [[13, "relu-depthwise-relu"]], "Experimental features": [[33, "experimental-features"], [33, "id1"]], "Features details": [[33, "features-details"]], "ONEDNN_EXPERIMENTAL_SPARSE": [[33, "onednn-experimental-sparse"]], "Primitives": [[33, "primitives"], [16, "primitives"], [16, "id2"], [293, "primitives"]], "Matrix Multiplication": [[33, "matrix-multiplication"], [49, "matrix-multiplication"], [287, "matrix-multiplication"]], "CSR encoding": [[33, "csr-encoding"]], "PACKED encoding": [[33, "packed-encoding"]], "Reorder": [[33, "reorder"], [113, "reorder"], [141, "reorder"], [297, "reorder"]], "Common Limitations": [[33, "common-limitations"]], "ONEDNN_EXPERIMENTAL_UKERNEL": [[33, "onednn-experimental-ukernel"]], "ONEDNN_EXPERIMENTAL_PROFILING": [[33, "onednn-experimental-profiling"]], "Limitations": [[33, "limitations"], [135, "limitations"]], "ONEDNN_EXPERIMENTAL_GRAPH_COMPILER_BACKEND": [[33, "onednn-experimental-graph-compiler-backend"]], "Inference": [[40, "inference"], [37, "inference"], [37, "id1"]], "Best Practices for Inference": [[40, "best-practices-for-inference"]], "fp32 Inference": [[40, "fp32-inference"]], "int8 Inference": [[40, "int8-inference"]], "Inference and Training Aspects": [[41, "inference-and-training-aspects"]], "Propagation Kinds": [[41, "propagation-kinds"]], "Difference Between Forward Propagation on Training and Inference": [[41, "difference-between-forward-propagation-on-training-and-inference"]], "Different Backward Propagation Kinds": [[41, "different-backward-propagation-kinds"]], "Inference-Specific Aspects": [[41, "inference-specific-aspects"]], "Training-Specific Aspects": [[41, "training-specific-aspects"]], "Workspace": [[41, "workspace"]], "Abs": [[50, "abs"]], "Operation attributes": [[50, "operation-attributes"], [51, "operation-attributes"], [53, "operation-attributes"], [52, "operation-attributes"], [55, "operation-attributes"], [54, "operation-attributes"], [57, "operation-attributes"], [56, "operation-attributes"], [59, "operation-attributes"], [58, "operation-attributes"], [60, "operation-attributes"], [61, "operation-attributes"], [62, "operation-attributes"], [63, "operation-attributes"], [64, "operation-attributes"], [65, "operation-attributes"], [67, "operation-attributes"], [66, "operation-attributes"], [69, "operation-attributes"], [68, "operation-attributes"], [70, "operation-attributes"], [71, "operation-attributes"], [72, "operation-attributes"], [73, "operation-attributes"], [74, "operation-attributes"], [75, "operation-attributes"], [77, "operation-attributes"], [76, "operation-attributes"], [78, "operation-attributes"], [79, "operation-attributes"], [80, "operation-attributes"], [81, "operation-attributes"], [83, "operation-attributes"], [82, "operation-attributes"], [85, "operation-attributes"], [84, "operation-attributes"], [87, "operation-attributes"], [86, "operation-attributes"], [89, "operation-attributes"], [88, "operation-attributes"], [91, "operation-attributes"], [90, "operation-attributes"], [93, "operation-attributes"], [92, "operation-attributes"], [94, "operation-attributes"], [95, "operation-attributes"], [97, "operation-attributes"], [96, "operation-attributes"], [98, "operation-attributes"], [99, "operation-attributes"], [101, "operation-attributes"], [100, "operation-attributes"], [103, "operation-attributes"], [102, "operation-attributes"], [105, "operation-attributes"], [104, "operation-attributes"], [106, "operation-attributes"], [107, "operation-attributes"], [109, "operation-attributes"], [108, "operation-attributes"], [110, "operation-attributes"], [111, "operation-attributes"], [113, "operation-attributes"], [112, "operation-attributes"], [115, "operation-attributes"], [114, "operation-attributes"], [116, "operation-attributes"], [117, "operation-attributes"], [119, "operation-attributes"], [118, "operation-attributes"], [121, "operation-attributes"], [120, "operation-attributes"], [122, "operation-attributes"], [123, "operation-attributes"], [125, "operation-attributes"], [124, "operation-attributes"], [127, "operation-attributes"], [126, "operation-attributes"], [129, "operation-attributes"], [128, "operation-attributes"], [131, "operation-attributes"], [130, "operation-attributes"], [132, "operation-attributes"]], "Execution arguments": [[50, "execution-arguments"], [51, "execution-arguments"], [53, "execution-arguments"], [52, "execution-arguments"], [55, "execution-arguments"], [54, "execution-arguments"], [57, "execution-arguments"], [56, "execution-arguments"], [59, "execution-arguments"], [58, "execution-arguments"], [60, "execution-arguments"], [61, "execution-arguments"], [62, "execution-arguments"], [63, "execution-arguments"], [64, "execution-arguments"], [65, "execution-arguments"], [67, "execution-arguments"], [66, "execution-arguments"], [69, "execution-arguments"], [68, "execution-arguments"], [70, "execution-arguments"], [71, "execution-arguments"], [72, "execution-arguments"], [73, "execution-arguments"], [74, "execution-arguments"], [75, "execution-arguments"], [77, "execution-arguments"], [76, "execution-arguments"], [78, "execution-arguments"], [79, "execution-arguments"], [80, "execution-arguments"], [81, "execution-arguments"], [83, "execution-arguments"], [82, "execution-arguments"], [85, "execution-arguments"], [84, "execution-arguments"], [87, "execution-arguments"], [86, "execution-arguments"], [89, "execution-arguments"], [88, "execution-arguments"], [91, "execution-arguments"], [90, "execution-arguments"], [93, "execution-arguments"], [92, "execution-arguments"], [94, "execution-arguments"], [95, "execution-arguments"], [97, "execution-arguments"], [96, "execution-arguments"], [98, "execution-arguments"], [101, "execution-arguments"], [100, "execution-arguments"], [103, "execution-arguments"], [102, "execution-arguments"], [105, "execution-arguments"], [104, "execution-arguments"], [106, "execution-arguments"], [107, "execution-arguments"], [109, "execution-arguments"], [108, "execution-arguments"], [110, "execution-arguments"], [111, "execution-arguments"], [113, "execution-arguments"], [112, "execution-arguments"], [115, "execution-arguments"], [114, "execution-arguments"], [116, "execution-arguments"], [117, "execution-arguments"], [119, "execution-arguments"], [118, "execution-arguments"], [121, "execution-arguments"], [120, "execution-arguments"], [122, "execution-arguments"], [123, "execution-arguments"], [125, "execution-arguments"], [124, "execution-arguments"], [127, "execution-arguments"], [126, "execution-arguments"], [129, "execution-arguments"], [128, "execution-arguments"], [131, "execution-arguments"], [130, "execution-arguments"], [132, "execution-arguments"]], "Inputs": [[50, "inputs"], [51, "inputs"], [53, "inputs"], [52, "inputs"], [55, "inputs"], [54, "inputs"], [57, "inputs"], [56, "inputs"], [59, "inputs"], [58, "inputs"], [60, "inputs"], [61, "inputs"], [62, "inputs"], [63, "inputs"], [64, "inputs"], [65, "inputs"], [67, "inputs"], [66, "inputs"], [69, "inputs"], [68, "inputs"], [70, "inputs"], [71, "inputs"], [72, "inputs"], [73, "inputs"], [74, "inputs"], [75, "inputs"], [77, "inputs"], [76, "inputs"], [78, "inputs"], [79, "inputs"], [80, "inputs"], [81, "inputs"], [83, "inputs"], [82, "inputs"], [85, "inputs"], [84, "inputs"], [87, "inputs"], [86, "inputs"], [89, "inputs"], [88, "inputs"], [91, "inputs"], [90, "inputs"], [93, "inputs"], [92, "inputs"], [94, "inputs"], [95, "inputs"], [97, "inputs"], [96, "inputs"], [98, "inputs"], [99, "inputs"], [101, "inputs"], [100, "inputs"], [103, "inputs"], [102, "inputs"], [105, "inputs"], [104, "inputs"], [106, "inputs"], [107, "inputs"], [109, "inputs"], [108, "inputs"], [110, "inputs"], [111, "inputs"], [113, "inputs"], [112, "inputs"], [115, "inputs"], [114, "inputs"], [116, "inputs"], [117, "inputs"], [119, "inputs"], [118, "inputs"], [121, "inputs"], [120, "inputs"], [122, "inputs"], [123, "inputs"], [125, "inputs"], [124, "inputs"], [127, "inputs"], [126, "inputs"], [129, "inputs"], [128, "inputs"], [131, "inputs"], [130, "inputs"], [132, "inputs"]], "Outputs": [[50, "outputs"], [51, "outputs"], [53, "outputs"], [52, "outputs"], [55, "outputs"], [54, "outputs"], [57, "outputs"], [56, "outputs"], [59, "outputs"], [58, "outputs"], [60, "outputs"], [61, "outputs"], [62, "outputs"], [63, "outputs"], [64, "outputs"], [65, "outputs"], [67, "outputs"], [66, "outputs"], [69, "outputs"], [68, "outputs"], [70, "outputs"], [71, "outputs"], [72, "outputs"], [73, "outputs"], [74, "outputs"], [75, "outputs"], [77, "outputs"], [76, "outputs"], [78, "outputs"], [79, "outputs"], [80, "outputs"], [81, "outputs"], [83, "outputs"], [82, "outputs"], [85, "outputs"], [84, "outputs"], [87, "outputs"], [86, "outputs"], [89, "outputs"], [88, "outputs"], [91, "outputs"], [90, "outputs"], [93, "outputs"], [92, "outputs"], [94, "outputs"], [95, "outputs"], [97, "outputs"], [96, "outputs"], [98, "outputs"], [99, "outputs"], [101, "outputs"], [100, "outputs"], [103, "outputs"], [102, "outputs"], [105, "outputs"], [104, "outputs"], [106, "outputs"], [107, "outputs"], [109, "outputs"], [108, "outputs"], [110, "outputs"], [111, "outputs"], [113, "outputs"], [112, "outputs"], [115, "outputs"], [114, "outputs"], [116, "outputs"], [117, "outputs"], [119, "outputs"], [118, "outputs"], [121, "outputs"], [120, "outputs"], [122, "outputs"], [123, "outputs"], [125, "outputs"], [124, "outputs"], [127, "outputs"], [126, "outputs"], [129, "outputs"], [128, "outputs"], [131, "outputs"], [130, "outputs"], [132, "outputs"]], "Supported data types": [[50, "supported-data-types"], [51, "supported-data-types"], [53, "supported-data-types"], [52, "supported-data-types"], [55, "supported-data-types"], [54, "supported-data-types"], [57, "supported-data-types"], [56, "supported-data-types"], [59, "supported-data-types"], [58, "supported-data-types"], [60, "supported-data-types"], [61, "supported-data-types"], [62, "supported-data-types"], [63, "supported-data-types"], [64, "supported-data-types"], [65, "supported-data-types"], [67, "supported-data-types"], [66, "supported-data-types"], [69, "supported-data-types"], [68, "supported-data-types"], [70, "supported-data-types"], [71, "supported-data-types"], [72, "supported-data-types"], [73, "supported-data-types"], [74, "supported-data-types"], [75, "supported-data-types"], [77, "supported-data-types"], [76, "supported-data-types"], [78, "supported-data-types"], [79, "supported-data-types"], [80, "supported-data-types"], [81, "supported-data-types"], [83, "supported-data-types"], [82, "supported-data-types"], [85, "supported-data-types"], [84, "supported-data-types"], [87, "supported-data-types"], [86, "supported-data-types"], [89, "supported-data-types"], [88, "supported-data-types"], [91, "supported-data-types"], [90, "supported-data-types"], [93, "supported-data-types"], [92, "supported-data-types"], [94, "supported-data-types"], [95, "supported-data-types"], [97, "supported-data-types"], [96, "supported-data-types"], [98, "supported-data-types"], [99, "supported-data-types"], [101, "supported-data-types"], [100, "supported-data-types"], [103, "supported-data-types"], [102, "supported-data-types"], [105, "supported-data-types"], [104, "supported-data-types"], [106, "supported-data-types"], [107, "supported-data-types"], [109, "supported-data-types"], [108, "supported-data-types"], [110, "supported-data-types"], [111, "supported-data-types"], [113, "supported-data-types"], [112, "supported-data-types"], [115, "supported-data-types"], [114, "supported-data-types"], [116, "supported-data-types"], [117, "supported-data-types"], [119, "supported-data-types"], [118, "supported-data-types"], [121, "supported-data-types"], [120, "supported-data-types"], [122, "supported-data-types"], [123, "supported-data-types"], [125, "supported-data-types"], [124, "supported-data-types"], [127, "supported-data-types"], [126, "supported-data-types"], [129, "supported-data-types"], [128, "supported-data-types"], [131, "supported-data-types"], [130, "supported-data-types"], [132, "supported-data-types"]], "AbsBackward": [[51, "absbackward"]], "Graph Dump": [[36, "graph-dump"]], "Supported Fusion Patterns": [[37, "supported-fusion-patterns"]], "Fusion Patterns": [[37, "fusion-patterns"]], "Floating Point Patterns": [[37, "floating-point-patterns"], [37, "id2"]], "Quantized Patterns": [[37, "quantized-patterns"], [37, "id3"]], "Training": [[37, "training"], [37, "id4"], [148, "training"]], "Aggressive Fusion Patterns": [[37, "aggressive-fusion-patterns"]], "AvgPool": [[53, "avgpool"]], "Add": [[52, "add"]], "Eltwise": [[31, "eltwise"], [279, "eltwise"]], "Forward": [[31, "forward"], [39, "forward"], [17, "forward"], [43, "forward"], [46, "forward"], [48, "forward"], [26, "forward"], [137, "forward"], [136, "forward"], [142, "forward"], [145, "forward"], [144, "forward"]], "Difference Between Forward Training and Forward Inference": [[31, "difference-between-forward-training-and-forward-inference"], [39, "difference-between-forward-training-and-forward-inference"], [17, "difference-between-forward-training-and-forward-inference"], [43, "difference-between-forward-training-and-forward-inference"], [46, "difference-between-forward-training-and-forward-inference"], [26, "difference-between-forward-training-and-forward-inference"], [137, "difference-between-forward-training-and-forward-inference"], [136, "difference-between-forward-training-and-forward-inference"], [142, "difference-between-forward-training-and-forward-inference"], [145, "difference-between-forward-training-and-forward-inference"], [144, "difference-between-forward-training-and-forward-inference"]], "Backward": [[31, "backward"], [39, "backward"], [17, "backward"], [43, "backward"], [46, "backward"], [48, "backward"], [26, "backward"], [137, "backward"], [136, "backward"], [142, "backward"], [145, "backward"], [144, "backward"]], "Exceptions": [[31, "exceptions"]], "Data Type Support": [[31, "data-type-support"], [39, "data-type-support"], [17, "data-type-support"], [46, "data-type-support"], [48, "data-type-support"], [137, "data-type-support"], [136, "data-type-support"], [143, "data-type-support"], [145, "data-type-support"]], "DPC++ Interoperability": [[30, "dpc-interoperability"]], "SYCL Buffers and DPC++ USM Interfaces for Memory Objects": [[30, "sycl-buffers-and-dpc-usm-interfaces-for-memory-objects"]], "Handling Dependencies with USM": [[30, "handling-dependencies-with-usm"]], "Low Precision": [[38, "low-precision"]], "INT8": [[38, "int8"]], "BF16/F16": [[38, "bf16-f16"]], "Group Normalization": [[39, "group-normalization"], [282, "group-normalization"]], "Mean and Variance": [[39, "mean-and-variance"], [17, "mean-and-variance"], [46, "mean-and-variance"]], "Scale and Shift": [[39, "scale-and-shift"], [17, "scale-and-shift"], [46, "scale-and-shift"]], "Source, Destination, and Their Gradients": [[39, "source-destination-and-their-gradients"], [17, "source-destination-and-their-gradients"], [46, "source-destination-and-their-gradients"], [48, "source-destination-and-their-gradients"], [136, "source-destination-and-their-gradients"], [145, "source-destination-and-their-gradients"]], "Engines": [[16, "engines"]], "Streams": [[16, "streams"]], "Memory Objects": [[16, "memory-objects"], [16, "id1"]], "Levels of Abstraction": [[16, "levels-of-abstraction"]], "Creating Memory Objects and Primitives": [[16, "creating-memory-objects-and-primitives"]], "Graph Extension": [[16, "graph-extension"], [265, "graph-extension"]], "Micro-kernel Extension": [[16, "micro-kernel-extension"]], "Batch Normalization": [[17, "batch-normalization"], [271, "batch-normalization"]], "class dnnl::graph::partition": [[7, "class-dnnl-graph-partition"]], "class dnnl::graph::op": [[6, "class-dnnl-graph-op"]], "Int8 Inference": [[42, "int8-inference"]], "Int8 Workflow": [[42, "int8-workflow"]], "Quantization Process": [[42, "quantization-process"]], "Range of the Data": [[42, "range-of-the-data"]], "Scaling Factor": [[42, "scaling-factor"]], "Quantization Example": [[42, "quantization-example"]], "int8 Support": [[42, "int8-support"]], "Attributes": [[42, "attributes"], [153, "attributes"], [152, "attributes"], [270, "attributes"]], "Inner Product": [[43, "inner-product"], [283, "inner-product"]], "Layer Normalization": [[46, "layer-normalization"], [285, "layer-normalization"]], "Post-ops and Attributes": [[46, "post-ops-and-attributes"], [48, "post-ops-and-attributes"], [26, "post-ops-and-attributes"], [145, "post-ops-and-attributes"]], "Linking to the Library": [[47, "linking-to-the-library"]], "Header Files": [[47, "header-files"]], "Libraries": [[47, "libraries"]], "Linux": [[47, "linux"]], "macOS": [[47, "macos"]], "Windows": [[47, "windows"], [47, "id1"], [20, "windows"]], "Linking to oneDNN": [[47, "linking-to-onednn"]], "Linux/macOS": [[47, "linux-macos"], [20, "linux-macos"]], "Support for macOS hardened runtime": [[47, "support-for-macos-hardened-runtime"]], "Local Response Normalization (LRN)": [[48, "local-response-normalization-lrn"]], "Attributes and Post-ops": [[49, "attributes-and-post-ops"]], "Matrix Multiplication Primitive Examples": [[49, "matrix-multiplication-primitive-examples"]], "BatchNormForwardTraining": [[55, "batchnormforwardtraining"]], "AvgPoolBackward": [[54, "avgpoolbackward"]], "BatchNormTrainingBackward": [[57, "batchnormtrainingbackward"]], "BatchNormInference": [[56, "batchnorminference"]], "Build from Source": [[20, "build-from-source"]], "Download the Source Code": [[20, "download-the-source-code"]], "Build the Library": [[20, "build-the-library"]], "GCC, Clang, or Intel oneAPI DPC++/C++ Compiler": [[20, "gcc-clang-or-intel-oneapi-dpc-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL runtime": [[20, "intel-oneapi-dpc-c-compiler-with-sycl-runtime"]], "GCC targeting AArch64 on x64 host": [[20, "gcc-targeting-aarch64-on-x64-host"]], "GCC with Arm Compute Library (ACL) on AArch64 host": [[20, "gcc-with-arm-compute-library-acl-on-aarch64-host"]], "Microsoft Visual C++ Compiler": [[20, "microsoft-visual-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL Runtime": [[20, "id1"]], "Validate the Build": [[20, "validate-the-build"]], "Build documentation": [[20, "build-documentation"]], "Install library": [[20, "install-library"]], "Build Options": [[21, "build-options"]], "Common options": [[21, "common-options"]], "Host compiler": [[21, "host-compiler"]], "Configuring functionality": [[21, "configuring-functionality"]], "ONEDNN_ENABLE_WORKLOAD": [[21, "onednn-enable-workload"]], "ONEDNN_ENABLE_PRIMITIVE": [[21, "onednn-enable-primitive"]], "ONEDNN_ENABLE_PRIMITIVE_CPU_ISA": [[21, "onednn-enable-primitive-cpu-isa"]], "ONEDNN_ENABLE_PRIMITIVE_GPU_ISA": [[21, "onednn-enable-primitive-gpu-isa"]], "ONEDNN_ENABLE_GEMM_KERNELS_ISA": [[21, "onednn-enable-gemm-kernels-isa"]], "Configuring testing": [[21, "configuring-testing"]], "ONEDNN_TEST_SET": [[21, "onednn-test-set"]], "CPU Options": [[21, "cpu-options"]], "Targeting Specific Architecture": [[21, "targeting-specific-architecture"]], "Runtimes": [[21, "runtimes"], [21, "id1"]], "OpenMP": [[21, "openmp"]], "Threading Building Blocks (TBB)": [[21, "threading-building-blocks-tbb"]], "Threadpool": [[21, "threadpool"]], "AArch64 Options": [[21, "aarch64-options"]], "Arm Compute Library": [[21, "arm-compute-library"]], "Vendor BLAS libraries": [[21, "vendor-blas-libraries"]], "GPU Options": [[21, "gpu-options"]], "OpenCL*": [[21, "opencl"]], "Graph component limitations": [[21, "graph-component-limitations"]], "Graph Compiler Backend Limitations": [[21, "graph-compiler-backend-limitations"]], "class dnnl::graph::logical_tensor": [[5, "class-dnnl-graph-logical-tensor"]], "Typedefs": [[5, "typedefs"], [270, "typedefs"], [277, "typedefs"], [280, "typedefs"], [288, "typedefs"], [294, "typedefs"], [300, "typedefs"], [303, "typedefs"], [308, "typedefs"], [311, "typedefs"], [312, "typedefs"], [316, "typedefs"], [319, "typedefs"], [321, "typedefs"], [320, "typedefs"], [323, "typedefs"], [324, "typedefs"], [496, "typedefs"]], "class dnnl::graph::graph": [[4, "class-dnnl-graph-graph"]], "BiasAddBackward": [[59, "biasaddbackward"]], "BiasAdd": [[58, "biasadd"]], "CPU Dispatcher Control": [[27, "cpu-dispatcher-control"]], "Runtime Controls": [[27, "runtime-controls"]], "Convolution": [[26, "convolution"], [63, "convolution"], [276, "convolution"]], "Regular Convolution": [[26, "regular-convolution"], [63, "regular-convolution"]], "Convolution with Groups": [[26, "convolution-with-groups"], [63, "convolution-with-groups"]], "Convolution with Dilation": [[26, "convolution-with-dilation"], [63, "convolution-with-dilation"]], "Deconvolution (Transposed Convolution)": [[26, "deconvolution-transposed-convolution"]], "Example 1": [[26, "example-1"]], "Example 2": [[26, "example-2"]], "Example 3": [[26, "example-3"]], "Algorithms": [[26, "algorithms"]], "Direct Algorithm": [[26, "direct-algorithm"]], "Winograd Convolution": [[26, "winograd-convolution"]], "Automatic Algorithm Selection": [[26, "automatic-algorithm-selection"]], "Clamp": [[60, "clamp"]], "ClampBackward": [[61, "clampbackward"]], "ConvolutionBackwardData": [[64, "convolutionbackwarddata"]], "ConvolutionBackwardWeights": [[65, "convolutionbackwardweights"]], "ConvTransposeBackwardData": [[67, "convtransposebackwarddata"]], "ConvTranspose": [[66, "convtranspose"]], "Dequantize": [[69, "dequantize"]], "ConvTransposeBackwardWeights": [[68, "convtransposebackwardweights"]], "Divide": [[70, "divide"]], "DynamicDequantize": [[71, "dynamicdequantize"]], "DynamicQuantize": [[72, "dynamicquantize"]], "Elu": [[73, "elu"]], "EluBackward": [[74, "elubackward"]], "End": [[75, "end"]], "GELU": [[77, "gelu"]], "Exp": [[76, "exp"]], "GELUBackward": [[78, "gelubackward"]], "HardSigmoid": [[79, "hardsigmoid"]], "HardSigmoidBackward": [[80, "hardsigmoidbackward"]], "HardSwish": [[81, "hardswish"]], "Interpolate": [[83, "interpolate"]], "HardSwishBackward": [[82, "hardswishbackward"]], "LayerNorm": [[85, "layernorm"]], "InterpolateBackward": [[84, "interpolatebackward"]], "LeakyReLU": [[87, "leakyrelu"]], "LayerNormBackward": [[86, "layernormbackward"]], "LogSoftmax": [[89, "logsoftmax"]], "Log": [[88, "log"]], "MatMul": [[91, "matmul"]], "LogSoftmaxBackward": [[90, "logsoftmaxbackward"]], "MaxPool": [[93, "maxpool"]], "Maximum": [[92, "maximum"]], "MaxPoolBackward": [[94, "maxpoolbackward"]], "Minimum": [[95, "minimum"]], "MishBackward": [[97, "mishbackward"]], "Mish": [[96, "mish"]], "Multiply": [[98, "multiply"]], "Pow": [[99, "pow"]], "PReLUBackward": [[101, "prelubackward"]], "Broadcasting Rules": [[101, "broadcasting-rules"], [100, "broadcasting-rules"]], "PReLU": [[100, "prelu"], [137, "prelu"], [291, "prelu"]], "Reciprocal": [[103, "reciprocal"]], "Quantize": [[102, "quantize"]], "ReduceL2": [[105, "reducel2"]], "ReduceL1": [[104, "reducel1"]], "ReduceMax": [[106, "reducemax"]], "ReduceMean": [[107, "reducemean"]], "ReduceProd": [[109, "reduceprod"]], "ReduceMin": [[108, "reducemin"]], "ReduceSum": [[110, "reducesum"]], "ReLU": [[111, "relu"]], "ReLUBackward": [[112, "relubackward"]], "Select": [[115, "select"]], "Broadcasting rules": [[115, "broadcasting-rules"]], "Round": [[114, "round"]], "Sigmoid": [[116, "sigmoid"]], "SigmoidBackward": [[117, "sigmoidbackward"]], "SoftMaxBackward": [[119, "softmaxbackward"]], "SoftMax": [[118, "softmax"]], "SoftPlusBackward": [[121, "softplusbackward"]], "SoftPlus": [[120, "softplus"]], "Sqrt": [[122, "sqrt"]], "SqrtBackward": [[123, "sqrtbackward"]], "SquaredDifference": [[125, "squareddifference"]], "Square": [[124, "square"]], "StaticTranspose": [[127, "statictranspose"]], "StaticReshape": [[126, "staticreshape"]], "Tanh": [[129, "tanh"]], "Subtract": [[128, "subtract"]], "TypeCast": [[131, "typecast"]], "TanhBackward": [[130, "tanhbackward"]], "OpenCL Interoperability": [[133, "opencl-interoperability"]], "OpenCL Buffers and USM Interfaces for Memory Objects": [[133, "opencl-buffers-and-usm-interfaces-for-memory-objects"]], "Handling Dependencies": [[133, "handling-dependencies"]], "Wildcard": [[132, "wildcard"]], "Configuring oneDNN for Benchmarking": [[134, "configuring-onednn-for-benchmarking"]], "Threading Runtimes": [[134, "threading-runtimes"]], "Benchmarking Settings": [[134, "benchmarking-settings"]], "Whole Machine": [[134, "whole-machine"]], "Single NUMA Domain": [[134, "single-numa-domain"]], "Several Cores Within a NUMA Domain": [[134, "several-cores-within-a-numa-domain"]], "Persistent Cache": [[135, "persistent-cache"]], "Primitive": [[135, "primitive"]], "Relation to Primitive Cache": [[135, "relation-to-primitive-cache"]], "API Usage Example": [[135, "api-usage-example"], [135, "id1"]], "Engine": [[135, "engine"], [280, "engine"], [315, "engine"]], "Memory descriptor": [[135, "memory-descriptor"], [371, "memory-descriptor"]], "Pooling": [[136, "pooling"], [290, "pooling"]], "Profiling oneDNN Performance": [[139, "profiling-onednn-performance"]], "Features for VTune Profiler": [[139, "features-for-vtune-profiler"]], "ITT Tagging for Primitive Execution": [[139, "itt-tagging-for-primitive-execution"]], "Example: Profiling with VTune Profiler": [[139, "example-profiling-with-vtune-profiler"]], "Profiling for Hotspots": [[139, "profiling-for-hotspots"]], "Profiling for Microarchitecture Information": [[139, "profiling-for-microarchitecture-information"]], "Example: Profiling with Linux Perf": [[139, "example-profiling-with-linux-perf"]], "Primitive Cache": [[138, "primitive-cache"], [292, "primitive-cache"]], "Managing Memory Consumption": [[138, "managing-memory-consumption"]], "Profiling": [[138, "profiling"], [295, "profiling"]], "Reduction": [[140, "reduction"], [296, "reduction"]], "Notes": [[140, "notes"]], "Resampling": [[142, "resampling"], [298, "resampling"]], "Nearest Neighbor Resampling": [[142, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[142, "bilinear-resampling"]], "RNN": [[143, "rnn"], [299, "rnn"]], "Cell Functions": [[143, "cell-functions"]], "Vanilla RNN": [[143, "vanilla-rnn"]], "LSTM": [[143, "lstm"]], "LSTM (or Vanilla LSTM)": [[143, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[143, "lstm-with-peephole"]], "LSTM with Projection (or LSTMP)": [[143, "lstm-with-projection-or-lstmp"]], "GRU": [[143, "gru"]], "Linear-Before-Reset GRU": [[143, "linear-before-reset-gru"]], "AUGRU": [[143, "augru"]], "Linear-Before-Reset AUGRU": [[143, "linear-before-reset-augru"]], "Considerations for Training": [[143, "considerations-for-training"]], "Softmax": [[145, "softmax"], [302, "softmax"]], "Shuffle": [[144, "shuffle"], [301, "shuffle"]], "Data Layouts": [[144, "data-layouts"]], "Using oneDNN with Threadpool-Based Threading": [[147, "using-onednn-with-threadpool-based-threading"]], "Sum": [[146, "sum"], [304, "sum"]], "fp32 Training": [[148, "fp32-training"]], "bfp16 Training": [[148, "bfp16-training"]], "Bfloat16 Training": [[149, "bfloat16-training"]], "bfloat16 Support": [[149, "bfloat16-support"]], "bfloat16 Workflow": [[149, "bfloat16-workflow"]], "Transitioning from Intel MKL-DNN to oneDNN": [[150, "transitioning-from-intel-mkl-dnn-to-onednn"]], "Summary of Changes": [[150, "summary-of-changes"]], "Source Code Changes": [[150, "source-code-changes"]], "Build Process": [[150, "build-process"]], "Broken Compatibility with Intel MKL-DNN": [[150, "broken-compatibility-with-intel-mkl-dnn"]], "Information for Developers": [[150, "information-for-developers"]], "Memory representation": [[151, "memory-representation"]], "Operation representation": [[151, "operation-representation"]], "Data transformation": [[153, "data-transformation"]], "Implementation limitations": [[153, "implementation-limitations"], [152, "implementation-limitations"]], "Batch-Reduce General Matrix Multiplication": [[152, "batch-reduce-general-matrix-multiplication"]], "Understanding Memory Formats": [[154, "understanding-memory-formats"]], "Nomenclature Used": [[154, "nomenclature-used"]], "Data Formats": [[154, "data-formats"]], "Plain Data Formats": [[154, "plain-data-formats"]], "NCHW": [[154, "nchw"]], "NHWC": [[154, "nhwc"]], "CHWN": [[154, "chwn"]], "Relevant Reading": [[154, "relevant-reading"]], "Generalization of the Plain Data Layout": [[154, "generalization-of-the-plain-data-layout"]], "Strides": [[154, "strides"]], "Blocked Layout": [[154, "blocked-layout"]], "What if Channels Are not Multiples of 8 (or 16)?": [[154, "what-if-channels-are-not-multiples-of-8-or-16"]], "Verbose Mode": [[155, "verbose-mode"]], "Troubleshooting primitive creation issues": [[155, "troubleshooting-primitive-creation-issues"]], "Profiling a workload": [[155, "profiling-a-workload"]], "Understanding why a given implementation is dispatched": [[155, "understanding-why-a-given-implementation-is-dispatched"]], "Enable ONEDNN_VERBOSE with timestamps": [[155, "enable-onednn-verbose-with-timestamps"]], "Decrypting the Output": [[155, "decrypting-the-output"]], "Profiling with VTune(TM) Profiler": [[157, "profiling-with-vtune-tm-profiler"]], "Verbose Message Catalogue": [[156, "verbose-message-catalogue"]], "Primitive Creation/Dispatching": [[156, "primitive-creation-dispatching"]], "Engine Creation": [[156, "engine-creation"]], "Memory Creation and Related Operations": [[156, "memory-creation-and-related-operations"]], "enum dnnl_accumulation_mode_t": [[159, "enum-dnnl-accumulation-mode-t"]], "Enum Values": [[159, "enum-values"], [158, "enum-values"], [160, "enum-values"], [161, "enum-values"], [162, "enum-values"], [163, "enum-values"], [164, "enum-values"], [165, "enum-values"], [167, "enum-values"], [166, "enum-values"], [168, "enum-values"], [169, "enum-values"], [170, "enum-values"], [171, "enum-values"], [173, "enum-values"], [172, "enum-values"], [174, "enum-values"], [175, "enum-values"], [177, "enum-values"], [176, "enum-values"], [178, "enum-values"], [181, "enum-values"], [182, "enum-values"], [183, "enum-values"], [185, "enum-values"], [184, "enum-values"], [187, "enum-values"], [186, "enum-values"], [189, "enum-values"], [188, "enum-values"], [190, "enum-values"], [191, "enum-values"], [192, "enum-values"], [193, "enum-values"], [194, "enum-values"], [195, "enum-values"], [196, "enum-values"], [197, "enum-values"], [198, "enum-values"], [199, "enum-values"], [201, "enum-values"], [200, "enum-values"], [202, "enum-values"], [203, "enum-values"], [205, "enum-values"], [204, "enum-values"], [206, "enum-values"], [207, "enum-values"], [208, "enum-values"], [209, "enum-values"], [211, "enum-values"], [210, "enum-values"], [213, "enum-values"], [212, "enum-values"]], "enum dnnl::accumulation_mode": [[158, "enum-dnnl-accumulation-mode"]], "enum dnnl_alg_kind_t": [[160, "enum-dnnl-alg-kind-t"]], "enum dnnl::algorithm": [[161, "enum-dnnl-algorithm"]], "enum dnnl::cpu_isa": [[162, "enum-dnnl-cpu-isa"]], "enum dnnl::cpu_isa_hints": [[163, "enum-dnnl-cpu-isa-hints"]], "enum dnnl_cpu_isa_hints_t": [[164, "enum-dnnl-cpu-isa-hints-t"]], "enum dnnl_cpu_isa_t": [[165, "enum-dnnl-cpu-isa-t"]], "enum dnnl::engine::kind": [[167, "enum-dnnl-engine-kind"]], "enum dnnl_data_type_t": [[166, "enum-dnnl-data-type-t"]], "enum dnnl_engine_kind_t": [[168, "enum-dnnl-engine-kind-t"]], "enum dnnl_format_kind_t": [[169, "enum-dnnl-format-kind-t"]], "enum dnnl_format_tag_t": [[170, "enum-dnnl-format-tag-t"]], "enum dnnl::fpmath_mode": [[171, "enum-dnnl-fpmath-mode"]], "enum dnnl_graph_layout_type_t": [[173, "enum-dnnl-graph-layout-type-t"]], "enum dnnl_fpmath_mode_t": [[172, "enum-dnnl-fpmath-mode-t"]], "enum dnnl::graph::logical_tensor::data_type": [[174, "enum-dnnl-graph-logical-tensor-data-type"]], "enum dnnl::graph::logical_tensor::layout_type": [[175, "enum-dnnl-graph-logical-tensor-layout-type"]], "enum dnnl::graph::op::attr": [[177, "enum-dnnl-graph-op-attr"]], "enum dnnl::graph::logical_tensor::property_type": [[176, "enum-dnnl-graph-logical-tensor-property-type"]], "enum dnnl_graph_op_attr_t": [[178, "enum-dnnl-graph-op-attr-t"]], "enum dnnl::graph::op::kind": [[179, "enum-dnnl-graph-op-kind"]], "enum dnnl::graph::partition::policy": [[181, "enum-dnnl-graph-partition-policy"]], "enum dnnl_graph_op_kind_t": [[180, "enum-dnnl-graph-op-kind-t"]], "enum dnnl_graph_partition_policy_t": [[182, "enum-dnnl-graph-partition-policy-t"]], "enum dnnl::graph::status": [[183, "enum-dnnl-graph-status"]], "enum dnnl::memory::data_type": [[185, "enum-dnnl-memory-data-type"]], "enum dnnl_graph_tensor_property_t": [[184, "enum-dnnl-graph-tensor-property-t"]], "enum dnnl::memory::format_tag": [[187, "enum-dnnl-memory-format-tag"]], "enum dnnl::memory::format_kind": [[186, "enum-dnnl-memory-format-kind"]], "enum dnnl::normalization_flags": [[189, "enum-dnnl-normalization-flags"]], "enum dnnl::memory::sparse_encoding": [[188, "enum-dnnl-memory-sparse-encoding"]], "enum dnnl_normalization_flags_t": [[190, "enum-dnnl-normalization-flags-t"]], "enum dnnl::ocl_interop::memory_kind": [[191, "enum-dnnl-ocl-interop-memory-kind"]], "enum dnnl_ocl_interop_memory_kind_t": [[192, "enum-dnnl-ocl-interop-memory-kind-t"]], "enum dnnl::primitive::kind": [[193, "enum-dnnl-primitive-kind"]], "enum dnnl_primitive_kind_t": [[194, "enum-dnnl-primitive-kind-t"]], "enum dnnl::profiling_data_kind": [[195, "enum-dnnl-profiling-data-kind"]], "enum dnnl_profiling_data_kind_t": [[196, "enum-dnnl-profiling-data-kind-t"]], "enum dnnl::prop_kind": [[197, "enum-dnnl-prop-kind"]], "enum dnnl_prop_kind_t": [[198, "enum-dnnl-prop-kind-t"]], "enum dnnl::query": [[199, "enum-dnnl-query"]], "enum dnnl::rnn_direction": [[201, "enum-dnnl-rnn-direction"]], "enum dnnl_query_t": [[200, "enum-dnnl-query-t"]], "enum dnnl_rnn_direction_t": [[202, "enum-dnnl-rnn-direction-t"]], "enum dnnl::rnn_flags": [[203, "enum-dnnl-rnn-flags"]], "enum dnnl::scratchpad_mode": [[205, "enum-dnnl-scratchpad-mode"]], "enum dnnl_rnn_flags_t": [[204, "enum-dnnl-rnn-flags-t"]], "enum dnnl_scratchpad_mode_t": [[206, "enum-dnnl-scratchpad-mode-t"]], "enum dnnl_sparse_encoding_t": [[207, "enum-dnnl-sparse-encoding-t"]], "enum dnnl::status": [[208, "enum-dnnl-status"]], "enum dnnl_status_t": [[209, "enum-dnnl-status-t"]], "enum dnnl_stream_flags_t": [[211, "enum-dnnl-stream-flags-t"]], "enum dnnl::stream::flags": [[210, "enum-dnnl-stream-flags"]], "enum dnnl_sycl_interop_memory_kind_t": [[213, "enum-dnnl-sycl-interop-memory-kind-t"]], "enum dnnl::sycl_interop::memory_kind": [[212, "enum-dnnl-sycl-interop-memory-kind"]], "batch_normalization.cpp": [[215, "batch-normalization-cpp"]], "augru.cpp": [[214, "augru-cpp"]], "binary.cpp": [[216, "binary-cpp"]], "bnorm_u8_via_binary_postops.cpp": [[217, "bnorm-u8-via-binary-postops-cpp"]], "cnn_inference_f32.cpp": [[219, "cnn-inference-f32-cpp"]], "cnn_inference_f32.c": [[218, "cnn-inference-f32-c"]], "cnn_inference_int8.cpp": [[220, "cnn-inference-int8-cpp"]], "cnn_training_bf16.cpp": [[221, "cnn-training-bf16-cpp"]], "cnn_training_f32.cpp": [[222, "cnn-training-f32-cpp"]], "concat.cpp": [[223, "concat-cpp"]], "convolution.cpp": [[224, "convolution-cpp"]], "cpu_brgemm.cpp": [[225, "cpu-brgemm-cpp"]], "cpu_getting_started.cpp": [[227, "cpu-getting-started-cpp"]], "cpu_cnn_training_f32.c": [[226, "cpu-cnn-training-f32-c"]], "cpu_inference_int8.cpp": [[228, "cpu-inference-int8-cpp"]], "cpu_matmul_csr.cpp": [[229, "cpu-matmul-csr-cpp"]], "cpu_matmul_weights_compression.cpp": [[231, "cpu-matmul-weights-compression-cpp"]], "cpu_matmul_quantization.cpp": [[230, "cpu-matmul-quantization-cpp"]], "cpu_rnn_inference_f32.cpp": [[232, "cpu-rnn-inference-f32-cpp"]], "cpu_rnn_inference_int8.cpp": [[233, "cpu-rnn-inference-int8-cpp"]], "cpu_single_op_partition.cpp": [[235, "cpu-single-op-partition-cpp"]], "cpu_sgemm_and_matmul.cpp": [[234, "cpu-sgemm-and-matmul-cpp"]], "cross_engine_reorder.cpp": [[237, "cross-engine-reorder-cpp"]], "cross_engine_reorder.c": [[236, "cross-engine-reorder-c"]], "getting_started.cpp": [[239, "getting-started-cpp"]], "eltwise.cpp": [[238, "eltwise-cpp"]], "gpu_opencl_getting_started.cpp": [[240, "gpu-opencl-getting-started-cpp"]], "gpu_opencl_interop.cpp": [[241, "gpu-opencl-interop-cpp"]], "inference_int8_matmul.cpp": [[243, "inference-int8-matmul-cpp"]], "group_normalization.cpp": [[242, "group-normalization-cpp"]], "layer_normalization.cpp": [[245, "layer-normalization-cpp"]], "inner_product.cpp": [[244, "inner-product-cpp"]], "lrn.cpp": [[246, "lrn-cpp"]], "lstm.cpp": [[247, "lstm-cpp"]], "memory_format_propagation.cpp": [[249, "memory-format-propagation-cpp"]], "matmul.cpp": [[248, "matmul-cpp"]], "pooling.cpp": [[251, "pooling-cpp"]], "performance_profiling.cpp": [[250, "performance-profiling-cpp"]], "prelu.cpp": [[252, "prelu-cpp"]], "reduction.cpp": [[253, "reduction-cpp"]], "resampling.cpp": [[255, "resampling-cpp"]], "reorder.cpp": [[254, "reorder-cpp"]], "rnn_training_f32.cpp": [[256, "rnn-training-f32-cpp"]], "shuffle.cpp": [[257, "shuffle-cpp"]], "softmax.cpp": [[258, "softmax-cpp"]], "sum.cpp": [[259, "sum-cpp"]], "sycl_getting_started.cpp": [[260, "sycl-getting-started-cpp"]], "sycl_interop_buffer.cpp": [[261, "sycl-interop-buffer-cpp"]], "sycl_single_op_partition.cpp": [[262, "sycl-single-op-partition-cpp"]], "weights_decompression_matmul.cpp": [[263, "weights-decompression-matmul-cpp"]], "Global Namespace": [[264, "global-namespace"]], "Global Functions": [[264, "global-functions"], [269, "global-functions"], [270, "global-functions"], [271, "global-functions"], [272, "global-functions"], [273, "global-functions"], [275, "global-functions"], [276, "global-functions"], [279, "global-functions"], [278, "global-functions"], [280, "global-functions"], [281, "global-functions"], [283, "global-functions"], [282, "global-functions"], [285, "global-functions"], [286, "global-functions"], [287, "global-functions"], [289, "global-functions"], [288, "global-functions"], [290, "global-functions"], [291, "global-functions"], [292, "global-functions"], [294, "global-functions"], [295, "global-functions"], [296, "global-functions"], [297, "global-functions"], [299, "global-functions"], [298, "global-functions"], [300, "global-functions"], [301, "global-functions"], [302, "global-functions"], [303, "global-functions"], [304, "global-functions"], [305, "global-functions"], [306, "global-functions"], [308, "global-functions"], [311, "global-functions"], [312, "global-functions"], [313, "global-functions"], [314, "global-functions"], [315, "global-functions"], [316, "global-functions"], [319, "global-functions"], [318, "global-functions"], [321, "global-functions"], [320, "global-functions"], [323, "global-functions"], [324, "global-functions"], [330, "global-functions"], [331, "global-functions"], [332, "global-functions"], [333, "global-functions"], [334, "global-functions"]], "Programming Model": [[266, "programming-model"], [418, "programming-model"]], "Supported Operations": [[267, "supported-operations"]], "Accumulation Mode": [[269, "accumulation-mode"]], "oneDNN API": [[268, "onednn-api"]], "BLAS functions": [[273, "blas-functions"]], "Common API": [[274, "common-api"]], "Data types": [[277, "data-types"]], "Macros": [[277, "macros"], [288, "macros"], [294, "macros"], [300, "macros"], [318, "macros"]], "Deconvolution": [[278, "deconvolution"]], "Floating-point Math Mode": [[281, "floating-point-math-mode"]], "Runtime interoperability API": [[284, "runtime-interoperability-api"], [317, "runtime-interoperability-api"]], "LRN": [[286, "lrn"]], "OpenCL interoperability API": [[289, "opencl-interoperability-api"]], "Memory": [[288, "memory"]], "Common": [[294, "common"]], "Service": [[300, "service"]], "Stream": [[303, "stream"]], "SYCL interoperability API": [[305, "sycl-interoperability-api"], [323, "sycl-interoperability-api"]], "Ukernels": [[307, "ukernels"], [549, "ukernels"]], "Threadpool interoperability API": [[306, "threadpool-interoperability-api"]], "BRGeMM ukernel": [[308, "brgemm-ukernel"]], "Utilities": [[309, "utilities"], [325, "utilities"]], "Allocator": [[311, "allocator"]], "Graph API": [[310, "graph-api"]], "Compiled Partition Cache": [[313, "compiled-partition-cache"]], "OpenCL interoperability API API": [[319, "opencl-interoperability-api-api"]], "Status": [[322, "status"]], "oneAPI Deep Neural Network Library Developer Guide and Reference": [[326, "oneapi-deep-neural-network-library-developer-guide-and-reference"]], "Interoperability with DPC++ and OpenCL": [[327, "interoperability-with-dpc-and-opencl"]], "namespace dnnl": [[328, "namespace-dnnl"]], "namespace dnnl::graph": [[329, "namespace-dnnl-graph"]], "namespace dnnl::graph::ocl_interop": [[330, "namespace-dnnl-graph-ocl-interop"]], "namespace dnnl::graph::sycl_interop": [[331, "namespace-dnnl-graph-sycl-interop"]], "namespace dnnl::ocl_interop": [[332, "namespace-dnnl-ocl-interop"]], "namespace dnnl::sycl_interop": [[333, "namespace-dnnl-sycl-interop"]], "namespace dnnl::ukernel": [[335, "namespace-dnnl-ukernel"]], "namespace dnnl::threadpool_interop": [[334, "namespace-dnnl-threadpool-interop"]], "namespace std": [[337, "namespace-std"]], "namespace oneapi": [[336, "namespace-oneapi"]], "Orphans": [[339, "orphans"]], "namespace sycl": [[338, "namespace-sycl"]], "AUGRU RNN Primitive Example": [[340, "augru-rnn-primitive-example"]], "<Untitled>": [[341, "untitled"], [343, "untitled"], [345, "untitled"], [347, "untitled"], [354, "untitled"], [356, "untitled"], [361, "untitled"], [366, "untitled"], [370, "untitled"], [380, "untitled"], [382, "untitled"], [384, "untitled"], [386, "untitled"], [389, "untitled"], [391, "untitled"], [393, "untitled"], [397, "untitled"], [399, "untitled"], [401, "untitled"], [403, "untitled"], [405, "untitled"], [408, "untitled"], [410, "untitled"], [412, "untitled"], [416, "untitled"]], "Batch Normalization Primitive Example": [[342, "batch-normalization-primitive-example"]], "Binary Primitive Example": [[344, "binary-primitive-example"]], "Bnorm u8 by binary post-ops example": [[346, "bnorm-u8-by-binary-post-ops-example"]], "CNN f32 inference example": [[349, "cnn-f32-inference-example"], [348, "cnn-f32-inference-example"]], "CNN int8 inference example": [[350, "cnn-int8-inference-example"]], "CNN bf16 training example": [[351, "cnn-bf16-training-example"]], "Concat Primitive Example": [[353, "concat-primitive-example"]], "CNN f32 training example": [[352, "cnn-f32-training-example"], [358, "cnn-f32-training-example"]], "Convolution Primitive Example": [[355, "convolution-primitive-example"]], "BRGeMM ukernel example": [[357, "brgemm-ukernel-example"]], "MatMul Primitive Example": [[359, "matmul-primitive-example"], [362, "matmul-primitive-example"]], "MatMul Tutorial: Quantization": [[360, "matmul-tutorial-quantization"]], "RNN f32 inference example": [[363, "rnn-f32-inference-example"]], "MatMul Tutorial: Comparison with SGEMM": [[365, "matmul-tutorial-comparison-with-sgemm"]], "RNN int8 inference example": [[364, "rnn-int8-inference-example"]], "Reorder between CPU and GPU engines": [[367, "reorder-between-cpu-and-gpu-engines"], [368, "reorder-between-cpu-and-gpu-engines"]], "Element-Wise Primitive Example": [[369, "element-wise-primitive-example"]], "Public headers": [[368, "public-headers"], [371, "public-headers"], [373, "public-headers"], [372, "public-headers"], [374, "public-headers"], [375, "public-headers"], [376, "public-headers"], [377, "public-headers"], [378, "public-headers"], [413, "public-headers"]], "cross_engine_reorder_tutorial() function": [[368, "cross-engine-reorder-tutorial-function"]], "Engine and stream": [[368, "engine-and-stream"], [371, "engine-and-stream"], [372, "engine-and-stream"], [413, "engine-and-stream"]], "Wrapping data into oneDNN GPU memory object": [[368, "wrapping-data-into-onednn-gpu-memory-object"]], "Creating a ReLU primitive": [[368, "creating-a-relu-primitive"], [371, "creating-a-relu-primitive"]], "Getting results from a oneDNN GPU memory object": [[368, "getting-results-from-a-onednn-gpu-memory-object"]], "Executing all primitives": [[368, "executing-all-primitives"]], "Validate the result": [[368, "validate-the-result"]], "Getting started": [[371, "getting-started"]], "getting_started_tutorial() function": [[371, "getting-started-tutorial-function"]], "Data preparation (code outside of oneDNN)": [[371, "data-preparation-code-outside-of-onednn"]], "Wrapping data into a oneDNN memory object": [[371, "wrapping-data-into-a-onednn-memory-object"]], "Alternative way to create a memory descriptor": [[371, "alternative-way-to-create-a-memory-descriptor"]], "Creating a memory object": [[371, "creating-a-memory-object"]], "Executing the ReLU primitive": [[371, "executing-the-relu-primitive"]], "Obtaining the result and validation": [[371, "obtaining-the-result-and-validation"]], "main() function": [[371, "main-function"], [413, "main-function"]], "Getting started on CPU with Graph API": [[373, "getting-started-on-cpu-with-graph-api"]], "cpu_getting_started_tutorial() function": [[373, "cpu-getting-started-tutorial-function"]], "Build Graph and Get Partitions": [[373, "build-graph-and-get-partitions"], [374, "build-graph-and-get-partitions"], [375, "build-graph-and-get-partitions"], [378, "build-graph-and-get-partitions"]], "Compile and Execute Partition": [[373, "compile-and-execute-partition"], [374, "compile-and-execute-partition"], [375, "compile-and-execute-partition"], [376, "compile-and-execute-partition"], [377, "compile-and-execute-partition"], [378, "compile-and-execute-partition"]], "Getting started on GPU with OpenCL extensions API": [[372, "getting-started-on-gpu-with-opencl-extensions-api"]], "gpu_opencl_interop_tutorial() function": [[372, "gpu-opencl-interop-tutorial-function"]], "Wrapping data into oneDNN memory object": [[372, "wrapping-data-into-onednn-memory-object"], [413, "wrapping-data-into-onednn-memory-object"]], "Initialize the data by executing a custom OpenCL kernel": [[372, "initialize-the-data-by-executing-a-custom-opencl-kernel"]], "Create and execute a primitive": [[372, "create-and-execute-a-primitive"], [413, "create-and-execute-a-primitive"]], "Validate the results": [[372, "validate-the-results"], [413, "validate-the-results"]], "Convolution int8 inference example with Graph API": [[374, "convolution-int8-inference-example-with-graph-api"]], "simple_pattern_int8() function": [[374, "simple-pattern-int8-function"]], "Single op partition on CPU": [[375, "single-op-partition-on-cpu"]], "cpu_single_op_partition_tutorial() function": [[375, "cpu-single-op-partition-tutorial-function"]], "Getting started with OpenCL extensions and Graph API": [[376, "getting-started-with-opencl-extensions-and-graph-api"]], "ocl_getting_started_tutorial() function": [[376, "ocl-getting-started-tutorial-function"]], "Build Graph and Get Partitions.": [[376, "build-graph-and-get-partitions"], [377, "build-graph-and-get-partitions"]], "Getting started with SYCL extensions API and Graph API": [[377, "getting-started-with-sycl-extensions-api-and-graph-api"]], "sycl_getting_started_tutorial() function": [[377, "sycl-getting-started-tutorial-function"]], "Single op partition on GPU": [[378, "single-op-partition-on-gpu"]], "sycl_single_op_partition_tutorial() function": [[378, "sycl-single-op-partition-tutorial-function"]], "Group Normalization Primitive Example": [[379, "group-normalization-primitive-example"]], "MatMul Tutorial: INT8 Inference": [[381, "matmul-tutorial-int8-inference"]], "Inner Product Primitive Example": [[383, "inner-product-primitive-example"]], "Layer Normalization Primitive Example": [[385, "layer-normalization-primitive-example"]], "Legal Information": [[387, "legal-information"]], "Trademark Information": [[387, "trademark-information"]], "Local Response Normalization Primitive Example": [[388, "local-response-normalization-primitive-example"]], "LSTM RNN Primitive Example": [[390, "lstm-rnn-primitive-example"]], "Matmul Primitive Example": [[392, "matmul-primitive-example"]], "Performance Profiling Example": [[395, "performance-profiling-example"]], "Walkthrough": [[395, "walkthrough"]], "Naive Implementation": [[395, "naive-implementation"]], "Blocked format implementation": [[395, "blocked-format-implementation"]], "Fused Implementation": [[395, "fused-implementation"]], "Performance summary": [[395, "performance-summary"]], "Configuration Notice": [[395, "configuration-notice"]], "Memory Format Propagation": [[394, "memory-format-propagation"]], "Introduction to the tutorial": [[394, "introduction-to-the-tutorial"]], "memory_format_propagation() function": [[394, "memory-format-propagation-function"]], "Initialization": [[394, "initialization"]], "Create convolution and pooling primitives": [[394, "create-convolution-and-pooling-primitives"]], "Create source and destination memory objects": [[394, "create-source-and-destination-memory-objects"]], "Determine if source and destination need to be reordered": [[394, "determine-if-source-and-destination-need-to-be-reordered"]], "Allocate intermediate buffers if necessary": [[394, "allocate-intermediate-buffers-if-necessary"]], "Perform reorders for source data if necessary": [[394, "perform-reorders-for-source-data-if-necessary"]], "Create and execute convolution and pooling primitives": [[394, "create-and-execute-convolution-and-pooling-primitives"]], "Reorder destination data if necessary": [[394, "reorder-destination-data-if-necessary"]], "Results": [[394, "results"]], "Pooling Primitive Example": [[396, "pooling-primitive-example"]], "Primitive Example": [[398, "primitive-example"]], "Reduction Primitive Example": [[400, "reduction-primitive-example"]], "Reorder Primitive Example": [[402, "reorder-primitive-example"]], "Resampling Primitive Example": [[404, "resampling-primitive-example"]], "RNN f32 training example": [[406, "rnn-f32-training-example"]], "Shuffle Primitive Example": [[407, "shuffle-primitive-example"]], "Softmax Primitive Example": [[409, "softmax-primitive-example"]], "Sum Primitive Example": [[411, "sum-primitive-example"]], "Getting started on both CPU and GPU with SYCL extensions API": [[413, "getting-started-on-both-cpu-and-gpu-with-sycl-extensions-api"]], "sycl_interop_buffer_tutorial() function": [[413, "sycl-interop-buffer-tutorial-function"]], "Initialize the data executing a custom SYCL kernel": [[413, "initialize-the-data-executing-a-custom-sycl-kernel"]], "Todo List": [[414, "todo-list"]], "MatMul Tutorial: weights decompression": [[415, "matmul-tutorial-weights-decompression"]], "Performance Profiling and Inspection": [[417, "performance-profiling-and-inspection"]], "struct args_t": [[419, "struct-args-t"]], "struct cpu_deletor": [[420, "struct-cpu-deletor"]], "struct dnnl::augru_backward": [[421, "struct-dnnl-augru-backward"]], "Inherited Members": [[421, "inherited-members"], [423, "inherited-members"], [422, "inherited-members"], [424, "inherited-members"], [425, "inherited-members"], [427, "inherited-members"], [426, "inherited-members"], [428, "inherited-members"], [429, "inherited-members"], [430, "inherited-members"], [433, "inherited-members"], [434, "inherited-members"], [435, "inherited-members"], [436, "inherited-members"], [437, "inherited-members"], [439, "inherited-members"], [438, "inherited-members"], [440, "inherited-members"], [441, "inherited-members"], [442, "inherited-members"], [443, "inherited-members"], [445, "inherited-members"], [444, "inherited-members"], [446, "inherited-members"], [447, "inherited-members"], [449, "inherited-members"], [448, "inherited-members"], [450, "inherited-members"], [452, "inherited-members"], [457, "inherited-members"], [459, "inherited-members"], [458, "inherited-members"], [461, "inherited-members"], [460, "inherited-members"], [462, "inherited-members"], [463, "inherited-members"], [464, "inherited-members"], [467, "inherited-members"], [469, "inherited-members"], [468, "inherited-members"], [471, "inherited-members"], [470, "inherited-members"], [473, "inherited-members"], [472, "inherited-members"], [475, "inherited-members"], [474, "inherited-members"], [476, "inherited-members"], [477, "inherited-members"], [478, "inherited-members"], [479, "inherited-members"], [481, "inherited-members"], [480, "inherited-members"], [482, "inherited-members"], [483, "inherited-members"], [485, "inherited-members"], [484, "inherited-members"], [486, "inherited-members"], [487, "inherited-members"], [488, "inherited-members"], [489, "inherited-members"], [491, "inherited-members"], [490, "inherited-members"], [492, "inherited-members"], [493, "inherited-members"], [494, "inherited-members"], [496, "inherited-members"], [499, "inherited-members"], [498, "inherited-members"], [501, "inherited-members"], [500, "inherited-members"], [502, "inherited-members"], [505, "inherited-members"], [504, "inherited-members"], [506, "inherited-members"], [507, "inherited-members"], [508, "inherited-members"], [510, "inherited-members"], [512, "inherited-members"], [515, "inherited-members"], [514, "inherited-members"], [516, "inherited-members"], [517, "inherited-members"], [519, "inherited-members"], [518, "inherited-members"], [520, "inherited-members"], [521, "inherited-members"], [523, "inherited-members"], [522, "inherited-members"], [524, "inherited-members"], [525, "inherited-members"], [526, "inherited-members"], [527, "inherited-members"], [528, "inherited-members"], [529, "inherited-members"], [530, "inherited-members"], [531, "inherited-members"], [532, "inherited-members"], [535, "inherited-members"], [534, "inherited-members"], [536, "inherited-members"], [538, "inherited-members"], [539, "inherited-members"], [541, "inherited-members"], [540, "inherited-members"], [543, "inherited-members"], [542, "inherited-members"]], "struct dnnl::augru_forward": [[423, "struct-dnnl-augru-forward"]], "struct dnnl::augru_backward::primitive_desc": [[422, "struct-dnnl-augru-backward-primitive-desc"]], "struct dnnl::augru_forward::primitive_desc": [[424, "struct-dnnl-augru-forward-primitive-desc"]], "struct dnnl::batch_normalization_backward": [[425, "struct-dnnl-batch-normalization-backward"]], "struct dnnl::batch_normalization_forward": [[427, "struct-dnnl-batch-normalization-forward"]], "struct dnnl::batch_normalization_backward::primitive_desc": [[426, "struct-dnnl-batch-normalization-backward-primitive-desc"]], "struct dnnl::batch_normalization_forward::primitive_desc": [[428, "struct-dnnl-batch-normalization-forward-primitive-desc"]], "struct dnnl::binary": [[429, "struct-dnnl-binary"]], "struct dnnl_brgemm": [[431, "struct-dnnl-brgemm"]], "struct dnnl::binary::primitive_desc": [[430, "struct-dnnl-binary-primitive-desc"]], "struct dnnl::concat": [[433, "struct-dnnl-concat"]], "struct dnnl_brgemm_pack_b": [[432, "struct-dnnl-brgemm-pack-b"]], "struct dnnl::concat::primitive_desc": [[434, "struct-dnnl-concat-primitive-desc"]], "struct dnnl::convolution_backward_data": [[435, "struct-dnnl-convolution-backward-data"]], "struct dnnl::convolution_backward_data::primitive_desc": [[436, "struct-dnnl-convolution-backward-data-primitive-desc"]], "struct dnnl::convolution_backward_weights": [[437, "struct-dnnl-convolution-backward-weights"]], "struct dnnl::convolution_forward": [[439, "struct-dnnl-convolution-forward"]], "struct dnnl::convolution_backward_weights::primitive_desc": [[438, "struct-dnnl-convolution-backward-weights-primitive-desc"]], "struct dnnl::convolution_forward::primitive_desc": [[440, "struct-dnnl-convolution-forward-primitive-desc"]], "struct dnnl::deconvolution_backward_data": [[441, "struct-dnnl-deconvolution-backward-data"]], "struct dnnl::deconvolution_backward_data::primitive_desc": [[442, "struct-dnnl-deconvolution-backward-data-primitive-desc"]], "struct dnnl::deconvolution_backward_weights": [[443, "struct-dnnl-deconvolution-backward-weights"]], "struct dnnl::deconvolution_forward": [[445, "struct-dnnl-deconvolution-forward"]], "struct dnnl::deconvolution_backward_weights::primitive_desc": [[444, "struct-dnnl-deconvolution-backward-weights-primitive-desc"]], "struct dnnl::deconvolution_forward::primitive_desc": [[446, "struct-dnnl-deconvolution-forward-primitive-desc"]], "struct dnnl::eltwise_backward": [[447, "struct-dnnl-eltwise-backward"]], "struct dnnl::eltwise_forward": [[449, "struct-dnnl-eltwise-forward"]], "struct dnnl::eltwise_backward::primitive_desc": [[448, "struct-dnnl-eltwise-backward-primitive-desc"]], "struct dnnl::eltwise_forward::primitive_desc": [[450, "struct-dnnl-eltwise-forward-primitive-desc"]], "struct dnnl_engine": [[451, "struct-dnnl-engine"]], "struct dnnl::engine": [[452, "struct-dnnl-engine"]], "struct dnnl::error": [[453, "struct-dnnl-error"]], "struct dnnl_exec_arg_t": [[454, "struct-dnnl-exec-arg-t"]], "Fields": [[454, "fields"], [455, "fields"], [456, "fields"], [537, "fields"], [544, "fields"]], "struct dnnl_graph_inplace_pair_t": [[455, "struct-dnnl-graph-inplace-pair-t"]], "struct dnnl_graph_logical_tensor_t": [[456, "struct-dnnl-graph-logical-tensor-t"]], "struct dnnl::group_normalization_backward": [[457, "struct-dnnl-group-normalization-backward"]], "struct dnnl::group_normalization_forward": [[459, "struct-dnnl-group-normalization-forward"]], "struct dnnl::group_normalization_backward::primitive_desc": [[458, "struct-dnnl-group-normalization-backward-primitive-desc"]], "struct dnnl::gru_backward": [[461, "struct-dnnl-gru-backward"]], "struct dnnl::group_normalization_forward::primitive_desc": [[460, "struct-dnnl-group-normalization-forward-primitive-desc"]], "struct dnnl::gru_backward::primitive_desc": [[462, "struct-dnnl-gru-backward-primitive-desc"]], "struct dnnl::gru_forward": [[463, "struct-dnnl-gru-forward"]], "struct dnnl::gru_forward::primitive_desc": [[464, "struct-dnnl-gru-forward-primitive-desc"]], "template struct dnnl::handle": [[465, "template-struct-dnnl-handle"]], "struct dnnl::inner_product_backward_data": [[467, "struct-dnnl-inner-product-backward-data"]], "template struct dnnl::handle_traits": [[466, "template-struct-dnnl-handle-traits"]], "struct dnnl::inner_product_backward_weights": [[469, "struct-dnnl-inner-product-backward-weights"]], "struct dnnl::inner_product_backward_data::primitive_desc": [[468, "struct-dnnl-inner-product-backward-data-primitive-desc"]], "struct dnnl::inner_product_forward": [[471, "struct-dnnl-inner-product-forward"]], "struct dnnl::inner_product_backward_weights::primitive_desc": [[470, "struct-dnnl-inner-product-backward-weights-primitive-desc"]], "struct dnnl::layer_normalization_backward": [[473, "struct-dnnl-layer-normalization-backward"]], "struct dnnl::inner_product_forward::primitive_desc": [[472, "struct-dnnl-inner-product-forward-primitive-desc"]], "struct dnnl::layer_normalization_forward": [[475, "struct-dnnl-layer-normalization-forward"]], "struct dnnl::layer_normalization_backward::primitive_desc": [[474, "struct-dnnl-layer-normalization-backward-primitive-desc"]], "struct dnnl::layer_normalization_forward::primitive_desc": [[476, "struct-dnnl-layer-normalization-forward-primitive-desc"]], "struct dnnl::lbr_augru_backward": [[477, "struct-dnnl-lbr-augru-backward"]], "struct dnnl::lbr_augru_backward::primitive_desc": [[478, "struct-dnnl-lbr-augru-backward-primitive-desc"]], "struct dnnl::lbr_augru_forward": [[479, "struct-dnnl-lbr-augru-forward"]], "struct dnnl::lbr_gru_backward": [[481, "struct-dnnl-lbr-gru-backward"]], "struct dnnl::lbr_augru_forward::primitive_desc": [[480, "struct-dnnl-lbr-augru-forward-primitive-desc"]], "struct dnnl::lbr_gru_backward::primitive_desc": [[482, "struct-dnnl-lbr-gru-backward-primitive-desc"]], "struct dnnl::lbr_gru_forward": [[483, "struct-dnnl-lbr-gru-forward"]], "struct dnnl::lrn_backward": [[485, "struct-dnnl-lrn-backward"]], "struct dnnl::lbr_gru_forward::primitive_desc": [[484, "struct-dnnl-lbr-gru-forward-primitive-desc"]], "struct dnnl::lrn_backward::primitive_desc": [[486, "struct-dnnl-lrn-backward-primitive-desc"]], "struct dnnl::lrn_forward": [[487, "struct-dnnl-lrn-forward"]], "struct dnnl::lrn_forward::primitive_desc": [[488, "struct-dnnl-lrn-forward-primitive-desc"]], "struct dnnl::lstm_backward": [[489, "struct-dnnl-lstm-backward"]], "struct dnnl::lstm_forward": [[491, "struct-dnnl-lstm-forward"]], "struct dnnl::lstm_backward::primitive_desc": [[490, "struct-dnnl-lstm-backward-primitive-desc"]], "struct dnnl::lstm_forward::primitive_desc": [[492, "struct-dnnl-lstm-forward-primitive-desc"]], "struct dnnl::matmul": [[493, "struct-dnnl-matmul"]], "struct dnnl::matmul::primitive_desc": [[494, "struct-dnnl-matmul-primitive-desc"]], "struct dnnl_memory": [[495, "struct-dnnl-memory"]], "struct dnnl_memory_desc": [[497, "struct-dnnl-memory-desc"]], "struct dnnl::memory": [[496, "struct-dnnl-memory"]], "struct dnnl::pooling_backward": [[499, "struct-dnnl-pooling-backward"]], "struct dnnl::memory::desc": [[498, "struct-dnnl-memory-desc"]], "struct dnnl::pooling_forward": [[501, "struct-dnnl-pooling-forward"]], "struct dnnl::pooling_backward::primitive_desc": [[500, "struct-dnnl-pooling-backward-primitive-desc"]], "struct dnnl_post_ops": [[503, "struct-dnnl-post-ops"]], "struct dnnl::pooling_forward::primitive_desc": [[502, "struct-dnnl-pooling-forward-primitive-desc"]], "struct dnnl::prelu_backward": [[505, "struct-dnnl-prelu-backward"]], "struct dnnl::post_ops": [[504, "struct-dnnl-post-ops"]], "struct dnnl::prelu_backward::primitive_desc": [[506, "struct-dnnl-prelu-backward-primitive-desc"]], "struct dnnl::prelu_forward": [[507, "struct-dnnl-prelu-forward"]], "struct dnnl::prelu_forward::primitive_desc": [[508, "struct-dnnl-prelu-forward-primitive-desc"]], "struct dnnl_primitive": [[509, "struct-dnnl-primitive"]], "struct dnnl_primitive_attr": [[511, "struct-dnnl-primitive-attr"]], "struct dnnl::primitive": [[510, "struct-dnnl-primitive"]], "struct dnnl::primitive_attr": [[512, "struct-dnnl-primitive-attr"]], "struct dnnl_primitive_desc": [[513, "struct-dnnl-primitive-desc"]], "struct dnnl::primitive_desc_base": [[515, "struct-dnnl-primitive-desc-base"]], "struct dnnl::primitive_desc": [[514, "struct-dnnl-primitive-desc"]], "struct dnnl::reduction": [[516, "struct-dnnl-reduction"]], "struct dnnl::reduction::primitive_desc": [[517, "struct-dnnl-reduction-primitive-desc"]], "struct dnnl::reorder::primitive_desc": [[519, "struct-dnnl-reorder-primitive-desc"]], "struct dnnl::reorder": [[518, "struct-dnnl-reorder"]], "struct dnnl::resampling_backward": [[520, "struct-dnnl-resampling-backward"]], "struct dnnl::resampling_backward::primitive_desc": [[521, "struct-dnnl-resampling-backward-primitive-desc"]], "struct dnnl::resampling_forward::primitive_desc": [[523, "struct-dnnl-resampling-forward-primitive-desc"]], "struct dnnl::resampling_forward": [[522, "struct-dnnl-resampling-forward"]], "struct dnnl::rnn_primitive_desc_base": [[524, "struct-dnnl-rnn-primitive-desc-base"]], "struct dnnl::shuffle_backward": [[525, "struct-dnnl-shuffle-backward"]], "struct dnnl::shuffle_backward::primitive_desc": [[526, "struct-dnnl-shuffle-backward-primitive-desc"]], "struct dnnl::shuffle_forward": [[527, "struct-dnnl-shuffle-forward"]], "struct dnnl::shuffle_forward::primitive_desc": [[528, "struct-dnnl-shuffle-forward-primitive-desc"]], "struct dnnl::softmax_backward": [[529, "struct-dnnl-softmax-backward"]], "struct dnnl::softmax_backward::primitive_desc": [[530, "struct-dnnl-softmax-backward-primitive-desc"]], "struct dnnl::softmax_forward": [[531, "struct-dnnl-softmax-forward"]], "struct dnnl::softmax_forward::primitive_desc": [[532, "struct-dnnl-softmax-forward-primitive-desc"]], "struct dnnl_stream": [[533, "struct-dnnl-stream"]], "struct dnnl::sum": [[535, "struct-dnnl-sum"]], "struct dnnl::stream": [[534, "struct-dnnl-stream"]], "struct dnnl::sum::primitive_desc": [[536, "struct-dnnl-sum-primitive-desc"]], "struct dnnl::threadpool_interop::threadpool_iface": [[537, "struct-dnnl-threadpool-interop-threadpool-iface"]], "struct dnnl::ukernel::brgemm": [[538, "struct-dnnl-ukernel-brgemm"]], "struct dnnl::ukernel::brgemm_pack_b": [[539, "struct-dnnl-ukernel-brgemm-pack-b"]], "struct dnnl::vanilla_rnn_backward::primitive_desc": [[541, "struct-dnnl-vanilla-rnn-backward-primitive-desc"]], "struct dnnl::vanilla_rnn_backward": [[540, "struct-dnnl-vanilla-rnn-backward"]], "struct dnnl::vanilla_rnn_forward::primitive_desc": [[543, "struct-dnnl-vanilla-rnn-forward-primitive-desc"]], "struct dnnl::vanilla_rnn_forward": [[542, "struct-dnnl-vanilla-rnn-forward"]], "struct example_allows_unimplemented": [[545, "struct-example-allows-unimplemented"]], "struct dnnl_version_t": [[544, "struct-dnnl-version-t"]], "struct gemm_dims_t": [[546, "struct-gemm-dims-t"]], "struct sycl_deletor": [[547, "struct-sycl-deletor"]], "Supported Primitives": [[548, "supported-primitives"]]}, "indexentries": {"allocator": [[2, "index-1"], [2, "index-2"], [311, "index-0"]], "class": [[2, "index-0"], [3, "index-0"], [4, "index-0"], [5, "index-0"], [6, "index-0"], [7, "index-0"], [8, "index-0"]], "dnnl::graph::allocator": [[2, "index-0"]], "function": [[2, "index-1"], [2, "index-2"], [3, "index-1"], [3, "index-2"], [3, "index-3"], [3, "index-4"], [3, "index-5"], [4, "index-1"], [4, "index-2"], [4, "index-3"], [4, "index-4"], [4, "index-5"], [4, "index-6"], [5, "index-10"], [5, "index-11"], [5, "index-12"], [5, "index-13"], [5, "index-14"], [5, "index-15"], [5, "index-16"], [5, "index-17"], [5, "index-18"], [5, "index-19"], [5, "index-20"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"], [6, "index-1"], [6, "index-2"], [6, "index-3"], [6, "index-4"], [6, "index-5"], [6, "index-6"], [6, "index-7"], [7, "index-1"], [7, "index-10"], [7, "index-2"], [7, "index-3"], [7, "index-4"], [7, "index-5"], [7, "index-6"], [7, "index-7"], [7, "index-8"], [7, "index-9"], [8, "index-1"], [8, "index-2"], [8, "index-3"], [8, "index-4"], [8, "index-5"], [8, "index-6"], [264, "index-1"], [269, "index-1"], [270, "index-10"], [270, "index-11"], [270, "index-12"], [270, "index-13"], [270, "index-14"], [270, "index-15"], [270, "index-16"], [270, "index-17"], [270, "index-18"], [270, "index-19"], [270, "index-20"], [270, "index-21"], [270, "index-22"], [270, "index-23"], [270, "index-24"], [270, "index-25"], [270, "index-26"], [270, "index-27"], [270, "index-28"], [270, "index-29"], [270, "index-30"], [270, "index-31"], [270, "index-32"], [270, "index-33"], [270, "index-34"], [270, "index-35"], [270, "index-36"], [270, "index-37"], [270, "index-38"], [270, "index-39"], [270, "index-40"], [270, "index-41"], [270, "index-42"], [270, "index-43"], [270, "index-44"], [270, "index-45"], [270, "index-46"], [270, "index-47"], [270, "index-5"], [270, "index-6"], [270, "index-7"], [270, "index-8"], [270, "index-9"], [271, "index-1"], [271, "index-2"], [272, "index-1"], [273, "index-1"], [273, "index-2"], [273, "index-3"], [273, "index-4"], [273, "index-5"], [273, "index-6"], [275, "index-1"], [276, "index-1"], [276, "index-2"], [276, "index-3"], [278, "index-1"], [278, "index-2"], [278, "index-3"], [279, "index-1"], [279, "index-2"], [280, "index-2"], [280, "index-3"], [280, "index-4"], [280, "index-5"], [280, "index-6"], [281, "index-1"], [281, "index-2"], [281, "index-3"], [282, "index-1"], [282, "index-2"], [283, "index-1"], [283, "index-2"], [283, "index-3"], [285, "index-1"], [285, "index-2"], [285, "index-3"], [285, "index-4"], [286, "index-1"], [286, "index-2"], [287, "index-1"], [288, "index-10"], [288, "index-11"], [288, "index-12"], [288, "index-13"], [288, "index-14"], [288, "index-15"], [288, "index-16"], [288, "index-17"], [288, "index-18"], [288, "index-19"], [288, "index-20"], [288, "index-21"], [288, "index-22"], [288, "index-23"], [288, "index-24"], [288, "index-25"], [288, "index-26"], [288, "index-27"], [288, "index-28"], [288, "index-29"], [288, "index-30"], [288, "index-31"], [288, "index-32"], [288, "index-33"], [288, "index-34"], [288, "index-5"], [288, "index-6"], [288, "index-7"], [288, "index-8"], [288, "index-9"], [289, "index-1"], [289, "index-10"], [289, "index-11"], [289, "index-12"], [289, "index-13"], [289, "index-2"], [289, "index-3"], [289, "index-4"], [289, "index-5"], [289, "index-6"], [289, "index-7"], [289, "index-8"], [289, "index-9"], [290, "index-1"], [290, "index-2"], [291, "index-1"], [291, "index-2"], [292, "index-1"], [292, "index-2"], [292, "index-3"], [292, "index-4"], [294, "index-10"], [294, "index-11"], [294, "index-12"], [294, "index-13"], [294, "index-14"], [294, "index-15"], [294, "index-16"], [294, "index-17"], [294, "index-18"], [294, "index-19"], [294, "index-20"], [294, "index-5"], [294, "index-6"], [294, "index-7"], [294, "index-8"], [294, "index-9"], [295, "index-1"], [295, "index-2"], [295, "index-3"], [295, "index-4"], [296, "index-1"], [297, "index-1"], [298, "index-1"], [298, "index-2"], [299, "index-1"], [299, "index-10"], [299, "index-11"], [299, "index-12"], [299, "index-13"], [299, "index-14"], [299, "index-2"], [299, "index-3"], [299, "index-4"], [299, "index-5"], [299, "index-6"], [299, "index-7"], [299, "index-8"], [299, "index-9"], [300, "index-10"], [300, "index-11"], [300, "index-12"], [300, "index-13"], [300, "index-14"], [300, "index-15"], [300, "index-16"], [300, "index-17"], [300, "index-18"], [300, "index-19"], [300, "index-2"], [300, "index-20"], [300, "index-21"], [300, "index-3"], [300, "index-4"], [300, "index-5"], [300, "index-6"], [300, "index-7"], [300, "index-8"], [300, "index-9"], [301, "index-1"], [301, "index-2"], [302, "index-1"], [302, "index-2"], [303, "index-3"], [303, "index-4"], [303, "index-5"], [303, "index-6"], [304, "index-1"], [305, "index-1"], [305, "index-2"], [305, "index-3"], [305, "index-4"], [305, "index-5"], [305, "index-6"], [305, "index-7"], [305, "index-8"], [305, "index-9"], [306, "index-1"], [306, "index-2"], [306, "index-3"], [306, "index-4"], [306, "index-5"], [306, "index-6"], [306, "index-7"], [308, "index-10"], [308, "index-11"], [308, "index-12"], [308, "index-13"], [308, "index-14"], [308, "index-15"], [308, "index-16"], [308, "index-17"], [308, "index-5"], [308, "index-6"], [308, "index-7"], [308, "index-8"], [308, "index-9"], [311, "index-5"], [311, "index-6"], [312, "index-3"], [312, "index-4"], [312, "index-5"], [312, "index-6"], [312, "index-7"], [313, "index-1"], [313, "index-2"], [313, "index-3"], [313, "index-4"], [314, "index-1"], [314, "index-2"], [314, "index-3"], [314, "index-4"], [314, "index-5"], [314, "index-6"], [314, "index-7"], [314, "index-8"], [315, "index-1"], [315, "index-2"], [316, "index-10"], [316, "index-11"], [316, "index-3"], [316, "index-4"], [316, "index-5"], [316, "index-6"], [316, "index-7"], [316, "index-8"], [316, "index-9"], [318, "index-1"], [318, "index-2"], [318, "index-3"], [318, "index-4"], [318, "index-5"], [319, "index-3"], [319, "index-4"], [319, "index-5"], [319, "index-6"], [320, "index-10"], [320, "index-11"], [320, "index-12"], [320, "index-3"], [320, "index-4"], [320, "index-5"], [320, "index-6"], [320, "index-7"], [320, "index-8"], [320, "index-9"], [321, "index-10"], [321, "index-11"], [321, "index-12"], [321, "index-13"], [321, "index-14"], [321, "index-3"], [321, "index-4"], [321, "index-5"], [321, "index-6"], [321, "index-7"], [321, "index-8"], [321, "index-9"], [323, "index-3"], [323, "index-4"], [323, "index-5"], [324, "index-3"], [324, "index-4"], [324, "index-5"], [324, "index-6"], [324, "index-7"], [330, "index-1"], [330, "index-2"], [330, "index-3"], [330, "index-4"], [331, "index-1"], [331, "index-2"], [332, "index-1"], [332, "index-10"], [332, "index-11"], [332, "index-12"], [332, "index-13"], [332, "index-14"], [332, "index-15"], [332, "index-2"], [332, "index-3"], [332, "index-4"], [332, "index-5"], [332, "index-6"], [332, "index-7"], [332, "index-8"], [332, "index-9"], [333, "index-1"], [333, "index-10"], [333, "index-11"], [333, "index-12"], [333, "index-2"], [333, "index-3"], [333, "index-4"], [333, "index-5"], [333, "index-6"], [333, "index-7"], [333, "index-8"], [333, "index-9"], [334, "index-1"], [334, "index-2"], [334, "index-3"], [334, "index-4"], [334, "index-5"], [421, "index-1"], [421, "index-2"], [421, "index-3"], [422, "index-1"], [422, "index-10"], [422, "index-11"], [422, "index-12"], [422, "index-13"], [422, "index-14"], [422, "index-15"], [422, "index-16"], [422, "index-17"], [422, "index-18"], [422, "index-19"], [422, "index-2"], [422, "index-20"], [422, "index-21"], [422, "index-22"], [422, "index-23"], [422, "index-3"], [422, "index-4"], [422, "index-5"], [422, "index-6"], [422, "index-7"], [422, "index-8"], [422, "index-9"], [423, "index-1"], [423, "index-2"], [423, "index-3"], [424, "index-1"], [424, "index-10"], [424, "index-11"], [424, "index-12"], [424, "index-13"], [424, "index-14"], [424, "index-15"], [424, "index-2"], [424, "index-3"], [424, "index-4"], [424, "index-5"], [424, "index-6"], [424, "index-7"], [424, "index-8"], [424, "index-9"], [425, "index-1"], [425, "index-2"], [425, "index-3"], [426, "index-1"], [426, "index-10"], [426, "index-11"], [426, "index-12"], [426, "index-13"], [426, "index-14"], [426, "index-15"], [426, "index-2"], [426, "index-3"], [426, "index-4"], [426, "index-5"], [426, "index-6"], [426, "index-7"], [426, "index-8"], [426, "index-9"], [427, "index-1"], [427, "index-2"], [427, "index-3"], [428, "index-1"], [428, "index-10"], [428, "index-11"], [428, "index-12"], [428, "index-2"], [428, "index-3"], [428, "index-4"], [428, "index-5"], [428, "index-6"], [428, "index-7"], [428, "index-8"], [428, "index-9"], [429, "index-1"], [429, "index-2"], [429, "index-3"], [430, "index-1"], [430, "index-2"], [430, "index-3"], [430, "index-4"], [430, "index-5"], [430, "index-6"], [430, "index-7"], [430, "index-8"], [433, "index-1"], [433, "index-2"], [433, "index-3"], [434, "index-1"], [434, "index-10"], [434, "index-2"], [434, "index-3"], [434, "index-4"], [434, "index-5"], [434, "index-6"], [434, "index-7"], [434, "index-8"], [434, "index-9"], [435, "index-1"], [435, "index-2"], [435, "index-3"], [436, "index-1"], [436, "index-10"], [436, "index-11"], [436, "index-12"], [436, "index-13"], [436, "index-2"], [436, "index-3"], [436, "index-4"], [436, "index-5"], [436, "index-6"], [436, "index-7"], [436, "index-8"], [436, "index-9"], [437, "index-1"], [437, "index-2"], [437, "index-3"], [438, "index-1"], [438, "index-10"], [438, "index-11"], [438, "index-12"], [438, "index-13"], [438, "index-14"], [438, "index-15"], [438, "index-16"], [438, "index-2"], [438, "index-3"], [438, "index-4"], [438, "index-5"], [438, "index-6"], [438, "index-7"], [438, "index-8"], [438, "index-9"], [439, "index-1"], [439, "index-2"], [439, "index-3"], [440, "index-1"], [440, "index-10"], [440, "index-11"], [440, "index-12"], [440, "index-13"], [440, "index-14"], [440, "index-15"], [440, "index-16"], [440, "index-2"], [440, "index-3"], [440, "index-4"], [440, "index-5"], [440, "index-6"], [440, "index-7"], [440, "index-8"], [440, "index-9"], [441, "index-1"], [441, "index-2"], [441, "index-3"], [442, "index-1"], [442, "index-10"], [442, "index-11"], [442, "index-12"], [442, "index-13"], [442, "index-2"], [442, "index-3"], [442, "index-4"], [442, "index-5"], [442, "index-6"], [442, "index-7"], [442, "index-8"], [442, "index-9"], [443, "index-1"], [443, "index-2"], [443, "index-3"], [444, "index-1"], [444, "index-10"], [444, "index-11"], [444, "index-12"], [444, "index-13"], [444, "index-14"], [444, "index-15"], [444, "index-16"], [444, "index-2"], [444, "index-3"], [444, "index-4"], [444, "index-5"], [444, "index-6"], [444, "index-7"], [444, "index-8"], [444, "index-9"], [445, "index-1"], [445, "index-2"], [445, "index-3"], [446, "index-1"], [446, "index-10"], [446, "index-11"], [446, "index-12"], [446, "index-13"], [446, "index-14"], [446, "index-15"], [446, "index-16"], [446, "index-2"], [446, "index-3"], [446, "index-4"], [446, "index-5"], [446, "index-6"], [446, "index-7"], [446, "index-8"], [446, "index-9"], [447, "index-1"], [447, "index-2"], [447, "index-3"], [448, "index-1"], [448, "index-10"], [448, "index-11"], [448, "index-12"], [448, "index-2"], [448, "index-3"], [448, "index-4"], [448, "index-5"], [448, "index-6"], [448, "index-7"], [448, "index-8"], [448, "index-9"], [449, "index-1"], [449, "index-2"], [449, "index-3"], [450, "index-1"], [450, "index-10"], [450, "index-11"], [450, "index-2"], [450, "index-3"], [450, "index-4"], [450, "index-5"], [450, "index-6"], [450, "index-7"], [450, "index-8"], [450, "index-9"], [452, "index-1"], [452, "index-2"], [452, "index-3"], [452, "index-4"], [452, "index-5"], [452, "index-6"], [452, "index-7"], [452, "index-8"], [453, "index-1"], [453, "index-2"], [453, "index-3"], [457, "index-1"], [457, "index-2"], [457, "index-3"], [458, "index-1"], [458, "index-10"], [458, "index-11"], [458, "index-12"], [458, "index-13"], [458, "index-14"], [458, "index-15"], [458, "index-16"], [458, "index-2"], [458, "index-3"], [458, "index-4"], [458, "index-5"], [458, "index-6"], [458, "index-7"], [458, "index-8"], [458, "index-9"], [459, "index-1"], [459, "index-2"], [459, "index-3"], [460, "index-1"], [460, "index-10"], [460, "index-11"], [460, "index-12"], [460, "index-13"], [460, "index-2"], [460, "index-3"], [460, "index-4"], [460, "index-5"], [460, "index-6"], [460, "index-7"], [460, "index-8"], [460, "index-9"], [461, "index-1"], [461, "index-2"], [461, "index-3"], [462, "index-1"], [462, "index-10"], [462, "index-11"], [462, "index-12"], [462, "index-13"], [462, "index-14"], [462, "index-15"], [462, "index-16"], [462, "index-17"], [462, "index-18"], [462, "index-19"], [462, "index-2"], [462, "index-20"], [462, "index-21"], [462, "index-3"], [462, "index-4"], [462, "index-5"], [462, "index-6"], [462, "index-7"], [462, "index-8"], [462, "index-9"], [463, "index-1"], [463, "index-2"], [463, "index-3"], [464, "index-1"], [464, "index-10"], [464, "index-11"], [464, "index-12"], [464, "index-13"], [464, "index-14"], [464, "index-2"], [464, "index-3"], [464, "index-4"], [464, "index-5"], [464, "index-6"], [464, "index-7"], [464, "index-8"], [464, "index-9"], [465, "index-1"], [465, "index-10"], [465, "index-11"], [465, "index-12"], [465, "index-2"], [465, "index-3"], [465, "index-4"], [465, "index-5"], [465, "index-6"], [465, "index-7"], [465, "index-8"], [465, "index-9"], [467, "index-1"], [467, "index-2"], [467, "index-3"], [468, "index-1"], [468, "index-2"], [468, "index-3"], [468, "index-4"], [468, "index-5"], [468, "index-6"], [468, "index-7"], [469, "index-1"], [469, "index-2"], [469, "index-3"], [470, "index-1"], [470, "index-2"], [470, "index-3"], [470, "index-4"], [470, "index-5"], [470, "index-6"], [470, "index-7"], [470, "index-8"], [470, "index-9"], [471, "index-1"], [471, "index-2"], [471, "index-3"], [472, "index-1"], [472, "index-2"], [472, "index-3"], [472, "index-4"], [472, "index-5"], [472, "index-6"], [472, "index-7"], [472, "index-8"], [472, "index-9"], [473, "index-1"], [473, "index-2"], [473, "index-3"], [474, "index-1"], [474, "index-10"], [474, "index-11"], [474, "index-12"], [474, "index-13"], [474, "index-14"], [474, "index-15"], [474, "index-16"], [474, "index-17"], [474, "index-18"], [474, "index-2"], [474, "index-3"], [474, "index-4"], [474, "index-5"], [474, "index-6"], [474, "index-7"], [474, "index-8"], [474, "index-9"], [475, "index-1"], [475, "index-2"], [475, "index-3"], [476, "index-1"], [476, "index-10"], [476, "index-11"], [476, "index-12"], [476, "index-13"], [476, "index-14"], [476, "index-15"], [476, "index-2"], [476, "index-3"], [476, "index-4"], [476, "index-5"], [476, "index-6"], [476, "index-7"], [476, "index-8"], [476, "index-9"], [477, "index-1"], [477, "index-2"], [477, "index-3"], [478, "index-1"], [478, "index-10"], [478, "index-11"], [478, "index-12"], [478, "index-13"], [478, "index-14"], [478, "index-15"], [478, "index-16"], [478, "index-17"], [478, "index-18"], [478, "index-19"], [478, "index-2"], [478, "index-20"], [478, "index-21"], [478, "index-22"], [478, "index-23"], [478, "index-3"], [478, "index-4"], [478, "index-5"], [478, "index-6"], [478, "index-7"], [478, "index-8"], [478, "index-9"], [479, "index-1"], [479, "index-2"], [479, "index-3"], [480, "index-1"], [480, "index-10"], [480, "index-11"], [480, "index-12"], [480, "index-13"], [480, "index-14"], [480, "index-15"], [480, "index-2"], [480, "index-3"], [480, "index-4"], [480, "index-5"], [480, "index-6"], [480, "index-7"], [480, "index-8"], [480, "index-9"], [481, "index-1"], [481, "index-2"], [481, "index-3"], [482, "index-1"], [482, "index-10"], [482, "index-11"], [482, "index-12"], [482, "index-13"], [482, "index-14"], [482, "index-15"], [482, "index-16"], [482, "index-17"], [482, "index-18"], [482, "index-19"], [482, "index-2"], [482, "index-20"], [482, "index-21"], [482, "index-3"], [482, "index-4"], [482, "index-5"], [482, "index-6"], [482, "index-7"], [482, "index-8"], [482, "index-9"], [483, "index-1"], [483, "index-2"], [483, "index-3"], [484, "index-1"], [484, "index-10"], [484, "index-11"], [484, "index-12"], [484, "index-13"], [484, "index-14"], [484, "index-2"], [484, "index-3"], [484, "index-4"], [484, "index-5"], [484, "index-6"], [484, "index-7"], [484, "index-8"], [484, "index-9"], [485, "index-1"], [485, "index-2"], [485, "index-3"], [486, "index-1"], [486, "index-10"], [486, "index-11"], [486, "index-12"], [486, "index-2"], [486, "index-3"], [486, "index-4"], [486, "index-5"], [486, "index-6"], [486, "index-7"], [486, "index-8"], [486, "index-9"], [487, "index-1"], [487, "index-2"], [487, "index-3"], [488, "index-1"], [488, "index-10"], [488, "index-11"], [488, "index-12"], [488, "index-2"], [488, "index-3"], [488, "index-4"], [488, "index-5"], [488, "index-6"], [488, "index-7"], [488, "index-8"], [488, "index-9"], [489, "index-1"], [489, "index-2"], [489, "index-3"], [490, "index-1"], [490, "index-10"], [490, "index-11"], [490, "index-12"], [490, "index-13"], [490, "index-14"], [490, "index-15"], [490, "index-16"], [490, "index-17"], [490, "index-18"], [490, "index-19"], [490, "index-2"], [490, "index-20"], [490, "index-21"], [490, "index-22"], [490, "index-23"], [490, "index-24"], [490, "index-25"], [490, "index-26"], [490, "index-27"], [490, "index-28"], [490, "index-29"], [490, "index-3"], [490, "index-30"], [490, "index-31"], [490, "index-4"], [490, "index-5"], [490, "index-6"], [490, "index-7"], [490, "index-8"], [490, "index-9"], [491, "index-1"], [491, "index-2"], [491, "index-3"], [492, "index-1"], [492, "index-10"], [492, "index-11"], [492, "index-12"], [492, "index-13"], [492, "index-14"], [492, "index-15"], [492, "index-16"], [492, "index-17"], [492, "index-18"], [492, "index-19"], [492, "index-2"], [492, "index-20"], [492, "index-3"], [492, "index-4"], [492, "index-5"], [492, "index-6"], [492, "index-7"], [492, "index-8"], [492, "index-9"], [493, "index-1"], [493, "index-2"], [493, "index-3"], [494, "index-1"], [494, "index-2"], [494, "index-3"], [494, "index-4"], [494, "index-5"], [494, "index-6"], [494, "index-7"], [494, "index-8"], [496, "index-10"], [496, "index-11"], [496, "index-12"], [496, "index-13"], [496, "index-14"], [496, "index-15"], [496, "index-16"], [496, "index-17"], [496, "index-18"], [496, "index-3"], [496, "index-4"], [496, "index-5"], [496, "index-6"], [496, "index-7"], [496, "index-8"], [496, "index-9"], [498, "index-1"], [498, "index-10"], [498, "index-11"], [498, "index-12"], [498, "index-13"], [498, "index-14"], [498, "index-15"], [498, "index-16"], [498, "index-17"], [498, "index-18"], [498, "index-19"], [498, "index-2"], [498, "index-20"], [498, "index-21"], [498, "index-22"], [498, "index-23"], [498, "index-24"], [498, "index-25"], [498, "index-26"], [498, "index-27"], [498, "index-28"], [498, "index-29"], [498, "index-3"], [498, "index-4"], [498, "index-5"], [498, "index-6"], [498, "index-7"], [498, "index-8"], [498, "index-9"], [499, "index-1"], [499, "index-2"], [499, "index-3"], [500, "index-1"], [500, "index-10"], [500, "index-11"], [500, "index-12"], [500, "index-13"], [500, "index-2"], [500, "index-3"], [500, "index-4"], [500, "index-5"], [500, "index-6"], [500, "index-7"], [500, "index-8"], [500, "index-9"], [501, "index-1"], [501, "index-2"], [501, "index-3"], [502, "index-1"], [502, "index-10"], [502, "index-11"], [502, "index-12"], [502, "index-13"], [502, "index-2"], [502, "index-3"], [502, "index-4"], [502, "index-5"], [502, "index-6"], [502, "index-7"], [502, "index-8"], [502, "index-9"], [504, "index-1"], [504, "index-10"], [504, "index-11"], [504, "index-12"], [504, "index-13"], [504, "index-14"], [504, "index-15"], [504, "index-16"], [504, "index-2"], [504, "index-3"], [504, "index-4"], [504, "index-5"], [504, "index-6"], [504, "index-7"], [504, "index-8"], [504, "index-9"], [505, "index-1"], [505, "index-2"], [505, "index-3"], [506, "index-1"], [506, "index-2"], [506, "index-3"], [506, "index-4"], [506, "index-5"], [506, "index-6"], [506, "index-7"], [507, "index-1"], [507, "index-2"], [507, "index-3"], [508, "index-1"], [508, "index-2"], [508, "index-3"], [508, "index-4"], [508, "index-5"], [508, "index-6"], [510, "index-1"], [510, "index-10"], [510, "index-11"], [510, "index-12"], [510, "index-13"], [510, "index-2"], [510, "index-3"], [510, "index-4"], [510, "index-5"], [510, "index-6"], [510, "index-7"], [510, "index-8"], [510, "index-9"], [512, "index-1"], [512, "index-10"], [512, "index-11"], [512, "index-12"], [512, "index-13"], [512, "index-14"], [512, "index-15"], [512, "index-16"], [512, "index-17"], [512, "index-18"], [512, "index-19"], [512, "index-2"], [512, "index-20"], [512, "index-21"], [512, "index-22"], [512, "index-23"], [512, "index-3"], [512, "index-4"], [512, "index-5"], [512, "index-6"], [512, "index-7"], [512, "index-8"], [512, "index-9"], [514, "index-1"], [514, "index-2"], [514, "index-3"], [514, "index-4"], [514, "index-5"], [515, "index-1"], [515, "index-10"], [515, "index-11"], [515, "index-12"], [515, "index-13"], [515, "index-14"], [515, "index-15"], [515, "index-16"], [515, "index-17"], [515, "index-18"], [515, "index-19"], [515, "index-2"], [515, "index-20"], [515, "index-21"], [515, "index-22"], [515, "index-23"], [515, "index-24"], [515, "index-25"], [515, "index-26"], [515, "index-27"], [515, "index-28"], [515, "index-29"], [515, "index-3"], [515, "index-30"], [515, "index-31"], [515, "index-32"], [515, "index-33"], [515, "index-34"], [515, "index-35"], [515, "index-36"], [515, "index-37"], [515, "index-38"], [515, "index-39"], [515, "index-4"], [515, "index-40"], [515, "index-41"], [515, "index-42"], [515, "index-5"], [515, "index-6"], [515, "index-7"], [515, "index-8"], [515, "index-9"], [516, "index-1"], [516, "index-2"], [516, "index-3"], [517, "index-1"], [517, "index-2"], [517, "index-3"], [517, "index-4"], [517, "index-5"], [517, "index-6"], [517, "index-7"], [517, "index-8"], [518, "index-1"], [518, "index-2"], [518, "index-3"], [518, "index-4"], [518, "index-5"], [518, "index-6"], [519, "index-1"], [519, "index-10"], [519, "index-11"], [519, "index-12"], [519, "index-2"], [519, "index-3"], [519, "index-4"], [519, "index-5"], [519, "index-6"], [519, "index-7"], [519, "index-8"], [519, "index-9"], [520, "index-1"], [520, "index-2"], [520, "index-3"], [521, "index-1"], [521, "index-2"], [521, "index-3"], [521, "index-4"], [521, "index-5"], [521, "index-6"], [522, "index-1"], [522, "index-2"], [522, "index-3"], [523, "index-1"], [523, "index-2"], [523, "index-3"], [523, "index-4"], [523, "index-5"], [523, "index-6"], [523, "index-7"], [524, "index-1"], [524, "index-10"], [524, "index-11"], [524, "index-12"], [524, "index-13"], [524, "index-14"], [524, "index-15"], [524, "index-16"], [524, "index-17"], [524, "index-18"], [524, "index-19"], [524, "index-2"], [524, "index-20"], [524, "index-21"], [524, "index-22"], [524, "index-23"], [524, "index-24"], [524, "index-25"], [524, "index-26"], [524, "index-3"], [524, "index-4"], [524, "index-5"], [524, "index-6"], [524, "index-7"], [524, "index-8"], [524, "index-9"], [525, "index-1"], [525, "index-2"], [525, "index-3"], [526, "index-1"], [526, "index-2"], [526, "index-3"], [526, "index-4"], [526, "index-5"], [526, "index-6"], [526, "index-7"], [526, "index-8"], [527, "index-1"], [527, "index-2"], [527, "index-3"], [528, "index-1"], [528, "index-2"], [528, "index-3"], [528, "index-4"], [528, "index-5"], [528, "index-6"], [528, "index-7"], [528, "index-8"], [529, "index-1"], [529, "index-2"], [529, "index-3"], [530, "index-1"], [530, "index-2"], [530, "index-3"], [530, "index-4"], [530, "index-5"], [530, "index-6"], [530, "index-7"], [530, "index-8"], [530, "index-9"], [531, "index-1"], [531, "index-2"], [531, "index-3"], [532, "index-1"], [532, "index-2"], [532, "index-3"], [532, "index-4"], [532, "index-5"], [532, "index-6"], [532, "index-7"], [532, "index-8"], [534, "index-1"], [534, "index-2"], [534, "index-3"], [534, "index-4"], [534, "index-5"], [534, "index-6"], [534, "index-7"], [534, "index-8"], [535, "index-1"], [535, "index-2"], [535, "index-3"], [536, "index-1"], [536, "index-10"], [536, "index-2"], [536, "index-3"], [536, "index-4"], [536, "index-5"], [536, "index-6"], [536, "index-7"], [536, "index-8"], [536, "index-9"], [537, "index-2"], [537, "index-3"], [537, "index-4"], [537, "index-5"], [538, "index-1"], [538, "index-2"], [538, "index-3"], [538, "index-4"], [538, "index-5"], [538, "index-6"], [538, "index-7"], [538, "index-8"], [538, "index-9"], [539, "index-1"], [539, "index-2"], [539, "index-3"], [539, "index-4"], [539, "index-5"], [540, "index-1"], [540, "index-2"], [540, "index-3"], [541, "index-1"], [541, "index-10"], [541, "index-11"], [541, "index-12"], [541, "index-13"], [541, "index-14"], [541, "index-15"], [541, "index-16"], [541, "index-17"], [541, "index-18"], [541, "index-19"], [541, "index-2"], [541, "index-20"], [541, "index-21"], [541, "index-22"], [541, "index-23"], [541, "index-24"], [541, "index-25"], [541, "index-3"], [541, "index-4"], [541, "index-5"], [541, "index-6"], [541, "index-7"], [541, "index-8"], [541, "index-9"], [542, "index-1"], [542, "index-2"], [542, "index-3"], [543, "index-1"], [543, "index-10"], [543, "index-11"], [543, "index-12"], [543, "index-13"], [543, "index-14"], [543, "index-15"], [543, "index-16"], [543, "index-17"], [543, "index-18"], [543, "index-2"], [543, "index-3"], [543, "index-4"], [543, "index-5"], [543, "index-6"], [543, "index-7"], [543, "index-8"], [543, "index-9"]], "compiled_partition": [[3, "index-1"], [3, "index-2"]], "dnnl::graph::compiled_partition": [[3, "index-0"]], "execute": [[3, "index-5"], [330, "index-4"], [331, "index-2"], [332, "index-15"], [333, "index-12"], [510, "index-9"], [518, "index-5"], [518, "index-6"], [538, "index-7"], [538, "index-8"], [539, "index-5"]], "get_inplace_ports": [[3, "index-4"]], "query_logical_tensor": [[3, "index-3"]], "add_op": [[4, "index-3"]], "dnnl::graph::graph": [[4, "index-0"]], "finalize": [[4, "index-4"]], "get_partitions": [[4, "index-6"]], "graph": [[4, "index-1"], [4, "index-2"], [316, "index-0"]], "is_finalized": [[4, "index-5"]], "dim": [[5, "index-1"], [496, "index-1"]], "dims": [[5, "index-2"], [199, "index-44"], [456, "index-3"], [496, "index-2"]], "dnnl::graph::logical_tensor": [[5, "index-0"]], "get_data_type": [[5, "index-14"], [498, "index-20"]], "get_dims": [[5, "index-12"], [498, "index-22"]], "get_id": [[5, "index-13"], [7, "index-5"]], "get_layout_id": [[5, "index-17"]], "get_layout_type": [[5, "index-16"]], "get_mem_size": [[5, "index-19"]], "get_property_type": [[5, "index-15"]], "get_strides": [[5, "index-18"], [436, "index-10"], [438, "index-13"], [440, "index-13"], [442, "index-10"], [444, "index-13"], [446, "index-13"], [498, "index-13"], [500, "index-9"], [502, "index-9"], [515, "index-4"]], "is_equal": [[5, "index-20"]], "logical_tensor": [[5, "index-10"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"]], "operator=": [[5, "index-11"], [465, "index-5"], [465, "index-6"]], "typedef": [[5, "index-1"], [5, "index-2"], [270, "index-1"], [270, "index-2"], [270, "index-3"], [270, "index-4"], [277, "index-1"], [277, "index-2"], [280, "index-1"], [288, "index-1"], [288, "index-2"], [288, "index-3"], [288, "index-4"], [294, "index-1"], [294, "index-2"], [294, "index-3"], [294, "index-4"], [300, "index-1"], [303, "index-1"], [303, "index-2"], [308, "index-1"], [308, "index-2"], [308, "index-3"], [308, "index-4"], [311, "index-1"], [311, "index-2"], [311, "index-3"], [311, "index-4"], [312, "index-1"], [312, "index-2"], [316, "index-1"], [316, "index-2"], [319, "index-1"], [319, "index-2"], [320, "index-1"], [320, "index-2"], [321, "index-1"], [321, "index-2"], [323, "index-1"], [323, "index-2"], [324, "index-1"], [324, "index-2"], [496, "index-1"], [496, "index-2"]], "add_input": [[6, "index-3"]], "add_inputs": [[6, "index-4"]], "add_output": [[6, "index-5"]], "add_outputs": [[6, "index-6"]], "dnnl::graph::op": [[6, "index-0"]], "op": [[6, "index-1"], [6, "index-2"], [320, "index-0"]], "set_attr": [[6, "index-7"]], "compile": [[7, "index-6"]], "dnnl::graph::partition": [[7, "index-0"]], "get_engine_kind": [[7, "index-10"]], "get_input_ports": [[7, "index-8"]], "get_ops": [[7, "index-4"]], "get_ops_num": [[7, "index-3"]], "get_output_ports": [[7, "index-9"]], "is_supported": [[7, "index-7"]], "partition": [[7, "index-1"], [7, "index-2"], [321, "index-0"]], "dnnl::graph::tensor": [[8, "index-0"]], "get_data_handle": [[8, "index-4"], [496, "index-11"]], "get_engine": [[8, "index-6"], [496, "index-10"], [515, "index-1"], [534, "index-3"]], "set_data_handle": [[8, "index-5"], [496, "index-12"]], "tensor": [[8, "index-1"], [8, "index-2"], [8, "index-3"], [324, "index-0"]], "primitive attributes": [[9, "index-0"]], "page": [[9, "index-0"], [10, "index-0"], [11, "index-0"], [12, "index-0"], [13, "index-0"], [14, "index-0"], [15, "index-0"], [16, "index-0"], [17, "index-0"], [18, "index-0"], [19, "index-0"], [20, "index-0"], [21, "index-0"], [22, "index-0"], [23, "index-0"], [24, "index-0"], [25, "index-0"], [26, "index-0"], [27, "index-0"], [28, "index-0"], [29, "index-0"], [30, "index-0"], [31, "index-0"], [32, "index-0"], [33, "index-0"], [34, "index-0"], [35, "index-0"], [36, "index-0"], [37, "index-0"], [38, "index-0"], [39, "index-0"], [40, "index-0"], [41, "index-0"], [42, "index-0"], [43, "index-0"], [44, "index-0"], [45, "index-0"], [46, "index-0"], [47, "index-0"], [48, "index-0"], [49, "index-0"], [50, "index-0"], [51, "index-0"], [52, "index-0"], [53, "index-0"], [54, "index-0"], [55, "index-0"], [56, "index-0"], [57, "index-0"], [58, "index-0"], [59, "index-0"], [60, "index-0"], [61, "index-0"], [62, "index-0"], [63, "index-0"], [64, "index-0"], [65, "index-0"], [66, "index-0"], [67, "index-0"], [68, "index-0"], [69, "index-0"], [70, "index-0"], [71, "index-0"], [72, "index-0"], [73, "index-0"], [74, "index-0"], [75, "index-0"], [76, "index-0"], [77, "index-0"], [78, "index-0"], [79, "index-0"], [80, "index-0"], [81, "index-0"], [82, "index-0"], [83, "index-0"], [84, "index-0"], [85, "index-0"], [86, "index-0"], [87, "index-0"], [88, "index-0"], [89, "index-0"], [90, "index-0"], [91, "index-0"], [92, "index-0"], [93, "index-0"], [94, "index-0"], [95, "index-0"], [96, "index-0"], [97, "index-0"], [98, "index-0"], [99, "index-0"], [100, "index-0"], [101, "index-0"], [102, "index-0"], [103, "index-0"], [104, "index-0"], [105, "index-0"], [106, "index-0"], [107, "index-0"], [108, "index-0"], [109, "index-0"], [110, "index-0"], [111, "index-0"], [112, "index-0"], [113, "index-0"], [114, "index-0"], [115, "index-0"], [116, "index-0"], [117, "index-0"], [118, "index-0"], [119, "index-0"], [120, "index-0"], [121, "index-0"], [122, "index-0"], [123, "index-0"], [124, "index-0"], [125, "index-0"], [126, "index-0"], [127, "index-0"], [128, "index-0"], [129, "index-0"], [130, "index-0"], [131, "index-0"], [132, "index-0"], [133, "index-0"], [134, "index-0"], [135, "index-0"], [136, "index-0"], [137, "index-0"], [138, "index-0"], [139, "index-0"], [140, "index-0"], [141, "index-0"], [142, "index-0"], [143, "index-0"], [144, "index-0"], [145, "index-0"], [146, "index-0"], [147, "index-0"], [148, "index-0"], [149, "index-0"], [150, "index-0"], [151, "index-0"], [152, "index-0"], [153, "index-0"], [154, "index-0"], [155, "index-0"], [156, "index-0"], [157, "index-0"], [340, "index-0"], [342, "index-0"], [344, "index-0"], [346, "index-0"], [348, "index-0"], [349, "index-0"], [350, "index-0"], [351, "index-0"], [352, "index-0"], [353, "index-0"], [355, "index-0"], [357, "index-0"], [358, "index-0"], [359, "index-0"], [360, "index-0"], [362, "index-0"], [363, "index-0"], [364, "index-0"], [365, "index-0"], [367, "index-0"], [368, "index-0"], [369, "index-0"], [371, "index-0"], [372, "index-0"], [373, "index-0"], [374, "index-0"], [375, "index-0"], [376, "index-0"], [377, "index-0"], [378, "index-0"], [379, "index-0"], [381, "index-0"], [383, "index-0"], [385, "index-0"], [387, "index-0"], [388, "index-0"], [390, "index-0"], [392, "index-0"], [394, "index-0"], [395, "index-0"], [396, "index-0"], [398, "index-0"], [400, "index-0"], [402, "index-0"], [404, "index-0"], [406, "index-0"], [407, "index-0"], [409, "index-0"], [411, "index-0"], [413, "index-0"], [414, "index-0"], [415, "index-0"]], "primitive attributes: accumulation mode": [[10, "index-0"]], "primitive attributes: deterministic": [[11, "index-0"]], "primitive attributes: floating-point math mode": [[12, "index-0"]], "primitive attributes: post-ops": [[13, "index-0"]], "primitive attributes: quantization": [[14, "index-0"]], "primitive attributes: scratchpad": [[15, "index-0"]], "basic concepts": [[16, "index-0"], [34, "index-0"], [151, "index-0"]], "batch normalization": [[17, "index-0"], [271, "index-0"]], "benchmarking performance": [[18, "index-0"]], "binary": [[19, "index-0"], [193, "index-13"], [272, "index-0"], [429, "index-1"], [429, "index-2"], [429, "index-3"]], "build from source": [[20, "index-0"]], "build options": [[21, "index-0"]], "api": [[22, "index-0"]], "concat": [[23, "index-0"], [62, "index-0"], [193, "index-4"], [275, "index-0"], [433, "index-1"], [433, "index-2"], [433, "index-3"]], "constant tensor cache": [[24, "index-0"], [314, "index-0"]], "naming conventions": [[25, "index-0"]], "convolution": [[26, "index-0"], [63, "index-0"], [193, "index-6"], [276, "index-0"]], "cpu dispatcher control": [[27, "index-0"]], "cpu isa hints": [[28, "index-0"]], "data types": [[29, "index-0"], [277, "index-0"]], "dpc++ interoperability": [[30, "index-0"]], "eltwise": [[31, "index-0"], [193, "index-8"], [279, "index-0"]], "examples": [[32, "index-0"]], "experimental features": [[33, "index-0"]], "graph compiler": [[35, "index-0"]], "graph dump": [[36, "index-0"]], "supported fusion patterns": [[37, "index-0"]], "low precision": [[38, "index-0"]], "group normalization": [[39, "index-0"], [282, "index-0"]], "inference": [[40, "index-0"]], "inference and training aspects": [[41, "index-0"]], "int8 inference": [[42, "index-0"]], "inner product": [[43, "index-0"], [283, "index-0"]], "inspecting jit code": [[44, "index-0"]], "nuances of int8 computations": [[45, "index-0"]], "layer normalization": [[46, "index-0"], [285, "index-0"]], "linking to the library": [[47, "index-0"]], "local response normalization (lrn)": [[48, "index-0"]], "matrix multiplication": [[49, "index-0"], [287, "index-0"]], "abs": [[50, "index-0"]], "absbackward": [[51, "index-0"]], "add": [[52, "index-0"]], "avgpool": [[53, "index-0"]], "avgpoolbackward": [[54, "index-0"]], "batchnormforwardtraining": [[55, "index-0"]], "batchnorminference": [[56, "index-0"]], "batchnormtrainingbackward": [[57, "index-0"]], "biasadd": [[58, "index-0"]], "biasaddbackward": [[59, "index-0"]], "clamp": [[60, "index-0"]], "clampbackward": [[61, "index-0"]], "convolutionbackwarddata": [[64, "index-0"]], "convolutionbackwardweights": [[65, "index-0"]], "convtranspose": [[66, "index-0"]], "convtransposebackwarddata": [[67, "index-0"]], "convtransposebackwardweights": [[68, "index-0"]], "dequantize": [[69, "index-0"]], "divide": [[70, "index-0"]], "dynamicdequantize": [[71, "index-0"]], "dynamicquantize": [[72, "index-0"]], "elu": [[73, "index-0"]], "elubackward": [[74, "index-0"]], "end": [[75, "index-0"], [177, "index-43"]], "exp": [[76, "index-0"]], "gelu": [[77, "index-0"]], "gelubackward": [[78, "index-0"]], "hardsigmoid": [[79, "index-0"]], "hardsigmoidbackward": [[80, "index-0"]], "hardswish": [[81, "index-0"]], "hardswishbackward": [[82, "index-0"]], "interpolate": [[83, "index-0"]], "interpolatebackward": [[84, "index-0"]], "layernorm": [[85, "index-0"]], "layernormbackward": [[86, "index-0"]], "leakyrelu": [[87, "index-0"]], "log": [[88, "index-0"]], "logsoftmax": [[89, "index-0"]], "logsoftmaxbackward": [[90, "index-0"]], "matmul": [[91, "index-0"], [193, "index-14"], [493, "index-1"], [493, "index-2"], [493, "index-3"]], "maximum": [[92, "index-0"]], "maxpool": [[93, "index-0"]], "maxpoolbackward": [[94, "index-0"]], "minimum": [[95, "index-0"]], "mish": [[96, "index-0"]], "mishbackward": [[97, "index-0"]], "multiply": [[98, "index-0"]], "pow": [[99, "index-0"]], "prelu": [[100, "index-0"], [137, "index-0"], [193, "index-18"], [291, "index-0"]], "prelubackward": [[101, "index-0"]], "quantize": [[102, "index-0"]], "reciprocal": [[103, "index-0"]], "reducel1": [[104, "index-0"]], "reducel2": [[105, "index-0"]], "reducemax": [[106, "index-0"]], "reducemean": [[107, "index-0"]], "reducemin": [[108, "index-0"]], "reduceprod": [[109, "index-0"]], "reducesum": [[110, "index-0"]], "relu": [[111, "index-0"]], "relubackward": [[112, "index-0"]], "reorder": [[113, "index-0"], [141, "index-0"], [193, "index-2"], [297, "index-0"], [518, "index-1"], [518, "index-2"], [518, "index-3"], [518, "index-4"]], "round": [[114, "index-0"]], "select": [[115, "index-0"]], "sigmoid": [[116, "index-0"]], "sigmoidbackward": [[117, "index-0"]], "softmax": [[118, "index-0"], [145, "index-0"], [193, "index-19"], [302, "index-0"]], "softmaxbackward": [[119, "index-0"]], "softplus": [[120, "index-0"]], "softplusbackward": [[121, "index-0"]], "sqrt": [[122, "index-0"]], "sqrtbackward": [[123, "index-0"]], "square": [[124, "index-0"]], "squareddifference": [[125, "index-0"]], "staticreshape": [[126, "index-0"]], "statictranspose": [[127, "index-0"]], "subtract": [[128, "index-0"]], "tanh": [[129, "index-0"]], "tanhbackward": [[130, "index-0"]], "typecast": [[131, "index-0"]], "wildcard": [[132, "index-0"]], "opencl interoperability": [[133, "index-0"]], "configuring onednn for benchmarking": [[134, "index-0"]], "persistent cache": [[135, "index-0"]], "pooling": [[136, "index-0"], [193, "index-16"], [290, "index-0"]], "primitive cache": [[138, "index-0"], [292, "index-0"]], "profiling onednn performance": [[139, "index-0"]], "reduction": [[140, "index-0"], [193, "index-17"], [296, "index-0"], [516, "index-1"], [516, "index-2"], [516, "index-3"]], "resampling": [[142, "index-0"], [193, "index-15"], [298, "index-0"]], "rnn": [[143, "index-0"], [193, "index-12"], [299, "index-0"]], "shuffle": [[144, "index-0"], [193, "index-3"], [301, "index-0"]], "sum": [[146, "index-0"], [193, "index-5"], [304, "index-0"], [535, "index-1"], [535, "index-2"], [535, "index-3"]], "using onednn with threadpool-based threading": [[147, "index-0"]], "training": [[148, "index-0"]], "bfloat16 training": [[149, "index-0"]], "transitioning from intel mkl-dnn to onednn": [[150, "index-0"]], "batch-reduce general matrix multiplication": [[152, "index-0"]], "data transformation": [[153, "index-0"]], "understanding memory formats": [[154, "index-0"]], "verbose mode": [[155, "index-0"]], "verbose message catalogue": [[156, "index-0"]], "profiling with vtune(tm) profiler": [[157, "index-0"]], "accumulation_mode": [[158, "index-0"]], "any": [[158, "index-3"], [167, "index-1"], [171, "index-5"], [175, "index-2"], [186, "index-2"], [187, "index-2"]], "enum": [[158, "index-0"], [159, "index-0"], [160, "index-0"], [161, "index-0"], [162, "index-0"], [163, "index-0"], [164, "index-0"], [165, "index-0"], [166, "index-0"], [167, "index-0"], [168, "index-0"], [169, "index-0"], [170, "index-0"], [171, "index-0"], [172, "index-0"], [173, "index-0"], [174, "index-0"], [175, "index-0"], [176, "index-0"], [177, "index-0"], [178, "index-0"], [179, "index-0"], [180, "index-0"], [181, "index-0"], [182, "index-0"], [183, "index-0"], [184, "index-0"], [185, "index-0"], [186, "index-0"], [187, "index-0"], [188, "index-0"], [189, "index-0"], [190, "index-0"], [191, "index-0"], [192, "index-0"], [193, "index-0"], [194, "index-0"], [195, "index-0"], [196, "index-0"], [197, "index-0"], [198, "index-0"], [199, "index-0"], [200, "index-0"], [201, "index-0"], [202, "index-0"], [203, "index-0"], [204, "index-0"], [205, "index-0"], [206, "index-0"], [207, "index-0"], [208, "index-0"], [209, "index-0"], [210, "index-0"], [211, "index-0"], [212, "index-0"], [213, "index-0"]], "enumvalue": [[158, "index-1"], [158, "index-2"], [158, "index-3"], [158, "index-4"], [158, "index-5"], [158, "index-6"], [159, "index-1"], [159, "index-2"], [159, "index-3"], [159, "index-4"], [159, "index-5"], [159, "index-6"], [160, "index-1"], [160, "index-10"], [160, "index-11"], [160, "index-12"], [160, "index-13"], [160, "index-14"], [160, "index-15"], [160, "index-16"], [160, "index-17"], [160, "index-18"], [160, "index-19"], [160, "index-2"], [160, "index-20"], [160, "index-21"], [160, "index-22"], [160, "index-23"], [160, "index-24"], [160, "index-25"], [160, "index-26"], [160, "index-27"], [160, "index-28"], [160, "index-29"], [160, "index-3"], [160, "index-30"], [160, "index-31"], [160, "index-32"], [160, "index-33"], [160, "index-34"], [160, "index-35"], [160, "index-36"], [160, "index-37"], [160, "index-38"], [160, "index-39"], [160, "index-4"], [160, "index-40"], [160, "index-41"], [160, "index-42"], [160, "index-43"], [160, "index-44"], [160, "index-45"], [160, "index-46"], [160, "index-47"], [160, "index-48"], [160, "index-49"], [160, "index-5"], [160, "index-50"], [160, "index-51"], [160, "index-52"], [160, "index-53"], [160, "index-54"], [160, "index-55"], [160, "index-56"], [160, "index-57"], [160, "index-58"], [160, "index-59"], [160, "index-6"], [160, "index-60"], [160, "index-61"], [160, "index-62"], [160, "index-63"], [160, "index-64"], [160, "index-65"], [160, "index-66"], [160, "index-67"], [160, "index-68"], [160, "index-69"], [160, "index-7"], [160, "index-8"], [160, "index-9"], [161, "index-1"], [161, "index-10"], [161, "index-11"], [161, "index-12"], [161, "index-13"], [161, "index-14"], [161, "index-15"], [161, "index-16"], [161, "index-17"], [161, "index-18"], [161, "index-19"], [161, "index-2"], [161, "index-20"], [161, "index-21"], [161, "index-22"], [161, "index-23"], [161, "index-24"], [161, "index-25"], [161, "index-26"], [161, "index-27"], [161, "index-28"], [161, "index-29"], [161, "index-3"], [161, "index-30"], [161, "index-31"], [161, "index-32"], [161, "index-33"], [161, "index-34"], [161, "index-35"], [161, "index-36"], [161, "index-37"], [161, "index-38"], [161, "index-39"], [161, "index-4"], [161, "index-40"], [161, "index-41"], [161, "index-42"], [161, "index-43"], [161, "index-44"], [161, "index-45"], [161, "index-46"], [161, "index-47"], [161, "index-48"], [161, "index-49"], [161, "index-5"], [161, "index-50"], [161, "index-51"], [161, "index-52"], [161, "index-53"], [161, "index-54"], [161, "index-55"], [161, "index-56"], [161, "index-57"], [161, "index-58"], [161, "index-59"], [161, "index-6"], [161, "index-60"], [161, "index-61"], [161, "index-62"], [161, "index-63"], [161, "index-64"], [161, "index-65"], [161, "index-66"], [161, "index-67"], [161, "index-68"], [161, "index-69"], [161, "index-7"], [161, "index-70"], [161, "index-8"], [161, "index-9"], [162, "index-1"], [162, "index-10"], [162, "index-11"], [162, "index-12"], [162, "index-13"], [162, "index-14"], [162, "index-15"], [162, "index-2"], [162, "index-3"], [162, "index-4"], [162, "index-5"], [162, "index-6"], [162, "index-7"], [162, "index-8"], [162, "index-9"], [163, "index-1"], [163, "index-2"], [164, "index-1"], [164, "index-2"], [165, "index-1"], [165, "index-10"], [165, "index-11"], [165, "index-12"], [165, "index-13"], [165, "index-14"], [165, "index-15"], [165, "index-2"], [165, "index-3"], [165, "index-4"], [165, "index-5"], [165, "index-6"], [165, "index-7"], [165, "index-8"], [165, "index-9"], [166, "index-1"], [166, "index-10"], [166, "index-11"], [166, "index-12"], [166, "index-13"], [166, "index-14"], [166, "index-2"], [166, "index-3"], [166, "index-4"], [166, "index-5"], [166, "index-6"], [166, "index-7"], [166, "index-8"], [166, "index-9"], [167, "index-1"], [167, "index-2"], [167, "index-3"], [168, "index-1"], [168, "index-2"], [168, "index-3"], [169, "index-1"], [169, "index-2"], [169, "index-3"], [169, "index-4"], [169, "index-5"], [169, "index-6"], [170, "index-1"], [170, "index-10"], [170, "index-100"], [170, "index-101"], [170, "index-102"], [170, "index-103"], [170, "index-104"], [170, "index-105"], [170, "index-106"], [170, "index-107"], [170, "index-108"], [170, "index-109"], [170, "index-11"], [170, "index-110"], [170, "index-111"], [170, "index-112"], [170, "index-113"], [170, "index-114"], [170, "index-115"], [170, "index-116"], [170, "index-117"], [170, "index-118"], [170, "index-119"], [170, "index-12"], [170, "index-120"], [170, "index-121"], [170, "index-122"], [170, "index-123"], [170, "index-124"], [170, "index-125"], [170, "index-126"], [170, "index-127"], [170, "index-128"], [170, "index-129"], [170, "index-13"], [170, "index-130"], [170, "index-131"], [170, "index-132"], [170, "index-133"], [170, "index-134"], [170, "index-135"], [170, "index-136"], [170, "index-137"], [170, "index-138"], [170, "index-14"], [170, "index-15"], [170, "index-16"], [170, "index-17"], [170, "index-18"], [170, "index-19"], [170, "index-2"], [170, "index-20"], [170, "index-21"], [170, "index-22"], [170, "index-23"], [170, "index-24"], [170, "index-25"], [170, "index-26"], [170, "index-27"], [170, "index-28"], [170, "index-29"], [170, "index-3"], [170, "index-30"], [170, "index-31"], [170, "index-32"], [170, "index-33"], [170, "index-34"], [170, "index-35"], [170, "index-36"], [170, "index-37"], [170, "index-38"], [170, "index-39"], [170, "index-4"], [170, "index-40"], [170, "index-41"], [170, "index-42"], [170, "index-43"], [170, "index-44"], [170, "index-45"], [170, "index-46"], [170, "index-47"], [170, "index-48"], [170, "index-49"], [170, "index-5"], [170, "index-50"], [170, "index-51"], [170, "index-52"], [170, "index-53"], [170, "index-54"], [170, "index-55"], [170, "index-56"], [170, "index-57"], [170, "index-58"], [170, "index-59"], [170, "index-6"], [170, "index-60"], [170, "index-61"], [170, "index-62"], [170, "index-63"], [170, "index-64"], [170, "index-65"], [170, "index-66"], [170, "index-67"], [170, "index-68"], [170, "index-69"], [170, "index-7"], [170, "index-70"], [170, "index-71"], [170, "index-72"], [170, "index-73"], [170, "index-74"], [170, "index-75"], [170, "index-76"], [170, "index-77"], [170, "index-78"], [170, "index-79"], [170, "index-8"], [170, "index-80"], [170, "index-81"], [170, "index-82"], [170, "index-83"], [170, "index-84"], [170, "index-85"], [170, "index-86"], [170, "index-87"], [170, "index-88"], [170, "index-89"], [170, "index-9"], [170, "index-90"], [170, "index-91"], [170, "index-92"], [170, "index-93"], [170, "index-94"], [170, "index-95"], [170, "index-96"], [170, "index-97"], [170, "index-98"], [170, "index-99"], [171, "index-1"], [171, "index-2"], [171, "index-3"], [171, "index-4"], [171, "index-5"], [172, "index-1"], [172, "index-2"], [172, "index-3"], [172, "index-4"], [172, "index-5"], [173, "index-1"], [173, "index-2"], [173, "index-3"], [173, "index-4"], [174, "index-1"], [174, "index-2"], [174, "index-3"], [174, "index-4"], [174, "index-5"], [174, "index-6"], [174, "index-7"], [174, "index-8"], [174, "index-9"], [175, "index-1"], [175, "index-2"], [175, "index-3"], [175, "index-4"], [176, "index-1"], [176, "index-2"], [176, "index-3"], [177, "index-1"], [177, "index-10"], [177, "index-11"], [177, "index-12"], [177, "index-13"], [177, "index-14"], [177, "index-15"], [177, "index-16"], [177, "index-17"], [177, "index-18"], [177, "index-19"], [177, "index-2"], [177, "index-20"], [177, "index-21"], [177, "index-22"], [177, "index-23"], [177, "index-24"], [177, "index-25"], [177, "index-26"], [177, "index-27"], [177, "index-28"], [177, "index-29"], [177, "index-3"], [177, "index-30"], [177, "index-31"], [177, "index-32"], [177, "index-33"], [177, "index-34"], [177, "index-35"], [177, "index-36"], [177, "index-37"], [177, "index-38"], [177, "index-39"], [177, "index-4"], [177, "index-40"], [177, "index-41"], [177, "index-42"], [177, "index-43"], [177, "index-5"], [177, "index-6"], [177, "index-7"], [177, "index-8"], [177, "index-9"], [178, "index-1"], [178, "index-10"], [178, "index-11"], [178, "index-12"], [178, "index-13"], [178, "index-14"], [178, "index-15"], [178, "index-16"], [178, "index-17"], [178, "index-18"], [178, "index-19"], [178, "index-2"], [178, "index-20"], [178, "index-21"], [178, "index-22"], [178, "index-23"], [178, "index-24"], [178, "index-25"], [178, "index-26"], [178, "index-27"], [178, "index-28"], [178, "index-29"], [178, "index-3"], [178, "index-30"], [178, "index-31"], [178, "index-32"], [178, "index-33"], [178, "index-34"], [178, "index-35"], [178, "index-36"], [178, "index-37"], [178, "index-38"], [178, "index-39"], [178, "index-4"], [178, "index-40"], [178, "index-41"], [178, "index-42"], [178, "index-43"], [178, "index-5"], [178, "index-6"], [178, "index-7"], [178, "index-8"], [178, "index-9"], [181, "index-1"], [181, "index-2"], [182, "index-1"], [182, "index-2"], [183, "index-1"], [183, "index-10"], [183, "index-11"], [183, "index-2"], [183, "index-3"], [183, "index-4"], [183, "index-5"], [183, "index-6"], [183, "index-7"], [183, "index-8"], [183, "index-9"], [184, "index-1"], [184, "index-2"], [184, "index-3"], [185, "index-1"], [185, "index-10"], [185, "index-11"], [185, "index-2"], [185, "index-3"], [185, "index-4"], [185, "index-5"], [185, "index-6"], [185, "index-7"], [185, "index-8"], [185, "index-9"], [186, "index-1"], [186, "index-2"], [186, "index-3"], [186, "index-4"], [186, "index-5"], [187, "index-1"], [187, "index-10"], [187, "index-11"], [187, "index-12"], [187, "index-13"], [187, "index-14"], [187, "index-15"], [187, "index-16"], [187, "index-17"], [187, "index-18"], [187, "index-19"], [187, "index-2"], [187, "index-20"], [187, "index-21"], [187, "index-22"], [187, "index-23"], [187, "index-24"], [187, "index-25"], [187, "index-26"], [187, "index-27"], [187, "index-28"], [187, "index-29"], [187, "index-3"], [187, "index-30"], [187, "index-31"], [187, "index-32"], [187, "index-33"], [187, "index-34"], [187, "index-35"], [187, "index-36"], [187, "index-37"], [187, "index-38"], [187, "index-39"], [187, "index-4"], [187, "index-40"], [187, "index-41"], [187, "index-42"], [187, "index-43"], [187, "index-44"], [187, "index-45"], [187, "index-46"], [187, "index-47"], [187, "index-48"], [187, "index-49"], [187, "index-5"], [187, "index-50"], [187, "index-51"], [187, "index-52"], [187, "index-53"], [187, "index-54"], [187, "index-55"], [187, "index-56"], [187, "index-57"], [187, "index-58"], [187, "index-59"], [187, "index-6"], [187, "index-60"], [187, "index-61"], [187, "index-62"], [187, "index-63"], [187, "index-64"], [187, "index-65"], [187, "index-66"], [187, "index-67"], [187, "index-68"], [187, "index-69"], [187, "index-7"], [187, "index-70"], [187, "index-71"], [187, "index-72"], [187, "index-73"], [187, "index-74"], [187, "index-75"], [187, "index-76"], [187, "index-77"], [187, "index-78"], [187, "index-79"], [187, "index-8"], [187, "index-80"], [187, "index-81"], [187, "index-82"], [187, "index-83"], [187, "index-84"], [187, "index-85"], [187, "index-86"], [187, "index-87"], [187, "index-88"], [187, "index-89"], [187, "index-9"], [187, "index-90"], [187, "index-91"], [187, "index-92"], [187, "index-93"], [187, "index-94"], [187, "index-95"], [188, "index-1"], [188, "index-2"], [188, "index-3"], [189, "index-1"], [189, "index-2"], [189, "index-3"], [189, "index-4"], [189, "index-5"], [189, "index-6"], [190, "index-1"], [190, "index-2"], [190, "index-3"], [190, "index-4"], [190, "index-5"], [190, "index-6"], [191, "index-1"], [191, "index-2"], [192, "index-1"], [192, "index-2"], [193, "index-1"], [193, "index-10"], [193, "index-11"], [193, "index-12"], [193, "index-13"], [193, "index-14"], [193, "index-15"], [193, "index-16"], [193, "index-17"], [193, "index-18"], [193, "index-19"], [193, "index-2"], [193, "index-20"], [193, "index-21"], [193, "index-3"], [193, "index-4"], [193, "index-5"], [193, "index-6"], [193, "index-7"], [193, "index-8"], [193, "index-9"], [194, "index-1"], [194, "index-10"], [194, "index-11"], [194, "index-12"], [194, "index-13"], [194, "index-14"], [194, "index-15"], [194, "index-16"], [194, "index-17"], [194, "index-18"], [194, "index-19"], [194, "index-2"], [194, "index-20"], [194, "index-21"], [194, "index-22"], [194, "index-23"], [194, "index-3"], [194, "index-4"], [194, "index-5"], [194, "index-6"], [194, "index-7"], [194, "index-8"], [194, "index-9"], [195, "index-1"], [195, "index-2"], [196, "index-1"], [196, "index-2"], [197, "index-1"], [197, "index-2"], [197, "index-3"], [197, "index-4"], [197, "index-5"], [197, "index-6"], [197, "index-7"], [197, "index-8"], [198, "index-1"], [198, "index-2"], [198, "index-3"], [198, "index-4"], [198, "index-5"], [198, "index-6"], [198, "index-7"], [198, "index-8"], [199, "index-1"], [199, "index-10"], [199, "index-11"], [199, "index-12"], [199, "index-13"], [199, "index-14"], [199, "index-15"], [199, "index-16"], [199, "index-17"], [199, "index-18"], [199, "index-19"], [199, "index-2"], [199, "index-20"], [199, "index-21"], [199, "index-22"], [199, "index-23"], [199, "index-24"], [199, "index-25"], [199, "index-26"], [199, "index-27"], [199, "index-28"], [199, "index-29"], [199, "index-3"], [199, "index-30"], [199, "index-31"], [199, "index-32"], [199, "index-33"], [199, "index-34"], [199, "index-35"], [199, "index-36"], [199, "index-37"], [199, "index-38"], [199, "index-39"], [199, "index-4"], [199, "index-40"], [199, "index-41"], [199, "index-42"], [199, "index-43"], [199, "index-44"], [199, "index-45"], [199, "index-46"], [199, "index-47"], [199, "index-48"], [199, "index-49"], [199, "index-5"], [199, "index-50"], [199, "index-51"], [199, "index-52"], [199, "index-53"], [199, "index-54"], [199, "index-55"], [199, "index-6"], [199, "index-7"], [199, "index-8"], [199, "index-9"], [200, "index-1"], [200, "index-10"], [200, "index-11"], [200, "index-12"], [200, "index-13"], [200, "index-14"], [200, "index-15"], [200, "index-16"], [200, "index-17"], [200, "index-18"], [200, "index-19"], [200, "index-2"], [200, "index-20"], [200, "index-21"], [200, "index-22"], [200, "index-23"], [200, "index-24"], [200, "index-25"], [200, "index-26"], [200, "index-27"], [200, "index-28"], [200, "index-29"], [200, "index-3"], [200, "index-30"], [200, "index-31"], [200, "index-32"], [200, "index-33"], [200, "index-34"], [200, "index-35"], [200, "index-36"], [200, "index-37"], [200, "index-38"], [200, "index-39"], [200, "index-4"], [200, "index-40"], [200, "index-41"], [200, "index-42"], [200, "index-43"], [200, "index-44"], [200, "index-45"], [200, "index-46"], [200, "index-47"], [200, "index-48"], [200, "index-49"], [200, "index-5"], [200, "index-50"], [200, "index-51"], [200, "index-52"], [200, "index-53"], [200, "index-54"], [200, "index-55"], [200, "index-56"], [200, "index-57"], [200, "index-6"], [200, "index-7"], [200, "index-8"], [200, "index-9"], [201, "index-1"], [201, "index-2"], [201, "index-3"], [201, "index-4"], [201, "index-5"], [202, "index-1"], [202, "index-2"], [202, "index-3"], [202, "index-4"], [202, "index-5"], [203, "index-1"], [203, "index-2"], [204, "index-1"], [204, "index-2"], [205, "index-1"], [205, "index-2"], [206, "index-1"], [206, "index-2"], [207, "index-1"], [207, "index-2"], [207, "index-3"], [208, "index-1"], [208, "index-2"], [208, "index-3"], [208, "index-4"], [208, "index-5"], [208, "index-6"], [208, "index-7"], [209, "index-1"], [209, "index-10"], [209, "index-11"], [209, "index-2"], [209, "index-3"], [209, "index-4"], [209, "index-5"], [209, "index-6"], [209, "index-7"], [209, "index-8"], [209, "index-9"], [210, "index-1"], [210, "index-2"], [210, "index-3"], [211, "index-1"], [211, "index-2"], [212, "index-1"], [212, "index-2"], [213, "index-1"], [213, "index-2"]], "f16": [[158, "index-6"], [171, "index-3"], [174, "index-1"], [185, "index-4"]], "f32": [[158, "index-5"], [174, "index-3"], [185, "index-6"]], "relaxed": [[158, "index-2"]], "s32": [[158, "index-4"], [174, "index-4"], [185, "index-7"]], "strict": [[158, "index-1"], [171, "index-1"]], "dnnl_accumulation_mode_any": [[159, "index-3"]], "dnnl_accumulation_mode_f16": [[159, "index-6"]], "dnnl_accumulation_mode_f32": [[159, "index-5"]], "dnnl_accumulation_mode_relaxed": [[159, "index-2"]], "dnnl_accumulation_mode_s32": [[159, "index-4"]], "dnnl_accumulation_mode_strict": [[159, "index-1"]], "dnnl_accumulation_mode_t": [[159, "index-0"]], "dnnl_alg_kind_t": [[160, "index-0"]], "dnnl_binary_add": [[160, "index-45"]], "dnnl_binary_div": [[160, "index-49"]], "dnnl_binary_eq": [[160, "index-55"]], "dnnl_binary_ge": [[160, "index-51"]], "dnnl_binary_gt": [[160, "index-52"]], "dnnl_binary_le": [[160, "index-53"]], "dnnl_binary_lt": [[160, "index-54"]], "dnnl_binary_max": [[160, "index-47"]], "dnnl_binary_min": [[160, "index-48"]], "dnnl_binary_mul": [[160, "index-46"]], "dnnl_binary_ne": [[160, "index-56"]], "dnnl_binary_sub": [[160, "index-50"]], "dnnl_convolution_auto": [[160, "index-3"]], "dnnl_convolution_direct": [[160, "index-1"]], "dnnl_convolution_winograd": [[160, "index-2"]], "dnnl_deconvolution_direct": [[160, "index-4"]], "dnnl_deconvolution_winograd": [[160, "index-5"]], "dnnl_eltwise_abs": [[160, "index-10"]], "dnnl_eltwise_clip": [[160, "index-20"]], "dnnl_eltwise_clip_v2": [[160, "index-21"]], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [[160, "index-33"]], "dnnl_eltwise_elu": [[160, "index-8"]], "dnnl_eltwise_elu_use_dst_for_bwd": [[160, "index-29"]], "dnnl_eltwise_exp": [[160, "index-16"]], "dnnl_eltwise_exp_use_dst_for_bwd": [[160, "index-32"]], "dnnl_eltwise_gelu_erf": [[160, "index-23"]], "dnnl_eltwise_gelu_tanh": [[160, "index-17"]], "dnnl_eltwise_hardsigmoid": [[160, "index-14"]], "dnnl_eltwise_hardswish": [[160, "index-26"]], "dnnl_eltwise_linear": [[160, "index-12"]], "dnnl_eltwise_log": [[160, "index-19"]], "dnnl_eltwise_logistic": [[160, "index-15"]], "dnnl_eltwise_logistic_use_dst_for_bwd": [[160, "index-31"]], "dnnl_eltwise_mish": [[160, "index-25"]], "dnnl_eltwise_pow": [[160, "index-22"]], "dnnl_eltwise_relu": [[160, "index-6"]], "dnnl_eltwise_relu_use_dst_for_bwd": [[160, "index-27"]], "dnnl_eltwise_round": [[160, "index-24"]], "dnnl_eltwise_soft_relu": [[160, "index-13"]], "dnnl_eltwise_sqrt": [[160, "index-11"]], "dnnl_eltwise_sqrt_use_dst_for_bwd": [[160, "index-30"]], "dnnl_eltwise_square": [[160, "index-9"]], "dnnl_eltwise_swish": [[160, "index-18"]], "dnnl_eltwise_tanh": [[160, "index-7"]], "dnnl_eltwise_tanh_use_dst_for_bwd": [[160, "index-28"]], "dnnl_lbr_augru": [[160, "index-44"]], "dnnl_lbr_gru": [[160, "index-42"]], "dnnl_lrn_across_channels": [[160, "index-37"]], "dnnl_lrn_within_channel": [[160, "index-38"]], "dnnl_pooling_avg_exclude_padding": [[160, "index-36"]], "dnnl_pooling_avg_include_padding": [[160, "index-35"]], "dnnl_pooling_max": [[160, "index-34"]], "dnnl_reduction_max": [[160, "index-59"]], "dnnl_reduction_mean": [[160, "index-63"]], "dnnl_reduction_min": [[160, "index-60"]], "dnnl_reduction_mul": [[160, "index-62"]], "dnnl_reduction_norm_lp_max": [[160, "index-64"]], "dnnl_reduction_norm_lp_power_p_max": [[160, "index-66"]], "dnnl_reduction_norm_lp_power_p_sum": [[160, "index-67"]], "dnnl_reduction_norm_lp_sum": [[160, "index-65"]], "dnnl_reduction_sum": [[160, "index-61"]], "dnnl_resampling_linear": [[160, "index-58"]], "dnnl_resampling_nearest": [[160, "index-57"]], "dnnl_softmax_accurate": [[160, "index-68"]], "dnnl_softmax_log": [[160, "index-69"]], "dnnl_vanilla_augru": [[160, "index-43"]], "dnnl_vanilla_gru": [[160, "index-41"]], "dnnl_vanilla_lstm": [[160, "index-40"]], "dnnl_vanilla_rnn": [[160, "index-39"]], "algorithm": [[161, "index-0"]], "binary_add": [[161, "index-46"]], "binary_div": [[161, "index-50"]], "binary_eq": [[161, "index-56"]], "binary_ge": [[161, "index-52"]], "binary_gt": [[161, "index-53"]], "binary_le": [[161, "index-54"]], "binary_lt": [[161, "index-55"]], "binary_max": [[161, "index-48"]], "binary_min": [[161, "index-49"]], "binary_mul": [[161, "index-47"]], "binary_ne": [[161, "index-57"]], "binary_sub": [[161, "index-51"]], "convolution_auto": [[161, "index-2"]], "convolution_direct": [[161, "index-3"]], "convolution_winograd": [[161, "index-4"]], "deconvolution_direct": [[161, "index-5"]], "deconvolution_winograd": [[161, "index-6"]], "eltwise_abs": [[161, "index-11"]], "eltwise_clip": [[161, "index-22"]], "eltwise_clip_v2": [[161, "index-23"]], "eltwise_clip_v2_use_dst_for_bwd": [[161, "index-34"]], "eltwise_elu": [[161, "index-9"]], "eltwise_elu_use_dst_for_bwd": [[161, "index-30"]], "eltwise_exp": [[161, "index-18"]], "eltwise_exp_use_dst_for_bwd": [[161, "index-33"]], "eltwise_gelu_erf": [[161, "index-20"]], "eltwise_gelu_tanh": [[161, "index-19"]], "eltwise_hardsigmoid": [[161, "index-27"]], "eltwise_hardswish": [[161, "index-26"]], "eltwise_linear": [[161, "index-14"]], "eltwise_log": [[161, "index-21"]], "eltwise_logistic": [[161, "index-17"]], "eltwise_logistic_use_dst_for_bwd": [[161, "index-32"]], "eltwise_mish": [[161, "index-16"]], "eltwise_pow": [[161, "index-24"]], "eltwise_relu": [[161, "index-7"]], "eltwise_relu_use_dst_for_bwd": [[161, "index-28"]], "eltwise_round": [[161, "index-25"]], "eltwise_soft_relu": [[161, "index-15"]], "eltwise_sqrt": [[161, "index-12"]], "eltwise_sqrt_use_dst_for_bwd": [[161, "index-31"]], "eltwise_square": [[161, "index-10"]], "eltwise_swish": [[161, "index-13"]], "eltwise_tanh": [[161, "index-8"]], "eltwise_tanh_use_dst_for_bwd": [[161, "index-29"]], "lbr_augru": [[161, "index-45"]], "lbr_gru": [[161, "index-43"]], "lrn_across_channels": [[161, "index-35"]], "lrn_within_channel": [[161, "index-36"]], "pooling_avg_exclude_padding": [[161, "index-39"]], "pooling_avg_include_padding": [[161, "index-38"]], "pooling_max": [[161, "index-37"]], "reduction_max": [[161, "index-60"]], "reduction_mean": [[161, "index-64"]], "reduction_min": [[161, "index-61"]], "reduction_mul": [[161, "index-63"]], "reduction_norm_lp_max": [[161, "index-65"]], "reduction_norm_lp_power_p_max": [[161, "index-67"]], "reduction_norm_lp_power_p_sum": [[161, "index-68"]], "reduction_norm_lp_sum": [[161, "index-66"]], "reduction_sum": [[161, "index-62"]], "resampling_linear": [[161, "index-59"]], "resampling_nearest": [[161, "index-58"]], "softmax_accurate": [[161, "index-69"]], "softmax_log": [[161, "index-70"]], "undef": [[161, "index-1"], [175, "index-1"], [176, "index-1"], [177, "index-1"], [185, "index-1"], [186, "index-1"], [187, "index-1"], [188, "index-1"], [193, "index-1"], [195, "index-1"], [197, "index-1"], [199, "index-1"], [201, "index-1"], [203, "index-1"]], "vanilla_augru": [[161, "index-44"]], "vanilla_gru": [[161, "index-42"]], "vanilla_lstm": [[161, "index-41"]], "vanilla_rnn": [[161, "index-40"]], "avx": [[162, "index-3"]], "avx10_1_512": [[162, "index-10"]], "avx10_1_512_amx": [[162, "index-12"]], "avx10_1_512_amx_fp16": [[162, "index-14"]], "avx2": [[162, "index-4"]], "avx2_vnni": [[162, "index-5"]], "avx2_vnni_2": [[162, "index-6"]], "avx512_core": [[162, "index-7"]], "avx512_core_amx": [[162, "index-13"]], "avx512_core_amx_fp16": [[162, "index-15"]], "avx512_core_bf16": [[162, "index-9"]], "avx512_core_fp16": [[162, "index-11"]], "avx512_core_vnni": [[162, "index-8"]], "cpu_isa": [[162, "index-0"]], "isa_default": [[162, "index-1"]], "sse41": [[162, "index-2"]], "cpu_isa_hints": [[163, "index-0"]], "no_hints": [[163, "index-1"]], "prefer_ymm": [[163, "index-2"]], "dnnl_cpu_isa_hints_t": [[164, "index-0"]], "dnnl_cpu_isa_no_hints": [[164, "index-1"]], "dnnl_cpu_isa_prefer_ymm": [[164, "index-2"]], "dnnl_cpu_isa_avx": [[165, "index-3"]], "dnnl_cpu_isa_avx10_1_512": [[165, "index-10"]], "dnnl_cpu_isa_avx10_1_512_amx": [[165, "index-12"]], "dnnl_cpu_isa_avx10_1_512_amx_fp16": [[165, "index-14"]], "dnnl_cpu_isa_avx2": [[165, "index-4"]], "dnnl_cpu_isa_avx2_vnni": [[165, "index-5"]], "dnnl_cpu_isa_avx2_vnni_2": [[165, "index-6"]], "dnnl_cpu_isa_avx512_core": [[165, "index-7"]], "dnnl_cpu_isa_avx512_core_amx": [[165, "index-13"]], "dnnl_cpu_isa_avx512_core_amx_fp16": [[165, "index-15"]], "dnnl_cpu_isa_avx512_core_bf16": [[165, "index-9"]], "dnnl_cpu_isa_avx512_core_fp16": [[165, "index-11"]], "dnnl_cpu_isa_avx512_core_vnni": [[165, "index-8"]], "dnnl_cpu_isa_default": [[165, "index-1"]], "dnnl_cpu_isa_sse41": [[165, "index-2"]], "dnnl_cpu_isa_t": [[165, "index-0"]], "dnnl_bf16": [[166, "index-3"]], "dnnl_boolean": [[166, "index-9"]], "dnnl_data_type_max": [[166, "index-14"]], "dnnl_data_type_t": [[166, "index-0"]], "dnnl_data_type_undef": [[166, "index-1"]], "dnnl_f16": [[166, "index-2"]], "dnnl_f32": [[166, "index-4"]], "dnnl_f64": [[166, "index-8"]], "dnnl_f8_e4m3": [[166, "index-11"]], "dnnl_f8_e5m2": [[166, "index-10"]], "dnnl_s32": [[166, "index-5"]], "dnnl_s4": [[166, "index-12"]], "dnnl_s8": [[166, "index-6"]], "dnnl_u4": [[166, "index-13"]], "dnnl_u8": [[166, "index-7"]], "cpu": [[167, "index-2"]], "gpu": [[167, "index-3"]], "kind": [[167, "index-0"], [179, "index-0"], [193, "index-0"], [504, "index-4"]], "dnnl_any_engine": [[168, "index-1"]], "dnnl_cpu": [[168, "index-2"]], "dnnl_engine_kind_t": [[168, "index-0"]], "dnnl_gpu": [[168, "index-3"]], "dnnl_blocked": [[169, "index-3"]], "dnnl_format_kind_any": [[169, "index-2"]], "dnnl_format_kind_max": [[169, "index-6"]], "dnnl_format_kind_opaque": [[169, "index-4"]], "dnnl_format_kind_sparse": [[169, "index-5"]], "dnnl_format_kind_t": [[169, "index-0"]], "dnnl_format_kind_undef": [[169, "index-1"]], "dnnl_abcd8b8a": [[170, "index-61"]], "dnnl_abcde2b8a4b": [[170, "index-64"]], "dnnl_abcde4b16a4b": [[170, "index-63"]], "dnnl_a": [[170, "index-3"]], "dnnl_abcd2b4c2b": [[170, "index-62"]], "dnnl_abcde2b4c2b": [[170, "index-69"]], "dnnl_abcdef2b4c2b": [[170, "index-72"]], "dnnl_abcdef2c8b4c": [[170, "index-71"]], "dnnl_abc16b": [[170, "index-53"]], "dnnl_abc32b": [[170, "index-54"]], "dnnl_abc4b": [[170, "index-55"]], "dnnl_abc8b": [[170, "index-56"]], "dnnl_abcd16b": [[170, "index-57"]], "dnnl_abcd32b": [[170, "index-58"]], "dnnl_abcd4b": [[170, "index-59"]], "dnnl_abcd8b": [[170, "index-60"]], "dnnl_abcde16b": [[170, "index-65"]], "dnnl_abcde32b": [[170, "index-66"]], "dnnl_abcde4b": [[170, "index-67"]], "dnnl_abcde8b": [[170, "index-68"]], "dnnl_abcdef16b": [[170, "index-70"]], "dnnl_abcdef4b": [[170, "index-73"]], "dnnl_ab": [[170, "index-4"]], "dnnl_abc": [[170, "index-5"]], "dnnl_abcd": [[170, "index-6"]], "dnnl_abcde": [[170, "index-7"]], "dnnl_abcdef": [[170, "index-8"]], "dnnl_abcdefg": [[170, "index-9"]], "dnnl_abcdefgh": [[170, "index-10"]], "dnnl_abcdefghi": [[170, "index-11"]], "dnnl_abcdefghij": [[170, "index-12"]], "dnnl_abcdefghijk": [[170, "index-13"]], "dnnl_abcdefghijkl": [[170, "index-14"]], "dnnl_abcdefghijlk": [[170, "index-52"]], "dnnl_abcdefghikj": [[170, "index-51"]], "dnnl_abcdefghji": [[170, "index-50"]], "dnnl_abcdefgih": [[170, "index-49"]], "dnnl_abcdefhg": [[170, "index-48"]], "dnnl_abcdegf": [[170, "index-47"]], "dnnl_abcdfe": [[170, "index-41"]], "dnnl_abced": [[170, "index-31"]], "dnnl_abdc": [[170, "index-21"]], "dnnl_abdec": [[170, "index-32"]], "dnnl_abdefc": [[170, "index-42"]], "dnnl_abdfce": [[170, "index-43"]], "dnnl_acb": [[170, "index-16"]], "dnnl_acbd": [[170, "index-22"]], "dnnl_acbde": [[170, "index-33"]], "dnnl_acbdef": [[170, "index-44"]], "dnnl_acdb": [[170, "index-23"]], "dnnl_acdeb": [[170, "index-34"]], "dnnl_adbc": [[170, "index-24"]], "dnnl_adcb": [[170, "index-25"]], "dnnl_adecb": [[170, "index-35"]], "dnnl_adefcb": [[170, "index-45"]], "dnnl_ba": [[170, "index-15"]], "dnnl_bac": [[170, "index-17"]], "dnnl_bacd": [[170, "index-26"]], "dnnl_bacde": [[170, "index-36"]], "dnnl_bca": [[170, "index-18"]], "dnnl_bcda": [[170, "index-27"]], "dnnl_bcdea": [[170, "index-37"]], "dnnl_cab": [[170, "index-19"]], "dnnl_cba": [[170, "index-20"]], "dnnl_cdab": [[170, "index-28"]], "dnnl_cdba": [[170, "index-29"]], "dnnl_cdeab": [[170, "index-38"]], "dnnl_cdeba": [[170, "index-39"]], "dnnl_chwn": [[170, "index-84"]], "dnnl_cn": [[170, "index-77"]], "dnnl_dcab": [[170, "index-30"]], "dnnl_decab": [[170, "index-40"]], "dnnl_defcab": [[170, "index-46"]], "dnnl_dhwigo": [[170, "index-116"]], "dnnl_dhwio": [[170, "index-102"]], "dnnl_dhwoi": [[170, "index-103"]], "dnnl_format_tag_any": [[170, "index-2"]], "dnnl_format_tag_last": [[170, "index-74"]], "dnnl_format_tag_t": [[170, "index-0"]], "dnnl_format_tag_undef": [[170, "index-1"]], "dnnl_giodhw": [[170, "index-115"]], "dnnl_giohw": [[170, "index-112"]], "dnnl_godhwi": [[170, "index-114"]], "dnnl_gohwi": [[170, "index-110"]], "dnnl_goidhw": [[170, "index-113"]], "dnnl_goihw": [[170, "index-109"]], "dnnl_goiw": [[170, "index-106"]], "dnnl_gowi": [[170, "index-107"]], "dnnl_hwigo": [[170, "index-111"]], "dnnl_hwio": [[170, "index-95"]], "dnnl_hwoi": [[170, "index-96"]], "dnnl_idhwo": [[170, "index-105"]], "dnnl_ihwo": [[170, "index-98"]], "dnnl_io": [[170, "index-88"]], "dnnl_iodhw": [[170, "index-101"]], "dnnl_iohw": [[170, "index-99"]], "dnnl_iwo": [[170, "index-93"]], "dnnl_ldoi16o": [[170, "index-125"]], "dnnl_ldgoi16o": [[170, "index-126"]], "dnnl_ldgo": [[170, "index-124"]], "dnnl_ldgoi": [[170, "index-121"]], "dnnl_ldigo": [[170, "index-120"]], "dnnl_ldio": [[170, "index-122"]], "dnnl_ldnc": [[170, "index-119"]], "dnnl_ldoi": [[170, "index-123"]], "dnnl_ncdhw16c": [[170, "index-128"]], "dnnl_ncdhw32c": [[170, "index-127"]], "dnnl_ncdhw4c": [[170, "index-129"]], "dnnl_ncdhw8c": [[170, "index-130"]], "dnnl_nchw16c": [[170, "index-132"]], "dnnl_nchw32c": [[170, "index-131"]], "dnnl_nchw4c": [[170, "index-133"]], "dnnl_nchw8c": [[170, "index-134"]], "dnnl_ncw16c": [[170, "index-136"]], "dnnl_ncw32c": [[170, "index-135"]], "dnnl_ncw4c": [[170, "index-137"]], "dnnl_ncw8c": [[170, "index-138"]], "dnnl_nc": [[170, "index-76"]], "dnnl_ncdhw": [[170, "index-85"]], "dnnl_nchw": [[170, "index-82"]], "dnnl_ncw": [[170, "index-80"]], "dnnl_ndhwc": [[170, "index-86"]], "dnnl_nhwc": [[170, "index-83"]], "dnnl_nt": [[170, "index-79"]], "dnnl_ntc": [[170, "index-118"]], "dnnl_nwc": [[170, "index-81"]], "dnnl_odhwi": [[170, "index-104"]], "dnnl_ohwi": [[170, "index-97"]], "dnnl_oi": [[170, "index-87"]], "dnnl_oidhw": [[170, "index-100"]], "dnnl_oihw": [[170, "index-94"]], "dnnl_oiw": [[170, "index-89"]], "dnnl_owi": [[170, "index-90"]], "dnnl_tn": [[170, "index-78"]], "dnnl_tnc": [[170, "index-117"]], "dnnl_wigo": [[170, "index-108"]], "dnnl_wio": [[170, "index-91"]], "dnnl_woi": [[170, "index-92"]], "dnnl_x": [[170, "index-75"]], "bf16": [[171, "index-2"], [174, "index-2"], [185, "index-5"]], "fpmath_mode": [[171, "index-0"]], "tf32": [[171, "index-4"]], "dnnl_fpmath_mode_any": [[172, "index-4"]], "dnnl_fpmath_mode_bf16": [[172, "index-2"]], "dnnl_fpmath_mode_f16": [[172, "index-3"]], "dnnl_fpmath_mode_strict": [[172, "index-1"]], "dnnl_fpmath_mode_t": [[172, "index-0"]], "dnnl_fpmath_mode_tf32": [[172, "index-5"]], "dnnl_graph_layout_type_any": [[173, "index-2"]], "dnnl_graph_layout_type_opaque": [[173, "index-4"]], "dnnl_graph_layout_type_strided": [[173, "index-3"]], "dnnl_graph_layout_type_t": [[173, "index-0"]], "dnnl_graph_layout_type_undef": [[173, "index-1"]], "boolean": [[174, "index-7"]], "data_type": [[174, "index-0"], [185, "index-0"], [199, "index-45"], [456, "index-4"]], "f8_e4m3": [[174, "index-9"], [185, "index-3"]], "f8_e5m2": [[174, "index-8"], [185, "index-2"]], "s8": [[174, "index-5"], [185, "index-8"]], "u8": [[174, "index-6"], [185, "index-9"]], "layout_type": [[175, "index-0"], [456, "index-6"]], "opaque": [[175, "index-4"], [186, "index-5"]], "strided": [[175, "index-3"]], "constant": [[176, "index-3"]], "property_type": [[176, "index-0"]], "variable": [[176, "index-2"], [454, "index-1"], [454, "index-2"], [455, "index-1"], [455, "index-2"], [456, "index-1"], [456, "index-2"], [456, "index-3"], [456, "index-4"], [456, "index-5"], [456, "index-6"], [456, "index-7"], [456, "index-8"], [537, "index-1"], [544, "index-1"], [544, "index-2"], [544, "index-3"], [544, "index-4"], [544, "index-5"], [544, "index-6"]], "alpha": [[177, "index-2"]], "attr": [[177, "index-0"]], "auto_broadcast": [[177, "index-35"]], "auto_pad": [[177, "index-36"]], "axes": [[177, "index-12"]], "axis": [[177, "index-9"]], "begin_norm_axis": [[177, "index-10"]], "beta": [[177, "index-3"]], "coordinate_transformation_mode": [[177, "index-37"]], "data_format": [[177, "index-38"]], "dilations": [[177, "index-13"], [199, "index-16"]], "dst_shape": [[177, "index-14"]], "epsilon": [[177, "index-4"]], "exclude_pad": [[177, "index-26"]], "groups": [[177, "index-11"]], "keep_dims": [[177, "index-27"]], "keep_stats": [[177, "index-28"]], "kernel": [[177, "index-15"], [199, "index-32"]], "max": [[177, "index-5"]], "min": [[177, "index-6"]], "mode": [[177, "index-39"]], "momentum": [[177, "index-7"]], "order": [[177, "index-16"]], "output_padding": [[177, "index-17"]], "pads_begin": [[177, "index-18"]], "pads_end": [[177, "index-19"]], "per_channel_broadcast": [[177, "index-29"]], "qtype": [[177, "index-40"]], "rounding_type": [[177, "index-41"]], "scales": [[177, "index-8"]], "shape": [[177, "index-20"]], "sizes": [[177, "index-21"]], "special_zero": [[177, "index-30"]], "src_shape": [[177, "index-22"]], "strides": [[177, "index-23"], [199, "index-15"], [456, "index-7"]], "transpose_a": [[177, "index-31"]], "transpose_b": [[177, "index-32"]], "use_affine": [[177, "index-33"]], "use_dst": [[177, "index-34"]], "weights_format": [[177, "index-42"]], "weights_shape": [[177, "index-24"]], "zps": [[177, "index-25"]], "dnnl_graph_op_attr_alpha": [[178, "index-2"]], "dnnl_graph_op_attr_auto_broadcast": [[178, "index-35"]], "dnnl_graph_op_attr_auto_pad": [[178, "index-36"]], "dnnl_graph_op_attr_axes": [[178, "index-12"]], "dnnl_graph_op_attr_axis": [[178, "index-9"]], "dnnl_graph_op_attr_begin_norm_axis": [[178, "index-10"]], "dnnl_graph_op_attr_beta": [[178, "index-3"]], "dnnl_graph_op_attr_coordinate_transformation_mode": [[178, "index-37"]], "dnnl_graph_op_attr_data_format": [[178, "index-38"]], "dnnl_graph_op_attr_dilations": [[178, "index-13"]], "dnnl_graph_op_attr_dst_shape": [[178, "index-14"]], "dnnl_graph_op_attr_end": [[178, "index-43"]], "dnnl_graph_op_attr_epsilon": [[178, "index-4"]], "dnnl_graph_op_attr_exclude_pad": [[178, "index-26"]], "dnnl_graph_op_attr_groups": [[178, "index-11"]], "dnnl_graph_op_attr_keep_dims": [[178, "index-27"]], "dnnl_graph_op_attr_keep_stats": [[178, "index-28"]], "dnnl_graph_op_attr_kernel": [[178, "index-15"]], "dnnl_graph_op_attr_max": [[178, "index-5"]], "dnnl_graph_op_attr_min": [[178, "index-6"]], "dnnl_graph_op_attr_mode": [[178, "index-39"]], "dnnl_graph_op_attr_momentum": [[178, "index-7"]], "dnnl_graph_op_attr_order": [[178, "index-16"]], "dnnl_graph_op_attr_output_padding": [[178, "index-17"]], "dnnl_graph_op_attr_pads_begin": [[178, "index-18"]], "dnnl_graph_op_attr_pads_end": [[178, "index-19"]], "dnnl_graph_op_attr_per_channel_broadcast": [[178, "index-29"]], "dnnl_graph_op_attr_qtype": [[178, "index-40"]], "dnnl_graph_op_attr_rounding_type": [[178, "index-41"]], "dnnl_graph_op_attr_scales": [[178, "index-8"]], "dnnl_graph_op_attr_shape": [[178, "index-20"]], "dnnl_graph_op_attr_sizes": [[178, "index-21"]], "dnnl_graph_op_attr_special_zero": [[178, "index-30"]], "dnnl_graph_op_attr_src_shape": [[178, "index-22"]], "dnnl_graph_op_attr_strides": [[178, "index-23"]], "dnnl_graph_op_attr_t": [[178, "index-0"]], "dnnl_graph_op_attr_transpose_a": [[178, "index-31"]], "dnnl_graph_op_attr_transpose_b": [[178, "index-32"]], "dnnl_graph_op_attr_undef": [[178, "index-1"]], "dnnl_graph_op_attr_use_affine": [[178, "index-33"]], "dnnl_graph_op_attr_use_dst": [[178, "index-34"]], "dnnl_graph_op_attr_weights_format": [[178, "index-42"]], "dnnl_graph_op_attr_weights_shape": [[178, "index-24"]], "dnnl_graph_op_attr_zps": [[178, "index-25"]], "dnnl_graph_op_kind_t": [[180, "index-0"]], "debug": [[181, "index-2"]], "fusion": [[181, "index-1"]], "policy": [[181, "index-0"]], "dnnl_graph_partition_policy_debug": [[182, "index-2"]], "dnnl_graph_partition_policy_fusion": [[182, "index-1"]], "dnnl_graph_partition_policy_t": [[182, "index-0"]], "invalid_arguments": [[183, "index-3"], [208, "index-3"]], "invalid_data_type": [[183, "index-11"]], "invalid_graph": [[183, "index-8"]], "invalid_graph_op": [[183, "index-9"]], "invalid_shape": [[183, "index-10"]], "last_impl_reached": [[183, "index-5"], [208, "index-5"]], "not_required": [[183, "index-7"], [208, "index-7"]], "out_of_memory": [[183, "index-2"], [208, "index-2"]], "runtime_error": [[183, "index-6"], [208, "index-6"]], "status": [[183, "index-0"], [208, "index-0"], [322, "index-0"]], "success": [[183, "index-1"], [208, "index-1"]], "unimplemented": [[183, "index-4"], [208, "index-4"]], "dnnl_graph_tensor_property_constant": [[184, "index-3"]], "dnnl_graph_tensor_property_t": [[184, "index-0"]], "dnnl_graph_tensor_property_undef": [[184, "index-1"]], "dnnl_graph_tensor_property_variable": [[184, "index-2"]], "s4": [[185, "index-10"]], "u4": [[185, "index-11"]], "blocked": [[186, "index-3"]], "format_kind": [[186, "index-0"], [199, "index-49"]], "sparse": [[186, "index-4"]], "abcd8b8a": [[187, "index-95"]], "a": [[187, "index-3"]], "abcd8b": [[187, "index-94"]], "ab": [[187, "index-4"]], "abc": [[187, "index-6"]], "abcd": [[187, "index-11"]], "abcde": [[187, "index-20"]], "abcdef": [[187, "index-29"]], "abcdefg": [[187, "index-35"]], "abcdefgh": [[187, "index-37"]], "abcdefghi": [[187, "index-39"]], "abcdefghij": [[187, "index-41"]], "abcdefghijk": [[187, "index-43"]], "abcdefghijkl": [[187, "index-45"]], "abcdefghijlk": [[187, "index-46"]], "abcdefghikj": [[187, "index-44"]], "abcdefghji": [[187, "index-42"]], "abcdefgih": [[187, "index-40"]], "abcdefhg": [[187, "index-38"]], "abcdegf": [[187, "index-36"]], "abcdfe": [[187, "index-34"]], "abced": [[187, "index-28"]], "abdc": [[187, "index-12"]], "abdec": [[187, "index-21"]], "abdefc": [[187, "index-32"]], "abdfce": [[187, "index-30"]], "acb": [[187, "index-7"]], "acbd": [[187, "index-13"]], "acbde": [[187, "index-22"]], "acbdef": [[187, "index-31"]], "acdb": [[187, "index-14"]], "acdeb": [[187, "index-23"]], "adbc": [[187, "index-15"]], "ba": [[187, "index-5"]], "bac": [[187, "index-8"]], "bacd": [[187, "index-16"]], "bacde": [[187, "index-24"]], "bca": [[187, "index-9"]], "bcda": [[187, "index-17"]], "bcdea": [[187, "index-25"]], "cba": [[187, "index-10"]], "cdba": [[187, "index-18"]], "cdeba": [[187, "index-26"]], "chwn": [[187, "index-56"]], "cn": [[187, "index-49"]], "dcab": [[187, "index-19"]], "decab": [[187, "index-27"]], "defcab": [[187, "index-33"]], "dhwigo": [[187, "index-85"]], "dhwio": [[187, "index-71"]], "format_tag": [[187, "index-0"]], "giodhw": [[187, "index-83"]], "giohw": [[187, "index-81"]], "godhwi": [[187, "index-84"]], "gohwi": [[187, "index-78"]], "goidhw": [[187, "index-82"]], "goihw": [[187, "index-79"]], "goiw": [[187, "index-75"]], "gowi": [[187, "index-76"]], "hwigo": [[187, "index-80"]], "hwio": [[187, "index-66"]], "idhwo": [[187, "index-74"]], "ihwo": [[187, "index-68"]], "io": [[187, "index-60"]], "iodhw": [[187, "index-73"]], "iohw": [[187, "index-69"]], "iwo": [[187, "index-64"]], "ldgo": [[187, "index-93"]], "ldgoi": [[187, "index-90"]], "ldigo": [[187, "index-89"]], "ldio": [[187, "index-91"]], "ldnc": [[187, "index-88"]], "ldoi": [[187, "index-92"]], "nc": [[187, "index-48"]], "ncdhw": [[187, "index-57"]], "nchw": [[187, "index-54"]], "ncw": [[187, "index-52"]], "ndhwc": [[187, "index-58"]], "nhwc": [[187, "index-55"]], "nt": [[187, "index-51"]], "ntc": [[187, "index-87"]], "nwc": [[187, "index-53"]], "odhwi": [[187, "index-72"]], "ohwi": [[187, "index-67"]], "oi": [[187, "index-59"]], "oidhw": [[187, "index-70"]], "oihw": [[187, "index-65"]], "oiw": [[187, "index-61"]], "owi": [[187, "index-62"]], "tn": [[187, "index-50"]], "tnc": [[187, "index-86"]], "wigo": [[187, "index-77"]], "wio": [[187, "index-63"]], "x": [[187, "index-47"]], "csr": [[188, "index-2"], [498, "index-28"]], "packed": [[188, "index-3"], [498, "index-29"]], "sparse_encoding": [[188, "index-0"], [199, "index-53"]], "fuse_norm_add_relu": [[189, "index-6"]], "fuse_norm_relu": [[189, "index-5"]], "none": [[189, "index-1"]], "normalization_flags": [[189, "index-0"]], "use_global_stats": [[189, "index-2"]], "use_scale": [[189, "index-3"]], "use_shift": [[189, "index-4"]], "dnnl_fuse_norm_add_relu": [[190, "index-6"]], "dnnl_fuse_norm_relu": [[190, "index-5"]], "dnnl_normalization_flags_none": [[190, "index-1"]], "dnnl_normalization_flags_t": [[190, "index-0"]], "dnnl_use_global_stats": [[190, "index-2"]], "dnnl_use_scale": [[190, "index-3"]], "dnnl_use_shift": [[190, "index-4"]], "buffer": [[191, "index-2"], [212, "index-2"]], "memory_kind": [[191, "index-0"], [212, "index-0"]], "usm": [[191, "index-1"], [212, "index-1"]], "dnnl_ocl_interop_buffer": [[192, "index-2"]], "dnnl_ocl_interop_memory_kind_t": [[192, "index-0"]], "dnnl_ocl_interop_usm": [[192, "index-1"]], "batch_normalization": [[193, "index-10"]], "deconvolution": [[193, "index-7"], [278, "index-0"]], "group_normalization": [[193, "index-21"]], "inner_product": [[193, "index-11"]], "layer_normalization": [[193, "index-20"]], "lrn": [[193, "index-9"], [286, "index-0"]], "dnnl_batch_normalization": [[194, "index-10"]], "dnnl_binary": [[194, "index-14"]], "dnnl_concat": [[194, "index-4"]], "dnnl_convolution": [[194, "index-6"]], "dnnl_deconvolution": [[194, "index-7"]], "dnnl_eltwise": [[194, "index-8"]], "dnnl_gemm": [[194, "index-13"]], "dnnl_group_normalization": [[194, "index-22"]], "dnnl_inner_product": [[194, "index-11"]], "dnnl_layer_normalization": [[194, "index-21"]], "dnnl_lrn": [[194, "index-9"]], "dnnl_matmul": [[194, "index-15"]], "dnnl_pooling": [[194, "index-17"]], "dnnl_prelu": [[194, "index-19"]], "dnnl_primitive_kind_max": [[194, "index-23"]], "dnnl_primitive_kind_t": [[194, "index-0"]], "dnnl_reduction": [[194, "index-18"]], "dnnl_reorder": [[194, "index-2"]], "dnnl_resampling": [[194, "index-16"]], "dnnl_rnn": [[194, "index-12"]], "dnnl_shuffle": [[194, "index-3"]], "dnnl_softmax": [[194, "index-20"]], "dnnl_sum": [[194, "index-5"]], "dnnl_undefined_primitive": [[194, "index-1"]], "profiling_data_kind": [[195, "index-0"]], "time": [[195, "index-2"]], "dnnl_profiling_data_kind_t": [[196, "index-0"]], "dnnl_profiling_data_kind_time": [[196, "index-2"]], "dnnl_profiling_data_kind_undef": [[196, "index-1"]], "backward": [[197, "index-5"]], "backward_bias": [[197, "index-8"]], "backward_data": [[197, "index-6"]], "backward_weights": [[197, "index-7"]], "forward": [[197, "index-4"]], "forward_inference": [[197, "index-3"]], "forward_training": [[197, "index-2"]], "prop_kind": [[197, "index-0"], [199, "index-12"]], "dnnl_backward": [[198, "index-5"]], "dnnl_backward_bias": [[198, "index-8"]], "dnnl_backward_data": [[198, "index-6"]], "dnnl_backward_weights": [[198, "index-7"]], "dnnl_forward": [[198, "index-4"]], "dnnl_forward_inference": [[198, "index-3"]], "dnnl_forward_training": [[198, "index-2"]], "dnnl_prop_kind_t": [[198, "index-0"]], "dnnl_prop_kind_undef": [[198, "index-1"]], "activation_kind": [[199, "index-31"]], "alg_kind": [[199, "index-21"]], "alpha_f32": [[199, "index-22"]], "axis_s32": [[199, "index-24"]], "beta_f32": [[199, "index-23"]], "cache_blob_id": [[199, "index-14"]], "cache_blob_id_size_s64": [[199, "index-13"]], "cell_kind": [[199, "index-29"]], "diff_dst_md": [[199, "index-39"]], "diff_src_md": [[199, "index-35"]], "diff_weights_md": [[199, "index-37"]], "direction": [[199, "index-30"]], "dst_md": [[199, "index-38"]], "engine": [[199, "index-2"], [280, "index-0"], [315, "index-0"], [452, "index-1"], [452, "index-2"]], "epsilon_f32": [[199, "index-19"]], "exec_arg_md": [[199, "index-42"]], "factors": [[199, "index-28"]], "flags": [[199, "index-20"], [210, "index-0"]], "group_size_s64": [[199, "index-33"]], "impl_info_str": [[199, "index-11"], [515, "index-2"]], "inner_blks": [[199, "index-51"]], "inner_idxs": [[199, "index-52"]], "inner_nblks_s32": [[199, "index-50"]], "k_f32": [[199, "index-26"]], "local_size_s64": [[199, "index-25"]], "memory_consumption_s64": [[199, "index-7"]], "ndims_s32": [[199, "index-43"]], "nnz_s64": [[199, "index-54"]], "num_handles_s32": [[199, "index-55"]], "num_of_inputs_s32": [[199, "index-4"]], "num_of_outputs_s32": [[199, "index-5"]], "p_f32": [[199, "index-27"]], "padded_dims": [[199, "index-47"]], "padded_offsets": [[199, "index-48"]], "padding_l": [[199, "index-17"]], "padding_r": [[199, "index-18"]], "primitive_kind": [[199, "index-3"]], "query": [[199, "index-0"]], "reorder_dst_engine": [[199, "index-10"]], "reorder_src_engine": [[199, "index-9"]], "scratchpad_engine": [[199, "index-8"], [515, "index-39"]], "scratchpad_md": [[199, "index-41"]], "src_md": [[199, "index-34"]], "submemory_offset_s64": [[199, "index-46"]], "time_estimate_f64": [[199, "index-6"]], "weights_md": [[199, "index-36"]], "workspace_md": [[199, "index-40"]], "dnnl_query_activation_kind": [[200, "index-31"]], "dnnl_query_alg_kind": [[200, "index-21"]], "dnnl_query_alpha_f32": [[200, "index-22"]], "dnnl_query_axis_s32": [[200, "index-24"]], "dnnl_query_beta_f32": [[200, "index-23"]], "dnnl_query_cache_blob_id": [[200, "index-14"]], "dnnl_query_cache_blob_id_size_s64": [[200, "index-13"]], "dnnl_query_cell_kind": [[200, "index-29"]], "dnnl_query_data_type": [[200, "index-46"]], "dnnl_query_diff_dst_md": [[200, "index-40"]], "dnnl_query_diff_src_md": [[200, "index-36"]], "dnnl_query_diff_weights_md": [[200, "index-38"]], "dnnl_query_dilations": [[200, "index-16"]], "dnnl_query_dims": [[200, "index-45"]], "dnnl_query_direction": [[200, "index-30"]], "dnnl_query_dst_md": [[200, "index-39"]], "dnnl_query_engine": [[200, "index-2"]], "dnnl_query_epsilon_f32": [[200, "index-19"]], "dnnl_query_exec_arg_md": [[200, "index-43"]], "dnnl_query_factors": [[200, "index-28"]], "dnnl_query_flags": [[200, "index-20"]], "dnnl_query_format_kind": [[200, "index-50"]], "dnnl_query_group_size_s64": [[200, "index-33"]], "dnnl_query_impl_info_str": [[200, "index-9"]], "dnnl_query_inner_blks": [[200, "index-52"]], "dnnl_query_inner_idxs": [[200, "index-53"]], "dnnl_query_inner_nblks_s32": [[200, "index-51"]], "dnnl_query_k_f32": [[200, "index-26"]], "dnnl_query_kernel": [[200, "index-32"]], "dnnl_query_local_size_s64": [[200, "index-25"]], "dnnl_query_max": [[200, "index-57"]], "dnnl_query_memory_consumption_s64": [[200, "index-7"]], "dnnl_query_ndims_s32": [[200, "index-44"]], "dnnl_query_nnz_s64": [[200, "index-55"]], "dnnl_query_num_handles_s32": [[200, "index-56"]], "dnnl_query_num_of_inputs_s32": [[200, "index-4"]], "dnnl_query_num_of_outputs_s32": [[200, "index-5"]], "dnnl_query_p_f32": [[200, "index-27"]], "dnnl_query_padded_dims": [[200, "index-48"]], "dnnl_query_padded_offsets": [[200, "index-49"]], "dnnl_query_padding_l": [[200, "index-17"]], "dnnl_query_padding_r": [[200, "index-18"]], "dnnl_query_primitive_kind": [[200, "index-3"]], "dnnl_query_prop_kind": [[200, "index-12"]], "dnnl_query_reorder_dst_engine": [[200, "index-11"]], "dnnl_query_reorder_src_engine": [[200, "index-10"]], "dnnl_query_scratchpad_engine": [[200, "index-8"]], "dnnl_query_scratchpad_md": [[200, "index-42"]], "dnnl_query_some_md": [[200, "index-34"]], "dnnl_query_sparse_encoding": [[200, "index-54"]], "dnnl_query_src_md": [[200, "index-35"]], "dnnl_query_strides": [[200, "index-15"]], "dnnl_query_submemory_offset_s64": [[200, "index-47"]], "dnnl_query_t": [[200, "index-0"]], "dnnl_query_time_estimate_f64": [[200, "index-6"]], "dnnl_query_undef": [[200, "index-1"]], "dnnl_query_weights_md": [[200, "index-37"]], "dnnl_query_workspace_md": [[200, "index-41"]], "bidirectional_concat": [[201, "index-4"]], "bidirectional_sum": [[201, "index-5"]], "rnn_direction": [[201, "index-0"]], "unidirectional_left2right": [[201, "index-2"]], "unidirectional_right2left": [[201, "index-3"]], "dnnl_bidirectional_concat": [[202, "index-4"]], "dnnl_bidirectional_sum": [[202, "index-5"]], "dnnl_rnn_direction_t": [[202, "index-0"]], "dnnl_rnn_direction_undef": [[202, "index-1"]], "dnnl_unidirectional_left2right": [[202, "index-2"]], "dnnl_unidirectional_right2left": [[202, "index-3"]], "diff_weights_overwrite": [[203, "index-2"]], "rnn_flags": [[203, "index-0"]], "dnnl_rnn_flags_diff_weights_overwrite": [[204, "index-2"]], "dnnl_rnn_flags_t": [[204, "index-0"]], "dnnl_rnn_flags_undef": [[204, "index-1"]], "library": [[205, "index-1"]], "scratchpad_mode": [[205, "index-0"]], "user": [[205, "index-2"]], "dnnl_scratchpad_mode_library": [[206, "index-1"]], "dnnl_scratchpad_mode_t": [[206, "index-0"]], "dnnl_scratchpad_mode_user": [[206, "index-2"]], "dnnl_csr": [[207, "index-2"]], "dnnl_packed": [[207, "index-3"]], "dnnl_sparse_encoding_t": [[207, "index-0"]], "dnnl_sparse_encoding_undef": [[207, "index-1"]], "dnnl_invalid_arguments": [[209, "index-3"]], "dnnl_invalid_data_type": [[209, "index-11"]], "dnnl_invalid_graph": [[209, "index-8"]], "dnnl_invalid_graph_op": [[209, "index-9"]], "dnnl_invalid_shape": [[209, "index-10"]], "dnnl_last_impl_reached": [[209, "index-5"]], "dnnl_not_required": [[209, "index-7"]], "dnnl_out_of_memory": [[209, "index-2"]], "dnnl_runtime_error": [[209, "index-6"]], "dnnl_status_t": [[209, "index-0"]], "dnnl_success": [[209, "index-1"]], "dnnl_unimplemented": [[209, "index-4"]], "default_flags": [[210, "index-3"]], "in_order": [[210, "index-1"]], "out_of_order": [[210, "index-2"]], "dnnl_stream_default_flags": [[211, "index-2"]], "dnnl_stream_flags_t": [[211, "index-0"]], "dnnl_stream_out_of_order": [[211, "index-1"]], "dnnl_sycl_interop_buffer": [[213, "index-2"]], "dnnl_sycl_interop_memory_kind_t": [[213, "index-0"]], "dnnl_sycl_interop_usm": [[213, "index-1"]], "augru.cpp": [[214, "index-0"]], "example": [[214, "index-0"], [215, "index-0"], [216, "index-0"], [217, "index-0"], [218, "index-0"], [219, "index-0"], [220, "index-0"], [221, "index-0"], [222, "index-0"], [223, "index-0"], [224, "index-0"], [225, "index-0"], [226, "index-0"], [227, "index-0"], [228, "index-0"], [229, "index-0"], [230, "index-0"], [231, "index-0"], [232, "index-0"], [233, "index-0"], [234, "index-0"], [235, "index-0"], [236, "index-0"], [237, "index-0"], [238, "index-0"], [239, "index-0"], [240, "index-0"], [241, "index-0"], [242, "index-0"], [243, "index-0"], [244, "index-0"], [245, "index-0"], [246, "index-0"], [247, "index-0"], [248, "index-0"], [249, "index-0"], [250, "index-0"], [251, "index-0"], [252, "index-0"], [253, "index-0"], [254, "index-0"], [255, "index-0"], [256, "index-0"], [257, "index-0"], [258, "index-0"], [259, "index-0"], [260, "index-0"], [261, "index-0"], [262, "index-0"], [263, "index-0"]], "batch_normalization.cpp": [[215, "index-0"]], "binary.cpp": [[216, "index-0"]], "bnorm_u8_via_binary_postops.cpp": [[217, "index-0"]], "cnn_inference_f32.c": [[218, "index-0"]], "cnn_inference_f32.cpp": [[219, "index-0"]], "cnn_inference_int8.cpp": [[220, "index-0"]], "cnn_training_bf16.cpp": [[221, "index-0"]], "cnn_training_f32.cpp": [[222, "index-0"]], "concat.cpp": [[223, "index-0"]], "convolution.cpp": [[224, "index-0"]], "cpu_brgemm.cpp": [[225, "index-0"]], "cpu_cnn_training_f32.c": [[226, "index-0"]], "cpu_getting_started.cpp": [[227, "index-0"]], "cpu_inference_int8.cpp": [[228, "index-0"]], "cpu_matmul_csr.cpp": [[229, "index-0"]], "cpu_matmul_quantization.cpp": [[230, "index-0"]], "cpu_matmul_weights_compression.cpp": [[231, "index-0"]], "cpu_rnn_inference_f32.cpp": [[232, "index-0"]], "cpu_rnn_inference_int8.cpp": [[233, "index-0"]], "cpu_sgemm_and_matmul.cpp": [[234, "index-0"]], "cpu_single_op_partition.cpp": [[235, "index-0"]], "cross_engine_reorder.c": [[236, "index-0"]], "cross_engine_reorder.cpp": [[237, "index-0"]], "eltwise.cpp": [[238, "index-0"]], "getting_started.cpp": [[239, "index-0"]], "gpu_opencl_getting_started.cpp": [[240, "index-0"]], "gpu_opencl_interop.cpp": [[241, "index-0"]], "group_normalization.cpp": [[242, "index-0"]], "inference_int8_matmul.cpp": [[243, "index-0"]], "inner_product.cpp": [[244, "index-0"]], "layer_normalization.cpp": [[245, "index-0"]], "lrn.cpp": [[246, "index-0"]], "lstm.cpp": [[247, "index-0"]], "matmul.cpp": [[248, "index-0"]], "memory_format_propagation.cpp": [[249, "index-0"]], "performance_profiling.cpp": [[250, "index-0"]], "pooling.cpp": [[251, "index-0"]], "prelu.cpp": [[252, "index-0"]], "reduction.cpp": [[253, "index-0"]], "reorder.cpp": [[254, "index-0"]], "resampling.cpp": [[255, "index-0"]], "rnn_training_f32.cpp": [[256, "index-0"]], "shuffle.cpp": [[257, "index-0"]], "softmax.cpp": [[258, "index-0"]], "sum.cpp": [[259, "index-0"]], "sycl_getting_started.cpp": [[260, "index-0"]], "sycl_interop_buffer.cpp": [[261, "index-0"]], "sycl_single_op_partition.cpp": [[262, "index-0"]], "weights_decompression_matmul.cpp": [[263, "index-0"]], "global": [[264, "index-0"]], "namespace": [[264, "index-0"], [328, "index-0"], [329, "index-0"], [330, "index-0"], [331, "index-0"], [332, "index-0"], [333, "index-0"], [334, "index-0"], [335, "index-0"], [336, "index-0"], [337, "index-0"], [338, "index-0"]], "set_any_layout": [[264, "index-1"]], "group": [[268, "index-0"], [269, "index-0"], [270, "index-0"], [271, "index-0"], [272, "index-0"], [273, "index-0"], [274, "index-0"], [275, "index-0"], [276, "index-0"], [277, "index-0"], [278, "index-0"], [279, "index-0"], [280, "index-0"], [281, "index-0"], [282, "index-0"], [283, "index-0"], [284, "index-0"], [285, "index-0"], [286, "index-0"], [287, "index-0"], [288, "index-0"], [289, "index-0"], [290, "index-0"], [291, "index-0"], [292, "index-0"], [293, "index-0"], [294, "index-0"], [295, "index-0"], [296, "index-0"], [297, "index-0"], [298, "index-0"], [299, "index-0"], [300, "index-0"], [301, "index-0"], [302, "index-0"], [303, "index-0"], [304, "index-0"], [305, "index-0"], [306, "index-0"], [307, "index-0"], [308, "index-0"], [309, "index-0"], [310, "index-0"], [311, "index-0"], [312, "index-0"], [313, "index-0"], [314, "index-0"], [315, "index-0"], [316, "index-0"], [317, "index-0"], [318, "index-0"], [319, "index-0"], [320, "index-0"], [321, "index-0"], [322, "index-0"], [323, "index-0"], [324, "index-0"], [325, "index-0"]], "onednn api": [[268, "index-0"]], "accumulation mode": [[269, "index-0"]], "convert_to_c": [[269, "index-1"], [270, "index-5"], [270, "index-6"], [270, "index-7"], [280, "index-2"], [281, "index-1"], [294, "index-5"], [294, "index-6"], [294, "index-7"], [299, "index-1"], [299, "index-2"], [332, "index-1"], [333, "index-1"]], "attributes": [[270, "index-0"]], "const_dnnl_post_ops_t": [[270, "index-4"]], "const_dnnl_primitive_attr_t": [[270, "index-2"]], "dnnl_post_ops_append_binary": [[270, "index-38"]], "dnnl_post_ops_append_dw": [[270, "index-36"]], "dnnl_post_ops_append_eltwise": [[270, "index-34"]], "dnnl_post_ops_append_prelu": [[270, "index-40"]], "dnnl_post_ops_append_sum": [[270, "index-32"]], "dnnl_post_ops_clone": [[270, "index-28"]], "dnnl_post_ops_create": [[270, "index-27"]], "dnnl_post_ops_destroy": [[270, "index-29"]], "dnnl_post_ops_get_kind": [[270, "index-31"]], "dnnl_post_ops_get_params_binary": [[270, "index-39"]], "dnnl_post_ops_get_params_dw": [[270, "index-37"]], "dnnl_post_ops_get_params_eltwise": [[270, "index-35"]], "dnnl_post_ops_get_params_prelu": [[270, "index-41"]], "dnnl_post_ops_get_params_sum": [[270, "index-33"]], "dnnl_post_ops_len": [[270, "index-30"]], "dnnl_post_ops_t": [[270, "index-3"]], "dnnl_primitive_attr_clone": [[270, "index-9"]], "dnnl_primitive_attr_create": [[270, "index-8"]], "dnnl_primitive_attr_destroy": [[270, "index-10"]], "dnnl_primitive_attr_get_accumulation_mode": [[270, "index-17"]], "dnnl_primitive_attr_get_deterministic": [[270, "index-15"]], "dnnl_primitive_attr_get_fpmath_mode": [[270, "index-11"]], "dnnl_primitive_attr_get_fpmath_mode_v2": [[270, "index-13"]], "dnnl_primitive_attr_get_post_ops": [[270, "index-25"]], "dnnl_primitive_attr_get_rnn_data_qparams": [[270, "index-43"]], "dnnl_primitive_attr_get_rnn_weights_projection_qparams": [[270, "index-47"]], "dnnl_primitive_attr_get_rnn_weights_qparams": [[270, "index-45"]], "dnnl_primitive_attr_get_scratchpad_mode": [[270, "index-19"]], "dnnl_primitive_attr_set_accumulation_mode": [[270, "index-18"]], "dnnl_primitive_attr_set_deterministic": [[270, "index-16"]], "dnnl_primitive_attr_set_fpmath_mode": [[270, "index-12"]], "dnnl_primitive_attr_set_fpmath_mode_v2": [[270, "index-14"]], "dnnl_primitive_attr_set_post_ops": [[270, "index-26"]], "dnnl_primitive_attr_set_rnn_data_qparams": [[270, "index-42"]], "dnnl_primitive_attr_set_rnn_weights_projection_qparams": [[270, "index-46"]], "dnnl_primitive_attr_set_rnn_weights_qparams": [[270, "index-44"]], "dnnl_primitive_attr_set_scales": [[270, "index-22"]], "dnnl_primitive_attr_set_scales_mask": [[270, "index-21"]], "dnnl_primitive_attr_set_scratchpad_mode": [[270, "index-20"]], "dnnl_primitive_attr_set_zero_points": [[270, "index-24"]], "dnnl_primitive_attr_set_zero_points_mask": [[270, "index-23"]], "dnnl_primitive_attr_t": [[270, "index-1"]], "dnnl_batch_normalization_backward_primitive_desc_create": [[271, "index-2"]], "dnnl_batch_normalization_forward_primitive_desc_create": [[271, "index-1"]], "dnnl_binary_primitive_desc_create": [[272, "index-1"]], "blas functions": [[273, "index-0"]], "dnnl_gemm_s8s8s32": [[273, "index-6"]], "dnnl_gemm_u8s8s32": [[273, "index-5"]], "dnnl_sgemm": [[273, "index-4"]], "gemm_s8s8s32": [[273, "index-3"], [334, "index-5"]], "gemm_u8s8s32": [[273, "index-2"], [334, "index-4"]], "sgemm": [[273, "index-1"], [334, "index-3"]], "common api": [[274, "index-0"]], "dnnl_concat_primitive_desc_create": [[275, "index-1"]], "dnnl_convolution_backward_data_primitive_desc_create": [[276, "index-2"]], "dnnl_convolution_backward_weights_primitive_desc_create": [[276, "index-3"]], "dnnl_convolution_forward_primitive_desc_create": [[276, "index-1"]], "dnnl_max_ndims": [[277, "index-3"]], "define": [[277, "index-3"], [288, "index-35"], [288, "index-36"], [288, "index-37"], [288, "index-38"], [288, "index-39"], [288, "index-40"], [294, "index-21"], [294, "index-22"], [294, "index-23"], [294, "index-24"], [294, "index-25"], [294, "index-26"], [294, "index-27"], [294, "index-28"], [294, "index-29"], [294, "index-30"], [294, "index-31"], [294, "index-32"], [294, "index-33"], [294, "index-34"], [294, "index-35"], [294, "index-36"], [294, "index-37"], [294, "index-38"], [294, "index-39"], [294, "index-40"], [294, "index-41"], [294, "index-42"], [294, "index-43"], [294, "index-44"], [294, "index-45"], [294, "index-46"], [294, "index-47"], [294, "index-48"], [294, "index-49"], [294, "index-50"], [294, "index-51"], [294, "index-52"], [294, "index-53"], [294, "index-54"], [294, "index-55"], [294, "index-56"], [294, "index-57"], [294, "index-58"], [294, "index-59"], [294, "index-60"], [294, "index-61"], [294, "index-62"], [294, "index-63"], [294, "index-64"], [294, "index-65"], [294, "index-66"], [294, "index-67"], [294, "index-68"], [294, "index-69"], [294, "index-70"], [294, "index-71"], [294, "index-72"], [294, "index-73"], [294, "index-74"], [294, "index-75"], [294, "index-76"], [294, "index-77"], [294, "index-78"], [294, "index-79"], [294, "index-80"], [294, "index-81"], [294, "index-82"], [294, "index-83"], [294, "index-84"], [294, "index-85"], [294, "index-86"], [294, "index-87"], [294, "index-88"], [294, "index-89"], [294, "index-90"], [294, "index-91"], [300, "index-22"], [300, "index-23"], [300, "index-24"], [300, "index-25"], [300, "index-26"], [300, "index-27"], [318, "index-6"], [318, "index-7"]], "dnnl_dim_t": [[277, "index-1"]], "dnnl_dims_t": [[277, "index-2"]], "dnnl_deconvolution_backward_data_primitive_desc_create": [[278, "index-2"]], "dnnl_deconvolution_backward_weights_primitive_desc_create": [[278, "index-3"]], "dnnl_deconvolution_forward_primitive_desc_create": [[278, "index-1"]], "dnnl_eltwise_backward_primitive_desc_create": [[279, "index-2"]], "dnnl_eltwise_forward_primitive_desc_create": [[279, "index-1"]], "dnnl_engine_create": [[280, "index-4"]], "dnnl_engine_destroy": [[280, "index-6"]], "dnnl_engine_get_count": [[280, "index-3"]], "dnnl_engine_get_kind": [[280, "index-5"]], "dnnl_engine_t": [[280, "index-1"]], "floating-point math mode": [[281, "index-0"]], "dnnl_get_default_fpmath_mode": [[281, "index-2"]], "dnnl_set_default_fpmath_mode": [[281, "index-3"]], "dnnl_group_normalization_backward_primitive_desc_create": [[282, "index-2"]], "dnnl_group_normalization_forward_primitive_desc_create": [[282, "index-1"]], "dnnl_inner_product_backward_data_primitive_desc_create": [[283, "index-2"]], "dnnl_inner_product_backward_weights_primitive_desc_create": [[283, "index-3"]], "dnnl_inner_product_forward_primitive_desc_create": [[283, "index-1"]], "runtime interoperability api": [[284, "index-0"], [317, "index-0"]], "dnnl_layer_normalization_backward_primitive_desc_create": [[285, "index-2"]], "dnnl_layer_normalization_backward_primitive_desc_create_v2": [[285, "index-4"]], "dnnl_layer_normalization_forward_primitive_desc_create": [[285, "index-1"]], "dnnl_layer_normalization_forward_primitive_desc_create_v2": [[285, "index-3"]], "dnnl_lrn_backward_primitive_desc_create": [[286, "index-2"]], "dnnl_lrn_forward_primitive_desc_create": [[286, "index-1"]], "dnnl_matmul_primitive_desc_create": [[287, "index-1"]], "dnnl_memory_allocate": [[288, "index-35"]], "dnnl_memory_none": [[288, "index-36"]], "dnnl_runtime_dim_val": [[288, "index-37"]], "dnnl_runtime_f32_val": [[288, "index-38"]], "dnnl_runtime_s32_val": [[288, "index-39"]], "dnnl_runtime_size_val": [[288, "index-40"]], "memory": [[288, "index-0"], [454, "index-2"], [496, "index-3"], [496, "index-4"], [496, "index-5"], [496, "index-6"]], "const_dnnl_memory_desc_t": [[288, "index-2"]], "const_dnnl_memory_t": [[288, "index-4"]], "dnnl_data_type_size": [[288, "index-21"]], "dnnl_memory_create": [[288, "index-22"]], "dnnl_memory_create_v2": [[288, "index-23"]], "dnnl_memory_desc_clone": [[288, "index-6"]], "dnnl_memory_desc_create_submemory": [[288, "index-13"]], "dnnl_memory_desc_create_with_blob": [[288, "index-8"]], "dnnl_memory_desc_create_with_csr_encoding": [[288, "index-11"]], "dnnl_memory_desc_create_with_packed_encoding": [[288, "index-12"]], "dnnl_memory_desc_create_with_strides": [[288, "index-9"]], "dnnl_memory_desc_create_with_tag": [[288, "index-10"]], "dnnl_memory_desc_destroy": [[288, "index-5"]], "dnnl_memory_desc_equal": [[288, "index-18"]], "dnnl_memory_desc_get_blob": [[288, "index-7"]], "dnnl_memory_desc_get_size": [[288, "index-19"]], "dnnl_memory_desc_get_size_v2": [[288, "index-20"]], "dnnl_memory_desc_permute_axes": [[288, "index-15"]], "dnnl_memory_desc_query": [[288, "index-16"]], "dnnl_memory_desc_query_v2": [[288, "index-17"]], "dnnl_memory_desc_reshape": [[288, "index-14"]], "dnnl_memory_desc_t": [[288, "index-1"]], "dnnl_memory_destroy": [[288, "index-34"]], "dnnl_memory_get_data_handle": [[288, "index-30"]], "dnnl_memory_get_data_handle_v2": [[288, "index-32"]], "dnnl_memory_get_engine": [[288, "index-25"]], "dnnl_memory_get_memory_desc": [[288, "index-24"]], "dnnl_memory_map_data": [[288, "index-26"]], "dnnl_memory_map_data_v2": [[288, "index-27"]], "dnnl_memory_set_data_handle": [[288, "index-31"]], "dnnl_memory_set_data_handle_v2": [[288, "index-33"]], "dnnl_memory_t": [[288, "index-3"]], "dnnl_memory_unmap_data": [[288, "index-28"]], "dnnl_memory_unmap_data_v2": [[288, "index-29"]], "opencl interoperability api": [[289, "index-0"]], "dnnl_ocl_interop_engine_create": [[289, "index-8"]], "dnnl_ocl_interop_engine_create_from_cache_blob": [[289, "index-7"]], "dnnl_ocl_interop_engine_get_cache_blob": [[289, "index-6"]], "dnnl_ocl_interop_engine_get_cache_blob_id": [[289, "index-5"]], "dnnl_ocl_interop_engine_get_context": [[289, "index-9"]], "dnnl_ocl_interop_get_device": [[289, "index-10"]], "dnnl_ocl_interop_memory_create": [[289, "index-1"]], "dnnl_ocl_interop_memory_get_mem_object": [[289, "index-3"]], "dnnl_ocl_interop_memory_get_memory_kind": [[289, "index-2"]], "dnnl_ocl_interop_memory_set_mem_object": [[289, "index-4"]], "dnnl_ocl_interop_primitive_execute": [[289, "index-13"]], "dnnl_ocl_interop_stream_create": [[289, "index-11"]], "dnnl_ocl_interop_stream_get_command_queue": [[289, "index-12"]], "dnnl_pooling_backward_primitive_desc_create": [[290, "index-2"]], "dnnl_pooling_forward_primitive_desc_create": [[290, "index-1"]], "dnnl_prelu_backward_primitive_desc_create": [[291, "index-2"]], "dnnl_prelu_forward_primitive_desc_create": [[291, "index-1"]], "dnnl_get_primitive_cache_capacity": [[292, "index-3"]], "dnnl_set_primitive_cache_capacity": [[292, "index-4"]], "get_primitive_cache_capacity": [[292, "index-1"]], "set_primitive_cache_capacity": [[292, "index-2"]], "primitives": [[293, "index-0"]], "common": [[294, "index-0"]], "dnnl_arg_attr_multiple_post_op": [[294, "index-21"]], "dnnl_arg_attr_multiple_post_op_base": [[294, "index-22"]], "dnnl_arg_attr_output_scales": [[294, "index-23"]], "dnnl_arg_attr_post_op_dw": [[294, "index-24"]], "dnnl_arg_attr_scales": [[294, "index-25"]], "dnnl_arg_attr_zero_points": [[294, "index-26"]], "dnnl_arg_augru_attention": [[294, "index-27"]], "dnnl_arg_bias": [[294, "index-28"]], "dnnl_arg_diff_augru_attention": [[294, "index-29"]], "dnnl_arg_diff_bias": [[294, "index-30"]], "dnnl_arg_diff_dst": [[294, "index-31"]], "dnnl_arg_diff_dst_0": [[294, "index-32"]], "dnnl_arg_diff_dst_1": [[294, "index-33"]], "dnnl_arg_diff_dst_2": [[294, "index-34"]], "dnnl_arg_diff_dst_iter": [[294, "index-35"]], "dnnl_arg_diff_dst_iter_c": [[294, "index-36"]], "dnnl_arg_diff_dst_layer": [[294, "index-37"]], "dnnl_arg_diff_scale": [[294, "index-38"]], "dnnl_arg_diff_shift": [[294, "index-39"]], "dnnl_arg_diff_src": [[294, "index-40"]], "dnnl_arg_diff_src_0": [[294, "index-41"]], "dnnl_arg_diff_src_1": [[294, "index-42"]], "dnnl_arg_diff_src_2": [[294, "index-43"]], "dnnl_arg_diff_src_3": [[294, "index-44"]], "dnnl_arg_diff_src_iter": [[294, "index-45"]], "dnnl_arg_diff_src_iter_c": [[294, "index-46"]], "dnnl_arg_diff_src_layer": [[294, "index-47"]], "dnnl_arg_diff_weights": [[294, "index-48"]], "dnnl_arg_diff_weights_0": [[294, "index-49"]], "dnnl_arg_diff_weights_1": [[294, "index-50"]], "dnnl_arg_diff_weights_2": [[294, "index-51"]], "dnnl_arg_diff_weights_3": [[294, "index-52"]], "dnnl_arg_diff_weights_iter": [[294, "index-53"]], "dnnl_arg_diff_weights_layer": [[294, "index-54"]], "dnnl_arg_diff_weights_peephole": [[294, "index-55"]], "dnnl_arg_diff_weights_projection": [[294, "index-56"]], "dnnl_arg_dst": [[294, "index-57"]], "dnnl_arg_dst_0": [[294, "index-58"]], "dnnl_arg_dst_1": [[294, "index-59"]], "dnnl_arg_dst_2": [[294, "index-60"]], "dnnl_arg_dst_iter": [[294, "index-61"]], "dnnl_arg_dst_iter_c": [[294, "index-62"]], "dnnl_arg_dst_layer": [[294, "index-63"]], "dnnl_arg_from": [[294, "index-64"]], "dnnl_arg_mean": [[294, "index-65"]], "dnnl_arg_multiple_dst": [[294, "index-66"]], "dnnl_arg_multiple_src": [[294, "index-67"]], "dnnl_arg_scale": [[294, "index-68"]], "dnnl_arg_scratchpad": [[294, "index-69"]], "dnnl_arg_shift": [[294, "index-70"]], "dnnl_arg_src": [[294, "index-71"]], "dnnl_arg_src_0": [[294, "index-72"]], "dnnl_arg_src_1": [[294, "index-73"]], "dnnl_arg_src_2": [[294, "index-74"]], "dnnl_arg_src_3": [[294, "index-75"]], "dnnl_arg_src_iter": [[294, "index-76"]], "dnnl_arg_src_iter_c": [[294, "index-77"]], "dnnl_arg_src_layer": [[294, "index-78"]], "dnnl_arg_to": [[294, "index-79"]], "dnnl_arg_undef": [[294, "index-80"]], "dnnl_arg_variance": [[294, "index-81"]], "dnnl_arg_weights": [[294, "index-82"]], "dnnl_arg_weights_0": [[294, "index-83"]], "dnnl_arg_weights_1": [[294, "index-84"]], "dnnl_arg_weights_2": [[294, "index-85"]], "dnnl_arg_weights_3": [[294, "index-86"]], "dnnl_arg_weights_iter": [[294, "index-87"]], "dnnl_arg_weights_layer": [[294, "index-88"]], "dnnl_arg_weights_peephole": [[294, "index-89"]], "dnnl_arg_weights_projection": [[294, "index-90"]], "dnnl_arg_workspace": [[294, "index-91"]], "const_dnnl_primitive_desc_t": [[294, "index-2"]], "const_dnnl_primitive_t": [[294, "index-4"]], "dnnl_primitive_create": [[294, "index-15"]], "dnnl_primitive_create_from_cache_blob": [[294, "index-16"]], "dnnl_primitive_desc_clone": [[294, "index-9"]], "dnnl_primitive_desc_destroy": [[294, "index-11"]], "dnnl_primitive_desc_get_attr": [[294, "index-10"]], "dnnl_primitive_desc_next_impl": [[294, "index-8"]], "dnnl_primitive_desc_query": [[294, "index-12"]], "dnnl_primitive_desc_query_md": [[294, "index-13"]], "dnnl_primitive_desc_query_s32": [[294, "index-14"]], "dnnl_primitive_desc_t": [[294, "index-1"]], "dnnl_primitive_destroy": [[294, "index-20"]], "dnnl_primitive_execute": [[294, "index-17"]], "dnnl_primitive_get_cache_blob": [[294, "index-19"]], "dnnl_primitive_get_primitive_desc": [[294, "index-18"]], "dnnl_primitive_t": [[294, "index-3"]], "profiling": [[295, "index-0"]], "dnnl_query_profiling_data": [[295, "index-4"]], "dnnl_reset_profiling": [[295, "index-3"]], "get_profiling_data": [[295, "index-2"]], "reset_profiling": [[295, "index-1"]], "dnnl_reduction_primitive_desc_create": [[296, "index-1"]], "dnnl_reorder_primitive_desc_create": [[297, "index-1"]], "dnnl_resampling_backward_primitive_desc_create": [[298, "index-2"]], "dnnl_resampling_forward_primitive_desc_create": [[298, "index-1"]], "dnnl_augru_backward_primitive_desc_create": [[299, "index-12"]], "dnnl_augru_forward_primitive_desc_create": [[299, "index-11"]], "dnnl_gru_backward_primitive_desc_create": [[299, "index-8"]], "dnnl_gru_forward_primitive_desc_create": [[299, "index-7"]], "dnnl_lbr_augru_backward_primitive_desc_create": [[299, "index-14"]], "dnnl_lbr_augru_forward_primitive_desc_create": [[299, "index-13"]], "dnnl_lbr_gru_backward_primitive_desc_create": [[299, "index-10"]], "dnnl_lbr_gru_forward_primitive_desc_create": [[299, "index-9"]], "dnnl_lstm_backward_primitive_desc_create": [[299, "index-6"]], "dnnl_lstm_forward_primitive_desc_create": [[299, "index-5"]], "dnnl_vanilla_rnn_backward_primitive_desc_create": [[299, "index-4"]], "dnnl_vanilla_rnn_forward_primitive_desc_create": [[299, "index-3"]], "dnnl_jit_profile_linux_jitdump": [[300, "index-22"]], "dnnl_jit_profile_linux_jitdump_use_tsc": [[300, "index-23"]], "dnnl_jit_profile_linux_perf": [[300, "index-24"]], "dnnl_jit_profile_linux_perfmap": [[300, "index-25"]], "dnnl_jit_profile_none": [[300, "index-26"]], "dnnl_jit_profile_vtune": [[300, "index-27"]], "service": [[300, "index-0"]], "dnnl_get_cpu_isa_hints": [[300, "index-19"]], "dnnl_get_effective_cpu_isa": [[300, "index-17"]], "dnnl_set_cpu_isa_hints": [[300, "index-18"]], "dnnl_set_jit_dump": [[300, "index-13"]], "dnnl_set_jit_profiling_flags": [[300, "index-14"]], "dnnl_set_jit_profiling_jitdumpdir": [[300, "index-15"]], "dnnl_set_max_cpu_isa": [[300, "index-16"]], "dnnl_set_verbose": [[300, "index-20"]], "dnnl_version": [[300, "index-21"]], "get_cpu_isa_hints": [[300, "index-12"]], "get_default_fpmath_mode": [[300, "index-4"]], "get_effective_cpu_isa": [[300, "index-10"]], "set_cpu_isa_hints": [[300, "index-11"]], "set_default_fpmath_mode": [[300, "index-5"]], "set_jit_dump": [[300, "index-6"]], "set_jit_profiling_flags": [[300, "index-7"]], "set_jit_profiling_jitdumpdir": [[300, "index-8"]], "set_max_cpu_isa": [[300, "index-9"]], "set_verbose": [[300, "index-2"]], "version": [[300, "index-3"]], "version_t": [[300, "index-1"]], "dnnl_shuffle_backward_primitive_desc_create": [[301, "index-2"]], "dnnl_shuffle_forward_primitive_desc_create": [[301, "index-1"]], "dnnl_softmax_backward_primitive_desc_create": [[302, "index-2"]], "dnnl_softmax_forward_primitive_desc_create": [[302, "index-1"]], "stream": [[303, "index-0"], [534, "index-1"], [534, "index-2"]], "const_dnnl_stream_t": [[303, "index-2"]], "dnnl_stream_create": [[303, "index-3"]], "dnnl_stream_destroy": [[303, "index-6"]], "dnnl_stream_get_engine": [[303, "index-4"]], "dnnl_stream_t": [[303, "index-1"]], "dnnl_stream_wait": [[303, "index-5"]], "dnnl_sum_primitive_desc_create": [[304, "index-1"]], "sycl interoperability api": [[305, "index-0"], [323, "index-0"]], "dnnl_sycl_interop_engine_create": [[305, "index-1"]], "dnnl_sycl_interop_engine_get_context": [[305, "index-2"]], "dnnl_sycl_interop_engine_get_device": [[305, "index-3"]], "dnnl_sycl_interop_memory_create": [[305, "index-4"]], "dnnl_sycl_interop_memory_get_memory_kind": [[305, "index-5"]], "dnnl_sycl_interop_memory_set_buffer": [[305, "index-6"]], "dnnl_sycl_interop_primitive_execute": [[305, "index-9"]], "dnnl_sycl_interop_stream_create": [[305, "index-7"]], "dnnl_sycl_interop_stream_get_queue": [[305, "index-8"]], "threadpool interoperability api": [[306, "index-0"]], "dnnl_threadpool_interop_gemm_s8s8s32": [[306, "index-7"]], "dnnl_threadpool_interop_gemm_u8s8s32": [[306, "index-6"]], "dnnl_threadpool_interop_get_max_concurrency": [[306, "index-4"]], "dnnl_threadpool_interop_set_max_concurrency": [[306, "index-3"]], "dnnl_threadpool_interop_sgemm": [[306, "index-5"]], "dnnl_threadpool_interop_stream_create": [[306, "index-1"]], "dnnl_threadpool_interop_stream_get_threadpool": [[306, "index-2"]], "ukernels": [[307, "index-0"]], "brgemm ukernel": [[308, "index-0"]], "const_dnnl_brgemm_pack_b_t": [[308, "index-4"]], "const_dnnl_brgemm_t": [[308, "index-2"]], "dnnl_brgemm_create": [[308, "index-5"]], "dnnl_brgemm_destroy": [[308, "index-12"]], "dnnl_brgemm_execute": [[308, "index-10"]], "dnnl_brgemm_execute_postops": [[308, "index-11"]], "dnnl_brgemm_generate": [[308, "index-9"]], "dnnl_brgemm_get_scratchpad_size": [[308, "index-6"]], "dnnl_brgemm_pack_b_create": [[308, "index-13"]], "dnnl_brgemm_pack_b_destroy": [[308, "index-17"]], "dnnl_brgemm_pack_b_execute": [[308, "index-16"]], "dnnl_brgemm_pack_b_generate": [[308, "index-15"]], "dnnl_brgemm_pack_b_need_pack": [[308, "index-14"]], "dnnl_brgemm_pack_b_t": [[308, "index-3"]], "dnnl_brgemm_release_hw_context": [[308, "index-8"]], "dnnl_brgemm_set_hw_context": [[308, "index-7"]], "dnnl_brgemm_t": [[308, "index-1"]], "utilities": [[309, "index-0"], [325, "index-0"]], "graph api": [[310, "index-0"]], "const_dnnl_graph_allocator_t": [[311, "index-4"]], "dnnl_graph_allocator_create": [[311, "index-5"]], "dnnl_graph_allocator_destroy": [[311, "index-6"]], "dnnl_graph_allocator_t": [[311, "index-3"]], "dnnl_graph_host_allocate_f": [[311, "index-1"]], "dnnl_graph_host_deallocate_f": [[311, "index-2"]], "compiled partition": [[312, "index-0"]], "const_dnnl_graph_compiled_partition_t": [[312, "index-2"]], "dnnl_graph_compiled_partition_create": [[312, "index-3"]], "dnnl_graph_compiled_partition_destroy": [[312, "index-5"]], "dnnl_graph_compiled_partition_execute": [[312, "index-4"]], "dnnl_graph_compiled_partition_get_inplace_ports": [[312, "index-7"]], "dnnl_graph_compiled_partition_query_logical_tensor": [[312, "index-6"]], "dnnl_graph_compiled_partition_t": [[312, "index-1"]], "compiled partition cache": [[313, "index-0"]], "dnnl_graph_get_compiled_partition_cache_capacity": [[313, "index-3"]], "dnnl_graph_set_compiled_partition_cache_capacity": [[313, "index-4"]], "get_compiled_partition_cache_capacity": [[313, "index-1"]], "set_compiled_partition_cache_capacity": [[313, "index-2"]], "dnnl_graph_get_constant_tensor_cache": [[314, "index-6"]], "dnnl_graph_get_constant_tensor_cache_capacity": [[314, "index-8"]], "dnnl_graph_set_constant_tensor_cache": [[314, "index-5"]], "dnnl_graph_set_constant_tensor_cache_capacity": [[314, "index-7"]], "get_constant_tensor_cache": [[314, "index-2"]], "get_constant_tensor_cache_capacity": [[314, "index-4"]], "set_constant_tensor_cache": [[314, "index-1"]], "set_constant_tensor_cache_capacity": [[314, "index-3"]], "dnnl_graph_make_engine_with_allocator": [[315, "index-2"]], "make_engine_with_allocator": [[315, "index-1"], [330, "index-2"], [330, "index-3"]], "const_dnnl_graph_graph_t": [[316, "index-2"]], "dnnl_graph_add_op": [[316, "index-6"]], "dnnl_graph_graph_create": [[316, "index-3"]], "dnnl_graph_graph_create_with_fpmath_mode": [[316, "index-4"]], "dnnl_graph_graph_destroy": [[316, "index-5"]], "dnnl_graph_graph_filter": [[316, "index-9"]], "dnnl_graph_graph_finalize": [[316, "index-7"]], "dnnl_graph_graph_get_partition_num": [[316, "index-10"]], "dnnl_graph_graph_get_partitions": [[316, "index-11"]], "dnnl_graph_graph_is_finalized": [[316, "index-8"]], "dnnl_graph_graph_t": [[316, "index-1"]], "dnnl_graph_unknown_dim": [[318, "index-6"]], "dnnl_graph_unknown_ndims": [[318, "index-7"]], "logical tensor": [[318, "index-0"]], "dnnl_graph_logical_tensor_get_mem_size": [[318, "index-4"]], "dnnl_graph_logical_tensor_init": [[318, "index-1"]], "dnnl_graph_logical_tensor_init_with_dims": [[318, "index-2"]], "dnnl_graph_logical_tensor_init_with_strides": [[318, "index-3"]], "dnnl_graph_logical_tensor_is_equal": [[318, "index-5"]], "opencl interoperability api api": [[319, "index-0"]], "dnnl_graph_ocl_allocate_f": [[319, "index-1"]], "dnnl_graph_ocl_deallocate_f": [[319, "index-2"]], "dnnl_graph_ocl_interop_allocator_create": [[319, "index-3"]], "dnnl_graph_ocl_interop_compiled_partition_execute": [[319, "index-6"]], "dnnl_graph_ocl_interop_make_engine_from_cache_blob_with_allocator": [[319, "index-5"]], "dnnl_graph_ocl_interop_make_engine_with_allocator": [[319, "index-4"]], "const_dnnl_graph_op_t": [[320, "index-2"]], "dnnl_graph_op_add_input": [[320, "index-5"]], "dnnl_graph_op_add_output": [[320, "index-6"]], "dnnl_graph_op_create": [[320, "index-3"]], "dnnl_graph_op_destroy": [[320, "index-4"]], "dnnl_graph_op_get_id": [[320, "index-11"]], "dnnl_graph_op_get_kind": [[320, "index-12"]], "dnnl_graph_op_set_attr_bool": [[320, "index-8"]], "dnnl_graph_op_set_attr_f32": [[320, "index-7"]], "dnnl_graph_op_set_attr_s64": [[320, "index-9"]], "dnnl_graph_op_set_attr_str": [[320, "index-10"]], "dnnl_graph_op_t": [[320, "index-1"]], "const_dnnl_graph_partition_t": [[321, "index-2"]], "dnnl_graph_partition_compile": [[321, "index-8"]], "dnnl_graph_partition_create_with_op": [[321, "index-3"]], "dnnl_graph_partition_destroy": [[321, "index-4"]], "dnnl_graph_partition_get_engine_kind": [[321, "index-14"]], "dnnl_graph_partition_get_id": [[321, "index-7"]], "dnnl_graph_partition_get_input_ports": [[321, "index-10"]], "dnnl_graph_partition_get_input_ports_num": [[321, "index-9"]], "dnnl_graph_partition_get_op_num": [[321, "index-5"]], "dnnl_graph_partition_get_ops": [[321, "index-6"]], "dnnl_graph_partition_get_output_ports": [[321, "index-12"]], "dnnl_graph_partition_get_output_ports_num": [[321, "index-11"]], "dnnl_graph_partition_is_supported": [[321, "index-13"]], "dnnl_graph_partition_t": [[321, "index-1"]], "dnnl_graph_sycl_allocate_f": [[323, "index-1"]], "dnnl_graph_sycl_deallocate_f": [[323, "index-2"]], "dnnl_graph_sycl_interop_allocator_create": [[323, "index-3"]], "dnnl_graph_sycl_interop_compiled_partition_execute": [[323, "index-5"]], "dnnl_graph_sycl_interop_make_engine_with_allocator": [[323, "index-4"]], "const_dnnl_graph_tensor_t": [[324, "index-2"]], "dnnl_graph_tensor_create": [[324, "index-3"]], "dnnl_graph_tensor_destroy": [[324, "index-4"]], "dnnl_graph_tensor_get_data_handle": [[324, "index-5"]], "dnnl_graph_tensor_get_engine": [[324, "index-7"]], "dnnl_graph_tensor_set_data_handle": [[324, "index-6"]], "dnnl_graph_tensor_t": [[324, "index-1"]], "dnnl": [[328, "index-0"]], "dnnl::graph": [[329, "index-0"]], "dnnl::graph::ocl_interop": [[330, "index-0"]], "make_allocator": [[330, "index-1"], [331, "index-1"]], "dnnl::graph::sycl_interop": [[331, "index-0"]], "dnnl::ocl_interop": [[332, "index-0"]], "get_command_queue": [[332, "index-9"]], "get_context": [[332, "index-6"], [333, "index-3"]], "get_device": [[332, "index-7"], [333, "index-4"]], "get_engine_cache_blob": [[332, "index-3"]], "get_engine_cache_blob_id": [[332, "index-2"]], "get_mem_object": [[332, "index-10"]], "get_memory_kind": [[332, "index-12"], [333, "index-9"]], "make_engine": [[332, "index-4"], [332, "index-5"], [333, "index-2"]], "make_memory": [[332, "index-13"], [332, "index-14"], [333, "index-10"], [333, "index-11"]], "make_stream": [[332, "index-8"], [333, "index-5"], [334, "index-1"]], "set_mem_object": [[332, "index-11"]], "dnnl::sycl_interop": [[333, "index-0"]], "get_buffer": [[333, "index-7"]], "get_queue": [[333, "index-6"]], "set_buffer": [[333, "index-8"]], "dnnl::threadpool_interop": [[334, "index-0"]], "get_threadpool": [[334, "index-2"]], "dnnl::ukernel": [[335, "index-0"]], "oneapi": [[336, "index-0"]], "std": [[337, "index-0"]], "sycl": [[338, "index-0"]], "augru rnn primitive example": [[340, "index-0"]], "batch normalization primitive example": [[342, "index-0"]], "binary primitive example": [[344, "index-0"]], "bnorm u8 by binary post-ops example": [[346, "index-0"]], "cnn f32 inference example": [[348, "index-0"], [349, "index-0"]], "cnn int8 inference example": [[350, "index-0"]], "cnn bf16 training example": [[351, "index-0"]], "cnn f32 training example": [[352, "index-0"], [358, "index-0"]], "concat primitive example": [[353, "index-0"]], "convolution primitive example": [[355, "index-0"]], "brgemm ukernel example": [[357, "index-0"]], "matmul primitive example": [[359, "index-0"], [362, "index-0"], [392, "index-0"]], "matmul tutorial: quantization": [[360, "index-0"]], "rnn f32 inference example": [[363, "index-0"]], "rnn int8 inference example": [[364, "index-0"]], "matmul tutorial: comparison with sgemm": [[365, "index-0"]], "reorder between cpu and gpu engines": [[367, "index-0"], [368, "index-0"]], "element-wise primitive example": [[369, "index-0"]], "getting started": [[371, "index-0"]], "getting started on gpu with opencl extensions api": [[372, "index-0"]], "getting started on cpu with graph api": [[373, "index-0"]], "convolution int8 inference example with graph api": [[374, "index-0"]], "single op partition on cpu": [[375, "index-0"]], "getting started with opencl extensions and graph api": [[376, "index-0"]], "getting started with sycl extensions api and graph api": [[377, "index-0"]], "single op partition on gpu": [[378, "index-0"]], "group normalization primitive example": [[379, "index-0"]], "matmul tutorial: int8 inference": [[381, "index-0"]], "inner product primitive example": [[383, "index-0"]], "layer normalization primitive example": [[385, "index-0"]], "legal information": [[387, "index-0"]], "local response normalization primitive example": [[388, "index-0"]], "lstm rnn primitive example": [[390, "index-0"]], "memory format propagation": [[394, "index-0"]], "performance profiling example": [[395, "index-0"]], "pooling primitive example": [[396, "index-0"]], "primitive example": [[398, "index-0"]], "reduction primitive example": [[400, "index-0"]], "reorder primitive example": [[402, "index-0"]], "resampling primitive example": [[404, "index-0"]], "rnn f32 training example": [[406, "index-0"]], "shuffle primitive example": [[407, "index-0"]], "softmax primitive example": [[409, "index-0"]], "sum primitive example": [[411, "index-0"]], "getting started on both cpu and gpu with sycl extensions api": [[413, "index-0"]], "todo list": [[414, "index-0"]], "matmul tutorial: weights decompression": [[415, "index-0"]], "args_t": [[419, "index-0"]], "struct": [[419, "index-0"], [420, "index-0"], [421, "index-0"], [422, "index-0"], [423, "index-0"], [424, "index-0"], [425, "index-0"], [426, "index-0"], [427, "index-0"], [428, "index-0"], [429, "index-0"], [430, "index-0"], [431, "index-0"], [432, "index-0"], [433, "index-0"], [434, "index-0"], [435, "index-0"], [436, "index-0"], [437, "index-0"], [438, "index-0"], [439, "index-0"], [440, "index-0"], [441, "index-0"], [442, "index-0"], [443, "index-0"], [444, "index-0"], [445, "index-0"], [446, "index-0"], [447, "index-0"], [448, "index-0"], [449, "index-0"], [450, "index-0"], [451, "index-0"], [452, "index-0"], [453, "index-0"], [454, "index-0"], [455, "index-0"], [456, "index-0"], [457, "index-0"], [458, "index-0"], [459, "index-0"], [460, "index-0"], [461, "index-0"], [462, "index-0"], [463, "index-0"], [464, "index-0"], [465, "index-0"], [466, "index-0"], [467, "index-0"], [468, "index-0"], [469, "index-0"], [470, "index-0"], [471, "index-0"], [472, "index-0"], [473, "index-0"], [474, "index-0"], [475, "index-0"], [476, "index-0"], [477, "index-0"], [478, "index-0"], [479, "index-0"], [480, "index-0"], [481, "index-0"], [482, "index-0"], [483, "index-0"], [484, "index-0"], [485, "index-0"], [486, "index-0"], [487, "index-0"], [488, "index-0"], [489, "index-0"], [490, "index-0"], [491, "index-0"], [492, "index-0"], [493, "index-0"], [494, "index-0"], [495, "index-0"], [496, "index-0"], [497, "index-0"], [498, "index-0"], [499, "index-0"], [500, "index-0"], [501, "index-0"], [502, "index-0"], [503, "index-0"], [504, "index-0"], [505, "index-0"], [506, "index-0"], [507, "index-0"], [508, "index-0"], [509, "index-0"], [510, "index-0"], [511, "index-0"], [512, "index-0"], [513, "index-0"], [514, "index-0"], [515, "index-0"], [516, "index-0"], [517, "index-0"], [518, "index-0"], [519, "index-0"], [520, "index-0"], [521, "index-0"], [522, "index-0"], [523, "index-0"], [524, "index-0"], [525, "index-0"], [526, "index-0"], [527, "index-0"], [528, "index-0"], [529, "index-0"], [530, "index-0"], [531, "index-0"], [532, "index-0"], [533, "index-0"], [534, "index-0"], [535, "index-0"], [536, "index-0"], [537, "index-0"], [538, "index-0"], [539, "index-0"], [540, "index-0"], [541, "index-0"], [542, "index-0"], [543, "index-0"], [544, "index-0"], [545, "index-0"], [546, "index-0"], [547, "index-0"]], "cpu_deletor": [[420, "index-0"]], "augru_backward": [[421, "index-1"], [421, "index-2"], [421, "index-3"]], "dnnl::augru_backward": [[421, "index-0"]], "attention_desc": [[422, "index-6"], [424, "index-6"], [478, "index-6"], [480, "index-6"]], "bias_desc": [[422, "index-9"], [424, "index-9"], [440, "index-10"], [446, "index-10"], [462, "index-8"], [464, "index-8"], [472, "index-8"], [478, "index-9"], [480, "index-9"], [482, "index-8"], [484, "index-8"], [490, "index-13"], [492, "index-13"], [494, "index-7"], [524, "index-11"], [541, "index-9"], [543, "index-9"]], "diff_attention_desc": [[422, "index-15"], [478, "index-15"]], "diff_bias_desc": [[422, "index-18"], [438, "index-10"], [444, "index-10"], [462, "index-16"], [470, "index-8"], [478, "index-18"], [482, "index-16"], [490, "index-25"], [524, "index-23"], [541, "index-17"]], "diff_dst_iter_desc": [[422, "index-20"], [462, "index-18"], [478, "index-20"], [482, "index-18"], [490, "index-27"], [524, "index-25"], [541, "index-19"]], "diff_dst_layer_desc": [[422, "index-19"], [462, "index-17"], [478, "index-19"], [482, "index-17"], [490, "index-26"], [524, "index-24"], [541, "index-18"]], "diff_src_iter_desc": [[422, "index-14"], [462, "index-13"], [478, "index-14"], [482, "index-13"], [490, "index-19"], [524, "index-17"], [541, "index-14"]], "diff_src_layer_desc": [[422, "index-13"], [462, "index-12"], [478, "index-13"], [482, "index-12"], [490, "index-18"], [524, "index-15"], [541, "index-13"]], "diff_weights_iter_desc": [[422, "index-17"], [462, "index-15"], [478, "index-17"], [482, "index-15"], [490, "index-22"], [524, "index-20"], [541, "index-16"]], "diff_weights_layer_desc": [[422, "index-16"], [462, "index-14"], [478, "index-16"], [482, "index-14"], [490, "index-21"], [524, "index-19"], [541, "index-15"]], "dnnl::augru_backward::primitive_desc": [[422, "index-0"]], "dst_iter_desc": [[422, "index-11"], [424, "index-11"], [462, "index-10"], [464, "index-10"], [478, "index-11"], [480, "index-11"], [482, "index-10"], [484, "index-10"], [490, "index-15"], [492, "index-15"], [524, "index-13"], [541, "index-11"], [543, "index-11"]], "dst_layer_desc": [[422, "index-10"], [424, "index-10"], [462, "index-9"], [464, "index-9"], [478, "index-10"], [480, "index-10"], [482, "index-9"], [484, "index-9"], [490, "index-14"], [492, "index-14"], [524, "index-12"], [541, "index-10"], [543, "index-10"]], "get_cell_kind": [[422, "index-21"], [424, "index-13"], [462, "index-19"], [464, "index-12"], [478, "index-21"], [480, "index-13"], [482, "index-19"], [484, "index-12"], [490, "index-29"], [492, "index-18"], [515, "index-18"], [541, "index-20"], [543, "index-13"]], "get_direction": [[422, "index-23"], [424, "index-15"], [462, "index-21"], [464, "index-14"], [478, "index-23"], [480, "index-15"], [482, "index-21"], [484, "index-14"], [490, "index-31"], [492, "index-20"], [515, "index-19"], [541, "index-23"], [543, "index-16"]], "get_prop_kind": [[422, "index-22"], [424, "index-14"], [426, "index-13"], [428, "index-10"], [436, "index-9"], [438, "index-12"], [440, "index-12"], [442, "index-9"], [444, "index-12"], [446, "index-12"], [448, "index-10"], [450, "index-9"], [458, "index-13"], [460, "index-10"], [462, "index-20"], [464, "index-13"], [468, "index-7"], [470, "index-9"], [472, "index-9"], [474, "index-16"], [476, "index-13"], [478, "index-22"], [480, "index-14"], [482, "index-20"], [484, "index-13"], [486, "index-8"], [488, "index-8"], [490, "index-30"], [492, "index-19"], [500, "index-8"], [502, "index-8"], [506, "index-7"], [508, "index-6"], [515, "index-23"], [526, "index-6"], [528, "index-6"], [530, "index-8"], [532, "index-7"], [541, "index-21"], [543, "index-14"]], "primitive_desc": [[422, "index-1"], [422, "index-2"], [422, "index-3"], [424, "index-1"], [424, "index-2"], [424, "index-3"], [426, "index-1"], [426, "index-2"], [426, "index-3"], [428, "index-1"], [428, "index-2"], [428, "index-3"], [430, "index-1"], [430, "index-2"], [430, "index-3"], [434, "index-1"], [434, "index-2"], [434, "index-3"], [434, "index-4"], [436, "index-1"], [436, "index-2"], [436, "index-3"], [436, "index-4"], [438, "index-1"], [438, "index-2"], [438, "index-3"], [438, "index-4"], [438, "index-5"], [438, "index-6"], [440, "index-1"], [440, "index-2"], [440, "index-3"], [440, "index-4"], [440, "index-5"], [440, "index-6"], [442, "index-1"], [442, "index-2"], [442, "index-3"], [442, "index-4"], [444, "index-1"], [444, "index-2"], [444, "index-3"], [444, "index-4"], [444, "index-5"], [444, "index-6"], [446, "index-1"], [446, "index-2"], [446, "index-3"], [446, "index-4"], [446, "index-5"], [446, "index-6"], [448, "index-1"], [448, "index-2"], [448, "index-3"], [448, "index-4"], [448, "index-5"], [450, "index-1"], [450, "index-2"], [450, "index-3"], [450, "index-4"], [450, "index-5"], [458, "index-1"], [458, "index-2"], [458, "index-3"], [460, "index-1"], [460, "index-2"], [460, "index-3"], [462, "index-1"], [462, "index-2"], [462, "index-3"], [464, "index-1"], [464, "index-2"], [464, "index-3"], [468, "index-1"], [468, "index-2"], [468, "index-3"], [470, "index-1"], [470, "index-2"], [470, "index-3"], [470, "index-4"], [472, "index-1"], [472, "index-2"], [472, "index-3"], [472, "index-4"], [474, "index-1"], [474, "index-2"], [474, "index-3"], [474, "index-4"], [474, "index-5"], [474, "index-6"], [476, "index-1"], [476, "index-2"], [476, "index-3"], [476, "index-4"], [476, "index-5"], [476, "index-6"], [478, "index-1"], [478, "index-2"], [478, "index-3"], [480, "index-1"], [480, "index-2"], [480, "index-3"], [482, "index-1"], [482, "index-2"], [482, "index-3"], [484, "index-1"], [484, "index-2"], [484, "index-3"], [486, "index-1"], [486, "index-2"], [486, "index-3"], [488, "index-1"], [488, "index-2"], [488, "index-3"], [490, "index-1"], [490, "index-2"], [490, "index-3"], [490, "index-4"], [490, "index-5"], [492, "index-1"], [492, "index-2"], [492, "index-3"], [492, "index-4"], [492, "index-5"], [494, "index-1"], [494, "index-2"], [494, "index-3"], [494, "index-4"], [500, "index-1"], [500, "index-2"], [500, "index-3"], [502, "index-1"], [502, "index-2"], [502, "index-3"], [506, "index-1"], [506, "index-2"], [506, "index-3"], [508, "index-1"], [508, "index-2"], [508, "index-3"], [517, "index-1"], [517, "index-2"], [517, "index-3"], [519, "index-1"], [519, "index-2"], [519, "index-3"], [519, "index-4"], [521, "index-1"], [521, "index-2"], [521, "index-3"], [521, "index-4"], [523, "index-1"], [523, "index-2"], [523, "index-3"], [523, "index-4"], [523, "index-5"], [526, "index-1"], [526, "index-2"], [526, "index-3"], [528, "index-1"], [528, "index-2"], [528, "index-3"], [530, "index-1"], [530, "index-2"], [530, "index-3"], [532, "index-1"], [532, "index-2"], [532, "index-3"], [536, "index-1"], [536, "index-2"], [536, "index-3"], [536, "index-4"], [541, "index-1"], [541, "index-2"], [541, "index-3"], [541, "index-4"], [543, "index-1"], [543, "index-2"], [543, "index-3"], [543, "index-4"]], "src_iter_desc": [[422, "index-5"], [424, "index-5"], [462, "index-5"], [464, "index-5"], [478, "index-5"], [480, "index-5"], [482, "index-5"], [484, "index-5"], [490, "index-7"], [492, "index-7"], [524, "index-5"], [541, "index-6"], [543, "index-6"]], "src_layer_desc": [[422, "index-4"], [424, "index-4"], [462, "index-4"], [464, "index-4"], [478, "index-4"], [480, "index-4"], [482, "index-4"], [484, "index-4"], [490, "index-6"], [492, "index-6"], [524, "index-3"], [541, "index-5"], [543, "index-5"]], "weights_iter_desc": [[422, "index-8"], [424, "index-8"], [462, "index-7"], [464, "index-7"], [478, "index-8"], [480, "index-8"], [482, "index-7"], [484, "index-7"], [490, "index-10"], [492, "index-10"], [524, "index-8"], [541, "index-8"], [543, "index-8"]], "weights_layer_desc": [[422, "index-7"], [424, "index-7"], [462, "index-6"], [464, "index-6"], [478, "index-7"], [480, "index-7"], [482, "index-6"], [484, "index-6"], [490, "index-9"], [492, "index-9"], [524, "index-7"], [541, "index-7"], [543, "index-7"]], "workspace_desc": [[422, "index-12"], [424, "index-12"], [426, "index-12"], [428, "index-7"], [458, "index-12"], [460, "index-7"], [462, "index-11"], [464, "index-11"], [474, "index-15"], [476, "index-10"], [478, "index-12"], [480, "index-12"], [482, "index-11"], [484, "index-11"], [486, "index-6"], [488, "index-6"], [490, "index-17"], [492, "index-17"], [500, "index-6"], [502, "index-6"], [515, "index-37"], [541, "index-12"], [543, "index-12"]], "augru_forward": [[423, "index-1"], [423, "index-2"], [423, "index-3"]], "dnnl::augru_forward": [[423, "index-0"]], "dnnl::augru_forward::primitive_desc": [[424, "index-0"]], "batch_normalization_backward": [[425, "index-1"], [425, "index-2"], [425, "index-3"]], "dnnl::batch_normalization_backward": [[425, "index-0"]], "diff_dst_desc": [[426, "index-8"], [436, "index-7"], [438, "index-9"], [442, "index-7"], [444, "index-9"], [448, "index-8"], [458, "index-8"], [468, "index-6"], [470, "index-7"], [474, "index-11"], [486, "index-5"], [500, "index-5"], [506, "index-6"], [515, "index-29"], [515, "index-35"], [521, "index-6"], [526, "index-5"], [530, "index-6"]], "diff_src_desc": [[426, "index-7"], [436, "index-5"], [442, "index-5"], [448, "index-7"], [458, "index-7"], [468, "index-4"], [474, "index-10"], [486, "index-4"], [500, "index-4"], [506, "index-5"], [515, "index-28"], [515, "index-34"], [521, "index-5"], [526, "index-4"], [530, "index-5"]], "diff_weights_desc": [[426, "index-9"], [438, "index-8"], [444, "index-8"], [458, "index-9"], [470, "index-6"], [474, "index-12"], [515, "index-30"], [515, "index-36"]], "dnnl::batch_normalization_backward::primitive_desc": [[426, "index-0"]], "dst_desc": [[426, "index-6"], [428, "index-5"], [430, "index-7"], [434, "index-6"], [440, "index-9"], [446, "index-9"], [450, "index-7"], [458, "index-6"], [460, "index-5"], [472, "index-7"], [474, "index-9"], [476, "index-8"], [488, "index-5"], [494, "index-8"], [502, "index-5"], [508, "index-5"], [515, "index-26"], [515, "index-32"], [517, "index-5"], [519, "index-8"], [523, "index-7"], [528, "index-5"], [530, "index-4"], [532, "index-5"], [536, "index-6"]], "get_epsilon": [[426, "index-14"], [428, "index-11"], [458, "index-15"], [460, "index-12"], [474, "index-17"], [476, "index-14"], [515, "index-8"], [517, "index-7"]], "get_flags": [[426, "index-15"], [428, "index-12"], [458, "index-16"], [460, "index-13"], [474, "index-18"], [476, "index-15"], [515, "index-9"], [537, "index-5"]], "mean_desc": [[426, "index-10"], [428, "index-8"], [458, "index-10"], [460, "index-8"], [474, "index-13"], [476, "index-11"]], "src_desc": [[426, "index-4"], [428, "index-4"], [430, "index-4"], [434, "index-5"], [438, "index-7"], [440, "index-7"], [444, "index-7"], [446, "index-7"], [448, "index-6"], [450, "index-6"], [458, "index-4"], [460, "index-4"], [470, "index-5"], [472, "index-5"], [474, "index-7"], [476, "index-7"], [488, "index-4"], [494, "index-5"], [502, "index-4"], [506, "index-4"], [508, "index-4"], [515, "index-25"], [515, "index-31"], [517, "index-4"], [519, "index-7"], [523, "index-6"], [528, "index-4"], [532, "index-4"], [536, "index-5"]], "variance_desc": [[426, "index-11"], [428, "index-9"], [458, "index-11"], [460, "index-9"], [474, "index-14"], [476, "index-12"]], "weights_desc": [[426, "index-5"], [428, "index-6"], [436, "index-6"], [440, "index-8"], [442, "index-6"], [446, "index-8"], [458, "index-5"], [460, "index-6"], [468, "index-5"], [472, "index-6"], [474, "index-8"], [476, "index-9"], [494, "index-6"], [515, "index-27"], [515, "index-33"]], "batch_normalization_forward": [[427, "index-1"], [427, "index-2"], [427, "index-3"]], "dnnl::batch_normalization_forward": [[427, "index-0"]], "dnnl::batch_normalization_forward::primitive_desc": [[428, "index-0"]], "dnnl::binary": [[429, "index-0"]], "dnnl::binary::primitive_desc": [[430, "index-0"]], "get_algorithm": [[430, "index-8"], [436, "index-8"], [438, "index-11"], [440, "index-11"], [442, "index-8"], [444, "index-11"], [446, "index-11"], [448, "index-9"], [450, "index-8"], [486, "index-7"], [488, "index-7"], [500, "index-7"], [502, "index-7"], [515, "index-10"], [517, "index-8"], [530, "index-7"], [532, "index-6"]], "src0_desc": [[430, "index-5"]], "src1_desc": [[430, "index-6"]], "dnnl_brgemm": [[431, "index-0"]], "dnnl_brgemm_pack_b": [[432, "index-0"]], "dnnl::concat": [[433, "index-0"]], "dnnl::concat::primitive_desc": [[434, "index-0"]], "primitive_desc_base": [[434, "index-10"], [434, "index-7"], [434, "index-8"], [434, "index-9"], [514, "index-2"], [514, "index-3"], [514, "index-4"], [514, "index-5"], [519, "index-10"], [519, "index-11"], [519, "index-12"], [519, "index-9"], [536, "index-10"], [536, "index-7"], [536, "index-8"], [536, "index-9"]], "convolution_backward_data": [[435, "index-1"], [435, "index-2"], [435, "index-3"]], "dnnl::convolution_backward_data": [[435, "index-0"]], "dnnl::convolution_backward_data::primitive_desc": [[436, "index-0"]], "get_dilations": [[436, "index-11"], [438, "index-14"], [440, "index-14"], [442, "index-11"], [444, "index-14"], [446, "index-14"], [500, "index-11"], [502, "index-11"], [515, "index-5"]], "get_padding_l": [[436, "index-12"], [438, "index-15"], [440, "index-15"], [442, "index-12"], [444, "index-15"], [446, "index-15"], [500, "index-12"], [502, "index-12"], [515, "index-6"]], "get_padding_r": [[436, "index-13"], [438, "index-16"], [440, "index-16"], [442, "index-13"], [444, "index-16"], [446, "index-16"], [500, "index-13"], [502, "index-13"], [515, "index-7"]], "convolution_backward_weights": [[437, "index-1"], [437, "index-2"], [437, "index-3"]], "dnnl::convolution_backward_weights": [[437, "index-0"]], "dnnl::convolution_backward_weights::primitive_desc": [[438, "index-0"]], "convolution_forward": [[439, "index-1"], [439, "index-2"], [439, "index-3"]], "dnnl::convolution_forward": [[439, "index-0"]], "dnnl::convolution_forward::primitive_desc": [[440, "index-0"]], "deconvolution_backward_data": [[441, "index-1"], [441, "index-2"], [441, "index-3"]], "dnnl::deconvolution_backward_data": [[441, "index-0"]], "dnnl::deconvolution_backward_data::primitive_desc": [[442, "index-0"]], "deconvolution_backward_weights": [[443, "index-1"], [443, "index-2"], [443, "index-3"]], "dnnl::deconvolution_backward_weights": [[443, "index-0"]], "dnnl::deconvolution_backward_weights::primitive_desc": [[444, "index-0"]], "deconvolution_forward": [[445, "index-1"], [445, "index-2"], [445, "index-3"]], "dnnl::deconvolution_forward": [[445, "index-0"]], "dnnl::deconvolution_forward::primitive_desc": [[446, "index-0"]], "dnnl::eltwise_backward": [[447, "index-0"]], "eltwise_backward": [[447, "index-1"], [447, "index-2"], [447, "index-3"]], "dnnl::eltwise_backward::primitive_desc": [[448, "index-0"]], "get_alpha": [[448, "index-11"], [450, "index-10"], [486, "index-9"], [488, "index-9"], [515, "index-11"], [541, "index-24"], [543, "index-17"]], "get_beta": [[448, "index-12"], [450, "index-11"], [486, "index-10"], [488, "index-10"], [515, "index-12"], [541, "index-25"], [543, "index-18"]], "dnnl::eltwise_forward": [[449, "index-0"]], "eltwise_forward": [[449, "index-1"], [449, "index-2"], [449, "index-3"]], "dnnl::eltwise_forward::primitive_desc": [[450, "index-0"]], "dnnl_engine": [[451, "index-0"]], "dnnl::engine": [[452, "index-0"]], "get_count": [[452, "index-8"]], "get_kind": [[452, "index-3"], [510, "index-7"], [515, "index-41"]], "handle": [[452, "index-4"], [452, "index-5"], [452, "index-6"], [452, "index-7"], [465, "index-1"], [465, "index-2"], [465, "index-3"], [465, "index-4"], [496, "index-15"], [496, "index-16"], [496, "index-17"], [496, "index-18"], [510, "index-10"], [510, "index-11"], [510, "index-12"], [510, "index-13"], [534, "index-5"], [534, "index-6"], [534, "index-7"], [534, "index-8"]], "dnnl::error": [[453, "index-0"]], "error": [[453, "index-1"]], "what": [[453, "index-2"]], "wrap_c_api": [[453, "index-3"]], "arg": [[454, "index-1"]], "dnnl_exec_arg_t": [[454, "index-0"]], "dnnl_graph_inplace_pair_t": [[455, "index-0"]], "input_id": [[455, "index-1"]], "output_id": [[455, "index-2"]], "dnnl_graph_logical_tensor_t": [[456, "index-0"]], "id": [[456, "index-1"]], "layout_id": [[456, "index-8"]], "ndims": [[456, "index-2"]], "property": [[456, "index-5"]], "dnnl::group_normalization_backward": [[457, "index-0"]], "group_normalization_backward": [[457, "index-1"], [457, "index-2"], [457, "index-3"]], "dnnl::group_normalization_backward::primitive_desc": [[458, "index-0"]], "get_group_size": [[458, "index-14"], [460, "index-11"], [515, "index-22"], [526, "index-8"], [528, "index-8"]], "dnnl::group_normalization_forward": [[459, "index-0"]], "group_normalization_forward": [[459, "index-1"], [459, "index-2"], [459, "index-3"]], "dnnl::group_normalization_forward::primitive_desc": [[460, "index-0"]], "dnnl::gru_backward": [[461, "index-0"]], "gru_backward": [[461, "index-1"], [461, "index-2"], [461, "index-3"]], "dnnl::gru_backward::primitive_desc": [[462, "index-0"]], "dnnl::gru_forward": [[463, "index-0"]], "gru_forward": [[463, "index-1"], [463, "index-2"], [463, "index-3"]], "dnnl::gru_forward::primitive_desc": [[464, "index-0"]], "dnnl::handle": [[465, "index-0"]], "get": [[465, "index-8"]], "operator t": [[465, "index-9"]], "operator bool": [[465, "index-10"]], "operator!=": [[465, "index-12"], [498, "index-27"]], "operator==": [[465, "index-11"], [498, "index-26"]], "reset": [[465, "index-7"]], "dnnl::handle_traits": [[466, "index-0"]], "dnnl::inner_product_backward_data": [[467, "index-0"]], "inner_product_backward_data": [[467, "index-1"], [467, "index-2"], [467, "index-3"]], "dnnl::inner_product_backward_data::primitive_desc": [[468, "index-0"]], "dnnl::inner_product_backward_weights": [[469, "index-0"]], "inner_product_backward_weights": [[469, "index-1"], [469, "index-2"], [469, "index-3"]], "dnnl::inner_product_backward_weights::primitive_desc": [[470, "index-0"]], "dnnl::inner_product_forward": [[471, "index-0"]], "inner_product_forward": [[471, "index-1"], [471, "index-2"], [471, "index-3"]], "dnnl::inner_product_forward::primitive_desc": [[472, "index-0"]], "dnnl::layer_normalization_backward": [[473, "index-0"]], "layer_normalization_backward": [[473, "index-1"], [473, "index-2"], [473, "index-3"]], "dnnl::layer_normalization_backward::primitive_desc": [[474, "index-0"]], "dnnl::layer_normalization_forward": [[475, "index-0"]], "layer_normalization_forward": [[475, "index-1"], [475, "index-2"], [475, "index-3"]], "dnnl::layer_normalization_forward::primitive_desc": [[476, "index-0"]], "dnnl::lbr_augru_backward": [[477, "index-0"]], "lbr_augru_backward": [[477, "index-1"], [477, "index-2"], [477, "index-3"]], "dnnl::lbr_augru_backward::primitive_desc": [[478, "index-0"]], "dnnl::lbr_augru_forward": [[479, "index-0"]], "lbr_augru_forward": [[479, "index-1"], [479, "index-2"], [479, "index-3"]], "dnnl::lbr_augru_forward::primitive_desc": [[480, "index-0"]], "dnnl::lbr_gru_backward": [[481, "index-0"]], "lbr_gru_backward": [[481, "index-1"], [481, "index-2"], [481, "index-3"]], "dnnl::lbr_gru_backward::primitive_desc": [[482, "index-0"]], "dnnl::lbr_gru_forward": [[483, "index-0"]], "lbr_gru_forward": [[483, "index-1"], [483, "index-2"], [483, "index-3"]], "dnnl::lbr_gru_forward::primitive_desc": [[484, "index-0"]], "dnnl::lrn_backward": [[485, "index-0"]], "lrn_backward": [[485, "index-1"], [485, "index-2"], [485, "index-3"]], "dnnl::lrn_backward::primitive_desc": [[486, "index-0"]], "get_k": [[486, "index-12"], [488, "index-12"], [515, "index-15"]], "get_local_size": [[486, "index-11"], [488, "index-11"], [515, "index-14"]], "dnnl::lrn_forward": [[487, "index-0"]], "lrn_forward": [[487, "index-1"], [487, "index-2"], [487, "index-3"]], "dnnl::lrn_forward::primitive_desc": [[488, "index-0"]], "dnnl::lstm_backward": [[489, "index-0"]], "lstm_backward": [[489, "index-1"], [489, "index-2"], [489, "index-3"]], "diff_dst_iter_c_desc": [[490, "index-28"], [524, "index-26"]], "diff_src_iter_c_desc": [[490, "index-20"], [524, "index-18"]], "diff_weights_peephole_desc": [[490, "index-23"], [524, "index-21"]], "diff_weights_projection_desc": [[490, "index-24"], [524, "index-22"]], "dnnl::lstm_backward::primitive_desc": [[490, "index-0"]], "dst_iter_c_desc": [[490, "index-16"], [492, "index-16"], [524, "index-14"]], "src_iter_c_desc": [[490, "index-8"], [492, "index-8"], [524, "index-6"]], "weights_peephole_desc": [[490, "index-11"], [492, "index-11"], [524, "index-9"]], "weights_projection_desc": [[490, "index-12"], [492, "index-12"], [524, "index-10"]], "dnnl::lstm_forward": [[491, "index-0"]], "lstm_forward": [[491, "index-1"], [491, "index-2"], [491, "index-3"]], "dnnl::lstm_forward::primitive_desc": [[492, "index-0"]], "dnnl::matmul": [[493, "index-0"]], "dnnl::matmul::primitive_desc": [[494, "index-0"]], "dnnl_memory": [[495, "index-0"]], "data_type_size": [[496, "index-8"]], "dnnl::memory": [[496, "index-0"]], "get_desc": [[496, "index-9"]], "map_data": [[496, "index-13"]], "unmap_data": [[496, "index-14"]], "validate_dims": [[496, "index-7"]], "dnnl_memory_desc": [[497, "index-0"]], "desc": [[498, "index-1"], [498, "index-2"], [498, "index-3"], [498, "index-4"], [498, "index-5"]], "dnnl::memory::desc": [[498, "index-0"]], "get_blob": [[498, "index-24"]], "get_format_kind": [[498, "index-21"]], "get_inner_blks": [[498, "index-15"]], "get_inner_idxs": [[498, "index-16"]], "get_inner_nblks": [[498, "index-14"]], "get_ndims": [[498, "index-9"]], "get_nnz": [[498, "index-18"]], "get_num_handles": [[498, "index-17"]], "get_padded_dims": [[498, "index-10"]], "get_padded_offsets": [[498, "index-11"]], "get_size": [[498, "index-23"]], "get_sparse_encoding": [[498, "index-19"]], "get_submemory_offset": [[498, "index-12"]], "is_zero": [[498, "index-25"]], "permute_axes": [[498, "index-8"]], "reshape": [[498, "index-7"]], "submemory_desc": [[498, "index-6"]], "dnnl::pooling_backward": [[499, "index-0"]], "pooling_backward": [[499, "index-1"], [499, "index-2"], [499, "index-3"]], "dnnl::pooling_backward::primitive_desc": [[500, "index-0"]], "get_kernel": [[500, "index-10"], [502, "index-10"], [515, "index-21"]], "dnnl::pooling_forward": [[501, "index-0"]], "pooling_forward": [[501, "index-1"], [501, "index-2"], [501, "index-3"]], "dnnl::pooling_forward::primitive_desc": [[502, "index-0"]], "dnnl_post_ops": [[503, "index-0"]], "append_binary": [[504, "index-13"]], "append_dw": [[504, "index-11"]], "append_eltwise": [[504, "index-9"]], "append_prelu": [[504, "index-15"]], "append_sum": [[504, "index-5"]], "dnnl::post_ops": [[504, "index-0"]], "get_params_binary": [[504, "index-14"]], "get_params_dw": [[504, "index-12"]], "get_params_eltwise": [[504, "index-10"]], "get_params_prelu": [[504, "index-16"]], "get_params_sum": [[504, "index-6"], [504, "index-7"], [504, "index-8"]], "len": [[504, "index-3"]], "post_ops": [[504, "index-1"], [504, "index-2"]], "dnnl::prelu_backward": [[505, "index-0"]], "prelu_backward": [[505, "index-1"], [505, "index-2"], [505, "index-3"]], "dnnl::prelu_backward::primitive_desc": [[506, "index-0"]], "dnnl::prelu_forward": [[507, "index-0"]], "prelu_forward": [[507, "index-1"], [507, "index-2"], [507, "index-3"]], "dnnl::prelu_forward::primitive_desc": [[508, "index-0"]], "dnnl_primitive": [[509, "index-0"]], "dnnl::primitive": [[510, "index-0"]], "get_cache_blob": [[510, "index-8"]], "get_primitive_desc": [[510, "index-6"]], "primitive": [[510, "index-1"], [510, "index-2"], [510, "index-3"], [510, "index-4"], [510, "index-5"]], "dnnl_primitive_attr": [[511, "index-0"]], "dnnl::primitive_attr": [[512, "index-0"]], "get_accumulation_mode": [[512, "index-6"]], "get_deterministic": [[512, "index-8"]], "get_fpmath_mode": [[512, "index-3"], [512, "index-4"]], "get_post_ops": [[512, "index-16"]], "get_rnn_data_qparams": [[512, "index-19"]], "get_rnn_weights_projection_qparams": [[512, "index-23"]], "get_rnn_weights_qparams": [[512, "index-21"]], "get_scratchpad_mode": [[512, "index-10"]], "primitive_attr": [[512, "index-1"], [512, "index-2"]], "set_accumulation_mode": [[512, "index-7"]], "set_deterministic": [[512, "index-9"]], "set_fpmath_mode": [[512, "index-5"]], "set_post_ops": [[512, "index-17"]], "set_rnn_data_qparams": [[512, "index-18"]], "set_rnn_weights_projection_qparams": [[512, "index-22"]], "set_rnn_weights_qparams": [[512, "index-20"]], "set_scales": [[512, "index-13"]], "set_scales_mask": [[512, "index-12"]], "set_scratchpad_mode": [[512, "index-11"]], "set_zero_points": [[512, "index-15"]], "set_zero_points_mask": [[512, "index-14"]], "dnnl_primitive_desc": [[513, "index-0"]], "dnnl::primitive_desc": [[514, "index-0"]], "next_impl": [[514, "index-1"]], "dnnl::primitive_desc_base": [[515, "index-0"]], "get_activation_kind": [[515, "index-20"], [541, "index-22"], [543, "index-15"]], "get_axis": [[515, "index-13"], [526, "index-7"], [528, "index-7"], [530, "index-9"], [532, "index-8"]], "get_cache_blob_id": [[515, "index-42"]], "get_factors": [[515, "index-17"]], "get_p": [[515, "index-16"], [517, "index-6"]], "get_primitive_attr": [[515, "index-40"]], "query_md": [[515, "index-24"]], "query_s64": [[515, "index-3"]], "scratchpad_desc": [[515, "index-38"]], "dnnl::reduction": [[516, "index-0"]], "dnnl::reduction::primitive_desc": [[517, "index-0"]], "dnnl::reorder": [[518, "index-0"]], "dnnl::reorder::primitive_desc": [[519, "index-0"]], "get_dst_engine": [[519, "index-6"]], "get_src_engine": [[519, "index-5"]], "dnnl::resampling_backward": [[520, "index-0"]], "resampling_backward": [[520, "index-1"], [520, "index-2"], [520, "index-3"]], "dnnl::resampling_backward::primitive_desc": [[521, "index-0"]], "dnnl::resampling_forward": [[522, "index-0"]], "resampling_forward": [[522, "index-1"], [522, "index-2"], [522, "index-3"]], "dnnl::resampling_forward::primitive_desc": [[523, "index-0"]], "augru_attention_desc": [[524, "index-4"]], "diff_augru_attention_desc": [[524, "index-16"]], "dnnl::rnn_primitive_desc_base": [[524, "index-0"]], "rnn_primitive_desc_base": [[524, "index-1"], [524, "index-2"]], "dnnl::shuffle_backward": [[525, "index-0"]], "shuffle_backward": [[525, "index-1"], [525, "index-2"], [525, "index-3"]], "dnnl::shuffle_backward::primitive_desc": [[526, "index-0"]], "dnnl::shuffle_forward": [[527, "index-0"]], "shuffle_forward": [[527, "index-1"], [527, "index-2"], [527, "index-3"]], "dnnl::shuffle_forward::primitive_desc": [[528, "index-0"]], "dnnl::softmax_backward": [[529, "index-0"]], "softmax_backward": [[529, "index-1"], [529, "index-2"], [529, "index-3"]], "dnnl::softmax_backward::primitive_desc": [[530, "index-0"]], "dnnl::softmax_forward": [[531, "index-0"]], "softmax_forward": [[531, "index-1"], [531, "index-2"], [531, "index-3"]], "dnnl::softmax_forward::primitive_desc": [[532, "index-0"]], "dnnl_stream": [[533, "index-0"]], "dnnl::stream": [[534, "index-0"]], "wait": [[534, "index-4"]], "dnnl::sum": [[535, "index-0"]], "dnnl::sum::primitive_desc": [[536, "index-0"]], "asynchronous": [[537, "index-1"]], "dnnl::threadpool_interop::threadpool_iface": [[537, "index-0"]], "get_in_parallel": [[537, "index-3"]], "get_num_threads": [[537, "index-2"]], "parallel_for": [[537, "index-4"]], "brgemm": [[538, "index-1"], [538, "index-2"], [538, "index-3"]], "dnnl::ukernel::brgemm": [[538, "index-0"]], "generate": [[538, "index-6"], [539, "index-4"]], "get_scratchpad_size": [[538, "index-4"]], "release_hw_context": [[538, "index-9"]], "set_hw_context": [[538, "index-5"]], "brgemm_pack_b": [[539, "index-1"], [539, "index-2"]], "dnnl::ukernel::brgemm_pack_b": [[539, "index-0"]], "need_pack": [[539, "index-3"]], "dnnl::vanilla_rnn_backward": [[540, "index-0"]], "vanilla_rnn_backward": [[540, "index-1"], [540, "index-2"], [540, "index-3"]], "dnnl::vanilla_rnn_backward::primitive_desc": [[541, "index-0"]], "dnnl::vanilla_rnn_forward": [[542, "index-0"]], "vanilla_rnn_forward": [[542, "index-1"], [542, "index-2"], [542, "index-3"]], "dnnl::vanilla_rnn_forward::primitive_desc": [[543, "index-0"]], "cpu_runtime": [[544, "index-5"]], "dnnl_version_t": [[544, "index-0"]], "gpu_runtime": [[544, "index-6"]], "hash": [[544, "index-4"]], "major": [[544, "index-1"]], "minor": [[544, "index-2"]], "patch": [[544, "index-3"]], "example_allows_unimplemented": [[545, "index-0"]], "gemm_dims_t": [[546, "index-0"]], "sycl_deletor": [[547, "index-0"]]}})