Search.setIndex({"docnames": ["advanced_topics", "build_and_link", "class_dnnl_graph_allocator", "class_dnnl_graph_compiled_partition", "class_dnnl_graph_graph", "class_dnnl_graph_logical_tensor", "class_dnnl_graph_op", "class_dnnl_graph_partition", "class_dnnl_graph_tensor", "dev_guide_attributes", "dev_guide_attributes_fpmath_mode", "dev_guide_attributes_post_ops", "dev_guide_attributes_quantization", "dev_guide_attributes_scratchpad", "dev_guide_basic_concepts", "dev_guide_batch_normalization", "dev_guide_benchdnn", "dev_guide_binary", "dev_guide_build", "dev_guide_build_options", "dev_guide_c_and_cpp_apis", "dev_guide_concat", "dev_guide_conventions", "dev_guide_convolution", "dev_guide_cpu_dispatcher_control", "dev_guide_cpu_isa_hints", "dev_guide_data_types", "dev_guide_dpcpp_interoperability", "dev_guide_eltwise", "dev_guide_examples", "dev_guide_experimental", "dev_guide_graph_basic_concepts", "dev_guide_graph_compiler", "dev_guide_graph_dump", "dev_guide_graph_fusion_patterns", "dev_guide_graph_low_precision", "dev_guide_inference", "dev_guide_inference_and_training_aspects", "dev_guide_inference_int8", "dev_guide_inner_product", "dev_guide_inspecting_jit", "dev_guide_int8_computations", "dev_guide_layer_normalization", "dev_guide_link", "dev_guide_lrn", "dev_guide_matmul", "dev_guide_op_abs", "dev_guide_op_absbackward", "dev_guide_op_add", "dev_guide_op_avgpool", "dev_guide_op_avgpoolbackward", "dev_guide_op_batchnormforwardtraining", "dev_guide_op_batchnorminference", "dev_guide_op_batchnormtrainingbackward", "dev_guide_op_biasadd", "dev_guide_op_biasaddbackward", "dev_guide_op_clamp", "dev_guide_op_clampbackward", "dev_guide_op_concat", "dev_guide_op_convolution", "dev_guide_op_convolutionbackwarddata", "dev_guide_op_convolutionbackwardweights", "dev_guide_op_convtranspose", "dev_guide_op_convtransposebackwarddata", "dev_guide_op_convtransposebackwardweights", "dev_guide_op_dequantize", "dev_guide_op_divide", "dev_guide_op_dynamicdequantize", "dev_guide_op_dynamicquantize", "dev_guide_op_elu", "dev_guide_op_elubackward", "dev_guide_op_end", "dev_guide_op_exp", "dev_guide_op_gelu", "dev_guide_op_gelubackward", "dev_guide_op_hardsigmoid", "dev_guide_op_hardsigmoidbackward", "dev_guide_op_hardswish", "dev_guide_op_hardswishbackward", "dev_guide_op_interpolate", "dev_guide_op_interpolatebackward", "dev_guide_op_layernorm", "dev_guide_op_layernormbackward", "dev_guide_op_leakyrelu", "dev_guide_op_log", "dev_guide_op_logsoftmax", "dev_guide_op_logsoftmaxbackward", "dev_guide_op_matmul", "dev_guide_op_maximum", "dev_guide_op_maxpool", "dev_guide_op_maxpoolbackward", "dev_guide_op_minimum", "dev_guide_op_mish", "dev_guide_op_mishbackward", "dev_guide_op_multiply", "dev_guide_op_pow", "dev_guide_op_prelu", "dev_guide_op_prelubackward", "dev_guide_op_quantize", "dev_guide_op_reciprocal", "dev_guide_op_reducel1", "dev_guide_op_reducel2", "dev_guide_op_reducemax", "dev_guide_op_reducemean", "dev_guide_op_reducemin", "dev_guide_op_reduceprod", "dev_guide_op_reducesum", "dev_guide_op_relu", "dev_guide_op_relubackward", "dev_guide_op_reorder", "dev_guide_op_round", "dev_guide_op_select", "dev_guide_op_sigmoid", "dev_guide_op_sigmoidbackward", "dev_guide_op_softmax", "dev_guide_op_softmaxbackward", "dev_guide_op_softplus", "dev_guide_op_softplusbackward", "dev_guide_op_sqrt", "dev_guide_op_sqrtbackward", "dev_guide_op_square", "dev_guide_op_squareddifference", "dev_guide_op_staticreshape", "dev_guide_op_statictranspose", "dev_guide_op_subtract", "dev_guide_op_tanh", "dev_guide_op_tanhbackward", "dev_guide_op_typecast", "dev_guide_op_wildcard", "dev_guide_opencl_interoperability", "dev_guide_performance_settings", "dev_guide_persistent_cache", "dev_guide_pooling", "dev_guide_prelu", "dev_guide_primitive_cache", "dev_guide_profilers", "dev_guide_reduction", "dev_guide_reorder", "dev_guide_resampling", "dev_guide_rnn", "dev_guide_shuffle", "dev_guide_softmax", "dev_guide_sum", "dev_guide_threadpool", "dev_guide_training", "dev_guide_training_bf16", "dev_guide_transition_to_dnnl", "dev_guide_understanding_memory_formats", "dev_guide_verbose", "dev_guide_vtune", "enum_dnnl_alg_kind_t", "enum_dnnl_algorithm", "enum_dnnl_cpu_isa", "enum_dnnl_cpu_isa_hints", "enum_dnnl_cpu_isa_hints_t", "enum_dnnl_cpu_isa_t", "enum_dnnl_data_type_t", "enum_dnnl_engine_kind", "enum_dnnl_engine_kind_t", "enum_dnnl_format_kind_t", "enum_dnnl_format_tag_t", "enum_dnnl_fpmath_mode", "enum_dnnl_fpmath_mode_t", "enum_dnnl_graph_layout_type_t", "enum_dnnl_graph_logical_tensor_data_type", "enum_dnnl_graph_logical_tensor_layout_type", "enum_dnnl_graph_logical_tensor_property_type", "enum_dnnl_graph_op_attr", "enum_dnnl_graph_op_attr_t", "enum_dnnl_graph_op_kind", "enum_dnnl_graph_op_kind_t", "enum_dnnl_graph_partition_policy", "enum_dnnl_graph_partition_policy_t", "enum_dnnl_graph_status", "enum_dnnl_graph_tensor_property_t", "enum_dnnl_memory_data_type", "enum_dnnl_memory_format_kind", "enum_dnnl_memory_format_tag", "enum_dnnl_memory_sparse_encoding", "enum_dnnl_normalization_flags", "enum_dnnl_normalization_flags_t", "enum_dnnl_ocl_interop_memory_kind", "enum_dnnl_ocl_interop_memory_kind_t", "enum_dnnl_primitive_kind", "enum_dnnl_primitive_kind_t", "enum_dnnl_profiling_data_kind", "enum_dnnl_profiling_data_kind_t", "enum_dnnl_prop_kind", "enum_dnnl_prop_kind_t", "enum_dnnl_query", "enum_dnnl_query_t", "enum_dnnl_rnn_direction", "enum_dnnl_rnn_direction_t", "enum_dnnl_rnn_flags", "enum_dnnl_rnn_flags_t", "enum_dnnl_scratchpad_mode", "enum_dnnl_scratchpad_mode_t", "enum_dnnl_sparse_encoding_t", "enum_dnnl_status", "enum_dnnl_status_t", "enum_dnnl_stream_flags", "enum_dnnl_stream_flags_t", "enum_dnnl_sycl_interop_memory_kind", "enum_dnnl_sycl_interop_memory_kind_t", "example_augru.cpp", "example_batch_normalization.cpp", "example_binary.cpp", "example_bnorm_u8_via_binary_postops.cpp", "example_cnn_inference_f32.c", "example_cnn_inference_f32.cpp", "example_cnn_inference_int8.cpp", "example_cnn_training_bf16.cpp", "example_cnn_training_f32.cpp", "example_concat.cpp", "example_convolution.cpp", "example_cpu_cnn_training_f32.c", "example_cpu_matmul_quantization.cpp", "example_cpu_rnn_inference_f32.cpp", "example_cpu_rnn_inference_int8.cpp", "example_cpu_sgemm_and_matmul.cpp", "example_cross_engine_reorder.c", "example_cross_engine_reorder.cpp", "example_eltwise.cpp", "example_getting_started.cpp", "example_gpu_opencl_interop.cpp", "example_inference_int8_matmul.cpp", "example_inner_product.cpp", "example_layer_normalization.cpp", "example_lrn.cpp", "example_lstm.cpp", "example_matmul.cpp", "example_memory_format_propagation.cpp", "example_performance_profiling.cpp", "example_pooling.cpp", "example_prelu.cpp", "example_reduction.cpp", "example_reorder.cpp", "example_resampling.cpp", "example_rnn_training_f32.cpp", "example_shuffle.cpp", "example_softmax.cpp", "example_sum.cpp", "example_sycl_interop_buffer.cpp", "global", "graph_extension", "graph_programming_model", "graph_supported_operations", "group_dnnl_api", "group_dnnl_api_attributes", "group_dnnl_api_batch_normalization", "group_dnnl_api_binary", "group_dnnl_api_blas", "group_dnnl_api_common", "group_dnnl_api_concat", "group_dnnl_api_convolution", "group_dnnl_api_data_types", "group_dnnl_api_deconvolution", "group_dnnl_api_eltwise", "group_dnnl_api_engine", "group_dnnl_api_fpmath_mode", "group_dnnl_api_inner_product", "group_dnnl_api_interop", "group_dnnl_api_layer_normalization", "group_dnnl_api_lrn", "group_dnnl_api_matmul", "group_dnnl_api_memory", "group_dnnl_api_ocl_interop", "group_dnnl_api_pooling", "group_dnnl_api_prelu", "group_dnnl_api_primitive_cache", "group_dnnl_api_primitives", "group_dnnl_api_primitives_common", "group_dnnl_api_profiling", "group_dnnl_api_reduction", "group_dnnl_api_reorder", "group_dnnl_api_resampling", "group_dnnl_api_rnn", "group_dnnl_api_service", "group_dnnl_api_shuffle", "group_dnnl_api_softmax", "group_dnnl_api_stream", "group_dnnl_api_sum", "group_dnnl_api_sycl_interop", "group_dnnl_api_threadpool_interop", "group_dnnl_api_utils", "group_dnnl_graph_api", "group_dnnl_graph_api_allocator", "group_dnnl_graph_api_compiled_partition", "group_dnnl_graph_api_compiled_partition_cache", "group_dnnl_graph_api_constant_tensor_cache", "group_dnnl_graph_api_engine", "group_dnnl_graph_api_graph", "group_dnnl_graph_api_interop", "group_dnnl_graph_api_logical_tensor", "group_dnnl_graph_api_op", "group_dnnl_graph_api_partition", "group_dnnl_graph_api_status", "group_dnnl_graph_api_sycl_interop", "group_dnnl_graph_api_tensor", "group_dnnl_graph_api_utils", "index", "interop_with_dpcpp_and_opencl", "namespace_dnnl", "namespace_dnnl_graph", "namespace_dnnl_graph_sycl_interop", "namespace_dnnl_ocl_interop", "namespace_dnnl_sycl_interop", "namespace_dnnl_threadpool_interop", "namespace_oneapi", "namespace_std", "namespace_sycl", "orphans", "page_augru_example_cpp", "page_augru_example_cpp_short", "page_batch_normalization_example_cpp", "page_batch_normalization_example_cpp_short", "page_binary_example_cpp", "page_binary_example_cpp_short", "page_bnorm_u8_via_binary_postops_cpp", "page_bnorm_u8_via_binary_postops_cpp_short", "page_cnn_inference_f32_c", "page_cnn_inference_f32_cpp", "page_cnn_inference_int8_cpp", "page_cnn_training_bf16_cpp", "page_cnn_training_f32_cpp", "page_concat_example_cpp", "page_concat_example_cpp_short", "page_convolution_example_cpp", "page_convolution_example_cpp_short", "page_cpu_cnn_training_f32_c", "page_cpu_matmul_quantization_cpp", "page_cpu_matmul_quantization_cpp_short", "page_cpu_rnn_inference_f32_cpp", "page_cpu_rnn_inference_int8_cpp", "page_cpu_sgemm_and_matmul_cpp", "page_cpu_sgemm_and_matmul_cpp_short", "page_cross_engine_reorder_c", "page_cross_engine_reorder_cpp", "page_eltwise_example_cpp", "page_eltwise_example_cpp_short", "page_getting_started_cpp", "page_gpu_opencl_interop_cpp", "page_inference_int8_matmul_cpp", "page_inference_int8_matmul_cpp_short", "page_inner_product_example_cpp", "page_inner_product_example_cpp_short", "page_layer_normalization_example_cpp", "page_layer_normalization_example_cpp_short", "page_legal_information", "page_lrn_example_cpp", "page_lrn_example_cpp_short", "page_lstm_example_cpp", "page_lstm_example_cpp_short", "page_matmul_example_cpp", "page_matmul_example_cpp_short", "page_memory_format_propagation_cpp", "page_performance_profiling_cpp", "page_pooling_example_cpp", "page_pooling_example_cpp_short", "page_prelu_example_cpp", "page_prelu_example_cpp_short", "page_reduction_example_cpp", "page_reduction_example_cpp_short", "page_reorder_example_cpp", "page_reorder_example_cpp_short", "page_resampling_example_cpp", "page_resampling_example_cpp_short", "page_rnn_training_f32_cpp", "page_shuffle_example_cpp", "page_shuffle_example_cpp_short", "page_softmax_example_cpp", "page_softmax_example_cpp_short", "page_sum_example_cpp", "page_sum_example_cpp_short", "page_sycl_interop_buffer_cpp", "page_todo", "performance_profiling_and_inspection", "programming_model", "struct_args_t", "struct_dnnl_augru_backward", "struct_dnnl_augru_backward_primitive_desc", "struct_dnnl_augru_forward", "struct_dnnl_augru_forward_primitive_desc", "struct_dnnl_batch_normalization_backward", "struct_dnnl_batch_normalization_backward_primitive_desc", "struct_dnnl_batch_normalization_forward", "struct_dnnl_batch_normalization_forward_primitive_desc", "struct_dnnl_binary", "struct_dnnl_binary_primitive_desc", "struct_dnnl_concat", "struct_dnnl_concat_primitive_desc", "struct_dnnl_convolution_backward_data", "struct_dnnl_convolution_backward_data_primitive_desc", "struct_dnnl_convolution_backward_weights", "struct_dnnl_convolution_backward_weights_primitive_desc", "struct_dnnl_convolution_forward", "struct_dnnl_convolution_forward_primitive_desc", "struct_dnnl_deconvolution_backward_data", "struct_dnnl_deconvolution_backward_data_primitive_desc", "struct_dnnl_deconvolution_backward_weights", "struct_dnnl_deconvolution_backward_weights_primitive_desc", "struct_dnnl_deconvolution_forward", "struct_dnnl_deconvolution_forward_primitive_desc", "struct_dnnl_eltwise_backward", "struct_dnnl_eltwise_backward_primitive_desc", "struct_dnnl_eltwise_forward", "struct_dnnl_eltwise_forward_primitive_desc", "struct_dnnl_engine", "struct_dnnl_engine-2", "struct_dnnl_error", "struct_dnnl_exec_arg_t", "struct_dnnl_graph_inplace_pair_t", "struct_dnnl_graph_logical_tensor_t", "struct_dnnl_gru_backward", "struct_dnnl_gru_backward_primitive_desc", "struct_dnnl_gru_forward", "struct_dnnl_gru_forward_primitive_desc", "struct_dnnl_handle", "struct_dnnl_handle_traits", "struct_dnnl_inner_product_backward_data", "struct_dnnl_inner_product_backward_data_primitive_desc", "struct_dnnl_inner_product_backward_weights", "struct_dnnl_inner_product_backward_weights_primitive_desc", "struct_dnnl_inner_product_forward", "struct_dnnl_inner_product_forward_primitive_desc", "struct_dnnl_layer_normalization_backward", "struct_dnnl_layer_normalization_backward_primitive_desc", "struct_dnnl_layer_normalization_forward", "struct_dnnl_layer_normalization_forward_primitive_desc", "struct_dnnl_lbr_augru_backward", "struct_dnnl_lbr_augru_backward_primitive_desc", "struct_dnnl_lbr_augru_forward", "struct_dnnl_lbr_augru_forward_primitive_desc", "struct_dnnl_lbr_gru_backward", "struct_dnnl_lbr_gru_backward_primitive_desc", "struct_dnnl_lbr_gru_forward", "struct_dnnl_lbr_gru_forward_primitive_desc", "struct_dnnl_lrn_backward", "struct_dnnl_lrn_backward_primitive_desc", "struct_dnnl_lrn_forward", "struct_dnnl_lrn_forward_primitive_desc", "struct_dnnl_lstm_backward", "struct_dnnl_lstm_backward_primitive_desc", "struct_dnnl_lstm_forward", "struct_dnnl_lstm_forward_primitive_desc", "struct_dnnl_matmul", "struct_dnnl_matmul_primitive_desc", "struct_dnnl_memory", "struct_dnnl_memory-2", "struct_dnnl_memory_desc", "struct_dnnl_memory_desc-2", "struct_dnnl_pooling_backward", "struct_dnnl_pooling_backward_primitive_desc", "struct_dnnl_pooling_forward", "struct_dnnl_pooling_forward_primitive_desc", "struct_dnnl_post_ops", "struct_dnnl_post_ops-2", "struct_dnnl_prelu_backward", "struct_dnnl_prelu_backward_primitive_desc", "struct_dnnl_prelu_forward", "struct_dnnl_prelu_forward_primitive_desc", "struct_dnnl_primitive", "struct_dnnl_primitive-2", "struct_dnnl_primitive_attr", "struct_dnnl_primitive_attr-2", "struct_dnnl_primitive_desc", "struct_dnnl_primitive_desc-2", "struct_dnnl_primitive_desc_base", "struct_dnnl_reduction", "struct_dnnl_reduction_primitive_desc", "struct_dnnl_reorder", "struct_dnnl_reorder_primitive_desc", "struct_dnnl_resampling_backward", "struct_dnnl_resampling_backward_primitive_desc", "struct_dnnl_resampling_forward", "struct_dnnl_resampling_forward_primitive_desc", "struct_dnnl_rnn_primitive_desc_base", "struct_dnnl_shuffle_backward", "struct_dnnl_shuffle_backward_primitive_desc", "struct_dnnl_shuffle_forward", "struct_dnnl_shuffle_forward_primitive_desc", "struct_dnnl_softmax_backward", "struct_dnnl_softmax_backward_primitive_desc", "struct_dnnl_softmax_forward", "struct_dnnl_softmax_forward_primitive_desc", "struct_dnnl_stream", "struct_dnnl_stream-2", "struct_dnnl_sum", "struct_dnnl_sum_primitive_desc", "struct_dnnl_threadpool_interop_threadpool_iface", "struct_dnnl_vanilla_rnn_backward", "struct_dnnl_vanilla_rnn_backward_primitive_desc", "struct_dnnl_vanilla_rnn_forward", "struct_dnnl_vanilla_rnn_forward_primitive_desc", "struct_dnnl_version_t", "struct_example_allows_unimplemented", "struct_gemm_dims_t", "supported_primitives"], "filenames": ["advanced_topics.rst", "build_and_link.rst", "class_dnnl_graph_allocator.rst", "class_dnnl_graph_compiled_partition.rst", "class_dnnl_graph_graph.rst", "class_dnnl_graph_logical_tensor.rst", "class_dnnl_graph_op.rst", "class_dnnl_graph_partition.rst", "class_dnnl_graph_tensor.rst", "dev_guide_attributes.rst", "dev_guide_attributes_fpmath_mode.rst", "dev_guide_attributes_post_ops.rst", "dev_guide_attributes_quantization.rst", "dev_guide_attributes_scratchpad.rst", "dev_guide_basic_concepts.rst", "dev_guide_batch_normalization.rst", "dev_guide_benchdnn.rst", "dev_guide_binary.rst", "dev_guide_build.rst", "dev_guide_build_options.rst", "dev_guide_c_and_cpp_apis.rst", "dev_guide_concat.rst", "dev_guide_conventions.rst", "dev_guide_convolution.rst", "dev_guide_cpu_dispatcher_control.rst", "dev_guide_cpu_isa_hints.rst", "dev_guide_data_types.rst", "dev_guide_dpcpp_interoperability.rst", "dev_guide_eltwise.rst", "dev_guide_examples.rst", "dev_guide_experimental.rst", "dev_guide_graph_basic_concepts.rst", "dev_guide_graph_compiler.rst", "dev_guide_graph_dump.rst", "dev_guide_graph_fusion_patterns.rst", "dev_guide_graph_low_precision.rst", "dev_guide_inference.rst", "dev_guide_inference_and_training_aspects.rst", "dev_guide_inference_int8.rst", "dev_guide_inner_product.rst", "dev_guide_inspecting_jit.rst", "dev_guide_int8_computations.rst", "dev_guide_layer_normalization.rst", "dev_guide_link.rst", "dev_guide_lrn.rst", "dev_guide_matmul.rst", "dev_guide_op_abs.rst", "dev_guide_op_absbackward.rst", "dev_guide_op_add.rst", "dev_guide_op_avgpool.rst", "dev_guide_op_avgpoolbackward.rst", "dev_guide_op_batchnormforwardtraining.rst", "dev_guide_op_batchnorminference.rst", "dev_guide_op_batchnormtrainingbackward.rst", "dev_guide_op_biasadd.rst", "dev_guide_op_biasaddbackward.rst", "dev_guide_op_clamp.rst", "dev_guide_op_clampbackward.rst", "dev_guide_op_concat.rst", "dev_guide_op_convolution.rst", "dev_guide_op_convolutionbackwarddata.rst", "dev_guide_op_convolutionbackwardweights.rst", "dev_guide_op_convtranspose.rst", "dev_guide_op_convtransposebackwarddata.rst", "dev_guide_op_convtransposebackwardweights.rst", "dev_guide_op_dequantize.rst", "dev_guide_op_divide.rst", "dev_guide_op_dynamicdequantize.rst", "dev_guide_op_dynamicquantize.rst", "dev_guide_op_elu.rst", "dev_guide_op_elubackward.rst", "dev_guide_op_end.rst", "dev_guide_op_exp.rst", "dev_guide_op_gelu.rst", "dev_guide_op_gelubackward.rst", "dev_guide_op_hardsigmoid.rst", "dev_guide_op_hardsigmoidbackward.rst", "dev_guide_op_hardswish.rst", "dev_guide_op_hardswishbackward.rst", "dev_guide_op_interpolate.rst", "dev_guide_op_interpolatebackward.rst", "dev_guide_op_layernorm.rst", "dev_guide_op_layernormbackward.rst", "dev_guide_op_leakyrelu.rst", "dev_guide_op_log.rst", "dev_guide_op_logsoftmax.rst", "dev_guide_op_logsoftmaxbackward.rst", "dev_guide_op_matmul.rst", "dev_guide_op_maximum.rst", "dev_guide_op_maxpool.rst", "dev_guide_op_maxpoolbackward.rst", "dev_guide_op_minimum.rst", "dev_guide_op_mish.rst", "dev_guide_op_mishbackward.rst", "dev_guide_op_multiply.rst", "dev_guide_op_pow.rst", "dev_guide_op_prelu.rst", "dev_guide_op_prelubackward.rst", "dev_guide_op_quantize.rst", "dev_guide_op_reciprocal.rst", "dev_guide_op_reducel1.rst", "dev_guide_op_reducel2.rst", "dev_guide_op_reducemax.rst", "dev_guide_op_reducemean.rst", "dev_guide_op_reducemin.rst", "dev_guide_op_reduceprod.rst", "dev_guide_op_reducesum.rst", "dev_guide_op_relu.rst", "dev_guide_op_relubackward.rst", "dev_guide_op_reorder.rst", "dev_guide_op_round.rst", "dev_guide_op_select.rst", "dev_guide_op_sigmoid.rst", "dev_guide_op_sigmoidbackward.rst", "dev_guide_op_softmax.rst", "dev_guide_op_softmaxbackward.rst", "dev_guide_op_softplus.rst", "dev_guide_op_softplusbackward.rst", "dev_guide_op_sqrt.rst", "dev_guide_op_sqrtbackward.rst", "dev_guide_op_square.rst", "dev_guide_op_squareddifference.rst", "dev_guide_op_staticreshape.rst", "dev_guide_op_statictranspose.rst", "dev_guide_op_subtract.rst", "dev_guide_op_tanh.rst", "dev_guide_op_tanhbackward.rst", "dev_guide_op_typecast.rst", "dev_guide_op_wildcard.rst", "dev_guide_opencl_interoperability.rst", "dev_guide_performance_settings.rst", "dev_guide_persistent_cache.rst", "dev_guide_pooling.rst", "dev_guide_prelu.rst", "dev_guide_primitive_cache.rst", "dev_guide_profilers.rst", "dev_guide_reduction.rst", "dev_guide_reorder.rst", "dev_guide_resampling.rst", "dev_guide_rnn.rst", "dev_guide_shuffle.rst", "dev_guide_softmax.rst", "dev_guide_sum.rst", "dev_guide_threadpool.rst", "dev_guide_training.rst", "dev_guide_training_bf16.rst", "dev_guide_transition_to_dnnl.rst", "dev_guide_understanding_memory_formats.rst", "dev_guide_verbose.rst", "dev_guide_vtune.rst", "enum_dnnl_alg_kind_t.rst", "enum_dnnl_algorithm.rst", "enum_dnnl_cpu_isa.rst", "enum_dnnl_cpu_isa_hints.rst", "enum_dnnl_cpu_isa_hints_t.rst", "enum_dnnl_cpu_isa_t.rst", "enum_dnnl_data_type_t.rst", "enum_dnnl_engine_kind.rst", "enum_dnnl_engine_kind_t.rst", "enum_dnnl_format_kind_t.rst", "enum_dnnl_format_tag_t.rst", "enum_dnnl_fpmath_mode.rst", "enum_dnnl_fpmath_mode_t.rst", "enum_dnnl_graph_layout_type_t.rst", "enum_dnnl_graph_logical_tensor_data_type.rst", "enum_dnnl_graph_logical_tensor_layout_type.rst", "enum_dnnl_graph_logical_tensor_property_type.rst", "enum_dnnl_graph_op_attr.rst", "enum_dnnl_graph_op_attr_t.rst", "enum_dnnl_graph_op_kind.rst", "enum_dnnl_graph_op_kind_t.rst", "enum_dnnl_graph_partition_policy.rst", "enum_dnnl_graph_partition_policy_t.rst", "enum_dnnl_graph_status.rst", "enum_dnnl_graph_tensor_property_t.rst", "enum_dnnl_memory_data_type.rst", "enum_dnnl_memory_format_kind.rst", "enum_dnnl_memory_format_tag.rst", "enum_dnnl_memory_sparse_encoding.rst", "enum_dnnl_normalization_flags.rst", "enum_dnnl_normalization_flags_t.rst", "enum_dnnl_ocl_interop_memory_kind.rst", "enum_dnnl_ocl_interop_memory_kind_t.rst", "enum_dnnl_primitive_kind.rst", "enum_dnnl_primitive_kind_t.rst", "enum_dnnl_profiling_data_kind.rst", "enum_dnnl_profiling_data_kind_t.rst", "enum_dnnl_prop_kind.rst", "enum_dnnl_prop_kind_t.rst", "enum_dnnl_query.rst", "enum_dnnl_query_t.rst", "enum_dnnl_rnn_direction.rst", "enum_dnnl_rnn_direction_t.rst", "enum_dnnl_rnn_flags.rst", "enum_dnnl_rnn_flags_t.rst", "enum_dnnl_scratchpad_mode.rst", "enum_dnnl_scratchpad_mode_t.rst", "enum_dnnl_sparse_encoding_t.rst", "enum_dnnl_status.rst", "enum_dnnl_status_t.rst", "enum_dnnl_stream_flags.rst", "enum_dnnl_stream_flags_t.rst", "enum_dnnl_sycl_interop_memory_kind.rst", "enum_dnnl_sycl_interop_memory_kind_t.rst", "example_augru.cpp.rst", "example_batch_normalization.cpp.rst", "example_binary.cpp.rst", "example_bnorm_u8_via_binary_postops.cpp.rst", "example_cnn_inference_f32.c.rst", "example_cnn_inference_f32.cpp.rst", "example_cnn_inference_int8.cpp.rst", "example_cnn_training_bf16.cpp.rst", "example_cnn_training_f32.cpp.rst", "example_concat.cpp.rst", "example_convolution.cpp.rst", "example_cpu_cnn_training_f32.c.rst", "example_cpu_matmul_quantization.cpp.rst", "example_cpu_rnn_inference_f32.cpp.rst", "example_cpu_rnn_inference_int8.cpp.rst", "example_cpu_sgemm_and_matmul.cpp.rst", "example_cross_engine_reorder.c.rst", "example_cross_engine_reorder.cpp.rst", "example_eltwise.cpp.rst", "example_getting_started.cpp.rst", "example_gpu_opencl_interop.cpp.rst", "example_inference_int8_matmul.cpp.rst", "example_inner_product.cpp.rst", "example_layer_normalization.cpp.rst", "example_lrn.cpp.rst", "example_lstm.cpp.rst", "example_matmul.cpp.rst", "example_memory_format_propagation.cpp.rst", "example_performance_profiling.cpp.rst", "example_pooling.cpp.rst", "example_prelu.cpp.rst", "example_reduction.cpp.rst", "example_reorder.cpp.rst", "example_resampling.cpp.rst", "example_rnn_training_f32.cpp.rst", "example_shuffle.cpp.rst", "example_softmax.cpp.rst", "example_sum.cpp.rst", "example_sycl_interop_buffer.cpp.rst", "global.rst", "graph_extension.rst", "graph_programming_model.rst", "graph_supported_operations.rst", "group_dnnl_api.rst", "group_dnnl_api_attributes.rst", "group_dnnl_api_batch_normalization.rst", "group_dnnl_api_binary.rst", "group_dnnl_api_blas.rst", "group_dnnl_api_common.rst", "group_dnnl_api_concat.rst", "group_dnnl_api_convolution.rst", "group_dnnl_api_data_types.rst", "group_dnnl_api_deconvolution.rst", "group_dnnl_api_eltwise.rst", "group_dnnl_api_engine.rst", "group_dnnl_api_fpmath_mode.rst", "group_dnnl_api_inner_product.rst", "group_dnnl_api_interop.rst", "group_dnnl_api_layer_normalization.rst", "group_dnnl_api_lrn.rst", "group_dnnl_api_matmul.rst", "group_dnnl_api_memory.rst", "group_dnnl_api_ocl_interop.rst", "group_dnnl_api_pooling.rst", "group_dnnl_api_prelu.rst", "group_dnnl_api_primitive_cache.rst", "group_dnnl_api_primitives.rst", "group_dnnl_api_primitives_common.rst", "group_dnnl_api_profiling.rst", "group_dnnl_api_reduction.rst", "group_dnnl_api_reorder.rst", "group_dnnl_api_resampling.rst", "group_dnnl_api_rnn.rst", "group_dnnl_api_service.rst", "group_dnnl_api_shuffle.rst", "group_dnnl_api_softmax.rst", "group_dnnl_api_stream.rst", "group_dnnl_api_sum.rst", "group_dnnl_api_sycl_interop.rst", "group_dnnl_api_threadpool_interop.rst", "group_dnnl_api_utils.rst", "group_dnnl_graph_api.rst", "group_dnnl_graph_api_allocator.rst", "group_dnnl_graph_api_compiled_partition.rst", "group_dnnl_graph_api_compiled_partition_cache.rst", "group_dnnl_graph_api_constant_tensor_cache.rst", "group_dnnl_graph_api_engine.rst", "group_dnnl_graph_api_graph.rst", "group_dnnl_graph_api_interop.rst", "group_dnnl_graph_api_logical_tensor.rst", "group_dnnl_graph_api_op.rst", "group_dnnl_graph_api_partition.rst", "group_dnnl_graph_api_status.rst", "group_dnnl_graph_api_sycl_interop.rst", "group_dnnl_graph_api_tensor.rst", "group_dnnl_graph_api_utils.rst", "index.rst", "interop_with_dpcpp_and_opencl.rst", "namespace_dnnl.rst", "namespace_dnnl_graph.rst", "namespace_dnnl_graph_sycl_interop.rst", "namespace_dnnl_ocl_interop.rst", "namespace_dnnl_sycl_interop.rst", "namespace_dnnl_threadpool_interop.rst", "namespace_oneapi.rst", "namespace_std.rst", "namespace_sycl.rst", "orphans.rst", "page_augru_example_cpp.rst", "page_augru_example_cpp_short.rst", "page_batch_normalization_example_cpp.rst", "page_batch_normalization_example_cpp_short.rst", "page_binary_example_cpp.rst", "page_binary_example_cpp_short.rst", "page_bnorm_u8_via_binary_postops_cpp.rst", "page_bnorm_u8_via_binary_postops_cpp_short.rst", "page_cnn_inference_f32_c.rst", "page_cnn_inference_f32_cpp.rst", "page_cnn_inference_int8_cpp.rst", "page_cnn_training_bf16_cpp.rst", "page_cnn_training_f32_cpp.rst", "page_concat_example_cpp.rst", "page_concat_example_cpp_short.rst", "page_convolution_example_cpp.rst", "page_convolution_example_cpp_short.rst", "page_cpu_cnn_training_f32_c.rst", "page_cpu_matmul_quantization_cpp.rst", "page_cpu_matmul_quantization_cpp_short.rst", "page_cpu_rnn_inference_f32_cpp.rst", "page_cpu_rnn_inference_int8_cpp.rst", "page_cpu_sgemm_and_matmul_cpp.rst", "page_cpu_sgemm_and_matmul_cpp_short.rst", "page_cross_engine_reorder_c.rst", "page_cross_engine_reorder_cpp.rst", "page_eltwise_example_cpp.rst", "page_eltwise_example_cpp_short.rst", "page_getting_started_cpp.rst", "page_gpu_opencl_interop_cpp.rst", "page_inference_int8_matmul_cpp.rst", "page_inference_int8_matmul_cpp_short.rst", "page_inner_product_example_cpp.rst", "page_inner_product_example_cpp_short.rst", "page_layer_normalization_example_cpp.rst", "page_layer_normalization_example_cpp_short.rst", "page_legal_information.rst", "page_lrn_example_cpp.rst", "page_lrn_example_cpp_short.rst", "page_lstm_example_cpp.rst", "page_lstm_example_cpp_short.rst", "page_matmul_example_cpp.rst", "page_matmul_example_cpp_short.rst", "page_memory_format_propagation_cpp.rst", "page_performance_profiling_cpp.rst", "page_pooling_example_cpp.rst", "page_pooling_example_cpp_short.rst", "page_prelu_example_cpp.rst", "page_prelu_example_cpp_short.rst", "page_reduction_example_cpp.rst", "page_reduction_example_cpp_short.rst", "page_reorder_example_cpp.rst", "page_reorder_example_cpp_short.rst", "page_resampling_example_cpp.rst", "page_resampling_example_cpp_short.rst", "page_rnn_training_f32_cpp.rst", "page_shuffle_example_cpp.rst", "page_shuffle_example_cpp_short.rst", "page_softmax_example_cpp.rst", "page_softmax_example_cpp_short.rst", "page_sum_example_cpp.rst", "page_sum_example_cpp_short.rst", "page_sycl_interop_buffer_cpp.rst", "page_todo.rst", "performance_profiling_and_inspection.rst", "programming_model.rst", "struct_args_t.rst", "struct_dnnl_augru_backward.rst", "struct_dnnl_augru_backward_primitive_desc.rst", "struct_dnnl_augru_forward.rst", "struct_dnnl_augru_forward_primitive_desc.rst", "struct_dnnl_batch_normalization_backward.rst", "struct_dnnl_batch_normalization_backward_primitive_desc.rst", "struct_dnnl_batch_normalization_forward.rst", "struct_dnnl_batch_normalization_forward_primitive_desc.rst", "struct_dnnl_binary.rst", "struct_dnnl_binary_primitive_desc.rst", "struct_dnnl_concat.rst", "struct_dnnl_concat_primitive_desc.rst", "struct_dnnl_convolution_backward_data.rst", "struct_dnnl_convolution_backward_data_primitive_desc.rst", "struct_dnnl_convolution_backward_weights.rst", "struct_dnnl_convolution_backward_weights_primitive_desc.rst", "struct_dnnl_convolution_forward.rst", "struct_dnnl_convolution_forward_primitive_desc.rst", "struct_dnnl_deconvolution_backward_data.rst", "struct_dnnl_deconvolution_backward_data_primitive_desc.rst", "struct_dnnl_deconvolution_backward_weights.rst", "struct_dnnl_deconvolution_backward_weights_primitive_desc.rst", "struct_dnnl_deconvolution_forward.rst", "struct_dnnl_deconvolution_forward_primitive_desc.rst", "struct_dnnl_eltwise_backward.rst", "struct_dnnl_eltwise_backward_primitive_desc.rst", "struct_dnnl_eltwise_forward.rst", "struct_dnnl_eltwise_forward_primitive_desc.rst", "struct_dnnl_engine.rst", "struct_dnnl_engine-2.rst", "struct_dnnl_error.rst", "struct_dnnl_exec_arg_t.rst", "struct_dnnl_graph_inplace_pair_t.rst", "struct_dnnl_graph_logical_tensor_t.rst", "struct_dnnl_gru_backward.rst", "struct_dnnl_gru_backward_primitive_desc.rst", "struct_dnnl_gru_forward.rst", "struct_dnnl_gru_forward_primitive_desc.rst", "struct_dnnl_handle.rst", "struct_dnnl_handle_traits.rst", "struct_dnnl_inner_product_backward_data.rst", "struct_dnnl_inner_product_backward_data_primitive_desc.rst", "struct_dnnl_inner_product_backward_weights.rst", "struct_dnnl_inner_product_backward_weights_primitive_desc.rst", "struct_dnnl_inner_product_forward.rst", "struct_dnnl_inner_product_forward_primitive_desc.rst", "struct_dnnl_layer_normalization_backward.rst", "struct_dnnl_layer_normalization_backward_primitive_desc.rst", "struct_dnnl_layer_normalization_forward.rst", "struct_dnnl_layer_normalization_forward_primitive_desc.rst", "struct_dnnl_lbr_augru_backward.rst", "struct_dnnl_lbr_augru_backward_primitive_desc.rst", "struct_dnnl_lbr_augru_forward.rst", "struct_dnnl_lbr_augru_forward_primitive_desc.rst", "struct_dnnl_lbr_gru_backward.rst", "struct_dnnl_lbr_gru_backward_primitive_desc.rst", "struct_dnnl_lbr_gru_forward.rst", "struct_dnnl_lbr_gru_forward_primitive_desc.rst", "struct_dnnl_lrn_backward.rst", "struct_dnnl_lrn_backward_primitive_desc.rst", "struct_dnnl_lrn_forward.rst", "struct_dnnl_lrn_forward_primitive_desc.rst", "struct_dnnl_lstm_backward.rst", "struct_dnnl_lstm_backward_primitive_desc.rst", "struct_dnnl_lstm_forward.rst", "struct_dnnl_lstm_forward_primitive_desc.rst", "struct_dnnl_matmul.rst", "struct_dnnl_matmul_primitive_desc.rst", "struct_dnnl_memory.rst", "struct_dnnl_memory-2.rst", "struct_dnnl_memory_desc.rst", "struct_dnnl_memory_desc-2.rst", "struct_dnnl_pooling_backward.rst", "struct_dnnl_pooling_backward_primitive_desc.rst", "struct_dnnl_pooling_forward.rst", "struct_dnnl_pooling_forward_primitive_desc.rst", "struct_dnnl_post_ops.rst", "struct_dnnl_post_ops-2.rst", "struct_dnnl_prelu_backward.rst", "struct_dnnl_prelu_backward_primitive_desc.rst", "struct_dnnl_prelu_forward.rst", "struct_dnnl_prelu_forward_primitive_desc.rst", "struct_dnnl_primitive.rst", "struct_dnnl_primitive-2.rst", "struct_dnnl_primitive_attr.rst", "struct_dnnl_primitive_attr-2.rst", "struct_dnnl_primitive_desc.rst", "struct_dnnl_primitive_desc-2.rst", "struct_dnnl_primitive_desc_base.rst", "struct_dnnl_reduction.rst", "struct_dnnl_reduction_primitive_desc.rst", "struct_dnnl_reorder.rst", "struct_dnnl_reorder_primitive_desc.rst", "struct_dnnl_resampling_backward.rst", "struct_dnnl_resampling_backward_primitive_desc.rst", "struct_dnnl_resampling_forward.rst", "struct_dnnl_resampling_forward_primitive_desc.rst", "struct_dnnl_rnn_primitive_desc_base.rst", "struct_dnnl_shuffle_backward.rst", "struct_dnnl_shuffle_backward_primitive_desc.rst", "struct_dnnl_shuffle_forward.rst", "struct_dnnl_shuffle_forward_primitive_desc.rst", "struct_dnnl_softmax_backward.rst", "struct_dnnl_softmax_backward_primitive_desc.rst", "struct_dnnl_softmax_forward.rst", "struct_dnnl_softmax_forward_primitive_desc.rst", "struct_dnnl_stream.rst", "struct_dnnl_stream-2.rst", "struct_dnnl_sum.rst", "struct_dnnl_sum_primitive_desc.rst", "struct_dnnl_threadpool_interop_threadpool_iface.rst", "struct_dnnl_vanilla_rnn_backward.rst", "struct_dnnl_vanilla_rnn_backward_primitive_desc.rst", "struct_dnnl_vanilla_rnn_forward.rst", "struct_dnnl_vanilla_rnn_forward_primitive_desc.rst", "struct_dnnl_version_t.rst", "struct_example_allows_unimplemented.rst", "struct_gemm_dims_t.rst", "supported_primitives.rst"], "titles": ["Advanced Topics", "Building and Linking", "class dnnl::graph::allocator", "class dnnl::graph::compiled_partition", "class dnnl::graph::graph", "class dnnl::graph::logical_tensor", "class dnnl::graph::op", "class dnnl::graph::partition", "class dnnl::graph::tensor", "Primitive Attributes", "Primitive Attributes: floating-point math mode", "Primitive Attributes: Post-ops", "Primitive Attributes: Quantization", "Primitive Attributes: Scratchpad", "Basic Concepts", "Batch Normalization", "Benchmarking Performance", "Binary", "Build from Source", "Build Options", "API", "Concat", "Naming Conventions", "Convolution", "CPU Dispatcher Control", "CPU ISA Hints", "Data Types", "DPC++ Interoperability", "Eltwise", "Examples", "Experimental features", "Basic Concepts", "Graph Compiler", "Graph Dump", "Supported Fusion Patterns", "Low Precision", "Inference", "Inference and Training Aspects", "Int8 Inference", "Inner Product", "Inspecting JIT Code", "Nuances of int8 Computations", "Layer Normalization", "Linking to the Library", "Local Response Normalization (LRN)", "Matrix Multiplication", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "HardSigmoid", "HardSigmoidBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "Maximum", "MaxPool", "MaxPoolBackward", "Minimum", "Mish", "MishBackward", "Multiply", "Pow", "PReLU", "PReLUBackward", "Quantize", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReLU", "ReLUBackward", "Reorder", "Round", "Select", "Sigmoid", "SigmoidBackward", "SoftMax", "SoftMaxBackward", "SoftPlus", "SoftPlusBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "OpenCL Interoperability", "Configuring oneDNN for Benchmarking", "Persistent Cache", "Pooling", "PReLU", "Primitive Cache", "Profiling oneDNN Performance", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sum", "Using oneDNN with Threadpool-Based Threading", "Training", "Bfloat16 Training", "Transitioning from Intel MKL-DNN to oneDNN", "Understanding Memory Formats", "Verbose Mode", "Profiling with VTune(TM) Profiler", "enum dnnl_alg_kind_t", "enum dnnl::algorithm", "enum dnnl::cpu_isa", "enum dnnl::cpu_isa_hints", "enum dnnl_cpu_isa_hints_t", "enum dnnl_cpu_isa_t", "enum dnnl_data_type_t", "enum dnnl::engine::kind", "enum dnnl_engine_kind_t", "enum dnnl_format_kind_t", "enum dnnl_format_tag_t", "enum dnnl::fpmath_mode", "enum dnnl_fpmath_mode_t", "enum dnnl_graph_layout_type_t", "enum dnnl::graph::logical_tensor::data_type", "enum dnnl::graph::logical_tensor::layout_type", "enum dnnl::graph::logical_tensor::property_type", "enum dnnl::graph::op::attr", "enum dnnl_graph_op_attr_t", "enum dnnl::graph::op::kind", "enum dnnl_graph_op_kind_t", "enum dnnl::graph::partition::policy", "enum dnnl_graph_partition_policy_t", "enum dnnl::graph::status", "enum dnnl_graph_tensor_property_t", "enum dnnl::memory::data_type", "enum dnnl::memory::format_kind", "enum dnnl::memory::format_tag", "enum dnnl::memory::sparse_encoding", "enum dnnl::normalization_flags", "enum dnnl_normalization_flags_t", "enum dnnl::ocl_interop::memory_kind", "enum dnnl_ocl_interop_memory_kind_t", "enum dnnl::primitive::kind", "enum dnnl_primitive_kind_t", "enum dnnl::profiling_data_kind", "enum dnnl_profiling_data_kind_t", "enum dnnl::prop_kind", "enum dnnl_prop_kind_t", "enum dnnl::query", "enum dnnl_query_t", "enum dnnl::rnn_direction", "enum dnnl_rnn_direction_t", "enum dnnl::rnn_flags", "enum dnnl_rnn_flags_t", "enum dnnl::scratchpad_mode", "enum dnnl_scratchpad_mode_t", "enum dnnl_sparse_encoding_t", "enum dnnl::status", "enum dnnl_status_t", "enum dnnl::stream::flags", "enum dnnl_stream_flags_t", "enum dnnl::sycl_interop::memory_kind", "enum dnnl_sycl_interop_memory_kind_t", "augru.cpp", "batch_normalization.cpp", "binary.cpp", "bnorm_u8_via_binary_postops.cpp", "cnn_inference_f32.c", "cnn_inference_f32.cpp", "cnn_inference_int8.cpp", "cnn_training_bf16.cpp", "cnn_training_f32.cpp", "concat.cpp", "convolution.cpp", "cpu_cnn_training_f32.c", "cpu_matmul_quantization.cpp", "cpu_rnn_inference_f32.cpp", "cpu_rnn_inference_int8.cpp", "cpu_sgemm_and_matmul.cpp", "cross_engine_reorder.c", "cross_engine_reorder.cpp", "eltwise.cpp", "getting_started.cpp", "gpu_opencl_interop.cpp", "inference_int8_matmul.cpp", "inner_product.cpp", "layer_normalization.cpp", "lrn.cpp", "lstm.cpp", "matmul.cpp", "memory_format_propagation.cpp", "performance_profiling.cpp", "pooling.cpp", "prelu.cpp", "reduction.cpp", "reorder.cpp", "resampling.cpp", "rnn_training_f32.cpp", "shuffle.cpp", "softmax.cpp", "sum.cpp", "sycl_interop_buffer.cpp", "Global Namespace", "Graph Extension", "Programming Model", "Supported Operations", "oneDNN API", "Attributes", "Batch Normalization", "Binary", "BLAS functions", "Common API", "Concat", "Convolution", "Data types", "Deconvolution", "Eltwise", "Engine", "Floating-point Math Mode", "Inner Product", "Runtime interoperability API", "Layer Normalization", "LRN", "Matrix Multiplication", "Memory", "OpenCL interoperability API", "Pooling", "PReLU", "Primitive Cache", "Primitives", "Common", "Profiling", "Reduction", "Reorder", "Resampling", "RNN", "Service", "Shuffle", "Softmax", "Stream", "Sum", "SYCL interoperability API", "Threadpool interoperability API", "Utilities", "Graph API", "Allocator", "Compiled Partition", "Compiled Partition Cache", "Constant Tensor Cache", "Engine", "Graph", "Runtime interoperability API", "Logical Tensor", "Op", "Partition", "Status", "SYCL interoperability API", "Tensor", "Utilities", "oneAPI Deep Neural Network Library Developer Guide and Reference", "Interoperability with DPC++ and OpenCL", "namespace dnnl", "namespace dnnl::graph", "namespace dnnl::graph::sycl_interop", "namespace dnnl::ocl_interop", "namespace dnnl::sycl_interop", "namespace dnnl::threadpool_interop", "namespace oneapi", "namespace std", "namespace sycl", "Orphans", "AUGRU RNN Primitive Example", "&lt;Untitled&gt;", "Batch Normalization Primitive Example", "&lt;Untitled&gt;", "Binary Primitive Example", "&lt;Untitled&gt;", "Bnorm u8 by binary post-ops example", "&lt;Untitled&gt;", "CNN f32 inference example", "CNN f32 inference example", "CNN int8 inference example", "CNN bf16 training example", "CNN f32 training example", "Concat Primitive Example", "&lt;Untitled&gt;", "Convolution Primitive Example", "&lt;Untitled&gt;", "CNN f32 training example", "MatMul Tutorial: Quantization", "&lt;Untitled&gt;", "RNN f32 inference example", "RNN int8 inference example", "MatMul Tutorial: Comparison with SGEMM", "&lt;Untitled&gt;", "Reorder between CPU and GPU engines", "Reorder between CPU and GPU engines", "Element-Wise Primitive Example", "&lt;Untitled&gt;", "Getting started", "Getting started on GPU with OpenCL extensions API", "MatMul Tutorial: INT8 Inference", "&lt;Untitled&gt;", "Inner Product Primitive Example", "&lt;Untitled&gt;", "Layer Normalization Primitive Example", "&lt;Untitled&gt;", "Legal Information", "Local Response Normalization Primitive Example", "&lt;Untitled&gt;", "LSTM RNN Primitive Example", "&lt;Untitled&gt;", "Matmul Primitive Example", "&lt;Untitled&gt;", "Memory Format Propagation", "Performance Profiling Example", "Pooling Primitive Example", "&lt;Untitled&gt;", "Primitive Example", "&lt;Untitled&gt;", "Reduction Primitive Example", "&lt;Untitled&gt;", "Reorder Primitive Example", "&lt;Untitled&gt;", "Resampling Primitive Example", "&lt;Untitled&gt;", "RNN f32 training example", "Shuffle Primitive Example", "&lt;Untitled&gt;", "Softmax Primitive Example", "&lt;Untitled&gt;", "Sum Primitive Example", "&lt;Untitled&gt;", "Getting started on both CPU and GPU with SYCL extensions API", "Todo List", "Performance Profiling and Inspection", "Programming Model", "struct args_t", "struct dnnl::augru_backward", "struct dnnl::augru_backward::primitive_desc", "struct dnnl::augru_forward", "struct dnnl::augru_forward::primitive_desc", "struct dnnl::batch_normalization_backward", "struct dnnl::batch_normalization_backward::primitive_desc", "struct dnnl::batch_normalization_forward", "struct dnnl::batch_normalization_forward::primitive_desc", "struct dnnl::binary", "struct dnnl::binary::primitive_desc", "struct dnnl::concat", "struct dnnl::concat::primitive_desc", "struct dnnl::convolution_backward_data", "struct dnnl::convolution_backward_data::primitive_desc", "struct dnnl::convolution_backward_weights", "struct dnnl::convolution_backward_weights::primitive_desc", "struct dnnl::convolution_forward", "struct dnnl::convolution_forward::primitive_desc", "struct dnnl::deconvolution_backward_data", "struct dnnl::deconvolution_backward_data::primitive_desc", "struct dnnl::deconvolution_backward_weights", "struct dnnl::deconvolution_backward_weights::primitive_desc", "struct dnnl::deconvolution_forward", "struct dnnl::deconvolution_forward::primitive_desc", "struct dnnl::eltwise_backward", "struct dnnl::eltwise_backward::primitive_desc", "struct dnnl::eltwise_forward", "struct dnnl::eltwise_forward::primitive_desc", "struct dnnl_engine", "struct dnnl::engine", "struct dnnl::error", "struct dnnl_exec_arg_t", "struct dnnl_graph_inplace_pair_t", "struct dnnl_graph_logical_tensor_t", "struct dnnl::gru_backward", "struct dnnl::gru_backward::primitive_desc", "struct dnnl::gru_forward", "struct dnnl::gru_forward::primitive_desc", "template struct dnnl::handle", "template struct dnnl::handle_traits", "struct dnnl::inner_product_backward_data", "struct dnnl::inner_product_backward_data::primitive_desc", "struct dnnl::inner_product_backward_weights", "struct dnnl::inner_product_backward_weights::primitive_desc", "struct dnnl::inner_product_forward", "struct dnnl::inner_product_forward::primitive_desc", "struct dnnl::layer_normalization_backward", "struct dnnl::layer_normalization_backward::primitive_desc", "struct dnnl::layer_normalization_forward", "struct dnnl::layer_normalization_forward::primitive_desc", "struct dnnl::lbr_augru_backward", "struct dnnl::lbr_augru_backward::primitive_desc", "struct dnnl::lbr_augru_forward", "struct dnnl::lbr_augru_forward::primitive_desc", "struct dnnl::lbr_gru_backward", "struct dnnl::lbr_gru_backward::primitive_desc", "struct dnnl::lbr_gru_forward", "struct dnnl::lbr_gru_forward::primitive_desc", "struct dnnl::lrn_backward", "struct dnnl::lrn_backward::primitive_desc", "struct dnnl::lrn_forward", "struct dnnl::lrn_forward::primitive_desc", "struct dnnl::lstm_backward", "struct dnnl::lstm_backward::primitive_desc", "struct dnnl::lstm_forward", "struct dnnl::lstm_forward::primitive_desc", "struct dnnl::matmul", "struct dnnl::matmul::primitive_desc", "struct dnnl_memory", "struct dnnl::memory", "struct dnnl_memory_desc", "struct dnnl::memory::desc", "struct dnnl::pooling_backward", "struct dnnl::pooling_backward::primitive_desc", "struct dnnl::pooling_forward", "struct dnnl::pooling_forward::primitive_desc", "struct dnnl_post_ops", "struct dnnl::post_ops", "struct dnnl::prelu_backward", "struct dnnl::prelu_backward::primitive_desc", "struct dnnl::prelu_forward", "struct dnnl::prelu_forward::primitive_desc", "struct dnnl_primitive", "struct dnnl::primitive", "struct dnnl_primitive_attr", "struct dnnl::primitive_attr", "struct dnnl_primitive_desc", "struct dnnl::primitive_desc", "struct dnnl::primitive_desc_base", "struct dnnl::reduction", "struct dnnl::reduction::primitive_desc", "struct dnnl::reorder", "struct dnnl::reorder::primitive_desc", "struct dnnl::resampling_backward", "struct dnnl::resampling_backward::primitive_desc", "struct dnnl::resampling_forward", "struct dnnl::resampling_forward::primitive_desc", "struct dnnl::rnn_primitive_desc_base", "struct dnnl::shuffle_backward", "struct dnnl::shuffle_backward::primitive_desc", "struct dnnl::shuffle_forward", "struct dnnl::shuffle_forward::primitive_desc", "struct dnnl::softmax_backward", "struct dnnl::softmax_backward::primitive_desc", "struct dnnl::softmax_forward", "struct dnnl::softmax_forward::primitive_desc", "struct dnnl_stream", "struct dnnl::stream", "struct dnnl::sum", "struct dnnl::sum::primitive_desc", "struct dnnl::threadpool_interop::threadpool_iface", "struct dnnl::vanilla_rnn_backward", "struct dnnl::vanilla_rnn_backward::primitive_desc", "struct dnnl::vanilla_rnn_forward", "struct dnnl::vanilla_rnn_forward::primitive_desc", "struct dnnl_version_t", "struct example_allows_unimplemented", "struct gemm_dims_t", "Supported Primitives"], "terms": {"transit": 0, "from": [0, 1, 3, 4, 7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 23, 28, 30, 31, 32, 34, 36, 37, 38, 39, 41, 43, 44, 55, 67, 68, 79, 80, 81, 82, 85, 86, 87, 96, 97, 100, 101, 102, 103, 104, 105, 106, 109, 111, 114, 115, 122, 123, 127, 130, 131, 132, 134, 135, 137, 139, 140, 147, 148, 150, 151, 160, 177, 180, 191, 192, 195, 196, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 221, 222, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 258, 259, 262, 265, 266, 271, 276, 287, 291, 295, 304, 305, 306, 312, 313, 314, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 338, 340, 341, 342, 344, 345, 346, 349, 351, 352, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "intel": [0, 19, 24, 30, 40, 129, 130, 145, 148, 152, 155, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 300, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 341, 342, 344, 346, 348, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374], "mkl": 0, "dnn": [0, 26, 147], "onednn": [0, 10, 11, 12, 13, 14, 16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 129, 131, 134, 137, 138, 139, 145, 147, 148, 149, 160, 216, 219, 223, 224, 232, 242, 266, 277, 283, 290, 293, 297, 300, 302, 305, 307, 322, 330, 332, 333, 334, 355, 356, 376, 409, 412, 417, 418, 489], "understand": [0, 31, 160, 265, 355], "memori": [0, 3, 5, 8, 9, 11, 12, 15, 17, 20, 21, 23, 28, 29, 30, 31, 32, 36, 37, 38, 39, 41, 42, 44, 45, 122, 123, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 145, 148, 150, 151, 156, 159, 160, 173, 181, 182, 189, 190, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 250, 251, 253, 254, 256, 257, 260, 262, 263, 264, 266, 267, 268, 271, 273, 274, 275, 276, 278, 279, 281, 282, 283, 286, 287, 293, 297, 298, 302, 305, 306, 307, 311, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 338, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493, 496], "format": [0, 11, 12, 14, 15, 17, 21, 23, 28, 29, 30, 32, 36, 37, 38, 39, 42, 44, 45, 59, 60, 61, 62, 63, 64, 79, 80, 96, 97, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 148, 159, 160, 176, 177, 189, 190, 208, 209, 211, 212, 215, 216, 223, 225, 226, 231, 232, 238, 253, 265, 271, 311, 312, 313, 314, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 340, 341, 342, 344, 345, 351, 352, 367, 372, 373, 374, 377, 380, 384, 390, 392, 394, 398, 400, 404, 414, 420, 422, 426, 430, 434, 438, 442, 448, 450, 452, 458, 473, 478, 482, 491], "nuanc": [0, 12, 21, 26, 251, 283, 307], "int8": [0, 9, 11, 12, 21, 23, 26, 29, 37, 39, 42, 45, 65, 98, 136, 139, 141, 210, 216, 218, 225, 248, 251, 283, 307, 311, 330, 343, 464], "comput": [0, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 44, 45, 47, 49, 51, 55, 57, 59, 60, 61, 62, 63, 64, 70, 74, 76, 78, 80, 81, 82, 86, 87, 89, 93, 97, 108, 113, 115, 117, 119, 126, 127, 128, 130, 132, 133, 135, 138, 139, 140, 141, 143, 145, 147, 148, 153, 154, 166, 174, 179, 180, 187, 188, 204, 205, 206, 207, 213, 214, 216, 217, 218, 222, 223, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 249, 251, 255, 258, 260, 262, 265, 266, 270, 271, 273, 275, 276, 279, 280, 282, 283, 287, 291, 294, 295, 305, 306, 307, 312, 314, 316, 318, 321, 322, 325, 327, 330, 331, 332, 333, 337, 338, 340, 341, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 384, 411, 426, 456, 462, 470, 482, 484], "primit": [0, 15, 17, 19, 21, 22, 23, 26, 27, 28, 31, 36, 37, 38, 39, 41, 42, 44, 52, 59, 109, 129, 132, 133, 136, 137, 138, 139, 140, 141, 142, 145, 147, 150, 159, 160, 173, 176, 177, 179, 180, 184, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 300, 302, 305, 306, 311, 313, 315, 317, 318, 320, 321, 322, 323, 324, 326, 328, 329, 330, 332, 333, 334, 335, 339, 342, 343, 345, 347, 350, 352, 354, 356, 358, 360, 362, 364, 366, 367, 369, 371, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "cach": [0, 3, 14, 19, 36, 45, 135, 147, 166, 174, 189, 190, 247, 266, 271, 285, 287, 305, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 411, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 451, 453, 457, 459, 462, 467, 468, 470, 472, 474, 477, 479, 481, 483, 487, 490, 492], "persist": [0, 134], "us": [0, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 51, 57, 59, 60, 65, 66, 67, 68, 70, 71, 79, 80, 81, 82, 88, 91, 94, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 145, 146, 148, 150, 151, 153, 154, 156, 159, 160, 166, 171, 172, 174, 175, 176, 177, 178, 179, 180, 184, 189, 190, 195, 196, 197, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 286, 287, 291, 293, 295, 297, 298, 300, 304, 305, 306, 307, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 411, 412, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 456, 458, 460, 462, 464, 469, 470, 471, 473, 475, 478, 480, 482, 484, 486, 488, 491, 493], "threadpool": [0, 243, 247, 261, 307, 489], "base": [0, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24, 26, 27, 28, 36, 37, 39, 40, 41, 42, 44, 82, 83, 92, 95, 96, 129, 130, 132, 133, 135, 136, 138, 139, 140, 141, 145, 146, 148, 150, 151, 238, 283, 307, 321, 340, 355, 367, 390, 412, 417, 455, 462, 466, 467, 471, 476, 488], "thread": [0, 13, 14, 23, 34, 135, 195, 196, 283, 307, 356, 489], "experiment": [0, 15, 19, 32, 300], "featur": [0, 11, 15, 19, 20, 24, 25, 33, 41, 42, 134, 147, 148, 153, 154, 217, 218, 238, 248, 277, 322, 340, 367, 456], "sourc": [1, 9, 11, 12, 13, 19, 21, 22, 23, 28, 30, 31, 32, 36, 37, 38, 39, 41, 45, 133, 137, 138, 140, 145, 189, 190, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 249, 250, 253, 254, 256, 257, 260, 262, 263, 264, 265, 267, 268, 271, 273, 274, 275, 278, 279, 281, 300, 312, 314, 315, 316, 322, 323, 324, 325, 326, 327, 329, 330, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 368, 370, 372, 373, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 467, 469, 470, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493, 494], "option": [1, 13, 15, 16, 18, 24, 25, 30, 33, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 134, 135, 139, 143, 146, 148, 180, 195, 196, 204, 229, 249, 265, 271, 277, 297, 304, 305, 306, 312, 334, 340, 351, 356, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 450, 452, 454, 458, 460, 466, 469, 470, 471, 473, 475, 478, 480, 482, 484, 488, 491, 493], "librari": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 20, 23, 24, 27, 30, 31, 33, 34, 36, 37, 38, 39, 40, 65, 67, 68, 87, 98, 128, 129, 130, 131, 132, 140, 143, 146, 148, 152, 155, 163, 165, 166, 173, 174, 179, 183, 184, 195, 196, 198, 199, 221, 223, 265, 266, 277, 282, 287, 289, 291, 293, 295, 296, 305, 306, 337, 340, 341, 342, 355, 356, 374, 408, 411, 412, 417, 448, 462, 486, 489], "more": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 19, 21, 23, 30, 32, 35, 37, 38, 39, 111, 122, 135, 136, 139, 142, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 216, 248, 249, 250, 251, 253, 254, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 291, 293, 294, 295, 297, 298, 304, 305, 306, 307, 308, 321, 330, 334, 337, 340, 342, 356, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494], "includ": [2, 3, 4, 5, 6, 7, 8, 12, 14, 15, 17, 19, 21, 23, 26, 31, 32, 34, 35, 36, 39, 42, 43, 45, 135, 137, 139, 140, 141, 142, 143, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 265, 312, 313, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 349, 351, 352, 353, 354, 356, 357, 359, 361, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494], "dnnl_graph": [2, 3, 4, 5, 6, 7, 8, 43, 164, 165, 166, 167, 169, 171, 173], "hpp": [2, 3, 4, 5, 6, 7, 8, 27, 32, 43, 129, 143, 146, 147, 151, 152, 153, 157, 161, 164, 165, 166, 167, 169, 171, 173, 175, 176, 177, 178, 179, 181, 183, 185, 187, 189, 191, 193, 195, 198, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 323, 324, 325, 327, 330, 334, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493], "public": [2, 3, 4, 5, 6, 7, 8, 43, 143, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493, 495], "allocator_handl": 2, "dnnl_graph_host_allocate_f": [2, 243, 286], "host_malloc": [2, 243, 286], "dnnl_graph_host_deallocate_f": [2, 243, 286], "host_fre": [2, 243, 286], "an": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 157, 158, 160, 163, 165, 167, 168, 173, 177, 179, 180, 183, 184, 185, 186, 189, 190, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 251, 253, 257, 258, 259, 260, 263, 265, 266, 271, 276, 277, 278, 280, 281, 282, 283, 286, 287, 291, 293, 294, 295, 297, 298, 300, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 351, 352, 353, 355, 356, 357, 359, 360, 361, 363, 365, 367, 368, 370, 372, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493], "accord": [2, 3, 4, 6, 7, 8, 12, 21, 31, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 137, 142, 173, 195, 196, 199, 276, 287, 291, 293, 295, 321, 412, 442, 444], "given": [2, 7, 8, 10, 12, 17, 21, 23, 30, 32, 37, 38, 39, 41, 42, 45, 46, 48, 66, 84, 88, 91, 92, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 118, 120, 121, 124, 127, 131, 137, 141, 147, 173, 198, 199, 232, 248, 265, 266, 271, 282, 286, 295, 297, 305, 306, 330, 334, 337, 340, 341, 374, 448, 456, 464], "function": [2, 10, 11, 12, 14, 15, 20, 22, 24, 25, 26, 27, 28, 30, 32, 36, 37, 40, 41, 42, 43, 44, 45, 56, 72, 83, 85, 92, 100, 101, 102, 103, 104, 105, 106, 129, 134, 135, 143, 146, 147, 148, 150, 173, 190, 198, 199, 216, 223, 225, 232, 238, 243, 247, 296, 302, 303, 330, 334, 335, 342, 356, 367, 408, 409, 417, 448, 450, 462, 486, 489], "pointer": [2, 7, 8, 13, 20, 27, 30, 129, 189, 190, 216, 219, 251, 265, 266, 271, 277, 282, 283, 286, 297, 298, 304, 305, 306, 307, 330, 334, 340, 408, 417, 448, 450, 462, 486], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 20, 23, 35, 37, 38, 39, 40, 41, 42, 59, 60, 81, 82, 133, 134, 135, 139, 140, 148, 156, 159, 179, 180, 184, 187, 188, 189, 190, 216, 217, 218, 219, 223, 225, 232, 238, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 291, 293, 294, 295, 297, 298, 304, 305, 306, 307, 321, 322, 330, 332, 333, 334, 337, 340, 341, 342, 355, 367, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "A": [2, 3, 4, 5, 7, 8, 9, 13, 14, 23, 30, 31, 34, 35, 36, 38, 39, 41, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 79, 80, 89, 90, 98, 100, 101, 102, 103, 104, 105, 106, 123, 132, 135, 137, 138, 139, 140, 141, 147, 159, 176, 183, 184, 191, 192, 204, 216, 219, 223, 225, 229, 243, 248, 249, 250, 251, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 291, 293, 294, 295, 297, 298, 302, 305, 306, 307, 312, 322, 330, 334, 340, 341, 342, 351, 355, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 409, 410, 414, 416, 417, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 458, 460, 462, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 486, 488, 491, 493], "malloc": [2, 208, 215, 220, 286, 297, 304, 320, 329, 336], "cpu": [2, 8, 12, 14, 15, 23, 26, 27, 29, 30, 32, 36, 39, 45, 131, 132, 134, 135, 137, 139, 143, 148, 152, 153, 154, 155, 157, 158, 215, 216, 217, 218, 219, 220, 221, 242, 243, 258, 265, 277, 283, 300, 307, 311, 329, 330, 332, 333, 334, 340, 355, 356, 376, 377, 448, 489, 494], "free": [2, 5, 31, 208, 215, 220, 286, 297, 304, 320, 329, 334, 336, 448], "default": [2, 3, 4, 5, 8, 9, 11, 13, 14, 18, 19, 24, 25, 26, 27, 32, 33, 34, 36, 38, 40, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 111, 113, 114, 115, 116, 117, 119, 121, 122, 124, 126, 129, 134, 135, 139, 147, 148, 153, 154, 161, 162, 181, 182, 195, 196, 200, 201, 202, 203, 248, 259, 276, 277, 288, 289, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 457, 458, 459, 460, 462, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "constructor": [2, 3, 5, 8, 9, 14, 131, 139, 322, 340, 355, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 451, 452, 453, 454, 457, 458, 459, 460, 462, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "compil": [3, 7, 13, 26, 30, 34, 36, 40, 87, 130, 134, 163, 165, 173, 199, 242, 244, 247, 285, 286, 289, 293, 295, 297, 298, 304, 337, 340, 341, 355, 356, 374, 411, 412], "partit": [3, 4, 33, 34, 35, 163, 165, 172, 243, 247, 285, 286, 291, 293, 297, 298, 303, 304, 411, 412], "object": [3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 19, 23, 30, 31, 38, 39, 42, 45, 131, 135, 138, 139, 147, 190, 204, 205, 206, 207, 213, 214, 216, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 265, 266, 271, 274, 280, 282, 291, 294, 298, 304, 305, 306, 312, 314, 316, 318, 322, 325, 327, 330, 338, 344, 346, 347, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493], "compiled_partition_handl": 3, "dnnl_graph_compiled_partition_t": [3, 243, 287, 295], "logical_tensor": [3, 6, 7, 8, 31, 243, 293, 298, 303], "query_logical_tensor": [3, 31], "size_t": [3, 5, 6, 7, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 221, 224, 232, 242, 243, 258, 265, 266, 271, 286, 287, 290, 291, 293, 294, 295, 297, 303, 320, 321, 323, 324, 329, 330, 332, 333, 334, 336, 341, 374, 408, 411, 412, 448, 450], "tid": [3, 5, 243, 287, 293], "const": [3, 4, 5, 6, 7, 8, 11, 12, 27, 30, 129, 131, 135, 143, 147, 190, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 251, 253, 254, 256, 265, 266, 267, 271, 275, 276, 277, 280, 281, 282, 283, 286, 287, 290, 291, 293, 294, 295, 297, 298, 302, 303, 304, 305, 306, 307, 312, 314, 316, 318, 320, 322, 323, 324, 325, 327, 329, 330, 333, 334, 336, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "std": [3, 4, 5, 6, 7, 11, 12, 13, 30, 131, 143, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 272, 277, 282, 302, 304, 305, 306, 312, 314, 316, 318, 321, 322, 323, 324, 325, 327, 330, 332, 333, 334, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493], "vector": [3, 4, 5, 6, 7, 12, 23, 24, 25, 26, 30, 39, 40, 41, 59, 60, 131, 135, 147, 152, 155, 189, 190, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 248, 266, 271, 272, 276, 281, 282, 302, 304, 305, 306, 312, 314, 316, 318, 321, 322, 323, 324, 325, 327, 330, 332, 333, 334, 338, 340, 341, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493], "pair": [3, 41, 266, 271, 282, 287, 305, 306, 411, 462, 470], "get_inplace_port": 3, "void": [3, 4, 6, 8, 11, 12, 13, 14, 27, 30, 129, 143, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 265, 266, 269, 271, 272, 277, 282, 283, 286, 288, 289, 297, 298, 302, 303, 305, 306, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 340, 341, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493], "execut": [3, 9, 11, 12, 13, 14, 19, 24, 27, 30, 31, 32, 36, 37, 38, 41, 43, 129, 145, 147, 148, 173, 185, 186, 189, 190, 191, 192, 195, 196, 198, 199, 200, 201, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 258, 265, 266, 271, 272, 277, 280, 282, 283, 286, 287, 293, 295, 297, 298, 304, 305, 306, 307, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 338, 339, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 408, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 448, 451, 453, 456, 457, 459, 462, 464, 468, 470, 472, 474, 477, 479, 481, 483, 485, 486, 487, 489, 490, 492], "stream": [3, 13, 19, 24, 26, 27, 30, 31, 32, 36, 37, 129, 146, 148, 152, 155, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 252, 265, 266, 271, 272, 282, 283, 287, 297, 302, 304, 305, 306, 307, 312, 314, 316, 318, 320, 321, 323, 324, 325, 327, 329, 330, 332, 333, 334, 338, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 448, 451, 453, 457, 459, 462, 468, 470, 472, 474, 477, 479, 481, 483, 485, 487, 489, 490, 492], "astream": [3, 243, 283, 304, 305, 306, 307, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 451, 453, 457, 459, 462, 468, 470, 472, 474, 477, 479, 481, 483, 487, 490, 492], "tensor": [3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 21, 23, 28, 30, 32, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 48, 50, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 116, 118, 120, 121, 122, 124, 125, 127, 132, 133, 136, 137, 138, 139, 140, 141, 142, 145, 147, 148, 151, 159, 160, 163, 165, 166, 174, 176, 177, 180, 183, 204, 205, 206, 207, 210, 213, 214, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 250, 253, 254, 255, 256, 262, 264, 265, 267, 271, 273, 275, 278, 281, 285, 287, 291, 294, 295, 297, 303, 304, 312, 314, 316, 318, 320, 321, 322, 325, 327, 334, 335, 337, 338, 340, 342, 343, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 371, 372, 373, 388, 389, 390, 392, 394, 396, 398, 400, 402, 411, 412, 448, 450, 452, 454, 456, 464], "input": [3, 4, 5, 6, 7, 12, 13, 15, 17, 21, 22, 23, 26, 28, 30, 31, 34, 36, 37, 38, 39, 40, 42, 44, 45, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 147, 148, 150, 151, 160, 177, 179, 180, 189, 190, 210, 211, 212, 214, 216, 217, 218, 223, 225, 226, 232, 233, 237, 238, 243, 248, 257, 265, 271, 276, 287, 291, 293, 294, 295, 297, 298, 304, 320, 321, 322, 323, 324, 327, 330, 332, 333, 334, 337, 340, 341, 342, 344, 355, 356, 357, 365, 367, 380, 382, 410, 411, 412, 414, 416, 430, 432, 434, 436, 442, 444, 464, 491, 493], "output": [3, 4, 5, 6, 7, 11, 15, 17, 21, 23, 26, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 42, 44, 45, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 147, 160, 177, 179, 180, 189, 190, 209, 210, 211, 212, 214, 215, 216, 218, 221, 223, 225, 226, 236, 237, 238, 242, 243, 248, 249, 250, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 291, 293, 294, 295, 297, 298, 304, 305, 306, 307, 320, 321, 322, 323, 324, 327, 329, 330, 332, 333, 334, 337, 340, 341, 342, 344, 355, 356, 363, 364, 365, 367, 374, 380, 382, 410, 411, 412, 414, 416, 430, 432, 434, 436, 442, 444, 456, 463, 464, 491, 493], "empti": [3, 4, 5, 8, 9, 11, 13, 19, 37, 96, 100, 101, 102, 103, 104, 105, 106, 148, 156, 159, 175, 176, 178, 197, 248, 266, 271, 287, 291, 297, 305, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "queri": [3, 11, 12, 13, 14, 23, 24, 25, 27, 30, 31, 36, 37, 39, 44, 129, 131, 139, 147, 173, 185, 186, 190, 195, 196, 198, 199, 211, 212, 215, 258, 265, 266, 269, 271, 272, 282, 287, 288, 289, 302, 305, 306, 323, 324, 329, 340, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 411, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 462, 466, 467, 469, 470, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "logic": [3, 5, 6, 7, 8, 14, 15, 21, 23, 28, 35, 37, 42, 44, 68, 128, 130, 132, 133, 137, 140, 141, 142, 147, 160, 163, 165, 174, 177, 189, 190, 223, 247, 248, 262, 265, 285, 287, 291, 294, 295, 298, 340, 412, 450, 464], "id": [3, 5, 6, 7, 18, 22, 31, 131, 189, 190, 224, 242, 243, 266, 287, 293, 294, 295, 305, 341, 374, 411, 412, 467], "If": [3, 5, 9, 11, 13, 15, 18, 22, 32, 34, 37, 42, 50, 53, 57, 60, 61, 64, 67, 68, 70, 100, 101, 102, 103, 104, 105, 106, 108, 111, 113, 119, 126, 130, 139, 140, 147, 148, 179, 180, 190, 248, 262, 265, 266, 269, 271, 277, 287, 288, 293, 321, 356, 450, 456, 471, 489], "doesn": [3, 5, 45, 129, 137, 160, 171, 172, 265, 266, 276, 282, 287, 293, 305, 306, 340, 342, 412, 442, 444, 448], "t": [3, 5, 6, 7, 22, 27, 36, 38, 42, 45, 81, 82, 129, 135, 137, 139, 150, 151, 160, 171, 172, 204, 208, 211, 212, 215, 216, 217, 218, 219, 227, 229, 238, 243, 248, 251, 265, 266, 276, 282, 283, 284, 287, 293, 302, 305, 306, 307, 312, 320, 323, 324, 329, 330, 334, 340, 342, 346, 351, 367, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "belong": [3, 135, 248, 287, 305, 306, 462, 470, 489], "ani": [3, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 28, 31, 34, 36, 37, 39, 40, 41, 44, 45, 46, 47, 56, 57, 71, 72, 73, 74, 77, 78, 79, 80, 84, 92, 93, 99, 107, 109, 110, 112, 118, 120, 125, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 157, 161, 163, 165, 171, 172, 176, 177, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 265, 271, 277, 287, 293, 295, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 332, 333, 334, 336, 338, 340, 342, 343, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 392, 394, 396, 398, 400, 402, 408, 412, 414, 416, 417, 420, 422, 424, 430, 432, 434, 436, 442, 444, 448, 450, 462, 464, 469, 475, 486, 491, 493], "except": [3, 4, 5, 9, 14, 17, 19, 20, 21, 30, 58, 79, 131, 139, 147, 152, 155, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 258, 277, 306, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 340, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 384, 386, 388, 392, 394, 396, 398, 400, 402, 404, 406, 408, 409, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 458, 460, 462, 469, 471, 473, 475, 478, 480, 482, 484, 486, 491, 493, 495], "rais": [3, 5], "api": [3, 4, 5, 7, 9, 10, 11, 13, 15, 17, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 42, 43, 44, 45, 129, 132, 133, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 179, 180, 189, 208, 209, 210, 211, 212, 215, 217, 218, 220, 221, 223, 224, 238, 242, 248, 251, 258, 259, 265, 271, 276, 277, 287, 289, 290, 291, 293, 295, 300, 305, 306, 307, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 409, 412, 414, 416, 417, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 469, 471, 473, 475, 476, 478, 480, 482, 484, 486, 488, 491, 493], "The": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 160, 167, 168, 171, 172, 173, 177, 180, 190, 195, 196, 198, 199, 207, 214, 219, 223, 225, 232, 238, 248, 249, 251, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 282, 283, 286, 287, 288, 289, 291, 293, 294, 295, 297, 298, 300, 304, 305, 306, 307, 308, 318, 320, 321, 322, 323, 324, 327, 329, 330, 332, 333, 334, 337, 340, 341, 342, 355, 356, 367, 374, 380, 382, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 409, 411, 412, 414, 416, 417, 422, 424, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 462, 464, 466, 467, 470, 471, 475, 478, 480, 486, 488, 489, 491, 493], "uniqu": [3, 5, 6, 7, 12, 31, 100, 101, 102, 103, 104, 105, 106, 218, 287, 293, 294, 412, 456], "requir": [3, 5, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 31, 32, 36, 37, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 139, 142, 143, 145, 146, 147, 148, 167, 173, 179, 180, 189, 190, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 249, 257, 265, 266, 271, 272, 282, 287, 293, 305, 306, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 334, 336, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 384, 386, 414, 416, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 450, 452, 454, 467, 491, 493], "return": [3, 4, 5, 6, 7, 8, 9, 11, 13, 19, 20, 24, 25, 31, 35, 37, 38, 41, 44, 111, 122, 123, 129, 131, 132, 143, 147, 171, 172, 173, 190, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 304, 305, 306, 307, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 409, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 467, 469, 470, 471, 473, 475, 476, 478, 480, 482, 484, 486, 488, 489, 491, 493], "hint": [3, 9, 37, 153, 154, 211, 212, 215, 238, 277, 287, 323, 324, 329, 367, 376, 380, 384, 392, 394, 398, 400, 404, 411, 414, 420, 422, 426, 430, 434, 438, 442, 452, 458, 473, 478, 482, 491], "place": [3, 11, 15, 17, 18, 20, 28, 37, 42, 122, 123, 130, 141, 142, 183, 184, 205, 206, 207, 222, 223, 227, 232, 233, 234, 240, 248, 249, 253, 257, 262, 277, 281, 287, 314, 315, 316, 317, 318, 321, 332, 333, 338, 340, 346, 347, 357, 359, 370, 371, 386, 390, 411, 456, 487], "It": [3, 4, 11, 12, 13, 14, 17, 19, 24, 26, 30, 31, 32, 35, 36, 37, 38, 41, 43, 45, 65, 67, 68, 79, 81, 83, 95, 98, 109, 127, 128, 129, 130, 134, 147, 166, 171, 172, 174, 249, 262, 265, 266, 271, 272, 277, 287, 291, 305, 330, 340, 341, 355, 356, 374, 380, 384, 392, 394, 398, 400, 404, 411, 412, 414, 420, 422, 426, 430, 434, 438, 442, 448, 452, 458, 462, 471, 473, 478, 482, 491], "indic": [3, 4, 5, 11, 14, 22, 23, 26, 30, 31, 35, 38, 44, 59, 60, 81, 82, 100, 101, 102, 103, 104, 105, 106, 132, 133, 139, 140, 147, 159, 160, 176, 189, 190, 218, 225, 233, 248, 254, 256, 265, 267, 276, 287, 295, 334, 340, 342, 357, 380, 382, 392, 394, 396, 398, 400, 402, 411, 414, 416, 430, 432, 434, 436, 442, 444, 448, 450, 452, 454, 456, 464, 491, 493], "can": [3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 62, 66, 67, 68, 81, 83, 85, 87, 88, 91, 94, 111, 122, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 145, 146, 147, 148, 160, 167, 168, 177, 195, 196, 200, 219, 223, 225, 232, 238, 248, 249, 250, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 288, 293, 295, 305, 330, 331, 334, 337, 340, 341, 342, 343, 355, 356, 367, 374, 386, 411, 417, 442, 444, 448, 450, 455, 456, 462, 464, 467, 493], "share": [3, 13, 19, 27, 31, 34, 38, 129, 133, 135, 139, 147, 181, 182, 202, 203, 211, 212, 215, 287, 323, 324, 329, 411], "same": [3, 5, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 26, 27, 28, 30, 34, 35, 37, 38, 42, 44, 45, 52, 54, 58, 59, 62, 81, 82, 122, 127, 130, 131, 133, 136, 137, 138, 139, 140, 142, 145, 147, 160, 177, 179, 180, 190, 195, 196, 211, 212, 213, 215, 218, 223, 231, 238, 248, 249, 250, 251, 254, 256, 257, 262, 265, 266, 267, 269, 271, 282, 283, 287, 288, 293, 294, 305, 306, 307, 321, 322, 323, 324, 325, 329, 332, 333, 337, 340, 355, 356, 367, 386, 392, 394, 396, 398, 400, 402, 411, 412, 417, 450, 452, 454, 456, 462, 467, 470], "buffer": [3, 8, 13, 14, 20, 30, 31, 37, 181, 182, 189, 190, 195, 196, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 217, 218, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 265, 266, 282, 287, 293, 298, 305, 306, 312, 314, 316, 318, 321, 325, 327, 333, 338, 340, 341, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 368, 370, 372, 374, 411, 448, 450], "In": [3, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 36, 37, 38, 39, 41, 42, 45, 59, 60, 87, 129, 130, 131, 135, 137, 138, 139, 141, 142, 146, 147, 148, 160, 177, 187, 188, 189, 200, 204, 207, 213, 214, 216, 222, 226, 229, 234, 248, 249, 262, 265, 266, 272, 282, 287, 305, 306, 312, 314, 315, 316, 317, 318, 321, 322, 325, 327, 330, 337, 338, 340, 341, 344, 346, 347, 351, 355, 356, 359, 370, 371, 374, 380, 382, 384, 386, 388, 392, 394, 396, 398, 400, 402, 404, 406, 411, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 466, 469, 471, 473, 475, 478, 480, 482, 484, 491, 493], "help": [3, 19, 31, 71, 128, 287, 411], "reduc": [3, 11, 12, 13, 14, 19, 23, 36, 37, 38, 45, 100, 101, 102, 103, 104, 105, 106, 131, 134, 136, 145, 180, 195, 196, 216, 287, 330, 331, 411, 456], "footprint": [3, 13, 142, 145, 195, 196, 287, 411], "improv": [3, 11, 15, 20, 26, 28, 32, 37, 38, 42, 52, 81, 82, 147, 216, 248, 287, 300, 330, 411, 456], "local": [3, 13, 130, 150, 151, 189, 190, 208, 209, 211, 212, 215, 228, 263, 287, 311, 320, 323, 324, 329, 350, 355, 411, 437, 438, 439, 440, 467, 497], "But": [3, 19, 30, 32, 41, 216, 287, 293, 330, 411], "sinc": [3, 11, 12, 22, 30, 35, 41, 133, 147, 148, 160, 180, 216, 222, 223, 225, 234, 248, 272, 287, 330, 338, 340, 342, 355, 356, 359, 411], "mai": [3, 7, 10, 11, 14, 17, 18, 19, 20, 23, 25, 26, 27, 28, 31, 33, 34, 35, 37, 41, 43, 122, 123, 129, 130, 131, 135, 136, 137, 145, 148, 166, 167, 168, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 251, 255, 265, 271, 276, 277, 283, 287, 293, 295, 307, 312, 314, 316, 318, 320, 322, 323, 324, 325, 327, 329, 330, 334, 336, 338, 340, 342, 344, 346, 348, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 380, 382, 392, 394, 396, 398, 400, 402, 411, 414, 416, 420, 422, 424, 430, 432, 434, 436, 442, 444, 448, 450, 456, 463, 469, 475, 491, 493, 494], "have": [3, 4, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 26, 28, 30, 31, 32, 36, 37, 39, 41, 42, 45, 59, 122, 123, 127, 130, 131, 133, 134, 136, 137, 142, 145, 147, 238, 248, 250, 254, 255, 256, 265, 266, 267, 271, 276, 277, 281, 282, 287, 291, 293, 295, 305, 306, 330, 337, 340, 342, 355, 367, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 411, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 467, 469, 470, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "global": [3, 13, 134, 179, 180, 216, 219, 302, 303, 311, 330, 334, 411], "view": [3, 40, 122, 123, 139, 217, 218, 238, 287, 332, 333, 367, 411], "user": [3, 4, 5, 7, 9, 11, 12, 14, 15, 19, 20, 21, 23, 27, 30, 32, 36, 37, 39, 41, 42, 45, 81, 129, 131, 132, 134, 135, 137, 138, 142, 143, 147, 171, 172, 179, 180, 190, 195, 196, 204, 208, 209, 210, 211, 212, 214, 215, 223, 226, 229, 232, 234, 238, 265, 266, 271, 282, 287, 291, 293, 295, 305, 306, 312, 320, 321, 322, 323, 324, 327, 329, 332, 333, 334, 337, 340, 341, 344, 351, 355, 356, 359, 367, 374, 411, 448, 455, 462, 489], "": [3, 5, 6, 9, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 27, 28, 30, 31, 34, 35, 36, 37, 39, 41, 42, 43, 45, 81, 82, 89, 90, 122, 128, 129, 135, 137, 141, 145, 147, 166, 174, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 248, 265, 266, 271, 272, 287, 293, 294, 305, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 332, 333, 334, 336, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 411, 448, 456, 462], "applic": [3, 9, 10, 11, 12, 13, 19, 20, 23, 25, 26, 31, 32, 33, 34, 36, 37, 41, 43, 130, 131, 134, 146, 147, 148, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 265, 277, 287, 300, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 337, 338, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 411, 450], "possibl": [3, 12, 14, 15, 17, 19, 21, 24, 25, 27, 28, 36, 37, 38, 41, 42, 45, 129, 130, 136, 139, 141, 142, 147, 238, 248, 249, 254, 256, 257, 259, 260, 262, 263, 265, 267, 268, 271, 273, 275, 276, 277, 278, 279, 287, 340, 355, 367, 382, 384, 386, 392, 394, 396, 400, 402, 406, 411, 416, 424, 426, 428, 432, 436, 440, 444, 450, 454, 460, 469, 475, 480, 484, 491, 493], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 114, 115, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 150, 151, 156, 159, 160, 163, 164, 165, 167, 168, 171, 172, 173, 176, 177, 179, 180, 184, 195, 196, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 254, 256, 257, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 300, 304, 305, 306, 307, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 332, 333, 334, 336, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 411, 412, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 488, 489, 491, 493], "other": [3, 5, 9, 11, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 27, 34, 36, 37, 39, 40, 41, 43, 44, 45, 129, 130, 131, 132, 135, 137, 139, 140, 141, 142, 147, 148, 160, 171, 172, 177, 195, 196, 210, 211, 217, 218, 238, 265, 271, 277, 287, 291, 293, 294, 300, 321, 323, 330, 333, 334, 340, 348, 355, 356, 367, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "thi": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 59, 65, 81, 82, 98, 122, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 156, 159, 160, 180, 184, 187, 188, 195, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 251, 253, 262, 265, 266, 271, 274, 276, 277, 282, 283, 287, 289, 290, 293, 295, 297, 298, 305, 306, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 409, 411, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 456, 458, 460, 466, 469, 471, 473, 475, 478, 480, 482, 484, 488, 489, 491, 493], "case": [3, 5, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 49, 69, 76, 83, 96, 97, 99, 107, 122, 129, 130, 131, 132, 133, 136, 137, 138, 140, 141, 142, 145, 147, 148, 160, 204, 211, 212, 214, 216, 219, 223, 226, 229, 234, 248, 249, 254, 256, 262, 265, 266, 267, 271, 277, 282, 287, 293, 295, 305, 306, 312, 321, 323, 324, 327, 330, 334, 337, 340, 341, 344, 351, 355, 359, 374, 380, 382, 384, 386, 388, 392, 394, 396, 398, 400, 402, 404, 406, 409, 411, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 466, 469, 471, 473, 475, 478, 480, 482, 484, 489, 491, 493], "should": [3, 5, 7, 11, 12, 13, 14, 15, 17, 19, 21, 23, 28, 30, 31, 35, 36, 37, 39, 41, 42, 44, 45, 48, 50, 51, 53, 54, 58, 60, 61, 64, 66, 67, 68, 79, 80, 88, 91, 94, 100, 101, 102, 103, 104, 105, 106, 111, 124, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 147, 195, 196, 207, 208, 215, 217, 219, 223, 225, 238, 248, 251, 258, 265, 272, 276, 277, 283, 286, 287, 291, 293, 295, 297, 300, 304, 307, 318, 320, 321, 322, 329, 334, 337, 340, 341, 342, 355, 367, 374, 380, 382, 390, 411, 414, 416, 417, 430, 432, 434, 436, 442, 444, 448, 455, 456, 464, 466, 471, 488, 491, 493], "take": [3, 10, 11, 12, 14, 19, 23, 24, 25, 26, 28, 30, 34, 35, 36, 37, 40, 63, 64, 65, 67, 68, 87, 98, 100, 101, 102, 103, 104, 105, 106, 111, 131, 133, 134, 135, 147, 148, 223, 249, 262, 271, 277, 287, 318, 320, 321, 340, 411], "pass": [3, 4, 9, 10, 11, 12, 13, 14, 15, 19, 20, 23, 27, 30, 31, 32, 34, 35, 36, 37, 42, 43, 44, 45, 81, 122, 129, 132, 133, 135, 137, 138, 139, 160, 179, 180, 208, 209, 215, 216, 219, 220, 223, 238, 242, 248, 254, 256, 260, 264, 265, 266, 271, 277, 287, 291, 293, 305, 306, 320, 321, 322, 329, 330, 334, 336, 337, 340, 341, 355, 367, 374, 394, 396, 400, 402, 408, 410, 411, 417, 448, 456, 462, 464, 470, 486, 489], "differ": [3, 5, 11, 12, 13, 14, 17, 19, 20, 26, 27, 30, 31, 33, 38, 41, 44, 45, 48, 62, 66, 87, 88, 91, 94, 109, 121, 122, 123, 124, 131, 135, 136, 137, 139, 145, 147, 150, 151, 166, 167, 168, 174, 195, 196, 204, 211, 212, 214, 215, 226, 229, 234, 238, 249, 258, 262, 265, 287, 293, 312, 318, 321, 323, 324, 327, 329, 330, 334, 340, 344, 351, 355, 356, 359, 367, 390, 411, 417, 450, 466, 471, 488], "avoid": [3, 12, 17, 19, 21, 25, 26, 30, 36, 37, 41, 51, 52, 53, 134, 136, 207, 211, 212, 215, 287, 318, 323, 324, 329, 355, 411], "overwrit": [3, 17, 23, 39, 45, 136, 138, 142, 287, 411], "which": [3, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 45, 49, 58, 59, 65, 67, 68, 81, 82, 83, 85, 86, 98, 100, 101, 102, 103, 104, 105, 106, 114, 115, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 145, 147, 148, 160, 163, 165, 177, 217, 218, 219, 221, 223, 225, 231, 232, 238, 248, 249, 251, 254, 256, 257, 265, 267, 271, 274, 277, 278, 279, 280, 283, 286, 287, 293, 294, 298, 307, 332, 333, 334, 337, 340, 341, 342, 355, 356, 367, 374, 380, 384, 390, 392, 394, 398, 400, 404, 411, 412, 414, 417, 420, 422, 426, 430, 434, 438, 442, 448, 452, 458, 467, 471, 473, 478, 480, 482, 484, 488, 491], "probabl": [3, 11, 287, 411], "caus": [3, 36, 37, 287, 408, 411, 417, 448, 462, 486], "unexpect": [3, 20, 221, 242, 251, 283, 287, 307, 337, 374, 411], "incorrect": [3, 13, 19, 148, 173, 198, 199, 220, 232, 287, 336, 340, 411], "result": [3, 9, 11, 12, 13, 15, 17, 19, 20, 22, 23, 25, 26, 28, 31, 37, 38, 39, 41, 44, 45, 100, 101, 102, 103, 104, 105, 106, 121, 131, 132, 133, 135, 136, 138, 141, 145, 147, 180, 190, 191, 192, 210, 216, 217, 218, 219, 221, 223, 224, 242, 243, 248, 251, 265, 271, 283, 287, 307, 321, 322, 330, 331, 334, 356, 411, 450, 456, 463, 464, 467], "list": [3, 6, 7, 19, 28, 36, 37, 43, 49, 50, 59, 60, 61, 62, 63, 64, 65, 79, 80, 89, 90, 98, 100, 101, 102, 103, 104, 105, 106, 123, 130, 135, 139, 148, 152, 155, 277, 287, 295, 297, 311, 340], "run": [3, 13, 14, 15, 18, 19, 37, 38, 40, 41, 45, 51, 130, 195, 196, 210, 217, 218, 219, 225, 232, 243, 261, 266, 282, 283, 292, 297, 304, 322, 330, 332, 333, 334, 335, 337, 340, 341, 342, 343, 355, 356, 374], "over": [3, 13, 19, 21, 24, 25, 32, 37, 38, 40, 42, 50, 58, 60, 61, 64, 81, 82, 100, 101, 102, 103, 104, 105, 106, 134, 135, 139, 141, 147, 148, 250, 253, 277, 279, 304, 390, 466, 482, 484], "graph_handl": 4, "engin": [4, 7, 8, 9, 11, 12, 19, 23, 26, 27, 29, 30, 31, 36, 37, 39, 45, 109, 129, 135, 139, 148, 158, 173, 189, 190, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 250, 252, 253, 254, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 287, 291, 295, 297, 298, 302, 303, 304, 305, 306, 307, 311, 312, 314, 316, 318, 320, 321, 323, 324, 325, 327, 329, 330, 332, 333, 334, 338, 342, 344, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 368, 370, 372, 377, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 456, 458, 460, 462, 464, 466, 467, 469, 470, 471, 473, 475, 476, 478, 480, 482, 484, 486, 488, 491, 493], "kind": [4, 6, 7, 9, 11, 15, 19, 23, 27, 28, 30, 31, 38, 39, 42, 129, 131, 132, 133, 138, 139, 140, 141, 148, 150, 151, 158, 159, 170, 176, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 250, 254, 256, 257, 258, 260, 262, 263, 265, 266, 267, 268, 271, 272, 273, 275, 276, 278, 279, 282, 290, 291, 294, 295, 302, 303, 305, 306, 312, 314, 316, 318, 320, 321, 323, 324, 325, 327, 329, 330, 332, 333, 334, 336, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493], "engine_kind": [4, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 291, 312, 314, 316, 318, 320, 321, 323, 324, 325, 327, 338, 340, 342, 344, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374], "fpmath_mod": [4, 10, 259, 277, 302, 464], "mode": [4, 9, 13, 15, 17, 19, 23, 26, 28, 30, 38, 42, 44, 51, 65, 67, 68, 79, 80, 98, 131, 132, 133, 134, 135, 138, 139, 141, 161, 162, 167, 168, 187, 188, 195, 196, 204, 205, 207, 228, 229, 242, 243, 247, 248, 252, 257, 264, 277, 291, 302, 311, 312, 313, 314, 315, 318, 327, 328, 334, 338, 339, 346, 347, 349, 350, 351, 352, 355, 357, 358, 359, 360, 365, 366, 370, 371, 374, 376, 417, 464], "statu": [4, 7, 19, 20, 199, 210, 211, 218, 223, 224, 242, 243, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 289, 291, 293, 294, 295, 297, 298, 302, 303, 307, 323, 333, 340, 374, 409], "add_op": [4, 31, 291], "op": [4, 7, 9, 12, 26, 29, 34, 36, 37, 38, 50, 55, 80, 81, 82, 128, 168, 171, 172, 173, 179, 180, 199, 205, 206, 207, 210, 214, 225, 226, 230, 232, 236, 243, 247, 248, 251, 283, 285, 291, 295, 303, 307, 311, 314, 315, 316, 317, 322, 327, 328, 342, 344, 345, 353, 354, 356, 363, 456, 464], "bool": [4, 5, 7, 26, 49, 50, 57, 70, 81, 82, 87, 96, 100, 101, 102, 103, 104, 105, 106, 108, 113, 119, 122, 126, 143, 147, 216, 219, 231, 238, 243, 265, 302, 330, 334, 355, 367, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493], "allow_except": 4, "true": [4, 5, 6, 7, 37, 43, 45, 49, 50, 57, 70, 81, 82, 87, 96, 100, 101, 102, 103, 104, 105, 106, 108, 113, 119, 122, 126, 130, 147, 238, 293, 367, 417, 450, 466, 471, 489], "final": [4, 11, 12, 13, 19, 28, 31, 38, 41, 147, 150, 160, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 222, 223, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 265, 291, 293, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 337, 338, 340, 341, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 368, 370, 372, 374], "is_fin": 4, "get_partit": [4, 7, 31, 295], "polici": [4, 7, 13, 172, 195, 196, 243, 291], "fusion": [4, 11, 14, 15, 30, 32, 45, 171, 172, 232, 244, 248, 342, 343], "creat": [4, 7, 9, 11, 12, 13, 15, 17, 18, 19, 21, 23, 27, 28, 30, 31, 36, 37, 39, 42, 44, 45, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 147, 148, 189, 190, 195, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 249, 250, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 291, 293, 295, 297, 298, 304, 305, 306, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 448, 450, 456, 464, 471, 486], "new": [4, 7, 14, 30, 31, 38, 143, 150, 151, 160, 184, 265, 269, 287, 288, 291, 293, 295, 298, 417, 450], "float": [4, 9, 11, 12, 20, 23, 30, 37, 38, 45, 52, 53, 65, 98, 137, 138, 145, 156, 161, 162, 164, 175, 190, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 251, 252, 257, 262, 263, 265, 273, 275, 276, 277, 281, 283, 291, 294, 302, 307, 311, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 332, 333, 334, 336, 338, 340, 341, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 456, 458, 460, 464, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "point": [4, 9, 11, 12, 17, 19, 20, 23, 35, 37, 38, 45, 67, 135, 137, 138, 145, 156, 161, 162, 164, 175, 190, 216, 225, 247, 248, 252, 265, 271, 276, 277, 291, 294, 311, 322, 330, 331, 332, 333, 334, 342, 343, 356, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 456, 464, 466, 491, 493], "math": [4, 9, 26, 161, 162, 212, 217, 218, 238, 247, 248, 252, 277, 291, 311, 324, 367], "all": [4, 5, 7, 9, 10, 11, 12, 13, 17, 18, 19, 21, 23, 26, 27, 28, 30, 32, 34, 35, 36, 38, 41, 45, 55, 58, 60, 62, 63, 64, 87, 100, 101, 102, 103, 104, 105, 106, 111, 122, 130, 133, 135, 138, 139, 141, 142, 145, 146, 147, 148, 187, 188, 190, 195, 196, 217, 218, 219, 223, 225, 232, 248, 249, 259, 262, 265, 266, 272, 276, 277, 280, 291, 293, 305, 330, 332, 333, 334, 340, 341, 342, 356, 374, 380, 382, 384, 392, 394, 396, 398, 400, 402, 414, 416, 420, 422, 424, 426, 430, 432, 434, 436, 442, 444, 450, 455, 462, 466, 467, 486, 491, 493], "inherit": [4, 41, 232, 265, 291, 356], "add": [4, 6, 17, 23, 30, 34, 36, 39, 41, 43, 45, 49, 50, 54, 59, 60, 61, 62, 63, 64, 89, 90, 136, 138, 148, 150, 151, 169, 179, 180, 193, 194, 209, 217, 232, 246, 265, 291, 294, 321, 322, 332, 333, 356, 450], "dag": [4, 291], "failur": [4, 148, 167, 265, 291, 409, 450], "oper": [4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 147, 148, 151, 167, 168, 169, 170, 171, 172, 173, 180, 198, 199, 200, 207, 223, 225, 228, 232, 244, 248, 249, 250, 251, 257, 262, 265, 266, 271, 273, 275, 283, 291, 293, 294, 295, 302, 305, 307, 314, 315, 318, 321, 322, 330, 337, 340, 341, 342, 343, 349, 355, 356, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "ha": [4, 5, 11, 13, 14, 15, 16, 19, 20, 22, 26, 30, 31, 32, 35, 38, 41, 81, 82, 83, 130, 131, 133, 134, 135, 145, 148, 160, 177, 180, 214, 218, 219, 248, 265, 266, 269, 271, 277, 282, 288, 291, 293, 305, 306, 321, 327, 330, 332, 334, 337, 340, 341, 355, 356, 374, 412, 450, 466], "alreadi": [4, 37, 135, 269, 288, 291, 340, 355, 466], "been": [4, 11, 19, 145, 248, 265, 266, 271, 282, 291, 305, 306, 356, 448, 466], "ad": [4, 6, 13, 23, 31, 36, 41, 51, 52, 53, 54, 81, 82, 147, 160, 167, 232, 291, 294, 356], "cannot": [4, 9, 11, 27, 31, 37, 41, 45, 109, 131, 132, 137, 139, 146, 147, 148, 173, 195, 196, 199, 216, 265, 277, 291, 330, 408, 417, 448, 462, 471, 486], "schema": [4, 173, 199, 291], "check": [4, 7, 9, 12, 15, 17, 23, 28, 37, 39, 44, 45, 109, 132, 139, 140, 148, 167, 208, 210, 211, 215, 216, 218, 219, 220, 221, 223, 224, 225, 242, 243, 248, 265, 266, 271, 291, 295, 305, 320, 321, 323, 329, 330, 333, 334, 336, 340, 341, 342, 355, 390, 409, 417, 450, 462, 464, 466, 471, 476, 488], "eg": [4, 5, 171, 172, 291, 293], "number": [4, 5, 7, 10, 11, 12, 13, 15, 17, 19, 20, 22, 23, 26, 30, 31, 34, 36, 37, 42, 45, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 67, 68, 89, 90, 98, 128, 130, 133, 134, 136, 139, 147, 148, 160, 189, 190, 211, 212, 213, 215, 217, 218, 238, 241, 248, 250, 251, 253, 254, 255, 256, 258, 265, 266, 267, 269, 271, 272, 277, 281, 282, 283, 287, 288, 291, 293, 294, 295, 297, 306, 307, 320, 321, 322, 323, 324, 325, 329, 330, 367, 372, 392, 394, 396, 398, 400, 402, 408, 412, 448, 450, 452, 454, 456, 467, 478, 480, 482, 484, 489], "data": [4, 5, 8, 10, 11, 12, 13, 14, 19, 20, 22, 30, 31, 32, 34, 35, 36, 37, 41, 135, 145, 156, 160, 164, 173, 175, 177, 180, 185, 186, 187, 188, 189, 190, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 251, 252, 253, 257, 258, 262, 265, 272, 273, 274, 275, 276, 278, 281, 283, 291, 293, 298, 307, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 332, 333, 334, 336, 338, 342, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 377, 412, 448, 450, 456, 464, 470, 478, 480, 488, 491], "type": [4, 5, 6, 7, 10, 11, 12, 13, 14, 18, 19, 20, 27, 30, 31, 32, 35, 36, 37, 38, 135, 145, 146, 147, 148, 156, 163, 164, 165, 173, 175, 179, 188, 189, 190, 199, 210, 211, 216, 221, 223, 232, 243, 247, 248, 252, 258, 259, 265, 266, 271, 276, 282, 284, 291, 293, 295, 298, 299, 305, 306, 318, 322, 323, 330, 337, 340, 341, 342, 356, 374, 377, 412, 417, 448, 450, 456, 464, 467], "attribut": [4, 6, 14, 26, 31, 36, 37, 134, 135, 148, 167, 168, 180, 189, 219, 225, 232, 247, 249, 250, 253, 254, 256, 257, 260, 262, 263, 264, 267, 268, 270, 271, 273, 274, 275, 276, 278, 279, 281, 291, 294, 311, 316, 317, 322, 327, 328, 333, 334, 342, 344, 345, 353, 354, 356, 363, 364, 377, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 412, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 456, 458, 460, 463, 464, 467, 469, 470, 471, 473, 475, 478, 480, 482, 484, 488, 491, 493], "etc": [4, 5, 14, 22, 34, 134, 135, 138, 147, 148, 258, 291, 293, 450, 467], "flag": [4, 15, 19, 26, 30, 33, 42, 135, 139, 148, 152, 153, 154, 155, 179, 180, 189, 190, 193, 194, 201, 221, 243, 249, 251, 262, 271, 276, 277, 280, 283, 289, 295, 302, 303, 307, 314, 315, 337, 355, 380, 382, 384, 386, 388, 392, 394, 396, 398, 400, 402, 404, 406, 408, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 458, 460, 462, 467, 469, 471, 473, 475, 478, 480, 482, 484, 486, 489, 491, 493], "whether": [4, 23, 27, 41, 44, 49, 50, 81, 87, 96, 129, 248, 265, 266, 271, 305, 321, 355, 380, 382, 384, 386, 388, 392, 394, 396, 398, 400, 402, 404, 406, 408, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 458, 460, 462, 464, 469, 471, 473, 475, 478, 480, 482, 484, 486, 491, 493], "allow": [4, 9, 10, 12, 14, 19, 21, 23, 24, 25, 26, 30, 31, 34, 37, 38, 39, 43, 48, 66, 88, 91, 94, 111, 124, 133, 142, 145, 156, 159, 161, 162, 184, 215, 232, 251, 265, 268, 273, 275, 283, 307, 329, 356, 374, 380, 382, 384, 386, 388, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 450, 452, 454, 458, 460, 469, 471, 473, 475, 478, 480, 482, 484, 491, 493], "throw": [4, 9, 20, 131, 204, 210, 211, 216, 218, 219, 221, 223, 224, 225, 232, 242, 306, 312, 323, 330, 333, 334, 337, 340, 341, 342, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 409, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 458, 460, 466, 469, 471, 473, 475, 478, 480, 482, 484, 488, 491, 493], "fail": [4, 32, 135, 148, 173, 198, 199, 216, 219, 223, 224, 225, 242, 330, 334, 340, 341, 342, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 409, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 458, 460, 466, 469, 471, 473, 475, 478, 480, 482, 484, 488, 491, 493], "success": [4, 44, 173, 198, 199, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 291, 293, 294, 295, 297, 298, 307, 356, 466], "describ": [4, 5, 10, 11, 12, 14, 19, 22, 26, 31, 34, 37, 38, 41, 79, 80, 130, 137, 139, 146, 147, 159, 160, 176, 216, 238, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 291, 293, 294, 295, 297, 298, 307, 321, 330, 340, 341, 355, 367, 374, 407, 447, 449, 450, 461, 465, 476, 485], "error": [4, 11, 12, 19, 20, 24, 25, 31, 32, 37, 38, 41, 131, 148, 210, 211, 216, 218, 223, 242, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 291, 293, 294, 295, 297, 298, 302, 307, 323, 330, 333, 340, 355, 374, 455, 464], "otherwis": [4, 5, 15, 24, 26, 28, 32, 37, 57, 70, 76, 100, 101, 102, 103, 104, 105, 106, 108, 113, 119, 126, 131, 179, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 291, 293, 294, 295, 297, 298, 307, 404, 417, 450], "mean": [4, 5, 10, 11, 12, 17, 21, 22, 28, 30, 31, 34, 37, 44, 51, 52, 53, 59, 60, 61, 62, 63, 64, 67, 68, 81, 82, 85, 86, 89, 90, 103, 122, 123, 130, 132, 133, 136, 137, 140, 141, 142, 147, 150, 151, 163, 165, 166, 174, 179, 180, 205, 207, 223, 227, 231, 249, 251, 254, 256, 257, 262, 265, 271, 273, 283, 291, 295, 307, 314, 318, 337, 340, 341, 346, 355, 374, 384, 386, 392, 394, 396, 398, 400, 402, 404, 406, 412, 426, 428, 450], "finish": [4, 31, 280, 291, 486, 489], "readi": [4, 31, 37, 291, 340, 355], "similarli": [4, 41, 132, 139, 291, 355], "un": [4, 291], "also": [4, 7, 11, 13, 14, 15, 18, 19, 22, 23, 24, 25, 26, 30, 31, 32, 34, 36, 38, 43, 45, 83, 130, 134, 135, 137, 143, 147, 148, 160, 189, 204, 219, 229, 238, 248, 249, 250, 253, 254, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 291, 293, 295, 307, 312, 321, 334, 337, 340, 341, 351, 355, 367, 374, 448, 450, 456, 464, 467], "fals": [4, 5, 7, 49, 50, 57, 70, 81, 82, 87, 96, 100, 101, 102, 103, 104, 105, 106, 108, 113, 119, 122, 126, 238, 367, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "get": [4, 17, 29, 36, 37, 135, 147, 148, 216, 221, 223, 224, 238, 242, 257, 276, 277, 283, 293, 298, 311, 330, 355, 367, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "filter": [4, 22, 135, 147, 291], "claim": [4, 291, 348], "intern": [4, 7, 13, 24, 25, 27, 31, 148, 156, 159, 184, 204, 209, 214, 226, 229, 234, 238, 248, 291, 312, 327, 332, 341, 344, 351, 359, 367, 374], "capabl": [4, 9, 11, 19, 26, 30, 35, 291], "store": [4, 8, 12, 13, 14, 22, 23, 32, 36, 38, 41, 122, 129, 134, 135, 139, 147, 180, 211, 218, 225, 251, 265, 283, 307, 323, 330, 333, 340, 342, 417, 448, 463], "dnnl_dim_t": [5, 190, 208, 215, 220, 243, 248, 251, 255, 263, 265, 278, 283, 302, 307, 320, 329, 336, 448], "dim": [5, 11, 12, 30, 45, 137, 147, 160, 189, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 265, 271, 293, 312, 314, 316, 318, 320, 322, 323, 324, 325, 327, 329, 330, 332, 333, 334, 336, 337, 338, 340, 341, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 412, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 464, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493, 496], "enum": [5, 6, 7, 147, 243, 248, 255, 258, 259, 265, 266, 271, 272, 276, 277, 280, 282, 284, 293, 294, 295, 296, 302, 303, 305, 306, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 408, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 448, 451, 453, 457, 459, 462, 468, 470, 472, 474, 477, 479, 481, 483, 486, 487, 490, 492], "data_typ": [5, 11, 12, 30, 41, 137, 147, 148, 156, 189, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 265, 302, 312, 314, 316, 318, 323, 324, 325, 327, 330, 332, 333, 334, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 412, 448, 450, 456], "layout_typ": [5, 31, 293, 412], "property_typ": 5, "dnnl_graph_logical_tensor_t": [5, 243, 287, 293, 294, 295, 298], "c_data": 5, "dtype": [5, 243, 293], "int32_t": [5, 30, 41, 216, 218, 225, 243, 248, 251, 265, 271, 283, 293, 302, 307, 330, 342, 456], "ndim": [5, 27, 42, 147, 160, 208, 215, 243, 265, 293, 306, 320, 329, 412], "ltype": [5, 243, 293], "ptype": [5, 243, 293], "undef": [5, 11, 148, 151, 164, 165, 166, 167, 175, 176, 177, 178, 183, 185, 187, 189, 191, 193, 355, 356, 380, 382, 384, 386, 388, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 452, 454, 456, 458, 460, 467, 469, 478, 480, 482, 484, 491, 493], "adim": [5, 221, 243, 450], "stride": [5, 9, 11, 12, 22, 23, 45, 49, 50, 59, 60, 61, 62, 63, 64, 89, 90, 109, 148, 159, 160, 163, 165, 167, 168, 176, 177, 189, 190, 208, 209, 210, 211, 212, 214, 215, 223, 231, 232, 233, 238, 243, 248, 254, 256, 265, 267, 293, 320, 321, 322, 323, 324, 327, 329, 340, 342, 355, 356, 357, 367, 392, 394, 396, 398, 400, 402, 412, 450, 452, 454, 456, 467], "lid": 5, "get_dim": [5, 147, 216, 225, 232, 330, 342, 356, 450], "get_id": [5, 7], "get_data_typ": [5, 232, 356, 450], "get_property_typ": 5, "get_layout_typ": 5, "get_layout_id": 5, "get_strid": [5, 147, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 450, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_mem_s": [5, 31], "is_equ": [5, 243, 293], "lt": [5, 8, 243, 287], "integ": [5, 12, 24, 26, 35, 38, 41, 42, 110, 135, 152, 155, 156, 164, 175, 216, 217, 248, 251, 283, 294, 307, 322, 330, 448, 464], "repres": [5, 6, 7, 11, 12, 14, 22, 23, 30, 31, 35, 41, 56, 59, 85, 86, 114, 115, 128, 135, 148, 287, 291, 295, 321, 332, 333, 337, 340, 341, 356, 374, 448], "dimens": [5, 7, 11, 12, 13, 14, 15, 17, 21, 22, 23, 28, 30, 31, 35, 38, 39, 42, 45, 49, 50, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 79, 81, 82, 85, 86, 87, 89, 90, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 111, 114, 122, 123, 132, 133, 136, 137, 138, 139, 140, 141, 142, 147, 148, 159, 160, 176, 177, 189, 190, 204, 205, 206, 207, 213, 214, 219, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 250, 251, 253, 254, 255, 256, 262, 265, 267, 275, 283, 293, 295, 298, 306, 307, 312, 314, 316, 318, 325, 327, 330, 332, 333, 334, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 390, 392, 394, 396, 398, 400, 402, 412, 448, 450, 452, 454, 456, 464, 473, 475], "size": [5, 11, 12, 13, 15, 17, 20, 22, 26, 30, 31, 37, 38, 41, 42, 49, 50, 54, 79, 80, 89, 90, 114, 131, 132, 133, 136, 138, 142, 147, 156, 160, 164, 167, 168, 177, 189, 190, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 248, 250, 251, 263, 265, 266, 271, 272, 278, 283, 286, 293, 297, 305, 307, 312, 314, 316, 318, 320, 321, 323, 324, 325, 327, 329, 330, 332, 333, 334, 338, 340, 344, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 412, 438, 440, 448, 450, 456, 464, 467, 478, 480], "implement": [5, 9, 11, 12, 13, 14, 19, 20, 24, 26, 31, 32, 35, 36, 37, 38, 41, 65, 67, 68, 87, 98, 128, 130, 131, 134, 143, 145, 146, 147, 156, 164, 173, 179, 184, 189, 190, 198, 199, 204, 207, 210, 211, 214, 218, 219, 221, 223, 226, 232, 234, 271, 277, 283, 307, 312, 314, 315, 318, 320, 321, 323, 324, 327, 329, 332, 333, 334, 337, 340, 341, 344, 355, 359, 374, 417, 448, 466, 467, 489], "ar": [5, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 81, 82, 87, 89, 90, 100, 101, 102, 103, 104, 105, 106, 111, 121, 122, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 148, 160, 167, 177, 180, 187, 188, 189, 190, 195, 196, 204, 214, 216, 217, 218, 219, 222, 225, 226, 229, 232, 234, 238, 248, 249, 250, 251, 254, 256, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 271, 275, 276, 277, 278, 279, 282, 283, 289, 293, 305, 306, 307, 312, 318, 320, 321, 322, 327, 330, 332, 333, 334, 337, 338, 340, 341, 342, 344, 348, 351, 355, 356, 359, 367, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 412, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 455, 456, 458, 460, 462, 464, 467, 469, 470, 471, 473, 475, 478, 480, 482, 484, 488, 489, 491, 493], "forc": [5, 45, 448], "limit": [5, 11, 12, 20, 24, 25, 34, 36, 134, 135, 195, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 321, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 368, 370, 372, 448], "length": [5, 96, 97, 217, 218, 238, 248, 294, 367, 448], "copi": [5, 9, 11, 122, 123, 137, 145, 190, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 265, 274, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 332, 333, 334, 336, 338, 340, 341, 342, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 408, 417, 448, 450, 462, 464, 486], "layout": [5, 7, 11, 31, 36, 42, 55, 109, 122, 123, 127, 139, 160, 163, 165, 204, 214, 218, 225, 226, 229, 234, 238, 248, 265, 293, 295, 298, 312, 321, 327, 332, 333, 342, 344, 351, 355, 359, 367, 412, 450, 456, 464], "properti": [5, 9, 31, 148, 166, 174, 195, 196, 216, 293, 330, 348, 412], "element": [5, 11, 22, 23, 26, 28, 30, 37, 46, 48, 56, 59, 65, 66, 67, 68, 69, 72, 73, 75, 77, 81, 82, 83, 84, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 116, 118, 120, 121, 122, 123, 124, 125, 127, 136, 147, 160, 171, 172, 173, 180, 183, 184, 198, 199, 222, 248, 250, 251, 253, 254, 256, 265, 267, 281, 283, 293, 294, 298, 307, 311, 330, 337, 339, 340, 392, 394, 396, 398, 400, 402, 412, 448, 452, 454, 456], "1": [5, 11, 14, 15, 17, 19, 21, 24, 26, 27, 28, 30, 32, 34, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 130, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 146, 147, 148, 150, 151, 152, 155, 156, 160, 163, 172, 174, 177, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 243, 248, 250, 251, 265, 271, 277, 283, 293, 295, 306, 307, 312, 314, 316, 318, 320, 322, 323, 324, 325, 327, 329, 330, 332, 333, 334, 336, 337, 340, 341, 342, 346, 349, 351, 353, 355, 356, 357, 361, 363, 367, 368, 369, 370, 371, 374, 388, 390, 412, 450, 456, 466, 467, 471, 488, 489], "unknown": [5, 7, 31, 181, 182, 202, 203, 211, 212, 265, 293, 295, 323, 324, 334, 342, 412], "see": [5, 9, 11, 12, 14, 15, 16, 18, 19, 21, 23, 26, 28, 32, 36, 37, 38, 41, 42, 45, 62, 81, 132, 134, 135, 136, 139, 142, 143, 146, 147, 148, 149, 160, 177, 189, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 253, 254, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 305, 306, 307, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 448, 456, 462, 464, 467, 470, 489, 491, 493], "dnnl_graph_unknown_ndim": [5, 243, 293, 412], "0": [5, 11, 12, 13, 17, 19, 23, 28, 30, 32, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 133, 134, 135, 137, 138, 139, 140, 141, 143, 146, 147, 148, 156, 159, 160, 163, 168, 174, 180, 186, 188, 190, 192, 197, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 250, 258, 265, 266, 269, 271, 277, 288, 289, 291, 293, 295, 305, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 332, 333, 334, 336, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 412, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 464, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 489, 491, 493], "scalar": [5, 11, 135, 248, 251, 283, 307, 412, 456], "deleg": 5, "basic": [5, 9, 11, 135, 137, 223, 245, 251, 258, 265, 270, 280, 293, 295, 300, 337, 340, 341, 374, 377, 450], "inform": [5, 11, 19, 22, 32, 36, 37, 43, 45, 131, 134, 147, 148, 189, 231, 238, 265, 271, 277, 287, 293, 311, 355, 367, 494], "dnnl_graph_unknown_dim": [5, 243, 293, 412], "defin": [5, 9, 11, 14, 15, 19, 21, 23, 26, 27, 30, 32, 34, 37, 38, 39, 41, 42, 43, 44, 45, 58, 59, 65, 67, 68, 76, 81, 83, 87, 98, 129, 132, 133, 138, 139, 140, 141, 143, 146, 147, 156, 164, 167, 168, 208, 211, 212, 215, 223, 224, 243, 248, 251, 255, 265, 271, 277, 283, 293, 307, 320, 323, 324, 329, 333, 337, 340, 356, 412, 456, 464], "zero": [5, 11, 12, 15, 23, 26, 30, 35, 37, 38, 45, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 67, 68, 83, 89, 90, 98, 122, 137, 139, 147, 180, 189, 190, 207, 211, 212, 216, 225, 238, 248, 254, 256, 260, 262, 264, 265, 271, 276, 291, 318, 323, 324, 330, 331, 342, 343, 367, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 412, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 450, 452, 454, 456, 458, 460, 464, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "field": [5, 148, 160, 163, 165, 217, 248, 265, 293, 378, 409, 495, 496], "deduc": [5, 7, 31, 138, 295, 355, 412], "accordingli": [5, 11, 12, 67, 68, 147, 265, 293, 322, 341, 374, 450, 455], "alwai": [5, 11, 14, 15, 19, 26, 28, 30, 37, 38, 39, 41, 42, 44, 45, 137, 139, 147, 160, 248, 265, 277, 330, 337, 340, 450, 456, 464], "current": [5, 9, 10, 11, 12, 15, 24, 25, 26, 30, 36, 37, 41, 131, 133, 135, 137, 139, 141, 147, 219, 225, 238, 265, 277, 304, 334, 342, 367, 412], "support": [5, 7, 10, 12, 13, 14, 18, 19, 22, 23, 24, 25, 26, 27, 30, 32, 33, 35, 36, 37, 39, 40, 45, 129, 130, 134, 135, 138, 140, 147, 148, 152, 155, 167, 168, 180, 183, 210, 211, 217, 218, 219, 244, 248, 249, 250, 251, 254, 255, 256, 257, 262, 264, 265, 271, 277, 283, 295, 300, 304, 307, 323, 332, 333, 334, 340, 355, 386, 390, 412, 448, 455, 456, 464, 466, 471, 488], "neg": [5, 11, 15, 23, 26, 38, 49, 50, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 81, 82, 83, 85, 86, 89, 90, 123, 180, 210, 220, 221, 223, 242, 276, 289, 322, 336, 337, 340, 374, 412, 467, 478, 480, 482, 484, 491, 493], "valu": [5, 6, 9, 10, 11, 12, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 37, 38, 39, 40, 41, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 129, 131, 132, 134, 135, 137, 145, 147, 148, 207, 211, 212, 216, 218, 220, 221, 223, 225, 242, 243, 248, 249, 250, 251, 254, 256, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 271, 273, 275, 276, 277, 278, 279, 282, 283, 288, 289, 291, 293, 294, 296, 305, 306, 307, 318, 322, 323, 324, 330, 332, 333, 334, 336, 337, 340, 342, 355, 356, 374, 380, 382, 384, 386, 390, 392, 394, 396, 398, 400, 402, 406, 408, 412, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 440, 442, 444, 448, 450, 452, 454, 456, 460, 462, 464, 466, 467, 469, 470, 471, 475, 480, 484, 488, 491, 493], "opaqu": [5, 7, 9, 11, 31, 109, 132, 159, 163, 165, 176, 190, 293, 295, 407, 412, 447, 449, 455, 461, 463, 465, 485], "assign": [5, 22, 205, 206, 218, 227, 233, 240, 314, 316, 333, 346, 357, 370, 417, 450], "each": [5, 7, 11, 12, 13, 17, 22, 23, 26, 30, 31, 32, 33, 34, 36, 37, 38, 39, 60, 62, 63, 64, 100, 101, 102, 103, 104, 105, 106, 111, 121, 130, 131, 133, 136, 138, 139, 140, 148, 159, 167, 171, 172, 176, 195, 196, 213, 218, 223, 248, 251, 254, 256, 265, 266, 267, 271, 272, 281, 282, 283, 291, 293, 295, 307, 321, 322, 325, 330, 337, 340, 356, 392, 394, 396, 398, 400, 402, 412, 448, 450, 452, 454, 456, 464, 488], "call": [5, 7, 11, 13, 16, 20, 22, 23, 24, 25, 27, 30, 31, 36, 37, 39, 41, 83, 129, 131, 139, 140, 147, 148, 248, 265, 266, 272, 277, 282, 283, 286, 289, 291, 295, 297, 305, 306, 321, 330, 332, 333, 337, 340, 341, 355, 356, 374, 408, 409, 417, 448, 462, 464, 486, 489], "byte": [5, 13, 26, 41, 189, 190, 265, 266, 271, 293, 305, 448, 450], "compar": [5, 13, 32, 37, 41, 45, 111, 145, 216, 219, 265, 293, 330, 331, 334, 355, 476], "two": [5, 13, 14, 19, 22, 23, 27, 30, 31, 34, 35, 37, 38, 41, 45, 48, 66, 87, 88, 91, 94, 109, 111, 121, 124, 129, 132, 135, 139, 147, 148, 160, 177, 195, 196, 238, 250, 258, 265, 274, 293, 327, 328, 334, 337, 340, 367], "tenor": [5, 293], "equal": [5, 11, 15, 17, 21, 27, 30, 37, 39, 42, 49, 67, 68, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 111, 122, 129, 131, 132, 133, 138, 142, 147, 150, 151, 160, 177, 248, 250, 251, 265, 266, 272, 282, 283, 293, 305, 306, 307, 340, 417, 448, 450, 456, 464], "decid": [5, 31, 163, 165, 293, 355, 380, 384, 392, 394, 398, 400, 404, 414, 420, 422, 426, 430, 434, 438, 442, 452, 458, 473, 478, 482, 491], "reorder": [5, 12, 14, 19, 21, 26, 29, 34, 36, 37, 38, 41, 45, 135, 142, 148, 169, 183, 184, 189, 204, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 225, 226, 229, 231, 232, 234, 238, 243, 246, 247, 258, 265, 270, 271, 293, 302, 311, 312, 320, 321, 322, 323, 324, 327, 329, 330, 332, 333, 342, 344, 351, 356, 359, 364, 367, 377, 462, 488, 497], "need": [5, 12, 13, 18, 19, 27, 31, 34, 36, 37, 129, 139, 147, 190, 208, 209, 211, 212, 215, 231, 232, 238, 265, 271, 291, 293, 298, 320, 323, 324, 329, 337, 340, 341, 367, 374, 489], "below": [5, 9, 11, 14, 15, 17, 18, 19, 20, 23, 24, 27, 28, 30, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 138, 139, 140, 143, 146, 147, 225, 248, 293, 321, 340, 342, 355, 456, 489], "circumst": [5, 7, 148, 293, 295, 355], "regard": [5, 34, 62, 293], "struct": [5, 208, 215, 243, 248, 249, 250, 253, 254, 256, 257, 258, 260, 262, 263, 264, 265, 267, 268, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 286, 287, 291, 293, 294, 295, 298, 302, 307, 320, 329, 340, 356], "when": [5, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 160, 167, 171, 172, 177, 179, 195, 196, 217, 220, 221, 248, 265, 266, 271, 272, 277, 283, 293, 307, 332, 333, 336, 337, 340, 355, 356, 412, 448, 456, 464], "underli": [5, 8, 27, 30, 129, 134, 261, 265, 266, 282, 283, 292, 293, 297, 298, 305, 306, 341, 374, 417, 448, 462], "For": [5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 25, 27, 28, 30, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 65, 67, 68, 79, 80, 87, 98, 100, 101, 102, 103, 104, 105, 106, 129, 131, 133, 135, 137, 139, 141, 142, 145, 147, 160, 166, 174, 177, 180, 190, 204, 214, 218, 223, 226, 229, 234, 248, 249, 251, 262, 265, 266, 271, 277, 283, 286, 293, 295, 305, 307, 312, 321, 322, 327, 330, 332, 333, 337, 340, 341, 344, 351, 355, 359, 374, 412, 448, 455, 456, 464, 467], "exampl": [5, 14, 16, 19, 20, 22, 31, 32, 33, 34, 35, 36, 37, 41, 43, 65, 67, 68, 71, 87, 98, 100, 101, 102, 103, 104, 105, 106, 111, 122, 130, 146, 147, 160, 166, 174, 177, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 262, 265, 271, 277, 293, 300, 311, 313, 315, 317, 319, 326, 328, 330, 331, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 347, 352, 354, 355, 358, 360, 362, 364, 366, 369, 371, 373, 374, 376, 412, 450, 456, 464, 467], "one": [5, 7, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 27, 28, 30, 31, 34, 35, 37, 38, 39, 41, 42, 43, 45, 58, 60, 65, 67, 68, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 111, 122, 129, 130, 131, 132, 136, 137, 138, 139, 141, 142, 145, 147, 148, 160, 177, 180, 204, 214, 218, 226, 229, 232, 234, 238, 248, 251, 257, 258, 265, 266, 271, 282, 283, 293, 295, 300, 305, 306, 307, 312, 321, 327, 330, 331, 332, 333, 337, 340, 341, 342, 343, 344, 351, 355, 356, 359, 367, 374, 404, 412, 450, 455, 462, 470], "while": [5, 13, 19, 20, 22, 23, 26, 36, 37, 41, 87, 129, 137, 139, 145, 160, 211, 212, 224, 293, 295, 323, 324, 334, 340, 476], "underneath": [5, 293], "both": [5, 13, 15, 17, 18, 19, 20, 22, 24, 27, 28, 29, 30, 31, 32, 36, 37, 42, 45, 48, 50, 51, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 82, 88, 91, 94, 98, 124, 129, 130, 135, 139, 141, 142, 145, 148, 160, 218, 222, 231, 234, 242, 249, 250, 257, 262, 265, 277, 293, 311, 332, 337, 338, 340, 341, 342, 355, 359, 450], "nhwc": [5, 22, 138, 177, 207, 223, 236, 293, 318, 340, 363], "still": [5, 12, 19, 36, 139, 147, 293, 340], "op_handl": 6, "attr": [6, 9, 11, 12, 13, 23, 36, 131, 137, 218, 219, 225, 232, 243, 248, 249, 250, 253, 254, 256, 257, 260, 262, 263, 264, 267, 268, 271, 273, 274, 275, 276, 278, 279, 281, 333, 334, 342, 356, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 456, 458, 460, 464, 469, 470, 471, 473, 475, 478, 480, 482, 484, 488, 491, 493], "akind": [6, 243, 248, 258, 271, 302, 305, 306, 408], "string": [6, 19, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 80, 88, 89, 90, 91, 94, 96, 97, 98, 111, 121, 122, 124, 148, 204, 205, 206, 207, 208, 213, 214, 215, 217, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 271, 277, 294, 302, 312, 314, 316, 318, 320, 325, 327, 329, 337, 338, 340, 341, 344, 346, 349, 351, 353, 357, 359, 363, 365, 368, 370, 372, 374, 409], "verbose_nam": [6, 243, 294], "add_input": 6, "add_output": 6, "templat": [6, 135, 148, 216, 277, 284, 302, 306, 330, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "typenam": [6, 216, 284, 302, 306, 330, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "req": 6, "is_sam": [6, 216, 330], "int64_t": [6, 190, 216, 219, 225, 243, 255, 294, 330, 334, 342, 467], "set_attr": 6, "name": [6, 11, 15, 17, 18, 19, 21, 23, 25, 28, 34, 37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 135, 137, 138, 139, 140, 141, 142, 146, 147, 148, 160, 177, 189, 190, 195, 196, 243, 248, 277, 294, 311, 340, 348, 355, 375, 467], "specifi": [6, 9, 10, 11, 12, 15, 17, 18, 19, 21, 23, 25, 28, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 48, 49, 50, 58, 60, 65, 66, 67, 68, 79, 80, 88, 89, 90, 91, 94, 98, 100, 101, 102, 103, 104, 105, 106, 111, 121, 122, 123, 124, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 145, 148, 160, 167, 168, 179, 180, 195, 196, 208, 209, 211, 212, 215, 217, 218, 219, 221, 232, 248, 249, 251, 262, 265, 266, 277, 282, 283, 287, 295, 304, 305, 306, 307, 320, 321, 323, 324, 329, 332, 333, 334, 337, 340, 341, 342, 355, 374, 408, 417, 448, 456, 462, 464, 467, 470, 486], "convolut": [6, 11, 13, 14, 19, 21, 22, 26, 28, 30, 32, 34, 35, 36, 37, 41, 60, 61, 62, 63, 64, 132, 135, 137, 147, 148, 150, 151, 160, 169, 171, 172, 177, 183, 184, 208, 209, 210, 211, 212, 215, 231, 232, 246, 247, 248, 265, 270, 271, 311, 320, 321, 322, 323, 324, 328, 329, 340, 356, 391, 392, 393, 394, 395, 396, 412, 442, 455, 456, 467, 497], "relu": [6, 14, 15, 22, 23, 28, 34, 36, 45, 83, 96, 108, 133, 139, 150, 151, 169, 171, 172, 179, 180, 205, 206, 208, 209, 210, 211, 212, 214, 215, 220, 221, 222, 223, 224, 225, 226, 230, 232, 242, 246, 249, 257, 268, 314, 316, 320, 321, 322, 323, 324, 327, 329, 336, 338, 341, 342, 343, 344, 353, 356, 374], "bound": [6, 13, 28, 37, 38, 56, 57, 135], "set": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 22, 23, 24, 25, 26, 31, 32, 33, 37, 38, 40, 41, 42, 45, 49, 59, 81, 82, 96, 100, 101, 102, 103, 104, 105, 106, 111, 134, 135, 137, 139, 148, 152, 155, 205, 206, 210, 211, 217, 218, 227, 232, 233, 234, 240, 248, 250, 254, 256, 259, 260, 262, 264, 265, 266, 268, 269, 271, 273, 275, 276, 277, 282, 283, 288, 289, 291, 294, 298, 305, 306, 314, 316, 321, 322, 323, 341, 346, 355, 356, 357, 359, 370, 417, 448, 450, 456, 464, 489], "self": [6, 135], "partition_handl": 7, "dnnl_graph_partition_t": [7, 243, 287, 291, 295], "p": [7, 18, 40, 135, 136, 189, 190, 217, 218, 243, 273, 332, 333, 467, 469], "aop": 7, "ekind": [7, 243, 295], "get_ops_num": 7, "get_op": 7, "compiled_partit": [7, 31, 243, 287, 295, 297, 303, 304], "e": [7, 11, 12, 13, 15, 21, 28, 32, 36, 37, 39, 42, 45, 69, 72, 81, 82, 92, 93, 112, 116, 141, 146, 147, 148, 160, 177, 205, 210, 211, 216, 218, 219, 220, 221, 223, 225, 227, 228, 238, 242, 248, 265, 277, 314, 323, 330, 333, 334, 336, 340, 342, 346, 349, 367, 374, 390, 410, 450, 456, 466, 471, 488], "is_support": [7, 243, 295], "get_input_port": [7, 31], "get_output_port": [7, 31], "get_engine_kind": 7, "raw": [7, 20, 216, 219, 330, 334, 340], "c": [7, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 26, 28, 29, 34, 39, 42, 43, 44, 45, 49, 51, 52, 54, 58, 81, 82, 89, 114, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 146, 147, 156, 160, 164, 177, 189, 204, 209, 210, 211, 212, 216, 217, 218, 219, 221, 223, 224, 225, 227, 229, 238, 243, 248, 251, 258, 259, 264, 265, 271, 276, 277, 283, 302, 305, 306, 307, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 409, 414, 416, 417, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 469, 471, 473, 475, 476, 478, 480, 482, 484, 486, 488, 491, 493], "handl": [7, 8, 11, 12, 13, 14, 20, 26, 31, 41, 137, 147, 204, 205, 206, 207, 213, 214, 217, 218, 219, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 243, 248, 251, 258, 265, 266, 271, 280, 282, 283, 284, 286, 287, 291, 293, 294, 295, 297, 298, 302, 305, 306, 307, 312, 314, 316, 318, 325, 327, 332, 333, 334, 338, 340, 344, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 368, 370, 372, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "directli": [7, 15, 19, 23, 41, 145, 147, 216, 265, 295, 330, 340, 374, 448, 489], "without": [7, 10, 12, 14, 19, 23, 26, 30, 31, 130, 139, 146, 150, 156, 159, 184, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 254, 256, 265, 266, 282, 283, 295, 305, 306, 307, 312, 314, 316, 318, 320, 323, 324, 325, 327, 328, 329, 330, 332, 333, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 380, 382, 384, 386, 388, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 458, 460, 469, 471, 473, 475, 478, 480, 482, 484, 491, 493], "contain": [7, 11, 14, 15, 18, 19, 22, 30, 31, 33, 34, 35, 37, 49, 50, 59, 60, 61, 62, 63, 64, 65, 79, 80, 89, 90, 98, 100, 101, 102, 103, 104, 105, 106, 123, 135, 147, 148, 160, 204, 214, 223, 226, 229, 234, 248, 254, 256, 265, 266, 267, 277, 282, 293, 295, 305, 306, 308, 312, 322, 327, 337, 340, 341, 344, 351, 359, 374, 392, 394, 396, 398, 400, 402, 410, 450, 452, 454, 462, 463, 470, 494], "onli": [7, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 65, 67, 68, 82, 96, 97, 98, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 156, 159, 160, 177, 180, 184, 187, 188, 190, 207, 211, 212, 215, 238, 248, 254, 255, 256, 258, 265, 266, 267, 277, 283, 293, 295, 304, 305, 307, 318, 320, 321, 323, 324, 329, 330, 334, 337, 340, 342, 355, 356, 367, 392, 394, 396, 398, 400, 402, 450, 452, 454, 456, 464], "unord": 7, "gener": [7, 11, 14, 18, 19, 22, 24, 25, 31, 32, 33, 34, 37, 40, 43, 130, 134, 135, 146, 148, 159, 163, 165, 176, 189, 190, 204, 205, 206, 207, 213, 214, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 257, 265, 277, 287, 312, 314, 316, 318, 325, 327, 334, 337, 338, 340, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 412], "debug": [7, 18, 19, 24, 32, 134, 135, 148, 171, 172, 265, 277, 337, 340, 341, 374, 448], "purpos": [7, 9, 19, 20, 24, 26, 27, 32, 129, 134, 147, 148, 265, 330, 340, 356, 448], "verbos": [7, 19, 20, 32, 131, 134, 277, 355, 376], "shape": [7, 14, 15, 21, 23, 31, 36, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 66, 79, 80, 87, 88, 89, 90, 91, 94, 100, 101, 102, 103, 104, 105, 106, 111, 121, 122, 124, 127, 137, 142, 147, 167, 168, 173, 199, 210, 216, 219, 231, 238, 266, 271, 282, 293, 295, 305, 306, 321, 322, 330, 334, 335, 342, 343, 355, 367, 412, 462, 470], "choos": [7, 12, 18, 19, 20, 21, 23, 24, 31, 32, 37, 39, 41, 45, 133, 142, 204, 210, 214, 226, 229, 231, 234, 265, 295, 312, 321, 322, 327, 334, 342, 344, 351, 355, 356, 359], "optim": [7, 11, 15, 17, 19, 21, 23, 26, 28, 30, 31, 32, 38, 39, 40, 42, 44, 45, 67, 68, 132, 134, 137, 139, 140, 141, 142, 147, 166, 174, 204, 214, 226, 229, 232, 234, 295, 300, 312, 313, 314, 315, 316, 317, 321, 325, 326, 327, 328, 337, 340, 341, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 359, 363, 364, 368, 369, 370, 371, 372, 373, 374], "save": [7, 31, 40, 44, 132, 180, 233, 295, 357], "some": [7, 9, 10, 11, 12, 13, 19, 21, 23, 28, 30, 37, 40, 44, 130, 131, 132, 134, 135, 137, 145, 146, 147, 148, 211, 212, 215, 223, 225, 238, 251, 265, 283, 295, 307, 318, 320, 321, 323, 324, 329, 330, 334, 337, 340, 341, 342, 355, 367, 374, 450, 455], "under": [7, 32, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 295, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "certain": [7, 14, 15, 23, 24, 25, 34, 39, 148, 160, 177, 255, 295, 408, 455, 456], "dure": [7, 9, 10, 11, 12, 13, 14, 15, 19, 23, 24, 25, 26, 28, 31, 32, 36, 37, 38, 39, 41, 42, 44, 45, 122, 127, 129, 131, 132, 135, 137, 147, 163, 165, 166, 174, 190, 238, 251, 283, 295, 307, 330, 341, 355, 367, 374, 412, 448, 450, 456, 464, 489], "stage": [7, 23, 32, 39, 45, 122, 289, 293, 295], "unsupport": [7, 12, 19, 38, 148, 242, 295, 374], "befor": [7, 9, 12, 13, 20, 21, 23, 24, 25, 26, 27, 31, 35, 36, 59, 60, 61, 62, 63, 64, 83, 87, 111, 121, 129, 135, 142, 148, 150, 151, 208, 215, 218, 238, 248, 265, 277, 289, 295, 320, 329, 332, 333, 337, 340, 341, 355, 356, 367, 374, 448, 456], "transform": [7, 13, 14, 38, 79, 80, 265, 295, 321, 322, 340, 450], "isn": [7, 45], "tensor_handl": 8, "aengin": [8, 305, 306, 307, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 458, 460, 469, 473, 475, 478, 480, 482, 484, 486, 488, 491, 493], "get_data_handl": [8, 27, 30, 129, 211, 212, 217, 218, 265, 323, 324, 332, 333, 340, 448], "set_data_handl": [8, 217, 218, 265, 305, 306, 332, 333, 448], "get_engin": [8, 265, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 486, 488, 491, 493], "storag": [8, 10, 14, 265, 266, 271, 282, 298, 305, 306], "On": [8, 19, 26, 36, 37, 45, 145, 147, 148, 160, 177, 179, 180, 251, 283, 307, 330, 341, 374, 448], "usm": [8, 181, 182, 202, 203, 265, 266, 282, 297, 304, 305, 306, 448], "alloc": [8, 13, 14, 20, 27, 129, 130, 181, 182, 195, 196, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 217, 218, 219, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 265, 266, 282, 285, 290, 297, 298, 303, 304, 305, 306, 312, 314, 316, 318, 321, 325, 327, 334, 338, 340, 341, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 448, 450, 471], "associ": [8, 17, 21, 28, 31, 35, 36, 133, 136, 137, 140, 141, 142, 266, 271, 272, 282, 291, 305, 306, 448, 486], "quick": 9, "recap": 9, "creation": [9, 10, 11, 12, 13, 15, 19, 21, 23, 28, 36, 39, 42, 45, 131, 134, 139, 142, 217, 218, 219, 224, 225, 242, 265, 277, 293, 312, 313, 322, 325, 326, 327, 328, 330, 334, 337, 340, 341, 342, 344, 345, 346, 347, 351, 352, 356, 374, 489], "step": [9, 14, 19, 23, 36, 37, 38, 41, 111, 131, 204, 227, 229, 312, 337, 340, 341, 346, 351, 355, 374], "consist": [9, 14, 17, 22, 24, 37, 45, 130, 139, 147, 265, 355, 450], "follow": [9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 160, 177, 207, 225, 232, 238, 248, 265, 276, 277, 318, 330, 337, 340, 341, 342, 355, 356, 367, 374, 380, 382, 414, 416, 417, 430, 432, 434, 436, 442, 444, 448, 450, 455, 464, 491, 493], "descriptor": [9, 11, 12, 13, 14, 15, 19, 21, 23, 28, 30, 36, 37, 39, 42, 44, 131, 132, 138, 139, 142, 147, 156, 159, 175, 176, 178, 189, 190, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 249, 250, 253, 254, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 271, 273, 274, 275, 276, 278, 279, 281, 282, 305, 306, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 337, 338, 341, 342, 344, 345, 346, 347, 349, 351, 352, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493], "backward": [9, 13, 14, 17, 19, 21, 22, 34, 36, 67, 68, 81, 82, 136, 139, 142, 148, 150, 151, 179, 180, 187, 188, 204, 205, 211, 212, 215, 222, 228, 229, 233, 234, 238, 249, 254, 256, 257, 260, 262, 263, 267, 268, 271, 275, 276, 278, 279, 312, 314, 321, 323, 324, 329, 338, 349, 351, 355, 357, 359, 367, 379, 380, 383, 384, 391, 392, 397, 398, 403, 404, 413, 414, 419, 420, 425, 426, 429, 430, 433, 434, 437, 438, 441, 442, 451, 452, 457, 458, 472, 473, 477, 478, 481, 482, 490, 491], "propag": [9, 13, 14, 15, 17, 19, 21, 22, 23, 28, 29, 36, 39, 42, 44, 82, 132, 133, 136, 138, 139, 140, 141, 142, 148, 179, 180, 187, 188, 189, 190, 204, 205, 222, 228, 229, 231, 232, 234, 248, 249, 254, 256, 257, 260, 262, 263, 267, 268, 271, 275, 276, 278, 279, 311, 312, 313, 314, 315, 321, 327, 328, 338, 339, 340, 346, 347, 349, 350, 351, 352, 356, 357, 358, 359, 360, 365, 366, 370, 371, 377, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 413, 414, 415, 416, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 451, 452, 453, 454, 457, 458, 459, 460, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 488, 490, 491, 492, 493], "forward": [9, 13, 14, 17, 19, 21, 22, 34, 36, 50, 135, 136, 139, 142, 179, 180, 187, 188, 208, 209, 210, 211, 212, 215, 221, 224, 228, 238, 242, 248, 249, 254, 256, 257, 260, 262, 263, 265, 267, 268, 271, 275, 276, 278, 279, 312, 313, 314, 315, 320, 321, 322, 323, 324, 327, 328, 329, 337, 338, 339, 341, 346, 347, 349, 350, 351, 352, 355, 357, 358, 359, 360, 365, 366, 367, 370, 371, 374, 380, 381, 382, 384, 385, 386, 392, 394, 395, 396, 398, 400, 401, 402, 404, 405, 406, 414, 415, 416, 420, 422, 423, 424, 426, 427, 428, 430, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 452, 453, 454, 456, 458, 459, 460, 473, 474, 475, 478, 479, 480, 482, 483, 484, 491, 492, 493], "might": [9, 11, 12, 13, 15, 17, 19, 22, 23, 26, 28, 30, 37, 39, 41, 42, 44, 132, 137, 139, 140, 147, 160, 211, 212, 215, 219, 323, 324, 329, 330, 334, 337, 340, 342, 455], "well": [9, 12, 13, 14, 36, 37, 130, 146, 147, 148, 218, 219, 321, 330, 332, 334, 355, 417], "train": [9, 11, 12, 13, 19, 29, 32, 36, 38, 41, 44, 51, 83, 130, 134, 147, 179, 180, 187, 188, 211, 212, 215, 228, 238, 249, 257, 311, 312, 313, 314, 315, 321, 338, 339, 349, 350, 351, 352, 355, 357, 358, 359, 360, 365, 366, 370, 371, 377], "specif": [9, 10, 11, 14, 15, 17, 18, 23, 25, 28, 31, 32, 38, 44, 111, 130, 132, 138, 139, 140, 156, 160, 163, 165, 171, 172, 175, 177, 189, 190, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 257, 258, 265, 266, 273, 277, 282, 291, 298, 305, 306, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 334, 336, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 404, 406, 448, 469], "aspect": [9, 355, 377], "sole": [9, 36], "detail": [9, 12, 14, 18, 19, 26, 36, 37, 41, 135, 145, 148, 210, 211, 218, 323, 330, 333, 340], "why": [9, 147], "found": [9, 12, 19, 131, 132, 145, 146, 147, 220, 233, 336, 357], "concept": [9, 45, 137, 245, 258, 270, 280, 330, 331, 334, 335, 337, 340, 341, 342, 343, 355, 374, 377], "fact": [9, 43, 137, 340, 356], "import": [9, 11, 12, 14, 19, 36, 37, 41, 43, 130, 147, 337, 341, 374], "u": [9, 22, 139, 140, 150, 151, 216, 219, 225, 330, 334, 340, 342], "now": [9, 12, 22, 23, 30, 36, 39, 139, 204, 209, 211, 212, 214, 226, 229, 234, 238, 312, 323, 324, 327, 332, 333, 337, 340, 344, 351, 355, 359, 367, 374], "2": [9, 11, 15, 24, 26, 27, 28, 30, 32, 34, 38, 40, 42, 44, 45, 51, 52, 53, 59, 60, 61, 62, 64, 67, 68, 80, 81, 82, 87, 93, 96, 97, 101, 111, 121, 130, 131, 134, 135, 139, 141, 147, 148, 150, 151, 152, 155, 156, 159, 160, 163, 172, 174, 184, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 265, 271, 277, 293, 312, 314, 316, 318, 320, 322, 323, 324, 325, 327, 329, 330, 332, 333, 334, 336, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 390, 412, 450, 456, 464, 466, 471, 488], "fulli": [9, 13, 14, 35, 37, 39, 45, 356], "correspond": [9, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 25, 26, 28, 30, 31, 32, 37, 38, 39, 42, 45, 59, 60, 87, 100, 101, 102, 103, 104, 105, 106, 122, 130, 131, 133, 137, 138, 139, 140, 141, 147, 148, 160, 177, 190, 221, 223, 232, 248, 254, 256, 258, 259, 265, 266, 271, 276, 282, 305, 306, 330, 337, 340, 341, 355, 356, 374, 392, 394, 396, 398, 400, 402, 448, 450, 456, 464], "onc": [9, 11, 13, 24, 25, 36, 37, 41, 45, 134, 139, 147, 218, 271, 277, 289, 293, 321, 332, 333, 334, 335, 337, 340, 342, 343], "chang": [9, 10, 11, 12, 14, 19, 24, 25, 26, 30, 32, 35, 36, 45, 122, 134, 137, 143, 147, 160, 166, 174, 184, 231, 248, 265, 271, 274, 277, 306, 321, 340, 355, 356, 448, 456, 466], "problem": [9, 41, 137, 148, 219, 330, 334], "where": [9, 10, 11, 12, 13, 15, 17, 21, 22, 23, 26, 28, 37, 38, 39, 41, 42, 44, 45, 49, 52, 58, 59, 60, 65, 67, 68, 81, 82, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 114, 122, 131, 132, 136, 138, 139, 140, 141, 147, 148, 160, 177, 233, 236, 248, 251, 283, 307, 320, 321, 322, 330, 340, 355, 357, 363, 456], "destin": [9, 11, 12, 21, 22, 23, 28, 32, 36, 38, 39, 41, 45, 133, 137, 138, 140, 145, 189, 190, 204, 205, 206, 213, 214, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 248, 249, 250, 253, 254, 256, 257, 260, 262, 263, 264, 265, 267, 268, 271, 273, 274, 275, 278, 279, 281, 312, 314, 316, 322, 325, 326, 327, 337, 338, 340, 342, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 373, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 456, 458, 460, 467, 469, 470, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "so": [9, 11, 12, 14, 19, 20, 21, 25, 36, 37, 41, 43, 45, 135, 139, 142, 147, 156, 159, 184, 216, 218, 238, 248, 265, 271, 321, 322, 330, 337, 340, 341, 356, 367, 374, 455], "extra": [9, 13, 15, 18, 19, 25, 32, 34, 37, 41, 147, 148, 180, 190, 340, 355], "were": [9, 13, 27, 129, 148, 180, 337, 340, 341, 374], "design": [9, 11, 12, 21, 42, 58, 140, 355], "extens": [9, 24, 26, 27, 29, 40, 41, 129, 139, 148, 152, 155, 224, 242, 261, 266, 282, 283, 292, 297, 300, 311], "henc": [9, 11, 13, 15, 23, 28, 37, 42, 134, 139, 140, 141, 145, 147, 148, 180, 216, 254, 256, 267, 330, 340, 355, 392, 394, 396, 398, 400, 402, 452, 454], "thei": [9, 11, 13, 14, 15, 20, 23, 27, 31, 34, 37, 38, 39, 41, 42, 45, 79, 81, 82, 129, 132, 139, 147, 148, 160, 217, 225, 332, 337, 340, 341, 342, 355, 356, 374], "structur": [9, 11, 34, 147, 160, 190, 265, 277, 407, 410, 447, 449, 455, 461, 463, 465, 485, 494], "must": [9, 10, 11, 12, 13, 15, 17, 19, 21, 23, 27, 31, 32, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 137, 139, 146, 160, 190, 248, 250, 251, 254, 256, 265, 266, 267, 271, 276, 277, 282, 283, 289, 293, 305, 306, 307, 321, 322, 337, 340, 341, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 458, 460, 462, 464, 469, 470, 471, 473, 475, 478, 480, 482, 484, 488, 491, 493], "them": [9, 19, 20, 28, 30, 31, 32, 34, 35, 36, 37, 41, 100, 101, 102, 103, 104, 105, 106, 111, 130, 131, 147, 167, 179, 248, 249, 262, 265, 276, 337, 340, 355, 380, 382, 412, 414, 416, 430, 432, 434, 436, 442, 444, 493], "setter": [9, 25], "destroi": [9, 13, 129, 190, 248, 258, 265, 271, 280, 286, 287, 291, 294, 295, 298, 340, 355, 374, 450, 456, 464], "right": [9, 23, 28, 44, 45, 49, 50, 59, 60, 61, 62, 63, 64, 81, 82, 87, 89, 90, 111, 132, 138, 140, 141, 147, 148, 189, 190, 191, 192, 214, 231, 233, 238, 254, 256, 265, 267, 327, 355, 357, 367, 392, 394, 396, 398, 400, 402, 452, 454, 467], "after": [9, 11, 12, 15, 23, 31, 32, 37, 39, 121, 135, 139, 146, 148, 160, 209, 214, 220, 221, 223, 238, 242, 248, 277, 291, 295, 327, 336, 337, 340, 341, 355, 356, 367, 374, 390, 455, 456, 466, 471, 488], "modifi": [9, 15, 23, 31, 37, 39, 42, 45, 141, 248, 269, 288], "stai": [9, 147, 450], "equival": [9, 27, 129, 408, 417, 448, 462, 486], "null": [9, 208, 215, 220, 248, 249, 250, 253, 254, 256, 257, 260, 262, 263, 264, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 307, 320, 329, 336, 408, 417, 448, 462, 486], "upon": [9, 36, 148, 337, 340, 341, 355, 374], "unless": [9, 17, 20, 42, 148, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 265, 266, 271, 282, 305, 306, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 368, 370, 372, 448, 462, 470], "simpli": [9, 21, 23, 142, 265, 330], "omit": [9, 11, 187, 188, 321], "skeleton": [9, 11], "simplifi": [9, 22, 23, 37, 59, 85, 138, 146, 147], "read": [9, 27, 129, 204, 205, 206, 207, 214, 216, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 312, 314, 316, 318, 327, 330, 338, 341, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 368, 370, 372, 374, 448], "dnnl_primitive_attr_t": [9, 243, 248, 464], "dnnl_primitive_attr_cr": [9, 243, 248], "dnnl_primitive_attr_set_someth": 9, "param": [9, 11, 13, 208, 215, 216, 320, 329, 330, 456], "dnnl_primitive_attr_set_something_els": 9, "other_param": [9, 11], "dnnl_eltwise_backward_primitive_desc_cr": [9, 215, 243, 257, 329], "op_pd": [9, 11, 13], "hint_fwd_pd": [9, 243, 249, 254, 256, 257, 260, 262, 263, 267, 268, 275, 276, 278, 279, 380, 384, 392, 394, 398, 400, 404, 414, 420, 422, 426, 430, 434, 438, 442, 452, 458, 473, 478, 482, 491], "here": [9, 11, 12, 13, 15, 21, 22, 23, 28, 31, 32, 36, 37, 38, 44, 58, 59, 79, 80, 130, 132, 135, 139, 140, 145, 146, 147, 148, 150, 204, 205, 211, 216, 221, 225, 228, 229, 233, 238, 265, 312, 314, 322, 323, 330, 332, 333, 337, 340, 342, 349, 351, 355, 356, 357, 367, 375, 450], "doe": [9, 11, 12, 13, 17, 18, 19, 21, 23, 26, 28, 30, 32, 36, 39, 41, 44, 46, 47, 71, 72, 73, 74, 77, 78, 84, 92, 93, 99, 107, 109, 110, 112, 118, 120, 121, 125, 127, 128, 130, 132, 134, 135, 136, 138, 140, 142, 146, 147, 148, 179, 231, 248, 251, 253, 265, 283, 307, 340, 355, 356, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 450, 452, 454, 456, 458, 460, 464, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "effect": [9, 11, 23, 32, 87, 131, 277, 412], "we": [9, 11, 12, 13, 15, 22, 23, 28, 34, 36, 38, 42, 45, 59, 60, 111, 130, 132, 133, 138, 139, 140, 141, 147, 148, 204, 208, 211, 212, 214, 215, 216, 217, 218, 219, 223, 226, 229, 231, 234, 238, 312, 320, 323, 324, 327, 329, 330, 332, 333, 334, 337, 340, 341, 344, 351, 355, 356, 359, 367, 374], "immedi": [9, 355, 489], "dnnl_primitive_attr_destroi": [9, 243, 248], "dnnl": [9, 10, 11, 12, 13, 14, 15, 17, 19, 23, 24, 25, 27, 28, 30, 31, 36, 37, 39, 41, 42, 43, 45, 129, 131, 135, 136, 138, 139, 143, 146, 147, 148, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 308, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374], "primitive_attr": [9, 11, 12, 13, 14, 23, 36, 41, 45, 206, 207, 210, 214, 216, 218, 219, 225, 226, 230, 232, 236, 243, 248, 302, 316, 318, 322, 327, 330, 331, 333, 334, 335, 342, 343, 344, 353, 356, 363, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 456, 458, 460, 466, 467, 469, 470, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "set_someth": 9, "set_something_els": 9, "primitive_desc": [9, 11, 12, 13, 14, 15, 23, 28, 36, 37, 42, 131, 139, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 250, 254, 256, 257, 260, 262, 263, 264, 267, 268, 271, 273, 275, 276, 278, 279, 302, 305, 306, 312, 314, 316, 318, 321, 322, 323, 324, 325, 327, 330, 332, 333, 334, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 451, 453, 456, 457, 459, 462, 464, 467, 468, 470, 472, 474, 476, 477, 479, 481, 483, 487, 490, 492], "pd": [9, 11, 22, 217, 238, 367, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 451, 452, 453, 454, 457, 458, 459, 460, 462, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493], "happen": [9, 12, 23, 30, 37, 41, 58, 137, 147, 208, 215, 225, 251, 283, 307, 320, 329, 340, 342, 355], "automat": [9, 32, 41, 134, 151, 159, 160, 176, 177, 390, 488], "As": [9, 11, 12, 13, 15, 19, 20, 22, 23, 28, 31, 36, 37, 41, 137, 145, 147, 217, 238, 248, 265, 332, 333, 367, 450, 456], "mention": [9, 13, 15, 28, 37, 41, 111, 217, 322, 332, 333, 340], "abov": [9, 12, 13, 15, 18, 19, 24, 27, 28, 30, 32, 34, 37, 39, 41, 87, 111, 129, 130, 141, 147, 148, 217, 265, 332, 333, 340, 356, 450], "enabl": [9, 10, 11, 13, 14, 15, 19, 23, 24, 25, 26, 27, 28, 30, 33, 34, 38, 39, 40, 41, 42, 43, 45, 129, 130, 134, 135, 141, 143, 147, 204, 214, 226, 229, 234, 243, 265, 277, 289, 300, 302, 312, 321, 322, 327, 334, 340, 342, 344, 351, 359, 448], "extend": [9, 12, 27, 30, 129, 184, 248], "behavior": [9, 10, 11, 13, 15, 19, 23, 37, 39, 40, 41, 42, 44, 45, 135, 139, 141, 156, 159, 161, 162, 179, 180, 184, 248, 266, 280, 293, 305, 486, 489], "explan": 9, "provid": [9, 10, 11, 12, 13, 14, 15, 19, 20, 23, 25, 27, 30, 31, 32, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 148, 179, 180, 195, 196, 204, 211, 214, 226, 229, 234, 238, 248, 265, 269, 271, 288, 289, 293, 312, 323, 327, 344, 351, 355, 356, 359, 367, 418, 448, 456], "section": [9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 26, 28, 34, 36, 37, 41, 44, 132, 134, 135, 139, 140, 146, 216, 330, 340], "scratchpad": [9, 14, 19, 22, 23, 37, 189, 190, 195, 196, 248, 271, 311, 464, 467], "intermedi": [9, 11, 12, 22, 23, 26, 28, 31, 37, 41, 44, 137, 216, 231, 251, 283, 307, 330, 334], "temporari": [9, 13, 14, 22, 32, 37, 217, 218, 271, 277], "implicit": [9, 10, 17, 21, 22, 23, 34, 45, 137, 142, 161, 162], "down": [9, 10, 23, 31, 35, 41, 147, 148, 356], "convers": [9, 10, 12, 23, 35, 41, 109, 161, 162], "f32": [9, 10, 11, 12, 15, 17, 23, 26, 28, 29, 30, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 136, 137, 138, 139, 140, 141, 145, 147, 148, 161, 162, 164, 175, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 311, 312, 314, 316, 318, 322, 323, 325, 327, 330, 333, 334, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 368, 370, 372, 374, 456], "quantiz": [9, 11, 26, 35, 36, 41, 45, 65, 67, 68, 137, 139, 167, 168, 169, 207, 210, 216, 218, 243, 246, 248, 311, 318, 322, 331, 333, 342, 343, 456, 464], "infer": [9, 11, 12, 19, 29, 32, 40, 41, 45, 130, 134, 139, 147, 166, 173, 174, 179, 180, 187, 188, 199, 208, 209, 210, 217, 218, 225, 238, 243, 311, 330, 343, 356, 367, 377], "post": [9, 12, 26, 29, 36, 37, 38, 41, 171, 172, 179, 180, 205, 206, 207, 210, 214, 226, 230, 232, 236, 248, 271, 311, 314, 315, 316, 317, 327, 328, 344, 345, 353, 354, 356, 363, 455, 456, 464], "fuse": [9, 11, 12, 14, 15, 17, 23, 28, 35, 36, 37, 38, 39, 45, 179, 180, 232, 248, 249, 271, 314, 315, 316, 317, 327, 328, 342, 343, 344, 345, 353, 354, 456], "appli": [9, 11, 12, 15, 17, 23, 26, 28, 36, 38, 39, 41, 45, 46, 48, 56, 65, 66, 67, 68, 69, 72, 73, 75, 77, 83, 84, 85, 87, 88, 91, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 112, 114, 116, 121, 123, 124, 125, 132, 136, 138, 139, 141, 160, 166, 171, 172, 174, 177, 180, 220, 225, 236, 250, 251, 265, 271, 276, 283, 307, 322, 336, 337, 340, 342, 356, 363, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 448, 491, 493], "mostli": [9, 37, 160, 177, 265], "becaus": [9, 11, 12, 15, 19, 24, 25, 28, 37, 38, 42, 44, 148, 173, 177, 189, 198, 199, 238, 257, 265, 321, 322, 340, 355, 356, 367, 374, 456], "separ": [9, 11, 15, 23, 37, 42, 130, 137, 148, 238, 265, 271, 332, 333, 340, 356, 367], "delai": [9, 211, 212, 323, 324], "successfulli": 9, "whatev": [9, 232, 356], "configur": [9, 13, 15, 18, 23, 25, 26, 32, 37, 38, 42, 45, 82, 133, 139, 148, 180, 195, 196, 200, 201, 210, 248, 249, 262, 277, 320, 321, 322, 327, 328, 355, 376, 455, 456, 464], "want": [9, 12, 13, 19, 32, 37, 41, 130], "howev": [9, 10, 11, 12, 13, 15, 19, 21, 27, 28, 36, 37, 41, 42, 45, 130, 132, 133, 140, 141, 145, 147, 218, 219, 238, 257, 265, 321, 330, 332, 334, 337, 340, 341, 356, 367, 374], "try": [9, 210, 211, 218, 223, 238, 242, 323, 333, 340, 367, 374], "dnnl_unimpl": [9, 131, 173, 198, 199, 210, 211, 218, 277, 323, 333], "unfortun": [9, 41, 130, 146], "about": [9, 11, 13, 37, 45, 131, 134, 135, 147, 148, 265, 340, 356], "what": [9, 11, 12, 37, 38, 148, 167, 223, 242, 243, 265, 271, 337, 340, 355, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 409, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493, 495], "exactli": [9, 12, 23, 37, 41, 100, 101, 102, 103, 104, 105, 106, 265], "go": [9, 36, 62, 147, 216, 330, 337, 340, 341, 374], "wrong": [9, 131, 340], "document": [9, 11, 12, 22, 37, 41, 43, 130, 145], "benefici": [10, 28, 37, 147, 455], "speedup": [10, 356], "notic": [10, 19, 148, 171, 172, 340], "impact": [10, 12, 26, 30, 146, 147, 148], "accuraci": [10, 12, 23, 30, 36, 37, 38, 41, 45, 216, 223, 224, 330, 331, 340, 341], "how": [10, 11, 12, 13, 15, 17, 21, 23, 27, 28, 30, 31, 36, 38, 39, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 79, 80, 89, 90, 122, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 145, 147, 148, 150, 151, 208, 209, 210, 211, 212, 215, 216, 217, 218, 238, 248, 251, 265, 283, 307, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 456], "numer": [10, 15, 28, 35, 41, 42, 52, 81, 82, 141, 145, 151, 217, 218, 223, 224, 238, 242, 341, 367, 374], "alter": [10, 139], "narrow": 10, "f16": [10, 11, 15, 17, 23, 26, 28, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 136, 137, 138, 139, 140, 141, 145, 161, 162, 164, 175], "bf16": [10, 11, 15, 17, 20, 23, 26, 28, 29, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 136, 137, 138, 139, 140, 141, 145, 161, 162, 164, 175, 211, 311], "tf32": [10, 161, 162], "furthermor": [10, 23, 59], "do": [10, 11, 12, 13, 15, 19, 20, 26, 36, 37, 41, 49, 89, 129, 130, 138, 142, 145, 147, 160, 177, 193, 194, 218, 224, 231, 265, 332, 355, 356, 448, 450], "affect": [10, 11, 30, 38, 41, 131, 147, 160, 277], "datatyp": [10, 12, 26, 139, 148], "remain": [10, 22, 23, 59, 147, 217, 218, 238, 332, 333, 355, 367, 450, 456], "3": [10, 11, 12, 26, 28, 32, 34, 38, 41, 45, 51, 52, 53, 77, 82, 96, 111, 135, 139, 141, 143, 147, 156, 163, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 265, 271, 293, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 338, 340, 341, 344, 346, 349, 353, 355, 356, 357, 359, 361, 363, 365, 368, 370, 372, 374, 450], "strict": [10, 161], "disabl": [10, 19, 24, 25, 40, 134, 135, 148, 254, 256, 260, 264, 269, 277, 288, 289, 394, 396, 400, 402], "smaller": [10, 19, 56, 57, 87, 137, 225, 342], "least": [10, 14, 18, 45, 58, 134, 251, 283, 305, 307, 337, 340, 448], "accur": [10, 23, 41, 219, 334], "expon": [10, 95, 99, 145, 150, 151], "mantissa": [10, 145, 156, 164, 175], "bit": [10, 11, 19, 20, 24, 26, 35, 36, 37, 38, 41, 145, 152, 155, 156, 164, 175, 216, 218, 248, 251, 277, 283, 300, 307, 322, 330, 341, 456, 464, 489], "ignor": [10, 23, 25, 26, 49, 50, 53, 60, 79, 80, 89, 90, 223, 265, 272, 340], "integr": [10, 14, 19, 26, 31, 32, 37, 43, 135, 277], "onednn_default_fpmath_mod": 10, "environ": [10, 18, 19, 24, 25, 30, 33, 40, 41, 43, 130, 134, 135, 146, 148, 277, 355, 356], "variabl": [10, 15, 17, 18, 19, 21, 23, 24, 25, 28, 30, 33, 39, 40, 42, 43, 44, 45, 46, 49, 56, 58, 59, 69, 72, 73, 75, 77, 83, 84, 87, 89, 107, 112, 114, 116, 125, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 146, 148, 166, 174, 238, 243, 271, 277, 340, 355, 356, 367], "dnnl_set_default_fpmath_mod": [10, 243, 259], "set_default_fpmath_mod": [10, 277, 302], "build": [10, 13, 40, 43, 122, 143, 195, 196, 208, 209, 211, 212, 215, 217, 218, 238, 277, 293, 300, 320, 321, 323, 324, 329, 332, 333, 341, 367, 412], "arm": [10, 148, 300], "instruct": [10, 19, 23, 24, 26, 38, 40, 41, 130, 135, 145, 148, 152, 155, 177, 265, 266, 277, 282, 305, 306, 340, 448], "dispatch": [10, 14, 23, 25, 277, 376], "bfloat16": [10, 24, 26, 37, 152, 155, 156, 164, 211, 311, 323], "kernel": [10, 11, 19, 22, 25, 27, 32, 40, 49, 50, 59, 60, 61, 62, 63, 64, 67, 68, 89, 90, 132, 135, 147, 167, 168, 189, 190, 208, 209, 211, 212, 215, 224, 231, 233, 242, 243, 248, 267, 277, 287, 320, 321, 323, 324, 329, 334, 355, 357, 452, 454, 456, 467], "avail": [10, 16, 19, 20, 23, 24, 26, 32, 36, 40, 43, 45, 100, 101, 102, 103, 104, 105, 106, 122, 131, 135, 148, 173, 198, 199, 204, 210, 211, 217, 218, 271, 312, 323, 332, 333, 341, 355, 374, 466], "hardwar": [10, 12, 15, 17, 23, 27, 28, 31, 38, 41, 44, 130, 132, 135, 139, 140, 145, 287, 355], "introduc": [10, 30, 32, 41, 134, 145, 147, 340, 356], "drop": 10, "typic": [11, 12, 15, 21, 31, 32, 37, 38, 41, 44, 87, 128, 130, 137, 140, 141, 147, 171, 172, 216, 225, 265, 271, 274, 330, 340, 342], "bandwidth": [11, 37, 355], "pressur": [11, 37], "lead": [11, 13, 15, 17, 19, 20, 23, 26, 28, 34, 37, 41, 42, 44, 137, 147, 167, 219, 251, 283, 307, 334, 340], "higher": [11, 15, 19, 23, 32, 35, 38, 42, 45, 130, 132, 133, 138, 147, 148], "perform": [11, 12, 13, 14, 19, 20, 24, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 46, 48, 49, 51, 59, 62, 66, 67, 68, 79, 81, 82, 84, 88, 89, 91, 92, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 111, 118, 120, 121, 124, 127, 130, 139, 143, 145, 147, 148, 149, 180, 187, 188, 211, 212, 215, 231, 232, 233, 248, 249, 250, 251, 254, 256, 257, 262, 263, 264, 265, 267, 268, 277, 279, 283, 300, 307, 311, 320, 321, 322, 323, 324, 329, 330, 331, 334, 340, 341, 342, 357, 374, 390, 448, 455, 456, 464, 488], "append": [11, 248, 456], "mechan": [11, 27, 35, 40, 43, 129, 130, 217, 218, 332, 333], "multipl": [11, 12, 13, 14, 15, 17, 22, 23, 30, 31, 32, 34, 35, 37, 41, 42, 105, 130, 136, 137, 143, 150, 151, 160, 177, 183, 184, 230, 238, 247, 251, 265, 270, 281, 318, 321, 330, 331, 334, 335, 337, 340, 342, 343, 353, 355, 356, 367, 445, 448, 450, 466, 497], "order": [11, 12, 14, 19, 22, 23, 24, 27, 30, 36, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135, 137, 139, 140, 147, 148, 160, 167, 168, 177, 200, 201, 211, 212, 215, 223, 248, 251, 253, 254, 256, 265, 266, 267, 272, 277, 283, 307, 323, 324, 329, 340, 356, 390, 392, 394, 396, 398, 400, 402, 412, 450, 452, 454, 456, 464], "just": [11, 12, 19, 22, 23, 25, 28, 37, 40, 134, 135, 146, 147, 148, 150, 160, 210, 211, 218, 323, 333, 334, 337, 340, 341, 355, 374], "like": [11, 14, 15, 19, 22, 23, 31, 37, 39, 41, 43, 44, 52, 87, 132, 139, 147, 148, 248, 293, 330, 334, 340, 455, 456], "dnnl_post_ops_t": [11, 243, 248, 456], "post_op": [11, 36, 206, 207, 210, 214, 219, 225, 226, 230, 232, 243, 248, 302, 316, 318, 322, 327, 334, 342, 344, 353, 356, 417, 464], "attach": [11, 12, 19, 21, 36, 37, 130, 337, 340, 341, 374, 448, 456], "set_post_op": [11, 23, 36, 206, 207, 210, 214, 219, 225, 226, 230, 232, 316, 318, 322, 327, 334, 342, 344, 353, 356, 464], "dnnl_primitive_attr_set_post_op": [11, 243, 248], "simpl": [11, 12, 20, 23, 40, 131, 146, 208, 215, 216, 219, 225, 320, 322, 329, 330, 334, 340, 342], "po": [11, 219, 225, 334, 342], "assert": [11, 13, 30, 147, 209, 211, 212, 216, 217, 218, 265, 321, 323, 324, 330, 450], "len": [11, 251, 283, 307, 456], "append_someth": 11, "particular": [11, 13, 14, 19, 22, 23, 26, 30, 37, 41, 45, 141, 147, 148, 160, 221, 223, 258, 265, 271, 280, 330, 337, 340, 341, 374, 408, 450], "append_something_els": 11, "note": [11, 12, 13, 19, 36, 37, 38, 41, 61, 130, 139, 147, 148, 160, 204, 205, 213, 216, 218, 228, 229, 233, 238, 253, 271, 293, 312, 314, 321, 322, 325, 330, 332, 333, 340, 349, 351, 357, 367, 390], "matter": [11, 30, 37, 41], "further": [11, 22, 23, 27, 59, 129, 138, 160, 177], "would": [11, 12, 13, 15, 19, 22, 23, 25, 32, 36, 37, 41, 42, 45, 132, 137, 147, 216, 248, 249, 251, 265, 276, 283, 307, 322, 330, 340, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 450, 456, 464, 470, 491, 493], "togeth": [11, 33, 147, 276, 356, 380, 414, 430, 434, 442, 444, 455, 491], "anoth": [11, 13, 22, 37, 109, 130, 135, 139, 147, 271, 293, 321, 337, 340, 341, 374, 412, 417, 450], "sequenc": [11, 14, 22, 23, 41, 135, 160, 217, 218, 238, 248, 332, 333, 337, 341, 356, 367, 374, 456], "appear": [11, 21, 37, 140, 147, 148], "maximum": [11, 12, 14, 17, 34, 37, 102, 132, 169, 217, 218, 233, 238, 246, 255, 283, 330, 357, 367], "32": [11, 20, 37, 38, 41, 145, 156, 160, 164, 175, 211, 212, 214, 217, 218, 243, 248, 251, 271, 283, 307, 322, 323, 324, 327, 456, 464], "page": [11, 14, 21, 37, 38, 62, 135, 136, 137, 142, 375], "moreov": [11, 22, 25, 28, 38, 130, 160, 177], "depend": [11, 12, 13, 14, 15, 18, 19, 26, 31, 32, 35, 38, 41, 42, 43, 45, 55, 111, 130, 133, 134, 139, 147, 160, 177, 248, 251, 253, 257, 265, 266, 271, 282, 283, 297, 304, 305, 306, 307, 320, 321, 330, 340, 341, 355, 374, 390, 404, 406, 450, 456, 464], "actual": [11, 12, 13, 14, 23, 37, 39, 41, 130, 139, 147, 159, 176, 248, 265, 271, 330, 337, 340, 355, 448, 464, 476], "instanc": [11, 12, 13, 15, 22, 23, 25, 36, 41, 45, 130, 134, 137, 141, 146, 147, 160, 265, 283, 291, 295, 307, 340, 409, 455, 489], "refer": [11, 12, 13, 14, 15, 17, 19, 21, 23, 27, 28, 30, 34, 38, 39, 42, 43, 44, 45, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 147, 190, 210, 211, 218, 248, 249, 251, 257, 262, 265, 271, 283, 307, 323, 330, 333, 337, 340, 341, 355, 356, 374, 386], "veri": [11, 12, 13, 37, 41, 145, 147, 337, 340], "slow": 11, "robust": [11, 36, 37], "code": [11, 14, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 36, 37, 41, 43, 129, 131, 134, 135, 137, 142, 147, 148, 224, 265, 277, 321, 322, 332, 333, 337, 341, 355, 356, 374, 376], "inspect": [11, 14, 271, 300, 340], "index": [11, 15, 17, 21, 22, 23, 28, 30, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 136, 137, 138, 139, 140, 141, 142, 147, 208, 215, 223, 243, 248, 253, 258, 265, 266, 271, 282, 290, 300, 303, 305, 306, 320, 321, 329, 332, 333, 337, 340, 341, 374, 388, 390, 408, 410, 448, 450, 456, 462, 464, 467, 470, 488], "less": [11, 17, 23, 45, 87, 130, 138, 150, 151, 238, 269, 288, 322, 367, 408], "than": [11, 13, 17, 19, 23, 26, 28, 37, 41, 45, 56, 57, 87, 122, 137, 138, 142, 147, 148, 150, 151, 190, 195, 196, 211, 212, 215, 225, 269, 288, 323, 324, 329, 340, 342, 356, 408], "its": [11, 13, 14, 17, 19, 24, 26, 28, 30, 34, 35, 36, 39, 41, 44, 95, 97, 129, 130, 139, 147, 148, 160, 179, 225, 238, 265, 291, 294, 321, 322, 340, 341, 342, 348, 367, 374, 408, 417, 448, 462, 486, 489], "most": [11, 12, 14, 17, 19, 20, 21, 23, 24, 26, 30, 34, 37, 39, 41, 44, 45, 87, 130, 136, 137, 142, 145, 147, 160, 189, 258, 271, 330, 340, 342, 355, 408, 417, 448, 462, 486], "popular": [11, 12, 35, 147, 340], "activ": [11, 12, 13, 15, 18, 22, 34, 38, 39, 56, 72, 83, 92, 139, 147, 160, 177, 189, 190, 225, 231, 243, 248, 276, 342, 355, 412, 456, 464, 467, 491, 493], "preced": [11, 15, 19, 22, 24, 25, 34, 40, 44, 50, 60, 61, 64, 132, 134, 135, 140, 148, 160, 355], "inner": [11, 22, 26, 36, 41, 147, 160, 183, 184, 209, 226, 247, 270, 311, 321, 345, 355, 419, 420, 421, 422, 423, 424, 450, 497], "product": [11, 22, 26, 36, 41, 45, 87, 122, 183, 184, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 243, 247, 251, 265, 270, 283, 307, 311, 312, 314, 316, 318, 320, 321, 323, 324, 325, 327, 329, 336, 338, 345, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 368, 370, 372, 419, 420, 421, 422, 423, 424, 450, 497], "dnnl_post_ops_append_eltwis": [11, 243, 248], "append_eltwis": [11, 36, 206, 210, 214, 225, 226, 230, 232, 316, 322, 327, 342, 344, 353, 356, 456], "simplic": [11, 12, 139, 147, 213, 216, 219, 325, 330, 334, 337, 341, 374], "algorithm": [11, 12, 15, 19, 28, 36, 37, 132, 136, 138, 148, 150, 189, 190, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 248, 250, 254, 256, 257, 263, 267, 273, 275, 279, 302, 312, 314, 316, 318, 321, 322, 323, 324, 325, 327, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 368, 370, 372, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 456, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "alg": [11, 148, 355, 356], "alpha": [11, 15, 23, 28, 38, 44, 69, 70, 75, 76, 83, 96, 133, 137, 167, 168, 189, 190, 206, 208, 211, 212, 214, 215, 219, 223, 225, 226, 228, 230, 243, 248, 251, 257, 263, 268, 276, 283, 302, 307, 316, 320, 323, 324, 327, 329, 334, 340, 342, 344, 349, 353, 356, 404, 406, 438, 440, 456, 458, 460, 467, 491, 493], "beta": [11, 15, 23, 28, 42, 44, 51, 52, 75, 76, 81, 82, 95, 116, 117, 137, 167, 168, 189, 190, 206, 208, 211, 212, 214, 215, 219, 223, 226, 228, 230, 243, 248, 249, 251, 257, 262, 263, 276, 283, 302, 307, 316, 320, 323, 324, 327, 329, 334, 340, 344, 349, 353, 356, 404, 406, 438, 440, 456, 467, 491, 493], "replac": [11, 28, 41, 45, 56, 57, 135, 139, 140, 146, 148, 334, 335, 340], "dst": [11, 12, 15, 17, 21, 22, 23, 26, 28, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 136, 137, 138, 140, 141, 142, 150, 151, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 248, 249, 257, 262, 312, 314, 316, 318, 320, 322, 323, 324, 325, 326, 327, 329, 332, 333, 338, 340, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 368, 370, 372, 373, 386, 388, 390, 420, 422, 424, 456, 470, 471, 488], "operatornam": [11, 12, 26, 28], "preserv": [11, 13, 36, 37, 208, 215, 320, 329], "accumul": [11, 12, 20, 26, 34, 41, 55, 132, 133, 137, 139, 224, 238, 242, 248, 272, 291, 341, 367, 374, 455, 456], "exist": [11, 14, 26, 27, 30, 32, 45, 129, 193, 194, 265, 290, 297, 450], "prior": [11, 248, 266, 271, 272, 305, 340, 456, 462, 463], "shift": [11, 22, 38, 41, 52, 81, 179, 180, 205, 207, 227, 243, 248, 249, 262, 271, 314, 318, 346, 464], "multipli": [11, 13, 22, 34, 41, 139, 169, 219, 224, 238, 242, 246, 248, 251, 265, 281, 283, 307, 334, 341, 367, 374, 456, 488], "scale": [11, 17, 21, 22, 23, 35, 36, 39, 41, 45, 52, 65, 67, 68, 69, 70, 79, 80, 81, 82, 98, 137, 138, 141, 142, 167, 168, 179, 180, 205, 207, 210, 216, 218, 225, 227, 236, 241, 243, 248, 249, 251, 262, 271, 275, 281, 283, 307, 314, 318, 322, 330, 331, 332, 333, 334, 335, 342, 343, 346, 363, 364, 372, 456, 463, 464, 473, 475, 488], "residu": [11, 32, 217, 455], "learn": [11, 12, 19, 22, 23, 24, 26, 35, 36, 37, 41, 130, 152, 155, 231, 300, 355, 455], "block": [11, 14, 21, 22, 32, 135, 148, 159, 160, 176, 177, 189, 190, 232, 265, 300, 340, 355, 450, 455], "previous": [11, 38, 265, 322, 341, 355, 374, 448, 464], "scenario": [11, 26, 27, 34, 129, 130, 132, 166, 174, 322], "previou": [11, 12, 19, 28, 36, 38, 137, 139, 147, 208, 215, 216, 225, 248, 320, 329, 330, 342, 456], "magnitud": 11, "operand": [11, 34, 41, 148, 248, 456], "s32": [11, 12, 23, 26, 28, 30, 38, 39, 41, 45, 60, 61, 64, 67, 68, 79, 80, 100, 101, 102, 103, 104, 105, 106, 132, 133, 137, 138, 140, 164, 175, 216, 225, 330, 342], "s8": [11, 12, 15, 17, 20, 23, 26, 28, 34, 38, 39, 42, 45, 65, 67, 68, 98, 132, 133, 137, 138, 139, 140, 141, 148, 164, 175, 210, 216, 218, 225, 236, 322, 330, 333, 342, 363], "u8": [11, 12, 17, 20, 23, 26, 28, 29, 34, 38, 39, 42, 45, 65, 67, 68, 98, 132, 133, 137, 138, 139, 140, 141, 148, 164, 175, 207, 210, 216, 218, 225, 311, 319, 322, 330, 333, 342], "gemm": [11, 13, 19, 23, 41, 147, 217, 218, 333, 356], "cdot": [11, 12, 15, 22, 23, 28, 38, 39, 41, 42, 44, 45, 49, 52, 59, 65, 67, 68, 76, 81, 87, 89, 98, 100, 101, 102, 103, 104, 105, 106, 123, 132, 133, 137, 138, 139, 141, 142, 151, 330], "_point": 11, "origin": [11, 12, 15, 28, 37, 38, 42, 79, 80, 137, 138, 141, 142, 147, 148, 150, 225, 248, 257, 265, 322, 330, 342, 456], "reinterpret": [11, 23, 27, 248, 456], "_data": 11, "_type": 11, "gpu": [11, 14, 15, 17, 21, 23, 26, 27, 28, 29, 30, 42, 44, 45, 129, 132, 134, 135, 136, 137, 139, 140, 141, 142, 148, 157, 158, 204, 220, 221, 224, 242, 258, 300, 311, 312, 340, 355, 356, 377, 494], "1x1": [11, 248, 456], "seen": [11, 356], "model": [11, 14, 22, 23, 26, 27, 31, 32, 34, 35, 37, 38, 39, 65, 98, 129, 139, 209, 211, 212, 215, 217, 218, 223, 238, 244, 300, 323, 324, 329, 332, 333, 334, 340, 367], "mobilenet_v1": 11, "stack": [11, 139], "opportun": 11, "dnnl_post_ops_append_dw": [11, 243, 248], "append_dw": [11, 456], "better": [11, 17, 19, 37, 145, 147, 265, 321, 330, 334, 340, 355, 356], "readabl": [11, 32, 340, 374], "assum": [11, 12, 14, 18, 19, 23, 41, 43, 59, 67, 68, 133, 135, 138, 147, 204, 214, 216, 219, 226, 229, 234, 238, 248, 251, 265, 271, 283, 307, 312, 327, 330, 332, 333, 334, 340, 341, 344, 351, 355, 356, 359, 367, 374, 450, 456], "2d": [11, 15, 23, 28, 39, 41, 44, 45, 87, 132, 133, 138, 140, 141, 147, 160, 177, 248, 254, 256, 267, 275, 340, 356, 370, 371, 392, 394, 396, 398, 400, 402, 452, 454, 456], "notat": [11, 13, 28, 45, 147, 160, 177], "conv_1x1": 11, "weight": [11, 13, 19, 21, 22, 23, 26, 36, 37, 38, 39, 41, 45, 59, 60, 61, 62, 63, 64, 87, 133, 137, 139, 145, 147, 148, 160, 166, 174, 177, 187, 188, 189, 190, 193, 194, 204, 209, 210, 211, 212, 214, 215, 217, 218, 225, 226, 229, 230, 231, 232, 234, 238, 248, 254, 256, 260, 264, 265, 268, 271, 276, 312, 321, 322, 323, 324, 327, 329, 332, 333, 342, 343, 344, 351, 353, 355, 356, 359, 367, 380, 382, 384, 386, 392, 393, 394, 396, 398, 399, 400, 402, 414, 416, 420, 421, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 446, 456, 464, 467, 476, 491, 493], "spatial": [11, 13, 15, 22, 23, 39, 44, 49, 50, 59, 60, 61, 62, 63, 64, 79, 80, 89, 90, 132, 133, 138, 140, 147, 160, 177, 248, 254, 256, 265, 267, 275, 340, 392, 394, 396, 398, 400, 402, 412, 452, 454, 456, 473, 475], "kh": [11, 12, 22, 23, 39, 41, 49, 59, 60, 89, 132, 214, 231, 232, 233, 248, 327, 355, 356, 357, 456], "kw": [11, 12, 22, 23, 39, 41, 49, 59, 89, 132, 214, 231, 232, 233, 248, 327, 355, 356, 357, 456], "conv_dw": 11, "g": [11, 12, 13, 15, 18, 22, 23, 28, 32, 37, 39, 42, 43, 59, 81, 82, 140, 146, 147, 148, 177, 204, 214, 216, 218, 219, 229, 238, 248, 265, 312, 327, 330, 334, 340, 351, 367, 390, 410, 456, 464, 466, 471, 488], "oc": [11, 12, 22, 23, 39, 59, 208, 214, 215, 226, 231, 232, 243, 248, 320, 327, 329, 344, 355, 356, 456], "ic": [11, 12, 22, 23, 39, 59, 65, 98, 138, 141, 205, 206, 207, 208, 213, 214, 215, 222, 226, 228, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 248, 314, 316, 318, 320, 325, 327, 329, 338, 344, 349, 355, 356, 357, 359, 361, 363, 365, 368, 370, 372, 456], "pad_l": 11, "pad_r": 11, "conv_": [11, 12], "dw": [11, 22, 23, 49, 59, 60, 89, 132, 233, 357], "dst_": [11, 12, 28, 41, 65, 95, 98], "n": [11, 12, 13, 15, 17, 21, 22, 23, 30, 34, 38, 39, 42, 44, 45, 49, 51, 52, 54, 58, 59, 81, 82, 85, 87, 89, 123, 132, 133, 135, 137, 138, 140, 142, 143, 147, 160, 177, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 251, 253, 265, 281, 283, 302, 307, 312, 314, 316, 318, 320, 323, 325, 327, 329, 330, 333, 334, 336, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 456, 489, 496], "oc_": 11, "ceil": [11, 49, 89, 167, 168, 248, 456], "oh_": 11, "ow_": 11, "oh_conv_1x1": 11, "ow_conv_1x1": 11, "height": [11, 22, 23, 59, 60, 89, 90, 147, 160, 177, 205, 206, 207, 213, 214, 222, 226, 228, 233, 234, 235, 236, 237, 239, 241, 254, 256, 267, 314, 316, 318, 321, 325, 327, 338, 344, 349, 357, 359, 361, 363, 365, 368, 372, 392, 394, 396, 398, 400, 402, 452, 454], "width": [11, 22, 23, 59, 60, 89, 90, 147, 160, 177, 205, 206, 207, 213, 214, 222, 226, 228, 233, 234, 235, 236, 237, 239, 241, 254, 256, 267, 314, 316, 318, 321, 325, 327, 338, 344, 349, 357, 359, 361, 363, 365, 368, 372, 392, 394, 396, 398, 400, 402, 452, 454], "conv": [11, 12, 23, 36, 131, 135, 146, 148, 208, 210, 211, 212, 215, 231, 232, 320, 322, 323, 324, 329, 355, 356], "bia": [11, 12, 22, 23, 38, 39, 45, 54, 55, 59, 62, 81, 82, 87, 139, 151, 160, 177, 180, 187, 188, 204, 210, 211, 212, 214, 215, 226, 229, 230, 238, 248, 254, 256, 260, 264, 271, 276, 312, 321, 322, 323, 324, 327, 329, 344, 351, 353, 367, 380, 382, 394, 396, 400, 402, 414, 416, 422, 424, 430, 432, 434, 436, 442, 444, 446, 456, 467, 476, 491, 493], "though": [11, 13, 20, 37, 41, 139, 195, 196, 330, 334, 340], "convent": [11, 15, 17, 21, 23, 28, 34, 37, 39, 42, 44, 45, 46, 49, 56, 58, 59, 69, 72, 73, 75, 77, 83, 84, 87, 89, 107, 112, 114, 116, 125, 132, 133, 137, 138, 139, 140, 141, 142, 147, 148, 265, 311, 340, 355, 375], "impli": [11, 122, 180, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 368, 370, 372], "part": [11, 12, 14, 19, 31, 35, 40, 131, 134, 265, 340, 355, 450], "dst_1x1": 11, "wei_dw": 11, "dst_dw": 11, "dnnl_format_tag_ani": [11, 132, 139, 160, 177, 208, 215, 250, 254, 256, 260, 265, 268, 271, 273, 275, 276, 320, 329], "coincid": [11, 147], "util": [11, 13, 25, 30, 130, 238, 247, 252, 341, 367], "lifetim": [11, 31, 129, 190, 248, 266, 271, 305], "through": [11, 31, 36, 38, 146, 238, 293, 322, 337, 340, 355, 367, 374, 412], "thu": [11, 45, 130, 238, 355, 367], "gain": [11, 36, 356], "expect": [11, 14, 15, 23, 35, 39, 41, 42, 44, 45, 132, 138, 148, 150, 151, 179, 189, 190, 223, 224, 248, 340, 341, 355, 356, 390, 448, 464, 466, 471, 476, 488, 489], "dnnl_post_ops_append_binari": [11, 243, 248], "append_binari": [11, 207, 318, 456], "desc": [11, 12, 13, 14, 27, 30, 36, 37, 129, 131, 135, 147, 189, 190, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 265, 305, 306, 312, 314, 316, 318, 321, 322, 323, 324, 325, 327, 330, 332, 333, 334, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 456, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "src1": [11, 248, 388, 456], "second": [11, 22, 34, 41, 59, 97, 100, 101, 102, 103, 104, 105, 106, 111, 160, 177, 189, 190, 238, 248, 265, 293, 337, 355, 367, 450, 456], "_1": [11, 88, 91], "per": [11, 17, 21, 23, 35, 39, 42, 45, 60, 62, 63, 64, 65, 67, 68, 81, 82, 97, 98, 130, 141, 209, 236, 265, 277, 330, 356, 363, 456, 494], "broadcast": [11, 17, 21, 45, 48, 54, 66, 87, 88, 91, 94, 121, 122, 124, 133, 137, 142, 248, 250, 456], "channel": [11, 15, 22, 23, 35, 38, 39, 42, 44, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 67, 68, 81, 82, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 133, 139, 140, 141, 150, 151, 160, 177, 204, 205, 206, 207, 213, 214, 222, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 263, 265, 312, 314, 316, 318, 321, 325, 327, 338, 340, 344, 346, 349, 351, 355, 357, 359, 361, 363, 365, 367, 368, 369, 370, 372, 412, 456], "format_tag": [11, 12, 14, 17, 23, 36, 37, 39, 45, 133, 136, 138, 139, 147, 148, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 265, 302, 312, 314, 316, 318, 323, 324, 325, 327, 332, 333, 337, 338, 340, 341, 342, 343, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 392, 394, 396, 398, 400, 402, 414, 416, 420, 422, 424, 430, 432, 434, 436, 442, 444, 448, 450, 469, 475, 491, 493], "tag": [11, 12, 13, 23, 30, 37, 39, 45, 132, 138, 141, 160, 177, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 265, 271, 312, 314, 316, 318, 321, 322, 323, 324, 325, 327, 337, 338, 340, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 450], "later": [11, 14, 18, 19, 37, 81, 147, 204, 205, 222, 229, 234, 312, 314, 338, 340, 351, 359], "mismatch": [11, 37, 148, 223, 340], "suboptim": [11, 15, 23, 28, 42, 44, 265, 356, 448], "initi": [11, 14, 22, 24, 27, 37, 45, 130, 133, 139, 147, 152, 155, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 250, 254, 256, 260, 265, 266, 268, 273, 275, 276, 277, 282, 293, 294, 305, 306, 312, 314, 316, 318, 321, 323, 324, 325, 327, 329, 330, 332, 333, 334, 338, 340, 342, 344, 346, 351, 353, 359, 361, 363, 365, 368, 372, 380, 382, 392, 394, 396, 398, 400, 402, 414, 416, 420, 422, 424, 430, 432, 434, 436, 442, 444, 448, 469, 475, 491, 493], "get_params_binari": [11, 456], "dnnl_post_ops_append_prelu": [11, 243, 248], "append_prelu": [11, 456], "int": [11, 12, 41, 135, 143, 147, 156, 159, 160, 184, 190, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 253, 265, 266, 269, 271, 272, 277, 278, 279, 281, 282, 283, 288, 289, 302, 303, 305, 306, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 332, 333, 334, 336, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494], "mask": [11, 12, 23, 38, 39, 45, 130, 137, 210, 216, 219, 225, 243, 248, 322, 330, 334, 342, 456, 464, 489], "assumpt": [11, 22, 138, 342], "runtim": [11, 12, 15, 27, 30, 32, 34, 42, 45, 51, 81, 129, 131, 137, 143, 148, 189, 190, 225, 247, 248, 266, 271, 282, 283, 285, 286, 297, 304, 307, 330, 340, 341, 342, 355, 356, 374, 456, 494], "dnnl_arg_attr_multiple_post_op": [11, 17, 23, 28, 39, 45, 132, 136, 138, 141, 207, 243, 271, 318, 456], "dnnl_arg_weight": [11, 12, 23, 36, 39, 45, 133, 208, 209, 210, 211, 212, 214, 215, 216, 219, 225, 226, 230, 231, 232, 234, 243, 271, 320, 322, 323, 324, 327, 329, 330, 334, 342, 344, 353, 355, 356, 359, 456], "fp32": [11, 19, 26, 37], "plain": [11, 12, 21, 45, 137, 160, 177, 248, 265, 356, 456], "ab": [11, 22, 28, 30, 34, 38, 39, 45, 47, 150, 151, 169, 177, 207, 225, 246, 248, 318, 342, 450, 456], "acb": [11, 177, 248, 456], "acdb": [11, 22, 177, 248, 456], "acdeb": [11, 177, 248, 456], "between": [11, 12, 13, 14, 17, 18, 19, 27, 29, 31, 34, 35, 41, 49, 59, 89, 90, 109, 129, 130, 137, 145, 147, 148, 166, 174, 195, 196, 208, 209, 211, 212, 215, 220, 221, 238, 248, 258, 265, 274, 293, 311, 320, 321, 323, 324, 329, 330, 334, 340, 355, 367, 377, 412, 450, 456, 464, 470], "th": [11, 38, 100, 101, 102, 103, 104, 105, 106, 248, 456, 464], "dedic": [11, 30, 36, 248, 456, 464], "along": [11, 31, 45, 58, 67, 68, 100, 101, 102, 103, 104, 105, 106, 114, 131, 136, 140, 141, 146, 248, 265, 278, 368, 369, 370, 371, 456, 464, 478, 480], "common": [11, 12, 14, 31, 37, 130, 148, 195, 196, 238, 247, 248, 270, 337, 340, 341, 367, 374, 456, 464], "whole": [11, 12, 133, 147, 238, 248, 367, 456, 464], "laid": [11, 14, 22, 147, 160, 177, 248, 265, 274, 340, 355, 456], "out": [11, 12, 14, 15, 22, 27, 30, 31, 34, 44, 59, 60, 61, 62, 63, 64, 129, 132, 135, 140, 147, 148, 160, 173, 177, 183, 184, 198, 199, 200, 201, 208, 215, 217, 222, 223, 234, 243, 248, 253, 265, 274, 281, 320, 329, 332, 333, 338, 340, 355, 359, 390, 456, 487], "cnn": [11, 15, 22, 23, 29, 37, 38, 39, 40, 42, 132, 140, 145, 160, 177, 209, 210, 211, 212, 248, 265, 311, 330, 340, 355, 456], "4d": [11, 39, 81, 82, 141, 147, 160, 177, 248, 265, 340, 456], "h": [11, 15, 17, 22, 23, 26, 39, 43, 44, 51, 52, 54, 132, 133, 137, 146, 147, 150, 154, 155, 156, 158, 159, 160, 162, 163, 168, 170, 172, 174, 177, 180, 182, 184, 186, 188, 190, 192, 194, 196, 197, 199, 201, 203, 208, 209, 212, 215, 217, 218, 220, 223, 224, 231, 238, 242, 248, 265, 320, 324, 329, 336, 337, 340, 341, 355, 367, 374, 410, 411, 412, 456, 494], "w": [11, 15, 17, 22, 23, 38, 39, 44, 45, 51, 52, 54, 132, 133, 137, 139, 147, 156, 160, 164, 177, 208, 209, 211, 212, 215, 218, 223, 231, 232, 248, 265, 320, 323, 324, 329, 332, 333, 340, 355, 456], "let": [11, 12, 23, 36, 37, 39, 59, 60, 138, 147, 163, 165, 211, 212, 216, 231, 323, 324, 330, 337, 340, 341, 355, 356, 374], "consid": [11, 12, 13, 15, 21, 23, 26, 37, 41, 42, 142, 147, 180, 254, 256, 265, 267, 330, 337, 340, 417], "pattern": [11, 14, 30, 35, 244], "pretti": [11, 340], "topologi": [11, 23, 36, 132, 140, 208, 209, 211, 212, 225, 238, 320, 321, 323, 324, 342, 355, 367], "resnet": [11, 34], "famili": [11, 41, 152, 155], "append_sum": [11, 219, 334, 456], "eltwise_relu": [11, 36, 151, 206, 209, 210, 211, 212, 214, 221, 222, 223, 224, 225, 226, 230, 232, 242, 316, 321, 322, 323, 324, 327, 337, 338, 340, 341, 342, 344, 353, 356, 374, 491, 493], "slope": [11, 15, 23, 83, 96, 97, 180, 210, 223, 276, 322, 340, 491, 493], "f": [11, 18, 22, 116, 117, 136, 138, 139, 177, 204, 205, 206, 207, 210, 213, 214, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 248, 251, 283, 307, 312, 314, 316, 318, 322, 325, 327, 330, 333, 334, 338, 340, 342, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 368, 370, 372, 456, 464], "unus": [11, 276], "convolution_forward": [11, 12, 14, 23, 36, 131, 209, 210, 211, 212, 214, 231, 232, 254, 302, 321, 322, 323, 324, 327, 355, 356, 392, 394, 462], "conv_d": [11, 356, 456], "src": [11, 12, 15, 18, 19, 21, 22, 23, 26, 28, 32, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 136, 137, 138, 140, 141, 142, 146, 148, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 249, 257, 262, 312, 314, 316, 318, 320, 323, 324, 325, 326, 327, 329, 330, 332, 333, 338, 340, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 373, 386, 390, 420, 422, 424, 470, 471, 488], "hypothet": 11, "illustr": 11, "set_scales_mask": [11, 12, 45, 210, 216, 219, 225, 236, 322, 330, 331, 334, 335, 342, 343, 363, 464], "cover": [11, 12, 26, 30, 37, 41, 147, 340, 355], "eltwise_tanh": [11, 151, 491, 493], "eltwise_linear": [11, 151], "linear": [11, 14, 28, 65, 67, 68, 79, 80, 98, 138, 147, 150, 151, 167, 168, 251, 257, 275, 341, 374, 448], "dnnl_arg_src": [11, 12, 15, 23, 28, 36, 39, 42, 44, 45, 132, 133, 136, 138, 140, 141, 205, 208, 209, 210, 211, 212, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 266, 271, 282, 305, 306, 314, 320, 321, 322, 323, 324, 327, 329, 330, 334, 336, 337, 338, 340, 341, 342, 344, 346, 349, 353, 355, 356, 357, 359, 361, 363, 365, 368, 370, 374, 410, 462, 470], "dnnl_arg_dst": [11, 12, 15, 17, 21, 23, 28, 36, 39, 42, 44, 45, 132, 133, 136, 138, 140, 141, 142, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 271, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 334, 336, 337, 338, 340, 341, 342, 344, 346, 349, 353, 355, 356, 357, 359, 361, 363, 365, 368, 370, 372, 374], "s_": 11, "mobilenet": 11, "pad": [11, 22, 23, 49, 50, 59, 60, 61, 62, 63, 64, 89, 90, 132, 139, 147, 148, 150, 151, 189, 190, 214, 218, 231, 232, 233, 238, 243, 248, 254, 256, 265, 267, 271, 321, 327, 332, 355, 356, 357, 367, 392, 394, 396, 398, 400, 402, 450, 452, 454, 456, 467], "dnnl_arg_attr_post_op_dw": [11, 23, 243, 271], "auto": [11, 12, 13, 23, 30, 32, 35, 36, 37, 41, 48, 66, 88, 91, 94, 111, 121, 122, 124, 139, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 321, 322, 323, 324, 325, 327, 330, 332, 333, 334, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374], "cpd": 11, "dw_weight_md": 11, "exec_arg_md": [11, 189, 305, 306, 462, 470], "dw_bias_md": 11, "dnnl_arg_bia": [11, 23, 39, 45, 139, 204, 208, 209, 210, 211, 212, 214, 215, 217, 218, 226, 229, 230, 238, 243, 271, 312, 320, 322, 323, 324, 327, 329, 332, 333, 344, 351, 353, 367], "behaviour": 11, "relu_": 11, "scales_": 11, "addit": [11, 14, 15, 17, 19, 22, 23, 24, 25, 26, 30, 37, 39, 41, 45, 48, 60, 62, 63, 64, 87, 106, 130, 135, 180, 190, 204, 214, 226, 229, 234, 265, 293, 312, 322, 327, 337, 340, 341, 344, 351, 355, 356, 359, 374], "conv_dst_md": [11, 208, 210, 211, 212, 214, 215, 231, 232, 320, 322, 323, 324, 327, 329, 355, 356], "mb": [11, 22, 135, 230, 248, 353, 456, 464], "nchw": [11, 15, 22, 44, 132, 138, 140, 177, 205, 206, 209, 210, 211, 212, 213, 214, 221, 222, 224, 226, 228, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 314, 316, 321, 322, 323, 324, 325, 327, 337, 338, 340, 341, 344, 349, 355, 356, 357, 359, 361, 363, 365, 368, 372, 374], "abcd": [11, 22, 148, 177, 239, 355, 356, 368], "binary_add": [11, 151, 207, 318], "src1_md": 11, "To": [11, 12, 19, 22, 23, 26, 27, 30, 31, 36, 37, 38, 41, 44, 59, 62, 111, 129, 134, 135, 137, 138, 146, 148, 218, 238, 332, 334, 337, 340, 341, 355, 367, 374], "argument": [11, 12, 36, 95, 173, 189, 190, 198, 199, 204, 205, 206, 207, 211, 212, 213, 214, 222, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 248, 249, 262, 266, 271, 276, 282, 293, 304, 305, 306, 312, 314, 316, 318, 321, 323, 324, 325, 327, 332, 333, 338, 340, 341, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 368, 370, 372, 380, 382, 410, 414, 416, 430, 432, 434, 436, 442, 444, 450, 462, 464, 470, 491, 493], "unordered_map": [11, 204, 205, 206, 207, 209, 211, 212, 213, 214, 217, 218, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 305, 306, 312, 314, 316, 318, 321, 323, 324, 325, 327, 332, 333, 338, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 368, 370, 372, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 451, 453, 456, 457, 459, 462, 468, 470, 472, 474, 477, 479, 481, 483, 487, 490, 492], "arg": [11, 12, 36, 208, 215, 243, 248, 266, 271, 282, 305, 306, 320, 329, 378, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 410, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 451, 453, 457, 459, 462, 464, 468, 470, 472, 474, 477, 479, 481, 483, 487, 490, 492], "insert": [11, 35, 87, 204, 205, 206, 207, 211, 212, 213, 214, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 312, 314, 316, 318, 323, 324, 325, 327, 338, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 368, 370, 372, 456], "conv_src_memori": [11, 208, 210, 211, 212, 215, 320, 322, 323, 324, 329], "binary_post_op_posit": [11, 17, 23, 28, 39, 45, 132, 136, 138, 141], "hard": 11, "dnnl_arg_src_1": [11, 15, 17, 23, 28, 39, 45, 132, 136, 138, 141, 206, 207, 243, 271, 316, 318], "parenthes": 11, "around": [11, 14, 20, 216, 330, 342, 355], "binary_post_op_src1_memori": 11, "either": [12, 14, 15, 17, 19, 21, 34, 37, 38, 41, 42, 45, 50, 51, 53, 60, 61, 64, 79, 80, 111, 133, 136, 142, 145, 147, 148, 150, 151, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 249, 262, 263, 265, 267, 275, 276, 279, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 438, 440, 450, 452, 454, 473, 475, 482, 484], "sign": [12, 26, 35, 38, 41, 156, 164, 175, 248, 251, 271, 283, 307, 322, 464], "unsign": [12, 26, 35, 41, 156, 164, 175, 190, 225, 243, 248, 249, 251, 262, 276, 277, 280, 283, 302, 307, 322, 342, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 464, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493, 494], "primari": 12, "goal": 12, "precis": [12, 20, 23, 26, 36, 38, 39, 41, 45, 127, 137, 145, 147, 156, 164, 175, 216, 219, 245, 248, 251, 283, 307, 330, 331, 334, 450, 464], "compat": [12, 19, 38], "relat": [12, 15, 17, 19, 21, 23, 26, 28, 32, 34, 42, 44, 132, 135, 136, 137, 138, 139, 140, 141, 142, 219, 332, 333, 334, 340, 341, 356, 374], "materi": 12, "lower": [12, 15, 22, 23, 26, 31, 32, 38, 41, 56, 57, 130, 132, 133, 138, 147, 148, 160], "deep": [12, 22, 23, 24, 26, 35, 36, 37, 41, 130, 146, 152, 155, 231, 294, 355], "annot": [12, 135, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 332, 333], "x_": [12, 38, 41, 330], "scale_": 12, "x": [12, 17, 22, 23, 41, 48, 66, 79, 80, 88, 91, 94, 124, 135, 137, 142, 147, 151, 177, 205, 208, 209, 210, 211, 212, 215, 224, 225, 227, 236, 243, 251, 283, 307, 314, 320, 321, 322, 323, 324, 329, 341, 342, 346, 363, 374], "zp_": 12, "factor": [12, 17, 21, 23, 36, 39, 41, 42, 45, 69, 70, 137, 138, 141, 189, 190, 210, 218, 241, 243, 248, 271, 275, 322, 330, 333, 342, 355, 372, 456, 464, 467, 473, 475], "int32": 12, "denot": [12, 22, 28, 34, 38, 41, 50, 60, 61, 64, 89, 90, 96, 97, 147, 148, 160, 177, 355], "elementwis": [12, 17, 151, 179, 248, 257, 355, 387, 388, 403, 404, 405, 406, 456], "formula": [12, 15, 23, 26, 28, 37, 39, 41, 42, 44, 46, 49, 51, 52, 56, 59, 60, 67, 68, 69, 72, 73, 75, 76, 77, 81, 83, 84, 87, 89, 92, 95, 96, 107, 112, 114, 116, 125, 132, 133, 138, 139, 140, 141, 147, 150, 248, 276, 330, 442, 444, 464], "arrai": [12, 13, 38, 147, 189, 190, 216, 220, 221, 238, 241, 248, 251, 253, 254, 256, 265, 266, 267, 271, 275, 281, 282, 283, 293, 307, 330, 336, 367, 372, 392, 394, 396, 398, 400, 402, 448, 452, 454], "best": [12, 19, 23, 24, 32, 42, 45, 130, 133, 137, 148, 211, 212, 215, 232, 265, 321, 323, 324, 329, 342, 356], "those": [12, 19, 26, 28, 87, 130, 147, 152, 155, 218, 330, 332, 356], "These": [12, 14, 19, 31, 33, 38, 41, 160, 177, 225, 340, 342, 355, 356], "ahead": 12, "time": [12, 13, 14, 15, 18, 19, 23, 36, 37, 39, 40, 41, 44, 45, 59, 60, 65, 94, 130, 131, 132, 138, 140, 141, 147, 150, 185, 186, 204, 209, 219, 223, 225, 227, 229, 238, 248, 261, 265, 266, 269, 271, 277, 282, 283, 288, 292, 293, 297, 312, 321, 322, 330, 334, 335, 337, 340, 342, 343, 346, 351, 356, 367, 464], "calibr": 12, "tool": [12, 40], "static": [12, 19, 30, 35, 43, 45, 204, 205, 206, 207, 208, 213, 214, 215, 216, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 243, 312, 314, 316, 318, 320, 325, 327, 329, 330, 331, 338, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 368, 370, 372, 408, 409, 448, 450, 489], "minimum": [12, 17, 19, 34, 104, 169, 246, 330, 448], "dynam": [12, 26, 43, 45, 135, 216, 219, 305, 306, 330, 331, 334, 462, 470], "method": [12, 36, 130, 138, 150, 151, 275, 293, 337, 340, 374, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 451, 453, 457, 459, 468, 472, 474, 477, 479, 481, 483, 487, 490, 492, 495], "conjuct": 12, "behav": [12, 41, 139, 180], "dimension": [12, 22, 31, 38, 45, 85, 147, 248, 298, 464], "reason": [12, 19, 22, 25, 41, 131, 147, 219, 248, 334, 355, 464], "subset": [12, 32, 152, 155, 251], "guid": [12, 19, 26, 135, 210, 211, 218, 249, 250, 253, 254, 257, 260, 262, 263, 264, 266, 267, 268, 273, 274, 275, 276, 278, 279, 281, 282, 323, 333], "appropri": [12, 17, 21, 23, 25, 39, 41, 45, 132, 133, 136, 142, 147, 216, 330, 340, 342], "convert": [12, 26, 28, 35, 38, 41, 65, 67, 68, 98, 109, 137, 145, 211, 216, 248, 258, 259, 271, 276, 305, 306, 323, 330, 356, 417, 448], "wider": [12, 26], "int16": 12, "overflow": [12, 20, 26, 34, 41, 218], "maintain": [12, 134, 145, 265, 450], "necessari": [12, 14, 19, 23, 24, 27, 35, 36, 37, 39, 129, 135, 137, 139, 147, 187, 188, 219, 231, 265, 271, 321, 334], "written": [12, 13, 41, 291], "satur": [12, 41, 137, 251, 283, 307], "underflow": [12, 38], "architectur": [12, 23, 24, 41, 130, 135, 148, 251, 283, 300, 307, 355], "slightli": [12, 41, 330], "vari": [12, 41, 148], "singl": [12, 15, 17, 23, 26, 30, 34, 35, 36, 38, 42, 95, 100, 101, 102, 103, 104, 105, 106, 137, 139, 145, 147, 150, 151, 156, 164, 171, 172, 175, 248, 251, 265, 271, 283, 307, 322, 330, 340, 450, 456], "_op": [12, 136], "dequant": [12, 34, 35, 38, 67, 109, 137, 169, 210, 246, 248, 322, 456], "achiev": [12, 23, 36, 38, 137, 139, 147, 322], "eltwis": [12, 15, 17, 19, 23, 37, 39, 45, 132, 136, 138, 141, 150, 151, 183, 247, 270, 311, 322, 337, 340, 356, 403, 404, 405, 406, 455, 456, 497], "dev_guide_attributes_post_ops_eltwis": 12, "binari": [12, 15, 19, 23, 28, 29, 31, 32, 34, 39, 40, 45, 132, 136, 138, 141, 150, 151, 179, 180, 183, 184, 207, 247, 248, 270, 271, 302, 311, 317, 319, 355, 390, 456, 462, 466, 471, 488, 497], "dev_guide_attributes_post_ops_binari": 12, "src_": [12, 26, 28, 41, 65, 67, 68, 95, 98, 100, 101, 102, 103, 104, 105, 106], "weights_": [12, 26], "work": [12, 13, 14, 16, 17, 19, 21, 23, 27, 28, 30, 32, 33, 37, 38, 41, 42, 129, 130, 133, 135, 136, 137, 140, 141, 142, 145, 147, 219, 223, 238, 265, 330, 334, 340, 342, 355, 367, 448], "task": [12, 13, 27, 129, 135], "form": [12, 22, 31, 36, 141, 147, 160, 177, 340], "12": [12, 38, 135, 160, 204, 227, 229, 312, 346, 351], "35": [12, 135], "36": 12, "zero_point": [12, 137, 243, 248, 456, 464], "zero_point_": 12, "mathemat": [12, 23, 36, 37, 92, 95, 96, 137, 139, 356], "_to": 12, "_int8": 12, "_f32": [12, 190], "comp_": 12, "_": [12, 15, 21, 22, 34, 41, 42, 51, 58, 67, 68, 81, 100, 101, 102, 103, 104, 105, 106, 138, 148, 248], "regular": [12, 30, 263, 340, 374, 438, 440], "chosen": [12, 14, 32, 37, 137, 150, 151, 156, 159, 184, 211, 212, 215, 238, 265, 321, 322, 323, 324, 329, 340, 355, 367], "compens": [12, 21, 41, 218, 243, 333], "term": [12, 13, 22, 23, 130, 138, 139, 254, 256, 260, 264, 394, 396, 400, 402], "account": [12, 23, 133], "non": [12, 14, 18, 21, 23, 26, 30, 35, 36, 38, 41, 42, 49, 50, 59, 60, 61, 62, 63, 64, 69, 70, 79, 83, 89, 90, 130, 137, 139, 141, 147, 148, 150, 151, 156, 164, 175, 180, 189, 190, 211, 212, 225, 232, 265, 286, 287, 297, 304, 323, 324, 340, 342, 356, 450], "pre": [12, 14, 32, 45, 225, 342, 343], "_s8": 12, "potenti": [12, 23, 28, 41, 135, 167, 355, 450], "rang": [12, 20, 34, 36, 41, 58, 65, 67, 68, 98, 100, 101, 102, 103, 104, 105, 106, 123, 135, 145, 216, 242, 330, 374], "round": [12, 26, 28, 34, 38, 49, 65, 67, 68, 89, 98, 127, 147, 150, 151, 169, 246], "signific": [12, 20, 37, 145, 147], "loss": [12, 23, 34, 36, 334], "re": [12, 17, 21, 41, 135, 207, 210, 211, 218, 318, 323, 330, 333, 342], "end": [12, 19, 28, 36, 46, 47, 67, 68, 69, 76, 83, 96, 99, 107, 133, 135, 138, 139, 140, 143, 169, 204, 205, 206, 207, 209, 213, 214, 218, 222, 224, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 312, 314, 316, 318, 325, 327, 332, 333, 338, 341, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374], "seem": [12, 135, 340], "imposs": [12, 41, 265, 450], "trick": [12, 41, 216, 330], "everi": [12, 13, 27, 28, 45, 46, 56, 69, 72, 73, 75, 77, 83, 84, 107, 112, 114, 116, 125, 129, 134, 135, 146, 147, 251, 283, 307, 340], "ih": [12, 22, 23, 39, 59, 138, 205, 206, 207, 208, 213, 214, 215, 222, 226, 228, 232, 233, 234, 235, 236, 237, 239, 241, 314, 316, 318, 320, 325, 327, 329, 338, 344, 349, 356, 357, 359, 361, 363, 365, 368, 372], "iw": [12, 22, 23, 39, 59, 138, 205, 206, 207, 208, 213, 214, 215, 222, 226, 228, 232, 233, 234, 235, 236, 237, 239, 241, 314, 316, 318, 320, 325, 327, 329, 338, 344, 349, 356, 357, 359, 361, 363, 365, 368, 372], "oh": [12, 22, 23, 49, 59, 89, 132, 138, 214, 232, 233, 237, 327, 356, 357, 365, 456], "ow": [12, 22, 23, 49, 59, 89, 132, 138, 214, 232, 233, 237, 327, 356, 357, 365, 456], "frac": [12, 15, 23, 28, 38, 41, 42, 44, 49, 51, 52, 59, 77, 81, 85, 93, 103, 112, 114, 132, 136, 138, 140, 141, 330], "respons": [12, 19, 20, 27, 30, 31, 34, 41, 45, 129, 150, 151, 228, 263, 265, 266, 271, 305, 311, 340, 350, 355, 437, 439, 462, 497], "prepar": [12, 37, 41, 210, 216, 219, 232, 322, 330, 334, 356, 374], "wa": [12, 13, 28, 37, 42, 43, 131, 132, 134, 147, 148, 173, 195, 196, 198, 199, 225, 233, 272, 277, 283, 307, 342, 357], "long": [12, 19, 135, 139, 156, 159, 184, 195, 196], "fit": [12, 238, 367], "everyth": [12, 340, 374], "fine": [12, 13, 356], "mind": 12, "tri": [12, 37], "minim": [12, 13, 18, 20, 26, 34, 36, 147], "yet": [12, 216, 219, 265, 330, 332, 333, 334], "power": [12, 95, 99, 136, 300], "enough": [12, 13, 41, 291], "wai": [12, 13, 14, 21, 22, 23, 27, 30, 36, 38, 41, 111, 129, 130, 142, 145, 147, 184, 248, 274, 293, 355, 356, 374, 390, 448, 464, 466, 471, 488], "essenti": [12, 36, 37, 140, 330], "abil": [12, 24, 25, 27, 129, 340], "That": [12, 23, 122, 131, 134, 147, 340], "equat": [12, 28, 139], "_scale": 12, "standard": [12, 15, 17, 18, 19, 20, 21, 22, 23, 26, 28, 39, 42, 43, 44, 45, 46, 49, 56, 58, 59, 69, 72, 73, 75, 77, 83, 84, 87, 89, 107, 112, 114, 116, 125, 132, 133, 137, 138, 139, 140, 141, 142, 156, 164, 175, 251, 283, 307], "downconvert": 12, "hw": [12, 26, 135, 147], "mxcsr": [12, 38], "regist": [12, 19, 25, 38, 153, 154, 348], "dnnl_primitive_attr_set_scales_mask": [12, 243, 248, 464], "simplest": [12, 248, 330, 374, 456], "sever": [12, 14, 19, 21, 23, 28, 32, 43, 146, 147], "sai": [12, 34], "d_0": [12, 38], "d_": [12, 38], "d_i": [12, 38], "le": 12, "Then": [12, 39, 111, 122, 147, 341, 356, 374], "sum": [12, 13, 15, 17, 19, 21, 23, 39, 41, 42, 44, 45, 49, 51, 81, 100, 101, 103, 106, 132, 136, 137, 138, 139, 141, 148, 150, 151, 183, 184, 235, 236, 247, 248, 270, 273, 302, 311, 355, 361, 363, 373, 456, 462, 497], "limits_": [12, 15, 41, 42, 44, 49, 51, 81, 89, 100, 101, 103, 105, 106, 132, 136, 141, 142, 248, 464], "prod": [12, 105, 208, 215, 248, 320, 329, 464], "wei_plain_f32_md": 12, "hwigo": [12, 177], "wei_scal": 12, "conv_pd": [12, 131, 208, 211, 212, 214, 215, 231, 232, 320, 323, 324, 327, 329, 355, 356, 456], "next": [12, 26, 147, 211, 212, 232, 238, 271, 320, 321, 322, 323, 324, 332, 333, 340, 341, 355, 356, 367, 374, 466], "wei_conv_s8_md": 12, "weights_desc": [12, 204, 209, 210, 211, 212, 214, 225, 226, 229, 231, 232, 234, 243, 254, 256, 260, 264, 268, 312, 321, 322, 323, 324, 327, 342, 344, 351, 355, 356, 359, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "quantization_mask": 12, "wei_s8": [12, 148], "wei_f32": [12, 148, 355, 356], "wei_reorder_pd": 12, "wei_reord": 12, "complementari": 12, "ideal": [12, 41], "first": [12, 22, 23, 24, 25, 28, 34, 38, 39, 41, 45, 59, 111, 131, 139, 147, 148, 160, 177, 217, 218, 265, 277, 293, 330, 332, 333, 337, 340, 341, 356, 374, 412, 450], "src_scale": [12, 210, 322], "src_f32": [12, 148, 355, 356], "src_s8": 12, "dst_scale": [12, 210, 322], "dst_f32": [12, 148, 355, 356], "dst_s8": 12, "declar": [12, 32, 217, 218, 332, 333], "chose": [12, 211, 212, 215, 265, 323, 324, 329], "src_conv_s8_any_md": 12, "batch": [12, 22, 23, 30, 36, 37, 45, 51, 52, 59, 87, 135, 141, 147, 160, 177, 183, 184, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 222, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 264, 265, 270, 311, 312, 315, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 332, 333, 338, 340, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 383, 384, 385, 386, 412, 497], "wei_conv_s8_any_md": 12, "dst_conv_s8_any_md": 12, "ditto": 12, "data_mask": 12, "wei_mask": 12, "set_zero_points_mask": [12, 45, 216, 225, 330, 331, 342, 343, 464], "prop_kind": [12, 23, 36, 37, 39, 148, 179, 180, 189, 204, 205, 209, 210, 211, 212, 214, 217, 218, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 242, 243, 248, 249, 254, 256, 257, 260, 262, 263, 267, 268, 275, 276, 278, 279, 302, 312, 314, 321, 322, 323, 324, 327, 332, 333, 337, 338, 340, 341, 344, 346, 349, 351, 355, 356, 357, 359, 365, 367, 368, 370, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "forward_infer": [12, 23, 36, 37, 39, 148, 187, 209, 217, 218, 223, 231, 232, 238, 321, 332, 333, 340, 355, 356, 367, 382, 386, 396, 402, 406, 416, 424, 428, 432, 436, 440, 444, 454, 460, 475, 480, 484, 493], "convolution_direct": [12, 148, 151, 209, 210, 211, 212, 214, 232, 321, 322, 323, 324, 327, 355, 356, 392, 394, 396, 398], "padding_l": [12, 23, 189, 243, 254, 256, 267, 392, 394, 396, 398, 400, 402, 452, 454], "padding_r": [12, 23, 189, 243, 254, 256, 267, 392, 394, 396, 398, 400, 402, 452, 454], "padding_kind": 12, "flow": [12, 220, 221, 336, 337], "independ": [13, 19, 41, 42, 45, 87, 139, 141, 147], "core": [13, 32, 152, 155, 348, 356], "system": [13, 14, 18, 19, 26, 30, 40, 41, 43, 130, 131, 135, 139, 140, 147, 148, 258], "parallel": [13, 195, 196, 283, 489], "reduct": [13, 19, 20, 34, 100, 101, 102, 103, 104, 105, 106, 150, 151, 183, 184, 189, 190, 247, 270, 302, 311, 362, 462, 467, 497], "k": [13, 30, 44, 45, 87, 189, 190, 208, 211, 212, 215, 216, 217, 218, 219, 225, 228, 230, 243, 251, 263, 283, 302, 307, 320, 323, 324, 329, 330, 334, 342, 349, 353, 438, 440, 467, 496], "partial": [13, 15, 24, 42, 277, 342, 355], "privat": [13, 143, 195, 196, 321], "produc": [13, 15, 23, 28, 31, 32, 33, 34, 37, 39, 40, 83, 141, 148, 265, 271, 277, 330, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 451, 452, 453, 454, 457, 458, 459, 460, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493], "matrix": [13, 22, 23, 24, 26, 30, 41, 87, 139, 140, 147, 183, 184, 216, 217, 218, 219, 225, 230, 247, 251, 270, 283, 307, 330, 331, 334, 342, 353, 355, 445, 446, 497], "im2col": 13, "longer": [13, 190], "complet": [13, 16, 20, 30, 128, 132, 135, 223, 231, 232, 265, 272, 277, 337, 340, 341, 355, 374, 448], "confus": [13, 37], "workspac": [13, 15, 22, 23, 44, 132, 139, 179, 180, 189, 190, 204, 205, 208, 211, 212, 215, 228, 229, 233, 238, 249, 271, 312, 314, 320, 321, 323, 324, 329, 349, 351, 357, 367, 380, 382, 384, 386, 414, 416, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 452, 454, 467, 491, 493], "amount": [13, 19, 23, 59, 60, 61, 62, 63, 64, 148, 180, 255, 265], "space": [13, 14, 19, 147, 148, 208, 215, 255, 291, 320, 329, 448], "direct": [13, 22, 37, 48, 66, 88, 91, 94, 121, 124, 139, 146, 150, 151, 189, 190, 191, 192, 204, 229, 238, 243, 265, 276, 312, 351, 367, 380, 382, 414, 416, 417, 430, 432, 434, 436, 442, 444, 448, 462, 466, 467, 476, 491, 493], "too": [13, 219, 277, 334], "few": [13, 23, 36, 39, 139, 271, 323, 324, 329], "proport": 13, "imag": [13, 22, 34, 36, 49, 132, 147, 223, 340], "diff_weight": [13, 22, 37, 61, 64, 133, 193, 194, 211, 212, 238, 268, 323, 324, 367], "group": [13, 22, 31, 38, 60, 61, 62, 63, 64, 135, 140, 147, 160, 167, 168, 177, 189, 190, 214, 239, 265, 278, 327, 328, 368, 467, 478, 480], "upper": [13, 22, 56, 57, 134, 147, 160, 277], "total": [13, 60, 130, 135, 238, 367], "By": [13, 14, 19, 31, 32, 36, 289], "contrast": 13, "littl": [13, 216, 330], "sizeof": [13, 30, 147, 156, 159, 184, 208, 215, 220, 224, 232, 320, 329, 336, 341], "summand": 13, "scratchpad_mod": [13, 19, 248, 302, 464], "worri": 13, "onednn_enable_concurrent_exec": [13, 19], "cmake": [13, 18, 19, 24, 25, 30, 32, 33, 131, 134, 135, 146, 148], "off": [13, 19, 24, 25, 32, 33, 134, 135, 148, 195, 196, 223, 277, 340], "across": [13, 19, 23, 37, 38, 42, 44, 45, 139, 150, 151, 238, 263, 367], "level": [13, 31, 32, 33, 131, 134, 135, 148, 243, 265, 277, 302], "freed": 13, "referenc": 13, "segment": 13, "fault": 13, "you": [13, 14, 15, 18, 19, 23, 27, 34, 36, 37, 39, 41, 42, 43, 62, 135, 139, 141, 146, 147, 190, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372], "ON": [13, 18, 19, 24, 25, 30, 32, 33, 134, 135, 148, 195, 196], "own": [13, 14, 27, 30, 36, 129, 130, 265, 266, 271, 282, 305, 306, 340, 448, 489], "larger": [13, 30, 195, 196, 238, 367], "concurr": [13, 27, 129, 195, 196, 269, 283, 288], "suffici": 13, "dnnl_arg_scratchpad": [13, 243, 271], "reus": [13, 14, 23, 36, 37, 45, 139, 147, 238, 367], "make": [13, 14, 18, 19, 25, 33, 37, 41, 43, 45, 87, 128, 130, 147, 160, 177, 190, 257, 265, 291, 450, 455], "safe": [13, 14, 28, 130, 131, 147, 195, 196, 223, 269, 288, 340, 448], "good": [13, 36, 45, 147, 330, 340], "speed": [13, 19, 36, 131, 228, 349], "side": [13, 23, 87, 265, 448], "control": [13, 15, 18, 23, 26, 42, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 79, 80, 87, 89, 90, 122, 130, 248, 249, 262, 269, 277, 288, 289, 376, 486], "dnnl_primitive_attr_set_scratchpad_mod": [13, 243, 248], "set_scratchpad_mod": [13, 464], "highlight": [13, 37], "consum": [13, 30, 31, 34, 238, 265, 367], "due": [13, 22, 37, 41, 148, 173, 198, 199, 219, 330, 334, 450], "print": [13, 32, 148], "much": [13, 14, 41, 148, 219, 334, 341, 374], "hold": [13, 28, 45, 100, 101, 102, 103, 104, 105, 106, 216, 218, 238, 248, 321, 330, 332, 340, 355, 367, 464], "cout": [13, 209, 217, 218, 223, 224, 232, 242, 340, 341, 374], "query_s64": [13, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "memory_consumption_s64": [13, 189], "endl": [13, 209, 217, 218, 223, 224, 242, 340, 341, 374], "visibl": 13, "zero_md": 13, "scratchpad_desc": [13, 231, 355, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_scratchpad_mod": [13, 464], "custom": [13, 18, 19, 27, 31, 147], "scratchpad_md": [13, 189], "prim": [13, 208, 215, 232, 320, 329, 356], "get_siz": [13, 30, 37, 147, 217, 218, 232, 265, 305, 332, 333, 448, 450], "scratchpad_ptr": 13, "nullptr": [13, 147, 224, 266, 271, 289, 305, 341, 417], "user_memory_manag": 13, "outlin": [14, 37, 130], "program": [14, 16, 18, 23, 27, 31, 32, 39, 41, 129, 139, 220, 221, 223, 224, 244, 300, 334, 336, 337, 340, 341, 356, 374], "present": [14, 87, 131, 139, 355], "kei": [14, 15, 17, 21, 23, 31, 37, 39, 42, 43, 45, 131, 137, 139, 140, 141, 142, 312, 313, 314, 315, 316, 317, 318, 320, 321, 325, 326, 327, 328, 340, 344, 345, 346, 347, 351, 352, 353, 354, 363, 364, 368, 369, 370, 371, 372, 373], "discuss": [14, 36, 37, 130, 265, 340], "essenc": 14, "process": [14, 34, 35, 36, 37, 41, 130, 134, 135, 139, 147, 238, 330, 355, 367], "context": [14, 23, 27, 131, 160, 177, 217, 218, 243, 265, 266, 280, 282, 297, 304, 305, 306, 332, 333, 337, 340, 341, 374, 450], "relationship": [14, 31], "entiti": [14, 31, 271], "briefli": 14, "figur": [14, 139], "relev": [14, 37, 238, 356, 367], "built": [14, 16, 18, 19, 30, 32, 43, 143, 146, 283, 307, 355, 356], "notion": [14, 17, 21, 37, 136, 142, 355], "encapsul": [14, 266, 280, 294, 298, 305, 337, 340, 341, 374, 448], "lstm": [14, 41, 150, 151, 160, 177, 218, 238, 271, 276, 311, 333, 352, 367, 441, 442, 443, 444], "addition": [14, 41, 45, 87, 130, 145, 211, 323, 355, 356], "complex": [14, 23, 32], "pure": 14, "state": [14, 22, 30, 37, 41, 139, 160, 177, 218, 238, 265, 271, 272, 276, 291, 332, 333, 348, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "One": [14, 23, 27, 109, 145, 147], "immut": [14, 31], "approach": [14, 32, 37, 130, 147, 265, 322, 330, 355], "tailor": 14, "amort": 14, "mutabl": [14, 293], "devic": [14, 19, 26, 27, 129, 131, 181, 182, 202, 203, 243, 258, 266, 282, 297, 304, 305, 306, 337, 340, 341, 374], "card": [14, 258], "transfer": [14, 216, 258, 330], "ti": [14, 280, 337, 340, 341, 374], "opencl": [14, 18, 29, 30, 131, 224, 247, 261, 265, 305, 311, 340, 348, 377, 448], "command": [14, 18, 43, 130, 135, 266, 282, 341, 356], "queue": [14, 27, 30, 129, 242, 243, 266, 282, 305, 306, 341, 374], "map": [14, 15, 17, 21, 23, 27, 28, 36, 39, 42, 44, 45, 65, 67, 68, 98, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 223, 265, 277, 304, 305, 306, 330, 337, 340, 341, 390, 448, 462, 466, 470, 471, 488], "offset": [14, 65, 67, 68, 98, 147, 148, 189, 190, 216, 223, 238, 243, 251, 265, 283, 307, 330, 340, 367, 448, 450], "conceptu": [14, 41], "expos": [14, 15, 42, 130], "flexibl": [14, 32, 145, 147, 334], "dnnl_memory_desc_t": [14, 146, 147, 160, 208, 215, 220, 243, 265, 271, 320, 329, 336, 450], "special": [14, 17, 21, 26, 27, 28, 31, 41, 45, 54, 129, 133, 136, 137, 140, 141, 142, 147, 159, 176, 219, 265, 266, 271, 282, 287, 305, 306, 334, 448], "construct": [14, 27, 31, 33, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 238, 265, 266, 282, 291, 304, 305, 306, 307, 341, 367, 374, 466, 495], "variou": [14, 131, 265, 271], "via": [14, 15, 17, 19, 24, 25, 28, 35, 68, 122, 130, 131, 132, 134, 147, 148, 207, 232, 238, 265, 277, 291, 295, 305, 306, 314, 315, 318, 319, 322, 337, 340, 341, 355, 367, 374, 448, 456, 462, 464, 470], "instanti": 14, "iter": [14, 134, 139, 166, 174, 209, 211, 212, 215, 217, 218, 238, 323, 324, 329, 332, 333, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 466, 476, 491, 493], "prefer": [14, 19, 20, 25, 153, 154, 211, 212, 215, 238, 323, 324, 329, 367], "concret": 14, "embodi": 14, "There": [14, 15, 17, 19, 20, 21, 23, 28, 30, 36, 38, 39, 44, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 146, 238, 248, 265, 337, 341, 356, 367, 374, 464, 467], "extract": [14, 341, 374], "submemory_desc": [14, 217, 218, 238, 332, 333, 367, 450], "src_desc": [14, 36, 209, 210, 211, 212, 214, 231, 232, 243, 249, 253, 254, 256, 257, 260, 262, 263, 264, 267, 268, 273, 274, 275, 278, 279, 281, 321, 322, 323, 324, 327, 355, 356, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "action": [14, 37], "placehold": [14, 23, 39, 45, 139, 177, 231, 355], "obtain": [14, 19, 37, 38, 41, 131, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 265, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 368, 370, 372, 471], "high": [14, 20, 38, 148, 254, 256, 267, 392, 394, 396, 398, 400, 402, 452, 454], "instead": [14, 17, 18, 19, 22, 23, 28, 34, 39, 41, 43, 45, 132, 136, 137, 138, 147, 238, 248, 251, 276, 283, 307, 321, 340, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 456, 491, 493], "individu": [14, 26, 28, 30, 130, 251, 255, 283, 307, 321], "transpar": [14, 32], "effort": 14, "backend": [14, 26, 30, 32, 109], "awar": [14, 25, 340], "scalabl": [14, 41, 152, 155], "benefit": [14, 19, 36, 134, 257], "show": [15, 23, 38, 39, 42, 132, 133, 138, 145, 147, 148, 334, 340], "straightforward": [15, 23, 42, 132, 133, 138, 340], "gamma": [15, 23, 42, 51, 52, 53, 81, 82, 249, 262], "mu": [15, 42, 51, 52, 81, 82], "sqrt": [15, 28, 34, 42, 52, 81, 101, 119, 169, 216, 219, 246, 330, 334], "sigma": [15, 42, 51, 52, 53, 81, 82, 139], "varepsilon": [15, 42, 52], "dnnl_use_scal": [15, 42, 179, 180], "dnnl_use_shift": [15, 42, 179, 180], "dnnl_use_global_stat": [15, 42, 179, 180], "constant": [15, 36, 42, 52, 81, 82, 83, 122, 166, 174, 180, 190, 247, 248, 265, 271, 277, 280, 285, 286, 287, 291, 294, 295, 298, 450, 464], "stabil": [15, 28, 42, 52, 81, 82], "nhw": [15, 51], "learnabl": [15, 22, 37, 42, 81, 82], "dnnl_fuse_norm_relu": [15, 179, 180], "dnnl_fuse_norm_add_relu": [15, 179, 180], "popul": [15, 139], "sampl": [15, 38, 132, 135, 143, 341, 374], "unbias": 15, "version": [15, 18, 19, 20, 32, 36, 43, 131, 146, 148, 150, 151, 160, 177, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 265, 271, 277, 302, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 390, 488, 494], "hat": 15, "becom": [15, 42, 146, 148, 160, 177, 356], "dnnl_forward_train": [15, 23, 28, 42, 132, 133, 138, 140, 141, 187, 188, 249, 254, 256, 257, 260, 262, 263, 267, 268, 275, 276, 278, 279], "dnnl_forward_infer": [15, 23, 28, 42, 132, 133, 138, 140, 141, 187, 188, 249, 254, 256, 257, 260, 262, 263, 267, 268, 275, 276, 278, 279], "diffsrc": [15, 22, 23, 28, 39, 42, 44, 50, 60, 63, 82, 90, 132, 133, 138, 140, 141], "diffgamma": [15, 42, 82], "diffbeta": [15, 42, 82], "diffdst": [15, 22, 23, 28, 39, 42, 44, 50, 55, 60, 61, 63, 64, 82, 90, 132, 133, 138, 140, 141], "mark": [15, 34, 41, 42, 82, 147], "asterisk": [15, 42, 82], "clariti": [15, 42], "summari": [15, 42, 135, 355], "shown": [15, 20, 37, 41, 42, 75, 76, 130, 135, 139, 147, 340, 356], "dnnl_backward": [15, 42, 180, 187, 188, 249, 262, 276], "dnnl_backward_data": [15, 42, 180, 187, 188, 249, 262], "dnnl_normalization_flags_non": [15, 42, 179, 180], "Not": [15, 20, 42, 135], "src_1": [15, 17, 48, 66, 88, 91, 94, 111, 121, 124, 206, 316], "diffsrc_1": 15, "tabl": [15, 17, 20, 21, 22, 23, 26, 27, 28, 39, 42, 44, 45, 129, 132, 133, 136, 137, 138, 139, 140, 141, 142, 190], "dnnl_arg_scal": [15, 42, 205, 227, 243, 271, 314, 346], "dnnl_arg_shift": [15, 42, 205, 227, 243, 271, 314, 346], "dnnl_arg_mean": [15, 42, 205, 227, 243, 271, 314, 346], "dnnl_arg_vari": [15, 42, 205, 227, 243, 271, 314, 346], "dnnl_arg_workspac": [15, 37, 44, 132, 204, 205, 208, 211, 212, 215, 228, 229, 233, 238, 243, 271, 312, 314, 320, 323, 324, 329, 349, 351, 357, 367], "dnnl_arg_diff_dst": [15, 23, 28, 39, 42, 44, 132, 133, 138, 140, 141, 211, 212, 215, 243, 271, 323, 324, 329], "dnnl_arg_diff_src": [15, 23, 28, 39, 42, 44, 132, 133, 138, 140, 141, 211, 212, 215, 243, 271, 323, 324, 329], "dnnl_arg_diff_src_1": [15, 243, 271], "dnnl_arg_diff_scal": [15, 42, 243, 271], "dnnl_arg_diff_shift": [15, 42, 243, 271], "flavor": [15, 42, 340], "batch_normalization_forward": [15, 205, 249, 302, 314, 384, 462], "bitwis": [15, 42, 200], "OR": [15, 42, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "latter": [15, 19, 22, 27, 37, 41, 42, 43, 129, 145, 265, 320, 321, 466], "overwritten": [15, 17, 28, 42, 141], "dst_desc": [15, 36, 209, 210, 211, 212, 213, 214, 231, 232, 241, 243, 249, 250, 253, 254, 256, 257, 260, 262, 263, 264, 267, 268, 273, 274, 275, 278, 279, 281, 321, 323, 324, 325, 327, 355, 356, 372, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "diff_dst_desc": [15, 211, 212, 243, 249, 254, 256, 257, 260, 262, 263, 267, 268, 275, 278, 279, 323, 324, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "even": [15, 26, 37, 41, 127, 130, 139, 147, 257, 340], "combin": [15, 17, 23, 28, 30, 33, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 135, 137, 138, 139, 140, 141, 148, 200, 265, 337, 340, 450, 455], "scaleshift": [15, 42], "restrict": [15, 17, 23, 24, 25, 28, 39, 42, 44, 45, 54, 132, 136, 138, 139, 140, 141, 255, 277], "1d": [15, 23, 27, 39, 42, 44, 54, 67, 68, 79, 80, 81, 82, 87, 96, 97, 100, 101, 102, 103, 104, 105, 106, 132, 138, 147, 160, 177, 254, 256, 275, 340], "dnnl_x": [15, 160, 208, 215, 320, 329], "dnnl_a": [15, 160, 177], "dnnl_nc": [15, 39, 42, 160], "dnnl_ab": [15, 42, 141, 160, 177, 265], "sp_n": 15, "sp_0": 15, "0d": [15, 44, 340], "nc": [15, 39, 42, 177, 209, 226, 240, 344, 370], "ncw": [15, 132, 177], "dnnl_ncw": [15, 23, 39, 132, 160], "dnnl_abc": [15, 42, 132, 160, 177], "dnnl_nwc": [15, 23, 39, 132, 160], "dnnl_acb": [15, 132, 160, 177], "dnnl_nchw": [15, 21, 23, 39, 44, 132, 140, 147, 160, 208, 215, 220, 265, 320, 329, 336], "dnnl_abcd": [15, 42, 44, 132, 140, 141, 160, 177], "dnnl_nhwc": [15, 21, 23, 39, 44, 132, 140, 147, 160, 265], "dnnl_acdb": [15, 44, 132, 140, 141, 160, 177], "3d": [15, 23, 39, 42, 44, 45, 81, 82, 132, 133, 138, 140, 147, 160, 177, 254, 256, 264, 267, 275, 340, 392, 394, 396, 398, 400, 402, 452, 454], "ncdhw": [15, 132, 140, 160, 177], "dnnl_ncdhw": [15, 23, 39, 132, 140, 160], "dnnl_ndhwc": [15, 23, 39, 132, 140, 160], "dnnl_acdeb": [15, 132, 140, 160, 177], "come": [15, 28, 37, 38, 43, 44, 130, 132, 140, 160, 177, 195, 196, 225, 238, 340, 342, 367], "intens": [15, 26, 36, 44, 130, 132, 140, 265, 340, 355, 356], "chain": [15, 23, 34, 37, 38, 39, 41, 248, 356, 455], "descript": [15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 30, 32, 33, 34, 36, 39, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 111, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 132, 134, 135, 136, 138, 139, 141, 147, 148, 177, 255, 265, 298, 332, 333, 340, 355, 356], "dnnl_eltwise_relu": [15, 28, 150, 151, 208, 215, 220, 276, 320, 329, 336], "correctli": [15, 23, 135, 277, 340, 355], "highli": [15, 21, 28, 42, 44, 142, 334], "whenev": [15, 17, 21, 28, 37, 42, 136, 141, 142, 147, 248, 340], "caveat": [15, 28, 42, 142], "statist": [15, 42, 148, 160, 177, 179, 180, 330, 426, 428], "calcul": [15, 30, 36, 38, 49, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 70, 79, 80, 85, 86, 89, 90, 100, 101, 102, 103, 104, 105, 106, 108, 113, 114, 115, 119, 122, 126, 132, 133, 148, 150, 151, 218, 293, 322], "pleas": [15, 19, 36, 45, 109, 135, 148, 210, 211, 218, 265, 293, 323, 333, 355], "review": [15, 355], "demonstr": [15, 17, 21, 23, 28, 30, 36, 39, 42, 44, 45, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 208, 209, 210, 211, 212, 213, 215, 217, 218, 220, 221, 222, 223, 224, 231, 232, 234, 238, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "benchdnn": [16, 30, 130, 135, 148], "readm": 16, "overlin": [17, 21, 23, 28, 48, 58, 66, 88, 91, 94, 124, 137, 140, 141, 142], "src_0": [17, 48, 66, 88, 91, 94, 111, 121, 124, 142, 206, 316], "mathbin": [17, 48, 66], "subtract": [17, 34, 41, 121, 169, 246, 248, 456], "divis": [17, 22, 51, 52, 53, 59, 60, 61, 62, 63, 64, 66, 137, 207, 318], "greater": [17, 37, 41, 56, 57, 138, 150, 151], "dnnl_arg_src_0": [17, 206, 207, 243, 271, 316, 318], "text": [17, 23, 28, 39, 45, 46, 47, 69, 75, 76, 83, 96, 99, 107, 132, 136, 138, 141, 147, 374], "scale0": 17, "dnnl_arg_attr_scal": [17, 23, 39, 42, 45, 137, 141, 210, 216, 219, 225, 236, 243, 248, 271, 322, 330, 334, 342, 363, 464], "scale1": 17, "semant": [17, 22, 30, 35, 41, 45, 87, 96, 97, 129, 133, 248, 277, 340, 417, 456, 494], "recommend": [17, 21, 34, 36, 37, 41, 45, 130, 133, 136, 142, 148, 355, 356], "match": [17, 21, 31, 36, 37, 48, 58, 66, 79, 87, 88, 91, 94, 111, 124, 133, 137, 142, 234, 265, 305, 306, 356, 359, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 462, 469, 470, 471, 473, 475, 478, 480, 482, 484, 488, 491, 493], "syntax": [17, 36], "d": [17, 22, 23, 28, 39, 40, 44, 45, 54, 87, 100, 101, 102, 103, 104, 105, 106, 132, 133, 141, 147, 160, 177, 204, 216, 220, 229, 238, 248, 265, 312, 330, 336, 340, 351, 367, 464], "nxcxdxhxw": 17, "pytorch": [17, 97], "explicitli": [17, 19, 20, 23, 32, 34, 35, 130, 136, 139, 291, 293, 340], "deriv": [17, 21, 132, 136, 142, 179, 180, 248, 262, 390, 456, 488], "ones": [17, 41, 138, 146, 147, 204, 214, 229, 265, 312, 327, 334, 351, 450], "unavoid": 17, "correct": [17, 147, 171, 172, 225, 337, 340, 342], "issu": [17, 27, 37, 41, 129, 135, 171, 172, 219, 334], "arbitrari": [17, 21, 28, 30, 42, 56, 57, 69, 70, 75, 76, 81, 82, 83, 85, 86, 95, 114, 115, 116, 117, 128, 133, 136, 137, 138, 140, 141, 142, 147, 218, 219, 253, 322, 333, 334, 342], "6": [17, 21, 23, 28, 30, 38, 42, 45, 77, 93, 135, 136, 137, 140, 141, 142, 147, 156, 199, 204, 207, 209, 229, 312, 318, 351], "fewer": [17, 21, 28, 35, 42, 136, 137, 140, 141, 142], "bnorm": [17, 29, 207, 311, 319], "postop": [17, 319, 322], "clone": [18, 248, 265, 271, 390, 466, 471, 488], "repositori": [18, 19], "git": [18, 131, 148, 277, 355, 494], "http": [18, 43, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "github": [18, 19, 216, 330], "com": [18, 43], "ensur": [18, 19, 20, 24, 37, 129, 265, 341, 355, 374, 450], "softwar": [18, 40, 41, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "cmake_install_prefix": 18, "locat": [18, 19, 37, 43, 147, 265, 274, 277, 298, 467, 471], "cmake_build_typ": 18, "select": [18, 19, 30, 32, 38, 159, 160, 169, 176, 177, 246, 356], "releas": [18, 19, 129, 277], "relwithdebinfo": 18, "cmake_prefix_path": 18, "directori": [18, 43, 135, 277], "search": 18, "up": [18, 19, 26, 41, 45, 131, 132, 133, 135, 147, 205, 206, 208, 215, 220, 227, 228, 233, 240, 271, 293, 314, 316, 320, 329, 336, 346, 349, 355, 357, 370, 412], "makefil": 18, "mkdir": 18, "cd": 18, "uncom": 18, "line": [18, 130, 135, 147, 148, 356], "export": [18, 130, 356], "cc": 18, "cxx": 18, "icx": [18, 43], "icpx": [18, 43], "j": [18, 44, 85, 114, 135, 143, 209, 217, 218, 265, 321, 450], "setvar": 18, "sh": [18, 22, 23, 49, 59, 60, 89, 132, 214, 233, 327, 357], "script": [18, 146], "folder": [18, 32], "your": [18, 36, 37, 43, 135, 356], "opt": [18, 19], "ddnnl_cpu_runtim": 18, "ddnnl_gpu_runtim": 18, "open": [18, 19, 300], "driver": [18, 19], "openclroot": 18, "path": [18, 19, 32, 43, 145, 277], "gnu": [18, 19], "dcmake_system_nam": 18, "dcmake_system_processor": 18, "dcmake_library_path": 18, "usr": 18, "lib": [18, 43], "acl_root_dir": [18, 19], "ddnnl_aarch64_use_acl": 18, "studio": [18, 43, 130, 146], "solut": [18, 43, 146, 147], "16": [18, 20, 22, 26, 37, 135, 145, 148, 156, 160, 164, 175, 220, 221, 265, 336, 337], "2019": [18, 41, 211, 216, 219, 220, 221, 223, 224, 225, 231, 232, 242, 323, 330, 334, 336, 342], "config": [18, 32, 146], "respect": [18, 22, 23, 26, 28, 31, 35, 37, 39, 45, 59, 80, 83, 131, 138, 147, 148, 160, 177, 179, 187, 188, 211, 212, 215, 238, 248, 249, 254, 256, 257, 260, 262, 263, 267, 268, 271, 275, 276, 277, 278, 279, 323, 324, 329, 334, 356, 367, 412, 464, 491], "file": [18, 19, 32, 33, 40, 135, 146, 147, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 277, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374], "being": [18, 19, 45, 137, 139, 180, 265, 272, 277, 341, 374, 450], "sln": [18, 146], "project": [18, 20, 146, 160, 177, 248, 271, 276, 442, 444, 464, 476], "bat": 18, "x86": [18, 40], "commmand": 18, "prompt": 18, "ninja": 18, "v3": [18, 41, 148, 248], "23": [18, 145], "unit": [18, 31, 139, 150, 151, 257, 295, 341, 348, 374], "test": [18, 19, 30, 135, 143, 219, 265, 334, 448], "ctest": 18, "conda": 18, "env": 18, "doc": [18, 36, 147], "yml": 18, "header": [18, 20, 26, 27, 32, 129, 135, 146, 148], "administr": 18, "privileg": 18, "sudo": 18, "mac": 18, "bold": [19, 24, 25, 32, 33, 134, 148], "onednn_library_typ": 19, "onednn_cpu_runtim": 19, "none": [19, 28, 45, 48, 49, 50, 59, 60, 61, 62, 63, 64, 66, 79, 80, 88, 89, 90, 91, 94, 111, 121, 122, 124, 148, 167, 168, 179, 355], "omp": [19, 135], "seq": 19, "sycl": [19, 29, 30, 242, 243, 247, 261, 265, 285, 286, 292, 304, 305, 306, 311], "onednn_gpu_runtim": 19, "ocl": [19, 224], "offload": 19, "onednn_build_exampl": 19, "onednn_build_test": 19, "onednn_build_graph": [19, 33], "onednn_enable_graph_dump": [19, 33], "dump": [19, 40, 135, 244, 277], "artifact": [19, 33], "onednn_experimental_graph_compiler_backend": [19, 32], "onednn_arch_opt_flag": 19, "warn": [19, 32, 135, 219, 334], "onednn_enable_jit_profil": [19, 135], "profil": [19, 29, 30, 185, 186, 232, 247, 277, 300, 311], "onednn_enable_itt_task": [19, 135], "onednn_enable_primitive_cach": [19, 134], "onednn_enable_max_cpu_isa": [19, 24], "onednn_enable_cpu_isa_hint": [19, 25], "workload": [19, 23, 36, 355, 356], "primitive_nam": 19, "cpu_isa_nam": 19, "gpu_isa_nam": 19, "onednn_experiment": [19, 30], "onednn_verbos": [19, 277, 355, 356], "onednn_aarch64_use_acl": 19, "onednn_blas_vendor": 19, "armpl": 19, "extern": 19, "link": [19, 40, 59, 60, 61, 62, 63, 64, 300], "onednn_gpu_vendor": 19, "nvidia": 19, "onednn_dpcpp_host_compil": 19, "onednn_library_nam": 19, "counterpart": [19, 41, 146, 265, 450], "prefix": [19, 277], "intend": [19, 23, 145, 148, 266, 300, 305], "develop": [19, 20, 26, 32, 40, 41, 148, 210, 211, 218, 249, 250, 253, 254, 257, 260, 262, 263, 264, 266, 267, 268, 273, 274, 275, 276, 278, 279, 281, 282, 323, 333], "subject": 19, "oneapi": [19, 43, 143, 146, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 312, 314, 316, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 341, 342, 344, 346, 349, 351, 353, 357, 361, 363, 365, 367, 368, 370, 372, 374], "dpc": [19, 282, 311, 374, 377], "main": [19, 30, 145, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 265, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 368, 370, 372, 456], "discov": 19, "absolut": [19, 46, 100], "cmake_cxx_compil": 19, "window": [19, 37, 41, 49, 50, 89, 90, 132, 148, 277, 348], "linux": [19, 130, 148, 277], "7": [19, 135, 143, 145, 147, 156, 164, 175, 199, 220, 221, 332, 333, 336, 356], "4": [19, 24, 26, 28, 30, 34, 38, 41, 45, 51, 52, 53, 82, 93, 111, 130, 135, 147, 150, 151, 152, 155, 156, 160, 199, 207, 208, 209, 211, 212, 214, 215, 217, 218, 220, 224, 229, 232, 233, 238, 239, 242, 243, 265, 293, 318, 320, 323, 324, 327, 329, 336, 341, 351, 356, 357, 367, 368, 374], "gcc": 19, "interoper": [19, 30, 247, 285, 304, 305, 306, 307, 311, 341, 374, 377], "disk": 19, "occupi": [19, 145, 265, 448], "app": 19, "remov": [19, 100, 101, 102, 103, 104, 105, 106, 262, 265, 277, 450], "batch_norm": [19, 183, 311], "concat": [19, 169, 183, 184, 246, 247, 265, 270, 302, 311, 326, 355, 462, 497], "deconvolut": [19, 150, 151, 183, 184, 247, 270, 397, 398, 399, 400, 401, 402], "inner_product": [19, 183, 209, 311], "layer_norm": [19, 183, 311], "lrn": [19, 150, 151, 183, 184, 189, 190, 208, 209, 211, 212, 215, 247, 270, 311, 320, 323, 324, 329, 355, 437, 438, 439, 440, 467, 497], "matmul": [19, 30, 34, 45, 148, 169, 183, 216, 219, 225, 243, 246, 264, 302, 311, 331, 335, 343, 354, 462], "pool": [19, 26, 37, 41, 49, 50, 89, 90, 150, 151, 183, 184, 189, 190, 208, 209, 211, 212, 215, 231, 247, 270, 311, 320, 321, 323, 324, 329, 358, 451, 452, 453, 454, 467, 497], "prelu": [19, 83, 97, 169, 183, 184, 246, 247, 248, 270, 311, 359, 360, 456, 457, 458, 459, 460, 497], "resampl": [19, 150, 151, 183, 184, 189, 190, 247, 270, 311, 366, 467, 472, 473, 474, 475, 497], "rnn": [19, 21, 29, 36, 37, 41, 42, 150, 151, 160, 177, 183, 184, 189, 190, 191, 192, 193, 194, 204, 217, 218, 229, 238, 247, 248, 265, 270, 271, 311, 313, 352, 355, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 464, 467, 476, 490, 491, 492, 493, 497], "shuffl": [19, 183, 184, 189, 190, 247, 270, 311, 355, 369, 467, 477, 478, 479, 480, 497], "softmax": [19, 34, 37, 85, 115, 150, 151, 169, 183, 184, 217, 218, 246, 247, 270, 311, 355, 371, 481, 482, 483, 484, 497], "attempt": [19, 271, 408, 417, 448, 462, 486], "unimpl": [19, 135, 173, 189, 198, 277], "style": 19, "semicolon": 19, "delimit": [19, 135], "donednn_enable_primit": 19, "sse41": [19, 24, 25, 152, 277], "avx2": [19, 24, 26, 40, 152, 155, 277, 355], "avx512": [19, 26, 41, 147], "amx": [19, 24, 26, 139, 152, 155], "linearli": 19, "donednn_enable_primitive_cpu_isa": 19, "gen9": [19, 26, 40], "gen11": [19, 26], "xelp": 19, "xehp": 19, "xehpg": 19, "xehpc": 19, "donednn_enable_primitive_gpu_isa": 19, "processor": [19, 23, 24, 40, 130, 152, 155, 224, 300, 341, 374], "jit": [19, 24, 25, 36, 43, 134, 135, 148, 277, 355, 356, 376], "detect": [19, 24, 32, 132, 248, 464], "r": [19, 22, 38, 40, 41, 58, 65, 67, 68, 81, 82, 98, 100, 101, 102, 103, 104, 105, 106, 135, 136, 139, 150, 151, 224, 251, 283, 307, 341, 356, 374], "xsse4": 19, "sse4": [19, 24, 26, 147, 152, 155], "older": [19, 24, 26], "clang": [19, 43, 130], "msse4": 19, "give": [19, 139, 147, 330], "therefor": [19, 129, 131, 135, 145], "arch_opt_flag": 19, "portabl": [19, 130, 265], "reli": [19, 22, 32, 137], "situat": [19, 45, 356], "sometim": [19, 24, 36, 37, 39, 41, 147, 238, 337, 340, 367], "zmm": 19, "usag": [19, 23, 26, 30, 40, 109, 148, 160, 177, 204, 205, 229, 248, 312, 314, 351, 356, 456, 464], "advantag": [19, 145], "clock": [19, 135], "sequenti": [19, 320, 321], "throughout": [19, 36, 238, 340, 367], "undefin": [19, 37, 151, 156, 159, 160, 163, 165, 166, 167, 168, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 197, 293], "crash": [19, 340], "conflict": [19, 374], "donednn_cpu_runtim": 19, "tbbroot": 19, "environment": 19, "instal": [19, 32, 43], "dtbbroot": 19, "winograd": [19, 21, 137, 148, 150, 151], "_onednn_test_threadpool_impl": 19, "three": [19, 22, 32, 34, 36, 45, 130, 139, 147, 337, 341, 356, 374], "standalon": 19, "eigen": [19, 143], "eigen3_dir": 19, "d_onednn_test_threadpool_impl": 19, "deigen3_dir": 19, "eigen3": 19, "plu": 19, "decomposit": 19, "At": [19, 24, 25, 36, 45, 58, 134, 135, 148, 223, 340], "balanc": [19, 334], "item": [19, 135], "worker": [19, 489], "64": [19, 40, 41, 135, 156, 188, 214, 218, 236, 248, 300, 327, 363, 464], "optimis": 19, "computelibrari": 19, "machin": [19, 219, 334], "mlplatform": 19, "org": [19, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "donednn_aarch64_use_acl": 19, "download": [19, 32], "advis": [19, 24, 25, 42], "v23": 19, "02": 19, "donednn_blas_vendor": 19, "graphic": [19, 40, 224, 300, 341, 374], "sdk": 19, "dopenclroot": 19, "donednn_gpu_runtim": 19, "simultan": [19, 30, 32, 137], "besid": [19, 31, 34], "avx512_cor": [19, 24, 148, 152, 277], "conveni": [20, 28, 45, 147, 160, 177, 271, 341, 409, 467], "almost": [20, 130, 147], "far": [20, 41], "concern": [20, 41], "languag": [20, 34, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "switch": [20, 146, 147], "back": [20, 23, 31, 37, 41, 49, 50, 59, 60, 61, 62, 63, 64, 85, 86, 89, 90, 135, 137, 211, 212, 254, 256, 265, 267, 286, 297, 323, 324, 374, 392, 394, 396, 398, 400, 402, 448, 452, 454], "forth": 20, "desir": [20, 37, 130, 277], "c99": 20, "11": [20, 38, 135, 208, 209, 211, 212, 215, 232, 233, 320, 323, 324, 329, 337, 340, 356, 357], "coverag": [20, 30], "full": [20, 43, 135, 146, 148, 180, 341, 374], "medium": 20, "insid": [20, 31, 32, 147, 166, 174, 216, 225, 265, 330, 342, 450], "thin": 20, "wrapper": [20, 408, 417, 448, 462, 486], "stabl": [20, 141, 151], "abi": [20, 146, 184], "usabl": [20, 22], "target": [20, 31, 68, 217, 218, 248, 287, 291, 295, 297, 464], "audienc": 20, "experienc": 20, "ffi": 20, "framework": [20, 31, 35, 37, 128, 130, 134, 147, 293, 300, 340], "overhead": [20, 34, 36, 131, 134, 135, 147, 148], "sanit": [20, 34], "consequ": [20, 356], "nan": 20, "larg": [20, 34, 134], "close": [20, 130, 145], "accept": [20, 33, 36, 38, 50, 60, 61, 90, 128, 135, 277, 291], "overlap": [20, 49, 132], "permit": 20, "concaten": [21, 58, 139, 183, 191, 192, 213, 253, 265, 325, 389, 390], "concat_dimens": [21, 243, 253, 390], "ou": [21, 58, 140, 141], "src_i": [21, 56, 58, 85, 114, 142], "c_1": [21, 58], "c_": [21, 58, 139], "ident": [21, 34, 42, 43, 100, 101, 102, 103, 104, 105, 106, 131, 134, 141, 142, 204, 214, 226, 229, 234, 312, 325, 326, 327, 344, 351, 359, 372, 373], "dnnl_arg_multiple_src": [21, 142, 213, 241, 243, 271, 325, 372], "sum_i": [21, 218], "c_i": 21, "necessarili": [21, 138, 145], "dnnl_nchw16c": [21, 160, 177], "dnnl_ncdhw8c": [21, 160, 177], "prepack": 21, "dnnl_format_kind_opaqu": [21, 159, 176], "s8s8": [21, 41], "abl": [21, 24, 45, 137, 142, 180, 340], "slower": [21, 26, 142], "neural": [22, 23, 26, 34, 146, 208, 209, 276, 294, 320, 321], "network": [22, 23, 26, 34, 36, 146, 208, 209, 276, 294, 320, 321], "gradient": [22, 37, 47, 53, 55, 57, 62, 70, 74, 76, 78, 80, 83, 86, 93, 97, 108, 113, 115, 117, 119, 126, 139, 145, 189, 190, 193, 194, 254, 256, 260, 271, 355, 393, 394, 399, 400, 421, 422], "df_": 22, "diffweight": [22, 23, 39, 61, 64, 133], "commonli": [22, 23], "wide": [22, 34], "known": [22, 23, 26, 45, 219, 223, 225, 265, 330, 334, 340, 342], "summar": [22, 27, 129, 139], "scale_shift": 22, "normal": [22, 26, 30, 32, 37, 51, 52, 81, 82, 150, 151, 179, 180, 183, 184, 205, 207, 227, 228, 247, 263, 270, 271, 311, 315, 318, 334, 340, 347, 350, 355, 383, 384, 385, 386, 425, 426, 427, 428, 437, 439, 497], "layer": [22, 26, 32, 34, 36, 37, 79, 81, 82, 139, 183, 184, 204, 216, 217, 218, 225, 227, 229, 238, 247, 265, 270, 271, 276, 311, 312, 320, 321, 322, 323, 324, 329, 330, 332, 333, 342, 347, 351, 355, 367, 380, 382, 414, 416, 425, 426, 427, 428, 430, 432, 434, 436, 442, 444, 476, 491, 493, 497], "carri": 22, "diff_src": [22, 37, 44, 47, 50, 53, 57, 60, 63, 70, 74, 76, 78, 80, 82, 86, 90, 93, 97, 108, 113, 115, 117, 119, 126, 132, 133, 138, 141, 211, 212, 215, 238, 249, 257, 262, 323, 324, 329, 367], "diff_dst": [22, 37, 44, 47, 50, 53, 55, 57, 60, 61, 63, 64, 70, 74, 76, 78, 80, 82, 86, 90, 93, 97, 108, 113, 115, 117, 119, 126, 133, 141, 211, 212, 215, 249, 257, 262, 323, 324, 329], "diff_bia": [22, 55], "diff_scale_shift": 22, "_layer": 22, "_iter": 22, "recurr": [22, 26, 139, 204, 229, 271, 276, 312, 351, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "letter": [22, 147, 160, 177, 355], "od": 22, "depth": [22, 23, 59, 60, 147, 160, 177, 254, 256, 267, 392, 394, 396, 398, 400, 402, 452, 454], "kd": [22, 23, 39], "sd": [22, 23, 59, 60], "sw": [22, 23, 49, 59, 60, 89, 132, 214, 233, 327, 357], "dd": [22, 23, 28, 59, 60], "dh": [22, 23, 49, 59, 60, 89, 132, 233, 357], "dilat": [22, 60, 61, 62, 63, 64, 89, 90, 167, 168, 189, 190, 208, 215, 231, 233, 243, 254, 256, 267, 320, 329, 355, 357, 392, 394, 396, 398, 400, 402, 452, 454, 467], "ph": 22, "pw": 22, "wise": [22, 28, 37, 46, 48, 66, 72, 84, 88, 91, 92, 94, 95, 96, 99, 110, 118, 120, 121, 124, 127, 133, 147, 171, 172, 180, 183, 184, 214, 222, 233, 311, 327, 339, 357], "transposit": [22, 251, 283, 307], "b": [22, 34, 40, 45, 139, 141, 147, 160, 177, 216, 219, 225, 243, 251, 264, 265, 283, 302, 307, 330, 334, 342, 355, 446], "hidden": [22, 41, 218, 271, 276, 332, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 491, 493], "_t": [22, 139], "timestamp": [22, 135, 139], "l": [22, 43, 44, 139, 160, 204, 229, 238, 248, 265, 312, 351, 367, 464], "tanh": [22, 23, 28, 34, 92, 126, 139, 150, 151, 169, 204, 214, 226, 229, 230, 246, 312, 327, 344, 351, 353], "logist": [22, 28, 150, 151], "cell": [22, 26, 41, 150, 151, 160, 177, 189, 190, 193, 194, 218, 271, 276, 332, 333, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 467, 476, 491, 493], "tild": [22, 139], "candid": [22, 34, 45, 160, 177], "gate": [22, 139, 150, 151, 160, 177, 204, 229, 238, 265, 312, 351, 367], "forget": [22, 160, 177, 211, 212, 323, 324], "o": [22, 130, 135, 139, 147, 160, 177, 218, 232, 238, 248, 265, 332, 333, 367, 464], "updat": [22, 23, 26, 39, 139, 145, 146, 160, 177, 211, 212, 215, 238, 323, 324, 329, 367, 422], "reset": [22, 30, 143, 150, 151, 160, 177, 272, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "english": 22, "alphabet": 22, "canon": 22, "z": [22, 41], "outermost": [22, 140, 141, 147, 160, 177, 265], "innermost": [22, 140, 141, 160, 177, 189, 190, 265], "dens": [22, 30, 141, 147, 148, 265, 450], "ba": [22, 177, 450], "last": [22, 30, 41, 42, 81, 82, 87, 123, 130, 147, 148, 173, 198, 199, 262, 272, 321, 332, 333, 340, 412, 466], "transpos": [22, 87, 140, 160, 177, 225, 251, 283, 307, 342], "natur": [22, 84, 150, 151, 340], "suppos": [22, 38, 238, 367], "column": [22, 45, 87, 135, 147, 251, 283, 307], "row": [22, 30, 87, 140, 147, 178, 197, 216, 218, 243, 251, 283, 293, 307, 330], "major": [22, 41, 140, 147, 216, 251, 277, 283, 293, 307, 330, 494], "fortran": 22, "todo": [22, 132, 217, 311, 332], "pictur": [22, 132, 147, 375], "ab16a": 22, "similar": [22, 26, 36, 133, 146, 147, 238, 322, 330, 340, 367], "split": [22, 37, 130, 135, 147, 265, 450], "contigu": [22, 45, 147, 251, 283, 293, 307], "represent": [22, 35, 147, 265, 330, 332, 337, 340, 341, 374, 450], "mani": [22, 31, 36, 130, 147, 340], "domain": [22, 30, 147, 160, 177, 248, 330, 456], "four": [22, 41, 139], "cross": [23, 109, 130, 148, 300], "correl": 23, "comment": [23, 59, 60], "front": [23, 49, 50, 59, 60, 61, 62, 63, 64, 89, 90, 135, 254, 256, 267, 392, 394, 396, 398, 400, 402, 452, 454], "top": [23, 49, 50, 59, 60, 61, 62, 63, 64, 89, 90, 135, 147, 248, 254, 256, 265, 267, 392, 394, 396, 398, 400, 402, 452, 454, 456], "left": [23, 28, 44, 45, 49, 50, 59, 60, 61, 62, 63, 64, 81, 82, 87, 89, 90, 111, 132, 138, 140, 141, 147, 148, 189, 190, 191, 192, 214, 231, 233, 238, 248, 254, 256, 265, 267, 327, 355, 357, 367, 392, 394, 396, 398, 400, 402, 452, 454, 456, 467], "pd_l": [23, 59, 60], "ph_l": [23, 49, 59, 60, 89, 132, 214, 233, 327, 357], "pw_l": [23, 49, 59, 60, 89, 132, 214, 233, 327, 357], "_l": 23, "stand": [23, 130], "bottom": [23, 49, 50, 59, 60, 61, 62, 63, 64, 89, 90, 147, 254, 256, 267, 392, 394, 396, 398, 400, 402, 452, 454], "pd_r": [23, 59, 60], "ph_r": [23, 59, 60, 214, 233, 327, 357], "pw_r": [23, 59, 60, 214, 233, 327, 357], "_r": 23, "broken": 23, "exposit": 23, "realiti": 23, "geq": [23, 28, 138, 322], "sum_": [23, 39, 45, 59, 85, 87, 114], "lfloor": [23, 59, 138], "rfloor": [23, 59, 138], "oc_g": [23, 59], "ic_g": [23, 59], "5d": [23, 42, 147, 160, 177, 248, 456], "depthwis": [23, 248, 271, 456], "dkh": [23, 59], "dkw": [23, 59], "fraction": 23, "swap": [23, 265, 450], "put": [23, 211, 212, 266, 305, 323, 324], "determin": [23, 31, 38, 163, 165, 231, 356], "diffbia": [23, 39, 139], "dnnl_arg_diff_weight": [23, 39, 133, 211, 212, 215, 243, 271, 323, 324, 329], "dnnl_arg_diff_bia": [23, 39, 139, 211, 212, 215, 238, 243, 271, 323, 324, 329, 367], "f64": [23, 26, 28, 42, 132, 175], "physic": [23, 42, 130, 141, 147, 160, 223, 265, 340, 450], "critic": [23, 36, 37, 39, 131, 231, 355], "shorten": [23, 39, 139, 148], "dnnl_wio": [23, 39, 160], "dnnl_hwio": [23, 39, 160], "dnnl_dhwio": [23, 39, 160], "xe": [23, 300], "hpc": [23, 26], "entir": [23, 36, 39, 45, 100, 101, 102, 103, 104, 105, 106], "dnnl_arg_": [23, 39, 45, 266, 271, 282, 305, 306, 462, 470], "memory_index": [23, 39, 45], "dnnl_arg_attr_zero_point": [23, 45, 216, 225, 243, 248, 271, 330, 342, 464], "prevent": [23, 27, 38, 129, 271], "feasibl": 23, "deploi": 23, "done": [23, 28, 37, 45, 132, 137, 321, 322, 340, 341], "pseudo": [23, 30, 41, 131, 137, 147], "set_output_scal": 23, "eta": 23, "set_zero_point": 23, "shift_src": [23, 137], "shift_dst": [23, 137], "shift_": [23, 137], "simd": [23, 24, 26, 152, 155], "expens": [23, 37, 337, 340, 355, 450], "fast": [23, 147], "lavin": 23, "grai": 23, "often": [23, 135, 148], "rearrang": [23, 123], "fallback": 23, "platform": [23, 26, 40, 41, 135, 210, 211, 218, 300, 323, 333, 356], "condit": [23, 28, 36, 111, 139, 173, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372], "exce": 23, "half": [23, 26, 145, 156, 164, 175], "14": [23, 38, 135, 231, 355, 356, 456], "constraint": [23, 45], "met": [23, 96, 97], "silent": [23, 25], "fall": 23, "explicit": [23, 143, 238, 265, 367], "weigh": 23, "against": 23, "boost": [23, 24, 26, 145, 152, 155], "consumpt": [23, 190, 265, 340], "grow": 23, "significantli": [23, 134, 145], "growth": 23, "rest": [23, 59], "conv1_pd": 23, "convolution_winograd": [23, 151, 392, 394, 396, 398], "conv1_src_md": [23, 209, 321], "conv1_weights_md": [23, 209, 321], "conv1_bias_md": [23, 209, 321], "conv1_dst_md": [23, 209, 321], "conv1_strid": [23, 209, 321], "conv1_padding_l": 23, "conv1_padding_r": 23, "convolution_auto": [23, 151, 231, 355, 392, 394, 396], "heurist": 23, "affin": [23, 81, 82, 130], "explor": [24, 135], "onednn_max_cpu_isa": 24, "isa": [24, 26, 31, 40, 41, 148, 152, 153, 154, 155, 243, 277, 300, 302, 355, 376], "avx": [24, 26, 148, 152, 155, 277, 355], "advanc": [24, 26, 40, 45, 139, 152, 155, 219, 300, 334, 342], "avx2_vnni": [24, 148, 152, 277], "dl": [24, 26, 145, 152, 155], "512": [24, 26, 148, 152, 155, 230, 353], "avx512bw": [24, 26, 148], "avx512vl": [24, 148], "avx512dq": [24, 148], "avx512_core_vnni": [24, 148, 152, 277], "avx512_core_bf16": [24, 148, 152, 277], "avx512_core_fp16": [24, 152, 277], "float16": [24, 152, 155], "avx512_core_amx": [24, 148, 152, 277], "8": [24, 26, 35, 38, 41, 43, 130, 135, 145, 152, 155, 156, 160, 164, 175, 177, 199, 207, 208, 210, 215, 248, 251, 283, 307, 318, 320, 322, 329, 355, 464], "No": [24, 26, 32, 33, 138, 139, 153, 154, 204, 210, 211, 218, 238, 312, 323, 333, 355, 367], "exclud": [24, 150, 151], "preview": [24, 152, 155], "avx2_vnni_2": [24, 148, 152, 277], "avx512_core_amx_fp16": [24, 148, 152, 277], "manag": [24, 25, 31, 129, 135, 148, 195, 196, 266, 305, 417], "set_max_cpu_isa": [24, 277, 302], "ed": [24, 135], "observ": [24, 130, 148], "get_effective_cpu_isa": [24, 277, 302], "highest": [24, 32, 36, 148], "onednn_cpu_isa_hint": 25, "set_cpu_isa_hint": [25, 277, 302], "routin": 25, "no_hint": [25, 153, 277], "prefer_ymm": [25, 153], "ymm": [25, 153, 154], "get_cpu_isa_hint": [25, 277, 302], "pose": 25, "bypass": 25, "ieee": [26, 145], "golden": 26, "low": [26, 36, 245, 248, 254, 256, 267, 392, 394, 396, 398, 400, 402, 452, 454, 464], "comparison": [26, 45, 219, 265, 311], "boolean": [26, 111, 156, 164, 294], "graph": [26, 30, 34, 35, 43, 71, 122, 128, 199, 243, 247, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 300, 302, 411], "doubl": [26, 156, 190, 216, 219, 243, 330, 334], "arithmet": [26, 103, 121, 135, 219, 334], "topic": [26, 29, 265, 300, 340, 355, 356], "govern": [26, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "convert_": 26, "_dt": 26, "_zero": 26, "_point_": 26, "postops_": 26, "oscale_": 26, "wei": 26, "mix": [26, 35, 127], "downconvers": [26, 161, 162], "fenv": 26, "nearest": [26, 79, 80, 110, 127, 150, 151, 167, 168, 275], "tie": 26, "x64": [26, 135, 148], "fesetround": 26, "denorm": 26, "flush": 26, "xmmintrin": 26, "_mm_set_flush_zero_mod": 26, "_mm_flush_zero_on": 26, "acceler": [26, 37, 44], "explain": [26, 38, 321, 322], "recogn": [26, 34, 35], "fp16": 26, "word": [26, 37, 41, 45, 160, 177, 195, 196], "valid": [26, 34, 37, 45, 49, 50, 56, 57, 59, 60, 61, 62, 63, 64, 89, 90, 135, 139, 148, 156, 159, 167, 168, 184, 190, 232, 250, 265, 291, 293, 355, 412, 448, 450], "4x": 26, "microarchitectur": 26, "uarch": [26, 135], "lp": [26, 136, 150], "previoulsi": 26, "gen12lp": 26, "hp": 26, "newer": 26, "interact": [27, 129, 261, 266, 282, 283, 292, 297], "dnnl_sycl": [27, 202, 242, 374], "seamlessli": 27, "submit": [27, 129, 242, 272, 318, 320, 321, 341, 374, 489], "access": [27, 36, 129, 130, 145, 218, 238, 242, 265, 269, 277, 288, 293, 332, 337, 340, 341, 367, 374, 448], "uint8_t": [27, 41, 131, 190, 216, 218, 225, 243, 251, 266, 271, 283, 291, 293, 294, 295, 302, 305, 307, 330, 333, 342, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 451, 452, 453, 454, 457, 458, 459, 460, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493], "unifi": [27, 31, 129], "sycl_interop": [27, 242, 243, 265, 282, 285, 286, 297, 302, 303, 374], "make_engin": [27, 129, 131, 305, 306], "get_devic": [27, 30, 129, 131, 305, 306], "get_context": [27, 30, 129, 224, 305, 306, 341], "make_stream": [27, 30, 129, 305, 306, 307], "get_queu": [27, 242, 306, 374], "make_memori": [27, 129, 242, 305, 306, 374], "get_buff": [27, 242, 265, 306, 374], "altern": [27, 37, 129, 138], "uniform": [27, 129, 130], "host": [27, 129, 181, 182, 202, 203, 265, 286, 297, 304, 341, 374, 448], "usual": [27, 37, 38, 83, 130, 131, 135, 148, 163, 165, 341, 374, 412], "memory_kind": [27, 129, 242, 243, 266, 282, 305, 306, 374], "could": [27, 34, 35, 129, 135, 145, 216, 276, 330, 340], "dnnl_memory_alloc": [27, 129, 208, 215, 220, 243, 265, 266, 282, 305, 306, 320, 329, 336, 448], "dnnl_memory_non": [27, 129, 243, 265, 266, 282, 305, 306, 448], "identifi": [27, 30, 31, 129, 135, 265, 295], "get_memory_kind": [27, 129, 305, 306], "track": [27, 31, 71], "accessor": [27, 374], "event": [27, 129, 135, 243, 266, 282, 297, 304, 305, 306], "proper": [27, 37, 38, 129, 219, 330, 334, 340], "write": [27, 36, 129, 135, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 265, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 341, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 448], "i_1": 28, "ldot": [28, 38, 45], "i_k": 28, "dnnl_eltwise_ab": [28, 150, 151], "begin": [28, 46, 47, 69, 76, 83, 96, 99, 107, 133, 138, 139, 140, 204, 205, 206, 207, 209, 213, 214, 218, 222, 224, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 325, 327, 333, 338, 341, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374], "leq": [28, 107, 133, 140], "clip": [28, 56, 150, 151], "dnnl_eltwise_clip": [28, 150, 151], "clip_v2": 28, "dnnl_eltwise_clip_v2": [28, 150, 151], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [28, 150, 151], "elu": [28, 34, 70, 150, 151, 169, 246], "dnnl_eltwise_elu": [28, 150, 151], "dnnl_eltwise_elu_use_dst_for_bwd": [28, 150, 151], "exp": [28, 34, 85, 114, 150, 169, 218, 246], "dnnl_eltwise_exp": [28, 150, 151], "dnnl_eltwise_exp_use_dst_for_bwd": [28, 150, 151], "gelu_erf": 28, "dnnl_eltwise_gelu_erf": [28, 150, 151], "5": [28, 30, 38, 41, 73, 79, 80, 81, 82, 111, 135, 138, 145, 147, 156, 160, 199, 208, 209, 211, 212, 215, 224, 228, 232, 236, 242, 293, 320, 323, 324, 329, 341, 349, 363, 374], "erf": [28, 73, 150, 151], "pi": 28, "gelu_tanh": 28, "dnnl_eltwise_gelu_tanh": [28, 150, 151], "044715": 28, "hardsigmoid": [28, 76, 150, 151, 169, 246], "dnnl_eltwise_hardsigmoid": [28, 150, 151], "max": [28, 30, 36, 37, 38, 41, 56, 57, 75, 77, 88, 89, 102, 132, 136, 141, 150, 151, 167, 168, 216, 219, 251, 267, 273, 283, 307, 330, 334, 341, 374], "min": [28, 41, 56, 57, 75, 77, 91, 104, 133, 135, 136, 143, 150, 151, 167, 168, 216, 273, 330], "hardswish": [28, 34, 78, 150, 151, 169, 246], "dnnl_eltwise_hardswish": [28, 150, 151], "dnnl_eltwise_linear": [28, 150, 151], "log": [28, 32, 34, 85, 148, 169, 219, 246, 334], "dnnl_eltwise_log": [28, 150, 151], "log_": 28, "dnnl_eltwise_logist": [28, 150, 151, 276], "dnnl_eltwise_logistic_use_dst_for_bwd": [28, 150, 151], "mish": [28, 93, 150, 151, 169, 246], "dnnl_eltwise_mish": [28, 150, 151], "omega": [28, 38, 93], "delta": [28, 93], "pow": [28, 34, 150, 151, 169, 246], "dnnl_eltwise_pow": [28, 150, 151], "dnnl_eltwise_relu_use_dst_for_bwd": [28, 150, 151, 257, 404], "dnnl_eltwise_round": [28, 150, 151], "soft_relu": [28, 150, 151], "dnnl_eltwise_soft_relu": [28, 150, 151], "dnnl_eltwise_sqrt": [28, 150, 151], "dnnl_eltwise_sqrt_use_dst_for_bwd": [28, 150, 151], "squar": [28, 34, 101, 118, 121, 150, 151, 169, 246], "dnnl_eltwise_squar": [28, 150, 151], "swish": [28, 150, 151], "dnnl_eltwise_swish": [28, 150, 151], "dnnl_eltwise_tanh": [28, 150, 151, 276], "dnnl_eltwise_tanh_use_dst_for_bwd": [28, 150, 151], "134145": 28, "_relu": 28, "logsigmoid": 28, "soft": [28, 36], "eltwise_forward": [28, 209, 211, 212, 221, 222, 223, 224, 232, 242, 257, 302, 321, 323, 324, 337, 338, 340, 341, 374, 404, 462], "rather": [28, 238, 367], "Such": [28, 37, 130, 450], "satisfi": [28, 31], "tutori": [29, 45, 216, 219, 225, 311], "start": [29, 30, 34, 38, 81, 82, 96, 97, 143, 146, 147, 148, 217, 223, 224, 242, 271, 311, 337, 355, 356, 377], "aggress": 30, "onednn_experimental_bnorm_stats_one_pass": 30, "varianc": [30, 51, 52, 53, 81, 82, 179, 180, 205, 207, 227, 249, 262, 271, 314, 318, 346, 384, 386, 426, 428], "bn": 30, "rfc": 30, "spars": [30, 159, 176, 178, 189, 190, 197, 265, 450], "compon": [30, 34], "metadata": [30, 31], "enumer": [30, 467], "format_kind": [30, 146, 148, 189, 250, 254, 256, 260, 262, 264, 265, 268, 273, 275, 276, 448, 450], "encod": [30, 34, 43, 178, 189, 190, 197, 217, 218, 265, 332, 333, 450], "csr": [30, 178, 197, 265, 450], "compress": [30, 36, 178, 197], "sparse_encod": [30, 189, 448, 450], "member": [30, 189], "namespac": [30, 131, 146, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 266, 282, 283, 285, 297, 311, 312, 314, 316, 318, 323, 324, 325, 327, 330, 334, 337, 338, 341, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374], "m": [30, 45, 87, 135, 209, 216, 219, 225, 230, 232, 243, 251, 283, 302, 307, 330, 334, 342, 353, 356, 496], "nnz": [30, 243, 265, 450], "values_dt": 30, "indices_dt": [30, 243, 265], "pointers_dt": [30, 243, 265], "csr_md": 30, "entri": [30, 148, 189, 190, 248, 265, 269, 272, 288, 450, 456], "csr_valu": 30, "5f": [30, 207, 218, 225, 318, 333, 342], "0f": [30, 208, 209, 210, 211, 212, 215, 217, 218, 220, 221, 224, 238, 242, 243, 320, 322, 323, 324, 329, 332, 333, 336, 337, 341, 367, 374], "csr_indic": 30, "csr_pointer": 30, "csr_mem": 30, "values_sz": 30, "indices_sz": 30, "pointers_sz": 30, "values_handl": 30, "indices_handl": 30, "pointers_handl": 30, "99": 30, "wtag": 30, "dtag": 30, "4x1000000": 30, "1000000x128": 30, "1000000": 30, "collect": [30, 31, 135, 148, 295, 330], "agnost": [30, 160, 177, 265], "cl_command_queu": [30, 129, 224, 243, 266, 305, 341], "ocl_queu": [30, 224, 341], "cl_queue_properti": 30, "prop": 30, "cl_queue_profiling_en": 30, "clcreatecommandqueuewithproperti": 30, "ocl_interop": [30, 129, 131, 224, 243, 266, 285, 302, 341], "reset_profil": [30, 272, 302], "enqueu": [30, 341], "twice": 30, "wait": [30, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 272, 280, 312, 314, 316, 318, 323, 324, 325, 327, 330, 334, 337, 338, 340, 341, 342, 344, 346, 349, 351, 353, 355, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 448, 486, 489], "conv_prim": [30, 214, 327], "uint64_t": [30, 143, 243, 272, 302, 489], "nsec": 30, "get_profiling_data": [30, 272, 302], "profiling_data_kind": [30, 272, 302], "resourc": [30, 31, 134, 286], "vendor": 30, "scope": [30, 36, 355], "apart": 30, "guarante": [30, 37, 122, 123, 147, 330], "sub": [31, 130, 139, 146, 147, 150, 151, 238, 265, 332, 355, 367], "ai": 31, "class": [31, 131, 143, 189, 242, 283, 286, 287, 291, 293, 294, 295, 298, 303, 307, 409, 417, 418, 462, 466, 467, 476], "bind": 31, "know": [31, 37, 216, 330], "connect": [31, 39, 128, 217, 238, 293, 294, 367, 412], "edg": 31, "subgraph": [31, 33, 34, 35], "within": [31, 34, 41, 44, 135, 147, 150, 151, 251, 262, 263, 265, 283, 307], "cycl": [31, 330], "procedur": 31, "port": 31, "node": [31, 122, 130, 208, 215, 243, 320, 329, 356], "abstract": [31, 131, 258, 265, 294, 298, 337, 340, 341, 374, 489], "multi": [31, 32, 34, 48, 66, 88, 91, 94, 121, 124, 130, 298], "lifecycl": 31, "anymor": [31, 147], "head": [32, 34, 135], "attent": [32, 34, 139, 204, 217, 218, 271, 276, 312, 332, 333, 380, 382, 430, 432, 476], "mha": 32, "perceptron": [32, 34], "mlp": [32, 225, 342], "bring": [32, 41], "involv": [32, 450], "onednn_experimental_graph_compiler_cpu_jit": 32, "onednn_experimental_graph_compiler_cpu_llvm_config": 32, "xbyak": 32, "donednn_build_graph": 32, "donednn_experimental_graph_compiler_backend": 32, "donednn_experimental_graph_compiler_cpu_jit": 32, "cpp": [32, 40, 43, 143, 148, 311, 321, 322, 332, 333, 337, 340, 341, 355, 356, 374], "adopt": 32, "friendli": [32, 36, 238, 322, 356, 367], "ir": [32, 40], "among": [32, 130, 135, 293], "occur": [32, 41, 147], "shall": 32, "guidelin": 32, "10": [32, 135, 145, 199, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 243, 312, 314, 316, 318, 320, 325, 327, 329, 330, 334, 338, 340, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 368, 370, 372], "technologi": 32, "onednn_experimental_graph_compiler_opt_level": 32, "turn": [32, 37, 147, 148, 340, 355], "onednn_experimental_graph_compiler_kernel_trac": 32, "stderr": 32, "filenam": 32, "json": [32, 33], "chrome": 32, "onednn_experimental_graph_compiler_print_pass_result": 32, "onednn_experimental_graph_compiler_verbos": 32, "messag": [32, 148, 216, 219, 330, 334, 340, 374, 409, 495], "info": [32, 33, 135, 148, 248, 276, 355, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 456, 491, 493], "onednn_experimental_graph_compiler_dump_gencod": 32, "path_to_dump": 32, "onednn_experimental_graph_compiler_c_includ": 32, "path_to_c_codegen_head": 32, "sctrace": 32, "tmp": [32, 217, 218, 277], "prioriti": 32, "rank": [32, 58, 65, 67, 68, 81, 82, 87, 98, 100, 101, 102, 103, 104, 105, 106], "cpu_includ": 32, "manual": [32, 35, 37, 41, 217], "path_to_onednn_repo": 32, "graph_compil": 32, "offlin": 32, "dump_cod": 32, "visual": [33, 43, 59, 60, 61, 62, 63, 64, 130, 146], "benchmark": [33, 356, 376], "onednn_graph_dump": 33, "serial": 33, "onednn_graph_verbos": 33, "100001": 33, "100002": 33, "1313609102600373579": 33, "100003": 33, "12829238476173481280": 33, "overal": [34, 122, 147, 356], "choic": [34, 147, 152, 155], "bracket": 34, "compos": 34, "superscript": 34, "repetit": 34, "subscript": 34, "t1": [34, 238, 243, 367], "neighbor": [34, 150, 151, 275], "implicitli": [34, 35, 139, 248, 265, 456], "in1": 34, "proceed": 34, "categori": [34, 160, 177], "unari": [34, 403, 405], "clamp": [34, 57, 169, 246], "gelu": [34, 74, 150, 151, 169, 246], "leakyrelu": [34, 169, 246], "sigmoid": [34, 113, 139, 151, 169, 246], "softplu": [34, 92, 117, 169, 246], "divid": [34, 41, 59, 60, 61, 62, 63, 64, 160, 169, 177, 246], "reducel1": [34, 169, 246], "reducel2": [34, 169, 246], "reducemax": [34, 169, 246], "reducemean": [34, 169, 246], "reducemin": [34, 169, 246], "reduceprod": [34, 169, 246], "reducesum": [34, 169, 246], "biasadd": [34, 55, 169, 246], "batchnorminfer": [34, 51, 169, 246], "resnext": 34, "ssd": 34, "convtranspos": [34, 169, 246], "adversari": 34, "interpol": [34, 80, 138, 167, 168, 169, 246, 275], "bert": 34, "dlrm": 34, "parallelwavegan": 34, "avgpool": [34, 169, 246], "maxpool": [34, 169, 246], "densenet": 34, "reciproc": [34, 169, 246], "t2": 34, "convolutionbackwardweight": [34, 169, 246], "biasaddbackward": [34, 169, 246], "relubackward": [34, 169, 246], "batchnormtrainingbackward": [34, 169, 246], "reshapetranspos": 34, "staticreshap": [34, 169, 246], "statictranspos": [34, 169, 246], "activationbackward": 34, "sigmoidbackward": [34, 169, 246], "gelubackward": [34, 169, 246], "decod": [34, 40, 217, 218, 332, 333], "bottleneck": [34, 148], "t3": 34, "t4": 34, "out1": 34, "out2": 34, "out3": 34, "out4": 34, "out5": 34, "out6": 34, "t0": [34, 238, 243, 367], "t5": 34, "t6": 34, "out7": 34, "batchnormforwardtrain": [34, 169, 246], "out8": 34, "out9": 34, "out10": 34, "out11": 34, "convolutionbackwarddata": [34, 169, 246], "strictli": 35, "symmetr": [35, 41, 67, 68, 254, 256, 267], "scheme": 35, "asymmetr": [35, 45, 65, 67, 68, 98, 248, 330, 331, 342, 343, 456], "honor": 35, "faithfulli": 35, "exact": [35, 41, 133, 139, 216, 330, 340], "elimin": 35, "typecast": [35, 109, 169, 246], "vice": [35, 45, 87], "versa": [35, 45, 87], "clearli": 35, "preprocess": 36, "classifi": 36, "depict": [36, 139, 147], "conv_prim_descr": 36, "maxim": [36, 277], "accomplish": 36, "manner": [36, 265, 450], "don": [36, 45, 208, 215, 216, 238, 320, 329, 330, 367], "find": [36, 100, 101, 102, 103, 104, 146, 216, 219, 221, 242, 330, 334, 337, 374], "look": [36, 147], "source_mem_descr": 36, "dest_mem_descr": 36, "weights_mem_descr": 36, "weight_memori": 36, "conv_source_memori": 36, "user_source_memori": 36, "get_desc": [36, 204, 209, 210, 211, 212, 214, 216, 217, 218, 221, 225, 226, 229, 231, 232, 234, 238, 265, 305, 312, 321, 322, 323, 324, 327, 330, 332, 333, 337, 342, 344, 351, 355, 356, 359, 367, 448], "reorder_prim_descr": 36, "conv_weights_memori": [36, 208, 210, 211, 212, 215, 320, 322, 323, 324, 329], "conv_dest_memori": 36, "durat": 36, "grab": 36, "infus": 36, "cast": [36, 41, 109, 127, 223, 340], "distribut": [36, 135, 150, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "effici": [36, 41, 147], "fill": [36, 37, 111, 147, 210, 218, 219, 220, 221, 225, 232, 234, 243, 333, 334, 336, 337, 342, 355, 359], "fed": [37, 145], "predict": 37, "forward_train": [37, 39, 139, 148, 187, 204, 205, 214, 222, 226, 227, 228, 229, 233, 234, 237, 238, 239, 240, 312, 314, 327, 338, 344, 346, 349, 351, 357, 359, 365, 367, 368, 370, 382, 386, 396, 402, 406, 416, 424, 428, 432, 436, 440, 444, 454, 460, 475, 480, 484, 493], "suffix": [37, 340], "_train": 37, "versu": [37, 145], "_infer": 37, "answer": 37, "backward_data": [37, 187, 384, 426], "sens": [37, 160, 177, 216, 330], "backward_weight": [37, 187], "solver": 37, "practic": [37, 130, 137, 148, 232, 322, 355, 356], "consider": [37, 330], "care": 37, "pooling_max": [37, 151, 209, 211, 212, 231, 233, 321, 323, 324, 355, 357, 452, 454], "slide": 37, "posit": [37, 38, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 79, 80, 81, 82, 83, 89, 90, 147, 207, 265, 289, 318], "Of": [37, 455], "cours": [37, 147, 455], "again": [37, 139], "takeawai": 37, "former": [37, 41, 146, 147], "invoc": 37, "especi": [37, 41, 134, 148, 265, 455], "techniqu": 37, "perspect": [37, 137, 147, 340], "varieti": 37, "emit": 37, "unnecessari": [37, 130, 355], "bullet": 37, "9": [37, 38, 40, 199, 356], "pick": [37, 232, 355, 356], "occasion": 37, "enforc": 37, "brain": 37, "workflow": [37, 341, 374], "workspace_desc": [37, 132, 204, 205, 211, 212, 228, 229, 233, 238, 312, 314, 323, 324, 349, 351, 357, 367, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "perfectli": 37, "inde": 37, "fwd": 37, "forward_primitive_desc": 37, "workspace_md": [37, 189], "primitive_forward": 37, "anywher": [37, 340], "els": [37, 79, 80, 208, 211, 212, 214, 215, 216, 232, 238, 242, 320, 323, 324, 327, 329, 330, 340, 367, 374], "bwd": 37, "primitive_backward": 37, "push": [38, 217, 218], "recent": [38, 134, 145], "focus": [38, 41, 130, 330], "shrink": [38, 41, 216, 330], "throughput": [38, 130, 145], "eight": 38, "offer": [38, 145], "pack": [38, 45, 147, 225, 342, 343], "cost": [38, 238, 356, 367], "dataset": [38, 322], "establish": 38, "q_": 38, "255": [38, 41, 190, 225, 342], "r_": 38, "127": [38, 41, 137, 218, 333], "alpha_": 38, "lceil": [38, 138], "rceil": [38, 138], "w_": [38, 41, 138, 139], "b_": [38, 139, 150, 151], "31": [38, 238, 243, 367], "roundnearesteven": 38, "approx": [38, 135], "approxim": [38, 150], "t_": 38, "15": [38, 41, 135, 147], "17": [38, 135, 147, 356], "96": [38, 188, 208, 209, 211, 212, 215, 225, 226, 232, 320, 323, 324, 329, 342, 344, 356], "bigl": 38, "bigr": 38, "238": 38, "187": 38, "66": 38, "88": 38, "528": 38, "1145": 38, "1762": 38, "net": [38, 40, 208, 209, 215, 217, 218, 238, 243, 320, 321, 322, 329, 332, 333, 367], "uniformli": 38, "g_0": 38, "o_1": 38, "i_2": 38, "h_3": 38, "w_4": 38, "walk": 38, "treat": [39, 41, 137, 141, 145], "minibatch": [39, 130, 265], "flatten": 39, "dnnl_io": [39, 160], "dnnl_oi": [39, 160], "dnnl_oiw": [39, 160], "dnnl_oihw": [39, 160, 208, 215, 320, 329], "dnnl_oidhw": [39, 160], "onednn_jit_dump": 40, "dnnl_set_jit_dump": [40, 243, 277], "dnnl_dump_cpu_jit_avx2_conv_fwd_kernel_f32": 40, "bin": 40, "dnnl_dump_cpu_jit_avx_gemv_t_f32_kern": 40, "30": [40, 216, 218, 219, 330, 333, 334], "disassembl": 40, "objdump": 40, "mi386": 40, "xed": 40, "emul": 40, "sde": 40, "dnnl_dump_gpu_simple_reord": 40, "dnnl_dump_gpu_gen9_conv_fwd": 40, "iga64": 40, "introduct": 40, "gen": [40, 216, 219, 225, 330, 334, 342], "assembli": 40, "emphas": 41, "signed": 41, "int8_t": [41, 216, 218, 225, 236, 243, 251, 283, 302, 307, 330, 333, 342, 363], "dnnl_gemm_u8s8s32": [41, 218, 243, 251], "averag": [41, 49, 132, 135, 150, 151, 267], "biggl": 41, "biggr": 41, "div": [41, 150, 151], "dnnl_gemm_s8s8s32": [41, 243, 251], "gru": [41, 150, 151, 160, 177, 276, 413, 414, 415, 416, 433, 434, 435, 436], "behind": [41, 147, 355], "xeon": [41, 152, 155, 348, 356], "e7": 41, "formerli": 41, "haswel": 41, "x1xx": 41, "seri": 41, "skylak": 41, "vpmaddubsw": 41, "vpmaddwd": 41, "vpaddd": 41, "s16": 41, "int16_t": 41, "c_s32": [41, 216, 330], "a_u8": [41, 216, 225, 330, 342], "b_s8": [41, 216, 225, 330, 342], "u8s8s32_compute_avx512": 41, "ab_s16": 41, "vpmaddubsw_r": 41, "saturate_to_s16": 41, "caution": 41, "snippet": 41, "u8s8s32_comput": 41, "32767": 41, "int16_min": 41, "int16_max": 41, "64770": 41, "pitfal": [41, 147], "vpmovsxbw": 41, "vpmovzxbw": 41, "2x": 41, "u7": 41, "s7": 41, "63": [41, 135, 218, 248, 464], "worth": [41, 330, 340, 356], "data_": 41, "set_rnn_data_qparam": [41, 218, 333, 464], "set_rnn_weights_qparam": [41, 218, 333, 464], "128": [41, 188, 190, 209, 225, 230, 231, 232, 342, 353, 355, 356], "w_max": 41, "x2xx": 41, "cascad": 41, "lake": 41, "vpdpbusd": 41, "u8s8s32_compute_avx512_dl_boost": 41, "real": [41, 137, 147, 160, 216, 330], "world": [41, 216, 330], "overcom": 41, "emploi": 41, "y_": 41, "a_s8": 41, "u8s8": 41, "s8s8s32_comput": 41, "32258": 41, "solv": 41, "overview": 41, "x_s8": 41, "precomput": [41, 217, 218, 322, 333], "embed": [41, 332, 333], "rescal": 41, "insignificantli": 41, "noth": 41, "meaningless": 41, "ia": 41, "volum": [41, 122, 265], "2a": 41, "2b": 41, "2c": [41, 217, 218], "325383": 41, "070u": 41, "futur": 41, "319433": 41, "037": 41, "chapter": 41, "rodriguez": 41, "andr": 41, "et": 41, "al": 41, "white": 41, "paper": [41, 147], "2018": [41, 210, 217, 218, 238, 367], "axi": [42, 45, 55, 58, 59, 60, 62, 63, 64, 65, 67, 68, 79, 80, 81, 82, 85, 86, 98, 100, 101, 102, 103, 104, 105, 106, 114, 115, 123, 140, 141, 167, 168, 189, 190, 213, 239, 240, 243, 265, 278, 279, 325, 368, 369, 370, 371, 467, 478, 480, 482, 484], "stat_desc": [42, 243, 262, 426, 428], "layer_normalization_forward": [42, 227, 262, 302, 346, 426, 462], "_ndim": 42, "_dim": [42, 45], "dnnl_tnc": [42, 139, 160], "dnnl_tn": [42, 160], "dnnl_nt": [42, 160], "dnnl_ldnc": [42, 139, 160], "unlik": [42, 67, 83, 109, 251, 283, 307, 412], "tnc": [42, 81, 82, 177, 204, 217, 218, 227, 229, 238, 312, 332, 333, 346, 351, 367], "dnnl_ntc": [42, 139, 160], "dnnl_bac": [42, 160, 177], "ldnc": [42, 81, 82, 177, 217, 218, 332, 333], "dnnl_type": [43, 147, 150, 154, 155, 159, 160, 180, 184, 186, 188, 190, 192, 194, 196, 197, 410], "auxiliari": [43, 148, 223, 340], "dnnl_config": 43, "dnnl_version": [43, 243, 277], "dnnl_graph_typ": [43, 163, 168, 170, 172, 174, 411, 412], "libdnnl": [43, 135], "dnnl_library_typ": [43, 146], "dylib": 43, "bindnnl": 43, "dll": 43, "dnnlroot": 43, "getting_start": [43, 311, 340], "ldnnl": 43, "resolv": [43, 218, 332], "sure": [43, 45, 87, 291], "ld_library_path": 43, "dyld_library_path": 43, "rpath": 43, "appl": [43, 348], "secur": 43, "entitl": 43, "fly": [43, 340], "xcode": 43, "codesign": 43, "plist": 43, "xml": 43, "utf": 43, "doctyp": 43, "dtd": 43, "en": 43, "www": [43, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "propertylist": 43, "dict": 43, "eha": 43, "cl": [43, 135, 224, 242, 341, 374], "microsoft": [43, 130, 146, 348], "msv": 43, "n_": 44, "local_s": [44, 208, 211, 212, 215, 228, 243, 263, 320, 323, 324, 329, 349, 438, 440], "12d": [45, 160, 177], "bs_0": 45, "bs_1": 45, "dnnl_runtime_dim_v": [45, 219, 225, 243, 265, 266, 271, 282, 305, 306, 334, 335, 342, 343, 462, 470], "wildcard": [45, 169, 246, 265, 293], "hand": [45, 147, 160, 177, 265], "inconsist": [45, 148], "v": [45, 140, 216, 219, 225, 232, 243, 330, 334, 342, 448], "invalid": [45, 269, 277, 288, 289], "nd": [45, 96, 97, 147], "sake": [45, 147, 340], "prod_": 45, "mathrm": 45, "mbox": [45, 133], "ax": [45, 79, 80, 87, 100, 101, 102, 103, 104, 105, 106, 133, 141, 167, 168, 265, 450], "abc": [45, 177, 230, 265, 353, 450], "bac": [45, 177], "matric": [45, 216, 219, 225, 251, 283, 307, 330, 334, 342], "subsequ": [45, 146, 147, 148, 187, 188, 238, 259, 277, 332, 333, 340, 367], "sgemm": [45, 219, 251, 302, 307, 311, 335], "ge": [46, 69, 83, 96], "diff": [47, 76, 180, 189, 211, 212, 215, 216, 219, 238, 249, 254, 256, 257, 260, 262, 263, 267, 268, 271, 275, 276, 278, 279, 323, 324, 329, 330, 334, 367, 380, 384, 392, 394, 398, 400, 404, 414, 420, 422, 426, 430, 434, 438, 442, 452, 458, 467, 473, 476, 478, 482, 491], "_dst": [47, 76], "rule": [48, 66, 87, 88, 91, 94, 121, 122, 124, 190], "auto_broadcast": [48, 66, 88, 91, 94, 111, 121, 124, 167, 168], "numpi": [48, 66, 88, 91, 94, 111, 121, 122, 124, 167, 168, 265], "denom": [49, 132], "exclude_pad": [49, 50, 167, 168], "move": [49, 50, 59, 60, 61, 62, 63, 64, 89, 90, 147, 332, 333, 337, 408, 417, 448, 462, 486], "s64": [49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 79, 80, 81, 82, 85, 86, 89, 90, 98, 100, 101, 102, 103, 104, 105, 106, 114, 115, 123], "pads_begin": [49, 50, 59, 60, 61, 62, 63, 64, 89, 90, 167, 168], "auto_pad": [49, 50, 59, 60, 61, 62, 63, 64, 89, 90, 167, 168], "same_upp": [49, 50, 59, 60, 61, 62, 63, 64, 89, 90, 167, 168], "same_low": [49, 50, 59, 60, 61, 62, 63, 64, 89, 90, 167, 168], "pads_end": [49, 50, 59, 60, 61, 62, 63, 64, 89, 90, 167, 168], "count": [49, 50, 67, 68, 85, 86, 122, 123, 135, 209, 243, 248, 258, 408], "rounding_typ": [49, 89, 167, 168], "floor": [49, 60, 89, 167, 168], "data_format": [49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 79, 80, 89, 90, 96, 97, 167, 168, 412], "interpret": [49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 79, 80, 87, 89, 90, 122], "ncx": [49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 79, 80, 89, 90, 96, 97, 167, 168], "nxc": [49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 79, 80, 89, 90, 96, 97, 167, 168, 412], "srcshape": 50, "src_shape": [50, 79, 80, 167], "epsilon": [51, 52, 53, 81, 82, 167, 168, 189, 190, 219, 227, 243, 249, 262, 334, 346, 384, 386, 426, 428, 467, 469], "momentum": [51, 167, 168], "neither": [51, 53, 337, 340, 341, 374], "running_mean": 51, "running_vari": 51, "batch_mean": 51, "batch_vari": 51, "diff_gamma": [53, 82], "diff_beta": [53, 82], "_valu": 56, "use_dst": [57, 70, 108, 113, 119, 126, 167, 168], "weights_format": [59, 60, 61, 62, 63, 64, 167, 168], "oix": [59, 60, 61, 62, 63, 64, 167, 168], "fist": 59, "stretch": [59, 60, 61, 62, 63, 64], "xio": [59, 60, 61, 62, 63, 64, 167, 168], "_channel": [59, 60, 61, 62, 63, 64], "_shape": [59, 60, 61, 62, 63, 64, 97], "firstli": [60, 87], "_pad": 60, "_h": 60, "_padding_h": 60, "output_pad": [60, 62, 63, 64, 167, 168], "dst_shape": [60, 79, 80, 111, 167, 168], "weights_shap": [61, 64, 167], "iox": [62, 63, 64, 167, 168], "xoi": [62, 63, 64, 167, 168], "de": [65, 67, 68, 355], "zp": [65, 67, 68, 98, 167, 168, 216, 330], "zps_i": [65, 67, 68], "scale_i": [65, 98], "qtype": [65, 67, 68, 98, 167, 168], "per_tensor": [65, 67, 68, 98, 167, 168], "per_channel": [65, 67, 68, 96, 98, 167, 168], "scales_i": [67, 68], "channelnum": [67, 68, 100, 101, 102, 103, 104, 105, 106], "exponenti": [72, 150, 151], "sqrt2": 73, "_src": 76, "bilinear": [79, 80, 151, 167, 168, 275], "trilinear": [79, 80, 138, 151, 167, 168, 275], "coordinate_transformation_mod": [79, 80, 167, 168], "coordin": [79, 80], "resiz": [79, 80], "half_pixel": [79, 80, 167, 168], "align_corn": [79, 80, 167, 168], "x_resiz": [79, 80], "differenti": [79, 131, 146, 294], "begin_norm_axi": [81, 82, 167, 168], "keep_stat": [81, 167, 168], "use_affin": [81, 82, 167, 168], "modul": [81, 82, 135], "1e": [81, 82, 216, 330], "span": [81, 82], "layernorm": [82, 169, 246], "small": [83, 130, 356], "coeffici": 83, "leakag": 83, "logarithm": [84, 150, 151], "formul": [85, 116, 117, 340], "dst_i": [85, 114, 121], "big": 85, "src_j": [85, 114], "logsoftmax": [86, 141, 150, 151, 169, 246], "unsqueez": 87, "transpose_a": [87, 167, 168], "transpose_b": [87, 167, 168], "_0": [88, 91], "distanc": [89, 90], "avgpoolbackward": [90, 169, 246], "ln": [92, 116, 141], "diff_": [93, 139], "3src": 93, "2src": 93, "parametr": 96, "per_channel_broadcast": [96, 167, 168], "uni": [96, 97, 148, 217, 218, 355, 356], "direction": [96, 97], "rightmost": [96, 238, 367], "shape_i": 96, "tensorflow": [97, 145, 147], "_forward": 97, "diff_slop": 97, "zp_i": 98, "infin": 99, "neq": 99, "inf": 99, "l1": [100, 135], "norm": [100, 101, 136, 150, 216, 219, 330, 334], "keep_dim": [100, 101, 102, 103, 104, 105, 106, 167, 168], "shapeof": [100, 101, 102, 103, 104, 105, 106], "l2": [101, 135, 216, 330], "root": [101, 118, 136, 150, 151], "third": [111, 340], "cond": 111, "align": [111, 133, 139, 148, 217, 218, 243, 286, 297, 340, 356], "invalid_shap": [111, 173], "_0_i": 121, "_1_i": 121, "special_zero": [122, 167, 168], "keep": [122, 145, 147, 166, 174, 190, 211, 212, 215, 238, 321, 323, 324, 329, 356, 367], "permut": [123, 160, 177, 243, 265, 450], "substract": 124, "dnnl_ocl": [129, 181, 224, 341], "cl_device_id": [129, 131, 243, 266, 305], "cl_context": [129, 131, 224, 243, 266, 305], "cl_mem": [129, 224, 243, 265, 266, 305, 340, 341, 448], "get_command_queu": [129, 224, 305, 341], "get_mem_object": [129, 224, 305, 341], "retain": 129, "destruct": [129, 450, 456, 464], "measur": [130, 148, 322], "affinit": 130, "tbb": [130, 135], "intention": 130, "openmp": [130, 148, 355], "nor": [130, 337, 340, 341, 374], "principl": 130, "numactl": 130, "easi": 130, "modern": 130, "socket": [130, 356], "chip": 130, "tile": 130, "cluster": 130, "setup": [130, 135], "variant": [130, 139, 254, 256], "orient": 130, "latenc": [130, 135], "server": 130, "interleav": 130, "chanc": 130, "traffic": 130, "variat": 130, "omp_proc_bind": 130, "spread": 130, "omp_plac": 130, "omp_num_thread": [130, 356], "membind": 130, "cpunodebind": 130, "physcpubind": 130, "kmp_hw_subset": 130, "1t": 130, "costli": 131, "mitig": [131, 134, 218], "blob": [131, 189, 190, 266, 271, 305, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 451, 453, 457, 459, 462, 467, 468, 470, 472, 474, 477, 479, 481, 483, 487, 490, 492], "content": [131, 265, 448], "commit": [131, 148, 277], "hash": [131, 148, 277, 355, 494], "dnnl_version_t": [131, 243, 277, 302], "packag": [131, 146], "fetch": 131, "primitive_desc_bas": [131, 271, 302, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_cache_blob_id": [131, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_cache_blob": [131, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 451, 453, 457, 459, 462, 468, 470, 472, 474, 477, 479, 481, 483, 487, 490, 492], "cache_miss": [131, 148], "cache_hit": [131, 148], "from_cache_blob": [131, 148], "store_cache_blob_on_disk": 131, "load_cache_blob_from_disk": 131, "conv_from_cache_blob": 131, "get_engine_cache_blob_id": [131, 305], "get_engine_cache_blob": [131, 305], "ocl_engin": 131, "dnnl_pooling_avg_include_pad": [132, 150, 151, 267], "dnnl_pooling_avg_exclude_pad": [132, 150, 151, 267], "nice": 132, "restor": 132, "itself": [132, 271, 340, 466, 486], "dnnl_pooling_max": [132, 150, 151, 208, 215, 267, 320, 329], "flt_max": 132, "dbl_max": 132, "area": [132, 148, 265, 450], "leaki": [133, 268], "trainabl": [133, 268], "Its": 133, "weights_md": [133, 189, 208, 230, 234, 320, 353, 359, 467], "repeat": [134, 355], "capac": [134, 243, 269, 288, 302, 303], "exceed": 134, "evict": [134, 269, 288], "hit": 134, "miss": [134, 135, 148, 167, 209, 211, 212, 217, 218, 321, 323, 324], "onednn_primitive_cache_capac": 134, "1024": [134, 137, 238, 243, 288, 367], "dnnl_set_primitive_cache_capac": [134, 243, 269], "notifi": 135, "address": [135, 147, 238, 367], "tm": [135, 311], "onednn_jit_profil": 135, "aarch64": [135, 300], "tsc": [135, 277], "dnnl_set_jit_profiling_flag": [135, 243, 277], "box": 135, "overrid": [135, 143, 277], "dnnl_set_jit_profiling_jitdumpdir": [135, 243, 277], "timelin": 135, "chart": 135, "fp": [135, 248, 259, 277], "onednn_itt_task_level": 135, "trigger": [135, 356], "master": [135, 145], "amplx": 135, "q": [135, 242, 374], "knob": 135, "shapes_alexnet": 135, "nmi": 135, "watchdog": 135, "timer": 135, "impl": [135, 143], "prb": 135, "gop": 135, "gfreq": 135, "gflop": 135, "0time": 135, "0gflop": 135, "avx512_common": [135, 356], "alexnet": [135, 208, 209, 210, 211, 212, 215, 320, 321, 322, 323, 324, 329], "conv1": [135, 209, 320, 321], "g1mb256ic3ih227oc96oh55kh11sh4ph0n": 135, "53": 135, "9726": 135, "4285": 135, "3096": 135, "81": 135, "22": 135, "5851": 135, "2389": 135, "74": 135, "conv2": [135, 209, 320, 321], "g2mb256ic96ih27oc256oh27kh5ph2n": 135, "104": 135, "696": 135, "20": [135, 216, 219, 293, 330, 334], "2195": 135, "5177": 135, "98": 135, "21": [135, 356], "9233": 135, "4775": 135, "56": [135, 148], "conv3": [135, 209, 210, 322], "mb256ic256ih13oc384oh13kh3ph1n": 135, "68": 135, "904": 135, "5134": 135, "4441": 135, "57": 135, "18": [135, 356], "1391": 135, "3798": 135, "conv4": [135, 209], "g2mb256ic384ih13oc384oh13kh3ph1n": 135, "51": 135, "678": 135, "7397": 135, "4401": 135, "97": 135, "4623": 135, "4146": 135, "76": 135, "conv5": [135, 209], "g2mb256ic384ih13oc256oh13kh3ph1n": 135, "34": 135, "452": 135, "77148": 135, "4433": 135, "13": [135, 148, 160, 209, 210, 214, 223, 322, 327, 340], "50435": 135, "4051": 135, "skip": [135, 265, 448], "mistrust": 135, "72": [135, 239, 368], "6726": 135, "avg": 135, "83": 135, "6142": 135, "interfac": [135, 143, 283, 286, 293, 297, 307, 341, 374, 489], "report": [135, 137, 248, 464], "csv": 135, "_jit_avx512_common_conv_fwd_kernel": 135, "300": 135, "128503": 135, "293": 135, "946143": 135, "285": 135, "549830": 135, "268": 135, "868599": 135, "256": [135, 209, 210, 217, 218, 230, 231, 243, 322, 353, 355], "715527": 135, "libgomp": 135, "func": [135, 211, 212, 215, 323, 324, 329], "0x194f0": 135, "186": 135, "604226": 135, "0x19370": 135, "82": 135, "609694": 135, "jit_avx512_co": 135, "682241": 135, "vmlinux": 135, "763433": 135, "1451": 135, "459338": 135, "outsid": [135, 283], "280": 135, "489764": 135, "434821": 135, "interv": 135, "2000": 135, "ue": 135, "2344": 135, "3131": 135, "24": [135, 147], "1246": 135, "2237": 135, "2988": 135, "5157": 135, "6731": 135, "4617": 135, "5369": 135, "4434": 135, "87": 135, "1371": 135, "4020": 135, "75": [135, 208, 209, 211, 212, 215, 320, 323, 324, 329], "428": 135, "4522": 135, "06": 135, "7986": 135, "4037": 135, "79": 135, "64233": 135, "4508": 135, "05": 135, "99841": 135, "3828": 135, "1404": 135, "85": 135, "7318": 135, "dtlb": 135, "load": 135, "lock": 135, "4k": 135, "alias": [135, 160, 177], "fb": 135, "26": [135, 204, 229, 312, 351], "icach": 135, "micro": 135, "itlb": 135, "bad": 135, "specul": 135, "l3": 135, "dram": 135, "frequenc": 135, "clocktick": 135, "retir": 135, "cpi": 135, "rate": [135, 148], "x87": 135, "microcod": 135, "assist": 135, "jitdump": [135, 277], "perfmap": [135, 277], "jitdumpdir": [135, 277], "record": 135, "k1": [135, 209], "mb1ic32ih14oc32oh14kh3ph1n": 135, "resnet_50": 135, "res4a_branch2b": 135, "mb1ic32ih14oc32oh14kh3ph1nresnet_50": 135, "0032768": 135, "0131836": 135, "248": 135, "551": 135, "0262988": 135, "124": [135, 137], "599": 135, "woken": 135, "captur": [135, 409], "wrote": 135, "884": 135, "23102": 135, "inject": 135, "displai": [135, 148], "stdio": [135, 208, 215, 220, 320, 329, 336], "n20": 135, "lost": 135, "23k": 135, "uhh": 135, "5775500000": 135, "symbol": [135, 146], "39": 135, "33": 135, "0x000000000001d8ba": 135, "29": 135, "41": [135, 356], "31475": 135, "jit_avx2_conv_fwd_kernel_f32": 135, "49": 135, "0x000000000001d712": 135, "47": 135, "jit_avx2_convolution_fwd_t": 135, "execute_forward": 135, "exec_ctx_t": 135, "lambda": 135, "52": 135, "0x000000000001d8be": 135, "93": 135, "0x000000000001d716": 135, "0x000000000001d8c5": 135, "55": [135, 208, 209, 211, 212, 215, 232, 320, 323, 324, 329, 356], "0x000000000001d8c3": 135, "46": 135, "0x000000000001d71d": 135, "resolut": 135, "disassembli": 135, "brendan": 135, "gregg": 135, "excel": 135, "mathop": 136, "mul": [136, 150, 151, 273], "idl": 136, "ep": [136, 243, 273, 469], "kept": [137, 147, 160, 271, 466], "dnnl_arg_from": [137, 208, 209, 210, 211, 212, 215, 218, 220, 231, 243, 271, 320, 321, 322, 323, 324, 329, 333, 336, 355], "dnnl_arg_to": [137, 208, 209, 210, 211, 212, 215, 218, 220, 231, 243, 271, 320, 321, 322, 323, 324, 329, 333, 336, 355], "encount": [137, 321], "bug": [137, 171, 172], "team": 137, "dnnl_s8": [137, 156, 164, 175], "dnnl_f32": [137, 147, 156, 160, 164, 175, 208, 215, 220, 320, 329, 336], "allevi": [137, 219, 334], "dt_src": 137, "memory_format": 137, "fmt_src": 137, "dt_dst": 137, "fmt_dst": 137, "upsampl": [138, 233, 357], "downsampl": 138, "f_h": 138, "f_w": 138, "definit": [138, 139, 140, 265, 284, 286, 296, 299, 411], "ih_0": 138, "iw_0": 138, "ih_1": 138, "iw_1": 138, "nchw16c": [138, 147, 177], "_spatial": 138, "_size": 138, "unrol": 139, "srciter": 139, "dstiter": 139, "evalu": 139, "left2right": 139, "increas": [139, 145, 356], "right2left": 139, "decreas": [139, 356], "bidirectional_concat": [139, 191, 217, 218, 332, 333], "dstlayer": 139, "bidirectional_sum": [139, 191], "srclayer": 139, "h_": [139, 150, 151], "And": [139, 147, 265, 450], "short": [139, 146, 355], "vanilla_rnn_forward": [139, 276, 302, 462, 464, 491], "vanilla_rnn_backward": [139, 276, 302, 462], "vanilla_rnn_pd": 139, "aprop": 139, "src_layer_desc": [139, 218, 238, 243, 276, 333, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "src_iter_desc": [139, 204, 229, 238, 243, 276, 312, 351, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "weights_layer_desc": [139, 217, 218, 238, 243, 276, 332, 333, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "weights_iter_desc": [139, 204, 217, 218, 229, 238, 243, 276, 312, 332, 351, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "bias_desc": [139, 210, 211, 238, 243, 254, 256, 260, 264, 276, 322, 323, 367, 380, 382, 396, 402, 414, 416, 424, 430, 432, 434, 436, 442, 444, 446, 476, 491, 493], "dst_layer_desc": [139, 217, 218, 238, 243, 276, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "dst_iter_desc": [139, 204, 229, 238, 243, 276, 312, 351, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "a_t": [139, 218], "h_t": 139, "lstm_forward": [139, 217, 218, 229, 238, 276, 302, 332, 333, 351, 367, 442, 462], "lstm_backward": [139, 238, 276, 302, 367, 462], "lstm_pd": [139, 229, 351], "src_iter_h_desc": 139, "src_iter_c_desc": [139, 229, 238, 243, 276, 351, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "dst_iter_h_desc": 139, "dst_iter_c_desc": [139, 229, 238, 243, 276, 351, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "i_t": 139, "w_i": 139, "u_i": 139, "b_i": 139, "f_t": 139, "w_f": 139, "u_f": 139, "b_f": 139, "c_t": [139, 150, 151], "u_": 139, "o_t": 139, "w_o": 139, "u_o": 139, "b_o": 139, "weightslay": 139, "weightsit": 139, "srciterc": 139, "dstiterc": 139, "weights_peephole_desc": [139, 243, 276, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "p_i": 139, "p_f": 139, "p_o": 139, "p_": 139, "weights_peephol": 139, "desciptor": 139, "weights_projection_desc": [139, 243, 276, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "weights_project": 139, "gru_forward": [139, 276, 302, 414, 462], "gru_backward": [139, 276, 302, 462], "gru_pd": 139, "u_t": 139, "w_u": 139, "u_u": 139, "b_u": 139, "r_t": [139, 150, 151], "w_r": 139, "u_r": 139, "b_r": 139, "lbr_gru_forward": [139, 276, 302, 434, 462], "lbr_gru_backward": [139, 276, 302, 462], "lbr_gru_pd": 139, "augru_forward": [139, 204, 276, 302, 312, 380, 462], "augru_backward": [139, 276, 302, 462], "augru_pd": [139, 204, 312], "attention_desc": [139, 243, 276, 380, 382, 430, 432], "lbr_augru_forward": [139, 276, 302, 430, 462], "lbr_augru_backward": [139, 276, 302, 462], "lbr_augru_pd": 139, "diffweightslay": 139, "diffweightsit": 139, "diffweightspeephol": 139, "diffweightsproject": 139, "properli": [139, 147, 271], "diff_weights_overwrit": [139, 193], "dnnl_arg_src_lay": [139, 204, 217, 218, 229, 238, 243, 271, 312, 332, 333, 351, 367], "srclayerattent": 139, "dnnl_arg_src_layer_attent": 139, "dnnl_arg_src_it": [139, 204, 217, 218, 229, 238, 243, 271, 312, 332, 351, 367], "dnnl_arg_src_iter_c": [139, 217, 218, 229, 238, 243, 271, 332, 351, 367], "dnnl_arg_weights_lay": [139, 204, 217, 218, 229, 238, 243, 271, 312, 332, 333, 351, 367], "dnnl_arg_weights_it": [139, 204, 217, 218, 229, 238, 243, 271, 312, 332, 333, 351, 367], "weightspeephol": 139, "dnnl_arg_weights_peephol": [139, 243, 271], "weightsproject": 139, "dnnl_arg_weights_project": [139, 243, 271], "dnnl_arg_dst_lay": [139, 204, 217, 218, 229, 238, 243, 271, 312, 332, 333, 351, 367], "dnnl_arg_dst_it": [139, 204, 217, 218, 229, 238, 243, 271, 312, 332, 351, 367], "dnnl_arg_dst_iter_c": [139, 217, 218, 229, 238, 243, 271, 332, 351, 367], "dnnl_workspac": 139, "diffsrclay": 139, "dnnl_arg_diff_src_lay": [139, 238, 243, 271, 367], "diffsrclayerattent": 139, "dnnl_arg_diff_src_layer_attent": 139, "diffsrcit": 139, "dnnl_arg_diff_src_it": [139, 238, 243, 271, 367], "diffsrciterc": 139, "dnnl_arg_diff_src_iter_c": [139, 238, 243, 271, 367], "dnnl_arg_diff_weights_lay": [139, 238, 243, 271, 367], "dnnl_arg_diff_weights_it": [139, 238, 243, 271, 367], "dnnl_arg_diff_weights_peephol": [139, 243, 271], "dnnl_arg_diff_weights_project": [139, 243, 271], "diffdstlay": 139, "dnnl_arg_diff_dst_lay": [139, 238, 243, 271, 367], "diffdstit": 139, "dnnl_arg_diff_dst_it": [139, 238, 243, 271, 367], "diffdstiterc": 139, "dnnl_arg_diff_dst_iter_c": [139, 238, 243, 271, 367], "With": [139, 145, 374], "dnnl_ldgo": [139, 160], "dnnl_ldigo": [139, 160], "dnnl_ldio": [139, 160], "dnnl_ldgoi": [139, 160], "dnnl_ldoi": [139, 160], "markdown": 139, "thought": 140, "formal": 140, "group_siz": [140, 239, 243, 278, 368, 478, 480], "ug": 140, "nu": 141, "dnnl_abcd16b": [141, 160, 177], "ne": 141, "dnnl_ba": [141, 160, 177, 265], "bigger": [142, 147], "dnnl_threadpool_ifac": [143, 489], "test_thread": 143, "threadpool_t": 143, "threadpool_interop": [143, 243, 283, 285, 302], "threadpool_ifac": [143, 307], "nonblockingthreadpool": 143, "unique_ptr": 143, "tp_": 143, "num_thread": 143, "hardware_concurr": 143, "get_num_thread": [143, 489], "numthread": 143, "get_in_parallel": [143, 489], "currentthreadid": 143, "get_flag": [143, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 489, 491, 493], "asynchron": [143, 337, 341, 355, 374, 489], "parallel_for": [143, 242, 374, 489], "fn": [143, 489], "nthr": [143, 148], "njob": 143, "schedul": 143, "balance211": 143, "new_content_goes_her": 144, "propos": 145, "idea": [145, 147, 330], "spot": 145, "trade": 145, "site": [145, 409], "themselv": [145, 147, 340, 412], "afterward": 145, "incompat": 146, "migrat": [146, 195, 196], "mkldnn": 146, "substr": 146, "renam": 146, "macro": [146, 243], "v1": [146, 216, 219, 330, 334], "mkldnn_memory_desc_t": 146, "md": [146, 147, 213, 241, 325, 340, 356, 372, 448, 450], "mkldnn_block": 146, "exec": [146, 148, 224, 242, 355, 356], "mkldnn_args_src": 146, "dnnl_block": [146, 159, 176, 265, 450], "dnnl_args_src": 146, "mkldnn_dnnl_mangl": 146, "preprocessor": 146, "mkldnn_memory_desc_init_by_tag": 146, "dnnl_memory_desc_init_by_tag": 146, "mkldnn_arch_opt_flag": 146, "dnnl_arch_opt_flag": 146, "mkldnn_build_exampl": 146, "dnnl_build_exampl": 146, "mkldnn_build_for_ci": 146, "dnnl_build_for_ci": 146, "mkldnn_build_test": 146, "dnnl_build_test": 146, "mkldnn_cpu_runtim": 146, "dnnl_cpu_runtim": 146, "mkldnn_enable_concurrent_exec": 146, "dnnl_enable_concurrent_exec": [146, 195, 196], "mkldnn_enable_jit_profil": 146, "dnnl_enable_jit_profil": 146, "mkldnn_gpu_backend": 146, "dnnl_gpu_backend": 146, "mkldnn_gpu_runtim": 146, "dnnl_gpu_runtim": 146, "mkldnn_install_mod": 146, "dnnl_install_mod": 146, "mkldnn_library_typ": 146, "mkldnn_thread": 146, "dnnl_thread": 146, "mkldnn_use_clang_sanit": 146, "dnnl_use_clang_sanit": 146, "mkldnn_verbos": 146, "dnnl_verbos": 146, "mkldnn_werror": 146, "dnnl_werror": 146, "find_packag": 146, "target_link_librari": 146, "project_app": 146, "Or": 146, "inclus": 146, "add_subdirectori": 146, "dnnl_dir": 146, "include_directori": 146, "thing": [146, 340, 355], "recompil": 146, "patch": [146, 277, 494], "analyz": 147, "adjust": [147, 265, 450], "sound": 147, "facilit": 147, "articl": [147, 356], "devot": 147, "multidimension": 147, "interchang": 147, "focu": 147, "phase": [147, 248, 456], "simpler": 147, "chw": 147, "displac": 147, "jump": 147, "plane": 147, "offset_nchw": 147, "adjac": 147, "border": 147, "contrari": [147, 330, 341, 374], "pixel": [147, 223, 340], "bvlc": 147, "caff": 147, "dnnl_format_tag_t": [147, 177, 208, 215, 243, 265, 302, 320, 329, 448], "quit": [147, 219, 223, 334, 340], "offset_nhwc": 147, "hwc": 147, "wc": 147, "bmp": 147, "color": 147, "24bit": 147, "neon": 147, "interest": [147, 300, 340, 355], "outer": [147, 160], "offset_chwn": 147, "hwn": 147, "wn": 147, "dnnl_chwn": [147, 160], "artifici": 147, "disjoint": 147, "trivial": [147, 455], "tip": 147, "stride_n": [147, 223, 340], "stride_c": [147, 223, 340], "stride_h": [147, 223, 340], "stride_w": [147, 223, 340], "dnnl_dims_t": [147, 160, 190, 208, 215, 220, 243, 254, 255, 256, 265, 267, 293, 320, 329, 336, 412, 448], "dnnl_memory_desc_init_by_strid": 147, "dnnl_memory_desc_create_with_strid": [147, 243, 265], "behalf": 147, "great": 147, "fix": 147, "nchw8c": [147, 177], "guess": [147, 330], "offset_nchw8c": 147, "slice": 147, "uppercas": 147, "distinguish": 147, "8c": 147, "co": [147, 204, 205, 206, 207, 213, 214, 218, 222, 223, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 243, 251, 283, 302, 307, 312, 314, 316, 318, 325, 327, 338, 340, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 368, 370, 372], "dnnl_memory_desc_create_with_tag": [147, 160, 208, 215, 220, 243, 265, 320, 329, 336], "dnnl_nchw8c": [147, 160, 177], "ptrdiff_t": 147, "inner_nblk": 147, "inner_idx": [147, 189], "1st": [147, 160, 177, 265], "0st": [147, 265], "3rd": [147, 160], "inner_blk": [147, 189], "q_stride": 147, "q_inner_nblk": 147, "q_inner_idx": 147, "q_inner_blk": 147, "dnnl_memory_desc_queri": [147, 243, 265], "dnnl_query_strid": [147, 189, 190, 265], "dnnl_query_inner_nblk": 147, "dnnl_query_inner_idx": [147, 189, 190, 265], "dnnl_query_inner_blk": [147, 189, 190, 265], "memcmp": 147, "dnnl_max_ndim": [147, 243, 255], "tail": 147, "somehow": 147, "came": 147, "div_up": 147, "price": 147, "neglig": [147, 148, 356], "d0": 147, "dnnl_memory_desc_get_s": [147, 243, 265], "phys_siz": 147, "eltwise_op": [147, 248, 456], "block_siz": 147, "c_pad": 147, "expect_stride_n": 147, "expect_stride_c": 147, "expect_stride_h": 147, "expect_stride_w": 147, "expect_stride_8c": 147, "expect_tru": 147, "get_padded_dim": [147, 450], "get_inner_nblk": [147, 450], "get_inner_idx": [147, 450], "get_inner_blk": [147, 450], "trace": [148, 356], "stdout": [148, 277], "profile_cr": 148, "profile_exec": [148, 356], "debuginfo": 148, "onednn_verbose_timestamp": 148, "rel": 148, "legaci": 148, "dnnl_set_verbos": [148, 243, 277], "face": 148, "insight": 148, "256x256": 148, "25x256": 148, "0091797c30f16250dec7a40f9ee1a8a33bcfd65": 148, "prim_templ": 148, "memory_descriptor": 148, "problem_desc": 148, "exec_tim": 148, "69": 148, "break": 148, "spent": [148, 330], "tune": [148, 356], "led": 148, "dt": [148, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 312, 314, 316, 318, 321, 322, 323, 324, 325, 327, 330, 338, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 456], "breviti": [148, 216, 330], "brg": 148, "src_u8": 148, "f0": [148, 355, 356], "brgemm_matmul": 148, "101": 148, "brgemm_matmul_util": 148, "931": 148, "did": 148, "ic16ih7oc16oh7kh5ph2n": 148, "wip": 148, "2cdd9ee1364b6c5b107aff8738af352a746d0434": 148, "1681823859527": 148, "679932": 148, "abcd16b": [148, 177, 356], "abcd16b16a": [148, 177], "bia_f32": 148, "mb2_ic16oc16_ih7oh7kh5sh1dh0ph2_iw7ow7kw5sw1dw0pw2": 148, "313": 148, "1681823859541": 148, "047119": 148, "00292969": 148, "1681823859567": 148, "496094": 148, "0759277": 148, "612061": 148, "00195312": 148, "902100": 148, "16x16x5x5": 148, "0720215": 148, "996094": 148, "201904": 148, "1681823859568": 148, "535889": 148, "blk": 148, "2x16x7x7": 148, "0432129": 148, "597900": 148, "258057": 148, "868896": 148, "40": [148, 225, 342], "6201": 148, "1681823859610": 148, "262939": 148, "052002": 148, "383057": 148, "189941": 148, "deped": 148, "enviro": 148, "comma": 148, "marker": 148, "millisecond": [148, 209, 356], "unix": 148, "epoch": 148, "cpu2gpu": [148, 221], "gpu2cpu": [148, 221], "tensor_nam": 148, "extra_flag": 148, "unspecifi": [148, 157, 158], "synchron": [148, 265, 341, 355, 374, 448], "exit": [148, 224], "wall": 148, "dnnl_alg_kind_undef": [150, 151], "dnnl_convolution_direct": [150, 151, 208, 215, 254, 320, 329], "0x1": [150, 154, 155, 168, 194], "dnnl_convolution_winograd": [150, 151, 254], "0x2": 150, "dnnl_convolution_auto": [150, 151, 254], "0x3": [150, 155], "dnnl_deconvolution_direct": [150, 151, 256], "0xa": 150, "dnnl_deconvolution_winograd": [150, 151, 256], "0xb": 150, "0x20": [150, 168], "0x100": 150, "0x1ff": 150, "0x2ff": 150, "0x3ff": 150, "dnnl_lrn_across_channel": [150, 151, 208, 215, 263, 320, 329], "0xaff": 150, "dnnl_lrn_within_channel": [150, 151, 263], "0xbff": 150, "dnnl_vanilla_rnn": [150, 151], "0x1fff": 150, "dnnl_vanilla_lstm": [150, 151], "0x2fff": 150, "dnnl_vanilla_gru": [150, 151], "0x3fff": 150, "dnnl_lbr_gru": [150, 151], "0x4fff": 150, "dnnl_vanilla_augru": [150, 151], "0x5fff": 150, "dnnl_lbr_augru": [150, 151], "0x6fff": 150, "dnnl_binary_add": [150, 151, 250], "0x1fff0": 150, "dnnl_binary_mul": [150, 151, 250], "0x1fff1": 150, "dnnl_binary_max": [150, 151, 250], "0x1fff2": 150, "dnnl_binary_min": [150, 151, 250], "0x1fff3": 150, "dnnl_binary_div": [150, 151, 250], "0x1fff4": 150, "dnnl_binary_sub": [150, 151, 250], "0x1fff5": 150, "dnnl_binary_g": [150, 151, 250], "0x1fff6": 150, "dnnl_binary_gt": [150, 151, 250], "0x1fff7": 150, "dnnl_binary_l": [150, 151, 250], "0x1fff8": 150, "dnnl_binary_lt": [150, 151, 250], "0x1fff9": 150, "dnnl_binary_eq": [150, 151, 250], "0x1fffa": 150, "dnnl_binary_n": [150, 151, 250], "0x1fffb": 150, "dnnl_resampling_nearest": [150, 151, 275], "0x2fff0": 150, "dnnl_resampling_linear": [150, 151, 275], "0x2fff1": 150, "dnnl_reduction_max": [150, 151, 273, 469], "dnnl_reduction_min": [150, 151, 273, 469], "dnnl_reduction_sum": [150, 151, 273, 469], "dnnl_reduction_mul": [150, 151, 273, 469], "dnnl_reduction_mean": [150, 151, 273, 469], "dnnl_reduction_norm_lp_max": [150, 151, 273, 469], "dnnl_reduction_norm_lp_sum": [150, 151, 273, 469], "dnnl_reduction_norm_lp_power_p_max": [150, 151, 273, 469], "dnnl_reduction_norm_lp_power_p_sum": [150, 151, 273, 469], "dnnl_softmax_accur": [150, 151, 279], "0x30000": 150, "dnnl_softmax_log": [150, 151, 279], "hyperbol": [150, 151], "tangent": [150, 151], "cumul": [150, 356], "gaussian": 150, "modif": 150, "w_c": [150, 151], "x_t": [150, 151], "c_x": [150, 151], "u_c": [150, 151], "c_h": [150, 151], "bias": [150, 238, 367], "augru": [150, 151, 276, 311, 313, 379, 380, 381, 382, 429, 430, 431, 432, 476], "pth": 150, "deconvolution_direct": [151, 400, 402], "deconvolution_winograd": [151, 400, 402], "eltwise_elu": 151, "eltwise_squar": 151, "eltwise_ab": 151, "eltwise_sqrt": 151, "eltwise_swish": 151, "eltwise_soft_relu": 151, "eltwise_mish": 151, "eltwise_logist": [151, 491, 493], "eltwise_exp": 151, "eltwise_gelu_tanh": 151, "eltwise_gelu_erf": 151, "eltwise_log": 151, "eltwise_clip": 151, "eltwise_clip_v2": 151, "eltwise_pow": 151, "eltwise_round": 151, "eltwise_hardswish": 151, "eltwise_hardsigmoid": 151, "eltwise_relu_use_dst_for_bwd": 151, "eltwise_tanh_use_dst_for_bwd": 151, "eltwise_elu_use_dst_for_bwd": 151, "eltwise_sqrt_use_dst_for_bwd": 151, "eltwise_logistic_use_dst_for_bwd": 151, "eltwise_exp_use_dst_for_bwd": 151, "eltwise_clip_v2_use_dst_for_bwd": 151, "lrn_across_channel": [151, 209, 211, 212, 228, 323, 324, 349, 438, 440], "lrn_within_channel": [151, 438, 440], "pooling_avg_include_pad": [151, 452, 454], "pooling_avg_exclude_pad": [151, 452, 454], "vanilla_rnn": 151, "vanilla_lstm": 151, "vanilla_gru": 151, "lbr_gru": 151, "vanilla_augru": 151, "lbr_augru": 151, "binary_mul": [151, 206, 207, 316, 318], "binary_max": 151, "binary_min": 151, "binary_div": [151, 207, 318], "binary_sub": [151, 207, 318], "binary_g": 151, "binary_gt": 151, "binary_l": 151, "binary_lt": 151, "binary_eq": 151, "binary_n": 151, "resampling_nearest": [151, 473, 475], "resampling_linear": [151, 237, 365, 473, 475], "reduction_max": 151, "reduction_min": 151, "reduction_sum": [151, 235, 361], "reduction_mul": 151, "reduction_mean": 151, "reduction_norm_lp_max": 151, "reduction_norm_lp_sum": 151, "reduction_norm_lp_power_p_max": 151, "reduction_norm_lp_power_p_sum": 151, "softmax_accur": [151, 240, 370, 482, 484], "softmax_log": [151, 482, 484], "rectifi": [151, 257, 341, 374], "linar": 151, "vanilla": [151, 276, 490, 491, 492, 493], "lrb": 151, "norm_lp_max": 151, "norm_lp_sum": 151, "norm_lp_power_p_max": 151, "norm_lp_power_p_sum": 151, "isa_default": [152, 277], "dnnl_cpu_isa_default": [152, 155, 277], "dnnl_cpu_isa_sse41": [152, 155], "dnnl_cpu_isa_avx": [152, 155], "dnnl_cpu_isa_avx2": [152, 155], "dnnl_cpu_isa_avx2_vnni": [152, 155], "dnnl_cpu_isa_avx2_vnni_2": [152, 155], "dnnl_cpu_isa_avx512_cor": [152, 155], "dnnl_cpu_isa_avx512_core_vnni": [152, 155], "dnnl_cpu_isa_avx512_core_bf16": [152, 155], "dnnl_cpu_isa_avx512_core_fp16": [152, 155], "dnnl_cpu_isa_avx512_core_amx": [152, 155], "dnnl_cpu_isa_avx512_core_amx_fp16": [152, 155], "dnnl_cpu_isa_no_hint": [153, 154, 277], "dnnl_cpu_isa_prefer_ymm": [153, 154], "exclus": [153, 154, 265, 448], "0x0": [154, 155, 194], "0x7": 155, "0xf": 155, "0x1f": 155, "0x27": 155, "0x67": 155, "0xe7": 155, "0x1ef": 155, "0xfef": 155, "0x1fef": 155, "dnnl_common_typ": [156, 158, 162, 199, 201, 494], "dnnl_data_type_undef": [156, 164, 175], "dnnl_f16": [156, 164, 175], "dnnl_bf16": [156, 164, 175], "dnnl_s32": [156, 164, 175], "dnnl_u8": [156, 164, 175], "dnnl_f64": [156, 175], "dnnl_boolean": [156, 164], "dnnl_data_type_max": 156, "0x7fff": [156, 159, 184, 190], "dnnl_common": [157, 161, 200, 408, 409, 417, 486], "dnnl_any_engin": [157, 158], "dnnl_cpu": [157, 158, 215, 220, 329, 336], "dnnl_gpu": [157, 158, 220, 336], "dnnl_format_kind_undef": [159, 176, 254, 256, 260, 262, 264], "dnnl_format_kind_ani": [159, 176, 250, 254, 256, 260, 265, 268, 273, 275, 276], "dnnl_format_kind_spars": [159, 176], "dnnl_format_kind_max": 159, "dnnl_format_tag_undef": [160, 177], "dnnl_abcdef": [160, 177], "dnnl_abcdefg": [160, 177], "dnnl_abcdefgh": [160, 177], "dnnl_abcdefghi": [160, 177], "dnnl_abcdefghij": [160, 177], "dnnl_abcdefghijk": [160, 177], "dnnl_abcdefghijkl": [160, 177], "dnnl_bca": [160, 177], "dnnl_cab": [160, 177], "dnnl_cba": [160, 177], "dnnl_abdc": [160, 177], "dnnl_acbd": [160, 177], "dnnl_adbc": [160, 177], "dnnl_adcb": [160, 177], "dnnl_bacd": [160, 177], "dnnl_bcda": [160, 177], "dnnl_cdab": [160, 177], "dnnl_cdba": [160, 177], "dnnl_dcab": [160, 177], "dnnl_abdec": [160, 177], "dnnl_adecb": [160, 177], "dnnl_bcdea": [160, 177], "dnnl_cdeab": [160, 177], "dnnl_cdeba": [160, 177], "dnnl_decab": [160, 177], "dnnl_abcdf": [160, 177], "dnnl_abdefc": [160, 177], "dnnl_abdfc": [160, 177], "dnnl_acbdef": [160, 177], "dnnl_adefcb": [160, 177], "dnnl_defcab": [160, 177], "dnnl_abcdegf": [160, 177], "dnnl_abcdefhg": [160, 177], "dnnl_abcdefgih": [160, 177], "dnnl_abcdefghji": [160, 177], "dnnl_abcdefghikj": [160, 177], "dnnl_abcdefghijlk": [160, 177], "dnnl_abc16a": [160, 177], "dnnl_abc16a16b": [160, 177], "dnnl_abc32a32b": [160, 177], "dnnl_abc4a4b": [160, 177], "dnnl_abc16b": [160, 177], "dnnl_abc16b16a": [160, 177], "dnnl_abc4a": [160, 177], "dnnl_abc32b": [160, 177], "dnnl_abc4b": [160, 177], "dnnl_abc4b16a4b": [160, 177], "dnnl_abc2b8a4b": [160, 177], "dnnl_abc16b16a4b": [160, 177], "dnnl_abc16b16a2b": [160, 177], "dnnl_abc4b4a": [160, 177], "dnnl_abc8a16b2a": [160, 177], "dnnl_abc8a8b": [160, 177], "dnnl_abc8a4b": [160, 177], "dnnl_abc8b": [160, 177], "dnnl_abc8b16a2b": [160, 177], "dnnl_bac8a16b2a": [160, 177], "dnnl_abc8b8a": [160, 177], "dnnl_abcd16a": [160, 177], "dnnl_abcd8a": [160, 177], "dnnl_abcd16a16b": [160, 177], "dnnl_abcd32a": [160, 177], "dnnl_abcd32a32b": [160, 177], "dnnl_abcd16b16a": [160, 177], "dnnl_abcd16b16c": [160, 177], "dnnl_abcd16c16b": [160, 177], "dnnl_abcd4a": [160, 177], "dnnl_abcd32b": [160, 177], "dnnl_abcd4b": [160, 177], "dnnl_abcd4b16a4b": [160, 177], "dnnl_abcd16b16a4b": [160, 177], "dnnl_abcd16b16a2b": [160, 177], "dnnl_abcd4b4a": [160, 177], "dnnl_abcd4a4b": [160, 177], "dnnl_abcd2c4b2c": [160, 177], "dnnl_abcd4b8c2b": [160, 177], "dnnl_abcd4c16b4c": [160, 177], "dnnl_abcd2c8b4c": [160, 177], "dnnl_abcd16c16b4c": [160, 177], "dnnl_abcd16c16b2c": [160, 177], "dnnl_abcd4c4b": [160, 177], "dnnl_abcd4b4c": [160, 177], "dnnl_abcd8a16b2a": [160, 177], "dnnl_abcd2b8a4b": [160, 177], "dnnl_abcd8a8b": [160, 177], "dnnl_abcd8a4b": [160, 177], "dnnl_abcd8b": [160, 177], "dnnl_abcd4c8b2c": [160, 177], "dnnl_abcd8b16a2b": [160, 177], "dnnl_abcd8b16c2b": [160, 177], "dnnl_bacd8a16b2a": [160, 177], "dnnl_abcd8b8a": [160, 177], "dnnl_abcd8b8c": [160, 177], "dnnl_abcd8b4c": [160, 177], "dnnl_abcd8c16b2c": [160, 177], "dnnl_abcde8a16b2a": [160, 177], "dnnl_acbd8b16c2b": [160, 177], "dnnl_abcd8c8b": [160, 177], "dnnl_abcde16a": [160, 177], "dnnl_abcde32a": [160, 177], "dnnl_abcde16a16b": [160, 177], "dnnl_bacde8a16b2a": [160, 177], "dnnl_abcd2b4c2b": [160, 177], "dnnl_abcde4b16a4b": [160, 177], "dnnl_abcde2b8a4b": [160, 177], "dnnl_abcde16b": [160, 177], "dnnl_abcde16b16a": [160, 177], "dnnl_abcde16b16c": [160, 177], "dnnl_abcde16c16b": [160, 177], "dnnl_abcde2c8b4c": [160, 177], "dnnl_abcde4a": [160, 177], "dnnl_abcde32b": [160, 177], "dnnl_abcde4b": [160, 177], "dnnl_abcde4b4a": [160, 177], "dnnl_abcde4a4b": [160, 177], "dnnl_abcde4b4c": [160, 177], "dnnl_abcde2c4b2c": [160, 177], "dnnl_abcde4b8c2b": [160, 177], "dnnl_abcde4c16b4c": [160, 177], "dnnl_abcde16c16b4c": [160, 177], "dnnl_abcde16c16b2c": [160, 177], "dnnl_abcde4c4b": [160, 177], "dnnl_abcde8a": [160, 177], "dnnl_abcde8a8b": [160, 177], "dnnl_abcde8a4b": [160, 177], "dnnl_bacde16b16a": [160, 177], "dnnl_abcde8b": [160, 177], "dnnl_abcde8b16a2b": [160, 177], "dnnl_abcde8b16c2b": [160, 177], "dnnl_abcde4c8b2c": [160, 177], "dnnl_acbde8b16c2b": [160, 177], "dnnl_abcde8b8a": [160, 177], "dnnl_abcde32a32b": [160, 177], "dnnl_abcde8b8c": [160, 177], "dnnl_abcde8b4c": [160, 177], "dnnl_abc4a8b8a4b": [160, 177], "dnnl_abcd4a8b8a4b": [160, 177], "dnnl_abcde4a8b8a4b": [160, 177], "dnnl_bac4b8a8b4a": [160, 177], "dnnl_bacd4b8a8b4a": [160, 177], "dnnl_bacde4b8a8b4a": [160, 177], "dnnl_abcd2a8b8a2b": [160, 177], "dnnl_abcd4b8c8b4c": [160, 177], "dnnl_abcde4b8c8b4c": [160, 177], "dnnl_abcde2b8c8b2c": [160, 177], "dnnl_abcde8c16b2c": [160, 177], "dnnl_abcde8c8b": [160, 177], "dnnl_abcde2b4c2b": [160, 177], "dnnl_abcdef16b": [160, 177], "dnnl_abcdef16b16c": [160, 177], "dnnl_abcdef16c16b": [160, 177], "dnnl_abcdef4c16b4c": [160, 177], "dnnl_abcdef2c8b4c": [160, 177], "dnnl_abcdef4c8b2c": [160, 177], "dnnl_abcdef2b4c2b": [160, 177], "dnnl_abcdef4b": [160, 177], "dnnl_abcdef4c4b": [160, 177], "dnnl_abcdef4b4c": [160, 177], "dnnl_abcdef2c4b2c": [160, 177], "dnnl_abcdef4b8c2b": [160, 177], "dnnl_abcdef8b8c": [160, 177], "dnnl_abcdef8b4c": [160, 177], "dnnl_abcdef8c16b2c": [160, 177], "dnnl_abcdef4b8c8b4c": [160, 177], "dnnl_abcdef8b16c2b": [160, 177], "dnnl_acbdef8b16c2b": [160, 177], "dnnl_abcdef8c8b": [160, 177], "dnnl_abdc16b": [160, 177], "dnnl_abdc16b2c": [160, 177], "dnnl_abdc16b4c": [160, 177], "dnnl_abdc4b": [160, 177], "dnnl_abdc8b": [160, 177], "dnnl_abdec16b": [160, 177], "dnnl_abdec16b2c": [160, 177], "dnnl_abdec16b4c": [160, 177], "dnnl_abdec32b": [160, 177], "dnnl_abdec4b": [160, 177], "dnnl_abdec8b": [160, 177], "dnnl_abdefc16b": [160, 177], "dnnl_abdefc16b2c": [160, 177], "dnnl_acbdef16c16b": [160, 177], "dnnl_abdefc4b": [160, 177], "dnnl_abdefc8b": [160, 177], "dnnl_abcdef16a": [160, 177], "dnnl_abcdef32a": [160, 177], "dnnl_abedc16b": [160, 177], "dnnl_acb16a": [160, 177], "dnnl_acb16a2b": [160, 177], "dnnl_acb16a4b": [160, 177], "dnnl_acb4a": [160, 177], "dnnl_acb8a": [160, 177], "dnnl_acbd16b16c": [160, 177], "dnnl_acbd16c16b": [160, 177], "dnnl_acbde16b16c": [160, 177], "dnnl_acbde16c16b": [160, 177], "dnnl_acdb16a": [160, 177], "dnnl_acdb16a2b": [160, 177], "dnnl_acdb16a4b": [160, 177], "dnnl_acdb32a": [160, 177], "dnnl_acdb4a": [160, 177], "dnnl_acdb8a": [160, 177], "dnnl_acdeb16a": [160, 177], "dnnl_acdeb16a2b": [160, 177], "dnnl_acdeb4a": [160, 177], "dnnl_acdeb8a": [160, 177], "dnnl_adcb16a": [160, 177], "dnnl_bac16a16b": [160, 177], "dnnl_bac16b16a": [160, 177], "dnnl_bacd16a16b": [160, 177], "dnnl_bacd16b16a": [160, 177], "dnnl_acbd4c8b8c4b": [160, 177], "dnnl_acbde4c8b8c4b": [160, 177], "dnnl_acbdef4c8b8c4b": [160, 177], "dnnl_bacde16a16b": [160, 177], "dnnl_acbdef16b16c": [160, 177], "dnnl_abc16b32a": [160, 177], "dnnl_abc16b64a": [160, 177], "dnnl_abc4b32a4b": [160, 177], "dnnl_abc4b64a4b": [160, 177], "dnnl_abc8b32a2b": [160, 177], "dnnl_abc8b64a2b": [160, 177], "dnnl_ab16b16a": [160, 177], "dnnl_ab16b32a": [160, 177], "dnnl_ab16b64a": [160, 177], "dnnl_ab8b16a2b": [160, 177], "dnnl_ab8b32a2b": [160, 177], "dnnl_ab8b64a2b": [160, 177], "dnnl_ab4b16a4b": [160, 177], "dnnl_ab4b32a4b": [160, 177], "dnnl_ab4b64a4b": [160, 177], "dnnl_ab16b16a4b": [160, 177], "dnnl_abcd16b32a": [160, 177], "dnnl_abcd16b64a": [160, 177], "dnnl_abcd4b32a4b": [160, 177], "dnnl_abcd4b64a4b": [160, 177], "dnnl_abcd8b32a2b": [160, 177], "dnnl_abcd8b64a2b": [160, 177], "dnnl_abcde4b32a4b": [160, 177], "dnnl_abcde4b64a4b": [160, 177], "dnnl_abcde16b16a4b": [160, 177], "dnnl_abcde16b16a2b": [160, 177], "dnnl_abcde16b32a": [160, 177], "dnnl_abcde16b64a": [160, 177], "dnnl_abcde8b32a2b": [160, 177], "dnnl_abcde8b64a2b": [160, 177], "dnnl_abcdef16c16b4c": [160, 177], "dnnl_abcdef16c16b2c": [160, 177], "dnnl_ab32a32b8a4b": [160, 177], "dnnl_ab8a4b": [160, 177], "dnnl_ab32a32b8a2b": [160, 177], "dnnl_ab8a2b": [160, 177], "dnnl_abdc32d": [160, 177], "dnnl_abdc32d4c": [160, 177], "dnnl_abdec32": [160, 177], "dnnl_abdec32e2c": [160, 177], "dnnl_abdec32e4c": [160, 177], "dnnl_abdefc16b4c": [160, 177], "dnnl_acdeb16a4b": [160, 177], "dnnl_abcd16a16b2a": [160, 177], "dnnl_abc16a16b2a": [160, 177], "dnnl_abcd16b16c2b": [160, 177], "dnnl_abcde16b16c2b": [160, 177], "dnnl_acb32a": [160, 177], "dnnl_acb32a2b": [160, 177], "dnnl_acb32a4b": [160, 177], "dnnl_acb48a": [160, 177], "dnnl_acb48a2b": [160, 177], "dnnl_acb48a4b": [160, 177], "dnnl_acb64a": [160, 177], "dnnl_acb64a2b": [160, 177], "dnnl_acb64a4b": [160, 177], "dnnl_cba2b": [160, 177], "dnnl_cba4b": [160, 177], "dnnl_abdc32b": [160, 177], "dnnl_abdc32b2c": [160, 177], "dnnl_abdc32b4c": [160, 177], "dnnl_abdc48b": [160, 177], "dnnl_abdc48b2c": [160, 177], "dnnl_abdc48b4c": [160, 177], "dnnl_abdc64b": [160, 177], "dnnl_abdc64b2c": [160, 177], "dnnl_abdc64b4c": [160, 177], "dnnl_adcb2c": [160, 177], "dnnl_adcb4c": [160, 177], "dnnl_acdb32a2b": [160, 177], "dnnl_acdb32a4b": [160, 177], "dnnl_acdb48a": [160, 177], "dnnl_acdb48a2b": [160, 177], "dnnl_acdb48a4b": [160, 177], "dnnl_acdb64a": [160, 177], "dnnl_acdb64a2b": [160, 177], "dnnl_acdb64a4b": [160, 177], "dnnl_cdba2b": [160, 177], "dnnl_cdba4b": [160, 177], "dnnl_abdec32b2c": [160, 177], "dnnl_abdec32b4c": [160, 177], "dnnl_abdec48b": [160, 177], "dnnl_abdec48b2c": [160, 177], "dnnl_abdec48b4c": [160, 177], "dnnl_abdec64b": [160, 177], "dnnl_abdec64b2c": [160, 177], "dnnl_abdec64b4c": [160, 177], "dnnl_adecb2c": [160, 177], "dnnl_adecb4c": [160, 177], "dnnl_acdeb32a": [160, 177], "dnnl_acdeb32a2b": [160, 177], "dnnl_acdeb32a4b": [160, 177], "dnnl_acdeb48a": [160, 177], "dnnl_acdeb48a2b": [160, 177], "dnnl_acdeb48a4b": [160, 177], "dnnl_acdeb64a": [160, 177], "dnnl_acdeb64a2b": [160, 177], "dnnl_acdeb64a4b": [160, 177], "dnnl_cdeba2b": [160, 177], "dnnl_cdeba4b": [160, 177], "dnnl_abdefc32b": [160, 177], "dnnl_abdefc32b2c": [160, 177], "dnnl_abdefc32b4c": [160, 177], "dnnl_abdefc48b": [160, 177], "dnnl_abdefc48b2c": [160, 177], "dnnl_abdefc48b4c": [160, 177], "dnnl_abdefc64b": [160, 177], "dnnl_abdefc64b2c": [160, 177], "dnnl_abdefc64b4c": [160, 177], "dnnl_adefcb2c": [160, 177], "dnnl_adefcb4c": [160, 177], "dnnl_ab16b32a4b": [160, 177], "dnnl_ab16b48a4b": [160, 177], "dnnl_ab16b64a4b": [160, 177], "dnnl_ab16b16a2b": [160, 177], "dnnl_ab16b32a2b": [160, 177], "dnnl_ab16b48a2b": [160, 177], "dnnl_ab16b64a2b": [160, 177], "dnnl_abc16b32a4b": [160, 177], "dnnl_abc16b48a4b": [160, 177], "dnnl_abc16b64a4b": [160, 177], "dnnl_abc16b32a2b": [160, 177], "dnnl_abc16b48a2b": [160, 177], "dnnl_abc16b64a2b": [160, 177], "dnnl_abcd16b32a4b": [160, 177], "dnnl_abcd16b48a4b": [160, 177], "dnnl_abcd16b64a4b": [160, 177], "dnnl_abcd16b32a2b": [160, 177], "dnnl_abcd16b48a2b": [160, 177], "dnnl_abcd16b64a2b": [160, 177], "dnnl_abcde16b32a4b": [160, 177], "dnnl_abcde16b48a4b": [160, 177], "dnnl_abcde16b64a4b": [160, 177], "dnnl_abcde16b32a2b": [160, 177], "dnnl_abcde16b48a2b": [160, 177], "dnnl_abcde16b64a2b": [160, 177], "dnnl_abc32a16b": [160, 177], "dnnl_abcd32a16b": [160, 177], "dnnl_abcde32a16b": [160, 177], "dnnl_ab48a16b": [160, 177], "dnnl_ab48a32b": [160, 177], "dnnl_abc40a16b": [160, 177], "dnnl_abc40a32b": [160, 177], "dnnl_abc48b16c": [160, 177], "dnnl_abc48b32c": [160, 177], "dnnl_abcd40a16b": [160, 177], "dnnl_abcd40a32b": [160, 177], "dnnl_abcd32c": [160, 177], "dnnl_abdce32c": [160, 177], "dnnl_abdce32c2": [160, 177], "dnnl_ba16a16b2a": [160, 177], "dnnl_ba16a32b2a": [160, 177], "dnnl_ba16a48b2a": [160, 177], "dnnl_ba16a64b2a": [160, 177], "dnnl_ba16a16b4a": [160, 177], "dnnl_ba16a32b4a": [160, 177], "dnnl_ba16a48b4a": [160, 177], "dnnl_ba16a64b4a": [160, 177], "dnnl_abcd8a2b": [160, 177], "dnnl_abdec16c16b2c": [160, 177], "dnnl_abdec16c16b4c": [160, 177], "dnnl_abdefc16c16b2c": [160, 177], "dnnl_acb16b16a2b": [160, 177], "dnnl_acb16b16a4b": [160, 177], "dnnl_acdb16b16a2b": [160, 177], "dnnl_acdb16b16a4b": [160, 177], "dnnl_acdeb16b16a2b": [160, 177], "dnnl_abdefc16c16b4c": [160, 177], "dnnl_acdeb16b16a4b": [160, 177], "dnnl_acb16b32a2b": [160, 177], "dnnl_acb16b32a4b": [160, 177], "dnnl_acb16b48a2b": [160, 177], "dnnl_acb16b48a4b": [160, 177], "dnnl_acb16b64a2b": [160, 177], "dnnl_acb16b64a4b": [160, 177], "dnnl_abdc16c16b2c": [160, 177], "dnnl_abdc16c16b4c": [160, 177], "dnnl_abdc16c32b2c": [160, 177], "dnnl_abdc16c32b4c": [160, 177], "dnnl_abdc16c48b2c": [160, 177], "dnnl_abdc16c48b4c": [160, 177], "dnnl_abdc16c64b2c": [160, 177], "dnnl_abdc16c64b4c": [160, 177], "dnnl_acdb16b32a2b": [160, 177], "dnnl_acdb16b32a4b": [160, 177], "dnnl_acdb16b48a2b": [160, 177], "dnnl_acdb16b48a4b": [160, 177], "dnnl_acdb16b64a2b": [160, 177], "dnnl_acdb16b64a4b": [160, 177], "dnnl_abdec16c32b2c": [160, 177], "dnnl_abdec16c32b4c": [160, 177], "dnnl_abdec16c48b2c": [160, 177], "dnnl_abdec16c48b4c": [160, 177], "dnnl_abdec16c64b2c": [160, 177], "dnnl_abdec16c64b4c": [160, 177], "dnnl_acdeb16b32a2b": [160, 177], "dnnl_acdeb16b32a4b": [160, 177], "dnnl_acdeb16b48a2b": [160, 177], "dnnl_acdeb16b48a4b": [160, 177], "dnnl_acdeb16b64a2b": [160, 177], "dnnl_acdeb16b64a4b": [160, 177], "dnnl_abdefc16c32b2c": [160, 177], "dnnl_abdefc16c32b4c": [160, 177], "dnnl_abdefc16c48b2c": [160, 177], "dnnl_abdefc16c48b4c": [160, 177], "dnnl_abdefc16c64b2c": [160, 177], "dnnl_abdefc16c64b4c": [160, 177], "dnnl_decba16a": [160, 177], "dnnl_abc4a2b": [160, 177], "dnnl_abc8a2b": [160, 177], "dnnl_abcd8b2c": [160, 177], "dnnl_abcde4a2b": [160, 177], "dnnl_abcde8a2b": [160, 177], "dnnl_abcde40a16b": [160, 177], "dnnl_abcde40a32b": [160, 177], "dnnl_abcde8b2c": [160, 177], "dnnl_abcde4a8b8a2b": [160, 177], "dnnl_abcd4a8b8a2b": [160, 177], "dnnl_abc4a8b8a2b": [160, 177], "dnnl_abcdef4b8c8b2c": [160, 177], "dnnl_abcde4b8c8b2c": [160, 177], "dnnl_abcd4b8c8b2c": [160, 177], "dnnl_bacde4b8a8b2a": [160, 177], "dnnl_bacd4b8a8b2a": [160, 177], "dnnl_bac4b8a8b2a": [160, 177], "dnnl_acbdef4c8b8c2b": [160, 177], "dnnl_acbde4c8b8c2b": [160, 177], "dnnl_acbd4c8b8c2b": [160, 177], "dnnl_abcdef8b2c": [160, 177], "dnnl_ab32a16b": [160, 177], "dnnl_ab32a32b": [160, 177], "dnnl_ba4b8a8b2a": [160, 177], "dnnl_ba4b8a8b4a": [160, 177], "dnnl_abc32b16c": [160, 177], "dnnl_abc32b32c": [160, 177], "dnnl_acb4c8b8c2b": [160, 177], "dnnl_acb4c8b8c4b": [160, 177], "dnnl_abcd4a2b": [160, 177], "dnnl_abc2b8a16b4a": [160, 177], "dnnl_abcd2b8a16b4a": [160, 177], "dnnl_abcde2b8a16b4a": [160, 177], "dnnl_abc2a8b16a4b": [160, 177], "dnnl_abc2a8b16a2b": [160, 177], "dnnl_abc2b32a8b": [160, 177], "dnnl_abcd2a8b16a4b": [160, 177], "dnnl_abcd2a8b16a2b": [160, 177], "dnnl_acbd2c8b16c2b": [160, 177], "dnnl_abcd2b32a8b": [160, 177], "dnnl_abcd2c8b16c2b": [160, 177], "dnnl_abcde2a8b16a4b": [160, 177], "dnnl_abcde2a8b16a2b": [160, 177], "dnnl_acbde2c8b16c2b": [160, 177], "dnnl_abcde2b32a8b": [160, 177], "dnnl_abc2b8c16b2c": [160, 177], "dnnl_abcd2b8c16b2c": [160, 177], "dnnl_abcde2b8c16b2c": [160, 177], "dnnl_abcdef2b8c16b2c": [160, 177], "dnnl_bacde2b8a16b4a": [160, 177], "dnnl_bacd2b8a16b4a": [160, 177], "dnnl_bac2b8a16b4a": [160, 177], "dnnl_bacde2b8a16b2a": [160, 177], "dnnl_bacd2b8a16b2a": [160, 177], "dnnl_bac2b8a16b2a": [160, 177], "dnnl_abcde2c8b16c2b": [160, 177], "dnnl_abcdef2c8b16c2b": [160, 177], "dnnl_acbdef2c8b16c2b": [160, 177], "dnnl_abcd2b8c16b4c": [160, 177], "dnnl_abcde2b8c16b4c": [160, 177], "dnnl_ba4b8a16b2a": [160, 177], "dnnl_ba4b8a16b4a": [160, 177], "dnnl_acb4c8b16c2b": [160, 177], "dnnl_acb4c8b16c4b": [160, 177], "dnnl_ba16a16b": [160, 177], "dnnl_ba16a32b": [160, 177], "dnnl_ba16a48b": [160, 177], "dnnl_ba16a64b": [160, 177], "dnnl_acb16c2b": [160, 177], "dnnl_acb16c4b": [160, 177], "dnnl_ba16b2a": [160, 177], "dnnl_ba16b4a": [160, 177], "dnnl_abc16b16c": [160, 177], "dnnl_abc16b32c": [160, 177], "dnnl_ab16a16b": [160, 177], "dnnl_ab16a32b": [160, 177], "dnnl_abcde16a16b2a": [160, 177], "dnnl_abcdef16b16c2b": [160, 177], "dnnl_acedb16a": [160, 177], "dnnl_abdfec16b": [160, 177], "dnnl_abdec64e2c": [160, 177], "dnnl_abdec64e4c": [160, 177], "dnnl_acb16b16c": [160, 177], "dnnl_acb16b32c": [160, 177], "dnnl_acb16b48c": [160, 177], "dnnl_acb16b64c": [160, 177], "dnnl_acb16b16c2b": [160, 177], "dnnl_acb16b32c2b": [160, 177], "dnnl_acb16b48c2b": [160, 177], "dnnl_acb16b64c2b": [160, 177], "dnnl_acb16b16c4b": [160, 177], "dnnl_acb16b32c4b": [160, 177], "dnnl_acb16b48c4b": [160, 177], "dnnl_acb16b64c4b": [160, 177], "dnnl_abcd4c": [160, 177], "dnnl_abcde4c": [160, 177], "dnnl_abcdef4c": [160, 177], "dnnl_abcde32c": [160, 177], "dnnl_abcdef32c": [160, 177], "dnnl_abcd16a32b": [160, 177], "dnnl_decba8a": [160, 177], "dnnl_acdefb16b32c2b": [160, 177], "dnnl_acdefb16b32c4b": [160, 177], "dnnl_acdefb16b48c2b": [160, 177], "dnnl_acdefb16b48c4b": [160, 177], "dnnl_acdefb16b64c2b": [160, 177], "dnnl_acdefb16b64c4b": [160, 177], "dnnl_bcdea16a32b2a": [160, 177], "dnnl_bcdea16a32b4a": [160, 177], "dnnl_bcdea16a48b2a": [160, 177], "dnnl_bcdea16a48b4a": [160, 177], "dnnl_bcdea16a64b2a": [160, 177], "dnnl_bcdea16a64b4a": [160, 177], "dnnl_acdefb32c": [160, 177], "dnnl_acdefb32c2b": [160, 177], "dnnl_acdefb32c4b": [160, 177], "dnnl_acdefb48c": [160, 177], "dnnl_acdefb48c2b": [160, 177], "dnnl_acdefb48c4b": [160, 177], "dnnl_acdefb64c": [160, 177], "dnnl_acdefb64c2b": [160, 177], "dnnl_acdefb64c4b": [160, 177], "dnnl_bcdea32b": [160, 177], "dnnl_bcdea32b2a": [160, 177], "dnnl_bcdea32b4a": [160, 177], "dnnl_bcdea48b": [160, 177], "dnnl_bcdea48b2a": [160, 177], "dnnl_bcdea48b4a": [160, 177], "dnnl_bcdea64b": [160, 177], "dnnl_bcdea64b2a": [160, 177], "dnnl_bcdea64b4a": [160, 177], "dnnl_bca32b": [160, 177], "dnnl_bca32b2a": [160, 177], "dnnl_bca32b4a": [160, 177], "dnnl_bca48b": [160, 177], "dnnl_bca48b2a": [160, 177], "dnnl_bca48b4a": [160, 177], "dnnl_bca64b": [160, 177], "dnnl_bca64b2a": [160, 177], "dnnl_bca64b4a": [160, 177], "dnnl_acdb32c": [160, 177], "dnnl_acdb32c2b": [160, 177], "dnnl_acdb32c4b": [160, 177], "dnnl_acdb48c": [160, 177], "dnnl_acdb48c2b": [160, 177], "dnnl_acdb48c4b": [160, 177], "dnnl_acdb64c": [160, 177], "dnnl_acdb64c2b": [160, 177], "dnnl_acdb64c4b": [160, 177], "dnnl_bca16a16b2a": [160, 177], "dnnl_bca16a16b4a": [160, 177], "dnnl_bcda16a16b2a": [160, 177], "dnnl_bcda16a16b4a": [160, 177], "dnnl_bcdea16a16b2a": [160, 177], "dnnl_bcdea16a16b4a": [160, 177], "dnnl_acdb16b16c2b": [160, 177], "dnnl_acdb16b16c4b": [160, 177], "dnnl_acdeb16b16c2b": [160, 177], "dnnl_acdeb16b16c4b": [160, 177], "dnnl_acdefb16b16c2b": [160, 177], "dnnl_acdefb16b16c4b": [160, 177], "dnnl_bca16a32b2a": [160, 177], "dnnl_bca16a32b4a": [160, 177], "dnnl_bca16a48b2a": [160, 177], "dnnl_bca16a48b4a": [160, 177], "dnnl_bca16a64b2a": [160, 177], "dnnl_bca16a64b4a": [160, 177], "dnnl_acdb16b32c2b": [160, 177], "dnnl_acdb16b32c4b": [160, 177], "dnnl_acdb16b48c2b": [160, 177], "dnnl_acdb16b48c4b": [160, 177], "dnnl_acdb16b64c2b": [160, 177], "dnnl_acdb16b64c4b": [160, 177], "dnnl_bcda16a32b2a": [160, 177], "dnnl_bcda16a32b4a": [160, 177], "dnnl_bcda16a48b2a": [160, 177], "dnnl_bcda16a48b4a": [160, 177], "dnnl_bcda16a64b2a": [160, 177], "dnnl_bcda16a64b4a": [160, 177], "dnnl_acdeb16b32c2b": [160, 177], "dnnl_acdeb16b32c4b": [160, 177], "dnnl_acdeb16b48c2b": [160, 177], "dnnl_acdeb16b48c4b": [160, 177], "dnnl_acdeb16b64c2b": [160, 177], "dnnl_acdeb16b64c4b": [160, 177], "dnnl_bca16b": [160, 177], "dnnl_bca16b2a": [160, 177], "dnnl_bca16b4a": [160, 177], "dnnl_bcda16b": [160, 177], "dnnl_bcda16b2a": [160, 177], "dnnl_bcda16b4a": [160, 177], "dnnl_bcdea16b": [160, 177], "dnnl_bcdea16b2a": [160, 177], "dnnl_bcdea16b4a": [160, 177], "dnnl_acdb16c": [160, 177], "dnnl_acdb16c2b": [160, 177], "dnnl_acdb16c4b": [160, 177], "dnnl_acdeb16c": [160, 177], "dnnl_acdeb16c2b": [160, 177], "dnnl_acdeb16c4b": [160, 177], "dnnl_acdefb16c": [160, 177], "dnnl_acdefb16c2b": [160, 177], "dnnl_acdefb16c4b": [160, 177], "dnnl_bcda32b": [160, 177], "dnnl_bcda32b2a": [160, 177], "dnnl_bcda32b4a": [160, 177], "dnnl_bcda48b": [160, 177], "dnnl_bcda48b2a": [160, 177], "dnnl_bcda48b4a": [160, 177], "dnnl_bcda64b": [160, 177], "dnnl_bcda64b2a": [160, 177], "dnnl_bcda64b4a": [160, 177], "dnnl_acdeb32c": [160, 177], "dnnl_acdeb32c2b": [160, 177], "dnnl_acdeb32c4b": [160, 177], "dnnl_acdeb48c": [160, 177], "dnnl_acdeb48c2b": [160, 177], "dnnl_acdeb48c4b": [160, 177], "dnnl_acdeb64c": [160, 177], "dnnl_acdeb64c2b": [160, 177], "dnnl_acdeb64c4b": [160, 177], "dnnl_acb24a": [160, 177], "dnnl_acdb24a": [160, 177], "dnnl_acdeb24a": [160, 177], "dnnl_abdc24b": [160, 177], "dnnl_abdec24b": [160, 177], "dnnl_abdefc24b": [160, 177], "dnnl_abdc16d": [160, 177], "dnnl_abdec16": [160, 177], "dnnl_abdce16c": [160, 177], "dnnl_acb24a2b": [160, 177], "dnnl_acdb24a2b": [160, 177], "dnnl_acdeb24a2b": [160, 177], "dnnl_abdc24b2c": [160, 177], "dnnl_abdec24b2c": [160, 177], "dnnl_abdefc24b2c": [160, 177], "dnnl_acb8a2b": [160, 177], "dnnl_acdb8a2b": [160, 177], "dnnl_acdeb8a2b": [160, 177], "dnnl_abdc8b2c": [160, 177], "dnnl_abdec8b2c": [160, 177], "dnnl_abdefc8b2c": [160, 177], "dnnl_ab8b32a": [160, 177], "dnnl_abc8b32a": [160, 177], "dnnl_abcd8b32a": [160, 177], "dnnl_abcde8b32a": [160, 177], "dnnl_ab8b24a": [160, 177], "dnnl_abc8b24a": [160, 177], "dnnl_abcd8b24a": [160, 177], "dnnl_abcde8b24a": [160, 177], "dnnl_ab8b16a": [160, 177], "dnnl_abc8b16a": [160, 177], "dnnl_abcd8b16a": [160, 177], "dnnl_abcde8b16a": [160, 177], "dnnl_ab8b8a": [160, 177], "dnnl_ab4b8a4b": [160, 177], "dnnl_ab4b24a4b": [160, 177], "dnnl_abc4b8a4b": [160, 177], "dnnl_abc4b24a4b": [160, 177], "dnnl_abcd4b8a4b": [160, 177], "dnnl_abcd4b24a4b": [160, 177], "dnnl_abcde4b8a4b": [160, 177], "dnnl_abcde4b24a4b": [160, 177], "dnnl_ab8b24a2b": [160, 177], "dnnl_abc8b24a2b": [160, 177], "dnnl_abcd8b24a2b": [160, 177], "dnnl_abcde8b24a2b": [160, 177], "dnnl_ab8b8a2b": [160, 177], "dnnl_abc8b8a2b": [160, 177], "dnnl_abcd8b8a2b": [160, 177], "dnnl_abcde8b8a2b": [160, 177], "dnnl_acb24a4b": [160, 177], "dnnl_acdb24a4b": [160, 177], "dnnl_acdeb24a4b": [160, 177], "dnnl_abdc24b4c": [160, 177], "dnnl_abdec24b4c": [160, 177], "dnnl_abdefc24b4c": [160, 177], "dnnl_acb8a4b": [160, 177], "dnnl_acdb8a4b": [160, 177], "dnnl_acdeb8a4b": [160, 177], "dnnl_abdc8b4c": [160, 177], "dnnl_abdec8b4c": [160, 177], "dnnl_abdefc8b4c": [160, 177], "dnnl_bca8b": [160, 177], "dnnl_bca8b2a": [160, 177], "dnnl_bcda8b": [160, 177], "dnnl_bcda8b2a": [160, 177], "dnnl_bcdea8b": [160, 177], "dnnl_bcdea8b2a": [160, 177], "dnnl_acdb8c": [160, 177], "dnnl_acdb8c2b": [160, 177], "dnnl_acdeb8c": [160, 177], "dnnl_acdeb8c2b": [160, 177], "dnnl_acdefb8c": [160, 177], "dnnl_acdefb8c2b": [160, 177], "dnnl_bca24b": [160, 177], "dnnl_bca24b2a": [160, 177], "dnnl_bcda24b": [160, 177], "dnnl_bcda24b2a": [160, 177], "dnnl_bcdea24b": [160, 177], "dnnl_bcdea24b2a": [160, 177], "dnnl_acdb24c": [160, 177], "dnnl_acdb24c2b": [160, 177], "dnnl_acdeb24c": [160, 177], "dnnl_acdeb24c2b": [160, 177], "dnnl_acdefb24c": [160, 177], "dnnl_acdefb24c2b": [160, 177], "dnnl_bca8b4a": [160, 177], "dnnl_bcda8b4a": [160, 177], "dnnl_bcdea8b4a": [160, 177], "dnnl_acdb8c4b": [160, 177], "dnnl_acdeb8c4b": [160, 177], "dnnl_acdefb8c4b": [160, 177], "dnnl_bca24b4a": [160, 177], "dnnl_bcda24b4a": [160, 177], "dnnl_bcdea24b4a": [160, 177], "dnnl_acdb24c4b": [160, 177], "dnnl_acdeb24c4b": [160, 177], "dnnl_acdefb24c4b": [160, 177], "dnnl_ab16b48a": [160, 177], "dnnl_abc16b48a": [160, 177], "dnnl_abcd16b48a": [160, 177], "dnnl_abcde16b48a": [160, 177], "dnnl_format_tag_last": [160, 177], "dnnl_cn": 160, "dnnl_owi": 160, "dnnl_woi": [160, 177], "dnnl_iwo": 160, "dnnl_hwoi": [160, 177], "dnnl_ohwi": 160, "dnnl_ihwo": 160, "dnnl_iohw": 160, "dnnl_iodhw": 160, "dnnl_dhwoi": [160, 177], "dnnl_odhwi": 160, "dnnl_idhwo": 160, "dnnl_goiw": 160, "dnnl_gowi": 160, "dnnl_wigo": 160, "dnnl_goihw": 160, "dnnl_gohwi": 160, "dnnl_hwigo": 160, "dnnl_giohw": 160, "dnnl_goidhw": 160, "dnnl_godhwi": 160, "dnnl_giodhw": 160, "dnnl_dhwigo": 160, "dnnl_ldoi16o": 160, "dnnl_ldoi32o": 160, "dnnl_ldoi32o4i": 160, "dnnl_ldio32i": [160, 177], "dnnl_ldgoi16o": 160, "dnnl_ldgoi32o": 160, "dnnl_ldgoi32o2i": 160, "dnnl_ldgoi32o4i": 160, "dnnl_ldgoi64o2i": 160, "dnnl_ldgoi64o4i": 160, "dnnl_ldgio16i": [160, 177], "dnnl_ldgio32i": [160, 177], "dnnl_ldgio32i2o": [160, 177], "dnnl_ncdhw32c": [160, 177], "dnnl_ncdhw16c": [160, 177], "dnnl_ncdhw4c": [160, 177], "dnnl_nchw32c": [160, 177], "dnnl_nchw4c": [160, 177], "dnnl_ncw32c": [160, 177], "dnnl_ncw16c": [160, 177], "dnnl_ncw4c": [160, 177], "dnnl_ncw8c": [160, 177], "dnnl_ncw16n16c": [160, 177], "dnnl_ncdhw16n16c": [160, 177], "dnnl_nchw16n16c": [160, 177], "dnnl_ncw32n16c": [160, 177], "dnnl_nchw32n16c": [160, 177], "dnnl_nchw16n32c": [160, 177], "dnnl_ncdhw32n16c": [160, 177], "dnnl_ncw32n32c": [160, 177], "dnnl_nchw32n32c": [160, 177], "dnnl_ncdhw32n32c": [160, 177], "dnnl_oi16i16o": [160, 177], "dnnl_oi16i32o": [160, 177], "dnnl_oi16i48o": [160, 177], "dnnl_oi16i64o": [160, 177], "dnnl_oi8i8o2i": [160, 177], "dnnl_oi8i16o2i": [160, 177], "dnnl_oi8i24o2i": [160, 177], "dnnl_oi8i32o2i": [160, 177], "dnnl_oi8i64o2i": [160, 177], "dnnl_oi4i8o4i": [160, 177], "dnnl_oi4i16o4i": [160, 177], "dnnl_oi4i24o4i": [160, 177], "dnnl_oi4i32o4i": [160, 177], "dnnl_oi4i64o4i": [160, 177], "dnnl_oi16i16o4i": [160, 177], "dnnl_oi8i32o": [160, 177], "dnnl_oi8i24o": [160, 177], "dnnl_oi8i16o": [160, 177], "dnnl_oi8i8o": [160, 177], "dnnl_iow16o16i": [160, 177], "dnnl_iow16i16o": [160, 177], "dnnl_oiw16i16o": [160, 177], "dnnl_oiw16i32o": [160, 177], "dnnl_oiw16i48o": [160, 177], "dnnl_oiw16i64o": [160, 177], "dnnl_oiw16o16i": [160, 177], "dnnl_oiw16o": [160, 177], "dnnl_oiw4i8o4i": [160, 177], "dnnl_oiw4i16o4i": [160, 177], "dnnl_oiw4i24o4i": [160, 177], "dnnl_oiw4i32o4i": [160, 177], "dnnl_oiw4i64o4i": [160, 177], "dnnl_oiw2i8o4i": [160, 177], "dnnl_oiw16i16o4i": [160, 177], "dnnl_oiw16i16o2i": [160, 177], "dnnl_oiw16o16i2o": [160, 177], "dnnl_oiw4i4o": [160, 177], "dnnl_oiw4o4i": [160, 177], "dnnl_oiw4o": [160, 177], "dnnl_oiw8i8o2i": [160, 177], "dnnl_oiw8i16o2i": [160, 177], "dnnl_oiw8i24o2i": [160, 177], "dnnl_oiw8i32o2i": [160, 177], "dnnl_oiw8i64o2i": [160, 177], "dnnl_oiw8i8o": [160, 177], "dnnl_oiw8o16i2o": [160, 177], "dnnl_iow8o16i2o": [160, 177], "dnnl_oiw8o8i": [160, 177], "dnnl_oiw8o4i": [160, 177], "dnnl_owi16o": [160, 177], "dnnl_owi16o2i": [160, 177], "dnnl_owi16o4i": [160, 177], "dnnl_iwo8i": [160, 177], "dnnl_iwo8i2o": [160, 177], "dnnl_iwo8i4o": 160, "dnnl_iwo16i": [160, 177], "dnnl_iwo16i2o": [160, 177], "dnnl_iwo16i4o": [160, 177], "dnnl_iwo24i": [160, 177], "dnnl_iwo24i2o": [160, 177], "dnnl_iwo24i4o": 160, "dnnl_owi4o": [160, 177], "dnnl_owi8o": [160, 177], "dnnl_owi8o2i": [160, 177], "dnnl_oiw8i32o": [160, 177], "dnnl_oiw8i24o": [160, 177], "dnnl_oiw8i16o": [160, 177], "dnnl_owi8o4i": [160, 177], "dnnl_iohw16i16o": [160, 177], "dnnl_iohw16o16i": [160, 177], "dnnl_ohwi16o": [160, 177], "dnnl_ohwi16o2i": [160, 177], "dnnl_ohwi16o4i": [160, 177], "dnnl_ihwo8i": [160, 177], "dnnl_ihwo8i2o": [160, 177], "dnnl_ihwo8i4o": 160, "dnnl_ihwo16i": [160, 177], "dnnl_ihwo16i2o": [160, 177], "dnnl_ihwo16i4o": [160, 177], "dnnl_ihwo24i": [160, 177], "dnnl_ihwo24i2o": [160, 177], "dnnl_ihwo24i4o": 160, "dnnl_ohwi24o": [160, 177], "dnnl_ohwi32o": [160, 177], "dnnl_ohwi4o": [160, 177], "dnnl_ohwi8o": [160, 177], "dnnl_ohwi8o2i": [160, 177], "dnnl_ohwi8o4i": [160, 177], "dnnl_oihw16i16o": [160, 177], "dnnl_oihw16i32o": [160, 177], "dnnl_oihw16i48o": [160, 177], "dnnl_oihw16i64o": [160, 177], "dnnl_oihw16o16i": [160, 177], "dnnl_oihw16o": [160, 177], "dnnl_oihw4i8o4i": [160, 177], "dnnl_oihw4i16o4i": [160, 177], "dnnl_oihw4i24o4i": [160, 177], "dnnl_oihw4i32o4i": [160, 177], "dnnl_oihw4i64o4i": [160, 177], "dnnl_oihw16i16o4i": [160, 177], "dnnl_oihw16i16o2i": [160, 177], "dnnl_oihw16o16i2o": [160, 177], "dnnl_oihw4i4o": [160, 177], "dnnl_oihw4o4i": [160, 177], "dnnl_oihw4o": [160, 177], "dnnl_oihw8i8o2i": [160, 177], "dnnl_oihw8i16o2i": [160, 177], "dnnl_oihw8i32o2i": [160, 177], "dnnl_oihw8i24o2i": [160, 177], "dnnl_oihw8i64o2i": [160, 177], "dnnl_oihw8i8o": [160, 177], "dnnl_oihw8o16i2o": [160, 177], "dnnl_oihw2i8o4i": [160, 177], "dnnl_iohw8o16i2o": [160, 177], "dnnl_oihw8o8i": [160, 177], "dnnl_oihw8o4i": [160, 177], "dnnl_owhi16o": [160, 177], "dnnl_oihw8i32o": [160, 177], "dnnl_oihw8i24o": [160, 177], "dnnl_oihw8i16o": [160, 177], "dnnl_odhwi16o": [160, 177], "dnnl_odhwi16o2i": [160, 177], "dnnl_odhwi16o4i": [160, 177], "dnnl_idhwo8i": [160, 177], "dnnl_idhwo8i2o": [160, 177], "dnnl_idhwo8i4o": 160, "dnnl_idhwo16i": [160, 177], "dnnl_idhwo16i2o": [160, 177], "dnnl_idhwo16i4o": [160, 177], "dnnl_idhwo24i": [160, 177], "dnnl_idhwo24i2o": [160, 177], "dnnl_idhwo24i4o": 160, "dnnl_odhwi4o": [160, 177], "dnnl_odhwi8o": [160, 177], "dnnl_odhwi8o2i": [160, 177], "dnnl_odhwi8o4i": [160, 177], "dnnl_odwhi16o": [160, 177], "dnnl_oidhw16i16o": [160, 177], "dnnl_oidhw16i32o": [160, 177], "dnnl_oidhw16i48o": [160, 177], "dnnl_oidhw16i64o": [160, 177], "dnnl_oidhw16o16i": [160, 177], "dnnl_oidhw16o": [160, 177], "dnnl_oidhw4i4o": [160, 177], "dnnl_oidhw4o4i": [160, 177], "dnnl_oidhw4o": [160, 177], "dnnl_oidhw8i8o2i": [160, 177], "dnnl_oidhw8i16o2i": [160, 177], "dnnl_oidhw8i32o2i": [160, 177], "dnnl_oidhw8i24o2i": [160, 177], "dnnl_oidhw8i64o2i": [160, 177], "dnnl_oidhw8i8o": [160, 177], "dnnl_oidhw8o16i2o": [160, 177], "dnnl_iodhw8o16i2o": [160, 177], "dnnl_oidhw4i8o4i": [160, 177], "dnnl_oidhw4i16o4i": [160, 177], "dnnl_oidhw4i24o4i": [160, 177], "dnnl_oidhw4i32o4i": [160, 177], "dnnl_oidhw4i64o4i": [160, 177], "dnnl_oidhw16i16o4i": [160, 177], "dnnl_oidhw16i16o2i": [160, 177], "dnnl_oidhw2i8o4i": [160, 177], "dnnl_oidhw8o8i": [160, 177], "dnnl_oidhw8o4i": [160, 177], "dnnl_iodhw16i16o": [160, 177], "dnnl_oidhw4o8i8o4i": [160, 177], "dnnl_iodhw16o16i": [160, 177], "dnnl_oidhw16o16i2o": [160, 177], "dnnl_oidhw8i32o": [160, 177], "dnnl_oidhw8i24o": [160, 177], "dnnl_oidhw8i16o": [160, 177], "dnnl_goiw16g": [160, 177], "dnnl_goiw8g": [160, 177], "dnnl_goiw4g": [160, 177], "dnnl_giow16o16i": [160, 177], "dnnl_giow16i16o": [160, 177], "dnnl_goiw16i16o": [160, 177], "dnnl_goiw16o16i": [160, 177], "dnnl_goiw16o": [160, 177], "dnnl_goiw4i16o4i": [160, 177], "dnnl_goiw2i8o4i": [160, 177], "dnnl_goiw16i16o4i": [160, 177], "dnnl_goiw16i16o2i": [160, 177], "dnnl_goiw16o16i2o": [160, 177], "dnnl_goiw4i4o": [160, 177], "dnnl_goiw4o4i": [160, 177], "dnnl_goiw4o": [160, 177], "dnnl_goiw8i16o2i": [160, 177], "dnnl_goiw8i8o": [160, 177], "dnnl_goiw8o16i2o": [160, 177], "dnnl_giow8o16i2o": [160, 177], "dnnl_goiw8o8i": [160, 177], "dnnl_goiw8o4i": [160, 177], "dnnl_gowi16o": [160, 177], "dnnl_gowi16o2i": [160, 177], "dnnl_gowi16o4i": [160, 177], "dnnl_giwo8i": [160, 177], "dnnl_giwo8i2o": [160, 177], "dnnl_giwo8i4o": 160, "dnnl_giwo16i": [160, 177], "dnnl_giwo16i2o": [160, 177], "dnnl_giwo16i4o": [160, 177], "dnnl_giwo24i": [160, 177], "dnnl_giwo24i2o": [160, 177], "dnnl_giwo24i4o": 160, "dnnl_gowi4o": [160, 177], "dnnl_gowi8o": [160, 177], "dnnl_gowi8o2i": [160, 177], "dnnl_gowi8o4i": [160, 177], "dnnl_goiw32g": [160, 177], "dnnl_goiw2i4o2i": [160, 177], "dnnl_goiw2o4i2o": [160, 177], "dnnl_goiw4i8o2i": [160, 177], "dnnl_goiw4o8i2o": [160, 177], "dnnl_goiw4i": [160, 177], "dnnl_goiw32i": [160, 177], "dnnl_giohw16i16o": [160, 177], "dnnl_giohw16o16i": [160, 177], "dnnl_gohwi16o": [160, 177], "dnnl_gohwi16o2i": [160, 177], "dnnl_gohwi16o4i": [160, 177], "dnnl_gihwo8i": [160, 177], "dnnl_gihwo8i2o": [160, 177], "dnnl_gihwo8i4o": 160, "dnnl_gihwo16i": [160, 177], "dnnl_gihwo16i2o": [160, 177], "dnnl_gihwo16i4o": [160, 177], "dnnl_gihwo24i": [160, 177], "dnnl_gihwo24i2o": [160, 177], "dnnl_gihwo24i4o": 160, "dnnl_gohwi32o": [160, 177], "dnnl_gohwi24o": [160, 177], "dnnl_gohwi24o2i": [160, 177], "dnnl_gohwi24o4i": [160, 177], "dnnl_gohwi4o": [160, 177], "dnnl_gohwi8o": [160, 177], "dnnl_gohwi8o2i": [160, 177], "dnnl_gohwi8o4i": [160, 177], "dnnl_goihw16g": [160, 177], "dnnl_goihw16i16o": [160, 177], "dnnl_goihw16o16i": [160, 177], "dnnl_goihw16o": [160, 177], "dnnl_goihw2i8o4i": [160, 177], "dnnl_goihw4i16o4i": [160, 177], "dnnl_goihw16i16o4i": [160, 177], "dnnl_goihw16i16o2i": [160, 177], "dnnl_goihw16o16i2o": [160, 177], "dnnl_goihw4i4o": [160, 177], "dnnl_goihw4o4i": [160, 177], "dnnl_goihw4o": [160, 177], "dnnl_goihw8g": [160, 177], "dnnl_goihw4g": [160, 177], "dnnl_goihw8i16o2i": [160, 177], "dnnl_goihw8i8o": [160, 177], "dnnl_goihw8o16i2o": [160, 177], "dnnl_giohw8o16i2o": [160, 177], "dnnl_goihw8o8i": [160, 177], "dnnl_goihw8o4i": [160, 177], "dnnl_goihw32g": [160, 177], "dnnl_gowhi16o": [160, 177], "dnnl_goihw4i": [160, 177], "dnnl_goihw32i": [160, 177], "dnnl_oiw4o8i8o4i": [160, 177], "dnnl_oihw4o8i8o4i": [160, 177], "dnnl_iow4i8o8i4o": [160, 177], "dnnl_iohw4i8o8i4o": [160, 177], "dnnl_iodhw4i8o8i4o": [160, 177], "dnnl_oihw2o8i8o2i": [160, 177], "dnnl_goiw4o8i8o4i": [160, 177], "dnnl_goihw4o8i8o4i": [160, 177], "dnnl_goidhw4o8i8o4i": [160, 177], "dnnl_giow4i8o8i4o": [160, 177], "dnnl_giohw4i8o8i4o": [160, 177], "dnnl_giodhw4i8o8i4o": [160, 177], "dnnl_goihw2o8i8o2i": [160, 177], "dnnl_goihw2i4o2i": [160, 177], "dnnl_goihw2o4i2o": [160, 177], "dnnl_goihw4i8o2i": [160, 177], "dnnl_goihw4o8i2o": [160, 177], "dnnl_giodhw16i16o": [160, 177], "dnnl_giodhw16o16i": [160, 177], "dnnl_godhwi16o": [160, 177], "dnnl_godhwi16o2i": [160, 177], "dnnl_godhwi16o4i": [160, 177], "dnnl_gidhwo8i": [160, 177], "dnnl_gidhwo8i2o": [160, 177], "dnnl_gidhwo8i4o": 160, "dnnl_gidhwo16i": [160, 177], "dnnl_gidhwo16i2o": [160, 177], "dnnl_gidhwo16i4o": [160, 177], "dnnl_gidhwo24i": [160, 177], "dnnl_gidhwo24i2o": [160, 177], "dnnl_gidhwo24i4o": 160, "dnnl_godhwi4o": [160, 177], "dnnl_godhwi8o": [160, 177], "dnnl_godhwi8o2i": [160, 177], "dnnl_godhwi8o4i": [160, 177], "dnnl_godwhi16o": [160, 177], "dnnl_goidhw16i16o": [160, 177], "dnnl_goidhw4i16o4i": [160, 177], "dnnl_goidhw16i16o4i": [160, 177], "dnnl_goidhw2i8o4i": [160, 177], "dnnl_goidhw16i16o2i": [160, 177], "dnnl_goidhw16o16i": [160, 177], "dnnl_goidhw16o16i2o": [160, 177], "dnnl_goidhw16o": [160, 177], "dnnl_goidhw4i4o": [160, 177], "dnnl_goidhw4o4i": [160, 177], "dnnl_goidhw4o": [160, 177], "dnnl_goidhw8i16o2i": [160, 177], "dnnl_goidhw8i8o": [160, 177], "dnnl_goidhw8o16i2o": [160, 177], "dnnl_giodhw8o16i2o": [160, 177], "dnnl_goidhw8o8i": [160, 177], "dnnl_goidhw8o4i": [160, 177], "dnnl_goidhw16g": [160, 177], "dnnl_goidhw32g": [160, 177], "dnnl_goidhw2i4o2i": [160, 177], "dnnl_goidhw4i8o2i": [160, 177], "dnnl_goidhw2o4i2o": [160, 177], "dnnl_goidhw4o8i2o": [160, 177], "dnnl_goidhw4i": [160, 177], "dnnl_goidhw32i": [160, 177], "dnnl_owi24o": [160, 177], "dnnl_owi24o2i": [160, 177], "dnnl_owi24o4i": [160, 177], "dnnl_owi32o": [160, 177], "dnnl_owi32o2i": [160, 177], "dnnl_owi32o4i": [160, 177], "dnnl_owi48o": [160, 177], "dnnl_owi48o2i": [160, 177], "dnnl_owi48o4i": [160, 177], "dnnl_owi64o": [160, 177], "dnnl_owi64o2i": [160, 177], "dnnl_owi64o4i": [160, 177], "dnnl_iwo32i": [160, 177], "dnnl_iwo32i2o": [160, 177], "dnnl_iwo32i4o": [160, 177], "dnnl_iwo48i": [160, 177], "dnnl_iwo48i2o": [160, 177], "dnnl_iwo48i4o": [160, 177], "dnnl_iwo64i": [160, 177], "dnnl_iwo64i2o": [160, 177], "dnnl_iwo64i4o": [160, 177], "dnnl_wio2i": [160, 177], "dnnl_wio4i": [160, 177], "dnnl_gowi24o": [160, 177], "dnnl_gowi24o2i": [160, 177], "dnnl_gowi24o4i": [160, 177], "dnnl_gowi32o": [160, 177], "dnnl_gowi32o2i": [160, 177], "dnnl_gowi32o4i": [160, 177], "dnnl_gowi48o": [160, 177], "dnnl_gowi48o2i": [160, 177], "dnnl_gowi48o4i": [160, 177], "dnnl_gowi64o": [160, 177], "dnnl_gowi64o2i": [160, 177], "dnnl_gowi64o4i": [160, 177], "dnnl_giwo32i": [160, 177], "dnnl_giwo32i2o": [160, 177], "dnnl_giwo32i4o": [160, 177], "dnnl_giwo48i": [160, 177], "dnnl_giwo48i2o": [160, 177], "dnnl_giwo48i4o": [160, 177], "dnnl_giwo64i": [160, 177], "dnnl_giwo64i2o": [160, 177], "dnnl_giwo64i4o": [160, 177], "dnnl_gwio": [160, 177], "dnnl_gwio2i": [160, 177], "dnnl_gwio4i": [160, 177], "dnnl_ohwi24o2i": [160, 177], "dnnl_ohwi24o4i": [160, 177], "dnnl_ohwi32o2i": [160, 177], "dnnl_ohwi32o4i": [160, 177], "dnnl_ohwi48o": [160, 177], "dnnl_ohwi48o2i": [160, 177], "dnnl_ohwi48o4i": [160, 177], "dnnl_ohwi64o": [160, 177], "dnnl_ohwi64o2i": [160, 177], "dnnl_ohwi64o4i": [160, 177], "dnnl_ihwo32i": [160, 177], "dnnl_ihwo32i2o": [160, 177], "dnnl_ihwo32i4o": [160, 177], "dnnl_ihwo48i": [160, 177], "dnnl_ihwo48i2o": [160, 177], "dnnl_ihwo48i4o": [160, 177], "dnnl_ihwo64i": [160, 177], "dnnl_ihwo64i2o": [160, 177], "dnnl_ihwo64i4o": [160, 177], "dnnl_hwio2i": [160, 177], "dnnl_hwio4i": [160, 177], "dnnl_gohwi32o2i": [160, 177], "dnnl_gohwi32o4i": [160, 177], "dnnl_gohwi48o": [160, 177], "dnnl_gohwi48o2i": [160, 177], "dnnl_gohwi48o4i": [160, 177], "dnnl_gohwi64o": [160, 177], "dnnl_gohwi64o2i": [160, 177], "dnnl_gohwi64o4i": [160, 177], "dnnl_gihwo32i": [160, 177], "dnnl_gihwo32i2o": [160, 177], "dnnl_gihwo32i4o": [160, 177], "dnnl_gihwo48i": [160, 177], "dnnl_gihwo48i2o": [160, 177], "dnnl_gihwo48i4o": [160, 177], "dnnl_gihwo64i": [160, 177], "dnnl_gihwo64i2o": [160, 177], "dnnl_gihwo64i4o": [160, 177], "dnnl_ghwio": [160, 177], "dnnl_ghwio2i": [160, 177], "dnnl_ghwio4i": [160, 177], "dnnl_odhwi24o": [160, 177], "dnnl_odhwi24o2i": [160, 177], "dnnl_odhwi24o4i": [160, 177], "dnnl_odhwi32o": [160, 177], "dnnl_odhwi32o2i": [160, 177], "dnnl_odhwi32o4i": [160, 177], "dnnl_odhwi48o": [160, 177], "dnnl_odhwi48o2i": [160, 177], "dnnl_odhwi48o4i": [160, 177], "dnnl_odhwi64o": [160, 177], "dnnl_odhwi64o2i": [160, 177], "dnnl_odhwi64o4i": [160, 177], "dnnl_idhwo32i": [160, 177], "dnnl_idhwo32i2o": [160, 177], "dnnl_idhwo32i4o": [160, 177], "dnnl_idhwo48i": [160, 177], "dnnl_idhwo48i2o": [160, 177], "dnnl_idhwo48i4o": [160, 177], "dnnl_idhwo64i": [160, 177], "dnnl_idhwo64i2o": [160, 177], "dnnl_idhwo64i4o": [160, 177], "dnnl_dhwio2i": [160, 177], "dnnl_dhwio4i": [160, 177], "dnnl_godhwi24o": [160, 177], "dnnl_godhwi24o2i": [160, 177], "dnnl_godhwi24o4i": [160, 177], "dnnl_godhwi32o": [160, 177], "dnnl_godhwi32o2i": [160, 177], "dnnl_godhwi32o4i": [160, 177], "dnnl_godhwi48o": [160, 177], "dnnl_godhwi48o2i": [160, 177], "dnnl_godhwi48o4i": [160, 177], "dnnl_godhwi64o": [160, 177], "dnnl_godhwi64o2i": [160, 177], "dnnl_godhwi64o4i": [160, 177], "dnnl_gidhwo32i": [160, 177], "dnnl_gidhwo32i2o": [160, 177], "dnnl_gidhwo32i4o": [160, 177], "dnnl_gidhwo48i": [160, 177], "dnnl_gidhwo48i2o": [160, 177], "dnnl_gidhwo48i4o": [160, 177], "dnnl_gidhwo64i": [160, 177], "dnnl_gidhwo64i2o": [160, 177], "dnnl_gidhwo64i4o": [160, 177], "dnnl_gdhwio": [160, 177], "dnnl_gdhwio2i": [160, 177], "dnnl_gdhwio4i": [160, 177], "dnnl_oi16i32o4i": [160, 177], "dnnl_oi16i48o4i": [160, 177], "dnnl_oi16i64o4i": [160, 177], "dnnl_oi16i16o2i": [160, 177], "dnnl_oi16i32o2i": [160, 177], "dnnl_oi16i48o2i": [160, 177], "dnnl_oi16i64o2i": [160, 177], "dnnl_oiw16i32o4i": [160, 177], "dnnl_oiw16i48o4i": [160, 177], "dnnl_oiw16i64o4i": [160, 177], "dnnl_oiw16i32o2i": [160, 177], "dnnl_oiw16i48o2i": [160, 177], "dnnl_oiw16i64o2i": [160, 177], "dnnl_oihw16i32o4i": [160, 177], "dnnl_oihw16i48o4i": [160, 177], "dnnl_oihw16i64o4i": [160, 177], "dnnl_oihw16i32o2i": [160, 177], "dnnl_oihw16i48o2i": [160, 177], "dnnl_oihw16i64o2i": [160, 177], "dnnl_oidhw16i32o4i": [160, 177], "dnnl_oidhw16i48o4i": [160, 177], "dnnl_oidhw16i64o4i": [160, 177], "dnnl_oidhw16i32o2i": [160, 177], "dnnl_oidhw16i48o2i": [160, 177], "dnnl_oidhw16i64o2i": [160, 177], "dnnl_owi16i16o2i": [160, 177], "dnnl_owi16i16o4i": [160, 177], "dnnl_ohwi16i16o2i": [160, 177], "dnnl_ohwi16i16o4i": [160, 177], "dnnl_odhwi16i16o2i": [160, 177], "dnnl_odhwi16i16o4i": [160, 177], "dnnl_iwo16o16i2o": [160, 177], "dnnl_iwo16o16i4o": [160, 177], "dnnl_ihwo16o16i2o": [160, 177], "dnnl_ihwo16o16i4o": [160, 177], "dnnl_idhwo16o16i2o": [160, 177], "dnnl_idhwo16o16i4o": [160, 177], "dnnl_gowi16i16o2i": [160, 177], "dnnl_gowi16i16o4i": [160, 177], "dnnl_gohwi16i16o2i": [160, 177], "dnnl_gohwi16i16o4i": [160, 177], "dnnl_godhwi16i16o2i": [160, 177], "dnnl_godhwi16i16o4i": [160, 177], "dnnl_giwo16o16i2o": [160, 177], "dnnl_giwo16o16i4o": [160, 177], "dnnl_gihwo16o16i2o": [160, 177], "dnnl_gihwo16o16i4o": [160, 177], "dnnl_gidhwo16o16i2o": [160, 177], "dnnl_gidhwo16o16i4o": [160, 177], "dnnl_owi16i32o2i": [160, 177], "dnnl_owi16i32o4i": [160, 177], "dnnl_owi16i48o2i": [160, 177], "dnnl_owi16i48o4i": [160, 177], "dnnl_owi16i64o2i": [160, 177], "dnnl_owi16i64o4i": [160, 177], "dnnl_iwo16o32i2o": [160, 177], "dnnl_iwo16o32i4o": [160, 177], "dnnl_iwo16o48i2o": [160, 177], "dnnl_iwo16o48i4o": [160, 177], "dnnl_iwo16o64i2o": [160, 177], "dnnl_iwo16o64i4o": [160, 177], "dnnl_gowi16i32o2i": [160, 177], "dnnl_gowi16i32o4i": [160, 177], "dnnl_gowi16i48o2i": [160, 177], "dnnl_gowi16i48o4i": [160, 177], "dnnl_gowi16i64o2i": [160, 177], "dnnl_gowi16i64o4i": [160, 177], "dnnl_giwo16o32i2o": [160, 177], "dnnl_giwo16o32i4o": [160, 177], "dnnl_giwo16o48i2o": [160, 177], "dnnl_giwo16o48i4o": [160, 177], "dnnl_giwo16o64i2o": [160, 177], "dnnl_giwo16o64i4o": [160, 177], "dnnl_ohwi16i32o2i": [160, 177], "dnnl_ohwi16i32o4i": [160, 177], "dnnl_ohwi16i48o2i": [160, 177], "dnnl_ohwi16i48o4i": [160, 177], "dnnl_ohwi16i64o2i": [160, 177], "dnnl_ohwi16i64o4i": [160, 177], "dnnl_ihwo16o32i2o": [160, 177], "dnnl_ihwo16o32i4o": [160, 177], "dnnl_ihwo16o48i2o": [160, 177], "dnnl_ihwo16o48i4o": [160, 177], "dnnl_ihwo16o64i2o": [160, 177], "dnnl_ihwo16o64i4o": [160, 177], "dnnl_gohwi16i32o2i": [160, 177], "dnnl_gohwi16i32o4i": [160, 177], "dnnl_gohwi16i48o2i": [160, 177], "dnnl_gohwi16i48o4i": [160, 177], "dnnl_gohwi16i64o2i": [160, 177], "dnnl_gohwi16i64o4i": [160, 177], "dnnl_gihwo16o32i2o": [160, 177], "dnnl_gihwo16o32i4o": [160, 177], "dnnl_gihwo16o48i2o": [160, 177], "dnnl_gihwo16o48i4o": [160, 177], "dnnl_gihwo16o64i2o": [160, 177], "dnnl_gihwo16o64i4o": [160, 177], "dnnl_odhwi16i32o2i": [160, 177], "dnnl_odhwi16i32o4i": [160, 177], "dnnl_odhwi16i48o2i": [160, 177], "dnnl_odhwi16i48o4i": [160, 177], "dnnl_odhwi16i64o2i": [160, 177], "dnnl_odhwi16i64o4i": [160, 177], "dnnl_idhwo16o32i2o": [160, 177], "dnnl_idhwo16o32i4o": [160, 177], "dnnl_idhwo16o48i2o": [160, 177], "dnnl_idhwo16o48i4o": [160, 177], "dnnl_idhwo16o64i2o": [160, 177], "dnnl_idhwo16o64i4o": [160, 177], "dnnl_godhwi16i32o2i": [160, 177], "dnnl_godhwi16i32o4i": [160, 177], "dnnl_godhwi16i48o2i": [160, 177], "dnnl_godhwi16i48o4i": [160, 177], "dnnl_godhwi16i64o2i": [160, 177], "dnnl_godhwi16i64o4i": [160, 177], "dnnl_gidhwo16o32i2o": [160, 177], "dnnl_gidhwo16o32i4o": [160, 177], "dnnl_gidhwo16o48i2o": [160, 177], "dnnl_gidhwo16o48i4o": [160, 177], "dnnl_gidhwo16o64i2o": [160, 177], "dnnl_gidhwo16o64i4o": [160, 177], "dnnl_hwiog16g": [160, 177], "dnnl_hwiog8g": [160, 177], "dnnl_ncdhw40n16c": [160, 177], "dnnl_ncw40n16c": [160, 177], "dnnl_nchw40n16c": [160, 177], "dnnl_ncw40n32c": [160, 177], "dnnl_nchw40n32c": [160, 177], "dnnl_ncdhw40n32c": [160, 177], "dnnl_oidhw4o8i8o2i": [160, 177], "dnnl_oihw4o8i8o2i": [160, 177], "dnnl_oiw4o8i8o2i": [160, 177], "dnnl_goidhw4o8i8o2i": [160, 177], "dnnl_goihw4o8i8o2i": [160, 177], "dnnl_goiw4o8i8o2i": [160, 177], "dnnl_iodhw4i8o8i2o": [160, 177], "dnnl_iohw4i8o8i2o": [160, 177], "dnnl_iow4i8o8i2o": [160, 177], "dnnl_giodhw4i8o8i2o": [160, 177], "dnnl_giohw4i8o8i2o": [160, 177], "dnnl_giow4i8o8i2o": [160, 177], "dnnl_ncw2c32n8c": [160, 177], "dnnl_nchw2c32n8c": [160, 177], "dnnl_ncdhw2c32n8c": [160, 177], "dnnl_oiw2i8o16i4o": [160, 177], "dnnl_oihw2i8o16i4o": [160, 177], "dnnl_oidhw2i8o16i4o": [160, 177], "dnnl_oiw2o8i16o4i": [160, 177], "dnnl_oiw2o8i16o2i": [160, 177], "dnnl_iow2i8o16i4o": [160, 177], "dnnl_iow2i8o16i2o": [160, 177], "dnnl_oihw2o8i16o4i": [160, 177], "dnnl_oihw2o8i16o2i": [160, 177], "dnnl_iohw2i8o16i4o": [160, 177], "dnnl_iohw2i8o16i2o": [160, 177], "dnnl_oidhw2o8i16o4i": [160, 177], "dnnl_oidhw2o8i16o2i": [160, 177], "dnnl_iodhw2i8o16i4o": [160, 177], "dnnl_iodhw2i8o16i2o": [160, 177], "dnnl_goiw2o8i16o2i": [160, 177], "dnnl_giow2i8o16i2o": [160, 177], "dnnl_giohw2i8o16i2o": [160, 177], "dnnl_giodhw2i8o16i2o": [160, 177], "dnnl_goihw2o8i16o2i": [160, 177], "dnnl_goidhw2o8i16o2i": [160, 177], "dnnl_goiw2o8i16o4i": [160, 177], "dnnl_goihw2o8i16o4i": [160, 177], "ndhwc": [160, 177], "data_in_ncdhw": 160, "data_in_ndhwc": 160, "dnnl_memory_desc_destroi": [160, 208, 215, 220, 243, 265, 320, 329, 336], "aka": [160, 180, 217, 218, 340], "alia": [160, 177, 187, 188, 271, 308], "mini": [160, 177, 225, 265, 342, 412], "6d": [160, 177], "7d": [160, 177], "8d": [160, 177], "9d": [160, 177], "10d": [160, 177], "11d": [160, 177], "2nd": [160, 177], "sentinel": 160, "incl": 160, "seq_length": [160, 177], "num_lay": [160, 177], "num_direct": [160, 177], "input_channel": [160, 177], "num_gat": [160, 177], "output_channel": [160, 177], "num_channels_in_hidden_st": [160, 177], "num_channels_in_recurrent_project": [160, 177], "dnnl_fpmath_mode_strict": [161, 162, 248, 259, 277], "dnnl_fpmath_mode_bf16": [161, 162, 248, 259, 277], "dnnl_fpmath_mode_f16": [161, 162, 248, 259, 277], "dnnl_fpmath_mode_tf32": [161, 162, 248, 259, 277], "dnnl_fpmath_mode_ani": [161, 162, 248, 259, 277], "dnnl_graph_layout_type_undef": [163, 165], "dnnl_graph_layout_type_ani": [163, 165, 293], "dnnl_graph_layout_type_strid": [163, 165, 293, 412], "dnnl_graph_layout_type_opaqu": [163, 165, 412], "dnnl_graph_tensor_property_undef": [166, 174], "dnnl_graph_tensor_property_vari": [166, 174], "dnnl_graph_tensor_property_const": [166, 174], "unchang": [166, 174, 271, 466], "dnnl_graph_op_attr_undef": [167, 168], "dnnl_graph_op_attr_alpha": [167, 168], "dnnl_graph_op_attr_beta": [167, 168], "dnnl_graph_op_attr_epsilon": [167, 168], "dnnl_graph_op_attr_max": [167, 168], "dnnl_graph_op_attr_min": [167, 168], "dnnl_graph_op_attr_momentum": [167, 168], "dnnl_graph_op_attr_scal": [167, 168], "dnnl_graph_op_attr_axi": [167, 168], "dnnl_graph_op_attr_begin_norm_axi": [167, 168], "dnnl_graph_op_attr_group": [167, 168], "dnnl_graph_op_attr_ax": [167, 168], "dnnl_graph_op_attr_dil": [167, 168], "dnnl_graph_op_attr_dst_shap": [167, 168], "dnnl_graph_op_attr_kernel": [167, 168], "dnnl_graph_op_attr_ord": [167, 168], "dnnl_graph_op_attr_output_pad": [167, 168], "dnnl_graph_op_attr_pads_begin": [167, 168], "dnnl_graph_op_attr_pads_end": [167, 168], "dnnl_graph_op_attr_shap": [167, 168], "dnnl_graph_op_attr_s": [167, 168], "dnnl_graph_op_attr_src_shap": [167, 168], "dnnl_graph_op_attr_strid": [167, 168], "dnnl_graph_op_attr_weights_shap": [167, 168], "dnnl_graph_op_attr_zp": [167, 168], "dnnl_graph_op_attr_exclude_pad": [167, 168], "dnnl_graph_op_attr_keep_dim": [167, 168], "dnnl_graph_op_attr_keep_stat": [167, 168], "dnnl_graph_op_attr_per_channel_broadcast": [167, 168], "dnnl_graph_op_attr_special_zero": [167, 168], "dnnl_graph_op_attr_transpose_a": [167, 168], "dnnl_graph_op_attr_transpose_b": [167, 168], "dnnl_graph_op_attr_use_affin": [167, 168], "dnnl_graph_op_attr_use_dst": [167, 168], "dnnl_graph_op_attr_auto_broadcast": [167, 168], "dnnl_graph_op_attr_auto_pad": [167, 168], "dnnl_graph_op_attr_coordinate_transformation_mod": [167, 168], "dnnl_graph_op_attr_data_format": [167, 168, 412], "dnnl_graph_op_attr_mod": [167, 168], "dnnl_graph_op_attr_qtyp": [167, 168], "dnnl_graph_op_attr_rounding_typ": [167, 168], "dnnl_graph_op_attr_weights_format": [167, 168, 412], "illeg": 167, "weight_shap": [167, 168], "0x30": 168, "0x40": 168, "0x60": 168, "0x80": 168, "input_shap": 168, "dnnl_graph_op_ab": [169, 170], "absbackward": [169, 246], "dnnl_graph_op_abs_backward": [169, 170], "dnnl_graph_op_add": [169, 170], "dnnl_graph_op_avg_pool": [169, 170], "dnnl_graph_op_avg_pool_backward": [169, 170], "dnnl_graph_op_batch_norm_forward_train": [169, 170], "dnnl_graph_op_batch_norm_infer": [169, 170], "dnnl_graph_op_batch_norm_backward": [169, 170], "dnnl_graph_op_bias_add": [169, 170], "dnnl_graph_op_bias_add_backward": [169, 170], "dnnl_graph_op_clamp": [169, 170], "clampbackward": [169, 246], "dnnl_graph_op_clamp_backward": [169, 170], "dnnl_graph_op_concat": [169, 170], "dnnl_graph_op_convolut": [169, 170], "dnnl_graph_op_convolution_backward_data": [169, 170], "dnnl_graph_op_convolution_backward_weight": [169, 170], "dnnl_graph_op_conv_transpos": [169, 170], "convtransposebackwarddata": [169, 246], "dnnl_graph_op_conv_transpose_backward_data": [169, 170], "convtransposebackwardweight": [169, 246], "dnnl_graph_op_conv_transpose_backward_weight": [169, 170], "dnnl_graph_op_dequant": [169, 170], "dnnl_graph_op_divid": [169, 170], "dynamicdequant": [169, 246], "dnnl_graph_op_dynamic_dequant": [169, 170], "dynamicquant": [169, 246], "dnnl_graph_op_dynamic_quant": [169, 170], "dnnl_graph_op_elu": [169, 170], "elubackward": [169, 246], "dnnl_graph_op_elu_backward": [169, 170], "dnnl_graph_op_end": [169, 170], "dnnl_graph_op_exp": [169, 170], "dnnl_graph_op_gelu": [169, 170], "dnnl_graph_op_gelu_backward": [169, 170], "dnnl_graph_op_hard_sigmoid": [169, 170], "hardsigmoidbackward": [169, 246], "dnnl_graph_op_hard_sigmoid_backward": [169, 170], "dnnl_graph_op_hard_swish": [169, 170], "hardswishbackward": [169, 246], "dnnl_graph_op_hard_swish_backward": [169, 170], "dnnl_graph_op_interpol": [169, 170], "interpolatebackward": [169, 246], "dnnl_graph_op_interpolate_backward": [169, 170], "dnnl_graph_op_layer_norm": [169, 170], "layernormbackward": [169, 246], "dnnl_graph_op_layer_norm_backward": [169, 170], "dnnl_graph_op_leaky_relu": [169, 170], "dnnl_graph_op_log": [169, 170], "dnnl_graph_op_log_softmax": [169, 170], "logsoftmaxbackward": [169, 246], "dnnl_graph_op_log_softmax_backward": [169, 170], "dnnl_graph_op_matmul": [169, 170], "dnnl_graph_op_maximum": [169, 170], "dnnl_graph_op_max_pool": [169, 170], "maxpoolbackward": [169, 246], "dnnl_graph_op_max_pool_backward": [169, 170], "dnnl_graph_op_minimum": [169, 170], "dnnl_graph_op_mish": [169, 170], "mishbackward": [169, 246], "dnnl_graph_op_mish_backward": [169, 170], "dnnl_graph_op_multipli": [169, 170], "dnnl_graph_op_pow": [169, 170], "dnnl_graph_op_prelu": [169, 170], "prelubackward": [169, 246], "dnnl_graph_op_prelu_backward": [169, 170], "dnnl_graph_op_quant": [169, 170], "dnnl_graph_op_reciproc": [169, 170], "dnnl_graph_op_reduce_l1": [169, 170], "dnnl_graph_op_reduce_l2": [169, 170], "dnnl_graph_op_reduce_max": [169, 170], "dnnl_graph_op_reduce_mean": [169, 170], "dnnl_graph_op_reduce_min": [169, 170], "dnnl_graph_op_reduce_prod": [169, 170], "dnnl_graph_op_reduce_sum": [169, 170], "dnnl_graph_op_relu": [169, 170], "dnnl_graph_op_relu_backward": [169, 170], "dnnl_graph_op_reord": [169, 170], "dnnl_graph_op_round": [169, 170], "dnnl_graph_op_select": [169, 170], "dnnl_graph_op_sigmoid": [169, 170], "dnnl_graph_op_sigmoid_backward": [169, 170], "dnnl_graph_op_softmax": [169, 170], "softmaxbackward": [169, 246], "dnnl_graph_op_softmax_backward": [169, 170], "dnnl_graph_op_softplu": [169, 170], "softplusbackward": [169, 246], "dnnl_graph_op_softplus_backward": [169, 170], "dnnl_graph_op_sqrt": [169, 170], "sqrtbackward": [169, 246], "dnnl_graph_op_sqrt_backward": [169, 170], "dnnl_graph_op_squar": [169, 170], "squareddiffer": [169, 246], "dnnl_graph_op_squared_differ": [169, 170], "dnnl_graph_op_static_reshap": [169, 170], "dnnl_graph_op_static_transpos": [169, 170], "dnnl_graph_op_subtract": [169, 170], "dnnl_graph_op_tanh": [169, 170], "tanhbackward": [169, 246], "dnnl_graph_op_tanh_backward": [169, 170], "dnnl_graph_op_type_cast": [169, 170], "dnnl_graph_op_wildcard": [169, 170], "lastsymbol": 169, "dnnl_graph_op_last_symbol": [169, 170], "dnnl_graph_partition_policy_fus": [171, 172], "dnnl_graph_partition_policy_debug": [171, 172], "chian": [171, 172], "dnnl_success": [173, 198, 199, 208, 215, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 291, 293, 294, 295, 297, 298, 307, 320, 329], "out_of_memori": [173, 198], "dnnl_out_of_memori": [173, 198, 199], "invalid_argu": [173, 198, 232, 269, 277, 340], "dnnl_invalid_argu": [173, 198, 199, 248, 265, 269, 277, 287, 288, 289], "last_impl_reach": [173, 198], "dnnl_last_impl_reach": [173, 198, 199, 271], "runtime_error": [173, 198, 277], "dnnl_runtime_error": [173, 198, 199, 277], "not_requir": [173, 198], "dnnl_not_requir": [173, 198, 199, 271], "invalid_graph": 173, "dnnl_invalid_graph": [173, 199], "invalid_graph_op": 173, "dnnl_invalid_graph_op": [173, 199], "dnnl_invalid_shap": [173, 199], "invalid_data_typ": 173, "dnnl_invalid_data_typ": [173, 199], "request": [173, 198, 199, 258, 265, 271, 272, 306, 467], "reach": [173, 198, 199, 466], "legitim": [173, 199], "bca": 177, "cba": 177, "abdc": 177, "acbd": 177, "adbc": 177, "bacd": 177, "bcda": 177, "cdba": 177, "dcab": 177, "abdec": 177, "bcdea": 177, "cdeba": 177, "decab": 177, "abcdef": 177, "abdfc": 177, "acbdef": 177, "abdefc": 177, "defcab": 177, "abcdf": 177, "abcdefg": 177, "abcdegf": 177, "abcdefgh": 177, "abcdefhg": 177, "abcdefghi": 177, "abcdefgih": 177, "abcdefghij": 177, "abcdefghji": 177, "abcdefghijk": 177, "abcdefghikj": 177, "abcdefghijkl": 177, "abcdefghijlk": 177, "cn": [177, 265], "tn": 177, "nt": 177, "nwc": 177, "chwn": [177, 340], "oi": 177, "io": [177, 216, 330], "oiw": 177, "owi": 177, "wio": 177, "iwo": 177, "oihw": [177, 209, 210, 211, 212, 214, 226, 231, 232, 321, 322, 323, 324, 327, 344, 355, 356], "hwio": 177, "ohwi": 177, "ihwo": 177, "iohw": 177, "oidhw": 177, "dhwio": 177, "odhwi": 177, "iodhw": 177, "idhwo": 177, "goiw": 177, "gowi": 177, "wigo": 177, "gohwi": 177, "goihw": [177, 209, 214, 327], "giohw": 177, "goidhw": 177, "giodhw": 177, "godhwi": 177, "dhwigo": 177, "ntc": 177, "ldigo": [177, 204, 217, 218, 229, 238, 312, 332, 333, 351, 367], "ldgoi": 177, "ldio": 177, "ldoi": 177, "ldgo": [177, 204, 217, 218, 229, 238, 312, 332, 333, 351, 367], "ab16b16a": 177, "ab16b32a": 177, "ab16b48a": 177, "ab16b64a": 177, "ab8b16a2b": 177, "ab8b32a2b": 177, "ab8b64a2b": 177, "ab4b16a4b": 177, "ab4b32a4b": 177, "ab4b64a4b": 177, "ab16b16a4b": 177, "ab16b32a4b": 177, "ab16b48a4b": 177, "ab16b64a4b": 177, "ab16b16a2b": 177, "ab16b32a2b": 177, "ab16b48a2b": 177, "ab16b64a2b": 177, "abc16a": 177, "abc16a16b": 177, "abc4a4b": 177, "abc16b": 177, "abc32b": 177, "abc16b16a": 177, "abc16b32a": 177, "abc16b48a": 177, "abc16b64a": 177, "abc4a": 177, "abc4b": 177, "abc4b16a4b": 177, "abc4b32a4b": 177, "abc4b64a4b": 177, "abc2b8a4b": 177, "abc16a16b2a": 177, "abc16b16a4b": 177, "abc16b32a4b": 177, "abc16b48a4b": 177, "abc16b64a4b": 177, "abc16b16a2b": 177, "abc16b32a2b": 177, "abc16b48a2b": 177, "abc16b64a2b": 177, "abc4b4a": 177, "abc8a16b2a": 177, "abc8a8b": 177, "abc8a4b": 177, "abc8b": 177, "abc8b16a2b": 177, "abc8b32a2b": 177, "abc8b64a2b": 177, "abc8b8a": 177, "abcd8a": 177, "abcd16a": 177, "abcd32a": 177, "abcd16a16b": 177, "abcd32b": 177, "abcd16b32a": 177, "abcd16b48a": 177, "abcd16b64a": 177, "abcd16b16c": 177, "abcd16c16b": 177, "abcd4a": 177, "abcd4b": 177, "abcd4b16a4b": 177, "abcd4b32a4b": 177, "abcd4b64a4b": 177, "abcd2b8a4b": 177, "abcd4b4a": 177, "abcd4a4b": 177, "abcd4c16b4c": 177, "abcd2c8b4c": 177, "abcd16a16b2a": 177, "abcd16b16a4b": 177, "abcd16b32a4b": 177, "abcd16b48a4b": 177, "abcd16b64a4b": 177, "abcd16b16a2b": 177, "abcd16b32a2b": 177, "abcd16b48a2b": 177, "abcd16b64a2b": 177, "abcd16b16c2b": 177, "abcd16c16b4c": 177, "abcd16c16b2c": 177, "abcd4c4b": 177, "abcd4b4c": 177, "abcd8a16b2a": 177, "abcd8a8b": 177, "abcd8a4b": 177, "abcd8a2b": 177, "abcd8b": [177, 355], "abcd8b16a2b": 177, "abcd8b32a2b": 177, "abcd8b64a2b": 177, "abcd8b16c2b": 177, "abcd8b8a": [177, 355], "abcd8b8c": 177, "abcd8b4c": 177, "abcd8c16b2c": 177, "abcd8c8b": 177, "abcde16a": 177, "abcde32a": 177, "abcde16a16b": 177, "abcde16b": 177, "abcde32b": 177, "abcde16b16a": 177, "abcde16b32a": 177, "abcde16b48a": 177, "abcde16b64a": 177, "abcde16b16c": 177, "abcde16c16b": 177, "abcde2c8b4c": 177, "abcde4a": 177, "abcde4b": 177, "abcde4b4a": 177, "abcde4a4b": 177, "abcde4b4c": 177, "abcde4c16b4c": 177, "abcde16b16c2b": 177, "abcde16c16b4c": 177, "abcde16c16b2c": 177, "abcdef16c16b2c": 177, "abcde4c4b": 177, "abcde8a": 177, "abcde8a8b": 177, "abcde8a4b": 177, "abcde8b": 177, "abcde8b16a2b": 177, "abcde8b32a2b": 177, "abcde8b64a2b": 177, "abcde4b16a4b": 177, "abcde4b32a4b": 177, "abcde4b64a4b": 177, "abcde16b16a4b": 177, "abcde16b32a4b": 177, "abcde16b48a4b": 177, "abcde16b64a4b": 177, "abcde16b16a2b": 177, "abcde16b32a2b": 177, "abcde16b48a2b": 177, "abcde16b64a2b": 177, "abcde2b8a4b": 177, "abcde8b16c2b": 177, "abcde8b8a": 177, "abcde8b8c": 177, "abcde8b4c": 177, "abcd4a8b8a4b": 177, "abcd2a8b8a2b": 177, "abcde4b8c8b4c": 177, "abcde2b8c8b2c": 177, "abcde8c16b2c": 177, "abcde8c8b": 177, "abcdef16b": 177, "abcdef16b16c": 177, "abcdef16c16b": 177, "abcdef4b": 177, "abcdef2c8b4c": 177, "abcdef4c4b": 177, "abcdef4b4c": 177, "abcdef8b8c": 177, "abcdef8b4c": 177, "abcdef8c16b2c": 177, "abcdef4c16b4c": 177, "abcdef8c8b": 177, "abdc16b": 177, "abdc4b": 177, "abdc8b": 177, "abdc8b2c": 177, "abdc8b4c": 177, "abdec16b": 177, "abdec4b": 177, "abdec8b": 177, "abdec8b2c": 177, "abdec8b4c": 177, "abdefc16b": 177, "acbdef16c16b": 177, "acbdef16b16c": 177, "abdefc4b": 177, "abdefc8b": 177, "abdefc8b2c": 177, "abdefc8b4c": 177, "acb16a": 177, "acb4a": 177, "acb8a": 177, "acb8a2b": 177, "acb8a4b": 177, "acbd16b16c": 177, "acbd16c16b": 177, "acbde16b16c": 177, "acbde16c16b": 177, "acdb16a": [177, 356], "acdb4a": 177, "acdb8a": 177, "acdb8a2b": 177, "acdb8a4b": 177, "acdeb16a": 177, "acdeb4a": 177, "acdeb8a": 177, "acdeb8a2b": 177, "acdeb8a4b": 177, "bac16a16b": 177, "bac16b16a": 177, "bacd16a16b": 177, "bacd16b16a": 177, "abcd32a32b": 177, "bacde16b16a": 177, "bacde16a16b": 177, "abdec32b": 177, "abcdef16a": 177, "abcdef32a": 177, "acdb32a": 177, "abcd2b4c2b": 177, "abcde2b4c2b": 177, "abcdef2b4c2b": 177, "abcd2c4b2c": 177, "abcde2c4b2c": 177, "abcdef2c4b2c": 177, "abcd4b8c2b": 177, "abcde4b8c2b": 177, "abcdef4b8c2b": 177, "abcd4c8b2c": 177, "abcde4c8b2c": 177, "abcdef4c8b2c": 177, "ab32a32b8a4b": 177, "ab32a32b8a2b": 177, "ab8a4b": 177, "ab8a2b": 177, "abdc16d": 177, "abdc32d": 177, "abdc32d4c": 177, "abcd32c": 177, "abdec16": 177, "abdec32": 177, "abdec32e2c": 177, "abdec32e4c": 177, "abdce16c": 177, "abdce32c": 177, "abdce32c2": 177, "abcdef16c16b4c": 177, "abdc16b4c": 177, "abdec16b4c": 177, "acb16a4b": 177, "acdb16a2b": 177, "abdefc16b4c": 177, "acdeb16a4b": 177, "acb32a": 177, "acb32a2b": 177, "acb32a4b": 177, "acb48a": 177, "acb48a2b": 177, "acb48a4b": 177, "acb64a": 177, "acb64a2b": 177, "acb64a4b": 177, "cba2b": 177, "cba4b": 177, "abdc32b": 177, "abdc32b2c": 177, "abdc32b4c": 177, "abdc48b": 177, "abdc48b2c": 177, "abdc48b4c": 177, "abdc64b": 177, "abdc64b2c": 177, "abdc64b4c": 177, "adcb": 177, "adcb2c": 177, "adcb4c": 177, "acdb32a2b": 177, "acdb32a4b": 177, "acdb48a": 177, "acdb48a2b": 177, "acdb48a4b": 177, "acdb64a": 177, "acdb64a2b": 177, "acdb64a4b": 177, "cdba2b": 177, "cdba4b": 177, "abdec32b2c": 177, "abdec32b4c": 177, "abdec48b": 177, "abdec48b2c": 177, "abdec48b4c": 177, "abdec64b": 177, "abdec64b2c": 177, "abdec64b4c": 177, "adecb": 177, "adecb2c": 177, "adecb4c": 177, "acdeb32a": 177, "acdeb32a2b": 177, "acdeb32a4b": 177, "acdeb48a": 177, "acdeb48a2b": 177, "acdeb48a4b": 177, "acdeb64a": 177, "acdeb64a2b": 177, "acdeb64a4b": 177, "cdeba2b": 177, "cdeba4b": 177, "abdefc32b": 177, "abdefc32b2c": 177, "abdefc32b4c": 177, "abdefc48b": 177, "abdefc48b2c": 177, "abdefc48b4c": 177, "abdefc64b": 177, "abdefc64b2c": 177, "abdefc64b4c": 177, "adefcb": 177, "adefcb2c": 177, "adefcb4c": 177, "abc32a32b": 177, "bac8a16b2a": 177, "bacd8a16b2a": 177, "abcde8a16b2a": 177, "acbd8b16c2b": 177, "bacde8a16b2a": 177, "acbde8b16c2b": 177, "abcde32a32b": 177, "abc4a8b8a4b": 177, "abcde4a8b8a4b": 177, "bac4b8a8b4a": 177, "bacd4b8a8b4a": 177, "bacde4b8a8b4a": 177, "abcd4b8c8b4c": 177, "abcdef4b8c8b4c": 177, "abcdef8b16c2b": 177, "acbdef8b16c2b": 177, "abdc16b2c": 177, "abdec16b2c": 177, "abdefc16b2c": 177, "abedc16b": 177, "acb16a2b": 177, "acdb16a4b": 177, "acdeb16a2b": 177, "adcb16a": 177, "acbd4c8b8c4b": 177, "acbde4c8b8c4b": 177, "acbdef4c8b8c4b": 177, "abc32a16b": 177, "abcd16a32b": 177, "abcd32a16b": 177, "abcde32a16b": 177, "ab48a16b": 177, "ab48a32b": 177, "abc40a16b": 177, "abc40a32b": 177, "abc48b16c": 177, "abc48b32c": 177, "abcd40a16b": 177, "abcd40a32b": 177, "ba16a16b": 177, "ba16a32b": 177, "ba16a48b": 177, "ba16a64b": 177, "ba16a16b2a": 177, "ba16a32b2a": 177, "ba16a48b2a": 177, "ba16a64b2a": 177, "ba16a16b4a": 177, "ba16a32b4a": 177, "ba16a48b4a": 177, "ba16a64b4a": 177, "decba16a": 177, "decba8a": 177, "acb16b16c": 177, "acb16b32c": 177, "acb16b48c": 177, "acb16b64c": 177, "acb16b16c2b": 177, "acb16b32c2b": 177, "acb16b48c2b": 177, "acb16b64c2b": 177, "acb16b16c4b": 177, "acb16b32c4b": 177, "acb16b48c4b": 177, "acb16b64c4b": 177, "acb24a": 177, "acdb24a": 177, "acdeb24a": 177, "abdc24b": 177, "abdec24b": 177, "abdefc24b": 177, "acb24a2b": 177, "acdb24a2b": 177, "acdeb24a2b": 177, "abdc24b2c": 177, "abdec24b2c": 177, "abdefc24b2c": 177, "acb24a4b": 177, "acdb24a4b": 177, "acdeb24a4b": 177, "abdc24b4c": 177, "abdec24b4c": 177, "abdefc24b4c": 177, "ab8b32a": 177, "abc8b32a": 177, "abcd8b32a": 177, "abcde8b32a": 177, "ab8b24a": 177, "abc8b24a": 177, "abcd8b24a": 177, "abcde8b24a": 177, "ab8b16a": 177, "abc8b16a": 177, "abcd8b16a": 177, "abcde8b16a": 177, "ab8b8a": 177, "format_tag_last": 177, "ncdhw16c": 177, "ncdhw4c": 177, "ncdhw8c": 177, "nchw4c": 177, "ncw16c": 177, "ncw4c": 177, "ncw8c": 177, "ncw16n16c": 177, "nchw16n16c": 177, "ncdhw16n16c": 177, "ncdhw32n32c": 177, "nchw32n32c": 177, "iohw16i16o": 177, "oi16i16o": 177, "oi16i32o": 177, "oi16i48o": 177, "oi16i64o": 177, "oi8i16o2i": 177, "oi8i32o2i": 177, "oi8i64o2i": 177, "oi4i8o4i": 177, "oi4i16o4i": 177, "oi4i24o4i": 177, "oi4i32o4i": 177, "oi4i64o4i": 177, "ohwi32o": 177, "iodhw16i16o": 177, "giohw16i16o": 177, "gohwi32o": 177, "goidhw16g": 177, "iow16o16i": 177, "oiw16i16o": 177, "oiw16i32o": 177, "oiw16i48o": 177, "oiw16i64o": 177, "iow16i16o": 177, "giow16i16o": 177, "oiw16o16i": 177, "oiw16o": 177, "oiw4i8o4i": 177, "oiw4i16o4i": 177, "oiw4i24o4i": 177, "oiw4i32o4i": 177, "oiw4i64o4i": 177, "oiw2i8o4i": 177, "oiw4i4o": 177, "oiw4o4i": 177, "oiw4o": 177, "oiw8i16o2i": 177, "oiw8i32o2i": 177, "oiw8i64o2i": 177, "oiw8i8o": 177, "oiw8o16i2o": 177, "oiw8o8i": 177, "oiw8o4i": 177, "oiw16i16o4i": 177, "oiw16i32o4i": 177, "oiw16i48o4i": 177, "oiw16i64o4i": 177, "oiw16i16o2i": 177, "oiw16i32o2i": 177, "oiw16i48o2i": 177, "oiw16i64o2i": 177, "oiw16o16i2o": 177, "owi16o": 177, "owi16o2i": 177, "iwo16i": 177, "iwo16i2o": 177, "iwo16i4o": 177, "owi4o": 177, "owi8o": 177, "owi8o2i": 177, "owi8o4i": 177, "iohw16o16i": 177, "ohwi16o": 177, "ohwi16o2i": 177, "ihwo16i": 177, "ihwo16i2o": 177, "ihwo16i4o": 177, "ohwi4o": 177, "ohwi8o": 177, "ohwi8o2i": 177, "ohwi8o4i": 177, "oihw16i16o": 177, "oihw16i32o": 177, "oihw16i48o": 177, "oihw16i64o": 177, "oihw16o16i": 177, "oihw16o": 177, "oihw4i8o4i": 177, "oihw4i16o4i": 177, "oihw4i24o4i": 177, "oihw4i32o4i": 177, "oihw4i64o4i": 177, "oihw4i4o": 177, "oihw4o4i": 177, "oihw4o": 177, "oihw8i16o2i": 177, "oihw8i32o2i": 177, "oihw8i64o2i": 177, "oihw8i8o": 177, "oihw8o16i2o": 177, "oihw8o8i": 177, "oihw8o4i": 177, "oihw2i8o4i": 177, "iodhw16o16i": 177, "odhwi16o": 177, "odhwi16o2i": 177, "idhwo16i": 177, "idhwo16i2o": 177, "idhwo16i4o": 177, "odhwi4o": 177, "odhwi8o": 177, "odhwi8o2i": 177, "odhwi8o4i": 177, "oidhw16i16o": 177, "oidhw16i32o": 177, "oidhw16i48o": 177, "oidhw16i64o": 177, "oidhw16o16i": 177, "oidhw16o16i2o": 177, "oidhw16o": 177, "oidhw4i4o": 177, "oidhw4o4i": 177, "oidhw4o": 177, "oidhw8i16o2i": 177, "oidhw8i32o2i": 177, "oidhw8i64o2i": 177, "oidhw4i8o4i": 177, "oidhw4i16o4i": 177, "oidhw16i16o4i": 177, "oidhw16i32o4i": 177, "oidhw16i48o4i": 177, "oidhw16i64o4i": 177, "oidhw16i16o2i": 177, "oidhw16i32o2i": 177, "oidhw16i48o2i": 177, "oidhw16i64o2i": 177, "oidhw4i24o4i": 177, "oidhw4i32o4i": 177, "oidhw4i64o4i": 177, "oidhw2i8o4i": 177, "oidhw8i8o": 177, "oidhw8o8i": 177, "oidhw8o4i": 177, "giow16o16i": 177, "goiw16i16o": 177, "goiw16o16i": 177, "goiw16o": 177, "goiw4i16o4i": 177, "goiw2i8o4i": 177, "goiw4i4o": 177, "goiw4o4i": 177, "goiw4o": 177, "goiw8i16o2i": 177, "goiw8i8o": 177, "goiw8o16i2o": 177, "goiw8o8i": 177, "goiw8o4i": 177, "goiw16i16o4i": 177, "goiw16i16o2i": 177, "goiw16o16i2o": 177, "gowi16o": 177, "gowi16o2i": 177, "giwo16i": 177, "giwo16i2o": 177, "giwo16i4o": 177, "gowi4o": 177, "gowi8o": 177, "gowi8o2i": 177, "gowi8o4i": 177, "goiw8g": 177, "goiw16g": 177, "giohw16o16i": 177, "gohwi16o": 177, "gohwi16o2i": 177, "gihwo16i": 177, "gihwo16i2o": 177, "gihwo16i4o": 177, "gohwi4o": 177, "gohwi8o": 177, "gohwi8o2i": 177, "gohwi8o4i": 177, "goihw16g": 177, "goihw16i16o": 177, "goihw16o16i": 177, "goihw16o": 177, "goihw4i16o4i": 177, "goihw2i8o4i": 177, "goihw4i4o": 177, "goihw4o4i": 177, "goihw4o": 177, "goihw8g": 177, "goihw8i16o2i": 177, "goihw8i8o": 177, "goihw8o16i2o": 177, "oiw4o8i8o4i": 177, "oidhw4o8i8o4i": 177, "oihw4o8i8o4i": 177, "oihw2o8i8o2i": 177, "goiw4o8i8o4i": 177, "goidhw4o8i8o4i": 177, "goihw4o8i8o4i": 177, "goihw2o8i8o2i": 177, "oihw16i16o4i": 177, "oihw16i32o4i": 177, "oihw16i48o4i": 177, "oihw16i64o4i": 177, "oihw16i16o2i": 177, "oihw16i32o2i": 177, "oihw16i48o2i": 177, "oihw16i64o2i": 177, "oihw16o16i2o": 177, "goihw16i16o4i": 177, "goihw16i16o2i": 177, "goihw16o16i2o": 177, "goihw8o8i": 177, "goihw8o4i": 177, "giodhw16i16o": 177, "giodhw16o16i": 177, "godhwi16o": 177, "godhwi16o2i": 177, "gidhwo16i": 177, "gidhwo16i2o": 177, "gidhwo16i4o": 177, "godhwi4o": 177, "godhwi8o": 177, "godhwi8o2i": 177, "godhwi8o4i": 177, "goidhw16i16o": 177, "goidhw16o16i": 177, "goidhw16o16i2o": 177, "goidhw16o": 177, "goidhw4i4o": 177, "goidhw4o4i": 177, "goidhw4o": 177, "goidhw8i16o2i": 177, "goidhw4i16o4i": 177, "goidhw16i16o4i": 177, "goidhw16i16o2i": 177, "goidhw2i8o4i": 177, "goidhw8i8o": 177, "goidhw8o8i": 177, "goidhw8o4i": 177, "goiw2i4o2i": 177, "goihw2i4o2i": 177, "goidhw2i4o2i": 177, "goiw2o4i2o": 177, "goihw2o4i2o": 177, "goidhw2o4i2o": 177, "goiw4i8o2i": 177, "goihw4i8o2i": 177, "goidhw4i8o2i": 177, "goiw4o8i2o": 177, "goihw4o8i2o": 177, "goidhw4o8i2o": 177, "ldoi16o": 177, "ldoi32o": 177, "ldoi32o4i": 177, "ldgoi16o": 177, "ldgoi32o": 177, "ldgoi32o2i": 177, "ldgoi32o4i": 177, "owi16o4i": 177, "ohwi16o4i": 177, "gowi16o4i": 177, "gohwi16o4i": 177, "odhwi16o4i": 177, "godhwi16o4i": 177, "owi32o": 177, "owi32o2i": 177, "owi32o4i": 177, "owi48o": 177, "owi48o2i": 177, "owi48o4i": 177, "owi64o": 177, "owi64o2i": 177, "owi64o4i": 177, "iwo32i": 177, "iwo32i2o": 177, "iwo32i4o": 177, "iwo48i": 177, "iwo48i2o": 177, "iwo48i4o": 177, "iwo64i": 177, "iwo64i2o": 177, "iwo64i4o": 177, "wio2i": 177, "wio4i": 177, "gowi32o": 177, "gowi32o2i": 177, "gowi32o4i": 177, "gowi48o": 177, "gowi48o2i": 177, "gowi48o4i": 177, "gowi64o": 177, "gowi64o2i": 177, "gowi64o4i": 177, "giwo32i": 177, "giwo32i2o": 177, "giwo32i4o": 177, "giwo48i": 177, "giwo48i2o": 177, "giwo48i4o": 177, "giwo64i": 177, "giwo64i2o": 177, "giwo64i4o": 177, "gwio": 177, "gwio2i": 177, "gwio4i": 177, "ohwi32o2i": 177, "ohwi32o4i": 177, "ohwi48o": 177, "ohwi48o2i": 177, "ohwi48o4i": 177, "ohwi64o": 177, "ohwi64o2i": 177, "ohwi64o4i": 177, "ihwo32i": 177, "ihwo32i2o": 177, "ihwo32i4o": 177, "ihwo48i": 177, "ihwo48i2o": 177, "ihwo48i4o": 177, "ihwo64i": 177, "ihwo64i2o": 177, "ihwo64i4o": 177, "hwio2i": 177, "hwio4i": 177, "gohwi32o2i": 177, "gohwi32o4i": 177, "gohwi48o": 177, "gohwi48o2i": 177, "gohwi48o4i": 177, "gohwi64o": 177, "gohwi64o2i": 177, "gohwi64o4i": 177, "gihwo32i": 177, "gihwo32i2o": 177, "gihwo32i4o": 177, "gihwo48i": 177, "gihwo48i2o": 177, "gihwo48i4o": 177, "gihwo64i": 177, "gihwo64i2o": 177, "gihwo64i4o": 177, "ghwio": 177, "ghwio2i": 177, "ghwio4i": 177, "odhwi32o": 177, "odhwi32o2i": 177, "odhwi32o4i": 177, "odhwi48o": 177, "odhwi48o2i": 177, "odhwi48o4i": 177, "odhwi64o": 177, "odhwi64o2i": 177, "odhwi64o4i": 177, "idhwo32i": 177, "idhwo32i2o": 177, "idhwo32i4o": 177, "idhwo48i": 177, "idhwo48i2o": 177, "idhwo48i4o": 177, "idhwo64i": 177, "idhwo64i2o": 177, "idhwo64i4o": 177, "dhwio2i": 177, "dhwio4i": 177, "godhwi32o": 177, "godhwi32o2i": 177, "godhwi32o4i": 177, "godhwi48o": 177, "godhwi48o2i": 177, "godhwi48o4i": 177, "godhwi64o": 177, "godhwi64o2i": 177, "godhwi64o4i": 177, "gidhwo32i": 177, "gidhwo32i2o": 177, "gidhwo32i4o": 177, "gidhwo48i": 177, "gidhwo48i2o": 177, "gidhwo48i4o": 177, "gidhwo64i": 177, "gidhwo64i2o": 177, "gidhwo64i4o": 177, "gdhwio": 177, "gdhwio2i": 177, "gdhwio4i": 177, "ldio32i": 177, "ldgio16i": 177, "ldgio32i": 177, "ldgio32i2o": 177, "ncdhw32c": 177, "nchw32c": 177, "ncw32c": 177, "ncw32n16c": 177, "nchw32n16c": 177, "ncdhw32n16c": 177, "ncw32n32c": 177, "oi16i16o4i": 177, "iow8o16i2o": 177, "iohw8o16i2o": 177, "owhi16o": 177, "oidhw8o16i2o": 177, "iodhw8o16i2o": 177, "goiw4g": 177, "giow8o16i2o": 177, "goiw32g": 177, "goihw4g": 177, "giohw8o16i2o": 177, "goihw32g": 177, "gowhi16o": 177, "iow4i8o8i4o": 177, "iohw4i8o8i4o": 177, "iodhw4i8o8i4o": 177, "giow4i8o8i4o": 177, "giohw4i8o8i4o": 177, "giodhw4i8o8i4o": 177, "goidhw8o16i2o": 177, "giodhw8o16i2o": 177, "goidhw32g": 177, "oi16i32o4i": 177, "oi16i48o4i": 177, "oi16i64o4i": 177, "oi16i16o2i": 177, "oi16i32o2i": 177, "oi16i48o2i": 177, "oi16i64o2i": 177, "abdec16c16b4c": 177, "acb16b16a2b": 177, "abdc16c16b2c": 177, "acb16b16a4b": 177, "abdc16c16b4c": 177, "acdb16b16a2b": 177, "abdefc16c16b4c": 177, "acdeb16b16a4b": 177, "acb16b32a2b": 177, "acb16b32a4b": 177, "acb16b48a2b": 177, "acb16b48a4b": 177, "acb16b64a2b": 177, "acb16b64a4b": 177, "abdc16c32b2c": 177, "abdc16c32b4c": 177, "abdc16c48b2c": 177, "abdc16c48b4c": 177, "abdc16c64b2c": 177, "abdc16c64b4c": 177, "acdb16b32a2b": 177, "acdb16b32a4b": 177, "acdb16b48a2b": 177, "acdb16b48a4b": 177, "acdb16b64a2b": 177, "acdb16b64a4b": 177, "abdec16c32b2c": 177, "abdec16c32b4c": 177, "abdec16c48b2c": 177, "abdec16c48b4c": 177, "abdec16c64b2c": 177, "abdec16c64b4c": 177, "acdeb16b32a2b": 177, "acdeb16b32a4b": 177, "acdeb16b48a2b": 177, "acdeb16b48a4b": 177, "acdeb16b64a2b": 177, "acdeb16b64a4b": 177, "abdefc16c32b2c": 177, "abdefc16c32b4c": 177, "abdefc16c48b2c": 177, "abdefc16c48b4c": 177, "abdefc16c64b2c": 177, "abdefc16c64b4c": 177, "owi16i16o2i": 177, "gowi16i16o2i": 177, "ohwi16i16o2i": 177, "gohwi16i16o2i": 177, "odhwi16i16o2i": 177, "godhwi16i16o2i": 177, "owi16i16o4i": 177, "gowi16i16o4i": 177, "ohwi16i16o4i": 177, "gohwi16i16o4i": 177, "odhwi16i16o4i": 177, "godhwi16i16o4i": 177, "owi16i32o2i": 177, "owi16i32o4i": 177, "owi16i48o2i": 177, "owi16i48o4i": 177, "owi16i64o2i": 177, "owi16i64o4i": 177, "gowi16i32o2i": 177, "gowi16i32o4i": 177, "gowi16i48o2i": 177, "gowi16i48o4i": 177, "gowi16i64o2i": 177, "gowi16i64o4i": 177, "ohwi16i32o2i": 177, "ohwi16i32o4i": 177, "ohwi16i48o2i": 177, "ohwi16i48o4i": 177, "ohwi16i64o2i": 177, "ohwi16i64o4i": 177, "gohwi16i32o2i": 177, "gohwi16i32o4i": 177, "gohwi16i48o2i": 177, "gohwi16i48o4i": 177, "gohwi16i64o2i": 177, "gohwi16i64o4i": 177, "odhwi16i32o2i": 177, "odhwi16i32o4i": 177, "odhwi16i48o2i": 177, "odhwi16i48o4i": 177, "odhwi16i64o2i": 177, "odhwi16i64o4i": 177, "idhwo16o32i2o": 177, "idhwo16o32i4o": 177, "idhwo16o48i2o": 177, "idhwo16o48i4o": 177, "idhwo16o64i2o": 177, "idhwo16o64i4o": 177, "godhwi16i32o2i": 177, "godhwi16i32o4i": 177, "godhwi16i48o2i": 177, "godhwi16i48o4i": 177, "godhwi16i64o2i": 177, "godhwi16i64o4i": 177, "gidhwo16o32i2o": 177, "gidhwo16o32i4o": 177, "gidhwo16o48i2o": 177, "gidhwo16o48i4o": 177, "gidhwo16o64i2o": 177, "gidhwo16o64i4o": 177, "iwo16o16i2o": 177, "iwo16o16i4o": 177, "ihwo16o16i2o": 177, "ihwo16o16i4o": 177, "idhwo16o16i2o": 177, "idhwo16o16i4o": 177, "giwo16o16i2o": 177, "giwo16o16i4o": 177, "gihwo16o16i2o": 177, "gihwo16o16i4o": 177, "gidhwo16o16i2o": 177, "gidhwo16o16i4o": 177, "iwo16o32i2o": 177, "iwo16o32i4o": 177, "iwo16o48i2o": 177, "iwo16o48i4o": 177, "iwo16o64i2o": 177, "iwo16o64i4o": 177, "giwo16o32i2o": 177, "giwo16o32i4o": 177, "giwo16o48i2o": 177, "giwo16o48i4o": 177, "giwo16o64i2o": 177, "giwo16o64i4o": 177, "ihwo16o32i2o": 177, "ihwo16o32i4o": 177, "ihwo16o48i2o": 177, "ihwo16o48i4o": 177, "ihwo16o64i2o": 177, "ihwo16o64i4o": 177, "gihwo16o32i2o": 177, "gihwo16o32i4o": 177, "gihwo16o48i2o": 177, "gihwo16o48i4o": 177, "gihwo16o64i2o": 177, "gihwo16o64i4o": 177, "abdec16c16b2c": 177, "abdefc16c16b2c": 177, "acdb16b16a4b": 177, "acdeb16b16a2b": 177, "hwiog16g": 177, "hwiog8g": 177, "abc4a2b": 177, "abc8a2b": 177, "abcd4a2b": 177, "abcde4a2b": 177, "abcde8a2b": 177, "abcd4a8b8a2b": 177, "ncdhw40n32c": 177, "nchw40n32c": 177, "ncw40n32c": 177, "oidhw4o8i8o2i": 177, "oihw4o8i8o2i": 177, "oiw4o8i8o2i": 177, "goidhw4o8i8o2i": 177, "goihw4o8i8o2i": 177, "goiw4o8i8o2i": 177, "iodhw4i8o8i2o": 177, "iohw4i8o8i2o": 177, "iow4i8o8i2o": 177, "giodhw4i8o8i2o": 177, "giohw4i8o8i2o": 177, "giow4i8o8i2o": 177, "abcd8b2c": 177, "abcde40a16b": 177, "abcde40a32b": 177, "abcde8b2c": 177, "abcde4a8b8a2b": 177, "abc4a8b8a2b": 177, "abcdef4b8c8b2c": 177, "abcde4b8c8b2c": 177, "abcd4b8c8b2c": 177, "bacde4b8a8b2a": 177, "bacd4b8a8b2a": 177, "bac4b8a8b2a": 177, "acbdef4c8b8c2b": 177, "acbde4c8b8c2b": 177, "acbd4c8b8c2b": 177, "abcdef8b2c": 177, "ab32a16b": 177, "ab32a32b": 177, "ba4b8a8b2a": 177, "ba4b8a8b4a": 177, "abc32b16c": 177, "abc32b32c": 177, "acb4c8b8c2b": 177, "acb4c8b8c4b": 177, "abc2b8a16b4a": 177, "abcd2b8a16b4a": 177, "abcde2b8a16b4a": 177, "abc2a8b16a4b": 177, "abc2a8b16a2b": 177, "abc2b32a8b": 177, "abcd2a8b16a4b": 177, "abcd2a8b16a2b": 177, "acbd2c8b16c2b": 177, "abcd2b32a8b": 177, "abcd2c8b16c2b": 177, "abcde2a8b16a4b": 177, "abcde2a8b16a2b": 177, "acbde2c8b16c2b": 177, "abcde2b32a8b": 177, "abc2b8c16b2c": 177, "abcd2b8c16b2c": 177, "abcde2b8c16b2c": 177, "abcdef2b8c16b2c": 177, "bacde2b8a16b4a": 177, "bacd2b8a16b4a": 177, "bac2b8a16b4a": 177, "bacde2b8a16b2a": 177, "bacd2b8a16b2a": 177, "bac2b8a16b2a": 177, "abcde2c8b16c2b": 177, "abcdef2c8b16c2b": 177, "acbdef2c8b16c2b": 177, "abcd2b8c16b4c": 177, "abcde2b8c16b4c": 177, "ncdhw40n16c": 177, "ncw40n16c": 177, "nchw40n16c": 177, "ncw2c32n8c": 177, "nchw2c32n8c": 177, "ncdhw2c32n8c": 177, "oiw2i8o16i4o": 177, "oihw2i8o16i4o": 177, "oidhw2i8o16i4o": 177, "oiw2o8i16o4i": 177, "oiw2o8i16o2i": 177, "iow2i8o16i4o": 177, "iow2i8o16i2o": 177, "oihw2o8i16o4i": 177, "oihw2o8i16o2i": 177, "iohw2i8o16i4o": 177, "iohw2i8o16i2o": 177, "oidhw2o8i16o4i": 177, "oidhw2o8i16o2i": 177, "iodhw2i8o16i4o": 177, "iodhw2i8o16i2o": 177, "goiw2o8i16o2i": 177, "giow2i8o16i2o": 177, "giohw2i8o16i2o": 177, "giodhw2i8o16i2o": 177, "goihw2o8i16o2i": 177, "goidhw2o8i16o2i": 177, "goiw2o8i16o4i": 177, "goihw2o8i16o4i": 177, "ba4b8a16b2a": 177, "ba4b8a16b4a": 177, "acb4c8b16c2b": 177, "acb4c8b16c4b": 177, "acb16c2b": 177, "acb16c4b": 177, "ba16b2a": 177, "ba16b4a": 177, "abc16b16c": 177, "abc16b32c": 177, "ab16a16b": 177, "ab16a32b": 177, "abcde16a16b2a": 177, "abcdef16b16c2b": 177, "acedb16a": 177, "abdfec16b": 177, "odwhi16o": 177, "godwhi16o": 177, "abdec64e2c": 177, "abdec64e4c": 177, "ldgoi64o2i": 177, "ldgoi64o4i": 177, "abcd4c": 177, "abcde4c": 177, "abcdef4c": 177, "abcde32c": 177, "abcdef32c": 177, "acdefb16b32c2b": 177, "acdefb16b32c4b": 177, "acdefb16b48c2b": 177, "acdefb16b48c4b": 177, "acdefb16b64c2b": 177, "acdefb16b64c4b": 177, "bcdea16a32b2a": 177, "bcdea16a32b4a": 177, "bcdea16a48b2a": 177, "bcdea16a48b4a": 177, "bcdea16a64b2a": 177, "bcdea16a64b4a": 177, "acdefb32c": 177, "acdefb32c2b": 177, "acdefb32c4b": 177, "acdefb48c": 177, "acdefb48c2b": 177, "acdefb48c4b": 177, "acdefb64c": 177, "acdefb64c2b": 177, "acdefb64c4b": 177, "bcdea32b": 177, "bcdea32b2a": 177, "bcdea32b4a": 177, "bcdea48b": 177, "bcdea48b2a": 177, "bcdea48b4a": 177, "bcdea64b": 177, "bcdea64b2a": 177, "bcdea64b4a": 177, "bca32b": 177, "bca32b2a": 177, "bca32b4a": 177, "bca48b": 177, "bca48b2a": 177, "bca48b4a": 177, "bca64b": 177, "bca64b2a": 177, "bca64b4a": 177, "acdb32c": 177, "acdb32c2b": 177, "acdb32c4b": 177, "acdb48c": 177, "acdb48c2b": 177, "acdb48c4b": 177, "acdb64c": 177, "acdb64c2b": 177, "acdb64c4b": 177, "bca16a16b2a": 177, "bca16a16b4a": 177, "bcda16a16b2a": 177, "bcda16a16b4a": 177, "bcdea16a16b2a": 177, "bcdea16a16b4a": 177, "acdb16b16c2b": 177, "acdb16b16c4b": 177, "acdeb16b16c2b": 177, "acdeb16b16c4b": 177, "acdefb16b16c2b": 177, "acdefb16b16c4b": 177, "bca16a32b2a": 177, "bca16a32b4a": 177, "bca16a48b2a": 177, "bca16a48b4a": 177, "bca16a64b2a": 177, "bca16a64b4a": 177, "acdb16b32c2b": 177, "acdb16b32c4b": 177, "acdb16b48c2b": 177, "acdb16b48c4b": 177, "acdb16b64c2b": 177, "acdb16b64c4b": 177, "bcda16a32b2a": 177, "bcda16a32b4a": 177, "bcda16a48b2a": 177, "bcda16a48b4a": 177, "bcda16a64b2a": 177, "bcda16a64b4a": 177, "acdeb16b32c2b": 177, "acdeb16b32c4b": 177, "acdeb16b48c2b": 177, "acdeb16b48c4b": 177, "acdeb16b64c2b": 177, "acdeb16b64c4b": 177, "bca16b": 177, "bca16b2a": 177, "bca16b4a": 177, "bcda16b": 177, "bcda16b2a": 177, "bcda16b4a": 177, "bcdea16b": 177, "bcdea16b2a": 177, "bcdea16b4a": 177, "acdb16c": 177, "acdb16c2b": 177, "acdb16c4b": 177, "acdeb16c": 177, "acdeb16c2b": 177, "acdeb16c4b": 177, "acdefb16c": 177, "acdefb16c2b": 177, "acdefb16c4b": 177, "bcda32b": 177, "bcda32b2a": 177, "bcda32b4a": 177, "bcda48b": 177, "bcda48b2a": 177, "bcda48b4a": 177, "bcda64b": 177, "bcda64b2a": 177, "bcda64b4a": 177, "acdeb32c": 177, "acdeb32c2b": 177, "acdeb32c4b": 177, "acdeb48c": 177, "acdeb48c2b": 177, "acdeb48c4b": 177, "acdeb64c": 177, "acdeb64c2b": 177, "acdeb64c4b": 177, "nchw16n32c": 177, "goiw4i": 177, "goiw32i": 177, "goihw4i": 177, "goihw32i": 177, "goidhw4i": 177, "goidhw32i": 177, "cab": 177, "cdab": 177, "cdeab": 177, "woi": 177, "hwoi": 177, "dhwoi": 177, "owi24o": 177, "ohwi24o": 177, "odhwi24o": 177, "gowi24o": 177, "gohwi24o": 177, "godhwi24o": 177, "owi24o2i": 177, "ohwi24o2i": 177, "odhwi24o2i": 177, "gowi24o2i": 177, "gohwi24o2i": 177, "godhwi24o2i": 177, "owi24o4i": 177, "ohwi24o4i": 177, "odhwi24o4i": 177, "gowi24o4i": 177, "gohwi24o4i": 177, "godhwi24o4i": 177, "oi8i32o": 177, "oiw8i32o": 177, "oihw8i32o": 177, "oidhw8i32o": 177, "oi8i24o": 177, "oiw8i24o": 177, "oihw8i24o": 177, "oidhw8i24o": 177, "oi8i16o": 177, "oiw8i16o": 177, "oihw8i16o": 177, "oidhw8i16o": 177, "oi8i8o": 177, "ab4b8a4b": 177, "ab4b24a4b": 177, "abc4b8a4b": 177, "abc4b24a4b": 177, "abcd4b8a4b": 177, "abcd4b24a4b": 177, "abcde4b8a4b": 177, "abcde4b24a4b": 177, "bca8b": 177, "bca8b2a": 177, "bcda8b": 177, "bcda8b2a": 177, "bcdea8b": 177, "bcdea8b2a": 177, "acdb8c": 177, "acdb8c2b": 177, "acdeb8c": 177, "acdeb8c2b": 177, "acdefb8c": 177, "acdefb8c2b": 177, "bca24b": 177, "bca24b2a": 177, "bcda24b": 177, "bcda24b2a": 177, "bcdea24b": 177, "bcdea24b2a": 177, "acdb24c": 177, "acdb24c2b": 177, "acdeb24c": 177, "acdeb24c2b": 177, "acdefb24c": 177, "acdefb24c2b": 177, "iwo8i": 177, "iwo8i2o": 177, "iwo24i": 177, "iwo24i2o": 177, "ihwo8i": 177, "ihwo8i2o": 177, "ihwo24i": 177, "ihwo24i2o": 177, "idhwo8i": 177, "idhwo8i2o": 177, "idhwo24i": 177, "idhwo24i2o": 177, "giwo8i": 177, "giwo8i2o": 177, "giwo24i": 177, "giwo24i2o": 177, "gihwo8i": 177, "gihwo8i2o": 177, "gihwo24i": 177, "gihwo24i2o": 177, "gidhwo8i": 177, "gidhwo8i2o": 177, "gidhwo24i": 177, "gidhwo24i2o": 177, "ab8b24a2b": 177, "abc8b24a2b": 177, "abcd8b24a2b": 177, "abcde8b24a2b": 177, "ab8b8a2b": 177, "abc8b8a2b": 177, "abcd8b8a2b": 177, "abcde8b8a2b": 177, "oi8i8o2i": 177, "oi8i24o2i": 177, "oiw8i8o2i": 177, "oiw8i24o2i": 177, "oihw8i8o2i": 177, "oihw8i24o2i": 177, "oidhw8i8o2i": 177, "oidhw8i24o2i": 177, "bca8b4a": 177, "bcda8b4a": 177, "bcdea8b4a": 177, "acdb8c4b": 177, "acdeb8c4b": 177, "acdefb8c4b": 177, "bca24b4a": 177, "bcda24b4a": 177, "bcdea24b4a": 177, "acdb24c4b": 177, "acdeb24c4b": 177, "acdefb24c4b": 177, "dnnl_sparse_encoding_undef": [178, 197], "dnnl_csr": [178, 197], "use_global_stat": 179, "use_scal": [179, 205, 227, 314, 346], "use_shift": [179, 205, 227, 314, 346], "fuse_norm_relu": [179, 205, 314], "fuse_norm_add_relu": 179, "0x0u": 180, "0x1u": [180, 201], "0x2u": [180, 201], "0x4u": 180, "0x8u": 180, "0x10u": 180, "wrt": [180, 216, 330], "dnnl_ocl_interop_usm": [181, 182, 266], "dnnl_ocl_interop_buff": [181, 182, 266], "dnnl_ocl_typ": 182, "dnnl_undefined_primit": [183, 184, 248], "dnnl_reorder": [183, 184], "dnnl_shuffl": [183, 184], "dnnl_concat": [183, 184], "dnnl_sum": [183, 184, 248], "dnnl_convolut": [183, 184, 248, 456], "dnnl_deconvolut": [183, 184], "dnnl_eltwis": [183, 184, 248], "dnnl_lrn": [183, 184], "dnnl_batch_norm": [183, 184], "dnnl_inner_product": [183, 184], "dnnl_rnn": [183, 184], "dnnl_binari": [183, 184, 248, 456], "dnnl_matmul": [183, 184], "dnnl_resampl": [183, 184], "dnnl_pool": [183, 184], "dnnl_reduct": [183, 184], "dnnl_prelu": [183, 184], "dnnl_softmax": [183, 184], "dnnl_layer_norm": [183, 184], "summat": [183, 191, 192, 487], "dnnl_gemm": 184, "dnnl_primitive_kind_max": 184, "dnnl_profiling_data_kind_undef": [185, 186], "dnnl_profiling_data_kind_tim": [185, 186], "nanosecond": [185, 186], "dnnl_prop_kind_undef": [187, 188], "dnnl_forward": [187, 188, 208, 215, 220, 320, 329, 336], "dnnl_backward_weight": [187, 188], "backward_bia": 187, "dnnl_backward_bia": [187, 188], "160": 188, "192": [188, 209, 356], "193": 188, "dnnl_query_undef": [189, 190], "dnnl_query_engin": [189, 190], "primitive_kind": 189, "dnnl_query_primitive_kind": [189, 190], "num_of_inputs_s32": 189, "dnnl_query_num_of_inputs_s32": [189, 190, 271], "num_of_outputs_s32": 189, "dnnl_query_num_of_outputs_s32": [189, 190, 271], "time_estimate_f64": 189, "dnnl_query_time_estimate_f64": [189, 190], "dnnl_query_memory_consumption_s64": [189, 190], "scratchpad_engin": [189, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "dnnl_query_scratchpad_engin": [189, 190], "reorder_src_engin": 189, "dnnl_query_reorder_src_engin": [189, 190], "reorder_dst_engin": 189, "dnnl_query_reorder_dst_engin": [189, 190], "impl_info_str": [189, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "dnnl_query_impl_info_str": [189, 190, 271], "dnnl_query_prop_kind": [189, 190], "cache_blob_id_size_s64": 189, "dnnl_query_cache_blob_id_size_s64": [189, 190], "cache_blob_id": [189, 243, 266, 305], "dnnl_query_cache_blob_id": [189, 190], "dnnl_query_dil": [189, 190], "dnnl_query_padding_l": [189, 190], "dnnl_query_padding_r": [189, 190], "epsilon_f32": 189, "dnnl_query_epsilon_f32": [189, 190], "dnnl_query_flag": [189, 190], "alg_kind": [189, 243, 248, 250, 254, 256, 257, 263, 267, 273, 275, 279], "dnnl_query_alg_kind": [189, 190], "alpha_f32": 189, "dnnl_query_alpha_f32": [189, 190], "beta_f32": 189, "dnnl_query_beta_f32": [189, 190], "axis_s32": 189, "dnnl_query_axis_s32": [189, 190], "local_size_s64": 189, "dnnl_query_local_size_s64": [189, 190], "k_f32": 189, "dnnl_query_k_f32": [189, 190], "p_f32": 189, "dnnl_query_p_f32": [189, 190], "dnnl_query_factor": [189, 190], "cell_kind": [189, 476], "dnnl_query_cell_kind": [189, 190], "dnnl_query_direct": [189, 190], "activation_kind": 189, "dnnl_query_activation_kind": [189, 190], "dnnl_query_kernel": [189, 190], "group_size_s64": 189, "dnnl_query_group_size_s64": [189, 190], "src_md": [189, 205, 207, 208, 213, 222, 223, 226, 227, 228, 230, 233, 234, 235, 236, 237, 239, 240, 241, 314, 318, 320, 325, 338, 340, 344, 346, 349, 353, 357, 359, 361, 363, 365, 368, 370, 372, 467, 471], "dnnl_query_src_md": [189, 190, 208, 215, 271, 320, 329], "diff_src_md": 189, "dnnl_query_diff_src_md": [189, 190], "dnnl_query_weights_md": [189, 190, 208, 215, 271, 320, 329], "diff_weights_md": 189, "dnnl_query_diff_weights_md": [189, 190, 215, 329], "dst_md": [189, 205, 206, 208, 222, 226, 227, 228, 230, 233, 234, 235, 236, 237, 239, 240, 314, 316, 320, 338, 344, 346, 349, 353, 357, 359, 361, 363, 365, 368, 370, 467, 471], "dnnl_query_dst_md": [189, 190, 208, 215, 271, 320, 329], "diff_dst_md": 189, "dnnl_query_diff_dst_md": [189, 190, 215, 329], "dnnl_query_workspace_md": [189, 190, 208, 215, 271, 320, 329], "dnnl_query_scratchpad_md": [189, 190], "dnnl_query_exec_arg_md": [189, 190, 266, 271, 282], "ndims_s32": 189, "dnnl_query_ndims_s32": [189, 190, 265], "dnnl_query_dim": [189, 190, 265], "dnnl_query_data_typ": [189, 190, 265], "submemory_offset_s64": 189, "dnnl_query_submemory_offset_s64": [189, 190, 265], "padded_dim": [189, 265, 271, 450], "dnnl_query_padded_dim": [189, 190, 265], "padded_offset": 189, "dnnl_query_padded_offset": [189, 190, 265], "dnnl_query_format_kind": [189, 190, 265], "inner_nblks_s32": 189, "dnnl_query_inner_nblks_s32": [189, 190, 265], "dnnl_query_sparse_encod": [189, 190, 265], "nnz_s64": 189, "dnnl_query_nnz_s64": [189, 190, 265], "num_handles_s32": 189, "dnnl_query_num_handles_s32": [189, 190, 265], "dnnl_query_t": [189, 243, 265, 271, 302], "estim": [189, 190], "submemori": [189, 190, 265, 450], "dnnl_query_some_md": 190, "dnnl_query_max": 190, "dnnl_primitive_desc_queri": [190, 243, 271], "agre": [190, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "dnnl_query_": 190, "_engin": 190, "dnnl_engine_t": [190, 208, 215, 220, 243, 249, 250, 253, 254, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 290, 295, 297, 298, 320, 329, 336], "dnnl_primitive_kind_t": [190, 243, 248, 271, 302], "_s32": 190, "_s64": 190, "_f64": 190, "_str": 190, "char": [190, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 251, 277, 283, 294, 302, 307, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 338, 340, 341, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 409, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493, 494, 495], "_md": [190, 340, 356], "const_dnnl_memory_desc_t": [190, 208, 215, 243, 248, 249, 250, 253, 254, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 271, 273, 274, 275, 276, 278, 279, 281, 282, 320, 329], "_pd": [190, 340], "const_dnnl_primitive_desc_t": [190, 243, 249, 254, 256, 257, 260, 262, 263, 267, 268, 271, 275, 276, 278, 279, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 451, 453, 457, 459, 462, 468, 470, 472, 474, 477, 479, 481, 483, 487, 490, 492], "dnnl_alg_kind_t": [190, 243, 248, 250, 254, 256, 257, 263, 267, 271, 273, 275, 276, 279, 302], "dnnl_rnn_direction_t": [190, 243, 276, 302], "dnnl_data_type_t": [190, 243, 248, 255, 265, 293, 302, 412, 448], "dnnl_format_kind_t": [190, 243, 265], "dnnl_sparse_encoding_t": [190, 243, 265], "thumb": 190, "dnnl_primitive_desc_clon": [190, 243, 271], "scratch": 190, "stub": 190, "grad": 190, "dnnl_rnn_direction_undef": [191, 192], "unidirectional_left2right": [191, 204, 217, 218, 229, 238, 312, 332, 333, 351, 367], "dnnl_unidirectional_left2right": [191, 192], "unidirectional_right2left": 191, "dnnl_unidirectional_right2left": [191, 192], "dnnl_bidirectional_concat": [191, 192], "dnnl_bidirectional_sum": [191, 192], "unidirect": [191, 192, 217, 218, 238, 332, 333, 367], "bidirect": [191, 192, 217, 218, 332, 333], "dnnl_rnn_flags_undef": [193, 194], "dnnl_rnn_flags_diff_weights_overwrit": [193, 194], "dnnl_scratchpad_mode_librari": [195, 196, 248], "dnnl_scratchpad_mode_us": [195, 196, 248], "safeti": [195, 196], "in_ord": [200, 221, 337], "dnnl_stream_in_ord": [200, 201], "out_of_ord": 200, "dnnl_stream_out_of_ord": [200, 201], "default_flag": [200, 486], "dnnl_stream_default_flag": [200, 201, 208, 215, 220, 320, 329, 336], "dnnl_sycl_interop_usm": [202, 203, 282], "dnnl_sycl_interop_buff": [202, 203, 282], "dnnl_sycl_typ": 203, "copyright": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "2022": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "corpor": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 348, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "licens": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "apach": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "complianc": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "law": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "AS": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "basi": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "warranti": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "OF": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "express": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "permiss": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 342, 344, 346, 348, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "cmath": [204, 205, 206, 207, 211, 213, 214, 216, 219, 222, 223, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 312, 314, 316, 318, 323, 325, 327, 330, 334, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 368, 370, 372], "iostream": [204, 205, 206, 207, 211, 213, 214, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 239, 240, 241, 242, 312, 314, 316, 318, 323, 325, 327, 330, 334, 338, 341, 342, 344, 346, 349, 351, 353, 357, 363, 365, 368, 370, 372, 374], "example_util": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 336, 338, 340, 341, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374], "augru_exampl": [204, 243, 312], "example_allows_unimpl": [204, 210, 211, 218, 243, 312, 323, 333], "engine_stream": [204, 205, 206, 207, 213, 214, 222, 223, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 312, 314, 316, 318, 325, 327, 338, 340, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 368, 370, 372], "src_dim": [204, 205, 207, 213, 214, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 312, 314, 318, 325, 327, 338, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 368, 370, 372], "attention_dim": [204, 312], "weights_dim": [204, 214, 226, 229, 230, 234, 312, 327, 344, 351, 353, 359], "bias_dim": [204, 214, 226, 229, 230, 312, 327, 344, 351, 353], "dst_dim": [204, 214, 222, 226, 229, 230, 233, 234, 235, 237, 312, 327, 338, 344, 351, 353, 357, 359, 361, 365], "src_layer_data": [204, 229, 312, 351], "attention_data": [204, 312], "weights_layer_data": [204, 229, 312, 351], "weights_iter_data": [204, 229, 312, 351], "bias_data": [204, 214, 226, 229, 230, 312, 327, 344, 351, 353], "dst_layer_data": [204, 229, 312, 351], "sin": [204, 205, 206, 207, 214, 226, 227, 229, 230, 241, 312, 314, 316, 318, 327, 344, 346, 351, 353, 372], "src_layer_md": [204, 229, 312, 351], "attention_md": [204, 312], "bias_md": [204, 226, 229, 230, 312, 344, 351, 353], "dst_layer_md": [204, 229, 312, 351], "src_layer_mem": [204, 229, 312, 351], "attention_mem": [204, 312], "bias_mem": [204, 226, 229, 230, 312, 344, 351, 353], "dst_layer_mem": [204, 229, 312, 351], "user_weights_layer_mem": [204, 229, 312, 351], "user_weights_iter_mem": [204, 229, 312, 351], "write_to_dnnl_memori": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 336, 338, 340, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "augru_weights_layer_md": [204, 312], "augru_weights_iter_md": [204, 312], "src_iter_md": [204, 229, 312, 351], "dst_iter_md": [204, 229, 312, 351], "rnn_direct": [204, 217, 218, 229, 238, 276, 302, 312, 332, 333, 351, 367, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "augru_weights_layer_mem": [204, 312], "augru_weights_iter_mem": [204, 312], "src_iter_mem": [204, 229, 312, 351], "weights_iter_mem": [204, 229, 312, 351], "dst_iter_mem": [204, 229, 312, 351], "workspace_mem": [204, 205, 228, 229, 233, 312, 314, 349, 351, 357], "augru_prim": [204, 312], "augru_arg": [204, 312], "dnnl_arg_augru_attent": [204, 243, 271, 312], "read_from_dnnl_memori": [204, 205, 206, 207, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 243, 312, 314, 316, 318, 327, 336, 338, 340, 341, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 368, 370, 372], "argc": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 338, 340, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374], "argv": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 312, 314, 316, 318, 320, 323, 324, 325, 327, 329, 330, 334, 338, 340, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374], "handle_example_error": [204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 312, 314, 316, 318, 323, 324, 325, 327, 330, 334, 338, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372], "parse_engine_kind": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 312, 314, 316, 318, 320, 323, 324, 325, 327, 338, 340, 342, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 367, 368, 370, 372, 374], "2020": [205, 206, 207, 213, 214, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 314, 316, 318, 325, 327, 338, 344, 346, 349, 351, 353, 357, 359, 361, 363, 365, 368, 370, 372], "batch_normalization_exampl": [205, 243, 314], "227": [205, 208, 209, 211, 212, 215, 222, 226, 227, 228, 232, 234, 235, 236, 237, 239, 241, 314, 320, 321, 323, 324, 329, 338, 344, 346, 349, 356, 359, 361, 363, 365, 368, 372], "scaleshift_dim": [205, 227, 314, 346], "src_data": [205, 207, 213, 214, 222, 226, 227, 228, 230, 233, 234, 235, 236, 237, 239, 240, 241, 314, 318, 325, 327, 338, 344, 346, 349, 353, 357, 359, 361, 363, 365, 368, 370, 372], "scale_data": [205, 207, 227, 314, 318, 346], "shift_data": [205, 207, 227, 314, 318, 346], "tan": [205, 227, 314, 346], "scaleshift_md": [205, 227, 314, 346], "src_mem": [205, 207, 213, 222, 223, 226, 227, 228, 230, 231, 233, 235, 236, 237, 239, 240, 241, 314, 318, 325, 338, 340, 344, 346, 349, 353, 355, 357, 361, 363, 365, 368, 370, 372], "scale_mem": [205, 207, 227, 314, 318, 346], "shift_mem": [205, 207, 227, 314, 318, 346], "bnorm_pd": [205, 314], "10f": [205, 227, 314, 346], "normalization_flag": [205, 227, 249, 262, 271, 302, 314, 346, 384, 386, 426, 428], "mean_mem": [205, 207, 227, 314, 318, 346], "mean_desc": [205, 227, 314, 346, 384, 386, 426, 428], "variance_mem": [205, 207, 227, 314, 318, 346], "variance_desc": [205, 227, 314, 346, 384, 386, 426, 428], "bnorm_prim": [205, 314], "bnorm_arg": [205, 314], "binary_exampl": [206, 243, 316], "150": [206, 207, 316, 318], "src_0_dim": [206, 316], "src_1_dim": [206, 316], "src_0_data": [206, 316], "src_1_data": [206, 316], "src_0_md": [206, 316], "src_1_md": [206, 316], "src_0_mem": [206, 316], "src_1_mem": [206, 316], "binary_op": [206, 207, 248, 316, 318, 456], "binary_attr": [206, 207, 316, 318], "binary_pd": [206, 207, 316, 318], "binary_prim": [206, 207, 316, 318], "binary_arg": [206, 207, 316, 318], "tmp_dst": [207, 318], "params_dim": [207, 318], "mean_data": [207, 318], "variance_data": [207, 318], "oscale_data": [207, 318], "mean_md": [207, 318], "variance_md": [207, 318], "scale_md": [207, 318], "shift_md": [207, 318], "oscale_md": [207, 318], "oscale_mem": [207, 318], "dst_tmp": [207, 318], "output_scal": [207, 318], "2016": [208, 209, 212, 215, 320, 324, 329], "posix_memalign": [208, 215, 320, 329], "_posix_c_sourc": [208, 215, 243, 320, 329], "200112l": [208, 215, 320, 329], "stdlib": [208, 215, 220, 320, 329, 336], "conv_ih": [208, 215, 243, 320, 329], "conv_iw": [208, 215, 243, 320, 329], "conv_oh": [208, 215, 243, 320, 329], "conv_ow": [208, 215, 243, 320, 329], "conv_strid": [208, 210, 211, 212, 215, 243, 320, 322, 323, 324, 329], "conv_pad": [208, 210, 211, 212, 215, 243, 320, 322, 323, 324, 329], "pool_oh": [208, 215, 243, 320, 329], "27": [208, 209, 211, 212, 215, 233, 320, 323, 324, 329, 357], "pool_ow": [208, 215, 243, 320, 329], "pool_strid": [208, 211, 212, 215, 243, 320, 323, 324, 329], "pool_pad": [208, 209, 211, 212, 215, 243, 320, 321, 323, 324, 329], "arr": [208, 215, 243, 320, 329], "init_net_data": [208, 215, 243, 320, 329], "uint32_t": [208, 211, 212, 215, 243, 320, 323, 324, 329], "1637": [208, 215, 320, 329], "indx": [208, 215, 320, 329], "typedef": [208, 215, 243, 302, 320, 329], "narg": [208, 215, 243, 266, 271, 282, 320, 329, 378], "dnnl_exec_arg_t": [208, 215, 220, 243, 266, 271, 282, 320, 329, 336, 378], "args_t": [208, 215, 243, 320, 329], "prepare_arg_nod": [208, 215, 243, 320, 329], "free_arg_nod": [208, 215, 243, 320, 329], "set_arg": [208, 215, 243, 320, 329], "arg_idx": [208, 215, 243, 320, 329], "dnnl_memory_t": [208, 215, 220, 243, 265, 266, 271, 282, 320, 329, 336, 410], "init_data_memori": [208, 215, 243, 320, 329], "user_tag": [208, 215, 243, 320, 329], "user_md": [208, 215, 320, 329], "dnnl_memory_cr": [208, 215, 220, 243, 265, 320, 329, 336], "dnnl_status_t": [208, 215, 243, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 307, 320, 329, 340, 374, 409], "prepare_reord": [208, 215, 243, 320, 329], "user_memori": [208, 215, 243, 320, 329], "prim_memory_md": [208, 215, 243, 320, 329], "prim_engin": [208, 215, 243, 320, 329], "dir_is_user_to_prim": [208, 215, 243, 320, 329], "prim_memori": [208, 215, 243, 320, 329], "dnnl_primitive_t": [208, 215, 220, 243, 271, 320, 329, 336], "net_index": [208, 215, 243, 320, 329], "inc": [208, 215, 320, 329, 348], "net_arg": [208, 209, 215, 243, 320, 321, 329], "user_memory_md": [208, 215, 320, 329], "dnnl_memory_get_memory_desc": [208, 215, 243, 265, 320, 329], "user_mem_engin": [208, 215, 320, 329], "dnnl_memory_get_engin": [208, 215, 243, 265, 320, 329], "dnnl_memory_desc_equ": [208, 215, 243, 265, 320, 329], "dnnl_primitive_desc_t": [208, 215, 220, 243, 248, 249, 250, 253, 254, 256, 257, 260, 262, 263, 264, 267, 268, 271, 273, 274, 275, 276, 278, 279, 281, 320, 329, 336, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "reorder_pd": [208, 215, 236, 320, 329, 363], "dnnl_reorder_primitive_desc_cr": [208, 215, 220, 243, 274, 320, 329, 336], "dnnl_primitive_cr": [208, 215, 220, 243, 271, 320, 329, 336], "dnnl_primitive_desc_destroi": [208, 215, 220, 243, 271, 320, 329, 336], "simple_net": [208, 209, 211, 212, 215, 217, 218, 238, 243, 320, 322, 323, 324, 329, 367], "dnnl_engine_kind_t": [208, 243, 258, 290, 291, 295, 302, 320], "dnnl_engine_cr": [208, 215, 220, 243, 258, 320, 329, 336], "net_src_siz": [208, 215, 320, 329], "net_dst_siz": [208, 215, 320, 329], "net_src": [208, 211, 212, 215, 217, 218, 238, 320, 323, 324, 329, 332, 333, 367], "net_dst": [208, 212, 215, 217, 218, 238, 320, 324, 329, 332, 333, 367], "memset": [208, 215, 217, 218, 320, 329, 332, 333], "conv_user_src_s": [208, 215, 320, 329], "conv_user_weights_s": [208, 215, 320, 329], "conv_bias_s": [208, 215, 320, 329], "conv_user_dst_s": [208, 215, 320, 329], "conv_dil": [208, 215, 320, 329], "conv_src": [208, 215, 232, 320, 329, 356], "conv_weight": [208, 210, 211, 212, 215, 320, 322, 323, 324, 329], "conv_bia": [208, 210, 211, 212, 215, 320, 322, 323, 324, 329], "conv_user_src_memori": [208, 211, 212, 215, 320, 323, 324, 329], "conv_user_weights_memori": [208, 211, 212, 215, 320, 323, 324, 329], "conv_user_bias_memori": [208, 211, 212, 215, 320, 323, 324, 329], "conv_src_md": [208, 210, 211, 212, 214, 215, 231, 232, 320, 322, 323, 324, 327, 329, 355, 356], "conv_weights_md": [208, 210, 211, 212, 214, 215, 231, 320, 322, 323, 324, 327, 329, 355], "conv_bias_md": [208, 210, 211, 212, 215, 320, 322, 323, 324, 329], "dnnl_convolution_forward_primitive_desc_cr": [208, 215, 243, 254, 320, 329], "conv_internal_src_memori": [208, 215, 320, 329], "conv_internal_weights_memori": [208, 215, 320, 329], "conv_internal_dst_memori": [208, 215, 320, 329], "dnnl_primitive_desc_query_md": [208, 215, 243, 266, 271, 282, 320, 329], "conv_reorder_src": [208, 215, 320, 329], "conv_reorder_weight": [208, 215, 320, 329], "negative_slop": [208, 211, 212, 215, 320, 323, 324, 329], "relu_src_md": [208, 211, 212, 215, 320, 323, 324, 329], "relu_dst_md": [208, 215, 320, 329], "relu_pd": [208, 211, 212, 215, 220, 221, 223, 224, 232, 242, 320, 323, 324, 329, 336, 337, 340, 341, 374], "dnnl_eltwise_forward_primitive_desc_cr": [208, 215, 220, 243, 257, 320, 329, 336], "relu_dst_memori": [208, 211, 212, 215, 320, 323, 324, 329], "0001": [208, 209, 211, 212, 215, 320, 323, 324, 329], "0001f": [208, 209, 211, 212, 215, 320, 323, 324, 329], "75f": [208, 209, 211, 212, 215, 228, 320, 323, 324, 329, 349], "lrn_src_md": [208, 215, 320, 329], "lrn_dst_md": [208, 215, 320, 329], "lrn_pd": [208, 211, 212, 215, 228, 320, 323, 324, 329, 349], "dnnl_lrn_forward_primitive_desc_cr": [208, 215, 243, 263, 320, 329], "lrn_dst_memori": [208, 211, 212, 215, 320, 323, 324, 329], "lrn_ws_memori": [208, 215, 320, 329], "lrn_ws_md": [208, 215, 320, 329], "pool_dst_siz": [208, 215, 320, 329], "pool_kernel": [208, 211, 212, 215, 320, 323, 324, 329], "pool_dil": [208, 209, 211, 212, 215, 320, 321, 323, 324, 329], "pool_src_md": [208, 215, 320, 329], "pool_dst_any_md": [208, 320], "pool_user_dst_memori": [208, 211, 212, 215, 320, 323, 324, 329], "pool_pd": [208, 211, 212, 215, 231, 320, 323, 324, 329, 355], "dnnl_pooling_forward_primitive_desc_cr": [208, 215, 243, 267, 320, 329], "pool_ws_memori": [208, 215, 320, 329], "pool_ws_md": [208, 215, 320, 329], "pool_dst_memori": [208, 211, 212, 215, 320, 323, 324, 329], "pool_reorder_dst": [208, 215, 320, 329], "pool_internal_dst_memori": [208, 215, 320, 329], "pool_dst_md": [208, 211, 212, 215, 231, 320, 323, 324, 329, 355], "tent": [208, 215, 320, 329], "workaround": [208, 215, 320, 329], "dnnl_stream_t": [208, 215, 220, 243, 266, 271, 272, 280, 282, 283, 287, 297, 320, 329, 336], "dnnl_stream_creat": [208, 215, 220, 243, 280, 320, 329, 336], "dnnl_primitive_execut": [208, 215, 220, 243, 248, 271, 320, 329, 336, 410], "dnnl_stream_wait": [208, 215, 220, 243, 265, 272, 280, 320, 329, 336], "clean": [208, 215, 220, 320, 329, 336, 356], "dnnl_stream_destroi": [208, 215, 220, 243, 280, 320, 329, 336], "dnnl_memory_destroi": [208, 215, 220, 243, 265, 320, 329, 336], "dnnl_primitive_destroi": [208, 215, 220, 243, 271, 320, 329, 336], "dnnl_engine_destroi": [208, 215, 220, 243, 258, 320, 329, 336], "printf": [208, 215, 216, 219, 220, 320, 329, 330, 334, 336], "engine_kind2str_upp": [208, 223, 242, 243, 320, 340, 374], "chrono": 209, "100": [209, 225, 342], "eng": [209, 210, 211, 212, 216, 219, 223, 224, 225, 231, 232, 238, 242, 243, 321, 322, 323, 324, 330, 334, 340, 341, 342, 355, 356, 367, 374, 456], "conv1_src_tz": [209, 321], "conv1_weights_tz": [209, 321], "conv1_bias_tz": [209, 321], "conv1_dst_tz": [209, 321], "conv1_pad": [209, 321], "user_src": [209, 210, 232, 321, 322, 356], "user_dst": [209, 210, 232, 321, 322, 356], "1000": [209, 225, 240, 321, 342, 370], "conv1_weight": [209, 321], "conv1_bia": [209, 321], "user_src_memori": [209, 210, 321, 322], "user_weights_memori": [209, 210, 321, 322], "conv1_user_bias_memori": [209, 321], "conv1_prim_desc": [209, 321], "conv1_src_memori": [209, 321], "push_back": [209, 211, 212, 213, 217, 218, 241, 321, 323, 324, 325, 332, 333, 372], "conv1_weights_memori": [209, 321], "conv1_dst_memori": [209, 321], "relu1": 209, "negative1_slop": [209, 321], "relu1_prim_desc": [209, 321], "lrn1": 209, "alpha1": 209, "beta1": 209, "local1_s": 209, "lrn1_prim_desc": 209, "lrn_forward": [209, 211, 212, 228, 263, 302, 323, 324, 349, 438, 462], "lrn1_dst_memori": [209, 321], "pool1": [209, 320, 321], "pool1_dst_tz": 209, "pool1_kernel": [209, 321], "pool1_strid": [209, 321], "pool1_dst_md": [209, 321], "pool1_pd": [209, 321], "pooling_forward": [209, 211, 212, 231, 233, 267, 302, 321, 323, 324, 355, 357, 452, 462], "pool1_dst_memori": [209, 321], "48": 209, "conv2_src_tz": 209, "conv2_weights_tz": 209, "conv2_bias_tz": 209, "conv2_dst_tz": 209, "conv2_strid": 209, "conv2_pad": 209, "conv2_weight": 209, "conv2_bia": 209, "conv2_user_weights_memori": 209, "conv2_user_bias_memori": 209, "conv2_src_md": 209, "conv2_bias_md": 209, "conv2_weights_md": 209, "conv2_dst_md": 209, "conv2_prim_desc": 209, "conv2_src_memori": 209, "conv2_weights_memori": 209, "conv2_dst_memori": 209, "relu2": 209, "negative2_slop": 209, "relu2_prim_desc": 209, "lrn2": 209, "alpha2": 209, "beta2": 209, "local2_s": 209, "k2": 209, "lrn2_prim_desc": 209, "lrn2_dst_memori": 209, "pool2": 209, "pool2_dst_tz": 209, "pool2_kernel": 209, "pool2_strid": 209, "pool2_dil": 209, "pool2_pad": 209, "pool2_dst_md": 209, "pool2_pd": 209, "pool2_dst_memori": 209, "384": [209, 210, 322], "conv3_src_tz": 209, "conv3_weights_tz": 209, "conv3_bias_tz": 209, "conv3_dst_tz": 209, "conv3_strid": 209, "conv3_pad": 209, "conv3_weight": 209, "conv3_bia": 209, "conv3_user_weights_memori": 209, "conv3_user_bias_memori": 209, "conv3_src_md": 209, "conv3_bias_md": 209, "conv3_weights_md": 209, "conv3_dst_md": 209, "conv3_prim_desc": 209, "conv3_src_memori": 209, "conv3_weights_memori": 209, "conv3_dst_memori": 209, "relu3": [209, 210, 322], "negative3_slop": 209, "relu3_prim_desc": 209, "conv4_src_tz": 209, "conv4_weights_tz": 209, "conv4_bias_tz": 209, "conv4_dst_tz": 209, "conv4_strid": 209, "conv4_pad": 209, "conv4_weight": 209, "conv4_bia": 209, "conv4_user_weights_memori": 209, "conv4_user_bias_memori": 209, "conv4_src_md": 209, "conv4_bias_md": 209, "conv4_weights_md": 209, "conv4_dst_md": 209, "conv4_prim_desc": 209, "conv4_src_memori": 209, "conv4_weights_memori": 209, "conv4_dst_memori": 209, "relu4": 209, "negative4_slop": 209, "relu4_prim_desc": 209, "conv5_src_tz": 209, "conv5_weights_tz": 209, "conv5_bias_tz": 209, "conv5_dst_tz": 209, "conv5_strid": 209, "conv5_pad": 209, "conv5_weight": 209, "conv5_bia": 209, "conv5_user_weights_memori": 209, "conv5_user_bias_memori": 209, "conv5_src_md": 209, "conv5_weights_md": 209, "conv5_bias_md": 209, "conv5_dst_md": 209, "conv5_prim_desc": 209, "conv5_src_memori": 209, "conv5_weights_memori": 209, "conv5_dst_memori": 209, "relu5": 209, "negative5_slop": 209, "relu5_prim_desc": 209, "pool5": 209, "pool5_dst_tz": 209, "pool5_kernel": 209, "pool5_strid": 209, "pool5_dil": 209, "pool5_pad": 209, "pool5_dst": 209, "pool5_dst_md": 209, "pool5_pd": 209, "pool5_dst_memori": 209, "fc6": 209, "4096": 209, "fc6_src_tz": 209, "fc6_weights_tz": 209, "fc6_bias_tz": 209, "fc6_dst_tz": 209, "fc6_weight": 209, "fc6_bia": 209, "fc6_user_weights_memori": 209, "fc6_user_bias_memori": 209, "fc6_src_md": 209, "fc6_bias_md": 209, "fc6_weights_md": 209, "fc6_dst_md": 209, "fc6_prim_desc": 209, "inner_product_forward": [209, 226, 260, 302, 344, 420, 422, 462], "fc6_src_memori": 209, "fc6_weights_memori": 209, "fc6_dst_memori": 209, "fc7": 209, "fc7_weights_tz": 209, "fc7_bias_tz": 209, "fc7_dst_tz": 209, "fc7_weight": 209, "fc7_bia": 209, "fc7_user_weights_memori": 209, "fc7_user_bias_memori": 209, "fc7_bias_md": 209, "fc7_weights_md": 209, "fc7_dst_md": 209, "fc7_prim_desc": 209, "fc7_weights_memori": 209, "fc7_dst_memori": 209, "fc8": 209, "fc8_weights_tz": 209, "fc8_bias_tz": 209, "fc8_dst_tz": 209, "fc8_weight": 209, "fc8_bia": 209, "fc8_user_weights_memori": 209, "fc8_user_bias_memori": 209, "user_dst_memori": [209, 210, 322], "fc8_bias_md": 209, "fc8_weights_md": 209, "fc8_dst_md": 209, "fc8_prim_desc": 209, "fc8_weights_memori": 209, "fc8_dst_memori": 209, "someth": [209, 211, 212, 217, 218, 238, 321, 323, 324, 367], "duration_cast": 209, "steady_clock": 209, "time_since_epoch": 209, "stdexcept": [210, 211, 216, 219, 221, 223, 224, 225, 232, 323, 330, 334, 341, 342], "simple_net_int8": 210, "conv_src_tz": [210, 211, 212, 322, 323, 324], "conv_weights_tz": [210, 211, 212, 322, 323, 324], "conv_bias_tz": [210, 211, 212, 322, 323, 324], "conv_dst_tz": [210, 211, 212, 322, 323, 324], "8f": [210, 322], "weight_scal": [210, 322], "55f": [210, 322], "src_mask": [210, 322], "weight_mask": [210, 322], "dst_mask": [210, 322], "user_bias_memori": [210, 322], "conv_attr": [210, 214, 322, 327], "dst_scale_md": [210, 322], "dst_scale_memori": [210, 322], "ops_alpha": [210, 322], "ops_beta": [210, 322], "catch": [210, 211, 218, 223, 242, 323, 333, 340, 374], "conv_prim_desc": [210, 232, 322], "src_attr": [210, 322], "src_scale_md": [210, 322], "src_scale_memori": [210, 322], "src_reorder_pd": [210, 322], "src_reorder": [210, 322], "weight_attr": [210, 322], "wei_scale_md": [210, 322], "wei_scale_memori": [210, 322], "weight_reorder_pd": [210, 322], "weight_reord": [210, 322], "conv_bias_memori": [210, 211, 215, 322, 323, 329], "conv_dst_memori": [210, 211, 212, 322, 323, 324], "dst_attr": [210, 322], "dst_reorder_pd": [210, 322], "dst_reorder": [210, 322], "cassert": [211, 216, 219, 225, 242, 323, 330, 334, 342, 374], "net_fwd": [211, 212, 215, 323, 324, 329], "net_bwd": [211, 212, 215, 323, 324, 329], "net_fwd_arg": [211, 212, 215, 323, 324, 329], "net_bwd_arg": [211, 212, 215, 323, 324, 329], "sinf": [211, 212, 323, 324], "relu_data_tz": [211, 212, 323, 324], "lrn_data_tz": [211, 212, 323, 324], "lrn_workspace_memori": [211, 212, 323, 324], "pool_dst_tz": [211, 212, 323, 324], "pool_workspace_memori": [211, 212, 323, 324], "leav": [211, 212, 323, 324, 334], "until": [211, 212, 265, 321, 323, 324, 334, 374, 448], "diff_data": [211, 212, 215, 323, 324, 329], "net_diff_dst": [211, 212, 215, 238, 323, 324, 329, 367], "pool_user_diff_dst_memori": [211, 212, 215, 323, 324, 329], "pool_diff_src_md": [211, 212, 215, 323, 324, 329], "pool_diff_dst_md": [211, 212, 215, 323, 324, 329], "pool_bwd_pd": [211, 212, 215, 323, 324, 329], "pooling_backward": [211, 212, 267, 302, 323, 324, 462], "pool_diff_dst_memori": [211, 212, 215, 323, 324, 329], "pool_diff_src_memori": [211, 212, 215, 323, 324, 329], "diff_src_desc": [211, 212, 243, 249, 254, 256, 257, 260, 262, 263, 267, 268, 275, 278, 279, 323, 324, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "lrn_diff_dst_md": [211, 212, 215, 323, 324, 329], "lrn_diff_src_md": [211, 212, 215, 323, 324, 329], "lrn_bwd_pd": [211, 212, 215, 323, 324, 329], "lrn_backward": [211, 212, 263, 302, 323, 324, 462], "lrn_diff_dst_memori": [211, 212, 323, 324], "lrn_diff_src_memori": [211, 212, 215, 323, 324, 329], "relu_diff_src_md": [211, 212, 215, 323, 324, 329], "relu_diff_dst_md": [211, 212, 215, 323, 324, 329], "primitive_descriptor": [211, 212, 249, 260, 262, 263, 323, 324], "relu_bwd_pd": [211, 212, 215, 323, 324, 329], "eltwise_backward": [211, 212, 257, 302, 323, 324, 462], "relu_diff_dst_memori": [211, 212, 323, 324], "relu_diff_src_memori": [211, 212, 215, 323, 324, 329], "conv_user_diff_weights_memori": [211, 212, 215, 323, 324, 329], "conv_diff_bias_memori": [211, 212, 215, 323, 324, 329], "conv_bwd_src_md": [211, 212, 323, 324], "conv_diff_weights_md": [211, 212, 215, 323, 324, 329], "conv_diff_dst_md": [211, 212, 215, 323, 324, 329], "conv_diff_bias_md": [211, 212, 215, 323, 324, 329], "conv_bwd_weights_pd": [211, 212, 215, 323, 324, 329], "convolution_backward_weight": [211, 212, 254, 302, 323, 324, 462], "conv_bwd_src_memori": [211, 212, 323, 324], "relu_bwd": [211, 212, 215, 323, 324, 329], "conv_diff_weight": [211, 212, 215, 323, 324, 329], "conv_diff_dst_memori": [211, 212, 215, 323, 324, 329], "conv_diff_weights_memori": [211, 212, 215, 323, 324, 329], "diff_weights_desc": [211, 212, 243, 254, 256, 260, 268, 323, 324, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "didn": [211, 212, 323, 324], "anyth": [211, 212, 266, 305, 323, 324], "n_iter": [211, 212, 215, 323, 324, 329], "net_output": [211, 212, 215, 323, 324, 329], "update_diff_dst": [211, 212, 215, 323, 324, 329], "net_diff_weight": [211, 212, 215, 323, 324, 329], "net_diff_bia": [211, 212, 215, 323, 324, 329], "update_weight": [211, 212, 215, 323, 324, 329], "conv_user_diff_weights_buff": [212, 215, 324, 329], "conv_diff_bias_buff": [212, 215, 324, 329], "concat_exampl": [213, 243, 325], "120": [213, 325], "num_src": [213, 241, 325, 372], "mem": [213, 217, 218, 220, 221, 224, 241, 242, 243, 325, 336, 341, 372, 374], "concat_pd": [213, 325], "dst_mem": [213, 222, 223, 226, 228, 230, 231, 233, 235, 236, 237, 239, 241, 243, 325, 338, 340, 344, 349, 353, 355, 357, 361, 363, 365, 368, 372], "concat_prim": [213, 325], "concat_arg": [213, 325], "convolution_exampl": [214, 243, 327], "strides_dim": [214, 233, 327, 357], "padding_dims_l": [214, 233, 327, 357], "padding_dims_r": [214, 233, 327, 357], "weights_data": [214, 226, 230, 234, 327, 344, 353, 359], "dst_data": [214, 222, 226, 228, 230, 233, 234, 235, 236, 237, 239, 241, 327, 338, 344, 349, 353, 357, 359, 361, 363, 365, 368, 372], "user_src_mem": [214, 234, 327, 359], "user_weights_mem": [214, 226, 234, 327, 344, 359], "user_dst_mem": [214, 234, 327, 359], "user_bias_md": [214, 327], "user_bias_mem": [214, 327], "conv_op": [214, 327], "conv_src_mem": [214, 231, 327, 355], "conv_weights_mem": [214, 231, 327, 355], "conv_dst_mem": [214, 231, 327, 355], "conv_arg": [214, 327, 456], "depthwise_convolution_exampl": [214, 243, 327], "exit_cod": [214, 223, 242, 327, 340, 374], "idx": [215, 242, 243, 271, 329, 374, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "n_fwd": [215, 329], "n_bwd": [215, 329], "dnnl_pooling_backward_primitive_desc_cr": [215, 243, 267, 329], "pool_internal_diff_dst_memori": [215, 329], "pool_reorder_diff_dst": [215, 329], "pool_bwd": [215, 329], "dnnl_lrn_backward_primitive_desc_cr": [215, 243, 263, 329], "lrn_bwd": [215, 329], "conv_diff_src_md": [215, 329], "dnnl_convolution_backward_weights_primitive_desc_cr": [215, 243, 254, 329], "conv_bwd_reorder_src": [215, 329], "conv_bwd_internal_src_memori": [215, 329], "conv_bwd_weights_src_memori": [215, 329], "conv_reorder_diff_dst": [215, 329], "conv_internal_diff_dst_memori": [215, 329], "conv_reorder_diff_weight": [215, 329], "conv_internal_diff_weights_memori": [215, 329], "conv_bwd_weight": [215, 329], "dnnl_memory_set_data_handl": [215, 243, 265, 266, 282, 329], "dnnl_memory_get_data_handl": [215, 243, 265, 329], "cleanup": [215, 329], "cctype": [216, 219, 225, 330, 334, 342], "cstdio": [216, 219, 225, 330, 334, 342], "random": [216, 219, 225, 330, 334, 342], "type_trait": [216, 330], "init_vector": [216, 219, 225, 330, 334, 342], "min_valu": [216, 330], "max_valu": [216, 330], "mt19937": [216, 219, 225, 330, 334, 342], "uniform_real_distribut": [216, 219, 225, 330, 334, 342], "find_min_max": [216, 330], "compute_q10n_param": [216, 330], "max_int": [216, 330], "numeric_limit": [216, 219, 330, 334], "min_int": [216, 330], "lowest": [216, 330], "ifndef": [216, 330], "omit_workaround_for_skx": [216, 330], "dev_guide_int8_comput": [216, 330], "html": [216, 330], "endif": [216, 242, 330, 374], "min_val": [216, 330], "max_val": [216, 330], "tcomput": [216, 330], "q10n": [216, 330], "tdata": [216, 330], "tscale": [216, 330], "3g": [216, 330], "invers": [216, 330], "tzero": [216, 330], "compare_vector": [216, 219, 330, 334], "v2": [216, 219, 330, 334], "scale_v2": [216, 330], "zp_v2": [216, 330], "threshold": [216, 219, 330, 334], "v1_l2": [216, 219, 330, 334], "diff_l2": [216, 219, 330, 334], "v2_n": [216, 330], "deq10n": [216, 330], "ok": [216, 219, 330, 334], "tcomparison": [216, 330], "trefer": [216, 219, 330, 334], "terror": [216, 219, 330, 334], "trel": [216, 330], "naccuraci": [216, 330], "x_int_m": [216, 243, 330], "x_f32": [216, 243, 330], "scale_x": [216, 243, 330], "zp_x": [216, 243, 330], "q10n_scheme": [216, 330], "mimic": [216, 330], "x_int_md": [216, 330], "x_f32_md": [216, 330], "x_f32_m": [216, 330], "q10n_attr": [216, 330], "q10n_pd": [216, 330], "dst_scale_x_m": [216, 330], "zp_x_m": [216, 330], "f32_matmul_comput": [216, 243, 330], "a_f32": [216, 243, 330], "b_f32": [216, 225, 243, 330, 342], "c_f32": [216, 243, 330], "a_md": [216, 219, 225, 330, 334, 342], "b_md": [216, 219, 225, 330, 334, 342], "c_md": [216, 219, 225, 330, 334, 342], "wrap": [216, 219, 221, 330, 334, 408, 409, 417, 448, 462, 486], "a_f32_m": [216, 330], "b_f32_m": [216, 330], "c_f32_m": [216, 330], "matmul_pd": [216, 219, 225, 230, 330, 334, 342, 353], "matmul_p": [216, 219, 225, 243, 330, 334, 342], "scale_c": [216, 243, 330], "zp_c": [216, 225, 243, 330, 342], "dynamic_q10n_matmul": [216, 243, 330], "c_u8": [216, 225, 243, 330, 342], "scale_a": [216, 330], "scale_b": [216, 330], "zp_a": [216, 225, 330, 342], "zp_b": [216, 330], "a_u8_md": [216, 330], "a_u8_m": [216, 330], "b_s8_md": [216, 330], "b_s8_m": [216, 330], "emb": [216, 330], "anywai": [216, 330], "theori": [216, 330], "postpon": [216, 330], "exercis": [216, 330], "c_f32_md": [216, 330], "matmul_attr": [216, 230, 330, 353], "scales_a_m": [216, 330], "scales_b_m": [216, 330], "zp_a_m": [216, 330], "c_u8_md": [216, 330], "c_u8_m": [216, 330], "compare_f32_and_quantized_matmul": [216, 243, 330], "param_a_min_v": [216, 330], "param_a_max_v": [216, 330], "4f": [216, 228, 330, 349], "param_b_min_v": [216, 330], "param_b_max_v": [216, 330], "center": [216, 330, 342], "threshold_dynamic_q10n": [216, 330], "2f": [216, 218, 330, 333], "_true_": [216, 330], "c_u8_dynamic_q10n": [216, 330], "scale_c_dynamic_q10n": [216, 330], "zp_c_dynamic_q10n": [216, 330], "rc": [216, 219, 330, 334], "logic_error": [216, 219, 221, 223, 224, 225, 330, 334, 337, 340, 341, 342], "gnmt": [217, 218, 238, 332, 333, 367], "cstring": [217, 218, 238, 367], "dim_t": [217, 218, 243, 333], "src_seq_length_max": [217, 218, 243, 332, 333], "tgt_seq_length_max": [217, 218, 243, 332, 333], "feature_s": [217, 218, 243, 332, 333], "enc_bidir_n_lay": [217, 218, 243, 332, 333], "enc_unidir_n_lay": [217, 218, 243, 332, 333], "dec_n_lay": [217, 218, 243, 332, 333], "lstm_n_gate": [217, 218, 238, 243, 332, 333, 367], "weighted_src_lay": [217, 218, 243], "alignment_model": [217, 218, 243], "exp_sum": [217, 218, 243], "compute_weighted_annot": [217, 218, 243, 332, 333], "weighted_annot": [217, 218, 243, 332, 333], "weights_annot": [217, 218, 243], "enc_dst_lay": [217, 218], "num_weighted_annot": [217, 218], "dnnl_sgemm": [217, 218, 219, 243, 251, 334], "compute_attent": [217, 218, 243, 332, 333], "context_vector": [217, 218, 243], "weights_src_lay": [217, 218, 243], "dec_src_lay": [217, 218, 243], "weights_align": [217, 218, 243], "dst_iter": [217, 218, 238, 248, 332, 367, 464], "src_layer": [217, 218, 238, 248, 332, 333, 367, 464], "weights_yi": [217, 218], "weights_ai": [217, 218], "weighted_dec_src_lay": [217, 218], "alignment_model_ptr": [217, 218], "pragma_omp_parallel_for_collaps": [217, 218, 243], "tanhf": [217, 218], "gemv": [217, 218], "expf": [217, 218], "copy_context": [217, 218, 243, 332, 333], "src_iter": [217, 218, 238, 243, 248, 332, 333, 367, 464], "n_layer": [217, 218, 243], "cpu_engin": [217, 218, 221, 332, 333, 337], "encoder_net": [217, 218, 332, 333], "decoder_net": [217, 218, 332, 333], "encoder_net_arg": [217, 218, 332, 333], "decoder_net_arg": [217, 218, 332, 333], "enc_bidir_src_layer_tz": [217, 218, 332, 333], "enc_bidir_weights_layer_tz": [217, 218, 332, 333], "enc_bidir_weights_iter_tz": [217, 218, 332, 333], "enc_bidir_bias_tz": [217, 218, 332, 333], "enc_bidir_dst_layer_tz": [217, 218, 332, 333], "user_enc_bidir_wei_lay": [217, 218, 332, 333], "user_enc_bidir_wei_it": [217, 218, 332, 333], "user_enc_bidir_bia": [217, 218, 332, 333], "user_enc_bidir_src_layer_md": [217, 218, 332, 333], "user_enc_bidir_wei_layer_md": [217, 218, 332, 333], "user_enc_bidir_wei_iter_md": [217, 218, 332, 333], "user_enc_bidir_bias_md": [217, 218, 332, 333], "user_enc_bidir_src_layer_memori": [217, 218, 332, 333], "user_enc_bidir_wei_layer_memori": [217, 218, 332, 333], "user_enc_bidir_wei_iter_memori": [217, 218, 332, 333], "user_enc_bidir_bias_memori": [217, 218, 332, 333], "enc_bidir_wei_layer_md": [217, 218, 332, 333], "enc_bidir_wei_iter_md": [217, 218, 332, 333], "enc_bidir_dst_layer_md": [217, 218, 332, 333], "enc_bidir_prim_desc": [217, 218, 332, 333], "enc_bidir_wei_layer_memori": [217, 218, 332, 333], "enc_bidir_wei_layer_reorder_pd": [217, 218, 332], "enc_bidir_wei_iter_memori": [217, 218, 332, 333], "enc_bidir_wei_iter_reorder_pd": [217, 218], "enc_bidir_dst_layer_memori": [217, 218, 332, 333], "bi": [217, 218], "user_enc_uni_first_wei_lay": [217, 218, 332, 333], "user_enc_uni_first_wei_it": [217, 218, 332, 333], "user_enc_uni_first_bia": [217, 218, 332, 333], "user_enc_uni_first_wei_layer_dim": [217, 218], "user_enc_uni_first_wei_iter_dim": [217, 218], "user_enc_uni_first_bias_dim": [217, 218], "enc_uni_first_dst_layer_dim": [217, 218], "user_enc_uni_first_wei_layer_md": [217, 218], "user_enc_uni_first_wei_iter_md": [217, 218], "user_enc_uni_first_bias_md": [217, 218, 332, 333], "user_enc_uni_first_wei_layer_memori": [217, 218], "user_enc_uni_first_wei_iter_memori": [217, 218], "user_enc_uni_first_bias_memori": [217, 218, 332, 333], "enc_uni_first_wei_layer_md": [217, 218, 332, 333], "enc_uni_first_wei_iter_md": [217, 218, 332, 333], "enc_uni_first_dst_layer_md": [217, 218, 332, 333], "enc_uni_first_prim_desc": [217, 218, 332, 333], "enc_uni_first_wei_layer_memori": [217, 218, 332, 333], "enc_uni_first_wei_layer_reorder_pd": 217, "enc_uni_first_wei_iter_memori": [217, 218, 332, 333], "enc_uni_first_wei_iter_reorder_pd": 217, "enc_uni_first_dst_layer_memori": [217, 218, 332, 333], "user_enc_uni_wei_lay": [217, 218, 332, 333], "user_enc_uni_wei_it": [217, 218, 332, 333], "user_enc_uni_bia": [217, 218, 332, 333], "user_enc_uni_wei_layer_dim": [217, 218], "user_enc_uni_wei_iter_dim": [217, 218], "user_enc_uni_bias_dim": [217, 218], "enc_dst_layer_dim": [217, 218], "user_enc_uni_wei_layer_md": [217, 218], "user_enc_uni_wei_iter_md": [217, 218], "user_enc_uni_bias_md": [217, 218, 332, 333], "user_enc_uni_wei_layer_memori": [217, 218], "user_enc_uni_wei_iter_memori": [217, 218], "user_enc_uni_bias_memori": [217, 218, 332, 333], "enc_uni_wei_layer_md": [217, 218, 332, 333], "enc_uni_wei_iter_md": [217, 218, 332, 333], "enc_dst_layer_md": [217, 218, 332, 333], "enc_uni_prim_desc": [217, 218, 332, 333], "enc_uni_wei_layer_memori": [217, 218, 332, 333], "enc_uni_wei_layer_reorder_pd": [217, 218], "enc_uni_wei_iter_memori": [217, 218, 332, 333], "enc_uni_wei_iter_reorder_pd": [217, 218], "enc_dst_layer_memori": [217, 218, 332, 333], "dec": [217, 218], "user_dec_wei_lay": [217, 218, 332, 333], "user_dec_wei_it": [217, 218, 332, 333], "user_dec_bia": [217, 218, 332, 333], "user_dec_dst": [217, 332], "user_weights_attention_src_lay": [217, 218, 332, 333], "user_weights_annot": [217, 218, 332, 333], "user_weights_align": [217, 218, 332, 333], "user_dec_wei_layer_dim": [217, 218, 332, 333], "user_dec_wei_iter_dim": [217, 218, 332, 333], "user_dec_bias_dim": [217, 218, 332, 333], "dec_src_layer_dim": [217, 218, 332, 333], "dec_dst_layer_dim": [217, 218, 332, 333], "dec_dst_iter_c_dim": [217, 218, 332, 333], "noctx": [217, 218], "dec_dst_iter_dim": [217, 218, 332, 333], "dec_dst_iter_noctx_dim": [217, 218, 332, 333], "user_dec_wei_layer_md": [217, 218, 332, 333], "user_dec_wei_iter_md": [217, 218, 332, 333], "user_dec_bias_md": [217, 218, 332, 333], "dec_dst_layer_md": [217, 218, 332, 333], "dec_src_layer_md": [217, 218, 332, 333], "dec_dst_iter_md": [217, 218, 332, 333], "dec_dst_iter_c_md": [217, 218, 332, 333], "user_dec_wei_layer_memori": [217, 218, 332, 333], "user_dec_wei_iter_memori": [217, 218, 332, 333], "user_dec_bias_memori": [217, 218, 332, 333], "user_dec_dst_layer_memori": [217, 332], "dec_src_layer_memori": [217, 218, 332, 333], "dec_dst_iter_c_memori": [217, 218, 332, 333], "dec_wei_layer_md": [217, 218, 332], "dec_wei_iter_md": [217, 218, 332], "dec_dst_iter_memori": [217, 218, 332, 333], "dec_dst_iter_noctx_md": [217, 218, 332, 333], "dec_ctx_prim_desc": [217, 218, 332, 333], "dec_wei_layer_memori": [217, 218, 332, 333], "dec_wei_layer_reorder_pd": [217, 218, 332, 333], "dec_wei_iter_memori": [217, 218, 332], "dec_wei_iter_reorder_pd": [217, 218, 332], "enc": [217, 218], "ano": [217, 218], "init": [217, 218, 223, 224, 232, 341], "src_att_layer_handl": [217, 218, 332, 333], "src_att_iter_handl": [217, 218, 332, 333], "att": [217, 218], "ctx": [217, 218], "cp": [217, 218], "dst_layer_handl": [217, 218, 332, 333], "compute_sum_of_row": [218, 243, 333], "col": [218, 243], "a_reduc": [218, 243], "weights_src_layer_scal": [218, 243], "dec_src_layer_scal": [218, 243], "dec_src_layer_shift": [218, 243], "tnc_offset": 218, "a_i": 218, "max_idx": 218, "max_idx_v": 218, "1f": [218, 219, 333, 334], "data_shift": [218, 333], "data_scal": [218, 333], "weights_scale_mask": [218, 333], "weights_scal": [218, 333], "halv": [218, 333], "scales_half": [218, 333], "65": [218, 333], "3f": [218, 234, 333, 359], "enc_bidir_src_layer_md": [218, 333], "attri": 218, "enc_bidir_src_layer_memori": [218, 333], "enc_bidir_src_layer_reorder_pd": [218, 333], "weights_attention_scal": [218, 333], "dec_dst": [218, 333], "dec_src_it": [218, 332], "dec_dst_it": [218, 332, 333], "dec_dst_layer_memori": [218, 333], "weights_attention_sum_row": [218, 333], "s8u8s32": [218, 333], "tight": [219, 334], "difficult": [219, 334], "finit": [219, 334], "tl2": [219, 334], "trelative_error": [219, 334], "taccuraci": [219, 334], "number_of_run": [219, 225, 243, 334, 342], "fixed_beta": [219, 243, 334], "_dynamic_": [219, 334], "dynamic_matmul_cr": [219, 243, 334], "a_shap": [219, 334], "b_shape": [219, 334], "c_shape": [219, 334], "a_strid": [219, 334], "b_stride": [219, 334], "c_stride": [219, 334], "earlier": [219, 334, 340, 374], "dynamic_matmul_execut": [219, 243, 334], "transa": [219, 243, 251, 283, 302, 307, 334], "transb": [219, 243, 251, 283, 302, 307, 334], "lda": [219, 243, 251, 283, 302, 307, 334], "ldb": [219, 243, 251, 283, 302, 307, 334], "ldc": [219, 243, 251, 283, 302, 307, 334], "translat": [219, 334], "tolow": [219, 334], "a_m": [219, 334], "b_m": [219, 334], "c_m": [219, 334], "alpha_m": [219, 334], "sgemm_and_matmul_with_param": [219, 243, 334], "c_sgemm": [219, 334], "c_dynamic_matmul": [219, 334], "dynamic_matmul": [219, 334], "diverg": [219, 334], "sgemm_and_matmul": [219, 243, 334], "n_dim": [220, 243, 336], "n_elem": [220, 336], "complain_example_error_and_exit": [220, 243, 336], "find_neg": [220, 221, 243, 336, 337], "engine_cpu": [220, 336], "engine_gpu": [220, 336], "validate_engine_kind": [220, 221, 243, 336, 337], "tz": [220, 221, 336, 337], "m_cpu_md": [220, 336], "m_gpu_md": [220, 336], "m_cpu": [220, 221, 336, 337], "m_gpu": [220, 221, 336, 337], "r1_pd": [220, 336], "r1": [220, 221, 336, 337], "r2_pd": [220, 336], "r2": [220, 221, 336, 337], "stream_gpu": [220, 221, 336, 337], "r1_arg": [220, 336], "relu_arg": [220, 336], "r2_arg": [220, 336], "prologu": [221, 223, 224, 232, 242], "nelem": 221, "cross_engine_reorder_tutori": 221, "gpu_engin": [221, 337], "eltwise_exampl": [222, 243, 338], "eltwise_pd": [222, 338], "eltwise_prim": [222, 338], "eltwise_arg": [222, 338], "dnnl_debug": [223, 242, 337, 340, 341, 374], "getting_started_tutori": 223, "image_s": [223, 340], "alt_src_md": [223, 340], "saniti": [223, 225, 340, 342], "obj": [223, 340], "relu_imag": [223, 340], "got": [223, 224, 340, 341], "caught": [223, 242, 340, 374], "tstatu": [223, 242, 340, 374], "dnnl_status2str": [223, 242, 243, 340, 374], "tmessag": [223, 242, 340, 374], "ocl_check": [224, 243, 341], "cl_int": 224, "cl_success": 224, "__file__": 224, "__line__": 224, "cl_kernel": [224, 243, 341], "create_init_opencl_kernel": [224, 243, 341], "ocl_ctx": [224, 243], "kernel_nam": [224, 243, 341], "ocl_cod": [224, 243, 341], "err": 224, "cl_program": 224, "ocl_program": 224, "clcreateprogramwithsourc": 224, "clbuildprogram": 224, "ocl_kernel": 224, "clcreatekernel": 224, "clreleaseprogram": 224, "gpu_opencl_interop_tutori": 224, "strm": [224, 242, 341, 374], "tz_dim": [224, 238, 242, 341, 367, 374], "mem_d": [224, 242, 341, 374], "__kernel": [224, 341], "__global": [224, 341], "get_global_id": [224, 341], "oclkernel": 224, "ocl_init_kernel": [224, 341], "oclexecut": 224, "ocl_buf": [224, 341], "clsetkernelarg": [224, 341], "clenqueuendrangekernel": [224, 341], "mem_data": [224, 341], "clreleasekernel": 224, "uniform_int_distribut": [225, 342], "static_cast": [225, 342], "sc_a": [225, 342], "sc_b": [225, 342], "sc_c": [225, 342], "matmul_pd_cr": [225, 243, 342], "prepare_input": [225, 243, 342], "a_u8_mem": [225, 243, 342], "sc_a_mem": [225, 243, 342], "sc_b_mem": [225, 243, 342], "sc_c_mem": [225, 243, 342], "zp_a_mem": [225, 243, 342], "zp_c_mem": [225, 243, 342], "25f": [225, 342], "sanity_check": [225, 243, 342], "c_u8_mem": [225, 243, 342], "smoke": [225, 342], "tquantiz": [225, 342], "twhich": [225, 342], "b_s8_mem": [225, 243, 342], "meaning": [225, 342], "b_f32_mem": [225, 342], "inner_product_exampl": [226, 243, 344], "inner_product_weights_md": [226, 344], "inner_product_op": [226, 344], "inner_product_attr": [226, 344], "inner_product_pd": [226, 344], "inner_product_weights_mem": [226, 344], "inner_product_prim": [226, 344], "inner_product_arg": [226, 344], "layer_normalization_exampl": [227, 243, 346], "lnorm_pd": [227, 346], "lnorm_prim": [227, 346], "lnorm_arg": [227, 346], "lrn_exampl": [228, 243, 349], "lrn_prim": [228, 349], "lrn_arg": [228, 349], "lstm_exampl": [229, 243, 351], "lstm_weights_layer_md": [229, 351], "lstm_weights_iter_md": [229, 351], "src_iter_c_md": [229, 351], "dst_iter_c_md": [229, 351], "lstm_weights_layer_mem": [229, 351], "lstm_weights_iter_mem": [229, 351], "src_iter_c_mem": [229, 351], "dst_iter_c_mem": [229, 351], "lstm_prim": [229, 351], "lstm_arg": [229, 351], "matmul_exampl": [230, 243, 353], "weights_mem": [230, 231, 353, 355], "matmul_op": [230, 353], "matmul_prim": [230, 353], "matmul_arg": [230, 353], "sstream": 231, "memory_format_propagation_tutori": 231, "3x3": [231, 355], "need_reorder_src": [231, 355], "need_reorder_weight": [231, 355], "need_reorder_dst": [231, 355], "pool_dst_mem": [231, 355], "reorder_src": [231, 355], "reorder_weight": [231, 355], "conv_scratchpad_mem": [231, 355], "pool_scratchpad_mem": [231, 355], "reorder_dst": [231, 355], "2023": [232, 242], "init_data": [232, 243], "create_and_execute_relu": [232, 243, 356], "create_attr_with_relu_post_op": [232, 243, 356], "naiv": 232, "conv_relu_na": [232, 356], "user_wei": [232, 356], "mem_desc": 232, "conv_wei_md": [232, 356], "conv_primit": 232, "conv_relu_block": [232, 356], "implementation2": 232, "condition": 232, "r_pd": [232, 356], "conv_wei": [232, 356], "conv_dst": [232, 356], "prim_descriptor": 232, "conv_relu_fus": [232, 356], "prim_desc": 232, "implementation3": 232, "synthet": [232, 356], "pooling_exampl": [233, 243, 357], "kernel_dim": [233, 357], "pooling_pd": [233, 357], "pooling_prim": [233, 357], "pooling_arg": [233, 357], "prelu_exampl": [234, 243, 359], "prelu_pd": [234, 359], "prelu_forward": [234, 268, 302, 359, 458, 462], "prelu_weights_mem": [234, 359], "prelu_prim": [234, 359], "prelu_arg": [234, 359], "reduction_exampl": [235, 243, 361], "reduction_pd": [235, 361], "reduction_prim": [235, 361], "reduction_arg": [235, 361], "reorder_exampl": [236, 243, 363], "ic_dim": [236, 363], "reorder_attr": [236, 363], "dst_scales_mem": [236, 363], "reorder_prim": [236, 363], "reorder_arg": [236, 363], "resampling_exampl": [237, 243, 365], "350": [237, 365], "resampling_pd": [237, 365], "resampling_forward": [237, 275, 302, 365, 462, 473], "resampling_prim": [237, 365], "resampling_arg": [237, 365], "n0": [238, 243, 367], "rand": [238, 243, 367], "n1": [238, 243, 367], "chunk": [238, 367], "compact": [238, 356, 367], "leftmost": [238, 367], "leftmost_batch": [238, 243, 367], "rightmost_batch": [238, 243, 367], "leftmost_seq_length": [238, 243, 367], "rightmost_seq_length": [238, 243, 367], "common_feature_s": [238, 243, 367], "characterist": [238, 340, 367], "common_n_lay": [238, 243, 367], "is_train": [238, 367], "fwd_inf_train": [238, 367], "fwd_net": [238, 367], "bwd_net": [238, 367], "shorter": [238, 367], "net_src_dim": [238, 367], "leftmost_src_layer_dim": [238, 367], "rightmost_src_layer_dim": [238, 367], "common_weights_layer_dim": [238, 367], "common_weights_iter_dim": [238, 367], "common_bias_dim": [238, 367], "leftmost_dst_layer_dim": [238, 367], "rightmost_dst_layer_dim": [238, 367], "arrang": [238, 367], "our": [238, 341, 355, 367, 374], "leftmost_dst_iter_dim": [238, 367], "leftmost_dst_iter_c_dim": [238, 367], "rightmost_src_iter_dim": [238, 367], "rightmost_src_iter_c_dim": [238, 367], "tz_volum": [238, 367], "auxillari": [238, 367], "suppli": [238, 367], "formatted_md": [238, 367], "generic_md": [238, 367], "studi": [238, 367], "suggest": [238, 367], "leftmost_dst_layer_memori": [238, 367], "rightmost_dst_layer_memori": [238, 367], "net_src_memori": [238, 367], "accommod": [238, 355, 367], "user_leftmost_src_layer_md": [238, 367], "user_rightmost_src_layer_md": [238, 367], "leftmost_src_layer_memori": [238, 367], "rightmost_src_layer_memori": [238, 367], "ll": [238, 367], "user_common_weights_lay": [238, 367], "user_common_weights_layer_memori": [238, 367], "user_common_weights_it": [238, 367], "user_common_weights_iter_memori": [238, 367], "user_common_bia": [238, 367], "user_common_bias_memori": [238, 367], "user_leftmost_dst_lay": [238, 367], "user_leftmost_dst_layer_memori": [238, 367], "user_rightmost_dst_lay": [238, 367], "user_rightmost_dst_layer_memori": [238, 367], "leftmost_prim_desc": [238, 367], "aprop_kind": [238, 367, 380, 382, 384, 386, 390, 396, 402, 406, 414, 416, 424, 426, 428, 430, 432, 434, 436, 440, 442, 444, 454, 460, 466, 471, 475, 476, 480, 484, 488, 491, 493], "leftmost_dst_iter_memori": [238, 367], "leftmost_dst_iter_c_memori": [238, 367], "rightmost_src_iter_md": [238, 367], "rightmost_src_iter_memori": [238, 367], "rightmost_src_iter_c_md": [238, 367], "rightmost_src_iter_c_memori": [238, 367], "rightmost_prim_desc": [238, 367], "rigthmost": [238, 367], "common_weights_layer_memori": [238, 367], "common_weights_iter_memori": [238, 367], "common_bias_memori": [238, 367], "workspace_primitive_desc": [238, 367], "commun": [238, 367], "create_w": [238, 367], "leftmost_workspace_memori": [238, 367], "rightmost_workspace_memori": [238, 367], "leftmost_lay": [238, 367], "rightmost_lay": [238, 367], "net_diff_src": [238, 367], "net_diff_src_memori": [238, 367], "user_leftmost_diff_src_layer_md": [238, 367], "user_rightmost_diff_src_layer_md": [238, 367], "leftmost_diff_src_layer_memori": [238, 367], "rightmost_diff_src_layer_memori": [238, 367], "backpropag": [238, 367], "user_common_diff_weights_lay": [238, 367], "user_common_diff_weights_layer_memori": [238, 367], "user_common_diff_bia": [238, 367], "user_common_diff_bias_memori": [238, 367], "net_diff_dst_dim": [238, 367], "net_diff_dst_memori": [238, 367], "diff_dst_lay": [238, 367], "user_leftmost_diff_dst_layer_md": [238, 367], "user_rightmost_diff_dst_layer_md": [238, 367], "leftmost_diff_dst_layer_memori": [238, 367], "rightmost_diff_dst_layer_memori": [238, 367], "leftmost_bwd_prim_desc": [238, 367], "diff_src_layer_desc": [238, 243, 276, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "diff_src_iter_desc": [238, 243, 276, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "diff_src_iter_c_desc": [238, 243, 276, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "diff_weights_layer_desc": [238, 243, 276, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "diff_weights_iter_desc": [238, 243, 276, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "diff_bias_desc": [238, 243, 254, 256, 260, 276, 367, 380, 382, 394, 400, 414, 416, 422, 430, 432, 434, 436, 442, 444, 476, 491, 493], "diff_dst_layer_desc": [238, 243, 276, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "diff_dst_iter_desc": [238, 243, 276, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "diff_dst_iter_c_desc": [238, 243, 276, 367, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "leftmost_diff_dst_iter_memori": [238, 367], "leftmost_diff_dst_iter_c_memori": [238, 367], "rightmost_diff_src_iter_md": [238, 367], "rightmost_diff_src_iter_memori": [238, 367], "rightmost_diff_src_iter_c_md": [238, 367], "rightmost_diff_src_iter_c_memori": [238, 367], "rightmost_bwd_prim_desc": [238, 367], "leftmost_src_layer_bwd_memori": [238, 367], "rightmost_src_layer_bwd_memori": [238, 367], "common_weights_layer_bwd_memori": [238, 367], "common_weights_iter_bwd_memori": [238, 367], "common_bias_bwd_memori": [238, 367], "common_diff_weights_layer_memori": [238, 367], "reorder_common_diff_weights_lay": [238, 367], "common_diff_bias_memori": [238, 367], "reorder_common_diff_bia": [238, 367], "dst_layer": [238, 248, 367, 464], "leftmost_dst_layer_bwd_memori": [238, 367], "rightmost_dst_layer_bwd_memori": [238, 367], "common_diff_weights_iter_memori": [238, 367], "leftmost_dst_iter_bwd_memori": [238, 367], "leftmost_dst_iter_c_bwd_memori": [238, 367], "rightmost_layer_bwd": [238, 367], "leftmost_layer_bwd": [238, 367], "shuffle_exampl": [239, 243, 368], "shuffle_axi": [239, 368], "shuffle_pd": [239, 368], "shuffle_forward": [239, 278, 302, 368, 462, 478], "shuffle_prim": [239, 368], "shuffle_arg": [239, 368], "softmax_exampl": [240, 243, 370], "softmax_pd": [240, 370], "softmax_forward": [240, 279, 302, 370, 462, 482], "softmax_prim": [240, 370], "softmax_arg": [240, 370], "sum_exampl": [241, 243, 372], "sum_pd": [241, 372], "sum_prim": [241, 372], "sum_arg": [241, 372], "__has_includ": [242, 374], "elif": [242, 374], "kernel_tag": [242, 374], "sycl_interop_buffer_tutori": 242, "buf": [242, 243, 297], "sycl_buf": [242, 374], "handler": [242, 374], "cgh": [242, 374], "get_access": [242, 374], "host_acc": [242, 374], "get_host_access": [242, 374], "exp_valu": [242, 374], "dnnl_memory_desc": [243, 265], "dnnl_memori": [243, 265], "const_dnnl_memory_t": [243, 265, 266, 282], "dnnl_primitive_desc": [243, 271], "dnnl_primitive_attr": [243, 248], "const_dnnl_primitive_attr_t": [243, 248, 249, 250, 253, 254, 256, 257, 260, 262, 263, 264, 267, 268, 271, 273, 274, 275, 276, 278, 279, 281], "dnnl_post_op": [243, 248], "const_dnnl_post_ops_t": [243, 248], "dnnl_primit": [243, 271], "const_dnnl_primitive_t": [243, 266, 271, 282], "dnnl_engin": [243, 258], "dnnl_stream": [243, 280], "const_dnnl_stream_t": [243, 280], "dnnl_graph_sycl_allocate_f": [243, 286, 297, 304], "dev": [243, 297], "dnnl_graph_sycl_deallocate_f": [243, 286, 297, 304], "dnnl_graph_partit": [243, 295], "const_dnnl_graph_partition_t": [243, 295], "dnnl_graph_graph": [243, 291], "dnnl_graph_graph_t": [243, 291], "const_dnnl_graph_graph_t": [243, 291], "dnnl_graph_op": [243, 294], "dnnl_graph_op_t": [243, 291, 294], "const_dnnl_graph_op_t": [243, 294, 295], "dnnl_graph_alloc": [243, 286], "dnnl_graph_allocator_t": [243, 286, 297], "const_dnnl_graph_allocator_t": [243, 286, 290, 297], "dnnl_graph_compiled_partit": [243, 287], "const_dnnl_graph_compiled_partition_t": [243, 287, 297], "dnnl_graph_tensor": [243, 298], "dnnl_graph_tensor_t": [243, 298], "const_dnnl_graph_tensor_t": [243, 287, 297, 298], "dnnl_cpu_isa_hints_t": [243, 277], "dnnl_cpu_isa_t": [243, 277], "dnnl_fpmath_mode_t": [243, 248, 259, 291, 302], "dnnl_graph_layout_type_t": [243, 293, 412], "dnnl_graph_op_attr_t": [243, 294], "dnnl_graph_op_kind_t": [243, 294], "dnnl_graph_partition_policy_t": [243, 291, 295], "dnnl_graph_tensor_property_t": [243, 293, 412], "dnnl_normalization_flags_t": [243, 249, 262, 271, 302], "dnnl_ocl_interop_memory_kind_t": [243, 266, 305], "dnnl_profiling_data_kind_t": [243, 265, 272], "dnnl_prop_kind_t": [243, 248, 249, 254, 256, 257, 260, 262, 263, 267, 268, 271, 275, 276, 278, 279, 302], "dnnl_rnn_flags_t": [243, 276, 302], "dnnl_scratchpad_mode_t": [243, 248, 302], "dnnl_stream_flags_t": [243, 280], "dnnl_sycl_interop_memory_kind_t": [243, 282, 306], "dnnl_graph_inplace_pair_t": [243, 287], "gemm_dims_t": 243, "min_run": 243, "bnorm_u8_via_binary_postop": [243, 311, 318], "cnn_inference_f32": [243, 311, 321], "check_result": 243, "sparse_matmul": 243, "cross_engine_reord": [243, 311, 336, 337], "initializer_list": 243, "extra_arg": 243, "get_type_str": 243, "print_test_cas": 243, "fill_random": 243, "is_integ": 243, "run_cas": 243, "time_limit": 243, "bad_arg": 243, "matmul_perf": 243, "performance_profil": [243, 311, 356], "sycl_usm_tutori": 243, "inference_int8_matmul": [243, 311, 342], "dnnl_api": [243, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298], "dnnl_primitive_desc_next_impl": [243, 271], "existing_primitive_desc": [243, 271], "dnnl_primitive_desc_get_attr": [243, 271], "dnnl_primitive_desc_query_s32": [243, 271], "dnnl_primitive_create_from_cache_blob": [243, 271], "cache_blob": [243, 266, 271, 305, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 451, 453, 457, 459, 462, 468, 470, 472, 474, 477, 479, 481, 483, 487, 490, 492], "dnnl_primitive_get_primitive_desc": [243, 271], "dnnl_primitive_get_cache_blob": [243, 271], "dnnl_primitive_attr_clon": [243, 248], "existing_attr": [243, 248], "dnnl_primitive_attr_get_fpmath_mod": [243, 248], "dnnl_primitive_attr_set_fpmath_mod": [243, 248], "dnnl_primitive_attr_get_scratchpad_mod": [243, 248], "dnnl_primitive_attr_set_zero_points_mask": [243, 248, 464], "dnnl_primitive_attr_get_post_op": [243, 248], "dnnl_post_ops_cr": [243, 248], "dnnl_post_ops_clon": [243, 248], "existing_post_op": [243, 248], "dnnl_post_ops_destroi": [243, 248], "dnnl_post_ops_len": [243, 248], "dnnl_post_ops_get_kind": [243, 248], "dnnl_post_ops_append_sum": [243, 248], "dnnl_post_ops_get_params_sum": [243, 248], "dnnl_post_ops_get_params_eltwis": [243, 248], "weights_data_typ": [243, 248, 456], "bias_data_typ": [243, 248, 456], "dst_data_typ": [243, 248, 456], "kernel_s": [243, 248, 456], "stride_s": [243, 248, 456], "padding_l_s": [243, 248, 456], "dnnl_post_ops_get_params_dw": [243, 248], "src1_desc": [243, 248, 250, 388, 456], "dnnl_post_ops_get_params_binari": [243, 248], "dnnl_post_ops_get_params_prelu": [243, 248], "memory_desc": [243, 265, 266, 282, 305, 306], "dnnl_memory_desc_clon": [243, 265], "existing_memory_desc": [243, 265], "dnnl_memory_desc_create_with_csr_encod": [243, 265], "dnnl_memory_desc_create_submemori": [243, 265], "parent_memory_desc": [243, 265], "dnnl_memory_desc_reshap": [243, 265], "out_memory_desc": [243, 265], "in_memory_desc": [243, 265], "dnnl_memory_desc_permute_ax": [243, 265], "dnnl_memory_desc_query_v2": [243, 265], "lh": [243, 265], "rh": [243, 265], "dnnl_memory_desc_get_size_v2": [243, 265], "dnnl_data_type_s": [243, 265], "dnnl_memory_create_v2": [243, 265], "nhandl": [243, 265], "dnnl_memory_map_data": [243, 265], "mapped_ptr": [243, 265, 448], "dnnl_memory_map_data_v2": [243, 265], "dnnl_memory_unmap_data": [243, 265], "dnnl_memory_unmap_data_v2": [243, 265], "dnnl_memory_get_data_handle_v2": [243, 265], "dnnl_memory_set_data_handle_v2": [243, 265], "reorder_primitive_desc": [243, 274], "src_engin": [243, 274, 471], "dst_engin": [243, 274, 471], "dnnl_concat_primitive_desc_cr": [243, 253], "concat_primitive_desc": [243, 253], "dnnl_sum_primitive_desc_cr": [243, 281], "sum_primitive_desc": [243, 281], "dnnl_binary_primitive_desc_cr": [243, 250], "src0_desc": [243, 250, 388], "dnnl_convolution_backward_data_primitive_desc_cr": [243, 254], "dnnl_deconvolution_forward_primitive_desc_cr": [243, 256], "dnnl_deconvolution_backward_data_primitive_desc_cr": [243, 256], "dnnl_deconvolution_backward_weights_primitive_desc_cr": [243, 256], "dnnl_shuffle_forward_primitive_desc_cr": [243, 278], "dnnl_shuffle_backward_primitive_desc_cr": [243, 278], "data_desc": [243, 257, 404], "dnnl_softmax_forward_primitive_desc_cr": [243, 279], "softmax_axi": [243, 279], "dnnl_softmax_backward_primitive_desc_cr": [243, 279], "dnnl_prelu_forward_primitive_desc_cr": [243, 268], "dnnl_prelu_backward_primitive_desc_cr": [243, 268], "dnnl_batch_normalization_forward_primitive_desc_cr": [243, 249], "dnnl_batch_normalization_backward_primitive_desc_cr": [243, 249], "dnnl_layer_normalization_forward_primitive_desc_cr": [243, 262], "dnnl_layer_normalization_backward_primitive_desc_cr": [243, 262], "dnnl_inner_product_forward_primitive_desc_cr": [243, 260], "dnnl_inner_product_backward_data_primitive_desc_cr": [243, 260], "dnnl_inner_product_backward_weights_primitive_desc_cr": [243, 260], "dnnl_primitive_attr_set_rnn_data_qparam": [243, 248], "dnnl_primitive_attr_get_rnn_data_qparam": [243, 248], "dnnl_primitive_attr_set_rnn_weights_qparam": [243, 248], "dnnl_primitive_attr_get_rnn_weights_qparam": [243, 248], "dnnl_primitive_attr_set_rnn_weights_projection_qparam": [243, 248], "dnnl_primitive_attr_get_rnn_weights_projection_qparam": [243, 248], "dnnl_vanilla_rnn_forward_primitive_desc_cr": [243, 248, 276], "dnnl_vanilla_rnn_backward_primitive_desc_cr": [243, 276], "dnnl_lstm_forward_primitive_desc_cr": [243, 276], "dnnl_lstm_backward_primitive_desc_cr": [243, 276], "diff_weights_peephole_desc": [243, 276, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "diff_weights_projection_desc": [243, 276, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "dnnl_gru_forward_primitive_desc_cr": [243, 276], "dnnl_gru_backward_primitive_desc_cr": [243, 276], "dnnl_lbr_gru_forward_primitive_desc_cr": [243, 276], "dnnl_lbr_gru_backward_primitive_desc_cr": [243, 276], "dnnl_augru_forward_primitive_desc_cr": [243, 276], "dnnl_augru_backward_primitive_desc_cr": [243, 276], "diff_attention_desc": [243, 276, 380, 430], "dnnl_lbr_augru_forward_primitive_desc_cr": [243, 276], "dnnl_lbr_augru_backward_primitive_desc_cr": [243, 276], "dnnl_matmul_primitive_desc_cr": [243, 264], "dnnl_resampling_forward_primitive_desc_cr": [243, 275], "dnnl_resampling_backward_primitive_desc_cr": [243, 275], "dnnl_reduction_primitive_desc_cr": [243, 273], "dnnl_get_primitive_cache_capac": [243, 269], "dir": [243, 276, 277, 302], "dnnl_set_max_cpu_isa": [243, 277], "dnnl_get_effective_cpu_isa": [243, 277], "dnnl_set_cpu_isa_hint": [243, 277], "isa_hint": [243, 277, 302], "dnnl_get_cpu_isa_hint": [243, 277], "dnnl_reset_profil": [243, 272], "dnnl_query_profiling_data": [243, 272], "data_kind": [243, 272, 302], "num_entri": [243, 272], "offsetc": [243, 251, 283, 302, 307], "ao": [243, 251, 283, 302, 307], "bo": [243, 251, 283, 302, 307], "dnnl_dt2str": 243, "dnnl_fpmath_mode2str": 243, "dnnl_engine_kind2str": 243, "dnnl_sparse_encoding2str": 243, "dnnl_fmt_tag2str": 243, "dnnl_prop_kind2str": 243, "dnnl_prim_kind2str": 243, "dnnl_alg_kind2str": 243, "dnnl_rnn_flags2str": 243, "dnnl_rnn_direction2str": 243, "dnnl_scratchpad_mode2str": 243, "dnnl_cpu_isa2str": 243, "dnnl_cpu_isa_hints2str": 243, "dnnl_runtime2str": 243, "dnnl_fmt_kind2str": 243, "dnnl_ocl_interop_memory_cr": [243, 266], "dnnl_ocl_interop_memory_get_memory_kind": [243, 266], "dnnl_ocl_interop_memory_get_mem_object": [243, 266], "mem_object": [243, 266, 305], "dnnl_ocl_interop_memory_set_mem_object": [243, 266], "dnnl_ocl_interop_engine_get_cache_blob_id": [243, 266], "dnnl_ocl_interop_engine_get_cache_blob": [243, 266, 305], "dnnl_ocl_interop_engine_create_from_cache_blob": [243, 266], "dnnl_ocl_interop_engine_cr": [243, 266], "dnnl_ocl_interop_engine_get_context": [243, 266], "dnnl_ocl_interop_get_devic": [243, 266], "dnnl_ocl_interop_stream_cr": [243, 266], "dnnl_ocl_interop_stream_get_command_queu": [243, 266], "dnnl_ocl_interop_primitive_execut": [243, 266], "cl_event": [243, 266, 305], "dep": [243, 266, 282, 297, 304, 305, 306], "ndep": [243, 266], "return_ev": [243, 266, 282], "dnnl_sycl_interop_engine_cr": [243, 282], "dnnl_sycl_interop_engine_get_context": [243, 282], "dnnl_sycl_interop_engine_get_devic": [243, 282], "dnnl_sycl_interop_memory_cr": [243, 282], "dnnl_sycl_interop_memory_get_memory_kind": [243, 282], "dnnl_sycl_interop_memory_set_buff": [243, 282], "dnnl_sycl_interop_stream_cr": [243, 282], "dnnl_sycl_interop_stream_get_queu": [243, 282], "dnnl_sycl_interop_primitive_execut": [243, 282], "dnnl_threadpool_interop_stream_cr": [243, 283], "dnnl_threadpool_interop_stream_get_threadpool": [243, 283], "dnnl_threadpool_interop_set_max_concurr": [243, 283], "max_concurr": [243, 283], "dnnl_threadpool_interop_get_max_concurr": [243, 283], "dnnl_threadpool_interop_sgemm": [243, 283], "dnnl_threadpool_interop_gemm_u8s8s32": [243, 283], "dnnl_threadpool_interop_gemm_s8s8s32": [243, 283], "dnnl_engine_get_count": [243, 258], "dnnl_engine_get_kind": [243, 258], "dnnl_stream_get_engin": [243, 280], "dnnl_get_default_fpmath_mod": [243, 259], "dnnl_graph_allocator_cr": [243, 286], "dnnl_graph_allocator_destroi": [243, 286], "dnnl_graph_make_engine_with_alloc": [243, 290], "dnnl_graph_logical_tensor_init": [243, 293], "dnnl_graph_logical_tensor_init_with_dim": [243, 293], "dnnl_graph_logical_tensor_init_with_strid": [243, 293], "dnnl_graph_logical_tensor_get_mem_s": [243, 293], "dnnl_graph_logical_tensor_is_equ": [243, 293], "lt1": [243, 293], "lt2": [243, 293], "dnnl_graph_tensor_cr": [243, 298], "dnnl_graph_tensor_destroi": [243, 298], "dnnl_graph_tensor_get_data_handl": [243, 298], "dnnl_graph_tensor_set_data_handl": [243, 298], "dnnl_graph_tensor_get_engin": [243, 298], "dnnl_graph_op_cr": [243, 294], "dnnl_graph_op_destroi": [243, 294], "dnnl_graph_op_add_input": [243, 294], "dnnl_graph_op_add_output": [243, 294], "dnnl_graph_op_set_attr_f32": [243, 294], "value_len": [243, 294], "dnnl_graph_op_set_attr_bool": [243, 294], "dnnl_graph_op_set_attr_s64": [243, 294], "dnnl_graph_op_set_attr_str": [243, 294], "dnnl_graph_op_get_id": [243, 294], "dnnl_graph_op_get_kind": [243, 294], "dnnl_graph_partition_create_with_op": [243, 295], "dnnl_graph_partition_destroi": [243, 291, 295], "dnnl_graph_partition_get_op_num": [243, 295], "num": [243, 291, 295], "dnnl_graph_partition_get_op": [243, 295], "dnnl_graph_partition_get_id": [243, 295], "dnnl_graph_partition_compil": [243, 295], "in_num": [243, 295], "out_num": [243, 295], "dnnl_graph_partition_get_input_ports_num": [243, 295], "dnnl_graph_partition_get_input_port": [243, 295], "dnnl_graph_partition_get_output_ports_num": [243, 295], "dnnl_graph_partition_get_output_port": [243, 295], "dnnl_graph_partition_is_support": [243, 295], "dnnl_graph_partition_get_engine_kind": [243, 295], "dnnl_graph_compiled_partition_cr": [243, 287], "dnnl_graph_compiled_partition_execut": [243, 287], "num_input": [243, 287, 297], "num_output": [243, 287, 297], "dnnl_graph_compiled_partition_destroi": [243, 287], "dnnl_graph_compiled_partition_query_logical_tensor": [243, 287], "dnnl_graph_compiled_partition_get_inplace_port": [243, 287], "num_inplace_pair": [243, 287], "inplace_pair": [243, 287], "dnnl_graph_graph_cr": [243, 291], "dnnl_graph_graph_create_with_fpmath_mod": [243, 291], "dnnl_graph_graph_destroi": [243, 291], "dnnl_graph_add_op": [243, 291], "dnnl_graph_graph_fin": [243, 291], "dnnl_graph_graph_is_fin": [243, 291], "dnnl_graph_graph_filt": [243, 291], "dnnl_graph_graph_get_partition_num": [243, 291], "dnnl_graph_graph_get_partit": [243, 291], "dnnl_graph_get_compiled_partition_cache_capac": [243, 288], "dnnl_graph_set_compiled_partition_cache_capac": [243, 288], "dnnl_graph_set_constant_tensor_cach": [243, 289], "dnnl_graph_get_constant_tensor_cach": [243, 289], "dnnl_graph_sycl_interop_allocator_cr": [243, 297], "sycl_malloc": [243, 297, 304], "sycl_fre": [243, 297, 304], "dnnl_graph_sycl_interop_make_engine_with_alloc": [243, 297], "dnnl_graph_sycl_interop_compiled_partition_execut": [243, 297], "sycl_ev": [243, 297], "complain_dnnl_error_and_exit": 243, "complain_fmt": 243, "dnnl_arg_attr_multiple_post_op_bas": [243, 271], "dnnl_arg_attr_output_scal": [243, 271], "dnnl_arg_diff_augru_attent": [243, 271], "dnnl_arg_diff_dst_0": [243, 271], "dnnl_arg_diff_dst_1": [243, 271], "dnnl_arg_diff_dst_2": [243, 271], "dnnl_arg_diff_src_0": [243, 271], "dnnl_arg_diff_src_2": [243, 271], "dnnl_arg_diff_src_3": [243, 271], "dnnl_arg_diff_weights_0": [243, 271], "dnnl_arg_diff_weights_1": [243, 271], "dnnl_arg_diff_weights_2": [243, 271], "dnnl_arg_diff_weights_3": [243, 271], "dnnl_arg_dst_0": [243, 271], "dnnl_arg_dst_1": [243, 271], "dnnl_arg_dst_2": [243, 271], "dnnl_arg_multiple_dst": [243, 271], "dnnl_arg_src_2": [243, 271], "dnnl_arg_src_3": [243, 271], "dnnl_arg_weights_0": [243, 271], "dnnl_arg_weights_1": [243, 271], "dnnl_arg_weights_2": [243, 271], "dnnl_arg_weights_3": [243, 271], "dnnl_enable_except": 243, "dnnl_jit_profile_linux_jitdump": [243, 277], "dnnl_jit_profile_linux_jitdump_use_tsc": [243, 277], "dnnl_jit_profile_linux_perf": [243, 277], "dnnl_jit_profile_linux_perfmap": [243, 277], "dnnl_jit_profile_non": [243, 277], "dnnl_jit_profile_vtun": [243, 277], "dnnl_runtime_f32_v": [243, 265, 334], "dnnl_runtime_s32_v": [243, 265], "dnnl_runtime_size_v": [243, 265], "dnnl_throw_error": 243, "msg": 243, "pragma_macro": 243, "type_cas": 243, "bla": [247, 283, 307, 489], "servic": [247, 252], "convert_to_c": [248, 258, 259, 271, 276, 302, 305, 306, 448], "aalgorithm": [248, 302, 388, 392, 394, 396, 398, 400, 402, 404, 406, 438, 440, 452, 454, 456, 469, 473, 475, 482, 484], "dnnl_": 248, "_primitive_desc_cr": 248, "as_data_typ": [248, 456], "output_height": [248, 456], "output_height_1x1_convolut": [248, 456], "output_width": [248, 456], "output_width_1x1_convolut": [248, 456], "dev_guide_attributes_post_ops_depthwis": [248, 456], "dev_guide_attributes_post_ops_depthwise_fus": [248, 271, 456], "another_input": [248, 456], "sic": [248, 464], "slc": [248, 464], "dic": [248, 464], "dlc": [248, 464], "rnn_attr": 248, "rnn_pd": 248, "nativ": [248, 464], "five": [248, 464], "weights_lay": [248, 464], "weights_iter": [248, 464], "violat": [248, 464], "batch_normalization_backward": [249, 302, 462], "allowed": 250, "algebra": 251, "gemm_u8s8s32": [251, 302, 307], "gemm_s8s8s32": [251, 302, 307], "mxk": [251, 283, 307], "kxn": [251, 283, 307], "mxn": [251, 283, 307], "xerbla": [251, 283, 307], "a_offset": [251, 283, 307], "b_offset": [251, 283, 307], "c_offset": [251, 283, 307], "convolution_backward_data": [254, 302, 462], "deconvolution_backward_data": [256, 302, 462], "deconvolution_backward_weight": [256, 302, 462], "deconvolution_forward": [256, 302, 398, 400, 462], "use_dst_for_bwd": [257, 404], "fpmath": [259, 464], "inner_product_backward_data": [260, 302, 462], "inner_product_backward_weight": [260, 302, 462], "layer_normalization_backward": [262, 302, 462], "stat": 262, "manipul": 265, "discourag": 265, "inequ": [265, 417, 450], "set_buff": [265, 306], "ordinari": 265, "ill": 265, "clear": [265, 269, 288], "never": [265, 277], "region": [265, 450], "encompass": [265, 450], "reshap": [265, 450], "join": [265, 450], "consecut": [265, 450], "in_md": [265, 450], "out_md": 265, "expect_out_md": [265, 450], "in_dim": 265, "out_dim": 265, "in_tag": 265, "out_tag": 265, "piec": [265, 271], "lie": 265, "oihw_4i16o4i": 265, "oihw_4i16o4i_": 265, "4i16o4i": 265, "had": [265, 282, 305, 306, 355, 448], "unmap": [265, 448], "mainli": [265, 448], "made": [265, 448], "retriev": [266, 271], "prelu_backward": [268, 302, 462], "get_primitive_cache_capac": [269, 302], "set_primitive_cache_capac": [269, 302], "held": [269, 288], "excess": [269, 288], "aqueri": [271, 302], "32bit": 271, "qualifi": 271, "dev_guide_attributes_post_ops_binary_fus": 271, "mnemon": 271, "peephol": [271, 276, 442, 444, 476], "norm_lp": 273, "resampling_backward": [275, 302, 462], "resampling": 275, "rnn_flag": [276, 302], "rnn_primitive_desc_bas": [276, 302, 380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 466, 491, 493], "lbr": [276, 429, 430, 431, 432, 433, 434, 435, 436], "aid": 277, "version_t": [277, 302], "cpu_isa": [277, 302], "cpu_isa_hint": [277, 302], "set_verbos": [277, 302], "get_default_fpmath_mod": [277, 302], "set_jit_dump": [277, 302], "set_jit_profiling_flag": [277, 302], "set_jit_profiling_jitdumpdir": [277, 302], "minor": [277, 494], "dnnl_jit_dump": 277, "dnnl_jit_profil": 277, "vtune": [277, 311, 348], "pid": 277, "perf": 277, "mkdtemp": 277, "xxxxxx": 277, "home": 277, "revert": 277, "invok": 277, "dnnl_max_cpu_isa": 277, "dnnl_cpu_isa": 277, "reflect": 277, "dnnl_cpu_isa_hint": 277, "shuffle_backward": [278, 302, 462], "softmax_backward": [279, 302, 462], "threapdool_ifac": [283, 307], "threadloc": 283, "trait": [284, 302, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "handle_trait": [284, 302, 417], "acquir": 286, "make_alloc": [286, 304], "dealloc": [286, 297, 340], "input_id": [287, 411], "get_compiled_partition_cache_capac": [288, 303], "set_compiled_partition_cache_capac": [288, 303], "set_constant_tensor_cach": [289, 303], "get_constant_tensor_cach": [289, 303], "make_engine_with_alloc": [290, 303, 304], "supplement": [290, 297], "meta": 293, "enrich": 293, "progress": 293, "toward": 293, "60": 293, "layout_id": [293, 412], "openpow": 300, "ppc64": 300, "practition": 300, "adevic": [304, 306], "acontext": [304, 306], "c_partit": 304, "amemori": [305, 306], "set_mem_object": 305, "aprimit": [305, 306], "query_md": [305, 306, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 462, 466, 467, 469, 470, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "aqueu": 306, "abuff": 306, "get_threadpool": 307, "cnn_inference_int8": [311, 322], "cnn_training_bf16": 311, "cnn_training_f32": 311, "cpu_cnn_training_f32": 311, "cpu_matmul_quant": 311, "cpu_rnn_inference_f32": [311, 332], "cpu_rnn_inference_int8": [311, 333], "cpu_sgemm_and_matmul": 311, "gpu_opencl_interop": [311, 341], "memory_format_propag": 311, "rnn_training_f32": 311, "sycl_interop_buff": [311, 374], "untitl": 311, "legal": 311, "trademark": 311, "awai": [318, 320, 321], "detriment": [320, 321], "continu": [321, 340], "although": 322, "realist": 322, "_x": 330, "research": 330, "max_": 330, "min_": 330, "earli": 330, "obviou": 330, "disadvantag": 330, "wors": 330, "inevit": 330, "unidirectin": [332, 333], "charact": [332, 333], "facil": [337, 340, 341, 374], "resid": [337, 340, 341, 374], "thank": [337, 340], "lightweight": [337, 340], "compris": 340, "singleton": 340, "ten": 340, "plai": 340, "educ": 340, "aliv": 340, "_d": 340, "relu_d": 340, "human": [340, 374], "encourag": 340, "experi": 340, "familiar": 340, "spoil": 340, "oop": 340, "forgot": 340, "liter": 341, "get_ocl_mem_object": 341, "realiz": [341, 374], "heavier": [341, 374], "serv": 341, "submiss": 341, "logo": 348, "arc": 348, "atom": 348, "iri": 348, "openvino": 348, "pentium": 348, "subsidiari": 348, "brand": 348, "countri": 348, "khrono": 348, "central": 355, "understood": 355, "reader": 355, "bother": 355, "idiomat": 355, "realli": 355, "ver": 355, "1x128x14x14": 355, "326904": 355, "256x128x3x3": 355, "244141": 355, "bia_undef": [355, 356], "mb1_ic128oc256_ih14oh14kh3sh1dh0ph1_iw14ow14kw3sw1dw0pw1": 355, "20312": 355, "ws_undef": 355, "mb1ic256_ih14oh14kh3sh1ph1_iw14ow14kw3sw1pw1": 355, "187012": 355, "1x256x14x14": 355, "0419922": 355, "knowledg": 356, "ex": 356, "user_": 356, "meant": 356, "enter": 356, "easili": 356, "launch": 356, "shell": 356, "tell": 356, "elsewher": 356, "38": 356, "mb128_ic3oc96_ih227oh55kh11sh4dh0ph0_iw227ow55kw11sw4dw0pw0": 356, "314": 356, "data_f32": 356, "diff_undef": 356, "128x96x55x55": 356, "87695": 356, "incorpor": 356, "reoder": 356, "conv_dst1": 356, "pai": 356, "penalti": 356, "96x3x11x11": 356, "0310059": 356, "3101": 356, "66895": 356, "80396": 356, "closer": 356, "futher": 356, "desctiptor": 356, "compli": 356, "0148926": 356, "968": 356, "66797": 356, "kmp_affin": 356, "granular": 356, "platinum": 356, "8180": 356, "50ghz": 356, "28": 356, "numa": 356, "ram": 356, "ddr4": 356, "gb": 356, "weak": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "allow_empti": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "get_primitive_desc": [379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 413, 415, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 451, 453, 457, 459, 462, 468, 470, 472, 474, 477, 479, 481, 483, 487, 490, 492], "get_kind": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 451, 452, 453, 454, 457, 458, 459, 460, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493], "default_attr": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 469, 471, 473, 475, 478, 480, 482, 484, 488, 491, 493], "get_cell_kind": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_prop_kind": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_direct": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_dil": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_padding_l": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_padding_r": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_epsilon": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_algorithm": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_alpha": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_beta": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_axi": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_local_s": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_k": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_p": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_factor": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_activation_kind": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_kernel": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_group_s": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "get_primitive_attr": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 467, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "next_impl": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 469, 471, 473, 475, 476, 478, 480, 482, 484, 488, 491, 493], "augru_attention_desc": [380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "diff_augru_attention_desc": [380, 382, 414, 416, 430, 432, 434, 436, 442, 444, 476, 491, 493], "signifi": [380, 382, 384, 386, 388, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 450, 452, 454, 458, 460, 469, 471, 473, 475, 478, 480, 482, 484, 491, 493], "src0": 388, "verifi": [390, 466, 471, 488], "caller": [390, 466, 471, 488], "prim_kind": [390, 466, 471, 488], "prop_kind1": [390, 466, 471, 488], "prop_kind2": [390, 466, 471, 488], "get_count": 408, "uniniti": [408, 417, 448, 462, 486], "thrown": [408, 417, 448, 462, 486], "wrap_c_api": 409, "explanatori": 409, "output_id": 411, "union": 412, "descend": [417, 462, 466, 467, 476], "weak_ptr": 417, "shared_ptr": 417, "delet": 417, "dummi": 417, "destructor": 418, "validate_dim": 448, "min_siz": 448, "data_type_s": 448, "adata_typ": [448, 450], "map_data": 448, "unmap_data": 448, "absenc": [448, 450], "helper": 448, "aformat_tag": 450, "permute_ax": 450, "get_ndim": 450, "get_padded_offset": 450, "get_submemory_offset": 450, "get_num_handl": 450, "get_nnz": 450, "get_sparse_encod": 450, "get_format_kind": 450, "is_zero": 450, "index_dt": 450, "pointer_dt": 450, "new_desc": 450, "get_params_sum": 456, "get_params_eltwis": 456, "get_params_dw": 456, "get_params_prelu": 456, "zeropoint": 456, "oc_dim": 456, "mb_dim": 456, "channel_dim": 456, "height_dim": 456, "prelu_weight": 456, "weight_desc": [458, 460], "c_pd": 462, "get_fpmath_mod": 464, "set_fpmath_mod": 464, "get_post_op": 464, "get_rnn_data_qparam": 464, "get_rnn_weights_qparam": 464, "set_rnn_weights_projection_qparam": 464, "get_rnn_weights_projection_qparam": 464, "rnn_d": 464, "get_src_engin": 471, "get_dst_engin": 471, "aflag": 486, "constexpr": 489, "virtual": 489, "subclass": 489, "closur": 489, "cpu_runtim": 494, "gpu_runtim": 494, "absent": 494}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"advanc": 0, "topic": 0, "build": [1, 18, 19, 24, 25, 30, 32, 33, 134, 135, 146, 148], "link": [1, 43], "class": [2, 3, 4, 5, 6, 7, 8], "dnnl": [2, 3, 4, 5, 6, 7, 8, 151, 152, 153, 157, 161, 164, 165, 166, 167, 169, 171, 173, 175, 176, 177, 178, 179, 181, 183, 185, 187, 189, 191, 193, 195, 198, 200, 202, 302, 303, 304, 305, 306, 307, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493], "graph": [2, 3, 4, 5, 6, 7, 8, 14, 19, 31, 32, 33, 164, 165, 166, 167, 169, 171, 173, 244, 285, 291, 303, 304], "alloc": [2, 286, 355], "overview": [2, 3, 4, 5, 6, 7, 8, 27, 129, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 304, 305, 306, 307, 308, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494], "detail": [2, 3, 4, 5, 6, 7, 8, 15, 17, 21, 23, 28, 30, 39, 42, 44, 45, 132, 133, 136, 137, 138, 139, 141, 142, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 304, 305, 306, 307, 308, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494], "document": [2, 3, 4, 5, 6, 7, 8, 18, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 304, 305, 306, 307, 308, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494], "construct": [2, 3, 4, 5, 6, 7, 8, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "compiled_partit": 3, "method": [3, 4, 5, 6, 7, 8, 32, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 409, 414, 416, 417, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 467, 469, 470, 471, 473, 475, 476, 478, 480, 482, 484, 486, 488, 489, 491, 493], "logical_tensor": [5, 164, 165, 166], "typedef": [5, 248, 255, 258, 265, 271, 277, 280, 286, 287, 291, 294, 295, 297, 298, 448], "op": [6, 11, 15, 17, 21, 23, 28, 31, 39, 42, 44, 45, 132, 136, 137, 138, 139, 140, 141, 142, 167, 169, 294, 318], "partit": [7, 31, 171, 287, 288, 295], "tensor": [8, 22, 31, 289, 293, 298], "primit": [9, 10, 11, 12, 13, 14, 30, 45, 131, 134, 135, 148, 183, 269, 270, 312, 314, 316, 325, 327, 337, 338, 340, 341, 344, 346, 349, 351, 353, 355, 357, 359, 361, 363, 365, 368, 370, 372, 374, 462, 497], "attribut": [9, 10, 11, 12, 13, 15, 17, 21, 23, 28, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 136, 137, 138, 139, 140, 141, 142, 248], "usag": [9, 131], "support": [9, 11, 15, 17, 21, 28, 34, 38, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 136, 137, 139, 141, 142, 145, 246, 497], "relat": [9, 131], "error": [9, 409], "handl": [9, 27, 129, 417], "float": [10, 26, 34, 259], "point": [10, 26, 34, 259], "math": [10, 259], "mode": [10, 148, 259], "The": 10, "A": 10, "note": [10, 15, 17, 20, 21, 23, 28, 39, 42, 44, 45, 132, 133, 136, 137, 138, 141, 142], "default": 10, "post": [11, 15, 17, 21, 23, 28, 39, 42, 44, 45, 132, 136, 137, 138, 139, 140, 141, 142, 318], "eltwis": [11, 28, 222, 257], "sum": [11, 142, 241, 281, 372, 487, 488], "depthwis": 11, "binari": [11, 17, 206, 250, 316, 318, 387, 388], "prelu": [11, 96, 133, 234, 268], "exampl": [11, 12, 13, 15, 17, 21, 23, 28, 29, 38, 39, 40, 42, 44, 45, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 148, 312, 314, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 332, 333, 338, 344, 346, 349, 351, 353, 356, 357, 359, 361, 363, 365, 367, 368, 370, 372], "chain": 11, "relu": [11, 107, 337, 340], "tanh": [11, 125], "scaleshift": 11, "quantiz": [12, 34, 38, 98, 330], "introduct": [12, 14, 31, 38, 145, 147, 355], "model": [12, 245, 377], "numer": [12, 26], "behavior": [12, 26], "convolut": [12, 23, 59, 214, 254, 327, 355], "workflow": [12, 38, 145], "per": 12, "channel": [12, 147], "scale": [12, 15, 38, 42], "api": [12, 20, 30, 131, 247, 252, 261, 266, 282, 283, 285, 292, 297, 341, 374], "output": [12, 22, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 148], "1": [12, 23, 41], "weight": 12, "2": [12, 23, 41], "group": [12, 23, 59], "scratchpad": 13, "memori": [13, 14, 22, 27, 129, 134, 147, 175, 176, 177, 178, 265, 337, 340, 341, 355, 374, 448, 450], "engin": [13, 14, 131, 157, 258, 290, 336, 337, 340, 341, 374, 408], "librari": [13, 18, 19, 26, 43, 300], "manag": [13, 134], "user": 13, "basic": [14, 31], "concept": [14, 31], "stream": [14, 200, 280, 337, 340, 341, 374, 486], "object": [14, 27, 129, 337, 340, 341, 355, 374], "level": 14, "abstract": 14, "creat": [14, 337, 340, 341, 355, 374], "extens": [14, 244, 341, 374], "batch": [15, 249, 314], "normal": [15, 42, 44, 249, 262, 314, 346, 349], "gener": [15, 17, 21, 23, 26, 28, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 136, 137, 138, 139, 140, 141, 142, 147], "forward": [15, 23, 28, 37, 39, 42, 44, 132, 133, 138, 140, 141], "differ": [15, 23, 28, 32, 37, 39, 42, 132, 133, 138, 140, 141], "between": [15, 23, 28, 32, 37, 39, 42, 132, 133, 138, 140, 141, 336, 337], "train": [15, 23, 26, 28, 34, 37, 39, 42, 132, 133, 138, 139, 140, 141, 144, 145, 323, 324, 329, 367], "infer": [15, 23, 26, 28, 34, 36, 37, 38, 39, 42, 132, 133, 138, 140, 141, 320, 321, 322, 332, 333, 342], "backward": [15, 23, 28, 37, 39, 42, 44, 132, 133, 138, 140, 141], "execut": [15, 17, 21, 23, 28, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 337, 340, 341, 355, 374], "argument": [15, 17, 21, 23, 28, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 136, 137, 138, 139, 140, 141, 142], "implement": [15, 17, 21, 23, 28, 39, 42, 44, 45, 132, 133, 136, 137, 138, 139, 140, 141, 142, 148, 356], "data": [15, 17, 21, 23, 26, 28, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 136, 137, 138, 139, 140, 141, 142, 147, 255, 337, 340, 341, 355, 374], "type": [15, 17, 21, 23, 26, 28, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 136, 137, 138, 139, 140, 141, 142, 255], "represent": [15, 17, 21, 23, 28, 39, 42, 44, 45, 132, 133, 136, 137, 139, 141, 142], "mean": [15, 42], "varianc": [15, 42], "shift": [15, 42], "sourc": [15, 17, 18, 42, 44, 132, 136, 141, 142, 146, 355], "destin": [15, 17, 42, 44, 132, 136, 141, 142, 355], "Their": [15, 42, 44, 132, 141], "gradient": [15, 42, 44, 132, 141], "limit": [15, 17, 19, 21, 23, 26, 28, 30, 39, 42, 44, 45, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142], "perform": [15, 16, 17, 21, 23, 28, 39, 42, 44, 45, 132, 133, 135, 136, 137, 138, 140, 141, 142, 355, 356, 376], "tip": [15, 17, 21, 23, 28, 39, 42, 44, 45, 132, 133, 136, 137, 138, 140, 141, 142], "benchmark": [16, 130], "from": [18, 146, 337], "download": 18, "code": [18, 32, 40, 146, 340], "linux": [18, 43, 135], "maco": [18, 43], "gcc": 18, "clang": 18, "intel": [18, 26, 41, 146], "oneapi": [18, 300, 308], "dpc": [18, 27, 301], "c": [18, 32, 208, 215, 220], "compil": [18, 19, 31, 32, 287, 288], "sycl": [18, 27, 282, 297, 310, 374], "runtim": [18, 19, 24, 43, 130, 261, 292], "target": [18, 19], "aarch64": [18, 19], "x64": 18, "host": [18, 19], "arm": [18, 19], "comput": [18, 19, 41], "acl": 18, "window": [18, 43], "microsoft": 18, "visual": 18, "valid": [18, 20, 337, 340, 341, 374], "instal": 18, "option": [19, 32], "common": [19, 252, 271], "configur": [19, 130, 356], "function": [19, 139, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 304, 305, 306, 307, 337, 340, 341, 355, 374], "onednn_enable_workload": 19, "onednn_enable_primit": 19, "onednn_enable_primitive_cpu_isa": 19, "onednn_enable_primitive_gpu_isa": 19, "cpu": [19, 24, 25, 40, 41, 130, 336, 337, 374], "specif": [19, 22, 37], "architectur": [19, 26], "dispatch": [19, 24, 148], "control": [19, 24, 25, 30, 32, 33, 134, 135, 148], "isa": [19, 25], "hint": [19, 25], "openmp": 19, "thread": [19, 130, 143], "block": [19, 147, 356], "tbb": 19, "threadpool": [19, 143, 283], "vendor": 19, "bla": [19, 251], "gpu": [19, 40, 41, 336, 337, 341, 374], "opencl": [19, 129, 266, 301, 341], "compon": 19, "backend": 19, "input": [20, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "concat": [21, 58, 213, 253, 325, 389, 390], "name": 22, "convent": 22, "variabl": [22, 32], "formula": 22, "verbos": [22, 148], "rnn": [22, 139, 276, 312, 332, 333, 351, 367], "notat": 22, "format": [22, 147, 355, 356], "tag": [22, 135], "regular": [23, 59], "dilat": [23, 59], "deconvolut": [23, 256], "transpos": 23, "3": 23, "algorithm": [23, 151], "direct": 23, "winograd": 23, "automat": 23, "select": [23, 111], "time": [24, 25, 30, 32, 33, 134, 135, 148], "run": [25, 33, 134, 135, 148], "onednn": [26, 43, 130, 135, 143, 146, 247, 337, 340, 341, 374], "environ": [26, 32], "hardwar": 26, "r": 26, "processor": [26, 41], "graphic": 26, "xe": 26, "interoper": [27, 129, 261, 266, 282, 283, 292, 297, 301], "buffer": [27, 129, 355], "usm": [27, 129], "interfac": [27, 129], "depend": [27, 129], "except": 28, "experiment": 30, "featur": [30, 135], "onednn_experimental_spars": 30, "onednn_experimental_profil": 30, "onednn_experimental_graph_compiler_backend": 30, "logic": [31, 293], "codegen": 32, "jit": [32, 40], "llvm": 32, "builtin": 32, "enabl": [32, 148], "trace": 32, "switch": 32, "dump": [32, 33], "fusion": 34, "pattern": 34, "aggress": 34, "low": 35, "precis": 35, "int8": [35, 36, 38, 41, 322, 333, 342], "bf16": [35, 323], "f16": 35, "best": 36, "practic": 36, "fp32": [36, 144], "aspect": 37, "propag": [37, 355], "kind": [37, 157, 169, 183], "workspac": 37, "process": [38, 146], "rang": 38, "factor": 38, "inner": [39, 260, 344], "product": [39, 260, 344], "inspect": [40, 376], "nuanc": 41, "mix": 41, "u8": [41, 318], "s8": 41, "avx2": 41, "avx": 41, "512": 41, "dl": 41, "boost": 41, "same": 41, "refer": [41, 300], "layer": [42, 262, 346], "header": [43, 337, 340, 341, 374], "file": 43, "harden": 43, "local": [44, 349], "respons": [44, 349], "lrn": [44, 228, 263], "matrix": [45, 264], "multipl": [45, 147, 264], "ab": 46, "oper": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 246], "absbackward": 47, "add": 48, "avgpool": 49, "avgpoolbackward": 50, "batchnormforwardtrain": 51, "batchnorminfer": 52, "batchnormtrainingbackward": 53, "biasadd": 54, "biasaddbackward": 55, "clamp": 56, "clampbackward": 57, "convolutionbackwarddata": 60, "convolutionbackwardweight": 61, "convtranspos": 62, "convtransposebackwarddata": 63, "convtransposebackwardweight": 64, "dequant": 65, "divid": 66, "dynamicdequant": 67, "dynamicquant": 68, "elu": 69, "elubackward": 70, "end": 71, "exp": 72, "gelu": 73, "gelubackward": 74, "hardsigmoid": 75, "hardsigmoidbackward": 76, "hardswish": 77, "hardswishbackward": 78, "interpol": 79, "interpolatebackward": 80, "layernorm": 81, "layernormbackward": 82, "leakyrelu": 83, "log": 84, "logsoftmax": 85, "logsoftmaxbackward": 86, "matmul": [87, 230, 330, 334, 342, 353, 445, 446], "maximum": 88, "maxpool": 89, "maxpoolbackward": 90, "minimum": 91, "mish": 92, "mishbackward": 93, "multipli": 94, "pow": 95, "broadcast": [96, 97, 111], "rule": [96, 97, 111], "prelubackward": 97, "reciproc": 99, "reducel1": 100, "reducel2": 101, "reducemax": 102, "reducemean": 103, "reducemin": 104, "reduceprod": 105, "reducesum": 106, "relubackward": 108, "reorder": [109, 137, 236, 274, 336, 337, 355, 363, 470, 471], "round": 110, "sigmoid": 112, "sigmoidbackward": 113, "softmax": [114, 141, 240, 279, 370], "softmaxbackward": 115, "softplu": 116, "softplusbackward": 117, "sqrt": 118, "sqrtbackward": 119, "squar": 120, "squareddiffer": 121, "staticreshap": 122, "statictranspos": 123, "subtract": 124, "tanhbackward": 126, "typecast": 127, "wildcard": 128, "set": 130, "whole": 130, "machin": 130, "singl": 130, "numa": 130, "domain": 130, "sever": 130, "core": 130, "within": 130, "persist": 131, "cach": [131, 134, 269, 288, 289], "pool": [132, 233, 267, 355, 357], "consumpt": 134, "profil": [134, 135, 148, 149, 272, 356, 376], "vtune": [135, 149], "itt": 135, "hotspot": 135, "microarchitectur": 135, "inform": [135, 146, 348], "perf": 135, "reduct": [136, 235, 273, 361, 468, 469], "resampl": [138, 237, 275, 365], "nearest": 138, "neighbor": 138, "bilinear": 138, "cell": 139, "vanilla": 139, "lstm": [139, 229, 351], "peephol": 139, "project": 139, "lstmp": 139, "gru": 139, "linear": 139, "befor": 139, "reset": 139, "augru": [139, 204, 312], "consider": 139, "shuffl": [140, 239, 278, 368], "layout": [140, 147], "us": [143, 147], "base": 143, "bfp16": 144, "bfloat16": 145, "transit": 146, "mkl": 146, "dnn": 146, "summari": [146, 356], "chang": 146, "broken": 146, "compat": 146, "develop": [146, 300], "understand": [147, 148], "nomenclatur": 147, "plain": 147, "nchw": 147, "nhwc": 147, "chwn": 147, "relev": 147, "read": 147, "stride": 147, "what": 147, "ar": 147, "8": 147, "16": 147, "troubleshoot": 148, "creation": 148, "issu": 148, "workload": 148, "why": 148, "given": 148, "i": 148, "onednn_verbos": 148, "timestamp": 148, "decrypt": 148, "tm": 149, "enum": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "dnnl_alg_kind_t": 150, "valu": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "cpu_isa": 152, "cpu_isa_hint": 153, "dnnl_cpu_isa_hints_t": 154, "dnnl_cpu_isa_t": 155, "dnnl_data_type_t": 156, "dnnl_engine_kind_t": 158, "dnnl_format_kind_t": 159, "dnnl_format_tag_t": 160, "fpmath_mod": 161, "dnnl_fpmath_mode_t": 162, "dnnl_graph_layout_type_t": 163, "data_typ": [164, 175], "layout_typ": 165, "property_typ": 166, "attr": 167, "dnnl_graph_op_attr_t": 168, "dnnl_graph_op_kind_t": 170, "polici": 171, "dnnl_graph_partition_policy_t": 172, "statu": [173, 198, 296], "dnnl_graph_tensor_property_t": 174, "format_kind": 176, "format_tag": 177, "sparse_encod": 178, "normalization_flag": 179, "dnnl_normalization_flags_t": 180, "ocl_interop": [181, 305], "memory_kind": [181, 202], "dnnl_ocl_interop_memory_kind_t": 182, "dnnl_primitive_kind_t": 184, "profiling_data_kind": 185, "dnnl_profiling_data_kind_t": 186, "prop_kind": 187, "dnnl_prop_kind_t": 188, "queri": 189, "dnnl_query_t": 190, "rnn_direct": 191, "dnnl_rnn_direction_t": 192, "rnn_flag": 193, "dnnl_rnn_flags_t": 194, "scratchpad_mod": 195, "dnnl_scratchpad_mode_t": 196, "dnnl_sparse_encoding_t": 197, "dnnl_status_t": 199, "flag": 200, "dnnl_stream_flags_t": 201, "sycl_interop": [202, 304, 306], "dnnl_sycl_interop_memory_kind_t": 203, "cpp": [204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "batch_norm": 205, "bnorm_u8_via_binary_postop": 207, "cnn_inference_f32": [208, 209], "cnn_inference_int8": 210, "cnn_training_bf16": 211, "cnn_training_f32": 212, "cpu_cnn_training_f32": 215, "cpu_matmul_quant": 216, "cpu_rnn_inference_f32": 217, "cpu_rnn_inference_int8": 218, "cpu_sgemm_and_matmul": 219, "cross_engine_reord": [220, 221], "getting_start": 223, "gpu_opencl_interop": 224, "inference_int8_matmul": 225, "inner_product": 226, "layer_norm": 227, "memory_format_propag": [231, 355], "performance_profil": 232, "rnn_training_f32": 238, "sycl_interop_buff": 242, "global": [243, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 304, 305, 306, 307], "namespac": [243, 302, 303, 304, 305, 306, 307, 308, 309, 310], "program": [245, 377], "macro": [255, 265, 271, 277, 293], "servic": 277, "util": [284, 299], "constant": 289, "deep": 300, "neural": 300, "network": 300, "guid": 300, "threadpool_interop": [307, 489], "std": 309, "orphan": 311, "untitl": [313, 315, 317, 319, 326, 328, 331, 335, 339, 343, 345, 347, 350, 352, 354, 358, 360, 362, 364, 366, 369, 371, 373], "bnorm": 318, "cnn": [320, 321, 322, 323, 324, 329], "f32": [320, 321, 324, 329, 332, 367], "tutori": [330, 334, 342, 355], "comparison": 334, "sgemm": 334, "public": [337, 340, 341, 374], "cross_engine_reorder_tutori": 337, "wrap": [337, 340, 341, 374], "get": [337, 340, 341, 374], "result": [337, 340, 341, 355, 374], "all": 337, "element": 338, "wise": 338, "start": [340, 341, 374], "getting_started_tutori": 340, "prepar": 340, "outsid": 340, "descriptor": 340, "altern": 340, "wai": 340, "obtain": 340, "main": [340, 374], "gpu_opencl_interop_tutori": 341, "initi": [341, 355, 374], "custom": [341, 374], "kernel": [341, 374], "legal": 348, "trademark": 348, "determin": 355, "need": 355, "intermedi": 355, "necessari": 355, "walkthrough": 356, "naiv": 356, "fuse": 356, "notic": 356, "both": 374, "sycl_interop_buffer_tutori": 374, "todo": 375, "list": 375, "struct": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "args_t": 378, "augru_backward": [379, 380], "inherit": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "member": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493], "primitive_desc": [380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 458, 460, 466, 469, 471, 473, 475, 478, 480, 482, 484, 488, 491, 493], "augru_forward": [381, 382], "batch_normalization_backward": [383, 384], "batch_normalization_forward": [385, 386], "convolution_backward_data": [391, 392], "convolution_backward_weight": [393, 394], "convolution_forward": [395, 396], "deconvolution_backward_data": [397, 398], "deconvolution_backward_weight": [399, 400], "deconvolution_forward": [401, 402], "eltwise_backward": [403, 404], "eltwise_forward": [405, 406], "dnnl_engin": 407, "dnnl_exec_arg_t": 410, "field": [410, 411, 412, 489, 494], "dnnl_graph_inplace_pair_t": 411, "dnnl_graph_logical_tensor_t": 412, "gru_backward": [413, 414], "gru_forward": [415, 416], "templat": [417, 418], "handle_trait": 418, "inner_product_backward_data": [419, 420], "inner_product_backward_weight": [421, 422], "inner_product_forward": [423, 424], "layer_normalization_backward": [425, 426], "layer_normalization_forward": [427, 428], "lbr_augru_backward": [429, 430], "lbr_augru_forward": [431, 432], "lbr_gru_backward": [433, 434], "lbr_gru_forward": [435, 436], "lrn_backward": [437, 438], "lrn_forward": [439, 440], "lstm_backward": [441, 442], "lstm_forward": [443, 444], "dnnl_memori": 447, "dnnl_memory_desc": 449, "desc": 450, "pooling_backward": [451, 452], "pooling_forward": [453, 454], "dnnl_post_op": 455, "post_op": 456, "prelu_backward": [457, 458], "prelu_forward": [459, 460], "dnnl_primit": 461, "dnnl_primitive_attr": 463, "primitive_attr": 464, "dnnl_primitive_desc": 465, "primitive_desc_bas": 467, "resampling_backward": [472, 473], "resampling_forward": [474, 475], "rnn_primitive_desc_bas": 476, "shuffle_backward": [477, 478], "shuffle_forward": [479, 480], "softmax_backward": [481, 482], "softmax_forward": [483, 484], "dnnl_stream": 485, "threadpool_ifac": 489, "vanilla_rnn_backward": [490, 491], "vanilla_rnn_forward": [492, 493], "dnnl_version_t": 494, "example_allows_unimpl": 495, "gemm_dims_t": 496}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Building and Linking": [[1, "building-and-linking"]], "Advanced Topics": [[0, "advanced-topics"]], "class dnnl::graph::compiled_partition": [[3, "class-dnnl-graph-compiled-partition"]], "Overview": [[3, "overview"], [2, "overview"], [8, "overview"], [27, "overview"], [6, "overview"], [7, "overview"], [5, "overview"], [4, "overview"], [129, "overview"], [150, "overview"], [151, "overview"], [152, "overview"], [153, "overview"], [154, "overview"], [155, "overview"], [156, "overview"], [157, "overview"], [158, "overview"], [159, "overview"], [161, "overview"], [160, "overview"], [162, "overview"], [163, "overview"], [164, "overview"], [165, "overview"], [167, "overview"], [166, "overview"], [168, "overview"], [171, "overview"], [172, "overview"], [173, "overview"], [174, "overview"], [175, "overview"], [176, "overview"], [177, "overview"], [178, "overview"], [179, "overview"], [180, "overview"], [181, "overview"], [182, "overview"], [183, "overview"], [185, "overview"], [184, "overview"], [186, "overview"], [187, "overview"], [188, "overview"], [189, "overview"], [191, "overview"], [190, "overview"], [192, "overview"], [193, "overview"], [195, "overview"], [194, "overview"], [197, "overview"], [196, "overview"], [198, "overview"], [199, "overview"], [200, "overview"], [201, "overview"], [202, "overview"], [203, "overview"], [249, "overview"], [248, "overview"], [250, "overview"], [251, "overview"], [253, "overview"], [255, "overview"], [254, "overview"], [257, "overview"], [256, "overview"], [259, "overview"], [258, "overview"], [260, "overview"], [262, "overview"], [263, "overview"], [265, "overview"], [264, "overview"], [267, "overview"], [266, "overview"], [268, "overview"], [269, "overview"], [271, "overview"], [270, "overview"], [273, "overview"], [272, "overview"], [275, "overview"], [274, "overview"], [277, "overview"], [276, "overview"], [278, "overview"], [279, "overview"], [280, "overview"], [281, "overview"], [282, "overview"], [283, "overview"], [286, "overview"], [287, "overview"], [289, "overview"], [288, "overview"], [291, "overview"], [290, "overview"], [293, "overview"], [294, "overview"], [295, "overview"], [297, "overview"], [298, "overview"], [305, "overview"], [304, "overview"], [307, "overview"], [306, "overview"], [308, "overview"], [379, "overview"], [380, "overview"], [381, "overview"], [383, "overview"], [382, "overview"], [384, "overview"], [385, "overview"], [387, "overview"], [386, "overview"], [389, "overview"], [388, "overview"], [390, "overview"], [391, "overview"], [393, "overview"], [392, "overview"], [395, "overview"], [394, "overview"], [396, "overview"], [397, "overview"], [398, "overview"], [399, "overview"], [400, "overview"], [401, "overview"], [402, "overview"], [403, "overview"], [404, "overview"], [405, "overview"], [406, "overview"], [409, "overview"], [408, "overview"], [410, "overview"], [411, "overview"], [412, "overview"], [413, "overview"], [414, "overview"], [415, "overview"], [417, "overview"], [416, "overview"], [419, "overview"], [420, "overview"], [421, "overview"], [422, "overview"], [423, "overview"], [424, "overview"], [425, "overview"], [426, "overview"], [427, "overview"], [429, "overview"], [428, "overview"], [431, "overview"], [430, "overview"], [432, "overview"], [433, "overview"], [434, "overview"], [435, "overview"], [436, "overview"], [437, "overview"], [438, "overview"], [439, "overview"], [441, "overview"], [440, "overview"], [442, "overview"], [443, "overview"], [444, "overview"], [445, "overview"], [446, "overview"], [448, "overview"], [450, "overview"], [451, "overview"], [453, "overview"], [452, "overview"], [455, "overview"], [454, "overview"], [457, "overview"], [456, "overview"], [458, "overview"], [459, "overview"], [460, "overview"], [462, "overview"], [463, "overview"], [464, "overview"], [467, "overview"], [466, "overview"], [469, "overview"], [468, "overview"], [470, "overview"], [471, "overview"], [472, "overview"], [473, "overview"], [474, "overview"], [475, "overview"], [476, "overview"], [477, "overview"], [479, "overview"], [478, "overview"], [481, "overview"], [480, "overview"], [483, "overview"], [482, "overview"], [484, "overview"], [486, "overview"], [487, "overview"], [489, "overview"], [488, "overview"], [490, "overview"], [491, "overview"], [492, "overview"], [493, "overview"], [494, "overview"]], "Detailed Documentation": [[3, "detailed-documentation"], [2, "detailed-documentation"], [8, "detailed-documentation"], [6, "detailed-documentation"], [7, "detailed-documentation"], [5, "detailed-documentation"], [4, "detailed-documentation"], [150, "detailed-documentation"], [151, "detailed-documentation"], [152, "detailed-documentation"], [153, "detailed-documentation"], [154, "detailed-documentation"], [155, "detailed-documentation"], [156, "detailed-documentation"], [157, "detailed-documentation"], [158, "detailed-documentation"], [159, "detailed-documentation"], [161, "detailed-documentation"], [160, "detailed-documentation"], [162, "detailed-documentation"], [163, "detailed-documentation"], [164, "detailed-documentation"], [165, "detailed-documentation"], [167, "detailed-documentation"], [166, "detailed-documentation"], [168, "detailed-documentation"], [171, "detailed-documentation"], [172, "detailed-documentation"], [173, "detailed-documentation"], [174, "detailed-documentation"], [175, "detailed-documentation"], [176, "detailed-documentation"], [177, "detailed-documentation"], [178, "detailed-documentation"], [179, "detailed-documentation"], [180, "detailed-documentation"], [181, "detailed-documentation"], [182, "detailed-documentation"], [183, "detailed-documentation"], [185, "detailed-documentation"], [184, "detailed-documentation"], [186, "detailed-documentation"], [187, "detailed-documentation"], [188, "detailed-documentation"], [189, "detailed-documentation"], [191, "detailed-documentation"], [190, "detailed-documentation"], [192, "detailed-documentation"], [193, "detailed-documentation"], [195, "detailed-documentation"], [194, "detailed-documentation"], [197, "detailed-documentation"], [196, "detailed-documentation"], [198, "detailed-documentation"], [199, "detailed-documentation"], [200, "detailed-documentation"], [201, "detailed-documentation"], [202, "detailed-documentation"], [203, "detailed-documentation"], [249, "detailed-documentation"], [248, "detailed-documentation"], [250, "detailed-documentation"], [251, "detailed-documentation"], [253, "detailed-documentation"], [255, "detailed-documentation"], [254, "detailed-documentation"], [257, "detailed-documentation"], [256, "detailed-documentation"], [259, "detailed-documentation"], [258, "detailed-documentation"], [260, "detailed-documentation"], [262, "detailed-documentation"], [263, "detailed-documentation"], [265, "detailed-documentation"], [264, "detailed-documentation"], [267, "detailed-documentation"], [266, "detailed-documentation"], [268, "detailed-documentation"], [269, "detailed-documentation"], [271, "detailed-documentation"], [270, "detailed-documentation"], [273, "detailed-documentation"], [272, "detailed-documentation"], [275, "detailed-documentation"], [274, "detailed-documentation"], [277, "detailed-documentation"], [276, "detailed-documentation"], [278, "detailed-documentation"], [279, "detailed-documentation"], [280, "detailed-documentation"], [281, "detailed-documentation"], [282, "detailed-documentation"], [283, "detailed-documentation"], [286, "detailed-documentation"], [287, "detailed-documentation"], [289, "detailed-documentation"], [288, "detailed-documentation"], [291, "detailed-documentation"], [290, "detailed-documentation"], [293, "detailed-documentation"], [294, "detailed-documentation"], [295, "detailed-documentation"], [297, "detailed-documentation"], [298, "detailed-documentation"], [305, "detailed-documentation"], [304, "detailed-documentation"], [307, "detailed-documentation"], [306, "detailed-documentation"], [308, "detailed-documentation"], [379, "detailed-documentation"], [380, "detailed-documentation"], [381, "detailed-documentation"], [383, "detailed-documentation"], [382, "detailed-documentation"], [384, "detailed-documentation"], [385, "detailed-documentation"], [387, "detailed-documentation"], [386, "detailed-documentation"], [389, "detailed-documentation"], [388, "detailed-documentation"], [390, "detailed-documentation"], [391, "detailed-documentation"], [393, "detailed-documentation"], [392, "detailed-documentation"], [395, "detailed-documentation"], [394, "detailed-documentation"], [396, "detailed-documentation"], [397, "detailed-documentation"], [398, "detailed-documentation"], [399, "detailed-documentation"], [400, "detailed-documentation"], [401, "detailed-documentation"], [402, "detailed-documentation"], [403, "detailed-documentation"], [404, "detailed-documentation"], [405, "detailed-documentation"], [406, "detailed-documentation"], [409, "detailed-documentation"], [408, "detailed-documentation"], [410, "detailed-documentation"], [411, "detailed-documentation"], [412, "detailed-documentation"], [413, "detailed-documentation"], [414, "detailed-documentation"], [415, "detailed-documentation"], [417, "detailed-documentation"], [416, "detailed-documentation"], [419, "detailed-documentation"], [420, "detailed-documentation"], [421, "detailed-documentation"], [422, "detailed-documentation"], [423, "detailed-documentation"], [424, "detailed-documentation"], [425, "detailed-documentation"], [426, "detailed-documentation"], [427, "detailed-documentation"], [429, "detailed-documentation"], [428, "detailed-documentation"], [431, "detailed-documentation"], [430, "detailed-documentation"], [432, "detailed-documentation"], [433, "detailed-documentation"], [434, "detailed-documentation"], [435, "detailed-documentation"], [436, "detailed-documentation"], [437, "detailed-documentation"], [438, "detailed-documentation"], [439, "detailed-documentation"], [441, "detailed-documentation"], [440, "detailed-documentation"], [442, "detailed-documentation"], [443, "detailed-documentation"], [444, "detailed-documentation"], [445, "detailed-documentation"], [446, "detailed-documentation"], [448, "detailed-documentation"], [450, "detailed-documentation"], [451, "detailed-documentation"], [453, "detailed-documentation"], [452, "detailed-documentation"], [455, "detailed-documentation"], [454, "detailed-documentation"], [457, "detailed-documentation"], [456, "detailed-documentation"], [458, "detailed-documentation"], [459, "detailed-documentation"], [460, "detailed-documentation"], [462, "detailed-documentation"], [463, "detailed-documentation"], [464, "detailed-documentation"], [467, "detailed-documentation"], [466, "detailed-documentation"], [469, "detailed-documentation"], [468, "detailed-documentation"], [470, "detailed-documentation"], [471, "detailed-documentation"], [472, "detailed-documentation"], [473, "detailed-documentation"], [474, "detailed-documentation"], [475, "detailed-documentation"], [476, "detailed-documentation"], [477, "detailed-documentation"], [479, "detailed-documentation"], [478, "detailed-documentation"], [481, "detailed-documentation"], [480, "detailed-documentation"], [483, "detailed-documentation"], [482, "detailed-documentation"], [484, "detailed-documentation"], [486, "detailed-documentation"], [487, "detailed-documentation"], [489, "detailed-documentation"], [488, "detailed-documentation"], [490, "detailed-documentation"], [491, "detailed-documentation"], [492, "detailed-documentation"], [493, "detailed-documentation"], [494, "detailed-documentation"]], "Construction": [[3, "construction"], [2, "construction"], [8, "construction"], [6, "construction"], [7, "construction"], [5, "construction"], [4, "construction"], [379, "construction"], [380, "construction"], [381, "construction"], [383, "construction"], [382, "construction"], [384, "construction"], [385, "construction"], [387, "construction"], [386, "construction"], [389, "construction"], [388, "construction"], [390, "construction"], [391, "construction"], [393, "construction"], [392, "construction"], [395, "construction"], [394, "construction"], [396, "construction"], [397, "construction"], [398, "construction"], [399, "construction"], [400, "construction"], [401, "construction"], [402, "construction"], [403, "construction"], [404, "construction"], [405, "construction"], [406, "construction"], [409, "construction"], [408, "construction"], [413, "construction"], [414, "construction"], [415, "construction"], [417, "construction"], [416, "construction"], [419, "construction"], [420, "construction"], [421, "construction"], [422, "construction"], [423, "construction"], [424, "construction"], [425, "construction"], [426, "construction"], [427, "construction"], [429, "construction"], [428, "construction"], [431, "construction"], [430, "construction"], [432, "construction"], [433, "construction"], [434, "construction"], [435, "construction"], [436, "construction"], [437, "construction"], [438, "construction"], [439, "construction"], [441, "construction"], [440, "construction"], [442, "construction"], [443, "construction"], [444, "construction"], [445, "construction"], [446, "construction"], [448, "construction"], [450, "construction"], [451, "construction"], [453, "construction"], [452, "construction"], [454, "construction"], [457, "construction"], [456, "construction"], [458, "construction"], [459, "construction"], [460, "construction"], [462, "construction"], [464, "construction"], [469, "construction"], [468, "construction"], [470, "construction"], [471, "construction"], [472, "construction"], [473, "construction"], [474, "construction"], [475, "construction"], [476, "construction"], [477, "construction"], [479, "construction"], [478, "construction"], [481, "construction"], [480, "construction"], [483, "construction"], [482, "construction"], [484, "construction"], [486, "construction"], [487, "construction"], [488, "construction"], [490, "construction"], [491, "construction"], [492, "construction"], [493, "construction"]], "Methods": [[3, "methods"], [8, "methods"], [6, "methods"], [7, "methods"], [5, "methods"], [4, "methods"], [380, "methods"], [382, "methods"], [384, "methods"], [386, "methods"], [388, "methods"], [390, "methods"], [392, "methods"], [394, "methods"], [396, "methods"], [398, "methods"], [400, "methods"], [402, "methods"], [404, "methods"], [406, "methods"], [409, "methods"], [408, "methods"], [414, "methods"], [417, "methods"], [416, "methods"], [420, "methods"], [422, "methods"], [424, "methods"], [426, "methods"], [428, "methods"], [430, "methods"], [432, "methods"], [434, "methods"], [436, "methods"], [438, "methods"], [440, "methods"], [442, "methods"], [444, "methods"], [446, "methods"], [448, "methods"], [450, "methods"], [452, "methods"], [454, "methods"], [456, "methods"], [458, "methods"], [460, "methods"], [462, "methods"], [464, "methods"], [467, "methods"], [466, "methods"], [469, "methods"], [470, "methods"], [471, "methods"], [473, "methods"], [475, "methods"], [476, "methods"], [478, "methods"], [480, "methods"], [482, "methods"], [484, "methods"], [486, "methods"], [489, "methods"], [488, "methods"], [491, "methods"], [493, "methods"]], "class dnnl::graph::allocator": [[2, "class-dnnl-graph-allocator"]], "class dnnl::graph::tensor": [[8, "class-dnnl-graph-tensor"]], "Primitive Attributes": [[9, "primitive-attributes"]], "Attributes Usage": [[9, "attributes-usage"]], "Supported Attributes": [[9, "supported-attributes"]], "Attribute Related Error Handling": [[9, "attribute-related-error-handling"]], "Binary": [[17, "binary"], [11, "binary"], [250, "binary"]], "General": [[17, "general"], [21, "general"], [47, "general"], [46, "general"], [49, "general"], [48, "general"], [51, "general"], [50, "general"], [28, "general"], [39, "general"], [15, "general"], [42, "general"], [45, "general"], [44, "general"], [52, "general"], [53, "general"], [55, "general"], [54, "general"], [57, "general"], [56, "general"], [59, "general"], [58, "general"], [23, "general"], [60, "general"], [61, "general"], [62, "general"], [63, "general"], [64, "general"], [65, "general"], [66, "general"], [67, "general"], [68, "general"], [69, "general"], [70, "general"], [71, "general"], [73, "general"], [72, "general"], [75, "general"], [74, "general"], [76, "general"], [77, "general"], [78, "general"], [79, "general"], [80, "general"], [81, "general"], [83, "general"], [82, "general"], [84, "general"], [85, "general"], [86, "general"], [87, "general"], [89, "general"], [88, "general"], [91, "general"], [90, "general"], [92, "general"], [93, "general"], [95, "general"], [94, "general"], [97, "general"], [96, "general"], [98, "general"], [99, "general"], [100, "general"], [101, "general"], [103, "general"], [102, "general"], [104, "general"], [105, "general"], [107, "general"], [106, "general"], [109, "general"], [108, "general"], [110, "general"], [111, "general"], [112, "general"], [113, "general"], [115, "general"], [114, "general"], [117, "general"], [116, "general"], [119, "general"], [118, "general"], [120, "general"], [121, "general"], [123, "general"], [122, "general"], [125, "general"], [124, "general"], [127, "general"], [126, "general"], [128, "general"], [132, "general"], [133, "general"], [136, "general"], [137, "general"], [138, "general"], [139, "general"], [141, "general"], [140, "general"], [142, "general"]], "Execution Arguments": [[17, "execution-arguments"], [21, "execution-arguments"], [28, "execution-arguments"], [39, "execution-arguments"], [15, "execution-arguments"], [42, "execution-arguments"], [45, "execution-arguments"], [44, "execution-arguments"], [23, "execution-arguments"], [132, "execution-arguments"], [133, "execution-arguments"], [136, "execution-arguments"], [137, "execution-arguments"], [138, "execution-arguments"], [139, "execution-arguments"], [141, "execution-arguments"], [140, "execution-arguments"], [142, "execution-arguments"]], "Implementation Details": [[17, "implementation-details"], [21, "implementation-details"], [28, "implementation-details"], [39, "implementation-details"], [15, "implementation-details"], [42, "implementation-details"], [45, "implementation-details"], [44, "implementation-details"], [23, "implementation-details"], [132, "implementation-details"], [133, "implementation-details"], [136, "implementation-details"], [137, "implementation-details"], [138, "implementation-details"], [139, "implementation-details"], [141, "implementation-details"], [142, "implementation-details"]], "General Notes": [[17, "general-notes"], [21, "general-notes"], [28, "general-notes"], [39, "general-notes"], [15, "general-notes"], [42, "general-notes"], [45, "general-notes"], [44, "general-notes"], [23, "general-notes"], [132, "general-notes"], [133, "general-notes"], [136, "general-notes"], [137, "general-notes"], [138, "general-notes"], [141, "general-notes"], [142, "general-notes"]], "Post-Ops and Attributes": [[17, "post-ops-and-attributes"], [21, "post-ops-and-attributes"], [28, "post-ops-and-attributes"], [39, "post-ops-and-attributes"], [15, "post-ops-and-attributes"], [132, "post-ops-and-attributes"], [136, "post-ops-and-attributes"], [137, "post-ops-and-attributes"], [138, "post-ops-and-attributes"], [139, "post-ops-and-attributes"], [140, "post-ops-and-attributes"], [142, "post-ops-and-attributes"]], "Data Types Support": [[17, "data-types-support"], [21, "data-types-support"], [136, "data-types-support"], [137, "data-types-support"], [142, "data-types-support"]], "Data Representation": [[17, "data-representation"], [21, "data-representation"], [28, "data-representation"], [39, "data-representation"], [15, "data-representation"], [42, "data-representation"], [45, "data-representation"], [44, "data-representation"], [23, "data-representation"], [132, "data-representation"], [133, "data-representation"], [136, "data-representation"], [137, "data-representation"], [139, "data-representation"], [141, "data-representation"], [142, "data-representation"]], "Sources, Destination": [[17, "sources-destination"], [136, "sources-destination"], [142, "sources-destination"]], "Implementation Limitations": [[17, "implementation-limitations"], [21, "implementation-limitations"], [28, "implementation-limitations"], [39, "implementation-limitations"], [15, "implementation-limitations"], [42, "implementation-limitations"], [45, "implementation-limitations"], [44, "implementation-limitations"], [23, "implementation-limitations"], [132, "implementation-limitations"], [133, "implementation-limitations"], [136, "implementation-limitations"], [137, "implementation-limitations"], [138, "implementation-limitations"], [139, "implementation-limitations"], [141, "implementation-limitations"], [140, "implementation-limitations"], [142, "implementation-limitations"]], "Performance Tips": [[17, "performance-tips"], [21, "performance-tips"], [28, "performance-tips"], [39, "performance-tips"], [15, "performance-tips"], [42, "performance-tips"], [45, "performance-tips"], [44, "performance-tips"], [23, "performance-tips"], [132, "performance-tips"], [133, "performance-tips"], [136, "performance-tips"], [137, "performance-tips"], [138, "performance-tips"], [141, "performance-tips"], [140, "performance-tips"], [142, "performance-tips"]], "Examples": [[17, "examples"], [13, "examples"], [29, "examples"], [15, "examples"], [45, "examples"]], "Benchmarking Performance": [[16, "benchmarking-performance"]], "API": [[20, "api"], [12, "api"], [30, "api"]], "Input validation notes": [[20, "input-validation-notes"]], "Concat": [[21, "concat"], [58, "concat"], [253, "concat"]], "Example": [[21, "example"], [28, "example"], [38, "example"], [39, "example"], [42, "example"], [44, "example"], [23, "example"], [132, "example"], [133, "example"], [136, "example"], [137, "example"], [138, "example"], [139, "example"], [141, "example"], [140, "example"], [142, "example"], [145, "example"], [148, "example"]], "CPU ISA Hints": [[25, "cpu-isa-hints"]], "Build-time Controls": [[25, "build-time-controls"], [24, "build-time-controls"], [30, "build-time-controls"], [134, "build-time-controls"]], "Run-time Controls": [[25, "run-time-controls"], [134, "run-time-controls"]], "CPU Dispatcher Control": [[24, "cpu-dispatcher-control"]], "Runtime Controls": [[24, "runtime-controls"]], "Primitive Attributes: Quantization": [[12, "primitive-attributes-quantization"]], "Introduction": [[12, "introduction"], [31, "introduction"], [38, "introduction"], [14, "introduction"], [145, "introduction"], [147, "introduction"]], "Quantization Model": [[12, "quantization-model"]], "Numerical behavior": [[12, "numerical-behavior"]], "Example: Convolution Quantization Workflow": [[12, "example-convolution-quantization-workflow"]], "Per-Channel Scaling": [[12, "per-channel-scaling"]], "Output Scaling Attribute": [[12, "output-scaling-attribute"]], "Example 1: weights quantization with per-output-channel scaling": [[12, "example-1-weights-quantization-with-per-output-channel-scaling"]], "Example 2: convolution with groups, with per-output-channel quantization": [[12, "example-2-convolution-with-groups-with-per-output-channel-quantization"]], "Primitive Attributes: Scratchpad": [[13, "primitive-attributes-scratchpad"]], "Scratchpad Memory Engine": [[13, "scratchpad-memory-engine"]], "Library Manages Scratchpad": [[13, "library-manages-scratchpad"]], "User Manages Scratchpad": [[13, "user-manages-scratchpad"]], "Experimental features": [[30, "experimental-features"], [30, "id1"]], "Features details": [[30, "features-details"]], "ONEDNN_EXPERIMENTAL_SPARSE": [[30, "onednn-experimental-sparse"]], "Primitives": [[30, "primitives"], [14, "primitives"], [14, "id2"], [270, "primitives"]], "Limitations": [[30, "limitations"], [30, "id2"], [131, "limitations"]], "ONEDNN_EXPERIMENTAL_PROFILING": [[30, "onednn-experimental-profiling"]], "ONEDNN_EXPERIMENTAL_GRAPH_COMPILER_BACKEND": [[30, "onednn-experimental-graph-compiler-backend"]], "Basic Concepts": [[31, "basic-concepts"], [14, "basic-concepts"]], "Logical Tensor": [[31, "logical-tensor"], [293, "logical-tensor"]], "Op": [[31, "op"], [294, "op"]], "Graph": [[31, "graph"], [291, "graph"]], "Partition": [[31, "partition"], [295, "partition"]], "Compiled Partition": [[31, "compiled-partition"], [287, "compiled-partition"]], "Tensor": [[31, "tensor"], [298, "tensor"]], "Graph Compiler": [[32, "graph-compiler"]], "Build-Time Controls": [[32, "build-time-controls"], [33, "build-time-controls"], [135, "build-time-controls"], [135, "id1"], [148, "build-time-controls"]], "Codegen and JIT Options": [[32, "codegen-and-jit-options"]], "C": [[32, "c"]], "LLVM": [[32, "llvm"]], "Builtin": [[32, "builtin"]], "Environment Variables": [[32, "environment-variables"]], "Enable Tracing": [[32, "enable-tracing"]], "Switch Between Different Codegen Methods": [[32, "switch-between-different-codegen-methods"]], "Enable Code Dumping": [[32, "enable-code-dumping"]], "Graph Dump": [[33, "graph-dump"]], "Run-Time Controls": [[33, "run-time-controls"], [135, "run-time-controls"], [135, "id2"], [148, "run-time-controls"]], "DPC++ Interoperability": [[27, "dpc-interoperability"]], "SYCL Buffers and DPC++ USM Interfaces for Memory Objects": [[27, "sycl-buffers-and-dpc-usm-interfaces-for-memory-objects"]], "Handling Dependencies with USM": [[27, "handling-dependencies-with-usm"]], "Data Types": [[26, "data-types"], [39, "data-types"], [45, "data-types"], [23, "data-types"], [138, "data-types"], [140, "data-types"]], "Inference and Training": [[26, "inference-and-training"]], "General numerical behavior of the oneDNN library": [[26, "general-numerical-behavior-of-the-onednn-library"]], "Floating-point environment": [[26, "floating-point-environment"]], "Hardware Limitations": [[26, "hardware-limitations"]], "Intel(R) Architecture Processors": [[26, "intel-r-architecture-processors"]], "Intel(R) Processor Graphics and Xe Architecture graphics": [[26, "intel-r-processor-graphics-and-xe-architecture-graphics"]], "Nuances of int8 Computations": [[41, "nuances-of-int8-computations"]], "CPU": [[41, "cpu"], [130, "cpu"]], "1. Inputs of mixed type: u8 and s8": [[41, "inputs-of-mixed-type-u8-and-s8"]], "1.1. Processors with the Intel AVX2 or Intel AVX-512 Support": [[41, "processors-with-the-intel-avx2-or-intel-avx-512-support"]], "1.2. Processors with the Intel DL Boost Support": [[41, "processors-with-the-intel-dl-boost-support"]], "2. Inputs of the same type: s8": [[41, "inputs-of-the-same-type-s8"]], "GPU": [[41, "gpu"]], "References": [[41, "references"]], "Inspecting JIT Code": [[40, "inspecting-jit-code"]], "Example (CPU)": [[40, "example-cpu"]], "Example (GPU)": [[40, "example-gpu"]], "Primitive Attributes: floating-point math mode": [[10, "primitive-attributes-floating-point-math-mode"]], "The floating-point math mode attribute.": [[10, "the-floating-point-math-mode-attribute"]], "A note on default floating-point math mode": [[10, "a-note-on-default-floating-point-math-mode"]], "Primitive Attributes: Post-ops": [[11, "primitive-attributes-post-ops"]], "Supported Post-ops": [[11, "supported-post-ops"]], "Eltwise Post-op": [[11, "eltwise-post-op"]], "Sum Post-op": [[11, "sum-post-op"]], "Depthwise Post-op": [[11, "depthwise-post-op"]], "Binary Post-op": [[11, "binary-post-op"]], "Prelu Post-op": [[11, "prelu-post-op"]], "Examples of Chained Post-ops": [[11, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[11, "sum-relu"]], "Tanh -> Sum -> ScaleShift": [[11, "tanh-sum-scaleshift"]], "Relu -> Depthwise -> Relu": [[11, "relu-depthwise-relu"]], "AbsBackward": [[47, "absbackward"]], "Operation attributes": [[47, "operation-attributes"], [46, "operation-attributes"], [49, "operation-attributes"], [48, "operation-attributes"], [51, "operation-attributes"], [50, "operation-attributes"], [52, "operation-attributes"], [53, "operation-attributes"], [55, "operation-attributes"], [54, "operation-attributes"], [57, "operation-attributes"], [56, "operation-attributes"], [59, "operation-attributes"], [58, "operation-attributes"], [60, "operation-attributes"], [61, "operation-attributes"], [62, "operation-attributes"], [63, "operation-attributes"], [64, "operation-attributes"], [65, "operation-attributes"], [66, "operation-attributes"], [67, "operation-attributes"], [68, "operation-attributes"], [69, "operation-attributes"], [70, "operation-attributes"], [71, "operation-attributes"], [73, "operation-attributes"], [72, "operation-attributes"], [75, "operation-attributes"], [74, "operation-attributes"], [76, "operation-attributes"], [77, "operation-attributes"], [78, "operation-attributes"], [79, "operation-attributes"], [80, "operation-attributes"], [81, "operation-attributes"], [83, "operation-attributes"], [82, "operation-attributes"], [84, "operation-attributes"], [85, "operation-attributes"], [86, "operation-attributes"], [87, "operation-attributes"], [89, "operation-attributes"], [88, "operation-attributes"], [91, "operation-attributes"], [90, "operation-attributes"], [92, "operation-attributes"], [93, "operation-attributes"], [95, "operation-attributes"], [94, "operation-attributes"], [97, "operation-attributes"], [96, "operation-attributes"], [98, "operation-attributes"], [99, "operation-attributes"], [100, "operation-attributes"], [101, "operation-attributes"], [103, "operation-attributes"], [102, "operation-attributes"], [104, "operation-attributes"], [105, "operation-attributes"], [107, "operation-attributes"], [106, "operation-attributes"], [109, "operation-attributes"], [108, "operation-attributes"], [110, "operation-attributes"], [111, "operation-attributes"], [112, "operation-attributes"], [113, "operation-attributes"], [115, "operation-attributes"], [114, "operation-attributes"], [117, "operation-attributes"], [116, "operation-attributes"], [119, "operation-attributes"], [118, "operation-attributes"], [120, "operation-attributes"], [121, "operation-attributes"], [123, "operation-attributes"], [122, "operation-attributes"], [125, "operation-attributes"], [124, "operation-attributes"], [127, "operation-attributes"], [126, "operation-attributes"], [128, "operation-attributes"]], "Execution arguments": [[47, "execution-arguments"], [46, "execution-arguments"], [49, "execution-arguments"], [48, "execution-arguments"], [51, "execution-arguments"], [50, "execution-arguments"], [52, "execution-arguments"], [53, "execution-arguments"], [55, "execution-arguments"], [54, "execution-arguments"], [57, "execution-arguments"], [56, "execution-arguments"], [59, "execution-arguments"], [58, "execution-arguments"], [60, "execution-arguments"], [61, "execution-arguments"], [62, "execution-arguments"], [63, "execution-arguments"], [64, "execution-arguments"], [65, "execution-arguments"], [66, "execution-arguments"], [67, "execution-arguments"], [68, "execution-arguments"], [69, "execution-arguments"], [70, "execution-arguments"], [71, "execution-arguments"], [73, "execution-arguments"], [72, "execution-arguments"], [75, "execution-arguments"], [74, "execution-arguments"], [76, "execution-arguments"], [77, "execution-arguments"], [78, "execution-arguments"], [79, "execution-arguments"], [80, "execution-arguments"], [81, "execution-arguments"], [83, "execution-arguments"], [82, "execution-arguments"], [84, "execution-arguments"], [85, "execution-arguments"], [86, "execution-arguments"], [87, "execution-arguments"], [89, "execution-arguments"], [88, "execution-arguments"], [91, "execution-arguments"], [90, "execution-arguments"], [92, "execution-arguments"], [93, "execution-arguments"], [94, "execution-arguments"], [97, "execution-arguments"], [96, "execution-arguments"], [98, "execution-arguments"], [99, "execution-arguments"], [100, "execution-arguments"], [101, "execution-arguments"], [103, "execution-arguments"], [102, "execution-arguments"], [104, "execution-arguments"], [105, "execution-arguments"], [107, "execution-arguments"], [106, "execution-arguments"], [109, "execution-arguments"], [108, "execution-arguments"], [110, "execution-arguments"], [111, "execution-arguments"], [112, "execution-arguments"], [113, "execution-arguments"], [115, "execution-arguments"], [114, "execution-arguments"], [117, "execution-arguments"], [116, "execution-arguments"], [119, "execution-arguments"], [118, "execution-arguments"], [120, "execution-arguments"], [121, "execution-arguments"], [123, "execution-arguments"], [122, "execution-arguments"], [125, "execution-arguments"], [124, "execution-arguments"], [127, "execution-arguments"], [126, "execution-arguments"], [128, "execution-arguments"]], "Inputs": [[47, "inputs"], [46, "inputs"], [49, "inputs"], [48, "inputs"], [51, "inputs"], [50, "inputs"], [52, "inputs"], [53, "inputs"], [55, "inputs"], [54, "inputs"], [57, "inputs"], [56, "inputs"], [59, "inputs"], [58, "inputs"], [60, "inputs"], [61, "inputs"], [62, "inputs"], [63, "inputs"], [64, "inputs"], [65, "inputs"], [66, "inputs"], [67, "inputs"], [68, "inputs"], [69, "inputs"], [70, "inputs"], [71, "inputs"], [73, "inputs"], [72, "inputs"], [75, "inputs"], [74, "inputs"], [76, "inputs"], [77, "inputs"], [78, "inputs"], [79, "inputs"], [80, "inputs"], [81, "inputs"], [83, "inputs"], [82, "inputs"], [84, "inputs"], [85, "inputs"], [86, "inputs"], [87, "inputs"], [89, "inputs"], [88, "inputs"], [91, "inputs"], [90, "inputs"], [92, "inputs"], [93, "inputs"], [95, "inputs"], [94, "inputs"], [97, "inputs"], [96, "inputs"], [98, "inputs"], [99, "inputs"], [100, "inputs"], [101, "inputs"], [103, "inputs"], [102, "inputs"], [104, "inputs"], [105, "inputs"], [107, "inputs"], [106, "inputs"], [109, "inputs"], [108, "inputs"], [110, "inputs"], [111, "inputs"], [112, "inputs"], [113, "inputs"], [115, "inputs"], [114, "inputs"], [117, "inputs"], [116, "inputs"], [119, "inputs"], [118, "inputs"], [120, "inputs"], [121, "inputs"], [123, "inputs"], [122, "inputs"], [125, "inputs"], [124, "inputs"], [127, "inputs"], [126, "inputs"], [128, "inputs"]], "Outputs": [[47, "outputs"], [46, "outputs"], [49, "outputs"], [48, "outputs"], [51, "outputs"], [50, "outputs"], [52, "outputs"], [53, "outputs"], [55, "outputs"], [54, "outputs"], [57, "outputs"], [56, "outputs"], [59, "outputs"], [58, "outputs"], [60, "outputs"], [61, "outputs"], [62, "outputs"], [63, "outputs"], [64, "outputs"], [65, "outputs"], [66, "outputs"], [67, "outputs"], [68, "outputs"], [69, "outputs"], [70, "outputs"], [71, "outputs"], [73, "outputs"], [72, "outputs"], [75, "outputs"], [74, "outputs"], [76, "outputs"], [77, "outputs"], [78, "outputs"], [79, "outputs"], [80, "outputs"], [81, "outputs"], [83, "outputs"], [82, "outputs"], [84, "outputs"], [85, "outputs"], [86, "outputs"], [87, "outputs"], [89, "outputs"], [88, "outputs"], [91, "outputs"], [90, "outputs"], [92, "outputs"], [93, "outputs"], [95, "outputs"], [94, "outputs"], [97, "outputs"], [96, "outputs"], [98, "outputs"], [99, "outputs"], [100, "outputs"], [101, "outputs"], [103, "outputs"], [102, "outputs"], [104, "outputs"], [105, "outputs"], [107, "outputs"], [106, "outputs"], [109, "outputs"], [108, "outputs"], [110, "outputs"], [111, "outputs"], [112, "outputs"], [113, "outputs"], [115, "outputs"], [114, "outputs"], [117, "outputs"], [116, "outputs"], [119, "outputs"], [118, "outputs"], [120, "outputs"], [121, "outputs"], [123, "outputs"], [122, "outputs"], [125, "outputs"], [124, "outputs"], [127, "outputs"], [126, "outputs"], [128, "outputs"]], "Supported data types": [[47, "supported-data-types"], [46, "supported-data-types"], [49, "supported-data-types"], [48, "supported-data-types"], [51, "supported-data-types"], [50, "supported-data-types"], [52, "supported-data-types"], [53, "supported-data-types"], [55, "supported-data-types"], [54, "supported-data-types"], [57, "supported-data-types"], [56, "supported-data-types"], [59, "supported-data-types"], [58, "supported-data-types"], [60, "supported-data-types"], [61, "supported-data-types"], [62, "supported-data-types"], [63, "supported-data-types"], [64, "supported-data-types"], [65, "supported-data-types"], [66, "supported-data-types"], [67, "supported-data-types"], [68, "supported-data-types"], [69, "supported-data-types"], [70, "supported-data-types"], [71, "supported-data-types"], [73, "supported-data-types"], [72, "supported-data-types"], [75, "supported-data-types"], [74, "supported-data-types"], [76, "supported-data-types"], [77, "supported-data-types"], [78, "supported-data-types"], [79, "supported-data-types"], [80, "supported-data-types"], [81, "supported-data-types"], [83, "supported-data-types"], [82, "supported-data-types"], [84, "supported-data-types"], [85, "supported-data-types"], [86, "supported-data-types"], [87, "supported-data-types"], [89, "supported-data-types"], [88, "supported-data-types"], [91, "supported-data-types"], [90, "supported-data-types"], [92, "supported-data-types"], [93, "supported-data-types"], [95, "supported-data-types"], [94, "supported-data-types"], [97, "supported-data-types"], [96, "supported-data-types"], [98, "supported-data-types"], [99, "supported-data-types"], [100, "supported-data-types"], [101, "supported-data-types"], [103, "supported-data-types"], [102, "supported-data-types"], [104, "supported-data-types"], [105, "supported-data-types"], [107, "supported-data-types"], [106, "supported-data-types"], [109, "supported-data-types"], [108, "supported-data-types"], [110, "supported-data-types"], [111, "supported-data-types"], [112, "supported-data-types"], [113, "supported-data-types"], [115, "supported-data-types"], [114, "supported-data-types"], [117, "supported-data-types"], [116, "supported-data-types"], [119, "supported-data-types"], [118, "supported-data-types"], [120, "supported-data-types"], [121, "supported-data-types"], [123, "supported-data-types"], [122, "supported-data-types"], [125, "supported-data-types"], [124, "supported-data-types"], [127, "supported-data-types"], [126, "supported-data-types"], [128, "supported-data-types"]], "Abs": [[46, "abs"]], "Inference": [[36, "inference"], [34, "inference"], [34, "id1"]], "Best Practices for Inference": [[36, "best-practices-for-inference"]], "fp32 Inference": [[36, "fp32-inference"]], "int8 Inference": [[36, "int8-inference"]], "Inference and Training Aspects": [[37, "inference-and-training-aspects"]], "Propagation Kinds": [[37, "propagation-kinds"]], "Difference Between Forward Propagation on Training and Inference": [[37, "difference-between-forward-propagation-on-training-and-inference"]], "Different Backward Propagation Kinds": [[37, "different-backward-propagation-kinds"]], "Inference-Specific Aspects": [[37, "inference-specific-aspects"]], "Training-Specific Aspects": [[37, "training-specific-aspects"]], "Workspace": [[37, "workspace"]], "AvgPool": [[49, "avgpool"]], "Add": [[48, "add"]], "Low Precision": [[35, "low-precision"]], "INT8": [[35, "int8"]], "BF16/F16": [[35, "bf16-f16"]], "Supported Fusion Patterns": [[34, "supported-fusion-patterns"]], "Fusion Patterns": [[34, "fusion-patterns"]], "Floating Point Patterns": [[34, "floating-point-patterns"], [34, "id2"]], "Quantized Patterns": [[34, "quantized-patterns"], [34, "id3"]], "Training": [[34, "training"], [34, "id4"], [144, "training"]], "Aggressive Fusion Patterns": [[34, "aggressive-fusion-patterns"]], "BatchNormForwardTraining": [[51, "batchnormforwardtraining"]], "AvgPoolBackward": [[50, "avgpoolbackward"]], "Eltwise": [[28, "eltwise"], [257, "eltwise"]], "Forward": [[28, "forward"], [39, "forward"], [15, "forward"], [42, "forward"], [44, "forward"], [23, "forward"], [132, "forward"], [133, "forward"], [138, "forward"], [141, "forward"], [140, "forward"]], "Difference Between Forward Training and Forward Inference": [[28, "difference-between-forward-training-and-forward-inference"], [39, "difference-between-forward-training-and-forward-inference"], [15, "difference-between-forward-training-and-forward-inference"], [42, "difference-between-forward-training-and-forward-inference"], [23, "difference-between-forward-training-and-forward-inference"], [132, "difference-between-forward-training-and-forward-inference"], [133, "difference-between-forward-training-and-forward-inference"], [138, "difference-between-forward-training-and-forward-inference"], [141, "difference-between-forward-training-and-forward-inference"], [140, "difference-between-forward-training-and-forward-inference"]], "Backward": [[28, "backward"], [39, "backward"], [15, "backward"], [42, "backward"], [44, "backward"], [23, "backward"], [132, "backward"], [133, "backward"], [138, "backward"], [141, "backward"], [140, "backward"]], "Exceptions": [[28, "exceptions"]], "Data Type Support": [[28, "data-type-support"], [15, "data-type-support"], [42, "data-type-support"], [44, "data-type-support"], [132, "data-type-support"], [133, "data-type-support"], [139, "data-type-support"], [141, "data-type-support"]], "Int8 Inference": [[38, "int8-inference"]], "Int8 Workflow": [[38, "int8-workflow"]], "Quantization Process": [[38, "quantization-process"]], "Range of the Data": [[38, "range-of-the-data"]], "Scaling Factor": [[38, "scaling-factor"]], "Quantization Example": [[38, "quantization-example"]], "int8 Support": [[38, "int8-support"]], "Attributes": [[38, "attributes"], [248, "attributes"]], "Inner Product": [[39, "inner-product"], [260, "inner-product"]], "Batch Normalization": [[15, "batch-normalization"], [249, "batch-normalization"]], "Mean and Variance": [[15, "mean-and-variance"], [42, "mean-and-variance"]], "Scale and Shift": [[15, "scale-and-shift"], [42, "scale-and-shift"]], "Source, Destination, and Their Gradients": [[15, "source-destination-and-their-gradients"], [42, "source-destination-and-their-gradients"], [44, "source-destination-and-their-gradients"], [132, "source-destination-and-their-gradients"], [141, "source-destination-and-their-gradients"]], "Engines": [[14, "engines"]], "Streams": [[14, "streams"]], "Memory Objects": [[14, "memory-objects"], [14, "id1"]], "Levels of Abstraction": [[14, "levels-of-abstraction"]], "Creating Memory Objects and Primitives": [[14, "creating-memory-objects-and-primitives"]], "Graph Extension": [[14, "graph-extension"], [244, "graph-extension"]], "class dnnl::graph::op": [[6, "class-dnnl-graph-op"]], "class dnnl::graph::partition": [[7, "class-dnnl-graph-partition"]], "Linking to the Library": [[43, "linking-to-the-library"]], "Header Files": [[43, "header-files"]], "Libraries": [[43, "libraries"]], "Linux": [[43, "linux"]], "macOS": [[43, "macos"]], "Windows": [[43, "windows"], [43, "id1"], [18, "windows"]], "Linking to oneDNN": [[43, "linking-to-onednn"]], "Linux/macOS": [[43, "linux-macos"], [18, "linux-macos"]], "Support for macOS hardened runtime": [[43, "support-for-macos-hardened-runtime"]], "Layer Normalization": [[42, "layer-normalization"], [262, "layer-normalization"]], "Post-ops and Attributes": [[42, "post-ops-and-attributes"], [44, "post-ops-and-attributes"], [23, "post-ops-and-attributes"], [141, "post-ops-and-attributes"]], "Matrix Multiplication": [[45, "matrix-multiplication"], [264, "matrix-multiplication"]], "Attributes and Post-ops": [[45, "attributes-and-post-ops"]], "Matrix Multiplication Primitive Examples": [[45, "matrix-multiplication-primitive-examples"]], "Local Response Normalization (LRN)": [[44, "local-response-normalization-lrn"]], "BatchNormInference": [[52, "batchnorminference"]], "BatchNormTrainingBackward": [[53, "batchnormtrainingbackward"]], "BiasAddBackward": [[55, "biasaddbackward"]], "BiasAdd": [[54, "biasadd"]], "Build Options": [[19, "build-options"]], "Common options": [[19, "common-options"]], "Host compiler": [[19, "host-compiler"]], "Configuring functionality": [[19, "configuring-functionality"]], "ONEDNN_ENABLE_WORKLOAD": [[19, "onednn-enable-workload"]], "ONEDNN_ENABLE_PRIMITIVE": [[19, "onednn-enable-primitive"]], "ONEDNN_ENABLE_PRIMITIVE_CPU_ISA": [[19, "onednn-enable-primitive-cpu-isa"]], "ONEDNN_ENABLE_PRIMITIVE_GPU_ISA": [[19, "onednn-enable-primitive-gpu-isa"]], "CPU Options": [[19, "cpu-options"]], "Targeting Specific Architecture": [[19, "targeting-specific-architecture"]], "Runtime CPU dispatcher control": [[19, "runtime-cpu-dispatcher-control"]], "Runtime CPU ISA hints": [[19, "runtime-cpu-isa-hints"]], "Runtimes": [[19, "runtimes"], [19, "id1"]], "OpenMP": [[19, "openmp"]], "Threading Building Blocks (TBB)": [[19, "threading-building-blocks-tbb"]], "Threadpool": [[19, "threadpool"]], "AArch64 Options": [[19, "aarch64-options"]], "Arm Compute Library": [[19, "arm-compute-library"]], "Vendor BLAS libraries": [[19, "vendor-blas-libraries"]], "GPU Options": [[19, "gpu-options"]], "OpenCL*": [[19, "opencl"]], "Graph component limitations": [[19, "graph-component-limitations"]], "Graph Compiler Backend Limitations": [[19, "graph-compiler-backend-limitations"]], "Build from Source": [[18, "build-from-source"]], "Download the Source Code": [[18, "download-the-source-code"]], "Build the Library": [[18, "build-the-library"]], "GCC, Clang, or Intel oneAPI DPC++/C++ Compiler": [[18, "gcc-clang-or-intel-oneapi-dpc-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL runtime": [[18, "intel-oneapi-dpc-c-compiler-with-sycl-runtime"]], "GCC targeting AArch64 on x64 host": [[18, "gcc-targeting-aarch64-on-x64-host"]], "GCC with Arm Compute Library (ACL) on AArch64 host": [[18, "gcc-with-arm-compute-library-acl-on-aarch64-host"]], "Microsoft Visual C++ Compiler": [[18, "microsoft-visual-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL Runtime": [[18, "id1"]], "Validate the Build": [[18, "validate-the-build"]], "Build documentation": [[18, "build-documentation"]], "Install library": [[18, "install-library"]], "ClampBackward": [[57, "clampbackward"]], "Clamp": [[56, "clamp"]], "class dnnl::graph::logical_tensor": [[5, "class-dnnl-graph-logical-tensor"]], "Typedefs": [[5, "typedefs"], [248, "typedefs"], [255, "typedefs"], [258, "typedefs"], [265, "typedefs"], [271, "typedefs"], [277, "typedefs"], [280, "typedefs"], [286, "typedefs"], [287, "typedefs"], [291, "typedefs"], [294, "typedefs"], [295, "typedefs"], [297, "typedefs"], [298, "typedefs"], [448, "typedefs"]], "class dnnl::graph::graph": [[4, "class-dnnl-graph-graph"]], "Convolution": [[59, "convolution"], [23, "convolution"], [254, "convolution"]], "Regular Convolution": [[59, "regular-convolution"], [23, "regular-convolution"]], "Convolution with Groups": [[59, "convolution-with-groups"], [23, "convolution-with-groups"]], "Convolution with Dilation": [[59, "convolution-with-dilation"], [23, "convolution-with-dilation"]], "Deconvolution (Transposed Convolution)": [[23, "deconvolution-transposed-convolution"]], "Example 1": [[23, "example-1"]], "Example 2": [[23, "example-2"]], "Example 3": [[23, "example-3"]], "Algorithms": [[23, "algorithms"]], "Direct Algorithm": [[23, "direct-algorithm"]], "Winograd Convolution": [[23, "winograd-convolution"]], "Automatic Algorithm Selection": [[23, "automatic-algorithm-selection"]], "Naming Conventions": [[22, "naming-conventions"]], "Variable (Tensor) Names": [[22, "variable-tensor-names"]], "Formulas and Verbose Output": [[22, "formulas-and-verbose-output"]], "RNN-Specific Notation": [[22, "rnn-specific-notation"]], "Memory Formats Tags": [[22, "memory-formats-tags"]], "ConvolutionBackwardData": [[60, "convolutionbackwarddata"]], "ConvolutionBackwardWeights": [[61, "convolutionbackwardweights"]], "ConvTranspose": [[62, "convtranspose"]], "ConvTransposeBackwardData": [[63, "convtransposebackwarddata"]], "ConvTransposeBackwardWeights": [[64, "convtransposebackwardweights"]], "Dequantize": [[65, "dequantize"]], "Divide": [[66, "divide"]], "DynamicDequantize": [[67, "dynamicdequantize"]], "DynamicQuantize": [[68, "dynamicquantize"]], "Elu": [[69, "elu"]], "EluBackward": [[70, "elubackward"]], "End": [[71, "end"]], "GELU": [[73, "gelu"]], "Exp": [[72, "exp"]], "HardSigmoid": [[75, "hardsigmoid"]], "GELUBackward": [[74, "gelubackward"]], "HardSigmoidBackward": [[76, "hardsigmoidbackward"]], "HardSwish": [[77, "hardswish"]], "HardSwishBackward": [[78, "hardswishbackward"]], "Interpolate": [[79, "interpolate"]], "InterpolateBackward": [[80, "interpolatebackward"]], "LayerNorm": [[81, "layernorm"]], "LeakyReLU": [[83, "leakyrelu"]], "LayerNormBackward": [[82, "layernormbackward"]], "Log": [[84, "log"]], "LogSoftmax": [[85, "logsoftmax"]], "LogSoftmaxBackward": [[86, "logsoftmaxbackward"]], "MatMul": [[87, "matmul"]], "MaxPool": [[89, "maxpool"]], "Maximum": [[88, "maximum"]], "Minimum": [[91, "minimum"]], "MaxPoolBackward": [[90, "maxpoolbackward"]], "Mish": [[92, "mish"]], "MishBackward": [[93, "mishbackward"]], "Pow": [[95, "pow"]], "Multiply": [[94, "multiply"]], "PReLUBackward": [[97, "prelubackward"]], "Broadcasting Rules": [[97, "broadcasting-rules"], [96, "broadcasting-rules"]], "PReLU": [[96, "prelu"], [133, "prelu"], [268, "prelu"]], "Quantize": [[98, "quantize"]], "Reciprocal": [[99, "reciprocal"]], "ReduceL1": [[100, "reducel1"]], "ReduceL2": [[101, "reducel2"]], "ReduceMean": [[103, "reducemean"]], "ReduceMax": [[102, "reducemax"]], "ReduceMin": [[104, "reducemin"]], "ReduceProd": [[105, "reduceprod"]], "ReLU": [[107, "relu"]], "ReduceSum": [[106, "reducesum"]], "Reorder": [[109, "reorder"], [137, "reorder"], [274, "reorder"]], "ReLUBackward": [[108, "relubackward"]], "Round": [[110, "round"]], "Select": [[111, "select"]], "Broadcasting rules": [[111, "broadcasting-rules"]], "Sigmoid": [[112, "sigmoid"]], "SigmoidBackward": [[113, "sigmoidbackward"]], "SoftMaxBackward": [[115, "softmaxbackward"]], "SoftMax": [[114, "softmax"]], "SoftPlusBackward": [[117, "softplusbackward"]], "SoftPlus": [[116, "softplus"]], "SqrtBackward": [[119, "sqrtbackward"]], "Sqrt": [[118, "sqrt"]], "Square": [[120, "square"]], "SquaredDifference": [[121, "squareddifference"]], "StaticTranspose": [[123, "statictranspose"]], "StaticReshape": [[122, "staticreshape"]], "Tanh": [[125, "tanh"]], "Subtract": [[124, "subtract"]], "TypeCast": [[127, "typecast"]], "TanhBackward": [[126, "tanhbackward"]], "Wildcard": [[128, "wildcard"]], "OpenCL Interoperability": [[129, "opencl-interoperability"]], "OpenCL Buffers and USM Interfaces for Memory Objects": [[129, "opencl-buffers-and-usm-interfaces-for-memory-objects"]], "Handling Dependencies": [[129, "handling-dependencies"]], "Persistent Cache": [[131, "persistent-cache"]], "Primitive": [[131, "primitive"]], "Relation to Primitive Cache": [[131, "relation-to-primitive-cache"]], "API Usage Example": [[131, "api-usage-example"], [131, "id1"]], "Engine": [[131, "engine"], [258, "engine"], [290, "engine"]], "Configuring oneDNN for Benchmarking": [[130, "configuring-onednn-for-benchmarking"]], "Threading Runtimes": [[130, "threading-runtimes"]], "Benchmarking Settings": [[130, "benchmarking-settings"]], "Whole Machine": [[130, "whole-machine"]], "Single NUMA Domain": [[130, "single-numa-domain"]], "Several Cores Within a NUMA Domain": [[130, "several-cores-within-a-numa-domain"]], "Pooling": [[132, "pooling"], [267, "pooling"]], "Primitive Cache": [[134, "primitive-cache"], [269, "primitive-cache"]], "Managing Memory Consumption": [[134, "managing-memory-consumption"]], "Profiling": [[134, "profiling"], [272, "profiling"]], "Profiling oneDNN Performance": [[135, "profiling-onednn-performance"]], "Features for VTune Profiler": [[135, "features-for-vtune-profiler"]], "ITT Tagging for Primitive Execution": [[135, "itt-tagging-for-primitive-execution"]], "Example: Profiling with VTune Profiler": [[135, "example-profiling-with-vtune-profiler"]], "Profiling for Hotspots": [[135, "profiling-for-hotspots"]], "Profiling for Microarchitecture Information": [[135, "profiling-for-microarchitecture-information"]], "Example: Profiling with Linux Perf": [[135, "example-profiling-with-linux-perf"]], "Reduction": [[136, "reduction"], [273, "reduction"]], "Notes": [[136, "notes"]], "Resampling": [[138, "resampling"], [275, "resampling"]], "Nearest Neighbor Resampling": [[138, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[138, "bilinear-resampling"]], "RNN": [[139, "rnn"], [276, "rnn"]], "Cell Functions": [[139, "cell-functions"]], "Vanilla RNN": [[139, "vanilla-rnn"]], "LSTM": [[139, "lstm"]], "LSTM (or Vanilla LSTM)": [[139, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[139, "lstm-with-peephole"]], "LSTM with Projection (or LSTMP)": [[139, "lstm-with-projection-or-lstmp"]], "GRU": [[139, "gru"]], "Linear-Before-Reset GRU": [[139, "linear-before-reset-gru"]], "AUGRU": [[139, "augru"]], "Linear-Before-Reset AUGRU": [[139, "linear-before-reset-augru"]], "Considerations for Training": [[139, "considerations-for-training"]], "Softmax": [[141, "softmax"], [279, "softmax"]], "Shuffle": [[140, "shuffle"], [278, "shuffle"]], "Data Layouts": [[140, "data-layouts"]], "Sum": [[142, "sum"], [281, "sum"]], "Using oneDNN with Threadpool-Based Threading": [[143, "using-onednn-with-threadpool-based-threading"]], "Bfloat16 Training": [[145, "bfloat16-training"]], "bfloat16 Support": [[145, "bfloat16-support"]], "bfloat16 Workflow": [[145, "bfloat16-workflow"]], "fp32 Training": [[144, "fp32-training"]], "bfp16 Training": [[144, "bfp16-training"]], "Transitioning from Intel MKL-DNN to oneDNN": [[146, "transitioning-from-intel-mkl-dnn-to-onednn"]], "Summary of Changes": [[146, "summary-of-changes"]], "Source Code Changes": [[146, "source-code-changes"]], "Build Process": [[146, "build-process"]], "Broken Compatibility with Intel MKL-DNN": [[146, "broken-compatibility-with-intel-mkl-dnn"]], "Information for Developers": [[146, "information-for-developers"]], "Understanding Memory Formats": [[147, "understanding-memory-formats"]], "Nomenclature Used": [[147, "nomenclature-used"]], "Data Formats": [[147, "data-formats"]], "Plain Data Formats": [[147, "plain-data-formats"]], "NCHW": [[147, "nchw"]], "NHWC": [[147, "nhwc"]], "CHWN": [[147, "chwn"]], "Relevant Reading": [[147, "relevant-reading"]], "Generalization of the Plain Data Layout": [[147, "generalization-of-the-plain-data-layout"]], "Strides": [[147, "strides"]], "Blocked Layout": [[147, "blocked-layout"]], "What if Channels Are not Multiples of 8 (or 16)?": [[147, "what-if-channels-are-not-multiples-of-8-or-16"]], "Verbose Mode": [[148, "verbose-mode"]], "Troubleshooting primitive creation issues": [[148, "troubleshooting-primitive-creation-issues"]], "Profiling a workload": [[148, "profiling-a-workload"]], "Understanding why a given implementation is dispatched": [[148, "understanding-why-a-given-implementation-is-dispatched"]], "Enable ONEDNN_VERBOSE with timestamps": [[148, "enable-onednn-verbose-with-timestamps"]], "Decrypting the Output": [[148, "decrypting-the-output"]], "Profiling with VTune(TM) Profiler": [[149, "profiling-with-vtune-tm-profiler"]], "enum dnnl_alg_kind_t": [[150, "enum-dnnl-alg-kind-t"]], "Enum Values": [[150, "enum-values"], [151, "enum-values"], [152, "enum-values"], [153, "enum-values"], [154, "enum-values"], [155, "enum-values"], [156, "enum-values"], [157, "enum-values"], [158, "enum-values"], [159, "enum-values"], [161, "enum-values"], [160, "enum-values"], [162, "enum-values"], [163, "enum-values"], [164, "enum-values"], [165, "enum-values"], [167, "enum-values"], [166, "enum-values"], [168, "enum-values"], [171, "enum-values"], [172, "enum-values"], [173, "enum-values"], [174, "enum-values"], [175, "enum-values"], [176, "enum-values"], [177, "enum-values"], [178, "enum-values"], [179, "enum-values"], [180, "enum-values"], [181, "enum-values"], [182, "enum-values"], [183, "enum-values"], [185, "enum-values"], [184, "enum-values"], [186, "enum-values"], [187, "enum-values"], [188, "enum-values"], [189, "enum-values"], [191, "enum-values"], [190, "enum-values"], [192, "enum-values"], [193, "enum-values"], [195, "enum-values"], [194, "enum-values"], [197, "enum-values"], [196, "enum-values"], [198, "enum-values"], [199, "enum-values"], [200, "enum-values"], [201, "enum-values"], [202, "enum-values"], [203, "enum-values"]], "enum dnnl::algorithm": [[151, "enum-dnnl-algorithm"]], "enum dnnl::cpu_isa": [[152, "enum-dnnl-cpu-isa"]], "enum dnnl::cpu_isa_hints": [[153, "enum-dnnl-cpu-isa-hints"]], "enum dnnl_cpu_isa_hints_t": [[154, "enum-dnnl-cpu-isa-hints-t"]], "enum dnnl_cpu_isa_t": [[155, "enum-dnnl-cpu-isa-t"]], "enum dnnl_data_type_t": [[156, "enum-dnnl-data-type-t"]], "enum dnnl::engine::kind": [[157, "enum-dnnl-engine-kind"]], "enum dnnl_engine_kind_t": [[158, "enum-dnnl-engine-kind-t"]], "enum dnnl_format_kind_t": [[159, "enum-dnnl-format-kind-t"]], "enum dnnl::fpmath_mode": [[161, "enum-dnnl-fpmath-mode"]], "enum dnnl_format_tag_t": [[160, "enum-dnnl-format-tag-t"]], "enum dnnl_fpmath_mode_t": [[162, "enum-dnnl-fpmath-mode-t"]], "enum dnnl_graph_layout_type_t": [[163, "enum-dnnl-graph-layout-type-t"]], "enum dnnl::graph::logical_tensor::data_type": [[164, "enum-dnnl-graph-logical-tensor-data-type"]], "enum dnnl::graph::logical_tensor::layout_type": [[165, "enum-dnnl-graph-logical-tensor-layout-type"]], "enum dnnl::graph::op::attr": [[167, "enum-dnnl-graph-op-attr"]], "enum dnnl::graph::logical_tensor::property_type": [[166, "enum-dnnl-graph-logical-tensor-property-type"]], "enum dnnl_graph_op_attr_t": [[168, "enum-dnnl-graph-op-attr-t"]], "enum dnnl::graph::op::kind": [[169, "enum-dnnl-graph-op-kind"]], "enum dnnl_graph_op_kind_t": [[170, "enum-dnnl-graph-op-kind-t"]], "enum dnnl::graph::partition::policy": [[171, "enum-dnnl-graph-partition-policy"]], "enum dnnl_graph_partition_policy_t": [[172, "enum-dnnl-graph-partition-policy-t"]], "enum dnnl::graph::status": [[173, "enum-dnnl-graph-status"]], "enum dnnl_graph_tensor_property_t": [[174, "enum-dnnl-graph-tensor-property-t"]], "enum dnnl::memory::data_type": [[175, "enum-dnnl-memory-data-type"]], "enum dnnl::memory::format_kind": [[176, "enum-dnnl-memory-format-kind"]], "enum dnnl::memory::format_tag": [[177, "enum-dnnl-memory-format-tag"]], "enum dnnl::memory::sparse_encoding": [[178, "enum-dnnl-memory-sparse-encoding"]], "enum dnnl::normalization_flags": [[179, "enum-dnnl-normalization-flags"]], "enum dnnl_normalization_flags_t": [[180, "enum-dnnl-normalization-flags-t"]], "enum dnnl::ocl_interop::memory_kind": [[181, "enum-dnnl-ocl-interop-memory-kind"]], "enum dnnl_ocl_interop_memory_kind_t": [[182, "enum-dnnl-ocl-interop-memory-kind-t"]], "enum dnnl::primitive::kind": [[183, "enum-dnnl-primitive-kind"]], "enum dnnl::profiling_data_kind": [[185, "enum-dnnl-profiling-data-kind"]], "enum dnnl_primitive_kind_t": [[184, "enum-dnnl-primitive-kind-t"]], "enum dnnl_profiling_data_kind_t": [[186, "enum-dnnl-profiling-data-kind-t"]], "enum dnnl::prop_kind": [[187, "enum-dnnl-prop-kind"]], "enum dnnl_prop_kind_t": [[188, "enum-dnnl-prop-kind-t"]], "enum dnnl::query": [[189, "enum-dnnl-query"]], "enum dnnl::rnn_direction": [[191, "enum-dnnl-rnn-direction"]], "enum dnnl_query_t": [[190, "enum-dnnl-query-t"]], "enum dnnl_rnn_direction_t": [[192, "enum-dnnl-rnn-direction-t"]], "enum dnnl::rnn_flags": [[193, "enum-dnnl-rnn-flags"]], "enum dnnl::scratchpad_mode": [[195, "enum-dnnl-scratchpad-mode"]], "enum dnnl_rnn_flags_t": [[194, "enum-dnnl-rnn-flags-t"]], "enum dnnl_sparse_encoding_t": [[197, "enum-dnnl-sparse-encoding-t"]], "enum dnnl_scratchpad_mode_t": [[196, "enum-dnnl-scratchpad-mode-t"]], "enum dnnl::status": [[198, "enum-dnnl-status"]], "enum dnnl_status_t": [[199, "enum-dnnl-status-t"]], "enum dnnl::stream::flags": [[200, "enum-dnnl-stream-flags"]], "enum dnnl_stream_flags_t": [[201, "enum-dnnl-stream-flags-t"]], "enum dnnl::sycl_interop::memory_kind": [[202, "enum-dnnl-sycl-interop-memory-kind"]], "enum dnnl_sycl_interop_memory_kind_t": [[203, "enum-dnnl-sycl-interop-memory-kind-t"]], "batch_normalization.cpp": [[205, "batch-normalization-cpp"]], "augru.cpp": [[204, "augru-cpp"]], "bnorm_u8_via_binary_postops.cpp": [[207, "bnorm-u8-via-binary-postops-cpp"]], "binary.cpp": [[206, "binary-cpp"]], "cnn_inference_f32.c": [[208, "cnn-inference-f32-c"]], "cnn_inference_f32.cpp": [[209, "cnn-inference-f32-cpp"]], "cnn_training_bf16.cpp": [[211, "cnn-training-bf16-cpp"]], "cnn_inference_int8.cpp": [[210, "cnn-inference-int8-cpp"]], "concat.cpp": [[213, "concat-cpp"]], "cnn_training_f32.cpp": [[212, "cnn-training-f32-cpp"]], "cpu_cnn_training_f32.c": [[215, "cpu-cnn-training-f32-c"]], "convolution.cpp": [[214, "convolution-cpp"]], "cpu_matmul_quantization.cpp": [[216, "cpu-matmul-quantization-cpp"]], "cpu_rnn_inference_f32.cpp": [[217, "cpu-rnn-inference-f32-cpp"]], "cpu_sgemm_and_matmul.cpp": [[219, "cpu-sgemm-and-matmul-cpp"]], "cpu_rnn_inference_int8.cpp": [[218, "cpu-rnn-inference-int8-cpp"]], "cross_engine_reorder.c": [[220, "cross-engine-reorder-c"]], "cross_engine_reorder.cpp": [[221, "cross-engine-reorder-cpp"]], "eltwise.cpp": [[222, "eltwise-cpp"]], "getting_started.cpp": [[223, "getting-started-cpp"]], "gpu_opencl_interop.cpp": [[224, "gpu-opencl-interop-cpp"]], "inference_int8_matmul.cpp": [[225, "inference-int8-matmul-cpp"]], "layer_normalization.cpp": [[227, "layer-normalization-cpp"]], "inner_product.cpp": [[226, "inner-product-cpp"]], "lstm.cpp": [[229, "lstm-cpp"]], "lrn.cpp": [[228, "lrn-cpp"]], "matmul.cpp": [[230, "matmul-cpp"]], "memory_format_propagation.cpp": [[231, "memory-format-propagation-cpp"]], "pooling.cpp": [[233, "pooling-cpp"]], "performance_profiling.cpp": [[232, "performance-profiling-cpp"]], "reduction.cpp": [[235, "reduction-cpp"]], "prelu.cpp": [[234, "prelu-cpp"]], "reorder.cpp": [[236, "reorder-cpp"]], "resampling.cpp": [[237, "resampling-cpp"]], "rnn_training_f32.cpp": [[238, "rnn-training-f32-cpp"]], "shuffle.cpp": [[239, "shuffle-cpp"]], "softmax.cpp": [[240, "softmax-cpp"]], "sum.cpp": [[241, "sum-cpp"]], "sycl_interop_buffer.cpp": [[242, "sycl-interop-buffer-cpp"]], "Global Namespace": [[243, "global-namespace"]], "Programming Model": [[245, "programming-model"], [377, "programming-model"]], "Supported Operations": [[246, "supported-operations"]], "oneDNN API": [[247, "onednn-api"]], "Global Functions": [[249, "global-functions"], [248, "global-functions"], [250, "global-functions"], [251, "global-functions"], [253, "global-functions"], [254, "global-functions"], [257, "global-functions"], [256, "global-functions"], [259, "global-functions"], [258, "global-functions"], [260, "global-functions"], [262, "global-functions"], [263, "global-functions"], [265, "global-functions"], [264, "global-functions"], [267, "global-functions"], [266, "global-functions"], [268, "global-functions"], [269, "global-functions"], [271, "global-functions"], [273, "global-functions"], [272, "global-functions"], [275, "global-functions"], [274, "global-functions"], [277, "global-functions"], [276, "global-functions"], [278, "global-functions"], [279, "global-functions"], [280, "global-functions"], [281, "global-functions"], [282, "global-functions"], [283, "global-functions"], [286, "global-functions"], [287, "global-functions"], [289, "global-functions"], [288, "global-functions"], [291, "global-functions"], [290, "global-functions"], [293, "global-functions"], [294, "global-functions"], [295, "global-functions"], [297, "global-functions"], [298, "global-functions"], [305, "global-functions"], [304, "global-functions"], [307, "global-functions"], [306, "global-functions"]], "BLAS functions": [[251, "blas-functions"]], "Common API": [[252, "common-api"]], "Data types": [[255, "data-types"]], "Macros": [[255, "macros"], [265, "macros"], [271, "macros"], [277, "macros"], [293, "macros"]], "Deconvolution": [[256, "deconvolution"]], "Floating-point Math Mode": [[259, "floating-point-math-mode"]], "Runtime interoperability API": [[261, "runtime-interoperability-api"], [292, "runtime-interoperability-api"]], "LRN": [[263, "lrn"]], "Memory": [[265, "memory"]], "OpenCL interoperability API": [[266, "opencl-interoperability-api"]], "Common": [[271, "common"]], "Service": [[277, "service"]], "Stream": [[280, "stream"]], "SYCL interoperability API": [[282, "sycl-interoperability-api"], [297, "sycl-interoperability-api"]], "Threadpool interoperability API": [[283, "threadpool-interoperability-api"]], "Graph API": [[285, "graph-api"]], "Utilities": [[284, "utilities"], [299, "utilities"]], "Allocator": [[286, "allocator"]], "Constant Tensor Cache": [[289, "constant-tensor-cache"]], "Compiled Partition Cache": [[288, "compiled-partition-cache"]], "Status": [[296, "status"]], "oneAPI Deep Neural Network Library Developer Guide and Reference": [[300, "oneapi-deep-neural-network-library-developer-guide-and-reference"]], "Interoperability with DPC++ and OpenCL": [[301, "interoperability-with-dpc-and-opencl"]], "namespace dnnl::graph": [[303, "namespace-dnnl-graph"]], "namespace dnnl": [[302, "namespace-dnnl"]], "namespace dnnl::ocl_interop": [[305, "namespace-dnnl-ocl-interop"]], "namespace dnnl::graph::sycl_interop": [[304, "namespace-dnnl-graph-sycl-interop"]], "namespace dnnl::threadpool_interop": [[307, "namespace-dnnl-threadpool-interop"]], "namespace dnnl::sycl_interop": [[306, "namespace-dnnl-sycl-interop"]], "namespace std": [[309, "namespace-std"]], "namespace oneapi": [[308, "namespace-oneapi"]], "namespace sycl": [[310, "namespace-sycl"]], "Orphans": [[311, "orphans"]], "<Untitled>": [[313, "untitled"], [315, "untitled"], [317, "untitled"], [319, "untitled"], [326, "untitled"], [328, "untitled"], [331, "untitled"], [335, "untitled"], [339, "untitled"], [343, "untitled"], [345, "untitled"], [347, "untitled"], [350, "untitled"], [352, "untitled"], [354, "untitled"], [358, "untitled"], [360, "untitled"], [362, "untitled"], [364, "untitled"], [366, "untitled"], [369, "untitled"], [371, "untitled"], [373, "untitled"]], "AUGRU RNN Primitive Example": [[312, "augru-rnn-primitive-example"]], "Batch Normalization Primitive Example": [[314, "batch-normalization-primitive-example"]], "Binary Primitive Example": [[316, "binary-primitive-example"]], "Bnorm u8 by binary post-ops example": [[318, "bnorm-u8-by-binary-post-ops-example"]], "CNN f32 inference example": [[321, "cnn-f32-inference-example"], [320, "cnn-f32-inference-example"]], "CNN int8 inference example": [[322, "cnn-int8-inference-example"]], "CNN bf16 training example": [[323, "cnn-bf16-training-example"]], "Concat Primitive Example": [[325, "concat-primitive-example"]], "CNN f32 training example": [[324, "cnn-f32-training-example"], [329, "cnn-f32-training-example"]], "Convolution Primitive Example": [[327, "convolution-primitive-example"]], "MatMul Tutorial: Quantization": [[330, "matmul-tutorial-quantization"]], "RNN f32 inference example": [[332, "rnn-f32-inference-example"]], "RNN int8 inference example": [[333, "rnn-int8-inference-example"]], "MatMul Tutorial: Comparison with SGEMM": [[334, "matmul-tutorial-comparison-with-sgemm"]], "Reorder between CPU and GPU engines": [[336, "reorder-between-cpu-and-gpu-engines"], [337, "reorder-between-cpu-and-gpu-engines"]], "Public headers": [[337, "public-headers"], [341, "public-headers"], [340, "public-headers"], [374, "public-headers"]], "cross_engine_reorder_tutorial() function": [[337, "cross-engine-reorder-tutorial-function"]], "Engine and stream": [[337, "engine-and-stream"], [341, "engine-and-stream"], [340, "engine-and-stream"], [374, "engine-and-stream"]], "Wrapping data into oneDNN GPU memory object": [[337, "wrapping-data-into-onednn-gpu-memory-object"]], "Creating a ReLU primitive": [[337, "creating-a-relu-primitive"], [340, "creating-a-relu-primitive"]], "Getting results from a oneDNN GPU memory object": [[337, "getting-results-from-a-onednn-gpu-memory-object"]], "Executing all primitives": [[337, "executing-all-primitives"]], "Validate the result": [[337, "validate-the-result"]], "Element-Wise Primitive Example": [[338, "element-wise-primitive-example"]], "Getting started on GPU with OpenCL extensions API": [[341, "getting-started-on-gpu-with-opencl-extensions-api"]], "gpu_opencl_interop_tutorial() function": [[341, "gpu-opencl-interop-tutorial-function"]], "Wrapping data into oneDNN memory object": [[341, "wrapping-data-into-onednn-memory-object"], [374, "wrapping-data-into-onednn-memory-object"]], "Initialize the data by executing a custom OpenCL kernel": [[341, "initialize-the-data-by-executing-a-custom-opencl-kernel"]], "Create and execute a primitive": [[341, "create-and-execute-a-primitive"], [374, "create-and-execute-a-primitive"]], "Validate the results": [[341, "validate-the-results"], [374, "validate-the-results"]], "Getting started": [[340, "getting-started"]], "getting_started_tutorial() function": [[340, "getting-started-tutorial-function"]], "Data preparation (code outside of oneDNN)": [[340, "data-preparation-code-outside-of-onednn"]], "Wrapping data into a oneDNN memory object": [[340, "wrapping-data-into-a-onednn-memory-object"]], "Memory descriptor": [[340, "memory-descriptor"]], "Alternative way to create a memory descriptor": [[340, "alternative-way-to-create-a-memory-descriptor"]], "Creating a memory object": [[340, "creating-a-memory-object"]], "Executing the ReLU primitive": [[340, "executing-the-relu-primitive"]], "Obtaining the result and validation": [[340, "obtaining-the-result-and-validation"]], "main() function": [[340, "main-function"], [374, "main-function"]], "MatMul Tutorial: INT8 Inference": [[342, "matmul-tutorial-int8-inference"]], "Inner Product Primitive Example": [[344, "inner-product-primitive-example"]], "Layer Normalization Primitive Example": [[346, "layer-normalization-primitive-example"]], "Local Response Normalization Primitive Example": [[349, "local-response-normalization-primitive-example"]], "Legal Information": [[348, "legal-information"]], "Trademark Information": [[348, "trademark-information"]], "LSTM RNN Primitive Example": [[351, "lstm-rnn-primitive-example"]], "Matmul Primitive Example": [[353, "matmul-primitive-example"]], "Memory Format Propagation": [[355, "memory-format-propagation"]], "Introduction to the tutorial": [[355, "introduction-to-the-tutorial"]], "memory_format_propagation() function": [[355, "memory-format-propagation-function"]], "Initialization": [[355, "initialization"]], "Create convolution and pooling primitives": [[355, "create-convolution-and-pooling-primitives"]], "Create source and destination memory objects": [[355, "create-source-and-destination-memory-objects"]], "Determine if source and destination need to be reordered": [[355, "determine-if-source-and-destination-need-to-be-reordered"]], "Allocate intermediate buffers if necessary": [[355, "allocate-intermediate-buffers-if-necessary"]], "Perform reorders for source data if necessary": [[355, "perform-reorders-for-source-data-if-necessary"]], "Create and execute convolution and pooling primitives": [[355, "create-and-execute-convolution-and-pooling-primitives"]], "Reorder destination data if necessary": [[355, "reorder-destination-data-if-necessary"]], "Results": [[355, "results"]], "Performance Profiling Example": [[356, "performance-profiling-example"]], "Walkthrough": [[356, "walkthrough"]], "Naive Implementation": [[356, "naive-implementation"]], "Blocked format implementation": [[356, "blocked-format-implementation"]], "Fused Implementation": [[356, "fused-implementation"]], "Performance summary": [[356, "performance-summary"]], "Configuration Notice": [[356, "configuration-notice"]], "Pooling Primitive Example": [[357, "pooling-primitive-example"]], "Primitive Example": [[359, "primitive-example"]], "Reduction Primitive Example": [[361, "reduction-primitive-example"]], "Reorder Primitive Example": [[363, "reorder-primitive-example"]], "Resampling Primitive Example": [[365, "resampling-primitive-example"]], "RNN f32 training example": [[367, "rnn-f32-training-example"]], "Shuffle Primitive Example": [[368, "shuffle-primitive-example"]], "Softmax Primitive Example": [[370, "softmax-primitive-example"]], "Sum Primitive Example": [[372, "sum-primitive-example"]], "Todo List": [[375, "todo-list"]], "Getting started on both CPU and GPU with SYCL extensions API": [[374, "getting-started-on-both-cpu-and-gpu-with-sycl-extensions-api"]], "sycl_interop_buffer_tutorial() function": [[374, "sycl-interop-buffer-tutorial-function"]], "Initialize the data executing a custom SYCL kernel": [[374, "initialize-the-data-executing-a-custom-sycl-kernel"]], "Performance Profiling and Inspection": [[376, "performance-profiling-and-inspection"]], "struct args_t": [[378, "struct-args-t"]], "struct dnnl::augru_backward": [[379, "struct-dnnl-augru-backward"]], "Inherited Members": [[379, "inherited-members"], [380, "inherited-members"], [381, "inherited-members"], [383, "inherited-members"], [382, "inherited-members"], [384, "inherited-members"], [385, "inherited-members"], [387, "inherited-members"], [386, "inherited-members"], [389, "inherited-members"], [388, "inherited-members"], [390, "inherited-members"], [391, "inherited-members"], [393, "inherited-members"], [392, "inherited-members"], [395, "inherited-members"], [394, "inherited-members"], [396, "inherited-members"], [397, "inherited-members"], [398, "inherited-members"], [399, "inherited-members"], [400, "inherited-members"], [401, "inherited-members"], [402, "inherited-members"], [403, "inherited-members"], [404, "inherited-members"], [405, "inherited-members"], [406, "inherited-members"], [408, "inherited-members"], [413, "inherited-members"], [414, "inherited-members"], [415, "inherited-members"], [416, "inherited-members"], [419, "inherited-members"], [420, "inherited-members"], [421, "inherited-members"], [422, "inherited-members"], [423, "inherited-members"], [424, "inherited-members"], [425, "inherited-members"], [426, "inherited-members"], [427, "inherited-members"], [429, "inherited-members"], [428, "inherited-members"], [431, "inherited-members"], [430, "inherited-members"], [432, "inherited-members"], [433, "inherited-members"], [434, "inherited-members"], [435, "inherited-members"], [436, "inherited-members"], [437, "inherited-members"], [438, "inherited-members"], [439, "inherited-members"], [441, "inherited-members"], [440, "inherited-members"], [442, "inherited-members"], [443, "inherited-members"], [444, "inherited-members"], [445, "inherited-members"], [446, "inherited-members"], [448, "inherited-members"], [450, "inherited-members"], [451, "inherited-members"], [453, "inherited-members"], [452, "inherited-members"], [454, "inherited-members"], [457, "inherited-members"], [456, "inherited-members"], [458, "inherited-members"], [459, "inherited-members"], [460, "inherited-members"], [462, "inherited-members"], [464, "inherited-members"], [467, "inherited-members"], [466, "inherited-members"], [469, "inherited-members"], [468, "inherited-members"], [470, "inherited-members"], [471, "inherited-members"], [472, "inherited-members"], [473, "inherited-members"], [474, "inherited-members"], [475, "inherited-members"], [476, "inherited-members"], [477, "inherited-members"], [479, "inherited-members"], [478, "inherited-members"], [481, "inherited-members"], [480, "inherited-members"], [483, "inherited-members"], [482, "inherited-members"], [484, "inherited-members"], [486, "inherited-members"], [487, "inherited-members"], [488, "inherited-members"], [490, "inherited-members"], [491, "inherited-members"], [492, "inherited-members"], [493, "inherited-members"]], "struct dnnl::augru_backward::primitive_desc": [[380, "struct-dnnl-augru-backward-primitive-desc"]], "struct dnnl::augru_forward": [[381, "struct-dnnl-augru-forward"]], "struct dnnl::batch_normalization_backward": [[383, "struct-dnnl-batch-normalization-backward"]], "struct dnnl::augru_forward::primitive_desc": [[382, "struct-dnnl-augru-forward-primitive-desc"]], "struct dnnl::batch_normalization_backward::primitive_desc": [[384, "struct-dnnl-batch-normalization-backward-primitive-desc"]], "struct dnnl::batch_normalization_forward": [[385, "struct-dnnl-batch-normalization-forward"]], "struct dnnl::binary": [[387, "struct-dnnl-binary"]], "struct dnnl::batch_normalization_forward::primitive_desc": [[386, "struct-dnnl-batch-normalization-forward-primitive-desc"]], "struct dnnl::concat": [[389, "struct-dnnl-concat"]], "struct dnnl::binary::primitive_desc": [[388, "struct-dnnl-binary-primitive-desc"]], "struct dnnl::concat::primitive_desc": [[390, "struct-dnnl-concat-primitive-desc"]], "struct dnnl::convolution_backward_data": [[391, "struct-dnnl-convolution-backward-data"]], "struct dnnl::convolution_backward_weights": [[393, "struct-dnnl-convolution-backward-weights"]], "struct dnnl::convolution_backward_data::primitive_desc": [[392, "struct-dnnl-convolution-backward-data-primitive-desc"]], "struct dnnl::convolution_forward": [[395, "struct-dnnl-convolution-forward"]], "struct dnnl::convolution_backward_weights::primitive_desc": [[394, "struct-dnnl-convolution-backward-weights-primitive-desc"]], "struct dnnl::convolution_forward::primitive_desc": [[396, "struct-dnnl-convolution-forward-primitive-desc"]], "struct dnnl::deconvolution_backward_data": [[397, "struct-dnnl-deconvolution-backward-data"]], "struct dnnl::deconvolution_backward_data::primitive_desc": [[398, "struct-dnnl-deconvolution-backward-data-primitive-desc"]], "struct dnnl::deconvolution_backward_weights": [[399, "struct-dnnl-deconvolution-backward-weights"]], "struct dnnl::deconvolution_backward_weights::primitive_desc": [[400, "struct-dnnl-deconvolution-backward-weights-primitive-desc"]], "struct dnnl::deconvolution_forward": [[401, "struct-dnnl-deconvolution-forward"]], "struct dnnl::deconvolution_forward::primitive_desc": [[402, "struct-dnnl-deconvolution-forward-primitive-desc"]], "struct dnnl::eltwise_backward": [[403, "struct-dnnl-eltwise-backward"]], "struct dnnl::eltwise_backward::primitive_desc": [[404, "struct-dnnl-eltwise-backward-primitive-desc"]], "struct dnnl::eltwise_forward": [[405, "struct-dnnl-eltwise-forward"]], "struct dnnl_engine": [[407, "struct-dnnl-engine"]], "struct dnnl::eltwise_forward::primitive_desc": [[406, "struct-dnnl-eltwise-forward-primitive-desc"]], "struct dnnl::error": [[409, "struct-dnnl-error"]], "struct dnnl::engine": [[408, "struct-dnnl-engine"]], "struct dnnl_exec_arg_t": [[410, "struct-dnnl-exec-arg-t"]], "Fields": [[410, "fields"], [411, "fields"], [412, "fields"], [489, "fields"], [494, "fields"]], "struct dnnl_graph_inplace_pair_t": [[411, "struct-dnnl-graph-inplace-pair-t"]], "struct dnnl_graph_logical_tensor_t": [[412, "struct-dnnl-graph-logical-tensor-t"]], "struct dnnl::gru_backward": [[413, "struct-dnnl-gru-backward"]], "struct dnnl::gru_backward::primitive_desc": [[414, "struct-dnnl-gru-backward-primitive-desc"]], "struct dnnl::gru_forward": [[415, "struct-dnnl-gru-forward"]], "template struct dnnl::handle": [[417, "template-struct-dnnl-handle"]], "struct dnnl::gru_forward::primitive_desc": [[416, "struct-dnnl-gru-forward-primitive-desc"]], "struct dnnl::inner_product_backward_data": [[419, "struct-dnnl-inner-product-backward-data"]], "template struct dnnl::handle_traits": [[418, "template-struct-dnnl-handle-traits"]], "struct dnnl::inner_product_backward_data::primitive_desc": [[420, "struct-dnnl-inner-product-backward-data-primitive-desc"]], "struct dnnl::inner_product_backward_weights": [[421, "struct-dnnl-inner-product-backward-weights"]], "struct dnnl::inner_product_backward_weights::primitive_desc": [[422, "struct-dnnl-inner-product-backward-weights-primitive-desc"]], "struct dnnl::inner_product_forward": [[423, "struct-dnnl-inner-product-forward"]], "struct dnnl::inner_product_forward::primitive_desc": [[424, "struct-dnnl-inner-product-forward-primitive-desc"]], "struct dnnl::layer_normalization_backward": [[425, "struct-dnnl-layer-normalization-backward"]], "struct dnnl::layer_normalization_backward::primitive_desc": [[426, "struct-dnnl-layer-normalization-backward-primitive-desc"]], "struct dnnl::layer_normalization_forward": [[427, "struct-dnnl-layer-normalization-forward"]], "struct dnnl::lbr_augru_backward": [[429, "struct-dnnl-lbr-augru-backward"]], "struct dnnl::layer_normalization_forward::primitive_desc": [[428, "struct-dnnl-layer-normalization-forward-primitive-desc"]], "struct dnnl::lbr_augru_forward": [[431, "struct-dnnl-lbr-augru-forward"]], "struct dnnl::lbr_augru_backward::primitive_desc": [[430, "struct-dnnl-lbr-augru-backward-primitive-desc"]], "struct dnnl::lbr_augru_forward::primitive_desc": [[432, "struct-dnnl-lbr-augru-forward-primitive-desc"]], "struct dnnl::lbr_gru_backward": [[433, "struct-dnnl-lbr-gru-backward"]], "struct dnnl::lbr_gru_backward::primitive_desc": [[434, "struct-dnnl-lbr-gru-backward-primitive-desc"]], "struct dnnl::lbr_gru_forward": [[435, "struct-dnnl-lbr-gru-forward"]], "struct dnnl::lbr_gru_forward::primitive_desc": [[436, "struct-dnnl-lbr-gru-forward-primitive-desc"]], "struct dnnl::lrn_backward": [[437, "struct-dnnl-lrn-backward"]], "struct dnnl::lrn_backward::primitive_desc": [[438, "struct-dnnl-lrn-backward-primitive-desc"]], "struct dnnl::lrn_forward": [[439, "struct-dnnl-lrn-forward"]], "struct dnnl::lstm_backward": [[441, "struct-dnnl-lstm-backward"]], "struct dnnl::lrn_forward::primitive_desc": [[440, "struct-dnnl-lrn-forward-primitive-desc"]], "struct dnnl::lstm_backward::primitive_desc": [[442, "struct-dnnl-lstm-backward-primitive-desc"]], "struct dnnl::lstm_forward": [[443, "struct-dnnl-lstm-forward"]], "struct dnnl::lstm_forward::primitive_desc": [[444, "struct-dnnl-lstm-forward-primitive-desc"]], "struct dnnl::matmul": [[445, "struct-dnnl-matmul"]], "struct dnnl_memory": [[447, "struct-dnnl-memory"]], "struct dnnl::matmul::primitive_desc": [[446, "struct-dnnl-matmul-primitive-desc"]], "struct dnnl_memory_desc": [[449, "struct-dnnl-memory-desc"]], "struct dnnl::memory": [[448, "struct-dnnl-memory"]], "struct dnnl::memory::desc": [[450, "struct-dnnl-memory-desc"]], "struct dnnl::pooling_backward": [[451, "struct-dnnl-pooling-backward"]], "struct dnnl::pooling_forward": [[453, "struct-dnnl-pooling-forward"]], "struct dnnl::pooling_backward::primitive_desc": [[452, "struct-dnnl-pooling-backward-primitive-desc"]], "struct dnnl_post_ops": [[455, "struct-dnnl-post-ops"]], "struct dnnl::pooling_forward::primitive_desc": [[454, "struct-dnnl-pooling-forward-primitive-desc"]], "struct dnnl::prelu_backward": [[457, "struct-dnnl-prelu-backward"]], "struct dnnl::post_ops": [[456, "struct-dnnl-post-ops"]], "struct dnnl::prelu_backward::primitive_desc": [[458, "struct-dnnl-prelu-backward-primitive-desc"]], "struct dnnl::prelu_forward": [[459, "struct-dnnl-prelu-forward"]], "struct dnnl::prelu_forward::primitive_desc": [[460, "struct-dnnl-prelu-forward-primitive-desc"]], "struct dnnl_primitive": [[461, "struct-dnnl-primitive"]], "struct dnnl::primitive": [[462, "struct-dnnl-primitive"]], "struct dnnl_primitive_attr": [[463, "struct-dnnl-primitive-attr"]], "struct dnnl::primitive_attr": [[464, "struct-dnnl-primitive-attr"]], "struct dnnl_primitive_desc": [[465, "struct-dnnl-primitive-desc"]], "struct dnnl::primitive_desc_base": [[467, "struct-dnnl-primitive-desc-base"]], "struct dnnl::primitive_desc": [[466, "struct-dnnl-primitive-desc"]], "struct dnnl::reduction::primitive_desc": [[469, "struct-dnnl-reduction-primitive-desc"]], "struct dnnl::reduction": [[468, "struct-dnnl-reduction"]], "struct dnnl::reorder": [[470, "struct-dnnl-reorder"]], "struct dnnl::reorder::primitive_desc": [[471, "struct-dnnl-reorder-primitive-desc"]], "struct dnnl::resampling_backward": [[472, "struct-dnnl-resampling-backward"]], "struct dnnl::resampling_backward::primitive_desc": [[473, "struct-dnnl-resampling-backward-primitive-desc"]], "struct dnnl::resampling_forward": [[474, "struct-dnnl-resampling-forward"]], "struct dnnl::resampling_forward::primitive_desc": [[475, "struct-dnnl-resampling-forward-primitive-desc"]], "struct dnnl::rnn_primitive_desc_base": [[476, "struct-dnnl-rnn-primitive-desc-base"]], "struct dnnl::shuffle_backward": [[477, "struct-dnnl-shuffle-backward"]], "struct dnnl::shuffle_forward": [[479, "struct-dnnl-shuffle-forward"]], "struct dnnl::shuffle_backward::primitive_desc": [[478, "struct-dnnl-shuffle-backward-primitive-desc"]], "struct dnnl::softmax_backward": [[481, "struct-dnnl-softmax-backward"]], "struct dnnl::shuffle_forward::primitive_desc": [[480, "struct-dnnl-shuffle-forward-primitive-desc"]], "struct dnnl::softmax_forward": [[483, "struct-dnnl-softmax-forward"]], "struct dnnl::softmax_backward::primitive_desc": [[482, "struct-dnnl-softmax-backward-primitive-desc"]], "struct dnnl_stream": [[485, "struct-dnnl-stream"]], "struct dnnl::softmax_forward::primitive_desc": [[484, "struct-dnnl-softmax-forward-primitive-desc"]], "struct dnnl::stream": [[486, "struct-dnnl-stream"]], "struct dnnl::sum": [[487, "struct-dnnl-sum"]], "struct dnnl::threadpool_interop::threadpool_iface": [[489, "struct-dnnl-threadpool-interop-threadpool-iface"]], "struct dnnl::sum::primitive_desc": [[488, "struct-dnnl-sum-primitive-desc"]], "struct dnnl::vanilla_rnn_backward": [[490, "struct-dnnl-vanilla-rnn-backward"]], "struct dnnl::vanilla_rnn_backward::primitive_desc": [[491, "struct-dnnl-vanilla-rnn-backward-primitive-desc"]], "struct dnnl::vanilla_rnn_forward": [[492, "struct-dnnl-vanilla-rnn-forward"]], "struct dnnl::vanilla_rnn_forward::primitive_desc": [[493, "struct-dnnl-vanilla-rnn-forward-primitive-desc"]], "struct example_allows_unimplemented": [[495, "struct-example-allows-unimplemented"]], "struct dnnl_version_t": [[494, "struct-dnnl-version-t"]], "struct gemm_dims_t": [[496, "struct-gemm-dims-t"]], "Supported Primitives": [[497, "supported-primitives"]]}, "indexentries": {"allocator": [[2, "index-1"], [2, "index-2"], [286, "index-0"]], "class": [[2, "index-0"], [3, "index-0"], [4, "index-0"], [5, "index-0"], [6, "index-0"], [7, "index-0"], [8, "index-0"]], "dnnl::graph::allocator": [[2, "index-0"]], "function": [[2, "index-1"], [2, "index-2"], [3, "index-1"], [3, "index-2"], [3, "index-3"], [3, "index-4"], [3, "index-5"], [4, "index-1"], [4, "index-2"], [4, "index-3"], [4, "index-4"], [4, "index-5"], [4, "index-6"], [5, "index-10"], [5, "index-11"], [5, "index-12"], [5, "index-13"], [5, "index-14"], [5, "index-15"], [5, "index-16"], [5, "index-17"], [5, "index-18"], [5, "index-19"], [5, "index-20"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"], [6, "index-1"], [6, "index-2"], [6, "index-3"], [6, "index-4"], [6, "index-5"], [6, "index-6"], [6, "index-7"], [7, "index-1"], [7, "index-10"], [7, "index-2"], [7, "index-3"], [7, "index-4"], [7, "index-5"], [7, "index-6"], [7, "index-7"], [7, "index-8"], [7, "index-9"], [8, "index-1"], [8, "index-2"], [8, "index-3"], [8, "index-4"], [8, "index-5"], [248, "index-10"], [248, "index-11"], [248, "index-12"], [248, "index-13"], [248, "index-14"], [248, "index-15"], [248, "index-16"], [248, "index-17"], [248, "index-18"], [248, "index-19"], [248, "index-20"], [248, "index-21"], [248, "index-22"], [248, "index-23"], [248, "index-24"], [248, "index-25"], [248, "index-26"], [248, "index-27"], [248, "index-28"], [248, "index-29"], [248, "index-30"], [248, "index-31"], [248, "index-32"], [248, "index-33"], [248, "index-34"], [248, "index-35"], [248, "index-36"], [248, "index-37"], [248, "index-38"], [248, "index-39"], [248, "index-5"], [248, "index-6"], [248, "index-7"], [248, "index-8"], [248, "index-9"], [249, "index-1"], [249, "index-2"], [250, "index-1"], [251, "index-1"], [251, "index-2"], [251, "index-3"], [251, "index-4"], [251, "index-5"], [251, "index-6"], [253, "index-1"], [254, "index-1"], [254, "index-2"], [254, "index-3"], [256, "index-1"], [256, "index-2"], [256, "index-3"], [257, "index-1"], [257, "index-2"], [258, "index-2"], [258, "index-3"], [258, "index-4"], [258, "index-5"], [258, "index-6"], [259, "index-1"], [259, "index-2"], [259, "index-3"], [260, "index-1"], [260, "index-2"], [260, "index-3"], [262, "index-1"], [262, "index-2"], [263, "index-1"], [263, "index-2"], [264, "index-1"], [265, "index-10"], [265, "index-11"], [265, "index-12"], [265, "index-13"], [265, "index-14"], [265, "index-15"], [265, "index-16"], [265, "index-17"], [265, "index-18"], [265, "index-19"], [265, "index-20"], [265, "index-21"], [265, "index-22"], [265, "index-23"], [265, "index-24"], [265, "index-25"], [265, "index-26"], [265, "index-27"], [265, "index-28"], [265, "index-29"], [265, "index-30"], [265, "index-31"], [265, "index-5"], [265, "index-6"], [265, "index-7"], [265, "index-8"], [265, "index-9"], [266, "index-1"], [266, "index-10"], [266, "index-11"], [266, "index-12"], [266, "index-13"], [266, "index-2"], [266, "index-3"], [266, "index-4"], [266, "index-5"], [266, "index-6"], [266, "index-7"], [266, "index-8"], [266, "index-9"], [267, "index-1"], [267, "index-2"], [268, "index-1"], [268, "index-2"], [269, "index-1"], [269, "index-2"], [269, "index-3"], [269, "index-4"], [271, "index-10"], [271, "index-11"], [271, "index-12"], [271, "index-13"], [271, "index-14"], [271, "index-15"], [271, "index-16"], [271, "index-17"], [271, "index-18"], [271, "index-19"], [271, "index-20"], [271, "index-5"], [271, "index-6"], [271, "index-7"], [271, "index-8"], [271, "index-9"], [272, "index-1"], [272, "index-2"], [272, "index-3"], [272, "index-4"], [273, "index-1"], [274, "index-1"], [275, "index-1"], [275, "index-2"], [276, "index-1"], [276, "index-10"], [276, "index-11"], [276, "index-12"], [276, "index-13"], [276, "index-14"], [276, "index-2"], [276, "index-3"], [276, "index-4"], [276, "index-5"], [276, "index-6"], [276, "index-7"], [276, "index-8"], [276, "index-9"], [277, "index-10"], [277, "index-11"], [277, "index-12"], [277, "index-13"], [277, "index-14"], [277, "index-15"], [277, "index-16"], [277, "index-17"], [277, "index-18"], [277, "index-19"], [277, "index-2"], [277, "index-20"], [277, "index-21"], [277, "index-3"], [277, "index-4"], [277, "index-5"], [277, "index-6"], [277, "index-7"], [277, "index-8"], [277, "index-9"], [278, "index-1"], [278, "index-2"], [279, "index-1"], [279, "index-2"], [280, "index-3"], [280, "index-4"], [280, "index-5"], [280, "index-6"], [281, "index-1"], [282, "index-1"], [282, "index-2"], [282, "index-3"], [282, "index-4"], [282, "index-5"], [282, "index-6"], [282, "index-7"], [282, "index-8"], [282, "index-9"], [283, "index-1"], [283, "index-2"], [283, "index-3"], [283, "index-4"], [283, "index-5"], [283, "index-6"], [283, "index-7"], [286, "index-5"], [286, "index-6"], [287, "index-3"], [287, "index-4"], [287, "index-5"], [287, "index-6"], [287, "index-7"], [288, "index-1"], [288, "index-2"], [288, "index-3"], [288, "index-4"], [289, "index-1"], [289, "index-2"], [289, "index-3"], [289, "index-4"], [290, "index-1"], [290, "index-2"], [291, "index-10"], [291, "index-11"], [291, "index-3"], [291, "index-4"], [291, "index-5"], [291, "index-6"], [291, "index-7"], [291, "index-8"], [291, "index-9"], [293, "index-1"], [293, "index-2"], [293, "index-3"], [293, "index-4"], [293, "index-5"], [294, "index-10"], [294, "index-11"], [294, "index-12"], [294, "index-3"], [294, "index-4"], [294, "index-5"], [294, "index-6"], [294, "index-7"], [294, "index-8"], [294, "index-9"], [295, "index-10"], [295, "index-11"], [295, "index-12"], [295, "index-13"], [295, "index-14"], [295, "index-3"], [295, "index-4"], [295, "index-5"], [295, "index-6"], [295, "index-7"], [295, "index-8"], [295, "index-9"], [297, "index-3"], [297, "index-4"], [297, "index-5"], [298, "index-3"], [298, "index-4"], [298, "index-5"], [298, "index-6"], [298, "index-7"], [304, "index-1"], [304, "index-2"], [305, "index-1"], [305, "index-10"], [305, "index-11"], [305, "index-12"], [305, "index-13"], [305, "index-14"], [305, "index-15"], [305, "index-2"], [305, "index-3"], [305, "index-4"], [305, "index-5"], [305, "index-6"], [305, "index-7"], [305, "index-8"], [305, "index-9"], [306, "index-1"], [306, "index-10"], [306, "index-11"], [306, "index-12"], [306, "index-2"], [306, "index-3"], [306, "index-4"], [306, "index-5"], [306, "index-6"], [306, "index-7"], [306, "index-8"], [306, "index-9"], [307, "index-1"], [307, "index-2"], [307, "index-3"], [307, "index-4"], [307, "index-5"], [379, "index-1"], [379, "index-2"], [379, "index-3"], [380, "index-1"], [380, "index-10"], [380, "index-11"], [380, "index-12"], [380, "index-13"], [380, "index-14"], [380, "index-15"], [380, "index-16"], [380, "index-17"], [380, "index-18"], [380, "index-19"], [380, "index-2"], [380, "index-20"], [380, "index-21"], [380, "index-22"], [380, "index-23"], [380, "index-3"], [380, "index-4"], [380, "index-5"], [380, "index-6"], [380, "index-7"], [380, "index-8"], [380, "index-9"], [381, "index-1"], [381, "index-2"], [381, "index-3"], [382, "index-1"], [382, "index-10"], [382, "index-11"], [382, "index-12"], [382, "index-13"], [382, "index-14"], [382, "index-15"], [382, "index-2"], [382, "index-3"], [382, "index-4"], [382, "index-5"], [382, "index-6"], [382, "index-7"], [382, "index-8"], [382, "index-9"], [383, "index-1"], [383, "index-2"], [383, "index-3"], [384, "index-1"], [384, "index-10"], [384, "index-11"], [384, "index-12"], [384, "index-13"], [384, "index-14"], [384, "index-15"], [384, "index-2"], [384, "index-3"], [384, "index-4"], [384, "index-5"], [384, "index-6"], [384, "index-7"], [384, "index-8"], [384, "index-9"], [385, "index-1"], [385, "index-2"], [385, "index-3"], [386, "index-1"], [386, "index-10"], [386, "index-11"], [386, "index-12"], [386, "index-2"], [386, "index-3"], [386, "index-4"], [386, "index-5"], [386, "index-6"], [386, "index-7"], [386, "index-8"], [386, "index-9"], [387, "index-1"], [387, "index-2"], [387, "index-3"], [388, "index-1"], [388, "index-2"], [388, "index-3"], [388, "index-4"], [388, "index-5"], [388, "index-6"], [388, "index-7"], [388, "index-8"], [389, "index-1"], [389, "index-2"], [389, "index-3"], [390, "index-1"], [390, "index-10"], [390, "index-2"], [390, "index-3"], [390, "index-4"], [390, "index-5"], [390, "index-6"], [390, "index-7"], [390, "index-8"], [390, "index-9"], [391, "index-1"], [391, "index-2"], [391, "index-3"], [392, "index-1"], [392, "index-10"], [392, "index-11"], [392, "index-12"], [392, "index-13"], [392, "index-2"], [392, "index-3"], [392, "index-4"], [392, "index-5"], [392, "index-6"], [392, "index-7"], [392, "index-8"], [392, "index-9"], [393, "index-1"], [393, "index-2"], [393, "index-3"], [394, "index-1"], [394, "index-10"], [394, "index-11"], [394, "index-12"], [394, "index-13"], [394, "index-14"], [394, "index-15"], [394, "index-16"], [394, "index-2"], [394, "index-3"], [394, "index-4"], [394, "index-5"], [394, "index-6"], [394, "index-7"], [394, "index-8"], [394, "index-9"], [395, "index-1"], [395, "index-2"], [395, "index-3"], [396, "index-1"], [396, "index-10"], [396, "index-11"], [396, "index-12"], [396, "index-13"], [396, "index-14"], [396, "index-15"], [396, "index-16"], [396, "index-2"], [396, "index-3"], [396, "index-4"], [396, "index-5"], [396, "index-6"], [396, "index-7"], [396, "index-8"], [396, "index-9"], [397, "index-1"], [397, "index-2"], [397, "index-3"], [398, "index-1"], [398, "index-10"], [398, "index-11"], [398, "index-12"], [398, "index-13"], [398, "index-2"], [398, "index-3"], [398, "index-4"], [398, "index-5"], [398, "index-6"], [398, "index-7"], [398, "index-8"], [398, "index-9"], [399, "index-1"], [399, "index-2"], [399, "index-3"], [400, "index-1"], [400, "index-10"], [400, "index-11"], [400, "index-12"], [400, "index-13"], [400, "index-14"], [400, "index-15"], [400, "index-16"], [400, "index-2"], [400, "index-3"], [400, "index-4"], [400, "index-5"], [400, "index-6"], [400, "index-7"], [400, "index-8"], [400, "index-9"], [401, "index-1"], [401, "index-2"], [401, "index-3"], [402, "index-1"], [402, "index-10"], [402, "index-11"], [402, "index-12"], [402, "index-13"], [402, "index-14"], [402, "index-15"], [402, "index-16"], [402, "index-2"], [402, "index-3"], [402, "index-4"], [402, "index-5"], [402, "index-6"], [402, "index-7"], [402, "index-8"], [402, "index-9"], [403, "index-1"], [403, "index-2"], [403, "index-3"], [404, "index-1"], [404, "index-10"], [404, "index-11"], [404, "index-12"], [404, "index-2"], [404, "index-3"], [404, "index-4"], [404, "index-5"], [404, "index-6"], [404, "index-7"], [404, "index-8"], [404, "index-9"], [405, "index-1"], [405, "index-2"], [405, "index-3"], [406, "index-1"], [406, "index-10"], [406, "index-11"], [406, "index-2"], [406, "index-3"], [406, "index-4"], [406, "index-5"], [406, "index-6"], [406, "index-7"], [406, "index-8"], [406, "index-9"], [408, "index-1"], [408, "index-2"], [408, "index-3"], [408, "index-4"], [408, "index-5"], [408, "index-6"], [408, "index-7"], [408, "index-8"], [409, "index-1"], [409, "index-2"], [409, "index-3"], [413, "index-1"], [413, "index-2"], [413, "index-3"], [414, "index-1"], [414, "index-10"], [414, "index-11"], [414, "index-12"], [414, "index-13"], [414, "index-14"], [414, "index-15"], [414, "index-16"], [414, "index-17"], [414, "index-18"], [414, "index-19"], [414, "index-2"], [414, "index-20"], [414, "index-21"], [414, "index-3"], [414, "index-4"], [414, "index-5"], [414, "index-6"], [414, "index-7"], [414, "index-8"], [414, "index-9"], [415, "index-1"], [415, "index-2"], [415, "index-3"], [416, "index-1"], [416, "index-10"], [416, "index-11"], [416, "index-12"], [416, "index-13"], [416, "index-14"], [416, "index-2"], [416, "index-3"], [416, "index-4"], [416, "index-5"], [416, "index-6"], [416, "index-7"], [416, "index-8"], [416, "index-9"], [417, "index-1"], [417, "index-10"], [417, "index-11"], [417, "index-12"], [417, "index-2"], [417, "index-3"], [417, "index-4"], [417, "index-5"], [417, "index-6"], [417, "index-7"], [417, "index-8"], [417, "index-9"], [419, "index-1"], [419, "index-2"], [419, "index-3"], [420, "index-1"], [420, "index-2"], [420, "index-3"], [420, "index-4"], [420, "index-5"], [420, "index-6"], [420, "index-7"], [421, "index-1"], [421, "index-2"], [421, "index-3"], [422, "index-1"], [422, "index-2"], [422, "index-3"], [422, "index-4"], [422, "index-5"], [422, "index-6"], [422, "index-7"], [422, "index-8"], [422, "index-9"], [423, "index-1"], [423, "index-2"], [423, "index-3"], [424, "index-1"], [424, "index-2"], [424, "index-3"], [424, "index-4"], [424, "index-5"], [424, "index-6"], [424, "index-7"], [424, "index-8"], [424, "index-9"], [425, "index-1"], [425, "index-2"], [425, "index-3"], [426, "index-1"], [426, "index-10"], [426, "index-11"], [426, "index-12"], [426, "index-13"], [426, "index-14"], [426, "index-15"], [426, "index-16"], [426, "index-2"], [426, "index-3"], [426, "index-4"], [426, "index-5"], [426, "index-6"], [426, "index-7"], [426, "index-8"], [426, "index-9"], [427, "index-1"], [427, "index-2"], [427, "index-3"], [428, "index-1"], [428, "index-10"], [428, "index-11"], [428, "index-12"], [428, "index-13"], [428, "index-2"], [428, "index-3"], [428, "index-4"], [428, "index-5"], [428, "index-6"], [428, "index-7"], [428, "index-8"], [428, "index-9"], [429, "index-1"], [429, "index-2"], [429, "index-3"], [430, "index-1"], [430, "index-10"], [430, "index-11"], [430, "index-12"], [430, "index-13"], [430, "index-14"], [430, "index-15"], [430, "index-16"], [430, "index-17"], [430, "index-18"], [430, "index-19"], [430, "index-2"], [430, "index-20"], [430, "index-21"], [430, "index-22"], [430, "index-23"], [430, "index-3"], [430, "index-4"], [430, "index-5"], [430, "index-6"], [430, "index-7"], [430, "index-8"], [430, "index-9"], [431, "index-1"], [431, "index-2"], [431, "index-3"], [432, "index-1"], [432, "index-10"], [432, "index-11"], [432, "index-12"], [432, "index-13"], [432, "index-14"], [432, "index-15"], [432, "index-2"], [432, "index-3"], [432, "index-4"], [432, "index-5"], [432, "index-6"], [432, "index-7"], [432, "index-8"], [432, "index-9"], [433, "index-1"], [433, "index-2"], [433, "index-3"], [434, "index-1"], [434, "index-10"], [434, "index-11"], [434, "index-12"], [434, "index-13"], [434, "index-14"], [434, "index-15"], [434, "index-16"], [434, "index-17"], [434, "index-18"], [434, "index-19"], [434, "index-2"], [434, "index-20"], [434, "index-21"], [434, "index-3"], [434, "index-4"], [434, "index-5"], [434, "index-6"], [434, "index-7"], [434, "index-8"], [434, "index-9"], [435, "index-1"], [435, "index-2"], [435, "index-3"], [436, "index-1"], [436, "index-10"], [436, "index-11"], [436, "index-12"], [436, "index-13"], [436, "index-14"], [436, "index-2"], [436, "index-3"], [436, "index-4"], [436, "index-5"], [436, "index-6"], [436, "index-7"], [436, "index-8"], [436, "index-9"], [437, "index-1"], [437, "index-2"], [437, "index-3"], [438, "index-1"], [438, "index-10"], [438, "index-11"], [438, "index-12"], [438, "index-2"], [438, "index-3"], [438, "index-4"], [438, "index-5"], [438, "index-6"], [438, "index-7"], [438, "index-8"], [438, "index-9"], [439, "index-1"], [439, "index-2"], [439, "index-3"], [440, "index-1"], [440, "index-10"], [440, "index-11"], [440, "index-12"], [440, "index-2"], [440, "index-3"], [440, "index-4"], [440, "index-5"], [440, "index-6"], [440, "index-7"], [440, "index-8"], [440, "index-9"], [441, "index-1"], [441, "index-2"], [441, "index-3"], [442, "index-1"], [442, "index-10"], [442, "index-11"], [442, "index-12"], [442, "index-13"], [442, "index-14"], [442, "index-15"], [442, "index-16"], [442, "index-17"], [442, "index-18"], [442, "index-19"], [442, "index-2"], [442, "index-20"], [442, "index-21"], [442, "index-22"], [442, "index-23"], [442, "index-24"], [442, "index-25"], [442, "index-26"], [442, "index-27"], [442, "index-28"], [442, "index-29"], [442, "index-3"], [442, "index-30"], [442, "index-31"], [442, "index-4"], [442, "index-5"], [442, "index-6"], [442, "index-7"], [442, "index-8"], [442, "index-9"], [443, "index-1"], [443, "index-2"], [443, "index-3"], [444, "index-1"], [444, "index-10"], [444, "index-11"], [444, "index-12"], [444, "index-13"], [444, "index-14"], [444, "index-15"], [444, "index-16"], [444, "index-17"], [444, "index-18"], [444, "index-19"], [444, "index-2"], [444, "index-20"], [444, "index-3"], [444, "index-4"], [444, "index-5"], [444, "index-6"], [444, "index-7"], [444, "index-8"], [444, "index-9"], [445, "index-1"], [445, "index-2"], [445, "index-3"], [446, "index-1"], [446, "index-2"], [446, "index-3"], [446, "index-4"], [446, "index-5"], [446, "index-6"], [446, "index-7"], [446, "index-8"], [448, "index-10"], [448, "index-11"], [448, "index-12"], [448, "index-13"], [448, "index-14"], [448, "index-15"], [448, "index-16"], [448, "index-17"], [448, "index-18"], [448, "index-3"], [448, "index-4"], [448, "index-5"], [448, "index-6"], [448, "index-7"], [448, "index-8"], [448, "index-9"], [450, "index-1"], [450, "index-10"], [450, "index-11"], [450, "index-12"], [450, "index-13"], [450, "index-14"], [450, "index-15"], [450, "index-16"], [450, "index-17"], [450, "index-18"], [450, "index-19"], [450, "index-2"], [450, "index-20"], [450, "index-21"], [450, "index-22"], [450, "index-23"], [450, "index-24"], [450, "index-25"], [450, "index-26"], [450, "index-3"], [450, "index-4"], [450, "index-5"], [450, "index-6"], [450, "index-7"], [450, "index-8"], [450, "index-9"], [451, "index-1"], [451, "index-2"], [451, "index-3"], [452, "index-1"], [452, "index-10"], [452, "index-11"], [452, "index-12"], [452, "index-13"], [452, "index-2"], [452, "index-3"], [452, "index-4"], [452, "index-5"], [452, "index-6"], [452, "index-7"], [452, "index-8"], [452, "index-9"], [453, "index-1"], [453, "index-2"], [453, "index-3"], [454, "index-1"], [454, "index-10"], [454, "index-11"], [454, "index-12"], [454, "index-13"], [454, "index-2"], [454, "index-3"], [454, "index-4"], [454, "index-5"], [454, "index-6"], [454, "index-7"], [454, "index-8"], [454, "index-9"], [456, "index-1"], [456, "index-10"], [456, "index-11"], [456, "index-12"], [456, "index-13"], [456, "index-14"], [456, "index-15"], [456, "index-16"], [456, "index-2"], [456, "index-3"], [456, "index-4"], [456, "index-5"], [456, "index-6"], [456, "index-7"], [456, "index-8"], [456, "index-9"], [457, "index-1"], [457, "index-2"], [457, "index-3"], [458, "index-1"], [458, "index-2"], [458, "index-3"], [458, "index-4"], [458, "index-5"], [458, "index-6"], [458, "index-7"], [459, "index-1"], [459, "index-2"], [459, "index-3"], [460, "index-1"], [460, "index-2"], [460, "index-3"], [460, "index-4"], [460, "index-5"], [460, "index-6"], [462, "index-1"], [462, "index-10"], [462, "index-11"], [462, "index-12"], [462, "index-13"], [462, "index-2"], [462, "index-3"], [462, "index-4"], [462, "index-5"], [462, "index-6"], [462, "index-7"], [462, "index-8"], [462, "index-9"], [464, "index-1"], [464, "index-10"], [464, "index-11"], [464, "index-12"], [464, "index-13"], [464, "index-14"], [464, "index-15"], [464, "index-16"], [464, "index-2"], [464, "index-3"], [464, "index-4"], [464, "index-5"], [464, "index-6"], [464, "index-7"], [464, "index-8"], [464, "index-9"], [466, "index-1"], [466, "index-2"], [466, "index-3"], [466, "index-4"], [466, "index-5"], [467, "index-1"], [467, "index-10"], [467, "index-11"], [467, "index-12"], [467, "index-13"], [467, "index-14"], [467, "index-15"], [467, "index-16"], [467, "index-17"], [467, "index-18"], [467, "index-19"], [467, "index-2"], [467, "index-20"], [467, "index-21"], [467, "index-22"], [467, "index-23"], [467, "index-24"], [467, "index-25"], [467, "index-26"], [467, "index-27"], [467, "index-28"], [467, "index-29"], [467, "index-3"], [467, "index-30"], [467, "index-31"], [467, "index-32"], [467, "index-33"], [467, "index-34"], [467, "index-35"], [467, "index-36"], [467, "index-37"], [467, "index-38"], [467, "index-39"], [467, "index-4"], [467, "index-40"], [467, "index-41"], [467, "index-42"], [467, "index-5"], [467, "index-6"], [467, "index-7"], [467, "index-8"], [467, "index-9"], [468, "index-1"], [468, "index-2"], [468, "index-3"], [469, "index-1"], [469, "index-2"], [469, "index-3"], [469, "index-4"], [469, "index-5"], [469, "index-6"], [469, "index-7"], [469, "index-8"], [470, "index-1"], [470, "index-2"], [470, "index-3"], [470, "index-4"], [470, "index-5"], [470, "index-6"], [471, "index-1"], [471, "index-10"], [471, "index-11"], [471, "index-12"], [471, "index-2"], [471, "index-3"], [471, "index-4"], [471, "index-5"], [471, "index-6"], [471, "index-7"], [471, "index-8"], [471, "index-9"], [472, "index-1"], [472, "index-2"], [472, "index-3"], [473, "index-1"], [473, "index-2"], [473, "index-3"], [473, "index-4"], [473, "index-5"], [473, "index-6"], [474, "index-1"], [474, "index-2"], [474, "index-3"], [475, "index-1"], [475, "index-2"], [475, "index-3"], [475, "index-4"], [475, "index-5"], [475, "index-6"], [475, "index-7"], [476, "index-1"], [476, "index-10"], [476, "index-11"], [476, "index-12"], [476, "index-13"], [476, "index-14"], [476, "index-15"], [476, "index-16"], [476, "index-17"], [476, "index-18"], [476, "index-19"], [476, "index-2"], [476, "index-20"], [476, "index-21"], [476, "index-22"], [476, "index-23"], [476, "index-24"], [476, "index-25"], [476, "index-26"], [476, "index-3"], [476, "index-4"], [476, "index-5"], [476, "index-6"], [476, "index-7"], [476, "index-8"], [476, "index-9"], [477, "index-1"], [477, "index-2"], [477, "index-3"], [478, "index-1"], [478, "index-2"], [478, "index-3"], [478, "index-4"], [478, "index-5"], [478, "index-6"], [478, "index-7"], [478, "index-8"], [479, "index-1"], [479, "index-2"], [479, "index-3"], [480, "index-1"], [480, "index-2"], [480, "index-3"], [480, "index-4"], [480, "index-5"], [480, "index-6"], [480, "index-7"], [480, "index-8"], [481, "index-1"], [481, "index-2"], [481, "index-3"], [482, "index-1"], [482, "index-2"], [482, "index-3"], [482, "index-4"], [482, "index-5"], [482, "index-6"], [482, "index-7"], [482, "index-8"], [482, "index-9"], [483, "index-1"], [483, "index-2"], [483, "index-3"], [484, "index-1"], [484, "index-2"], [484, "index-3"], [484, "index-4"], [484, "index-5"], [484, "index-6"], [484, "index-7"], [484, "index-8"], [486, "index-1"], [486, "index-2"], [486, "index-3"], [486, "index-4"], [486, "index-5"], [486, "index-6"], [486, "index-7"], [486, "index-8"], [487, "index-1"], [487, "index-2"], [487, "index-3"], [488, "index-1"], [488, "index-10"], [488, "index-2"], [488, "index-3"], [488, "index-4"], [488, "index-5"], [488, "index-6"], [488, "index-7"], [488, "index-8"], [488, "index-9"], [489, "index-2"], [489, "index-3"], [489, "index-4"], [489, "index-5"], [490, "index-1"], [490, "index-2"], [490, "index-3"], [491, "index-1"], [491, "index-10"], [491, "index-11"], [491, "index-12"], [491, "index-13"], [491, "index-14"], [491, "index-15"], [491, "index-16"], [491, "index-17"], [491, "index-18"], [491, "index-19"], [491, "index-2"], [491, "index-20"], [491, "index-21"], [491, "index-22"], [491, "index-23"], [491, "index-24"], [491, "index-25"], [491, "index-3"], [491, "index-4"], [491, "index-5"], [491, "index-6"], [491, "index-7"], [491, "index-8"], [491, "index-9"], [492, "index-1"], [492, "index-2"], [492, "index-3"], [493, "index-1"], [493, "index-10"], [493, "index-11"], [493, "index-12"], [493, "index-13"], [493, "index-14"], [493, "index-15"], [493, "index-16"], [493, "index-17"], [493, "index-18"], [493, "index-2"], [493, "index-3"], [493, "index-4"], [493, "index-5"], [493, "index-6"], [493, "index-7"], [493, "index-8"], [493, "index-9"]], "compiled_partition": [[3, "index-1"], [3, "index-2"]], "dnnl::graph::compiled_partition": [[3, "index-0"]], "execute": [[3, "index-5"], [304, "index-2"], [305, "index-15"], [306, "index-12"], [462, "index-9"], [470, "index-5"], [470, "index-6"]], "get_inplace_ports": [[3, "index-4"]], "query_logical_tensor": [[3, "index-3"]], "add_op": [[4, "index-3"]], "dnnl::graph::graph": [[4, "index-0"]], "finalize": [[4, "index-4"]], "get_partitions": [[4, "index-6"]], "graph": [[4, "index-1"], [4, "index-2"], [291, "index-0"]], "is_finalized": [[4, "index-5"]], "dim": [[5, "index-1"], [448, "index-1"]], "dims": [[5, "index-2"], [189, "index-44"], [412, "index-3"], [448, "index-2"]], "dnnl::graph::logical_tensor": [[5, "index-0"]], "get_data_type": [[5, "index-14"], [450, "index-19"]], "get_dims": [[5, "index-12"], [450, "index-21"]], "get_id": [[5, "index-13"], [7, "index-5"]], "get_layout_id": [[5, "index-17"]], "get_layout_type": [[5, "index-16"]], "get_mem_size": [[5, "index-19"]], "get_property_type": [[5, "index-15"]], "get_strides": [[5, "index-18"], [392, "index-10"], [394, "index-13"], [396, "index-13"], [398, "index-10"], [400, "index-13"], [402, "index-13"], [450, "index-12"], [452, "index-9"], [454, "index-9"], [467, "index-4"]], "is_equal": [[5, "index-20"]], "logical_tensor": [[5, "index-10"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"]], "operator=": [[5, "index-11"], [417, "index-5"], [417, "index-6"]], "typedef": [[5, "index-1"], [5, "index-2"], [248, "index-1"], [248, "index-2"], [248, "index-3"], [248, "index-4"], [255, "index-1"], [255, "index-2"], [258, "index-1"], [265, "index-1"], [265, "index-2"], [265, "index-3"], [265, "index-4"], [271, "index-1"], [271, "index-2"], [271, "index-3"], [271, "index-4"], [277, "index-1"], [280, "index-1"], [280, "index-2"], [286, "index-1"], [286, "index-2"], [286, "index-3"], [286, "index-4"], [287, "index-1"], [287, "index-2"], [291, "index-1"], [291, "index-2"], [294, "index-1"], [294, "index-2"], [295, "index-1"], [295, "index-2"], [297, "index-1"], [297, "index-2"], [298, "index-1"], [298, "index-2"], [448, "index-1"], [448, "index-2"]], "add_input": [[6, "index-3"]], "add_inputs": [[6, "index-4"]], "add_output": [[6, "index-5"]], "add_outputs": [[6, "index-6"]], "dnnl::graph::op": [[6, "index-0"]], "op": [[6, "index-1"], [6, "index-2"], [294, "index-0"]], "set_attr": [[6, "index-7"]], "compile": [[7, "index-6"]], "dnnl::graph::partition": [[7, "index-0"]], "get_engine_kind": [[7, "index-10"]], "get_input_ports": [[7, "index-8"]], "get_ops": [[7, "index-4"]], "get_ops_num": [[7, "index-3"]], "get_output_ports": [[7, "index-9"]], "is_supported": [[7, "index-7"]], "partition": [[7, "index-1"], [7, "index-2"], [295, "index-0"]], "dnnl::graph::tensor": [[8, "index-0"]], "get_data_handle": [[8, "index-3"], [448, "index-11"]], "get_engine": [[8, "index-5"], [448, "index-10"], [467, "index-1"], [486, "index-3"]], "set_data_handle": [[8, "index-4"], [448, "index-12"]], "tensor": [[8, "index-1"], [8, "index-2"], [298, "index-0"]], "primitive attributes": [[9, "index-0"]], "page": [[9, "index-0"], [10, "index-0"], [11, "index-0"], [12, "index-0"], [13, "index-0"], [14, "index-0"], [15, "index-0"], [16, "index-0"], [17, "index-0"], [18, "index-0"], [19, "index-0"], [20, "index-0"], [21, "index-0"], [22, "index-0"], [23, "index-0"], [24, "index-0"], [25, "index-0"], [26, "index-0"], [27, "index-0"], [28, "index-0"], [29, "index-0"], [30, "index-0"], [31, "index-0"], [32, "index-0"], [33, "index-0"], [34, "index-0"], [35, "index-0"], [36, "index-0"], [37, "index-0"], [38, "index-0"], [39, "index-0"], [40, "index-0"], [41, "index-0"], [42, "index-0"], [43, "index-0"], [44, "index-0"], [45, "index-0"], [46, "index-0"], [47, "index-0"], [48, "index-0"], [49, "index-0"], [50, "index-0"], [51, "index-0"], [52, "index-0"], [53, "index-0"], [54, "index-0"], [55, "index-0"], [56, "index-0"], [57, "index-0"], [58, "index-0"], [59, "index-0"], [60, "index-0"], [61, "index-0"], [62, "index-0"], [63, "index-0"], [64, "index-0"], [65, "index-0"], [66, "index-0"], [67, "index-0"], [68, "index-0"], [69, "index-0"], [70, "index-0"], [71, "index-0"], [72, "index-0"], [73, "index-0"], [74, "index-0"], [75, "index-0"], [76, "index-0"], [77, "index-0"], [78, "index-0"], [79, "index-0"], [80, "index-0"], [81, "index-0"], [82, "index-0"], [83, "index-0"], [84, "index-0"], [85, "index-0"], [86, "index-0"], [87, "index-0"], [88, "index-0"], [89, "index-0"], [90, "index-0"], [91, "index-0"], [92, "index-0"], [93, "index-0"], [94, "index-0"], [95, "index-0"], [96, "index-0"], [97, "index-0"], [98, "index-0"], [99, "index-0"], [100, "index-0"], [101, "index-0"], [102, "index-0"], [103, "index-0"], [104, "index-0"], [105, "index-0"], [106, "index-0"], [107, "index-0"], [108, "index-0"], [109, "index-0"], [110, "index-0"], [111, "index-0"], [112, "index-0"], [113, "index-0"], [114, "index-0"], [115, "index-0"], [116, "index-0"], [117, "index-0"], [118, "index-0"], [119, "index-0"], [120, "index-0"], [121, "index-0"], [122, "index-0"], [123, "index-0"], [124, "index-0"], [125, "index-0"], [126, "index-0"], [127, "index-0"], [128, "index-0"], [129, "index-0"], [130, "index-0"], [131, "index-0"], [132, "index-0"], [133, "index-0"], [134, "index-0"], [135, "index-0"], [136, "index-0"], [137, "index-0"], [138, "index-0"], [139, "index-0"], [140, "index-0"], [141, "index-0"], [142, "index-0"], [143, "index-0"], [144, "index-0"], [145, "index-0"], [146, "index-0"], [147, "index-0"], [148, "index-0"], [149, "index-0"], [312, "index-0"], [314, "index-0"], [316, "index-0"], [318, "index-0"], [320, "index-0"], [321, "index-0"], [322, "index-0"], [323, "index-0"], [324, "index-0"], [325, "index-0"], [327, "index-0"], [329, "index-0"], [330, "index-0"], [332, "index-0"], [333, "index-0"], [334, "index-0"], [336, "index-0"], [337, "index-0"], [338, "index-0"], [340, "index-0"], [341, "index-0"], [342, "index-0"], [344, "index-0"], [346, "index-0"], [348, "index-0"], [349, "index-0"], [351, "index-0"], [353, "index-0"], [355, "index-0"], [356, "index-0"], [357, "index-0"], [359, "index-0"], [361, "index-0"], [363, "index-0"], [365, "index-0"], [367, "index-0"], [368, "index-0"], [370, "index-0"], [372, "index-0"], [374, "index-0"], [375, "index-0"]], "primitive attributes: floating-point math mode": [[10, "index-0"]], "primitive attributes: post-ops": [[11, "index-0"]], "primitive attributes: quantization": [[12, "index-0"]], "primitive attributes: scratchpad": [[13, "index-0"]], "basic concepts": [[14, "index-0"], [31, "index-0"]], "batch normalization": [[15, "index-0"], [249, "index-0"]], "benchmarking performance": [[16, "index-0"]], "binary": [[17, "index-0"], [183, "index-13"], [250, "index-0"], [387, "index-1"], [387, "index-2"], [387, "index-3"]], "build from source": [[18, "index-0"]], "build options": [[19, "index-0"]], "api": [[20, "index-0"]], "concat": [[21, "index-0"], [58, "index-0"], [183, "index-4"], [253, "index-0"], [389, "index-1"], [389, "index-2"], [389, "index-3"]], "naming conventions": [[22, "index-0"]], "convolution": [[23, "index-0"], [59, "index-0"], [183, "index-6"], [254, "index-0"]], "cpu dispatcher control": [[24, "index-0"]], "cpu isa hints": [[25, "index-0"]], "data types": [[26, "index-0"], [255, "index-0"]], "dpc++ interoperability": [[27, "index-0"]], "eltwise": [[28, "index-0"], [183, "index-8"], [257, "index-0"]], "examples": [[29, "index-0"]], "experimental features": [[30, "index-0"]], "graph compiler": [[32, "index-0"]], "graph dump": [[33, "index-0"]], "supported fusion patterns": [[34, "index-0"]], "low precision": [[35, "index-0"]], "inference": [[36, "index-0"]], "inference and training aspects": [[37, "index-0"]], "int8 inference": [[38, "index-0"]], "inner product": [[39, "index-0"], [260, "index-0"]], "inspecting jit code": [[40, "index-0"]], "nuances of int8 computations": [[41, "index-0"]], "layer normalization": [[42, "index-0"], [262, "index-0"]], "linking to the library": [[43, "index-0"]], "local response normalization (lrn)": [[44, "index-0"]], "matrix multiplication": [[45, "index-0"], [264, "index-0"]], "abs": [[46, "index-0"]], "absbackward": [[47, "index-0"]], "add": [[48, "index-0"]], "avgpool": [[49, "index-0"]], "avgpoolbackward": [[50, "index-0"]], "batchnormforwardtraining": [[51, "index-0"]], "batchnorminference": [[52, "index-0"]], "batchnormtrainingbackward": [[53, "index-0"]], "biasadd": [[54, "index-0"]], "biasaddbackward": [[55, "index-0"]], "clamp": [[56, "index-0"]], "clampbackward": [[57, "index-0"]], "convolutionbackwarddata": [[60, "index-0"]], "convolutionbackwardweights": [[61, "index-0"]], "convtranspose": [[62, "index-0"]], "convtransposebackwarddata": [[63, "index-0"]], "convtransposebackwardweights": [[64, "index-0"]], "dequantize": [[65, "index-0"]], "divide": [[66, "index-0"]], "dynamicdequantize": [[67, "index-0"]], "dynamicquantize": [[68, "index-0"]], "elu": [[69, "index-0"]], "elubackward": [[70, "index-0"]], "end": [[71, "index-0"]], "exp": [[72, "index-0"]], "gelu": [[73, "index-0"]], "gelubackward": [[74, "index-0"]], "hardsigmoid": [[75, "index-0"]], "hardsigmoidbackward": [[76, "index-0"]], "hardswish": [[77, "index-0"]], "hardswishbackward": [[78, "index-0"]], "interpolate": [[79, "index-0"]], "interpolatebackward": [[80, "index-0"]], "layernorm": [[81, "index-0"]], "layernormbackward": [[82, "index-0"]], "leakyrelu": [[83, "index-0"]], "log": [[84, "index-0"]], "logsoftmax": [[85, "index-0"]], "logsoftmaxbackward": [[86, "index-0"]], "matmul": [[87, "index-0"], [183, "index-14"], [445, "index-1"], [445, "index-2"], [445, "index-3"]], "maximum": [[88, "index-0"]], "maxpool": [[89, "index-0"]], "maxpoolbackward": [[90, "index-0"]], "minimum": [[91, "index-0"]], "mish": [[92, "index-0"]], "mishbackward": [[93, "index-0"]], "multiply": [[94, "index-0"]], "pow": [[95, "index-0"]], "prelu": [[96, "index-0"], [133, "index-0"], [183, "index-18"], [268, "index-0"]], "prelubackward": [[97, "index-0"]], "quantize": [[98, "index-0"]], "reciprocal": [[99, "index-0"]], "reducel1": [[100, "index-0"]], "reducel2": [[101, "index-0"]], "reducemax": [[102, "index-0"]], "reducemean": [[103, "index-0"]], "reducemin": [[104, "index-0"]], "reduceprod": [[105, "index-0"]], "reducesum": [[106, "index-0"]], "relu": [[107, "index-0"]], "relubackward": [[108, "index-0"]], "reorder": [[109, "index-0"], [137, "index-0"], [183, "index-2"], [274, "index-0"], [470, "index-1"], [470, "index-2"], [470, "index-3"], [470, "index-4"]], "round": [[110, "index-0"]], "select": [[111, "index-0"]], "sigmoid": [[112, "index-0"]], "sigmoidbackward": [[113, "index-0"]], "softmax": [[114, "index-0"], [141, "index-0"], [183, "index-19"], [279, "index-0"]], "softmaxbackward": [[115, "index-0"]], "softplus": [[116, "index-0"]], "softplusbackward": [[117, "index-0"]], "sqrt": [[118, "index-0"]], "sqrtbackward": [[119, "index-0"]], "square": [[120, "index-0"]], "squareddifference": [[121, "index-0"]], "staticreshape": [[122, "index-0"]], "statictranspose": [[123, "index-0"]], "subtract": [[124, "index-0"]], "tanh": [[125, "index-0"]], "tanhbackward": [[126, "index-0"]], "typecast": [[127, "index-0"]], "wildcard": [[128, "index-0"]], "opencl interoperability": [[129, "index-0"]], "configuring onednn for benchmarking": [[130, "index-0"]], "persistent cache": [[131, "index-0"]], "pooling": [[132, "index-0"], [183, "index-16"], [267, "index-0"]], "primitive cache": [[134, "index-0"], [269, "index-0"]], "profiling onednn performance": [[135, "index-0"]], "reduction": [[136, "index-0"], [183, "index-17"], [273, "index-0"], [468, "index-1"], [468, "index-2"], [468, "index-3"]], "resampling": [[138, "index-0"], [183, "index-15"], [275, "index-0"]], "rnn": [[139, "index-0"], [183, "index-12"], [276, "index-0"]], "shuffle": [[140, "index-0"], [183, "index-3"], [278, "index-0"]], "sum": [[142, "index-0"], [183, "index-5"], [281, "index-0"], [487, "index-1"], [487, "index-2"], [487, "index-3"]], "using onednn with threadpool-based threading": [[143, "index-0"]], "training": [[144, "index-0"]], "bfloat16 training": [[145, "index-0"]], "transitioning from intel mkl-dnn to onednn": [[146, "index-0"]], "understanding memory formats": [[147, "index-0"]], "verbose mode": [[148, "index-0"]], "profiling with vtune(tm) profiler": [[149, "index-0"]], "dnnl_alg_kind_t": [[150, "index-0"]], "dnnl_binary_add": [[150, "index-45"]], "dnnl_binary_div": [[150, "index-49"]], "dnnl_binary_eq": [[150, "index-55"]], "dnnl_binary_ge": [[150, "index-51"]], "dnnl_binary_gt": [[150, "index-52"]], "dnnl_binary_le": [[150, "index-53"]], "dnnl_binary_lt": [[150, "index-54"]], "dnnl_binary_max": [[150, "index-47"]], "dnnl_binary_min": [[150, "index-48"]], "dnnl_binary_mul": [[150, "index-46"]], "dnnl_binary_ne": [[150, "index-56"]], "dnnl_binary_sub": [[150, "index-50"]], "dnnl_convolution_auto": [[150, "index-3"]], "dnnl_convolution_direct": [[150, "index-1"]], "dnnl_convolution_winograd": [[150, "index-2"]], "dnnl_deconvolution_direct": [[150, "index-4"]], "dnnl_deconvolution_winograd": [[150, "index-5"]], "dnnl_eltwise_abs": [[150, "index-10"]], "dnnl_eltwise_clip": [[150, "index-20"]], "dnnl_eltwise_clip_v2": [[150, "index-21"]], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [[150, "index-33"]], "dnnl_eltwise_elu": [[150, "index-8"]], "dnnl_eltwise_elu_use_dst_for_bwd": [[150, "index-29"]], "dnnl_eltwise_exp": [[150, "index-16"]], "dnnl_eltwise_exp_use_dst_for_bwd": [[150, "index-32"]], "dnnl_eltwise_gelu_erf": [[150, "index-23"]], "dnnl_eltwise_gelu_tanh": [[150, "index-17"]], "dnnl_eltwise_hardsigmoid": [[150, "index-14"]], "dnnl_eltwise_hardswish": [[150, "index-26"]], "dnnl_eltwise_linear": [[150, "index-12"]], "dnnl_eltwise_log": [[150, "index-19"]], "dnnl_eltwise_logistic": [[150, "index-15"]], "dnnl_eltwise_logistic_use_dst_for_bwd": [[150, "index-31"]], "dnnl_eltwise_mish": [[150, "index-25"]], "dnnl_eltwise_pow": [[150, "index-22"]], "dnnl_eltwise_relu": [[150, "index-6"]], "dnnl_eltwise_relu_use_dst_for_bwd": [[150, "index-27"]], "dnnl_eltwise_round": [[150, "index-24"]], "dnnl_eltwise_soft_relu": [[150, "index-13"]], "dnnl_eltwise_sqrt": [[150, "index-11"]], "dnnl_eltwise_sqrt_use_dst_for_bwd": [[150, "index-30"]], "dnnl_eltwise_square": [[150, "index-9"]], "dnnl_eltwise_swish": [[150, "index-18"]], "dnnl_eltwise_tanh": [[150, "index-7"]], "dnnl_eltwise_tanh_use_dst_for_bwd": [[150, "index-28"]], "dnnl_lbr_augru": [[150, "index-44"]], "dnnl_lbr_gru": [[150, "index-42"]], "dnnl_lrn_across_channels": [[150, "index-37"]], "dnnl_lrn_within_channel": [[150, "index-38"]], "dnnl_pooling_avg_exclude_padding": [[150, "index-36"]], "dnnl_pooling_avg_include_padding": [[150, "index-35"]], "dnnl_pooling_max": [[150, "index-34"]], "dnnl_reduction_max": [[150, "index-59"]], "dnnl_reduction_mean": [[150, "index-63"]], "dnnl_reduction_min": [[150, "index-60"]], "dnnl_reduction_mul": [[150, "index-62"]], "dnnl_reduction_norm_lp_max": [[150, "index-64"]], "dnnl_reduction_norm_lp_power_p_max": [[150, "index-66"]], "dnnl_reduction_norm_lp_power_p_sum": [[150, "index-67"]], "dnnl_reduction_norm_lp_sum": [[150, "index-65"]], "dnnl_reduction_sum": [[150, "index-61"]], "dnnl_resampling_linear": [[150, "index-58"]], "dnnl_resampling_nearest": [[150, "index-57"]], "dnnl_softmax_accurate": [[150, "index-68"]], "dnnl_softmax_log": [[150, "index-69"]], "dnnl_vanilla_augru": [[150, "index-43"]], "dnnl_vanilla_gru": [[150, "index-41"]], "dnnl_vanilla_lstm": [[150, "index-40"]], "dnnl_vanilla_rnn": [[150, "index-39"]], "enum": [[150, "index-0"], [151, "index-0"], [152, "index-0"], [153, "index-0"], [154, "index-0"], [155, "index-0"], [156, "index-0"], [157, "index-0"], [158, "index-0"], [159, "index-0"], [160, "index-0"], [161, "index-0"], [162, "index-0"], [163, "index-0"], [164, "index-0"], [165, "index-0"], [166, "index-0"], [167, "index-0"], [168, "index-0"], [169, "index-0"], [170, "index-0"], [171, "index-0"], [172, "index-0"], [173, "index-0"], [174, "index-0"], [175, "index-0"], [176, "index-0"], [177, "index-0"], [178, "index-0"], [179, "index-0"], [180, "index-0"], [181, "index-0"], [182, "index-0"], [183, "index-0"], [184, "index-0"], [185, "index-0"], [186, "index-0"], [187, "index-0"], [188, "index-0"], [189, "index-0"], [190, "index-0"], [191, "index-0"], [192, "index-0"], [193, "index-0"], [194, "index-0"], [195, "index-0"], [196, "index-0"], [197, "index-0"], [198, "index-0"], [199, "index-0"], [200, "index-0"], [201, "index-0"], [202, "index-0"], [203, "index-0"]], "enumvalue": [[150, "index-1"], [150, "index-10"], [150, "index-11"], [150, "index-12"], [150, "index-13"], [150, "index-14"], [150, "index-15"], [150, "index-16"], [150, "index-17"], [150, "index-18"], [150, "index-19"], [150, "index-2"], [150, "index-20"], [150, "index-21"], [150, "index-22"], [150, "index-23"], [150, "index-24"], [150, "index-25"], [150, "index-26"], [150, "index-27"], [150, "index-28"], [150, "index-29"], [150, "index-3"], [150, "index-30"], [150, "index-31"], [150, "index-32"], [150, "index-33"], [150, "index-34"], [150, "index-35"], [150, "index-36"], [150, "index-37"], [150, "index-38"], [150, "index-39"], [150, "index-4"], [150, "index-40"], [150, "index-41"], [150, "index-42"], [150, "index-43"], [150, "index-44"], [150, "index-45"], [150, "index-46"], [150, "index-47"], [150, "index-48"], [150, "index-49"], [150, "index-5"], [150, "index-50"], [150, "index-51"], [150, "index-52"], [150, "index-53"], [150, "index-54"], [150, "index-55"], [150, "index-56"], [150, "index-57"], [150, "index-58"], [150, "index-59"], [150, "index-6"], [150, "index-60"], [150, "index-61"], [150, "index-62"], [150, "index-63"], [150, "index-64"], [150, "index-65"], [150, "index-66"], [150, "index-67"], [150, "index-68"], [150, "index-69"], [150, "index-7"], [150, "index-8"], [150, "index-9"], [151, "index-1"], [151, "index-10"], [151, "index-11"], [151, "index-12"], [151, "index-13"], [151, "index-14"], [151, "index-15"], [151, "index-16"], [151, "index-17"], [151, "index-18"], [151, "index-19"], [151, "index-2"], [151, "index-20"], [151, "index-21"], [151, "index-22"], [151, "index-23"], [151, "index-24"], [151, "index-25"], [151, "index-26"], [151, "index-27"], [151, "index-28"], [151, "index-29"], [151, "index-3"], [151, "index-30"], [151, "index-31"], [151, "index-32"], [151, "index-33"], [151, "index-34"], [151, "index-35"], [151, "index-36"], [151, "index-37"], [151, "index-38"], [151, "index-39"], [151, "index-4"], [151, "index-40"], [151, "index-41"], [151, "index-42"], [151, "index-43"], [151, "index-44"], [151, "index-45"], [151, "index-46"], [151, "index-47"], [151, "index-48"], [151, "index-49"], [151, "index-5"], [151, "index-50"], [151, "index-51"], [151, "index-52"], [151, "index-53"], [151, "index-54"], [151, "index-55"], [151, "index-56"], [151, "index-57"], [151, "index-58"], [151, "index-59"], [151, "index-6"], [151, "index-60"], [151, "index-61"], [151, "index-62"], [151, "index-63"], [151, "index-64"], [151, "index-65"], [151, "index-66"], [151, "index-67"], [151, "index-68"], [151, "index-69"], [151, "index-7"], [151, "index-70"], [151, "index-8"], [151, "index-9"], [152, "index-1"], [152, "index-10"], [152, "index-11"], [152, "index-12"], [152, "index-2"], [152, "index-3"], [152, "index-4"], [152, "index-5"], [152, "index-6"], [152, "index-7"], [152, "index-8"], [152, "index-9"], [153, "index-1"], [153, "index-2"], [154, "index-1"], [154, "index-2"], [155, "index-1"], [155, "index-10"], [155, "index-11"], [155, "index-12"], [155, "index-2"], [155, "index-3"], [155, "index-4"], [155, "index-5"], [155, "index-6"], [155, "index-7"], [155, "index-8"], [155, "index-9"], [156, "index-1"], [156, "index-10"], [156, "index-2"], [156, "index-3"], [156, "index-4"], [156, "index-5"], [156, "index-6"], [156, "index-7"], [156, "index-8"], [156, "index-9"], [157, "index-1"], [157, "index-2"], [157, "index-3"], [158, "index-1"], [158, "index-2"], [158, "index-3"], [159, "index-1"], [159, "index-2"], [159, "index-3"], [159, "index-4"], [159, "index-5"], [159, "index-6"], [160, "index-1"], [160, "index-10"], [160, "index-100"], [160, "index-101"], [160, "index-102"], [160, "index-103"], [160, "index-104"], [160, "index-105"], [160, "index-106"], [160, "index-107"], [160, "index-108"], [160, "index-109"], [160, "index-11"], [160, "index-110"], [160, "index-111"], [160, "index-112"], [160, "index-113"], [160, "index-114"], [160, "index-115"], [160, "index-116"], [160, "index-117"], [160, "index-118"], [160, "index-119"], [160, "index-12"], [160, "index-120"], [160, "index-121"], [160, "index-122"], [160, "index-123"], [160, "index-124"], [160, "index-125"], [160, "index-126"], [160, "index-127"], [160, "index-128"], [160, "index-129"], [160, "index-13"], [160, "index-130"], [160, "index-131"], [160, "index-132"], [160, "index-133"], [160, "index-134"], [160, "index-135"], [160, "index-136"], [160, "index-137"], [160, "index-138"], [160, "index-14"], [160, "index-15"], [160, "index-16"], [160, "index-17"], [160, "index-18"], [160, "index-19"], [160, "index-2"], [160, "index-20"], [160, "index-21"], [160, "index-22"], [160, "index-23"], [160, "index-24"], [160, "index-25"], [160, "index-26"], [160, "index-27"], [160, "index-28"], [160, "index-29"], [160, "index-3"], [160, "index-30"], [160, "index-31"], [160, "index-32"], [160, "index-33"], [160, "index-34"], [160, "index-35"], [160, "index-36"], [160, "index-37"], [160, "index-38"], [160, "index-39"], [160, "index-4"], [160, "index-40"], [160, "index-41"], [160, "index-42"], [160, "index-43"], [160, "index-44"], [160, "index-45"], [160, "index-46"], [160, "index-47"], [160, "index-48"], [160, "index-49"], [160, "index-5"], [160, "index-50"], [160, "index-51"], [160, "index-52"], [160, "index-53"], [160, "index-54"], [160, "index-55"], [160, "index-56"], [160, "index-57"], [160, "index-58"], [160, "index-59"], [160, "index-6"], [160, "index-60"], [160, "index-61"], [160, "index-62"], [160, "index-63"], [160, "index-64"], [160, "index-65"], [160, "index-66"], [160, "index-67"], [160, "index-68"], [160, "index-69"], [160, "index-7"], [160, "index-70"], [160, "index-71"], [160, "index-72"], [160, "index-73"], [160, "index-74"], [160, "index-75"], [160, "index-76"], [160, "index-77"], [160, "index-78"], [160, "index-79"], [160, "index-8"], [160, "index-80"], [160, "index-81"], [160, "index-82"], [160, "index-83"], [160, "index-84"], [160, "index-85"], [160, "index-86"], [160, "index-87"], [160, "index-88"], [160, "index-89"], [160, "index-9"], [160, "index-90"], [160, "index-91"], [160, "index-92"], [160, "index-93"], [160, "index-94"], [160, "index-95"], [160, "index-96"], [160, "index-97"], [160, "index-98"], [160, "index-99"], [161, "index-1"], [161, "index-2"], [161, "index-3"], [161, "index-4"], [161, "index-5"], [162, "index-1"], [162, "index-2"], [162, "index-3"], [162, "index-4"], [162, "index-5"], [163, "index-1"], [163, "index-2"], [163, "index-3"], [163, "index-4"], [164, "index-1"], [164, "index-2"], [164, "index-3"], [164, "index-4"], [164, "index-5"], [164, "index-6"], [164, "index-7"], [165, "index-1"], [165, "index-2"], [165, "index-3"], [165, "index-4"], [166, "index-1"], [166, "index-2"], [166, "index-3"], [167, "index-1"], [167, "index-10"], [167, "index-11"], [167, "index-12"], [167, "index-13"], [167, "index-14"], [167, "index-15"], [167, "index-16"], [167, "index-17"], [167, "index-18"], [167, "index-19"], [167, "index-2"], [167, "index-20"], [167, "index-21"], [167, "index-22"], [167, "index-23"], [167, "index-24"], [167, "index-25"], [167, "index-26"], [167, "index-27"], [167, "index-28"], [167, "index-29"], [167, "index-3"], [167, "index-30"], [167, "index-31"], [167, "index-32"], [167, "index-33"], [167, "index-34"], [167, "index-35"], [167, "index-36"], [167, "index-37"], [167, "index-38"], [167, "index-39"], [167, "index-4"], [167, "index-40"], [167, "index-41"], [167, "index-42"], [167, "index-5"], [167, "index-6"], [167, "index-7"], [167, "index-8"], [167, "index-9"], [168, "index-1"], [168, "index-10"], [168, "index-11"], [168, "index-12"], [168, "index-13"], [168, "index-14"], [168, "index-15"], [168, "index-16"], [168, "index-17"], [168, "index-18"], [168, "index-19"], [168, "index-2"], [168, "index-20"], [168, "index-21"], [168, "index-22"], [168, "index-23"], [168, "index-24"], [168, "index-25"], [168, "index-26"], [168, "index-27"], [168, "index-28"], [168, "index-29"], [168, "index-3"], [168, "index-30"], [168, "index-31"], [168, "index-32"], [168, "index-33"], [168, "index-34"], [168, "index-35"], [168, "index-36"], [168, "index-37"], [168, "index-38"], [168, "index-39"], [168, "index-4"], [168, "index-40"], [168, "index-41"], [168, "index-42"], [168, "index-5"], [168, "index-6"], [168, "index-7"], [168, "index-8"], [168, "index-9"], [171, "index-1"], [171, "index-2"], [172, "index-1"], [172, "index-2"], [173, "index-1"], [173, "index-10"], [173, "index-11"], [173, "index-2"], [173, "index-3"], [173, "index-4"], [173, "index-5"], [173, "index-6"], [173, "index-7"], [173, "index-8"], [173, "index-9"], [174, "index-1"], [174, "index-2"], [174, "index-3"], [175, "index-1"], [175, "index-2"], [175, "index-3"], [175, "index-4"], [175, "index-5"], [175, "index-6"], [175, "index-7"], [176, "index-1"], [176, "index-2"], [176, "index-3"], [176, "index-4"], [176, "index-5"], [177, "index-1"], [177, "index-10"], [177, "index-11"], [177, "index-12"], [177, "index-13"], [177, "index-14"], [177, "index-15"], [177, "index-16"], [177, "index-17"], [177, "index-18"], [177, "index-19"], [177, "index-2"], [177, "index-20"], [177, "index-21"], [177, "index-22"], [177, "index-23"], [177, "index-24"], [177, "index-25"], [177, "index-26"], [177, "index-27"], [177, "index-28"], [177, "index-29"], [177, "index-3"], [177, "index-30"], [177, "index-31"], [177, "index-32"], [177, "index-33"], [177, "index-34"], [177, "index-35"], [177, "index-36"], [177, "index-37"], [177, "index-38"], [177, "index-39"], [177, "index-4"], [177, "index-40"], [177, "index-41"], [177, "index-42"], [177, "index-43"], [177, "index-44"], [177, "index-45"], [177, "index-46"], [177, "index-47"], [177, "index-48"], [177, "index-49"], [177, "index-5"], [177, "index-50"], [177, "index-51"], [177, "index-52"], [177, "index-53"], [177, "index-54"], [177, "index-55"], [177, "index-56"], [177, "index-57"], [177, "index-58"], [177, "index-59"], [177, "index-6"], [177, "index-60"], [177, "index-61"], [177, "index-62"], [177, "index-63"], [177, "index-64"], [177, "index-65"], [177, "index-66"], [177, "index-67"], [177, "index-68"], [177, "index-69"], [177, "index-7"], [177, "index-70"], [177, "index-71"], [177, "index-72"], [177, "index-73"], [177, "index-74"], [177, "index-75"], [177, "index-76"], [177, "index-77"], [177, "index-78"], [177, "index-79"], [177, "index-8"], [177, "index-80"], [177, "index-81"], [177, "index-82"], [177, "index-83"], [177, "index-84"], [177, "index-85"], [177, "index-86"], [177, "index-87"], [177, "index-88"], [177, "index-89"], [177, "index-9"], [177, "index-90"], [177, "index-91"], [177, "index-92"], [177, "index-93"], [177, "index-94"], [177, "index-95"], [178, "index-1"], [178, "index-2"], [179, "index-1"], [179, "index-2"], [179, "index-3"], [179, "index-4"], [179, "index-5"], [179, "index-6"], [180, "index-1"], [180, "index-2"], [180, "index-3"], [180, "index-4"], [180, "index-5"], [180, "index-6"], [181, "index-1"], [181, "index-2"], [182, "index-1"], [182, "index-2"], [183, "index-1"], [183, "index-10"], [183, "index-11"], [183, "index-12"], [183, "index-13"], [183, "index-14"], [183, "index-15"], [183, "index-16"], [183, "index-17"], [183, "index-18"], [183, "index-19"], [183, "index-2"], [183, "index-20"], [183, "index-3"], [183, "index-4"], [183, "index-5"], [183, "index-6"], [183, "index-7"], [183, "index-8"], [183, "index-9"], [184, "index-1"], [184, "index-10"], [184, "index-11"], [184, "index-12"], [184, "index-13"], [184, "index-14"], [184, "index-15"], [184, "index-16"], [184, "index-17"], [184, "index-18"], [184, "index-19"], [184, "index-2"], [184, "index-20"], [184, "index-21"], [184, "index-22"], [184, "index-3"], [184, "index-4"], [184, "index-5"], [184, "index-6"], [184, "index-7"], [184, "index-8"], [184, "index-9"], [185, "index-1"], [185, "index-2"], [186, "index-1"], [186, "index-2"], [187, "index-1"], [187, "index-2"], [187, "index-3"], [187, "index-4"], [187, "index-5"], [187, "index-6"], [187, "index-7"], [187, "index-8"], [188, "index-1"], [188, "index-2"], [188, "index-3"], [188, "index-4"], [188, "index-5"], [188, "index-6"], [188, "index-7"], [188, "index-8"], [189, "index-1"], [189, "index-10"], [189, "index-11"], [189, "index-12"], [189, "index-13"], [189, "index-14"], [189, "index-15"], [189, "index-16"], [189, "index-17"], [189, "index-18"], [189, "index-19"], [189, "index-2"], [189, "index-20"], [189, "index-21"], [189, "index-22"], [189, "index-23"], [189, "index-24"], [189, "index-25"], [189, "index-26"], [189, "index-27"], [189, "index-28"], [189, "index-29"], [189, "index-3"], [189, "index-30"], [189, "index-31"], [189, "index-32"], [189, "index-33"], [189, "index-34"], [189, "index-35"], [189, "index-36"], [189, "index-37"], [189, "index-38"], [189, "index-39"], [189, "index-4"], [189, "index-40"], [189, "index-41"], [189, "index-42"], [189, "index-43"], [189, "index-44"], [189, "index-45"], [189, "index-46"], [189, "index-47"], [189, "index-48"], [189, "index-49"], [189, "index-5"], [189, "index-50"], [189, "index-51"], [189, "index-52"], [189, "index-53"], [189, "index-54"], [189, "index-55"], [189, "index-6"], [189, "index-7"], [189, "index-8"], [189, "index-9"], [190, "index-1"], [190, "index-10"], [190, "index-11"], [190, "index-12"], [190, "index-13"], [190, "index-14"], [190, "index-15"], [190, "index-16"], [190, "index-17"], [190, "index-18"], [190, "index-19"], [190, "index-2"], [190, "index-20"], [190, "index-21"], [190, "index-22"], [190, "index-23"], [190, "index-24"], [190, "index-25"], [190, "index-26"], [190, "index-27"], [190, "index-28"], [190, "index-29"], [190, "index-3"], [190, "index-30"], [190, "index-31"], [190, "index-32"], [190, "index-33"], [190, "index-34"], [190, "index-35"], [190, "index-36"], [190, "index-37"], [190, "index-38"], [190, "index-39"], [190, "index-4"], [190, "index-40"], [190, "index-41"], [190, "index-42"], [190, "index-43"], [190, "index-44"], [190, "index-45"], [190, "index-46"], [190, "index-47"], [190, "index-48"], [190, "index-49"], [190, "index-5"], [190, "index-50"], [190, "index-51"], [190, "index-52"], [190, "index-53"], [190, "index-54"], [190, "index-55"], [190, "index-56"], [190, "index-57"], [190, "index-6"], [190, "index-7"], [190, "index-8"], [190, "index-9"], [191, "index-1"], [191, "index-2"], [191, "index-3"], [191, "index-4"], [191, "index-5"], [192, "index-1"], [192, "index-2"], [192, "index-3"], [192, "index-4"], [192, "index-5"], [193, "index-1"], [193, "index-2"], [194, "index-1"], [194, "index-2"], [195, "index-1"], [195, "index-2"], [196, "index-1"], [196, "index-2"], [197, "index-1"], [197, "index-2"], [198, "index-1"], [198, "index-2"], [198, "index-3"], [198, "index-4"], [198, "index-5"], [198, "index-6"], [198, "index-7"], [199, "index-1"], [199, "index-10"], [199, "index-11"], [199, "index-2"], [199, "index-3"], [199, "index-4"], [199, "index-5"], [199, "index-6"], [199, "index-7"], [199, "index-8"], [199, "index-9"], [200, "index-1"], [200, "index-2"], [200, "index-3"], [201, "index-1"], [201, "index-2"], [202, "index-1"], [202, "index-2"], [203, "index-1"], [203, "index-2"]], "algorithm": [[151, "index-0"]], "binary_add": [[151, "index-46"]], "binary_div": [[151, "index-50"]], "binary_eq": [[151, "index-56"]], "binary_ge": [[151, "index-52"]], "binary_gt": [[151, "index-53"]], "binary_le": [[151, "index-54"]], "binary_lt": [[151, "index-55"]], "binary_max": [[151, "index-48"]], "binary_min": [[151, "index-49"]], "binary_mul": [[151, "index-47"]], "binary_ne": [[151, "index-57"]], "binary_sub": [[151, "index-51"]], "convolution_auto": [[151, "index-2"]], "convolution_direct": [[151, "index-3"]], "convolution_winograd": [[151, "index-4"]], "deconvolution_direct": [[151, "index-5"]], "deconvolution_winograd": [[151, "index-6"]], "eltwise_abs": [[151, "index-11"]], "eltwise_clip": [[151, "index-22"]], "eltwise_clip_v2": [[151, "index-23"]], "eltwise_clip_v2_use_dst_for_bwd": [[151, "index-34"]], "eltwise_elu": [[151, "index-9"]], "eltwise_elu_use_dst_for_bwd": [[151, "index-30"]], "eltwise_exp": [[151, "index-18"]], "eltwise_exp_use_dst_for_bwd": [[151, "index-33"]], "eltwise_gelu_erf": [[151, "index-20"]], "eltwise_gelu_tanh": [[151, "index-19"]], "eltwise_hardsigmoid": [[151, "index-27"]], "eltwise_hardswish": [[151, "index-26"]], "eltwise_linear": [[151, "index-14"]], "eltwise_log": [[151, "index-21"]], "eltwise_logistic": [[151, "index-17"]], "eltwise_logistic_use_dst_for_bwd": [[151, "index-32"]], "eltwise_mish": [[151, "index-16"]], "eltwise_pow": [[151, "index-24"]], "eltwise_relu": [[151, "index-7"]], "eltwise_relu_use_dst_for_bwd": [[151, "index-28"]], "eltwise_round": [[151, "index-25"]], "eltwise_soft_relu": [[151, "index-15"]], "eltwise_sqrt": [[151, "index-12"]], "eltwise_sqrt_use_dst_for_bwd": [[151, "index-31"]], "eltwise_square": [[151, "index-10"]], "eltwise_swish": [[151, "index-13"]], "eltwise_tanh": [[151, "index-8"]], "eltwise_tanh_use_dst_for_bwd": [[151, "index-29"]], "lbr_augru": [[151, "index-45"]], "lbr_gru": [[151, "index-43"]], "lrn_across_channels": [[151, "index-35"]], "lrn_within_channel": [[151, "index-36"]], "pooling_avg_exclude_padding": [[151, "index-39"]], "pooling_avg_include_padding": [[151, "index-38"]], "pooling_max": [[151, "index-37"]], "reduction_max": [[151, "index-60"]], "reduction_mean": [[151, "index-64"]], "reduction_min": [[151, "index-61"]], "reduction_mul": [[151, "index-63"]], "reduction_norm_lp_max": [[151, "index-65"]], "reduction_norm_lp_power_p_max": [[151, "index-67"]], "reduction_norm_lp_power_p_sum": [[151, "index-68"]], "reduction_norm_lp_sum": [[151, "index-66"]], "reduction_sum": [[151, "index-62"]], "resampling_linear": [[151, "index-59"]], "resampling_nearest": [[151, "index-58"]], "softmax_accurate": [[151, "index-69"]], "softmax_log": [[151, "index-70"]], "undef": [[151, "index-1"], [165, "index-1"], [166, "index-1"], [167, "index-1"], [175, "index-1"], [176, "index-1"], [177, "index-1"], [178, "index-1"], [183, "index-1"], [185, "index-1"], [187, "index-1"], [189, "index-1"], [191, "index-1"], [193, "index-1"]], "vanilla_augru": [[151, "index-44"]], "vanilla_gru": [[151, "index-42"]], "vanilla_lstm": [[151, "index-41"]], "vanilla_rnn": [[151, "index-40"]], "avx": [[152, "index-3"]], "avx2": [[152, "index-4"]], "avx2_vnni": [[152, "index-5"]], "avx2_vnni_2": [[152, "index-6"]], "avx512_core": [[152, "index-7"]], "avx512_core_amx": [[152, "index-11"]], "avx512_core_amx_fp16": [[152, "index-12"]], "avx512_core_bf16": [[152, "index-9"]], "avx512_core_fp16": [[152, "index-10"]], "avx512_core_vnni": [[152, "index-8"]], "cpu_isa": [[152, "index-0"]], "isa_default": [[152, "index-1"]], "sse41": [[152, "index-2"]], "cpu_isa_hints": [[153, "index-0"]], "no_hints": [[153, "index-1"]], "prefer_ymm": [[153, "index-2"]], "dnnl_cpu_isa_hints_t": [[154, "index-0"]], "dnnl_cpu_isa_no_hints": [[154, "index-1"]], "dnnl_cpu_isa_prefer_ymm": [[154, "index-2"]], "dnnl_cpu_isa_avx": [[155, "index-3"]], "dnnl_cpu_isa_avx2": [[155, "index-4"]], "dnnl_cpu_isa_avx2_vnni": [[155, "index-5"]], "dnnl_cpu_isa_avx2_vnni_2": [[155, "index-6"]], "dnnl_cpu_isa_avx512_core": [[155, "index-7"]], "dnnl_cpu_isa_avx512_core_amx": [[155, "index-11"]], "dnnl_cpu_isa_avx512_core_amx_fp16": [[155, "index-12"]], "dnnl_cpu_isa_avx512_core_bf16": [[155, "index-9"]], "dnnl_cpu_isa_avx512_core_fp16": [[155, "index-10"]], "dnnl_cpu_isa_avx512_core_vnni": [[155, "index-8"]], "dnnl_cpu_isa_default": [[155, "index-1"]], "dnnl_cpu_isa_sse41": [[155, "index-2"]], "dnnl_cpu_isa_t": [[155, "index-0"]], "dnnl_bf16": [[156, "index-3"]], "dnnl_boolean": [[156, "index-9"]], "dnnl_data_type_max": [[156, "index-10"]], "dnnl_data_type_t": [[156, "index-0"]], "dnnl_data_type_undef": [[156, "index-1"]], "dnnl_f16": [[156, "index-2"]], "dnnl_f32": [[156, "index-4"]], "dnnl_f64": [[156, "index-8"]], "dnnl_s32": [[156, "index-5"]], "dnnl_s8": [[156, "index-6"]], "dnnl_u8": [[156, "index-7"]], "any": [[157, "index-1"], [161, "index-5"], [165, "index-2"], [176, "index-2"], [177, "index-2"]], "cpu": [[157, "index-2"]], "gpu": [[157, "index-3"]], "kind": [[157, "index-0"], [169, "index-0"], [183, "index-0"], [456, "index-4"]], "dnnl_any_engine": [[158, "index-1"]], "dnnl_cpu": [[158, "index-2"]], "dnnl_engine_kind_t": [[158, "index-0"]], "dnnl_gpu": [[158, "index-3"]], "dnnl_blocked": [[159, "index-3"]], "dnnl_format_kind_any": [[159, "index-2"]], "dnnl_format_kind_max": [[159, "index-6"]], "dnnl_format_kind_opaque": [[159, "index-4"]], "dnnl_format_kind_sparse": [[159, "index-5"]], "dnnl_format_kind_t": [[159, "index-0"]], "dnnl_format_kind_undef": [[159, "index-1"]], "dnnl_abcd8b8a": [[160, "index-61"]], "dnnl_abcde2b8a4b": [[160, "index-64"]], "dnnl_abcde4b16a4b": [[160, "index-63"]], "dnnl_a": [[160, "index-3"]], "dnnl_abcd2b4c2b": [[160, "index-62"]], "dnnl_abcde2b4c2b": [[160, "index-69"]], "dnnl_abcdef2b4c2b": [[160, "index-72"]], "dnnl_abcdef2c8b4c": [[160, "index-71"]], "dnnl_abc16b": [[160, "index-53"]], "dnnl_abc32b": [[160, "index-54"]], "dnnl_abc4b": [[160, "index-55"]], "dnnl_abc8b": [[160, "index-56"]], "dnnl_abcd16b": [[160, "index-57"]], "dnnl_abcd32b": [[160, "index-58"]], "dnnl_abcd4b": [[160, "index-59"]], "dnnl_abcd8b": [[160, "index-60"]], "dnnl_abcde16b": [[160, "index-65"]], "dnnl_abcde32b": [[160, "index-66"]], "dnnl_abcde4b": [[160, "index-67"]], "dnnl_abcde8b": [[160, "index-68"]], "dnnl_abcdef16b": [[160, "index-70"]], "dnnl_abcdef4b": [[160, "index-73"]], "dnnl_ab": [[160, "index-4"]], "dnnl_abc": [[160, "index-5"]], "dnnl_abcd": [[160, "index-6"]], "dnnl_abcde": [[160, "index-7"]], "dnnl_abcdef": [[160, "index-8"]], "dnnl_abcdefg": [[160, "index-9"]], "dnnl_abcdefgh": [[160, "index-10"]], "dnnl_abcdefghi": [[160, "index-11"]], "dnnl_abcdefghij": [[160, "index-12"]], "dnnl_abcdefghijk": [[160, "index-13"]], "dnnl_abcdefghijkl": [[160, "index-14"]], "dnnl_abcdefghijlk": [[160, "index-52"]], "dnnl_abcdefghikj": [[160, "index-51"]], "dnnl_abcdefghji": [[160, "index-50"]], "dnnl_abcdefgih": [[160, "index-49"]], "dnnl_abcdefhg": [[160, "index-48"]], "dnnl_abcdegf": [[160, "index-47"]], "dnnl_abcdfe": [[160, "index-41"]], "dnnl_abced": [[160, "index-31"]], "dnnl_abdc": [[160, "index-21"]], "dnnl_abdec": [[160, "index-32"]], "dnnl_abdefc": [[160, "index-42"]], "dnnl_abdfce": [[160, "index-43"]], "dnnl_acb": [[160, "index-16"]], "dnnl_acbd": [[160, "index-22"]], "dnnl_acbde": [[160, "index-33"]], "dnnl_acbdef": [[160, "index-44"]], "dnnl_acdb": [[160, "index-23"]], "dnnl_acdeb": [[160, "index-34"]], "dnnl_adbc": [[160, "index-24"]], "dnnl_adcb": [[160, "index-25"]], "dnnl_adecb": [[160, "index-35"]], "dnnl_adefcb": [[160, "index-45"]], "dnnl_ba": [[160, "index-15"]], "dnnl_bac": [[160, "index-17"]], "dnnl_bacd": [[160, "index-26"]], "dnnl_bacde": [[160, "index-36"]], "dnnl_bca": [[160, "index-18"]], "dnnl_bcda": [[160, "index-27"]], "dnnl_bcdea": [[160, "index-37"]], "dnnl_cab": [[160, "index-19"]], "dnnl_cba": [[160, "index-20"]], "dnnl_cdab": [[160, "index-28"]], "dnnl_cdba": [[160, "index-29"]], "dnnl_cdeab": [[160, "index-38"]], "dnnl_cdeba": [[160, "index-39"]], "dnnl_chwn": [[160, "index-84"]], "dnnl_cn": [[160, "index-77"]], "dnnl_dcab": [[160, "index-30"]], "dnnl_decab": [[160, "index-40"]], "dnnl_defcab": [[160, "index-46"]], "dnnl_dhwigo": [[160, "index-116"]], "dnnl_dhwio": [[160, "index-102"]], "dnnl_dhwoi": [[160, "index-103"]], "dnnl_format_tag_any": [[160, "index-2"]], "dnnl_format_tag_last": [[160, "index-74"]], "dnnl_format_tag_t": [[160, "index-0"]], "dnnl_format_tag_undef": [[160, "index-1"]], "dnnl_giodhw": [[160, "index-115"]], "dnnl_giohw": [[160, "index-112"]], "dnnl_godhwi": [[160, "index-114"]], "dnnl_gohwi": [[160, "index-110"]], "dnnl_goidhw": [[160, "index-113"]], "dnnl_goihw": [[160, "index-109"]], "dnnl_goiw": [[160, "index-106"]], "dnnl_gowi": [[160, "index-107"]], "dnnl_hwigo": [[160, "index-111"]], "dnnl_hwio": [[160, "index-95"]], "dnnl_hwoi": [[160, "index-96"]], "dnnl_idhwo": [[160, "index-105"]], "dnnl_ihwo": [[160, "index-98"]], "dnnl_io": [[160, "index-88"]], "dnnl_iodhw": [[160, "index-101"]], "dnnl_iohw": [[160, "index-99"]], "dnnl_iwo": [[160, "index-93"]], "dnnl_ldoi16o": [[160, "index-125"]], "dnnl_ldgoi16o": [[160, "index-126"]], "dnnl_ldgo": [[160, "index-124"]], "dnnl_ldgoi": [[160, "index-121"]], "dnnl_ldigo": [[160, "index-120"]], "dnnl_ldio": [[160, "index-122"]], "dnnl_ldnc": [[160, "index-119"]], "dnnl_ldoi": [[160, "index-123"]], "dnnl_ncdhw16c": [[160, "index-128"]], "dnnl_ncdhw32c": [[160, "index-127"]], "dnnl_ncdhw4c": [[160, "index-129"]], "dnnl_ncdhw8c": [[160, "index-130"]], "dnnl_nchw16c": [[160, "index-132"]], "dnnl_nchw32c": [[160, "index-131"]], "dnnl_nchw4c": [[160, "index-133"]], "dnnl_nchw8c": [[160, "index-134"]], "dnnl_ncw16c": [[160, "index-136"]], "dnnl_ncw32c": [[160, "index-135"]], "dnnl_ncw4c": [[160, "index-137"]], "dnnl_ncw8c": [[160, "index-138"]], "dnnl_nc": [[160, "index-76"]], "dnnl_ncdhw": [[160, "index-85"]], "dnnl_nchw": [[160, "index-82"]], "dnnl_ncw": [[160, "index-80"]], "dnnl_ndhwc": [[160, "index-86"]], "dnnl_nhwc": [[160, "index-83"]], "dnnl_nt": [[160, "index-79"]], "dnnl_ntc": [[160, "index-118"]], "dnnl_nwc": [[160, "index-81"]], "dnnl_odhwi": [[160, "index-104"]], "dnnl_ohwi": [[160, "index-97"]], "dnnl_oi": [[160, "index-87"]], "dnnl_oidhw": [[160, "index-100"]], "dnnl_oihw": [[160, "index-94"]], "dnnl_oiw": [[160, "index-89"]], "dnnl_owi": [[160, "index-90"]], "dnnl_tn": [[160, "index-78"]], "dnnl_tnc": [[160, "index-117"]], "dnnl_wigo": [[160, "index-108"]], "dnnl_wio": [[160, "index-91"]], "dnnl_woi": [[160, "index-92"]], "dnnl_x": [[160, "index-75"]], "bf16": [[161, "index-2"], [164, "index-2"], [175, "index-3"]], "f16": [[161, "index-3"], [164, "index-1"], [175, "index-2"]], "fpmath_mode": [[161, "index-0"]], "strict": [[161, "index-1"]], "tf32": [[161, "index-4"]], "dnnl_fpmath_mode_any": [[162, "index-4"]], "dnnl_fpmath_mode_bf16": [[162, "index-2"]], "dnnl_fpmath_mode_f16": [[162, "index-3"]], "dnnl_fpmath_mode_strict": [[162, "index-1"]], "dnnl_fpmath_mode_t": [[162, "index-0"]], "dnnl_fpmath_mode_tf32": [[162, "index-5"]], "dnnl_graph_layout_type_any": [[163, "index-2"]], "dnnl_graph_layout_type_opaque": [[163, "index-4"]], "dnnl_graph_layout_type_strided": [[163, "index-3"]], "dnnl_graph_layout_type_t": [[163, "index-0"]], "dnnl_graph_layout_type_undef": [[163, "index-1"]], "boolean": [[164, "index-7"]], "data_type": [[164, "index-0"], [175, "index-0"], [189, "index-45"], [412, "index-4"]], "f32": [[164, "index-3"], [175, "index-4"]], "s32": [[164, "index-4"], [175, "index-5"]], "s8": [[164, "index-5"], [175, "index-6"]], "u8": [[164, "index-6"], [175, "index-7"]], "layout_type": [[165, "index-0"], [412, "index-6"]], "opaque": [[165, "index-4"], [176, "index-5"]], "strided": [[165, "index-3"]], "constant": [[166, "index-3"]], "property_type": [[166, "index-0"]], "variable": [[166, "index-2"], [410, "index-1"], [410, "index-2"], [411, "index-1"], [411, "index-2"], [412, "index-1"], [412, "index-2"], [412, "index-3"], [412, "index-4"], [412, "index-5"], [412, "index-6"], [412, "index-7"], [412, "index-8"], [489, "index-1"], [494, "index-1"], [494, "index-2"], [494, "index-3"], [494, "index-4"], [494, "index-5"], [494, "index-6"]], "alpha": [[167, "index-2"]], "attr": [[167, "index-0"]], "auto_broadcast": [[167, "index-35"]], "auto_pad": [[167, "index-36"]], "axes": [[167, "index-12"]], "axis": [[167, "index-9"]], "begin_norm_axis": [[167, "index-10"]], "beta": [[167, "index-3"]], "coordinate_transformation_mode": [[167, "index-37"]], "data_format": [[167, "index-38"]], "dilations": [[167, "index-13"], [189, "index-16"]], "dst_shape": [[167, "index-14"]], "epsilon": [[167, "index-4"]], "exclude_pad": [[167, "index-26"]], "groups": [[167, "index-11"]], "keep_dims": [[167, "index-27"]], "keep_stats": [[167, "index-28"]], "kernel": [[167, "index-15"], [189, "index-32"]], "max": [[167, "index-5"]], "min": [[167, "index-6"]], "mode": [[167, "index-39"]], "momentum": [[167, "index-7"]], "order": [[167, "index-16"]], "output_padding": [[167, "index-17"]], "pads_begin": [[167, "index-18"]], "pads_end": [[167, "index-19"]], "per_channel_broadcast": [[167, "index-29"]], "qtype": [[167, "index-40"]], "rounding_type": [[167, "index-41"]], "scales": [[167, "index-8"]], "shape": [[167, "index-20"]], "sizes": [[167, "index-21"]], "special_zero": [[167, "index-30"]], "src_shape": [[167, "index-22"]], "strides": [[167, "index-23"], [189, "index-15"], [412, "index-7"]], "transpose_a": [[167, "index-31"]], "transpose_b": [[167, "index-32"]], "use_affine": [[167, "index-33"]], "use_dst": [[167, "index-34"]], "weights_format": [[167, "index-42"]], "weights_shape": [[167, "index-24"]], "zps": [[167, "index-25"]], "dnnl_graph_op_attr_alpha": [[168, "index-2"]], "dnnl_graph_op_attr_auto_broadcast": [[168, "index-35"]], "dnnl_graph_op_attr_auto_pad": [[168, "index-36"]], "dnnl_graph_op_attr_axes": [[168, "index-12"]], "dnnl_graph_op_attr_axis": [[168, "index-9"]], "dnnl_graph_op_attr_begin_norm_axis": [[168, "index-10"]], "dnnl_graph_op_attr_beta": [[168, "index-3"]], "dnnl_graph_op_attr_coordinate_transformation_mode": [[168, "index-37"]], "dnnl_graph_op_attr_data_format": [[168, "index-38"]], "dnnl_graph_op_attr_dilations": [[168, "index-13"]], "dnnl_graph_op_attr_dst_shape": [[168, "index-14"]], "dnnl_graph_op_attr_epsilon": [[168, "index-4"]], "dnnl_graph_op_attr_exclude_pad": [[168, "index-26"]], "dnnl_graph_op_attr_groups": [[168, "index-11"]], "dnnl_graph_op_attr_keep_dims": [[168, "index-27"]], "dnnl_graph_op_attr_keep_stats": [[168, "index-28"]], "dnnl_graph_op_attr_kernel": [[168, "index-15"]], "dnnl_graph_op_attr_max": [[168, "index-5"]], "dnnl_graph_op_attr_min": [[168, "index-6"]], "dnnl_graph_op_attr_mode": [[168, "index-39"]], "dnnl_graph_op_attr_momentum": [[168, "index-7"]], "dnnl_graph_op_attr_order": [[168, "index-16"]], "dnnl_graph_op_attr_output_padding": [[168, "index-17"]], "dnnl_graph_op_attr_pads_begin": [[168, "index-18"]], "dnnl_graph_op_attr_pads_end": [[168, "index-19"]], "dnnl_graph_op_attr_per_channel_broadcast": [[168, "index-29"]], "dnnl_graph_op_attr_qtype": [[168, "index-40"]], "dnnl_graph_op_attr_rounding_type": [[168, "index-41"]], "dnnl_graph_op_attr_scales": [[168, "index-8"]], "dnnl_graph_op_attr_shape": [[168, "index-20"]], "dnnl_graph_op_attr_sizes": [[168, "index-21"]], "dnnl_graph_op_attr_special_zero": [[168, "index-30"]], "dnnl_graph_op_attr_src_shape": [[168, "index-22"]], "dnnl_graph_op_attr_strides": [[168, "index-23"]], "dnnl_graph_op_attr_t": [[168, "index-0"]], "dnnl_graph_op_attr_transpose_a": [[168, "index-31"]], "dnnl_graph_op_attr_transpose_b": [[168, "index-32"]], "dnnl_graph_op_attr_undef": [[168, "index-1"]], "dnnl_graph_op_attr_use_affine": [[168, "index-33"]], "dnnl_graph_op_attr_use_dst": [[168, "index-34"]], "dnnl_graph_op_attr_weights_format": [[168, "index-42"]], "dnnl_graph_op_attr_weights_shape": [[168, "index-24"]], "dnnl_graph_op_attr_zps": [[168, "index-25"]], "dnnl_graph_op_kind_t": [[170, "index-0"]], "debug": [[171, "index-2"]], "fusion": [[171, "index-1"]], "policy": [[171, "index-0"]], "dnnl_graph_partition_policy_debug": [[172, "index-2"]], "dnnl_graph_partition_policy_fusion": [[172, "index-1"]], "dnnl_graph_partition_policy_t": [[172, "index-0"]], "invalid_arguments": [[173, "index-3"], [198, "index-3"]], "invalid_data_type": [[173, "index-11"]], "invalid_graph": [[173, "index-8"]], "invalid_graph_op": [[173, "index-9"]], "invalid_shape": [[173, "index-10"]], "last_impl_reached": [[173, "index-5"], [198, "index-5"]], "not_required": [[173, "index-7"], [198, "index-7"]], "out_of_memory": [[173, "index-2"], [198, "index-2"]], "runtime_error": [[173, "index-6"], [198, "index-6"]], "status": [[173, "index-0"], [198, "index-0"], [296, "index-0"]], "success": [[173, "index-1"], [198, "index-1"]], "unimplemented": [[173, "index-4"], [198, "index-4"]], "dnnl_graph_tensor_property_constant": [[174, "index-3"]], "dnnl_graph_tensor_property_t": [[174, "index-0"]], "dnnl_graph_tensor_property_undef": [[174, "index-1"]], "dnnl_graph_tensor_property_variable": [[174, "index-2"]], "blocked": [[176, "index-3"]], "format_kind": [[176, "index-0"], [189, "index-49"]], "sparse": [[176, "index-4"]], "abcd8b8a": [[177, "index-95"]], "a": [[177, "index-3"]], "abcd8b": [[177, "index-94"]], "ab": [[177, "index-4"]], "abc": [[177, "index-6"]], "abcd": [[177, "index-11"]], "abcde": [[177, "index-20"]], "abcdef": [[177, "index-29"]], "abcdefg": [[177, "index-35"]], "abcdefgh": [[177, "index-37"]], "abcdefghi": [[177, "index-39"]], "abcdefghij": [[177, "index-41"]], "abcdefghijk": [[177, "index-43"]], "abcdefghijkl": [[177, "index-45"]], "abcdefghijlk": [[177, "index-46"]], "abcdefghikj": [[177, "index-44"]], "abcdefghji": [[177, "index-42"]], "abcdefgih": [[177, "index-40"]], "abcdefhg": [[177, "index-38"]], "abcdegf": [[177, "index-36"]], "abcdfe": [[177, "index-34"]], "abced": [[177, "index-28"]], "abdc": [[177, "index-12"]], "abdec": [[177, "index-21"]], "abdefc": [[177, "index-32"]], "abdfce": [[177, "index-30"]], "acb": [[177, "index-7"]], "acbd": [[177, "index-13"]], "acbde": [[177, "index-22"]], "acbdef": [[177, "index-31"]], "acdb": [[177, "index-14"]], "acdeb": [[177, "index-23"]], "adbc": [[177, "index-15"]], "ba": [[177, "index-5"]], "bac": [[177, "index-8"]], "bacd": [[177, "index-16"]], "bacde": [[177, "index-24"]], "bca": [[177, "index-9"]], "bcda": [[177, "index-17"]], "bcdea": [[177, "index-25"]], "cba": [[177, "index-10"]], "cdba": [[177, "index-18"]], "cdeba": [[177, "index-26"]], "chwn": [[177, "index-56"]], "cn": [[177, "index-49"]], "dcab": [[177, "index-19"]], "decab": [[177, "index-27"]], "defcab": [[177, "index-33"]], "dhwigo": [[177, "index-85"]], "dhwio": [[177, "index-71"]], "format_tag": [[177, "index-0"]], "giodhw": [[177, "index-83"]], "giohw": [[177, "index-81"]], "godhwi": [[177, "index-84"]], "gohwi": [[177, "index-78"]], "goidhw": [[177, "index-82"]], "goihw": [[177, "index-79"]], "goiw": [[177, "index-75"]], "gowi": [[177, "index-76"]], "hwigo": [[177, "index-80"]], "hwio": [[177, "index-66"]], "idhwo": [[177, "index-74"]], "ihwo": [[177, "index-68"]], "io": [[177, "index-60"]], "iodhw": [[177, "index-73"]], "iohw": [[177, "index-69"]], "iwo": [[177, "index-64"]], "ldgo": [[177, "index-93"]], "ldgoi": [[177, "index-90"]], "ldigo": [[177, "index-89"]], "ldio": [[177, "index-91"]], "ldnc": [[177, "index-88"]], "ldoi": [[177, "index-92"]], "nc": [[177, "index-48"]], "ncdhw": [[177, "index-57"]], "nchw": [[177, "index-54"]], "ncw": [[177, "index-52"]], "ndhwc": [[177, "index-58"]], "nhwc": [[177, "index-55"]], "nt": [[177, "index-51"]], "ntc": [[177, "index-87"]], "nwc": [[177, "index-53"]], "odhwi": [[177, "index-72"]], "ohwi": [[177, "index-67"]], "oi": [[177, "index-59"]], "oidhw": [[177, "index-70"]], "oihw": [[177, "index-65"]], "oiw": [[177, "index-61"]], "owi": [[177, "index-62"]], "tn": [[177, "index-50"]], "tnc": [[177, "index-86"]], "wigo": [[177, "index-77"]], "wio": [[177, "index-63"]], "x": [[177, "index-47"]], "csr": [[178, "index-2"], [450, "index-26"]], "sparse_encoding": [[178, "index-0"], [189, "index-53"]], "fuse_norm_add_relu": [[179, "index-6"]], "fuse_norm_relu": [[179, "index-5"]], "none": [[179, "index-1"]], "normalization_flags": [[179, "index-0"]], "use_global_stats": [[179, "index-2"]], "use_scale": [[179, "index-3"]], "use_shift": [[179, "index-4"]], "dnnl_fuse_norm_add_relu": [[180, "index-6"]], "dnnl_fuse_norm_relu": [[180, "index-5"]], "dnnl_normalization_flags_none": [[180, "index-1"]], "dnnl_normalization_flags_t": [[180, "index-0"]], "dnnl_use_global_stats": [[180, "index-2"]], "dnnl_use_scale": [[180, "index-3"]], "dnnl_use_shift": [[180, "index-4"]], "buffer": [[181, "index-2"], [202, "index-2"]], "memory_kind": [[181, "index-0"], [202, "index-0"]], "usm": [[181, "index-1"], [202, "index-1"]], "dnnl_ocl_interop_buffer": [[182, "index-2"]], "dnnl_ocl_interop_memory_kind_t": [[182, "index-0"]], "dnnl_ocl_interop_usm": [[182, "index-1"]], "batch_normalization": [[183, "index-10"]], "deconvolution": [[183, "index-7"], [256, "index-0"]], "inner_product": [[183, "index-11"]], "layer_normalization": [[183, "index-20"]], "lrn": [[183, "index-9"], [263, "index-0"]], "dnnl_batch_normalization": [[184, "index-10"]], "dnnl_binary": [[184, "index-14"]], "dnnl_concat": [[184, "index-4"]], "dnnl_convolution": [[184, "index-6"]], "dnnl_deconvolution": [[184, "index-7"]], "dnnl_eltwise": [[184, "index-8"]], "dnnl_gemm": [[184, "index-13"]], "dnnl_inner_product": [[184, "index-11"]], "dnnl_layer_normalization": [[184, "index-21"]], "dnnl_lrn": [[184, "index-9"]], "dnnl_matmul": [[184, "index-15"]], "dnnl_pooling": [[184, "index-17"]], "dnnl_prelu": [[184, "index-19"]], "dnnl_primitive_kind_max": [[184, "index-22"]], "dnnl_primitive_kind_t": [[184, "index-0"]], "dnnl_reduction": [[184, "index-18"]], "dnnl_reorder": [[184, "index-2"]], "dnnl_resampling": [[184, "index-16"]], "dnnl_rnn": [[184, "index-12"]], "dnnl_shuffle": [[184, "index-3"]], "dnnl_softmax": [[184, "index-20"]], "dnnl_sum": [[184, "index-5"]], "dnnl_undefined_primitive": [[184, "index-1"]], "profiling_data_kind": [[185, "index-0"]], "time": [[185, "index-2"]], "dnnl_profiling_data_kind_t": [[186, "index-0"]], "dnnl_profiling_data_kind_time": [[186, "index-2"]], "dnnl_profiling_data_kind_undef": [[186, "index-1"]], "backward": [[187, "index-5"]], "backward_bias": [[187, "index-8"]], "backward_data": [[187, "index-6"]], "backward_weights": [[187, "index-7"]], "forward": [[187, "index-4"]], "forward_inference": [[187, "index-3"]], "forward_training": [[187, "index-2"]], "prop_kind": [[187, "index-0"], [189, "index-12"]], "dnnl_backward": [[188, "index-5"]], "dnnl_backward_bias": [[188, "index-8"]], "dnnl_backward_data": [[188, "index-6"]], "dnnl_backward_weights": [[188, "index-7"]], "dnnl_forward": [[188, "index-4"]], "dnnl_forward_inference": [[188, "index-3"]], "dnnl_forward_training": [[188, "index-2"]], "dnnl_prop_kind_t": [[188, "index-0"]], "dnnl_prop_kind_undef": [[188, "index-1"]], "activation_kind": [[189, "index-31"]], "alg_kind": [[189, "index-21"]], "alpha_f32": [[189, "index-22"]], "axis_s32": [[189, "index-24"]], "beta_f32": [[189, "index-23"]], "cache_blob_id": [[189, "index-14"]], "cache_blob_id_size_s64": [[189, "index-13"]], "cell_kind": [[189, "index-29"]], "diff_dst_md": [[189, "index-39"]], "diff_src_md": [[189, "index-35"]], "diff_weights_md": [[189, "index-37"]], "direction": [[189, "index-30"]], "dst_md": [[189, "index-38"]], "engine": [[189, "index-2"], [258, "index-0"], [290, "index-0"], [408, "index-1"], [408, "index-2"]], "epsilon_f32": [[189, "index-19"]], "exec_arg_md": [[189, "index-42"]], "factors": [[189, "index-28"]], "flags": [[189, "index-20"], [200, "index-0"]], "group_size_s64": [[189, "index-33"]], "impl_info_str": [[189, "index-11"], [467, "index-2"]], "inner_blks": [[189, "index-51"]], "inner_idxs": [[189, "index-52"]], "inner_nblks_s32": [[189, "index-50"]], "k_f32": [[189, "index-26"]], "local_size_s64": [[189, "index-25"]], "memory_consumption_s64": [[189, "index-7"]], "ndims_s32": [[189, "index-43"]], "nnz_s64": [[189, "index-54"]], "num_handles_s32": [[189, "index-55"]], "num_of_inputs_s32": [[189, "index-4"]], "num_of_outputs_s32": [[189, "index-5"]], "p_f32": [[189, "index-27"]], "padded_dims": [[189, "index-47"]], "padded_offsets": [[189, "index-48"]], "padding_l": [[189, "index-17"]], "padding_r": [[189, "index-18"]], "primitive_kind": [[189, "index-3"]], "query": [[189, "index-0"]], "reorder_dst_engine": [[189, "index-10"]], "reorder_src_engine": [[189, "index-9"]], "scratchpad_engine": [[189, "index-8"], [467, "index-39"]], "scratchpad_md": [[189, "index-41"]], "src_md": [[189, "index-34"]], "submemory_offset_s64": [[189, "index-46"]], "time_estimate_f64": [[189, "index-6"]], "weights_md": [[189, "index-36"]], "workspace_md": [[189, "index-40"]], "dnnl_query_activation_kind": [[190, "index-31"]], "dnnl_query_alg_kind": [[190, "index-21"]], "dnnl_query_alpha_f32": [[190, "index-22"]], "dnnl_query_axis_s32": [[190, "index-24"]], "dnnl_query_beta_f32": [[190, "index-23"]], "dnnl_query_cache_blob_id": [[190, "index-14"]], "dnnl_query_cache_blob_id_size_s64": [[190, "index-13"]], "dnnl_query_cell_kind": [[190, "index-29"]], "dnnl_query_data_type": [[190, "index-46"]], "dnnl_query_diff_dst_md": [[190, "index-40"]], "dnnl_query_diff_src_md": [[190, "index-36"]], "dnnl_query_diff_weights_md": [[190, "index-38"]], "dnnl_query_dilations": [[190, "index-16"]], "dnnl_query_dims": [[190, "index-45"]], "dnnl_query_direction": [[190, "index-30"]], "dnnl_query_dst_md": [[190, "index-39"]], "dnnl_query_engine": [[190, "index-2"]], "dnnl_query_epsilon_f32": [[190, "index-19"]], "dnnl_query_exec_arg_md": [[190, "index-43"]], "dnnl_query_factors": [[190, "index-28"]], "dnnl_query_flags": [[190, "index-20"]], "dnnl_query_format_kind": [[190, "index-50"]], "dnnl_query_group_size_s64": [[190, "index-33"]], "dnnl_query_impl_info_str": [[190, "index-9"]], "dnnl_query_inner_blks": [[190, "index-52"]], "dnnl_query_inner_idxs": [[190, "index-53"]], "dnnl_query_inner_nblks_s32": [[190, "index-51"]], "dnnl_query_k_f32": [[190, "index-26"]], "dnnl_query_kernel": [[190, "index-32"]], "dnnl_query_local_size_s64": [[190, "index-25"]], "dnnl_query_max": [[190, "index-57"]], "dnnl_query_memory_consumption_s64": [[190, "index-7"]], "dnnl_query_ndims_s32": [[190, "index-44"]], "dnnl_query_nnz_s64": [[190, "index-55"]], "dnnl_query_num_handles_s32": [[190, "index-56"]], "dnnl_query_num_of_inputs_s32": [[190, "index-4"]], "dnnl_query_num_of_outputs_s32": [[190, "index-5"]], "dnnl_query_p_f32": [[190, "index-27"]], "dnnl_query_padded_dims": [[190, "index-48"]], "dnnl_query_padded_offsets": [[190, "index-49"]], "dnnl_query_padding_l": [[190, "index-17"]], "dnnl_query_padding_r": [[190, "index-18"]], "dnnl_query_primitive_kind": [[190, "index-3"]], "dnnl_query_prop_kind": [[190, "index-12"]], "dnnl_query_reorder_dst_engine": [[190, "index-11"]], "dnnl_query_reorder_src_engine": [[190, "index-10"]], "dnnl_query_scratchpad_engine": [[190, "index-8"]], "dnnl_query_scratchpad_md": [[190, "index-42"]], "dnnl_query_some_md": [[190, "index-34"]], "dnnl_query_sparse_encoding": [[190, "index-54"]], "dnnl_query_src_md": [[190, "index-35"]], "dnnl_query_strides": [[190, "index-15"]], "dnnl_query_submemory_offset_s64": [[190, "index-47"]], "dnnl_query_t": [[190, "index-0"]], "dnnl_query_time_estimate_f64": [[190, "index-6"]], "dnnl_query_undef": [[190, "index-1"]], "dnnl_query_weights_md": [[190, "index-37"]], "dnnl_query_workspace_md": [[190, "index-41"]], "bidirectional_concat": [[191, "index-4"]], "bidirectional_sum": [[191, "index-5"]], "rnn_direction": [[191, "index-0"]], "unidirectional_left2right": [[191, "index-2"]], "unidirectional_right2left": [[191, "index-3"]], "dnnl_bidirectional_concat": [[192, "index-4"]], "dnnl_bidirectional_sum": [[192, "index-5"]], "dnnl_rnn_direction_t": [[192, "index-0"]], "dnnl_rnn_direction_undef": [[192, "index-1"]], "dnnl_unidirectional_left2right": [[192, "index-2"]], "dnnl_unidirectional_right2left": [[192, "index-3"]], "diff_weights_overwrite": [[193, "index-2"]], "rnn_flags": [[193, "index-0"]], "dnnl_rnn_flags_diff_weights_overwrite": [[194, "index-2"]], "dnnl_rnn_flags_t": [[194, "index-0"]], "dnnl_rnn_flags_undef": [[194, "index-1"]], "library": [[195, "index-1"]], "scratchpad_mode": [[195, "index-0"]], "user": [[195, "index-2"]], "dnnl_scratchpad_mode_library": [[196, "index-1"]], "dnnl_scratchpad_mode_t": [[196, "index-0"]], "dnnl_scratchpad_mode_user": [[196, "index-2"]], "dnnl_csr": [[197, "index-2"]], "dnnl_sparse_encoding_t": [[197, "index-0"]], "dnnl_sparse_encoding_undef": [[197, "index-1"]], "dnnl_invalid_arguments": [[199, "index-3"]], "dnnl_invalid_data_type": [[199, "index-11"]], "dnnl_invalid_graph": [[199, "index-8"]], "dnnl_invalid_graph_op": [[199, "index-9"]], "dnnl_invalid_shape": [[199, "index-10"]], "dnnl_last_impl_reached": [[199, "index-5"]], "dnnl_not_required": [[199, "index-7"]], "dnnl_out_of_memory": [[199, "index-2"]], "dnnl_runtime_error": [[199, "index-6"]], "dnnl_status_t": [[199, "index-0"]], "dnnl_success": [[199, "index-1"]], "dnnl_unimplemented": [[199, "index-4"]], "default_flags": [[200, "index-3"]], "in_order": [[200, "index-1"]], "out_of_order": [[200, "index-2"]], "dnnl_stream_default_flags": [[201, "index-2"]], "dnnl_stream_flags_t": [[201, "index-0"]], "dnnl_stream_out_of_order": [[201, "index-1"]], "dnnl_sycl_interop_buffer": [[203, "index-2"]], "dnnl_sycl_interop_memory_kind_t": [[203, "index-0"]], "dnnl_sycl_interop_usm": [[203, "index-1"]], "augru.cpp": [[204, "index-0"]], "example": [[204, "index-0"], [205, "index-0"], [206, "index-0"], [207, "index-0"], [208, "index-0"], [209, "index-0"], [210, "index-0"], [211, "index-0"], [212, "index-0"], [213, "index-0"], [214, "index-0"], [215, "index-0"], [216, "index-0"], [217, "index-0"], [218, "index-0"], [219, "index-0"], [220, "index-0"], [221, "index-0"], [222, "index-0"], [223, "index-0"], [224, "index-0"], [225, "index-0"], [226, "index-0"], [227, "index-0"], [228, "index-0"], [229, "index-0"], [230, "index-0"], [231, "index-0"], [232, "index-0"], [233, "index-0"], [234, "index-0"], [235, "index-0"], [236, "index-0"], [237, "index-0"], [238, "index-0"], [239, "index-0"], [240, "index-0"], [241, "index-0"], [242, "index-0"]], "batch_normalization.cpp": [[205, "index-0"]], "binary.cpp": [[206, "index-0"]], "bnorm_u8_via_binary_postops.cpp": [[207, "index-0"]], "cnn_inference_f32.c": [[208, "index-0"]], "cnn_inference_f32.cpp": [[209, "index-0"]], "cnn_inference_int8.cpp": [[210, "index-0"]], "cnn_training_bf16.cpp": [[211, "index-0"]], "cnn_training_f32.cpp": [[212, "index-0"]], "concat.cpp": [[213, "index-0"]], "convolution.cpp": [[214, "index-0"]], "cpu_cnn_training_f32.c": [[215, "index-0"]], "cpu_matmul_quantization.cpp": [[216, "index-0"]], "cpu_rnn_inference_f32.cpp": [[217, "index-0"]], "cpu_rnn_inference_int8.cpp": [[218, "index-0"]], "cpu_sgemm_and_matmul.cpp": [[219, "index-0"]], "cross_engine_reorder.c": [[220, "index-0"]], "cross_engine_reorder.cpp": [[221, "index-0"]], "eltwise.cpp": [[222, "index-0"]], "getting_started.cpp": [[223, "index-0"]], "gpu_opencl_interop.cpp": [[224, "index-0"]], "inference_int8_matmul.cpp": [[225, "index-0"]], "inner_product.cpp": [[226, "index-0"]], "layer_normalization.cpp": [[227, "index-0"]], "lrn.cpp": [[228, "index-0"]], "lstm.cpp": [[229, "index-0"]], "matmul.cpp": [[230, "index-0"]], "memory_format_propagation.cpp": [[231, "index-0"]], "performance_profiling.cpp": [[232, "index-0"]], "pooling.cpp": [[233, "index-0"]], "prelu.cpp": [[234, "index-0"]], "reduction.cpp": [[235, "index-0"]], "reorder.cpp": [[236, "index-0"]], "resampling.cpp": [[237, "index-0"]], "rnn_training_f32.cpp": [[238, "index-0"]], "shuffle.cpp": [[239, "index-0"]], "softmax.cpp": [[240, "index-0"]], "sum.cpp": [[241, "index-0"]], "sycl_interop_buffer.cpp": [[242, "index-0"]], "global": [[243, "index-0"]], "namespace": [[243, "index-0"], [302, "index-0"], [303, "index-0"], [304, "index-0"], [305, "index-0"], [306, "index-0"], [307, "index-0"], [308, "index-0"], [309, "index-0"], [310, "index-0"]], "group": [[247, "index-0"], [248, "index-0"], [249, "index-0"], [250, "index-0"], [251, "index-0"], [252, "index-0"], [253, "index-0"], [254, "index-0"], [255, "index-0"], [256, "index-0"], [257, "index-0"], [258, "index-0"], [259, "index-0"], [260, "index-0"], [261, "index-0"], [262, "index-0"], [263, "index-0"], [264, "index-0"], [265, "index-0"], [266, "index-0"], [267, "index-0"], [268, "index-0"], [269, "index-0"], [270, "index-0"], [271, "index-0"], [272, "index-0"], [273, "index-0"], [274, "index-0"], [275, "index-0"], [276, "index-0"], [277, "index-0"], [278, "index-0"], [279, "index-0"], [280, "index-0"], [281, "index-0"], [282, "index-0"], [283, "index-0"], [284, "index-0"], [285, "index-0"], [286, "index-0"], [287, "index-0"], [288, "index-0"], [289, "index-0"], [290, "index-0"], [291, "index-0"], [292, "index-0"], [293, "index-0"], [294, "index-0"], [295, "index-0"], [296, "index-0"], [297, "index-0"], [298, "index-0"], [299, "index-0"]], "onednn api": [[247, "index-0"]], "attributes": [[248, "index-0"]], "const_dnnl_post_ops_t": [[248, "index-4"]], "const_dnnl_primitive_attr_t": [[248, "index-2"]], "convert_to_c": [[248, "index-5"], [248, "index-6"], [248, "index-7"], [258, "index-2"], [259, "index-1"], [271, "index-5"], [271, "index-6"], [271, "index-7"], [276, "index-1"], [276, "index-2"], [305, "index-1"], [306, "index-1"]], "dnnl_post_ops_append_binary": [[248, "index-30"]], "dnnl_post_ops_append_dw": [[248, "index-28"]], "dnnl_post_ops_append_eltwise": [[248, "index-26"]], "dnnl_post_ops_append_prelu": [[248, "index-32"]], "dnnl_post_ops_append_sum": [[248, "index-24"]], "dnnl_post_ops_clone": [[248, "index-20"]], "dnnl_post_ops_create": [[248, "index-19"]], "dnnl_post_ops_destroy": [[248, "index-21"]], "dnnl_post_ops_get_kind": [[248, "index-23"]], "dnnl_post_ops_get_params_binary": [[248, "index-31"]], "dnnl_post_ops_get_params_dw": [[248, "index-29"]], "dnnl_post_ops_get_params_eltwise": [[248, "index-27"]], "dnnl_post_ops_get_params_prelu": [[248, "index-33"]], "dnnl_post_ops_get_params_sum": [[248, "index-25"]], "dnnl_post_ops_len": [[248, "index-22"]], "dnnl_post_ops_t": [[248, "index-3"]], "dnnl_primitive_attr_clone": [[248, "index-9"]], "dnnl_primitive_attr_create": [[248, "index-8"]], "dnnl_primitive_attr_destroy": [[248, "index-10"]], "dnnl_primitive_attr_get_fpmath_mode": [[248, "index-11"]], "dnnl_primitive_attr_get_post_ops": [[248, "index-17"]], "dnnl_primitive_attr_get_rnn_data_qparams": [[248, "index-35"]], "dnnl_primitive_attr_get_rnn_weights_projection_qparams": [[248, "index-39"]], "dnnl_primitive_attr_get_rnn_weights_qparams": [[248, "index-37"]], "dnnl_primitive_attr_get_scratchpad_mode": [[248, "index-13"]], "dnnl_primitive_attr_set_fpmath_mode": [[248, "index-12"]], "dnnl_primitive_attr_set_post_ops": [[248, "index-18"]], "dnnl_primitive_attr_set_rnn_data_qparams": [[248, "index-34"]], "dnnl_primitive_attr_set_rnn_weights_projection_qparams": [[248, "index-38"]], "dnnl_primitive_attr_set_rnn_weights_qparams": [[248, "index-36"]], "dnnl_primitive_attr_set_scales_mask": [[248, "index-15"]], "dnnl_primitive_attr_set_scratchpad_mode": [[248, "index-14"]], "dnnl_primitive_attr_set_zero_points_mask": [[248, "index-16"]], "dnnl_primitive_attr_t": [[248, "index-1"]], "dnnl_batch_normalization_backward_primitive_desc_create": [[249, "index-2"]], "dnnl_batch_normalization_forward_primitive_desc_create": [[249, "index-1"]], "dnnl_binary_primitive_desc_create": [[250, "index-1"]], "blas functions": [[251, "index-0"]], "dnnl_gemm_s8s8s32": [[251, "index-6"]], "dnnl_gemm_u8s8s32": [[251, "index-5"]], "dnnl_sgemm": [[251, "index-4"]], "gemm_s8s8s32": [[251, "index-3"], [307, "index-5"]], "gemm_u8s8s32": [[251, "index-2"], [307, "index-4"]], "sgemm": [[251, "index-1"], [307, "index-3"]], "common api": [[252, "index-0"]], "dnnl_concat_primitive_desc_create": [[253, "index-1"]], "dnnl_convolution_backward_data_primitive_desc_create": [[254, "index-2"]], "dnnl_convolution_backward_weights_primitive_desc_create": [[254, "index-3"]], "dnnl_convolution_forward_primitive_desc_create": [[254, "index-1"]], "dnnl_max_ndims": [[255, "index-3"]], "define": [[255, "index-3"], [265, "index-32"], [265, "index-33"], [265, "index-34"], [265, "index-35"], [265, "index-36"], [265, "index-37"], [271, "index-21"], [271, "index-22"], [271, "index-23"], [271, "index-24"], [271, "index-25"], [271, "index-26"], [271, "index-27"], [271, "index-28"], [271, "index-29"], [271, "index-30"], [271, "index-31"], [271, "index-32"], [271, "index-33"], [271, "index-34"], [271, "index-35"], [271, "index-36"], [271, "index-37"], [271, "index-38"], [271, "index-39"], [271, "index-40"], [271, "index-41"], [271, "index-42"], [271, "index-43"], [271, "index-44"], [271, "index-45"], [271, "index-46"], [271, "index-47"], [271, "index-48"], [271, "index-49"], [271, "index-50"], [271, "index-51"], [271, "index-52"], [271, "index-53"], [271, "index-54"], [271, "index-55"], [271, "index-56"], [271, "index-57"], [271, "index-58"], [271, "index-59"], [271, "index-60"], [271, "index-61"], [271, "index-62"], [271, "index-63"], [271, "index-64"], [271, "index-65"], [271, "index-66"], [271, "index-67"], [271, "index-68"], [271, "index-69"], [271, "index-70"], [271, "index-71"], [271, "index-72"], [271, "index-73"], [271, "index-74"], [271, "index-75"], [271, "index-76"], [271, "index-77"], [271, "index-78"], [271, "index-79"], [271, "index-80"], [271, "index-81"], [271, "index-82"], [271, "index-83"], [271, "index-84"], [271, "index-85"], [271, "index-86"], [271, "index-87"], [271, "index-88"], [271, "index-89"], [271, "index-90"], [277, "index-22"], [277, "index-23"], [277, "index-24"], [277, "index-25"], [277, "index-26"], [277, "index-27"], [293, "index-6"], [293, "index-7"]], "dnnl_dim_t": [[255, "index-1"]], "dnnl_dims_t": [[255, "index-2"]], "dnnl_deconvolution_backward_data_primitive_desc_create": [[256, "index-2"]], "dnnl_deconvolution_backward_weights_primitive_desc_create": [[256, "index-3"]], "dnnl_deconvolution_forward_primitive_desc_create": [[256, "index-1"]], "dnnl_eltwise_backward_primitive_desc_create": [[257, "index-2"]], "dnnl_eltwise_forward_primitive_desc_create": [[257, "index-1"]], "dnnl_engine_create": [[258, "index-4"]], "dnnl_engine_destroy": [[258, "index-6"]], "dnnl_engine_get_count": [[258, "index-3"]], "dnnl_engine_get_kind": [[258, "index-5"]], "dnnl_engine_t": [[258, "index-1"]], "floating-point math mode": [[259, "index-0"]], "dnnl_get_default_fpmath_mode": [[259, "index-2"]], "dnnl_set_default_fpmath_mode": [[259, "index-3"]], "dnnl_inner_product_backward_data_primitive_desc_create": [[260, "index-2"]], "dnnl_inner_product_backward_weights_primitive_desc_create": [[260, "index-3"]], "dnnl_inner_product_forward_primitive_desc_create": [[260, "index-1"]], "runtime interoperability api": [[261, "index-0"], [292, "index-0"]], "dnnl_layer_normalization_backward_primitive_desc_create": [[262, "index-2"]], "dnnl_layer_normalization_forward_primitive_desc_create": [[262, "index-1"]], "dnnl_lrn_backward_primitive_desc_create": [[263, "index-2"]], "dnnl_lrn_forward_primitive_desc_create": [[263, "index-1"]], "dnnl_matmul_primitive_desc_create": [[264, "index-1"]], "dnnl_memory_allocate": [[265, "index-32"]], "dnnl_memory_none": [[265, "index-33"]], "dnnl_runtime_dim_val": [[265, "index-34"]], "dnnl_runtime_f32_val": [[265, "index-35"]], "dnnl_runtime_s32_val": [[265, "index-36"]], "dnnl_runtime_size_val": [[265, "index-37"]], "memory": [[265, "index-0"], [410, "index-2"], [448, "index-3"], [448, "index-4"], [448, "index-5"], [448, "index-6"]], "const_dnnl_memory_desc_t": [[265, "index-2"]], "const_dnnl_memory_t": [[265, "index-4"]], "dnnl_data_type_size": [[265, "index-18"]], "dnnl_memory_create": [[265, "index-19"]], "dnnl_memory_create_v2": [[265, "index-20"]], "dnnl_memory_desc_clone": [[265, "index-6"]], "dnnl_memory_desc_create_submemory": [[265, "index-10"]], "dnnl_memory_desc_create_with_csr_encoding": [[265, "index-9"]], "dnnl_memory_desc_create_with_strides": [[265, "index-7"]], "dnnl_memory_desc_create_with_tag": [[265, "index-8"]], "dnnl_memory_desc_destroy": [[265, "index-5"]], "dnnl_memory_desc_equal": [[265, "index-15"]], "dnnl_memory_desc_get_size": [[265, "index-16"]], "dnnl_memory_desc_get_size_v2": [[265, "index-17"]], "dnnl_memory_desc_permute_axes": [[265, "index-12"]], "dnnl_memory_desc_query": [[265, "index-13"]], "dnnl_memory_desc_query_v2": [[265, "index-14"]], "dnnl_memory_desc_reshape": [[265, "index-11"]], "dnnl_memory_desc_t": [[265, "index-1"]], "dnnl_memory_destroy": [[265, "index-31"]], "dnnl_memory_get_data_handle": [[265, "index-27"]], "dnnl_memory_get_data_handle_v2": [[265, "index-29"]], "dnnl_memory_get_engine": [[265, "index-22"]], "dnnl_memory_get_memory_desc": [[265, "index-21"]], "dnnl_memory_map_data": [[265, "index-23"]], "dnnl_memory_map_data_v2": [[265, "index-24"]], "dnnl_memory_set_data_handle": [[265, "index-28"]], "dnnl_memory_set_data_handle_v2": [[265, "index-30"]], "dnnl_memory_t": [[265, "index-3"]], "dnnl_memory_unmap_data": [[265, "index-25"]], "dnnl_memory_unmap_data_v2": [[265, "index-26"]], "opencl interoperability api": [[266, "index-0"]], "dnnl_ocl_interop_engine_create": [[266, "index-8"]], "dnnl_ocl_interop_engine_create_from_cache_blob": [[266, "index-7"]], "dnnl_ocl_interop_engine_get_cache_blob": [[266, "index-6"]], "dnnl_ocl_interop_engine_get_cache_blob_id": [[266, "index-5"]], "dnnl_ocl_interop_engine_get_context": [[266, "index-9"]], "dnnl_ocl_interop_get_device": [[266, "index-10"]], "dnnl_ocl_interop_memory_create": [[266, "index-1"]], "dnnl_ocl_interop_memory_get_mem_object": [[266, "index-3"]], "dnnl_ocl_interop_memory_get_memory_kind": [[266, "index-2"]], "dnnl_ocl_interop_memory_set_mem_object": [[266, "index-4"]], "dnnl_ocl_interop_primitive_execute": [[266, "index-13"]], "dnnl_ocl_interop_stream_create": [[266, "index-11"]], "dnnl_ocl_interop_stream_get_command_queue": [[266, "index-12"]], "dnnl_pooling_backward_primitive_desc_create": [[267, "index-2"]], "dnnl_pooling_forward_primitive_desc_create": [[267, "index-1"]], "dnnl_prelu_backward_primitive_desc_create": [[268, "index-2"]], "dnnl_prelu_forward_primitive_desc_create": [[268, "index-1"]], "dnnl_get_primitive_cache_capacity": [[269, "index-3"]], "dnnl_set_primitive_cache_capacity": [[269, "index-4"]], "get_primitive_cache_capacity": [[269, "index-1"]], "set_primitive_cache_capacity": [[269, "index-2"]], "primitives": [[270, "index-0"]], "common": [[271, "index-0"]], "dnnl_arg_attr_multiple_post_op": [[271, "index-21"]], "dnnl_arg_attr_multiple_post_op_base": [[271, "index-22"]], "dnnl_arg_attr_output_scales": [[271, "index-23"]], "dnnl_arg_attr_post_op_dw": [[271, "index-24"]], "dnnl_arg_attr_scales": [[271, "index-25"]], "dnnl_arg_attr_zero_points": [[271, "index-26"]], "dnnl_arg_augru_attention": [[271, "index-27"]], "dnnl_arg_bias": [[271, "index-28"]], "dnnl_arg_diff_augru_attention": [[271, "index-29"]], "dnnl_arg_diff_bias": [[271, "index-30"]], "dnnl_arg_diff_dst": [[271, "index-31"]], "dnnl_arg_diff_dst_0": [[271, "index-32"]], "dnnl_arg_diff_dst_1": [[271, "index-33"]], "dnnl_arg_diff_dst_2": [[271, "index-34"]], "dnnl_arg_diff_dst_iter": [[271, "index-35"]], "dnnl_arg_diff_dst_iter_c": [[271, "index-36"]], "dnnl_arg_diff_dst_layer": [[271, "index-37"]], "dnnl_arg_diff_scale": [[271, "index-38"]], "dnnl_arg_diff_shift": [[271, "index-39"]], "dnnl_arg_diff_src": [[271, "index-40"]], "dnnl_arg_diff_src_0": [[271, "index-41"]], "dnnl_arg_diff_src_1": [[271, "index-42"]], "dnnl_arg_diff_src_2": [[271, "index-43"]], "dnnl_arg_diff_src_3": [[271, "index-44"]], "dnnl_arg_diff_src_iter": [[271, "index-45"]], "dnnl_arg_diff_src_iter_c": [[271, "index-46"]], "dnnl_arg_diff_src_layer": [[271, "index-47"]], "dnnl_arg_diff_weights": [[271, "index-48"]], "dnnl_arg_diff_weights_0": [[271, "index-49"]], "dnnl_arg_diff_weights_1": [[271, "index-50"]], "dnnl_arg_diff_weights_2": [[271, "index-51"]], "dnnl_arg_diff_weights_3": [[271, "index-52"]], "dnnl_arg_diff_weights_iter": [[271, "index-53"]], "dnnl_arg_diff_weights_layer": [[271, "index-54"]], "dnnl_arg_diff_weights_peephole": [[271, "index-55"]], "dnnl_arg_diff_weights_projection": [[271, "index-56"]], "dnnl_arg_dst": [[271, "index-57"]], "dnnl_arg_dst_0": [[271, "index-58"]], "dnnl_arg_dst_1": [[271, "index-59"]], "dnnl_arg_dst_2": [[271, "index-60"]], "dnnl_arg_dst_iter": [[271, "index-61"]], "dnnl_arg_dst_iter_c": [[271, "index-62"]], "dnnl_arg_dst_layer": [[271, "index-63"]], "dnnl_arg_from": [[271, "index-64"]], "dnnl_arg_mean": [[271, "index-65"]], "dnnl_arg_multiple_dst": [[271, "index-66"]], "dnnl_arg_multiple_src": [[271, "index-67"]], "dnnl_arg_scale": [[271, "index-68"]], "dnnl_arg_scratchpad": [[271, "index-69"]], "dnnl_arg_shift": [[271, "index-70"]], "dnnl_arg_src": [[271, "index-71"]], "dnnl_arg_src_0": [[271, "index-72"]], "dnnl_arg_src_1": [[271, "index-73"]], "dnnl_arg_src_2": [[271, "index-74"]], "dnnl_arg_src_3": [[271, "index-75"]], "dnnl_arg_src_iter": [[271, "index-76"]], "dnnl_arg_src_iter_c": [[271, "index-77"]], "dnnl_arg_src_layer": [[271, "index-78"]], "dnnl_arg_to": [[271, "index-79"]], "dnnl_arg_variance": [[271, "index-80"]], "dnnl_arg_weights": [[271, "index-81"]], "dnnl_arg_weights_0": [[271, "index-82"]], "dnnl_arg_weights_1": [[271, "index-83"]], "dnnl_arg_weights_2": [[271, "index-84"]], "dnnl_arg_weights_3": [[271, "index-85"]], "dnnl_arg_weights_iter": [[271, "index-86"]], "dnnl_arg_weights_layer": [[271, "index-87"]], "dnnl_arg_weights_peephole": [[271, "index-88"]], "dnnl_arg_weights_projection": [[271, "index-89"]], "dnnl_arg_workspace": [[271, "index-90"]], "const_dnnl_primitive_desc_t": [[271, "index-2"]], "const_dnnl_primitive_t": [[271, "index-4"]], "dnnl_primitive_create": [[271, "index-15"]], "dnnl_primitive_create_from_cache_blob": [[271, "index-16"]], "dnnl_primitive_desc_clone": [[271, "index-9"]], "dnnl_primitive_desc_destroy": [[271, "index-11"]], "dnnl_primitive_desc_get_attr": [[271, "index-10"]], "dnnl_primitive_desc_next_impl": [[271, "index-8"]], "dnnl_primitive_desc_query": [[271, "index-12"]], "dnnl_primitive_desc_query_md": [[271, "index-13"]], "dnnl_primitive_desc_query_s32": [[271, "index-14"]], "dnnl_primitive_desc_t": [[271, "index-1"]], "dnnl_primitive_destroy": [[271, "index-20"]], "dnnl_primitive_execute": [[271, "index-17"]], "dnnl_primitive_get_cache_blob": [[271, "index-19"]], "dnnl_primitive_get_primitive_desc": [[271, "index-18"]], "dnnl_primitive_t": [[271, "index-3"]], "profiling": [[272, "index-0"]], "dnnl_query_profiling_data": [[272, "index-4"]], "dnnl_reset_profiling": [[272, "index-3"]], "get_profiling_data": [[272, "index-2"]], "reset_profiling": [[272, "index-1"]], "dnnl_reduction_primitive_desc_create": [[273, "index-1"]], "dnnl_reorder_primitive_desc_create": [[274, "index-1"]], "dnnl_resampling_backward_primitive_desc_create": [[275, "index-2"]], "dnnl_resampling_forward_primitive_desc_create": [[275, "index-1"]], "dnnl_augru_backward_primitive_desc_create": [[276, "index-12"]], "dnnl_augru_forward_primitive_desc_create": [[276, "index-11"]], "dnnl_gru_backward_primitive_desc_create": [[276, "index-8"]], "dnnl_gru_forward_primitive_desc_create": [[276, "index-7"]], "dnnl_lbr_augru_backward_primitive_desc_create": [[276, "index-14"]], "dnnl_lbr_augru_forward_primitive_desc_create": [[276, "index-13"]], "dnnl_lbr_gru_backward_primitive_desc_create": [[276, "index-10"]], "dnnl_lbr_gru_forward_primitive_desc_create": [[276, "index-9"]], "dnnl_lstm_backward_primitive_desc_create": [[276, "index-6"]], "dnnl_lstm_forward_primitive_desc_create": [[276, "index-5"]], "dnnl_vanilla_rnn_backward_primitive_desc_create": [[276, "index-4"]], "dnnl_vanilla_rnn_forward_primitive_desc_create": [[276, "index-3"]], "dnnl_jit_profile_linux_jitdump": [[277, "index-22"]], "dnnl_jit_profile_linux_jitdump_use_tsc": [[277, "index-23"]], "dnnl_jit_profile_linux_perf": [[277, "index-24"]], "dnnl_jit_profile_linux_perfmap": [[277, "index-25"]], "dnnl_jit_profile_none": [[277, "index-26"]], "dnnl_jit_profile_vtune": [[277, "index-27"]], "service": [[277, "index-0"]], "dnnl_get_cpu_isa_hints": [[277, "index-19"]], "dnnl_get_effective_cpu_isa": [[277, "index-17"]], "dnnl_set_cpu_isa_hints": [[277, "index-18"]], "dnnl_set_jit_dump": [[277, "index-13"]], "dnnl_set_jit_profiling_flags": [[277, "index-14"]], "dnnl_set_jit_profiling_jitdumpdir": [[277, "index-15"]], "dnnl_set_max_cpu_isa": [[277, "index-16"]], "dnnl_set_verbose": [[277, "index-20"]], "dnnl_version": [[277, "index-21"]], "get_cpu_isa_hints": [[277, "index-12"]], "get_default_fpmath_mode": [[277, "index-4"]], "get_effective_cpu_isa": [[277, "index-10"]], "set_cpu_isa_hints": [[277, "index-11"]], "set_default_fpmath_mode": [[277, "index-5"]], "set_jit_dump": [[277, "index-6"]], "set_jit_profiling_flags": [[277, "index-7"]], "set_jit_profiling_jitdumpdir": [[277, "index-8"]], "set_max_cpu_isa": [[277, "index-9"]], "set_verbose": [[277, "index-2"]], "version": [[277, "index-3"]], "version_t": [[277, "index-1"]], "dnnl_shuffle_backward_primitive_desc_create": [[278, "index-2"]], "dnnl_shuffle_forward_primitive_desc_create": [[278, "index-1"]], "dnnl_softmax_backward_primitive_desc_create": [[279, "index-2"]], "dnnl_softmax_forward_primitive_desc_create": [[279, "index-1"]], "stream": [[280, "index-0"], [486, "index-1"], [486, "index-2"]], "const_dnnl_stream_t": [[280, "index-2"]], "dnnl_stream_create": [[280, "index-3"]], "dnnl_stream_destroy": [[280, "index-6"]], "dnnl_stream_get_engine": [[280, "index-4"]], "dnnl_stream_t": [[280, "index-1"]], "dnnl_stream_wait": [[280, "index-5"]], "dnnl_sum_primitive_desc_create": [[281, "index-1"]], "sycl interoperability api": [[282, "index-0"], [297, "index-0"]], "dnnl_sycl_interop_engine_create": [[282, "index-1"]], "dnnl_sycl_interop_engine_get_context": [[282, "index-2"]], "dnnl_sycl_interop_engine_get_device": [[282, "index-3"]], "dnnl_sycl_interop_memory_create": [[282, "index-4"]], "dnnl_sycl_interop_memory_get_memory_kind": [[282, "index-5"]], "dnnl_sycl_interop_memory_set_buffer": [[282, "index-6"]], "dnnl_sycl_interop_primitive_execute": [[282, "index-9"]], "dnnl_sycl_interop_stream_create": [[282, "index-7"]], "dnnl_sycl_interop_stream_get_queue": [[282, "index-8"]], "threadpool interoperability api": [[283, "index-0"]], "dnnl_threadpool_interop_gemm_s8s8s32": [[283, "index-7"]], "dnnl_threadpool_interop_gemm_u8s8s32": [[283, "index-6"]], "dnnl_threadpool_interop_get_max_concurrency": [[283, "index-4"]], "dnnl_threadpool_interop_set_max_concurrency": [[283, "index-3"]], "dnnl_threadpool_interop_sgemm": [[283, "index-5"]], "dnnl_threadpool_interop_stream_create": [[283, "index-1"]], "dnnl_threadpool_interop_stream_get_threadpool": [[283, "index-2"]], "utilities": [[284, "index-0"], [299, "index-0"]], "graph api": [[285, "index-0"]], "const_dnnl_graph_allocator_t": [[286, "index-4"]], "dnnl_graph_allocator_create": [[286, "index-5"]], "dnnl_graph_allocator_destroy": [[286, "index-6"]], "dnnl_graph_allocator_t": [[286, "index-3"]], "dnnl_graph_host_allocate_f": [[286, "index-1"]], "dnnl_graph_host_deallocate_f": [[286, "index-2"]], "compiled partition": [[287, "index-0"]], "const_dnnl_graph_compiled_partition_t": [[287, "index-2"]], "dnnl_graph_compiled_partition_create": [[287, "index-3"]], "dnnl_graph_compiled_partition_destroy": [[287, "index-5"]], "dnnl_graph_compiled_partition_execute": [[287, "index-4"]], "dnnl_graph_compiled_partition_get_inplace_ports": [[287, "index-7"]], "dnnl_graph_compiled_partition_query_logical_tensor": [[287, "index-6"]], "dnnl_graph_compiled_partition_t": [[287, "index-1"]], "compiled partition cache": [[288, "index-0"]], "dnnl_graph_get_compiled_partition_cache_capacity": [[288, "index-3"]], "dnnl_graph_set_compiled_partition_cache_capacity": [[288, "index-4"]], "get_compiled_partition_cache_capacity": [[288, "index-1"]], "set_compiled_partition_cache_capacity": [[288, "index-2"]], "constant tensor cache": [[289, "index-0"]], "dnnl_graph_get_constant_tensor_cache": [[289, "index-4"]], "dnnl_graph_set_constant_tensor_cache": [[289, "index-3"]], "get_constant_tensor_cache": [[289, "index-2"]], "set_constant_tensor_cache": [[289, "index-1"]], "dnnl_graph_make_engine_with_allocator": [[290, "index-2"]], "make_engine_with_allocator": [[290, "index-1"]], "const_dnnl_graph_graph_t": [[291, "index-2"]], "dnnl_graph_add_op": [[291, "index-6"]], "dnnl_graph_graph_create": [[291, "index-3"]], "dnnl_graph_graph_create_with_fpmath_mode": [[291, "index-4"]], "dnnl_graph_graph_destroy": [[291, "index-5"]], "dnnl_graph_graph_filter": [[291, "index-9"]], "dnnl_graph_graph_finalize": [[291, "index-7"]], "dnnl_graph_graph_get_partition_num": [[291, "index-10"]], "dnnl_graph_graph_get_partitions": [[291, "index-11"]], "dnnl_graph_graph_is_finalized": [[291, "index-8"]], "dnnl_graph_graph_t": [[291, "index-1"]], "dnnl_graph_unknown_dim": [[293, "index-6"]], "dnnl_graph_unknown_ndims": [[293, "index-7"]], "logical tensor": [[293, "index-0"]], "dnnl_graph_logical_tensor_get_mem_size": [[293, "index-4"]], "dnnl_graph_logical_tensor_init": [[293, "index-1"]], "dnnl_graph_logical_tensor_init_with_dims": [[293, "index-2"]], "dnnl_graph_logical_tensor_init_with_strides": [[293, "index-3"]], "dnnl_graph_logical_tensor_is_equal": [[293, "index-5"]], "const_dnnl_graph_op_t": [[294, "index-2"]], "dnnl_graph_op_add_input": [[294, "index-5"]], "dnnl_graph_op_add_output": [[294, "index-6"]], "dnnl_graph_op_create": [[294, "index-3"]], "dnnl_graph_op_destroy": [[294, "index-4"]], "dnnl_graph_op_get_id": [[294, "index-11"]], "dnnl_graph_op_get_kind": [[294, "index-12"]], "dnnl_graph_op_set_attr_bool": [[294, "index-8"]], "dnnl_graph_op_set_attr_f32": [[294, "index-7"]], "dnnl_graph_op_set_attr_s64": [[294, "index-9"]], "dnnl_graph_op_set_attr_str": [[294, "index-10"]], "dnnl_graph_op_t": [[294, "index-1"]], "const_dnnl_graph_partition_t": [[295, "index-2"]], "dnnl_graph_partition_compile": [[295, "index-8"]], "dnnl_graph_partition_create_with_op": [[295, "index-3"]], "dnnl_graph_partition_destroy": [[295, "index-4"]], "dnnl_graph_partition_get_engine_kind": [[295, "index-14"]], "dnnl_graph_partition_get_id": [[295, "index-7"]], "dnnl_graph_partition_get_input_ports": [[295, "index-10"]], "dnnl_graph_partition_get_input_ports_num": [[295, "index-9"]], "dnnl_graph_partition_get_op_num": [[295, "index-5"]], "dnnl_graph_partition_get_ops": [[295, "index-6"]], "dnnl_graph_partition_get_output_ports": [[295, "index-12"]], "dnnl_graph_partition_get_output_ports_num": [[295, "index-11"]], "dnnl_graph_partition_is_supported": [[295, "index-13"]], "dnnl_graph_partition_t": [[295, "index-1"]], "dnnl_graph_sycl_allocate_f": [[297, "index-1"]], "dnnl_graph_sycl_deallocate_f": [[297, "index-2"]], "dnnl_graph_sycl_interop_allocator_create": [[297, "index-3"]], "dnnl_graph_sycl_interop_compiled_partition_execute": [[297, "index-5"]], "dnnl_graph_sycl_interop_make_engine_with_allocator": [[297, "index-4"]], "const_dnnl_graph_tensor_t": [[298, "index-2"]], "dnnl_graph_tensor_create": [[298, "index-3"]], "dnnl_graph_tensor_destroy": [[298, "index-4"]], "dnnl_graph_tensor_get_data_handle": [[298, "index-5"]], "dnnl_graph_tensor_get_engine": [[298, "index-7"]], "dnnl_graph_tensor_set_data_handle": [[298, "index-6"]], "dnnl_graph_tensor_t": [[298, "index-1"]], "dnnl": [[302, "index-0"]], "dnnl::graph": [[303, "index-0"]], "dnnl::graph::sycl_interop": [[304, "index-0"]], "make_allocator": [[304, "index-1"]], "dnnl::ocl_interop": [[305, "index-0"]], "get_command_queue": [[305, "index-9"]], "get_context": [[305, "index-6"], [306, "index-3"]], "get_device": [[305, "index-7"], [306, "index-4"]], "get_engine_cache_blob": [[305, "index-3"]], "get_engine_cache_blob_id": [[305, "index-2"]], "get_mem_object": [[305, "index-10"]], "get_memory_kind": [[305, "index-12"], [306, "index-9"]], "make_engine": [[305, "index-4"], [305, "index-5"], [306, "index-2"]], "make_memory": [[305, "index-13"], [305, "index-14"], [306, "index-10"], [306, "index-11"]], "make_stream": [[305, "index-8"], [306, "index-5"], [307, "index-1"]], "set_mem_object": [[305, "index-11"]], "dnnl::sycl_interop": [[306, "index-0"]], "get_buffer": [[306, "index-7"]], "get_queue": [[306, "index-6"]], "set_buffer": [[306, "index-8"]], "dnnl::threadpool_interop": [[307, "index-0"]], "get_threadpool": [[307, "index-2"]], "oneapi": [[308, "index-0"]], "std": [[309, "index-0"]], "sycl": [[310, "index-0"]], "augru rnn primitive example": [[312, "index-0"]], "batch normalization primitive example": [[314, "index-0"]], "binary primitive example": [[316, "index-0"]], "bnorm u8 by binary post-ops example": [[318, "index-0"]], "cnn f32 inference example": [[320, "index-0"], [321, "index-0"]], "cnn int8 inference example": [[322, "index-0"]], "cnn bf16 training example": [[323, "index-0"]], "cnn f32 training example": [[324, "index-0"], [329, "index-0"]], "concat primitive example": [[325, "index-0"]], "convolution primitive example": [[327, "index-0"]], "matmul tutorial: quantization": [[330, "index-0"]], "rnn f32 inference example": [[332, "index-0"]], "rnn int8 inference example": [[333, "index-0"]], "matmul tutorial: comparison with sgemm": [[334, "index-0"]], "reorder between cpu and gpu engines": [[336, "index-0"], [337, "index-0"]], "element-wise primitive example": [[338, "index-0"]], "getting started": [[340, "index-0"]], "getting started on gpu with opencl extensions api": [[341, "index-0"]], "matmul tutorial: int8 inference": [[342, "index-0"]], "inner product primitive example": [[344, "index-0"]], "layer normalization primitive example": [[346, "index-0"]], "legal information": [[348, "index-0"]], "local response normalization primitive example": [[349, "index-0"]], "lstm rnn primitive example": [[351, "index-0"]], "matmul primitive example": [[353, "index-0"]], "memory format propagation": [[355, "index-0"]], "performance profiling example": [[356, "index-0"]], "pooling primitive example": [[357, "index-0"]], "primitive example": [[359, "index-0"]], "reduction primitive example": [[361, "index-0"]], "reorder primitive example": [[363, "index-0"]], "resampling primitive example": [[365, "index-0"]], "rnn f32 training example": [[367, "index-0"]], "shuffle primitive example": [[368, "index-0"]], "softmax primitive example": [[370, "index-0"]], "sum primitive example": [[372, "index-0"]], "getting started on both cpu and gpu with sycl extensions api": [[374, "index-0"]], "todo list": [[375, "index-0"]], "args_t": [[378, "index-0"]], "struct": [[378, "index-0"], [379, "index-0"], [380, "index-0"], [381, "index-0"], [382, "index-0"], [383, "index-0"], [384, "index-0"], [385, "index-0"], [386, "index-0"], [387, "index-0"], [388, "index-0"], [389, "index-0"], [390, "index-0"], [391, "index-0"], [392, "index-0"], [393, "index-0"], [394, "index-0"], [395, "index-0"], [396, "index-0"], [397, "index-0"], [398, "index-0"], [399, "index-0"], [400, "index-0"], [401, "index-0"], [402, "index-0"], [403, "index-0"], [404, "index-0"], [405, "index-0"], [406, "index-0"], [407, "index-0"], [408, "index-0"], [409, "index-0"], [410, "index-0"], [411, "index-0"], [412, "index-0"], [413, "index-0"], [414, "index-0"], [415, "index-0"], [416, "index-0"], [417, "index-0"], [418, "index-0"], [419, "index-0"], [420, "index-0"], [421, "index-0"], [422, "index-0"], [423, "index-0"], [424, "index-0"], [425, "index-0"], [426, "index-0"], [427, "index-0"], [428, "index-0"], [429, "index-0"], [430, "index-0"], [431, "index-0"], [432, "index-0"], [433, "index-0"], [434, "index-0"], [435, "index-0"], [436, "index-0"], [437, "index-0"], [438, "index-0"], [439, "index-0"], [440, "index-0"], [441, "index-0"], [442, "index-0"], [443, "index-0"], [444, "index-0"], [445, "index-0"], [446, "index-0"], [447, "index-0"], [448, "index-0"], [449, "index-0"], [450, "index-0"], [451, "index-0"], [452, "index-0"], [453, "index-0"], [454, "index-0"], [455, "index-0"], [456, "index-0"], [457, "index-0"], [458, "index-0"], [459, "index-0"], [460, "index-0"], [461, "index-0"], [462, "index-0"], [463, "index-0"], [464, "index-0"], [465, "index-0"], [466, "index-0"], [467, "index-0"], [468, "index-0"], [469, "index-0"], [470, "index-0"], [471, "index-0"], [472, "index-0"], [473, "index-0"], [474, "index-0"], [475, "index-0"], [476, "index-0"], [477, "index-0"], [478, "index-0"], [479, "index-0"], [480, "index-0"], [481, "index-0"], [482, "index-0"], [483, "index-0"], [484, "index-0"], [485, "index-0"], [486, "index-0"], [487, "index-0"], [488, "index-0"], [489, "index-0"], [490, "index-0"], [491, "index-0"], [492, "index-0"], [493, "index-0"], [494, "index-0"], [495, "index-0"], [496, "index-0"]], "augru_backward": [[379, "index-1"], [379, "index-2"], [379, "index-3"]], "dnnl::augru_backward": [[379, "index-0"]], "attention_desc": [[380, "index-6"], [382, "index-6"], [430, "index-6"], [432, "index-6"]], "bias_desc": [[380, "index-9"], [382, "index-9"], [396, "index-10"], [402, "index-10"], [414, "index-8"], [416, "index-8"], [424, "index-8"], [430, "index-9"], [432, "index-9"], [434, "index-8"], [436, "index-8"], [442, "index-13"], [444, "index-13"], [446, "index-7"], [476, "index-11"], [491, "index-9"], [493, "index-9"]], "diff_attention_desc": [[380, "index-15"], [430, "index-15"]], "diff_bias_desc": [[380, "index-18"], [394, "index-10"], [400, "index-10"], [414, "index-16"], [422, "index-8"], [430, "index-18"], [434, "index-16"], [442, "index-25"], [476, "index-23"], [491, "index-17"]], "diff_dst_iter_desc": [[380, "index-20"], [414, "index-18"], [430, "index-20"], [434, "index-18"], [442, "index-27"], [476, "index-25"], [491, "index-19"]], "diff_dst_layer_desc": [[380, "index-19"], [414, "index-17"], [430, "index-19"], [434, "index-17"], [442, "index-26"], [476, "index-24"], [491, "index-18"]], "diff_src_iter_desc": [[380, "index-14"], [414, "index-13"], [430, "index-14"], [434, "index-13"], [442, "index-19"], [476, "index-17"], [491, "index-14"]], "diff_src_layer_desc": [[380, "index-13"], [414, "index-12"], [430, "index-13"], [434, "index-12"], [442, "index-18"], [476, "index-15"], [491, "index-13"]], "diff_weights_iter_desc": [[380, "index-17"], [414, "index-15"], [430, "index-17"], [434, "index-15"], [442, "index-22"], [476, "index-20"], [491, "index-16"]], "diff_weights_layer_desc": [[380, "index-16"], [414, "index-14"], [430, "index-16"], [434, "index-14"], [442, "index-21"], [476, "index-19"], [491, "index-15"]], "dnnl::augru_backward::primitive_desc": [[380, "index-0"]], "dst_iter_desc": [[380, "index-11"], [382, "index-11"], [414, "index-10"], [416, "index-10"], [430, "index-11"], [432, "index-11"], [434, "index-10"], [436, "index-10"], [442, "index-15"], [444, "index-15"], [476, "index-13"], [491, "index-11"], [493, "index-11"]], "dst_layer_desc": [[380, "index-10"], [382, "index-10"], [414, "index-9"], [416, "index-9"], [430, "index-10"], [432, "index-10"], [434, "index-9"], [436, "index-9"], [442, "index-14"], [444, "index-14"], [476, "index-12"], [491, "index-10"], [493, "index-10"]], "get_cell_kind": [[380, "index-21"], [382, "index-13"], [414, "index-19"], [416, "index-12"], [430, "index-21"], [432, "index-13"], [434, "index-19"], [436, "index-12"], [442, "index-29"], [444, "index-18"], [467, "index-18"], [491, "index-20"], [493, "index-13"]], "get_direction": [[380, "index-23"], [382, "index-15"], [414, "index-21"], [416, "index-14"], [430, "index-23"], [432, "index-15"], [434, "index-21"], [436, "index-14"], [442, "index-31"], [444, "index-20"], [467, "index-19"], [491, "index-23"], [493, "index-16"]], "get_prop_kind": [[380, "index-22"], [382, "index-14"], [384, "index-13"], [386, "index-10"], [392, "index-9"], [394, "index-12"], [396, "index-12"], [398, "index-9"], [400, "index-12"], [402, "index-12"], [404, "index-10"], [406, "index-9"], [414, "index-20"], [416, "index-13"], [420, "index-7"], [422, "index-9"], [424, "index-9"], [426, "index-14"], [428, "index-11"], [430, "index-22"], [432, "index-14"], [434, "index-20"], [436, "index-13"], [438, "index-8"], [440, "index-8"], [442, "index-30"], [444, "index-19"], [452, "index-8"], [454, "index-8"], [458, "index-7"], [460, "index-6"], [467, "index-23"], [478, "index-6"], [480, "index-6"], [482, "index-8"], [484, "index-7"], [491, "index-21"], [493, "index-14"]], "primitive_desc": [[380, "index-1"], [380, "index-2"], [380, "index-3"], [382, "index-1"], [382, "index-2"], [382, "index-3"], [384, "index-1"], [384, "index-2"], [384, "index-3"], [386, "index-1"], [386, "index-2"], [386, "index-3"], [388, "index-1"], [388, "index-2"], [388, "index-3"], [390, "index-1"], [390, "index-2"], [390, "index-3"], [390, "index-4"], [392, "index-1"], [392, "index-2"], [392, "index-3"], [392, "index-4"], [394, "index-1"], [394, "index-2"], [394, "index-3"], [394, "index-4"], [394, "index-5"], [394, "index-6"], [396, "index-1"], [396, "index-2"], [396, "index-3"], [396, "index-4"], [396, "index-5"], [396, "index-6"], [398, "index-1"], [398, "index-2"], [398, "index-3"], [398, "index-4"], [400, "index-1"], [400, "index-2"], [400, "index-3"], [400, "index-4"], [400, "index-5"], [400, "index-6"], [402, "index-1"], [402, "index-2"], [402, "index-3"], [402, "index-4"], [402, "index-5"], [402, "index-6"], [404, "index-1"], [404, "index-2"], [404, "index-3"], [404, "index-4"], [404, "index-5"], [406, "index-1"], [406, "index-2"], [406, "index-3"], [406, "index-4"], [406, "index-5"], [414, "index-1"], [414, "index-2"], [414, "index-3"], [416, "index-1"], [416, "index-2"], [416, "index-3"], [420, "index-1"], [420, "index-2"], [420, "index-3"], [422, "index-1"], [422, "index-2"], [422, "index-3"], [422, "index-4"], [424, "index-1"], [424, "index-2"], [424, "index-3"], [424, "index-4"], [426, "index-1"], [426, "index-2"], [426, "index-3"], [426, "index-4"], [428, "index-1"], [428, "index-2"], [428, "index-3"], [428, "index-4"], [430, "index-1"], [430, "index-2"], [430, "index-3"], [432, "index-1"], [432, "index-2"], [432, "index-3"], [434, "index-1"], [434, "index-2"], [434, "index-3"], [436, "index-1"], [436, "index-2"], [436, "index-3"], [438, "index-1"], [438, "index-2"], [438, "index-3"], [440, "index-1"], [440, "index-2"], [440, "index-3"], [442, "index-1"], [442, "index-2"], [442, "index-3"], [442, "index-4"], [442, "index-5"], [444, "index-1"], [444, "index-2"], [444, "index-3"], [444, "index-4"], [444, "index-5"], [446, "index-1"], [446, "index-2"], [446, "index-3"], [446, "index-4"], [452, "index-1"], [452, "index-2"], [452, "index-3"], [454, "index-1"], [454, "index-2"], [454, "index-3"], [458, "index-1"], [458, "index-2"], [458, "index-3"], [460, "index-1"], [460, "index-2"], [460, "index-3"], [469, "index-1"], [469, "index-2"], [469, "index-3"], [471, "index-1"], [471, "index-2"], [471, "index-3"], [471, "index-4"], [473, "index-1"], [473, "index-2"], [473, "index-3"], [473, "index-4"], [475, "index-1"], [475, "index-2"], [475, "index-3"], [475, "index-4"], [475, "index-5"], [478, "index-1"], [478, "index-2"], [478, "index-3"], [480, "index-1"], [480, "index-2"], [480, "index-3"], [482, "index-1"], [482, "index-2"], [482, "index-3"], [484, "index-1"], [484, "index-2"], [484, "index-3"], [488, "index-1"], [488, "index-2"], [488, "index-3"], [488, "index-4"], [491, "index-1"], [491, "index-2"], [491, "index-3"], [491, "index-4"], [493, "index-1"], [493, "index-2"], [493, "index-3"], [493, "index-4"]], "src_iter_desc": [[380, "index-5"], [382, "index-5"], [414, "index-5"], [416, "index-5"], [430, "index-5"], [432, "index-5"], [434, "index-5"], [436, "index-5"], [442, "index-7"], [444, "index-7"], [476, "index-5"], [491, "index-6"], [493, "index-6"]], "src_layer_desc": [[380, "index-4"], [382, "index-4"], [414, "index-4"], [416, "index-4"], [430, "index-4"], [432, "index-4"], [434, "index-4"], [436, "index-4"], [442, "index-6"], [444, "index-6"], [476, "index-3"], [491, "index-5"], [493, "index-5"]], "weights_iter_desc": [[380, "index-8"], [382, "index-8"], [414, "index-7"], [416, "index-7"], [430, "index-8"], [432, "index-8"], [434, "index-7"], [436, "index-7"], [442, "index-10"], [444, "index-10"], [476, "index-8"], [491, "index-8"], [493, "index-8"]], "weights_layer_desc": [[380, "index-7"], [382, "index-7"], [414, "index-6"], [416, "index-6"], [430, "index-7"], [432, "index-7"], [434, "index-6"], [436, "index-6"], [442, "index-9"], [444, "index-9"], [476, "index-7"], [491, "index-7"], [493, "index-7"]], "workspace_desc": [[380, "index-12"], [382, "index-12"], [384, "index-12"], [386, "index-7"], [414, "index-11"], [416, "index-11"], [426, "index-13"], [428, "index-8"], [430, "index-12"], [432, "index-12"], [434, "index-11"], [436, "index-11"], [438, "index-6"], [440, "index-6"], [442, "index-17"], [444, "index-17"], [452, "index-6"], [454, "index-6"], [467, "index-37"], [491, "index-12"], [493, "index-12"]], "augru_forward": [[381, "index-1"], [381, "index-2"], [381, "index-3"]], "dnnl::augru_forward": [[381, "index-0"]], "dnnl::augru_forward::primitive_desc": [[382, "index-0"]], "batch_normalization_backward": [[383, "index-1"], [383, "index-2"], [383, "index-3"]], "dnnl::batch_normalization_backward": [[383, "index-0"]], "diff_dst_desc": [[384, "index-8"], [392, "index-7"], [394, "index-9"], [398, "index-7"], [400, "index-9"], [404, "index-8"], [420, "index-6"], [422, "index-7"], [426, "index-9"], [438, "index-5"], [452, "index-5"], [458, "index-6"], [467, "index-29"], [467, "index-35"], [473, "index-6"], [478, "index-5"], [482, "index-6"]], "diff_src_desc": [[384, "index-7"], [392, "index-5"], [398, "index-5"], [404, "index-7"], [420, "index-4"], [426, "index-8"], [438, "index-4"], [452, "index-4"], [458, "index-5"], [467, "index-28"], [467, "index-34"], [473, "index-5"], [478, "index-4"], [482, "index-5"]], "diff_weights_desc": [[384, "index-9"], [394, "index-8"], [400, "index-8"], [422, "index-6"], [426, "index-10"], [467, "index-30"], [467, "index-36"]], "dnnl::batch_normalization_backward::primitive_desc": [[384, "index-0"]], "dst_desc": [[384, "index-6"], [386, "index-5"], [388, "index-7"], [390, "index-6"], [396, "index-9"], [402, "index-9"], [406, "index-7"], [424, "index-7"], [426, "index-7"], [428, "index-6"], [440, "index-5"], [446, "index-8"], [454, "index-5"], [460, "index-5"], [467, "index-26"], [467, "index-32"], [469, "index-5"], [471, "index-8"], [475, "index-7"], [480, "index-5"], [482, "index-4"], [484, "index-5"], [488, "index-6"]], "get_epsilon": [[384, "index-14"], [386, "index-11"], [426, "index-15"], [428, "index-12"], [467, "index-8"], [469, "index-7"]], "get_flags": [[384, "index-15"], [386, "index-12"], [426, "index-16"], [428, "index-13"], [467, "index-9"], [489, "index-5"]], "mean_desc": [[384, "index-10"], [386, "index-8"], [426, "index-11"], [428, "index-9"]], "src_desc": [[384, "index-4"], [386, "index-4"], [388, "index-4"], [390, "index-5"], [394, "index-7"], [396, "index-7"], [400, "index-7"], [402, "index-7"], [404, "index-6"], [406, "index-6"], [422, "index-5"], [424, "index-5"], [426, "index-5"], [428, "index-5"], [440, "index-4"], [446, "index-5"], [454, "index-4"], [458, "index-4"], [460, "index-4"], [467, "index-25"], [467, "index-31"], [469, "index-4"], [471, "index-7"], [475, "index-6"], [480, "index-4"], [484, "index-4"], [488, "index-5"]], "variance_desc": [[384, "index-11"], [386, "index-9"], [426, "index-12"], [428, "index-10"]], "weights_desc": [[384, "index-5"], [386, "index-6"], [392, "index-6"], [396, "index-8"], [398, "index-6"], [402, "index-8"], [420, "index-5"], [424, "index-6"], [426, "index-6"], [428, "index-7"], [446, "index-6"], [467, "index-27"], [467, "index-33"]], "batch_normalization_forward": [[385, "index-1"], [385, "index-2"], [385, "index-3"]], "dnnl::batch_normalization_forward": [[385, "index-0"]], "dnnl::batch_normalization_forward::primitive_desc": [[386, "index-0"]], "dnnl::binary": [[387, "index-0"]], "dnnl::binary::primitive_desc": [[388, "index-0"]], "get_algorithm": [[388, "index-8"], [392, "index-8"], [394, "index-11"], [396, "index-11"], [398, "index-8"], [400, "index-11"], [402, "index-11"], [404, "index-9"], [406, "index-8"], [438, "index-7"], [440, "index-7"], [452, "index-7"], [454, "index-7"], [467, "index-10"], [469, "index-8"], [482, "index-7"], [484, "index-6"]], "src0_desc": [[388, "index-5"]], "src1_desc": [[388, "index-6"]], "dnnl::concat": [[389, "index-0"]], "dnnl::concat::primitive_desc": [[390, "index-0"]], "primitive_desc_base": [[390, "index-10"], [390, "index-7"], [390, "index-8"], [390, "index-9"], [466, "index-2"], [466, "index-3"], [466, "index-4"], [466, "index-5"], [471, "index-10"], [471, "index-11"], [471, "index-12"], [471, "index-9"], [488, "index-10"], [488, "index-7"], [488, "index-8"], [488, "index-9"]], "convolution_backward_data": [[391, "index-1"], [391, "index-2"], [391, "index-3"]], "dnnl::convolution_backward_data": [[391, "index-0"]], "dnnl::convolution_backward_data::primitive_desc": [[392, "index-0"]], "get_dilations": [[392, "index-11"], [394, "index-14"], [396, "index-14"], [398, "index-11"], [400, "index-14"], [402, "index-14"], [452, "index-11"], [454, "index-11"], [467, "index-5"]], "get_padding_l": [[392, "index-12"], [394, "index-15"], [396, "index-15"], [398, "index-12"], [400, "index-15"], [402, "index-15"], [452, "index-12"], [454, "index-12"], [467, "index-6"]], "get_padding_r": [[392, "index-13"], [394, "index-16"], [396, "index-16"], [398, "index-13"], [400, "index-16"], [402, "index-16"], [452, "index-13"], [454, "index-13"], [467, "index-7"]], "convolution_backward_weights": [[393, "index-1"], [393, "index-2"], [393, "index-3"]], "dnnl::convolution_backward_weights": [[393, "index-0"]], "dnnl::convolution_backward_weights::primitive_desc": [[394, "index-0"]], "convolution_forward": [[395, "index-1"], [395, "index-2"], [395, "index-3"]], "dnnl::convolution_forward": [[395, "index-0"]], "dnnl::convolution_forward::primitive_desc": [[396, "index-0"]], "deconvolution_backward_data": [[397, "index-1"], [397, "index-2"], [397, "index-3"]], "dnnl::deconvolution_backward_data": [[397, "index-0"]], "dnnl::deconvolution_backward_data::primitive_desc": [[398, "index-0"]], "deconvolution_backward_weights": [[399, "index-1"], [399, "index-2"], [399, "index-3"]], "dnnl::deconvolution_backward_weights": [[399, "index-0"]], "dnnl::deconvolution_backward_weights::primitive_desc": [[400, "index-0"]], "deconvolution_forward": [[401, "index-1"], [401, "index-2"], [401, "index-3"]], "dnnl::deconvolution_forward": [[401, "index-0"]], "dnnl::deconvolution_forward::primitive_desc": [[402, "index-0"]], "dnnl::eltwise_backward": [[403, "index-0"]], "eltwise_backward": [[403, "index-1"], [403, "index-2"], [403, "index-3"]], "dnnl::eltwise_backward::primitive_desc": [[404, "index-0"]], "get_alpha": [[404, "index-11"], [406, "index-10"], [438, "index-9"], [440, "index-9"], [467, "index-11"], [491, "index-24"], [493, "index-17"]], "get_beta": [[404, "index-12"], [406, "index-11"], [438, "index-10"], [440, "index-10"], [467, "index-12"], [491, "index-25"], [493, "index-18"]], "dnnl::eltwise_forward": [[405, "index-0"]], "eltwise_forward": [[405, "index-1"], [405, "index-2"], [405, "index-3"]], "dnnl::eltwise_forward::primitive_desc": [[406, "index-0"]], "dnnl_engine": [[407, "index-0"]], "dnnl::engine": [[408, "index-0"]], "get_count": [[408, "index-8"]], "get_kind": [[408, "index-3"], [462, "index-7"], [467, "index-41"]], "handle": [[408, "index-4"], [408, "index-5"], [408, "index-6"], [408, "index-7"], [417, "index-1"], [417, "index-2"], [417, "index-3"], [417, "index-4"], [448, "index-15"], [448, "index-16"], [448, "index-17"], [448, "index-18"], [462, "index-10"], [462, "index-11"], [462, "index-12"], [462, "index-13"], [486, "index-5"], [486, "index-6"], [486, "index-7"], [486, "index-8"]], "dnnl::error": [[409, "index-0"]], "error": [[409, "index-1"]], "what": [[409, "index-2"]], "wrap_c_api": [[409, "index-3"]], "arg": [[410, "index-1"]], "dnnl_exec_arg_t": [[410, "index-0"]], "dnnl_graph_inplace_pair_t": [[411, "index-0"]], "input_id": [[411, "index-1"]], "output_id": [[411, "index-2"]], "dnnl_graph_logical_tensor_t": [[412, "index-0"]], "id": [[412, "index-1"]], "layout_id": [[412, "index-8"]], "ndims": [[412, "index-2"]], "property": [[412, "index-5"]], "dnnl::gru_backward": [[413, "index-0"]], "gru_backward": [[413, "index-1"], [413, "index-2"], [413, "index-3"]], "dnnl::gru_backward::primitive_desc": [[414, "index-0"]], "dnnl::gru_forward": [[415, "index-0"]], "gru_forward": [[415, "index-1"], [415, "index-2"], [415, "index-3"]], "dnnl::gru_forward::primitive_desc": [[416, "index-0"]], "dnnl::handle": [[417, "index-0"]], "get": [[417, "index-8"]], "operator t": [[417, "index-9"]], "operator bool": [[417, "index-10"]], "operator!=": [[417, "index-12"], [450, "index-25"]], "operator==": [[417, "index-11"], [450, "index-24"]], "reset": [[417, "index-7"]], "dnnl::handle_traits": [[418, "index-0"]], "dnnl::inner_product_backward_data": [[419, "index-0"]], "inner_product_backward_data": [[419, "index-1"], [419, "index-2"], [419, "index-3"]], "dnnl::inner_product_backward_data::primitive_desc": [[420, "index-0"]], "dnnl::inner_product_backward_weights": [[421, "index-0"]], "inner_product_backward_weights": [[421, "index-1"], [421, "index-2"], [421, "index-3"]], "dnnl::inner_product_backward_weights::primitive_desc": [[422, "index-0"]], "dnnl::inner_product_forward": [[423, "index-0"]], "inner_product_forward": [[423, "index-1"], [423, "index-2"], [423, "index-3"]], "dnnl::inner_product_forward::primitive_desc": [[424, "index-0"]], "dnnl::layer_normalization_backward": [[425, "index-0"]], "layer_normalization_backward": [[425, "index-1"], [425, "index-2"], [425, "index-3"]], "dnnl::layer_normalization_backward::primitive_desc": [[426, "index-0"]], "dnnl::layer_normalization_forward": [[427, "index-0"]], "layer_normalization_forward": [[427, "index-1"], [427, "index-2"], [427, "index-3"]], "dnnl::layer_normalization_forward::primitive_desc": [[428, "index-0"]], "dnnl::lbr_augru_backward": [[429, "index-0"]], "lbr_augru_backward": [[429, "index-1"], [429, "index-2"], [429, "index-3"]], "dnnl::lbr_augru_backward::primitive_desc": [[430, "index-0"]], "dnnl::lbr_augru_forward": [[431, "index-0"]], "lbr_augru_forward": [[431, "index-1"], [431, "index-2"], [431, "index-3"]], "dnnl::lbr_augru_forward::primitive_desc": [[432, "index-0"]], "dnnl::lbr_gru_backward": [[433, "index-0"]], "lbr_gru_backward": [[433, "index-1"], [433, "index-2"], [433, "index-3"]], "dnnl::lbr_gru_backward::primitive_desc": [[434, "index-0"]], "dnnl::lbr_gru_forward": [[435, "index-0"]], "lbr_gru_forward": [[435, "index-1"], [435, "index-2"], [435, "index-3"]], "dnnl::lbr_gru_forward::primitive_desc": [[436, "index-0"]], "dnnl::lrn_backward": [[437, "index-0"]], "lrn_backward": [[437, "index-1"], [437, "index-2"], [437, "index-3"]], "dnnl::lrn_backward::primitive_desc": [[438, "index-0"]], "get_k": [[438, "index-12"], [440, "index-12"], [467, "index-15"]], "get_local_size": [[438, "index-11"], [440, "index-11"], [467, "index-14"]], "dnnl::lrn_forward": [[439, "index-0"]], "lrn_forward": [[439, "index-1"], [439, "index-2"], [439, "index-3"]], "dnnl::lrn_forward::primitive_desc": [[440, "index-0"]], "dnnl::lstm_backward": [[441, "index-0"]], "lstm_backward": [[441, "index-1"], [441, "index-2"], [441, "index-3"]], "diff_dst_iter_c_desc": [[442, "index-28"], [476, "index-26"]], "diff_src_iter_c_desc": [[442, "index-20"], [476, "index-18"]], "diff_weights_peephole_desc": [[442, "index-23"], [476, "index-21"]], "diff_weights_projection_desc": [[442, "index-24"], [476, "index-22"]], "dnnl::lstm_backward::primitive_desc": [[442, "index-0"]], "dst_iter_c_desc": [[442, "index-16"], [444, "index-16"], [476, "index-14"]], "src_iter_c_desc": [[442, "index-8"], [444, "index-8"], [476, "index-6"]], "weights_peephole_desc": [[442, "index-11"], [444, "index-11"], [476, "index-9"]], "weights_projection_desc": [[442, "index-12"], [444, "index-12"], [476, "index-10"]], "dnnl::lstm_forward": [[443, "index-0"]], "lstm_forward": [[443, "index-1"], [443, "index-2"], [443, "index-3"]], "dnnl::lstm_forward::primitive_desc": [[444, "index-0"]], "dnnl::matmul": [[445, "index-0"]], "dnnl::matmul::primitive_desc": [[446, "index-0"]], "dnnl_memory": [[447, "index-0"]], "data_type_size": [[448, "index-8"]], "dnnl::memory": [[448, "index-0"]], "get_desc": [[448, "index-9"]], "map_data": [[448, "index-13"]], "unmap_data": [[448, "index-14"]], "validate_dims": [[448, "index-7"]], "dnnl_memory_desc": [[449, "index-0"]], "desc": [[450, "index-1"], [450, "index-2"], [450, "index-3"], [450, "index-4"]], "dnnl::memory::desc": [[450, "index-0"]], "get_format_kind": [[450, "index-20"]], "get_inner_blks": [[450, "index-14"]], "get_inner_idxs": [[450, "index-15"]], "get_inner_nblks": [[450, "index-13"]], "get_ndims": [[450, "index-8"]], "get_nnz": [[450, "index-17"]], "get_num_handles": [[450, "index-16"]], "get_padded_dims": [[450, "index-9"]], "get_padded_offsets": [[450, "index-10"]], "get_size": [[450, "index-22"]], "get_sparse_encoding": [[450, "index-18"]], "get_submemory_offset": [[450, "index-11"]], "is_zero": [[450, "index-23"]], "permute_axes": [[450, "index-7"]], "reshape": [[450, "index-6"]], "submemory_desc": [[450, "index-5"]], "dnnl::pooling_backward": [[451, "index-0"]], "pooling_backward": [[451, "index-1"], [451, "index-2"], [451, "index-3"]], "dnnl::pooling_backward::primitive_desc": [[452, "index-0"]], "get_kernel": [[452, "index-10"], [454, "index-10"], [467, "index-21"]], "dnnl::pooling_forward": [[453, "index-0"]], "pooling_forward": [[453, "index-1"], [453, "index-2"], [453, "index-3"]], "dnnl::pooling_forward::primitive_desc": [[454, "index-0"]], "dnnl_post_ops": [[455, "index-0"]], "append_binary": [[456, "index-13"]], "append_dw": [[456, "index-11"]], "append_eltwise": [[456, "index-9"]], "append_prelu": [[456, "index-15"]], "append_sum": [[456, "index-5"]], "dnnl::post_ops": [[456, "index-0"]], "get_params_binary": [[456, "index-14"]], "get_params_dw": [[456, "index-12"]], "get_params_eltwise": [[456, "index-10"]], "get_params_prelu": [[456, "index-16"]], "get_params_sum": [[456, "index-6"], [456, "index-7"], [456, "index-8"]], "len": [[456, "index-3"]], "post_ops": [[456, "index-1"], [456, "index-2"]], "dnnl::prelu_backward": [[457, "index-0"]], "prelu_backward": [[457, "index-1"], [457, "index-2"], [457, "index-3"]], "dnnl::prelu_backward::primitive_desc": [[458, "index-0"]], "dnnl::prelu_forward": [[459, "index-0"]], "prelu_forward": [[459, "index-1"], [459, "index-2"], [459, "index-3"]], "dnnl::prelu_forward::primitive_desc": [[460, "index-0"]], "dnnl_primitive": [[461, "index-0"]], "dnnl::primitive": [[462, "index-0"]], "get_cache_blob": [[462, "index-8"]], "get_primitive_desc": [[462, "index-6"]], "primitive": [[462, "index-1"], [462, "index-2"], [462, "index-3"], [462, "index-4"], [462, "index-5"]], "dnnl_primitive_attr": [[463, "index-0"]], "dnnl::primitive_attr": [[464, "index-0"]], "get_fpmath_mode": [[464, "index-3"]], "get_post_ops": [[464, "index-9"]], "get_rnn_data_qparams": [[464, "index-12"]], "get_rnn_weights_projection_qparams": [[464, "index-16"]], "get_rnn_weights_qparams": [[464, "index-14"]], "get_scratchpad_mode": [[464, "index-5"]], "primitive_attr": [[464, "index-1"], [464, "index-2"]], "set_fpmath_mode": [[464, "index-4"]], "set_post_ops": [[464, "index-10"]], "set_rnn_data_qparams": [[464, "index-11"]], "set_rnn_weights_projection_qparams": [[464, "index-15"]], "set_rnn_weights_qparams": [[464, "index-13"]], "set_scales_mask": [[464, "index-7"]], "set_scratchpad_mode": [[464, "index-6"]], "set_zero_points_mask": [[464, "index-8"]], "dnnl_primitive_desc": [[465, "index-0"]], "dnnl::primitive_desc": [[466, "index-0"]], "next_impl": [[466, "index-1"]], "dnnl::primitive_desc_base": [[467, "index-0"]], "get_activation_kind": [[467, "index-20"], [491, "index-22"], [493, "index-15"]], "get_axis": [[467, "index-13"], [478, "index-7"], [480, "index-7"], [482, "index-9"], [484, "index-8"]], "get_cache_blob_id": [[467, "index-42"]], "get_factors": [[467, "index-17"]], "get_group_size": [[467, "index-22"], [478, "index-8"], [480, "index-8"]], "get_p": [[467, "index-16"], [469, "index-6"]], "get_primitive_attr": [[467, "index-40"]], "query_md": [[467, "index-24"]], "query_s64": [[467, "index-3"]], "scratchpad_desc": [[467, "index-38"]], "dnnl::reduction": [[468, "index-0"]], "dnnl::reduction::primitive_desc": [[469, "index-0"]], "dnnl::reorder": [[470, "index-0"]], "dnnl::reorder::primitive_desc": [[471, "index-0"]], "get_dst_engine": [[471, "index-6"]], "get_src_engine": [[471, "index-5"]], "dnnl::resampling_backward": [[472, "index-0"]], "resampling_backward": [[472, "index-1"], [472, "index-2"], [472, "index-3"]], "dnnl::resampling_backward::primitive_desc": [[473, "index-0"]], "dnnl::resampling_forward": [[474, "index-0"]], "resampling_forward": [[474, "index-1"], [474, "index-2"], [474, "index-3"]], "dnnl::resampling_forward::primitive_desc": [[475, "index-0"]], "augru_attention_desc": [[476, "index-4"]], "diff_augru_attention_desc": [[476, "index-16"]], "dnnl::rnn_primitive_desc_base": [[476, "index-0"]], "rnn_primitive_desc_base": [[476, "index-1"], [476, "index-2"]], "dnnl::shuffle_backward": [[477, "index-0"]], "shuffle_backward": [[477, "index-1"], [477, "index-2"], [477, "index-3"]], "dnnl::shuffle_backward::primitive_desc": [[478, "index-0"]], "dnnl::shuffle_forward": [[479, "index-0"]], "shuffle_forward": [[479, "index-1"], [479, "index-2"], [479, "index-3"]], "dnnl::shuffle_forward::primitive_desc": [[480, "index-0"]], "dnnl::softmax_backward": [[481, "index-0"]], "softmax_backward": [[481, "index-1"], [481, "index-2"], [481, "index-3"]], "dnnl::softmax_backward::primitive_desc": [[482, "index-0"]], "dnnl::softmax_forward": [[483, "index-0"]], "softmax_forward": [[483, "index-1"], [483, "index-2"], [483, "index-3"]], "dnnl::softmax_forward::primitive_desc": [[484, "index-0"]], "dnnl_stream": [[485, "index-0"]], "dnnl::stream": [[486, "index-0"]], "wait": [[486, "index-4"]], "dnnl::sum": [[487, "index-0"]], "dnnl::sum::primitive_desc": [[488, "index-0"]], "asynchronous": [[489, "index-1"]], "dnnl::threadpool_interop::threadpool_iface": [[489, "index-0"]], "get_in_parallel": [[489, "index-3"]], "get_num_threads": [[489, "index-2"]], "parallel_for": [[489, "index-4"]], "dnnl::vanilla_rnn_backward": [[490, "index-0"]], "vanilla_rnn_backward": [[490, "index-1"], [490, "index-2"], [490, "index-3"]], "dnnl::vanilla_rnn_backward::primitive_desc": [[491, "index-0"]], "dnnl::vanilla_rnn_forward": [[492, "index-0"]], "vanilla_rnn_forward": [[492, "index-1"], [492, "index-2"], [492, "index-3"]], "dnnl::vanilla_rnn_forward::primitive_desc": [[493, "index-0"]], "cpu_runtime": [[494, "index-5"]], "dnnl_version_t": [[494, "index-0"]], "gpu_runtime": [[494, "index-6"]], "hash": [[494, "index-4"]], "major": [[494, "index-1"]], "minor": [[494, "index-2"]], "patch": [[494, "index-3"]], "example_allows_unimplemented": [[495, "index-0"]], "gemm_dims_t": [[496, "index-0"]]}})