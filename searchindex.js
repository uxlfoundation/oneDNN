Search.setIndex({"docnames": ["advanced_topics", "class_dnnl_graph_allocator", "class_dnnl_graph_compiled_partition", "class_dnnl_graph_graph", "class_dnnl_graph_logical_tensor", "class_dnnl_graph_op", "class_dnnl_graph_partition", "class_dnnl_graph_tensor", "class_simple_memory_pool_t", "dev_guide_attributes", "dev_guide_attributes_accumulation_mode", "dev_guide_attributes_deterministic", "dev_guide_attributes_dropout", "dev_guide_attributes_fpmath_mode", "dev_guide_attributes_post_ops", "dev_guide_attributes_quantization", "dev_guide_attributes_rounding_mode", "dev_guide_attributes_scratchpad", "dev_guide_basic_concepts", "dev_guide_batch_normalization", "dev_guide_benchdnn", "dev_guide_binary", "dev_guide_build", "dev_guide_build_options", "dev_guide_c_and_cpp_apis", "dev_guide_concat", "dev_guide_constant_tensor_cache", "dev_guide_conventions", "dev_guide_convolution", "dev_guide_cpu_dispatcher_control", "dev_guide_cpu_isa_hints", "dev_guide_data_types", "dev_guide_dpcpp_interoperability", "dev_guide_eltwise", "dev_guide_examples", "dev_guide_experimental", "dev_guide_graph_basic_concepts", "dev_guide_graph_binary_fusion_patterns", "dev_guide_graph_convolution_fusion_patterns", "dev_guide_graph_convtranspose_fusion_patterns", "dev_guide_graph_dump", "dev_guide_graph_gated_mlp", "dev_guide_graph_gqa", "dev_guide_graph_interpolate_fusion_patterns", "dev_guide_graph_low_precision", "dev_guide_graph_matmul_fusion_patterns", "dev_guide_graph_norm_fusion_patterns", "dev_guide_graph_pool_fusion_patterns", "dev_guide_graph_quantized_convolution_fusion_patterns", "dev_guide_graph_quantized_convtranspose_fusion_patterns", "dev_guide_graph_quantized_matmul_fusion_patterns", "dev_guide_graph_reduction_fusion_patterns", "dev_guide_graph_sdpa", "dev_guide_graph_sdpa_compressed_kv", "dev_guide_graph_softmax_fusion_patterns", "dev_guide_graph_unary_fusion_patterns", "dev_guide_group_normalization", "dev_guide_host_side_scalars", "dev_guide_inference", "dev_guide_inference_and_training_aspects", "dev_guide_inference_int8", "dev_guide_inner_product", "dev_guide_inspecting_jit", "dev_guide_int8_computations", "dev_guide_layer_normalization", "dev_guide_link", "dev_guide_lrn", "dev_guide_matmul", "dev_guide_op_abs", "dev_guide_op_absbackward", "dev_guide_op_add", "dev_guide_op_avgpool", "dev_guide_op_avgpoolbackward", "dev_guide_op_batchnormforwardtraining", "dev_guide_op_batchnorminference", "dev_guide_op_batchnormtrainingbackward", "dev_guide_op_biasadd", "dev_guide_op_biasaddbackward", "dev_guide_op_clamp", "dev_guide_op_clampbackward", "dev_guide_op_concat", "dev_guide_op_convolution", "dev_guide_op_convolutionbackwarddata", "dev_guide_op_convolutionbackwardweights", "dev_guide_op_convtranspose", "dev_guide_op_convtransposebackwarddata", "dev_guide_op_convtransposebackwardweights", "dev_guide_op_dequantize", "dev_guide_op_divide", "dev_guide_op_dynamicdequantize", "dev_guide_op_dynamicquantize", "dev_guide_op_elu", "dev_guide_op_elubackward", "dev_guide_op_end", "dev_guide_op_exp", "dev_guide_op_gelu", "dev_guide_op_gelubackward", "dev_guide_op_genindex", "dev_guide_op_greaterequal", "dev_guide_op_groupnorm", "dev_guide_op_hardsigmoid", "dev_guide_op_hardsigmoidbackward", "dev_guide_op_hardswish", "dev_guide_op_hardswishbackward", "dev_guide_op_interpolate", "dev_guide_op_interpolatebackward", "dev_guide_op_layernorm", "dev_guide_op_layernormbackward", "dev_guide_op_leakyrelu", "dev_guide_op_log", "dev_guide_op_logsoftmax", "dev_guide_op_logsoftmaxbackward", "dev_guide_op_matmul", "dev_guide_op_maximum", "dev_guide_op_maxpool", "dev_guide_op_maxpoolbackward", "dev_guide_op_minimum", "dev_guide_op_mish", "dev_guide_op_mishbackward", "dev_guide_op_multiply", "dev_guide_op_pow", "dev_guide_op_prelu", "dev_guide_op_prelubackward", "dev_guide_op_quantize", "dev_guide_op_reciprocal", "dev_guide_op_reducel1", "dev_guide_op_reducel2", "dev_guide_op_reducemax", "dev_guide_op_reducemean", "dev_guide_op_reducemin", "dev_guide_op_reduceprod", "dev_guide_op_reducesum", "dev_guide_op_relu", "dev_guide_op_relubackward", "dev_guide_op_reorder", "dev_guide_op_round", "dev_guide_op_select", "dev_guide_op_sigmoid", "dev_guide_op_sigmoidbackward", "dev_guide_op_softmax", "dev_guide_op_softmaxbackward", "dev_guide_op_softplus", "dev_guide_op_softplusbackward", "dev_guide_op_sqrt", "dev_guide_op_sqrtbackward", "dev_guide_op_square", "dev_guide_op_squareddifference", "dev_guide_op_staticreshape", "dev_guide_op_statictranspose", "dev_guide_op_subtract", "dev_guide_op_tanh", "dev_guide_op_tanhbackward", "dev_guide_op_typecast", "dev_guide_op_wildcard", "dev_guide_opencl_interoperability", "dev_guide_performance_settings", "dev_guide_persistent_cache", "dev_guide_pooling", "dev_guide_prelu", "dev_guide_primitive_cache", "dev_guide_profilers", "dev_guide_reduction", "dev_guide_reorder", "dev_guide_resampling", "dev_guide_rnn", "dev_guide_shuffle", "dev_guide_softmax", "dev_guide_sparsity", "dev_guide_sum", "dev_guide_system_requirements", "dev_guide_threadpool", "dev_guide_training", "dev_guide_training_bf16", "dev_guide_transition_to_dnnl", "dev_guide_ukernel_basic_concepts", "dev_guide_ukernel_brgemm", "dev_guide_ukernel_transform", "dev_guide_understanding_memory_formats", "dev_guide_verbose", "dev_guide_verbose_table", "dev_guide_vtune", "enum_api_kind", "enum_dnnl_accumulation_mode", "enum_dnnl_accumulation_mode_t", "enum_dnnl_alg_kind_t", "enum_dnnl_algorithm", "enum_dnnl_cpu_isa", "enum_dnnl_cpu_isa_hints", "enum_dnnl_cpu_isa_hints_t", "enum_dnnl_cpu_isa_t", "enum_dnnl_data_type_t", "enum_dnnl_engine_kind", "enum_dnnl_engine_kind_t", "enum_dnnl_format_kind_t", "enum_dnnl_format_tag_t", "enum_dnnl_fpmath_mode", "enum_dnnl_fpmath_mode_t", "enum_dnnl_graph_dump_mode_t", "enum_dnnl_graph_graph_dump_mode", "enum_dnnl_graph_layout_type_t", "enum_dnnl_graph_logical_tensor_data_type", "enum_dnnl_graph_logical_tensor_layout_type", "enum_dnnl_graph_logical_tensor_property_type", "enum_dnnl_graph_op_attr", "enum_dnnl_graph_op_attr_t", "enum_dnnl_graph_op_kind", "enum_dnnl_graph_op_kind_t", "enum_dnnl_graph_partition_policy", "enum_dnnl_graph_partition_policy_t", "enum_dnnl_graph_status", "enum_dnnl_graph_tensor_property_t", "enum_dnnl_memory_data_type", "enum_dnnl_memory_format_kind", "enum_dnnl_memory_format_tag", "enum_dnnl_memory_sparse_encoding", "enum_dnnl_normalization_flags", "enum_dnnl_normalization_flags_t", "enum_dnnl_ocl_interop_memory_kind", "enum_dnnl_ocl_interop_memory_kind_t", "enum_dnnl_pack_type_t", "enum_dnnl_primitive_kind", "enum_dnnl_primitive_kind_t", "enum_dnnl_profiling_data_kind", "enum_dnnl_profiling_data_kind_t", "enum_dnnl_prop_kind", "enum_dnnl_prop_kind_t", "enum_dnnl_quantization_mode", "enum_dnnl_quantization_mode_t", "enum_dnnl_query", "enum_dnnl_query_t", "enum_dnnl_rnn_direction", "enum_dnnl_rnn_direction_t", "enum_dnnl_rnn_flags", "enum_dnnl_rnn_flags_t", "enum_dnnl_rounding_mode", "enum_dnnl_rounding_mode_t", "enum_dnnl_scratchpad_mode", "enum_dnnl_scratchpad_mode_t", "enum_dnnl_sparse_encoding_t", "enum_dnnl_status", "enum_dnnl_status_t", "enum_dnnl_stream_flags", "enum_dnnl_stream_flags_t", "enum_dnnl_sycl_interop_memory_kind", "enum_dnnl_sycl_interop_memory_kind_t", "enum_dnnl_ukernel_pack_type", "example_augru.cpp", "example_batch_normalization.cpp", "example_binary.cpp", "example_bnorm_u8_via_binary_postops.cpp", "example_cnn_inference_f32.c", "example_cnn_inference_f32.cpp", "example_cnn_inference_int8.cpp", "example_cnn_training_bf16.cpp", "example_cnn_training_f32.cpp", "example_concat.cpp", "example_convolution.cpp", "example_cpu_brgemm.cpp", "example_cpu_cnn_training_f32.c", "example_cpu_getting_started.cpp", "example_cpu_inference_int8.cpp", "example_cpu_matmul_coo.cpp", "example_cpu_matmul_csr.cpp", "example_cpu_matmul_quantization.cpp", "example_cpu_matmul_weights_compression.cpp", "example_cpu_rnn_inference_f32.cpp", "example_cpu_rnn_inference_int8.cpp", "example_cpu_sgemm_and_matmul.cpp", "example_cpu_single_op_partition.cpp", "example_cross_engine_reorder.c", "example_cross_engine_reorder.cpp", "example_deconvolution.cpp", "example_eltwise.cpp", "example_getting_started.cpp", "example_gpu_opencl_getting_started.cpp", "example_gpu_opencl_interop.cpp", "example_group_normalization.cpp", "example_inference_int8_matmul.cpp", "example_inner_product.cpp", "example_layer_normalization.cpp", "example_lbr_gru.cpp", "example_lrn.cpp", "example_lstm.cpp", "example_matmul.cpp", "example_matmul_f8_quantization.cpp", "example_matmul_perf.cpp", "example_matmul_with_host_scalar_scale.cpp", "example_memory_format_propagation.cpp", "example_performance_profiling.cpp", "example_pooling.cpp", "example_prelu.cpp", "example_reduction.cpp", "example_reorder.cpp", "example_resampling.cpp", "example_rnn_training_f32.cpp", "example_shuffle.cpp", "example_softmax.cpp", "example_sum.cpp", "example_sycl_getting_started.cpp", "example_sycl_interop_buffer.cpp", "example_sycl_interop_usm.cpp", "example_sycl_single_op_partition.cpp", "example_vanilla_rnn.cpp", "example_weights_decompression_matmul.cpp", "global", "graph_extension", "graph_fusion_patterns", "graph_programming_model", "graph_supported_operations", "group_dnnl_api", "group_dnnl_api_accumulation_mode", "group_dnnl_api_attributes", "group_dnnl_api_batch_normalization", "group_dnnl_api_binary", "group_dnnl_api_blas", "group_dnnl_api_common", "group_dnnl_api_concat", "group_dnnl_api_convolution", "group_dnnl_api_data_types", "group_dnnl_api_deconvolution", "group_dnnl_api_eltwise", "group_dnnl_api_engine", "group_dnnl_api_fpmath_mode", "group_dnnl_api_group_normalization", "group_dnnl_api_inner_product", "group_dnnl_api_interop", "group_dnnl_api_layer_normalization", "group_dnnl_api_lrn", "group_dnnl_api_matmul", "group_dnnl_api_memory", "group_dnnl_api_ocl_interop", "group_dnnl_api_pooling", "group_dnnl_api_prelu", "group_dnnl_api_primitive_cache", "group_dnnl_api_primitives", "group_dnnl_api_primitives_common", "group_dnnl_api_profiling", "group_dnnl_api_reduction", "group_dnnl_api_reorder", "group_dnnl_api_resampling", "group_dnnl_api_rnn", "group_dnnl_api_service", "group_dnnl_api_shuffle", "group_dnnl_api_softmax", "group_dnnl_api_stream", "group_dnnl_api_sum", "group_dnnl_api_sycl_interop", "group_dnnl_api_threadpool_interop", "group_dnnl_api_ukernel", "group_dnnl_api_ukernel_brgemm", "group_dnnl_api_ukernel_transform", "group_dnnl_api_ukernel_utils", "group_dnnl_api_utils", "group_dnnl_graph_api", "group_dnnl_graph_api_allocator", "group_dnnl_graph_api_compiled_partition", "group_dnnl_graph_api_compiled_partition_cache", "group_dnnl_graph_api_constant_tensor_cache", "group_dnnl_graph_api_dump_mode", "group_dnnl_graph_api_engine", "group_dnnl_graph_api_graph", "group_dnnl_graph_api_interop", "group_dnnl_graph_api_logical_tensor", "group_dnnl_graph_api_ocl_interop", "group_dnnl_graph_api_op", "group_dnnl_graph_api_partition", "group_dnnl_graph_api_status", "group_dnnl_graph_api_sycl_interop", "group_dnnl_graph_api_tensor", "group_dnnl_graph_api_utils", "index", "interop_with_dpcpp_and_opencl", "namespace_dnnl", "namespace_dnnl_graph", "namespace_dnnl_graph_ocl_interop", "namespace_dnnl_graph_sycl_interop", "namespace_dnnl_ocl_interop", "namespace_dnnl_sycl_interop", "namespace_dnnl_threadpool_interop", "namespace_dnnl_ukernel", "namespace_oneapi", "namespace_std", "namespace_sycl", "orphans", "page_augru_example_cpp", "page_augru_example_cpp_brief", "page_batch_normalization_example_cpp", "page_batch_normalization_example_cpp_brief", "page_binary_example_cpp", "page_binary_example_cpp_brief", "page_bnorm_u8_via_binary_postops_cpp", "page_bnorm_u8_via_binary_postops_cpp_brief", "page_cnn_inference_f32_c", "page_cnn_inference_f32_c_brief", "page_cnn_inference_f32_cpp", "page_cnn_inference_f32_cpp_brief", "page_cnn_inference_int8_cpp", "page_cnn_inference_int8_cpp_brief", "page_cnn_training_bf16_cpp", "page_cnn_training_bf16_cpp_brief", "page_cnn_training_f32_cpp", "page_cnn_training_f32_cpp_brief", "page_concat_example_cpp", "page_concat_example_cpp_brief", "page_convolution_example_cpp", "page_convolution_example_cpp_brief", "page_cpu_brgemm_example_cpp", "page_cpu_brgemm_example_cpp_brief", "page_cpu_cnn_training_f32_c", "page_cpu_cnn_training_f32_c_brief", "page_cpu_matmul_coo_cpp", "page_cpu_matmul_coo_cpp_brief", "page_cpu_matmul_csr_cpp", "page_cpu_matmul_csr_cpp_brief", "page_cpu_matmul_quantization_cpp", "page_cpu_matmul_quantization_cpp_brief", "page_cpu_matmul_weights_compression_cpp", "page_cpu_matmul_weights_compression_cpp_brief", "page_cpu_rnn_inference_f32_cpp", "page_cpu_rnn_inference_f32_cpp_brief", "page_cpu_rnn_inference_int8_cpp", "page_cpu_rnn_inference_int8_cpp_brief", "page_cpu_sgemm_and_matmul_cpp", "page_cpu_sgemm_and_matmul_cpp_brief", "page_cross_engine_reorder_c", "page_cross_engine_reorder_c_brief", "page_cross_engine_reorder_cpp", "page_cross_engine_reorder_cpp_brief", "page_deconvolution_example_cpp", "page_deconvolution_example_cpp_brief", "page_eltwise_example_cpp", "page_eltwise_example_cpp_brief", "page_getting_started_cpp", "page_getting_started_cpp_brief", "page_gpu_opencl_interop_cpp", "page_gpu_opencl_interop_cpp_brief", "page_graph_cpu_getting_started_cpp", "page_graph_cpu_getting_started_cpp_brief", "page_graph_cpu_inference_int8_cpp", "page_graph_cpu_inference_int8_cpp_brief", "page_graph_cpu_single_op_partition_cpp", "page_graph_cpu_single_op_partition_cpp_brief", "page_graph_gpu_opencl_getting_started_cpp", "page_graph_gpu_opencl_getting_started_cpp_brief", "page_graph_sycl_getting_started_cpp", "page_graph_sycl_getting_started_cpp_brief", "page_graph_sycl_single_op_partition_cpp", "page_graph_sycl_single_op_partition_cpp_brief", "page_group_normalization_example_cpp", "page_group_normalization_example_cpp_brief", "page_inference_int8_matmul_cpp", "page_inference_int8_matmul_cpp_brief", "page_inner_product_example_cpp", "page_inner_product_example_cpp_brief", "page_layer_normalization_example_cpp", "page_layer_normalization_example_cpp_brief", "page_lbr_gru_example_cpp", "page_lbr_gru_example_cpp_brief", "page_legal_information", "page_lrn_example_cpp", "page_lrn_example_cpp_brief", "page_lstm_example_cpp", "page_lstm_example_cpp_brief", "page_matmul_example_cpp", "page_matmul_example_cpp_brief", "page_matmul_f8_quantization_cpp", "page_matmul_f8_quantization_cpp_brief", "page_matmul_perf_cpp", "page_matmul_perf_cpp_brief", "page_matmul_with_host_scalar_scale_cpp", "page_matmul_with_host_scalar_scale_cpp_brief", "page_memory_format_propagation_cpp", "page_memory_format_propagation_cpp_brief", "page_performance_profiling_cpp", "page_performance_profiling_cpp_brief", "page_pooling_example_cpp", "page_pooling_example_cpp_brief", "page_prelu_example_cpp", "page_prelu_example_cpp_brief", "page_reduction_example_cpp", "page_reduction_example_cpp_brief", "page_reorder_example_cpp", "page_reorder_example_cpp_brief", "page_resampling_example_cpp", "page_resampling_example_cpp_brief", "page_rnn_training_f32_cpp", "page_rnn_training_f32_cpp_brief", "page_shuffle_example_cpp", "page_shuffle_example_cpp_brief", "page_softmax_example_cpp", "page_softmax_example_cpp_brief", "page_sum_example_cpp", "page_sum_example_cpp_brief", "page_sycl_interop_buffer_cpp", "page_sycl_interop_buffer_cpp_brief", "page_sycl_interop_usm_cpp", "page_sycl_interop_usm_cpp_brief", "page_vanilla_rnn_example_cpp", "page_vanilla_rnn_example_cpp_brief", "page_weights_decompression_matmul_cpp", "page_weights_decompression_matmul_cpp_brief", "performance_profiling_and_inspection", "programming_model", "struct_args_t", "struct_cpu_deletor_t", "struct_dnnl_augru_backward", "struct_dnnl_augru_backward_primitive_desc", "struct_dnnl_augru_forward", "struct_dnnl_augru_forward_primitive_desc", "struct_dnnl_batch_normalization_backward", "struct_dnnl_batch_normalization_backward_primitive_desc", "struct_dnnl_batch_normalization_forward", "struct_dnnl_batch_normalization_forward_primitive_desc", "struct_dnnl_binary", "struct_dnnl_binary_primitive_desc", "struct_dnnl_brgemm", "struct_dnnl_concat", "struct_dnnl_concat_primitive_desc", "struct_dnnl_convolution_backward_data", "struct_dnnl_convolution_backward_data_primitive_desc", "struct_dnnl_convolution_backward_weights", "struct_dnnl_convolution_backward_weights_primitive_desc", "struct_dnnl_convolution_forward", "struct_dnnl_convolution_forward_primitive_desc", "struct_dnnl_deconvolution_backward_data", "struct_dnnl_deconvolution_backward_data_primitive_desc", "struct_dnnl_deconvolution_backward_weights", "struct_dnnl_deconvolution_backward_weights_primitive_desc", "struct_dnnl_deconvolution_forward", "struct_dnnl_deconvolution_forward_primitive_desc", "struct_dnnl_eltwise_backward", "struct_dnnl_eltwise_backward_primitive_desc", "struct_dnnl_eltwise_forward", "struct_dnnl_eltwise_forward_primitive_desc", "struct_dnnl_engine", "struct_dnnl_engine-2", "struct_dnnl_error", "struct_dnnl_exec_arg_t", "struct_dnnl_graph_inplace_pair_t", "struct_dnnl_graph_logical_tensor_t", "struct_dnnl_group_normalization_backward", "struct_dnnl_group_normalization_backward_primitive_desc", "struct_dnnl_group_normalization_forward", "struct_dnnl_group_normalization_forward_primitive_desc", "struct_dnnl_gru_backward", "struct_dnnl_gru_backward_primitive_desc", "struct_dnnl_gru_forward", "struct_dnnl_gru_forward_primitive_desc", "struct_dnnl_handle", "struct_dnnl_handle_traits", "struct_dnnl_inner_product_backward_data", "struct_dnnl_inner_product_backward_data_primitive_desc", "struct_dnnl_inner_product_backward_weights", "struct_dnnl_inner_product_backward_weights_primitive_desc", "struct_dnnl_inner_product_forward", "struct_dnnl_inner_product_forward_primitive_desc", "struct_dnnl_layer_normalization_backward", "struct_dnnl_layer_normalization_backward_primitive_desc", "struct_dnnl_layer_normalization_forward", "struct_dnnl_layer_normalization_forward_primitive_desc", "struct_dnnl_lbr_augru_backward", "struct_dnnl_lbr_augru_backward_primitive_desc", "struct_dnnl_lbr_augru_forward", "struct_dnnl_lbr_augru_forward_primitive_desc", "struct_dnnl_lbr_gru_backward", "struct_dnnl_lbr_gru_backward_primitive_desc", "struct_dnnl_lbr_gru_forward", "struct_dnnl_lbr_gru_forward_primitive_desc", "struct_dnnl_lrn_backward", "struct_dnnl_lrn_backward_primitive_desc", "struct_dnnl_lrn_forward", "struct_dnnl_lrn_forward_primitive_desc", "struct_dnnl_lstm_backward", "struct_dnnl_lstm_backward_primitive_desc", "struct_dnnl_lstm_forward", "struct_dnnl_lstm_forward_primitive_desc", "struct_dnnl_matmul", "struct_dnnl_matmul_primitive_desc", "struct_dnnl_memory", "struct_dnnl_memory-2", "struct_dnnl_memory_desc", "struct_dnnl_memory_desc-2", "struct_dnnl_pooling_backward", "struct_dnnl_pooling_backward_primitive_desc", "struct_dnnl_pooling_forward", "struct_dnnl_pooling_forward_primitive_desc", "struct_dnnl_post_ops", "struct_dnnl_post_ops-2", "struct_dnnl_prelu_backward", "struct_dnnl_prelu_backward_primitive_desc", "struct_dnnl_prelu_forward", "struct_dnnl_prelu_forward_primitive_desc", "struct_dnnl_primitive", "struct_dnnl_primitive-2", "struct_dnnl_primitive_attr", "struct_dnnl_primitive_attr-2", "struct_dnnl_primitive_desc", "struct_dnnl_primitive_desc-2", "struct_dnnl_primitive_desc_base", "struct_dnnl_reduction", "struct_dnnl_reduction_primitive_desc", "struct_dnnl_reorder", "struct_dnnl_reorder_primitive_desc", "struct_dnnl_resampling_backward", "struct_dnnl_resampling_backward_primitive_desc", "struct_dnnl_resampling_forward", "struct_dnnl_resampling_forward_primitive_desc", "struct_dnnl_rnn_primitive_desc_base", "struct_dnnl_shuffle_backward", "struct_dnnl_shuffle_backward_primitive_desc", "struct_dnnl_shuffle_forward", "struct_dnnl_shuffle_forward_primitive_desc", "struct_dnnl_softmax_backward", "struct_dnnl_softmax_backward_primitive_desc", "struct_dnnl_softmax_forward", "struct_dnnl_softmax_forward_primitive_desc", "struct_dnnl_stream", "struct_dnnl_stream-2", "struct_dnnl_sum", "struct_dnnl_sum_primitive_desc", "struct_dnnl_threadpool_interop_threadpool_iface", "struct_dnnl_transform", "struct_dnnl_ukernel_attr_params", "struct_dnnl_ukernel_attr_params-2", "struct_dnnl_ukernel_brgemm", "struct_dnnl_ukernel_transform", "struct_dnnl_vanilla_rnn_backward", "struct_dnnl_vanilla_rnn_backward_primitive_desc", "struct_dnnl_vanilla_rnn_forward", "struct_dnnl_vanilla_rnn_forward_primitive_desc", "struct_dnnl_version_t", "struct_example_allows_unimplemented", "struct_gemm_dims_t", "struct_gqa_dims_t", "struct_mlp_dims_t", "struct_mqa_dims_t", "struct_sdpa_dims_t", "struct_sycl_deletor_t", "supported_primitives", "ukernels"], "filenames": ["advanced_topics.rst", "class_dnnl_graph_allocator.rst", "class_dnnl_graph_compiled_partition.rst", "class_dnnl_graph_graph.rst", "class_dnnl_graph_logical_tensor.rst", "class_dnnl_graph_op.rst", "class_dnnl_graph_partition.rst", "class_dnnl_graph_tensor.rst", "class_simple_memory_pool_t.rst", "dev_guide_attributes.rst", "dev_guide_attributes_accumulation_mode.rst", "dev_guide_attributes_deterministic.rst", "dev_guide_attributes_dropout.rst", "dev_guide_attributes_fpmath_mode.rst", "dev_guide_attributes_post_ops.rst", "dev_guide_attributes_quantization.rst", "dev_guide_attributes_rounding_mode.rst", "dev_guide_attributes_scratchpad.rst", "dev_guide_basic_concepts.rst", "dev_guide_batch_normalization.rst", "dev_guide_benchdnn.rst", "dev_guide_binary.rst", "dev_guide_build.rst", "dev_guide_build_options.rst", "dev_guide_c_and_cpp_apis.rst", "dev_guide_concat.rst", "dev_guide_constant_tensor_cache.rst", "dev_guide_conventions.rst", "dev_guide_convolution.rst", "dev_guide_cpu_dispatcher_control.rst", "dev_guide_cpu_isa_hints.rst", "dev_guide_data_types.rst", "dev_guide_dpcpp_interoperability.rst", "dev_guide_eltwise.rst", "dev_guide_examples.rst", "dev_guide_experimental.rst", "dev_guide_graph_basic_concepts.rst", "dev_guide_graph_binary_fusion_patterns.rst", "dev_guide_graph_convolution_fusion_patterns.rst", "dev_guide_graph_convtranspose_fusion_patterns.rst", "dev_guide_graph_dump.rst", "dev_guide_graph_gated_mlp.rst", "dev_guide_graph_gqa.rst", "dev_guide_graph_interpolate_fusion_patterns.rst", "dev_guide_graph_low_precision.rst", "dev_guide_graph_matmul_fusion_patterns.rst", "dev_guide_graph_norm_fusion_patterns.rst", "dev_guide_graph_pool_fusion_patterns.rst", "dev_guide_graph_quantized_convolution_fusion_patterns.rst", "dev_guide_graph_quantized_convtranspose_fusion_patterns.rst", "dev_guide_graph_quantized_matmul_fusion_patterns.rst", "dev_guide_graph_reduction_fusion_patterns.rst", "dev_guide_graph_sdpa.rst", "dev_guide_graph_sdpa_compressed_kv.rst", "dev_guide_graph_softmax_fusion_patterns.rst", "dev_guide_graph_unary_fusion_patterns.rst", "dev_guide_group_normalization.rst", "dev_guide_host_side_scalars.rst", "dev_guide_inference.rst", "dev_guide_inference_and_training_aspects.rst", "dev_guide_inference_int8.rst", "dev_guide_inner_product.rst", "dev_guide_inspecting_jit.rst", "dev_guide_int8_computations.rst", "dev_guide_layer_normalization.rst", "dev_guide_link.rst", "dev_guide_lrn.rst", "dev_guide_matmul.rst", "dev_guide_op_abs.rst", "dev_guide_op_absbackward.rst", "dev_guide_op_add.rst", "dev_guide_op_avgpool.rst", "dev_guide_op_avgpoolbackward.rst", "dev_guide_op_batchnormforwardtraining.rst", "dev_guide_op_batchnorminference.rst", "dev_guide_op_batchnormtrainingbackward.rst", "dev_guide_op_biasadd.rst", "dev_guide_op_biasaddbackward.rst", "dev_guide_op_clamp.rst", "dev_guide_op_clampbackward.rst", "dev_guide_op_concat.rst", "dev_guide_op_convolution.rst", "dev_guide_op_convolutionbackwarddata.rst", "dev_guide_op_convolutionbackwardweights.rst", "dev_guide_op_convtranspose.rst", "dev_guide_op_convtransposebackwarddata.rst", "dev_guide_op_convtransposebackwardweights.rst", "dev_guide_op_dequantize.rst", "dev_guide_op_divide.rst", "dev_guide_op_dynamicdequantize.rst", "dev_guide_op_dynamicquantize.rst", "dev_guide_op_elu.rst", "dev_guide_op_elubackward.rst", "dev_guide_op_end.rst", "dev_guide_op_exp.rst", "dev_guide_op_gelu.rst", "dev_guide_op_gelubackward.rst", "dev_guide_op_genindex.rst", "dev_guide_op_greaterequal.rst", "dev_guide_op_groupnorm.rst", "dev_guide_op_hardsigmoid.rst", "dev_guide_op_hardsigmoidbackward.rst", "dev_guide_op_hardswish.rst", "dev_guide_op_hardswishbackward.rst", "dev_guide_op_interpolate.rst", "dev_guide_op_interpolatebackward.rst", "dev_guide_op_layernorm.rst", "dev_guide_op_layernormbackward.rst", "dev_guide_op_leakyrelu.rst", "dev_guide_op_log.rst", "dev_guide_op_logsoftmax.rst", "dev_guide_op_logsoftmaxbackward.rst", "dev_guide_op_matmul.rst", "dev_guide_op_maximum.rst", "dev_guide_op_maxpool.rst", "dev_guide_op_maxpoolbackward.rst", "dev_guide_op_minimum.rst", "dev_guide_op_mish.rst", "dev_guide_op_mishbackward.rst", "dev_guide_op_multiply.rst", "dev_guide_op_pow.rst", "dev_guide_op_prelu.rst", "dev_guide_op_prelubackward.rst", "dev_guide_op_quantize.rst", "dev_guide_op_reciprocal.rst", "dev_guide_op_reducel1.rst", "dev_guide_op_reducel2.rst", "dev_guide_op_reducemax.rst", "dev_guide_op_reducemean.rst", "dev_guide_op_reducemin.rst", "dev_guide_op_reduceprod.rst", "dev_guide_op_reducesum.rst", "dev_guide_op_relu.rst", "dev_guide_op_relubackward.rst", "dev_guide_op_reorder.rst", "dev_guide_op_round.rst", "dev_guide_op_select.rst", "dev_guide_op_sigmoid.rst", "dev_guide_op_sigmoidbackward.rst", "dev_guide_op_softmax.rst", "dev_guide_op_softmaxbackward.rst", "dev_guide_op_softplus.rst", "dev_guide_op_softplusbackward.rst", "dev_guide_op_sqrt.rst", "dev_guide_op_sqrtbackward.rst", "dev_guide_op_square.rst", "dev_guide_op_squareddifference.rst", "dev_guide_op_staticreshape.rst", "dev_guide_op_statictranspose.rst", "dev_guide_op_subtract.rst", "dev_guide_op_tanh.rst", "dev_guide_op_tanhbackward.rst", "dev_guide_op_typecast.rst", "dev_guide_op_wildcard.rst", "dev_guide_opencl_interoperability.rst", "dev_guide_performance_settings.rst", "dev_guide_persistent_cache.rst", "dev_guide_pooling.rst", "dev_guide_prelu.rst", "dev_guide_primitive_cache.rst", "dev_guide_profilers.rst", "dev_guide_reduction.rst", "dev_guide_reorder.rst", "dev_guide_resampling.rst", "dev_guide_rnn.rst", "dev_guide_shuffle.rst", "dev_guide_softmax.rst", "dev_guide_sparsity.rst", "dev_guide_sum.rst", "dev_guide_system_requirements.rst", "dev_guide_threadpool.rst", "dev_guide_training.rst", "dev_guide_training_bf16.rst", "dev_guide_transition_to_dnnl.rst", "dev_guide_ukernel_basic_concepts.rst", "dev_guide_ukernel_brgemm.rst", "dev_guide_ukernel_transform.rst", "dev_guide_understanding_memory_formats.rst", "dev_guide_verbose.rst", "dev_guide_verbose_table.rst", "dev_guide_vtune.rst", "enum_api_kind.rst", "enum_dnnl_accumulation_mode.rst", "enum_dnnl_accumulation_mode_t.rst", "enum_dnnl_alg_kind_t.rst", "enum_dnnl_algorithm.rst", "enum_dnnl_cpu_isa.rst", "enum_dnnl_cpu_isa_hints.rst", "enum_dnnl_cpu_isa_hints_t.rst", "enum_dnnl_cpu_isa_t.rst", "enum_dnnl_data_type_t.rst", "enum_dnnl_engine_kind.rst", "enum_dnnl_engine_kind_t.rst", "enum_dnnl_format_kind_t.rst", "enum_dnnl_format_tag_t.rst", "enum_dnnl_fpmath_mode.rst", "enum_dnnl_fpmath_mode_t.rst", "enum_dnnl_graph_dump_mode_t.rst", "enum_dnnl_graph_graph_dump_mode.rst", "enum_dnnl_graph_layout_type_t.rst", "enum_dnnl_graph_logical_tensor_data_type.rst", "enum_dnnl_graph_logical_tensor_layout_type.rst", "enum_dnnl_graph_logical_tensor_property_type.rst", "enum_dnnl_graph_op_attr.rst", "enum_dnnl_graph_op_attr_t.rst", "enum_dnnl_graph_op_kind.rst", "enum_dnnl_graph_op_kind_t.rst", "enum_dnnl_graph_partition_policy.rst", "enum_dnnl_graph_partition_policy_t.rst", "enum_dnnl_graph_status.rst", "enum_dnnl_graph_tensor_property_t.rst", "enum_dnnl_memory_data_type.rst", "enum_dnnl_memory_format_kind.rst", "enum_dnnl_memory_format_tag.rst", "enum_dnnl_memory_sparse_encoding.rst", "enum_dnnl_normalization_flags.rst", "enum_dnnl_normalization_flags_t.rst", "enum_dnnl_ocl_interop_memory_kind.rst", "enum_dnnl_ocl_interop_memory_kind_t.rst", "enum_dnnl_pack_type_t.rst", "enum_dnnl_primitive_kind.rst", "enum_dnnl_primitive_kind_t.rst", "enum_dnnl_profiling_data_kind.rst", "enum_dnnl_profiling_data_kind_t.rst", "enum_dnnl_prop_kind.rst", "enum_dnnl_prop_kind_t.rst", "enum_dnnl_quantization_mode.rst", "enum_dnnl_quantization_mode_t.rst", "enum_dnnl_query.rst", "enum_dnnl_query_t.rst", "enum_dnnl_rnn_direction.rst", "enum_dnnl_rnn_direction_t.rst", "enum_dnnl_rnn_flags.rst", "enum_dnnl_rnn_flags_t.rst", "enum_dnnl_rounding_mode.rst", "enum_dnnl_rounding_mode_t.rst", "enum_dnnl_scratchpad_mode.rst", "enum_dnnl_scratchpad_mode_t.rst", "enum_dnnl_sparse_encoding_t.rst", "enum_dnnl_status.rst", "enum_dnnl_status_t.rst", "enum_dnnl_stream_flags.rst", "enum_dnnl_stream_flags_t.rst", "enum_dnnl_sycl_interop_memory_kind.rst", "enum_dnnl_sycl_interop_memory_kind_t.rst", "enum_dnnl_ukernel_pack_type.rst", "example_augru.cpp.rst", "example_batch_normalization.cpp.rst", "example_binary.cpp.rst", "example_bnorm_u8_via_binary_postops.cpp.rst", "example_cnn_inference_f32.c.rst", "example_cnn_inference_f32.cpp.rst", "example_cnn_inference_int8.cpp.rst", "example_cnn_training_bf16.cpp.rst", "example_cnn_training_f32.cpp.rst", "example_concat.cpp.rst", "example_convolution.cpp.rst", "example_cpu_brgemm.cpp.rst", "example_cpu_cnn_training_f32.c.rst", "example_cpu_getting_started.cpp.rst", "example_cpu_inference_int8.cpp.rst", "example_cpu_matmul_coo.cpp.rst", "example_cpu_matmul_csr.cpp.rst", "example_cpu_matmul_quantization.cpp.rst", "example_cpu_matmul_weights_compression.cpp.rst", "example_cpu_rnn_inference_f32.cpp.rst", "example_cpu_rnn_inference_int8.cpp.rst", "example_cpu_sgemm_and_matmul.cpp.rst", "example_cpu_single_op_partition.cpp.rst", "example_cross_engine_reorder.c.rst", "example_cross_engine_reorder.cpp.rst", "example_deconvolution.cpp.rst", "example_eltwise.cpp.rst", "example_getting_started.cpp.rst", "example_gpu_opencl_getting_started.cpp.rst", "example_gpu_opencl_interop.cpp.rst", "example_group_normalization.cpp.rst", "example_inference_int8_matmul.cpp.rst", "example_inner_product.cpp.rst", "example_layer_normalization.cpp.rst", "example_lbr_gru.cpp.rst", "example_lrn.cpp.rst", "example_lstm.cpp.rst", "example_matmul.cpp.rst", "example_matmul_f8_quantization.cpp.rst", "example_matmul_perf.cpp.rst", "example_matmul_with_host_scalar_scale.cpp.rst", "example_memory_format_propagation.cpp.rst", "example_performance_profiling.cpp.rst", "example_pooling.cpp.rst", "example_prelu.cpp.rst", "example_reduction.cpp.rst", "example_reorder.cpp.rst", "example_resampling.cpp.rst", "example_rnn_training_f32.cpp.rst", "example_shuffle.cpp.rst", "example_softmax.cpp.rst", "example_sum.cpp.rst", "example_sycl_getting_started.cpp.rst", "example_sycl_interop_buffer.cpp.rst", "example_sycl_interop_usm.cpp.rst", "example_sycl_single_op_partition.cpp.rst", "example_vanilla_rnn.cpp.rst", "example_weights_decompression_matmul.cpp.rst", "global.rst", "graph_extension.rst", "graph_fusion_patterns.rst", "graph_programming_model.rst", "graph_supported_operations.rst", "group_dnnl_api.rst", "group_dnnl_api_accumulation_mode.rst", "group_dnnl_api_attributes.rst", "group_dnnl_api_batch_normalization.rst", "group_dnnl_api_binary.rst", "group_dnnl_api_blas.rst", "group_dnnl_api_common.rst", "group_dnnl_api_concat.rst", "group_dnnl_api_convolution.rst", "group_dnnl_api_data_types.rst", "group_dnnl_api_deconvolution.rst", "group_dnnl_api_eltwise.rst", "group_dnnl_api_engine.rst", "group_dnnl_api_fpmath_mode.rst", "group_dnnl_api_group_normalization.rst", "group_dnnl_api_inner_product.rst", "group_dnnl_api_interop.rst", "group_dnnl_api_layer_normalization.rst", "group_dnnl_api_lrn.rst", "group_dnnl_api_matmul.rst", "group_dnnl_api_memory.rst", "group_dnnl_api_ocl_interop.rst", "group_dnnl_api_pooling.rst", "group_dnnl_api_prelu.rst", "group_dnnl_api_primitive_cache.rst", "group_dnnl_api_primitives.rst", "group_dnnl_api_primitives_common.rst", "group_dnnl_api_profiling.rst", "group_dnnl_api_reduction.rst", "group_dnnl_api_reorder.rst", "group_dnnl_api_resampling.rst", "group_dnnl_api_rnn.rst", "group_dnnl_api_service.rst", "group_dnnl_api_shuffle.rst", "group_dnnl_api_softmax.rst", "group_dnnl_api_stream.rst", "group_dnnl_api_sum.rst", "group_dnnl_api_sycl_interop.rst", "group_dnnl_api_threadpool_interop.rst", "group_dnnl_api_ukernel.rst", "group_dnnl_api_ukernel_brgemm.rst", "group_dnnl_api_ukernel_transform.rst", "group_dnnl_api_ukernel_utils.rst", "group_dnnl_api_utils.rst", "group_dnnl_graph_api.rst", "group_dnnl_graph_api_allocator.rst", "group_dnnl_graph_api_compiled_partition.rst", "group_dnnl_graph_api_compiled_partition_cache.rst", "group_dnnl_graph_api_constant_tensor_cache.rst", "group_dnnl_graph_api_dump_mode.rst", "group_dnnl_graph_api_engine.rst", "group_dnnl_graph_api_graph.rst", "group_dnnl_graph_api_interop.rst", "group_dnnl_graph_api_logical_tensor.rst", "group_dnnl_graph_api_ocl_interop.rst", "group_dnnl_graph_api_op.rst", "group_dnnl_graph_api_partition.rst", "group_dnnl_graph_api_status.rst", "group_dnnl_graph_api_sycl_interop.rst", "group_dnnl_graph_api_tensor.rst", "group_dnnl_graph_api_utils.rst", "index.rst", "interop_with_dpcpp_and_opencl.rst", "namespace_dnnl.rst", "namespace_dnnl_graph.rst", "namespace_dnnl_graph_ocl_interop.rst", "namespace_dnnl_graph_sycl_interop.rst", "namespace_dnnl_ocl_interop.rst", "namespace_dnnl_sycl_interop.rst", "namespace_dnnl_threadpool_interop.rst", "namespace_dnnl_ukernel.rst", "namespace_oneapi.rst", "namespace_std.rst", "namespace_sycl.rst", "orphans.rst", "page_augru_example_cpp.rst", "page_augru_example_cpp_brief.rst", "page_batch_normalization_example_cpp.rst", "page_batch_normalization_example_cpp_brief.rst", "page_binary_example_cpp.rst", "page_binary_example_cpp_brief.rst", "page_bnorm_u8_via_binary_postops_cpp.rst", "page_bnorm_u8_via_binary_postops_cpp_brief.rst", "page_cnn_inference_f32_c.rst", "page_cnn_inference_f32_c_brief.rst", "page_cnn_inference_f32_cpp.rst", "page_cnn_inference_f32_cpp_brief.rst", "page_cnn_inference_int8_cpp.rst", "page_cnn_inference_int8_cpp_brief.rst", "page_cnn_training_bf16_cpp.rst", "page_cnn_training_bf16_cpp_brief.rst", "page_cnn_training_f32_cpp.rst", "page_cnn_training_f32_cpp_brief.rst", "page_concat_example_cpp.rst", "page_concat_example_cpp_brief.rst", "page_convolution_example_cpp.rst", "page_convolution_example_cpp_brief.rst", "page_cpu_brgemm_example_cpp.rst", "page_cpu_brgemm_example_cpp_brief.rst", "page_cpu_cnn_training_f32_c.rst", "page_cpu_cnn_training_f32_c_brief.rst", "page_cpu_matmul_coo_cpp.rst", "page_cpu_matmul_coo_cpp_brief.rst", "page_cpu_matmul_csr_cpp.rst", "page_cpu_matmul_csr_cpp_brief.rst", "page_cpu_matmul_quantization_cpp.rst", "page_cpu_matmul_quantization_cpp_brief.rst", "page_cpu_matmul_weights_compression_cpp.rst", "page_cpu_matmul_weights_compression_cpp_brief.rst", "page_cpu_rnn_inference_f32_cpp.rst", "page_cpu_rnn_inference_f32_cpp_brief.rst", "page_cpu_rnn_inference_int8_cpp.rst", "page_cpu_rnn_inference_int8_cpp_brief.rst", "page_cpu_sgemm_and_matmul_cpp.rst", "page_cpu_sgemm_and_matmul_cpp_brief.rst", "page_cross_engine_reorder_c.rst", "page_cross_engine_reorder_c_brief.rst", "page_cross_engine_reorder_cpp.rst", "page_cross_engine_reorder_cpp_brief.rst", "page_deconvolution_example_cpp.rst", "page_deconvolution_example_cpp_brief.rst", "page_eltwise_example_cpp.rst", "page_eltwise_example_cpp_brief.rst", "page_getting_started_cpp.rst", "page_getting_started_cpp_brief.rst", "page_gpu_opencl_interop_cpp.rst", "page_gpu_opencl_interop_cpp_brief.rst", "page_graph_cpu_getting_started_cpp.rst", "page_graph_cpu_getting_started_cpp_brief.rst", "page_graph_cpu_inference_int8_cpp.rst", "page_graph_cpu_inference_int8_cpp_brief.rst", "page_graph_cpu_single_op_partition_cpp.rst", "page_graph_cpu_single_op_partition_cpp_brief.rst", "page_graph_gpu_opencl_getting_started_cpp.rst", "page_graph_gpu_opencl_getting_started_cpp_brief.rst", "page_graph_sycl_getting_started_cpp.rst", "page_graph_sycl_getting_started_cpp_brief.rst", "page_graph_sycl_single_op_partition_cpp.rst", "page_graph_sycl_single_op_partition_cpp_brief.rst", "page_group_normalization_example_cpp.rst", "page_group_normalization_example_cpp_brief.rst", "page_inference_int8_matmul_cpp.rst", "page_inference_int8_matmul_cpp_brief.rst", "page_inner_product_example_cpp.rst", "page_inner_product_example_cpp_brief.rst", "page_layer_normalization_example_cpp.rst", "page_layer_normalization_example_cpp_brief.rst", "page_lbr_gru_example_cpp.rst", "page_lbr_gru_example_cpp_brief.rst", "page_legal_information.rst", "page_lrn_example_cpp.rst", "page_lrn_example_cpp_brief.rst", "page_lstm_example_cpp.rst", "page_lstm_example_cpp_brief.rst", "page_matmul_example_cpp.rst", "page_matmul_example_cpp_brief.rst", "page_matmul_f8_quantization_cpp.rst", "page_matmul_f8_quantization_cpp_brief.rst", "page_matmul_perf_cpp.rst", "page_matmul_perf_cpp_brief.rst", "page_matmul_with_host_scalar_scale_cpp.rst", "page_matmul_with_host_scalar_scale_cpp_brief.rst", "page_memory_format_propagation_cpp.rst", "page_memory_format_propagation_cpp_brief.rst", "page_performance_profiling_cpp.rst", "page_performance_profiling_cpp_brief.rst", "page_pooling_example_cpp.rst", "page_pooling_example_cpp_brief.rst", "page_prelu_example_cpp.rst", "page_prelu_example_cpp_brief.rst", "page_reduction_example_cpp.rst", "page_reduction_example_cpp_brief.rst", "page_reorder_example_cpp.rst", "page_reorder_example_cpp_brief.rst", "page_resampling_example_cpp.rst", "page_resampling_example_cpp_brief.rst", "page_rnn_training_f32_cpp.rst", "page_rnn_training_f32_cpp_brief.rst", "page_shuffle_example_cpp.rst", "page_shuffle_example_cpp_brief.rst", "page_softmax_example_cpp.rst", "page_softmax_example_cpp_brief.rst", "page_sum_example_cpp.rst", "page_sum_example_cpp_brief.rst", "page_sycl_interop_buffer_cpp.rst", "page_sycl_interop_buffer_cpp_brief.rst", "page_sycl_interop_usm_cpp.rst", "page_sycl_interop_usm_cpp_brief.rst", "page_vanilla_rnn_example_cpp.rst", "page_vanilla_rnn_example_cpp_brief.rst", "page_weights_decompression_matmul_cpp.rst", "page_weights_decompression_matmul_cpp_brief.rst", "performance_profiling_and_inspection.rst", "programming_model.rst", "struct_args_t.rst", "struct_cpu_deletor_t.rst", "struct_dnnl_augru_backward.rst", "struct_dnnl_augru_backward_primitive_desc.rst", "struct_dnnl_augru_forward.rst", "struct_dnnl_augru_forward_primitive_desc.rst", "struct_dnnl_batch_normalization_backward.rst", "struct_dnnl_batch_normalization_backward_primitive_desc.rst", "struct_dnnl_batch_normalization_forward.rst", "struct_dnnl_batch_normalization_forward_primitive_desc.rst", "struct_dnnl_binary.rst", "struct_dnnl_binary_primitive_desc.rst", "struct_dnnl_brgemm.rst", "struct_dnnl_concat.rst", "struct_dnnl_concat_primitive_desc.rst", "struct_dnnl_convolution_backward_data.rst", "struct_dnnl_convolution_backward_data_primitive_desc.rst", "struct_dnnl_convolution_backward_weights.rst", "struct_dnnl_convolution_backward_weights_primitive_desc.rst", "struct_dnnl_convolution_forward.rst", "struct_dnnl_convolution_forward_primitive_desc.rst", "struct_dnnl_deconvolution_backward_data.rst", "struct_dnnl_deconvolution_backward_data_primitive_desc.rst", "struct_dnnl_deconvolution_backward_weights.rst", "struct_dnnl_deconvolution_backward_weights_primitive_desc.rst", "struct_dnnl_deconvolution_forward.rst", "struct_dnnl_deconvolution_forward_primitive_desc.rst", "struct_dnnl_eltwise_backward.rst", "struct_dnnl_eltwise_backward_primitive_desc.rst", "struct_dnnl_eltwise_forward.rst", "struct_dnnl_eltwise_forward_primitive_desc.rst", "struct_dnnl_engine.rst", "struct_dnnl_engine-2.rst", "struct_dnnl_error.rst", "struct_dnnl_exec_arg_t.rst", "struct_dnnl_graph_inplace_pair_t.rst", "struct_dnnl_graph_logical_tensor_t.rst", "struct_dnnl_group_normalization_backward.rst", "struct_dnnl_group_normalization_backward_primitive_desc.rst", "struct_dnnl_group_normalization_forward.rst", "struct_dnnl_group_normalization_forward_primitive_desc.rst", "struct_dnnl_gru_backward.rst", "struct_dnnl_gru_backward_primitive_desc.rst", "struct_dnnl_gru_forward.rst", "struct_dnnl_gru_forward_primitive_desc.rst", "struct_dnnl_handle.rst", "struct_dnnl_handle_traits.rst", "struct_dnnl_inner_product_backward_data.rst", "struct_dnnl_inner_product_backward_data_primitive_desc.rst", "struct_dnnl_inner_product_backward_weights.rst", "struct_dnnl_inner_product_backward_weights_primitive_desc.rst", "struct_dnnl_inner_product_forward.rst", "struct_dnnl_inner_product_forward_primitive_desc.rst", "struct_dnnl_layer_normalization_backward.rst", "struct_dnnl_layer_normalization_backward_primitive_desc.rst", "struct_dnnl_layer_normalization_forward.rst", "struct_dnnl_layer_normalization_forward_primitive_desc.rst", "struct_dnnl_lbr_augru_backward.rst", "struct_dnnl_lbr_augru_backward_primitive_desc.rst", "struct_dnnl_lbr_augru_forward.rst", "struct_dnnl_lbr_augru_forward_primitive_desc.rst", "struct_dnnl_lbr_gru_backward.rst", "struct_dnnl_lbr_gru_backward_primitive_desc.rst", "struct_dnnl_lbr_gru_forward.rst", "struct_dnnl_lbr_gru_forward_primitive_desc.rst", "struct_dnnl_lrn_backward.rst", "struct_dnnl_lrn_backward_primitive_desc.rst", "struct_dnnl_lrn_forward.rst", "struct_dnnl_lrn_forward_primitive_desc.rst", "struct_dnnl_lstm_backward.rst", "struct_dnnl_lstm_backward_primitive_desc.rst", "struct_dnnl_lstm_forward.rst", "struct_dnnl_lstm_forward_primitive_desc.rst", "struct_dnnl_matmul.rst", "struct_dnnl_matmul_primitive_desc.rst", "struct_dnnl_memory.rst", "struct_dnnl_memory-2.rst", "struct_dnnl_memory_desc.rst", "struct_dnnl_memory_desc-2.rst", "struct_dnnl_pooling_backward.rst", "struct_dnnl_pooling_backward_primitive_desc.rst", "struct_dnnl_pooling_forward.rst", "struct_dnnl_pooling_forward_primitive_desc.rst", "struct_dnnl_post_ops.rst", "struct_dnnl_post_ops-2.rst", "struct_dnnl_prelu_backward.rst", "struct_dnnl_prelu_backward_primitive_desc.rst", "struct_dnnl_prelu_forward.rst", "struct_dnnl_prelu_forward_primitive_desc.rst", "struct_dnnl_primitive.rst", "struct_dnnl_primitive-2.rst", "struct_dnnl_primitive_attr.rst", "struct_dnnl_primitive_attr-2.rst", "struct_dnnl_primitive_desc.rst", "struct_dnnl_primitive_desc-2.rst", "struct_dnnl_primitive_desc_base.rst", "struct_dnnl_reduction.rst", "struct_dnnl_reduction_primitive_desc.rst", "struct_dnnl_reorder.rst", "struct_dnnl_reorder_primitive_desc.rst", "struct_dnnl_resampling_backward.rst", "struct_dnnl_resampling_backward_primitive_desc.rst", "struct_dnnl_resampling_forward.rst", "struct_dnnl_resampling_forward_primitive_desc.rst", "struct_dnnl_rnn_primitive_desc_base.rst", "struct_dnnl_shuffle_backward.rst", "struct_dnnl_shuffle_backward_primitive_desc.rst", "struct_dnnl_shuffle_forward.rst", "struct_dnnl_shuffle_forward_primitive_desc.rst", "struct_dnnl_softmax_backward.rst", "struct_dnnl_softmax_backward_primitive_desc.rst", "struct_dnnl_softmax_forward.rst", "struct_dnnl_softmax_forward_primitive_desc.rst", "struct_dnnl_stream.rst", "struct_dnnl_stream-2.rst", "struct_dnnl_sum.rst", "struct_dnnl_sum_primitive_desc.rst", "struct_dnnl_threadpool_interop_threadpool_iface.rst", "struct_dnnl_transform.rst", "struct_dnnl_ukernel_attr_params.rst", "struct_dnnl_ukernel_attr_params-2.rst", "struct_dnnl_ukernel_brgemm.rst", "struct_dnnl_ukernel_transform.rst", "struct_dnnl_vanilla_rnn_backward.rst", "struct_dnnl_vanilla_rnn_backward_primitive_desc.rst", "struct_dnnl_vanilla_rnn_forward.rst", "struct_dnnl_vanilla_rnn_forward_primitive_desc.rst", "struct_dnnl_version_t.rst", "struct_example_allows_unimplemented.rst", "struct_gemm_dims_t.rst", "struct_gqa_dims_t.rst", "struct_mlp_dims_t.rst", "struct_mqa_dims_t.rst", "struct_sdpa_dims_t.rst", "struct_sycl_deletor_t.rst", "supported_primitives.rst", "ukernels.rst"], "titles": ["Advanced Topics", "class dnnl::graph::allocator", "class dnnl::graph::compiled_partition", "class dnnl::graph::graph", "class dnnl::graph::logical_tensor", "class dnnl::graph::op", "class dnnl::graph::partition", "class dnnl::graph::tensor", "class simple_memory_pool_t", "Primitive Attributes", "Accumulation Mode", "Deterministic Mode", "Dropout", "Floating-point Math Mode", "Post-ops", "Quantization", "Rounding Mode", "Scratchpad", "Basic Concepts", "Batch Normalization", "Benchmarking Performance", "Binary", "Build from Source", "Use Build Options", "API", "Concat", "Constant Tensor Cache", "Naming Conventions", "Convolution", "CPU Dispatcher Control", "CPU ISA Hints", "Data Types", "DPC++ Interoperability", "Eltwise", "Examples and Tutorials", "Experimental features", "Basic Concepts", "Binary Fusion Patterns", "Convolution Fusion Patterns", "ConvTranspose Fusion Patterns", "Graph Dump", "Gated Multi-Layer Perceptron (Gated-MLP)", "Grouped Query Attention (GQA)", "Interpolate Fusion Patterns", "Low Precision", "MatMul Fusion Patterns", "Norm Fusion Patterns", "Pool Fusion Patterns", "Quantized Convolution Fusion Patterns", "Quantized ConvTranspose Fusion Patterns", "Quantized MatMul Fusion Patterns", "Reduction Fusion Patterns", "Scaled Dot-Product Attention (SDPA)", "SDPA with Compressed Key and Value", "Softmax Fusion Patterns", "Unary Fusion Patterns", "Group Normalization", "Host-Side Scalars Support", "Inference", "Inference and Training Aspects", "Int8 Inference", "Inner Product", "Inspecting JIT Code", "Nuances of int8 Computations", "Layer Normalization", "Link to the Library", "Local Response Normalization (LRN)", "Matrix Multiplication", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "GenIndex", "GreaterEqual", "GroupNorm", "HardSigmoid", "HardSigmoidBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "Maximum", "MaxPool", "MaxPoolBackward", "Minimum", "Mish", "MishBackward", "Multiply", "Pow", "PReLU", "PReLUBackward", "Quantize", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReLU", "ReLUBackward", "Reorder", "Round", "Select", "Sigmoid", "SigmoidBackward", "SoftMax", "SoftMaxBackward", "SoftPlus", "SoftPlusBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "OpenCL Interoperability", "Configuring oneDNN for Benchmarking", "Persistent Cache", "Pooling", "PReLU", "Primitive Cache", "Profiling oneDNN Performance", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sparse memory formats", "Sum", "System Requirements", "Using oneDNN with Threadpool-Based Threading", "Training", "Bfloat16 Training", "Transitioning from Intel MKL-DNN to oneDNN", "Basic Concepts", "Batch-Reduce General Matrix Multiplication", "Data transformation", "Understanding Memory Formats", "Verbose Mode", "Verbose Message Catalogue", "Profiling with VTune(TM) Profiler", "enum api_kind", "enum dnnl::accumulation_mode", "enum dnnl_accumulation_mode_t", "enum dnnl_alg_kind_t", "enum dnnl::algorithm", "enum dnnl::cpu_isa", "enum dnnl::cpu_isa_hints", "enum dnnl_cpu_isa_hints_t", "enum dnnl_cpu_isa_t", "enum dnnl_data_type_t", "enum dnnl::engine::kind", "enum dnnl_engine_kind_t", "enum dnnl_format_kind_t", "enum dnnl_format_tag_t", "enum dnnl::fpmath_mode", "enum dnnl_fpmath_mode_t", "enum dnnl_graph_dump_mode_t", "enum dnnl::graph::graph_dump_mode", "enum dnnl_graph_layout_type_t", "enum dnnl::graph::logical_tensor::data_type", "enum dnnl::graph::logical_tensor::layout_type", "enum dnnl::graph::logical_tensor::property_type", "enum dnnl::graph::op::attr", "enum dnnl_graph_op_attr_t", "enum dnnl::graph::op::kind", "enum dnnl_graph_op_kind_t", "enum dnnl::graph::partition::policy", "enum dnnl_graph_partition_policy_t", "enum dnnl::graph::status", "enum dnnl_graph_tensor_property_t", "enum dnnl::memory::data_type", "enum dnnl::memory::format_kind", "enum dnnl::memory::format_tag", "enum dnnl::memory::sparse_encoding", "enum dnnl::normalization_flags", "enum dnnl_normalization_flags_t", "enum dnnl::ocl_interop::memory_kind", "enum dnnl_ocl_interop_memory_kind_t", "enum dnnl_pack_type_t", "enum dnnl::primitive::kind", "enum dnnl_primitive_kind_t", "enum dnnl::profiling_data_kind", "enum dnnl_profiling_data_kind_t", "enum dnnl::prop_kind", "enum dnnl_prop_kind_t", "enum dnnl::quantization_mode", "enum dnnl_quantization_mode_t", "enum dnnl::query", "enum dnnl_query_t", "enum dnnl::rnn_direction", "enum dnnl_rnn_direction_t", "enum dnnl::rnn_flags", "enum dnnl_rnn_flags_t", "enum dnnl::rounding_mode", "enum dnnl_rounding_mode_t", "enum dnnl::scratchpad_mode", "enum dnnl_scratchpad_mode_t", "enum dnnl_sparse_encoding_t", "enum dnnl::status", "enum dnnl_status_t", "enum dnnl::stream::flags", "enum dnnl_stream_flags_t", "enum dnnl::sycl_interop::memory_kind", "enum dnnl_sycl_interop_memory_kind_t", "enum dnnl::ukernel::pack_type", "augru.cpp", "batch_normalization.cpp", "binary.cpp", "bnorm_u8_via_binary_postops.cpp", "cnn_inference_f32.c", "cnn_inference_f32.cpp", "cnn_inference_int8.cpp", "cnn_training_bf16.cpp", "cnn_training_f32.cpp", "concat.cpp", "convolution.cpp", "cpu_brgemm.cpp", "cpu_cnn_training_f32.c", "cpu_getting_started.cpp", "cpu_inference_int8.cpp", "cpu_matmul_coo.cpp", "cpu_matmul_csr.cpp", "cpu_matmul_quantization.cpp", "cpu_matmul_weights_compression.cpp", "cpu_rnn_inference_f32.cpp", "cpu_rnn_inference_int8.cpp", "cpu_sgemm_and_matmul.cpp", "cpu_single_op_partition.cpp", "cross_engine_reorder.c", "cross_engine_reorder.cpp", "deconvolution.cpp", "eltwise.cpp", "getting_started.cpp", "gpu_opencl_getting_started.cpp", "gpu_opencl_interop.cpp", "group_normalization.cpp", "inference_int8_matmul.cpp", "inner_product.cpp", "layer_normalization.cpp", "lbr_gru.cpp", "lrn.cpp", "lstm.cpp", "matmul.cpp", "matmul_f8_quantization.cpp", "matmul_perf.cpp", "matmul_with_host_scalar_scale.cpp", "memory_format_propagation.cpp", "performance_profiling.cpp", "pooling.cpp", "prelu.cpp", "reduction.cpp", "reorder.cpp", "resampling.cpp", "rnn_training_f32.cpp", "shuffle.cpp", "softmax.cpp", "sum.cpp", "sycl_getting_started.cpp", "sycl_interop_buffer.cpp", "sycl_interop_usm.cpp", "sycl_single_op_partition.cpp", "vanilla_rnn.cpp", "weights_decompression_matmul.cpp", "Global Namespace", "Graph Extension", "Fusion Patterns", "Programming Model", "Supported Operations", "oneDNN API", "Accumulation Mode", "Attributes", "Batch Normalization", "Binary", "BLAS functions", "Common API", "Concat", "Convolution", "Data types", "Deconvolution", "Eltwise", "Engine", "Floating-point Math Mode", "Group Normalization", "Inner Product", "Runtime interoperability API", "Layer Normalization", "LRN", "Matrix Multiplication", "Memory", "OpenCL interoperability API", "Pooling", "PReLU", "Primitive Cache", "Primitives", "Common", "Profiling", "Reduction", "Reorder", "Resampling", "RNN", "Service", "Shuffle", "Softmax", "Stream", "Sum", "SYCL interoperability API", "Threadpool interoperability API", "Ukernels", "BRGeMM ukernel", "Transform ukernel", "ukernel utils", "Utilities", "Graph API", "Allocator", "Compiled Partition", "Compiled Partition Cache", "Constant Tensor Cache", "Dump Mode", "Engine", "Graph", "Runtime interoperability API", "Logical Tensor", "OpenCL interoperability API", "Op", "Partition", "Status", "SYCL interoperability API", "Tensor", "Utilities", "oneAPI Deep Neural Network Library (oneDNN) Developer Guide and Reference", "Interoperability with DPC++ and OpenCL", "namespace dnnl", "namespace dnnl::graph", "namespace dnnl::graph::ocl_interop", "namespace dnnl::graph::sycl_interop", "namespace dnnl::ocl_interop", "namespace dnnl::sycl_interop", "namespace dnnl::threadpool_interop", "namespace dnnl::ukernel", "namespace oneapi", "namespace std", "namespace sycl", "Orphans", "AUGRU RNN Primitive Example", "&lt;Untitled&gt;", "Batch Normalization Primitive Example", "&lt;Untitled&gt;", "Binary Primitive Example", "&lt;Untitled&gt;", "Bnorm u8 by binary post-ops example", "&lt;Untitled&gt;", "CNN f32 inference example", "&lt;Untitled&gt;", "CNN f32 inference example", "&lt;Untitled&gt;", "CNN int8 inference example", "&lt;Untitled&gt;", "CNN bf16 training example", "&lt;Untitled&gt;", "CNN f32 training example", "&lt;Untitled&gt;", "Concat Primitive Example", "&lt;Untitled&gt;", "Convolution Primitive Example", "&lt;Untitled&gt;", "BRGeMM ukernel example", "&lt;Untitled&gt;", "CNN f32 training example", "&lt;Untitled&gt;", "MatMul Primitive with Sparse Memory in COO Format", "&lt;Untitled&gt;", "MatMul Primitive with Sparse Memory in CSR Format", "&lt;Untitled&gt;", "MatMul Tutorial: Quantization", "&lt;Untitled&gt;", "MatMul Primitive Example", "&lt;Untitled&gt;", "RNN f32 Inference Example", "&lt;Untitled&gt;", "RNN int8 inference example", "&lt;Untitled&gt;", "MatMul Tutorial: Comparison with SGEMM", "&lt;Untitled&gt;", "Reorder between CPU and GPU engines", "&lt;Untitled&gt;", "Reorder between CPU and GPU engines", "&lt;Untitled&gt;", "Deconvolution Primitive Example", "&lt;Untitled&gt;", "Element-Wise Primitive Example", "&lt;Untitled&gt;", "oneDNN API Basic Workflow Tutorial", "&lt;Untitled&gt;", "Getting started on GPU with OpenCL extensions API", "&lt;Untitled&gt;", "Getting started on CPU with Graph API", "&lt;Untitled&gt;", "Convolution int8 inference example with Graph API", "&lt;Untitled&gt;", "Single op partition on CPU", "&lt;Untitled&gt;", "Getting started with OpenCL extensions and Graph API", "&lt;Untitled&gt;", "Getting started with SYCL extensions API and Graph API", "&lt;Untitled&gt;", "Single op partition on GPU", "&lt;Untitled&gt;", "Group Normalization Primitive Example", "&lt;Untitled&gt;", "MatMul Tutorial: INT8 Inference", "&lt;Untitled&gt;", "Inner Product Primitive Example", "&lt;Untitled&gt;", "Layer Normalization Primitive Example", "&lt;Untitled&gt;", "Linear-Before-Reset GRU RNN Primitive Example", "&lt;Untitled&gt;", "Legal Information", "Local Response Normalization Primitive Example", "&lt;Untitled&gt;", "LSTM RNN Primitive Example", "&lt;Untitled&gt;", "Matmul Primitive Example", "&lt;Untitled&gt;", "Matrix Multiplication with f8 Quantization", "&lt;Untitled&gt;", "Matrix Multiplication Performance Example", "&lt;Untitled&gt;", "MatMul with Host Scalar Scale example", "&lt;Untitled&gt;", "Memory Format Propagation", "&lt;Untitled&gt;", "Performance Profiling Example", "&lt;Untitled&gt;", "Pooling Primitive Example", "&lt;Untitled&gt;", "Primitive Example", "&lt;Untitled&gt;", "Reduction Primitive Example", "&lt;Untitled&gt;", "Reorder Primitive Example", "&lt;Untitled&gt;", "Resampling Primitive Example", "&lt;Untitled&gt;", "RNN f32 training example", "&lt;Untitled&gt;", "Shuffle Primitive Example", "&lt;Untitled&gt;", "Softmax Primitive Example", "&lt;Untitled&gt;", "Sum Primitive Example", "&lt;Untitled&gt;", "Getting Started with SYCL Extensions API", "&lt;Untitled&gt;", "SYCL USM Example", "&lt;Untitled&gt;", "Vanilla RNN Primitive Example", "&lt;Untitled&gt;", "MatMul Tutorial: Weights Decompression", "&lt;Untitled&gt;", "Performance Profiling and Inspection", "oneDNN Concepts", "struct args_t", "struct cpu_deletor_t", "struct dnnl::augru_backward", "struct dnnl::augru_backward::primitive_desc", "struct dnnl::augru_forward", "struct dnnl::augru_forward::primitive_desc", "struct dnnl::batch_normalization_backward", "struct dnnl::batch_normalization_backward::primitive_desc", "struct dnnl::batch_normalization_forward", "struct dnnl::batch_normalization_forward::primitive_desc", "struct dnnl::binary", "struct dnnl::binary::primitive_desc", "struct dnnl_brgemm", "struct dnnl::concat", "struct dnnl::concat::primitive_desc", "struct dnnl::convolution_backward_data", "struct dnnl::convolution_backward_data::primitive_desc", "struct dnnl::convolution_backward_weights", "struct dnnl::convolution_backward_weights::primitive_desc", "struct dnnl::convolution_forward", "struct dnnl::convolution_forward::primitive_desc", "struct dnnl::deconvolution_backward_data", "struct dnnl::deconvolution_backward_data::primitive_desc", "struct dnnl::deconvolution_backward_weights", "struct dnnl::deconvolution_backward_weights::primitive_desc", "struct dnnl::deconvolution_forward", "struct dnnl::deconvolution_forward::primitive_desc", "struct dnnl::eltwise_backward", "struct dnnl::eltwise_backward::primitive_desc", "struct dnnl::eltwise_forward", "struct dnnl::eltwise_forward::primitive_desc", "struct dnnl_engine", "struct dnnl::engine", "struct dnnl::error", "struct dnnl_exec_arg_t", "struct dnnl_graph_inplace_pair_t", "struct dnnl_graph_logical_tensor_t", "struct dnnl::group_normalization_backward", "struct dnnl::group_normalization_backward::primitive_desc", "struct dnnl::group_normalization_forward", "struct dnnl::group_normalization_forward::primitive_desc", "struct dnnl::gru_backward", "struct dnnl::gru_backward::primitive_desc", "struct dnnl::gru_forward", "struct dnnl::gru_forward::primitive_desc", "template struct dnnl::handle", "template struct dnnl::handle_traits", "struct dnnl::inner_product_backward_data", "struct dnnl::inner_product_backward_data::primitive_desc", "struct dnnl::inner_product_backward_weights", "struct dnnl::inner_product_backward_weights::primitive_desc", "struct dnnl::inner_product_forward", "struct dnnl::inner_product_forward::primitive_desc", "struct dnnl::layer_normalization_backward", "struct dnnl::layer_normalization_backward::primitive_desc", "struct dnnl::layer_normalization_forward", "struct dnnl::layer_normalization_forward::primitive_desc", "struct dnnl::lbr_augru_backward", "struct dnnl::lbr_augru_backward::primitive_desc", "struct dnnl::lbr_augru_forward", "struct dnnl::lbr_augru_forward::primitive_desc", "struct dnnl::lbr_gru_backward", "struct dnnl::lbr_gru_backward::primitive_desc", "struct dnnl::lbr_gru_forward", "struct dnnl::lbr_gru_forward::primitive_desc", "struct dnnl::lrn_backward", "struct dnnl::lrn_backward::primitive_desc", "struct dnnl::lrn_forward", "struct dnnl::lrn_forward::primitive_desc", "struct dnnl::lstm_backward", "struct dnnl::lstm_backward::primitive_desc", "struct dnnl::lstm_forward", "struct dnnl::lstm_forward::primitive_desc", "struct dnnl::matmul", "struct dnnl::matmul::primitive_desc", "struct dnnl_memory", "struct dnnl::memory", "struct dnnl_memory_desc", "struct dnnl::memory::desc", "struct dnnl::pooling_backward", "struct dnnl::pooling_backward::primitive_desc", "struct dnnl::pooling_forward", "struct dnnl::pooling_forward::primitive_desc", "struct dnnl_post_ops", "struct dnnl::post_ops", "struct dnnl::prelu_backward", "struct dnnl::prelu_backward::primitive_desc", "struct dnnl::prelu_forward", "struct dnnl::prelu_forward::primitive_desc", "struct dnnl_primitive", "struct dnnl::primitive", "struct dnnl_primitive_attr", "struct dnnl::primitive_attr", "struct dnnl_primitive_desc", "struct dnnl::primitive_desc", "struct dnnl::primitive_desc_base", "struct dnnl::reduction", "struct dnnl::reduction::primitive_desc", "struct dnnl::reorder", "struct dnnl::reorder::primitive_desc", "struct dnnl::resampling_backward", "struct dnnl::resampling_backward::primitive_desc", "struct dnnl::resampling_forward", "struct dnnl::resampling_forward::primitive_desc", "struct dnnl::rnn_primitive_desc_base", "struct dnnl::shuffle_backward", "struct dnnl::shuffle_backward::primitive_desc", "struct dnnl::shuffle_forward", "struct dnnl::shuffle_forward::primitive_desc", "struct dnnl::softmax_backward", "struct dnnl::softmax_backward::primitive_desc", "struct dnnl::softmax_forward", "struct dnnl::softmax_forward::primitive_desc", "struct dnnl_stream", "struct dnnl::stream", "struct dnnl::sum", "struct dnnl::sum::primitive_desc", "struct dnnl::threadpool_interop::threadpool_iface", "struct dnnl_transform", "struct dnnl_ukernel_attr_params", "struct dnnl::ukernel::attr_params", "struct dnnl::ukernel::brgemm", "struct dnnl::ukernel::transform", "struct dnnl::vanilla_rnn_backward", "struct dnnl::vanilla_rnn_backward::primitive_desc", "struct dnnl::vanilla_rnn_forward", "struct dnnl::vanilla_rnn_forward::primitive_desc", "struct dnnl_version_t", "struct example_allows_unimplemented", "struct gemm_dims_t", "struct gqa_dims_t", "struct mlp_dims_t", "struct mqa_dims_t", "struct sdpa_dims_t", "struct sycl_deletor_t", "Supported Primitives", "Ukernels"], "terms": {"transit": 0, "from": [0, 2, 3, 6, 9, 10, 12, 13, 14, 15, 17, 18, 23, 27, 28, 31, 33, 34, 36, 38, 41, 42, 45, 46, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 77, 89, 90, 104, 105, 106, 107, 110, 111, 112, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 136, 139, 140, 147, 148, 152, 155, 156, 157, 159, 160, 162, 164, 165, 166, 174, 175, 176, 177, 178, 179, 184, 185, 194, 213, 215, 216, 230, 231, 236, 237, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 260, 263, 264, 265, 266, 268, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 306, 310, 311, 321, 322, 326, 329, 330, 335, 340, 349, 355, 358, 360, 365, 374, 375, 376, 377, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 409, 414, 416, 418, 420, 428, 430, 432, 434, 436, 448, 450, 452, 454, 456, 459, 461, 463, 465, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 624, 626, 627, 628, 629], "intel": [0, 23, 28, 29, 34, 35, 41, 42, 52, 53, 62, 67, 154, 155, 162, 172, 175, 176, 178, 186, 189, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 370, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 434, 435, 448, 450, 452, 454, 456, 458, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 494, 495, 496, 497, 499], "mkl": 0, "dnn": [0, 12, 31, 177], "onednn": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 154, 156, 159, 162, 163, 164, 167, 169, 172, 174, 177, 178, 179, 180, 194, 226, 227, 263, 267, 273, 286, 288, 289, 299, 300, 306, 330, 341, 347, 353, 359, 362, 363, 367, 372, 373, 376, 378, 383, 396, 414, 418, 420, 422, 433, 435, 436, 438, 440, 442, 444, 446, 467, 468, 469, 471, 473, 474, 475, 494, 495, 496, 501, 536, 539, 548, 549, 620], "understand": [0, 36, 194, 329, 471], "memori": [0, 2, 4, 7, 9, 10, 14, 15, 19, 21, 25, 28, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 147, 148, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 172, 175, 176, 178, 182, 183, 184, 185, 190, 193, 194, 209, 217, 218, 228, 229, 232, 233, 236, 237, 238, 239, 240, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 323, 324, 326, 327, 328, 330, 331, 332, 335, 337, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 354, 355, 362, 363, 367, 368, 372, 376, 377, 378, 383, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 414, 416, 418, 420, 422, 424, 425, 427, 428, 430, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 472, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 622, 623, 624, 625, 626, 627, 628, 629, 632], "format": [0, 14, 15, 18, 19, 21, 25, 28, 33, 34, 42, 56, 58, 59, 60, 61, 64, 66, 67, 81, 82, 83, 84, 85, 86, 104, 105, 121, 122, 157, 158, 160, 161, 162, 163, 164, 165, 168, 174, 175, 176, 178, 179, 193, 194, 212, 213, 214, 228, 229, 238, 250, 251, 253, 254, 257, 258, 260, 261, 262, 263, 273, 277, 278, 284, 287, 288, 294, 303, 316, 329, 335, 383, 384, 386, 392, 394, 396, 398, 400, 402, 404, 406, 408, 414, 428, 432, 434, 438, 448, 450, 452, 456, 461, 465, 472, 485, 491, 493, 497, 499, 502, 506, 510, 517, 519, 521, 525, 527, 531, 541, 545, 551, 553, 557, 561, 565, 569, 573, 579, 581, 583, 589, 604, 609, 613, 627], "nuanc": [0, 15, 25, 31, 314, 347, 378], "int8": [0, 9, 14, 25, 28, 31, 34, 52, 53, 56, 59, 61, 64, 67, 87, 123, 161, 164, 166, 175, 176, 252, 257, 260, 263, 266, 277, 311, 314, 347, 378, 383, 397, 406, 414, 439, 451, 595], "comput": [0, 2, 3, 5, 6, 9, 10, 13, 14, 15, 17, 18, 19, 21, 24, 25, 26, 27, 28, 31, 33, 34, 36, 40, 42, 44, 52, 53, 56, 58, 59, 60, 61, 64, 66, 67, 69, 71, 73, 77, 79, 81, 82, 83, 84, 85, 86, 92, 95, 96, 101, 103, 105, 106, 107, 111, 112, 114, 118, 122, 133, 138, 139, 140, 142, 144, 151, 152, 153, 155, 157, 158, 160, 163, 164, 165, 166, 170, 172, 174, 175, 176, 177, 178, 179, 182, 183, 187, 188, 202, 210, 215, 216, 224, 225, 226, 227, 246, 247, 248, 249, 255, 256, 257, 263, 264, 265, 266, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 284, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 304, 306, 311, 312, 314, 318, 321, 323, 324, 326, 329, 330, 334, 335, 337, 339, 340, 343, 344, 346, 347, 355, 360, 364, 365, 376, 377, 378, 384, 386, 388, 390, 394, 396, 402, 404, 406, 414, 415, 416, 418, 420, 426, 428, 430, 432, 434, 448, 452, 454, 456, 459, 461, 463, 465, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 497, 510, 538, 541, 557, 587, 593, 601, 613, 615], "primit": [0, 10, 11, 12, 14, 15, 16, 17, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 41, 42, 52, 53, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 74, 81, 134, 154, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 172, 177, 181, 184, 193, 194, 209, 212, 213, 214, 215, 216, 221, 224, 225, 228, 229, 230, 231, 236, 237, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 309, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 372, 376, 377, 383, 385, 387, 389, 390, 392, 394, 396, 398, 400, 403, 405, 408, 411, 413, 414, 417, 418, 420, 422, 429, 431, 449, 450, 453, 455, 457, 460, 462, 464, 465, 467, 469, 473, 476, 478, 480, 482, 484, 485, 488, 490, 492, 495, 498, 499, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 624, 626, 627, 628, 629], "cach": [0, 2, 18, 23, 53, 58, 67, 160, 174, 177, 202, 210, 228, 229, 259, 260, 274, 298, 305, 306, 309, 330, 335, 353, 355, 363, 374, 376, 438, 505, 507, 509, 511, 513, 516, 518, 520, 522, 524, 526, 528, 530, 532, 538, 540, 542, 544, 546, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 582, 584, 588, 590, 593, 598, 599, 601, 603, 605, 608, 610, 612, 614, 618, 626, 628], "persist": [0, 159], "us": [0, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 44, 48, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 73, 79, 81, 82, 87, 88, 89, 90, 92, 93, 95, 98, 104, 105, 106, 107, 112, 113, 116, 119, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 144, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 178, 179, 182, 183, 184, 185, 187, 188, 190, 193, 194, 202, 207, 208, 210, 211, 212, 213, 214, 215, 216, 221, 226, 227, 228, 229, 236, 237, 238, 241, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 354, 355, 357, 358, 360, 362, 363, 365, 367, 368, 374, 375, 376, 377, 378, 384, 386, 388, 390, 392, 394, 396, 398, 399, 400, 402, 404, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 451, 452, 454, 456, 458, 459, 461, 463, 465, 466, 467, 468, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 500, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 538, 539, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 586, 587, 589, 591, 593, 595, 600, 601, 602, 604, 606, 609, 611, 613, 615, 617, 619, 623, 624, 627, 629], "threadpool": [0, 28, 42, 52, 304, 309, 325, 378, 620], "base": [0, 9, 14, 15, 17, 18, 19, 21, 22, 23, 24, 28, 29, 31, 32, 33, 35, 41, 42, 52, 53, 56, 58, 59, 61, 62, 63, 64, 66, 107, 108, 117, 120, 121, 154, 155, 157, 158, 160, 161, 163, 164, 165, 166, 172, 173, 178, 179, 184, 185, 268, 286, 294, 301, 304, 347, 349, 370, 378, 394, 432, 444, 446, 465, 469, 471, 485, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 539, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 586, 589, 591, 593, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 624, 627, 629], "thread": [0, 17, 18, 22, 28, 34, 35, 42, 52, 160, 174, 236, 237, 347, 357, 378, 473, 620], "spars": [0, 34, 67, 162, 175, 176, 179, 193, 212, 214, 228, 229, 238, 257, 261, 262, 329, 383, 406, 411, 413, 416, 417, 581], "host": [0, 7, 18, 32, 34, 154, 193, 202, 210, 212, 217, 218, 243, 244, 286, 311, 329, 354, 367, 375, 383, 434, 470, 493, 579, 581, 595], "side": [0, 7, 17, 18, 28, 112, 175, 176, 257, 286, 311, 329, 406, 469, 579, 581, 595], "scalar": [0, 4, 7, 14, 18, 34, 160, 193, 202, 210, 212, 286, 311, 314, 329, 347, 368, 378, 383, 470, 539, 579, 581, 587, 595], "support": [0, 4, 6, 11, 13, 16, 17, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 67, 154, 155, 159, 160, 163, 165, 167, 169, 175, 176, 177, 178, 179, 186, 189, 203, 204, 215, 216, 220, 252, 253, 257, 264, 265, 266, 267, 284, 303, 305, 306, 311, 312, 313, 314, 317, 318, 319, 320, 323, 326, 328, 329, 335, 341, 347, 349, 358, 365, 370, 374, 375, 378, 396, 398, 406, 416, 418, 420, 422, 432, 465, 471, 499, 512, 514, 517, 539, 543, 579, 586, 587, 595, 597, 598, 602, 619], "experiment": [0, 19, 23, 179, 370], "featur": [0, 14, 19, 23, 24, 26, 28, 29, 30, 40, 63, 64, 159, 175, 176, 177, 178, 179, 187, 188, 257, 265, 266, 294, 311, 341, 396, 406, 432, 485, 587], "more": [1, 2, 3, 4, 5, 6, 7, 9, 13, 14, 15, 18, 19, 23, 25, 28, 31, 35, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 59, 60, 61, 67, 136, 147, 160, 161, 162, 164, 168, 172, 173, 175, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 257, 263, 306, 311, 312, 313, 314, 316, 317, 319, 320, 321, 323, 324, 326, 327, 328, 329, 330, 331, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 367, 368, 374, 375, 376, 377, 378, 380, 394, 406, 414, 422, 426, 432, 450, 465, 473, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630], "includ": [1, 2, 3, 4, 5, 6, 7, 15, 18, 22, 23, 31, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 65, 67, 160, 170, 173, 175, 176, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 329, 384, 386, 388, 390, 392, 394, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630], "dnnl_graph": [1, 2, 3, 4, 5, 6, 7, 65, 198, 200, 201, 202, 203, 205, 207, 209, 259, 260, 268, 274, 298, 301, 436, 438, 440, 442, 444, 446], "hpp": [1, 2, 3, 4, 5, 6, 7, 32, 65, 154, 170, 173, 175, 176, 177, 182, 185, 186, 187, 191, 195, 198, 200, 201, 202, 203, 205, 207, 209, 211, 212, 213, 214, 215, 217, 220, 222, 224, 226, 228, 230, 232, 234, 236, 239, 241, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 398, 400, 402, 404, 406, 410, 412, 414, 416, 422, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629], "public": [1, 2, 3, 4, 5, 6, 7, 8, 65, 170, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629, 631], "allocator_handl": 1, "dnnl_graph_host_allocate_f": [1, 304, 354], "host_malloc": [1, 304, 354], "dnnl_graph_host_deallocate_f": [1, 304, 354], "host_fre": [1, 304, 354], "an": [1, 2, 3, 4, 5, 6, 7, 9, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 41, 42, 43, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 175, 176, 177, 178, 179, 191, 192, 194, 199, 201, 203, 204, 209, 213, 214, 215, 216, 220, 221, 222, 223, 226, 227, 228, 229, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 310, 311, 314, 316, 320, 321, 322, 324, 327, 329, 330, 335, 340, 341, 342, 344, 345, 346, 347, 349, 350, 354, 355, 357, 360, 362, 363, 364, 365, 367, 368, 370, 374, 375, 376, 377, 378, 380, 384, 385, 386, 388, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 406, 408, 409, 410, 412, 414, 416, 422, 424, 426, 428, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 456, 459, 461, 462, 463, 465, 467, 469, 471, 473, 475, 477, 478, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629], "accord": [1, 2, 3, 5, 6, 7, 15, 25, 36, 59, 60, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 162, 168, 209, 236, 237, 240, 304, 306, 340, 355, 360, 362, 365, 394, 539, 573, 575], "given": [1, 3, 6, 7, 10, 11, 12, 13, 15, 16, 21, 25, 28, 31, 36, 52, 56, 59, 60, 61, 63, 64, 67, 68, 70, 88, 98, 109, 113, 116, 117, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 143, 145, 146, 149, 152, 156, 162, 166, 167, 174, 175, 177, 179, 209, 239, 240, 259, 260, 261, 262, 268, 274, 288, 298, 301, 311, 329, 330, 335, 346, 349, 354, 363, 365, 367, 376, 377, 410, 412, 414, 422, 426, 432, 434, 436, 440, 444, 446, 493, 579, 581, 587, 595], "function": [1, 3, 11, 13, 14, 15, 18, 19, 24, 26, 27, 29, 30, 31, 32, 33, 35, 41, 42, 52, 53, 54, 56, 58, 59, 62, 63, 64, 65, 66, 67, 78, 94, 108, 110, 117, 125, 126, 127, 128, 129, 130, 131, 154, 159, 160, 162, 167, 170, 173, 175, 176, 177, 178, 184, 209, 229, 239, 240, 257, 259, 260, 263, 273, 274, 277, 288, 294, 298, 303, 309, 351, 366, 372, 373, 406, 414, 422, 423, 450, 473, 485, 499, 535, 536, 548, 579, 581, 593, 617, 620], "pointer": [1, 6, 7, 17, 24, 32, 154, 167, 174, 175, 176, 179, 228, 229, 257, 263, 267, 314, 329, 330, 335, 341, 346, 347, 348, 349, 350, 354, 363, 367, 368, 374, 375, 376, 377, 378, 406, 414, 422, 432, 495, 535, 548, 579, 581, 593, 617, 623, 624, 625], "paramet": [1, 2, 3, 4, 5, 6, 7, 9, 13, 14, 15, 18, 19, 24, 28, 36, 44, 56, 59, 60, 61, 62, 63, 64, 81, 82, 106, 107, 158, 159, 160, 164, 165, 174, 178, 179, 215, 216, 224, 225, 226, 227, 228, 229, 263, 265, 266, 267, 273, 277, 288, 289, 294, 303, 304, 310, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 367, 368, 374, 375, 376, 377, 378, 394, 396, 414, 418, 420, 422, 426, 432, 434, 450, 467, 471, 475, 485, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "A": [1, 2, 3, 4, 6, 7, 9, 15, 17, 18, 28, 31, 34, 36, 44, 52, 53, 58, 60, 61, 63, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 90, 104, 105, 114, 115, 123, 125, 126, 127, 128, 129, 130, 131, 147, 148, 157, 160, 162, 163, 164, 165, 167, 175, 176, 177, 178, 179, 193, 212, 214, 219, 220, 221, 230, 231, 238, 245, 246, 257, 261, 262, 263, 267, 273, 277, 280, 282, 284, 285, 286, 302, 303, 304, 311, 312, 313, 314, 316, 317, 318, 319, 320, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 360, 362, 363, 364, 365, 367, 368, 372, 374, 376, 377, 378, 384, 396, 406, 410, 412, 414, 422, 432, 434, 450, 456, 461, 465, 467, 469, 470, 471, 493, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 536, 537, 541, 543, 545, 547, 548, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 589, 591, 593, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 617, 619, 623, 624, 625, 627, 629], "malloc": [1, 250, 258, 269, 354, 363, 367, 374, 375, 392, 408, 424], "cpu": [1, 7, 14, 18, 19, 26, 28, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 61, 67, 156, 157, 159, 160, 162, 164, 167, 170, 174, 175, 176, 178, 179, 186, 187, 188, 189, 191, 192, 202, 210, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 285, 303, 304, 321, 329, 341, 347, 370, 378, 383, 406, 408, 410, 412, 414, 418, 420, 422, 425, 427, 432, 437, 438, 439, 441, 442, 444, 446, 467, 471, 473, 493, 495, 499, 501, 502, 579, 620, 630], "free": [1, 4, 36, 250, 258, 269, 300, 354, 363, 367, 374, 375, 392, 408, 422, 424, 495, 579], "default": [1, 2, 3, 4, 7, 9, 10, 11, 14, 16, 17, 18, 22, 23, 26, 29, 30, 31, 32, 34, 35, 40, 58, 60, 62, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 98, 99, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 136, 138, 139, 140, 141, 142, 144, 146, 149, 151, 154, 159, 160, 164, 175, 176, 177, 178, 182, 183, 187, 188, 195, 196, 217, 218, 236, 237, 241, 242, 243, 244, 257, 280, 284, 302, 311, 322, 340, 341, 356, 357, 406, 456, 465, 497, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 624, 625, 626, 627, 628, 629], "constructor": [1, 2, 4, 7, 9, 18, 36, 156, 164, 175, 176, 257, 396, 406, 432, 471, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 582, 583, 584, 585, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 624, 625, 626, 627, 628, 629], "compil": [2, 6, 17, 35, 58, 62, 112, 155, 159, 169, 199, 201, 209, 240, 259, 260, 268, 274, 298, 299, 300, 301, 306, 309, 341, 353, 354, 357, 362, 363, 365, 367, 368, 374, 375, 426, 432, 434, 467, 471, 473, 493, 495, 538, 539], "partit": [2, 3, 34, 40, 41, 44, 52, 197, 199, 201, 208, 259, 260, 268, 274, 298, 301, 304, 306, 309, 353, 354, 358, 360, 362, 363, 367, 368, 373, 374, 375, 383, 538, 539], "object": [2, 3, 4, 5, 6, 7, 9, 14, 15, 19, 23, 28, 36, 53, 56, 57, 60, 61, 64, 67, 156, 160, 163, 164, 167, 174, 175, 176, 177, 179, 214, 229, 238, 246, 247, 248, 249, 255, 256, 257, 263, 264, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 311, 326, 329, 330, 335, 338, 344, 346, 348, 349, 350, 360, 364, 368, 374, 375, 376, 377, 384, 386, 388, 390, 396, 402, 404, 406, 414, 416, 428, 430, 442, 444, 448, 452, 454, 456, 459, 461, 463, 467, 469, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 624, 625, 626, 627, 628, 629], "compiled_partition_handl": 2, "dnnl_graph_compiled_partition_t": [2, 304, 355, 365], "logical_tensor": [2, 5, 6, 7, 36, 178, 259, 260, 268, 274, 298, 301, 304, 362, 368, 373, 436, 438, 440, 442, 444, 446], "query_logical_tensor": [2, 36, 259, 260, 268, 274, 298, 301], "size_t": [2, 4, 5, 6, 8, 175, 176, 250, 251, 253, 254, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 274, 275, 284, 285, 288, 298, 299, 300, 301, 304, 321, 329, 330, 335, 349, 354, 355, 357, 359, 360, 362, 363, 364, 365, 367, 373, 392, 394, 398, 400, 406, 408, 414, 416, 418, 420, 422, 424, 434, 465, 467, 493, 495, 535, 538, 539, 579, 581, 624], "tid": [2, 4, 304, 355, 362], "const": [2, 3, 4, 5, 6, 7, 8, 14, 15, 32, 154, 156, 160, 167, 170, 175, 176, 177, 229, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 311, 314, 316, 317, 319, 329, 330, 331, 335, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 354, 355, 359, 360, 362, 363, 364, 365, 367, 368, 372, 373, 374, 375, 376, 377, 378, 384, 386, 388, 390, 392, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 420, 422, 424, 426, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 637], "std": [2, 3, 4, 5, 6, 8, 14, 15, 17, 35, 156, 167, 170, 175, 176, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 336, 341, 346, 372, 374, 375, 376, 377, 384, 386, 388, 390, 394, 396, 398, 400, 402, 404, 406, 410, 412, 414, 416, 418, 420, 422, 426, 428, 430, 432, 434, 436, 438, 442, 444, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 620, 624, 626, 627, 628, 629], "vector": [2, 3, 4, 5, 6, 15, 28, 29, 30, 35, 61, 62, 63, 81, 82, 156, 160, 167, 174, 175, 176, 177, 186, 189, 203, 228, 229, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 311, 330, 335, 336, 340, 345, 346, 372, 374, 375, 376, 377, 384, 386, 388, 390, 394, 396, 398, 400, 402, 404, 406, 410, 412, 414, 416, 418, 420, 422, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 624, 626, 627, 628, 629], "pair": [2, 26, 63, 175, 176, 257, 330, 335, 346, 355, 376, 377, 406, 538, 593, 601, 624], "get_inplace_port": 2, "void": [2, 3, 5, 7, 8, 14, 15, 17, 18, 32, 154, 167, 170, 175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 329, 330, 333, 335, 336, 341, 346, 347, 348, 349, 350, 354, 356, 357, 363, 367, 368, 372, 373, 376, 377, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 637], "execut": [2, 9, 11, 12, 14, 15, 16, 17, 18, 23, 29, 32, 34, 35, 36, 53, 58, 59, 60, 63, 65, 154, 172, 174, 175, 176, 177, 178, 209, 222, 223, 228, 229, 230, 231, 236, 237, 239, 240, 241, 242, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 311, 321, 329, 330, 335, 336, 341, 344, 346, 347, 349, 350, 354, 355, 362, 363, 365, 367, 368, 374, 375, 376, 377, 378, 384, 385, 386, 387, 388, 389, 390, 394, 396, 398, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 422, 428, 429, 430, 431, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 469, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 495, 497, 498, 499, 505, 507, 509, 511, 513, 516, 518, 520, 522, 524, 526, 528, 530, 532, 535, 540, 542, 544, 546, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 579, 582, 584, 587, 588, 590, 593, 595, 599, 601, 603, 605, 608, 610, 612, 614, 616, 617, 618, 620, 624, 625, 626, 628], "stream": [2, 17, 23, 29, 32, 35, 36, 58, 59, 154, 173, 175, 176, 178, 186, 189, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 309, 315, 329, 330, 335, 336, 346, 347, 355, 363, 367, 372, 374, 375, 376, 377, 378, 384, 386, 388, 390, 392, 394, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 428, 430, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 505, 507, 509, 511, 513, 516, 518, 520, 522, 524, 526, 528, 530, 532, 540, 542, 544, 546, 548, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 579, 582, 584, 588, 590, 593, 599, 601, 603, 605, 608, 610, 612, 614, 616, 618, 620, 626, 628], "astream": [2, 304, 347, 374, 375, 376, 377, 378, 505, 507, 509, 511, 513, 516, 518, 520, 522, 524, 526, 528, 530, 532, 540, 542, 544, 546, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 582, 584, 588, 590, 593, 599, 601, 603, 605, 608, 610, 612, 614, 618, 626, 628], "tensor": [2, 4, 5, 6, 9, 14, 17, 18, 19, 21, 25, 28, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 66, 67, 68, 70, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 141, 143, 145, 146, 147, 149, 150, 152, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 172, 175, 176, 177, 178, 179, 185, 193, 194, 199, 201, 202, 210, 212, 213, 214, 215, 216, 220, 238, 246, 247, 248, 249, 252, 255, 256, 257, 259, 260, 264, 268, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 304, 305, 309, 311, 313, 316, 317, 318, 319, 326, 328, 329, 331, 335, 337, 339, 342, 345, 348, 349, 353, 355, 360, 363, 364, 365, 367, 373, 374, 375, 384, 386, 388, 390, 392, 394, 396, 402, 404, 406, 410, 411, 412, 413, 416, 417, 422, 426, 428, 430, 432, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 497, 514, 516, 517, 519, 521, 523, 525, 527, 529, 538, 539, 579, 581, 583, 585, 587, 595, 623, 624], "input": [2, 3, 4, 5, 6, 12, 15, 16, 17, 19, 21, 23, 25, 27, 28, 31, 33, 36, 41, 45, 52, 53, 56, 58, 59, 60, 61, 62, 64, 66, 67, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 174, 175, 176, 177, 178, 179, 184, 185, 194, 203, 213, 215, 216, 226, 227, 228, 229, 252, 253, 254, 256, 257, 259, 260, 263, 265, 266, 268, 271, 273, 274, 277, 278, 284, 285, 288, 289, 293, 294, 298, 301, 303, 304, 311, 320, 329, 335, 340, 350, 355, 360, 362, 363, 364, 365, 367, 368, 374, 375, 392, 394, 396, 398, 400, 404, 406, 414, 418, 420, 422, 426, 428, 432, 434, 436, 438, 440, 442, 444, 446, 450, 452, 465, 467, 471, 473, 475, 483, 485, 499, 506, 508, 537, 538, 539, 545, 547, 561, 563, 565, 567, 573, 575, 581, 587, 595, 625, 627, 629], "output": [2, 3, 4, 5, 6, 9, 11, 12, 14, 19, 21, 22, 23, 25, 28, 31, 33, 34, 35, 36, 38, 41, 45, 46, 48, 49, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 66, 67, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 174, 175, 176, 177, 179, 194, 213, 215, 216, 226, 227, 228, 229, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 266, 268, 270, 271, 273, 274, 277, 278, 280, 284, 285, 286, 289, 292, 293, 294, 298, 299, 300, 301, 303, 304, 311, 312, 313, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 360, 362, 363, 364, 365, 367, 368, 374, 375, 376, 377, 378, 392, 394, 396, 398, 400, 404, 406, 408, 410, 412, 414, 418, 420, 422, 426, 428, 432, 434, 436, 438, 440, 442, 444, 446, 450, 452, 456, 465, 467, 469, 471, 473, 475, 481, 483, 485, 493, 495, 499, 506, 508, 537, 538, 539, 545, 547, 561, 563, 565, 567, 573, 575, 587, 594, 595, 624, 625, 627, 629], "empti": [2, 3, 4, 7, 9, 14, 17, 23, 59, 121, 125, 126, 127, 128, 129, 130, 131, 175, 176, 178, 179, 190, 193, 211, 212, 214, 238, 256, 257, 285, 311, 313, 330, 335, 349, 355, 360, 363, 367, 376, 404, 406, 467, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 624, 625, 626, 627, 628, 629], "queri": [2, 14, 15, 17, 18, 26, 28, 29, 30, 32, 35, 36, 52, 53, 58, 59, 61, 66, 154, 156, 164, 167, 174, 175, 176, 177, 179, 209, 214, 222, 223, 229, 236, 237, 238, 239, 240, 253, 254, 257, 258, 259, 260, 268, 274, 298, 301, 306, 311, 321, 329, 330, 333, 335, 336, 346, 349, 355, 356, 357, 372, 376, 377, 398, 400, 406, 408, 432, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 538, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 581, 583, 585, 589, 591, 593, 595, 597, 598, 600, 601, 602, 604, 606, 607, 609, 611, 613, 615, 619, 624, 627, 629], "logic": [2, 4, 5, 6, 7, 18, 19, 25, 28, 33, 34, 35, 41, 42, 44, 52, 53, 56, 59, 64, 66, 90, 153, 155, 157, 158, 162, 165, 166, 168, 174, 177, 194, 199, 201, 210, 213, 228, 229, 259, 260, 268, 273, 274, 298, 301, 304, 309, 311, 326, 329, 353, 355, 360, 364, 365, 368, 432, 436, 438, 440, 442, 444, 446, 539, 581, 595], "id": [2, 4, 5, 6, 12, 22, 27, 36, 156, 228, 229, 259, 260, 268, 274, 275, 276, 298, 299, 300, 301, 304, 330, 355, 362, 364, 365, 376, 434, 448, 493, 495, 538, 539, 598], "If": [2, 4, 9, 12, 14, 17, 19, 22, 24, 26, 27, 38, 39, 41, 45, 48, 49, 50, 53, 56, 57, 59, 64, 72, 75, 79, 82, 83, 86, 87, 89, 90, 92, 123, 125, 126, 127, 128, 129, 130, 131, 133, 136, 138, 139, 144, 151, 155, 164, 165, 175, 176, 177, 178, 215, 216, 229, 257, 259, 260, 274, 285, 298, 311, 326, 329, 330, 333, 335, 341, 348, 349, 355, 356, 357, 362, 376, 377, 394, 406, 442, 444, 467, 473, 557, 559, 581, 587, 595, 602, 620, 623, 624], "doesn": [2, 4, 7, 29, 47, 67, 154, 162, 175, 176, 194, 207, 208, 257, 329, 330, 340, 346, 355, 362, 368, 376, 377, 406, 432, 436, 438, 442, 444, 450, 499, 539, 573, 575, 579, 598], "t": [2, 4, 5, 6, 7, 26, 27, 29, 31, 32, 47, 52, 58, 60, 64, 67, 106, 107, 154, 160, 162, 164, 175, 176, 178, 179, 184, 185, 194, 207, 208, 246, 250, 253, 254, 257, 258, 263, 265, 266, 267, 279, 280, 282, 285, 294, 302, 304, 311, 314, 329, 330, 340, 346, 347, 352, 355, 362, 368, 372, 376, 377, 378, 384, 392, 398, 400, 406, 408, 414, 422, 432, 436, 438, 442, 444, 450, 454, 456, 461, 467, 485, 493, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "belong": [2, 160, 311, 355, 376, 377, 593, 601, 620], "ani": [2, 6, 9, 10, 12, 13, 14, 15, 18, 19, 21, 23, 25, 28, 29, 30, 33, 35, 36, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 78, 79, 93, 94, 102, 103, 104, 105, 109, 112, 117, 118, 124, 132, 134, 135, 137, 143, 145, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 178, 179, 182, 191, 195, 199, 201, 203, 204, 207, 208, 212, 213, 214, 238, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 311, 329, 335, 341, 349, 355, 362, 365, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 428, 430, 432, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 506, 508, 519, 521, 523, 525, 527, 529, 535, 539, 545, 547, 548, 551, 553, 555, 561, 563, 565, 567, 573, 575, 579, 581, 593, 595, 600, 606, 617, 627, 629], "except": [2, 3, 4, 9, 10, 18, 21, 23, 24, 25, 52, 80, 104, 156, 164, 175, 176, 177, 179, 182, 186, 189, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 321, 341, 377, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 432, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 536, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 589, 591, 593, 600, 602, 604, 606, 609, 611, 613, 615, 617, 619, 624, 625, 627, 629, 631], "rais": [2, 4], "api": [2, 3, 4, 6, 9, 11, 13, 14, 17, 18, 19, 21, 25, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 64, 65, 66, 67, 154, 157, 158, 161, 162, 163, 164, 165, 166, 168, 173, 174, 175, 176, 177, 178, 215, 216, 228, 257, 259, 260, 268, 273, 274, 275, 298, 299, 301, 304, 306, 310, 311, 314, 321, 322, 329, 335, 340, 341, 355, 357, 359, 360, 362, 365, 376, 377, 378, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 435, 439, 440, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 502, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 536, 539, 541, 543, 545, 547, 548, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 587, 589, 591, 593, 595, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 617, 619, 627, 629], "The": [2, 3, 4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 194, 203, 204, 207, 208, 209, 213, 215, 216, 229, 236, 237, 239, 240, 256, 257, 267, 271, 273, 277, 288, 294, 303, 306, 311, 312, 314, 317, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 335, 336, 340, 341, 342, 346, 347, 349, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 367, 368, 370, 374, 375, 376, 377, 378, 380, 390, 391, 392, 394, 396, 404, 406, 408, 409, 414, 418, 420, 422, 426, 428, 432, 434, 436, 438, 442, 444, 450, 467, 469, 471, 473, 485, 493, 495, 499, 506, 508, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 536, 538, 539, 545, 547, 548, 553, 555, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 587, 593, 595, 597, 598, 601, 602, 606, 609, 611, 617, 619, 620, 624, 627, 629], "uniqu": [2, 4, 5, 6, 15, 36, 125, 126, 127, 128, 129, 130, 131, 266, 355, 362, 364, 539, 587], "requir": [2, 4, 9, 14, 15, 17, 18, 19, 21, 22, 23, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 164, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 203, 209, 215, 216, 228, 229, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 311, 312, 320, 329, 330, 335, 336, 346, 349, 355, 362, 376, 377, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 426, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 506, 508, 510, 512, 541, 543, 545, 547, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 581, 583, 585, 587, 598, 624, 627, 629], "return": [2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 17, 23, 24, 29, 30, 31, 36, 44, 59, 60, 63, 66, 136, 147, 148, 154, 156, 157, 170, 175, 176, 177, 207, 208, 209, 229, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 374, 375, 376, 377, 378, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 426, 428, 430, 432, 434, 436, 438, 442, 444, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 536, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 587, 589, 591, 593, 595, 597, 598, 600, 601, 602, 604, 606, 607, 609, 611, 613, 615, 617, 619, 620, 624, 627, 629], "hint": [2, 9, 23, 59, 187, 188, 253, 254, 258, 294, 341, 355, 398, 400, 408, 485, 501, 506, 510, 519, 521, 525, 527, 531, 538, 541, 545, 551, 553, 557, 561, 565, 569, 573, 583, 589, 604, 609, 613, 627], "place": [2, 14, 19, 21, 22, 24, 33, 56, 59, 64, 147, 148, 155, 166, 168, 176, 220, 221, 247, 248, 249, 272, 273, 276, 279, 288, 289, 290, 296, 311, 312, 316, 320, 323, 326, 341, 345, 355, 386, 388, 390, 394, 418, 420, 430, 432, 448, 454, 475, 477, 489, 512, 517, 538, 543, 587, 618], "It": [2, 3, 12, 14, 15, 17, 18, 21, 23, 26, 29, 31, 35, 36, 38, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 58, 59, 60, 63, 65, 87, 89, 90, 104, 106, 108, 120, 123, 134, 152, 153, 154, 155, 159, 167, 175, 176, 177, 178, 202, 207, 208, 210, 214, 238, 257, 274, 304, 312, 323, 326, 329, 330, 335, 336, 341, 355, 360, 376, 406, 414, 432, 434, 436, 438, 442, 444, 471, 473, 493, 495, 506, 510, 519, 521, 525, 527, 531, 538, 539, 541, 545, 551, 553, 557, 561, 565, 569, 573, 579, 581, 583, 589, 593, 602, 604, 609, 613, 627], "indic": [2, 3, 4, 14, 18, 27, 28, 31, 36, 42, 44, 53, 60, 66, 67, 81, 82, 89, 99, 106, 107, 125, 126, 127, 128, 129, 130, 131, 157, 158, 164, 165, 167, 176, 177, 193, 194, 203, 212, 228, 229, 260, 266, 277, 286, 289, 303, 311, 317, 319, 329, 331, 335, 340, 349, 355, 365, 422, 432, 436, 438, 442, 444, 450, 469, 475, 499, 506, 508, 519, 521, 523, 525, 527, 529, 538, 545, 547, 561, 563, 565, 567, 573, 575, 579, 581, 583, 585, 587, 595, 624, 627, 629], "can": [2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 84, 88, 98, 99, 106, 108, 110, 112, 113, 116, 119, 136, 139, 147, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 182, 194, 203, 204, 213, 214, 236, 237, 238, 241, 257, 267, 273, 277, 288, 294, 303, 306, 311, 312, 313, 316, 317, 318, 319, 320, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 349, 355, 356, 357, 362, 365, 376, 406, 414, 415, 422, 426, 432, 434, 436, 438, 442, 444, 450, 451, 471, 473, 485, 493, 499, 500, 512, 538, 543, 548, 573, 575, 579, 581, 586, 587, 593, 595, 598, 624, 629], "share": [2, 15, 17, 23, 32, 36, 53, 60, 67, 154, 158, 160, 164, 175, 176, 177, 179, 203, 217, 218, 243, 244, 253, 254, 257, 258, 355, 398, 400, 406, 408, 538], "same": [2, 4, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 27, 28, 31, 32, 33, 35, 36, 41, 42, 44, 52, 53, 56, 59, 60, 64, 66, 67, 74, 76, 80, 81, 84, 89, 97, 99, 106, 107, 147, 152, 155, 156, 158, 161, 162, 163, 164, 165, 168, 172, 175, 176, 177, 182, 183, 194, 203, 213, 215, 216, 229, 236, 237, 253, 254, 255, 257, 258, 266, 273, 287, 294, 311, 312, 313, 314, 317, 319, 320, 323, 326, 329, 330, 331, 333, 335, 346, 347, 355, 356, 362, 364, 376, 377, 378, 394, 396, 398, 400, 402, 406, 408, 418, 420, 426, 432, 471, 473, 485, 512, 519, 521, 523, 525, 527, 529, 538, 539, 543, 548, 581, 583, 585, 587, 593, 598, 601], "buffer": [2, 7, 9, 12, 16, 17, 18, 24, 36, 59, 67, 166, 167, 174, 175, 176, 217, 218, 228, 229, 236, 237, 243, 244, 246, 247, 248, 249, 251, 252, 255, 256, 257, 259, 260, 264, 265, 266, 268, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 302, 304, 329, 330, 335, 346, 349, 350, 355, 362, 368, 376, 377, 384, 386, 388, 390, 394, 402, 404, 406, 416, 420, 428, 430, 432, 434, 448, 452, 454, 456, 459, 461, 463, 467, 475, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 538, 579, 581, 624, 625], "In": [2, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 41, 42, 52, 53, 56, 58, 59, 60, 61, 63, 64, 67, 81, 82, 112, 139, 154, 155, 156, 160, 162, 163, 164, 166, 168, 173, 174, 175, 177, 178, 194, 213, 215, 216, 224, 225, 228, 241, 246, 249, 255, 256, 259, 260, 263, 268, 271, 272, 274, 278, 280, 282, 290, 298, 301, 302, 311, 312, 323, 326, 329, 330, 336, 346, 355, 368, 376, 377, 384, 386, 388, 390, 394, 396, 402, 404, 414, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 456, 461, 471, 473, 477, 489, 493, 497, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 538, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 587, 589, 591, 597, 600, 602, 604, 606, 609, 611, 613, 615, 619, 624, 625, 627, 629], "help": [2, 15, 23, 36, 93, 153, 175, 176, 257, 259, 260, 268, 274, 298, 301, 355, 406, 538], "reduc": [2, 14, 15, 17, 18, 23, 26, 28, 34, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 59, 60, 125, 126, 127, 128, 129, 130, 131, 156, 159, 161, 172, 236, 237, 263, 271, 306, 335, 355, 414, 415, 428, 538, 587, 639], "footprint": [2, 17, 53, 168, 172, 236, 237, 355, 538], "improv": [2, 12, 14, 19, 24, 26, 31, 33, 41, 53, 56, 59, 60, 64, 74, 99, 106, 107, 139, 177, 263, 311, 355, 370, 414, 538, 587], "local": [2, 17, 34, 155, 174, 184, 185, 228, 229, 250, 251, 253, 254, 258, 281, 327, 355, 383, 392, 398, 400, 408, 460, 471, 538, 568, 569, 570, 571, 598, 638], "But": [2, 23, 63, 263, 355, 362, 414, 436, 438, 440, 442, 444, 446, 538], "sinc": [2, 14, 15, 27, 35, 44, 63, 158, 175, 176, 177, 178, 179, 194, 257, 263, 272, 273, 277, 290, 311, 336, 355, 406, 414, 430, 432, 450, 471, 473, 477, 499, 538], "librari": [2, 3, 4, 6, 7, 9, 11, 13, 14, 15, 18, 24, 26, 28, 29, 32, 34, 35, 36, 40, 52, 58, 59, 60, 61, 62, 87, 89, 90, 112, 123, 153, 154, 155, 156, 157, 165, 170, 173, 178, 186, 189, 199, 201, 202, 209, 210, 215, 216, 220, 221, 236, 237, 239, 240, 270, 273, 329, 330, 341, 346, 355, 357, 358, 360, 362, 365, 366, 368, 376, 377, 426, 432, 434, 450, 471, 473, 493, 499, 535, 538, 539, 548, 579, 593, 617, 620], "mai": [2, 6, 12, 13, 14, 15, 18, 21, 22, 23, 24, 28, 30, 31, 32, 33, 36, 40, 42, 44, 52, 53, 59, 63, 65, 147, 148, 154, 155, 156, 160, 161, 162, 172, 175, 176, 178, 179, 202, 203, 204, 210, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 311, 314, 318, 329, 335, 340, 341, 347, 355, 362, 365, 378, 384, 386, 388, 390, 392, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 432, 448, 450, 452, 454, 456, 458, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 506, 508, 519, 521, 523, 525, 527, 529, 538, 545, 547, 551, 553, 555, 561, 563, 565, 567, 573, 575, 579, 581, 587, 594, 600, 606, 627, 629, 630], "have": [2, 3, 6, 9, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 31, 33, 36, 41, 42, 52, 58, 59, 61, 63, 64, 67, 81, 89, 147, 148, 152, 155, 156, 158, 159, 161, 162, 168, 172, 174, 177, 179, 294, 311, 313, 317, 318, 319, 329, 330, 331, 335, 340, 341, 345, 346, 355, 360, 362, 365, 376, 377, 414, 426, 432, 450, 471, 485, 493, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 538, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 587, 589, 591, 593, 595, 597, 598, 600, 601, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "global": [2, 15, 17, 31, 159, 215, 216, 372, 373, 383, 538, 624], "view": [2, 62, 147, 148, 164, 265, 266, 294, 355, 418, 420, 485, 538], "user": [2, 3, 4, 6, 7, 9, 12, 13, 14, 15, 18, 19, 23, 24, 25, 26, 28, 32, 34, 35, 36, 42, 52, 56, 57, 58, 59, 61, 63, 64, 67, 106, 154, 156, 157, 159, 160, 162, 163, 168, 170, 174, 175, 176, 177, 207, 208, 215, 216, 229, 236, 237, 246, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 268, 271, 273, 274, 278, 280, 282, 285, 288, 290, 294, 298, 301, 302, 326, 329, 330, 335, 346, 355, 360, 362, 365, 368, 376, 377, 384, 392, 394, 396, 398, 400, 404, 406, 408, 418, 420, 422, 426, 428, 432, 434, 436, 438, 440, 442, 444, 446, 452, 456, 461, 467, 471, 473, 477, 485, 493, 497, 538, 557, 559, 579, 586, 593, 620], "": [2, 4, 5, 9, 12, 14, 15, 17, 18, 21, 22, 23, 24, 25, 27, 28, 32, 33, 34, 35, 36, 42, 44, 52, 53, 56, 58, 59, 61, 63, 64, 65, 67, 89, 95, 99, 106, 107, 114, 115, 147, 153, 154, 160, 162, 166, 172, 175, 176, 177, 202, 210, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 311, 329, 330, 335, 336, 355, 357, 362, 364, 376, 384, 386, 388, 390, 392, 394, 396, 397, 398, 400, 402, 404, 406, 408, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 442, 444, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 497, 499, 538, 579, 587, 593], "applic": [2, 9, 10, 11, 13, 14, 15, 17, 18, 23, 24, 26, 28, 30, 31, 34, 35, 36, 40, 41, 58, 59, 63, 65, 155, 156, 159, 173, 175, 176, 177, 178, 179, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 329, 341, 355, 370, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 472, 473, 474, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 538, 581], "possibl": [2, 15, 18, 19, 21, 23, 24, 25, 29, 30, 32, 33, 56, 58, 59, 60, 63, 64, 67, 154, 155, 161, 164, 166, 168, 174, 177, 294, 311, 312, 317, 319, 320, 322, 323, 324, 326, 327, 329, 331, 332, 335, 337, 339, 340, 341, 342, 343, 355, 432, 471, 485, 508, 510, 512, 519, 521, 523, 527, 529, 533, 538, 541, 543, 547, 555, 557, 559, 563, 567, 571, 575, 581, 585, 591, 600, 606, 611, 615, 627, 629], "i": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 98, 99, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 139, 140, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 179, 184, 185, 190, 193, 194, 199, 200, 201, 203, 204, 207, 208, 209, 212, 213, 214, 215, 216, 226, 227, 234, 235, 236, 237, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 311, 312, 313, 314, 317, 319, 320, 323, 326, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 370, 374, 375, 376, 377, 378, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 472, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 538, 539, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 587, 589, 591, 593, 595, 597, 598, 600, 602, 604, 606, 609, 611, 613, 615, 617, 619, 620, 624, 625, 627, 629], "other": [2, 4, 9, 14, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 31, 32, 41, 52, 57, 58, 59, 61, 62, 63, 65, 66, 67, 89, 154, 155, 156, 157, 160, 162, 164, 165, 166, 168, 176, 177, 178, 179, 194, 207, 208, 213, 236, 237, 252, 253, 264, 265, 266, 284, 294, 329, 335, 341, 355, 360, 362, 364, 394, 398, 414, 416, 420, 422, 432, 458, 465, 471, 473, 485, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "thi": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 67, 76, 77, 81, 87, 98, 99, 106, 107, 123, 139, 147, 152, 154, 155, 156, 159, 160, 162, 164, 166, 172, 173, 174, 175, 176, 177, 178, 179, 194, 215, 216, 224, 225, 236, 237, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 311, 312, 314, 316, 323, 326, 329, 330, 335, 338, 340, 341, 346, 347, 349, 355, 357, 358, 359, 362, 363, 365, 367, 368, 376, 377, 378, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 536, 538, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 586, 587, 589, 591, 595, 597, 598, 600, 602, 604, 606, 609, 611, 613, 615, 619, 620, 624, 625, 627, 629], "case": [2, 4, 6, 7, 9, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 31, 32, 33, 34, 36, 41, 44, 52, 53, 56, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 71, 91, 98, 101, 108, 121, 122, 124, 132, 139, 147, 154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 168, 172, 175, 176, 177, 178, 194, 246, 253, 254, 256, 257, 263, 267, 271, 273, 278, 280, 282, 284, 285, 290, 302, 311, 312, 317, 319, 323, 326, 329, 330, 331, 335, 341, 346, 355, 362, 365, 368, 376, 377, 384, 394, 398, 400, 404, 406, 414, 422, 426, 428, 432, 434, 436, 438, 440, 442, 444, 446, 452, 456, 461, 465, 467, 471, 477, 493, 497, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 536, 538, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 587, 589, 591, 597, 600, 602, 604, 606, 609, 611, 613, 615, 619, 620, 624, 625, 627, 629], "should": [2, 4, 6, 11, 14, 15, 17, 18, 19, 21, 23, 25, 26, 28, 33, 35, 36, 44, 49, 53, 56, 58, 59, 61, 63, 64, 66, 67, 70, 72, 73, 75, 76, 80, 82, 83, 86, 88, 89, 90, 98, 99, 104, 105, 113, 116, 119, 125, 126, 127, 128, 129, 130, 131, 136, 149, 155, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176, 177, 202, 203, 210, 236, 237, 249, 250, 257, 258, 265, 267, 273, 277, 284, 294, 311, 314, 321, 329, 336, 340, 341, 347, 349, 354, 355, 360, 362, 363, 365, 367, 374, 375, 378, 390, 392, 394, 396, 406, 408, 422, 426, 432, 434, 436, 438, 440, 442, 444, 446, 450, 465, 471, 485, 493, 506, 508, 517, 538, 545, 547, 548, 561, 563, 565, 567, 573, 575, 579, 586, 587, 595, 597, 598, 602, 619, 627, 629], "take": [2, 12, 13, 14, 15, 18, 23, 26, 28, 29, 30, 33, 42, 44, 52, 53, 58, 59, 62, 85, 86, 87, 89, 90, 112, 123, 125, 126, 127, 128, 129, 130, 131, 136, 156, 158, 159, 160, 177, 178, 273, 312, 323, 326, 335, 341, 355, 390, 392, 394, 432, 436, 440, 442, 444, 446, 538], "pass": [2, 3, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 28, 32, 34, 35, 36, 44, 52, 56, 58, 59, 64, 65, 66, 67, 99, 106, 147, 154, 157, 158, 160, 162, 163, 164, 175, 176, 178, 179, 194, 215, 216, 226, 227, 250, 257, 258, 263, 267, 269, 273, 284, 294, 299, 300, 311, 317, 319, 324, 328, 329, 330, 335, 341, 349, 355, 360, 362, 376, 377, 392, 393, 394, 395, 396, 406, 408, 414, 422, 424, 426, 432, 434, 465, 471, 485, 493, 495, 521, 523, 527, 529, 535, 537, 538, 548, 579, 587, 593, 595, 601, 617, 620, 624], "differ": [2, 4, 12, 14, 15, 17, 18, 21, 23, 24, 26, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 63, 66, 67, 70, 84, 88, 98, 112, 113, 116, 119, 134, 146, 147, 148, 149, 156, 160, 161, 162, 164, 167, 172, 175, 176, 177, 184, 185, 202, 203, 204, 210, 236, 237, 246, 253, 254, 256, 257, 258, 271, 278, 280, 282, 289, 290, 294, 302, 312, 321, 323, 326, 329, 349, 355, 362, 384, 390, 394, 398, 400, 404, 406, 408, 414, 422, 428, 432, 436, 438, 442, 444, 452, 456, 461, 471, 473, 475, 477, 485, 497, 517, 538, 548, 581, 597, 598, 602, 619, 624], "avoid": [2, 15, 16, 21, 23, 24, 25, 30, 31, 35, 42, 58, 59, 63, 73, 74, 75, 159, 161, 175, 176, 249, 253, 254, 257, 258, 355, 390, 398, 400, 406, 408, 471, 538], "overwrit": [2, 21, 26, 28, 61, 67, 161, 163, 168, 355, 538], "which": [2, 5, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 52, 53, 56, 58, 59, 60, 61, 63, 64, 67, 71, 80, 81, 87, 89, 90, 97, 99, 106, 107, 108, 110, 111, 123, 125, 126, 127, 128, 129, 130, 131, 139, 140, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 172, 174, 175, 176, 177, 178, 194, 199, 201, 203, 213, 257, 259, 260, 265, 266, 267, 268, 270, 271, 273, 274, 277, 287, 288, 294, 298, 301, 311, 312, 314, 317, 319, 320, 329, 331, 335, 338, 341, 342, 343, 344, 347, 354, 355, 357, 358, 362, 363, 364, 368, 378, 406, 418, 420, 422, 426, 428, 432, 434, 436, 438, 442, 444, 450, 471, 472, 473, 485, 493, 506, 510, 517, 519, 521, 525, 527, 531, 538, 539, 541, 545, 548, 551, 553, 557, 561, 565, 569, 573, 579, 583, 589, 595, 598, 602, 604, 609, 611, 613, 615, 619, 627], "probabl": [2, 12, 14, 42, 52, 67, 311, 335, 355, 538, 595], "caus": [2, 10, 15, 58, 59, 355, 358, 535, 538, 548, 579, 593, 617], "unexpect": [2, 24, 261, 262, 270, 299, 300, 314, 347, 355, 378, 410, 412, 426, 493, 495, 538], "incorrect": [2, 17, 23, 178, 179, 209, 239, 240, 269, 285, 288, 355, 424, 432, 467, 538], "result": [2, 9, 11, 12, 14, 15, 17, 19, 21, 23, 24, 27, 28, 30, 31, 33, 34, 36, 42, 52, 53, 56, 59, 60, 61, 63, 64, 66, 67, 97, 125, 126, 127, 128, 129, 130, 131, 146, 156, 157, 158, 160, 161, 163, 166, 172, 175, 176, 177, 179, 215, 216, 229, 230, 231, 252, 257, 259, 260, 263, 265, 266, 267, 270, 273, 274, 275, 284, 285, 286, 289, 298, 299, 304, 306, 311, 314, 329, 335, 347, 349, 355, 378, 394, 396, 406, 414, 415, 422, 465, 467, 469, 473, 475, 495, 538, 581, 587, 594, 595, 598, 624], "list": [2, 5, 6, 15, 22, 23, 33, 35, 58, 59, 65, 71, 72, 81, 82, 83, 84, 85, 86, 87, 89, 104, 105, 114, 115, 123, 125, 126, 127, 128, 129, 130, 131, 147, 148, 155, 160, 164, 169, 178, 179, 186, 189, 304, 341, 355, 363, 365, 367, 432, 436, 438, 442, 444], "run": [2, 9, 11, 15, 17, 18, 19, 22, 23, 31, 35, 56, 59, 60, 62, 63, 67, 73, 155, 175, 176, 179, 236, 237, 257, 265, 266, 267, 277, 285, 288, 303, 304, 325, 330, 346, 347, 361, 363, 367, 374, 375, 396, 397, 406, 414, 418, 420, 422, 426, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 467, 468, 471, 473, 493, 499], "over": [2, 12, 15, 17, 23, 25, 29, 30, 34, 59, 60, 62, 64, 72, 80, 82, 83, 86, 106, 107, 125, 126, 127, 128, 129, 130, 131, 159, 160, 164, 166, 175, 176, 177, 178, 257, 313, 316, 341, 343, 374, 375, 406, 436, 442, 444, 517, 597, 613, 615], "graph_handl": 3, "engin": [3, 6, 7, 9, 14, 15, 23, 26, 28, 32, 34, 35, 36, 57, 58, 59, 61, 67, 134, 154, 160, 164, 167, 175, 176, 178, 192, 202, 209, 210, 228, 229, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 309, 311, 312, 313, 315, 316, 317, 319, 320, 323, 324, 326, 327, 328, 329, 330, 331, 332, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 353, 355, 357, 360, 363, 365, 367, 368, 372, 373, 374, 375, 376, 377, 378, 383, 384, 386, 388, 390, 392, 394, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 425, 427, 428, 430, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 502, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 534, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 583, 585, 587, 589, 591, 593, 595, 597, 598, 600, 601, 602, 604, 606, 607, 609, 611, 613, 615, 617, 619, 627, 629], "kind": [3, 5, 6, 9, 14, 16, 19, 23, 26, 28, 32, 33, 35, 36, 53, 56, 60, 61, 64, 154, 157, 158, 163, 164, 165, 166, 167, 175, 176, 178, 179, 184, 185, 192, 193, 206, 212, 214, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 238, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 311, 312, 313, 317, 319, 320, 321, 323, 324, 326, 327, 329, 330, 331, 332, 335, 336, 337, 339, 340, 342, 343, 346, 357, 359, 360, 364, 365, 372, 373, 376, 377, 384, 386, 388, 390, 392, 394, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 626, 627, 628, 629], "engine_kind": [3, 26, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 264, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 360, 384, 386, 388, 390, 392, 394, 398, 400, 402, 404, 416, 428, 430, 432, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499], "fpmath_mod": [3, 13, 15, 175, 178, 303, 322, 341, 372, 499, 595], "mode": [3, 9, 15, 17, 19, 21, 23, 34, 35, 36, 60, 73, 87, 89, 90, 95, 96, 104, 105, 112, 123, 139, 156, 159, 160, 164, 179, 182, 183, 195, 196, 197, 203, 204, 224, 225, 226, 227, 234, 235, 236, 237, 246, 247, 249, 280, 281, 282, 299, 302, 303, 304, 309, 311, 315, 320, 328, 335, 341, 353, 360, 372, 373, 383, 384, 385, 386, 387, 390, 404, 405, 422, 428, 429, 430, 431, 448, 449, 454, 455, 456, 457, 459, 460, 461, 462, 471, 475, 476, 477, 478, 483, 484, 489, 490, 493, 497, 498, 499, 501, 548, 595], "set_fpmath_mod": [3, 13, 15, 36, 53, 303, 499, 595], "bool": [3, 4, 5, 6, 8, 15, 71, 72, 79, 92, 99, 106, 107, 112, 121, 125, 126, 127, 128, 129, 130, 131, 133, 138, 144, 147, 151, 170, 175, 176, 177, 257, 261, 262, 263, 267, 268, 284, 285, 286, 287, 294, 301, 304, 329, 372, 406, 410, 412, 414, 422, 440, 446, 465, 467, 469, 471, 485, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629], "apply_to_int": [3, 15, 53, 303, 304, 311, 360, 499, 595], "fals": [3, 4, 6, 11, 15, 47, 52, 71, 72, 79, 92, 98, 99, 106, 107, 112, 121, 125, 126, 127, 128, 129, 130, 131, 133, 138, 144, 147, 151, 175, 176, 257, 259, 260, 268, 274, 286, 294, 298, 301, 406, 440, 446, 469, 485, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "get_fpmath_mod": [3, 595], "statu": [3, 6, 23, 24, 34, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 175, 176, 240, 252, 253, 257, 264, 266, 273, 275, 284, 285, 299, 300, 304, 309, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 357, 358, 360, 362, 363, 364, 365, 367, 368, 372, 373, 376, 378, 398, 406, 416, 420, 432, 465, 467, 493, 495, 536], "add_op": [3, 36, 259, 260, 274, 298, 360, 436, 438, 442, 444], "op": [3, 6, 9, 12, 15, 31, 34, 38, 39, 41, 45, 48, 49, 50, 52, 58, 59, 60, 72, 77, 99, 105, 106, 107, 153, 175, 176, 179, 204, 207, 208, 209, 215, 216, 240, 247, 248, 249, 252, 256, 257, 259, 260, 268, 271, 274, 277, 278, 283, 285, 288, 292, 298, 301, 303, 304, 309, 311, 314, 347, 349, 353, 360, 365, 373, 378, 383, 386, 388, 396, 404, 406, 428, 436, 438, 441, 442, 444, 447, 450, 452, 463, 467, 473, 481, 499, 587, 595, 624], "allow_except": 3, "true": [3, 4, 5, 6, 8, 11, 13, 15, 52, 53, 59, 65, 67, 71, 72, 79, 92, 98, 99, 106, 107, 112, 121, 125, 126, 127, 128, 129, 130, 131, 133, 138, 144, 147, 151, 155, 175, 176, 177, 257, 259, 260, 274, 286, 294, 298, 303, 311, 362, 406, 469, 485, 499, 548, 581, 595, 597, 602, 620, 624], "final": [3, 14, 17, 23, 33, 36, 60, 63, 174, 175, 176, 177, 184, 194, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 304, 329, 349, 360, 362, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 414, 416, 426, 428, 430, 432, 434, 436, 438, 442, 444, 448, 452, 454, 456, 459, 461, 463, 465, 473, 475, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 624], "is_fin": 3, "get_partit": [3, 6, 36, 259, 260, 274, 298, 365, 436, 438, 442, 444], "polici": [3, 6, 17, 52, 208, 236, 237, 304, 360, 442, 444], "fusion": [3, 14, 18, 19, 34, 35, 207, 208, 288, 305, 311, 450, 499], "creat": [3, 6, 7, 9, 14, 15, 17, 19, 22, 23, 28, 32, 34, 35, 36, 41, 42, 52, 57, 58, 59, 61, 64, 67, 97, 154, 155, 156, 157, 159, 163, 164, 167, 174, 175, 176, 177, 178, 179, 202, 210, 214, 228, 229, 236, 237, 238, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 311, 312, 313, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 360, 362, 363, 365, 367, 368, 374, 375, 376, 377, 378, 384, 385, 386, 387, 388, 389, 390, 392, 394, 396, 398, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 422, 428, 429, 430, 431, 436, 438, 440, 442, 444, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 469, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 495, 497, 498, 499, 579, 581, 587, 595, 598, 602, 617], "new": [3, 6, 18, 22, 26, 35, 36, 60, 167, 170, 175, 176, 184, 185, 194, 221, 257, 329, 333, 335, 355, 356, 357, 360, 362, 365, 368, 406, 436, 442, 444, 548, 581], "float": [3, 5, 9, 10, 14, 15, 16, 24, 28, 31, 34, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 59, 60, 67, 74, 75, 87, 123, 162, 163, 166, 167, 172, 175, 176, 179, 182, 183, 190, 195, 196, 200, 211, 229, 234, 235, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 309, 311, 312, 314, 315, 320, 323, 326, 327, 329, 337, 339, 340, 341, 345, 347, 360, 364, 372, 378, 383, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 415, 416, 418, 420, 422, 424, 428, 430, 432, 434, 438, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 587, 589, 591, 595, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "point": [3, 9, 10, 14, 16, 21, 22, 23, 24, 28, 31, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 59, 60, 67, 87, 89, 123, 160, 162, 163, 166, 172, 174, 175, 179, 182, 183, 190, 195, 196, 200, 211, 227, 229, 234, 235, 263, 277, 303, 309, 311, 315, 329, 335, 340, 341, 360, 364, 383, 396, 414, 415, 418, 420, 422, 450, 473, 499, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 587, 595, 597, 627, 629], "math": [3, 9, 31, 36, 179, 195, 196, 254, 265, 266, 294, 309, 311, 315, 341, 360, 383, 400, 485], "all": [3, 4, 6, 9, 13, 14, 15, 17, 21, 22, 23, 25, 28, 31, 32, 33, 35, 41, 42, 44, 49, 52, 53, 58, 60, 63, 67, 77, 80, 82, 84, 85, 86, 112, 125, 126, 127, 128, 129, 130, 131, 136, 139, 147, 155, 158, 159, 160, 162, 163, 164, 166, 168, 172, 173, 174, 175, 176, 177, 178, 179, 197, 203, 204, 224, 225, 229, 236, 237, 257, 259, 260, 265, 266, 267, 268, 273, 274, 277, 285, 288, 298, 301, 303, 304, 311, 312, 313, 322, 323, 326, 329, 330, 336, 340, 341, 344, 349, 357, 358, 360, 362, 363, 376, 377, 406, 414, 418, 420, 422, 432, 434, 436, 438, 440, 442, 444, 446, 450, 467, 473, 493, 499, 506, 508, 510, 519, 521, 523, 525, 527, 529, 541, 545, 547, 551, 553, 555, 557, 561, 563, 565, 567, 573, 575, 581, 586, 593, 597, 598, 617, 624, 627, 629], "inherit": [3, 63, 288, 329, 360, 473], "set": [3, 5, 6, 7, 9, 11, 13, 14, 15, 17, 18, 19, 22, 23, 26, 27, 28, 29, 30, 31, 34, 35, 36, 40, 52, 53, 56, 59, 60, 62, 63, 64, 67, 71, 81, 99, 106, 107, 121, 125, 126, 127, 128, 129, 130, 131, 136, 139, 159, 160, 162, 164, 166, 174, 175, 176, 178, 179, 186, 189, 247, 248, 252, 253, 257, 259, 260, 265, 266, 274, 276, 279, 284, 286, 288, 289, 290, 296, 298, 303, 304, 311, 313, 317, 319, 322, 324, 326, 328, 329, 330, 332, 333, 335, 337, 339, 340, 341, 346, 347, 348, 349, 356, 357, 358, 360, 364, 368, 376, 377, 386, 388, 394, 396, 398, 406, 434, 436, 438, 440, 444, 446, 448, 454, 465, 467, 469, 471, 473, 475, 477, 489, 499, 548, 579, 581, 587, 595, 620, 623, 624], "enabl": [3, 9, 13, 14, 15, 17, 18, 19, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 56, 60, 61, 62, 63, 64, 65, 67, 154, 155, 159, 160, 166, 170, 177, 179, 246, 256, 259, 260, 271, 274, 278, 280, 282, 290, 298, 302, 304, 329, 341, 357, 358, 372, 384, 394, 396, 404, 422, 428, 432, 438, 450, 452, 456, 461, 477, 497, 499, 579], "automat": [3, 9, 34, 35, 63, 159, 185, 193, 194, 212, 213, 285, 467, 517, 619], "down": [3, 9, 13, 16, 28, 36, 41, 44, 63, 175, 177, 178, 473], "convers": [3, 9, 13, 15, 16, 28, 31, 38, 44, 45, 46, 48, 49, 50, 54, 63, 134, 175, 176, 195, 196, 234, 235, 465], "promot": 3, "speedup": [3, 13, 473], "lower": [3, 9, 10, 15, 19, 27, 28, 31, 36, 53, 56, 60, 63, 78, 79, 155, 157, 158, 163, 177, 178, 194], "precis": [3, 9, 10, 15, 16, 24, 28, 31, 34, 53, 58, 60, 61, 63, 152, 162, 166, 172, 175, 176, 177, 190, 200, 211, 257, 263, 267, 284, 307, 311, 314, 347, 378, 406, 414, 415, 422, 465, 581, 595], "data": [3, 4, 7, 10, 13, 14, 15, 16, 17, 18, 23, 24, 27, 34, 35, 36, 44, 57, 58, 59, 63, 160, 167, 172, 174, 179, 190, 194, 200, 209, 211, 213, 222, 223, 224, 225, 228, 229, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 306, 309, 311, 314, 315, 316, 320, 321, 326, 329, 336, 337, 338, 339, 340, 342, 345, 347, 348, 349, 350, 360, 362, 368, 378, 384, 386, 388, 390, 392, 394, 396, 397, 398, 399, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 466, 467, 469, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 502, 539, 557, 559, 579, 581, 587, 595, 601, 609, 611, 619, 623, 624, 625, 627, 639], "type": [3, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 32, 34, 36, 44, 57, 58, 59, 60, 160, 167, 172, 173, 177, 178, 179, 190, 199, 200, 201, 209, 211, 215, 216, 219, 225, 228, 229, 240, 245, 253, 257, 261, 262, 263, 270, 273, 284, 285, 288, 303, 304, 309, 310, 311, 315, 321, 322, 326, 329, 330, 335, 340, 346, 348, 349, 350, 352, 360, 362, 365, 368, 369, 376, 377, 390, 396, 397, 398, 399, 406, 410, 412, 414, 426, 432, 434, 438, 450, 465, 466, 467, 473, 493, 499, 502, 539, 548, 557, 559, 579, 581, 587, 595, 598, 623, 624, 625], "when": [3, 4, 7, 9, 10, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 175, 176, 177, 178, 179, 194, 202, 203, 207, 208, 210, 213, 215, 216, 236, 237, 257, 265, 311, 329, 330, 335, 336, 341, 347, 349, 350, 357, 362, 378, 406, 418, 420, 424, 425, 426, 427, 432, 471, 473, 539, 579, 587, 595, 624], "avail": [3, 10, 13, 20, 23, 24, 28, 29, 31, 34, 35, 42, 52, 53, 58, 62, 65, 67, 125, 126, 127, 128, 129, 130, 131, 147, 156, 160, 162, 178, 179, 209, 239, 240, 246, 252, 253, 264, 265, 266, 284, 335, 384, 398, 416, 418, 420, 434, 465, 471, 493, 597], "enforc": [3, 9, 11, 59], "compli": [3, 13, 473], "specifi": [3, 5, 9, 10, 12, 13, 14, 15, 16, 19, 21, 22, 23, 25, 26, 28, 30, 33, 35, 36, 41, 42, 44, 52, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 80, 82, 87, 88, 89, 90, 95, 96, 97, 98, 99, 104, 105, 112, 113, 114, 115, 116, 119, 123, 125, 126, 127, 128, 129, 130, 131, 136, 139, 146, 147, 148, 149, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 172, 175, 176, 178, 179, 194, 203, 204, 215, 216, 236, 237, 250, 251, 253, 254, 257, 258, 265, 266, 267, 270, 285, 288, 311, 312, 314, 323, 326, 329, 330, 341, 346, 347, 349, 350, 355, 365, 374, 375, 376, 377, 378, 392, 394, 398, 400, 406, 408, 418, 420, 422, 426, 432, 434, 436, 438, 440, 442, 444, 446, 450, 467, 471, 493, 499, 535, 548, 557, 559, 579, 587, 593, 595, 598, 601, 617, 624, 625], "boolean": [3, 36, 52, 53, 98, 136, 190, 200, 311, 364, 595], "flag": [3, 15, 19, 23, 35, 36, 40, 53, 56, 64, 160, 164, 178, 179, 186, 187, 188, 189, 215, 216, 228, 229, 232, 233, 242, 270, 304, 312, 314, 323, 326, 335, 340, 341, 344, 347, 349, 357, 358, 360, 365, 372, 373, 378, 386, 426, 471, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 589, 591, 593, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 617, 619, 620, 624, 625, 627, 629], "setter": [3, 9, 26, 30, 36, 175], "control": [3, 9, 16, 17, 18, 19, 22, 23, 28, 31, 34, 56, 64, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 99, 104, 105, 112, 114, 115, 147, 155, 174, 175, 176, 257, 311, 312, 323, 326, 333, 341, 356, 357, 358, 360, 406, 501, 617], "whether": [3, 28, 32, 36, 42, 63, 66, 71, 72, 99, 106, 112, 121, 154, 311, 329, 330, 335, 360, 376, 394, 471, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 589, 591, 593, 595, 600, 602, 604, 606, 609, 611, 613, 615, 617, 619, 624, 625, 627, 629], "arithmet": [3, 31, 36, 128, 146, 160, 166, 175, 267, 311, 360, 422, 595], "integr": [3, 10, 15, 18, 23, 31, 36, 53, 59, 65, 160, 259, 260, 268, 274, 298, 301, 303, 341, 360, 499], "oper": [3, 4, 5, 6, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 172, 175, 176, 177, 178, 185, 203, 204, 205, 206, 207, 208, 209, 215, 216, 239, 240, 241, 249, 257, 259, 260, 268, 271, 273, 274, 277, 288, 298, 301, 303, 305, 306, 311, 312, 313, 314, 320, 323, 326, 329, 330, 335, 337, 339, 347, 348, 349, 358, 360, 362, 363, 364, 365, 372, 376, 378, 390, 391, 394, 396, 406, 414, 426, 428, 432, 434, 436, 438, 442, 444, 450, 467, 471, 473, 493, 499, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629, 637], "get": [3, 12, 15, 16, 21, 22, 26, 41, 42, 52, 57, 58, 59, 160, 162, 177, 178, 259, 260, 263, 270, 273, 274, 275, 284, 294, 298, 299, 304, 306, 320, 340, 341, 347, 360, 362, 368, 383, 414, 432, 465, 471, 485, 495, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "add": [3, 5, 13, 21, 23, 28, 37, 52, 58, 61, 63, 65, 67, 71, 72, 76, 81, 82, 83, 84, 85, 86, 114, 115, 161, 163, 175, 176, 178, 184, 185, 205, 215, 216, 232, 233, 251, 257, 259, 260, 265, 274, 288, 298, 306, 308, 329, 360, 364, 394, 396, 406, 418, 420, 436, 438, 473, 581], "dag": [3, 41, 42, 52, 53, 360], "failur": [3, 22, 178, 179, 203, 329, 360, 436, 442, 444, 536, 581], "ha": [3, 4, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 31, 35, 36, 42, 44, 60, 63, 67, 97, 99, 106, 107, 108, 155, 156, 158, 159, 160, 167, 172, 175, 176, 178, 179, 194, 213, 215, 216, 256, 257, 266, 267, 271, 311, 329, 330, 333, 335, 341, 346, 356, 360, 362, 370, 376, 377, 394, 404, 406, 414, 418, 422, 426, 428, 432, 471, 473, 539, 581, 595, 597], "alreadi": [3, 35, 59, 160, 175, 284, 333, 356, 360, 432, 465, 471, 597], "been": [3, 14, 22, 23, 172, 311, 329, 330, 335, 346, 360, 376, 377, 473, 579, 597], "ad": [3, 5, 15, 16, 17, 28, 36, 58, 63, 64, 73, 74, 75, 76, 99, 106, 107, 177, 194, 203, 234, 235, 288, 335, 349, 360, 364, 436, 438, 442, 444, 473, 624], "cannot": [3, 9, 14, 15, 32, 36, 38, 59, 63, 67, 134, 156, 157, 162, 164, 167, 173, 177, 178, 209, 214, 236, 237, 238, 240, 263, 329, 341, 360, 414, 535, 548, 579, 581, 593, 602, 617], "schema": [3, 209, 214, 238, 240, 360], "check": [3, 6, 9, 19, 21, 28, 33, 36, 56, 59, 61, 66, 67, 134, 157, 164, 165, 175, 176, 178, 179, 203, 204, 250, 252, 253, 257, 258, 259, 260, 263, 266, 267, 269, 270, 273, 274, 275, 277, 284, 298, 299, 304, 311, 329, 330, 335, 357, 360, 365, 376, 392, 394, 398, 406, 408, 414, 420, 422, 424, 432, 434, 436, 438, 440, 442, 444, 446, 450, 465, 471, 517, 536, 548, 581, 593, 595, 597, 598, 602, 607, 619], "eg": [3, 4, 207, 208, 303, 360, 362, 499], "number": [3, 4, 6, 13, 14, 16, 17, 19, 21, 22, 23, 24, 27, 28, 31, 35, 36, 42, 52, 53, 56, 58, 59, 64, 67, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 89, 90, 99, 114, 115, 123, 153, 155, 158, 159, 161, 164, 167, 174, 175, 176, 177, 178, 179, 194, 203, 228, 229, 253, 254, 255, 257, 258, 261, 262, 265, 266, 280, 294, 297, 311, 313, 314, 316, 317, 318, 319, 321, 329, 330, 331, 333, 335, 336, 341, 345, 346, 347, 349, 355, 356, 360, 362, 363, 364, 365, 367, 377, 378, 392, 394, 396, 398, 400, 402, 406, 408, 410, 412, 414, 456, 467, 485, 491, 519, 521, 523, 525, 527, 529, 535, 539, 579, 581, 583, 585, 587, 595, 598, 609, 611, 613, 615, 620, 624], "attribut": [3, 5, 10, 11, 12, 14, 15, 16, 17, 18, 31, 36, 41, 52, 53, 58, 59, 159, 160, 174, 178, 179, 203, 204, 257, 267, 277, 284, 288, 303, 309, 312, 313, 316, 317, 319, 320, 323, 324, 326, 327, 328, 331, 332, 334, 335, 337, 338, 339, 340, 342, 343, 345, 348, 349, 360, 364, 388, 396, 404, 406, 420, 422, 428, 436, 440, 442, 444, 446, 450, 452, 463, 465, 469, 473, 481, 499, 502, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 539, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 587, 589, 591, 594, 595, 598, 600, 601, 602, 604, 606, 609, 611, 613, 615, 619, 622, 623, 624, 627, 629], "etc": [3, 4, 11, 18, 22, 27, 41, 52, 67, 159, 160, 162, 163, 177, 178, 179, 306, 321, 360, 362, 436, 442, 444, 581, 598], "allow": [3, 9, 10, 13, 15, 16, 18, 23, 25, 28, 29, 30, 31, 34, 35, 36, 59, 60, 61, 65, 67, 70, 88, 98, 113, 116, 119, 136, 149, 158, 168, 172, 174, 176, 183, 195, 196, 258, 288, 311, 313, 314, 329, 332, 337, 339, 347, 378, 408, 473, 493, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 581, 583, 585, 589, 591, 600, 602, 604, 606, 609, 611, 613, 615, 619, 624, 625, 627, 629], "throw": [3, 9, 24, 156, 175, 176, 246, 252, 253, 257, 261, 262, 263, 264, 266, 267, 270, 273, 275, 277, 284, 285, 286, 288, 299, 300, 377, 384, 398, 406, 410, 412, 414, 416, 420, 422, 426, 432, 434, 450, 465, 467, 469, 493, 495, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 536, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 609, 611, 613, 615, 619, 624, 625, 627, 629], "fail": [3, 22, 160, 178, 179, 209, 239, 240, 263, 267, 273, 275, 277, 284, 286, 299, 300, 414, 422, 432, 434, 450, 465, 469, 493, 495, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 536, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 609, 611, 613, 615, 619, 624, 625, 627, 629], "success": [3, 34, 66, 175, 176, 209, 239, 240, 257, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 367, 368, 376, 378, 406, 473, 597], "describ": [3, 4, 7, 10, 13, 14, 15, 16, 18, 27, 31, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 59, 60, 63, 104, 105, 155, 162, 164, 167, 173, 174, 176, 177, 193, 194, 212, 263, 294, 306, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 360, 362, 363, 364, 365, 367, 368, 376, 378, 394, 414, 432, 471, 485, 515, 534, 578, 579, 580, 581, 592, 596, 607, 616, 621, 622], "error": [3, 14, 15, 23, 24, 29, 30, 34, 36, 42, 52, 53, 59, 60, 63, 156, 175, 176, 178, 252, 253, 257, 263, 264, 266, 273, 284, 285, 299, 300, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 355, 360, 362, 363, 364, 365, 367, 368, 372, 376, 378, 398, 406, 414, 416, 420, 432, 465, 467, 471, 493, 495, 579, 586, 595], "otherwis": [3, 4, 12, 16, 19, 23, 29, 31, 33, 34, 59, 79, 92, 101, 125, 126, 127, 128, 129, 130, 131, 133, 138, 144, 151, 156, 175, 176, 215, 216, 257, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 360, 362, 363, 364, 365, 367, 368, 376, 378, 406, 531, 548, 581, 624], "mean": [3, 4, 13, 14, 15, 21, 25, 26, 27, 33, 34, 35, 36, 42, 59, 66, 73, 74, 75, 81, 82, 83, 84, 85, 86, 89, 90, 99, 106, 107, 110, 111, 114, 115, 128, 147, 148, 155, 157, 158, 161, 162, 165, 166, 167, 168, 175, 176, 177, 184, 185, 199, 201, 202, 210, 215, 216, 247, 249, 257, 273, 276, 279, 287, 312, 314, 317, 319, 320, 323, 326, 329, 335, 337, 347, 357, 360, 365, 378, 386, 390, 391, 406, 426, 432, 434, 448, 454, 471, 493, 510, 512, 519, 521, 523, 525, 527, 529, 531, 533, 539, 541, 543, 557, 559, 581], "finish": [3, 36, 175, 176, 257, 259, 260, 268, 274, 298, 301, 344, 360, 406, 436, 438, 442, 444, 617, 620], "readi": [3, 36, 59, 349, 360, 432, 436, 442, 444, 471, 624], "similarli": [3, 15, 42, 52, 63, 64, 157, 164, 360, 471], "un": [3, 360], "also": [3, 6, 14, 15, 17, 18, 19, 23, 26, 27, 28, 29, 30, 31, 35, 36, 41, 42, 52, 58, 60, 64, 65, 67, 108, 155, 159, 160, 162, 170, 174, 175, 176, 177, 178, 194, 214, 238, 246, 257, 267, 280, 282, 294, 302, 311, 312, 313, 316, 317, 320, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 360, 362, 365, 378, 384, 394, 406, 422, 426, 432, 434, 436, 438, 440, 442, 444, 446, 456, 461, 471, 485, 493, 497, 579, 581, 587, 595, 598], "filter": [3, 22, 27, 160, 177, 178, 360], "claim": [3, 360, 458], "intern": [3, 6, 17, 23, 29, 30, 32, 36, 175, 176, 178, 221, 246, 251, 256, 257, 271, 278, 280, 282, 290, 294, 302, 311, 360, 384, 404, 406, 418, 428, 434, 442, 444, 452, 456, 461, 477, 485, 493, 497], "capabl": [3, 9, 14, 29, 31, 34, 35, 44, 179, 360], "store": [3, 7, 17, 18, 27, 28, 42, 52, 53, 58, 60, 63, 147, 154, 159, 160, 164, 166, 175, 176, 177, 253, 257, 266, 277, 303, 314, 329, 347, 378, 398, 406, 414, 420, 432, 436, 438, 442, 444, 450, 499, 548, 579, 594], "dnnl_dim_t": [4, 229, 250, 258, 269, 304, 311, 314, 318, 323, 327, 329, 342, 347, 349, 350, 372, 378, 392, 408, 424, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "dim": [4, 14, 15, 67, 162, 167, 175, 176, 177, 194, 228, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 311, 329, 335, 362, 384, 386, 388, 390, 392, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 456, 459, 461, 463, 467, 469, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 539, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 587, 589, 591, 595, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 624, 625, 627, 629, 632, 633, 634, 635, 636], "enum": [4, 5, 6, 174, 177, 304, 310, 311, 318, 321, 322, 329, 330, 335, 336, 340, 341, 344, 346, 348, 351, 352, 358, 360, 362, 364, 365, 366, 372, 373, 376, 377, 379, 505, 507, 509, 511, 513, 516, 518, 520, 522, 524, 526, 528, 530, 532, 535, 540, 542, 544, 546, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 579, 582, 584, 588, 590, 593, 599, 601, 603, 605, 608, 610, 612, 614, 617, 618, 626, 628], "data_typ": [4, 14, 15, 57, 63, 162, 167, 175, 176, 177, 178, 179, 228, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 311, 329, 372, 384, 386, 388, 390, 394, 396, 398, 400, 402, 404, 406, 410, 412, 414, 416, 418, 420, 422, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 539, 557, 559, 579, 581, 587, 595, 624, 625], "layout_typ": [4, 36, 259, 260, 268, 274, 298, 301, 304, 362, 436, 438, 440, 442, 444, 446, 539], "property_typ": [4, 260, 304, 438], "dnnl_graph_logical_tensor_t": [4, 304, 355, 362, 364, 365, 368], "c_data": [4, 285, 467], "dtype": [4, 304, 362], "int32_t": [4, 63, 167, 261, 262, 263, 266, 277, 304, 311, 314, 329, 335, 347, 362, 372, 378, 410, 412, 414, 450, 587], "ndim": [4, 32, 64, 167, 177, 179, 194, 250, 258, 304, 311, 329, 362, 377, 392, 408, 539], "ltype": [4, 304, 362], "ptype": [4, 304, 362], "undef": [4, 14, 175, 176, 178, 179, 185, 200, 201, 202, 203, 211, 212, 213, 214, 220, 222, 224, 226, 228, 230, 232, 245, 257, 259, 260, 274, 285, 298, 304, 406, 436, 438, 442, 444, 467, 471, 473, 506, 508, 510, 512, 514, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 583, 585, 587, 589, 591, 598, 600, 609, 611, 613, 615, 627, 629], "adim": [4, 270, 304, 581], "stride": [4, 9, 14, 15, 27, 28, 36, 41, 67, 71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 134, 174, 178, 179, 193, 194, 199, 201, 203, 204, 212, 213, 228, 229, 250, 251, 252, 253, 254, 256, 258, 259, 260, 268, 271, 273, 274, 287, 288, 289, 294, 298, 301, 304, 311, 317, 319, 329, 331, 362, 392, 394, 396, 398, 400, 404, 408, 428, 432, 436, 438, 442, 444, 450, 471, 473, 475, 485, 499, 519, 521, 523, 525, 527, 529, 539, 581, 583, 585, 587, 598], "lid": 4, "get_dim": [4, 177, 263, 277, 288, 303, 414, 450, 473, 499, 581], "get_id": [4, 6, 259, 260, 268, 274, 298, 301], "get_data_typ": [4, 175, 176, 257, 259, 260, 268, 274, 288, 298, 301, 406, 473, 581], "get_property_typ": 4, "get_layout_typ": 4, "get_layout_id": 4, "get_strid": [4, 177, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 581, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_mem_s": [4, 36], "is_equ": [4, 304, 362], "lt": [4, 7, 304, 355], "integ": [4, 12, 15, 29, 31, 44, 60, 63, 67, 135, 160, 175, 182, 183, 186, 189, 190, 200, 211, 263, 265, 311, 314, 347, 364, 378, 396, 414, 579, 595], "repres": [4, 5, 6, 14, 15, 18, 27, 28, 36, 44, 63, 78, 81, 97, 110, 111, 139, 140, 153, 160, 167, 175, 178, 259, 260, 261, 262, 268, 274, 298, 301, 306, 355, 360, 365, 394, 410, 412, 418, 420, 426, 432, 434, 473, 493, 579], "dimens": [4, 6, 12, 14, 15, 17, 18, 19, 21, 25, 27, 28, 33, 36, 41, 42, 43, 44, 52, 53, 56, 60, 61, 64, 67, 71, 72, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 97, 99, 104, 106, 107, 110, 111, 112, 114, 115, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 136, 139, 147, 148, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 179, 193, 194, 203, 212, 213, 219, 228, 229, 245, 246, 247, 248, 249, 255, 256, 257, 264, 267, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 311, 313, 314, 316, 317, 318, 319, 326, 329, 331, 339, 347, 349, 350, 362, 365, 368, 377, 378, 384, 386, 388, 390, 402, 404, 406, 414, 416, 418, 420, 422, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 497, 499, 517, 519, 521, 523, 525, 527, 529, 539, 579, 581, 583, 585, 587, 595, 604, 606, 624, 625], "size": [4, 8, 14, 15, 17, 19, 21, 24, 26, 27, 35, 36, 42, 52, 53, 56, 59, 60, 63, 64, 71, 72, 76, 89, 104, 105, 114, 115, 139, 156, 157, 158, 161, 163, 167, 168, 174, 175, 176, 177, 190, 194, 200, 203, 204, 213, 228, 229, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 270, 271, 272, 273, 274, 276, 278, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 303, 304, 311, 313, 314, 327, 329, 330, 335, 336, 342, 347, 349, 354, 357, 362, 363, 367, 373, 376, 378, 384, 386, 388, 390, 392, 394, 398, 400, 402, 404, 406, 408, 410, 412, 414, 418, 420, 422, 428, 430, 432, 448, 452, 456, 459, 461, 463, 465, 467, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 497, 499, 539, 541, 543, 569, 571, 579, 581, 587, 595, 598, 609, 611, 624], "implement": [4, 9, 10, 11, 14, 15, 17, 18, 23, 24, 29, 31, 34, 35, 36, 44, 50, 58, 59, 60, 63, 87, 89, 90, 95, 112, 123, 153, 155, 156, 159, 170, 172, 173, 177, 179, 182, 183, 190, 200, 209, 215, 216, 221, 228, 229, 239, 240, 246, 252, 253, 256, 259, 260, 264, 266, 267, 268, 270, 271, 273, 274, 278, 284, 288, 290, 298, 301, 304, 335, 341, 347, 378, 384, 386, 390, 391, 392, 394, 398, 404, 408, 409, 416, 418, 420, 422, 426, 428, 432, 434, 448, 452, 465, 471, 477, 493, 548, 579, 597, 598, 620], "ar": [4, 9, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 89, 90, 97, 99, 106, 107, 112, 114, 115, 123, 125, 126, 127, 128, 129, 130, 131, 136, 139, 146, 147, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 178, 179, 194, 203, 213, 224, 225, 228, 229, 236, 237, 246, 256, 257, 259, 260, 263, 265, 266, 267, 268, 271, 272, 274, 277, 278, 280, 282, 284, 288, 290, 294, 298, 301, 302, 303, 304, 311, 312, 313, 314, 317, 319, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 335, 339, 340, 341, 342, 343, 346, 347, 348, 349, 357, 358, 362, 376, 377, 378, 384, 390, 392, 394, 396, 404, 406, 414, 418, 420, 422, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 450, 452, 456, 458, 461, 465, 471, 473, 477, 485, 493, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 539, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 586, 587, 589, 591, 593, 595, 598, 600, 601, 602, 604, 606, 609, 611, 613, 615, 619, 620, 623, 624, 627, 629], "forc": [4, 13, 15, 31, 52, 67, 179, 579], "limit": [4, 14, 15, 22, 24, 29, 30, 58, 159, 160, 179, 236, 237, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 357, 384, 386, 388, 390, 392, 394, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 579], "length": [4, 42, 52, 53, 121, 122, 265, 266, 294, 311, 364, 485, 579], "copi": [4, 9, 14, 15, 57, 147, 148, 162, 172, 175, 176, 229, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 329, 338, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 535, 548, 579, 581, 593, 595, 617], "layout": [4, 6, 12, 14, 21, 36, 58, 64, 67, 77, 134, 147, 148, 152, 164, 174, 175, 176, 179, 194, 199, 201, 219, 245, 246, 256, 259, 260, 266, 268, 271, 274, 277, 278, 280, 282, 290, 294, 298, 301, 302, 303, 304, 311, 329, 362, 365, 368, 384, 394, 404, 418, 420, 428, 436, 442, 444, 450, 452, 456, 461, 471, 477, 485, 497, 499, 539, 581, 587, 595], "properti": [4, 7, 9, 36, 174, 178, 202, 210, 236, 237, 263, 298, 301, 362, 414, 438, 444, 446, 458, 539], "element": [4, 14, 15, 24, 27, 28, 31, 33, 34, 52, 53, 59, 67, 68, 70, 78, 81, 87, 88, 89, 90, 91, 94, 95, 97, 98, 100, 102, 106, 107, 108, 109, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 141, 143, 145, 146, 147, 148, 149, 150, 152, 161, 174, 177, 179, 194, 203, 207, 208, 209, 220, 221, 239, 240, 272, 311, 313, 314, 316, 317, 319, 329, 330, 331, 345, 346, 347, 362, 364, 368, 376, 377, 378, 383, 414, 426, 431, 432, 519, 521, 523, 525, 527, 529, 539, 579, 583, 585, 587], "1": [4, 12, 13, 14, 15, 18, 19, 21, 23, 25, 29, 31, 32, 33, 35, 41, 42, 50, 52, 53, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 155, 157, 158, 160, 161, 163, 164, 165, 167, 168, 170, 173, 174, 175, 176, 177, 178, 184, 185, 186, 189, 190, 194, 199, 208, 210, 211, 213, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 311, 313, 314, 329, 335, 341, 347, 349, 362, 365, 377, 378, 384, 386, 388, 390, 392, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 479, 481, 485, 487, 489, 493, 495, 497, 499, 514, 517, 539, 581, 587, 597, 598, 602, 619, 620], "unknown": [4, 6, 36, 179, 217, 218, 243, 244, 253, 254, 259, 260, 274, 285, 298, 329, 362, 365, 398, 400, 422, 450, 467, 499, 539], "see": [4, 9, 14, 15, 18, 19, 20, 22, 23, 25, 28, 31, 33, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 63, 64, 67, 84, 106, 157, 159, 160, 161, 164, 168, 169, 170, 173, 175, 176, 177, 178, 180, 194, 213, 214, 228, 238, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 311, 312, 313, 316, 317, 320, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 354, 376, 377, 378, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 426, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 579, 581, 587, 593, 595, 598, 601, 620, 627, 629], "dnnl_graph_unknown_ndim": [4, 259, 260, 268, 274, 298, 301, 304, 362, 539], "0": [4, 8, 12, 14, 15, 17, 21, 23, 28, 33, 35, 37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 162, 163, 164, 165, 167, 170, 173, 175, 176, 177, 178, 190, 193, 194, 199, 202, 204, 210, 211, 215, 216, 219, 223, 225, 229, 231, 238, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 311, 313, 321, 329, 330, 333, 335, 341, 349, 356, 357, 360, 362, 365, 376, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 539, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 587, 589, 591, 595, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 620, 624, 627, 629], "deleg": [4, 175, 176, 257, 406], "basic": [4, 9, 14, 23, 160, 162, 175, 176, 257, 273, 306, 307, 314, 321, 329, 334, 344, 362, 365, 370, 383, 406, 426, 433, 434, 471, 493, 581, 639], "inform": [4, 14, 27, 36, 53, 58, 59, 65, 67, 156, 159, 162, 174, 177, 178, 179, 228, 261, 262, 287, 294, 329, 335, 341, 349, 355, 362, 383, 410, 412, 436, 438, 440, 442, 444, 446, 471, 485, 624, 630], "dnnl_graph_unknown_dim": [4, 304, 362, 539], "defin": [4, 9, 10, 14, 16, 18, 19, 22, 23, 25, 28, 31, 32, 34, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 80, 81, 87, 89, 90, 101, 106, 108, 112, 123, 139, 154, 157, 158, 163, 164, 165, 166, 167, 170, 173, 174, 175, 176, 177, 190, 200, 203, 204, 250, 253, 254, 257, 258, 273, 275, 285, 286, 298, 301, 304, 306, 311, 314, 318, 329, 335, 341, 347, 362, 378, 392, 398, 400, 406, 408, 420, 426, 432, 436, 438, 440, 442, 444, 446, 467, 469, 473, 539, 587, 595], "zero": [4, 12, 14, 19, 28, 31, 44, 49, 52, 53, 59, 60, 64, 67, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 89, 90, 108, 114, 115, 123, 139, 147, 162, 164, 167, 175, 177, 179, 215, 216, 227, 228, 229, 249, 253, 254, 261, 262, 263, 277, 294, 303, 311, 317, 319, 324, 326, 328, 329, 335, 340, 357, 360, 390, 398, 400, 410, 412, 414, 450, 485, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 539, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 581, 583, 585, 587, 589, 591, 595, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "field": [4, 8, 41, 42, 52, 53, 178, 194, 199, 201, 265, 311, 329, 362, 503, 536, 631, 632, 633, 634, 635, 636, 637], "deduc": [4, 6, 36, 163, 365, 471, 539], "accordingli": [4, 14, 15, 177, 329, 362, 396, 434, 493, 581, 586], "alwai": [4, 12, 14, 18, 19, 23, 31, 33, 52, 56, 59, 60, 61, 63, 64, 66, 67, 162, 164, 177, 194, 311, 329, 341, 414, 426, 432, 581, 587, 595], "current": [4, 9, 12, 13, 14, 15, 19, 22, 26, 29, 30, 42, 52, 53, 58, 59, 63, 67, 156, 158, 160, 162, 164, 167, 177, 178, 179, 267, 277, 294, 303, 306, 329, 341, 357, 374, 375, 422, 450, 485, 499, 539], "neg": [4, 14, 19, 28, 31, 60, 71, 72, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 106, 107, 108, 110, 111, 114, 115, 148, 175, 176, 179, 215, 216, 252, 257, 269, 270, 273, 299, 300, 340, 357, 396, 406, 424, 426, 432, 493, 495, 539, 598, 609, 611, 613, 615, 627, 629], "valu": [4, 5, 7, 9, 12, 13, 14, 15, 16, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 40, 42, 44, 49, 52, 57, 59, 60, 61, 62, 63, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 154, 156, 157, 159, 160, 162, 166, 167, 172, 174, 175, 176, 177, 178, 179, 249, 253, 254, 257, 261, 262, 263, 266, 269, 270, 273, 277, 284, 286, 299, 300, 303, 304, 306, 310, 311, 312, 313, 314, 317, 319, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 333, 335, 337, 339, 340, 341, 342, 343, 346, 347, 348, 349, 356, 357, 358, 360, 362, 364, 366, 368, 376, 377, 378, 390, 396, 398, 400, 406, 410, 412, 414, 418, 420, 422, 424, 426, 432, 450, 465, 469, 471, 473, 493, 495, 499, 506, 508, 510, 512, 517, 519, 521, 523, 525, 527, 529, 533, 535, 539, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 571, 573, 575, 579, 581, 583, 585, 587, 591, 593, 595, 597, 598, 600, 601, 602, 606, 611, 615, 619, 623, 624, 627, 629], "opaqu": [4, 6, 9, 14, 36, 134, 157, 193, 199, 201, 212, 214, 229, 238, 362, 365, 515, 534, 539, 578, 580, 586, 592, 594, 596, 616, 621, 622], "assign": [4, 27, 247, 248, 266, 276, 279, 289, 296, 329, 386, 388, 420, 448, 454, 475, 489, 548, 581], "each": [4, 6, 14, 15, 17, 21, 27, 28, 31, 35, 36, 40, 41, 42, 52, 53, 58, 59, 60, 61, 82, 84, 85, 86, 97, 99, 112, 125, 126, 127, 128, 129, 130, 131, 136, 146, 155, 156, 158, 161, 163, 164, 165, 167, 174, 178, 193, 203, 207, 208, 212, 236, 237, 255, 266, 273, 284, 311, 314, 317, 319, 329, 330, 331, 335, 336, 345, 346, 347, 349, 357, 358, 360, 362, 365, 376, 377, 378, 394, 396, 402, 414, 426, 432, 465, 473, 519, 521, 523, 525, 527, 529, 539, 579, 581, 583, 585, 587, 595, 619, 624], "call": [4, 6, 14, 17, 20, 24, 26, 27, 28, 29, 30, 32, 35, 36, 41, 58, 59, 61, 63, 108, 154, 156, 164, 165, 175, 176, 177, 178, 257, 311, 329, 330, 336, 341, 346, 347, 349, 354, 357, 360, 363, 365, 367, 376, 377, 394, 406, 414, 418, 420, 426, 432, 434, 436, 438, 442, 444, 446, 471, 473, 493, 535, 536, 548, 579, 593, 595, 617, 620, 624], "byte": [4, 17, 24, 31, 63, 228, 229, 329, 330, 335, 362, 363, 376, 579, 581], "compar": [4, 17, 34, 53, 59, 63, 136, 172, 263, 267, 286, 329, 362, 414, 415, 422, 469, 471, 607], "two": [4, 15, 17, 18, 21, 23, 27, 31, 32, 34, 35, 36, 41, 42, 44, 48, 50, 52, 53, 59, 60, 63, 67, 70, 88, 98, 112, 113, 116, 119, 134, 136, 146, 149, 154, 157, 160, 164, 174, 175, 176, 177, 178, 194, 213, 236, 237, 257, 294, 313, 321, 329, 338, 362, 404, 405, 406, 422, 426, 432, 434, 436, 442, 444, 446, 485, 493], "tenor": [4, 362], "equal": [4, 14, 15, 19, 21, 25, 32, 35, 42, 47, 52, 53, 56, 59, 61, 64, 71, 89, 90, 98, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 136, 147, 154, 156, 157, 158, 163, 166, 168, 177, 184, 185, 194, 213, 260, 311, 313, 314, 329, 330, 336, 346, 347, 362, 376, 377, 378, 432, 438, 548, 579, 581, 587, 595], "decid": [4, 36, 199, 201, 259, 260, 274, 298, 362, 471, 506, 510, 519, 521, 525, 527, 531, 541, 545, 551, 553, 557, 561, 565, 569, 573, 583, 589, 604, 609, 613, 627], "reorder": [4, 15, 18, 23, 25, 26, 31, 34, 52, 58, 59, 60, 63, 67, 160, 168, 175, 176, 178, 179, 205, 220, 221, 228, 246, 250, 251, 252, 253, 254, 256, 257, 258, 263, 264, 265, 266, 269, 270, 271, 277, 278, 280, 282, 284, 285, 287, 288, 290, 294, 302, 303, 304, 306, 308, 309, 321, 329, 334, 335, 362, 372, 383, 384, 392, 394, 396, 398, 400, 404, 406, 408, 414, 416, 418, 420, 425, 427, 428, 450, 452, 456, 461, 465, 467, 473, 477, 482, 485, 497, 499, 502, 593, 638], "need": [4, 15, 17, 22, 23, 28, 32, 36, 41, 42, 52, 53, 57, 58, 59, 99, 154, 164, 175, 176, 177, 215, 216, 229, 250, 251, 253, 254, 257, 258, 259, 260, 268, 274, 284, 287, 288, 289, 294, 298, 301, 329, 335, 349, 360, 362, 368, 392, 398, 400, 406, 408, 426, 432, 434, 436, 438, 442, 444, 465, 475, 485, 493, 579, 620, 624], "below": [4, 9, 14, 15, 18, 19, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 35, 40, 41, 44, 52, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 163, 164, 165, 167, 170, 173, 177, 277, 303, 306, 311, 362, 394, 432, 442, 444, 450, 471, 499, 587, 620], "circumst": [4, 6, 156, 178, 362, 365, 471], "regard": [4, 84, 362], "struct": [4, 250, 258, 285, 304, 311, 312, 313, 316, 317, 319, 320, 321, 323, 324, 326, 327, 328, 329, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 354, 355, 360, 362, 364, 365, 368, 372, 378, 379, 392, 408, 432, 467, 473], "underli": [4, 7, 32, 154, 159, 167, 325, 329, 330, 346, 347, 361, 362, 363, 367, 368, 376, 377, 434, 493, 548, 579, 593], "For": [4, 6, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 44, 45, 48, 49, 50, 52, 56, 59, 60, 61, 62, 63, 64, 66, 67, 87, 89, 90, 104, 105, 112, 123, 125, 126, 127, 128, 129, 130, 131, 154, 156, 158, 160, 162, 164, 168, 169, 172, 174, 175, 176, 177, 179, 194, 202, 203, 210, 213, 215, 216, 229, 246, 256, 257, 266, 271, 273, 278, 280, 282, 284, 290, 302, 311, 312, 314, 323, 326, 329, 330, 335, 341, 346, 347, 349, 354, 358, 362, 365, 376, 377, 378, 384, 394, 396, 404, 406, 414, 418, 420, 426, 428, 432, 434, 436, 438, 452, 456, 461, 465, 471, 477, 493, 495, 497, 539, 579, 586, 587, 595, 598, 624], "exampl": [4, 18, 20, 22, 23, 24, 26, 27, 29, 30, 31, 35, 36, 40, 44, 58, 59, 63, 65, 87, 89, 90, 93, 112, 123, 125, 126, 127, 128, 129, 130, 131, 136, 147, 155, 173, 177, 179, 194, 202, 210, 213, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 269, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 311, 312, 323, 326, 329, 335, 341, 362, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 407, 409, 410, 411, 412, 413, 414, 415, 417, 419, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 455, 457, 462, 464, 465, 466, 468, 470, 471, 472, 474, 476, 478, 480, 484, 486, 488, 490, 492, 493, 494, 496, 498, 499, 500, 501, 539, 581, 587, 595, 598, 639], "one": [4, 6, 10, 14, 15, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 42, 44, 46, 48, 49, 50, 52, 53, 54, 56, 59, 60, 61, 63, 64, 65, 67, 80, 82, 87, 89, 90, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 136, 147, 154, 155, 156, 157, 161, 162, 163, 164, 166, 168, 172, 175, 176, 177, 178, 179, 194, 213, 246, 256, 257, 259, 260, 266, 268, 271, 274, 278, 280, 282, 288, 290, 294, 298, 301, 302, 311, 314, 320, 321, 329, 330, 335, 346, 347, 349, 350, 362, 365, 376, 377, 378, 384, 394, 404, 406, 414, 415, 418, 420, 426, 428, 432, 434, 438, 450, 451, 452, 456, 461, 471, 473, 477, 485, 493, 497, 499, 500, 531, 539, 581, 586, 587, 593, 601, 624, 625], "while": [4, 15, 17, 23, 24, 27, 28, 31, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 63, 89, 112, 154, 162, 164, 172, 194, 253, 254, 271, 275, 285, 362, 365, 398, 400, 422, 428, 432, 467, 607], "underneath": [4, 41, 52, 175, 176, 257, 362, 406], "both": [4, 15, 17, 19, 21, 22, 23, 24, 27, 28, 29, 32, 33, 35, 36, 38, 39, 41, 42, 45, 48, 49, 50, 52, 53, 56, 58, 59, 64, 67, 70, 72, 73, 75, 81, 82, 83, 84, 85, 86, 87, 88, 90, 98, 99, 106, 107, 113, 116, 119, 123, 149, 154, 155, 156, 160, 164, 166, 168, 172, 178, 194, 266, 272, 284, 287, 290, 312, 313, 320, 323, 326, 329, 341, 349, 358, 362, 418, 426, 430, 432, 434, 436, 442, 444, 450, 465, 471, 477, 493, 581], "nhwc": [4, 27, 163, 213, 249, 273, 292, 362, 390, 432, 481], "still": [4, 23, 29, 58, 164, 177, 362, 432], "op_handl": 5, "attr": [5, 9, 14, 15, 17, 28, 58, 156, 162, 179, 259, 260, 266, 267, 268, 274, 277, 286, 288, 298, 301, 303, 304, 311, 312, 313, 316, 317, 319, 320, 323, 324, 326, 327, 328, 331, 332, 335, 337, 338, 339, 340, 342, 343, 345, 420, 422, 436, 438, 440, 442, 444, 446, 450, 469, 473, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 587, 589, 591, 595, 600, 601, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "akind": [5, 304, 311, 321, 335, 372, 376, 377, 535], "string": [5, 23, 26, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 98, 99, 104, 105, 112, 113, 114, 115, 116, 119, 121, 122, 123, 136, 139, 146, 149, 175, 176, 178, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 295, 296, 297, 298, 299, 300, 302, 304, 335, 341, 364, 372, 384, 386, 388, 390, 392, 402, 404, 406, 408, 410, 412, 416, 426, 428, 430, 432, 434, 436, 438, 442, 444, 448, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 481, 483, 487, 489, 491, 493, 495, 497, 536], "verbose_nam": [5, 304, 364], "add_input": 5, "add_output": 5, "templat": [5, 160, 178, 263, 341, 352, 372, 377, 414, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "typenam": [5, 263, 352, 372, 377, 414, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "type_i": 5, "req": 5, "is_sam": [5, 263, 414], "int64_t": [5, 229, 259, 260, 263, 267, 274, 277, 298, 303, 304, 318, 364, 414, 422, 436, 438, 442, 444, 450, 499, 598], "set_attr": [5, 259, 260, 268, 274, 298, 301, 436, 438, 440, 442, 444, 446], "name": [5, 14, 15, 19, 21, 22, 23, 25, 26, 28, 30, 31, 33, 56, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 160, 162, 163, 164, 165, 166, 168, 173, 177, 178, 179, 194, 213, 228, 229, 236, 237, 304, 311, 341, 364, 383, 432, 458, 471, 598], "type_f": 5, "type_b": 5, "type_": 5, "convolut": [5, 11, 14, 17, 18, 23, 25, 27, 31, 33, 34, 35, 39, 44, 49, 58, 59, 63, 82, 83, 84, 85, 86, 157, 160, 162, 177, 178, 179, 184, 185, 194, 205, 207, 208, 213, 220, 221, 250, 251, 252, 253, 254, 258, 259, 260, 271, 274, 287, 288, 298, 306, 308, 309, 311, 329, 334, 335, 383, 392, 394, 396, 398, 400, 405, 408, 428, 432, 436, 442, 444, 473, 518, 519, 520, 521, 522, 523, 539, 573, 586, 587, 598, 638], "relu": [5, 18, 19, 27, 28, 33, 34, 41, 46, 58, 108, 121, 133, 158, 164, 175, 176, 184, 185, 205, 207, 208, 215, 216, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 264, 269, 270, 271, 272, 273, 274, 275, 277, 278, 283, 288, 298, 299, 300, 306, 308, 312, 320, 332, 386, 388, 392, 394, 396, 398, 400, 404, 406, 408, 416, 424, 428, 430, 434, 436, 438, 442, 444, 450, 451, 452, 463, 473, 493, 495], "bound": [5, 17, 33, 59, 60, 78, 79, 160, 259, 260, 268, 274, 298, 301], "self": [5, 160, 436, 438, 440, 442, 444, 446], "partition_handl": 6, "dnnl_graph_partition_t": [6, 304, 355, 360, 365], "p": [6, 12, 22, 62, 160, 161, 179, 228, 229, 265, 266, 304, 337, 418, 420, 598, 600], "aop": 6, "ekind": [6, 298, 304, 365, 444, 446], "get_ops_num": 6, "get_op": 6, "compiled_partit": [6, 36, 178, 259, 260, 268, 274, 298, 301, 304, 355, 363, 365, 367, 373, 374, 375, 436, 438, 440, 444, 446], "e": [6, 14, 15, 17, 19, 22, 23, 25, 33, 56, 58, 59, 61, 64, 67, 91, 94, 106, 107, 117, 118, 137, 141, 162, 166, 173, 174, 175, 176, 177, 178, 194, 213, 247, 252, 253, 257, 259, 260, 263, 264, 266, 267, 269, 270, 273, 274, 276, 277, 279, 280, 281, 284, 285, 294, 298, 299, 300, 303, 304, 306, 311, 329, 341, 386, 398, 406, 414, 416, 420, 422, 424, 432, 448, 450, 454, 456, 459, 465, 467, 485, 493, 495, 499, 517, 537, 581, 587, 597, 598, 602, 619], "is_support": [6, 259, 260, 268, 274, 298, 301, 304, 365], "get_input_port": [6, 36, 259, 260, 268, 274, 298, 301], "get_output_port": [6, 36, 259, 260, 268, 274, 298, 301], "get_engine_kind": 6, "raw": [6, 24, 263, 267, 414, 422, 432], "c": [6, 9, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 27, 28, 31, 56, 57, 61, 64, 65, 66, 71, 73, 74, 76, 80, 99, 106, 107, 114, 139, 155, 156, 157, 158, 162, 163, 164, 165, 166, 173, 175, 176, 177, 190, 194, 200, 213, 228, 246, 257, 263, 265, 266, 267, 273, 277, 279, 282, 284, 285, 286, 294, 302, 303, 304, 310, 311, 314, 321, 322, 328, 329, 335, 340, 341, 347, 349, 372, 376, 377, 378, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 442, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 536, 541, 543, 545, 547, 548, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 587, 589, 591, 593, 595, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 617, 619, 624, 627, 629], "handl": [6, 7, 14, 15, 17, 18, 24, 35, 36, 63, 162, 167, 175, 176, 177, 179, 246, 247, 248, 249, 255, 256, 257, 259, 260, 264, 265, 266, 267, 268, 271, 272, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 293, 295, 296, 297, 298, 301, 302, 304, 311, 314, 321, 329, 330, 335, 344, 346, 347, 348, 349, 350, 352, 354, 355, 360, 362, 363, 364, 365, 367, 368, 372, 376, 377, 378, 384, 386, 388, 390, 402, 404, 406, 416, 418, 420, 422, 428, 430, 432, 436, 438, 440, 442, 444, 446, 448, 452, 454, 456, 459, 461, 463, 465, 467, 471, 475, 477, 479, 481, 483, 487, 489, 491, 493, 497, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "directli": [6, 19, 23, 28, 35, 63, 166, 172, 177, 263, 329, 365, 414, 432, 440, 446, 493, 579, 620], "without": [6, 7, 10, 13, 15, 18, 23, 24, 28, 31, 34, 35, 155, 164, 173, 175, 176, 184, 221, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 317, 319, 329, 330, 346, 347, 365, 368, 376, 377, 378, 384, 386, 388, 390, 392, 398, 400, 402, 404, 405, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 428, 430, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 589, 591, 600, 602, 604, 606, 609, 611, 613, 615, 619, 624, 625, 627, 629], "contain": [6, 7, 14, 18, 19, 22, 23, 27, 36, 40, 44, 59, 71, 72, 81, 82, 83, 84, 85, 86, 87, 104, 105, 114, 115, 123, 125, 126, 127, 128, 129, 130, 131, 147, 148, 160, 174, 177, 178, 194, 246, 256, 271, 273, 278, 280, 282, 290, 302, 311, 317, 319, 329, 330, 331, 341, 346, 358, 362, 363, 365, 376, 377, 380, 384, 396, 404, 426, 428, 432, 434, 436, 440, 442, 444, 446, 452, 456, 461, 477, 493, 497, 519, 521, 523, 525, 527, 529, 537, 581, 583, 585, 593, 594, 601, 630], "onli": [6, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 42, 43, 45, 46, 48, 49, 50, 52, 53, 56, 58, 59, 61, 63, 64, 66, 67, 87, 89, 90, 107, 121, 122, 123, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 194, 213, 214, 215, 216, 224, 225, 229, 238, 249, 253, 254, 257, 258, 284, 294, 311, 317, 318, 319, 321, 329, 330, 331, 341, 347, 349, 362, 365, 374, 375, 376, 378, 390, 392, 394, 398, 400, 406, 408, 414, 422, 426, 432, 436, 438, 440, 442, 444, 446, 450, 465, 471, 473, 485, 499, 519, 521, 523, 525, 527, 529, 581, 583, 585, 587, 595, 624], "unord": 6, "gener": [6, 14, 16, 18, 22, 23, 27, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 62, 65, 155, 159, 160, 173, 174, 178, 193, 199, 201, 212, 228, 229, 246, 247, 248, 249, 255, 256, 257, 264, 271, 272, 276, 278, 279, 280, 281, 282, 283, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 306, 320, 329, 341, 349, 350, 355, 384, 386, 388, 390, 402, 404, 406, 416, 422, 426, 428, 430, 432, 436, 438, 440, 444, 446, 448, 452, 454, 456, 459, 461, 463, 467, 475, 477, 479, 481, 483, 485, 487, 489, 491, 497, 539, 624, 625, 639], "debug": [6, 11, 22, 23, 29, 159, 160, 178, 197, 207, 208, 329, 341, 426, 432, 434, 493, 579], "purpos": [6, 9, 10, 23, 24, 29, 31, 32, 154, 159, 177, 178, 284, 304, 329, 414, 432, 465, 473, 579], "verbos": [6, 22, 23, 24, 35, 156, 159, 341, 471, 501], "shape": [6, 15, 18, 19, 25, 28, 36, 41, 42, 52, 53, 56, 58, 64, 67, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 88, 89, 97, 98, 99, 104, 105, 112, 113, 114, 115, 116, 119, 125, 126, 127, 128, 129, 130, 131, 136, 146, 147, 149, 152, 162, 168, 174, 177, 179, 203, 204, 209, 240, 252, 259, 260, 263, 267, 268, 274, 287, 294, 298, 301, 330, 335, 346, 362, 365, 376, 377, 394, 396, 414, 422, 436, 442, 444, 450, 471, 485, 499, 539, 593, 601], "choos": [6, 15, 22, 23, 24, 25, 28, 29, 36, 59, 61, 63, 67, 158, 168, 246, 252, 256, 271, 278, 280, 282, 285, 287, 290, 302, 329, 365, 384, 394, 396, 404, 422, 428, 450, 452, 456, 461, 467, 471, 473, 477, 497, 499], "optim": [6, 12, 14, 15, 19, 23, 24, 25, 28, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 157, 159, 162, 164, 165, 166, 168, 175, 176, 177, 202, 210, 246, 256, 257, 271, 278, 280, 282, 290, 302, 306, 365, 370, 384, 386, 388, 394, 402, 404, 406, 426, 428, 432, 434, 448, 452, 454, 456, 461, 463, 465, 471, 473, 474, 477, 481, 487, 489, 491, 493, 497], "save": [6, 23, 35, 36, 62, 66, 157, 215, 216, 289, 365, 475], "some": [6, 9, 10, 11, 12, 13, 14, 15, 17, 23, 25, 28, 31, 33, 35, 59, 62, 66, 155, 156, 157, 159, 160, 162, 172, 173, 174, 177, 178, 182, 183, 253, 254, 258, 273, 277, 294, 303, 314, 329, 347, 365, 378, 390, 392, 394, 398, 400, 408, 414, 422, 426, 432, 434, 436, 438, 440, 442, 444, 446, 450, 471, 485, 493, 499, 581, 586], "under": [6, 35, 175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 365, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "certain": [6, 18, 19, 24, 28, 29, 30, 61, 178, 194, 213, 318, 365, 535, 586, 587], "dure": [6, 9, 13, 14, 15, 16, 17, 18, 19, 22, 23, 28, 29, 31, 33, 35, 36, 56, 58, 59, 60, 61, 63, 64, 66, 67, 147, 152, 154, 156, 157, 160, 162, 177, 179, 182, 183, 197, 199, 201, 202, 210, 215, 216, 229, 268, 294, 301, 306, 314, 347, 365, 378, 414, 434, 471, 485, 493, 539, 579, 581, 587, 595, 620, 625], "stage": [6, 28, 36, 61, 67, 147, 259, 260, 268, 274, 298, 301, 349, 357, 362, 365, 436, 438, 440, 442, 444, 446, 624], "unsupport": [6, 15, 23, 60, 178, 179, 259, 260, 268, 274, 284, 285, 298, 299, 300, 301, 358, 365, 436, 438, 440, 442, 444, 446, 465, 467, 493, 495], "befor": [6, 9, 12, 15, 16, 17, 24, 25, 26, 28, 29, 30, 31, 32, 34, 36, 44, 58, 81, 82, 83, 84, 85, 86, 108, 112, 136, 146, 154, 160, 168, 175, 178, 184, 185, 234, 235, 250, 258, 266, 280, 294, 311, 329, 341, 357, 363, 365, 383, 392, 408, 418, 420, 426, 432, 434, 457, 471, 473, 485, 493, 579, 587], "transform": [6, 12, 15, 17, 18, 34, 41, 42, 52, 60, 99, 104, 105, 175, 257, 304, 306, 309, 329, 348, 349, 365, 379, 394, 396, 406, 432, 548, 581, 621, 639], "isn": [6, 67], "tensor_handl": 7, "aengin": [7, 376, 377, 378, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 583, 585, 589, 591, 600, 604, 606, 607, 609, 611, 613, 615, 617, 619, 627, 629], "get_data_handl": [7, 32, 154, 167, 175, 176, 253, 254, 257, 265, 266, 284, 329, 398, 400, 406, 418, 420, 432, 465, 579], "set_data_handl": [7, 265, 266, 329, 376, 377, 418, 420, 579], "get_engin": [7, 329, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 617, 619, 627, 629], "get_logical_tensor": 7, "static": [7, 23, 44, 65, 167, 175, 176, 226, 227, 246, 247, 248, 249, 250, 255, 256, 257, 258, 263, 264, 267, 271, 272, 276, 278, 279, 280, 281, 282, 283, 285, 289, 290, 291, 292, 293, 295, 296, 297, 302, 304, 384, 386, 388, 390, 392, 402, 404, 406, 408, 414, 416, 422, 428, 430, 448, 452, 454, 456, 459, 461, 463, 467, 475, 477, 479, 481, 483, 487, 489, 491, 497, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 536, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 620, 624, 627, 629], "make_scalar_tensor": 7, "storag": [7, 13, 18, 31, 175, 176, 214, 238, 257, 329, 330, 335, 346, 348, 349, 368, 376, 377, 406, 579, 622, 623], "alloc": [7, 8, 17, 18, 24, 32, 154, 155, 175, 176, 217, 218, 236, 237, 243, 244, 246, 247, 248, 249, 251, 252, 255, 256, 257, 259, 260, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 309, 329, 330, 346, 353, 359, 363, 367, 368, 373, 374, 375, 376, 377, 384, 386, 388, 390, 394, 402, 404, 406, 416, 422, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 452, 454, 456, 459, 461, 463, 467, 469, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 497, 579, 581, 602], "own": [7, 15, 17, 18, 32, 35, 58, 154, 155, 329, 330, 335, 346, 368, 376, 377, 432, 579, 620], "dnnl_memory_alloc": [7, 32, 154, 250, 258, 269, 304, 329, 330, 346, 368, 376, 377, 392, 408, 424, 579], "special": [7, 12, 18, 21, 25, 31, 32, 33, 36, 57, 63, 67, 76, 154, 158, 161, 162, 165, 166, 168, 175, 176, 177, 193, 212, 257, 267, 284, 306, 329, 330, 335, 346, 355, 368, 376, 377, 406, 422, 465, 579], "instruct": [7, 13, 15, 23, 28, 29, 31, 34, 60, 62, 63, 67, 155, 160, 172, 175, 176, 178, 186, 189, 213, 257, 329, 330, 341, 346, 368, 376, 377, 406, 432, 579], "dnnl_memory_non": [7, 32, 154, 304, 329, 330, 346, 368, 376, 377, 579], "On": [7, 23, 24, 31, 58, 59, 67, 89, 172, 177, 178, 194, 213, 215, 216, 314, 347, 378, 414, 579], "usm": [7, 34, 217, 218, 243, 244, 300, 329, 330, 346, 363, 367, 374, 375, 376, 377, 383, 579], "associ": [7, 21, 25, 31, 33, 36, 44, 58, 158, 161, 162, 165, 166, 168, 329, 330, 335, 336, 346, 360, 363, 374, 376, 377, 579, 581, 617], "interpret": [7, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 99, 104, 105, 112, 114, 115, 147, 358], "must": [7, 9, 12, 13, 14, 15, 17, 19, 21, 22, 23, 25, 28, 32, 36, 38, 39, 42, 45, 48, 49, 50, 53, 56, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 162, 164, 173, 174, 175, 176, 194, 229, 257, 303, 311, 313, 314, 317, 319, 329, 330, 331, 335, 340, 341, 346, 347, 349, 350, 357, 362, 376, 377, 378, 394, 396, 406, 426, 432, 434, 436, 438, 440, 442, 444, 446, 493, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 589, 591, 593, 595, 600, 601, 602, 604, 606, 609, 611, 613, 615, 619, 624, 625, 627, 629], "host_scalar": [7, 18, 57, 202, 212, 286, 469, 581], "align": [8, 15, 42, 52, 53, 136, 164, 178, 265, 266, 304, 354, 363, 367, 432, 473], "cl_device_id": [8, 154, 156, 304, 330, 363, 374, 376], "dev": [8, 304, 367], "cl_context": [8, 154, 156, 275, 304, 330, 363, 374, 376], "ctx": [8, 265, 266, 304, 637], "lock_guard": 8, "mutex": 8, "pool_guard": 8, "pool_lock": 8, "ptr": [8, 304, 504, 637], "nullptr": [8, 17, 175, 176, 177, 179, 257, 275, 329, 330, 335, 357, 376, 406, 434, 548], "need_alloc_new_mm": 8, "auto": [8, 14, 15, 17, 24, 28, 44, 58, 59, 63, 70, 88, 98, 113, 116, 119, 136, 146, 149, 164, 167, 175, 176, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 394, 396, 398, 400, 402, 404, 406, 410, 412, 414, 416, 418, 420, 422, 426, 428, 430, 432, 434, 436, 438, 442, 444, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499], "cnt": 8, "map_size_ptr_": 8, "count": [8, 15, 71, 72, 89, 90, 110, 111, 147, 148, 160, 251, 259, 260, 274, 285, 298, 304, 311, 321, 467, 535], "method": [8, 22, 58, 155, 163, 179, 184, 185, 339, 362, 426, 432, 493, 504, 505, 507, 509, 511, 513, 516, 518, 520, 522, 524, 526, 528, 530, 532, 540, 542, 544, 546, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 582, 584, 588, 590, 599, 603, 605, 608, 610, 612, 614, 618, 626, 628, 631, 637], "allocate_host": 8, "dealloc": [8, 354, 363, 367, 432], "devic": [8, 11, 15, 16, 18, 23, 31, 32, 34, 154, 156, 179, 217, 218, 243, 244, 304, 321, 330, 346, 357, 363, 367, 374, 375, 376, 377, 426, 432, 434, 436, 438, 440, 442, 444, 445, 446, 493], "context": [8, 18, 28, 32, 156, 175, 176, 179, 194, 213, 257, 265, 266, 304, 329, 330, 344, 346, 349, 363, 367, 374, 375, 376, 377, 406, 418, 420, 426, 432, 434, 442, 444, 446, 493, 581, 624, 637], "event": [8, 32, 154, 160, 304, 330, 346, 363, 367, 374, 375, 376, 377], "cl_event": [8, 304, 330, 363, 374, 376], "deallocate_host": 8, "clear": [8, 329, 333, 356, 357], "quick": 9, "recap": 9, "creation": [9, 10, 13, 14, 15, 16, 17, 19, 23, 33, 56, 58, 64, 67, 156, 159, 168, 265, 266, 267, 275, 277, 299, 303, 329, 341, 349, 362, 384, 396, 402, 404, 414, 422, 426, 428, 432, 434, 450, 452, 454, 456, 461, 473, 493, 497, 499, 620], "step": [9, 18, 23, 28, 42, 52, 58, 59, 60, 63, 64, 136, 156, 174, 175, 176, 246, 257, 259, 260, 268, 274, 279, 280, 282, 284, 298, 301, 302, 349, 384, 406, 426, 432, 434, 436, 442, 444, 454, 456, 461, 465, 467, 469, 471, 493, 495, 497, 624], "consist": [9, 18, 21, 23, 27, 29, 41, 52, 59, 67, 155, 164, 177, 179, 329, 471, 581], "follow": [9, 12, 14, 15, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 173, 175, 176, 177, 178, 179, 194, 213, 215, 216, 226, 227, 259, 260, 268, 274, 277, 288, 289, 294, 298, 301, 303, 306, 311, 329, 330, 340, 341, 346, 349, 370, 376, 377, 390, 391, 414, 426, 432, 434, 450, 467, 469, 471, 473, 475, 485, 493, 495, 499, 506, 508, 545, 547, 548, 561, 563, 565, 567, 573, 575, 579, 581, 586, 595, 624, 627, 629], "descriptor": [9, 14, 15, 16, 17, 18, 19, 23, 28, 33, 56, 57, 58, 59, 61, 64, 66, 157, 162, 163, 164, 167, 168, 177, 179, 190, 193, 211, 212, 214, 228, 229, 238, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 266, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 311, 312, 313, 316, 317, 319, 320, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 337, 338, 339, 340, 342, 343, 345, 346, 376, 377, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 408, 410, 412, 414, 418, 420, 426, 428, 430, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 626, 627, 628, 629], "backward": [9, 17, 18, 21, 23, 25, 27, 29, 58, 89, 90, 99, 106, 107, 161, 164, 168, 178, 179, 184, 185, 215, 216, 224, 225, 246, 247, 253, 254, 258, 272, 280, 281, 282, 289, 290, 294, 302, 312, 317, 319, 320, 323, 324, 326, 327, 331, 332, 335, 339, 340, 342, 343, 384, 386, 394, 398, 400, 408, 430, 456, 459, 461, 471, 475, 477, 485, 497, 505, 506, 509, 510, 518, 519, 524, 525, 530, 531, 540, 541, 544, 545, 550, 551, 556, 557, 560, 561, 564, 565, 568, 569, 572, 573, 582, 583, 588, 589, 603, 604, 608, 609, 612, 613, 626, 627], "propag": [9, 16, 17, 18, 19, 21, 23, 25, 27, 28, 33, 34, 56, 58, 61, 64, 66, 107, 157, 158, 161, 163, 164, 165, 166, 168, 178, 179, 215, 216, 224, 225, 228, 229, 246, 247, 272, 280, 281, 282, 287, 288, 290, 302, 311, 312, 317, 319, 320, 323, 324, 326, 327, 331, 332, 335, 339, 340, 342, 343, 383, 384, 385, 386, 387, 394, 404, 405, 428, 429, 430, 431, 432, 448, 449, 454, 455, 456, 457, 459, 460, 461, 462, 472, 473, 475, 476, 477, 478, 483, 484, 489, 490, 497, 498, 502, 505, 506, 507, 508, 509, 510, 511, 512, 517, 518, 519, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 582, 583, 584, 585, 588, 589, 590, 591, 597, 598, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 619, 626, 627, 628, 629], "forward": [9, 17, 18, 21, 23, 25, 27, 34, 41, 58, 72, 160, 161, 164, 168, 179, 215, 216, 224, 225, 252, 253, 254, 258, 270, 275, 281, 294, 299, 300, 311, 312, 317, 319, 320, 323, 324, 326, 327, 329, 331, 332, 335, 339, 340, 342, 343, 384, 385, 386, 387, 392, 393, 394, 395, 396, 398, 400, 404, 405, 408, 426, 428, 429, 430, 431, 434, 448, 449, 454, 455, 456, 457, 459, 460, 461, 462, 471, 475, 476, 477, 478, 483, 484, 485, 489, 490, 493, 495, 497, 498, 506, 507, 508, 510, 511, 512, 519, 521, 522, 523, 525, 527, 528, 529, 531, 532, 533, 541, 542, 543, 545, 546, 547, 551, 553, 554, 555, 557, 558, 559, 561, 562, 563, 565, 566, 567, 569, 570, 571, 573, 574, 575, 583, 584, 585, 587, 589, 590, 591, 604, 605, 606, 609, 610, 611, 613, 614, 615, 627, 628, 629], "might": [9, 11, 14, 15, 17, 19, 21, 27, 28, 31, 33, 35, 56, 59, 61, 63, 64, 66, 157, 162, 164, 165, 174, 176, 177, 194, 253, 254, 258, 267, 313, 398, 400, 408, 414, 422, 426, 432, 450, 514, 586], "well": [9, 15, 17, 18, 23, 31, 58, 59, 155, 173, 175, 177, 178, 266, 267, 394, 414, 418, 422, 442, 444, 471, 548], "train": [9, 12, 14, 15, 16, 17, 23, 58, 60, 62, 63, 66, 73, 108, 155, 159, 177, 215, 216, 224, 225, 253, 254, 258, 281, 294, 312, 320, 383, 384, 385, 386, 387, 394, 399, 401, 409, 430, 431, 448, 449, 456, 457, 459, 460, 461, 462, 471, 475, 476, 477, 478, 483, 484, 486, 489, 490, 497, 498, 502], "specif": [9, 13, 14, 18, 19, 21, 22, 26, 28, 30, 33, 36, 42, 52, 53, 56, 60, 66, 136, 155, 157, 163, 164, 165, 174, 175, 176, 179, 190, 194, 199, 201, 207, 208, 211, 213, 219, 228, 229, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 311, 320, 321, 329, 330, 337, 341, 346, 349, 357, 360, 368, 376, 377, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 531, 533, 579, 600, 624], "aspect": [9, 471, 502], "sole": [9, 58], "detail": [9, 13, 15, 18, 22, 23, 31, 34, 36, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 58, 59, 63, 160, 169, 172, 178, 252, 253, 264, 266, 284, 306, 398, 414, 416, 420, 432, 465, 495], "why": [9, 177], "found": [9, 15, 22, 23, 31, 156, 157, 172, 173, 175, 176, 177, 178, 179, 257, 269, 289, 300, 406, 424, 475, 495], "concept": [9, 15, 162, 306, 307, 321, 334, 344, 414, 422, 426, 432, 434, 450, 465, 471, 493, 499, 639], "fact": [9, 65, 162, 432, 473], "import": [9, 14, 15, 18, 23, 58, 59, 63, 65, 155, 177, 426, 434, 493], "u": [9, 27, 164, 165, 184, 185, 263, 267, 277, 280, 303, 414, 422, 432, 450, 456, 499], "now": [9, 15, 24, 27, 28, 52, 58, 61, 164, 246, 251, 253, 254, 256, 271, 278, 280, 282, 285, 290, 294, 302, 384, 398, 400, 404, 418, 420, 426, 428, 432, 452, 456, 461, 467, 471, 477, 485, 493, 497], "2": [9, 14, 15, 19, 29, 31, 32, 33, 35, 41, 42, 52, 53, 56, 57, 60, 62, 64, 66, 67, 73, 74, 75, 81, 82, 83, 84, 86, 89, 90, 95, 99, 105, 106, 107, 112, 118, 121, 122, 126, 136, 146, 155, 156, 160, 164, 167, 174, 175, 176, 177, 178, 184, 185, 186, 189, 190, 194, 199, 200, 208, 210, 211, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 311, 329, 335, 341, 348, 349, 362, 384, 386, 388, 390, 392, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 514, 517, 581, 587, 595, 597, 598, 602, 619, 623, 624], "fulli": [9, 17, 18, 41, 44, 59, 61, 67, 473], "correspond": [9, 12, 14, 15, 18, 19, 21, 23, 24, 25, 27, 28, 30, 31, 33, 35, 36, 37, 42, 46, 47, 51, 52, 55, 56, 59, 60, 61, 64, 67, 81, 82, 112, 125, 126, 127, 128, 129, 130, 131, 147, 155, 156, 158, 162, 163, 164, 165, 166, 175, 177, 178, 179, 194, 203, 213, 229, 270, 273, 288, 310, 311, 317, 319, 321, 322, 329, 330, 335, 340, 346, 357, 376, 377, 414, 426, 432, 434, 471, 473, 493, 519, 521, 523, 525, 527, 529, 579, 581, 587, 595], "onc": [9, 14, 17, 26, 29, 30, 38, 39, 45, 46, 48, 49, 50, 58, 59, 63, 67, 159, 164, 174, 175, 176, 177, 257, 266, 335, 341, 349, 357, 362, 394, 406, 418, 420, 422, 426, 432, 450, 499, 624], "chang": [9, 13, 14, 15, 18, 22, 23, 29, 30, 31, 35, 44, 58, 67, 147, 159, 162, 170, 177, 194, 202, 210, 221, 287, 311, 329, 335, 338, 341, 377, 394, 432, 471, 473, 579, 587, 597], "problem": [9, 63, 162, 178, 179, 267, 414, 422], "where": [9, 12, 13, 14, 15, 17, 19, 21, 22, 25, 27, 28, 31, 33, 41, 42, 52, 56, 59, 60, 61, 63, 64, 66, 67, 71, 74, 80, 81, 82, 87, 89, 90, 97, 106, 107, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 139, 147, 156, 157, 161, 163, 164, 165, 177, 178, 194, 203, 213, 234, 235, 284, 289, 292, 311, 314, 347, 378, 392, 394, 396, 414, 432, 465, 471, 475, 481, 587], "sourc": [9, 14, 15, 17, 23, 25, 27, 28, 33, 34, 36, 58, 59, 60, 61, 63, 67, 158, 162, 163, 165, 172, 179, 228, 229, 246, 247, 248, 253, 254, 255, 256, 258, 263, 264, 265, 266, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 302, 304, 312, 313, 316, 317, 319, 320, 323, 324, 326, 327, 328, 329, 331, 332, 335, 337, 338, 339, 342, 343, 345, 370, 384, 386, 388, 396, 398, 400, 402, 404, 408, 410, 411, 412, 413, 414, 416, 426, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 473, 475, 477, 479, 481, 483, 487, 489, 491, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 598, 600, 601, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629, 630], "destin": [9, 14, 15, 16, 25, 27, 28, 33, 58, 60, 61, 63, 67, 158, 162, 163, 165, 172, 175, 176, 179, 228, 229, 246, 247, 248, 255, 256, 264, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 304, 311, 312, 313, 316, 317, 319, 320, 323, 324, 326, 327, 328, 329, 331, 332, 335, 337, 338, 339, 342, 343, 345, 384, 386, 388, 396, 402, 404, 416, 426, 428, 430, 432, 448, 450, 452, 454, 456, 459, 461, 463, 467, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 587, 589, 591, 598, 600, 601, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "so": [9, 14, 15, 18, 24, 25, 30, 41, 57, 58, 59, 63, 65, 67, 139, 160, 164, 168, 174, 175, 177, 263, 266, 294, 311, 329, 335, 394, 396, 414, 426, 432, 434, 436, 442, 444, 473, 485, 493, 579, 586], "extra": [9, 17, 19, 30, 42, 59, 63, 175, 176, 177, 178, 215, 216, 229, 257, 280, 406, 432, 456, 471], "were": [9, 17, 32, 154, 178, 426, 432, 434, 493, 624], "design": [9, 14, 15, 25, 64, 80, 165, 174, 471], "extens": [9, 29, 32, 34, 35, 42, 52, 53, 62, 63, 67, 154, 164, 186, 189, 274, 275, 298, 299, 325, 330, 346, 347, 361, 363, 367, 383, 435, 494, 495, 496], "henc": [9, 14, 17, 19, 28, 33, 56, 59, 64, 159, 164, 165, 166, 172, 175, 177, 178, 259, 260, 263, 268, 274, 298, 301, 317, 319, 331, 414, 432, 471, 519, 521, 523, 525, 527, 529, 583, 585], "thei": [9, 14, 17, 18, 19, 24, 28, 32, 35, 36, 42, 56, 57, 59, 60, 61, 63, 64, 67, 99, 104, 106, 107, 154, 157, 164, 175, 176, 177, 178, 194, 257, 259, 260, 265, 268, 271, 274, 277, 298, 301, 406, 418, 426, 428, 432, 434, 450, 471, 473, 493], "structur": [9, 14, 52, 177, 194, 229, 306, 329, 341, 515, 534, 537, 578, 580, 586, 592, 594, 596, 616, 621, 622, 630], "them": [9, 15, 23, 24, 33, 35, 36, 44, 58, 59, 63, 125, 126, 127, 128, 129, 130, 131, 136, 155, 175, 176, 177, 203, 215, 216, 257, 306, 311, 312, 323, 326, 329, 340, 406, 426, 432, 471, 506, 508, 539, 545, 547, 561, 563, 565, 567, 573, 575, 629], "destroi": [9, 17, 154, 229, 311, 321, 329, 335, 344, 348, 349, 350, 354, 355, 360, 364, 365, 368, 432, 471, 493, 581, 587, 595], "right": [9, 12, 28, 33, 41, 52, 66, 67, 71, 72, 81, 82, 83, 84, 85, 86, 106, 107, 112, 114, 115, 136, 157, 163, 165, 166, 177, 178, 228, 229, 230, 231, 256, 271, 287, 289, 294, 317, 319, 329, 331, 404, 428, 471, 475, 485, 519, 521, 523, 525, 527, 529, 583, 585, 598], "after": [9, 14, 15, 19, 22, 28, 36, 42, 52, 59, 61, 146, 160, 164, 173, 175, 176, 178, 194, 227, 251, 256, 257, 259, 260, 268, 269, 270, 271, 273, 274, 294, 298, 299, 300, 301, 311, 335, 341, 349, 360, 365, 404, 406, 424, 426, 428, 432, 434, 436, 438, 442, 444, 471, 473, 485, 493, 495, 517, 586, 587, 597, 598, 602, 619, 624], "modifi": [9, 19, 23, 28, 56, 59, 61, 64, 67, 166, 311, 333, 356], "stai": [9, 177, 581], "equival": [9, 32, 154, 535, 548, 579, 593, 617], "null": [9, 179, 250, 258, 269, 311, 312, 313, 316, 317, 319, 320, 323, 324, 326, 327, 328, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 378, 392, 408, 424, 535, 548, 579, 593, 617], "upon": [9, 15, 16, 31, 34, 58, 426, 432, 434, 471, 493], "unless": [9, 21, 24, 64, 175, 176, 178, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 329, 330, 335, 346, 376, 377, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 579, 593, 601], "simpli": [9, 25, 28, 168, 329, 414], "omit": [9, 14, 87, 89, 90, 123, 224, 225, 394], "skeleton": [9, 14], "simplifi": [9, 27, 28, 42, 59, 81, 110, 163, 173, 175, 176, 177, 257, 304, 406], "read": [9, 26, 32, 154, 246, 247, 248, 249, 256, 263, 264, 271, 272, 276, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 295, 296, 297, 302, 384, 386, 388, 390, 404, 414, 416, 428, 430, 434, 448, 452, 454, 456, 459, 461, 463, 465, 473, 475, 477, 479, 481, 483, 487, 489, 491, 493, 497, 579], "dnnl_primitive_attr_t": [9, 304, 311, 595], "dnnl_primitive_attr_cr": [9, 304, 311], "dnnl_primitive_attr_set_someth": 9, "param": [9, 14, 17, 175, 176, 179, 250, 257, 258, 263, 392, 406, 408, 414, 587, 624], "dnnl_primitive_attr_set_something_els": 9, "other_param": [9, 14], "dnnl_eltwise_backward_primitive_desc_cr": [9, 258, 304, 320, 408], "op_pd": [9, 14, 17], "hint_fwd_pd": [9, 304, 312, 317, 319, 320, 323, 324, 326, 327, 331, 332, 339, 340, 342, 343, 506, 510, 519, 521, 525, 527, 531, 541, 545, 551, 553, 557, 561, 565, 569, 573, 583, 589, 604, 607, 609, 613, 627], "here": [9, 14, 15, 17, 19, 22, 25, 27, 28, 33, 36, 58, 59, 60, 66, 67, 80, 81, 104, 105, 155, 157, 160, 164, 165, 172, 173, 175, 176, 177, 178, 184, 246, 247, 253, 257, 263, 270, 271, 277, 280, 281, 282, 289, 294, 302, 303, 304, 329, 357, 384, 386, 396, 398, 406, 414, 418, 420, 426, 428, 432, 442, 444, 450, 456, 459, 461, 471, 473, 475, 485, 497, 499, 581], "doe": [9, 14, 15, 17, 18, 21, 22, 23, 25, 28, 31, 33, 35, 41, 42, 53, 57, 58, 60, 61, 63, 64, 66, 68, 69, 93, 94, 102, 103, 109, 117, 118, 124, 132, 134, 135, 137, 143, 145, 146, 150, 152, 153, 155, 157, 159, 160, 161, 163, 165, 168, 173, 176, 177, 178, 179, 215, 216, 287, 311, 314, 316, 329, 347, 378, 396, 432, 471, 473, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 587, 589, 591, 595, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "effect": [9, 14, 26, 28, 29, 112, 156, 174, 178, 341, 539], "we": [9, 14, 15, 17, 19, 27, 28, 33, 53, 56, 58, 60, 64, 67, 81, 82, 136, 155, 157, 158, 163, 164, 165, 177, 178, 246, 250, 253, 254, 256, 258, 263, 265, 266, 267, 271, 273, 278, 280, 282, 284, 287, 290, 294, 302, 384, 392, 398, 400, 404, 408, 414, 418, 420, 422, 426, 428, 432, 434, 436, 438, 440, 442, 444, 446, 452, 456, 461, 465, 471, 473, 477, 485, 493, 497], "immedi": [9, 471, 620], "dnnl_primitive_attr_destroi": [9, 304, 311], "dnnl": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 28, 29, 30, 32, 33, 35, 36, 53, 56, 57, 58, 59, 61, 63, 64, 65, 67, 154, 156, 160, 161, 163, 164, 167, 170, 173, 175, 176, 177, 178, 179, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 309, 310, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 380, 384, 386, 388, 390, 392, 394, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499], "primitive_attr": [9, 11, 12, 13, 14, 15, 17, 18, 28, 58, 63, 175, 176, 179, 248, 249, 252, 256, 257, 263, 266, 267, 271, 277, 278, 283, 284, 286, 288, 292, 303, 304, 311, 372, 388, 390, 396, 404, 406, 414, 420, 422, 428, 450, 452, 463, 465, 469, 473, 481, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 587, 589, 591, 597, 598, 600, 601, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "set_someth": 9, "set_something_els": 9, "primitive_desc": [9, 14, 15, 17, 18, 19, 24, 28, 33, 56, 58, 59, 64, 156, 164, 179, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 312, 313, 317, 319, 320, 323, 324, 326, 327, 328, 331, 332, 335, 337, 339, 340, 342, 343, 372, 376, 377, 384, 386, 388, 390, 394, 396, 398, 400, 402, 404, 410, 412, 414, 416, 418, 420, 422, 426, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 505, 507, 509, 511, 513, 516, 518, 520, 522, 524, 526, 528, 530, 532, 540, 542, 544, 546, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 582, 584, 587, 588, 590, 593, 595, 598, 599, 601, 603, 605, 607, 608, 610, 612, 614, 618, 626, 628], "pd": [9, 14, 24, 27, 265, 294, 485, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582, 583, 584, 585, 588, 589, 590, 591, 593, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 626, 627, 628, 629], "happen": [9, 15, 28, 29, 35, 59, 63, 80, 156, 162, 174, 175, 176, 177, 250, 257, 258, 277, 314, 347, 349, 378, 392, 406, 408, 432, 450, 471], "As": [9, 14, 15, 16, 17, 19, 23, 24, 27, 28, 33, 36, 58, 59, 63, 162, 172, 177, 265, 289, 294, 311, 329, 418, 420, 475, 485, 581, 587], "mention": [9, 17, 19, 33, 59, 63, 136, 265, 396, 418, 420, 432], "abov": [9, 15, 17, 19, 29, 32, 33, 52, 59, 61, 63, 67, 112, 136, 154, 155, 166, 177, 178, 203, 204, 265, 306, 329, 418, 420, 432, 436, 438, 442, 444, 473, 581], "extend": [9, 15, 32, 42, 53, 154, 221, 311, 349, 624], "behavior": [9, 10, 13, 14, 16, 17, 19, 23, 28, 29, 56, 59, 61, 62, 63, 64, 66, 67, 160, 164, 166, 182, 183, 195, 196, 215, 216, 284, 303, 311, 329, 330, 344, 358, 362, 376, 436, 438, 440, 442, 444, 446, 465, 499, 581, 617, 620], "explan": [9, 178, 179], "provid": [9, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 26, 28, 30, 32, 34, 35, 36, 38, 41, 42, 44, 45, 48, 52, 53, 56, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 163, 164, 174, 175, 176, 178, 179, 215, 216, 236, 237, 246, 253, 256, 257, 261, 262, 271, 278, 280, 282, 290, 294, 302, 311, 326, 329, 333, 335, 356, 357, 362, 376, 377, 384, 398, 404, 406, 410, 412, 428, 436, 438, 440, 442, 444, 446, 452, 456, 461, 471, 473, 477, 485, 497, 549, 557, 559, 579, 587, 595], "section": [9, 13, 14, 15, 18, 19, 21, 23, 26, 27, 28, 31, 33, 35, 56, 58, 59, 63, 66, 157, 159, 160, 164, 165, 173, 175, 176, 257, 263, 306, 406, 414, 432, 436, 438, 440, 442, 444, 446], "scratchpad": [9, 18, 23, 27, 28, 59, 175, 176, 179, 228, 229, 236, 237, 257, 311, 335, 349, 383, 406, 595, 598, 624], "intermedi": [9, 14, 15, 27, 28, 31, 33, 36, 42, 45, 52, 53, 59, 63, 66, 162, 166, 175, 176, 257, 263, 287, 311, 314, 347, 349, 378, 406, 414, 422, 624], "temporari": [9, 17, 18, 27, 59, 265, 266, 335, 341], "implicit": [9, 13, 21, 25, 27, 28, 52, 67, 162, 168, 195, 196], "f32": [9, 10, 12, 13, 14, 15, 19, 21, 28, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 161, 162, 163, 164, 165, 166, 167, 172, 175, 176, 177, 178, 182, 183, 195, 196, 200, 203, 204, 211, 227, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 311, 383, 384, 386, 388, 390, 396, 398, 402, 404, 406, 410, 412, 414, 416, 420, 422, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 587, 595], "accumul": [9, 14, 15, 24, 31, 63, 77, 112, 157, 158, 162, 164, 175, 176, 179, 182, 183, 257, 275, 294, 299, 300, 309, 311, 315, 336, 349, 360, 383, 406, 434, 485, 493, 495, 586, 587, 595, 624], "datatyp": [9, 10, 13, 15, 16, 31, 164, 174, 178, 179, 182, 183, 311], "round": [9, 10, 15, 33, 60, 71, 87, 89, 90, 114, 123, 152, 177, 182, 183, 184, 185, 205, 234, 235, 285, 306, 308, 311, 335, 383, 467, 595], "argument": [9, 13, 14, 16, 31, 34, 58, 120, 175, 176, 179, 209, 228, 229, 239, 240, 246, 247, 248, 249, 253, 254, 255, 256, 257, 264, 271, 272, 276, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 302, 311, 312, 323, 326, 330, 335, 340, 346, 348, 362, 374, 375, 376, 377, 384, 386, 388, 390, 394, 398, 400, 402, 404, 406, 416, 418, 420, 428, 430, 432, 434, 448, 452, 454, 456, 459, 461, 463, 467, 469, 475, 477, 479, 481, 483, 487, 489, 491, 497, 506, 508, 537, 545, 547, 561, 563, 565, 567, 573, 575, 581, 593, 595, 601, 623, 624, 627, 629], "downconvers": [9, 15, 31, 195, 196], "determinist": [9, 12, 16, 36, 179, 311, 383, 595], "dropout": [9, 52, 67, 311, 335, 595], "appli": [9, 12, 14, 15, 19, 21, 22, 28, 31, 33, 42, 48, 49, 50, 52, 53, 56, 58, 60, 61, 63, 64, 67, 68, 70, 78, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 102, 108, 109, 110, 112, 113, 116, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 137, 139, 141, 146, 148, 149, 150, 157, 161, 163, 164, 166, 175, 178, 194, 202, 207, 208, 210, 213, 215, 216, 227, 269, 271, 277, 284, 292, 303, 311, 313, 314, 329, 330, 335, 340, 346, 347, 349, 376, 377, 378, 396, 424, 426, 428, 432, 450, 465, 473, 481, 499, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 579, 595, 624, 627, 629], "pseudo": [9, 28, 35, 63, 67, 156, 162, 177], "random": [9, 16, 67, 234, 235, 263, 264, 267, 277, 285, 303, 414, 416, 422, 450, 467, 499], "quantiz": [9, 13, 14, 31, 34, 38, 39, 44, 45, 46, 52, 53, 54, 58, 63, 67, 87, 89, 90, 162, 164, 175, 176, 203, 204, 205, 226, 227, 249, 252, 257, 260, 263, 266, 284, 303, 304, 306, 308, 311, 349, 383, 390, 396, 406, 420, 438, 450, 466, 499, 587, 595, 624], "infer": [9, 14, 15, 23, 35, 46, 53, 62, 63, 67, 155, 159, 164, 177, 202, 209, 210, 215, 216, 224, 225, 240, 250, 251, 252, 260, 265, 266, 268, 277, 294, 301, 303, 304, 306, 383, 393, 395, 414, 419, 421, 451, 473, 485, 499, 502], "post": [9, 12, 15, 31, 34, 38, 41, 52, 58, 59, 60, 63, 175, 176, 179, 207, 208, 215, 216, 247, 248, 249, 252, 256, 257, 271, 278, 283, 288, 292, 311, 335, 348, 349, 383, 386, 388, 404, 406, 428, 438, 452, 463, 473, 481, 586, 587, 595, 623, 624], "fuse": [9, 12, 14, 15, 18, 19, 33, 34, 38, 44, 53, 58, 59, 60, 215, 216, 288, 311, 312, 335, 386, 388, 404, 428, 450, 451, 452, 463, 587], "mostli": [9, 59, 194, 213, 329], "becaus": [9, 14, 15, 19, 23, 29, 30, 33, 52, 56, 59, 60, 64, 66, 175, 178, 179, 209, 213, 228, 239, 240, 294, 320, 329, 394, 396, 432, 436, 438, 442, 444, 471, 473, 485, 493, 587], "separ": [9, 14, 15, 19, 23, 26, 28, 56, 59, 64, 99, 155, 162, 178, 179, 294, 329, 335, 418, 420, 432, 473, 485], "delai": [9, 253, 254, 398, 400], "successfulli": [9, 284, 465, 624], "whatev": [9, 288, 473], "configur": [9, 17, 19, 22, 30, 31, 34, 53, 56, 59, 60, 64, 67, 107, 158, 164, 174, 175, 178, 179, 215, 216, 236, 237, 241, 242, 252, 311, 312, 323, 326, 341, 358, 392, 394, 396, 404, 405, 471, 501, 586, 587, 595], "want": [9, 15, 17, 59, 63, 155, 442, 444], "howev": [9, 11, 13, 14, 17, 19, 23, 25, 32, 33, 42, 56, 58, 59, 63, 64, 67, 155, 157, 158, 165, 166, 172, 177, 266, 267, 271, 294, 320, 329, 394, 414, 418, 422, 426, 428, 432, 434, 473, 485, 493], "try": [9, 252, 253, 264, 266, 273, 284, 285, 294, 299, 300, 398, 416, 420, 432, 436, 438, 440, 442, 444, 446, 465, 467, 485, 493, 495], "dnnl_unimpl": [9, 156, 209, 239, 240, 252, 253, 264, 266, 284, 285, 341, 398, 416, 420, 465, 467], "unfortun": [9, 63, 155, 173], "about": [9, 14, 17, 59, 67, 156, 159, 160, 177, 178, 261, 262, 306, 329, 410, 412, 432, 473], "what": [9, 14, 15, 59, 60, 178, 203, 273, 299, 300, 304, 329, 335, 426, 432, 471, 493, 495, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 536, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629, 631], "exactli": [9, 28, 59, 63, 67, 125, 126, 127, 128, 129, 130, 131, 329], "go": [9, 58, 84, 177, 263, 414, 426, 432, 434, 493], "wrong": [9, 156, 432], "document": [9, 14, 15, 23, 27, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 63, 65, 155, 172], "benefit": [10, 18, 23, 58, 159, 174, 320], "speed": [10, 17, 30, 58, 156, 281, 459], "up": [10, 13, 22, 23, 31, 34, 41, 63, 67, 156, 157, 158, 160, 175, 176, 177, 247, 248, 250, 257, 258, 269, 276, 279, 281, 289, 296, 335, 362, 386, 388, 392, 406, 408, 424, 448, 454, 459, 467, 471, 475, 489, 539], "notic": [10, 13, 23, 178, 207, 208, 432], "impact": [10, 11, 13, 15, 31, 35, 173, 177, 178], "accuraci": [10, 13, 15, 28, 34, 35, 53, 58, 59, 60, 63, 166, 263, 273, 275, 414, 415, 432, 434], "numer": [10, 13, 16, 19, 33, 44, 56, 63, 64, 74, 99, 106, 107, 139, 166, 172, 185, 265, 266, 273, 275, 284, 294, 299, 300, 434, 465, 485, 493, 495], "alter": [10, 13, 16, 164], "low": [10, 15, 16, 18, 31, 34, 35, 53, 58, 174, 175, 176, 257, 307, 311, 317, 319, 331, 406, 519, 521, 523, 525, 527, 529, 583, 585, 595], "accumulation_mod": [10, 31, 112, 203, 204, 310, 372, 595], "accept": [10, 11, 16, 24, 26, 34, 36, 40, 58, 60, 72, 82, 83, 115, 153, 160, 341, 358, 360], "strict": [10, 13, 112, 166, 182, 183, 195, 203, 204, 311], "f64": [10, 28, 31, 33, 64, 67, 157, 166, 183, 211, 285, 311, 467], "s32": [10, 12, 14, 15, 16, 21, 28, 31, 33, 53, 60, 61, 63, 67, 70, 72, 82, 83, 86, 89, 90, 97, 98, 104, 105, 112, 125, 126, 127, 128, 129, 130, 131, 149, 157, 158, 162, 163, 165, 167, 175, 176, 182, 183, 200, 203, 204, 211, 257, 261, 262, 263, 277, 311, 406, 410, 412, 414, 450, 595], "relax": [10, 31, 112, 166, 182, 203, 204], "partial": [10, 17, 19, 29, 56, 64, 182, 183, 341, 450, 471], "src": [10, 14, 15, 19, 25, 27, 28, 31, 33, 34, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 165, 166, 168, 173, 176, 178, 182, 183, 246, 247, 248, 249, 250, 253, 254, 255, 256, 258, 264, 271, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 304, 311, 312, 320, 323, 326, 384, 386, 388, 390, 391, 392, 398, 400, 402, 404, 408, 416, 418, 420, 428, 430, 432, 448, 452, 454, 456, 459, 461, 463, 465, 467, 475, 477, 479, 481, 483, 485, 487, 489, 491, 497, 512, 517, 543, 551, 553, 555, 601, 602, 619], "dst": [10, 12, 14, 15, 16, 19, 21, 25, 27, 28, 31, 33, 37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 165, 166, 168, 176, 182, 183, 184, 185, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 264, 271, 272, 276, 278, 279, 280, 281, 282, 283, 285, 289, 290, 291, 292, 293, 295, 296, 297, 302, 304, 311, 312, 320, 323, 326, 384, 386, 388, 390, 392, 396, 398, 400, 402, 404, 408, 416, 418, 420, 428, 430, 432, 448, 452, 454, 456, 459, 461, 463, 467, 475, 477, 479, 481, 483, 487, 489, 491, 497, 512, 514, 517, 543, 551, 553, 555, 587, 601, 602, 619], "fastest": [10, 182, 183], "higher": [10, 14, 19, 26, 28, 30, 31, 56, 60, 64, 67, 155, 157, 158, 163, 177, 178, 179], "f16": [10, 13, 14, 15, 19, 21, 28, 31, 33, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 161, 162, 163, 164, 165, 166, 172, 175, 176, 182, 183, 195, 196, 200, 203, 204, 211, 285, 467], "To": [11, 12, 14, 15, 23, 24, 26, 27, 28, 31, 32, 35, 36, 42, 57, 58, 59, 60, 63, 66, 81, 84, 136, 139, 154, 159, 160, 162, 163, 173, 178, 256, 266, 294, 404, 418, 422, 426, 432, 434, 436, 438, 440, 442, 444, 446, 467, 471, 485, 493], "valid": [11, 23, 31, 59, 67, 71, 72, 78, 79, 81, 82, 83, 84, 85, 86, 114, 115, 160, 164, 175, 176, 178, 203, 204, 229, 257, 284, 288, 304, 313, 329, 349, 360, 362, 363, 374, 406, 465, 469, 471, 495, 539, 579, 581, 624], "certif": 11, "guarante": [11, 31, 35, 59, 147, 148, 156, 177, 414], "multipl": [11, 14, 17, 18, 19, 21, 27, 28, 31, 35, 36, 42, 44, 45, 50, 56, 59, 63, 64, 130, 155, 161, 162, 170, 176, 178, 184, 185, 194, 213, 220, 221, 257, 264, 283, 284, 285, 286, 294, 303, 304, 306, 309, 314, 329, 330, 334, 345, 346, 357, 376, 377, 383, 390, 394, 406, 414, 415, 416, 422, 426, 432, 450, 463, 468, 469, 470, 471, 473, 485, 499, 576, 579, 581, 597, 638, 639], "platform": [11, 28, 31, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 160, 169, 175, 176, 179, 252, 253, 257, 264, 266, 284, 370, 398, 406, 416, 420, 465, 473], "exact": [11, 44, 63, 158, 164, 263, 414, 432], "bitwis": [11, 19, 23, 56, 64, 241, 358], "most": [11, 14, 15, 18, 21, 22, 23, 24, 25, 28, 29, 31, 34, 59, 61, 63, 66, 67, 112, 155, 161, 162, 168, 172, 177, 194, 228, 321, 335, 414, 432, 450, 471, 499, 535, 548, 579, 593, 617], "fix": [11, 177], "environ": [11, 13, 16, 22, 23, 29, 30, 31, 34, 35, 40, 62, 63, 65, 155, 156, 159, 160, 173, 178, 179, 234, 235, 341, 358, 471, 473], "particular": [11, 14, 16, 17, 18, 27, 28, 31, 35, 59, 63, 67, 166, 174, 177, 178, 194, 270, 273, 321, 329, 335, 344, 414, 426, 432, 434, 493, 535, 581], "hardwar": [11, 13, 15, 19, 21, 28, 32, 33, 36, 56, 60, 63, 66, 155, 157, 160, 164, 165, 169, 172, 174, 175, 176, 257, 349, 355, 406, 471, 624], "softwar": [11, 22, 62, 63, 175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "runtim": [11, 14, 15, 19, 24, 26, 31, 32, 35, 41, 42, 52, 56, 64, 67, 73, 106, 154, 156, 162, 170, 174, 178, 179, 228, 229, 277, 303, 309, 311, 330, 335, 346, 347, 353, 354, 357, 358, 363, 367, 374, 375, 378, 414, 432, 434, 442, 443, 444, 450, 471, 473, 493, 495, 499, 587, 630], "version": [11, 19, 22, 23, 24, 56, 58, 65, 156, 173, 175, 176, 178, 184, 185, 194, 213, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 329, 335, 341, 372, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 517, 619, 630], "variabl": [11, 13, 19, 21, 22, 23, 25, 28, 29, 30, 33, 35, 40, 56, 61, 62, 64, 65, 66, 67, 68, 71, 78, 80, 81, 91, 94, 95, 100, 102, 108, 109, 112, 114, 132, 137, 139, 141, 150, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 173, 178, 202, 210, 294, 304, 335, 341, 358, 432, 471, 473, 485], "ident": [11, 25, 64, 65, 125, 126, 127, 128, 129, 130, 131, 156, 159, 166, 168, 246, 256, 271, 278, 280, 282, 290, 302, 384, 402, 404, 428, 452, 456, 461, 477, 491, 497], "between": [11, 14, 15, 17, 18, 21, 22, 23, 32, 34, 36, 37, 38, 39, 41, 42, 44, 45, 48, 49, 50, 52, 53, 63, 71, 81, 98, 99, 114, 115, 134, 154, 155, 162, 172, 174, 177, 178, 179, 202, 210, 236, 237, 250, 251, 253, 254, 258, 259, 260, 269, 270, 271, 274, 284, 294, 298, 311, 321, 329, 338, 362, 383, 392, 394, 398, 400, 408, 414, 422, 425, 427, 428, 432, 465, 471, 485, 502, 539, 581, 587, 595, 601], "produc": [11, 17, 19, 28, 33, 36, 40, 59, 61, 62, 108, 166, 178, 304, 329, 335, 341, 414, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582, 583, 584, 585, 588, 589, 590, 591, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 624, 625, 626, 627, 628, 629], "bit": [11, 13, 14, 15, 16, 23, 24, 29, 31, 44, 58, 59, 60, 63, 172, 186, 189, 190, 200, 211, 219, 234, 235, 245, 263, 266, 284, 311, 314, 341, 347, 358, 370, 378, 396, 414, 434, 465, 587, 595, 620], "wise": [11, 15, 24, 27, 33, 34, 59, 68, 70, 88, 94, 98, 109, 113, 116, 117, 119, 120, 121, 124, 135, 143, 145, 146, 149, 152, 158, 177, 207, 208, 220, 221, 256, 271, 272, 289, 383, 404, 428, 431, 475], "reli": [11, 27, 162], "non": [11, 15, 16, 18, 22, 25, 28, 31, 44, 58, 60, 63, 64, 67, 71, 72, 81, 82, 83, 84, 85, 86, 91, 92, 104, 108, 114, 115, 155, 162, 164, 167, 175, 176, 177, 178, 179, 184, 185, 190, 200, 211, 215, 216, 228, 229, 253, 254, 257, 261, 262, 277, 288, 329, 349, 354, 355, 363, 367, 375, 398, 400, 406, 410, 412, 432, 450, 473, 581, 624], "construct": [11, 18, 32, 36, 38, 40, 41, 42, 45, 46, 48, 49, 50, 52, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 175, 176, 257, 294, 329, 330, 346, 360, 374, 375, 376, 377, 378, 406, 434, 485, 493, 597, 631, 637], "atom": [11, 458], "order": [11, 14, 18, 23, 27, 28, 29, 30, 32, 35, 58, 59, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 162, 164, 165, 177, 178, 194, 203, 204, 213, 241, 242, 253, 254, 258, 273, 280, 311, 314, 316, 317, 319, 329, 330, 331, 336, 341, 347, 378, 398, 400, 408, 432, 436, 438, 442, 444, 456, 473, 517, 519, 521, 523, 525, 527, 529, 539, 581, 583, 585, 587, 595], "dnnl_primitive_attr_set_determinist": [11, 304, 311], "set_determinist": [11, 595], "permit": [11, 24], "dispatch": [11, 13, 18, 23, 28, 30, 341, 501], "perform": [11, 12, 14, 15, 17, 18, 23, 24, 26, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 63, 68, 70, 71, 73, 81, 84, 88, 98, 99, 104, 106, 107, 109, 113, 114, 116, 117, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 136, 139, 143, 145, 146, 149, 152, 155, 164, 170, 172, 177, 178, 179, 180, 215, 216, 224, 225, 253, 254, 258, 259, 260, 274, 284, 285, 287, 288, 289, 298, 306, 311, 312, 313, 314, 317, 319, 320, 323, 326, 327, 328, 329, 331, 332, 341, 343, 347, 358, 370, 378, 383, 392, 394, 396, 398, 400, 408, 414, 415, 422, 432, 434, 438, 450, 465, 468, 472, 474, 475, 493, 499, 517, 579, 586, 587, 595, 619, 624], "matmul": [11, 13, 15, 16, 23, 31, 34, 41, 42, 52, 67, 178, 179, 205, 220, 261, 262, 263, 264, 267, 268, 277, 284, 285, 286, 301, 303, 304, 306, 308, 328, 372, 383, 411, 413, 415, 417, 423, 440, 446, 451, 464, 465, 466, 467, 468, 500, 593], "normal": [11, 27, 31, 34, 35, 59, 73, 74, 99, 106, 107, 139, 184, 185, 215, 216, 220, 221, 247, 276, 279, 281, 284, 309, 327, 334, 335, 383, 387, 390, 391, 422, 432, 449, 455, 460, 465, 471, 509, 510, 511, 512, 540, 541, 542, 543, 556, 557, 558, 559, 568, 570, 638], "especi": [11, 42, 53, 59, 63, 159, 178, 329, 586], "gpu": [11, 14, 15, 18, 19, 21, 22, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 66, 67, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 178, 179, 191, 192, 246, 269, 270, 274, 275, 284, 285, 298, 301, 303, 304, 321, 363, 370, 374, 383, 384, 425, 427, 432, 442, 443, 444, 447, 465, 467, 471, 473, 493, 495, 499, 502, 630], "mani": [12, 23, 27, 36, 41, 42, 52, 58, 155, 177, 335, 432], "gnn": 12, "model": [12, 14, 18, 27, 28, 31, 32, 34, 36, 41, 42, 44, 52, 53, 59, 60, 61, 87, 99, 123, 154, 164, 251, 265, 266, 305, 306, 398, 399, 400, 401, 408, 409, 418, 419, 420, 421, 422, 432, 433, 485, 486], "layer": [12, 27, 31, 34, 58, 59, 104, 106, 107, 164, 220, 221, 246, 263, 265, 266, 277, 279, 280, 282, 294, 302, 303, 306, 309, 329, 334, 335, 340, 383, 384, 392, 394, 396, 408, 409, 414, 418, 420, 450, 455, 456, 461, 471, 485, 497, 499, 506, 508, 545, 547, 556, 557, 558, 559, 561, 563, 565, 567, 573, 575, 607, 627, 629, 638], "signific": [12, 15, 24, 59, 172, 177], "amount": [12, 17, 23, 28, 81, 82, 83, 84, 85, 86, 178, 318, 329], "time": [12, 15, 17, 18, 19, 21, 22, 23, 28, 56, 58, 59, 61, 62, 63, 66, 67, 81, 82, 87, 119, 155, 156, 157, 163, 165, 174, 175, 177, 184, 222, 223, 226, 227, 246, 251, 267, 273, 277, 279, 280, 282, 285, 294, 302, 303, 311, 325, 329, 330, 333, 335, 341, 346, 347, 356, 357, 361, 362, 363, 367, 384, 394, 396, 414, 422, 426, 432, 450, 454, 456, 461, 467, 473, 485, 497, 499, 595], "enhanc": [12, 64, 306], "akin": 12, "binari": [12, 15, 19, 23, 28, 33, 34, 36, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 61, 62, 64, 67, 156, 157, 161, 163, 166, 174, 175, 176, 184, 185, 215, 216, 220, 221, 249, 257, 284, 306, 309, 311, 329, 334, 335, 372, 383, 389, 406, 465, 471, 517, 581, 587, 593, 597, 598, 602, 619, 624, 638], "depend": [12, 14, 15, 17, 18, 19, 22, 23, 31, 36, 42, 44, 56, 60, 63, 64, 65, 67, 77, 136, 155, 158, 159, 164, 166, 176, 177, 178, 179, 194, 213, 311, 314, 316, 320, 329, 330, 335, 346, 347, 363, 367, 374, 375, 376, 377, 378, 392, 394, 414, 432, 467, 471, 517, 531, 533, 581, 587, 595], "prng": 12, "variat": [12, 155], "philox": 12, "algorithm": [12, 14, 15, 19, 23, 31, 33, 58, 59, 157, 161, 163, 175, 176, 178, 179, 184, 228, 229, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 261, 262, 264, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 302, 311, 313, 317, 319, 320, 327, 331, 337, 339, 343, 372, 384, 386, 388, 390, 394, 396, 398, 400, 402, 404, 406, 410, 412, 416, 426, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 587, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "mathrm": [12, 67], "mask": [12, 14, 15, 28, 42, 52, 60, 61, 67, 155, 162, 175, 176, 252, 257, 263, 267, 277, 286, 303, 304, 311, 335, 348, 349, 358, 396, 406, 414, 422, 450, 469, 499, 587, 595, 620, 623, 624], "cdot": [12, 14, 15, 19, 21, 27, 28, 33, 41, 52, 56, 60, 61, 63, 64, 66, 67, 71, 74, 81, 87, 89, 90, 99, 101, 106, 112, 114, 123, 125, 126, 127, 128, 129, 130, 131, 148, 157, 158, 162, 163, 164, 168, 175, 185, 414], "usual": [12, 32, 41, 52, 59, 60, 108, 155, 156, 160, 175, 176, 178, 199, 201, 257, 406, 434, 493, 539], "potenti": [12, 15, 28, 33, 63, 160, 174, 175, 176, 203, 257, 335, 406, 471, 581], "u8": [12, 14, 15, 21, 24, 28, 31, 33, 34, 46, 48, 49, 50, 53, 54, 60, 61, 64, 67, 87, 89, 90, 123, 157, 158, 162, 163, 164, 165, 166, 175, 176, 178, 200, 211, 249, 252, 257, 260, 263, 264, 266, 277, 285, 383, 391, 396, 406, 414, 416, 420, 438, 450, 467], "whose": 12, "either": [12, 15, 18, 19, 21, 23, 25, 36, 56, 59, 60, 63, 64, 67, 72, 73, 75, 82, 83, 86, 104, 105, 136, 158, 161, 168, 172, 175, 176, 177, 178, 184, 185, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 312, 323, 326, 327, 329, 331, 339, 340, 343, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 569, 571, 581, 583, 585, 604, 606, 613, 615], "got": [12, 175, 176, 179, 257, 259, 260, 268, 273, 274, 275, 298, 301, 406, 432, 434], "k": [12, 15, 17, 41, 52, 53, 66, 67, 89, 112, 167, 175, 176, 179, 219, 228, 229, 245, 250, 253, 254, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 277, 281, 283, 284, 285, 286, 301, 303, 304, 314, 327, 347, 349, 350, 372, 378, 392, 398, 400, 406, 408, 410, 412, 414, 416, 422, 450, 459, 463, 465, 467, 469, 499, 569, 571, 598, 624, 625, 632], "drop": [12, 13], "out": [12, 14, 15, 18, 19, 27, 32, 35, 36, 42, 52, 53, 66, 81, 82, 83, 84, 85, 86, 154, 157, 160, 165, 166, 174, 176, 177, 178, 179, 194, 209, 213, 220, 221, 239, 240, 241, 242, 250, 258, 265, 272, 273, 285, 290, 304, 311, 316, 329, 338, 345, 392, 408, 418, 420, 430, 432, 467, 471, 477, 517, 587, 618, 625], "seed": [12, 16, 67, 335], "leq": [12, 21, 33, 132, 158, 165], "dnnl_primitive_attr_get_dropout": [12, 304, 311], "dnnl_primitive_attr_set_dropout": [12, 304, 311], "get_dropout": [12, 595], "set_dropout": [12, 595], "three": [12, 23, 27, 41, 53, 58, 67, 155, 164, 177, 285, 426, 467, 473], "addit": [12, 13, 14, 15, 18, 19, 21, 23, 26, 27, 28, 29, 30, 31, 36, 42, 53, 59, 61, 63, 67, 70, 82, 84, 85, 86, 112, 131, 155, 160, 166, 175, 176, 179, 215, 216, 229, 246, 256, 257, 271, 278, 280, 282, 290, 302, 329, 349, 362, 384, 396, 404, 406, 426, 428, 432, 434, 452, 456, 461, 471, 473, 477, 493, 497, 624], "dnnl_arg_attr_dropout_mask": [12, 67, 304, 335], "through": [12, 14, 23, 26, 31, 36, 41, 42, 52, 53, 58, 60, 156, 173, 174, 175, 294, 362, 396, 426, 432, 436, 438, 442, 444, 471, 485, 493, 539], "dnnl_arg_attr_dropout_prob": [12, 67, 304, 335], "singl": [12, 15, 16, 19, 21, 23, 28, 31, 34, 35, 41, 42, 44, 58, 60, 64, 66, 120, 125, 126, 127, 128, 129, 130, 131, 162, 164, 172, 175, 176, 177, 184, 185, 190, 200, 207, 208, 211, 257, 268, 285, 301, 303, 304, 311, 314, 329, 335, 347, 349, 378, 383, 396, 406, 414, 432, 465, 467, 499, 581, 587, 595], "hold": [12, 17, 33, 67, 125, 126, 127, 128, 129, 130, 131, 263, 266, 294, 311, 349, 394, 414, 418, 432, 471, 485, 595, 624], "dnnl_arg_attr_dropout_se": [12, 67, 304, 335], "benefici": [13, 33, 59, 177, 586], "how": [13, 14, 15, 17, 28, 32, 34, 36, 38, 41, 42, 45, 48, 52, 58, 60, 65, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 99, 104, 105, 114, 115, 147, 154, 155, 156, 157, 163, 164, 167, 172, 175, 176, 177, 178, 184, 185, 263, 311, 314, 329, 335, 347, 378, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 428, 429, 430, 431, 432, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 497, 498, 499, 500, 587], "narrow": 13, "bf16": [13, 14, 15, 19, 21, 24, 28, 31, 33, 34, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 161, 162, 163, 164, 165, 166, 172, 175, 176, 195, 196, 200, 211, 253, 285, 303, 383, 467, 499], "tf32": [13, 195, 196], "furthermor": [13, 28, 81], "do": [13, 14, 15, 17, 19, 24, 31, 35, 42, 52, 57, 58, 59, 63, 71, 114, 154, 155, 162, 163, 168, 172, 177, 179, 194, 213, 232, 233, 259, 260, 266, 268, 274, 275, 287, 298, 301, 329, 418, 471, 473, 579, 581], "affect": [13, 14, 23, 35, 60, 63, 156, 177, 194, 341, 358, 624], "remain": [13, 23, 27, 28, 81, 177, 265, 266, 294, 418, 420, 471, 485, 581, 587], "3": [13, 14, 15, 31, 33, 41, 42, 52, 56, 60, 63, 67, 73, 74, 75, 95, 102, 107, 121, 136, 160, 164, 167, 170, 175, 176, 177, 190, 199, 200, 210, 211, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 271, 272, 273, 274, 275, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 329, 335, 362, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 428, 430, 432, 434, 436, 438, 442, 444, 452, 454, 456, 459, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 539, 581], "disabl": [13, 23, 26, 29, 30, 35, 62, 159, 160, 178, 197, 317, 319, 324, 328, 333, 341, 356, 357, 358, 521, 523, 527, 529], "smaller": [13, 15, 23, 78, 79, 112, 162, 277, 450], "least": [13, 18, 22, 67, 80, 159, 314, 347, 348, 376, 378, 426, 432, 579, 623], "accur": [13, 28, 63, 267, 422], "expon": [13, 31, 120, 124, 172, 184, 185, 190, 200, 211, 284, 465], "mantissa": [13, 16, 31, 172, 190, 200, 211, 234, 235, 284, 465], "ignor": [13, 28, 30, 31, 71, 72, 75, 82, 104, 105, 114, 115, 273, 311, 326, 329, 336, 432, 557, 559, 587], "second": [13, 14, 26, 27, 41, 42, 49, 52, 53, 63, 81, 122, 125, 126, 127, 128, 129, 130, 131, 136, 194, 213, 228, 229, 259, 274, 294, 298, 311, 329, 362, 426, 436, 438, 442, 444, 467, 471, 485, 581, 587], "dnnl_primitive_attr_set_fpmath_mode_v2": [13, 304, 311], "weight": [13, 14, 17, 23, 25, 26, 27, 28, 31, 34, 38, 39, 41, 45, 48, 49, 50, 58, 59, 60, 61, 63, 67, 81, 82, 83, 84, 85, 86, 112, 158, 162, 164, 172, 177, 178, 179, 194, 202, 210, 213, 224, 225, 228, 229, 232, 233, 246, 251, 252, 253, 254, 256, 258, 260, 264, 265, 266, 271, 277, 278, 280, 282, 283, 284, 285, 287, 288, 289, 290, 294, 302, 303, 304, 311, 317, 319, 324, 328, 329, 332, 335, 340, 383, 384, 394, 396, 398, 400, 404, 408, 416, 417, 418, 420, 428, 438, 450, 452, 456, 461, 463, 465, 467, 471, 473, 475, 477, 485, 497, 500, 506, 508, 510, 512, 519, 520, 521, 523, 525, 526, 527, 529, 541, 543, 545, 547, 551, 552, 553, 555, 557, 559, 561, 563, 565, 567, 573, 575, 577, 587, 595, 598, 607, 627, 629], "de": [13, 53, 87, 89, 90, 178, 303, 471, 499], "refer": [13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 37, 38, 39, 43, 45, 46, 47, 48, 49, 51, 54, 55, 56, 60, 61, 64, 65, 66, 67, 112, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176, 177, 229, 252, 253, 257, 259, 260, 264, 266, 268, 284, 298, 301, 306, 311, 312, 314, 320, 323, 326, 329, 335, 347, 378, 398, 406, 414, 416, 420, 426, 432, 434, 465, 471, 473, 493, 495, 512, 543, 598, 624], "tutori": [13, 15, 31, 67, 263, 267, 273, 277, 284, 303, 383, 465], "decompress": [13, 15, 31, 34, 67, 303, 383], "onednn_default_fpmath_mod": 13, "dnnl_set_default_fpmath_mod": [13, 304, 322], "set_default_fpmath_mod": [13, 341, 372], "build": [13, 15, 17, 62, 65, 147, 170, 236, 237, 250, 258, 341, 362, 370, 392, 393, 394, 395, 398, 399, 400, 401, 408, 409, 418, 419, 420, 421, 434, 437, 439, 441, 443, 445, 447, 485, 486, 539], "arm": [13, 178, 370], "bfloat16": [13, 29, 31, 34, 59, 186, 189, 190, 200, 253, 383, 398, 399], "kernel": [13, 14, 23, 27, 30, 32, 35, 41, 52, 62, 71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 157, 160, 174, 175, 176, 177, 179, 203, 204, 228, 229, 250, 251, 253, 254, 257, 258, 275, 287, 289, 299, 304, 311, 331, 341, 349, 355, 392, 394, 398, 400, 406, 408, 422, 471, 475, 495, 583, 585, 587, 598, 624], "introduc": [13, 15, 35, 42, 52, 63, 159, 172, 177, 432, 473], "typic": [14, 15, 18, 19, 25, 36, 38, 41, 42, 45, 48, 52, 53, 56, 59, 60, 63, 66, 112, 153, 155, 162, 165, 166, 177, 179, 207, 208, 259, 260, 263, 274, 277, 298, 303, 329, 335, 338, 414, 432, 450, 499], "bandwidth": [14, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 59, 306, 471], "pressur": [14, 59], "lead": [14, 17, 19, 21, 23, 24, 28, 31, 33, 42, 52, 53, 56, 59, 63, 64, 66, 162, 175, 176, 177, 203, 257, 267, 314, 347, 349, 350, 378, 406, 422, 432, 436, 442, 444, 624, 625], "append": [14, 35, 175, 176, 257, 311, 406, 587], "mechan": [14, 32, 35, 44, 53, 62, 65, 154, 155, 265, 266, 306, 418, 420], "just": [14, 15, 23, 27, 28, 30, 33, 57, 59, 62, 159, 160, 173, 175, 176, 177, 178, 184, 194, 252, 253, 257, 264, 266, 284, 398, 406, 416, 420, 422, 426, 432, 434, 436, 438, 440, 442, 444, 446, 465, 471, 493], "like": [14, 18, 19, 23, 27, 28, 34, 36, 41, 53, 57, 59, 61, 63, 65, 66, 74, 112, 157, 164, 175, 176, 177, 178, 257, 306, 311, 358, 362, 406, 414, 422, 432, 436, 438, 440, 442, 444, 446, 586, 587], "dnnl_post_ops_t": [14, 304, 311, 587], "post_op": [14, 58, 175, 176, 179, 248, 249, 252, 256, 257, 267, 271, 277, 278, 283, 288, 304, 311, 348, 349, 372, 388, 390, 396, 404, 406, 422, 428, 450, 452, 463, 473, 548, 595, 623, 624], "attach": [14, 23, 25, 58, 59, 155, 175, 176, 257, 406, 426, 432, 434, 436, 440, 442, 444, 446, 493, 579, 587], "set_post_op": [14, 28, 58, 175, 176, 248, 249, 252, 256, 257, 267, 271, 277, 278, 283, 288, 388, 390, 396, 404, 406, 422, 428, 450, 452, 463, 473, 595, 624], "dnnl_primitive_attr_set_post_op": [14, 304, 311], "simpl": [14, 15, 24, 28, 34, 156, 173, 174, 178, 250, 258, 263, 267, 277, 286, 392, 396, 408, 414, 422, 432, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 450, 465, 467, 468, 469], "po": [14, 267, 277, 422, 450, 624], "assert": [14, 17, 35, 167, 177, 251, 253, 254, 259, 260, 263, 265, 266, 268, 274, 298, 301, 329, 394, 398, 400, 414, 436, 438, 440, 442, 444, 446, 581], "len": [14, 314, 347, 378, 587], "append_someth": 14, "append_something_els": 14, "note": [14, 17, 23, 31, 34, 35, 37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 59, 60, 63, 83, 155, 164, 175, 176, 177, 178, 184, 194, 246, 247, 255, 257, 259, 260, 263, 266, 268, 280, 281, 282, 289, 294, 298, 301, 302, 306, 316, 335, 357, 362, 384, 386, 394, 396, 402, 406, 414, 418, 420, 432, 456, 459, 461, 475, 485, 497, 517], "matter": [14, 59, 63, 436, 438, 442, 444], "further": [14, 27, 28, 32, 41, 81, 154, 163, 194, 213, 473], "would": [14, 15, 17, 19, 23, 27, 28, 30, 56, 58, 59, 63, 64, 67, 157, 162, 175, 176, 177, 257, 263, 311, 312, 314, 329, 340, 347, 378, 396, 406, 414, 432, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 581, 587, 595, 601, 627, 629], "togeth": [14, 40, 177, 340, 348, 473, 506, 545, 561, 565, 573, 575, 586, 623, 627], "anoth": [14, 15, 17, 22, 27, 38, 42, 45, 46, 48, 50, 54, 59, 134, 155, 160, 164, 175, 177, 179, 259, 260, 274, 298, 335, 362, 394, 426, 432, 434, 493, 539, 548, 581], "sequenc": [14, 18, 27, 28, 42, 52, 53, 63, 160, 194, 265, 266, 294, 311, 418, 420, 426, 434, 473, 485, 493, 587], "appear": [14, 25, 38, 39, 45, 46, 48, 49, 50, 59, 165, 177, 178], "maximum": [14, 15, 18, 21, 34, 35, 37, 59, 127, 139, 157, 174, 179, 205, 265, 266, 284, 289, 294, 304, 306, 308, 318, 347, 414, 465, 475, 485], "32": [14, 15, 24, 31, 59, 60, 63, 172, 175, 176, 190, 194, 200, 211, 219, 245, 253, 254, 256, 257, 265, 266, 268, 271, 301, 303, 304, 311, 314, 335, 347, 378, 396, 398, 400, 404, 406, 428, 499, 587, 595], "page": [14, 15, 18, 25, 34, 59, 60, 67, 84, 160, 161, 162, 168], "moreov": [14, 27, 30, 33, 60, 155, 194, 213], "actual": [14, 15, 17, 18, 28, 59, 61, 63, 155, 164, 166, 167, 175, 176, 177, 193, 212, 214, 238, 257, 311, 329, 335, 406, 414, 426, 432, 471, 579, 581, 595, 607], "instanc": [14, 15, 17, 19, 27, 28, 30, 35, 58, 63, 67, 155, 159, 162, 173, 177, 194, 276, 329, 347, 358, 360, 365, 378, 432, 448, 536, 586, 598, 620, 624], "veri": [14, 15, 17, 59, 63, 172, 177, 426, 432], "slow": 14, "robust": [14, 58, 59], "code": [14, 18, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 58, 59, 63, 65, 154, 156, 159, 160, 162, 168, 174, 175, 176, 177, 178, 257, 259, 260, 274, 275, 298, 329, 341, 358, 394, 396, 406, 418, 420, 426, 434, 436, 438, 440, 442, 444, 446, 471, 473, 493, 501], "inspect": [14, 18, 335, 432], "index": [14, 19, 21, 25, 27, 28, 33, 56, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 164, 165, 166, 168, 177, 179, 250, 258, 273, 304, 311, 316, 321, 329, 330, 335, 346, 359, 373, 376, 377, 392, 394, 408, 418, 420, 426, 432, 434, 493, 514, 517, 535, 537, 579, 581, 587, 593, 595, 598, 601, 619], "less": [14, 15, 21, 28, 67, 112, 155, 163, 184, 185, 294, 333, 356, 396, 485, 535], "than": [14, 15, 17, 21, 23, 26, 28, 31, 33, 59, 63, 67, 78, 79, 98, 112, 147, 162, 163, 168, 177, 178, 184, 185, 229, 236, 237, 253, 254, 258, 277, 333, 356, 398, 400, 408, 432, 450, 473, 535], "its": [14, 15, 17, 18, 21, 23, 29, 31, 33, 41, 44, 49, 52, 57, 58, 61, 63, 66, 67, 120, 122, 154, 155, 164, 174, 175, 176, 177, 178, 194, 215, 216, 257, 277, 294, 303, 329, 360, 364, 394, 396, 406, 432, 434, 450, 458, 485, 493, 499, 535, 548, 579, 593, 617, 620], "popular": [14, 15, 44, 177, 432], "activ": [14, 15, 17, 19, 22, 27, 34, 41, 60, 61, 78, 94, 108, 117, 164, 177, 194, 213, 228, 229, 277, 287, 304, 311, 340, 450, 471, 539, 587, 595, 598, 607, 627, 629], "preced": [14, 19, 23, 27, 29, 30, 38, 62, 66, 72, 82, 83, 86, 157, 159, 160, 165, 178, 194, 471], "inner": [14, 27, 31, 34, 58, 63, 177, 194, 220, 221, 251, 278, 309, 334, 383, 394, 453, 471, 550, 551, 552, 553, 554, 555, 581, 638], "product": [14, 27, 31, 34, 41, 42, 53, 58, 63, 67, 112, 147, 175, 176, 220, 221, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 269, 270, 271, 272, 276, 278, 279, 280, 281, 282, 283, 285, 289, 290, 291, 292, 293, 295, 296, 297, 302, 304, 306, 309, 314, 329, 334, 347, 378, 383, 384, 386, 388, 390, 392, 394, 398, 400, 402, 404, 406, 408, 416, 424, 428, 430, 448, 453, 454, 456, 459, 461, 463, 467, 471, 475, 477, 479, 481, 483, 487, 489, 491, 497, 550, 551, 552, 553, 554, 555, 581, 638], "dnnl_post_ops_append_eltwis": [14, 304, 311], "append_eltwis": [14, 58, 175, 176, 248, 252, 256, 257, 271, 277, 278, 283, 288, 388, 396, 404, 406, 428, 450, 452, 463, 473, 587], "simplic": [14, 164, 177, 255, 304, 402, 414, 426, 434, 493], "alg": [14, 178, 471, 473], "alpha": [14, 19, 28, 33, 34, 56, 57, 60, 66, 91, 92, 100, 101, 108, 121, 158, 175, 176, 179, 203, 204, 228, 229, 248, 250, 253, 254, 256, 257, 258, 267, 271, 273, 277, 278, 281, 283, 286, 303, 304, 311, 314, 320, 327, 332, 340, 347, 372, 378, 388, 392, 398, 400, 404, 406, 408, 422, 428, 432, 450, 452, 459, 463, 469, 470, 473, 499, 531, 533, 569, 571, 587, 589, 591, 598, 607, 627, 629], "beta": [14, 19, 28, 33, 56, 64, 66, 73, 74, 99, 100, 101, 106, 107, 120, 141, 142, 162, 175, 176, 179, 203, 204, 228, 229, 248, 250, 253, 254, 256, 257, 258, 267, 271, 273, 278, 281, 283, 304, 311, 312, 314, 320, 323, 326, 327, 340, 347, 372, 378, 388, 392, 398, 400, 404, 406, 408, 422, 428, 432, 452, 459, 463, 473, 531, 533, 569, 571, 587, 598, 607, 627, 629], "replac": [14, 33, 34, 41, 63, 64, 78, 79, 160, 164, 165, 173, 178, 422, 423, 432], "operatornam": [14, 15, 31, 33, 175], "preserv": [14, 17, 58, 59, 250, 258, 392, 408], "exist": [14, 18, 31, 32, 35, 38, 67, 154, 232, 233, 329, 359, 363, 367, 581], "prior": [14, 197, 311, 330, 335, 336, 358, 376, 432, 587, 593, 594, 624], "shift": [14, 27, 34, 60, 63, 74, 106, 215, 216, 247, 249, 276, 279, 303, 304, 311, 312, 323, 326, 335, 386, 390, 391, 448, 454, 499, 557, 559, 595], "multipli": [14, 17, 27, 37, 41, 42, 50, 52, 63, 164, 205, 267, 275, 294, 299, 300, 306, 308, 311, 314, 329, 345, 347, 378, 422, 434, 485, 493, 495, 587, 619], "scale": [14, 21, 25, 26, 27, 28, 31, 34, 42, 44, 49, 53, 58, 61, 63, 67, 74, 87, 89, 90, 91, 92, 99, 104, 105, 106, 107, 123, 162, 163, 166, 168, 175, 176, 179, 190, 203, 204, 211, 215, 216, 227, 247, 249, 252, 257, 260, 263, 266, 276, 277, 279, 284, 286, 292, 297, 303, 304, 306, 311, 312, 314, 323, 326, 335, 339, 345, 347, 348, 349, 378, 383, 386, 390, 391, 396, 406, 414, 418, 420, 422, 438, 448, 450, 454, 465, 466, 470, 481, 491, 499, 557, 559, 587, 594, 595, 604, 606, 619, 623, 624], "residu": [14, 265, 586], "learn": [14, 15, 23, 27, 28, 29, 31, 34, 44, 58, 59, 63, 155, 186, 189, 370, 471, 472, 586], "block": [14, 18, 25, 27, 34, 35, 52, 160, 174, 175, 176, 178, 179, 193, 194, 212, 213, 228, 229, 257, 288, 329, 350, 370, 406, 432, 471, 581, 586, 625], "previous": [14, 60, 259, 260, 274, 298, 329, 396, 434, 471, 493, 579, 581, 595], "scenario": [14, 15, 31, 32, 42, 52, 154, 155, 157, 176, 202, 210, 396], "previou": [14, 23, 33, 42, 52, 58, 60, 162, 164, 177, 250, 258, 263, 277, 303, 311, 392, 408, 414, 450, 499, 587], "magnitud": 14, "operand": [14, 63, 178, 311, 587], "s8": [14, 15, 19, 21, 24, 28, 31, 33, 46, 48, 49, 50, 53, 54, 56, 60, 61, 64, 67, 87, 89, 90, 123, 157, 158, 162, 163, 164, 165, 166, 175, 176, 178, 200, 211, 252, 257, 260, 263, 264, 266, 277, 285, 292, 303, 396, 406, 414, 416, 420, 438, 450, 467, 481, 499], "gemm": [14, 17, 23, 28, 63, 177, 179, 265, 266, 420, 473], "_point": 14, "origin": [14, 15, 19, 33, 56, 59, 60, 64, 104, 105, 162, 163, 166, 168, 176, 177, 178, 184, 277, 303, 311, 320, 329, 396, 414, 450, 499, 579, 587], "reinterpret": [14, 28, 32, 311, 587], "_data": 14, "_type": 14, "1x1": [14, 38, 179, 311, 587], "seen": [14, 473], "mobilenet_v1": 14, "stack": [14, 164], "opportun": 14, "dnnl_post_ops_append_dw": [14, 304, 311], "append_dw": [14, 587], "better": [14, 21, 23, 59, 172, 177, 179, 329, 394, 414, 422, 432, 438, 471, 473], "readabl": [14, 432, 493], "assum": [14, 15, 18, 22, 23, 28, 63, 64, 65, 81, 87, 89, 90, 123, 158, 160, 163, 177, 215, 216, 246, 256, 263, 267, 271, 278, 280, 282, 290, 294, 302, 311, 314, 329, 335, 347, 378, 384, 404, 414, 418, 420, 422, 428, 432, 434, 452, 456, 461, 471, 473, 477, 485, 493, 497, 581, 587], "2d": [14, 15, 19, 28, 33, 56, 61, 63, 66, 67, 112, 157, 158, 163, 165, 174, 177, 179, 194, 213, 311, 317, 319, 331, 339, 432, 473, 489, 519, 521, 523, 525, 527, 529, 583, 585, 587], "notat": [14, 17, 33, 42, 52, 53, 67, 177, 194, 213], "conv_1x1": 14, "spatial": [14, 17, 19, 27, 28, 43, 56, 61, 66, 71, 72, 81, 82, 83, 84, 85, 86, 104, 105, 114, 115, 157, 158, 163, 165, 177, 179, 194, 213, 311, 317, 319, 329, 331, 339, 432, 519, 521, 523, 525, 527, 529, 539, 583, 585, 587, 604, 606], "kh": [14, 15, 27, 28, 61, 63, 71, 81, 82, 114, 157, 256, 260, 271, 287, 288, 289, 311, 404, 428, 471, 473, 475, 587], "kw": [14, 15, 27, 28, 61, 63, 71, 81, 114, 157, 256, 260, 271, 287, 288, 289, 311, 404, 428, 471, 473, 475, 587], "conv_dw": 14, "g": [14, 15, 17, 19, 22, 23, 27, 28, 33, 53, 56, 59, 61, 64, 65, 67, 81, 89, 99, 106, 107, 162, 165, 173, 174, 175, 176, 177, 178, 213, 246, 256, 257, 259, 260, 263, 266, 267, 274, 280, 282, 285, 294, 298, 302, 303, 304, 306, 311, 329, 384, 404, 406, 414, 422, 432, 436, 438, 442, 444, 456, 461, 467, 485, 497, 499, 517, 537, 587, 595, 597, 598, 602, 619], "oc": [14, 15, 27, 28, 61, 81, 250, 256, 258, 260, 271, 278, 280, 287, 288, 304, 311, 392, 404, 408, 428, 452, 456, 471, 473, 587, 634], "ic": [14, 15, 27, 28, 61, 81, 87, 123, 163, 166, 247, 248, 249, 250, 255, 256, 258, 259, 260, 271, 272, 274, 276, 278, 280, 281, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 304, 311, 386, 388, 390, 392, 402, 404, 408, 428, 430, 448, 452, 456, 459, 471, 473, 475, 477, 479, 481, 483, 487, 489, 491, 587, 634], "pad_l": 14, "pad_r": 14, "conv_": [14, 15], "dw": [14, 27, 28, 71, 81, 82, 114, 157, 289, 475], "dst_": [14, 15, 33, 63, 87, 120, 123], "n": [14, 15, 17, 19, 21, 22, 25, 27, 28, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 64, 66, 67, 71, 73, 74, 76, 80, 81, 106, 107, 110, 112, 114, 148, 157, 158, 160, 162, 163, 165, 167, 168, 170, 175, 176, 177, 179, 194, 213, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 311, 314, 316, 329, 345, 347, 348, 349, 350, 372, 378, 384, 386, 388, 390, 392, 398, 402, 404, 406, 408, 410, 412, 414, 416, 420, 422, 424, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 581, 587, 620, 623, 624, 625, 632], "oc_": 14, "ceil": [14, 47, 71, 114, 203, 204, 311, 587], "oh_": 14, "ow_": 14, "oh_conv_1x1": 14, "ow_conv_1x1": 14, "height": [14, 27, 28, 81, 82, 114, 115, 177, 194, 213, 247, 248, 249, 255, 256, 271, 272, 276, 278, 281, 289, 290, 291, 292, 293, 295, 297, 317, 319, 331, 386, 388, 390, 394, 402, 404, 428, 430, 448, 452, 459, 475, 477, 479, 481, 483, 487, 491, 519, 521, 523, 525, 527, 529, 583, 585], "width": [14, 27, 28, 81, 82, 114, 115, 177, 194, 213, 247, 248, 249, 255, 256, 271, 272, 276, 278, 281, 289, 290, 291, 292, 293, 295, 297, 317, 319, 331, 386, 388, 390, 394, 402, 404, 428, 430, 448, 452, 459, 475, 477, 479, 481, 483, 487, 491, 519, 521, 523, 525, 527, 529, 583, 585], "conv": [14, 15, 28, 58, 156, 160, 173, 178, 250, 252, 253, 254, 258, 259, 260, 274, 287, 288, 298, 392, 396, 398, 400, 408, 438, 471, 473], "bia": [14, 15, 16, 27, 28, 38, 39, 45, 48, 49, 50, 60, 61, 67, 76, 77, 81, 84, 99, 106, 107, 112, 164, 179, 185, 194, 213, 224, 225, 234, 235, 246, 252, 253, 254, 256, 258, 271, 278, 280, 282, 283, 284, 285, 294, 302, 311, 317, 319, 324, 328, 335, 340, 384, 394, 396, 398, 400, 404, 408, 428, 452, 456, 461, 463, 465, 467, 485, 497, 506, 508, 521, 523, 527, 529, 545, 547, 553, 555, 561, 563, 565, 567, 573, 575, 577, 587, 598, 607, 627, 629], "though": [14, 17, 24, 59, 63, 164, 236, 237, 414, 422, 432], "convent": [14, 19, 21, 25, 28, 33, 56, 59, 61, 64, 66, 67, 68, 71, 78, 80, 81, 91, 94, 95, 100, 102, 108, 109, 112, 114, 132, 137, 139, 141, 150, 157, 158, 162, 163, 164, 165, 166, 168, 177, 178, 329, 383, 432, 471], "impli": [14, 15, 147, 175, 176, 215, 216, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 311, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 595], "part": [14, 15, 18, 23, 36, 44, 52, 62, 156, 159, 175, 176, 257, 259, 260, 268, 274, 298, 301, 329, 349, 350, 406, 432, 440, 446, 471, 581, 624, 625], "dst_1x1": 14, "wei_dw": 14, "dst_dw": 14, "dnnl_format_tag_ani": [14, 157, 164, 194, 213, 250, 258, 313, 317, 319, 324, 329, 332, 335, 337, 339, 340, 392, 408], "coincid": [14, 15, 177, 349, 624], "util": [14, 17, 30, 35, 155, 175, 176, 197, 257, 294, 309, 315, 348, 353, 406, 434, 485, 495], "lifetim": [14, 36, 57, 154, 229, 259, 260, 268, 274, 298, 301, 311, 329, 330, 335, 376, 579], "thu": [14, 15, 28, 67, 155, 294, 471, 485], "gain": [14, 58, 473], "expect": [14, 18, 19, 23, 28, 35, 44, 56, 61, 63, 64, 66, 67, 89, 156, 157, 162, 163, 175, 176, 178, 179, 184, 185, 215, 216, 228, 229, 257, 273, 275, 284, 311, 348, 349, 406, 432, 434, 465, 471, 473, 517, 579, 595, 597, 598, 602, 607, 619, 620, 623, 624], "dnnl_post_ops_append_binari": [14, 304, 311], "append_binari": [14, 175, 176, 249, 257, 390, 406, 587], "desc": [14, 15, 17, 18, 32, 57, 58, 59, 154, 156, 160, 167, 175, 176, 177, 179, 228, 229, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 329, 376, 377, 384, 386, 388, 390, 394, 396, 398, 400, 402, 404, 406, 410, 412, 414, 416, 418, 420, 422, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 583, 585, 587, 589, 591, 595, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "src1": [14, 37, 311, 514, 587], "_1": [14, 113, 116], "per": [14, 21, 25, 28, 42, 44, 56, 61, 64, 67, 82, 84, 85, 86, 87, 89, 90, 99, 106, 107, 122, 123, 155, 166, 251, 284, 292, 329, 341, 414, 465, 473, 481, 587, 630], "broadcast": [14, 15, 21, 25, 41, 42, 52, 67, 70, 76, 88, 98, 112, 113, 116, 119, 146, 149, 158, 162, 168, 179, 311, 313, 587], "channel": [14, 19, 27, 28, 44, 56, 60, 61, 64, 66, 74, 76, 77, 81, 82, 83, 84, 85, 86, 87, 89, 90, 99, 106, 107, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 158, 164, 165, 166, 179, 184, 185, 194, 213, 246, 247, 248, 249, 255, 256, 260, 271, 272, 276, 278, 279, 280, 281, 282, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 327, 329, 384, 386, 388, 390, 394, 402, 404, 428, 430, 432, 438, 448, 452, 454, 456, 459, 461, 471, 475, 477, 479, 481, 483, 485, 487, 489, 491, 497, 539, 587], "format_tag": [14, 15, 18, 21, 28, 58, 59, 61, 67, 158, 161, 163, 164, 175, 176, 177, 178, 179, 219, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 261, 262, 264, 265, 266, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 329, 372, 384, 386, 388, 390, 394, 396, 398, 400, 402, 404, 406, 410, 412, 416, 418, 420, 426, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 506, 508, 519, 521, 523, 525, 527, 529, 545, 547, 551, 553, 555, 561, 563, 565, 567, 573, 575, 579, 581, 600, 606, 627, 629], "tag": [14, 15, 17, 28, 59, 61, 67, 157, 163, 167, 179, 194, 213, 214, 238, 253, 254, 273, 288, 290, 304, 329, 335, 398, 400, 426, 432, 450, 471, 473, 477, 499, 581], "later": [14, 18, 22, 23, 59, 99, 106, 177, 246, 247, 272, 280, 282, 290, 302, 384, 386, 430, 432, 456, 461, 477, 497], "mismatch": [14, 59, 178, 179, 273, 432], "suboptim": [14, 19, 28, 33, 56, 64, 66, 329, 473, 579], "initi": [14, 18, 27, 29, 32, 59, 67, 155, 158, 164, 175, 176, 177, 179, 186, 189, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 295, 297, 299, 302, 303, 313, 317, 319, 324, 329, 330, 332, 337, 339, 340, 341, 346, 349, 362, 364, 376, 377, 384, 386, 388, 390, 394, 398, 400, 402, 404, 406, 408, 414, 416, 418, 420, 422, 428, 430, 432, 448, 450, 452, 454, 456, 461, 463, 465, 467, 469, 477, 479, 481, 483, 487, 491, 495, 497, 499, 506, 508, 519, 521, 523, 525, 527, 529, 545, 547, 551, 553, 555, 561, 563, 565, 567, 573, 575, 579, 600, 606, 624, 627, 629], "get_params_binari": [14, 587], "select": [14, 21, 22, 23, 24, 35, 45, 50, 52, 60, 179, 184, 185, 193, 194, 205, 212, 213, 308, 348, 358, 473, 623], "condit": [14, 21, 28, 33, 58, 136, 164, 175, 176, 209, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 349, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "src2": [14, 514], "third": [14, 21, 35, 136, 311, 432, 587], "becom": [14, 19, 42, 52, 56, 64, 173, 178, 194, 213, 473], "_2": 14, "There": [14, 18, 19, 21, 24, 25, 28, 33, 35, 52, 56, 58, 60, 61, 66, 155, 157, 158, 161, 162, 163, 164, 165, 166, 168, 173, 175, 176, 257, 294, 311, 313, 329, 406, 426, 434, 473, 485, 493, 595, 598], "dnnl_post_ops_append_prelu": [14, 304, 311], "append_prelu": [14, 587], "int": [14, 15, 63, 160, 170, 175, 176, 177, 194, 229, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 311, 316, 329, 330, 333, 335, 336, 341, 342, 343, 345, 346, 347, 349, 356, 357, 360, 363, 372, 373, 376, 377, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 620, 624, 626, 627, 628, 629, 630], "assumpt": [14, 27, 163, 436, 438, 440, 442, 444, 446, 450, 499], "dnnl_arg_attr_multiple_post_op": [14, 21, 28, 33, 56, 61, 64, 67, 157, 161, 163, 166, 249, 304, 335, 390, 587], "dnnl_arg_weight": [14, 15, 28, 58, 61, 67, 158, 250, 251, 252, 253, 254, 256, 258, 261, 262, 263, 264, 267, 271, 277, 278, 283, 284, 285, 286, 287, 288, 290, 303, 304, 335, 392, 396, 398, 400, 404, 408, 410, 412, 414, 416, 422, 428, 450, 452, 463, 465, 467, 469, 471, 473, 477, 499, 587], "fp32": [14, 23, 31, 59], "plain": [14, 15, 25, 67, 162, 194, 213, 219, 245, 311, 329, 473, 587], "ab": [14, 27, 33, 41, 42, 50, 52, 53, 60, 61, 67, 69, 162, 175, 176, 184, 185, 205, 213, 219, 245, 249, 257, 264, 277, 284, 285, 286, 303, 306, 308, 311, 390, 406, 416, 450, 465, 467, 469, 499, 581, 587], "acb": [14, 213, 311, 587], "acdb": [14, 27, 213, 311, 587], "acdeb": [14, 213, 311, 587], "th": [14, 60, 125, 126, 127, 128, 129, 130, 131, 311, 587, 595], "dedic": [14, 58, 167, 174, 175, 176, 257, 311, 406, 587, 595], "along": [14, 15, 36, 67, 80, 89, 90, 97, 125, 126, 127, 128, 129, 130, 131, 139, 156, 161, 165, 166, 173, 178, 179, 219, 245, 303, 311, 329, 342, 487, 489, 499, 587, 595, 609, 611], "common": [14, 15, 18, 36, 59, 155, 162, 175, 176, 178, 236, 237, 257, 294, 309, 311, 334, 406, 426, 432, 434, 485, 493, 587, 595], "whole": [14, 15, 23, 158, 175, 176, 177, 257, 294, 311, 406, 485, 587, 595], "laid": [14, 18, 27, 177, 194, 213, 311, 329, 338, 432, 471, 587], "cnn": [14, 15, 19, 27, 28, 34, 35, 59, 60, 61, 62, 64, 157, 165, 172, 194, 213, 250, 251, 252, 253, 254, 258, 311, 329, 383, 414, 432, 471, 587], "4d": [14, 52, 53, 61, 106, 107, 177, 194, 213, 311, 329, 432, 587], "h": [14, 15, 19, 21, 27, 28, 31, 52, 53, 56, 61, 65, 66, 73, 74, 76, 157, 158, 162, 173, 177, 179, 183, 184, 188, 189, 190, 192, 193, 194, 196, 197, 199, 204, 206, 208, 210, 213, 216, 218, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 238, 240, 242, 244, 250, 251, 254, 258, 259, 260, 264, 265, 266, 268, 269, 273, 274, 275, 287, 294, 298, 299, 300, 301, 311, 329, 392, 400, 408, 416, 424, 426, 432, 434, 436, 438, 440, 442, 444, 446, 471, 485, 493, 495, 537, 538, 539, 587, 630], "w": [14, 15, 19, 21, 27, 28, 41, 56, 60, 61, 66, 67, 73, 74, 76, 157, 158, 162, 164, 177, 190, 194, 200, 213, 250, 251, 253, 254, 258, 266, 273, 286, 287, 288, 311, 329, 392, 398, 400, 408, 418, 420, 432, 469, 471, 587], "let": [14, 15, 28, 58, 59, 61, 81, 82, 89, 163, 177, 199, 201, 253, 254, 263, 287, 398, 400, 414, 426, 432, 434, 471, 473, 493], "consid": [14, 15, 17, 19, 25, 28, 31, 52, 56, 59, 63, 64, 168, 177, 215, 216, 317, 319, 329, 331, 414, 426, 432, 548], "pattern": [14, 18, 44, 305, 436, 442, 444], "pretti": [14, 432], "topologi": [14, 28, 34, 58, 157, 165, 253, 254, 277, 294, 303, 392, 393, 394, 395, 398, 400, 450, 471, 485, 499], "resnet": [14, 306], "famili": [14, 23, 63, 186, 189], "append_sum": [14, 267, 422, 587], "eltwise_relu": [14, 58, 175, 176, 185, 248, 251, 252, 253, 254, 256, 257, 270, 271, 272, 273, 275, 277, 278, 283, 288, 299, 300, 388, 394, 396, 398, 400, 404, 406, 426, 428, 430, 432, 434, 450, 452, 463, 473, 493, 495, 627, 629], "slope": [14, 19, 28, 108, 121, 122, 215, 216, 252, 273, 340, 396, 432, 627, 629], "f": [14, 22, 27, 67, 141, 142, 161, 163, 164, 175, 176, 213, 246, 247, 248, 249, 252, 255, 256, 257, 263, 264, 265, 266, 267, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 302, 304, 311, 314, 347, 378, 384, 386, 388, 390, 396, 402, 404, 406, 414, 416, 420, 422, 428, 430, 432, 448, 450, 452, 454, 456, 459, 461, 463, 473, 475, 477, 479, 481, 483, 487, 489, 491, 497, 587, 595], "unus": [14, 304, 340], "convolution_forward": [14, 15, 18, 28, 58, 156, 251, 252, 253, 254, 256, 287, 288, 317, 372, 394, 396, 398, 400, 404, 471, 473, 519, 521, 593], "conv_d": [14, 473, 587], "hypothet": 14, "illustr": 14, "set_scales_mask": [14, 15, 252, 263, 267, 277, 284, 292, 396, 414, 422, 450, 465, 481, 595], "cover": [14, 15, 59, 63, 177, 432, 471], "eltwise_tanh": [14, 185, 302, 497, 627, 629], "eltwise_linear": [14, 185], "linear": [14, 18, 33, 34, 41, 87, 89, 90, 104, 105, 123, 163, 177, 184, 185, 203, 204, 280, 314, 320, 339, 383, 434, 457, 493, 579], "dnnl_arg_src": [14, 15, 19, 28, 33, 56, 58, 61, 64, 66, 67, 157, 158, 161, 163, 165, 166, 247, 250, 251, 252, 253, 254, 256, 258, 261, 262, 263, 264, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 299, 300, 303, 304, 330, 335, 346, 376, 377, 386, 392, 394, 396, 398, 400, 404, 408, 410, 412, 414, 416, 422, 424, 426, 428, 430, 432, 434, 448, 450, 452, 454, 459, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 487, 489, 493, 495, 499, 537, 593, 601], "dnnl_arg_dst": [14, 15, 19, 21, 25, 28, 33, 56, 58, 61, 64, 66, 67, 157, 158, 161, 163, 165, 166, 168, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 264, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 303, 304, 335, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 408, 410, 412, 414, 416, 422, 424, 426, 428, 430, 432, 434, 448, 450, 452, 454, 459, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 487, 489, 491, 493, 495, 499], "s_": 14, "mobilenet": 14, "pad": [14, 27, 28, 52, 71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 157, 164, 177, 178, 179, 184, 185, 228, 229, 256, 266, 271, 287, 288, 289, 294, 304, 311, 317, 319, 329, 331, 335, 394, 404, 418, 428, 471, 473, 475, 485, 519, 521, 523, 525, 527, 529, 581, 583, 585, 587, 598], "dnnl_arg_attr_post_op_dw": [14, 28, 304, 335], "cpd": 14, "dw_weight_md": 14, "exec_arg_md": [14, 228, 376, 377, 593, 601], "dw_bias_md": 14, "dnnl_arg_bia": [14, 15, 28, 61, 67, 164, 246, 250, 251, 252, 253, 254, 256, 258, 265, 266, 271, 278, 280, 282, 283, 294, 302, 304, 335, 384, 392, 396, 398, 400, 404, 408, 418, 420, 428, 452, 456, 461, 463, 485, 497], "behaviour": 14, "relu_": [14, 300, 495], "scales_": 14, "conv_dst_md": [14, 250, 252, 253, 254, 256, 258, 287, 288, 392, 396, 398, 400, 404, 408, 471, 473], "mb": [14, 26, 27, 160, 283, 311, 463, 587, 595, 633, 634, 635, 636], "nchw": [14, 19, 27, 56, 66, 157, 163, 165, 213, 247, 248, 251, 252, 253, 254, 255, 256, 270, 271, 272, 275, 278, 281, 287, 288, 289, 290, 291, 292, 293, 295, 297, 299, 300, 386, 388, 394, 396, 398, 400, 402, 404, 426, 428, 430, 432, 434, 452, 459, 471, 473, 475, 477, 479, 481, 483, 487, 491, 493, 495], "abcd": [14, 27, 178, 213, 295, 471, 473, 487], "binary_add": [14, 34, 175, 176, 185, 249, 257, 390, 391, 406], "src1_md": 14, "unordered_map": [14, 246, 247, 248, 249, 251, 253, 254, 255, 256, 259, 260, 261, 262, 264, 265, 266, 268, 271, 272, 274, 276, 278, 279, 280, 281, 282, 283, 285, 286, 289, 290, 291, 292, 293, 295, 296, 297, 298, 301, 302, 304, 376, 377, 384, 386, 388, 390, 394, 398, 400, 402, 404, 410, 412, 416, 418, 420, 428, 430, 436, 438, 440, 442, 444, 446, 448, 452, 454, 456, 459, 461, 463, 467, 469, 475, 477, 479, 481, 483, 487, 489, 491, 497, 505, 507, 509, 511, 513, 516, 518, 520, 522, 524, 526, 528, 530, 532, 540, 542, 544, 546, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 582, 584, 587, 588, 590, 593, 599, 601, 603, 605, 608, 610, 612, 614, 618, 626, 628], "arg": [14, 15, 58, 250, 258, 286, 304, 311, 330, 335, 346, 376, 377, 392, 408, 469, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582, 583, 584, 585, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 626, 627, 628, 629], "insert": [14, 44, 112, 246, 247, 248, 249, 253, 254, 255, 256, 261, 262, 264, 271, 272, 276, 278, 279, 280, 281, 282, 283, 285, 289, 290, 291, 292, 293, 295, 296, 297, 302, 384, 386, 388, 390, 398, 400, 402, 404, 410, 412, 416, 428, 430, 448, 452, 454, 456, 459, 461, 463, 467, 473, 475, 477, 479, 481, 483, 487, 489, 491, 497, 587], "conv_src_memori": [14, 250, 252, 253, 254, 258, 392, 396, 398, 400, 408], "binary_post_op_posit": [14, 21, 28, 33, 56, 61, 64, 67, 157, 161, 163, 166], "hard": 14, "dnnl_arg_src_1": [14, 19, 21, 28, 33, 56, 61, 64, 67, 157, 161, 163, 166, 248, 249, 304, 335, 388, 390], "parenthes": 14, "around": [14, 15, 18, 24, 263, 414, 450, 471], "binary_post_op_src1_memori": 14, "sign": [15, 31, 44, 60, 63, 175, 176, 190, 200, 211, 257, 284, 311, 314, 335, 347, 378, 396, 406, 465, 595], "unsign": [15, 31, 44, 63, 190, 200, 211, 229, 277, 304, 311, 312, 314, 323, 326, 340, 341, 344, 347, 372, 378, 396, 450, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 595, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629, 630], "open": [15, 22, 23, 41, 370], "project": [15, 22, 23, 24, 173, 194, 213, 311, 335, 340, 573, 575, 595, 607], "ocp": [15, 226, 227, 284, 304, 465], "8": [15, 23, 29, 31, 44, 60, 63, 65, 155, 160, 172, 175, 176, 186, 189, 190, 194, 200, 211, 213, 240, 249, 250, 252, 257, 258, 259, 260, 261, 262, 274, 284, 298, 311, 314, 347, 378, 390, 392, 396, 406, 408, 410, 412, 436, 438, 442, 444, 465, 471, 595], "f8": [15, 28, 31, 34, 284, 304, 383], "acceler": [15, 23, 31, 59, 66, 174], "ai": [15, 36], "workload": [15, 23, 28, 58, 164, 465, 471, 473], "larg": [15, 24, 41, 159, 179], "neural": [15, 27, 28, 31, 173, 306, 340, 364, 392, 393, 394, 395], "network": [15, 27, 28, 31, 41, 58, 173, 251, 306, 340, 364, 392, 393, 394, 395], "faster": [15, 22], "usag": [15, 28, 30, 35, 36, 53, 62, 134, 178, 194, 213, 246, 247, 259, 260, 268, 274, 280, 282, 285, 298, 301, 302, 306, 311, 384, 386, 456, 461, 467, 473, 497, 587, 595], "deep": [15, 27, 28, 29, 31, 34, 44, 58, 59, 63, 155, 173, 186, 189, 364, 471, 472], "main": [15, 23, 172, 174, 175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 329, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 587], "categori": [15, 37, 46, 47, 51, 194, 213, 306], "quantization_mod": [15, 311, 372, 595], "dnnl_quantization_mode_static_sazp": [15, 226, 227, 311], "symmetr": [15, 44, 63, 317, 319, 331], "asymmetr": [15, 44, 87, 89, 90, 123, 311, 414, 450, 499, 587], "dnnl_quantization_mode_dynamic_mx": [15, 226, 227, 311], "compliant": [15, 190, 211], "microsc": 15, "fp8_e4m3": 15, "group": [15, 17, 27, 34, 36, 53, 60, 82, 83, 84, 85, 86, 89, 99, 160, 165, 177, 179, 194, 203, 204, 213, 220, 221, 228, 229, 256, 259, 260, 274, 276, 295, 298, 303, 304, 306, 309, 311, 329, 334, 342, 383, 404, 405, 436, 438, 442, 444, 449, 487, 499, 540, 541, 542, 543, 595, 598, 609, 611, 638], "reason": [15, 27, 30, 63, 156, 175, 176, 177, 257, 267, 311, 406, 422, 471, 595], "subset": [15, 186, 189, 314], "combin": [15, 19, 21, 28, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 160, 162, 163, 164, 165, 166, 175, 178, 179, 241, 329, 358, 426, 432, 581, 586], "guid": [15, 23, 31, 37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 160, 174, 252, 253, 264, 266, 284, 312, 313, 316, 317, 320, 323, 324, 326, 327, 328, 330, 331, 332, 337, 338, 339, 340, 342, 343, 345, 346, 398, 416, 420, 465], "appropri": [15, 21, 25, 28, 30, 61, 63, 67, 157, 158, 161, 168, 175, 177, 263, 414, 432, 450, 499], "materi": 15, "formula": [15, 19, 28, 31, 33, 52, 56, 59, 61, 63, 64, 66, 68, 71, 73, 74, 78, 81, 82, 89, 90, 91, 94, 95, 100, 101, 102, 106, 108, 109, 112, 114, 117, 120, 121, 132, 137, 139, 141, 150, 157, 158, 163, 164, 165, 166, 177, 179, 184, 226, 227, 289, 311, 340, 349, 414, 475, 573, 575, 595, 624], "x_": [15, 60, 63, 227, 414], "scale_": [15, 28, 31, 162], "x": [15, 21, 27, 28, 41, 63, 70, 88, 99, 104, 105, 113, 116, 119, 149, 160, 162, 168, 177, 185, 213, 247, 250, 251, 252, 253, 254, 258, 275, 276, 277, 279, 284, 286, 292, 303, 304, 314, 347, 349, 378, 386, 392, 394, 396, 398, 400, 408, 434, 448, 450, 454, 465, 469, 481, 493, 499, 624], "quant": [15, 227, 260, 438], "zp_": [15, 31], "represent": [15, 27, 31, 44, 177, 329, 414, 418, 426, 432, 434, 493, 581], "respect": [15, 16, 27, 28, 31, 33, 36, 42, 44, 52, 59, 61, 67, 81, 105, 108, 156, 163, 177, 178, 179, 194, 213, 215, 216, 224, 225, 253, 254, 258, 294, 311, 312, 317, 319, 320, 323, 324, 326, 327, 331, 332, 335, 339, 340, 341, 342, 343, 398, 400, 408, 422, 473, 485, 539, 595, 627], "denot": [15, 23, 27, 33, 60, 63, 72, 82, 83, 86, 114, 115, 121, 122, 147, 174, 177, 178, 194, 213, 471], "arrai": [15, 17, 60, 177, 228, 229, 263, 269, 270, 294, 297, 311, 314, 316, 317, 319, 329, 330, 331, 335, 339, 345, 346, 347, 362, 376, 377, 378, 414, 424, 485, 491, 519, 521, 523, 525, 527, 529, 579, 583, 585, 595], "those": [15, 18, 23, 31, 33, 52, 112, 155, 175, 176, 177, 186, 189, 257, 266, 406, 414, 418, 436, 438, 442, 444, 473], "These": [15, 18, 23, 36, 40, 60, 63, 194, 213, 277, 432, 450, 471, 473], "ahead": [15, 175, 176, 226, 227, 257, 406], "calibr": 15, "tool": [15, 22, 62], "minimum": [15, 21, 23, 24, 37, 129, 205, 306, 308, 363, 414, 579], "conjunct": 15, "long": [15, 23, 42, 52, 53, 160, 164, 236, 237], "e8m0": [15, 31, 211], "largest": [15, 23], "power": [15, 120, 124, 161, 370], "absolut": [15, 23, 68, 125, 284, 304, 465], "divid": [15, 37, 42, 52, 63, 81, 82, 83, 84, 85, 86, 99, 175, 176, 179, 194, 205, 213, 257, 306, 308, 406], "amax": 15, "max": [15, 21, 31, 33, 58, 59, 60, 63, 67, 78, 79, 100, 102, 113, 114, 127, 139, 157, 161, 162, 166, 175, 176, 184, 185, 203, 204, 257, 263, 267, 284, 285, 314, 331, 337, 347, 378, 406, 414, 422, 434, 465, 467, 493], "_quant": 15, "_dt": [15, 31], "convert": [15, 16, 31, 33, 38, 42, 44, 45, 46, 48, 49, 50, 53, 54, 60, 63, 87, 89, 90, 123, 134, 162, 172, 175, 253, 263, 285, 310, 311, 321, 322, 335, 340, 376, 377, 398, 414, 467, 473, 548, 579], "wider": [15, 31, 53, 182, 183, 311], "int16": 15, "int32": 15, "overflow": [15, 24, 31, 63, 266], "maintain": [15, 34, 159, 172, 329, 436, 438, 442, 444, 581], "necessari": [15, 18, 23, 28, 29, 32, 42, 44, 58, 59, 61, 154, 160, 162, 164, 177, 224, 225, 267, 287, 329, 335, 394, 422, 436, 438, 442, 444], "written": [15, 17, 63, 226, 227, 329, 360], "satur": [15, 31, 63, 162, 314, 347, 378], "wherea": [15, 31], "underflow": [15, 60], "occur": [15, 63, 177, 179, 203], "dev_guide_attributes_post_ops_eltwis": [15, 31], "clip": [15, 31, 33, 78, 184, 185], "architectur": [15, 28, 29, 41, 42, 52, 53, 63, 67, 155, 160, 174, 175, 176, 178, 179, 314, 347, 370, 378, 471], "slightli": [15, 63, 414], "vari": [15, 63, 178, 436, 438, 442, 444], "_op": [15, 161, 175], "dequant": [15, 44, 48, 49, 50, 53, 60, 89, 134, 162, 205, 252, 260, 284, 308, 311, 396, 438, 465, 587], "achiev": [15, 28, 42, 58, 60, 162, 164, 177, 259, 260, 274, 298, 396, 467], "eltwis": [15, 19, 21, 23, 28, 41, 56, 59, 61, 67, 157, 161, 163, 166, 175, 179, 184, 185, 220, 309, 334, 383, 396, 426, 432, 473, 530, 531, 532, 533, 586, 587, 638], "fine": [15, 17, 473], "grain": 15, "legaci": [15, 178], "set_scal": [15, 28, 303, 499, 595], "is_on_host": [15, 304, 311, 595], "qmode": [15, 304, 311, 372, 595], "static_sazp": [15, 226, 595], "conveni": [15, 24, 33, 67, 177, 194, 213, 335, 434, 536, 598], "set_host_scal": [15, 286, 469, 595], "kei": [15, 18, 28, 36, 42, 52, 59, 65, 156, 271, 284, 306, 384, 386, 388, 390, 392, 394, 402, 404, 428, 432, 436, 440, 442, 444, 446, 448, 452, 454, 456, 461, 463, 465, 481, 487, 489, 491, 497], "summar": [15, 27, 32, 154, 164], "option": [15, 17, 19, 20, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 164, 170, 173, 175, 176, 178, 236, 237, 246, 257, 280, 282, 302, 312, 329, 335, 341, 363, 367, 374, 375, 376, 377, 384, 406, 422, 432, 456, 461, 467, 473, 497, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 581, 583, 585, 589, 591, 597, 598, 600, 601, 602, 604, 606, 609, 611, 613, 615, 619, 624, 625, 627, 629], "descript": [15, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 136, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 157, 159, 160, 161, 163, 164, 166, 175, 177, 178, 179, 213, 306, 318, 329, 368, 418, 420, 432, 471, 473], "d1": [15, 179], "d2": 15, "g1": 15, "g2": 15, "none": [15, 22, 23, 33, 67, 70, 71, 72, 81, 82, 83, 84, 85, 86, 88, 98, 104, 105, 113, 114, 115, 116, 119, 136, 139, 146, 149, 178, 198, 203, 204, 215, 358, 471], "f8_e5m2": [15, 28, 31, 34, 67, 87, 123, 162, 175, 176, 200, 211, 284, 304, 465, 466], "f8_e4m3": [15, 28, 31, 34, 67, 87, 123, 162, 175, 176, 200, 211, 284, 304, 465, 466], "v": [15, 41, 52, 53, 67, 165, 263, 264, 267, 277, 288, 303, 304, 370, 414, 416, 422, 450, 499, 579], "locat": [15, 22, 23, 59, 65, 177, 329, 338, 341, 368, 598, 602], "dynamic_mx": [15, 226, 595], "mxfp8": 15, "individu": [15, 18, 31, 33, 35, 155, 314, 318, 347, 378, 394], "target": [15, 24, 36, 90, 175, 176, 257, 265, 266, 284, 311, 349, 355, 360, 363, 365, 367, 406, 465, 595], "scheme": [15, 44, 465], "entir": [15, 22, 28, 58, 61, 67, 125, 126, 127, 128, 129, 130, 131, 304], "make": [15, 17, 18, 22, 30, 40, 59, 63, 65, 67, 89, 112, 153, 155, 175, 176, 177, 194, 213, 229, 257, 320, 329, 360, 406, 581, 586], "simplest": [15, 311, 414, 493, 587], "approach": [15, 18, 42, 59, 155, 177, 329, 396, 414, 465, 471], "commonli": [15, 27, 28], "subdivid": 15, "techniqu": [15, 34, 59], "dim1": 15, "dim2": 15, "independ": [15, 17, 22, 23, 63, 64, 67, 112, 164, 166, 174, 177, 335], "complex": [15, 18, 28, 465], "batch": [15, 27, 28, 34, 35, 42, 52, 53, 56, 58, 59, 67, 73, 74, 81, 99, 112, 160, 166, 177, 194, 213, 220, 221, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 265, 266, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 304, 309, 328, 329, 334, 349, 383, 384, 387, 388, 390, 391, 392, 394, 396, 398, 400, 402, 404, 408, 418, 420, 428, 430, 432, 448, 450, 452, 454, 456, 459, 461, 463, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 497, 509, 510, 511, 512, 539, 624, 638, 639], "full": [15, 18, 22, 24, 34, 65, 67, 160, 173, 174, 178, 197, 358, 434, 493], "recommend": [15, 21, 22, 24, 25, 58, 59, 63, 67, 155, 158, 161, 168, 178, 306, 471, 473], "resid": [15, 34, 329, 426, 432, 434, 436, 438, 440, 442, 444, 446, 469, 470, 493, 579, 581], "transfer": [15, 18, 263, 321, 414], "overhead": [15, 24, 26, 34, 42, 58, 156, 159, 160, 174, 177, 178], "64": [15, 23, 24, 62, 63, 160, 175, 176, 190, 225, 256, 257, 260, 266, 271, 292, 303, 311, 370, 404, 406, 428, 438, 481, 499, 595], "128": [15, 24, 63, 175, 176, 178, 225, 229, 251, 257, 277, 283, 285, 287, 288, 406, 450, 463, 467, 471, 473], "balanc": [15, 23, 422], "effici": [15, 24, 41, 58, 63, 176, 177, 306], "1024": [15, 26, 35, 67, 159, 162, 268, 294, 301, 304, 356, 485], "512": [15, 29, 31, 42, 52, 67, 178, 186, 189, 264, 283, 416, 463], "dim_t": [15, 265, 266, 304, 420], "16": [15, 24, 27, 31, 53, 59, 160, 172, 175, 176, 178, 190, 194, 200, 211, 257, 269, 270, 285, 329, 406, 424, 426, 467], "384": [15, 251, 252, 396], "group_k": 15, "across": [15, 17, 23, 28, 59, 60, 64, 66, 67, 164, 179, 184, 185, 294, 327, 485], "simultan": [15, 23, 35, 162, 349], "d_i": [15, 60], "sum_": [15, 28, 61, 67, 81, 110, 112, 139], "prod_": [15, 67], "d_": [15, 60], "g_": 15, "rang": [15, 24, 58, 63, 80, 87, 89, 90, 97, 123, 125, 126, 127, 128, 129, 130, 131, 148, 160, 172, 179, 263, 284, 299, 300, 414, 465, 493, 495], "center": [15, 31, 64, 67, 162, 263, 414, 450], "set_zero_points_mask": [15, 263, 277, 414, 450, 595], "set_zero_point": [15, 28, 303, 499, 595], "set_host_zero_point": [15, 595], "s4": [15, 31, 53, 67, 89, 200, 211], "u4": [15, 31, 53, 67, 89, 200, 211], "mirror": 15, "could": [15, 32, 44, 154, 160, 172, 175, 176, 182, 183, 257, 263, 340, 406, 414, 432, 579], "languag": [15, 16, 24, 41, 52, 175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "llm": [15, 41, 53, 306], "involv": [15, 22, 42, 581], "sum": [15, 17, 19, 21, 23, 25, 28, 34, 56, 61, 63, 64, 66, 67, 71, 73, 106, 125, 126, 128, 131, 157, 161, 162, 163, 164, 166, 178, 179, 184, 185, 220, 221, 286, 291, 292, 309, 311, 334, 337, 372, 383, 469, 471, 479, 481, 492, 587, 593, 638], "m": [15, 67, 112, 160, 167, 175, 176, 251, 257, 261, 262, 263, 264, 267, 268, 277, 283, 284, 285, 286, 288, 301, 303, 304, 314, 347, 349, 372, 378, 406, 410, 412, 414, 416, 422, 450, 463, 465, 467, 469, 473, 499, 624, 632], "src_": [15, 31, 33, 63, 87, 89, 90, 120, 123, 125, 126, 127, 128, 129, 130, 131], "weights_": [15, 31], "underbrac": 15, "_": [15, 19, 25, 27, 56, 63, 64, 73, 80, 89, 90, 106, 125, 126, 127, 128, 129, 130, 131, 163, 178, 311], "r_": [15, 60], "r": [15, 22, 23, 27, 34, 42, 52, 53, 60, 62, 63, 67, 80, 87, 89, 90, 97, 106, 107, 123, 125, 126, 127, 128, 129, 130, 131, 160, 161, 162, 164, 184, 185, 280, 314, 347, 370, 378, 434, 435, 456, 473, 493, 494, 495, 496], "calcul": [15, 19, 35, 41, 42, 52, 58, 60, 67, 71, 72, 73, 75, 79, 81, 82, 83, 84, 85, 86, 92, 99, 104, 105, 110, 111, 112, 114, 115, 125, 126, 127, 128, 129, 130, 131, 133, 138, 139, 140, 144, 147, 151, 157, 158, 178, 184, 185, 215, 216, 266, 284, 289, 362, 396, 465, 475], "extern": [15, 23], "therefor": [15, 23, 42, 154, 156, 160, 172, 329, 581], "remov": [15, 23, 125, 126, 127, 128, 129, 130, 131, 326, 329, 341, 357, 581], "set_precomputed_reduct": [15, 595], "work": [15, 17, 18, 20, 21, 23, 25, 28, 32, 33, 40, 42, 59, 60, 63, 64, 67, 154, 155, 158, 160, 161, 162, 165, 166, 167, 168, 172, 177, 178, 259, 260, 267, 273, 274, 284, 294, 298, 329, 414, 422, 432, 450, 465, 471, 485, 499, 579], "task": [15, 17, 32, 154, 160], "mathemat": [15, 28, 58, 59, 117, 120, 121, 162, 164, 179, 473], "_to": 15, "_int8": 15, "_f32": [15, 229], "comp_": 15, "bias_": 15, "regular": [15, 23, 35, 178, 327, 432, 493, 569, 571], "chosen": [15, 18, 59, 162, 184, 185, 253, 254, 258, 294, 329, 394, 396, 398, 400, 408, 432, 471, 485], "compens": [15, 25, 63, 175, 266, 304, 420], "term": [15, 17, 27, 28, 155, 163, 164, 175, 317, 319, 324, 328, 521, 523, 527, 529], "account": [15, 28, 158], "pre": [15, 18, 277, 303, 450, 499], "_s8": 15, "loss": [15, 28, 58, 306, 422], "re": [15, 21, 25, 26, 63, 64, 160, 249, 252, 253, 264, 266, 284, 390, 398, 414, 416, 420, 450, 465, 499], "end": [15, 23, 33, 58, 68, 69, 89, 90, 91, 98, 101, 108, 121, 124, 132, 158, 160, 163, 164, 165, 170, 175, 176, 203, 204, 205, 246, 247, 248, 249, 251, 255, 256, 257, 259, 260, 264, 266, 271, 272, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 308, 384, 386, 388, 390, 402, 404, 406, 416, 418, 420, 428, 430, 434, 448, 452, 454, 456, 459, 461, 463, 465, 467, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497], "seem": [15, 160, 432], "imposs": [15, 63, 329, 581], "trick": [15, 63, 263, 414], "everi": [15, 17, 22, 31, 32, 33, 67, 68, 78, 91, 94, 95, 100, 102, 108, 109, 132, 137, 139, 141, 150, 154, 159, 160, 173, 177, 179, 314, 347, 378, 432], "ih": [15, 27, 28, 61, 81, 163, 247, 248, 249, 250, 255, 256, 258, 259, 260, 271, 272, 274, 276, 278, 281, 288, 289, 290, 291, 292, 293, 295, 297, 298, 386, 388, 390, 392, 402, 404, 408, 428, 430, 448, 452, 459, 473, 475, 477, 479, 481, 483, 487, 491], "iw": [15, 27, 28, 61, 81, 163, 247, 248, 249, 250, 255, 256, 258, 259, 260, 271, 272, 274, 276, 278, 281, 288, 289, 290, 291, 292, 293, 295, 297, 298, 386, 388, 390, 392, 402, 404, 408, 428, 430, 448, 452, 459, 473, 475, 477, 479, 481, 483, 487, 491], "oh": [15, 27, 28, 71, 81, 114, 157, 163, 256, 271, 288, 289, 293, 404, 428, 473, 475, 483, 587], "ow": [15, 27, 28, 71, 81, 114, 157, 163, 256, 271, 288, 289, 293, 404, 428, 473, 475, 483, 587], "frac": [15, 19, 28, 33, 52, 56, 60, 63, 64, 66, 71, 73, 74, 81, 95, 99, 102, 106, 110, 118, 128, 137, 139, 157, 161, 163, 165, 166, 414], "respons": [15, 23, 24, 32, 34, 35, 36, 63, 154, 175, 184, 185, 281, 327, 329, 330, 335, 376, 383, 432, 460, 471, 568, 570, 593, 638], "wei_plain_f32_md": 15, "hwigo": [15, 213], "wei_scal": [15, 260, 438], "conv_pd": [15, 156, 250, 253, 254, 256, 258, 287, 288, 392, 398, 400, 404, 408, 471, 473, 587], "wei_conv_s8_md": 15, "weights_desc": [15, 246, 251, 252, 253, 254, 256, 264, 271, 277, 278, 280, 282, 285, 287, 288, 290, 302, 303, 304, 317, 319, 324, 328, 332, 384, 394, 396, 398, 400, 404, 416, 428, 450, 452, 456, 461, 467, 471, 473, 477, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "quantization_mask": 15, "wei_s8": [15, 178], "wei_f32": [15, 178, 471, 473], "wei_reorder_pd": 15, "wei_reord": 15, "shown": [15, 19, 24, 56, 59, 63, 64, 100, 101, 155, 160, 164, 177, 432, 473], "show": [15, 19, 28, 56, 60, 61, 64, 157, 158, 163, 172, 177, 178, 284, 422, 432, 465], "complet": [15, 17, 20, 24, 34, 35, 153, 157, 160, 175, 176, 178, 257, 273, 284, 287, 288, 329, 336, 341, 363, 406, 426, 432, 434, 465, 471, 493, 579, 624], "src_scale": [15, 252, 284, 396, 465], "src_f32": [15, 178, 284, 465, 471, 473], "src_s8": 15, "dst_scale": [15, 252, 396], "dst_f32": [15, 178, 471, 473], "dst_s8": 15, "declar": [15, 265, 266, 418, 420], "chose": [15, 253, 254, 258, 329, 398, 400, 408], "src_conv_s8_any_md": 15, "wei_conv_s8_any_md": 15, "dst_conv_s8_any_md": 15, "ditto": 15, "data_mask": 15, "wei_mask": 15, "prop_kind": [15, 28, 58, 59, 61, 178, 179, 215, 216, 228, 246, 247, 251, 252, 253, 254, 256, 265, 266, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 287, 288, 289, 290, 293, 294, 295, 296, 299, 300, 302, 304, 311, 312, 317, 319, 320, 323, 324, 326, 327, 331, 332, 339, 340, 342, 343, 372, 384, 386, 394, 396, 398, 400, 404, 418, 420, 426, 428, 430, 432, 434, 448, 452, 454, 456, 459, 461, 471, 473, 475, 477, 483, 485, 487, 489, 493, 495, 497, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "forward_infer": [15, 28, 58, 59, 61, 178, 224, 251, 265, 266, 273, 287, 288, 294, 394, 418, 420, 432, 471, 473, 485, 508, 512, 523, 529, 533, 543, 547, 555, 559, 563, 567, 571, 575, 585, 591, 606, 611, 615, 629], "convolution_direct": [15, 178, 185, 251, 252, 253, 254, 256, 288, 394, 396, 398, 400, 404, 471, 473, 519, 521, 523, 525], "padding_l": [15, 28, 228, 304, 317, 319, 331, 519, 521, 523, 525, 527, 529, 583, 585], "padding_r": [15, 28, 228, 304, 317, 319, 331, 519, 521, 523, 525, 527, 529, 583, 585], "padding_kind": 15, "flow": [15, 34, 304, 424, 425, 426, 427], "process": [15, 18, 22, 26, 42, 44, 58, 59, 63, 155, 159, 160, 164, 175, 176, 177, 179, 257, 294, 306, 349, 406, 414, 471, 485, 624], "besid": [15, 36, 42], "tradit": 15, "src_f16_any_md": 15, "wei_s8_any_md": 15, "256": [15, 160, 251, 252, 260, 265, 266, 276, 283, 287, 304, 396, 448, 463, 471], "dst_f16_any_md": 15, "wei_group": 15, "gk": 15, "total": [15, 17, 82, 155, 160, 294, 485], "half": [15, 28, 31, 172, 190, 200, 211], "addition": [15, 18, 36, 53, 63, 67, 112, 155, 172, 175, 176, 253, 257, 398, 406, 471, 473], "fpmath": [15, 179, 303, 322, 499, 595], "matmul_pd": [15, 263, 264, 267, 277, 283, 284, 285, 286, 303, 414, 416, 422, 450, 463, 465, 467, 469, 499], "src_u8_any_md": 15, "wei_scales_group": 15, "scale_gk": 15, "wei_zp_group": 15, "zp_gk": 15, "4": [15, 23, 29, 31, 33, 41, 63, 67, 73, 74, 75, 107, 118, 136, 155, 160, 167, 175, 176, 177, 184, 185, 186, 189, 190, 194, 200, 211, 240, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 265, 266, 268, 269, 271, 274, 275, 282, 284, 285, 288, 289, 294, 295, 298, 299, 300, 301, 302, 304, 329, 362, 390, 392, 398, 400, 404, 406, 408, 410, 412, 424, 428, 434, 436, 438, 442, 444, 461, 465, 467, 473, 475, 485, 487, 493, 495, 497], "2048": [15, 26, 268, 301], "wei_zp": [15, 260, 438], "src_pr_group": 15, "pr_gk": 15, "src_pr": 15, "src_tensor_mask": 15, "treat": [15, 61, 63, 162, 166, 172], "classic": 15, "src_s8_any_md": 15, "standard": [16, 19, 21, 22, 23, 24, 25, 27, 28, 31, 33, 56, 61, 64, 65, 66, 67, 68, 71, 78, 80, 81, 91, 94, 95, 100, 102, 108, 109, 112, 114, 132, 137, 139, 141, 150, 157, 158, 162, 163, 164, 165, 166, 168, 190, 200, 211, 314, 347, 378], "rounding_mod": [16, 31, 311, 372, 595], "sycl": [16, 23, 31, 34, 35, 179, 298, 299, 300, 301, 304, 309, 325, 329, 353, 354, 361, 375, 376, 377, 383, 445, 446, 494, 496, 637], "opencl": [16, 18, 22, 31, 34, 35, 156, 179, 274, 275, 309, 325, 329, 353, 361, 374, 376, 383, 432, 435, 443, 458, 502, 579], "stochast": [16, 31, 234, 235, 335], "wai": [16, 17, 18, 25, 27, 28, 32, 35, 58, 60, 63, 136, 154, 155, 168, 172, 177, 221, 271, 311, 338, 362, 428, 467, 471, 473, 493, 517, 579, 595, 597, 598, 602, 619], "truncat": 16, "dnnl_arg_attr_rounding_se": [16, 304, 335], "interest": [16, 177, 370, 432, 471], "vanish": 16, "gradient": [16, 27, 42, 52, 59, 69, 75, 77, 79, 84, 92, 96, 101, 103, 105, 108, 111, 118, 122, 133, 138, 140, 142, 144, 151, 164, 172, 228, 229, 232, 233, 317, 319, 324, 335, 471, 520, 521, 526, 527, 552, 553], "diffsrc": [16, 19, 27, 28, 33, 56, 61, 64, 66, 72, 82, 85, 107, 115, 157, 158, 163, 165, 166], "diffweight": [16, 27, 28, 61, 83, 86, 158], "enough": [17, 42, 52, 63, 175, 176, 257, 360, 406], "core": [17, 28, 31, 52, 186, 189, 458, 473], "system": [17, 18, 22, 23, 28, 31, 35, 62, 63, 65, 155, 156, 160, 164, 165, 175, 176, 177, 178, 179, 257, 321, 349, 406], "parallel": [17, 22, 42, 52, 174, 236, 237, 347, 620], "reduct": [17, 23, 24, 34, 67, 125, 126, 127, 128, 129, 130, 131, 179, 184, 185, 220, 221, 228, 229, 306, 309, 311, 334, 335, 372, 383, 480, 593, 595, 598, 638], "privat": [17, 170, 236, 237, 394], "matrix": [17, 27, 28, 29, 31, 42, 45, 50, 52, 53, 63, 112, 162, 164, 165, 167, 177, 220, 221, 261, 262, 263, 264, 265, 266, 267, 277, 283, 284, 285, 286, 303, 304, 306, 309, 314, 334, 347, 378, 383, 410, 412, 414, 415, 416, 422, 450, 463, 468, 469, 470, 471, 499, 576, 577, 638, 639], "im2col": 17, "longer": [17, 42, 229], "confus": [17, 59], "workspac": [17, 19, 27, 28, 66, 157, 164, 179, 215, 216, 228, 229, 246, 247, 250, 253, 254, 258, 280, 281, 282, 289, 294, 302, 312, 335, 384, 386, 392, 394, 398, 400, 408, 456, 459, 461, 475, 485, 497, 506, 508, 510, 512, 541, 543, 545, 547, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 583, 585, 598, 627, 629], "space": [17, 18, 23, 175, 176, 177, 178, 179, 250, 257, 258, 318, 335, 360, 392, 406, 408, 579], "direct": [17, 27, 31, 41, 42, 52, 53, 59, 70, 88, 98, 113, 116, 119, 146, 149, 164, 173, 184, 185, 228, 229, 230, 231, 246, 280, 282, 284, 294, 302, 304, 329, 340, 384, 456, 461, 465, 485, 497, 506, 508, 545, 547, 548, 561, 563, 565, 567, 573, 575, 579, 593, 597, 598, 607, 627, 629], "too": [17, 267, 341, 422], "few": [17, 22, 28, 34, 53, 58, 61, 164, 284, 335, 408, 409, 465], "proport": 17, "imag": [17, 27, 58, 71, 157, 177, 273, 306, 432], "diff_weight": [17, 27, 59, 83, 86, 232, 233, 253, 254, 294, 332, 398, 400, 485], "upper": [17, 27, 52, 78, 79, 159, 177, 194, 341], "By": [17, 18, 23, 31, 35, 36, 58, 357], "contrast": 17, "littl": [17, 263, 414], "sizeof": [17, 167, 177, 250, 258, 269, 275, 285, 288, 300, 392, 408, 424, 434, 467, 495], "summand": 17, "scratchpad_mod": [17, 23, 311, 372, 595], "worri": 17, "onednn_enable_concurrent_exec": [17, 23], "cmake": [17, 22, 23, 29, 30, 35, 40, 156, 159, 160, 173, 178], "off": [17, 23, 29, 30, 40, 159, 160, 175, 176, 178, 236, 237, 257, 261, 262, 273, 341, 406, 410, 412, 432], "minim": [17, 22, 24, 34, 58, 174, 177], "level": [17, 34, 35, 36, 40, 156, 160, 174, 178, 304, 329, 341, 372], "freed": 17, "referenc": 17, "segment": 17, "fault": 17, "you": [17, 18, 19, 22, 23, 24, 28, 32, 36, 41, 42, 52, 53, 56, 58, 59, 61, 63, 64, 65, 67, 84, 139, 160, 164, 166, 173, 175, 176, 177, 229, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 434, 442, 444, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "wa": [17, 33, 59, 64, 65, 156, 157, 159, 175, 176, 177, 178, 179, 209, 236, 237, 239, 240, 257, 277, 289, 336, 341, 347, 378, 406, 450, 475, 598], "ON": [17, 22, 23, 29, 30, 34, 35, 40, 159, 160, 178, 236, 237], "larger": [17, 28, 236, 237, 294, 485], "concurr": [17, 32, 35, 154, 236, 237, 333, 347, 356], "suffici": 17, "dnnl_arg_scratchpad": [17, 304, 335], "reus": [17, 18, 28, 58, 59, 67, 164, 175, 176, 177, 257, 294, 406, 485], "safe": [17, 18, 33, 155, 156, 177, 236, 237, 273, 333, 356, 357, 432, 579], "good": [17, 58, 67, 177, 414, 432], "dnnl_primitive_attr_set_scratchpad_mod": [17, 304, 311], "set_scratchpad_mod": [17, 595], "highlight": [17, 59], "consum": [17, 35, 36, 174, 294, 329, 485], "due": [17, 27, 42, 59, 63, 175, 176, 178, 179, 209, 239, 240, 257, 267, 406, 414, 422, 581], "print": [17, 22, 35, 178, 179, 467], "much": [17, 18, 63, 174, 175, 176, 178, 257, 267, 406, 422, 434, 493], "cout": [17, 251, 259, 260, 265, 266, 268, 273, 274, 275, 284, 285, 288, 298, 299, 300, 301, 432, 434, 465, 467, 493, 495], "query_s64": [17, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "memory_consumption_s64": [17, 228], "endl": [17, 251, 259, 260, 265, 266, 268, 273, 274, 275, 284, 285, 298, 299, 300, 301, 432, 434, 465, 467, 493, 495], "visibl": 17, "zero_md": 17, "scratchpad_desc": [17, 287, 471, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_scratchpad_mod": [17, 595], "custom": [17, 18, 22, 23, 32, 34, 35, 36, 174, 175, 177], "scratchpad_md": [17, 228], "prim": [17, 178, 250, 258, 288, 392, 408, 473], "get_siz": [17, 59, 167, 177, 264, 265, 266, 288, 329, 376, 416, 418, 420, 579, 581], "scratchpad_ptr": [17, 304, 349], "user_memory_manag": 17, "outlin": [18, 59, 155], "program": [18, 20, 22, 28, 32, 34, 36, 61, 63, 154, 164, 305, 306, 422, 424, 425, 426, 427, 432, 433, 434, 435, 473, 493, 494, 495, 496], "present": [18, 22, 38, 39, 45, 46, 48, 49, 50, 112, 156, 164, 175, 471], "discuss": [18, 58, 59, 155, 329, 432], "essenc": 18, "sever": [18, 23, 25, 28, 33, 65, 166, 173, 177, 442, 444], "relationship": [18, 36, 259, 260, 298, 304, 436, 442, 444], "entiti": [18, 36, 335], "briefli": 18, "figur": [18, 164], "relev": [18, 59, 294, 473, 485], "built": [18, 20, 22, 23, 34, 35, 65, 170, 173, 178, 347, 378, 471, 473], "notion": [18, 21, 25, 59, 161, 168, 471], "encapsul": [18, 330, 344, 363, 364, 368, 376, 426, 432, 434, 493, 579], "lstm": [18, 34, 63, 184, 185, 194, 213, 266, 294, 335, 340, 383, 420, 462, 485, 572, 573, 574, 575], "pure": 18, "state": [18, 27, 35, 59, 63, 164, 194, 213, 266, 280, 294, 302, 329, 335, 336, 340, 360, 418, 420, 456, 458, 485, 497, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 624, 627, 629], "One": [18, 32, 42, 52, 134, 172, 177, 179], "immut": [18, 36], "tailor": [18, 35], "amort": 18, "mutabl": [18, 36, 362], "card": [18, 321], "ti": [18, 344, 426, 432, 434, 493], "command": [18, 22, 23, 65, 155, 160, 330, 346, 434, 473], "queue": [18, 32, 35, 154, 298, 299, 300, 301, 304, 330, 346, 376, 377, 434, 442, 444, 446, 493, 495], "map": [18, 19, 21, 25, 28, 32, 33, 42, 56, 58, 61, 64, 66, 67, 87, 89, 90, 123, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 173, 177, 179, 259, 260, 268, 273, 274, 286, 298, 301, 329, 341, 374, 375, 376, 377, 414, 426, 432, 434, 469, 517, 579, 593, 597, 598, 601, 602, 619], "offset": [18, 41, 87, 89, 90, 123, 175, 176, 177, 178, 179, 228, 229, 257, 263, 273, 294, 304, 314, 329, 347, 349, 378, 406, 414, 432, 485, 579, 581, 624], "format_kind": [18, 167, 173, 178, 179, 228, 313, 317, 319, 324, 326, 328, 329, 332, 337, 339, 340, 579, 581], "conceptu": [18, 63], "expos": [18, 19, 31, 56, 64, 155, 174], "flexibl": [18, 34, 172, 174, 177, 422], "dnnl_memory_desc_t": [18, 57, 173, 177, 194, 250, 258, 269, 304, 329, 335, 392, 408, 424, 581], "variou": [18, 37, 43, 46, 47, 51, 54, 55, 156, 174, 329, 335], "via": [18, 23, 29, 30, 31, 33, 34, 35, 41, 42, 44, 52, 53, 64, 90, 147, 155, 156, 157, 159, 177, 178, 288, 294, 329, 335, 341, 360, 365, 376, 377, 386, 390, 391, 396, 426, 432, 434, 471, 485, 493, 495, 579, 587, 593, 595, 601], "instanti": 18, "iter": [18, 159, 164, 175, 176, 202, 210, 251, 253, 254, 257, 258, 265, 266, 294, 398, 400, 406, 408, 418, 420, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 597, 607, 627, 629], "prefer": [18, 24, 30, 187, 188, 253, 254, 258, 294, 398, 400, 408, 485], "concret": [18, 259, 260, 268, 274, 298, 301, 436, 442, 444], "embodi": 18, "extract": [18, 28, 197, 284, 434, 465, 493], "submemory_desc": [18, 265, 266, 294, 418, 420, 485, 581], "src_desc": [18, 58, 251, 252, 253, 254, 256, 264, 271, 285, 287, 288, 304, 312, 316, 317, 319, 320, 323, 324, 326, 327, 328, 331, 332, 337, 338, 339, 342, 343, 345, 394, 396, 398, 400, 404, 416, 428, 467, 471, 473, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "action": [18, 59], "placehold": [18, 28, 61, 67, 164, 213, 287, 471], "obtain": [18, 59, 60, 63, 156, 175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 329, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 436, 438, 442, 444, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499, 602], "high": [18, 24, 60, 178, 317, 319, 331, 519, 521, 523, 525, 527, 529, 583, 585], "instead": [18, 21, 22, 23, 27, 28, 33, 61, 63, 64, 65, 67, 157, 161, 162, 163, 177, 215, 216, 284, 294, 311, 314, 340, 347, 349, 378, 394, 432, 465, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 587, 624, 627, 629], "transpar": 18, "effort": 18, "backend": [18, 23, 134, 176, 178, 179, 349, 436, 438, 442, 444], "awar": [18, 30, 432], "scalabl": [18, 63, 186, 189], "ukernel": [18, 65, 174, 175, 176, 257, 304, 309, 372, 407, 515, 622], "sequenti": [18, 23, 35, 174, 392, 394], "compos": [18, 35, 174, 358], "straightforward": [19, 28, 56, 64, 157, 158, 163, 286, 432, 469], "gamma": [19, 28, 56, 64, 73, 74, 75, 99, 106, 107, 312, 323, 326], "mu": [19, 56, 64, 73, 74, 106, 107], "sqrt": [19, 33, 52, 56, 64, 74, 95, 99, 106, 126, 144, 205, 263, 267, 306, 308, 414, 422], "sigma": [19, 56, 64, 73, 74, 75, 106, 107, 164], "varepsilon": [19, 56, 64, 74], "dnnl_use_scal": [19, 56, 64, 215, 216], "dnnl_use_shift": [19, 56, 64, 215, 216], "dnnl_use_global_stat": [19, 56, 64, 215, 216], "constant": [19, 52, 56, 58, 64, 74, 99, 106, 107, 108, 147, 156, 202, 210, 229, 260, 305, 309, 311, 329, 335, 341, 344, 348, 349, 350, 353, 354, 355, 360, 364, 365, 368, 438, 581, 595, 598, 624], "stabil": [19, 33, 56, 64, 74, 99, 106, 107, 139], "nhw": [19, 73], "limits_": [19, 56, 63, 64, 66, 71, 73, 106, 114, 125, 126, 128, 130, 131, 157, 161, 166, 168, 311, 595], "learnabl": [19, 27, 56, 59, 64, 106, 107], "dnnl_fuse_norm_relu": [19, 215, 216], "dnnl_fuse_norm_add_relu": [19, 215, 216], "popul": [19, 56, 164], "sampl": [19, 34, 56, 60, 157, 160, 170, 284, 434, 465, 493, 495], "unbias": [19, 56], "hat": [19, 56], "dnnl_forward_train": [19, 28, 33, 56, 64, 157, 158, 163, 165, 166, 224, 225, 312, 317, 319, 320, 323, 324, 326, 327, 331, 332, 339, 340, 342, 343], "dnnl_forward_infer": [19, 28, 33, 56, 64, 157, 158, 163, 165, 166, 224, 225, 312, 317, 319, 320, 323, 324, 326, 327, 331, 332, 339, 340, 342, 343], "diffgamma": [19, 56, 64, 107], "diffbeta": [19, 56, 64, 107], "diffdst": [19, 27, 28, 33, 56, 61, 64, 66, 72, 77, 82, 83, 85, 86, 107, 115, 157, 158, 163, 165, 166], "mark": [19, 56, 63, 64, 107, 177], "asterisk": [19, 56, 64, 107], "clariti": [19, 56, 64], "summari": [19, 56, 64, 160, 284, 465, 471], "dnnl_backward": [19, 56, 64, 216, 224, 225, 312, 323, 326, 340], "dnnl_backward_data": [19, 56, 64, 216, 224, 225, 312, 323, 326], "dnnl_normalization_flags_non": [19, 56, 64, 215, 216], "Not": [19, 24, 56, 64, 160], "src_1": [19, 21, 37, 70, 88, 98, 113, 116, 119, 136, 146, 149, 248, 388], "diffsrc_1": 19, "tabl": [19, 21, 24, 25, 27, 28, 31, 32, 33, 56, 61, 64, 66, 67, 87, 123, 154, 157, 158, 161, 162, 163, 164, 165, 166, 168, 229], "dnnl_arg_scal": [19, 56, 64, 247, 276, 279, 304, 335, 386, 448, 454], "dnnl_arg_shift": [19, 56, 64, 247, 276, 279, 304, 335, 386, 448, 454], "dnnl_arg_mean": [19, 56, 64, 247, 276, 279, 304, 335, 386, 448, 454], "dnnl_arg_vari": [19, 56, 64, 247, 276, 279, 304, 335, 386, 448, 454], "dnnl_arg_workspac": [19, 59, 66, 157, 246, 247, 250, 253, 254, 258, 280, 281, 282, 289, 294, 302, 304, 335, 384, 386, 392, 398, 400, 408, 456, 459, 461, 475, 485, 497], "dnnl_arg_diff_dst": [19, 28, 33, 56, 61, 64, 66, 157, 158, 163, 165, 166, 253, 254, 258, 304, 335, 398, 400, 408], "dnnl_arg_diff_src": [19, 28, 33, 56, 61, 64, 66, 157, 158, 163, 165, 166, 253, 254, 258, 304, 335, 398, 400, 408], "dnnl_arg_diff_src_1": [19, 304, 335], "dnnl_arg_diff_scal": [19, 56, 64, 304, 335], "dnnl_arg_diff_shift": [19, 56, 64, 304, 335], "flavor": [19, 34, 56, 64, 349, 432, 624], "batch_normalization_forward": [19, 247, 312, 372, 386, 510, 593], "OR": [19, 56, 64, 175, 176, 241, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "latter": [19, 23, 27, 32, 56, 59, 63, 64, 65, 154, 172, 329, 392, 394, 597], "overwritten": [19, 21, 33, 56, 64, 166], "dst_desc": [19, 58, 251, 252, 253, 254, 255, 256, 264, 271, 285, 287, 288, 297, 304, 312, 313, 316, 317, 319, 320, 323, 324, 326, 327, 328, 331, 332, 337, 338, 339, 342, 343, 345, 394, 398, 400, 402, 404, 416, 428, 467, 471, 473, 491, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "diff_dst_desc": [19, 253, 254, 304, 312, 317, 319, 320, 323, 324, 326, 327, 331, 332, 339, 342, 343, 398, 400, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "even": [19, 31, 59, 63, 152, 155, 164, 177, 320, 432], "scaleshift": [19, 56], "restrict": [19, 21, 28, 29, 30, 33, 56, 61, 64, 66, 67, 76, 157, 161, 163, 164, 165, 166, 175, 179, 318, 341], "1d": [19, 28, 32, 56, 61, 64, 66, 76, 90, 99, 104, 105, 106, 107, 112, 121, 122, 125, 126, 127, 128, 129, 130, 131, 157, 163, 177, 179, 194, 213, 317, 319, 339, 432], "dnnl_x": [19, 56, 194, 250, 258, 392, 408], "dnnl_a": [19, 56, 194, 213], "sp_n": [19, 56], "sp_0": [19, 56], "0d": [19, 66, 432], "nc": [19, 61, 64, 213, 251, 261, 262, 278, 296, 410, 412, 452, 489], "dnnl_nc": [19, 56, 61, 64, 194], "dnnl_ab": [19, 56, 64, 194, 213, 329], "ncw": [19, 56, 157, 213], "dnnl_ncw": [19, 28, 56, 61, 157, 194], "dnnl_abc": [19, 56, 64, 157, 194, 213], "dnnl_nwc": [19, 28, 56, 61, 157, 194], "dnnl_acb": [19, 56, 157, 194, 213], "dnnl_nchw": [19, 25, 28, 56, 61, 66, 157, 165, 177, 194, 250, 258, 269, 329, 392, 408, 424], "dnnl_abcd": [19, 56, 64, 66, 157, 165, 194, 213], "dnnl_nhwc": [19, 25, 28, 56, 61, 66, 157, 165, 177, 194, 329], "dnnl_acdb": [19, 56, 66, 157, 165, 194, 213], "3d": [19, 28, 56, 61, 64, 66, 67, 106, 107, 157, 158, 163, 165, 175, 176, 177, 179, 194, 213, 257, 317, 319, 328, 331, 339, 406, 432, 519, 521, 523, 525, 527, 529, 583, 585], "ncdhw": [19, 56, 157, 165, 194, 213, 276, 448], "dnnl_ncdhw": [19, 28, 56, 61, 157, 165, 194], "dnnl_ndhwc": [19, 28, 56, 61, 157, 165, 194], "dnnl_acdeb": [19, 56, 157, 165, 194, 213], "come": [19, 33, 59, 60, 65, 66, 155, 157, 165, 194, 213, 236, 237, 277, 294, 303, 432, 450, 485, 499], "intens": [19, 31, 58, 66, 155, 157, 165, 329, 432, 471, 473], "chain": [19, 28, 59, 60, 61, 63, 175, 176, 257, 311, 349, 406, 473, 586], "dnnl_eltwise_relu": [19, 33, 184, 185, 250, 258, 269, 340, 392, 408, 424], "correctli": [19, 28, 31, 160, 341, 432, 471], "relat": [19, 21, 23, 25, 28, 31, 33, 56, 64, 66, 67, 157, 160, 161, 162, 163, 164, 165, 166, 168, 267, 306, 418, 420, 422, 432, 434, 473, 493, 495], "highli": [19, 25, 33, 56, 64, 66, 168, 422], "whenev": [19, 21, 25, 33, 56, 59, 64, 161, 166, 168, 177, 311, 432], "caveat": [19, 33, 56, 64, 168], "statist": [19, 64, 178, 194, 213, 215, 216, 414, 557, 559], "pleas": [19, 23, 58, 67, 134, 160, 178, 252, 253, 266, 284, 329, 335, 357, 362, 398, 420, 465, 471], "review": [19, 471], "benchdnn": [20, 23, 67, 155, 160, 178], "readm": 20, "elementwis": [21, 179, 185, 215, 216, 311, 320, 471, 513, 514, 530, 531, 532, 533, 587], "overlin": [21, 25, 28, 33, 70, 80, 88, 113, 116, 119, 149, 162, 165, 166, 168], "src_0": [21, 37, 70, 88, 98, 113, 116, 119, 136, 146, 149, 168, 248, 388], "mathbin": [21, 70, 88], "subtract": [21, 28, 37, 42, 52, 63, 139, 146, 205, 289, 306, 308, 311, 475, 587], "divis": [21, 27, 73, 74, 75, 81, 82, 83, 84, 85, 86, 88, 99, 162, 249, 303, 390, 499], "div": [21, 63, 184, 185], "greater": [21, 59, 63, 78, 79, 98, 163, 184, 185], "geq": [21, 28, 33, 163, 396], "neq": [21, 124], "min": [21, 33, 63, 78, 79, 100, 102, 116, 129, 158, 160, 161, 170, 184, 185, 203, 204, 263, 285, 337, 414, 467], "src_2": 21, "dnnl_arg_src_0": [21, 248, 249, 304, 335, 388, 390], "dnnl_arg_src_2": [21, 28, 33, 56, 61, 64, 67, 157, 161, 163, 166, 304, 335], "text": [21, 28, 33, 56, 61, 64, 67, 68, 69, 91, 98, 100, 101, 108, 121, 124, 132, 157, 161, 163, 166, 177, 493], "scale0": 21, "dnnl_arg_attr_scal": [21, 28, 61, 64, 67, 162, 166, 252, 263, 267, 277, 284, 286, 292, 303, 304, 311, 335, 396, 414, 422, 450, 465, 469, 481, 499, 595], "scale1": 21, "semant": [21, 27, 42, 44, 63, 67, 112, 121, 122, 154, 158, 179, 311, 341, 432, 548, 587, 630], "match": [21, 25, 36, 58, 59, 70, 80, 88, 89, 98, 104, 112, 113, 116, 119, 136, 149, 156, 158, 162, 168, 178, 179, 203, 290, 329, 376, 377, 473, 477, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 593, 600, 601, 602, 604, 606, 609, 611, 613, 615, 619, 627, 629], "syntax": [21, 58], "d": [21, 27, 28, 33, 42, 52, 53, 61, 62, 66, 67, 76, 112, 125, 126, 127, 128, 129, 130, 131, 157, 158, 175, 176, 177, 179, 194, 202, 210, 213, 246, 257, 263, 269, 280, 282, 285, 294, 302, 311, 329, 348, 349, 384, 406, 414, 424, 432, 456, 461, 467, 485, 497, 595, 623, 624], "nxcxdxhxw": 21, "pytorch": [21, 28, 122, 289, 475], "explicitli": [21, 22, 23, 24, 28, 34, 44, 52, 155, 161, 164, 360, 362, 432], "deriv": [21, 25, 157, 161, 168, 215, 216, 311, 326, 517, 587, 619], "ones": [21, 49, 63, 163, 173, 177, 246, 256, 259, 260, 268, 271, 274, 280, 282, 298, 301, 302, 329, 384, 404, 422, 428, 456, 461, 497, 581], "unavoid": 21, "correct": [21, 22, 23, 177, 207, 208, 277, 426, 432, 436, 438, 440, 442, 444, 446, 450], "issu": [21, 24, 32, 59, 63, 154, 160, 179, 207, 208, 267, 422], "factor": [21, 25, 28, 34, 42, 52, 53, 56, 58, 61, 63, 64, 67, 89, 91, 92, 162, 163, 166, 175, 203, 228, 229, 252, 266, 284, 297, 304, 311, 335, 339, 396, 414, 420, 450, 465, 469, 470, 471, 491, 499, 587, 595, 598, 604, 606], "arbitrari": [21, 25, 33, 64, 78, 79, 91, 92, 99, 100, 101, 106, 107, 108, 110, 111, 120, 139, 140, 141, 142, 153, 158, 161, 162, 163, 165, 166, 168, 177, 266, 267, 316, 396, 420, 422, 450], "6": [21, 25, 28, 33, 60, 64, 67, 102, 118, 160, 161, 162, 165, 166, 167, 168, 175, 176, 177, 190, 240, 246, 249, 251, 257, 259, 260, 261, 262, 274, 276, 282, 284, 298, 384, 390, 406, 410, 412, 436, 438, 442, 444, 448, 461, 465], "fewer": [21, 25, 33, 44, 64, 161, 162, 165, 166, 168], "bnorm": [21, 34, 249, 383], "distribut": [22, 58, 160, 175, 176, 184, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "ensur": [22, 23, 24, 29, 34, 59, 98, 154, 259, 260, 274, 284, 298, 329, 434, 465, 471, 493, 581], "clone": [22, 311, 329, 335, 517, 597, 598, 602, 619], "repositori": [22, 23], "git": [22, 156, 178, 341, 471, 630], "http": [22, 41, 42, 50, 52, 53, 65, 175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "github": [22, 23, 41, 52, 263, 414], "com": [22, 65], "uxlfound": [22, 23, 41, 52, 263, 414], "cd": 22, "quickli": [22, 440, 446], "start": [22, 26, 60, 106, 107, 121, 122, 170, 173, 174, 177, 178, 259, 265, 274, 275, 285, 298, 299, 335, 383, 426, 432, 438, 440, 446, 467, 471, 473, 495], "your": [22, 24, 58, 59, 65, 160, 473], "mkdir": 22, "b": [22, 27, 31, 34, 62, 67, 164, 175, 176, 177, 194, 213, 257, 263, 267, 277, 284, 285, 286, 303, 304, 314, 328, 329, 347, 348, 349, 372, 378, 406, 414, 422, 450, 465, 467, 469, 470, 471, 499, 577, 623, 624], "path": [22, 23, 34, 35, 65, 172, 341], "file": [22, 23, 35, 40, 62, 160, 173, 175, 176, 177, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 341, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499], "directori": [22, 35, 65, 160, 341], "studio": [22, 65, 155, 173], "17": [22, 60, 160, 177, 473], "2022": [22, 246, 285, 384, 467], "ninja": 22, "unix": [22, 178], "makefil": 22, "dcmake_install_prefix": 22, "dcmake_build_typ": 22, "releas": [22, 23, 154, 175, 176, 257, 341, 349, 357, 363, 406, 624], "relwithdebinfo": 22, "dcmake_prefix_path": 22, "search": 22, "unifi": [22, 32, 36, 154], "multi": [22, 36, 42, 52, 70, 88, 98, 113, 116, 119, 146, 149, 155, 306, 368], "job": 22, "choic": [22, 177, 179, 186, 189], "uncom": 22, "line": [22, 155, 160, 177, 178, 473], "export": [22, 26, 155, 473], "cc": 22, "cxx": 22, "icx": [22, 65], "icpx": [22, 65], "nproc": 22, "sysctl": 22, "hw": [22, 56, 160, 177], "ncpu": 22, "setvar": 22, "sh": [22, 27, 28, 71, 81, 82, 114, 157, 256, 271, 289, 404, 428, 475], "script": [22, 173], "folder": [22, 23], "opt": [22, 23, 166], "donednn_cpu_runtim": [22, 23], "donednn_gpu_runtim": [22, 23], "driver": [22, 23], "openclroot": 22, "gnu": [22, 23], "dcmake_system_nam": 22, "dcmake_system_processor": 22, "dcmake_library_path": 22, "usr": 22, "lib": [22, 65], "acl_root_dir": [22, 23], "computelibrari": [22, 23], "donednn_aarch64_use_acl": [22, 23], "vsdevcmd": 22, "bat": 22, "profession": 22, "common7": 22, "startdir": 22, "arch": 22, "host_arch": 22, "nativ": [22, 31, 42, 311, 595], "prompt": 22, "menu": 22, "config": [22, 173], "number_of_processor": 22, "cmake_build_typ": 22, "rerun": 22, "scratch": [22, 179, 229], "solut": [22, 65, 173, 177], "altern": [22, 32, 52, 59, 154, 163], "sln": [22, 173], "x86": [22, 62, 175], "v3": [22, 63, 178, 311], "23": [22, 172], "predefin": 22, "test": [22, 29, 34, 35, 67, 160, 170, 267, 329, 422, 467, 468, 579], "ctest": 22, "io": [22, 41, 52, 213, 263, 414], "dev_guide_build_opt": 22, "html": [22, 41, 52, 263, 414], "determin": [22, 28, 60, 199, 201, 287, 436, 438, 442, 444, 473], "scope": [22, 58, 471], "depth": [22, 27, 28, 81, 82, 177, 194, 213, 276, 317, 319, 331, 448, 519, 521, 523, 525, 527, 529, 583, 585], "smoke": [22, 23, 277, 450], "smallest": 22, "ci": [22, 23], "nightli": [22, 23], "comprehens": 22, "reconfigur": 22, "miss": [22, 159, 160, 178, 203, 251, 253, 254, 265, 266, 394, 398, 400], "donednn_test_set": 22, "toolkit": 22, "ld_library_path": [22, 65], "sure": [22, 65, 67, 112, 175, 176, 257, 360, 406], "conda": 22, "env": [22, 175, 176, 257, 406], "doc": [22, 58, 177], "yml": 22, "header": [22, 24, 31, 32, 154, 160, 173, 178, 259, 260, 268, 274, 298, 301], "cmake_install_prefix": 22, "administr": 22, "privileg": 22, "sudo": 22, "bold": [23, 29, 30, 40, 159, 178], "onednn_library_typ": 23, "onednn_cpu_runtim": 23, "omp": [23, 160], "seq": 23, "onednn_gpu_runtim": 23, "ocl": [23, 275, 442], "offload": 23, "onednn_build_doc": 23, "onednn_doc_versions_json": 23, "json": [23, 40], "pydata": 23, "sphinx": 23, "theme": 23, "switcher": 23, "onednn_build_exampl": 23, "onednn_build_test": 23, "onednn_build_graph": [23, 40], "onednn_enable_graph_dump": [23, 40], "dump": [23, 62, 160, 197, 305, 309, 341, 353], "artifact": [23, 40], "onednn_arch_opt_flag": 23, "warn": [23, 160, 178, 267, 422], "onednn_enable_jit_profil": [23, 160], "profil": [23, 34, 35, 179, 222, 223, 288, 309, 341, 383], "onednn_enable_itt_task": [23, 160], "onednn_enable_primitive_cach": [23, 159], "onednn_enable_max_cpu_isa": [23, 29], "onednn_enable_cpu_isa_hint": [23, 30], "isa": [23, 29, 31, 36, 62, 63, 67, 178, 179, 186, 187, 188, 189, 304, 341, 370, 372, 471, 501], "primitive_nam": 23, "cpu_isa_nam": 23, "gpu_isa_nam": 23, "isa_nam": 23, "onednn_experiment": [23, 35], "onednn_verbos": [23, 35, 175, 176, 257, 341, 406, 471, 473], "onednn_dev_mod": [23, 178], "trace": [23, 178, 473], "debuginfo": [23, 178], "log": [23, 33, 35, 110, 139, 178, 205, 267, 304, 306, 308, 422], "develop": [23, 24, 31, 35, 62, 63, 178, 252, 253, 264, 266, 284, 312, 313, 316, 317, 320, 323, 324, 326, 327, 328, 330, 331, 332, 337, 338, 339, 340, 342, 343, 345, 346, 398, 416, 420, 465], "onednn_aarch64_use_acl": 23, "onednn_blas_vendor": 23, "armpl": 23, "link": [23, 62, 81, 82, 83, 84, 85, 86], "onednn_gpu_vendor": 23, "nvidia": [23, 370], "amd": [23, 370], "dnnl_gpu_runtim": [23, 173], "onednn_dpcpp_host_compil": 23, "clang": [23, 65, 155, 261, 262, 410, 412], "onednn_library_nam": 23, "modifier_nam": 23, "coverag": [23, 24], "counterpart": [23, 63, 173, 329, 581], "prefix": [23, 341], "sub": [23, 36, 155, 164, 173, 177, 184, 185, 294, 329, 418, 471, 485], "intend": [23, 28, 172, 178, 330, 370, 376], "subject": 23, "oneapi": [23, 65, 170, 173, 175, 176, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 309, 384, 386, 388, 392, 398, 400, 402, 404, 406, 408, 414, 416, 422, 424, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 459, 461, 463, 467, 469, 475, 479, 481, 483, 485, 487, 489, 491, 493, 495, 499], "dpc": [23, 346, 383, 493, 495, 502], "discov": 23, "cmake_cxx_compil": 23, "window": [23, 34, 59, 63, 71, 72, 114, 115, 157, 178, 341, 458], "linux": [23, 34, 155, 178, 341], "compat": [23, 29, 60, 98, 175, 176, 257, 284, 406, 465], "7": [23, 160, 170, 172, 175, 176, 177, 190, 200, 211, 240, 257, 259, 260, 261, 262, 269, 270, 274, 284, 298, 406, 410, 412, 418, 420, 424, 436, 438, 442, 444, 465, 473], "gcc": 23, "interoper": [23, 35, 162, 309, 353, 374, 375, 376, 377, 378, 383, 434, 442, 444, 493, 495, 502], "disk": 23, "occupi": [23, 172, 329, 579], "app": 23, "batch_norm": [23, 220, 383], "concat": [23, 34, 179, 205, 220, 221, 308, 309, 329, 334, 372, 383, 403, 471, 593, 638], "deconvolut": [23, 34, 184, 185, 220, 221, 309, 334, 383, 429, 524, 525, 526, 527, 528, 529], "group_norm": [23, 179, 220, 383], "inner_product": [23, 220, 251, 383], "layer_norm": [23, 220, 383], "lrn": [23, 184, 185, 220, 221, 228, 229, 250, 251, 253, 254, 258, 309, 334, 383, 392, 398, 400, 408, 471, 568, 569, 570, 571, 598, 638], "pool": [23, 31, 34, 59, 63, 71, 72, 114, 115, 184, 185, 220, 221, 228, 229, 250, 251, 253, 254, 258, 287, 306, 309, 334, 383, 392, 394, 398, 400, 408, 476, 582, 583, 584, 585, 598, 638], "prelu": [23, 28, 34, 61, 67, 108, 122, 205, 220, 221, 308, 309, 311, 334, 383, 477, 478, 587, 588, 589, 590, 591, 638], "resampl": [23, 34, 184, 185, 220, 221, 228, 229, 309, 334, 383, 484, 598, 603, 604, 605, 606, 638], "rnn": [23, 25, 34, 58, 59, 63, 64, 179, 184, 185, 194, 213, 220, 221, 228, 229, 230, 231, 232, 233, 246, 265, 266, 280, 282, 294, 302, 309, 311, 329, 334, 335, 383, 385, 457, 462, 471, 498, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 595, 598, 607, 626, 627, 628, 629, 638], "sdpa": [23, 42, 306], "shuffl": [23, 34, 179, 220, 221, 228, 229, 309, 334, 383, 471, 488, 608, 609, 610, 611, 638], "softmax": [23, 34, 42, 52, 59, 110, 140, 179, 184, 185, 203, 204, 205, 220, 221, 265, 266, 306, 308, 309, 334, 383, 471, 490, 612, 613, 614, 615, 638], "attempt": [23, 335, 535, 548, 579, 593, 617], "unimpl": [23, 160, 209, 228, 239, 285, 341, 467], "style": 23, "semicolon": 23, "delimit": [23, 160], "donednn_enable_primit": 23, "sse41": [23, 29, 30, 186, 341], "avx2": [23, 29, 31, 62, 186, 189, 341, 471], "avx512": [23, 63, 177], "amx": [23, 29, 31, 67, 164, 175, 176, 186, 189, 257, 406], "linearli": 23, "complianc": [23, 175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "unit": [23, 26, 36, 41, 164, 166, 175, 176, 184, 185, 257, 320, 365, 406, 434, 458, 493], "donednn_enable_primitive_cpu_isa": 23, "xelp": 23, "xehp": 23, "xehpg": 23, "xehpc": 23, "xe2": [23, 28, 31, 67], "xe3": [23, 31], "donednn_enable_primitive_gpu_isa": 23, "x64": [23, 31, 160, 176, 178, 349], "interfac": [23, 34, 160, 170, 175, 176, 257, 347, 354, 362, 363, 367, 378, 406, 434, 493, 495, 620], "leav": [23, 52, 253, 254, 398, 400, 422], "donednn_enable_gemm_kernels_isa": 23, "no_corr": 23, "add_bitwis": 23, "short": [23, 164, 173, 471], "verifi": [23, 156, 286, 469, 517, 597, 598, 602, 619], "unmodifi": 23, "processor": [23, 28, 29, 34, 41, 42, 52, 53, 155, 186, 189, 370, 434, 435, 493, 494, 495, 496], "jit": [23, 29, 30, 58, 65, 159, 160, 178, 341, 471, 473, 501], "best": [23, 28, 29, 31, 34, 64, 67, 155, 158, 162, 178, 179, 253, 254, 258, 259, 260, 274, 288, 298, 329, 394, 398, 400, 408, 450, 473, 474, 499], "detect": [23, 29, 157, 311, 595], "xsse4": 23, "sse4": [23, 29, 31, 177, 186, 189], "older": [23, 29, 31], "msse4": 23, "give": [23, 164, 177, 414], "arch_opt_flag": 23, "portabl": [23, 155, 329], "throughout": [23, 58, 294, 432, 485], "undefin": [23, 59, 179, 185, 190, 193, 194, 199, 201, 202, 203, 204, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 230, 231, 232, 233, 238, 245, 329, 335, 362, 581], "crash": [23, 432], "conflict": [23, 493], "tbbroot": 23, "environment": 23, "instal": [23, 65], "dtbbroot": 23, "winograd": [23, 25, 162, 178, 179, 184, 185], "_onednn_test_threadpool_impl": 23, "standalon": 23, "eigen": [23, 170], "eigen3_dir": 23, "d_onednn_test_threadpool_impl": 23, "deigen3_dir": 23, "eigen3": 23, "plu": 23, "decomposit": 23, "At": [23, 29, 30, 58, 67, 80, 159, 160, 174, 178, 273, 432], "item": [23, 160], "worker": [23, 620], "optimis": 23, "machin": [23, 176, 267, 422], "mlplatform": 23, "org": [23, 41, 42, 50, 52, 53, 175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "download": 23, "advis": [23, 29, 30, 64, 174], "v23": 23, "11": [23, 24, 60, 160, 190, 250, 251, 253, 254, 258, 259, 260, 261, 262, 274, 284, 288, 289, 298, 392, 398, 400, 408, 410, 412, 426, 432, 438, 465, 473, 475], "donednn_blas_vendor": 23, "graphic": [23, 34, 41, 42, 52, 53, 62, 67, 370, 434, 435, 493, 494, 495, 496], "sdk": 23, "dopenclroot": 23, "almost": [24, 155, 177], "far": [24, 63], "concern": [24, 63], "switch": [24, 173, 177, 284, 465], "back": [24, 28, 36, 59, 63, 71, 72, 81, 82, 83, 84, 85, 86, 110, 111, 114, 115, 160, 162, 179, 253, 254, 255, 297, 304, 317, 319, 329, 331, 354, 363, 367, 398, 400, 402, 444, 446, 491, 493, 519, 521, 523, 525, 527, 529, 579, 583, 585], "forth": 24, "desir": [24, 59, 155, 341], "c99": 24, "medium": 24, "insid": [24, 26, 36, 177, 202, 210, 263, 277, 303, 329, 414, 436, 438, 450, 499, 581], "thin": 24, "wrapper": [24, 535, 548, 579, 593, 617], "stabl": [24, 52, 166, 185], "abi": [24, 173, 221], "usabl": [24, 27], "audienc": 24, "experienc": 24, "ffi": 24, "framework": [24, 36, 44, 59, 153, 155, 159, 177, 362, 370, 432, 436, 438, 440, 442, 444, 446], "sanit": 24, "consequ": [24, 473], "nan": [24, 139, 284, 465], "close": [24, 155, 172], "overlap": [24, 71, 157], "proper": [24, 32, 59, 60, 154, 175, 176, 257, 267, 304, 406, 414, 422, 432], "maxim": [24, 58, 341], "No": [24, 28, 29, 31, 40, 163, 164, 176, 179, 187, 188, 246, 252, 253, 264, 266, 284, 294, 384, 398, 416, 420, 465, 471, 485], "workaround": [24, 250, 258, 392, 408], "next_impl": [24, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "strstr": 24, "impl_info_str": [24, 228, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "ref": [24, 26, 175, 176, 228, 257, 406], "concaten": [25, 80, 164, 179, 220, 230, 231, 255, 316, 329, 402, 516, 517], "concat_dimens": [25, 304, 316, 517], "ou": [25, 80, 165, 166], "src_i": [25, 78, 80, 110, 139, 168], "c_1": [25, 80], "c_": [25, 80, 164], "dnnl_arg_multiple_src": [25, 168, 255, 297, 304, 335, 402, 491], "sum_i": [25, 175, 266], "c_i": 25, "necessarili": [25, 163, 172, 175, 176, 257, 406], "dnnl_nchw16c": [25, 194, 213], "dnnl_ncdhw8c": [25, 194, 213], "prepack": 25, "dnnl_format_kind_opaqu": [25, 193, 212], "s8s8": [25, 63], "abl": [25, 29, 67, 162, 168, 432], "slower": [25, 31, 168], "graph": [26, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 65, 93, 147, 153, 178, 181, 197, 240, 259, 260, 268, 274, 298, 301, 304, 306, 309, 341, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 368, 372, 383, 437, 439, 441, 443, 445, 447, 538], "compon": [26, 178, 284, 465], "fold": 26, "redund": 26, "megabyt": 26, "won": [26, 178], "reach": [26, 35, 166, 209, 239, 240, 357, 597], "getter": 26, "dnnl_graph_set_constant_tensor_cache_capac": [26, 304, 357], "dnnl_graph_get_constant_tensor_cache_capac": [26, 304, 357], "programm": 26, "onednn_graph_constant_tensor_cache_capac": 26, "form": [26, 27, 36, 41, 58, 166, 177, 194, 213, 432], "engine_kind1": 26, "size1": 26, "engine_kind2": 26, "size2": 26, "first": [26, 27, 28, 29, 30, 33, 38, 39, 41, 42, 45, 48, 49, 50, 52, 57, 60, 61, 63, 67, 81, 136, 156, 164, 175, 176, 177, 178, 194, 213, 257, 259, 265, 266, 274, 298, 329, 341, 362, 406, 414, 418, 420, 426, 432, 434, 436, 438, 442, 444, 446, 467, 473, 493, 539, 581], "pars": 26, "prioriti": 26, "df_": 27, "wide": [27, 41, 306], "known": [27, 28, 67, 175, 267, 273, 277, 303, 329, 414, 422, 432, 436, 442, 444, 450, 499], "scale_shift": 27, "carri": [27, 175], "diff_src": [27, 59, 66, 69, 72, 75, 79, 82, 85, 92, 96, 101, 103, 105, 107, 111, 115, 118, 122, 133, 138, 140, 142, 144, 151, 157, 163, 253, 254, 258, 294, 312, 320, 323, 326, 398, 400, 408, 485], "diff_dst": [27, 59, 66, 69, 72, 75, 77, 79, 82, 83, 85, 86, 92, 96, 101, 103, 105, 107, 111, 115, 118, 122, 133, 138, 140, 142, 144, 151, 253, 254, 258, 312, 320, 323, 326, 398, 400, 408], "diff_bia": [27, 77], "diff_scale_shift": 27, "_layer": 27, "_iter": 27, "recurr": [27, 31, 164, 246, 280, 282, 302, 335, 340, 384, 456, 461, 497, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "letter": [27, 177, 194, 213, 471], "od": 27, "kd": [27, 28, 61], "sd": [27, 28, 81, 82], "sw": [27, 28, 71, 81, 82, 114, 157, 256, 271, 289, 404, 428, 475], "dd": [27, 28, 33, 81, 82], "dh": [27, 28, 71, 81, 82, 114, 157, 289, 475], "dilat": [27, 82, 83, 84, 85, 86, 114, 115, 179, 203, 204, 228, 229, 250, 258, 259, 260, 274, 287, 289, 298, 304, 317, 319, 331, 392, 408, 436, 438, 442, 444, 471, 475, 519, 521, 523, 525, 527, 529, 583, 585, 598], "ph": 27, "pw": 27, "transposit": [27, 314, 347, 378], "hidden": [27, 63, 266, 280, 302, 335, 340, 418, 456, 497, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 627, 629], "_t": [27, 164], "timestamp": [27, 160, 164], "l": [27, 65, 66, 164, 194, 246, 280, 282, 294, 302, 311, 329, 384, 456, 461, 485, 497, 595], "tanh": [27, 28, 33, 95, 117, 151, 164, 184, 185, 205, 246, 256, 271, 278, 280, 282, 283, 302, 306, 308, 384, 404, 428, 452, 456, 461, 463, 497], "logist": [27, 33, 184, 185], "cell": [27, 31, 63, 184, 185, 194, 213, 228, 229, 232, 233, 266, 280, 302, 335, 340, 418, 420, 456, 497, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 598, 607, 627, 629], "tild": [27, 164], "candid": [27, 67, 194, 213, 306], "gate": [27, 164, 184, 185, 194, 213, 246, 280, 282, 294, 302, 306, 329, 384, 456, 461, 485, 497], "forget": [27, 194, 213, 253, 254, 398, 400], "o": [27, 42, 52, 53, 155, 160, 164, 177, 179, 194, 213, 266, 280, 288, 294, 311, 329, 418, 420, 456, 485, 595], "updat": [27, 28, 31, 57, 61, 164, 172, 173, 194, 213, 253, 254, 258, 259, 260, 268, 274, 280, 294, 298, 301, 398, 400, 408, 456, 485, 553], "reset": [27, 34, 35, 170, 184, 185, 194, 213, 280, 336, 383, 457, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "english": 27, "alphabet": 27, "canon": 27, "z": [27, 63], "dimension": [27, 36, 60, 67, 110, 177, 311, 329, 368, 581, 595], "outermost": [27, 165, 166, 177, 194, 213, 329], "innermost": [27, 165, 166, 194, 213, 228, 229, 329], "dens": [27, 67, 162, 177, 178, 329, 581], "ba": [27, 67, 213, 219, 245, 581], "last": [27, 35, 41, 48, 50, 63, 64, 106, 107, 112, 148, 155, 166, 175, 176, 177, 178, 209, 239, 240, 257, 326, 336, 394, 406, 418, 420, 432, 539, 597], "transpos": [27, 39, 49, 52, 112, 165, 176, 194, 213, 219, 245, 271, 277, 314, 347, 378, 428, 450], "natur": [27, 109, 184, 185, 432], "suppos": [27, 60, 294, 485], "column": [27, 67, 112, 160, 167, 174, 177, 314, 347, 378, 467], "row": [27, 112, 165, 167, 174, 177, 214, 238, 263, 266, 304, 314, 347, 362, 378, 414, 467], "major": [27, 63, 165, 177, 263, 314, 341, 347, 362, 378, 414, 630], "fortran": 27, "ab16a": 27, "similar": [27, 31, 42, 52, 58, 158, 167, 173, 177, 179, 214, 219, 238, 245, 259, 260, 268, 274, 294, 298, 301, 329, 396, 414, 432, 485, 581], "split": [27, 42, 59, 155, 160, 175, 176, 177, 257, 329, 406, 581], "contigu": [27, 67, 177, 314, 347, 349, 362, 378], "domain": [27, 177, 194, 213, 311, 414, 587], "four": [27, 63, 164], "cross": [28, 134, 155, 178, 370], "correl": 28, "comment": [28, 81, 82], "front": [28, 71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 160, 317, 319, 331, 519, 521, 523, 525, 527, 529, 583, 585], "top": [28, 41, 52, 71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 160, 177, 311, 317, 319, 329, 331, 519, 521, 523, 525, 527, 529, 583, 585, 587], "left": [28, 33, 41, 52, 66, 67, 71, 72, 81, 82, 83, 84, 85, 86, 106, 107, 112, 114, 115, 136, 157, 163, 165, 166, 177, 178, 228, 229, 230, 231, 256, 271, 287, 289, 294, 311, 317, 319, 329, 331, 404, 428, 471, 475, 485, 519, 521, 523, 525, 527, 529, 583, 585, 587, 598], "pd_l": [28, 81, 82], "ph_l": [28, 71, 81, 82, 114, 157, 256, 271, 289, 404, 428, 475], "pw_l": [28, 71, 81, 82, 114, 157, 256, 271, 289, 404, 428, 475], "_l": 28, "stand": [28, 155], "bottom": [28, 41, 52, 71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 177, 317, 319, 331, 519, 521, 523, 525, 527, 529, 583, 585], "pd_r": [28, 81, 82], "ph_r": [28, 81, 82, 256, 271, 289, 404, 428, 475], "pw_r": [28, 81, 82, 256, 271, 289, 404, 428, 475], "_r": 28, "broken": [28, 175, 176, 257, 406], "exposit": 28, "realiti": 28, "lfloor": [28, 81, 163], "rfloor": [28, 81, 163], "oc_g": [28, 81], "ic_g": [28, 81], "5d": [28, 64, 177, 194, 213, 311, 587], "depthwis": [28, 38, 311, 335, 587], "dkh": [28, 81], "dkw": [28, 81], "tensorflow": [28, 122, 172, 177, 289, 475], "adjust": [28, 177, 289, 329, 475, 581], "dh_onednn": 28, "dh_torch": 28, "dw_onednn": 28, "dw_torch": 28, "fraction": 28, "swap": [28, 329, 581], "li": [28, 42], "expand": [28, 271, 428], "plai": [28, 432], "crucial": 28, "role": 28, "diffbia": [28, 61, 164], "dnnl_arg_diff_weight": [28, 61, 158, 253, 254, 258, 304, 335, 398, 400, 408], "dnnl_arg_diff_bia": [28, 61, 164, 253, 254, 258, 294, 304, 335, 398, 400, 408, 485], "prelu_post_op_posit": [28, 61, 67], "f4_e2m1": [28, 31, 67, 211], "f4_e3m0": [28, 31, 67, 211], "physic": [28, 64, 155, 177, 194, 273, 329, 432, 581], "critic": [28, 34, 58, 59, 61, 156, 175, 176, 257, 406, 471, 472], "shorten": [28, 61, 164, 178], "dnnl_wio": [28, 61, 194], "dnnl_hwio": [28, 61, 194], "dnnl_dhwio": [28, 61, 194], "xe": [28, 42, 52, 53], "hpc": [28, 31], "dnnl_arg_": [28, 61, 67, 330, 335, 346, 376, 377, 593, 601], "memory_index": [28, 61, 67], "dnnl_arg_attr_zero_point": [28, 67, 263, 277, 303, 304, 311, 335, 414, 450, 499, 595], "prevent": [28, 32, 60, 139, 154, 335], "feasibl": 28, "deploi": 28, "done": [28, 33, 59, 67, 157, 162, 175, 176, 257, 394, 396, 406, 432, 434, 465], "wei": [28, 31], "eta": 28, "That": [28, 147, 156, 159, 177, 432], "shift_": [28, 162], "simd": [28, 29, 186, 189], "expens": [28, 59, 426, 432, 471, 581], "fast": [28, 42, 52, 175, 176, 177, 257, 406], "lavin": 28, "grai": 28, "often": [28, 42, 160, 178], "aarch64": [28, 160, 179, 370], "rearrang": [28, 148], "fallback": 28, "exce": [28, 179, 284, 465], "14": [28, 60, 160, 190, 284, 287, 465, 471, 473, 587], "constraint": [28, 67], "met": [28, 121, 122], "silent": [28, 30], "fall": [28, 179], "explicit": [28, 42, 52, 170, 294, 329, 485], "weigh": 28, "against": [28, 284, 465], "boost": [28, 29, 31, 172, 178, 186, 189], "consumpt": [28, 229, 329, 432], "grow": 28, "significantli": [28, 159, 172], "growth": 28, "rest": [28, 81], "conv1_pd": 28, "convolution_winograd": [28, 185, 519, 521, 523, 525], "conv1_src_md": [28, 251, 394], "conv1_weights_md": [28, 251, 394], "conv1_bias_md": [28, 251, 394], "conv1_dst_md": [28, 251, 394], "conv1_strid": [28, 251, 394], "conv1_padding_l": 28, "conv1_padding_r": 28, "convolution_auto": [28, 185, 287, 471, 519, 521, 523], "heurist": [28, 179], "affin": [28, 106, 107, 155], "xmx": [28, 42, 52, 53], "lpg": [28, 31], "hpg": [28, 31], "uarch": [28, 31, 160], "fp8": [28, 31, 67], "sometim": [29, 58, 59, 61, 63, 177, 294, 426, 432, 485], "explor": [29, 160, 175, 176, 257, 406], "onednn_max_cpu_isa": 29, "avx": [29, 31, 178, 186, 189, 341, 471], "advanc": [29, 62, 67, 162, 164, 186, 189, 267, 422, 450, 499], "avx2_vnni": [29, 186, 341], "dl": [29, 31, 172, 178, 186, 189], "avx512_cor": [29, 178, 186, 341], "avx512bw": [29, 31], "avx512vl": 29, "avx512dq": 29, "avx512_core_vnni": [29, 186, 341], "avx512_core_bf16": [29, 178, 186, 341], "avx10_1_512": [29, 186, 341], "avx512_core_fp16": [29, 178, 186, 341], "avx10": [29, 31, 186, 189], "float16": [29, 186, 189], "avx10_1_512_amx": [29, 186, 341], "avx512_core_amx": [29, 178, 186, 341], "avx2_vnni_2": [29, 186, 341], "avx10_1_512_amx_fp16": [29, 186, 341], "avx512_core_amx_fp16": [29, 178, 186, 341], "exclud": [29, 184, 185], "preview": 29, "avx10_2_512": [29, 186, 341], "avx10_2_512_amx_2": [29, 186, 341], "float8": [29, 186, 189], "alias": [29, 160, 194, 213, 341], "introduct": [29, 62], "manag": [29, 30, 36, 57, 154, 160, 178, 236, 237, 259, 260, 268, 274, 298, 301, 329, 330, 376, 548, 579], "set_max_cpu_isa": [29, 341, 372], "ed": [29, 160], "observ": [29, 155, 178], "abil": [29, 30, 32, 154, 432], "get_effective_cpu_isa": [29, 341, 372], "highest": [29, 58, 178], "zmm": 30, "regist": [30, 60, 187, 188, 458], "advantag": [30, 172], "clock": [30, 160], "onednn_cpu_isa_hint": 30, "set_cpu_isa_hint": [30, 341, 372], "routin": [30, 175, 176, 257, 349, 350, 406, 621], "no_hint": [30, 187, 341], "prefer_ymm": [30, 187], "ymm": [30, 187, 188], "get_cpu_isa_hint": [30, 341, 372], "pose": 30, "bypass": 30, "ieee": [31, 172], "golden": 31, "comparison": [31, 34, 67, 98, 175, 176, 257, 267, 329, 383, 406], "doubl": [31, 190, 229, 263, 267, 285, 304, 414, 422, 467], "ofp8": [31, 190, 200, 211], "5": [31, 33, 41, 60, 63, 95, 99, 104, 105, 106, 107, 136, 160, 163, 167, 172, 174, 175, 176, 177, 190, 194, 200, 211, 240, 250, 251, 253, 254, 257, 258, 259, 260, 261, 262, 268, 274, 275, 281, 284, 285, 286, 288, 292, 298, 299, 300, 301, 362, 392, 398, 400, 406, 408, 410, 412, 434, 436, 438, 442, 444, 459, 465, 467, 469, 481, 493, 495], "mx": [31, 190, 211, 226, 227], "footnot": 31, "topic": [31, 53, 67, 162, 329, 432, 471, 473], "govern": [31, 175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "dynam": [31, 65, 89, 160, 226, 227, 263, 267, 376, 377, 414, 422, 593, 601], "convert_": 31, "postops_": 31, "mix": [31, 41, 42, 44, 56, 152], "faithfulli": [31, 44], "closest": 31, "fp4": 31, "don": [31, 58, 67, 250, 258, 263, 294, 392, 408, 414, 485], "nearest": [31, 104, 105, 135, 152, 184, 185, 203, 204, 339], "tie": 31, "flush": [31, 285, 357, 467], "fenv": 31, "fesetround": 31, "xmmintrin": 31, "_mm_set_flush_zero_mod": 31, "_mm_flush_zero_on": 31, "ftz": 31, "next": [31, 52, 177, 179, 253, 254, 288, 294, 335, 392, 394, 396, 398, 400, 418, 420, 432, 434, 436, 442, 444, 471, 473, 485, 493, 597], "explain": [31, 60, 394, 396], "ne_convert": 31, "fp16": 31, "legend": 31, "word": [31, 59, 63, 67, 194, 213, 236, 237], "4x": 31, "microarchitectur": 31, "lp": [31, 161, 184], "uhd": 31, "11th": 31, "14th": 31, "gen": [31, 62, 263, 267, 277, 303, 414, 422, 450, 499], "iri": [31, 458], "formerli": [31, 63], "dg1": 31, "ultra": 31, "meteor": 31, "lake": [31, 63], "arc": [31, 62, 458], "seri": [31, 62, 63, 67, 162], "achemist": 31, "flex": 31, "arctic": 31, "sound": [31, 177], "pont": 31, "vecchio": 31, "lunar": 31, "battlemag": 31, "futur": [31, 63, 357], "panther": 31, "interact": [32, 154, 325, 330, 346, 347, 361, 363, 367], "dnnl_sycl": [32, 243, 298, 299, 300, 301, 444, 446, 493, 495], "seamlessli": 32, "submit": [32, 154, 299, 300, 336, 390, 392, 394, 434, 493, 495, 620], "access": [32, 34, 57, 58, 154, 155, 172, 266, 284, 294, 299, 329, 333, 341, 356, 362, 418, 426, 432, 434, 465, 485, 493, 495, 579], "uint8_t": [32, 63, 156, 175, 176, 229, 257, 263, 266, 277, 284, 304, 314, 329, 330, 335, 347, 360, 362, 363, 364, 365, 372, 374, 376, 378, 406, 414, 420, 450, 465, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 582, 583, 584, 585, 588, 589, 590, 591, 593, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 626, 627, 628, 629], "sycl_interop": [32, 298, 299, 300, 301, 304, 309, 329, 346, 353, 354, 367, 372, 373, 444, 446, 493, 495], "make_engin": [32, 154, 156, 376, 377], "get_devic": [32, 35, 154, 156, 298, 300, 301, 376, 377, 444, 446, 495], "get_context": [32, 35, 154, 275, 298, 300, 301, 376, 377, 434, 444, 446, 495], "make_stream": [32, 35, 154, 298, 301, 376, 377, 378, 444, 446], "get_queu": [32, 299, 300, 377, 493, 495], "make_memori": [32, 154, 299, 300, 376, 377, 493, 495], "get_buff": [32, 299, 329, 377, 493], "uniform": [32, 154, 155], "memory_kind": [32, 154, 299, 300, 304, 330, 346, 376, 377, 493, 495], "identifi": [32, 35, 36, 154, 160, 306, 329, 365], "get_memory_kind": [32, 154, 376, 377], "track": [32, 36, 93], "accessor": [32, 493], "write": [32, 35, 42, 52, 58, 154, 160, 175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 329, 349, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 579, 624], "i_1": 33, "ldot": [33, 60, 67], "i_k": 33, "dnnl_eltwise_ab": [33, 184, 185], "begin": [33, 68, 69, 91, 98, 101, 108, 121, 124, 132, 158, 163, 164, 165, 175, 176, 246, 247, 248, 249, 251, 255, 256, 257, 264, 266, 271, 272, 275, 276, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 384, 386, 388, 390, 402, 404, 406, 416, 420, 428, 430, 434, 448, 452, 454, 456, 459, 461, 463, 465, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497], "dnnl_eltwise_clip": [33, 184, 185], "clip_v2": 33, "dnnl_eltwise_clip_v2": [33, 184, 185], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [33, 184, 185], "elu": [33, 92, 184, 185, 205, 306, 308], "dnnl_eltwise_elu": [33, 184, 185], "dnnl_eltwise_elu_use_dst_for_bwd": [33, 184, 185], "exp": [33, 42, 52, 110, 139, 184, 205, 266, 284, 306, 308, 465], "dnnl_eltwise_exp": [33, 184, 185], "dnnl_eltwise_exp_use_dst_for_bwd": [33, 184, 185], "gelu_erf": [33, 95, 96, 203, 204], "dnnl_eltwise_gelu_erf": [33, 184, 185], "erf": [33, 95, 184, 185], "pi": [33, 95], "gelu_tanh": [33, 95, 96, 203, 204], "dnnl_eltwise_gelu_tanh": [33, 184, 185], "044715": [33, 95], "hardsigmoid": [33, 101, 184, 185, 205, 306, 308], "dnnl_eltwise_hardsigmoid": [33, 184, 185], "hardswish": [33, 103, 184, 185, 205, 306, 308], "dnnl_eltwise_hardswish": [33, 184, 185], "dnnl_eltwise_linear": [33, 184, 185], "dnnl_eltwise_log": [33, 184, 185], "log_": 33, "dnnl_eltwise_logist": [33, 184, 185, 340], "dnnl_eltwise_logistic_use_dst_for_bwd": [33, 184, 185], "mish": [33, 118, 184, 185, 205, 306, 308], "dnnl_eltwise_mish": [33, 184, 185], "omega": [33, 60, 118], "delta": [33, 118], "pow": [33, 184, 185, 205, 308], "dnnl_eltwise_pow": [33, 184, 185], "dnnl_eltwise_relu_use_dst_for_bwd": [33, 184, 185, 320, 531], "dnnl_eltwise_round": [33, 184, 185], "soft_relu": [33, 184, 185], "dnnl_eltwise_soft_relu": [33, 184, 185], "dnnl_eltwise_sqrt": [33, 184, 185], "dnnl_eltwise_sqrt_use_dst_for_bwd": [33, 184, 185], "squar": [33, 126, 143, 146, 184, 185, 205, 215, 216, 306, 308], "dnnl_eltwise_squar": [33, 184, 185], "swish": [33, 41, 184, 185], "dnnl_eltwise_swish": [33, 184, 185], "dnnl_eltwise_tanh": [33, 184, 185, 340], "dnnl_eltwise_tanh_use_dst_for_bwd": [33, 184, 185], "134145": 33, "equat": [33, 164], "_relu": 33, "logsigmoid": 33, "soft": [33, 58], "eltwise_forward": [33, 251, 253, 254, 270, 272, 273, 275, 288, 299, 300, 320, 372, 394, 398, 400, 426, 430, 432, 434, 493, 495, 531, 593], "rather": [33, 294, 485], "Such": [33, 59, 155, 581], "satisfi": [33, 36], "overview": [34, 63], "organ": 34, "workflow": [34, 59, 273, 383, 434, 436, 438, 440, 442, 444, 446, 467, 469, 471, 493, 495], "demonstr": [34, 35, 38, 41, 42, 45, 48, 52, 58, 155, 156, 167, 175, 176, 255, 272, 284, 290, 304, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "sgemm": [34, 67, 267, 314, 372, 378, 383, 423], "coo": [34, 214, 238, 261, 329, 383, 411, 581], "encod": [34, 65, 162, 179, 214, 228, 229, 238, 264, 265, 266, 329, 410, 411, 412, 413, 416, 417, 418, 420, 581], "csr": [34, 214, 238, 262, 329, 383, 413, 581], "pack": [34, 60, 162, 167, 175, 176, 177, 214, 219, 238, 245, 257, 264, 277, 303, 329, 348, 349, 350, 406, 416, 417, 450, 499, 581, 623, 624, 625], "compress": [34, 58, 167, 214, 238, 303, 306, 499, 500], "alexnet": [34, 160, 250, 251, 252, 253, 254, 258, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 408, 409], "conv3": [34, 160, 251, 252, 396, 397], "relu3": [34, 251, 396, 397], "gnmt": [34, 418, 419, 420, 421, 485, 486], "vanilla": [34, 185, 302, 340, 383, 498, 626, 627, 628, 629], "gru": [34, 63, 184, 185, 194, 213, 280, 302, 340, 383, 457, 497, 544, 545, 546, 547, 564, 565, 566, 567], "augru": [34, 184, 185, 340, 383, 385, 505, 506, 507, 508, 560, 561, 562, 563, 607], "measur": [34, 155, 178, 396, 467], "practic": [34, 59, 155, 162, 178, 259, 260, 268, 274, 298, 301, 396, 471, 473, 474], "binary_sub": [34, 185, 249, 390, 391], "binary_div": [34, 185, 249, 390, 391], "tmp_dst": [34, 390, 391], "varianc": [34, 35, 73, 74, 75, 99, 106, 107, 215, 216, 247, 249, 276, 279, 312, 323, 326, 335, 386, 390, 391, 448, 454, 510, 512, 541, 543, 557, 559], "binary_mul": [34, 185, 248, 249, 388, 390, 391], "abstract": [34, 36, 156, 174, 175, 176, 257, 321, 329, 364, 368, 406, 426, 432, 434, 493, 620], "brgemm": [34, 175, 176, 257, 304, 309, 348, 379, 407, 515, 548, 639], "donednn_build_exampl": 34, "maco": 34, "getting_start": [34, 65, 383, 432], "ex": [34, 473], "displai": [34, 160, 178, 179, 285, 467], "messag": [34, 178, 263, 267, 414, 422, 432, 493, 501, 536, 631], "aggress": 35, "onednn_experimental_bnorm_stats_one_pass": 35, "bn": 35, "rfc": 35, "onednn_experimental_gpu_conv_v2": 35, "shapeless": 35, "microkernel": 35, "onlin": 35, "collect": [35, 36, 160, 178, 348, 365, 414], "agnost": [35, 162, 194, 213, 329], "cl_command_queu": [35, 154, 275, 304, 330, 376, 434], "ocl_queu": [35, 275, 434], "cl_queue_properti": 35, "prop": 35, "cl_queue_profiling_en": 35, "clcreatecommandqueuewithproperti": 35, "ocl_interop": [35, 154, 156, 275, 304, 309, 330, 353, 363, 372, 373, 434], "reset_profil": [35, 336, 372], "enqueu": [35, 434], "twice": 35, "wait": [35, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 336, 344, 384, 386, 388, 390, 398, 400, 402, 404, 410, 412, 414, 416, 422, 426, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 579, 617, 620], "conv_prim": [35, 256, 404], "uint64_t": [35, 170, 304, 336, 372, 620], "nsec": 35, "get_profiling_data": [35, 336, 372], "profiling_data_kind": [35, 336, 372], "resourc": [35, 36, 159, 354], "vendor": 35, "logfil": 35, "parti": 35, "spdlog": 35, "onednn_verbose_logfil": 35, "cnn_test_logg": 35, "cpp": [35, 62, 65, 170, 178, 383, 394, 396, 418, 420, 426, 432, 434, 436, 438, 440, 442, 444, 446, 467, 471, 473, 493], "consol": 35, "logger": 35, "until": [35, 175, 176, 253, 254, 257, 259, 260, 268, 274, 298, 301, 329, 394, 398, 400, 406, 422, 493, 579], "filepath": 35, "dnnl_verbose_logfil": 35, "stdout": [35, 178, 341], "rotat": 35, "lazi": 35, "onednn_verbose_logfile_s": 35, "50": 35, "onednn_verbose_log_with_consol": 35, "onednn_verbose_num_logfil": 35, "invok": [35, 341], "class": [36, 156, 170, 228, 299, 300, 304, 347, 354, 355, 360, 362, 364, 365, 368, 373, 378, 495, 536, 548, 549, 593, 597, 598, 607], "bind": [36, 259, 260, 268, 274, 298, 301], "metadata": [36, 167, 261, 262, 410, 412], "know": [36, 59, 263, 414], "connect": [36, 41, 61, 153, 259, 260, 265, 274, 294, 298, 304, 362, 364, 436, 438, 442, 444, 485, 539], "edg": 36, "subgraph": [36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 197, 198, 306, 358], "within": [36, 63, 66, 160, 174, 177, 184, 185, 284, 314, 326, 327, 329, 347, 378, 465], "cycl": [36, 414], "procedur": 36, "port": 36, "node": [36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 147, 155, 250, 258, 304, 392, 408, 473], "lifecycl": 36, "anymor": [36, 177], "blue": [37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "brown": [37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "epilogu": [37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55], "unari": [37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 54, 306, 530, 532], "rule": [37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 70, 88, 98, 112, 113, 116, 119, 146, 149, 229], "20": [37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 160, 263, 267, 276, 362, 414, 422, 448], "src0": [37, 514], "definit": [37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 163, 164, 165, 329, 352, 354, 366, 369, 538], "biasadd": [38, 39, 45, 48, 49, 50, 77, 205, 259, 274, 298, 308, 436, 442, 444], "batchnorminfer": [38, 46, 73, 205, 306, 308], "f2f": [38, 45, 46, 48, 50, 54], "typecast": [38, 42, 44, 45, 46, 48, 50, 52, 54, 134, 205, 306, 308], "co": [38, 177, 246, 247, 248, 249, 255, 256, 264, 266, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 289, 290, 291, 292, 293, 295, 296, 297, 302, 304, 314, 347, 372, 378, 384, 386, 388, 390, 402, 404, 416, 428, 430, 432, 448, 452, 454, 456, 459, 461, 463, 475, 477, 479, 481, 483, 487, 489, 491, 497], "visual": [40, 65, 81, 82, 83, 84, 85, 86, 155, 173], "benchmark": [40, 473, 501], "onednn_graph_dump": [40, 358], "serial": [40, 156, 329, 374], "onednn_graph_verbos": 40, "info": [40, 160, 178, 311, 340, 471, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 587, 627, 629], "100001": 40, "100002": 40, "1313609102600373579": 40, "100003": 40, "12829238476173481280": 40, "variant": [41, 155, 164, 317, 319], "feed": 41, "ffn": 41, "glu": 41, "adopt": [41, 53, 89], "qualiti": [41, 42], "w_1": 41, "w_2": 41, "otim": 41, "sigmoid": [41, 138, 164, 185, 205, 306, 308], "fc": 41, "swiglu": 41, "llama": 41, "qwen": 41, "acycl": [41, 42, 52, 53], "gelu": [41, 96, 184, 185, 203, 204, 205, 306, 308], "meet": [41, 42, 52, 53], "properli": [41, 52, 164, 177, 179, 335], "attent": [41, 53, 164, 246, 265, 266, 280, 302, 306, 335, 340, 384, 418, 420, 456, 497, 506, 508, 561, 563, 607], "arxiv": [41, 42, 50, 52, 53], "1706": [41, 42, 52, 53], "03762v7": [41, 42, 52, 53], "2002": 41, "05202": 41, "foundat": 41, "2302": 41, "13971": 41, "technic": 41, "report": [41, 160, 162, 285, 311, 358, 467, 595], "2309": 41, "16609": 41, "graph_extens": [41, 52], "dot": [42, 53, 306], "head": [42, 52, 53, 160], "bottleneck": [42, 178], "load": [42, 160], "sentenc": 42, "mqa": [42, 52], "degrad": 42, "instabl": 42, "interpol": [42, 105, 163, 203, 204, 205, 306, 308, 339], "propos": [42, 172], "subgroup": 42, "mini": [42, 52, 53, 194, 213, 277, 329, 450, 539], "h_q": 42, "h_kv": 42, "n_rep": 42, "staticreshap": [42, 52, 205, 308], "manipul": [42, 329], "reshap": [42, 52, 329, 581], "unnecessari": [42, 59, 155, 471], "stat": [42, 52, 139, 326], "score": [42, 52], "recov": [42, 52], "reducesum": [42, 51, 205, 306, 308], "softmaxbackward": [42, 52, 205, 308], "openmp": [42, 52, 155, 178, 471], "decod": [42, 52, 62, 265, 266, 284, 304, 418, 420, 465], "1911": [42, 52], "02150": [42, 52], "checkpoint": 42, "2305": 42, "13245": 42, "half_pixel": [43, 104, 105, 203, 204], "coordinate_transformation_mod": [43, 104, 105, 203, 204], "strictli": 44, "manual": [44, 59, 63, 175, 176, 257, 265, 285, 406, 467], "honor": 44, "elimin": 44, "implicitli": [44, 164, 311, 329, 587], "recogn": 44, "vice": [44, 67, 112], "versa": [44, 67, 112], "clearli": 44, "groupnorm": [46, 205, 306, 308], "layernorm": [46, 107, 205, 306, 308], "f2q": [46, 48, 49, 50, 54], "avgpool": [47, 205, 306, 308], "maxpool": [47, 205, 306, 308], "rounding_typ": [47, 71, 114, 203, 204], "exclude_pad": [47, 71, 72, 203, 204], "q2f": [48, 49, 50], "zp": [49, 87, 89, 90, 123, 203, 204, 227, 260, 263, 414, 438], "per_tensor": [49, 87, 89, 90, 123, 203, 204, 260, 438], "smoothquant": 50, "2211": 50, "10438": 50, "reducel1": [51, 205, 306, 308], "reducel2": [51, 205, 306, 308], "reducemax": [51, 205, 306, 308], "reducemean": [51, 205, 306, 308], "reducemin": [51, 205, 306, 308], "reduceprod": [51, 205, 306, 308], "backbon": 52, "bert": [52, 306], "diffus": 52, "gpt": [52, 306], "q": [52, 53, 160, 298, 299, 300, 301, 304, 444, 446, 493, 495], "qk": 52, "d_k": 52, "d_qk": 52, "d_v": 52, "causal": 52, "triangular": 52, "diagon": 52, "fill": [52, 58, 59, 67, 136, 175, 176, 177, 252, 257, 266, 267, 269, 270, 277, 284, 288, 290, 303, 304, 406, 420, 422, 424, 426, 450, 465, 471, 477, 499], "inf": [52, 124], "elsewher": [52, 473], "entri": [52, 167, 178, 228, 229, 261, 262, 311, 329, 333, 336, 356, 410, 412, 581, 587], "unchang": [52, 202, 210, 335, 597], "genindex": [52, 205, 308], "greaterequ": [52, 205, 308], "statictranspos": [52, 205, 308], "tra": 52, "dq": 52, "dk": 52, "dv": 52, "cast": [52, 58, 63, 134, 152, 273, 432, 579], "proid": 52, "int4": 53, "exploit": 53, "kv": [53, 306], "subsequ": [53, 67, 173, 177, 178, 224, 225, 294, 322, 341, 418, 420, 432, 485], "dynamicdequant": [53, 205, 308], "dynamicquant": [53, 205, 308], "apart": 53, "group_shap": [53, 89, 203], "scale_k": 53, "zp_k": 53, "scale_v": 53, "zp_v": 53, "dt_fp": 53, "dt_int": 53, "c_g": 56, "c_ghw": 56, "group_normalization_forward": [56, 276, 323, 372, 448, 541, 593], "lightweight": [57, 426, 432], "Then": [57, 61, 136, 147, 177, 434, 473, 493], "0f": [57, 167, 250, 251, 252, 253, 254, 258, 261, 262, 264, 265, 266, 269, 270, 275, 284, 285, 286, 294, 299, 300, 304, 392, 396, 398, 400, 408, 410, 412, 416, 418, 420, 424, 426, 434, 465, 467, 469, 485, 493, 495], "alpha_mem": 57, "alpha_md": 57, "dnnl_memory_desc_create_host_scalar": [57, 304, 329], "dnnl_f32": [57, 162, 177, 190, 194, 200, 211, 250, 258, 269, 349, 392, 408, 424], "dnnl_memory_t": [57, 250, 258, 269, 304, 329, 330, 335, 346, 392, 408, 424, 537], "dnnl_memory_create_host_scalar": [57, 304, 329], "dnnl_memory_get_host_scalar_valu": [57, 304, 329], "dnnl_memory_set_host_scalar_valu": [57, 304, 329], "alpha_valu": 57, "get_host_scalar_valu": [57, 579], "new_alpha_valu": 57, "set_host_scalar_valu": [57, 579], "preprocess": 58, "classifi": 58, "depict": [58, 164, 177], "conv_prim_descr": 58, "friendli": [58, 294, 396, 473, 485], "accomplish": 58, "manner": [58, 329, 581], "find": [58, 125, 126, 127, 128, 129, 173, 259, 260, 263, 267, 270, 274, 284, 298, 299, 414, 422, 426, 465, 493], "look": [58, 177], "source_mem_descr": 58, "dest_mem_descr": 58, "weights_mem_descr": 58, "weight_memori": 58, "conv_source_memori": 58, "user_source_memori": 58, "get_desc": [58, 175, 176, 246, 251, 252, 253, 254, 256, 257, 263, 264, 265, 266, 270, 271, 277, 278, 280, 282, 286, 287, 288, 290, 294, 302, 303, 329, 376, 384, 394, 396, 398, 400, 404, 406, 414, 416, 418, 420, 426, 428, 450, 452, 456, 461, 469, 471, 473, 477, 485, 497, 499, 579], "reorder_prim_descr": 58, "conv_weights_memori": [58, 250, 252, 253, 254, 258, 392, 396, 398, 400, 408], "conv_dest_memori": 58, "essenti": [58, 59, 165, 259, 260, 268, 274, 298, 301, 414], "durat": [58, 285, 467], "grab": 58, "infus": 58, "fed": [59, 172, 259, 260, 274, 298], "turn": [59, 177, 178, 432, 471], "predict": 59, "forward_train": [59, 61, 164, 178, 179, 224, 246, 247, 256, 271, 272, 276, 278, 279, 280, 281, 282, 289, 290, 293, 294, 295, 296, 302, 384, 386, 404, 428, 430, 448, 452, 454, 456, 459, 461, 475, 477, 483, 485, 487, 489, 497, 508, 512, 523, 529, 533, 543, 547, 555, 559, 563, 567, 571, 575, 585, 591, 606, 611, 615, 629], "suffix": [59, 432], "_train": 59, "versu": [59, 172], "_infer": 59, "answer": 59, "backward_data": [59, 179, 215, 224, 510, 541, 557], "sens": [59, 194, 213, 263, 414], "backward_weight": [59, 179, 224], "solver": 59, "consider": [59, 414], "care": 59, "pooling_max": [59, 185, 251, 253, 254, 287, 289, 394, 398, 400, 471, 475, 583, 585], "slide": 59, "posit": [59, 60, 71, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 99, 104, 105, 106, 107, 108, 114, 115, 147, 177, 249, 329, 357, 390], "Of": [59, 586], "cours": [59, 177, 586], "again": [59, 164], "takeawai": 59, "former": [59, 63, 173, 177], "invoc": 59, "perspect": [59, 162, 177, 432], "varieti": 59, "emit": 59, "tri": 59, "bullet": 59, "9": [59, 60, 62, 190, 240, 259, 260, 274, 285, 298, 436, 438, 442, 444, 467, 473], "pick": [59, 288, 471, 473], "occasion": 59, "prepar": [59, 63, 175, 176, 252, 257, 263, 267, 286, 288, 396, 406, 414, 422, 469, 473, 493], "brain": 59, "workspace_desc": [59, 157, 246, 247, 253, 254, 280, 281, 282, 289, 294, 302, 384, 386, 398, 400, 456, 459, 461, 475, 485, 497, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "perfectli": 59, "inde": 59, "fwd": 59, "forward_primitive_desc": 59, "workspace_md": [59, 228], "primitive_forward": 59, "anywher": [59, 432], "els": [59, 104, 105, 175, 176, 250, 253, 254, 256, 257, 258, 259, 260, 263, 271, 274, 284, 285, 288, 294, 298, 299, 300, 392, 398, 400, 404, 406, 408, 414, 428, 432, 465, 467, 485, 493, 495], "bwd": 59, "primitive_backward": 59, "push": [60, 265, 266], "recent": [60, 159, 172], "focus": [60, 63, 155, 414], "shrink": [60, 63, 263, 414], "throughput": [60, 155, 172], "eight": 60, "offer": [60, 172], "cost": [60, 294, 473, 485], "dataset": [60, 396], "establish": 60, "q_": 60, "255": [60, 63, 229, 277, 450], "127": [60, 63, 162, 266, 420], "alpha_": 60, "lceil": [60, 163], "rceil": [60, 163], "w_": [60, 63, 163, 164], "mxcsr": 60, "roundnearesteven": 60, "approx": [60, 160], "approxim": [60, 95, 184, 304], "t_": 60, "15": [60, 63, 160, 177, 190, 261, 262, 284, 285, 410, 412, 465, 467], "12": [60, 160, 178, 190, 194, 246, 260, 279, 282, 384, 438, 454, 461], "96": [60, 225, 250, 251, 253, 254, 258, 259, 274, 277, 278, 288, 298, 392, 398, 400, 408, 450, 452, 473], "bigl": 60, "bigr": 60, "238": 60, "187": 60, "66": 60, "88": 60, "net": [60, 250, 251, 258, 265, 266, 294, 304, 392, 394, 396, 408, 418, 420, 485], "uniformli": 60, "d_0": 60, "g_0": 60, "o_1": 60, "i_2": 60, "h_3": 60, "w_4": 60, "walk": 60, "minibatch": [61, 155, 329], "flatten": 61, "dnnl_io": [61, 194], "dnnl_oi": [61, 194], "dnnl_oiw": [61, 194], "dnnl_oihw": [61, 194, 250, 258, 392, 408], "dnnl_oidhw": [61, 194], "onednn_jit_dump": 62, "dnnl_set_jit_dump": [62, 304, 341], "dnnl_dump_cpu_jit_avx2_conv_fwd_kernel_f32": 62, "bin": 62, "dnnl_dump_cpu_jit_avx_gemv_t_f32_kern": 62, "30": [62, 263, 266, 267, 284, 414, 420, 422, 465], "disassembl": 62, "objdump": 62, "mi386": 62, "xed": 62, "ir": 62, "emul": 62, "sde": 62, "dnnl_dump_gpu_gen_reord": 62, "dnnl_dump_gpu_gen_conv": 62, "iga64": 62, "assembli": 62, "emphas": 63, "signed": 63, "int8_t": [63, 263, 266, 277, 292, 303, 304, 314, 347, 372, 378, 414, 420, 450, 481, 499], "dnnl_gemm_u8s8s32": [63, 266, 304, 314], "averag": [63, 71, 157, 160, 184, 185, 331], "biggl": 63, "biggr": 63, "dnnl_gemm_s8s8s32": [63, 304, 314], "ideal": 63, "behind": [63, 177, 471], "xeon": [63, 186, 189, 458, 473], "e7": 63, "haswel": 63, "x1xx": 63, "skylak": 63, "vpmaddubsw": 63, "vpmaddwd": 63, "vpaddd": 63, "s16": 63, "int16_t": 63, "c_s32": [63, 263, 414], "a_u8": [63, 263, 277, 414, 450], "b_s8": [63, 263, 277, 303, 414, 450, 499], "u8s8s32_compute_avx512": 63, "ab_s16": 63, "vpmaddubsw_r": 63, "saturate_to_s16": 63, "caution": 63, "snippet": 63, "u8s8s32_comput": 63, "32767": 63, "int16_min": 63, "int16_max": 63, "64770": 63, "pitfal": [63, 177], "vpmovsxbw": 63, "vpmovzxbw": 63, "2x": 63, "u7": 63, "s7": 63, "63": [63, 160, 266, 311, 595], "worth": [63, 414, 432, 473], "behav": [63, 164, 358], "data_": 63, "set_rnn_data_qparam": [63, 266, 420, 595], "set_rnn_weights_qparam": [63, 266, 420, 595], "w_max": 63, "x2xx": 63, "cascad": 63, "bring": 63, "vpdpbusd": 63, "u8s8s32_compute_avx512_dl_boost": 63, "real": [63, 162, 177, 194, 263, 414, 436, 438, 440, 442, 444, 446, 465], "world": [63, 263, 414, 465], "overcom": 63, "emploi": 63, "y_": 63, "a_s8": 63, "u8s8": 63, "s8s8s32_comput": 63, "32258": 63, "solv": [63, 175, 176, 257, 406], "x_s8": 63, "precomput": [63, 67, 179, 265, 266, 311, 335, 396, 420, 595], "embed": [63, 418, 420], "rescal": 63, "insignificantli": 63, "noth": [63, 175, 176, 257, 406], "meaningless": 63, "ia": 63, "volum": [63, 147, 329], "2a": 63, "2b": 63, "2c": [63, 265, 266], "325383": 63, "070u": 63, "2019": [63, 253, 263, 267, 269, 270, 273, 275, 277, 287, 288, 299, 300, 398, 414, 422, 424, 450, 495], "319433": 63, "037": 63, "chapter": 63, "rodriguez": 63, "andr": 63, "et": 63, "al": 63, "white": 63, "paper": [63, 177], "2018": [63, 252, 265, 266, 294, 485], "axi": [64, 67, 77, 80, 81, 82, 84, 85, 86, 87, 89, 90, 97, 99, 104, 105, 106, 107, 110, 111, 123, 125, 126, 127, 128, 129, 130, 131, 139, 140, 148, 165, 166, 179, 203, 204, 228, 229, 255, 260, 295, 296, 304, 329, 342, 343, 402, 438, 487, 489, 598, 609, 611, 613, 615], "stat_desc": [64, 304, 326, 557, 559], "layer_normalization_forward": [64, 279, 326, 372, 454, 557, 593], "rmsnorm": 64, "dnnl_rms_norm": [64, 215, 216], "simplif": 64, "skip": [64, 160, 175, 176, 179, 257, 329, 349, 406, 440, 446, 579, 624], "rm": [64, 215, 216], "never": [64, 329, 341], "_ndim": 64, "_dim": [64, 67], "dnnl_tnc": [64, 164, 194], "dnnl_tn": [64, 194], "dnnl_nt": [64, 194], "dnnl_ldnc": [64, 164, 194], "unlik": [64, 89, 108, 134, 314, 347, 378, 442, 444, 539], "tnc": [64, 106, 107, 213, 246, 265, 266, 279, 280, 282, 294, 302, 384, 418, 420, 454, 456, 461, 485, 497], "dnnl_ntc": [64, 164, 194], "dnnl_bac": [64, 194, 213], "ldnc": [64, 106, 107, 213, 265, 266, 418, 420], "dnnl_type": [65, 177, 184, 188, 189, 193, 194, 216, 221, 223, 225, 227, 229, 231, 233, 235, 237, 238, 537], "auxiliari": [65, 178, 273, 294, 432, 485], "dnnl_config": 65, "dnnl_version": [65, 304, 341], "dnnl_graph_typ": [65, 197, 199, 204, 206, 208, 210, 538, 539], "dnnl_ukernel": [65, 175, 176, 245, 257, 406, 623, 624, 625], "dnnl_ukernel_typ": [65, 219], "libdnnl": [65, 160], "dnnl_library_typ": [65, 173], "dylib": 65, "bindnnl": 65, "dll": 65, "dnnlroot": 65, "ldnnl": 65, "resolv": [65, 266, 418], "dyld_library_path": 65, "rpath": 65, "appl": [65, 458], "secur": 65, "entitl": 65, "fly": [65, 432], "xcode": 65, "codesign": 65, "plist": 65, "xml": 65, "utf": 65, "doctyp": 65, "dtd": 65, "en": 65, "www": [65, 175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "propertylist": 65, "dict": 65, "eha": 65, "cl": [65, 160, 274, 275, 434, 442, 493], "microsoft": [65, 155, 173, 458], "msv": 65, "n_": 66, "j": [66, 89, 110, 139, 160, 170, 251, 265, 266, 286, 329, 394, 469, 581], "local_s": [66, 250, 253, 254, 258, 281, 304, 327, 392, 398, 400, 408, 459, 569, 571], "12d": [67, 194, 213], "bs_0": 67, "bs_1": 67, "rng": [67, 335], "dnnl_runtime_dim_v": [67, 179, 267, 277, 304, 329, 330, 335, 346, 376, 377, 422, 450, 593, 601], "wildcard": [67, 205, 308, 329, 362], "hand": [67, 177, 194, 213, 329], "situat": [67, 473], "inconsist": [67, 178, 179], "being": [67, 162, 164, 215, 216, 329, 336, 341, 434, 493, 581], "invalid": [67, 175, 176, 178, 179, 257, 333, 341, 356, 357, 406], "nd": [67, 121, 122, 177], "sake": [67, 177, 432], "mbox": [67, 158], "ax": [67, 104, 105, 112, 125, 126, 127, 128, 129, 130, 131, 158, 166, 179, 203, 204, 329, 581], "abc": [67, 213, 283, 329, 463, 581], "bac": [67, 213], "1x1x": 67, "x1": 67, "dnnl_arg_dropout_se": 67, "int_min": 67, "int_max": 67, "99": 67, "wtag": 67, "dtag": 67, "4x1000000": 67, "1000000x128": 67, "1000000": 67, "dt": [67, 178, 179, 284, 304, 465, 587], "3x512x1024": 67, "1x1024x512": 67, "encd": [67, 162], "matric": [67, 174, 175, 179, 263, 267, 277, 284, 286, 303, 314, 347, 378, 414, 422, 450, 465, 469, 499], "ge": [68, 91, 98, 108, 121], "diff": [69, 101, 175, 176, 228, 253, 254, 257, 258, 263, 267, 294, 312, 317, 319, 320, 323, 324, 326, 327, 331, 332, 335, 339, 340, 342, 343, 398, 400, 406, 408, 414, 422, 485, 506, 510, 519, 521, 525, 527, 531, 541, 545, 551, 553, 557, 561, 565, 569, 573, 583, 589, 598, 604, 607, 609, 613, 627], "_dst": [69, 101], "auto_broadcast": [70, 88, 98, 113, 116, 119, 136, 146, 149, 203, 204], "numpi": [70, 88, 98, 113, 116, 119, 136, 146, 149, 203, 204, 329], "denom": [71, 157], "move": [71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 177, 264, 416, 418, 420, 426, 535, 548, 579, 593, 617], "s64": [71, 72, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 97, 99, 104, 105, 106, 107, 110, 111, 114, 115, 123, 125, 126, 127, 128, 129, 130, 131, 139, 140, 147, 148], "pads_begin": [71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 203, 204, 259, 260, 274, 298, 436, 438, 442, 444], "auto_pad": [71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 203, 204], "same_upp": [71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 203, 204], "same_low": [71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 203, 204], "pads_end": [71, 72, 81, 82, 83, 84, 85, 86, 114, 115, 203, 204, 259, 260, 274, 298, 436, 438, 442, 444], "floor": [71, 82, 114, 203, 204], "data_format": [71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 99, 104, 105, 114, 115, 121, 122, 178, 203, 204, 259, 260, 274, 298, 436, 438, 442, 444, 539], "ncx": [71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 99, 104, 105, 114, 115, 121, 122, 203, 204, 259, 274, 298, 436, 442, 444], "nxc": [71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 99, 104, 105, 114, 115, 121, 122, 203, 204, 260, 438, 539], "srcshape": 72, "src_shape": [72, 104, 105, 203], "epsilon": [73, 74, 75, 99, 106, 107, 203, 204, 228, 229, 267, 279, 304, 312, 323, 326, 422, 454, 510, 512, 541, 543, 557, 559, 598, 600], "momentum": [73, 203, 204], "neither": [73, 75, 326, 426, 432, 434, 493, 557, 559], "running_mean": 73, "running_vari": 73, "batch_mean": 73, "batch_vari": 73, "diff_gamma": [75, 107], "diff_beta": [75, 107], "_valu": 78, "clamp": [79, 205, 306, 308], "use_dst": [79, 92, 133, 138, 144, 151, 203, 204], "rank": [80, 87, 89, 90, 97, 106, 107, 112, 123, 125, 126, 127, 128, 129, 130, 131], "weights_format": [81, 82, 83, 84, 85, 86, 203, 204, 259, 260, 274, 298, 436, 438, 442, 444], "oix": [81, 82, 83, 84, 85, 86, 203, 204, 259, 274, 298, 436, 442, 444], "fist": 81, "stretch": [81, 82, 83, 84, 85, 86], "xio": [81, 82, 83, 84, 85, 86, 203, 204, 260, 438], "_channel": [81, 82, 83, 84, 85, 86], "_shape": [81, 82, 83, 84, 85, 86, 122], "firstli": [82, 112], "_pad": 82, "_h": 82, "_padding_h": 82, "output_pad": [82, 84, 85, 86, 203, 204], "dst_shape": [82, 104, 105, 136, 203, 204], "weights_shap": [83, 86, 203], "iox": [84, 85, 86, 203, 204], "xoi": [84, 85, 86, 203, 204], "zps_i": [87, 89, 90], "scale_i": [87, 123], "qtype": [87, 89, 90, 123, 203, 204, 260, 438], "per_channel": [87, 89, 90, 121, 123, 203, 204, 260, 438], "scales_i": [89, 90], "channelnum": [89, 90, 125, 126, 127, 128, 129, 130, 131], "gx1": 89, "groupnum": 89, "zps_j": 89, "scales_j": 89, "groupsiz": 89, "gropup": 89, "src_dim": [89, 246, 247, 249, 255, 256, 264, 271, 272, 276, 278, 279, 280, 281, 282, 283, 289, 290, 291, 292, 293, 295, 296, 297, 302, 384, 386, 390, 402, 404, 416, 428, 430, 448, 452, 454, 456, 459, 461, 463, 475, 477, 479, 481, 483, 487, 489, 491, 497], "group_siz": [89, 165, 295, 304, 342, 487, 609, 611], "exponenti": [94, 184, 185], "sqrt2": 95, "y": 99, "coeffici": [99, 108], "keep_stat": [99, 106, 203, 204], "use_affin": [99, 106, 107, 203, 204], "modul": [99, 106, 107, 160], "1e": [99, 106, 107, 263, 284, 285, 286, 414, 465, 467, 469], "span": [99, 106, 107], "_src": 101, "bilinear": [104, 105, 185, 203, 204, 339], "trilinear": [104, 105, 163, 185, 203, 204, 339], "coordin": [104, 105, 167, 214, 238], "resiz": [104, 105, 264, 285, 416, 467], "align_corn": [104, 105, 203, 204], "x_resiz": [104, 105], "differenti": [104, 156, 173, 364], "begin_norm_axi": [106, 107, 203, 204], "small": [108, 155, 174, 175, 179, 473], "leakag": 108, "logarithm": [109, 184, 185], "formul": [110, 141, 142, 432], "dst_i": [110, 139, 146], "big": 110, "src_j": [110, 139], "logsoftmax": [111, 166, 184, 185, 205, 308], "unsqueez": 112, "transpose_a": [112, 203, 204, 268, 301, 440, 446], "transpose_b": [112, 203, 204, 268, 301, 440, 446], "_0": [113, 116], "distanc": [114, 115], "avgpoolbackward": [115, 205, 308], "softplu": [117, 142, 205, 306, 308], "ln": [117, 141, 166], "diff_": [118, 164], "3src": 118, "2src": 118, "parametr": 121, "per_channel_broadcast": [121, 203, 204], "uni": [121, 122, 178, 265, 266, 471, 473], "direction": [121, 122], "rightmost": [121, 294, 485], "shape_i": 121, "_forward": 122, "diff_slop": 122, "zp_i": 123, "infin": [124, 139, 284, 465], "l1": [125, 160], "norm": [125, 126, 161, 184, 215, 216, 263, 267, 306, 414, 422], "keep_dim": [125, 126, 127, 128, 129, 130, 131, 203, 204], "shapeof": [125, 126, 127, 128, 129, 130, 131], "l2": [126, 160, 263, 414], "root": [126, 143, 161, 184, 185, 215, 216], "prod": [130, 250, 258, 311, 392, 408, 595], "cond": 136, "invalid_shap": [136, 209], "request": [139, 166, 175, 176, 209, 239, 240, 257, 321, 329, 335, 336, 363, 377, 406, 598], "inf_as_zero": [139, 203, 204], "_0_i": 146, "_1_i": 146, "special_zero": [147, 203, 204], "keep": [147, 172, 174, 177, 202, 210, 229, 253, 254, 258, 294, 394, 398, 400, 408, 473, 485], "overal": [147, 177, 473], "permut": [148, 194, 213, 304, 329, 581], "dnnl_ocl": [154, 217, 274, 275, 434, 442], "cl_mem": [154, 275, 304, 329, 330, 376, 432, 434, 579], "get_command_queu": [154, 275, 376, 434], "get_mem_object": [154, 275, 376, 434], "retain": 154, "destruct": [154, 581, 587, 595], "affinit": 155, "tbb": [155, 160], "intention": 155, "nor": [155, 326, 426, 432, 434, 493, 557, 559], "principl": 155, "numactl": 155, "easi": 155, "modern": 155, "socket": [155, 473], "chip": 155, "tile": 155, "cluster": 155, "setup": [155, 160], "among": [155, 160, 362], "orient": 155, "latenc": [155, 160], "server": 155, "interleav": [155, 174], "chanc": 155, "traffic": 155, "omp_proc_bind": 155, "spread": 155, "omp_plac": 155, "omp_num_thread": [155, 473], "membind": 155, "cpunodebind": 155, "physcpubind": 155, "kmp_hw_subset": 155, "1t": 155, "costli": 156, "mitig": [156, 159, 266], "blob": [156, 228, 229, 304, 329, 330, 335, 363, 374, 376, 505, 507, 509, 511, 513, 516, 518, 520, 522, 524, 526, 528, 530, 532, 540, 542, 544, 546, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 581, 582, 584, 588, 590, 593, 598, 599, 601, 603, 605, 608, 610, 612, 614, 618, 626, 628], "content": [156, 167, 329, 579, 581], "commit": [156, 178, 341], "hash": [156, 178, 341, 471, 630], "dnnl_version_t": [156, 304, 341, 372], "packag": [156, 173], "fetch": 156, "primitive_desc_bas": [156, 335, 372, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_cache_blob_id": [156, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_cache_blob": [156, 505, 507, 509, 511, 513, 516, 518, 520, 522, 524, 526, 528, 530, 532, 540, 542, 544, 546, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 582, 584, 588, 590, 593, 599, 601, 603, 605, 608, 610, 612, 614, 618, 626, 628], "cache_miss": [156, 178], "cache_hit": [156, 178], "persistent_cache_hit": [156, 178], "namespac": [156, 167, 173, 175, 176, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 330, 346, 347, 348, 353, 363, 367, 383, 384, 386, 388, 390, 398, 400, 402, 404, 406, 410, 412, 414, 416, 422, 426, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499], "store_cache_blob_on_disk": 156, "load_cache_blob_from_disk": 156, "conv_from_cache_blob": 156, "get_engine_cache_blob_id": [156, 376], "get_engine_cache_blob": [156, 376], "ocl_engin": 156, "get_blob": [156, 581], "deseri": 156, "dnnl_pooling_avg_include_pad": [157, 184, 185, 331], "dnnl_pooling_avg_exclude_pad": [157, 184, 185, 331], "todo": [157, 265, 418], "pictur": [157, 177], "nice": 157, "restor": 157, "itself": [157, 335, 432, 597, 617], "dnnl_pooling_max": [157, 184, 185, 250, 258, 331, 392, 408], "flt_max": 157, "dbl_max": 157, "area": [157, 178, 329, 581], "leaki": [158, 332], "trainabl": [158, 332], "Its": 158, "weights_md": [158, 228, 250, 283, 284, 290, 392, 463, 465, 477, 598], "repeat": [159, 471], "capac": [159, 304, 333, 356, 357, 372, 373], "exceed": [159, 179, 284, 465], "evict": [159, 333, 356], "hit": 159, "profile_cr": [159, 178], "onednn_primitive_cache_capac": 159, "dnnl_set_primitive_cache_capac": [159, 304, 333], "notifi": 160, "address": [160, 174, 177, 294, 363, 485], "tm": [160, 383], "onednn_jit_profil": 160, "tsc": [160, 341], "dnnl_set_jit_profiling_flag": [160, 304, 341], "box": 160, "overrid": [160, 170, 341, 358], "dnnl_set_jit_profiling_jitdumpdir": [160, 304, 341], "timelin": 160, "chart": 160, "fp": [160, 311, 322, 341], "onednn_itt_task_level": 160, "trigger": [160, 473], "master": [160, 172], "amplx": 160, "knob": 160, "shapes_alexnet": 160, "nmi": 160, "watchdog": 160, "timer": 160, "impl": [160, 170, 179], "prb": 160, "gop": [160, 467], "gfreq": 160, "gflop": [160, 467], "0time": 160, "0gflop": 160, "avx512_common": [160, 473], "conv1": [160, 251, 259, 274, 298, 392, 394, 436, 442, 444], "g1mb256ic3ih227oc96oh55kh11sh4ph0n": 160, "53": 160, "9726": 160, "4285": 160, "3096": 160, "81": 160, "22": 160, "5851": 160, "2389": 160, "74": 160, "conv2": [160, 251, 392, 394], "g2mb256ic96ih27oc256oh27kh5ph2n": 160, "104": 160, "696": 160, "2195": 160, "5177": 160, "98": 160, "21": [160, 473], "9233": 160, "4775": 160, "56": [160, 260], "mb256ic256ih13oc384oh13kh3ph1n": 160, "68": 160, "904": 160, "5134": 160, "4441": 160, "57": [160, 465], "18": [160, 178, 473], "1391": 160, "3798": 160, "conv4": [160, 251], "g2mb256ic384ih13oc384oh13kh3ph1n": 160, "51": 160, "678": 160, "7397": 160, "4401": 160, "97": [160, 178], "4623": 160, "4146": 160, "76": 160, "conv5": [160, 251], "g2mb256ic384ih13oc256oh13kh3ph1n": 160, "34": 160, "452": 160, "77148": 160, "4433": 160, "13": [160, 190, 194, 251, 252, 256, 271, 273, 396, 404, 428, 432], "50435": 160, "4051": 160, "mistrust": 160, "72": [160, 295, 487], "6726": 160, "avg": 160, "83": 160, "6142": 160, "10": [160, 172, 190, 240, 246, 247, 248, 249, 250, 255, 256, 258, 259, 260, 263, 264, 265, 266, 267, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 295, 296, 297, 298, 302, 304, 384, 386, 388, 390, 392, 402, 404, 408, 414, 416, 422, 428, 430, 432, 436, 438, 442, 444, 448, 452, 454, 456, 459, 461, 463, 465, 475, 477, 479, 481, 483, 487, 489, 491, 497], "csv": 160, "_jit_avx512_common_conv_fwd_kernel": 160, "300": 160, "128503": 160, "293": 160, "946143": 160, "285": 160, "549830": 160, "268": 160, "868599": 160, "715527": 160, "libgomp": 160, "func": [160, 253, 254, 258, 398, 400, 408], "0x194f0": 160, "186": 160, "604226": 160, "0x19370": 160, "82": 160, "609694": 160, "jit_avx512_co": 160, "35": 160, "682241": 160, "vmlinux": 160, "763433": 160, "1451": 160, "459338": 160, "outsid": [160, 347, 444, 446], "280": 160, "489764": 160, "434821": 160, "interv": 160, "2000": 160, "ue": 160, "2344": 160, "3131": 160, "24": [160, 177], "1246": 160, "2237": 160, "2988": 160, "5157": 160, "6731": 160, "4617": 160, "5369": 160, "4434": 160, "87": 160, "1371": 160, "4020": 160, "75": [160, 250, 251, 253, 254, 258, 284, 392, 398, 400, 408, 465], "428": 160, "4522": 160, "06": 160, "7986": 160, "4037": 160, "79": 160, "64233": 160, "4508": 160, "05": 160, "99841": 160, "3828": 160, "1404": 160, "85": 160, "7318": 160, "dtlb": 160, "lock": 160, "4k": 160, "fb": 160, "26": [160, 246, 282, 384, 461], "icach": 160, "micro": [160, 174], "itlb": 160, "bad": [160, 179], "specul": 160, "l3": 160, "dram": 160, "frequenc": 160, "clocktick": 160, "retir": 160, "cpi": 160, "rate": [160, 178], "x87": 160, "microcod": 160, "assist": 160, "jitdump": [160, 341], "perfmap": [160, 341], "jitdumpdir": [160, 341], "record": [160, 259, 260, 274, 298], "k1": [160, 251], "mb1ic32ih14oc32oh14kh3ph1n": 160, "resnet_50": 160, "res4a_branch2b": 160, "mb1ic32ih14oc32oh14kh3ph1nresnet_50": 160, "0032768": 160, "0131836": 160, "248": 160, "551": 160, "0262988": 160, "124": [160, 162], "599": 160, "woken": 160, "captur": [160, 536], "wrote": 160, "884": 160, "23102": 160, "inject": 160, "stdio": [160, 250, 258, 269, 392, 408, 424], "n20": 160, "lost": 160, "23k": 160, "uhh": 160, "5775500000": 160, "symbol": [160, 173], "39": 160, "33": 160, "0x000000000001d8ba": 160, "29": 160, "41": [160, 473], "31475": 160, "jit_avx2_conv_fwd_kernel_f32": 160, "49": 160, "0x000000000001d712": 160, "47": 160, "jit_avx2_convolution_fwd_t": 160, "execute_forward": 160, "exec_ctx_t": 160, "lambda": 160, "52": 160, "0x000000000001d8be": 160, "93": 160, "0x000000000001d716": 160, "0x000000000001d8c5": 160, "55": [160, 250, 251, 253, 254, 258, 288, 392, 398, 400, 408, 473], "0x000000000001d8c3": 160, "46": 160, "0x000000000001d71d": 160, "resolut": 160, "annot": [160, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 418, 420], "disassembli": 160, "brendan": 160, "gregg": 160, "excel": 160, "mathop": 161, "mul": [161, 184, 185, 337], "idl": 161, "ep": [161, 304, 337, 600], "kept": [162, 177, 194, 335, 597], "dnnl_arg_from": [162, 250, 251, 252, 253, 254, 258, 266, 269, 287, 304, 335, 392, 394, 396, 398, 400, 408, 420, 424, 471], "dnnl_arg_to": [162, 250, 251, 252, 253, 254, 258, 266, 269, 287, 304, 335, 392, 394, 396, 398, 400, 408, 420, 424, 471], "encount": [162, 178, 179, 394], "bug": [162, 207, 208], "team": 162, "dnnl_s8": [162, 190, 200, 211], "allevi": [162, 267, 422], "dt_src": 162, "memory_format": 162, "fmt_src": 162, "dt_dst": 162, "fmt_dst": 162, "zero_point": [162, 304, 311, 587, 595], "upsampl": [163, 289, 306, 475], "downsampl": 163, "f_h": 163, "f_w": 163, "ih_0": 163, "iw_0": 163, "ih_1": 163, "iw_1": 163, "nchw16c": [163, 177, 213], "_spatial": 163, "_size": 163, "unrol": 164, "srciter": 164, "dstiter": 164, "evalu": 164, "left2right": 164, "increas": [164, 172, 473], "right2left": 164, "decreas": [164, 166, 473], "bidirectional_concat": [164, 230, 265, 266, 418, 420], "dstlayer": 164, "bidirectional_sum": [164, 230], "srclayer": 164, "h_": [164, 184, 185], "And": [164, 177, 329, 581], "vanilla_rnn_forward": [164, 302, 340, 372, 497, 593, 595, 627], "vanilla_rnn_backward": [164, 340, 372, 593], "vanilla_rnn_pd": [164, 302, 497], "aprop": 164, "src_layer_desc": [164, 266, 294, 304, 340, 420, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "src_iter_desc": [164, 246, 280, 282, 294, 302, 304, 340, 384, 456, 461, 485, 497, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "weights_layer_desc": [164, 265, 266, 294, 304, 340, 418, 420, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "weights_iter_desc": [164, 246, 265, 266, 280, 282, 294, 302, 304, 340, 384, 418, 456, 461, 485, 497, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "bias_desc": [164, 252, 253, 294, 304, 317, 319, 324, 328, 340, 396, 398, 485, 506, 508, 523, 529, 545, 547, 555, 561, 563, 565, 567, 573, 575, 577, 607, 627, 629], "dst_layer_desc": [164, 265, 266, 294, 304, 340, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "dst_iter_desc": [164, 246, 280, 282, 294, 302, 304, 340, 384, 456, 461, 485, 497, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "a_t": [164, 266], "h_t": 164, "lstm_forward": [164, 265, 266, 282, 294, 340, 372, 418, 420, 461, 485, 573, 593], "lstm_backward": [164, 294, 340, 372, 485, 593], "lstm_pd": [164, 282, 461], "src_iter_h_desc": 164, "src_iter_c_desc": [164, 282, 294, 304, 340, 461, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "dst_iter_h_desc": 164, "dst_iter_c_desc": [164, 282, 294, 304, 340, 461, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "i_t": 164, "w_i": 164, "u_i": 164, "b_i": [164, 175], "f_t": 164, "w_f": 164, "u_f": 164, "b_f": 164, "c_t": [164, 184, 185], "u_": 164, "b_": [164, 184, 185], "o_t": 164, "w_o": 164, "u_o": 164, "b_o": 164, "weightslay": 164, "weightsit": 164, "srciterc": 164, "dstiterc": 164, "weights_peephole_desc": [164, 304, 340, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "p_i": 164, "p_f": 164, "p_o": 164, "p_": 164, "weights_peephol": 164, "weights_projection_desc": [164, 304, 340, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "weights_project": 164, "gru_forward": [164, 340, 372, 545, 593], "gru_backward": [164, 340, 372, 593], "gru_pd": 164, "u_t": 164, "w_u": 164, "u_u": 164, "b_u": 164, "r_t": [164, 184, 185], "w_r": 164, "u_r": 164, "b_r": 164, "lbr_gru_forward": [164, 280, 340, 372, 456, 565, 593], "lbr_gru_backward": [164, 340, 372, 593], "lbr_gru_pd": [164, 280, 456], "rsquo": 164, "augru_forward": [164, 246, 340, 372, 384, 506, 593], "augru_backward": [164, 340, 372, 593], "augru_pd": [164, 246, 384], "attention_desc": [164, 304, 340, 506, 508, 561, 563, 607], "lbr_augru_forward": [164, 340, 372, 561, 593], "lbr_augru_backward": [164, 340, 372, 593], "lbr_augru_pd": 164, "diffweightslay": 164, "diffweightsit": 164, "diffweightspeephol": 164, "diffweightsproject": 164, "diff_weights_overwrit": [164, 232], "dnnl_arg_src_lay": [164, 246, 265, 266, 280, 282, 294, 302, 304, 335, 384, 418, 420, 456, 461, 485, 497], "srclayerattent": 164, "dnnl_arg_src_layer_attent": 164, "dnnl_arg_src_it": [164, 246, 265, 266, 280, 282, 294, 302, 304, 335, 384, 418, 456, 461, 485, 497], "dnnl_arg_src_iter_c": [164, 265, 266, 282, 294, 304, 335, 418, 461, 485], "dnnl_arg_weights_lay": [164, 246, 265, 266, 280, 282, 294, 302, 304, 335, 384, 418, 420, 456, 461, 485, 497], "dnnl_arg_weights_it": [164, 246, 265, 266, 280, 282, 294, 302, 304, 335, 384, 418, 420, 456, 461, 485, 497], "weightspeephol": 164, "dnnl_arg_weights_peephol": [164, 304, 335], "weightsproject": 164, "dnnl_arg_weights_project": [164, 304, 335], "dnnl_arg_dst_lay": [164, 246, 265, 266, 280, 282, 294, 302, 304, 335, 384, 418, 420, 456, 461, 485, 497], "dnnl_arg_dst_it": [164, 246, 265, 266, 280, 282, 294, 302, 304, 335, 384, 418, 456, 461, 485, 497], "dnnl_arg_dst_iter_c": [164, 265, 266, 282, 294, 304, 335, 418, 461, 485], "dnnl_workspac": 164, "diffsrclay": 164, "dnnl_arg_diff_src_lay": [164, 294, 304, 335, 485], "diffsrclayerattent": 164, "dnnl_arg_diff_src_layer_attent": 164, "diffsrcit": 164, "dnnl_arg_diff_src_it": [164, 294, 304, 335, 485], "diffsrciterc": 164, "dnnl_arg_diff_src_iter_c": [164, 294, 304, 335, 485], "dnnl_arg_diff_weights_lay": [164, 294, 304, 335, 485], "dnnl_arg_diff_weights_it": [164, 294, 304, 335, 485], "dnnl_arg_diff_weights_peephol": [164, 304, 335], "dnnl_arg_diff_weights_project": [164, 304, 335], "diffdstlay": 164, "dnnl_arg_diff_dst_lay": [164, 294, 304, 335, 485], "diffdstit": 164, "dnnl_arg_diff_dst_it": [164, 294, 304, 335, 485], "diffdstiterc": 164, "dnnl_arg_diff_dst_iter_c": [164, 294, 304, 335, 485], "With": [164, 172, 493], "dnnl_ldgo": [164, 194], "dnnl_ldigo": [164, 194], "dnnl_ldio": [164, 194], "dnnl_ldgoi": [164, 194], "dnnl_ldoi": [164, 194], "markdown": 164, "thought": 165, "formal": 165, "ug": 165, "nu": 166, "minor": [166, 341, 630], "piec": [166, 329, 335], "ulp": 166, "enumer": [167, 598], "sparse_encod": [167, 228, 579, 581], "member": [167, 228], "unspecifi": [167, 178, 191, 192, 226, 227, 329, 581], "pseudocod": 167, "nnz": [167, 261, 262, 264, 304, 329, 410, 412, 416, 581], "values_dt": 167, "indices_dt": [167, 304, 329], "pointers_dt": [167, 304, 329], "csr_md": 167, "csr_valu": 167, "5f": [167, 249, 261, 262, 266, 277, 390, 410, 412, 420, 450], "csr_indic": 167, "csr_pointer": 167, "csr_mem": 167, "values_sz": 167, "indices_sz": 167, "pointers_sz": 167, "values_handl": 167, "indices_handl": 167, "pointers_handl": 167, "coo_md": 167, "coo_valu": 167, "coo_row_indic": 167, "coo_col_indic": 167, "coo_mem": 167, "row_indices_handl": 167, "col_indices_handl": 167, "bigger": [168, 177], "broad": 169, "dnnl_threadpool_ifac": [170, 620], "test_thread": 170, "threadpool_t": 170, "threadpool_interop": [170, 304, 309, 347, 372], "threadpool_ifac": [170, 378], "nonblockingthreadpool": 170, "unique_ptr": 170, "tp_": 170, "num_thread": 170, "hardware_concurr": 170, "get_num_thread": [170, 620], "numthread": 170, "get_in_parallel": [170, 620], "currentthreadid": 170, "get_flag": [170, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 620, 627, 629], "asynchron": [170, 426, 434, 471, 493, 620], "parallel_for": [170, 299, 300, 493, 495, 620], "fn": [170, 620], "nthr": [170, 178], "njob": 170, "schedul": 170, "balance211": 170, "new_content_goes_her": 171, "idea": [172, 177, 414], "spot": 172, "trade": 172, "site": [172, 536], "themselv": [172, 177, 259, 260, 268, 274, 298, 301, 432, 436, 438, 440, 442, 444, 446, 539], "afterward": 172, "incompat": [173, 179], "migrat": [173, 236, 237], "mkldnn": 173, "substr": [173, 179], "renam": 173, "macro": [173, 304], "v1": [173, 178, 263, 267, 414, 422], "mkldnn_memory_desc_t": 173, "md": [173, 177, 179, 432, 473, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "mkldnn_block": 173, "exec": [173, 178, 275, 299, 471, 473], "mkldnn_args_src": 173, "dnnl_block": [173, 193, 212, 329, 581], "dnnl_args_src": 173, "mkldnn_dnnl_mangl": 173, "preprocessor": 173, "mkldnn_memory_desc_init_by_tag": 173, "dnnl_memory_desc_init_by_tag": 173, "mkldnn_arch_opt_flag": 173, "dnnl_arch_opt_flag": 173, "mkldnn_build_exampl": 173, "dnnl_build_exampl": 173, "mkldnn_build_for_ci": 173, "dnnl_build_for_ci": 173, "mkldnn_build_test": 173, "dnnl_build_test": 173, "mkldnn_cpu_runtim": 173, "dnnl_cpu_runtim": 173, "mkldnn_enable_concurrent_exec": 173, "dnnl_enable_concurrent_exec": [173, 236, 237], "mkldnn_enable_jit_profil": 173, "dnnl_enable_jit_profil": 173, "mkldnn_gpu_backend": 173, "dnnl_gpu_backend": 173, "mkldnn_gpu_runtim": 173, "mkldnn_install_mod": 173, "dnnl_install_mod": 173, "mkldnn_library_typ": 173, "mkldnn_thread": 173, "dnnl_thread": 173, "mkldnn_use_clang_sanit": 173, "dnnl_use_clang_sanit": 173, "mkldnn_verbos": 173, "dnnl_verbos": 173, "mkldnn_werror": 173, "dnnl_werror": 173, "find_packag": 173, "target_link_librari": 173, "project_app": 173, "Or": 173, "inclus": 173, "add_subdirectori": 173, "dnnl_dir": 173, "include_directori": 173, "thing": [173, 432, 471], "recompil": 173, "patch": [173, 341, 630], "fit": [174, 179, 284, 285, 294, 465, 467, 485], "region": [174, 329, 581], "consecut": [174, 329, 581], "granular": [174, 473], "fundament": 174, "freez": 174, "hoist": 174, "loop": [174, 175, 176, 257, 406], "a_i": [175, 266], "_arg": 175, "shall": 175, "express": [175, 176, 178, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 436, 442, 444, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "pack_typ": [175, 176, 257, 304, 349, 351, 379, 406, 624, 625], "get_b_pack_typ": [175, 176, 257, 406, 624], "no_tran": [175, 176, 245, 257, 406, 625], "copyright": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "2024": [175, 176, 257, 261, 268, 271, 274, 280, 301, 302, 406, 410, 428, 456, 497], "2025": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "corpor": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 458, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "licens": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "apach": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "law": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "agre": [175, 176, 229, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "AS": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "basi": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "warranti": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "OF": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "permiss": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 448, 450, 452, 454, 456, 458, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497, 499], "cmath": [175, 176, 246, 247, 248, 249, 253, 255, 256, 257, 261, 262, 263, 264, 267, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 295, 296, 297, 302, 303, 384, 386, 388, 390, 398, 402, 404, 406, 410, 412, 414, 416, 422, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 487, 489, 491, 497, 499], "iostream": [175, 176, 246, 247, 248, 249, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 398, 402, 404, 406, 410, 412, 414, 416, 422, 428, 430, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 481, 483, 487, 489, 491, 493, 495, 497, 499], "example_util": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 424, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499], "brgemm_exampl": [175, 176, 257, 304, 406], "engine_stream": [175, 176, 246, 247, 248, 249, 255, 256, 257, 264, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 285, 289, 290, 291, 292, 293, 295, 296, 297, 302, 384, 386, 388, 390, 402, 404, 406, 416, 428, 430, 432, 448, 452, 454, 456, 459, 461, 463, 467, 475, 477, 479, 481, 483, 487, 489, 491, 497], "k_blk": [175, 176, 257, 406], "48": [175, 176, 251, 257, 406], "printf": [175, 176, 250, 257, 258, 263, 267, 269, 392, 406, 408, 414, 422, 424], "n_call": [175, 176, 257, 406], "a_dt": [175, 176, 257, 304, 349, 406, 624], "b_dt": [175, 176, 257, 304, 349, 406, 624], "c_dt": [175, 176, 257, 304, 349, 406, 624], "d_dt": [175, 176, 257, 304, 349, 406, 624], "no_pack": [175, 176, 257, 406], "ldb": [175, 176, 257, 267, 304, 314, 347, 349, 372, 378, 406, 422, 624], "need_pack": [175, 176, 257, 406], "lda": [175, 176, 257, 267, 304, 314, 347, 349, 372, 378, 406, 422, 624], "n_block": [175, 176, 257, 406], "ldc": [175, 176, 257, 267, 304, 314, 347, 349, 372, 378, 406, 422, 624], "ldd": [175, 176, 257, 304, 349, 406, 624], "batch_siz": [175, 176, 257, 304, 349, 406, 624], "a_dim": [175, 176, 257, 285, 286, 406, 467, 469], "b_dim": [175, 176, 257, 285, 286, 406, 467, 469], "c_dim": [175, 176, 257, 285, 286, 406, 467, 469], "d_dim": [175, 176, 257, 406], "binary_add_dim": [175, 176, 257, 406], "b_scales_dim": [175, 176, 257, 406], "a_user_data": [175, 176, 257, 406], "b_user_data": [175, 176, 257, 406], "binary_add_user_data": [175, 176, 257, 406], "b_scales_user_data": [175, 176, 257, 406], "d_data": [175, 176, 257, 406], "d_user_data": [175, 176, 257, 406], "sign_gen": [175, 176, 257, 406], "val": [175, 176, 257, 406], "holder": [175, 176, 257, 406], "a_f32_md": [175, 176, 257, 406], "b_f32_md": [175, 176, 257, 406], "binary_add_f32_md": [175, 176, 257, 406], "b_scales_f32_md": [175, 176, 257, 406], "d_f32_md": [175, 176, 257, 406], "a_f32_mem": [175, 176, 257, 303, 304, 406, 499], "b_f32_mem": [175, 176, 257, 277, 303, 406, 450, 499], "binary_add_f32_mem": [175, 176, 257, 406], "b_scales_f32_mem": [175, 176, 257, 406], "d_f32_mem": [175, 176, 257, 406], "a_md": [175, 176, 257, 263, 267, 277, 285, 303, 406, 414, 422, 450, 467, 499], "b_md": [175, 176, 257, 263, 267, 277, 285, 303, 406, 414, 422, 450, 467, 499], "binary_add_md": [175, 176, 257, 406], "b_scales_md": [175, 176, 257, 406], "c_md": [175, 176, 257, 263, 267, 277, 285, 303, 406, 414, 422, 450, 467, 499], "d_md": [175, 176, 257, 406], "a_mem": [175, 176, 257, 285, 286, 406, 467, 469], "b_mem": [175, 176, 257, 285, 286, 406, 467, 469], "binary_add_mem": [175, 176, 257, 406], "b_scales_mem": [175, 176, 257, 406], "c_mem": [175, 176, 257, 285, 286, 304, 406, 467, 469], "d_mem": [175, 176, 257, 406], "a_ptr": [175, 176, 257, 304, 349, 406], "reinterpret_cast": [175, 176, 257, 406], "b_ptr": [175, 176, 257, 304, 349, 406], "a_dt_siz": [175, 176, 257, 406], "data_type_s": [175, 176, 257, 406, 579], "b_dt_size": [175, 176, 257, 406], "set_add_c": [175, 176, 257, 406, 624], "c_ptr": [175, 176, 257, 304, 349, 406], "brgemm_op": [175, 176, 257, 406], "brg": [175, 176, 178, 257, 406], "minu": [175, 176, 257, 406], "brg_po": [175, 176, 257, 406], "allow_empti": [175, 176, 257, 406, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "lack": [175, 176, 257, 406], "var": [175, 176, 257, 406], "ok": [175, 176, 257, 263, 267, 406, 414, 422], "set_b_scal": [175, 176, 257, 406, 623, 624], "servic": [175, 176, 257, 309, 315, 406], "scratchpad_s": [175, 176, 257, 406], "get_scratchpad_s": [175, 176, 257, 406, 624], "b_block": [175, 176, 257, 406], "b_base_ptr": [175, 176, 257, 406], "blocked_b_s": [175, 176, 257, 406], "vnni": [175, 176, 257, 406], "bfloat16_t": [175, 176, 257, 406], "incorpor": [175, 176, 257, 406, 473], "pack_b": [175, 176, 257, 406], "in_pack_typ": [175, 176, 257, 304, 350, 406, 625], "in_ld": [175, 176, 257, 304, 350, 406, 625], "out_ld": [175, 176, 257, 304, 350, 406, 625], "in_dt": [175, 176, 257, 304, 350, 406, 625], "out_dt": [175, 176, 257, 304, 350, 406, 625], "a_b_offset": [175, 176, 257, 304, 349, 406, 624], "a_offset_i": [175, 176, 257, 406], "b_offset_i": [175, 176, 257, 406], "make_pair": [175, 176, 257, 406], "set_hw_context": [175, 176, 257, 406, 624], "a_b_po_offset": [175, 176, 257, 406], "a_offset_po": [175, 176, 257, 406], "b_offset_po": [175, 176, 257, 406], "emplace_back": [175, 176, 255, 257, 297, 402, 406, 491], "put": [175, 176, 253, 254, 257, 330, 376, 398, 400, 406], "sit": [175, 176, 257, 406], "bin_po_ptr": [175, 176, 257, 406], "push_back": [175, 176, 251, 253, 254, 257, 265, 266, 394, 398, 400, 406, 418, 420], "attr_param": [175, 176, 257, 304, 348, 349, 351, 379, 406, 548, 624], "set_post_ops_arg": [175, 176, 257, 406, 623], "is_execute_postops_valid": [175, 176, 257, 406, 624], "release_hw_context": [175, 176, 257, 406, 624], "clean": [175, 176, 250, 257, 258, 269, 392, 406, 408, 424, 473], "delet": [175, 176, 257, 406, 548], "verif": [175, 176, 257, 286, 406, 469], "uncondit": [175, 176, 257, 406], "user_d_mem": [175, 176, 257, 406], "saniti": [175, 176, 257, 273, 277, 406, 432, 450], "pop": [175, 176, 257, 406], "to_throw": [175, 176, 257, 406], "fabsf": [175, 176, 257, 406], "19e": [175, 176, 257, 406], "12g": [175, 176, 257, 406], "runtime_error": [175, 176, 209, 239, 257, 261, 262, 284, 286, 341, 406, 410, 412, 465, 469], "argc": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 428, 430, 432, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499], "char": [175, 176, 229, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 314, 341, 347, 364, 372, 378, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 536, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629, 630, 631], "argv": [175, 176, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 384, 386, 388, 390, 392, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 422, 428, 430, 432, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499], "handle_example_error": [175, 176, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 384, 386, 388, 390, 398, 400, 402, 404, 406, 410, 412, 414, 416, 422, 428, 430, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 497, 499], "pack32": [176, 245], "analyz": 177, "facilit": 177, "articl": [177, 473], "devot": 177, "multidimension": 177, "interchang": 177, "focu": 177, "phase": [177, 311, 587], "simpler": 177, "chw": 177, "displac": 177, "jump": 177, "plane": 177, "offset_nchw": 177, "adjac": 177, "border": 177, "contrari": [177, 414], "pixel": [177, 273, 432], "bvlc": 177, "caff": 177, "dnnl_format_tag_t": [177, 213, 250, 258, 304, 329, 372, 392, 408, 579], "quit": [177, 267, 273, 422, 432], "offset_nhwc": 177, "hwc": 177, "wc": 177, "bmp": 177, "color": 177, "24bit": 177, "recognit": 177, "outer": [177, 194], "offset_chwn": 177, "hwn": 177, "wn": 177, "dnnl_chwn": [177, 194], "artifici": 177, "disjoint": 177, "trivial": [177, 179, 586], "tip": 177, "stride_n": [177, 273, 432], "stride_c": [177, 273, 432], "stride_h": [177, 273, 432], "stride_w": [177, 273, 432], "dnnl_dims_t": [177, 194, 229, 250, 258, 269, 304, 311, 317, 318, 319, 329, 331, 362, 392, 408, 424, 539, 579], "dnnl_memory_desc_init_by_strid": 177, "dnnl_memory_desc_create_with_strid": [177, 304, 329], "behalf": 177, "great": 177, "nchw8c": [177, 213], "guess": [177, 414], "offset_nchw8c": 177, "slice": 177, "uppercas": 177, "distinguish": 177, "8c": 177, "dnnl_memory_desc_create_with_tag": [177, 194, 250, 258, 269, 304, 329, 392, 408, 424], "dnnl_nchw8c": [177, 194, 213], "ptrdiff_t": 177, "inner_nblk": 177, "inner_idx": [177, 228], "1st": [177, 194, 213, 329], "0st": [177, 329], "3rd": [177, 194], "inner_blk": [177, 228], "q_stride": 177, "q_inner_nblk": 177, "q_inner_idx": 177, "q_inner_blk": 177, "dnnl_memory_desc_queri": [177, 304, 329], "dnnl_query_strid": [177, 228, 229, 329], "dnnl_query_inner_nblk": 177, "dnnl_query_inner_idx": [177, 228, 229, 329], "dnnl_query_inner_blk": [177, 228, 229, 329], "memcmp": 177, "dnnl_max_ndim": [177, 304, 318], "tail": 177, "somehow": 177, "came": 177, "div_up": 177, "price": 177, "neglig": [177, 178, 473], "d0": [177, 179], "dnnl_memory_desc_get_s": [177, 304, 329], "phys_siz": 177, "eltwise_op": [177, 311, 587], "block_siz": 177, "c_pad": 177, "expect_stride_n": 177, "expect_stride_c": 177, "expect_stride_h": 177, "expect_stride_w": 177, "expect_stride_8c": 177, "expect_tru": 177, "get_padded_dim": [177, 581], "get_inner_nblk": [177, 581], "get_inner_idx": [177, 581], "get_inner_blk": [177, 581], "profile_exec": [178, 473], "onednn_verbose_timestamp": 178, "rel": [178, 284, 465], "gemm_api": 178, "dnnl_set_verbos": [178, 304, 341], "face": 178, "insight": 178, "256x256": 178, "25x256": 178, "v0": [178, 471, 473], "6afab8e57f65a8995685d97ba6f80fa6c24b87a0": 178, "dnnl_backend": 178, "memory_descriptor": 178, "problem_desc": 178, "exec_tim": 178, "partition_id": 178, "partition_kind": 178, "op_nam": 178, "144": 178, "break": [178, 285, 467], "spent": [178, 414], "tune": [178, 473], "led": 178, "breviti": [178, 263, 414], "src_u8": 178, "f0": [178, 471, 473], "brgemm_matmul": 178, "did": 178, "ic16ih7oc16oh7kh5ph2n": 178, "wip": 178, "1693533460193": 178, "346924": 178, "abcd16b": [178, 213, 473], "abcd16b16a": [178, 213], "bia_f32": 178, "mb2_ic16oc16_ih7oh7kh5sh1dh0ph2_iw7ow7kw5sw1dw0pw2": 178, "709961": 178, "1693533460194": 178, "199951": 178, "0161133": 178, "1693533460228": 178, "559082": 178, "16x16x5x5": 178, "724854": 178, "1693533460229": 178, "437012": 178, "481": 178, "1693533460259": 178, "165039": 178, "blk": 178, "2x16x7x7": 178, "349854": 178, "586914": 178, "604": 178, "1693533460272": 178, "332031": 178, "0358887": 178, "416992": 178, "052002": 178, "561035": 178, "0878906": 178, "1693533460313": 178, "719971": 178, "275146": 178, "1693533460314": 178, "072021": 178, "8389": 178, "__repro": 178, "ic16ih7oc16oh7kh5ph2nwip": 178, "comma": 178, "marker": 178, "millisecond": [178, 251, 473], "epoch": 178, "kernel_cache_hit": 178, "nested_cache_hit": 178, "cpu2gpu": [178, 270], "gpu2cpu": [178, 270], "tensor_nam": 178, "extra_flag": 178, "synchron": [178, 329, 434, 471, 493, 579], "exit": [178, 275], "wall": 178, "evenli": 179, "mandatori": [179, 349], "postop": [179, 396], "t0": [179, 294, 304, 485], "a0": 179, "t1": [179, 294, 304, 485], "a1": 179, "beyond": 179, "msg": [179, 304], "unavail": 179, "gnorm": 179, "ip": 179, "miscellan": 179, "nest": 179, "pm": 179, "unsuccess": 179, "favor": 179, "runtime_kind": 179, "onednn_experimental_profil": 179, "exhaust": 179, "dnnl_common": [182, 191, 195, 241, 535, 536, 548, 617], "dnnl_accumulation_mode_strict": [182, 183, 311], "dnnl_accumulation_mode_relax": [182, 183, 311], "dnnl_accumulation_mode_ani": [182, 183, 311], "dnnl_accumulation_mode_s32": [182, 183, 311], "dnnl_accumulation_mode_f32": [182, 183, 311], "dnnl_accumulation_mode_f16": [182, 183, 311], "dnnl_common_typ": [183, 190, 192, 196, 240, 242, 630], "dnnl_alg_kind_undef": [184, 185], "dnnl_convolution_direct": [184, 185, 250, 258, 317, 392, 408], "0x1": [184, 188, 189, 204, 233, 284, 465], "dnnl_convolution_winograd": [184, 185, 317], "0x2": 184, "dnnl_convolution_auto": [184, 185, 317], "0x3": [184, 189, 284, 465], "dnnl_deconvolution_direct": [184, 185, 319], "0xa": 184, "dnnl_deconvolution_winograd": [184, 185, 319], "0xb": 184, "0x20": [184, 204], "0x100": 184, "0x1ff": 184, "0x2ff": 184, "0x3ff": 184, "dnnl_lrn_across_channel": [184, 185, 250, 258, 327, 392, 408], "0xaff": 184, "dnnl_lrn_within_channel": [184, 185, 327], "0xbff": 184, "dnnl_vanilla_rnn": [184, 185], "0x1fff": 184, "dnnl_vanilla_lstm": [184, 185], "0x2fff": 184, "dnnl_vanilla_gru": [184, 185], "0x3fff": 184, "dnnl_lbr_gru": [184, 185], "0x4fff": 184, "dnnl_vanilla_augru": [184, 185], "0x5fff": 184, "dnnl_lbr_augru": [184, 185], "0x6fff": 184, "dnnl_binary_add": [184, 185, 313], "0x1fff0": 184, "dnnl_binary_mul": [184, 185, 313], "0x1fff1": 184, "dnnl_binary_max": [184, 185, 313], "0x1fff2": 184, "dnnl_binary_min": [184, 185, 313], "0x1fff3": 184, "dnnl_binary_div": [184, 185, 313], "0x1fff4": 184, "dnnl_binary_sub": [184, 185, 313], "0x1fff5": 184, "dnnl_binary_g": [184, 185, 313], "0x1fff6": 184, "dnnl_binary_gt": [184, 185, 313], "0x1fff7": 184, "dnnl_binary_l": [184, 185, 313], "0x1fff8": 184, "dnnl_binary_lt": [184, 185, 313], "0x1fff9": 184, "dnnl_binary_eq": [184, 185, 313], "0x1fffa": 184, "dnnl_binary_n": [184, 185, 313], "0x1fffb": 184, "dnnl_binary_select": [184, 185], "0x1fffc": 184, "dnnl_resampling_nearest": [184, 185, 339], "0x2fff0": 184, "dnnl_resampling_linear": [184, 185, 339], "0x2fff1": 184, "dnnl_reduction_max": [184, 185, 337, 600], "dnnl_reduction_min": [184, 185, 337, 600], "dnnl_reduction_sum": [184, 185, 337, 600], "dnnl_reduction_mul": [184, 185, 337, 600], "dnnl_reduction_mean": [184, 185, 337, 600], "dnnl_reduction_norm_lp_max": [184, 185, 337, 600], "dnnl_reduction_norm_lp_sum": [184, 185, 337, 600], "dnnl_reduction_norm_lp_power_p_max": [184, 185, 337, 600], "dnnl_reduction_norm_lp_power_p_sum": [184, 185, 337, 600], "dnnl_softmax_accur": [184, 185, 343], "0x30000": 184, "dnnl_softmax_log": [184, 185, 343], "hyperbol": [184, 185], "tangent": [184, 185], "cumul": [184, 473], "gaussian": 184, "modif": 184, "w_c": [184, 185], "x_t": [184, 185], "c_x": [184, 185], "u_c": [184, 185], "c_h": [184, 185], "bias": [184, 294, 485], "neighbor": [184, 185, 339], "pth": 184, "deconvolution_direct": [185, 271, 428, 527, 529], "deconvolution_winograd": [185, 527, 529], "eltwise_elu": 185, "eltwise_squar": 185, "eltwise_ab": 185, "eltwise_sqrt": 185, "eltwise_swish": 185, "eltwise_soft_relu": 185, "eltwise_mish": 185, "eltwise_logist": [185, 627, 629], "eltwise_exp": 185, "eltwise_gelu_tanh": 185, "eltwise_gelu_erf": 185, "eltwise_log": 185, "eltwise_clip": 185, "eltwise_clip_v2": 185, "eltwise_pow": 185, "eltwise_round": 185, "eltwise_hardswish": 185, "eltwise_hardsigmoid": 185, "eltwise_relu_use_dst_for_bwd": 185, "eltwise_tanh_use_dst_for_bwd": 185, "eltwise_elu_use_dst_for_bwd": 185, "eltwise_sqrt_use_dst_for_bwd": 185, "eltwise_logistic_use_dst_for_bwd": 185, "eltwise_exp_use_dst_for_bwd": 185, "eltwise_clip_v2_use_dst_for_bwd": 185, "lrn_across_channel": [185, 251, 253, 254, 281, 398, 400, 459, 569, 571], "lrn_within_channel": [185, 569, 571], "pooling_avg_include_pad": [185, 583, 585], "pooling_avg_exclude_pad": [185, 583, 585], "vanilla_rnn": [185, 383], "vanilla_lstm": 185, "vanilla_gru": 185, "lbr_gru": [185, 383, 456], "vanilla_augru": 185, "lbr_augru": 185, "binary_max": 185, "binary_min": 185, "binary_g": 185, "binary_gt": 185, "binary_l": 185, "binary_lt": 185, "binary_eq": 185, "binary_n": 185, "binary_select": 185, "resampling_nearest": [185, 604, 606], "resampling_linear": [185, 293, 483, 604, 606], "reduction_max": 185, "reduction_min": 185, "reduction_sum": [185, 291, 479], "reduction_mul": 185, "reduction_mean": 185, "reduction_norm_lp_max": 185, "reduction_norm_lp_sum": 185, "reduction_norm_lp_power_p_max": 185, "reduction_norm_lp_power_p_sum": 185, "softmax_accur": [185, 296, 489, 613, 615], "softmax_log": [185, 613, 615], "rectifi": [185, 320, 434, 493], "linar": 185, "lrb": 185, "norm_lp_max": 185, "norm_lp_sum": 185, "norm_lp_power_p_max": 185, "norm_lp_power_p_sum": 185, "isa_default": [186, 341], "dnnl_cpu_isa_default": [186, 189, 341], "dnnl_cpu_isa_sse41": [186, 189], "dnnl_cpu_isa_avx": [186, 189], "dnnl_cpu_isa_avx2": [186, 189], "dnnl_cpu_isa_avx2_vnni": [186, 189], "dnnl_cpu_isa_avx2_vnni_2": [186, 189], "dnnl_cpu_isa_avx512_cor": [186, 189], "dnnl_cpu_isa_avx512_core_vnni": [186, 189], "dnnl_cpu_isa_avx512_core_bf16": [186, 189], "dnnl_cpu_isa_avx10_1_512": [186, 189], "dnnl_cpu_isa_avx512_core_fp16": [186, 189], "dnnl_cpu_isa_avx10_1_512_amx": [186, 189], "dnnl_cpu_isa_avx512_core_amx": [186, 189], "dnnl_cpu_isa_avx10_1_512_amx_fp16": [186, 189], "dnnl_cpu_isa_avx512_core_amx_fp16": [186, 189], "dnnl_cpu_isa_avx10_2_512": [186, 189], "dnnl_cpu_isa_avx10_2_512_amx_2": [186, 189], "dnnl_cpu_isa_no_hint": [187, 188, 341], "dnnl_cpu_isa_prefer_ymm": [187, 188], "exclus": [187, 188, 329, 579], "0x0": [188, 189, 233], "0x7": [189, 284, 465], "0xf": [189, 284, 465], "0x1f": [189, 284, 465], "0x27": 189, "0x67": 189, "0xe7": 189, "0x1ef": 189, "0xfef": 189, "0x1fef": 189, "0x201ff": 189, "0x22fff": 189, "dnnl_data_type_undef": [190, 200, 211], "dnnl_f16": [190, 200, 211], "dnnl_bf16": [190, 200, 211], "dnnl_s32": [190, 200, 211], "dnnl_u8": [190, 200, 211], "dnnl_f64": [190, 211], "dnnl_boolean": [190, 200], "dnnl_f8_e5m2": [190, 200, 211], "dnnl_f8_e4m3": [190, 200, 211], "dnnl_s4": [190, 200, 211], "dnnl_u4": [190, 200, 211], "dnnl_e8m0": [190, 211], "dnnl_f4_e2m1": [190, 211], "dnnl_f4_e3m0": [190, 211], "dnnl_data_type_max": 190, "0x7fff": [190, 193, 221, 223, 229, 242], "dnnl_any_engin": [191, 192], "dnnl_cpu": [191, 192, 258, 269, 408, 424], "dnnl_gpu": [191, 192, 269, 424], "dnnl_format_kind_undef": [193, 212, 317, 319, 324, 326, 328], "dnnl_format_kind_ani": [193, 212, 313, 317, 319, 324, 329, 332, 337, 339, 340], "dnnl_format_kind_spars": [193, 212], "dnnl_format_kind_host_scalar": [193, 212], "dnnl_format_kind_max": 193, "dnnl_format_tag_undef": [194, 213], "dnnl_abcdef": [194, 213], "dnnl_abcdefg": [194, 213], "dnnl_abcdefgh": [194, 213], "dnnl_abcdefghi": [194, 213], "dnnl_abcdefghij": [194, 213], "dnnl_abcdefghijk": [194, 213], "dnnl_abcdefghijkl": [194, 213], "dnnl_ba": [194, 213, 329], "dnnl_bca": [194, 213], "dnnl_cab": [194, 213], "dnnl_cba": [194, 213], "dnnl_abdc": [194, 213], "dnnl_acbd": [194, 213], "dnnl_adbc": [194, 213], "dnnl_adcb": [194, 213], "dnnl_bacd": [194, 213], "dnnl_bcda": [194, 213], "dnnl_cdab": [194, 213], "dnnl_cdba": [194, 213], "dnnl_dcab": [194, 213], "dnnl_abdec": [194, 213], "dnnl_adecb": [194, 213], "dnnl_bcdea": [194, 213], "dnnl_cdeab": [194, 213], "dnnl_cdeba": [194, 213], "dnnl_decab": [194, 213], "dnnl_abcdf": [194, 213], "dnnl_abdefc": [194, 213], "dnnl_abdfc": [194, 213], "dnnl_acbdef": [194, 213], "dnnl_adefcb": [194, 213], "dnnl_defcab": [194, 213], "dnnl_abcdegf": [194, 213], "dnnl_abcdefhg": [194, 213], "dnnl_abcdefgih": [194, 213], "dnnl_abcdefghji": [194, 213], "dnnl_abcdefghikj": [194, 213], "dnnl_abcdefghijlk": [194, 213], "dnnl_abc16a": [194, 213], "dnnl_abc16a16b": [194, 213], "dnnl_abc32a32b": [194, 213], "dnnl_abc4a4b": [194, 213], "dnnl_abc16b": [194, 213], "dnnl_abc16b16a": [194, 213], "dnnl_abc4a": [194, 213], "dnnl_abc32b": [194, 213], "dnnl_abc4b": [194, 213], "dnnl_abc4b16a4b": [194, 213], "dnnl_abc2b8a4b": [194, 213], "dnnl_abc16b16a4b": [194, 213], "dnnl_abc16b16a2b": [194, 213], "dnnl_abc4b4a": [194, 213], "dnnl_abc8a16b2a": [194, 213], "dnnl_abc8a8b": [194, 213], "dnnl_abc8a4b": [194, 213], "dnnl_abc8b": [194, 213], "dnnl_abc8b16a2b": [194, 213], "dnnl_bac8a16b2a": [194, 213], "dnnl_abc8b8a": [194, 213], "dnnl_abcd16a": [194, 213], "dnnl_abcd8a": [194, 213], "dnnl_abcd16a16b": [194, 213], "dnnl_abcd32a": [194, 213], "dnnl_abcd32a32b": [194, 213], "dnnl_abcd16b": [194, 213], "dnnl_abcd16b16a": [194, 213], "dnnl_abcd16b16c": [194, 213], "dnnl_abcd16c16b": [194, 213], "dnnl_abcd4a": [194, 213], "dnnl_abcd32b": [194, 213], "dnnl_abcd4b": [194, 213], "dnnl_abcd4b16a4b": [194, 213], "dnnl_abcd16b16a4b": [194, 213], "dnnl_abcd16b16a2b": [194, 213], "dnnl_abcd4b4a": [194, 213], "dnnl_abcd4a4b": [194, 213], "dnnl_abcd2c4b2c": [194, 213], "dnnl_abcd4b8c2b": [194, 213], "dnnl_abcd4c16b4c": [194, 213], "dnnl_abcd2c8b4c": [194, 213], "dnnl_abcd16c16b4c": [194, 213], "dnnl_abcd16c16b2c": [194, 213], "dnnl_abcd4c4b": [194, 213], "dnnl_abcd4b4c": [194, 213], "dnnl_abcd8a16b2a": [194, 213], "dnnl_abcd2b8a4b": [194, 213], "dnnl_abcd8a8b": [194, 213], "dnnl_abcd8a4b": [194, 213], "dnnl_abcd8b": [194, 213], "dnnl_abcd4c8b2c": [194, 213], "dnnl_abcd8b16a2b": [194, 213], "dnnl_abcd8b16c2b": [194, 213], "dnnl_bacd8a16b2a": [194, 213], "dnnl_abcd8b8a": [194, 213], "dnnl_abcd8b8c": [194, 213], "dnnl_abcd8b4c": [194, 213], "dnnl_abcd8c16b2c": [194, 213], "dnnl_abcde8a16b2a": [194, 213], "dnnl_acbd8b16c2b": [194, 213], "dnnl_abcd8c8b": [194, 213], "dnnl_abcde16a": [194, 213], "dnnl_abcde32a": [194, 213], "dnnl_abcde16a16b": [194, 213], "dnnl_bacde8a16b2a": [194, 213], "dnnl_abcd2b4c2b": [194, 213], "dnnl_abcde4b16a4b": [194, 213], "dnnl_abcde2b8a4b": [194, 213], "dnnl_abcde16b": [194, 213], "dnnl_abcde16b16a": [194, 213], "dnnl_abcde16b16c": [194, 213], "dnnl_abcde16c16b": [194, 213], "dnnl_abcde2c8b4c": [194, 213], "dnnl_abcde4a": [194, 213], "dnnl_abcde32b": [194, 213], "dnnl_abcde4b": [194, 213], "dnnl_abcde4b4a": [194, 213], "dnnl_abcde4a4b": [194, 213], "dnnl_abcde4b4c": [194, 213], "dnnl_abcde2c4b2c": [194, 213], "dnnl_abcde4b8c2b": [194, 213], "dnnl_abcde4c16b4c": [194, 213], "dnnl_abcde16c16b4c": [194, 213], "dnnl_abcde16c16b2c": [194, 213], "dnnl_abcde4c4b": [194, 213], "dnnl_abcde8a": [194, 213], "dnnl_abcde8a8b": [194, 213], "dnnl_abcde8a4b": [194, 213], "dnnl_bacde16b16a": [194, 213], "dnnl_abcde8b": [194, 213], "dnnl_abcde8b16a2b": [194, 213], "dnnl_abcde8b16c2b": [194, 213], "dnnl_abcde4c8b2c": [194, 213], "dnnl_acbde8b16c2b": [194, 213], "dnnl_abcde8b8a": [194, 213], "dnnl_abcde32a32b": [194, 213], "dnnl_abcde8b8c": [194, 213], "dnnl_abcde8b4c": [194, 213], "dnnl_abc4a8b8a4b": [194, 213], "dnnl_abcd4a8b8a4b": [194, 213], "dnnl_abcde4a8b8a4b": [194, 213], "dnnl_bac4b8a8b4a": [194, 213], "dnnl_bacd4b8a8b4a": [194, 213], "dnnl_bacde4b8a8b4a": [194, 213], "dnnl_abcd2a8b8a2b": [194, 213], "dnnl_abcd4b8c8b4c": [194, 213], "dnnl_abcde4b8c8b4c": [194, 213], "dnnl_abcde2b8c8b2c": [194, 213], "dnnl_abcde8c16b2c": [194, 213], "dnnl_abcde8c8b": [194, 213], "dnnl_abcde2b4c2b": [194, 213], "dnnl_abcdef16b": [194, 213], "dnnl_abcdef16b16c": [194, 213], "dnnl_abcdef16c16b": [194, 213], "dnnl_abcdef4c16b4c": [194, 213], "dnnl_abcdef2c8b4c": [194, 213], "dnnl_abcdef4c8b2c": [194, 213], "dnnl_abcdef2b4c2b": [194, 213], "dnnl_abcdef4b": [194, 213], "dnnl_abcdef4c4b": [194, 213], "dnnl_abcdef4b4c": [194, 213], "dnnl_abcdef2c4b2c": [194, 213], "dnnl_abcdef4b8c2b": [194, 213], "dnnl_abcdef8b8c": [194, 213], "dnnl_abcdef8b4c": [194, 213], "dnnl_abcdef8c16b2c": [194, 213], "dnnl_abcdef4b8c8b4c": [194, 213], "dnnl_abcdef8b16c2b": [194, 213], "dnnl_acbdef8b16c2b": [194, 213], "dnnl_abcdef8c8b": [194, 213], "dnnl_abdc16b": [194, 213], "dnnl_abdc16b2c": [194, 213], "dnnl_abdc16b4c": [194, 213], "dnnl_abdc4b": [194, 213], "dnnl_abdc8b": [194, 213], "dnnl_abdec16b": [194, 213], "dnnl_abdec16b2c": [194, 213], "dnnl_abdec16b4c": [194, 213], "dnnl_abdec32b": [194, 213], "dnnl_abdec4b": [194, 213], "dnnl_abdec8b": [194, 213], "dnnl_abdefc16b": [194, 213], "dnnl_abdefc16b2c": [194, 213], "dnnl_acbdef16c16b": [194, 213], "dnnl_abdefc4b": [194, 213], "dnnl_abdefc8b": [194, 213], "dnnl_abcdef16a": [194, 213], "dnnl_abcdef32a": [194, 213], "dnnl_abedc16b": [194, 213], "dnnl_acb16a": [194, 213], "dnnl_acb16a2b": [194, 213], "dnnl_acb16a4b": [194, 213], "dnnl_acb4a": [194, 213], "dnnl_acb8a": [194, 213], "dnnl_acbd16b16c": [194, 213], "dnnl_acbd16c16b": [194, 213], "dnnl_acbde16b16c": [194, 213], "dnnl_acbde16c16b": [194, 213], "dnnl_acdb16a": [194, 213], "dnnl_acdb16a2b": [194, 213], "dnnl_acdb16a4b": [194, 213], "dnnl_acdb32a": [194, 213], "dnnl_acdb4a": [194, 213], "dnnl_acdb8a": [194, 213], "dnnl_acdeb16a": [194, 213], "dnnl_acdeb16a2b": [194, 213], "dnnl_acdeb4a": [194, 213], "dnnl_acdeb8a": [194, 213], "dnnl_adcb16a": [194, 213], "dnnl_bac16a16b": [194, 213], "dnnl_bac16b16a": [194, 213], "dnnl_bacd16a16b": [194, 213], "dnnl_bacd16b16a": [194, 213], "dnnl_acbd4c8b8c4b": [194, 213], "dnnl_acbde4c8b8c4b": [194, 213], "dnnl_acbdef4c8b8c4b": [194, 213], "dnnl_bacde16a16b": [194, 213], "dnnl_acbdef16b16c": [194, 213], "dnnl_abc16b32a": [194, 213], "dnnl_abc16b64a": [194, 213], "dnnl_abc4b32a4b": [194, 213], "dnnl_abc4b64a4b": [194, 213], "dnnl_abc8b32a2b": [194, 213], "dnnl_abc8b64a2b": [194, 213], "dnnl_ab16b16a": [194, 213], "dnnl_ab16b32a": [194, 213], "dnnl_ab16b64a": [194, 213], "dnnl_ab8b16a2b": [194, 213], "dnnl_ab8b32a2b": [194, 213], "dnnl_ab8b64a2b": [194, 213], "dnnl_ab4b16a4b": [194, 213], "dnnl_ab4b32a4b": [194, 213], "dnnl_ab4b64a4b": [194, 213], "dnnl_ab16b16a4b": [194, 213], "dnnl_abcd16b32a": [194, 213], "dnnl_abcd16b64a": [194, 213], "dnnl_abcd4b32a4b": [194, 213], "dnnl_abcd4b64a4b": [194, 213], "dnnl_abcd8b32a2b": [194, 213], "dnnl_abcd8b64a2b": [194, 213], "dnnl_abcde4b32a4b": [194, 213], "dnnl_abcde4b64a4b": [194, 213], "dnnl_abcde16b16a4b": [194, 213], "dnnl_abcde16b16a2b": [194, 213], "dnnl_abcde16b32a": [194, 213], "dnnl_abcde16b64a": [194, 213], "dnnl_abcde8b32a2b": [194, 213], "dnnl_abcde8b64a2b": [194, 213], "dnnl_abcdef16c16b4c": [194, 213], "dnnl_abcdef16c16b2c": [194, 213], "dnnl_ab32a32b8a4b": [194, 213], "dnnl_ab8a4b": [194, 213], "dnnl_ab32a32b8a2b": [194, 213], "dnnl_ab8a2b": [194, 213], "dnnl_abdc32d": [194, 213], "dnnl_abdc32d4c": [194, 213], "dnnl_abdec32": [194, 213], "dnnl_abdec32e2c": [194, 213], "dnnl_abdec32e4c": [194, 213], "dnnl_abdefc16b4c": [194, 213], "dnnl_acdeb16a4b": [194, 213], "dnnl_abcd16a16b2a": [194, 213], "dnnl_abc16a16b2a": [194, 213], "dnnl_abcd16b16c2b": [194, 213], "dnnl_abcde16b16c2b": [194, 213], "dnnl_acb32a": [194, 213], "dnnl_acb32a2b": [194, 213], "dnnl_acb32a4b": [194, 213], "dnnl_acb48a": [194, 213], "dnnl_acb48a2b": [194, 213], "dnnl_acb48a4b": [194, 213], "dnnl_acb64a": [194, 213], "dnnl_acb64a2b": [194, 213], "dnnl_acb64a4b": [194, 213], "dnnl_cba2b": [194, 213], "dnnl_cba4b": [194, 213], "dnnl_abdc32b": [194, 213], "dnnl_abdc32b2c": [194, 213], "dnnl_abdc32b4c": [194, 213], "dnnl_abdc48b": [194, 213], "dnnl_abdc48b2c": [194, 213], "dnnl_abdc48b4c": [194, 213], "dnnl_abdc64b": [194, 213], "dnnl_abdc64b2c": [194, 213], "dnnl_abdc64b4c": [194, 213], "dnnl_adcb2c": [194, 213], "dnnl_adcb4c": [194, 213], "dnnl_acdb32a2b": [194, 213], "dnnl_acdb32a4b": [194, 213], "dnnl_acdb48a": [194, 213], "dnnl_acdb48a2b": [194, 213], "dnnl_acdb48a4b": [194, 213], "dnnl_acdb64a": [194, 213], "dnnl_acdb64a2b": [194, 213], "dnnl_acdb64a4b": [194, 213], "dnnl_cdba2b": [194, 213], "dnnl_cdba4b": [194, 213], "dnnl_abdec32b2c": [194, 213], "dnnl_abdec32b4c": [194, 213], "dnnl_abdec48b": [194, 213], "dnnl_abdec48b2c": [194, 213], "dnnl_abdec48b4c": [194, 213], "dnnl_abdec64b": [194, 213], "dnnl_abdec64b2c": [194, 213], "dnnl_abdec64b4c": [194, 213], "dnnl_adecb2c": [194, 213], "dnnl_adecb4c": [194, 213], "dnnl_acdeb32a": [194, 213], "dnnl_acdeb32a2b": [194, 213], "dnnl_acdeb32a4b": [194, 213], "dnnl_acdeb48a": [194, 213], "dnnl_acdeb48a2b": [194, 213], "dnnl_acdeb48a4b": [194, 213], "dnnl_acdeb64a": [194, 213], "dnnl_acdeb64a2b": [194, 213], "dnnl_acdeb64a4b": [194, 213], "dnnl_cdeba2b": [194, 213], "dnnl_cdeba4b": [194, 213], "dnnl_abdefc32b": [194, 213], "dnnl_abdefc32b2c": [194, 213], "dnnl_abdefc32b4c": [194, 213], "dnnl_abdefc48b": [194, 213], "dnnl_abdefc48b2c": [194, 213], "dnnl_abdefc48b4c": [194, 213], "dnnl_abdefc64b": [194, 213], "dnnl_abdefc64b2c": [194, 213], "dnnl_abdefc64b4c": [194, 213], "dnnl_adefcb2c": [194, 213], "dnnl_adefcb4c": [194, 213], "dnnl_ab16b32a4b": [194, 213], "dnnl_ab16b48a4b": [194, 213], "dnnl_ab16b64a4b": [194, 213], "dnnl_ab16b16a2b": [194, 213], "dnnl_ab16b32a2b": [194, 213], "dnnl_ab16b48a2b": [194, 213], "dnnl_ab16b64a2b": [194, 213], "dnnl_abc16b32a4b": [194, 213], "dnnl_abc16b48a4b": [194, 213], "dnnl_abc16b64a4b": [194, 213], "dnnl_abc16b32a2b": [194, 213], "dnnl_abc16b48a2b": [194, 213], "dnnl_abc16b64a2b": [194, 213], "dnnl_abcd16b32a4b": [194, 213], "dnnl_abcd16b48a4b": [194, 213], "dnnl_abcd16b64a4b": [194, 213], "dnnl_abcd16b32a2b": [194, 213], "dnnl_abcd16b48a2b": [194, 213], "dnnl_abcd16b64a2b": [194, 213], "dnnl_abcde16b32a4b": [194, 213], "dnnl_abcde16b48a4b": [194, 213], "dnnl_abcde16b64a4b": [194, 213], "dnnl_abcde16b32a2b": [194, 213], "dnnl_abcde16b48a2b": [194, 213], "dnnl_abcde16b64a2b": [194, 213], "dnnl_abc32a16b": [194, 213], "dnnl_abcd32a16b": [194, 213], "dnnl_abcde32a16b": [194, 213], "dnnl_ab48a16b": [194, 213], "dnnl_ab48a32b": [194, 213], "dnnl_abc40a16b": [194, 213], "dnnl_abc40a32b": [194, 213], "dnnl_abc48b16c": [194, 213], "dnnl_abc48b32c": [194, 213], "dnnl_abcd40a16b": [194, 213], "dnnl_abcd40a32b": [194, 213], "dnnl_abcd32c": [194, 213], "dnnl_abdce32c": [194, 213], "dnnl_abdce32c2": [194, 213], "dnnl_ba16a16b2a": [194, 213], "dnnl_ba16a32b2a": [194, 213], "dnnl_ba16a48b2a": [194, 213], "dnnl_ba16a64b2a": [194, 213], "dnnl_ba16a16b4a": [194, 213], "dnnl_ba16a32b4a": [194, 213], "dnnl_ba16a48b4a": [194, 213], "dnnl_ba16a64b4a": [194, 213], "dnnl_abcd8a2b": [194, 213], "dnnl_abdec16c16b2c": [194, 213], "dnnl_abdec16c16b4c": [194, 213], "dnnl_abdefc16c16b2c": [194, 213], "dnnl_acb16b16a2b": [194, 213], "dnnl_acb16b16a4b": [194, 213], "dnnl_acdb16b16a2b": [194, 213], "dnnl_acdb16b16a4b": [194, 213], "dnnl_acdeb16b16a2b": [194, 213], "dnnl_abdefc16c16b4c": [194, 213], "dnnl_acdeb16b16a4b": [194, 213], "dnnl_acb16b32a2b": [194, 213], "dnnl_acb16b32a4b": [194, 213], "dnnl_acb16b48a2b": [194, 213], "dnnl_acb16b48a4b": [194, 213], "dnnl_acb16b64a2b": [194, 213], "dnnl_acb16b64a4b": [194, 213], "dnnl_abdc16c16b2c": [194, 213], "dnnl_abdc16c16b4c": [194, 213], "dnnl_abdc16c32b2c": [194, 213], "dnnl_abdc16c32b4c": [194, 213], "dnnl_abdc16c48b2c": [194, 213], "dnnl_abdc16c48b4c": [194, 213], "dnnl_abdc16c64b2c": [194, 213], "dnnl_abdc16c64b4c": [194, 213], "dnnl_acdb16b32a2b": [194, 213], "dnnl_acdb16b32a4b": [194, 213], "dnnl_acdb16b48a2b": [194, 213], "dnnl_acdb16b48a4b": [194, 213], "dnnl_acdb16b64a2b": [194, 213], "dnnl_acdb16b64a4b": [194, 213], "dnnl_abdec16c32b2c": [194, 213], "dnnl_abdec16c32b4c": [194, 213], "dnnl_abdec16c48b2c": [194, 213], "dnnl_abdec16c48b4c": [194, 213], "dnnl_abdec16c64b2c": [194, 213], "dnnl_abdec16c64b4c": [194, 213], "dnnl_acdeb16b32a2b": [194, 213], "dnnl_acdeb16b32a4b": [194, 213], "dnnl_acdeb16b48a2b": [194, 213], "dnnl_acdeb16b48a4b": [194, 213], "dnnl_acdeb16b64a2b": [194, 213], "dnnl_acdeb16b64a4b": [194, 213], "dnnl_abdefc16c32b2c": [194, 213], "dnnl_abdefc16c32b4c": [194, 213], "dnnl_abdefc16c48b2c": [194, 213], "dnnl_abdefc16c48b4c": [194, 213], "dnnl_abdefc16c64b2c": [194, 213], "dnnl_abdefc16c64b4c": [194, 213], "dnnl_decba16a": [194, 213], "dnnl_abc4a2b": [194, 213], "dnnl_abc8a2b": [194, 213], "dnnl_abcd8b2c": [194, 213], "dnnl_abcde4a2b": [194, 213], "dnnl_abcde8a2b": [194, 213], "dnnl_abcde40a16b": [194, 213], "dnnl_abcde40a32b": [194, 213], "dnnl_abcde8b2c": [194, 213], "dnnl_abcde4a8b8a2b": [194, 213], "dnnl_abcd4a8b8a2b": [194, 213], "dnnl_abc4a8b8a2b": [194, 213], "dnnl_abcdef4b8c8b2c": [194, 213], "dnnl_abcde4b8c8b2c": [194, 213], "dnnl_abcd4b8c8b2c": [194, 213], "dnnl_bacde4b8a8b2a": [194, 213], "dnnl_bacd4b8a8b2a": [194, 213], "dnnl_bac4b8a8b2a": [194, 213], "dnnl_acbdef4c8b8c2b": [194, 213], "dnnl_acbde4c8b8c2b": [194, 213], "dnnl_acbd4c8b8c2b": [194, 213], "dnnl_abcdef8b2c": [194, 213], "dnnl_ab32a16b": [194, 213], "dnnl_ab32a32b": [194, 213], "dnnl_ba4b8a8b2a": [194, 213], "dnnl_ba4b8a8b4a": [194, 213], "dnnl_abc32b16c": [194, 213], "dnnl_abc32b32c": [194, 213], "dnnl_acb4c8b8c2b": [194, 213], "dnnl_acb4c8b8c4b": [194, 213], "dnnl_abcd4a2b": [194, 213], "dnnl_abc2b8a16b4a": [194, 213], "dnnl_abcd2b8a16b4a": [194, 213], "dnnl_abcde2b8a16b4a": [194, 213], "dnnl_abc2a8b16a4b": [194, 213], "dnnl_abc2a8b16a2b": [194, 213], "dnnl_abc2b32a8b": [194, 213], "dnnl_abcd2a8b16a4b": [194, 213], "dnnl_abcd2a8b16a2b": [194, 213], "dnnl_acbd2c8b16c2b": [194, 213], "dnnl_abcd2b32a8b": [194, 213], "dnnl_abcd2c8b16c2b": [194, 213], "dnnl_abcde2a8b16a4b": [194, 213], "dnnl_abcde2a8b16a2b": [194, 213], "dnnl_acbde2c8b16c2b": [194, 213], "dnnl_abcde2b32a8b": [194, 213], "dnnl_abc2b8c16b2c": [194, 213], "dnnl_abcd2b8c16b2c": [194, 213], "dnnl_abcde2b8c16b2c": [194, 213], "dnnl_abcdef2b8c16b2c": [194, 213], "dnnl_bacde2b8a16b4a": [194, 213], "dnnl_bacd2b8a16b4a": [194, 213], "dnnl_bac2b8a16b4a": [194, 213], "dnnl_bacde2b8a16b2a": [194, 213], "dnnl_bacd2b8a16b2a": [194, 213], "dnnl_bac2b8a16b2a": [194, 213], "dnnl_abcde2c8b16c2b": [194, 213], "dnnl_abcdef2c8b16c2b": [194, 213], "dnnl_acbdef2c8b16c2b": [194, 213], "dnnl_abcd2b8c16b4c": [194, 213], "dnnl_abcde2b8c16b4c": [194, 213], "dnnl_ba4b8a16b2a": [194, 213], "dnnl_ba4b8a16b4a": [194, 213], "dnnl_acb4c8b16c2b": [194, 213], "dnnl_acb4c8b16c4b": [194, 213], "dnnl_ba16a16b": [194, 213], "dnnl_ba16a32b": [194, 213], "dnnl_ba16a48b": [194, 213], "dnnl_ba16a64b": [194, 213], "dnnl_acb16c2b": [194, 213], "dnnl_acb16c4b": [194, 213], "dnnl_ba16b2a": [194, 213], "dnnl_ba16b4a": [194, 213], "dnnl_abc16b16c": [194, 213], "dnnl_abc16b32c": [194, 213], "dnnl_ab16a16b": [194, 213], "dnnl_ab16a32b": [194, 213], "dnnl_abcde16a16b2a": [194, 213], "dnnl_abcdef16b16c2b": [194, 213], "dnnl_acedb16a": [194, 213], "dnnl_abdfec16b": [194, 213], "dnnl_abdec64e2c": [194, 213], "dnnl_abdec64e4c": [194, 213], "dnnl_acb16b16c": [194, 213], "dnnl_acb16b32c": [194, 213], "dnnl_acb16b48c": [194, 213], "dnnl_acb16b64c": [194, 213], "dnnl_acb16b16c2b": [194, 213], "dnnl_acb16b32c2b": [194, 213], "dnnl_acb16b48c2b": [194, 213], "dnnl_acb16b64c2b": [194, 213], "dnnl_acb16b16c4b": [194, 213], "dnnl_acb16b32c4b": [194, 213], "dnnl_acb16b48c4b": [194, 213], "dnnl_acb16b64c4b": [194, 213], "dnnl_abcd4c": [194, 213], "dnnl_abcde4c": [194, 213], "dnnl_abcdef4c": [194, 213], "dnnl_abcde32c": [194, 213], "dnnl_abcdef32c": [194, 213], "dnnl_abcd16a32b": [194, 213], "dnnl_decba8a": [194, 213], "dnnl_acdefb16b32c2b": [194, 213], "dnnl_acdefb16b32c4b": [194, 213], "dnnl_acdefb16b48c2b": [194, 213], "dnnl_acdefb16b48c4b": [194, 213], "dnnl_acdefb16b64c2b": [194, 213], "dnnl_acdefb16b64c4b": [194, 213], "dnnl_bcdea16a32b2a": [194, 213], "dnnl_bcdea16a32b4a": [194, 213], "dnnl_bcdea16a48b2a": [194, 213], "dnnl_bcdea16a48b4a": [194, 213], "dnnl_bcdea16a64b2a": [194, 213], "dnnl_bcdea16a64b4a": [194, 213], "dnnl_acdefb32c": [194, 213], "dnnl_acdefb32c2b": [194, 213], "dnnl_acdefb32c4b": [194, 213], "dnnl_acdefb48c": [194, 213], "dnnl_acdefb48c2b": [194, 213], "dnnl_acdefb48c4b": [194, 213], "dnnl_acdefb64c": [194, 213], "dnnl_acdefb64c2b": [194, 213], "dnnl_acdefb64c4b": [194, 213], "dnnl_bcdea32b": [194, 213], "dnnl_bcdea32b2a": [194, 213], "dnnl_bcdea32b4a": [194, 213], "dnnl_bcdea48b": [194, 213], "dnnl_bcdea48b2a": [194, 213], "dnnl_bcdea48b4a": [194, 213], "dnnl_bcdea64b": [194, 213], "dnnl_bcdea64b2a": [194, 213], "dnnl_bcdea64b4a": [194, 213], "dnnl_bca32b": [194, 213], "dnnl_bca32b2a": [194, 213], "dnnl_bca32b4a": [194, 213], "dnnl_bca48b": [194, 213], "dnnl_bca48b2a": [194, 213], "dnnl_bca48b4a": [194, 213], "dnnl_bca64b": [194, 213], "dnnl_bca64b2a": [194, 213], "dnnl_bca64b4a": [194, 213], "dnnl_acdb32c": [194, 213], "dnnl_acdb32c2b": [194, 213], "dnnl_acdb32c4b": [194, 213], "dnnl_acdb48c": [194, 213], "dnnl_acdb48c2b": [194, 213], "dnnl_acdb48c4b": [194, 213], "dnnl_acdb64c": [194, 213], "dnnl_acdb64c2b": [194, 213], "dnnl_acdb64c4b": [194, 213], "dnnl_bca16a16b2a": [194, 213], "dnnl_bca16a16b4a": [194, 213], "dnnl_bcda16a16b2a": [194, 213], "dnnl_bcda16a16b4a": [194, 213], "dnnl_bcdea16a16b2a": [194, 213], "dnnl_bcdea16a16b4a": [194, 213], "dnnl_acdb16b16c2b": [194, 213], "dnnl_acdb16b16c4b": [194, 213], "dnnl_acdeb16b16c2b": [194, 213], "dnnl_acdeb16b16c4b": [194, 213], "dnnl_acdefb16b16c2b": [194, 213], "dnnl_acdefb16b16c4b": [194, 213], "dnnl_bca16a32b2a": [194, 213], "dnnl_bca16a32b4a": [194, 213], "dnnl_bca16a48b2a": [194, 213], "dnnl_bca16a48b4a": [194, 213], "dnnl_bca16a64b2a": [194, 213], "dnnl_bca16a64b4a": [194, 213], "dnnl_acdb16b32c2b": [194, 213], "dnnl_acdb16b32c4b": [194, 213], "dnnl_acdb16b48c2b": [194, 213], "dnnl_acdb16b48c4b": [194, 213], "dnnl_acdb16b64c2b": [194, 213], "dnnl_acdb16b64c4b": [194, 213], "dnnl_bcda16a32b2a": [194, 213], "dnnl_bcda16a32b4a": [194, 213], "dnnl_bcda16a48b2a": [194, 213], "dnnl_bcda16a48b4a": [194, 213], "dnnl_bcda16a64b2a": [194, 213], "dnnl_bcda16a64b4a": [194, 213], "dnnl_acdeb16b32c2b": [194, 213], "dnnl_acdeb16b32c4b": [194, 213], "dnnl_acdeb16b48c2b": [194, 213], "dnnl_acdeb16b48c4b": [194, 213], "dnnl_acdeb16b64c2b": [194, 213], "dnnl_acdeb16b64c4b": [194, 213], "dnnl_bca16b": [194, 213], "dnnl_bca16b2a": [194, 213], "dnnl_bca16b4a": [194, 213], "dnnl_bcda16b": [194, 213], "dnnl_bcda16b2a": [194, 213], "dnnl_bcda16b4a": [194, 213], "dnnl_bcdea16b": [194, 213], "dnnl_bcdea16b2a": [194, 213], "dnnl_bcdea16b4a": [194, 213], "dnnl_acdb16c": [194, 213], "dnnl_acdb16c2b": [194, 213], "dnnl_acdb16c4b": [194, 213], "dnnl_acdeb16c": [194, 213], "dnnl_acdeb16c2b": [194, 213], "dnnl_acdeb16c4b": [194, 213], "dnnl_acdefb16c": [194, 213], "dnnl_acdefb16c2b": [194, 213], "dnnl_acdefb16c4b": [194, 213], "dnnl_bcda32b": [194, 213], "dnnl_bcda32b2a": [194, 213], "dnnl_bcda32b4a": [194, 213], "dnnl_bcda48b": [194, 213], "dnnl_bcda48b2a": [194, 213], "dnnl_bcda48b4a": [194, 213], "dnnl_bcda64b": [194, 213], "dnnl_bcda64b2a": [194, 213], "dnnl_bcda64b4a": [194, 213], "dnnl_acdeb32c": [194, 213], "dnnl_acdeb32c2b": [194, 213], "dnnl_acdeb32c4b": [194, 213], "dnnl_acdeb48c": [194, 213], "dnnl_acdeb48c2b": [194, 213], "dnnl_acdeb48c4b": [194, 213], "dnnl_acdeb64c": [194, 213], "dnnl_acdeb64c2b": [194, 213], "dnnl_acdeb64c4b": [194, 213], "dnnl_acb24a": [194, 213], "dnnl_acdb24a": [194, 213], "dnnl_acdeb24a": [194, 213], "dnnl_abdc24b": [194, 213], "dnnl_abdec24b": [194, 213], "dnnl_abdefc24b": [194, 213], "dnnl_abdc16d": [194, 213], "dnnl_abdec16": [194, 213], "dnnl_abdce16c": [194, 213], "dnnl_acb24a2b": [194, 213], "dnnl_acdb24a2b": [194, 213], "dnnl_acdeb24a2b": [194, 213], "dnnl_abdc24b2c": [194, 213], "dnnl_abdec24b2c": [194, 213], "dnnl_abdefc24b2c": [194, 213], "dnnl_acb8a2b": [194, 213], "dnnl_acdb8a2b": [194, 213], "dnnl_acdeb8a2b": [194, 213], "dnnl_abdc8b2c": [194, 213], "dnnl_abdec8b2c": [194, 213], "dnnl_abdefc8b2c": [194, 213], "dnnl_ab8b32a": [194, 213], "dnnl_abc8b32a": [194, 213], "dnnl_abcd8b32a": [194, 213], "dnnl_abcde8b32a": [194, 213], "dnnl_ab8b24a": [194, 213], "dnnl_abc8b24a": [194, 213], "dnnl_abcd8b24a": [194, 213], "dnnl_abcde8b24a": [194, 213], "dnnl_ab8b16a": [194, 213], "dnnl_abc8b16a": [194, 213], "dnnl_abcd8b16a": [194, 213], "dnnl_abcde8b16a": [194, 213], "dnnl_ab8b8a": [194, 213], "dnnl_ab4b8a4b": [194, 213], "dnnl_ab4b24a4b": [194, 213], "dnnl_abc4b8a4b": [194, 213], "dnnl_abc4b24a4b": [194, 213], "dnnl_abcd4b8a4b": [194, 213], "dnnl_abcd4b24a4b": [194, 213], "dnnl_abcde4b8a4b": [194, 213], "dnnl_abcde4b24a4b": [194, 213], "dnnl_ab8b24a2b": [194, 213], "dnnl_abc8b24a2b": [194, 213], "dnnl_abcd8b24a2b": [194, 213], "dnnl_abcde8b24a2b": [194, 213], "dnnl_ab8b8a2b": [194, 213], "dnnl_abc8b8a2b": [194, 213], "dnnl_abcd8b8a2b": [194, 213], "dnnl_abcde8b8a2b": [194, 213], "dnnl_acb24a4b": [194, 213], "dnnl_acdb24a4b": [194, 213], "dnnl_acdeb24a4b": [194, 213], "dnnl_abdc24b4c": [194, 213], "dnnl_abdec24b4c": [194, 213], "dnnl_abdefc24b4c": [194, 213], "dnnl_acb8a4b": [194, 213], "dnnl_acdb8a4b": [194, 213], "dnnl_acdeb8a4b": [194, 213], "dnnl_abdc8b4c": [194, 213], "dnnl_abdec8b4c": [194, 213], "dnnl_abdefc8b4c": [194, 213], "dnnl_bca8b": [194, 213], "dnnl_bca8b2a": [194, 213], "dnnl_bcda8b": [194, 213], "dnnl_bcda8b2a": [194, 213], "dnnl_bcdea8b": [194, 213], "dnnl_bcdea8b2a": [194, 213], "dnnl_acdb8c": [194, 213], "dnnl_acdb8c2b": [194, 213], "dnnl_acdeb8c": [194, 213], "dnnl_acdeb8c2b": [194, 213], "dnnl_acdefb8c": [194, 213], "dnnl_acdefb8c2b": [194, 213], "dnnl_bca24b": [194, 213], "dnnl_bca24b2a": [194, 213], "dnnl_bcda24b": [194, 213], "dnnl_bcda24b2a": [194, 213], "dnnl_bcdea24b": [194, 213], "dnnl_bcdea24b2a": [194, 213], "dnnl_acdb24c": [194, 213], "dnnl_acdb24c2b": [194, 213], "dnnl_acdeb24c": [194, 213], "dnnl_acdeb24c2b": [194, 213], "dnnl_acdefb24c": [194, 213], "dnnl_acdefb24c2b": [194, 213], "dnnl_bca8b4a": [194, 213], "dnnl_bcda8b4a": [194, 213], "dnnl_bcdea8b4a": [194, 213], "dnnl_acdb8c4b": [194, 213], "dnnl_acdeb8c4b": [194, 213], "dnnl_acdefb8c4b": [194, 213], "dnnl_bca24b4a": [194, 213], "dnnl_bcda24b4a": [194, 213], "dnnl_bcdea24b4a": [194, 213], "dnnl_acdb24c4b": [194, 213], "dnnl_acdeb24c4b": [194, 213], "dnnl_acdefb24c4b": [194, 213], "dnnl_ab16b48a": [194, 213], "dnnl_abc16b48a": [194, 213], "dnnl_abcd16b48a": [194, 213], "dnnl_abcde16b48a": [194, 213], "dnnl_abc16a4b": [194, 213], "dnnl_abcd16a4b": [194, 213], "dnnl_abcde16a4b": [194, 213], "dnnl_defcba16a": [194, 213], "dnnl_defcba8a": [194, 213], "dnnl_acb16b64a": [194, 213], "dnnl_acdb16b64a": [194, 213], "dnnl_acdeb16b64a": [194, 213], "dnnl_acb16b48a": [194, 213], "dnnl_acdb16b48a": [194, 213], "dnnl_acdeb16b48a": [194, 213], "dnnl_acb16b32a": [194, 213], "dnnl_acdb16b32a": [194, 213], "dnnl_acdeb16b32a": [194, 213], "dnnl_acb16b16a": [194, 213], "dnnl_acdb16b16a": [194, 213], "dnnl_acdeb16b16a": [194, 213], "dnnl_acb8b32a": [194, 213], "dnnl_acdb8b32a": [194, 213], "dnnl_acdeb8b32a": [194, 213], "dnnl_acb8b24a": [194, 213], "dnnl_acdb8b24a": [194, 213], "dnnl_acdeb8b24a": [194, 213], "dnnl_acb8b16a": [194, 213], "dnnl_acdb8b16a": [194, 213], "dnnl_acdeb8b16a": [194, 213], "dnnl_acb8b8a": [194, 213], "dnnl_acdb8b8a": [194, 213], "dnnl_acdeb8b8a": [194, 213], "dnnl_acb8b64a2b": [194, 213], "dnnl_acdb8b64a2b": [194, 213], "dnnl_acdeb8b64a2b": [194, 213], "dnnl_acb8b32a2b": [194, 213], "dnnl_acdb8b32a2b": [194, 213], "dnnl_acdeb8b32a2b": [194, 213], "dnnl_acb8b24a2b": [194, 213], "dnnl_acdb8b24a2b": [194, 213], "dnnl_acdeb8b24a2b": [194, 213], "dnnl_acb8b16a2b": [194, 213], "dnnl_acdb8b16a2b": [194, 213], "dnnl_acdeb8b16a2b": [194, 213], "dnnl_acb8b8a2b": [194, 213], "dnnl_acdb8b8a2b": [194, 213], "dnnl_acdeb8b8a2b": [194, 213], "dnnl_acb4b64a4b": [194, 213], "dnnl_acdb4b64a4b": [194, 213], "dnnl_acdeb4b64a4b": [194, 213], "dnnl_acb4b32a4b": [194, 213], "dnnl_acdb4b32a4b": [194, 213], "dnnl_acdeb4b32a4b": [194, 213], "dnnl_acb4b24a4b": [194, 213], "dnnl_acdb4b24a4b": [194, 213], "dnnl_acdeb4b24a4b": [194, 213], "dnnl_acb4b16a4b": [194, 213], "dnnl_acdb4b16a4b": [194, 213], "dnnl_acdeb4b16a4b": [194, 213], "dnnl_acb4b8a4b": [194, 213], "dnnl_acdb4b8a4b": [194, 213], "dnnl_acdeb4b8a4b": [194, 213], "dnnl_ab4a": [194, 213], "dnnl_ab8a": [194, 213], "dnnl_ba4b4a": [194, 213], "dnnl_ba8b4a": [194, 213], "dnnl_ba2a24b": [194, 213], "dnnl_acb2b24c": [194, 213], "dnnl_ba2a8b": [194, 213], "dnnl_acb2b8c": [194, 213], "dnnl_ba8a24b": [194, 213], "dnnl_acb8b24c": [194, 213], "dnnl_ba8a16b": [194, 213], "dnnl_acb8b16c": [194, 213], "dnnl_ba8a8b": [194, 213], "dnnl_acb8b8c": [194, 213], "dnnl_bcad": [194, 213], "dnnl_cabd": [194, 213], "dnnl_dabc": [194, 213], "dnnl_ab32a": [194, 213], "dnnl_acbd8b8c": [194, 213], "dnnl_acbde8b8c": [194, 213], "dnnl_bac8a8b": [194, 213], "dnnl_bacd8a8b": [194, 213], "dnnl_bacde8a8b": [194, 213], "dnnl_acbdef8b8c": [194, 213], "dnnl_abdec16e4c": [194, 213], "dnnl_abdc16d4c": [194, 213], "dnnl_ba24b8a": [194, 213], "dnnl_acb24c8b": [194, 213], "dnnl_abdc24d8c": [194, 213], "dnnl_decba4a": [194, 213], "dnnl_defcba4a": [194, 213], "dnnl_abdc8d8c": [194, 213], "dnnl_abdc16d8c": [194, 213], "dnnl_acb8c8b": [194, 213], "dnnl_acb16c8b": [194, 213], "dnnl_ba8b8a": [194, 213], "dnnl_ba16b8a": [194, 213], "dnnl_ab2a4b": [194, 213], "dnnl_format_tag_last": [194, 213], "dnnl_cn": 194, "dnnl_owi": 194, "dnnl_woi": [194, 213], "dnnl_iwo": 194, "dnnl_hwoi": [194, 213], "dnnl_ohwi": 194, "dnnl_ihwo": 194, "dnnl_iohw": 194, "dnnl_iodhw": 194, "dnnl_dhwoi": [194, 213], "dnnl_odhwi": 194, "dnnl_idhwo": 194, "dnnl_goiw": 194, "dnnl_gowi": 194, "dnnl_wigo": 194, "dnnl_goihw": 194, "dnnl_gohwi": 194, "dnnl_hwigo": 194, "dnnl_giohw": 194, "dnnl_goidhw": 194, "dnnl_godhwi": 194, "dnnl_giodhw": 194, "dnnl_dhwigo": 194, "dnnl_ldoi16o": 194, "dnnl_ldoi32o": 194, "dnnl_ldoi16o4i": 194, "dnnl_ldoi32o4i": 194, "dnnl_ldio32i": [194, 213], "dnnl_ldgoi16o": 194, "dnnl_ldgoi16o4i": 194, "dnnl_ldgoi32o": 194, "dnnl_ldgoi32o2i": 194, "dnnl_ldgoi32o4i": 194, "dnnl_ldgoi64o2i": 194, "dnnl_ldgoi64o4i": 194, "dnnl_ldgio16i": [194, 213], "dnnl_ldgio32i": [194, 213], "dnnl_ldgio32i2o": [194, 213], "dnnl_ncdhw32c": [194, 213], "dnnl_ncdhw16c": [194, 213], "dnnl_ncdhw4c": [194, 213], "dnnl_nchw32c": [194, 213], "dnnl_nchw4c": [194, 213], "dnnl_ncw32c": [194, 213], "dnnl_ncw16c": [194, 213], "dnnl_ncw4c": [194, 213], "dnnl_ncw8c": [194, 213], "dnnl_ncw16n16c": [194, 213], "dnnl_ncdhw16n16c": [194, 213], "dnnl_nchw16n16c": [194, 213], "dnnl_ncw32n16c": [194, 213], "dnnl_nchw32n16c": [194, 213], "dnnl_nchw16n32c": [194, 213], "dnnl_ncdhw32n16c": [194, 213], "dnnl_ncw32n32c": [194, 213], "dnnl_nchw32n32c": [194, 213], "dnnl_ncdhw32n32c": [194, 213], "dnnl_oi16i16o": [194, 213], "dnnl_oi16i32o": [194, 213], "dnnl_oi16i48o": [194, 213], "dnnl_oi16i64o": [194, 213], "dnnl_oi8i8o2i": [194, 213], "dnnl_oi8i16o2i": [194, 213], "dnnl_oi8i24o2i": [194, 213], "dnnl_oi8i32o2i": [194, 213], "dnnl_oi8i64o2i": [194, 213], "dnnl_oi4i8o4i": [194, 213], "dnnl_oi4i16o4i": [194, 213], "dnnl_oi4i24o4i": [194, 213], "dnnl_oi4i32o4i": [194, 213], "dnnl_oi4i64o4i": [194, 213], "dnnl_oi16i16o4i": [194, 213], "dnnl_oi8i32o": [194, 213], "dnnl_oi8i24o": [194, 213], "dnnl_oi8i16o": [194, 213], "dnnl_oi8i8o": [194, 213], "dnnl_iow8o8i": [194, 213], "dnnl_iow16o16i": [194, 213], "dnnl_iow16i16o": [194, 213], "dnnl_oiw16i16o": [194, 213], "dnnl_owi16i16o": [194, 213], "dnnl_oiw16i32o": [194, 213], "dnnl_owi16i32o": [194, 213], "dnnl_oiw16i48o": [194, 213], "dnnl_owi16i48o": [194, 213], "dnnl_oiw16i64o": [194, 213], "dnnl_owi16i64o": [194, 213], "dnnl_oiw16o16i": [194, 213], "dnnl_oiw16o": [194, 213], "dnnl_oiw4i8o4i": [194, 213], "dnnl_owi4i8o4i": [194, 213], "dnnl_oiw4i16o4i": [194, 213], "dnnl_owi4i16o4i": [194, 213], "dnnl_oiw4i24o4i": [194, 213], "dnnl_owi4i24o4i": [194, 213], "dnnl_oiw4i32o4i": [194, 213], "dnnl_owi4i32o4i": [194, 213], "dnnl_oiw4i64o4i": [194, 213], "dnnl_owi4i64o4i": [194, 213], "dnnl_oiw2i8o4i": [194, 213], "dnnl_oiw16i16o4i": [194, 213], "dnnl_oiw16i16o2i": [194, 213], "dnnl_oiw16o16i2o": [194, 213], "dnnl_oiw4i4o": [194, 213], "dnnl_oiw4o4i": [194, 213], "dnnl_oiw4o": [194, 213], "dnnl_oiw8i8o2i": [194, 213], "dnnl_owi8i8o2i": [194, 213], "dnnl_oiw8i16o2i": [194, 213], "dnnl_owi8i16o2i": [194, 213], "dnnl_oiw8i24o2i": [194, 213], "dnnl_owi8i24o2i": [194, 213], "dnnl_oiw8i32o2i": [194, 213], "dnnl_owi8i32o2i": [194, 213], "dnnl_oiw8i64o2i": [194, 213], "dnnl_owi8i64o2i": [194, 213], "dnnl_oiw8i8o": [194, 213], "dnnl_owi8i8o": [194, 213], "dnnl_oiw8o16i2o": [194, 213], "dnnl_iow8o16i2o": [194, 213], "dnnl_oiw8o8i": [194, 213], "dnnl_oiw8o4i": [194, 213], "dnnl_owi16o": [194, 213], "dnnl_owi16o2i": [194, 213], "dnnl_owi16o4i": [194, 213], "dnnl_iwo8i": [194, 213], "dnnl_iwo8i2o": [194, 213], "dnnl_iwo8i4o": [194, 213], "dnnl_iwo16i": [194, 213], "dnnl_iwo16i2o": [194, 213], "dnnl_iwo16i4o": [194, 213], "dnnl_iwo24i": [194, 213], "dnnl_iwo24i2o": [194, 213], "dnnl_iwo24i4o": [194, 213], "dnnl_owi4o": [194, 213], "dnnl_owi8o": [194, 213], "dnnl_owi8o2i": [194, 213], "dnnl_oiw8i32o": [194, 213], "dnnl_owi8i32o": [194, 213], "dnnl_oiw8i24o": [194, 213], "dnnl_owi8i24o": [194, 213], "dnnl_oiw8i16o": [194, 213], "dnnl_owi8i16o": [194, 213], "dnnl_owi8o4i": [194, 213], "dnnl_iohw16i16o": [194, 213], "dnnl_iohw8o8i": [194, 213], "dnnl_iohw16o16i": [194, 213], "dnnl_ohwi16o": [194, 213], "dnnl_ohwi16o2i": [194, 213], "dnnl_ohwi16o4i": [194, 213], "dnnl_ihwo8i": [194, 213], "dnnl_ihwo8i2o": [194, 213], "dnnl_ihwo8i4o": [194, 213], "dnnl_ihwo16i": [194, 213], "dnnl_ihwo16i2o": [194, 213], "dnnl_ihwo16i4o": [194, 213], "dnnl_ihwo24i": [194, 213], "dnnl_ihwo24i2o": [194, 213], "dnnl_ihwo24i4o": [194, 213], "dnnl_ohwi24o": [194, 213], "dnnl_ohwi32o": [194, 213], "dnnl_ohwi4o": [194, 213], "dnnl_ohwi8o": [194, 213], "dnnl_ohwi8o2i": [194, 213], "dnnl_ohwi8o4i": [194, 213], "dnnl_oihw16i16o": [194, 213], "dnnl_ohwi16i16o": [194, 213], "dnnl_oihw16i32o": [194, 213], "dnnl_ohwi16i32o": [194, 213], "dnnl_oihw16i48o": [194, 213], "dnnl_ohwi16i48o": [194, 213], "dnnl_oihw16i64o": [194, 213], "dnnl_ohwi16i64o": [194, 213], "dnnl_oihw16o16i": [194, 213], "dnnl_oihw16o": [194, 213], "dnnl_oihw4i8o4i": [194, 213], "dnnl_ohwi4i8o4i": [194, 213], "dnnl_oihw4i16o4i": [194, 213], "dnnl_ohwi4i16o4i": [194, 213], "dnnl_oihw4i24o4i": [194, 213], "dnnl_ohwi4i24o4i": [194, 213], "dnnl_oihw4i32o4i": [194, 213], "dnnl_ohwi4i32o4i": [194, 213], "dnnl_oihw4i64o4i": [194, 213], "dnnl_ohwi4i64o4i": [194, 213], "dnnl_oihw16i16o4i": [194, 213], "dnnl_oihw16i16o2i": [194, 213], "dnnl_oihw16o16i2o": [194, 213], "dnnl_oihw4i4o": [194, 213], "dnnl_oihw4o4i": [194, 213], "dnnl_oihw4o": [194, 213], "dnnl_oihw8i8o2i": [194, 213], "dnnl_ohwi8i8o2i": [194, 213], "dnnl_oihw8i16o2i": [194, 213], "dnnl_ohwi8i16o2i": [194, 213], "dnnl_oihw8i32o2i": [194, 213], "dnnl_ohwi8i32o2i": [194, 213], "dnnl_oihw8i24o2i": [194, 213], "dnnl_ohwi8i24o2i": [194, 213], "dnnl_oihw8i64o2i": [194, 213], "dnnl_ohwi8i64o2i": [194, 213], "dnnl_oihw8i8o": [194, 213], "dnnl_ohwi8i8o": [194, 213], "dnnl_oihw8o16i2o": [194, 213], "dnnl_oihw2i8o4i": [194, 213], "dnnl_iohw8o16i2o": [194, 213], "dnnl_oihw8o8i": [194, 213], "dnnl_oihw8o4i": [194, 213], "dnnl_owhi16o": [194, 213], "dnnl_oihw8i32o": [194, 213], "dnnl_ohwi8i32o": [194, 213], "dnnl_oihw8i24o": [194, 213], "dnnl_ohwi8i24o": [194, 213], "dnnl_oihw8i16o": [194, 213], "dnnl_ohwi8i16o": [194, 213], "dnnl_odhwi16o": [194, 213], "dnnl_odhwi16o2i": [194, 213], "dnnl_odhwi16o4i": [194, 213], "dnnl_idhwo8i": [194, 213], "dnnl_idhwo8i2o": [194, 213], "dnnl_idhwo8i4o": [194, 213], "dnnl_idhwo16i": [194, 213], "dnnl_idhwo16i2o": [194, 213], "dnnl_idhwo16i4o": [194, 213], "dnnl_idhwo24i": [194, 213], "dnnl_idhwo24i2o": [194, 213], "dnnl_idhwo24i4o": [194, 213], "dnnl_odhwi4o": [194, 213], "dnnl_odhwi8o": [194, 213], "dnnl_odhwi8o2i": [194, 213], "dnnl_odhwi8o4i": [194, 213], "dnnl_odwhi16o": [194, 213], "dnnl_oidhw16i16o": [194, 213], "dnnl_odhwi16i16o": [194, 213], "dnnl_oidhw16i32o": [194, 213], "dnnl_odhwi16i32o": [194, 213], "dnnl_oidhw16i48o": [194, 213], "dnnl_odhwi16i48o": [194, 213], "dnnl_oidhw16i64o": [194, 213], "dnnl_odhwi16i64o": [194, 213], "dnnl_oidhw16o16i": [194, 213], "dnnl_oidhw16o": [194, 213], "dnnl_oidhw4i4o": [194, 213], "dnnl_oidhw4o4i": [194, 213], "dnnl_oidhw4o": [194, 213], "dnnl_oidhw8i8o2i": [194, 213], "dnnl_odhwi8i8o2i": [194, 213], "dnnl_oidhw8i16o2i": [194, 213], "dnnl_odhwi8i16o2i": [194, 213], "dnnl_oidhw8i32o2i": [194, 213], "dnnl_odhwi8i32o2i": [194, 213], "dnnl_oidhw8i24o2i": [194, 213], "dnnl_odhwi8i24o2i": [194, 213], "dnnl_oidhw8i64o2i": [194, 213], "dnnl_odhwi8i64o2i": [194, 213], "dnnl_oidhw8i8o": [194, 213], "dnnl_odhwi8i8o": [194, 213], "dnnl_oidhw8o16i2o": [194, 213], "dnnl_iodhw8o16i2o": [194, 213], "dnnl_oidhw4i8o4i": [194, 213], "dnnl_odhwi4i8o4i": [194, 213], "dnnl_oidhw4i16o4i": [194, 213], "dnnl_odhwi4i16o4i": [194, 213], "dnnl_oidhw4i24o4i": [194, 213], "dnnl_odhwi4i24o4i": [194, 213], "dnnl_oidhw4i32o4i": [194, 213], "dnnl_odhwi4i32o4i": [194, 213], "dnnl_oidhw4i64o4i": [194, 213], "dnnl_odhwi4i64o4i": [194, 213], "dnnl_oidhw16i16o4i": [194, 213], "dnnl_oidhw16i16o2i": [194, 213], "dnnl_oidhw2i8o4i": [194, 213], "dnnl_oidhw8o8i": [194, 213], "dnnl_oidhw8o4i": [194, 213], "dnnl_iodhw16i16o": [194, 213], "dnnl_oidhw4o8i8o4i": [194, 213], "dnnl_iodhw8o8i": [194, 213], "dnnl_iodhw16o16i": [194, 213], "dnnl_oidhw16o16i2o": [194, 213], "dnnl_oidhw8i32o": [194, 213], "dnnl_odhwi8i32o": [194, 213], "dnnl_oidhw8i24o": [194, 213], "dnnl_odhwi8i24o": [194, 213], "dnnl_oidhw8i16o": [194, 213], "dnnl_odhwi8i16o": [194, 213], "dnnl_goiw16g": [194, 213], "dnnl_goiw8g": [194, 213], "dnnl_goiw4g": [194, 213], "dnnl_giow8o8i": [194, 213], "dnnl_giow16o16i": [194, 213], "dnnl_giow16i16o": [194, 213], "dnnl_goiw16i16o": [194, 213], "dnnl_goiw16o16i": [194, 213], "dnnl_goiw16o": [194, 213], "dnnl_goiw4i16o4i": [194, 213], "dnnl_goiw2i8o4i": [194, 213], "dnnl_goiw16i16o4i": [194, 213], "dnnl_goiw16i16o2i": [194, 213], "dnnl_goiw16o16i2o": [194, 213], "dnnl_goiw4i4o": [194, 213], "dnnl_goiw4o4i": [194, 213], "dnnl_goiw4o": [194, 213], "dnnl_goiw8i16o2i": [194, 213], "dnnl_goiw8i8o": [194, 213], "dnnl_goiw8o16i2o": [194, 213], "dnnl_giow8o16i2o": [194, 213], "dnnl_goiw8o8i": [194, 213], "dnnl_goiw8o4i": [194, 213], "dnnl_gowi16o": [194, 213], "dnnl_gowi16o2i": [194, 213], "dnnl_gowi16o4i": [194, 213], "dnnl_giwo8i": [194, 213], "dnnl_giwo8i2o": [194, 213], "dnnl_giwo8i4o": [194, 213], "dnnl_giwo16i": [194, 213], "dnnl_giwo16i2o": [194, 213], "dnnl_giwo16i4o": [194, 213], "dnnl_giwo24i": [194, 213], "dnnl_giwo24i2o": [194, 213], "dnnl_giwo24i4o": [194, 213], "dnnl_gowi4o": [194, 213], "dnnl_gowi8o": [194, 213], "dnnl_gowi8o2i": [194, 213], "dnnl_gowi8o4i": [194, 213], "dnnl_goiw32g": [194, 213], "dnnl_goiw2i4o2i": [194, 213], "dnnl_goiw2o4i2o": [194, 213], "dnnl_goiw4i8o2i": [194, 213], "dnnl_goiw4o8i2o": [194, 213], "dnnl_goiw4i": [194, 213], "dnnl_goiw32i": [194, 213], "dnnl_giohw16i16o": [194, 213], "dnnl_giohw8o8i": [194, 213], "dnnl_giohw16o16i": [194, 213], "dnnl_gohwi16o": [194, 213], "dnnl_gohwi16o2i": [194, 213], "dnnl_gohwi16o4i": [194, 213], "dnnl_gihwo8i": [194, 213], "dnnl_gihwo8i2o": [194, 213], "dnnl_gihwo8i4o": [194, 213], "dnnl_gihwo16i": [194, 213], "dnnl_gihwo16i2o": [194, 213], "dnnl_gihwo16i4o": [194, 213], "dnnl_gihwo24i": [194, 213], "dnnl_gihwo24i2o": [194, 213], "dnnl_gihwo24i4o": [194, 213], "dnnl_gohwi32o": [194, 213], "dnnl_gohwi24o": [194, 213], "dnnl_gohwi24o2i": [194, 213], "dnnl_gohwi24o4i": [194, 213], "dnnl_gohwi4o": [194, 213], "dnnl_gohwi8o": [194, 213], "dnnl_gohwi8o2i": [194, 213], "dnnl_gohwi8o4i": [194, 213], "dnnl_goihw16g": [194, 213], "dnnl_goihw16i16o": [194, 213], "dnnl_goihw16o16i": [194, 213], "dnnl_goihw16o": [194, 213], "dnnl_goihw2i8o4i": [194, 213], "dnnl_goihw4i16o4i": [194, 213], "dnnl_goihw16i16o4i": [194, 213], "dnnl_goihw16i16o2i": [194, 213], "dnnl_goihw16o16i2o": [194, 213], "dnnl_goihw4i4o": [194, 213], "dnnl_goihw4o4i": [194, 213], "dnnl_goihw4o": [194, 213], "dnnl_goihw8g": [194, 213], "dnnl_goihw4g": [194, 213], "dnnl_goihw8i16o2i": [194, 213], "dnnl_goihw8i8o": [194, 213], "dnnl_goihw8o16i2o": [194, 213], "dnnl_giohw8o16i2o": [194, 213], "dnnl_goihw8o8i": [194, 213], "dnnl_goihw8o4i": [194, 213], "dnnl_goihw32g": [194, 213], "dnnl_gowhi16o": [194, 213], "dnnl_goihw4i": [194, 213], "dnnl_goihw32i": [194, 213], "dnnl_oiw4o8i8o4i": [194, 213], "dnnl_oihw4o8i8o4i": [194, 213], "dnnl_iow4i8o8i4o": [194, 213], "dnnl_iohw4i8o8i4o": [194, 213], "dnnl_iodhw4i8o8i4o": [194, 213], "dnnl_oihw2o8i8o2i": [194, 213], "dnnl_goiw4o8i8o4i": [194, 213], "dnnl_goihw4o8i8o4i": [194, 213], "dnnl_goidhw4o8i8o4i": [194, 213], "dnnl_giow4i8o8i4o": [194, 213], "dnnl_giohw4i8o8i4o": [194, 213], "dnnl_giodhw4i8o8i4o": [194, 213], "dnnl_goihw2o8i8o2i": [194, 213], "dnnl_goihw2i4o2i": [194, 213], "dnnl_goihw2o4i2o": [194, 213], "dnnl_goihw4i8o2i": [194, 213], "dnnl_goihw4o8i2o": [194, 213], "dnnl_giodhw16i16o": [194, 213], "dnnl_giodhw8o8i": [194, 213], "dnnl_giodhw16o16i": [194, 213], "dnnl_godhwi16o": [194, 213], "dnnl_godhwi16o2i": [194, 213], "dnnl_godhwi16o4i": [194, 213], "dnnl_gidhwo8i": [194, 213], "dnnl_gidhwo8i2o": [194, 213], "dnnl_gidhwo8i4o": [194, 213], "dnnl_gidhwo16i": [194, 213], "dnnl_gidhwo16i2o": [194, 213], "dnnl_gidhwo16i4o": [194, 213], "dnnl_gidhwo24i": [194, 213], "dnnl_gidhwo24i2o": [194, 213], "dnnl_gidhwo24i4o": [194, 213], "dnnl_godhwi4o": [194, 213], "dnnl_godhwi8o": [194, 213], "dnnl_godhwi8o2i": [194, 213], "dnnl_godhwi8o4i": [194, 213], "dnnl_godwhi16o": [194, 213], "dnnl_goidhw16i16o": [194, 213], "dnnl_goidhw4i16o4i": [194, 213], "dnnl_goidhw16i16o4i": [194, 213], "dnnl_goidhw2i8o4i": [194, 213], "dnnl_goidhw16i16o2i": [194, 213], "dnnl_goidhw16o16i": [194, 213], "dnnl_goidhw16o16i2o": [194, 213], "dnnl_goidhw16o": [194, 213], "dnnl_goidhw4i4o": [194, 213], "dnnl_goidhw4o4i": [194, 213], "dnnl_goidhw4o": [194, 213], "dnnl_goidhw8i16o2i": [194, 213], "dnnl_goidhw8i8o": [194, 213], "dnnl_goidhw8o16i2o": [194, 213], "dnnl_giodhw8o16i2o": [194, 213], "dnnl_goidhw8o8i": [194, 213], "dnnl_goidhw8o4i": [194, 213], "dnnl_goidhw16g": [194, 213], "dnnl_goidhw32g": [194, 213], "dnnl_goidhw2i4o2i": [194, 213], "dnnl_goidhw4i8o2i": [194, 213], "dnnl_goidhw2o4i2o": [194, 213], "dnnl_goidhw4o8i2o": [194, 213], "dnnl_goidhw4i": [194, 213], "dnnl_goidhw32i": [194, 213], "dnnl_owi24o": [194, 213], "dnnl_owi24o2i": [194, 213], "dnnl_owi24o4i": [194, 213], "dnnl_owi32o": [194, 213], "dnnl_owi32o2i": [194, 213], "dnnl_owi32o4i": [194, 213], "dnnl_owi48o": [194, 213], "dnnl_owi48o2i": [194, 213], "dnnl_owi48o4i": [194, 213], "dnnl_owi64o": [194, 213], "dnnl_owi64o2i": [194, 213], "dnnl_owi64o4i": [194, 213], "dnnl_iwo32i": [194, 213], "dnnl_iwo32i2o": [194, 213], "dnnl_iwo32i4o": [194, 213], "dnnl_iwo48i": [194, 213], "dnnl_iwo48i2o": [194, 213], "dnnl_iwo48i4o": [194, 213], "dnnl_iwo64i": [194, 213], "dnnl_iwo64i2o": [194, 213], "dnnl_iwo64i4o": [194, 213], "dnnl_wio2i": [194, 213], "dnnl_wio4i": [194, 213], "dnnl_gowi24o": [194, 213], "dnnl_gowi24o2i": [194, 213], "dnnl_gowi24o4i": [194, 213], "dnnl_gowi32o": [194, 213], "dnnl_gowi32o2i": [194, 213], "dnnl_gowi32o4i": [194, 213], "dnnl_gowi48o": [194, 213], "dnnl_gowi48o2i": [194, 213], "dnnl_gowi48o4i": [194, 213], "dnnl_gowi64o": [194, 213], "dnnl_gowi64o2i": [194, 213], "dnnl_gowi64o4i": [194, 213], "dnnl_giwo32i": [194, 213], "dnnl_giwo32i2o": [194, 213], "dnnl_giwo32i4o": [194, 213], "dnnl_giwo48i": [194, 213], "dnnl_giwo48i2o": [194, 213], "dnnl_giwo48i4o": [194, 213], "dnnl_giwo64i": [194, 213], "dnnl_giwo64i2o": [194, 213], "dnnl_giwo64i4o": [194, 213], "dnnl_gwio": [194, 213], "dnnl_gwio2i": [194, 213], "dnnl_gwio4i": [194, 213], "dnnl_ohwi24o2i": [194, 213], "dnnl_ohwi24o4i": [194, 213], "dnnl_ohwi32o2i": [194, 213], "dnnl_ohwi32o4i": [194, 213], "dnnl_ohwi48o": [194, 213], "dnnl_ohwi48o2i": [194, 213], "dnnl_ohwi48o4i": [194, 213], "dnnl_ohwi64o": [194, 213], "dnnl_ohwi64o2i": [194, 213], "dnnl_ohwi64o4i": [194, 213], "dnnl_ihwo32i": [194, 213], "dnnl_ihwo32i2o": [194, 213], "dnnl_ihwo32i4o": [194, 213], "dnnl_ihwo48i": [194, 213], "dnnl_ihwo48i2o": [194, 213], "dnnl_ihwo48i4o": [194, 213], "dnnl_ihwo64i": [194, 213], "dnnl_ihwo64i2o": [194, 213], "dnnl_ihwo64i4o": [194, 213], "dnnl_hwio2i": [194, 213], "dnnl_hwio4i": [194, 213], "dnnl_gohwi32o2i": [194, 213], "dnnl_gohwi32o4i": [194, 213], "dnnl_gohwi48o": [194, 213], "dnnl_gohwi48o2i": [194, 213], "dnnl_gohwi48o4i": [194, 213], "dnnl_gohwi64o": [194, 213], "dnnl_gohwi64o2i": [194, 213], "dnnl_gohwi64o4i": [194, 213], "dnnl_gihwo32i": [194, 213], "dnnl_gihwo32i2o": [194, 213], "dnnl_gihwo32i4o": [194, 213], "dnnl_gihwo48i": [194, 213], "dnnl_gihwo48i2o": [194, 213], "dnnl_gihwo48i4o": [194, 213], "dnnl_gihwo64i": [194, 213], "dnnl_gihwo64i2o": [194, 213], "dnnl_gihwo64i4o": [194, 213], "dnnl_ghwio": [194, 213], "dnnl_ghwio2i": [194, 213], "dnnl_ghwio4i": [194, 213], "dnnl_odhwi24o": [194, 213], "dnnl_odhwi24o2i": [194, 213], "dnnl_odhwi24o4i": [194, 213], "dnnl_odhwi32o": [194, 213], "dnnl_odhwi32o2i": [194, 213], "dnnl_odhwi32o4i": [194, 213], "dnnl_odhwi48o": [194, 213], "dnnl_odhwi48o2i": [194, 213], "dnnl_odhwi48o4i": [194, 213], "dnnl_odhwi64o": [194, 213], "dnnl_odhwi64o2i": [194, 213], "dnnl_odhwi64o4i": [194, 213], "dnnl_idhwo32i": [194, 213], "dnnl_idhwo32i2o": [194, 213], "dnnl_idhwo32i4o": [194, 213], "dnnl_idhwo48i": [194, 213], "dnnl_idhwo48i2o": [194, 213], "dnnl_idhwo48i4o": [194, 213], "dnnl_idhwo64i": [194, 213], "dnnl_idhwo64i2o": [194, 213], "dnnl_idhwo64i4o": [194, 213], "dnnl_dhwio2i": [194, 213], "dnnl_dhwio4i": [194, 213], "dnnl_godhwi24o": [194, 213], "dnnl_godhwi24o2i": [194, 213], "dnnl_godhwi24o4i": [194, 213], "dnnl_godhwi32o": [194, 213], "dnnl_godhwi32o2i": [194, 213], "dnnl_godhwi32o4i": [194, 213], "dnnl_godhwi48o": [194, 213], "dnnl_godhwi48o2i": [194, 213], "dnnl_godhwi48o4i": [194, 213], "dnnl_godhwi64o": [194, 213], "dnnl_godhwi64o2i": [194, 213], "dnnl_godhwi64o4i": [194, 213], "dnnl_gidhwo32i": [194, 213], "dnnl_gidhwo32i2o": [194, 213], "dnnl_gidhwo32i4o": [194, 213], "dnnl_gidhwo48i": [194, 213], "dnnl_gidhwo48i2o": [194, 213], "dnnl_gidhwo48i4o": [194, 213], "dnnl_gidhwo64i": [194, 213], "dnnl_gidhwo64i2o": [194, 213], "dnnl_gidhwo64i4o": [194, 213], "dnnl_gdhwio": [194, 213], "dnnl_gdhwio2i": [194, 213], "dnnl_gdhwio4i": [194, 213], "dnnl_oi16i32o4i": [194, 213], "dnnl_oi16i48o4i": [194, 213], "dnnl_oi16i64o4i": [194, 213], "dnnl_oi16i16o2i": [194, 213], "dnnl_oi16i32o2i": [194, 213], "dnnl_oi16i48o2i": [194, 213], "dnnl_oi16i64o2i": [194, 213], "dnnl_oiw16i32o4i": [194, 213], "dnnl_oiw16i48o4i": [194, 213], "dnnl_oiw16i64o4i": [194, 213], "dnnl_oiw16i32o2i": [194, 213], "dnnl_oiw16i48o2i": [194, 213], "dnnl_oiw16i64o2i": [194, 213], "dnnl_oihw16i32o4i": [194, 213], "dnnl_oihw16i48o4i": [194, 213], "dnnl_oihw16i64o4i": [194, 213], "dnnl_oihw16i32o2i": [194, 213], "dnnl_oihw16i48o2i": [194, 213], "dnnl_oihw16i64o2i": [194, 213], "dnnl_oidhw16i32o4i": [194, 213], "dnnl_oidhw16i48o4i": [194, 213], "dnnl_oidhw16i64o4i": [194, 213], "dnnl_oidhw16i32o2i": [194, 213], "dnnl_oidhw16i48o2i": [194, 213], "dnnl_oidhw16i64o2i": [194, 213], "dnnl_owi16i16o2i": [194, 213], "dnnl_owi16i16o4i": [194, 213], "dnnl_ohwi16i16o2i": [194, 213], "dnnl_ohwi16i16o4i": [194, 213], "dnnl_odhwi16i16o2i": [194, 213], "dnnl_odhwi16i16o4i": [194, 213], "dnnl_iwo16o16i2o": [194, 213], "dnnl_iwo16o16i4o": [194, 213], "dnnl_ihwo16o16i2o": [194, 213], "dnnl_ihwo16o16i4o": [194, 213], "dnnl_idhwo16o16i2o": [194, 213], "dnnl_idhwo16o16i4o": [194, 213], "dnnl_gowi16i16o2i": [194, 213], "dnnl_gowi16i16o4i": [194, 213], "dnnl_gohwi16i16o2i": [194, 213], "dnnl_gohwi16i16o4i": [194, 213], "dnnl_godhwi16i16o2i": [194, 213], "dnnl_godhwi16i16o4i": [194, 213], "dnnl_giwo16o16i2o": [194, 213], "dnnl_giwo16o16i4o": [194, 213], "dnnl_gihwo16o16i2o": [194, 213], "dnnl_gihwo16o16i4o": [194, 213], "dnnl_gidhwo16o16i2o": [194, 213], "dnnl_gidhwo16o16i4o": [194, 213], "dnnl_owi16i32o2i": [194, 213], "dnnl_owi16i32o4i": [194, 213], "dnnl_owi16i48o2i": [194, 213], "dnnl_owi16i48o4i": [194, 213], "dnnl_owi16i64o2i": [194, 213], "dnnl_owi16i64o4i": [194, 213], "dnnl_iwo16o32i2o": [194, 213], "dnnl_iwo16o32i4o": [194, 213], "dnnl_iwo16o48i2o": [194, 213], "dnnl_iwo16o48i4o": [194, 213], "dnnl_iwo16o64i2o": [194, 213], "dnnl_iwo16o64i4o": [194, 213], "dnnl_gowi16i32o2i": [194, 213], "dnnl_gowi16i32o4i": [194, 213], "dnnl_gowi16i48o2i": [194, 213], "dnnl_gowi16i48o4i": [194, 213], "dnnl_gowi16i64o2i": [194, 213], "dnnl_gowi16i64o4i": [194, 213], "dnnl_giwo16o32i2o": [194, 213], "dnnl_giwo16o32i4o": [194, 213], "dnnl_giwo16o48i2o": [194, 213], "dnnl_giwo16o48i4o": [194, 213], "dnnl_giwo16o64i2o": [194, 213], "dnnl_giwo16o64i4o": [194, 213], "dnnl_ohwi16i32o2i": [194, 213], "dnnl_ohwi16i32o4i": [194, 213], "dnnl_ohwi16i48o2i": [194, 213], "dnnl_ohwi16i48o4i": [194, 213], "dnnl_ohwi16i64o2i": [194, 213], "dnnl_ohwi16i64o4i": [194, 213], "dnnl_ihwo16o32i2o": [194, 213], "dnnl_ihwo16o32i4o": [194, 213], "dnnl_ihwo16o48i2o": [194, 213], "dnnl_ihwo16o48i4o": [194, 213], "dnnl_ihwo16o64i2o": [194, 213], "dnnl_ihwo16o64i4o": [194, 213], "dnnl_gohwi16i32o2i": [194, 213], "dnnl_gohwi16i32o4i": [194, 213], "dnnl_gohwi16i48o2i": [194, 213], "dnnl_gohwi16i48o4i": [194, 213], "dnnl_gohwi16i64o2i": [194, 213], "dnnl_gohwi16i64o4i": [194, 213], "dnnl_gihwo16o32i2o": [194, 213], "dnnl_gihwo16o32i4o": [194, 213], "dnnl_gihwo16o48i2o": [194, 213], "dnnl_gihwo16o48i4o": [194, 213], "dnnl_gihwo16o64i2o": [194, 213], "dnnl_gihwo16o64i4o": [194, 213], "dnnl_odhwi16i32o2i": [194, 213], "dnnl_odhwi16i32o4i": [194, 213], "dnnl_odhwi16i48o2i": [194, 213], "dnnl_odhwi16i48o4i": [194, 213], "dnnl_odhwi16i64o2i": [194, 213], "dnnl_odhwi16i64o4i": [194, 213], "dnnl_idhwo16o32i2o": [194, 213], "dnnl_idhwo16o32i4o": [194, 213], "dnnl_idhwo16o48i2o": [194, 213], "dnnl_idhwo16o48i4o": [194, 213], "dnnl_idhwo16o64i2o": [194, 213], "dnnl_idhwo16o64i4o": [194, 213], "dnnl_godhwi16i32o2i": [194, 213], "dnnl_godhwi16i32o4i": [194, 213], "dnnl_godhwi16i48o2i": [194, 213], "dnnl_godhwi16i48o4i": [194, 213], "dnnl_godhwi16i64o2i": [194, 213], "dnnl_godhwi16i64o4i": [194, 213], "dnnl_gidhwo16o32i2o": [194, 213], "dnnl_gidhwo16o32i4o": [194, 213], "dnnl_gidhwo16o48i2o": [194, 213], "dnnl_gidhwo16o48i4o": [194, 213], "dnnl_gidhwo16o64i2o": [194, 213], "dnnl_gidhwo16o64i4o": [194, 213], "dnnl_hwiog16g": [194, 213], "dnnl_hwiog8g": [194, 213], "dnnl_hwiog4g": [194, 213], "dnnl_dhwiog16g": [194, 213], "dnnl_dhwiog8g": [194, 213], "dnnl_dhwiog4g": [194, 213], "dnnl_ncdhw40n16c": [194, 213], "dnnl_ncw40n16c": [194, 213], "dnnl_nchw40n16c": [194, 213], "dnnl_ncw40n32c": [194, 213], "dnnl_nchw40n32c": [194, 213], "dnnl_ncdhw40n32c": [194, 213], "dnnl_oidhw4o8i8o2i": [194, 213], "dnnl_oihw4o8i8o2i": [194, 213], "dnnl_oiw4o8i8o2i": [194, 213], "dnnl_goidhw4o8i8o2i": [194, 213], "dnnl_goihw4o8i8o2i": [194, 213], "dnnl_goiw4o8i8o2i": [194, 213], "dnnl_iodhw4i8o8i2o": [194, 213], "dnnl_iohw4i8o8i2o": [194, 213], "dnnl_iow4i8o8i2o": [194, 213], "dnnl_giodhw4i8o8i2o": [194, 213], "dnnl_giohw4i8o8i2o": [194, 213], "dnnl_giow4i8o8i2o": [194, 213], "dnnl_ncw2c32n8c": [194, 213], "dnnl_nchw2c32n8c": [194, 213], "dnnl_ncdhw2c32n8c": [194, 213], "dnnl_oiw2i8o16i4o": [194, 213], "dnnl_oihw2i8o16i4o": [194, 213], "dnnl_oidhw2i8o16i4o": [194, 213], "dnnl_oiw2o8i16o4i": [194, 213], "dnnl_oiw2o8i16o2i": [194, 213], "dnnl_iow2i8o16i4o": [194, 213], "dnnl_iow2i8o16i2o": [194, 213], "dnnl_oihw2o8i16o4i": [194, 213], "dnnl_oihw2o8i16o2i": [194, 213], "dnnl_iohw2i8o16i4o": [194, 213], "dnnl_iohw2i8o16i2o": [194, 213], "dnnl_oidhw2o8i16o4i": [194, 213], "dnnl_oidhw2o8i16o2i": [194, 213], "dnnl_iodhw2i8o16i4o": [194, 213], "dnnl_iodhw2i8o16i2o": [194, 213], "dnnl_goiw2o8i16o2i": [194, 213], "dnnl_giow2i8o16i2o": [194, 213], "dnnl_giohw2i8o16i2o": [194, 213], "dnnl_giodhw2i8o16i2o": [194, 213], "dnnl_goihw2o8i16o2i": [194, 213], "dnnl_goidhw2o8i16o2i": [194, 213], "dnnl_goiw2o8i16o4i": [194, 213], "dnnl_goihw2o8i16o4i": [194, 213], "ndhwc": [194, 213], "data_in_ncdhw": 194, "data_in_ndhwc": 194, "dnnl_memory_desc_destroi": [194, 250, 258, 269, 304, 329, 392, 408, 424], "aka": [194, 265, 266, 432], "alia": [194, 213, 224, 225, 335, 380], "6d": [194, 213], "7d": [194, 213], "8d": [194, 213], "9d": [194, 213], "10d": [194, 213], "11d": [194, 213], "2nd": [194, 213], "sentinel": 194, "incl": 194, "seq_length": [194, 213], "num_lay": [194, 213, 280, 302, 456, 497], "num_direct": [194, 213, 280, 302, 456, 497], "input_channel": [194, 213, 280, 302, 456, 497], "num_gat": [194, 213, 280, 302, 456, 497], "output_channel": [194, 213, 280, 302, 456, 497], "num_channels_in_hidden_st": [194, 213], "num_channels_in_recurrent_project": [194, 213], "dnnl_fpmath_mode_strict": [195, 196, 311, 322, 341], "dnnl_fpmath_mode_bf16": [195, 196, 311, 322, 341], "dnnl_fpmath_mode_f16": [195, 196, 311, 322, 341], "dnnl_fpmath_mode_tf32": [195, 196, 311, 322, 341], "dnnl_fpmath_mode_ani": [195, 196, 311, 322, 341], "bitmask": [197, 358], "dnnl_graph_dump_mode_non": [197, 198, 358], "0x0u": [197, 216], "dnnl_graph_dump_mode_subgraph": [197, 198, 358], "0x1u": [197, 216, 242], "dnnl_graph_dump_mode_graph": [197, 198, 358], "0x2u": [197, 216, 242], "dnnl_graph_layout_type_undef": [199, 201], "dnnl_graph_layout_type_ani": [199, 201, 362], "dnnl_graph_layout_type_strid": [199, 201, 362, 539], "dnnl_graph_layout_type_opaqu": [199, 201, 539], "dnnl_graph_tensor_property_undef": [202, 210], "dnnl_graph_tensor_property_vari": [202, 210], "dnnl_graph_tensor_property_const": [202, 210], "dnnl_graph_tensor_property_host_scalar": [202, 210], "dnnl_graph_op_attr_undef": [203, 204], "dnnl_graph_op_attr_alpha": [203, 204], "dnnl_graph_op_attr_beta": [203, 204], "dnnl_graph_op_attr_epsilon": [203, 204], "dnnl_graph_op_attr_max": [203, 204], "dnnl_graph_op_attr_min": [203, 204], "dnnl_graph_op_attr_momentum": [203, 204], "dnnl_graph_op_attr_scal": [203, 204], "dnnl_graph_op_attr_axi": [203, 204], "dnnl_graph_op_attr_begin_norm_axi": [203, 204], "dnnl_graph_op_attr_group": [203, 204], "dnnl_graph_op_attr_ax": [203, 204], "dnnl_graph_op_attr_dil": [203, 204], "dnnl_graph_op_attr_dst_shap": [203, 204], "dnnl_graph_op_attr_kernel": [203, 204], "dnnl_graph_op_attr_ord": [203, 204], "dnnl_graph_op_attr_output_pad": [203, 204], "dnnl_graph_op_attr_pads_begin": [203, 204], "dnnl_graph_op_attr_pads_end": [203, 204], "dnnl_graph_op_attr_shap": [203, 204], "dnnl_graph_op_attr_s": [203, 204], "dnnl_graph_op_attr_src_shap": [203, 204], "dnnl_graph_op_attr_strid": [203, 204], "dnnl_graph_op_attr_weights_shap": [203, 204], "dnnl_graph_op_attr_zp": [203, 204], "dnnl_graph_op_attr_group_shap": [203, 204], "dnnl_graph_op_attr_exclude_pad": [203, 204], "dnnl_graph_op_attr_keep_dim": [203, 204], "dnnl_graph_op_attr_keep_stat": [203, 204], "dnnl_graph_op_attr_per_channel_broadcast": [203, 204], "dnnl_graph_op_attr_special_zero": [203, 204], "dnnl_graph_op_attr_transpose_a": [203, 204], "dnnl_graph_op_attr_transpose_b": [203, 204], "dnnl_graph_op_attr_use_affin": [203, 204], "dnnl_graph_op_attr_use_dst": [203, 204], "dnnl_graph_op_attr_auto_broadcast": [203, 204], "dnnl_graph_op_attr_auto_pad": [203, 204], "dnnl_graph_op_attr_coordinate_transformation_mod": [203, 204], "dnnl_graph_op_attr_data_format": [203, 204, 539], "dnnl_graph_op_attr_mod": [203, 204], "dnnl_graph_op_attr_qtyp": [203, 204], "dnnl_graph_op_attr_rounding_typ": [203, 204], "dnnl_graph_op_attr_weights_format": [203, 204, 539], "dnnl_graph_op_attr_accumulation_mod": [203, 204], "dnnl_graph_op_attr_end": [203, 204], "illeg": 203, "weight_shap": [203, 204], "gelubackward": [203, 204, 205, 308], "exter": [203, 204], "0x30": 204, "0x40": 204, "0x60": 204, "0x80": 204, "0xff": 204, "input_shap": 204, "dnnl_graph_op_ab": [205, 206], "absbackward": [205, 308], "dnnl_graph_op_abs_backward": [205, 206], "dnnl_graph_op_add": [205, 206], "dnnl_graph_op_avg_pool": [205, 206], "dnnl_graph_op_avg_pool_backward": [205, 206], "batchnormforwardtrain": [205, 308], "dnnl_graph_op_batch_norm_forward_train": [205, 206], "dnnl_graph_op_batch_norm_infer": [205, 206], "batchnormtrainingbackward": [205, 308], "dnnl_graph_op_batch_norm_backward": [205, 206], "dnnl_graph_op_bias_add": [205, 206], "biasaddbackward": [205, 308], "dnnl_graph_op_bias_add_backward": [205, 206], "dnnl_graph_op_clamp": [205, 206], "clampbackward": [205, 308], "dnnl_graph_op_clamp_backward": [205, 206], "dnnl_graph_op_concat": [205, 206], "dnnl_graph_op_convolut": [205, 206], "convolutionbackwarddata": [205, 308], "dnnl_graph_op_convolution_backward_data": [205, 206], "convolutionbackwardweight": [205, 308], "dnnl_graph_op_convolution_backward_weight": [205, 206], "convtranspos": [205, 306, 308], "dnnl_graph_op_conv_transpos": [205, 206], "convtransposebackwarddata": [205, 308], "dnnl_graph_op_conv_transpose_backward_data": [205, 206], "convtransposebackwardweight": [205, 308], "dnnl_graph_op_conv_transpose_backward_weight": [205, 206], "dnnl_graph_op_dequant": [205, 206], "dnnl_graph_op_divid": [205, 206], "dnnl_graph_op_dynamic_dequant": [205, 206], "dnnl_graph_op_dynamic_quant": [205, 206], "dnnl_graph_op_elu": [205, 206], "elubackward": [205, 308], "dnnl_graph_op_elu_backward": [205, 206], "dnnl_graph_op_end": [205, 206], "dnnl_graph_op_exp": [205, 206], "dnnl_graph_op_gelu": [205, 206], "dnnl_graph_op_gelu_backward": [205, 206], "dnnl_graph_op_group_norm": [205, 206], "dnnl_graph_op_hard_sigmoid": [205, 206], "hardsigmoidbackward": [205, 308], "dnnl_graph_op_hard_sigmoid_backward": [205, 206], "dnnl_graph_op_hard_swish": [205, 206], "hardswishbackward": [205, 308], "dnnl_graph_op_hard_swish_backward": [205, 206], "dnnl_graph_op_interpol": [205, 206], "interpolatebackward": [205, 308], "dnnl_graph_op_interpolate_backward": [205, 206], "dnnl_graph_op_layer_norm": [205, 206], "layernormbackward": [205, 308], "dnnl_graph_op_layer_norm_backward": [205, 206], "leakyrelu": [205, 306, 308], "dnnl_graph_op_leaky_relu": [205, 206], "dnnl_graph_op_log": [205, 206], "dnnl_graph_op_log_softmax": [205, 206], "logsoftmaxbackward": [205, 308], "dnnl_graph_op_log_softmax_backward": [205, 206], "dnnl_graph_op_matmul": [205, 206], "dnnl_graph_op_maximum": [205, 206], "dnnl_graph_op_max_pool": [205, 206], "maxpoolbackward": [205, 308], "dnnl_graph_op_max_pool_backward": [205, 206], "dnnl_graph_op_minimum": [205, 206], "dnnl_graph_op_mish": [205, 206], "mishbackward": [205, 308], "dnnl_graph_op_mish_backward": [205, 206], "dnnl_graph_op_multipli": [205, 206], "dnnl_graph_op_pow": [205, 206], "dnnl_graph_op_prelu": [205, 206], "prelubackward": [205, 308], "dnnl_graph_op_prelu_backward": [205, 206], "dnnl_graph_op_quant": [205, 206], "reciproc": [205, 308], "dnnl_graph_op_reciproc": [205, 206], "dnnl_graph_op_reduce_l1": [205, 206], "dnnl_graph_op_reduce_l2": [205, 206], "dnnl_graph_op_reduce_max": [205, 206], "dnnl_graph_op_reduce_mean": [205, 206], "dnnl_graph_op_reduce_min": [205, 206], "dnnl_graph_op_reduce_prod": [205, 206], "dnnl_graph_op_reduce_sum": [205, 206], "dnnl_graph_op_relu": [205, 206], "relubackward": [205, 308], "dnnl_graph_op_relu_backward": [205, 206], "dnnl_graph_op_reord": [205, 206], "dnnl_graph_op_round": [205, 206], "dnnl_graph_op_select": [205, 206], "dnnl_graph_op_sigmoid": [205, 206], "sigmoidbackward": [205, 308], "dnnl_graph_op_sigmoid_backward": [205, 206], "dnnl_graph_op_softmax": [205, 206], "dnnl_graph_op_softmax_backward": [205, 206], "dnnl_graph_op_softplu": [205, 206], "softplusbackward": [205, 308], "dnnl_graph_op_softplus_backward": [205, 206], "dnnl_graph_op_sqrt": [205, 206], "sqrtbackward": [205, 308], "dnnl_graph_op_sqrt_backward": [205, 206], "dnnl_graph_op_squar": [205, 206], "squareddiffer": [205, 308], "dnnl_graph_op_squared_differ": [205, 206], "dnnl_graph_op_static_reshap": [205, 206], "dnnl_graph_op_static_transpos": [205, 206], "dnnl_graph_op_subtract": [205, 206], "dnnl_graph_op_tanh": [205, 206], "tanhbackward": [205, 308], "dnnl_graph_op_tanh_backward": [205, 206], "dnnl_graph_op_type_cast": [205, 206], "dnnl_graph_op_wildcard": [205, 206], "dnnl_graph_op_gen_index": [205, 206], "dnnl_graph_op_greater_equ": [205, 206], "lastsymbol": 205, "dnnl_graph_op_last_symbol": [205, 206], "dnnl_graph_partition_policy_fus": [207, 208], "dnnl_graph_partition_policy_debug": [207, 208], "chian": [207, 208], "dnnl_success": [209, 239, 240, 250, 258, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 367, 368, 376, 378, 392, 408], "out_of_memori": [209, 239], "dnnl_out_of_memori": [209, 239, 240], "invalid_argu": [209, 239, 284, 285, 288, 333, 341, 358, 432, 465, 467], "dnnl_invalid_argu": [209, 239, 240, 311, 329, 333, 341, 355, 356, 357, 358], "last_impl_reach": [209, 239], "dnnl_last_impl_reach": [209, 239, 240, 335], "dnnl_runtime_error": [209, 239, 240, 341], "not_requir": [209, 239], "dnnl_not_requir": [209, 239, 240, 335], "invalid_graph": 209, "dnnl_invalid_graph": [209, 240], "invalid_graph_op": 209, "dnnl_invalid_graph_op": [209, 240], "dnnl_invalid_shap": [209, 240], "invalid_data_typ": 209, "dnnl_invalid_data_typ": [209, 240], "legitim": [209, 240], "bca": 213, "cba": 213, "abdc": 213, "acbd": 213, "adbc": 213, "bacd": 213, "bcda": 213, "cdba": 213, "dcab": 213, "abdec": 213, "bcdea": 213, "cdeba": 213, "decab": 213, "abcdef": 213, "abdfc": 213, "acbdef": 213, "abdefc": 213, "defcab": 213, "abcdf": 213, "abcdefg": 213, "abcdegf": 213, "abcdefgh": 213, "abcdefhg": 213, "abcdefghi": 213, "abcdefgih": 213, "abcdefghij": 213, "abcdefghji": 213, "abcdefghijk": 213, "abcdefghikj": 213, "abcdefghijkl": 213, "abcdefghijlk": 213, "cn": [213, 329], "tn": 213, "nt": 213, "nwc": 213, "chwn": [213, 432], "oi": [213, 261, 262, 410, 412], "oiw": 213, "owi": 213, "wio": 213, "iwo": 213, "oihw": [213, 251, 252, 253, 254, 256, 271, 278, 287, 288, 394, 396, 398, 400, 404, 428, 452, 471, 473], "hwio": 213, "ohwi": 213, "ihwo": 213, "iohw": 213, "oidhw": 213, "dhwio": 213, "odhwi": 213, "iodhw": 213, "idhwo": 213, "goiw": 213, "gowi": 213, "wigo": 213, "gohwi": 213, "goihw": [213, 251, 256, 404], "giohw": 213, "goidhw": 213, "giodhw": 213, "godhwi": 213, "dhwigo": 213, "ntc": 213, "ldigo": [213, 246, 265, 266, 280, 282, 294, 302, 384, 418, 420, 456, 461, 485, 497], "ldgoi": 213, "ldio": 213, "ldoi": 213, "ldgo": [213, 246, 265, 266, 280, 282, 294, 302, 384, 418, 420, 456, 461, 485, 497], "ab16b16a": 213, "ab16b32a": 213, "ab16b48a": 213, "ab16b64a": 213, "ab8b16a2b": 213, "ab8b32a2b": 213, "ab8b64a2b": 213, "ab4b16a4b": 213, "ab4b32a4b": 213, "ab4b64a4b": 213, "ab16b16a4b": 213, "ab16b32a4b": 213, "ab16b48a4b": 213, "ab16b64a4b": 213, "ab16b16a2b": 213, "ab16b32a2b": 213, "ab16b48a2b": 213, "ab16b64a2b": 213, "ab4a": 213, "ab8a": 213, "ab32a": 213, "abc16a": 213, "abc16a16b": 213, "abc4a4b": 213, "abc16b": 213, "abc32b": 213, "abc16b16a": 213, "acb16b16a": 213, "abc16b32a": 213, "acb16b32a": 213, "abc16b48a": 213, "acb16b48a": 213, "abc16b64a": 213, "acb16b64a": 213, "abc4a": 213, "abc4b": 213, "abc4b16a4b": 213, "acb4b16a4b": 213, "abc4b32a4b": 213, "acb4b32a4b": 213, "abc4b64a4b": 213, "acb4b64a4b": 213, "abc2b8a4b": 213, "abc16a16b2a": 213, "abc16b16a4b": 213, "abc16b32a4b": 213, "abc16b48a4b": 213, "abc16b64a4b": 213, "abc16b16a2b": 213, "abc16b32a2b": 213, "abc16b48a2b": 213, "abc16b64a2b": 213, "abc4b4a": 213, "abc8a16b2a": 213, "abc8a8b": 213, "abc8a4b": 213, "abc8b": 213, "abc8b16a2b": 213, "acb8b16a2b": 213, "abc8b32a2b": 213, "acb8b32a2b": 213, "abc8b64a2b": 213, "acb8b64a2b": 213, "abc8b8a": 213, "acb8b8a": 213, "abcd8a": 213, "abcd16a": 213, "abcd32a": 213, "abcd16a16b": 213, "abcd32b": 213, "acdb16b16a": 213, "abcd16b32a": 213, "acdb16b32a": 213, "abcd16b48a": 213, "acdb16b48a": 213, "abcd16b64a": 213, "acdb16b64a": 213, "abcd16b16c": 213, "abcd16c16b": 213, "abcd4a": 213, "abcd4b": 213, "abcd4b16a4b": 213, "acdb4b16a4b": 213, "abcd4b32a4b": 213, "acdb4b32a4b": 213, "abcd4b64a4b": 213, "acdb4b64a4b": 213, "abcd2b8a4b": 213, "abcd4b4a": 213, "abcd4a4b": 213, "abcd4c16b4c": 213, "abcd2c8b4c": 213, "abcd16a16b2a": 213, "abcd16b16a4b": 213, "abcd16b32a4b": 213, "abcd16b48a4b": 213, "abcd16b64a4b": 213, "abcd16b16a2b": 213, "abcd16b32a2b": 213, "abcd16b48a2b": 213, "abcd16b64a2b": 213, "abcd16b16c2b": 213, "abcd16c16b4c": 213, "abcd16c16b2c": 213, "abcd4c4b": 213, "abcd4b4c": 213, "abcd8a16b2a": 213, "abcd8a8b": 213, "abcd8a4b": 213, "abcd8a2b": 213, "abcd8b": [213, 471], "abcd8b16a2b": 213, "acdb8b16a2b": 213, "abcd8b32a2b": 213, "acdb8b32a2b": 213, "abcd8b64a2b": 213, "acdb8b64a2b": 213, "abcd8b16c2b": 213, "abcd8b8a": [213, 471], "acdb8b8a": 213, "abcd8b8c": 213, "abcd8b4c": 213, "abcd8c16b2c": 213, "abcd8c8b": 213, "abcde16a": 213, "abcde32a": 213, "abcde16a16b": 213, "abcde16b": 213, "abcde32b": 213, "abcde16b16a": 213, "acdeb16b16a": 213, "abcde16b32a": 213, "acdeb16b32a": 213, "abcde16b48a": 213, "acdeb16b48a": 213, "abcde16b64a": 213, "acdeb16b64a": 213, "abcde16b16c": 213, "abcde16c16b": 213, "abcde2c8b4c": 213, "abcde4a": 213, "abcde4b": 213, "abcde4b4a": 213, "abcde4a4b": 213, "abcde4b4c": 213, "abcde4c16b4c": 213, "abcde16b16c2b": 213, "abcde16c16b4c": 213, "abcde16c16b2c": 213, "abcdef16c16b2c": 213, "abcde4c4b": 213, "abcde8a": 213, "abcde8a8b": 213, "abcde8a4b": 213, "abcde8b": 213, "abcde8b16a2b": 213, "acdeb8b16a2b": 213, "abcde8b32a2b": 213, "acdeb8b32a2b": 213, "abcde8b64a2b": 213, "acdeb8b64a2b": 213, "abcde4b16a4b": 213, "acdeb4b16a4b": 213, "abcde4b32a4b": 213, "acdeb4b32a4b": 213, "abcde4b64a4b": 213, "acdeb4b64a4b": 213, "abcde16b16a4b": 213, "abcde16b32a4b": 213, "abcde16b48a4b": 213, "abcde16b64a4b": 213, "abcde16b16a2b": 213, "abcde16b32a2b": 213, "abcde16b48a2b": 213, "abcde16b64a2b": 213, "abcde2b8a4b": 213, "abcde8b16c2b": 213, "abcde8b8a": 213, "acdeb8b8a": 213, "abcde8b8c": 213, "abcde8b4c": 213, "abcd4a8b8a4b": 213, "abcd2a8b8a2b": 213, "abcde4b8c8b4c": 213, "abcde2b8c8b2c": 213, "abcde8c16b2c": 213, "abcde8c8b": 213, "abcdef16b": 213, "abcdef16b16c": 213, "abcdef16c16b": 213, "abcdef4b": 213, "abcdef2c8b4c": 213, "abcdef4c4b": 213, "abcdef4b4c": 213, "abcdef8b8c": 213, "abcdef8b4c": 213, "abcdef8c16b2c": 213, "abcdef4c16b4c": 213, "abcdef8c8b": 213, "abdc16b": 213, "abdc4b": 213, "abdc8b": 213, "abdc8b2c": 213, "abdc8b4c": 213, "abdec16b": 213, "abdec4b": 213, "abdec8b": 213, "abdec8b2c": 213, "abdec8b4c": 213, "abdefc16b": 213, "acbdef16c16b": 213, "acbdef8b8c": 213, "acbdef16b16c": 213, "abdefc4b": 213, "abdefc8b": 213, "abdefc8b2c": 213, "abdefc8b4c": 213, "acb16a": 213, "acb4a": 213, "acb8a": 213, "acb8a2b": 213, "acb8a4b": 213, "acbd8b8c": 213, "acbd16b16c": 213, "acbd16c16b": 213, "acbde8b8c": 213, "acbde16b16c": 213, "acbde16c16b": 213, "acdb16a": [213, 473], "acdb4a": 213, "acdb8a": 213, "acdb8a2b": 213, "acdb8a4b": 213, "acdeb16a": 213, "acdeb4a": 213, "acdeb8a": 213, "acdeb8a2b": 213, "acdeb8a4b": 213, "bac8a8b": 213, "bac16a16b": 213, "bac16b16a": 213, "bacd8a8b": 213, "bacd16a16b": 213, "bacd16b16a": 213, "abcd32a32b": 213, "bacde16b16a": 213, "bacde8a8b": 213, "bacde16a16b": 213, "abdec32b": 213, "abcdef16a": 213, "abcdef32a": 213, "acdb32a": 213, "abcd2b4c2b": 213, "abcde2b4c2b": 213, "abcdef2b4c2b": 213, "abcd2c4b2c": 213, "abcde2c4b2c": 213, "abcdef2c4b2c": 213, "abcd4b8c2b": 213, "abcde4b8c2b": 213, "abcdef4b8c2b": 213, "abcd4c8b2c": 213, "abcde4c8b2c": 213, "abcdef4c8b2c": 213, "ab32a32b8a4b": 213, "ab32a32b8a2b": 213, "ab8a4b": 213, "ab8a2b": 213, "abdc16d": 213, "abdc32d": 213, "abdc16d4c": 213, "abdc32d4c": 213, "abcd32c": 213, "abdec16": 213, "abdec32": 213, "abdec16e4c": 213, "abdec32e2c": 213, "abdec32e4c": 213, "abdce16c": 213, "abdce32c": 213, "abdce32c2": 213, "abcdef16c16b4c": 213, "abdc16b4c": 213, "abdec16b4c": 213, "acb16a4b": 213, "acdb16a2b": 213, "abdefc16b4c": 213, "acdeb16a4b": 213, "acb32a": 213, "acb32a2b": 213, "acb32a4b": 213, "acb48a": 213, "acb48a2b": 213, "acb48a4b": 213, "acb64a": 213, "acb64a2b": 213, "acb64a4b": 213, "cba2b": 213, "cba4b": 213, "abdc32b": 213, "abdc32b2c": 213, "abdc32b4c": 213, "abdc48b": 213, "abdc48b2c": 213, "abdc48b4c": 213, "abdc64b": 213, "abdc64b2c": 213, "abdc64b4c": 213, "adcb": 213, "adcb2c": 213, "adcb4c": 213, "acdb32a2b": 213, "acdb32a4b": 213, "acdb48a": 213, "acdb48a2b": 213, "acdb48a4b": 213, "acdb64a": 213, "acdb64a2b": 213, "acdb64a4b": 213, "cdba2b": 213, "cdba4b": 213, "abdec32b2c": 213, "abdec32b4c": 213, "abdec48b": 213, "abdec48b2c": 213, "abdec48b4c": 213, "abdec64b": 213, "abdec64b2c": 213, "abdec64b4c": 213, "adecb": 213, "adecb2c": 213, "adecb4c": 213, "acdeb32a": 213, "acdeb32a2b": 213, "acdeb32a4b": 213, "acdeb48a": 213, "acdeb48a2b": 213, "acdeb48a4b": 213, "acdeb64a": 213, "acdeb64a2b": 213, "acdeb64a4b": 213, "cdeba2b": 213, "cdeba4b": 213, "abdefc32b": 213, "abdefc32b2c": 213, "abdefc32b4c": 213, "abdefc48b": 213, "abdefc48b2c": 213, "abdefc48b4c": 213, "abdefc64b": 213, "abdefc64b2c": 213, "abdefc64b4c": 213, "adefcb": 213, "adefcb2c": 213, "adefcb4c": 213, "abc32a32b": 213, "bac8a16b2a": 213, "bacd8a16b2a": 213, "abcde8a16b2a": 213, "acbd8b16c2b": 213, "bacde8a16b2a": 213, "acbde8b16c2b": 213, "abcde32a32b": 213, "abc4a8b8a4b": 213, "abcde4a8b8a4b": 213, "bac4b8a8b4a": 213, "bacd4b8a8b4a": 213, "bacde4b8a8b4a": 213, "abcd4b8c8b4c": 213, "abcdef4b8c8b4c": 213, "abcdef8b16c2b": 213, "acbdef8b16c2b": 213, "abdc16b2c": 213, "abdec16b2c": 213, "abdefc16b2c": 213, "abedc16b": 213, "acb16a2b": 213, "acdb16a4b": 213, "acdeb16a2b": 213, "adcb16a": 213, "acbd4c8b8c4b": 213, "acbde4c8b8c4b": 213, "acbdef4c8b8c4b": 213, "abc32a16b": 213, "abcd16a32b": 213, "abcd32a16b": 213, "abcde32a16b": 213, "ab48a16b": 213, "ab48a32b": 213, "abc40a16b": 213, "abc40a32b": 213, "abc48b16c": 213, "abc48b32c": 213, "abcd40a16b": 213, "abcd40a32b": 213, "ba16a16b": 213, "ba16a32b": 213, "ba16a48b": 213, "ba16a64b": 213, "ba16a16b2a": 213, "ba16a32b2a": 213, "ba16a48b2a": 213, "ba16a64b2a": 213, "ba16a16b4a": 213, "ba16a32b4a": 213, "ba16a48b4a": 213, "ba16a64b4a": 213, "ba24b8a": 213, "acb24c8b": 213, "abdc24d8c": 213, "decba16a": 213, "decba8a": 213, "defcba16a": 213, "defcba8a": 213, "acb16b16c": 213, "acb16b32c": 213, "acb16b48c": 213, "acb16b64c": 213, "acb16b16c2b": 213, "acb16b32c2b": 213, "acb16b48c2b": 213, "acb16b64c2b": 213, "acb16b16c4b": 213, "acb16b32c4b": 213, "acb16b48c4b": 213, "acb16b64c4b": 213, "acb24a": 213, "acdb24a": 213, "acdeb24a": 213, "abdc24b": 213, "abdec24b": 213, "abdefc24b": 213, "acb24a2b": 213, "acdb24a2b": 213, "acdeb24a2b": 213, "abdc24b2c": 213, "abdec24b2c": 213, "abdefc24b2c": 213, "acb24a4b": 213, "acdb24a4b": 213, "acdeb24a4b": 213, "abdc24b4c": 213, "abdec24b4c": 213, "abdefc24b4c": 213, "ab8b32a": 213, "abc8b32a": 213, "acb8b32a": 213, "abcd8b32a": 213, "acdb8b32a": 213, "abcde8b32a": 213, "acdeb8b32a": 213, "ab8b24a": 213, "abc8b24a": 213, "acb8b24a": 213, "abcd8b24a": 213, "acdb8b24a": 213, "abcde8b24a": 213, "acdeb8b24a": 213, "ab8b16a": 213, "abc8b16a": 213, "acb8b16a": 213, "abcd8b16a": 213, "acdb8b16a": 213, "abcde8b16a": 213, "acdeb8b16a": 213, "ab8b8a": 213, "abdc8d8c": 213, "abdc16d8c": 213, "acb8c8b": 213, "acb16c8b": 213, "ba8b8a": 213, "ba16b8a": 213, "ab2a4b": 213, "format_tag_last": 213, "ncdhw16c": 213, "ncdhw4c": 213, "ncdhw8c": 213, "nchw4c": 213, "ncw16c": 213, "ncw4c": 213, "ncw8c": 213, "ncw16n16c": 213, "nchw16n16c": 213, "ncdhw16n16c": 213, "ncdhw32n32c": 213, "nchw32n32c": 213, "iohw16i16o": 213, "oi16i16o": 213, "oi16i32o": 213, "oi16i48o": 213, "oi16i64o": 213, "oi8i16o2i": 213, "oi8i32o2i": 213, "oi8i64o2i": 213, "oi4i8o4i": 213, "oi4i16o4i": 213, "oi4i24o4i": 213, "oi4i32o4i": 213, "oi4i64o4i": 213, "ohwi32o": 213, "iodhw16i16o": 213, "giohw16i16o": 213, "gohwi32o": 213, "goidhw16g": 213, "iow8o8i": 213, "iow16o16i": 213, "oiw16i16o": 213, "owi16i16o": 213, "oiw16i32o": 213, "owi16i32o": 213, "oiw16i48o": 213, "owi16i48o": 213, "oiw16i64o": 213, "owi16i64o": 213, "iow16i16o": 213, "giow16i16o": 213, "oiw16o16i": 213, "oiw16o": 213, "oiw4i8o4i": 213, "owi4i8o4i": 213, "oiw4i16o4i": 213, "owi4i16o4i": 213, "oiw4i24o4i": 213, "owi4i24o4i": 213, "oiw4i32o4i": 213, "owi4i32o4i": 213, "oiw4i64o4i": 213, "owi4i64o4i": 213, "oiw2i8o4i": 213, "oiw4i4o": 213, "oiw4o4i": 213, "oiw4o": 213, "oiw8i16o2i": 213, "owi8i16o2i": 213, "oiw8i32o2i": 213, "owi8i32o2i": 213, "oiw8i64o2i": 213, "owi8i64o2i": 213, "oiw8i8o": 213, "owi8i8o": 213, "oiw8o16i2o": 213, "oiw8o8i": 213, "oiw8o4i": 213, "oiw16i16o4i": 213, "oiw16i32o4i": 213, "oiw16i48o4i": 213, "oiw16i64o4i": 213, "oiw16i16o2i": 213, "oiw16i32o2i": 213, "oiw16i48o2i": 213, "oiw16i64o2i": 213, "oiw16o16i2o": 213, "owi16o": 213, "owi16o2i": 213, "iwo16i": 213, "iwo16i2o": 213, "iwo16i4o": 213, "owi4o": 213, "owi8o": 213, "owi8o2i": 213, "owi8o4i": 213, "iohw8o8i": 213, "iohw16o16i": 213, "ohwi16o": 213, "ohwi16o2i": 213, "ihwo16i": 213, "ihwo16i2o": 213, "ihwo16i4o": 213, "ohwi4o": 213, "ohwi8o": 213, "ohwi8o2i": 213, "ohwi8o4i": 213, "oihw16i16o": 213, "ohwi16i16o": 213, "oihw16i32o": 213, "ohwi16i32o": 213, "oihw16i48o": 213, "ohwi16i48o": 213, "oihw16i64o": 213, "ohwi16i64o": 213, "oihw16o16i": 213, "oihw16o": 213, "oihw4i8o4i": 213, "ohwi4i8o4i": 213, "oihw4i16o4i": 213, "ohwi4i16o4i": 213, "oihw4i24o4i": 213, "ohwi4i24o4i": 213, "oihw4i32o4i": 213, "ohwi4i32o4i": 213, "oihw4i64o4i": 213, "ohwi4i64o4i": 213, "oihw4i4o": 213, "oihw4o4i": 213, "oihw4o": 213, "oihw8i16o2i": 213, "ohwi8i16o2i": 213, "oihw8i32o2i": 213, "ohwi8i32o2i": 213, "oihw8i64o2i": 213, "ohwi8i64o2i": 213, "oihw8i8o": 213, "ohwi8i8o": 213, "oihw8o16i2o": 213, "oihw8o8i": 213, "oihw8o4i": 213, "oihw2i8o4i": 213, "iodhw8o8i": 213, "iodhw16o16i": 213, "odhwi16o": 213, "odhwi16o2i": 213, "idhwo16i": 213, "idhwo16i2o": 213, "idhwo16i4o": 213, "odhwi4o": 213, "odhwi8o": 213, "odhwi8o2i": 213, "odhwi8o4i": 213, "oidhw16i16o": 213, "odhwi16i16o": 213, "oidhw16i32o": 213, "odhwi16i32o": 213, "oidhw16i48o": 213, "odhwi16i48o": 213, "oidhw16i64o": 213, "odhwi16i64o": 213, "oidhw16o16i": 213, "oidhw16o16i2o": 213, "oidhw16o": 213, "oidhw4i4o": 213, "oidhw4o4i": 213, "oidhw4o": 213, "oidhw8i16o2i": 213, "odhwi8i16o2i": 213, "oidhw8i32o2i": 213, "odhwi8i32o2i": 213, "oidhw8i64o2i": 213, "odhwi8i64o2i": 213, "oidhw4i8o4i": 213, "odhwi4i8o4i": 213, "oidhw4i16o4i": 213, "odhwi4i16o4i": 213, "oidhw16i16o4i": 213, "oidhw16i32o4i": 213, "oidhw16i48o4i": 213, "oidhw16i64o4i": 213, "oidhw16i16o2i": 213, "oidhw16i32o2i": 213, "oidhw16i48o2i": 213, "oidhw16i64o2i": 213, "oidhw4i24o4i": 213, "odhwi4i24o4i": 213, "oidhw4i32o4i": 213, "odhwi4i32o4i": 213, "oidhw4i64o4i": 213, "odhwi4i64o4i": 213, "oidhw2i8o4i": 213, "oidhw8i8o": 213, "odhwi8i8o": 213, "oidhw8o8i": 213, "oidhw8o4i": 213, "giow8o8i": 213, "giow16o16i": 213, "goiw16i16o": 213, "goiw16o16i": 213, "goiw16o": 213, "goiw4i16o4i": 213, "goiw2i8o4i": 213, "goiw4i4o": 213, "goiw4o4i": 213, "goiw4o": 213, "goiw8i16o2i": 213, "goiw8i8o": 213, "goiw8o16i2o": 213, "goiw8o8i": 213, "goiw8o4i": 213, "goiw16i16o4i": 213, "goiw16i16o2i": 213, "goiw16o16i2o": 213, "gowi16o": 213, "gowi16o2i": 213, "giwo16i": 213, "giwo16i2o": 213, "giwo16i4o": 213, "gowi4o": 213, "gowi8o": 213, "gowi8o2i": 213, "gowi8o4i": 213, "goiw8g": 213, "goiw16g": 213, "giohw8o8i": 213, "giohw16o16i": 213, "gohwi16o": 213, "gohwi16o2i": 213, "gihwo16i": 213, "gihwo16i2o": 213, "gihwo16i4o": 213, "gohwi4o": 213, "gohwi8o": 213, "gohwi8o2i": 213, "gohwi8o4i": 213, "goihw16g": 213, "goihw16i16o": 213, "goihw16o16i": 213, "goihw16o": 213, "goihw4i16o4i": 213, "goihw2i8o4i": 213, "goihw4i4o": 213, "goihw4o4i": 213, "goihw4o": 213, "goihw8g": 213, "goihw8i16o2i": 213, "goihw8i8o": 213, "goihw8o16i2o": 213, "oiw4o8i8o4i": 213, "oidhw4o8i8o4i": 213, "oihw4o8i8o4i": 213, "oihw2o8i8o2i": 213, "goiw4o8i8o4i": 213, "goidhw4o8i8o4i": 213, "goihw4o8i8o4i": 213, "goihw2o8i8o2i": 213, "oihw16i16o4i": 213, "oihw16i32o4i": 213, "oihw16i48o4i": 213, "oihw16i64o4i": 213, "oihw16i16o2i": 213, "oihw16i32o2i": 213, "oihw16i48o2i": 213, "oihw16i64o2i": 213, "oihw16o16i2o": 213, "goihw16i16o4i": 213, "goihw16i16o2i": 213, "goihw16o16i2o": 213, "goihw8o8i": 213, "goihw8o4i": 213, "giodhw16i16o": 213, "giodhw8o8i": 213, "giodhw16o16i": 213, "godhwi16o": 213, "godhwi16o2i": 213, "gidhwo16i": 213, "gidhwo16i2o": 213, "gidhwo16i4o": 213, "godhwi4o": 213, "godhwi8o": 213, "godhwi8o2i": 213, "godhwi8o4i": 213, "goidhw16i16o": 213, "goidhw16o16i": 213, "goidhw16o16i2o": 213, "goidhw16o": 213, "goidhw4i4o": 213, "goidhw4o4i": 213, "goidhw4o": 213, "goidhw8i16o2i": 213, "goidhw4i16o4i": 213, "goidhw16i16o4i": 213, "goidhw16i16o2i": 213, "goidhw2i8o4i": 213, "goidhw8i8o": 213, "goidhw8o8i": 213, "goidhw8o4i": 213, "goiw2i4o2i": 213, "goihw2i4o2i": 213, "goidhw2i4o2i": 213, "goiw2o4i2o": 213, "goihw2o4i2o": 213, "goidhw2o4i2o": 213, "goiw4i8o2i": 213, "goihw4i8o2i": 213, "goidhw4i8o2i": 213, "goiw4o8i2o": 213, "goihw4o8i2o": 213, "goidhw4o8i2o": 213, "ldoi16o": 213, "ldoi32o": 213, "ldoi16o4i": 213, "ldoi32o4i": 213, "ldgoi16o": 213, "ldgoi16o4i": 213, "ldgoi32o": 213, "ldgoi32o2i": 213, "ldgoi32o4i": 213, "owi16o4i": 213, "ohwi16o4i": 213, "gowi16o4i": 213, "gohwi16o4i": 213, "odhwi16o4i": 213, "godhwi16o4i": 213, "owi32o": 213, "owi32o2i": 213, "owi32o4i": 213, "owi48o": 213, "owi48o2i": 213, "owi48o4i": 213, "owi64o": 213, "owi64o2i": 213, "owi64o4i": 213, "iwo32i": 213, "iwo32i2o": 213, "iwo32i4o": 213, "iwo48i": 213, "iwo48i2o": 213, "iwo48i4o": 213, "iwo64i": 213, "iwo64i2o": 213, "iwo64i4o": 213, "wio2i": 213, "wio4i": 213, "gowi32o": 213, "gowi32o2i": 213, "gowi32o4i": 213, "gowi48o": 213, "gowi48o2i": 213, "gowi48o4i": 213, "gowi64o": 213, "gowi64o2i": 213, "gowi64o4i": 213, "giwo32i": 213, "giwo32i2o": 213, "giwo32i4o": 213, "giwo48i": 213, "giwo48i2o": 213, "giwo48i4o": 213, "giwo64i": 213, "giwo64i2o": 213, "giwo64i4o": 213, "gwio": 213, "gwio2i": 213, "gwio4i": 213, "ohwi32o2i": 213, "ohwi32o4i": 213, "ohwi48o": 213, "ohwi48o2i": 213, "ohwi48o4i": 213, "ohwi64o": 213, "ohwi64o2i": 213, "ohwi64o4i": 213, "ihwo32i": 213, "ihwo32i2o": 213, "ihwo32i4o": 213, "ihwo48i": 213, "ihwo48i2o": 213, "ihwo48i4o": 213, "ihwo64i": 213, "ihwo64i2o": 213, "ihwo64i4o": 213, "hwio2i": 213, "hwio4i": 213, "gohwi32o2i": 213, "gohwi32o4i": 213, "gohwi48o": 213, "gohwi48o2i": 213, "gohwi48o4i": 213, "gohwi64o": 213, "gohwi64o2i": 213, "gohwi64o4i": 213, "gihwo32i": 213, "gihwo32i2o": 213, "gihwo32i4o": 213, "gihwo48i": 213, "gihwo48i2o": 213, "gihwo48i4o": 213, "gihwo64i": 213, "gihwo64i2o": 213, "gihwo64i4o": 213, "ghwio": 213, "ghwio2i": 213, "ghwio4i": 213, "odhwi32o": 213, "odhwi32o2i": 213, "odhwi32o4i": 213, "odhwi48o": 213, "odhwi48o2i": 213, "odhwi48o4i": 213, "odhwi64o": 213, "odhwi64o2i": 213, "odhwi64o4i": 213, "idhwo32i": 213, "idhwo32i2o": 213, "idhwo32i4o": 213, "idhwo48i": 213, "idhwo48i2o": 213, "idhwo48i4o": 213, "idhwo64i": 213, "idhwo64i2o": 213, "idhwo64i4o": 213, "dhwio2i": 213, "dhwio4i": 213, "godhwi32o": 213, "godhwi32o2i": 213, "godhwi32o4i": 213, "godhwi48o": 213, "godhwi48o2i": 213, "godhwi48o4i": 213, "godhwi64o": 213, "godhwi64o2i": 213, "godhwi64o4i": 213, "gidhwo32i": 213, "gidhwo32i2o": 213, "gidhwo32i4o": 213, "gidhwo48i": 213, "gidhwo48i2o": 213, "gidhwo48i4o": 213, "gidhwo64i": 213, "gidhwo64i2o": 213, "gidhwo64i4o": 213, "gdhwio": 213, "gdhwio2i": 213, "gdhwio4i": 213, "ldio32i": 213, "ldgio16i": 213, "ldgio32i": 213, "ldgio32i2o": 213, "ncdhw32c": 213, "nchw32c": 213, "ncw32c": 213, "ncw32n16c": 213, "nchw32n16c": 213, "ncdhw32n16c": 213, "ncw32n32c": 213, "oi16i16o4i": 213, "iow8o16i2o": 213, "iohw8o16i2o": 213, "owhi16o": 213, "oidhw8o16i2o": 213, "iodhw8o16i2o": 213, "goiw4g": 213, "giow8o16i2o": 213, "goiw32g": 213, "goihw4g": 213, "giohw8o16i2o": 213, "goihw32g": 213, "gowhi16o": 213, "iow4i8o8i4o": 213, "iohw4i8o8i4o": 213, "iodhw4i8o8i4o": 213, "giow4i8o8i4o": 213, "giohw4i8o8i4o": 213, "giodhw4i8o8i4o": 213, "goidhw8o16i2o": 213, "giodhw8o16i2o": 213, "goidhw32g": 213, "oi16i32o4i": 213, "oi16i48o4i": 213, "oi16i64o4i": 213, "oi16i16o2i": 213, "oi16i32o2i": 213, "oi16i48o2i": 213, "oi16i64o2i": 213, "abdec16c16b4c": 213, "acb16b16a2b": 213, "abdc16c16b2c": 213, "acb16b16a4b": 213, "abdc16c16b4c": 213, "acdb16b16a2b": 213, "abdefc16c16b4c": 213, "acdeb16b16a4b": 213, "acb16b32a2b": 213, "acb16b32a4b": 213, "acb16b48a2b": 213, "acb16b48a4b": 213, "acb16b64a2b": 213, "acb16b64a4b": 213, "abdc16c32b2c": 213, "abdc16c32b4c": 213, "abdc16c48b2c": 213, "abdc16c48b4c": 213, "abdc16c64b2c": 213, "abdc16c64b4c": 213, "acdb16b32a2b": 213, "acdb16b32a4b": 213, "acdb16b48a2b": 213, "acdb16b48a4b": 213, "acdb16b64a2b": 213, "acdb16b64a4b": 213, "abdec16c32b2c": 213, "abdec16c32b4c": 213, "abdec16c48b2c": 213, "abdec16c48b4c": 213, "abdec16c64b2c": 213, "abdec16c64b4c": 213, "acdeb16b32a2b": 213, "acdeb16b32a4b": 213, "acdeb16b48a2b": 213, "acdeb16b48a4b": 213, "acdeb16b64a2b": 213, "acdeb16b64a4b": 213, "abdefc16c32b2c": 213, "abdefc16c32b4c": 213, "abdefc16c48b2c": 213, "abdefc16c48b4c": 213, "abdefc16c64b2c": 213, "abdefc16c64b4c": 213, "owi16i16o2i": 213, "gowi16i16o2i": 213, "ohwi16i16o2i": 213, "gohwi16i16o2i": 213, "odhwi16i16o2i": 213, "godhwi16i16o2i": 213, "owi16i16o4i": 213, "gowi16i16o4i": 213, "ohwi16i16o4i": 213, "gohwi16i16o4i": 213, "odhwi16i16o4i": 213, "godhwi16i16o4i": 213, "owi16i32o2i": 213, "owi16i32o4i": 213, "owi16i48o2i": 213, "owi16i48o4i": 213, "owi16i64o2i": 213, "owi16i64o4i": 213, "gowi16i32o2i": 213, "gowi16i32o4i": 213, "gowi16i48o2i": 213, "gowi16i48o4i": 213, "gowi16i64o2i": 213, "gowi16i64o4i": 213, "ohwi16i32o2i": 213, "ohwi16i32o4i": 213, "ohwi16i48o2i": 213, "ohwi16i48o4i": 213, "ohwi16i64o2i": 213, "ohwi16i64o4i": 213, "gohwi16i32o2i": 213, "gohwi16i32o4i": 213, "gohwi16i48o2i": 213, "gohwi16i48o4i": 213, "gohwi16i64o2i": 213, "gohwi16i64o4i": 213, "odhwi16i32o2i": 213, "odhwi16i32o4i": 213, "odhwi16i48o2i": 213, "odhwi16i48o4i": 213, "odhwi16i64o2i": 213, "odhwi16i64o4i": 213, "idhwo16o32i2o": 213, "idhwo16o32i4o": 213, "idhwo16o48i2o": 213, "idhwo16o48i4o": 213, "idhwo16o64i2o": 213, "idhwo16o64i4o": 213, "godhwi16i32o2i": 213, "godhwi16i32o4i": 213, "godhwi16i48o2i": 213, "godhwi16i48o4i": 213, "godhwi16i64o2i": 213, "godhwi16i64o4i": 213, "gidhwo16o32i2o": 213, "gidhwo16o32i4o": 213, "gidhwo16o48i2o": 213, "gidhwo16o48i4o": 213, "gidhwo16o64i2o": 213, "gidhwo16o64i4o": 213, "iwo16o16i2o": 213, "iwo16o16i4o": 213, "ihwo16o16i2o": 213, "ihwo16o16i4o": 213, "idhwo16o16i2o": 213, "idhwo16o16i4o": 213, "giwo16o16i2o": 213, "giwo16o16i4o": 213, "gihwo16o16i2o": 213, "gihwo16o16i4o": 213, "gidhwo16o16i2o": 213, "gidhwo16o16i4o": 213, "iwo16o32i2o": 213, "iwo16o32i4o": 213, "iwo16o48i2o": 213, "iwo16o48i4o": 213, "iwo16o64i2o": 213, "iwo16o64i4o": 213, "giwo16o32i2o": 213, "giwo16o32i4o": 213, "giwo16o48i2o": 213, "giwo16o48i4o": 213, "giwo16o64i2o": 213, "giwo16o64i4o": 213, "ihwo16o32i2o": 213, "ihwo16o32i4o": 213, "ihwo16o48i2o": 213, "ihwo16o48i4o": 213, "ihwo16o64i2o": 213, "ihwo16o64i4o": 213, "gihwo16o32i2o": 213, "gihwo16o32i4o": 213, "gihwo16o48i2o": 213, "gihwo16o48i4o": 213, "gihwo16o64i2o": 213, "gihwo16o64i4o": 213, "abdec16c16b2c": 213, "abdefc16c16b2c": 213, "acdb16b16a4b": 213, "acdeb16b16a2b": 213, "hwiog16g": 213, "hwiog8g": 213, "dhwiog16g": 213, "dhwiog8g": 213, "abc4a2b": 213, "abc8a2b": 213, "abcd4a2b": 213, "abcde4a2b": 213, "abcde8a2b": 213, "abcd4a8b8a2b": 213, "ncdhw40n32c": 213, "nchw40n32c": 213, "ncw40n32c": 213, "oidhw4o8i8o2i": 213, "oihw4o8i8o2i": 213, "oiw4o8i8o2i": 213, "goidhw4o8i8o2i": 213, "goihw4o8i8o2i": 213, "goiw4o8i8o2i": 213, "iodhw4i8o8i2o": 213, "iohw4i8o8i2o": 213, "iow4i8o8i2o": 213, "giodhw4i8o8i2o": 213, "giohw4i8o8i2o": 213, "giow4i8o8i2o": 213, "abcd8b2c": 213, "abcde40a16b": 213, "abcde40a32b": 213, "abcde8b2c": 213, "abcde4a8b8a2b": 213, "abc4a8b8a2b": 213, "abcdef4b8c8b2c": 213, "abcde4b8c8b2c": 213, "abcd4b8c8b2c": 213, "bacde4b8a8b2a": 213, "bacd4b8a8b2a": 213, "bac4b8a8b2a": 213, "acbdef4c8b8c2b": 213, "acbde4c8b8c2b": 213, "acbd4c8b8c2b": 213, "abcdef8b2c": 213, "ab32a16b": 213, "ab32a32b": 213, "ba4b8a8b2a": 213, "ba4b8a8b4a": 213, "abc32b16c": 213, "abc32b32c": 213, "acb4c8b8c2b": 213, "acb4c8b8c4b": 213, "abc2b8a16b4a": 213, "abcd2b8a16b4a": 213, "abcde2b8a16b4a": 213, "abc2a8b16a4b": 213, "abc2a8b16a2b": 213, "abc2b32a8b": 213, "abcd2a8b16a4b": 213, "abcd2a8b16a2b": 213, "acbd2c8b16c2b": 213, "abcd2b32a8b": 213, "abcd2c8b16c2b": 213, "abcde2a8b16a4b": 213, "abcde2a8b16a2b": 213, "acbde2c8b16c2b": 213, "abcde2b32a8b": 213, "abc2b8c16b2c": 213, "abcd2b8c16b2c": 213, "abcde2b8c16b2c": 213, "abcdef2b8c16b2c": 213, "bacde2b8a16b4a": 213, "bacd2b8a16b4a": 213, "bac2b8a16b4a": 213, "bacde2b8a16b2a": 213, "bacd2b8a16b2a": 213, "bac2b8a16b2a": 213, "abcde2c8b16c2b": 213, "abcdef2c8b16c2b": 213, "acbdef2c8b16c2b": 213, "abcd2b8c16b4c": 213, "abcde2b8c16b4c": 213, "ncdhw40n16c": 213, "ncw40n16c": 213, "nchw40n16c": 213, "ncw2c32n8c": 213, "nchw2c32n8c": 213, "ncdhw2c32n8c": 213, "oiw2i8o16i4o": 213, "oihw2i8o16i4o": 213, "oidhw2i8o16i4o": 213, "oiw2o8i16o4i": 213, "oiw2o8i16o2i": 213, "iow2i8o16i4o": 213, "iow2i8o16i2o": 213, "oihw2o8i16o4i": 213, "oihw2o8i16o2i": 213, "iohw2i8o16i4o": 213, "iohw2i8o16i2o": 213, "oidhw2o8i16o4i": 213, "oidhw2o8i16o2i": 213, "iodhw2i8o16i4o": 213, "iodhw2i8o16i2o": 213, "goiw2o8i16o2i": 213, "giow2i8o16i2o": 213, "giohw2i8o16i2o": 213, "giodhw2i8o16i2o": 213, "goihw2o8i16o2i": 213, "goidhw2o8i16o2i": 213, "goiw2o8i16o4i": 213, "goihw2o8i16o4i": 213, "ba4b8a16b2a": 213, "ba4b8a16b4a": 213, "acb4c8b16c2b": 213, "acb4c8b16c4b": 213, "acb16c2b": 213, "acb16c4b": 213, "ba16b2a": 213, "ba16b4a": 213, "ba4b4a": 213, "ba8b4a": 213, "abc16b16c": 213, "abc16b32c": 213, "ab16a16b": 213, "ab16a32b": 213, "abcde16a16b2a": 213, "abcdef16b16c2b": 213, "acedb16a": 213, "abdfec16b": 213, "odwhi16o": 213, "godwhi16o": 213, "abdec64e2c": 213, "abdec64e4c": 213, "ldgoi64o2i": 213, "ldgoi64o4i": 213, "abcd4c": 213, "abcde4c": 213, "abcdef4c": 213, "abcde32c": 213, "abcdef32c": 213, "acdefb16b32c2b": 213, "acdefb16b32c4b": 213, "acdefb16b48c2b": 213, "acdefb16b48c4b": 213, "acdefb16b64c2b": 213, "acdefb16b64c4b": 213, "bcdea16a32b2a": 213, "bcdea16a32b4a": 213, "bcdea16a48b2a": 213, "bcdea16a48b4a": 213, "bcdea16a64b2a": 213, "bcdea16a64b4a": 213, "acdefb32c": 213, "acdefb32c2b": 213, "acdefb32c4b": 213, "acdefb48c": 213, "acdefb48c2b": 213, "acdefb48c4b": 213, "acdefb64c": 213, "acdefb64c2b": 213, "acdefb64c4b": 213, "bcdea32b": 213, "bcdea32b2a": 213, "bcdea32b4a": 213, "bcdea48b": 213, "bcdea48b2a": 213, "bcdea48b4a": 213, "bcdea64b": 213, "bcdea64b2a": 213, "bcdea64b4a": 213, "bca32b": 213, "bca32b2a": 213, "bca32b4a": 213, "bca48b": 213, "bca48b2a": 213, "bca48b4a": 213, "bca64b": 213, "bca64b2a": 213, "bca64b4a": 213, "acdb32c": 213, "acdb32c2b": 213, "acdb32c4b": 213, "acdb48c": 213, "acdb48c2b": 213, "acdb48c4b": 213, "acdb64c": 213, "acdb64c2b": 213, "acdb64c4b": 213, "bca16a16b2a": 213, "bca16a16b4a": 213, "bcda16a16b2a": 213, "bcda16a16b4a": 213, "bcdea16a16b2a": 213, "bcdea16a16b4a": 213, "acdb16b16c2b": 213, "acdb16b16c4b": 213, "acdeb16b16c2b": 213, "acdeb16b16c4b": 213, "acdefb16b16c2b": 213, "acdefb16b16c4b": 213, "bca16a32b2a": 213, "bca16a32b4a": 213, "bca16a48b2a": 213, "bca16a48b4a": 213, "bca16a64b2a": 213, "bca16a64b4a": 213, "acdb16b32c2b": 213, "acdb16b32c4b": 213, "acdb16b48c2b": 213, "acdb16b48c4b": 213, "acdb16b64c2b": 213, "acdb16b64c4b": 213, "bcda16a32b2a": 213, "bcda16a32b4a": 213, "bcda16a48b2a": 213, "bcda16a48b4a": 213, "bcda16a64b2a": 213, "bcda16a64b4a": 213, "acdeb16b32c2b": 213, "acdeb16b32c4b": 213, "acdeb16b48c2b": 213, "acdeb16b48c4b": 213, "acdeb16b64c2b": 213, "acdeb16b64c4b": 213, "bca16b": 213, "bca16b2a": 213, "bca16b4a": 213, "bcda16b": 213, "bcda16b2a": 213, "bcda16b4a": 213, "bcdea16b": 213, "bcdea16b2a": 213, "bcdea16b4a": 213, "acdb16c": 213, "acdb16c2b": 213, "acdb16c4b": 213, "acdeb16c": 213, "acdeb16c2b": 213, "acdeb16c4b": 213, "acdefb16c": 213, "acdefb16c2b": 213, "acdefb16c4b": 213, "bcda32b": 213, "bcda32b2a": 213, "bcda32b4a": 213, "bcda48b": 213, "bcda48b2a": 213, "bcda48b4a": 213, "bcda64b": 213, "bcda64b2a": 213, "bcda64b4a": 213, "acdeb32c": 213, "acdeb32c2b": 213, "acdeb32c4b": 213, "acdeb48c": 213, "acdeb48c2b": 213, "acdeb48c4b": 213, "acdeb64c": 213, "acdeb64c2b": 213, "acdeb64c4b": 213, "nchw16n32c": 213, "goiw4i": 213, "goiw32i": 213, "goihw4i": 213, "goihw32i": 213, "goidhw4i": 213, "goidhw32i": 213, "cab": 213, "cdab": 213, "cdeab": 213, "woi": 213, "hwoi": 213, "dhwoi": 213, "owi24o": 213, "ohwi24o": 213, "odhwi24o": 213, "gowi24o": 213, "gohwi24o": 213, "godhwi24o": 213, "owi24o2i": 213, "ohwi24o2i": 213, "odhwi24o2i": 213, "gowi24o2i": 213, "gohwi24o2i": 213, "godhwi24o2i": 213, "owi24o4i": 213, "ohwi24o4i": 213, "odhwi24o4i": 213, "gowi24o4i": 213, "gohwi24o4i": 213, "godhwi24o4i": 213, "oi8i32o": 213, "oiw8i32o": 213, "owi8i32o": 213, "oihw8i32o": 213, "ohwi8i32o": 213, "oidhw8i32o": 213, "odhwi8i32o": 213, "oi8i24o": 213, "oiw8i24o": 213, "owi8i24o": 213, "oihw8i24o": 213, "ohwi8i24o": 213, "oidhw8i24o": 213, "odhwi8i24o": 213, "oi8i16o": 213, "oiw8i16o": 213, "owi8i16o": 213, "oihw8i16o": 213, "ohwi8i16o": 213, "oidhw8i16o": 213, "odhwi8i16o": 213, "oi8i8o": 213, "ab4b8a4b": 213, "ab4b24a4b": 213, "abc4b8a4b": 213, "acb4b8a4b": 213, "abc4b24a4b": 213, "acb4b24a4b": 213, "abcd4b8a4b": 213, "acdb4b8a4b": 213, "abcd4b24a4b": 213, "acdb4b24a4b": 213, "abcde4b8a4b": 213, "acdeb4b8a4b": 213, "abcde4b24a4b": 213, "acdeb4b24a4b": 213, "bca8b": 213, "bca8b2a": 213, "bcda8b": 213, "bcda8b2a": 213, "bcdea8b": 213, "bcdea8b2a": 213, "acdb8c": 213, "acdb8c2b": 213, "acdeb8c": 213, "acdeb8c2b": 213, "acdefb8c": 213, "acdefb8c2b": 213, "bca24b": 213, "bca24b2a": 213, "bcda24b": 213, "bcda24b2a": 213, "bcdea24b": 213, "bcdea24b2a": 213, "acdb24c": 213, "acdb24c2b": 213, "acdeb24c": 213, "acdeb24c2b": 213, "acdefb24c": 213, "acdefb24c2b": 213, "iwo8i": 213, "iwo8i2o": 213, "iwo24i": 213, "iwo24i2o": 213, "ihwo8i": 213, "ihwo8i2o": 213, "ihwo24i": 213, "ihwo24i2o": 213, "idhwo8i": 213, "idhwo8i2o": 213, "idhwo24i": 213, "idhwo24i2o": 213, "giwo8i": 213, "giwo8i2o": 213, "giwo24i": 213, "giwo24i2o": 213, "gihwo8i": 213, "gihwo8i2o": 213, "gihwo24i": 213, "gihwo24i2o": 213, "gidhwo8i": 213, "gidhwo8i2o": 213, "gidhwo24i": 213, "gidhwo24i2o": 213, "ab8b24a2b": 213, "abc8b24a2b": 213, "acb8b24a2b": 213, "abcd8b24a2b": 213, "acdb8b24a2b": 213, "abcde8b24a2b": 213, "acdeb8b24a2b": 213, "ab8b8a2b": 213, "abc8b8a2b": 213, "acb8b8a2b": 213, "abcd8b8a2b": 213, "acdb8b8a2b": 213, "abcde8b8a2b": 213, "acdeb8b8a2b": 213, "oi8i8o2i": 213, "oi8i24o2i": 213, "oiw8i8o2i": 213, "owi8i8o2i": 213, "oiw8i24o2i": 213, "owi8i24o2i": 213, "oihw8i8o2i": 213, "ohwi8i8o2i": 213, "oihw8i24o2i": 213, "ohwi8i24o2i": 213, "oidhw8i8o2i": 213, "odhwi8i8o2i": 213, "oidhw8i24o2i": 213, "odhwi8i24o2i": 213, "bca8b4a": 213, "bcda8b4a": 213, "bcdea8b4a": 213, "acdb8c4b": 213, "acdeb8c4b": 213, "acdefb8c4b": 213, "bca24b4a": 213, "bcda24b4a": 213, "bcdea24b4a": 213, "acdb24c4b": 213, "acdeb24c4b": 213, "acdefb24c4b": 213, "abc16a4b": 213, "abcd16a4b": 213, "abcde16a4b": 213, "iwo8i4o": 213, "iwo24i4o": 213, "ihwo8i4o": 213, "ihwo24i4o": 213, "idhwo8i4o": 213, "idhwo24i4o": 213, "giwo8i4o": 213, "giwo24i4o": 213, "gihwo8i4o": 213, "gihwo24i4o": 213, "gidhwo8i4o": 213, "gidhwo24i4o": 213, "ba2a24b": 213, "acb2b24c": 213, "ba2a8b": 213, "acb2b8c": 213, "ba8a24b": 213, "acb8b24c": 213, "ba8a16b": 213, "acb8b16c": 213, "ba8a8b": 213, "acb8b8c": 213, "bcad": 213, "cabd": 213, "dabc": 213, "decba4a": 213, "defcba4a": 213, "hwiog4g": 213, "dhwiog4g": 213, "dnnl_sparse_encoding_undef": [214, 238], "dnnl_csr": [214, 238], "dnnl_pack": [214, 238], "dnnl_coo": [214, 238], "unstructur": [214, 238], "sparsiti": [214, 238], "use_global_stat": 215, "use_scal": [215, 247, 276, 279, 386, 448, 454], "use_shift": [215, 247, 276, 279, 386, 448, 454], "fuse_norm_relu": [215, 247, 386], "fuse_norm_add_relu": 215, "rms_norm": 215, "0x4u": 216, "0x8u": 216, "0x10u": 216, "0x20u": 216, "dnnl_ocl_interop_usm": [217, 218, 330, 376], "dnnl_ocl_interop_buff": [217, 218, 330, 376], "dnnl_ocl_typ": 218, "dnnl_pack_type_undef": [219, 245], "dnnl_pack_type_no_tran": [219, 245, 350], "dnnl_pack_type_tran": [219, 245, 350], "dnnl_pack_type_pack32": [219, 245, 349], "guard": [219, 245], "dnnl_undefined_primit": [220, 221, 311], "dnnl_reorder": [220, 221], "dnnl_shuffl": [220, 221], "dnnl_concat": [220, 221], "dnnl_sum": [220, 221, 311], "dnnl_convolut": [220, 221, 311, 587], "dnnl_deconvolut": [220, 221], "dnnl_eltwis": [220, 221, 311], "dnnl_lrn": [220, 221], "dnnl_batch_norm": [220, 221], "dnnl_inner_product": [220, 221], "dnnl_rnn": [220, 221], "dnnl_binari": [220, 221, 311, 587], "dnnl_matmul": [220, 221], "dnnl_resampl": [220, 221], "dnnl_pool": [220, 221], "dnnl_reduct": [220, 221], "dnnl_prelu": [220, 221], "dnnl_softmax": [220, 221], "dnnl_layer_norm": [220, 221], "dnnl_group_norm": [220, 221], "summat": [220, 230, 231, 618], "dnnl_gemm": 221, "dnnl_primitive_kind_max": 221, "dnnl_profiling_data_kind_undef": [222, 223], "dnnl_profiling_data_kind_tim": [222, 223], "nanosecond": [222, 223], "dnnl_profiling_data_max": 223, "dnnl_prop_kind_undef": [224, 225], "dnnl_forward": [224, 225, 250, 258, 269, 392, 408, 424], "dnnl_backward_weight": [224, 225], "backward_bia": 224, "dnnl_backward_bia": [224, 225], "160": 225, "192": [225, 251, 473], "193": 225, "dnnl_quantization_mode_undef": [226, 227], "spec": [226, 227, 284, 465], "dnnl_query_undef": [228, 229], "dnnl_query_engin": [228, 229], "primitive_kind": 228, "dnnl_query_primitive_kind": [228, 229], "num_of_inputs_s32": 228, "dnnl_query_num_of_inputs_s32": [228, 229, 335], "num_of_outputs_s32": 228, "dnnl_query_num_of_outputs_s32": [228, 229, 335], "time_estimate_f64": 228, "dnnl_query_time_estimate_f64": [228, 229], "dnnl_query_memory_consumption_s64": [228, 229], "scratchpad_engin": [228, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "dnnl_query_scratchpad_engin": [228, 229], "reorder_src_engin": 228, "dnnl_query_reorder_src_engin": [228, 229], "reorder_dst_engin": 228, "dnnl_query_reorder_dst_engin": [228, 229], "dnnl_query_impl_info_str": [228, 229, 335], "dnnl_query_prop_kind": [228, 229], "cache_blob_id_size_s64": 228, "dnnl_query_cache_blob_id_size_s64": [228, 229], "cache_blob_id": [228, 304, 330, 376], "dnnl_query_cache_blob_id": [228, 229], "dnnl_query_dil": [228, 229], "dnnl_query_padding_l": [228, 229], "dnnl_query_padding_r": [228, 229], "epsilon_f32": 228, "dnnl_query_epsilon_f32": [228, 229], "dnnl_query_flag": [228, 229], "alg_kind": [228, 304, 311, 313, 317, 319, 320, 327, 331, 337, 339, 343], "dnnl_query_alg_kind": [228, 229], "alpha_f32": 228, "dnnl_query_alpha_f32": [228, 229], "beta_f32": 228, "dnnl_query_beta_f32": [228, 229], "axis_s32": 228, "dnnl_query_axis_s32": [228, 229], "local_size_s64": 228, "dnnl_query_local_size_s64": [228, 229], "k_f32": 228, "dnnl_query_k_f32": [228, 229], "p_f32": 228, "dnnl_query_p_f32": [228, 229], "dnnl_query_factor": [228, 229], "cell_kind": [228, 607], "dnnl_query_cell_kind": [228, 229], "dnnl_query_direct": [228, 229], "activation_kind": 228, "dnnl_query_activation_kind": [228, 229], "dnnl_query_kernel": [228, 229], "group_size_s64": 228, "dnnl_query_group_size_s64": [228, 229], "src_md": [228, 247, 249, 250, 255, 264, 272, 273, 276, 278, 279, 281, 283, 284, 289, 290, 291, 292, 293, 295, 296, 297, 386, 390, 392, 402, 416, 430, 432, 448, 452, 454, 459, 463, 465, 475, 477, 479, 481, 483, 487, 489, 491, 598, 602], "dnnl_query_src_md": [228, 229, 250, 258, 335, 392, 408], "diff_src_md": 228, "dnnl_query_diff_src_md": [228, 229], "dnnl_query_weights_md": [228, 229, 250, 258, 335, 392, 408], "diff_weights_md": 228, "dnnl_query_diff_weights_md": [228, 229, 258, 408], "dst_md": [228, 247, 248, 250, 261, 262, 264, 272, 276, 278, 279, 281, 283, 284, 289, 290, 291, 292, 293, 295, 296, 386, 388, 392, 410, 412, 416, 430, 448, 452, 454, 459, 463, 465, 475, 477, 479, 481, 483, 487, 489, 598, 602], "dnnl_query_dst_md": [228, 229, 250, 258, 335, 392, 408], "diff_dst_md": 228, "dnnl_query_diff_dst_md": [228, 229, 258, 408], "dnnl_query_workspace_md": [228, 229, 250, 258, 335, 392, 408], "dnnl_query_scratchpad_md": [228, 229], "dnnl_query_exec_arg_md": [228, 229, 330, 335, 346], "ndims_s32": 228, "dnnl_query_ndims_s32": [228, 229, 329], "dnnl_query_dim": [228, 229, 329], "dnnl_query_data_typ": [228, 229, 329], "submemory_offset_s64": 228, "dnnl_query_submemory_offset_s64": [228, 229, 329], "padded_dim": [228, 329, 335, 581], "dnnl_query_padded_dim": [228, 229, 329], "padded_offset": 228, "dnnl_query_padded_offset": [228, 229, 329], "dnnl_query_format_kind": [228, 229, 329], "inner_nblks_s32": 228, "dnnl_query_inner_nblks_s32": [228, 229, 329], "dnnl_query_sparse_encod": [228, 229, 329], "nnz_s64": 228, "dnnl_query_nnz_s64": [228, 229, 329], "num_handles_s32": 228, "dnnl_query_num_handles_s32": [228, 229, 329], "dnnl_query_t": [228, 304, 329, 335, 372], "estim": [228, 229], "sa": 228, "dev_guide_attributes_scratchpad": 228, "submemori": [228, 229, 329, 581], "dnnl_primitive_desc_queri": [229, 304, 335], "dnnl_query_some_md": 229, "dnnl_query_max": 229, "dnnl_query_": 229, "_engin": 229, "dnnl_engine_t": [229, 250, 258, 269, 304, 312, 313, 316, 317, 319, 320, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 359, 363, 365, 367, 368, 392, 408, 424], "dnnl_primitive_kind_t": [229, 304, 311, 335, 372], "_s32": 229, "_s64": 229, "_f64": 229, "_str": 229, "_md": [229, 432, 473], "const_dnnl_memory_desc_t": [229, 250, 258, 304, 311, 312, 313, 316, 317, 319, 320, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 337, 338, 339, 340, 342, 343, 345, 346, 392, 408, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "_pd": [229, 432], "const_dnnl_primitive_desc_t": [229, 304, 312, 317, 319, 320, 323, 324, 326, 327, 331, 332, 335, 339, 340, 342, 343, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582, 583, 584, 585, 588, 589, 590, 591, 593, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 626, 627, 628, 629], "dnnl_alg_kind_t": [229, 304, 311, 313, 317, 319, 320, 327, 331, 335, 337, 339, 340, 343, 372], "dnnl_rnn_direction_t": [229, 304, 340, 372], "dnnl_data_type_t": [229, 304, 311, 318, 326, 329, 349, 350, 362, 372, 539, 579], "dnnl_format_kind_t": [229, 304, 329], "dnnl_sparse_encoding_t": [229, 304, 329], "thumb": 229, "dnnl_primitive_desc_clon": [229, 304, 335], "stub": 229, "grad": 229, "dnnl_rnn_direction_undef": [230, 231], "unidirectional_left2right": [230, 246, 265, 266, 280, 282, 294, 302, 384, 418, 420, 456, 461, 485, 497], "dnnl_unidirectional_left2right": [230, 231], "unidirectional_right2left": 230, "dnnl_unidirectional_right2left": [230, 231], "dnnl_bidirectional_concat": [230, 231], "dnnl_bidirectional_sum": [230, 231], "unidirect": [230, 231, 265, 266, 294, 418, 420, 485], "bidirect": [230, 231, 265, 266, 418, 420], "dnnl_rnn_flags_undef": [232, 233], "dnnl_rnn_flags_diff_weights_overwrit": [232, 233], "dnnl_rounding_mode_environ": [234, 235], "dnnl_rounding_mode_stochast": [234, 235], "dictat": [234, 235], "trail": [234, 235], "dnnl_scratchpad_mode_librari": [236, 237, 311], "dnnl_scratchpad_mode_us": [236, 237, 311], "safeti": [236, 237], "in_ord": [241, 270, 298, 301, 426, 444, 446], "dnnl_stream_in_ord": [241, 242], "out_of_ord": 241, "dnnl_stream_out_of_ord": [241, 242], "default_flag": [241, 617], "dnnl_stream_default_flag": [241, 242, 250, 258, 269, 392, 408, 424], "dnnl_stream_flags_max": 242, "dnnl_sycl_interop_usm": [243, 244, 346], "dnnl_sycl_interop_buff": [243, 244, 346], "dnnl_sycl_typ": 244, "tran": [245, 625], "augru_exampl": [246, 304, 384], "example_allows_unimpl": [246, 252, 253, 264, 266, 284, 304, 384, 398, 416, 420, 465], "attention_dim": [246, 384], "weights_dim": [246, 256, 264, 271, 278, 282, 283, 290, 302, 384, 404, 416, 428, 452, 461, 463, 477, 497], "bias_dim": [246, 256, 271, 278, 280, 282, 283, 302, 384, 404, 428, 452, 456, 461, 463, 497], "dst_dim": [246, 256, 264, 271, 272, 278, 282, 283, 289, 290, 291, 293, 384, 404, 416, 428, 430, 452, 461, 463, 475, 477, 479, 483], "src_layer_data": [246, 280, 282, 302, 384, 456, 461, 497], "attention_data": [246, 384], "weights_layer_data": [246, 280, 282, 302, 384, 456, 461, 497], "weights_iter_data": [246, 280, 282, 302, 384, 456, 461, 497], "bias_data": [246, 256, 271, 278, 280, 282, 283, 302, 384, 404, 428, 452, 456, 461, 463, 497], "dst_layer_data": [246, 280, 282, 302, 384, 456, 461, 497], "sin": [246, 247, 248, 249, 256, 264, 271, 276, 278, 279, 280, 282, 283, 297, 302, 384, 386, 388, 390, 404, 416, 428, 448, 452, 454, 456, 461, 463, 491, 497], "src_layer_md": [246, 280, 282, 302, 384, 456, 461, 497], "attention_md": [246, 384], "bias_md": [246, 278, 280, 282, 283, 302, 384, 452, 456, 461, 463, 497], "dst_layer_md": [246, 280, 282, 302, 384, 456, 461, 497], "src_layer_mem": [246, 280, 282, 302, 384, 456, 461, 497], "attention_mem": [246, 384], "bias_mem": [246, 278, 280, 282, 283, 302, 384, 452, 456, 461, 463, 497], "dst_layer_mem": [246, 280, 282, 302, 384, 456, 461, 497], "user_weights_layer_mem": [246, 280, 282, 302, 384, 456, 461, 497], "user_weights_iter_mem": [246, 280, 282, 302, 384, 456, 461, 497], "write_to_dnnl_memori": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 264, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 408, 416, 424, 428, 430, 432, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 497, 499], "augru_weights_layer_md": [246, 384], "augru_weights_iter_md": [246, 384], "src_iter_md": [246, 280, 282, 302, 384, 456, 461, 497], "dst_iter_md": [246, 280, 282, 302, 384, 456, 461, 497], "rnn_direct": [246, 265, 266, 280, 282, 294, 302, 340, 372, 384, 418, 420, 456, 461, 485, 497, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "augru_weights_layer_mem": [246, 384], "augru_weights_iter_mem": [246, 384], "src_iter_mem": [246, 280, 282, 302, 384, 456, 461, 497], "weights_iter_mem": [246, 280, 282, 302, 384, 456, 461, 497], "dst_iter_mem": [246, 280, 282, 302, 384, 456, 461, 497], "workspace_mem": [246, 247, 280, 281, 282, 289, 302, 384, 386, 456, 459, 461, 475, 497], "augru_prim": [246, 384], "augru_arg": [246, 384], "dnnl_arg_augru_attent": [246, 304, 335, 384], "read_from_dnnl_memori": [246, 247, 248, 249, 256, 261, 262, 264, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 290, 291, 292, 293, 295, 296, 297, 302, 304, 384, 386, 388, 390, 404, 410, 412, 416, 424, 428, 430, 432, 434, 448, 450, 452, 454, 456, 459, 461, 463, 465, 469, 475, 477, 479, 481, 483, 487, 489, 491, 497], "parse_engine_kind": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 264, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 384, 386, 388, 390, 392, 398, 400, 402, 404, 416, 428, 430, 432, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499], "2020": [247, 248, 249, 255, 256, 272, 278, 279, 281, 282, 283, 289, 290, 291, 292, 293, 295, 296, 297, 386, 388, 390, 402, 404, 430, 452, 454, 459, 461, 463, 475, 477, 479, 481, 483, 487, 489, 491], "batch_normalization_exampl": [247, 304, 386], "227": [247, 250, 251, 253, 254, 258, 272, 274, 278, 279, 281, 288, 290, 291, 292, 293, 295, 297, 298, 386, 392, 394, 398, 400, 408, 430, 452, 454, 459, 473, 477, 479, 481, 483, 487, 491], "scaleshift_dim": [247, 276, 279, 386, 448, 454], "src_data": [247, 249, 255, 256, 264, 271, 272, 276, 278, 279, 281, 283, 289, 290, 291, 292, 293, 295, 296, 297, 386, 390, 402, 404, 416, 428, 430, 448, 452, 454, 459, 463, 475, 477, 479, 481, 483, 487, 489, 491], "scale_data": [247, 249, 276, 279, 386, 390, 448, 454], "shift_data": [247, 249, 276, 279, 386, 390, 448, 454], "tan": [247, 276, 279, 386, 448, 454], "scaleshift_md": [247, 276, 279, 386, 448, 454], "src_mem": [247, 249, 255, 264, 272, 273, 276, 278, 279, 281, 283, 284, 287, 289, 291, 292, 293, 295, 296, 297, 386, 390, 402, 416, 430, 432, 448, 452, 454, 459, 463, 465, 471, 475, 479, 481, 483, 487, 489, 491], "scale_mem": [247, 249, 276, 279, 386, 390, 448, 454], "shift_mem": [247, 249, 276, 279, 386, 390, 448, 454], "bnorm_pd": [247, 386], "10f": [247, 276, 279, 386, 448, 454], "normalization_flag": [247, 276, 279, 312, 323, 326, 335, 372, 386, 448, 454, 510, 512, 541, 543, 557, 559], "mean_mem": [247, 249, 276, 279, 386, 390, 448, 454], "mean_desc": [247, 276, 279, 386, 448, 454, 510, 512, 541, 543, 557, 559], "variance_mem": [247, 249, 276, 279, 386, 390, 448, 454], "variance_desc": [247, 276, 279, 386, 448, 454, 510, 512, 541, 543, 557, 559], "bnorm_prim": [247, 386], "bnorm_arg": [247, 386], "binary_exampl": [248, 304, 388], "150": [248, 249, 388, 390], "src_0_dim": [248, 388], "src_1_dim": [248, 388], "src_0_data": [248, 388], "src_1_data": [248, 388], "src_0_md": [248, 388], "src_1_md": [248, 388], "src_0_mem": [248, 388], "src_1_mem": [248, 388], "binary_op": [248, 249, 311, 388, 390, 587], "binary_attr": [248, 249, 388, 390], "binary_pd": [248, 249, 388, 390], "binary_prim": [248, 249, 388, 390], "binary_arg": [248, 249, 388, 390], "params_dim": [249, 390], "mean_data": [249, 390], "variance_data": [249, 390], "oscale_data": [249, 390], "mean_md": [249, 390], "variance_md": [249, 390], "scale_md": [249, 390], "shift_md": [249, 390], "oscale_md": [249, 390], "oscale_mem": [249, 390], "dst_tmp": [249, 390], "output_scal": [249, 390], "2016": [250, 251, 254, 258, 392, 400, 408], "posix_memalign": [250, 258, 392, 408], "_posix_c_sourc": [250, 258, 304, 392, 408], "200112l": [250, 258, 392, 408], "stdlib": [250, 258, 269, 392, 408, 424], "conv_ih": [250, 258, 304, 392, 408], "conv_iw": [250, 258, 304, 392, 408], "conv_oh": [250, 258, 304, 392, 408], "conv_ow": [250, 258, 304, 392, 408], "conv_strid": [250, 252, 253, 254, 258, 304, 392, 396, 398, 400, 408], "conv_pad": [250, 252, 253, 254, 258, 304, 392, 396, 398, 400, 408], "pool_oh": [250, 258, 304, 392, 408], "27": [250, 251, 253, 254, 258, 289, 392, 398, 400, 408, 475], "pool_ow": [250, 258, 304, 392, 408], "pool_strid": [250, 253, 254, 258, 304, 392, 398, 400, 408], "pool_pad": [250, 251, 253, 254, 258, 304, 392, 394, 398, 400, 408], "arr": [250, 258, 304, 392, 408], "init_net_data": [250, 258, 304, 392, 408], "uint32_t": [250, 253, 254, 258, 304, 392, 398, 400, 408], "1637": [250, 258, 392, 408], "indx": [250, 258, 392, 408], "typedef": [250, 258, 304, 372, 392, 408, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "narg": [250, 258, 304, 330, 335, 346, 392, 408, 503], "dnnl_exec_arg_t": [250, 258, 269, 304, 330, 335, 346, 392, 408, 424, 503], "args_t": [250, 258, 304, 392, 408], "prepare_arg_nod": [250, 258, 304, 392, 408], "free_arg_nod": [250, 258, 304, 392, 408], "set_arg": [250, 258, 304, 392, 408], "arg_idx": [250, 258, 304, 392, 408], "init_data_memori": [250, 258, 304, 392, 408], "user_tag": [250, 258, 304, 392, 408], "user_md": [250, 258, 392, 408], "dnnl_memory_cr": [250, 258, 269, 304, 329, 392, 408, 424], "dnnl_status_t": [250, 258, 304, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 378, 392, 408, 432, 493, 536], "prepare_reord": [250, 258, 304, 392, 408], "user_memori": [250, 258, 304, 392, 408], "prim_memory_md": [250, 258, 304, 392, 408], "prim_engin": [250, 258, 304, 392, 408], "dir_is_user_to_prim": [250, 258, 304, 392, 408], "prim_memori": [250, 258, 304, 392, 408], "dnnl_primitive_t": [250, 258, 269, 304, 335, 392, 408, 424], "net_index": [250, 258, 304, 392, 408], "inc": [250, 258, 392, 408, 458], "net_arg": [250, 251, 258, 304, 392, 394, 408], "user_memory_md": [250, 258, 392, 408], "dnnl_memory_get_memory_desc": [250, 258, 304, 329, 392, 408], "user_mem_engin": [250, 258, 392, 408], "dnnl_memory_get_engin": [250, 258, 304, 329, 392, 408], "dnnl_memory_desc_equ": [250, 258, 304, 329, 392, 408], "dnnl_primitive_desc_t": [250, 258, 269, 304, 311, 312, 313, 316, 317, 319, 320, 323, 324, 326, 327, 328, 331, 332, 335, 337, 338, 339, 340, 342, 343, 345, 392, 408, 424, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "reorder_pd": [250, 258, 292, 392, 408, 481], "dnnl_reorder_primitive_desc_cr": [250, 258, 269, 304, 338, 392, 408, 424], "dnnl_primitive_cr": [250, 258, 269, 304, 335, 392, 408, 424], "dnnl_primitive_desc_destroi": [250, 258, 269, 304, 335, 392, 408, 424], "simple_net": [250, 251, 253, 254, 258, 265, 266, 294, 304, 392, 396, 398, 400, 408, 485], "dnnl_engine_kind_t": [250, 304, 321, 357, 359, 360, 365, 372, 392], "dnnl_engine_cr": [250, 258, 269, 304, 321, 392, 408, 424], "net_src_siz": [250, 258, 392, 408], "net_dst_siz": [250, 258, 392, 408], "net_src": [250, 253, 254, 258, 265, 266, 294, 392, 398, 400, 408, 418, 420, 485], "net_dst": [250, 254, 258, 265, 266, 294, 392, 400, 408, 418, 420, 485], "memset": [250, 258, 265, 266, 392, 408, 418, 420], "conv_user_src_s": [250, 258, 392, 408], "conv_user_weights_s": [250, 258, 392, 408], "conv_bias_s": [250, 258, 392, 408], "conv_user_dst_s": [250, 258, 392, 408], "conv_dil": [250, 258, 392, 408], "conv_src": [250, 258, 288, 392, 408, 473], "conv_weight": [250, 252, 253, 254, 258, 392, 396, 398, 400, 408], "conv_bia": [250, 252, 253, 254, 258, 392, 396, 398, 400, 408], "conv_user_src_memori": [250, 253, 254, 258, 392, 398, 400, 408], "conv_user_weights_memori": [250, 253, 254, 258, 392, 398, 400, 408], "conv_user_bias_memori": [250, 253, 254, 258, 392, 398, 400, 408], "conv_src_md": [250, 252, 253, 254, 256, 258, 287, 288, 392, 396, 398, 400, 404, 408, 471, 473], "conv_weights_md": [250, 252, 253, 254, 256, 258, 287, 392, 396, 398, 400, 404, 408, 471], "conv_bias_md": [250, 252, 253, 254, 258, 392, 396, 398, 400, 408], "dnnl_convolution_forward_primitive_desc_cr": [250, 258, 304, 317, 392, 408], "conv_internal_src_memori": [250, 258, 392, 408], "conv_internal_weights_memori": [250, 258, 392, 408], "conv_internal_dst_memori": [250, 258, 392, 408], "dnnl_primitive_desc_query_md": [250, 258, 304, 330, 335, 346, 392, 408], "conv_reorder_src": [250, 258, 392, 408], "conv_reorder_weight": [250, 258, 392, 408], "negative_slop": [250, 253, 254, 258, 392, 398, 400, 408], "relu_src_md": [250, 253, 254, 258, 392, 398, 400, 408], "relu_dst_md": [250, 258, 392, 408], "relu_pd": [250, 253, 254, 258, 269, 270, 273, 275, 288, 299, 300, 392, 398, 400, 408, 424, 426, 432, 434, 493, 495], "dnnl_eltwise_forward_primitive_desc_cr": [250, 258, 269, 304, 320, 392, 408, 424], "relu_dst_memori": [250, 253, 254, 258, 392, 398, 400, 408], "0001": [250, 251, 253, 254, 258, 392, 398, 400, 408], "0001f": [250, 251, 253, 254, 258, 392, 398, 400, 408], "75f": [250, 251, 253, 254, 258, 281, 392, 398, 400, 408, 459], "lrn_src_md": [250, 258, 392, 408], "lrn_dst_md": [250, 258, 392, 408], "lrn_pd": [250, 253, 254, 258, 281, 392, 398, 400, 408, 459], "dnnl_lrn_forward_primitive_desc_cr": [250, 258, 304, 327, 392, 408], "lrn_dst_memori": [250, 253, 254, 258, 392, 398, 400, 408], "lrn_ws_memori": [250, 258, 392, 408], "lrn_ws_md": [250, 258, 392, 408], "pool_dst_siz": [250, 258, 392, 408], "pool_kernel": [250, 253, 254, 258, 392, 398, 400, 408], "pool_dil": [250, 251, 253, 254, 258, 392, 394, 398, 400, 408], "pool_src_md": [250, 258, 392, 408], "pool_dst_any_md": [250, 392], "pool_user_dst_memori": [250, 253, 254, 258, 392, 398, 400, 408], "pool_pd": [250, 253, 254, 258, 287, 392, 398, 400, 408, 471], "dnnl_pooling_forward_primitive_desc_cr": [250, 258, 304, 331, 392, 408], "pool_ws_memori": [250, 258, 392, 408], "pool_ws_md": [250, 258, 392, 408], "pool_dst_memori": [250, 253, 254, 258, 392, 398, 400, 408], "pool_reorder_dst": [250, 258, 392, 408], "pool_internal_dst_memori": [250, 258, 392, 408], "pool_dst_md": [250, 253, 254, 258, 287, 392, 398, 400, 408, 471], "tent": [250, 258, 392, 408], "dnnl_stream_t": [250, 258, 269, 304, 330, 335, 336, 344, 346, 347, 355, 363, 367, 392, 408, 424], "dnnl_stream_creat": [250, 258, 269, 304, 344, 392, 408, 424], "dnnl_primitive_execut": [250, 258, 269, 304, 311, 335, 392, 408, 424, 537], "dnnl_stream_wait": [250, 258, 269, 304, 329, 336, 344, 392, 408, 424], "dnnl_stream_destroi": [250, 258, 269, 304, 344, 392, 408, 424], "dnnl_memory_destroi": [250, 258, 269, 304, 329, 392, 408, 424], "dnnl_primitive_destroi": [250, 258, 269, 304, 335, 392, 408, 424], "dnnl_engine_destroi": [250, 258, 269, 304, 321, 392, 408, 424], "engine_kind2str_upp": [250, 273, 299, 300, 304, 392, 432, 493, 495], "chrono": [251, 285, 467], "100": [251, 277, 284, 303, 450, 465, 499], "eng": [251, 252, 253, 254, 259, 260, 263, 267, 268, 273, 274, 275, 277, 284, 286, 287, 288, 294, 298, 299, 300, 301, 303, 304, 394, 396, 398, 400, 414, 422, 432, 434, 436, 438, 440, 444, 446, 450, 465, 469, 471, 473, 485, 493, 495, 499, 587], "conv1_src_tz": [251, 394], "conv1_weights_tz": [251, 394], "conv1_bias_tz": [251, 394], "conv1_dst_tz": [251, 394], "conv1_pad": [251, 394], "user_src": [251, 252, 288, 394, 396, 473], "user_dst": [251, 252, 288, 394, 396, 473], "1000": [251, 277, 285, 296, 303, 394, 450, 467, 489, 499], "conv1_weight": [251, 394], "conv1_bia": [251, 394], "user_src_memori": [251, 252, 394, 396], "user_weights_memori": [251, 252, 394, 396], "conv1_user_bias_memori": [251, 394], "conv1_prim_desc": [251, 394], "conv1_src_memori": [251, 394], "conv1_weights_memori": [251, 394], "conv1_dst_memori": [251, 394], "relu1": [251, 259, 274, 298, 436, 442, 444], "negative1_slop": [251, 394], "relu1_prim_desc": [251, 394], "lrn1": 251, "alpha1": 251, "beta1": 251, "local1_s": 251, "lrn1_prim_desc": 251, "lrn_forward": [251, 253, 254, 281, 327, 372, 398, 400, 459, 569, 593], "lrn1_dst_memori": [251, 394], "pool1": [251, 392, 394], "pool1_dst_tz": 251, "pool1_kernel": [251, 394], "pool1_strid": [251, 394], "pool1_dst_md": [251, 394], "pool1_pd": [251, 394], "pooling_forward": [251, 253, 254, 287, 289, 331, 372, 394, 398, 400, 471, 475, 583, 593], "pool1_dst_memori": [251, 394], "conv2_src_tz": 251, "conv2_weights_tz": 251, "conv2_bias_tz": 251, "conv2_dst_tz": 251, "conv2_strid": 251, "conv2_pad": 251, "conv2_weight": 251, "conv2_bia": 251, "conv2_user_weights_memori": 251, "conv2_user_bias_memori": 251, "conv2_src_md": 251, "conv2_bias_md": 251, "conv2_weights_md": 251, "conv2_dst_md": 251, "conv2_prim_desc": 251, "conv2_src_memori": 251, "conv2_weights_memori": 251, "conv2_dst_memori": 251, "relu2": 251, "negative2_slop": 251, "relu2_prim_desc": 251, "lrn2": 251, "alpha2": 251, "beta2": 251, "local2_s": 251, "k2": 251, "lrn2_prim_desc": 251, "lrn2_dst_memori": 251, "pool2": 251, "pool2_dst_tz": 251, "pool2_kernel": 251, "pool2_strid": 251, "pool2_dil": 251, "pool2_pad": 251, "pool2_dst_md": 251, "pool2_pd": 251, "pool2_dst_memori": 251, "conv3_src_tz": 251, "conv3_weights_tz": 251, "conv3_bias_tz": 251, "conv3_dst_tz": 251, "conv3_strid": 251, "conv3_pad": 251, "conv3_weight": 251, "conv3_bia": 251, "conv3_user_weights_memori": 251, "conv3_user_bias_memori": 251, "conv3_src_md": 251, "conv3_bias_md": 251, "conv3_weights_md": 251, "conv3_dst_md": 251, "conv3_prim_desc": 251, "conv3_src_memori": 251, "conv3_weights_memori": 251, "conv3_dst_memori": 251, "negative3_slop": 251, "relu3_prim_desc": 251, "conv4_src_tz": 251, "conv4_weights_tz": 251, "conv4_bias_tz": 251, "conv4_dst_tz": 251, "conv4_strid": 251, "conv4_pad": 251, "conv4_weight": 251, "conv4_bia": 251, "conv4_user_weights_memori": 251, "conv4_user_bias_memori": 251, "conv4_src_md": 251, "conv4_bias_md": 251, "conv4_weights_md": 251, "conv4_dst_md": 251, "conv4_prim_desc": 251, "conv4_src_memori": 251, "conv4_weights_memori": 251, "conv4_dst_memori": 251, "relu4": 251, "negative4_slop": 251, "relu4_prim_desc": 251, "conv5_src_tz": 251, "conv5_weights_tz": 251, "conv5_bias_tz": 251, "conv5_dst_tz": 251, "conv5_strid": 251, "conv5_pad": 251, "conv5_weight": 251, "conv5_bia": 251, "conv5_user_weights_memori": 251, "conv5_user_bias_memori": 251, "conv5_src_md": 251, "conv5_weights_md": 251, "conv5_bias_md": 251, "conv5_dst_md": 251, "conv5_prim_desc": 251, "conv5_src_memori": 251, "conv5_weights_memori": 251, "conv5_dst_memori": 251, "relu5": 251, "negative5_slop": 251, "relu5_prim_desc": 251, "pool5": 251, "pool5_dst_tz": 251, "pool5_kernel": 251, "pool5_strid": 251, "pool5_dil": 251, "pool5_pad": 251, "pool5_dst": 251, "pool5_dst_md": 251, "pool5_pd": 251, "pool5_dst_memori": 251, "fc6": 251, "4096": 251, "fc6_src_tz": 251, "fc6_weights_tz": 251, "fc6_bias_tz": 251, "fc6_dst_tz": 251, "fc6_weight": 251, "fc6_bia": 251, "fc6_user_weights_memori": 251, "fc6_user_bias_memori": 251, "fc6_src_md": 251, "fc6_bias_md": 251, "fc6_weights_md": 251, "fc6_dst_md": 251, "fc6_prim_desc": 251, "inner_product_forward": [251, 278, 324, 372, 452, 551, 553, 593], "fc6_src_memori": 251, "fc6_weights_memori": 251, "fc6_dst_memori": 251, "fc7": 251, "fc7_weights_tz": 251, "fc7_bias_tz": 251, "fc7_dst_tz": 251, "fc7_weight": 251, "fc7_bia": 251, "fc7_user_weights_memori": 251, "fc7_user_bias_memori": 251, "fc7_bias_md": 251, "fc7_weights_md": 251, "fc7_dst_md": 251, "fc7_prim_desc": 251, "fc7_weights_memori": 251, "fc7_dst_memori": 251, "fc8": 251, "fc8_weights_tz": 251, "fc8_bias_tz": 251, "fc8_dst_tz": 251, "fc8_weight": 251, "fc8_bia": 251, "fc8_user_weights_memori": 251, "fc8_user_bias_memori": 251, "user_dst_memori": [251, 252, 396], "fc8_bias_md": 251, "fc8_weights_md": 251, "fc8_dst_md": 251, "fc8_prim_desc": 251, "fc8_weights_memori": 251, "fc8_dst_memori": 251, "someth": [251, 253, 254, 265, 266, 294, 394, 398, 400, 485], "duration_cast": 251, "steady_clock": [251, 285, 467], "time_since_epoch": 251, "stdexcept": [252, 253, 263, 267, 270, 273, 275, 277, 284, 288, 303, 398, 414, 422, 434, 450, 465, 499], "simple_net_int8": 252, "conv_src_tz": [252, 253, 254, 396, 398, 400], "conv_weights_tz": [252, 253, 254, 396, 398, 400], "conv_bias_tz": [252, 253, 254, 396, 398, 400], "conv_dst_tz": [252, 253, 254, 396, 398, 400], "8f": [252, 396], "weight_scal": [252, 396], "55f": [252, 396], "src_mask": [252, 396], "weight_mask": [252, 396], "dst_mask": [252, 396], "user_bias_memori": [252, 396], "conv_attr": [252, 256, 396, 404], "dst_scale_md": [252, 396], "dst_scale_memori": [252, 396], "ops_alpha": [252, 396], "ops_beta": [252, 396], "catch": [252, 253, 264, 266, 273, 284, 285, 299, 300, 398, 416, 420, 432, 465, 467, 493, 495], "conv_prim_desc": [252, 288, 396], "src_attr": [252, 284, 396, 465], "src_scale_md": [252, 396], "src_scale_memori": [252, 396], "src_reorder_pd": [252, 396], "src_reorder": [252, 396], "weight_attr": [252, 396], "wei_scale_md": [252, 396], "wei_scale_memori": [252, 396], "weight_reorder_pd": [252, 396], "weight_reord": [252, 396], "conv_bias_memori": [252, 253, 258, 396, 398, 408], "conv_dst_memori": [252, 253, 254, 396, 398, 400], "dst_attr": [252, 396], "dst_reorder_pd": [252, 396], "dst_reorder": [252, 396], "cassert": [253, 263, 267, 277, 299, 300, 303, 398, 414, 422, 450, 493, 495, 499], "net_fwd": [253, 254, 258, 398, 400, 408], "net_bwd": [253, 254, 258, 398, 400, 408], "net_fwd_arg": [253, 254, 258, 398, 400, 408], "net_bwd_arg": [253, 254, 258, 398, 400, 408], "sinf": [253, 254, 398, 400], "relu_data_tz": [253, 254, 398, 400], "lrn_data_tz": [253, 254, 398, 400], "lrn_workspace_memori": [253, 254, 398, 400], "pool_dst_tz": [253, 254, 398, 400], "pool_workspace_memori": [253, 254, 398, 400], "diff_data": [253, 254, 258, 398, 400, 408], "net_diff_dst": [253, 254, 258, 294, 398, 400, 408, 485], "pool_user_diff_dst_memori": [253, 254, 258, 398, 400, 408], "pool_diff_src_md": [253, 254, 258, 398, 400, 408], "pool_diff_dst_md": [253, 254, 258, 398, 400, 408], "pool_bwd_pd": [253, 254, 258, 398, 400, 408], "pooling_backward": [253, 254, 331, 372, 398, 400, 593], "pool_diff_dst_memori": [253, 254, 258, 398, 400, 408], "pool_diff_src_memori": [253, 254, 258, 398, 400, 408], "diff_src_desc": [253, 254, 304, 312, 317, 319, 320, 323, 324, 326, 327, 331, 332, 339, 342, 343, 398, 400, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "lrn_diff_dst_md": [253, 254, 258, 398, 400, 408], "lrn_diff_src_md": [253, 254, 258, 398, 400, 408], "lrn_bwd_pd": [253, 254, 258, 398, 400, 408], "lrn_backward": [253, 254, 327, 372, 398, 400, 593], "lrn_diff_dst_memori": [253, 254, 398, 400], "lrn_diff_src_memori": [253, 254, 258, 398, 400, 408], "relu_diff_src_md": [253, 254, 258, 398, 400, 408], "relu_diff_dst_md": [253, 254, 258, 398, 400, 408], "primitive_descriptor": [253, 254, 312, 323, 324, 326, 327, 398, 400], "relu_bwd_pd": [253, 254, 258, 398, 400, 408], "eltwise_backward": [253, 254, 320, 372, 398, 400, 593], "relu_diff_dst_memori": [253, 254, 398, 400], "relu_diff_src_memori": [253, 254, 258, 398, 400, 408], "conv_user_diff_weights_memori": [253, 254, 258, 398, 400, 408], "conv_diff_bias_memori": [253, 254, 258, 398, 400, 408], "conv_bwd_src_md": [253, 254, 398, 400], "conv_diff_weights_md": [253, 254, 258, 398, 400, 408], "conv_diff_dst_md": [253, 254, 258, 398, 400, 408], "conv_diff_bias_md": [253, 254, 258, 398, 400, 408], "conv_bwd_weights_pd": [253, 254, 258, 398, 400, 408], "convolution_backward_weight": [253, 254, 317, 372, 398, 400, 593], "conv_bwd_src_memori": [253, 254, 398, 400], "relu_bwd": [253, 254, 258, 398, 400, 408], "conv_diff_weight": [253, 254, 258, 398, 400, 408], "conv_diff_dst_memori": [253, 254, 258, 398, 400, 408], "conv_diff_weights_memori": [253, 254, 258, 398, 400, 408], "diff_weights_desc": [253, 254, 304, 317, 319, 324, 332, 398, 400, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "didn": [253, 254, 398, 400], "anyth": [253, 254, 330, 376, 398, 400], "n_iter": [253, 254, 258, 398, 400, 408], "net_output": [253, 254, 258, 398, 400, 408], "update_diff_dst": [253, 254, 258, 398, 400, 408], "net_diff_weight": [253, 254, 258, 398, 400, 408], "net_diff_bia": [253, 254, 258, 398, 400, 408], "update_weight": [253, 254, 258, 398, 400, 408], "conv_user_diff_weights_buff": [254, 258, 400, 408], "conv_diff_bias_buff": [254, 258, 400, 408], "concat_exampl": [255, 304, 402], "120": [255, 402], "num_src": [255, 297, 402, 491], "concat_pd": [255, 402], "dst_mem": [255, 261, 262, 264, 272, 273, 278, 281, 283, 284, 287, 289, 291, 292, 293, 295, 297, 304, 402, 410, 412, 416, 430, 432, 452, 459, 463, 465, 471, 475, 479, 481, 483, 487, 491], "concat_prim": [255, 402], "concat_arg": [255, 402], "convolution_exampl": [256, 304, 404], "simul": [256, 404, 436, 438, 440, 442, 444, 446], "strides_dim": [256, 271, 289, 404, 428, 475], "padding_dims_l": [256, 271, 289, 404, 428, 475], "padding_dims_r": [256, 271, 289, 404, 428, 475], "weights_data": [256, 261, 262, 264, 271, 278, 283, 290, 404, 410, 412, 416, 428, 452, 463, 477], "dst_data": [256, 261, 262, 264, 271, 272, 278, 281, 283, 289, 290, 291, 292, 293, 295, 297, 404, 410, 412, 416, 428, 430, 452, 459, 463, 475, 477, 479, 481, 483, 487, 491], "user_src_mem": [256, 264, 271, 290, 404, 416, 428, 477], "user_weights_mem": [256, 264, 271, 278, 290, 404, 416, 428, 452, 477], "user_dst_mem": [256, 264, 271, 290, 404, 416, 428, 477], "user_bias_md": [256, 271, 404, 428], "user_bias_mem": [256, 271, 404, 428], "conv_op": [256, 404], "conv_src_mem": [256, 287, 404, 471], "conv_weights_mem": [256, 287, 404, 471], "conv_dst_mem": [256, 287, 404, 471], "conv_arg": [256, 404, 587], "depthwise_convolution_exampl": [256, 304, 404], "exit_cod": [256, 273, 299, 300, 404, 432, 493, 495], "idx": [258, 299, 300, 304, 335, 408, 493, 495, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "n_fwd": [258, 408], "n_bwd": [258, 408], "dnnl_pooling_backward_primitive_desc_cr": [258, 304, 331, 408], "pool_internal_diff_dst_memori": [258, 408], "pool_reorder_diff_dst": [258, 408], "pool_bwd": [258, 408], "dnnl_lrn_backward_primitive_desc_cr": [258, 304, 327, 408], "lrn_bwd": [258, 408], "conv_diff_src_md": [258, 408], "dnnl_convolution_backward_weights_primitive_desc_cr": [258, 304, 317, 408], "conv_bwd_reorder_src": [258, 408], "conv_bwd_internal_src_memori": [258, 408], "conv_bwd_weights_src_memori": [258, 408], "conv_reorder_diff_dst": [258, 408], "conv_internal_diff_dst_memori": [258, 408], "conv_reorder_diff_weight": [258, 408], "conv_internal_diff_weights_memori": [258, 408], "conv_bwd_weight": [258, 408], "dnnl_memory_set_data_handl": [258, 304, 329, 330, 346, 408], "dnnl_memory_get_data_handl": [258, 304, 329, 408], "cleanup": [258, 408], "2023": [259, 260, 262, 264, 276, 298, 303, 412, 416, 448, 499], "unordered_set": [259, 260, 268, 274, 298, 301, 304, 436, 438, 440, 442, 444, 446], "graph_example_util": [259, 260, 268, 274, 298, 301, 436, 438, 440, 442, 444, 446], "cpu_getting_started_tutori": 259, "oc1": [259, 274, 298], "oc2": [259, 274, 298], "225": 259, "kh1": [259, 274, 298], "kw1": [259, 274, 298], "kh2": [259, 274, 298], "kw2": [259, 274, 298], "conv0_input_dim": [259, 274, 298], "conv0_weight_dim": [259, 274, 298], "conv0_bias_dim": [259, 274, 298], "conv1_weight_dim": [259, 274, 298], "conv1_bias_dim": [259, 274, 298], "conv0_src_desc": [259, 274, 298, 436, 442, 444], "conv0_weight_desc": [259, 274, 298, 436, 442, 444], "conv0_dst_desc": [259, 274, 298, 436, 442, 444], "conv0": [259, 274, 298, 436, 442, 444], "bias_add": [259, 274, 298], "conv0_bias_desc": [259, 274, 298, 436, 442, 444], "conv0_bias_add_dst_desc": [259, 274, 298, 436, 442, 444], "conv0_bias_add": [259, 274, 298, 436, 442, 444], "relu0_dst_desc": [259, 274, 298, 436, 442, 444], "relu0": [259, 274, 298, 436, 442, 444], "conv1_weight_desc": [259, 274, 298, 436, 442, 444], "conv1_dst_desc": [259, 274, 298, 436, 442, 444], "conv1_bias_desc": [259, 274, 298, 436, 442, 444], "conv1_bias_add_dst_desc": [259, 274, 298, 436, 442, 444], "conv1_bias_add": [259, 274, 298, 436, 442, 444], "relu1_dst_desc": [259, 274, 298, 436, 442, 444], "make_engine_with_alloc": [259, 260, 268, 298, 301, 359, 373, 374, 375, 436, 438, 440, 444, 446], "strm": [259, 260, 268, 274, 275, 298, 299, 300, 301, 304, 434, 436, 438, 440, 444, 446, 493, 495], "global_outputs_ts_map": [259, 260, 274, 298, 304], "shared_ptr": [259, 260, 268, 274, 298, 301, 304, 548], "data_buff": [259, 260, 268, 274, 298, 301, 304], "id_to_queried_logical_tensor": [259, 260, 274, 298], "helper": [259, 260, 274, 298, 304, 579], "ids_with_any_layout": [259, 260, 274, 298], "set_any_layout": [259, 260, 274, 298, 304], "mock": [259, 260, 268, 274, 298, 301], "concrete_shap": [259, 260, 268, 274, 298, 301], "although": [259, 260, 268, 274, 298, 301, 396], "cpu_get_start": 259, "continu": [259, 260, 274, 298, 394, 432], "cp": [259, 260, 265, 266, 268, 274, 298, 301, 436, 438, 440, 444, 446], "inputs_t": [259, 260, 268, 274, 298, 301, 436, 438, 440, 444, 446], "outputs_t": [259, 260, 268, 274, 298, 301, 436, 438, 440, 444, 446], "allocate_graph_mem": [259, 260, 268, 304], "conv0_src": [259, 298], "conv0_wei": [259, 298], "conv0_bias_src1": [259, 298], "conv1_wei": [259, 298], "conv1_bias_src1": [259, 298], "relu_dst": [259, 298], "simple_pattern_int8": 260, "conv_input_dim": 260, "conv_weight_dim": 260, "conv_bias_dim": 260, "dequant0_src_desc": [260, 438], "conv_src_desc": [260, 438], "dequant0": [260, 438], "1f": [260, 264, 266, 267, 416, 420, 422, 438], "dequant1_src_desc": [260, 438], "conv_weight_desc": [260, 438], "dequant1": [260, 438], "conv_bias_desc": [260, 438], "conv_dst_desc": [260, 438], "relu_dst_desc": [260, 438], "quant_dst_desc": [260, 438], "dq0_src": 260, "dq1_src": 260, "quant_dst": 260, "check_result": [261, 262, 286, 304, 410, 412, 469], "expected_result": [261, 262, 410, 412], "750000": [261, 262, 410, 412], "250000": [261, 262, 410, 412], "500000": [261, 262, 410, 412], "000000": [261, 262, 410, 412], "19": [261, 262, 410, 412], "sparse_matmul": [261, 262, 304, 410, 412], "src_coo_valu": [261, 410], "src_coo_row_indic": [261, 410], "src_coo_col_indic": [261, 410], "static_cast": [261, 262, 277, 285, 286, 410, 412, 450, 467, 469], "src_coo_md": [261, 410], "wei_md": [261, 262, 410, 412], "src_coo_mem": [261, 410], "wei_mem": [261, 262, 410, 412], "sparse_matmul_pd": [261, 262, 410, 412], "sparse_matmul_prim": [261, 262, 410, 412], "sparse_matmul_arg": [261, 262, 410, 412], "src_csr_valu": [262, 412], "src_csr_indic": [262, 412], "src_csr_pointer": [262, 412], "src_csr_md": [262, 412], "src_csr_mem": [262, 412], "cctype": [263, 267, 277, 303, 414, 422, 450, 499], "cstdio": [263, 267, 277, 303, 414, 422, 450, 499], "type_trait": [263, 414], "init_vector": [263, 267, 277, 303, 414, 422, 450, 499], "min_valu": [263, 414], "max_valu": [263, 414], "mt19937": [263, 267, 277, 285, 303, 414, 422, 450, 467, 499], "uniform_real_distribut": [263, 267, 277, 285, 303, 414, 422, 450, 467, 499], "find_min_max": [263, 414], "compute_q10n_param": [263, 414], "max_int": [263, 414], "numeric_limit": [263, 267, 284, 414, 422, 465], "min_int": [263, 414], "lowest": [263, 414], "ifndef": [263, 414], "omit_workaround_for_skx": [263, 414], "dev_guide_int8_comput": [263, 414], "endif": [263, 299, 300, 414, 493, 495], "min_val": [263, 414], "max_val": [263, 414], "tcomput": [263, 414], "q10n": [263, 414], "tdata": [263, 414], "tscale": [263, 414], "3g": [263, 414], "invers": [263, 414], "tzero": [263, 414], "compare_vector": [263, 267, 414, 422], "v2": [263, 267, 414, 422], "scale_v2": [263, 414], "zp_v2": [263, 414], "threshold": [263, 267, 414, 422], "v1_l2": [263, 267, 414, 422], "diff_l2": [263, 267, 414, 422], "v2_n": [263, 414], "deq10n": [263, 414], "tcomparison": [263, 414], "trefer": [263, 267, 414, 422], "terror": [263, 267, 414, 422], "trel": [263, 414], "naccuraci": [263, 414], "x_int_m": [263, 304, 414], "x_f32": [263, 304, 414], "scale_x": [263, 304, 414], "zp_x": [263, 304, 414], "q10n_scheme": [263, 414], "mimic": [263, 414], "wrt": [263, 414], "x_int_md": [263, 414], "x_f32_md": [263, 414], "x_f32_m": [263, 414], "q10n_attr": [263, 414], "q10n_pd": [263, 414], "dst_scale_x_m": [263, 414], "zp_x_m": [263, 414], "f32_matmul_comput": [263, 304, 414], "a_f32": [263, 303, 304, 414, 499], "b_f32": [263, 277, 303, 304, 414, 450, 499], "c_f32": [263, 303, 304, 414, 499], "wrap": [263, 267, 270, 286, 414, 422, 469, 535, 536, 548, 579, 593, 617], "a_f32_m": [263, 414], "b_f32_m": [263, 414], "c_f32_m": [263, 414], "matmul_p": [263, 267, 277, 303, 304, 414, 422, 450, 499], "scale_c": [263, 304, 414], "zp_c": [263, 277, 304, 414, 450], "dynamic_q10n_matmul": [263, 304, 414], "c_u8": [263, 277, 304, 414, 450], "scale_a": [263, 414], "scale_b": [263, 414], "zp_a": [263, 277, 414, 450], "zp_b": [263, 303, 414, 499], "a_u8_md": [263, 414], "a_u8_m": [263, 414], "b_s8_md": [263, 414], "b_s8_m": [263, 414], "emb": [263, 414], "anywai": [263, 414], "theori": [263, 414], "postpon": [263, 414], "exercis": [263, 414], "c_f32_md": [263, 414], "matmul_attr": [263, 283, 284, 414, 463, 465], "scales_a_m": [263, 414], "scales_b_m": [263, 414], "zp_a_m": [263, 414], "c_u8_md": [263, 414], "c_u8_m": [263, 414], "compare_f32_and_quantized_matmul": [263, 304, 414], "param_a_min_v": [263, 414], "param_a_max_v": [263, 414], "4f": [263, 281, 414, 459], "param_b_min_v": [263, 414], "param_b_max_v": [263, 414], "threshold_dynamic_q10n": [263, 414], "2f": [263, 266, 414, 420], "_true_": [263, 414], "c_u8_dynamic_q10n": [263, 414], "scale_c_dynamic_q10n": [263, 414], "yet": [263, 267, 329, 414, 418, 420, 422], "zp_c_dynamic_q10n": [263, 414], "rc": [263, 267, 414, 422], "logic_error": [263, 267, 270, 273, 275, 277, 414, 422, 426, 432, 434, 450], "matmul_exampl": [264, 283, 304, 416, 463], "densiti": [264, 416], "default_random_engin": [264, 416], "def_gen": [264, 416], "bernoulli_distribut": [264, 416], "b_dist": [264, 416], "is_on": [264, 416], "count_if": [264, 416], "matmul_src_md": [264, 416], "matmul_weights_md": [264, 416], "matmul_dst_md": [264, 416], "npleas": [264, 416], "matmul_src_mem": [264, 416], "matmul_weights_mem": [264, 416], "matmul_dst_mem": [264, 416], "matmul_prim": [264, 283, 284, 285, 286, 416, 463, 465, 467, 469], "wei_packed_md": [264, 416], "nhandl": [264, 304, 329, 330, 346, 416], "get_num_handl": [264, 416, 581], "wei_handl": [264, 416], "wei_buff": [264, 416], "buf_sz": [264, 416], "matmul_arg": [264, 283, 285, 416, 463, 467], "cstring": [265, 266, 294, 485], "src_seq_length_max": [265, 266, 304, 418, 420], "tgt_seq_length_max": [265, 266, 304, 418, 420], "feature_s": [265, 266, 304, 418, 420], "enc_bidir_n_lay": [265, 266, 304, 418, 420], "enc_unidir_n_lay": [265, 266, 304, 418, 420], "dec_n_lay": [265, 266, 304, 418, 420], "lstm_n_gate": [265, 266, 294, 304, 418, 420, 485], "weighted_src_lay": [265, 266, 304], "alignment_model": [265, 266, 304], "exp_sum": [265, 266, 304], "compute_weighted_annot": [265, 266, 304, 418, 420], "weighted_annot": [265, 266, 304, 418, 420], "weights_annot": [265, 266, 304], "enc_dst_lay": [265, 266], "num_weighted_annot": [265, 266], "dnnl_sgemm": [265, 266, 267, 304, 314, 422], "compute_attent": [265, 266, 304, 418, 420], "context_vector": [265, 266, 304], "weights_src_lay": [265, 266, 304], "dec_src_lay": [265, 266, 304], "weights_align": [265, 266, 304], "dst_iter": [265, 266, 294, 311, 418, 485, 595], "src_layer": [265, 266, 294, 311, 418, 420, 485, 595], "weights_yi": [265, 266], "weights_ai": [265, 266], "tmp": [265, 266, 341], "weighted_dec_src_lay": [265, 266], "alignment_model_ptr": [265, 266], "pragma_omp_parallel_for_collaps": [265, 266, 304], "tanhf": [265, 266], "gemv": [265, 266], "expf": [265, 266], "copy_context": [265, 266, 304, 418, 420], "src_iter": [265, 266, 294, 304, 311, 418, 420, 485, 595], "n_layer": [265, 266, 304], "cpu_engin": [265, 266, 270, 418, 420, 426], "encoder_net": [265, 266, 418, 420], "decoder_net": [265, 266, 418, 420], "encoder_net_arg": [265, 266, 418, 420], "decoder_net_arg": [265, 266, 418, 420], "enc_bidir_src_layer_tz": [265, 266, 418, 420], "enc_bidir_weights_layer_tz": [265, 266, 418, 420], "enc_bidir_weights_iter_tz": [265, 266, 418, 420], "enc_bidir_bias_tz": [265, 266, 418, 420], "enc_bidir_dst_layer_tz": [265, 266, 418, 420], "user_enc_bidir_wei_lay": [265, 266, 418, 420], "user_enc_bidir_wei_it": [265, 266, 418, 420], "user_enc_bidir_bia": [265, 266, 418, 420], "user_enc_bidir_src_layer_md": [265, 266, 418, 420], "user_enc_bidir_wei_layer_md": [265, 266, 418, 420], "user_enc_bidir_wei_iter_md": [265, 266, 418, 420], "user_enc_bidir_bias_md": [265, 266, 418, 420], "user_enc_bidir_src_layer_memori": [265, 266, 418, 420], "user_enc_bidir_wei_layer_memori": [265, 266, 418, 420], "user_enc_bidir_wei_iter_memori": [265, 266, 418, 420], "user_enc_bidir_bias_memori": [265, 266, 418, 420], "enc_bidir_wei_layer_md": [265, 266, 418, 420], "enc_bidir_wei_iter_md": [265, 266, 418, 420], "enc_bidir_dst_layer_md": [265, 266, 418, 420], "enc_bidir_prim_desc": [265, 266, 418, 420], "enc_bidir_wei_layer_memori": [265, 266, 418, 420], "enc_bidir_wei_layer_reorder_pd": [265, 266, 418], "enc_bidir_wei_iter_memori": [265, 266, 418, 420], "enc_bidir_wei_iter_reorder_pd": [265, 266], "enc_bidir_dst_layer_memori": [265, 266, 418, 420], "bi": [265, 266], "user_enc_uni_first_wei_lay": [265, 266, 418, 420], "user_enc_uni_first_wei_it": [265, 266, 418, 420], "user_enc_uni_first_bia": [265, 266, 418, 420], "user_enc_uni_first_wei_layer_dim": [265, 266], "user_enc_uni_first_wei_iter_dim": [265, 266], "user_enc_uni_first_bias_dim": [265, 266], "enc_uni_first_dst_layer_dim": [265, 266], "user_enc_uni_first_wei_layer_md": [265, 266], "user_enc_uni_first_wei_iter_md": [265, 266], "user_enc_uni_first_bias_md": [265, 266, 418, 420], "user_enc_uni_first_wei_layer_memori": [265, 266], "user_enc_uni_first_wei_iter_memori": [265, 266], "user_enc_uni_first_bias_memori": [265, 266, 418, 420], "enc_uni_first_wei_layer_md": [265, 266, 418, 420], "enc_uni_first_wei_iter_md": [265, 266, 418, 420], "enc_uni_first_dst_layer_md": [265, 266, 418, 420], "enc_uni_first_prim_desc": [265, 266, 418, 420], "enc_uni_first_wei_layer_memori": [265, 266, 418, 420], "enc_uni_first_wei_layer_reorder_pd": 265, "enc_uni_first_wei_iter_memori": [265, 266, 418, 420], "enc_uni_first_wei_iter_reorder_pd": 265, "enc_uni_first_dst_layer_memori": [265, 266, 418, 420], "user_enc_uni_wei_lay": [265, 266, 418, 420], "user_enc_uni_wei_it": [265, 266, 418, 420], "user_enc_uni_bia": [265, 266, 418, 420], "user_enc_uni_wei_layer_dim": [265, 266], "user_enc_uni_wei_iter_dim": [265, 266], "user_enc_uni_bias_dim": [265, 266], "enc_dst_layer_dim": [265, 266], "user_enc_uni_wei_layer_md": [265, 266], "user_enc_uni_wei_iter_md": [265, 266], "user_enc_uni_bias_md": [265, 266, 418, 420], "user_enc_uni_wei_layer_memori": [265, 266], "user_enc_uni_wei_iter_memori": [265, 266], "user_enc_uni_bias_memori": [265, 266, 418, 420], "enc_uni_wei_layer_md": [265, 266, 418, 420], "enc_uni_wei_iter_md": [265, 266, 418, 420], "enc_dst_layer_md": [265, 266, 418, 420], "enc_uni_prim_desc": [265, 266, 418, 420], "enc_uni_wei_layer_memori": [265, 266, 418, 420], "enc_uni_wei_layer_reorder_pd": [265, 266], "enc_uni_wei_iter_memori": [265, 266, 418, 420], "enc_uni_wei_iter_reorder_pd": [265, 266], "enc_dst_layer_memori": [265, 266, 418, 420], "dec": [265, 266], "mem": [265, 266, 269, 270, 275, 299, 300, 304, 424, 434, 493, 495], "user_dec_wei_lay": [265, 266, 418, 420], "user_dec_wei_it": [265, 266, 418, 420], "user_dec_bia": [265, 266, 418, 420], "user_dec_dst": [265, 418], "user_weights_attention_src_lay": [265, 266, 418, 420], "user_weights_annot": [265, 266, 418, 420], "user_weights_align": [265, 266, 418, 420], "user_dec_wei_layer_dim": [265, 266, 418, 420], "user_dec_wei_iter_dim": [265, 266, 418, 420], "user_dec_bias_dim": [265, 266, 418, 420], "dec_src_layer_dim": [265, 266, 418, 420], "dec_dst_layer_dim": [265, 266, 418, 420], "dec_dst_iter_c_dim": [265, 266, 418, 420], "noctx": [265, 266], "dec_dst_iter_dim": [265, 266, 418, 420], "dec_dst_iter_noctx_dim": [265, 266, 418, 420], "user_dec_wei_layer_md": [265, 266, 418, 420], "user_dec_wei_iter_md": [265, 266, 418, 420], "user_dec_bias_md": [265, 266, 418, 420], "dec_dst_layer_md": [265, 266, 418, 420], "dec_src_layer_md": [265, 266, 418, 420], "dec_dst_iter_md": [265, 266, 418, 420], "dec_dst_iter_c_md": [265, 266, 418, 420], "user_dec_wei_layer_memori": [265, 266, 418, 420], "user_dec_wei_iter_memori": [265, 266, 418, 420], "user_dec_bias_memori": [265, 266, 418, 420], "user_dec_dst_layer_memori": [265, 418], "dec_src_layer_memori": [265, 266, 418, 420], "dec_dst_iter_c_memori": [265, 266, 418, 420], "dec_wei_layer_md": [265, 266, 418], "dec_wei_iter_md": [265, 266, 418], "dec_dst_iter_memori": [265, 266, 418, 420], "dec_dst_iter_noctx_md": [265, 266, 418, 420], "dec_ctx_prim_desc": [265, 266, 418, 420], "dec_wei_layer_memori": [265, 266, 418, 420], "dec_wei_layer_reorder_pd": [265, 266, 418, 420], "dec_wei_iter_memori": [265, 266, 418], "dec_wei_iter_reorder_pd": [265, 266, 418], "enc": [265, 266], "ano": [265, 266], "init": [265, 266, 273, 275, 288, 434], "src_att_layer_handl": [265, 266, 418, 420], "src_att_iter_handl": [265, 266, 418, 420], "att": [265, 266], "dst_layer_handl": [265, 266, 418, 420], "compute_sum_of_row": [266, 304, 420], "col": [266, 304], "a_reduc": [266, 304], "weights_src_layer_scal": [266, 304], "dec_src_layer_scal": [266, 304], "dec_src_layer_shift": [266, 304], "tnc_offset": 266, "max_idx": 266, "max_idx_v": 266, "data_shift": [266, 420], "data_scal": [266, 420], "weights_scale_mask": [266, 420], "weights_scal": [266, 284, 420, 465], "halv": [266, 420], "scales_half": [266, 420], "65": [266, 420], "3f": [266, 290, 420, 477], "enc_bidir_src_layer_md": [266, 420], "attri": 266, "enc_bidir_src_layer_memori": [266, 420], "enc_bidir_src_layer_reorder_pd": [266, 420], "weights_attention_scal": [266, 420], "dec_dst": [266, 420], "dec_src_it": [266, 418], "dec_dst_it": [266, 418, 420], "dec_dst_layer_memori": [266, 420], "weights_attention_sum_row": [266, 420], "s8u8s32": [266, 420], "tight": [267, 422], "difficult": [267, 422], "finit": [267, 422], "tl2": [267, 422], "trelative_error": [267, 422], "taccuraci": [267, 422], "number_of_run": [267, 277, 303, 304, 422, 450, 499], "fixed_beta": [267, 304, 422], "_dynamic_": [267, 422], "dynamic_matmul_cr": [267, 304, 422], "a_shap": [267, 422], "b_shape": [267, 422], "c_shape": [267, 422], "a_strid": [267, 422], "b_stride": [267, 422], "c_stride": [267, 422], "earlier": [267, 422, 432, 493], "dynamic_matmul_execut": [267, 304, 422], "transa": [267, 304, 314, 347, 372, 378, 422], "transb": [267, 304, 314, 347, 372, 378, 422], "translat": [267, 422], "tolow": [267, 422], "a_m": [267, 422], "b_m": [267, 422], "c_m": [267, 422], "alpha_m": [267, 286, 422, 469], "sgemm_and_matmul_with_param": [267, 304, 422], "c_sgemm": [267, 422], "c_dynamic_matmul": [267, 422], "dynamic_matmul": [267, 422], "diverg": [267, 422], "sgemm_and_matmul": [267, 304, 422], "cpu_single_op_partition_tutori": 268, "src0_dim": [268, 301], "src1_dim": [268, 301], "matmul_src0_desc": [268, 301, 440, 446], "matmul_src1_desc": [268, 301, 440, 446], "matmul_dst_desc": [268, 301, 440, 446], "matmul_src0": [268, 301], "matmul_src1": [268, 301], "matmul_dst": [268, 301], "n_dim": [269, 304, 424], "n_elem": [269, 424], "complain_example_error_and_exit": [269, 304, 424], "find_neg": [269, 270, 304, 424, 426], "engine_cpu": [269, 424], "engine_gpu": [269, 424], "validate_engine_kind": [269, 270, 274, 275, 301, 304, 424, 426, 434, 442], "tz": [269, 270, 424, 426], "m_cpu_md": [269, 424], "m_gpu_md": [269, 424], "m_cpu": [269, 270, 424, 426], "m_gpu": [269, 270, 424, 426], "r1_pd": [269, 424], "r1": [269, 270, 424, 426], "r2_pd": [269, 424], "r2": [269, 270, 424, 426], "stream_gpu": [269, 270, 424, 426], "r1_arg": [269, 424], "relu_arg": [269, 424], "r2_arg": [269, 424], "prologu": [270, 275, 288, 299], "nelem": 270, "cross_engine_reorder_tutori": 270, "gpu_engin": [270, 426], "deconvolution_exampl": [271, 304, 428], "revers": [271, 428], "deconv_src_md": [271, 428], "deconv_weights_md": [271, 428], "deconv_dst_md": [271, 428], "deconv_op": [271, 428], "deconv_attr": [271, 428], "deconv_pd": [271, 428], "deconvolution_forward": [271, 319, 372, 428, 525, 527, 593], "deconv_src_mem": [271, 428], "deconv_weights_mem": [271, 428], "deconv_dst_mem": [271, 428], "deconv_prim": [271, 428], "deconv_arg": [271, 428], "eltwise_exampl": [272, 304, 430], "eltwise_pd": [272, 430], "eltwise_prim": [272, 430], "eltwise_arg": [272, 430], "dnnl_debug": [273, 299, 300, 426, 432, 434, 493, 495], "getting_started_tutori": 273, "image_s": [273, 432], "alt_src_md": [273, 432], "obj": [273, 432], "relu_imag": [273, 432], "caught": [273, 299, 300, 432, 493, 495], "tstatu": [273, 299, 300, 432, 493, 495], "dnnl_status2str": [273, 299, 300, 304, 432, 493, 495], "tmessag": [273, 299, 300, 432, 493, 495], "cl_ext": [274, 442], "ocl_getting_started_tutori": 274, "allocate_ocl_graph_mem": [274, 304], "ocl_check": [275, 304, 434], "cl_int": 275, "cl_success": 275, "__file__": 275, "__line__": 275, "cl_kernel": [275, 304, 434], "create_init_opencl_kernel": [275, 304, 434], "ocl_ctx": [275, 304], "kernel_nam": [275, 304, 434], "ocl_cod": [275, 304, 434], "err": 275, "cl_program": 275, "ocl_program": 275, "clcreateprogramwithsourc": 275, "clbuildprogram": 275, "ocl_kernel": 275, "clcreatekernel": 275, "clreleaseprogram": 275, "gpu_opencl_interop_tutori": 275, "tz_dim": [275, 294, 299, 300, 434, 485, 493, 495], "mem_d": [275, 299, 300, 434, 493, 495], "__kernel": [275, 434], "__global": [275, 434], "get_global_id": [275, 434], "oclkernel": 275, "ocl_init_kernel": [275, 434], "oclexecut": 275, "ocl_buf": [275, 434], "clsetkernelarg": [275, 434], "clenqueuendrangekernel": [275, 434], "mem_data": [275, 434], "clreleasekernel": 275, "group_normalization_exampl": [276, 304, 448], "28": [276, 448, 473], "gnorm_pd": [276, 448], "gnorm_prim": [276, 448], "gnorm_arg": [276, 448], "uniform_int_distribut": [277, 285, 450, 467], "sc_a": [277, 450], "sc_b": [277, 303, 450, 499], "sc_c": [277, 450], "mlp": [277, 303, 306, 450, 499], "matmul_pd_cr": [277, 303, 304, 450, 499], "prepare_input": [277, 303, 304, 450, 499], "a_u8_mem": [277, 304, 450], "sc_a_mem": [277, 304, 450], "sc_b_mem": [277, 303, 304, 450, 499], "sc_c_mem": [277, 304, 450], "zp_a_mem": [277, 304, 450], "zp_c_mem": [277, 304, 450], "25f": [277, 450], "40": [277, 450], "sanity_check": [277, 304, 450], "c_u8_mem": [277, 304, 450], "tquantiz": [277, 450], "twhich": [277, 450], "b_s8_mem": [277, 303, 304, 450, 499], "meaning": [277, 303, 450, 499], "inner_product_exampl": [278, 304, 452], "inner_product_weights_md": [278, 452], "inner_product_op": [278, 452], "inner_product_attr": [278, 452], "inner_product_pd": [278, 452], "inner_product_weights_mem": [278, 452], "inner_product_prim": [278, 452], "inner_product_arg": [278, 452], "layer_normalization_exampl": [279, 304, 454], "lnorm_pd": [279, 454], "lnorm_prim": [279, 454], "lnorm_arg": [279, 454], "lbr_gru_exampl": [280, 304, 456], "weights_layer_dim": [280, 456], "weights_iter_dim": [280, 456], "dst_layer_dim": [280, 302, 456, 497], "dst_iter_dim": [280, 302, 456, 497], "dst_iter_data": [280, 302, 456, 497], "weights_layer_md": [280, 302, 456, 497], "weights_iter_md": [280, 302, 456, 497], "weights_layer_mem": [280, 302, 456, 497], "lbr_gru_prim": [280, 456], "lbr_gru_arg": [280, 456], "lrn_exampl": [281, 304, 459], "lrn_prim": [281, 459], "lrn_arg": [281, 459], "lstm_exampl": [282, 304, 461], "lstm_weights_layer_md": [282, 461], "lstm_weights_iter_md": [282, 461], "src_iter_c_md": [282, 461], "dst_iter_c_md": [282, 461], "lstm_weights_layer_mem": [282, 461], "lstm_weights_iter_mem": [282, 461], "src_iter_c_mem": [282, 461], "dst_iter_c_mem": [282, 461], "lstm_prim": [282, 461], "lstm_arg": [282, 461], "weights_mem": [283, 284, 287, 463, 465, 471], "matmul_op": [283, 463], "decode_f8_e4m3": [284, 304, 465], "f8_val": [284, 304, 465], "eeee": [284, 465], "mmm": [284, 465], "mant": [284, 465], "quiet_nan": [284, 465], "denorm": [284, 465], "powf": [284, 465], "decode_f8_e5m2": [284, 304, 465], "eeeee": [284, 465], "mm": [284, 465], "31": [284, 294, 304, 465, 485], "get_f8_type_nam": [284, 304, 465], "return_max_valu": [284, 304, 465], "11111": [284, 465], "00": [284, 465], "01": [284, 465], "57344": [284, 465], "1111": [284, 465], "111": [284, 465], "110": [284, 465], "448": [284, 465], "compute_naive_quant": [284, 304, 465], "dst_type": [284, 304, 465], "label": [284, 304, 465], "max_ab": [284, 465], "theoret": [284, 304, 465], "f8_max": [284, 465], "perform_matmul_with_f8_quant": [284, 304, 465], "f8_type": [284, 304, 465], "e4m3": [284, 465], "weights_f32": [284, 465], "iota": [284, 465], "450": [284, 465], "src_f8_md": [284, 465], "weights_f8_md": [284, 465], "src_f8_mem": [284, 465], "weights_f8_mem": [284, 465], "nstep": [284, 465], "src_scale_mem": [284, 465], "weights_scale_mem": [284, 465], "weights_attr": [284, 465], "reorder_src_pd": [284, 465], "reorder_weights_pd": [284, 465], "reorder_src": [284, 287, 465, 471], "reorder_weight": [284, 287, 465, 471], "weights_f8_data": [284, 465], "decode_f8": [284, 465], "dst_result": [284, 465], "ref_result": [284, 465], "max_rel_error": [284, 465], "6f": [284, 465], "rel_error": [284, 465], "toler": [284, 465], "15f": [284, 465], "validation_pass": [284, 465], "run_f8_tutori": [284, 304, 465], "iomanip": [285, 467], "gemm_dims_t": [285, 304, 467], "min_run": [285, 304, 467], "get_type_str": [285, 304, 467], "type_str": [285, 467], "type_cas": [285, 304, 467], "print_test_cas": [285, 304, 467], "setw": [285, 467], "fill_random": [285, 304, 467], "is_integ": [285, 304, 467], "random_data_i": [285, 467], "random_data_f": [285, 467], "constexpr": [285, 467, 620], "nrand": [285, 467], "1037": [285, 467], "dist_i": [285, 467], "dist_f": [285, 467], "rd": [285, 467], "chunk": [285, 294, 467, 485], "memcpi": [285, 467], "run_cas": [285, 304, 467], "time_limit": [285, 304, 467], "quick_test": [285, 467], "a_data": [285, 286, 304, 467, 469], "b_data": [285, 286, 304, 467, 469], "a_in_md": [285, 467], "b_in_md": [285, 467], "a_in_mem": [285, 467], "b_in_mem": [285, 467], "repack": [285, 467], "warmup": [285, 467], "start_first": [285, 467], "end_first": [285, 467], "dur_first": [285, 467], "avg_tim": [285, 467], "total_op": [285, 467], "perf": [285, 341, 467], "scale_str": [285, 467], "unit_str": [285, 467], "flop": [285, 467], "mnk": [285, 467], "max_mnk": [285, 467], "8192": [285, 467], "time1": [285, 467], "nruns_est": [285, 467], "mnk_expand": [285, 467], "exp2": [285, 467], "log2": [285, 467], "bad_arg": [285, 304, 467], "cerr": [285, 467], "atoi": [285, 467], "c_ref": [286, 469], "c_result": [286, 469], "simple_matmul_with_host_scalar": [286, 304, 469], "mxk": [286, 314, 347, 378, 469], "kxn": [286, 314, 347, 378, 469], "mxn": [286, 314, 347, 378, 469], "sstream": 287, "memory_format_propagation_tutori": 287, "3x3": [287, 471], "need_reorder_src": [287, 471], "need_reorder_weight": [287, 471], "need_reorder_dst": [287, 471], "pool_dst_mem": [287, 471], "conv_scratchpad_mem": [287, 471], "pool_scratchpad_mem": [287, 471], "reorder_dst": [287, 471], "init_data": [288, 304], "create_and_execute_relu": [288, 304, 473], "create_attr_with_relu_post_op": [288, 304, 473], "naiv": [288, 304, 465], "conv_relu_na": [288, 473], "user_wei": [288, 473], "mem_desc": 288, "conv_wei_md": [288, 473], "conv_primit": 288, "conv_relu_block": [288, 473], "implementation2": 288, "condition": 288, "r_pd": [288, 473], "conv_wei": [288, 473], "conv_dst": [288, 473], "prim_descriptor": 288, "conv_relu_fus": [288, 473], "prim_desc": 288, "implementation3": 288, "synthet": [288, 473], "pooling_exampl": [289, 304, 475], "dilation_onednn": [289, 475], "dilation_torch": [289, 475], "kernel_dim": [289, 475], "pooling_pd": [289, 475], "pooling_prim": [289, 475], "pooling_arg": [289, 475], "prelu_exampl": [290, 304, 477], "prelu_pd": [290, 477], "prelu_forward": [290, 332, 372, 477, 589, 593], "prelu_weights_mem": [290, 477], "prelu_prim": [290, 477], "prelu_arg": [290, 477], "reduction_exampl": [291, 304, 479], "reduction_pd": [291, 479], "reduction_prim": [291, 479], "reduction_arg": [291, 479], "reorder_exampl": [292, 304, 481], "ic_dim": [292, 481], "reorder_attr": [292, 481], "dst_scales_mem": [292, 481], "reorder_prim": [292, 481], "reorder_arg": [292, 481], "resampling_exampl": [293, 304, 483], "350": [293, 483], "resampling_pd": [293, 483], "resampling_forward": [293, 339, 372, 483, 593, 604], "resampling_prim": [293, 483], "resampling_arg": [293, 483], "n0": [294, 304, 485], "rand": [294, 304, 485], "n1": [294, 304, 485], "compact": [294, 473, 485], "leftmost": [294, 485], "leftmost_batch": [294, 304, 485], "rightmost_batch": [294, 304, 485], "leftmost_seq_length": [294, 304, 485], "rightmost_seq_length": [294, 304, 485], "common_feature_s": [294, 304, 485], "characterist": [294, 432, 485], "common_n_lay": [294, 304, 485], "is_train": [294, 485], "fwd_inf_train": [294, 485], "fwd_net": [294, 485], "bwd_net": [294, 485], "shorter": [294, 485], "net_src_dim": [294, 485], "leftmost_src_layer_dim": [294, 485], "rightmost_src_layer_dim": [294, 485], "common_weights_layer_dim": [294, 485], "common_weights_iter_dim": [294, 485], "common_bias_dim": [294, 485], "leftmost_dst_layer_dim": [294, 485], "rightmost_dst_layer_dim": [294, 485], "arrang": [294, 485], "our": [294, 434, 471, 485, 493], "leftmost_dst_iter_dim": [294, 485], "leftmost_dst_iter_c_dim": [294, 485], "rightmost_src_iter_dim": [294, 485], "rightmost_src_iter_c_dim": [294, 485], "tz_volum": [294, 485], "suppli": [294, 349, 485], "formatted_md": [294, 485], "generic_md": [294, 485], "studi": [294, 485], "suggest": [294, 485], "leftmost_dst_layer_memori": [294, 485], "rightmost_dst_layer_memori": [294, 485], "net_src_memori": [294, 485], "accommod": [294, 471, 485], "user_leftmost_src_layer_md": [294, 485], "user_rightmost_src_layer_md": [294, 485], "leftmost_src_layer_memori": [294, 485], "rightmost_src_layer_memori": [294, 485], "ll": [294, 485], "user_common_weights_lay": [294, 485], "user_common_weights_layer_memori": [294, 485], "user_common_weights_it": [294, 485], "user_common_weights_iter_memori": [294, 485], "user_common_bia": [294, 485], "user_common_bias_memori": [294, 485], "user_leftmost_dst_lay": [294, 485], "user_leftmost_dst_layer_memori": [294, 485], "user_rightmost_dst_lay": [294, 485], "user_rightmost_dst_layer_memori": [294, 485], "leftmost_prim_desc": [294, 485], "aprop_kind": [294, 485, 506, 508, 510, 512, 517, 523, 529, 533, 541, 543, 545, 547, 555, 557, 559, 561, 563, 565, 567, 571, 573, 575, 585, 591, 597, 598, 602, 606, 607, 611, 615, 619, 627, 629], "leftmost_dst_iter_memori": [294, 485], "leftmost_dst_iter_c_memori": [294, 485], "rightmost_src_iter_md": [294, 485], "rightmost_src_iter_memori": [294, 485], "rightmost_src_iter_c_md": [294, 485], "rightmost_src_iter_c_memori": [294, 485], "rightmost_prim_desc": [294, 485], "rigthmost": [294, 485], "common_weights_layer_memori": [294, 485], "common_weights_iter_memori": [294, 485], "common_bias_memori": [294, 485], "workspace_primitive_desc": [294, 485], "commun": [294, 485], "create_w": [294, 485], "leftmost_workspace_memori": [294, 485], "rightmost_workspace_memori": [294, 485], "leftmost_lay": [294, 485], "rightmost_lay": [294, 485], "net_diff_src": [294, 485], "net_diff_src_memori": [294, 485], "user_leftmost_diff_src_layer_md": [294, 485], "user_rightmost_diff_src_layer_md": [294, 485], "leftmost_diff_src_layer_memori": [294, 485], "rightmost_diff_src_layer_memori": [294, 485], "backpropag": [294, 485], "user_common_diff_weights_lay": [294, 485], "user_common_diff_weights_layer_memori": [294, 485], "user_common_diff_bia": [294, 485], "user_common_diff_bias_memori": [294, 485], "net_diff_dst_dim": [294, 485], "net_diff_dst_memori": [294, 485], "diff_dst_lay": [294, 485], "user_leftmost_diff_dst_layer_md": [294, 485], "user_rightmost_diff_dst_layer_md": [294, 485], "leftmost_diff_dst_layer_memori": [294, 485], "rightmost_diff_dst_layer_memori": [294, 485], "leftmost_bwd_prim_desc": [294, 485], "diff_src_layer_desc": [294, 304, 340, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "diff_src_iter_desc": [294, 304, 340, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "diff_src_iter_c_desc": [294, 304, 340, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "diff_weights_layer_desc": [294, 304, 340, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "diff_weights_iter_desc": [294, 304, 340, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "diff_bias_desc": [294, 304, 317, 319, 324, 340, 485, 506, 508, 521, 527, 545, 547, 553, 561, 563, 565, 567, 573, 575, 607, 627, 629], "diff_dst_layer_desc": [294, 304, 340, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "diff_dst_iter_desc": [294, 304, 340, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "diff_dst_iter_c_desc": [294, 304, 340, 485, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "leftmost_diff_dst_iter_memori": [294, 485], "leftmost_diff_dst_iter_c_memori": [294, 485], "rightmost_diff_src_iter_md": [294, 485], "rightmost_diff_src_iter_memori": [294, 485], "rightmost_diff_src_iter_c_md": [294, 485], "rightmost_diff_src_iter_c_memori": [294, 485], "rightmost_bwd_prim_desc": [294, 485], "leftmost_src_layer_bwd_memori": [294, 485], "rightmost_src_layer_bwd_memori": [294, 485], "common_weights_layer_bwd_memori": [294, 485], "common_weights_iter_bwd_memori": [294, 485], "common_bias_bwd_memori": [294, 485], "common_diff_weights_layer_memori": [294, 485], "reorder_common_diff_weights_lay": [294, 485], "common_diff_bias_memori": [294, 485], "reorder_common_diff_bia": [294, 485], "dst_layer": [294, 311, 485, 595], "leftmost_dst_layer_bwd_memori": [294, 485], "rightmost_dst_layer_bwd_memori": [294, 485], "common_diff_weights_iter_memori": [294, 485], "leftmost_dst_iter_bwd_memori": [294, 485], "leftmost_dst_iter_c_bwd_memori": [294, 485], "rightmost_layer_bwd": [294, 485], "leftmost_layer_bwd": [294, 485], "shuffle_exampl": [295, 304, 487], "shuffle_axi": [295, 487], "shuffle_pd": [295, 487], "shuffle_forward": [295, 342, 372, 487, 593, 609], "shuffle_prim": [295, 487], "shuffle_arg": [295, 487], "softmax_exampl": [296, 304, 489], "softmax_pd": [296, 489], "softmax_forward": [296, 343, 372, 489, 593, 613], "softmax_prim": [296, 489], "softmax_arg": [296, 489], "sum_exampl": [297, 304, 491], "sum_pd": [297, 491], "sum_prim": [297, 491], "sum_arg": [297, 491], "dnnl_graph_sycl": [298, 301, 444, 446], "sycl_getting_started_tutori": 298, "make_alloc": [298, 301, 354, 374, 375, 444, 446], "sycl_malloc_wrapp": [298, 301, 304, 444, 446], "sycl_free_wrapp": [298, 301, 304, 444, 446], "gpu_selector_v": [298, 301, 444, 446], "cpu_selector_v": [298, 444, 446], "sycl_get_start": 298, "allocate_sycl_graph_mem": [298, 301, 304], "__has_includ": [299, 300, 493, 495], "kernel_tag": [299, 300, 493, 495], "sycl_interop_buffer_tutori": 299, "buf": [299, 304, 363, 367], "sycl_buf": [299, 493], "handler": [299, 300, 493, 495], "cgh": [299, 300, 493, 495], "get_access": [299, 493], "host_acc": [299, 493], "get_host_access": [299, 493], "exp_valu": [299, 300, 493, 495], "sycl_usm_tutori": [300, 304, 495], "usm_buff": [300, 495], "malloc_shar": [300, 495], "fill_": [300, 495], "gpu_single_op_partition_tutori": 301, "vanilla_rnn_exampl": [302, 304, 497], "vanilla_rnn_prim": [302, 497], "vanilla_rnn_arg": [302, 497], "zp_b_mem": [303, 304, 499], "num_g": [303, 499], "n_group": [303, 499], "c_f32_mem": [303, 499], "dnnl_memory_desc": [304, 329], "dnnl_memori": [304, 329], "const_dnnl_memory_t": [304, 329, 330, 346], "dnnl_primitive_desc": [304, 335], "dnnl_primitive_attr": [304, 311], "const_dnnl_primitive_attr_t": [304, 311, 312, 313, 316, 317, 319, 320, 323, 324, 326, 327, 328, 331, 332, 335, 337, 338, 339, 340, 342, 343, 345], "dnnl_post_op": [304, 311], "const_dnnl_post_ops_t": [304, 311, 349], "dnnl_primit": [304, 335], "const_dnnl_primitive_t": [304, 330, 335, 346], "dnnl_engin": [304, 321], "dnnl_stream": [304, 344], "const_dnnl_stream_t": [304, 344], "dnnl_graph_ocl_allocate_f": [304, 363, 374], "dnnl_graph_ocl_deallocate_f": [304, 363, 374], "dnnl_graph_sycl_allocate_f": [304, 354, 367, 375, 444, 446], "dnnl_graph_sycl_deallocate_f": [304, 354, 367, 375, 444, 446], "dnnl_graph_partit": [304, 365], "const_dnnl_graph_partition_t": [304, 365], "dnnl_graph_graph": [304, 360], "dnnl_graph_graph_t": [304, 360], "const_dnnl_graph_graph_t": [304, 360], "dnnl_graph_op": [304, 364], "dnnl_graph_op_t": [304, 360, 364], "const_dnnl_graph_op_t": [304, 364, 365], "dnnl_graph_alloc": [304, 354], "dnnl_graph_allocator_t": [304, 354, 363, 367], "const_dnnl_graph_allocator_t": [304, 354, 359, 363, 367], "dnnl_graph_compiled_partit": [304, 355], "const_dnnl_graph_compiled_partition_t": [304, 355, 363, 367], "dnnl_graph_tensor": [304, 368], "dnnl_graph_tensor_t": [304, 368], "const_dnnl_graph_tensor_t": [304, 355, 363, 367, 368], "dnnl_ukernel_attr_param": [304, 348], "dnnl_ukernel_attr_params_t": [304, 348], "const_dnnl_ukernel_attr_params_t": [304, 348, 349], "dnnl_brgemm": [304, 349], "dnnl_brgemm_t": [304, 349], "const_dnnl_brgemm_t": [304, 349], "dnnl_transform": [304, 350], "dnnl_transform_t": [304, 350], "const_dnnl_transform_t": [304, 350], "api_kind": 304, "dnnl_accumulation_mode_t": [304, 310, 311, 372], "dnnl_cpu_isa_hints_t": [304, 341], "dnnl_cpu_isa_t": [304, 341], "dnnl_fpmath_mode_t": [304, 311, 322, 360, 372], "dnnl_graph_dump_mode_t": [304, 358, 360], "dnnl_graph_layout_type_t": [304, 362, 539], "dnnl_graph_op_attr_t": [304, 364], "dnnl_graph_op_kind_t": [304, 364], "dnnl_graph_partition_policy_t": [304, 360, 365], "dnnl_graph_tensor_property_t": [304, 362, 539], "dnnl_normalization_flags_t": [304, 312, 323, 326, 335, 372], "dnnl_ocl_interop_memory_kind_t": [304, 330, 376], "dnnl_pack_type_t": [304, 348, 349, 350], "dnnl_profiling_data_kind_t": [304, 329, 336], "dnnl_prop_kind_t": [304, 311, 312, 317, 319, 320, 323, 324, 326, 327, 331, 332, 335, 339, 340, 342, 343, 372], "dnnl_quantization_mode_t": [304, 311, 372], "dnnl_rnn_flags_t": [304, 340, 372], "dnnl_rounding_mode_t": [304, 311, 372], "dnnl_scratchpad_mode_t": [304, 311, 372], "dnnl_stream_flags_t": [304, 344], "dnnl_sycl_interop_memory_kind_t": [304, 346, 377], "cpu_deletor_t": 304, "dnnl_graph_inplace_pair_t": [304, 355], "gqa_dims_t": 304, "mlp_dims_t": 304, "mqa_dims_t": 304, "sdpa_dims_t": 304, "sycl_deletor_t": 304, "simple_memory_pool_t": 304, "bnorm_u8_via_binary_postop": [304, 383, 390], "cnn_inference_f32": [304, 383, 394], "cross_engine_reord": [304, 383, 424, 426], "initializer_list": 304, "extra_arg": 304, "bench_gated_mlp": 304, "bench": 304, "mlp_perf": 304, "size_of": 304, "fill_mask": 304, "seq_len": [304, 633, 635, 636], "bench_gqa": 304, "gqa_perf": 304, "bench_gqa_forward": 304, "ts_queri": 304, "ts_kei": 304, "ts_scale": 304, "ts_mask": 304, "ts_valu": 304, "ts_output": 304, "ts_stat": 304, "bench_gqa_backward": 304, "ts_doutput": 304, "id_to_set_any_layout": 304, "is_input": 304, "ocl_malloc_devic": 304, "ocl_fre": [304, 363, 374], "ocl_memcpi": 304, "make_md": 304, "write_dt": 304, "write_to_dnnl_tensor": 304, "get_mem_pool": 304, "create_alloc": 304, "bench_mqa": 304, "mqa_perf": 304, "bench_sdpa_primit": 304, "bench_sdpa": 304, "sdpa_perf": 304, "matmul_perf": [304, 383, 467], "performance_profil": [304, 383, 473], "inference_int8_matmul": [304, 383, 450], "weights_decompression_matmul": [304, 383, 499], "dnnl_api": [304, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368], "dnnl_primitive_desc_next_impl": [304, 335], "existing_primitive_desc": [304, 335], "dnnl_primitive_desc_get_attr": [304, 335], "dnnl_primitive_desc_query_s32": [304, 335], "dnnl_primitive_create_from_cache_blob": [304, 335], "cache_blob": [304, 330, 335, 363, 374, 376, 505, 507, 509, 511, 513, 516, 518, 520, 522, 524, 526, 528, 530, 532, 540, 542, 544, 546, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 582, 584, 588, 590, 593, 599, 601, 603, 605, 608, 610, 612, 614, 618, 626, 628], "dnnl_primitive_get_primitive_desc": [304, 335], "dnnl_primitive_get_cache_blob": [304, 335], "dnnl_primitive_attr_clon": [304, 311], "existing_attr": [304, 311], "dropout_desc": [304, 311], "dnnl_primitive_attr_get_fpmath_mod": [304, 311], "dnnl_primitive_attr_set_fpmath_mod": [304, 311], "dnnl_primitive_attr_get_fpmath_mode_v2": [304, 311], "dnnl_primitive_attr_get_determinist": [304, 311], "dnnl_primitive_attr_get_accumulation_mod": [304, 311], "dnnl_primitive_attr_set_accumulation_mod": [304, 311], "dnnl_primitive_attr_get_scratchpad_mod": [304, 311], "dnnl_primitive_attr_set_scales_mask": [304, 311, 595], "dnnl_primitive_attr_set_scal": [304, 311], "group_ndim": [304, 311], "group_dim": [304, 311], "dnnl_primitive_attr_set_scales_v2": [304, 311, 595], "dnnl_primitive_attr_set_scales_v3": [304, 311, 595], "dnnl_primitive_attr_set_zero_points_mask": [304, 311, 595], "dnnl_primitive_attr_set_zero_point": [304, 311, 595], "dnnl_primitive_attr_set_precomputed_reduct": [304, 311, 595], "dnnl_primitive_attr_set_zero_points_v2": [304, 311, 595], "dnnl_primitive_attr_set_round": [304, 311], "dnnl_primitive_attr_get_round": [304, 311], "dnnl_primitive_attr_get_post_op": [304, 311], "dnnl_post_ops_cr": [304, 311], "dnnl_post_ops_clon": [304, 311], "existing_post_op": [304, 311], "dnnl_post_ops_destroi": [304, 311], "dnnl_post_ops_len": [304, 311], "dnnl_post_ops_get_kind": [304, 311], "dnnl_post_ops_append_sum": [304, 311], "dnnl_post_ops_get_params_sum": [304, 311], "dnnl_post_ops_get_params_eltwis": [304, 311], "weights_data_typ": [304, 311, 587], "bias_data_typ": [304, 311, 587], "dst_data_typ": [304, 311, 587], "kernel_s": [304, 311, 587], "stride_s": [304, 311, 587], "padding_l_s": [304, 311, 587], "dnnl_post_ops_get_params_dw": [304, 311], "src1_desc": [304, 311, 313, 514, 587], "dnnl_post_ops_append_binary_v2": [304, 311], "src2_desc": [304, 311, 313, 514, 587], "dnnl_post_ops_get_params_binari": [304, 311], "dnnl_post_ops_get_params_binary_v2": [304, 311], "dnnl_post_ops_get_params_prelu": [304, 311], "memory_desc": [304, 329, 330, 346, 376, 377], "dnnl_memory_desc_clon": [304, 329], "existing_memory_desc": [304, 329], "dnnl_memory_desc_get_blob": [304, 329], "dnnl_memory_desc_create_with_blob": [304, 329], "dnnl_memory_desc_create_with_csr_encod": [304, 329], "dnnl_memory_desc_create_with_coo_encod": [304, 329], "dnnl_memory_desc_create_with_packed_encod": [304, 329], "dnnl_memory_desc_create_submemori": [304, 329], "parent_memory_desc": [304, 329], "dnnl_memory_desc_reshap": [304, 329], "out_memory_desc": [304, 329], "in_memory_desc": [304, 329], "dnnl_memory_desc_permute_ax": [304, 329], "dnnl_memory_desc_query_v2": [304, 329], "lh": [304, 329], "rh": [304, 329], "dnnl_memory_desc_get_size_v2": [304, 329], "dnnl_data_type_s": [304, 329], "dnnl_memory_create_v2": [304, 329], "scalar_ptr": [304, 329], "dnnl_memory_map_data": [304, 329], "mapped_ptr": [304, 329, 579], "dnnl_memory_map_data_v2": [304, 329], "dnnl_memory_unmap_data": [304, 329], "dnnl_memory_unmap_data_v2": [304, 329], "dnnl_memory_get_data_handle_v2": [304, 329], "dnnl_memory_set_data_handle_v2": [304, 329], "reorder_primitive_desc": [304, 338], "src_engin": [304, 338, 602], "dst_engin": [304, 338, 602], "dnnl_concat_primitive_desc_cr": [304, 316], "concat_primitive_desc": [304, 316], "dnnl_sum_primitive_desc_cr": [304, 345], "sum_primitive_desc": [304, 345], "dnnl_binary_primitive_desc_cr": [304, 313], "src0_desc": [304, 313, 514], "dnnl_binary_primitive_desc_create_v2": [304, 313], "dnnl_convolution_backward_data_primitive_desc_cr": [304, 317], "dnnl_deconvolution_forward_primitive_desc_cr": [304, 319], "dnnl_deconvolution_backward_data_primitive_desc_cr": [304, 319], "dnnl_deconvolution_backward_weights_primitive_desc_cr": [304, 319], "dnnl_shuffle_forward_primitive_desc_cr": [304, 342], "dnnl_shuffle_backward_primitive_desc_cr": [304, 342], "data_desc": [304, 320, 531], "dnnl_softmax_forward_primitive_desc_cr": [304, 343], "softmax_axi": [304, 343], "dnnl_softmax_backward_primitive_desc_cr": [304, 343], "dnnl_prelu_forward_primitive_desc_cr": [304, 332], "dnnl_prelu_backward_primitive_desc_cr": [304, 332], "dnnl_batch_normalization_forward_primitive_desc_cr": [304, 312], "dnnl_batch_normalization_backward_primitive_desc_cr": [304, 312], "dnnl_group_normalization_forward_primitive_desc_cr": [304, 323], "dnnl_group_normalization_backward_primitive_desc_cr": [304, 323], "dnnl_layer_normalization_forward_primitive_desc_cr": [304, 326], "dnnl_layer_normalization_backward_primitive_desc_cr": [304, 326], "dnnl_layer_normalization_forward_primitive_desc_create_v2": [304, 326], "scale_shift_data_typ": [304, 326, 557, 559], "dnnl_layer_normalization_backward_primitive_desc_create_v2": [304, 326], "diff_scale_shift_data_typ": [304, 326, 557], "dnnl_inner_product_forward_primitive_desc_cr": [304, 324], "dnnl_inner_product_backward_data_primitive_desc_cr": [304, 324], "dnnl_inner_product_backward_weights_primitive_desc_cr": [304, 324], "dnnl_primitive_attr_set_rnn_data_qparam": [304, 311], "dnnl_primitive_attr_get_rnn_data_qparam": [304, 311], "dnnl_primitive_attr_set_rnn_weights_qparam": [304, 311], "dnnl_primitive_attr_get_rnn_weights_qparam": [304, 311], "dnnl_primitive_attr_set_rnn_weights_projection_qparam": [304, 311], "dnnl_primitive_attr_get_rnn_weights_projection_qparam": [304, 311], "dnnl_vanilla_rnn_forward_primitive_desc_cr": [304, 311, 340], "dnnl_vanilla_rnn_backward_primitive_desc_cr": [304, 340], "dnnl_lstm_forward_primitive_desc_cr": [304, 340], "dnnl_lstm_backward_primitive_desc_cr": [304, 340], "diff_weights_peephole_desc": [304, 340, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "diff_weights_projection_desc": [304, 340, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "dnnl_gru_forward_primitive_desc_cr": [304, 340], "dnnl_gru_backward_primitive_desc_cr": [304, 340], "dnnl_lbr_gru_forward_primitive_desc_cr": [304, 340], "dnnl_lbr_gru_backward_primitive_desc_cr": [304, 340], "dnnl_augru_forward_primitive_desc_cr": [304, 340], "dnnl_augru_backward_primitive_desc_cr": [304, 340], "diff_attention_desc": [304, 340, 506, 561, 607], "dnnl_lbr_augru_forward_primitive_desc_cr": [304, 340], "dnnl_lbr_augru_backward_primitive_desc_cr": [304, 340], "dnnl_matmul_primitive_desc_cr": [304, 328], "dnnl_resampling_forward_primitive_desc_cr": [304, 339], "dnnl_resampling_backward_primitive_desc_cr": [304, 339], "dnnl_reduction_primitive_desc_cr": [304, 337], "dnnl_get_primitive_cache_capac": [304, 333], "dir": [304, 340, 341, 372], "dnnl_set_max_cpu_isa": [304, 341], "dnnl_get_effective_cpu_isa": [304, 341], "dnnl_set_cpu_isa_hint": [304, 341], "isa_hint": [304, 341, 372], "dnnl_get_cpu_isa_hint": [304, 341], "dnnl_reset_profil": [304, 336], "dnnl_query_profiling_data": [304, 336], "data_kind": [304, 336, 372], "num_entri": [304, 336], "offsetc": [304, 314, 347, 372, 378], "ao": [304, 314, 347, 372, 378], "bo": [304, 314, 347, 372, 378], "dnnl_dt2str": 304, "dnnl_fpmath_mode2str": 304, "dnnl_accumulation_mode2str": 304, "dnnl_engine_kind2str": 304, "dnnl_sparse_encoding2str": 304, "dnnl_fmt_tag2str": 304, "dnnl_prop_kind2str": 304, "dnnl_prim_kind2str": 304, "dnnl_alg_kind2str": 304, "dnnl_rnn_flags2str": 304, "dnnl_rnn_direction2str": 304, "dnnl_scratchpad_mode2str": 304, "dnnl_rounding_mode2str": 304, "dnnl_quantization_mode2str": 304, "dnnl_cpu_isa2str": 304, "dnnl_cpu_isa_hints2str": 304, "dnnl_runtime2str": 304, "dnnl_fmt_kind2str": 304, "dnnl_ocl_interop_memory_cr": [304, 330], "dnnl_ocl_interop_memory_create_v2": [304, 330], "dnnl_ocl_interop_memory_get_memory_kind": [304, 330], "dnnl_ocl_interop_memory_get_mem_object": [304, 330], "mem_object": [304, 330, 376], "dnnl_ocl_interop_memory_set_mem_object": [304, 330], "dnnl_ocl_interop_engine_get_cache_blob_id": [304, 330], "dnnl_ocl_interop_engine_get_cache_blob": [304, 330, 376], "dnnl_ocl_interop_engine_create_from_cache_blob": [304, 330, 363], "dnnl_ocl_interop_engine_cr": [304, 330, 363], "dnnl_ocl_interop_engine_get_context": [304, 330], "dnnl_ocl_interop_get_devic": [304, 330], "dnnl_ocl_interop_stream_cr": [304, 330], "dnnl_ocl_interop_stream_get_command_queu": [304, 330], "dnnl_ocl_interop_primitive_execut": [304, 330], "dep": [304, 330, 346, 363, 367, 374, 375, 376, 377], "ndep": [304, 330, 363], "return_ev": [304, 330, 346, 363], "dnnl_sycl_interop_engine_cr": [304, 346], "dnnl_sycl_interop_engine_get_context": [304, 346], "dnnl_sycl_interop_engine_get_devic": [304, 346], "dnnl_sycl_interop_memory_cr": [304, 346], "dnnl_sycl_interop_memory_create_v2": [304, 346], "dnnl_sycl_interop_memory_get_memory_kind": [304, 346], "dnnl_sycl_interop_memory_set_buff": [304, 346], "dnnl_sycl_interop_stream_cr": [304, 346], "dnnl_sycl_interop_stream_get_queu": [304, 346], "dnnl_sycl_interop_primitive_execut": [304, 346], "dnnl_threadpool_interop_stream_cr": [304, 347], "dnnl_threadpool_interop_stream_get_threadpool": [304, 347], "dnnl_threadpool_interop_set_max_concurr": [304, 347], "max_concurr": [304, 347], "dnnl_threadpool_interop_get_max_concurr": [304, 347], "dnnl_threadpool_interop_sgemm": [304, 347], "dnnl_threadpool_interop_gemm_u8s8s32": [304, 347], "dnnl_threadpool_interop_gemm_s8s8s32": [304, 347], "dnnl_engine_get_count": [304, 321], "dnnl_engine_get_kind": [304, 321], "dnnl_stream_get_engin": [304, 344], "dnnl_get_default_fpmath_mod": [304, 322], "dnnl_graph_allocator_cr": [304, 354], "dnnl_graph_allocator_destroi": [304, 354], "dnnl_graph_make_engine_with_alloc": [304, 359], "dnnl_graph_logical_tensor_init": [304, 362], "dnnl_graph_logical_tensor_init_with_dim": [304, 362], "dnnl_graph_logical_tensor_init_with_strid": [304, 362], "dnnl_graph_logical_tensor_get_mem_s": [304, 362], "dnnl_graph_logical_tensor_is_equ": [304, 362], "lt1": [304, 362], "lt2": [304, 362], "dnnl_graph_tensor_cr": [304, 368], "dnnl_graph_tensor_create_scalar": [304, 368], "dnnl_graph_tensor_destroi": [304, 368], "dnnl_graph_tensor_get_data_handl": [304, 368], "dnnl_graph_tensor_set_data_handl": [304, 368], "dnnl_graph_tensor_get_engin": [304, 368], "dnnl_graph_tensor_get_logical_tensor": [304, 368], "dnnl_graph_op_cr": [304, 364], "dnnl_graph_op_destroi": [304, 364], "dnnl_graph_op_add_input": [304, 364], "dnnl_graph_op_add_output": [304, 364], "dnnl_graph_op_set_attr_f32": [304, 364], "value_len": [304, 364], "dnnl_graph_op_set_attr_bool": [304, 364], "dnnl_graph_op_set_attr_s64": [304, 364], "dnnl_graph_op_set_attr_str": [304, 364], "dnnl_graph_op_get_id": [304, 364], "dnnl_graph_op_get_kind": [304, 364], "dnnl_graph_partition_create_with_op": [304, 365], "dnnl_graph_partition_destroi": [304, 360, 365], "dnnl_graph_partition_get_op_num": [304, 365], "num": [304, 360, 365], "dnnl_graph_partition_get_op": [304, 365], "dnnl_graph_partition_get_id": [304, 365], "dnnl_graph_partition_compil": [304, 365], "in_num": [304, 365], "out_num": [304, 365], "dnnl_graph_partition_get_input_ports_num": [304, 365], "dnnl_graph_partition_get_input_port": [304, 365], "dnnl_graph_partition_get_output_ports_num": [304, 365], "dnnl_graph_partition_get_output_port": [304, 365], "dnnl_graph_partition_is_support": [304, 365], "dnnl_graph_partition_get_engine_kind": [304, 365], "dnnl_graph_compiled_partition_cr": [304, 355], "dnnl_graph_compiled_partition_execut": [304, 355], "num_input": [304, 355, 363, 367], "num_output": [304, 355, 363, 367], "dnnl_graph_compiled_partition_destroi": [304, 355], "dnnl_graph_compiled_partition_query_logical_tensor": [304, 355], "dnnl_graph_compiled_partition_get_inplace_port": [304, 355], "num_inplace_pair": [304, 355], "inplace_pair": [304, 355], "dnnl_graph_graph_cr": [304, 360], "dnnl_graph_graph_create_with_fpmath_mod": [304, 360], "dnnl_graph_graph_destroi": [304, 360], "dnnl_graph_graph_set_fpmath_mod": [304, 360], "dnnl_graph_graph_get_fpmath_mod": [304, 360], "dnnl_graph_add_op": [304, 360], "dnnl_graph_graph_fin": [304, 360], "dnnl_graph_graph_is_fin": [304, 360], "dnnl_graph_graph_filt": [304, 360], "dnnl_graph_graph_get_partition_num": [304, 360], "dnnl_graph_graph_get_partit": [304, 360], "dnnl_graph_get_compiled_partition_cache_capac": [304, 356], "dnnl_graph_set_compiled_partition_cache_capac": [304, 356], "dnnl_graph_set_constant_tensor_cach": [304, 357], "dnnl_graph_get_constant_tensor_cach": [304, 357], "eng_kind": [304, 357], "dnnl_graph_set_dump_mod": [304, 358], "dnnl_graph_ocl_interop_allocator_cr": [304, 363], "ocl_malloc": [304, 363, 374], "dnnl_graph_ocl_interop_make_engine_with_alloc": [304, 363], "dnnl_graph_ocl_interop_make_engine_from_cache_blob_with_alloc": [304, 363], "dnnl_graph_ocl_interop_compiled_partition_execut": [304, 363], "dnnl_graph_sycl_interop_allocator_cr": [304, 367], "sycl_malloc": [304, 367, 375], "sycl_fre": [304, 367, 375], "dnnl_graph_sycl_interop_make_engine_with_alloc": [304, 367], "dnnl_graph_sycl_interop_compiled_partition_execut": [304, 367], "sycl_ev": [304, 367], "dnnl_ukernel_attr_params_cr": [304, 348], "dnnl_ukernel_attr_params_set_post_ops_arg": [304, 348], "post_ops_arg": [304, 348, 623], "dnnl_ukernel_attr_params_set_a_scal": [304, 348], "a_scal": [304, 348, 623], "dnnl_ukernel_attr_params_set_b_scal": [304, 348], "b_scale": [304, 348, 623], "dnnl_ukernel_attr_params_set_d_scal": [304, 348], "d_scale": [304, 348, 623], "dnnl_ukernel_attr_params_destroi": [304, 348], "dnnl_brgemm_creat": [304, 349], "dnnl_brgemm_set_add_c": [304, 349], "add_c": [304, 349, 624], "dnnl_brgemm_set_post_op": [304, 349], "dnnl_brgemm_set_a_scal": [304, 349], "a_scale_mask": [304, 349, 624], "dnnl_brgemm_set_b_scal": [304, 348, 349], "b_scale_mask": [304, 349, 624], "dnnl_brgemm_set_d_scal": [304, 349], "d_scale_mask": [304, 349, 624], "dnnl_brgemm_fin": [304, 349], "dnnl_brgemm_get_b_pack_typ": [304, 349], "dnnl_brgemm_get_scratchpad_s": [304, 349], "dnnl_brgemm_is_execute_postops_valid": [304, 349], "dnnl_brgemm_set_hw_context": [304, 349], "dnnl_brgemm_release_hw_context": [304, 349], "dnnl_brgemm_gener": [304, 349], "dnnl_brgemm_execut": [304, 349], "dnnl_brgemm_execute_postop": [304, 349], "d_ptr": [304, 349], "dnnl_brgemm_destroi": [304, 349], "dnnl_transform_cr": [304, 350], "dnnl_transform_gener": [304, 350], "dnnl_transform_execut": [304, 350], "in_ptr": [304, 350], "out_ptr": [304, 350], "dnnl_transform_destroi": [304, 350], "complain_dnnl_error_and_exit": 304, "complain_fmt": 304, "dnnl_arg_attr_multiple_post_op_bas": [304, 335], "dnnl_arg_attr_output_scal": [304, 335], "dnnl_arg_attr_precomputed_reduct": [304, 311, 335, 595], "dnnl_arg_diff_augru_attent": [304, 335], "dnnl_arg_diff_dst_0": [304, 335], "dnnl_arg_diff_dst_1": [304, 335], "dnnl_arg_diff_dst_2": [304, 335], "dnnl_arg_diff_src_0": [304, 335], "dnnl_arg_diff_src_2": [304, 335], "dnnl_arg_diff_src_3": [304, 335], "dnnl_arg_diff_weights_0": [304, 335], "dnnl_arg_diff_weights_1": [304, 335], "dnnl_arg_diff_weights_2": [304, 335], "dnnl_arg_diff_weights_3": [304, 335], "dnnl_arg_dst_0": [304, 335], "dnnl_arg_dst_1": [304, 335], "dnnl_arg_dst_2": [304, 335], "dnnl_arg_multiple_dst": [304, 335], "dnnl_arg_reduc": [304, 335], "dnnl_arg_src_3": [304, 335], "dnnl_arg_undef": [304, 335], "dnnl_arg_weights_0": [304, 335], "dnnl_arg_weights_1": [304, 335], "dnnl_arg_weights_2": [304, 335], "dnnl_arg_weights_3": [304, 335], "dnnl_enable_except": 304, "dnnl_jit_profile_linux_jitdump": [304, 341], "dnnl_jit_profile_linux_jitdump_use_tsc": [304, 341], "dnnl_jit_profile_linux_perf": [304, 341], "dnnl_jit_profile_linux_perfmap": [304, 341], "dnnl_jit_profile_non": [304, 341], "dnnl_jit_profile_vtun": [304, 341], "dnnl_runtime_f32_v": [304, 329, 422], "dnnl_runtime_s32_v": [304, 329], "dnnl_runtime_size_v": [304, 329], "dnnl_throw_error": 304, "pragma_macro": 304, "uint8": 304, "hardcod": 304, "llama2": 306, "70b": 306, "llama3": 306, "gqa": 306, "perceptron": 306, "feedforward": 306, "vision": 306, "vit": 306, "dlrm": 306, "resnext": 306, "ssd": 306, "adversari": 306, "densenet": 306, "bla": [309, 347, 378, 620], "convert_to_c": [310, 311, 321, 322, 335, 340, 372, 376, 377, 579], "aalgorithm": [311, 372, 514, 519, 521, 523, 525, 527, 529, 531, 533, 569, 571, 583, 585, 587, 600, 604, 606, 613, 615], "dnnl_": 311, "_primitive_desc_cr": 311, "as_data_typ": [311, 587], "output_height": [311, 587], "output_height_1x1_convolut": [311, 587], "output_width": [311, 587], "output_width_1x1_convolut": [311, 587], "dev_guide_attributes_post_ops_depthwis": [311, 587], "dev_guide_attributes_post_ops_depthwise_fus": [311, 335, 587], "categor": [311, 587], "another_input": [311, 587], "ternari": [311, 313, 514, 587], "another_input1": [311, 587], "another_input2": [311, 587], "sic": [311, 595], "slc": [311, 595], "dic": [311, 595], "dlc": [311, 595], "rnn_attr": 311, "rnn_pd": 311, "five": [311, 595], "weights_lay": [311, 595], "weights_iter": [311, 595], "violat": [311, 595], "batch_normalization_backward": [312, 372, 593], "algebra": 314, "gemm_u8s8s32": [314, 372, 378], "gemm_s8s8s32": [314, 372, 378], "xerbla": [314, 347, 378], "a_offset": [314, 347, 378], "b_offset": [314, 347, 378], "c_offset": [314, 347, 378], "convolution_backward_data": [317, 372, 593], "deconvolution_backward_data": [319, 372, 593], "deconvolution_backward_weight": [319, 372, 593], "use_dst_for_bwd": [320, 531], "group_normalization_backward": [323, 372, 593], "inner_product_backward_data": [324, 372, 593], "inner_product_backward_weight": [324, 372, 593], "layer_normalization_backward": [326, 372, 593], "discourag": 329, "inequ": [329, 548, 581], "set_buff": [329, 377], "ordinari": 329, "ill": 329, "retriev": [329, 330, 335], "newli": [329, 579], "encompass": [329, 581], "join": [329, 581], "in_md": [329, 581], "out_md": 329, "expect_out_md": [329, 581], "in_dim": 329, "out_dim": 329, "in_tag": 329, "out_tag": 329, "lie": 329, "oihw_4i16o4i": 329, "oihw_4i16o4i_": 329, "4i16o4i": 329, "had": [329, 346, 376, 377, 471, 579], "unmap": [329, 579], "mainli": [329, 579], "made": [329, 579], "prelu_backward": [332, 372, 593], "get_primitive_cache_capac": [333, 372], "set_primitive_cache_capac": [333, 372], "held": [333, 356], "excess": [333, 356], "aqueri": [335, 372], "32bit": 335, "qualifi": 335, "dev_guide_attributes_post_ops_binary_fus": 335, "deprec": [335, 357], "collis": 335, "mnemon": 335, "peephol": [335, 340, 573, 575, 607], "reserv": 335, "norm_lp": 337, "resampling_backward": [339, 372, 593], "resampling": 339, "rnn_flag": [340, 372, 607], "rnn_primitive_desc_bas": [340, 372, 506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 597, 627, 629], "lbr": [340, 560, 561, 562, 563, 564, 565, 566, 567], "aid": 341, "version_t": [341, 372], "cpu_isa": [341, 372], "cpu_isa_hint": [341, 372], "set_verbos": [341, 372], "get_default_fpmath_mod": [341, 372], "set_jit_dump": [341, 372], "set_jit_profiling_flag": [341, 372], "set_jit_profiling_jitdumpdir": [341, 372], "dnnl_jit_dump": 341, "dnnl_jit_profil": 341, "vtune": [341, 383, 458], "pid": 341, "mkdtemp": 341, "xxxxxx": 341, "home": 341, "revert": 341, "dnnl_max_cpu_isa": 341, "dnnl_cpu_isa": 341, "reflect": 341, "dnnl_cpu_isa_hint": 341, "shuffle_backward": [342, 372, 593], "softmax_backward": [343, 372, 593], "threapdool_ifac": [347, 378], "threadloc": 347, "dnnl_brgemm_pack_undef": 349, "dnnl_brgemm_no_tran": 349, "trait": [352, 372, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "handle_trait": [352, 372, 548], "acquir": 354, "input_id": [355, 538], "get_compiled_partition_cache_capac": [356, 373], "set_compiled_partition_cache_capac": [356, 373], "set_constant_tensor_cach": [357, 373], "get_constant_tensor_cach": [357, 373], "set_constant_tensor_cache_capac": [357, 373], "get_constant_tensor_cache_capac": [357, 373], "graph_dump_mod": [358, 373], "set_dump_mod": [358, 373], "outcom": 358, "supplement": [359, 363, 367], "meta": 362, "enrich": 362, "progress": 362, "toward": 362, "60": 362, "layout_id": [362, 539], "openpow": 370, "ppc64": 370, "ibmz": 370, "s390x": 370, "risc": 370, "c_partit": [374, 375], "beforehand": 374, "adevic": [375, 377], "acontext": [375, 377], "amemori": [376, 377], "set_mem_object": 376, "aprimit": [376, 377], "query_md": [376, 377, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 593, 597, 598, 600, 601, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "aqueu": 377, "abuff": 377, "get_threadpool": 378, "cnn_inference_int8": [383, 396], "cnn_training_bf16": 383, "cnn_training_f32": 383, "cpu_brgemm": 383, "cpu_cnn_training_f32": 383, "cpu_getting_start": [383, 436], "cpu_inference_int8": [383, 438], "cpu_matmul_coo": 383, "cpu_matmul_csr": 383, "cpu_matmul_quant": 383, "cpu_matmul_weights_compress": 383, "cpu_rnn_inference_f32": [383, 418], "cpu_rnn_inference_int8": [383, 420], "cpu_sgemm_and_matmul": 383, "cpu_single_op_partit": [383, 440], "gpu_opencl_getting_start": [383, 442], "gpu_opencl_interop": [383, 434], "memory_format_propag": 383, "rnn_training_f32": 383, "sycl_getting_start": [383, 444], "sycl_interop_buff": [383, 493], "sycl_interop_usm": 383, "sycl_single_op_partit": [383, 446], "matmul_with_host_scalar_scal": 383, "matmul_f8_quant": 383, "legal": 383, "trademark": 383, "untitl": 383, "awai": [390, 392, 394, 436, 440, 442, 444, 446], "detriment": [392, 394], "realist": 396, "_x": 414, "research": 414, "max_": 414, "min_": 414, "earli": 414, "obviou": 414, "disadvantag": 414, "wors": 414, "inevit": 414, "unidirectin": [418, 420], "charact": [418, 420], "facil": [426, 432, 434, 493], "thank": [426, 432], "compris": 432, "singleton": 432, "ten": 432, "educ": 432, "aliv": 432, "everyth": [432, 493], "human": [432, 493], "encourag": 432, "experi": 432, "familiar": 432, "spoil": 432, "oop": 432, "forgot": 432, "liter": 434, "get_ocl_mem_object": 434, "realiz": [434, 493], "heavier": [434, 493], "serv": 434, "submiss": 434, "till": [436, 442, 444], "mayb": [436, 438, 442, 444], "unfin": [436, 442, 444], "dnnl_graph_ocl": 442, "logo": 458, "openvino": 458, "pentium": 458, "subsidiari": 458, "brand": 458, "countri": 458, "khrono": 458, "344": 465, "central": 471, "understood": 471, "reader": 471, "bother": 471, "idiomat": 471, "realli": 471, "ver": 471, "1x128x14x14": 471, "326904": 471, "256x128x3x3": 471, "244141": 471, "bia_undef": [471, 473], "mb1_ic128oc256_ih14oh14kh3sh1dh0ph1_iw14ow14kw3sw1dw0pw1": 471, "20312": 471, "ws_undef": 471, "mb1ic256_ih14oh14kh3sh1ph1_iw14ow14kw3sw1pw1": 471, "187012": 471, "1x256x14x14": 471, "0419922": 471, "knowledg": 473, "user_": 473, "meant": 473, "enter": 473, "easili": 473, "launch": 473, "shell": 473, "tell": 473, "38": 473, "mb128_ic3oc96_ih227oh55kh11sh4dh0ph0_iw227ow55kw11sw4dw0pw0": 473, "314": 473, "data_f32": 473, "diff_undef": 473, "128x96x55x55": 473, "87695": 473, "conv_dst1": 473, "pai": 473, "penalti": 473, "96x3x11x11": 473, "0310059": 473, "3101": 473, "66895": 473, "80396": 473, "closer": 473, "0148926": 473, "968": 473, "66797": 473, "kmp_affin": 473, "platinum": 473, "8180": 473, "50ghz": 473, "numa": 473, "ram": 473, "ddr4": 473, "gb": 473, "walkthrough": 495, "catalogu": 501, "weak": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "get_primitive_desc": [505, 507, 509, 511, 513, 516, 518, 520, 522, 524, 526, 528, 530, 532, 540, 542, 544, 546, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 582, 584, 588, 590, 593, 599, 601, 603, 605, 608, 610, 612, 614, 618, 626, 628], "get_kind": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582, 583, 584, 585, 588, 589, 590, 591, 593, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 618, 619, 626, 627, 628, 629], "protect": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "default_attr": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_cell_kind": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_prop_kind": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_direct": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_dil": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_padding_l": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_padding_r": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_epsilon": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_algorithm": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_alpha": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_beta": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_axi": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_local_s": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_k": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_p": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_factor": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_activation_kind": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_kernel": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_group_s": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "get_primitive_attr": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "augru_attention_desc": [506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "diff_augru_attention_desc": [506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "rnn_base": [506, 508, 545, 547, 561, 563, 565, 567, 573, 575, 607, 627, 629], "query_f32": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "query_alg": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "query_dim": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "query_engin": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "reset_with_clon": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "optional_arg": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 598, 600, 602, 604, 606, 607, 609, 611, 613, 615, 619, 627, 629], "signifi": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 581, 583, 585, 589, 591, 600, 602, 604, 606, 609, 611, 613, 615, 619, 624, 625, 627, 629], "caller": [517, 597, 598, 602, 619], "prim_kind": [517, 597, 598, 602, 619], "prop_kind1": [517, 597, 598, 602, 607, 619], "prop_kind2": [517, 597, 598, 602, 607, 619], "get_count": 535, "uniniti": [535, 548, 579, 593, 617], "thrown": [535, 548, 579, 593, 617], "wrap_c_api": 536, "explanatori": 536, "output_id": 538, "union": 539, "descend": [548, 593, 597, 598, 607], "weak_ptr": 548, "dummi": 548, "destructor": 549, "validate_dim": 579, "min_siz": 579, "adata_typ": [579, 581], "map_data": 579, "unmap_data": 579, "absenc": [579, 581], "aformat_tag": 581, "permute_ax": 581, "get_ndim": 581, "get_padded_offset": 581, "get_submemory_offset": 581, "get_nnz": 581, "get_sparse_encod": 581, "get_format_kind": 581, "is_zero": 581, "index_dt": 581, "pointer_dt": 581, "new_desc": 581, "get_params_sum": 587, "get_params_eltwis": 587, "get_params_dw": 587, "get_params_prelu": 587, "zeropoint": 587, "oc_dim": 587, "mb_dim": 587, "channel_dim": 587, "height_dim": 587, "prelu_weight": 587, "weight_desc": [589, 591], "c_pd": 593, "mask_desc": 595, "get_accumulation_mod": 595, "set_accumulation_mod": 595, "get_determinist": 595, "get_rounding_mod": 595, "set_rounding_mod": 595, "get_post_op": 595, "get_rnn_data_qparam": 595, "get_rnn_weights_qparam": 595, "set_rnn_weights_projection_qparam": 595, "get_rnn_weights_projection_qparam": 595, "rnn_d": 595, "get_src_engin": 602, "get_dst_engin": 602, "aflag": 617, "virtual": 620, "subclass": 620, "closur": 620, "set_a_scal": [623, 624], "set_d_scal": [623, 624], "default_post_op": 624, "default_attr_param": 624, "cpu_runtim": 630, "gpu_runtim": 630, "absent": 630, "q_head_num": [633, 635], "kv_head_num": 633, "head_siz": [633, 635, 636], "gr": 634, "head_num": 636, "query_num": 636, "ctx_": 637}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"advanc": [0, 15, 34], "topic": 0, "class": [1, 2, 3, 4, 5, 6, 7, 8], "dnnl": [1, 2, 3, 4, 5, 6, 7, 182, 185, 186, 187, 191, 195, 198, 200, 201, 202, 203, 205, 207, 209, 211, 212, 213, 214, 215, 217, 220, 222, 224, 226, 228, 230, 232, 234, 236, 239, 241, 243, 245, 372, 373, 374, 375, 376, 377, 378, 379, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629], "graph": [1, 2, 3, 4, 5, 6, 7, 18, 23, 34, 36, 40, 198, 200, 201, 202, 203, 205, 207, 209, 305, 353, 360, 373, 374, 375, 436, 438, 440, 442, 444, 446], "alloc": [1, 354, 471], "overview": [1, 2, 3, 4, 5, 6, 7, 32, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 154, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 304, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 374, 375, 376, 377, 378, 380, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630], "detail": [1, 2, 3, 4, 5, 6, 7, 19, 21, 25, 28, 33, 35, 56, 61, 64, 66, 67, 157, 158, 161, 162, 163, 164, 166, 168, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 304, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 374, 375, 376, 377, 378, 380, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630], "document": [1, 2, 3, 4, 5, 6, 7, 22, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 304, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 374, 375, 376, 377, 378, 380, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630], "construct": [1, 2, 3, 4, 5, 6, 7, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 624, 625, 626, 627, 628, 629], "compiled_partit": 2, "method": [2, 3, 4, 5, 6, 7, 15, 506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 536, 541, 543, 545, 547, 548, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 579, 581, 583, 585, 587, 589, 591, 593, 595, 597, 598, 600, 601, 602, 604, 606, 607, 609, 611, 613, 615, 617, 619, 620, 623, 624, 625, 627, 629], "logical_tensor": [4, 200, 201, 202], "typedef": [4, 311, 318, 321, 329, 335, 341, 344, 348, 349, 350, 354, 355, 360, 363, 364, 365, 367, 368, 579], "op": [5, 14, 19, 21, 25, 28, 33, 36, 56, 61, 64, 66, 67, 157, 161, 162, 163, 164, 165, 166, 168, 203, 205, 364, 390, 440, 446], "partit": [6, 36, 207, 355, 356, 365, 436, 438, 440, 442, 444, 446], "tensor": [7, 15, 26, 27, 36, 357, 362, 368], "simple_memory_pool_t": 8, "primit": [9, 13, 18, 34, 156, 159, 160, 178, 179, 220, 333, 334, 384, 386, 388, 402, 404, 410, 412, 416, 426, 428, 430, 432, 434, 448, 452, 454, 456, 459, 461, 463, 471, 475, 477, 479, 481, 483, 487, 489, 491, 493, 497, 593, 638], "attribut": [9, 13, 19, 21, 25, 28, 33, 56, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 161, 162, 163, 164, 165, 166, 168, 175, 176, 311], "usag": [9, 34, 156], "support": [9, 14, 15, 19, 21, 25, 33, 56, 57, 60, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 164, 166, 168, 172, 308, 638], "relat": [9, 156, 179], "error": [9, 536], "handl": [9, 31, 32, 154, 548], "accumul": [10, 166, 310], "mode": [10, 11, 13, 16, 31, 53, 64, 166, 178, 310, 322, 358], "determinist": 11, "dropout": 12, "introduct": [12, 15, 18, 36, 60, 172, 174, 177, 471], "implement": [12, 19, 21, 25, 28, 33, 38, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 56, 61, 64, 66, 67, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176, 178, 473], "api": [12, 15, 24, 26, 34, 156, 167, 309, 315, 325, 330, 346, 347, 353, 361, 363, 367, 432, 434, 436, 438, 442, 444, 493], "float": [13, 41, 52, 53, 322], "point": [13, 15, 41, 52, 53, 322], "math": [13, 53, 322], "The": 13, "enforc": 13, "an": 13, "integr": 13, "A": 13, "note": [13, 15, 19, 21, 24, 25, 28, 33, 56, 61, 64, 66, 67, 157, 158, 161, 162, 163, 166, 168], "default": 13, "post": [14, 19, 21, 25, 28, 33, 56, 61, 64, 66, 67, 157, 161, 162, 163, 164, 165, 166, 168, 390], "eltwis": [14, 33, 272, 320], "sum": [14, 168, 297, 345, 491, 618, 619], "depthwis": 14, "binari": [14, 21, 37, 248, 313, 388, 390, 513, 514], "prelu": [14, 121, 158, 290, 332], "exampl": [14, 15, 17, 19, 21, 25, 28, 33, 34, 38, 41, 42, 45, 48, 52, 56, 60, 61, 62, 64, 66, 67, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 172, 175, 176, 178, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 416, 418, 420, 428, 430, 438, 448, 452, 454, 456, 459, 461, 463, 467, 469, 473, 475, 477, 479, 481, 483, 485, 487, 489, 491, 495, 497], "chain": 14, "relu": [14, 132, 426, 432], "tanh": [14, 150], "scaleshift": 14, "quantiz": [15, 48, 49, 50, 60, 123, 414, 465], "model": [15, 307], "static": 15, "dynam": 15, "gener": [15, 19, 21, 25, 28, 31, 33, 56, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176, 177], "numer": [15, 31], "behavior": [15, 31], "relev": [15, 177], "granular": 15, "level": [15, 18], "argument": [15, 19, 21, 25, 28, 33, 56, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 164, 165, 166, 168], "scale": [15, 19, 52, 56, 60, 64, 469], "avail": 15, "per": 15, "channel": [15, 177], "block": [15, 23, 177, 473], "special": 15, "case": 15, "mx": 15, "compat": [15, 173], "multi": [15, 41], "dimension": 15, "zero": 15, "host": [15, 22, 23, 57, 469], "side": [15, 57], "scalar": [15, 57, 469], "factor": [15, 60], "precomput": 15, "reduct": [15, 51, 161, 291, 337, 479, 599, 600], "workflow": [15, 60, 172, 432], "breakdown": 15, "convolut": [15, 28, 38, 48, 81, 256, 317, 404, 438, 471], "int8": [15, 44, 58, 60, 63, 396, 420, 438, 450], "specif": [15, 23, 27, 59], "weight": [15, 499], "prepar": [15, 432], "output": [15, 27, 42, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 178], "matrix": [15, 34, 67, 175, 328, 465, 467], "multipl": [15, 34, 67, 175, 177, 328, 465, 467], "onli": 15, "woq": 15, "round": [16, 31, 135], "scratchpad": 17, "memori": [17, 18, 24, 27, 32, 154, 156, 159, 167, 174, 177, 179, 211, 212, 213, 214, 329, 410, 412, 426, 432, 434, 471, 493, 579, 581], "engin": [17, 18, 156, 179, 191, 321, 359, 424, 426, 432, 434, 493, 535], "librari": [17, 22, 23, 31, 65, 370], "manag": [17, 159], "user": 17, "basic": [18, 34, 36, 174, 432], "concept": [18, 34, 36, 174, 502], "stream": [18, 241, 344, 426, 432, 434, 493, 617], "object": [18, 32, 154, 426, 432, 434, 471, 493], "abstract": 18, "creat": [18, 426, 432, 434, 471, 493], "extens": [18, 305, 434, 442, 444, 493], "micro": 18, "kernel": [18, 434, 493], "batch": [19, 175, 312, 386], "normal": [19, 56, 64, 66, 312, 323, 326, 386, 448, 454, 459], "forward": [19, 28, 33, 42, 52, 56, 59, 61, 64, 66, 157, 158, 163, 165, 166], "differ": [19, 28, 33, 34, 56, 59, 61, 64, 157, 158, 163, 165, 166], "between": [19, 28, 33, 56, 59, 61, 64, 157, 158, 163, 165, 166, 424, 426], "train": [19, 28, 31, 33, 34, 42, 52, 56, 59, 61, 64, 157, 158, 163, 164, 165, 166, 171, 172, 398, 400, 408, 485], "infer": [19, 28, 31, 33, 34, 42, 52, 56, 58, 59, 60, 61, 64, 157, 158, 163, 165, 166, 392, 394, 396, 418, 420, 438, 450], "backward": [19, 28, 33, 56, 59, 61, 64, 66, 157, 158, 163, 165, 166], "execut": [19, 21, 25, 28, 33, 56, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 426, 432, 434, 436, 438, 440, 442, 444, 446, 471, 493], "data": [19, 21, 25, 28, 31, 33, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176, 177, 318, 426, 432, 434, 471, 493], "type": [19, 21, 25, 28, 31, 33, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176, 318], "represent": [19, 21, 25, 28, 33, 56, 61, 64, 66, 67, 157, 158, 161, 162, 164, 166, 168, 174, 175, 176], "mean": [19, 56, 64], "varianc": [19, 56, 64], "shift": [19, 56, 64], "sourc": [19, 21, 22, 56, 64, 66, 157, 161, 166, 168, 173, 471], "destin": [19, 21, 56, 64, 66, 157, 161, 166, 168, 471], "Their": [19, 56, 64, 66, 157, 166], "gradient": [19, 56, 64, 66, 157, 166], "limit": [19, 21, 23, 25, 28, 31, 33, 35, 38, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 56, 61, 64, 66, 67, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 175, 176], "perform": [19, 20, 21, 25, 28, 33, 34, 56, 61, 64, 66, 67, 157, 158, 160, 161, 162, 163, 165, 166, 168, 467, 471, 473, 501], "tip": [19, 21, 25, 28, 33, 56, 61, 64, 66, 67, 157, 158, 161, 162, 163, 165, 166, 168], "benchmark": [20, 155], "build": [22, 23, 26, 29, 30, 34, 35, 40, 159, 160, 173, 178, 436, 438, 440, 442, 444, 446], "from": [22, 173, 426], "prerequisit": [22, 34], "step": 22, "1": [22, 28, 63], "download": 22, "code": [22, 62, 173, 432], "2": [22, 28, 63], "linux": [22, 65, 160], "maco": [22, 65], "us": [22, 23, 170, 177], "gcc": 22, "clang": 22, "intel": [22, 24, 31, 63, 173], "oneapi": [22, 370, 380], "dpc": [22, 32, 371], "c": [22, 34, 250, 258, 269], "compil": [22, 23, 36, 355, 356, 436, 438, 440, 442, 444, 446], "sycl": [22, 32, 346, 367, 382, 444, 493, 495], "runtim": [22, 23, 29, 34, 65, 155, 325, 361], "target": [22, 23], "aarch64": [22, 23], "x64": 22, "arm": [22, 23], "comput": [22, 23, 63], "acl": 22, "window": [22, 65], "microsoft": 22, "visual": 22, "3": [22, 28], "option": [22, 23], "valid": [22, 24, 426, 432, 434, 493], "4": 22, "5": 22, "instal": 22, "common": [23, 315, 335], "configur": [23, 155, 473], "function": [23, 34, 164, 304, 310, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 374, 375, 376, 377, 378, 426, 432, 434, 436, 438, 440, 442, 444, 446, 471, 493], "onednn_enable_workload": 23, "onednn_enable_primit": 23, "onednn_enable_primitive_cpu_isa": 23, "onednn_enable_primitive_gpu_isa": 23, "onednn_enable_gemm_kernels_isa": 23, "test": 23, "onednn_test_set": 23, "cpu": [23, 29, 30, 62, 63, 155, 424, 426, 436, 440], "architectur": [23, 24, 31], "openmp": 23, "thread": [23, 155, 170], "tbb": 23, "threadpool": [23, 170, 347], "vendor": 23, "bla": [23, 314], "gpu": [23, 62, 63, 424, 426, 434, 446], "opencl": [23, 154, 330, 363, 371, 434, 442], "compon": 23, "input": [24, 42, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "align": 24, "requir": [24, 169], "r": [24, 31], "processor": [24, 31, 63], "graphic": [24, 31], "xe": [24, 31], "concat": [25, 80, 255, 316, 402, 516, 517], "constant": [26, 357], "cach": [26, 156, 159, 333, 356, 357], "time": [26, 29, 30, 35, 40, 159, 160, 178], "control": [26, 29, 30, 35, 40, 159, 160, 178], "run": [26, 30, 34, 40, 159, 160, 178], "capac": 26, "environ": 26, "variabl": [26, 27], "name": 27, "convent": 27, "formula": 27, "verbos": [27, 178, 179], "rnn": [27, 164, 340, 384, 418, 420, 456, 461, 485, 497], "notat": 27, "format": [27, 167, 177, 410, 412, 471, 473], "tag": [27, 160], "regular": [28, 81], "group": [28, 42, 56, 81, 323, 448], "dilat": [28, 81], "deconvolut": [28, 271, 319, 428], "transpos": 28, "algorithm": [28, 185], "direct": 28, "winograd": 28, "automat": 28, "select": [28, 136], "dispatch": [29, 178, 179], "isa": 30, "hint": 30, "onednn": [31, 34, 65, 155, 160, 170, 173, 309, 370, 426, 432, 434, 493, 502], "denorm": 31, "hardwar": 31, "interoper": [32, 34, 154, 325, 330, 346, 347, 361, 363, 367, 371], "buffer": [32, 154, 471], "usm": [32, 154, 495], "interfac": [32, 154], "depend": [32, 154], "except": 33, "tutori": [34, 414, 422, 432, 450, 471, 499], "fundament": 34, "extern": 34, "featur": [34, 35, 160], "recurr": 34, "neural": [34, 370], "network": [34, 370], "analysi": 34, "individu": 34, "get": [34, 426, 434, 436, 438, 440, 442, 444, 446, 493], "start": [34, 434, 436, 442, 444, 493], "microkernel": 34, "ukernel": [34, 245, 348, 349, 350, 351, 379, 406, 623, 624, 625, 639], "experiment": 35, "onednn_experimental_ukernel": 35, "onednn_experimental_profil": 35, "onednn_experimental_log": 35, "onednn_experimental_sycl_kernel_compil": 35, "logic": [36, 362], "fusion": [37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 306], "pattern": [37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 306], "structur": [37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55], "convtranspos": [39, 49, 84], "dump": [40, 358], "gate": 41, "layer": [41, 64, 326, 454], "perceptron": 41, "mlp": 41, "refer": [41, 42, 50, 52, 53, 63, 370], "queri": [42, 228], "attent": [42, 52], "gqa": 42, "4d": 42, "5d": 42, "propag": [42, 52, 59, 471], "backpropag": [42, 52], "interpol": [43, 104], "low": 44, "precis": 44, "bf16": [44, 398], "f16": 44, "matmul": [45, 50, 112, 283, 410, 412, 414, 416, 422, 450, 463, 469, 499, 576, 577], "norm": 46, "pool": [47, 157, 289, 331, 471, 475], "dot": 52, "product": [52, 61, 324, 452], "sdpa": [52, 53], "compress": 53, "kei": 53, "valu": [53, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245], "softmax": [54, 139, 166, 296, 343, 489], "unari": 55, "best": 58, "practic": 58, "fp32": [58, 171], "aspect": 59, "kind": [59, 191, 205, 220], "workspac": 59, "process": [60, 173], "rang": 60, "inner": [61, 324, 452], "inspect": [62, 501], "jit": 62, "nuanc": 63, "mix": 63, "u8": [63, 390], "s8": 63, "avx2": 63, "avx": 63, "512": 63, "dl": 63, "boost": 63, "same": 63, "root": 64, "squar": [64, 145], "link": 65, "header": [65, 426, 432, 434, 436, 438, 440, 442, 444, 446, 493], "file": 65, "harden": 65, "local": [66, 459], "respons": [66, 459], "lrn": [66, 281, 327], "sparsiti": [67, 162], "csr": [67, 167, 412], "encod": [67, 167], "coo": [67, 167, 410], "pack": 67, "ab": 68, "oper": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 174, 179, 308], "absbackward": 69, "add": 70, "avgpool": 71, "avgpoolbackward": 72, "batchnormforwardtrain": 73, "batchnorminfer": 74, "batchnormtrainingbackward": 75, "biasadd": 76, "biasaddbackward": 77, "clamp": 78, "clampbackward": 79, "convolutionbackwarddata": 82, "convolutionbackwardweight": 83, "convtransposebackwarddata": 85, "convtransposebackwardweight": 86, "dequant": 87, "divid": 88, "dynamicdequant": 89, "dynamicquant": 90, "elu": 91, "elubackward": 92, "end": 93, "exp": 94, "gelu": 95, "gelubackward": 96, "genindex": 97, "greaterequ": 98, "groupnorm": 99, "hardsigmoid": 100, "hardsigmoidbackward": 101, "hardswish": 102, "hardswishbackward": 103, "interpolatebackward": 105, "layernorm": 106, "layernormbackward": 107, "leakyrelu": 108, "log": 109, "logsoftmax": 110, "logsoftmaxbackward": 111, "maximum": 113, "maxpool": 114, "maxpoolbackward": 115, "minimum": 116, "mish": 117, "mishbackward": 118, "multipli": 119, "pow": 120, "broadcast": [121, 122, 136], "rule": [121, 122, 136], "prelubackward": 122, "reciproc": 124, "reducel1": 125, "reducel2": 126, "reducemax": 127, "reducemean": 128, "reducemin": 129, "reduceprod": 130, "reducesum": 131, "relubackward": 133, "reorder": [134, 162, 292, 338, 424, 426, 471, 481, 601, 602], "sigmoid": 137, "sigmoidbackward": 138, "softmaxbackward": 140, "softplu": 141, "softplusbackward": 142, "sqrt": 143, "sqrtbackward": 144, "squareddiffer": 146, "staticreshap": 147, "statictranspos": 148, "subtract": 149, "tanhbackward": 151, "typecast": 152, "wildcard": 153, "set": 155, "whole": 155, "machin": 155, "singl": [155, 440, 446], "numa": 155, "domain": 155, "sever": 155, "core": 155, "within": 155, "persist": 156, "descriptor": [156, 432], "consumpt": 159, "profil": [159, 160, 178, 180, 336, 473, 501], "vtune": [160, 180], "itt": 160, "hotspot": 160, "microarchitectur": 160, "inform": [160, 173, 458], "perf": 160, "resampl": [163, 293, 339, 483], "nearest": 163, "neighbor": 163, "bilinear": 163, "cell": 164, "vanilla": [164, 497], "lstm": [164, 282, 461], "peephol": 164, "project": 164, "lstmp": 164, "gru": [164, 456], "linear": [164, 456], "befor": [164, 456], "reset": [164, 456], "augru": [164, 246, 384], "consider": 164, "shuffl": [165, 295, 342, 487], "layout": [165, 177], "spars": [167, 410, 412], "sort": 167, "system": 169, "base": 170, "bfp16": 171, "bfloat16": 172, "transit": 173, "mkl": 173, "dnn": 173, "summari": [173, 473], "chang": 173, "broken": 173, "develop": [173, 370], "reduc": 175, "transform": [176, 350, 625], "understand": [177, 178], "nomenclatur": 177, "plain": 177, "nchw": 177, "nhwc": 177, "chwn": 177, "read": 177, "stride": 177, "what": 177, "ar": 177, "8": 177, "16": 177, "troubleshoot": 178, "creation": [178, 179], "issu": 178, "workload": 178, "why": 178, "given": 178, "i": 178, "enabl": 178, "onednn_verbos": 178, "timestamp": 178, "decrypt": 178, "messag": 179, "catalogu": 179, "tm": 180, "enum": [181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245], "api_kind": 181, "accumulation_mod": 182, "dnnl_accumulation_mode_t": 183, "dnnl_alg_kind_t": 184, "cpu_isa": 186, "cpu_isa_hint": 187, "dnnl_cpu_isa_hints_t": 188, "dnnl_cpu_isa_t": 189, "dnnl_data_type_t": 190, "dnnl_engine_kind_t": 192, "dnnl_format_kind_t": 193, "dnnl_format_tag_t": 194, "fpmath_mod": 195, "dnnl_fpmath_mode_t": 196, "dnnl_graph_dump_mode_t": 197, "graph_dump_mod": 198, "dnnl_graph_layout_type_t": 199, "data_typ": [200, 211], "layout_typ": 201, "property_typ": 202, "attr": 203, "dnnl_graph_op_attr_t": 204, "dnnl_graph_op_kind_t": 206, "polici": 207, "dnnl_graph_partition_policy_t": 208, "statu": [209, 239, 366], "dnnl_graph_tensor_property_t": 210, "format_kind": 212, "format_tag": 213, "sparse_encod": 214, "normalization_flag": 215, "dnnl_normalization_flags_t": 216, "ocl_interop": [217, 374, 376], "memory_kind": [217, 243], "dnnl_ocl_interop_memory_kind_t": 218, "dnnl_pack_type_t": 219, "dnnl_primitive_kind_t": 221, "profiling_data_kind": 222, "dnnl_profiling_data_kind_t": 223, "prop_kind": 224, "dnnl_prop_kind_t": 225, "quantization_mod": 226, "dnnl_quantization_mode_t": 227, "dnnl_query_t": 229, "rnn_direct": 230, "dnnl_rnn_direction_t": 231, "rnn_flag": 232, "dnnl_rnn_flags_t": 233, "rounding_mod": 234, "dnnl_rounding_mode_t": 235, "scratchpad_mod": 236, "dnnl_scratchpad_mode_t": 237, "dnnl_sparse_encoding_t": 238, "dnnl_status_t": 240, "flag": 241, "dnnl_stream_flags_t": 242, "sycl_interop": [243, 375, 377], "dnnl_sycl_interop_memory_kind_t": 244, "pack_typ": 245, "cpp": [246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "batch_norm": 247, "bnorm_u8_via_binary_postop": 249, "cnn_inference_f32": [250, 251], "cnn_inference_int8": 252, "cnn_training_bf16": 253, "cnn_training_f32": 254, "cpu_brgemm": 257, "cpu_cnn_training_f32": 258, "cpu_getting_start": 259, "cpu_inference_int8": 260, "cpu_matmul_coo": 261, "cpu_matmul_csr": 262, "cpu_matmul_quant": 263, "cpu_matmul_weights_compress": 264, "cpu_rnn_inference_f32": 265, "cpu_rnn_inference_int8": 266, "cpu_sgemm_and_matmul": 267, "cpu_single_op_partit": 268, "cross_engine_reord": [269, 270], "getting_start": 273, "gpu_opencl_getting_start": 274, "gpu_opencl_interop": 275, "group_norm": 276, "inference_int8_matmul": 277, "inner_product": 278, "layer_norm": 279, "lbr_gru": 280, "matmul_f8_quant": 284, "matmul_perf": 285, "matmul_with_host_scalar_scal": 286, "memory_format_propag": [287, 471], "performance_profil": 288, "rnn_training_f32": 294, "sycl_getting_start": 298, "sycl_interop_buff": 299, "sycl_interop_usm": 300, "sycl_single_op_partit": 301, "vanilla_rnn": 302, "weights_decompression_matmul": 303, "global": [304, 310, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 374, 375, 376, 377, 378], "namespac": [304, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382], "other": 306, "program": 307, "macro": [318, 329, 335, 341, 362], "servic": 341, "brgemm": [349, 406, 624], "util": [351, 352, 369], "deep": 370, "guid": 370, "threadpool_interop": [378, 620], "std": 381, "orphan": 383, "untitl": [385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 447, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500], "bnorm": 390, "cnn": [392, 394, 396, 398, 400, 408], "f32": [392, 394, 400, 408, 418, 485], "comparison": 422, "sgemm": 422, "public": [426, 432, 434, 436, 438, 440, 442, 444, 446, 493], "cross_engine_reorder_tutori": 426, "wrap": [426, 432, 434, 493], "result": [426, 432, 434, 471, 493], "all": 426, "element": 430, "wise": 430, "getting_started_tutori": 432, "outsid": 432, "altern": 432, "wai": 432, "obtain": 432, "main": [432, 493], "gpu_opencl_interop_tutori": 434, "initi": [434, 471, 493], "custom": [434, 493], "cpu_getting_started_tutori": 436, "simple_pattern_int8": 438, "cpu_single_op_partition_tutori": 440, "ocl_getting_started_tutori": 442, "sycl_getting_started_tutori": 444, "sycl_single_op_partition_tutori": 446, "legal": 458, "trademark": 458, "f8": 465, "determin": 471, "need": 471, "intermedi": 471, "necessari": 471, "walkthrough": 473, "naiv": 473, "fuse": 473, "notic": 473, "sycl_interop_buffer_tutori": 493, "decompress": 499, "struct": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637], "args_t": 503, "cpu_deletor_t": 504, "augru_backward": [505, 506], "inherit": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "member": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629], "primitive_desc": [506, 508, 510, 512, 514, 517, 519, 521, 523, 525, 527, 529, 531, 533, 541, 543, 545, 547, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 583, 585, 589, 591, 597, 600, 602, 604, 606, 609, 611, 613, 615, 619, 627, 629], "augru_forward": [507, 508], "batch_normalization_backward": [509, 510], "batch_normalization_forward": [511, 512], "dnnl_brgemm": 515, "convolution_backward_data": [518, 519], "convolution_backward_weight": [520, 521], "convolution_forward": [522, 523], "deconvolution_backward_data": [524, 525], "deconvolution_backward_weight": [526, 527], "deconvolution_forward": [528, 529], "eltwise_backward": [530, 531], "eltwise_forward": [532, 533], "dnnl_engin": 534, "dnnl_exec_arg_t": 537, "field": [537, 538, 539, 620, 630], "dnnl_graph_inplace_pair_t": 538, "dnnl_graph_logical_tensor_t": 539, "group_normalization_backward": [540, 541], "group_normalization_forward": [542, 543], "gru_backward": [544, 545], "gru_forward": [546, 547], "templat": [548, 549], "handle_trait": 549, "inner_product_backward_data": [550, 551], "inner_product_backward_weight": [552, 553], "inner_product_forward": [554, 555], "layer_normalization_backward": [556, 557], "layer_normalization_forward": [558, 559], "lbr_augru_backward": [560, 561], "lbr_augru_forward": [562, 563], "lbr_gru_backward": [564, 565], "lbr_gru_forward": [566, 567], "lrn_backward": [568, 569], "lrn_forward": [570, 571], "lstm_backward": [572, 573], "lstm_forward": [574, 575], "dnnl_memori": 578, "dnnl_memory_desc": 580, "desc": 581, "pooling_backward": [582, 583], "pooling_forward": [584, 585], "dnnl_post_op": 586, "post_op": 587, "prelu_backward": [588, 589], "prelu_forward": [590, 591], "dnnl_primit": 592, "dnnl_primitive_attr": 594, "primitive_attr": 595, "dnnl_primitive_desc": 596, "primitive_desc_bas": 598, "resampling_backward": [603, 604], "resampling_forward": [605, 606], "rnn_primitive_desc_bas": 607, "shuffle_backward": [608, 609], "shuffle_forward": [610, 611], "softmax_backward": [612, 613], "softmax_forward": [614, 615], "dnnl_stream": 616, "threadpool_ifac": 620, "dnnl_transform": 621, "dnnl_ukernel_attr_param": 622, "attr_param": 623, "vanilla_rnn_backward": [626, 627], "vanilla_rnn_forward": [628, 629], "dnnl_version_t": 630, "example_allows_unimpl": 631, "gemm_dims_t": 632, "gqa_dims_t": 633, "mlp_dims_t": 634, "mqa_dims_t": 635, "sdpa_dims_t": 636, "sycl_deletor_t": 637}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Deterministic Mode": [[11, "deterministic-mode"]], "Accumulation Mode": [[10, "accumulation-mode"], [166, "accumulation-mode"], [310, "accumulation-mode"]], "class dnnl::graph::allocator": [[1, "class-dnnl-graph-allocator"]], "Overview": [[1, "overview"], [37, "overview"], [39, "overview"], [38, "overview"], [41, "overview"], [43, "overview"], [42, "overview"], [45, "overview"], [46, "overview"], [47, "overview"], [48, "overview"], [49, "overview"], [50, "overview"], [51, "overview"], [54, "overview"], [55, "overview"], [53, "overview"], [52, "overview"], [2, "overview"], [3, "overview"], [32, "overview"], [7, "overview"], [6, "overview"], [4, "overview"], [5, "overview"], [154, "overview"], [182, "overview"], [183, "overview"], [184, "overview"], [185, "overview"], [186, "overview"], [187, "overview"], [188, "overview"], [189, "overview"], [191, "overview"], [190, "overview"], [193, "overview"], [192, "overview"], [195, "overview"], [194, "overview"], [196, "overview"], [197, "overview"], [199, "overview"], [201, "overview"], [200, "overview"], [203, "overview"], [202, "overview"], [204, "overview"], [207, "overview"], [208, "overview"], [209, "overview"], [210, "overview"], [211, "overview"], [213, "overview"], [212, "overview"], [215, "overview"], [214, "overview"], [217, "overview"], [216, "overview"], [218, "overview"], [219, "overview"], [221, "overview"], [220, "overview"], [222, "overview"], [223, "overview"], [224, "overview"], [225, "overview"], [226, "overview"], [227, "overview"], [228, "overview"], [229, "overview"], [230, "overview"], [231, "overview"], [233, "overview"], [232, "overview"], [234, "overview"], [235, "overview"], [236, "overview"], [237, "overview"], [238, "overview"], [239, "overview"], [240, "overview"], [241, "overview"], [242, "overview"], [243, "overview"], [245, "overview"], [244, "overview"], [304, "overview"], [310, "overview"], [311, "overview"], [313, "overview"], [312, "overview"], [314, "overview"], [317, "overview"], [316, "overview"], [319, "overview"], [318, "overview"], [321, "overview"], [320, "overview"], [322, "overview"], [323, "overview"], [324, "overview"], [327, "overview"], [326, "overview"], [328, "overview"], [329, "overview"], [331, "overview"], [330, "overview"], [333, "overview"], [332, "overview"], [335, "overview"], [336, "overview"], [337, "overview"], [339, "overview"], [338, "overview"], [340, "overview"], [341, "overview"], [342, "overview"], [343, "overview"], [344, "overview"], [345, "overview"], [347, "overview"], [346, "overview"], [349, "overview"], [348, "overview"], [350, "overview"], [355, "overview"], [354, "overview"], [357, "overview"], [356, "overview"], [359, "overview"], [358, "overview"], [360, "overview"], [363, "overview"], [362, "overview"], [364, "overview"], [365, "overview"], [367, "overview"], [368, "overview"], [375, "overview"], [374, "overview"], [377, "overview"], [376, "overview"], [378, "overview"], [380, "overview"], [505, "overview"], [507, "overview"], [506, "overview"], [509, "overview"], [508, "overview"], [510, "overview"], [511, "overview"], [513, "overview"], [512, "overview"], [514, "overview"], [517, "overview"], [516, "overview"], [519, "overview"], [518, "overview"], [520, "overview"], [521, "overview"], [522, "overview"], [523, "overview"], [525, "overview"], [524, "overview"], [527, "overview"], [526, "overview"], [528, "overview"], [529, "overview"], [531, "overview"], [530, "overview"], [533, "overview"], [532, "overview"], [535, "overview"], [536, "overview"], [537, "overview"], [538, "overview"], [539, "overview"], [541, "overview"], [540, "overview"], [542, "overview"], [543, "overview"], [544, "overview"], [545, "overview"], [547, "overview"], [546, "overview"], [548, "overview"], [551, "overview"], [550, "overview"], [553, "overview"], [552, "overview"], [554, "overview"], [555, "overview"], [557, "overview"], [556, "overview"], [558, "overview"], [559, "overview"], [560, "overview"], [561, "overview"], [563, "overview"], [562, "overview"], [564, "overview"], [565, "overview"], [567, "overview"], [566, "overview"], [569, "overview"], [568, "overview"], [570, "overview"], [571, "overview"], [573, "overview"], [572, "overview"], [575, "overview"], [574, "overview"], [577, "overview"], [576, "overview"], [579, "overview"], [581, "overview"], [582, "overview"], [583, "overview"], [585, "overview"], [584, "overview"], [587, "overview"], [586, "overview"], [588, "overview"], [589, "overview"], [590, "overview"], [591, "overview"], [593, "overview"], [594, "overview"], [595, "overview"], [597, "overview"], [599, "overview"], [598, "overview"], [600, "overview"], [601, "overview"], [602, "overview"], [603, "overview"], [605, "overview"], [604, "overview"], [606, "overview"], [607, "overview"], [609, "overview"], [608, "overview"], [610, "overview"], [611, "overview"], [612, "overview"], [613, "overview"], [614, "overview"], [615, "overview"], [617, "overview"], [618, "overview"], [619, "overview"], [620, "overview"], [623, "overview"], [625, "overview"], [624, "overview"], [626, "overview"], [627, "overview"], [629, "overview"], [628, "overview"], [630, "overview"]], "Detailed Documentation": [[1, "detailed-documentation"], [2, "detailed-documentation"], [3, "detailed-documentation"], [7, "detailed-documentation"], [6, "detailed-documentation"], [4, "detailed-documentation"], [5, "detailed-documentation"], [182, "detailed-documentation"], [183, "detailed-documentation"], [184, "detailed-documentation"], [185, "detailed-documentation"], [186, "detailed-documentation"], [187, "detailed-documentation"], [188, "detailed-documentation"], [189, "detailed-documentation"], [191, "detailed-documentation"], [190, "detailed-documentation"], [193, "detailed-documentation"], [192, "detailed-documentation"], [195, "detailed-documentation"], [194, "detailed-documentation"], [196, "detailed-documentation"], [197, "detailed-documentation"], [199, "detailed-documentation"], [201, "detailed-documentation"], [200, "detailed-documentation"], [203, "detailed-documentation"], [202, "detailed-documentation"], [204, "detailed-documentation"], [207, "detailed-documentation"], [208, "detailed-documentation"], [209, "detailed-documentation"], [210, "detailed-documentation"], [211, "detailed-documentation"], [213, "detailed-documentation"], [212, "detailed-documentation"], [215, "detailed-documentation"], [214, "detailed-documentation"], [217, "detailed-documentation"], [216, "detailed-documentation"], [218, "detailed-documentation"], [219, "detailed-documentation"], [221, "detailed-documentation"], [220, "detailed-documentation"], [222, "detailed-documentation"], [223, "detailed-documentation"], [224, "detailed-documentation"], [225, "detailed-documentation"], [226, "detailed-documentation"], [227, "detailed-documentation"], [228, "detailed-documentation"], [229, "detailed-documentation"], [230, "detailed-documentation"], [231, "detailed-documentation"], [233, "detailed-documentation"], [232, "detailed-documentation"], [234, "detailed-documentation"], [235, "detailed-documentation"], [236, "detailed-documentation"], [237, "detailed-documentation"], [238, "detailed-documentation"], [239, "detailed-documentation"], [240, "detailed-documentation"], [241, "detailed-documentation"], [242, "detailed-documentation"], [243, "detailed-documentation"], [245, "detailed-documentation"], [244, "detailed-documentation"], [304, "detailed-documentation"], [310, "detailed-documentation"], [311, "detailed-documentation"], [313, "detailed-documentation"], [312, "detailed-documentation"], [314, "detailed-documentation"], [317, "detailed-documentation"], [316, "detailed-documentation"], [319, "detailed-documentation"], [318, "detailed-documentation"], [321, "detailed-documentation"], [320, "detailed-documentation"], [322, "detailed-documentation"], [323, "detailed-documentation"], [324, "detailed-documentation"], [327, "detailed-documentation"], [326, "detailed-documentation"], [328, "detailed-documentation"], [329, "detailed-documentation"], [331, "detailed-documentation"], [330, "detailed-documentation"], [333, "detailed-documentation"], [332, "detailed-documentation"], [335, "detailed-documentation"], [336, "detailed-documentation"], [337, "detailed-documentation"], [339, "detailed-documentation"], [338, "detailed-documentation"], [340, "detailed-documentation"], [341, "detailed-documentation"], [342, "detailed-documentation"], [343, "detailed-documentation"], [344, "detailed-documentation"], [345, "detailed-documentation"], [347, "detailed-documentation"], [346, "detailed-documentation"], [349, "detailed-documentation"], [348, "detailed-documentation"], [350, "detailed-documentation"], [355, "detailed-documentation"], [354, "detailed-documentation"], [357, "detailed-documentation"], [356, "detailed-documentation"], [359, "detailed-documentation"], [358, "detailed-documentation"], [360, "detailed-documentation"], [363, "detailed-documentation"], [362, "detailed-documentation"], [364, "detailed-documentation"], [365, "detailed-documentation"], [367, "detailed-documentation"], [368, "detailed-documentation"], [375, "detailed-documentation"], [374, "detailed-documentation"], [377, "detailed-documentation"], [376, "detailed-documentation"], [378, "detailed-documentation"], [380, "detailed-documentation"], [505, "detailed-documentation"], [507, "detailed-documentation"], [506, "detailed-documentation"], [509, "detailed-documentation"], [508, "detailed-documentation"], [510, "detailed-documentation"], [511, "detailed-documentation"], [513, "detailed-documentation"], [512, "detailed-documentation"], [514, "detailed-documentation"], [517, "detailed-documentation"], [516, "detailed-documentation"], [519, "detailed-documentation"], [518, "detailed-documentation"], [520, "detailed-documentation"], [521, "detailed-documentation"], [522, "detailed-documentation"], [523, "detailed-documentation"], [525, "detailed-documentation"], [524, "detailed-documentation"], [527, "detailed-documentation"], [526, "detailed-documentation"], [528, "detailed-documentation"], [529, "detailed-documentation"], [531, "detailed-documentation"], [530, "detailed-documentation"], [533, "detailed-documentation"], [532, "detailed-documentation"], [535, "detailed-documentation"], [536, "detailed-documentation"], [537, "detailed-documentation"], [538, "detailed-documentation"], [539, "detailed-documentation"], [541, "detailed-documentation"], [540, "detailed-documentation"], [542, "detailed-documentation"], [543, "detailed-documentation"], [544, "detailed-documentation"], [545, "detailed-documentation"], [547, "detailed-documentation"], [546, "detailed-documentation"], [548, "detailed-documentation"], [551, "detailed-documentation"], [550, "detailed-documentation"], [553, "detailed-documentation"], [552, "detailed-documentation"], [554, "detailed-documentation"], [555, "detailed-documentation"], [557, "detailed-documentation"], [556, "detailed-documentation"], [558, "detailed-documentation"], [559, "detailed-documentation"], [560, "detailed-documentation"], [561, "detailed-documentation"], [563, "detailed-documentation"], [562, "detailed-documentation"], [564, "detailed-documentation"], [565, "detailed-documentation"], [567, "detailed-documentation"], [566, "detailed-documentation"], [569, "detailed-documentation"], [568, "detailed-documentation"], [570, "detailed-documentation"], [571, "detailed-documentation"], [573, "detailed-documentation"], [572, "detailed-documentation"], [575, "detailed-documentation"], [574, "detailed-documentation"], [577, "detailed-documentation"], [576, "detailed-documentation"], [579, "detailed-documentation"], [581, "detailed-documentation"], [582, "detailed-documentation"], [583, "detailed-documentation"], [585, "detailed-documentation"], [584, "detailed-documentation"], [587, "detailed-documentation"], [586, "detailed-documentation"], [588, "detailed-documentation"], [589, "detailed-documentation"], [590, "detailed-documentation"], [591, "detailed-documentation"], [593, "detailed-documentation"], [594, "detailed-documentation"], [595, "detailed-documentation"], [597, "detailed-documentation"], [599, "detailed-documentation"], [598, "detailed-documentation"], [600, "detailed-documentation"], [601, "detailed-documentation"], [602, "detailed-documentation"], [603, "detailed-documentation"], [605, "detailed-documentation"], [604, "detailed-documentation"], [606, "detailed-documentation"], [607, "detailed-documentation"], [609, "detailed-documentation"], [608, "detailed-documentation"], [610, "detailed-documentation"], [611, "detailed-documentation"], [612, "detailed-documentation"], [613, "detailed-documentation"], [614, "detailed-documentation"], [615, "detailed-documentation"], [617, "detailed-documentation"], [618, "detailed-documentation"], [619, "detailed-documentation"], [620, "detailed-documentation"], [623, "detailed-documentation"], [625, "detailed-documentation"], [624, "detailed-documentation"], [626, "detailed-documentation"], [627, "detailed-documentation"], [629, "detailed-documentation"], [628, "detailed-documentation"], [630, "detailed-documentation"]], "Construction": [[1, "construction"], [2, "construction"], [3, "construction"], [7, "construction"], [6, "construction"], [4, "construction"], [5, "construction"], [505, "construction"], [507, "construction"], [506, "construction"], [509, "construction"], [508, "construction"], [510, "construction"], [511, "construction"], [513, "construction"], [512, "construction"], [514, "construction"], [517, "construction"], [516, "construction"], [519, "construction"], [518, "construction"], [520, "construction"], [521, "construction"], [522, "construction"], [523, "construction"], [525, "construction"], [524, "construction"], [527, "construction"], [526, "construction"], [528, "construction"], [529, "construction"], [531, "construction"], [530, "construction"], [533, "construction"], [532, "construction"], [535, "construction"], [536, "construction"], [541, "construction"], [540, "construction"], [542, "construction"], [543, "construction"], [544, "construction"], [545, "construction"], [547, "construction"], [546, "construction"], [548, "construction"], [551, "construction"], [550, "construction"], [553, "construction"], [552, "construction"], [554, "construction"], [555, "construction"], [557, "construction"], [556, "construction"], [558, "construction"], [559, "construction"], [560, "construction"], [561, "construction"], [563, "construction"], [562, "construction"], [564, "construction"], [565, "construction"], [567, "construction"], [566, "construction"], [569, "construction"], [568, "construction"], [570, "construction"], [571, "construction"], [573, "construction"], [572, "construction"], [575, "construction"], [574, "construction"], [577, "construction"], [576, "construction"], [579, "construction"], [581, "construction"], [582, "construction"], [583, "construction"], [585, "construction"], [584, "construction"], [587, "construction"], [588, "construction"], [589, "construction"], [590, "construction"], [591, "construction"], [593, "construction"], [595, "construction"], [599, "construction"], [598, "construction"], [600, "construction"], [601, "construction"], [602, "construction"], [603, "construction"], [605, "construction"], [604, "construction"], [606, "construction"], [607, "construction"], [609, "construction"], [608, "construction"], [610, "construction"], [611, "construction"], [612, "construction"], [613, "construction"], [614, "construction"], [615, "construction"], [617, "construction"], [618, "construction"], [619, "construction"], [625, "construction"], [624, "construction"], [626, "construction"], [627, "construction"], [629, "construction"], [628, "construction"]], "Advanced Topics": [[0, "advanced-topics"]], "Primitive Attributes": [[9, "primitive-attributes"]], "Attributes Usage": [[9, "attributes-usage"]], "Supported Attributes": [[9, "supported-attributes"]], "Attribute Related Error Handling": [[9, "attribute-related-error-handling"]], "class simple_memory_pool_t": [[8, "class-simple-memory-pool-t"]], "Dropout": [[12, "dropout"]], "Introduction": [[12, "introduction"], [36, "introduction"], [18, "introduction"], [60, "introduction"], [15, "introduction"], [172, "introduction"], [174, "introduction"], [177, "introduction"]], "Implementation": [[12, "implementation"]], "API": [[12, "api"], [24, "api"], [167, "api"]], "Floating-point Math Mode": [[13, "floating-point-math-mode"], [53, "floating-point-math-mode"], [322, "floating-point-math-mode"]], "The floating-point math mode attribute.": [[13, "the-floating-point-math-mode-attribute"]], "Enforcing the floating-point math mode to an integral primitive.": [[13, "enforcing-the-floating-point-math-mode-to-an-integral-primitive"]], "A note on the default floating-point math mode.": [[13, "a-note-on-the-default-floating-point-math-mode"]], "Scratchpad": [[17, "scratchpad"]], "Scratchpad Memory Engine": [[17, "scratchpad-memory-engine"]], "Examples": [[17, "examples"], [21, "examples"], [25, "examples"], [41, "examples"], [33, "examples"], [19, "examples"], [56, "examples"], [61, "examples"], [67, "examples"], [66, "examples"], [64, "examples"], [28, "examples"], [157, "examples"], [158, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [168, "examples"], [175, "examples"], [176, "examples"]], "Library Manages Scratchpad": [[17, "library-manages-scratchpad"]], "User Manages Scratchpad": [[17, "user-manages-scratchpad"]], "Rounding Mode": [[16, "rounding-mode"]], "Benchmarking Performance": [[20, "benchmarking-performance"]], "Binary": [[21, "binary"], [14, "binary"], [313, "binary"]], "General": [[21, "general"], [25, "general"], [33, "general"], [19, "general"], [56, "general"], [61, "general"], [67, "general"], [66, "general"], [64, "general"], [69, "general"], [68, "general"], [71, "general"], [70, "general"], [28, "general"], [72, "general"], [73, "general"], [74, "general"], [75, "general"], [76, "general"], [77, "general"], [79, "general"], [78, "general"], [80, "general"], [81, "general"], [82, "general"], [83, "general"], [84, "general"], [85, "general"], [87, "general"], [86, "general"], [88, "general"], [89, "general"], [91, "general"], [90, "general"], [92, "general"], [93, "general"], [94, "general"], [95, "general"], [96, "general"], [97, "general"], [98, "general"], [99, "general"], [101, "general"], [100, "general"], [102, "general"], [103, "general"], [105, "general"], [104, "general"], [106, "general"], [107, "general"], [109, "general"], [108, "general"], [110, "general"], [111, "general"], [112, "general"], [113, "general"], [115, "general"], [114, "general"], [117, "general"], [116, "general"], [118, "general"], [119, "general"], [121, "general"], [120, "general"], [122, "general"], [123, "general"], [125, "general"], [124, "general"], [126, "general"], [127, "general"], [129, "general"], [128, "general"], [131, "general"], [130, "general"], [133, "general"], [132, "general"], [135, "general"], [134, "general"], [137, "general"], [136, "general"], [139, "general"], [138, "general"], [141, "general"], [140, "general"], [143, "general"], [142, "general"], [144, "general"], [145, "general"], [146, "general"], [147, "general"], [148, "general"], [149, "general"], [150, "general"], [151, "general"], [153, "general"], [152, "general"], [157, "general"], [158, "general"], [161, "general"], [162, "general"], [163, "general"], [164, "general"], [165, "general"], [166, "general"], [168, "general"], [175, "general"], [176, "general"]], "Execution Arguments": [[21, "execution-arguments"], [25, "execution-arguments"], [33, "execution-arguments"], [19, "execution-arguments"], [56, "execution-arguments"], [61, "execution-arguments"], [67, "execution-arguments"], [66, "execution-arguments"], [64, "execution-arguments"], [28, "execution-arguments"], [97, "execution-arguments"], [98, "execution-arguments"], [157, "execution-arguments"], [158, "execution-arguments"], [161, "execution-arguments"], [162, "execution-arguments"], [163, "execution-arguments"], [164, "execution-arguments"], [165, "execution-arguments"], [166, "execution-arguments"], [168, "execution-arguments"]], "Implementation Details": [[21, "implementation-details"], [25, "implementation-details"], [33, "implementation-details"], [19, "implementation-details"], [56, "implementation-details"], [61, "implementation-details"], [67, "implementation-details"], [66, "implementation-details"], [64, "implementation-details"], [28, "implementation-details"], [157, "implementation-details"], [158, "implementation-details"], [161, "implementation-details"], [162, "implementation-details"], [163, "implementation-details"], [164, "implementation-details"], [166, "implementation-details"], [168, "implementation-details"]], "General Notes": [[21, "general-notes"], [25, "general-notes"], [33, "general-notes"], [19, "general-notes"], [56, "general-notes"], [61, "general-notes"], [67, "general-notes"], [66, "general-notes"], [64, "general-notes"], [28, "general-notes"], [157, "general-notes"], [158, "general-notes"], [161, "general-notes"], [162, "general-notes"], [163, "general-notes"], [166, "general-notes"], [168, "general-notes"]], "Post-Ops and Attributes": [[21, "post-ops-and-attributes"], [25, "post-ops-and-attributes"], [33, "post-ops-and-attributes"], [19, "post-ops-and-attributes"], [56, "post-ops-and-attributes"], [61, "post-ops-and-attributes"], [157, "post-ops-and-attributes"], [161, "post-ops-and-attributes"], [162, "post-ops-and-attributes"], [163, "post-ops-and-attributes"], [164, "post-ops-and-attributes"], [165, "post-ops-and-attributes"], [168, "post-ops-and-attributes"]], "Data Types Support": [[21, "data-types-support"], [25, "data-types-support"], [161, "data-types-support"], [162, "data-types-support"], [168, "data-types-support"]], "Data Representation": [[21, "data-representation"], [25, "data-representation"], [33, "data-representation"], [19, "data-representation"], [56, "data-representation"], [61, "data-representation"], [67, "data-representation"], [66, "data-representation"], [64, "data-representation"], [28, "data-representation"], [157, "data-representation"], [158, "data-representation"], [161, "data-representation"], [162, "data-representation"], [164, "data-representation"], [166, "data-representation"], [168, "data-representation"], [175, "data-representation"], [176, "data-representation"]], "Sources, Destination": [[21, "sources-destination"], [161, "sources-destination"], [168, "sources-destination"]], "Implementation Limitations": [[21, "implementation-limitations"], [25, "implementation-limitations"], [38, "implementation-limitations"], [43, "implementation-limitations"], [42, "implementation-limitations"], [45, "implementation-limitations"], [46, "implementation-limitations"], [47, "implementation-limitations"], [48, "implementation-limitations"], [49, "implementation-limitations"], [53, "implementation-limitations"], [33, "implementation-limitations"], [19, "implementation-limitations"], [56, "implementation-limitations"], [61, "implementation-limitations"], [67, "implementation-limitations"], [66, "implementation-limitations"], [64, "implementation-limitations"], [28, "implementation-limitations"], [157, "implementation-limitations"], [158, "implementation-limitations"], [161, "implementation-limitations"], [162, "implementation-limitations"], [163, "implementation-limitations"], [164, "implementation-limitations"], [165, "implementation-limitations"], [166, "implementation-limitations"], [168, "implementation-limitations"]], "Performance Tips": [[21, "performance-tips"], [25, "performance-tips"], [33, "performance-tips"], [19, "performance-tips"], [56, "performance-tips"], [61, "performance-tips"], [67, "performance-tips"], [66, "performance-tips"], [64, "performance-tips"], [28, "performance-tips"], [157, "performance-tips"], [158, "performance-tips"], [161, "performance-tips"], [162, "performance-tips"], [163, "performance-tips"], [165, "performance-tips"], [166, "performance-tips"], [168, "performance-tips"]], "Concat": [[25, "concat"], [80, "concat"], [316, "concat"]], "Input validation notes": [[24, "input-validation-notes"]], "Memory Alignment Requirements": [[24, "memory-alignment-requirements"]], "Intel(R) Architecture Processors": [[24, "intel-r-architecture-processors"], [31, "intel-r-architecture-processors"]], "Intel(R) Processor Graphics and Xe Architecture graphics": [[24, "intel-r-processor-graphics-and-xe-architecture-graphics"], [31, "intel-r-processor-graphics-and-xe-architecture-graphics"]], "Basic Concepts": [[36, "basic-concepts"], [18, "basic-concepts"], [174, "basic-concepts"]], "Logical Tensor": [[36, "logical-tensor"], [362, "logical-tensor"]], "Op": [[36, "op"], [364, "op"]], "Graph": [[36, "graph"], [360, "graph"]], "Partition": [[36, "partition"], [365, "partition"]], "Compiled Partition": [[36, "compiled-partition"], [355, "compiled-partition"]], "Tensor": [[36, "tensor"], [368, "tensor"]], "Binary Fusion Patterns": [[37, "binary-fusion-patterns"]], "Pattern Structure": [[37, "pattern-structure"], [39, "pattern-structure"], [38, "pattern-structure"], [43, "pattern-structure"], [45, "pattern-structure"], [46, "pattern-structure"], [47, "pattern-structure"], [48, "pattern-structure"], [49, "pattern-structure"], [50, "pattern-structure"], [51, "pattern-structure"], [54, "pattern-structure"], [55, "pattern-structure"]], "Data Types": [[37, "data-types"], [39, "data-types"], [38, "data-types"], [41, "data-types"], [43, "data-types"], [42, "data-types"], [45, "data-types"], [46, "data-types"], [47, "data-types"], [48, "data-types"], [49, "data-types"], [50, "data-types"], [51, "data-types"], [54, "data-types"], [55, "data-types"], [53, "data-types"], [52, "data-types"], [31, "data-types"], [61, "data-types"], [67, "data-types"], [28, "data-types"], [163, "data-types"], [165, "data-types"], [175, "data-types"], [176, "data-types"]], "ConvTranspose Fusion Patterns": [[39, "convtranspose-fusion-patterns"]], "Convolution Fusion Patterns": [[38, "convolution-fusion-patterns"]], "Example": [[38, "example"], [42, "example"], [45, "example"], [48, "example"], [52, "example"], [60, "example"], [172, "example"], [178, "example"]], "Constant Tensor Cache": [[26, "constant-tensor-cache"], [357, "constant-tensor-cache"]], "Build-Time Controls": [[26, "build-time-controls"], [40, "build-time-controls"], [160, "build-time-controls"], [160, "id1"], [178, "build-time-controls"]], "Run-Time Controls": [[26, "run-time-controls"], [40, "run-time-controls"], [160, "run-time-controls"], [160, "id2"], [178, "run-time-controls"]], "Constant Tensor Cache Capacity Control API": [[26, "constant-tensor-cache-capacity-control-api"]], "Environment Variable": [[26, "environment-variable"]], "Naming Conventions": [[27, "naming-conventions"]], "Variable (Tensor) Names": [[27, "variable-tensor-names"]], "Formulas and Verbose Output": [[27, "formulas-and-verbose-output"]], "RNN-Specific Notation": [[27, "rnn-specific-notation"]], "Memory Formats Tags": [[27, "memory-formats-tags"]], "Gated Multi-Layer Perceptron (Gated-MLP)": [[41, "gated-multi-layer-perceptron-gated-mlp"]], "Gated-MLP patterns": [[41, "gated-mlp-patterns"]], "Floating-point Gated-MLP": [[41, "floating-point-gated-mlp"]], "Implementation limitations": [[41, "implementation-limitations"], [52, "implementation-limitations"], [175, "implementation-limitations"], [176, "implementation-limitations"]], "References": [[41, "references"], [42, "references"], [53, "references"], [52, "references"], [63, "references"]], "Graph Dump": [[40, "graph-dump"]], "Interpolate Fusion Patterns": [[43, "interpolate-fusion-patterns"]], "Grouped Query Attention (GQA)": [[42, "grouped-query-attention-gqa"]], "GQA Pattern": [[42, "gqa-pattern"]], "GQA for Inference": [[42, "gqa-for-inference"]], "GQA Inference Pattern with 4D input and output": [[42, "gqa-inference-pattern-with-4d-input-and-output"]], "GQA Inference Pattern with 5D input and output": [[42, "gqa-inference-pattern-with-5d-input-and-output"]], "GQA for Training Forward Propagation": [[42, "gqa-for-training-forward-propagation"]], "GQA for Training Backpropagation": [[42, "gqa-for-training-backpropagation"]], "Low Precision": [[44, "low-precision"]], "INT8": [[44, "int8"]], "BF16/F16": [[44, "bf16-f16"]], "MatMul Fusion Patterns": [[45, "matmul-fusion-patterns"]], "Norm Fusion Patterns": [[46, "norm-fusion-patterns"]], "Pool Fusion Patterns": [[47, "pool-fusion-patterns"]], "Quantized Convolution Fusion Patterns": [[48, "quantized-convolution-fusion-patterns"]], "Quantized ConvTranspose Fusion Patterns": [[49, "quantized-convtranspose-fusion-patterns"]], "Quantized MatMul Fusion Patterns": [[50, "quantized-matmul-fusion-patterns"]], "Limitations": [[50, "limitations"], [35, "limitations"], [156, "limitations"]], "Reference": [[50, "reference"]], "Reduction Fusion Patterns": [[51, "reduction-fusion-patterns"]], "Softmax Fusion Patterns": [[54, "softmax-fusion-patterns"]], "Unary Fusion Patterns": [[55, "unary-fusion-patterns"]], "SDPA with Compressed Key and Value": [[53, "sdpa-with-compressed-key-and-value"]], "SDPA Pattern": [[53, "sdpa-pattern"]], "Scaled Dot-Product Attention (SDPA)": [[52, "scaled-dot-product-attention-sdpa"]], "SDPA patterns": [[52, "sdpa-patterns"]], "Floating-point SDPA for Inference": [[52, "floating-point-sdpa-for-inference"]], "Floating-point SDPA for Training Forward Propagation": [[52, "floating-point-sdpa-for-training-forward-propagation"]], "Floating-point SDPA for Training Backpropagation": [[52, "floating-point-sdpa-for-training-backpropagation"]], "Inference and Training": [[31, "inference-and-training"], [34, "inference-and-training"]], "General numerical behavior of the oneDNN library": [[31, "general-numerical-behavior-of-the-onednn-library"]], "Rounding mode and denormal handling": [[31, "rounding-mode-and-denormal-handling"]], "Hardware Limitations": [[31, "hardware-limitations"]], "CPU ISA Hints": [[30, "cpu-isa-hints"]], "Build-time Controls": [[30, "build-time-controls"], [35, "build-time-controls"], [29, "build-time-controls"], [159, "build-time-controls"]], "Run-time Controls": [[30, "run-time-controls"], [159, "run-time-controls"]], "class dnnl::graph::compiled_partition": [[2, "class-dnnl-graph-compiled-partition"]], "Methods": [[2, "methods"], [3, "methods"], [7, "methods"], [6, "methods"], [4, "methods"], [5, "methods"], [506, "methods"], [508, "methods"], [510, "methods"], [512, "methods"], [514, "methods"], [517, "methods"], [519, "methods"], [521, "methods"], [523, "methods"], [525, "methods"], [527, "methods"], [529, "methods"], [531, "methods"], [533, "methods"], [535, "methods"], [536, "methods"], [541, "methods"], [543, "methods"], [545, "methods"], [547, "methods"], [548, "methods"], [551, "methods"], [553, "methods"], [555, "methods"], [557, "methods"], [559, "methods"], [561, "methods"], [563, "methods"], [565, "methods"], [567, "methods"], [569, "methods"], [571, "methods"], [573, "methods"], [575, "methods"], [577, "methods"], [579, "methods"], [581, "methods"], [583, "methods"], [585, "methods"], [587, "methods"], [589, "methods"], [591, "methods"], [593, "methods"], [595, "methods"], [597, "methods"], [598, "methods"], [600, "methods"], [601, "methods"], [602, "methods"], [604, "methods"], [606, "methods"], [607, "methods"], [609, "methods"], [611, "methods"], [613, "methods"], [615, "methods"], [617, "methods"], [619, "methods"], [620, "methods"], [623, "methods"], [625, "methods"], [624, "methods"], [627, "methods"], [629, "methods"]], "class dnnl::graph::graph": [[3, "class-dnnl-graph-graph"]], "DPC++ Interoperability": [[32, "dpc-interoperability"]], "SYCL Buffers and DPC++ USM Interfaces for Memory Objects": [[32, "sycl-buffers-and-dpc-usm-interfaces-for-memory-objects"]], "Handling Dependencies with USM": [[32, "handling-dependencies-with-usm"]], "Eltwise": [[33, "eltwise"], [320, "eltwise"]], "Forward": [[33, "forward"], [19, "forward"], [56, "forward"], [61, "forward"], [66, "forward"], [64, "forward"], [28, "forward"], [157, "forward"], [158, "forward"], [163, "forward"], [165, "forward"], [166, "forward"]], "Difference Between Forward Training and Forward Inference": [[33, "difference-between-forward-training-and-forward-inference"], [19, "difference-between-forward-training-and-forward-inference"], [56, "difference-between-forward-training-and-forward-inference"], [61, "difference-between-forward-training-and-forward-inference"], [64, "difference-between-forward-training-and-forward-inference"], [28, "difference-between-forward-training-and-forward-inference"], [157, "difference-between-forward-training-and-forward-inference"], [158, "difference-between-forward-training-and-forward-inference"], [163, "difference-between-forward-training-and-forward-inference"], [165, "difference-between-forward-training-and-forward-inference"], [166, "difference-between-forward-training-and-forward-inference"]], "Backward": [[33, "backward"], [19, "backward"], [56, "backward"], [61, "backward"], [66, "backward"], [64, "backward"], [28, "backward"], [157, "backward"], [158, "backward"], [163, "backward"], [165, "backward"], [166, "backward"]], "Exceptions": [[33, "exceptions"]], "Data Type Support": [[33, "data-type-support"], [19, "data-type-support"], [56, "data-type-support"], [66, "data-type-support"], [64, "data-type-support"], [157, "data-type-support"], [158, "data-type-support"], [164, "data-type-support"], [166, "data-type-support"]], "class dnnl::graph::tensor": [[7, "class-dnnl-graph-tensor"]], "class dnnl::graph::partition": [[6, "class-dnnl-graph-partition"]], "Primitives": [[18, "primitives"], [18, "id2"], [334, "primitives"]], "Engines": [[18, "engines"]], "Streams": [[18, "streams"]], "Memory Objects": [[18, "memory-objects"], [18, "id1"]], "Levels of Abstraction": [[18, "levels-of-abstraction"]], "Creating Memory Objects and Primitives": [[18, "creating-memory-objects-and-primitives"]], "Graph Extension": [[18, "graph-extension"], [305, "graph-extension"]], "Micro-kernel Extension": [[18, "micro-kernel-extension"]], "Batch Normalization": [[19, "batch-normalization"], [312, "batch-normalization"]], "Mean and Variance": [[19, "mean-and-variance"], [56, "mean-and-variance"], [64, "mean-and-variance"]], "Scale and Shift": [[19, "scale-and-shift"], [56, "scale-and-shift"], [64, "scale-and-shift"]], "Source, Destination, and Their Gradients": [[19, "source-destination-and-their-gradients"], [56, "source-destination-and-their-gradients"], [66, "source-destination-and-their-gradients"], [64, "source-destination-and-their-gradients"], [157, "source-destination-and-their-gradients"], [166, "source-destination-and-their-gradients"]], "Experimental features": [[35, "experimental-features"], [35, "id1"]], "Features details": [[35, "features-details"]], "ONEDNN_EXPERIMENTAL_UKERNEL": [[35, "onednn-experimental-ukernel"]], "ONEDNN_EXPERIMENTAL_PROFILING": [[35, "onednn-experimental-profiling"]], "ONEDNN_EXPERIMENTAL_LOGGING": [[35, "onednn-experimental-logging"]], "ONEDNN_EXPERIMENTAL_SYCL_KERNEL_COMPILER": [[35, "onednn-experimental-sycl-kernel-compiler"]], "Examples and Tutorials": [[34, "examples-and-tutorials"]], "Functional API Examples": [[34, "functional-api-examples"]], "Fundamental Concepts and API Basics": [[34, "fundamental-concepts-and-api-basics"]], "Interoperability with External Runtimes": [[34, "interoperability-with-external-runtimes"]], "Matrix Multiplication with Different oneDNN Features": [[34, "matrix-multiplication-with-different-onednn-features"]], "Recurrent Neural Networks": [[34, "recurrent-neural-networks"]], "Performance Analysis": [[34, "performance-analysis"]], "Individual Primitives": [[34, "individual-primitives"]], "C API Examples": [[34, "c-api-examples"]], "Graph API Examples": [[34, "graph-api-examples"]], "Getting Started with Graph API": [[34, "getting-started-with-graph-api"]], "Advanced Graph API Usage": [[34, "advanced-graph-api-usage"]], "Microkernel (uKernel) API Examples": [[34, "microkernel-ukernel-api-examples"]], "Running Examples": [[34, "running-examples"], [34, "id1"]], "Prerequisites and Building Examples": [[34, "prerequisites-and-building-examples"]], "Group Normalization": [[56, "group-normalization"], [323, "group-normalization"]], "Host-Side Scalars Support": [[57, "host-side-scalars-support"]], "Inference": [[58, "inference"]], "Best Practices for Inference": [[58, "best-practices-for-inference"]], "fp32 Inference": [[58, "fp32-inference"]], "int8 Inference": [[58, "int8-inference"]], "Inference and Training Aspects": [[59, "inference-and-training-aspects"]], "Propagation Kinds": [[59, "propagation-kinds"]], "Difference Between Forward Propagation on Training and Inference": [[59, "difference-between-forward-propagation-on-training-and-inference"]], "Different Backward Propagation Kinds": [[59, "different-backward-propagation-kinds"]], "Inference-Specific Aspects": [[59, "inference-specific-aspects"]], "Training-Specific Aspects": [[59, "training-specific-aspects"]], "Workspace": [[59, "workspace"]], "Int8 Inference": [[60, "int8-inference"]], "int8 Workflow": [[60, "int8-workflow"]], "Quantization Process": [[60, "quantization-process"]], "Range of the Data": [[60, "range-of-the-data"]], "Scaling Factor": [[60, "scaling-factor"]], "Quantization Example": [[60, "quantization-example"]], "int8 Support": [[60, "int8-support"]], "Attributes": [[60, "attributes"], [175, "attributes"], [176, "attributes"], [311, "attributes"]], "Inner Product": [[61, "inner-product"], [324, "inner-product"]], "Nuances of int8 Computations": [[63, "nuances-of-int8-computations"]], "CPU": [[63, "cpu"], [155, "cpu"]], "1. Inputs of mixed type: u8 and s8": [[63, "inputs-of-mixed-type-u8-and-s8"]], "1.1. Processors with the Intel AVX2 or Intel AVX-512 Support": [[63, "processors-with-the-intel-avx2-or-intel-avx-512-support"]], "1.2. Processors with the Intel DL Boost Support": [[63, "processors-with-the-intel-dl-boost-support"]], "2. Inputs of the same type: s8": [[63, "inputs-of-the-same-type-s8"]], "GPU": [[63, "gpu"]], "Inspecting JIT Code": [[62, "inspecting-jit-code"]], "Example (CPU)": [[62, "example-cpu"]], "Example (GPU)": [[62, "example-gpu"]], "Matrix Multiplication": [[67, "matrix-multiplication"], [328, "matrix-multiplication"]], "Attributes and Post-ops": [[67, "attributes-and-post-ops"]], "Sparsity": [[67, "sparsity"], [162, "sparsity"]], "CSR encoding": [[67, "csr-encoding"]], "COO encoding": [[67, "coo-encoding"]], "PACKED encoding": [[67, "packed-encoding"]], "Local Response Normalization (LRN)": [[66, "local-response-normalization-lrn"]], "Post-ops and Attributes": [[66, "post-ops-and-attributes"], [64, "post-ops-and-attributes"], [28, "post-ops-and-attributes"], [166, "post-ops-and-attributes"]], "Link to the Library": [[65, "link-to-the-library"]], "Header Files": [[65, "header-files"]], "Libraries": [[65, "libraries"]], "Linux": [[65, "linux"]], "macOS": [[65, "macos"]], "Windows": [[65, "windows"], [65, "id1"]], "Linking to oneDNN": [[65, "linking-to-onednn"]], "Linux/macOS": [[65, "linux-macos"]], "Support for macOS hardened runtime": [[65, "support-for-macos-hardened-runtime"]], "Layer Normalization": [[64, "layer-normalization"], [326, "layer-normalization"]], "Root Mean Square Normalization Mode": [[64, "root-mean-square-normalization-mode"]], "AbsBackward": [[69, "absbackward"]], "Operation attributes": [[69, "operation-attributes"], [68, "operation-attributes"], [71, "operation-attributes"], [70, "operation-attributes"], [72, "operation-attributes"], [73, "operation-attributes"], [74, "operation-attributes"], [75, "operation-attributes"], [76, "operation-attributes"], [77, "operation-attributes"], [79, "operation-attributes"], [78, "operation-attributes"], [80, "operation-attributes"], [81, "operation-attributes"], [82, "operation-attributes"], [83, "operation-attributes"], [84, "operation-attributes"], [85, "operation-attributes"], [87, "operation-attributes"], [86, "operation-attributes"], [88, "operation-attributes"], [89, "operation-attributes"], [91, "operation-attributes"], [90, "operation-attributes"], [92, "operation-attributes"], [93, "operation-attributes"], [94, "operation-attributes"], [95, "operation-attributes"], [96, "operation-attributes"], [99, "operation-attributes"], [101, "operation-attributes"], [100, "operation-attributes"], [102, "operation-attributes"], [103, "operation-attributes"], [105, "operation-attributes"], [104, "operation-attributes"], [106, "operation-attributes"], [107, "operation-attributes"], [109, "operation-attributes"], [108, "operation-attributes"], [110, "operation-attributes"], [111, "operation-attributes"], [112, "operation-attributes"], [113, "operation-attributes"], [115, "operation-attributes"], [114, "operation-attributes"], [117, "operation-attributes"], [116, "operation-attributes"], [118, "operation-attributes"], [119, "operation-attributes"], [121, "operation-attributes"], [120, "operation-attributes"], [122, "operation-attributes"], [123, "operation-attributes"], [125, "operation-attributes"], [124, "operation-attributes"], [126, "operation-attributes"], [127, "operation-attributes"], [129, "operation-attributes"], [128, "operation-attributes"], [131, "operation-attributes"], [130, "operation-attributes"], [133, "operation-attributes"], [132, "operation-attributes"], [135, "operation-attributes"], [134, "operation-attributes"], [137, "operation-attributes"], [136, "operation-attributes"], [139, "operation-attributes"], [138, "operation-attributes"], [141, "operation-attributes"], [140, "operation-attributes"], [143, "operation-attributes"], [142, "operation-attributes"], [144, "operation-attributes"], [145, "operation-attributes"], [146, "operation-attributes"], [147, "operation-attributes"], [148, "operation-attributes"], [149, "operation-attributes"], [150, "operation-attributes"], [151, "operation-attributes"], [153, "operation-attributes"], [152, "operation-attributes"]], "Execution arguments": [[69, "execution-arguments"], [68, "execution-arguments"], [71, "execution-arguments"], [70, "execution-arguments"], [72, "execution-arguments"], [73, "execution-arguments"], [74, "execution-arguments"], [75, "execution-arguments"], [76, "execution-arguments"], [77, "execution-arguments"], [79, "execution-arguments"], [78, "execution-arguments"], [80, "execution-arguments"], [81, "execution-arguments"], [82, "execution-arguments"], [83, "execution-arguments"], [84, "execution-arguments"], [85, "execution-arguments"], [87, "execution-arguments"], [86, "execution-arguments"], [88, "execution-arguments"], [89, "execution-arguments"], [91, "execution-arguments"], [90, "execution-arguments"], [92, "execution-arguments"], [93, "execution-arguments"], [94, "execution-arguments"], [95, "execution-arguments"], [96, "execution-arguments"], [99, "execution-arguments"], [101, "execution-arguments"], [100, "execution-arguments"], [102, "execution-arguments"], [103, "execution-arguments"], [105, "execution-arguments"], [104, "execution-arguments"], [106, "execution-arguments"], [107, "execution-arguments"], [109, "execution-arguments"], [108, "execution-arguments"], [110, "execution-arguments"], [111, "execution-arguments"], [112, "execution-arguments"], [113, "execution-arguments"], [115, "execution-arguments"], [114, "execution-arguments"], [117, "execution-arguments"], [116, "execution-arguments"], [118, "execution-arguments"], [119, "execution-arguments"], [121, "execution-arguments"], [122, "execution-arguments"], [123, "execution-arguments"], [125, "execution-arguments"], [124, "execution-arguments"], [126, "execution-arguments"], [127, "execution-arguments"], [129, "execution-arguments"], [128, "execution-arguments"], [131, "execution-arguments"], [130, "execution-arguments"], [133, "execution-arguments"], [132, "execution-arguments"], [135, "execution-arguments"], [134, "execution-arguments"], [137, "execution-arguments"], [136, "execution-arguments"], [139, "execution-arguments"], [138, "execution-arguments"], [141, "execution-arguments"], [140, "execution-arguments"], [143, "execution-arguments"], [142, "execution-arguments"], [144, "execution-arguments"], [145, "execution-arguments"], [146, "execution-arguments"], [147, "execution-arguments"], [148, "execution-arguments"], [149, "execution-arguments"], [150, "execution-arguments"], [151, "execution-arguments"], [153, "execution-arguments"], [152, "execution-arguments"]], "Inputs": [[69, "inputs"], [68, "inputs"], [71, "inputs"], [70, "inputs"], [72, "inputs"], [73, "inputs"], [74, "inputs"], [75, "inputs"], [76, "inputs"], [77, "inputs"], [79, "inputs"], [78, "inputs"], [80, "inputs"], [81, "inputs"], [82, "inputs"], [83, "inputs"], [84, "inputs"], [85, "inputs"], [87, "inputs"], [86, "inputs"], [88, "inputs"], [89, "inputs"], [91, "inputs"], [90, "inputs"], [92, "inputs"], [93, "inputs"], [94, "inputs"], [95, "inputs"], [96, "inputs"], [99, "inputs"], [101, "inputs"], [100, "inputs"], [102, "inputs"], [103, "inputs"], [105, "inputs"], [104, "inputs"], [106, "inputs"], [107, "inputs"], [109, "inputs"], [108, "inputs"], [110, "inputs"], [111, "inputs"], [112, "inputs"], [113, "inputs"], [115, "inputs"], [114, "inputs"], [117, "inputs"], [116, "inputs"], [118, "inputs"], [119, "inputs"], [121, "inputs"], [120, "inputs"], [122, "inputs"], [123, "inputs"], [125, "inputs"], [124, "inputs"], [126, "inputs"], [127, "inputs"], [129, "inputs"], [128, "inputs"], [131, "inputs"], [130, "inputs"], [133, "inputs"], [132, "inputs"], [135, "inputs"], [134, "inputs"], [137, "inputs"], [136, "inputs"], [139, "inputs"], [138, "inputs"], [141, "inputs"], [140, "inputs"], [143, "inputs"], [142, "inputs"], [144, "inputs"], [145, "inputs"], [146, "inputs"], [147, "inputs"], [148, "inputs"], [149, "inputs"], [150, "inputs"], [151, "inputs"], [153, "inputs"], [152, "inputs"]], "Outputs": [[69, "outputs"], [68, "outputs"], [71, "outputs"], [70, "outputs"], [72, "outputs"], [73, "outputs"], [74, "outputs"], [75, "outputs"], [76, "outputs"], [77, "outputs"], [79, "outputs"], [78, "outputs"], [80, "outputs"], [81, "outputs"], [82, "outputs"], [83, "outputs"], [84, "outputs"], [85, "outputs"], [87, "outputs"], [86, "outputs"], [88, "outputs"], [89, "outputs"], [91, "outputs"], [90, "outputs"], [92, "outputs"], [93, "outputs"], [94, "outputs"], [95, "outputs"], [96, "outputs"], [99, "outputs"], [101, "outputs"], [100, "outputs"], [102, "outputs"], [103, "outputs"], [105, "outputs"], [104, "outputs"], [106, "outputs"], [107, "outputs"], [109, "outputs"], [108, "outputs"], [110, "outputs"], [111, "outputs"], [112, "outputs"], [113, "outputs"], [115, "outputs"], [114, "outputs"], [117, "outputs"], [116, "outputs"], [118, "outputs"], [119, "outputs"], [121, "outputs"], [120, "outputs"], [122, "outputs"], [123, "outputs"], [125, "outputs"], [124, "outputs"], [126, "outputs"], [127, "outputs"], [129, "outputs"], [128, "outputs"], [131, "outputs"], [130, "outputs"], [133, "outputs"], [132, "outputs"], [135, "outputs"], [134, "outputs"], [137, "outputs"], [136, "outputs"], [139, "outputs"], [138, "outputs"], [141, "outputs"], [140, "outputs"], [143, "outputs"], [142, "outputs"], [144, "outputs"], [145, "outputs"], [146, "outputs"], [147, "outputs"], [148, "outputs"], [149, "outputs"], [150, "outputs"], [151, "outputs"], [153, "outputs"], [152, "outputs"]], "Supported data types": [[69, "supported-data-types"], [68, "supported-data-types"], [71, "supported-data-types"], [70, "supported-data-types"], [72, "supported-data-types"], [73, "supported-data-types"], [74, "supported-data-types"], [75, "supported-data-types"], [76, "supported-data-types"], [77, "supported-data-types"], [79, "supported-data-types"], [78, "supported-data-types"], [80, "supported-data-types"], [81, "supported-data-types"], [82, "supported-data-types"], [83, "supported-data-types"], [84, "supported-data-types"], [85, "supported-data-types"], [87, "supported-data-types"], [86, "supported-data-types"], [88, "supported-data-types"], [89, "supported-data-types"], [91, "supported-data-types"], [90, "supported-data-types"], [92, "supported-data-types"], [93, "supported-data-types"], [94, "supported-data-types"], [95, "supported-data-types"], [96, "supported-data-types"], [99, "supported-data-types"], [101, "supported-data-types"], [100, "supported-data-types"], [102, "supported-data-types"], [103, "supported-data-types"], [105, "supported-data-types"], [104, "supported-data-types"], [106, "supported-data-types"], [107, "supported-data-types"], [109, "supported-data-types"], [108, "supported-data-types"], [110, "supported-data-types"], [111, "supported-data-types"], [112, "supported-data-types"], [113, "supported-data-types"], [115, "supported-data-types"], [114, "supported-data-types"], [117, "supported-data-types"], [116, "supported-data-types"], [118, "supported-data-types"], [119, "supported-data-types"], [121, "supported-data-types"], [120, "supported-data-types"], [122, "supported-data-types"], [123, "supported-data-types"], [125, "supported-data-types"], [124, "supported-data-types"], [126, "supported-data-types"], [127, "supported-data-types"], [129, "supported-data-types"], [128, "supported-data-types"], [131, "supported-data-types"], [130, "supported-data-types"], [133, "supported-data-types"], [132, "supported-data-types"], [135, "supported-data-types"], [134, "supported-data-types"], [137, "supported-data-types"], [136, "supported-data-types"], [139, "supported-data-types"], [138, "supported-data-types"], [141, "supported-data-types"], [140, "supported-data-types"], [143, "supported-data-types"], [142, "supported-data-types"], [144, "supported-data-types"], [145, "supported-data-types"], [146, "supported-data-types"], [147, "supported-data-types"], [148, "supported-data-types"], [149, "supported-data-types"], [150, "supported-data-types"], [151, "supported-data-types"], [153, "supported-data-types"], [152, "supported-data-types"]], "Abs": [[68, "abs"]], "AvgPool": [[71, "avgpool"]], "Add": [[70, "add"]], "class dnnl::graph::logical_tensor": [[4, "class-dnnl-graph-logical-tensor"]], "Typedefs": [[4, "typedefs"], [311, "typedefs"], [318, "typedefs"], [321, "typedefs"], [329, "typedefs"], [335, "typedefs"], [341, "typedefs"], [344, "typedefs"], [349, "typedefs"], [348, "typedefs"], [350, "typedefs"], [355, "typedefs"], [354, "typedefs"], [360, "typedefs"], [363, "typedefs"], [364, "typedefs"], [365, "typedefs"], [367, "typedefs"], [368, "typedefs"], [579, "typedefs"]], "class dnnl::graph::op": [[5, "class-dnnl-graph-op"]], "Post-ops": [[14, "post-ops"]], "Supported Post-ops": [[14, "supported-post-ops"]], "Eltwise Post-op": [[14, "eltwise-post-op"]], "Sum Post-op": [[14, "sum-post-op"]], "Depthwise Post-op": [[14, "depthwise-post-op"]], "Binary Post-op": [[14, "binary-post-op"]], "Prelu Post-op": [[14, "prelu-post-op"]], "Examples of Chained Post-ops": [[14, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[14, "sum-relu"]], "Tanh -> Sum -> ScaleShift": [[14, "tanh-sum-scaleshift"]], "Relu -> Depthwise -> Relu": [[14, "relu-depthwise-relu"]], "Quantization": [[15, "quantization"]], "Quantization Model": [[15, "quantization-model"]], "Static Quantization": [[15, "static-quantization"]], "Dynamic Quantization": [[15, "dynamic-quantization"]], "General Numerical Behavior Notes": [[15, "general-numerical-behavior-notes"]], "Relevant APIs and Supported Granularity Levels": [[15, "relevant-apis-and-supported-granularity-levels"]], "Argument Scaling": [[15, "argument-scaling"]], "Available Scaling API Methods": [[15, "available-scaling-api-methods"]], "Supported Scaling Granularity Levels": [[15, "supported-scaling-granularity-levels"]], "Per-tensor Scaling": [[15, "per-tensor-scaling"]], "Per-Channel Scaling": [[15, "per-channel-scaling"]], "Block Scaling": [[15, "block-scaling"]], "Special Case: MX-compatible Block Scaling (or Dynamic Quantization)": [[15, "special-case-mx-compatible-block-scaling-or-dynamic-quantization"]], "Multi-Dimensional Scaling": [[15, "multi-dimensional-scaling"]], "Argument Zero-Points": [[15, "argument-zero-points"]], "Available Zero-Point API Methods": [[15, "available-zero-point-api-methods"]], "Supported Zero-Point Granularity Levels": [[15, "supported-zero-point-granularity-levels"]], "Special Case: Host-side Scalar Scaling Factor and Zero-point": [[15, "special-case-host-side-scalar-scaling-factor-and-zero-point"]], "Precomputed Reductions": [[15, "precomputed-reductions"]], "Available Precomputed Reductions API Method": [[15, "available-precomputed-reductions-api-method"]], "Quantization Workflows Examples": [[15, "quantization-workflows-examples"]], "Breakdown of Convolution with INT8 Quantization": [[15, "breakdown-of-convolution-with-int8-quantization"]], "Per-Channel Scaling Specifics": [[15, "per-channel-scaling-specifics"]], "Weights Preparation with Per-output-channel Scaling": [[15, "weights-preparation-with-per-output-channel-scaling"]], "Convolution with Per-output-channel Quantization": [[15, "convolution-with-per-output-channel-quantization"]], "Matrix Multiplication with Weight-only Quantization (WoQ)": [[15, "matrix-multiplication-with-weight-only-quantization-woq"]], "Matrix Multiplication with Precomputed Reductions and Advanced Quantization": [[15, "matrix-multiplication-with-precomputed-reductions-and-advanced-quantization"]], "Use Build Options": [[23, "use-build-options"]], "Common options": [[23, "common-options"]], "Host compiler": [[23, "host-compiler"]], "Configuring functionality": [[23, "configuring-functionality"]], "ONEDNN_ENABLE_WORKLOAD": [[23, "onednn-enable-workload"]], "ONEDNN_ENABLE_PRIMITIVE": [[23, "onednn-enable-primitive"]], "ONEDNN_ENABLE_PRIMITIVE_CPU_ISA": [[23, "onednn-enable-primitive-cpu-isa"]], "ONEDNN_ENABLE_PRIMITIVE_GPU_ISA": [[23, "onednn-enable-primitive-gpu-isa"]], "ONEDNN_ENABLE_GEMM_KERNELS_ISA": [[23, "onednn-enable-gemm-kernels-isa"]], "Configuring testing": [[23, "configuring-testing"]], "ONEDNN_TEST_SET": [[23, "onednn-test-set"]], "CPU Options": [[23, "cpu-options"]], "Targeting Specific Architecture": [[23, "targeting-specific-architecture"]], "Runtimes": [[23, "runtimes"], [23, "id1"]], "OpenMP": [[23, "openmp"]], "Threading Building Blocks (TBB)": [[23, "threading-building-blocks-tbb"]], "Threadpool": [[23, "threadpool"]], "AArch64 Options": [[23, "aarch64-options"]], "Arm Compute Library": [[23, "arm-compute-library"]], "Vendor BLAS libraries": [[23, "vendor-blas-libraries"]], "GPU Options": [[23, "gpu-options"]], "OpenCL*": [[23, "opencl"]], "Graph component limitations": [[23, "graph-component-limitations"]], "Build from Source": [[22, "build-from-source"]], "Prerequisites": [[22, "prerequisites"]], "Step 1. Download the Source Code": [[22, "step-1-download-the-source-code"]], "Step 2. Build the Library": [[22, "step-2-build-the-library"]], "Build on Linux and macOS": [[22, "build-on-linux-and-macos"]], "Use GCC, Clang, or Intel oneAPI DPC++/C++ Compiler": [[22, "use-gcc-clang-or-intel-oneapi-dpc-c-compiler"]], "Use Intel oneAPI DPC++/C++ Compiler with SYCL runtime": [[22, "use-intel-oneapi-dpc-c-compiler-with-sycl-runtime"]], "Use GCC targeting AArch64 on x64 host": [[22, "use-gcc-targeting-aarch64-on-x64-host"]], "Use GCC with Arm Compute Library (ACL) on AArch64 host": [[22, "use-gcc-with-arm-compute-library-acl-on-aarch64-host"]], "Build on Windows": [[22, "build-on-windows"]], "Use Microsoft Visual C++ Compiler": [[22, "use-microsoft-visual-c-compiler"]], "Use Intel oneAPI DPC++/C++ Compiler with SYCL Runtime": [[22, "id1"]], "Step 3. (Optional) Validate the Build": [[22, "step-3-optional-validate-the-build"]], "Step 4. (Optional) Build Documentation": [[22, "step-4-optional-build-documentation"]], "Step 5. Install the Library": [[22, "step-5-install-the-library"]], "Convolution": [[28, "convolution"], [81, "convolution"], [317, "convolution"]], "Regular Convolution": [[28, "regular-convolution"], [81, "regular-convolution"]], "Convolution with Groups": [[28, "convolution-with-groups"], [81, "convolution-with-groups"]], "Convolution with Dilation": [[28, "convolution-with-dilation"], [81, "convolution-with-dilation"]], "Deconvolution (Transposed Convolution)": [[28, "deconvolution-transposed-convolution"]], "Example 1": [[28, "example-1"]], "Example 2": [[28, "example-2"]], "Example 3": [[28, "example-3"]], "Algorithms": [[28, "algorithms"]], "Direct Algorithm": [[28, "direct-algorithm"]], "Winograd Convolution": [[28, "winograd-convolution"]], "Automatic Algorithm Selection": [[28, "automatic-algorithm-selection"]], "CPU Dispatcher Control": [[29, "cpu-dispatcher-control"]], "Runtime Controls": [[29, "runtime-controls"]], "AvgPoolBackward": [[72, "avgpoolbackward"]], "BatchNormForwardTraining": [[73, "batchnormforwardtraining"]], "BatchNormInference": [[74, "batchnorminference"]], "BatchNormTrainingBackward": [[75, "batchnormtrainingbackward"]], "BiasAdd": [[76, "biasadd"]], "BiasAddBackward": [[77, "biasaddbackward"]], "ClampBackward": [[79, "clampbackward"]], "Clamp": [[78, "clamp"]], "ConvolutionBackwardData": [[82, "convolutionbackwarddata"]], "ConvolutionBackwardWeights": [[83, "convolutionbackwardweights"]], "ConvTranspose": [[84, "convtranspose"]], "ConvTransposeBackwardData": [[85, "convtransposebackwarddata"]], "Dequantize": [[87, "dequantize"]], "ConvTransposeBackwardWeights": [[86, "convtransposebackwardweights"]], "Divide": [[88, "divide"]], "DynamicDequantize": [[89, "dynamicdequantize"]], "Elu": [[91, "elu"]], "DynamicQuantize": [[90, "dynamicquantize"]], "EluBackward": [[92, "elubackward"]], "End": [[93, "end"]], "Exp": [[94, "exp"]], "GELU": [[95, "gelu"]], "GELUBackward": [[96, "gelubackward"]], "GenIndex": [[97, "genindex"]], "Operation Attributes": [[97, "operation-attributes"], [98, "operation-attributes"]], "Input": [[97, "input"], [98, "input"]], "Output": [[97, "output"], [98, "output"]], "Supported Data Types": [[97, "supported-data-types"], [98, "supported-data-types"]], "GreaterEqual": [[98, "greaterequal"]], "GroupNorm": [[99, "groupnorm"]], "HardSigmoidBackward": [[101, "hardsigmoidbackward"]], "HardSigmoid": [[100, "hardsigmoid"]], "HardSwish": [[102, "hardswish"]], "HardSwishBackward": [[103, "hardswishbackward"]], "InterpolateBackward": [[105, "interpolatebackward"]], "Interpolate": [[104, "interpolate"]], "LayerNorm": [[106, "layernorm"]], "LayerNormBackward": [[107, "layernormbackward"]], "Log": [[109, "log"]], "LeakyReLU": [[108, "leakyrelu"]], "LogSoftmax": [[110, "logsoftmax"]], "LogSoftmaxBackward": [[111, "logsoftmaxbackward"]], "MatMul": [[112, "matmul"]], "Maximum": [[113, "maximum"]], "MaxPoolBackward": [[115, "maxpoolbackward"]], "MaxPool": [[114, "maxpool"]], "Mish": [[117, "mish"]], "Minimum": [[116, "minimum"]], "MishBackward": [[118, "mishbackward"]], "Multiply": [[119, "multiply"]], "PReLU": [[121, "prelu"], [158, "prelu"], [332, "prelu"]], "Broadcasting Rules": [[121, "broadcasting-rules"], [122, "broadcasting-rules"]], "Pow": [[120, "pow"]], "PReLUBackward": [[122, "prelubackward"]], "Quantize": [[123, "quantize"]], "ReduceL1": [[125, "reducel1"]], "Reciprocal": [[124, "reciprocal"]], "ReduceL2": [[126, "reducel2"]], "ReduceMax": [[127, "reducemax"]], "ReduceMin": [[129, "reducemin"]], "ReduceMean": [[128, "reducemean"]], "ReduceSum": [[131, "reducesum"]], "ReduceProd": [[130, "reduceprod"]], "ReLUBackward": [[133, "relubackward"]], "ReLU": [[132, "relu"]], "Round": [[135, "round"]], "Reorder": [[134, "reorder"], [162, "reorder"], [338, "reorder"]], "Sigmoid": [[137, "sigmoid"]], "Select": [[136, "select"]], "Broadcasting rules": [[136, "broadcasting-rules"]], "SoftMax": [[139, "softmax"]], "SigmoidBackward": [[138, "sigmoidbackward"]], "SoftPlus": [[141, "softplus"]], "SoftMaxBackward": [[140, "softmaxbackward"]], "Sqrt": [[143, "sqrt"]], "SoftPlusBackward": [[142, "softplusbackward"]], "SqrtBackward": [[144, "sqrtbackward"]], "Square": [[145, "square"]], "SquaredDifference": [[146, "squareddifference"]], "StaticReshape": [[147, "staticreshape"]], "StaticTranspose": [[148, "statictranspose"]], "Subtract": [[149, "subtract"]], "Tanh": [[150, "tanh"]], "TanhBackward": [[151, "tanhbackward"]], "Wildcard": [[153, "wildcard"]], "TypeCast": [[152, "typecast"]], "Configuring oneDNN for Benchmarking": [[155, "configuring-onednn-for-benchmarking"]], "Threading Runtimes": [[155, "threading-runtimes"]], "Benchmarking Settings": [[155, "benchmarking-settings"]], "Whole Machine": [[155, "whole-machine"]], "Single NUMA Domain": [[155, "single-numa-domain"]], "Several Cores Within a NUMA Domain": [[155, "several-cores-within-a-numa-domain"]], "OpenCL Interoperability": [[154, "opencl-interoperability"]], "OpenCL Buffers and USM Interfaces for Memory Objects": [[154, "opencl-buffers-and-usm-interfaces-for-memory-objects"]], "Handling Dependencies": [[154, "handling-dependencies"]], "Persistent Cache": [[156, "persistent-cache"]], "Primitive": [[156, "primitive"]], "Relation to Primitive Cache": [[156, "relation-to-primitive-cache"]], "API Usage Example": [[156, "api-usage-example"], [156, "id1"]], "Engine": [[156, "engine"], [321, "engine"], [359, "engine"]], "Memory descriptor": [[156, "memory-descriptor"], [432, "memory-descriptor"]], "Pooling": [[157, "pooling"], [331, "pooling"]], "Primitive Cache": [[159, "primitive-cache"], [333, "primitive-cache"]], "Managing Memory Consumption": [[159, "managing-memory-consumption"]], "Profiling": [[159, "profiling"], [336, "profiling"]], "Profiling oneDNN Performance": [[160, "profiling-onednn-performance"]], "Features for VTune Profiler": [[160, "features-for-vtune-profiler"]], "ITT Tagging for Primitive Execution": [[160, "itt-tagging-for-primitive-execution"]], "Example: Profiling with VTune Profiler": [[160, "example-profiling-with-vtune-profiler"]], "Profiling for Hotspots": [[160, "profiling-for-hotspots"]], "Profiling for Microarchitecture Information": [[160, "profiling-for-microarchitecture-information"]], "Example: Profiling with Linux Perf": [[160, "example-profiling-with-linux-perf"]], "Reduction": [[161, "reduction"], [337, "reduction"]], "Notes": [[161, "notes"]], "Resampling": [[163, "resampling"], [339, "resampling"]], "Nearest Neighbor Resampling": [[163, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[163, "bilinear-resampling"]], "RNN": [[164, "rnn"], [340, "rnn"]], "Cell Functions": [[164, "cell-functions"]], "Vanilla RNN": [[164, "vanilla-rnn"]], "LSTM": [[164, "lstm"]], "LSTM (or Vanilla LSTM)": [[164, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[164, "lstm-with-peephole"]], "LSTM with Projection (or LSTMP)": [[164, "lstm-with-projection-or-lstmp"]], "GRU": [[164, "gru"]], "Linear-Before-Reset GRU": [[164, "linear-before-reset-gru"]], "AUGRU": [[164, "augru"]], "Linear-Before-Reset AUGRU": [[164, "linear-before-reset-augru"]], "Considerations for Training": [[164, "considerations-for-training"]], "Shuffle": [[165, "shuffle"], [342, "shuffle"]], "Data Layouts": [[165, "data-layouts"]], "Sparse memory formats": [[167, "sparse-memory-formats"]], "CSR Encoding": [[167, "csr-encoding"]], "Sorted COO Encoding": [[167, "sorted-coo-encoding"]], "Softmax": [[166, "softmax"], [343, "softmax"]], "System Requirements": [[169, "system-requirements"]], "Sum": [[168, "sum"], [345, "sum"]], "Training": [[171, "training"]], "fp32 Training": [[171, "fp32-training"]], "bfp16 Training": [[171, "bfp16-training"]], "Using oneDNN with Threadpool-Based Threading": [[170, "using-onednn-with-threadpool-based-threading"]], "Bfloat16 Training": [[172, "bfloat16-training"]], "bfloat16 Support": [[172, "bfloat16-support"]], "bfloat16 Workflow": [[172, "bfloat16-workflow"]], "Transitioning from Intel MKL-DNN to oneDNN": [[173, "transitioning-from-intel-mkl-dnn-to-onednn"]], "Summary of Changes": [[173, "summary-of-changes"]], "Source Code Changes": [[173, "source-code-changes"]], "Build Process": [[173, "build-process"]], "Broken Compatibility with Intel MKL-DNN": [[173, "broken-compatibility-with-intel-mkl-dnn"]], "Information for Developers": [[173, "information-for-developers"]], "Memory representation": [[174, "memory-representation"]], "Operation representation": [[174, "operation-representation"]], "Batch-Reduce General Matrix Multiplication": [[175, "batch-reduce-general-matrix-multiplication"]], "Data transformation": [[176, "data-transformation"]], "Understanding Memory Formats": [[177, "understanding-memory-formats"]], "Nomenclature Used": [[177, "nomenclature-used"]], "Data Formats": [[177, "data-formats"]], "Plain Data Formats": [[177, "plain-data-formats"]], "NCHW": [[177, "nchw"]], "NHWC": [[177, "nhwc"]], "CHWN": [[177, "chwn"]], "Relevant Reading": [[177, "relevant-reading"]], "Generalization of the Plain Data Layout": [[177, "generalization-of-the-plain-data-layout"]], "Strides": [[177, "strides"]], "Blocked Layout": [[177, "blocked-layout"]], "What if Channels Are not Multiples of 8 (or 16)?": [[177, "what-if-channels-are-not-multiples-of-8-or-16"]], "Verbose Message Catalogue": [[179, "verbose-message-catalogue"]], "Primitive Creation/Dispatching": [[179, "primitive-creation-dispatching"]], "Engine Creation": [[179, "engine-creation"]], "Memory Creation and Related Operations": [[179, "memory-creation-and-related-operations"]], "Verbose Mode": [[178, "verbose-mode"]], "Troubleshooting primitive creation issues": [[178, "troubleshooting-primitive-creation-issues"]], "Profiling a workload": [[178, "profiling-a-workload"]], "Understanding why a given implementation is dispatched": [[178, "understanding-why-a-given-implementation-is-dispatched"]], "Enable ONEDNN_VERBOSE with timestamps": [[178, "enable-onednn-verbose-with-timestamps"]], "Decrypting the Output": [[178, "decrypting-the-output"]], "enum api_kind": [[181, "enum-api-kind"]], "Profiling with VTune(TM) Profiler": [[180, "profiling-with-vtune-tm-profiler"]], "enum dnnl::accumulation_mode": [[182, "enum-dnnl-accumulation-mode"]], "Enum Values": [[182, "enum-values"], [183, "enum-values"], [184, "enum-values"], [185, "enum-values"], [186, "enum-values"], [187, "enum-values"], [188, "enum-values"], [189, "enum-values"], [191, "enum-values"], [190, "enum-values"], [193, "enum-values"], [192, "enum-values"], [195, "enum-values"], [194, "enum-values"], [196, "enum-values"], [197, "enum-values"], [199, "enum-values"], [201, "enum-values"], [200, "enum-values"], [203, "enum-values"], [202, "enum-values"], [204, "enum-values"], [207, "enum-values"], [208, "enum-values"], [209, "enum-values"], [210, "enum-values"], [211, "enum-values"], [213, "enum-values"], [212, "enum-values"], [215, "enum-values"], [214, "enum-values"], [217, "enum-values"], [216, "enum-values"], [218, "enum-values"], [219, "enum-values"], [221, "enum-values"], [220, "enum-values"], [222, "enum-values"], [223, "enum-values"], [224, "enum-values"], [225, "enum-values"], [226, "enum-values"], [227, "enum-values"], [228, "enum-values"], [229, "enum-values"], [230, "enum-values"], [231, "enum-values"], [233, "enum-values"], [232, "enum-values"], [234, "enum-values"], [235, "enum-values"], [236, "enum-values"], [237, "enum-values"], [238, "enum-values"], [239, "enum-values"], [240, "enum-values"], [241, "enum-values"], [242, "enum-values"], [243, "enum-values"], [245, "enum-values"], [244, "enum-values"]], "enum dnnl_accumulation_mode_t": [[183, "enum-dnnl-accumulation-mode-t"]], "enum dnnl_alg_kind_t": [[184, "enum-dnnl-alg-kind-t"]], "enum dnnl::algorithm": [[185, "enum-dnnl-algorithm"]], "enum dnnl::cpu_isa": [[186, "enum-dnnl-cpu-isa"]], "enum dnnl::cpu_isa_hints": [[187, "enum-dnnl-cpu-isa-hints"]], "enum dnnl_cpu_isa_hints_t": [[188, "enum-dnnl-cpu-isa-hints-t"]], "enum dnnl_cpu_isa_t": [[189, "enum-dnnl-cpu-isa-t"]], "enum dnnl::engine::kind": [[191, "enum-dnnl-engine-kind"]], "enum dnnl_data_type_t": [[190, "enum-dnnl-data-type-t"]], "enum dnnl_format_kind_t": [[193, "enum-dnnl-format-kind-t"]], "enum dnnl_engine_kind_t": [[192, "enum-dnnl-engine-kind-t"]], "enum dnnl::fpmath_mode": [[195, "enum-dnnl-fpmath-mode"]], "enum dnnl_format_tag_t": [[194, "enum-dnnl-format-tag-t"]], "enum dnnl_fpmath_mode_t": [[196, "enum-dnnl-fpmath-mode-t"]], "enum dnnl_graph_dump_mode_t": [[197, "enum-dnnl-graph-dump-mode-t"]], "enum dnnl::graph::graph_dump_mode": [[198, "enum-dnnl-graph-graph-dump-mode"]], "enum dnnl_graph_layout_type_t": [[199, "enum-dnnl-graph-layout-type-t"]], "enum dnnl::graph::logical_tensor::layout_type": [[201, "enum-dnnl-graph-logical-tensor-layout-type"]], "enum dnnl::graph::logical_tensor::data_type": [[200, "enum-dnnl-graph-logical-tensor-data-type"]], "enum dnnl::graph::op::attr": [[203, "enum-dnnl-graph-op-attr"]], "enum dnnl::graph::logical_tensor::property_type": [[202, "enum-dnnl-graph-logical-tensor-property-type"]], "enum dnnl::graph::op::kind": [[205, "enum-dnnl-graph-op-kind"]], "enum dnnl_graph_op_attr_t": [[204, "enum-dnnl-graph-op-attr-t"]], "enum dnnl::graph::partition::policy": [[207, "enum-dnnl-graph-partition-policy"]], "enum dnnl_graph_op_kind_t": [[206, "enum-dnnl-graph-op-kind-t"]], "enum dnnl_graph_partition_policy_t": [[208, "enum-dnnl-graph-partition-policy-t"]], "enum dnnl::graph::status": [[209, "enum-dnnl-graph-status"]], "enum dnnl_graph_tensor_property_t": [[210, "enum-dnnl-graph-tensor-property-t"]], "enum dnnl::memory::data_type": [[211, "enum-dnnl-memory-data-type"]], "enum dnnl::memory::format_tag": [[213, "enum-dnnl-memory-format-tag"]], "enum dnnl::memory::format_kind": [[212, "enum-dnnl-memory-format-kind"]], "enum dnnl::normalization_flags": [[215, "enum-dnnl-normalization-flags"]], "enum dnnl::memory::sparse_encoding": [[214, "enum-dnnl-memory-sparse-encoding"]], "enum dnnl::ocl_interop::memory_kind": [[217, "enum-dnnl-ocl-interop-memory-kind"]], "enum dnnl_normalization_flags_t": [[216, "enum-dnnl-normalization-flags-t"]], "enum dnnl_ocl_interop_memory_kind_t": [[218, "enum-dnnl-ocl-interop-memory-kind-t"]], "enum dnnl_pack_type_t": [[219, "enum-dnnl-pack-type-t"]], "enum dnnl_primitive_kind_t": [[221, "enum-dnnl-primitive-kind-t"]], "enum dnnl::primitive::kind": [[220, "enum-dnnl-primitive-kind"]], "enum dnnl::profiling_data_kind": [[222, "enum-dnnl-profiling-data-kind"]], "enum dnnl_profiling_data_kind_t": [[223, "enum-dnnl-profiling-data-kind-t"]], "enum dnnl::prop_kind": [[224, "enum-dnnl-prop-kind"]], "enum dnnl_prop_kind_t": [[225, "enum-dnnl-prop-kind-t"]], "enum dnnl::quantization_mode": [[226, "enum-dnnl-quantization-mode"]], "enum dnnl_quantization_mode_t": [[227, "enum-dnnl-quantization-mode-t"]], "enum dnnl::query": [[228, "enum-dnnl-query"]], "enum dnnl_query_t": [[229, "enum-dnnl-query-t"]], "enum dnnl::rnn_direction": [[230, "enum-dnnl-rnn-direction"]], "enum dnnl_rnn_direction_t": [[231, "enum-dnnl-rnn-direction-t"]], "enum dnnl_rnn_flags_t": [[233, "enum-dnnl-rnn-flags-t"]], "enum dnnl::rnn_flags": [[232, "enum-dnnl-rnn-flags"]], "enum dnnl::rounding_mode": [[234, "enum-dnnl-rounding-mode"]], "enum dnnl_rounding_mode_t": [[235, "enum-dnnl-rounding-mode-t"]], "enum dnnl::scratchpad_mode": [[236, "enum-dnnl-scratchpad-mode"]], "enum dnnl_scratchpad_mode_t": [[237, "enum-dnnl-scratchpad-mode-t"]], "enum dnnl_sparse_encoding_t": [[238, "enum-dnnl-sparse-encoding-t"]], "enum dnnl::status": [[239, "enum-dnnl-status"]], "enum dnnl_status_t": [[240, "enum-dnnl-status-t"]], "enum dnnl::stream::flags": [[241, "enum-dnnl-stream-flags"]], "enum dnnl_stream_flags_t": [[242, "enum-dnnl-stream-flags-t"]], "enum dnnl::sycl_interop::memory_kind": [[243, "enum-dnnl-sycl-interop-memory-kind"]], "enum dnnl::ukernel::pack_type": [[245, "enum-dnnl-ukernel-pack-type"]], "enum dnnl_sycl_interop_memory_kind_t": [[244, "enum-dnnl-sycl-interop-memory-kind-t"]], "batch_normalization.cpp": [[247, "batch-normalization-cpp"]], "augru.cpp": [[246, "augru-cpp"]], "binary.cpp": [[248, "binary-cpp"]], "bnorm_u8_via_binary_postops.cpp": [[249, "bnorm-u8-via-binary-postops-cpp"]], "cnn_inference_f32.c": [[250, "cnn-inference-f32-c"]], "cnn_inference_f32.cpp": [[251, "cnn-inference-f32-cpp"]], "cnn_training_bf16.cpp": [[253, "cnn-training-bf16-cpp"]], "cnn_inference_int8.cpp": [[252, "cnn-inference-int8-cpp"]], "cnn_training_f32.cpp": [[254, "cnn-training-f32-cpp"]], "concat.cpp": [[255, "concat-cpp"]], "convolution.cpp": [[256, "convolution-cpp"]], "cpu_brgemm.cpp": [[257, "cpu-brgemm-cpp"]], "cpu_cnn_training_f32.c": [[258, "cpu-cnn-training-f32-c"]], "cpu_getting_started.cpp": [[259, "cpu-getting-started-cpp"]], "cpu_matmul_coo.cpp": [[261, "cpu-matmul-coo-cpp"]], "cpu_inference_int8.cpp": [[260, "cpu-inference-int8-cpp"]], "cpu_matmul_csr.cpp": [[262, "cpu-matmul-csr-cpp"]], "cpu_matmul_quantization.cpp": [[263, "cpu-matmul-quantization-cpp"]], "cpu_matmul_weights_compression.cpp": [[264, "cpu-matmul-weights-compression-cpp"]], "cpu_rnn_inference_f32.cpp": [[265, "cpu-rnn-inference-f32-cpp"]], "cpu_rnn_inference_int8.cpp": [[266, "cpu-rnn-inference-int8-cpp"]], "cpu_sgemm_and_matmul.cpp": [[267, "cpu-sgemm-and-matmul-cpp"]], "cross_engine_reorder.c": [[269, "cross-engine-reorder-c"]], "cpu_single_op_partition.cpp": [[268, "cpu-single-op-partition-cpp"]], "deconvolution.cpp": [[271, "deconvolution-cpp"]], "cross_engine_reorder.cpp": [[270, "cross-engine-reorder-cpp"]], "getting_started.cpp": [[273, "getting-started-cpp"]], "eltwise.cpp": [[272, "eltwise-cpp"]], "gpu_opencl_interop.cpp": [[275, "gpu-opencl-interop-cpp"]], "gpu_opencl_getting_started.cpp": [[274, "gpu-opencl-getting-started-cpp"]], "group_normalization.cpp": [[276, "group-normalization-cpp"]], "inference_int8_matmul.cpp": [[277, "inference-int8-matmul-cpp"]], "inner_product.cpp": [[278, "inner-product-cpp"]], "layer_normalization.cpp": [[279, "layer-normalization-cpp"]], "lbr_gru.cpp": [[280, "lbr-gru-cpp"]], "lrn.cpp": [[281, "lrn-cpp"]], "matmul.cpp": [[283, "matmul-cpp"]], "lstm.cpp": [[282, "lstm-cpp"]], "matmul_perf.cpp": [[285, "matmul-perf-cpp"]], "matmul_f8_quantization.cpp": [[284, "matmul-f8-quantization-cpp"]], "matmul_with_host_scalar_scale.cpp": [[286, "matmul-with-host-scalar-scale-cpp"]], "memory_format_propagation.cpp": [[287, "memory-format-propagation-cpp"]], "pooling.cpp": [[289, "pooling-cpp"]], "performance_profiling.cpp": [[288, "performance-profiling-cpp"]], "prelu.cpp": [[290, "prelu-cpp"]], "reduction.cpp": [[291, "reduction-cpp"]], "reorder.cpp": [[292, "reorder-cpp"]], "resampling.cpp": [[293, "resampling-cpp"]], "shuffle.cpp": [[295, "shuffle-cpp"]], "rnn_training_f32.cpp": [[294, "rnn-training-f32-cpp"]], "softmax.cpp": [[296, "softmax-cpp"]], "sum.cpp": [[297, "sum-cpp"]], "sycl_interop_buffer.cpp": [[299, "sycl-interop-buffer-cpp"]], "sycl_getting_started.cpp": [[298, "sycl-getting-started-cpp"]], "sycl_interop_usm.cpp": [[300, "sycl-interop-usm-cpp"]], "sycl_single_op_partition.cpp": [[301, "sycl-single-op-partition-cpp"]], "weights_decompression_matmul.cpp": [[303, "weights-decompression-matmul-cpp"]], "vanilla_rnn.cpp": [[302, "vanilla-rnn-cpp"]], "Global Namespace": [[304, "global-namespace"]], "Global Functions": [[304, "global-functions"], [310, "global-functions"], [311, "global-functions"], [313, "global-functions"], [312, "global-functions"], [314, "global-functions"], [317, "global-functions"], [316, "global-functions"], [319, "global-functions"], [321, "global-functions"], [320, "global-functions"], [322, "global-functions"], [323, "global-functions"], [324, "global-functions"], [327, "global-functions"], [326, "global-functions"], [328, "global-functions"], [329, "global-functions"], [331, "global-functions"], [330, "global-functions"], [333, "global-functions"], [332, "global-functions"], [335, "global-functions"], [336, "global-functions"], [337, "global-functions"], [339, "global-functions"], [338, "global-functions"], [340, "global-functions"], [341, "global-functions"], [342, "global-functions"], [343, "global-functions"], [344, "global-functions"], [345, "global-functions"], [347, "global-functions"], [346, "global-functions"], [349, "global-functions"], [348, "global-functions"], [350, "global-functions"], [355, "global-functions"], [354, "global-functions"], [357, "global-functions"], [356, "global-functions"], [359, "global-functions"], [358, "global-functions"], [360, "global-functions"], [363, "global-functions"], [362, "global-functions"], [364, "global-functions"], [365, "global-functions"], [367, "global-functions"], [368, "global-functions"], [375, "global-functions"], [374, "global-functions"], [377, "global-functions"], [376, "global-functions"], [378, "global-functions"]], "Programming Model": [[307, "programming-model"]], "Fusion Patterns": [[306, "fusion-patterns"]], "Other Fusion Patterns": [[306, "other-fusion-patterns"]], "oneDNN API": [[309, "onednn-api"]], "Supported Operations": [[308, "supported-operations"]], "Common API": [[315, "common-api"]], "BLAS functions": [[314, "blas-functions"]], "Deconvolution": [[319, "deconvolution"]], "Data types": [[318, "data-types"]], "Macros": [[318, "macros"], [329, "macros"], [335, "macros"], [341, "macros"], [362, "macros"]], "Runtime interoperability API": [[325, "runtime-interoperability-api"], [361, "runtime-interoperability-api"]], "LRN": [[327, "lrn"]], "Memory": [[329, "memory"]], "OpenCL interoperability API": [[330, "opencl-interoperability-api"], [363, "opencl-interoperability-api"]], "Common": [[335, "common"]], "Service": [[341, "service"]], "Stream": [[344, "stream"]], "Threadpool interoperability API": [[347, "threadpool-interoperability-api"]], "SYCL interoperability API": [[346, "sycl-interoperability-api"], [367, "sycl-interoperability-api"]], "BRGeMM ukernel": [[349, "brgemm-ukernel"]], "Ukernels": [[348, "ukernels"], [639, "ukernels"]], "Transform ukernel": [[350, "transform-ukernel"]], "ukernel utils": [[351, "ukernel-utils"]], "Utilities": [[352, "utilities"], [369, "utilities"]], "Graph API": [[353, "graph-api"]], "Allocator": [[354, "allocator"]], "Compiled Partition Cache": [[356, "compiled-partition-cache"]], "Dump Mode": [[358, "dump-mode"]], "Status": [[366, "status"]], "oneAPI Deep Neural Network Library (oneDNN) Developer Guide and Reference": [[370, "oneapi-deep-neural-network-library-onednn-developer-guide-and-reference"]], "Interoperability with DPC++ and OpenCL": [[371, "interoperability-with-dpc-and-opencl"]], "namespace dnnl::graph": [[373, "namespace-dnnl-graph"]], "namespace dnnl": [[372, "namespace-dnnl"]], "namespace dnnl::graph::sycl_interop": [[375, "namespace-dnnl-graph-sycl-interop"]], "namespace dnnl::graph::ocl_interop": [[374, "namespace-dnnl-graph-ocl-interop"]], "namespace dnnl::sycl_interop": [[377, "namespace-dnnl-sycl-interop"]], "namespace dnnl::ocl_interop": [[376, "namespace-dnnl-ocl-interop"]], "namespace dnnl::threadpool_interop": [[378, "namespace-dnnl-threadpool-interop"]], "namespace dnnl::ukernel": [[379, "namespace-dnnl-ukernel"]], "namespace oneapi": [[380, "namespace-oneapi"]], "namespace std": [[381, "namespace-std"]], "namespace sycl": [[382, "namespace-sycl"]], "Orphans": [[383, "orphans"]], "<Untitled>": [[385, "untitled"], [387, "untitled"], [389, "untitled"], [391, "untitled"], [393, "untitled"], [395, "untitled"], [397, "untitled"], [399, "untitled"], [401, "untitled"], [403, "untitled"], [405, "untitled"], [407, "untitled"], [409, "untitled"], [411, "untitled"], [413, "untitled"], [415, "untitled"], [417, "untitled"], [419, "untitled"], [421, "untitled"], [423, "untitled"], [425, "untitled"], [427, "untitled"], [429, "untitled"], [431, "untitled"], [433, "untitled"], [435, "untitled"], [437, "untitled"], [439, "untitled"], [441, "untitled"], [443, "untitled"], [445, "untitled"], [447, "untitled"], [449, "untitled"], [451, "untitled"], [453, "untitled"], [455, "untitled"], [457, "untitled"], [460, "untitled"], [462, "untitled"], [464, "untitled"], [466, "untitled"], [468, "untitled"], [470, "untitled"], [472, "untitled"], [474, "untitled"], [476, "untitled"], [478, "untitled"], [480, "untitled"], [482, "untitled"], [484, "untitled"], [486, "untitled"], [488, "untitled"], [490, "untitled"], [492, "untitled"], [494, "untitled"], [496, "untitled"], [498, "untitled"], [500, "untitled"]], "AUGRU RNN Primitive Example": [[384, "augru-rnn-primitive-example"]], "Batch Normalization Primitive Example": [[386, "batch-normalization-primitive-example"]], "Binary Primitive Example": [[388, "binary-primitive-example"]], "Bnorm u8 by binary post-ops example": [[390, "bnorm-u8-by-binary-post-ops-example"]], "CNN f32 inference example": [[392, "cnn-f32-inference-example"], [394, "cnn-f32-inference-example"]], "CNN int8 inference example": [[396, "cnn-int8-inference-example"]], "CNN bf16 training example": [[398, "cnn-bf16-training-example"]], "CNN f32 training example": [[400, "cnn-f32-training-example"], [408, "cnn-f32-training-example"]], "Concat Primitive Example": [[402, "concat-primitive-example"]], "Convolution Primitive Example": [[404, "convolution-primitive-example"]], "BRGeMM ukernel example": [[406, "brgemm-ukernel-example"]], "MatMul Primitive with Sparse Memory in COO Format": [[410, "matmul-primitive-with-sparse-memory-in-coo-format"]], "MatMul Primitive with Sparse Memory in CSR Format": [[412, "matmul-primitive-with-sparse-memory-in-csr-format"]], "MatMul Tutorial: Quantization": [[414, "matmul-tutorial-quantization"]], "MatMul Primitive Example": [[416, "matmul-primitive-example"]], "RNN f32 Inference Example": [[418, "rnn-f32-inference-example"]], "RNN int8 inference example": [[420, "rnn-int8-inference-example"]], "MatMul Tutorial: Comparison with SGEMM": [[422, "matmul-tutorial-comparison-with-sgemm"]], "Reorder between CPU and GPU engines": [[424, "reorder-between-cpu-and-gpu-engines"], [426, "reorder-between-cpu-and-gpu-engines"]], "Public headers": [[426, "public-headers"], [432, "public-headers"], [434, "public-headers"], [436, "public-headers"], [438, "public-headers"], [440, "public-headers"], [442, "public-headers"], [444, "public-headers"], [446, "public-headers"], [493, "public-headers"]], "cross_engine_reorder_tutorial() function": [[426, "cross-engine-reorder-tutorial-function"]], "Engine and stream": [[426, "engine-and-stream"], [432, "engine-and-stream"], [434, "engine-and-stream"], [493, "engine-and-stream"]], "Wrapping data into oneDNN GPU memory object": [[426, "wrapping-data-into-onednn-gpu-memory-object"]], "Creating a ReLU primitive": [[426, "creating-a-relu-primitive"], [432, "creating-a-relu-primitive"]], "Getting results from a oneDNN GPU memory object": [[426, "getting-results-from-a-onednn-gpu-memory-object"]], "Executing all primitives": [[426, "executing-all-primitives"]], "Validate the result": [[426, "validate-the-result"]], "Deconvolution Primitive Example": [[428, "deconvolution-primitive-example"]], "Element-Wise Primitive Example": [[430, "element-wise-primitive-example"]], "oneDNN API Basic Workflow Tutorial": [[432, "onednn-api-basic-workflow-tutorial"]], "getting_started_tutorial() function": [[432, "getting-started-tutorial-function"]], "Data preparation (code outside of oneDNN)": [[432, "data-preparation-code-outside-of-onednn"]], "Wrapping data into a oneDNN memory object": [[432, "wrapping-data-into-a-onednn-memory-object"]], "Alternative way to create a memory descriptor": [[432, "alternative-way-to-create-a-memory-descriptor"]], "Creating a memory object": [[432, "creating-a-memory-object"]], "Executing the ReLU primitive": [[432, "executing-the-relu-primitive"]], "Obtaining the result and validation": [[432, "obtaining-the-result-and-validation"]], "main() function": [[432, "main-function"], [493, "main-function"]], "Getting started on GPU with OpenCL extensions API": [[434, "getting-started-on-gpu-with-opencl-extensions-api"]], "gpu_opencl_interop_tutorial() function": [[434, "gpu-opencl-interop-tutorial-function"]], "Wrapping data into oneDNN memory object": [[434, "wrapping-data-into-onednn-memory-object"], [493, "wrapping-data-into-onednn-memory-object"]], "Initialize the data by executing a custom OpenCL kernel": [[434, "initialize-the-data-by-executing-a-custom-opencl-kernel"]], "Create and execute a primitive": [[434, "create-and-execute-a-primitive"], [493, "create-and-execute-a-primitive"]], "Validate the results": [[434, "validate-the-results"], [493, "validate-the-results"]], "Getting started on CPU with Graph API": [[436, "getting-started-on-cpu-with-graph-api"]], "cpu_getting_started_tutorial() function": [[436, "cpu-getting-started-tutorial-function"]], "Build Graph and Get Partitions": [[436, "build-graph-and-get-partitions"], [438, "build-graph-and-get-partitions"], [440, "build-graph-and-get-partitions"], [446, "build-graph-and-get-partitions"]], "Compile and Execute Partition": [[436, "compile-and-execute-partition"], [438, "compile-and-execute-partition"], [440, "compile-and-execute-partition"], [442, "compile-and-execute-partition"], [444, "compile-and-execute-partition"], [446, "compile-and-execute-partition"]], "Convolution int8 inference example with Graph API": [[438, "convolution-int8-inference-example-with-graph-api"]], "simple_pattern_int8() function": [[438, "simple-pattern-int8-function"]], "Single op partition on CPU": [[440, "single-op-partition-on-cpu"]], "cpu_single_op_partition_tutorial() function": [[440, "cpu-single-op-partition-tutorial-function"]], "Getting started with OpenCL extensions and Graph API": [[442, "getting-started-with-opencl-extensions-and-graph-api"]], "ocl_getting_started_tutorial() function": [[442, "ocl-getting-started-tutorial-function"]], "Build Graph and Get Partitions.": [[442, "build-graph-and-get-partitions"], [444, "build-graph-and-get-partitions"]], "Getting started with SYCL extensions API and Graph API": [[444, "getting-started-with-sycl-extensions-api-and-graph-api"]], "sycl_getting_started_tutorial() function": [[444, "sycl-getting-started-tutorial-function"]], "Single op partition on GPU": [[446, "single-op-partition-on-gpu"]], "sycl_single_op_partition_tutorial() function": [[446, "sycl-single-op-partition-tutorial-function"]], "Group Normalization Primitive Example": [[448, "group-normalization-primitive-example"]], "MatMul Tutorial: INT8 Inference": [[450, "matmul-tutorial-int8-inference"]], "Inner Product Primitive Example": [[452, "inner-product-primitive-example"]], "Layer Normalization Primitive Example": [[454, "layer-normalization-primitive-example"]], "Linear-Before-Reset GRU RNN Primitive Example": [[456, "linear-before-reset-gru-rnn-primitive-example"]], "Legal Information": [[458, "legal-information"]], "Trademark Information": [[458, "trademark-information"]], "Local Response Normalization Primitive Example": [[459, "local-response-normalization-primitive-example"]], "LSTM RNN Primitive Example": [[461, "lstm-rnn-primitive-example"]], "Matmul Primitive Example": [[463, "matmul-primitive-example"]], "Matrix Multiplication with f8 Quantization": [[465, "matrix-multiplication-with-f8-quantization"]], "Matrix Multiplication Performance Example": [[467, "matrix-multiplication-performance-example"]], "MatMul with Host Scalar Scale example": [[469, "matmul-with-host-scalar-scale-example"]], "Memory Format Propagation": [[471, "memory-format-propagation"]], "Introduction to the tutorial": [[471, "introduction-to-the-tutorial"]], "memory_format_propagation() function": [[471, "memory-format-propagation-function"]], "Initialization": [[471, "initialization"]], "Create convolution and pooling primitives": [[471, "create-convolution-and-pooling-primitives"]], "Create source and destination memory objects": [[471, "create-source-and-destination-memory-objects"]], "Determine if source and destination need to be reordered": [[471, "determine-if-source-and-destination-need-to-be-reordered"]], "Allocate intermediate buffers if necessary": [[471, "allocate-intermediate-buffers-if-necessary"]], "Perform reorders for source data if necessary": [[471, "perform-reorders-for-source-data-if-necessary"]], "Create and execute convolution and pooling primitives": [[471, "create-and-execute-convolution-and-pooling-primitives"]], "Reorder destination data if necessary": [[471, "reorder-destination-data-if-necessary"]], "Results": [[471, "results"]], "Performance Profiling Example": [[473, "performance-profiling-example"]], "Walkthrough": [[473, "walkthrough"]], "Naive Implementation": [[473, "naive-implementation"]], "Blocked format implementation": [[473, "blocked-format-implementation"]], "Fused Implementation": [[473, "fused-implementation"]], "Performance summary": [[473, "performance-summary"]], "Configuration Notice": [[473, "configuration-notice"]], "Pooling Primitive Example": [[475, "pooling-primitive-example"]], "Primitive Example": [[477, "primitive-example"]], "Reduction Primitive Example": [[479, "reduction-primitive-example"]], "Reorder Primitive Example": [[481, "reorder-primitive-example"]], "Resampling Primitive Example": [[483, "resampling-primitive-example"]], "RNN f32 training example": [[485, "rnn-f32-training-example"]], "Shuffle Primitive Example": [[487, "shuffle-primitive-example"]], "Softmax Primitive Example": [[489, "softmax-primitive-example"]], "Sum Primitive Example": [[491, "sum-primitive-example"]], "Getting Started with SYCL Extensions API": [[493, "getting-started-with-sycl-extensions-api"]], "sycl_interop_buffer_tutorial() function": [[493, "sycl-interop-buffer-tutorial-function"]], "Initialize the data executing a custom SYCL kernel": [[493, "initialize-the-data-executing-a-custom-sycl-kernel"]], "SYCL USM Example": [[495, "sycl-usm-example"]], "Vanilla RNN Primitive Example": [[497, "vanilla-rnn-primitive-example"]], "MatMul Tutorial: Weights Decompression": [[499, "matmul-tutorial-weights-decompression"]], "Performance Profiling and Inspection": [[501, "performance-profiling-and-inspection"]], "struct args_t": [[503, "struct-args-t"]], "oneDNN Concepts": [[502, "onednn-concepts"]], "struct cpu_deletor_t": [[504, "struct-cpu-deletor-t"]], "struct dnnl::augru_backward": [[505, "struct-dnnl-augru-backward"]], "Inherited Members": [[505, "inherited-members"], [507, "inherited-members"], [506, "inherited-members"], [509, "inherited-members"], [508, "inherited-members"], [510, "inherited-members"], [511, "inherited-members"], [513, "inherited-members"], [512, "inherited-members"], [514, "inherited-members"], [517, "inherited-members"], [516, "inherited-members"], [519, "inherited-members"], [518, "inherited-members"], [520, "inherited-members"], [521, "inherited-members"], [522, "inherited-members"], [523, "inherited-members"], [525, "inherited-members"], [524, "inherited-members"], [527, "inherited-members"], [526, "inherited-members"], [528, "inherited-members"], [529, "inherited-members"], [531, "inherited-members"], [530, "inherited-members"], [533, "inherited-members"], [532, "inherited-members"], [535, "inherited-members"], [541, "inherited-members"], [540, "inherited-members"], [542, "inherited-members"], [543, "inherited-members"], [544, "inherited-members"], [545, "inherited-members"], [547, "inherited-members"], [546, "inherited-members"], [551, "inherited-members"], [550, "inherited-members"], [553, "inherited-members"], [552, "inherited-members"], [554, "inherited-members"], [555, "inherited-members"], [557, "inherited-members"], [556, "inherited-members"], [558, "inherited-members"], [559, "inherited-members"], [560, "inherited-members"], [561, "inherited-members"], [563, "inherited-members"], [562, "inherited-members"], [564, "inherited-members"], [565, "inherited-members"], [567, "inherited-members"], [566, "inherited-members"], [569, "inherited-members"], [568, "inherited-members"], [570, "inherited-members"], [571, "inherited-members"], [573, "inherited-members"], [572, "inherited-members"], [575, "inherited-members"], [574, "inherited-members"], [577, "inherited-members"], [576, "inherited-members"], [579, "inherited-members"], [581, "inherited-members"], [582, "inherited-members"], [583, "inherited-members"], [585, "inherited-members"], [584, "inherited-members"], [587, "inherited-members"], [588, "inherited-members"], [589, "inherited-members"], [590, "inherited-members"], [591, "inherited-members"], [593, "inherited-members"], [595, "inherited-members"], [597, "inherited-members"], [599, "inherited-members"], [598, "inherited-members"], [600, "inherited-members"], [601, "inherited-members"], [602, "inherited-members"], [603, "inherited-members"], [605, "inherited-members"], [604, "inherited-members"], [606, "inherited-members"], [607, "inherited-members"], [609, "inherited-members"], [608, "inherited-members"], [610, "inherited-members"], [611, "inherited-members"], [612, "inherited-members"], [613, "inherited-members"], [614, "inherited-members"], [615, "inherited-members"], [617, "inherited-members"], [618, "inherited-members"], [619, "inherited-members"], [623, "inherited-members"], [625, "inherited-members"], [624, "inherited-members"], [626, "inherited-members"], [627, "inherited-members"], [629, "inherited-members"], [628, "inherited-members"]], "struct dnnl::augru_forward": [[507, "struct-dnnl-augru-forward"]], "struct dnnl::augru_backward::primitive_desc": [[506, "struct-dnnl-augru-backward-primitive-desc"]], "struct dnnl::batch_normalization_backward": [[509, "struct-dnnl-batch-normalization-backward"]], "struct dnnl::augru_forward::primitive_desc": [[508, "struct-dnnl-augru-forward-primitive-desc"]], "struct dnnl::batch_normalization_backward::primitive_desc": [[510, "struct-dnnl-batch-normalization-backward-primitive-desc"]], "struct dnnl::batch_normalization_forward": [[511, "struct-dnnl-batch-normalization-forward"]], "struct dnnl::binary": [[513, "struct-dnnl-binary"]], "struct dnnl::batch_normalization_forward::primitive_desc": [[512, "struct-dnnl-batch-normalization-forward-primitive-desc"]], "struct dnnl::binary::primitive_desc": [[514, "struct-dnnl-binary-primitive-desc"]], "struct dnnl_brgemm": [[515, "struct-dnnl-brgemm"]], "struct dnnl::concat::primitive_desc": [[517, "struct-dnnl-concat-primitive-desc"]], "struct dnnl::concat": [[516, "struct-dnnl-concat"]], "struct dnnl::convolution_backward_data::primitive_desc": [[519, "struct-dnnl-convolution-backward-data-primitive-desc"]], "struct dnnl::convolution_backward_data": [[518, "struct-dnnl-convolution-backward-data"]], "struct dnnl::convolution_backward_weights": [[520, "struct-dnnl-convolution-backward-weights"]], "struct dnnl::convolution_backward_weights::primitive_desc": [[521, "struct-dnnl-convolution-backward-weights-primitive-desc"]], "struct dnnl::convolution_forward": [[522, "struct-dnnl-convolution-forward"]], "struct dnnl::convolution_forward::primitive_desc": [[523, "struct-dnnl-convolution-forward-primitive-desc"]], "struct dnnl::deconvolution_backward_data::primitive_desc": [[525, "struct-dnnl-deconvolution-backward-data-primitive-desc"]], "struct dnnl::deconvolution_backward_data": [[524, "struct-dnnl-deconvolution-backward-data"]], "struct dnnl::deconvolution_backward_weights::primitive_desc": [[527, "struct-dnnl-deconvolution-backward-weights-primitive-desc"]], "struct dnnl::deconvolution_backward_weights": [[526, "struct-dnnl-deconvolution-backward-weights"]], "struct dnnl::deconvolution_forward": [[528, "struct-dnnl-deconvolution-forward"]], "struct dnnl::deconvolution_forward::primitive_desc": [[529, "struct-dnnl-deconvolution-forward-primitive-desc"]], "struct dnnl::eltwise_backward::primitive_desc": [[531, "struct-dnnl-eltwise-backward-primitive-desc"]], "struct dnnl::eltwise_backward": [[530, "struct-dnnl-eltwise-backward"]], "struct dnnl::eltwise_forward::primitive_desc": [[533, "struct-dnnl-eltwise-forward-primitive-desc"]], "struct dnnl::eltwise_forward": [[532, "struct-dnnl-eltwise-forward"]], "struct dnnl::engine": [[535, "struct-dnnl-engine"]], "struct dnnl_engine": [[534, "struct-dnnl-engine"]], "struct dnnl::error": [[536, "struct-dnnl-error"]], "struct dnnl_exec_arg_t": [[537, "struct-dnnl-exec-arg-t"]], "Fields": [[537, "fields"], [538, "fields"], [539, "fields"], [620, "fields"], [630, "fields"]], "struct dnnl_graph_inplace_pair_t": [[538, "struct-dnnl-graph-inplace-pair-t"]], "struct dnnl_graph_logical_tensor_t": [[539, "struct-dnnl-graph-logical-tensor-t"]], "struct dnnl::group_normalization_backward::primitive_desc": [[541, "struct-dnnl-group-normalization-backward-primitive-desc"]], "struct dnnl::group_normalization_backward": [[540, "struct-dnnl-group-normalization-backward"]], "struct dnnl::group_normalization_forward": [[542, "struct-dnnl-group-normalization-forward"]], "struct dnnl::group_normalization_forward::primitive_desc": [[543, "struct-dnnl-group-normalization-forward-primitive-desc"]], "struct dnnl::gru_backward": [[544, "struct-dnnl-gru-backward"]], "struct dnnl::gru_backward::primitive_desc": [[545, "struct-dnnl-gru-backward-primitive-desc"]], "struct dnnl::gru_forward::primitive_desc": [[547, "struct-dnnl-gru-forward-primitive-desc"]], "struct dnnl::gru_forward": [[546, "struct-dnnl-gru-forward"]], "template struct dnnl::handle_traits": [[549, "template-struct-dnnl-handle-traits"]], "template struct dnnl::handle": [[548, "template-struct-dnnl-handle"]], "struct dnnl::inner_product_backward_data::primitive_desc": [[551, "struct-dnnl-inner-product-backward-data-primitive-desc"]], "struct dnnl::inner_product_backward_data": [[550, "struct-dnnl-inner-product-backward-data"]], "struct dnnl::inner_product_backward_weights::primitive_desc": [[553, "struct-dnnl-inner-product-backward-weights-primitive-desc"]], "struct dnnl::inner_product_backward_weights": [[552, "struct-dnnl-inner-product-backward-weights"]], "struct dnnl::inner_product_forward": [[554, "struct-dnnl-inner-product-forward"]], "struct dnnl::inner_product_forward::primitive_desc": [[555, "struct-dnnl-inner-product-forward-primitive-desc"]], "struct dnnl::layer_normalization_backward::primitive_desc": [[557, "struct-dnnl-layer-normalization-backward-primitive-desc"]], "struct dnnl::layer_normalization_backward": [[556, "struct-dnnl-layer-normalization-backward"]], "struct dnnl::layer_normalization_forward": [[558, "struct-dnnl-layer-normalization-forward"]], "struct dnnl::layer_normalization_forward::primitive_desc": [[559, "struct-dnnl-layer-normalization-forward-primitive-desc"]], "struct dnnl::lbr_augru_backward": [[560, "struct-dnnl-lbr-augru-backward"]], "struct dnnl::lbr_augru_backward::primitive_desc": [[561, "struct-dnnl-lbr-augru-backward-primitive-desc"]], "struct dnnl::lbr_augru_forward::primitive_desc": [[563, "struct-dnnl-lbr-augru-forward-primitive-desc"]], "struct dnnl::lbr_augru_forward": [[562, "struct-dnnl-lbr-augru-forward"]], "struct dnnl::lbr_gru_backward": [[564, "struct-dnnl-lbr-gru-backward"]], "struct dnnl::lbr_gru_backward::primitive_desc": [[565, "struct-dnnl-lbr-gru-backward-primitive-desc"]], "struct dnnl::lbr_gru_forward::primitive_desc": [[567, "struct-dnnl-lbr-gru-forward-primitive-desc"]], "struct dnnl::lbr_gru_forward": [[566, "struct-dnnl-lbr-gru-forward"]], "struct dnnl::lrn_backward::primitive_desc": [[569, "struct-dnnl-lrn-backward-primitive-desc"]], "struct dnnl::lrn_backward": [[568, "struct-dnnl-lrn-backward"]], "struct dnnl::lrn_forward": [[570, "struct-dnnl-lrn-forward"]], "struct dnnl::lrn_forward::primitive_desc": [[571, "struct-dnnl-lrn-forward-primitive-desc"]], "struct dnnl::lstm_backward::primitive_desc": [[573, "struct-dnnl-lstm-backward-primitive-desc"]], "struct dnnl::lstm_backward": [[572, "struct-dnnl-lstm-backward"]], "struct dnnl::lstm_forward::primitive_desc": [[575, "struct-dnnl-lstm-forward-primitive-desc"]], "struct dnnl::lstm_forward": [[574, "struct-dnnl-lstm-forward"]], "struct dnnl::matmul::primitive_desc": [[577, "struct-dnnl-matmul-primitive-desc"]], "struct dnnl::matmul": [[576, "struct-dnnl-matmul"]], "struct dnnl::memory": [[579, "struct-dnnl-memory"]], "struct dnnl_memory": [[578, "struct-dnnl-memory"]], "struct dnnl::memory::desc": [[581, "struct-dnnl-memory-desc"]], "struct dnnl_memory_desc": [[580, "struct-dnnl-memory-desc"]], "struct dnnl::pooling_backward": [[582, "struct-dnnl-pooling-backward"]], "struct dnnl::pooling_backward::primitive_desc": [[583, "struct-dnnl-pooling-backward-primitive-desc"]], "struct dnnl::pooling_forward::primitive_desc": [[585, "struct-dnnl-pooling-forward-primitive-desc"]], "struct dnnl::pooling_forward": [[584, "struct-dnnl-pooling-forward"]], "struct dnnl::post_ops": [[587, "struct-dnnl-post-ops"]], "struct dnnl_post_ops": [[586, "struct-dnnl-post-ops"]], "struct dnnl::prelu_backward": [[588, "struct-dnnl-prelu-backward"]], "struct dnnl::prelu_backward::primitive_desc": [[589, "struct-dnnl-prelu-backward-primitive-desc"]], "struct dnnl::prelu_forward": [[590, "struct-dnnl-prelu-forward"]], "struct dnnl::prelu_forward::primitive_desc": [[591, "struct-dnnl-prelu-forward-primitive-desc"]], "struct dnnl::primitive": [[593, "struct-dnnl-primitive"]], "struct dnnl_primitive": [[592, "struct-dnnl-primitive"]], "struct dnnl_primitive_attr": [[594, "struct-dnnl-primitive-attr"]], "struct dnnl::primitive_attr": [[595, "struct-dnnl-primitive-attr"]], "struct dnnl::primitive_desc": [[597, "struct-dnnl-primitive-desc"]], "struct dnnl_primitive_desc": [[596, "struct-dnnl-primitive-desc"]], "struct dnnl::reduction": [[599, "struct-dnnl-reduction"]], "struct dnnl::primitive_desc_base": [[598, "struct-dnnl-primitive-desc-base"]], "struct dnnl::reduction::primitive_desc": [[600, "struct-dnnl-reduction-primitive-desc"]], "struct dnnl::reorder": [[601, "struct-dnnl-reorder"]], "struct dnnl::reorder::primitive_desc": [[602, "struct-dnnl-reorder-primitive-desc"]], "struct dnnl::resampling_backward": [[603, "struct-dnnl-resampling-backward"]], "struct dnnl::resampling_forward": [[605, "struct-dnnl-resampling-forward"]], "struct dnnl::resampling_backward::primitive_desc": [[604, "struct-dnnl-resampling-backward-primitive-desc"]], "struct dnnl::resampling_forward::primitive_desc": [[606, "struct-dnnl-resampling-forward-primitive-desc"]], "struct dnnl::rnn_primitive_desc_base": [[607, "struct-dnnl-rnn-primitive-desc-base"]], "struct dnnl::shuffle_backward::primitive_desc": [[609, "struct-dnnl-shuffle-backward-primitive-desc"]], "struct dnnl::shuffle_backward": [[608, "struct-dnnl-shuffle-backward"]], "struct dnnl::shuffle_forward": [[610, "struct-dnnl-shuffle-forward"]], "struct dnnl::shuffle_forward::primitive_desc": [[611, "struct-dnnl-shuffle-forward-primitive-desc"]], "struct dnnl::softmax_backward": [[612, "struct-dnnl-softmax-backward"]], "struct dnnl::softmax_backward::primitive_desc": [[613, "struct-dnnl-softmax-backward-primitive-desc"]], "struct dnnl::softmax_forward": [[614, "struct-dnnl-softmax-forward"]], "struct dnnl::softmax_forward::primitive_desc": [[615, "struct-dnnl-softmax-forward-primitive-desc"]], "struct dnnl::stream": [[617, "struct-dnnl-stream"]], "struct dnnl_stream": [[616, "struct-dnnl-stream"]], "struct dnnl::sum": [[618, "struct-dnnl-sum"]], "struct dnnl::sum::primitive_desc": [[619, "struct-dnnl-sum-primitive-desc"]], "struct dnnl_transform": [[621, "struct-dnnl-transform"]], "struct dnnl::threadpool_interop::threadpool_iface": [[620, "struct-dnnl-threadpool-interop-threadpool-iface"]], "struct dnnl_ukernel_attr_params": [[622, "struct-dnnl-ukernel-attr-params"]], "struct dnnl::ukernel::attr_params": [[623, "struct-dnnl-ukernel-attr-params"]], "struct dnnl::ukernel::transform": [[625, "struct-dnnl-ukernel-transform"]], "struct dnnl::ukernel::brgemm": [[624, "struct-dnnl-ukernel-brgemm"]], "struct dnnl::vanilla_rnn_backward": [[626, "struct-dnnl-vanilla-rnn-backward"]], "struct dnnl::vanilla_rnn_backward::primitive_desc": [[627, "struct-dnnl-vanilla-rnn-backward-primitive-desc"]], "struct dnnl::vanilla_rnn_forward::primitive_desc": [[629, "struct-dnnl-vanilla-rnn-forward-primitive-desc"]], "struct dnnl::vanilla_rnn_forward": [[628, "struct-dnnl-vanilla-rnn-forward"]], "struct example_allows_unimplemented": [[631, "struct-example-allows-unimplemented"]], "struct dnnl_version_t": [[630, "struct-dnnl-version-t"]], "struct gqa_dims_t": [[633, "struct-gqa-dims-t"]], "struct gemm_dims_t": [[632, "struct-gemm-dims-t"]], "struct mqa_dims_t": [[635, "struct-mqa-dims-t"]], "struct mlp_dims_t": [[634, "struct-mlp-dims-t"]], "struct sycl_deletor_t": [[637, "struct-sycl-deletor-t"]], "struct sdpa_dims_t": [[636, "struct-sdpa-dims-t"]], "Supported Primitives": [[638, "supported-primitives"]]}, "indexentries": {"allocator": [[1, "index-1"], [1, "index-2"], [354, "index-0"]], "class": [[1, "index-0"], [2, "index-0"], [3, "index-0"], [4, "index-0"], [5, "index-0"], [6, "index-0"], [7, "index-0"], [8, "index-0"]], "dnnl::graph::allocator": [[1, "index-0"]], "function": [[1, "index-1"], [1, "index-2"], [2, "index-1"], [2, "index-2"], [2, "index-3"], [2, "index-4"], [2, "index-5"], [3, "index-1"], [3, "index-2"], [3, "index-3"], [3, "index-4"], [3, "index-5"], [3, "index-6"], [3, "index-7"], [3, "index-8"], [4, "index-10"], [4, "index-11"], [4, "index-12"], [4, "index-13"], [4, "index-14"], [4, "index-15"], [4, "index-16"], [4, "index-17"], [4, "index-18"], [4, "index-19"], [4, "index-20"], [4, "index-3"], [4, "index-4"], [4, "index-5"], [4, "index-6"], [4, "index-7"], [4, "index-8"], [4, "index-9"], [5, "index-1"], [5, "index-10"], [5, "index-11"], [5, "index-12"], [5, "index-2"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"], [6, "index-1"], [6, "index-10"], [6, "index-2"], [6, "index-3"], [6, "index-4"], [6, "index-5"], [6, "index-6"], [6, "index-7"], [6, "index-8"], [6, "index-9"], [7, "index-1"], [7, "index-2"], [7, "index-3"], [7, "index-4"], [7, "index-5"], [7, "index-6"], [7, "index-7"], [7, "index-8"], [304, "index-1"], [304, "index-2"], [304, "index-3"], [304, "index-4"], [304, "index-5"], [304, "index-6"], [304, "index-7"], [310, "index-1"], [311, "index-10"], [311, "index-11"], [311, "index-12"], [311, "index-13"], [311, "index-14"], [311, "index-15"], [311, "index-16"], [311, "index-17"], [311, "index-18"], [311, "index-19"], [311, "index-20"], [311, "index-21"], [311, "index-22"], [311, "index-23"], [311, "index-24"], [311, "index-25"], [311, "index-26"], [311, "index-27"], [311, "index-28"], [311, "index-29"], [311, "index-30"], [311, "index-31"], [311, "index-32"], [311, "index-33"], [311, "index-34"], [311, "index-35"], [311, "index-36"], [311, "index-37"], [311, "index-38"], [311, "index-39"], [311, "index-40"], [311, "index-41"], [311, "index-42"], [311, "index-43"], [311, "index-44"], [311, "index-45"], [311, "index-46"], [311, "index-47"], [311, "index-48"], [311, "index-49"], [311, "index-5"], [311, "index-50"], [311, "index-51"], [311, "index-52"], [311, "index-53"], [311, "index-54"], [311, "index-55"], [311, "index-56"], [311, "index-57"], [311, "index-58"], [311, "index-59"], [311, "index-6"], [311, "index-7"], [311, "index-8"], [311, "index-9"], [312, "index-1"], [312, "index-2"], [313, "index-1"], [313, "index-2"], [314, "index-1"], [314, "index-2"], [314, "index-3"], [314, "index-4"], [314, "index-5"], [314, "index-6"], [316, "index-1"], [317, "index-1"], [317, "index-2"], [317, "index-3"], [319, "index-1"], [319, "index-2"], [319, "index-3"], [320, "index-1"], [320, "index-2"], [321, "index-2"], [321, "index-3"], [321, "index-4"], [321, "index-5"], [321, "index-6"], [322, "index-1"], [322, "index-2"], [322, "index-3"], [323, "index-1"], [323, "index-2"], [324, "index-1"], [324, "index-2"], [324, "index-3"], [326, "index-1"], [326, "index-2"], [326, "index-3"], [326, "index-4"], [327, "index-1"], [327, "index-2"], [328, "index-1"], [329, "index-10"], [329, "index-11"], [329, "index-12"], [329, "index-13"], [329, "index-14"], [329, "index-15"], [329, "index-16"], [329, "index-17"], [329, "index-18"], [329, "index-19"], [329, "index-20"], [329, "index-21"], [329, "index-22"], [329, "index-23"], [329, "index-24"], [329, "index-25"], [329, "index-26"], [329, "index-27"], [329, "index-28"], [329, "index-29"], [329, "index-30"], [329, "index-31"], [329, "index-32"], [329, "index-33"], [329, "index-34"], [329, "index-35"], [329, "index-36"], [329, "index-37"], [329, "index-38"], [329, "index-39"], [329, "index-5"], [329, "index-6"], [329, "index-7"], [329, "index-8"], [329, "index-9"], [330, "index-1"], [330, "index-10"], [330, "index-11"], [330, "index-12"], [330, "index-13"], [330, "index-14"], [330, "index-2"], [330, "index-3"], [330, "index-4"], [330, "index-5"], [330, "index-6"], [330, "index-7"], [330, "index-8"], [330, "index-9"], [331, "index-1"], [331, "index-2"], [332, "index-1"], [332, "index-2"], [333, "index-1"], [333, "index-2"], [333, "index-3"], [333, "index-4"], [335, "index-10"], [335, "index-11"], [335, "index-12"], [335, "index-13"], [335, "index-14"], [335, "index-15"], [335, "index-16"], [335, "index-17"], [335, "index-18"], [335, "index-19"], [335, "index-20"], [335, "index-5"], [335, "index-6"], [335, "index-7"], [335, "index-8"], [335, "index-9"], [336, "index-1"], [336, "index-2"], [336, "index-3"], [336, "index-4"], [337, "index-1"], [338, "index-1"], [339, "index-1"], [339, "index-2"], [340, "index-1"], [340, "index-10"], [340, "index-11"], [340, "index-12"], [340, "index-13"], [340, "index-14"], [340, "index-2"], [340, "index-3"], [340, "index-4"], [340, "index-5"], [340, "index-6"], [340, "index-7"], [340, "index-8"], [340, "index-9"], [341, "index-10"], [341, "index-11"], [341, "index-12"], [341, "index-13"], [341, "index-14"], [341, "index-15"], [341, "index-16"], [341, "index-17"], [341, "index-18"], [341, "index-19"], [341, "index-2"], [341, "index-20"], [341, "index-21"], [341, "index-3"], [341, "index-4"], [341, "index-5"], [341, "index-6"], [341, "index-7"], [341, "index-8"], [341, "index-9"], [342, "index-1"], [342, "index-2"], [343, "index-1"], [343, "index-2"], [344, "index-3"], [344, "index-4"], [344, "index-5"], [344, "index-6"], [345, "index-1"], [346, "index-1"], [346, "index-10"], [346, "index-2"], [346, "index-3"], [346, "index-4"], [346, "index-5"], [346, "index-6"], [346, "index-7"], [346, "index-8"], [346, "index-9"], [347, "index-1"], [347, "index-2"], [347, "index-3"], [347, "index-4"], [347, "index-5"], [347, "index-6"], [347, "index-7"], [348, "index-3"], [348, "index-4"], [348, "index-5"], [348, "index-6"], [348, "index-7"], [348, "index-8"], [349, "index-10"], [349, "index-11"], [349, "index-12"], [349, "index-13"], [349, "index-14"], [349, "index-15"], [349, "index-16"], [349, "index-17"], [349, "index-18"], [349, "index-3"], [349, "index-4"], [349, "index-5"], [349, "index-6"], [349, "index-7"], [349, "index-8"], [349, "index-9"], [350, "index-3"], [350, "index-4"], [350, "index-5"], [350, "index-6"], [354, "index-5"], [354, "index-6"], [355, "index-3"], [355, "index-4"], [355, "index-5"], [355, "index-6"], [355, "index-7"], [356, "index-1"], [356, "index-2"], [356, "index-3"], [356, "index-4"], [357, "index-1"], [357, "index-2"], [357, "index-3"], [357, "index-4"], [357, "index-5"], [357, "index-6"], [357, "index-7"], [357, "index-8"], [358, "index-1"], [358, "index-2"], [359, "index-1"], [359, "index-2"], [360, "index-10"], [360, "index-11"], [360, "index-12"], [360, "index-13"], [360, "index-3"], [360, "index-4"], [360, "index-5"], [360, "index-6"], [360, "index-7"], [360, "index-8"], [360, "index-9"], [362, "index-1"], [362, "index-2"], [362, "index-3"], [362, "index-4"], [362, "index-5"], [363, "index-3"], [363, "index-4"], [363, "index-5"], [363, "index-6"], [364, "index-10"], [364, "index-11"], [364, "index-12"], [364, "index-3"], [364, "index-4"], [364, "index-5"], [364, "index-6"], [364, "index-7"], [364, "index-8"], [364, "index-9"], [365, "index-10"], [365, "index-11"], [365, "index-12"], [365, "index-13"], [365, "index-14"], [365, "index-3"], [365, "index-4"], [365, "index-5"], [365, "index-6"], [365, "index-7"], [365, "index-8"], [365, "index-9"], [367, "index-3"], [367, "index-4"], [367, "index-5"], [368, "index-3"], [368, "index-4"], [368, "index-5"], [368, "index-6"], [368, "index-7"], [368, "index-8"], [368, "index-9"], [374, "index-1"], [374, "index-2"], [374, "index-3"], [374, "index-4"], [375, "index-1"], [375, "index-2"], [376, "index-1"], [376, "index-10"], [376, "index-11"], [376, "index-12"], [376, "index-13"], [376, "index-14"], [376, "index-15"], [376, "index-16"], [376, "index-17"], [376, "index-2"], [376, "index-3"], [376, "index-4"], [376, "index-5"], [376, "index-6"], [376, "index-7"], [376, "index-8"], [376, "index-9"], [377, "index-1"], [377, "index-10"], [377, "index-11"], [377, "index-12"], [377, "index-13"], [377, "index-2"], [377, "index-3"], [377, "index-4"], [377, "index-5"], [377, "index-6"], [377, "index-7"], [377, "index-8"], [377, "index-9"], [378, "index-1"], [378, "index-2"], [378, "index-3"], [378, "index-4"], [378, "index-5"], [505, "index-1"], [505, "index-2"], [505, "index-3"], [506, "index-1"], [506, "index-10"], [506, "index-11"], [506, "index-12"], [506, "index-13"], [506, "index-14"], [506, "index-15"], [506, "index-16"], [506, "index-17"], [506, "index-18"], [506, "index-19"], [506, "index-2"], [506, "index-20"], [506, "index-21"], [506, "index-22"], [506, "index-23"], [506, "index-3"], [506, "index-4"], [506, "index-5"], [506, "index-6"], [506, "index-7"], [506, "index-8"], [506, "index-9"], [507, "index-1"], [507, "index-2"], [507, "index-3"], [508, "index-1"], [508, "index-10"], [508, "index-11"], [508, "index-12"], [508, "index-13"], [508, "index-14"], [508, "index-15"], [508, "index-2"], [508, "index-3"], [508, "index-4"], [508, "index-5"], [508, "index-6"], [508, "index-7"], [508, "index-8"], [508, "index-9"], [509, "index-1"], [509, "index-2"], [509, "index-3"], [510, "index-1"], [510, "index-10"], [510, "index-11"], [510, "index-12"], [510, "index-13"], [510, "index-14"], [510, "index-15"], [510, "index-2"], [510, "index-3"], [510, "index-4"], [510, "index-5"], [510, "index-6"], [510, "index-7"], [510, "index-8"], [510, "index-9"], [511, "index-1"], [511, "index-2"], [511, "index-3"], [512, "index-1"], [512, "index-10"], [512, "index-11"], [512, "index-12"], [512, "index-2"], [512, "index-3"], [512, "index-4"], [512, "index-5"], [512, "index-6"], [512, "index-7"], [512, "index-8"], [512, "index-9"], [513, "index-1"], [513, "index-2"], [513, "index-3"], [514, "index-1"], [514, "index-10"], [514, "index-2"], [514, "index-3"], [514, "index-4"], [514, "index-5"], [514, "index-6"], [514, "index-7"], [514, "index-8"], [514, "index-9"], [516, "index-1"], [516, "index-2"], [516, "index-3"], [517, "index-1"], [517, "index-10"], [517, "index-2"], [517, "index-3"], [517, "index-4"], [517, "index-5"], [517, "index-6"], [517, "index-7"], [517, "index-8"], [517, "index-9"], [518, "index-1"], [518, "index-2"], [518, "index-3"], [519, "index-1"], [519, "index-10"], [519, "index-11"], [519, "index-12"], [519, "index-13"], [519, "index-2"], [519, "index-3"], [519, "index-4"], [519, "index-5"], [519, "index-6"], [519, "index-7"], [519, "index-8"], [519, "index-9"], [520, "index-1"], [520, "index-2"], [520, "index-3"], [521, "index-1"], [521, "index-10"], [521, "index-11"], [521, "index-12"], [521, "index-13"], [521, "index-14"], [521, "index-15"], [521, "index-16"], [521, "index-2"], [521, "index-3"], [521, "index-4"], [521, "index-5"], [521, "index-6"], [521, "index-7"], [521, "index-8"], [521, "index-9"], [522, "index-1"], [522, "index-2"], [522, "index-3"], [523, "index-1"], [523, "index-10"], [523, "index-11"], [523, "index-12"], [523, "index-13"], [523, "index-14"], [523, "index-15"], [523, "index-16"], [523, "index-2"], [523, "index-3"], [523, "index-4"], [523, "index-5"], [523, "index-6"], [523, "index-7"], [523, "index-8"], [523, "index-9"], [524, "index-1"], [524, "index-2"], [524, "index-3"], [525, "index-1"], [525, "index-10"], [525, "index-11"], [525, "index-12"], [525, "index-13"], [525, "index-2"], [525, "index-3"], [525, "index-4"], [525, "index-5"], [525, "index-6"], [525, "index-7"], [525, "index-8"], [525, "index-9"], [526, "index-1"], [526, "index-2"], [526, "index-3"], [527, "index-1"], [527, "index-10"], [527, "index-11"], [527, "index-12"], [527, "index-13"], [527, "index-14"], [527, "index-15"], [527, "index-16"], [527, "index-2"], [527, "index-3"], [527, "index-4"], [527, "index-5"], [527, "index-6"], [527, "index-7"], [527, "index-8"], [527, "index-9"], [528, "index-1"], [528, "index-2"], [528, "index-3"], [529, "index-1"], [529, "index-10"], [529, "index-11"], [529, "index-12"], [529, "index-13"], [529, "index-14"], [529, "index-15"], [529, "index-16"], [529, "index-2"], [529, "index-3"], [529, "index-4"], [529, "index-5"], [529, "index-6"], [529, "index-7"], [529, "index-8"], [529, "index-9"], [530, "index-1"], [530, "index-2"], [530, "index-3"], [531, "index-1"], [531, "index-10"], [531, "index-11"], [531, "index-12"], [531, "index-2"], [531, "index-3"], [531, "index-4"], [531, "index-5"], [531, "index-6"], [531, "index-7"], [531, "index-8"], [531, "index-9"], [532, "index-1"], [532, "index-2"], [532, "index-3"], [533, "index-1"], [533, "index-10"], [533, "index-11"], [533, "index-2"], [533, "index-3"], [533, "index-4"], [533, "index-5"], [533, "index-6"], [533, "index-7"], [533, "index-8"], [533, "index-9"], [535, "index-1"], [535, "index-2"], [535, "index-3"], [535, "index-4"], [535, "index-5"], [535, "index-6"], [535, "index-7"], [535, "index-8"], [536, "index-1"], [536, "index-2"], [536, "index-3"], [540, "index-1"], [540, "index-2"], [540, "index-3"], [541, "index-1"], [541, "index-10"], [541, "index-11"], [541, "index-12"], [541, "index-13"], [541, "index-14"], [541, "index-15"], [541, "index-16"], [541, "index-2"], [541, "index-3"], [541, "index-4"], [541, "index-5"], [541, "index-6"], [541, "index-7"], [541, "index-8"], [541, "index-9"], [542, "index-1"], [542, "index-2"], [542, "index-3"], [543, "index-1"], [543, "index-10"], [543, "index-11"], [543, "index-12"], [543, "index-13"], [543, "index-2"], [543, "index-3"], [543, "index-4"], [543, "index-5"], [543, "index-6"], [543, "index-7"], [543, "index-8"], [543, "index-9"], [544, "index-1"], [544, "index-2"], [544, "index-3"], [545, "index-1"], [545, "index-10"], [545, "index-11"], [545, "index-12"], [545, "index-13"], [545, "index-14"], [545, "index-15"], [545, "index-16"], [545, "index-17"], [545, "index-18"], [545, "index-19"], [545, "index-2"], [545, "index-20"], [545, "index-21"], [545, "index-3"], [545, "index-4"], [545, "index-5"], [545, "index-6"], [545, "index-7"], [545, "index-8"], [545, "index-9"], [546, "index-1"], [546, "index-2"], [546, "index-3"], [547, "index-1"], [547, "index-10"], [547, "index-11"], [547, "index-12"], [547, "index-13"], [547, "index-14"], [547, "index-2"], [547, "index-3"], [547, "index-4"], [547, "index-5"], [547, "index-6"], [547, "index-7"], [547, "index-8"], [547, "index-9"], [548, "index-1"], [548, "index-10"], [548, "index-11"], [548, "index-12"], [548, "index-2"], [548, "index-3"], [548, "index-4"], [548, "index-5"], [548, "index-6"], [548, "index-7"], [548, "index-8"], [548, "index-9"], [550, "index-1"], [550, "index-2"], [550, "index-3"], [551, "index-1"], [551, "index-2"], [551, "index-3"], [551, "index-4"], [551, "index-5"], [551, "index-6"], [551, "index-7"], [552, "index-1"], [552, "index-2"], [552, "index-3"], [553, "index-1"], [553, "index-2"], [553, "index-3"], [553, "index-4"], [553, "index-5"], [553, "index-6"], [553, "index-7"], [553, "index-8"], [553, "index-9"], [554, "index-1"], [554, "index-2"], [554, "index-3"], [555, "index-1"], [555, "index-2"], [555, "index-3"], [555, "index-4"], [555, "index-5"], [555, "index-6"], [555, "index-7"], [555, "index-8"], [555, "index-9"], [556, "index-1"], [556, "index-2"], [556, "index-3"], [557, "index-1"], [557, "index-10"], [557, "index-11"], [557, "index-12"], [557, "index-13"], [557, "index-14"], [557, "index-15"], [557, "index-16"], [557, "index-17"], [557, "index-18"], [557, "index-2"], [557, "index-3"], [557, "index-4"], [557, "index-5"], [557, "index-6"], [557, "index-7"], [557, "index-8"], [557, "index-9"], [558, "index-1"], [558, "index-2"], [558, "index-3"], [559, "index-1"], [559, "index-10"], [559, "index-11"], [559, "index-12"], [559, "index-13"], [559, "index-14"], [559, "index-15"], [559, "index-2"], [559, "index-3"], [559, "index-4"], [559, "index-5"], [559, "index-6"], [559, "index-7"], [559, "index-8"], [559, "index-9"], [560, "index-1"], [560, "index-2"], [560, "index-3"], [561, "index-1"], [561, "index-10"], [561, "index-11"], [561, "index-12"], [561, "index-13"], [561, "index-14"], [561, "index-15"], [561, "index-16"], [561, "index-17"], [561, "index-18"], [561, "index-19"], [561, "index-2"], [561, "index-20"], [561, "index-21"], [561, "index-22"], [561, "index-23"], [561, "index-3"], [561, "index-4"], [561, "index-5"], [561, "index-6"], [561, "index-7"], [561, "index-8"], [561, "index-9"], [562, "index-1"], [562, "index-2"], [562, "index-3"], [563, "index-1"], [563, "index-10"], [563, "index-11"], [563, "index-12"], [563, "index-13"], [563, "index-14"], [563, "index-15"], [563, "index-2"], [563, "index-3"], [563, "index-4"], [563, "index-5"], [563, "index-6"], [563, "index-7"], [563, "index-8"], [563, "index-9"], [564, "index-1"], [564, "index-2"], [564, "index-3"], [565, "index-1"], [565, "index-10"], [565, "index-11"], [565, "index-12"], [565, "index-13"], [565, "index-14"], [565, "index-15"], [565, "index-16"], [565, "index-17"], [565, "index-18"], [565, "index-19"], [565, "index-2"], [565, "index-20"], [565, "index-21"], [565, "index-3"], [565, "index-4"], [565, "index-5"], [565, "index-6"], [565, "index-7"], [565, "index-8"], [565, "index-9"], [566, "index-1"], [566, "index-2"], [566, "index-3"], [567, "index-1"], [567, "index-10"], [567, "index-11"], [567, "index-12"], [567, "index-13"], [567, "index-14"], [567, "index-2"], [567, "index-3"], [567, "index-4"], [567, "index-5"], [567, "index-6"], [567, "index-7"], [567, "index-8"], [567, "index-9"], [568, "index-1"], [568, "index-2"], [568, "index-3"], [569, "index-1"], [569, "index-10"], [569, "index-11"], [569, "index-12"], [569, "index-2"], [569, "index-3"], [569, "index-4"], [569, "index-5"], [569, "index-6"], [569, "index-7"], [569, "index-8"], [569, "index-9"], [570, "index-1"], [570, "index-2"], [570, "index-3"], [571, "index-1"], [571, "index-10"], [571, "index-11"], [571, "index-12"], [571, "index-2"], [571, "index-3"], [571, "index-4"], [571, "index-5"], [571, "index-6"], [571, "index-7"], [571, "index-8"], [571, "index-9"], [572, "index-1"], [572, "index-2"], [572, "index-3"], [573, "index-1"], [573, "index-10"], [573, "index-11"], [573, "index-12"], [573, "index-13"], [573, "index-14"], [573, "index-15"], [573, "index-16"], [573, "index-17"], [573, "index-18"], [573, "index-19"], [573, "index-2"], [573, "index-20"], [573, "index-21"], [573, "index-22"], [573, "index-23"], [573, "index-24"], [573, "index-25"], [573, "index-26"], [573, "index-27"], [573, "index-28"], [573, "index-29"], [573, "index-3"], [573, "index-30"], [573, "index-31"], [573, "index-4"], [573, "index-5"], [573, "index-6"], [573, "index-7"], [573, "index-8"], [573, "index-9"], [574, "index-1"], [574, "index-2"], [574, "index-3"], [575, "index-1"], [575, "index-10"], [575, "index-11"], [575, "index-12"], [575, "index-13"], [575, "index-14"], [575, "index-15"], [575, "index-16"], [575, "index-17"], [575, "index-18"], [575, "index-19"], [575, "index-2"], [575, "index-20"], [575, "index-3"], [575, "index-4"], [575, "index-5"], [575, "index-6"], [575, "index-7"], [575, "index-8"], [575, "index-9"], [576, "index-1"], [576, "index-2"], [576, "index-3"], [577, "index-1"], [577, "index-2"], [577, "index-3"], [577, "index-4"], [577, "index-5"], [577, "index-6"], [577, "index-7"], [577, "index-8"], [579, "index-10"], [579, "index-11"], [579, "index-12"], [579, "index-13"], [579, "index-14"], [579, "index-15"], [579, "index-16"], [579, "index-17"], [579, "index-18"], [579, "index-19"], [579, "index-20"], [579, "index-21"], [579, "index-3"], [579, "index-4"], [579, "index-5"], [579, "index-6"], [579, "index-7"], [579, "index-8"], [579, "index-9"], [581, "index-1"], [581, "index-10"], [581, "index-11"], [581, "index-12"], [581, "index-13"], [581, "index-14"], [581, "index-15"], [581, "index-16"], [581, "index-17"], [581, "index-18"], [581, "index-19"], [581, "index-2"], [581, "index-20"], [581, "index-21"], [581, "index-22"], [581, "index-23"], [581, "index-24"], [581, "index-25"], [581, "index-26"], [581, "index-27"], [581, "index-28"], [581, "index-29"], [581, "index-3"], [581, "index-30"], [581, "index-31"], [581, "index-4"], [581, "index-5"], [581, "index-6"], [581, "index-7"], [581, "index-8"], [581, "index-9"], [582, "index-1"], [582, "index-2"], [582, "index-3"], [583, "index-1"], [583, "index-10"], [583, "index-11"], [583, "index-12"], [583, "index-13"], [583, "index-2"], [583, "index-3"], [583, "index-4"], [583, "index-5"], [583, "index-6"], [583, "index-7"], [583, "index-8"], [583, "index-9"], [584, "index-1"], [584, "index-2"], [584, "index-3"], [585, "index-1"], [585, "index-10"], [585, "index-11"], [585, "index-12"], [585, "index-13"], [585, "index-2"], [585, "index-3"], [585, "index-4"], [585, "index-5"], [585, "index-6"], [585, "index-7"], [585, "index-8"], [585, "index-9"], [587, "index-1"], [587, "index-10"], [587, "index-11"], [587, "index-12"], [587, "index-13"], [587, "index-14"], [587, "index-15"], [587, "index-16"], [587, "index-17"], [587, "index-18"], [587, "index-2"], [587, "index-3"], [587, "index-4"], [587, "index-5"], [587, "index-6"], [587, "index-7"], [587, "index-8"], [587, "index-9"], [588, "index-1"], [588, "index-2"], [588, "index-3"], [589, "index-1"], [589, "index-2"], [589, "index-3"], [589, "index-4"], [589, "index-5"], [589, "index-6"], [589, "index-7"], [590, "index-1"], [590, "index-2"], [590, "index-3"], [591, "index-1"], [591, "index-2"], [591, "index-3"], [591, "index-4"], [591, "index-5"], [591, "index-6"], [593, "index-1"], [593, "index-10"], [593, "index-11"], [593, "index-12"], [593, "index-13"], [593, "index-2"], [593, "index-3"], [593, "index-4"], [593, "index-5"], [593, "index-6"], [593, "index-7"], [593, "index-8"], [593, "index-9"], [595, "index-1"], [595, "index-10"], [595, "index-11"], [595, "index-12"], [595, "index-13"], [595, "index-14"], [595, "index-15"], [595, "index-16"], [595, "index-17"], [595, "index-18"], [595, "index-19"], [595, "index-2"], [595, "index-20"], [595, "index-21"], [595, "index-22"], [595, "index-23"], [595, "index-24"], [595, "index-25"], [595, "index-26"], [595, "index-27"], [595, "index-28"], [595, "index-29"], [595, "index-3"], [595, "index-30"], [595, "index-4"], [595, "index-5"], [595, "index-6"], [595, "index-7"], [595, "index-8"], [595, "index-9"], [597, "index-1"], [597, "index-2"], [597, "index-3"], [597, "index-4"], [597, "index-5"], [598, "index-1"], [598, "index-10"], [598, "index-11"], [598, "index-12"], [598, "index-13"], [598, "index-14"], [598, "index-15"], [598, "index-16"], [598, "index-17"], [598, "index-18"], [598, "index-19"], [598, "index-2"], [598, "index-20"], [598, "index-21"], [598, "index-22"], [598, "index-23"], [598, "index-24"], [598, "index-25"], [598, "index-26"], [598, "index-27"], [598, "index-28"], [598, "index-29"], [598, "index-3"], [598, "index-30"], [598, "index-31"], [598, "index-32"], [598, "index-33"], [598, "index-34"], [598, "index-35"], [598, "index-36"], [598, "index-37"], [598, "index-38"], [598, "index-39"], [598, "index-4"], [598, "index-40"], [598, "index-41"], [598, "index-42"], [598, "index-43"], [598, "index-44"], [598, "index-45"], [598, "index-46"], [598, "index-47"], [598, "index-48"], [598, "index-49"], [598, "index-5"], [598, "index-50"], [598, "index-51"], [598, "index-52"], [598, "index-6"], [598, "index-7"], [598, "index-8"], [598, "index-9"], [599, "index-1"], [599, "index-2"], [599, "index-3"], [600, "index-1"], [600, "index-2"], [600, "index-3"], [600, "index-4"], [600, "index-5"], [600, "index-6"], [600, "index-7"], [600, "index-8"], [601, "index-1"], [601, "index-2"], [601, "index-3"], [601, "index-4"], [601, "index-5"], [601, "index-6"], [602, "index-1"], [602, "index-10"], [602, "index-11"], [602, "index-12"], [602, "index-2"], [602, "index-3"], [602, "index-4"], [602, "index-5"], [602, "index-6"], [602, "index-7"], [602, "index-8"], [602, "index-9"], [603, "index-1"], [603, "index-2"], [603, "index-3"], [604, "index-1"], [604, "index-2"], [604, "index-3"], [604, "index-4"], [604, "index-5"], [604, "index-6"], [605, "index-1"], [605, "index-2"], [605, "index-3"], [606, "index-1"], [606, "index-2"], [606, "index-3"], [606, "index-4"], [606, "index-5"], [606, "index-6"], [606, "index-7"], [607, "index-1"], [607, "index-10"], [607, "index-11"], [607, "index-12"], [607, "index-13"], [607, "index-14"], [607, "index-15"], [607, "index-16"], [607, "index-17"], [607, "index-18"], [607, "index-19"], [607, "index-2"], [607, "index-20"], [607, "index-21"], [607, "index-22"], [607, "index-23"], [607, "index-24"], [607, "index-25"], [607, "index-26"], [607, "index-3"], [607, "index-4"], [607, "index-5"], [607, "index-6"], [607, "index-7"], [607, "index-8"], [607, "index-9"], [608, "index-1"], [608, "index-2"], [608, "index-3"], [609, "index-1"], [609, "index-2"], [609, "index-3"], [609, "index-4"], [609, "index-5"], [609, "index-6"], [609, "index-7"], [609, "index-8"], [610, "index-1"], [610, "index-2"], [610, "index-3"], [611, "index-1"], [611, "index-2"], [611, "index-3"], [611, "index-4"], [611, "index-5"], [611, "index-6"], [611, "index-7"], [611, "index-8"], [612, "index-1"], [612, "index-2"], [612, "index-3"], [613, "index-1"], [613, "index-2"], [613, "index-3"], [613, "index-4"], [613, "index-5"], [613, "index-6"], [613, "index-7"], [613, "index-8"], [613, "index-9"], [614, "index-1"], [614, "index-2"], [614, "index-3"], [615, "index-1"], [615, "index-2"], [615, "index-3"], [615, "index-4"], [615, "index-5"], [615, "index-6"], [615, "index-7"], [615, "index-8"], [617, "index-1"], [617, "index-2"], [617, "index-3"], [617, "index-4"], [617, "index-5"], [617, "index-6"], [617, "index-7"], [617, "index-8"], [618, "index-1"], [618, "index-2"], [618, "index-3"], [619, "index-1"], [619, "index-10"], [619, "index-2"], [619, "index-3"], [619, "index-4"], [619, "index-5"], [619, "index-6"], [619, "index-7"], [619, "index-8"], [619, "index-9"], [620, "index-2"], [620, "index-3"], [620, "index-4"], [620, "index-5"], [623, "index-1"], [623, "index-2"], [623, "index-3"], [623, "index-4"], [624, "index-1"], [624, "index-10"], [624, "index-11"], [624, "index-12"], [624, "index-13"], [624, "index-14"], [624, "index-15"], [624, "index-16"], [624, "index-17"], [624, "index-18"], [624, "index-2"], [624, "index-3"], [624, "index-4"], [624, "index-5"], [624, "index-6"], [624, "index-7"], [624, "index-8"], [624, "index-9"], [625, "index-1"], [625, "index-2"], [625, "index-3"], [625, "index-4"], [626, "index-1"], [626, "index-2"], [626, "index-3"], [627, "index-1"], [627, "index-10"], [627, "index-11"], [627, "index-12"], [627, "index-13"], [627, "index-14"], [627, "index-15"], [627, "index-16"], [627, "index-17"], [627, "index-18"], [627, "index-19"], [627, "index-2"], [627, "index-20"], [627, "index-21"], [627, "index-22"], [627, "index-23"], [627, "index-24"], [627, "index-25"], [627, "index-3"], [627, "index-4"], [627, "index-5"], [627, "index-6"], [627, "index-7"], [627, "index-8"], [627, "index-9"], [628, "index-1"], [628, "index-2"], [628, "index-3"], [629, "index-1"], [629, "index-10"], [629, "index-11"], [629, "index-12"], [629, "index-13"], [629, "index-14"], [629, "index-15"], [629, "index-16"], [629, "index-17"], [629, "index-18"], [629, "index-2"], [629, "index-3"], [629, "index-4"], [629, "index-5"], [629, "index-6"], [629, "index-7"], [629, "index-8"], [629, "index-9"]], "compiled_partition": [[2, "index-1"], [2, "index-2"]], "dnnl::graph::compiled_partition": [[2, "index-0"]], "execute": [[2, "index-5"], [374, "index-4"], [375, "index-2"], [376, "index-17"], [377, "index-13"], [593, "index-9"], [601, "index-5"], [601, "index-6"], [624, "index-13"], [624, "index-14"], [625, "index-4"]], "get_inplace_ports": [[2, "index-4"]], "query_logical_tensor": [[2, "index-3"]], "add_op": [[3, "index-5"]], "dnnl::graph::graph": [[3, "index-0"]], "finalize": [[3, "index-6"], [624, "index-8"]], "get_fpmath_mode": [[3, "index-4"], [595, "index-5"], [595, "index-6"]], "get_partitions": [[3, "index-8"]], "graph": [[3, "index-1"], [3, "index-2"], [360, "index-0"]], "is_finalized": [[3, "index-7"]], "set_fpmath_mode": [[3, "index-3"], [595, "index-7"]], "dim": [[4, "index-1"], [579, "index-1"]], "dims": [[4, "index-2"], [228, "index-44"], [539, "index-3"], [579, "index-2"]], "dnnl::graph::logical_tensor": [[4, "index-0"]], "get_data_type": [[4, "index-14"], [581, "index-20"]], "get_dims": [[4, "index-12"], [581, "index-22"]], "get_id": [[4, "index-13"], [6, "index-5"]], "get_layout_id": [[4, "index-17"]], "get_layout_type": [[4, "index-16"]], "get_mem_size": [[4, "index-19"]], "get_property_type": [[4, "index-15"]], "get_strides": [[4, "index-18"], [519, "index-10"], [521, "index-13"], [523, "index-13"], [525, "index-10"], [527, "index-13"], [529, "index-13"], [581, "index-13"], [583, "index-9"], [585, "index-9"], [598, "index-8"]], "is_equal": [[4, "index-20"]], "logical_tensor": [[4, "index-10"], [4, "index-3"], [4, "index-4"], [4, "index-5"], [4, "index-6"], [4, "index-7"], [4, "index-8"], [4, "index-9"]], "operator=": [[4, "index-11"], [548, "index-5"], [548, "index-6"]], "typedef": [[4, "index-1"], [4, "index-2"], [311, "index-1"], [311, "index-2"], [311, "index-3"], [311, "index-4"], [318, "index-1"], [318, "index-2"], [321, "index-1"], [329, "index-1"], [329, "index-2"], [329, "index-3"], [329, "index-4"], [335, "index-1"], [335, "index-2"], [335, "index-3"], [335, "index-4"], [341, "index-1"], [344, "index-1"], [344, "index-2"], [348, "index-1"], [348, "index-2"], [349, "index-1"], [349, "index-2"], [350, "index-1"], [350, "index-2"], [354, "index-1"], [354, "index-2"], [354, "index-3"], [354, "index-4"], [355, "index-1"], [355, "index-2"], [360, "index-1"], [360, "index-2"], [363, "index-1"], [363, "index-2"], [364, "index-1"], [364, "index-2"], [365, "index-1"], [365, "index-2"], [367, "index-1"], [367, "index-2"], [368, "index-1"], [368, "index-2"], [579, "index-1"], [579, "index-2"]], "add_input": [[5, "index-3"]], "add_inputs": [[5, "index-4"]], "add_output": [[5, "index-5"]], "add_outputs": [[5, "index-6"]], "dnnl::graph::op": [[5, "index-0"]], "op": [[5, "index-1"], [5, "index-2"], [364, "index-0"]], "set_attr": [[5, "index-10"], [5, "index-11"], [5, "index-12"], [5, "index-7"], [5, "index-8"], [5, "index-9"]], "compile": [[6, "index-6"]], "dnnl::graph::partition": [[6, "index-0"]], "get_engine_kind": [[6, "index-10"]], "get_input_ports": [[6, "index-8"]], "get_ops": [[6, "index-4"]], "get_ops_num": [[6, "index-3"]], "get_output_ports": [[6, "index-9"]], "is_supported": [[6, "index-7"]], "partition": [[6, "index-1"], [6, "index-2"], [365, "index-0"]], "dnnl::graph::tensor": [[7, "index-0"]], "get_data_handle": [[7, "index-4"], [579, "index-12"]], "get_engine": [[7, "index-6"], [579, "index-11"], [598, "index-5"], [617, "index-3"]], "get_logical_tensor": [[7, "index-7"]], "make_scalar_tensor": [[7, "index-8"]], "set_data_handle": [[7, "index-5"], [579, "index-13"]], "tensor": [[7, "index-1"], [7, "index-2"], [7, "index-3"], [368, "index-0"]], "simple_memory_pool_t": [[8, "index-0"]], "primitive attributes": [[9, "index-0"]], "page": [[9, "index-0"], [10, "index-0"], [11, "index-0"], [12, "index-0"], [13, "index-0"], [14, "index-0"], [15, "index-0"], [16, "index-0"], [17, "index-0"], [18, "index-0"], [19, "index-0"], [20, "index-0"], [21, "index-0"], [22, "index-0"], [23, "index-0"], [24, "index-0"], [25, "index-0"], [26, "index-0"], [27, "index-0"], [28, "index-0"], [29, "index-0"], [30, "index-0"], [31, "index-0"], [32, "index-0"], [33, "index-0"], [34, "index-0"], [35, "index-0"], [36, "index-0"], [37, "index-0"], [38, "index-0"], [39, "index-0"], [40, "index-0"], [41, "index-0"], [42, "index-0"], [43, "index-0"], [44, "index-0"], [45, "index-0"], [46, "index-0"], [47, "index-0"], [48, "index-0"], [49, "index-0"], [50, "index-0"], [51, "index-0"], [52, "index-0"], [53, "index-0"], [54, "index-0"], [55, "index-0"], [56, "index-0"], [57, "index-0"], [58, "index-0"], [59, "index-0"], [60, "index-0"], [61, "index-0"], [62, "index-0"], [63, "index-0"], [64, "index-0"], [65, "index-0"], [66, "index-0"], [67, "index-0"], [68, "index-0"], [69, "index-0"], [70, "index-0"], [71, "index-0"], [72, "index-0"], [73, "index-0"], [74, "index-0"], [75, "index-0"], [76, "index-0"], [77, "index-0"], [78, "index-0"], [79, "index-0"], [80, "index-0"], [81, "index-0"], [82, "index-0"], [83, "index-0"], [84, "index-0"], [85, "index-0"], [86, "index-0"], [87, "index-0"], [88, "index-0"], [89, "index-0"], [90, "index-0"], [91, "index-0"], [92, "index-0"], [93, "index-0"], [94, "index-0"], [95, "index-0"], [96, "index-0"], [97, "index-0"], [98, "index-0"], [99, "index-0"], [100, "index-0"], [101, "index-0"], [102, "index-0"], [103, "index-0"], [104, "index-0"], [105, "index-0"], [106, "index-0"], [107, "index-0"], [108, "index-0"], [109, "index-0"], [110, "index-0"], [111, "index-0"], [112, "index-0"], [113, "index-0"], [114, "index-0"], [115, "index-0"], [116, "index-0"], [117, "index-0"], [118, "index-0"], [119, "index-0"], [120, "index-0"], [121, "index-0"], [122, "index-0"], [123, "index-0"], [124, "index-0"], [125, "index-0"], [126, "index-0"], [127, "index-0"], [128, "index-0"], [129, "index-0"], [130, "index-0"], [131, "index-0"], [132, "index-0"], [133, "index-0"], [134, "index-0"], [135, "index-0"], [136, "index-0"], [137, "index-0"], [138, "index-0"], [139, "index-0"], [140, "index-0"], [141, "index-0"], [142, "index-0"], [143, "index-0"], [144, "index-0"], [145, "index-0"], [146, "index-0"], [147, "index-0"], [148, "index-0"], [149, "index-0"], [150, "index-0"], [151, "index-0"], [152, "index-0"], [153, "index-0"], [154, "index-0"], [155, "index-0"], [156, "index-0"], [157, "index-0"], [158, "index-0"], [159, "index-0"], [160, "index-0"], [161, "index-0"], [162, "index-0"], [163, "index-0"], [164, "index-0"], [165, "index-0"], [166, "index-0"], [167, "index-0"], [168, "index-0"], [169, "index-0"], [170, "index-0"], [171, "index-0"], [172, "index-0"], [173, "index-0"], [174, "index-0"], [175, "index-0"], [176, "index-0"], [177, "index-0"], [178, "index-0"], [179, "index-0"], [180, "index-0"], [384, "index-0"], [385, "index-0"], [386, "index-0"], [387, "index-0"], [388, "index-0"], [389, "index-0"], [390, "index-0"], [391, "index-0"], [392, "index-0"], [393, "index-0"], [394, "index-0"], [395, "index-0"], [396, "index-0"], [397, "index-0"], [398, "index-0"], [399, "index-0"], [400, "index-0"], [401, "index-0"], [402, "index-0"], [403, "index-0"], [404, "index-0"], [405, "index-0"], [406, "index-0"], [407, "index-0"], [408, "index-0"], [409, "index-0"], [410, "index-0"], [411, "index-0"], [412, "index-0"], [413, "index-0"], [414, "index-0"], [415, "index-0"], [416, "index-0"], [417, "index-0"], [418, "index-0"], [419, "index-0"], [420, "index-0"], [421, "index-0"], [422, "index-0"], [423, "index-0"], [424, "index-0"], [425, "index-0"], [426, "index-0"], [427, "index-0"], [428, "index-0"], [429, "index-0"], [430, "index-0"], [431, "index-0"], [432, "index-0"], [433, "index-0"], [434, "index-0"], [435, "index-0"], [436, "index-0"], [437, "index-0"], [438, "index-0"], [439, "index-0"], [440, "index-0"], [441, "index-0"], [442, "index-0"], [443, "index-0"], [444, "index-0"], [445, "index-0"], [446, "index-0"], [447, "index-0"], [448, "index-0"], [449, "index-0"], [450, "index-0"], [451, "index-0"], [452, "index-0"], [453, "index-0"], [454, "index-0"], [455, "index-0"], [456, "index-0"], [457, "index-0"], [458, "index-0"], [459, "index-0"], [460, "index-0"], [461, "index-0"], [462, "index-0"], [463, "index-0"], [464, "index-0"], [465, "index-0"], [466, "index-0"], [467, "index-0"], [468, "index-0"], [469, "index-0"], [470, "index-0"], [471, "index-0"], [472, "index-0"], [473, "index-0"], [474, "index-0"], [475, "index-0"], [476, "index-0"], [477, "index-0"], [478, "index-0"], [479, "index-0"], [480, "index-0"], [481, "index-0"], [482, "index-0"], [483, "index-0"], [484, "index-0"], [485, "index-0"], [486, "index-0"], [487, "index-0"], [488, "index-0"], [489, "index-0"], [490, "index-0"], [491, "index-0"], [492, "index-0"], [493, "index-0"], [494, "index-0"], [495, "index-0"], [496, "index-0"], [497, "index-0"], [498, "index-0"], [499, "index-0"], [500, "index-0"]], "accumulation mode": [[10, "index-0"], [310, "index-0"]], "deterministic mode": [[11, "index-0"]], "dropout": [[12, "index-0"]], "floating-point math mode": [[13, "index-0"], [322, "index-0"]], "post-ops": [[14, "index-0"]], "quantization": [[15, "index-0"]], "rounding mode": [[16, "index-0"]], "scratchpad": [[17, "index-0"]], "basic concepts": [[18, "index-0"], [36, "index-0"], [174, "index-0"]], "batch normalization": [[19, "index-0"], [312, "index-0"]], "benchmarking performance": [[20, "index-0"]], "binary": [[21, "index-0"], [220, "index-13"], [313, "index-0"], [513, "index-1"], [513, "index-2"], [513, "index-3"]], "build from source": [[22, "index-0"]], "use build options": [[23, "index-0"]], "api": [[24, "index-0"]], "concat": [[25, "index-0"], [80, "index-0"], [220, "index-4"], [316, "index-0"], [516, "index-1"], [516, "index-2"], [516, "index-3"]], "constant tensor cache": [[26, "index-0"], [357, "index-0"]], "naming conventions": [[27, "index-0"]], "convolution": [[28, "index-0"], [81, "index-0"], [220, "index-6"], [317, "index-0"]], "cpu dispatcher control": [[29, "index-0"]], "cpu isa hints": [[30, "index-0"]], "data types": [[31, "index-0"], [318, "index-0"]], "dpc++ interoperability": [[32, "index-0"]], "eltwise": [[33, "index-0"], [220, "index-8"], [320, "index-0"]], "examples and tutorials": [[34, "index-0"]], "experimental features": [[35, "index-0"]], "binary fusion patterns": [[37, "index-0"]], "convolution fusion patterns": [[38, "index-0"]], "convtranspose fusion patterns": [[39, "index-0"]], "graph dump": [[40, "index-0"]], "gated multi-layer perceptron (gated-mlp)": [[41, "index-0"]], "grouped query attention (gqa)": [[42, "index-0"]], "interpolate fusion patterns": [[43, "index-0"]], "low precision": [[44, "index-0"]], "matmul fusion patterns": [[45, "index-0"]], "norm fusion patterns": [[46, "index-0"]], "pool fusion patterns": [[47, "index-0"]], "quantized convolution fusion patterns": [[48, "index-0"]], "quantized convtranspose fusion patterns": [[49, "index-0"]], "quantized matmul fusion patterns": [[50, "index-0"]], "reduction fusion patterns": [[51, "index-0"]], "scaled dot-product attention (sdpa)": [[52, "index-0"]], "sdpa with compressed key and value": [[53, "index-0"]], "softmax fusion patterns": [[54, "index-0"]], "unary fusion patterns": [[55, "index-0"]], "group normalization": [[56, "index-0"], [323, "index-0"]], "host-side scalars support": [[57, "index-0"]], "inference": [[58, "index-0"]], "inference and training aspects": [[59, "index-0"]], "int8 inference": [[60, "index-0"]], "inner product": [[61, "index-0"], [324, "index-0"]], "inspecting jit code": [[62, "index-0"]], "nuances of int8 computations": [[63, "index-0"]], "layer normalization": [[64, "index-0"], [326, "index-0"]], "link to the library": [[65, "index-0"]], "local response normalization (lrn)": [[66, "index-0"]], "matrix multiplication": [[67, "index-0"], [328, "index-0"]], "abs": [[68, "index-0"]], "absbackward": [[69, "index-0"]], "add": [[70, "index-0"]], "avgpool": [[71, "index-0"]], "avgpoolbackward": [[72, "index-0"]], "batchnormforwardtraining": [[73, "index-0"]], "batchnorminference": [[74, "index-0"]], "batchnormtrainingbackward": [[75, "index-0"]], "biasadd": [[76, "index-0"]], "biasaddbackward": [[77, "index-0"]], "clamp": [[78, "index-0"]], "clampbackward": [[79, "index-0"]], "convolutionbackwarddata": [[82, "index-0"]], "convolutionbackwardweights": [[83, "index-0"]], "convtranspose": [[84, "index-0"]], "convtransposebackwarddata": [[85, "index-0"]], "convtransposebackwardweights": [[86, "index-0"]], "dequantize": [[87, "index-0"]], "divide": [[88, "index-0"]], "dynamicdequantize": [[89, "index-0"]], "dynamicquantize": [[90, "index-0"]], "elu": [[91, "index-0"]], "elubackward": [[92, "index-0"]], "end": [[93, "index-0"], [203, "index-45"]], "exp": [[94, "index-0"]], "gelu": [[95, "index-0"]], "gelubackward": [[96, "index-0"]], "genindex": [[97, "index-0"]], "greaterequal": [[98, "index-0"]], "groupnorm": [[99, "index-0"]], "hardsigmoid": [[100, "index-0"]], "hardsigmoidbackward": [[101, "index-0"]], "hardswish": [[102, "index-0"]], "hardswishbackward": [[103, "index-0"]], "interpolate": [[104, "index-0"]], "interpolatebackward": [[105, "index-0"]], "layernorm": [[106, "index-0"]], "layernormbackward": [[107, "index-0"]], "leakyrelu": [[108, "index-0"]], "log": [[109, "index-0"]], "logsoftmax": [[110, "index-0"]], "logsoftmaxbackward": [[111, "index-0"]], "matmul": [[112, "index-0"], [220, "index-14"], [576, "index-1"], [576, "index-2"], [576, "index-3"]], "maximum": [[113, "index-0"]], "maxpool": [[114, "index-0"]], "maxpoolbackward": [[115, "index-0"]], "minimum": [[116, "index-0"]], "mish": [[117, "index-0"]], "mishbackward": [[118, "index-0"]], "multiply": [[119, "index-0"]], "pow": [[120, "index-0"]], "prelu": [[121, "index-0"], [158, "index-0"], [220, "index-18"], [332, "index-0"]], "prelubackward": [[122, "index-0"]], "quantize": [[123, "index-0"]], "reciprocal": [[124, "index-0"]], "reducel1": [[125, "index-0"]], "reducel2": [[126, "index-0"]], "reducemax": [[127, "index-0"]], "reducemean": [[128, "index-0"]], "reducemin": [[129, "index-0"]], "reduceprod": [[130, "index-0"]], "reducesum": [[131, "index-0"]], "relu": [[132, "index-0"]], "relubackward": [[133, "index-0"]], "reorder": [[134, "index-0"], [162, "index-0"], [220, "index-2"], [338, "index-0"], [601, "index-1"], [601, "index-2"], [601, "index-3"], [601, "index-4"]], "round": [[135, "index-0"]], "select": [[136, "index-0"]], "sigmoid": [[137, "index-0"]], "sigmoidbackward": [[138, "index-0"]], "softmax": [[139, "index-0"], [166, "index-0"], [220, "index-19"], [343, "index-0"]], "softmaxbackward": [[140, "index-0"]], "softplus": [[141, "index-0"]], "softplusbackward": [[142, "index-0"]], "sqrt": [[143, "index-0"]], "sqrtbackward": [[144, "index-0"]], "square": [[145, "index-0"]], "squareddifference": [[146, "index-0"]], "staticreshape": [[147, "index-0"]], "statictranspose": [[148, "index-0"]], "subtract": [[149, "index-0"]], "tanh": [[150, "index-0"]], "tanhbackward": [[151, "index-0"]], "typecast": [[152, "index-0"]], "wildcard": [[153, "index-0"]], "opencl interoperability": [[154, "index-0"]], "configuring onednn for benchmarking": [[155, "index-0"]], "persistent cache": [[156, "index-0"]], "pooling": [[157, "index-0"], [220, "index-16"], [331, "index-0"]], "primitive cache": [[159, "index-0"], [333, "index-0"]], "profiling onednn performance": [[160, "index-0"]], "reduction": [[161, "index-0"], [220, "index-17"], [337, "index-0"], [599, "index-1"], [599, "index-2"], [599, "index-3"]], "resampling": [[163, "index-0"], [220, "index-15"], [339, "index-0"]], "rnn": [[164, "index-0"], [220, "index-12"], [340, "index-0"]], "shuffle": [[165, "index-0"], [220, "index-3"], [342, "index-0"]], "sparse memory formats": [[167, "index-0"]], "sum": [[168, "index-0"], [220, "index-5"], [345, "index-0"], [618, "index-1"], [618, "index-2"], [618, "index-3"]], "system requirements": [[169, "index-0"]], "using onednn with threadpool-based threading": [[170, "index-0"]], "training": [[171, "index-0"]], "bfloat16 training": [[172, "index-0"]], "transitioning from intel mkl-dnn to onednn": [[173, "index-0"]], "batch-reduce general matrix multiplication": [[175, "index-0"]], "data transformation": [[176, "index-0"]], "understanding memory formats": [[177, "index-0"]], "verbose mode": [[178, "index-0"]], "verbose message catalogue": [[179, "index-0"]], "profiling with vtune(tm) profiler": [[180, "index-0"]], "api_kind": [[181, "index-0"]], "enum": [[181, "index-0"], [182, "index-0"], [183, "index-0"], [184, "index-0"], [185, "index-0"], [186, "index-0"], [187, "index-0"], [188, "index-0"], [189, "index-0"], [190, "index-0"], [191, "index-0"], [192, "index-0"], [193, "index-0"], [194, "index-0"], [195, "index-0"], [196, "index-0"], [197, "index-0"], [198, "index-0"], [199, "index-0"], [200, "index-0"], [201, "index-0"], [202, "index-0"], [203, "index-0"], [204, "index-0"], [205, "index-0"], [206, "index-0"], [207, "index-0"], [208, "index-0"], [209, "index-0"], [210, "index-0"], [211, "index-0"], [212, "index-0"], [213, "index-0"], [214, "index-0"], [215, "index-0"], [216, "index-0"], [217, "index-0"], [218, "index-0"], [219, "index-0"], [220, "index-0"], [221, "index-0"], [222, "index-0"], [223, "index-0"], [224, "index-0"], [225, "index-0"], [226, "index-0"], [227, "index-0"], [228, "index-0"], [229, "index-0"], [230, "index-0"], [231, "index-0"], [232, "index-0"], [233, "index-0"], [234, "index-0"], [235, "index-0"], [236, "index-0"], [237, "index-0"], [238, "index-0"], [239, "index-0"], [240, "index-0"], [241, "index-0"], [242, "index-0"], [243, "index-0"], [244, "index-0"], [245, "index-0"]], "accumulation_mode": [[182, "index-0"], [203, "index-44"]], "any": [[182, "index-3"], [191, "index-1"], [195, "index-5"], [201, "index-2"], [212, "index-2"], [213, "index-2"]], "enumvalue": [[182, "index-1"], [182, "index-2"], [182, "index-3"], [182, "index-4"], [182, "index-5"], [182, "index-6"], [183, "index-1"], [183, "index-2"], [183, "index-3"], [183, "index-4"], [183, "index-5"], [183, "index-6"], [184, "index-1"], [184, "index-10"], [184, "index-11"], [184, "index-12"], [184, "index-13"], [184, "index-14"], [184, "index-15"], [184, "index-16"], [184, "index-17"], [184, "index-18"], [184, "index-19"], [184, "index-2"], [184, "index-20"], [184, "index-21"], [184, "index-22"], [184, "index-23"], [184, "index-24"], [184, "index-25"], [184, "index-26"], [184, "index-27"], [184, "index-28"], [184, "index-29"], [184, "index-3"], [184, "index-30"], [184, "index-31"], [184, "index-32"], [184, "index-33"], [184, "index-34"], [184, "index-35"], [184, "index-36"], [184, "index-37"], [184, "index-38"], [184, "index-39"], [184, "index-4"], [184, "index-40"], [184, "index-41"], [184, "index-42"], [184, "index-43"], [184, "index-44"], [184, "index-45"], [184, "index-46"], [184, "index-47"], [184, "index-48"], [184, "index-49"], [184, "index-5"], [184, "index-50"], [184, "index-51"], [184, "index-52"], [184, "index-53"], [184, "index-54"], [184, "index-55"], [184, "index-56"], [184, "index-57"], [184, "index-58"], [184, "index-59"], [184, "index-6"], [184, "index-60"], [184, "index-61"], [184, "index-62"], [184, "index-63"], [184, "index-64"], [184, "index-65"], [184, "index-66"], [184, "index-67"], [184, "index-68"], [184, "index-69"], [184, "index-7"], [184, "index-70"], [184, "index-8"], [184, "index-9"], [185, "index-1"], [185, "index-10"], [185, "index-11"], [185, "index-12"], [185, "index-13"], [185, "index-14"], [185, "index-15"], [185, "index-16"], [185, "index-17"], [185, "index-18"], [185, "index-19"], [185, "index-2"], [185, "index-20"], [185, "index-21"], [185, "index-22"], [185, "index-23"], [185, "index-24"], [185, "index-25"], [185, "index-26"], [185, "index-27"], [185, "index-28"], [185, "index-29"], [185, "index-3"], [185, "index-30"], [185, "index-31"], [185, "index-32"], [185, "index-33"], [185, "index-34"], [185, "index-35"], [185, "index-36"], [185, "index-37"], [185, "index-38"], [185, "index-39"], [185, "index-4"], [185, "index-40"], [185, "index-41"], [185, "index-42"], [185, "index-43"], [185, "index-44"], [185, "index-45"], [185, "index-46"], [185, "index-47"], [185, "index-48"], [185, "index-49"], [185, "index-5"], [185, "index-50"], [185, "index-51"], [185, "index-52"], [185, "index-53"], [185, "index-54"], [185, "index-55"], [185, "index-56"], [185, "index-57"], [185, "index-58"], [185, "index-59"], [185, "index-6"], [185, "index-60"], [185, "index-61"], [185, "index-62"], [185, "index-63"], [185, "index-64"], [185, "index-65"], [185, "index-66"], [185, "index-67"], [185, "index-68"], [185, "index-69"], [185, "index-7"], [185, "index-70"], [185, "index-71"], [185, "index-8"], [185, "index-9"], [186, "index-1"], [186, "index-10"], [186, "index-11"], [186, "index-12"], [186, "index-13"], [186, "index-14"], [186, "index-15"], [186, "index-16"], [186, "index-17"], [186, "index-2"], [186, "index-3"], [186, "index-4"], [186, "index-5"], [186, "index-6"], [186, "index-7"], [186, "index-8"], [186, "index-9"], [187, "index-1"], [187, "index-2"], [188, "index-1"], [188, "index-2"], [189, "index-1"], [189, "index-10"], [189, "index-11"], [189, "index-12"], [189, "index-13"], [189, "index-14"], [189, "index-15"], [189, "index-16"], [189, "index-17"], [189, "index-2"], [189, "index-3"], [189, "index-4"], [189, "index-5"], [189, "index-6"], [189, "index-7"], [189, "index-8"], [189, "index-9"], [190, "index-1"], [190, "index-10"], [190, "index-11"], [190, "index-12"], [190, "index-13"], [190, "index-14"], [190, "index-15"], [190, "index-16"], [190, "index-2"], [190, "index-3"], [190, "index-4"], [190, "index-5"], [190, "index-6"], [190, "index-7"], [190, "index-8"], [190, "index-9"], [191, "index-1"], [191, "index-2"], [191, "index-3"], [192, "index-1"], [192, "index-2"], [192, "index-3"], [193, "index-1"], [193, "index-2"], [193, "index-3"], [193, "index-4"], [193, "index-5"], [193, "index-6"], [194, "index-1"], [194, "index-10"], [194, "index-100"], [194, "index-101"], [194, "index-102"], [194, "index-103"], [194, "index-104"], [194, "index-105"], [194, "index-106"], [194, "index-107"], [194, "index-108"], [194, "index-109"], [194, "index-11"], [194, "index-110"], [194, "index-111"], [194, "index-112"], [194, "index-113"], [194, "index-114"], [194, "index-115"], [194, "index-116"], [194, "index-117"], [194, "index-118"], [194, "index-119"], [194, "index-12"], [194, "index-120"], [194, "index-121"], [194, "index-122"], [194, "index-123"], [194, "index-124"], [194, "index-125"], [194, "index-126"], [194, "index-127"], [194, "index-128"], [194, "index-129"], [194, "index-13"], [194, "index-130"], [194, "index-131"], [194, "index-132"], [194, "index-133"], [194, "index-134"], [194, "index-135"], [194, "index-136"], [194, "index-137"], [194, "index-138"], [194, "index-14"], [194, "index-15"], [194, "index-16"], [194, "index-17"], [194, "index-18"], [194, "index-19"], [194, "index-2"], [194, "index-20"], [194, "index-21"], [194, "index-22"], [194, "index-23"], [194, "index-24"], [194, "index-25"], [194, "index-26"], [194, "index-27"], [194, "index-28"], [194, "index-29"], [194, "index-3"], [194, "index-30"], [194, "index-31"], [194, "index-32"], [194, "index-33"], [194, "index-34"], [194, "index-35"], [194, "index-36"], [194, "index-37"], [194, "index-38"], [194, "index-39"], [194, "index-4"], [194, "index-40"], [194, "index-41"], [194, "index-42"], [194, "index-43"], [194, "index-44"], [194, "index-45"], [194, "index-46"], [194, "index-47"], [194, "index-48"], [194, "index-49"], [194, "index-5"], [194, "index-50"], [194, "index-51"], [194, "index-52"], [194, "index-53"], [194, "index-54"], [194, "index-55"], [194, "index-56"], [194, "index-57"], [194, "index-58"], [194, "index-59"], [194, "index-6"], [194, "index-60"], [194, "index-61"], [194, "index-62"], [194, "index-63"], [194, "index-64"], [194, "index-65"], [194, "index-66"], [194, "index-67"], [194, "index-68"], [194, "index-69"], [194, "index-7"], [194, "index-70"], [194, "index-71"], [194, "index-72"], [194, "index-73"], [194, "index-74"], [194, "index-75"], [194, "index-76"], [194, "index-77"], [194, "index-78"], [194, "index-79"], [194, "index-8"], [194, "index-80"], [194, "index-81"], [194, "index-82"], [194, "index-83"], [194, "index-84"], [194, "index-85"], [194, "index-86"], [194, "index-87"], [194, "index-88"], [194, "index-89"], [194, "index-9"], [194, "index-90"], [194, "index-91"], [194, "index-92"], [194, "index-93"], [194, "index-94"], [194, "index-95"], [194, "index-96"], [194, "index-97"], [194, "index-98"], [194, "index-99"], [195, "index-1"], [195, "index-2"], [195, "index-3"], [195, "index-4"], [195, "index-5"], [196, "index-1"], [196, "index-2"], [196, "index-3"], [196, "index-4"], [196, "index-5"], [197, "index-1"], [197, "index-2"], [197, "index-3"], [199, "index-1"], [199, "index-2"], [199, "index-3"], [199, "index-4"], [200, "index-1"], [200, "index-10"], [200, "index-11"], [200, "index-2"], [200, "index-3"], [200, "index-4"], [200, "index-5"], [200, "index-6"], [200, "index-7"], [200, "index-8"], [200, "index-9"], [201, "index-1"], [201, "index-2"], [201, "index-3"], [201, "index-4"], [202, "index-1"], [202, "index-2"], [202, "index-3"], [202, "index-4"], [203, "index-1"], [203, "index-10"], [203, "index-11"], [203, "index-12"], [203, "index-13"], [203, "index-14"], [203, "index-15"], [203, "index-16"], [203, "index-17"], [203, "index-18"], [203, "index-19"], [203, "index-2"], [203, "index-20"], [203, "index-21"], [203, "index-22"], [203, "index-23"], [203, "index-24"], [203, "index-25"], [203, "index-26"], [203, "index-27"], [203, "index-28"], [203, "index-29"], [203, "index-3"], [203, "index-30"], [203, "index-31"], [203, "index-32"], [203, "index-33"], [203, "index-34"], [203, "index-35"], [203, "index-36"], [203, "index-37"], [203, "index-38"], [203, "index-39"], [203, "index-4"], [203, "index-40"], [203, "index-41"], [203, "index-42"], [203, "index-43"], [203, "index-44"], [203, "index-45"], [203, "index-5"], [203, "index-6"], [203, "index-7"], [203, "index-8"], [203, "index-9"], [204, "index-1"], [204, "index-10"], [204, "index-11"], [204, "index-12"], [204, "index-13"], [204, "index-14"], [204, "index-15"], [204, "index-16"], [204, "index-17"], [204, "index-18"], [204, "index-19"], [204, "index-2"], [204, "index-20"], [204, "index-21"], [204, "index-22"], [204, "index-23"], [204, "index-24"], [204, "index-25"], [204, "index-26"], [204, "index-27"], [204, "index-28"], [204, "index-29"], [204, "index-3"], [204, "index-30"], [204, "index-31"], [204, "index-32"], [204, "index-33"], [204, "index-34"], [204, "index-35"], [204, "index-36"], [204, "index-37"], [204, "index-38"], [204, "index-39"], [204, "index-4"], [204, "index-40"], [204, "index-41"], [204, "index-42"], [204, "index-43"], [204, "index-44"], [204, "index-45"], [204, "index-5"], [204, "index-6"], [204, "index-7"], [204, "index-8"], [204, "index-9"], [207, "index-1"], [207, "index-2"], [208, "index-1"], [208, "index-2"], [209, "index-1"], [209, "index-10"], [209, "index-11"], [209, "index-2"], [209, "index-3"], [209, "index-4"], [209, "index-5"], [209, "index-6"], [209, "index-7"], [209, "index-8"], [209, "index-9"], [210, "index-1"], [210, "index-2"], [210, "index-3"], [210, "index-4"], [211, "index-1"], [211, "index-10"], [211, "index-11"], [211, "index-12"], [211, "index-13"], [211, "index-14"], [211, "index-2"], [211, "index-3"], [211, "index-4"], [211, "index-5"], [211, "index-6"], [211, "index-7"], [211, "index-8"], [211, "index-9"], [212, "index-1"], [212, "index-2"], [212, "index-3"], [212, "index-4"], [212, "index-5"], [212, "index-6"], [213, "index-1"], [213, "index-10"], [213, "index-11"], [213, "index-12"], [213, "index-13"], [213, "index-14"], [213, "index-15"], [213, "index-16"], [213, "index-17"], [213, "index-18"], [213, "index-19"], [213, "index-2"], [213, "index-20"], [213, "index-21"], [213, "index-22"], [213, "index-23"], [213, "index-24"], [213, "index-25"], [213, "index-26"], [213, "index-27"], [213, "index-28"], [213, "index-29"], [213, "index-3"], [213, "index-30"], [213, "index-31"], [213, "index-32"], [213, "index-33"], [213, "index-34"], [213, "index-35"], [213, "index-36"], [213, "index-37"], [213, "index-38"], [213, "index-39"], [213, "index-4"], [213, "index-40"], [213, "index-41"], [213, "index-42"], [213, "index-43"], [213, "index-44"], [213, "index-45"], [213, "index-46"], [213, "index-47"], [213, "index-48"], [213, "index-49"], [213, "index-5"], [213, "index-50"], [213, "index-51"], [213, "index-52"], [213, "index-53"], [213, "index-54"], [213, "index-55"], [213, "index-56"], [213, "index-57"], [213, "index-58"], [213, "index-59"], [213, "index-6"], [213, "index-60"], [213, "index-61"], [213, "index-62"], [213, "index-63"], [213, "index-64"], [213, "index-65"], [213, "index-66"], [213, "index-67"], [213, "index-68"], [213, "index-69"], [213, "index-7"], [213, "index-70"], [213, "index-71"], [213, "index-72"], [213, "index-73"], [213, "index-74"], [213, "index-75"], [213, "index-76"], [213, "index-77"], [213, "index-78"], [213, "index-79"], [213, "index-8"], [213, "index-80"], [213, "index-81"], [213, "index-82"], [213, "index-83"], [213, "index-84"], [213, "index-85"], [213, "index-86"], [213, "index-87"], [213, "index-88"], [213, "index-89"], [213, "index-9"], [213, "index-90"], [213, "index-91"], [213, "index-92"], [213, "index-93"], [213, "index-94"], [213, "index-95"], [214, "index-1"], [214, "index-2"], [214, "index-3"], [214, "index-4"], [215, "index-1"], [215, "index-2"], [215, "index-3"], [215, "index-4"], [215, "index-5"], [215, "index-6"], [215, "index-7"], [216, "index-1"], [216, "index-2"], [216, "index-3"], [216, "index-4"], [216, "index-5"], [216, "index-6"], [216, "index-7"], [217, "index-1"], [217, "index-2"], [218, "index-1"], [218, "index-2"], [219, "index-1"], [219, "index-2"], [219, "index-3"], [219, "index-4"], [220, "index-1"], [220, "index-10"], [220, "index-11"], [220, "index-12"], [220, "index-13"], [220, "index-14"], [220, "index-15"], [220, "index-16"], [220, "index-17"], [220, "index-18"], [220, "index-19"], [220, "index-2"], [220, "index-20"], [220, "index-21"], [220, "index-3"], [220, "index-4"], [220, "index-5"], [220, "index-6"], [220, "index-7"], [220, "index-8"], [220, "index-9"], [221, "index-1"], [221, "index-10"], [221, "index-11"], [221, "index-12"], [221, "index-13"], [221, "index-14"], [221, "index-15"], [221, "index-16"], [221, "index-17"], [221, "index-18"], [221, "index-19"], [221, "index-2"], [221, "index-20"], [221, "index-21"], [221, "index-22"], [221, "index-3"], [221, "index-4"], [221, "index-5"], [221, "index-6"], [221, "index-7"], [221, "index-8"], [221, "index-9"], [222, "index-1"], [222, "index-2"], [223, "index-1"], [223, "index-2"], [224, "index-1"], [224, "index-2"], [224, "index-3"], [224, "index-4"], [224, "index-5"], [224, "index-6"], [224, "index-7"], [224, "index-8"], [225, "index-1"], [225, "index-2"], [225, "index-3"], [225, "index-4"], [225, "index-5"], [225, "index-6"], [225, "index-7"], [225, "index-8"], [226, "index-1"], [226, "index-2"], [226, "index-3"], [227, "index-1"], [227, "index-2"], [227, "index-3"], [228, "index-1"], [228, "index-10"], [228, "index-11"], [228, "index-12"], [228, "index-13"], [228, "index-14"], [228, "index-15"], [228, "index-16"], [228, "index-17"], [228, "index-18"], [228, "index-19"], [228, "index-2"], [228, "index-20"], [228, "index-21"], [228, "index-22"], [228, "index-23"], [228, "index-24"], [228, "index-25"], [228, "index-26"], [228, "index-27"], [228, "index-28"], [228, "index-29"], [228, "index-3"], [228, "index-30"], [228, "index-31"], [228, "index-32"], [228, "index-33"], [228, "index-34"], [228, "index-35"], [228, "index-36"], [228, "index-37"], [228, "index-38"], [228, "index-39"], [228, "index-4"], [228, "index-40"], [228, "index-41"], [228, "index-42"], [228, "index-43"], [228, "index-44"], [228, "index-45"], [228, "index-46"], [228, "index-47"], [228, "index-48"], [228, "index-49"], [228, "index-5"], [228, "index-50"], [228, "index-51"], [228, "index-52"], [228, "index-53"], [228, "index-54"], [228, "index-55"], [228, "index-6"], [228, "index-7"], [228, "index-8"], [228, "index-9"], [229, "index-1"], [229, "index-10"], [229, "index-11"], [229, "index-12"], [229, "index-13"], [229, "index-14"], [229, "index-15"], [229, "index-16"], [229, "index-17"], [229, "index-18"], [229, "index-19"], [229, "index-2"], [229, "index-20"], [229, "index-21"], [229, "index-22"], [229, "index-23"], [229, "index-24"], [229, "index-25"], [229, "index-26"], [229, "index-27"], [229, "index-28"], [229, "index-29"], [229, "index-3"], [229, "index-30"], [229, "index-31"], [229, "index-32"], [229, "index-33"], [229, "index-34"], [229, "index-35"], [229, "index-36"], [229, "index-37"], [229, "index-38"], [229, "index-39"], [229, "index-4"], [229, "index-40"], [229, "index-41"], [229, "index-42"], [229, "index-43"], [229, "index-44"], [229, "index-45"], [229, "index-46"], [229, "index-47"], [229, "index-48"], [229, "index-49"], [229, "index-5"], [229, "index-50"], [229, "index-51"], [229, "index-52"], [229, "index-53"], [229, "index-54"], [229, "index-55"], [229, "index-56"], [229, "index-6"], [229, "index-7"], [229, "index-8"], [229, "index-9"], [230, "index-1"], [230, "index-2"], [230, "index-3"], [230, "index-4"], [230, "index-5"], [231, "index-1"], [231, "index-2"], [231, "index-3"], [231, "index-4"], [231, "index-5"], [232, "index-1"], [232, "index-2"], [233, "index-1"], [233, "index-2"], [234, "index-1"], [234, "index-2"], [235, "index-1"], [235, "index-2"], [236, "index-1"], [236, "index-2"], [237, "index-1"], [237, "index-2"], [238, "index-1"], [238, "index-2"], [238, "index-3"], [238, "index-4"], [239, "index-1"], [239, "index-2"], [239, "index-3"], [239, "index-4"], [239, "index-5"], [239, "index-6"], [239, "index-7"], [240, "index-1"], [240, "index-10"], [240, "index-11"], [240, "index-2"], [240, "index-3"], [240, "index-4"], [240, "index-5"], [240, "index-6"], [240, "index-7"], [240, "index-8"], [240, "index-9"], [241, "index-1"], [241, "index-2"], [241, "index-3"], [242, "index-1"], [242, "index-2"], [243, "index-1"], [243, "index-2"], [244, "index-1"], [244, "index-2"], [245, "index-1"], [245, "index-2"], [245, "index-3"], [245, "index-4"]], "f16": [[182, "index-6"], [195, "index-3"], [200, "index-1"], [211, "index-7"]], "f32": [[182, "index-5"], [200, "index-3"], [211, "index-9"]], "relaxed": [[182, "index-2"]], "s32": [[182, "index-4"], [200, "index-4"], [211, "index-10"]], "strict": [[182, "index-1"], [195, "index-1"]], "dnnl_accumulation_mode_any": [[183, "index-3"]], "dnnl_accumulation_mode_f16": [[183, "index-6"]], "dnnl_accumulation_mode_f32": [[183, "index-5"]], "dnnl_accumulation_mode_relaxed": [[183, "index-2"]], "dnnl_accumulation_mode_s32": [[183, "index-4"]], "dnnl_accumulation_mode_strict": [[183, "index-1"]], "dnnl_accumulation_mode_t": [[183, "index-0"]], "dnnl_alg_kind_t": [[184, "index-0"]], "dnnl_binary_add": [[184, "index-45"]], "dnnl_binary_div": [[184, "index-49"]], "dnnl_binary_eq": [[184, "index-55"]], "dnnl_binary_ge": [[184, "index-51"]], "dnnl_binary_gt": [[184, "index-52"]], "dnnl_binary_le": [[184, "index-53"]], "dnnl_binary_lt": [[184, "index-54"]], "dnnl_binary_max": [[184, "index-47"]], "dnnl_binary_min": [[184, "index-48"]], "dnnl_binary_mul": [[184, "index-46"]], "dnnl_binary_ne": [[184, "index-56"]], "dnnl_binary_select": [[184, "index-57"]], "dnnl_binary_sub": [[184, "index-50"]], "dnnl_convolution_auto": [[184, "index-3"]], "dnnl_convolution_direct": [[184, "index-1"]], "dnnl_convolution_winograd": [[184, "index-2"]], "dnnl_deconvolution_direct": [[184, "index-4"]], "dnnl_deconvolution_winograd": [[184, "index-5"]], "dnnl_eltwise_abs": [[184, "index-10"]], "dnnl_eltwise_clip": [[184, "index-20"]], "dnnl_eltwise_clip_v2": [[184, "index-21"]], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [[184, "index-33"]], "dnnl_eltwise_elu": [[184, "index-8"]], "dnnl_eltwise_elu_use_dst_for_bwd": [[184, "index-29"]], "dnnl_eltwise_exp": [[184, "index-16"]], "dnnl_eltwise_exp_use_dst_for_bwd": [[184, "index-32"]], "dnnl_eltwise_gelu_erf": [[184, "index-23"]], "dnnl_eltwise_gelu_tanh": [[184, "index-17"]], "dnnl_eltwise_hardsigmoid": [[184, "index-14"]], "dnnl_eltwise_hardswish": [[184, "index-26"]], "dnnl_eltwise_linear": [[184, "index-12"]], "dnnl_eltwise_log": [[184, "index-19"]], "dnnl_eltwise_logistic": [[184, "index-15"]], "dnnl_eltwise_logistic_use_dst_for_bwd": [[184, "index-31"]], "dnnl_eltwise_mish": [[184, "index-25"]], "dnnl_eltwise_pow": [[184, "index-22"]], "dnnl_eltwise_relu": [[184, "index-6"]], "dnnl_eltwise_relu_use_dst_for_bwd": [[184, "index-27"]], "dnnl_eltwise_round": [[184, "index-24"]], "dnnl_eltwise_soft_relu": [[184, "index-13"]], "dnnl_eltwise_sqrt": [[184, "index-11"]], "dnnl_eltwise_sqrt_use_dst_for_bwd": [[184, "index-30"]], "dnnl_eltwise_square": [[184, "index-9"]], "dnnl_eltwise_swish": [[184, "index-18"]], "dnnl_eltwise_tanh": [[184, "index-7"]], "dnnl_eltwise_tanh_use_dst_for_bwd": [[184, "index-28"]], "dnnl_lbr_augru": [[184, "index-44"]], "dnnl_lbr_gru": [[184, "index-42"]], "dnnl_lrn_across_channels": [[184, "index-37"]], "dnnl_lrn_within_channel": [[184, "index-38"]], "dnnl_pooling_avg_exclude_padding": [[184, "index-36"]], "dnnl_pooling_avg_include_padding": [[184, "index-35"]], "dnnl_pooling_max": [[184, "index-34"]], "dnnl_reduction_max": [[184, "index-60"]], "dnnl_reduction_mean": [[184, "index-64"]], "dnnl_reduction_min": [[184, "index-61"]], "dnnl_reduction_mul": [[184, "index-63"]], "dnnl_reduction_norm_lp_max": [[184, "index-65"]], "dnnl_reduction_norm_lp_power_p_max": [[184, "index-67"]], "dnnl_reduction_norm_lp_power_p_sum": [[184, "index-68"]], "dnnl_reduction_norm_lp_sum": [[184, "index-66"]], "dnnl_reduction_sum": [[184, "index-62"]], "dnnl_resampling_linear": [[184, "index-59"]], "dnnl_resampling_nearest": [[184, "index-58"]], "dnnl_softmax_accurate": [[184, "index-69"]], "dnnl_softmax_log": [[184, "index-70"]], "dnnl_vanilla_augru": [[184, "index-43"]], "dnnl_vanilla_gru": [[184, "index-41"]], "dnnl_vanilla_lstm": [[184, "index-40"]], "dnnl_vanilla_rnn": [[184, "index-39"]], "algorithm": [[185, "index-0"]], "binary_add": [[185, "index-46"]], "binary_div": [[185, "index-50"]], "binary_eq": [[185, "index-56"]], "binary_ge": [[185, "index-52"]], "binary_gt": [[185, "index-53"]], "binary_le": [[185, "index-54"]], "binary_lt": [[185, "index-55"]], "binary_max": [[185, "index-48"]], "binary_min": [[185, "index-49"]], "binary_mul": [[185, "index-47"]], "binary_ne": [[185, "index-57"]], "binary_select": [[185, "index-58"]], "binary_sub": [[185, "index-51"]], "convolution_auto": [[185, "index-2"]], "convolution_direct": [[185, "index-3"]], "convolution_winograd": [[185, "index-4"]], "deconvolution_direct": [[185, "index-5"]], "deconvolution_winograd": [[185, "index-6"]], "eltwise_abs": [[185, "index-11"]], "eltwise_clip": [[185, "index-22"]], "eltwise_clip_v2": [[185, "index-23"]], "eltwise_clip_v2_use_dst_for_bwd": [[185, "index-34"]], "eltwise_elu": [[185, "index-9"]], "eltwise_elu_use_dst_for_bwd": [[185, "index-30"]], "eltwise_exp": [[185, "index-18"]], "eltwise_exp_use_dst_for_bwd": [[185, "index-33"]], "eltwise_gelu_erf": [[185, "index-20"]], "eltwise_gelu_tanh": [[185, "index-19"]], "eltwise_hardsigmoid": [[185, "index-27"]], "eltwise_hardswish": [[185, "index-26"]], "eltwise_linear": [[185, "index-14"]], "eltwise_log": [[185, "index-21"]], "eltwise_logistic": [[185, "index-17"]], "eltwise_logistic_use_dst_for_bwd": [[185, "index-32"]], "eltwise_mish": [[185, "index-16"]], "eltwise_pow": [[185, "index-24"]], "eltwise_relu": [[185, "index-7"]], "eltwise_relu_use_dst_for_bwd": [[185, "index-28"]], "eltwise_round": [[185, "index-25"]], "eltwise_soft_relu": [[185, "index-15"]], "eltwise_sqrt": [[185, "index-12"]], "eltwise_sqrt_use_dst_for_bwd": [[185, "index-31"]], "eltwise_square": [[185, "index-10"]], "eltwise_swish": [[185, "index-13"]], "eltwise_tanh": [[185, "index-8"]], "eltwise_tanh_use_dst_for_bwd": [[185, "index-29"]], "lbr_augru": [[185, "index-45"]], "lbr_gru": [[185, "index-43"]], "lrn_across_channels": [[185, "index-35"]], "lrn_within_channel": [[185, "index-36"]], "pooling_avg_exclude_padding": [[185, "index-39"]], "pooling_avg_include_padding": [[185, "index-38"]], "pooling_max": [[185, "index-37"]], "reduction_max": [[185, "index-61"]], "reduction_mean": [[185, "index-65"]], "reduction_min": [[185, "index-62"]], "reduction_mul": [[185, "index-64"]], "reduction_norm_lp_max": [[185, "index-66"]], "reduction_norm_lp_power_p_max": [[185, "index-68"]], "reduction_norm_lp_power_p_sum": [[185, "index-69"]], "reduction_norm_lp_sum": [[185, "index-67"]], "reduction_sum": [[185, "index-63"]], "resampling_linear": [[185, "index-60"]], "resampling_nearest": [[185, "index-59"]], "softmax_accurate": [[185, "index-70"]], "softmax_log": [[185, "index-71"]], "undef": [[185, "index-1"], [201, "index-1"], [202, "index-1"], [203, "index-1"], [211, "index-1"], [212, "index-1"], [213, "index-1"], [214, "index-1"], [220, "index-1"], [222, "index-1"], [224, "index-1"], [226, "index-1"], [228, "index-1"], [230, "index-1"], [232, "index-1"], [245, "index-1"]], "vanilla_augru": [[185, "index-44"]], "vanilla_gru": [[185, "index-42"]], "vanilla_lstm": [[185, "index-41"]], "vanilla_rnn": [[185, "index-40"]], "avx": [[186, "index-3"]], "avx10_1_512": [[186, "index-10"]], "avx10_1_512_amx": [[186, "index-12"]], "avx10_1_512_amx_fp16": [[186, "index-14"]], "avx10_2_512": [[186, "index-16"]], "avx10_2_512_amx_2": [[186, "index-17"]], "avx2": [[186, "index-4"]], "avx2_vnni": [[186, "index-5"]], "avx2_vnni_2": [[186, "index-6"]], "avx512_core": [[186, "index-7"]], "avx512_core_amx": [[186, "index-13"]], "avx512_core_amx_fp16": [[186, "index-15"]], "avx512_core_bf16": [[186, "index-9"]], "avx512_core_fp16": [[186, "index-11"]], "avx512_core_vnni": [[186, "index-8"]], "cpu_isa": [[186, "index-0"]], "isa_default": [[186, "index-1"]], "sse41": [[186, "index-2"]], "cpu_isa_hints": [[187, "index-0"]], "no_hints": [[187, "index-1"]], "prefer_ymm": [[187, "index-2"]], "dnnl_cpu_isa_hints_t": [[188, "index-0"]], "dnnl_cpu_isa_no_hints": [[188, "index-1"]], "dnnl_cpu_isa_prefer_ymm": [[188, "index-2"]], "dnnl_cpu_isa_avx": [[189, "index-3"]], "dnnl_cpu_isa_avx10_1_512": [[189, "index-10"]], "dnnl_cpu_isa_avx10_1_512_amx": [[189, "index-12"]], "dnnl_cpu_isa_avx10_1_512_amx_fp16": [[189, "index-14"]], "dnnl_cpu_isa_avx10_2_512": [[189, "index-16"]], "dnnl_cpu_isa_avx10_2_512_amx_2": [[189, "index-17"]], "dnnl_cpu_isa_avx2": [[189, "index-4"]], "dnnl_cpu_isa_avx2_vnni": [[189, "index-5"]], "dnnl_cpu_isa_avx2_vnni_2": [[189, "index-6"]], "dnnl_cpu_isa_avx512_core": [[189, "index-7"]], "dnnl_cpu_isa_avx512_core_amx": [[189, "index-13"]], "dnnl_cpu_isa_avx512_core_amx_fp16": [[189, "index-15"]], "dnnl_cpu_isa_avx512_core_bf16": [[189, "index-9"]], "dnnl_cpu_isa_avx512_core_fp16": [[189, "index-11"]], "dnnl_cpu_isa_avx512_core_vnni": [[189, "index-8"]], "dnnl_cpu_isa_default": [[189, "index-1"]], "dnnl_cpu_isa_sse41": [[189, "index-2"]], "dnnl_cpu_isa_t": [[189, "index-0"]], "dnnl_bf16": [[190, "index-3"]], "dnnl_boolean": [[190, "index-9"]], "dnnl_data_type_t": [[190, "index-0"]], "dnnl_data_type_undef": [[190, "index-1"]], "dnnl_e8m0": [[190, "index-14"]], "dnnl_f16": [[190, "index-2"]], "dnnl_f32": [[190, "index-4"]], "dnnl_f4_e2m1": [[190, "index-15"]], "dnnl_f4_e3m0": [[190, "index-16"]], "dnnl_f64": [[190, "index-8"]], "dnnl_f8_e4m3": [[190, "index-11"]], "dnnl_f8_e5m2": [[190, "index-10"]], "dnnl_s32": [[190, "index-5"]], "dnnl_s4": [[190, "index-12"]], "dnnl_s8": [[190, "index-6"]], "dnnl_u4": [[190, "index-13"]], "dnnl_u8": [[190, "index-7"]], "cpu": [[191, "index-2"]], "gpu": [[191, "index-3"]], "kind": [[191, "index-0"], [205, "index-0"], [220, "index-0"], [587, "index-4"]], "dnnl_any_engine": [[192, "index-1"]], "dnnl_cpu": [[192, "index-2"]], "dnnl_engine_kind_t": [[192, "index-0"]], "dnnl_gpu": [[192, "index-3"]], "dnnl_blocked": [[193, "index-3"]], "dnnl_format_kind_any": [[193, "index-2"]], "dnnl_format_kind_host_scalar": [[193, "index-6"]], "dnnl_format_kind_opaque": [[193, "index-4"]], "dnnl_format_kind_sparse": [[193, "index-5"]], "dnnl_format_kind_t": [[193, "index-0"]], "dnnl_format_kind_undef": [[193, "index-1"]], "dnnl_abcd8b8a": [[194, "index-61"]], "dnnl_abcde2b8a4b": [[194, "index-64"]], "dnnl_abcde4b16a4b": [[194, "index-63"]], "dnnl_a": [[194, "index-3"]], "dnnl_abcd2b4c2b": [[194, "index-62"]], "dnnl_abcde2b4c2b": [[194, "index-69"]], "dnnl_abcdef2b4c2b": [[194, "index-72"]], "dnnl_abcdef2c8b4c": [[194, "index-71"]], "dnnl_abc16b": [[194, "index-53"]], "dnnl_abc32b": [[194, "index-54"]], "dnnl_abc4b": [[194, "index-55"]], "dnnl_abc8b": [[194, "index-56"]], "dnnl_abcd16b": [[194, "index-57"]], "dnnl_abcd32b": [[194, "index-58"]], "dnnl_abcd4b": [[194, "index-59"]], "dnnl_abcd8b": [[194, "index-60"]], "dnnl_abcde16b": [[194, "index-65"]], "dnnl_abcde32b": [[194, "index-66"]], "dnnl_abcde4b": [[194, "index-67"]], "dnnl_abcde8b": [[194, "index-68"]], "dnnl_abcdef16b": [[194, "index-70"]], "dnnl_abcdef4b": [[194, "index-73"]], "dnnl_ab": [[194, "index-4"]], "dnnl_abc": [[194, "index-5"]], "dnnl_abcd": [[194, "index-6"]], "dnnl_abcde": [[194, "index-7"]], "dnnl_abcdef": [[194, "index-8"]], "dnnl_abcdefg": [[194, "index-9"]], "dnnl_abcdefgh": [[194, "index-10"]], "dnnl_abcdefghi": [[194, "index-11"]], "dnnl_abcdefghij": [[194, "index-12"]], "dnnl_abcdefghijk": [[194, "index-13"]], "dnnl_abcdefghijkl": [[194, "index-14"]], "dnnl_abcdefghijlk": [[194, "index-52"]], "dnnl_abcdefghikj": [[194, "index-51"]], "dnnl_abcdefghji": [[194, "index-50"]], "dnnl_abcdefgih": [[194, "index-49"]], "dnnl_abcdefhg": [[194, "index-48"]], "dnnl_abcdegf": [[194, "index-47"]], "dnnl_abcdfe": [[194, "index-41"]], "dnnl_abced": [[194, "index-31"]], "dnnl_abdc": [[194, "index-21"]], "dnnl_abdec": [[194, "index-32"]], "dnnl_abdefc": [[194, "index-42"]], "dnnl_abdfce": [[194, "index-43"]], "dnnl_acb": [[194, "index-16"]], "dnnl_acbd": [[194, "index-22"]], "dnnl_acbde": [[194, "index-33"]], "dnnl_acbdef": [[194, "index-44"]], "dnnl_acdb": [[194, "index-23"]], "dnnl_acdeb": [[194, "index-34"]], "dnnl_adbc": [[194, "index-24"]], "dnnl_adcb": [[194, "index-25"]], "dnnl_adecb": [[194, "index-35"]], "dnnl_adefcb": [[194, "index-45"]], "dnnl_ba": [[194, "index-15"]], "dnnl_bac": [[194, "index-17"]], "dnnl_bacd": [[194, "index-26"]], "dnnl_bacde": [[194, "index-36"]], "dnnl_bca": [[194, "index-18"]], "dnnl_bcda": [[194, "index-27"]], "dnnl_bcdea": [[194, "index-37"]], "dnnl_cab": [[194, "index-19"]], "dnnl_cba": [[194, "index-20"]], "dnnl_cdab": [[194, "index-28"]], "dnnl_cdba": [[194, "index-29"]], "dnnl_cdeab": [[194, "index-38"]], "dnnl_cdeba": [[194, "index-39"]], "dnnl_chwn": [[194, "index-84"]], "dnnl_cn": [[194, "index-77"]], "dnnl_dcab": [[194, "index-30"]], "dnnl_decab": [[194, "index-40"]], "dnnl_defcab": [[194, "index-46"]], "dnnl_dhwigo": [[194, "index-116"]], "dnnl_dhwio": [[194, "index-102"]], "dnnl_dhwoi": [[194, "index-103"]], "dnnl_format_tag_any": [[194, "index-2"]], "dnnl_format_tag_last": [[194, "index-74"]], "dnnl_format_tag_t": [[194, "index-0"]], "dnnl_format_tag_undef": [[194, "index-1"]], "dnnl_giodhw": [[194, "index-115"]], "dnnl_giohw": [[194, "index-112"]], "dnnl_godhwi": [[194, "index-114"]], "dnnl_gohwi": [[194, "index-110"]], "dnnl_goidhw": [[194, "index-113"]], "dnnl_goihw": [[194, "index-109"]], "dnnl_goiw": [[194, "index-106"]], "dnnl_gowi": [[194, "index-107"]], "dnnl_hwigo": [[194, "index-111"]], "dnnl_hwio": [[194, "index-95"]], "dnnl_hwoi": [[194, "index-96"]], "dnnl_idhwo": [[194, "index-105"]], "dnnl_ihwo": [[194, "index-98"]], "dnnl_io": [[194, "index-88"]], "dnnl_iodhw": [[194, "index-101"]], "dnnl_iohw": [[194, "index-99"]], "dnnl_iwo": [[194, "index-93"]], "dnnl_ldoi16o": [[194, "index-125"]], "dnnl_ldgoi16o": [[194, "index-126"]], "dnnl_ldgo": [[194, "index-124"]], "dnnl_ldgoi": [[194, "index-121"]], "dnnl_ldigo": [[194, "index-120"]], "dnnl_ldio": [[194, "index-122"]], "dnnl_ldnc": [[194, "index-119"]], "dnnl_ldoi": [[194, "index-123"]], "dnnl_ncdhw16c": [[194, "index-128"]], "dnnl_ncdhw32c": [[194, "index-127"]], "dnnl_ncdhw4c": [[194, "index-129"]], "dnnl_ncdhw8c": [[194, "index-130"]], "dnnl_nchw16c": [[194, "index-132"]], "dnnl_nchw32c": [[194, "index-131"]], "dnnl_nchw4c": [[194, "index-133"]], "dnnl_nchw8c": [[194, "index-134"]], "dnnl_ncw16c": [[194, "index-136"]], "dnnl_ncw32c": [[194, "index-135"]], "dnnl_ncw4c": [[194, "index-137"]], "dnnl_ncw8c": [[194, "index-138"]], "dnnl_nc": [[194, "index-76"]], "dnnl_ncdhw": [[194, "index-85"]], "dnnl_nchw": [[194, "index-82"]], "dnnl_ncw": [[194, "index-80"]], "dnnl_ndhwc": [[194, "index-86"]], "dnnl_nhwc": [[194, "index-83"]], "dnnl_nt": [[194, "index-79"]], "dnnl_ntc": [[194, "index-118"]], "dnnl_nwc": [[194, "index-81"]], "dnnl_odhwi": [[194, "index-104"]], "dnnl_ohwi": [[194, "index-97"]], "dnnl_oi": [[194, "index-87"]], "dnnl_oidhw": [[194, "index-100"]], "dnnl_oihw": [[194, "index-94"]], "dnnl_oiw": [[194, "index-89"]], "dnnl_owi": [[194, "index-90"]], "dnnl_tn": [[194, "index-78"]], "dnnl_tnc": [[194, "index-117"]], "dnnl_wigo": [[194, "index-108"]], "dnnl_wio": [[194, "index-91"]], "dnnl_woi": [[194, "index-92"]], "dnnl_x": [[194, "index-75"]], "bf16": [[195, "index-2"], [200, "index-2"], [211, "index-8"]], "fpmath_mode": [[195, "index-0"]], "tf32": [[195, "index-4"]], "dnnl_fpmath_mode_any": [[196, "index-4"]], "dnnl_fpmath_mode_bf16": [[196, "index-2"]], "dnnl_fpmath_mode_f16": [[196, "index-3"]], "dnnl_fpmath_mode_strict": [[196, "index-1"]], "dnnl_fpmath_mode_t": [[196, "index-0"]], "dnnl_fpmath_mode_tf32": [[196, "index-5"]], "dnnl_graph_dump_mode_graph": [[197, "index-3"]], "dnnl_graph_dump_mode_none": [[197, "index-1"]], "dnnl_graph_dump_mode_subgraph": [[197, "index-2"]], "dnnl_graph_dump_mode_t": [[197, "index-0"]], "graph_dump_mode": [[198, "index-0"]], "dnnl_graph_layout_type_any": [[199, "index-2"]], "dnnl_graph_layout_type_opaque": [[199, "index-4"]], "dnnl_graph_layout_type_strided": [[199, "index-3"]], "dnnl_graph_layout_type_t": [[199, "index-0"]], "dnnl_graph_layout_type_undef": [[199, "index-1"]], "boolean": [[200, "index-7"]], "data_type": [[200, "index-0"], [211, "index-0"], [228, "index-45"], [539, "index-4"]], "f8_e4m3": [[200, "index-9"], [211, "index-6"]], "f8_e5m2": [[200, "index-8"], [211, "index-5"]], "s4": [[200, "index-10"], [211, "index-13"]], "s8": [[200, "index-5"], [211, "index-11"]], "u4": [[200, "index-11"], [211, "index-14"]], "u8": [[200, "index-6"], [211, "index-12"]], "layout_type": [[201, "index-0"], [539, "index-6"]], "opaque": [[201, "index-4"], [212, "index-6"]], "strided": [[201, "index-3"]], "constant": [[202, "index-3"]], "host_scalar": [[202, "index-4"], [212, "index-5"], [581, "index-31"]], "property_type": [[202, "index-0"]], "variable": [[202, "index-2"], [537, "index-1"], [537, "index-2"], [538, "index-1"], [538, "index-2"], [539, "index-1"], [539, "index-2"], [539, "index-3"], [539, "index-4"], [539, "index-5"], [539, "index-6"], [539, "index-7"], [539, "index-8"], [620, "index-1"], [630, "index-1"], [630, "index-2"], [630, "index-3"], [630, "index-4"], [630, "index-5"], [630, "index-6"]], "alpha": [[203, "index-2"]], "attr": [[203, "index-0"]], "auto_broadcast": [[203, "index-36"]], "auto_pad": [[203, "index-37"]], "axes": [[203, "index-12"]], "axis": [[203, "index-9"]], "begin_norm_axis": [[203, "index-10"]], "beta": [[203, "index-3"]], "coordinate_transformation_mode": [[203, "index-38"]], "data_format": [[203, "index-39"]], "dilations": [[203, "index-13"], [228, "index-16"]], "dst_shape": [[203, "index-14"]], "epsilon": [[203, "index-4"]], "exclude_pad": [[203, "index-27"]], "group_shape": [[203, "index-26"]], "groups": [[203, "index-11"]], "keep_dims": [[203, "index-28"]], "keep_stats": [[203, "index-29"]], "kernel": [[203, "index-15"], [228, "index-32"]], "max": [[203, "index-5"]], "min": [[203, "index-6"]], "mode": [[203, "index-40"]], "momentum": [[203, "index-7"]], "order": [[203, "index-16"]], "output_padding": [[203, "index-17"]], "pads_begin": [[203, "index-18"]], "pads_end": [[203, "index-19"]], "per_channel_broadcast": [[203, "index-30"]], "qtype": [[203, "index-41"]], "rounding_type": [[203, "index-42"]], "scales": [[203, "index-8"]], "shape": [[203, "index-20"]], "sizes": [[203, "index-21"]], "special_zero": [[203, "index-31"]], "src_shape": [[203, "index-22"]], "strides": [[203, "index-23"], [228, "index-15"], [539, "index-7"]], "transpose_a": [[203, "index-32"]], "transpose_b": [[203, "index-33"]], "use_affine": [[203, "index-34"]], "use_dst": [[203, "index-35"]], "weights_format": [[203, "index-43"]], "weights_shape": [[203, "index-24"]], "zps": [[203, "index-25"]], "dnnl_graph_op_attr_accumulation_mode": [[204, "index-44"]], "dnnl_graph_op_attr_alpha": [[204, "index-2"]], "dnnl_graph_op_attr_auto_broadcast": [[204, "index-36"]], "dnnl_graph_op_attr_auto_pad": [[204, "index-37"]], "dnnl_graph_op_attr_axes": [[204, "index-12"]], "dnnl_graph_op_attr_axis": [[204, "index-9"]], "dnnl_graph_op_attr_begin_norm_axis": [[204, "index-10"]], "dnnl_graph_op_attr_beta": [[204, "index-3"]], "dnnl_graph_op_attr_coordinate_transformation_mode": [[204, "index-38"]], "dnnl_graph_op_attr_data_format": [[204, "index-39"]], "dnnl_graph_op_attr_dilations": [[204, "index-13"]], "dnnl_graph_op_attr_dst_shape": [[204, "index-14"]], "dnnl_graph_op_attr_end": [[204, "index-45"]], "dnnl_graph_op_attr_epsilon": [[204, "index-4"]], "dnnl_graph_op_attr_exclude_pad": [[204, "index-27"]], "dnnl_graph_op_attr_group_shape": [[204, "index-26"]], "dnnl_graph_op_attr_groups": [[204, "index-11"]], "dnnl_graph_op_attr_keep_dims": [[204, "index-28"]], "dnnl_graph_op_attr_keep_stats": [[204, "index-29"]], "dnnl_graph_op_attr_kernel": [[204, "index-15"]], "dnnl_graph_op_attr_max": [[204, "index-5"]], "dnnl_graph_op_attr_min": [[204, "index-6"]], "dnnl_graph_op_attr_mode": [[204, "index-40"]], "dnnl_graph_op_attr_momentum": [[204, "index-7"]], "dnnl_graph_op_attr_order": [[204, "index-16"]], "dnnl_graph_op_attr_output_padding": [[204, "index-17"]], "dnnl_graph_op_attr_pads_begin": [[204, "index-18"]], "dnnl_graph_op_attr_pads_end": [[204, "index-19"]], "dnnl_graph_op_attr_per_channel_broadcast": [[204, "index-30"]], "dnnl_graph_op_attr_qtype": [[204, "index-41"]], "dnnl_graph_op_attr_rounding_type": [[204, "index-42"]], "dnnl_graph_op_attr_scales": [[204, "index-8"]], "dnnl_graph_op_attr_shape": [[204, "index-20"]], "dnnl_graph_op_attr_sizes": [[204, "index-21"]], "dnnl_graph_op_attr_special_zero": [[204, "index-31"]], "dnnl_graph_op_attr_src_shape": [[204, "index-22"]], "dnnl_graph_op_attr_strides": [[204, "index-23"]], "dnnl_graph_op_attr_t": [[204, "index-0"]], "dnnl_graph_op_attr_transpose_a": [[204, "index-32"]], "dnnl_graph_op_attr_transpose_b": [[204, "index-33"]], "dnnl_graph_op_attr_undef": [[204, "index-1"]], "dnnl_graph_op_attr_use_affine": [[204, "index-34"]], "dnnl_graph_op_attr_use_dst": [[204, "index-35"]], "dnnl_graph_op_attr_weights_format": [[204, "index-43"]], "dnnl_graph_op_attr_weights_shape": [[204, "index-24"]], "dnnl_graph_op_attr_zps": [[204, "index-25"]], "dnnl_graph_op_kind_t": [[206, "index-0"]], "debug": [[207, "index-2"]], "fusion": [[207, "index-1"]], "policy": [[207, "index-0"]], "dnnl_graph_partition_policy_debug": [[208, "index-2"]], "dnnl_graph_partition_policy_fusion": [[208, "index-1"]], "dnnl_graph_partition_policy_t": [[208, "index-0"]], "invalid_arguments": [[209, "index-3"], [239, "index-3"]], "invalid_data_type": [[209, "index-11"]], "invalid_graph": [[209, "index-8"]], "invalid_graph_op": [[209, "index-9"]], "invalid_shape": [[209, "index-10"]], "last_impl_reached": [[209, "index-5"], [239, "index-5"]], "not_required": [[209, "index-7"], [239, "index-7"]], "out_of_memory": [[209, "index-2"], [239, "index-2"]], "runtime_error": [[209, "index-6"], [239, "index-6"]], "status": [[209, "index-0"], [239, "index-0"], [366, "index-0"]], "success": [[209, "index-1"], [239, "index-1"]], "unimplemented": [[209, "index-4"], [239, "index-4"]], "dnnl_graph_tensor_property_constant": [[210, "index-3"]], "dnnl_graph_tensor_property_host_scalar": [[210, "index-4"]], "dnnl_graph_tensor_property_t": [[210, "index-0"]], "dnnl_graph_tensor_property_undef": [[210, "index-1"]], "dnnl_graph_tensor_property_variable": [[210, "index-2"]], "e8m0": [[211, "index-4"]], "f4_e2m1": [[211, "index-3"]], "f4_e3m0": [[211, "index-2"]], "blocked": [[212, "index-3"]], "format_kind": [[212, "index-0"], [228, "index-49"]], "sparse": [[212, "index-4"]], "abcd8b8a": [[213, "index-95"]], "a": [[213, "index-3"]], "abcd8b": [[213, "index-94"]], "ab": [[213, "index-4"]], "abc": [[213, "index-6"]], "abcd": [[213, "index-11"]], "abcde": [[213, "index-20"]], "abcdef": [[213, "index-29"]], "abcdefg": [[213, "index-35"]], "abcdefgh": [[213, "index-37"]], "abcdefghi": [[213, "index-39"]], "abcdefghij": [[213, "index-41"]], "abcdefghijk": [[213, "index-43"]], "abcdefghijkl": [[213, "index-45"]], "abcdefghijlk": [[213, "index-46"]], "abcdefghikj": [[213, "index-44"]], "abcdefghji": [[213, "index-42"]], "abcdefgih": [[213, "index-40"]], "abcdefhg": [[213, "index-38"]], "abcdegf": [[213, "index-36"]], "abcdfe": [[213, "index-34"]], "abced": [[213, "index-28"]], "abdc": [[213, "index-12"]], "abdec": [[213, "index-21"]], "abdefc": [[213, "index-32"]], "abdfce": [[213, "index-30"]], "acb": [[213, "index-7"]], "acbd": [[213, "index-13"]], "acbde": [[213, "index-22"]], "acbdef": [[213, "index-31"]], "acdb": [[213, "index-14"]], "acdeb": [[213, "index-23"]], "adbc": [[213, "index-15"]], "ba": [[213, "index-5"]], "bac": [[213, "index-8"]], "bacd": [[213, "index-16"]], "bacde": [[213, "index-24"]], "bca": [[213, "index-9"]], "bcda": [[213, "index-17"]], "bcdea": [[213, "index-25"]], "cba": [[213, "index-10"]], "cdba": [[213, "index-18"]], "cdeba": [[213, "index-26"]], "chwn": [[213, "index-56"]], "cn": [[213, "index-49"]], "dcab": [[213, "index-19"]], "decab": [[213, "index-27"]], "defcab": [[213, "index-33"]], "dhwigo": [[213, "index-85"]], "dhwio": [[213, "index-71"]], "format_tag": [[213, "index-0"]], "giodhw": [[213, "index-83"]], "giohw": [[213, "index-81"]], "godhwi": [[213, "index-84"]], "gohwi": [[213, "index-78"]], "goidhw": [[213, "index-82"]], "goihw": [[213, "index-79"]], "goiw": [[213, "index-75"]], "gowi": [[213, "index-76"]], "hwigo": [[213, "index-80"]], "hwio": [[213, "index-66"]], "idhwo": [[213, "index-74"]], "ihwo": [[213, "index-68"]], "io": [[213, "index-60"]], "iodhw": [[213, "index-73"]], "iohw": [[213, "index-69"]], "iwo": [[213, "index-64"]], "ldgo": [[213, "index-93"]], "ldgoi": [[213, "index-90"]], "ldigo": [[213, "index-89"]], "ldio": [[213, "index-91"]], "ldnc": [[213, "index-88"]], "ldoi": [[213, "index-92"]], "nc": [[213, "index-48"]], "ncdhw": [[213, "index-57"]], "nchw": [[213, "index-54"]], "ncw": [[213, "index-52"]], "ndhwc": [[213, "index-58"]], "nhwc": [[213, "index-55"]], "nt": [[213, "index-51"]], "ntc": [[213, "index-87"]], "nwc": [[213, "index-53"]], "odhwi": [[213, "index-72"]], "ohwi": [[213, "index-67"]], "oi": [[213, "index-59"]], "oidhw": [[213, "index-70"]], "oihw": [[213, "index-65"]], "oiw": [[213, "index-61"]], "owi": [[213, "index-62"]], "tn": [[213, "index-50"]], "tnc": [[213, "index-86"]], "wigo": [[213, "index-77"]], "wio": [[213, "index-63"]], "x": [[213, "index-47"]], "coo": [[214, "index-4"], [581, "index-29"]], "csr": [[214, "index-2"], [581, "index-28"]], "packed": [[214, "index-3"], [581, "index-30"]], "sparse_encoding": [[214, "index-0"], [228, "index-53"]], "fuse_norm_add_relu": [[215, "index-6"]], "fuse_norm_relu": [[215, "index-5"]], "none": [[215, "index-1"]], "normalization_flags": [[215, "index-0"]], "rms_norm": [[215, "index-7"]], "use_global_stats": [[215, "index-2"]], "use_scale": [[215, "index-3"]], "use_shift": [[215, "index-4"]], "dnnl_fuse_norm_add_relu": [[216, "index-6"]], "dnnl_fuse_norm_relu": [[216, "index-5"]], "dnnl_normalization_flags_none": [[216, "index-1"]], "dnnl_normalization_flags_t": [[216, "index-0"]], "dnnl_rms_norm": [[216, "index-7"]], "dnnl_use_global_stats": [[216, "index-2"]], "dnnl_use_scale": [[216, "index-3"]], "dnnl_use_shift": [[216, "index-4"]], "buffer": [[217, "index-2"], [243, "index-2"]], "memory_kind": [[217, "index-0"], [243, "index-0"]], "usm": [[217, "index-1"], [243, "index-1"]], "dnnl_ocl_interop_buffer": [[218, "index-2"]], "dnnl_ocl_interop_memory_kind_t": [[218, "index-0"]], "dnnl_ocl_interop_usm": [[218, "index-1"]], "dnnl_pack_type_no_trans": [[219, "index-2"]], "dnnl_pack_type_pack32": [[219, "index-4"]], "dnnl_pack_type_t": [[219, "index-0"]], "dnnl_pack_type_trans": [[219, "index-3"]], "dnnl_pack_type_undef": [[219, "index-1"]], "batch_normalization": [[220, "index-10"]], "deconvolution": [[220, "index-7"], [319, "index-0"]], "group_normalization": [[220, "index-21"]], "inner_product": [[220, "index-11"]], "layer_normalization": [[220, "index-20"]], "lrn": [[220, "index-9"], [327, "index-0"]], "dnnl_batch_normalization": [[221, "index-10"]], "dnnl_binary": [[221, "index-14"]], "dnnl_concat": [[221, "index-4"]], "dnnl_convolution": [[221, "index-6"]], "dnnl_deconvolution": [[221, "index-7"]], "dnnl_eltwise": [[221, "index-8"]], "dnnl_gemm": [[221, "index-13"]], "dnnl_group_normalization": [[221, "index-22"]], "dnnl_inner_product": [[221, "index-11"]], "dnnl_layer_normalization": [[221, "index-21"]], "dnnl_lrn": [[221, "index-9"]], "dnnl_matmul": [[221, "index-15"]], "dnnl_pooling": [[221, "index-17"]], "dnnl_prelu": [[221, "index-19"]], "dnnl_primitive_kind_t": [[221, "index-0"]], "dnnl_reduction": [[221, "index-18"]], "dnnl_reorder": [[221, "index-2"]], "dnnl_resampling": [[221, "index-16"]], "dnnl_rnn": [[221, "index-12"]], "dnnl_shuffle": [[221, "index-3"]], "dnnl_softmax": [[221, "index-20"]], "dnnl_sum": [[221, "index-5"]], "dnnl_undefined_primitive": [[221, "index-1"]], "profiling_data_kind": [[222, "index-0"]], "time": [[222, "index-2"]], "dnnl_profiling_data_kind_t": [[223, "index-0"]], "dnnl_profiling_data_kind_time": [[223, "index-2"]], "dnnl_profiling_data_kind_undef": [[223, "index-1"]], "backward": [[224, "index-5"]], "backward_bias": [[224, "index-8"]], "backward_data": [[224, "index-6"]], "backward_weights": [[224, "index-7"]], "forward": [[224, "index-4"]], "forward_inference": [[224, "index-3"]], "forward_training": [[224, "index-2"]], "prop_kind": [[224, "index-0"], [228, "index-12"]], "dnnl_backward": [[225, "index-5"]], "dnnl_backward_bias": [[225, "index-8"]], "dnnl_backward_data": [[225, "index-6"]], "dnnl_backward_weights": [[225, "index-7"]], "dnnl_forward": [[225, "index-4"]], "dnnl_forward_inference": [[225, "index-3"]], "dnnl_forward_training": [[225, "index-2"]], "dnnl_prop_kind_t": [[225, "index-0"]], "dnnl_prop_kind_undef": [[225, "index-1"]], "dynamic_mx": [[226, "index-3"]], "quantization_mode": [[226, "index-0"]], "static_sazp": [[226, "index-2"]], "dnnl_quantization_mode_dynamic_mx": [[227, "index-3"]], "dnnl_quantization_mode_static_sazp": [[227, "index-2"]], "dnnl_quantization_mode_t": [[227, "index-0"]], "dnnl_quantization_mode_undef": [[227, "index-1"]], "activation_kind": [[228, "index-31"]], "alg_kind": [[228, "index-21"]], "alpha_f32": [[228, "index-22"]], "axis_s32": [[228, "index-24"]], "beta_f32": [[228, "index-23"]], "cache_blob_id": [[228, "index-14"]], "cache_blob_id_size_s64": [[228, "index-13"]], "cell_kind": [[228, "index-29"]], "diff_dst_md": [[228, "index-39"]], "diff_src_md": [[228, "index-35"]], "diff_weights_md": [[228, "index-37"]], "direction": [[228, "index-30"]], "dst_md": [[228, "index-38"]], "engine": [[228, "index-2"], [321, "index-0"], [359, "index-0"], [535, "index-1"], [535, "index-2"]], "epsilon_f32": [[228, "index-19"]], "exec_arg_md": [[228, "index-42"]], "factors": [[228, "index-28"]], "flags": [[228, "index-20"], [241, "index-0"]], "group_size_s64": [[228, "index-33"]], "impl_info_str": [[228, "index-11"], [598, "index-6"]], "inner_blks": [[228, "index-51"]], "inner_idxs": [[228, "index-52"]], "inner_nblks_s32": [[228, "index-50"]], "k_f32": [[228, "index-26"]], "local_size_s64": [[228, "index-25"]], "memory_consumption_s64": [[228, "index-7"]], "ndims_s32": [[228, "index-43"]], "nnz_s64": [[228, "index-54"]], "num_handles_s32": [[228, "index-55"]], "num_of_inputs_s32": [[228, "index-4"]], "num_of_outputs_s32": [[228, "index-5"]], "p_f32": [[228, "index-27"]], "padded_dims": [[228, "index-47"]], "padded_offsets": [[228, "index-48"]], "padding_l": [[228, "index-17"]], "padding_r": [[228, "index-18"]], "primitive_kind": [[228, "index-3"]], "query": [[228, "index-0"]], "reorder_dst_engine": [[228, "index-10"]], "reorder_src_engine": [[228, "index-9"]], "scratchpad_engine": [[228, "index-8"], [598, "index-43"]], "scratchpad_md": [[228, "index-41"]], "src_md": [[228, "index-34"]], "submemory_offset_s64": [[228, "index-46"]], "time_estimate_f64": [[228, "index-6"]], "weights_md": [[228, "index-36"]], "workspace_md": [[228, "index-40"]], "dnnl_query_activation_kind": [[229, "index-31"]], "dnnl_query_alg_kind": [[229, "index-21"]], "dnnl_query_alpha_f32": [[229, "index-22"]], "dnnl_query_axis_s32": [[229, "index-24"]], "dnnl_query_beta_f32": [[229, "index-23"]], "dnnl_query_cache_blob_id": [[229, "index-14"]], "dnnl_query_cache_blob_id_size_s64": [[229, "index-13"]], "dnnl_query_cell_kind": [[229, "index-29"]], "dnnl_query_data_type": [[229, "index-46"]], "dnnl_query_diff_dst_md": [[229, "index-40"]], "dnnl_query_diff_src_md": [[229, "index-36"]], "dnnl_query_diff_weights_md": [[229, "index-38"]], "dnnl_query_dilations": [[229, "index-16"]], "dnnl_query_dims": [[229, "index-45"]], "dnnl_query_direction": [[229, "index-30"]], "dnnl_query_dst_md": [[229, "index-39"]], "dnnl_query_engine": [[229, "index-2"]], "dnnl_query_epsilon_f32": [[229, "index-19"]], "dnnl_query_exec_arg_md": [[229, "index-43"]], "dnnl_query_factors": [[229, "index-28"]], "dnnl_query_flags": [[229, "index-20"]], "dnnl_query_format_kind": [[229, "index-50"]], "dnnl_query_group_size_s64": [[229, "index-33"]], "dnnl_query_impl_info_str": [[229, "index-9"]], "dnnl_query_inner_blks": [[229, "index-52"]], "dnnl_query_inner_idxs": [[229, "index-53"]], "dnnl_query_inner_nblks_s32": [[229, "index-51"]], "dnnl_query_k_f32": [[229, "index-26"]], "dnnl_query_kernel": [[229, "index-32"]], "dnnl_query_local_size_s64": [[229, "index-25"]], "dnnl_query_memory_consumption_s64": [[229, "index-7"]], "dnnl_query_ndims_s32": [[229, "index-44"]], "dnnl_query_nnz_s64": [[229, "index-55"]], "dnnl_query_num_handles_s32": [[229, "index-56"]], "dnnl_query_num_of_inputs_s32": [[229, "index-4"]], "dnnl_query_num_of_outputs_s32": [[229, "index-5"]], "dnnl_query_p_f32": [[229, "index-27"]], "dnnl_query_padded_dims": [[229, "index-48"]], "dnnl_query_padded_offsets": [[229, "index-49"]], "dnnl_query_padding_l": [[229, "index-17"]], "dnnl_query_padding_r": [[229, "index-18"]], "dnnl_query_primitive_kind": [[229, "index-3"]], "dnnl_query_prop_kind": [[229, "index-12"]], "dnnl_query_reorder_dst_engine": [[229, "index-11"]], "dnnl_query_reorder_src_engine": [[229, "index-10"]], "dnnl_query_scratchpad_engine": [[229, "index-8"]], "dnnl_query_scratchpad_md": [[229, "index-42"]], "dnnl_query_some_md": [[229, "index-34"]], "dnnl_query_sparse_encoding": [[229, "index-54"]], "dnnl_query_src_md": [[229, "index-35"]], "dnnl_query_strides": [[229, "index-15"]], "dnnl_query_submemory_offset_s64": [[229, "index-47"]], "dnnl_query_t": [[229, "index-0"]], "dnnl_query_time_estimate_f64": [[229, "index-6"]], "dnnl_query_undef": [[229, "index-1"]], "dnnl_query_weights_md": [[229, "index-37"]], "dnnl_query_workspace_md": [[229, "index-41"]], "bidirectional_concat": [[230, "index-4"]], "bidirectional_sum": [[230, "index-5"]], "rnn_direction": [[230, "index-0"]], "unidirectional_left2right": [[230, "index-2"]], "unidirectional_right2left": [[230, "index-3"]], "dnnl_bidirectional_concat": [[231, "index-4"]], "dnnl_bidirectional_sum": [[231, "index-5"]], "dnnl_rnn_direction_t": [[231, "index-0"]], "dnnl_rnn_direction_undef": [[231, "index-1"]], "dnnl_unidirectional_left2right": [[231, "index-2"]], "dnnl_unidirectional_right2left": [[231, "index-3"]], "diff_weights_overwrite": [[232, "index-2"]], "rnn_flags": [[232, "index-0"]], "dnnl_rnn_flags_diff_weights_overwrite": [[233, "index-2"]], "dnnl_rnn_flags_t": [[233, "index-0"]], "dnnl_rnn_flags_undef": [[233, "index-1"]], "environment": [[234, "index-1"]], "rounding_mode": [[234, "index-0"]], "stochastic": [[234, "index-2"]], "dnnl_rounding_mode_environment": [[235, "index-1"]], "dnnl_rounding_mode_stochastic": [[235, "index-2"]], "dnnl_rounding_mode_t": [[235, "index-0"]], "library": [[236, "index-1"]], "scratchpad_mode": [[236, "index-0"]], "user": [[236, "index-2"]], "dnnl_scratchpad_mode_library": [[237, "index-1"]], "dnnl_scratchpad_mode_t": [[237, "index-0"]], "dnnl_scratchpad_mode_user": [[237, "index-2"]], "dnnl_coo": [[238, "index-4"]], "dnnl_csr": [[238, "index-2"]], "dnnl_packed": [[238, "index-3"]], "dnnl_sparse_encoding_t": [[238, "index-0"]], "dnnl_sparse_encoding_undef": [[238, "index-1"]], "dnnl_invalid_arguments": [[240, "index-3"]], "dnnl_invalid_data_type": [[240, "index-11"]], "dnnl_invalid_graph": [[240, "index-8"]], "dnnl_invalid_graph_op": [[240, "index-9"]], "dnnl_invalid_shape": [[240, "index-10"]], "dnnl_last_impl_reached": [[240, "index-5"]], "dnnl_not_required": [[240, "index-7"]], "dnnl_out_of_memory": [[240, "index-2"]], "dnnl_runtime_error": [[240, "index-6"]], "dnnl_status_t": [[240, "index-0"]], "dnnl_success": [[240, "index-1"]], "dnnl_unimplemented": [[240, "index-4"]], "default_flags": [[241, "index-3"]], "in_order": [[241, "index-1"]], "out_of_order": [[241, "index-2"]], "dnnl_stream_default_flags": [[242, "index-2"]], "dnnl_stream_flags_t": [[242, "index-0"]], "dnnl_stream_out_of_order": [[242, "index-1"]], "dnnl_sycl_interop_buffer": [[244, "index-2"]], "dnnl_sycl_interop_memory_kind_t": [[244, "index-0"]], "dnnl_sycl_interop_usm": [[244, "index-1"]], "no_trans": [[245, "index-2"]], "pack32": [[245, "index-4"]], "pack_type": [[245, "index-0"]], "trans": [[245, "index-3"]], "augru.cpp": [[246, "index-0"]], "example": [[246, "index-0"], [247, "index-0"], [248, "index-0"], [249, "index-0"], [250, "index-0"], [251, "index-0"], [252, "index-0"], [253, "index-0"], [254, "index-0"], [255, "index-0"], [256, "index-0"], [257, "index-0"], [258, "index-0"], [259, "index-0"], [260, "index-0"], [261, "index-0"], [262, "index-0"], [263, "index-0"], [264, "index-0"], [265, "index-0"], [266, "index-0"], [267, "index-0"], [268, "index-0"], [269, "index-0"], [270, "index-0"], [271, "index-0"], [272, "index-0"], [273, "index-0"], [274, "index-0"], [275, "index-0"], [276, "index-0"], [277, "index-0"], [278, "index-0"], [279, "index-0"], [280, "index-0"], [281, "index-0"], [282, "index-0"], [283, "index-0"], [284, "index-0"], [285, "index-0"], [286, "index-0"], [287, "index-0"], [288, "index-0"], [289, "index-0"], [290, "index-0"], [291, "index-0"], [292, "index-0"], [293, "index-0"], [294, "index-0"], [295, "index-0"], [296, "index-0"], [297, "index-0"], [298, "index-0"], [299, "index-0"], [300, "index-0"], [301, "index-0"], [302, "index-0"], [303, "index-0"]], "batch_normalization.cpp": [[247, "index-0"]], "binary.cpp": [[248, "index-0"]], "bnorm_u8_via_binary_postops.cpp": [[249, "index-0"]], "cnn_inference_f32.c": [[250, "index-0"]], "cnn_inference_f32.cpp": [[251, "index-0"]], "cnn_inference_int8.cpp": [[252, "index-0"]], "cnn_training_bf16.cpp": [[253, "index-0"]], "cnn_training_f32.cpp": [[254, "index-0"]], "concat.cpp": [[255, "index-0"]], "convolution.cpp": [[256, "index-0"]], "cpu_brgemm.cpp": [[257, "index-0"]], "cpu_cnn_training_f32.c": [[258, "index-0"]], "cpu_getting_started.cpp": [[259, "index-0"]], "cpu_inference_int8.cpp": [[260, "index-0"]], "cpu_matmul_coo.cpp": [[261, "index-0"]], "cpu_matmul_csr.cpp": [[262, "index-0"]], "cpu_matmul_quantization.cpp": [[263, "index-0"]], "cpu_matmul_weights_compression.cpp": [[264, "index-0"]], "cpu_rnn_inference_f32.cpp": [[265, "index-0"]], "cpu_rnn_inference_int8.cpp": [[266, "index-0"]], "cpu_sgemm_and_matmul.cpp": [[267, "index-0"]], "cpu_single_op_partition.cpp": [[268, "index-0"]], "cross_engine_reorder.c": [[269, "index-0"]], "cross_engine_reorder.cpp": [[270, "index-0"]], "deconvolution.cpp": [[271, "index-0"]], "eltwise.cpp": [[272, "index-0"]], "getting_started.cpp": [[273, "index-0"]], "gpu_opencl_getting_started.cpp": [[274, "index-0"]], "gpu_opencl_interop.cpp": [[275, "index-0"]], "group_normalization.cpp": [[276, "index-0"]], "inference_int8_matmul.cpp": [[277, "index-0"]], "inner_product.cpp": [[278, "index-0"]], "layer_normalization.cpp": [[279, "index-0"]], "lbr_gru.cpp": [[280, "index-0"]], "lrn.cpp": [[281, "index-0"]], "lstm.cpp": [[282, "index-0"]], "matmul.cpp": [[283, "index-0"]], "matmul_f8_quantization.cpp": [[284, "index-0"]], "matmul_perf.cpp": [[285, "index-0"]], "matmul_with_host_scalar_scale.cpp": [[286, "index-0"]], "memory_format_propagation.cpp": [[287, "index-0"]], "performance_profiling.cpp": [[288, "index-0"]], "pooling.cpp": [[289, "index-0"]], "prelu.cpp": [[290, "index-0"]], "reduction.cpp": [[291, "index-0"]], "reorder.cpp": [[292, "index-0"]], "resampling.cpp": [[293, "index-0"]], "rnn_training_f32.cpp": [[294, "index-0"]], "shuffle.cpp": [[295, "index-0"]], "softmax.cpp": [[296, "index-0"]], "sum.cpp": [[297, "index-0"]], "sycl_getting_started.cpp": [[298, "index-0"]], "sycl_interop_buffer.cpp": [[299, "index-0"]], "sycl_interop_usm.cpp": [[300, "index-0"]], "sycl_single_op_partition.cpp": [[301, "index-0"]], "vanilla_rnn.cpp": [[302, "index-0"]], "weights_decompression_matmul.cpp": [[303, "index-0"]], "compute_naive_quantization": [[304, "index-6"]], "decode_f8_e4m3": [[304, "index-2"]], "decode_f8_e5m2": [[304, "index-3"]], "get_f8_type_name": [[304, "index-4"]], "global": [[304, "index-0"]], "namespace": [[304, "index-0"], [372, "index-0"], [373, "index-0"], [374, "index-0"], [375, "index-0"], [376, "index-0"], [377, "index-0"], [378, "index-0"], [379, "index-0"], [380, "index-0"], [381, "index-0"], [382, "index-0"]], "perform_matmul_with_f8_quantization": [[304, "index-7"]], "return_max_value": [[304, "index-5"]], "set_any_layout": [[304, "index-1"]], "group": [[309, "index-0"], [310, "index-0"], [311, "index-0"], [312, "index-0"], [313, "index-0"], [314, "index-0"], [315, "index-0"], [316, "index-0"], [317, "index-0"], [318, "index-0"], [319, "index-0"], [320, "index-0"], [321, "index-0"], [322, "index-0"], [323, "index-0"], [324, "index-0"], [325, "index-0"], [326, "index-0"], [327, "index-0"], [328, "index-0"], [329, "index-0"], [330, "index-0"], [331, "index-0"], [332, "index-0"], [333, "index-0"], [334, "index-0"], [335, "index-0"], [336, "index-0"], [337, "index-0"], [338, "index-0"], [339, "index-0"], [340, "index-0"], [341, "index-0"], [342, "index-0"], [343, "index-0"], [344, "index-0"], [345, "index-0"], [346, "index-0"], [347, "index-0"], [348, "index-0"], [349, "index-0"], [350, "index-0"], [351, "index-0"], [352, "index-0"], [353, "index-0"], [354, "index-0"], [355, "index-0"], [356, "index-0"], [357, "index-0"], [358, "index-0"], [359, "index-0"], [360, "index-0"], [361, "index-0"], [362, "index-0"], [363, "index-0"], [364, "index-0"], [365, "index-0"], [366, "index-0"], [367, "index-0"], [368, "index-0"], [369, "index-0"]], "onednn api": [[309, "index-0"]], "convert_to_c": [[310, "index-1"], [311, "index-5"], [311, "index-6"], [311, "index-7"], [311, "index-8"], [311, "index-9"], [321, "index-2"], [322, "index-1"], [335, "index-5"], [335, "index-6"], [335, "index-7"], [340, "index-1"], [340, "index-2"], [376, "index-1"], [377, "index-1"]], "attributes": [[311, "index-0"]], "const_dnnl_post_ops_t": [[311, "index-4"]], "const_dnnl_primitive_attr_t": [[311, "index-2"]], "dnnl_post_ops_append_binary": [[311, "index-48"]], "dnnl_post_ops_append_binary_v2": [[311, "index-49"]], "dnnl_post_ops_append_dw": [[311, "index-46"]], "dnnl_post_ops_append_eltwise": [[311, "index-44"]], "dnnl_post_ops_append_prelu": [[311, "index-52"]], "dnnl_post_ops_append_sum": [[311, "index-42"]], "dnnl_post_ops_clone": [[311, "index-38"]], "dnnl_post_ops_create": [[311, "index-37"]], "dnnl_post_ops_destroy": [[311, "index-39"]], "dnnl_post_ops_get_kind": [[311, "index-41"]], "dnnl_post_ops_get_params_binary": [[311, "index-50"]], "dnnl_post_ops_get_params_binary_v2": [[311, "index-51"]], "dnnl_post_ops_get_params_dw": [[311, "index-47"]], "dnnl_post_ops_get_params_eltwise": [[311, "index-45"]], "dnnl_post_ops_get_params_prelu": [[311, "index-53"]], "dnnl_post_ops_get_params_sum": [[311, "index-43"]], "dnnl_post_ops_len": [[311, "index-40"]], "dnnl_post_ops_t": [[311, "index-3"]], "dnnl_primitive_attr_clone": [[311, "index-11"]], "dnnl_primitive_attr_create": [[311, "index-10"]], "dnnl_primitive_attr_destroy": [[311, "index-12"]], "dnnl_primitive_attr_get_accumulation_mode": [[311, "index-21"]], "dnnl_primitive_attr_get_deterministic": [[311, "index-19"]], "dnnl_primitive_attr_get_dropout": [[311, "index-13"]], "dnnl_primitive_attr_get_fpmath_mode": [[311, "index-15"]], "dnnl_primitive_attr_get_fpmath_mode_v2": [[311, "index-17"]], "dnnl_primitive_attr_get_post_ops": [[311, "index-35"]], "dnnl_primitive_attr_get_rnn_data_qparams": [[311, "index-55"]], "dnnl_primitive_attr_get_rnn_weights_projection_qparams": [[311, "index-59"]], "dnnl_primitive_attr_get_rnn_weights_qparams": [[311, "index-57"]], "dnnl_primitive_attr_get_rounding": [[311, "index-34"]], "dnnl_primitive_attr_get_scratchpad_mode": [[311, "index-23"]], "dnnl_primitive_attr_set_accumulation_mode": [[311, "index-22"]], "dnnl_primitive_attr_set_deterministic": [[311, "index-20"]], "dnnl_primitive_attr_set_dropout": [[311, "index-14"]], "dnnl_primitive_attr_set_fpmath_mode": [[311, "index-16"]], "dnnl_primitive_attr_set_fpmath_mode_v2": [[311, "index-18"]], "dnnl_primitive_attr_set_post_ops": [[311, "index-36"]], "dnnl_primitive_attr_set_precomputed_reductions": [[311, "index-31"]], "dnnl_primitive_attr_set_rnn_data_qparams": [[311, "index-54"]], "dnnl_primitive_attr_set_rnn_weights_projection_qparams": [[311, "index-58"]], "dnnl_primitive_attr_set_rnn_weights_qparams": [[311, "index-56"]], "dnnl_primitive_attr_set_rounding": [[311, "index-33"]], "dnnl_primitive_attr_set_scales": [[311, "index-26"]], "dnnl_primitive_attr_set_scales_mask": [[311, "index-25"]], "dnnl_primitive_attr_set_scales_v2": [[311, "index-27"]], "dnnl_primitive_attr_set_scales_v3": [[311, "index-28"]], "dnnl_primitive_attr_set_scratchpad_mode": [[311, "index-24"]], "dnnl_primitive_attr_set_zero_points": [[311, "index-30"]], "dnnl_primitive_attr_set_zero_points_mask": [[311, "index-29"]], "dnnl_primitive_attr_set_zero_points_v2": [[311, "index-32"]], "dnnl_primitive_attr_t": [[311, "index-1"]], "dnnl_batch_normalization_backward_primitive_desc_create": [[312, "index-2"]], "dnnl_batch_normalization_forward_primitive_desc_create": [[312, "index-1"]], "dnnl_binary_primitive_desc_create": [[313, "index-1"]], "dnnl_binary_primitive_desc_create_v2": [[313, "index-2"]], "blas functions": [[314, "index-0"]], "dnnl_gemm_s8s8s32": [[314, "index-6"]], "dnnl_gemm_u8s8s32": [[314, "index-5"]], "dnnl_sgemm": [[314, "index-4"]], "gemm_s8s8s32": [[314, "index-3"], [378, "index-5"]], "gemm_u8s8s32": [[314, "index-2"], [378, "index-4"]], "sgemm": [[314, "index-1"], [378, "index-3"]], "common api": [[315, "index-0"]], "dnnl_concat_primitive_desc_create": [[316, "index-1"]], "dnnl_convolution_backward_data_primitive_desc_create": [[317, "index-2"]], "dnnl_convolution_backward_weights_primitive_desc_create": [[317, "index-3"]], "dnnl_convolution_forward_primitive_desc_create": [[317, "index-1"]], "dnnl_max_ndims": [[318, "index-3"]], "define": [[318, "index-3"], [329, "index-40"], [329, "index-41"], [329, "index-42"], [329, "index-43"], [329, "index-44"], [329, "index-45"], [335, "index-21"], [335, "index-22"], [335, "index-23"], [335, "index-24"], [335, "index-25"], [335, "index-26"], [335, "index-27"], [335, "index-28"], [335, "index-29"], [335, "index-30"], [335, "index-31"], [335, "index-32"], [335, "index-33"], [335, "index-34"], [335, "index-35"], [335, "index-36"], [335, "index-37"], [335, "index-38"], [335, "index-39"], [335, "index-40"], [335, "index-41"], [335, "index-42"], [335, "index-43"], [335, "index-44"], [335, "index-45"], [335, "index-46"], [335, "index-47"], [335, "index-48"], [335, "index-49"], [335, "index-50"], [335, "index-51"], [335, "index-52"], [335, "index-53"], [335, "index-54"], [335, "index-55"], [335, "index-56"], [335, "index-57"], [335, "index-58"], [335, "index-59"], [335, "index-60"], [335, "index-61"], [335, "index-62"], [335, "index-63"], [335, "index-64"], [335, "index-65"], [335, "index-66"], [335, "index-67"], [335, "index-68"], [335, "index-69"], [335, "index-70"], [335, "index-71"], [335, "index-72"], [335, "index-73"], [335, "index-74"], [335, "index-75"], [335, "index-76"], [335, "index-77"], [335, "index-78"], [335, "index-79"], [335, "index-80"], [335, "index-81"], [335, "index-82"], [335, "index-83"], [335, "index-84"], [335, "index-85"], [335, "index-86"], [335, "index-87"], [335, "index-88"], [335, "index-89"], [335, "index-90"], [335, "index-91"], [335, "index-92"], [335, "index-93"], [335, "index-94"], [335, "index-95"], [335, "index-96"], [335, "index-97"], [341, "index-22"], [341, "index-23"], [341, "index-24"], [341, "index-25"], [341, "index-26"], [341, "index-27"], [362, "index-6"], [362, "index-7"]], "dnnl_dim_t": [[318, "index-1"]], "dnnl_dims_t": [[318, "index-2"]], "dnnl_deconvolution_backward_data_primitive_desc_create": [[319, "index-2"]], "dnnl_deconvolution_backward_weights_primitive_desc_create": [[319, "index-3"]], "dnnl_deconvolution_forward_primitive_desc_create": [[319, "index-1"]], "dnnl_eltwise_backward_primitive_desc_create": [[320, "index-2"]], "dnnl_eltwise_forward_primitive_desc_create": [[320, "index-1"]], "dnnl_engine_create": [[321, "index-4"]], "dnnl_engine_destroy": [[321, "index-6"]], "dnnl_engine_get_count": [[321, "index-3"]], "dnnl_engine_get_kind": [[321, "index-5"]], "dnnl_engine_t": [[321, "index-1"]], "dnnl_get_default_fpmath_mode": [[322, "index-2"]], "dnnl_set_default_fpmath_mode": [[322, "index-3"]], "dnnl_group_normalization_backward_primitive_desc_create": [[323, "index-2"]], "dnnl_group_normalization_forward_primitive_desc_create": [[323, "index-1"]], "dnnl_inner_product_backward_data_primitive_desc_create": [[324, "index-2"]], "dnnl_inner_product_backward_weights_primitive_desc_create": [[324, "index-3"]], "dnnl_inner_product_forward_primitive_desc_create": [[324, "index-1"]], "runtime interoperability api": [[325, "index-0"], [361, "index-0"]], "dnnl_layer_normalization_backward_primitive_desc_create": [[326, "index-2"]], "dnnl_layer_normalization_backward_primitive_desc_create_v2": [[326, "index-4"]], "dnnl_layer_normalization_forward_primitive_desc_create": [[326, "index-1"]], "dnnl_layer_normalization_forward_primitive_desc_create_v2": [[326, "index-3"]], "dnnl_lrn_backward_primitive_desc_create": [[327, "index-2"]], "dnnl_lrn_forward_primitive_desc_create": [[327, "index-1"]], "dnnl_matmul_primitive_desc_create": [[328, "index-1"]], "dnnl_memory_allocate": [[329, "index-40"]], "dnnl_memory_none": [[329, "index-41"]], "dnnl_runtime_dim_val": [[329, "index-42"]], "dnnl_runtime_f32_val": [[329, "index-43"]], "dnnl_runtime_s32_val": [[329, "index-44"]], "dnnl_runtime_size_val": [[329, "index-45"]], "memory": [[329, "index-0"], [537, "index-2"], [579, "index-3"], [579, "index-4"], [579, "index-5"], [579, "index-6"], [579, "index-7"]], "const_dnnl_memory_desc_t": [[329, "index-2"]], "const_dnnl_memory_t": [[329, "index-4"]], "dnnl_data_type_size": [[329, "index-23"]], "dnnl_memory_create": [[329, "index-24"]], "dnnl_memory_create_host_scalar": [[329, "index-26"]], "dnnl_memory_create_v2": [[329, "index-25"]], "dnnl_memory_desc_clone": [[329, "index-6"]], "dnnl_memory_desc_create_host_scalar": [[329, "index-14"]], "dnnl_memory_desc_create_submemory": [[329, "index-15"]], "dnnl_memory_desc_create_with_blob": [[329, "index-8"]], "dnnl_memory_desc_create_with_coo_encoding": [[329, "index-12"]], "dnnl_memory_desc_create_with_csr_encoding": [[329, "index-11"]], "dnnl_memory_desc_create_with_packed_encoding": [[329, "index-13"]], "dnnl_memory_desc_create_with_strides": [[329, "index-9"]], "dnnl_memory_desc_create_with_tag": [[329, "index-10"]], "dnnl_memory_desc_destroy": [[329, "index-5"]], "dnnl_memory_desc_equal": [[329, "index-20"]], "dnnl_memory_desc_get_blob": [[329, "index-7"]], "dnnl_memory_desc_get_size": [[329, "index-21"]], "dnnl_memory_desc_get_size_v2": [[329, "index-22"]], "dnnl_memory_desc_permute_axes": [[329, "index-17"]], "dnnl_memory_desc_query": [[329, "index-18"]], "dnnl_memory_desc_query_v2": [[329, "index-19"]], "dnnl_memory_desc_reshape": [[329, "index-16"]], "dnnl_memory_desc_t": [[329, "index-1"]], "dnnl_memory_destroy": [[329, "index-39"]], "dnnl_memory_get_data_handle": [[329, "index-33"]], "dnnl_memory_get_data_handle_v2": [[329, "index-35"]], "dnnl_memory_get_engine": [[329, "index-28"]], "dnnl_memory_get_host_scalar_value": [[329, "index-37"]], "dnnl_memory_get_memory_desc": [[329, "index-27"]], "dnnl_memory_map_data": [[329, "index-29"]], "dnnl_memory_map_data_v2": [[329, "index-30"]], "dnnl_memory_set_data_handle": [[329, "index-34"]], "dnnl_memory_set_data_handle_v2": [[329, "index-36"]], "dnnl_memory_set_host_scalar_value": [[329, "index-38"]], "dnnl_memory_t": [[329, "index-3"]], "dnnl_memory_unmap_data": [[329, "index-31"]], "dnnl_memory_unmap_data_v2": [[329, "index-32"]], "opencl interoperability api": [[330, "index-0"], [363, "index-0"]], "dnnl_ocl_interop_engine_create": [[330, "index-9"]], "dnnl_ocl_interop_engine_create_from_cache_blob": [[330, "index-8"]], "dnnl_ocl_interop_engine_get_cache_blob": [[330, "index-7"]], "dnnl_ocl_interop_engine_get_cache_blob_id": [[330, "index-6"]], "dnnl_ocl_interop_engine_get_context": [[330, "index-10"]], "dnnl_ocl_interop_get_device": [[330, "index-11"]], "dnnl_ocl_interop_memory_create": [[330, "index-1"]], "dnnl_ocl_interop_memory_create_v2": [[330, "index-2"]], "dnnl_ocl_interop_memory_get_mem_object": [[330, "index-4"]], "dnnl_ocl_interop_memory_get_memory_kind": [[330, "index-3"]], "dnnl_ocl_interop_memory_set_mem_object": [[330, "index-5"]], "dnnl_ocl_interop_primitive_execute": [[330, "index-14"]], "dnnl_ocl_interop_stream_create": [[330, "index-12"]], "dnnl_ocl_interop_stream_get_command_queue": [[330, "index-13"]], "dnnl_pooling_backward_primitive_desc_create": [[331, "index-2"]], "dnnl_pooling_forward_primitive_desc_create": [[331, "index-1"]], "dnnl_prelu_backward_primitive_desc_create": [[332, "index-2"]], "dnnl_prelu_forward_primitive_desc_create": [[332, "index-1"]], "dnnl_get_primitive_cache_capacity": [[333, "index-3"]], "dnnl_set_primitive_cache_capacity": [[333, "index-4"]], "get_primitive_cache_capacity": [[333, "index-1"]], "set_primitive_cache_capacity": [[333, "index-2"]], "primitives": [[334, "index-0"]], "common": [[335, "index-0"]], "dnnl_arg_attr_dropout_mask": [[335, "index-21"]], "dnnl_arg_attr_dropout_probability": [[335, "index-22"]], "dnnl_arg_attr_dropout_seed": [[335, "index-23"]], "dnnl_arg_attr_multiple_post_op": [[335, "index-24"]], "dnnl_arg_attr_multiple_post_op_base": [[335, "index-25"]], "dnnl_arg_attr_output_scales": [[335, "index-26"]], "dnnl_arg_attr_post_op_dw": [[335, "index-27"]], "dnnl_arg_attr_precomputed_reductions": [[335, "index-28"]], "dnnl_arg_attr_rounding_seed": [[335, "index-29"]], "dnnl_arg_attr_scales": [[335, "index-30"]], "dnnl_arg_attr_zero_points": [[335, "index-31"]], "dnnl_arg_augru_attention": [[335, "index-32"]], "dnnl_arg_bias": [[335, "index-33"]], "dnnl_arg_diff_augru_attention": [[335, "index-34"]], "dnnl_arg_diff_bias": [[335, "index-35"]], "dnnl_arg_diff_dst": [[335, "index-36"]], "dnnl_arg_diff_dst_0": [[335, "index-37"]], "dnnl_arg_diff_dst_1": [[335, "index-38"]], "dnnl_arg_diff_dst_2": [[335, "index-39"]], "dnnl_arg_diff_dst_iter": [[335, "index-40"]], "dnnl_arg_diff_dst_iter_c": [[335, "index-41"]], "dnnl_arg_diff_dst_layer": [[335, "index-42"]], "dnnl_arg_diff_scale": [[335, "index-43"]], "dnnl_arg_diff_shift": [[335, "index-44"]], "dnnl_arg_diff_src": [[335, "index-45"]], "dnnl_arg_diff_src_0": [[335, "index-46"]], "dnnl_arg_diff_src_1": [[335, "index-47"]], "dnnl_arg_diff_src_2": [[335, "index-48"]], "dnnl_arg_diff_src_3": [[335, "index-49"]], "dnnl_arg_diff_src_iter": [[335, "index-50"]], "dnnl_arg_diff_src_iter_c": [[335, "index-51"]], "dnnl_arg_diff_src_layer": [[335, "index-52"]], "dnnl_arg_diff_weights": [[335, "index-53"]], "dnnl_arg_diff_weights_0": [[335, "index-54"]], "dnnl_arg_diff_weights_1": [[335, "index-55"]], "dnnl_arg_diff_weights_2": [[335, "index-56"]], "dnnl_arg_diff_weights_3": [[335, "index-57"]], "dnnl_arg_diff_weights_iter": [[335, "index-58"]], "dnnl_arg_diff_weights_layer": [[335, "index-59"]], "dnnl_arg_diff_weights_peephole": [[335, "index-60"]], "dnnl_arg_diff_weights_projection": [[335, "index-61"]], "dnnl_arg_dst": [[335, "index-62"]], "dnnl_arg_dst_0": [[335, "index-63"]], "dnnl_arg_dst_1": [[335, "index-64"]], "dnnl_arg_dst_2": [[335, "index-65"]], "dnnl_arg_dst_iter": [[335, "index-66"]], "dnnl_arg_dst_iter_c": [[335, "index-67"]], "dnnl_arg_dst_layer": [[335, "index-68"]], "dnnl_arg_from": [[335, "index-69"]], "dnnl_arg_mean": [[335, "index-70"]], "dnnl_arg_multiple_dst": [[335, "index-71"]], "dnnl_arg_multiple_src": [[335, "index-72"]], "dnnl_arg_reduce": [[335, "index-73"]], "dnnl_arg_scale": [[335, "index-74"]], "dnnl_arg_scratchpad": [[335, "index-75"]], "dnnl_arg_shift": [[335, "index-76"]], "dnnl_arg_src": [[335, "index-77"]], "dnnl_arg_src_0": [[335, "index-78"]], "dnnl_arg_src_1": [[335, "index-79"]], "dnnl_arg_src_2": [[335, "index-80"]], "dnnl_arg_src_3": [[335, "index-81"]], "dnnl_arg_src_iter": [[335, "index-82"]], "dnnl_arg_src_iter_c": [[335, "index-83"]], "dnnl_arg_src_layer": [[335, "index-84"]], "dnnl_arg_to": [[335, "index-85"]], "dnnl_arg_undef": [[335, "index-86"]], "dnnl_arg_variance": [[335, "index-87"]], "dnnl_arg_weights": [[335, "index-88"]], "dnnl_arg_weights_0": [[335, "index-89"]], "dnnl_arg_weights_1": [[335, "index-90"]], "dnnl_arg_weights_2": [[335, "index-91"]], "dnnl_arg_weights_3": [[335, "index-92"]], "dnnl_arg_weights_iter": [[335, "index-93"]], "dnnl_arg_weights_layer": [[335, "index-94"]], "dnnl_arg_weights_peephole": [[335, "index-95"]], "dnnl_arg_weights_projection": [[335, "index-96"]], "dnnl_arg_workspace": [[335, "index-97"]], "const_dnnl_primitive_desc_t": [[335, "index-2"]], "const_dnnl_primitive_t": [[335, "index-4"]], "dnnl_primitive_create": [[335, "index-15"]], "dnnl_primitive_create_from_cache_blob": [[335, "index-16"]], "dnnl_primitive_desc_clone": [[335, "index-9"]], "dnnl_primitive_desc_destroy": [[335, "index-11"]], "dnnl_primitive_desc_get_attr": [[335, "index-10"]], "dnnl_primitive_desc_next_impl": [[335, "index-8"]], "dnnl_primitive_desc_query": [[335, "index-12"]], "dnnl_primitive_desc_query_md": [[335, "index-13"]], "dnnl_primitive_desc_query_s32": [[335, "index-14"]], "dnnl_primitive_desc_t": [[335, "index-1"]], "dnnl_primitive_destroy": [[335, "index-20"]], "dnnl_primitive_execute": [[335, "index-17"]], "dnnl_primitive_get_cache_blob": [[335, "index-19"]], "dnnl_primitive_get_primitive_desc": [[335, "index-18"]], "dnnl_primitive_t": [[335, "index-3"]], "profiling": [[336, "index-0"]], "dnnl_query_profiling_data": [[336, "index-4"]], "dnnl_reset_profiling": [[336, "index-3"]], "get_profiling_data": [[336, "index-2"]], "reset_profiling": [[336, "index-1"]], "dnnl_reduction_primitive_desc_create": [[337, "index-1"]], "dnnl_reorder_primitive_desc_create": [[338, "index-1"]], "dnnl_resampling_backward_primitive_desc_create": [[339, "index-2"]], "dnnl_resampling_forward_primitive_desc_create": [[339, "index-1"]], "dnnl_augru_backward_primitive_desc_create": [[340, "index-12"]], "dnnl_augru_forward_primitive_desc_create": [[340, "index-11"]], "dnnl_gru_backward_primitive_desc_create": [[340, "index-8"]], "dnnl_gru_forward_primitive_desc_create": [[340, "index-7"]], "dnnl_lbr_augru_backward_primitive_desc_create": [[340, "index-14"]], "dnnl_lbr_augru_forward_primitive_desc_create": [[340, "index-13"]], "dnnl_lbr_gru_backward_primitive_desc_create": [[340, "index-10"]], "dnnl_lbr_gru_forward_primitive_desc_create": [[340, "index-9"]], "dnnl_lstm_backward_primitive_desc_create": [[340, "index-6"]], "dnnl_lstm_forward_primitive_desc_create": [[340, "index-5"]], "dnnl_vanilla_rnn_backward_primitive_desc_create": [[340, "index-4"]], "dnnl_vanilla_rnn_forward_primitive_desc_create": [[340, "index-3"]], "dnnl_jit_profile_linux_jitdump": [[341, "index-22"]], "dnnl_jit_profile_linux_jitdump_use_tsc": [[341, "index-23"]], "dnnl_jit_profile_linux_perf": [[341, "index-24"]], "dnnl_jit_profile_linux_perfmap": [[341, "index-25"]], "dnnl_jit_profile_none": [[341, "index-26"]], "dnnl_jit_profile_vtune": [[341, "index-27"]], "service": [[341, "index-0"]], "dnnl_get_cpu_isa_hints": [[341, "index-19"]], "dnnl_get_effective_cpu_isa": [[341, "index-17"]], "dnnl_set_cpu_isa_hints": [[341, "index-18"]], "dnnl_set_jit_dump": [[341, "index-13"]], "dnnl_set_jit_profiling_flags": [[341, "index-14"]], "dnnl_set_jit_profiling_jitdumpdir": [[341, "index-15"]], "dnnl_set_max_cpu_isa": [[341, "index-16"]], "dnnl_set_verbose": [[341, "index-20"]], "dnnl_version": [[341, "index-21"]], "get_cpu_isa_hints": [[341, "index-12"]], "get_default_fpmath_mode": [[341, "index-4"]], "get_effective_cpu_isa": [[341, "index-10"]], "set_cpu_isa_hints": [[341, "index-11"]], "set_default_fpmath_mode": [[341, "index-5"]], "set_jit_dump": [[341, "index-6"]], "set_jit_profiling_flags": [[341, "index-7"]], "set_jit_profiling_jitdumpdir": [[341, "index-8"]], "set_max_cpu_isa": [[341, "index-9"]], "set_verbose": [[341, "index-2"]], "version": [[341, "index-3"]], "version_t": [[341, "index-1"]], "dnnl_shuffle_backward_primitive_desc_create": [[342, "index-2"]], "dnnl_shuffle_forward_primitive_desc_create": [[342, "index-1"]], "dnnl_softmax_backward_primitive_desc_create": [[343, "index-2"]], "dnnl_softmax_forward_primitive_desc_create": [[343, "index-1"]], "stream": [[344, "index-0"], [617, "index-1"], [617, "index-2"]], "const_dnnl_stream_t": [[344, "index-2"]], "dnnl_stream_create": [[344, "index-3"]], "dnnl_stream_destroy": [[344, "index-6"]], "dnnl_stream_get_engine": [[344, "index-4"]], "dnnl_stream_t": [[344, "index-1"]], "dnnl_stream_wait": [[344, "index-5"]], "dnnl_sum_primitive_desc_create": [[345, "index-1"]], "sycl interoperability api": [[346, "index-0"], [367, "index-0"]], "dnnl_sycl_interop_engine_create": [[346, "index-1"]], "dnnl_sycl_interop_engine_get_context": [[346, "index-2"]], "dnnl_sycl_interop_engine_get_device": [[346, "index-3"]], "dnnl_sycl_interop_memory_create": [[346, "index-4"]], "dnnl_sycl_interop_memory_create_v2": [[346, "index-5"]], "dnnl_sycl_interop_memory_get_memory_kind": [[346, "index-6"]], "dnnl_sycl_interop_memory_set_buffer": [[346, "index-7"]], "dnnl_sycl_interop_primitive_execute": [[346, "index-10"]], "dnnl_sycl_interop_stream_create": [[346, "index-8"]], "dnnl_sycl_interop_stream_get_queue": [[346, "index-9"]], "threadpool interoperability api": [[347, "index-0"]], "dnnl_threadpool_interop_gemm_s8s8s32": [[347, "index-7"]], "dnnl_threadpool_interop_gemm_u8s8s32": [[347, "index-6"]], "dnnl_threadpool_interop_get_max_concurrency": [[347, "index-4"]], "dnnl_threadpool_interop_set_max_concurrency": [[347, "index-3"]], "dnnl_threadpool_interop_sgemm": [[347, "index-5"]], "dnnl_threadpool_interop_stream_create": [[347, "index-1"]], "dnnl_threadpool_interop_stream_get_threadpool": [[347, "index-2"]], "ukernels": [[348, "index-0"]], "const_dnnl_ukernel_attr_params_t": [[348, "index-2"]], "dnnl_ukernel_attr_params_create": [[348, "index-3"]], "dnnl_ukernel_attr_params_destroy": [[348, "index-8"]], "dnnl_ukernel_attr_params_set_a_scales": [[348, "index-5"]], "dnnl_ukernel_attr_params_set_b_scales": [[348, "index-6"]], "dnnl_ukernel_attr_params_set_d_scales": [[348, "index-7"]], "dnnl_ukernel_attr_params_set_post_ops_args": [[348, "index-4"]], "dnnl_ukernel_attr_params_t": [[348, "index-1"]], "brgemm ukernel": [[349, "index-0"]], "const_dnnl_brgemm_t": [[349, "index-2"]], "dnnl_brgemm_create": [[349, "index-3"]], "dnnl_brgemm_destroy": [[349, "index-18"]], "dnnl_brgemm_execute": [[349, "index-16"]], "dnnl_brgemm_execute_postops": [[349, "index-17"]], "dnnl_brgemm_finalize": [[349, "index-9"]], "dnnl_brgemm_generate": [[349, "index-15"]], "dnnl_brgemm_get_b_pack_type": [[349, "index-10"]], "dnnl_brgemm_get_scratchpad_size": [[349, "index-11"]], "dnnl_brgemm_is_execute_postops_valid": [[349, "index-12"]], "dnnl_brgemm_release_hw_context": [[349, "index-14"]], "dnnl_brgemm_set_a_scales": [[349, "index-6"]], "dnnl_brgemm_set_b_scales": [[349, "index-7"]], "dnnl_brgemm_set_d_scales": [[349, "index-8"]], "dnnl_brgemm_set_add_c": [[349, "index-4"]], "dnnl_brgemm_set_hw_context": [[349, "index-13"]], "dnnl_brgemm_set_post_ops": [[349, "index-5"]], "dnnl_brgemm_t": [[349, "index-1"]], "transform ukernel": [[350, "index-0"]], "const_dnnl_transform_t": [[350, "index-2"]], "dnnl_transform_create": [[350, "index-3"]], "dnnl_transform_destroy": [[350, "index-6"]], "dnnl_transform_execute": [[350, "index-5"]], "dnnl_transform_generate": [[350, "index-4"]], "dnnl_transform_t": [[350, "index-1"]], "ukernel utils": [[351, "index-0"]], "utilities": [[352, "index-0"], [369, "index-0"]], "graph api": [[353, "index-0"]], "const_dnnl_graph_allocator_t": [[354, "index-4"]], "dnnl_graph_allocator_create": [[354, "index-5"]], "dnnl_graph_allocator_destroy": [[354, "index-6"]], "dnnl_graph_allocator_t": [[354, "index-3"]], "dnnl_graph_host_allocate_f": [[354, "index-1"]], "dnnl_graph_host_deallocate_f": [[354, "index-2"]], "compiled partition": [[355, "index-0"]], "const_dnnl_graph_compiled_partition_t": [[355, "index-2"]], "dnnl_graph_compiled_partition_create": [[355, "index-3"]], "dnnl_graph_compiled_partition_destroy": [[355, "index-5"]], "dnnl_graph_compiled_partition_execute": [[355, "index-4"]], "dnnl_graph_compiled_partition_get_inplace_ports": [[355, "index-7"]], "dnnl_graph_compiled_partition_query_logical_tensor": [[355, "index-6"]], "dnnl_graph_compiled_partition_t": [[355, "index-1"]], "compiled partition cache": [[356, "index-0"]], "dnnl_graph_get_compiled_partition_cache_capacity": [[356, "index-3"]], "dnnl_graph_set_compiled_partition_cache_capacity": [[356, "index-4"]], "get_compiled_partition_cache_capacity": [[356, "index-1"]], "set_compiled_partition_cache_capacity": [[356, "index-2"]], "dnnl_graph_get_constant_tensor_cache": [[357, "index-6"]], "dnnl_graph_get_constant_tensor_cache_capacity": [[357, "index-8"]], "dnnl_graph_set_constant_tensor_cache": [[357, "index-5"]], "dnnl_graph_set_constant_tensor_cache_capacity": [[357, "index-7"]], "get_constant_tensor_cache": [[357, "index-2"]], "get_constant_tensor_cache_capacity": [[357, "index-4"]], "set_constant_tensor_cache": [[357, "index-1"]], "set_constant_tensor_cache_capacity": [[357, "index-3"]], "dump mode": [[358, "index-0"]], "dnnl_graph_set_dump_mode": [[358, "index-2"]], "set_dump_mode": [[358, "index-1"]], "dnnl_graph_make_engine_with_allocator": [[359, "index-2"]], "make_engine_with_allocator": [[359, "index-1"], [374, "index-2"], [374, "index-3"]], "const_dnnl_graph_graph_t": [[360, "index-2"]], "dnnl_graph_add_op": [[360, "index-8"]], "dnnl_graph_graph_create": [[360, "index-3"]], "dnnl_graph_graph_create_with_fpmath_mode": [[360, "index-4"]], "dnnl_graph_graph_destroy": [[360, "index-5"]], "dnnl_graph_graph_filter": [[360, "index-11"]], "dnnl_graph_graph_finalize": [[360, "index-9"]], "dnnl_graph_graph_get_fpmath_mode": [[360, "index-7"]], "dnnl_graph_graph_get_partition_num": [[360, "index-12"]], "dnnl_graph_graph_get_partitions": [[360, "index-13"]], "dnnl_graph_graph_is_finalized": [[360, "index-10"]], "dnnl_graph_graph_set_fpmath_mode": [[360, "index-6"]], "dnnl_graph_graph_t": [[360, "index-1"]], "dnnl_graph_unknown_dim": [[362, "index-6"]], "dnnl_graph_unknown_ndims": [[362, "index-7"]], "logical tensor": [[362, "index-0"]], "dnnl_graph_logical_tensor_get_mem_size": [[362, "index-4"]], "dnnl_graph_logical_tensor_init": [[362, "index-1"]], "dnnl_graph_logical_tensor_init_with_dims": [[362, "index-2"]], "dnnl_graph_logical_tensor_init_with_strides": [[362, "index-3"]], "dnnl_graph_logical_tensor_is_equal": [[362, "index-5"]], "dnnl_graph_ocl_allocate_f": [[363, "index-1"]], "dnnl_graph_ocl_deallocate_f": [[363, "index-2"]], "dnnl_graph_ocl_interop_allocator_create": [[363, "index-3"]], "dnnl_graph_ocl_interop_compiled_partition_execute": [[363, "index-6"]], "dnnl_graph_ocl_interop_make_engine_from_cache_blob_with_allocator": [[363, "index-5"]], "dnnl_graph_ocl_interop_make_engine_with_allocator": [[363, "index-4"]], "const_dnnl_graph_op_t": [[364, "index-2"]], "dnnl_graph_op_add_input": [[364, "index-5"]], "dnnl_graph_op_add_output": [[364, "index-6"]], "dnnl_graph_op_create": [[364, "index-3"]], "dnnl_graph_op_destroy": [[364, "index-4"]], "dnnl_graph_op_get_id": [[364, "index-11"]], "dnnl_graph_op_get_kind": [[364, "index-12"]], "dnnl_graph_op_set_attr_bool": [[364, "index-8"]], "dnnl_graph_op_set_attr_f32": [[364, "index-7"]], "dnnl_graph_op_set_attr_s64": [[364, "index-9"]], "dnnl_graph_op_set_attr_str": [[364, "index-10"]], "dnnl_graph_op_t": [[364, "index-1"]], "const_dnnl_graph_partition_t": [[365, "index-2"]], "dnnl_graph_partition_compile": [[365, "index-8"]], "dnnl_graph_partition_create_with_op": [[365, "index-3"]], "dnnl_graph_partition_destroy": [[365, "index-4"]], "dnnl_graph_partition_get_engine_kind": [[365, "index-14"]], "dnnl_graph_partition_get_id": [[365, "index-7"]], "dnnl_graph_partition_get_input_ports": [[365, "index-10"]], "dnnl_graph_partition_get_input_ports_num": [[365, "index-9"]], "dnnl_graph_partition_get_op_num": [[365, "index-5"]], "dnnl_graph_partition_get_ops": [[365, "index-6"]], "dnnl_graph_partition_get_output_ports": [[365, "index-12"]], "dnnl_graph_partition_get_output_ports_num": [[365, "index-11"]], "dnnl_graph_partition_is_supported": [[365, "index-13"]], "dnnl_graph_partition_t": [[365, "index-1"]], "dnnl_graph_sycl_allocate_f": [[367, "index-1"]], "dnnl_graph_sycl_deallocate_f": [[367, "index-2"]], "dnnl_graph_sycl_interop_allocator_create": [[367, "index-3"]], "dnnl_graph_sycl_interop_compiled_partition_execute": [[367, "index-5"]], "dnnl_graph_sycl_interop_make_engine_with_allocator": [[367, "index-4"]], "const_dnnl_graph_tensor_t": [[368, "index-2"]], "dnnl_graph_tensor_create": [[368, "index-3"]], "dnnl_graph_tensor_create_scalar": [[368, "index-4"]], "dnnl_graph_tensor_destroy": [[368, "index-5"]], "dnnl_graph_tensor_get_data_handle": [[368, "index-6"]], "dnnl_graph_tensor_get_engine": [[368, "index-8"]], "dnnl_graph_tensor_get_logical_tensor": [[368, "index-9"]], "dnnl_graph_tensor_set_data_handle": [[368, "index-7"]], "dnnl_graph_tensor_t": [[368, "index-1"]], "dnnl": [[372, "index-0"]], "dnnl::graph": [[373, "index-0"]], "dnnl::graph::ocl_interop": [[374, "index-0"]], "make_allocator": [[374, "index-1"], [375, "index-1"]], "dnnl::graph::sycl_interop": [[375, "index-0"]], "dnnl::ocl_interop": [[376, "index-0"]], "get_command_queue": [[376, "index-9"]], "get_context": [[376, "index-6"], [377, "index-3"]], "get_device": [[376, "index-7"], [377, "index-4"]], "get_engine_cache_blob": [[376, "index-3"]], "get_engine_cache_blob_id": [[376, "index-2"]], "get_mem_object": [[376, "index-10"]], "get_memory_kind": [[376, "index-12"], [377, "index-9"]], "make_engine": [[376, "index-4"], [376, "index-5"], [377, "index-2"]], "make_memory": [[376, "index-13"], [376, "index-14"], [376, "index-15"], [376, "index-16"], [377, "index-10"], [377, "index-11"], [377, "index-12"]], "make_stream": [[376, "index-8"], [377, "index-5"], [378, "index-1"]], "set_mem_object": [[376, "index-11"]], "dnnl::sycl_interop": [[377, "index-0"]], "get_buffer": [[377, "index-7"]], "get_queue": [[377, "index-6"]], "set_buffer": [[377, "index-8"]], "dnnl::threadpool_interop": [[378, "index-0"]], "get_threadpool": [[378, "index-2"]], "dnnl::ukernel": [[379, "index-0"]], "oneapi": [[380, "index-0"]], "std": [[381, "index-0"]], "sycl": [[382, "index-0"]], "augru rnn primitive example": [[384, "index-0"]], "<untitled>": [[385, "index-0"], [387, "index-0"], [389, "index-0"], [391, "index-0"], [393, "index-0"], [395, "index-0"], [397, "index-0"], [399, "index-0"], [401, "index-0"], [403, "index-0"], [405, "index-0"], [407, "index-0"], [409, "index-0"], [411, "index-0"], [413, "index-0"], [415, "index-0"], [417, "index-0"], [419, "index-0"], [421, "index-0"], [423, "index-0"], [425, "index-0"], [427, "index-0"], [429, "index-0"], [431, "index-0"], [433, "index-0"], [435, "index-0"], [437, "index-0"], [439, "index-0"], [441, "index-0"], [443, "index-0"], [445, "index-0"], [447, "index-0"], [449, "index-0"], [451, "index-0"], [453, "index-0"], [455, "index-0"], [457, "index-0"], [460, "index-0"], [462, "index-0"], [464, "index-0"], [466, "index-0"], [468, "index-0"], [470, "index-0"], [472, "index-0"], [474, "index-0"], [476, "index-0"], [478, "index-0"], [480, "index-0"], [482, "index-0"], [484, "index-0"], [486, "index-0"], [488, "index-0"], [490, "index-0"], [492, "index-0"], [494, "index-0"], [496, "index-0"], [498, "index-0"], [500, "index-0"]], "batch normalization primitive example": [[386, "index-0"]], "binary primitive example": [[388, "index-0"]], "bnorm u8 by binary post-ops example": [[390, "index-0"]], "cnn f32 inference example": [[392, "index-0"], [394, "index-0"]], "cnn int8 inference example": [[396, "index-0"]], "cnn bf16 training example": [[398, "index-0"]], "cnn f32 training example": [[400, "index-0"], [408, "index-0"]], "concat primitive example": [[402, "index-0"]], "convolution primitive example": [[404, "index-0"]], "brgemm ukernel example": [[406, "index-0"]], "matmul primitive with sparse memory in coo format": [[410, "index-0"]], "matmul primitive with sparse memory in csr format": [[412, "index-0"]], "matmul tutorial: quantization": [[414, "index-0"]], "matmul primitive example": [[416, "index-0"], [463, "index-0"]], "rnn f32 inference example": [[418, "index-0"]], "rnn int8 inference example": [[420, "index-0"]], "matmul tutorial: comparison with sgemm": [[422, "index-0"]], "reorder between cpu and gpu engines": [[424, "index-0"], [426, "index-0"]], "deconvolution primitive example": [[428, "index-0"]], "element-wise primitive example": [[430, "index-0"]], "onednn api basic workflow tutorial": [[432, "index-0"]], "getting started on gpu with opencl extensions api": [[434, "index-0"]], "getting started on cpu with graph api": [[436, "index-0"]], "convolution int8 inference example with graph api": [[438, "index-0"]], "single op partition on cpu": [[440, "index-0"]], "getting started with opencl extensions and graph api": [[442, "index-0"]], "getting started with sycl extensions api and graph api": [[444, "index-0"]], "single op partition on gpu": [[446, "index-0"]], "group normalization primitive example": [[448, "index-0"]], "matmul tutorial: int8 inference": [[450, "index-0"]], "inner product primitive example": [[452, "index-0"]], "layer normalization primitive example": [[454, "index-0"]], "linear-before-reset gru rnn primitive example": [[456, "index-0"]], "legal information": [[458, "index-0"]], "local response normalization primitive example": [[459, "index-0"]], "lstm rnn primitive example": [[461, "index-0"]], "matrix multiplication with f8 quantization": [[465, "index-0"]], "matrix multiplication performance example": [[467, "index-0"]], "matmul with host scalar scale example": [[469, "index-0"]], "memory format propagation": [[471, "index-0"]], "performance profiling example": [[473, "index-0"]], "pooling primitive example": [[475, "index-0"]], "primitive example": [[477, "index-0"]], "reduction primitive example": [[479, "index-0"]], "reorder primitive example": [[481, "index-0"]], "resampling primitive example": [[483, "index-0"]], "rnn f32 training example": [[485, "index-0"]], "shuffle primitive example": [[487, "index-0"]], "softmax primitive example": [[489, "index-0"]], "sum primitive example": [[491, "index-0"]], "getting started with sycl extensions api": [[493, "index-0"]], "sycl usm example": [[495, "index-0"]], "vanilla rnn primitive example": [[497, "index-0"]], "matmul tutorial: weights decompression": [[499, "index-0"]], "args_t": [[503, "index-0"]], "struct": [[503, "index-0"], [504, "index-0"], [505, "index-0"], [506, "index-0"], [507, "index-0"], [508, "index-0"], [509, "index-0"], [510, "index-0"], [511, "index-0"], [512, "index-0"], [513, "index-0"], [514, "index-0"], [515, "index-0"], [516, "index-0"], [517, "index-0"], [518, "index-0"], [519, "index-0"], [520, "index-0"], [521, "index-0"], [522, "index-0"], [523, "index-0"], [524, "index-0"], [525, "index-0"], [526, "index-0"], [527, "index-0"], [528, "index-0"], [529, "index-0"], [530, "index-0"], [531, "index-0"], [532, "index-0"], [533, "index-0"], [534, "index-0"], [535, "index-0"], [536, "index-0"], [537, "index-0"], [538, "index-0"], [539, "index-0"], [540, "index-0"], [541, "index-0"], [542, "index-0"], [543, "index-0"], [544, "index-0"], [545, "index-0"], [546, "index-0"], [547, "index-0"], [548, "index-0"], [549, "index-0"], [550, "index-0"], [551, "index-0"], [552, "index-0"], [553, "index-0"], [554, "index-0"], [555, "index-0"], [556, "index-0"], [557, "index-0"], [558, "index-0"], [559, "index-0"], [560, "index-0"], [561, "index-0"], [562, "index-0"], [563, "index-0"], [564, "index-0"], [565, "index-0"], [566, "index-0"], [567, "index-0"], [568, "index-0"], [569, "index-0"], [570, "index-0"], [571, "index-0"], [572, "index-0"], [573, "index-0"], [574, "index-0"], [575, "index-0"], [576, "index-0"], [577, "index-0"], [578, "index-0"], [579, "index-0"], [580, "index-0"], [581, "index-0"], [582, "index-0"], [583, "index-0"], [584, "index-0"], [585, "index-0"], [586, "index-0"], [587, "index-0"], [588, "index-0"], [589, "index-0"], [590, "index-0"], [591, "index-0"], [592, "index-0"], [593, "index-0"], [594, "index-0"], [595, "index-0"], [596, "index-0"], [597, "index-0"], [598, "index-0"], [599, "index-0"], [600, "index-0"], [601, "index-0"], [602, "index-0"], [603, "index-0"], [604, "index-0"], [605, "index-0"], [606, "index-0"], [607, "index-0"], [608, "index-0"], [609, "index-0"], [610, "index-0"], [611, "index-0"], [612, "index-0"], [613, "index-0"], [614, "index-0"], [615, "index-0"], [616, "index-0"], [617, "index-0"], [618, "index-0"], [619, "index-0"], [620, "index-0"], [621, "index-0"], [622, "index-0"], [623, "index-0"], [624, "index-0"], [625, "index-0"], [626, "index-0"], [627, "index-0"], [628, "index-0"], [629, "index-0"], [630, "index-0"], [631, "index-0"], [632, "index-0"], [633, "index-0"], [634, "index-0"], [635, "index-0"], [636, "index-0"], [637, "index-0"]], "cpu_deletor_t": [[504, "index-0"]], "augru_backward": [[505, "index-1"], [505, "index-2"], [505, "index-3"]], "dnnl::augru_backward": [[505, "index-0"]], "attention_desc": [[506, "index-6"], [508, "index-6"], [561, "index-6"], [563, "index-6"]], "bias_desc": [[506, "index-9"], [508, "index-9"], [523, "index-10"], [529, "index-10"], [545, "index-8"], [547, "index-8"], [555, "index-8"], [561, "index-9"], [563, "index-9"], [565, "index-8"], [567, "index-8"], [573, "index-13"], [575, "index-13"], [577, "index-7"], [607, "index-11"], [627, "index-9"], [629, "index-9"]], "diff_attention_desc": [[506, "index-15"], [561, "index-15"]], "diff_bias_desc": [[506, "index-18"], [521, "index-10"], [527, "index-10"], [545, "index-16"], [553, "index-8"], [561, "index-18"], [565, "index-16"], [573, "index-25"], [607, "index-23"], [627, "index-17"]], "diff_dst_iter_desc": [[506, "index-20"], [545, "index-18"], [561, "index-20"], [565, "index-18"], [573, "index-27"], [607, "index-25"], [627, "index-19"]], "diff_dst_layer_desc": [[506, "index-19"], [545, "index-17"], [561, "index-19"], [565, "index-17"], [573, "index-26"], [607, "index-24"], [627, "index-18"]], "diff_src_iter_desc": [[506, "index-14"], [545, "index-13"], [561, "index-14"], [565, "index-13"], [573, "index-19"], [607, "index-17"], [627, "index-14"]], "diff_src_layer_desc": [[506, "index-13"], [545, "index-12"], [561, "index-13"], [565, "index-12"], [573, "index-18"], [607, "index-15"], [627, "index-13"]], "diff_weights_iter_desc": [[506, "index-17"], [545, "index-15"], [561, "index-17"], [565, "index-15"], [573, "index-22"], [607, "index-20"], [627, "index-16"]], "diff_weights_layer_desc": [[506, "index-16"], [545, "index-14"], [561, "index-16"], [565, "index-14"], [573, "index-21"], [607, "index-19"], [627, "index-15"]], "dnnl::augru_backward::primitive_desc": [[506, "index-0"]], "dst_iter_desc": [[506, "index-11"], [508, "index-11"], [545, "index-10"], [547, "index-10"], [561, "index-11"], [563, "index-11"], [565, "index-10"], [567, "index-10"], [573, "index-15"], [575, "index-15"], [607, "index-13"], [627, "index-11"], [629, "index-11"]], "dst_layer_desc": [[506, "index-10"], [508, "index-10"], [545, "index-9"], [547, "index-9"], [561, "index-10"], [563, "index-10"], [565, "index-9"], [567, "index-9"], [573, "index-14"], [575, "index-14"], [607, "index-12"], [627, "index-10"], [629, "index-10"]], "get_cell_kind": [[506, "index-21"], [508, "index-13"], [545, "index-19"], [547, "index-12"], [561, "index-21"], [563, "index-13"], [565, "index-19"], [567, "index-12"], [573, "index-29"], [575, "index-18"], [598, "index-22"], [627, "index-20"], [629, "index-13"]], "get_direction": [[506, "index-23"], [508, "index-15"], [545, "index-21"], [547, "index-14"], [561, "index-23"], [563, "index-15"], [565, "index-21"], [567, "index-14"], [573, "index-31"], [575, "index-20"], [598, "index-23"], [627, "index-23"], [629, "index-16"]], "get_prop_kind": [[506, "index-22"], [508, "index-14"], [510, "index-13"], [512, "index-10"], [519, "index-9"], [521, "index-12"], [523, "index-12"], [525, "index-9"], [527, "index-12"], [529, "index-12"], [531, "index-10"], [533, "index-9"], [541, "index-13"], [543, "index-10"], [545, "index-20"], [547, "index-13"], [551, "index-7"], [553, "index-9"], [555, "index-9"], [557, "index-16"], [559, "index-13"], [561, "index-22"], [563, "index-14"], [565, "index-20"], [567, "index-13"], [569, "index-8"], [571, "index-8"], [573, "index-30"], [575, "index-19"], [583, "index-8"], [585, "index-8"], [589, "index-7"], [591, "index-6"], [598, "index-27"], [609, "index-6"], [611, "index-6"], [613, "index-8"], [615, "index-7"], [627, "index-21"], [629, "index-14"]], "primitive_desc": [[506, "index-1"], [506, "index-2"], [506, "index-3"], [508, "index-1"], [508, "index-2"], [508, "index-3"], [510, "index-1"], [510, "index-2"], [510, "index-3"], [512, "index-1"], [512, "index-2"], [512, "index-3"], [514, "index-1"], [514, "index-2"], [514, "index-3"], [514, "index-4"], [517, "index-1"], [517, "index-2"], [517, "index-3"], [517, "index-4"], [519, "index-1"], [519, "index-2"], [519, "index-3"], [519, "index-4"], [521, "index-1"], [521, "index-2"], [521, "index-3"], [521, "index-4"], [521, "index-5"], [521, "index-6"], [523, "index-1"], [523, "index-2"], [523, "index-3"], [523, "index-4"], [523, "index-5"], [523, "index-6"], [525, "index-1"], [525, "index-2"], [525, "index-3"], [525, "index-4"], [527, "index-1"], [527, "index-2"], [527, "index-3"], [527, "index-4"], [527, "index-5"], [527, "index-6"], [529, "index-1"], [529, "index-2"], [529, "index-3"], [529, "index-4"], [529, "index-5"], [529, "index-6"], [531, "index-1"], [531, "index-2"], [531, "index-3"], [531, "index-4"], [531, "index-5"], [533, "index-1"], [533, "index-2"], [533, "index-3"], [533, "index-4"], [533, "index-5"], [541, "index-1"], [541, "index-2"], [541, "index-3"], [543, "index-1"], [543, "index-2"], [543, "index-3"], [545, "index-1"], [545, "index-2"], [545, "index-3"], [547, "index-1"], [547, "index-2"], [547, "index-3"], [551, "index-1"], [551, "index-2"], [551, "index-3"], [553, "index-1"], [553, "index-2"], [553, "index-3"], [553, "index-4"], [555, "index-1"], [555, "index-2"], [555, "index-3"], [555, "index-4"], [557, "index-1"], [557, "index-2"], [557, "index-3"], [557, "index-4"], [557, "index-5"], [557, "index-6"], [559, "index-1"], [559, "index-2"], [559, "index-3"], [559, "index-4"], [559, "index-5"], [559, "index-6"], [561, "index-1"], [561, "index-2"], [561, "index-3"], [563, "index-1"], [563, "index-2"], [563, "index-3"], [565, "index-1"], [565, "index-2"], [565, "index-3"], [567, "index-1"], [567, "index-2"], [567, "index-3"], [569, "index-1"], [569, "index-2"], [569, "index-3"], [571, "index-1"], [571, "index-2"], [571, "index-3"], [573, "index-1"], [573, "index-2"], [573, "index-3"], [573, "index-4"], [573, "index-5"], [575, "index-1"], [575, "index-2"], [575, "index-3"], [575, "index-4"], [575, "index-5"], [577, "index-1"], [577, "index-2"], [577, "index-3"], [577, "index-4"], [583, "index-1"], [583, "index-2"], [583, "index-3"], [585, "index-1"], [585, "index-2"], [585, "index-3"], [589, "index-1"], [589, "index-2"], [589, "index-3"], [591, "index-1"], [591, "index-2"], [591, "index-3"], [600, "index-1"], [600, "index-2"], [600, "index-3"], [602, "index-1"], [602, "index-2"], [602, "index-3"], [602, "index-4"], [604, "index-1"], [604, "index-2"], [604, "index-3"], [604, "index-4"], [606, "index-1"], [606, "index-2"], [606, "index-3"], [606, "index-4"], [606, "index-5"], [609, "index-1"], [609, "index-2"], [609, "index-3"], [611, "index-1"], [611, "index-2"], [611, "index-3"], [613, "index-1"], [613, "index-2"], [613, "index-3"], [615, "index-1"], [615, "index-2"], [615, "index-3"], [619, "index-1"], [619, "index-2"], [619, "index-3"], [619, "index-4"], [627, "index-1"], [627, "index-2"], [627, "index-3"], [627, "index-4"], [629, "index-1"], [629, "index-2"], [629, "index-3"], [629, "index-4"]], "src_iter_desc": [[506, "index-5"], [508, "index-5"], [545, "index-5"], [547, "index-5"], [561, "index-5"], [563, "index-5"], [565, "index-5"], [567, "index-5"], [573, "index-7"], [575, "index-7"], [607, "index-5"], [627, "index-6"], [629, "index-6"]], "src_layer_desc": [[506, "index-4"], [508, "index-4"], [545, "index-4"], [547, "index-4"], [561, "index-4"], [563, "index-4"], [565, "index-4"], [567, "index-4"], [573, "index-6"], [575, "index-6"], [607, "index-3"], [627, "index-5"], [629, "index-5"]], "weights_iter_desc": [[506, "index-8"], [508, "index-8"], [545, "index-7"], [547, "index-7"], [561, "index-8"], [563, "index-8"], [565, "index-7"], [567, "index-7"], [573, "index-10"], [575, "index-10"], [607, "index-8"], [627, "index-8"], [629, "index-8"]], "weights_layer_desc": [[506, "index-7"], [508, "index-7"], [545, "index-6"], [547, "index-6"], [561, "index-7"], [563, "index-7"], [565, "index-6"], [567, "index-6"], [573, "index-9"], [575, "index-9"], [607, "index-7"], [627, "index-7"], [629, "index-7"]], "workspace_desc": [[506, "index-12"], [508, "index-12"], [510, "index-12"], [512, "index-7"], [541, "index-12"], [543, "index-7"], [545, "index-11"], [547, "index-11"], [557, "index-15"], [559, "index-10"], [561, "index-12"], [563, "index-12"], [565, "index-11"], [567, "index-11"], [569, "index-6"], [571, "index-6"], [573, "index-17"], [575, "index-17"], [583, "index-6"], [585, "index-6"], [598, "index-41"], [627, "index-12"], [629, "index-12"]], "augru_forward": [[507, "index-1"], [507, "index-2"], [507, "index-3"]], "dnnl::augru_forward": [[507, "index-0"]], "dnnl::augru_forward::primitive_desc": [[508, "index-0"]], "batch_normalization_backward": [[509, "index-1"], [509, "index-2"], [509, "index-3"]], "dnnl::batch_normalization_backward": [[509, "index-0"]], "diff_dst_desc": [[510, "index-8"], [519, "index-7"], [521, "index-9"], [525, "index-7"], [527, "index-9"], [531, "index-8"], [541, "index-8"], [551, "index-6"], [553, "index-7"], [557, "index-11"], [569, "index-5"], [583, "index-5"], [589, "index-6"], [598, "index-33"], [598, "index-39"], [604, "index-6"], [609, "index-5"], [613, "index-6"]], "diff_src_desc": [[510, "index-7"], [519, "index-5"], [525, "index-5"], [531, "index-7"], [541, "index-7"], [551, "index-4"], [557, "index-10"], [569, "index-4"], [583, "index-4"], [589, "index-5"], [598, "index-32"], [598, "index-38"], [604, "index-5"], [609, "index-4"], [613, "index-5"]], "diff_weights_desc": [[510, "index-9"], [521, "index-8"], [527, "index-8"], [541, "index-9"], [553, "index-6"], [557, "index-12"], [598, "index-34"], [598, "index-40"]], "dnnl::batch_normalization_backward::primitive_desc": [[510, "index-0"]], "dst_desc": [[510, "index-6"], [512, "index-5"], [514, "index-9"], [517, "index-6"], [523, "index-9"], [529, "index-9"], [533, "index-7"], [541, "index-6"], [543, "index-5"], [555, "index-7"], [557, "index-9"], [559, "index-8"], [571, "index-5"], [577, "index-8"], [585, "index-5"], [591, "index-5"], [598, "index-30"], [598, "index-36"], [600, "index-5"], [602, "index-8"], [606, "index-7"], [611, "index-5"], [613, "index-4"], [615, "index-5"], [619, "index-6"]], "get_epsilon": [[510, "index-14"], [512, "index-11"], [541, "index-15"], [543, "index-12"], [557, "index-17"], [559, "index-14"], [598, "index-12"], [600, "index-7"]], "get_flags": [[510, "index-15"], [512, "index-12"], [541, "index-16"], [543, "index-13"], [557, "index-18"], [559, "index-15"], [598, "index-13"], [620, "index-5"]], "mean_desc": [[510, "index-10"], [512, "index-8"], [541, "index-10"], [543, "index-8"], [557, "index-13"], [559, "index-11"]], "src_desc": [[510, "index-4"], [512, "index-4"], [514, "index-5"], [517, "index-5"], [521, "index-7"], [523, "index-7"], [527, "index-7"], [529, "index-7"], [531, "index-6"], [533, "index-6"], [541, "index-4"], [543, "index-4"], [553, "index-5"], [555, "index-5"], [557, "index-7"], [559, "index-7"], [571, "index-4"], [577, "index-5"], [585, "index-4"], [589, "index-4"], [591, "index-4"], [598, "index-29"], [598, "index-35"], [600, "index-4"], [602, "index-7"], [606, "index-6"], [611, "index-4"], [615, "index-4"], [619, "index-5"]], "variance_desc": [[510, "index-11"], [512, "index-9"], [541, "index-11"], [543, "index-9"], [557, "index-14"], [559, "index-12"]], "weights_desc": [[510, "index-5"], [512, "index-6"], [519, "index-6"], [523, "index-8"], [525, "index-6"], [529, "index-8"], [541, "index-5"], [543, "index-6"], [551, "index-5"], [555, "index-6"], [557, "index-8"], [559, "index-9"], [577, "index-6"], [598, "index-31"], [598, "index-37"]], "batch_normalization_forward": [[511, "index-1"], [511, "index-2"], [511, "index-3"]], "dnnl::batch_normalization_forward": [[511, "index-0"]], "dnnl::batch_normalization_forward::primitive_desc": [[512, "index-0"]], "dnnl::binary": [[513, "index-0"]], "dnnl::binary::primitive_desc": [[514, "index-0"]], "get_algorithm": [[514, "index-10"], [519, "index-8"], [521, "index-11"], [523, "index-11"], [525, "index-8"], [527, "index-11"], [529, "index-11"], [531, "index-9"], [533, "index-8"], [569, "index-7"], [571, "index-7"], [583, "index-7"], [585, "index-7"], [598, "index-14"], [600, "index-8"], [613, "index-7"], [615, "index-6"]], "src0_desc": [[514, "index-6"]], "src1_desc": [[514, "index-7"]], "src2_desc": [[514, "index-8"]], "dnnl_brgemm": [[515, "index-0"]], "dnnl::concat": [[516, "index-0"]], "dnnl::concat::primitive_desc": [[517, "index-0"]], "primitive_desc_base": [[517, "index-10"], [517, "index-7"], [517, "index-8"], [517, "index-9"], [597, "index-2"], [597, "index-3"], [597, "index-4"], [597, "index-5"], [598, "index-1"], [598, "index-2"], [598, "index-3"], [598, "index-4"], [602, "index-10"], [602, "index-11"], [602, "index-12"], [602, "index-9"], [619, "index-10"], [619, "index-7"], [619, "index-8"], [619, "index-9"]], "convolution_backward_data": [[518, "index-1"], [518, "index-2"], [518, "index-3"]], "dnnl::convolution_backward_data": [[518, "index-0"]], "dnnl::convolution_backward_data::primitive_desc": [[519, "index-0"]], "get_dilations": [[519, "index-11"], [521, "index-14"], [523, "index-14"], [525, "index-11"], [527, "index-14"], [529, "index-14"], [583, "index-11"], [585, "index-11"], [598, "index-9"]], "get_padding_l": [[519, "index-12"], [521, "index-15"], [523, "index-15"], [525, "index-12"], [527, "index-15"], [529, "index-15"], [583, "index-12"], [585, "index-12"], [598, "index-10"]], "get_padding_r": [[519, "index-13"], [521, "index-16"], [523, "index-16"], [525, "index-13"], [527, "index-16"], [529, "index-16"], [583, "index-13"], [585, "index-13"], [598, "index-11"]], "convolution_backward_weights": [[520, "index-1"], [520, "index-2"], [520, "index-3"]], "dnnl::convolution_backward_weights": [[520, "index-0"]], "dnnl::convolution_backward_weights::primitive_desc": [[521, "index-0"]], "convolution_forward": [[522, "index-1"], [522, "index-2"], [522, "index-3"]], "dnnl::convolution_forward": [[522, "index-0"]], "dnnl::convolution_forward::primitive_desc": [[523, "index-0"]], "deconvolution_backward_data": [[524, "index-1"], [524, "index-2"], [524, "index-3"]], "dnnl::deconvolution_backward_data": [[524, "index-0"]], "dnnl::deconvolution_backward_data::primitive_desc": [[525, "index-0"]], "deconvolution_backward_weights": [[526, "index-1"], [526, "index-2"], [526, "index-3"]], "dnnl::deconvolution_backward_weights": [[526, "index-0"]], "dnnl::deconvolution_backward_weights::primitive_desc": [[527, "index-0"]], "deconvolution_forward": [[528, "index-1"], [528, "index-2"], [528, "index-3"]], "dnnl::deconvolution_forward": [[528, "index-0"]], "dnnl::deconvolution_forward::primitive_desc": [[529, "index-0"]], "dnnl::eltwise_backward": [[530, "index-0"]], "eltwise_backward": [[530, "index-1"], [530, "index-2"], [530, "index-3"]], "dnnl::eltwise_backward::primitive_desc": [[531, "index-0"]], "get_alpha": [[531, "index-11"], [533, "index-10"], [569, "index-9"], [571, "index-9"], [598, "index-15"], [627, "index-24"], [629, "index-17"]], "get_beta": [[531, "index-12"], [533, "index-11"], [569, "index-10"], [571, "index-10"], [598, "index-16"], [627, "index-25"], [629, "index-18"]], "dnnl::eltwise_forward": [[532, "index-0"]], "eltwise_forward": [[532, "index-1"], [532, "index-2"], [532, "index-3"]], "dnnl::eltwise_forward::primitive_desc": [[533, "index-0"]], "dnnl_engine": [[534, "index-0"]], "dnnl::engine": [[535, "index-0"]], "get_count": [[535, "index-8"]], "get_kind": [[535, "index-3"], [593, "index-7"], [598, "index-45"]], "handle": [[535, "index-4"], [535, "index-5"], [535, "index-6"], [535, "index-7"], [548, "index-1"], [548, "index-2"], [548, "index-3"], [548, "index-4"], [579, "index-18"], [579, "index-19"], [579, "index-20"], [579, "index-21"], [593, "index-10"], [593, "index-11"], [593, "index-12"], [593, "index-13"], [617, "index-5"], [617, "index-6"], [617, "index-7"], [617, "index-8"]], "dnnl::error": [[536, "index-0"]], "error": [[536, "index-1"]], "what": [[536, "index-2"]], "wrap_c_api": [[536, "index-3"]], "arg": [[537, "index-1"]], "dnnl_exec_arg_t": [[537, "index-0"]], "dnnl_graph_inplace_pair_t": [[538, "index-0"]], "input_id": [[538, "index-1"]], "output_id": [[538, "index-2"]], "dnnl_graph_logical_tensor_t": [[539, "index-0"]], "id": [[539, "index-1"]], "layout_id": [[539, "index-8"]], "ndims": [[539, "index-2"]], "property": [[539, "index-5"]], "dnnl::group_normalization_backward": [[540, "index-0"]], "group_normalization_backward": [[540, "index-1"], [540, "index-2"], [540, "index-3"]], "dnnl::group_normalization_backward::primitive_desc": [[541, "index-0"]], "get_group_size": [[541, "index-14"], [543, "index-11"], [598, "index-26"], [609, "index-8"], [611, "index-8"]], "dnnl::group_normalization_forward": [[542, "index-0"]], "group_normalization_forward": [[542, "index-1"], [542, "index-2"], [542, "index-3"]], "dnnl::group_normalization_forward::primitive_desc": [[543, "index-0"]], "dnnl::gru_backward": [[544, "index-0"]], "gru_backward": [[544, "index-1"], [544, "index-2"], [544, "index-3"]], "dnnl::gru_backward::primitive_desc": [[545, "index-0"]], "dnnl::gru_forward": [[546, "index-0"]], "gru_forward": [[546, "index-1"], [546, "index-2"], [546, "index-3"]], "dnnl::gru_forward::primitive_desc": [[547, "index-0"]], "dnnl::handle": [[548, "index-0"]], "get": [[548, "index-8"]], "operator t": [[548, "index-9"]], "operator bool": [[548, "index-10"]], "operator!=": [[548, "index-12"], [581, "index-27"]], "operator==": [[548, "index-11"], [581, "index-26"]], "reset": [[548, "index-7"]], "dnnl::handle_traits": [[549, "index-0"]], "dnnl::inner_product_backward_data": [[550, "index-0"]], "inner_product_backward_data": [[550, "index-1"], [550, "index-2"], [550, "index-3"]], "dnnl::inner_product_backward_data::primitive_desc": [[551, "index-0"]], "dnnl::inner_product_backward_weights": [[552, "index-0"]], "inner_product_backward_weights": [[552, "index-1"], [552, "index-2"], [552, "index-3"]], "dnnl::inner_product_backward_weights::primitive_desc": [[553, "index-0"]], "dnnl::inner_product_forward": [[554, "index-0"]], "inner_product_forward": [[554, "index-1"], [554, "index-2"], [554, "index-3"]], "dnnl::inner_product_forward::primitive_desc": [[555, "index-0"]], "dnnl::layer_normalization_backward": [[556, "index-0"]], "layer_normalization_backward": [[556, "index-1"], [556, "index-2"], [556, "index-3"]], "dnnl::layer_normalization_backward::primitive_desc": [[557, "index-0"]], "dnnl::layer_normalization_forward": [[558, "index-0"]], "layer_normalization_forward": [[558, "index-1"], [558, "index-2"], [558, "index-3"]], "dnnl::layer_normalization_forward::primitive_desc": [[559, "index-0"]], "dnnl::lbr_augru_backward": [[560, "index-0"]], "lbr_augru_backward": [[560, "index-1"], [560, "index-2"], [560, "index-3"]], "dnnl::lbr_augru_backward::primitive_desc": [[561, "index-0"]], "dnnl::lbr_augru_forward": [[562, "index-0"]], "lbr_augru_forward": [[562, "index-1"], [562, "index-2"], [562, "index-3"]], "dnnl::lbr_augru_forward::primitive_desc": [[563, "index-0"]], "dnnl::lbr_gru_backward": [[564, "index-0"]], "lbr_gru_backward": [[564, "index-1"], [564, "index-2"], [564, "index-3"]], "dnnl::lbr_gru_backward::primitive_desc": [[565, "index-0"]], "dnnl::lbr_gru_forward": [[566, "index-0"]], "lbr_gru_forward": [[566, "index-1"], [566, "index-2"], [566, "index-3"]], "dnnl::lbr_gru_forward::primitive_desc": [[567, "index-0"]], "dnnl::lrn_backward": [[568, "index-0"]], "lrn_backward": [[568, "index-1"], [568, "index-2"], [568, "index-3"]], "dnnl::lrn_backward::primitive_desc": [[569, "index-0"]], "get_k": [[569, "index-12"], [571, "index-12"], [598, "index-19"]], "get_local_size": [[569, "index-11"], [571, "index-11"], [598, "index-18"]], "dnnl::lrn_forward": [[570, "index-0"]], "lrn_forward": [[570, "index-1"], [570, "index-2"], [570, "index-3"]], "dnnl::lrn_forward::primitive_desc": [[571, "index-0"]], "dnnl::lstm_backward": [[572, "index-0"]], "lstm_backward": [[572, "index-1"], [572, "index-2"], [572, "index-3"]], "diff_dst_iter_c_desc": [[573, "index-28"], [607, "index-26"]], "diff_src_iter_c_desc": [[573, "index-20"], [607, "index-18"]], "diff_weights_peephole_desc": [[573, "index-23"], [607, "index-21"]], "diff_weights_projection_desc": [[573, "index-24"], [607, "index-22"]], "dnnl::lstm_backward::primitive_desc": [[573, "index-0"]], "dst_iter_c_desc": [[573, "index-16"], [575, "index-16"], [607, "index-14"]], "src_iter_c_desc": [[573, "index-8"], [575, "index-8"], [607, "index-6"]], "weights_peephole_desc": [[573, "index-11"], [575, "index-11"], [607, "index-9"]], "weights_projection_desc": [[573, "index-12"], [575, "index-12"], [607, "index-10"]], "dnnl::lstm_forward": [[574, "index-0"]], "lstm_forward": [[574, "index-1"], [574, "index-2"], [574, "index-3"]], "dnnl::lstm_forward::primitive_desc": [[575, "index-0"]], "dnnl::matmul": [[576, "index-0"]], "dnnl::matmul::primitive_desc": [[577, "index-0"]], "dnnl_memory": [[578, "index-0"]], "data_type_size": [[579, "index-9"]], "dnnl::memory": [[579, "index-0"]], "get_desc": [[579, "index-10"]], "get_host_scalar_value": [[579, "index-14"]], "map_data": [[579, "index-16"]], "set_host_scalar_value": [[579, "index-15"]], "unmap_data": [[579, "index-17"]], "validate_dims": [[579, "index-8"]], "dnnl_memory_desc": [[580, "index-0"]], "desc": [[581, "index-1"], [581, "index-2"], [581, "index-3"], [581, "index-4"], [581, "index-5"]], "dnnl::memory::desc": [[581, "index-0"]], "get_blob": [[581, "index-24"]], "get_format_kind": [[581, "index-21"]], "get_inner_blks": [[581, "index-15"]], "get_inner_idxs": [[581, "index-16"]], "get_inner_nblks": [[581, "index-14"]], "get_ndims": [[581, "index-9"]], "get_nnz": [[581, "index-18"]], "get_num_handles": [[581, "index-17"]], "get_padded_dims": [[581, "index-10"]], "get_padded_offsets": [[581, "index-11"]], "get_size": [[581, "index-23"]], "get_sparse_encoding": [[581, "index-19"]], "get_submemory_offset": [[581, "index-12"]], "is_zero": [[581, "index-25"]], "permute_axes": [[581, "index-8"]], "reshape": [[581, "index-7"]], "submemory_desc": [[581, "index-6"]], "dnnl::pooling_backward": [[582, "index-0"]], "pooling_backward": [[582, "index-1"], [582, "index-2"], [582, "index-3"]], "dnnl::pooling_backward::primitive_desc": [[583, "index-0"]], "get_kernel": [[583, "index-10"], [585, "index-10"], [598, "index-25"]], "dnnl::pooling_forward": [[584, "index-0"]], "pooling_forward": [[584, "index-1"], [584, "index-2"], [584, "index-3"]], "dnnl::pooling_forward::primitive_desc": [[585, "index-0"]], "dnnl_post_ops": [[586, "index-0"]], "append_binary": [[587, "index-13"], [587, "index-14"]], "append_dw": [[587, "index-11"]], "append_eltwise": [[587, "index-9"]], "append_prelu": [[587, "index-17"]], "append_sum": [[587, "index-5"]], "dnnl::post_ops": [[587, "index-0"]], "get_params_binary": [[587, "index-15"], [587, "index-16"]], "get_params_dw": [[587, "index-12"]], "get_params_eltwise": [[587, "index-10"]], "get_params_prelu": [[587, "index-18"]], "get_params_sum": [[587, "index-6"], [587, "index-7"], [587, "index-8"]], "len": [[587, "index-3"]], "post_ops": [[587, "index-1"], [587, "index-2"]], "dnnl::prelu_backward": [[588, "index-0"]], "prelu_backward": [[588, "index-1"], [588, "index-2"], [588, "index-3"]], "dnnl::prelu_backward::primitive_desc": [[589, "index-0"]], "dnnl::prelu_forward": [[590, "index-0"]], "prelu_forward": [[590, "index-1"], [590, "index-2"], [590, "index-3"]], "dnnl::prelu_forward::primitive_desc": [[591, "index-0"]], "dnnl_primitive": [[592, "index-0"]], "dnnl::primitive": [[593, "index-0"]], "get_cache_blob": [[593, "index-8"]], "get_primitive_desc": [[593, "index-6"]], "primitive": [[593, "index-1"], [593, "index-2"], [593, "index-3"], [593, "index-4"], [593, "index-5"]], "dnnl_primitive_attr": [[594, "index-0"]], "dnnl::primitive_attr": [[595, "index-0"]], "get_accumulation_mode": [[595, "index-8"]], "get_deterministic": [[595, "index-10"]], "get_dropout": [[595, "index-3"]], "get_post_ops": [[595, "index-23"]], "get_rnn_data_qparams": [[595, "index-26"]], "get_rnn_weights_projection_qparams": [[595, "index-30"]], "get_rnn_weights_qparams": [[595, "index-28"]], "get_rounding_mode": [[595, "index-12"]], "get_scratchpad_mode": [[595, "index-14"]], "primitive_attr": [[595, "index-1"], [595, "index-2"]], "set_accumulation_mode": [[595, "index-9"]], "set_deterministic": [[595, "index-11"]], "set_dropout": [[595, "index-4"]], "set_host_scale": [[595, "index-18"]], "set_host_zero_point": [[595, "index-21"]], "set_post_ops": [[595, "index-24"], [624, "index-4"]], "set_precomputed_reductions": [[595, "index-22"]], "set_rnn_data_qparams": [[595, "index-25"]], "set_rnn_weights_projection_qparams": [[595, "index-29"]], "set_rnn_weights_qparams": [[595, "index-27"]], "set_rounding_mode": [[595, "index-13"]], "set_scales": [[595, "index-17"]], "set_scales_mask": [[595, "index-16"]], "set_scratchpad_mode": [[595, "index-15"]], "set_zero_points": [[595, "index-20"]], "set_zero_points_mask": [[595, "index-19"]], "dnnl_primitive_desc": [[596, "index-0"]], "dnnl::primitive_desc": [[597, "index-0"]], "next_impl": [[597, "index-1"]], "default_attr": [[598, "index-52"]], "dnnl::primitive_desc_base": [[598, "index-0"]], "get_activation_kind": [[598, "index-24"], [627, "index-22"], [629, "index-15"]], "get_axis": [[598, "index-17"], [609, "index-7"], [611, "index-7"], [613, "index-9"], [615, "index-8"]], "get_cache_blob_id": [[598, "index-46"]], "get_factors": [[598, "index-21"]], "get_p": [[598, "index-20"], [600, "index-6"]], "get_primitive_attr": [[598, "index-44"]], "query_alg": [[598, "index-48"]], "query_dims": [[598, "index-49"]], "query_engine": [[598, "index-50"]], "query_f32": [[598, "index-47"]], "query_md": [[598, "index-28"]], "query_s64": [[598, "index-7"]], "reset_with_clone": [[598, "index-51"]], "scratchpad_desc": [[598, "index-42"]], "dnnl::reduction": [[599, "index-0"]], "dnnl::reduction::primitive_desc": [[600, "index-0"]], "dnnl::reorder": [[601, "index-0"]], "dnnl::reorder::primitive_desc": [[602, "index-0"]], "get_dst_engine": [[602, "index-6"]], "get_src_engine": [[602, "index-5"]], "dnnl::resampling_backward": [[603, "index-0"]], "resampling_backward": [[603, "index-1"], [603, "index-2"], [603, "index-3"]], "dnnl::resampling_backward::primitive_desc": [[604, "index-0"]], "dnnl::resampling_forward": [[605, "index-0"]], "resampling_forward": [[605, "index-1"], [605, "index-2"], [605, "index-3"]], "dnnl::resampling_forward::primitive_desc": [[606, "index-0"]], "augru_attention_desc": [[607, "index-4"]], "diff_augru_attention_desc": [[607, "index-16"]], "dnnl::rnn_primitive_desc_base": [[607, "index-0"]], "rnn_primitive_desc_base": [[607, "index-1"], [607, "index-2"]], "dnnl::shuffle_backward": [[608, "index-0"]], "shuffle_backward": [[608, "index-1"], [608, "index-2"], [608, "index-3"]], "dnnl::shuffle_backward::primitive_desc": [[609, "index-0"]], "dnnl::shuffle_forward": [[610, "index-0"]], "shuffle_forward": [[610, "index-1"], [610, "index-2"], [610, "index-3"]], "dnnl::shuffle_forward::primitive_desc": [[611, "index-0"]], "dnnl::softmax_backward": [[612, "index-0"]], "softmax_backward": [[612, "index-1"], [612, "index-2"], [612, "index-3"]], "dnnl::softmax_backward::primitive_desc": [[613, "index-0"]], "dnnl::softmax_forward": [[614, "index-0"]], "softmax_forward": [[614, "index-1"], [614, "index-2"], [614, "index-3"]], "dnnl::softmax_forward::primitive_desc": [[615, "index-0"]], "dnnl_stream": [[616, "index-0"]], "dnnl::stream": [[617, "index-0"]], "wait": [[617, "index-4"]], "dnnl::sum": [[618, "index-0"]], "dnnl::sum::primitive_desc": [[619, "index-0"]], "asynchronous": [[620, "index-1"]], "dnnl::threadpool_interop::threadpool_iface": [[620, "index-0"]], "get_in_parallel": [[620, "index-3"]], "get_num_threads": [[620, "index-2"]], "parallel_for": [[620, "index-4"]], "dnnl_transform": [[621, "index-0"]], "dnnl_ukernel_attr_params": [[622, "index-0"]], "dnnl::ukernel::attr_params": [[623, "index-0"]], "set_a_scales": [[623, "index-2"], [624, "index-5"]], "set_b_scales": [[623, "index-3"], [624, "index-6"]], "set_d_scales": [[623, "index-4"], [624, "index-7"]], "set_post_ops_args": [[623, "index-1"]], "brgemm": [[624, "index-1"], [624, "index-2"]], "default_attr_params": [[624, "index-18"]], "default_post_ops": [[624, "index-17"]], "dnnl::ukernel::brgemm": [[624, "index-0"]], "generate": [[624, "index-12"], [625, "index-3"]], "get_b_pack_type": [[624, "index-15"]], "get_scratchpad_size": [[624, "index-9"]], "is_execute_postops_valid": [[624, "index-10"]], "release_hw_context": [[624, "index-16"]], "set_add_c": [[624, "index-3"]], "set_hw_context": [[624, "index-11"]], "dnnl::ukernel::transform": [[625, "index-0"]], "transform": [[625, "index-1"], [625, "index-2"]], "dnnl::vanilla_rnn_backward": [[626, "index-0"]], "vanilla_rnn_backward": [[626, "index-1"], [626, "index-2"], [626, "index-3"]], "dnnl::vanilla_rnn_backward::primitive_desc": [[627, "index-0"]], "dnnl::vanilla_rnn_forward": [[628, "index-0"]], "vanilla_rnn_forward": [[628, "index-1"], [628, "index-2"], [628, "index-3"]], "dnnl::vanilla_rnn_forward::primitive_desc": [[629, "index-0"]], "cpu_runtime": [[630, "index-5"]], "dnnl_version_t": [[630, "index-0"]], "gpu_runtime": [[630, "index-6"]], "hash": [[630, "index-4"]], "major": [[630, "index-1"]], "minor": [[630, "index-2"]], "patch": [[630, "index-3"]], "example_allows_unimplemented": [[631, "index-0"]], "gemm_dims_t": [[632, "index-0"]], "gqa_dims_t": [[633, "index-0"]], "mlp_dims_t": [[634, "index-0"]], "mqa_dims_t": [[635, "index-0"]], "sdpa_dims_t": [[636, "index-0"]], "sycl_deletor_t": [[637, "index-0"]]}})