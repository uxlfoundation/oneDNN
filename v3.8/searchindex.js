Search.setIndex({"docnames": ["advanced_topics", "build_and_link", "class_dnnl_graph_allocator", "class_dnnl_graph_compiled_partition", "class_dnnl_graph_graph", "class_dnnl_graph_logical_tensor", "class_dnnl_graph_op", "class_dnnl_graph_partition", "class_dnnl_graph_tensor", "class_simple_memory_pool_t", "dev_guide_attributes", "dev_guide_attributes_accumulation_mode", "dev_guide_attributes_deterministic", "dev_guide_attributes_dropout", "dev_guide_attributes_fpmath_mode", "dev_guide_attributes_post_ops", "dev_guide_attributes_quantization", "dev_guide_attributes_rounding_mode", "dev_guide_attributes_scratchpad", "dev_guide_basic_concepts", "dev_guide_batch_normalization", "dev_guide_benchdnn", "dev_guide_binary", "dev_guide_build", "dev_guide_build_options", "dev_guide_c_and_cpp_apis", "dev_guide_concat", "dev_guide_constant_tensor_cache", "dev_guide_conventions", "dev_guide_convolution", "dev_guide_cpu_dispatcher_control", "dev_guide_cpu_isa_hints", "dev_guide_data_types", "dev_guide_dpcpp_interoperability", "dev_guide_eltwise", "dev_guide_examples", "dev_guide_experimental", "dev_guide_graph_basic_concepts", "dev_guide_graph_dump", "dev_guide_graph_gated_mlp", "dev_guide_graph_gqa", "dev_guide_graph_low_precision", "dev_guide_graph_sdpa", "dev_guide_graph_sdpa_compressed_kv", "dev_guide_group_normalization", "dev_guide_inference", "dev_guide_inference_and_training_aspects", "dev_guide_inference_int8", "dev_guide_inner_product", "dev_guide_inspecting_jit", "dev_guide_int8_computations", "dev_guide_layer_normalization", "dev_guide_link", "dev_guide_lrn", "dev_guide_matmul", "dev_guide_op_abs", "dev_guide_op_absbackward", "dev_guide_op_add", "dev_guide_op_avgpool", "dev_guide_op_avgpoolbackward", "dev_guide_op_batchnormforwardtraining", "dev_guide_op_batchnorminference", "dev_guide_op_batchnormtrainingbackward", "dev_guide_op_biasadd", "dev_guide_op_biasaddbackward", "dev_guide_op_clamp", "dev_guide_op_clampbackward", "dev_guide_op_concat", "dev_guide_op_convolution", "dev_guide_op_convolutionbackwarddata", "dev_guide_op_convolutionbackwardweights", "dev_guide_op_convtranspose", "dev_guide_op_convtransposebackwarddata", "dev_guide_op_convtransposebackwardweights", "dev_guide_op_dequantize", "dev_guide_op_divide", "dev_guide_op_dynamicdequantize", "dev_guide_op_dynamicquantize", "dev_guide_op_elu", "dev_guide_op_elubackward", "dev_guide_op_end", "dev_guide_op_exp", "dev_guide_op_gelu", "dev_guide_op_gelubackward", "dev_guide_op_genindex", "dev_guide_op_greaterequal", "dev_guide_op_groupnorm", "dev_guide_op_hardsigmoid", "dev_guide_op_hardsigmoidbackward", "dev_guide_op_hardswish", "dev_guide_op_hardswishbackward", "dev_guide_op_interpolate", "dev_guide_op_interpolatebackward", "dev_guide_op_layernorm", "dev_guide_op_layernormbackward", "dev_guide_op_leakyrelu", "dev_guide_op_log", "dev_guide_op_logsoftmax", "dev_guide_op_logsoftmaxbackward", "dev_guide_op_matmul", "dev_guide_op_maximum", "dev_guide_op_maxpool", "dev_guide_op_maxpoolbackward", "dev_guide_op_minimum", "dev_guide_op_mish", "dev_guide_op_mishbackward", "dev_guide_op_multiply", "dev_guide_op_pow", "dev_guide_op_prelu", "dev_guide_op_prelubackward", "dev_guide_op_quantize", "dev_guide_op_reciprocal", "dev_guide_op_reducel1", "dev_guide_op_reducel2", "dev_guide_op_reducemax", "dev_guide_op_reducemean", "dev_guide_op_reducemin", "dev_guide_op_reduceprod", "dev_guide_op_reducesum", "dev_guide_op_relu", "dev_guide_op_relubackward", "dev_guide_op_reorder", "dev_guide_op_round", "dev_guide_op_select", "dev_guide_op_sigmoid", "dev_guide_op_sigmoidbackward", "dev_guide_op_softmax", "dev_guide_op_softmaxbackward", "dev_guide_op_softplus", "dev_guide_op_softplusbackward", "dev_guide_op_sqrt", "dev_guide_op_sqrtbackward", "dev_guide_op_square", "dev_guide_op_squareddifference", "dev_guide_op_staticreshape", "dev_guide_op_statictranspose", "dev_guide_op_subtract", "dev_guide_op_tanh", "dev_guide_op_tanhbackward", "dev_guide_op_typecast", "dev_guide_op_wildcard", "dev_guide_opencl_interoperability", "dev_guide_performance_settings", "dev_guide_persistent_cache", "dev_guide_pooling", "dev_guide_prelu", "dev_guide_primitive_cache", "dev_guide_profilers", "dev_guide_reduction", "dev_guide_reorder", "dev_guide_resampling", "dev_guide_rnn", "dev_guide_shuffle", "dev_guide_softmax", "dev_guide_sum", "dev_guide_threadpool", "dev_guide_training", "dev_guide_training_bf16", "dev_guide_transition_to_dnnl", "dev_guide_ukernel_basic_concepts", "dev_guide_ukernel_brgemm", "dev_guide_ukernel_transform", "dev_guide_understanding_memory_formats", "dev_guide_verbose", "dev_guide_verbose_table", "dev_guide_vtune", "enum_api_kind", "enum_dnnl_accumulation_mode", "enum_dnnl_accumulation_mode_t", "enum_dnnl_alg_kind_t", "enum_dnnl_algorithm", "enum_dnnl_cpu_isa", "enum_dnnl_cpu_isa_hints", "enum_dnnl_cpu_isa_hints_t", "enum_dnnl_cpu_isa_t", "enum_dnnl_data_type_t", "enum_dnnl_engine_kind", "enum_dnnl_engine_kind_t", "enum_dnnl_format_kind_t", "enum_dnnl_format_tag_t", "enum_dnnl_fpmath_mode", "enum_dnnl_fpmath_mode_t", "enum_dnnl_graph_layout_type_t", "enum_dnnl_graph_logical_tensor_data_type", "enum_dnnl_graph_logical_tensor_layout_type", "enum_dnnl_graph_logical_tensor_property_type", "enum_dnnl_graph_op_attr", "enum_dnnl_graph_op_attr_t", "enum_dnnl_graph_op_kind", "enum_dnnl_graph_op_kind_t", "enum_dnnl_graph_partition_policy", "enum_dnnl_graph_partition_policy_t", "enum_dnnl_graph_status", "enum_dnnl_graph_tensor_property_t", "enum_dnnl_memory_data_type", "enum_dnnl_memory_format_kind", "enum_dnnl_memory_format_tag", "enum_dnnl_memory_sparse_encoding", "enum_dnnl_normalization_flags", "enum_dnnl_normalization_flags_t", "enum_dnnl_ocl_interop_memory_kind", "enum_dnnl_ocl_interop_memory_kind_t", "enum_dnnl_pack_type_t", "enum_dnnl_primitive_kind", "enum_dnnl_primitive_kind_t", "enum_dnnl_profiling_data_kind", "enum_dnnl_profiling_data_kind_t", "enum_dnnl_prop_kind", "enum_dnnl_prop_kind_t", "enum_dnnl_query", "enum_dnnl_query_t", "enum_dnnl_rnn_direction", "enum_dnnl_rnn_direction_t", "enum_dnnl_rnn_flags", "enum_dnnl_rnn_flags_t", "enum_dnnl_rounding_mode", "enum_dnnl_rounding_mode_t", "enum_dnnl_scratchpad_mode", "enum_dnnl_scratchpad_mode_t", "enum_dnnl_sparse_encoding_t", "enum_dnnl_status", "enum_dnnl_status_t", "enum_dnnl_stream_flags", "enum_dnnl_stream_flags_t", "enum_dnnl_sycl_interop_memory_kind", "enum_dnnl_sycl_interop_memory_kind_t", "enum_dnnl_ukernel_pack_type", "example_augru.cpp", "example_batch_normalization.cpp", "example_binary.cpp", "example_bnorm_u8_via_binary_postops.cpp", "example_cnn_inference_f32.c", "example_cnn_inference_f32.cpp", "example_cnn_inference_int8.cpp", "example_cnn_training_bf16.cpp", "example_cnn_training_f32.cpp", "example_concat.cpp", "example_convolution.cpp", "example_cpu_brgemm.cpp", "example_cpu_cnn_training_f32.c", "example_cpu_getting_started.cpp", "example_cpu_inference_int8.cpp", "example_cpu_matmul_coo.cpp", "example_cpu_matmul_csr.cpp", "example_cpu_matmul_quantization.cpp", "example_cpu_matmul_weights_compression.cpp", "example_cpu_rnn_inference_f32.cpp", "example_cpu_rnn_inference_int8.cpp", "example_cpu_sgemm_and_matmul.cpp", "example_cpu_single_op_partition.cpp", "example_cross_engine_reorder.c", "example_cross_engine_reorder.cpp", "example_deconvolution.cpp", "example_eltwise.cpp", "example_getting_started.cpp", "example_gpu_opencl_getting_started.cpp", "example_gpu_opencl_interop.cpp", "example_group_normalization.cpp", "example_inference_int8_matmul.cpp", "example_inner_product.cpp", "example_layer_normalization.cpp", "example_lbr_gru.cpp", "example_lrn.cpp", "example_lstm.cpp", "example_matmul.cpp", "example_memory_format_propagation.cpp", "example_performance_profiling.cpp", "example_pooling.cpp", "example_prelu.cpp", "example_reduction.cpp", "example_reorder.cpp", "example_resampling.cpp", "example_rnn_training_f32.cpp", "example_shuffle.cpp", "example_softmax.cpp", "example_sum.cpp", "example_sycl_getting_started.cpp", "example_sycl_interop_buffer.cpp", "example_sycl_single_op_partition.cpp", "example_vanilla_rnn.cpp", "example_weights_decompression_matmul.cpp", "global", "graph_extension", "graph_fusion_patterns", "graph_programming_model", "graph_supported_operations", "group_dnnl_api", "group_dnnl_api_accumulation_mode", "group_dnnl_api_attributes", "group_dnnl_api_batch_normalization", "group_dnnl_api_binary", "group_dnnl_api_blas", "group_dnnl_api_common", "group_dnnl_api_concat", "group_dnnl_api_convolution", "group_dnnl_api_data_types", "group_dnnl_api_deconvolution", "group_dnnl_api_eltwise", "group_dnnl_api_engine", "group_dnnl_api_fpmath_mode", "group_dnnl_api_group_normalization", "group_dnnl_api_inner_product", "group_dnnl_api_interop", "group_dnnl_api_layer_normalization", "group_dnnl_api_lrn", "group_dnnl_api_matmul", "group_dnnl_api_memory", "group_dnnl_api_ocl_interop", "group_dnnl_api_pooling", "group_dnnl_api_prelu", "group_dnnl_api_primitive_cache", "group_dnnl_api_primitives", "group_dnnl_api_primitives_common", "group_dnnl_api_profiling", "group_dnnl_api_reduction", "group_dnnl_api_reorder", "group_dnnl_api_resampling", "group_dnnl_api_rnn", "group_dnnl_api_service", "group_dnnl_api_shuffle", "group_dnnl_api_softmax", "group_dnnl_api_stream", "group_dnnl_api_sum", "group_dnnl_api_sycl_interop", "group_dnnl_api_threadpool_interop", "group_dnnl_api_ukernel", "group_dnnl_api_ukernel_brgemm", "group_dnnl_api_ukernel_transform", "group_dnnl_api_ukernel_utils", "group_dnnl_api_utils", "group_dnnl_graph_api", "group_dnnl_graph_api_allocator", "group_dnnl_graph_api_compiled_partition", "group_dnnl_graph_api_compiled_partition_cache", "group_dnnl_graph_api_constant_tensor_cache", "group_dnnl_graph_api_engine", "group_dnnl_graph_api_graph", "group_dnnl_graph_api_interop", "group_dnnl_graph_api_logical_tensor", "group_dnnl_graph_api_ocl_interop", "group_dnnl_graph_api_op", "group_dnnl_graph_api_partition", "group_dnnl_graph_api_status", "group_dnnl_graph_api_sycl_interop", "group_dnnl_graph_api_tensor", "group_dnnl_graph_api_utils", "index", "interop_with_dpcpp_and_opencl", "namespace_dnnl", "namespace_dnnl_graph", "namespace_dnnl_graph_ocl_interop", "namespace_dnnl_graph_sycl_interop", "namespace_dnnl_ocl_interop", "namespace_dnnl_sycl_interop", "namespace_dnnl_threadpool_interop", "namespace_dnnl_ukernel", "namespace_oneapi", "namespace_std", "namespace_sycl", "orphans", "page_augru_example_cpp", "page_augru_example_cpp_short", "page_batch_normalization_example_cpp", "page_batch_normalization_example_cpp_short", "page_binary_example_cpp", "page_binary_example_cpp_short", "page_bnorm_u8_via_binary_postops_cpp", "page_bnorm_u8_via_binary_postops_cpp_short", "page_cnn_inference_f32_c", "page_cnn_inference_f32_cpp", "page_cnn_inference_int8_cpp", "page_cnn_training_bf16_cpp", "page_cnn_training_f32_cpp", "page_concat_example_cpp", "page_concat_example_cpp_short", "page_convolution_example_cpp", "page_convolution_example_cpp_short", "page_cpu_brgemm_example_cpp", "page_cpu_cnn_training_f32_c", "page_cpu_matmul_coo_cpp", "page_cpu_matmul_csr_cpp", "page_cpu_matmul_quantization_cpp", "page_cpu_matmul_quantization_cpp_short", "page_cpu_matmul_weights_compression_cpp", "page_cpu_rnn_inference_f32_cpp", "page_cpu_rnn_inference_int8_cpp", "page_cpu_sgemm_and_matmul_cpp", "page_cpu_sgemm_and_matmul_cpp_short", "page_cross_engine_reorder_c", "page_cross_engine_reorder_cpp", "page_deconvolution_example_cpp", "page_deconvolution_example_cpp_short", "page_eltwise_example_cpp", "page_eltwise_example_cpp_short", "page_getting_started_cpp", "page_gpu_opencl_interop_cpp", "page_graph_cpu_getting_started_cpp", "page_graph_cpu_inference_int8_cpp", "page_graph_cpu_single_op_partition_cpp", "page_graph_gpu_opencl_getting_started_cpp", "page_graph_sycl_getting_started_cpp", "page_graph_sycl_single_op_partition_cpp", "page_group_normalization_example_cpp", "page_group_normalization_example_cpp_short", "page_inference_int8_matmul_cpp", "page_inference_int8_matmul_cpp_short", "page_inner_product_example_cpp", "page_inner_product_example_cpp_short", "page_layer_normalization_example_cpp", "page_layer_normalization_example_cpp_short", "page_lbr_gru_example_cpp", "page_lbr_gru_example_cpp_short", "page_legal_information", "page_lrn_example_cpp", "page_lrn_example_cpp_short", "page_lstm_example_cpp", "page_lstm_example_cpp_short", "page_matmul_example_cpp", "page_matmul_example_cpp_short", "page_memory_format_propagation_cpp", "page_performance_profiling_cpp", "page_pooling_example_cpp", "page_pooling_example_cpp_short", "page_prelu_example_cpp", "page_prelu_example_cpp_short", "page_reduction_example_cpp", "page_reduction_example_cpp_short", "page_reorder_example_cpp", "page_reorder_example_cpp_short", "page_resampling_example_cpp", "page_resampling_example_cpp_short", "page_rnn_training_f32_cpp", "page_shuffle_example_cpp", "page_shuffle_example_cpp_short", "page_softmax_example_cpp", "page_softmax_example_cpp_short", "page_sum_example_cpp", "page_sum_example_cpp_short", "page_sycl_interop_buffer_cpp", "page_todo", "page_vanilla_rnn_example_cpp", "page_vanilla_rnn_example_cpp_short", "page_weights_decompression_matmul_cpp", "page_weights_decompression_matmul_cpp_short", "performance_profiling_and_inspection", "programming_model", "struct_args_t", "struct_cpu_deletor_t", "struct_dnnl_augru_backward", "struct_dnnl_augru_backward_primitive_desc", "struct_dnnl_augru_forward", "struct_dnnl_augru_forward_primitive_desc", "struct_dnnl_batch_normalization_backward", "struct_dnnl_batch_normalization_backward_primitive_desc", "struct_dnnl_batch_normalization_forward", "struct_dnnl_batch_normalization_forward_primitive_desc", "struct_dnnl_binary", "struct_dnnl_binary_primitive_desc", "struct_dnnl_brgemm", "struct_dnnl_concat", "struct_dnnl_concat_primitive_desc", "struct_dnnl_convolution_backward_data", "struct_dnnl_convolution_backward_data_primitive_desc", "struct_dnnl_convolution_backward_weights", "struct_dnnl_convolution_backward_weights_primitive_desc", "struct_dnnl_convolution_forward", "struct_dnnl_convolution_forward_primitive_desc", "struct_dnnl_deconvolution_backward_data", "struct_dnnl_deconvolution_backward_data_primitive_desc", "struct_dnnl_deconvolution_backward_weights", "struct_dnnl_deconvolution_backward_weights_primitive_desc", "struct_dnnl_deconvolution_forward", "struct_dnnl_deconvolution_forward_primitive_desc", "struct_dnnl_eltwise_backward", "struct_dnnl_eltwise_backward_primitive_desc", "struct_dnnl_eltwise_forward", "struct_dnnl_eltwise_forward_primitive_desc", "struct_dnnl_engine", "struct_dnnl_engine-2", "struct_dnnl_error", "struct_dnnl_exec_arg_t", "struct_dnnl_graph_inplace_pair_t", "struct_dnnl_graph_logical_tensor_t", "struct_dnnl_group_normalization_backward", "struct_dnnl_group_normalization_backward_primitive_desc", "struct_dnnl_group_normalization_forward", "struct_dnnl_group_normalization_forward_primitive_desc", "struct_dnnl_gru_backward", "struct_dnnl_gru_backward_primitive_desc", "struct_dnnl_gru_forward", "struct_dnnl_gru_forward_primitive_desc", "struct_dnnl_handle", "struct_dnnl_handle_traits", "struct_dnnl_inner_product_backward_data", "struct_dnnl_inner_product_backward_data_primitive_desc", "struct_dnnl_inner_product_backward_weights", "struct_dnnl_inner_product_backward_weights_primitive_desc", "struct_dnnl_inner_product_forward", "struct_dnnl_inner_product_forward_primitive_desc", "struct_dnnl_layer_normalization_backward", "struct_dnnl_layer_normalization_backward_primitive_desc", "struct_dnnl_layer_normalization_forward", "struct_dnnl_layer_normalization_forward_primitive_desc", "struct_dnnl_lbr_augru_backward", "struct_dnnl_lbr_augru_backward_primitive_desc", "struct_dnnl_lbr_augru_forward", "struct_dnnl_lbr_augru_forward_primitive_desc", "struct_dnnl_lbr_gru_backward", "struct_dnnl_lbr_gru_backward_primitive_desc", "struct_dnnl_lbr_gru_forward", "struct_dnnl_lbr_gru_forward_primitive_desc", "struct_dnnl_lrn_backward", "struct_dnnl_lrn_backward_primitive_desc", "struct_dnnl_lrn_forward", "struct_dnnl_lrn_forward_primitive_desc", "struct_dnnl_lstm_backward", "struct_dnnl_lstm_backward_primitive_desc", "struct_dnnl_lstm_forward", "struct_dnnl_lstm_forward_primitive_desc", "struct_dnnl_matmul", "struct_dnnl_matmul_primitive_desc", "struct_dnnl_memory", "struct_dnnl_memory-2", "struct_dnnl_memory_desc", "struct_dnnl_memory_desc-2", "struct_dnnl_pooling_backward", "struct_dnnl_pooling_backward_primitive_desc", "struct_dnnl_pooling_forward", "struct_dnnl_pooling_forward_primitive_desc", "struct_dnnl_post_ops", "struct_dnnl_post_ops-2", "struct_dnnl_prelu_backward", "struct_dnnl_prelu_backward_primitive_desc", "struct_dnnl_prelu_forward", "struct_dnnl_prelu_forward_primitive_desc", "struct_dnnl_primitive", "struct_dnnl_primitive-2", "struct_dnnl_primitive_attr", "struct_dnnl_primitive_attr-2", "struct_dnnl_primitive_desc", "struct_dnnl_primitive_desc-2", "struct_dnnl_primitive_desc_base", "struct_dnnl_reduction", "struct_dnnl_reduction_primitive_desc", "struct_dnnl_reorder", "struct_dnnl_reorder_primitive_desc", "struct_dnnl_resampling_backward", "struct_dnnl_resampling_backward_primitive_desc", "struct_dnnl_resampling_forward", "struct_dnnl_resampling_forward_primitive_desc", "struct_dnnl_rnn_primitive_desc_base", "struct_dnnl_shuffle_backward", "struct_dnnl_shuffle_backward_primitive_desc", "struct_dnnl_shuffle_forward", "struct_dnnl_shuffle_forward_primitive_desc", "struct_dnnl_softmax_backward", "struct_dnnl_softmax_backward_primitive_desc", "struct_dnnl_softmax_forward", "struct_dnnl_softmax_forward_primitive_desc", "struct_dnnl_stream", "struct_dnnl_stream-2", "struct_dnnl_sum", "struct_dnnl_sum_primitive_desc", "struct_dnnl_threadpool_interop_threadpool_iface", "struct_dnnl_transform", "struct_dnnl_ukernel_attr_params", "struct_dnnl_ukernel_attr_params-2", "struct_dnnl_ukernel_brgemm", "struct_dnnl_ukernel_transform", "struct_dnnl_vanilla_rnn_backward", "struct_dnnl_vanilla_rnn_backward_primitive_desc", "struct_dnnl_vanilla_rnn_forward", "struct_dnnl_vanilla_rnn_forward_primitive_desc", "struct_dnnl_version_t", "struct_example_allows_unimplemented", "struct_gemm_dims_t", "struct_gqa_dims_t", "struct_mlp_dims_t", "struct_mqa_dims_t", "struct_sdpa_dims_t", "struct_sycl_deletor_t", "supported_primitives", "ukernels"], "filenames": ["advanced_topics.rst", "build_and_link.rst", "class_dnnl_graph_allocator.rst", "class_dnnl_graph_compiled_partition.rst", "class_dnnl_graph_graph.rst", "class_dnnl_graph_logical_tensor.rst", "class_dnnl_graph_op.rst", "class_dnnl_graph_partition.rst", "class_dnnl_graph_tensor.rst", "class_simple_memory_pool_t.rst", "dev_guide_attributes.rst", "dev_guide_attributes_accumulation_mode.rst", "dev_guide_attributes_deterministic.rst", "dev_guide_attributes_dropout.rst", "dev_guide_attributes_fpmath_mode.rst", "dev_guide_attributes_post_ops.rst", "dev_guide_attributes_quantization.rst", "dev_guide_attributes_rounding_mode.rst", "dev_guide_attributes_scratchpad.rst", "dev_guide_basic_concepts.rst", "dev_guide_batch_normalization.rst", "dev_guide_benchdnn.rst", "dev_guide_binary.rst", "dev_guide_build.rst", "dev_guide_build_options.rst", "dev_guide_c_and_cpp_apis.rst", "dev_guide_concat.rst", "dev_guide_constant_tensor_cache.rst", "dev_guide_conventions.rst", "dev_guide_convolution.rst", "dev_guide_cpu_dispatcher_control.rst", "dev_guide_cpu_isa_hints.rst", "dev_guide_data_types.rst", "dev_guide_dpcpp_interoperability.rst", "dev_guide_eltwise.rst", "dev_guide_examples.rst", "dev_guide_experimental.rst", "dev_guide_graph_basic_concepts.rst", "dev_guide_graph_dump.rst", "dev_guide_graph_gated_mlp.rst", "dev_guide_graph_gqa.rst", "dev_guide_graph_low_precision.rst", "dev_guide_graph_sdpa.rst", "dev_guide_graph_sdpa_compressed_kv.rst", "dev_guide_group_normalization.rst", "dev_guide_inference.rst", "dev_guide_inference_and_training_aspects.rst", "dev_guide_inference_int8.rst", "dev_guide_inner_product.rst", "dev_guide_inspecting_jit.rst", "dev_guide_int8_computations.rst", "dev_guide_layer_normalization.rst", "dev_guide_link.rst", "dev_guide_lrn.rst", "dev_guide_matmul.rst", "dev_guide_op_abs.rst", "dev_guide_op_absbackward.rst", "dev_guide_op_add.rst", "dev_guide_op_avgpool.rst", "dev_guide_op_avgpoolbackward.rst", "dev_guide_op_batchnormforwardtraining.rst", "dev_guide_op_batchnorminference.rst", "dev_guide_op_batchnormtrainingbackward.rst", "dev_guide_op_biasadd.rst", "dev_guide_op_biasaddbackward.rst", "dev_guide_op_clamp.rst", "dev_guide_op_clampbackward.rst", "dev_guide_op_concat.rst", "dev_guide_op_convolution.rst", "dev_guide_op_convolutionbackwarddata.rst", "dev_guide_op_convolutionbackwardweights.rst", "dev_guide_op_convtranspose.rst", "dev_guide_op_convtransposebackwarddata.rst", "dev_guide_op_convtransposebackwardweights.rst", "dev_guide_op_dequantize.rst", "dev_guide_op_divide.rst", "dev_guide_op_dynamicdequantize.rst", "dev_guide_op_dynamicquantize.rst", "dev_guide_op_elu.rst", "dev_guide_op_elubackward.rst", "dev_guide_op_end.rst", "dev_guide_op_exp.rst", "dev_guide_op_gelu.rst", "dev_guide_op_gelubackward.rst", "dev_guide_op_genindex.rst", "dev_guide_op_greaterequal.rst", "dev_guide_op_groupnorm.rst", "dev_guide_op_hardsigmoid.rst", "dev_guide_op_hardsigmoidbackward.rst", "dev_guide_op_hardswish.rst", "dev_guide_op_hardswishbackward.rst", "dev_guide_op_interpolate.rst", "dev_guide_op_interpolatebackward.rst", "dev_guide_op_layernorm.rst", "dev_guide_op_layernormbackward.rst", "dev_guide_op_leakyrelu.rst", "dev_guide_op_log.rst", "dev_guide_op_logsoftmax.rst", "dev_guide_op_logsoftmaxbackward.rst", "dev_guide_op_matmul.rst", "dev_guide_op_maximum.rst", "dev_guide_op_maxpool.rst", "dev_guide_op_maxpoolbackward.rst", "dev_guide_op_minimum.rst", "dev_guide_op_mish.rst", "dev_guide_op_mishbackward.rst", "dev_guide_op_multiply.rst", "dev_guide_op_pow.rst", "dev_guide_op_prelu.rst", "dev_guide_op_prelubackward.rst", "dev_guide_op_quantize.rst", "dev_guide_op_reciprocal.rst", "dev_guide_op_reducel1.rst", "dev_guide_op_reducel2.rst", "dev_guide_op_reducemax.rst", "dev_guide_op_reducemean.rst", "dev_guide_op_reducemin.rst", "dev_guide_op_reduceprod.rst", "dev_guide_op_reducesum.rst", "dev_guide_op_relu.rst", "dev_guide_op_relubackward.rst", "dev_guide_op_reorder.rst", "dev_guide_op_round.rst", "dev_guide_op_select.rst", "dev_guide_op_sigmoid.rst", "dev_guide_op_sigmoidbackward.rst", "dev_guide_op_softmax.rst", "dev_guide_op_softmaxbackward.rst", "dev_guide_op_softplus.rst", "dev_guide_op_softplusbackward.rst", "dev_guide_op_sqrt.rst", "dev_guide_op_sqrtbackward.rst", "dev_guide_op_square.rst", "dev_guide_op_squareddifference.rst", "dev_guide_op_staticreshape.rst", "dev_guide_op_statictranspose.rst", "dev_guide_op_subtract.rst", "dev_guide_op_tanh.rst", "dev_guide_op_tanhbackward.rst", "dev_guide_op_typecast.rst", "dev_guide_op_wildcard.rst", "dev_guide_opencl_interoperability.rst", "dev_guide_performance_settings.rst", "dev_guide_persistent_cache.rst", "dev_guide_pooling.rst", "dev_guide_prelu.rst", "dev_guide_primitive_cache.rst", "dev_guide_profilers.rst", "dev_guide_reduction.rst", "dev_guide_reorder.rst", "dev_guide_resampling.rst", "dev_guide_rnn.rst", "dev_guide_shuffle.rst", "dev_guide_softmax.rst", "dev_guide_sum.rst", "dev_guide_threadpool.rst", "dev_guide_training.rst", "dev_guide_training_bf16.rst", "dev_guide_transition_to_dnnl.rst", "dev_guide_ukernel_basic_concepts.rst", "dev_guide_ukernel_brgemm.rst", "dev_guide_ukernel_transform.rst", "dev_guide_understanding_memory_formats.rst", "dev_guide_verbose.rst", "dev_guide_verbose_table.rst", "dev_guide_vtune.rst", "enum_api_kind.rst", "enum_dnnl_accumulation_mode.rst", "enum_dnnl_accumulation_mode_t.rst", "enum_dnnl_alg_kind_t.rst", "enum_dnnl_algorithm.rst", "enum_dnnl_cpu_isa.rst", "enum_dnnl_cpu_isa_hints.rst", "enum_dnnl_cpu_isa_hints_t.rst", "enum_dnnl_cpu_isa_t.rst", "enum_dnnl_data_type_t.rst", "enum_dnnl_engine_kind.rst", "enum_dnnl_engine_kind_t.rst", "enum_dnnl_format_kind_t.rst", "enum_dnnl_format_tag_t.rst", "enum_dnnl_fpmath_mode.rst", "enum_dnnl_fpmath_mode_t.rst", "enum_dnnl_graph_layout_type_t.rst", "enum_dnnl_graph_logical_tensor_data_type.rst", "enum_dnnl_graph_logical_tensor_layout_type.rst", "enum_dnnl_graph_logical_tensor_property_type.rst", "enum_dnnl_graph_op_attr.rst", "enum_dnnl_graph_op_attr_t.rst", "enum_dnnl_graph_op_kind.rst", "enum_dnnl_graph_op_kind_t.rst", "enum_dnnl_graph_partition_policy.rst", "enum_dnnl_graph_partition_policy_t.rst", "enum_dnnl_graph_status.rst", "enum_dnnl_graph_tensor_property_t.rst", "enum_dnnl_memory_data_type.rst", "enum_dnnl_memory_format_kind.rst", "enum_dnnl_memory_format_tag.rst", "enum_dnnl_memory_sparse_encoding.rst", "enum_dnnl_normalization_flags.rst", "enum_dnnl_normalization_flags_t.rst", "enum_dnnl_ocl_interop_memory_kind.rst", "enum_dnnl_ocl_interop_memory_kind_t.rst", "enum_dnnl_pack_type_t.rst", "enum_dnnl_primitive_kind.rst", "enum_dnnl_primitive_kind_t.rst", "enum_dnnl_profiling_data_kind.rst", "enum_dnnl_profiling_data_kind_t.rst", "enum_dnnl_prop_kind.rst", "enum_dnnl_prop_kind_t.rst", "enum_dnnl_query.rst", "enum_dnnl_query_t.rst", "enum_dnnl_rnn_direction.rst", "enum_dnnl_rnn_direction_t.rst", "enum_dnnl_rnn_flags.rst", "enum_dnnl_rnn_flags_t.rst", "enum_dnnl_rounding_mode.rst", "enum_dnnl_rounding_mode_t.rst", "enum_dnnl_scratchpad_mode.rst", "enum_dnnl_scratchpad_mode_t.rst", "enum_dnnl_sparse_encoding_t.rst", "enum_dnnl_status.rst", "enum_dnnl_status_t.rst", "enum_dnnl_stream_flags.rst", "enum_dnnl_stream_flags_t.rst", "enum_dnnl_sycl_interop_memory_kind.rst", "enum_dnnl_sycl_interop_memory_kind_t.rst", "enum_dnnl_ukernel_pack_type.rst", "example_augru.cpp.rst", "example_batch_normalization.cpp.rst", "example_binary.cpp.rst", "example_bnorm_u8_via_binary_postops.cpp.rst", "example_cnn_inference_f32.c.rst", "example_cnn_inference_f32.cpp.rst", "example_cnn_inference_int8.cpp.rst", "example_cnn_training_bf16.cpp.rst", "example_cnn_training_f32.cpp.rst", "example_concat.cpp.rst", "example_convolution.cpp.rst", "example_cpu_brgemm.cpp.rst", "example_cpu_cnn_training_f32.c.rst", "example_cpu_getting_started.cpp.rst", "example_cpu_inference_int8.cpp.rst", "example_cpu_matmul_coo.cpp.rst", "example_cpu_matmul_csr.cpp.rst", "example_cpu_matmul_quantization.cpp.rst", "example_cpu_matmul_weights_compression.cpp.rst", "example_cpu_rnn_inference_f32.cpp.rst", "example_cpu_rnn_inference_int8.cpp.rst", "example_cpu_sgemm_and_matmul.cpp.rst", "example_cpu_single_op_partition.cpp.rst", "example_cross_engine_reorder.c.rst", "example_cross_engine_reorder.cpp.rst", "example_deconvolution.cpp.rst", "example_eltwise.cpp.rst", "example_getting_started.cpp.rst", "example_gpu_opencl_getting_started.cpp.rst", "example_gpu_opencl_interop.cpp.rst", "example_group_normalization.cpp.rst", "example_inference_int8_matmul.cpp.rst", "example_inner_product.cpp.rst", "example_layer_normalization.cpp.rst", "example_lbr_gru.cpp.rst", "example_lrn.cpp.rst", "example_lstm.cpp.rst", "example_matmul.cpp.rst", "example_memory_format_propagation.cpp.rst", "example_performance_profiling.cpp.rst", "example_pooling.cpp.rst", "example_prelu.cpp.rst", "example_reduction.cpp.rst", "example_reorder.cpp.rst", "example_resampling.cpp.rst", "example_rnn_training_f32.cpp.rst", "example_shuffle.cpp.rst", "example_softmax.cpp.rst", "example_sum.cpp.rst", "example_sycl_getting_started.cpp.rst", "example_sycl_interop_buffer.cpp.rst", "example_sycl_single_op_partition.cpp.rst", "example_vanilla_rnn.cpp.rst", "example_weights_decompression_matmul.cpp.rst", "global.rst", "graph_extension.rst", "graph_fusion_patterns.rst", "graph_programming_model.rst", "graph_supported_operations.rst", "group_dnnl_api.rst", "group_dnnl_api_accumulation_mode.rst", "group_dnnl_api_attributes.rst", "group_dnnl_api_batch_normalization.rst", "group_dnnl_api_binary.rst", "group_dnnl_api_blas.rst", "group_dnnl_api_common.rst", "group_dnnl_api_concat.rst", "group_dnnl_api_convolution.rst", "group_dnnl_api_data_types.rst", "group_dnnl_api_deconvolution.rst", "group_dnnl_api_eltwise.rst", "group_dnnl_api_engine.rst", "group_dnnl_api_fpmath_mode.rst", "group_dnnl_api_group_normalization.rst", "group_dnnl_api_inner_product.rst", "group_dnnl_api_interop.rst", "group_dnnl_api_layer_normalization.rst", "group_dnnl_api_lrn.rst", "group_dnnl_api_matmul.rst", "group_dnnl_api_memory.rst", "group_dnnl_api_ocl_interop.rst", "group_dnnl_api_pooling.rst", "group_dnnl_api_prelu.rst", "group_dnnl_api_primitive_cache.rst", "group_dnnl_api_primitives.rst", "group_dnnl_api_primitives_common.rst", "group_dnnl_api_profiling.rst", "group_dnnl_api_reduction.rst", "group_dnnl_api_reorder.rst", "group_dnnl_api_resampling.rst", "group_dnnl_api_rnn.rst", "group_dnnl_api_service.rst", "group_dnnl_api_shuffle.rst", "group_dnnl_api_softmax.rst", "group_dnnl_api_stream.rst", "group_dnnl_api_sum.rst", "group_dnnl_api_sycl_interop.rst", "group_dnnl_api_threadpool_interop.rst", "group_dnnl_api_ukernel.rst", "group_dnnl_api_ukernel_brgemm.rst", "group_dnnl_api_ukernel_transform.rst", "group_dnnl_api_ukernel_utils.rst", "group_dnnl_api_utils.rst", "group_dnnl_graph_api.rst", "group_dnnl_graph_api_allocator.rst", "group_dnnl_graph_api_compiled_partition.rst", "group_dnnl_graph_api_compiled_partition_cache.rst", "group_dnnl_graph_api_constant_tensor_cache.rst", "group_dnnl_graph_api_engine.rst", "group_dnnl_graph_api_graph.rst", "group_dnnl_graph_api_interop.rst", "group_dnnl_graph_api_logical_tensor.rst", "group_dnnl_graph_api_ocl_interop.rst", "group_dnnl_graph_api_op.rst", "group_dnnl_graph_api_partition.rst", "group_dnnl_graph_api_status.rst", "group_dnnl_graph_api_sycl_interop.rst", "group_dnnl_graph_api_tensor.rst", "group_dnnl_graph_api_utils.rst", "index.rst", "interop_with_dpcpp_and_opencl.rst", "namespace_dnnl.rst", "namespace_dnnl_graph.rst", "namespace_dnnl_graph_ocl_interop.rst", "namespace_dnnl_graph_sycl_interop.rst", "namespace_dnnl_ocl_interop.rst", "namespace_dnnl_sycl_interop.rst", "namespace_dnnl_threadpool_interop.rst", "namespace_dnnl_ukernel.rst", "namespace_oneapi.rst", "namespace_std.rst", "namespace_sycl.rst", "orphans.rst", "page_augru_example_cpp.rst", "page_augru_example_cpp_short.rst", "page_batch_normalization_example_cpp.rst", "page_batch_normalization_example_cpp_short.rst", "page_binary_example_cpp.rst", "page_binary_example_cpp_short.rst", "page_bnorm_u8_via_binary_postops_cpp.rst", "page_bnorm_u8_via_binary_postops_cpp_short.rst", "page_cnn_inference_f32_c.rst", "page_cnn_inference_f32_cpp.rst", "page_cnn_inference_int8_cpp.rst", "page_cnn_training_bf16_cpp.rst", "page_cnn_training_f32_cpp.rst", "page_concat_example_cpp.rst", "page_concat_example_cpp_short.rst", "page_convolution_example_cpp.rst", "page_convolution_example_cpp_short.rst", "page_cpu_brgemm_example_cpp.rst", "page_cpu_cnn_training_f32_c.rst", "page_cpu_matmul_coo_cpp.rst", "page_cpu_matmul_csr_cpp.rst", "page_cpu_matmul_quantization_cpp.rst", "page_cpu_matmul_quantization_cpp_short.rst", "page_cpu_matmul_weights_compression_cpp.rst", "page_cpu_rnn_inference_f32_cpp.rst", "page_cpu_rnn_inference_int8_cpp.rst", "page_cpu_sgemm_and_matmul_cpp.rst", "page_cpu_sgemm_and_matmul_cpp_short.rst", "page_cross_engine_reorder_c.rst", "page_cross_engine_reorder_cpp.rst", "page_deconvolution_example_cpp.rst", "page_deconvolution_example_cpp_short.rst", "page_eltwise_example_cpp.rst", "page_eltwise_example_cpp_short.rst", "page_getting_started_cpp.rst", "page_gpu_opencl_interop_cpp.rst", "page_graph_cpu_getting_started_cpp.rst", "page_graph_cpu_inference_int8_cpp.rst", "page_graph_cpu_single_op_partition_cpp.rst", "page_graph_gpu_opencl_getting_started_cpp.rst", "page_graph_sycl_getting_started_cpp.rst", "page_graph_sycl_single_op_partition_cpp.rst", "page_group_normalization_example_cpp.rst", "page_group_normalization_example_cpp_short.rst", "page_inference_int8_matmul_cpp.rst", "page_inference_int8_matmul_cpp_short.rst", "page_inner_product_example_cpp.rst", "page_inner_product_example_cpp_short.rst", "page_layer_normalization_example_cpp.rst", "page_layer_normalization_example_cpp_short.rst", "page_lbr_gru_example_cpp.rst", "page_lbr_gru_example_cpp_short.rst", "page_legal_information.rst", "page_lrn_example_cpp.rst", "page_lrn_example_cpp_short.rst", "page_lstm_example_cpp.rst", "page_lstm_example_cpp_short.rst", "page_matmul_example_cpp.rst", "page_matmul_example_cpp_short.rst", "page_memory_format_propagation_cpp.rst", "page_performance_profiling_cpp.rst", "page_pooling_example_cpp.rst", "page_pooling_example_cpp_short.rst", "page_prelu_example_cpp.rst", "page_prelu_example_cpp_short.rst", "page_reduction_example_cpp.rst", "page_reduction_example_cpp_short.rst", "page_reorder_example_cpp.rst", "page_reorder_example_cpp_short.rst", "page_resampling_example_cpp.rst", "page_resampling_example_cpp_short.rst", "page_rnn_training_f32_cpp.rst", "page_shuffle_example_cpp.rst", "page_shuffle_example_cpp_short.rst", "page_softmax_example_cpp.rst", "page_softmax_example_cpp_short.rst", "page_sum_example_cpp.rst", "page_sum_example_cpp_short.rst", "page_sycl_interop_buffer_cpp.rst", "page_todo.rst", "page_vanilla_rnn_example_cpp.rst", "page_vanilla_rnn_example_cpp_short.rst", "page_weights_decompression_matmul_cpp.rst", "page_weights_decompression_matmul_cpp_short.rst", "performance_profiling_and_inspection.rst", "programming_model.rst", "struct_args_t.rst", "struct_cpu_deletor_t.rst", "struct_dnnl_augru_backward.rst", "struct_dnnl_augru_backward_primitive_desc.rst", "struct_dnnl_augru_forward.rst", "struct_dnnl_augru_forward_primitive_desc.rst", "struct_dnnl_batch_normalization_backward.rst", "struct_dnnl_batch_normalization_backward_primitive_desc.rst", "struct_dnnl_batch_normalization_forward.rst", "struct_dnnl_batch_normalization_forward_primitive_desc.rst", "struct_dnnl_binary.rst", "struct_dnnl_binary_primitive_desc.rst", "struct_dnnl_brgemm.rst", "struct_dnnl_concat.rst", "struct_dnnl_concat_primitive_desc.rst", "struct_dnnl_convolution_backward_data.rst", "struct_dnnl_convolution_backward_data_primitive_desc.rst", "struct_dnnl_convolution_backward_weights.rst", "struct_dnnl_convolution_backward_weights_primitive_desc.rst", "struct_dnnl_convolution_forward.rst", "struct_dnnl_convolution_forward_primitive_desc.rst", "struct_dnnl_deconvolution_backward_data.rst", "struct_dnnl_deconvolution_backward_data_primitive_desc.rst", "struct_dnnl_deconvolution_backward_weights.rst", "struct_dnnl_deconvolution_backward_weights_primitive_desc.rst", "struct_dnnl_deconvolution_forward.rst", "struct_dnnl_deconvolution_forward_primitive_desc.rst", "struct_dnnl_eltwise_backward.rst", "struct_dnnl_eltwise_backward_primitive_desc.rst", "struct_dnnl_eltwise_forward.rst", "struct_dnnl_eltwise_forward_primitive_desc.rst", "struct_dnnl_engine.rst", "struct_dnnl_engine-2.rst", "struct_dnnl_error.rst", "struct_dnnl_exec_arg_t.rst", "struct_dnnl_graph_inplace_pair_t.rst", "struct_dnnl_graph_logical_tensor_t.rst", "struct_dnnl_group_normalization_backward.rst", "struct_dnnl_group_normalization_backward_primitive_desc.rst", "struct_dnnl_group_normalization_forward.rst", "struct_dnnl_group_normalization_forward_primitive_desc.rst", "struct_dnnl_gru_backward.rst", "struct_dnnl_gru_backward_primitive_desc.rst", "struct_dnnl_gru_forward.rst", "struct_dnnl_gru_forward_primitive_desc.rst", "struct_dnnl_handle.rst", "struct_dnnl_handle_traits.rst", "struct_dnnl_inner_product_backward_data.rst", "struct_dnnl_inner_product_backward_data_primitive_desc.rst", "struct_dnnl_inner_product_backward_weights.rst", "struct_dnnl_inner_product_backward_weights_primitive_desc.rst", "struct_dnnl_inner_product_forward.rst", "struct_dnnl_inner_product_forward_primitive_desc.rst", "struct_dnnl_layer_normalization_backward.rst", "struct_dnnl_layer_normalization_backward_primitive_desc.rst", "struct_dnnl_layer_normalization_forward.rst", "struct_dnnl_layer_normalization_forward_primitive_desc.rst", "struct_dnnl_lbr_augru_backward.rst", "struct_dnnl_lbr_augru_backward_primitive_desc.rst", "struct_dnnl_lbr_augru_forward.rst", "struct_dnnl_lbr_augru_forward_primitive_desc.rst", "struct_dnnl_lbr_gru_backward.rst", "struct_dnnl_lbr_gru_backward_primitive_desc.rst", "struct_dnnl_lbr_gru_forward.rst", "struct_dnnl_lbr_gru_forward_primitive_desc.rst", "struct_dnnl_lrn_backward.rst", "struct_dnnl_lrn_backward_primitive_desc.rst", "struct_dnnl_lrn_forward.rst", "struct_dnnl_lrn_forward_primitive_desc.rst", "struct_dnnl_lstm_backward.rst", "struct_dnnl_lstm_backward_primitive_desc.rst", "struct_dnnl_lstm_forward.rst", "struct_dnnl_lstm_forward_primitive_desc.rst", "struct_dnnl_matmul.rst", "struct_dnnl_matmul_primitive_desc.rst", "struct_dnnl_memory.rst", "struct_dnnl_memory-2.rst", "struct_dnnl_memory_desc.rst", "struct_dnnl_memory_desc-2.rst", "struct_dnnl_pooling_backward.rst", "struct_dnnl_pooling_backward_primitive_desc.rst", "struct_dnnl_pooling_forward.rst", "struct_dnnl_pooling_forward_primitive_desc.rst", "struct_dnnl_post_ops.rst", "struct_dnnl_post_ops-2.rst", "struct_dnnl_prelu_backward.rst", "struct_dnnl_prelu_backward_primitive_desc.rst", "struct_dnnl_prelu_forward.rst", "struct_dnnl_prelu_forward_primitive_desc.rst", "struct_dnnl_primitive.rst", "struct_dnnl_primitive-2.rst", "struct_dnnl_primitive_attr.rst", "struct_dnnl_primitive_attr-2.rst", "struct_dnnl_primitive_desc.rst", "struct_dnnl_primitive_desc-2.rst", "struct_dnnl_primitive_desc_base.rst", "struct_dnnl_reduction.rst", "struct_dnnl_reduction_primitive_desc.rst", "struct_dnnl_reorder.rst", "struct_dnnl_reorder_primitive_desc.rst", "struct_dnnl_resampling_backward.rst", "struct_dnnl_resampling_backward_primitive_desc.rst", "struct_dnnl_resampling_forward.rst", "struct_dnnl_resampling_forward_primitive_desc.rst", "struct_dnnl_rnn_primitive_desc_base.rst", "struct_dnnl_shuffle_backward.rst", "struct_dnnl_shuffle_backward_primitive_desc.rst", "struct_dnnl_shuffle_forward.rst", "struct_dnnl_shuffle_forward_primitive_desc.rst", "struct_dnnl_softmax_backward.rst", "struct_dnnl_softmax_backward_primitive_desc.rst", "struct_dnnl_softmax_forward.rst", "struct_dnnl_softmax_forward_primitive_desc.rst", "struct_dnnl_stream.rst", "struct_dnnl_stream-2.rst", "struct_dnnl_sum.rst", "struct_dnnl_sum_primitive_desc.rst", "struct_dnnl_threadpool_interop_threadpool_iface.rst", "struct_dnnl_transform.rst", "struct_dnnl_ukernel_attr_params.rst", "struct_dnnl_ukernel_attr_params-2.rst", "struct_dnnl_ukernel_brgemm.rst", "struct_dnnl_ukernel_transform.rst", "struct_dnnl_vanilla_rnn_backward.rst", "struct_dnnl_vanilla_rnn_backward_primitive_desc.rst", "struct_dnnl_vanilla_rnn_forward.rst", "struct_dnnl_vanilla_rnn_forward_primitive_desc.rst", "struct_dnnl_version_t.rst", "struct_example_allows_unimplemented.rst", "struct_gemm_dims_t.rst", "struct_gqa_dims_t.rst", "struct_mlp_dims_t.rst", "struct_mqa_dims_t.rst", "struct_sdpa_dims_t.rst", "struct_sycl_deletor_t.rst", "supported_primitives.rst", "ukernels.rst"], "titles": ["Advanced Topics", "Building and Linking", "class dnnl::graph::allocator", "class dnnl::graph::compiled_partition", "class dnnl::graph::graph", "class dnnl::graph::logical_tensor", "class dnnl::graph::op", "class dnnl::graph::partition", "class dnnl::graph::tensor", "class simple_memory_pool_t", "Primitive Attributes", "Primitive Attributes: accumulation mode", "Primitive Attributes: deterministic", "Primitive Attributes: dropout", "Primitive Attributes: floating-point math mode", "Primitive Attributes: Post-ops", "Primitive Attributes: Quantization", "Primitive Attributes: rounding mode", "Primitive Attributes: Scratchpad", "Basic Concepts", "Batch Normalization", "Benchmarking Performance", "Binary", "Build from Source", "Build Options", "API", "Concat", "Constant Tensor Cache", "Naming Conventions", "Convolution", "CPU Dispatcher Control", "CPU ISA Hints", "Data Types", "DPC++ Interoperability", "Eltwise", "Examples", "Experimental features", "Basic Concepts", "Graph Dump", "Gated Multi-Layer Perceptron (Gated-MLP)", "Grouped Query Attention (GQA)", "Low Precision", "Scaled Dot-Product Attention (SDPA)", "SDPA with Compressed Key and Value", "Group Normalization", "Inference", "Inference and Training Aspects", "Int8 Inference", "Inner Product", "Inspecting JIT Code", "Nuances of int8 Computations", "Layer Normalization", "Linking to the Library", "Local Response Normalization (LRN)", "Matrix Multiplication", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "GenIndex", "GreaterEqual", "GroupNorm", "HardSigmoid", "HardSigmoidBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "Maximum", "MaxPool", "MaxPoolBackward", "Minimum", "Mish", "MishBackward", "Multiply", "Pow", "PReLU", "PReLUBackward", "Quantize", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReLU", "ReLUBackward", "Reorder", "Round", "Select", "Sigmoid", "SigmoidBackward", "SoftMax", "SoftMaxBackward", "SoftPlus", "SoftPlusBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "OpenCL Interoperability", "Configuring oneDNN for Benchmarking", "Persistent Cache", "Pooling", "PReLU", "Primitive Cache", "Profiling oneDNN Performance", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sum", "Using oneDNN with Threadpool-Based Threading", "Training", "Bfloat16 Training", "Transitioning from Intel MKL-DNN to oneDNN", "Basic Concepts", "Batch-Reduce General Matrix Multiplication", "Data transformation", "Understanding Memory Formats", "Verbose Mode", "Verbose Message Catalogue", "Profiling with VTune(TM) Profiler", "enum api_kind", "enum dnnl::accumulation_mode", "enum dnnl_accumulation_mode_t", "enum dnnl_alg_kind_t", "enum dnnl::algorithm", "enum dnnl::cpu_isa", "enum dnnl::cpu_isa_hints", "enum dnnl_cpu_isa_hints_t", "enum dnnl_cpu_isa_t", "enum dnnl_data_type_t", "enum dnnl::engine::kind", "enum dnnl_engine_kind_t", "enum dnnl_format_kind_t", "enum dnnl_format_tag_t", "enum dnnl::fpmath_mode", "enum dnnl_fpmath_mode_t", "enum dnnl_graph_layout_type_t", "enum dnnl::graph::logical_tensor::data_type", "enum dnnl::graph::logical_tensor::layout_type", "enum dnnl::graph::logical_tensor::property_type", "enum dnnl::graph::op::attr", "enum dnnl_graph_op_attr_t", "enum dnnl::graph::op::kind", "enum dnnl_graph_op_kind_t", "enum dnnl::graph::partition::policy", "enum dnnl_graph_partition_policy_t", "enum dnnl::graph::status", "enum dnnl_graph_tensor_property_t", "enum dnnl::memory::data_type", "enum dnnl::memory::format_kind", "enum dnnl::memory::format_tag", "enum dnnl::memory::sparse_encoding", "enum dnnl::normalization_flags", "enum dnnl_normalization_flags_t", "enum dnnl::ocl_interop::memory_kind", "enum dnnl_ocl_interop_memory_kind_t", "enum dnnl_pack_type_t", "enum dnnl::primitive::kind", "enum dnnl_primitive_kind_t", "enum dnnl::profiling_data_kind", "enum dnnl_profiling_data_kind_t", "enum dnnl::prop_kind", "enum dnnl_prop_kind_t", "enum dnnl::query", "enum dnnl_query_t", "enum dnnl::rnn_direction", "enum dnnl_rnn_direction_t", "enum dnnl::rnn_flags", "enum dnnl_rnn_flags_t", "enum dnnl::rounding_mode", "enum dnnl_rounding_mode_t", "enum dnnl::scratchpad_mode", "enum dnnl_scratchpad_mode_t", "enum dnnl_sparse_encoding_t", "enum dnnl::status", "enum dnnl_status_t", "enum dnnl::stream::flags", "enum dnnl_stream_flags_t", "enum dnnl::sycl_interop::memory_kind", "enum dnnl_sycl_interop_memory_kind_t", "enum dnnl::ukernel::pack_type", "augru.cpp", "batch_normalization.cpp", "binary.cpp", "bnorm_u8_via_binary_postops.cpp", "cnn_inference_f32.c", "cnn_inference_f32.cpp", "cnn_inference_int8.cpp", "cnn_training_bf16.cpp", "cnn_training_f32.cpp", "concat.cpp", "convolution.cpp", "cpu_brgemm.cpp", "cpu_cnn_training_f32.c", "cpu_getting_started.cpp", "cpu_inference_int8.cpp", "cpu_matmul_coo.cpp", "cpu_matmul_csr.cpp", "cpu_matmul_quantization.cpp", "cpu_matmul_weights_compression.cpp", "cpu_rnn_inference_f32.cpp", "cpu_rnn_inference_int8.cpp", "cpu_sgemm_and_matmul.cpp", "cpu_single_op_partition.cpp", "cross_engine_reorder.c", "cross_engine_reorder.cpp", "deconvolution.cpp", "eltwise.cpp", "getting_started.cpp", "gpu_opencl_getting_started.cpp", "gpu_opencl_interop.cpp", "group_normalization.cpp", "inference_int8_matmul.cpp", "inner_product.cpp", "layer_normalization.cpp", "lbr_gru.cpp", "lrn.cpp", "lstm.cpp", "matmul.cpp", "memory_format_propagation.cpp", "performance_profiling.cpp", "pooling.cpp", "prelu.cpp", "reduction.cpp", "reorder.cpp", "resampling.cpp", "rnn_training_f32.cpp", "shuffle.cpp", "softmax.cpp", "sum.cpp", "sycl_getting_started.cpp", "sycl_interop_buffer.cpp", "sycl_single_op_partition.cpp", "vanilla_rnn.cpp", "weights_decompression_matmul.cpp", "Global Namespace", "Graph Extension", "Fusion Patterns", "Programming Model", "Supported Operations", "oneDNN API", "Accumulation Mode", "Attributes", "Batch Normalization", "Binary", "BLAS functions", "Common API", "Concat", "Convolution", "Data types", "Deconvolution", "Eltwise", "Engine", "Floating-point Math Mode", "Group Normalization", "Inner Product", "Runtime interoperability API", "Layer Normalization", "LRN", "Matrix Multiplication", "Memory", "OpenCL interoperability API", "Pooling", "PReLU", "Primitive Cache", "Primitives", "Common", "Profiling", "Reduction", "Reorder", "Resampling", "RNN", "Service", "Shuffle", "Softmax", "Stream", "Sum", "SYCL interoperability API", "Threadpool interoperability API", "Ukernels", "BRGeMM ukernel", "Transform ukernel", "ukernel utils", "Utilities", "Graph API", "Allocator", "Compiled Partition", "Compiled Partition Cache", "Constant Tensor Cache", "Engine", "Graph", "Runtime interoperability API", "Logical Tensor", "OpenCL interoperability API", "Op", "Partition", "Status", "SYCL interoperability API", "Tensor", "Utilities", "oneAPI Deep Neural Network Library (oneDNN) Developer Guide and Reference", "Interoperability with DPC++ and OpenCL", "namespace dnnl", "namespace dnnl::graph", "namespace dnnl::graph::ocl_interop", "namespace dnnl::graph::sycl_interop", "namespace dnnl::ocl_interop", "namespace dnnl::sycl_interop", "namespace dnnl::threadpool_interop", "namespace dnnl::ukernel", "namespace oneapi", "namespace std", "namespace sycl", "Orphans", "AUGRU RNN Primitive Example", "&lt;Untitled&gt;", "Batch Normalization Primitive Example", "&lt;Untitled&gt;", "Binary Primitive Example", "&lt;Untitled&gt;", "Bnorm u8 by binary post-ops example", "&lt;Untitled&gt;", "CNN f32 inference example", "CNN f32 inference example", "CNN int8 inference example", "CNN bf16 training example", "CNN f32 training example", "Concat Primitive Example", "&lt;Untitled&gt;", "Convolution Primitive Example", "&lt;Untitled&gt;", "BRGeMM ukernel example", "CNN f32 training example", "MatMul Primitive Example", "MatMul Primitive Example", "MatMul Tutorial: Quantization", "&lt;Untitled&gt;", "MatMul Primitive Example", "RNN f32 inference example", "RNN int8 inference example", "MatMul Tutorial: Comparison with SGEMM", "&lt;Untitled&gt;", "Reorder between CPU and GPU engines", "Reorder between CPU and GPU engines", "Deconvolution Primitive Example", "&lt;Untitled&gt;", "Element-Wise Primitive Example", "&lt;Untitled&gt;", "Getting started", "Getting started on GPU with OpenCL extensions API", "Getting started on CPU with Graph API", "Convolution int8 inference example with Graph API", "Single op partition on CPU", "Getting started with OpenCL extensions and Graph API", "Getting started with SYCL extensions API and Graph API", "Single op partition on GPU", "Group Normalization Primitive Example", "&lt;Untitled&gt;", "MatMul Tutorial: INT8 Inference", "&lt;Untitled&gt;", "Inner Product Primitive Example", "&lt;Untitled&gt;", "Layer Normalization Primitive Example", "&lt;Untitled&gt;", "Linear-Before-Reset GRU RNN Primitive Example", "&lt;Untitled&gt;", "Legal Information", "Local Response Normalization Primitive Example", "&lt;Untitled&gt;", "LSTM RNN Primitive Example", "&lt;Untitled&gt;", "Matmul Primitive Example", "&lt;Untitled&gt;", "Memory Format Propagation", "Performance Profiling Example", "Pooling Primitive Example", "&lt;Untitled&gt;", "Primitive Example", "&lt;Untitled&gt;", "Reduction Primitive Example", "&lt;Untitled&gt;", "Reorder Primitive Example", "&lt;Untitled&gt;", "Resampling Primitive Example", "&lt;Untitled&gt;", "RNN f32 training example", "Shuffle Primitive Example", "&lt;Untitled&gt;", "Softmax Primitive Example", "&lt;Untitled&gt;", "Sum Primitive Example", "&lt;Untitled&gt;", "Getting started on both CPU and GPU with SYCL extensions API", "Todo List", "Vanilla RNN Primitive Example", "&lt;Untitled&gt;", "MatMul Tutorial: weights decompression", "&lt;Untitled&gt;", "Performance Profiling and Inspection", "Programming Model", "struct args_t", "struct cpu_deletor_t", "struct dnnl::augru_backward", "struct dnnl::augru_backward::primitive_desc", "struct dnnl::augru_forward", "struct dnnl::augru_forward::primitive_desc", "struct dnnl::batch_normalization_backward", "struct dnnl::batch_normalization_backward::primitive_desc", "struct dnnl::batch_normalization_forward", "struct dnnl::batch_normalization_forward::primitive_desc", "struct dnnl::binary", "struct dnnl::binary::primitive_desc", "struct dnnl_brgemm", "struct dnnl::concat", "struct dnnl::concat::primitive_desc", "struct dnnl::convolution_backward_data", "struct dnnl::convolution_backward_data::primitive_desc", "struct dnnl::convolution_backward_weights", "struct dnnl::convolution_backward_weights::primitive_desc", "struct dnnl::convolution_forward", "struct dnnl::convolution_forward::primitive_desc", "struct dnnl::deconvolution_backward_data", "struct dnnl::deconvolution_backward_data::primitive_desc", "struct dnnl::deconvolution_backward_weights", "struct dnnl::deconvolution_backward_weights::primitive_desc", "struct dnnl::deconvolution_forward", "struct dnnl::deconvolution_forward::primitive_desc", "struct dnnl::eltwise_backward", "struct dnnl::eltwise_backward::primitive_desc", "struct dnnl::eltwise_forward", "struct dnnl::eltwise_forward::primitive_desc", "struct dnnl_engine", "struct dnnl::engine", "struct dnnl::error", "struct dnnl_exec_arg_t", "struct dnnl_graph_inplace_pair_t", "struct dnnl_graph_logical_tensor_t", "struct dnnl::group_normalization_backward", "struct dnnl::group_normalization_backward::primitive_desc", "struct dnnl::group_normalization_forward", "struct dnnl::group_normalization_forward::primitive_desc", "struct dnnl::gru_backward", "struct dnnl::gru_backward::primitive_desc", "struct dnnl::gru_forward", "struct dnnl::gru_forward::primitive_desc", "template struct dnnl::handle", "template struct dnnl::handle_traits", "struct dnnl::inner_product_backward_data", "struct dnnl::inner_product_backward_data::primitive_desc", "struct dnnl::inner_product_backward_weights", "struct dnnl::inner_product_backward_weights::primitive_desc", "struct dnnl::inner_product_forward", "struct dnnl::inner_product_forward::primitive_desc", "struct dnnl::layer_normalization_backward", "struct dnnl::layer_normalization_backward::primitive_desc", "struct dnnl::layer_normalization_forward", "struct dnnl::layer_normalization_forward::primitive_desc", "struct dnnl::lbr_augru_backward", "struct dnnl::lbr_augru_backward::primitive_desc", "struct dnnl::lbr_augru_forward", "struct dnnl::lbr_augru_forward::primitive_desc", "struct dnnl::lbr_gru_backward", "struct dnnl::lbr_gru_backward::primitive_desc", "struct dnnl::lbr_gru_forward", "struct dnnl::lbr_gru_forward::primitive_desc", "struct dnnl::lrn_backward", "struct dnnl::lrn_backward::primitive_desc", "struct dnnl::lrn_forward", "struct dnnl::lrn_forward::primitive_desc", "struct dnnl::lstm_backward", "struct dnnl::lstm_backward::primitive_desc", "struct dnnl::lstm_forward", "struct dnnl::lstm_forward::primitive_desc", "struct dnnl::matmul", "struct dnnl::matmul::primitive_desc", "struct dnnl_memory", "struct dnnl::memory", "struct dnnl_memory_desc", "struct dnnl::memory::desc", "struct dnnl::pooling_backward", "struct dnnl::pooling_backward::primitive_desc", "struct dnnl::pooling_forward", "struct dnnl::pooling_forward::primitive_desc", "struct dnnl_post_ops", "struct dnnl::post_ops", "struct dnnl::prelu_backward", "struct dnnl::prelu_backward::primitive_desc", "struct dnnl::prelu_forward", "struct dnnl::prelu_forward::primitive_desc", "struct dnnl_primitive", "struct dnnl::primitive", "struct dnnl_primitive_attr", "struct dnnl::primitive_attr", "struct dnnl_primitive_desc", "struct dnnl::primitive_desc", "struct dnnl::primitive_desc_base", "struct dnnl::reduction", "struct dnnl::reduction::primitive_desc", "struct dnnl::reorder", "struct dnnl::reorder::primitive_desc", "struct dnnl::resampling_backward", "struct dnnl::resampling_backward::primitive_desc", "struct dnnl::resampling_forward", "struct dnnl::resampling_forward::primitive_desc", "struct dnnl::rnn_primitive_desc_base", "struct dnnl::shuffle_backward", "struct dnnl::shuffle_backward::primitive_desc", "struct dnnl::shuffle_forward", "struct dnnl::shuffle_forward::primitive_desc", "struct dnnl::softmax_backward", "struct dnnl::softmax_backward::primitive_desc", "struct dnnl::softmax_forward", "struct dnnl::softmax_forward::primitive_desc", "struct dnnl_stream", "struct dnnl::stream", "struct dnnl::sum", "struct dnnl::sum::primitive_desc", "struct dnnl::threadpool_interop::threadpool_iface", "struct dnnl_transform", "struct dnnl_ukernel_attr_params", "struct dnnl::ukernel::attr_params", "struct dnnl::ukernel::brgemm", "struct dnnl::ukernel::transform", "struct dnnl::vanilla_rnn_backward", "struct dnnl::vanilla_rnn_backward::primitive_desc", "struct dnnl::vanilla_rnn_forward", "struct dnnl::vanilla_rnn_forward::primitive_desc", "struct dnnl_version_t", "struct example_allows_unimplemented", "struct gemm_dims_t", "struct gqa_dims_t", "struct mlp_dims_t", "struct mqa_dims_t", "struct sdpa_dims_t", "struct sycl_deletor_t", "Supported Primitives", "Ukernels"], "terms": {"transit": 0, "from": [0, 1, 3, 4, 7, 10, 11, 13, 14, 15, 16, 18, 19, 24, 26, 28, 29, 32, 34, 37, 39, 40, 42, 43, 45, 46, 47, 48, 50, 52, 53, 54, 64, 76, 77, 91, 92, 93, 94, 97, 98, 99, 108, 109, 112, 113, 114, 115, 116, 117, 118, 121, 123, 126, 127, 134, 135, 139, 142, 143, 144, 146, 147, 149, 151, 152, 153, 159, 160, 161, 162, 163, 164, 169, 170, 179, 196, 199, 211, 212, 217, 218, 227, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 283, 287, 288, 298, 299, 303, 306, 307, 312, 317, 326, 332, 336, 341, 350, 351, 352, 353, 360, 361, 362, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 383, 384, 385, 390, 391, 392, 394, 395, 396, 402, 404, 406, 407, 408, 410, 411, 413, 415, 416, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 441, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 567, 569, 570, 571, 572], "intel": [0, 24, 29, 30, 36, 39, 40, 42, 43, 49, 54, 141, 142, 149, 157, 160, 161, 163, 171, 174, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 346, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 395, 402, 404, 406, 408, 410, 412, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442], "mkl": 0, "dnn": [0, 13, 32, 162], "onednn": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 141, 143, 146, 149, 150, 151, 157, 159, 162, 163, 164, 165, 179, 244, 248, 254, 256, 266, 267, 277, 283, 307, 318, 324, 330, 335, 338, 339, 343, 348, 349, 352, 354, 370, 381, 384, 385, 386, 396, 397, 398, 399, 400, 401, 419, 420, 421, 444, 479, 482, 491, 492, 563], "understand": [0, 37, 179, 306, 419], "memori": [0, 3, 5, 8, 10, 11, 15, 16, 20, 22, 25, 26, 29, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 134, 135, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 163, 167, 168, 169, 170, 175, 178, 179, 192, 200, 201, 209, 210, 213, 214, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 300, 301, 303, 304, 305, 307, 308, 309, 312, 314, 315, 316, 317, 319, 320, 322, 323, 324, 325, 326, 331, 332, 338, 339, 343, 344, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 390, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 437, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 565, 566, 567, 568, 569, 570, 571, 572, 575], "format": [0, 15, 16, 19, 20, 22, 26, 29, 34, 35, 36, 44, 45, 46, 47, 48, 51, 53, 54, 68, 69, 70, 71, 72, 73, 91, 92, 108, 109, 144, 145, 147, 148, 149, 150, 151, 152, 154, 159, 160, 161, 163, 164, 178, 179, 195, 196, 197, 209, 210, 219, 231, 232, 234, 235, 238, 239, 241, 242, 243, 244, 254, 258, 259, 265, 266, 272, 280, 293, 306, 312, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 390, 391, 394, 395, 397, 402, 403, 404, 406, 407, 410, 411, 415, 416, 431, 436, 437, 438, 440, 441, 442, 445, 449, 453, 460, 462, 464, 468, 470, 474, 484, 488, 494, 496, 500, 504, 508, 512, 516, 522, 524, 526, 532, 547, 552, 556, 570], "nuanc": [0, 16, 26, 32, 291, 324, 354], "int8": [0, 10, 15, 16, 26, 29, 32, 35, 42, 43, 44, 46, 48, 51, 54, 74, 110, 148, 151, 153, 233, 241, 244, 247, 258, 288, 291, 324, 354, 359, 381, 405, 538], "comput": [0, 3, 4, 6, 7, 10, 11, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 32, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 56, 58, 60, 64, 66, 68, 69, 70, 71, 72, 73, 79, 83, 88, 90, 92, 93, 94, 98, 99, 101, 105, 109, 120, 125, 126, 127, 129, 131, 138, 139, 140, 142, 144, 145, 147, 150, 151, 152, 153, 155, 157, 159, 160, 161, 162, 163, 164, 167, 168, 172, 173, 185, 193, 198, 199, 207, 208, 227, 228, 229, 230, 236, 237, 238, 244, 245, 246, 247, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 288, 289, 291, 295, 298, 300, 301, 303, 306, 307, 311, 312, 314, 316, 317, 320, 321, 323, 324, 332, 336, 340, 341, 352, 353, 354, 360, 362, 364, 366, 369, 370, 373, 375, 377, 381, 382, 383, 384, 385, 389, 390, 392, 394, 395, 402, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 453, 481, 484, 500, 530, 536, 544, 556, 558], "primit": [0, 20, 22, 24, 26, 28, 29, 32, 33, 34, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 61, 68, 121, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 157, 162, 166, 169, 178, 179, 192, 195, 196, 197, 198, 199, 204, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 280, 281, 286, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 346, 348, 352, 353, 359, 361, 363, 365, 366, 368, 369, 370, 371, 372, 374, 376, 378, 381, 384, 385, 386, 387, 391, 393, 403, 404, 405, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 431, 433, 435, 437, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 567, 569, 570, 571, 572], "cach": [0, 3, 19, 24, 43, 45, 54, 147, 159, 162, 185, 193, 209, 210, 240, 241, 255, 276, 282, 286, 307, 312, 330, 332, 339, 350, 352, 397, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 481, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 525, 527, 531, 533, 536, 541, 542, 544, 546, 548, 551, 553, 555, 557, 561, 569, 571], "persist": [0, 146], "us": [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 60, 66, 68, 69, 74, 75, 76, 77, 79, 80, 85, 91, 92, 93, 94, 100, 103, 106, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 163, 164, 167, 168, 169, 170, 172, 173, 175, 178, 179, 185, 190, 191, 193, 194, 195, 196, 197, 198, 199, 204, 209, 210, 217, 218, 219, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 331, 332, 334, 336, 338, 339, 341, 343, 344, 346, 350, 351, 352, 353, 354, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 412, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 443, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 481, 482, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 529, 530, 532, 534, 536, 538, 543, 544, 545, 547, 549, 552, 554, 556, 558, 560, 562, 566, 567, 570, 572], "threadpool": [0, 29, 40, 42, 281, 286, 302, 354, 563], "base": [0, 10, 15, 16, 18, 19, 20, 22, 23, 24, 25, 29, 30, 32, 33, 34, 36, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 94, 95, 104, 107, 108, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 157, 158, 160, 161, 163, 164, 169, 170, 238, 249, 272, 278, 324, 326, 354, 369, 377, 394, 400, 401, 419, 431, 460, 482, 491, 529, 536, 540, 541, 545, 550, 562, 567], "thread": [0, 18, 19, 29, 36, 40, 42, 147, 159, 217, 218, 324, 334, 354, 420, 563], "experiment": [0, 20, 24, 164, 346], "featur": [0, 15, 20, 24, 25, 27, 29, 30, 31, 38, 50, 51, 146, 162, 163, 164, 172, 173, 246, 247, 272, 288, 318, 370, 394, 431, 530], "sourc": [1, 10, 15, 16, 18, 24, 26, 28, 29, 34, 36, 37, 45, 46, 47, 48, 50, 54, 145, 149, 150, 152, 157, 164, 209, 210, 227, 228, 229, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 279, 289, 290, 293, 294, 296, 297, 300, 301, 303, 304, 305, 306, 308, 309, 312, 314, 315, 316, 319, 320, 322, 346, 360, 362, 363, 364, 370, 371, 372, 373, 374, 375, 378, 381, 383, 389, 390, 392, 394, 395, 402, 403, 404, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 432, 434, 436, 437, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 541, 543, 544, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572, 573], "option": [1, 18, 20, 21, 23, 30, 31, 36, 37, 38, 39, 40, 42, 43, 44, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 146, 147, 151, 155, 158, 160, 161, 163, 199, 217, 218, 227, 238, 261, 263, 279, 289, 306, 312, 318, 339, 343, 350, 351, 352, 353, 360, 377, 386, 394, 410, 415, 420, 440, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 524, 526, 528, 532, 534, 540, 543, 544, 545, 547, 549, 552, 554, 556, 558, 562, 567, 568, 570, 572], "librari": [1, 3, 4, 5, 7, 8, 10, 12, 14, 15, 16, 19, 25, 27, 29, 30, 33, 36, 37, 38, 42, 45, 46, 47, 48, 49, 74, 76, 77, 99, 110, 140, 141, 142, 143, 144, 152, 155, 158, 163, 171, 174, 182, 184, 185, 192, 193, 198, 203, 204, 217, 218, 220, 221, 251, 254, 283, 306, 307, 318, 323, 332, 334, 336, 338, 341, 342, 344, 352, 353, 389, 394, 395, 404, 419, 420, 438, 442, 478, 481, 482, 491, 522, 536, 560, 563], "more": [2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 19, 20, 24, 26, 29, 32, 36, 41, 44, 46, 47, 48, 123, 134, 147, 148, 151, 154, 157, 158, 160, 161, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 238, 244, 283, 288, 289, 290, 291, 293, 294, 296, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 336, 338, 339, 340, 341, 343, 344, 350, 351, 352, 353, 354, 356, 369, 377, 381, 386, 389, 394, 404, 420, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573], "includ": [2, 3, 4, 5, 6, 7, 8, 16, 19, 20, 22, 24, 26, 29, 32, 37, 41, 43, 44, 45, 48, 51, 52, 54, 147, 149, 151, 152, 153, 154, 155, 158, 160, 161, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 306, 360, 361, 362, 363, 364, 365, 366, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 420, 421, 423, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573], "dnnl_graph": [2, 3, 4, 5, 6, 7, 8, 52, 183, 184, 185, 186, 188, 190, 192, 240, 241, 249, 255, 276, 278, 396, 397, 398, 399, 400, 401], "hpp": [2, 3, 4, 5, 6, 7, 8, 33, 52, 141, 155, 158, 160, 161, 162, 167, 170, 171, 172, 176, 180, 183, 184, 185, 186, 188, 190, 192, 194, 195, 196, 197, 198, 200, 203, 205, 207, 209, 211, 213, 215, 217, 220, 222, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 371, 372, 373, 375, 377, 379, 380, 381, 383, 386, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572], "public": [2, 3, 4, 5, 6, 7, 8, 9, 52, 155, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572, 574], "allocator_handl": 2, "dnnl_graph_host_allocate_f": [2, 281, 331], "host_malloc": [2, 281, 331], "dnnl_graph_host_deallocate_f": [2, 281, 331], "host_fre": [2, 281, 331], "an": [2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 163, 164, 176, 177, 179, 182, 184, 186, 187, 192, 196, 197, 198, 199, 203, 204, 205, 206, 209, 210, 219, 220, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 287, 288, 291, 293, 297, 298, 299, 301, 304, 306, 307, 312, 317, 318, 319, 321, 322, 323, 324, 326, 331, 332, 334, 336, 338, 339, 340, 341, 343, 344, 346, 350, 351, 352, 353, 354, 356, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 413, 415, 416, 417, 419, 420, 421, 423, 424, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572], "accord": [2, 3, 4, 6, 7, 8, 16, 26, 37, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 149, 154, 192, 217, 218, 221, 281, 317, 332, 336, 338, 341, 369, 482, 516, 518], "given": [2, 4, 7, 8, 11, 12, 13, 14, 16, 17, 22, 26, 29, 32, 36, 37, 42, 44, 46, 47, 48, 50, 51, 54, 55, 57, 75, 85, 96, 100, 103, 104, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 130, 132, 133, 136, 139, 143, 149, 153, 159, 160, 162, 164, 192, 220, 221, 240, 241, 242, 243, 249, 255, 266, 276, 278, 288, 306, 307, 312, 323, 326, 331, 339, 341, 343, 352, 353, 379, 380, 381, 386, 389, 394, 395, 396, 398, 400, 401, 438, 522, 524, 530, 538], "function": [2, 4, 12, 14, 15, 16, 19, 20, 25, 27, 28, 30, 31, 32, 33, 34, 36, 39, 40, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 65, 81, 95, 97, 104, 112, 113, 114, 115, 116, 117, 118, 141, 146, 147, 155, 158, 160, 161, 162, 163, 169, 192, 210, 220, 221, 238, 240, 241, 244, 254, 255, 258, 266, 272, 276, 280, 286, 328, 342, 348, 349, 377, 381, 386, 387, 404, 420, 431, 442, 478, 479, 491, 522, 524, 536, 560, 563], "pointer": [2, 7, 8, 18, 25, 33, 36, 141, 159, 160, 161, 164, 209, 210, 238, 244, 248, 291, 306, 307, 312, 318, 323, 324, 325, 326, 331, 339, 343, 344, 350, 351, 352, 353, 354, 377, 381, 386, 394, 478, 491, 522, 524, 536, 560, 566, 567, 568], "paramet": [2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 19, 20, 25, 29, 41, 44, 46, 47, 48, 49, 50, 51, 68, 69, 93, 94, 145, 146, 147, 151, 152, 159, 163, 164, 175, 178, 198, 199, 204, 207, 208, 209, 210, 244, 246, 247, 248, 254, 258, 266, 267, 272, 280, 281, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 336, 338, 339, 340, 341, 343, 344, 350, 351, 352, 353, 354, 369, 370, 381, 384, 385, 386, 389, 394, 395, 404, 419, 421, 431, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572], "A": [2, 3, 4, 5, 7, 8, 10, 18, 19, 29, 36, 37, 41, 42, 43, 45, 47, 48, 50, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 77, 91, 92, 101, 102, 110, 112, 113, 114, 115, 116, 117, 118, 134, 135, 144, 147, 149, 150, 151, 152, 160, 161, 162, 163, 164, 178, 195, 197, 202, 203, 204, 211, 212, 219, 226, 227, 238, 242, 243, 244, 248, 254, 258, 261, 263, 279, 280, 281, 283, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 336, 338, 339, 340, 341, 343, 344, 348, 350, 352, 353, 354, 360, 370, 377, 379, 380, 381, 386, 394, 395, 404, 410, 415, 419, 438, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 479, 480, 484, 486, 488, 490, 491, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 532, 534, 536, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 560, 562, 566, 567, 568, 570, 572], "malloc": [2, 231, 239, 250, 331, 339, 343, 350, 351, 368, 378, 388], "cpu": [2, 8, 16, 19, 20, 27, 29, 32, 33, 35, 36, 39, 40, 42, 43, 45, 48, 54, 143, 144, 146, 147, 149, 151, 155, 159, 160, 161, 163, 164, 171, 172, 173, 174, 176, 177, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 277, 280, 298, 306, 318, 324, 354, 359, 377, 378, 379, 380, 381, 384, 385, 386, 394, 397, 399, 400, 401, 419, 420, 442, 444, 445, 522, 563, 573], "free": [2, 5, 37, 231, 239, 250, 331, 339, 343, 350, 351, 368, 378, 386, 388, 522], "default": [2, 3, 4, 5, 8, 10, 11, 12, 15, 17, 18, 19, 23, 24, 27, 30, 31, 32, 33, 36, 38, 45, 47, 49, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 85, 86, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127, 128, 129, 131, 133, 136, 138, 141, 146, 147, 151, 160, 161, 162, 163, 167, 168, 172, 173, 180, 181, 200, 201, 217, 218, 222, 223, 224, 225, 238, 261, 279, 288, 299, 317, 318, 333, 334, 377, 410, 440, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 531, 532, 533, 534, 536, 538, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 567, 568, 569, 570, 571, 572], "constructor": [2, 3, 5, 8, 10, 19, 37, 143, 151, 160, 161, 238, 370, 377, 394, 419, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 526, 527, 528, 531, 532, 533, 534, 536, 538, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 567, 568, 569, 570, 571, 572], "compil": [3, 7, 18, 45, 49, 99, 142, 146, 182, 184, 192, 221, 240, 241, 249, 255, 276, 277, 278, 286, 318, 330, 331, 334, 338, 339, 341, 343, 344, 350, 351, 389, 394, 395, 419, 420, 438, 481, 482], "partit": [3, 4, 35, 38, 39, 41, 42, 160, 161, 182, 184, 191, 238, 240, 241, 249, 255, 276, 278, 281, 283, 286, 330, 331, 336, 338, 339, 343, 344, 349, 350, 351, 377, 481, 482], "object": [3, 4, 5, 6, 7, 8, 10, 15, 16, 20, 24, 29, 36, 37, 43, 44, 47, 48, 51, 54, 143, 147, 150, 151, 159, 160, 161, 162, 164, 197, 210, 219, 227, 228, 229, 230, 236, 237, 238, 244, 245, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 303, 306, 307, 312, 315, 321, 323, 325, 326, 336, 340, 344, 350, 351, 352, 353, 360, 362, 364, 366, 370, 373, 375, 377, 381, 383, 390, 392, 399, 400, 402, 406, 408, 409, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 567, 568, 569, 570, 571, 572], "compiled_partition_handl": 3, "dnnl_graph_compiled_partition_t": [3, 281, 332, 341], "logical_tensor": [3, 6, 7, 8, 37, 163, 240, 241, 249, 255, 276, 278, 281, 338, 344, 349, 396, 397, 398, 399, 400, 401], "query_logical_tensor": [3, 37, 240, 241, 249, 255, 276, 278], "size_t": [3, 5, 6, 7, 9, 160, 161, 231, 232, 234, 235, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 266, 276, 277, 278, 281, 298, 306, 307, 312, 326, 331, 332, 334, 335, 336, 338, 339, 340, 341, 343, 349, 368, 369, 371, 372, 377, 378, 381, 383, 384, 385, 386, 388, 395, 438, 478, 481, 482, 522, 524, 567], "tid": [3, 5, 281, 332, 338], "const": [3, 4, 5, 6, 7, 8, 9, 15, 16, 33, 36, 141, 143, 147, 155, 160, 161, 162, 210, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 291, 293, 294, 296, 306, 307, 308, 312, 316, 317, 318, 321, 322, 323, 324, 325, 326, 331, 332, 335, 336, 338, 339, 340, 341, 343, 344, 348, 349, 350, 351, 352, 353, 354, 360, 362, 364, 366, 368, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 385, 386, 388, 389, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573, 574, 580], "std": [3, 4, 5, 6, 7, 9, 15, 16, 18, 36, 143, 155, 160, 161, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 313, 318, 323, 348, 350, 351, 352, 353, 360, 362, 364, 366, 369, 370, 371, 372, 373, 375, 377, 379, 380, 381, 383, 384, 385, 386, 389, 390, 392, 394, 395, 396, 397, 399, 400, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 567, 569, 570, 571, 572], "vector": [3, 4, 5, 6, 7, 16, 29, 30, 31, 32, 36, 48, 49, 50, 68, 69, 143, 147, 159, 160, 161, 162, 171, 174, 186, 209, 210, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 288, 307, 312, 313, 317, 322, 323, 348, 350, 351, 352, 353, 360, 362, 364, 366, 369, 370, 371, 372, 373, 375, 377, 379, 380, 381, 383, 384, 385, 386, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 567, 569, 570, 571, 572], "pair": [3, 27, 50, 160, 161, 238, 307, 312, 323, 332, 352, 353, 377, 481, 536, 544, 567], "get_inplace_port": 3, "void": [3, 4, 6, 8, 9, 15, 16, 18, 19, 33, 36, 141, 155, 160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 306, 307, 310, 312, 313, 318, 323, 324, 325, 326, 331, 333, 334, 339, 343, 344, 348, 349, 352, 353, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 580], "execut": [3, 10, 12, 13, 15, 16, 17, 18, 19, 24, 30, 33, 36, 37, 43, 45, 46, 47, 50, 52, 141, 157, 159, 160, 161, 162, 163, 192, 205, 206, 209, 210, 211, 212, 217, 218, 220, 221, 222, 223, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 298, 306, 307, 312, 313, 318, 321, 323, 324, 326, 331, 332, 338, 339, 341, 343, 344, 350, 351, 352, 353, 354, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 390, 391, 392, 393, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 478, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 522, 525, 527, 530, 531, 533, 536, 538, 542, 544, 546, 548, 551, 553, 555, 557, 559, 560, 561, 563, 567, 568, 569, 571], "stream": [3, 18, 24, 30, 32, 33, 36, 37, 45, 46, 141, 158, 160, 161, 163, 171, 174, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 286, 292, 306, 307, 312, 313, 323, 324, 332, 339, 343, 348, 350, 351, 352, 353, 354, 360, 362, 364, 366, 368, 369, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 390, 392, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 522, 525, 527, 531, 533, 536, 542, 544, 546, 548, 551, 553, 555, 557, 559, 561, 563, 569, 571], "astream": [3, 281, 324, 350, 351, 352, 353, 354, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 525, 527, 531, 533, 536, 542, 544, 546, 548, 551, 553, 555, 557, 561, 569, 571], "tensor": [3, 5, 6, 7, 10, 15, 16, 18, 19, 20, 22, 26, 29, 34, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 53, 54, 55, 57, 59, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 128, 130, 132, 133, 134, 136, 137, 139, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 162, 163, 164, 170, 178, 179, 182, 184, 185, 193, 195, 196, 197, 199, 203, 219, 227, 228, 229, 230, 233, 236, 237, 238, 240, 241, 242, 243, 245, 249, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 286, 288, 290, 293, 294, 295, 296, 303, 305, 306, 308, 312, 314, 316, 319, 322, 325, 326, 330, 332, 336, 339, 340, 341, 343, 349, 350, 351, 360, 362, 364, 366, 368, 369, 370, 373, 375, 377, 383, 386, 387, 389, 390, 392, 394, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 435, 436, 437, 440, 457, 459, 460, 462, 464, 466, 468, 470, 472, 481, 482, 522, 524, 526, 528, 530, 538, 566, 567], "input": [3, 4, 5, 6, 7, 13, 16, 17, 18, 20, 22, 24, 26, 28, 29, 32, 34, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 169, 170, 179, 186, 196, 198, 199, 209, 210, 233, 234, 235, 237, 238, 240, 241, 244, 246, 247, 249, 252, 254, 255, 258, 259, 266, 267, 271, 272, 276, 278, 280, 281, 283, 288, 297, 306, 312, 317, 326, 332, 336, 338, 339, 340, 341, 343, 344, 350, 351, 368, 369, 370, 371, 372, 375, 377, 381, 384, 385, 386, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 419, 420, 421, 429, 431, 442, 449, 451, 480, 481, 482, 488, 490, 504, 506, 508, 510, 516, 518, 538, 568, 570, 572], "output": [3, 4, 5, 6, 7, 10, 12, 13, 15, 20, 22, 24, 26, 29, 32, 34, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 162, 164, 179, 196, 198, 199, 209, 210, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 251, 252, 254, 255, 258, 259, 261, 267, 270, 271, 272, 276, 277, 278, 280, 281, 283, 288, 289, 290, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 336, 338, 339, 340, 341, 343, 344, 350, 351, 352, 353, 354, 368, 369, 370, 371, 372, 375, 377, 378, 379, 380, 381, 384, 385, 386, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 410, 419, 420, 421, 427, 428, 429, 431, 438, 442, 449, 451, 480, 481, 482, 488, 490, 504, 506, 508, 510, 516, 518, 530, 537, 538, 567, 568, 570, 572], "empti": [3, 4, 5, 8, 10, 15, 18, 24, 46, 108, 112, 113, 114, 115, 116, 117, 118, 163, 164, 175, 178, 194, 195, 197, 219, 237, 288, 290, 307, 312, 326, 332, 336, 339, 343, 352, 375, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 567, 568, 569, 570, 571, 572], "queri": [3, 15, 16, 18, 19, 27, 29, 30, 31, 33, 36, 37, 42, 43, 45, 46, 48, 53, 141, 143, 151, 159, 160, 161, 162, 164, 192, 197, 205, 206, 210, 217, 218, 219, 220, 221, 234, 235, 238, 239, 240, 241, 249, 255, 276, 278, 283, 288, 298, 306, 307, 310, 312, 313, 323, 326, 332, 333, 334, 348, 352, 353, 371, 372, 377, 378, 394, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 481, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 524, 526, 528, 532, 534, 536, 538, 540, 541, 543, 544, 545, 547, 549, 550, 552, 554, 556, 558, 562, 567, 570, 572], "logic": [3, 5, 6, 7, 8, 19, 20, 26, 29, 34, 36, 39, 40, 41, 42, 43, 44, 46, 51, 53, 77, 140, 142, 144, 145, 149, 152, 153, 154, 159, 162, 179, 182, 184, 193, 196, 209, 210, 240, 241, 249, 254, 255, 276, 278, 281, 286, 288, 303, 306, 330, 332, 336, 340, 341, 344, 394, 396, 397, 398, 399, 400, 401, 482, 524, 538], "id": [3, 5, 6, 7, 13, 23, 28, 37, 143, 209, 210, 240, 241, 249, 255, 256, 257, 276, 277, 278, 281, 307, 332, 338, 340, 341, 352, 395, 402, 438, 481, 482, 541], "If": [3, 5, 10, 13, 15, 18, 20, 23, 27, 28, 39, 43, 44, 46, 51, 59, 62, 66, 69, 70, 73, 74, 76, 77, 79, 110, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 131, 138, 142, 151, 152, 160, 161, 162, 163, 198, 199, 210, 238, 240, 241, 255, 276, 283, 288, 303, 306, 307, 310, 312, 318, 325, 326, 332, 333, 334, 338, 352, 353, 369, 377, 399, 400, 420, 500, 502, 524, 530, 545, 563, 566, 567], "doesn": [3, 5, 8, 30, 54, 141, 149, 160, 161, 179, 190, 191, 238, 306, 307, 317, 323, 332, 338, 344, 352, 353, 377, 394, 396, 397, 399, 400, 404, 442, 482, 516, 518, 522], "t": [3, 5, 6, 7, 8, 27, 28, 30, 33, 42, 45, 47, 51, 54, 93, 94, 141, 147, 149, 151, 160, 161, 163, 164, 169, 170, 179, 190, 191, 227, 231, 234, 235, 238, 239, 244, 246, 247, 248, 260, 261, 263, 272, 279, 281, 288, 291, 306, 307, 317, 323, 324, 329, 332, 338, 344, 348, 352, 353, 354, 360, 368, 371, 372, 377, 378, 381, 386, 394, 396, 397, 399, 400, 404, 408, 410, 415, 431, 438, 440, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572], "belong": [3, 147, 288, 332, 352, 353, 536, 544, 563], "ani": [3, 7, 10, 11, 13, 14, 15, 16, 19, 20, 22, 24, 26, 29, 30, 31, 34, 36, 37, 45, 46, 48, 49, 50, 53, 54, 55, 56, 65, 66, 80, 81, 82, 83, 89, 90, 91, 92, 96, 104, 105, 111, 119, 121, 122, 124, 130, 132, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 163, 164, 167, 176, 180, 182, 184, 190, 191, 195, 196, 197, 219, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 288, 306, 312, 318, 326, 332, 338, 341, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 390, 392, 394, 402, 404, 405, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 443, 449, 451, 462, 464, 466, 468, 470, 472, 478, 482, 488, 490, 491, 494, 496, 498, 504, 506, 508, 510, 516, 518, 522, 524, 536, 538, 543, 549, 560, 570, 572], "except": [3, 4, 5, 10, 11, 19, 22, 24, 25, 26, 36, 67, 91, 143, 151, 160, 161, 162, 164, 167, 171, 174, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 298, 318, 353, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 394, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 479, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 532, 534, 536, 543, 545, 547, 549, 552, 554, 556, 558, 560, 562, 567, 568, 570, 572, 574], "rais": [3, 5], "api": [3, 4, 5, 7, 10, 12, 14, 15, 18, 19, 20, 22, 26, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 51, 52, 53, 54, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 198, 199, 209, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 254, 255, 256, 272, 276, 277, 278, 281, 283, 287, 288, 291, 298, 299, 306, 312, 317, 318, 332, 334, 335, 336, 338, 341, 346, 352, 353, 354, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 445, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 479, 482, 484, 486, 488, 490, 491, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 540, 543, 545, 547, 549, 550, 552, 554, 556, 558, 560, 562, 570, 572], "The": [3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 179, 186, 187, 190, 191, 192, 196, 199, 210, 217, 218, 220, 221, 230, 237, 238, 248, 252, 254, 258, 266, 272, 280, 283, 288, 289, 291, 294, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 312, 313, 317, 318, 319, 323, 324, 326, 331, 332, 333, 334, 336, 338, 339, 340, 341, 343, 344, 346, 350, 351, 352, 353, 354, 356, 366, 368, 369, 370, 371, 372, 375, 377, 378, 381, 384, 385, 386, 389, 390, 394, 395, 396, 397, 399, 400, 404, 419, 420, 431, 438, 442, 449, 451, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 479, 481, 482, 488, 490, 491, 496, 498, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 536, 538, 540, 541, 544, 545, 549, 552, 554, 560, 562, 563, 567, 570, 572], "uniqu": [3, 5, 6, 7, 16, 37, 112, 113, 114, 115, 116, 117, 118, 247, 332, 338, 340, 482, 530], "requir": [3, 5, 10, 15, 16, 18, 20, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 39, 40, 42, 43, 44, 45, 46, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 186, 192, 198, 199, 209, 210, 220, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 289, 297, 306, 307, 312, 313, 323, 326, 332, 338, 352, 353, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 389, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 449, 451, 453, 455, 484, 486, 488, 490, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 524, 526, 528, 541, 567, 570, 572], "return": [3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 18, 24, 25, 30, 31, 32, 37, 41, 46, 47, 50, 53, 123, 134, 135, 141, 143, 144, 155, 160, 161, 162, 190, 191, 192, 210, 220, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 350, 351, 352, 353, 354, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 389, 390, 392, 394, 395, 396, 397, 399, 400, 402, 404, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 479, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 540, 541, 543, 544, 545, 547, 549, 550, 552, 554, 556, 558, 560, 562, 563, 567, 570, 572], "hint": [3, 10, 24, 46, 172, 173, 234, 235, 239, 272, 318, 332, 371, 372, 378, 431, 444, 449, 453, 462, 464, 468, 470, 474, 481, 484, 488, 494, 496, 500, 504, 508, 512, 516, 526, 532, 547, 552, 556, 570], "place": [3, 15, 20, 22, 23, 25, 34, 44, 46, 51, 134, 135, 142, 153, 154, 161, 203, 204, 228, 229, 230, 253, 254, 257, 260, 266, 267, 268, 274, 288, 289, 293, 297, 300, 303, 318, 322, 332, 362, 363, 364, 365, 366, 369, 384, 385, 392, 394, 402, 403, 408, 409, 421, 423, 434, 435, 455, 460, 481, 486, 530, 561], "It": [3, 4, 13, 15, 16, 18, 19, 22, 24, 27, 30, 32, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 52, 74, 76, 77, 91, 93, 95, 107, 110, 121, 139, 140, 141, 142, 146, 160, 161, 162, 163, 185, 190, 191, 193, 197, 219, 238, 255, 289, 300, 303, 306, 307, 312, 313, 318, 332, 336, 352, 377, 381, 394, 395, 396, 397, 399, 400, 419, 420, 438, 449, 453, 462, 464, 468, 470, 474, 481, 482, 484, 488, 494, 496, 500, 504, 508, 512, 516, 522, 524, 526, 532, 536, 545, 547, 552, 556, 570], "indic": [3, 4, 5, 15, 19, 28, 29, 32, 36, 37, 40, 41, 43, 47, 53, 68, 69, 76, 86, 93, 94, 112, 113, 114, 115, 116, 117, 118, 144, 145, 151, 152, 162, 178, 179, 186, 195, 209, 210, 241, 247, 258, 267, 280, 288, 294, 296, 306, 308, 312, 317, 326, 332, 341, 386, 394, 396, 397, 399, 400, 404, 421, 442, 449, 451, 462, 464, 466, 468, 470, 472, 481, 488, 490, 504, 506, 508, 510, 516, 518, 522, 524, 526, 528, 530, 538, 567, 570, 572], "can": [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 57, 71, 75, 85, 86, 93, 95, 97, 99, 100, 103, 106, 123, 126, 134, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 167, 179, 186, 187, 196, 197, 217, 218, 219, 222, 238, 248, 254, 258, 266, 272, 280, 283, 288, 289, 290, 293, 294, 295, 296, 297, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 326, 332, 333, 334, 338, 341, 352, 377, 381, 382, 386, 389, 394, 395, 396, 397, 399, 400, 404, 405, 419, 420, 431, 438, 442, 443, 455, 481, 486, 491, 516, 518, 522, 524, 529, 530, 536, 538, 541, 567, 572], "share": [3, 18, 24, 33, 37, 43, 47, 54, 141, 145, 147, 151, 162, 186, 200, 201, 224, 225, 234, 235, 239, 283, 332, 371, 372, 378, 481], "same": [3, 5, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 28, 29, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 51, 53, 54, 61, 63, 67, 68, 71, 76, 84, 86, 93, 94, 134, 139, 142, 143, 145, 148, 149, 150, 151, 152, 154, 157, 160, 161, 162, 167, 168, 179, 186, 196, 198, 199, 210, 217, 218, 234, 235, 236, 238, 239, 247, 254, 265, 272, 283, 288, 289, 290, 291, 294, 296, 297, 300, 303, 306, 307, 308, 310, 312, 323, 324, 332, 333, 338, 340, 352, 353, 354, 369, 370, 371, 372, 373, 377, 378, 384, 385, 389, 394, 419, 420, 431, 455, 462, 464, 466, 468, 470, 472, 481, 482, 486, 491, 524, 526, 528, 530, 536, 541, 544], "buffer": [3, 8, 10, 13, 17, 18, 19, 25, 36, 37, 46, 54, 153, 159, 160, 161, 200, 201, 209, 210, 217, 218, 224, 225, 227, 228, 229, 230, 232, 233, 236, 237, 238, 240, 241, 245, 246, 247, 249, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 306, 307, 312, 323, 326, 332, 338, 344, 352, 353, 360, 362, 364, 366, 369, 373, 375, 377, 383, 385, 390, 392, 394, 395, 402, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 432, 434, 436, 438, 440, 481, 522, 524, 567, 568], "In": [3, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 68, 69, 99, 126, 141, 142, 143, 147, 149, 150, 151, 153, 154, 158, 159, 160, 162, 163, 179, 196, 207, 208, 209, 222, 227, 230, 236, 237, 240, 241, 244, 249, 252, 253, 255, 259, 261, 263, 268, 276, 278, 279, 283, 288, 289, 300, 303, 306, 307, 313, 323, 332, 344, 352, 353, 360, 362, 363, 364, 365, 366, 369, 370, 373, 375, 381, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 415, 419, 420, 423, 434, 435, 438, 440, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 481, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 540, 543, 545, 547, 549, 552, 554, 556, 558, 562, 567, 568, 570, 572], "help": [3, 24, 37, 80, 140, 160, 161, 238, 240, 241, 249, 255, 276, 278, 332, 377, 481], "reduc": [3, 15, 16, 18, 19, 24, 27, 29, 40, 43, 45, 46, 47, 54, 112, 113, 114, 115, 116, 117, 118, 143, 146, 148, 157, 199, 217, 218, 244, 252, 312, 332, 381, 382, 390, 481, 530, 582], "footprint": [3, 18, 43, 154, 157, 217, 218, 332, 481], "improv": [3, 13, 15, 20, 25, 27, 32, 34, 39, 43, 44, 46, 47, 51, 61, 86, 93, 94, 162, 244, 288, 332, 346, 381, 481, 530], "local": [3, 18, 142, 159, 169, 170, 209, 210, 231, 232, 234, 235, 239, 262, 304, 332, 359, 368, 371, 372, 378, 414, 419, 481, 511, 512, 513, 514, 541, 581], "But": [3, 24, 36, 50, 244, 332, 338, 381, 396, 397, 398, 399, 400, 401, 481], "sinc": [3, 15, 16, 28, 36, 41, 50, 145, 160, 161, 162, 163, 164, 179, 199, 238, 244, 253, 254, 258, 268, 288, 313, 332, 377, 381, 392, 394, 404, 419, 420, 423, 442, 481], "mai": [3, 7, 13, 14, 15, 19, 22, 23, 24, 25, 29, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 46, 50, 52, 134, 135, 141, 142, 143, 147, 148, 149, 157, 160, 161, 163, 164, 185, 186, 187, 193, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 288, 291, 295, 306, 312, 317, 318, 324, 332, 338, 341, 354, 360, 362, 364, 366, 368, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 394, 402, 404, 406, 408, 410, 412, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 449, 451, 462, 464, 466, 468, 470, 472, 481, 488, 490, 494, 496, 498, 504, 506, 508, 510, 516, 518, 522, 524, 530, 537, 543, 549, 570, 572, 573], "have": [3, 4, 7, 10, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 32, 34, 36, 37, 39, 40, 42, 45, 46, 48, 50, 51, 54, 68, 76, 134, 135, 139, 142, 143, 145, 146, 148, 149, 154, 157, 159, 162, 164, 272, 288, 290, 294, 295, 296, 306, 307, 308, 312, 317, 318, 322, 323, 332, 336, 338, 341, 352, 353, 381, 389, 394, 404, 419, 431, 438, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 481, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 540, 541, 543, 544, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "global": [3, 18, 32, 146, 198, 199, 348, 349, 359, 481, 567], "view": [3, 49, 134, 135, 151, 246, 247, 272, 332, 384, 385, 431, 481], "user": [3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 19, 20, 24, 25, 26, 27, 29, 33, 36, 37, 42, 44, 45, 46, 48, 50, 51, 54, 93, 141, 143, 144, 146, 147, 149, 150, 154, 155, 159, 160, 161, 162, 190, 191, 198, 199, 210, 217, 218, 227, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 249, 252, 254, 255, 259, 261, 263, 266, 268, 272, 276, 278, 279, 303, 306, 307, 312, 323, 332, 336, 338, 341, 344, 352, 353, 360, 368, 369, 370, 371, 372, 375, 377, 378, 384, 385, 386, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 406, 410, 415, 419, 420, 423, 431, 438, 440, 481, 500, 502, 522, 529, 536, 563], "": [3, 5, 6, 10, 13, 15, 16, 18, 19, 22, 23, 24, 25, 26, 28, 29, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 76, 86, 93, 94, 101, 102, 134, 140, 141, 147, 149, 153, 157, 160, 161, 162, 185, 193, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 288, 306, 307, 312, 313, 332, 334, 338, 340, 352, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 381, 383, 384, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 399, 400, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 481, 522, 530, 536], "applic": [3, 10, 11, 12, 14, 15, 16, 18, 19, 24, 25, 27, 29, 31, 32, 36, 37, 38, 39, 45, 46, 50, 52, 142, 143, 146, 158, 160, 161, 162, 163, 164, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 306, 318, 332, 346, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 481, 524], "possibl": [3, 16, 19, 20, 22, 24, 26, 30, 31, 33, 34, 44, 45, 46, 47, 50, 51, 54, 141, 142, 148, 151, 153, 154, 159, 162, 272, 288, 289, 294, 296, 297, 299, 300, 301, 303, 304, 306, 308, 309, 312, 314, 316, 317, 318, 319, 320, 332, 394, 419, 431, 451, 453, 455, 462, 464, 466, 470, 472, 476, 481, 484, 486, 490, 498, 500, 502, 506, 510, 514, 518, 524, 528, 534, 543, 549, 554, 558, 570, 572], "i": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 85, 86, 88, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 126, 127, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 169, 170, 175, 178, 179, 182, 183, 184, 186, 187, 190, 191, 192, 195, 196, 197, 198, 199, 204, 215, 216, 217, 218, 219, 220, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 288, 289, 290, 291, 294, 296, 297, 300, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 326, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 346, 350, 351, 352, 353, 354, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 481, 482, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 540, 541, 543, 545, 547, 549, 552, 554, 556, 558, 560, 562, 563, 567, 568, 570, 572], "other": [3, 5, 10, 15, 18, 19, 20, 22, 24, 26, 28, 29, 30, 31, 32, 33, 36, 39, 42, 45, 46, 48, 49, 50, 52, 53, 54, 76, 141, 142, 143, 144, 147, 149, 151, 152, 153, 154, 160, 161, 162, 163, 164, 179, 190, 191, 196, 217, 218, 233, 234, 238, 245, 246, 247, 272, 283, 306, 312, 318, 332, 336, 338, 340, 346, 369, 371, 377, 381, 383, 385, 386, 394, 412, 419, 420, 431, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572], "thi": [3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 63, 64, 68, 74, 85, 86, 93, 94, 110, 126, 134, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 175, 178, 179, 199, 204, 207, 208, 217, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 288, 289, 291, 293, 300, 303, 306, 307, 312, 315, 317, 318, 323, 324, 326, 332, 334, 335, 338, 339, 341, 343, 344, 352, 353, 354, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 479, 481, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 529, 530, 532, 534, 540, 543, 545, 547, 549, 552, 554, 556, 558, 562, 563, 567, 568, 570, 572], "case": [3, 5, 7, 8, 10, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 28, 29, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 78, 85, 88, 95, 108, 109, 111, 119, 126, 134, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 157, 162, 163, 179, 227, 234, 235, 237, 244, 248, 252, 254, 259, 261, 263, 268, 279, 288, 289, 294, 296, 300, 303, 306, 307, 308, 312, 318, 323, 332, 338, 341, 344, 352, 353, 360, 369, 371, 372, 375, 381, 386, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 406, 410, 415, 419, 423, 438, 440, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 479, 481, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 540, 543, 545, 547, 549, 552, 554, 556, 558, 562, 563, 567, 568, 570, 572], "should": [3, 5, 7, 12, 15, 16, 18, 19, 20, 22, 24, 26, 27, 29, 34, 36, 37, 41, 43, 44, 45, 46, 48, 50, 51, 53, 54, 57, 59, 60, 62, 63, 67, 69, 70, 73, 75, 76, 77, 85, 86, 91, 92, 100, 103, 106, 112, 113, 114, 115, 116, 117, 118, 123, 136, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 186, 217, 218, 230, 231, 238, 239, 246, 248, 254, 258, 272, 288, 291, 298, 306, 313, 317, 318, 324, 326, 331, 332, 336, 338, 339, 341, 343, 346, 350, 351, 354, 366, 368, 369, 370, 377, 378, 386, 389, 394, 395, 396, 397, 398, 399, 400, 401, 404, 419, 431, 438, 449, 451, 460, 481, 488, 490, 491, 504, 506, 508, 510, 516, 518, 522, 529, 530, 538, 540, 545, 562, 570, 572], "take": [3, 13, 14, 15, 16, 19, 24, 27, 29, 30, 31, 34, 36, 40, 41, 42, 43, 45, 46, 49, 72, 73, 74, 76, 77, 99, 110, 112, 113, 114, 115, 116, 117, 118, 123, 143, 145, 146, 147, 162, 163, 254, 283, 289, 300, 303, 312, 318, 332, 366, 368, 369, 394, 396, 398, 399, 400, 401, 481], "pass": [3, 4, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 29, 33, 36, 37, 41, 42, 44, 45, 46, 51, 52, 53, 54, 86, 93, 134, 141, 144, 145, 147, 149, 150, 151, 160, 161, 163, 164, 179, 198, 199, 231, 232, 238, 239, 244, 248, 250, 254, 272, 277, 283, 288, 294, 296, 301, 305, 306, 307, 312, 318, 326, 332, 336, 338, 352, 353, 368, 369, 370, 377, 378, 381, 386, 388, 389, 394, 395, 419, 431, 438, 464, 466, 470, 472, 478, 480, 481, 491, 522, 530, 536, 538, 544, 560, 563, 567], "differ": [3, 5, 13, 15, 16, 18, 19, 22, 24, 25, 27, 32, 33, 36, 37, 38, 39, 40, 42, 43, 47, 50, 53, 54, 57, 71, 75, 85, 99, 100, 103, 106, 121, 133, 134, 135, 136, 143, 147, 148, 149, 151, 157, 160, 161, 162, 169, 170, 185, 186, 187, 193, 217, 218, 227, 234, 235, 237, 238, 239, 252, 259, 261, 263, 267, 268, 272, 279, 289, 298, 300, 303, 306, 326, 332, 338, 360, 366, 369, 371, 372, 375, 377, 378, 381, 386, 390, 394, 396, 397, 399, 400, 406, 410, 415, 419, 420, 421, 423, 431, 440, 460, 481, 491, 524, 540, 545, 562, 567], "avoid": [3, 16, 17, 22, 24, 26, 31, 32, 36, 45, 46, 50, 60, 61, 62, 146, 148, 160, 161, 230, 234, 235, 238, 239, 332, 366, 371, 372, 377, 378, 419, 481], "overwrit": [3, 22, 27, 29, 48, 54, 148, 150, 154, 332, 481], "which": [3, 6, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 58, 67, 68, 74, 76, 77, 84, 86, 93, 94, 95, 97, 98, 110, 112, 113, 114, 115, 116, 117, 118, 126, 127, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 153, 157, 159, 160, 161, 162, 163, 179, 182, 184, 186, 196, 238, 240, 241, 246, 247, 248, 249, 251, 252, 254, 255, 258, 265, 266, 272, 276, 278, 283, 288, 289, 291, 294, 296, 297, 306, 308, 312, 315, 318, 319, 320, 321, 324, 331, 332, 334, 338, 339, 340, 344, 354, 377, 384, 385, 386, 389, 390, 394, 395, 396, 397, 399, 400, 404, 419, 420, 431, 438, 449, 453, 460, 462, 464, 468, 470, 474, 481, 482, 484, 488, 491, 494, 496, 500, 504, 508, 512, 516, 522, 526, 532, 538, 541, 545, 547, 552, 554, 556, 558, 562, 570], "probabl": [3, 13, 15, 40, 42, 54, 288, 312, 332, 481, 538], "caus": [3, 11, 45, 46, 332, 478, 481, 491, 522, 536, 560], "unexpect": [3, 25, 242, 243, 251, 277, 291, 324, 332, 354, 379, 380, 389, 438, 481], "incorrect": [3, 18, 24, 163, 164, 192, 220, 221, 250, 266, 332, 388, 394, 481], "result": [3, 10, 12, 13, 15, 16, 18, 20, 22, 24, 25, 28, 29, 31, 32, 34, 37, 40, 42, 43, 44, 46, 47, 48, 50, 51, 53, 54, 84, 112, 113, 114, 115, 116, 117, 118, 133, 143, 144, 145, 147, 148, 150, 153, 157, 160, 161, 162, 164, 199, 210, 211, 212, 233, 238, 240, 241, 244, 246, 247, 248, 251, 254, 255, 256, 267, 276, 277, 281, 288, 291, 306, 312, 324, 326, 332, 354, 369, 370, 377, 381, 382, 386, 420, 421, 481, 524, 530, 537, 538, 541, 567], "list": [3, 6, 7, 24, 34, 36, 45, 46, 52, 58, 59, 68, 69, 70, 71, 72, 73, 74, 76, 91, 92, 101, 102, 110, 112, 113, 114, 115, 116, 117, 118, 134, 135, 142, 147, 151, 163, 164, 171, 174, 281, 318, 332, 339, 341, 343, 359, 394, 396, 397, 399, 400], "run": [3, 10, 12, 18, 19, 20, 23, 24, 32, 36, 44, 46, 47, 49, 50, 54, 60, 142, 160, 161, 164, 217, 218, 233, 238, 240, 241, 246, 247, 248, 249, 255, 258, 266, 276, 278, 280, 281, 302, 307, 323, 324, 337, 339, 343, 350, 351, 370, 377, 381, 384, 385, 386, 387, 389, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 419, 420, 438, 442], "over": [3, 13, 18, 24, 26, 30, 31, 46, 47, 49, 51, 59, 67, 69, 70, 73, 93, 94, 112, 113, 114, 115, 116, 117, 118, 146, 147, 151, 153, 160, 161, 162, 163, 238, 290, 293, 318, 320, 350, 351, 377, 396, 399, 400, 460, 540, 556, 558], "graph_handl": 4, "engin": [4, 7, 8, 10, 15, 16, 24, 27, 29, 32, 33, 35, 36, 37, 45, 46, 48, 54, 121, 141, 147, 151, 160, 161, 163, 177, 192, 209, 210, 220, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 286, 288, 289, 290, 292, 293, 294, 296, 297, 300, 301, 303, 304, 305, 306, 307, 308, 309, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 330, 332, 334, 336, 339, 341, 343, 344, 348, 349, 350, 351, 352, 353, 354, 359, 360, 362, 364, 366, 368, 369, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 390, 392, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 445, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 477, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 530, 532, 534, 536, 538, 540, 541, 543, 544, 545, 547, 549, 550, 552, 554, 556, 558, 560, 562, 570, 572], "kind": [4, 6, 7, 10, 15, 17, 20, 24, 27, 29, 33, 34, 36, 37, 43, 44, 47, 48, 51, 141, 144, 145, 150, 151, 152, 153, 160, 161, 163, 164, 169, 170, 177, 178, 189, 195, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 219, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 289, 290, 294, 296, 297, 298, 300, 301, 303, 304, 306, 307, 308, 309, 312, 313, 314, 316, 317, 319, 320, 323, 334, 335, 336, 340, 341, 348, 349, 352, 353, 360, 362, 364, 366, 368, 369, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 569, 570, 571, 572], "engine_kind": [4, 27, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 245, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 336, 360, 362, 364, 366, 368, 369, 371, 372, 373, 375, 383, 390, 392, 394, 402, 404, 406, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442], "fpmath_mod": [4, 14, 160, 163, 280, 299, 318, 348, 442, 538], "mode": [4, 10, 12, 18, 20, 22, 24, 29, 34, 36, 37, 44, 47, 51, 53, 60, 74, 76, 77, 91, 92, 110, 126, 143, 144, 145, 146, 147, 150, 151, 164, 167, 168, 180, 181, 186, 187, 207, 208, 215, 216, 217, 218, 227, 228, 230, 261, 262, 263, 277, 279, 280, 281, 286, 288, 292, 297, 305, 312, 318, 336, 348, 359, 360, 361, 362, 363, 366, 375, 376, 386, 390, 391, 392, 393, 402, 403, 408, 409, 410, 411, 413, 414, 415, 416, 419, 421, 422, 423, 424, 429, 430, 434, 435, 438, 440, 441, 442, 444, 491, 538], "set_fpmath_mod": [4, 14, 37, 43, 280, 442, 538], "bool": [4, 5, 6, 7, 9, 32, 58, 59, 66, 79, 86, 93, 94, 99, 108, 112, 113, 114, 115, 116, 117, 118, 120, 125, 131, 134, 138, 155, 160, 161, 162, 238, 242, 243, 244, 248, 249, 265, 272, 278, 281, 306, 348, 377, 379, 380, 381, 386, 398, 401, 419, 431, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572], "apply_to_int": [4, 43, 280, 281, 288, 336, 442, 538], "fals": [4, 5, 7, 12, 42, 58, 59, 66, 79, 85, 86, 93, 94, 99, 108, 112, 113, 114, 115, 116, 117, 118, 120, 125, 131, 134, 138, 160, 161, 238, 240, 241, 249, 255, 272, 276, 278, 377, 398, 401, 431, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572], "get_fpmath_mod": [4, 538], "statu": [4, 7, 24, 25, 39, 40, 42, 43, 160, 161, 221, 233, 234, 238, 245, 247, 254, 256, 277, 281, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 334, 336, 338, 339, 340, 341, 343, 344, 348, 349, 352, 354, 371, 377, 383, 385, 394, 438, 479], "add_op": [4, 37, 240, 241, 255, 276, 336, 396, 397, 399, 400], "op": [4, 7, 10, 13, 16, 32, 35, 36, 39, 42, 45, 46, 47, 59, 64, 86, 92, 93, 94, 140, 160, 161, 164, 187, 190, 191, 192, 198, 199, 221, 228, 229, 230, 233, 237, 238, 240, 241, 249, 252, 255, 258, 259, 264, 266, 270, 276, 278, 280, 281, 283, 286, 288, 291, 324, 326, 330, 336, 341, 349, 354, 359, 362, 363, 364, 365, 370, 375, 376, 377, 390, 391, 396, 397, 399, 400, 404, 406, 407, 417, 418, 420, 427, 442, 530, 538, 567], "allow_except": 4, "true": [4, 5, 6, 7, 9, 12, 14, 42, 43, 46, 52, 54, 58, 59, 66, 79, 85, 86, 93, 94, 99, 108, 112, 113, 114, 115, 116, 117, 118, 120, 125, 131, 134, 138, 142, 160, 161, 162, 238, 240, 241, 255, 272, 276, 280, 338, 377, 431, 442, 491, 524, 540, 545, 563, 567], "final": [4, 15, 16, 18, 24, 34, 37, 47, 50, 159, 160, 161, 162, 169, 179, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 281, 306, 326, 336, 338, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 381, 383, 389, 390, 392, 394, 395, 396, 397, 399, 400, 402, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 432, 434, 436, 438, 440, 567], "is_fin": 4, "get_partit": [4, 7, 37, 240, 241, 255, 276, 341, 396, 397, 399, 400], "polici": [4, 7, 18, 42, 191, 217, 218, 281, 336, 399, 400], "fusion": [4, 15, 19, 20, 36, 54, 190, 191, 266, 282, 288, 404, 405, 442, 443], "creat": [4, 7, 8, 10, 15, 16, 18, 20, 22, 23, 24, 26, 29, 33, 34, 36, 37, 39, 40, 42, 44, 45, 46, 48, 51, 53, 54, 84, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 197, 209, 210, 217, 218, 219, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 288, 289, 290, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 336, 338, 339, 341, 343, 344, 350, 351, 352, 353, 354, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 522, 524, 530, 538, 545, 560], "new": [4, 7, 19, 23, 27, 36, 37, 47, 155, 160, 161, 169, 170, 179, 204, 238, 306, 310, 312, 332, 333, 334, 336, 338, 341, 344, 377, 396, 399, 400, 491, 524], "float": [4, 6, 10, 11, 15, 16, 17, 25, 29, 32, 36, 37, 40, 46, 47, 54, 61, 62, 74, 110, 149, 150, 153, 157, 160, 161, 164, 167, 168, 175, 180, 181, 183, 194, 210, 215, 216, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 286, 288, 289, 291, 292, 297, 300, 303, 304, 306, 314, 316, 317, 318, 322, 324, 336, 340, 348, 354, 359, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 392, 394, 395, 397, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 530, 532, 534, 538, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "point": [4, 10, 11, 15, 16, 17, 22, 24, 25, 29, 32, 36, 37, 40, 41, 46, 47, 54, 74, 76, 110, 147, 149, 150, 153, 157, 159, 160, 164, 167, 168, 175, 180, 181, 183, 194, 210, 215, 216, 244, 258, 280, 286, 288, 292, 306, 312, 317, 318, 336, 340, 359, 370, 381, 382, 384, 385, 386, 404, 405, 420, 442, 443, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 530, 538, 540, 570, 572], "math": [4, 10, 32, 37, 164, 180, 181, 235, 246, 247, 272, 286, 288, 292, 318, 336, 359, 372, 431], "all": [4, 5, 7, 10, 14, 15, 16, 18, 22, 23, 24, 26, 29, 32, 33, 34, 36, 39, 40, 41, 42, 43, 45, 47, 50, 54, 64, 67, 69, 71, 72, 73, 99, 112, 113, 114, 115, 116, 117, 118, 123, 126, 134, 142, 145, 146, 147, 150, 151, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 186, 187, 207, 208, 210, 217, 218, 238, 240, 241, 246, 247, 248, 249, 254, 255, 258, 266, 276, 278, 280, 283, 288, 289, 290, 299, 300, 303, 306, 307, 313, 317, 318, 321, 326, 334, 336, 338, 339, 352, 353, 377, 381, 384, 385, 386, 394, 395, 396, 397, 398, 399, 400, 401, 404, 420, 438, 442, 449, 451, 453, 462, 464, 466, 468, 470, 472, 484, 488, 490, 494, 496, 498, 500, 504, 506, 508, 510, 516, 518, 524, 529, 536, 540, 541, 560, 567, 570, 572], "inherit": [4, 50, 266, 306, 336, 420], "set": [4, 6, 7, 8, 10, 12, 14, 15, 16, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 32, 36, 37, 38, 42, 43, 44, 46, 47, 49, 50, 51, 54, 58, 68, 86, 93, 94, 108, 112, 113, 114, 115, 116, 117, 118, 123, 126, 146, 147, 149, 151, 153, 159, 160, 161, 163, 164, 171, 174, 228, 229, 233, 234, 238, 240, 241, 246, 247, 255, 257, 260, 266, 267, 268, 274, 276, 280, 281, 288, 290, 294, 296, 299, 301, 303, 305, 306, 307, 309, 310, 312, 314, 316, 317, 318, 323, 324, 325, 326, 333, 334, 336, 340, 344, 352, 353, 362, 364, 369, 370, 371, 377, 395, 396, 397, 398, 400, 401, 402, 408, 419, 420, 421, 423, 434, 442, 491, 522, 524, 530, 538, 563, 566, 567], "enabl": [4, 10, 14, 15, 18, 19, 20, 24, 27, 29, 30, 31, 32, 33, 34, 36, 38, 44, 47, 48, 49, 50, 51, 52, 54, 141, 142, 146, 147, 153, 155, 162, 164, 227, 237, 240, 241, 252, 255, 259, 261, 263, 268, 276, 279, 281, 306, 318, 334, 346, 348, 360, 369, 370, 375, 386, 390, 394, 397, 404, 406, 410, 415, 423, 440, 442, 522], "automat": [4, 10, 36, 50, 146, 170, 178, 179, 195, 196, 460, 562], "down": [4, 10, 14, 17, 29, 37, 39, 41, 50, 160, 162, 163, 420], "convers": [4, 10, 14, 16, 17, 29, 32, 41, 50, 121, 160, 161, 180, 181, 215, 216], "promot": 4, "speedup": [4, 14, 420], "lower": [4, 10, 11, 16, 20, 28, 29, 32, 37, 43, 44, 47, 50, 65, 66, 142, 144, 145, 150, 162, 163, 179], "precis": [4, 10, 11, 16, 17, 25, 29, 32, 42, 43, 45, 47, 48, 50, 54, 139, 149, 153, 157, 160, 161, 162, 175, 183, 194, 238, 244, 248, 284, 288, 291, 324, 354, 377, 381, 382, 386, 524, 538], "data": [4, 5, 8, 11, 14, 15, 16, 17, 18, 19, 24, 25, 28, 36, 37, 41, 45, 46, 50, 147, 157, 159, 164, 175, 179, 183, 192, 194, 196, 199, 205, 206, 207, 208, 209, 210, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 286, 288, 291, 292, 293, 297, 298, 303, 306, 313, 314, 315, 316, 317, 319, 322, 324, 325, 326, 336, 338, 344, 354, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 445, 482, 500, 502, 522, 524, 530, 538, 544, 552, 554, 562, 566, 567, 568, 570, 582], "type": [4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 33, 36, 37, 41, 45, 46, 47, 147, 157, 158, 162, 163, 164, 175, 182, 183, 184, 192, 194, 198, 202, 208, 209, 210, 221, 226, 233, 234, 238, 242, 243, 244, 251, 254, 266, 280, 281, 286, 287, 288, 292, 298, 299, 303, 306, 307, 312, 317, 323, 325, 326, 329, 336, 338, 341, 344, 345, 352, 353, 366, 370, 371, 377, 379, 380, 381, 389, 394, 395, 397, 404, 420, 438, 442, 445, 482, 491, 500, 502, 522, 524, 530, 538, 541, 566, 567, 568], "when": [4, 5, 8, 10, 11, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 179, 186, 190, 191, 196, 198, 217, 218, 238, 246, 250, 251, 288, 306, 307, 312, 313, 318, 324, 326, 334, 338, 354, 377, 384, 385, 388, 389, 394, 419, 420, 482, 522, 530, 538, 567], "avail": [4, 11, 14, 21, 24, 25, 29, 30, 32, 36, 40, 42, 43, 45, 49, 52, 54, 112, 113, 114, 115, 116, 117, 118, 134, 143, 147, 149, 163, 164, 192, 220, 221, 227, 233, 234, 245, 246, 247, 312, 360, 371, 383, 384, 385, 395, 419, 438, 540], "enforc": [4, 10, 12, 46], "compli": [4, 14, 420], "specifi": [4, 6, 10, 11, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 29, 31, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 57, 58, 59, 67, 69, 74, 75, 76, 77, 84, 85, 86, 91, 92, 100, 101, 102, 103, 106, 110, 112, 113, 114, 115, 116, 117, 118, 123, 126, 133, 134, 135, 136, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 163, 164, 179, 186, 187, 198, 199, 217, 218, 231, 232, 234, 235, 238, 239, 246, 247, 248, 251, 266, 288, 289, 291, 300, 303, 306, 307, 318, 323, 324, 326, 332, 341, 350, 351, 352, 353, 354, 368, 369, 371, 372, 377, 378, 384, 385, 386, 389, 394, 395, 396, 397, 398, 399, 400, 401, 404, 419, 438, 442, 478, 491, 500, 502, 522, 530, 536, 538, 541, 544, 560, 567, 568], "boolean": [4, 32, 37, 42, 43, 85, 123, 175, 183, 288, 340, 538], "flag": [4, 20, 24, 32, 36, 37, 38, 43, 44, 51, 147, 151, 163, 164, 171, 172, 173, 174, 198, 199, 209, 210, 213, 214, 223, 251, 281, 289, 291, 300, 303, 312, 317, 318, 321, 324, 326, 334, 336, 341, 348, 349, 354, 362, 363, 389, 419, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 532, 534, 536, 541, 543, 545, 547, 549, 552, 554, 556, 558, 560, 562, 563, 567, 568, 570, 572], "setter": [4, 10, 27, 31, 37, 160], "control": [4, 10, 17, 18, 19, 20, 23, 24, 29, 32, 44, 51, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 86, 91, 92, 99, 101, 102, 134, 142, 159, 288, 289, 300, 303, 310, 318, 333, 334, 336, 444, 560], "whether": [4, 29, 33, 37, 50, 53, 58, 59, 86, 93, 99, 108, 141, 288, 306, 307, 312, 336, 352, 369, 419, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 532, 534, 536, 538, 543, 545, 547, 549, 552, 554, 556, 558, 560, 562, 567, 568, 570, 572], "arithmet": [4, 32, 37, 115, 133, 147, 153, 160, 248, 288, 336, 386, 538], "integr": [4, 11, 19, 24, 32, 37, 43, 46, 52, 147, 240, 241, 249, 255, 276, 278, 280, 318, 336, 442], "oper": [4, 5, 6, 7, 10, 12, 13, 15, 16, 18, 19, 20, 22, 24, 26, 28, 29, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 162, 163, 170, 186, 187, 188, 189, 190, 191, 192, 199, 220, 221, 222, 230, 238, 240, 241, 249, 252, 254, 255, 258, 262, 266, 276, 278, 280, 282, 283, 288, 289, 290, 291, 297, 300, 303, 306, 307, 312, 314, 316, 324, 325, 326, 336, 338, 339, 340, 341, 348, 352, 354, 362, 363, 366, 369, 370, 377, 381, 389, 390, 394, 395, 396, 397, 399, 400, 404, 405, 413, 419, 420, 438, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572, 580], "get": [4, 13, 17, 22, 27, 35, 36, 39, 40, 42, 45, 46, 147, 162, 163, 240, 241, 244, 251, 254, 255, 256, 272, 276, 277, 297, 317, 318, 324, 336, 338, 344, 359, 381, 419, 431, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572], "add": [4, 6, 14, 22, 24, 29, 36, 42, 45, 48, 50, 52, 54, 58, 59, 63, 68, 69, 70, 71, 72, 73, 101, 102, 148, 150, 160, 161, 163, 169, 170, 188, 198, 199, 213, 214, 232, 238, 240, 241, 246, 255, 266, 276, 283, 285, 306, 336, 340, 369, 370, 377, 384, 385, 396, 397, 420, 524], "dag": [4, 39, 40, 42, 43, 336], "failur": [4, 163, 164, 186, 306, 336, 396, 399, 400, 479, 524], "ha": [4, 5, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 28, 32, 36, 37, 40, 41, 47, 50, 54, 84, 86, 93, 94, 95, 142, 143, 145, 146, 147, 157, 160, 161, 163, 164, 179, 196, 199, 237, 238, 247, 248, 252, 288, 306, 307, 310, 312, 318, 323, 333, 336, 338, 352, 353, 369, 375, 377, 381, 384, 386, 389, 390, 394, 395, 419, 420, 438, 482, 524, 540], "alreadi": [4, 36, 46, 147, 160, 310, 333, 336, 394, 419, 540], "been": [4, 15, 24, 157, 288, 306, 307, 312, 323, 336, 352, 353, 420, 522, 540], "ad": [4, 6, 17, 18, 29, 37, 45, 50, 60, 61, 62, 63, 86, 93, 94, 162, 179, 186, 215, 216, 266, 312, 326, 336, 340, 396, 397, 399, 400, 420, 567], "cannot": [4, 10, 15, 33, 36, 37, 46, 50, 54, 121, 143, 144, 149, 151, 158, 162, 163, 192, 197, 217, 218, 219, 221, 244, 306, 318, 336, 381, 478, 491, 522, 524, 536, 545, 560], "schema": [4, 192, 197, 219, 221, 336], "check": [4, 7, 10, 16, 20, 22, 29, 34, 37, 44, 46, 48, 53, 54, 121, 144, 151, 152, 160, 161, 163, 164, 186, 187, 231, 233, 234, 238, 239, 240, 241, 244, 247, 248, 250, 251, 254, 255, 256, 258, 276, 277, 281, 288, 306, 307, 312, 334, 336, 341, 352, 368, 369, 371, 377, 378, 381, 385, 386, 388, 394, 395, 396, 397, 398, 399, 400, 401, 404, 419, 460, 479, 491, 524, 536, 538, 540, 545, 550, 562], "eg": [4, 5, 190, 191, 280, 336, 338, 442], "number": [4, 5, 7, 14, 15, 16, 17, 18, 20, 22, 24, 25, 28, 29, 32, 36, 37, 40, 42, 43, 44, 45, 46, 51, 54, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 76, 77, 86, 101, 102, 110, 140, 142, 145, 146, 148, 151, 159, 162, 163, 164, 179, 186, 209, 210, 234, 235, 236, 239, 242, 243, 246, 247, 261, 272, 275, 283, 288, 290, 291, 293, 294, 295, 296, 298, 306, 307, 308, 310, 312, 313, 318, 322, 323, 324, 326, 332, 333, 336, 338, 339, 340, 341, 343, 353, 354, 368, 369, 370, 371, 372, 373, 378, 379, 380, 381, 410, 431, 436, 462, 464, 466, 468, 470, 472, 478, 482, 522, 524, 526, 528, 530, 538, 541, 552, 554, 556, 558, 563, 567], "attribut": [4, 6, 19, 32, 37, 39, 42, 43, 45, 46, 146, 147, 159, 163, 164, 186, 187, 199, 209, 238, 248, 258, 266, 280, 286, 289, 290, 293, 294, 296, 297, 300, 301, 303, 304, 305, 308, 309, 311, 312, 314, 315, 316, 317, 319, 320, 322, 325, 326, 336, 340, 359, 364, 365, 370, 375, 376, 377, 385, 386, 390, 391, 396, 398, 399, 400, 401, 404, 406, 407, 417, 418, 420, 427, 428, 442, 445, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 482, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 530, 532, 534, 537, 538, 541, 543, 544, 545, 547, 549, 552, 554, 556, 558, 562, 565, 566, 567, 570, 572], "etc": [4, 5, 12, 19, 23, 28, 36, 39, 42, 146, 147, 150, 162, 163, 164, 283, 298, 336, 338, 396, 399, 400, 524, 541], "allow": [4, 10, 11, 14, 16, 17, 19, 24, 26, 29, 30, 31, 32, 36, 37, 46, 47, 48, 52, 57, 75, 85, 100, 103, 106, 123, 136, 145, 154, 157, 159, 161, 168, 175, 178, 180, 181, 204, 239, 266, 283, 288, 290, 291, 306, 309, 314, 316, 324, 354, 378, 420, 438, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 524, 526, 528, 532, 534, 543, 545, 547, 549, 552, 554, 556, 558, 562, 567, 568, 570, 572], "throw": [4, 10, 25, 143, 160, 161, 227, 233, 234, 238, 242, 243, 244, 245, 247, 248, 251, 254, 256, 258, 266, 277, 353, 360, 371, 377, 379, 380, 381, 383, 385, 386, 389, 394, 395, 404, 438, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 479, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 532, 534, 540, 543, 545, 547, 549, 552, 554, 556, 558, 562, 567, 568, 570, 572], "fail": [4, 147, 163, 164, 192, 220, 221, 244, 248, 254, 256, 258, 277, 381, 386, 394, 395, 404, 438, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 479, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 532, 534, 540, 543, 545, 547, 549, 552, 554, 556, 558, 562, 567, 568, 570, 572], "success": [4, 53, 192, 220, 221, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 336, 338, 339, 340, 341, 343, 344, 352, 354, 420, 540], "describ": [4, 5, 11, 14, 15, 16, 17, 19, 28, 32, 37, 40, 46, 47, 50, 91, 92, 142, 149, 151, 158, 159, 161, 162, 178, 179, 195, 244, 272, 283, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 336, 338, 339, 340, 341, 343, 344, 352, 354, 369, 381, 394, 395, 419, 431, 438, 458, 477, 521, 523, 524, 535, 539, 550, 559, 564, 565], "error": [4, 15, 16, 24, 25, 30, 31, 37, 40, 42, 43, 46, 47, 50, 143, 160, 161, 163, 233, 234, 238, 244, 245, 247, 254, 277, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 336, 338, 339, 340, 341, 343, 344, 348, 352, 354, 371, 377, 381, 383, 385, 394, 419, 438, 529, 538], "otherwis": [4, 5, 13, 17, 20, 24, 30, 32, 34, 46, 66, 79, 88, 112, 113, 114, 115, 116, 117, 118, 120, 125, 131, 138, 143, 160, 161, 198, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 336, 338, 339, 340, 341, 343, 344, 352, 354, 474, 491, 524, 567], "mean": [4, 5, 14, 15, 16, 22, 26, 27, 28, 34, 36, 37, 40, 42, 46, 53, 60, 61, 62, 68, 69, 70, 71, 72, 73, 76, 77, 86, 93, 94, 97, 98, 101, 102, 115, 134, 135, 142, 144, 145, 148, 149, 152, 153, 154, 160, 161, 162, 169, 170, 182, 184, 185, 193, 198, 199, 228, 230, 238, 254, 257, 260, 265, 283, 289, 291, 294, 296, 297, 300, 303, 306, 312, 314, 324, 334, 336, 341, 354, 362, 366, 377, 389, 394, 395, 402, 408, 419, 438, 453, 455, 462, 464, 466, 468, 470, 472, 474, 476, 482, 484, 486, 500, 502, 524], "finish": [4, 37, 160, 161, 238, 240, 241, 249, 255, 276, 278, 321, 336, 377, 396, 397, 399, 400, 560, 563], "readi": [4, 37, 46, 326, 336, 394, 396, 399, 400, 419, 567], "similarli": [4, 40, 50, 144, 151, 336, 419], "un": [4, 336], "also": [4, 7, 15, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 32, 36, 37, 39, 40, 42, 45, 47, 52, 54, 95, 142, 146, 147, 149, 155, 159, 160, 161, 162, 163, 179, 209, 227, 238, 248, 261, 263, 272, 279, 288, 289, 290, 293, 294, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 336, 338, 341, 354, 360, 369, 377, 386, 389, 394, 395, 396, 397, 398, 399, 400, 401, 410, 415, 419, 431, 438, 440, 522, 524, 530, 538, 541], "filter": [4, 28, 147, 162, 163, 336], "claim": [4, 336, 412], "intern": [4, 7, 18, 24, 30, 31, 33, 37, 163, 175, 178, 204, 227, 232, 237, 252, 259, 261, 263, 268, 272, 279, 288, 336, 360, 375, 384, 390, 395, 399, 400, 406, 410, 415, 423, 431, 438, 440], "capabl": [4, 10, 15, 30, 32, 36, 41, 164, 336], "store": [4, 8, 16, 18, 19, 28, 29, 40, 42, 43, 45, 47, 50, 134, 141, 146, 147, 151, 153, 160, 161, 162, 199, 234, 238, 247, 258, 280, 291, 306, 324, 354, 371, 377, 381, 385, 394, 396, 397, 399, 400, 404, 442, 491, 522, 537], "dnnl_dim_t": [5, 210, 231, 239, 250, 281, 288, 291, 295, 300, 304, 306, 319, 324, 326, 348, 354, 368, 378, 388, 522], "dim": [5, 15, 16, 36, 54, 149, 160, 161, 162, 179, 209, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 288, 306, 312, 338, 360, 362, 364, 366, 368, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 482, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 538, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 567, 568, 570, 572, 575, 576, 577, 578, 579], "enum": [5, 6, 7, 159, 162, 281, 287, 288, 295, 298, 299, 306, 307, 312, 313, 317, 318, 321, 323, 325, 328, 329, 338, 340, 341, 342, 348, 349, 352, 353, 355, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 478, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 522, 525, 527, 531, 533, 536, 542, 544, 546, 548, 551, 553, 555, 557, 560, 561, 569, 571], "data_typ": [5, 15, 16, 36, 50, 149, 160, 161, 162, 163, 164, 175, 209, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 306, 348, 360, 362, 364, 366, 369, 370, 371, 372, 373, 375, 377, 379, 380, 381, 383, 384, 385, 386, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 482, 500, 502, 522, 524, 530, 538, 567, 568], "layout_typ": [5, 37, 240, 241, 249, 255, 276, 278, 281, 338, 396, 397, 398, 399, 400, 401, 482], "property_typ": [5, 241, 281, 397], "dnnl_graph_logical_tensor_t": [5, 281, 332, 338, 340, 341, 344], "c_data": 5, "dtype": [5, 281, 338], "int32_t": [5, 36, 50, 242, 243, 244, 247, 258, 281, 288, 291, 306, 312, 324, 338, 348, 354, 379, 380, 381, 404, 530], "ndim": [5, 33, 36, 51, 162, 164, 179, 231, 239, 281, 288, 306, 338, 353, 368, 378, 482], "ltype": [5, 281, 338], "ptype": [5, 281, 338], "undef": [5, 15, 163, 164, 170, 183, 184, 185, 186, 194, 195, 196, 197, 203, 205, 207, 209, 211, 213, 226, 240, 241, 255, 276, 281, 396, 397, 399, 400, 419, 420, 449, 451, 453, 455, 457, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 526, 528, 530, 532, 534, 541, 543, 552, 554, 556, 558, 570, 572], "adim": [5, 251, 281, 524], "stride": [5, 10, 15, 16, 28, 29, 37, 39, 54, 58, 59, 68, 69, 70, 71, 72, 73, 101, 102, 121, 159, 163, 164, 178, 179, 182, 184, 186, 187, 195, 196, 209, 210, 231, 232, 233, 234, 235, 237, 239, 240, 241, 249, 252, 254, 255, 265, 266, 267, 272, 276, 278, 281, 288, 294, 296, 306, 308, 338, 368, 369, 370, 371, 372, 375, 378, 390, 394, 396, 397, 399, 400, 404, 419, 420, 421, 431, 442, 462, 464, 466, 468, 470, 472, 482, 524, 526, 528, 530, 541], "lid": 5, "get_dim": [5, 162, 244, 258, 266, 280, 381, 404, 420, 442, 524], "get_id": [5, 7, 240, 241, 249, 255, 276, 278], "get_data_typ": [5, 160, 161, 238, 240, 241, 249, 255, 266, 276, 278, 377, 420, 524], "get_property_typ": 5, "get_layout_typ": 5, "get_layout_id": 5, "get_strid": [5, 162, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 524, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_mem_s": [5, 37], "is_equ": [5, 281, 338], "lt": [5, 8, 281, 332], "integ": [5, 13, 16, 30, 32, 41, 47, 50, 54, 122, 147, 160, 167, 168, 171, 174, 175, 183, 194, 244, 246, 288, 291, 324, 340, 354, 370, 381, 522, 538], "repres": [5, 6, 7, 15, 16, 19, 28, 29, 36, 37, 41, 50, 65, 68, 84, 97, 98, 126, 127, 140, 147, 160, 163, 240, 241, 242, 243, 249, 255, 276, 278, 332, 336, 341, 369, 379, 380, 384, 385, 389, 394, 395, 420, 438, 522], "dimens": [5, 7, 13, 15, 16, 18, 19, 20, 22, 26, 28, 29, 34, 36, 37, 39, 40, 41, 42, 43, 44, 47, 48, 51, 54, 58, 59, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 84, 86, 91, 93, 94, 97, 98, 99, 101, 102, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 123, 126, 134, 135, 144, 145, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 178, 179, 186, 195, 196, 202, 209, 210, 226, 227, 228, 229, 230, 236, 237, 238, 245, 248, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 280, 288, 290, 291, 293, 294, 295, 296, 303, 306, 308, 316, 324, 326, 338, 341, 344, 353, 354, 360, 362, 364, 366, 373, 375, 377, 381, 383, 384, 385, 386, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 460, 462, 464, 466, 468, 470, 472, 482, 522, 524, 526, 528, 530, 538, 547, 549, 567, 568], "size": [5, 9, 15, 16, 18, 20, 22, 25, 27, 28, 32, 36, 37, 40, 42, 43, 44, 46, 47, 50, 51, 58, 59, 63, 76, 91, 92, 101, 102, 126, 143, 144, 145, 148, 150, 154, 159, 160, 161, 162, 175, 179, 183, 186, 187, 196, 209, 210, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 251, 252, 253, 254, 255, 257, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 288, 290, 291, 304, 306, 307, 312, 313, 319, 324, 326, 331, 334, 338, 339, 343, 349, 352, 354, 360, 362, 364, 366, 368, 369, 371, 372, 373, 375, 377, 378, 379, 380, 381, 384, 385, 386, 390, 392, 394, 402, 406, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 482, 484, 486, 512, 514, 522, 524, 530, 538, 541, 552, 554, 567], "implement": [5, 10, 11, 12, 15, 16, 18, 19, 24, 25, 30, 32, 36, 37, 41, 45, 46, 47, 50, 74, 76, 77, 99, 110, 140, 142, 143, 146, 155, 157, 158, 162, 164, 167, 168, 175, 183, 192, 198, 204, 209, 210, 220, 221, 227, 230, 233, 234, 237, 240, 241, 245, 247, 248, 249, 251, 252, 254, 255, 259, 266, 268, 276, 278, 312, 318, 324, 354, 360, 362, 363, 366, 368, 369, 371, 372, 375, 378, 383, 384, 385, 386, 389, 390, 394, 395, 402, 403, 406, 419, 423, 438, 491, 522, 540, 541, 563], "ar": [5, 10, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 74, 76, 77, 84, 86, 93, 94, 99, 101, 102, 110, 112, 113, 114, 115, 116, 117, 118, 123, 126, 133, 134, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 163, 164, 179, 186, 196, 199, 207, 208, 209, 210, 217, 218, 227, 237, 238, 240, 241, 244, 246, 247, 248, 249, 252, 253, 255, 258, 259, 261, 263, 266, 268, 272, 276, 278, 279, 280, 283, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 312, 316, 317, 318, 319, 320, 323, 324, 325, 326, 334, 338, 352, 353, 354, 360, 366, 368, 369, 370, 375, 377, 381, 384, 385, 386, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 410, 412, 415, 419, 420, 423, 431, 438, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 482, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 529, 530, 532, 534, 536, 538, 541, 543, 544, 545, 547, 549, 552, 554, 556, 558, 562, 563, 566, 567, 570, 572], "forc": [5, 14, 42, 54, 522], "limit": [5, 15, 16, 23, 25, 30, 31, 45, 146, 147, 164, 217, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 334, 360, 362, 364, 366, 368, 369, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 522], "length": [5, 40, 42, 43, 108, 109, 246, 247, 272, 288, 340, 431, 522], "copi": [5, 10, 15, 134, 135, 149, 157, 160, 161, 210, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 306, 315, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 478, 491, 522, 524, 536, 538, 560], "layout": [5, 7, 13, 15, 22, 37, 45, 51, 54, 64, 121, 134, 135, 139, 151, 159, 160, 161, 164, 179, 182, 184, 202, 226, 227, 237, 240, 241, 247, 249, 252, 255, 258, 259, 261, 263, 268, 272, 276, 278, 279, 280, 281, 288, 306, 338, 341, 344, 360, 369, 375, 384, 385, 390, 396, 399, 400, 404, 406, 410, 415, 419, 423, 431, 440, 442, 482, 524, 530, 538], "properti": [5, 10, 37, 159, 163, 185, 193, 217, 218, 244, 276, 278, 338, 381, 397, 400, 401, 412, 482], "element": [5, 15, 28, 29, 32, 34, 36, 42, 43, 46, 55, 57, 65, 68, 74, 75, 76, 77, 78, 81, 82, 84, 85, 87, 89, 93, 94, 95, 96, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 126, 128, 130, 132, 133, 134, 135, 136, 137, 139, 148, 159, 162, 164, 179, 186, 190, 191, 192, 199, 203, 204, 220, 221, 253, 288, 290, 291, 293, 294, 296, 306, 307, 308, 322, 323, 324, 338, 340, 344, 352, 353, 354, 359, 381, 389, 393, 394, 462, 464, 466, 468, 470, 472, 482, 522, 526, 528, 530], "1": [5, 13, 14, 15, 19, 20, 22, 24, 26, 30, 32, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 138, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 169, 170, 171, 174, 175, 179, 182, 191, 193, 194, 196, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 288, 290, 291, 306, 312, 318, 324, 326, 338, 341, 353, 354, 360, 362, 364, 366, 368, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 408, 410, 413, 415, 417, 419, 420, 421, 425, 427, 431, 432, 433, 434, 435, 438, 440, 442, 457, 460, 482, 524, 530, 540, 541, 545, 562, 563], "unknown": [5, 7, 37, 200, 201, 224, 225, 234, 235, 240, 241, 255, 276, 306, 338, 341, 371, 372, 386, 404, 442, 482], "see": [5, 10, 15, 16, 19, 20, 21, 23, 24, 26, 29, 32, 34, 36, 39, 42, 44, 45, 46, 47, 50, 51, 54, 71, 93, 144, 146, 147, 148, 151, 154, 155, 158, 160, 161, 162, 163, 165, 179, 196, 209, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 289, 290, 293, 294, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 352, 353, 354, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 389, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 522, 530, 536, 538, 541, 544, 563, 570, 572], "dnnl_graph_unknown_ndim": [5, 240, 241, 249, 255, 276, 278, 281, 338, 482], "0": [5, 9, 13, 15, 16, 18, 22, 24, 29, 34, 36, 42, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 147, 149, 150, 151, 152, 155, 158, 160, 161, 162, 163, 175, 178, 179, 182, 187, 193, 194, 199, 202, 206, 208, 210, 212, 219, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 288, 290, 298, 306, 307, 310, 312, 318, 326, 333, 334, 336, 338, 341, 352, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 482, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 538, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 563, 567, 570, 572], "scalar": [5, 15, 147, 288, 291, 324, 354, 482, 530], "deleg": 5, "basic": [5, 10, 15, 24, 147, 149, 160, 161, 238, 254, 284, 291, 298, 306, 311, 321, 338, 341, 346, 377, 389, 394, 395, 438, 445, 524, 582], "inform": [5, 15, 28, 37, 43, 45, 46, 52, 54, 143, 146, 159, 160, 161, 162, 163, 164, 209, 238, 242, 243, 265, 272, 306, 312, 318, 326, 332, 338, 359, 377, 379, 380, 396, 397, 398, 399, 400, 401, 419, 431, 567, 573], "dnnl_graph_unknown_dim": [5, 281, 338, 482], "defin": [5, 10, 11, 15, 17, 19, 20, 24, 26, 29, 32, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 67, 68, 74, 76, 77, 88, 93, 95, 99, 110, 141, 144, 145, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 175, 183, 186, 187, 231, 234, 235, 238, 239, 254, 256, 276, 278, 281, 288, 291, 295, 306, 312, 318, 324, 338, 354, 368, 371, 372, 377, 378, 385, 389, 394, 396, 397, 398, 399, 400, 401, 420, 482, 530, 538], "zero": [5, 13, 15, 16, 20, 29, 32, 36, 41, 42, 43, 46, 47, 54, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 76, 77, 95, 101, 102, 110, 126, 134, 149, 151, 160, 161, 162, 164, 199, 209, 210, 230, 234, 235, 238, 242, 243, 244, 258, 272, 280, 288, 294, 296, 301, 303, 305, 306, 312, 317, 334, 336, 366, 371, 372, 377, 379, 380, 381, 382, 404, 405, 431, 442, 443, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 482, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 524, 526, 528, 530, 532, 534, 538, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "field": [5, 9, 39, 40, 42, 43, 163, 179, 182, 184, 246, 288, 306, 338, 446, 479, 574, 575, 576, 577, 578, 579, 580], "deduc": [5, 7, 37, 150, 341, 419, 482], "accordingli": [5, 15, 16, 162, 306, 338, 370, 395, 438, 524, 529], "alwai": [5, 13, 15, 19, 20, 24, 32, 34, 36, 42, 44, 46, 47, 48, 50, 51, 53, 54, 149, 151, 162, 179, 288, 306, 318, 381, 389, 394, 524, 530, 538], "current": [5, 10, 13, 14, 15, 16, 20, 23, 27, 30, 31, 32, 36, 42, 43, 45, 46, 50, 143, 145, 147, 149, 151, 162, 163, 164, 248, 258, 272, 280, 306, 318, 334, 350, 351, 386, 404, 431, 442, 482], "support": [5, 7, 12, 14, 16, 17, 18, 19, 23, 24, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 54, 141, 142, 146, 147, 150, 152, 160, 161, 162, 163, 164, 171, 174, 186, 187, 199, 203, 233, 234, 238, 245, 246, 247, 248, 280, 282, 288, 289, 290, 291, 294, 295, 296, 297, 300, 303, 305, 306, 312, 318, 324, 341, 346, 350, 351, 354, 370, 371, 377, 383, 384, 385, 386, 394, 419, 442, 455, 457, 460, 482, 486, 522, 529, 530, 538, 540, 545, 562], "neg": [5, 15, 20, 29, 32, 47, 58, 59, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 93, 94, 95, 97, 98, 101, 102, 135, 160, 161, 199, 233, 238, 250, 251, 254, 277, 317, 334, 370, 377, 388, 389, 394, 438, 482, 541, 552, 554, 556, 558, 570, 572], "valu": [5, 6, 8, 10, 13, 14, 15, 16, 17, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 40, 41, 42, 46, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 138, 141, 143, 144, 146, 147, 149, 153, 157, 159, 160, 161, 162, 163, 164, 230, 234, 235, 238, 242, 243, 244, 247, 250, 251, 254, 258, 277, 280, 281, 283, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 323, 324, 325, 326, 333, 334, 336, 338, 340, 342, 344, 352, 353, 354, 366, 370, 371, 372, 377, 379, 380, 381, 384, 385, 386, 388, 389, 394, 404, 419, 420, 438, 442, 449, 451, 453, 455, 460, 462, 464, 466, 468, 470, 472, 476, 478, 482, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 514, 516, 518, 522, 524, 526, 528, 530, 534, 536, 538, 540, 541, 543, 544, 545, 549, 554, 558, 562, 566, 567, 570, 572], "opaqu": [5, 7, 10, 15, 37, 121, 144, 178, 182, 184, 195, 197, 210, 219, 338, 341, 458, 477, 482, 521, 523, 529, 535, 537, 539, 559, 564, 565], "assign": [5, 28, 228, 229, 247, 257, 260, 267, 274, 306, 362, 364, 385, 402, 408, 421, 434, 491, 524], "each": [5, 7, 15, 16, 18, 22, 28, 29, 32, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 69, 71, 72, 73, 84, 86, 112, 113, 114, 115, 116, 117, 118, 123, 133, 142, 143, 145, 148, 150, 151, 152, 159, 163, 178, 186, 190, 191, 195, 217, 218, 236, 247, 254, 283, 288, 291, 294, 296, 306, 307, 308, 312, 313, 322, 323, 324, 326, 334, 336, 338, 341, 352, 353, 354, 369, 370, 373, 381, 389, 394, 420, 462, 464, 466, 468, 470, 472, 482, 522, 524, 526, 528, 530, 538, 562, 567], "call": [5, 7, 15, 18, 21, 25, 27, 28, 29, 30, 31, 33, 36, 37, 39, 45, 46, 48, 50, 95, 141, 143, 151, 152, 160, 161, 162, 163, 238, 288, 306, 307, 313, 318, 323, 324, 326, 331, 334, 336, 339, 341, 343, 352, 353, 369, 377, 381, 384, 385, 389, 394, 395, 396, 397, 399, 400, 401, 419, 420, 438, 478, 479, 491, 522, 536, 538, 560, 563, 567], "byte": [5, 18, 32, 50, 209, 210, 306, 307, 312, 338, 339, 352, 522, 524], "compar": [5, 18, 40, 43, 46, 50, 54, 123, 157, 244, 248, 306, 338, 381, 382, 386, 419, 550], "two": [5, 18, 19, 22, 24, 28, 29, 32, 33, 36, 37, 39, 41, 42, 43, 46, 47, 50, 54, 57, 75, 85, 99, 100, 103, 106, 121, 123, 133, 136, 141, 144, 147, 151, 159, 160, 161, 162, 163, 179, 196, 217, 218, 238, 272, 283, 290, 298, 306, 315, 338, 375, 376, 377, 386, 389, 394, 396, 399, 400, 401, 431], "tenor": [5, 338], "equal": [5, 15, 20, 22, 26, 33, 36, 40, 42, 43, 44, 46, 48, 51, 58, 76, 77, 85, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 123, 134, 141, 143, 144, 145, 150, 153, 154, 162, 169, 170, 179, 196, 241, 288, 290, 291, 306, 307, 313, 323, 324, 338, 352, 353, 354, 394, 397, 491, 522, 524, 530, 538], "decid": [5, 37, 182, 184, 240, 241, 255, 276, 338, 419, 449, 453, 462, 464, 468, 470, 474, 484, 488, 494, 496, 500, 504, 508, 512, 516, 526, 532, 547, 552, 556, 570], "reorder": [5, 16, 19, 24, 26, 27, 32, 35, 42, 45, 46, 47, 50, 54, 147, 154, 160, 161, 163, 164, 188, 203, 204, 209, 227, 231, 232, 233, 234, 235, 237, 238, 239, 244, 245, 246, 247, 250, 251, 252, 258, 259, 261, 263, 265, 266, 268, 272, 279, 280, 281, 283, 285, 286, 298, 306, 311, 312, 338, 348, 359, 360, 368, 369, 370, 371, 372, 375, 377, 378, 381, 383, 384, 385, 390, 404, 406, 410, 415, 420, 423, 428, 431, 440, 442, 445, 536, 581], "need": [5, 16, 18, 23, 24, 29, 33, 37, 39, 40, 42, 43, 45, 46, 86, 141, 151, 160, 161, 162, 210, 231, 232, 234, 235, 238, 239, 240, 241, 249, 255, 265, 266, 267, 272, 276, 278, 283, 306, 312, 326, 336, 338, 344, 368, 371, 372, 377, 378, 389, 394, 395, 396, 397, 399, 400, 421, 431, 438, 563, 567], "below": [5, 10, 15, 19, 20, 22, 23, 24, 25, 27, 29, 30, 33, 34, 36, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 150, 151, 152, 155, 158, 162, 258, 280, 288, 338, 369, 394, 399, 400, 404, 419, 442, 530, 563], "circumst": [5, 7, 143, 163, 338, 341, 419], "regard": [5, 71, 283, 338], "struct": [5, 231, 239, 281, 288, 289, 290, 293, 294, 296, 297, 298, 300, 301, 303, 304, 305, 306, 308, 309, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 331, 332, 336, 338, 340, 341, 344, 348, 354, 355, 368, 378, 394, 420], "underli": [5, 8, 33, 36, 141, 146, 302, 306, 307, 323, 324, 337, 338, 339, 343, 344, 352, 353, 395, 438, 491, 522, 536], "For": [5, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 44, 46, 47, 48, 49, 50, 51, 53, 54, 74, 76, 77, 91, 92, 99, 110, 112, 113, 114, 115, 116, 117, 118, 141, 143, 145, 147, 149, 151, 154, 157, 159, 160, 161, 162, 164, 179, 185, 186, 193, 196, 199, 210, 227, 237, 238, 247, 252, 254, 259, 261, 263, 268, 279, 283, 288, 289, 291, 300, 303, 306, 307, 312, 318, 323, 324, 326, 331, 338, 341, 352, 353, 354, 360, 369, 370, 375, 377, 381, 384, 385, 389, 390, 394, 395, 396, 397, 406, 410, 415, 419, 423, 438, 440, 482, 522, 529, 530, 538, 541, 567], "exampl": [5, 19, 21, 24, 25, 27, 28, 30, 31, 32, 36, 37, 38, 41, 45, 46, 50, 52, 74, 76, 77, 80, 99, 110, 112, 113, 114, 115, 116, 117, 118, 123, 134, 142, 158, 162, 164, 179, 185, 193, 196, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 288, 289, 300, 303, 306, 312, 318, 338, 346, 359, 361, 363, 365, 367, 374, 376, 381, 382, 386, 387, 388, 389, 391, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 407, 409, 411, 416, 418, 419, 422, 424, 426, 428, 430, 433, 435, 437, 438, 441, 442, 443, 444, 482, 524, 530, 538, 541, 582], "one": [5, 7, 11, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 67, 69, 74, 76, 77, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 123, 134, 141, 142, 143, 144, 148, 149, 150, 151, 153, 154, 157, 160, 161, 162, 163, 164, 179, 196, 199, 227, 237, 238, 240, 241, 247, 249, 252, 255, 259, 261, 263, 266, 268, 272, 276, 278, 279, 283, 288, 291, 297, 298, 306, 307, 312, 323, 324, 326, 338, 341, 346, 352, 353, 354, 360, 369, 375, 377, 381, 382, 384, 385, 389, 390, 394, 395, 397, 404, 405, 406, 410, 415, 419, 420, 423, 431, 438, 440, 442, 443, 474, 482, 524, 529, 536, 544, 567, 568], "while": [5, 18, 24, 25, 28, 29, 32, 36, 39, 40, 42, 43, 45, 46, 50, 76, 99, 141, 149, 151, 157, 179, 234, 235, 252, 256, 338, 341, 371, 372, 386, 390, 394, 550], "underneath": [5, 39, 42, 338], "both": [5, 18, 20, 22, 23, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 51, 54, 57, 59, 60, 62, 68, 69, 70, 71, 72, 73, 74, 75, 77, 85, 86, 93, 94, 100, 103, 106, 110, 136, 141, 142, 143, 147, 151, 153, 154, 157, 163, 179, 247, 253, 265, 268, 277, 289, 290, 297, 300, 303, 306, 318, 326, 338, 359, 384, 389, 392, 394, 395, 396, 399, 400, 404, 419, 423, 524], "nhwc": [5, 28, 150, 196, 230, 254, 270, 338, 366, 394, 427], "still": [5, 16, 24, 30, 45, 151, 162, 338, 394], "op_handl": 6, "attr": [6, 10, 15, 16, 18, 29, 45, 143, 149, 164, 240, 241, 247, 248, 249, 255, 258, 266, 276, 278, 280, 281, 288, 289, 290, 293, 294, 296, 297, 300, 301, 303, 304, 305, 308, 309, 312, 314, 315, 316, 317, 319, 320, 322, 385, 386, 396, 397, 398, 399, 400, 401, 404, 420, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 530, 532, 534, 538, 543, 544, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "akind": [6, 281, 288, 298, 312, 348, 352, 353, 478], "string": [6, 24, 27, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 85, 86, 91, 92, 100, 101, 102, 103, 106, 108, 109, 110, 123, 126, 133, 136, 160, 161, 163, 227, 228, 229, 230, 231, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 277, 279, 312, 318, 340, 348, 360, 362, 364, 366, 368, 373, 375, 377, 378, 379, 380, 383, 389, 390, 392, 394, 395, 396, 397, 399, 400, 402, 406, 408, 410, 413, 415, 417, 421, 423, 427, 429, 432, 434, 436, 438, 440, 479], "verbose_nam": [6, 281, 340], "add_input": 6, "add_output": 6, "templat": [6, 147, 163, 244, 318, 329, 348, 353, 381, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "typenam": [6, 244, 329, 348, 353, 381, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "type_i": 6, "req": 6, "is_sam": [6, 244, 381], "int64_t": [6, 210, 240, 241, 244, 248, 255, 258, 276, 280, 281, 295, 340, 381, 386, 396, 397, 399, 400, 404, 442, 541], "set_attr": [6, 240, 241, 249, 255, 276, 278, 396, 397, 398, 399, 400, 401], "name": [6, 15, 20, 22, 23, 24, 26, 27, 29, 31, 34, 44, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 147, 149, 150, 151, 152, 153, 154, 158, 162, 163, 164, 179, 196, 209, 210, 217, 218, 281, 283, 288, 318, 340, 359, 394, 412, 419, 439, 541], "type_f": 6, "type_b": 6, "type_": 6, "convolut": [6, 12, 15, 18, 19, 24, 26, 28, 32, 34, 35, 36, 41, 45, 46, 50, 69, 70, 71, 72, 73, 144, 147, 149, 162, 163, 164, 169, 170, 179, 188, 190, 191, 196, 203, 204, 231, 232, 233, 234, 235, 239, 240, 241, 252, 255, 265, 266, 276, 283, 285, 286, 288, 306, 311, 312, 359, 368, 369, 370, 371, 372, 376, 378, 390, 394, 396, 399, 400, 420, 461, 462, 463, 464, 465, 466, 482, 516, 529, 530, 541, 581], "relu": [6, 19, 20, 28, 29, 34, 39, 45, 54, 95, 108, 120, 145, 151, 160, 161, 169, 170, 188, 190, 191, 198, 199, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 245, 250, 251, 252, 253, 254, 255, 256, 258, 259, 264, 266, 276, 277, 283, 285, 289, 297, 309, 362, 364, 368, 369, 370, 371, 372, 375, 377, 378, 383, 388, 390, 392, 395, 396, 397, 399, 400, 404, 405, 406, 417, 420, 438], "bound": [6, 18, 34, 46, 47, 65, 66, 147, 240, 241, 249, 255, 276, 278], "self": [6, 147, 164, 396, 397, 398, 399, 400, 401], "partition_handl": 7, "dnnl_graph_partition_t": [7, 281, 332, 336, 341], "p": [7, 13, 23, 49, 147, 148, 164, 209, 210, 246, 247, 281, 314, 384, 385, 541, 543], "aop": 7, "ekind": [7, 276, 281, 341, 400, 401], "get_ops_num": 7, "get_op": 7, "compiled_partit": [7, 37, 163, 240, 241, 249, 255, 276, 278, 281, 332, 339, 341, 343, 349, 350, 351, 396, 397, 398, 400, 401], "e": [7, 15, 16, 18, 20, 24, 26, 34, 36, 44, 45, 46, 48, 51, 54, 78, 81, 93, 94, 104, 105, 124, 128, 153, 158, 159, 160, 161, 162, 163, 179, 196, 228, 233, 234, 238, 240, 241, 244, 245, 247, 248, 250, 251, 254, 255, 257, 258, 260, 261, 262, 272, 276, 277, 280, 288, 306, 318, 362, 371, 377, 381, 383, 385, 386, 388, 394, 402, 404, 408, 410, 413, 431, 438, 442, 460, 480, 524, 530, 540, 545, 562], "is_support": [7, 240, 241, 249, 255, 276, 278, 281, 341], "get_input_port": [7, 37, 240, 241, 249, 255, 276, 278], "get_output_port": [7, 37, 240, 241, 249, 255, 276, 278], "get_engine_kind": 7, "raw": [7, 25, 244, 248, 381, 386, 394], "c": [7, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 28, 29, 32, 34, 35, 44, 48, 51, 52, 53, 54, 58, 60, 61, 63, 67, 86, 93, 94, 101, 126, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 158, 160, 161, 162, 175, 179, 183, 196, 209, 227, 232, 233, 234, 235, 238, 242, 243, 244, 245, 246, 247, 248, 251, 254, 256, 258, 260, 263, 272, 279, 280, 281, 283, 287, 288, 291, 298, 299, 305, 306, 312, 317, 318, 324, 326, 348, 352, 353, 354, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 479, 484, 486, 488, 490, 491, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 540, 543, 545, 547, 549, 550, 552, 554, 556, 558, 560, 562, 567, 570, 572], "handl": [7, 8, 15, 16, 18, 19, 25, 36, 37, 50, 149, 160, 161, 162, 164, 227, 228, 229, 230, 236, 237, 238, 240, 241, 245, 246, 247, 248, 249, 252, 253, 255, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 281, 288, 291, 298, 306, 307, 312, 321, 323, 324, 325, 326, 329, 331, 332, 336, 338, 339, 340, 341, 343, 344, 348, 352, 353, 354, 360, 362, 364, 366, 373, 375, 377, 383, 384, 385, 386, 390, 392, 394, 396, 397, 398, 399, 400, 401, 402, 406, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 432, 434, 436, 438, 440, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572], "directli": [7, 20, 24, 29, 50, 153, 157, 162, 244, 306, 341, 381, 394, 398, 401, 438, 522, 563], "without": [7, 8, 11, 14, 16, 19, 24, 29, 32, 36, 142, 151, 158, 160, 161, 169, 175, 178, 204, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 294, 296, 306, 307, 323, 324, 341, 344, 352, 353, 354, 360, 362, 364, 366, 368, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 390, 392, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 532, 534, 543, 545, 547, 549, 552, 554, 556, 558, 562, 567, 568, 570, 572], "contain": [7, 15, 19, 20, 23, 24, 28, 36, 37, 38, 41, 46, 58, 59, 68, 69, 70, 71, 72, 73, 74, 91, 92, 101, 102, 110, 112, 113, 114, 115, 116, 117, 118, 134, 135, 147, 159, 162, 163, 179, 227, 237, 252, 254, 259, 261, 263, 268, 279, 283, 288, 294, 296, 306, 307, 308, 318, 323, 338, 339, 341, 352, 353, 356, 360, 370, 375, 389, 390, 394, 395, 396, 398, 399, 400, 401, 406, 410, 415, 423, 438, 440, 462, 464, 466, 468, 470, 472, 480, 524, 526, 528, 536, 537, 544, 573], "onli": [7, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 46, 48, 50, 51, 53, 54, 74, 76, 77, 94, 108, 109, 110, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 175, 178, 179, 196, 197, 199, 204, 207, 208, 210, 219, 230, 234, 235, 238, 239, 272, 288, 294, 295, 296, 298, 306, 307, 308, 318, 324, 326, 338, 341, 350, 351, 352, 354, 366, 368, 369, 371, 372, 377, 378, 381, 386, 389, 394, 396, 397, 398, 399, 400, 401, 404, 419, 420, 431, 442, 462, 464, 466, 468, 470, 472, 524, 526, 528, 530, 538, 567], "unord": 7, "gener": [7, 15, 17, 19, 23, 24, 28, 30, 31, 36, 37, 38, 39, 40, 42, 43, 46, 49, 52, 142, 146, 147, 158, 159, 163, 178, 182, 184, 195, 209, 210, 227, 228, 229, 230, 236, 237, 238, 245, 252, 253, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 283, 297, 306, 318, 326, 332, 360, 362, 364, 366, 373, 375, 377, 383, 386, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 482, 567, 568, 582], "debug": [7, 12, 23, 24, 30, 146, 147, 163, 190, 191, 306, 318, 389, 394, 395, 438, 522], "purpos": [7, 10, 11, 24, 25, 30, 32, 33, 141, 146, 162, 163, 306, 381, 394, 420, 522], "verbos": [7, 24, 25, 36, 143, 146, 318, 419, 444], "shape": [7, 19, 20, 26, 29, 37, 39, 40, 42, 43, 44, 45, 51, 54, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 75, 76, 84, 85, 86, 91, 92, 99, 100, 101, 102, 103, 106, 112, 113, 114, 115, 116, 117, 118, 123, 133, 134, 136, 139, 149, 154, 159, 162, 164, 186, 187, 192, 221, 233, 240, 241, 244, 248, 249, 255, 265, 272, 276, 278, 307, 312, 323, 338, 341, 352, 353, 369, 370, 381, 386, 387, 396, 399, 400, 404, 405, 419, 431, 442, 482, 536, 544], "choos": [7, 16, 23, 24, 25, 26, 29, 30, 37, 46, 48, 50, 54, 145, 154, 227, 233, 237, 252, 259, 261, 263, 265, 268, 279, 306, 341, 360, 369, 370, 375, 386, 390, 404, 406, 410, 415, 419, 420, 423, 440, 442], "optim": [7, 13, 15, 20, 22, 24, 26, 29, 32, 34, 36, 37, 39, 40, 42, 43, 44, 47, 48, 49, 51, 53, 54, 144, 146, 149, 151, 152, 153, 154, 162, 185, 193, 227, 237, 252, 259, 261, 263, 266, 268, 279, 341, 346, 360, 361, 362, 363, 364, 365, 369, 373, 374, 375, 376, 389, 390, 391, 394, 395, 402, 403, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 423, 427, 428, 432, 433, 434, 435, 436, 437, 438, 440, 441], "save": [7, 24, 36, 37, 49, 53, 144, 199, 267, 341, 421], "some": [7, 10, 11, 12, 13, 14, 15, 16, 18, 24, 26, 29, 32, 34, 36, 46, 49, 53, 142, 143, 144, 146, 147, 149, 157, 158, 159, 162, 163, 167, 168, 234, 235, 239, 254, 258, 272, 280, 291, 306, 324, 341, 354, 366, 368, 369, 371, 372, 378, 381, 386, 389, 394, 395, 396, 397, 398, 399, 400, 401, 404, 419, 431, 438, 442, 524, 529], "under": [7, 36, 160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 341, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "certain": [7, 19, 20, 29, 30, 31, 48, 163, 179, 196, 283, 295, 341, 478, 529, 530], "dure": [7, 10, 14, 15, 16, 17, 18, 19, 20, 24, 29, 30, 32, 34, 36, 37, 44, 45, 46, 47, 48, 50, 51, 53, 54, 134, 139, 141, 143, 144, 147, 149, 162, 164, 167, 168, 182, 184, 185, 193, 210, 249, 272, 278, 291, 324, 341, 354, 381, 395, 419, 431, 438, 482, 522, 524, 530, 538, 563, 568], "stage": [7, 29, 37, 48, 54, 134, 240, 241, 249, 255, 276, 278, 326, 334, 338, 341, 396, 397, 398, 399, 400, 401, 567], "unsupport": [7, 16, 24, 47, 163, 164, 240, 241, 249, 255, 276, 277, 278, 341, 396, 397, 398, 399, 400, 401, 438], "befor": [7, 10, 13, 16, 17, 18, 25, 26, 27, 29, 30, 31, 32, 33, 37, 41, 45, 68, 69, 70, 71, 72, 73, 95, 99, 123, 133, 141, 147, 154, 160, 163, 169, 170, 215, 216, 231, 239, 247, 261, 272, 288, 306, 318, 334, 339, 341, 368, 378, 384, 385, 389, 394, 395, 411, 419, 420, 431, 438, 522, 530], "transform": [7, 13, 18, 19, 39, 40, 42, 47, 86, 91, 92, 160, 238, 281, 306, 326, 341, 355, 369, 370, 377, 394, 491, 524, 564, 582], "isn": [7, 54], "tensor_handl": 8, "aengin": [8, 352, 353, 354, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 532, 534, 543, 547, 549, 552, 554, 556, 558, 560, 562, 570, 572], "get_data_handl": [8, 33, 36, 141, 160, 161, 234, 235, 238, 246, 247, 306, 371, 372, 377, 384, 385, 394, 522], "set_data_handl": [8, 246, 247, 306, 352, 353, 384, 385, 522], "get_engin": [8, 306, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 560, 562, 570, 572], "get_logical_tensor": 8, "storag": [8, 14, 19, 32, 160, 161, 197, 219, 238, 306, 307, 312, 323, 325, 326, 344, 352, 353, 377, 565, 566], "alloc": [8, 9, 18, 19, 25, 33, 141, 142, 160, 161, 200, 201, 217, 218, 224, 225, 227, 228, 229, 230, 232, 233, 236, 237, 238, 240, 241, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 286, 306, 307, 323, 330, 335, 339, 343, 344, 349, 350, 351, 352, 353, 360, 362, 364, 366, 369, 373, 375, 377, 383, 386, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 522, 524, 545], "own": [8, 18, 19, 33, 36, 45, 141, 142, 306, 307, 312, 323, 344, 352, 353, 394, 522, 563], "dnnl_memory_alloc": [8, 33, 141, 231, 239, 250, 281, 306, 307, 323, 344, 352, 353, 368, 378, 388, 522], "special": [8, 13, 19, 22, 26, 32, 33, 34, 37, 50, 54, 63, 141, 145, 148, 149, 152, 153, 154, 160, 161, 162, 178, 195, 238, 248, 306, 307, 312, 323, 332, 344, 352, 353, 377, 386, 522], "instruct": [8, 14, 24, 29, 30, 32, 36, 47, 49, 50, 142, 147, 157, 160, 161, 163, 171, 174, 196, 238, 306, 307, 318, 323, 344, 352, 353, 377, 394, 522], "dnnl_memory_non": [8, 33, 141, 281, 306, 307, 323, 344, 352, 353, 522], "On": [8, 24, 32, 45, 46, 54, 76, 157, 162, 163, 179, 196, 198, 199, 291, 324, 354, 381, 395, 438, 522], "usm": [8, 200, 201, 224, 225, 306, 307, 323, 339, 343, 350, 351, 352, 353, 522], "associ": [8, 22, 26, 32, 34, 37, 41, 45, 145, 148, 149, 152, 153, 154, 306, 307, 312, 313, 323, 336, 339, 350, 352, 353, 522, 524, 560], "align": [9, 42, 43, 123, 151, 163, 246, 247, 281, 331, 339, 343, 394, 420], "cl_device_id": [9, 141, 143, 281, 307, 339, 350, 352], "dev": [9, 281, 343], "cl_context": [9, 141, 143, 256, 281, 307, 339, 350, 352], "ctx": [9, 246, 247, 281, 580], "lock_guard": 9, "mutex": 9, "pool_guard": 9, "pool_lock": 9, "ptr": [9, 281, 447, 580], "nullptr": [9, 18, 160, 161, 162, 164, 238, 256, 306, 307, 312, 334, 352, 377, 395, 491], "need_alloc_new_mm": 9, "auto": [9, 15, 16, 18, 29, 36, 41, 45, 46, 50, 57, 75, 85, 100, 103, 106, 123, 133, 136, 151, 160, 161, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 369, 370, 371, 372, 373, 375, 377, 379, 380, 381, 383, 384, 385, 386, 389, 390, 392, 394, 395, 396, 397, 399, 400, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442], "cnt": 9, "map_size_ptr_": 9, "count": [9, 58, 59, 76, 77, 97, 98, 134, 135, 147, 232, 240, 241, 255, 276, 281, 288, 298, 478], "method": [9, 16, 45, 142, 150, 164, 169, 170, 316, 338, 389, 394, 438, 447, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 525, 527, 531, 533, 542, 546, 548, 551, 553, 555, 557, 561, 569, 571, 574, 580], "allocate_host": 9, "dealloc": [9, 331, 339, 343, 394], "devic": [9, 12, 17, 19, 24, 32, 33, 141, 143, 164, 200, 201, 224, 225, 276, 281, 298, 307, 323, 334, 339, 343, 350, 351, 352, 353, 389, 394, 395, 396, 397, 398, 399, 400, 401, 438], "context": [9, 19, 29, 33, 143, 160, 161, 164, 179, 196, 238, 246, 247, 281, 306, 307, 321, 323, 326, 339, 343, 350, 351, 352, 353, 377, 384, 385, 389, 394, 395, 399, 400, 401, 438, 524, 567, 580], "event": [9, 33, 141, 147, 281, 307, 323, 339, 343, 350, 351, 352, 353], "cl_event": [9, 281, 307, 339, 350, 352], "deallocate_host": 9, "clear": [9, 306, 310, 333, 334], "quick": 10, "recap": 10, "creation": [10, 11, 14, 15, 16, 17, 18, 20, 24, 26, 29, 34, 44, 45, 48, 51, 54, 143, 146, 151, 154, 246, 247, 248, 256, 258, 277, 280, 306, 318, 326, 338, 360, 361, 370, 373, 374, 375, 376, 381, 386, 389, 390, 391, 394, 395, 404, 406, 407, 408, 409, 410, 411, 415, 416, 420, 438, 440, 441, 442, 563], "step": [10, 19, 24, 29, 40, 42, 45, 46, 47, 50, 123, 143, 159, 160, 161, 227, 238, 240, 241, 249, 255, 260, 261, 263, 276, 278, 279, 326, 360, 377, 389, 394, 395, 396, 399, 400, 408, 410, 415, 419, 438, 440, 567], "consist": [10, 19, 22, 24, 28, 30, 39, 42, 46, 54, 142, 151, 162, 164, 306, 419, 524], "follow": [10, 13, 15, 16, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 160, 161, 162, 163, 164, 179, 196, 230, 240, 241, 249, 255, 258, 266, 267, 272, 276, 278, 280, 283, 288, 306, 307, 317, 318, 323, 326, 352, 353, 366, 381, 389, 394, 395, 404, 419, 420, 421, 431, 438, 442, 449, 451, 488, 490, 491, 504, 506, 508, 510, 516, 518, 522, 524, 529, 538, 567, 570, 572], "descriptor": [10, 15, 16, 17, 18, 19, 20, 24, 26, 29, 34, 36, 44, 45, 46, 48, 51, 53, 144, 150, 151, 154, 162, 164, 175, 178, 194, 195, 197, 209, 210, 219, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 247, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 280, 288, 289, 290, 293, 294, 296, 297, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 317, 319, 320, 322, 323, 352, 353, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 384, 385, 389, 390, 391, 392, 395, 402, 404, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 441, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 569, 570, 571, 572], "backward": [10, 18, 19, 22, 24, 26, 28, 30, 45, 76, 77, 86, 93, 94, 148, 151, 154, 163, 164, 169, 170, 198, 199, 207, 208, 227, 228, 234, 235, 239, 253, 261, 262, 263, 267, 268, 272, 279, 289, 294, 296, 297, 300, 301, 303, 304, 308, 309, 312, 316, 317, 319, 320, 360, 362, 369, 371, 372, 378, 392, 410, 413, 415, 419, 421, 423, 431, 440, 448, 449, 452, 453, 461, 462, 467, 468, 473, 474, 483, 484, 487, 488, 493, 494, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 525, 526, 531, 532, 546, 547, 551, 552, 555, 556, 569, 570], "propag": [10, 17, 18, 19, 20, 22, 24, 26, 28, 29, 34, 35, 44, 45, 48, 51, 53, 94, 144, 145, 148, 150, 151, 152, 153, 154, 163, 164, 198, 199, 207, 208, 209, 210, 227, 228, 253, 261, 262, 263, 265, 266, 268, 279, 288, 289, 294, 296, 297, 300, 301, 303, 304, 308, 309, 312, 316, 317, 319, 320, 359, 360, 361, 362, 363, 369, 375, 376, 390, 391, 392, 393, 394, 402, 403, 408, 409, 410, 411, 413, 414, 415, 416, 420, 421, 422, 423, 424, 429, 430, 434, 435, 440, 441, 445, 448, 449, 450, 451, 452, 453, 454, 455, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 525, 526, 527, 528, 531, 532, 533, 534, 540, 541, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562, 569, 570, 571, 572], "forward": [10, 18, 19, 22, 24, 26, 28, 39, 45, 59, 147, 148, 151, 154, 164, 198, 199, 207, 208, 231, 232, 233, 234, 235, 239, 251, 256, 262, 272, 277, 288, 289, 294, 296, 297, 300, 301, 303, 304, 306, 308, 309, 312, 316, 317, 319, 320, 360, 361, 362, 363, 368, 369, 370, 371, 372, 375, 376, 378, 389, 390, 391, 392, 393, 395, 402, 403, 408, 409, 410, 411, 413, 414, 415, 416, 419, 421, 422, 423, 424, 429, 430, 431, 434, 435, 438, 440, 441, 449, 450, 451, 453, 454, 455, 462, 464, 465, 466, 468, 470, 471, 472, 474, 475, 476, 484, 485, 486, 488, 489, 490, 494, 496, 497, 498, 500, 501, 502, 504, 505, 506, 508, 509, 510, 512, 513, 514, 516, 517, 518, 526, 527, 528, 530, 532, 533, 534, 547, 548, 549, 552, 553, 554, 556, 557, 558, 570, 571, 572], "might": [10, 12, 15, 16, 18, 20, 22, 28, 29, 32, 34, 36, 44, 46, 48, 50, 51, 53, 144, 149, 151, 152, 159, 161, 162, 179, 234, 235, 239, 248, 290, 371, 372, 378, 381, 386, 389, 394, 404, 457, 529], "well": [10, 16, 18, 19, 24, 32, 45, 46, 142, 158, 160, 162, 163, 247, 248, 369, 381, 384, 386, 399, 400, 419, 491], "train": [10, 13, 15, 16, 17, 18, 24, 35, 40, 45, 47, 50, 53, 60, 95, 142, 146, 162, 198, 199, 207, 208, 234, 235, 239, 262, 272, 289, 297, 359, 360, 361, 362, 363, 369, 392, 393, 402, 403, 410, 411, 413, 414, 415, 416, 419, 421, 422, 423, 424, 429, 430, 434, 435, 440, 441, 445], "specif": [10, 14, 15, 19, 20, 22, 23, 27, 29, 31, 34, 37, 40, 42, 43, 44, 47, 53, 123, 142, 144, 150, 151, 152, 159, 160, 161, 164, 175, 179, 182, 184, 190, 191, 194, 196, 202, 209, 210, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 297, 298, 306, 307, 314, 318, 323, 326, 334, 336, 344, 352, 353, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 474, 476, 522, 543, 567], "aspect": [10, 419, 445], "sole": [10, 45], "detail": [10, 14, 16, 19, 23, 24, 32, 37, 45, 46, 50, 147, 157, 163, 233, 234, 245, 247, 283, 371, 381, 383, 385, 394], "why": [10, 162], "found": [10, 16, 24, 32, 143, 144, 157, 158, 162, 163, 164, 250, 267, 388, 421], "concept": [10, 54, 149, 284, 298, 311, 321, 381, 382, 386, 387, 389, 394, 395, 404, 405, 419, 438, 442, 443, 445, 582], "fact": [10, 52, 149, 394, 420], "import": [10, 15, 16, 19, 24, 45, 46, 50, 52, 142, 162, 389, 395, 438], "u": [10, 28, 151, 152, 169, 170, 244, 248, 258, 261, 280, 381, 386, 394, 404, 410, 442], "now": [10, 16, 28, 29, 36, 42, 45, 48, 151, 227, 232, 234, 235, 237, 252, 259, 261, 263, 268, 272, 279, 360, 371, 372, 375, 384, 385, 389, 390, 394, 406, 410, 415, 419, 423, 431, 438, 440], "2": [10, 15, 20, 30, 32, 33, 34, 36, 39, 40, 42, 43, 44, 47, 49, 51, 53, 54, 60, 61, 62, 68, 69, 70, 71, 73, 76, 77, 86, 92, 93, 94, 99, 105, 108, 109, 113, 123, 133, 142, 143, 147, 151, 159, 160, 161, 162, 163, 169, 170, 171, 174, 175, 178, 179, 182, 183, 191, 193, 194, 204, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 306, 312, 318, 325, 326, 338, 360, 362, 364, 366, 368, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 457, 460, 524, 530, 538, 540, 545, 562, 566, 567], "fulli": [10, 18, 19, 39, 41, 46, 48, 54, 420], "correspond": [10, 13, 15, 16, 19, 20, 22, 24, 25, 26, 28, 29, 31, 32, 34, 36, 37, 42, 44, 46, 47, 48, 51, 54, 68, 69, 99, 112, 113, 114, 115, 116, 117, 118, 134, 142, 143, 145, 149, 150, 151, 152, 153, 160, 161, 162, 163, 164, 179, 186, 196, 210, 238, 251, 254, 266, 287, 288, 294, 296, 298, 299, 306, 307, 312, 317, 323, 334, 352, 353, 377, 381, 389, 394, 395, 419, 420, 438, 462, 464, 466, 468, 470, 472, 522, 524, 530, 538], "onc": [10, 15, 18, 27, 30, 31, 45, 46, 50, 54, 146, 151, 159, 160, 161, 162, 238, 247, 312, 318, 326, 334, 338, 369, 377, 384, 385, 386, 387, 389, 394, 404, 405, 442, 443, 567], "chang": [10, 14, 15, 16, 19, 23, 24, 30, 31, 32, 36, 41, 45, 54, 134, 146, 149, 155, 162, 179, 185, 193, 204, 265, 288, 306, 312, 315, 318, 353, 369, 394, 419, 420, 522, 530, 540], "problem": [10, 50, 149, 163, 164, 248, 381, 386], "where": [10, 13, 14, 15, 16, 18, 20, 22, 26, 28, 29, 32, 34, 39, 42, 44, 46, 47, 48, 50, 51, 53, 54, 58, 61, 67, 68, 69, 74, 76, 77, 84, 93, 94, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 134, 143, 144, 148, 150, 151, 152, 162, 163, 179, 186, 196, 215, 216, 267, 270, 288, 291, 324, 354, 368, 369, 370, 381, 394, 419, 421, 427, 530], "destin": [10, 15, 16, 17, 26, 28, 29, 34, 36, 45, 47, 48, 50, 54, 145, 149, 150, 152, 157, 160, 161, 164, 209, 210, 227, 228, 229, 236, 237, 245, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 288, 289, 290, 293, 294, 296, 297, 300, 301, 303, 304, 305, 306, 308, 309, 312, 314, 315, 316, 319, 320, 322, 360, 362, 364, 370, 373, 374, 375, 383, 389, 390, 392, 394, 402, 404, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 437, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 530, 532, 534, 541, 543, 544, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "so": [10, 15, 16, 19, 25, 26, 31, 39, 45, 46, 50, 52, 54, 126, 147, 151, 154, 159, 160, 162, 175, 178, 204, 244, 247, 272, 288, 306, 312, 369, 370, 381, 389, 394, 395, 396, 399, 400, 420, 431, 438, 529], "extra": [10, 18, 20, 23, 31, 46, 50, 160, 161, 162, 163, 199, 210, 238, 261, 283, 377, 394, 410, 419], "were": [10, 18, 33, 141, 163, 199, 389, 394, 395, 438, 567], "design": [10, 15, 16, 26, 51, 67, 152, 159, 419], "extens": [10, 30, 32, 33, 35, 36, 40, 42, 43, 49, 50, 141, 151, 171, 174, 255, 256, 276, 277, 302, 307, 323, 324, 337, 339, 343, 346, 359], "henc": [10, 15, 18, 20, 29, 34, 44, 46, 51, 146, 151, 152, 153, 157, 160, 162, 163, 199, 240, 241, 244, 249, 255, 276, 278, 294, 296, 308, 381, 394, 419, 462, 464, 466, 468, 470, 472, 526, 528], "thei": [10, 15, 18, 19, 20, 25, 29, 33, 36, 37, 40, 44, 46, 47, 48, 50, 51, 54, 86, 91, 93, 94, 141, 144, 151, 160, 161, 162, 163, 179, 238, 240, 241, 246, 249, 252, 255, 258, 276, 278, 283, 377, 384, 389, 390, 394, 395, 404, 419, 420, 438], "structur": [10, 15, 42, 162, 179, 210, 306, 318, 458, 477, 480, 521, 523, 529, 535, 537, 539, 559, 564, 565, 573], "must": [10, 13, 14, 15, 16, 18, 20, 22, 23, 24, 26, 29, 33, 37, 43, 44, 45, 46, 47, 48, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 149, 151, 158, 159, 160, 161, 179, 210, 238, 280, 288, 290, 291, 294, 296, 306, 307, 308, 312, 317, 318, 323, 324, 326, 334, 338, 352, 353, 354, 369, 370, 377, 389, 394, 395, 396, 397, 398, 399, 400, 401, 438, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 532, 534, 536, 538, 543, 544, 545, 547, 549, 552, 554, 556, 558, 562, 567, 568, 570, 572], "them": [10, 24, 25, 34, 36, 37, 41, 45, 46, 50, 112, 113, 114, 115, 116, 117, 118, 123, 142, 160, 161, 162, 186, 198, 238, 283, 288, 289, 300, 303, 306, 317, 377, 389, 394, 419, 449, 451, 482, 488, 490, 504, 506, 508, 510, 516, 518, 572], "destroi": [10, 18, 141, 210, 288, 298, 306, 312, 321, 325, 326, 331, 332, 336, 340, 341, 344, 394, 419, 438, 524, 530, 538], "right": [10, 13, 29, 34, 39, 53, 54, 58, 59, 68, 69, 70, 71, 72, 73, 93, 94, 99, 101, 102, 123, 144, 150, 152, 153, 162, 163, 209, 210, 211, 212, 237, 252, 265, 267, 272, 294, 296, 306, 308, 375, 390, 419, 421, 431, 462, 464, 466, 468, 470, 472, 526, 528, 541], "after": [10, 15, 16, 20, 29, 37, 40, 42, 46, 48, 133, 147, 151, 158, 160, 161, 163, 179, 232, 237, 238, 240, 241, 249, 250, 251, 252, 254, 255, 272, 276, 277, 278, 288, 312, 318, 326, 336, 341, 375, 377, 388, 389, 390, 394, 395, 396, 397, 399, 400, 419, 420, 431, 438, 460, 529, 530, 540, 545, 562, 567], "modifi": [10, 20, 24, 29, 44, 46, 48, 51, 54, 153, 288, 310, 333], "stai": [10, 162, 524], "equival": [10, 33, 141, 478, 491, 522, 536, 560], "null": [10, 164, 231, 239, 250, 288, 289, 290, 293, 294, 296, 297, 300, 301, 303, 304, 305, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 354, 368, 378, 388, 478, 491, 522, 536, 560], "upon": [10, 17, 45, 389, 394, 395, 419, 438], "unless": [10, 22, 25, 32, 51, 160, 161, 163, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 306, 307, 312, 323, 352, 353, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 522, 536, 544], "simpli": [10, 26, 29, 154, 306, 381], "omit": [10, 15, 74, 76, 77, 110, 207, 208, 369], "skeleton": [10, 15], "simplifi": [10, 28, 29, 46, 68, 97, 150, 158, 160, 161, 162, 238, 377], "read": [10, 27, 33, 141, 227, 228, 229, 230, 237, 244, 245, 252, 253, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 279, 360, 362, 364, 366, 375, 381, 383, 390, 392, 395, 402, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 432, 434, 436, 438, 440, 522], "dnnl_primitive_attr_t": [10, 281, 288, 538], "dnnl_primitive_attr_cr": [10, 281, 288], "dnnl_primitive_attr_set_someth": 10, "param": [10, 15, 18, 160, 161, 164, 231, 238, 239, 244, 368, 377, 378, 381, 530, 567], "dnnl_primitive_attr_set_something_els": 10, "other_param": [10, 15], "dnnl_eltwise_backward_primitive_desc_cr": [10, 239, 281, 297, 378], "op_pd": [10, 15, 18], "hint_fwd_pd": [10, 281, 289, 294, 296, 297, 300, 301, 303, 304, 308, 309, 316, 317, 319, 320, 449, 453, 462, 464, 468, 470, 474, 484, 488, 494, 496, 500, 504, 508, 512, 516, 526, 532, 547, 552, 556, 570], "here": [10, 15, 16, 18, 20, 26, 28, 29, 34, 36, 37, 45, 46, 47, 53, 67, 68, 91, 92, 142, 144, 147, 151, 152, 157, 158, 160, 161, 162, 163, 169, 227, 228, 234, 238, 244, 251, 252, 258, 261, 262, 263, 267, 272, 279, 280, 306, 334, 360, 362, 370, 371, 377, 381, 384, 385, 389, 390, 394, 399, 400, 404, 410, 413, 415, 419, 420, 421, 431, 439, 440, 442, 524], "doe": [10, 15, 16, 18, 22, 23, 24, 26, 29, 32, 34, 36, 39, 40, 43, 45, 47, 48, 50, 53, 55, 56, 80, 81, 82, 83, 89, 90, 96, 104, 105, 111, 119, 121, 122, 124, 130, 132, 133, 137, 139, 140, 142, 144, 146, 147, 148, 150, 152, 154, 158, 161, 162, 163, 164, 198, 265, 288, 291, 293, 306, 324, 354, 370, 394, 419, 420, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 524, 526, 528, 530, 532, 534, 538, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "effect": [10, 15, 27, 29, 30, 99, 143, 159, 163, 318, 482], "we": [10, 15, 16, 18, 20, 28, 29, 34, 43, 44, 45, 47, 51, 54, 68, 69, 123, 142, 144, 145, 150, 151, 152, 162, 163, 227, 231, 234, 235, 237, 239, 244, 246, 247, 248, 252, 254, 259, 261, 263, 265, 268, 272, 279, 283, 360, 368, 371, 372, 375, 378, 381, 384, 385, 386, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 406, 410, 415, 419, 420, 423, 431, 438, 440], "immedi": [10, 419, 563], "dnnl_primitive_attr_destroi": [10, 281, 288], "dnnl": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 30, 31, 33, 34, 36, 37, 43, 44, 45, 46, 48, 50, 51, 52, 54, 141, 143, 147, 148, 150, 151, 155, 158, 160, 161, 162, 163, 164, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 356, 360, 362, 364, 366, 368, 369, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 443], "primitive_attr": [10, 12, 13, 14, 15, 16, 18, 19, 29, 45, 50, 54, 160, 161, 164, 229, 230, 233, 237, 238, 244, 247, 248, 252, 258, 259, 264, 266, 270, 280, 281, 288, 348, 364, 366, 370, 375, 377, 381, 382, 385, 386, 387, 390, 404, 405, 406, 417, 420, 427, 442, 443, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 530, 532, 534, 540, 541, 543, 544, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "set_someth": 10, "set_something_els": 10, "primitive_desc": [10, 15, 16, 18, 19, 20, 29, 34, 44, 45, 46, 51, 143, 151, 164, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 289, 290, 294, 296, 297, 300, 301, 303, 304, 305, 308, 309, 312, 314, 316, 317, 319, 320, 348, 352, 353, 360, 362, 364, 366, 369, 370, 371, 372, 373, 375, 379, 380, 381, 383, 384, 385, 386, 389, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 525, 527, 530, 531, 533, 536, 538, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 561, 569, 571], "pd": [10, 15, 28, 246, 272, 431, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534, 536, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 569, 570, 571, 572], "happen": [10, 16, 29, 30, 36, 46, 50, 67, 143, 149, 159, 160, 161, 162, 231, 238, 239, 258, 291, 324, 326, 354, 368, 377, 378, 394, 404, 419], "As": [10, 15, 16, 17, 18, 20, 24, 25, 28, 29, 34, 37, 45, 46, 50, 149, 157, 162, 246, 267, 272, 288, 306, 384, 385, 421, 431, 524, 530], "mention": [10, 18, 20, 34, 46, 50, 123, 246, 370, 384, 385, 394], "abov": [10, 16, 18, 20, 23, 30, 33, 34, 36, 42, 46, 48, 50, 99, 123, 141, 142, 153, 162, 163, 186, 187, 246, 283, 306, 384, 385, 394, 396, 397, 399, 400, 420, 524], "extend": [10, 16, 33, 36, 40, 43, 141, 204, 288, 326, 567], "behavior": [10, 11, 14, 15, 17, 18, 20, 24, 29, 30, 44, 46, 48, 49, 50, 51, 53, 54, 147, 151, 153, 167, 168, 175, 178, 180, 181, 198, 199, 204, 280, 288, 306, 307, 321, 338, 352, 396, 397, 398, 399, 400, 401, 442, 524, 560, 563], "explan": [10, 163, 164], "provid": [10, 12, 13, 14, 15, 16, 18, 19, 20, 24, 25, 27, 29, 31, 33, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 150, 151, 159, 160, 161, 163, 198, 199, 217, 218, 227, 234, 237, 238, 242, 243, 252, 259, 261, 263, 268, 272, 279, 288, 303, 306, 310, 312, 333, 334, 338, 352, 353, 360, 371, 375, 377, 379, 380, 390, 396, 397, 398, 399, 400, 401, 406, 410, 415, 419, 420, 423, 431, 440, 492, 500, 502, 522, 530], "section": [10, 14, 15, 16, 19, 20, 22, 24, 27, 28, 29, 32, 34, 36, 44, 45, 46, 50, 53, 144, 146, 147, 151, 152, 158, 160, 161, 238, 244, 377, 381, 394, 396, 397, 398, 399, 400, 401], "scratchpad": [10, 19, 24, 28, 29, 46, 160, 161, 164, 209, 210, 217, 218, 238, 288, 312, 326, 359, 377, 538, 541, 567], "intermedi": [10, 15, 16, 28, 29, 32, 34, 37, 40, 42, 43, 46, 50, 53, 149, 153, 160, 161, 238, 244, 265, 288, 291, 324, 326, 354, 377, 381, 386, 567], "temporari": [10, 18, 19, 28, 46, 246, 247, 312, 318], "implicit": [10, 14, 22, 26, 28, 29, 42, 54, 149, 154, 180, 181, 283], "f32": [10, 11, 13, 14, 15, 16, 20, 22, 29, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 148, 149, 150, 151, 152, 153, 157, 160, 161, 162, 163, 167, 168, 180, 181, 183, 194, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 359, 360, 362, 364, 366, 370, 371, 373, 375, 377, 379, 380, 381, 383, 385, 386, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 432, 434, 436, 438, 440, 442, 530, 538], "accumul": [10, 15, 16, 25, 32, 50, 64, 144, 145, 149, 151, 160, 161, 164, 167, 168, 238, 256, 272, 277, 283, 286, 288, 292, 313, 326, 336, 359, 377, 395, 431, 438, 529, 530, 538, 567], "datatyp": [10, 11, 14, 16, 17, 32, 151, 159, 163, 164, 167, 168, 288], "round": [10, 11, 16, 34, 47, 58, 74, 76, 77, 101, 110, 139, 162, 167, 168, 169, 170, 188, 215, 216, 283, 285, 288, 312, 359, 538], "argument": [10, 14, 15, 17, 32, 45, 107, 160, 161, 164, 192, 209, 210, 220, 221, 227, 228, 229, 230, 234, 235, 236, 237, 238, 245, 252, 253, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 279, 288, 289, 300, 303, 307, 312, 317, 323, 325, 338, 350, 351, 352, 353, 360, 362, 364, 366, 369, 371, 372, 373, 375, 377, 383, 384, 385, 390, 392, 394, 395, 402, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 432, 434, 436, 440, 449, 451, 480, 488, 490, 504, 506, 508, 510, 516, 518, 524, 536, 538, 544, 566, 567, 570, 572], "downconvers": [10, 32, 180, 181], "determinist": [10, 13, 17, 37, 164, 288, 359, 538], "dropout": [10, 54, 288, 312, 538], "appli": [10, 13, 15, 16, 20, 22, 23, 29, 32, 34, 40, 42, 43, 44, 45, 47, 48, 50, 51, 54, 55, 57, 65, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 89, 95, 96, 97, 99, 100, 103, 106, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 124, 126, 128, 133, 135, 136, 137, 144, 148, 150, 151, 153, 160, 163, 179, 185, 190, 191, 193, 196, 199, 250, 252, 258, 270, 280, 288, 290, 291, 306, 307, 312, 317, 323, 324, 326, 352, 353, 354, 370, 388, 389, 390, 394, 404, 420, 427, 442, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 522, 538, 567, 570, 572], "pseudo": [10, 29, 36, 50, 54, 143, 149, 162], "random": [10, 17, 54, 215, 216, 244, 245, 248, 258, 280, 381, 383, 386, 404, 442], "quantiz": [10, 14, 15, 32, 41, 42, 43, 45, 50, 54, 74, 76, 77, 149, 151, 160, 161, 186, 187, 188, 230, 233, 238, 241, 244, 247, 280, 281, 285, 288, 326, 359, 366, 370, 377, 382, 385, 397, 404, 405, 442, 443, 530, 538, 567], "infer": [10, 15, 16, 24, 35, 36, 43, 49, 50, 54, 142, 146, 151, 162, 185, 192, 193, 198, 199, 207, 208, 221, 231, 232, 233, 241, 246, 247, 249, 258, 272, 278, 280, 281, 359, 381, 405, 420, 431, 442, 445], "post": [10, 13, 16, 32, 35, 36, 39, 42, 45, 46, 47, 50, 160, 161, 164, 190, 191, 198, 199, 228, 229, 230, 233, 237, 238, 252, 259, 264, 266, 270, 288, 312, 325, 326, 359, 362, 363, 364, 365, 375, 376, 377, 390, 391, 397, 406, 407, 417, 418, 420, 427, 529, 530, 538, 566, 567], "fuse": [10, 13, 15, 16, 19, 20, 22, 29, 34, 41, 43, 45, 46, 47, 48, 54, 198, 199, 266, 283, 288, 289, 312, 362, 363, 364, 365, 375, 376, 390, 391, 404, 405, 406, 407, 417, 418, 530], "mostli": [10, 46, 179, 196, 306], "becaus": [10, 15, 16, 20, 24, 30, 31, 34, 42, 44, 46, 47, 51, 53, 160, 163, 164, 192, 196, 209, 220, 221, 272, 283, 297, 306, 369, 370, 394, 396, 397, 399, 400, 419, 420, 431, 438, 530], "separ": [10, 15, 20, 24, 27, 29, 44, 46, 51, 86, 142, 149, 163, 164, 272, 306, 312, 384, 385, 394, 420, 431], "delai": [10, 234, 235, 371, 372], "successfulli": 10, "whatev": [10, 266, 420], "configur": [10, 18, 20, 23, 29, 31, 32, 43, 44, 46, 47, 51, 54, 94, 145, 151, 159, 160, 163, 164, 199, 217, 218, 222, 223, 233, 288, 289, 300, 303, 318, 368, 369, 370, 375, 376, 419, 444, 529, 530, 538], "want": [10, 16, 18, 46, 50, 142, 399, 400], "howev": [10, 12, 14, 15, 16, 18, 20, 24, 26, 33, 34, 40, 44, 45, 46, 50, 51, 54, 142, 144, 145, 152, 153, 157, 162, 247, 248, 252, 272, 297, 306, 369, 381, 384, 386, 389, 390, 394, 395, 420, 431, 438], "try": [10, 160, 161, 233, 234, 238, 245, 247, 254, 272, 277, 371, 377, 383, 385, 394, 396, 397, 398, 399, 400, 401, 431, 438], "dnnl_unimpl": [10, 143, 160, 161, 192, 220, 221, 233, 234, 238, 245, 247, 318, 371, 377, 383, 385], "unfortun": [10, 50, 142, 158], "about": [10, 15, 18, 46, 54, 143, 146, 147, 162, 163, 242, 243, 306, 379, 380, 394, 420], "what": [10, 15, 16, 46, 47, 163, 186, 254, 277, 281, 306, 312, 389, 394, 419, 438, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 479, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572, 574], "exactli": [10, 16, 29, 46, 50, 54, 112, 113, 114, 115, 116, 117, 118, 306], "go": [10, 45, 71, 162, 244, 381, 389, 394, 395, 438], "wrong": [10, 143, 394], "document": [10, 15, 16, 24, 28, 37, 39, 40, 42, 46, 50, 52, 142, 157], "benefit": [11, 19, 24, 45, 146, 159, 297], "speed": [11, 18, 31, 45, 143, 262, 413], "up": [11, 14, 23, 24, 32, 39, 50, 54, 143, 144, 145, 147, 160, 161, 162, 228, 229, 231, 238, 239, 250, 257, 260, 262, 267, 274, 312, 338, 362, 364, 368, 377, 378, 388, 402, 408, 413, 419, 421, 434, 482], "notic": [11, 14, 24, 163, 190, 191, 394], "impact": [11, 12, 14, 16, 32, 36, 158, 162, 163], "accuraci": [11, 14, 16, 29, 36, 43, 45, 46, 47, 50, 54, 153, 244, 254, 256, 381, 382, 394, 395], "numer": [11, 14, 17, 20, 34, 41, 44, 50, 51, 61, 86, 93, 94, 153, 157, 170, 246, 247, 254, 256, 272, 277, 395, 431, 438], "alter": [11, 14, 17, 151], "low": [11, 17, 19, 32, 36, 43, 45, 159, 160, 161, 238, 284, 288, 294, 296, 308, 377, 462, 464, 466, 468, 470, 472, 526, 528, 538], "accumulation_mod": [11, 32, 287, 348, 538], "accept": [11, 12, 17, 25, 27, 37, 38, 45, 47, 59, 69, 70, 102, 140, 147, 318, 336], "strict": [11, 14, 153, 167, 168, 180, 288], "f64": [11, 29, 32, 34, 51, 54, 144, 153, 168, 194, 288], "s32": [11, 13, 15, 16, 17, 22, 29, 32, 34, 36, 43, 47, 48, 50, 54, 59, 69, 70, 73, 76, 77, 84, 85, 91, 92, 112, 113, 114, 115, 116, 117, 118, 144, 145, 149, 150, 152, 160, 161, 167, 168, 183, 194, 238, 242, 243, 244, 258, 288, 377, 379, 380, 381, 404, 538], "relax": [11, 153, 167], "partial": [11, 18, 20, 30, 44, 51, 167, 168, 318, 404, 419], "src": [11, 15, 16, 20, 26, 28, 29, 32, 34, 36, 39, 44, 46, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 148, 149, 150, 152, 153, 154, 158, 161, 163, 167, 168, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 245, 252, 253, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 281, 288, 289, 297, 300, 303, 360, 362, 364, 366, 368, 371, 372, 373, 374, 375, 378, 383, 384, 385, 390, 392, 394, 402, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 437, 440, 455, 460, 486, 494, 496, 498, 544, 545, 562], "dst": [11, 13, 15, 16, 17, 20, 22, 26, 28, 29, 32, 34, 36, 44, 46, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 148, 149, 150, 152, 153, 154, 161, 167, 168, 169, 170, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 245, 252, 253, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 279, 281, 288, 289, 297, 300, 303, 360, 362, 364, 366, 368, 370, 371, 372, 373, 374, 375, 378, 383, 384, 385, 390, 392, 394, 402, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 432, 434, 436, 437, 440, 455, 457, 460, 486, 494, 496, 498, 530, 544, 545, 562], "fastest": [11, 167, 168], "higher": [11, 15, 20, 27, 29, 31, 44, 47, 51, 54, 142, 144, 145, 150, 162, 163, 164], "f16": [11, 14, 15, 20, 22, 29, 32, 34, 36, 39, 40, 42, 43, 44, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 148, 149, 150, 151, 152, 153, 157, 160, 161, 167, 168, 180, 181, 183, 194], "To": [12, 13, 15, 16, 24, 27, 28, 29, 32, 33, 36, 37, 40, 45, 46, 47, 50, 53, 68, 71, 123, 126, 141, 146, 147, 149, 150, 158, 163, 237, 247, 272, 375, 384, 386, 389, 394, 395, 396, 397, 398, 399, 400, 401, 419, 431, 438], "valid": [12, 24, 32, 46, 54, 58, 59, 65, 66, 68, 69, 70, 71, 72, 73, 101, 102, 147, 151, 163, 175, 178, 186, 187, 204, 210, 266, 281, 283, 290, 306, 326, 336, 338, 339, 350, 419, 482, 522, 524, 567], "certif": 12, "guarante": [12, 32, 36, 46, 134, 135, 143, 162, 381], "multipl": [12, 15, 16, 18, 19, 20, 22, 28, 29, 37, 40, 41, 44, 46, 50, 51, 117, 142, 148, 149, 155, 161, 163, 169, 170, 179, 196, 203, 204, 238, 245, 264, 272, 280, 283, 286, 291, 306, 307, 311, 322, 323, 334, 352, 353, 366, 369, 377, 381, 382, 383, 386, 387, 389, 394, 404, 405, 417, 419, 420, 431, 442, 443, 519, 522, 524, 540, 581, 582], "platform": [12, 29, 32, 39, 40, 42, 43, 49, 50, 147, 160, 161, 164, 233, 234, 238, 245, 247, 346, 371, 377, 383, 385, 420], "exact": [12, 41, 50, 145, 151, 244, 381, 394], "bitwis": [12, 20, 24, 44, 51, 222], "most": [12, 15, 16, 19, 22, 24, 25, 26, 29, 30, 32, 36, 46, 48, 50, 53, 54, 99, 142, 148, 149, 154, 157, 162, 179, 209, 283, 298, 312, 381, 394, 404, 419, 442, 478, 491, 522, 536, 560], "fix": [12, 162], "environ": [12, 14, 17, 23, 24, 30, 31, 32, 36, 38, 49, 50, 52, 142, 143, 146, 147, 158, 163, 164, 215, 216, 318, 419, 420], "particular": [12, 15, 17, 18, 19, 28, 29, 32, 36, 46, 50, 54, 153, 159, 162, 163, 179, 251, 254, 298, 306, 312, 321, 381, 389, 394, 395, 438, 478, 524], "hardwar": [12, 14, 16, 20, 22, 29, 33, 34, 37, 44, 47, 50, 53, 142, 144, 147, 151, 152, 157, 159, 160, 326, 332, 419, 567], "softwar": [12, 23, 49, 50, 160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "runtim": [12, 15, 16, 20, 27, 32, 33, 36, 39, 40, 42, 44, 51, 54, 60, 93, 141, 143, 149, 155, 159, 163, 164, 209, 210, 255, 258, 280, 286, 288, 307, 312, 323, 324, 330, 331, 334, 339, 343, 350, 351, 354, 381, 394, 395, 399, 400, 404, 419, 420, 438, 442, 530, 573], "version": [12, 20, 23, 24, 25, 44, 45, 52, 143, 158, 160, 161, 163, 169, 170, 179, 196, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 306, 312, 318, 348, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 460, 562, 573], "variabl": [12, 14, 20, 22, 23, 24, 26, 29, 30, 31, 34, 36, 38, 44, 48, 49, 51, 52, 53, 54, 55, 58, 65, 67, 68, 78, 81, 82, 87, 89, 95, 96, 99, 101, 119, 124, 126, 128, 137, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 158, 163, 185, 193, 272, 281, 312, 318, 394, 419, 420, 431], "ident": [12, 26, 51, 52, 112, 113, 114, 115, 116, 117, 118, 143, 146, 153, 154, 227, 237, 252, 259, 261, 263, 268, 279, 360, 373, 374, 375, 390, 406, 410, 415, 423, 436, 437, 440], "between": [12, 15, 16, 18, 19, 22, 23, 24, 33, 35, 37, 39, 40, 41, 42, 43, 50, 58, 68, 85, 86, 101, 102, 121, 141, 142, 149, 157, 159, 162, 163, 164, 185, 193, 217, 218, 231, 232, 234, 235, 239, 240, 241, 250, 251, 252, 255, 272, 276, 283, 288, 298, 306, 315, 338, 359, 368, 369, 371, 372, 378, 381, 386, 390, 394, 419, 431, 445, 482, 524, 530, 538, 544], "produc": [12, 18, 20, 29, 34, 37, 38, 46, 48, 49, 95, 153, 163, 283, 306, 312, 318, 381, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 567, 568, 569, 570, 571, 572], "bit": [12, 14, 15, 17, 24, 25, 30, 32, 41, 45, 46, 47, 50, 157, 171, 174, 175, 183, 194, 202, 215, 216, 226, 244, 247, 288, 291, 318, 324, 346, 354, 370, 381, 395, 530, 538, 563], "wise": [12, 28, 34, 46, 55, 57, 75, 81, 85, 96, 100, 103, 104, 106, 107, 108, 111, 122, 130, 132, 133, 136, 139, 145, 162, 190, 191, 199, 203, 204, 237, 252, 253, 267, 359, 375, 390, 393, 421], "reli": [12, 28, 149], "non": [12, 16, 17, 19, 23, 26, 29, 32, 36, 41, 45, 47, 50, 51, 58, 59, 68, 69, 70, 71, 72, 73, 78, 79, 91, 95, 101, 102, 142, 149, 151, 161, 162, 163, 164, 169, 170, 175, 183, 194, 199, 209, 210, 234, 235, 242, 243, 258, 266, 306, 326, 331, 332, 339, 343, 351, 371, 372, 379, 380, 394, 404, 420, 524, 567], "construct": [12, 19, 33, 37, 38, 39, 40, 42, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 160, 161, 238, 272, 306, 307, 323, 336, 350, 351, 352, 353, 354, 377, 395, 431, 438, 540, 574, 580], "atom": [12, 412], "order": [12, 15, 16, 19, 24, 28, 29, 30, 31, 33, 36, 45, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 149, 151, 152, 162, 163, 179, 186, 187, 196, 222, 223, 234, 235, 239, 254, 261, 288, 291, 293, 294, 296, 306, 307, 308, 313, 318, 324, 354, 371, 372, 378, 394, 396, 397, 399, 400, 410, 420, 460, 462, 464, 466, 468, 470, 472, 482, 524, 526, 528, 530, 538], "dnnl_primitive_attr_set_determinist": [12, 281, 288], "set_determinist": [12, 538], "permit": [12, 25], "dispatch": [12, 14, 19, 24, 29, 31, 318, 444], "perform": [12, 13, 15, 16, 18, 19, 24, 25, 27, 30, 31, 32, 35, 36, 38, 39, 40, 41, 45, 46, 47, 50, 55, 57, 58, 60, 68, 71, 75, 85, 86, 91, 93, 94, 96, 100, 101, 103, 104, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 123, 126, 130, 132, 133, 136, 139, 142, 151, 155, 157, 162, 163, 164, 165, 199, 207, 208, 234, 235, 239, 240, 241, 255, 265, 266, 267, 276, 283, 288, 289, 290, 291, 294, 296, 297, 300, 303, 304, 305, 306, 308, 309, 318, 320, 324, 346, 354, 359, 368, 369, 370, 371, 372, 378, 381, 382, 386, 394, 395, 397, 404, 421, 438, 442, 460, 522, 529, 530, 538, 562, 567], "matmul": [12, 14, 17, 24, 32, 36, 39, 40, 42, 54, 163, 164, 188, 203, 242, 243, 244, 245, 248, 249, 258, 278, 280, 281, 283, 285, 305, 348, 359, 382, 387, 398, 401, 405, 418, 443, 536], "normal": [12, 28, 32, 36, 46, 60, 61, 86, 93, 94, 126, 169, 170, 198, 199, 203, 204, 228, 230, 257, 260, 262, 286, 304, 311, 312, 359, 363, 366, 386, 394, 403, 409, 414, 419, 452, 453, 454, 455, 483, 484, 485, 486, 499, 500, 501, 502, 511, 513, 581], "especi": [12, 40, 43, 46, 50, 146, 163, 306, 529], "gpu": [12, 15, 19, 20, 22, 26, 27, 29, 32, 33, 34, 35, 36, 39, 40, 42, 43, 51, 53, 54, 141, 144, 146, 147, 148, 149, 151, 152, 153, 154, 163, 164, 176, 177, 227, 250, 251, 255, 256, 276, 277, 278, 280, 298, 339, 350, 359, 360, 394, 399, 400, 419, 420, 442, 445, 573], "mani": [13, 24, 28, 37, 39, 40, 42, 45, 142, 162, 312, 394], "gnn": 13, "model": [13, 15, 19, 28, 29, 32, 33, 37, 39, 40, 41, 42, 43, 46, 47, 48, 74, 86, 110, 141, 151, 232, 234, 235, 239, 246, 247, 254, 272, 282, 283, 346, 371, 372, 378, 384, 385, 386, 394, 431], "layer": [13, 28, 32, 45, 46, 91, 93, 94, 151, 203, 204, 227, 244, 246, 247, 258, 260, 261, 263, 272, 279, 280, 283, 286, 306, 311, 312, 317, 359, 360, 368, 369, 370, 371, 372, 378, 381, 384, 385, 404, 409, 410, 415, 419, 431, 440, 442, 449, 451, 488, 490, 499, 500, 501, 502, 504, 506, 508, 510, 516, 518, 550, 570, 572, 581], "signific": [13, 16, 25, 46, 157, 162], "amount": [13, 18, 24, 29, 68, 69, 70, 71, 72, 73, 163, 199, 295, 306], "time": [13, 16, 18, 19, 20, 22, 23, 24, 29, 44, 45, 46, 48, 49, 50, 53, 54, 68, 69, 74, 106, 142, 143, 144, 150, 152, 159, 160, 162, 169, 205, 206, 227, 232, 248, 254, 258, 260, 261, 263, 272, 279, 280, 288, 302, 306, 307, 310, 312, 318, 323, 324, 333, 334, 337, 338, 339, 343, 360, 369, 370, 381, 386, 387, 389, 394, 404, 405, 408, 410, 415, 420, 431, 440, 442, 443, 538], "enhanc": 13, "akin": 13, "binari": [13, 16, 20, 24, 29, 34, 35, 37, 39, 44, 48, 49, 51, 54, 143, 144, 148, 150, 153, 159, 160, 161, 169, 170, 198, 199, 203, 204, 230, 238, 283, 286, 288, 306, 311, 312, 348, 359, 365, 367, 377, 419, 460, 524, 530, 536, 540, 545, 562, 567, 581], "depend": [13, 15, 16, 18, 19, 20, 23, 24, 32, 37, 41, 44, 47, 50, 51, 52, 54, 64, 123, 142, 145, 146, 151, 153, 161, 162, 163, 164, 179, 196, 288, 291, 293, 297, 306, 307, 312, 323, 324, 339, 343, 350, 351, 352, 353, 354, 368, 369, 381, 394, 395, 419, 438, 460, 474, 476, 524, 530, 538], "prng": 13, "variat": [13, 142], "philox": 13, "algorithm": [13, 15, 16, 20, 24, 34, 45, 46, 144, 148, 150, 160, 161, 163, 164, 169, 209, 210, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 242, 243, 245, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 279, 288, 290, 294, 296, 297, 304, 308, 314, 316, 320, 348, 360, 362, 364, 366, 369, 370, 371, 372, 373, 375, 377, 379, 380, 383, 389, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 432, 434, 436, 438, 440, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 530, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "mathrm": [13, 54], "mask": [13, 15, 16, 29, 40, 42, 47, 48, 54, 142, 149, 160, 161, 233, 238, 244, 248, 258, 280, 281, 288, 312, 325, 326, 370, 377, 381, 386, 404, 442, 530, 538, 563, 566, 567], "cdot": [13, 15, 16, 20, 22, 28, 29, 34, 39, 42, 44, 47, 48, 50, 51, 53, 54, 58, 61, 68, 74, 76, 77, 86, 88, 93, 99, 101, 110, 112, 113, 114, 115, 116, 117, 118, 135, 144, 145, 149, 150, 151, 154, 160, 170, 381], "usual": [13, 33, 39, 42, 46, 47, 95, 142, 143, 147, 160, 161, 163, 182, 184, 238, 377, 395, 438, 482], "potenti": [13, 16, 29, 34, 50, 147, 159, 160, 161, 186, 238, 312, 377, 419, 524], "u8": [13, 15, 16, 22, 25, 29, 32, 34, 35, 43, 47, 48, 51, 54, 74, 76, 77, 110, 144, 145, 149, 150, 151, 152, 153, 160, 161, 163, 183, 194, 230, 233, 238, 241, 244, 245, 247, 258, 283, 359, 367, 370, 377, 381, 383, 385, 397, 404], "whose": 13, "either": [13, 16, 19, 20, 22, 24, 26, 37, 44, 46, 47, 50, 51, 54, 59, 60, 62, 69, 70, 73, 91, 92, 123, 145, 148, 154, 157, 160, 161, 162, 163, 169, 170, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 289, 300, 303, 304, 306, 308, 316, 317, 320, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 512, 514, 524, 526, 528, 547, 549, 556, 558], "got": [13, 160, 161, 164, 238, 240, 241, 249, 254, 255, 256, 276, 278, 377, 394, 395], "k": [13, 18, 36, 39, 40, 42, 43, 53, 54, 76, 99, 160, 161, 164, 202, 209, 210, 226, 231, 234, 235, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 258, 262, 264, 278, 280, 281, 291, 304, 324, 326, 348, 354, 368, 371, 372, 377, 378, 379, 380, 381, 383, 386, 404, 413, 417, 442, 512, 514, 541, 567, 568, 575], "drop": [13, 14], "out": [13, 15, 16, 19, 20, 28, 33, 36, 37, 40, 42, 43, 53, 68, 69, 70, 71, 72, 73, 141, 144, 147, 152, 153, 159, 161, 162, 163, 164, 179, 192, 196, 203, 204, 220, 221, 222, 223, 231, 239, 246, 253, 254, 268, 281, 283, 288, 293, 306, 315, 322, 368, 378, 384, 385, 392, 394, 419, 423, 460, 530, 561, 568], "seed": [13, 17, 54, 312], "leq": [13, 22, 34, 119, 145, 152], "dnnl_primitive_attr_get_dropout": [13, 281, 288], "dnnl_primitive_attr_set_dropout": [13, 281, 288], "get_dropout": [13, 538], "set_dropout": [13, 538], "three": [13, 24, 28, 39, 43, 45, 54, 142, 151, 162, 283, 389, 395, 420, 438], "addit": [13, 14, 15, 19, 20, 22, 24, 27, 28, 29, 30, 31, 32, 36, 37, 43, 46, 48, 50, 54, 57, 69, 71, 72, 73, 99, 118, 142, 147, 153, 160, 161, 164, 199, 210, 227, 237, 238, 252, 259, 261, 263, 268, 279, 306, 326, 338, 360, 370, 375, 377, 389, 390, 394, 395, 406, 410, 415, 419, 420, 423, 438, 440, 567], "dnnl_arg_attr_dropout_mask": [13, 54, 281, 312], "through": [13, 15, 24, 27, 32, 37, 39, 40, 42, 43, 45, 47, 143, 158, 159, 160, 272, 338, 370, 389, 394, 396, 397, 399, 400, 419, 431, 438, 482], "dnnl_arg_attr_dropout_prob": [13, 54, 281, 312], "singl": [13, 16, 17, 20, 22, 24, 29, 32, 35, 36, 39, 40, 41, 45, 47, 51, 53, 107, 112, 113, 114, 115, 116, 117, 118, 149, 151, 157, 160, 161, 162, 169, 170, 175, 183, 190, 191, 194, 238, 249, 278, 280, 288, 291, 306, 312, 324, 326, 354, 370, 377, 381, 394, 442, 524, 530], "hold": [13, 18, 34, 54, 112, 113, 114, 115, 116, 117, 118, 244, 247, 272, 288, 326, 369, 381, 384, 394, 419, 431, 538, 567], "dnnl_arg_attr_dropout_se": [13, 54, 281, 312], "benefici": [14, 34, 46, 162, 529], "how": [14, 15, 16, 18, 20, 22, 26, 29, 33, 34, 36, 37, 39, 40, 42, 44, 45, 47, 48, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 86, 91, 92, 101, 102, 134, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 162, 163, 169, 170, 231, 232, 233, 234, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 255, 272, 276, 278, 288, 291, 306, 312, 324, 354, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 384, 385, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 530], "narrow": 14, "bf16": [14, 15, 20, 22, 25, 29, 32, 34, 35, 39, 40, 42, 43, 44, 46, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 148, 149, 150, 151, 152, 153, 157, 160, 161, 180, 181, 183, 194, 234, 280, 359, 442], "tf32": [14, 180, 181], "furthermor": [14, 29, 68], "do": [14, 15, 16, 18, 20, 25, 32, 36, 45, 46, 50, 58, 101, 141, 142, 150, 154, 157, 162, 164, 179, 196, 213, 214, 240, 241, 247, 249, 255, 256, 265, 276, 278, 306, 384, 419, 420, 522, 524], "affect": [14, 15, 24, 36, 47, 50, 143, 162, 179, 318, 567], "remain": [14, 24, 28, 29, 68, 162, 246, 247, 272, 384, 385, 419, 431, 524, 530], "3": [14, 15, 16, 32, 34, 36, 39, 40, 42, 44, 47, 50, 54, 60, 61, 62, 89, 94, 108, 123, 147, 151, 155, 160, 161, 162, 175, 182, 183, 194, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 252, 253, 254, 255, 256, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 283, 306, 312, 338, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 390, 392, 394, 395, 396, 397, 399, 400, 406, 408, 410, 413, 417, 419, 420, 421, 423, 425, 427, 429, 432, 434, 436, 438, 440, 482, 524], "disabl": [14, 24, 27, 30, 31, 36, 49, 146, 147, 163, 294, 296, 301, 305, 310, 318, 333, 334, 464, 466, 470, 472], "smaller": [14, 24, 65, 66, 99, 149, 258, 404], "least": [14, 19, 23, 54, 67, 146, 291, 324, 325, 352, 354, 389, 394, 522, 566], "accur": [14, 29, 50, 248, 386], "expon": [14, 32, 107, 111, 157, 169, 170, 175, 183, 194], "mantissa": [14, 17, 32, 157, 175, 183, 194, 215, 216], "ignor": [14, 29, 31, 32, 58, 59, 62, 69, 91, 92, 101, 102, 254, 303, 306, 313, 394, 500, 502], "second": [14, 15, 27, 28, 39, 40, 42, 43, 50, 68, 109, 112, 113, 114, 115, 116, 117, 118, 123, 179, 196, 209, 210, 240, 255, 272, 276, 283, 288, 306, 338, 389, 396, 397, 399, 400, 419, 431, 524, 530], "dnnl_primitive_attr_set_fpmath_mode_v2": [14, 281, 288], "weight": [14, 15, 18, 24, 26, 27, 28, 29, 32, 36, 39, 45, 46, 47, 48, 50, 54, 68, 69, 70, 71, 72, 73, 99, 145, 149, 151, 157, 162, 163, 164, 179, 185, 193, 196, 207, 208, 209, 210, 213, 214, 227, 232, 233, 234, 235, 237, 239, 241, 245, 246, 247, 252, 258, 259, 261, 263, 264, 265, 266, 267, 268, 272, 279, 280, 288, 294, 296, 301, 305, 306, 309, 312, 317, 359, 360, 369, 370, 371, 372, 375, 378, 383, 384, 385, 390, 397, 404, 405, 406, 410, 415, 417, 419, 420, 421, 423, 431, 440, 443, 449, 451, 453, 455, 462, 463, 464, 466, 468, 469, 470, 472, 484, 486, 488, 490, 494, 495, 496, 498, 500, 502, 504, 506, 508, 510, 516, 518, 520, 530, 538, 541, 550, 570, 572], "de": [14, 43, 74, 76, 77, 163, 280, 419, 442], "refer": [14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 29, 32, 33, 34, 44, 47, 48, 51, 52, 53, 54, 141, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 210, 233, 234, 238, 240, 241, 245, 247, 249, 276, 278, 283, 288, 289, 291, 297, 300, 303, 306, 312, 324, 354, 371, 377, 381, 383, 385, 389, 394, 395, 419, 420, 438, 455, 486, 567], "tutori": [14, 32, 35, 54, 244, 248, 258, 280, 359], "decompress": [14, 32, 54, 280, 359], "onednn_default_fpmath_mod": 14, "dnnl_set_default_fpmath_mod": [14, 281, 299], "set_default_fpmath_mod": [14, 318, 348], "build": [14, 18, 49, 52, 134, 155, 217, 218, 231, 232, 234, 235, 239, 240, 241, 246, 247, 249, 255, 272, 276, 278, 318, 338, 346, 368, 369, 371, 372, 378, 384, 385, 395, 431, 482], "arm": [14, 163, 346], "bfloat16": [14, 30, 32, 46, 171, 174, 175, 183, 234, 359, 371], "kernel": [14, 15, 24, 28, 31, 33, 39, 42, 49, 58, 59, 68, 69, 70, 71, 72, 73, 101, 102, 144, 147, 159, 160, 161, 162, 164, 186, 187, 209, 210, 231, 232, 234, 235, 238, 239, 256, 265, 267, 277, 281, 288, 308, 318, 326, 332, 368, 369, 371, 372, 377, 378, 386, 419, 421, 526, 528, 530, 541, 567], "introduc": [14, 36, 42, 50, 146, 157, 162, 394, 420], "typic": [15, 16, 19, 20, 26, 37, 39, 40, 42, 43, 44, 46, 47, 50, 53, 99, 140, 142, 149, 152, 153, 162, 164, 190, 191, 240, 241, 244, 255, 258, 276, 280, 306, 312, 315, 381, 394, 404, 442], "bandwidth": [15, 40, 46, 419], "pressur": [15, 46], "lead": [15, 18, 20, 22, 24, 25, 29, 32, 34, 40, 42, 43, 44, 46, 50, 51, 53, 149, 160, 161, 162, 186, 238, 248, 283, 291, 324, 326, 354, 377, 386, 394, 396, 399, 400, 567, 568], "append": [15, 36, 160, 161, 238, 288, 377, 530], "mechan": [15, 33, 36, 41, 43, 49, 52, 141, 142, 246, 247, 384, 385], "just": [15, 16, 24, 28, 29, 31, 34, 46, 49, 146, 147, 158, 160, 161, 162, 163, 169, 179, 233, 234, 238, 245, 247, 371, 377, 383, 385, 386, 389, 394, 395, 396, 397, 398, 399, 400, 401, 419, 438], "like": [15, 19, 20, 24, 28, 29, 37, 39, 43, 46, 48, 50, 52, 53, 61, 99, 144, 151, 160, 161, 162, 163, 238, 288, 338, 377, 381, 386, 394, 396, 397, 398, 399, 400, 401, 529, 530], "dnnl_post_ops_t": [15, 281, 288, 530], "post_op": [15, 45, 160, 161, 164, 229, 230, 233, 237, 238, 248, 252, 258, 259, 264, 266, 281, 288, 325, 326, 348, 364, 366, 370, 375, 377, 386, 390, 404, 406, 417, 420, 491, 538, 566, 567], "attach": [15, 16, 24, 26, 45, 46, 142, 160, 161, 238, 377, 389, 394, 395, 396, 398, 399, 400, 401, 438, 522, 530], "set_post_op": [15, 29, 45, 160, 161, 229, 230, 233, 237, 238, 248, 252, 258, 259, 264, 266, 364, 366, 370, 375, 377, 386, 390, 404, 406, 417, 420, 538, 567], "dnnl_primitive_attr_set_post_op": [15, 281, 288], "simpl": [15, 16, 25, 29, 49, 143, 158, 159, 163, 231, 239, 240, 244, 248, 249, 255, 258, 276, 278, 368, 370, 378, 381, 386, 394, 396, 398, 399, 400, 401, 404], "po": [15, 248, 258, 386, 404, 567], "assert": [15, 18, 36, 162, 232, 234, 235, 240, 241, 244, 246, 247, 249, 255, 276, 278, 306, 369, 371, 372, 381, 396, 397, 398, 399, 400, 401, 524], "len": [15, 291, 324, 354, 530], "append_someth": 15, "append_something_els": 15, "note": [15, 16, 18, 24, 32, 36, 43, 45, 46, 47, 50, 70, 142, 151, 160, 161, 162, 163, 179, 227, 228, 236, 238, 240, 241, 244, 247, 249, 261, 262, 263, 267, 272, 276, 278, 279, 293, 312, 334, 338, 360, 362, 369, 370, 373, 377, 381, 384, 385, 394, 410, 413, 415, 421, 431, 440, 460], "matter": [15, 36, 46, 50, 396, 397, 399, 400], "further": [15, 28, 29, 33, 39, 68, 141, 150, 179, 196, 420], "would": [15, 16, 18, 20, 24, 28, 29, 31, 44, 45, 46, 50, 51, 54, 144, 149, 160, 161, 162, 238, 244, 288, 289, 291, 306, 317, 324, 354, 370, 377, 381, 394, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 524, 530, 538, 544, 570, 572], "togeth": [15, 38, 162, 317, 325, 420, 449, 488, 504, 508, 516, 518, 529, 566, 570], "anoth": [15, 18, 28, 40, 46, 121, 142, 147, 151, 160, 162, 164, 240, 241, 255, 276, 312, 338, 369, 389, 394, 395, 438, 482, 491, 524], "sequenc": [15, 19, 28, 29, 40, 42, 43, 50, 147, 179, 246, 247, 272, 288, 384, 385, 389, 395, 420, 431, 438, 530], "appear": [15, 26, 46, 152, 162, 163], "maximum": [15, 16, 19, 22, 36, 46, 114, 144, 159, 164, 188, 246, 247, 267, 272, 283, 285, 295, 324, 381, 421, 431], "32": [15, 25, 46, 47, 50, 157, 160, 161, 175, 179, 183, 194, 202, 226, 234, 235, 237, 238, 246, 247, 249, 252, 278, 280, 281, 288, 291, 312, 324, 354, 370, 371, 372, 375, 377, 390, 442, 530, 538], "page": [15, 19, 26, 46, 47, 71, 147, 148, 149, 154, 439], "moreov": [15, 28, 31, 34, 47, 142, 179, 196], "actual": [15, 16, 18, 19, 29, 36, 46, 48, 50, 142, 151, 153, 160, 161, 162, 178, 195, 197, 219, 238, 288, 306, 312, 377, 381, 389, 394, 419, 522, 524, 538, 550], "instanc": [15, 16, 18, 20, 28, 29, 31, 36, 45, 50, 54, 142, 146, 149, 158, 162, 179, 257, 306, 324, 336, 341, 354, 394, 402, 479, 529, 563, 567], "veri": [15, 16, 18, 46, 50, 157, 162, 389, 394], "slow": 15, "robust": [15, 45, 46], "code": [15, 19, 24, 25, 26, 28, 29, 30, 31, 33, 36, 37, 45, 46, 50, 52, 141, 143, 146, 147, 149, 154, 159, 160, 161, 162, 163, 238, 240, 241, 255, 256, 276, 306, 318, 369, 370, 377, 384, 385, 389, 395, 396, 397, 398, 399, 400, 401, 419, 420, 438, 444], "inspect": [15, 19, 312, 346, 394], "index": [15, 20, 22, 26, 28, 29, 34, 36, 44, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 148, 149, 150, 151, 152, 153, 154, 162, 164, 231, 239, 254, 281, 288, 293, 298, 306, 307, 312, 323, 335, 346, 349, 352, 353, 368, 369, 378, 384, 385, 389, 394, 395, 438, 457, 460, 478, 480, 522, 524, 530, 536, 538, 541, 544, 562], "less": [15, 22, 29, 54, 99, 142, 150, 169, 170, 272, 310, 333, 370, 431, 478], "than": [15, 18, 22, 24, 27, 29, 32, 34, 46, 50, 54, 65, 66, 85, 99, 134, 149, 150, 154, 162, 163, 169, 170, 210, 217, 218, 234, 235, 239, 258, 310, 333, 371, 372, 378, 394, 404, 420, 478], "its": [15, 18, 19, 22, 24, 30, 32, 34, 36, 39, 41, 42, 45, 48, 50, 53, 54, 107, 109, 141, 142, 151, 159, 162, 163, 179, 198, 258, 272, 280, 283, 306, 336, 340, 369, 370, 394, 395, 404, 412, 431, 438, 442, 478, 491, 522, 536, 560, 563], "popular": [15, 16, 41, 162, 394], "activ": [15, 16, 18, 20, 23, 28, 39, 47, 48, 65, 81, 95, 104, 151, 162, 179, 196, 209, 210, 258, 265, 281, 288, 317, 404, 419, 482, 530, 538, 541, 570, 572], "preced": [15, 20, 24, 28, 30, 31, 49, 53, 59, 69, 70, 73, 144, 146, 147, 152, 163, 179, 283, 419], "inner": [15, 28, 32, 45, 50, 162, 179, 203, 204, 232, 259, 286, 311, 359, 369, 407, 419, 493, 494, 495, 496, 497, 498, 524, 581], "product": [15, 28, 32, 39, 40, 43, 45, 50, 54, 99, 134, 160, 161, 203, 204, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 245, 250, 251, 252, 253, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 279, 281, 283, 286, 291, 306, 311, 324, 354, 359, 360, 362, 364, 366, 368, 369, 371, 372, 373, 375, 377, 378, 383, 388, 390, 392, 402, 407, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 432, 434, 436, 440, 493, 494, 495, 496, 497, 498, 524, 581], "dnnl_post_ops_append_eltwis": [15, 281, 288], "append_eltwis": [15, 45, 160, 161, 229, 233, 237, 238, 252, 258, 259, 264, 266, 364, 370, 375, 377, 390, 404, 406, 417, 420, 530], "simplic": [15, 16, 151, 162, 236, 373, 381, 389, 395, 438], "alg": [15, 163, 419, 420], "alpha": [15, 20, 29, 34, 44, 47, 53, 78, 79, 87, 88, 95, 108, 145, 160, 161, 164, 186, 187, 209, 210, 229, 231, 234, 235, 237, 238, 239, 248, 252, 254, 258, 259, 262, 264, 280, 281, 288, 291, 297, 304, 309, 317, 324, 348, 354, 364, 368, 371, 372, 375, 377, 378, 386, 390, 394, 404, 406, 413, 417, 420, 442, 474, 476, 512, 514, 530, 532, 534, 541, 570, 572], "beta": [15, 20, 29, 34, 44, 51, 53, 60, 61, 86, 87, 88, 93, 94, 107, 128, 129, 149, 160, 161, 164, 186, 187, 209, 210, 229, 231, 234, 235, 237, 238, 239, 248, 252, 254, 259, 262, 264, 281, 288, 289, 291, 297, 300, 303, 304, 317, 324, 348, 354, 364, 368, 371, 372, 375, 377, 378, 386, 390, 394, 406, 413, 417, 420, 474, 476, 512, 514, 530, 541, 570, 572], "replac": [15, 34, 39, 50, 54, 65, 66, 147, 151, 152, 158, 163, 386, 387, 394], "operatornam": [15, 16, 32, 34, 160], "preserv": [15, 18, 45, 46, 231, 239, 368, 378], "exist": [15, 19, 32, 33, 36, 54, 141, 213, 214, 306, 335, 339, 343, 524], "prior": [15, 288, 307, 312, 313, 352, 394, 530, 536, 537, 567], "shift": [15, 28, 47, 50, 61, 93, 198, 199, 228, 230, 257, 260, 280, 281, 288, 289, 300, 303, 312, 362, 366, 402, 408, 442, 500, 502, 538], "multipli": [15, 18, 28, 39, 42, 50, 151, 188, 248, 256, 272, 277, 283, 285, 288, 291, 306, 322, 324, 354, 386, 395, 431, 438, 530, 562], "scale": [15, 22, 26, 27, 28, 29, 32, 36, 40, 41, 43, 45, 48, 50, 54, 61, 74, 76, 77, 78, 79, 86, 91, 92, 93, 94, 110, 149, 150, 153, 154, 160, 161, 164, 175, 186, 187, 194, 198, 199, 228, 230, 233, 238, 241, 244, 247, 257, 258, 260, 270, 275, 280, 281, 283, 288, 289, 291, 300, 303, 312, 316, 322, 324, 325, 326, 354, 362, 366, 370, 377, 381, 382, 384, 385, 386, 387, 397, 402, 404, 405, 408, 427, 428, 436, 442, 443, 500, 502, 530, 537, 538, 547, 549, 562, 566, 567], "residu": [15, 246, 529], "learn": [15, 16, 24, 28, 29, 30, 32, 41, 45, 46, 50, 142, 171, 174, 265, 346, 419, 529], "block": [15, 19, 26, 28, 36, 42, 147, 159, 160, 161, 163, 164, 178, 179, 195, 196, 209, 210, 238, 266, 306, 326, 346, 377, 394, 419, 524, 529, 568], "previous": [15, 47, 240, 241, 255, 276, 306, 370, 395, 419, 438, 522, 524, 538], "scenario": [15, 32, 33, 141, 142, 144, 185, 193, 370], "previou": [15, 16, 24, 34, 42, 45, 47, 149, 151, 162, 231, 239, 244, 258, 280, 283, 288, 368, 378, 381, 404, 442, 530], "magnitud": 15, "operand": [15, 50, 163, 283, 288, 530], "s8": [15, 16, 20, 22, 25, 29, 32, 34, 36, 43, 44, 47, 48, 51, 54, 74, 76, 77, 110, 144, 145, 149, 150, 151, 152, 153, 160, 161, 163, 183, 194, 233, 238, 241, 244, 245, 247, 258, 270, 280, 283, 370, 377, 381, 383, 385, 397, 404, 427, 442], "gemm": [15, 18, 24, 29, 50, 162, 164, 246, 247, 385, 420], "_point": 15, "origin": [15, 16, 20, 34, 44, 46, 47, 51, 91, 92, 149, 150, 153, 154, 161, 162, 163, 169, 258, 280, 288, 297, 306, 370, 381, 404, 442, 530], "reinterpret": [15, 29, 33, 288, 530], "_data": 15, "_type": 15, "1x1": [15, 164, 288, 530], "seen": [15, 420], "mobilenet_v1": 15, "stack": [15, 151], "opportun": 15, "dnnl_post_ops_append_dw": [15, 281, 288], "append_dw": [15, 530], "better": [15, 22, 24, 46, 157, 162, 164, 306, 369, 381, 386, 394, 397, 419, 420], "readabl": [15, 394, 438], "assum": [15, 16, 19, 23, 24, 29, 50, 52, 68, 74, 76, 77, 110, 145, 147, 150, 162, 227, 237, 244, 248, 252, 259, 261, 263, 268, 272, 279, 288, 291, 306, 312, 324, 354, 360, 375, 381, 384, 385, 386, 390, 394, 395, 406, 410, 415, 419, 420, 423, 431, 438, 440, 524, 530], "2d": [15, 20, 29, 34, 44, 48, 50, 53, 54, 99, 144, 145, 150, 152, 153, 159, 162, 164, 179, 196, 288, 294, 296, 308, 316, 394, 420, 434, 435, 462, 464, 466, 468, 470, 472, 526, 528, 530], "notat": [15, 18, 34, 40, 42, 43, 54, 162, 179, 196], "conv_1x1": 15, "spatial": [15, 18, 20, 28, 29, 44, 48, 53, 58, 59, 68, 69, 70, 71, 72, 73, 91, 92, 101, 102, 144, 145, 150, 152, 162, 164, 179, 196, 288, 294, 296, 306, 308, 316, 394, 462, 464, 466, 468, 470, 472, 482, 526, 528, 530, 547, 549], "kh": [15, 16, 28, 29, 48, 50, 58, 68, 69, 101, 144, 237, 241, 252, 265, 266, 267, 288, 375, 390, 419, 420, 421, 530], "kw": [15, 16, 28, 29, 48, 50, 58, 68, 101, 144, 237, 241, 252, 265, 266, 267, 288, 375, 390, 419, 420, 421, 530], "conv_dw": 15, "g": [15, 16, 18, 20, 23, 24, 28, 29, 34, 36, 43, 44, 46, 48, 51, 52, 68, 76, 86, 93, 94, 152, 158, 159, 160, 161, 162, 163, 196, 227, 237, 238, 240, 241, 244, 247, 248, 255, 261, 263, 272, 276, 279, 280, 281, 288, 306, 360, 375, 377, 381, 386, 394, 396, 397, 399, 400, 410, 415, 431, 440, 442, 460, 480, 530, 538, 540, 545, 562], "oc": [15, 16, 28, 29, 48, 68, 231, 237, 239, 241, 252, 259, 261, 265, 266, 281, 288, 368, 375, 378, 390, 406, 410, 419, 420, 530, 577], "ic": [15, 16, 28, 29, 48, 68, 74, 110, 150, 153, 228, 229, 230, 231, 236, 237, 239, 240, 241, 252, 253, 255, 257, 259, 261, 262, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 281, 288, 362, 364, 366, 368, 373, 375, 378, 390, 392, 402, 406, 410, 413, 419, 420, 421, 423, 425, 427, 429, 432, 434, 436, 530, 577], "pad_l": 15, "pad_r": 15, "conv_": [15, 16], "dw": [15, 28, 29, 58, 68, 69, 101, 144, 267, 421], "dst_": [15, 16, 34, 50, 74, 107, 110], "n": [15, 16, 18, 20, 22, 26, 28, 29, 36, 40, 42, 43, 44, 47, 48, 51, 53, 54, 58, 60, 61, 63, 67, 68, 93, 94, 97, 99, 101, 135, 144, 145, 147, 149, 150, 152, 154, 155, 160, 161, 162, 164, 179, 196, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 288, 291, 293, 306, 322, 324, 325, 326, 348, 354, 360, 362, 364, 366, 368, 371, 373, 375, 377, 378, 379, 380, 381, 383, 385, 386, 388, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 524, 530, 563, 566, 567, 568, 575], "oc_": 15, "ceil": [15, 58, 101, 186, 187, 288, 530], "oh_": 15, "ow_": 15, "oh_conv_1x1": 15, "ow_conv_1x1": 15, "height": [15, 28, 29, 68, 69, 101, 102, 162, 179, 196, 228, 229, 230, 236, 237, 252, 253, 257, 259, 262, 267, 268, 269, 270, 271, 273, 275, 294, 296, 308, 362, 364, 366, 369, 373, 375, 390, 392, 402, 406, 413, 421, 423, 425, 427, 429, 432, 436, 462, 464, 466, 468, 470, 472, 526, 528], "width": [15, 28, 29, 68, 69, 101, 102, 162, 179, 196, 228, 229, 230, 236, 237, 252, 253, 257, 259, 262, 267, 268, 269, 270, 271, 273, 275, 294, 296, 308, 362, 364, 366, 369, 373, 375, 390, 392, 402, 406, 413, 421, 423, 425, 427, 429, 432, 436, 462, 464, 466, 468, 470, 472, 526, 528], "conv": [15, 16, 29, 45, 143, 147, 158, 163, 231, 233, 234, 235, 239, 240, 241, 255, 265, 266, 276, 368, 370, 371, 372, 378, 397, 419, 420], "bia": [15, 16, 17, 28, 29, 47, 48, 54, 63, 64, 68, 71, 86, 93, 94, 99, 151, 164, 170, 179, 196, 199, 207, 208, 215, 216, 227, 233, 234, 235, 237, 239, 252, 259, 261, 263, 264, 272, 279, 288, 294, 296, 301, 305, 312, 317, 360, 369, 370, 371, 372, 375, 378, 390, 406, 410, 415, 417, 431, 440, 449, 451, 464, 466, 470, 472, 488, 490, 496, 498, 504, 506, 508, 510, 516, 518, 520, 530, 541, 550, 570, 572], "though": [15, 18, 25, 46, 50, 151, 217, 218, 381, 386, 394], "convent": [15, 20, 22, 26, 29, 34, 44, 46, 48, 51, 53, 54, 55, 58, 65, 67, 68, 78, 81, 82, 87, 89, 95, 96, 99, 101, 119, 124, 126, 128, 137, 144, 145, 149, 150, 151, 152, 153, 154, 162, 163, 283, 306, 359, 394, 419, 439], "impli": [15, 134, 160, 161, 199, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "part": [15, 16, 19, 24, 37, 41, 42, 49, 143, 146, 160, 161, 238, 240, 241, 249, 255, 276, 278, 306, 326, 377, 394, 398, 401, 419, 524, 567, 568], "dst_1x1": 15, "wei_dw": 15, "dst_dw": 15, "dnnl_format_tag_ani": [15, 144, 151, 179, 196, 231, 239, 290, 294, 296, 301, 306, 309, 312, 314, 316, 317, 368, 378], "coincid": [15, 162, 326, 567], "util": [15, 18, 31, 36, 142, 160, 161, 238, 272, 286, 292, 377, 395, 431], "lifetim": [15, 37, 141, 210, 240, 241, 249, 255, 276, 278, 288, 307, 312, 352], "thu": [15, 29, 54, 142, 272, 419, 431], "gain": [15, 45, 420], "expect": [15, 19, 20, 24, 29, 36, 41, 44, 48, 50, 51, 53, 54, 76, 143, 144, 150, 160, 161, 163, 164, 169, 170, 198, 209, 210, 238, 254, 256, 288, 325, 326, 377, 394, 395, 419, 420, 460, 522, 538, 540, 545, 550, 562, 563, 566, 567], "dnnl_post_ops_append_binari": [15, 281, 288], "append_binari": [15, 160, 161, 230, 238, 366, 377, 530], "desc": [15, 16, 18, 19, 33, 36, 45, 46, 141, 143, 147, 160, 161, 162, 164, 209, 210, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 306, 352, 353, 360, 362, 364, 366, 369, 370, 371, 372, 373, 375, 377, 379, 380, 381, 383, 384, 385, 386, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 530, 532, 534, 538, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "src1": [15, 288, 457, 530], "_1": [15, 100, 103], "per": [15, 22, 26, 29, 40, 41, 44, 48, 51, 54, 69, 71, 72, 73, 74, 76, 77, 86, 93, 94, 109, 110, 142, 153, 232, 270, 306, 318, 381, 420, 427, 530, 573], "broadcast": [15, 22, 26, 39, 42, 54, 57, 63, 75, 85, 99, 100, 103, 106, 133, 136, 145, 149, 154, 288, 290, 530], "channel": [15, 20, 28, 29, 41, 44, 47, 48, 51, 53, 61, 63, 64, 68, 69, 70, 71, 72, 73, 74, 76, 77, 86, 93, 94, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 145, 151, 152, 153, 164, 169, 170, 179, 196, 227, 228, 229, 230, 236, 237, 241, 252, 253, 257, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 304, 306, 360, 362, 364, 366, 369, 373, 375, 390, 392, 394, 397, 402, 406, 408, 410, 413, 415, 419, 421, 423, 425, 427, 429, 431, 432, 433, 434, 436, 440, 482, 530], "format_tag": [15, 16, 19, 22, 29, 45, 46, 48, 54, 145, 148, 150, 151, 160, 161, 162, 163, 164, 202, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 242, 243, 245, 246, 247, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 306, 348, 360, 362, 364, 366, 369, 370, 371, 372, 373, 375, 377, 379, 380, 383, 384, 385, 389, 390, 392, 394, 395, 402, 404, 405, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 443, 449, 451, 462, 464, 466, 468, 470, 472, 488, 490, 494, 496, 498, 504, 506, 508, 510, 516, 518, 522, 524, 543, 549, 570, 572], "tag": [15, 16, 18, 29, 36, 46, 48, 54, 144, 150, 164, 179, 196, 197, 219, 234, 235, 254, 266, 268, 281, 306, 312, 371, 372, 389, 394, 404, 419, 420, 423, 442, 524], "later": [15, 19, 23, 24, 46, 86, 93, 162, 227, 228, 253, 261, 263, 268, 279, 360, 362, 392, 394, 410, 415, 423, 440], "mismatch": [15, 46, 163, 164, 254, 394], "suboptim": [15, 20, 29, 34, 44, 51, 53, 306, 420, 522], "initi": [15, 19, 28, 30, 33, 46, 54, 142, 145, 151, 160, 161, 162, 164, 171, 174, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 273, 275, 277, 279, 280, 290, 294, 296, 301, 306, 307, 309, 314, 316, 317, 318, 323, 326, 338, 340, 352, 353, 360, 362, 364, 366, 369, 371, 372, 373, 375, 377, 378, 381, 383, 384, 385, 386, 390, 392, 394, 402, 404, 406, 408, 410, 415, 417, 423, 425, 427, 429, 432, 436, 440, 442, 449, 451, 462, 464, 466, 468, 470, 472, 488, 490, 494, 496, 498, 504, 506, 508, 510, 516, 518, 522, 543, 549, 567, 570, 572], "get_params_binari": [15, 530], "dnnl_post_ops_append_prelu": [15, 281, 288], "append_prelu": [15, 530], "int": [15, 16, 50, 147, 155, 160, 161, 162, 175, 178, 179, 204, 210, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 293, 306, 307, 310, 312, 313, 318, 319, 320, 322, 323, 324, 326, 333, 334, 336, 339, 348, 349, 352, 353, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 567, 569, 570, 571, 572, 573], "assumpt": [15, 28, 150, 396, 397, 398, 399, 400, 401, 404, 442], "dnnl_arg_attr_multiple_post_op": [15, 22, 29, 34, 44, 48, 51, 54, 144, 148, 150, 153, 230, 281, 312, 366, 530], "dnnl_arg_weight": [15, 16, 29, 45, 48, 54, 145, 231, 232, 233, 234, 235, 237, 239, 242, 243, 244, 245, 248, 252, 258, 259, 264, 265, 266, 268, 280, 281, 312, 368, 370, 371, 372, 375, 378, 379, 380, 381, 383, 386, 390, 404, 406, 417, 419, 420, 423, 442, 530], "fp32": [15, 24, 32, 46], "plain": [15, 16, 26, 54, 149, 179, 196, 202, 226, 288, 306, 420, 530], "ab": [15, 28, 34, 36, 39, 40, 42, 43, 47, 48, 54, 56, 160, 161, 169, 170, 188, 196, 202, 226, 230, 238, 245, 258, 280, 283, 285, 288, 366, 377, 383, 404, 442, 524, 530], "acb": [15, 196, 288, 530], "acdb": [15, 28, 196, 288, 530], "acdeb": [15, 196, 288, 530], "th": [15, 47, 112, 113, 114, 115, 116, 117, 118, 288, 530, 538], "dedic": [15, 36, 45, 159, 160, 161, 238, 288, 377, 530, 538], "along": [15, 37, 54, 67, 76, 77, 84, 112, 113, 114, 115, 116, 117, 118, 126, 143, 148, 152, 153, 158, 163, 164, 202, 226, 280, 288, 306, 319, 432, 433, 434, 435, 442, 530, 538, 552, 554], "common": [15, 16, 19, 37, 46, 142, 160, 161, 163, 217, 218, 238, 272, 286, 288, 311, 377, 389, 394, 395, 431, 438, 530, 538], "whole": [15, 16, 24, 145, 160, 161, 162, 238, 272, 288, 377, 431, 530, 538], "laid": [15, 19, 28, 162, 179, 196, 288, 306, 315, 394, 419, 530], "cnn": [15, 20, 28, 29, 35, 36, 46, 47, 48, 49, 51, 144, 152, 157, 179, 196, 232, 233, 234, 235, 288, 306, 359, 381, 394, 419, 530], "4d": [15, 40, 42, 43, 48, 93, 94, 162, 179, 196, 288, 306, 394, 530], "h": [15, 20, 22, 28, 29, 32, 42, 43, 44, 48, 52, 53, 60, 61, 63, 144, 145, 149, 158, 162, 164, 168, 169, 173, 174, 175, 177, 178, 179, 181, 182, 187, 189, 191, 193, 196, 199, 201, 202, 204, 206, 208, 210, 212, 214, 216, 218, 219, 221, 223, 225, 231, 232, 235, 239, 240, 241, 245, 246, 247, 249, 250, 254, 255, 256, 265, 272, 276, 277, 278, 288, 306, 368, 372, 378, 383, 388, 389, 394, 395, 396, 397, 398, 399, 400, 401, 419, 431, 438, 480, 481, 482, 530, 573], "w": [15, 20, 22, 28, 29, 39, 44, 47, 48, 53, 54, 60, 61, 63, 144, 145, 149, 151, 162, 175, 179, 183, 196, 231, 232, 234, 235, 239, 247, 254, 265, 266, 288, 306, 368, 371, 372, 378, 384, 385, 394, 419, 530], "let": [15, 16, 29, 45, 46, 48, 68, 69, 76, 150, 162, 182, 184, 234, 235, 244, 265, 371, 372, 381, 389, 394, 395, 419, 420, 438], "consid": [15, 16, 18, 20, 26, 29, 32, 42, 44, 46, 50, 51, 154, 162, 199, 294, 296, 306, 308, 381, 389, 394, 491], "pattern": [15, 19, 41, 282, 396, 399, 400], "pretti": [15, 394], "topologi": [15, 29, 45, 144, 152, 231, 232, 234, 235, 258, 272, 280, 368, 369, 371, 372, 404, 419, 431, 442], "resnet": [15, 283], "famili": [15, 24, 50, 171, 174], "append_sum": [15, 248, 386, 530], "eltwise_relu": [15, 45, 160, 161, 170, 229, 232, 233, 234, 235, 237, 238, 251, 252, 253, 254, 256, 258, 259, 264, 266, 277, 364, 369, 370, 371, 372, 375, 377, 389, 390, 392, 394, 395, 404, 406, 417, 420, 438, 570, 572], "slope": [15, 20, 29, 95, 108, 109, 199, 233, 254, 317, 370, 394, 570, 572], "f": [15, 23, 28, 54, 128, 129, 148, 150, 151, 160, 161, 196, 227, 228, 229, 230, 233, 236, 237, 238, 244, 245, 246, 247, 248, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 279, 281, 288, 291, 324, 354, 360, 362, 364, 366, 370, 373, 375, 377, 381, 383, 385, 386, 390, 392, 394, 402, 404, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 432, 434, 436, 440, 530, 538], "unus": [15, 281, 317], "convolution_forward": [15, 16, 19, 29, 45, 143, 232, 233, 234, 235, 237, 265, 266, 294, 348, 369, 370, 371, 372, 375, 419, 420, 462, 464, 536], "conv_d": [15, 420, 530], "hypothet": 15, "illustr": 15, "set_scales_mask": [15, 16, 54, 233, 244, 248, 258, 270, 370, 381, 382, 386, 387, 404, 405, 427, 538], "cover": [15, 16, 46, 50, 162, 394, 419], "eltwise_tanh": [15, 170, 279, 440, 570, 572], "eltwise_linear": [15, 170], "linear": [15, 19, 34, 39, 74, 76, 77, 91, 92, 110, 150, 162, 169, 170, 186, 187, 261, 291, 297, 316, 395, 411, 438, 522], "dnnl_arg_src": [15, 16, 20, 29, 34, 44, 45, 48, 51, 53, 54, 144, 145, 148, 150, 152, 153, 228, 231, 232, 233, 234, 235, 237, 239, 242, 243, 244, 245, 248, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 277, 280, 281, 307, 312, 323, 352, 353, 362, 368, 369, 370, 371, 372, 375, 378, 379, 380, 381, 383, 386, 388, 389, 390, 392, 394, 395, 402, 404, 406, 408, 413, 417, 419, 420, 421, 423, 425, 427, 429, 432, 434, 438, 442, 480, 536, 544], "dnnl_arg_dst": [15, 16, 20, 22, 26, 29, 34, 44, 45, 48, 51, 53, 54, 144, 145, 148, 150, 152, 153, 154, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 248, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 280, 281, 312, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 383, 386, 388, 389, 390, 392, 394, 395, 402, 404, 406, 408, 413, 417, 419, 420, 421, 423, 425, 427, 429, 432, 434, 436, 438, 442], "s_": 15, "mobilenet": 15, "pad": [15, 28, 29, 42, 58, 59, 68, 69, 70, 71, 72, 73, 101, 102, 144, 151, 162, 163, 164, 169, 170, 209, 210, 237, 247, 252, 265, 266, 267, 272, 281, 288, 294, 296, 306, 308, 312, 369, 375, 384, 390, 419, 420, 421, 431, 462, 464, 466, 468, 470, 472, 524, 526, 528, 530, 541], "dnnl_arg_attr_post_op_dw": [15, 29, 281, 312], "cpd": 15, "dw_weight_md": 15, "exec_arg_md": [15, 209, 352, 353, 536, 544], "dw_bias_md": 15, "dnnl_arg_bia": [15, 29, 48, 54, 151, 227, 231, 232, 233, 234, 235, 237, 239, 246, 247, 252, 259, 261, 263, 264, 272, 279, 281, 312, 360, 368, 370, 371, 372, 375, 378, 384, 385, 390, 406, 410, 415, 417, 431, 440], "behaviour": 15, "relu_": 15, "scales_": 15, "conv_dst_md": [15, 231, 233, 234, 235, 237, 239, 265, 266, 368, 370, 371, 372, 375, 378, 419, 420], "mb": [15, 27, 28, 147, 264, 288, 417, 530, 538, 576, 577, 578, 579], "nchw": [15, 20, 28, 44, 53, 144, 150, 152, 196, 228, 229, 232, 233, 234, 235, 236, 237, 251, 252, 253, 256, 259, 262, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 362, 364, 369, 370, 371, 372, 373, 375, 389, 390, 392, 394, 395, 406, 413, 419, 420, 421, 423, 425, 427, 429, 432, 436, 438], "abcd": [15, 28, 163, 196, 273, 419, 420, 432], "binary_add": [15, 160, 161, 170, 230, 238, 366, 377], "src1_md": 15, "unordered_map": [15, 227, 228, 229, 230, 232, 234, 235, 236, 237, 240, 241, 242, 243, 245, 246, 247, 249, 252, 253, 255, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 281, 352, 353, 360, 362, 364, 366, 369, 371, 372, 373, 375, 379, 380, 383, 384, 385, 390, 392, 396, 397, 398, 399, 400, 401, 402, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 432, 434, 436, 440, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 525, 527, 530, 531, 533, 536, 542, 544, 546, 548, 551, 553, 555, 557, 561, 569, 571], "arg": [15, 16, 45, 231, 239, 281, 288, 307, 312, 323, 352, 353, 368, 378, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 480, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 525, 527, 531, 533, 536, 538, 542, 544, 546, 548, 551, 553, 555, 557, 561, 569, 571], "insert": [15, 41, 99, 227, 228, 229, 230, 234, 235, 236, 237, 242, 243, 245, 252, 253, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 279, 360, 362, 364, 366, 371, 372, 373, 375, 379, 380, 383, 390, 392, 402, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 432, 434, 436, 440, 530], "conv_src_memori": [15, 231, 233, 234, 235, 239, 368, 370, 371, 372, 378], "binary_post_op_posit": [15, 22, 29, 34, 44, 48, 51, 54, 144, 148, 150, 153], "hard": 15, "dnnl_arg_src_1": [15, 20, 22, 29, 34, 44, 48, 51, 54, 144, 148, 150, 153, 229, 230, 281, 312, 364, 366], "parenthes": 15, "around": [15, 19, 25, 244, 381, 404, 419], "binary_post_op_src1_memori": 15, "sign": [16, 32, 41, 47, 50, 160, 161, 175, 183, 194, 238, 288, 291, 312, 324, 354, 370, 377, 538], "unsign": [16, 32, 41, 50, 175, 183, 194, 210, 258, 281, 288, 289, 291, 300, 303, 317, 318, 321, 324, 348, 354, 370, 404, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 538, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572, 573], "primari": 16, "goal": 16, "compat": [16, 24, 30, 47, 85], "relat": [16, 20, 22, 24, 26, 29, 32, 34, 36, 44, 51, 53, 144, 147, 148, 149, 150, 151, 152, 153, 154, 248, 283, 384, 385, 386, 394, 395, 420, 438], "materi": 16, "deep": [16, 28, 29, 30, 32, 41, 45, 46, 50, 142, 158, 171, 174, 265, 340, 419], "annot": [16, 147, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 384, 385], "x_": [16, 47, 50, 381], "scale_": [16, 29, 32, 149], "x": [16, 22, 28, 29, 39, 50, 57, 75, 86, 91, 92, 100, 103, 106, 136, 147, 149, 154, 162, 170, 196, 228, 231, 232, 233, 234, 235, 239, 256, 257, 258, 260, 270, 280, 281, 291, 324, 326, 354, 362, 368, 369, 370, 371, 372, 378, 395, 402, 404, 408, 427, 438, 442, 567], "zp_": [16, 32], "factor": [16, 22, 26, 29, 40, 42, 43, 44, 45, 48, 50, 51, 54, 76, 78, 79, 149, 150, 153, 160, 186, 209, 210, 233, 247, 275, 281, 288, 312, 316, 370, 381, 385, 404, 419, 436, 442, 530, 538, 541, 547, 549], "int32": 16, "denot": [16, 24, 28, 34, 47, 50, 59, 69, 70, 73, 101, 102, 108, 109, 134, 159, 162, 163, 179, 196, 283, 419], "elementwis": [16, 22, 164, 170, 198, 288, 297, 419, 456, 457, 473, 474, 475, 476, 530], "formula": [16, 20, 29, 32, 34, 42, 44, 46, 48, 50, 51, 53, 55, 58, 60, 61, 65, 68, 69, 76, 77, 78, 81, 82, 87, 88, 89, 93, 95, 96, 99, 101, 104, 107, 108, 119, 124, 126, 128, 137, 144, 145, 150, 151, 152, 153, 162, 169, 267, 288, 317, 326, 381, 421, 516, 518, 538, 567], "arrai": [16, 18, 47, 162, 209, 210, 244, 250, 251, 272, 275, 288, 291, 293, 294, 296, 306, 307, 308, 312, 316, 322, 323, 324, 338, 352, 353, 354, 381, 388, 431, 436, 462, 464, 466, 468, 470, 472, 522, 526, 528, 538], "best": [16, 24, 29, 30, 51, 54, 142, 145, 149, 163, 164, 234, 235, 239, 240, 241, 255, 266, 276, 306, 369, 371, 372, 378, 404, 420, 442], "those": [16, 19, 24, 32, 34, 99, 142, 160, 161, 162, 171, 174, 238, 247, 377, 381, 384, 396, 397, 399, 400, 420], "These": [16, 19, 24, 37, 38, 47, 50, 179, 196, 258, 394, 404, 419, 420], "ahead": 16, "calibr": 16, "tool": [16, 49], "static": [16, 24, 36, 41, 52, 54, 160, 161, 227, 228, 229, 230, 231, 236, 237, 238, 239, 244, 245, 248, 252, 253, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 279, 281, 360, 362, 364, 366, 368, 373, 375, 377, 378, 381, 382, 383, 386, 390, 392, 402, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 432, 434, 436, 440, 478, 479, 522, 524, 563, 567], "minimum": [16, 22, 24, 116, 188, 283, 285, 339, 381, 522], "dynam": [16, 32, 52, 54, 76, 147, 244, 248, 352, 353, 381, 382, 386, 536, 544], "conjunct": 16, "behav": [16, 50, 151, 199], "dimension": [16, 28, 37, 47, 54, 97, 162, 288, 306, 344, 524, 538], "reason": [16, 28, 31, 50, 143, 160, 161, 162, 238, 248, 288, 377, 386, 419, 538], "subset": [16, 171, 174, 291], "guid": [16, 24, 32, 147, 159, 233, 234, 245, 247, 289, 290, 293, 294, 297, 300, 301, 303, 304, 305, 307, 308, 309, 314, 315, 316, 317, 319, 320, 322, 323, 371, 383, 385], "appropri": [16, 22, 26, 29, 31, 48, 50, 54, 144, 145, 148, 154, 160, 162, 244, 381, 394, 404, 442], "convert": [16, 17, 32, 34, 36, 40, 41, 43, 47, 50, 74, 76, 77, 110, 121, 149, 157, 160, 234, 244, 287, 288, 298, 299, 312, 317, 352, 353, 371, 381, 420, 491, 522], "wider": [16, 32, 43, 167, 168, 288], "int16": 16, "overflow": [16, 25, 32, 50, 247, 283], "maintain": [16, 146, 157, 306, 396, 397, 399, 400, 524], "necessari": [16, 19, 24, 29, 30, 33, 41, 45, 46, 48, 141, 147, 149, 151, 162, 207, 208, 248, 265, 306, 312, 369, 386, 396, 397, 399, 400], "written": [16, 18, 50, 306, 336], "satur": [16, 50, 149, 291, 324, 354], "underflow": [16, 47], "architectur": [16, 29, 30, 36, 39, 40, 42, 43, 50, 142, 147, 159, 160, 161, 163, 164, 291, 324, 346, 354, 419], "slightli": [16, 50, 381], "vari": [16, 50, 163, 396, 397, 399, 400], "_op": [16, 148, 160], "dequant": [16, 41, 43, 47, 76, 121, 149, 188, 233, 241, 283, 285, 288, 370, 397, 530], "achiev": [16, 29, 40, 45, 47, 149, 151, 162, 240, 241, 255, 276, 370], "eltwis": [16, 20, 22, 24, 29, 39, 44, 46, 48, 54, 144, 148, 150, 153, 160, 164, 169, 170, 203, 286, 311, 359, 370, 389, 394, 420, 473, 474, 475, 476, 529, 530, 581], "dev_guide_attributes_post_ops_eltwis": 16, "dev_guide_attributes_post_ops_binari": 16, "src_": [16, 32, 34, 50, 74, 76, 77, 107, 110, 112, 113, 114, 115, 116, 117, 118], "weights_": [16, 32], "work": [16, 18, 19, 21, 22, 24, 26, 29, 33, 34, 36, 38, 46, 47, 50, 51, 141, 142, 145, 147, 148, 149, 152, 153, 154, 157, 162, 163, 240, 241, 248, 254, 255, 272, 276, 306, 381, 386, 394, 404, 419, 431, 442, 522], "task": [16, 18, 33, 141, 147], "form": [16, 27, 28, 37, 39, 45, 153, 162, 179, 196, 394], "22": [16, 147], "45": 16, "46": [16, 147], "zero_point": [16, 149, 281, 288, 530, 538], "zero_point_": 16, "mathemat": [16, 29, 45, 46, 104, 107, 108, 149, 151, 164, 420], "_to": 16, "_int8": 16, "_f32": [16, 210], "comp_": 16, "bias_": 16, "_": [16, 20, 26, 28, 44, 50, 51, 60, 67, 76, 77, 93, 112, 113, 114, 115, 116, 117, 118, 150, 163, 283, 288], "regular": [16, 24, 36, 163, 304, 394, 438, 512, 514], "chosen": [16, 19, 46, 149, 169, 170, 175, 178, 204, 234, 235, 239, 272, 306, 369, 370, 371, 372, 378, 394, 419, 431], "compens": [16, 26, 50, 160, 247, 281, 385], "term": [16, 18, 28, 29, 142, 150, 151, 160, 294, 296, 301, 305, 464, 466, 470, 472], "account": [16, 29, 145], "pre": [16, 19, 54, 258, 280, 404, 405, 442, 443], "_s8": 16, "rang": [16, 25, 45, 50, 67, 74, 76, 77, 84, 110, 112, 113, 114, 115, 116, 117, 118, 135, 147, 157, 164, 244, 277, 283, 381, 438], "loss": [16, 29, 45, 283, 386], "re": [16, 22, 26, 27, 50, 147, 160, 161, 230, 233, 234, 238, 245, 247, 366, 371, 377, 381, 383, 385, 404, 442], "end": [16, 24, 34, 45, 55, 56, 76, 77, 78, 85, 88, 95, 108, 111, 119, 145, 147, 150, 151, 152, 155, 160, 161, 186, 187, 188, 227, 228, 229, 230, 232, 236, 237, 238, 240, 241, 245, 247, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 285, 360, 362, 364, 366, 373, 375, 377, 383, 384, 385, 390, 392, 395, 402, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440], "seem": [16, 147, 394], "imposs": [16, 50, 306, 524], "trick": [16, 50, 244, 381], "everi": [16, 18, 23, 33, 34, 54, 55, 65, 78, 81, 82, 87, 89, 95, 96, 119, 124, 126, 128, 137, 141, 146, 147, 158, 162, 291, 324, 354, 394], "ih": [16, 28, 29, 48, 68, 150, 228, 229, 230, 231, 236, 237, 239, 240, 241, 252, 253, 255, 257, 259, 262, 266, 267, 268, 269, 270, 271, 273, 275, 276, 362, 364, 366, 368, 373, 375, 378, 390, 392, 402, 406, 413, 420, 421, 423, 425, 427, 429, 432, 436], "iw": [16, 28, 29, 48, 68, 150, 228, 229, 230, 231, 236, 237, 239, 240, 241, 252, 253, 255, 257, 259, 262, 266, 267, 268, 269, 270, 271, 273, 275, 276, 362, 364, 366, 368, 373, 375, 378, 390, 392, 402, 406, 413, 420, 421, 423, 425, 427, 429, 432, 436], "oh": [16, 28, 29, 58, 68, 101, 144, 150, 237, 252, 266, 267, 271, 375, 390, 420, 421, 429, 530], "ow": [16, 28, 29, 58, 68, 101, 144, 150, 237, 252, 266, 267, 271, 375, 390, 420, 421, 429, 530], "frac": [16, 20, 29, 34, 42, 44, 47, 50, 51, 53, 58, 60, 61, 68, 86, 89, 93, 97, 105, 115, 124, 126, 144, 148, 150, 152, 153, 381], "respons": [16, 24, 25, 33, 36, 37, 50, 141, 160, 169, 170, 262, 283, 304, 306, 307, 312, 352, 359, 394, 414, 419, 511, 513, 536, 581], "prepar": [16, 46, 50, 160, 161, 233, 238, 244, 248, 266, 370, 377, 381, 386, 420, 438], "wa": [16, 18, 34, 46, 51, 52, 143, 144, 146, 162, 163, 164, 192, 217, 218, 220, 221, 258, 267, 313, 318, 324, 354, 404, 421], "long": [16, 24, 40, 42, 43, 147, 151, 175, 178, 204, 217, 218], "fit": [16, 159, 164, 272, 431], "everyth": [16, 394, 438], "fine": [16, 18, 420], "mind": 16, "tri": [16, 46], "minim": [16, 18, 23, 25, 32, 45, 159, 162, 283], "yet": [16, 244, 248, 306, 381, 384, 385, 386], "power": [16, 107, 111, 148, 346], "enough": [16, 18, 40, 42, 50, 160, 161, 238, 336, 377], "wai": [16, 17, 18, 19, 26, 28, 29, 33, 36, 45, 47, 50, 123, 141, 142, 154, 157, 162, 204, 252, 288, 315, 338, 390, 419, 420, 438, 460, 522, 538, 540, 545, 562], "essenti": [16, 45, 46, 152, 240, 241, 249, 255, 276, 278, 381], "abil": [16, 30, 31, 33, 141, 394], "That": [16, 29, 134, 143, 146, 162, 394], "equat": [16, 34, 151], "_scale": 16, "standard": [16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 32, 34, 44, 48, 51, 52, 53, 54, 55, 58, 65, 67, 68, 78, 81, 82, 87, 89, 95, 96, 99, 101, 119, 124, 126, 128, 137, 144, 145, 149, 150, 151, 152, 153, 154, 175, 183, 194, 291, 324, 354], "downconvert": 16, "hw": [16, 32, 44, 147, 160, 161, 162, 238, 377], "mxcsr": [16, 47], "regist": [16, 31, 47, 172, 173, 412], "dnnl_primitive_attr_set_scales_mask": [16, 281, 288, 538], "simplest": [16, 288, 381, 438, 530], "sever": [16, 19, 24, 26, 29, 34, 52, 153, 158, 162, 399, 400], "sai": [16, 283], "d_0": [16, 47], "d_": [16, 47], "d_i": [16, 47], "le": 16, "Then": [16, 48, 123, 134, 162, 395, 420, 438], "sum": [16, 18, 20, 22, 24, 26, 29, 44, 48, 50, 51, 53, 54, 58, 60, 93, 112, 113, 115, 118, 144, 148, 149, 150, 151, 153, 163, 164, 169, 170, 203, 204, 269, 270, 286, 288, 311, 314, 348, 359, 419, 425, 427, 437, 530, 536, 581], "limits_": [16, 20, 44, 50, 51, 53, 58, 60, 93, 101, 112, 113, 115, 117, 118, 144, 148, 153, 154, 288, 538], "prod": [16, 117, 231, 239, 288, 368, 378, 538], "wei_plain_f32_md": 16, "hwigo": [16, 196], "wei_scal": [16, 241, 397], "conv_pd": [16, 143, 231, 234, 235, 237, 239, 265, 266, 368, 371, 372, 375, 378, 419, 420, 530], "next": [16, 32, 42, 162, 164, 234, 235, 266, 272, 312, 368, 369, 370, 371, 372, 384, 385, 394, 395, 396, 399, 400, 419, 420, 431, 438, 540], "wei_conv_s8_md": 16, "weights_desc": [16, 227, 232, 233, 234, 235, 237, 245, 252, 258, 259, 261, 263, 265, 266, 268, 279, 280, 281, 294, 296, 301, 305, 309, 360, 369, 370, 371, 372, 375, 383, 390, 404, 406, 410, 415, 419, 420, 423, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "quantization_mask": 16, "wei_s8": [16, 163], "wei_f32": [16, 163, 419, 420], "wei_reorder_pd": 16, "wei_reord": 16, "complementari": 16, "ideal": [16, 50], "first": [16, 27, 28, 29, 30, 31, 34, 39, 42, 47, 48, 50, 54, 68, 123, 143, 151, 160, 161, 162, 163, 179, 196, 238, 240, 246, 247, 255, 276, 283, 306, 318, 338, 377, 381, 384, 385, 389, 394, 395, 396, 397, 399, 400, 401, 420, 438, 482, 524], "src_scale": [16, 233, 370], "src_f32": [16, 163, 419, 420], "src_s8": 16, "dst_scale": [16, 233, 370], "dst_f32": [16, 163, 419, 420], "dst_s8": 16, "declar": [16, 246, 247, 384, 385], "chose": [16, 234, 235, 239, 306, 371, 372, 378], "src_conv_s8_any_md": 16, "batch": [16, 28, 29, 36, 40, 42, 43, 44, 45, 46, 54, 60, 61, 68, 86, 99, 147, 153, 162, 179, 196, 203, 204, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246, 247, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 281, 286, 305, 306, 311, 326, 359, 360, 363, 364, 366, 368, 369, 370, 371, 372, 373, 375, 378, 384, 385, 390, 392, 394, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 452, 453, 454, 455, 482, 567, 581, 582], "wei_conv_s8_any_md": 16, "dst_conv_s8_any_md": 16, "ditto": 16, "data_mask": 16, "wei_mask": 16, "set_zero_points_mask": [16, 54, 244, 258, 381, 382, 404, 405, 538], "prop_kind": [16, 29, 45, 46, 48, 163, 164, 198, 199, 209, 227, 228, 232, 233, 234, 235, 237, 246, 247, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 271, 272, 273, 274, 277, 279, 281, 288, 289, 294, 296, 297, 300, 301, 303, 304, 308, 309, 316, 317, 319, 320, 348, 360, 362, 369, 370, 371, 372, 375, 384, 385, 389, 390, 392, 394, 395, 402, 406, 408, 410, 413, 415, 419, 420, 421, 423, 429, 431, 432, 434, 438, 440, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "forward_infer": [16, 29, 45, 46, 48, 163, 207, 232, 246, 247, 254, 265, 266, 272, 369, 384, 385, 394, 419, 420, 431, 451, 455, 466, 472, 476, 486, 490, 498, 502, 506, 510, 514, 518, 528, 534, 549, 554, 558, 572], "convolution_direct": [16, 163, 170, 232, 233, 234, 235, 237, 266, 369, 370, 371, 372, 375, 419, 420, 462, 464, 466, 468], "padding_l": [16, 29, 209, 281, 294, 296, 308, 462, 464, 466, 468, 470, 472, 526, 528], "padding_r": [16, 29, 209, 281, 294, 296, 308, 462, 464, 466, 468, 470, 472, 526, 528], "padding_kind": 16, "flow": [16, 250, 251, 388, 389], "respect": [17, 28, 29, 32, 34, 37, 41, 46, 48, 54, 68, 92, 95, 143, 150, 162, 163, 164, 179, 196, 198, 207, 208, 234, 235, 239, 272, 288, 289, 294, 296, 297, 300, 301, 303, 304, 308, 309, 312, 316, 317, 318, 319, 320, 371, 372, 378, 386, 420, 431, 482, 538, 570], "rounding_mod": [17, 32, 288, 348, 538], "sycl": [17, 24, 32, 35, 36, 164, 276, 277, 278, 281, 286, 302, 306, 330, 331, 337, 351, 352, 353, 359, 401, 580], "opencl": [17, 19, 23, 32, 35, 36, 143, 164, 255, 256, 286, 302, 306, 330, 337, 350, 352, 359, 394, 412, 445, 522], "languag": [17, 25, 39, 42, 160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "stochast": [17, 32, 215, 216, 312], "truncat": 17, "dnnl_arg_attr_rounding_se": [17, 281, 312], "interest": [17, 162, 346, 394, 419], "vanish": 17, "gradient": [17, 28, 46, 56, 62, 64, 66, 71, 79, 83, 88, 90, 92, 95, 98, 105, 109, 120, 125, 127, 129, 131, 138, 151, 157, 209, 210, 213, 214, 294, 296, 301, 312, 419, 463, 464, 469, 470, 495, 496], "diffsrc": [17, 20, 28, 29, 34, 44, 48, 51, 53, 59, 69, 72, 94, 102, 144, 145, 150, 152, 153], "diffweight": [17, 28, 29, 48, 70, 73, 145], "independ": [18, 24, 50, 51, 54, 99, 151, 153, 159, 162, 312], "core": [18, 29, 32, 42, 171, 174, 412, 420], "system": [18, 19, 23, 24, 29, 32, 36, 49, 50, 52, 142, 143, 147, 151, 152, 162, 163, 164, 298], "parallel": [18, 40, 42, 159, 217, 218, 324, 563], "reduct": [18, 24, 25, 112, 113, 114, 115, 116, 117, 118, 169, 170, 203, 204, 209, 210, 283, 286, 311, 348, 359, 426, 536, 541, 581], "privat": [18, 155, 217, 218, 369], "matrix": [18, 28, 29, 30, 32, 40, 42, 43, 50, 99, 151, 152, 162, 203, 204, 242, 243, 244, 245, 246, 247, 248, 258, 264, 280, 286, 291, 311, 324, 354, 379, 380, 381, 382, 383, 386, 404, 417, 419, 442, 519, 520, 581, 582], "im2col": 18, "longer": [18, 40, 210], "complet": [18, 21, 25, 36, 140, 144, 147, 163, 254, 265, 266, 306, 313, 318, 339, 389, 394, 395, 419, 438, 522], "confus": [18, 46], "workspac": [18, 20, 28, 29, 53, 144, 151, 164, 198, 199, 209, 210, 227, 228, 231, 234, 235, 239, 261, 262, 263, 267, 272, 279, 289, 312, 360, 362, 368, 369, 371, 372, 378, 410, 413, 415, 421, 431, 440, 449, 451, 453, 455, 484, 486, 488, 490, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 526, 528, 541, 570, 572], "space": [18, 19, 24, 160, 161, 162, 163, 164, 231, 238, 239, 295, 312, 336, 368, 377, 378, 522], "direct": [18, 28, 32, 39, 40, 42, 43, 46, 57, 75, 85, 100, 103, 106, 133, 136, 151, 158, 169, 170, 209, 210, 211, 212, 227, 261, 263, 272, 279, 281, 306, 317, 360, 410, 415, 431, 440, 449, 451, 488, 490, 491, 504, 506, 508, 510, 516, 518, 522, 536, 540, 541, 550, 570, 572], "too": [18, 248, 318, 386], "few": [18, 29, 40, 43, 45, 48, 151, 312, 371, 372, 378], "proport": 18, "imag": [18, 28, 45, 58, 144, 162, 254, 283, 394], "diff_weight": [18, 28, 46, 70, 73, 213, 214, 234, 235, 272, 309, 371, 372, 431], "group": [18, 28, 37, 43, 47, 69, 70, 71, 72, 73, 76, 86, 147, 152, 162, 164, 179, 186, 187, 196, 203, 204, 209, 210, 237, 240, 241, 255, 257, 273, 276, 280, 281, 283, 286, 288, 306, 311, 319, 359, 375, 376, 396, 397, 399, 400, 403, 432, 442, 483, 484, 485, 486, 538, 541, 552, 554, 581], "upper": [18, 28, 42, 65, 66, 146, 162, 179, 318], "total": [18, 69, 142, 147, 272, 431], "By": [18, 19, 24, 32, 36, 37, 45, 334], "contrast": 18, "littl": [18, 244, 381], "sizeof": [18, 36, 162, 175, 178, 204, 231, 239, 250, 256, 266, 368, 378, 388, 395], "summand": 18, "scratchpad_mod": [18, 24, 288, 348, 538], "worri": 18, "onednn_enable_concurrent_exec": [18, 24], "cmake": [18, 23, 24, 30, 31, 36, 38, 143, 146, 147, 158, 163], "off": [18, 24, 30, 31, 38, 146, 147, 160, 161, 163, 217, 218, 238, 242, 243, 254, 318, 377, 379, 380, 394], "across": [18, 24, 29, 46, 47, 51, 53, 54, 151, 169, 170, 272, 304, 431], "level": [18, 36, 37, 38, 143, 147, 159, 163, 281, 306, 318, 348], "freed": 18, "referenc": 18, "segment": 18, "fault": 18, "you": [18, 19, 20, 23, 24, 29, 33, 37, 39, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 71, 126, 147, 151, 153, 158, 160, 161, 162, 210, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 395, 399, 400, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "ON": [18, 23, 24, 30, 31, 36, 38, 146, 147, 163, 217, 218], "larger": [18, 29, 217, 218, 272, 431], "concurr": [18, 33, 36, 141, 217, 218, 310, 324, 333], "suffici": 18, "dnnl_arg_scratchpad": [18, 281, 312], "reus": [18, 19, 29, 45, 46, 54, 151, 160, 161, 162, 238, 272, 377, 431], "make": [18, 19, 23, 31, 38, 46, 50, 52, 54, 76, 99, 140, 142, 160, 161, 162, 179, 196, 210, 238, 297, 306, 336, 377, 524, 529], "safe": [18, 19, 34, 142, 143, 162, 217, 218, 254, 310, 333, 334, 394, 522], "good": [18, 45, 54, 162, 381, 394], "side": [18, 29, 99, 160, 161, 238, 306, 377, 522], "dnnl_primitive_attr_set_scratchpad_mod": [18, 281, 288], "set_scratchpad_mod": [18, 538], "highlight": [18, 46], "consum": [18, 36, 37, 159, 272, 283, 306, 431], "due": [18, 28, 46, 50, 163, 164, 192, 220, 221, 248, 381, 386, 524], "print": [18, 36, 163, 164], "much": [18, 19, 50, 159, 160, 161, 163, 238, 248, 377, 386, 395, 438], "cout": [18, 232, 240, 241, 246, 247, 249, 254, 255, 256, 266, 276, 277, 278, 394, 395, 438], "query_s64": [18, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "memory_consumption_s64": [18, 209], "endl": [18, 232, 240, 241, 246, 247, 249, 254, 255, 256, 276, 277, 278, 394, 395, 438], "visibl": 18, "zero_md": 18, "scratchpad_desc": [18, 265, 419, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_scratchpad_mod": [18, 538], "custom": [18, 19, 23, 24, 33, 36, 37, 159, 160, 162], "scratchpad_md": [18, 209], "prim": [18, 163, 231, 239, 266, 368, 378, 420], "get_siz": [18, 36, 46, 162, 245, 246, 247, 266, 306, 352, 383, 384, 385, 522, 524], "scratchpad_ptr": [18, 281, 326], "user_memory_manag": 18, "outlin": [19, 46, 142], "program": [19, 21, 23, 29, 33, 37, 48, 50, 141, 151, 250, 251, 254, 256, 282, 346, 386, 388, 389, 394, 395, 420, 438], "present": [19, 99, 143, 151, 160, 419], "kei": [19, 20, 22, 26, 29, 37, 40, 42, 44, 46, 48, 51, 52, 54, 143, 149, 151, 152, 153, 154, 252, 283, 360, 361, 362, 363, 364, 365, 366, 368, 369, 373, 374, 375, 376, 390, 391, 394, 396, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 427, 428, 432, 433, 434, 435, 436, 437, 440, 441], "discuss": [19, 45, 46, 142, 306, 394], "essenc": 19, "process": [19, 27, 41, 45, 46, 50, 142, 146, 147, 151, 160, 161, 162, 164, 238, 272, 283, 326, 377, 381, 419, 431, 567], "relationship": [19, 37, 240, 241, 276, 281, 396, 399, 400], "entiti": [19, 37, 312], "briefli": 19, "figur": [19, 151], "relev": [19, 46, 272, 420, 431], "built": [19, 21, 23, 24, 36, 52, 155, 158, 163, 324, 354, 419, 420], "notion": [19, 22, 26, 46, 148, 154, 419], "encapsul": [19, 307, 321, 339, 340, 344, 352, 389, 394, 395, 438, 522], "lstm": [19, 50, 169, 170, 179, 196, 247, 272, 312, 317, 359, 385, 416, 431, 515, 516, 517, 518], "addition": [19, 37, 43, 50, 54, 99, 142, 157, 160, 161, 234, 238, 371, 377, 419, 420], "complex": [19, 29], "pure": 19, "state": [19, 28, 36, 46, 50, 151, 160, 161, 179, 196, 238, 247, 261, 272, 279, 306, 312, 313, 317, 336, 377, 384, 385, 410, 412, 431, 440, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 567, 570, 572], "One": [19, 33, 40, 42, 121, 157, 162, 164], "immut": [19, 37], "approach": [19, 46, 142, 162, 306, 370, 381, 419], "tailor": [19, 36], "amort": 19, "mutabl": [19, 37, 338], "card": [19, 298], "transfer": [19, 244, 298, 381], "ti": [19, 321, 389, 394, 395, 438], "command": [19, 23, 24, 52, 142, 147, 307, 323, 395, 420], "queue": [19, 33, 36, 141, 276, 277, 278, 281, 307, 323, 352, 353, 395, 399, 400, 401, 438], "map": [19, 20, 22, 26, 29, 33, 34, 40, 44, 45, 48, 51, 53, 54, 74, 76, 77, 110, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 158, 162, 164, 240, 241, 249, 254, 255, 276, 278, 306, 318, 350, 351, 352, 353, 381, 389, 394, 395, 460, 522, 536, 540, 544, 545, 562], "offset": [19, 39, 74, 76, 77, 110, 162, 163, 164, 209, 210, 244, 254, 272, 281, 291, 306, 324, 326, 354, 381, 394, 431, 522, 524, 567], "conceptu": [19, 50], "expos": [19, 20, 32, 44, 51, 142, 159], "flexibl": [19, 157, 159, 162, 386], "dnnl_memory_desc_t": [19, 158, 162, 179, 231, 239, 250, 281, 306, 312, 368, 378, 388, 524], "variou": [19, 143, 159, 306, 312], "via": [19, 20, 22, 24, 30, 31, 32, 34, 36, 39, 40, 41, 42, 43, 77, 134, 142, 143, 144, 146, 162, 163, 230, 266, 272, 306, 312, 318, 336, 341, 352, 353, 362, 363, 366, 367, 370, 389, 394, 395, 419, 431, 438, 522, 530, 536, 538, 544], "instanti": 19, "iter": [19, 146, 151, 160, 161, 185, 193, 232, 234, 235, 238, 239, 246, 247, 272, 371, 372, 377, 378, 384, 385, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 540, 550, 570, 572], "prefer": [19, 25, 31, 172, 173, 234, 235, 239, 272, 371, 372, 378, 431], "concret": [19, 240, 241, 249, 255, 276, 278, 396, 399, 400], "embodi": 19, "There": [19, 20, 22, 25, 26, 29, 34, 36, 42, 44, 45, 47, 48, 53, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 158, 160, 161, 238, 272, 288, 290, 306, 377, 389, 395, 420, 431, 438, 538, 541], "extract": [19, 29, 395, 438], "submemory_desc": [19, 246, 247, 272, 384, 385, 431, 524], "src_desc": [19, 45, 232, 233, 234, 235, 237, 245, 252, 265, 266, 281, 289, 293, 294, 296, 297, 300, 301, 303, 304, 305, 308, 309, 314, 315, 316, 319, 320, 322, 369, 370, 371, 372, 375, 383, 390, 419, 420, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "action": [19, 46], "placehold": [19, 29, 48, 54, 151, 196, 265, 419], "obtain": [19, 46, 47, 50, 143, 160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 306, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 396, 397, 399, 400, 402, 404, 406, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 545], "high": [19, 25, 47, 163, 294, 296, 308, 462, 464, 466, 468, 470, 472, 526, 528], "instead": [19, 22, 23, 24, 28, 29, 34, 48, 50, 52, 54, 144, 148, 149, 150, 162, 272, 283, 288, 291, 317, 324, 326, 354, 369, 394, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 530, 567, 570, 572], "individu": [19, 32, 34, 36, 142, 291, 295, 324, 354, 369], "transpar": 19, "effort": 19, "backend": [19, 24, 121, 163, 164, 396, 397, 399, 400], "awar": [19, 31, 394], "scalabl": [19, 50, 171, 174], "ukernel": [19, 52, 159, 160, 161, 238, 281, 286, 346, 348, 458, 565], "sequenti": [19, 24, 36, 159, 368, 369], "compos": [19, 36, 159, 283], "full": [19, 25, 52, 147, 158, 159, 163, 199, 395, 438], "show": [20, 29, 44, 47, 48, 51, 144, 145, 150, 157, 162, 163, 386, 394], "straightforward": [20, 29, 44, 51, 144, 145, 150, 394], "gamma": [20, 29, 44, 51, 60, 61, 62, 86, 93, 94, 289, 300, 303], "mu": [20, 44, 51, 60, 61, 93, 94], "sqrt": [20, 34, 42, 44, 51, 61, 86, 93, 113, 131, 188, 244, 248, 283, 285, 381, 386], "sigma": [20, 44, 51, 60, 61, 62, 93, 94, 151], "varepsilon": [20, 44, 51, 61], "dnnl_use_scal": [20, 44, 51, 198, 199], "dnnl_use_shift": [20, 44, 51, 198, 199], "dnnl_use_global_stat": [20, 44, 51, 198, 199], "constant": [20, 42, 44, 45, 51, 61, 86, 93, 94, 95, 134, 143, 185, 193, 199, 210, 241, 282, 286, 288, 306, 312, 318, 321, 325, 326, 330, 331, 332, 336, 340, 341, 344, 397, 524, 538, 567], "stabil": [20, 34, 44, 51, 61, 86, 93, 94], "nhw": [20, 60], "learnabl": [20, 28, 44, 46, 51, 93, 94], "dnnl_fuse_norm_relu": [20, 198, 199], "dnnl_fuse_norm_add_relu": [20, 198, 199], "popul": [20, 44, 151], "sampl": [20, 44, 47, 144, 147, 155, 395, 438], "unbias": [20, 44], "hat": [20, 44], "becom": [20, 40, 42, 44, 51, 158, 163, 179, 196, 420], "dnnl_forward_train": [20, 29, 34, 44, 51, 144, 145, 150, 152, 153, 207, 208, 289, 294, 296, 297, 300, 301, 303, 304, 308, 309, 316, 317, 319, 320], "dnnl_forward_infer": [20, 29, 34, 44, 51, 144, 145, 150, 152, 153, 207, 208, 289, 294, 296, 297, 300, 301, 303, 304, 308, 309, 316, 317, 319, 320], "diffgamma": [20, 44, 51, 94], "diffbeta": [20, 44, 51, 94], "diffdst": [20, 28, 29, 34, 44, 48, 51, 53, 59, 64, 69, 70, 72, 73, 94, 102, 144, 145, 150, 152, 153], "mark": [20, 44, 50, 51, 94, 162, 283], "asterisk": [20, 44, 51, 94], "clariti": [20, 44, 51], "summari": [20, 44, 51, 147, 419], "shown": [20, 25, 44, 46, 50, 51, 87, 88, 142, 147, 151, 162, 394, 420], "dnnl_backward": [20, 44, 51, 199, 207, 208, 289, 300, 303, 317], "dnnl_backward_data": [20, 44, 51, 199, 207, 208, 289, 300, 303], "dnnl_normalization_flags_non": [20, 44, 51, 198, 199], "Not": [20, 25, 44, 51, 147], "src_1": [20, 22, 57, 75, 85, 100, 103, 106, 123, 133, 136, 229, 364], "diffsrc_1": 20, "tabl": [20, 22, 25, 26, 28, 29, 32, 33, 34, 44, 48, 51, 53, 54, 74, 110, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 210], "dnnl_arg_scal": [20, 44, 51, 228, 257, 260, 281, 312, 362, 402, 408], "dnnl_arg_shift": [20, 44, 51, 228, 257, 260, 281, 312, 362, 402, 408], "dnnl_arg_mean": [20, 44, 51, 228, 257, 260, 281, 312, 362, 402, 408], "dnnl_arg_vari": [20, 44, 51, 228, 257, 260, 281, 312, 362, 402, 408], "dnnl_arg_workspac": [20, 46, 53, 144, 227, 228, 231, 234, 235, 239, 261, 262, 263, 267, 272, 279, 281, 312, 360, 362, 368, 371, 372, 378, 410, 413, 415, 421, 431, 440], "dnnl_arg_diff_dst": [20, 29, 34, 44, 48, 51, 53, 144, 145, 150, 152, 153, 234, 235, 239, 281, 312, 371, 372, 378], "dnnl_arg_diff_src": [20, 29, 34, 44, 48, 51, 53, 144, 145, 150, 152, 153, 234, 235, 239, 281, 312, 371, 372, 378], "dnnl_arg_diff_src_1": [20, 281, 312], "dnnl_arg_diff_scal": [20, 44, 51, 281, 312], "dnnl_arg_diff_shift": [20, 44, 51, 281, 312], "flavor": [20, 44, 51, 326, 394, 567], "batch_normalization_forward": [20, 228, 289, 348, 362, 453, 536], "OR": [20, 44, 51, 160, 161, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "latter": [20, 24, 28, 33, 44, 46, 50, 51, 52, 141, 157, 306, 368, 369, 540], "overwritten": [20, 22, 34, 44, 51, 153], "dst_desc": [20, 45, 232, 233, 234, 235, 236, 237, 245, 252, 265, 266, 275, 281, 289, 290, 293, 294, 296, 297, 300, 301, 303, 304, 305, 308, 309, 314, 315, 316, 319, 320, 322, 369, 371, 372, 373, 375, 383, 390, 419, 420, 436, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "diff_dst_desc": [20, 234, 235, 281, 289, 294, 296, 297, 300, 301, 303, 304, 308, 309, 316, 319, 320, 371, 372, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "even": [20, 32, 46, 50, 139, 142, 151, 162, 297, 394], "combin": [20, 22, 29, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 147, 149, 150, 151, 152, 153, 160, 163, 164, 222, 306, 389, 394, 524, 529], "scaleshift": [20, 44], "restrict": [20, 22, 29, 30, 31, 34, 44, 48, 51, 53, 54, 63, 144, 148, 150, 151, 152, 153, 160, 164, 295, 318], "1d": [20, 29, 33, 44, 48, 51, 53, 63, 77, 86, 91, 92, 93, 94, 99, 108, 109, 112, 113, 114, 115, 116, 117, 118, 144, 150, 162, 164, 179, 196, 294, 296, 316, 394], "dnnl_x": [20, 44, 179, 231, 239, 368, 378], "dnnl_a": [20, 44, 179, 196], "sp_n": [20, 44], "sp_0": [20, 44], "0d": [20, 53, 394], "nc": [20, 48, 51, 196, 232, 242, 243, 259, 274, 379, 380, 406, 434], "dnnl_nc": [20, 44, 48, 51, 179], "dnnl_ab": [20, 44, 51, 179, 196, 306], "ncw": [20, 44, 144, 196], "dnnl_ncw": [20, 29, 44, 48, 144, 179], "dnnl_abc": [20, 44, 51, 144, 179, 196], "dnnl_nwc": [20, 29, 44, 48, 144, 179], "dnnl_acb": [20, 44, 144, 179, 196], "dnnl_nchw": [20, 26, 29, 44, 48, 53, 144, 152, 162, 179, 231, 239, 250, 306, 368, 378, 388], "dnnl_abcd": [20, 44, 51, 53, 144, 152, 179, 196], "dnnl_nhwc": [20, 26, 29, 44, 48, 53, 144, 152, 162, 179, 306], "dnnl_acdb": [20, 44, 53, 144, 152, 179, 196], "3d": [20, 29, 44, 48, 51, 53, 54, 93, 94, 144, 145, 150, 152, 160, 161, 162, 164, 179, 196, 238, 294, 296, 305, 308, 316, 377, 394, 462, 464, 466, 468, 470, 472, 526, 528], "ncdhw": [20, 44, 144, 152, 179, 196, 257, 402], "dnnl_ncdhw": [20, 29, 44, 48, 144, 152, 179], "dnnl_ndhwc": [20, 29, 44, 48, 144, 152, 179], "dnnl_acdeb": [20, 44, 144, 152, 179, 196], "come": [20, 34, 46, 47, 52, 53, 142, 144, 152, 179, 196, 217, 218, 258, 272, 280, 394, 404, 431, 442], "intens": [20, 32, 45, 53, 142, 144, 152, 306, 394, 419, 420], "chain": [20, 29, 46, 47, 48, 50, 160, 161, 238, 283, 288, 326, 377, 420, 529], "descript": [20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 34, 36, 38, 39, 40, 42, 43, 44, 45, 48, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 138, 144, 146, 147, 148, 150, 151, 153, 160, 162, 163, 164, 196, 283, 295, 306, 344, 384, 385, 394, 419, 420], "dnnl_eltwise_relu": [20, 34, 169, 170, 231, 239, 250, 317, 368, 378, 388], "correctli": [20, 29, 32, 147, 318, 394, 419], "highli": [20, 26, 34, 44, 51, 53, 154, 386], "whenev": [20, 22, 26, 34, 44, 46, 51, 148, 153, 154, 162, 288, 394], "caveat": [20, 34, 44, 51, 154], "statist": [20, 51, 163, 179, 196, 198, 199, 381, 500, 502], "calcul": [20, 36, 39, 40, 42, 45, 47, 58, 59, 60, 62, 66, 68, 69, 70, 71, 72, 73, 79, 86, 91, 92, 97, 98, 101, 102, 112, 113, 114, 115, 116, 117, 118, 120, 125, 126, 127, 131, 134, 138, 144, 145, 163, 169, 170, 247, 267, 338, 370, 421], "pleas": [20, 24, 45, 54, 121, 147, 163, 233, 234, 247, 306, 312, 334, 338, 371, 385, 419], "review": [20, 419], "demonstr": [20, 22, 26, 29, 34, 36, 39, 40, 42, 44, 45, 48, 51, 53, 54, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 160, 161, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 265, 266, 268, 272, 276, 278, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443], "benchdnn": [21, 24, 36, 142, 147, 163], "readm": 21, "overlin": [22, 26, 29, 34, 57, 67, 75, 100, 103, 106, 136, 149, 152, 153, 154], "src_0": [22, 57, 75, 85, 100, 103, 106, 123, 133, 136, 154, 229, 364], "mathbin": [22, 57, 75], "subtract": [22, 29, 50, 133, 188, 267, 283, 285, 288, 421, 530], "divis": [22, 28, 60, 61, 62, 68, 69, 70, 71, 72, 73, 75, 86, 149, 230, 280, 366, 442], "div": [22, 50, 169, 170], "greater": [22, 46, 50, 65, 66, 85, 150, 169, 170], "geq": [22, 29, 34, 150, 370], "neq": [22, 111], "max": [22, 32, 34, 36, 45, 46, 47, 50, 54, 65, 66, 87, 89, 100, 101, 114, 144, 148, 149, 153, 160, 161, 169, 170, 186, 187, 238, 244, 248, 291, 308, 314, 324, 354, 377, 381, 386, 395, 438], "min": [22, 34, 50, 65, 66, 87, 89, 103, 116, 145, 147, 148, 155, 169, 170, 186, 187, 244, 314, 381], "condit": [22, 29, 34, 45, 123, 151, 160, 161, 192, 220, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 326, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "select": [22, 23, 24, 36, 42, 47, 164, 169, 170, 178, 179, 188, 195, 196, 283, 285, 325, 420, 566], "third": [22, 36, 123, 394], "src_2": 22, "dnnl_arg_src_0": [22, 229, 230, 281, 312, 364, 366], "dnnl_arg_src_2": [22, 281, 312], "text": [22, 29, 34, 44, 48, 51, 54, 55, 56, 78, 85, 87, 88, 95, 108, 111, 119, 144, 148, 150, 153, 162, 438], "scale0": 22, "dnnl_arg_attr_scal": [22, 29, 48, 51, 54, 149, 153, 233, 244, 248, 258, 270, 280, 281, 288, 312, 370, 381, 386, 404, 427, 442, 538], "scale1": 22, "semant": [22, 28, 36, 41, 50, 54, 99, 108, 109, 141, 145, 288, 318, 394, 491, 530, 573], "recommend": [22, 26, 45, 46, 50, 54, 142, 145, 148, 154, 163, 283, 419, 420], "match": [22, 26, 37, 45, 46, 57, 67, 75, 76, 85, 91, 99, 100, 103, 106, 123, 136, 143, 145, 149, 154, 163, 164, 186, 268, 306, 352, 353, 420, 423, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 536, 543, 544, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "syntax": [22, 45], "d": [22, 28, 29, 34, 40, 42, 43, 48, 49, 53, 54, 63, 99, 112, 113, 114, 115, 116, 117, 118, 144, 145, 160, 161, 162, 164, 179, 196, 227, 238, 244, 250, 261, 263, 272, 279, 288, 306, 325, 326, 360, 377, 381, 388, 394, 410, 415, 431, 440, 538, 566, 567], "nxcxdxhxw": 22, "pytorch": [22, 29, 109, 267, 421], "explicitli": [22, 24, 25, 29, 41, 42, 142, 148, 151, 283, 336, 338, 394], "deriv": [22, 26, 144, 148, 154, 198, 199, 288, 303, 460, 530, 562], "ones": [22, 50, 150, 158, 162, 227, 237, 240, 241, 249, 252, 255, 261, 263, 276, 278, 279, 306, 360, 375, 386, 390, 410, 415, 440, 524], "unavoid": 22, "correct": [22, 24, 162, 190, 191, 258, 389, 394, 396, 397, 398, 399, 400, 401, 404], "issu": [22, 33, 46, 50, 141, 147, 190, 191, 248, 386], "arbitrari": [22, 26, 34, 36, 51, 65, 66, 78, 79, 86, 87, 88, 93, 94, 95, 97, 98, 107, 126, 127, 128, 129, 140, 145, 148, 149, 150, 152, 153, 154, 162, 247, 248, 293, 370, 385, 386, 404], "6": [22, 26, 29, 34, 36, 47, 51, 54, 89, 105, 147, 148, 149, 152, 153, 154, 160, 161, 162, 175, 221, 227, 230, 232, 238, 240, 241, 242, 243, 255, 257, 263, 276, 360, 366, 377, 379, 380, 396, 397, 399, 400, 402, 415], "fewer": [22, 26, 34, 41, 51, 148, 149, 152, 153, 154], "bnorm": [22, 35, 230, 359, 367], "postop": [22, 164, 367, 370], "clone": [23, 288, 306, 312, 460, 540, 545, 562], "repositori": [23, 24], "git": [23, 143, 163, 318, 419, 573], "http": [23, 39, 40, 42, 43, 52, 160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "github": [23, 24, 39, 42, 244, 381], "com": [23, 52], "uxlfound": [23, 24, 39, 42, 244, 381], "ensur": [23, 24, 25, 30, 46, 85, 141, 240, 241, 255, 276, 306, 395, 419, 438, 524], "cmake_install_prefix": 23, "locat": [23, 24, 46, 52, 162, 306, 315, 318, 344, 541, 545], "cmake_build_typ": 23, "releas": [23, 24, 141, 160, 161, 238, 318, 326, 334, 339, 377, 567], "relwithdebinfo": 23, "cmake_prefix_path": 23, "directori": [23, 36, 52, 147, 318], "search": 23, "makefil": 23, "mkdir": 23, "cd": 23, "uncom": 23, "line": [23, 142, 147, 162, 163, 420], "export": [23, 27, 142, 420], "cc": 23, "cxx": 23, "icx": [23, 52], "icpx": [23, 52], "j": [23, 53, 76, 97, 126, 147, 155, 232, 246, 247, 306, 369, 524], "nproc": 23, "setvar": 23, "sh": [23, 28, 29, 58, 68, 69, 101, 144, 237, 252, 267, 375, 390, 421], "script": [23, 158], "folder": [23, 24], "your": [23, 45, 46, 52, 147, 420], "opt": [23, 24, 153], "ddnnl_cpu_runtim": 23, "ddnnl_gpu_runtim": 23, "open": [23, 24, 39, 346], "driver": [23, 24], "openclroot": 23, "path": [23, 24, 36, 52, 157, 318], "gnu": [23, 24], "dcmake_system_nam": 23, "dcmake_system_processor": 23, "dcmake_library_path": 23, "usr": 23, "lib": [23, 52], "acl_root_dir": [23, 24], "ddnnl_aarch64_use_acl": 23, "studio": [23, 52, 142, 158], "solut": [23, 52, 158, 162], "16": [23, 25, 28, 32, 43, 46, 147, 157, 160, 161, 163, 175, 179, 183, 194, 238, 250, 251, 306, 377, 388, 389], "2019": [23, 50, 234, 244, 248, 250, 251, 254, 256, 258, 265, 266, 277, 371, 381, 386, 388, 404], "config": [23, 158], "multi": [23, 37, 40, 42, 57, 75, 85, 100, 103, 106, 133, 136, 142, 283, 344], "rerun": 23, "scratch": [23, 210], "file": [23, 24, 36, 38, 49, 147, 158, 160, 161, 162, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 318, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442], "sln": [23, 158], "project": [23, 24, 25, 158, 179, 196, 288, 312, 317, 516, 518, 538, 550], "bat": 23, "x86": [23, 49, 160], "commmand": 23, "prompt": 23, "ninja": 23, "v3": [23, 50, 163, 288], "23": [23, 157], "unit": [23, 24, 27, 37, 39, 151, 153, 160, 161, 169, 170, 238, 297, 341, 377, 395, 412, 438], "test": [23, 30, 36, 147, 155, 248, 306, 386, 522], "ctest": 23, "conda": 23, "env": 23, "doc": [23, 45, 162], "yml": 23, "header": [23, 25, 32, 33, 141, 147, 158, 163, 240, 241, 249, 255, 276, 278], "administr": 23, "privileg": 23, "sudo": 23, "mac": 23, "bold": [24, 30, 31, 38, 146, 163], "onednn_library_typ": 24, "onednn_cpu_runtim": 24, "none": [24, 34, 54, 57, 58, 59, 68, 69, 70, 71, 72, 73, 75, 85, 91, 92, 100, 101, 102, 103, 106, 123, 126, 133, 136, 163, 186, 187, 198, 419], "omp": [24, 147], "seq": 24, "onednn_gpu_runtim": 24, "ocl": [24, 256, 399], "offload": 24, "onednn_build_doc": 24, "onednn_build_exampl": 24, "onednn_build_test": 24, "onednn_build_graph": [24, 38], "onednn_enable_graph_dump": [24, 38], "dump": [24, 49, 147, 282, 318], "artifact": [24, 38], "onednn_arch_opt_flag": 24, "warn": [24, 147, 163, 248, 386], "onednn_enable_jit_profil": [24, 147], "profil": [24, 35, 36, 164, 205, 206, 266, 286, 318, 346, 359], "onednn_enable_itt_task": [24, 147], "onednn_enable_primitive_cach": [24, 146], "onednn_enable_max_cpu_isa": [24, 30], "onednn_enable_cpu_isa_hint": [24, 31], "isa": [24, 30, 32, 36, 37, 49, 50, 163, 164, 171, 172, 173, 174, 281, 318, 346, 348, 419, 444], "workload": [24, 29, 45, 151, 419, 420], "primitive_nam": 24, "cpu_isa_nam": 24, "gpu_isa_nam": 24, "isa_nam": 24, "onednn_experiment": [24, 36], "onednn_verbos": [24, 36, 318, 419, 420], "onednn_dev_mod": [24, 163], "trace": [24, 163, 420], "debuginfo": [24, 163], "log": [24, 34, 36, 97, 163, 188, 248, 283, 285, 386], "develop": [24, 25, 32, 36, 49, 50, 163, 233, 234, 245, 247, 289, 290, 293, 294, 297, 300, 301, 303, 304, 305, 307, 308, 309, 314, 315, 316, 317, 319, 320, 322, 323, 371, 383, 385], "onednn_aarch64_use_acl": 24, "onednn_blas_vendor": 24, "armpl": 24, "acceler": [24, 32, 46, 53, 159], "extern": 24, "link": [24, 49, 68, 69, 70, 71, 72, 73, 346], "onednn_gpu_vendor": 24, "nvidia": 24, "amd": 24, "dnnl_gpu_runtim": [24, 158], "onednn_dpcpp_host_compil": 24, "clang": [24, 52, 142, 242, 243, 379, 380], "onednn_library_nam": 24, "smoke": [24, 258, 404], "ci": 24, "nightli": 24, "modifier_nam": 24, "coverag": [24, 25], "counterpart": [24, 50, 158, 306, 524], "prefix": [24, 318], "sub": [24, 37, 142, 151, 158, 162, 169, 170, 272, 306, 384, 419, 431], "intend": [24, 29, 157, 163, 307, 346, 352], "subject": 24, "oneapi": [24, 52, 155, 158, 160, 161, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 286, 360, 362, 364, 368, 371, 372, 373, 375, 377, 378, 381, 383, 386, 388, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 413, 415, 417, 421, 425, 427, 429, 431, 432, 434, 436, 438, 442], "dpc": [24, 323, 359, 438, 445], "main": [24, 36, 157, 159, 160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 306, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442, 530], "discov": 24, "absolut": [24, 55, 112], "cmake_cxx_compil": 24, "window": [24, 46, 50, 58, 59, 101, 102, 144, 163, 318, 412], "linux": [24, 142, 163, 318], "7": [24, 147, 155, 157, 160, 161, 162, 175, 183, 194, 221, 238, 240, 241, 242, 243, 250, 251, 255, 276, 377, 379, 380, 384, 385, 388, 396, 397, 399, 400, 420], "4": [24, 30, 32, 34, 36, 39, 50, 54, 60, 61, 62, 94, 105, 123, 142, 147, 160, 161, 162, 169, 170, 171, 174, 175, 179, 183, 194, 221, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 246, 247, 249, 250, 252, 255, 256, 263, 266, 267, 272, 273, 276, 277, 278, 279, 281, 306, 338, 366, 368, 371, 372, 375, 377, 378, 379, 380, 388, 390, 395, 396, 397, 399, 400, 415, 420, 421, 431, 432, 438, 440], "gcc": 24, "interoper": [24, 36, 286, 330, 350, 351, 352, 353, 354, 359, 395, 399, 400, 438, 445], "8": [24, 30, 32, 41, 47, 50, 52, 142, 147, 157, 160, 161, 171, 174, 175, 179, 183, 194, 196, 221, 230, 231, 233, 238, 239, 240, 241, 242, 243, 255, 276, 288, 291, 324, 354, 366, 368, 370, 377, 378, 379, 380, 396, 397, 399, 400, 419, 538], "disk": 24, "occupi": [24, 157, 306, 522], "app": 24, "remov": [24, 112, 113, 114, 115, 116, 117, 118, 303, 306, 318, 334, 524], "batch_norm": [24, 203, 359], "concat": [24, 164, 188, 203, 204, 285, 286, 306, 311, 348, 359, 374, 419, 536, 581], "deconvolut": [24, 169, 170, 203, 204, 286, 311, 391, 467, 468, 469, 470, 471, 472], "group_norm": [24, 164, 203, 359], "inner_product": [24, 203, 232, 359], "layer_norm": [24, 203, 359], "lrn": [24, 169, 170, 203, 204, 209, 210, 231, 232, 234, 235, 239, 286, 311, 359, 368, 371, 372, 378, 419, 511, 512, 513, 514, 541, 581], "pool": [24, 32, 46, 50, 58, 59, 101, 102, 169, 170, 203, 204, 209, 210, 231, 232, 234, 235, 239, 265, 286, 311, 359, 368, 369, 371, 372, 378, 422, 525, 526, 527, 528, 541, 581], "prelu": [24, 29, 48, 54, 95, 109, 188, 203, 204, 285, 286, 288, 311, 359, 423, 424, 530, 531, 532, 533, 534, 581], "resampl": [24, 169, 170, 203, 204, 209, 210, 286, 311, 359, 430, 541, 546, 547, 548, 549, 581], "rnn": [24, 26, 35, 45, 46, 50, 51, 164, 169, 170, 179, 196, 203, 204, 209, 210, 211, 212, 213, 214, 227, 246, 247, 261, 263, 272, 279, 286, 288, 306, 311, 312, 359, 361, 411, 416, 419, 441, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 538, 541, 550, 569, 570, 571, 572, 581], "sdpa": [24, 40, 283], "shuffl": [24, 164, 203, 204, 209, 210, 286, 311, 359, 419, 433, 551, 552, 553, 554, 581], "softmax": [24, 40, 42, 46, 97, 127, 164, 169, 170, 186, 187, 188, 203, 204, 246, 247, 283, 285, 286, 311, 359, 419, 435, 555, 556, 557, 558, 581], "attempt": [24, 312, 478, 491, 522, 536, 560], "unimpl": [24, 147, 192, 209, 220, 318], "style": 24, "semicolon": 24, "delimit": [24, 147], "donednn_enable_primit": 24, "sse41": [24, 30, 31, 171, 318], "avx2": [24, 30, 32, 49, 171, 174, 318, 419], "avx512": [24, 32, 50, 162], "amx": [24, 30, 32, 36, 151, 160, 161, 171, 174, 238, 377], "linearli": 24, "complianc": [24, 160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "donednn_enable_primitive_cpu_isa": 24, "gen9": [24, 49], "gen11": 24, "xelp": 24, "xehp": 24, "xehpg": 24, "xehpc": 24, "xe2": [24, 29, 32, 54], "xe3": 24, "donednn_enable_primitive_gpu_isa": 24, "x64": [24, 32, 147, 163], "interfac": [24, 147, 155, 324, 331, 338, 339, 343, 354, 395, 438, 563], "leav": [24, 42, 234, 235, 371, 372, 386], "donednn_enable_gemm_kernels_isa": 24, "no_corr": 24, "add_bitwis": 24, "short": [24, 151, 158, 419], "verifi": [24, 143, 460, 540, 545, 562], "largest": 24, "unmodifi": 24, "processor": [24, 29, 30, 39, 40, 42, 43, 49, 142, 171, 174, 256, 346, 395, 438], "jit": [24, 30, 31, 45, 52, 146, 147, 160, 161, 163, 238, 318, 377, 419, 420, 444], "detect": [24, 30, 144, 288, 538], "r": [24, 28, 40, 42, 43, 47, 49, 50, 54, 67, 74, 76, 77, 84, 93, 94, 110, 112, 113, 114, 115, 116, 117, 118, 147, 148, 149, 151, 169, 170, 256, 261, 291, 324, 354, 395, 410, 420, 438], "xsse4": 24, "sse4": [24, 30, 32, 162, 171, 174], "older": [24, 30, 32], "msse4": 24, "give": [24, 151, 162, 381], "therefor": [24, 40, 141, 143, 147, 157, 306, 524], "arch_opt_flag": 24, "portabl": [24, 142, 306], "throughout": [24, 45, 272, 394, 431], "undefin": [24, 46, 164, 170, 175, 178, 179, 182, 184, 185, 186, 187, 193, 194, 195, 196, 197, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 219, 226, 306, 312, 338, 524], "crash": [24, 394], "conflict": [24, 438], "donednn_cpu_runtim": 24, "tbbroot": 24, "environment": 24, "instal": [24, 52], "dtbbroot": 24, "winograd": [24, 26, 149, 163, 164, 169, 170], "_onednn_test_threadpool_impl": 24, "standalon": 24, "eigen": [24, 155], "eigen3_dir": 24, "d_onednn_test_threadpool_impl": 24, "deigen3_dir": 24, "eigen3": 24, "plu": 24, "decomposit": 24, "At": [24, 30, 31, 45, 54, 67, 146, 147, 159, 163, 254, 394], "balanc": [24, 386], "item": [24, 147], "worker": [24, 563], "64": [24, 49, 50, 147, 160, 161, 175, 208, 237, 238, 241, 247, 252, 270, 280, 288, 346, 375, 377, 390, 397, 427, 442, 538], "optimis": 24, "computelibrari": 24, "machin": [24, 161, 248, 386], "mlplatform": 24, "org": [24, 39, 40, 42, 43, 160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "donednn_aarch64_use_acl": 24, "download": 24, "advis": [24, 30, 31, 51, 159], "v23": 24, "11": [24, 25, 47, 147, 175, 231, 232, 234, 235, 239, 240, 241, 242, 243, 255, 266, 267, 276, 368, 371, 372, 378, 379, 380, 389, 394, 397, 420, 421], "donednn_blas_vendor": 24, "graphic": [24, 39, 40, 42, 43, 49, 54, 256, 346, 395, 438], "sdk": 24, "dopenclroot": 24, "donednn_gpu_runtim": 24, "simultan": [24, 36, 149, 326], "conveni": [25, 34, 54, 162, 179, 196, 312, 395, 479, 541], "almost": [25, 142, 162], "far": [25, 50], "concern": [25, 50], "switch": [25, 158, 162], "back": [25, 29, 37, 46, 50, 58, 59, 68, 69, 70, 71, 72, 73, 97, 98, 101, 102, 147, 149, 164, 234, 235, 294, 296, 306, 308, 331, 339, 343, 371, 372, 400, 401, 438, 462, 464, 466, 468, 470, 472, 522, 526, 528], "forth": 25, "desir": [25, 46, 142, 318], "c99": 25, "medium": 25, "insid": [25, 27, 37, 162, 185, 193, 244, 258, 280, 306, 381, 396, 397, 404, 442, 524], "thin": 25, "wrapper": [25, 478, 491, 522, 536, 560], "stabl": [25, 42, 153, 170], "abi": [25, 158, 204], "usabl": [25, 28], "target": [25, 37, 77, 160, 161, 238, 246, 247, 288, 332, 336, 339, 341, 343, 377, 538], "audienc": 25, "experienc": 25, "ffi": 25, "framework": [25, 37, 41, 46, 140, 142, 146, 162, 338, 346, 394, 396, 397, 398, 399, 400, 401], "overhead": [25, 27, 40, 45, 143, 146, 147, 159, 162, 163, 283], "sanit": [25, 283], "consequ": [25, 420], "nan": [25, 126], "larg": [25, 39, 146, 164, 283], "close": [25, 142, 157], "overlap": [25, 58, 144], "concaten": [26, 67, 151, 164, 203, 211, 212, 236, 293, 306, 373, 459, 460], "concat_dimens": [26, 281, 293, 460], "ou": [26, 67, 152, 153], "src_i": [26, 65, 67, 97, 126, 154], "c_1": [26, 67], "c_": [26, 67, 151], "dnnl_arg_multiple_src": [26, 154, 236, 275, 281, 312, 373, 436], "sum_i": [26, 160, 247], "c_i": 26, "necessarili": [26, 150, 157, 160, 161, 238, 377], "dnnl_nchw16c": [26, 179, 196], "dnnl_ncdhw8c": [26, 179, 196], "prepack": 26, "dnnl_format_kind_opaqu": [26, 178, 195], "s8s8": [26, 50], "abl": [26, 30, 54, 149, 154, 199, 394], "slower": [26, 32, 154], "graph": [27, 35, 39, 40, 41, 42, 43, 52, 80, 134, 140, 163, 166, 221, 240, 241, 249, 255, 276, 278, 281, 283, 286, 318, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 346, 348, 481], "compon": [27, 163, 283], "fold": 27, "redund": 27, "megabyt": 27, "won": [27, 163], "reach": [27, 36, 153, 192, 220, 221, 334, 540], "getter": 27, "ref": [27, 160, 161, 238, 377], "dnnl_graph_set_constant_tensor_cache_capac": [27, 281, 334], "dnnl_graph_get_constant_tensor_cache_capac": [27, 281, 334], "programm": 27, "onednn_graph_constant_tensor_cache_capac": 27, "engine_kind1": 27, "size1": 27, "engine_kind2": 27, "size2": 27, "1024": [27, 36, 146, 149, 249, 272, 278, 281, 333, 431], "2048": [27, 249, 278], "start": [27, 35, 36, 47, 93, 94, 108, 109, 155, 158, 159, 162, 163, 240, 246, 254, 255, 256, 276, 277, 283, 312, 359, 389, 397, 398, 401, 419, 420, 445], "pars": 27, "prioriti": 27, "neural": [28, 29, 32, 158, 231, 232, 283, 317, 340, 368, 369], "network": [28, 29, 32, 39, 45, 158, 231, 232, 283, 317, 340, 368, 369], "df_": 28, "commonli": [28, 29], "wide": [28, 39, 283], "known": [28, 29, 54, 160, 248, 254, 258, 280, 306, 381, 386, 394, 396, 399, 400, 404, 442], "summar": [28, 33, 141, 151], "scale_shift": 28, "carri": [28, 160], "diff_src": [28, 46, 53, 56, 59, 62, 66, 69, 72, 79, 83, 88, 90, 92, 94, 98, 102, 105, 109, 120, 125, 127, 129, 131, 138, 144, 150, 234, 235, 239, 272, 289, 297, 300, 303, 371, 372, 378, 431], "diff_dst": [28, 46, 53, 56, 59, 62, 64, 66, 69, 70, 72, 73, 79, 83, 88, 90, 92, 94, 98, 102, 105, 109, 120, 125, 127, 129, 131, 138, 234, 235, 239, 289, 297, 300, 303, 371, 372, 378], "diff_bia": [28, 64], "diff_scale_shift": 28, "_layer": 28, "_iter": 28, "recurr": [28, 32, 151, 227, 261, 263, 279, 312, 317, 360, 410, 415, 440, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "letter": [28, 162, 179, 196, 419], "od": 28, "depth": [28, 29, 68, 69, 162, 179, 196, 257, 294, 296, 308, 402, 462, 464, 466, 468, 470, 472, 526, 528], "kd": [28, 29, 48], "sd": [28, 29, 68, 69], "sw": [28, 29, 58, 68, 69, 101, 144, 237, 252, 267, 375, 390, 421], "dd": [28, 29, 34, 68, 69], "dh": [28, 29, 58, 68, 69, 101, 144, 267, 421], "dilat": [28, 69, 70, 71, 72, 73, 101, 102, 186, 187, 209, 210, 231, 239, 240, 241, 255, 265, 267, 276, 281, 294, 296, 308, 368, 378, 396, 397, 399, 400, 419, 421, 462, 464, 466, 468, 470, 472, 526, 528, 541], "ph": 28, "pw": 28, "transposit": [28, 291, 324, 354], "b": [28, 32, 49, 54, 151, 160, 161, 162, 179, 196, 238, 244, 248, 258, 280, 281, 283, 291, 305, 306, 324, 325, 326, 348, 354, 377, 381, 386, 404, 419, 442, 520, 566, 567], "hidden": [28, 50, 247, 261, 279, 312, 317, 384, 410, 440, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 570, 572], "_t": [28, 151], "timestamp": [28, 147, 151], "l": [28, 52, 53, 151, 179, 227, 261, 263, 272, 279, 288, 306, 360, 410, 415, 431, 440, 538], "tanh": [28, 29, 34, 104, 138, 151, 169, 170, 188, 227, 237, 252, 259, 261, 263, 264, 279, 283, 285, 360, 375, 390, 406, 410, 415, 417, 440], "logist": [28, 34, 169, 170], "cell": [28, 32, 50, 169, 170, 179, 196, 209, 210, 213, 214, 247, 261, 279, 312, 317, 384, 385, 410, 440, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 541, 550, 570, 572], "tild": [28, 151], "candid": [28, 54, 179, 196, 283], "gate": [28, 151, 169, 170, 179, 196, 227, 261, 263, 272, 279, 283, 306, 360, 410, 415, 431, 440], "forget": [28, 179, 196, 234, 235, 371, 372], "o": [28, 40, 42, 43, 142, 147, 151, 162, 164, 179, 196, 247, 261, 266, 272, 288, 306, 384, 385, 410, 431, 538], "updat": [28, 29, 32, 48, 151, 157, 158, 179, 196, 234, 235, 239, 240, 241, 249, 255, 261, 272, 276, 278, 371, 372, 378, 410, 431, 496], "reset": [28, 36, 155, 169, 170, 179, 196, 261, 313, 411, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572], "english": 28, "alphabet": 28, "canon": 28, "z": [28, 50], "outermost": [28, 152, 153, 162, 179, 196, 306], "innermost": [28, 152, 153, 179, 196, 209, 210, 306], "dens": [28, 36, 162, 163, 306, 524], "ba": [28, 36, 196, 202, 226, 524], "last": [28, 36, 39, 50, 51, 93, 94, 99, 135, 142, 153, 160, 161, 162, 163, 192, 220, 221, 238, 303, 313, 369, 377, 384, 385, 394, 482, 540], "transpos": [28, 42, 99, 152, 161, 179, 196, 202, 226, 252, 258, 291, 324, 354, 390, 404], "natur": [28, 96, 169, 170, 394], "suppos": [28, 47, 272, 431], "column": [28, 36, 54, 99, 147, 159, 162, 291, 324, 354], "row": [28, 36, 99, 152, 159, 162, 197, 219, 244, 247, 281, 291, 324, 338, 354, 381], "major": [28, 50, 152, 162, 244, 291, 318, 324, 338, 354, 381, 573], "fortran": 28, "todo": [28, 144, 246, 359, 384], "pictur": [28, 144, 162, 439], "ab16a": 28, "similar": [28, 32, 36, 40, 45, 145, 158, 162, 164, 197, 202, 219, 226, 240, 241, 249, 255, 272, 276, 278, 306, 370, 381, 394, 431, 524], "split": [28, 40, 46, 142, 147, 160, 161, 162, 238, 306, 377, 524], "contigu": [28, 54, 162, 291, 324, 326, 338, 354], "represent": [28, 32, 41, 162, 306, 381, 384, 389, 394, 395, 438, 524], "domain": [28, 36, 162, 179, 196, 288, 381, 530], "four": [28, 50, 151], "cross": [29, 121, 142, 163, 346], "correl": 29, "comment": [29, 68, 69], "front": [29, 58, 59, 68, 69, 70, 71, 72, 73, 101, 102, 147, 294, 296, 308, 462, 464, 466, 468, 470, 472, 526, 528], "top": [29, 39, 42, 58, 59, 68, 69, 70, 71, 72, 73, 101, 102, 147, 162, 288, 294, 296, 306, 308, 462, 464, 466, 468, 470, 472, 526, 528, 530], "left": [29, 34, 39, 42, 53, 54, 58, 59, 68, 69, 70, 71, 72, 73, 93, 94, 99, 101, 102, 123, 144, 150, 152, 153, 162, 163, 209, 210, 211, 212, 237, 252, 265, 267, 272, 288, 294, 296, 306, 308, 375, 390, 419, 421, 431, 462, 464, 466, 468, 470, 472, 526, 528, 530, 541], "pd_l": [29, 68, 69], "ph_l": [29, 58, 68, 69, 101, 144, 237, 252, 267, 375, 390, 421], "pw_l": [29, 58, 68, 69, 101, 144, 237, 252, 267, 375, 390, 421], "_l": 29, "stand": [29, 142], "bottom": [29, 39, 58, 59, 68, 69, 70, 71, 72, 73, 101, 102, 162, 294, 296, 308, 462, 464, 466, 468, 470, 472, 526, 528], "pd_r": [29, 68, 69], "ph_r": [29, 68, 69, 237, 252, 267, 375, 390, 421], "pw_r": [29, 68, 69, 237, 252, 267, 375, 390, 421], "_r": 29, "broken": [29, 160, 161, 238, 377], "exposit": 29, "realiti": 29, "sum_": [29, 48, 54, 68, 97, 99, 126], "lfloor": [29, 68, 150], "rfloor": [29, 68, 150], "oc_g": [29, 68], "ic_g": [29, 68], "5d": [29, 51, 162, 179, 196, 288, 530], "depthwis": [29, 288, 312, 530], "dkh": [29, 68], "dkw": [29, 68], "tensorflow": [29, 109, 157, 162, 267, 421], "adjust": [29, 162, 267, 306, 421, 524], "dh_onednn": 29, "dh_torch": 29, "dw_onednn": 29, "dw_torch": 29, "fraction": 29, "swap": [29, 306, 524], "li": 29, "expand": [29, 252, 390], "plai": [29, 394], "crucial": 29, "role": 29, "determin": [29, 47, 182, 184, 265, 396, 397, 399, 400, 420], "diffbia": [29, 48, 151], "dnnl_arg_diff_weight": [29, 48, 145, 234, 235, 239, 281, 312, 371, 372, 378], "dnnl_arg_diff_bia": [29, 48, 151, 234, 235, 239, 272, 281, 312, 371, 372, 378, 431], "prelu_post_op_posit": [29, 48, 54], "f8_e5m2": [29, 32, 54, 74, 110, 149, 183, 194], "f8_e4m3": [29, 32, 54, 74, 110, 149, 183, 194], "physic": [29, 51, 142, 162, 179, 254, 306, 394, 524], "critic": [29, 45, 46, 48, 143, 265, 419], "shorten": [29, 48, 151, 163], "dnnl_wio": [29, 48, 179], "dnnl_hwio": [29, 48, 179], "dnnl_dhwio": [29, 48, 179], "xe": [29, 40, 42, 43, 346], "hpc": [29, 32], "entir": [29, 45, 48, 54, 112, 113, 114, 115, 116, 117, 118], "dnnl_arg_": [29, 48, 54, 307, 312, 323, 352, 353, 536, 544], "memory_index": [29, 48, 54], "dnnl_arg_attr_zero_point": [29, 54, 244, 258, 280, 281, 288, 312, 381, 404, 442, 538], "prevent": [29, 33, 47, 126, 141, 312], "feasibl": 29, "usag": [29, 31, 32, 36, 37, 43, 49, 121, 163, 179, 196, 227, 228, 240, 241, 249, 255, 261, 263, 276, 278, 279, 288, 360, 362, 410, 415, 420, 440, 530, 538], "deploi": 29, "done": [29, 34, 46, 54, 144, 149, 160, 161, 238, 369, 370, 377, 394, 395], "set_scal": [29, 54, 280, 442, 443, 538], "wei": [29, 32], "eta": 29, "set_zero_point": [29, 54, 280, 442, 443, 538], "shift_": [29, 149], "simd": [29, 30, 32, 171, 174], "expens": [29, 46, 389, 394, 419, 524], "fast": [29, 40, 42, 160, 161, 162, 238, 377], "lavin": 29, "grai": 29, "often": [29, 147, 163], "aarch64": [29, 147, 164, 346], "rearrang": [29, 135], "fallback": 29, "exce": [29, 164], "half": [29, 32, 157, 175, 183, 194], "14": [29, 47, 147, 175, 265, 419, 420, 530], "constraint": [29, 54], "met": [29, 108, 109], "silent": [29, 31], "fall": [29, 164], "explicit": [29, 42, 155, 272, 306, 431], "weigh": 29, "against": 29, "boost": [29, 30, 32, 157, 163, 171, 174], "consumpt": [29, 210, 306, 394], "grow": 29, "significantli": [29, 146, 157], "growth": 29, "rest": [29, 68], "conv1_pd": 29, "convolution_winograd": [29, 170, 462, 464, 466, 468], "conv1_src_md": [29, 232, 369], "conv1_weights_md": [29, 232, 369], "conv1_bias_md": [29, 232, 369], "conv1_dst_md": [29, 232, 369], "conv1_strid": [29, 232, 369], "conv1_padding_l": 29, "conv1_padding_r": 29, "convolution_auto": [29, 170, 265, 419, 462, 464, 466], "heurist": [29, 164], "affin": [29, 93, 94, 142], "f8": 29, "iplement": 29, "xmx": [29, 32, 40, 42, 43], "lpg": [29, 32], "hpg": [29, 32], "uarch": [29, 32, 147], "fp8": [29, 32, 54], "No": [29, 30, 32, 38, 150, 151, 161, 164, 172, 173, 227, 233, 234, 245, 247, 272, 360, 371, 383, 385, 419, 431], "sometim": [30, 45, 46, 48, 50, 162, 272, 389, 394, 431], "explor": [30, 147, 160, 161, 238, 377], "onednn_max_cpu_isa": 30, "avx": [30, 32, 163, 171, 174, 318, 419], "advanc": [30, 32, 36, 49, 54, 151, 171, 174, 248, 346, 386, 404, 442], "avx2_vnni": [30, 171, 318], "dl": [30, 32, 157, 163, 171, 174], "avx512_cor": [30, 163, 171, 318], "512": [30, 32, 36, 40, 42, 163, 171, 174, 245, 264, 383, 417], "avx512bw": [30, 32], "avx512vl": 30, "avx512dq": 30, "avx512_core_vnni": [30, 171, 318], "avx512_core_bf16": [30, 163, 171, 318], "avx10_1_512": [30, 171, 318], "avx512_core_fp16": [30, 163, 171, 318], "avx10": 30, "float16": [30, 171, 174], "avx10_1_512_amx": [30, 171, 318], "avx512_core_amx": [30, 163, 171, 318], "avx2_vnni_2": [30, 171, 318], "avx10_1_512_amx_fp16": [30, 171, 318], "avx512_core_amx_fp16": [30, 163, 171, 318], "exclud": [30, 169, 170], "preview": 30, "alias": [30, 147, 179, 196, 318], "introduct": [30, 49], "manag": [30, 31, 37, 141, 147, 163, 217, 218, 240, 241, 249, 255, 276, 278, 307, 352, 491], "set_max_cpu_isa": [30, 318, 348], "ed": [30, 147], "observ": [30, 142, 163], "get_effective_cpu_isa": [30, 318, 348], "highest": [30, 45, 163], "zmm": 31, "advantag": [31, 157], "clock": [31, 147], "onednn_cpu_isa_hint": 31, "set_cpu_isa_hint": [31, 318, 348], "routin": [31, 160, 161, 238, 326, 327, 377, 564], "no_hint": [31, 172, 318], "prefer_ymm": [31, 172], "ymm": [31, 172, 173], "get_cpu_isa_hint": [31, 318, 348], "pose": 31, "bypass": 31, "ieee": [32, 157], "golden": 32, "comparison": [32, 54, 85, 160, 161, 238, 248, 306, 359, 377], "s4": [32, 43, 54, 76, 183, 194], "u4": [32, 43, 54, 76, 183, 194], "doubl": [32, 175, 210, 244, 248, 281, 381, 386], "ofp8": [32, 175, 183, 194], "5": [32, 34, 36, 39, 47, 50, 82, 86, 91, 92, 93, 94, 123, 147, 150, 157, 159, 160, 161, 162, 175, 179, 183, 194, 221, 231, 232, 234, 235, 238, 239, 240, 241, 242, 243, 249, 255, 256, 262, 266, 270, 276, 277, 278, 338, 368, 371, 372, 377, 378, 379, 380, 395, 396, 397, 399, 400, 413, 427, 438], "e8m0": [32, 194], "mx": [32, 175, 194], "f4_e2m1": [32, 194], "f4_e3m0": [32, 194], "topic": [32, 35, 43, 306, 346, 394, 419, 420], "govern": [32, 160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "convert_": 32, "_dt": 32, "postops_": 32, "mix": [32, 39, 40, 41, 42, 44, 139], "faithfulli": [32, 41], "closest": 32, "fp4": 32, "nearest": [32, 91, 92, 122, 139, 169, 170, 186, 187, 316], "tie": 32, "flush": [32, 334], "fenv": 32, "fesetround": 32, "xmmintrin": 32, "_mm_set_flush_zero_mod": 32, "_mm_flush_zero_on": 32, "ftz": 32, "explain": [32, 47, 369, 370], "recogn": [32, 41, 283], "fp16": 32, "tba": 32, "word": [32, 46, 50, 54, 179, 196, 217, 218], "4x": 32, "microarchitectur": 32, "lp": [32, 148, 169], "dp4a": 32, "uhd": 32, "11th": 32, "14th": 32, "gen": [32, 49, 244, 248, 258, 280, 381, 386, 404, 442], "iri": [32, 412], "formerli": [32, 50], "dg1": 32, "aka": [32, 179, 199, 246, 247, 394], "dpa": 32, "arc": [32, 412], "tm": [32, 147, 359], "achemist": 32, "center": [32, 54, 149, 244, 381, 404], "flex": 32, "seri": [32, 50, 54, 149], "arctic": 32, "sound": [32, 162], "mad": 32, "pont": 32, "vecchio": 32, "ultra": 32, "lunar": 32, "lake": [32, 50], "battlemag": 32, "upconvers": 32, "faster": 32, "newer": 32, "interact": [33, 141, 302, 307, 323, 324, 337, 339, 343], "dnnl_sycl": [33, 224, 276, 277, 278, 400, 401, 438], "seamlessli": 33, "submit": [33, 141, 277, 313, 366, 368, 369, 395, 438, 563], "access": [33, 45, 141, 142, 157, 247, 272, 277, 306, 310, 318, 333, 338, 384, 389, 394, 395, 431, 438, 522], "uint8_t": [33, 50, 143, 160, 161, 210, 238, 244, 247, 258, 281, 291, 306, 307, 312, 324, 336, 338, 339, 340, 341, 348, 350, 352, 354, 377, 381, 385, 404, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 524, 525, 526, 527, 528, 531, 532, 533, 534, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 569, 570, 571, 572], "unifi": [33, 37, 141], "sycl_interop": [33, 276, 277, 278, 281, 286, 306, 323, 330, 331, 343, 348, 349, 400, 401, 438], "make_engin": [33, 141, 143, 352, 353], "get_devic": [33, 36, 141, 143, 276, 278, 352, 353, 400, 401], "get_context": [33, 36, 141, 256, 276, 278, 352, 353, 395, 400, 401], "make_stream": [33, 36, 141, 276, 278, 352, 353, 354, 400, 401], "get_queu": [33, 277, 353, 438], "make_memori": [33, 141, 277, 352, 353, 438], "get_buff": [33, 277, 306, 353, 438], "altern": [33, 42, 46, 141, 150], "uniform": [33, 141, 142], "host": [33, 141, 200, 201, 224, 225, 306, 331, 343, 351, 395, 438, 522], "memory_kind": [33, 141, 277, 281, 307, 323, 352, 353, 438], "could": [33, 41, 141, 147, 157, 160, 161, 167, 168, 238, 244, 283, 317, 377, 381, 394], "identifi": [33, 36, 37, 141, 147, 306, 341], "get_memory_kind": [33, 141, 352, 353], "track": [33, 37, 80], "accessor": [33, 438], "proper": [33, 46, 47, 141, 160, 161, 238, 248, 377, 381, 386, 394], "write": [33, 36, 40, 42, 45, 141, 147, 160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 306, 326, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 395, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 522, 567], "i_1": 34, "ldot": [34, 47, 54], "i_k": 34, "dnnl_eltwise_ab": [34, 169, 170], "begin": [34, 55, 56, 78, 85, 88, 95, 108, 111, 119, 145, 150, 151, 152, 160, 161, 227, 228, 229, 230, 232, 236, 237, 238, 245, 247, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 360, 362, 364, 366, 373, 375, 377, 383, 385, 390, 392, 395, 402, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440], "clip": [34, 65, 169, 170], "dnnl_eltwise_clip": [34, 169, 170], "clip_v2": 34, "dnnl_eltwise_clip_v2": [34, 169, 170], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [34, 169, 170], "elu": [34, 79, 169, 170, 188, 283, 285], "dnnl_eltwise_elu": [34, 169, 170], "dnnl_eltwise_elu_use_dst_for_bwd": [34, 169, 170], "exp": [34, 97, 126, 169, 188, 247, 283, 285], "dnnl_eltwise_exp": [34, 169, 170], "dnnl_eltwise_exp_use_dst_for_bwd": [34, 169, 170], "gelu_erf": 34, "dnnl_eltwise_gelu_erf": [34, 169, 170], "erf": [34, 82, 169, 170], "pi": 34, "gelu_tanh": 34, "dnnl_eltwise_gelu_tanh": [34, 169, 170], "044715": 34, "hardsigmoid": [34, 88, 169, 170, 188, 285], "dnnl_eltwise_hardsigmoid": [34, 169, 170], "hardswish": [34, 90, 169, 170, 188, 283, 285], "dnnl_eltwise_hardswish": [34, 169, 170], "dnnl_eltwise_linear": [34, 169, 170], "dnnl_eltwise_log": [34, 169, 170], "log_": 34, "dnnl_eltwise_logist": [34, 169, 170, 317], "dnnl_eltwise_logistic_use_dst_for_bwd": [34, 169, 170], "mish": [34, 105, 169, 170, 188, 285], "dnnl_eltwise_mish": [34, 169, 170], "omega": [34, 47, 105], "delta": [34, 105], "pow": [34, 169, 170, 188, 283, 285], "dnnl_eltwise_pow": [34, 169, 170], "dnnl_eltwise_relu_use_dst_for_bwd": [34, 169, 170, 297, 474], "dnnl_eltwise_round": [34, 169, 170], "soft_relu": [34, 169, 170], "dnnl_eltwise_soft_relu": [34, 169, 170], "dnnl_eltwise_sqrt": [34, 169, 170], "dnnl_eltwise_sqrt_use_dst_for_bwd": [34, 169, 170], "squar": [34, 113, 130, 133, 169, 170, 188, 283, 285], "dnnl_eltwise_squar": [34, 169, 170], "swish": [34, 39, 169, 170], "dnnl_eltwise_swish": [34, 169, 170], "dnnl_eltwise_tanh": [34, 169, 170, 317], "dnnl_eltwise_tanh_use_dst_for_bwd": [34, 169, 170], "134145": 34, "_relu": 34, "logsigmoid": 34, "soft": [34, 45], "eltwise_forward": [34, 232, 234, 235, 251, 253, 254, 256, 266, 277, 297, 348, 369, 371, 372, 389, 392, 394, 395, 438, 474, 536], "rather": [34, 272, 431], "Such": [34, 46, 142, 524], "satisfi": [34, 37], "aggress": 36, "onednn_experimental_bnorm_stats_one_pass": 36, "varianc": [36, 60, 61, 62, 86, 93, 94, 198, 199, 228, 230, 257, 260, 289, 300, 303, 312, 362, 366, 402, 408, 453, 455, 484, 486, 500, 502], "bn": 36, "rfc": 36, "onednn_experimental_gpu_conv_v2": 36, "shapeless": 36, "spars": [36, 160, 161, 164, 178, 195, 197, 209, 210, 219, 238, 242, 243, 245, 306, 377, 379, 380, 524], "microkernel": 36, "metadata": [36, 37, 242, 243, 379, 380], "enumer": [36, 541], "format_kind": [36, 158, 163, 164, 209, 290, 294, 296, 301, 303, 305, 306, 309, 314, 316, 317, 522, 524], "compress": [36, 45, 54, 197, 219, 280, 283, 442, 443], "sort": 36, "co": [36, 162, 227, 228, 229, 230, 236, 237, 245, 247, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 279, 281, 291, 324, 348, 354, 360, 362, 364, 366, 373, 375, 383, 390, 392, 394, 402, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 432, 434, 436, 440], "ordin": 36, "sparse_encod": [36, 209, 522, 524], "member": [36, 209], "content": [36, 143, 306, 522, 524], "unspecifi": [36, 163, 176, 177, 306, 524], "pseudocod": 36, "namespac": [36, 143, 158, 160, 161, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 307, 323, 324, 325, 330, 339, 343, 359, 360, 362, 364, 366, 371, 372, 373, 375, 377, 379, 380, 381, 383, 386, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442], "m": [36, 54, 99, 147, 160, 161, 232, 238, 242, 243, 244, 245, 248, 249, 258, 264, 266, 278, 280, 281, 291, 324, 326, 348, 354, 377, 379, 380, 381, 383, 386, 404, 417, 420, 442, 567, 575], "nnz": [36, 242, 243, 245, 281, 306, 379, 380, 383, 524], "values_dt": 36, "indices_dt": [36, 281, 306], "pointers_dt": [36, 281, 306], "csr_md": 36, "entri": [36, 42, 163, 209, 210, 242, 243, 288, 306, 310, 313, 333, 379, 380, 524, 530], "csr_valu": 36, "5f": [36, 230, 242, 243, 247, 258, 366, 379, 380, 385, 404], "0f": [36, 231, 232, 233, 234, 235, 239, 242, 243, 245, 246, 247, 250, 251, 256, 272, 277, 281, 368, 370, 371, 372, 378, 379, 380, 383, 384, 385, 388, 389, 395, 431, 438], "csr_indic": 36, "csr_pointer": 36, "csr_mem": 36, "values_sz": 36, "indices_sz": 36, "pointers_sz": 36, "values_handl": 36, "indices_handl": 36, "pointers_handl": 36, "coo_md": 36, "coo_valu": 36, "coo_row_indic": 36, "coo_col_indic": 36, "coo_mem": 36, "row_indices_handl": 36, "col_indices_handl": 36, "99": 36, "wtag": 36, "dtag": 36, "4x1000000": 36, "1000000x128": 36, "1000000": 36, "dt": [36, 163, 164, 281, 530], "3x512x1024": 36, "1x1024x512": 36, "agnost": [36, 179, 196, 306], "collect": [36, 37, 147, 163, 325, 341, 381], "cl_command_queu": [36, 141, 256, 281, 307, 352, 395], "ocl_queu": [36, 256, 395], "cl_queue_properti": 36, "prop": 36, "cl_queue_profiling_en": 36, "clcreatecommandqueuewithproperti": 36, "ocl_interop": [36, 141, 143, 256, 281, 286, 307, 330, 339, 348, 349, 395], "reset_profil": [36, 313, 348], "enqueu": [36, 395], "twice": 36, "wait": [36, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 313, 321, 360, 362, 364, 366, 371, 372, 373, 375, 379, 380, 381, 383, 386, 389, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 419, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 522, 560, 563], "conv_prim": [36, 237, 375], "uint64_t": [36, 155, 281, 313, 348, 563], "nsec": 36, "get_profiling_data": [36, 313, 348], "profiling_data_kind": [36, 313, 348], "resourc": [36, 37, 146, 331], "vendor": 36, "logfil": 36, "parti": 36, "spdlog": 36, "onednn_verbose_logfil": 36, "cnn_test_logg": 36, "cpp": [36, 49, 52, 155, 163, 359, 369, 370, 384, 385, 389, 394, 395, 396, 397, 398, 399, 400, 401, 419, 420, 438], "consol": 36, "logger": 36, "until": [36, 234, 235, 240, 241, 249, 255, 276, 278, 306, 369, 371, 372, 386, 438, 522], "filepath": 36, "dnnl_verbose_logfil": 36, "stdout": [36, 163, 318], "rotat": 36, "lazi": 36, "onednn_verbose_logfile_s": 36, "50": 36, "onednn_verbose_log_with_consol": 36, "onednn_verbose_num_logfil": 36, "ai": 37, "class": [37, 143, 155, 209, 277, 281, 324, 331, 332, 336, 338, 340, 341, 344, 349, 354, 479, 491, 492, 536, 540, 541, 550], "bind": [37, 240, 241, 249, 255, 276, 278], "besid": [37, 40, 283], "know": [37, 46, 244, 381], "connect": [37, 39, 48, 140, 240, 241, 246, 255, 272, 276, 281, 338, 340, 396, 397, 399, 400, 431, 482], "edg": 37, "paramt": 37, "subgraph": [37, 38, 41, 42, 283], "within": [37, 50, 53, 147, 159, 162, 169, 170, 283, 291, 303, 304, 306, 324, 354], "cycl": [37, 381], "procedur": 37, "port": 37, "node": [37, 39, 40, 42, 43, 134, 142, 231, 239, 281, 368, 378, 420], "abstract": [37, 143, 159, 160, 161, 238, 298, 306, 340, 344, 377, 389, 394, 395, 438, 563], "lifecycl": 37, "anymor": [37, 162], "visual": [38, 52, 68, 69, 70, 71, 72, 73, 142, 158], "benchmark": [38, 420, 444], "onednn_graph_dump": 38, "serial": [38, 143, 306, 350], "json": 38, "onednn_graph_verbos": 38, "info": [38, 147, 163, 288, 317, 419, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 530, 570, 572], "100001": 38, "100002": 38, "1313609102600373579": 38, "100003": 38, "12829238476173481280": 38, "variant": [39, 142, 151, 294, 296], "feed": 39, "ffn": 39, "llm": [39, 43], "v": [39, 40, 42, 43, 54, 152, 244, 245, 248, 258, 266, 280, 281, 381, 383, 386, 404, 442, 522], "glu": 39, "adopt": [39, 43, 76], "qualiti": [39, 40], "w_1": 39, "w_2": 39, "otim": 39, "sigmoid": [39, 125, 151, 170, 188, 283, 285], "fc": 39, "swiglu": 39, "llama": 39, "qwen": 39, "acycl": [39, 40, 42, 43], "blue": [39, 40, 42, 43], "brown": [39, 40, 42, 43], "gelu": [39, 83, 169, 170, 188, 283, 285], "definit": [39, 40, 42, 43, 150, 151, 152, 306, 329, 331, 342, 345, 481], "meet": [39, 40, 42, 43], "properli": [39, 42, 151, 162, 164, 312], "attent": [39, 43, 151, 227, 246, 247, 261, 279, 283, 312, 317, 360, 384, 385, 410, 440, 449, 451, 504, 506, 550], "arxiv": [39, 40, 42, 43], "1706": [39, 40, 42, 43], "03762v7": [39, 40, 42, 43], "2002": 39, "05202": 39, "effici": [39, 45, 50, 161, 162], "foundat": 39, "2302": 39, "13971": 39, "technic": 39, "report": [39, 147, 149, 288, 538], "2309": 39, "16609": 39, "io": [39, 42, 196, 244, 381], "graph_extens": [39, 42], "html": [39, 42, 244, 381], "dot": [40, 43, 283], "head": [40, 42, 43, 147], "bottleneck": [40, 163], "load": [40, 147], "sentenc": 40, "mqa": [40, 42], "degrad": 40, "instabl": 40, "interpol": [40, 92, 150, 186, 187, 188, 283, 285, 316], "propos": [40, 157], "subgroup": 40, "mini": [40, 42, 43, 179, 196, 258, 306, 404, 482], "h_q": 40, "h_kv": 40, "n_rep": 40, "reshap": [40, 42, 306, 524], "staticreshap": [40, 42, 188, 285], "q": [40, 42, 43, 147, 276, 277, 278, 281, 400, 401, 438], "openmp": [40, 42, 142, 163, 419], "decod": [40, 42, 49, 246, 247, 384, 385], "1911": [40, 42], "02150": [40, 42], "checkpoint": 40, "2305": 40, "13245": 40, "strictli": 41, "symmetr": [41, 50, 294, 296, 308], "scheme": 41, "asymmetr": [41, 54, 74, 76, 77, 110, 288, 381, 382, 404, 405, 442, 443, 530], "manual": [41, 46, 50, 160, 161, 238, 246, 377], "honor": 41, "elimin": 41, "implicitli": [41, 151, 283, 288, 306, 530], "typecast": [41, 121, 188, 285], "vice": [41, 54, 99], "versa": [41, 54, 99], "clearli": 41, "backbon": 42, "bert": [42, 283], "diffus": 42, "gpt": 42, "qk": 42, "d_k": 42, "d_qk": 42, "d_v": 42, "divid": [42, 50, 68, 69, 70, 71, 72, 73, 86, 160, 161, 164, 179, 188, 196, 238, 283, 285, 377], "causal": 42, "triangular": 42, "diagon": 42, "fill": [42, 45, 46, 54, 123, 160, 161, 162, 233, 238, 247, 248, 250, 251, 258, 266, 268, 280, 281, 377, 385, 386, 388, 389, 404, 419, 423, 442], "inf": [42, 111], "elsewher": [42, 420], "unchang": [42, 185, 193, 312, 540], "genindex": [42, 188], "greaterequ": [42, 188], "statictranspos": [42, 188, 285], "int4": 43, "exploit": 43, "kv": 43, "subsequ": [43, 54, 158, 162, 163, 207, 208, 272, 299, 318, 384, 385, 394, 431], "dynamicdequant": [43, 188, 285], "dynamicquant": [43, 188, 285], "apart": 43, "group_shap": [43, 76, 186], "scale_k": 43, "zp_k": 43, "scale_v": 43, "zp_v": 43, "dt_fp": 43, "dt_int": 43, "c_g": 44, "c_ghw": 44, "group_normalization_forward": [44, 257, 300, 348, 402, 484, 536], "scope": [45, 419], "preprocess": 45, "classifi": 45, "depict": [45, 151, 162], "conv_prim_descr": 45, "friendli": [45, 272, 370, 420, 431], "maxim": [45, 318], "accomplish": 45, "manner": [45, 306, 524], "don": [45, 54, 231, 239, 244, 272, 368, 378, 381, 431], "find": [45, 112, 113, 114, 115, 116, 158, 240, 241, 244, 248, 251, 255, 276, 277, 381, 386, 389, 438], "look": [45, 162], "source_mem_descr": 45, "dest_mem_descr": 45, "weights_mem_descr": 45, "weight_memori": 45, "conv_source_memori": 45, "user_source_memori": 45, "get_desc": [45, 160, 161, 227, 232, 233, 234, 235, 237, 238, 244, 245, 246, 247, 251, 252, 258, 259, 261, 263, 265, 266, 268, 272, 279, 280, 306, 352, 360, 369, 370, 371, 372, 375, 377, 381, 383, 384, 385, 389, 390, 404, 406, 410, 415, 419, 420, 423, 431, 440, 442, 522], "reorder_prim_descr": 45, "conv_weights_memori": [45, 231, 233, 234, 235, 239, 368, 370, 371, 372, 378], "conv_dest_memori": 45, "durat": 45, "grab": 45, "infus": 45, "cast": [45, 50, 121, 139, 254, 394], "distribut": [45, 147, 160, 161, 169, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "fed": [46, 157, 240, 241, 255, 276], "turn": [46, 162, 163, 394, 419], "predict": 46, "forward_train": [46, 48, 151, 163, 164, 207, 227, 228, 237, 252, 253, 257, 259, 260, 261, 262, 263, 267, 268, 271, 272, 273, 274, 279, 360, 362, 375, 390, 392, 402, 406, 408, 410, 413, 415, 421, 423, 429, 431, 432, 434, 440, 451, 455, 466, 472, 476, 486, 490, 498, 502, 506, 510, 514, 518, 528, 534, 549, 554, 558, 572], "suffix": [46, 394], "_train": 46, "versu": [46, 157], "_infer": 46, "answer": 46, "backward_data": [46, 164, 207, 453, 484, 500], "sens": [46, 179, 196, 244, 381], "backward_weight": [46, 164, 207], "solver": 46, "practic": [46, 142, 149, 163, 240, 241, 249, 255, 266, 276, 278, 370, 419, 420], "consider": [46, 381], "care": 46, "pooling_max": [46, 170, 232, 234, 235, 265, 267, 369, 371, 372, 419, 421, 526, 528], "slide": 46, "posit": [46, 47, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 86, 91, 92, 93, 94, 95, 101, 102, 134, 162, 230, 306, 334, 366], "Of": [46, 529], "cours": [46, 162, 529], "again": [46, 151], "takeawai": 46, "former": [46, 50, 158, 162], "invoc": 46, "techniqu": 46, "perspect": [46, 149, 162, 394], "varieti": 46, "emit": 46, "unnecessari": [46, 142, 419], "bullet": 46, "9": [46, 47, 49, 175, 221, 240, 241, 255, 276, 396, 397, 399, 400, 420], "pick": [46, 266, 419, 420], "occasion": 46, "brain": 46, "workflow": [46, 395, 396, 397, 398, 399, 400, 401, 438], "workspace_desc": [46, 144, 227, 228, 234, 235, 261, 262, 263, 267, 272, 279, 360, 362, 371, 372, 410, 413, 415, 421, 431, 440, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "perfectli": 46, "inde": 46, "fwd": 46, "forward_primitive_desc": 46, "workspace_md": [46, 209], "primitive_forward": 46, "anywher": [46, 394], "els": [46, 91, 92, 160, 161, 231, 234, 235, 237, 238, 239, 240, 241, 244, 252, 255, 266, 272, 276, 277, 368, 371, 372, 375, 377, 378, 381, 390, 394, 431, 438], "bwd": 46, "primitive_backward": 46, "push": [47, 246, 247], "recent": [47, 146, 157], "focus": [47, 50, 142, 381], "shrink": [47, 50, 244, 381], "throughput": [47, 142, 157], "eight": 47, "offer": [47, 157], "pack": [47, 54, 160, 161, 162, 197, 202, 219, 226, 238, 245, 258, 280, 306, 325, 326, 377, 383, 404, 405, 442, 443, 524, 566, 567, 568], "cost": [47, 272, 420, 431], "dataset": [47, 370], "establish": 47, "q_": 47, "255": [47, 50, 210, 258, 404], "r_": 47, "127": [47, 50, 149, 247, 385], "alpha_": 47, "lceil": [47, 150], "rceil": [47, 150], "w_": [47, 50, 150, 151], "roundnearesteven": 47, "approx": [47, 147], "approxim": [47, 169], "t_": 47, "15": [47, 50, 147, 162, 175, 242, 243, 379, 380], "17": [47, 147, 162, 420], "12": [47, 147, 163, 175, 179, 227, 241, 260, 263, 360, 397, 408, 415], "96": [47, 208, 231, 232, 234, 235, 239, 240, 255, 258, 259, 266, 276, 368, 371, 372, 378, 404, 406, 420], "bigl": 47, "bigr": 47, "238": 47, "187": 47, "66": 47, "88": 47, "net": [47, 49, 231, 232, 239, 246, 247, 272, 281, 368, 369, 370, 378, 384, 385, 431], "uniformli": 47, "g_0": 47, "o_1": 47, "i_2": 47, "h_3": 47, "w_4": 47, "walk": 47, "treat": [48, 50, 149, 153, 157], "minibatch": [48, 142, 306], "flatten": 48, "dnnl_io": [48, 179], "dnnl_oi": [48, 179], "dnnl_oiw": [48, 179], "dnnl_oihw": [48, 179, 231, 239, 368, 378], "dnnl_oidhw": [48, 179], "onednn_jit_dump": 49, "dnnl_set_jit_dump": [49, 281, 318], "dnnl_dump_cpu_jit_avx2_conv_fwd_kernel_f32": 49, "bin": 49, "dnnl_dump_cpu_jit_avx_gemv_t_f32_kern": 49, "30": [49, 244, 247, 248, 381, 385, 386], "disassembl": 49, "objdump": 49, "mi386": 49, "xed": 49, "ir": 49, "emul": 49, "sde": 49, "dnnl_dump_gpu_simple_reord": 49, "dnnl_dump_gpu_gen9_conv_fwd": 49, "iga64": 49, "assembli": 49, "emphas": 50, "signed": 50, "int8_t": [50, 244, 247, 258, 270, 280, 281, 291, 324, 348, 354, 381, 385, 404, 427, 442], "dnnl_gemm_u8s8s32": [50, 247, 281, 291], "averag": [50, 58, 144, 147, 169, 170, 308], "biggl": 50, "biggr": 50, "dnnl_gemm_s8s8s32": [50, 281, 291], "gru": [50, 169, 170, 179, 196, 261, 279, 317, 411, 440, 487, 488, 489, 490, 507, 508, 509, 510], "behind": [50, 162, 419], "xeon": [50, 171, 174, 412, 420], "e7": 50, "haswel": 50, "x1xx": 50, "skylak": 50, "vpmaddubsw": 50, "vpmaddwd": 50, "vpaddd": 50, "s16": 50, "int16_t": 50, "c_s32": [50, 244, 381], "a_u8": [50, 244, 258, 381, 404], "b_s8": [50, 244, 258, 280, 381, 404, 442], "u8s8s32_compute_avx512": 50, "ab_s16": 50, "vpmaddubsw_r": 50, "saturate_to_s16": 50, "caution": 50, "snippet": 50, "u8s8s32_comput": 50, "32767": 50, "int16_min": 50, "int16_max": 50, "64770": 50, "pitfal": [50, 162], "vpmovsxbw": 50, "vpmovzxbw": 50, "2x": 50, "occur": [50, 162, 164, 186], "u7": 50, "s7": 50, "63": [50, 147, 247, 288, 538], "worth": [50, 381, 394, 420], "data_": 50, "set_rnn_data_qparam": [50, 247, 385, 538], "set_rnn_weights_qparam": [50, 247, 385, 538], "128": [50, 160, 161, 163, 208, 210, 232, 238, 258, 264, 265, 266, 377, 404, 417, 419, 420], "w_max": 50, "x2xx": 50, "cascad": 50, "bring": 50, "vpdpbusd": 50, "u8s8s32_compute_avx512_dl_boost": 50, "real": [50, 149, 162, 179, 244, 381, 396, 397, 398, 399, 400, 401], "world": [50, 244, 381], "overcom": 50, "emploi": 50, "y_": 50, "a_s8": 50, "u8s8": 50, "s8s8s32_comput": 50, "32258": 50, "solv": [50, 160, 161, 238, 377], "overview": 50, "x_s8": 50, "precomput": [50, 246, 247, 370, 385], "embed": [50, 384, 385], "rescal": 50, "insignificantli": 50, "noth": [50, 160, 161, 238, 377], "meaningless": 50, "ia": 50, "volum": [50, 134, 306], "2a": 50, "2b": 50, "2c": [50, 246, 247], "325383": 50, "070u": 50, "futur": [50, 334], "319433": 50, "037": 50, "chapter": 50, "rodriguez": 50, "andr": 50, "et": 50, "al": 50, "white": 50, "paper": [50, 162], "2018": [50, 233, 246, 247, 272, 431], "axi": [51, 54, 64, 67, 68, 69, 71, 72, 73, 74, 76, 77, 84, 86, 91, 92, 93, 94, 97, 98, 110, 112, 113, 114, 115, 116, 117, 118, 126, 127, 135, 152, 153, 164, 186, 187, 209, 210, 236, 241, 273, 274, 281, 306, 319, 320, 373, 397, 432, 433, 434, 435, 541, 552, 554, 556, 558], "stat_desc": [51, 281, 303, 500, 502], "layer_normalization_forward": [51, 260, 303, 348, 408, 500, 536], "_ndim": 51, "_dim": [51, 54], "dnnl_tnc": [51, 151, 179], "dnnl_tn": [51, 179], "dnnl_nt": [51, 179], "dnnl_ldnc": [51, 151, 179], "unlik": [51, 76, 95, 121, 291, 324, 354, 399, 400, 482], "tnc": [51, 93, 94, 196, 227, 246, 247, 260, 261, 263, 272, 279, 360, 384, 385, 408, 410, 415, 431, 440], "dnnl_ntc": [51, 151, 179], "dnnl_bac": [51, 179, 196], "ldnc": [51, 93, 94, 196, 246, 247, 384, 385], "dnnl_type": [52, 162, 169, 173, 174, 178, 179, 199, 204, 206, 208, 210, 212, 214, 216, 218, 219, 480], "auxiliari": [52, 163, 254, 272, 394, 431], "dnnl_config": 52, "dnnl_version": [52, 281, 318], "dnnl_graph_typ": [52, 182, 187, 189, 191, 193, 481, 482], "dnnl_ukernel": [52, 160, 161, 226, 238, 377, 566, 567, 568], "dnnl_ukernel_typ": [52, 202], "libdnnl": [52, 147], "dnnl_library_typ": [52, 158], "dylib": 52, "bindnnl": 52, "dll": 52, "dnnlroot": 52, "getting_start": [52, 359, 394], "ldnnl": 52, "resolv": [52, 247, 384], "sure": [52, 54, 99, 160, 161, 238, 336, 377], "ld_library_path": 52, "dyld_library_path": 52, "rpath": 52, "appl": [52, 412], "secur": 52, "entitl": 52, "fly": [52, 394], "xcode": 52, "codesign": 52, "plist": 52, "xml": 52, "encod": [52, 164, 197, 209, 210, 219, 242, 243, 245, 246, 247, 306, 383, 384, 385, 524], "utf": 52, "doctyp": 52, "dtd": 52, "en": 52, "www": [52, 160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "propertylist": 52, "dict": 52, "eha": 52, "cl": [52, 147, 255, 256, 395, 399, 438], "microsoft": [52, 142, 158, 412], "msv": 52, "n_": 53, "local_s": [53, 231, 234, 235, 239, 262, 281, 304, 368, 371, 372, 378, 413, 512, 514], "12d": [54, 179, 196], "bs_0": 54, "bs_1": 54, "rng": [54, 312], "dnnl_runtime_dim_v": [54, 164, 248, 258, 281, 306, 307, 312, 323, 352, 353, 386, 387, 404, 405, 536, 544], "wildcard": [54, 188, 285, 306, 338], "hand": [54, 162, 179, 196, 306], "situat": [54, 420], "inconsist": [54, 163, 164], "being": [54, 149, 151, 199, 306, 313, 318, 395, 438, 524], "invalid": [54, 160, 161, 163, 164, 238, 310, 318, 333, 334, 377], "nd": [54, 108, 109, 162], "sake": [54, 162, 394], "prod_": 54, "mbox": [54, 145], "ax": [54, 91, 92, 99, 112, 113, 114, 115, 116, 117, 118, 145, 153, 164, 186, 187, 306, 524], "abc": [54, 196, 264, 306, 417, 524], "bac": [54, 196], "1x1x": 54, "x1": 54, "dnnl_arg_dropout_se": 54, "int_min": 54, "int_max": 54, "matric": [54, 159, 160, 164, 244, 248, 258, 280, 291, 324, 354, 381, 386, 404, 442], "sgemm": [54, 248, 291, 348, 354, 359, 387], "ge": [55, 78, 85, 95, 108], "diff": [56, 88, 160, 161, 199, 209, 234, 235, 238, 239, 244, 248, 272, 289, 294, 296, 297, 300, 301, 303, 304, 308, 309, 312, 316, 317, 319, 320, 371, 372, 377, 378, 381, 386, 431, 449, 453, 462, 464, 468, 470, 474, 484, 488, 494, 496, 500, 504, 508, 512, 516, 526, 532, 541, 547, 550, 552, 556, 570], "_dst": [56, 88], "rule": [57, 75, 85, 99, 100, 103, 106, 133, 136, 210], "auto_broadcast": [57, 75, 85, 100, 103, 106, 123, 133, 136, 186, 187], "numpi": [57, 75, 85, 100, 103, 106, 123, 133, 136, 186, 187, 306], "denom": [58, 144], "exclude_pad": [58, 59, 186, 187], "move": [58, 59, 68, 69, 70, 71, 72, 73, 101, 102, 162, 245, 383, 384, 385, 389, 478, 491, 522, 536, 560], "s64": [58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 84, 86, 91, 92, 93, 94, 97, 98, 101, 102, 110, 112, 113, 114, 115, 116, 117, 118, 126, 127, 134, 135], "pads_begin": [58, 59, 68, 69, 70, 71, 72, 73, 101, 102, 186, 187, 240, 241, 255, 276, 396, 397, 399, 400], "auto_pad": [58, 59, 68, 69, 70, 71, 72, 73, 101, 102, 186, 187], "same_upp": [58, 59, 68, 69, 70, 71, 72, 73, 101, 102, 186, 187], "same_low": [58, 59, 68, 69, 70, 71, 72, 73, 101, 102, 186, 187], "pads_end": [58, 59, 68, 69, 70, 71, 72, 73, 101, 102, 186, 187, 240, 241, 255, 276, 396, 397, 399, 400], "rounding_typ": [58, 101, 186, 187], "floor": [58, 69, 101, 186, 187], "data_format": [58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 86, 91, 92, 101, 102, 108, 109, 163, 186, 187, 240, 241, 255, 276, 396, 397, 399, 400, 482], "interpret": [58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 86, 91, 92, 99, 101, 102, 134], "ncx": [58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 86, 91, 92, 101, 102, 108, 109, 186, 187, 240, 255, 276, 396, 399, 400], "nxc": [58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 86, 91, 92, 101, 102, 108, 109, 186, 187, 241, 397, 482], "srcshape": 59, "src_shape": [59, 91, 92, 186], "epsilon": [60, 61, 62, 86, 93, 94, 186, 187, 209, 210, 248, 260, 281, 289, 300, 303, 386, 408, 453, 455, 484, 486, 500, 502, 541, 543], "momentum": [60, 186, 187], "neither": [60, 62, 303, 389, 394, 395, 438, 500, 502], "running_mean": 60, "running_vari": 60, "batch_mean": 60, "batch_vari": 60, "batchnorminfer": [60, 188, 283, 285], "diff_gamma": [62, 94], "diff_beta": [62, 94], "biasadd": [64, 188, 240, 255, 276, 283, 285, 396, 399, 400], "_valu": 65, "clamp": [66, 188, 283, 285], "use_dst": [66, 79, 120, 125, 131, 138, 186, 187], "rank": [67, 74, 76, 77, 84, 93, 94, 99, 110, 112, 113, 114, 115, 116, 117, 118], "weights_format": [68, 69, 70, 71, 72, 73, 186, 187, 240, 241, 255, 276, 396, 397, 399, 400], "oix": [68, 69, 70, 71, 72, 73, 186, 187, 240, 255, 276, 396, 399, 400], "fist": 68, "stretch": [68, 69, 70, 71, 72, 73], "xio": [68, 69, 70, 71, 72, 73, 186, 187, 241, 397], "_channel": [68, 69, 70, 71, 72, 73], "_shape": [68, 69, 70, 71, 72, 73, 109], "firstli": [69, 99], "_pad": 69, "_h": 69, "_padding_h": 69, "output_pad": [69, 71, 72, 73, 186, 187], "dst_shape": [69, 91, 92, 123, 186, 187], "weights_shap": [70, 73, 186], "iox": [71, 72, 73, 186, 187], "xoi": [71, 72, 73, 186, 187], "zp": [74, 76, 77, 110, 186, 187, 241, 244, 381, 397], "zps_i": [74, 76, 77], "scale_i": [74, 110], "qtype": [74, 76, 77, 110, 186, 187, 241, 397], "per_tensor": [74, 76, 77, 110, 186, 187, 241, 397], "per_channel": [74, 76, 77, 108, 110, 186, 187, 241, 397], "scales_i": [76, 77], "channelnum": [76, 77, 112, 113, 114, 115, 116, 117, 118], "gx1": 76, "groupnum": 76, "zps_j": 76, "scales_j": 76, "groupsiz": 76, "gropup": 76, "src_dim": [76, 227, 228, 230, 236, 237, 245, 252, 253, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 279, 360, 362, 366, 373, 375, 383, 390, 392, 402, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 432, 434, 436, 440], "group_siz": [76, 152, 273, 281, 319, 432, 552, 554], "exponenti": [81, 169, 170], "sqrt2": 82, "y": 86, "coeffici": [86, 95], "keep_stat": [86, 93, 186, 187], "use_affin": [86, 93, 94, 186, 187], "modul": [86, 93, 94, 147], "1e": [86, 93, 94, 244, 381], "span": [86, 93, 94], "_src": 88, "bilinear": [91, 92, 170, 186, 187, 316], "trilinear": [91, 92, 150, 170, 186, 187, 316], "coordinate_transformation_mod": [91, 92, 186, 187], "coordin": [91, 92, 197, 219], "resiz": [91, 92, 245, 383], "half_pixel": [91, 92, 186, 187], "align_corn": [91, 92, 186, 187], "x_resiz": [91, 92], "differenti": [91, 143, 158, 340], "begin_norm_axi": [93, 94, 186, 187], "layernorm": [94, 188, 283, 285], "small": [95, 142, 159, 160, 164, 420], "leakag": 95, "logarithm": [96, 169, 170], "formul": [97, 128, 129, 394], "dst_i": [97, 126, 133], "big": 97, "src_j": [97, 126], "logsoftmax": [98, 153, 169, 170, 188, 285], "unsqueez": 99, "transpose_a": [99, 186, 187, 249, 278, 398, 401], "transpose_b": [99, 186, 187, 249, 278, 398, 401], "_0": [100, 103], "distanc": [101, 102], "avgpoolbackward": [102, 188, 285], "softplu": [104, 129, 188, 283, 285], "ln": [104, 128, 153], "diff_": [105, 151], "3src": 105, "2src": 105, "parametr": 108, "per_channel_broadcast": [108, 186, 187], "uni": [108, 109, 163, 246, 247, 419, 420], "direction": [108, 109], "rightmost": [108, 272, 431], "shape_i": 108, "_forward": 109, "diff_slop": 109, "zp_i": 110, "infin": [111, 126], "l1": [112, 147], "norm": [112, 113, 148, 169, 244, 248, 381, 386], "keep_dim": [112, 113, 114, 115, 116, 117, 118, 186, 187], "shapeof": [112, 113, 114, 115, 116, 117, 118], "l2": [113, 147, 244, 381], "root": [113, 130, 148, 169, 170], "cond": 123, "invalid_shap": [123, 192], "inf_as_zero": [126, 186, 187], "_0_i": 133, "_1_i": 133, "special_zero": [134, 186, 187], "keep": [134, 157, 159, 162, 185, 193, 210, 234, 235, 239, 272, 369, 371, 372, 378, 420, 431], "overal": [134, 162, 283, 420], "permut": [135, 179, 196, 281, 306, 524], "dnnl_ocl": [141, 200, 255, 256, 395, 399], "cl_mem": [141, 256, 281, 306, 307, 352, 394, 395, 522], "get_command_queu": [141, 256, 352, 395], "get_mem_object": [141, 256, 352, 395], "retain": 141, "destruct": [141, 524, 530, 538], "measur": [142, 163, 370], "affinit": 142, "tbb": [142, 147], "intention": 142, "nor": [142, 303, 389, 394, 395, 438, 500, 502], "principl": 142, "numactl": 142, "easi": 142, "modern": 142, "socket": [142, 420], "chip": 142, "tile": 142, "cluster": 142, "setup": [142, 147], "among": [142, 147, 338], "orient": 142, "latenc": [142, 147], "server": 142, "interleav": [142, 159], "chanc": 142, "traffic": 142, "omp_proc_bind": 142, "spread": 142, "omp_plac": 142, "omp_num_thread": [142, 420], "membind": 142, "cpunodebind": 142, "physcpubind": 142, "kmp_hw_subset": 142, "1t": 142, "costli": 143, "mitig": [143, 146, 247], "blob": [143, 209, 210, 281, 306, 307, 312, 339, 350, 352, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 524, 525, 527, 531, 533, 536, 541, 542, 544, 546, 548, 551, 553, 555, 557, 561, 569, 571], "commit": [143, 163, 318], "hash": [143, 163, 318, 419, 573], "dnnl_version_t": [143, 281, 318, 348], "packag": [143, 158], "fetch": 143, "primitive_desc_bas": [143, 312, 348, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_cache_blob_id": [143, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_cache_blob": [143, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 525, 527, 531, 533, 536, 542, 544, 546, 548, 551, 553, 555, 557, 561, 569, 571], "cache_miss": [143, 163], "cache_hit": [143, 163], "persistent_cache_hit": [143, 163], "store_cache_blob_on_disk": 143, "load_cache_blob_from_disk": 143, "conv_from_cache_blob": 143, "get_engine_cache_blob_id": [143, 352], "get_engine_cache_blob": [143, 352], "ocl_engin": 143, "get_blob": [143, 524], "deseri": 143, "dnnl_pooling_avg_include_pad": [144, 169, 170, 308], "dnnl_pooling_avg_exclude_pad": [144, 169, 170, 308], "nice": 144, "restor": 144, "itself": [144, 312, 394, 540, 560], "dnnl_pooling_max": [144, 169, 170, 231, 239, 308, 368, 378], "flt_max": 144, "dbl_max": 144, "area": [144, 163, 306, 524], "leaki": [145, 309], "trainabl": [145, 309], "Its": 145, "weights_md": [145, 209, 231, 264, 268, 368, 417, 423, 541], "repeat": [146, 419], "capac": [146, 281, 310, 333, 334, 348, 349], "exceed": [146, 164], "evict": [146, 310, 333], "hit": 146, "miss": [146, 147, 163, 186, 232, 234, 235, 246, 247, 369, 371, 372], "profile_cr": [146, 163], "onednn_primitive_cache_capac": 146, "dnnl_set_primitive_cache_capac": [146, 281, 310], "notifi": 147, "address": [147, 159, 162, 272, 339, 431], "onednn_jit_profil": 147, "tsc": [147, 318], "dnnl_set_jit_profiling_flag": [147, 281, 318], "box": 147, "overrid": [147, 155, 318], "dnnl_set_jit_profiling_jitdumpdir": [147, 281, 318], "timelin": 147, "chart": 147, "fp": [147, 288, 299, 318], "onednn_itt_task_level": 147, "trigger": [147, 420], "master": [147, 157], "amplx": 147, "knob": 147, "shapes_alexnet": 147, "nmi": 147, "watchdog": 147, "timer": 147, "impl": [147, 155, 164], "prb": 147, "gop": 147, "gfreq": 147, "gflop": 147, "0time": 147, "0gflop": 147, "avx512_common": [147, 420], "alexnet": [147, 231, 232, 233, 234, 235, 239, 368, 369, 370, 371, 372, 378], "conv1": [147, 232, 240, 255, 276, 368, 369, 396, 399, 400], "g1mb256ic3ih227oc96oh55kh11sh4ph0n": 147, "53": 147, "9726": 147, "4285": 147, "3096": 147, "81": 147, "5851": 147, "2389": 147, "74": 147, "conv2": [147, 232, 368, 369], "g2mb256ic96ih27oc256oh27kh5ph2n": 147, "104": 147, "696": 147, "20": [147, 244, 248, 257, 338, 381, 386, 402], "2195": 147, "5177": 147, "98": 147, "21": [147, 420], "9233": 147, "4775": 147, "56": [147, 241], "conv3": [147, 232, 233, 370], "mb256ic256ih13oc384oh13kh3ph1n": 147, "68": 147, "904": 147, "5134": 147, "4441": 147, "57": 147, "18": [147, 163, 420], "1391": 147, "3798": 147, "conv4": [147, 232], "g2mb256ic384ih13oc384oh13kh3ph1n": 147, "51": 147, "678": 147, "7397": 147, "4401": 147, "97": [147, 163], "4623": 147, "4146": 147, "76": 147, "conv5": [147, 232], "g2mb256ic384ih13oc256oh13kh3ph1n": 147, "34": 147, "452": 147, "77148": 147, "4433": 147, "13": [147, 175, 179, 232, 233, 237, 252, 254, 370, 375, 390, 394], "50435": 147, "4051": 147, "skip": [147, 160, 161, 164, 238, 306, 326, 377, 398, 401, 522, 567], "mistrust": 147, "72": [147, 273, 432], "6726": 147, "avg": 147, "83": 147, "6142": 147, "10": [147, 157, 175, 221, 227, 228, 229, 230, 231, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 281, 360, 362, 364, 366, 368, 373, 375, 378, 381, 383, 386, 390, 392, 394, 396, 397, 399, 400, 402, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 432, 434, 436, 440], "csv": 147, "_jit_avx512_common_conv_fwd_kernel": 147, "300": 147, "128503": 147, "293": 147, "946143": 147, "285": 147, "549830": 147, "268": 147, "868599": 147, "256": [147, 232, 233, 241, 246, 247, 257, 264, 265, 281, 370, 402, 417, 419], "715527": 147, "libgomp": 147, "func": [147, 234, 235, 239, 371, 372, 378], "0x194f0": 147, "186": 147, "604226": 147, "0x19370": 147, "82": 147, "609694": 147, "jit_avx512_co": 147, "35": 147, "682241": 147, "vmlinux": 147, "763433": 147, "1451": 147, "459338": 147, "outsid": [147, 324, 400, 401], "280": 147, "489764": 147, "434821": 147, "interv": 147, "2000": 147, "ue": 147, "2344": 147, "3131": 147, "24": [147, 162], "1246": 147, "2237": 147, "2988": 147, "5157": 147, "6731": 147, "4617": 147, "5369": 147, "4434": 147, "87": 147, "1371": 147, "4020": 147, "75": [147, 231, 232, 234, 235, 239, 368, 371, 372, 378], "428": 147, "4522": 147, "06": 147, "7986": 147, "4037": 147, "79": 147, "64233": 147, "4508": 147, "05": 147, "99841": 147, "3828": 147, "1404": 147, "85": 147, "7318": 147, "dtlb": 147, "lock": 147, "4k": 147, "fb": 147, "26": [147, 227, 263, 360, 415], "icach": 147, "micro": [147, 159], "itlb": 147, "bad": [147, 164], "specul": 147, "l3": 147, "dram": 147, "frequenc": 147, "clocktick": 147, "retir": 147, "cpi": 147, "rate": [147, 163], "x87": 147, "microcod": 147, "assist": 147, "jitdump": [147, 318], "perfmap": [147, 318], "jitdumpdir": [147, 318], "record": [147, 240, 241, 255, 276], "k1": [147, 232], "mb1ic32ih14oc32oh14kh3ph1n": 147, "resnet_50": 147, "res4a_branch2b": 147, "mb1ic32ih14oc32oh14kh3ph1nresnet_50": 147, "0032768": 147, "0131836": 147, "248": 147, "551": 147, "0262988": 147, "124": [147, 149], "599": 147, "woken": 147, "captur": [147, 479], "wrote": 147, "884": 147, "23102": 147, "inject": 147, "displai": [147, 163, 164], "stdio": [147, 231, 239, 250, 368, 378, 388], "n20": 147, "lost": 147, "23k": 147, "uhh": 147, "5775500000": 147, "symbol": [147, 158], "39": 147, "33": 147, "0x000000000001d8ba": 147, "29": 147, "41": [147, 420], "31475": 147, "jit_avx2_conv_fwd_kernel_f32": 147, "49": 147, "0x000000000001d712": 147, "47": 147, "jit_avx2_convolution_fwd_t": 147, "execute_forward": 147, "exec_ctx_t": 147, "lambda": 147, "52": 147, "0x000000000001d8be": 147, "93": 147, "0x000000000001d716": 147, "0x000000000001d8c5": 147, "55": [147, 231, 232, 234, 235, 239, 266, 368, 371, 372, 378, 420], "0x000000000001d8c3": 147, "0x000000000001d71d": 147, "resolut": 147, "disassembli": 147, "brendan": 147, "gregg": 147, "excel": 147, "mathop": 148, "mul": [148, 169, 170, 314], "idl": 148, "ep": [148, 281, 314, 543], "kept": [149, 162, 179, 312, 540], "dnnl_arg_from": [149, 231, 232, 233, 234, 235, 239, 247, 250, 265, 281, 312, 368, 369, 370, 371, 372, 378, 385, 388, 419], "dnnl_arg_to": [149, 231, 232, 233, 234, 235, 239, 247, 250, 265, 281, 312, 368, 369, 370, 371, 372, 378, 385, 388, 419], "encount": [149, 163, 164, 369], "bug": [149, 190, 191], "team": 149, "dnnl_s8": [149, 175, 183, 194], "dnnl_f32": [149, 162, 175, 179, 183, 194, 231, 239, 250, 326, 368, 378, 388], "allevi": [149, 248, 386], "dt_src": 149, "memory_format": 149, "fmt_src": 149, "dt_dst": 149, "fmt_dst": 149, "upsampl": [150, 267, 421], "downsampl": 150, "f_h": 150, "f_w": 150, "ih_0": 150, "iw_0": 150, "ih_1": 150, "iw_1": 150, "nchw16c": [150, 162, 196], "_spatial": 150, "_size": 150, "unrol": 151, "srciter": 151, "dstiter": 151, "evalu": 151, "left2right": 151, "increas": [151, 157, 420], "right2left": 151, "decreas": [151, 153, 420], "bidirectional_concat": [151, 211, 246, 247, 384, 385], "dstlayer": 151, "bidirectional_sum": [151, 211], "srclayer": 151, "h_": [151, 169, 170], "And": [151, 162, 306, 524], "vanilla_rnn_forward": [151, 279, 317, 348, 440, 536, 538, 570], "vanilla_rnn_backward": [151, 317, 348, 536], "vanilla_rnn_pd": [151, 279, 440], "aprop": 151, "src_layer_desc": [151, 247, 272, 281, 317, 385, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "src_iter_desc": [151, 227, 261, 263, 272, 279, 281, 317, 360, 410, 415, 431, 440, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "weights_layer_desc": [151, 246, 247, 272, 281, 317, 384, 385, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "weights_iter_desc": [151, 227, 246, 247, 261, 263, 272, 279, 281, 317, 360, 384, 410, 415, 431, 440, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "bias_desc": [151, 233, 234, 272, 281, 294, 296, 301, 305, 317, 370, 371, 431, 449, 451, 466, 472, 488, 490, 498, 504, 506, 508, 510, 516, 518, 520, 550, 570, 572], "dst_layer_desc": [151, 246, 247, 272, 281, 317, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "dst_iter_desc": [151, 227, 261, 263, 272, 279, 281, 317, 360, 410, 415, 431, 440, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "a_t": [151, 247], "h_t": 151, "lstm_forward": [151, 246, 247, 263, 272, 317, 348, 384, 385, 415, 431, 516, 536], "lstm_backward": [151, 272, 317, 348, 431, 536], "lstm_pd": [151, 263, 415], "src_iter_h_desc": 151, "src_iter_c_desc": [151, 263, 272, 281, 317, 415, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "dst_iter_h_desc": 151, "dst_iter_c_desc": [151, 263, 272, 281, 317, 415, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "i_t": 151, "w_i": 151, "u_i": 151, "b_i": [151, 160], "f_t": 151, "w_f": 151, "u_f": 151, "b_f": 151, "c_t": [151, 169, 170], "u_": 151, "b_": [151, 169, 170], "o_t": 151, "w_o": 151, "u_o": 151, "b_o": 151, "weightslay": 151, "weightsit": 151, "srciterc": 151, "dstiterc": 151, "weights_peephole_desc": [151, 281, 317, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "p_i": 151, "p_f": 151, "p_o": 151, "p_": 151, "weights_peephol": 151, "weights_projection_desc": [151, 281, 317, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "weights_project": 151, "gru_forward": [151, 317, 348, 488, 536], "gru_backward": [151, 317, 348, 536], "gru_pd": 151, "u_t": 151, "w_u": 151, "u_u": 151, "b_u": 151, "r_t": [151, 169, 170], "w_r": 151, "u_r": 151, "b_r": 151, "lbr_gru_forward": [151, 261, 317, 348, 410, 508, 536], "lbr_gru_backward": [151, 317, 348, 536], "lbr_gru_pd": [151, 261, 410], "rsquo": 151, "augru_forward": [151, 227, 317, 348, 360, 449, 536], "augru_backward": [151, 317, 348, 536], "augru_pd": [151, 227, 360], "attention_desc": [151, 281, 317, 449, 451, 504, 506], "lbr_augru_forward": [151, 317, 348, 504, 536], "lbr_augru_backward": [151, 317, 348, 536], "lbr_augru_pd": 151, "diffweightslay": 151, "diffweightsit": 151, "diffweightspeephol": 151, "diffweightsproject": 151, "diff_weights_overwrit": [151, 213], "dnnl_arg_src_lay": [151, 227, 246, 247, 261, 263, 272, 279, 281, 312, 360, 384, 385, 410, 415, 431, 440], "srclayerattent": 151, "dnnl_arg_src_layer_attent": 151, "dnnl_arg_src_it": [151, 227, 246, 247, 261, 263, 272, 279, 281, 312, 360, 384, 410, 415, 431, 440], "dnnl_arg_src_iter_c": [151, 246, 247, 263, 272, 281, 312, 384, 415, 431], "dnnl_arg_weights_lay": [151, 227, 246, 247, 261, 263, 272, 279, 281, 312, 360, 384, 385, 410, 415, 431, 440], "dnnl_arg_weights_it": [151, 227, 246, 247, 261, 263, 272, 279, 281, 312, 360, 384, 385, 410, 415, 431, 440], "weightspeephol": 151, "dnnl_arg_weights_peephol": [151, 281, 312], "weightsproject": 151, "dnnl_arg_weights_project": [151, 281, 312], "dnnl_arg_dst_lay": [151, 227, 246, 247, 261, 263, 272, 279, 281, 312, 360, 384, 385, 410, 415, 431, 440], "dnnl_arg_dst_it": [151, 227, 246, 247, 261, 263, 272, 279, 281, 312, 360, 384, 410, 415, 431, 440], "dnnl_arg_dst_iter_c": [151, 246, 247, 263, 272, 281, 312, 384, 415, 431], "dnnl_workspac": 151, "diffsrclay": 151, "dnnl_arg_diff_src_lay": [151, 272, 281, 312, 431], "diffsrclayerattent": 151, "dnnl_arg_diff_src_layer_attent": 151, "diffsrcit": 151, "dnnl_arg_diff_src_it": [151, 272, 281, 312, 431], "diffsrciterc": 151, "dnnl_arg_diff_src_iter_c": [151, 272, 281, 312, 431], "dnnl_arg_diff_weights_lay": [151, 272, 281, 312, 431], "dnnl_arg_diff_weights_it": [151, 272, 281, 312, 431], "dnnl_arg_diff_weights_peephol": [151, 281, 312], "dnnl_arg_diff_weights_project": [151, 281, 312], "diffdstlay": 151, "dnnl_arg_diff_dst_lay": [151, 272, 281, 312, 431], "diffdstit": 151, "dnnl_arg_diff_dst_it": [151, 272, 281, 312, 431], "diffdstiterc": 151, "dnnl_arg_diff_dst_iter_c": [151, 272, 281, 312, 431], "With": [151, 157, 438], "dnnl_ldgo": [151, 179], "dnnl_ldigo": [151, 179], "dnnl_ldio": [151, 179], "dnnl_ldgoi": [151, 179], "dnnl_ldoi": [151, 179], "markdown": 151, "thought": 152, "formal": 152, "ug": 152, "nu": 153, "request": [153, 160, 161, 192, 220, 221, 238, 298, 306, 312, 313, 339, 353, 377, 541], "minor": [153, 318, 573], "piec": [153, 160, 161, 238, 306, 312, 377], "ulp": 153, "bigger": [154, 162], "dnnl_threadpool_ifac": [155, 563], "test_thread": 155, "threadpool_t": 155, "threadpool_interop": [155, 281, 286, 324, 348], "threadpool_ifac": [155, 354], "nonblockingthreadpool": 155, "unique_ptr": 155, "tp_": 155, "num_thread": 155, "hardware_concurr": 155, "get_num_thread": [155, 563], "numthread": 155, "get_in_parallel": [155, 563], "currentthreadid": 155, "get_flag": [155, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 563, 570, 572], "asynchron": [155, 389, 395, 419, 438, 563], "parallel_for": [155, 277, 438, 563], "fn": [155, 563], "nthr": [155, 163], "njob": 155, "schedul": 155, "balance211": 155, "new_content_goes_her": 156, "idea": [157, 162, 381], "spot": 157, "trade": 157, "site": [157, 479], "themselv": [157, 162, 240, 241, 249, 255, 276, 278, 394, 396, 397, 398, 399, 400, 401, 482], "afterward": 157, "incompat": [158, 164], "migrat": [158, 217, 218], "mkldnn": 158, "substr": [158, 164], "renam": 158, "macro": [158, 281], "v1": [158, 163, 244, 248, 381, 386], "mkldnn_memory_desc_t": 158, "md": [158, 162, 164, 236, 275, 373, 394, 420, 436, 522, 524], "mkldnn_block": 158, "exec": [158, 163, 256, 277, 419, 420], "mkldnn_args_src": 158, "dnnl_block": [158, 178, 195, 306, 524], "dnnl_args_src": 158, "mkldnn_dnnl_mangl": 158, "preprocessor": 158, "mkldnn_memory_desc_init_by_tag": 158, "dnnl_memory_desc_init_by_tag": 158, "mkldnn_arch_opt_flag": 158, "dnnl_arch_opt_flag": 158, "mkldnn_build_exampl": 158, "dnnl_build_exampl": 158, "mkldnn_build_for_ci": 158, "dnnl_build_for_ci": 158, "mkldnn_build_test": 158, "dnnl_build_test": 158, "mkldnn_cpu_runtim": 158, "dnnl_cpu_runtim": 158, "mkldnn_enable_concurrent_exec": 158, "dnnl_enable_concurrent_exec": [158, 217, 218], "mkldnn_enable_jit_profil": 158, "dnnl_enable_jit_profil": 158, "mkldnn_gpu_backend": 158, "dnnl_gpu_backend": 158, "mkldnn_gpu_runtim": 158, "mkldnn_install_mod": 158, "dnnl_install_mod": 158, "mkldnn_library_typ": 158, "mkldnn_thread": 158, "dnnl_thread": 158, "mkldnn_use_clang_sanit": 158, "dnnl_use_clang_sanit": 158, "mkldnn_verbos": 158, "dnnl_verbos": 158, "mkldnn_werror": 158, "dnnl_werror": 158, "find_packag": 158, "target_link_librari": 158, "project_app": 158, "Or": 158, "inclus": 158, "add_subdirectori": 158, "dnnl_dir": 158, "include_directori": 158, "thing": [158, 394, 419], "recompil": 158, "patch": [158, 318, 573], "region": [159, 306, 524], "consecut": [159, 306, 524], "granular": [159, 420], "fundament": 159, "freez": 159, "hoist": 159, "loop": [159, 160, 161, 238, 377], "brgemm": [160, 161, 238, 281, 286, 325, 355, 458, 491, 582], "a_i": [160, 247], "_arg": 160, "shall": 160, "express": [160, 161, 163, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 396, 399, 400, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "pack_typ": [160, 161, 238, 281, 326, 328, 355, 377, 567, 568], "get_b_pack_typ": [160, 161, 238, 377, 567], "no_tran": [160, 161, 226, 238, 377, 568], "copyright": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "2024": [160, 161, 238, 240, 241, 242, 249, 252, 255, 261, 265, 266, 276, 277, 278, 279, 280, 377, 379, 390, 410, 440, 442], "2025": [160, 161, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 248, 252, 253, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 360, 362, 364, 366, 371, 372, 373, 375, 377, 379, 380, 381, 383, 386, 390, 392, 402, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440], "corpor": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 412, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "licens": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "apach": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "law": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "agre": [160, 161, 210, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "AS": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "basi": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "warranti": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "OF": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "permiss": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 402, 404, 406, 408, 410, 412, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "cmath": [160, 161, 227, 228, 229, 230, 234, 236, 237, 238, 242, 243, 244, 245, 248, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 279, 280, 360, 362, 364, 366, 371, 373, 375, 377, 379, 380, 381, 383, 386, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 432, 434, 436, 440, 442], "iostream": [160, 161, 227, 228, 229, 230, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 371, 373, 375, 377, 379, 380, 381, 383, 386, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 421, 427, 429, 432, 434, 436, 438, 440, 442], "example_util": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 388, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442], "brgemm_exampl": [160, 161, 238, 281, 377], "engine_stream": [160, 161, 227, 228, 229, 230, 236, 237, 238, 245, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 279, 360, 362, 364, 366, 373, 375, 377, 383, 390, 392, 394, 402, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 432, 434, 436, 440], "k_k": [160, 161, 238, 377], "48": [160, 161, 232, 238, 377], "printf": [160, 161, 231, 238, 239, 244, 248, 250, 368, 377, 378, 381, 386, 388], "n_call": [160, 161, 238, 377], "a_dt": [160, 161, 238, 281, 326, 377, 567], "b_dt": [160, 161, 238, 281, 326, 377, 567], "c_dt": [160, 161, 238, 281, 326, 377, 567], "d_dt": [160, 161, 238, 281, 326, 377, 567], "ldb": [160, 161, 238, 248, 281, 291, 324, 326, 348, 354, 377, 386, 567], "need_pack": [160, 161, 238, 377], "pack32": [160, 161, 226, 238, 377], "catch": [160, 161, 233, 234, 238, 245, 247, 254, 277, 371, 377, 383, 385, 394, 438], "example_allows_unimpl": [160, 161, 227, 233, 234, 238, 245, 247, 281, 360, 371, 377, 383, 385], "lda": [160, 161, 238, 248, 281, 291, 324, 326, 348, 354, 377, 386, 567], "n_block": [160, 161, 238, 377], "ldc": [160, 161, 238, 248, 281, 291, 324, 326, 348, 354, 377, 386, 567], "ldd": [160, 161, 238, 281, 326, 377, 567], "batch_siz": [160, 161, 238, 281, 326, 377, 567], "a_dim": [160, 161, 238, 377], "b_dim": [160, 161, 238, 377], "c_dim": [160, 161, 238, 377], "d_dim": [160, 161, 238, 377], "binary_add_dim": [160, 161, 238, 377], "b_scales_dim": [160, 161, 238, 377], "a_user_data": [160, 161, 238, 377], "b_user_data": [160, 161, 238, 377], "binary_add_user_data": [160, 161, 238, 377], "b_scales_user_data": [160, 161, 238, 377], "d_data": [160, 161, 238, 377], "d_user_data": [160, 161, 238, 377], "sign_gen": [160, 161, 238, 377], "val": [160, 161, 238, 377], "holder": [160, 161, 238, 377], "a_f32_md": [160, 161, 238, 377], "b_f32_md": [160, 161, 238, 377], "binary_add_f32_md": [160, 161, 238, 377], "b_scales_f32_md": [160, 161, 238, 377], "d_f32_md": [160, 161, 238, 377], "a_f32_mem": [160, 161, 238, 280, 281, 377, 442], "b_f32_mem": [160, 161, 238, 258, 280, 377, 404, 442], "binary_add_f32_mem": [160, 161, 238, 377], "b_scales_f32_mem": [160, 161, 238, 377], "d_f32_mem": [160, 161, 238, 377], "a_md": [160, 161, 238, 244, 248, 258, 280, 377, 381, 386, 404, 442], "b_md": [160, 161, 238, 244, 248, 258, 280, 377, 381, 386, 404, 442], "binary_add_md": [160, 161, 238, 377], "b_scales_md": [160, 161, 238, 377], "c_md": [160, 161, 238, 244, 248, 258, 280, 377, 381, 386, 404, 442], "d_md": [160, 161, 238, 377], "a_mem": [160, 161, 238, 377], "b_mem": [160, 161, 238, 377], "binary_add_mem": [160, 161, 238, 377], "b_scales_mem": [160, 161, 238, 377], "c_mem": [160, 161, 238, 377], "d_mem": [160, 161, 238, 377], "a_ptr": [160, 161, 238, 281, 326, 377], "reinterpret_cast": [160, 161, 238, 377], "b_ptr": [160, 161, 238, 281, 326, 377], "a_dt_siz": [160, 161, 238, 377], "data_type_s": [160, 161, 238, 377, 522], "b_dt_size": [160, 161, 238, 377], "c_ptr": [160, 161, 238, 281, 326, 377], "brgemm_op": [160, 161, 238, 377], "brg": [160, 161, 163, 238, 377], "brg_po": [160, 161, 238, 377], "reusabl": [160, 161, 238, 377], "set_add_c": [160, 161, 238, 377, 567], "set_b_scal": [160, 161, 238, 377, 566, 567], "servic": [160, 161, 238, 286, 292, 377], "scratchpad_s": [160, 161, 238, 377], "get_scratchpad_s": [160, 161, 238, 377, 567], "b_block": [160, 161, 238, 377], "b_base_ptr": [160, 161, 238, 377], "blocked_b_s": [160, 161, 238, 377], "vnni": [160, 161, 238, 377], "bfloat16_t": [160, 161, 238, 377], "incorpor": [160, 161, 238, 377, 420], "pack_b": [160, 161, 238, 377], "in_pack_typ": [160, 161, 238, 281, 326, 377, 568], "in_ld": [160, 161, 238, 281, 326, 377, 568], "out_ld": [160, 161, 238, 281, 326, 377, 568], "in_dt": [160, 161, 238, 281, 326, 377, 568], "out_dt": [160, 161, 238, 281, 326, 377, 568], "a_b_offset": [160, 161, 238, 281, 326, 377, 567], "a_offset_i": [160, 161, 238, 377], "b_offset_i": [160, 161, 238, 377], "make_pair": [160, 161, 238, 377], "set_hw_context": [160, 161, 238, 377, 567], "a_b": [160, 161, 238, 377], "acc_ptr": [160, 161, 238, 377], "a_b_po_offset": [160, 161, 238, 377], "a_offset_po": [160, 161, 238, 377], "b_offset_po": [160, 161, 238, 377], "emplace_back": [160, 161, 238, 377], "put": [160, 161, 234, 235, 238, 307, 352, 371, 372, 377], "sit": [160, 161, 238, 377], "bin_po_ptr": [160, 161, 238, 377], "push_back": [160, 161, 232, 234, 235, 236, 238, 246, 247, 275, 369, 371, 372, 373, 377, 384, 385, 436], "attr_param": [160, 161, 238, 281, 325, 326, 328, 355, 377, 491, 567], "set_post_ops_arg": [160, 161, 238, 377, 566], "is_execute_postops_valid": [160, 161, 238, 377, 567], "release_hw_context": [160, 161, 238, 377, 567], "clean": [160, 161, 231, 238, 239, 250, 368, 377, 378, 388, 420], "delet": [160, 161, 238, 377, 491], "verif": [160, 161, 238, 377], "uncondit": [160, 161, 238, 377], "user_d_mem": [160, 161, 238, 377], "saniti": [160, 161, 238, 254, 258, 377, 394, 404], "pop": [160, 161, 238, 377], "to_throw": [160, 161, 238, 377], "fabsf": [160, 161, 238, 377], "19e": [160, 161, 238, 377], "12g": [160, 161, 238, 377], "runtime_error": [160, 161, 192, 220, 238, 242, 243, 318, 377, 379, 380], "argc": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 390, 392, 394, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442], "char": [160, 161, 210, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 291, 318, 324, 340, 348, 354, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 479, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572, 573, 574], "argv": [160, 161, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 360, 362, 364, 366, 368, 371, 372, 373, 375, 377, 378, 379, 380, 381, 383, 386, 390, 392, 394, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442], "handle_example_error": [160, 161, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 360, 362, 364, 366, 371, 372, 373, 375, 377, 379, 380, 381, 383, 386, 390, 392, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "analyz": 162, "facilit": 162, "articl": [162, 420], "devot": 162, "multidimension": 162, "interchang": 162, "focu": 162, "phase": [162, 288, 530], "simpler": 162, "chw": 162, "displac": 162, "jump": 162, "plane": 162, "offset_nchw": 162, "adjac": 162, "border": 162, "contrari": [162, 381, 395, 438], "pixel": [162, 254, 394], "bvlc": 162, "caff": 162, "dnnl_format_tag_t": [162, 196, 231, 239, 281, 306, 348, 368, 378, 522], "quit": [162, 248, 254, 386, 394], "offset_nhwc": 162, "hwc": 162, "wc": 162, "bmp": 162, "color": 162, "24bit": 162, "recognit": 162, "outer": [162, 179], "offset_chwn": 162, "hwn": 162, "wn": 162, "dnnl_chwn": [162, 179], "artifici": 162, "disjoint": 162, "trivial": [162, 164, 529], "tip": 162, "stride_n": [162, 254, 394], "stride_c": [162, 254, 394], "stride_h": [162, 254, 394], "stride_w": [162, 254, 394], "dnnl_dims_t": [162, 179, 210, 231, 239, 250, 281, 288, 294, 295, 296, 306, 308, 338, 368, 378, 388, 482, 522], "dnnl_memory_desc_init_by_strid": 162, "dnnl_memory_desc_create_with_strid": [162, 281, 306], "behalf": 162, "great": 162, "nchw8c": [162, 196], "guess": [162, 381], "offset_nchw8c": 162, "slice": 162, "uppercas": 162, "distinguish": 162, "8c": 162, "choic": [162, 164, 171, 174, 283], "dnnl_memory_desc_create_with_tag": [162, 179, 231, 239, 250, 281, 306, 368, 378, 388], "dnnl_nchw8c": [162, 179, 196], "ptrdiff_t": 162, "inner_nblk": 162, "inner_idx": [162, 209], "1st": [162, 179, 196, 306], "0st": [162, 306], "3rd": [162, 179], "inner_blk": [162, 209], "q_stride": 162, "q_inner_nblk": 162, "q_inner_idx": 162, "q_inner_blk": 162, "dnnl_memory_desc_queri": [162, 281, 306], "dnnl_query_strid": [162, 209, 210, 306], "dnnl_query_inner_nblk": 162, "dnnl_query_inner_idx": [162, 209, 210, 306], "dnnl_query_inner_blk": [162, 209, 210, 306], "memcmp": 162, "dnnl_max_ndim": [162, 281, 295], "tail": 162, "somehow": 162, "came": 162, "div_up": 162, "price": 162, "neglig": [162, 163, 420], "d0": [162, 164], "dnnl_memory_desc_get_s": [162, 281, 306], "phys_siz": 162, "eltwise_op": [162, 288, 530], "block_siz": 162, "c_pad": 162, "expect_stride_n": 162, "expect_stride_c": 162, "expect_stride_h": 162, "expect_stride_w": 162, "expect_stride_8c": 162, "expect_tru": 162, "get_padded_dim": [162, 524], "get_inner_nblk": [162, 524], "get_inner_idx": [162, 524], "get_inner_blk": [162, 524], "messag": [163, 244, 248, 381, 386, 394, 438, 444, 479, 574], "profile_exec": [163, 420], "onednn_verbose_timestamp": 163, "rel": 163, "gemm_api": 163, "legaci": 163, "dnnl_set_verbos": [163, 281, 318], "face": 163, "insight": 163, "256x256": 163, "25x256": 163, "v0": [163, 419, 420], "6afab8e57f65a8995685d97ba6f80fa6c24b87a0": 163, "dnnl_backend": 163, "memory_descriptor": 163, "problem_desc": 163, "exec_tim": 163, "partition_id": 163, "partition_kind": 163, "op_nam": 163, "144": 163, "break": 163, "spent": [163, 381], "tune": [163, 420], "led": 163, "breviti": [163, 244, 381], "src_u8": 163, "f0": [163, 419, 420], "brgemm_matmul": 163, "did": 163, "ic16ih7oc16oh7kh5ph2n": 163, "wip": 163, "1693533460193": 163, "346924": 163, "abcd16b": [163, 196, 420], "abcd16b16a": [163, 196], "bia_f32": 163, "mb2_ic16oc16_ih7oh7kh5sh1dh0ph2_iw7ow7kw5sw1dw0pw2": 163, "709961": 163, "1693533460194": 163, "199951": 163, "0161133": 163, "1693533460228": 163, "559082": 163, "16x16x5x5": 163, "724854": 163, "1693533460229": 163, "437012": 163, "481": 163, "1693533460259": 163, "165039": 163, "blk": 163, "2x16x7x7": 163, "349854": 163, "586914": 163, "604": 163, "1693533460272": 163, "332031": 163, "0358887": 163, "416992": 163, "052002": 163, "561035": 163, "0878906": 163, "1693533460313": 163, "719971": 163, "275146": 163, "1693533460314": 163, "072021": 163, "8389": 163, "__repro": 163, "ic16ih7oc16oh7kh5ph2nwip": 163, "comma": 163, "marker": 163, "millisecond": [163, 232, 420], "unix": 163, "epoch": 163, "kernel_cache_hit": 163, "nested_cache_hit": 163, "cpu2gpu": [163, 251], "gpu2cpu": [163, 251], "tensor_nam": 163, "extra_flag": 163, "synchron": [163, 306, 395, 419, 438, 522], "exit": [163, 256], "wall": 163, "evenli": 164, "mandatori": [164, 326], "primitv": 164, "t0": [164, 272, 281, 431], "a0": 164, "t1": [164, 272, 281, 283, 431], "a1": 164, "beyond": 164, "explanatori": [164, 479], "msg": [164, 281], "unavail": 164, "gnorm": 164, "fpmath": [164, 280, 299, 442, 538], "ip": 164, "miscellan": 164, "nest": 164, "pm": 164, "unsuccess": 164, "runtime_kind": 164, "d1": 164, "onednn_experimental_profil": 164, "exhaust": 164, "dnnl_common": [167, 176, 180, 222, 478, 479, 491, 560], "dnnl_accumulation_mode_strict": [167, 168, 288], "dnnl_accumulation_mode_relax": [167, 168, 288], "dnnl_accumulation_mode_ani": [167, 168, 288], "dnnl_accumulation_mode_s32": [167, 168, 288], "dnnl_accumulation_mode_f32": [167, 168, 288], "dnnl_accumulation_mode_f16": [167, 168, 288], "dnnl_common_typ": [168, 175, 177, 181, 221, 223, 573], "dnnl_alg_kind_undef": [169, 170], "dnnl_convolution_direct": [169, 170, 231, 239, 294, 368, 378], "0x1": [169, 173, 174, 187, 214], "dnnl_convolution_winograd": [169, 170, 294], "0x2": 169, "dnnl_convolution_auto": [169, 170, 294], "0x3": [169, 174], "dnnl_deconvolution_direct": [169, 170, 296], "0xa": 169, "dnnl_deconvolution_winograd": [169, 170, 296], "0xb": 169, "0x20": [169, 187], "0x100": 169, "0x1ff": 169, "0x2ff": 169, "0x3ff": 169, "dnnl_lrn_across_channel": [169, 170, 231, 239, 304, 368, 378], "0xaff": 169, "dnnl_lrn_within_channel": [169, 170, 304], "0xbff": 169, "dnnl_vanilla_rnn": [169, 170], "0x1fff": 169, "dnnl_vanilla_lstm": [169, 170], "0x2fff": 169, "dnnl_vanilla_gru": [169, 170], "0x3fff": 169, "dnnl_lbr_gru": [169, 170], "0x4fff": 169, "dnnl_vanilla_augru": [169, 170], "0x5fff": 169, "dnnl_lbr_augru": [169, 170], "0x6fff": 169, "dnnl_binary_add": [169, 170, 290], "0x1fff0": 169, "dnnl_binary_mul": [169, 170, 290], "0x1fff1": 169, "dnnl_binary_max": [169, 170, 290], "0x1fff2": 169, "dnnl_binary_min": [169, 170, 290], "0x1fff3": 169, "dnnl_binary_div": [169, 170, 290], "0x1fff4": 169, "dnnl_binary_sub": [169, 170, 290], "0x1fff5": 169, "dnnl_binary_g": [169, 170, 290], "0x1fff6": 169, "dnnl_binary_gt": [169, 170, 290], "0x1fff7": 169, "dnnl_binary_l": [169, 170, 290], "0x1fff8": 169, "dnnl_binary_lt": [169, 170, 290], "0x1fff9": 169, "dnnl_binary_eq": [169, 170, 290], "0x1fffa": 169, "dnnl_binary_n": [169, 170, 290], "0x1fffb": 169, "dnnl_binary_select": [169, 170], "0x1fffc": 169, "dnnl_resampling_nearest": [169, 170, 316], "0x2fff0": 169, "dnnl_resampling_linear": [169, 170, 316], "0x2fff1": 169, "dnnl_reduction_max": [169, 170, 314, 543], "dnnl_reduction_min": [169, 170, 314, 543], "dnnl_reduction_sum": [169, 170, 314, 543], "dnnl_reduction_mul": [169, 170, 314, 543], "dnnl_reduction_mean": [169, 170, 314, 543], "dnnl_reduction_norm_lp_max": [169, 170, 314, 543], "dnnl_reduction_norm_lp_sum": [169, 170, 314, 543], "dnnl_reduction_norm_lp_power_p_max": [169, 170, 314, 543], "dnnl_reduction_norm_lp_power_p_sum": [169, 170, 314, 543], "dnnl_softmax_accur": [169, 170, 320], "0x30000": 169, "dnnl_softmax_log": [169, 170, 320], "hyperbol": [169, 170], "tangent": [169, 170], "cumul": [169, 420], "gaussian": 169, "modif": 169, "w_c": [169, 170], "x_t": [169, 170], "c_x": [169, 170], "u_c": [169, 170], "c_h": [169, 170], "bias": [169, 272, 431], "augru": [169, 170, 317, 359, 361, 448, 449, 450, 451, 503, 504, 505, 506, 550], "neighbor": [169, 170, 283, 316], "pth": 169, "deconvolution_direct": [170, 252, 390, 470, 472], "deconvolution_winograd": [170, 470, 472], "eltwise_elu": 170, "eltwise_squar": 170, "eltwise_ab": 170, "eltwise_sqrt": 170, "eltwise_swish": 170, "eltwise_soft_relu": 170, "eltwise_mish": 170, "eltwise_logist": [170, 570, 572], "eltwise_exp": 170, "eltwise_gelu_tanh": 170, "eltwise_gelu_erf": 170, "eltwise_log": 170, "eltwise_clip": 170, "eltwise_clip_v2": 170, "eltwise_pow": 170, "eltwise_round": 170, "eltwise_hardswish": 170, "eltwise_hardsigmoid": 170, "eltwise_relu_use_dst_for_bwd": 170, "eltwise_tanh_use_dst_for_bwd": 170, "eltwise_elu_use_dst_for_bwd": 170, "eltwise_sqrt_use_dst_for_bwd": 170, "eltwise_logistic_use_dst_for_bwd": 170, "eltwise_exp_use_dst_for_bwd": 170, "eltwise_clip_v2_use_dst_for_bwd": 170, "lrn_across_channel": [170, 232, 234, 235, 262, 371, 372, 413, 512, 514], "lrn_within_channel": [170, 512, 514], "pooling_avg_include_pad": [170, 526, 528], "pooling_avg_exclude_pad": [170, 526, 528], "vanilla_rnn": 170, "vanilla_lstm": 170, "vanilla_gru": 170, "lbr_gru": [170, 410], "vanilla_augru": 170, "lbr_augru": 170, "binary_mul": [170, 229, 230, 364, 366], "binary_max": 170, "binary_min": 170, "binary_div": [170, 230, 366], "binary_sub": [170, 230, 366], "binary_g": 170, "binary_gt": 170, "binary_l": 170, "binary_lt": 170, "binary_eq": 170, "binary_n": 170, "binary_select": 170, "resampling_nearest": [170, 547, 549], "resampling_linear": [170, 271, 429, 547, 549], "reduction_max": 170, "reduction_min": 170, "reduction_sum": [170, 269, 425], "reduction_mul": 170, "reduction_mean": 170, "reduction_norm_lp_max": 170, "reduction_norm_lp_sum": 170, "reduction_norm_lp_power_p_max": 170, "reduction_norm_lp_power_p_sum": 170, "softmax_accur": [170, 274, 434, 556, 558], "softmax_log": [170, 556, 558], "rectifi": [170, 297, 395, 438], "linar": 170, "vanilla": [170, 279, 317, 441, 569, 570, 571, 572], "lrb": 170, "norm_lp_max": 170, "norm_lp_sum": 170, "norm_lp_power_p_max": 170, "norm_lp_power_p_sum": 170, "isa_default": [171, 318], "dnnl_cpu_isa_default": [171, 174, 318], "dnnl_cpu_isa_sse41": [171, 174], "dnnl_cpu_isa_avx": [171, 174], "dnnl_cpu_isa_avx2": [171, 174], "dnnl_cpu_isa_avx2_vnni": [171, 174], "dnnl_cpu_isa_avx2_vnni_2": [171, 174], "dnnl_cpu_isa_avx512_cor": [171, 174], "dnnl_cpu_isa_avx512_core_vnni": [171, 174], "dnnl_cpu_isa_avx512_core_bf16": [171, 174], "dnnl_cpu_isa_avx10_1_512": [171, 174], "dnnl_cpu_isa_avx512_core_fp16": [171, 174], "dnnl_cpu_isa_avx10_1_512_amx": [171, 174], "dnnl_cpu_isa_avx512_core_amx": [171, 174], "dnnl_cpu_isa_avx10_1_512_amx_fp16": [171, 174], "dnnl_cpu_isa_avx512_core_amx_fp16": [171, 174], "dnnl_cpu_isa_no_hint": [172, 173, 318], "dnnl_cpu_isa_prefer_ymm": [172, 173], "exclus": [172, 173, 306, 522], "0x0": [173, 174, 214], "0x7": 174, "0xf": 174, "0x1f": 174, "0x27": 174, "0x67": 174, "0xe7": 174, "0x1ef": 174, "0xfef": 174, "0x1fef": 174, "dnnl_data_type_undef": [175, 183, 194], "dnnl_f16": [175, 183, 194], "dnnl_bf16": [175, 183, 194], "dnnl_s32": [175, 183, 194], "dnnl_u8": [175, 183, 194], "dnnl_f64": [175, 194], "dnnl_boolean": [175, 183], "dnnl_f8_e5m2": [175, 183, 194], "dnnl_f8_e4m3": [175, 183, 194], "dnnl_s4": [175, 183, 194], "dnnl_u4": [175, 183, 194], "dnnl_e8m0": [175, 194], "dnnl_f4_e2m1": [175, 194], "dnnl_f4_e3m0": [175, 194], "dnnl_data_type_max": 175, "0x7fff": [175, 178, 204, 210], "compliant": [175, 194], "dnnl_any_engin": [176, 177], "dnnl_cpu": [176, 177, 239, 250, 378, 388], "dnnl_gpu": [176, 177, 250, 388], "dnnl_format_kind_undef": [178, 195, 294, 296, 301, 303, 305], "dnnl_format_kind_ani": [178, 195, 290, 294, 296, 301, 306, 309, 314, 316, 317], "dnnl_format_kind_spars": [178, 195], "dnnl_format_kind_max": 178, "dnnl_format_tag_undef": [179, 196], "dnnl_abcdef": [179, 196], "dnnl_abcdefg": [179, 196], "dnnl_abcdefgh": [179, 196], "dnnl_abcdefghi": [179, 196], "dnnl_abcdefghij": [179, 196], "dnnl_abcdefghijk": [179, 196], "dnnl_abcdefghijkl": [179, 196], "dnnl_ba": [179, 196, 306], "dnnl_bca": [179, 196], "dnnl_cab": [179, 196], "dnnl_cba": [179, 196], "dnnl_abdc": [179, 196], "dnnl_acbd": [179, 196], "dnnl_adbc": [179, 196], "dnnl_adcb": [179, 196], "dnnl_bacd": [179, 196], "dnnl_bcda": [179, 196], "dnnl_cdab": [179, 196], "dnnl_cdba": [179, 196], "dnnl_dcab": [179, 196], "dnnl_abdec": [179, 196], "dnnl_adecb": [179, 196], "dnnl_bcdea": [179, 196], "dnnl_cdeab": [179, 196], "dnnl_cdeba": [179, 196], "dnnl_decab": [179, 196], "dnnl_abcdf": [179, 196], "dnnl_abdefc": [179, 196], "dnnl_abdfc": [179, 196], "dnnl_acbdef": [179, 196], "dnnl_adefcb": [179, 196], "dnnl_defcab": [179, 196], "dnnl_abcdegf": [179, 196], "dnnl_abcdefhg": [179, 196], "dnnl_abcdefgih": [179, 196], "dnnl_abcdefghji": [179, 196], "dnnl_abcdefghikj": [179, 196], "dnnl_abcdefghijlk": [179, 196], "dnnl_abc16a": [179, 196], "dnnl_abc16a16b": [179, 196], "dnnl_abc32a32b": [179, 196], "dnnl_abc4a4b": [179, 196], "dnnl_abc16b": [179, 196], "dnnl_abc16b16a": [179, 196], "dnnl_abc4a": [179, 196], "dnnl_abc32b": [179, 196], "dnnl_abc4b": [179, 196], "dnnl_abc4b16a4b": [179, 196], "dnnl_abc2b8a4b": [179, 196], "dnnl_abc16b16a4b": [179, 196], "dnnl_abc16b16a2b": [179, 196], "dnnl_abc4b4a": [179, 196], "dnnl_abc8a16b2a": [179, 196], "dnnl_abc8a8b": [179, 196], "dnnl_abc8a4b": [179, 196], "dnnl_abc8b": [179, 196], "dnnl_abc8b16a2b": [179, 196], "dnnl_bac8a16b2a": [179, 196], "dnnl_abc8b8a": [179, 196], "dnnl_abcd16a": [179, 196], "dnnl_abcd8a": [179, 196], "dnnl_abcd16a16b": [179, 196], "dnnl_abcd32a": [179, 196], "dnnl_abcd32a32b": [179, 196], "dnnl_abcd16b": [179, 196], "dnnl_abcd16b16a": [179, 196], "dnnl_abcd16b16c": [179, 196], "dnnl_abcd16c16b": [179, 196], "dnnl_abcd4a": [179, 196], "dnnl_abcd32b": [179, 196], "dnnl_abcd4b": [179, 196], "dnnl_abcd4b16a4b": [179, 196], "dnnl_abcd16b16a4b": [179, 196], "dnnl_abcd16b16a2b": [179, 196], "dnnl_abcd4b4a": [179, 196], "dnnl_abcd4a4b": [179, 196], "dnnl_abcd2c4b2c": [179, 196], "dnnl_abcd4b8c2b": [179, 196], "dnnl_abcd4c16b4c": [179, 196], "dnnl_abcd2c8b4c": [179, 196], "dnnl_abcd16c16b4c": [179, 196], "dnnl_abcd16c16b2c": [179, 196], "dnnl_abcd4c4b": [179, 196], "dnnl_abcd4b4c": [179, 196], "dnnl_abcd8a16b2a": [179, 196], "dnnl_abcd2b8a4b": [179, 196], "dnnl_abcd8a8b": [179, 196], "dnnl_abcd8a4b": [179, 196], "dnnl_abcd8b": [179, 196], "dnnl_abcd4c8b2c": [179, 196], "dnnl_abcd8b16a2b": [179, 196], "dnnl_abcd8b16c2b": [179, 196], "dnnl_bacd8a16b2a": [179, 196], "dnnl_abcd8b8a": [179, 196], "dnnl_abcd8b8c": [179, 196], "dnnl_abcd8b4c": [179, 196], "dnnl_abcd8c16b2c": [179, 196], "dnnl_abcde8a16b2a": [179, 196], "dnnl_acbd8b16c2b": [179, 196], "dnnl_abcd8c8b": [179, 196], "dnnl_abcde16a": [179, 196], "dnnl_abcde32a": [179, 196], "dnnl_abcde16a16b": [179, 196], "dnnl_bacde8a16b2a": [179, 196], "dnnl_abcd2b4c2b": [179, 196], "dnnl_abcde4b16a4b": [179, 196], "dnnl_abcde2b8a4b": [179, 196], "dnnl_abcde16b": [179, 196], "dnnl_abcde16b16a": [179, 196], "dnnl_abcde16b16c": [179, 196], "dnnl_abcde16c16b": [179, 196], "dnnl_abcde2c8b4c": [179, 196], "dnnl_abcde4a": [179, 196], "dnnl_abcde32b": [179, 196], "dnnl_abcde4b": [179, 196], "dnnl_abcde4b4a": [179, 196], "dnnl_abcde4a4b": [179, 196], "dnnl_abcde4b4c": [179, 196], "dnnl_abcde2c4b2c": [179, 196], "dnnl_abcde4b8c2b": [179, 196], "dnnl_abcde4c16b4c": [179, 196], "dnnl_abcde16c16b4c": [179, 196], "dnnl_abcde16c16b2c": [179, 196], "dnnl_abcde4c4b": [179, 196], "dnnl_abcde8a": [179, 196], "dnnl_abcde8a8b": [179, 196], "dnnl_abcde8a4b": [179, 196], "dnnl_bacde16b16a": [179, 196], "dnnl_abcde8b": [179, 196], "dnnl_abcde8b16a2b": [179, 196], "dnnl_abcde8b16c2b": [179, 196], "dnnl_abcde4c8b2c": [179, 196], "dnnl_acbde8b16c2b": [179, 196], "dnnl_abcde8b8a": [179, 196], "dnnl_abcde32a32b": [179, 196], "dnnl_abcde8b8c": [179, 196], "dnnl_abcde8b4c": [179, 196], "dnnl_abc4a8b8a4b": [179, 196], "dnnl_abcd4a8b8a4b": [179, 196], "dnnl_abcde4a8b8a4b": [179, 196], "dnnl_bac4b8a8b4a": [179, 196], "dnnl_bacd4b8a8b4a": [179, 196], "dnnl_bacde4b8a8b4a": [179, 196], "dnnl_abcd2a8b8a2b": [179, 196], "dnnl_abcd4b8c8b4c": [179, 196], "dnnl_abcde4b8c8b4c": [179, 196], "dnnl_abcde2b8c8b2c": [179, 196], "dnnl_abcde8c16b2c": [179, 196], "dnnl_abcde8c8b": [179, 196], "dnnl_abcde2b4c2b": [179, 196], "dnnl_abcdef16b": [179, 196], "dnnl_abcdef16b16c": [179, 196], "dnnl_abcdef16c16b": [179, 196], "dnnl_abcdef4c16b4c": [179, 196], "dnnl_abcdef2c8b4c": [179, 196], "dnnl_abcdef4c8b2c": [179, 196], "dnnl_abcdef2b4c2b": [179, 196], "dnnl_abcdef4b": [179, 196], "dnnl_abcdef4c4b": [179, 196], "dnnl_abcdef4b4c": [179, 196], "dnnl_abcdef2c4b2c": [179, 196], "dnnl_abcdef4b8c2b": [179, 196], "dnnl_abcdef8b8c": [179, 196], "dnnl_abcdef8b4c": [179, 196], "dnnl_abcdef8c16b2c": [179, 196], "dnnl_abcdef4b8c8b4c": [179, 196], "dnnl_abcdef8b16c2b": [179, 196], "dnnl_acbdef8b16c2b": [179, 196], "dnnl_abcdef8c8b": [179, 196], "dnnl_abdc16b": [179, 196], "dnnl_abdc16b2c": [179, 196], "dnnl_abdc16b4c": [179, 196], "dnnl_abdc4b": [179, 196], "dnnl_abdc8b": [179, 196], "dnnl_abdec16b": [179, 196], "dnnl_abdec16b2c": [179, 196], "dnnl_abdec16b4c": [179, 196], "dnnl_abdec32b": [179, 196], "dnnl_abdec4b": [179, 196], "dnnl_abdec8b": [179, 196], "dnnl_abdefc16b": [179, 196], "dnnl_abdefc16b2c": [179, 196], "dnnl_acbdef16c16b": [179, 196], "dnnl_abdefc4b": [179, 196], "dnnl_abdefc8b": [179, 196], "dnnl_abcdef16a": [179, 196], "dnnl_abcdef32a": [179, 196], "dnnl_abedc16b": [179, 196], "dnnl_acb16a": [179, 196], "dnnl_acb16a2b": [179, 196], "dnnl_acb16a4b": [179, 196], "dnnl_acb4a": [179, 196], "dnnl_acb8a": [179, 196], "dnnl_acbd16b16c": [179, 196], "dnnl_acbd16c16b": [179, 196], "dnnl_acbde16b16c": [179, 196], "dnnl_acbde16c16b": [179, 196], "dnnl_acdb16a": [179, 196], "dnnl_acdb16a2b": [179, 196], "dnnl_acdb16a4b": [179, 196], "dnnl_acdb32a": [179, 196], "dnnl_acdb4a": [179, 196], "dnnl_acdb8a": [179, 196], "dnnl_acdeb16a": [179, 196], "dnnl_acdeb16a2b": [179, 196], "dnnl_acdeb4a": [179, 196], "dnnl_acdeb8a": [179, 196], "dnnl_adcb16a": [179, 196], "dnnl_bac16a16b": [179, 196], "dnnl_bac16b16a": [179, 196], "dnnl_bacd16a16b": [179, 196], "dnnl_bacd16b16a": [179, 196], "dnnl_acbd4c8b8c4b": [179, 196], "dnnl_acbde4c8b8c4b": [179, 196], "dnnl_acbdef4c8b8c4b": [179, 196], "dnnl_bacde16a16b": [179, 196], "dnnl_acbdef16b16c": [179, 196], "dnnl_abc16b32a": [179, 196], "dnnl_abc16b64a": [179, 196], "dnnl_abc4b32a4b": [179, 196], "dnnl_abc4b64a4b": [179, 196], "dnnl_abc8b32a2b": [179, 196], "dnnl_abc8b64a2b": [179, 196], "dnnl_ab16b16a": [179, 196], "dnnl_ab16b32a": [179, 196], "dnnl_ab16b64a": [179, 196], "dnnl_ab8b16a2b": [179, 196], "dnnl_ab8b32a2b": [179, 196], "dnnl_ab8b64a2b": [179, 196], "dnnl_ab4b16a4b": [179, 196], "dnnl_ab4b32a4b": [179, 196], "dnnl_ab4b64a4b": [179, 196], "dnnl_ab16b16a4b": [179, 196], "dnnl_abcd16b32a": [179, 196], "dnnl_abcd16b64a": [179, 196], "dnnl_abcd4b32a4b": [179, 196], "dnnl_abcd4b64a4b": [179, 196], "dnnl_abcd8b32a2b": [179, 196], "dnnl_abcd8b64a2b": [179, 196], "dnnl_abcde4b32a4b": [179, 196], "dnnl_abcde4b64a4b": [179, 196], "dnnl_abcde16b16a4b": [179, 196], "dnnl_abcde16b16a2b": [179, 196], "dnnl_abcde16b32a": [179, 196], "dnnl_abcde16b64a": [179, 196], "dnnl_abcde8b32a2b": [179, 196], "dnnl_abcde8b64a2b": [179, 196], "dnnl_abcdef16c16b4c": [179, 196], "dnnl_abcdef16c16b2c": [179, 196], "dnnl_ab32a32b8a4b": [179, 196], "dnnl_ab8a4b": [179, 196], "dnnl_ab32a32b8a2b": [179, 196], "dnnl_ab8a2b": [179, 196], "dnnl_abdc32d": [179, 196], "dnnl_abdc32d4c": [179, 196], "dnnl_abdec32": [179, 196], "dnnl_abdec32e2c": [179, 196], "dnnl_abdec32e4c": [179, 196], "dnnl_abdefc16b4c": [179, 196], "dnnl_acdeb16a4b": [179, 196], "dnnl_abcd16a16b2a": [179, 196], "dnnl_abc16a16b2a": [179, 196], "dnnl_abcd16b16c2b": [179, 196], "dnnl_abcde16b16c2b": [179, 196], "dnnl_acb32a": [179, 196], "dnnl_acb32a2b": [179, 196], "dnnl_acb32a4b": [179, 196], "dnnl_acb48a": [179, 196], "dnnl_acb48a2b": [179, 196], "dnnl_acb48a4b": [179, 196], "dnnl_acb64a": [179, 196], "dnnl_acb64a2b": [179, 196], "dnnl_acb64a4b": [179, 196], "dnnl_cba2b": [179, 196], "dnnl_cba4b": [179, 196], "dnnl_abdc32b": [179, 196], "dnnl_abdc32b2c": [179, 196], "dnnl_abdc32b4c": [179, 196], "dnnl_abdc48b": [179, 196], "dnnl_abdc48b2c": [179, 196], "dnnl_abdc48b4c": [179, 196], "dnnl_abdc64b": [179, 196], "dnnl_abdc64b2c": [179, 196], "dnnl_abdc64b4c": [179, 196], "dnnl_adcb2c": [179, 196], "dnnl_adcb4c": [179, 196], "dnnl_acdb32a2b": [179, 196], "dnnl_acdb32a4b": [179, 196], "dnnl_acdb48a": [179, 196], "dnnl_acdb48a2b": [179, 196], "dnnl_acdb48a4b": [179, 196], "dnnl_acdb64a": [179, 196], "dnnl_acdb64a2b": [179, 196], "dnnl_acdb64a4b": [179, 196], "dnnl_cdba2b": [179, 196], "dnnl_cdba4b": [179, 196], "dnnl_abdec32b2c": [179, 196], "dnnl_abdec32b4c": [179, 196], "dnnl_abdec48b": [179, 196], "dnnl_abdec48b2c": [179, 196], "dnnl_abdec48b4c": [179, 196], "dnnl_abdec64b": [179, 196], "dnnl_abdec64b2c": [179, 196], "dnnl_abdec64b4c": [179, 196], "dnnl_adecb2c": [179, 196], "dnnl_adecb4c": [179, 196], "dnnl_acdeb32a": [179, 196], "dnnl_acdeb32a2b": [179, 196], "dnnl_acdeb32a4b": [179, 196], "dnnl_acdeb48a": [179, 196], "dnnl_acdeb48a2b": [179, 196], "dnnl_acdeb48a4b": [179, 196], "dnnl_acdeb64a": [179, 196], "dnnl_acdeb64a2b": [179, 196], "dnnl_acdeb64a4b": [179, 196], "dnnl_cdeba2b": [179, 196], "dnnl_cdeba4b": [179, 196], "dnnl_abdefc32b": [179, 196], "dnnl_abdefc32b2c": [179, 196], "dnnl_abdefc32b4c": [179, 196], "dnnl_abdefc48b": [179, 196], "dnnl_abdefc48b2c": [179, 196], "dnnl_abdefc48b4c": [179, 196], "dnnl_abdefc64b": [179, 196], "dnnl_abdefc64b2c": [179, 196], "dnnl_abdefc64b4c": [179, 196], "dnnl_adefcb2c": [179, 196], "dnnl_adefcb4c": [179, 196], "dnnl_ab16b32a4b": [179, 196], "dnnl_ab16b48a4b": [179, 196], "dnnl_ab16b64a4b": [179, 196], "dnnl_ab16b16a2b": [179, 196], "dnnl_ab16b32a2b": [179, 196], "dnnl_ab16b48a2b": [179, 196], "dnnl_ab16b64a2b": [179, 196], "dnnl_abc16b32a4b": [179, 196], "dnnl_abc16b48a4b": [179, 196], "dnnl_abc16b64a4b": [179, 196], "dnnl_abc16b32a2b": [179, 196], "dnnl_abc16b48a2b": [179, 196], "dnnl_abc16b64a2b": [179, 196], "dnnl_abcd16b32a4b": [179, 196], "dnnl_abcd16b48a4b": [179, 196], "dnnl_abcd16b64a4b": [179, 196], "dnnl_abcd16b32a2b": [179, 196], "dnnl_abcd16b48a2b": [179, 196], "dnnl_abcd16b64a2b": [179, 196], "dnnl_abcde16b32a4b": [179, 196], "dnnl_abcde16b48a4b": [179, 196], "dnnl_abcde16b64a4b": [179, 196], "dnnl_abcde16b32a2b": [179, 196], "dnnl_abcde16b48a2b": [179, 196], "dnnl_abcde16b64a2b": [179, 196], "dnnl_abc32a16b": [179, 196], "dnnl_abcd32a16b": [179, 196], "dnnl_abcde32a16b": [179, 196], "dnnl_ab48a16b": [179, 196], "dnnl_ab48a32b": [179, 196], "dnnl_abc40a16b": [179, 196], "dnnl_abc40a32b": [179, 196], "dnnl_abc48b16c": [179, 196], "dnnl_abc48b32c": [179, 196], "dnnl_abcd40a16b": [179, 196], "dnnl_abcd40a32b": [179, 196], "dnnl_abcd32c": [179, 196], "dnnl_abdce32c": [179, 196], "dnnl_abdce32c2": [179, 196], "dnnl_ba16a16b2a": [179, 196], "dnnl_ba16a32b2a": [179, 196], "dnnl_ba16a48b2a": [179, 196], "dnnl_ba16a64b2a": [179, 196], "dnnl_ba16a16b4a": [179, 196], "dnnl_ba16a32b4a": [179, 196], "dnnl_ba16a48b4a": [179, 196], "dnnl_ba16a64b4a": [179, 196], "dnnl_abcd8a2b": [179, 196], "dnnl_abdec16c16b2c": [179, 196], "dnnl_abdec16c16b4c": [179, 196], "dnnl_abdefc16c16b2c": [179, 196], "dnnl_acb16b16a2b": [179, 196], "dnnl_acb16b16a4b": [179, 196], "dnnl_acdb16b16a2b": [179, 196], "dnnl_acdb16b16a4b": [179, 196], "dnnl_acdeb16b16a2b": [179, 196], "dnnl_abdefc16c16b4c": [179, 196], "dnnl_acdeb16b16a4b": [179, 196], "dnnl_acb16b32a2b": [179, 196], "dnnl_acb16b32a4b": [179, 196], "dnnl_acb16b48a2b": [179, 196], "dnnl_acb16b48a4b": [179, 196], "dnnl_acb16b64a2b": [179, 196], "dnnl_acb16b64a4b": [179, 196], "dnnl_abdc16c16b2c": [179, 196], "dnnl_abdc16c16b4c": [179, 196], "dnnl_abdc16c32b2c": [179, 196], "dnnl_abdc16c32b4c": [179, 196], "dnnl_abdc16c48b2c": [179, 196], "dnnl_abdc16c48b4c": [179, 196], "dnnl_abdc16c64b2c": [179, 196], "dnnl_abdc16c64b4c": [179, 196], "dnnl_acdb16b32a2b": [179, 196], "dnnl_acdb16b32a4b": [179, 196], "dnnl_acdb16b48a2b": [179, 196], "dnnl_acdb16b48a4b": [179, 196], "dnnl_acdb16b64a2b": [179, 196], "dnnl_acdb16b64a4b": [179, 196], "dnnl_abdec16c32b2c": [179, 196], "dnnl_abdec16c32b4c": [179, 196], "dnnl_abdec16c48b2c": [179, 196], "dnnl_abdec16c48b4c": [179, 196], "dnnl_abdec16c64b2c": [179, 196], "dnnl_abdec16c64b4c": [179, 196], "dnnl_acdeb16b32a2b": [179, 196], "dnnl_acdeb16b32a4b": [179, 196], "dnnl_acdeb16b48a2b": [179, 196], "dnnl_acdeb16b48a4b": [179, 196], "dnnl_acdeb16b64a2b": [179, 196], "dnnl_acdeb16b64a4b": [179, 196], "dnnl_abdefc16c32b2c": [179, 196], "dnnl_abdefc16c32b4c": [179, 196], "dnnl_abdefc16c48b2c": [179, 196], "dnnl_abdefc16c48b4c": [179, 196], "dnnl_abdefc16c64b2c": [179, 196], "dnnl_abdefc16c64b4c": [179, 196], "dnnl_decba16a": [179, 196], "dnnl_abc4a2b": [179, 196], "dnnl_abc8a2b": [179, 196], "dnnl_abcd8b2c": [179, 196], "dnnl_abcde4a2b": [179, 196], "dnnl_abcde8a2b": [179, 196], "dnnl_abcde40a16b": [179, 196], "dnnl_abcde40a32b": [179, 196], "dnnl_abcde8b2c": [179, 196], "dnnl_abcde4a8b8a2b": [179, 196], "dnnl_abcd4a8b8a2b": [179, 196], "dnnl_abc4a8b8a2b": [179, 196], "dnnl_abcdef4b8c8b2c": [179, 196], "dnnl_abcde4b8c8b2c": [179, 196], "dnnl_abcd4b8c8b2c": [179, 196], "dnnl_bacde4b8a8b2a": [179, 196], "dnnl_bacd4b8a8b2a": [179, 196], "dnnl_bac4b8a8b2a": [179, 196], "dnnl_acbdef4c8b8c2b": [179, 196], "dnnl_acbde4c8b8c2b": [179, 196], "dnnl_acbd4c8b8c2b": [179, 196], "dnnl_abcdef8b2c": [179, 196], "dnnl_ab32a16b": [179, 196], "dnnl_ab32a32b": [179, 196], "dnnl_ba4b8a8b2a": [179, 196], "dnnl_ba4b8a8b4a": [179, 196], "dnnl_abc32b16c": [179, 196], "dnnl_abc32b32c": [179, 196], "dnnl_acb4c8b8c2b": [179, 196], "dnnl_acb4c8b8c4b": [179, 196], "dnnl_abcd4a2b": [179, 196], "dnnl_abc2b8a16b4a": [179, 196], "dnnl_abcd2b8a16b4a": [179, 196], "dnnl_abcde2b8a16b4a": [179, 196], "dnnl_abc2a8b16a4b": [179, 196], "dnnl_abc2a8b16a2b": [179, 196], "dnnl_abc2b32a8b": [179, 196], "dnnl_abcd2a8b16a4b": [179, 196], "dnnl_abcd2a8b16a2b": [179, 196], "dnnl_acbd2c8b16c2b": [179, 196], "dnnl_abcd2b32a8b": [179, 196], "dnnl_abcd2c8b16c2b": [179, 196], "dnnl_abcde2a8b16a4b": [179, 196], "dnnl_abcde2a8b16a2b": [179, 196], "dnnl_acbde2c8b16c2b": [179, 196], "dnnl_abcde2b32a8b": [179, 196], "dnnl_abc2b8c16b2c": [179, 196], "dnnl_abcd2b8c16b2c": [179, 196], "dnnl_abcde2b8c16b2c": [179, 196], "dnnl_abcdef2b8c16b2c": [179, 196], "dnnl_bacde2b8a16b4a": [179, 196], "dnnl_bacd2b8a16b4a": [179, 196], "dnnl_bac2b8a16b4a": [179, 196], "dnnl_bacde2b8a16b2a": [179, 196], "dnnl_bacd2b8a16b2a": [179, 196], "dnnl_bac2b8a16b2a": [179, 196], "dnnl_abcde2c8b16c2b": [179, 196], "dnnl_abcdef2c8b16c2b": [179, 196], "dnnl_acbdef2c8b16c2b": [179, 196], "dnnl_abcd2b8c16b4c": [179, 196], "dnnl_abcde2b8c16b4c": [179, 196], "dnnl_ba4b8a16b2a": [179, 196], "dnnl_ba4b8a16b4a": [179, 196], "dnnl_acb4c8b16c2b": [179, 196], "dnnl_acb4c8b16c4b": [179, 196], "dnnl_ba16a16b": [179, 196], "dnnl_ba16a32b": [179, 196], "dnnl_ba16a48b": [179, 196], "dnnl_ba16a64b": [179, 196], "dnnl_acb16c2b": [179, 196], "dnnl_acb16c4b": [179, 196], "dnnl_ba16b2a": [179, 196], "dnnl_ba16b4a": [179, 196], "dnnl_abc16b16c": [179, 196], "dnnl_abc16b32c": [179, 196], "dnnl_ab16a16b": [179, 196], "dnnl_ab16a32b": [179, 196], "dnnl_abcde16a16b2a": [179, 196], "dnnl_abcdef16b16c2b": [179, 196], "dnnl_acedb16a": [179, 196], "dnnl_abdfec16b": [179, 196], "dnnl_abdec64e2c": [179, 196], "dnnl_abdec64e4c": [179, 196], "dnnl_acb16b16c": [179, 196], "dnnl_acb16b32c": [179, 196], "dnnl_acb16b48c": [179, 196], "dnnl_acb16b64c": [179, 196], "dnnl_acb16b16c2b": [179, 196], "dnnl_acb16b32c2b": [179, 196], "dnnl_acb16b48c2b": [179, 196], "dnnl_acb16b64c2b": [179, 196], "dnnl_acb16b16c4b": [179, 196], "dnnl_acb16b32c4b": [179, 196], "dnnl_acb16b48c4b": [179, 196], "dnnl_acb16b64c4b": [179, 196], "dnnl_abcd4c": [179, 196], "dnnl_abcde4c": [179, 196], "dnnl_abcdef4c": [179, 196], "dnnl_abcde32c": [179, 196], "dnnl_abcdef32c": [179, 196], "dnnl_abcd16a32b": [179, 196], "dnnl_decba8a": [179, 196], "dnnl_acdefb16b32c2b": [179, 196], "dnnl_acdefb16b32c4b": [179, 196], "dnnl_acdefb16b48c2b": [179, 196], "dnnl_acdefb16b48c4b": [179, 196], "dnnl_acdefb16b64c2b": [179, 196], "dnnl_acdefb16b64c4b": [179, 196], "dnnl_bcdea16a32b2a": [179, 196], "dnnl_bcdea16a32b4a": [179, 196], "dnnl_bcdea16a48b2a": [179, 196], "dnnl_bcdea16a48b4a": [179, 196], "dnnl_bcdea16a64b2a": [179, 196], "dnnl_bcdea16a64b4a": [179, 196], "dnnl_acdefb32c": [179, 196], "dnnl_acdefb32c2b": [179, 196], "dnnl_acdefb32c4b": [179, 196], "dnnl_acdefb48c": [179, 196], "dnnl_acdefb48c2b": [179, 196], "dnnl_acdefb48c4b": [179, 196], "dnnl_acdefb64c": [179, 196], "dnnl_acdefb64c2b": [179, 196], "dnnl_acdefb64c4b": [179, 196], "dnnl_bcdea32b": [179, 196], "dnnl_bcdea32b2a": [179, 196], "dnnl_bcdea32b4a": [179, 196], "dnnl_bcdea48b": [179, 196], "dnnl_bcdea48b2a": [179, 196], "dnnl_bcdea48b4a": [179, 196], "dnnl_bcdea64b": [179, 196], "dnnl_bcdea64b2a": [179, 196], "dnnl_bcdea64b4a": [179, 196], "dnnl_bca32b": [179, 196], "dnnl_bca32b2a": [179, 196], "dnnl_bca32b4a": [179, 196], "dnnl_bca48b": [179, 196], "dnnl_bca48b2a": [179, 196], "dnnl_bca48b4a": [179, 196], "dnnl_bca64b": [179, 196], "dnnl_bca64b2a": [179, 196], "dnnl_bca64b4a": [179, 196], "dnnl_acdb32c": [179, 196], "dnnl_acdb32c2b": [179, 196], "dnnl_acdb32c4b": [179, 196], "dnnl_acdb48c": [179, 196], "dnnl_acdb48c2b": [179, 196], "dnnl_acdb48c4b": [179, 196], "dnnl_acdb64c": [179, 196], "dnnl_acdb64c2b": [179, 196], "dnnl_acdb64c4b": [179, 196], "dnnl_bca16a16b2a": [179, 196], "dnnl_bca16a16b4a": [179, 196], "dnnl_bcda16a16b2a": [179, 196], "dnnl_bcda16a16b4a": [179, 196], "dnnl_bcdea16a16b2a": [179, 196], "dnnl_bcdea16a16b4a": [179, 196], "dnnl_acdb16b16c2b": [179, 196], "dnnl_acdb16b16c4b": [179, 196], "dnnl_acdeb16b16c2b": [179, 196], "dnnl_acdeb16b16c4b": [179, 196], "dnnl_acdefb16b16c2b": [179, 196], "dnnl_acdefb16b16c4b": [179, 196], "dnnl_bca16a32b2a": [179, 196], "dnnl_bca16a32b4a": [179, 196], "dnnl_bca16a48b2a": [179, 196], "dnnl_bca16a48b4a": [179, 196], "dnnl_bca16a64b2a": [179, 196], "dnnl_bca16a64b4a": [179, 196], "dnnl_acdb16b32c2b": [179, 196], "dnnl_acdb16b32c4b": [179, 196], "dnnl_acdb16b48c2b": [179, 196], "dnnl_acdb16b48c4b": [179, 196], "dnnl_acdb16b64c2b": [179, 196], "dnnl_acdb16b64c4b": [179, 196], "dnnl_bcda16a32b2a": [179, 196], "dnnl_bcda16a32b4a": [179, 196], "dnnl_bcda16a48b2a": [179, 196], "dnnl_bcda16a48b4a": [179, 196], "dnnl_bcda16a64b2a": [179, 196], "dnnl_bcda16a64b4a": [179, 196], "dnnl_acdeb16b32c2b": [179, 196], "dnnl_acdeb16b32c4b": [179, 196], "dnnl_acdeb16b48c2b": [179, 196], "dnnl_acdeb16b48c4b": [179, 196], "dnnl_acdeb16b64c2b": [179, 196], "dnnl_acdeb16b64c4b": [179, 196], "dnnl_bca16b": [179, 196], "dnnl_bca16b2a": [179, 196], "dnnl_bca16b4a": [179, 196], "dnnl_bcda16b": [179, 196], "dnnl_bcda16b2a": [179, 196], "dnnl_bcda16b4a": [179, 196], "dnnl_bcdea16b": [179, 196], "dnnl_bcdea16b2a": [179, 196], "dnnl_bcdea16b4a": [179, 196], "dnnl_acdb16c": [179, 196], "dnnl_acdb16c2b": [179, 196], "dnnl_acdb16c4b": [179, 196], "dnnl_acdeb16c": [179, 196], "dnnl_acdeb16c2b": [179, 196], "dnnl_acdeb16c4b": [179, 196], "dnnl_acdefb16c": [179, 196], "dnnl_acdefb16c2b": [179, 196], "dnnl_acdefb16c4b": [179, 196], "dnnl_bcda32b": [179, 196], "dnnl_bcda32b2a": [179, 196], "dnnl_bcda32b4a": [179, 196], "dnnl_bcda48b": [179, 196], "dnnl_bcda48b2a": [179, 196], "dnnl_bcda48b4a": [179, 196], "dnnl_bcda64b": [179, 196], "dnnl_bcda64b2a": [179, 196], "dnnl_bcda64b4a": [179, 196], "dnnl_acdeb32c": [179, 196], "dnnl_acdeb32c2b": [179, 196], "dnnl_acdeb32c4b": [179, 196], "dnnl_acdeb48c": [179, 196], "dnnl_acdeb48c2b": [179, 196], "dnnl_acdeb48c4b": [179, 196], "dnnl_acdeb64c": [179, 196], "dnnl_acdeb64c2b": [179, 196], "dnnl_acdeb64c4b": [179, 196], "dnnl_acb24a": [179, 196], "dnnl_acdb24a": [179, 196], "dnnl_acdeb24a": [179, 196], "dnnl_abdc24b": [179, 196], "dnnl_abdec24b": [179, 196], "dnnl_abdefc24b": [179, 196], "dnnl_abdc16d": [179, 196], "dnnl_abdec16": [179, 196], "dnnl_abdce16c": [179, 196], "dnnl_acb24a2b": [179, 196], "dnnl_acdb24a2b": [179, 196], "dnnl_acdeb24a2b": [179, 196], "dnnl_abdc24b2c": [179, 196], "dnnl_abdec24b2c": [179, 196], "dnnl_abdefc24b2c": [179, 196], "dnnl_acb8a2b": [179, 196], "dnnl_acdb8a2b": [179, 196], "dnnl_acdeb8a2b": [179, 196], "dnnl_abdc8b2c": [179, 196], "dnnl_abdec8b2c": [179, 196], "dnnl_abdefc8b2c": [179, 196], "dnnl_ab8b32a": [179, 196], "dnnl_abc8b32a": [179, 196], "dnnl_abcd8b32a": [179, 196], "dnnl_abcde8b32a": [179, 196], "dnnl_ab8b24a": [179, 196], "dnnl_abc8b24a": [179, 196], "dnnl_abcd8b24a": [179, 196], "dnnl_abcde8b24a": [179, 196], "dnnl_ab8b16a": [179, 196], "dnnl_abc8b16a": [179, 196], "dnnl_abcd8b16a": [179, 196], "dnnl_abcde8b16a": [179, 196], "dnnl_ab8b8a": [179, 196], "dnnl_ab4b8a4b": [179, 196], "dnnl_ab4b24a4b": [179, 196], "dnnl_abc4b8a4b": [179, 196], "dnnl_abc4b24a4b": [179, 196], "dnnl_abcd4b8a4b": [179, 196], "dnnl_abcd4b24a4b": [179, 196], "dnnl_abcde4b8a4b": [179, 196], "dnnl_abcde4b24a4b": [179, 196], "dnnl_ab8b24a2b": [179, 196], "dnnl_abc8b24a2b": [179, 196], "dnnl_abcd8b24a2b": [179, 196], "dnnl_abcde8b24a2b": [179, 196], "dnnl_ab8b8a2b": [179, 196], "dnnl_abc8b8a2b": [179, 196], "dnnl_abcd8b8a2b": [179, 196], "dnnl_abcde8b8a2b": [179, 196], "dnnl_acb24a4b": [179, 196], "dnnl_acdb24a4b": [179, 196], "dnnl_acdeb24a4b": [179, 196], "dnnl_abdc24b4c": [179, 196], "dnnl_abdec24b4c": [179, 196], "dnnl_abdefc24b4c": [179, 196], "dnnl_acb8a4b": [179, 196], "dnnl_acdb8a4b": [179, 196], "dnnl_acdeb8a4b": [179, 196], "dnnl_abdc8b4c": [179, 196], "dnnl_abdec8b4c": [179, 196], "dnnl_abdefc8b4c": [179, 196], "dnnl_bca8b": [179, 196], "dnnl_bca8b2a": [179, 196], "dnnl_bcda8b": [179, 196], "dnnl_bcda8b2a": [179, 196], "dnnl_bcdea8b": [179, 196], "dnnl_bcdea8b2a": [179, 196], "dnnl_acdb8c": [179, 196], "dnnl_acdb8c2b": [179, 196], "dnnl_acdeb8c": [179, 196], "dnnl_acdeb8c2b": [179, 196], "dnnl_acdefb8c": [179, 196], "dnnl_acdefb8c2b": [179, 196], "dnnl_bca24b": [179, 196], "dnnl_bca24b2a": [179, 196], "dnnl_bcda24b": [179, 196], "dnnl_bcda24b2a": [179, 196], "dnnl_bcdea24b": [179, 196], "dnnl_bcdea24b2a": [179, 196], "dnnl_acdb24c": [179, 196], "dnnl_acdb24c2b": [179, 196], "dnnl_acdeb24c": [179, 196], "dnnl_acdeb24c2b": [179, 196], "dnnl_acdefb24c": [179, 196], "dnnl_acdefb24c2b": [179, 196], "dnnl_bca8b4a": [179, 196], "dnnl_bcda8b4a": [179, 196], "dnnl_bcdea8b4a": [179, 196], "dnnl_acdb8c4b": [179, 196], "dnnl_acdeb8c4b": [179, 196], "dnnl_acdefb8c4b": [179, 196], "dnnl_bca24b4a": [179, 196], "dnnl_bcda24b4a": [179, 196], "dnnl_bcdea24b4a": [179, 196], "dnnl_acdb24c4b": [179, 196], "dnnl_acdeb24c4b": [179, 196], "dnnl_acdefb24c4b": [179, 196], "dnnl_ab16b48a": [179, 196], "dnnl_abc16b48a": [179, 196], "dnnl_abcd16b48a": [179, 196], "dnnl_abcde16b48a": [179, 196], "dnnl_abc16a4b": [179, 196], "dnnl_abcd16a4b": [179, 196], "dnnl_abcde16a4b": [179, 196], "dnnl_defcba16a": [179, 196], "dnnl_defcba8a": [179, 196], "dnnl_acb16b64a": [179, 196], "dnnl_acdb16b64a": [179, 196], "dnnl_acdeb16b64a": [179, 196], "dnnl_acb16b48a": [179, 196], "dnnl_acdb16b48a": [179, 196], "dnnl_acdeb16b48a": [179, 196], "dnnl_acb16b32a": [179, 196], "dnnl_acdb16b32a": [179, 196], "dnnl_acdeb16b32a": [179, 196], "dnnl_acb16b16a": [179, 196], "dnnl_acdb16b16a": [179, 196], "dnnl_acdeb16b16a": [179, 196], "dnnl_acb8b32a": [179, 196], "dnnl_acdb8b32a": [179, 196], "dnnl_acdeb8b32a": [179, 196], "dnnl_acb8b24a": [179, 196], "dnnl_acdb8b24a": [179, 196], "dnnl_acdeb8b24a": [179, 196], "dnnl_acb8b16a": [179, 196], "dnnl_acdb8b16a": [179, 196], "dnnl_acdeb8b16a": [179, 196], "dnnl_acb8b8a": [179, 196], "dnnl_acdb8b8a": [179, 196], "dnnl_acdeb8b8a": [179, 196], "dnnl_acb8b64a2b": [179, 196], "dnnl_acdb8b64a2b": [179, 196], "dnnl_acdeb8b64a2b": [179, 196], "dnnl_acb8b32a2b": [179, 196], "dnnl_acdb8b32a2b": [179, 196], "dnnl_acdeb8b32a2b": [179, 196], "dnnl_acb8b24a2b": [179, 196], "dnnl_acdb8b24a2b": [179, 196], "dnnl_acdeb8b24a2b": [179, 196], "dnnl_acb8b16a2b": [179, 196], "dnnl_acdb8b16a2b": [179, 196], "dnnl_acdeb8b16a2b": [179, 196], "dnnl_acb8b8a2b": [179, 196], "dnnl_acdb8b8a2b": [179, 196], "dnnl_acdeb8b8a2b": [179, 196], "dnnl_acb4b64a4b": [179, 196], "dnnl_acdb4b64a4b": [179, 196], "dnnl_acdeb4b64a4b": [179, 196], "dnnl_acb4b32a4b": [179, 196], "dnnl_acdb4b32a4b": [179, 196], "dnnl_acdeb4b32a4b": [179, 196], "dnnl_acb4b24a4b": [179, 196], "dnnl_acdb4b24a4b": [179, 196], "dnnl_acdeb4b24a4b": [179, 196], "dnnl_acb4b16a4b": [179, 196], "dnnl_acdb4b16a4b": [179, 196], "dnnl_acdeb4b16a4b": [179, 196], "dnnl_acb4b8a4b": [179, 196], "dnnl_acdb4b8a4b": [179, 196], "dnnl_acdeb4b8a4b": [179, 196], "dnnl_ab4a": [179, 196], "dnnl_ab8a": [179, 196], "dnnl_ba4b4a": [179, 196], "dnnl_ba8b4a": [179, 196], "dnnl_ba2a24b": [179, 196], "dnnl_acb2b24c": [179, 196], "dnnl_ba2a8b": [179, 196], "dnnl_acb2b8c": [179, 196], "dnnl_ba8a24b": [179, 196], "dnnl_acb8b24c": [179, 196], "dnnl_ba8a16b": [179, 196], "dnnl_acb8b16c": [179, 196], "dnnl_ba8a8b": [179, 196], "dnnl_acb8b8c": [179, 196], "dnnl_bcad": [179, 196], "dnnl_cabd": [179, 196], "dnnl_dabc": [179, 196], "dnnl_ab32a": [179, 196], "dnnl_acbd8b8c": [179, 196], "dnnl_acbde8b8c": [179, 196], "dnnl_bac8a8b": [179, 196], "dnnl_bacd8a8b": [179, 196], "dnnl_bacde8a8b": [179, 196], "dnnl_acbdef8b8c": [179, 196], "dnnl_abdec16e4c": [179, 196], "dnnl_abdc16d4c": [179, 196], "dnnl_ba24b8a": [179, 196], "dnnl_acb24c8b": [179, 196], "dnnl_abdc24d8c": [179, 196], "dnnl_format_tag_last": [179, 196], "dnnl_cn": 179, "dnnl_owi": 179, "dnnl_woi": [179, 196], "dnnl_iwo": 179, "dnnl_hwoi": [179, 196], "dnnl_ohwi": 179, "dnnl_ihwo": 179, "dnnl_iohw": 179, "dnnl_iodhw": 179, "dnnl_dhwoi": [179, 196], "dnnl_odhwi": 179, "dnnl_idhwo": 179, "dnnl_goiw": 179, "dnnl_gowi": 179, "dnnl_wigo": 179, "dnnl_goihw": 179, "dnnl_gohwi": 179, "dnnl_hwigo": 179, "dnnl_giohw": 179, "dnnl_goidhw": 179, "dnnl_godhwi": 179, "dnnl_giodhw": 179, "dnnl_dhwigo": 179, "dnnl_ldoi16o": 179, "dnnl_ldoi32o": 179, "dnnl_ldoi16o4i": 179, "dnnl_ldoi32o4i": 179, "dnnl_ldio32i": [179, 196], "dnnl_ldgoi16o": 179, "dnnl_ldgoi16o4i": 179, "dnnl_ldgoi32o": 179, "dnnl_ldgoi32o2i": 179, "dnnl_ldgoi32o4i": 179, "dnnl_ldgoi64o2i": 179, "dnnl_ldgoi64o4i": 179, "dnnl_ldgio16i": [179, 196], "dnnl_ldgio32i": [179, 196], "dnnl_ldgio32i2o": [179, 196], "dnnl_ncdhw32c": [179, 196], "dnnl_ncdhw16c": [179, 196], "dnnl_ncdhw4c": [179, 196], "dnnl_nchw32c": [179, 196], "dnnl_nchw4c": [179, 196], "dnnl_ncw32c": [179, 196], "dnnl_ncw16c": [179, 196], "dnnl_ncw4c": [179, 196], "dnnl_ncw8c": [179, 196], "dnnl_ncw16n16c": [179, 196], "dnnl_ncdhw16n16c": [179, 196], "dnnl_nchw16n16c": [179, 196], "dnnl_ncw32n16c": [179, 196], "dnnl_nchw32n16c": [179, 196], "dnnl_nchw16n32c": [179, 196], "dnnl_ncdhw32n16c": [179, 196], "dnnl_ncw32n32c": [179, 196], "dnnl_nchw32n32c": [179, 196], "dnnl_ncdhw32n32c": [179, 196], "dnnl_oi16i16o": [179, 196], "dnnl_oi16i32o": [179, 196], "dnnl_oi16i48o": [179, 196], "dnnl_oi16i64o": [179, 196], "dnnl_oi8i8o2i": [179, 196], "dnnl_oi8i16o2i": [179, 196], "dnnl_oi8i24o2i": [179, 196], "dnnl_oi8i32o2i": [179, 196], "dnnl_oi8i64o2i": [179, 196], "dnnl_oi4i8o4i": [179, 196], "dnnl_oi4i16o4i": [179, 196], "dnnl_oi4i24o4i": [179, 196], "dnnl_oi4i32o4i": [179, 196], "dnnl_oi4i64o4i": [179, 196], "dnnl_oi16i16o4i": [179, 196], "dnnl_oi8i32o": [179, 196], "dnnl_oi8i24o": [179, 196], "dnnl_oi8i16o": [179, 196], "dnnl_oi8i8o": [179, 196], "dnnl_iow8o8i": [179, 196], "dnnl_iow16o16i": [179, 196], "dnnl_iow16i16o": [179, 196], "dnnl_oiw16i16o": [179, 196], "dnnl_owi16i16o": [179, 196], "dnnl_oiw16i32o": [179, 196], "dnnl_owi16i32o": [179, 196], "dnnl_oiw16i48o": [179, 196], "dnnl_owi16i48o": [179, 196], "dnnl_oiw16i64o": [179, 196], "dnnl_owi16i64o": [179, 196], "dnnl_oiw16o16i": [179, 196], "dnnl_oiw16o": [179, 196], "dnnl_oiw4i8o4i": [179, 196], "dnnl_owi4i8o4i": [179, 196], "dnnl_oiw4i16o4i": [179, 196], "dnnl_owi4i16o4i": [179, 196], "dnnl_oiw4i24o4i": [179, 196], "dnnl_owi4i24o4i": [179, 196], "dnnl_oiw4i32o4i": [179, 196], "dnnl_owi4i32o4i": [179, 196], "dnnl_oiw4i64o4i": [179, 196], "dnnl_owi4i64o4i": [179, 196], "dnnl_oiw2i8o4i": [179, 196], "dnnl_oiw16i16o4i": [179, 196], "dnnl_oiw16i16o2i": [179, 196], "dnnl_oiw16o16i2o": [179, 196], "dnnl_oiw4i4o": [179, 196], "dnnl_oiw4o4i": [179, 196], "dnnl_oiw4o": [179, 196], "dnnl_oiw8i8o2i": [179, 196], "dnnl_owi8i8o2i": [179, 196], "dnnl_oiw8i16o2i": [179, 196], "dnnl_owi8i16o2i": [179, 196], "dnnl_oiw8i24o2i": [179, 196], "dnnl_owi8i24o2i": [179, 196], "dnnl_oiw8i32o2i": [179, 196], "dnnl_owi8i32o2i": [179, 196], "dnnl_oiw8i64o2i": [179, 196], "dnnl_owi8i64o2i": [179, 196], "dnnl_oiw8i8o": [179, 196], "dnnl_owi8i8o": [179, 196], "dnnl_oiw8o16i2o": [179, 196], "dnnl_iow8o16i2o": [179, 196], "dnnl_oiw8o8i": [179, 196], "dnnl_oiw8o4i": [179, 196], "dnnl_owi16o": [179, 196], "dnnl_owi16o2i": [179, 196], "dnnl_owi16o4i": [179, 196], "dnnl_iwo8i": [179, 196], "dnnl_iwo8i2o": [179, 196], "dnnl_iwo8i4o": [179, 196], "dnnl_iwo16i": [179, 196], "dnnl_iwo16i2o": [179, 196], "dnnl_iwo16i4o": [179, 196], "dnnl_iwo24i": [179, 196], "dnnl_iwo24i2o": [179, 196], "dnnl_iwo24i4o": [179, 196], "dnnl_owi4o": [179, 196], "dnnl_owi8o": [179, 196], "dnnl_owi8o2i": [179, 196], "dnnl_oiw8i32o": [179, 196], "dnnl_owi8i32o": [179, 196], "dnnl_oiw8i24o": [179, 196], "dnnl_owi8i24o": [179, 196], "dnnl_oiw8i16o": [179, 196], "dnnl_owi8i16o": [179, 196], "dnnl_owi8o4i": [179, 196], "dnnl_iohw16i16o": [179, 196], "dnnl_iohw8o8i": [179, 196], "dnnl_iohw16o16i": [179, 196], "dnnl_ohwi16o": [179, 196], "dnnl_ohwi16o2i": [179, 196], "dnnl_ohwi16o4i": [179, 196], "dnnl_ihwo8i": [179, 196], "dnnl_ihwo8i2o": [179, 196], "dnnl_ihwo8i4o": [179, 196], "dnnl_ihwo16i": [179, 196], "dnnl_ihwo16i2o": [179, 196], "dnnl_ihwo16i4o": [179, 196], "dnnl_ihwo24i": [179, 196], "dnnl_ihwo24i2o": [179, 196], "dnnl_ihwo24i4o": [179, 196], "dnnl_ohwi24o": [179, 196], "dnnl_ohwi32o": [179, 196], "dnnl_ohwi4o": [179, 196], "dnnl_ohwi8o": [179, 196], "dnnl_ohwi8o2i": [179, 196], "dnnl_ohwi8o4i": [179, 196], "dnnl_oihw16i16o": [179, 196], "dnnl_ohwi16i16o": [179, 196], "dnnl_oihw16i32o": [179, 196], "dnnl_ohwi16i32o": [179, 196], "dnnl_oihw16i48o": [179, 196], "dnnl_ohwi16i48o": [179, 196], "dnnl_oihw16i64o": [179, 196], "dnnl_ohwi16i64o": [179, 196], "dnnl_oihw16o16i": [179, 196], "dnnl_oihw16o": [179, 196], "dnnl_oihw4i8o4i": [179, 196], "dnnl_ohwi4i8o4i": [179, 196], "dnnl_oihw4i16o4i": [179, 196], "dnnl_ohwi4i16o4i": [179, 196], "dnnl_oihw4i24o4i": [179, 196], "dnnl_ohwi4i24o4i": [179, 196], "dnnl_oihw4i32o4i": [179, 196], "dnnl_ohwi4i32o4i": [179, 196], "dnnl_oihw4i64o4i": [179, 196], "dnnl_ohwi4i64o4i": [179, 196], "dnnl_oihw16i16o4i": [179, 196], "dnnl_oihw16i16o2i": [179, 196], "dnnl_oihw16o16i2o": [179, 196], "dnnl_oihw4i4o": [179, 196], "dnnl_oihw4o4i": [179, 196], "dnnl_oihw4o": [179, 196], "dnnl_oihw8i8o2i": [179, 196], "dnnl_ohwi8i8o2i": [179, 196], "dnnl_oihw8i16o2i": [179, 196], "dnnl_ohwi8i16o2i": [179, 196], "dnnl_oihw8i32o2i": [179, 196], "dnnl_ohwi8i32o2i": [179, 196], "dnnl_oihw8i24o2i": [179, 196], "dnnl_ohwi8i24o2i": [179, 196], "dnnl_oihw8i64o2i": [179, 196], "dnnl_ohwi8i64o2i": [179, 196], "dnnl_oihw8i8o": [179, 196], "dnnl_ohwi8i8o": [179, 196], "dnnl_oihw8o16i2o": [179, 196], "dnnl_oihw2i8o4i": [179, 196], "dnnl_iohw8o16i2o": [179, 196], "dnnl_oihw8o8i": [179, 196], "dnnl_oihw8o4i": [179, 196], "dnnl_owhi16o": [179, 196], "dnnl_oihw8i32o": [179, 196], "dnnl_ohwi8i32o": [179, 196], "dnnl_oihw8i24o": [179, 196], "dnnl_ohwi8i24o": [179, 196], "dnnl_oihw8i16o": [179, 196], "dnnl_ohwi8i16o": [179, 196], "dnnl_odhwi16o": [179, 196], "dnnl_odhwi16o2i": [179, 196], "dnnl_odhwi16o4i": [179, 196], "dnnl_idhwo8i": [179, 196], "dnnl_idhwo8i2o": [179, 196], "dnnl_idhwo8i4o": [179, 196], "dnnl_idhwo16i": [179, 196], "dnnl_idhwo16i2o": [179, 196], "dnnl_idhwo16i4o": [179, 196], "dnnl_idhwo24i": [179, 196], "dnnl_idhwo24i2o": [179, 196], "dnnl_idhwo24i4o": [179, 196], "dnnl_odhwi4o": [179, 196], "dnnl_odhwi8o": [179, 196], "dnnl_odhwi8o2i": [179, 196], "dnnl_odhwi8o4i": [179, 196], "dnnl_odwhi16o": [179, 196], "dnnl_oidhw16i16o": [179, 196], "dnnl_odhwi16i16o": [179, 196], "dnnl_oidhw16i32o": [179, 196], "dnnl_odhwi16i32o": [179, 196], "dnnl_oidhw16i48o": [179, 196], "dnnl_odhwi16i48o": [179, 196], "dnnl_oidhw16i64o": [179, 196], "dnnl_odhwi16i64o": [179, 196], "dnnl_oidhw16o16i": [179, 196], "dnnl_oidhw16o": [179, 196], "dnnl_oidhw4i4o": [179, 196], "dnnl_oidhw4o4i": [179, 196], "dnnl_oidhw4o": [179, 196], "dnnl_oidhw8i8o2i": [179, 196], "dnnl_odhwi8i8o2i": [179, 196], "dnnl_oidhw8i16o2i": [179, 196], "dnnl_odhwi8i16o2i": [179, 196], "dnnl_oidhw8i32o2i": [179, 196], "dnnl_odhwi8i32o2i": [179, 196], "dnnl_oidhw8i24o2i": [179, 196], "dnnl_odhwi8i24o2i": [179, 196], "dnnl_oidhw8i64o2i": [179, 196], "dnnl_odhwi8i64o2i": [179, 196], "dnnl_oidhw8i8o": [179, 196], "dnnl_odhwi8i8o": [179, 196], "dnnl_oidhw8o16i2o": [179, 196], "dnnl_iodhw8o16i2o": [179, 196], "dnnl_oidhw4i8o4i": [179, 196], "dnnl_odhwi4i8o4i": [179, 196], "dnnl_oidhw4i16o4i": [179, 196], "dnnl_odhwi4i16o4i": [179, 196], "dnnl_oidhw4i24o4i": [179, 196], "dnnl_odhwi4i24o4i": [179, 196], "dnnl_oidhw4i32o4i": [179, 196], "dnnl_odhwi4i32o4i": [179, 196], "dnnl_oidhw4i64o4i": [179, 196], "dnnl_odhwi4i64o4i": [179, 196], "dnnl_oidhw16i16o4i": [179, 196], "dnnl_oidhw16i16o2i": [179, 196], "dnnl_oidhw2i8o4i": [179, 196], "dnnl_oidhw8o8i": [179, 196], "dnnl_oidhw8o4i": [179, 196], "dnnl_iodhw16i16o": [179, 196], "dnnl_oidhw4o8i8o4i": [179, 196], "dnnl_iodhw8o8i": [179, 196], "dnnl_iodhw16o16i": [179, 196], "dnnl_oidhw16o16i2o": [179, 196], "dnnl_oidhw8i32o": [179, 196], "dnnl_odhwi8i32o": [179, 196], "dnnl_oidhw8i24o": [179, 196], "dnnl_odhwi8i24o": [179, 196], "dnnl_oidhw8i16o": [179, 196], "dnnl_odhwi8i16o": [179, 196], "dnnl_goiw16g": [179, 196], "dnnl_goiw8g": [179, 196], "dnnl_goiw4g": [179, 196], "dnnl_giow8o8i": [179, 196], "dnnl_giow16o16i": [179, 196], "dnnl_giow16i16o": [179, 196], "dnnl_goiw16i16o": [179, 196], "dnnl_goiw16o16i": [179, 196], "dnnl_goiw16o": [179, 196], "dnnl_goiw4i16o4i": [179, 196], "dnnl_goiw2i8o4i": [179, 196], "dnnl_goiw16i16o4i": [179, 196], "dnnl_goiw16i16o2i": [179, 196], "dnnl_goiw16o16i2o": [179, 196], "dnnl_goiw4i4o": [179, 196], "dnnl_goiw4o4i": [179, 196], "dnnl_goiw4o": [179, 196], "dnnl_goiw8i16o2i": [179, 196], "dnnl_goiw8i8o": [179, 196], "dnnl_goiw8o16i2o": [179, 196], "dnnl_giow8o16i2o": [179, 196], "dnnl_goiw8o8i": [179, 196], "dnnl_goiw8o4i": [179, 196], "dnnl_gowi16o": [179, 196], "dnnl_gowi16o2i": [179, 196], "dnnl_gowi16o4i": [179, 196], "dnnl_giwo8i": [179, 196], "dnnl_giwo8i2o": [179, 196], "dnnl_giwo8i4o": [179, 196], "dnnl_giwo16i": [179, 196], "dnnl_giwo16i2o": [179, 196], "dnnl_giwo16i4o": [179, 196], "dnnl_giwo24i": [179, 196], "dnnl_giwo24i2o": [179, 196], "dnnl_giwo24i4o": [179, 196], "dnnl_gowi4o": [179, 196], "dnnl_gowi8o": [179, 196], "dnnl_gowi8o2i": [179, 196], "dnnl_gowi8o4i": [179, 196], "dnnl_goiw32g": [179, 196], "dnnl_goiw2i4o2i": [179, 196], "dnnl_goiw2o4i2o": [179, 196], "dnnl_goiw4i8o2i": [179, 196], "dnnl_goiw4o8i2o": [179, 196], "dnnl_goiw4i": [179, 196], "dnnl_goiw32i": [179, 196], "dnnl_giohw16i16o": [179, 196], "dnnl_giohw8o8i": [179, 196], "dnnl_giohw16o16i": [179, 196], "dnnl_gohwi16o": [179, 196], "dnnl_gohwi16o2i": [179, 196], "dnnl_gohwi16o4i": [179, 196], "dnnl_gihwo8i": [179, 196], "dnnl_gihwo8i2o": [179, 196], "dnnl_gihwo8i4o": [179, 196], "dnnl_gihwo16i": [179, 196], "dnnl_gihwo16i2o": [179, 196], "dnnl_gihwo16i4o": [179, 196], "dnnl_gihwo24i": [179, 196], "dnnl_gihwo24i2o": [179, 196], "dnnl_gihwo24i4o": [179, 196], "dnnl_gohwi32o": [179, 196], "dnnl_gohwi24o": [179, 196], "dnnl_gohwi24o2i": [179, 196], "dnnl_gohwi24o4i": [179, 196], "dnnl_gohwi4o": [179, 196], "dnnl_gohwi8o": [179, 196], "dnnl_gohwi8o2i": [179, 196], "dnnl_gohwi8o4i": [179, 196], "dnnl_goihw16g": [179, 196], "dnnl_goihw16i16o": [179, 196], "dnnl_goihw16o16i": [179, 196], "dnnl_goihw16o": [179, 196], "dnnl_goihw2i8o4i": [179, 196], "dnnl_goihw4i16o4i": [179, 196], "dnnl_goihw16i16o4i": [179, 196], "dnnl_goihw16i16o2i": [179, 196], "dnnl_goihw16o16i2o": [179, 196], "dnnl_goihw4i4o": [179, 196], "dnnl_goihw4o4i": [179, 196], "dnnl_goihw4o": [179, 196], "dnnl_goihw8g": [179, 196], "dnnl_goihw4g": [179, 196], "dnnl_goihw8i16o2i": [179, 196], "dnnl_goihw8i8o": [179, 196], "dnnl_goihw8o16i2o": [179, 196], "dnnl_giohw8o16i2o": [179, 196], "dnnl_goihw8o8i": [179, 196], "dnnl_goihw8o4i": [179, 196], "dnnl_goihw32g": [179, 196], "dnnl_gowhi16o": [179, 196], "dnnl_goihw4i": [179, 196], "dnnl_goihw32i": [179, 196], "dnnl_oiw4o8i8o4i": [179, 196], "dnnl_oihw4o8i8o4i": [179, 196], "dnnl_iow4i8o8i4o": [179, 196], "dnnl_iohw4i8o8i4o": [179, 196], "dnnl_iodhw4i8o8i4o": [179, 196], "dnnl_oihw2o8i8o2i": [179, 196], "dnnl_goiw4o8i8o4i": [179, 196], "dnnl_goihw4o8i8o4i": [179, 196], "dnnl_goidhw4o8i8o4i": [179, 196], "dnnl_giow4i8o8i4o": [179, 196], "dnnl_giohw4i8o8i4o": [179, 196], "dnnl_giodhw4i8o8i4o": [179, 196], "dnnl_goihw2o8i8o2i": [179, 196], "dnnl_goihw2i4o2i": [179, 196], "dnnl_goihw2o4i2o": [179, 196], "dnnl_goihw4i8o2i": [179, 196], "dnnl_goihw4o8i2o": [179, 196], "dnnl_giodhw16i16o": [179, 196], "dnnl_giodhw8o8i": [179, 196], "dnnl_giodhw16o16i": [179, 196], "dnnl_godhwi16o": [179, 196], "dnnl_godhwi16o2i": [179, 196], "dnnl_godhwi16o4i": [179, 196], "dnnl_gidhwo8i": [179, 196], "dnnl_gidhwo8i2o": [179, 196], "dnnl_gidhwo8i4o": [179, 196], "dnnl_gidhwo16i": [179, 196], "dnnl_gidhwo16i2o": [179, 196], "dnnl_gidhwo16i4o": [179, 196], "dnnl_gidhwo24i": [179, 196], "dnnl_gidhwo24i2o": [179, 196], "dnnl_gidhwo24i4o": [179, 196], "dnnl_godhwi4o": [179, 196], "dnnl_godhwi8o": [179, 196], "dnnl_godhwi8o2i": [179, 196], "dnnl_godhwi8o4i": [179, 196], "dnnl_godwhi16o": [179, 196], "dnnl_goidhw16i16o": [179, 196], "dnnl_goidhw4i16o4i": [179, 196], "dnnl_goidhw16i16o4i": [179, 196], "dnnl_goidhw2i8o4i": [179, 196], "dnnl_goidhw16i16o2i": [179, 196], "dnnl_goidhw16o16i": [179, 196], "dnnl_goidhw16o16i2o": [179, 196], "dnnl_goidhw16o": [179, 196], "dnnl_goidhw4i4o": [179, 196], "dnnl_goidhw4o4i": [179, 196], "dnnl_goidhw4o": [179, 196], "dnnl_goidhw8i16o2i": [179, 196], "dnnl_goidhw8i8o": [179, 196], "dnnl_goidhw8o16i2o": [179, 196], "dnnl_giodhw8o16i2o": [179, 196], "dnnl_goidhw8o8i": [179, 196], "dnnl_goidhw8o4i": [179, 196], "dnnl_goidhw16g": [179, 196], "dnnl_goidhw32g": [179, 196], "dnnl_goidhw2i4o2i": [179, 196], "dnnl_goidhw4i8o2i": [179, 196], "dnnl_goidhw2o4i2o": [179, 196], "dnnl_goidhw4o8i2o": [179, 196], "dnnl_goidhw4i": [179, 196], "dnnl_goidhw32i": [179, 196], "dnnl_owi24o": [179, 196], "dnnl_owi24o2i": [179, 196], "dnnl_owi24o4i": [179, 196], "dnnl_owi32o": [179, 196], "dnnl_owi32o2i": [179, 196], "dnnl_owi32o4i": [179, 196], "dnnl_owi48o": [179, 196], "dnnl_owi48o2i": [179, 196], "dnnl_owi48o4i": [179, 196], "dnnl_owi64o": [179, 196], "dnnl_owi64o2i": [179, 196], "dnnl_owi64o4i": [179, 196], "dnnl_iwo32i": [179, 196], "dnnl_iwo32i2o": [179, 196], "dnnl_iwo32i4o": [179, 196], "dnnl_iwo48i": [179, 196], "dnnl_iwo48i2o": [179, 196], "dnnl_iwo48i4o": [179, 196], "dnnl_iwo64i": [179, 196], "dnnl_iwo64i2o": [179, 196], "dnnl_iwo64i4o": [179, 196], "dnnl_wio2i": [179, 196], "dnnl_wio4i": [179, 196], "dnnl_gowi24o": [179, 196], "dnnl_gowi24o2i": [179, 196], "dnnl_gowi24o4i": [179, 196], "dnnl_gowi32o": [179, 196], "dnnl_gowi32o2i": [179, 196], "dnnl_gowi32o4i": [179, 196], "dnnl_gowi48o": [179, 196], "dnnl_gowi48o2i": [179, 196], "dnnl_gowi48o4i": [179, 196], "dnnl_gowi64o": [179, 196], "dnnl_gowi64o2i": [179, 196], "dnnl_gowi64o4i": [179, 196], "dnnl_giwo32i": [179, 196], "dnnl_giwo32i2o": [179, 196], "dnnl_giwo32i4o": [179, 196], "dnnl_giwo48i": [179, 196], "dnnl_giwo48i2o": [179, 196], "dnnl_giwo48i4o": [179, 196], "dnnl_giwo64i": [179, 196], "dnnl_giwo64i2o": [179, 196], "dnnl_giwo64i4o": [179, 196], "dnnl_gwio": [179, 196], "dnnl_gwio2i": [179, 196], "dnnl_gwio4i": [179, 196], "dnnl_ohwi24o2i": [179, 196], "dnnl_ohwi24o4i": [179, 196], "dnnl_ohwi32o2i": [179, 196], "dnnl_ohwi32o4i": [179, 196], "dnnl_ohwi48o": [179, 196], "dnnl_ohwi48o2i": [179, 196], "dnnl_ohwi48o4i": [179, 196], "dnnl_ohwi64o": [179, 196], "dnnl_ohwi64o2i": [179, 196], "dnnl_ohwi64o4i": [179, 196], "dnnl_ihwo32i": [179, 196], "dnnl_ihwo32i2o": [179, 196], "dnnl_ihwo32i4o": [179, 196], "dnnl_ihwo48i": [179, 196], "dnnl_ihwo48i2o": [179, 196], "dnnl_ihwo48i4o": [179, 196], "dnnl_ihwo64i": [179, 196], "dnnl_ihwo64i2o": [179, 196], "dnnl_ihwo64i4o": [179, 196], "dnnl_hwio2i": [179, 196], "dnnl_hwio4i": [179, 196], "dnnl_gohwi32o2i": [179, 196], "dnnl_gohwi32o4i": [179, 196], "dnnl_gohwi48o": [179, 196], "dnnl_gohwi48o2i": [179, 196], "dnnl_gohwi48o4i": [179, 196], "dnnl_gohwi64o": [179, 196], "dnnl_gohwi64o2i": [179, 196], "dnnl_gohwi64o4i": [179, 196], "dnnl_gihwo32i": [179, 196], "dnnl_gihwo32i2o": [179, 196], "dnnl_gihwo32i4o": [179, 196], "dnnl_gihwo48i": [179, 196], "dnnl_gihwo48i2o": [179, 196], "dnnl_gihwo48i4o": [179, 196], "dnnl_gihwo64i": [179, 196], "dnnl_gihwo64i2o": [179, 196], "dnnl_gihwo64i4o": [179, 196], "dnnl_ghwio": [179, 196], "dnnl_ghwio2i": [179, 196], "dnnl_ghwio4i": [179, 196], "dnnl_odhwi24o": [179, 196], "dnnl_odhwi24o2i": [179, 196], "dnnl_odhwi24o4i": [179, 196], "dnnl_odhwi32o": [179, 196], "dnnl_odhwi32o2i": [179, 196], "dnnl_odhwi32o4i": [179, 196], "dnnl_odhwi48o": [179, 196], "dnnl_odhwi48o2i": [179, 196], "dnnl_odhwi48o4i": [179, 196], "dnnl_odhwi64o": [179, 196], "dnnl_odhwi64o2i": [179, 196], "dnnl_odhwi64o4i": [179, 196], "dnnl_idhwo32i": [179, 196], "dnnl_idhwo32i2o": [179, 196], "dnnl_idhwo32i4o": [179, 196], "dnnl_idhwo48i": [179, 196], "dnnl_idhwo48i2o": [179, 196], "dnnl_idhwo48i4o": [179, 196], "dnnl_idhwo64i": [179, 196], "dnnl_idhwo64i2o": [179, 196], "dnnl_idhwo64i4o": [179, 196], "dnnl_dhwio2i": [179, 196], "dnnl_dhwio4i": [179, 196], "dnnl_godhwi24o": [179, 196], "dnnl_godhwi24o2i": [179, 196], "dnnl_godhwi24o4i": [179, 196], "dnnl_godhwi32o": [179, 196], "dnnl_godhwi32o2i": [179, 196], "dnnl_godhwi32o4i": [179, 196], "dnnl_godhwi48o": [179, 196], "dnnl_godhwi48o2i": [179, 196], "dnnl_godhwi48o4i": [179, 196], "dnnl_godhwi64o": [179, 196], "dnnl_godhwi64o2i": [179, 196], "dnnl_godhwi64o4i": [179, 196], "dnnl_gidhwo32i": [179, 196], "dnnl_gidhwo32i2o": [179, 196], "dnnl_gidhwo32i4o": [179, 196], "dnnl_gidhwo48i": [179, 196], "dnnl_gidhwo48i2o": [179, 196], "dnnl_gidhwo48i4o": [179, 196], "dnnl_gidhwo64i": [179, 196], "dnnl_gidhwo64i2o": [179, 196], "dnnl_gidhwo64i4o": [179, 196], "dnnl_gdhwio": [179, 196], "dnnl_gdhwio2i": [179, 196], "dnnl_gdhwio4i": [179, 196], "dnnl_oi16i32o4i": [179, 196], "dnnl_oi16i48o4i": [179, 196], "dnnl_oi16i64o4i": [179, 196], "dnnl_oi16i16o2i": [179, 196], "dnnl_oi16i32o2i": [179, 196], "dnnl_oi16i48o2i": [179, 196], "dnnl_oi16i64o2i": [179, 196], "dnnl_oiw16i32o4i": [179, 196], "dnnl_oiw16i48o4i": [179, 196], "dnnl_oiw16i64o4i": [179, 196], "dnnl_oiw16i32o2i": [179, 196], "dnnl_oiw16i48o2i": [179, 196], "dnnl_oiw16i64o2i": [179, 196], "dnnl_oihw16i32o4i": [179, 196], "dnnl_oihw16i48o4i": [179, 196], "dnnl_oihw16i64o4i": [179, 196], "dnnl_oihw16i32o2i": [179, 196], "dnnl_oihw16i48o2i": [179, 196], "dnnl_oihw16i64o2i": [179, 196], "dnnl_oidhw16i32o4i": [179, 196], "dnnl_oidhw16i48o4i": [179, 196], "dnnl_oidhw16i64o4i": [179, 196], "dnnl_oidhw16i32o2i": [179, 196], "dnnl_oidhw16i48o2i": [179, 196], "dnnl_oidhw16i64o2i": [179, 196], "dnnl_owi16i16o2i": [179, 196], "dnnl_owi16i16o4i": [179, 196], "dnnl_ohwi16i16o2i": [179, 196], "dnnl_ohwi16i16o4i": [179, 196], "dnnl_odhwi16i16o2i": [179, 196], "dnnl_odhwi16i16o4i": [179, 196], "dnnl_iwo16o16i2o": [179, 196], "dnnl_iwo16o16i4o": [179, 196], "dnnl_ihwo16o16i2o": [179, 196], "dnnl_ihwo16o16i4o": [179, 196], "dnnl_idhwo16o16i2o": [179, 196], "dnnl_idhwo16o16i4o": [179, 196], "dnnl_gowi16i16o2i": [179, 196], "dnnl_gowi16i16o4i": [179, 196], "dnnl_gohwi16i16o2i": [179, 196], "dnnl_gohwi16i16o4i": [179, 196], "dnnl_godhwi16i16o2i": [179, 196], "dnnl_godhwi16i16o4i": [179, 196], "dnnl_giwo16o16i2o": [179, 196], "dnnl_giwo16o16i4o": [179, 196], "dnnl_gihwo16o16i2o": [179, 196], "dnnl_gihwo16o16i4o": [179, 196], "dnnl_gidhwo16o16i2o": [179, 196], "dnnl_gidhwo16o16i4o": [179, 196], "dnnl_owi16i32o2i": [179, 196], "dnnl_owi16i32o4i": [179, 196], "dnnl_owi16i48o2i": [179, 196], "dnnl_owi16i48o4i": [179, 196], "dnnl_owi16i64o2i": [179, 196], "dnnl_owi16i64o4i": [179, 196], "dnnl_iwo16o32i2o": [179, 196], "dnnl_iwo16o32i4o": [179, 196], "dnnl_iwo16o48i2o": [179, 196], "dnnl_iwo16o48i4o": [179, 196], "dnnl_iwo16o64i2o": [179, 196], "dnnl_iwo16o64i4o": [179, 196], "dnnl_gowi16i32o2i": [179, 196], "dnnl_gowi16i32o4i": [179, 196], "dnnl_gowi16i48o2i": [179, 196], "dnnl_gowi16i48o4i": [179, 196], "dnnl_gowi16i64o2i": [179, 196], "dnnl_gowi16i64o4i": [179, 196], "dnnl_giwo16o32i2o": [179, 196], "dnnl_giwo16o32i4o": [179, 196], "dnnl_giwo16o48i2o": [179, 196], "dnnl_giwo16o48i4o": [179, 196], "dnnl_giwo16o64i2o": [179, 196], "dnnl_giwo16o64i4o": [179, 196], "dnnl_ohwi16i32o2i": [179, 196], "dnnl_ohwi16i32o4i": [179, 196], "dnnl_ohwi16i48o2i": [179, 196], "dnnl_ohwi16i48o4i": [179, 196], "dnnl_ohwi16i64o2i": [179, 196], "dnnl_ohwi16i64o4i": [179, 196], "dnnl_ihwo16o32i2o": [179, 196], "dnnl_ihwo16o32i4o": [179, 196], "dnnl_ihwo16o48i2o": [179, 196], "dnnl_ihwo16o48i4o": [179, 196], "dnnl_ihwo16o64i2o": [179, 196], "dnnl_ihwo16o64i4o": [179, 196], "dnnl_gohwi16i32o2i": [179, 196], "dnnl_gohwi16i32o4i": [179, 196], "dnnl_gohwi16i48o2i": [179, 196], "dnnl_gohwi16i48o4i": [179, 196], "dnnl_gohwi16i64o2i": [179, 196], "dnnl_gohwi16i64o4i": [179, 196], "dnnl_gihwo16o32i2o": [179, 196], "dnnl_gihwo16o32i4o": [179, 196], "dnnl_gihwo16o48i2o": [179, 196], "dnnl_gihwo16o48i4o": [179, 196], "dnnl_gihwo16o64i2o": [179, 196], "dnnl_gihwo16o64i4o": [179, 196], "dnnl_odhwi16i32o2i": [179, 196], "dnnl_odhwi16i32o4i": [179, 196], "dnnl_odhwi16i48o2i": [179, 196], "dnnl_odhwi16i48o4i": [179, 196], "dnnl_odhwi16i64o2i": [179, 196], "dnnl_odhwi16i64o4i": [179, 196], "dnnl_idhwo16o32i2o": [179, 196], "dnnl_idhwo16o32i4o": [179, 196], "dnnl_idhwo16o48i2o": [179, 196], "dnnl_idhwo16o48i4o": [179, 196], "dnnl_idhwo16o64i2o": [179, 196], "dnnl_idhwo16o64i4o": [179, 196], "dnnl_godhwi16i32o2i": [179, 196], "dnnl_godhwi16i32o4i": [179, 196], "dnnl_godhwi16i48o2i": [179, 196], "dnnl_godhwi16i48o4i": [179, 196], "dnnl_godhwi16i64o2i": [179, 196], "dnnl_godhwi16i64o4i": [179, 196], "dnnl_gidhwo16o32i2o": [179, 196], "dnnl_gidhwo16o32i4o": [179, 196], "dnnl_gidhwo16o48i2o": [179, 196], "dnnl_gidhwo16o48i4o": [179, 196], "dnnl_gidhwo16o64i2o": [179, 196], "dnnl_gidhwo16o64i4o": [179, 196], "dnnl_hwiog16g": [179, 196], "dnnl_hwiog8g": [179, 196], "dnnl_dhwiog16g": [179, 196], "dnnl_dhwiog8g": [179, 196], "dnnl_ncdhw40n16c": [179, 196], "dnnl_ncw40n16c": [179, 196], "dnnl_nchw40n16c": [179, 196], "dnnl_ncw40n32c": [179, 196], "dnnl_nchw40n32c": [179, 196], "dnnl_ncdhw40n32c": [179, 196], "dnnl_oidhw4o8i8o2i": [179, 196], "dnnl_oihw4o8i8o2i": [179, 196], "dnnl_oiw4o8i8o2i": [179, 196], "dnnl_goidhw4o8i8o2i": [179, 196], "dnnl_goihw4o8i8o2i": [179, 196], "dnnl_goiw4o8i8o2i": [179, 196], "dnnl_iodhw4i8o8i2o": [179, 196], "dnnl_iohw4i8o8i2o": [179, 196], "dnnl_iow4i8o8i2o": [179, 196], "dnnl_giodhw4i8o8i2o": [179, 196], "dnnl_giohw4i8o8i2o": [179, 196], "dnnl_giow4i8o8i2o": [179, 196], "dnnl_ncw2c32n8c": [179, 196], "dnnl_nchw2c32n8c": [179, 196], "dnnl_ncdhw2c32n8c": [179, 196], "dnnl_oiw2i8o16i4o": [179, 196], "dnnl_oihw2i8o16i4o": [179, 196], "dnnl_oidhw2i8o16i4o": [179, 196], "dnnl_oiw2o8i16o4i": [179, 196], "dnnl_oiw2o8i16o2i": [179, 196], "dnnl_iow2i8o16i4o": [179, 196], "dnnl_iow2i8o16i2o": [179, 196], "dnnl_oihw2o8i16o4i": [179, 196], "dnnl_oihw2o8i16o2i": [179, 196], "dnnl_iohw2i8o16i4o": [179, 196], "dnnl_iohw2i8o16i2o": [179, 196], "dnnl_oidhw2o8i16o4i": [179, 196], "dnnl_oidhw2o8i16o2i": [179, 196], "dnnl_iodhw2i8o16i4o": [179, 196], "dnnl_iodhw2i8o16i2o": [179, 196], "dnnl_goiw2o8i16o2i": [179, 196], "dnnl_giow2i8o16i2o": [179, 196], "dnnl_giohw2i8o16i2o": [179, 196], "dnnl_giodhw2i8o16i2o": [179, 196], "dnnl_goihw2o8i16o2i": [179, 196], "dnnl_goidhw2o8i16o2i": [179, 196], "dnnl_goiw2o8i16o4i": [179, 196], "dnnl_goihw2o8i16o4i": [179, 196], "ndhwc": [179, 196], "data_in_ncdhw": 179, "data_in_ndhwc": 179, "dnnl_memory_desc_destroi": [179, 231, 239, 250, 281, 306, 368, 378, 388], "categori": [179, 196, 283], "alia": [179, 196, 207, 208, 312, 356], "6d": [179, 196], "7d": [179, 196], "8d": [179, 196], "9d": [179, 196], "10d": [179, 196], "11d": [179, 196], "2nd": [179, 196], "sentinel": 179, "incl": 179, "seq_length": [179, 196], "num_lay": [179, 196, 261, 279, 410, 440], "num_direct": [179, 196, 261, 279, 410, 440], "input_channel": [179, 196, 261, 279, 410, 440], "num_gat": [179, 196, 261, 279, 410, 440], "output_channel": [179, 196, 261, 279, 410, 440], "num_channels_in_hidden_st": [179, 196], "num_channels_in_recurrent_project": [179, 196], "dnnl_fpmath_mode_strict": [180, 181, 288, 299, 318], "dnnl_fpmath_mode_bf16": [180, 181, 288, 299, 318], "dnnl_fpmath_mode_f16": [180, 181, 288, 299, 318], "dnnl_fpmath_mode_tf32": [180, 181, 288, 299, 318], "dnnl_fpmath_mode_ani": [180, 181, 288, 299, 318], "dnnl_graph_layout_type_undef": [182, 184], "dnnl_graph_layout_type_ani": [182, 184, 338], "dnnl_graph_layout_type_strid": [182, 184, 338, 482], "dnnl_graph_layout_type_opaqu": [182, 184, 482], "dnnl_graph_tensor_property_undef": [185, 193], "dnnl_graph_tensor_property_vari": [185, 193], "dnnl_graph_tensor_property_const": [185, 193], "dnnl_graph_op_attr_undef": [186, 187], "dnnl_graph_op_attr_alpha": [186, 187], "dnnl_graph_op_attr_beta": [186, 187], "dnnl_graph_op_attr_epsilon": [186, 187], "dnnl_graph_op_attr_max": [186, 187], "dnnl_graph_op_attr_min": [186, 187], "dnnl_graph_op_attr_momentum": [186, 187], "dnnl_graph_op_attr_scal": [186, 187], "dnnl_graph_op_attr_axi": [186, 187], "dnnl_graph_op_attr_begin_norm_axi": [186, 187], "dnnl_graph_op_attr_group": [186, 187], "dnnl_graph_op_attr_ax": [186, 187], "dnnl_graph_op_attr_dil": [186, 187], "dnnl_graph_op_attr_dst_shap": [186, 187], "dnnl_graph_op_attr_kernel": [186, 187], "dnnl_graph_op_attr_ord": [186, 187], "dnnl_graph_op_attr_output_pad": [186, 187], "dnnl_graph_op_attr_pads_begin": [186, 187], "dnnl_graph_op_attr_pads_end": [186, 187], "dnnl_graph_op_attr_shap": [186, 187], "dnnl_graph_op_attr_s": [186, 187], "dnnl_graph_op_attr_src_shap": [186, 187], "dnnl_graph_op_attr_strid": [186, 187], "dnnl_graph_op_attr_weights_shap": [186, 187], "dnnl_graph_op_attr_zp": [186, 187], "dnnl_graph_op_attr_group_shap": [186, 187], "dnnl_graph_op_attr_exclude_pad": [186, 187], "dnnl_graph_op_attr_keep_dim": [186, 187], "dnnl_graph_op_attr_keep_stat": [186, 187], "dnnl_graph_op_attr_per_channel_broadcast": [186, 187], "dnnl_graph_op_attr_special_zero": [186, 187], "dnnl_graph_op_attr_transpose_a": [186, 187], "dnnl_graph_op_attr_transpose_b": [186, 187], "dnnl_graph_op_attr_use_affin": [186, 187], "dnnl_graph_op_attr_use_dst": [186, 187], "dnnl_graph_op_attr_auto_broadcast": [186, 187], "dnnl_graph_op_attr_auto_pad": [186, 187], "dnnl_graph_op_attr_coordinate_transformation_mod": [186, 187], "dnnl_graph_op_attr_data_format": [186, 187, 482], "dnnl_graph_op_attr_mod": [186, 187], "dnnl_graph_op_attr_qtyp": [186, 187], "dnnl_graph_op_attr_rounding_typ": [186, 187], "dnnl_graph_op_attr_weights_format": [186, 187, 482], "dnnl_graph_op_attr_end": [186, 187], "illeg": 186, "weight_shap": [186, 187], "exter": [186, 187], "0x30": 187, "0x40": 187, "0x60": 187, "0x80": 187, "0xff": 187, "input_shap": 187, "dnnl_graph_op_ab": [188, 189], "absbackward": [188, 285], "dnnl_graph_op_abs_backward": [188, 189], "dnnl_graph_op_add": [188, 189], "avgpool": [188, 283, 285], "dnnl_graph_op_avg_pool": [188, 189], "dnnl_graph_op_avg_pool_backward": [188, 189], "batchnormforwardtrain": [188, 285], "dnnl_graph_op_batch_norm_forward_train": [188, 189], "dnnl_graph_op_batch_norm_infer": [188, 189], "batchnormtrainingbackward": [188, 283, 285], "dnnl_graph_op_batch_norm_backward": [188, 189], "dnnl_graph_op_bias_add": [188, 189], "biasaddbackward": [188, 283, 285], "dnnl_graph_op_bias_add_backward": [188, 189], "dnnl_graph_op_clamp": [188, 189], "clampbackward": [188, 285], "dnnl_graph_op_clamp_backward": [188, 189], "dnnl_graph_op_concat": [188, 189], "dnnl_graph_op_convolut": [188, 189], "convolutionbackwarddata": [188, 285], "dnnl_graph_op_convolution_backward_data": [188, 189], "convolutionbackwardweight": [188, 283, 285], "dnnl_graph_op_convolution_backward_weight": [188, 189], "convtranspos": [188, 283, 285], "dnnl_graph_op_conv_transpos": [188, 189], "convtransposebackwarddata": [188, 285], "dnnl_graph_op_conv_transpose_backward_data": [188, 189], "convtransposebackwardweight": [188, 285], "dnnl_graph_op_conv_transpose_backward_weight": [188, 189], "dnnl_graph_op_dequant": [188, 189], "dnnl_graph_op_divid": [188, 189], "dnnl_graph_op_dynamic_dequant": [188, 189], "dnnl_graph_op_dynamic_quant": [188, 189], "dnnl_graph_op_elu": [188, 189], "elubackward": [188, 285], "dnnl_graph_op_elu_backward": [188, 189], "dnnl_graph_op_end": [188, 189], "dnnl_graph_op_exp": [188, 189], "dnnl_graph_op_gelu": [188, 189], "gelubackward": [188, 285], "dnnl_graph_op_gelu_backward": [188, 189], "groupnorm": [188, 283, 285], "dnnl_graph_op_group_norm": [188, 189], "dnnl_graph_op_hard_sigmoid": [188, 189], "hardsigmoidbackward": [188, 285], "dnnl_graph_op_hard_sigmoid_backward": [188, 189], "dnnl_graph_op_hard_swish": [188, 189], "hardswishbackward": [188, 285], "dnnl_graph_op_hard_swish_backward": [188, 189], "dnnl_graph_op_interpol": [188, 189], "interpolatebackward": [188, 285], "dnnl_graph_op_interpolate_backward": [188, 189], "dnnl_graph_op_layer_norm": [188, 189], "layernormbackward": [188, 285], "dnnl_graph_op_layer_norm_backward": [188, 189], "leakyrelu": [188, 283, 285], "dnnl_graph_op_leaky_relu": [188, 189], "dnnl_graph_op_log": [188, 189], "dnnl_graph_op_log_softmax": [188, 189], "logsoftmaxbackward": [188, 285], "dnnl_graph_op_log_softmax_backward": [188, 189], "dnnl_graph_op_matmul": [188, 189], "dnnl_graph_op_maximum": [188, 189], "maxpool": [188, 283, 285], "dnnl_graph_op_max_pool": [188, 189], "maxpoolbackward": [188, 285], "dnnl_graph_op_max_pool_backward": [188, 189], "dnnl_graph_op_minimum": [188, 189], "dnnl_graph_op_mish": [188, 189], "mishbackward": [188, 285], "dnnl_graph_op_mish_backward": [188, 189], "dnnl_graph_op_multipli": [188, 189], "dnnl_graph_op_pow": [188, 189], "dnnl_graph_op_prelu": [188, 189], "prelubackward": [188, 285], "dnnl_graph_op_prelu_backward": [188, 189], "dnnl_graph_op_quant": [188, 189], "reciproc": [188, 283, 285], "dnnl_graph_op_reciproc": [188, 189], "reducel1": [188, 283, 285], "dnnl_graph_op_reduce_l1": [188, 189], "reducel2": [188, 283, 285], "dnnl_graph_op_reduce_l2": [188, 189], "reducemax": [188, 283, 285], "dnnl_graph_op_reduce_max": [188, 189], "reducemean": [188, 283, 285], "dnnl_graph_op_reduce_mean": [188, 189], "reducemin": [188, 283, 285], "dnnl_graph_op_reduce_min": [188, 189], "reduceprod": [188, 283, 285], "dnnl_graph_op_reduce_prod": [188, 189], "reducesum": [188, 283, 285], "dnnl_graph_op_reduce_sum": [188, 189], "dnnl_graph_op_relu": [188, 189], "relubackward": [188, 283, 285], "dnnl_graph_op_relu_backward": [188, 189], "dnnl_graph_op_reord": [188, 189], "dnnl_graph_op_round": [188, 189], "dnnl_graph_op_select": [188, 189], "dnnl_graph_op_sigmoid": [188, 189], "sigmoidbackward": [188, 285], "dnnl_graph_op_sigmoid_backward": [188, 189], "dnnl_graph_op_softmax": [188, 189], "softmaxbackward": [188, 285], "dnnl_graph_op_softmax_backward": [188, 189], "dnnl_graph_op_softplu": [188, 189], "softplusbackward": [188, 285], "dnnl_graph_op_softplus_backward": [188, 189], "dnnl_graph_op_sqrt": [188, 189], "sqrtbackward": [188, 285], "dnnl_graph_op_sqrt_backward": [188, 189], "dnnl_graph_op_squar": [188, 189], "squareddiffer": [188, 285], "dnnl_graph_op_squared_differ": [188, 189], "dnnl_graph_op_static_reshap": [188, 189], "dnnl_graph_op_static_transpos": [188, 189], "dnnl_graph_op_subtract": [188, 189], "dnnl_graph_op_tanh": [188, 189], "tanhbackward": [188, 285], "dnnl_graph_op_tanh_backward": [188, 189], "dnnl_graph_op_type_cast": [188, 189], "dnnl_graph_op_wildcard": [188, 189], "dnnl_graph_op_gen_index": [188, 189], "dnnl_graph_op_greater_equ": [188, 189], "lastsymbol": 188, "dnnl_graph_op_last_symbol": [188, 189], "dnnl_graph_partition_policy_fus": [190, 191], "dnnl_graph_partition_policy_debug": [190, 191], "chian": [190, 191], "dnnl_success": [192, 220, 221, 231, 239, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 336, 338, 339, 340, 341, 343, 344, 352, 354, 368, 378], "out_of_memori": [192, 220], "dnnl_out_of_memori": [192, 220, 221], "invalid_argu": [192, 220, 266, 310, 318, 394], "dnnl_invalid_argu": [192, 220, 221, 288, 306, 310, 318, 332, 333, 334], "last_impl_reach": [192, 220], "dnnl_last_impl_reach": [192, 220, 221, 312], "dnnl_runtime_error": [192, 220, 221, 318], "not_requir": [192, 220], "dnnl_not_requir": [192, 220, 221, 312], "invalid_graph": 192, "dnnl_invalid_graph": [192, 221], "invalid_graph_op": 192, "dnnl_invalid_graph_op": [192, 221], "dnnl_invalid_shap": [192, 221], "invalid_data_typ": 192, "dnnl_invalid_data_typ": [192, 221], "legitim": [192, 221], "bca": 196, "cba": 196, "abdc": 196, "acbd": 196, "adbc": 196, "bacd": 196, "bcda": 196, "cdba": 196, "dcab": 196, "abdec": 196, "bcdea": 196, "cdeba": 196, "decab": 196, "abcdef": 196, "abdfc": 196, "acbdef": 196, "abdefc": 196, "defcab": 196, "abcdf": 196, "abcdefg": 196, "abcdegf": 196, "abcdefgh": 196, "abcdefhg": 196, "abcdefghi": 196, "abcdefgih": 196, "abcdefghij": 196, "abcdefghji": 196, "abcdefghijk": 196, "abcdefghikj": 196, "abcdefghijkl": 196, "abcdefghijlk": 196, "cn": [196, 306], "tn": 196, "nt": 196, "nwc": 196, "chwn": [196, 394], "oi": [196, 242, 243, 379, 380], "oiw": 196, "owi": 196, "wio": 196, "iwo": 196, "oihw": [196, 232, 233, 234, 235, 237, 252, 259, 265, 266, 369, 370, 371, 372, 375, 390, 406, 419, 420], "hwio": 196, "ohwi": 196, "ihwo": 196, "iohw": 196, "oidhw": 196, "dhwio": 196, "odhwi": 196, "iodhw": 196, "idhwo": 196, "goiw": 196, "gowi": 196, "wigo": 196, "gohwi": 196, "goihw": [196, 232, 237, 375], "giohw": 196, "goidhw": 196, "giodhw": 196, "godhwi": 196, "dhwigo": 196, "ntc": 196, "ldigo": [196, 227, 246, 247, 261, 263, 272, 279, 360, 384, 385, 410, 415, 431, 440], "ldgoi": 196, "ldio": 196, "ldoi": 196, "ldgo": [196, 227, 246, 247, 261, 263, 272, 279, 360, 384, 385, 410, 415, 431, 440], "ab16b16a": 196, "ab16b32a": 196, "ab16b48a": 196, "ab16b64a": 196, "ab8b16a2b": 196, "ab8b32a2b": 196, "ab8b64a2b": 196, "ab4b16a4b": 196, "ab4b32a4b": 196, "ab4b64a4b": 196, "ab16b16a4b": 196, "ab16b32a4b": 196, "ab16b48a4b": 196, "ab16b64a4b": 196, "ab16b16a2b": 196, "ab16b32a2b": 196, "ab16b48a2b": 196, "ab16b64a2b": 196, "ab4a": 196, "ab8a": 196, "ab32a": 196, "abc16a": 196, "abc16a16b": 196, "abc4a4b": 196, "abc16b": 196, "abc32b": 196, "abc16b16a": 196, "acb16b16a": 196, "abc16b32a": 196, "acb16b32a": 196, "abc16b48a": 196, "acb16b48a": 196, "abc16b64a": 196, "acb16b64a": 196, "abc4a": 196, "abc4b": 196, "abc4b16a4b": 196, "acb4b16a4b": 196, "abc4b32a4b": 196, "acb4b32a4b": 196, "abc4b64a4b": 196, "acb4b64a4b": 196, "abc2b8a4b": 196, "abc16a16b2a": 196, "abc16b16a4b": 196, "abc16b32a4b": 196, "abc16b48a4b": 196, "abc16b64a4b": 196, "abc16b16a2b": 196, "abc16b32a2b": 196, "abc16b48a2b": 196, "abc16b64a2b": 196, "abc4b4a": 196, "abc8a16b2a": 196, "abc8a8b": 196, "abc8a4b": 196, "abc8b": 196, "abc8b16a2b": 196, "acb8b16a2b": 196, "abc8b32a2b": 196, "acb8b32a2b": 196, "abc8b64a2b": 196, "acb8b64a2b": 196, "abc8b8a": 196, "acb8b8a": 196, "abcd8a": 196, "abcd16a": 196, "abcd32a": 196, "abcd16a16b": 196, "abcd32b": 196, "acdb16b16a": 196, "abcd16b32a": 196, "acdb16b32a": 196, "abcd16b48a": 196, "acdb16b48a": 196, "abcd16b64a": 196, "acdb16b64a": 196, "abcd16b16c": 196, "abcd16c16b": 196, "abcd4a": 196, "abcd4b": 196, "abcd4b16a4b": 196, "acdb4b16a4b": 196, "abcd4b32a4b": 196, "acdb4b32a4b": 196, "abcd4b64a4b": 196, "acdb4b64a4b": 196, "abcd2b8a4b": 196, "abcd4b4a": 196, "abcd4a4b": 196, "abcd4c16b4c": 196, "abcd2c8b4c": 196, "abcd16a16b2a": 196, "abcd16b16a4b": 196, "abcd16b32a4b": 196, "abcd16b48a4b": 196, "abcd16b64a4b": 196, "abcd16b16a2b": 196, "abcd16b32a2b": 196, "abcd16b48a2b": 196, "abcd16b64a2b": 196, "abcd16b16c2b": 196, "abcd16c16b4c": 196, "abcd16c16b2c": 196, "abcd4c4b": 196, "abcd4b4c": 196, "abcd8a16b2a": 196, "abcd8a8b": 196, "abcd8a4b": 196, "abcd8a2b": 196, "abcd8b": [196, 419], "abcd8b16a2b": 196, "acdb8b16a2b": 196, "abcd8b32a2b": 196, "acdb8b32a2b": 196, "abcd8b64a2b": 196, "acdb8b64a2b": 196, "abcd8b16c2b": 196, "abcd8b8a": [196, 419], "acdb8b8a": 196, "abcd8b8c": 196, "abcd8b4c": 196, "abcd8c16b2c": 196, "abcd8c8b": 196, "abcde16a": 196, "abcde32a": 196, "abcde16a16b": 196, "abcde16b": 196, "abcde32b": 196, "abcde16b16a": 196, "acdeb16b16a": 196, "abcde16b32a": 196, "acdeb16b32a": 196, "abcde16b48a": 196, "acdeb16b48a": 196, "abcde16b64a": 196, "acdeb16b64a": 196, "abcde16b16c": 196, "abcde16c16b": 196, "abcde2c8b4c": 196, "abcde4a": 196, "abcde4b": 196, "abcde4b4a": 196, "abcde4a4b": 196, "abcde4b4c": 196, "abcde4c16b4c": 196, "abcde16b16c2b": 196, "abcde16c16b4c": 196, "abcde16c16b2c": 196, "abcdef16c16b2c": 196, "abcde4c4b": 196, "abcde8a": 196, "abcde8a8b": 196, "abcde8a4b": 196, "abcde8b": 196, "abcde8b16a2b": 196, "acdeb8b16a2b": 196, "abcde8b32a2b": 196, "acdeb8b32a2b": 196, "abcde8b64a2b": 196, "acdeb8b64a2b": 196, "abcde4b16a4b": 196, "acdeb4b16a4b": 196, "abcde4b32a4b": 196, "acdeb4b32a4b": 196, "abcde4b64a4b": 196, "acdeb4b64a4b": 196, "abcde16b16a4b": 196, "abcde16b32a4b": 196, "abcde16b48a4b": 196, "abcde16b64a4b": 196, "abcde16b16a2b": 196, "abcde16b32a2b": 196, "abcde16b48a2b": 196, "abcde16b64a2b": 196, "abcde2b8a4b": 196, "abcde8b16c2b": 196, "abcde8b8a": 196, "acdeb8b8a": 196, "abcde8b8c": 196, "abcde8b4c": 196, "abcd4a8b8a4b": 196, "abcd2a8b8a2b": 196, "abcde4b8c8b4c": 196, "abcde2b8c8b2c": 196, "abcde8c16b2c": 196, "abcde8c8b": 196, "abcdef16b": 196, "abcdef16b16c": 196, "abcdef16c16b": 196, "abcdef4b": 196, "abcdef2c8b4c": 196, "abcdef4c4b": 196, "abcdef4b4c": 196, "abcdef8b8c": 196, "abcdef8b4c": 196, "abcdef8c16b2c": 196, "abcdef4c16b4c": 196, "abcdef8c8b": 196, "abdc16b": 196, "abdc4b": 196, "abdc8b": 196, "abdc8b2c": 196, "abdc8b4c": 196, "abdec16b": 196, "abdec4b": 196, "abdec8b": 196, "abdec8b2c": 196, "abdec8b4c": 196, "abdefc16b": 196, "acbdef16c16b": 196, "acbdef8b8c": 196, "acbdef16b16c": 196, "abdefc4b": 196, "abdefc8b": 196, "abdefc8b2c": 196, "abdefc8b4c": 196, "acb16a": 196, "acb4a": 196, "acb8a": 196, "acb8a2b": 196, "acb8a4b": 196, "acbd8b8c": 196, "acbd16b16c": 196, "acbd16c16b": 196, "acbde8b8c": 196, "acbde16b16c": 196, "acbde16c16b": 196, "acdb16a": [196, 420], "acdb4a": 196, "acdb8a": 196, "acdb8a2b": 196, "acdb8a4b": 196, "acdeb16a": 196, "acdeb4a": 196, "acdeb8a": 196, "acdeb8a2b": 196, "acdeb8a4b": 196, "bac8a8b": 196, "bac16a16b": 196, "bac16b16a": 196, "bacd8a8b": 196, "bacd16a16b": 196, "bacd16b16a": 196, "abcd32a32b": 196, "bacde16b16a": 196, "bacde8a8b": 196, "bacde16a16b": 196, "abdec32b": 196, "abcdef16a": 196, "abcdef32a": 196, "acdb32a": 196, "abcd2b4c2b": 196, "abcde2b4c2b": 196, "abcdef2b4c2b": 196, "abcd2c4b2c": 196, "abcde2c4b2c": 196, "abcdef2c4b2c": 196, "abcd4b8c2b": 196, "abcde4b8c2b": 196, "abcdef4b8c2b": 196, "abcd4c8b2c": 196, "abcde4c8b2c": 196, "abcdef4c8b2c": 196, "ab32a32b8a4b": 196, "ab32a32b8a2b": 196, "ab8a4b": 196, "ab8a2b": 196, "abdc16d": 196, "abdc32d": 196, "abdc16d4c": 196, "abdc32d4c": 196, "abcd32c": 196, "abdec16": 196, "abdec32": 196, "abdec16e4c": 196, "abdec32e2c": 196, "abdec32e4c": 196, "abdce16c": 196, "abdce32c": 196, "abdce32c2": 196, "abcdef16c16b4c": 196, "abdc16b4c": 196, "abdec16b4c": 196, "acb16a4b": 196, "acdb16a2b": 196, "abdefc16b4c": 196, "acdeb16a4b": 196, "acb32a": 196, "acb32a2b": 196, "acb32a4b": 196, "acb48a": 196, "acb48a2b": 196, "acb48a4b": 196, "acb64a": 196, "acb64a2b": 196, "acb64a4b": 196, "cba2b": 196, "cba4b": 196, "abdc32b": 196, "abdc32b2c": 196, "abdc32b4c": 196, "abdc48b": 196, "abdc48b2c": 196, "abdc48b4c": 196, "abdc64b": 196, "abdc64b2c": 196, "abdc64b4c": 196, "adcb": 196, "adcb2c": 196, "adcb4c": 196, "acdb32a2b": 196, "acdb32a4b": 196, "acdb48a": 196, "acdb48a2b": 196, "acdb48a4b": 196, "acdb64a": 196, "acdb64a2b": 196, "acdb64a4b": 196, "cdba2b": 196, "cdba4b": 196, "abdec32b2c": 196, "abdec32b4c": 196, "abdec48b": 196, "abdec48b2c": 196, "abdec48b4c": 196, "abdec64b": 196, "abdec64b2c": 196, "abdec64b4c": 196, "adecb": 196, "adecb2c": 196, "adecb4c": 196, "acdeb32a": 196, "acdeb32a2b": 196, "acdeb32a4b": 196, "acdeb48a": 196, "acdeb48a2b": 196, "acdeb48a4b": 196, "acdeb64a": 196, "acdeb64a2b": 196, "acdeb64a4b": 196, "cdeba2b": 196, "cdeba4b": 196, "abdefc32b": 196, "abdefc32b2c": 196, "abdefc32b4c": 196, "abdefc48b": 196, "abdefc48b2c": 196, "abdefc48b4c": 196, "abdefc64b": 196, "abdefc64b2c": 196, "abdefc64b4c": 196, "adefcb": 196, "adefcb2c": 196, "adefcb4c": 196, "abc32a32b": 196, "bac8a16b2a": 196, "bacd8a16b2a": 196, "abcde8a16b2a": 196, "acbd8b16c2b": 196, "bacde8a16b2a": 196, "acbde8b16c2b": 196, "abcde32a32b": 196, "abc4a8b8a4b": 196, "abcde4a8b8a4b": 196, "bac4b8a8b4a": 196, "bacd4b8a8b4a": 196, "bacde4b8a8b4a": 196, "abcd4b8c8b4c": 196, "abcdef4b8c8b4c": 196, "abcdef8b16c2b": 196, "acbdef8b16c2b": 196, "abdc16b2c": 196, "abdec16b2c": 196, "abdefc16b2c": 196, "abedc16b": 196, "acb16a2b": 196, "acdb16a4b": 196, "acdeb16a2b": 196, "adcb16a": 196, "acbd4c8b8c4b": 196, "acbde4c8b8c4b": 196, "acbdef4c8b8c4b": 196, "abc32a16b": 196, "abcd16a32b": 196, "abcd32a16b": 196, "abcde32a16b": 196, "ab48a16b": 196, "ab48a32b": 196, "abc40a16b": 196, "abc40a32b": 196, "abc48b16c": 196, "abc48b32c": 196, "abcd40a16b": 196, "abcd40a32b": 196, "ba16a16b": 196, "ba16a32b": 196, "ba16a48b": 196, "ba16a64b": 196, "ba16a16b2a": 196, "ba16a32b2a": 196, "ba16a48b2a": 196, "ba16a64b2a": 196, "ba16a16b4a": 196, "ba16a32b4a": 196, "ba16a48b4a": 196, "ba16a64b4a": 196, "ba24b8a": 196, "acb24c8b": 196, "abdc24d8c": 196, "decba16a": 196, "decba8a": 196, "defcba16a": 196, "defcba8a": 196, "acb16b16c": 196, "acb16b32c": 196, "acb16b48c": 196, "acb16b64c": 196, "acb16b16c2b": 196, "acb16b32c2b": 196, "acb16b48c2b": 196, "acb16b64c2b": 196, "acb16b16c4b": 196, "acb16b32c4b": 196, "acb16b48c4b": 196, "acb16b64c4b": 196, "acb24a": 196, "acdb24a": 196, "acdeb24a": 196, "abdc24b": 196, "abdec24b": 196, "abdefc24b": 196, "acb24a2b": 196, "acdb24a2b": 196, "acdeb24a2b": 196, "abdc24b2c": 196, "abdec24b2c": 196, "abdefc24b2c": 196, "acb24a4b": 196, "acdb24a4b": 196, "acdeb24a4b": 196, "abdc24b4c": 196, "abdec24b4c": 196, "abdefc24b4c": 196, "ab8b32a": 196, "abc8b32a": 196, "acb8b32a": 196, "abcd8b32a": 196, "acdb8b32a": 196, "abcde8b32a": 196, "acdeb8b32a": 196, "ab8b24a": 196, "abc8b24a": 196, "acb8b24a": 196, "abcd8b24a": 196, "acdb8b24a": 196, "abcde8b24a": 196, "acdeb8b24a": 196, "ab8b16a": 196, "abc8b16a": 196, "acb8b16a": 196, "abcd8b16a": 196, "acdb8b16a": 196, "abcde8b16a": 196, "acdeb8b16a": 196, "ab8b8a": 196, "format_tag_last": 196, "ncdhw16c": 196, "ncdhw4c": 196, "ncdhw8c": 196, "nchw4c": 196, "ncw16c": 196, "ncw4c": 196, "ncw8c": 196, "ncw16n16c": 196, "nchw16n16c": 196, "ncdhw16n16c": 196, "ncdhw32n32c": 196, "nchw32n32c": 196, "iohw16i16o": 196, "oi16i16o": 196, "oi16i32o": 196, "oi16i48o": 196, "oi16i64o": 196, "oi8i16o2i": 196, "oi8i32o2i": 196, "oi8i64o2i": 196, "oi4i8o4i": 196, "oi4i16o4i": 196, "oi4i24o4i": 196, "oi4i32o4i": 196, "oi4i64o4i": 196, "ohwi32o": 196, "iodhw16i16o": 196, "giohw16i16o": 196, "gohwi32o": 196, "goidhw16g": 196, "iow8o8i": 196, "iow16o16i": 196, "oiw16i16o": 196, "owi16i16o": 196, "oiw16i32o": 196, "owi16i32o": 196, "oiw16i48o": 196, "owi16i48o": 196, "oiw16i64o": 196, "owi16i64o": 196, "iow16i16o": 196, "giow16i16o": 196, "oiw16o16i": 196, "oiw16o": 196, "oiw4i8o4i": 196, "owi4i8o4i": 196, "oiw4i16o4i": 196, "owi4i16o4i": 196, "oiw4i24o4i": 196, "owi4i24o4i": 196, "oiw4i32o4i": 196, "owi4i32o4i": 196, "oiw4i64o4i": 196, "owi4i64o4i": 196, "oiw2i8o4i": 196, "oiw4i4o": 196, "oiw4o4i": 196, "oiw4o": 196, "oiw8i16o2i": 196, "owi8i16o2i": 196, "oiw8i32o2i": 196, "owi8i32o2i": 196, "oiw8i64o2i": 196, "owi8i64o2i": 196, "oiw8i8o": 196, "owi8i8o": 196, "oiw8o16i2o": 196, "oiw8o8i": 196, "oiw8o4i": 196, "oiw16i16o4i": 196, "oiw16i32o4i": 196, "oiw16i48o4i": 196, "oiw16i64o4i": 196, "oiw16i16o2i": 196, "oiw16i32o2i": 196, "oiw16i48o2i": 196, "oiw16i64o2i": 196, "oiw16o16i2o": 196, "owi16o": 196, "owi16o2i": 196, "iwo16i": 196, "iwo16i2o": 196, "iwo16i4o": 196, "owi4o": 196, "owi8o": 196, "owi8o2i": 196, "owi8o4i": 196, "iohw8o8i": 196, "iohw16o16i": 196, "ohwi16o": 196, "ohwi16o2i": 196, "ihwo16i": 196, "ihwo16i2o": 196, "ihwo16i4o": 196, "ohwi4o": 196, "ohwi8o": 196, "ohwi8o2i": 196, "ohwi8o4i": 196, "oihw16i16o": 196, "ohwi16i16o": 196, "oihw16i32o": 196, "ohwi16i32o": 196, "oihw16i48o": 196, "ohwi16i48o": 196, "oihw16i64o": 196, "ohwi16i64o": 196, "oihw16o16i": 196, "oihw16o": 196, "oihw4i8o4i": 196, "ohwi4i8o4i": 196, "oihw4i16o4i": 196, "ohwi4i16o4i": 196, "oihw4i24o4i": 196, "ohwi4i24o4i": 196, "oihw4i32o4i": 196, "ohwi4i32o4i": 196, "oihw4i64o4i": 196, "ohwi4i64o4i": 196, "oihw4i4o": 196, "oihw4o4i": 196, "oihw4o": 196, "oihw8i16o2i": 196, "ohwi8i16o2i": 196, "oihw8i32o2i": 196, "ohwi8i32o2i": 196, "oihw8i64o2i": 196, "ohwi8i64o2i": 196, "oihw8i8o": 196, "ohwi8i8o": 196, "oihw8o16i2o": 196, "oihw8o8i": 196, "oihw8o4i": 196, "oihw2i8o4i": 196, "iodhw8o8i": 196, "iodhw16o16i": 196, "odhwi16o": 196, "odhwi16o2i": 196, "idhwo16i": 196, "idhwo16i2o": 196, "idhwo16i4o": 196, "odhwi4o": 196, "odhwi8o": 196, "odhwi8o2i": 196, "odhwi8o4i": 196, "oidhw16i16o": 196, "odhwi16i16o": 196, "oidhw16i32o": 196, "odhwi16i32o": 196, "oidhw16i48o": 196, "odhwi16i48o": 196, "oidhw16i64o": 196, "odhwi16i64o": 196, "oidhw16o16i": 196, "oidhw16o16i2o": 196, "oidhw16o": 196, "oidhw4i4o": 196, "oidhw4o4i": 196, "oidhw4o": 196, "oidhw8i16o2i": 196, "odhwi8i16o2i": 196, "oidhw8i32o2i": 196, "odhwi8i32o2i": 196, "oidhw8i64o2i": 196, "odhwi8i64o2i": 196, "oidhw4i8o4i": 196, "odhwi4i8o4i": 196, "oidhw4i16o4i": 196, "odhwi4i16o4i": 196, "oidhw16i16o4i": 196, "oidhw16i32o4i": 196, "oidhw16i48o4i": 196, "oidhw16i64o4i": 196, "oidhw16i16o2i": 196, "oidhw16i32o2i": 196, "oidhw16i48o2i": 196, "oidhw16i64o2i": 196, "oidhw4i24o4i": 196, "odhwi4i24o4i": 196, "oidhw4i32o4i": 196, "odhwi4i32o4i": 196, "oidhw4i64o4i": 196, "odhwi4i64o4i": 196, "oidhw2i8o4i": 196, "oidhw8i8o": 196, "odhwi8i8o": 196, "oidhw8o8i": 196, "oidhw8o4i": 196, "giow8o8i": 196, "giow16o16i": 196, "goiw16i16o": 196, "goiw16o16i": 196, "goiw16o": 196, "goiw4i16o4i": 196, "goiw2i8o4i": 196, "goiw4i4o": 196, "goiw4o4i": 196, "goiw4o": 196, "goiw8i16o2i": 196, "goiw8i8o": 196, "goiw8o16i2o": 196, "goiw8o8i": 196, "goiw8o4i": 196, "goiw16i16o4i": 196, "goiw16i16o2i": 196, "goiw16o16i2o": 196, "gowi16o": 196, "gowi16o2i": 196, "giwo16i": 196, "giwo16i2o": 196, "giwo16i4o": 196, "gowi4o": 196, "gowi8o": 196, "gowi8o2i": 196, "gowi8o4i": 196, "goiw8g": 196, "goiw16g": 196, "giohw8o8i": 196, "giohw16o16i": 196, "gohwi16o": 196, "gohwi16o2i": 196, "gihwo16i": 196, "gihwo16i2o": 196, "gihwo16i4o": 196, "gohwi4o": 196, "gohwi8o": 196, "gohwi8o2i": 196, "gohwi8o4i": 196, "goihw16g": 196, "goihw16i16o": 196, "goihw16o16i": 196, "goihw16o": 196, "goihw4i16o4i": 196, "goihw2i8o4i": 196, "goihw4i4o": 196, "goihw4o4i": 196, "goihw4o": 196, "goihw8g": 196, "goihw8i16o2i": 196, "goihw8i8o": 196, "goihw8o16i2o": 196, "oiw4o8i8o4i": 196, "oidhw4o8i8o4i": 196, "oihw4o8i8o4i": 196, "oihw2o8i8o2i": 196, "goiw4o8i8o4i": 196, "goidhw4o8i8o4i": 196, "goihw4o8i8o4i": 196, "goihw2o8i8o2i": 196, "oihw16i16o4i": 196, "oihw16i32o4i": 196, "oihw16i48o4i": 196, "oihw16i64o4i": 196, "oihw16i16o2i": 196, "oihw16i32o2i": 196, "oihw16i48o2i": 196, "oihw16i64o2i": 196, "oihw16o16i2o": 196, "goihw16i16o4i": 196, "goihw16i16o2i": 196, "goihw16o16i2o": 196, "goihw8o8i": 196, "goihw8o4i": 196, "giodhw16i16o": 196, "giodhw8o8i": 196, "giodhw16o16i": 196, "godhwi16o": 196, "godhwi16o2i": 196, "gidhwo16i": 196, "gidhwo16i2o": 196, "gidhwo16i4o": 196, "godhwi4o": 196, "godhwi8o": 196, "godhwi8o2i": 196, "godhwi8o4i": 196, "goidhw16i16o": 196, "goidhw16o16i": 196, "goidhw16o16i2o": 196, "goidhw16o": 196, "goidhw4i4o": 196, "goidhw4o4i": 196, "goidhw4o": 196, "goidhw8i16o2i": 196, "goidhw4i16o4i": 196, "goidhw16i16o4i": 196, "goidhw16i16o2i": 196, "goidhw2i8o4i": 196, "goidhw8i8o": 196, "goidhw8o8i": 196, "goidhw8o4i": 196, "goiw2i4o2i": 196, "goihw2i4o2i": 196, "goidhw2i4o2i": 196, "goiw2o4i2o": 196, "goihw2o4i2o": 196, "goidhw2o4i2o": 196, "goiw4i8o2i": 196, "goihw4i8o2i": 196, "goidhw4i8o2i": 196, "goiw4o8i2o": 196, "goihw4o8i2o": 196, "goidhw4o8i2o": 196, "ldoi16o": 196, "ldoi32o": 196, "ldoi16o4i": 196, "ldoi32o4i": 196, "ldgoi16o": 196, "ldgoi16o4i": 196, "ldgoi32o": 196, "ldgoi32o2i": 196, "ldgoi32o4i": 196, "owi16o4i": 196, "ohwi16o4i": 196, "gowi16o4i": 196, "gohwi16o4i": 196, "odhwi16o4i": 196, "godhwi16o4i": 196, "owi32o": 196, "owi32o2i": 196, "owi32o4i": 196, "owi48o": 196, "owi48o2i": 196, "owi48o4i": 196, "owi64o": 196, "owi64o2i": 196, "owi64o4i": 196, "iwo32i": 196, "iwo32i2o": 196, "iwo32i4o": 196, "iwo48i": 196, "iwo48i2o": 196, "iwo48i4o": 196, "iwo64i": 196, "iwo64i2o": 196, "iwo64i4o": 196, "wio2i": 196, "wio4i": 196, "gowi32o": 196, "gowi32o2i": 196, "gowi32o4i": 196, "gowi48o": 196, "gowi48o2i": 196, "gowi48o4i": 196, "gowi64o": 196, "gowi64o2i": 196, "gowi64o4i": 196, "giwo32i": 196, "giwo32i2o": 196, "giwo32i4o": 196, "giwo48i": 196, "giwo48i2o": 196, "giwo48i4o": 196, "giwo64i": 196, "giwo64i2o": 196, "giwo64i4o": 196, "gwio": 196, "gwio2i": 196, "gwio4i": 196, "ohwi32o2i": 196, "ohwi32o4i": 196, "ohwi48o": 196, "ohwi48o2i": 196, "ohwi48o4i": 196, "ohwi64o": 196, "ohwi64o2i": 196, "ohwi64o4i": 196, "ihwo32i": 196, "ihwo32i2o": 196, "ihwo32i4o": 196, "ihwo48i": 196, "ihwo48i2o": 196, "ihwo48i4o": 196, "ihwo64i": 196, "ihwo64i2o": 196, "ihwo64i4o": 196, "hwio2i": 196, "hwio4i": 196, "gohwi32o2i": 196, "gohwi32o4i": 196, "gohwi48o": 196, "gohwi48o2i": 196, "gohwi48o4i": 196, "gohwi64o": 196, "gohwi64o2i": 196, "gohwi64o4i": 196, "gihwo32i": 196, "gihwo32i2o": 196, "gihwo32i4o": 196, "gihwo48i": 196, "gihwo48i2o": 196, "gihwo48i4o": 196, "gihwo64i": 196, "gihwo64i2o": 196, "gihwo64i4o": 196, "ghwio": 196, "ghwio2i": 196, "ghwio4i": 196, "odhwi32o": 196, "odhwi32o2i": 196, "odhwi32o4i": 196, "odhwi48o": 196, "odhwi48o2i": 196, "odhwi48o4i": 196, "odhwi64o": 196, "odhwi64o2i": 196, "odhwi64o4i": 196, "idhwo32i": 196, "idhwo32i2o": 196, "idhwo32i4o": 196, "idhwo48i": 196, "idhwo48i2o": 196, "idhwo48i4o": 196, "idhwo64i": 196, "idhwo64i2o": 196, "idhwo64i4o": 196, "dhwio2i": 196, "dhwio4i": 196, "godhwi32o": 196, "godhwi32o2i": 196, "godhwi32o4i": 196, "godhwi48o": 196, "godhwi48o2i": 196, "godhwi48o4i": 196, "godhwi64o": 196, "godhwi64o2i": 196, "godhwi64o4i": 196, "gidhwo32i": 196, "gidhwo32i2o": 196, "gidhwo32i4o": 196, "gidhwo48i": 196, "gidhwo48i2o": 196, "gidhwo48i4o": 196, "gidhwo64i": 196, "gidhwo64i2o": 196, "gidhwo64i4o": 196, "gdhwio": 196, "gdhwio2i": 196, "gdhwio4i": 196, "ldio32i": 196, "ldgio16i": 196, "ldgio32i": 196, "ldgio32i2o": 196, "ncdhw32c": 196, "nchw32c": 196, "ncw32c": 196, "ncw32n16c": 196, "nchw32n16c": 196, "ncdhw32n16c": 196, "ncw32n32c": 196, "oi16i16o4i": 196, "iow8o16i2o": 196, "iohw8o16i2o": 196, "owhi16o": 196, "oidhw8o16i2o": 196, "iodhw8o16i2o": 196, "goiw4g": 196, "giow8o16i2o": 196, "goiw32g": 196, "goihw4g": 196, "giohw8o16i2o": 196, "goihw32g": 196, "gowhi16o": 196, "iow4i8o8i4o": 196, "iohw4i8o8i4o": 196, "iodhw4i8o8i4o": 196, "giow4i8o8i4o": 196, "giohw4i8o8i4o": 196, "giodhw4i8o8i4o": 196, "goidhw8o16i2o": 196, "giodhw8o16i2o": 196, "goidhw32g": 196, "oi16i32o4i": 196, "oi16i48o4i": 196, "oi16i64o4i": 196, "oi16i16o2i": 196, "oi16i32o2i": 196, "oi16i48o2i": 196, "oi16i64o2i": 196, "abdec16c16b4c": 196, "acb16b16a2b": 196, "abdc16c16b2c": 196, "acb16b16a4b": 196, "abdc16c16b4c": 196, "acdb16b16a2b": 196, "abdefc16c16b4c": 196, "acdeb16b16a4b": 196, "acb16b32a2b": 196, "acb16b32a4b": 196, "acb16b48a2b": 196, "acb16b48a4b": 196, "acb16b64a2b": 196, "acb16b64a4b": 196, "abdc16c32b2c": 196, "abdc16c32b4c": 196, "abdc16c48b2c": 196, "abdc16c48b4c": 196, "abdc16c64b2c": 196, "abdc16c64b4c": 196, "acdb16b32a2b": 196, "acdb16b32a4b": 196, "acdb16b48a2b": 196, "acdb16b48a4b": 196, "acdb16b64a2b": 196, "acdb16b64a4b": 196, "abdec16c32b2c": 196, "abdec16c32b4c": 196, "abdec16c48b2c": 196, "abdec16c48b4c": 196, "abdec16c64b2c": 196, "abdec16c64b4c": 196, "acdeb16b32a2b": 196, "acdeb16b32a4b": 196, "acdeb16b48a2b": 196, "acdeb16b48a4b": 196, "acdeb16b64a2b": 196, "acdeb16b64a4b": 196, "abdefc16c32b2c": 196, "abdefc16c32b4c": 196, "abdefc16c48b2c": 196, "abdefc16c48b4c": 196, "abdefc16c64b2c": 196, "abdefc16c64b4c": 196, "owi16i16o2i": 196, "gowi16i16o2i": 196, "ohwi16i16o2i": 196, "gohwi16i16o2i": 196, "odhwi16i16o2i": 196, "godhwi16i16o2i": 196, "owi16i16o4i": 196, "gowi16i16o4i": 196, "ohwi16i16o4i": 196, "gohwi16i16o4i": 196, "odhwi16i16o4i": 196, "godhwi16i16o4i": 196, "owi16i32o2i": 196, "owi16i32o4i": 196, "owi16i48o2i": 196, "owi16i48o4i": 196, "owi16i64o2i": 196, "owi16i64o4i": 196, "gowi16i32o2i": 196, "gowi16i32o4i": 196, "gowi16i48o2i": 196, "gowi16i48o4i": 196, "gowi16i64o2i": 196, "gowi16i64o4i": 196, "ohwi16i32o2i": 196, "ohwi16i32o4i": 196, "ohwi16i48o2i": 196, "ohwi16i48o4i": 196, "ohwi16i64o2i": 196, "ohwi16i64o4i": 196, "gohwi16i32o2i": 196, "gohwi16i32o4i": 196, "gohwi16i48o2i": 196, "gohwi16i48o4i": 196, "gohwi16i64o2i": 196, "gohwi16i64o4i": 196, "odhwi16i32o2i": 196, "odhwi16i32o4i": 196, "odhwi16i48o2i": 196, "odhwi16i48o4i": 196, "odhwi16i64o2i": 196, "odhwi16i64o4i": 196, "idhwo16o32i2o": 196, "idhwo16o32i4o": 196, "idhwo16o48i2o": 196, "idhwo16o48i4o": 196, "idhwo16o64i2o": 196, "idhwo16o64i4o": 196, "godhwi16i32o2i": 196, "godhwi16i32o4i": 196, "godhwi16i48o2i": 196, "godhwi16i48o4i": 196, "godhwi16i64o2i": 196, "godhwi16i64o4i": 196, "gidhwo16o32i2o": 196, "gidhwo16o32i4o": 196, "gidhwo16o48i2o": 196, "gidhwo16o48i4o": 196, "gidhwo16o64i2o": 196, "gidhwo16o64i4o": 196, "iwo16o16i2o": 196, "iwo16o16i4o": 196, "ihwo16o16i2o": 196, "ihwo16o16i4o": 196, "idhwo16o16i2o": 196, "idhwo16o16i4o": 196, "giwo16o16i2o": 196, "giwo16o16i4o": 196, "gihwo16o16i2o": 196, "gihwo16o16i4o": 196, "gidhwo16o16i2o": 196, "gidhwo16o16i4o": 196, "iwo16o32i2o": 196, "iwo16o32i4o": 196, "iwo16o48i2o": 196, "iwo16o48i4o": 196, "iwo16o64i2o": 196, "iwo16o64i4o": 196, "giwo16o32i2o": 196, "giwo16o32i4o": 196, "giwo16o48i2o": 196, "giwo16o48i4o": 196, "giwo16o64i2o": 196, "giwo16o64i4o": 196, "ihwo16o32i2o": 196, "ihwo16o32i4o": 196, "ihwo16o48i2o": 196, "ihwo16o48i4o": 196, "ihwo16o64i2o": 196, "ihwo16o64i4o": 196, "gihwo16o32i2o": 196, "gihwo16o32i4o": 196, "gihwo16o48i2o": 196, "gihwo16o48i4o": 196, "gihwo16o64i2o": 196, "gihwo16o64i4o": 196, "abdec16c16b2c": 196, "abdefc16c16b2c": 196, "acdb16b16a4b": 196, "acdeb16b16a2b": 196, "hwiog16g": 196, "hwiog8g": 196, "dhwiog16g": 196, "dhwiog8g": 196, "abc4a2b": 196, "abc8a2b": 196, "abcd4a2b": 196, "abcde4a2b": 196, "abcde8a2b": 196, "abcd4a8b8a2b": 196, "ncdhw40n32c": 196, "nchw40n32c": 196, "ncw40n32c": 196, "oidhw4o8i8o2i": 196, "oihw4o8i8o2i": 196, "oiw4o8i8o2i": 196, "goidhw4o8i8o2i": 196, "goihw4o8i8o2i": 196, "goiw4o8i8o2i": 196, "iodhw4i8o8i2o": 196, "iohw4i8o8i2o": 196, "iow4i8o8i2o": 196, "giodhw4i8o8i2o": 196, "giohw4i8o8i2o": 196, "giow4i8o8i2o": 196, "abcd8b2c": 196, "abcde40a16b": 196, "abcde40a32b": 196, "abcde8b2c": 196, "abcde4a8b8a2b": 196, "abc4a8b8a2b": 196, "abcdef4b8c8b2c": 196, "abcde4b8c8b2c": 196, "abcd4b8c8b2c": 196, "bacde4b8a8b2a": 196, "bacd4b8a8b2a": 196, "bac4b8a8b2a": 196, "acbdef4c8b8c2b": 196, "acbde4c8b8c2b": 196, "acbd4c8b8c2b": 196, "abcdef8b2c": 196, "ab32a16b": 196, "ab32a32b": 196, "ba4b8a8b2a": 196, "ba4b8a8b4a": 196, "abc32b16c": 196, "abc32b32c": 196, "acb4c8b8c2b": 196, "acb4c8b8c4b": 196, "abc2b8a16b4a": 196, "abcd2b8a16b4a": 196, "abcde2b8a16b4a": 196, "abc2a8b16a4b": 196, "abc2a8b16a2b": 196, "abc2b32a8b": 196, "abcd2a8b16a4b": 196, "abcd2a8b16a2b": 196, "acbd2c8b16c2b": 196, "abcd2b32a8b": 196, "abcd2c8b16c2b": 196, "abcde2a8b16a4b": 196, "abcde2a8b16a2b": 196, "acbde2c8b16c2b": 196, "abcde2b32a8b": 196, "abc2b8c16b2c": 196, "abcd2b8c16b2c": 196, "abcde2b8c16b2c": 196, "abcdef2b8c16b2c": 196, "bacde2b8a16b4a": 196, "bacd2b8a16b4a": 196, "bac2b8a16b4a": 196, "bacde2b8a16b2a": 196, "bacd2b8a16b2a": 196, "bac2b8a16b2a": 196, "abcde2c8b16c2b": 196, "abcdef2c8b16c2b": 196, "acbdef2c8b16c2b": 196, "abcd2b8c16b4c": 196, "abcde2b8c16b4c": 196, "ncdhw40n16c": 196, "ncw40n16c": 196, "nchw40n16c": 196, "ncw2c32n8c": 196, "nchw2c32n8c": 196, "ncdhw2c32n8c": 196, "oiw2i8o16i4o": 196, "oihw2i8o16i4o": 196, "oidhw2i8o16i4o": 196, "oiw2o8i16o4i": 196, "oiw2o8i16o2i": 196, "iow2i8o16i4o": 196, "iow2i8o16i2o": 196, "oihw2o8i16o4i": 196, "oihw2o8i16o2i": 196, "iohw2i8o16i4o": 196, "iohw2i8o16i2o": 196, "oidhw2o8i16o4i": 196, "oidhw2o8i16o2i": 196, "iodhw2i8o16i4o": 196, "iodhw2i8o16i2o": 196, "goiw2o8i16o2i": 196, "giow2i8o16i2o": 196, "giohw2i8o16i2o": 196, "giodhw2i8o16i2o": 196, "goihw2o8i16o2i": 196, "goidhw2o8i16o2i": 196, "goiw2o8i16o4i": 196, "goihw2o8i16o4i": 196, "ba4b8a16b2a": 196, "ba4b8a16b4a": 196, "acb4c8b16c2b": 196, "acb4c8b16c4b": 196, "acb16c2b": 196, "acb16c4b": 196, "ba16b2a": 196, "ba16b4a": 196, "ba4b4a": 196, "ba8b4a": 196, "abc16b16c": 196, "abc16b32c": 196, "ab16a16b": 196, "ab16a32b": 196, "abcde16a16b2a": 196, "abcdef16b16c2b": 196, "acedb16a": 196, "abdfec16b": 196, "odwhi16o": 196, "godwhi16o": 196, "abdec64e2c": 196, "abdec64e4c": 196, "ldgoi64o2i": 196, "ldgoi64o4i": 196, "abcd4c": 196, "abcde4c": 196, "abcdef4c": 196, "abcde32c": 196, "abcdef32c": 196, "acdefb16b32c2b": 196, "acdefb16b32c4b": 196, "acdefb16b48c2b": 196, "acdefb16b48c4b": 196, "acdefb16b64c2b": 196, "acdefb16b64c4b": 196, "bcdea16a32b2a": 196, "bcdea16a32b4a": 196, "bcdea16a48b2a": 196, "bcdea16a48b4a": 196, "bcdea16a64b2a": 196, "bcdea16a64b4a": 196, "acdefb32c": 196, "acdefb32c2b": 196, "acdefb32c4b": 196, "acdefb48c": 196, "acdefb48c2b": 196, "acdefb48c4b": 196, "acdefb64c": 196, "acdefb64c2b": 196, "acdefb64c4b": 196, "bcdea32b": 196, "bcdea32b2a": 196, "bcdea32b4a": 196, "bcdea48b": 196, "bcdea48b2a": 196, "bcdea48b4a": 196, "bcdea64b": 196, "bcdea64b2a": 196, "bcdea64b4a": 196, "bca32b": 196, "bca32b2a": 196, "bca32b4a": 196, "bca48b": 196, "bca48b2a": 196, "bca48b4a": 196, "bca64b": 196, "bca64b2a": 196, "bca64b4a": 196, "acdb32c": 196, "acdb32c2b": 196, "acdb32c4b": 196, "acdb48c": 196, "acdb48c2b": 196, "acdb48c4b": 196, "acdb64c": 196, "acdb64c2b": 196, "acdb64c4b": 196, "bca16a16b2a": 196, "bca16a16b4a": 196, "bcda16a16b2a": 196, "bcda16a16b4a": 196, "bcdea16a16b2a": 196, "bcdea16a16b4a": 196, "acdb16b16c2b": 196, "acdb16b16c4b": 196, "acdeb16b16c2b": 196, "acdeb16b16c4b": 196, "acdefb16b16c2b": 196, "acdefb16b16c4b": 196, "bca16a32b2a": 196, "bca16a32b4a": 196, "bca16a48b2a": 196, "bca16a48b4a": 196, "bca16a64b2a": 196, "bca16a64b4a": 196, "acdb16b32c2b": 196, "acdb16b32c4b": 196, "acdb16b48c2b": 196, "acdb16b48c4b": 196, "acdb16b64c2b": 196, "acdb16b64c4b": 196, "bcda16a32b2a": 196, "bcda16a32b4a": 196, "bcda16a48b2a": 196, "bcda16a48b4a": 196, "bcda16a64b2a": 196, "bcda16a64b4a": 196, "acdeb16b32c2b": 196, "acdeb16b32c4b": 196, "acdeb16b48c2b": 196, "acdeb16b48c4b": 196, "acdeb16b64c2b": 196, "acdeb16b64c4b": 196, "bca16b": 196, "bca16b2a": 196, "bca16b4a": 196, "bcda16b": 196, "bcda16b2a": 196, "bcda16b4a": 196, "bcdea16b": 196, "bcdea16b2a": 196, "bcdea16b4a": 196, "acdb16c": 196, "acdb16c2b": 196, "acdb16c4b": 196, "acdeb16c": 196, "acdeb16c2b": 196, "acdeb16c4b": 196, "acdefb16c": 196, "acdefb16c2b": 196, "acdefb16c4b": 196, "bcda32b": 196, "bcda32b2a": 196, "bcda32b4a": 196, "bcda48b": 196, "bcda48b2a": 196, "bcda48b4a": 196, "bcda64b": 196, "bcda64b2a": 196, "bcda64b4a": 196, "acdeb32c": 196, "acdeb32c2b": 196, "acdeb32c4b": 196, "acdeb48c": 196, "acdeb48c2b": 196, "acdeb48c4b": 196, "acdeb64c": 196, "acdeb64c2b": 196, "acdeb64c4b": 196, "nchw16n32c": 196, "goiw4i": 196, "goiw32i": 196, "goihw4i": 196, "goihw32i": 196, "goidhw4i": 196, "goidhw32i": 196, "cab": 196, "cdab": 196, "cdeab": 196, "woi": 196, "hwoi": 196, "dhwoi": 196, "owi24o": 196, "ohwi24o": 196, "odhwi24o": 196, "gowi24o": 196, "gohwi24o": 196, "godhwi24o": 196, "owi24o2i": 196, "ohwi24o2i": 196, "odhwi24o2i": 196, "gowi24o2i": 196, "gohwi24o2i": 196, "godhwi24o2i": 196, "owi24o4i": 196, "ohwi24o4i": 196, "odhwi24o4i": 196, "gowi24o4i": 196, "gohwi24o4i": 196, "godhwi24o4i": 196, "oi8i32o": 196, "oiw8i32o": 196, "owi8i32o": 196, "oihw8i32o": 196, "ohwi8i32o": 196, "oidhw8i32o": 196, "odhwi8i32o": 196, "oi8i24o": 196, "oiw8i24o": 196, "owi8i24o": 196, "oihw8i24o": 196, "ohwi8i24o": 196, "oidhw8i24o": 196, "odhwi8i24o": 196, "oi8i16o": 196, "oiw8i16o": 196, "owi8i16o": 196, "oihw8i16o": 196, "ohwi8i16o": 196, "oidhw8i16o": 196, "odhwi8i16o": 196, "oi8i8o": 196, "ab4b8a4b": 196, "ab4b24a4b": 196, "abc4b8a4b": 196, "acb4b8a4b": 196, "abc4b24a4b": 196, "acb4b24a4b": 196, "abcd4b8a4b": 196, "acdb4b8a4b": 196, "abcd4b24a4b": 196, "acdb4b24a4b": 196, "abcde4b8a4b": 196, "acdeb4b8a4b": 196, "abcde4b24a4b": 196, "acdeb4b24a4b": 196, "bca8b": 196, "bca8b2a": 196, "bcda8b": 196, "bcda8b2a": 196, "bcdea8b": 196, "bcdea8b2a": 196, "acdb8c": 196, "acdb8c2b": 196, "acdeb8c": 196, "acdeb8c2b": 196, "acdefb8c": 196, "acdefb8c2b": 196, "bca24b": 196, "bca24b2a": 196, "bcda24b": 196, "bcda24b2a": 196, "bcdea24b": 196, "bcdea24b2a": 196, "acdb24c": 196, "acdb24c2b": 196, "acdeb24c": 196, "acdeb24c2b": 196, "acdefb24c": 196, "acdefb24c2b": 196, "iwo8i": 196, "iwo8i2o": 196, "iwo24i": 196, "iwo24i2o": 196, "ihwo8i": 196, "ihwo8i2o": 196, "ihwo24i": 196, "ihwo24i2o": 196, "idhwo8i": 196, "idhwo8i2o": 196, "idhwo24i": 196, "idhwo24i2o": 196, "giwo8i": 196, "giwo8i2o": 196, "giwo24i": 196, "giwo24i2o": 196, "gihwo8i": 196, "gihwo8i2o": 196, "gihwo24i": 196, "gihwo24i2o": 196, "gidhwo8i": 196, "gidhwo8i2o": 196, "gidhwo24i": 196, "gidhwo24i2o": 196, "ab8b24a2b": 196, "abc8b24a2b": 196, "acb8b24a2b": 196, "abcd8b24a2b": 196, "acdb8b24a2b": 196, "abcde8b24a2b": 196, "acdeb8b24a2b": 196, "ab8b8a2b": 196, "abc8b8a2b": 196, "acb8b8a2b": 196, "abcd8b8a2b": 196, "acdb8b8a2b": 196, "abcde8b8a2b": 196, "acdeb8b8a2b": 196, "oi8i8o2i": 196, "oi8i24o2i": 196, "oiw8i8o2i": 196, "owi8i8o2i": 196, "oiw8i24o2i": 196, "owi8i24o2i": 196, "oihw8i8o2i": 196, "ohwi8i8o2i": 196, "oihw8i24o2i": 196, "ohwi8i24o2i": 196, "oidhw8i8o2i": 196, "odhwi8i8o2i": 196, "oidhw8i24o2i": 196, "odhwi8i24o2i": 196, "bca8b4a": 196, "bcda8b4a": 196, "bcdea8b4a": 196, "acdb8c4b": 196, "acdeb8c4b": 196, "acdefb8c4b": 196, "bca24b4a": 196, "bcda24b4a": 196, "bcdea24b4a": 196, "acdb24c4b": 196, "acdeb24c4b": 196, "acdefb24c4b": 196, "abc16a4b": 196, "abcd16a4b": 196, "abcde16a4b": 196, "iwo8i4o": 196, "iwo24i4o": 196, "ihwo8i4o": 196, "ihwo24i4o": 196, "idhwo8i4o": 196, "idhwo24i4o": 196, "giwo8i4o": 196, "giwo24i4o": 196, "gihwo8i4o": 196, "gihwo24i4o": 196, "gidhwo8i4o": 196, "gidhwo24i4o": 196, "ba2a24b": 196, "acb2b24c": 196, "ba2a8b": 196, "acb2b8c": 196, "ba8a24b": 196, "acb8b24c": 196, "ba8a16b": 196, "acb8b16c": 196, "ba8a8b": 196, "acb8b8c": 196, "bcad": 196, "cabd": 196, "dabc": 196, "dnnl_sparse_encoding_undef": [197, 219], "csr": [197, 219, 243, 306, 380, 524], "dnnl_csr": [197, 219], "dnnl_pack": [197, 219], "coo": [197, 219, 242, 306, 379, 524], "dnnl_coo": [197, 219], "unstructur": [197, 219], "sparsiti": [197, 219], "use_global_stat": 198, "use_scal": [198, 228, 257, 260, 362, 402, 408], "use_shift": [198, 228, 257, 260, 362, 402, 408], "fuse_norm_relu": [198, 228, 362], "fuse_norm_add_relu": 198, "0x0u": 199, "0x1u": [199, 223], "0x2u": [199, 223], "0x4u": 199, "0x8u": 199, "0x10u": 199, "wrt": [199, 244, 381], "dnnl_ocl_interop_usm": [200, 201, 307, 352], "dnnl_ocl_interop_buff": [200, 201, 307, 352], "dnnl_ocl_typ": 201, "dnnl_pack_type_undef": [202, 226], "dnnl_pack_type_no_tran": [202, 226, 326], "dnnl_pack_type_tran": [202, 226, 326], "dnnl_pack_type_pack32": [202, 226, 326], "guard": [202, 226], "dnnl_undefined_primit": [203, 204, 288], "dnnl_reorder": [203, 204], "dnnl_shuffl": [203, 204], "dnnl_concat": [203, 204], "dnnl_sum": [203, 204, 288], "dnnl_convolut": [203, 204, 288, 530], "dnnl_deconvolut": [203, 204], "dnnl_eltwis": [203, 204, 288], "dnnl_lrn": [203, 204], "dnnl_batch_norm": [203, 204], "dnnl_inner_product": [203, 204], "dnnl_rnn": [203, 204], "dnnl_binari": [203, 204, 288, 530], "dnnl_matmul": [203, 204], "dnnl_resampl": [203, 204], "dnnl_pool": [203, 204], "dnnl_reduct": [203, 204], "dnnl_prelu": [203, 204], "dnnl_softmax": [203, 204], "dnnl_layer_norm": [203, 204], "dnnl_group_norm": [203, 204], "summat": [203, 211, 212, 561], "dnnl_gemm": 204, "dnnl_primitive_kind_max": 204, "dnnl_profiling_data_kind_undef": [205, 206], "dnnl_profiling_data_kind_tim": [205, 206], "nanosecond": [205, 206], "dnnl_prop_kind_undef": [207, 208], "dnnl_forward": [207, 208, 231, 239, 250, 368, 378, 388], "dnnl_backward_weight": [207, 208], "backward_bia": 207, "dnnl_backward_bia": [207, 208], "160": 208, "192": [208, 232, 420], "193": 208, "dnnl_query_undef": [209, 210], "dnnl_query_engin": [209, 210], "primitive_kind": 209, "dnnl_query_primitive_kind": [209, 210], "num_of_inputs_s32": 209, "dnnl_query_num_of_inputs_s32": [209, 210, 312], "num_of_outputs_s32": 209, "dnnl_query_num_of_outputs_s32": [209, 210, 312], "time_estimate_f64": 209, "dnnl_query_time_estimate_f64": [209, 210], "dnnl_query_memory_consumption_s64": [209, 210], "scratchpad_engin": [209, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "dnnl_query_scratchpad_engin": [209, 210], "reorder_src_engin": 209, "dnnl_query_reorder_src_engin": [209, 210], "reorder_dst_engin": 209, "dnnl_query_reorder_dst_engin": [209, 210], "impl_info_str": [209, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "dnnl_query_impl_info_str": [209, 210, 312], "dnnl_query_prop_kind": [209, 210], "cache_blob_id_size_s64": 209, "dnnl_query_cache_blob_id_size_s64": [209, 210], "cache_blob_id": [209, 281, 307, 352], "dnnl_query_cache_blob_id": [209, 210], "dnnl_query_dil": [209, 210], "dnnl_query_padding_l": [209, 210], "dnnl_query_padding_r": [209, 210], "epsilon_f32": 209, "dnnl_query_epsilon_f32": [209, 210], "dnnl_query_flag": [209, 210], "alg_kind": [209, 281, 288, 290, 294, 296, 297, 304, 308, 314, 316, 320], "dnnl_query_alg_kind": [209, 210], "alpha_f32": 209, "dnnl_query_alpha_f32": [209, 210], "beta_f32": 209, "dnnl_query_beta_f32": [209, 210], "axis_s32": 209, "dnnl_query_axis_s32": [209, 210], "local_size_s64": 209, "dnnl_query_local_size_s64": [209, 210], "k_f32": 209, "dnnl_query_k_f32": [209, 210], "p_f32": 209, "dnnl_query_p_f32": [209, 210], "dnnl_query_factor": [209, 210], "cell_kind": [209, 550], "dnnl_query_cell_kind": [209, 210], "dnnl_query_direct": [209, 210], "activation_kind": 209, "dnnl_query_activation_kind": [209, 210], "dnnl_query_kernel": [209, 210], "group_size_s64": 209, "dnnl_query_group_size_s64": [209, 210], "src_md": [209, 228, 230, 231, 236, 245, 253, 254, 257, 259, 260, 262, 264, 267, 268, 269, 270, 271, 273, 274, 275, 362, 366, 368, 373, 383, 392, 394, 402, 406, 408, 413, 417, 421, 423, 425, 427, 429, 432, 434, 436, 541, 545], "dnnl_query_src_md": [209, 210, 231, 239, 312, 368, 378], "diff_src_md": 209, "dnnl_query_diff_src_md": [209, 210], "dnnl_query_weights_md": [209, 210, 231, 239, 312, 368, 378], "diff_weights_md": 209, "dnnl_query_diff_weights_md": [209, 210, 239, 378], "dst_md": [209, 228, 229, 231, 242, 243, 245, 253, 257, 259, 260, 262, 264, 267, 268, 269, 270, 271, 273, 274, 362, 364, 368, 379, 380, 383, 392, 402, 406, 408, 413, 417, 421, 423, 425, 427, 429, 432, 434, 541, 545], "dnnl_query_dst_md": [209, 210, 231, 239, 312, 368, 378], "diff_dst_md": 209, "dnnl_query_diff_dst_md": [209, 210, 239, 378], "dnnl_query_workspace_md": [209, 210, 231, 239, 312, 368, 378], "dnnl_query_scratchpad_md": [209, 210], "dnnl_query_exec_arg_md": [209, 210, 307, 312, 323], "ndims_s32": 209, "dnnl_query_ndims_s32": [209, 210, 306], "dnnl_query_dim": [209, 210, 306], "dnnl_query_data_typ": [209, 210, 306], "submemory_offset_s64": 209, "dnnl_query_submemory_offset_s64": [209, 210, 306], "padded_dim": [209, 306, 312, 524], "dnnl_query_padded_dim": [209, 210, 306], "padded_offset": 209, "dnnl_query_padded_offset": [209, 210, 306], "dnnl_query_format_kind": [209, 210, 306], "inner_nblks_s32": 209, "dnnl_query_inner_nblks_s32": [209, 210, 306], "dnnl_query_sparse_encod": [209, 210, 306], "nnz_s64": 209, "dnnl_query_nnz_s64": [209, 210, 306], "num_handles_s32": 209, "dnnl_query_num_handles_s32": [209, 210, 306], "dnnl_query_t": [209, 281, 306, 312, 348], "estim": [209, 210], "submemori": [209, 210, 306, 524], "dnnl_query_some_md": 210, "dnnl_query_max": 210, "dnnl_primitive_desc_queri": [210, 281, 312], "dnnl_query_": 210, "_engin": 210, "dnnl_engine_t": [210, 231, 239, 250, 281, 289, 290, 293, 294, 296, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 335, 339, 341, 343, 344, 368, 378, 388], "dnnl_primitive_kind_t": [210, 281, 288, 312, 348], "_s32": 210, "_s64": 210, "_f64": 210, "_str": 210, "_md": [210, 394, 420], "const_dnnl_memory_desc_t": [210, 231, 239, 281, 288, 289, 290, 293, 294, 296, 297, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 317, 319, 320, 322, 323, 368, 378], "_pd": [210, 394], "const_dnnl_primitive_desc_t": [210, 281, 289, 294, 296, 297, 300, 301, 303, 304, 308, 309, 312, 316, 317, 319, 320, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 525, 527, 531, 533, 536, 542, 544, 546, 548, 551, 553, 555, 557, 561, 569, 571], "dnnl_alg_kind_t": [210, 281, 288, 290, 294, 296, 297, 304, 308, 312, 314, 316, 317, 320, 348], "dnnl_rnn_direction_t": [210, 281, 317, 348], "dnnl_data_type_t": [210, 281, 288, 295, 303, 306, 326, 338, 348, 482, 522], "dnnl_format_kind_t": [210, 281, 306], "dnnl_sparse_encoding_t": [210, 281, 306], "thumb": 210, "dnnl_primitive_desc_clon": [210, 281, 312], "stub": 210, "grad": 210, "dnnl_rnn_direction_undef": [211, 212], "unidirectional_left2right": [211, 227, 246, 247, 261, 263, 272, 279, 360, 384, 385, 410, 415, 431, 440], "dnnl_unidirectional_left2right": [211, 212], "unidirectional_right2left": 211, "dnnl_unidirectional_right2left": [211, 212], "dnnl_bidirectional_concat": [211, 212], "dnnl_bidirectional_sum": [211, 212], "unidirect": [211, 212, 246, 247, 272, 384, 385, 431], "bidirect": [211, 212, 246, 247, 384, 385], "dnnl_rnn_flags_undef": [213, 214], "dnnl_rnn_flags_diff_weights_overwrit": [213, 214], "dnnl_rounding_mode_environ": [215, 216], "dnnl_rounding_mode_stochast": [215, 216], "dictat": [215, 216], "trail": [215, 216], "dnnl_scratchpad_mode_librari": [217, 218, 288], "dnnl_scratchpad_mode_us": [217, 218, 288], "safeti": [217, 218], "in_ord": [222, 251, 276, 278, 389, 400, 401], "dnnl_stream_in_ord": [222, 223], "out_of_ord": 222, "dnnl_stream_out_of_ord": [222, 223], "default_flag": [222, 560], "dnnl_stream_default_flag": [222, 223, 231, 239, 250, 368, 378, 388], "dnnl_sycl_interop_usm": [224, 225, 323], "dnnl_sycl_interop_buff": [224, 225, 323], "dnnl_sycl_typ": 225, "tran": [226, 568], "2022": [227, 231, 239, 246, 247, 250, 251, 256, 258, 360, 368, 378, 388, 404], "augru_exampl": [227, 281, 360], "attention_dim": [227, 360], "weights_dim": [227, 237, 245, 252, 259, 263, 264, 268, 279, 360, 375, 383, 390, 406, 415, 417, 423, 440], "bias_dim": [227, 237, 252, 259, 261, 263, 264, 279, 360, 375, 390, 406, 410, 415, 417, 440], "dst_dim": [227, 237, 245, 252, 253, 259, 263, 264, 267, 268, 269, 271, 360, 375, 383, 390, 392, 406, 415, 417, 421, 423, 425, 429], "src_layer_data": [227, 261, 263, 279, 360, 410, 415, 440], "attention_data": [227, 360], "weights_layer_data": [227, 261, 263, 279, 360, 410, 415, 440], "weights_iter_data": [227, 261, 263, 279, 360, 410, 415, 440], "bias_data": [227, 237, 252, 259, 261, 263, 264, 279, 360, 375, 390, 406, 410, 415, 417, 440], "dst_layer_data": [227, 261, 263, 279, 360, 410, 415, 440], "sin": [227, 228, 229, 230, 237, 245, 252, 257, 259, 260, 261, 263, 264, 275, 279, 360, 362, 364, 366, 375, 383, 390, 402, 406, 408, 410, 415, 417, 436, 440], "src_layer_md": [227, 261, 263, 279, 360, 410, 415, 440], "attention_md": [227, 360], "bias_md": [227, 259, 261, 263, 264, 279, 360, 406, 410, 415, 417, 440], "dst_layer_md": [227, 261, 263, 279, 360, 410, 415, 440], "src_layer_mem": [227, 261, 263, 279, 360, 410, 415, 440], "attention_mem": [227, 360], "bias_mem": [227, 259, 261, 263, 264, 279, 360, 406, 410, 415, 417, 440], "dst_layer_mem": [227, 261, 263, 279, 360, 410, 415, 440], "user_weights_layer_mem": [227, 261, 263, 279, 360, 410, 415, 440], "user_weights_iter_mem": [227, 261, 263, 279, 360, 410, 415, 440], "write_to_dnnl_memori": [227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 245, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 280, 281, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 378, 383, 388, 390, 392, 394, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440, 442], "augru_weights_layer_md": [227, 360], "augru_weights_iter_md": [227, 360], "src_iter_md": [227, 261, 263, 279, 360, 410, 415, 440], "dst_iter_md": [227, 261, 263, 279, 360, 410, 415, 440], "rnn_direct": [227, 246, 247, 261, 263, 272, 279, 317, 348, 360, 384, 385, 410, 415, 431, 440, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "augru_weights_layer_mem": [227, 360], "augru_weights_iter_mem": [227, 360], "src_iter_mem": [227, 261, 263, 279, 360, 410, 415, 440], "weights_iter_mem": [227, 261, 263, 279, 360, 410, 415, 440], "dst_iter_mem": [227, 261, 263, 279, 360, 410, 415, 440], "workspace_mem": [227, 228, 261, 262, 263, 267, 279, 360, 362, 410, 413, 415, 421, 440], "augru_prim": [227, 360], "augru_arg": [227, 360], "dnnl_arg_augru_attent": [227, 281, 312, 360], "read_from_dnnl_memori": [227, 228, 229, 230, 237, 242, 243, 245, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 279, 281, 360, 362, 364, 366, 375, 379, 380, 383, 388, 390, 392, 394, 395, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 432, 434, 436, 440], "parse_engine_kind": [227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 245, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 360, 362, 364, 366, 368, 371, 372, 373, 375, 383, 390, 392, 394, 402, 404, 406, 408, 410, 413, 415, 417, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 440, 442], "2020": [228, 229, 230, 236, 237, 253, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 275, 362, 364, 366, 373, 375, 392, 406, 408, 413, 415, 417, 421, 423, 425, 427, 429, 432, 434, 436], "batch_normalization_exampl": [228, 281, 362], "227": [228, 231, 232, 234, 235, 239, 253, 255, 259, 260, 262, 266, 268, 269, 270, 271, 273, 275, 276, 362, 368, 369, 371, 372, 378, 392, 406, 408, 413, 420, 423, 425, 427, 429, 432, 436], "scaleshift_dim": [228, 257, 260, 362, 402, 408], "src_data": [228, 230, 236, 237, 245, 252, 253, 257, 259, 260, 262, 264, 267, 268, 269, 270, 271, 273, 274, 275, 362, 366, 373, 375, 383, 390, 392, 402, 406, 408, 413, 417, 421, 423, 425, 427, 429, 432, 434, 436], "scale_data": [228, 230, 257, 260, 362, 366, 402, 408], "shift_data": [228, 230, 257, 260, 362, 366, 402, 408], "tan": [228, 257, 260, 362, 402, 408], "scaleshift_md": [228, 257, 260, 362, 402, 408], "src_mem": [228, 230, 236, 245, 253, 254, 257, 259, 260, 262, 264, 265, 267, 269, 270, 271, 273, 274, 275, 362, 366, 373, 383, 392, 394, 402, 406, 408, 413, 417, 419, 421, 425, 427, 429, 432, 434, 436], "scale_mem": [228, 230, 257, 260, 362, 366, 402, 408], "shift_mem": [228, 230, 257, 260, 362, 366, 402, 408], "bnorm_pd": [228, 362], "10f": [228, 257, 260, 362, 402, 408], "normalization_flag": [228, 257, 260, 289, 300, 303, 312, 348, 362, 402, 408, 453, 455, 484, 486, 500, 502], "mean_mem": [228, 230, 257, 260, 362, 366, 402, 408], "mean_desc": [228, 257, 260, 362, 402, 408, 453, 455, 484, 486, 500, 502], "variance_mem": [228, 230, 257, 260, 362, 366, 402, 408], "variance_desc": [228, 257, 260, 362, 402, 408, 453, 455, 484, 486, 500, 502], "bnorm_prim": [228, 362], "bnorm_arg": [228, 362], "binary_exampl": [229, 281, 364], "150": [229, 230, 364, 366], "src_0_dim": [229, 364], "src_1_dim": [229, 364], "src_0_data": [229, 364], "src_1_data": [229, 364], "src_0_md": [229, 364], "src_1_md": [229, 364], "src_0_mem": [229, 364], "src_1_mem": [229, 364], "binary_op": [229, 230, 288, 364, 366, 530], "binary_attr": [229, 230, 364, 366], "binary_pd": [229, 230, 364, 366], "binary_prim": [229, 230, 364, 366], "binary_arg": [229, 230, 364, 366], "tmp_dst": [230, 366], "params_dim": [230, 366], "mean_data": [230, 366], "variance_data": [230, 366], "oscale_data": [230, 366], "mean_md": [230, 366], "variance_md": [230, 366], "scale_md": [230, 366], "shift_md": [230, 366], "oscale_md": [230, 366], "oscale_mem": [230, 366], "dst_tmp": [230, 366], "output_scal": [230, 366], "2016": [231, 232, 235, 239, 368, 372, 378], "posix_memalign": [231, 239, 368, 378], "_posix_c_sourc": [231, 239, 281, 368, 378], "200112l": [231, 239, 368, 378], "stdlib": [231, 239, 250, 368, 378, 388], "conv_ih": [231, 239, 281, 368, 378], "conv_iw": [231, 239, 281, 368, 378], "conv_oh": [231, 239, 281, 368, 378], "conv_ow": [231, 239, 281, 368, 378], "conv_strid": [231, 233, 234, 235, 239, 281, 368, 370, 371, 372, 378], "conv_pad": [231, 233, 234, 235, 239, 281, 368, 370, 371, 372, 378], "pool_oh": [231, 239, 281, 368, 378], "27": [231, 232, 234, 235, 239, 267, 368, 371, 372, 378, 421], "pool_ow": [231, 239, 281, 368, 378], "pool_strid": [231, 234, 235, 239, 281, 368, 371, 372, 378], "pool_pad": [231, 232, 234, 235, 239, 281, 368, 369, 371, 372, 378], "arr": [231, 239, 281, 368, 378], "init_net_data": [231, 239, 281, 368, 378], "uint32_t": [231, 234, 235, 239, 281, 368, 371, 372, 378], "1637": [231, 239, 368, 378], "indx": [231, 239, 368, 378], "typedef": [231, 239, 281, 348, 368, 378], "narg": [231, 239, 281, 307, 312, 323, 368, 378, 446], "dnnl_exec_arg_t": [231, 239, 250, 281, 307, 312, 323, 368, 378, 388, 446], "args_t": [231, 239, 281, 368, 378], "prepare_arg_nod": [231, 239, 281, 368, 378], "free_arg_nod": [231, 239, 281, 368, 378], "set_arg": [231, 239, 281, 368, 378], "arg_idx": [231, 239, 281, 368, 378], "dnnl_memory_t": [231, 239, 250, 281, 306, 307, 312, 323, 368, 378, 388, 480], "init_data_memori": [231, 239, 281, 368, 378], "user_tag": [231, 239, 281, 368, 378], "user_md": [231, 239, 368, 378], "dnnl_memory_cr": [231, 239, 250, 281, 306, 368, 378, 388], "dnnl_status_t": [231, 239, 281, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 354, 368, 378, 394, 438, 479], "prepare_reord": [231, 239, 281, 368, 378], "user_memori": [231, 239, 281, 368, 378], "prim_memory_md": [231, 239, 281, 368, 378], "prim_engin": [231, 239, 281, 368, 378], "dir_is_user_to_prim": [231, 239, 281, 368, 378], "prim_memori": [231, 239, 281, 368, 378], "dnnl_primitive_t": [231, 239, 250, 281, 312, 368, 378, 388], "net_index": [231, 239, 281, 368, 378], "inc": [231, 239, 368, 378, 412], "net_arg": [231, 232, 239, 281, 368, 369, 378], "user_memory_md": [231, 239, 368, 378], "dnnl_memory_get_memory_desc": [231, 239, 281, 306, 368, 378], "user_mem_engin": [231, 239, 368, 378], "dnnl_memory_get_engin": [231, 239, 281, 306, 368, 378], "dnnl_memory_desc_equ": [231, 239, 281, 306, 368, 378], "dnnl_primitive_desc_t": [231, 239, 250, 281, 288, 289, 290, 293, 294, 296, 297, 300, 301, 303, 304, 305, 308, 309, 312, 314, 315, 316, 317, 319, 320, 322, 368, 378, 388, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "reorder_pd": [231, 239, 270, 368, 378, 427], "dnnl_reorder_primitive_desc_cr": [231, 239, 250, 281, 315, 368, 378, 388], "dnnl_primitive_cr": [231, 239, 250, 281, 312, 368, 378, 388], "dnnl_primitive_desc_destroi": [231, 239, 250, 281, 312, 368, 378, 388], "simple_net": [231, 232, 234, 235, 239, 246, 247, 272, 281, 368, 370, 371, 372, 378, 431], "dnnl_engine_kind_t": [231, 281, 298, 334, 335, 336, 341, 348, 368], "dnnl_engine_cr": [231, 239, 250, 281, 298, 368, 378, 388], "net_src_siz": [231, 239, 368, 378], "net_dst_siz": [231, 239, 368, 378], "net_src": [231, 234, 235, 239, 246, 247, 272, 368, 371, 372, 378, 384, 385, 431], "net_dst": [231, 235, 239, 246, 247, 272, 368, 372, 378, 384, 385, 431], "memset": [231, 239, 246, 247, 368, 378, 384, 385], "conv_user_src_s": [231, 239, 368, 378], "conv_user_weights_s": [231, 239, 368, 378], "conv_bias_s": [231, 239, 368, 378], "conv_user_dst_s": [231, 239, 368, 378], "conv_dil": [231, 239, 368, 378], "conv_src": [231, 239, 266, 368, 378, 420], "conv_weight": [231, 233, 234, 235, 239, 368, 370, 371, 372, 378], "conv_bia": [231, 233, 234, 235, 239, 368, 370, 371, 372, 378], "conv_user_src_memori": [231, 234, 235, 239, 368, 371, 372, 378], "conv_user_weights_memori": [231, 234, 235, 239, 368, 371, 372, 378], "conv_user_bias_memori": [231, 234, 235, 239, 368, 371, 372, 378], "conv_src_md": [231, 233, 234, 235, 237, 239, 265, 266, 368, 370, 371, 372, 375, 378, 419, 420], "conv_weights_md": [231, 233, 234, 235, 237, 239, 265, 368, 370, 371, 372, 375, 378, 419], "conv_bias_md": [231, 233, 234, 235, 239, 368, 370, 371, 372, 378], "dnnl_convolution_forward_primitive_desc_cr": [231, 239, 281, 294, 368, 378], "conv_internal_src_memori": [231, 239, 368, 378], "conv_internal_weights_memori": [231, 239, 368, 378], "conv_internal_dst_memori": [231, 239, 368, 378], "dnnl_primitive_desc_query_md": [231, 239, 281, 307, 312, 323, 368, 378], "conv_reorder_src": [231, 239, 368, 378], "conv_reorder_weight": [231, 239, 368, 378], "negative_slop": [231, 234, 235, 239, 368, 371, 372, 378], "relu_src_md": [231, 234, 235, 239, 368, 371, 372, 378], "relu_dst_md": [231, 239, 368, 378], "relu_pd": [231, 234, 235, 239, 250, 251, 254, 256, 266, 277, 368, 371, 372, 378, 388, 389, 394, 395, 438], "dnnl_eltwise_forward_primitive_desc_cr": [231, 239, 250, 281, 297, 368, 378, 388], "relu_dst_memori": [231, 234, 235, 239, 368, 371, 372, 378], "0001": [231, 232, 234, 235, 239, 368, 371, 372, 378], "0001f": [231, 232, 234, 235, 239, 368, 371, 372, 378], "75f": [231, 232, 234, 235, 239, 262, 368, 371, 372, 378, 413], "lrn_src_md": [231, 239, 368, 378], "lrn_dst_md": [231, 239, 368, 378], "lrn_pd": [231, 234, 235, 239, 262, 368, 371, 372, 378, 413], "dnnl_lrn_forward_primitive_desc_cr": [231, 239, 281, 304, 368, 378], "lrn_dst_memori": [231, 234, 235, 239, 368, 371, 372, 378], "lrn_ws_memori": [231, 239, 368, 378], "lrn_ws_md": [231, 239, 368, 378], "pool_dst_siz": [231, 239, 368, 378], "pool_kernel": [231, 234, 235, 239, 368, 371, 372, 378], "pool_dil": [231, 232, 234, 235, 239, 368, 369, 371, 372, 378], "pool_src_md": [231, 239, 368, 378], "pool_dst_any_md": [231, 368], "pool_user_dst_memori": [231, 234, 235, 239, 368, 371, 372, 378], "pool_pd": [231, 234, 235, 239, 265, 368, 371, 372, 378, 419], "dnnl_pooling_forward_primitive_desc_cr": [231, 239, 281, 308, 368, 378], "pool_ws_memori": [231, 239, 368, 378], "pool_ws_md": [231, 239, 368, 378], "pool_dst_memori": [231, 234, 235, 239, 368, 371, 372, 378], "pool_reorder_dst": [231, 239, 368, 378], "pool_internal_dst_memori": [231, 239, 368, 378], "pool_dst_md": [231, 234, 235, 239, 265, 368, 371, 372, 378, 419], "tent": [231, 239, 368, 378], "workaround": [231, 239, 368, 378], "dnnl_stream_t": [231, 239, 250, 281, 307, 312, 313, 321, 323, 324, 332, 339, 343, 368, 378, 388], "dnnl_stream_creat": [231, 239, 250, 281, 321, 368, 378, 388], "dnnl_primitive_execut": [231, 239, 250, 281, 288, 312, 368, 378, 388, 480], "dnnl_stream_wait": [231, 239, 250, 281, 306, 313, 321, 368, 378, 388], "dnnl_stream_destroi": [231, 239, 250, 281, 321, 368, 378, 388], "dnnl_memory_destroi": [231, 239, 250, 281, 306, 368, 378, 388], "dnnl_primitive_destroi": [231, 239, 250, 281, 312, 368, 378, 388], "dnnl_engine_destroi": [231, 239, 250, 281, 298, 368, 378, 388], "engine_kind2str_upp": [231, 254, 277, 281, 368, 394, 438], "chrono": 232, "100": [232, 258, 280, 404, 442], "eng": [232, 233, 234, 235, 240, 241, 244, 248, 249, 254, 255, 256, 258, 265, 266, 272, 276, 277, 278, 280, 281, 369, 370, 371, 372, 381, 386, 394, 395, 396, 397, 398, 400, 401, 404, 419, 420, 431, 438, 442, 530], "conv1_src_tz": [232, 369], "conv1_weights_tz": [232, 369], "conv1_bias_tz": [232, 369], "conv1_dst_tz": [232, 369], "conv1_pad": [232, 369], "user_src": [232, 233, 266, 369, 370, 420], "user_dst": [232, 233, 266, 369, 370, 420], "1000": [232, 258, 274, 280, 369, 404, 434, 442], "conv1_weight": [232, 369], "conv1_bia": [232, 369], "user_src_memori": [232, 233, 369, 370], "user_weights_memori": [232, 233, 369, 370], "conv1_user_bias_memori": [232, 369], "conv1_prim_desc": [232, 369], "conv1_src_memori": [232, 369], "conv1_weights_memori": [232, 369], "conv1_dst_memori": [232, 369], "relu1": [232, 240, 255, 276, 396, 399, 400], "negative1_slop": [232, 369], "relu1_prim_desc": [232, 369], "lrn1": 232, "alpha1": 232, "beta1": 232, "local1_s": 232, "lrn1_prim_desc": 232, "lrn_forward": [232, 234, 235, 262, 304, 348, 371, 372, 413, 512, 536], "lrn1_dst_memori": [232, 369], "pool1": [232, 368, 369], "pool1_dst_tz": 232, "pool1_kernel": [232, 369], "pool1_strid": [232, 369], "pool1_dst_md": [232, 369], "pool1_pd": [232, 369], "pooling_forward": [232, 234, 235, 265, 267, 308, 348, 369, 371, 372, 419, 421, 526, 536], "pool1_dst_memori": [232, 369], "conv2_src_tz": 232, "conv2_weights_tz": 232, "conv2_bias_tz": 232, "conv2_dst_tz": 232, "conv2_strid": 232, "conv2_pad": 232, "conv2_weight": 232, "conv2_bia": 232, "conv2_user_weights_memori": 232, "conv2_user_bias_memori": 232, "conv2_src_md": 232, "conv2_bias_md": 232, "conv2_weights_md": 232, "conv2_dst_md": 232, "conv2_prim_desc": 232, "conv2_src_memori": 232, "conv2_weights_memori": 232, "conv2_dst_memori": 232, "relu2": 232, "negative2_slop": 232, "relu2_prim_desc": 232, "lrn2": 232, "alpha2": 232, "beta2": 232, "local2_s": 232, "k2": 232, "lrn2_prim_desc": 232, "lrn2_dst_memori": 232, "pool2": 232, "pool2_dst_tz": 232, "pool2_kernel": 232, "pool2_strid": 232, "pool2_dil": 232, "pool2_pad": 232, "pool2_dst_md": 232, "pool2_pd": 232, "pool2_dst_memori": 232, "384": [232, 233, 370], "conv3_src_tz": 232, "conv3_weights_tz": 232, "conv3_bias_tz": 232, "conv3_dst_tz": 232, "conv3_strid": 232, "conv3_pad": 232, "conv3_weight": 232, "conv3_bia": 232, "conv3_user_weights_memori": 232, "conv3_user_bias_memori": 232, "conv3_src_md": 232, "conv3_bias_md": 232, "conv3_weights_md": 232, "conv3_dst_md": 232, "conv3_prim_desc": 232, "conv3_src_memori": 232, "conv3_weights_memori": 232, "conv3_dst_memori": 232, "relu3": [232, 233, 370], "negative3_slop": 232, "relu3_prim_desc": 232, "conv4_src_tz": 232, "conv4_weights_tz": 232, "conv4_bias_tz": 232, "conv4_dst_tz": 232, "conv4_strid": 232, "conv4_pad": 232, "conv4_weight": 232, "conv4_bia": 232, "conv4_user_weights_memori": 232, "conv4_user_bias_memori": 232, "conv4_src_md": 232, "conv4_bias_md": 232, "conv4_weights_md": 232, "conv4_dst_md": 232, "conv4_prim_desc": 232, "conv4_src_memori": 232, "conv4_weights_memori": 232, "conv4_dst_memori": 232, "relu4": 232, "negative4_slop": 232, "relu4_prim_desc": 232, "conv5_src_tz": 232, "conv5_weights_tz": 232, "conv5_bias_tz": 232, "conv5_dst_tz": 232, "conv5_strid": 232, "conv5_pad": 232, "conv5_weight": 232, "conv5_bia": 232, "conv5_user_weights_memori": 232, "conv5_user_bias_memori": 232, "conv5_src_md": 232, "conv5_weights_md": 232, "conv5_bias_md": 232, "conv5_dst_md": 232, "conv5_prim_desc": 232, "conv5_src_memori": 232, "conv5_weights_memori": 232, "conv5_dst_memori": 232, "relu5": 232, "negative5_slop": 232, "relu5_prim_desc": 232, "pool5": 232, "pool5_dst_tz": 232, "pool5_kernel": 232, "pool5_strid": 232, "pool5_dil": 232, "pool5_pad": 232, "pool5_dst": 232, "pool5_dst_md": 232, "pool5_pd": 232, "pool5_dst_memori": 232, "fc6": 232, "4096": 232, "fc6_src_tz": 232, "fc6_weights_tz": 232, "fc6_bias_tz": 232, "fc6_dst_tz": 232, "fc6_weight": 232, "fc6_bia": 232, "fc6_user_weights_memori": 232, "fc6_user_bias_memori": 232, "fc6_src_md": 232, "fc6_bias_md": 232, "fc6_weights_md": 232, "fc6_dst_md": 232, "fc6_prim_desc": 232, "inner_product_forward": [232, 259, 301, 348, 406, 494, 496, 536], "fc6_src_memori": 232, "fc6_weights_memori": 232, "fc6_dst_memori": 232, "fc7": 232, "fc7_weights_tz": 232, "fc7_bias_tz": 232, "fc7_dst_tz": 232, "fc7_weight": 232, "fc7_bia": 232, "fc7_user_weights_memori": 232, "fc7_user_bias_memori": 232, "fc7_bias_md": 232, "fc7_weights_md": 232, "fc7_dst_md": 232, "fc7_prim_desc": 232, "fc7_weights_memori": 232, "fc7_dst_memori": 232, "fc8": 232, "fc8_weights_tz": 232, "fc8_bias_tz": 232, "fc8_dst_tz": 232, "fc8_weight": 232, "fc8_bia": 232, "fc8_user_weights_memori": 232, "fc8_user_bias_memori": 232, "user_dst_memori": [232, 233, 370], "fc8_bias_md": 232, "fc8_weights_md": 232, "fc8_dst_md": 232, "fc8_prim_desc": 232, "fc8_weights_memori": 232, "fc8_dst_memori": 232, "someth": [232, 234, 235, 246, 247, 272, 369, 371, 372, 431], "duration_cast": 232, "steady_clock": 232, "time_since_epoch": 232, "stdexcept": [233, 234, 244, 248, 251, 254, 256, 258, 266, 280, 371, 381, 386, 395, 404, 442], "simple_net_int8": 233, "conv_src_tz": [233, 234, 235, 370, 371, 372], "conv_weights_tz": [233, 234, 235, 370, 371, 372], "conv_bias_tz": [233, 234, 235, 370, 371, 372], "conv_dst_tz": [233, 234, 235, 370, 371, 372], "8f": [233, 370], "weight_scal": [233, 370], "55f": [233, 370], "src_mask": [233, 370], "weight_mask": [233, 370], "dst_mask": [233, 370], "user_bias_memori": [233, 370], "conv_attr": [233, 237, 370, 375], "dst_scale_md": [233, 370], "dst_scale_memori": [233, 370], "ops_alpha": [233, 370], "ops_beta": [233, 370], "conv_prim_desc": [233, 266, 370], "src_attr": [233, 370], "src_scale_md": [233, 370], "src_scale_memori": [233, 370], "src_reorder_pd": [233, 370], "src_reorder": [233, 370], "weight_attr": [233, 370], "wei_scale_md": [233, 370], "wei_scale_memori": [233, 370], "weight_reorder_pd": [233, 370], "weight_reord": [233, 370], "conv_bias_memori": [233, 234, 239, 370, 371, 378], "conv_dst_memori": [233, 234, 235, 370, 371, 372], "dst_attr": [233, 370], "dst_reorder_pd": [233, 370], "dst_reorder": [233, 370], "cassert": [234, 244, 248, 258, 277, 280, 371, 381, 386, 404, 438, 442], "net_fwd": [234, 235, 239, 371, 372, 378], "net_bwd": [234, 235, 239, 371, 372, 378], "net_fwd_arg": [234, 235, 239, 371, 372, 378], "net_bwd_arg": [234, 235, 239, 371, 372, 378], "sinf": [234, 235, 371, 372], "relu_data_tz": [234, 235, 371, 372], "lrn_data_tz": [234, 235, 371, 372], "lrn_workspace_memori": [234, 235, 371, 372], "pool_dst_tz": [234, 235, 371, 372], "pool_workspace_memori": [234, 235, 371, 372], "diff_data": [234, 235, 239, 371, 372, 378], "net_diff_dst": [234, 235, 239, 272, 371, 372, 378, 431], "pool_user_diff_dst_memori": [234, 235, 239, 371, 372, 378], "pool_diff_src_md": [234, 235, 239, 371, 372, 378], "pool_diff_dst_md": [234, 235, 239, 371, 372, 378], "pool_bwd_pd": [234, 235, 239, 371, 372, 378], "pooling_backward": [234, 235, 308, 348, 371, 372, 536], "pool_diff_dst_memori": [234, 235, 239, 371, 372, 378], "pool_diff_src_memori": [234, 235, 239, 371, 372, 378], "diff_src_desc": [234, 235, 281, 289, 294, 296, 297, 300, 301, 303, 304, 308, 309, 316, 319, 320, 371, 372, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "lrn_diff_dst_md": [234, 235, 239, 371, 372, 378], "lrn_diff_src_md": [234, 235, 239, 371, 372, 378], "lrn_bwd_pd": [234, 235, 239, 371, 372, 378], "lrn_backward": [234, 235, 304, 348, 371, 372, 536], "lrn_diff_dst_memori": [234, 235, 371, 372], "lrn_diff_src_memori": [234, 235, 239, 371, 372, 378], "relu_diff_src_md": [234, 235, 239, 371, 372, 378], "relu_diff_dst_md": [234, 235, 239, 371, 372, 378], "primitive_descriptor": [234, 235, 289, 300, 301, 303, 304, 371, 372], "relu_bwd_pd": [234, 235, 239, 371, 372, 378], "eltwise_backward": [234, 235, 297, 348, 371, 372, 536], "relu_diff_dst_memori": [234, 235, 371, 372], "relu_diff_src_memori": [234, 235, 239, 371, 372, 378], "conv_user_diff_weights_memori": [234, 235, 239, 371, 372, 378], "conv_diff_bias_memori": [234, 235, 239, 371, 372, 378], "conv_bwd_src_md": [234, 235, 371, 372], "conv_diff_weights_md": [234, 235, 239, 371, 372, 378], "conv_diff_dst_md": [234, 235, 239, 371, 372, 378], "conv_diff_bias_md": [234, 235, 239, 371, 372, 378], "conv_bwd_weights_pd": [234, 235, 239, 371, 372, 378], "convolution_backward_weight": [234, 235, 294, 348, 371, 372, 536], "conv_bwd_src_memori": [234, 235, 371, 372], "relu_bwd": [234, 235, 239, 371, 372, 378], "conv_diff_weight": [234, 235, 239, 371, 372, 378], "conv_diff_dst_memori": [234, 235, 239, 371, 372, 378], "conv_diff_weights_memori": [234, 235, 239, 371, 372, 378], "diff_weights_desc": [234, 235, 281, 294, 296, 301, 309, 371, 372, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "didn": [234, 235, 371, 372], "anyth": [234, 235, 307, 352, 371, 372], "n_iter": [234, 235, 239, 371, 372, 378], "net_output": [234, 235, 239, 371, 372, 378], "update_diff_dst": [234, 235, 239, 371, 372, 378], "net_diff_weight": [234, 235, 239, 371, 372, 378], "net_diff_bia": [234, 235, 239, 371, 372, 378], "update_weight": [234, 235, 239, 371, 372, 378], "conv_user_diff_weights_buff": [235, 239, 372, 378], "conv_diff_bias_buff": [235, 239, 372, 378], "concat_exampl": [236, 281, 373], "120": [236, 373], "num_src": [236, 275, 373, 436], "mem": [236, 246, 247, 250, 251, 256, 275, 277, 281, 373, 388, 395, 436, 438], "concat_pd": [236, 373], "dst_mem": [236, 242, 243, 245, 253, 254, 259, 262, 264, 265, 267, 269, 270, 271, 273, 275, 281, 373, 379, 380, 383, 392, 394, 406, 413, 417, 419, 421, 425, 427, 429, 432, 436], "concat_prim": [236, 373], "concat_arg": [236, 373], "convolution_exampl": [237, 281, 375], "simul": [237, 375, 396, 397, 398, 399, 400, 401], "strides_dim": [237, 252, 267, 375, 390, 421], "padding_dims_l": [237, 252, 267, 375, 390, 421], "padding_dims_r": [237, 252, 267, 375, 390, 421], "weights_data": [237, 242, 243, 245, 252, 259, 264, 268, 375, 379, 380, 383, 390, 406, 417, 423], "dst_data": [237, 242, 243, 245, 252, 253, 259, 262, 264, 267, 268, 269, 270, 271, 273, 275, 375, 379, 380, 383, 390, 392, 406, 413, 417, 421, 423, 425, 427, 429, 432, 436], "user_src_mem": [237, 245, 252, 268, 375, 383, 390, 423], "user_weights_mem": [237, 245, 252, 259, 268, 375, 383, 390, 406, 423], "user_dst_mem": [237, 245, 252, 268, 375, 383, 390, 423], "user_bias_md": [237, 252, 375, 390], "user_bias_mem": [237, 252, 375, 390], "conv_op": [237, 375], "conv_src_mem": [237, 265, 375, 419], "conv_weights_mem": [237, 265, 375, 419], "conv_dst_mem": [237, 265, 375, 419], "conv_arg": [237, 375, 530], "depthwise_convolution_exampl": [237, 281, 375], "exit_cod": [237, 254, 277, 375, 394, 438], "idx": [239, 277, 281, 312, 378, 438, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "n_fwd": [239, 378], "n_bwd": [239, 378], "dnnl_pooling_backward_primitive_desc_cr": [239, 281, 308, 378], "pool_internal_diff_dst_memori": [239, 378], "pool_reorder_diff_dst": [239, 378], "pool_bwd": [239, 378], "dnnl_lrn_backward_primitive_desc_cr": [239, 281, 304, 378], "lrn_bwd": [239, 378], "conv_diff_src_md": [239, 378], "dnnl_convolution_backward_weights_primitive_desc_cr": [239, 281, 294, 378], "conv_bwd_reorder_src": [239, 378], "conv_bwd_internal_src_memori": [239, 378], "conv_bwd_weights_src_memori": [239, 378], "conv_reorder_diff_dst": [239, 378], "conv_internal_diff_dst_memori": [239, 378], "conv_reorder_diff_weight": [239, 378], "conv_internal_diff_weights_memori": [239, 378], "conv_bwd_weight": [239, 378], "dnnl_memory_set_data_handl": [239, 281, 306, 307, 323, 378], "dnnl_memory_get_data_handl": [239, 281, 306, 378], "cleanup": [239, 378], "2023": [240, 241, 243, 245, 254, 257, 276, 280, 380, 383, 402, 442], "unordered_set": [240, 241, 249, 255, 276, 278, 281, 396, 397, 398, 399, 400, 401], "graph_example_util": [240, 241, 249, 255, 276, 278, 396, 397, 398, 399, 400, 401], "cpu_getting_started_tutori": 240, "oc1": [240, 255, 276], "oc2": [240, 255, 276], "225": 240, "kh1": [240, 255, 276], "kw1": [240, 255, 276], "kh2": [240, 255, 276], "kw2": [240, 255, 276], "conv0_input_dim": [240, 255, 276], "conv0_weight_dim": [240, 255, 276], "conv0_bias_dim": [240, 255, 276], "conv1_weight_dim": [240, 255, 276], "conv1_bias_dim": [240, 255, 276], "conv0_src_desc": [240, 255, 276, 396, 399, 400], "conv0_weight_desc": [240, 255, 276, 396, 399, 400], "conv0_dst_desc": [240, 255, 276, 396, 399, 400], "conv0": [240, 255, 276, 396, 399, 400], "bias_add": [240, 255, 276], "conv0_bias_desc": [240, 255, 276, 396, 399, 400], "conv0_bias_add_dst_desc": [240, 255, 276, 396, 399, 400], "conv0_bias_add": [240, 255, 276, 396, 399, 400], "relu0_dst_desc": [240, 255, 276, 396, 399, 400], "relu0": [240, 255, 276, 396, 399, 400], "conv1_weight_desc": [240, 255, 276, 396, 399, 400], "conv1_dst_desc": [240, 255, 276, 396, 399, 400], "conv1_bias_desc": [240, 255, 276, 396, 399, 400], "conv1_bias_add_dst_desc": [240, 255, 276, 396, 399, 400], "conv1_bias_add": [240, 255, 276, 396, 399, 400], "relu1_dst_desc": [240, 255, 276, 396, 399, 400], "make_engine_with_alloc": [240, 241, 249, 276, 278, 335, 349, 350, 351, 396, 397, 398, 400, 401], "strm": [240, 241, 249, 255, 256, 276, 277, 278, 395, 396, 397, 398, 400, 401, 438], "global_outputs_ts_map": [240, 241, 255, 276, 281], "shared_ptr": [240, 241, 249, 255, 276, 278, 281, 491], "data_buff": [240, 241, 249, 255, 276, 278, 281], "id_to_queried_logical_tensor": [240, 241, 255, 276], "helper": [240, 241, 255, 276, 522], "ids_with_any_layout": [240, 241, 255, 276], "set_any_layout": [240, 241, 255, 276, 281], "mock": [240, 241, 249, 255, 276, 278], "concrete_shap": [240, 241, 249, 255, 276, 278], "although": [240, 241, 249, 255, 276, 278, 370], "cpu_get_start": 240, "continu": [240, 241, 255, 276, 369, 394], "cp": [240, 241, 246, 247, 249, 255, 276, 278, 396, 397, 398, 400, 401], "inputs_t": [240, 241, 249, 255, 276, 278, 396, 397, 398, 400, 401], "outputs_t": [240, 241, 249, 255, 276, 278, 396, 397, 398, 400, 401], "allocate_graph_mem": [240, 241, 249, 281], "conv0_src": [240, 276], "conv0_wei": [240, 276], "conv0_bias_src1": [240, 276], "conv1_wei": [240, 276], "conv1_bias_src1": [240, 276], "relu_dst": [240, 276], "simple_pattern_int8": 241, "conv_input_dim": 241, "conv_weight_dim": 241, "conv_bias_dim": 241, "dequant0_src_desc": [241, 397], "conv_src_desc": [241, 397], "dequant0": [241, 397], "1f": [241, 245, 247, 248, 383, 385, 386, 397], "dequant1_src_desc": [241, 397], "conv_weight_desc": [241, 397], "dequant1": [241, 397], "wei_zp": [241, 397], "conv_bias_desc": [241, 397], "conv_dst_desc": [241, 397], "relu_dst_desc": [241, 397], "quant_dst_desc": [241, 397], "quant": [241, 397], "dq0_src": 241, "dq1_src": 241, "quant_dst": 241, "check_result": [242, 243, 281, 379, 380], "expected_result": [242, 243, 379, 380], "750000": [242, 243, 379, 380], "250000": [242, 243, 379, 380], "500000": [242, 243, 379, 380], "000000": [242, 243, 379, 380], "19": [242, 243, 379, 380], "sparse_matmul": [242, 243, 281, 379, 380], "src_coo_valu": [242, 379], "src_coo_row_indic": [242, 379], "src_coo_col_indic": [242, 379], "static_cast": [242, 243, 258, 379, 380, 404], "src_coo_md": [242, 379], "wei_md": [242, 243, 379, 380], "src_coo_mem": [242, 379], "wei_mem": [242, 243, 379, 380], "sparse_matmul_pd": [242, 243, 379, 380], "sparse_matmul_prim": [242, 243, 379, 380], "sparse_matmul_arg": [242, 243, 379, 380], "src_csr_valu": [243, 380], "src_csr_indic": [243, 380], "src_csr_pointer": [243, 380], "src_csr_md": [243, 380], "src_csr_mem": [243, 380], "cctype": [244, 248, 258, 280, 381, 386, 404, 442], "cstdio": [244, 248, 258, 280, 381, 386, 404, 442], "type_trait": [244, 381], "init_vector": [244, 248, 258, 280, 381, 386, 404, 442], "min_valu": [244, 381], "max_valu": [244, 381], "mt19937": [244, 248, 258, 280, 381, 386, 404, 442], "uniform_real_distribut": [244, 248, 258, 280, 381, 386, 404, 442], "find_min_max": [244, 381], "compute_q10n_param": [244, 381], "max_int": [244, 381], "numeric_limit": [244, 248, 381, 386], "min_int": [244, 381], "lowest": [244, 381], "ifndef": [244, 381], "omit_workaround_for_skx": [244, 381], "dev_guide_int8_comput": [244, 381], "endif": [244, 277, 381, 438], "min_val": [244, 381], "max_val": [244, 381], "tcomput": [244, 381], "q10n": [244, 381], "tdata": [244, 381], "tscale": [244, 381], "3g": [244, 381], "invers": [244, 381], "tzero": [244, 381], "compare_vector": [244, 248, 381, 386], "v2": [244, 248, 381, 386], "scale_v2": [244, 381], "zp_v2": [244, 381], "threshold": [244, 248, 381, 386], "v1_l2": [244, 248, 381, 386], "diff_l2": [244, 248, 381, 386], "v2_n": [244, 381], "deq10n": [244, 381], "ok": [244, 248, 381, 386], "tcomparison": [244, 381], "trefer": [244, 248, 381, 386], "terror": [244, 248, 381, 386], "trel": [244, 381], "naccuraci": [244, 381], "x_int_m": [244, 281, 381], "x_f32": [244, 281, 381], "scale_x": [244, 281, 381], "zp_x": [244, 281, 381], "q10n_scheme": [244, 381], "mimic": [244, 381], "x_int_md": [244, 381], "x_f32_md": [244, 381], "x_f32_m": [244, 381], "q10n_attr": [244, 381], "q10n_pd": [244, 381], "dst_scale_x_m": [244, 381], "zp_x_m": [244, 381], "f32_matmul_comput": [244, 281, 381], "a_f32": [244, 280, 281, 381, 442], "b_f32": [244, 258, 280, 281, 381, 404, 442], "c_f32": [244, 280, 281, 381, 442], "wrap": [244, 248, 251, 381, 386, 478, 479, 491, 522, 536, 560], "a_f32_m": [244, 381], "b_f32_m": [244, 381], "c_f32_m": [244, 381], "matmul_pd": [244, 245, 248, 258, 264, 280, 381, 383, 386, 404, 417, 442], "matmul_p": [244, 248, 258, 280, 281, 381, 386, 404, 442], "scale_c": [244, 281, 381], "zp_c": [244, 258, 281, 381, 404], "dynamic_q10n_matmul": [244, 281, 381], "c_u8": [244, 258, 281, 381, 404], "scale_a": [244, 381], "scale_b": [244, 381], "zp_a": [244, 258, 381, 404], "zp_b": [244, 280, 381, 442], "a_u8_md": [244, 381], "a_u8_m": [244, 381], "b_s8_md": [244, 381], "b_s8_m": [244, 381], "emb": [244, 381], "anywai": [244, 381], "theori": [244, 381], "postpon": [244, 381], "exercis": [244, 381], "c_f32_md": [244, 381], "matmul_attr": [244, 264, 381, 417], "scales_a_m": [244, 381], "scales_b_m": [244, 381], "zp_a_m": [244, 381], "c_u8_md": [244, 381], "c_u8_m": [244, 381], "compare_f32_and_quantized_matmul": [244, 281, 381], "param_a_min_v": [244, 381], "param_a_max_v": [244, 381], "4f": [244, 262, 381, 413], "param_b_min_v": [244, 381], "param_b_max_v": [244, 381], "threshold_dynamic_q10n": [244, 381], "2f": [244, 247, 381, 385], "_true_": [244, 381], "c_u8_dynamic_q10n": [244, 381], "scale_c_dynamic_q10n": [244, 381], "zp_c_dynamic_q10n": [244, 381], "rc": [244, 248, 381, 386], "logic_error": [244, 248, 251, 254, 256, 258, 381, 386, 389, 394, 395, 404], "matmul_exampl": [245, 264, 281, 383, 417], "densiti": [245, 383], "default_random_engin": [245, 383], "def_gen": [245, 383], "bernoulli_distribut": [245, 383], "b_dist": [245, 383], "is_on": [245, 383], "count_if": [245, 383], "matmul_src_md": [245, 383], "matmul_weights_md": [245, 383], "matmul_dst_md": [245, 383], "npleas": [245, 383], "matmul_src_mem": [245, 383], "matmul_weights_mem": [245, 383], "matmul_dst_mem": [245, 383], "matmul_prim": [245, 264, 383, 417], "wei_packed_md": [245, 383], "nhandl": [245, 281, 306, 307, 323, 383], "get_num_handl": [245, 383, 524], "wei_handl": [245, 383], "wei_buff": [245, 383], "buf_sz": [245, 383], "matmul_arg": [245, 264, 383, 417], "gnmt": [246, 247, 272, 384, 385, 431], "cstring": [246, 247, 272, 431], "dim_t": [246, 247, 281, 385], "src_seq_length_max": [246, 247, 281, 384, 385], "tgt_seq_length_max": [246, 247, 281, 384, 385], "feature_s": [246, 247, 281, 384, 385], "enc_bidir_n_lay": [246, 247, 281, 384, 385], "enc_unidir_n_lay": [246, 247, 281, 384, 385], "dec_n_lay": [246, 247, 281, 384, 385], "lstm_n_gate": [246, 247, 272, 281, 384, 385, 431], "weighted_src_lay": [246, 247, 281], "alignment_model": [246, 247, 281], "exp_sum": [246, 247, 281], "compute_weighted_annot": [246, 247, 281, 384, 385], "weighted_annot": [246, 247, 281, 384, 385], "weights_annot": [246, 247, 281], "enc_dst_lay": [246, 247], "num_weighted_annot": [246, 247], "dnnl_sgemm": [246, 247, 248, 281, 291, 386], "compute_attent": [246, 247, 281, 384, 385], "context_vector": [246, 247, 281], "weights_src_lay": [246, 247, 281], "dec_src_lay": [246, 247, 281], "weights_align": [246, 247, 281], "dst_iter": [246, 247, 272, 288, 384, 431, 538], "src_layer": [246, 247, 272, 288, 384, 385, 431, 538], "weights_yi": [246, 247], "weights_ai": [246, 247], "tmp": [246, 247, 318], "weighted_dec_src_lay": [246, 247], "alignment_model_ptr": [246, 247], "pragma_omp_parallel_for_collaps": [246, 247, 281], "tanhf": [246, 247], "gemv": [246, 247], "expf": [246, 247], "copy_context": [246, 247, 281, 384, 385], "src_iter": [246, 247, 272, 281, 288, 384, 385, 431, 538], "n_layer": [246, 247, 281], "cpu_engin": [246, 247, 251, 384, 385, 389], "encoder_net": [246, 247, 384, 385], "decoder_net": [246, 247, 384, 385], "encoder_net_arg": [246, 247, 384, 385], "decoder_net_arg": [246, 247, 384, 385], "enc_bidir_src_layer_tz": [246, 247, 384, 385], "enc_bidir_weights_layer_tz": [246, 247, 384, 385], "enc_bidir_weights_iter_tz": [246, 247, 384, 385], "enc_bidir_bias_tz": [246, 247, 384, 385], "enc_bidir_dst_layer_tz": [246, 247, 384, 385], "user_enc_bidir_wei_lay": [246, 247, 384, 385], "user_enc_bidir_wei_it": [246, 247, 384, 385], "user_enc_bidir_bia": [246, 247, 384, 385], "user_enc_bidir_src_layer_md": [246, 247, 384, 385], "user_enc_bidir_wei_layer_md": [246, 247, 384, 385], "user_enc_bidir_wei_iter_md": [246, 247, 384, 385], "user_enc_bidir_bias_md": [246, 247, 384, 385], "user_enc_bidir_src_layer_memori": [246, 247, 384, 385], "user_enc_bidir_wei_layer_memori": [246, 247, 384, 385], "user_enc_bidir_wei_iter_memori": [246, 247, 384, 385], "user_enc_bidir_bias_memori": [246, 247, 384, 385], "enc_bidir_wei_layer_md": [246, 247, 384, 385], "enc_bidir_wei_iter_md": [246, 247, 384, 385], "enc_bidir_dst_layer_md": [246, 247, 384, 385], "enc_bidir_prim_desc": [246, 247, 384, 385], "enc_bidir_wei_layer_memori": [246, 247, 384, 385], "enc_bidir_wei_layer_reorder_pd": [246, 247, 384], "enc_bidir_wei_iter_memori": [246, 247, 384, 385], "enc_bidir_wei_iter_reorder_pd": [246, 247], "enc_bidir_dst_layer_memori": [246, 247, 384, 385], "bi": [246, 247], "user_enc_uni_first_wei_lay": [246, 247, 384, 385], "user_enc_uni_first_wei_it": [246, 247, 384, 385], "user_enc_uni_first_bia": [246, 247, 384, 385], "user_enc_uni_first_wei_layer_dim": [246, 247], "user_enc_uni_first_wei_iter_dim": [246, 247], "user_enc_uni_first_bias_dim": [246, 247], "enc_uni_first_dst_layer_dim": [246, 247], "user_enc_uni_first_wei_layer_md": [246, 247], "user_enc_uni_first_wei_iter_md": [246, 247], "user_enc_uni_first_bias_md": [246, 247, 384, 385], "user_enc_uni_first_wei_layer_memori": [246, 247], "user_enc_uni_first_wei_iter_memori": [246, 247], "user_enc_uni_first_bias_memori": [246, 247, 384, 385], "enc_uni_first_wei_layer_md": [246, 247, 384, 385], "enc_uni_first_wei_iter_md": [246, 247, 384, 385], "enc_uni_first_dst_layer_md": [246, 247, 384, 385], "enc_uni_first_prim_desc": [246, 247, 384, 385], "enc_uni_first_wei_layer_memori": [246, 247, 384, 385], "enc_uni_first_wei_layer_reorder_pd": 246, "enc_uni_first_wei_iter_memori": [246, 247, 384, 385], "enc_uni_first_wei_iter_reorder_pd": 246, "enc_uni_first_dst_layer_memori": [246, 247, 384, 385], "user_enc_uni_wei_lay": [246, 247, 384, 385], "user_enc_uni_wei_it": [246, 247, 384, 385], "user_enc_uni_bia": [246, 247, 384, 385], "user_enc_uni_wei_layer_dim": [246, 247], "user_enc_uni_wei_iter_dim": [246, 247], "user_enc_uni_bias_dim": [246, 247], "enc_dst_layer_dim": [246, 247], "user_enc_uni_wei_layer_md": [246, 247], "user_enc_uni_wei_iter_md": [246, 247], "user_enc_uni_bias_md": [246, 247, 384, 385], "user_enc_uni_wei_layer_memori": [246, 247], "user_enc_uni_wei_iter_memori": [246, 247], "user_enc_uni_bias_memori": [246, 247, 384, 385], "enc_uni_wei_layer_md": [246, 247, 384, 385], "enc_uni_wei_iter_md": [246, 247, 384, 385], "enc_dst_layer_md": [246, 247, 384, 385], "enc_uni_prim_desc": [246, 247, 384, 385], "enc_uni_wei_layer_memori": [246, 247, 384, 385], "enc_uni_wei_layer_reorder_pd": [246, 247], "enc_uni_wei_iter_memori": [246, 247, 384, 385], "enc_uni_wei_iter_reorder_pd": [246, 247], "enc_dst_layer_memori": [246, 247, 384, 385], "dec": [246, 247], "user_dec_wei_lay": [246, 247, 384, 385], "user_dec_wei_it": [246, 247, 384, 385], "user_dec_bia": [246, 247, 384, 385], "user_dec_dst": [246, 384], "user_weights_attention_src_lay": [246, 247, 384, 385], "user_weights_annot": [246, 247, 384, 385], "user_weights_align": [246, 247, 384, 385], "user_dec_wei_layer_dim": [246, 247, 384, 385], "user_dec_wei_iter_dim": [246, 247, 384, 385], "user_dec_bias_dim": [246, 247, 384, 385], "dec_src_layer_dim": [246, 247, 384, 385], "dec_dst_layer_dim": [246, 247, 384, 385], "dec_dst_iter_c_dim": [246, 247, 384, 385], "noctx": [246, 247], "dec_dst_iter_dim": [246, 247, 384, 385], "dec_dst_iter_noctx_dim": [246, 247, 384, 385], "user_dec_wei_layer_md": [246, 247, 384, 385], "user_dec_wei_iter_md": [246, 247, 384, 385], "user_dec_bias_md": [246, 247, 384, 385], "dec_dst_layer_md": [246, 247, 384, 385], "dec_src_layer_md": [246, 247, 384, 385], "dec_dst_iter_md": [246, 247, 384, 385], "dec_dst_iter_c_md": [246, 247, 384, 385], "user_dec_wei_layer_memori": [246, 247, 384, 385], "user_dec_wei_iter_memori": [246, 247, 384, 385], "user_dec_bias_memori": [246, 247, 384, 385], "user_dec_dst_layer_memori": [246, 384], "dec_src_layer_memori": [246, 247, 384, 385], "dec_dst_iter_c_memori": [246, 247, 384, 385], "dec_wei_layer_md": [246, 247, 384], "dec_wei_iter_md": [246, 247, 384], "dec_dst_iter_memori": [246, 247, 384, 385], "dec_dst_iter_noctx_md": [246, 247, 384, 385], "dec_ctx_prim_desc": [246, 247, 384, 385], "dec_wei_layer_memori": [246, 247, 384, 385], "dec_wei_layer_reorder_pd": [246, 247, 384, 385], "dec_wei_iter_memori": [246, 247, 384], "dec_wei_iter_reorder_pd": [246, 247, 384], "enc": [246, 247], "ano": [246, 247], "init": [246, 247, 254, 256, 266, 395], "src_att_layer_handl": [246, 247, 384, 385], "src_att_iter_handl": [246, 247, 384, 385], "att": [246, 247], "dst_layer_handl": [246, 247, 384, 385], "compute_sum_of_row": [247, 281, 385], "col": [247, 281], "a_reduc": [247, 281], "weights_src_layer_scal": [247, 281], "dec_src_layer_scal": [247, 281], "dec_src_layer_shift": [247, 281], "tnc_offset": 247, "max_idx": 247, "max_idx_v": 247, "data_shift": [247, 385], "data_scal": [247, 385], "weights_scale_mask": [247, 385], "weights_scal": [247, 385], "halv": [247, 385], "scales_half": [247, 385], "65": [247, 385], "3f": [247, 268, 385, 423], "enc_bidir_src_layer_md": [247, 385], "attri": 247, "enc_bidir_src_layer_memori": [247, 385], "enc_bidir_src_layer_reorder_pd": [247, 385], "weights_attention_scal": [247, 385], "dec_dst": [247, 385], "dec_src_it": [247, 384], "dec_dst_it": [247, 384, 385], "dec_dst_layer_memori": [247, 385], "weights_attention_sum_row": [247, 385], "s8u8s32": [247, 385], "tight": [248, 386], "difficult": [248, 386], "finit": [248, 386], "tl2": [248, 386], "trelative_error": [248, 386], "taccuraci": [248, 386], "number_of_run": [248, 258, 280, 281, 386, 404, 442], "fixed_beta": [248, 281, 386], "_dynamic_": [248, 386], "dynamic_matmul_cr": [248, 281, 386], "a_shap": [248, 386], "b_shape": [248, 386], "c_shape": [248, 386], "a_strid": [248, 386], "b_stride": [248, 386], "c_stride": [248, 386], "earlier": [248, 386, 394, 438], "dynamic_matmul_execut": [248, 281, 386], "transa": [248, 281, 291, 324, 348, 354, 386], "transb": [248, 281, 291, 324, 348, 354, 386], "translat": [248, 386], "tolow": [248, 386], "a_m": [248, 386], "b_m": [248, 386], "c_m": [248, 386], "alpha_m": [248, 386], "sgemm_and_matmul_with_param": [248, 281, 386], "c_sgemm": [248, 386], "c_dynamic_matmul": [248, 386], "dynamic_matmul": [248, 386], "diverg": [248, 386], "sgemm_and_matmul": [248, 281, 386], "cpu_single_op_partition_tutori": 249, "src0_dim": [249, 278], "src1_dim": [249, 278], "matmul_src0_desc": [249, 278, 398, 401], "matmul_src1_desc": [249, 278, 398, 401], "matmul_dst_desc": [249, 278, 398, 401], "matmul_src0": [249, 278], "matmul_src1": [249, 278], "matmul_dst": [249, 278], "n_dim": [250, 281, 388], "n_elem": [250, 388], "complain_example_error_and_exit": [250, 281, 388], "find_neg": [250, 251, 281, 388, 389], "engine_cpu": [250, 388], "engine_gpu": [250, 388], "validate_engine_kind": [250, 251, 278, 281, 388, 389], "tz": [250, 251, 388, 389], "m_cpu_md": [250, 388], "m_gpu_md": [250, 388], "m_cpu": [250, 251, 388, 389], "m_gpu": [250, 251, 388, 389], "r1_pd": [250, 388], "r1": [250, 251, 388, 389], "r2_pd": [250, 388], "r2": [250, 251, 388, 389], "stream_gpu": [250, 251, 388, 389], "r1_arg": [250, 388], "relu_arg": [250, 388], "r2_arg": [250, 388], "prologu": [251, 254, 256, 266, 277], "nelem": 251, "cross_engine_reorder_tutori": 251, "gpu_engin": [251, 389], "deconvolution_exampl": [252, 281, 390], "revers": [252, 390], "deconv_src_md": [252, 390], "deconv_weights_md": [252, 390], "deconv_dst_md": [252, 390], "deconv_op": [252, 390], "deconv_attr": [252, 390], "deconv_pd": [252, 390], "deconvolution_forward": [252, 296, 348, 390, 468, 470, 536], "deconv_src_mem": [252, 390], "deconv_weights_mem": [252, 390], "deconv_dst_mem": [252, 390], "deconv_prim": [252, 390], "deconv_arg": [252, 390], "eltwise_exampl": [253, 281, 392], "eltwise_pd": [253, 392], "eltwise_prim": [253, 392], "eltwise_arg": [253, 392], "dnnl_debug": [254, 277, 389, 394, 395, 438], "getting_started_tutori": 254, "image_s": [254, 394], "alt_src_md": [254, 394], "obj": [254, 394], "relu_imag": [254, 394], "caught": [254, 277, 394, 438], "tstatu": [254, 277, 394, 438], "dnnl_status2str": [254, 277, 281, 394, 438], "tmessag": [254, 277, 394, 438], "cl_ext": [255, 399], "ocl_getting_started_tutori": 255, "allocate_ocl_graph_mem": [255, 281], "ocl_check": [256, 281, 395], "cl_int": 256, "cl_success": 256, "__file__": 256, "__line__": 256, "cl_kernel": [256, 281, 395], "create_init_opencl_kernel": [256, 281, 395], "ocl_ctx": [256, 281], "kernel_nam": [256, 281, 395], "ocl_cod": [256, 281, 395], "err": 256, "cl_program": 256, "ocl_program": 256, "clcreateprogramwithsourc": 256, "clbuildprogram": 256, "ocl_kernel": 256, "clcreatekernel": 256, "clreleaseprogram": 256, "gpu_opencl_interop_tutori": 256, "tz_dim": [256, 272, 277, 395, 431, 438], "mem_d": [256, 277, 395, 438], "__kernel": [256, 395], "__global": [256, 395], "get_global_id": [256, 395], "oclkernel": 256, "ocl_init_kernel": [256, 395], "oclexecut": 256, "ocl_buf": [256, 395], "clsetkernelarg": [256, 395], "clenqueuendrangekernel": [256, 395], "mem_data": [256, 395], "clreleasekernel": 256, "group_normalization_exampl": [257, 281, 402], "28": [257, 402, 420], "gnorm_pd": [257, 402], "gnorm_prim": [257, 402], "gnorm_arg": [257, 402], "uniform_int_distribut": [258, 404], "sc_a": [258, 404], "sc_b": [258, 280, 404, 442], "sc_c": [258, 404], "mlp": [258, 280, 283, 404, 442], "matmul_pd_cr": [258, 280, 281, 404, 442], "prepare_input": [258, 280, 281, 404, 442], "a_u8_mem": [258, 281, 404], "sc_a_mem": [258, 281, 404], "sc_b_mem": [258, 280, 281, 404, 442], "sc_c_mem": [258, 281, 404], "zp_a_mem": [258, 281, 404], "zp_c_mem": [258, 281, 404], "25f": [258, 404], "40": [258, 404], "sanity_check": [258, 281, 404], "c_u8_mem": [258, 281, 404], "tquantiz": [258, 404], "twhich": [258, 404], "b_s8_mem": [258, 280, 281, 404, 442], "meaning": [258, 280, 404, 442], "inner_product_exampl": [259, 281, 406], "inner_product_weights_md": [259, 406], "inner_product_op": [259, 406], "inner_product_attr": [259, 406], "inner_product_pd": [259, 406], "inner_product_weights_mem": [259, 406], "inner_product_prim": [259, 406], "inner_product_arg": [259, 406], "layer_normalization_exampl": [260, 281, 408], "lnorm_pd": [260, 408], "lnorm_prim": [260, 408], "lnorm_arg": [260, 408], "lbr_gru_exampl": [261, 281, 410], "weights_layer_dim": [261, 410], "weights_iter_dim": [261, 410], "dst_layer_dim": [261, 279, 410, 440], "dst_iter_dim": [261, 279, 410, 440], "dst_iter_data": [261, 279, 410, 440], "weights_layer_md": [261, 279, 410, 440], "weights_iter_md": [261, 279, 410, 440], "weights_layer_mem": [261, 279, 410, 440], "lbr_gru_prim": [261, 410], "lbr_gru_arg": [261, 410], "lrn_exampl": [262, 281, 413], "lrn_prim": [262, 413], "lrn_arg": [262, 413], "lstm_exampl": [263, 281, 415], "lstm_weights_layer_md": [263, 415], "lstm_weights_iter_md": [263, 415], "src_iter_c_md": [263, 415], "dst_iter_c_md": [263, 415], "lstm_weights_layer_mem": [263, 415], "lstm_weights_iter_mem": [263, 415], "src_iter_c_mem": [263, 415], "dst_iter_c_mem": [263, 415], "lstm_prim": [263, 415], "lstm_arg": [263, 415], "weights_mem": [264, 265, 417, 419], "matmul_op": [264, 417], "sstream": 265, "memory_format_propagation_tutori": 265, "3x3": [265, 419], "need_reorder_src": [265, 419], "need_reorder_weight": [265, 419], "need_reorder_dst": [265, 419], "pool_dst_mem": [265, 419], "reorder_src": [265, 419], "reorder_weight": [265, 419], "conv_scratchpad_mem": [265, 419], "pool_scratchpad_mem": [265, 419], "reorder_dst": [265, 419], "init_data": [266, 281], "create_and_execute_relu": [266, 281, 420], "create_attr_with_relu_post_op": [266, 281, 420], "naiv": 266, "conv_relu_na": [266, 420], "user_wei": [266, 420], "mem_desc": 266, "conv_wei_md": [266, 420], "conv_primit": 266, "conv_relu_block": [266, 420], "implementation2": 266, "condition": 266, "r_pd": [266, 420], "conv_wei": [266, 420], "conv_dst": [266, 420], "prim_descriptor": 266, "conv_relu_fus": [266, 420], "prim_desc": 266, "implementation3": 266, "synthet": [266, 420], "pooling_exampl": [267, 281, 421], "dilation_onednn": [267, 421], "dilation_torch": [267, 421], "kernel_dim": [267, 421], "pooling_pd": [267, 421], "pooling_prim": [267, 421], "pooling_arg": [267, 421], "prelu_exampl": [268, 281, 423], "prelu_pd": [268, 423], "prelu_forward": [268, 309, 348, 423, 532, 536], "prelu_weights_mem": [268, 423], "prelu_prim": [268, 423], "prelu_arg": [268, 423], "reduction_exampl": [269, 281, 425], "reduction_pd": [269, 425], "reduction_prim": [269, 425], "reduction_arg": [269, 425], "reorder_exampl": [270, 281, 427], "ic_dim": [270, 427], "reorder_attr": [270, 427], "dst_scales_mem": [270, 427], "reorder_prim": [270, 427], "reorder_arg": [270, 427], "resampling_exampl": [271, 281, 429], "350": [271, 429], "resampling_pd": [271, 429], "resampling_forward": [271, 316, 348, 429, 536, 547], "resampling_prim": [271, 429], "resampling_arg": [271, 429], "n0": [272, 281, 431], "rand": [272, 281, 431], "31": [272, 281, 431], "n1": [272, 281, 431], "chunk": [272, 431], "compact": [272, 420, 431], "leftmost": [272, 431], "leftmost_batch": [272, 281, 431], "rightmost_batch": [272, 281, 431], "leftmost_seq_length": [272, 281, 431], "rightmost_seq_length": [272, 281, 431], "common_feature_s": [272, 281, 431], "characterist": [272, 394, 431], "common_n_lay": [272, 281, 431], "is_train": [272, 431], "fwd_inf_train": [272, 431], "fwd_net": [272, 431], "bwd_net": [272, 431], "shorter": [272, 431], "net_src_dim": [272, 431], "leftmost_src_layer_dim": [272, 431], "rightmost_src_layer_dim": [272, 431], "common_weights_layer_dim": [272, 431], "common_weights_iter_dim": [272, 431], "common_bias_dim": [272, 431], "leftmost_dst_layer_dim": [272, 431], "rightmost_dst_layer_dim": [272, 431], "arrang": [272, 431], "our": [272, 395, 419, 431, 438], "leftmost_dst_iter_dim": [272, 431], "leftmost_dst_iter_c_dim": [272, 431], "rightmost_src_iter_dim": [272, 431], "rightmost_src_iter_c_dim": [272, 431], "tz_volum": [272, 431], "suppli": [272, 326, 431], "formatted_md": [272, 431], "generic_md": [272, 431], "studi": [272, 431], "suggest": [272, 431], "leftmost_dst_layer_memori": [272, 431], "rightmost_dst_layer_memori": [272, 431], "net_src_memori": [272, 431], "accommod": [272, 419, 431], "user_leftmost_src_layer_md": [272, 431], "user_rightmost_src_layer_md": [272, 431], "leftmost_src_layer_memori": [272, 431], "rightmost_src_layer_memori": [272, 431], "ll": [272, 431], "user_common_weights_lay": [272, 431], "user_common_weights_layer_memori": [272, 431], "user_common_weights_it": [272, 431], "user_common_weights_iter_memori": [272, 431], "user_common_bia": [272, 431], "user_common_bias_memori": [272, 431], "user_leftmost_dst_lay": [272, 431], "user_leftmost_dst_layer_memori": [272, 431], "user_rightmost_dst_lay": [272, 431], "user_rightmost_dst_layer_memori": [272, 431], "leftmost_prim_desc": [272, 431], "aprop_kind": [272, 431, 449, 451, 453, 455, 460, 466, 472, 476, 484, 486, 488, 490, 498, 500, 502, 504, 506, 508, 510, 514, 516, 518, 528, 534, 540, 545, 549, 550, 554, 558, 562, 570, 572], "leftmost_dst_iter_memori": [272, 431], "leftmost_dst_iter_c_memori": [272, 431], "rightmost_src_iter_md": [272, 431], "rightmost_src_iter_memori": [272, 431], "rightmost_src_iter_c_md": [272, 431], "rightmost_src_iter_c_memori": [272, 431], "rightmost_prim_desc": [272, 431], "rigthmost": [272, 431], "common_weights_layer_memori": [272, 431], "common_weights_iter_memori": [272, 431], "common_bias_memori": [272, 431], "workspace_primitive_desc": [272, 431], "commun": [272, 431], "create_w": [272, 431], "leftmost_workspace_memori": [272, 431], "rightmost_workspace_memori": [272, 431], "leftmost_lay": [272, 431], "rightmost_lay": [272, 431], "net_diff_src": [272, 431], "net_diff_src_memori": [272, 431], "user_leftmost_diff_src_layer_md": [272, 431], "user_rightmost_diff_src_layer_md": [272, 431], "leftmost_diff_src_layer_memori": [272, 431], "rightmost_diff_src_layer_memori": [272, 431], "backpropag": [272, 431], "user_common_diff_weights_lay": [272, 431], "user_common_diff_weights_layer_memori": [272, 431], "user_common_diff_bia": [272, 431], "user_common_diff_bias_memori": [272, 431], "net_diff_dst_dim": [272, 431], "net_diff_dst_memori": [272, 431], "diff_dst_lay": [272, 431], "user_leftmost_diff_dst_layer_md": [272, 431], "user_rightmost_diff_dst_layer_md": [272, 431], "leftmost_diff_dst_layer_memori": [272, 431], "rightmost_diff_dst_layer_memori": [272, 431], "leftmost_bwd_prim_desc": [272, 431], "diff_src_layer_desc": [272, 281, 317, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "diff_src_iter_desc": [272, 281, 317, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "diff_src_iter_c_desc": [272, 281, 317, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "diff_weights_layer_desc": [272, 281, 317, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "diff_weights_iter_desc": [272, 281, 317, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "diff_bias_desc": [272, 281, 294, 296, 301, 317, 431, 449, 451, 464, 470, 488, 490, 496, 504, 506, 508, 510, 516, 518, 550, 570, 572], "diff_dst_layer_desc": [272, 281, 317, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "diff_dst_iter_desc": [272, 281, 317, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "diff_dst_iter_c_desc": [272, 281, 317, 431, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "leftmost_diff_dst_iter_memori": [272, 431], "leftmost_diff_dst_iter_c_memori": [272, 431], "rightmost_diff_src_iter_md": [272, 431], "rightmost_diff_src_iter_memori": [272, 431], "rightmost_diff_src_iter_c_md": [272, 431], "rightmost_diff_src_iter_c_memori": [272, 431], "rightmost_bwd_prim_desc": [272, 431], "leftmost_src_layer_bwd_memori": [272, 431], "rightmost_src_layer_bwd_memori": [272, 431], "common_weights_layer_bwd_memori": [272, 431], "common_weights_iter_bwd_memori": [272, 431], "common_bias_bwd_memori": [272, 431], "common_diff_weights_layer_memori": [272, 431], "reorder_common_diff_weights_lay": [272, 431], "common_diff_bias_memori": [272, 431], "reorder_common_diff_bia": [272, 431], "dst_layer": [272, 288, 431, 538], "leftmost_dst_layer_bwd_memori": [272, 431], "rightmost_dst_layer_bwd_memori": [272, 431], "common_diff_weights_iter_memori": [272, 431], "leftmost_dst_iter_bwd_memori": [272, 431], "leftmost_dst_iter_c_bwd_memori": [272, 431], "rightmost_layer_bwd": [272, 431], "leftmost_layer_bwd": [272, 431], "shuffle_exampl": [273, 281, 432], "shuffle_axi": [273, 432], "shuffle_pd": [273, 432], "shuffle_forward": [273, 319, 348, 432, 536, 552], "shuffle_prim": [273, 432], "shuffle_arg": [273, 432], "softmax_exampl": [274, 281, 434], "softmax_pd": [274, 434], "softmax_forward": [274, 320, 348, 434, 536, 556], "softmax_prim": [274, 434], "softmax_arg": [274, 434], "sum_exampl": [275, 281, 436], "sum_pd": [275, 436], "sum_prim": [275, 436], "sum_arg": [275, 436], "dnnl_graph_sycl": [276, 278, 400, 401], "sycl_getting_started_tutori": 276, "make_alloc": [276, 278, 331, 350, 351, 400, 401], "sycl_malloc_wrapp": [276, 278, 281, 400, 401], "sycl_free_wrapp": [276, 278, 281, 400, 401], "gpu_selector_v": [276, 278, 400, 401], "cpu_selector_v": [276, 400, 401], "sycl_get_start": 276, "allocate_sycl_graph_mem": [276, 278, 281], "__has_includ": [277, 438], "kernel_tag": [277, 438], "sycl_interop_buffer_tutori": 277, "buf": [277, 281, 339, 343], "sycl_buf": [277, 438], "handler": [277, 438], "cgh": [277, 438], "get_access": [277, 438], "host_acc": [277, 438], "get_host_access": [277, 438], "exp_valu": [277, 438], "gpu_single_op_partition_tutori": 278, "vanilla_rnn_exampl": [279, 281, 440], "vanilla_rnn_prim": [279, 440], "vanilla_rnn_arg": [279, 440], "zp_b_mem": [280, 281, 442], "num_g": [280, 442], "n_group": [280, 442], "c_f32_mem": [280, 442], "dnnl_memory_desc": [281, 306], "dnnl_memori": [281, 306], "const_dnnl_memory_t": [281, 306, 307, 323], "dnnl_primitive_desc": [281, 312], "dnnl_primitive_attr": [281, 288], "const_dnnl_primitive_attr_t": [281, 288, 289, 290, 293, 294, 296, 297, 300, 301, 303, 304, 305, 308, 309, 312, 314, 315, 316, 317, 319, 320, 322], "dnnl_post_op": [281, 288], "const_dnnl_post_ops_t": [281, 288, 326], "dnnl_primit": [281, 312], "const_dnnl_primitive_t": [281, 307, 312, 323], "dnnl_engin": [281, 298], "dnnl_stream": [281, 321], "const_dnnl_stream_t": [281, 321], "dnnl_graph_ocl_allocate_f": [281, 339, 350], "dnnl_graph_ocl_deallocate_f": [281, 339, 350], "dnnl_graph_sycl_allocate_f": [281, 331, 343, 351, 400, 401], "dnnl_graph_sycl_deallocate_f": [281, 331, 343, 351, 400, 401], "dnnl_graph_partit": [281, 341], "const_dnnl_graph_partition_t": [281, 341], "dnnl_graph_graph": [281, 336], "dnnl_graph_graph_t": [281, 336], "const_dnnl_graph_graph_t": [281, 336], "dnnl_graph_op": [281, 340], "dnnl_graph_op_t": [281, 336, 340], "const_dnnl_graph_op_t": [281, 340, 341], "dnnl_graph_alloc": [281, 331], "dnnl_graph_allocator_t": [281, 331, 339, 343], "const_dnnl_graph_allocator_t": [281, 331, 335, 339, 343], "dnnl_graph_compiled_partit": [281, 332], "const_dnnl_graph_compiled_partition_t": [281, 332, 339, 343], "dnnl_graph_tensor": [281, 344], "dnnl_graph_tensor_t": [281, 344], "const_dnnl_graph_tensor_t": [281, 332, 339, 343, 344], "dnnl_ukernel_attr_param": [281, 325], "dnnl_ukernel_attr_params_t": [281, 325], "const_dnnl_ukernel_attr_params_t": [281, 325, 326], "dnnl_brgemm": [281, 326], "dnnl_brgemm_t": [281, 326], "const_dnnl_brgemm_t": [281, 326], "dnnl_transform": [281, 326], "dnnl_transform_t": [281, 326], "const_dnnl_transform_t": [281, 326], "api_kind": 281, "dnnl_accumulation_mode_t": [281, 287, 288, 348], "dnnl_cpu_isa_hints_t": [281, 318], "dnnl_cpu_isa_t": [281, 318], "dnnl_fpmath_mode_t": [281, 288, 299, 336, 348], "dnnl_graph_layout_type_t": [281, 338, 482], "dnnl_graph_op_attr_t": [281, 340], "dnnl_graph_op_kind_t": [281, 340], "dnnl_graph_partition_policy_t": [281, 336, 341], "dnnl_graph_tensor_property_t": [281, 338, 482], "dnnl_normalization_flags_t": [281, 289, 300, 303, 312, 348], "dnnl_ocl_interop_memory_kind_t": [281, 307, 352], "dnnl_pack_type_t": [281, 325, 326], "dnnl_profiling_data_kind_t": [281, 306, 313], "dnnl_prop_kind_t": [281, 288, 289, 294, 296, 297, 300, 301, 303, 304, 308, 309, 312, 316, 317, 319, 320, 348], "dnnl_rnn_flags_t": [281, 317, 348], "dnnl_rounding_mode_t": [281, 288, 348], "dnnl_scratchpad_mode_t": [281, 288, 348], "dnnl_stream_flags_t": [281, 321], "dnnl_sycl_interop_memory_kind_t": [281, 323, 353], "cpu_deletor_t": 281, "dnnl_graph_inplace_pair_t": [281, 332], "gemm_dims_t": 281, "gqa_dims_t": 281, "mlp_dims_t": 281, "mqa_dims_t": 281, "sdpa_dims_t": 281, "sycl_deletor_t": 281, "simple_memory_pool_t": 281, "min_run": 281, "bnorm_u8_via_binary_postop": [281, 359, 366], "cnn_inference_f32": [281, 359, 369], "cross_engine_reord": [281, 359, 388, 389], "initializer_list": 281, "extra_arg": 281, "fill_random": 281, "get_type_str": 281, "print_test_cas": 281, "bench_gated_mlp": 281, "time_limit": 281, "bad_arg": 281, "bench": 281, "mlp_perf": 281, "size_of": 281, "fill_mask": 281, "seq_len": [281, 576, 578, 579], "bench_gqa": 281, "gqa_perf": 281, "id_to_set_any_layout": 281, "is_input": 281, "ocl_malloc_shar": 281, "ocl_malloc_devic": 281, "ocl_fre": [281, 339, 350], "ocl_memcpi": 281, "make_md": 281, "write_dt": 281, "write_to_dnnl_tensor": 281, "get_mem_pool": 281, "create_alloc": 281, "bench_mqa": 281, "mqa_perf": 281, "bench_sdpa_primit": 281, "bench_sdpa": 281, "sdpa_perf": 281, "is_integ": 281, "run_cas": 281, "matmul_perf": 281, "performance_profil": [281, 359, 420], "sycl_usm_tutori": 281, "inference_int8_matmul": [281, 359, 404], "weights_decompression_matmul": [281, 359, 442], "dnnl_api": [281, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344], "dnnl_primitive_desc_next_impl": [281, 312], "existing_primitive_desc": [281, 312], "dnnl_primitive_desc_get_attr": [281, 312], "dnnl_primitive_desc_query_s32": [281, 312], "dnnl_primitive_create_from_cache_blob": [281, 312], "cache_blob": [281, 307, 312, 339, 350, 352, 448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 525, 527, 531, 533, 536, 542, 544, 546, 548, 551, 553, 555, 557, 561, 569, 571], "dnnl_primitive_get_primitive_desc": [281, 312], "dnnl_primitive_get_cache_blob": [281, 312], "dnnl_primitive_attr_clon": [281, 288], "existing_attr": [281, 288], "dropout_desc": [281, 288], "dnnl_primitive_attr_get_fpmath_mod": [281, 288], "dnnl_primitive_attr_set_fpmath_mod": [281, 288], "dnnl_primitive_attr_get_fpmath_mode_v2": [281, 288], "dnnl_primitive_attr_get_determinist": [281, 288], "dnnl_primitive_attr_get_accumulation_mod": [281, 288], "dnnl_primitive_attr_set_accumulation_mod": [281, 288], "dnnl_primitive_attr_get_scratchpad_mod": [281, 288], "dnnl_primitive_attr_set_scal": [281, 288, 538], "group_dim": [281, 288], "dnnl_primitive_attr_set_zero_points_mask": [281, 288, 538], "dnnl_primitive_attr_set_zero_point": [281, 288, 538], "dnnl_primitive_attr_set_round": [281, 288], "dnnl_primitive_attr_get_round": [281, 288], "dnnl_primitive_attr_get_post_op": [281, 288], "dnnl_post_ops_cr": [281, 288], "dnnl_post_ops_clon": [281, 288], "existing_post_op": [281, 288], "dnnl_post_ops_destroi": [281, 288], "dnnl_post_ops_len": [281, 288], "dnnl_post_ops_get_kind": [281, 288], "dnnl_post_ops_append_sum": [281, 288], "dnnl_post_ops_get_params_sum": [281, 288], "dnnl_post_ops_get_params_eltwis": [281, 288], "weights_data_typ": [281, 288, 530], "bias_data_typ": [281, 288, 530], "dst_data_typ": [281, 288, 530], "kernel_s": [281, 288, 530], "stride_s": [281, 288, 530], "padding_l_s": [281, 288, 530], "dnnl_post_ops_get_params_dw": [281, 288], "src1_desc": [281, 288, 290, 457, 530], "dnnl_post_ops_get_params_binari": [281, 288], "dnnl_post_ops_get_params_prelu": [281, 288], "memory_desc": [281, 306, 307, 323, 352, 353], "dnnl_memory_desc_clon": [281, 306], "existing_memory_desc": [281, 306], "dnnl_memory_desc_get_blob": [281, 306], "dnnl_memory_desc_create_with_blob": [281, 306], "dnnl_memory_desc_create_with_csr_encod": [281, 306], "dnnl_memory_desc_create_with_coo_encod": [281, 306], "dnnl_memory_desc_create_with_packed_encod": [281, 306], "dnnl_memory_desc_create_submemori": [281, 306], "parent_memory_desc": [281, 306], "dnnl_memory_desc_reshap": [281, 306], "out_memory_desc": [281, 306], "in_memory_desc": [281, 306], "dnnl_memory_desc_permute_ax": [281, 306], "dnnl_memory_desc_query_v2": [281, 306], "lh": [281, 306], "rh": [281, 306], "dnnl_memory_desc_get_size_v2": [281, 306], "dnnl_data_type_s": [281, 306], "dnnl_memory_create_v2": [281, 306], "dnnl_memory_map_data": [281, 306], "mapped_ptr": [281, 306, 522], "dnnl_memory_map_data_v2": [281, 306], "dnnl_memory_unmap_data": [281, 306], "dnnl_memory_unmap_data_v2": [281, 306], "dnnl_memory_get_data_handle_v2": [281, 306], "dnnl_memory_set_data_handle_v2": [281, 306], "reorder_primitive_desc": [281, 315], "src_engin": [281, 315, 545], "dst_engin": [281, 315, 545], "dnnl_concat_primitive_desc_cr": [281, 293], "concat_primitive_desc": [281, 293], "dnnl_sum_primitive_desc_cr": [281, 322], "sum_primitive_desc": [281, 322], "dnnl_binary_primitive_desc_cr": [281, 290], "src0_desc": [281, 290, 457], "dnnl_binary_primitive_desc_create_v2": [281, 290], "src2_desc": [281, 290, 457], "dnnl_convolution_backward_data_primitive_desc_cr": [281, 294], "dnnl_deconvolution_forward_primitive_desc_cr": [281, 296], "dnnl_deconvolution_backward_data_primitive_desc_cr": [281, 296], "dnnl_deconvolution_backward_weights_primitive_desc_cr": [281, 296], "dnnl_shuffle_forward_primitive_desc_cr": [281, 319], "dnnl_shuffle_backward_primitive_desc_cr": [281, 319], "data_desc": [281, 297, 474], "dnnl_softmax_forward_primitive_desc_cr": [281, 320], "softmax_axi": [281, 320], "dnnl_softmax_backward_primitive_desc_cr": [281, 320], "dnnl_prelu_forward_primitive_desc_cr": [281, 309], "dnnl_prelu_backward_primitive_desc_cr": [281, 309], "dnnl_batch_normalization_forward_primitive_desc_cr": [281, 289], "dnnl_batch_normalization_backward_primitive_desc_cr": [281, 289], "dnnl_group_normalization_forward_primitive_desc_cr": [281, 300], "dnnl_group_normalization_backward_primitive_desc_cr": [281, 300], "dnnl_layer_normalization_forward_primitive_desc_cr": [281, 303], "dnnl_layer_normalization_backward_primitive_desc_cr": [281, 303], "dnnl_layer_normalization_forward_primitive_desc_create_v2": [281, 303], "scale_shift_data_typ": [281, 303, 500, 502], "dnnl_layer_normalization_backward_primitive_desc_create_v2": [281, 303], "diff_scale_shift_data_typ": [281, 303, 500], "dnnl_inner_product_forward_primitive_desc_cr": [281, 301], "dnnl_inner_product_backward_data_primitive_desc_cr": [281, 301], "dnnl_inner_product_backward_weights_primitive_desc_cr": [281, 301], "dnnl_primitive_attr_set_rnn_data_qparam": [281, 288], "dnnl_primitive_attr_get_rnn_data_qparam": [281, 288], "dnnl_primitive_attr_set_rnn_weights_qparam": [281, 288], "dnnl_primitive_attr_get_rnn_weights_qparam": [281, 288], "dnnl_primitive_attr_set_rnn_weights_projection_qparam": [281, 288], "dnnl_primitive_attr_get_rnn_weights_projection_qparam": [281, 288], "dnnl_vanilla_rnn_forward_primitive_desc_cr": [281, 288, 317], "dnnl_vanilla_rnn_backward_primitive_desc_cr": [281, 317], "dnnl_lstm_forward_primitive_desc_cr": [281, 317], "dnnl_lstm_backward_primitive_desc_cr": [281, 317], "diff_weights_peephole_desc": [281, 317, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "diff_weights_projection_desc": [281, 317, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "dnnl_gru_forward_primitive_desc_cr": [281, 317], "dnnl_gru_backward_primitive_desc_cr": [281, 317], "dnnl_lbr_gru_forward_primitive_desc_cr": [281, 317], "dnnl_lbr_gru_backward_primitive_desc_cr": [281, 317], "dnnl_augru_forward_primitive_desc_cr": [281, 317], "dnnl_augru_backward_primitive_desc_cr": [281, 317], "diff_attention_desc": [281, 317, 449, 504], "dnnl_lbr_augru_forward_primitive_desc_cr": [281, 317], "dnnl_lbr_augru_backward_primitive_desc_cr": [281, 317], "dnnl_matmul_primitive_desc_cr": [281, 305], "dnnl_resampling_forward_primitive_desc_cr": [281, 316], "dnnl_resampling_backward_primitive_desc_cr": [281, 316], "dnnl_reduction_primitive_desc_cr": [281, 314], "dnnl_get_primitive_cache_capac": [281, 310], "dir": [281, 317, 318, 348], "dnnl_set_max_cpu_isa": [281, 318], "dnnl_get_effective_cpu_isa": [281, 318], "dnnl_set_cpu_isa_hint": [281, 318], "isa_hint": [281, 318, 348], "dnnl_get_cpu_isa_hint": [281, 318], "dnnl_reset_profil": [281, 313], "dnnl_query_profiling_data": [281, 313], "data_kind": [281, 313, 348], "num_entri": [281, 313], "offsetc": [281, 291, 324, 348, 354], "ao": [281, 291, 324, 348, 354], "bo": [281, 291, 324, 348, 354], "dnnl_dt2str": 281, "dnnl_fpmath_mode2str": 281, "dnnl_accumulation_mode2str": 281, "dnnl_engine_kind2str": 281, "dnnl_sparse_encoding2str": 281, "dnnl_fmt_tag2str": 281, "dnnl_prop_kind2str": 281, "dnnl_prim_kind2str": 281, "dnnl_alg_kind2str": 281, "dnnl_rnn_flags2str": 281, "dnnl_rnn_direction2str": 281, "dnnl_scratchpad_mode2str": 281, "dnnl_rounding_mode2str": 281, "dnnl_cpu_isa2str": 281, "dnnl_cpu_isa_hints2str": 281, "dnnl_runtime2str": 281, "dnnl_fmt_kind2str": 281, "dnnl_ocl_interop_memory_cr": [281, 307], "dnnl_ocl_interop_memory_create_v2": [281, 307], "dnnl_ocl_interop_memory_get_memory_kind": [281, 307], "dnnl_ocl_interop_memory_get_mem_object": [281, 307], "mem_object": [281, 307, 352], "dnnl_ocl_interop_memory_set_mem_object": [281, 307], "dnnl_ocl_interop_engine_get_cache_blob_id": [281, 307], "dnnl_ocl_interop_engine_get_cache_blob": [281, 307, 352], "dnnl_ocl_interop_engine_create_from_cache_blob": [281, 307, 339], "dnnl_ocl_interop_engine_cr": [281, 307, 339], "dnnl_ocl_interop_engine_get_context": [281, 307], "dnnl_ocl_interop_get_devic": [281, 307], "dnnl_ocl_interop_stream_cr": [281, 307], "dnnl_ocl_interop_stream_get_command_queu": [281, 307], "dnnl_ocl_interop_primitive_execut": [281, 307], "dep": [281, 307, 323, 339, 343, 350, 351, 352, 353], "ndep": [281, 307, 339], "return_ev": [281, 307, 323, 339], "dnnl_sycl_interop_engine_cr": [281, 323], "dnnl_sycl_interop_engine_get_context": [281, 323], "dnnl_sycl_interop_engine_get_devic": [281, 323], "dnnl_sycl_interop_memory_cr": [281, 323], "dnnl_sycl_interop_memory_create_v2": [281, 323], "dnnl_sycl_interop_memory_get_memory_kind": [281, 323], "dnnl_sycl_interop_memory_set_buff": [281, 323], "dnnl_sycl_interop_stream_cr": [281, 323], "dnnl_sycl_interop_stream_get_queu": [281, 323], "dnnl_sycl_interop_primitive_execut": [281, 323], "dnnl_threadpool_interop_stream_cr": [281, 324], "dnnl_threadpool_interop_stream_get_threadpool": [281, 324], "dnnl_threadpool_interop_set_max_concurr": [281, 324], "max_concurr": [281, 324], "dnnl_threadpool_interop_get_max_concurr": [281, 324], "dnnl_threadpool_interop_sgemm": [281, 324], "dnnl_threadpool_interop_gemm_u8s8s32": [281, 324], "dnnl_threadpool_interop_gemm_s8s8s32": [281, 324], "dnnl_engine_get_count": [281, 298], "dnnl_engine_get_kind": [281, 298], "dnnl_stream_get_engin": [281, 321], "dnnl_get_default_fpmath_mod": [281, 299], "dnnl_graph_allocator_cr": [281, 331], "dnnl_graph_allocator_destroi": [281, 331], "dnnl_graph_make_engine_with_alloc": [281, 335], "dnnl_graph_logical_tensor_init": [281, 338], "dnnl_graph_logical_tensor_init_with_dim": [281, 338], "dnnl_graph_logical_tensor_init_with_strid": [281, 338], "dnnl_graph_logical_tensor_get_mem_s": [281, 338], "dnnl_graph_logical_tensor_is_equ": [281, 338], "lt1": [281, 338], "lt2": [281, 338], "dnnl_graph_tensor_cr": [281, 344], "dnnl_graph_tensor_destroi": [281, 344], "dnnl_graph_tensor_get_data_handl": [281, 344], "dnnl_graph_tensor_set_data_handl": [281, 344], "dnnl_graph_tensor_get_engin": [281, 344], "dnnl_graph_tensor_get_logical_tensor": [281, 344], "dnnl_graph_op_cr": [281, 340], "dnnl_graph_op_destroi": [281, 340], "dnnl_graph_op_add_input": [281, 340], "dnnl_graph_op_add_output": [281, 340], "dnnl_graph_op_set_attr_f32": [281, 340], "value_len": [281, 340], "dnnl_graph_op_set_attr_bool": [281, 340], "dnnl_graph_op_set_attr_s64": [281, 340], "dnnl_graph_op_set_attr_str": [281, 340], "dnnl_graph_op_get_id": [281, 340], "dnnl_graph_op_get_kind": [281, 340], "dnnl_graph_partition_create_with_op": [281, 341], "dnnl_graph_partition_destroi": [281, 336, 341], "dnnl_graph_partition_get_op_num": [281, 341], "num": [281, 336, 341], "dnnl_graph_partition_get_op": [281, 341], "dnnl_graph_partition_get_id": [281, 341], "dnnl_graph_partition_compil": [281, 341], "in_num": [281, 341], "out_num": [281, 341], "dnnl_graph_partition_get_input_ports_num": [281, 341], "dnnl_graph_partition_get_input_port": [281, 341], "dnnl_graph_partition_get_output_ports_num": [281, 341], "dnnl_graph_partition_get_output_port": [281, 341], "dnnl_graph_partition_is_support": [281, 341], "dnnl_graph_partition_get_engine_kind": [281, 341], "dnnl_graph_compiled_partition_cr": [281, 332], "dnnl_graph_compiled_partition_execut": [281, 332], "num_input": [281, 332, 339, 343], "num_output": [281, 332, 339, 343], "dnnl_graph_compiled_partition_destroi": [281, 332], "dnnl_graph_compiled_partition_query_logical_tensor": [281, 332], "dnnl_graph_compiled_partition_get_inplace_port": [281, 332], "num_inplace_pair": [281, 332], "inplace_pair": [281, 332], "dnnl_graph_graph_cr": [281, 336], "dnnl_graph_graph_create_with_fpmath_mod": [281, 336], "dnnl_graph_graph_destroi": [281, 336], "dnnl_graph_graph_set_fpmath_mod": [281, 336], "dnnl_graph_graph_get_fpmath_mod": [281, 336], "dnnl_graph_add_op": [281, 336], "dnnl_graph_graph_fin": [281, 336], "dnnl_graph_graph_is_fin": [281, 336], "dnnl_graph_graph_filt": [281, 336], "dnnl_graph_graph_get_partition_num": [281, 336], "dnnl_graph_graph_get_partit": [281, 336], "dnnl_graph_get_compiled_partition_cache_capac": [281, 333], "dnnl_graph_set_compiled_partition_cache_capac": [281, 333], "dnnl_graph_set_constant_tensor_cach": [281, 334], "dnnl_graph_get_constant_tensor_cach": [281, 334], "eng_kind": [281, 334], "dnnl_graph_ocl_interop_allocator_cr": [281, 339], "ocl_malloc": [281, 339, 350], "dnnl_graph_ocl_interop_make_engine_with_alloc": [281, 339], "dnnl_graph_ocl_interop_make_engine_from_cache_blob_with_alloc": [281, 339], "dnnl_graph_ocl_interop_compiled_partition_execut": [281, 339], "dnnl_graph_sycl_interop_allocator_cr": [281, 343], "sycl_malloc": [281, 343, 351], "sycl_fre": [281, 343, 351], "dnnl_graph_sycl_interop_make_engine_with_alloc": [281, 343], "dnnl_graph_sycl_interop_compiled_partition_execut": [281, 343], "sycl_ev": [281, 343], "dnnl_ukernel_attr_params_cr": [281, 325], "dnnl_ukernel_attr_params_set_post_ops_arg": [281, 325], "post_ops_arg": [281, 325, 566], "dnnl_ukernel_attr_params_set_a_scal": [281, 325], "a_scal": [281, 325, 566], "dnnl_ukernel_attr_params_set_b_scal": [281, 325], "b_scale": [281, 325, 566], "dnnl_ukernel_attr_params_set_d_scal": [281, 325], "d_scale": [281, 325, 566], "dnnl_ukernel_attr_params_destroi": [281, 325], "dnnl_brgemm_creat": [281, 326], "dnnl_brgemm_set_add_c": [281, 326], "add_c": [281, 326, 567], "dnnl_brgemm_set_post_op": [281, 326], "dnnl_brgemm_set_a_scal": [281, 326], "a_scale_mask": [281, 326, 567], "dnnl_brgemm_set_b_scal": [281, 325, 326], "b_scale_mask": [281, 326, 567], "dnnl_brgemm_set_d_scal": [281, 326], "d_scale_mask": [281, 326, 567], "dnnl_brgemm_fin": [281, 326], "dnnl_brgemm_get_b_pack_typ": [281, 326], "dt_a": [281, 326], "dt_b": [281, 326], "dnnl_brgemm_get_scratchpad_s": [281, 326], "dnnl_brgemm_is_execute_postops_valid": [281, 326], "dnnl_brgemm_set_hw_context": [281, 326], "dnnl_brgemm_release_hw_context": [281, 326], "dnnl_brgemm_gener": [281, 326], "dnnl_brgemm_execut": [281, 326], "dnnl_brgemm_execute_postop": [281, 326], "d_ptr": [281, 326], "dnnl_brgemm_destroi": [281, 326], "dnnl_transform_cr": [281, 326], "dnnl_transform_gener": [281, 326], "dnnl_transform_execut": [281, 326], "in_ptr": [281, 326], "out_ptr": [281, 326], "dnnl_transform_destroi": [281, 326], "complain_dnnl_error_and_exit": 281, "complain_fmt": 281, "dnnl_arg_attr_multiple_post_op_bas": [281, 312], "dnnl_arg_attr_output_scal": [281, 312], "dnnl_arg_diff_augru_attent": [281, 312], "dnnl_arg_diff_dst_0": [281, 312], "dnnl_arg_diff_dst_1": [281, 312], "dnnl_arg_diff_dst_2": [281, 312], "dnnl_arg_diff_src_0": [281, 312], "dnnl_arg_diff_src_2": [281, 312], "dnnl_arg_diff_src_3": [281, 312], "dnnl_arg_diff_weights_0": [281, 312], "dnnl_arg_diff_weights_1": [281, 312], "dnnl_arg_diff_weights_2": [281, 312], "dnnl_arg_diff_weights_3": [281, 312], "dnnl_arg_dst_0": [281, 312], "dnnl_arg_dst_1": [281, 312], "dnnl_arg_dst_2": [281, 312], "dnnl_arg_multiple_dst": [281, 312], "dnnl_arg_reduc": [281, 312], "dnnl_arg_src_3": [281, 312], "dnnl_arg_undef": [281, 312], "dnnl_arg_weights_0": [281, 312], "dnnl_arg_weights_1": [281, 312], "dnnl_arg_weights_2": [281, 312], "dnnl_arg_weights_3": [281, 312], "dnnl_enable_except": 281, "dnnl_jit_profile_linux_jitdump": [281, 318], "dnnl_jit_profile_linux_jitdump_use_tsc": [281, 318], "dnnl_jit_profile_linux_perf": [281, 318], "dnnl_jit_profile_linux_perfmap": [281, 318], "dnnl_jit_profile_non": [281, 318], "dnnl_jit_profile_vtun": [281, 318], "dnnl_runtime_f32_v": [281, 306, 386], "dnnl_runtime_s32_v": [281, 306], "dnnl_runtime_size_v": [281, 306], "dnnl_throw_error": 281, "pragma_macro": 281, "type_cas": 281, "bracket": 283, "superscript": 283, "repetit": 283, "subscript": 283, "in1": 283, "proceed": 283, "unari": [283, 473, 475], "gqa": 283, "perceptron": 283, "resnext": 283, "ssd": 283, "adversari": 283, "dlrm": 283, "densenet": 283, "t2": 283, "smoothquant": 283, "bla": [286, 324, 354, 563], "convert_to_c": [287, 288, 298, 299, 312, 317, 348, 352, 353, 522], "aalgorithm": [288, 348, 457, 462, 464, 466, 468, 470, 472, 474, 476, 512, 514, 526, 528, 530, 543, 547, 549, 556, 558], "dnnl_": 288, "_primitive_desc_cr": 288, "as_data_typ": [288, 530], "output_height": [288, 530], "output_height_1x1_convolut": [288, 530], "output_width": [288, 530], "output_width_1x1_convolut": [288, 530], "dev_guide_attributes_post_ops_depthwis": [288, 530], "dev_guide_attributes_post_ops_depthwise_fus": [288, 312, 530], "another_input": [288, 530], "sic": [288, 538], "slc": [288, 538], "dic": [288, 538], "dlc": [288, 538], "rnn_attr": 288, "rnn_pd": 288, "nativ": [288, 538], "five": [288, 538], "weights_lay": [288, 538], "weights_iter": [288, 538], "violat": [288, 538], "batch_normalization_backward": [289, 348, 536], "ternari": [290, 457], "algebra": 291, "gemm_u8s8s32": [291, 348, 354], "gemm_s8s8s32": [291, 348, 354], "mxk": [291, 324, 354], "kxn": [291, 324, 354], "mxn": [291, 324, 354], "xerbla": [291, 324, 354], "a_offset": [291, 324, 354], "b_offset": [291, 324, 354], "c_offset": [291, 324, 354], "convolution_backward_data": [294, 348, 536], "deconvolution_backward_data": [296, 348, 536], "deconvolution_backward_weight": [296, 348, 536], "use_dst_for_bwd": [297, 474], "group_normalization_backward": [300, 348, 536], "inner_product_backward_data": [301, 348, 536], "inner_product_backward_weight": [301, 348, 536], "layer_normalization_backward": [303, 348, 536], "stat": 303, "manipul": 306, "discourag": 306, "inequ": [306, 491, 524], "set_buff": [306, 353], "ordinari": 306, "ill": 306, "never": [306, 318], "retriev": [306, 307, 312], "newli": 306, "encompass": [306, 524], "join": [306, 524], "in_md": [306, 524], "out_md": 306, "expect_out_md": [306, 524], "in_dim": 306, "out_dim": 306, "in_tag": 306, "out_tag": 306, "lie": 306, "oihw_4i16o4i": 306, "oihw_4i16o4i_": 306, "4i16o4i": 306, "had": [306, 323, 352, 353, 419, 522], "unmap": [306, 522], "mainli": [306, 522], "made": [306, 522], "prelu_backward": [309, 348, 536], "get_primitive_cache_capac": [310, 348], "set_primitive_cache_capac": [310, 348], "held": [310, 333], "excess": [310, 333], "aqueri": [312, 348], "32bit": 312, "qualifi": 312, "dev_guide_attributes_post_ops_binary_fus": 312, "deprec": [312, 334], "mnemon": 312, "peephol": [312, 317, 516, 518, 550], "reserv": 312, "norm_lp": 314, "resampling_backward": [316, 348, 536], "resampling": 316, "rnn_flag": [317, 348], "rnn_primitive_desc_bas": [317, 348, 449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 540, 570, 572], "lbr": [317, 503, 504, 505, 506, 507, 508, 509, 510], "aid": 318, "version_t": [318, 348], "cpu_isa": [318, 348], "cpu_isa_hint": [318, 348], "set_verbos": [318, 348], "get_default_fpmath_mod": [318, 348], "set_jit_dump": [318, 348], "set_jit_profiling_flag": [318, 348], "set_jit_profiling_jitdumpdir": [318, 348], "dnnl_jit_dump": 318, "dnnl_jit_profil": 318, "vtune": [318, 359, 412], "pid": 318, "perf": 318, "mkdtemp": 318, "xxxxxx": 318, "home": 318, "revert": 318, "invok": 318, "dnnl_max_cpu_isa": 318, "dnnl_cpu_isa": 318, "reflect": 318, "dnnl_cpu_isa_hint": 318, "shuffle_backward": [319, 348, 536], "softmax_backward": [320, 348, 536], "threapdool_ifac": [324, 354], "threadloc": 324, "dnnl_brgemm_no_tran": 326, "trait": [329, 348, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572], "handle_trait": [329, 348, 491], "acquir": 331, "input_id": [332, 481], "get_compiled_partition_cache_capac": [333, 349], "set_compiled_partition_cache_capac": [333, 349], "set_constant_tensor_cach": [334, 349], "get_constant_tensor_cach": [334, 349], "set_constant_tensor_cache_capac": [334, 349], "get_constant_tensor_cache_capac": [334, 349], "supplement": [335, 339, 343], "meta": 338, "enrich": 338, "progress": 338, "toward": 338, "60": 338, "layout_id": [338, 482], "openpow": 346, "ppc64": 346, "practition": 346, "c_partit": [350, 351], "beforehand": 350, "adevic": [351, 353], "acontext": [351, 353], "amemori": [352, 353], "set_mem_object": 352, "aprimit": [352, 353], "query_md": [352, 353, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 536, 540, 541, 543, 544, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "aqueu": 353, "abuff": 353, "get_threadpool": 354, "cnn_inference_int8": [359, 370], "cnn_training_bf16": 359, "cnn_training_f32": 359, "cpu_cnn_training_f32": 359, "cpu_matmul_csr": 359, "cpu_matmul_coo": 359, "cpu_matmul_quant": 359, "cpu_matmul_weights_compress": 359, "cpu_rnn_inference_f32": [359, 384], "cpu_rnn_inference_int8": [359, 385], "cpu_sgemm_and_matmul": 359, "gpu_opencl_interop": [359, 395], "memory_format_propag": 359, "rnn_training_f32": 359, "sycl_interop_buff": [359, 438], "untitl": 359, "legal": 359, "trademark": 359, "awai": [366, 368, 369, 396, 398, 399, 400, 401], "detriment": [368, 369], "realist": 370, "_x": 381, "research": 381, "max_": 381, "min_": 381, "earli": 381, "obviou": 381, "disadvantag": 381, "wors": 381, "inevit": 381, "unidirectin": [384, 385], "charact": [384, 385], "facil": [389, 394, 395, 438], "resid": [389, 394, 395, 396, 397, 398, 399, 400, 401, 438], "thank": [389, 394], "lightweight": [389, 394], "compris": 394, "singleton": 394, "ten": 394, "educ": 394, "aliv": 394, "_d": 394, "relu_d": 394, "human": [394, 438], "encourag": 394, "experi": 394, "familiar": 394, "spoil": 394, "oop": 394, "forgot": 394, "liter": 395, "get_ocl_mem_object": 395, "realiz": [395, 438], "heavier": [395, 438], "serv": 395, "submiss": 395, "cpu_getting_start": 396, "till": [396, 399, 400], "mayb": [396, 397, 399, 400], "unfin": [396, 399, 400], "cpu_inference_int8": 397, "cpu_single_op_partit": 398, "quickli": [398, 401], "gpu_opencl_getting_start": 399, "dnnl_graph_ocl": 399, "sycl_getting_start": 400, "sycl_single_op_partit": 401, "logo": 412, "openvino": 412, "pentium": 412, "subsidiari": 412, "brand": 412, "countri": 412, "khrono": 412, "central": 419, "understood": 419, "reader": 419, "bother": 419, "idiomat": 419, "realli": 419, "ver": 419, "1x128x14x14": 419, "326904": 419, "256x128x3x3": 419, "244141": 419, "bia_undef": [419, 420], "mb1_ic128oc256_ih14oh14kh3sh1dh0ph1_iw14ow14kw3sw1dw0pw1": 419, "20312": 419, "ws_undef": 419, "mb1ic256_ih14oh14kh3sh1ph1_iw14ow14kw3sw1pw1": 419, "187012": 419, "1x256x14x14": 419, "0419922": 419, "knowledg": 420, "ex": 420, "user_": 420, "meant": 420, "enter": 420, "easili": 420, "launch": 420, "shell": 420, "tell": 420, "38": 420, "mb128_ic3oc96_ih227oh55kh11sh4dh0ph0_iw227ow55kw11sw4dw0pw0": 420, "314": 420, "data_f32": 420, "diff_undef": 420, "128x96x55x55": 420, "87695": 420, "reoder": 420, "conv_dst1": 420, "pai": 420, "penalti": 420, "96x3x11x11": 420, "0310059": 420, "3101": 420, "66895": 420, "80396": 420, "closer": 420, "0148926": 420, "968": 420, "66797": 420, "kmp_affin": 420, "platinum": 420, "8180": 420, "50ghz": 420, "numa": 420, "ram": 420, "ddr4": 420, "gb": 420, "catalogu": 444, "weak": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572], "allow_empti": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572], "get_primitive_desc": [448, 450, 452, 454, 456, 459, 461, 463, 465, 467, 469, 471, 473, 475, 483, 485, 487, 489, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 525, 527, 531, 533, 536, 542, 544, 546, 548, 551, 553, 555, 557, 561, 569, 571], "get_kind": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 569, 570, 571, 572], "default_attr": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 543, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "get_cell_kind": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_prop_kind": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_direct": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_dil": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_padding_l": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_padding_r": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_epsilon": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_algorithm": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_alpha": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_beta": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_axi": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_local_s": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_k": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_p": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_factor": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_activation_kind": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_kernel": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_group_s": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "get_primitive_attr": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 541, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "next_impl": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 543, 545, 547, 549, 550, 552, 554, 556, 558, 562, 570, 572], "augru_attention_desc": [449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "diff_augru_attention_desc": [449, 451, 488, 490, 504, 506, 508, 510, 516, 518, 550, 570, 572], "signifi": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 524, 526, 528, 532, 534, 543, 545, 547, 549, 552, 554, 556, 558, 562, 567, 568, 570, 572], "src0": 457, "src2": 457, "caller": [460, 540, 545, 562], "prim_kind": [460, 540, 545, 562], "prop_kind1": [460, 540, 545, 562], "prop_kind2": [460, 540, 545, 562], "get_count": 478, "uniniti": [478, 491, 522, 536, 560], "thrown": [478, 491, 522, 536, 560], "wrap_c_api": 479, "output_id": 481, "union": 482, "descend": [491, 536, 540, 541, 550], "weak_ptr": 491, "dummi": 491, "destructor": 492, "validate_dim": 522, "min_siz": 522, "adata_typ": [522, 524], "map_data": 522, "unmap_data": 522, "absenc": [522, 524], "aformat_tag": 524, "permute_ax": 524, "get_ndim": 524, "get_padded_offset": 524, "get_submemory_offset": 524, "get_nnz": 524, "get_sparse_encod": 524, "get_format_kind": 524, "is_zero": 524, "index_dt": 524, "pointer_dt": 524, "new_desc": 524, "involv": 524, "get_params_sum": 530, "get_params_eltwis": 530, "get_params_dw": 530, "get_params_prelu": 530, "zeropoint": 530, "oc_dim": 530, "mb_dim": 530, "channel_dim": 530, "height_dim": 530, "prelu_weight": 530, "weight_desc": [532, 534], "c_pd": 536, "mask_desc": 538, "get_accumulation_mod": 538, "set_accumulation_mod": 538, "get_determinist": 538, "get_rounding_mod": 538, "set_rounding_mod": 538, "get_post_op": 538, "get_rnn_data_qparam": 538, "get_rnn_weights_qparam": 538, "set_rnn_weights_projection_qparam": 538, "get_rnn_weights_projection_qparam": 538, "rnn_d": 538, "get_src_engin": 545, "get_dst_engin": 545, "aflag": 560, "constexpr": 563, "virtual": 563, "subclass": 563, "closur": 563, "set_a_scal": [566, 567], "set_d_scal": [566, 567], "default_post_op": 567, "default_attr_param": 567, "cpu_runtim": 573, "gpu_runtim": 573, "absent": 573, "q_head_num": [576, 578], "kv_head_num": 576, "head_siz": [576, 578, 579], "gr": 577, "head_num": 579, "query_num": 579, "ctx_": 580}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"advanc": 0, "topic": 0, "build": [1, 23, 24, 27, 30, 31, 36, 38, 146, 147, 158, 163, 396, 397, 398, 399, 400, 401], "link": [1, 52], "class": [2, 3, 4, 5, 6, 7, 8, 9], "dnnl": [2, 3, 4, 5, 6, 7, 8, 167, 170, 171, 172, 176, 180, 183, 184, 185, 186, 188, 190, 192, 194, 195, 196, 197, 198, 200, 203, 205, 207, 209, 211, 213, 215, 217, 220, 222, 224, 226, 348, 349, 350, 351, 352, 353, 354, 355, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572], "graph": [2, 3, 4, 5, 6, 7, 8, 19, 24, 37, 38, 183, 184, 185, 186, 188, 190, 192, 282, 330, 336, 349, 350, 351, 396, 397, 398, 399, 400, 401], "alloc": [2, 331, 419], "overview": [2, 3, 4, 5, 6, 7, 8, 33, 39, 40, 42, 43, 141, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 281, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 350, 351, 352, 353, 354, 356, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573], "detail": [2, 3, 4, 5, 6, 7, 8, 20, 22, 26, 29, 34, 36, 44, 48, 51, 53, 54, 144, 145, 148, 149, 150, 151, 153, 154, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 281, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 350, 351, 352, 353, 354, 356, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573], "document": [2, 3, 4, 5, 6, 7, 8, 23, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 281, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 350, 351, 352, 353, 354, 356, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573], "construct": [2, 3, 4, 5, 6, 7, 8, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 567, 568, 569, 570, 571, 572], "compiled_partit": 3, "method": [3, 4, 5, 6, 7, 8, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 479, 484, 486, 488, 490, 491, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 540, 541, 543, 544, 545, 547, 549, 550, 552, 554, 556, 558, 560, 562, 563, 566, 567, 568, 570, 572], "logical_tensor": [5, 183, 184, 185], "typedef": [5, 288, 295, 298, 306, 312, 318, 321, 325, 326, 331, 332, 336, 339, 340, 341, 343, 344, 522], "op": [6, 15, 20, 22, 26, 29, 34, 37, 44, 48, 51, 53, 54, 144, 148, 149, 150, 151, 152, 153, 154, 186, 188, 340, 366, 398, 401], "partit": [7, 37, 190, 332, 333, 341, 396, 397, 398, 399, 400, 401], "tensor": [8, 27, 28, 37, 334, 338, 344], "simple_memory_pool_t": 9, "primit": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 36, 54, 143, 146, 147, 163, 164, 203, 310, 311, 360, 362, 364, 373, 375, 379, 380, 383, 389, 390, 392, 394, 395, 402, 406, 408, 410, 413, 415, 417, 419, 421, 423, 425, 427, 429, 432, 434, 436, 438, 440, 536, 581], "attribut": [10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 26, 29, 34, 44, 47, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 148, 149, 150, 151, 152, 153, 154, 160, 161, 288], "usag": [10, 143], "support": [10, 15, 20, 22, 26, 34, 44, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 148, 149, 151, 153, 154, 157, 285, 581], "relat": [10, 143, 164], "error": [10, 479], "handl": [10, 32, 33, 141, 491], "accumul": [11, 153, 287], "mode": [11, 14, 17, 32, 43, 153, 163, 287, 299], "determinist": 12, "dropout": 13, "introduct": [13, 16, 19, 37, 47, 157, 159, 162, 419], "implement": [13, 20, 22, 26, 29, 34, 39, 40, 42, 43, 44, 48, 51, 53, 54, 144, 145, 148, 149, 150, 151, 152, 153, 154, 160, 161, 163, 420], "api": [13, 16, 25, 27, 36, 143, 286, 292, 302, 307, 323, 324, 330, 337, 339, 343, 395, 396, 397, 399, 400, 438], "float": [14, 39, 42, 43, 283, 299], "point": [14, 39, 42, 43, 283, 299], "math": [14, 43, 299], "The": 14, "enforc": 14, "an": 14, "integr": 14, "A": 14, "note": [14, 20, 22, 25, 26, 29, 34, 44, 48, 51, 53, 54, 144, 145, 148, 149, 150, 153, 154], "default": 14, "post": [15, 20, 22, 26, 29, 34, 44, 48, 51, 53, 54, 144, 148, 149, 150, 151, 152, 153, 154, 366], "eltwis": [15, 34, 253, 297], "sum": [15, 154, 275, 322, 436, 561, 562], "depthwis": 15, "binari": [15, 22, 229, 290, 364, 366, 456, 457], "prelu": [15, 108, 145, 268, 309], "exampl": [15, 16, 18, 20, 22, 26, 29, 34, 35, 39, 40, 42, 44, 47, 48, 49, 51, 53, 54, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 163, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 383, 384, 385, 390, 392, 397, 402, 406, 408, 410, 413, 415, 417, 420, 421, 423, 425, 427, 429, 431, 432, 434, 436, 440], "chain": 15, "relu": [15, 119, 389, 394], "tanh": [15, 137], "scaleshift": 15, "quantiz": [16, 47, 110, 283, 381], "model": [16, 284, 445], "numer": [16, 32], "behavior": [16, 32], "convolut": [16, 29, 68, 237, 294, 375, 397, 419], "workflow": [16, 47, 157], "per": 16, "channel": [16, 162], "scale": [16, 20, 42, 44, 47, 51], "argument": [16, 20, 22, 26, 29, 34, 44, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 148, 149, 150, 151, 152, 153, 154], "1": [16, 29, 50], "weight": [16, 442], "output": [16, 28, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 163], "2": [16, 29, 50], "round": [17, 32, 122], "scratchpad": 18, "memori": [18, 19, 28, 33, 141, 143, 146, 159, 162, 164, 194, 195, 196, 197, 306, 389, 394, 395, 419, 438, 522, 524], "engin": [18, 19, 143, 164, 176, 298, 335, 388, 389, 394, 395, 438, 478], "librari": [18, 23, 24, 32, 52, 346], "manag": [18, 146], "user": 18, "basic": [19, 37, 159], "concept": [19, 37, 159], "stream": [19, 222, 321, 389, 394, 395, 438, 560], "object": [19, 33, 141, 389, 394, 395, 419, 438], "level": 19, "abstract": 19, "creat": [19, 389, 394, 395, 419, 438], "extens": [19, 282, 395, 399, 400, 438], "micro": 19, "kernel": [19, 395, 438], "batch": [20, 160, 289, 362], "normal": [20, 44, 51, 53, 289, 300, 303, 362, 402, 408, 413], "gener": [20, 22, 26, 29, 32, 34, 44, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162], "forward": [20, 29, 34, 44, 46, 48, 51, 53, 144, 145, 150, 152, 153], "differ": [20, 29, 34, 44, 46, 48, 51, 144, 145, 150, 152, 153], "between": [20, 29, 34, 44, 46, 48, 51, 144, 145, 150, 152, 153, 388, 389], "train": [20, 29, 32, 34, 44, 46, 48, 51, 144, 145, 150, 151, 152, 153, 156, 157, 283, 371, 372, 378, 431], "infer": [20, 29, 32, 34, 44, 45, 46, 47, 48, 51, 144, 145, 150, 152, 153, 283, 368, 369, 370, 384, 385, 397, 404], "backward": [20, 29, 34, 44, 46, 48, 51, 53, 144, 145, 150, 152, 153], "execut": [20, 22, 26, 29, 34, 44, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 389, 394, 395, 396, 397, 398, 399, 400, 401, 419, 438], "data": [20, 22, 26, 29, 32, 34, 39, 40, 42, 43, 44, 47, 48, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 295, 389, 394, 395, 419, 438], "type": [20, 22, 26, 29, 32, 34, 39, 40, 42, 43, 44, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 148, 149, 150, 151, 152, 153, 154, 160, 161, 295], "represent": [20, 22, 26, 29, 34, 44, 48, 51, 53, 54, 144, 145, 148, 149, 151, 153, 154, 159, 160, 161], "mean": [20, 44, 51], "varianc": [20, 44, 51], "shift": [20, 44, 51], "sourc": [20, 22, 23, 44, 51, 53, 144, 148, 153, 154, 158, 419], "destin": [20, 22, 44, 51, 53, 144, 148, 153, 154, 419], "Their": [20, 44, 51, 53, 144, 153], "gradient": [20, 44, 51, 53, 144, 153], "limit": [20, 22, 24, 26, 29, 32, 34, 36, 39, 40, 42, 43, 44, 48, 51, 53, 54, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 160, 161], "perform": [20, 21, 22, 26, 29, 34, 44, 48, 51, 53, 54, 144, 145, 147, 148, 149, 150, 152, 153, 154, 419, 420, 444], "tip": [20, 22, 26, 29, 34, 44, 48, 51, 53, 54, 144, 145, 148, 149, 150, 152, 153, 154], "benchmark": [21, 142], "from": [23, 158, 389], "download": 23, "code": [23, 49, 158, 394], "linux": [23, 52, 147], "maco": [23, 52], "gcc": 23, "clang": 23, "intel": [23, 32, 50, 158], "oneapi": [23, 346, 356], "dpc": [23, 33, 347], "c": [23, 231, 239, 250], "compil": [23, 24, 37, 332, 333, 396, 397, 398, 399, 400, 401], "sycl": [23, 33, 323, 343, 358, 400, 438], "runtim": [23, 24, 30, 52, 142, 302, 337], "target": [23, 24], "aarch64": [23, 24], "x64": 23, "host": [23, 24], "arm": [23, 24], "comput": [23, 24, 50], "acl": 23, "window": [23, 52], "microsoft": 23, "visual": 23, "valid": [23, 25, 389, 394, 395, 438], "instal": 23, "option": 24, "common": [24, 36, 292, 312], "configur": [24, 142, 420], "function": [24, 151, 281, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 350, 351, 352, 353, 354, 389, 394, 395, 396, 397, 398, 399, 400, 401, 419, 438], "onednn_enable_workload": 24, "onednn_enable_primit": 24, "onednn_enable_primitive_cpu_isa": 24, "onednn_enable_primitive_gpu_isa": 24, "onednn_enable_gemm_kernels_isa": 24, "test": 24, "onednn_test_set": 24, "cpu": [24, 30, 31, 49, 50, 142, 388, 389, 396, 398, 438], "specif": [24, 28, 46], "architectur": [24, 32], "openmp": 24, "thread": [24, 142, 155], "block": [24, 162, 420], "tbb": 24, "threadpool": [24, 155, 324], "vendor": 24, "bla": [24, 291], "gpu": [24, 49, 50, 388, 389, 395, 401, 438], "opencl": [24, 141, 307, 339, 347, 395, 399], "compon": 24, "input": [25, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "concat": [26, 67, 236, 293, 373, 459, 460], "constant": [27, 334], "cach": [27, 143, 146, 310, 333, 334], "time": [27, 30, 31, 36, 38, 146, 147, 163], "control": [27, 30, 31, 36, 38, 146, 147, 163], "run": [27, 31, 38, 146, 147, 163], "capac": 27, "environ": 27, "variabl": [27, 28], "name": 28, "convent": 28, "formula": 28, "verbos": [28, 163, 164], "rnn": [28, 151, 317, 360, 384, 385, 410, 415, 431, 440], "notat": 28, "format": [28, 162, 419, 420], "tag": [28, 147], "regular": [29, 68], "group": [29, 40, 44, 68, 300, 402], "dilat": [29, 68], "deconvolut": [29, 252, 296, 390], "transpos": 29, "3": 29, "algorithm": [29, 170], "direct": 29, "winograd": 29, "automat": 29, "select": [29, 123], "dispatch": [30, 163, 164], "isa": 31, "hint": 31, "onednn": [32, 52, 142, 147, 155, 158, 286, 346, 389, 394, 395, 438], "denorm": 32, "hardwar": 32, "r": 32, "processor": [32, 50], "graphic": 32, "xe": 32, "interoper": [33, 141, 302, 307, 323, 324, 337, 339, 343, 347], "buffer": [33, 141, 419], "usm": [33, 141], "interfac": [33, 141], "depend": [33, 141], "except": 34, "experiment": 36, "featur": [36, 147], "onednn_experimental_spars": 36, "matrix": [36, 54, 160, 305], "multipl": [36, 54, 160, 162, 305], "csr": 36, "encod": 36, "coo": 36, "pack": 36, "reorder": [36, 121, 149, 270, 315, 388, 389, 419, 427, 544, 545], "onednn_experimental_ukernel": 36, "onednn_experimental_profil": 36, "onednn_experimental_log": 36, "logic": [37, 338], "dump": 38, "gate": 39, "multi": 39, "layer": [39, 51, 303, 408], "perceptron": 39, "mlp": 39, "pattern": [39, 40, 42, 43, 283], "refer": [39, 40, 42, 43, 50, 346], "queri": [40, 209], "attent": [40, 42], "gqa": 40, "low": 41, "precis": 41, "int8": [41, 45, 47, 50, 370, 385, 397, 404], "bf16": [41, 371], "f16": 41, "dot": 42, "product": [42, 48, 301, 406], "sdpa": [42, 43], "compress": 43, "kei": 43, "valu": [43, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], "best": 45, "practic": 45, "fp32": [45, 156], "aspect": 46, "propag": [46, 419], "kind": [46, 176, 188, 203], "workspac": 46, "process": [47, 158], "rang": 47, "factor": 47, "inner": [48, 301, 406], "inspect": [49, 444], "jit": 49, "nuanc": 50, "mix": 50, "u8": [50, 366], "s8": 50, "avx2": 50, "avx": 50, "512": 50, "dl": 50, "boost": 50, "same": 50, "header": [52, 389, 394, 395, 396, 397, 398, 399, 400, 401, 438], "file": 52, "harden": 52, "local": [53, 413], "respons": [53, 413], "lrn": [53, 262, 304], "ab": 55, "oper": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 159, 164, 285], "absbackward": 56, "add": 57, "avgpool": 58, "avgpoolbackward": 59, "batchnormforwardtrain": 60, "batchnorminfer": 61, "batchnormtrainingbackward": 62, "biasadd": 63, "biasaddbackward": 64, "clamp": 65, "clampbackward": 66, "convolutionbackwarddata": 69, "convolutionbackwardweight": 70, "convtranspos": 71, "convtransposebackwarddata": 72, "convtransposebackwardweight": 73, "dequant": 74, "divid": 75, "dynamicdequant": 76, "dynamicquant": 77, "elu": 78, "elubackward": 79, "end": 80, "exp": 81, "gelu": 82, "gelubackward": 83, "genindex": 84, "greaterequ": 85, "groupnorm": 86, "hardsigmoid": 87, "hardsigmoidbackward": 88, "hardswish": 89, "hardswishbackward": 90, "interpol": 91, "interpolatebackward": 92, "layernorm": 93, "layernormbackward": 94, "leakyrelu": 95, "log": 96, "logsoftmax": 97, "logsoftmaxbackward": 98, "matmul": [99, 264, 379, 380, 381, 383, 386, 404, 417, 442, 519, 520], "maximum": 100, "maxpool": 101, "maxpoolbackward": 102, "minimum": 103, "mish": 104, "mishbackward": 105, "multipli": 106, "pow": 107, "broadcast": [108, 109, 123], "rule": [108, 109, 123], "prelubackward": 109, "reciproc": 111, "reducel1": 112, "reducel2": 113, "reducemax": 114, "reducemean": 115, "reducemin": 116, "reduceprod": 117, "reducesum": 118, "relubackward": 120, "sigmoid": 124, "sigmoidbackward": 125, "softmax": [126, 153, 274, 320, 434], "softmaxbackward": 127, "softplu": 128, "softplusbackward": 129, "sqrt": 130, "sqrtbackward": 131, "squar": 132, "squareddiffer": 133, "staticreshap": 134, "statictranspos": 135, "subtract": 136, "tanhbackward": 138, "typecast": 139, "wildcard": 140, "set": 142, "whole": 142, "machin": 142, "singl": [142, 398, 401], "numa": 142, "domain": 142, "sever": 142, "core": 142, "within": 142, "persist": 143, "descriptor": [143, 394], "pool": [144, 267, 308, 419, 421], "consumpt": 146, "profil": [146, 147, 163, 165, 313, 420, 444], "vtune": [147, 165], "itt": 147, "hotspot": 147, "microarchitectur": 147, "inform": [147, 158, 412], "perf": 147, "reduct": [148, 269, 314, 425, 542, 543], "resampl": [150, 271, 316, 429], "nearest": 150, "neighbor": 150, "bilinear": 150, "cell": 151, "vanilla": [151, 440], "lstm": [151, 263, 415], "peephol": 151, "project": 151, "lstmp": 151, "gru": [151, 410], "linear": [151, 410], "befor": [151, 410], "reset": [151, 410], "augru": [151, 227, 360], "consider": 151, "shuffl": [152, 273, 319, 432], "layout": [152, 162], "us": [155, 162], "base": 155, "bfp16": 156, "bfloat16": 157, "transit": 158, "mkl": 158, "dnn": 158, "summari": [158, 420], "chang": 158, "broken": 158, "compat": 158, "develop": [158, 346], "reduc": 160, "transform": [161, 327, 568], "understand": [162, 163], "nomenclatur": 162, "plain": 162, "nchw": 162, "nhwc": 162, "chwn": 162, "relev": 162, "read": 162, "stride": 162, "what": 162, "ar": 162, "8": 162, "16": 162, "troubleshoot": 163, "creation": [163, 164], "issu": 163, "workload": 163, "why": 163, "given": 163, "i": 163, "enabl": 163, "onednn_verbos": 163, "timestamp": 163, "decrypt": 163, "messag": 164, "catalogu": 164, "tm": 165, "enum": [166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], "api_kind": 166, "accumulation_mod": 167, "dnnl_accumulation_mode_t": 168, "dnnl_alg_kind_t": 169, "cpu_isa": 171, "cpu_isa_hint": 172, "dnnl_cpu_isa_hints_t": 173, "dnnl_cpu_isa_t": 174, "dnnl_data_type_t": 175, "dnnl_engine_kind_t": 177, "dnnl_format_kind_t": 178, "dnnl_format_tag_t": 179, "fpmath_mod": 180, "dnnl_fpmath_mode_t": 181, "dnnl_graph_layout_type_t": 182, "data_typ": [183, 194], "layout_typ": 184, "property_typ": 185, "attr": 186, "dnnl_graph_op_attr_t": 187, "dnnl_graph_op_kind_t": 189, "polici": 190, "dnnl_graph_partition_policy_t": 191, "statu": [192, 220, 342], "dnnl_graph_tensor_property_t": 193, "format_kind": 195, "format_tag": 196, "sparse_encod": 197, "normalization_flag": 198, "dnnl_normalization_flags_t": 199, "ocl_interop": [200, 350, 352], "memory_kind": [200, 224], "dnnl_ocl_interop_memory_kind_t": 201, "dnnl_pack_type_t": 202, "dnnl_primitive_kind_t": 204, "profiling_data_kind": 205, "dnnl_profiling_data_kind_t": 206, "prop_kind": 207, "dnnl_prop_kind_t": 208, "dnnl_query_t": 210, "rnn_direct": 211, "dnnl_rnn_direction_t": 212, "rnn_flag": 213, "dnnl_rnn_flags_t": 214, "rounding_mod": 215, "dnnl_rounding_mode_t": 216, "scratchpad_mod": 217, "dnnl_scratchpad_mode_t": 218, "dnnl_sparse_encoding_t": 219, "dnnl_status_t": 221, "flag": 222, "dnnl_stream_flags_t": 223, "sycl_interop": [224, 351, 353], "dnnl_sycl_interop_memory_kind_t": 225, "ukernel": [226, 325, 326, 327, 328, 355, 377, 566, 567, 568, 582], "pack_typ": 226, "cpp": [227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "batch_norm": 228, "bnorm_u8_via_binary_postop": 230, "cnn_inference_f32": [231, 232], "cnn_inference_int8": 233, "cnn_training_bf16": 234, "cnn_training_f32": 235, "cpu_brgemm": 238, "cpu_cnn_training_f32": 239, "cpu_getting_start": 240, "cpu_inference_int8": 241, "cpu_matmul_coo": 242, "cpu_matmul_csr": 243, "cpu_matmul_quant": 244, "cpu_matmul_weights_compress": 245, "cpu_rnn_inference_f32": 246, "cpu_rnn_inference_int8": 247, "cpu_sgemm_and_matmul": 248, "cpu_single_op_partit": 249, "cross_engine_reord": [250, 251], "getting_start": 254, "gpu_opencl_getting_start": 255, "gpu_opencl_interop": 256, "group_norm": 257, "inference_int8_matmul": 258, "inner_product": 259, "layer_norm": 260, "lbr_gru": 261, "memory_format_propag": [265, 419], "performance_profil": 266, "rnn_training_f32": 272, "sycl_getting_start": 276, "sycl_interop_buff": 277, "sycl_single_op_partit": 278, "vanilla_rnn": 279, "weights_decompression_matmul": 280, "global": [281, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 350, 351, 352, 353, 354], "namespac": [281, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "fusion": 283, "program": [284, 445], "macro": [295, 306, 312, 318, 338], "servic": 318, "brgemm": [326, 377, 567], "util": [328, 329, 345], "deep": 346, "neural": 346, "network": 346, "guid": 346, "threadpool_interop": [354, 563], "std": 357, "orphan": 359, "untitl": [361, 363, 365, 367, 374, 376, 382, 387, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437, 441, 443], "bnorm": 366, "cnn": [368, 369, 370, 371, 372, 378], "f32": [368, 369, 372, 378, 384, 431], "tutori": [381, 386, 404, 419, 442], "comparison": 386, "sgemm": 386, "public": [389, 394, 395, 396, 397, 398, 399, 400, 401, 438], "cross_engine_reorder_tutori": 389, "wrap": [389, 394, 395, 438], "get": [389, 394, 395, 396, 397, 398, 399, 400, 401, 438], "result": [389, 394, 395, 419, 438], "all": 389, "element": 392, "wise": 392, "start": [394, 395, 396, 399, 400, 438], "getting_started_tutori": 394, "prepar": 394, "outsid": 394, "altern": 394, "wai": 394, "obtain": 394, "main": [394, 438], "gpu_opencl_interop_tutori": 395, "initi": [395, 419, 438], "custom": [395, 438], "cpu_getting_started_tutori": 396, "simple_pattern_int8": 397, "cpu_single_op_partition_tutori": 398, "ocl_getting_started_tutori": 399, "sycl_getting_started_tutori": 400, "sycl_single_op_partition_tutori": 401, "legal": 412, "trademark": 412, "determin": 419, "need": 419, "intermedi": 419, "necessari": 419, "walkthrough": 420, "naiv": 420, "fuse": 420, "notic": 420, "both": 438, "sycl_interop_buffer_tutori": 438, "todo": 439, "list": 439, "decompress": 442, "struct": [446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580], "args_t": 446, "cpu_deletor_t": 447, "augru_backward": [448, 449], "inherit": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572], "member": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572], "primitive_desc": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 540, 543, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "augru_forward": [450, 451], "batch_normalization_backward": [452, 453], "batch_normalization_forward": [454, 455], "dnnl_brgemm": 458, "convolution_backward_data": [461, 462], "convolution_backward_weight": [463, 464], "convolution_forward": [465, 466], "deconvolution_backward_data": [467, 468], "deconvolution_backward_weight": [469, 470], "deconvolution_forward": [471, 472], "eltwise_backward": [473, 474], "eltwise_forward": [475, 476], "dnnl_engin": 477, "dnnl_exec_arg_t": 480, "field": [480, 481, 482, 563, 573], "dnnl_graph_inplace_pair_t": 481, "dnnl_graph_logical_tensor_t": 482, "group_normalization_backward": [483, 484], "group_normalization_forward": [485, 486], "gru_backward": [487, 488], "gru_forward": [489, 490], "templat": [491, 492], "handle_trait": 492, "inner_product_backward_data": [493, 494], "inner_product_backward_weight": [495, 496], "inner_product_forward": [497, 498], "layer_normalization_backward": [499, 500], "layer_normalization_forward": [501, 502], "lbr_augru_backward": [503, 504], "lbr_augru_forward": [505, 506], "lbr_gru_backward": [507, 508], "lbr_gru_forward": [509, 510], "lrn_backward": [511, 512], "lrn_forward": [513, 514], "lstm_backward": [515, 516], "lstm_forward": [517, 518], "dnnl_memori": 521, "dnnl_memory_desc": 523, "desc": 524, "pooling_backward": [525, 526], "pooling_forward": [527, 528], "dnnl_post_op": 529, "post_op": 530, "prelu_backward": [531, 532], "prelu_forward": [533, 534], "dnnl_primit": 535, "dnnl_primitive_attr": 537, "primitive_attr": 538, "dnnl_primitive_desc": 539, "primitive_desc_bas": 541, "resampling_backward": [546, 547], "resampling_forward": [548, 549], "rnn_primitive_desc_bas": 550, "shuffle_backward": [551, 552], "shuffle_forward": [553, 554], "softmax_backward": [555, 556], "softmax_forward": [557, 558], "dnnl_stream": 559, "threadpool_ifac": 563, "dnnl_transform": 564, "dnnl_ukernel_attr_param": 565, "attr_param": 566, "vanilla_rnn_backward": [569, 570], "vanilla_rnn_forward": [571, 572], "dnnl_version_t": 573, "example_allows_unimpl": 574, "gemm_dims_t": 575, "gqa_dims_t": 576, "mlp_dims_t": 577, "mqa_dims_t": 578, "sdpa_dims_t": 579, "sycl_deletor_t": 580}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Building and Linking": [[1, "building-and-linking"]], "Advanced Topics": [[0, "advanced-topics"]], "Primitive Attributes: dropout": [[13, "primitive-attributes-dropout"]], "Introduction": [[13, "introduction"], [19, "introduction"], [16, "introduction"], [37, "introduction"], [47, "introduction"], [157, "introduction"], [159, "introduction"], [162, "introduction"]], "Implementation": [[13, "implementation"]], "API": [[13, "api"], [16, "api"], [25, "api"], [36, "api"]], "Primitive Attributes: deterministic": [[12, "primitive-attributes-deterministic"]], "Primitive Attributes": [[10, "primitive-attributes"]], "Attributes Usage": [[10, "attributes-usage"]], "Supported Attributes": [[10, "supported-attributes"]], "Attribute Related Error Handling": [[10, "attribute-related-error-handling"]], "Primitive Attributes: accumulation mode": [[11, "primitive-attributes-accumulation-mode"]], "class dnnl::graph::allocator": [[2, "class-dnnl-graph-allocator"]], "Overview": [[2, "overview"], [3, "overview"], [8, "overview"], [39, "overview"], [40, "overview"], [42, "overview"], [43, "overview"], [33, "overview"], [7, "overview"], [6, "overview"], [4, "overview"], [5, "overview"], [141, "overview"], [167, "overview"], [169, "overview"], [168, "overview"], [170, "overview"], [171, "overview"], [172, "overview"], [173, "overview"], [174, "overview"], [175, "overview"], [176, "overview"], [177, "overview"], [178, "overview"], [179, "overview"], [181, "overview"], [180, "overview"], [183, "overview"], [182, "overview"], [185, "overview"], [184, "overview"], [186, "overview"], [187, "overview"], [190, "overview"], [191, "overview"], [192, "overview"], [193, "overview"], [195, "overview"], [194, "overview"], [197, "overview"], [196, "overview"], [199, "overview"], [198, "overview"], [200, "overview"], [201, "overview"], [202, "overview"], [203, "overview"], [204, "overview"], [205, "overview"], [207, "overview"], [206, "overview"], [209, "overview"], [208, "overview"], [210, "overview"], [211, "overview"], [212, "overview"], [213, "overview"], [215, "overview"], [214, "overview"], [216, "overview"], [217, "overview"], [219, "overview"], [218, "overview"], [221, "overview"], [220, "overview"], [223, "overview"], [222, "overview"], [224, "overview"], [225, "overview"], [226, "overview"], [281, "overview"], [287, "overview"], [289, "overview"], [288, "overview"], [290, "overview"], [291, "overview"], [293, "overview"], [295, "overview"], [294, "overview"], [297, "overview"], [296, "overview"], [298, "overview"], [299, "overview"], [300, "overview"], [301, "overview"], [303, "overview"], [304, "overview"], [305, "overview"], [306, "overview"], [307, "overview"], [308, "overview"], [309, "overview"], [311, "overview"], [310, "overview"], [313, "overview"], [312, "overview"], [314, "overview"], [315, "overview"], [316, "overview"], [317, "overview"], [318, "overview"], [319, "overview"], [320, "overview"], [321, "overview"], [322, "overview"], [323, "overview"], [325, "overview"], [324, "overview"], [326, "overview"], [331, "overview"], [332, "overview"], [333, "overview"], [334, "overview"], [335, "overview"], [336, "overview"], [339, "overview"], [338, "overview"], [340, "overview"], [341, "overview"], [343, "overview"], [344, "overview"], [351, "overview"], [350, "overview"], [353, "overview"], [352, "overview"], [354, "overview"], [356, "overview"], [449, "overview"], [448, "overview"], [451, "overview"], [450, "overview"], [453, "overview"], [452, "overview"], [455, "overview"], [454, "overview"], [457, "overview"], [456, "overview"], [459, "overview"], [461, "overview"], [460, "overview"], [462, "overview"], [463, "overview"], [465, "overview"], [464, "overview"], [466, "overview"], [467, "overview"], [469, "overview"], [468, "overview"], [471, "overview"], [470, "overview"], [473, "overview"], [472, "overview"], [474, "overview"], [475, "overview"], [476, "overview"], [479, "overview"], [478, "overview"], [481, "overview"], [480, "overview"], [483, "overview"], [482, "overview"], [485, "overview"], [484, "overview"], [487, "overview"], [486, "overview"], [488, "overview"], [489, "overview"], [490, "overview"], [491, "overview"], [493, "overview"], [495, "overview"], [494, "overview"], [496, "overview"], [497, "overview"], [498, "overview"], [499, "overview"], [501, "overview"], [500, "overview"], [503, "overview"], [502, "overview"], [505, "overview"], [504, "overview"], [506, "overview"], [507, "overview"], [508, "overview"], [509, "overview"], [510, "overview"], [511, "overview"], [512, "overview"], [513, "overview"], [514, "overview"], [515, "overview"], [516, "overview"], [517, "overview"], [519, "overview"], [518, "overview"], [520, "overview"], [522, "overview"], [525, "overview"], [524, "overview"], [526, "overview"], [527, "overview"], [528, "overview"], [529, "overview"], [530, "overview"], [531, "overview"], [533, "overview"], [532, "overview"], [534, "overview"], [536, "overview"], [537, "overview"], [538, "overview"], [541, "overview"], [540, "overview"], [542, "overview"], [543, "overview"], [545, "overview"], [544, "overview"], [546, "overview"], [547, "overview"], [549, "overview"], [548, "overview"], [551, "overview"], [550, "overview"], [553, "overview"], [552, "overview"], [554, "overview"], [555, "overview"], [556, "overview"], [557, "overview"], [558, "overview"], [560, "overview"], [561, "overview"], [562, "overview"], [563, "overview"], [567, "overview"], [566, "overview"], [568, "overview"], [569, "overview"], [571, "overview"], [570, "overview"], [572, "overview"], [573, "overview"]], "Detailed Documentation": [[2, "detailed-documentation"], [3, "detailed-documentation"], [8, "detailed-documentation"], [7, "detailed-documentation"], [6, "detailed-documentation"], [4, "detailed-documentation"], [5, "detailed-documentation"], [167, "detailed-documentation"], [169, "detailed-documentation"], [168, "detailed-documentation"], [170, "detailed-documentation"], [171, "detailed-documentation"], [172, "detailed-documentation"], [173, "detailed-documentation"], [174, "detailed-documentation"], [175, "detailed-documentation"], [176, "detailed-documentation"], [177, "detailed-documentation"], [178, "detailed-documentation"], [179, "detailed-documentation"], [181, "detailed-documentation"], [180, "detailed-documentation"], [183, "detailed-documentation"], [182, "detailed-documentation"], [185, "detailed-documentation"], [184, "detailed-documentation"], [186, "detailed-documentation"], [187, "detailed-documentation"], [190, "detailed-documentation"], [191, "detailed-documentation"], [192, "detailed-documentation"], [193, "detailed-documentation"], [195, "detailed-documentation"], [194, "detailed-documentation"], [197, "detailed-documentation"], [196, "detailed-documentation"], [199, "detailed-documentation"], [198, "detailed-documentation"], [200, "detailed-documentation"], [201, "detailed-documentation"], [202, "detailed-documentation"], [203, "detailed-documentation"], [204, "detailed-documentation"], [205, "detailed-documentation"], [207, "detailed-documentation"], [206, "detailed-documentation"], [209, "detailed-documentation"], [208, "detailed-documentation"], [210, "detailed-documentation"], [211, "detailed-documentation"], [212, "detailed-documentation"], [213, "detailed-documentation"], [215, "detailed-documentation"], [214, "detailed-documentation"], [216, "detailed-documentation"], [217, "detailed-documentation"], [219, "detailed-documentation"], [218, "detailed-documentation"], [221, "detailed-documentation"], [220, "detailed-documentation"], [223, "detailed-documentation"], [222, "detailed-documentation"], [224, "detailed-documentation"], [225, "detailed-documentation"], [226, "detailed-documentation"], [281, "detailed-documentation"], [287, "detailed-documentation"], [289, "detailed-documentation"], [288, "detailed-documentation"], [290, "detailed-documentation"], [291, "detailed-documentation"], [293, "detailed-documentation"], [295, "detailed-documentation"], [294, "detailed-documentation"], [297, "detailed-documentation"], [296, "detailed-documentation"], [298, "detailed-documentation"], [299, "detailed-documentation"], [300, "detailed-documentation"], [301, "detailed-documentation"], [303, "detailed-documentation"], [304, "detailed-documentation"], [305, "detailed-documentation"], [306, "detailed-documentation"], [307, "detailed-documentation"], [308, "detailed-documentation"], [309, "detailed-documentation"], [311, "detailed-documentation"], [310, "detailed-documentation"], [313, "detailed-documentation"], [312, "detailed-documentation"], [314, "detailed-documentation"], [315, "detailed-documentation"], [316, "detailed-documentation"], [317, "detailed-documentation"], [318, "detailed-documentation"], [319, "detailed-documentation"], [320, "detailed-documentation"], [321, "detailed-documentation"], [322, "detailed-documentation"], [323, "detailed-documentation"], [325, "detailed-documentation"], [324, "detailed-documentation"], [326, "detailed-documentation"], [331, "detailed-documentation"], [332, "detailed-documentation"], [333, "detailed-documentation"], [334, "detailed-documentation"], [335, "detailed-documentation"], [336, "detailed-documentation"], [339, "detailed-documentation"], [338, "detailed-documentation"], [340, "detailed-documentation"], [341, "detailed-documentation"], [343, "detailed-documentation"], [344, "detailed-documentation"], [351, "detailed-documentation"], [350, "detailed-documentation"], [353, "detailed-documentation"], [352, "detailed-documentation"], [354, "detailed-documentation"], [356, "detailed-documentation"], [449, "detailed-documentation"], [448, "detailed-documentation"], [451, "detailed-documentation"], [450, "detailed-documentation"], [453, "detailed-documentation"], [452, "detailed-documentation"], [455, "detailed-documentation"], [454, "detailed-documentation"], [457, "detailed-documentation"], [456, "detailed-documentation"], [459, "detailed-documentation"], [461, "detailed-documentation"], [460, "detailed-documentation"], [462, "detailed-documentation"], [463, "detailed-documentation"], [465, "detailed-documentation"], [464, "detailed-documentation"], [466, "detailed-documentation"], [467, "detailed-documentation"], [469, "detailed-documentation"], [468, "detailed-documentation"], [471, "detailed-documentation"], [470, "detailed-documentation"], [473, "detailed-documentation"], [472, "detailed-documentation"], [474, "detailed-documentation"], [475, "detailed-documentation"], [476, "detailed-documentation"], [479, "detailed-documentation"], [478, "detailed-documentation"], [481, "detailed-documentation"], [480, "detailed-documentation"], [483, "detailed-documentation"], [482, "detailed-documentation"], [485, "detailed-documentation"], [484, "detailed-documentation"], [487, "detailed-documentation"], [486, "detailed-documentation"], [488, "detailed-documentation"], [489, "detailed-documentation"], [490, "detailed-documentation"], [491, "detailed-documentation"], [493, "detailed-documentation"], [495, "detailed-documentation"], [494, "detailed-documentation"], [496, "detailed-documentation"], [497, "detailed-documentation"], [498, "detailed-documentation"], [499, "detailed-documentation"], [501, "detailed-documentation"], [500, "detailed-documentation"], [503, "detailed-documentation"], [502, "detailed-documentation"], [505, "detailed-documentation"], [504, "detailed-documentation"], [506, "detailed-documentation"], [507, "detailed-documentation"], [508, "detailed-documentation"], [509, "detailed-documentation"], [510, "detailed-documentation"], [511, "detailed-documentation"], [512, "detailed-documentation"], [513, "detailed-documentation"], [514, "detailed-documentation"], [515, "detailed-documentation"], [516, "detailed-documentation"], [517, "detailed-documentation"], [519, "detailed-documentation"], [518, "detailed-documentation"], [520, "detailed-documentation"], [522, "detailed-documentation"], [525, "detailed-documentation"], [524, "detailed-documentation"], [526, "detailed-documentation"], [527, "detailed-documentation"], [528, "detailed-documentation"], [529, "detailed-documentation"], [530, "detailed-documentation"], [531, "detailed-documentation"], [533, "detailed-documentation"], [532, "detailed-documentation"], [534, "detailed-documentation"], [536, "detailed-documentation"], [537, "detailed-documentation"], [538, "detailed-documentation"], [541, "detailed-documentation"], [540, "detailed-documentation"], [542, "detailed-documentation"], [543, "detailed-documentation"], [545, "detailed-documentation"], [544, "detailed-documentation"], [546, "detailed-documentation"], [547, "detailed-documentation"], [549, "detailed-documentation"], [548, "detailed-documentation"], [551, "detailed-documentation"], [550, "detailed-documentation"], [553, "detailed-documentation"], [552, "detailed-documentation"], [554, "detailed-documentation"], [555, "detailed-documentation"], [556, "detailed-documentation"], [557, "detailed-documentation"], [558, "detailed-documentation"], [560, "detailed-documentation"], [561, "detailed-documentation"], [562, "detailed-documentation"], [563, "detailed-documentation"], [567, "detailed-documentation"], [566, "detailed-documentation"], [568, "detailed-documentation"], [569, "detailed-documentation"], [571, "detailed-documentation"], [570, "detailed-documentation"], [572, "detailed-documentation"], [573, "detailed-documentation"]], "Construction": [[2, "construction"], [3, "construction"], [8, "construction"], [7, "construction"], [6, "construction"], [4, "construction"], [5, "construction"], [449, "construction"], [448, "construction"], [451, "construction"], [450, "construction"], [453, "construction"], [452, "construction"], [455, "construction"], [454, "construction"], [457, "construction"], [456, "construction"], [459, "construction"], [461, "construction"], [460, "construction"], [462, "construction"], [463, "construction"], [465, "construction"], [464, "construction"], [466, "construction"], [467, "construction"], [469, "construction"], [468, "construction"], [471, "construction"], [470, "construction"], [473, "construction"], [472, "construction"], [474, "construction"], [475, "construction"], [476, "construction"], [479, "construction"], [478, "construction"], [483, "construction"], [485, "construction"], [484, "construction"], [487, "construction"], [486, "construction"], [488, "construction"], [489, "construction"], [490, "construction"], [491, "construction"], [493, "construction"], [495, "construction"], [494, "construction"], [496, "construction"], [497, "construction"], [498, "construction"], [499, "construction"], [501, "construction"], [500, "construction"], [503, "construction"], [502, "construction"], [505, "construction"], [504, "construction"], [506, "construction"], [507, "construction"], [508, "construction"], [509, "construction"], [510, "construction"], [511, "construction"], [512, "construction"], [513, "construction"], [514, "construction"], [515, "construction"], [516, "construction"], [517, "construction"], [519, "construction"], [518, "construction"], [520, "construction"], [522, "construction"], [525, "construction"], [524, "construction"], [526, "construction"], [527, "construction"], [528, "construction"], [530, "construction"], [531, "construction"], [533, "construction"], [532, "construction"], [534, "construction"], [536, "construction"], [538, "construction"], [542, "construction"], [543, "construction"], [545, "construction"], [544, "construction"], [546, "construction"], [547, "construction"], [549, "construction"], [548, "construction"], [551, "construction"], [550, "construction"], [553, "construction"], [552, "construction"], [554, "construction"], [555, "construction"], [556, "construction"], [557, "construction"], [558, "construction"], [560, "construction"], [561, "construction"], [562, "construction"], [567, "construction"], [568, "construction"], [569, "construction"], [571, "construction"], [570, "construction"], [572, "construction"]], "class dnnl::graph::compiled_partition": [[3, "class-dnnl-graph-compiled-partition"]], "Methods": [[3, "methods"], [8, "methods"], [7, "methods"], [6, "methods"], [4, "methods"], [5, "methods"], [449, "methods"], [451, "methods"], [453, "methods"], [455, "methods"], [457, "methods"], [460, "methods"], [462, "methods"], [464, "methods"], [466, "methods"], [468, "methods"], [470, "methods"], [472, "methods"], [474, "methods"], [476, "methods"], [479, "methods"], [478, "methods"], [484, "methods"], [486, "methods"], [488, "methods"], [490, "methods"], [491, "methods"], [494, "methods"], [496, "methods"], [498, "methods"], [500, "methods"], [502, "methods"], [504, "methods"], [506, "methods"], [508, "methods"], [510, "methods"], [512, "methods"], [514, "methods"], [516, "methods"], [518, "methods"], [520, "methods"], [522, "methods"], [524, "methods"], [526, "methods"], [528, "methods"], [530, "methods"], [532, "methods"], [534, "methods"], [536, "methods"], [538, "methods"], [541, "methods"], [540, "methods"], [543, "methods"], [545, "methods"], [544, "methods"], [547, "methods"], [549, "methods"], [550, "methods"], [552, "methods"], [554, "methods"], [556, "methods"], [558, "methods"], [560, "methods"], [562, "methods"], [563, "methods"], [567, "methods"], [566, "methods"], [568, "methods"], [570, "methods"], [572, "methods"]], "class simple_memory_pool_t": [[9, "class-simple-memory-pool-t"]], "class dnnl::graph::tensor": [[8, "class-dnnl-graph-tensor"]], "Primitive Attributes: Scratchpad": [[18, "primitive-attributes-scratchpad"]], "Scratchpad Memory Engine": [[18, "scratchpad-memory-engine"]], "Examples": [[18, "examples"], [39, "examples"], [22, "examples"], [20, "examples"], [35, "examples"], [44, "examples"], [54, "examples"], [160, "examples"], [161, "examples"]], "Library Manages Scratchpad": [[18, "library-manages-scratchpad"]], "User Manages Scratchpad": [[18, "user-manages-scratchpad"]], "Basic Concepts": [[19, "basic-concepts"], [37, "basic-concepts"], [159, "basic-concepts"]], "Primitives": [[19, "primitives"], [19, "id2"], [36, "primitives"], [311, "primitives"]], "Engines": [[19, "engines"]], "Streams": [[19, "streams"]], "Memory Objects": [[19, "memory-objects"], [19, "id1"]], "Levels of Abstraction": [[19, "levels-of-abstraction"]], "Creating Memory Objects and Primitives": [[19, "creating-memory-objects-and-primitives"]], "Graph Extension": [[19, "graph-extension"], [282, "graph-extension"]], "Micro-kernel Extension": [[19, "micro-kernel-extension"]], "Primitive Attributes: rounding mode": [[17, "primitive-attributes-rounding-mode"]], "Primitive Attributes: Quantization": [[16, "primitive-attributes-quantization"]], "Quantization Model": [[16, "quantization-model"]], "Numerical behavior": [[16, "numerical-behavior"]], "Example: Convolution Quantization Workflow": [[16, "example-convolution-quantization-workflow"]], "Per-Channel Scaling": [[16, "per-channel-scaling"]], "Argument Scaling": [[16, "argument-scaling"]], "Example 1: weights quantization with per-output-channel scaling": [[16, "example-1-weights-quantization-with-per-output-channel-scaling"]], "Example 2: convolution with per-output-channel quantization": [[16, "example-2-convolution-with-per-output-channel-quantization"]], "Concat": [[26, "concat"], [67, "concat"], [293, "concat"]], "General": [[26, "general"], [22, "general"], [56, "general"], [57, "general"], [20, "general"], [34, "general"], [48, "general"], [44, "general"], [53, "general"], [55, "general"], [54, "general"], [58, "general"], [59, "general"], [51, "general"], [60, "general"], [61, "general"], [63, "general"], [62, "general"], [29, "general"], [64, "general"], [65, "general"], [67, "general"], [66, "general"], [69, "general"], [68, "general"], [71, "general"], [70, "general"], [72, "general"], [73, "general"], [74, "general"], [75, "general"], [77, "general"], [76, "general"], [78, "general"], [79, "general"], [80, "general"], [81, "general"], [82, "general"], [83, "general"], [84, "general"], [85, "general"], [87, "general"], [86, "general"], [89, "general"], [88, "general"], [90, "general"], [91, "general"], [93, "general"], [92, "general"], [94, "general"], [95, "general"], [96, "general"], [97, "general"], [98, "general"], [99, "general"], [101, "general"], [100, "general"], [102, "general"], [103, "general"], [104, "general"], [105, "general"], [106, "general"], [107, "general"], [109, "general"], [108, "general"], [111, "general"], [110, "general"], [113, "general"], [112, "general"], [114, "general"], [115, "general"], [117, "general"], [116, "general"], [119, "general"], [118, "general"], [121, "general"], [120, "general"], [122, "general"], [123, "general"], [124, "general"], [125, "general"], [127, "general"], [126, "general"], [128, "general"], [129, "general"], [130, "general"], [131, "general"], [132, "general"], [133, "general"], [135, "general"], [134, "general"], [137, "general"], [136, "general"], [139, "general"], [138, "general"], [140, "general"], [144, "general"], [145, "general"], [148, "general"], [149, "general"], [151, "general"], [150, "general"], [153, "general"], [152, "general"], [154, "general"], [160, "general"], [161, "general"]], "Execution Arguments": [[26, "execution-arguments"], [22, "execution-arguments"], [20, "execution-arguments"], [34, "execution-arguments"], [48, "execution-arguments"], [44, "execution-arguments"], [53, "execution-arguments"], [54, "execution-arguments"], [51, "execution-arguments"], [29, "execution-arguments"], [84, "execution-arguments"], [85, "execution-arguments"], [144, "execution-arguments"], [145, "execution-arguments"], [148, "execution-arguments"], [149, "execution-arguments"], [151, "execution-arguments"], [150, "execution-arguments"], [153, "execution-arguments"], [152, "execution-arguments"], [154, "execution-arguments"]], "Implementation Details": [[26, "implementation-details"], [22, "implementation-details"], [20, "implementation-details"], [34, "implementation-details"], [48, "implementation-details"], [44, "implementation-details"], [53, "implementation-details"], [54, "implementation-details"], [51, "implementation-details"], [29, "implementation-details"], [144, "implementation-details"], [145, "implementation-details"], [148, "implementation-details"], [149, "implementation-details"], [151, "implementation-details"], [150, "implementation-details"], [153, "implementation-details"], [154, "implementation-details"]], "General Notes": [[26, "general-notes"], [22, "general-notes"], [20, "general-notes"], [34, "general-notes"], [48, "general-notes"], [44, "general-notes"], [53, "general-notes"], [54, "general-notes"], [51, "general-notes"], [29, "general-notes"], [144, "general-notes"], [145, "general-notes"], [148, "general-notes"], [149, "general-notes"], [150, "general-notes"], [153, "general-notes"], [154, "general-notes"]], "Data Types Support": [[26, "data-types-support"], [22, "data-types-support"], [148, "data-types-support"], [149, "data-types-support"], [154, "data-types-support"]], "Data Representation": [[26, "data-representation"], [22, "data-representation"], [20, "data-representation"], [34, "data-representation"], [48, "data-representation"], [44, "data-representation"], [53, "data-representation"], [54, "data-representation"], [51, "data-representation"], [29, "data-representation"], [144, "data-representation"], [145, "data-representation"], [148, "data-representation"], [149, "data-representation"], [151, "data-representation"], [153, "data-representation"], [154, "data-representation"], [160, "data-representation"], [161, "data-representation"]], "Post-Ops and Attributes": [[26, "post-ops-and-attributes"], [22, "post-ops-and-attributes"], [20, "post-ops-and-attributes"], [34, "post-ops-and-attributes"], [48, "post-ops-and-attributes"], [44, "post-ops-and-attributes"], [144, "post-ops-and-attributes"], [148, "post-ops-and-attributes"], [149, "post-ops-and-attributes"], [151, "post-ops-and-attributes"], [150, "post-ops-and-attributes"], [152, "post-ops-and-attributes"], [154, "post-ops-and-attributes"]], "Implementation Limitations": [[26, "implementation-limitations"], [40, "implementation-limitations"], [22, "implementation-limitations"], [43, "implementation-limitations"], [20, "implementation-limitations"], [34, "implementation-limitations"], [48, "implementation-limitations"], [44, "implementation-limitations"], [53, "implementation-limitations"], [54, "implementation-limitations"], [51, "implementation-limitations"], [29, "implementation-limitations"], [144, "implementation-limitations"], [145, "implementation-limitations"], [148, "implementation-limitations"], [149, "implementation-limitations"], [151, "implementation-limitations"], [150, "implementation-limitations"], [153, "implementation-limitations"], [152, "implementation-limitations"], [154, "implementation-limitations"]], "Performance Tips": [[26, "performance-tips"], [22, "performance-tips"], [20, "performance-tips"], [34, "performance-tips"], [48, "performance-tips"], [44, "performance-tips"], [53, "performance-tips"], [54, "performance-tips"], [51, "performance-tips"], [29, "performance-tips"], [144, "performance-tips"], [145, "performance-tips"], [148, "performance-tips"], [149, "performance-tips"], [150, "performance-tips"], [153, "performance-tips"], [152, "performance-tips"], [154, "performance-tips"]], "Example": [[26, "example"], [40, "example"], [42, "example"], [47, "example"], [34, "example"], [48, "example"], [53, "example"], [51, "example"], [29, "example"], [144, "example"], [145, "example"], [148, "example"], [149, "example"], [151, "example"], [150, "example"], [153, "example"], [152, "example"], [154, "example"], [157, "example"], [163, "example"]], "Constant Tensor Cache": [[27, "constant-tensor-cache"], [334, "constant-tensor-cache"]], "Build-Time Controls": [[27, "build-time-controls"], [38, "build-time-controls"], [147, "build-time-controls"], [147, "id1"], [163, "build-time-controls"]], "Run-Time Controls": [[27, "run-time-controls"], [38, "run-time-controls"], [147, "run-time-controls"], [147, "id2"], [163, "run-time-controls"]], "Constant Tensor Cache Capacity Control API": [[27, "constant-tensor-cache-capacity-control-api"]], "Environment Variable": [[27, "environment-variable"]], "CPU Dispatcher Control": [[30, "cpu-dispatcher-control"]], "Build-time Controls": [[30, "build-time-controls"], [31, "build-time-controls"], [36, "build-time-controls"], [146, "build-time-controls"]], "Runtime Controls": [[30, "runtime-controls"]], "CPU ISA Hints": [[31, "cpu-isa-hints"]], "Run-time Controls": [[31, "run-time-controls"], [146, "run-time-controls"]], "Gated Multi-Layer Perceptron (Gated-MLP)": [[39, "gated-multi-layer-perceptron-gated-mlp"]], "Gated-MLP patterns": [[39, "gated-mlp-patterns"]], "Floating-point Gated-MLP": [[39, "floating-point-gated-mlp"]], "Data Types": [[39, "data-types"], [40, "data-types"], [42, "data-types"], [43, "data-types"], [32, "data-types"], [48, "data-types"], [54, "data-types"], [29, "data-types"], [150, "data-types"], [152, "data-types"], [160, "data-types"], [161, "data-types"]], "Implementation limitations": [[39, "implementation-limitations"], [42, "implementation-limitations"], [160, "implementation-limitations"], [161, "implementation-limitations"]], "References": [[39, "references"], [40, "references"], [42, "references"], [43, "references"], [50, "references"]], "Graph Dump": [[38, "graph-dump"]], "Low Precision": [[41, "low-precision"]], "INT8": [[41, "int8"]], "BF16/F16": [[41, "bf16-f16"]], "Grouped Query Attention (GQA)": [[40, "grouped-query-attention-gqa"]], "GQA Pattern": [[40, "gqa-pattern"]], "Build from Source": [[23, "build-from-source"]], "Download the Source Code": [[23, "download-the-source-code"]], "Build the Library": [[23, "build-the-library"]], "Linux/macOS": [[23, "linux-macos"], [52, "linux-macos"]], "GCC, Clang, or Intel oneAPI DPC++/C++ Compiler": [[23, "gcc-clang-or-intel-oneapi-dpc-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL runtime": [[23, "intel-oneapi-dpc-c-compiler-with-sycl-runtime"]], "GCC targeting AArch64 on x64 host": [[23, "gcc-targeting-aarch64-on-x64-host"]], "GCC with Arm Compute Library (ACL) on AArch64 host": [[23, "gcc-with-arm-compute-library-acl-on-aarch64-host"]], "Windows": [[23, "windows"], [52, "windows"], [52, "id1"]], "Microsoft Visual C++ Compiler": [[23, "microsoft-visual-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL Runtime": [[23, "id1"]], "Validate the Build": [[23, "validate-the-build"]], "Build documentation": [[23, "build-documentation"]], "Install library": [[23, "install-library"]], "Binary": [[22, "binary"], [15, "binary"], [290, "binary"]], "Sources, Destination": [[22, "sources-destination"], [148, "sources-destination"], [154, "sources-destination"]], "Scaled Dot-Product Attention (SDPA)": [[42, "scaled-dot-product-attention-sdpa"]], "SDPA patterns": [[42, "sdpa-patterns"]], "Floating-point SDPA": [[42, "floating-point-sdpa"]], "SDPA with Compressed Key and Value": [[43, "sdpa-with-compressed-key-and-value"]], "SDPA Pattern": [[43, "sdpa-pattern"]], "Floating-point Math Mode": [[43, "floating-point-math-mode"], [299, "floating-point-math-mode"]], "AbsBackward": [[56, "absbackward"]], "Operation attributes": [[56, "operation-attributes"], [57, "operation-attributes"], [55, "operation-attributes"], [58, "operation-attributes"], [59, "operation-attributes"], [60, "operation-attributes"], [61, "operation-attributes"], [63, "operation-attributes"], [62, "operation-attributes"], [64, "operation-attributes"], [65, "operation-attributes"], [67, "operation-attributes"], [66, "operation-attributes"], [69, "operation-attributes"], [68, "operation-attributes"], [71, "operation-attributes"], [70, "operation-attributes"], [72, "operation-attributes"], [73, "operation-attributes"], [74, "operation-attributes"], [75, "operation-attributes"], [77, "operation-attributes"], [76, "operation-attributes"], [78, "operation-attributes"], [79, "operation-attributes"], [80, "operation-attributes"], [81, "operation-attributes"], [82, "operation-attributes"], [83, "operation-attributes"], [87, "operation-attributes"], [86, "operation-attributes"], [89, "operation-attributes"], [88, "operation-attributes"], [90, "operation-attributes"], [91, "operation-attributes"], [93, "operation-attributes"], [92, "operation-attributes"], [94, "operation-attributes"], [95, "operation-attributes"], [96, "operation-attributes"], [97, "operation-attributes"], [98, "operation-attributes"], [99, "operation-attributes"], [101, "operation-attributes"], [100, "operation-attributes"], [102, "operation-attributes"], [103, "operation-attributes"], [104, "operation-attributes"], [105, "operation-attributes"], [106, "operation-attributes"], [107, "operation-attributes"], [109, "operation-attributes"], [108, "operation-attributes"], [111, "operation-attributes"], [110, "operation-attributes"], [113, "operation-attributes"], [112, "operation-attributes"], [114, "operation-attributes"], [115, "operation-attributes"], [117, "operation-attributes"], [116, "operation-attributes"], [119, "operation-attributes"], [118, "operation-attributes"], [121, "operation-attributes"], [120, "operation-attributes"], [122, "operation-attributes"], [123, "operation-attributes"], [124, "operation-attributes"], [125, "operation-attributes"], [127, "operation-attributes"], [126, "operation-attributes"], [128, "operation-attributes"], [129, "operation-attributes"], [130, "operation-attributes"], [131, "operation-attributes"], [132, "operation-attributes"], [133, "operation-attributes"], [135, "operation-attributes"], [134, "operation-attributes"], [137, "operation-attributes"], [136, "operation-attributes"], [139, "operation-attributes"], [138, "operation-attributes"], [140, "operation-attributes"]], "Execution arguments": [[56, "execution-arguments"], [57, "execution-arguments"], [55, "execution-arguments"], [58, "execution-arguments"], [59, "execution-arguments"], [60, "execution-arguments"], [61, "execution-arguments"], [63, "execution-arguments"], [62, "execution-arguments"], [64, "execution-arguments"], [65, "execution-arguments"], [67, "execution-arguments"], [66, "execution-arguments"], [69, "execution-arguments"], [68, "execution-arguments"], [71, "execution-arguments"], [70, "execution-arguments"], [72, "execution-arguments"], [73, "execution-arguments"], [74, "execution-arguments"], [75, "execution-arguments"], [77, "execution-arguments"], [76, "execution-arguments"], [78, "execution-arguments"], [79, "execution-arguments"], [80, "execution-arguments"], [81, "execution-arguments"], [82, "execution-arguments"], [83, "execution-arguments"], [87, "execution-arguments"], [86, "execution-arguments"], [89, "execution-arguments"], [88, "execution-arguments"], [90, "execution-arguments"], [91, "execution-arguments"], [93, "execution-arguments"], [92, "execution-arguments"], [94, "execution-arguments"], [95, "execution-arguments"], [96, "execution-arguments"], [97, "execution-arguments"], [98, "execution-arguments"], [99, "execution-arguments"], [101, "execution-arguments"], [100, "execution-arguments"], [102, "execution-arguments"], [103, "execution-arguments"], [104, "execution-arguments"], [105, "execution-arguments"], [106, "execution-arguments"], [109, "execution-arguments"], [108, "execution-arguments"], [111, "execution-arguments"], [110, "execution-arguments"], [113, "execution-arguments"], [112, "execution-arguments"], [114, "execution-arguments"], [115, "execution-arguments"], [117, "execution-arguments"], [116, "execution-arguments"], [119, "execution-arguments"], [118, "execution-arguments"], [121, "execution-arguments"], [120, "execution-arguments"], [122, "execution-arguments"], [123, "execution-arguments"], [124, "execution-arguments"], [125, "execution-arguments"], [127, "execution-arguments"], [126, "execution-arguments"], [128, "execution-arguments"], [129, "execution-arguments"], [130, "execution-arguments"], [131, "execution-arguments"], [132, "execution-arguments"], [133, "execution-arguments"], [135, "execution-arguments"], [134, "execution-arguments"], [137, "execution-arguments"], [136, "execution-arguments"], [139, "execution-arguments"], [138, "execution-arguments"], [140, "execution-arguments"]], "Inputs": [[56, "inputs"], [57, "inputs"], [55, "inputs"], [58, "inputs"], [59, "inputs"], [60, "inputs"], [61, "inputs"], [63, "inputs"], [62, "inputs"], [64, "inputs"], [65, "inputs"], [67, "inputs"], [66, "inputs"], [69, "inputs"], [68, "inputs"], [71, "inputs"], [70, "inputs"], [72, "inputs"], [73, "inputs"], [74, "inputs"], [75, "inputs"], [77, "inputs"], [76, "inputs"], [78, "inputs"], [79, "inputs"], [80, "inputs"], [81, "inputs"], [82, "inputs"], [83, "inputs"], [87, "inputs"], [86, "inputs"], [89, "inputs"], [88, "inputs"], [90, "inputs"], [91, "inputs"], [93, "inputs"], [92, "inputs"], [94, "inputs"], [95, "inputs"], [96, "inputs"], [97, "inputs"], [98, "inputs"], [99, "inputs"], [101, "inputs"], [100, "inputs"], [102, "inputs"], [103, "inputs"], [104, "inputs"], [105, "inputs"], [106, "inputs"], [107, "inputs"], [109, "inputs"], [108, "inputs"], [111, "inputs"], [110, "inputs"], [113, "inputs"], [112, "inputs"], [114, "inputs"], [115, "inputs"], [117, "inputs"], [116, "inputs"], [119, "inputs"], [118, "inputs"], [121, "inputs"], [120, "inputs"], [122, "inputs"], [123, "inputs"], [124, "inputs"], [125, "inputs"], [127, "inputs"], [126, "inputs"], [128, "inputs"], [129, "inputs"], [130, "inputs"], [131, "inputs"], [132, "inputs"], [133, "inputs"], [135, "inputs"], [134, "inputs"], [137, "inputs"], [136, "inputs"], [139, "inputs"], [138, "inputs"], [140, "inputs"]], "Outputs": [[56, "outputs"], [57, "outputs"], [55, "outputs"], [58, "outputs"], [59, "outputs"], [60, "outputs"], [61, "outputs"], [63, "outputs"], [62, "outputs"], [64, "outputs"], [65, "outputs"], [67, "outputs"], [66, "outputs"], [69, "outputs"], [68, "outputs"], [71, "outputs"], [70, "outputs"], [72, "outputs"], [73, "outputs"], [74, "outputs"], [75, "outputs"], [77, "outputs"], [76, "outputs"], [78, "outputs"], [79, "outputs"], [80, "outputs"], [81, "outputs"], [82, "outputs"], [83, "outputs"], [87, "outputs"], [86, "outputs"], [89, "outputs"], [88, "outputs"], [90, "outputs"], [91, "outputs"], [93, "outputs"], [92, "outputs"], [94, "outputs"], [95, "outputs"], [96, "outputs"], [97, "outputs"], [98, "outputs"], [99, "outputs"], [101, "outputs"], [100, "outputs"], [102, "outputs"], [103, "outputs"], [104, "outputs"], [105, "outputs"], [106, "outputs"], [107, "outputs"], [109, "outputs"], [108, "outputs"], [111, "outputs"], [110, "outputs"], [113, "outputs"], [112, "outputs"], [114, "outputs"], [115, "outputs"], [117, "outputs"], [116, "outputs"], [119, "outputs"], [118, "outputs"], [121, "outputs"], [120, "outputs"], [122, "outputs"], [123, "outputs"], [124, "outputs"], [125, "outputs"], [127, "outputs"], [126, "outputs"], [128, "outputs"], [129, "outputs"], [130, "outputs"], [131, "outputs"], [132, "outputs"], [133, "outputs"], [135, "outputs"], [134, "outputs"], [137, "outputs"], [136, "outputs"], [139, "outputs"], [138, "outputs"], [140, "outputs"]], "Supported data types": [[56, "supported-data-types"], [57, "supported-data-types"], [55, "supported-data-types"], [58, "supported-data-types"], [59, "supported-data-types"], [60, "supported-data-types"], [61, "supported-data-types"], [63, "supported-data-types"], [62, "supported-data-types"], [64, "supported-data-types"], [65, "supported-data-types"], [67, "supported-data-types"], [66, "supported-data-types"], [69, "supported-data-types"], [68, "supported-data-types"], [71, "supported-data-types"], [70, "supported-data-types"], [72, "supported-data-types"], [73, "supported-data-types"], [74, "supported-data-types"], [75, "supported-data-types"], [77, "supported-data-types"], [76, "supported-data-types"], [78, "supported-data-types"], [79, "supported-data-types"], [80, "supported-data-types"], [81, "supported-data-types"], [82, "supported-data-types"], [83, "supported-data-types"], [87, "supported-data-types"], [86, "supported-data-types"], [89, "supported-data-types"], [88, "supported-data-types"], [90, "supported-data-types"], [91, "supported-data-types"], [93, "supported-data-types"], [92, "supported-data-types"], [94, "supported-data-types"], [95, "supported-data-types"], [96, "supported-data-types"], [97, "supported-data-types"], [98, "supported-data-types"], [99, "supported-data-types"], [101, "supported-data-types"], [100, "supported-data-types"], [102, "supported-data-types"], [103, "supported-data-types"], [104, "supported-data-types"], [105, "supported-data-types"], [106, "supported-data-types"], [107, "supported-data-types"], [109, "supported-data-types"], [108, "supported-data-types"], [111, "supported-data-types"], [110, "supported-data-types"], [113, "supported-data-types"], [112, "supported-data-types"], [114, "supported-data-types"], [115, "supported-data-types"], [117, "supported-data-types"], [116, "supported-data-types"], [119, "supported-data-types"], [118, "supported-data-types"], [121, "supported-data-types"], [120, "supported-data-types"], [122, "supported-data-types"], [123, "supported-data-types"], [124, "supported-data-types"], [125, "supported-data-types"], [127, "supported-data-types"], [126, "supported-data-types"], [128, "supported-data-types"], [129, "supported-data-types"], [130, "supported-data-types"], [131, "supported-data-types"], [132, "supported-data-types"], [133, "supported-data-types"], [135, "supported-data-types"], [134, "supported-data-types"], [137, "supported-data-types"], [136, "supported-data-types"], [139, "supported-data-types"], [138, "supported-data-types"], [140, "supported-data-types"]], "Add": [[57, "add"]], "Primitive Attributes: Post-ops": [[15, "primitive-attributes-post-ops"]], "Supported Post-ops": [[15, "supported-post-ops"]], "Eltwise Post-op": [[15, "eltwise-post-op"]], "Sum Post-op": [[15, "sum-post-op"]], "Depthwise Post-op": [[15, "depthwise-post-op"]], "Binary Post-op": [[15, "binary-post-op"]], "Prelu Post-op": [[15, "prelu-post-op"]], "Examples of Chained Post-ops": [[15, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[15, "sum-relu"]], "Tanh -> Sum -> ScaleShift": [[15, "tanh-sum-scaleshift"]], "Relu -> Depthwise -> Relu": [[15, "relu-depthwise-relu"]], "Primitive Attributes: floating-point math mode": [[14, "primitive-attributes-floating-point-math-mode"]], "The floating-point math mode attribute.": [[14, "the-floating-point-math-mode-attribute"]], "Enforcing the floating-point math mode to an integral primitive.": [[14, "enforcing-the-floating-point-math-mode-to-an-integral-primitive"]], "A note on the default floating-point math mode.": [[14, "a-note-on-the-default-floating-point-math-mode"]], "Inference and Training": [[32, "inference-and-training"]], "General numerical behavior of the oneDNN library": [[32, "general-numerical-behavior-of-the-onednn-library"]], "Rounding mode and denormal handling": [[32, "rounding-mode-and-denormal-handling"]], "Hardware Limitations": [[32, "hardware-limitations"]], "Intel(R) Architecture Processors": [[32, "intel-r-architecture-processors"]], "Intel(R) Processor Graphics and Xe Architecture graphics": [[32, "intel-r-processor-graphics-and-xe-architecture-graphics"]], "DPC++ Interoperability": [[33, "dpc-interoperability"]], "SYCL Buffers and DPC++ USM Interfaces for Memory Objects": [[33, "sycl-buffers-and-dpc-usm-interfaces-for-memory-objects"]], "Handling Dependencies with USM": [[33, "handling-dependencies-with-usm"]], "Input validation notes": [[25, "input-validation-notes"]], "Build Options": [[24, "build-options"]], "Common options": [[24, "common-options"]], "Host compiler": [[24, "host-compiler"]], "Configuring functionality": [[24, "configuring-functionality"]], "ONEDNN_ENABLE_WORKLOAD": [[24, "onednn-enable-workload"]], "ONEDNN_ENABLE_PRIMITIVE": [[24, "onednn-enable-primitive"]], "ONEDNN_ENABLE_PRIMITIVE_CPU_ISA": [[24, "onednn-enable-primitive-cpu-isa"]], "ONEDNN_ENABLE_PRIMITIVE_GPU_ISA": [[24, "onednn-enable-primitive-gpu-isa"]], "ONEDNN_ENABLE_GEMM_KERNELS_ISA": [[24, "onednn-enable-gemm-kernels-isa"]], "Configuring testing": [[24, "configuring-testing"]], "ONEDNN_TEST_SET": [[24, "onednn-test-set"]], "CPU Options": [[24, "cpu-options"]], "Targeting Specific Architecture": [[24, "targeting-specific-architecture"]], "Runtimes": [[24, "runtimes"], [24, "id1"]], "OpenMP": [[24, "openmp"]], "Threading Building Blocks (TBB)": [[24, "threading-building-blocks-tbb"]], "Threadpool": [[24, "threadpool"]], "AArch64 Options": [[24, "aarch64-options"]], "Arm Compute Library": [[24, "arm-compute-library"]], "Vendor BLAS libraries": [[24, "vendor-blas-libraries"]], "GPU Options": [[24, "gpu-options"]], "OpenCL*": [[24, "opencl"]], "Graph component limitations": [[24, "graph-component-limitations"]], "Logical Tensor": [[37, "logical-tensor"], [338, "logical-tensor"]], "Op": [[37, "op"], [340, "op"]], "Graph": [[37, "graph"], [336, "graph"]], "Partition": [[37, "partition"], [341, "partition"]], "Compiled Partition": [[37, "compiled-partition"], [332, "compiled-partition"]], "Tensor": [[37, "tensor"], [344, "tensor"]], "Experimental features": [[36, "experimental-features"], [36, "id1"]], "Features details": [[36, "features-details"]], "ONEDNN_EXPERIMENTAL_SPARSE": [[36, "onednn-experimental-sparse"]], "Matrix Multiplication": [[36, "matrix-multiplication"], [54, "matrix-multiplication"], [305, "matrix-multiplication"]], "CSR encoding": [[36, "csr-encoding"]], "COO encoding": [[36, "coo-encoding"]], "PACKED encoding": [[36, "packed-encoding"]], "Reorder": [[36, "reorder"], [121, "reorder"], [149, "reorder"], [315, "reorder"]], "Common Limitations": [[36, "common-limitations"]], "ONEDNN_EXPERIMENTAL_UKERNEL": [[36, "onednn-experimental-ukernel"]], "ONEDNN_EXPERIMENTAL_PROFILING": [[36, "onednn-experimental-profiling"]], "Limitations": [[36, "limitations"], [143, "limitations"]], "ONEDNN_EXPERIMENTAL_LOGGING": [[36, "onednn-experimental-logging"]], "Benchmarking Performance": [[21, "benchmarking-performance"]], "Batch Normalization": [[20, "batch-normalization"], [289, "batch-normalization"]], "Forward": [[20, "forward"], [34, "forward"], [48, "forward"], [44, "forward"], [53, "forward"], [51, "forward"], [29, "forward"], [144, "forward"], [145, "forward"], [150, "forward"], [153, "forward"], [152, "forward"]], "Difference Between Forward Training and Forward Inference": [[20, "difference-between-forward-training-and-forward-inference"], [34, "difference-between-forward-training-and-forward-inference"], [48, "difference-between-forward-training-and-forward-inference"], [44, "difference-between-forward-training-and-forward-inference"], [51, "difference-between-forward-training-and-forward-inference"], [29, "difference-between-forward-training-and-forward-inference"], [144, "difference-between-forward-training-and-forward-inference"], [145, "difference-between-forward-training-and-forward-inference"], [150, "difference-between-forward-training-and-forward-inference"], [153, "difference-between-forward-training-and-forward-inference"], [152, "difference-between-forward-training-and-forward-inference"]], "Backward": [[20, "backward"], [34, "backward"], [48, "backward"], [44, "backward"], [53, "backward"], [51, "backward"], [29, "backward"], [144, "backward"], [145, "backward"], [150, "backward"], [153, "backward"], [152, "backward"]], "Data Type Support": [[20, "data-type-support"], [34, "data-type-support"], [44, "data-type-support"], [53, "data-type-support"], [51, "data-type-support"], [144, "data-type-support"], [145, "data-type-support"], [151, "data-type-support"], [153, "data-type-support"]], "Mean and Variance": [[20, "mean-and-variance"], [44, "mean-and-variance"], [51, "mean-and-variance"]], "Scale and Shift": [[20, "scale-and-shift"], [44, "scale-and-shift"], [51, "scale-and-shift"]], "Source, Destination, and Their Gradients": [[20, "source-destination-and-their-gradients"], [44, "source-destination-and-their-gradients"], [53, "source-destination-and-their-gradients"], [51, "source-destination-and-their-gradients"], [144, "source-destination-and-their-gradients"], [153, "source-destination-and-their-gradients"]], "Inference and Training Aspects": [[46, "inference-and-training-aspects"]], "Propagation Kinds": [[46, "propagation-kinds"]], "Difference Between Forward Propagation on Training and Inference": [[46, "difference-between-forward-propagation-on-training-and-inference"]], "Different Backward Propagation Kinds": [[46, "different-backward-propagation-kinds"]], "Inference-Specific Aspects": [[46, "inference-specific-aspects"]], "Training-Specific Aspects": [[46, "training-specific-aspects"]], "Workspace": [[46, "workspace"]], "Int8 Inference": [[47, "int8-inference"]], "Int8 Workflow": [[47, "int8-workflow"]], "Quantization Process": [[47, "quantization-process"]], "Range of the Data": [[47, "range-of-the-data"]], "Scaling Factor": [[47, "scaling-factor"]], "Quantization Example": [[47, "quantization-example"]], "int8 Support": [[47, "int8-support"]], "Attributes": [[47, "attributes"], [160, "attributes"], [161, "attributes"], [288, "attributes"]], "Eltwise": [[34, "eltwise"], [297, "eltwise"]], "Exceptions": [[34, "exceptions"]], "Inner Product": [[48, "inner-product"], [301, "inner-product"]], "Inspecting JIT Code": [[49, "inspecting-jit-code"]], "Example (CPU)": [[49, "example-cpu"]], "Example (GPU)": [[49, "example-gpu"]], "Inference": [[45, "inference"], [283, "inference"]], "Best Practices for Inference": [[45, "best-practices-for-inference"]], "fp32 Inference": [[45, "fp32-inference"]], "int8 Inference": [[45, "int8-inference"]], "Group Normalization": [[44, "group-normalization"], [300, "group-normalization"]], "Linking to the Library": [[52, "linking-to-the-library"]], "Header Files": [[52, "header-files"]], "Libraries": [[52, "libraries"]], "Linux": [[52, "linux"]], "macOS": [[52, "macos"]], "Linking to oneDNN": [[52, "linking-to-onednn"]], "Support for macOS hardened runtime": [[52, "support-for-macos-hardened-runtime"]], "Local Response Normalization (LRN)": [[53, "local-response-normalization-lrn"]], "Post-ops and Attributes": [[53, "post-ops-and-attributes"], [51, "post-ops-and-attributes"], [29, "post-ops-and-attributes"], [153, "post-ops-and-attributes"]], "Abs": [[55, "abs"]], "Attributes and Post-ops": [[54, "attributes-and-post-ops"]], "Matrix Multiplication Primitive Examples": [[54, "matrix-multiplication-primitive-examples"]], "AvgPool": [[58, "avgpool"]], "AvgPoolBackward": [[59, "avgpoolbackward"]], "Nuances of int8 Computations": [[50, "nuances-of-int8-computations"]], "CPU": [[50, "cpu"], [142, "cpu"]], "1. Inputs of mixed type: u8 and s8": [[50, "inputs-of-mixed-type-u8-and-s8"]], "1.1. Processors with the Intel AVX2 or Intel AVX-512 Support": [[50, "processors-with-the-intel-avx2-or-intel-avx-512-support"]], "1.2. Processors with the Intel DL Boost Support": [[50, "processors-with-the-intel-dl-boost-support"]], "2. Inputs of the same type: s8": [[50, "inputs-of-the-same-type-s8"]], "GPU": [[50, "gpu"]], "Layer Normalization": [[51, "layer-normalization"], [303, "layer-normalization"]], "BatchNormForwardTraining": [[60, "batchnormforwardtraining"]], "BatchNormInference": [[61, "batchnorminference"]], "class dnnl::graph::partition": [[7, "class-dnnl-graph-partition"]], "class dnnl::graph::op": [[6, "class-dnnl-graph-op"]], "BiasAdd": [[63, "biasadd"]], "BatchNormTrainingBackward": [[62, "batchnormtrainingbackward"]], "class dnnl::graph::graph": [[4, "class-dnnl-graph-graph"]], "class dnnl::graph::logical_tensor": [[5, "class-dnnl-graph-logical-tensor"]], "Typedefs": [[5, "typedefs"], [288, "typedefs"], [295, "typedefs"], [298, "typedefs"], [306, "typedefs"], [312, "typedefs"], [318, "typedefs"], [321, "typedefs"], [325, "typedefs"], [326, "typedefs"], [331, "typedefs"], [332, "typedefs"], [336, "typedefs"], [339, "typedefs"], [340, "typedefs"], [341, "typedefs"], [343, "typedefs"], [344, "typedefs"], [522, "typedefs"]], "Naming Conventions": [[28, "naming-conventions"]], "Variable (Tensor) Names": [[28, "variable-tensor-names"]], "Formulas and Verbose Output": [[28, "formulas-and-verbose-output"]], "RNN-Specific Notation": [[28, "rnn-specific-notation"]], "Memory Formats Tags": [[28, "memory-formats-tags"]], "Convolution": [[29, "convolution"], [68, "convolution"], [294, "convolution"]], "Regular Convolution": [[29, "regular-convolution"], [68, "regular-convolution"]], "Convolution with Groups": [[29, "convolution-with-groups"], [68, "convolution-with-groups"]], "Convolution with Dilation": [[29, "convolution-with-dilation"], [68, "convolution-with-dilation"]], "Deconvolution (Transposed Convolution)": [[29, "deconvolution-transposed-convolution"]], "Example 1": [[29, "example-1"]], "Example 2": [[29, "example-2"]], "Example 3": [[29, "example-3"]], "Algorithms": [[29, "algorithms"]], "Direct Algorithm": [[29, "direct-algorithm"]], "Winograd Convolution": [[29, "winograd-convolution"]], "Automatic Algorithm Selection": [[29, "automatic-algorithm-selection"]], "BiasAddBackward": [[64, "biasaddbackward"]], "Clamp": [[65, "clamp"]], "ClampBackward": [[66, "clampbackward"]], "ConvolutionBackwardData": [[69, "convolutionbackwarddata"]], "ConvTranspose": [[71, "convtranspose"]], "ConvolutionBackwardWeights": [[70, "convolutionbackwardweights"]], "ConvTransposeBackwardData": [[72, "convtransposebackwarddata"]], "ConvTransposeBackwardWeights": [[73, "convtransposebackwardweights"]], "Dequantize": [[74, "dequantize"]], "Divide": [[75, "divide"]], "DynamicQuantize": [[77, "dynamicquantize"]], "DynamicDequantize": [[76, "dynamicdequantize"]], "Elu": [[78, "elu"]], "EluBackward": [[79, "elubackward"]], "End": [[80, "end"]], "Exp": [[81, "exp"]], "GELU": [[82, "gelu"]], "GELUBackward": [[83, "gelubackward"]], "GenIndex": [[84, "genindex"]], "Operation Attributes": [[84, "operation-attributes"], [85, "operation-attributes"]], "Input": [[84, "input"], [85, "input"]], "Output": [[84, "output"], [85, "output"]], "Supported Data Types": [[84, "supported-data-types"], [85, "supported-data-types"]], "GreaterEqual": [[85, "greaterequal"]], "HardSigmoid": [[87, "hardsigmoid"]], "GroupNorm": [[86, "groupnorm"]], "HardSwish": [[89, "hardswish"]], "HardSigmoidBackward": [[88, "hardsigmoidbackward"]], "HardSwishBackward": [[90, "hardswishbackward"]], "Interpolate": [[91, "interpolate"]], "LayerNorm": [[93, "layernorm"]], "InterpolateBackward": [[92, "interpolatebackward"]], "LayerNormBackward": [[94, "layernormbackward"]], "LeakyReLU": [[95, "leakyrelu"]], "Log": [[96, "log"]], "LogSoftmax": [[97, "logsoftmax"]], "LogSoftmaxBackward": [[98, "logsoftmaxbackward"]], "MatMul": [[99, "matmul"]], "MaxPool": [[101, "maxpool"]], "Maximum": [[100, "maximum"]], "MaxPoolBackward": [[102, "maxpoolbackward"]], "Minimum": [[103, "minimum"]], "Mish": [[104, "mish"]], "MishBackward": [[105, "mishbackward"]], "Multiply": [[106, "multiply"]], "Pow": [[107, "pow"]], "PReLUBackward": [[109, "prelubackward"]], "Broadcasting Rules": [[109, "broadcasting-rules"], [108, "broadcasting-rules"]], "PReLU": [[108, "prelu"], [145, "prelu"], [309, "prelu"]], "Reciprocal": [[111, "reciprocal"]], "Quantize": [[110, "quantize"]], "ReduceL2": [[113, "reducel2"]], "ReduceL1": [[112, "reducel1"]], "ReduceMax": [[114, "reducemax"]], "ReduceMean": [[115, "reducemean"]], "ReduceProd": [[117, "reduceprod"]], "ReduceMin": [[116, "reducemin"]], "ReLU": [[119, "relu"]], "ReduceSum": [[118, "reducesum"]], "ReLUBackward": [[120, "relubackward"]], "Round": [[122, "round"]], "Select": [[123, "select"]], "Broadcasting rules": [[123, "broadcasting-rules"]], "Sigmoid": [[124, "sigmoid"]], "SigmoidBackward": [[125, "sigmoidbackward"]], "SoftMaxBackward": [[127, "softmaxbackward"]], "SoftMax": [[126, "softmax"]], "SoftPlus": [[128, "softplus"]], "SoftPlusBackward": [[129, "softplusbackward"]], "Sqrt": [[130, "sqrt"]], "SqrtBackward": [[131, "sqrtbackward"]], "Square": [[132, "square"]], "SquaredDifference": [[133, "squareddifference"]], "StaticTranspose": [[135, "statictranspose"]], "StaticReshape": [[134, "staticreshape"]], "Tanh": [[137, "tanh"]], "Subtract": [[136, "subtract"]], "TypeCast": [[139, "typecast"]], "TanhBackward": [[138, "tanhbackward"]], "Wildcard": [[140, "wildcard"]], "OpenCL Interoperability": [[141, "opencl-interoperability"]], "OpenCL Buffers and USM Interfaces for Memory Objects": [[141, "opencl-buffers-and-usm-interfaces-for-memory-objects"]], "Handling Dependencies": [[141, "handling-dependencies"]], "Configuring oneDNN for Benchmarking": [[142, "configuring-onednn-for-benchmarking"]], "Threading Runtimes": [[142, "threading-runtimes"]], "Benchmarking Settings": [[142, "benchmarking-settings"]], "Whole Machine": [[142, "whole-machine"]], "Single NUMA Domain": [[142, "single-numa-domain"]], "Several Cores Within a NUMA Domain": [[142, "several-cores-within-a-numa-domain"]], "Persistent Cache": [[143, "persistent-cache"]], "Primitive": [[143, "primitive"]], "Relation to Primitive Cache": [[143, "relation-to-primitive-cache"]], "API Usage Example": [[143, "api-usage-example"], [143, "id1"]], "Engine": [[143, "engine"], [298, "engine"], [335, "engine"]], "Memory descriptor": [[143, "memory-descriptor"], [394, "memory-descriptor"]], "Pooling": [[144, "pooling"], [308, "pooling"]], "Profiling oneDNN Performance": [[147, "profiling-onednn-performance"]], "Features for VTune Profiler": [[147, "features-for-vtune-profiler"]], "ITT Tagging for Primitive Execution": [[147, "itt-tagging-for-primitive-execution"]], "Example: Profiling with VTune Profiler": [[147, "example-profiling-with-vtune-profiler"]], "Profiling for Hotspots": [[147, "profiling-for-hotspots"]], "Profiling for Microarchitecture Information": [[147, "profiling-for-microarchitecture-information"]], "Example: Profiling with Linux Perf": [[147, "example-profiling-with-linux-perf"]], "Primitive Cache": [[146, "primitive-cache"], [310, "primitive-cache"]], "Managing Memory Consumption": [[146, "managing-memory-consumption"]], "Profiling": [[146, "profiling"], [313, "profiling"]], "Reduction": [[148, "reduction"], [314, "reduction"]], "Notes": [[148, "notes"]], "RNN": [[151, "rnn"], [317, "rnn"]], "Cell Functions": [[151, "cell-functions"]], "Vanilla RNN": [[151, "vanilla-rnn"]], "LSTM": [[151, "lstm"]], "LSTM (or Vanilla LSTM)": [[151, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[151, "lstm-with-peephole"]], "LSTM with Projection (or LSTMP)": [[151, "lstm-with-projection-or-lstmp"]], "GRU": [[151, "gru"]], "Linear-Before-Reset GRU": [[151, "linear-before-reset-gru"]], "AUGRU": [[151, "augru"]], "Linear-Before-Reset AUGRU": [[151, "linear-before-reset-augru"]], "Considerations for Training": [[151, "considerations-for-training"]], "Resampling": [[150, "resampling"], [316, "resampling"]], "Nearest Neighbor Resampling": [[150, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[150, "bilinear-resampling"]], "Softmax": [[153, "softmax"], [320, "softmax"]], "Accumulation Mode": [[153, "accumulation-mode"], [287, "accumulation-mode"]], "Shuffle": [[152, "shuffle"], [319, "shuffle"]], "Data Layouts": [[152, "data-layouts"]], "Sum": [[154, "sum"], [322, "sum"]], "Using oneDNN with Threadpool-Based Threading": [[155, "using-onednn-with-threadpool-based-threading"]], "Training": [[156, "training"], [283, "training"]], "fp32 Training": [[156, "fp32-training"]], "bfp16 Training": [[156, "bfp16-training"]], "Bfloat16 Training": [[157, "bfloat16-training"]], "bfloat16 Support": [[157, "bfloat16-support"]], "bfloat16 Workflow": [[157, "bfloat16-workflow"]], "Memory representation": [[159, "memory-representation"]], "Operation representation": [[159, "operation-representation"]], "Transitioning from Intel MKL-DNN to oneDNN": [[158, "transitioning-from-intel-mkl-dnn-to-onednn"]], "Summary of Changes": [[158, "summary-of-changes"]], "Source Code Changes": [[158, "source-code-changes"]], "Build Process": [[158, "build-process"]], "Broken Compatibility with Intel MKL-DNN": [[158, "broken-compatibility-with-intel-mkl-dnn"]], "Information for Developers": [[158, "information-for-developers"]], "Batch-Reduce General Matrix Multiplication": [[160, "batch-reduce-general-matrix-multiplication"]], "Data transformation": [[161, "data-transformation"]], "Understanding Memory Formats": [[162, "understanding-memory-formats"]], "Nomenclature Used": [[162, "nomenclature-used"]], "Data Formats": [[162, "data-formats"]], "Plain Data Formats": [[162, "plain-data-formats"]], "NCHW": [[162, "nchw"]], "NHWC": [[162, "nhwc"]], "CHWN": [[162, "chwn"]], "Relevant Reading": [[162, "relevant-reading"]], "Generalization of the Plain Data Layout": [[162, "generalization-of-the-plain-data-layout"]], "Strides": [[162, "strides"]], "Blocked Layout": [[162, "blocked-layout"]], "What if Channels Are not Multiples of 8 (or 16)?": [[162, "what-if-channels-are-not-multiples-of-8-or-16"]], "Verbose Mode": [[163, "verbose-mode"]], "Troubleshooting primitive creation issues": [[163, "troubleshooting-primitive-creation-issues"]], "Profiling a workload": [[163, "profiling-a-workload"]], "Understanding why a given implementation is dispatched": [[163, "understanding-why-a-given-implementation-is-dispatched"]], "Enable ONEDNN_VERBOSE with timestamps": [[163, "enable-onednn-verbose-with-timestamps"]], "Decrypting the Output": [[163, "decrypting-the-output"]], "Profiling with VTune(TM) Profiler": [[165, "profiling-with-vtune-tm-profiler"]], "Verbose Message Catalogue": [[164, "verbose-message-catalogue"]], "Primitive Creation/Dispatching": [[164, "primitive-creation-dispatching"]], "Engine Creation": [[164, "engine-creation"]], "Memory Creation and Related Operations": [[164, "memory-creation-and-related-operations"]], "enum dnnl::accumulation_mode": [[167, "enum-dnnl-accumulation-mode"]], "Enum Values": [[167, "enum-values"], [169, "enum-values"], [168, "enum-values"], [170, "enum-values"], [171, "enum-values"], [172, "enum-values"], [173, "enum-values"], [174, "enum-values"], [175, "enum-values"], [176, "enum-values"], [177, "enum-values"], [178, "enum-values"], [179, "enum-values"], [181, "enum-values"], [180, "enum-values"], [183, "enum-values"], [182, "enum-values"], [185, "enum-values"], [184, "enum-values"], [186, "enum-values"], [187, "enum-values"], [190, "enum-values"], [191, "enum-values"], [192, "enum-values"], [193, "enum-values"], [195, "enum-values"], [194, "enum-values"], [197, "enum-values"], [196, "enum-values"], [199, "enum-values"], [198, "enum-values"], [200, "enum-values"], [201, "enum-values"], [202, "enum-values"], [203, "enum-values"], [204, "enum-values"], [205, "enum-values"], [207, "enum-values"], [206, "enum-values"], [209, "enum-values"], [208, "enum-values"], [210, "enum-values"], [211, "enum-values"], [212, "enum-values"], [213, "enum-values"], [215, "enum-values"], [214, "enum-values"], [216, "enum-values"], [217, "enum-values"], [219, "enum-values"], [218, "enum-values"], [221, "enum-values"], [220, "enum-values"], [223, "enum-values"], [222, "enum-values"], [224, "enum-values"], [225, "enum-values"], [226, "enum-values"]], "enum api_kind": [[166, "enum-api-kind"]], "enum dnnl_alg_kind_t": [[169, "enum-dnnl-alg-kind-t"]], "enum dnnl_accumulation_mode_t": [[168, "enum-dnnl-accumulation-mode-t"]], "enum dnnl::algorithm": [[170, "enum-dnnl-algorithm"]], "enum dnnl::cpu_isa": [[171, "enum-dnnl-cpu-isa"]], "enum dnnl::cpu_isa_hints": [[172, "enum-dnnl-cpu-isa-hints"]], "enum dnnl_cpu_isa_hints_t": [[173, "enum-dnnl-cpu-isa-hints-t"]], "enum dnnl_cpu_isa_t": [[174, "enum-dnnl-cpu-isa-t"]], "enum dnnl_data_type_t": [[175, "enum-dnnl-data-type-t"]], "enum dnnl::engine::kind": [[176, "enum-dnnl-engine-kind"]], "enum dnnl_engine_kind_t": [[177, "enum-dnnl-engine-kind-t"]], "enum dnnl_format_kind_t": [[178, "enum-dnnl-format-kind-t"]], "enum dnnl_format_tag_t": [[179, "enum-dnnl-format-tag-t"]], "enum dnnl_fpmath_mode_t": [[181, "enum-dnnl-fpmath-mode-t"]], "enum dnnl::fpmath_mode": [[180, "enum-dnnl-fpmath-mode"]], "enum dnnl::graph::logical_tensor::data_type": [[183, "enum-dnnl-graph-logical-tensor-data-type"]], "enum dnnl_graph_layout_type_t": [[182, "enum-dnnl-graph-layout-type-t"]], "enum dnnl::graph::logical_tensor::property_type": [[185, "enum-dnnl-graph-logical-tensor-property-type"]], "enum dnnl::graph::logical_tensor::layout_type": [[184, "enum-dnnl-graph-logical-tensor-layout-type"]], "enum dnnl::graph::op::attr": [[186, "enum-dnnl-graph-op-attr"]], "enum dnnl_graph_op_attr_t": [[187, "enum-dnnl-graph-op-attr-t"]], "enum dnnl::graph::op::kind": [[188, "enum-dnnl-graph-op-kind"]], "enum dnnl_graph_op_kind_t": [[189, "enum-dnnl-graph-op-kind-t"]], "enum dnnl::graph::partition::policy": [[190, "enum-dnnl-graph-partition-policy"]], "enum dnnl_graph_partition_policy_t": [[191, "enum-dnnl-graph-partition-policy-t"]], "enum dnnl::graph::status": [[192, "enum-dnnl-graph-status"]], "enum dnnl_graph_tensor_property_t": [[193, "enum-dnnl-graph-tensor-property-t"]], "enum dnnl::memory::format_kind": [[195, "enum-dnnl-memory-format-kind"]], "enum dnnl::memory::data_type": [[194, "enum-dnnl-memory-data-type"]], "enum dnnl::memory::sparse_encoding": [[197, "enum-dnnl-memory-sparse-encoding"]], "enum dnnl::memory::format_tag": [[196, "enum-dnnl-memory-format-tag"]], "enum dnnl_normalization_flags_t": [[199, "enum-dnnl-normalization-flags-t"]], "enum dnnl::normalization_flags": [[198, "enum-dnnl-normalization-flags"]], "enum dnnl::ocl_interop::memory_kind": [[200, "enum-dnnl-ocl-interop-memory-kind"]], "enum dnnl_ocl_interop_memory_kind_t": [[201, "enum-dnnl-ocl-interop-memory-kind-t"]], "enum dnnl_pack_type_t": [[202, "enum-dnnl-pack-type-t"]], "enum dnnl::primitive::kind": [[203, "enum-dnnl-primitive-kind"]], "enum dnnl_primitive_kind_t": [[204, "enum-dnnl-primitive-kind-t"]], "enum dnnl::profiling_data_kind": [[205, "enum-dnnl-profiling-data-kind"]], "enum dnnl::prop_kind": [[207, "enum-dnnl-prop-kind"]], "enum dnnl_profiling_data_kind_t": [[206, "enum-dnnl-profiling-data-kind-t"]], "enum dnnl::query": [[209, "enum-dnnl-query"]], "enum dnnl_prop_kind_t": [[208, "enum-dnnl-prop-kind-t"]], "enum dnnl_query_t": [[210, "enum-dnnl-query-t"]], "enum dnnl::rnn_direction": [[211, "enum-dnnl-rnn-direction"]], "enum dnnl_rnn_direction_t": [[212, "enum-dnnl-rnn-direction-t"]], "enum dnnl::rnn_flags": [[213, "enum-dnnl-rnn-flags"]], "enum dnnl::rounding_mode": [[215, "enum-dnnl-rounding-mode"]], "enum dnnl_rnn_flags_t": [[214, "enum-dnnl-rnn-flags-t"]], "enum dnnl_rounding_mode_t": [[216, "enum-dnnl-rounding-mode-t"]], "enum dnnl::scratchpad_mode": [[217, "enum-dnnl-scratchpad-mode"]], "enum dnnl_sparse_encoding_t": [[219, "enum-dnnl-sparse-encoding-t"]], "enum dnnl_scratchpad_mode_t": [[218, "enum-dnnl-scratchpad-mode-t"]], "enum dnnl_status_t": [[221, "enum-dnnl-status-t"]], "enum dnnl::status": [[220, "enum-dnnl-status"]], "enum dnnl_stream_flags_t": [[223, "enum-dnnl-stream-flags-t"]], "enum dnnl::stream::flags": [[222, "enum-dnnl-stream-flags"]], "enum dnnl::sycl_interop::memory_kind": [[224, "enum-dnnl-sycl-interop-memory-kind"]], "enum dnnl_sycl_interop_memory_kind_t": [[225, "enum-dnnl-sycl-interop-memory-kind-t"]], "augru.cpp": [[227, "augru-cpp"]], "enum dnnl::ukernel::pack_type": [[226, "enum-dnnl-ukernel-pack-type"]], "batch_normalization.cpp": [[228, "batch-normalization-cpp"]], "binary.cpp": [[229, "binary-cpp"]], "bnorm_u8_via_binary_postops.cpp": [[230, "bnorm-u8-via-binary-postops-cpp"]], "cnn_inference_f32.c": [[231, "cnn-inference-f32-c"]], "cnn_inference_f32.cpp": [[232, "cnn-inference-f32-cpp"]], "cnn_inference_int8.cpp": [[233, "cnn-inference-int8-cpp"]], "cnn_training_bf16.cpp": [[234, "cnn-training-bf16-cpp"]], "cnn_training_f32.cpp": [[235, "cnn-training-f32-cpp"]], "concat.cpp": [[236, "concat-cpp"]], "convolution.cpp": [[237, "convolution-cpp"]], "cpu_brgemm.cpp": [[238, "cpu-brgemm-cpp"]], "cpu_cnn_training_f32.c": [[239, "cpu-cnn-training-f32-c"]], "cpu_inference_int8.cpp": [[241, "cpu-inference-int8-cpp"]], "cpu_getting_started.cpp": [[240, "cpu-getting-started-cpp"]], "cpu_matmul_coo.cpp": [[242, "cpu-matmul-coo-cpp"]], "cpu_matmul_csr.cpp": [[243, "cpu-matmul-csr-cpp"]], "cpu_matmul_weights_compression.cpp": [[245, "cpu-matmul-weights-compression-cpp"]], "cpu_matmul_quantization.cpp": [[244, "cpu-matmul-quantization-cpp"]], "cpu_rnn_inference_int8.cpp": [[247, "cpu-rnn-inference-int8-cpp"]], "cpu_rnn_inference_f32.cpp": [[246, "cpu-rnn-inference-f32-cpp"]], "cpu_sgemm_and_matmul.cpp": [[248, "cpu-sgemm-and-matmul-cpp"]], "cpu_single_op_partition.cpp": [[249, "cpu-single-op-partition-cpp"]], "cross_engine_reorder.cpp": [[251, "cross-engine-reorder-cpp"]], "cross_engine_reorder.c": [[250, "cross-engine-reorder-c"]], "deconvolution.cpp": [[252, "deconvolution-cpp"]], "eltwise.cpp": [[253, "eltwise-cpp"]], "getting_started.cpp": [[254, "getting-started-cpp"]], "gpu_opencl_getting_started.cpp": [[255, "gpu-opencl-getting-started-cpp"]], "group_normalization.cpp": [[257, "group-normalization-cpp"]], "gpu_opencl_interop.cpp": [[256, "gpu-opencl-interop-cpp"]], "inference_int8_matmul.cpp": [[258, "inference-int8-matmul-cpp"]], "inner_product.cpp": [[259, "inner-product-cpp"]], "layer_normalization.cpp": [[260, "layer-normalization-cpp"]], "lbr_gru.cpp": [[261, "lbr-gru-cpp"]], "lrn.cpp": [[262, "lrn-cpp"]], "lstm.cpp": [[263, "lstm-cpp"]], "matmul.cpp": [[264, "matmul-cpp"]], "memory_format_propagation.cpp": [[265, "memory-format-propagation-cpp"]], "pooling.cpp": [[267, "pooling-cpp"]], "performance_profiling.cpp": [[266, "performance-profiling-cpp"]], "reduction.cpp": [[269, "reduction-cpp"]], "prelu.cpp": [[268, "prelu-cpp"]], "resampling.cpp": [[271, "resampling-cpp"]], "reorder.cpp": [[270, "reorder-cpp"]], "shuffle.cpp": [[273, "shuffle-cpp"]], "rnn_training_f32.cpp": [[272, "rnn-training-f32-cpp"]], "sum.cpp": [[275, "sum-cpp"]], "softmax.cpp": [[274, "softmax-cpp"]], "sycl_getting_started.cpp": [[276, "sycl-getting-started-cpp"]], "sycl_interop_buffer.cpp": [[277, "sycl-interop-buffer-cpp"]], "vanilla_rnn.cpp": [[279, "vanilla-rnn-cpp"]], "sycl_single_op_partition.cpp": [[278, "sycl-single-op-partition-cpp"]], "Global Namespace": [[281, "global-namespace"]], "Global Functions": [[281, "global-functions"], [287, "global-functions"], [289, "global-functions"], [288, "global-functions"], [290, "global-functions"], [291, "global-functions"], [293, "global-functions"], [294, "global-functions"], [297, "global-functions"], [296, "global-functions"], [298, "global-functions"], [299, "global-functions"], [300, "global-functions"], [301, "global-functions"], [303, "global-functions"], [304, "global-functions"], [305, "global-functions"], [306, "global-functions"], [307, "global-functions"], [308, "global-functions"], [309, "global-functions"], [310, "global-functions"], [313, "global-functions"], [312, "global-functions"], [314, "global-functions"], [315, "global-functions"], [316, "global-functions"], [317, "global-functions"], [318, "global-functions"], [319, "global-functions"], [320, "global-functions"], [321, "global-functions"], [322, "global-functions"], [323, "global-functions"], [325, "global-functions"], [324, "global-functions"], [326, "global-functions"], [331, "global-functions"], [332, "global-functions"], [333, "global-functions"], [334, "global-functions"], [335, "global-functions"], [336, "global-functions"], [339, "global-functions"], [338, "global-functions"], [340, "global-functions"], [341, "global-functions"], [343, "global-functions"], [344, "global-functions"], [351, "global-functions"], [350, "global-functions"], [353, "global-functions"], [352, "global-functions"], [354, "global-functions"]], "weights_decompression_matmul.cpp": [[280, "weights-decompression-matmul-cpp"]], "Fusion Patterns": [[283, "fusion-patterns"]], "Floating Point Patterns": [[283, "floating-point-patterns"]], "Quantized Patterns": [[283, "quantized-patterns"]], "Supported Operations": [[285, "supported-operations"]], "Programming Model": [[284, "programming-model"], [445, "programming-model"]], "oneDNN API": [[286, "onednn-api"]], "BLAS functions": [[291, "blas-functions"]], "Common API": [[292, "common-api"]], "Data types": [[295, "data-types"]], "Macros": [[295, "macros"], [306, "macros"], [312, "macros"], [318, "macros"], [338, "macros"]], "Deconvolution": [[296, "deconvolution"]], "Runtime interoperability API": [[302, "runtime-interoperability-api"], [337, "runtime-interoperability-api"]], "LRN": [[304, "lrn"]], "Memory": [[306, "memory"]], "OpenCL interoperability API": [[307, "opencl-interoperability-api"], [339, "opencl-interoperability-api"]], "Common": [[312, "common"]], "Service": [[318, "service"]], "Stream": [[321, "stream"]], "SYCL interoperability API": [[323, "sycl-interoperability-api"], [343, "sycl-interoperability-api"]], "Ukernels": [[325, "ukernels"], [582, "ukernels"]], "Threadpool interoperability API": [[324, "threadpool-interoperability-api"]], "BRGeMM ukernel": [[326, "brgemm-ukernel"]], "Transform ukernel": [[327, "transform-ukernel"]], "Utilities": [[329, "utilities"], [345, "utilities"]], "ukernel utils": [[328, "ukernel-utils"]], "Graph API": [[330, "graph-api"]], "Allocator": [[331, "allocator"]], "Compiled Partition Cache": [[333, "compiled-partition-cache"]], "Status": [[342, "status"]], "Interoperability with DPC++ and OpenCL": [[347, "interoperability-with-dpc-and-opencl"]], "oneAPI Deep Neural Network Library (oneDNN) Developer Guide and Reference": [[346, "oneapi-deep-neural-network-library-onednn-developer-guide-and-reference"]], "namespace dnnl::graph": [[349, "namespace-dnnl-graph"]], "namespace dnnl": [[348, "namespace-dnnl"]], "namespace dnnl::graph::sycl_interop": [[351, "namespace-dnnl-graph-sycl-interop"]], "namespace dnnl::graph::ocl_interop": [[350, "namespace-dnnl-graph-ocl-interop"]], "namespace dnnl::sycl_interop": [[353, "namespace-dnnl-sycl-interop"]], "namespace dnnl::ocl_interop": [[352, "namespace-dnnl-ocl-interop"]], "namespace dnnl::ukernel": [[355, "namespace-dnnl-ukernel"]], "namespace dnnl::threadpool_interop": [[354, "namespace-dnnl-threadpool-interop"]], "namespace oneapi": [[356, "namespace-oneapi"]], "namespace std": [[357, "namespace-std"]], "Orphans": [[359, "orphans"]], "namespace sycl": [[358, "namespace-sycl"]], "AUGRU RNN Primitive Example": [[360, "augru-rnn-primitive-example"]], "<Untitled>": [[361, "untitled"], [363, "untitled"], [365, "untitled"], [367, "untitled"], [374, "untitled"], [376, "untitled"], [382, "untitled"], [387, "untitled"], [391, "untitled"], [393, "untitled"], [403, "untitled"], [405, "untitled"], [407, "untitled"], [409, "untitled"], [411, "untitled"], [414, "untitled"], [416, "untitled"], [418, "untitled"], [422, "untitled"], [424, "untitled"], [426, "untitled"], [428, "untitled"], [430, "untitled"], [433, "untitled"], [435, "untitled"], [437, "untitled"], [441, "untitled"], [443, "untitled"]], "Batch Normalization Primitive Example": [[362, "batch-normalization-primitive-example"]], "Binary Primitive Example": [[364, "binary-primitive-example"]], "Bnorm u8 by binary post-ops example": [[366, "bnorm-u8-by-binary-post-ops-example"]], "CNN f32 inference example": [[368, "cnn-f32-inference-example"], [369, "cnn-f32-inference-example"]], "CNN int8 inference example": [[370, "cnn-int8-inference-example"]], "CNN bf16 training example": [[371, "cnn-bf16-training-example"]], "CNN f32 training example": [[372, "cnn-f32-training-example"], [378, "cnn-f32-training-example"]], "Concat Primitive Example": [[373, "concat-primitive-example"]], "Convolution Primitive Example": [[375, "convolution-primitive-example"]], "BRGeMM ukernel example": [[377, "brgemm-ukernel-example"]], "MatMul Primitive Example": [[379, "matmul-primitive-example"], [380, "matmul-primitive-example"], [383, "matmul-primitive-example"]], "MatMul Tutorial: Quantization": [[381, "matmul-tutorial-quantization"]], "RNN int8 inference example": [[385, "rnn-int8-inference-example"]], "RNN f32 inference example": [[384, "rnn-f32-inference-example"]], "MatMul Tutorial: Comparison with SGEMM": [[386, "matmul-tutorial-comparison-with-sgemm"]], "Reorder between CPU and GPU engines": [[389, "reorder-between-cpu-and-gpu-engines"], [388, "reorder-between-cpu-and-gpu-engines"]], "Public headers": [[389, "public-headers"], [394, "public-headers"], [395, "public-headers"], [396, "public-headers"], [397, "public-headers"], [398, "public-headers"], [399, "public-headers"], [400, "public-headers"], [401, "public-headers"], [438, "public-headers"]], "cross_engine_reorder_tutorial() function": [[389, "cross-engine-reorder-tutorial-function"]], "Engine and stream": [[389, "engine-and-stream"], [394, "engine-and-stream"], [395, "engine-and-stream"], [438, "engine-and-stream"]], "Wrapping data into oneDNN GPU memory object": [[389, "wrapping-data-into-onednn-gpu-memory-object"]], "Creating a ReLU primitive": [[389, "creating-a-relu-primitive"], [394, "creating-a-relu-primitive"]], "Getting results from a oneDNN GPU memory object": [[389, "getting-results-from-a-onednn-gpu-memory-object"]], "Executing all primitives": [[389, "executing-all-primitives"]], "Validate the result": [[389, "validate-the-result"]], "Deconvolution Primitive Example": [[390, "deconvolution-primitive-example"]], "Element-Wise Primitive Example": [[392, "element-wise-primitive-example"]], "Getting started": [[394, "getting-started"]], "getting_started_tutorial() function": [[394, "getting-started-tutorial-function"]], "Data preparation (code outside of oneDNN)": [[394, "data-preparation-code-outside-of-onednn"]], "Wrapping data into a oneDNN memory object": [[394, "wrapping-data-into-a-onednn-memory-object"]], "Alternative way to create a memory descriptor": [[394, "alternative-way-to-create-a-memory-descriptor"]], "Creating a memory object": [[394, "creating-a-memory-object"]], "Executing the ReLU primitive": [[394, "executing-the-relu-primitive"]], "Obtaining the result and validation": [[394, "obtaining-the-result-and-validation"]], "main() function": [[394, "main-function"], [438, "main-function"]], "Getting started on GPU with OpenCL extensions API": [[395, "getting-started-on-gpu-with-opencl-extensions-api"]], "gpu_opencl_interop_tutorial() function": [[395, "gpu-opencl-interop-tutorial-function"]], "Wrapping data into oneDNN memory object": [[395, "wrapping-data-into-onednn-memory-object"], [438, "wrapping-data-into-onednn-memory-object"]], "Initialize the data by executing a custom OpenCL kernel": [[395, "initialize-the-data-by-executing-a-custom-opencl-kernel"]], "Create and execute a primitive": [[395, "create-and-execute-a-primitive"], [438, "create-and-execute-a-primitive"]], "Validate the results": [[395, "validate-the-results"], [438, "validate-the-results"]], "Getting started on CPU with Graph API": [[396, "getting-started-on-cpu-with-graph-api"]], "cpu_getting_started_tutorial() function": [[396, "cpu-getting-started-tutorial-function"]], "Build Graph and Get Partitions": [[396, "build-graph-and-get-partitions"], [397, "build-graph-and-get-partitions"], [398, "build-graph-and-get-partitions"], [401, "build-graph-and-get-partitions"]], "Compile and Execute Partition": [[396, "compile-and-execute-partition"], [397, "compile-and-execute-partition"], [398, "compile-and-execute-partition"], [399, "compile-and-execute-partition"], [400, "compile-and-execute-partition"], [401, "compile-and-execute-partition"]], "Convolution int8 inference example with Graph API": [[397, "convolution-int8-inference-example-with-graph-api"]], "simple_pattern_int8() function": [[397, "simple-pattern-int8-function"]], "Single op partition on CPU": [[398, "single-op-partition-on-cpu"]], "cpu_single_op_partition_tutorial() function": [[398, "cpu-single-op-partition-tutorial-function"]], "Getting started with OpenCL extensions and Graph API": [[399, "getting-started-with-opencl-extensions-and-graph-api"]], "ocl_getting_started_tutorial() function": [[399, "ocl-getting-started-tutorial-function"]], "Build Graph and Get Partitions.": [[399, "build-graph-and-get-partitions"], [400, "build-graph-and-get-partitions"]], "Getting started with SYCL extensions API and Graph API": [[400, "getting-started-with-sycl-extensions-api-and-graph-api"]], "sycl_getting_started_tutorial() function": [[400, "sycl-getting-started-tutorial-function"]], "Single op partition on GPU": [[401, "single-op-partition-on-gpu"]], "sycl_single_op_partition_tutorial() function": [[401, "sycl-single-op-partition-tutorial-function"]], "Group Normalization Primitive Example": [[402, "group-normalization-primitive-example"]], "MatMul Tutorial: INT8 Inference": [[404, "matmul-tutorial-int8-inference"]], "Inner Product Primitive Example": [[406, "inner-product-primitive-example"]], "Layer Normalization Primitive Example": [[408, "layer-normalization-primitive-example"]], "Linear-Before-Reset GRU RNN Primitive Example": [[410, "linear-before-reset-gru-rnn-primitive-example"]], "Legal Information": [[412, "legal-information"]], "Trademark Information": [[412, "trademark-information"]], "Local Response Normalization Primitive Example": [[413, "local-response-normalization-primitive-example"]], "LSTM RNN Primitive Example": [[415, "lstm-rnn-primitive-example"]], "Matmul Primitive Example": [[417, "matmul-primitive-example"]], "Memory Format Propagation": [[419, "memory-format-propagation"]], "Introduction to the tutorial": [[419, "introduction-to-the-tutorial"]], "memory_format_propagation() function": [[419, "memory-format-propagation-function"]], "Initialization": [[419, "initialization"]], "Create convolution and pooling primitives": [[419, "create-convolution-and-pooling-primitives"]], "Create source and destination memory objects": [[419, "create-source-and-destination-memory-objects"]], "Determine if source and destination need to be reordered": [[419, "determine-if-source-and-destination-need-to-be-reordered"]], "Allocate intermediate buffers if necessary": [[419, "allocate-intermediate-buffers-if-necessary"]], "Perform reorders for source data if necessary": [[419, "perform-reorders-for-source-data-if-necessary"]], "Create and execute convolution and pooling primitives": [[419, "create-and-execute-convolution-and-pooling-primitives"]], "Reorder destination data if necessary": [[419, "reorder-destination-data-if-necessary"]], "Results": [[419, "results"]], "Performance Profiling Example": [[420, "performance-profiling-example"]], "Walkthrough": [[420, "walkthrough"]], "Naive Implementation": [[420, "naive-implementation"]], "Blocked format implementation": [[420, "blocked-format-implementation"]], "Fused Implementation": [[420, "fused-implementation"]], "Performance summary": [[420, "performance-summary"]], "Configuration Notice": [[420, "configuration-notice"]], "Pooling Primitive Example": [[421, "pooling-primitive-example"]], "Primitive Example": [[423, "primitive-example"]], "Reduction Primitive Example": [[425, "reduction-primitive-example"]], "Reorder Primitive Example": [[427, "reorder-primitive-example"]], "Resampling Primitive Example": [[429, "resampling-primitive-example"]], "RNN f32 training example": [[431, "rnn-f32-training-example"]], "Shuffle Primitive Example": [[432, "shuffle-primitive-example"]], "Softmax Primitive Example": [[434, "softmax-primitive-example"]], "Sum Primitive Example": [[436, "sum-primitive-example"]], "Getting started on both CPU and GPU with SYCL extensions API": [[438, "getting-started-on-both-cpu-and-gpu-with-sycl-extensions-api"]], "sycl_interop_buffer_tutorial() function": [[438, "sycl-interop-buffer-tutorial-function"]], "Initialize the data executing a custom SYCL kernel": [[438, "initialize-the-data-executing-a-custom-sycl-kernel"]], "Todo List": [[439, "todo-list"]], "Vanilla RNN Primitive Example": [[440, "vanilla-rnn-primitive-example"]], "MatMul Tutorial: weights decompression": [[442, "matmul-tutorial-weights-decompression"]], "Performance Profiling and Inspection": [[444, "performance-profiling-and-inspection"]], "struct cpu_deletor_t": [[447, "struct-cpu-deletor-t"]], "struct args_t": [[446, "struct-args-t"]], "struct dnnl::augru_backward::primitive_desc": [[449, "struct-dnnl-augru-backward-primitive-desc"]], "Inherited Members": [[449, "inherited-members"], [448, "inherited-members"], [451, "inherited-members"], [450, "inherited-members"], [453, "inherited-members"], [452, "inherited-members"], [455, "inherited-members"], [454, "inherited-members"], [457, "inherited-members"], [456, "inherited-members"], [459, "inherited-members"], [461, "inherited-members"], [460, "inherited-members"], [462, "inherited-members"], [463, "inherited-members"], [465, "inherited-members"], [464, "inherited-members"], [466, "inherited-members"], [467, "inherited-members"], [469, "inherited-members"], [468, "inherited-members"], [471, "inherited-members"], [470, "inherited-members"], [473, "inherited-members"], [472, "inherited-members"], [474, "inherited-members"], [475, "inherited-members"], [476, "inherited-members"], [478, "inherited-members"], [483, "inherited-members"], [485, "inherited-members"], [484, "inherited-members"], [487, "inherited-members"], [486, "inherited-members"], [488, "inherited-members"], [489, "inherited-members"], [490, "inherited-members"], [493, "inherited-members"], [495, "inherited-members"], [494, "inherited-members"], [496, "inherited-members"], [497, "inherited-members"], [498, "inherited-members"], [499, "inherited-members"], [501, "inherited-members"], [500, "inherited-members"], [503, "inherited-members"], [502, "inherited-members"], [505, "inherited-members"], [504, "inherited-members"], [506, "inherited-members"], [507, "inherited-members"], [508, "inherited-members"], [509, "inherited-members"], [510, "inherited-members"], [511, "inherited-members"], [512, "inherited-members"], [513, "inherited-members"], [514, "inherited-members"], [515, "inherited-members"], [516, "inherited-members"], [517, "inherited-members"], [519, "inherited-members"], [518, "inherited-members"], [520, "inherited-members"], [522, "inherited-members"], [525, "inherited-members"], [524, "inherited-members"], [526, "inherited-members"], [527, "inherited-members"], [528, "inherited-members"], [530, "inherited-members"], [531, "inherited-members"], [533, "inherited-members"], [532, "inherited-members"], [534, "inherited-members"], [536, "inherited-members"], [538, "inherited-members"], [541, "inherited-members"], [540, "inherited-members"], [542, "inherited-members"], [543, "inherited-members"], [545, "inherited-members"], [544, "inherited-members"], [546, "inherited-members"], [547, "inherited-members"], [549, "inherited-members"], [548, "inherited-members"], [551, "inherited-members"], [550, "inherited-members"], [553, "inherited-members"], [552, "inherited-members"], [554, "inherited-members"], [555, "inherited-members"], [556, "inherited-members"], [557, "inherited-members"], [558, "inherited-members"], [560, "inherited-members"], [561, "inherited-members"], [562, "inherited-members"], [567, "inherited-members"], [566, "inherited-members"], [568, "inherited-members"], [569, "inherited-members"], [571, "inherited-members"], [570, "inherited-members"], [572, "inherited-members"]], "struct dnnl::augru_backward": [[448, "struct-dnnl-augru-backward"]], "struct dnnl::augru_forward::primitive_desc": [[451, "struct-dnnl-augru-forward-primitive-desc"]], "struct dnnl::augru_forward": [[450, "struct-dnnl-augru-forward"]], "struct dnnl::batch_normalization_backward::primitive_desc": [[453, "struct-dnnl-batch-normalization-backward-primitive-desc"]], "struct dnnl::batch_normalization_backward": [[452, "struct-dnnl-batch-normalization-backward"]], "struct dnnl::batch_normalization_forward::primitive_desc": [[455, "struct-dnnl-batch-normalization-forward-primitive-desc"]], "struct dnnl::batch_normalization_forward": [[454, "struct-dnnl-batch-normalization-forward"]], "struct dnnl::binary::primitive_desc": [[457, "struct-dnnl-binary-primitive-desc"]], "struct dnnl::binary": [[456, "struct-dnnl-binary"]], "struct dnnl::concat": [[459, "struct-dnnl-concat"]], "struct dnnl_brgemm": [[458, "struct-dnnl-brgemm"]], "struct dnnl::convolution_backward_data": [[461, "struct-dnnl-convolution-backward-data"]], "struct dnnl::concat::primitive_desc": [[460, "struct-dnnl-concat-primitive-desc"]], "struct dnnl::convolution_backward_data::primitive_desc": [[462, "struct-dnnl-convolution-backward-data-primitive-desc"]], "struct dnnl::convolution_backward_weights": [[463, "struct-dnnl-convolution-backward-weights"]], "struct dnnl::convolution_forward": [[465, "struct-dnnl-convolution-forward"]], "struct dnnl::convolution_backward_weights::primitive_desc": [[464, "struct-dnnl-convolution-backward-weights-primitive-desc"]], "struct dnnl::convolution_forward::primitive_desc": [[466, "struct-dnnl-convolution-forward-primitive-desc"]], "struct dnnl::deconvolution_backward_data": [[467, "struct-dnnl-deconvolution-backward-data"]], "struct dnnl::deconvolution_backward_weights": [[469, "struct-dnnl-deconvolution-backward-weights"]], "struct dnnl::deconvolution_backward_data::primitive_desc": [[468, "struct-dnnl-deconvolution-backward-data-primitive-desc"]], "struct dnnl::deconvolution_forward": [[471, "struct-dnnl-deconvolution-forward"]], "struct dnnl::deconvolution_backward_weights::primitive_desc": [[470, "struct-dnnl-deconvolution-backward-weights-primitive-desc"]], "struct dnnl::eltwise_backward": [[473, "struct-dnnl-eltwise-backward"]], "struct dnnl::deconvolution_forward::primitive_desc": [[472, "struct-dnnl-deconvolution-forward-primitive-desc"]], "struct dnnl::eltwise_backward::primitive_desc": [[474, "struct-dnnl-eltwise-backward-primitive-desc"]], "struct dnnl::eltwise_forward": [[475, "struct-dnnl-eltwise-forward"]], "struct dnnl::eltwise_forward::primitive_desc": [[476, "struct-dnnl-eltwise-forward-primitive-desc"]], "struct dnnl_engine": [[477, "struct-dnnl-engine"]], "struct dnnl::error": [[479, "struct-dnnl-error"]], "struct dnnl::engine": [[478, "struct-dnnl-engine"]], "struct dnnl_graph_inplace_pair_t": [[481, "struct-dnnl-graph-inplace-pair-t"]], "Fields": [[481, "fields"], [480, "fields"], [482, "fields"], [563, "fields"], [573, "fields"]], "struct dnnl_exec_arg_t": [[480, "struct-dnnl-exec-arg-t"]], "struct dnnl::group_normalization_backward": [[483, "struct-dnnl-group-normalization-backward"]], "struct dnnl_graph_logical_tensor_t": [[482, "struct-dnnl-graph-logical-tensor-t"]], "struct dnnl::group_normalization_forward": [[485, "struct-dnnl-group-normalization-forward"]], "struct dnnl::group_normalization_backward::primitive_desc": [[484, "struct-dnnl-group-normalization-backward-primitive-desc"]], "struct dnnl::gru_backward": [[487, "struct-dnnl-gru-backward"]], "struct dnnl::group_normalization_forward::primitive_desc": [[486, "struct-dnnl-group-normalization-forward-primitive-desc"]], "struct dnnl::gru_backward::primitive_desc": [[488, "struct-dnnl-gru-backward-primitive-desc"]], "struct dnnl::gru_forward": [[489, "struct-dnnl-gru-forward"]], "struct dnnl::gru_forward::primitive_desc": [[490, "struct-dnnl-gru-forward-primitive-desc"]], "template struct dnnl::handle": [[491, "template-struct-dnnl-handle"]], "template struct dnnl::handle_traits": [[492, "template-struct-dnnl-handle-traits"]], "struct dnnl::inner_product_backward_data": [[493, "struct-dnnl-inner-product-backward-data"]], "struct dnnl::inner_product_backward_weights": [[495, "struct-dnnl-inner-product-backward-weights"]], "struct dnnl::inner_product_backward_data::primitive_desc": [[494, "struct-dnnl-inner-product-backward-data-primitive-desc"]], "struct dnnl::inner_product_backward_weights::primitive_desc": [[496, "struct-dnnl-inner-product-backward-weights-primitive-desc"]], "struct dnnl::inner_product_forward": [[497, "struct-dnnl-inner-product-forward"]], "struct dnnl::inner_product_forward::primitive_desc": [[498, "struct-dnnl-inner-product-forward-primitive-desc"]], "struct dnnl::layer_normalization_backward": [[499, "struct-dnnl-layer-normalization-backward"]], "struct dnnl::layer_normalization_forward": [[501, "struct-dnnl-layer-normalization-forward"]], "struct dnnl::layer_normalization_backward::primitive_desc": [[500, "struct-dnnl-layer-normalization-backward-primitive-desc"]], "struct dnnl::lbr_augru_backward": [[503, "struct-dnnl-lbr-augru-backward"]], "struct dnnl::layer_normalization_forward::primitive_desc": [[502, "struct-dnnl-layer-normalization-forward-primitive-desc"]], "struct dnnl::lbr_augru_forward": [[505, "struct-dnnl-lbr-augru-forward"]], "struct dnnl::lbr_augru_backward::primitive_desc": [[504, "struct-dnnl-lbr-augru-backward-primitive-desc"]], "struct dnnl::lbr_augru_forward::primitive_desc": [[506, "struct-dnnl-lbr-augru-forward-primitive-desc"]], "struct dnnl::lbr_gru_backward": [[507, "struct-dnnl-lbr-gru-backward"]], "struct dnnl::lbr_gru_backward::primitive_desc": [[508, "struct-dnnl-lbr-gru-backward-primitive-desc"]], "struct dnnl::lbr_gru_forward": [[509, "struct-dnnl-lbr-gru-forward"]], "struct dnnl::lbr_gru_forward::primitive_desc": [[510, "struct-dnnl-lbr-gru-forward-primitive-desc"]], "struct dnnl::lrn_backward": [[511, "struct-dnnl-lrn-backward"]], "struct dnnl::lrn_backward::primitive_desc": [[512, "struct-dnnl-lrn-backward-primitive-desc"]], "struct dnnl::lrn_forward": [[513, "struct-dnnl-lrn-forward"]], "struct dnnl::lrn_forward::primitive_desc": [[514, "struct-dnnl-lrn-forward-primitive-desc"]], "struct dnnl::lstm_backward": [[515, "struct-dnnl-lstm-backward"]], "struct dnnl::lstm_backward::primitive_desc": [[516, "struct-dnnl-lstm-backward-primitive-desc"]], "struct dnnl::lstm_forward": [[517, "struct-dnnl-lstm-forward"]], "struct dnnl::matmul": [[519, "struct-dnnl-matmul"]], "struct dnnl::lstm_forward::primitive_desc": [[518, "struct-dnnl-lstm-forward-primitive-desc"]], "struct dnnl_memory": [[521, "struct-dnnl-memory"]], "struct dnnl::matmul::primitive_desc": [[520, "struct-dnnl-matmul-primitive-desc"]], "struct dnnl_memory_desc": [[523, "struct-dnnl-memory-desc"]], "struct dnnl::memory": [[522, "struct-dnnl-memory"]], "struct dnnl::pooling_backward": [[525, "struct-dnnl-pooling-backward"]], "struct dnnl::memory::desc": [[524, "struct-dnnl-memory-desc"]], "struct dnnl::pooling_backward::primitive_desc": [[526, "struct-dnnl-pooling-backward-primitive-desc"]], "struct dnnl::pooling_forward": [[527, "struct-dnnl-pooling-forward"]], "struct dnnl::pooling_forward::primitive_desc": [[528, "struct-dnnl-pooling-forward-primitive-desc"]], "struct dnnl_post_ops": [[529, "struct-dnnl-post-ops"]], "struct dnnl::post_ops": [[530, "struct-dnnl-post-ops"]], "struct dnnl::prelu_backward": [[531, "struct-dnnl-prelu-backward"]], "struct dnnl::prelu_forward": [[533, "struct-dnnl-prelu-forward"]], "struct dnnl::prelu_backward::primitive_desc": [[532, "struct-dnnl-prelu-backward-primitive-desc"]], "struct dnnl::prelu_forward::primitive_desc": [[534, "struct-dnnl-prelu-forward-primitive-desc"]], "struct dnnl_primitive": [[535, "struct-dnnl-primitive"]], "struct dnnl::primitive": [[536, "struct-dnnl-primitive"]], "struct dnnl_primitive_attr": [[537, "struct-dnnl-primitive-attr"]], "struct dnnl_primitive_desc": [[539, "struct-dnnl-primitive-desc"]], "struct dnnl::primitive_attr": [[538, "struct-dnnl-primitive-attr"]], "struct dnnl::primitive_desc_base": [[541, "struct-dnnl-primitive-desc-base"]], "struct dnnl::primitive_desc": [[540, "struct-dnnl-primitive-desc"]], "struct dnnl::reduction": [[542, "struct-dnnl-reduction"]], "struct dnnl::reduction::primitive_desc": [[543, "struct-dnnl-reduction-primitive-desc"]], "struct dnnl::reorder::primitive_desc": [[545, "struct-dnnl-reorder-primitive-desc"]], "struct dnnl::reorder": [[544, "struct-dnnl-reorder"]], "struct dnnl::resampling_backward": [[546, "struct-dnnl-resampling-backward"]], "struct dnnl::resampling_backward::primitive_desc": [[547, "struct-dnnl-resampling-backward-primitive-desc"]], "struct dnnl::resampling_forward::primitive_desc": [[549, "struct-dnnl-resampling-forward-primitive-desc"]], "struct dnnl::resampling_forward": [[548, "struct-dnnl-resampling-forward"]], "struct dnnl::shuffle_backward": [[551, "struct-dnnl-shuffle-backward"]], "struct dnnl::rnn_primitive_desc_base": [[550, "struct-dnnl-rnn-primitive-desc-base"]], "struct dnnl::shuffle_forward": [[553, "struct-dnnl-shuffle-forward"]], "struct dnnl::shuffle_backward::primitive_desc": [[552, "struct-dnnl-shuffle-backward-primitive-desc"]], "struct dnnl::shuffle_forward::primitive_desc": [[554, "struct-dnnl-shuffle-forward-primitive-desc"]], "struct dnnl::softmax_backward": [[555, "struct-dnnl-softmax-backward"]], "struct dnnl::softmax_backward::primitive_desc": [[556, "struct-dnnl-softmax-backward-primitive-desc"]], "struct dnnl::softmax_forward": [[557, "struct-dnnl-softmax-forward"]], "struct dnnl_stream": [[559, "struct-dnnl-stream"]], "struct dnnl::softmax_forward::primitive_desc": [[558, "struct-dnnl-softmax-forward-primitive-desc"]], "struct dnnl::stream": [[560, "struct-dnnl-stream"]], "struct dnnl::sum": [[561, "struct-dnnl-sum"]], "struct dnnl::sum::primitive_desc": [[562, "struct-dnnl-sum-primitive-desc"]], "struct dnnl::threadpool_interop::threadpool_iface": [[563, "struct-dnnl-threadpool-interop-threadpool-iface"]], "struct dnnl_transform": [[564, "struct-dnnl-transform"]], "struct dnnl_ukernel_attr_params": [[565, "struct-dnnl-ukernel-attr-params"]], "struct dnnl::ukernel::brgemm": [[567, "struct-dnnl-ukernel-brgemm"]], "struct dnnl::ukernel::attr_params": [[566, "struct-dnnl-ukernel-attr-params"]], "struct dnnl::ukernel::transform": [[568, "struct-dnnl-ukernel-transform"]], "struct dnnl::vanilla_rnn_backward": [[569, "struct-dnnl-vanilla-rnn-backward"]], "struct dnnl::vanilla_rnn_forward": [[571, "struct-dnnl-vanilla-rnn-forward"]], "struct dnnl::vanilla_rnn_backward::primitive_desc": [[570, "struct-dnnl-vanilla-rnn-backward-primitive-desc"]], "struct dnnl::vanilla_rnn_forward::primitive_desc": [[572, "struct-dnnl-vanilla-rnn-forward-primitive-desc"]], "struct dnnl_version_t": [[573, "struct-dnnl-version-t"]], "struct example_allows_unimplemented": [[574, "struct-example-allows-unimplemented"]], "struct gemm_dims_t": [[575, "struct-gemm-dims-t"]], "struct mlp_dims_t": [[577, "struct-mlp-dims-t"]], "struct gqa_dims_t": [[576, "struct-gqa-dims-t"]], "struct mqa_dims_t": [[578, "struct-mqa-dims-t"]], "struct sdpa_dims_t": [[579, "struct-sdpa-dims-t"]], "Supported Primitives": [[581, "supported-primitives"]], "struct sycl_deletor_t": [[580, "struct-sycl-deletor-t"]]}, "indexentries": {"allocator": [[2, "index-1"], [2, "index-2"], [331, "index-0"]], "class": [[2, "index-0"], [3, "index-0"], [4, "index-0"], [5, "index-0"], [6, "index-0"], [7, "index-0"], [8, "index-0"], [9, "index-0"]], "dnnl::graph::allocator": [[2, "index-0"]], "function": [[2, "index-1"], [2, "index-2"], [3, "index-1"], [3, "index-2"], [3, "index-3"], [3, "index-4"], [3, "index-5"], [4, "index-1"], [4, "index-2"], [4, "index-3"], [4, "index-4"], [4, "index-5"], [4, "index-6"], [4, "index-7"], [4, "index-8"], [5, "index-10"], [5, "index-11"], [5, "index-12"], [5, "index-13"], [5, "index-14"], [5, "index-15"], [5, "index-16"], [5, "index-17"], [5, "index-18"], [5, "index-19"], [5, "index-20"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"], [6, "index-1"], [6, "index-10"], [6, "index-11"], [6, "index-12"], [6, "index-2"], [6, "index-3"], [6, "index-4"], [6, "index-5"], [6, "index-6"], [6, "index-7"], [6, "index-8"], [6, "index-9"], [7, "index-1"], [7, "index-10"], [7, "index-2"], [7, "index-3"], [7, "index-4"], [7, "index-5"], [7, "index-6"], [7, "index-7"], [7, "index-8"], [7, "index-9"], [8, "index-1"], [8, "index-2"], [8, "index-3"], [8, "index-4"], [8, "index-5"], [8, "index-6"], [8, "index-7"], [281, "index-1"], [287, "index-1"], [288, "index-10"], [288, "index-11"], [288, "index-12"], [288, "index-13"], [288, "index-14"], [288, "index-15"], [288, "index-16"], [288, "index-17"], [288, "index-18"], [288, "index-19"], [288, "index-20"], [288, "index-21"], [288, "index-22"], [288, "index-23"], [288, "index-24"], [288, "index-25"], [288, "index-26"], [288, "index-27"], [288, "index-28"], [288, "index-29"], [288, "index-30"], [288, "index-31"], [288, "index-32"], [288, "index-33"], [288, "index-34"], [288, "index-35"], [288, "index-36"], [288, "index-37"], [288, "index-38"], [288, "index-39"], [288, "index-40"], [288, "index-41"], [288, "index-42"], [288, "index-43"], [288, "index-44"], [288, "index-45"], [288, "index-46"], [288, "index-47"], [288, "index-48"], [288, "index-49"], [288, "index-5"], [288, "index-50"], [288, "index-51"], [288, "index-52"], [288, "index-6"], [288, "index-7"], [288, "index-8"], [288, "index-9"], [289, "index-1"], [289, "index-2"], [290, "index-1"], [290, "index-2"], [291, "index-1"], [291, "index-2"], [291, "index-3"], [291, "index-4"], [291, "index-5"], [291, "index-6"], [293, "index-1"], [294, "index-1"], [294, "index-2"], [294, "index-3"], [296, "index-1"], [296, "index-2"], [296, "index-3"], [297, "index-1"], [297, "index-2"], [298, "index-2"], [298, "index-3"], [298, "index-4"], [298, "index-5"], [298, "index-6"], [299, "index-1"], [299, "index-2"], [299, "index-3"], [300, "index-1"], [300, "index-2"], [301, "index-1"], [301, "index-2"], [301, "index-3"], [303, "index-1"], [303, "index-2"], [303, "index-3"], [303, "index-4"], [304, "index-1"], [304, "index-2"], [305, "index-1"], [306, "index-10"], [306, "index-11"], [306, "index-12"], [306, "index-13"], [306, "index-14"], [306, "index-15"], [306, "index-16"], [306, "index-17"], [306, "index-18"], [306, "index-19"], [306, "index-20"], [306, "index-21"], [306, "index-22"], [306, "index-23"], [306, "index-24"], [306, "index-25"], [306, "index-26"], [306, "index-27"], [306, "index-28"], [306, "index-29"], [306, "index-30"], [306, "index-31"], [306, "index-32"], [306, "index-33"], [306, "index-34"], [306, "index-35"], [306, "index-5"], [306, "index-6"], [306, "index-7"], [306, "index-8"], [306, "index-9"], [307, "index-1"], [307, "index-10"], [307, "index-11"], [307, "index-12"], [307, "index-13"], [307, "index-14"], [307, "index-2"], [307, "index-3"], [307, "index-4"], [307, "index-5"], [307, "index-6"], [307, "index-7"], [307, "index-8"], [307, "index-9"], [308, "index-1"], [308, "index-2"], [309, "index-1"], [309, "index-2"], [310, "index-1"], [310, "index-2"], [310, "index-3"], [310, "index-4"], [312, "index-10"], [312, "index-11"], [312, "index-12"], [312, "index-13"], [312, "index-14"], [312, "index-15"], [312, "index-16"], [312, "index-17"], [312, "index-18"], [312, "index-19"], [312, "index-20"], [312, "index-5"], [312, "index-6"], [312, "index-7"], [312, "index-8"], [312, "index-9"], [313, "index-1"], [313, "index-2"], [313, "index-3"], [313, "index-4"], [314, "index-1"], [315, "index-1"], [316, "index-1"], [316, "index-2"], [317, "index-1"], [317, "index-10"], [317, "index-11"], [317, "index-12"], [317, "index-13"], [317, "index-14"], [317, "index-2"], [317, "index-3"], [317, "index-4"], [317, "index-5"], [317, "index-6"], [317, "index-7"], [317, "index-8"], [317, "index-9"], [318, "index-10"], [318, "index-11"], [318, "index-12"], [318, "index-13"], [318, "index-14"], [318, "index-15"], [318, "index-16"], [318, "index-17"], [318, "index-18"], [318, "index-19"], [318, "index-2"], [318, "index-20"], [318, "index-21"], [318, "index-3"], [318, "index-4"], [318, "index-5"], [318, "index-6"], [318, "index-7"], [318, "index-8"], [318, "index-9"], [319, "index-1"], [319, "index-2"], [320, "index-1"], [320, "index-2"], [321, "index-3"], [321, "index-4"], [321, "index-5"], [321, "index-6"], [322, "index-1"], [323, "index-1"], [323, "index-10"], [323, "index-2"], [323, "index-3"], [323, "index-4"], [323, "index-5"], [323, "index-6"], [323, "index-7"], [323, "index-8"], [323, "index-9"], [324, "index-1"], [324, "index-2"], [324, "index-3"], [324, "index-4"], [324, "index-5"], [324, "index-6"], [324, "index-7"], [325, "index-3"], [325, "index-4"], [325, "index-5"], [325, "index-6"], [325, "index-7"], [325, "index-8"], [326, "index-10"], [326, "index-11"], [326, "index-12"], [326, "index-13"], [326, "index-14"], [326, "index-15"], [326, "index-16"], [326, "index-17"], [326, "index-18"], [326, "index-19"], [326, "index-20"], [326, "index-21"], [326, "index-22"], [326, "index-23"], [326, "index-24"], [326, "index-5"], [326, "index-6"], [326, "index-7"], [326, "index-8"], [326, "index-9"], [331, "index-5"], [331, "index-6"], [332, "index-3"], [332, "index-4"], [332, "index-5"], [332, "index-6"], [332, "index-7"], [333, "index-1"], [333, "index-2"], [333, "index-3"], [333, "index-4"], [334, "index-1"], [334, "index-2"], [334, "index-3"], [334, "index-4"], [334, "index-5"], [334, "index-6"], [334, "index-7"], [334, "index-8"], [335, "index-1"], [335, "index-2"], [336, "index-10"], [336, "index-11"], [336, "index-12"], [336, "index-13"], [336, "index-3"], [336, "index-4"], [336, "index-5"], [336, "index-6"], [336, "index-7"], [336, "index-8"], [336, "index-9"], [338, "index-1"], [338, "index-2"], [338, "index-3"], [338, "index-4"], [338, "index-5"], [339, "index-3"], [339, "index-4"], [339, "index-5"], [339, "index-6"], [340, "index-10"], [340, "index-11"], [340, "index-12"], [340, "index-3"], [340, "index-4"], [340, "index-5"], [340, "index-6"], [340, "index-7"], [340, "index-8"], [340, "index-9"], [341, "index-10"], [341, "index-11"], [341, "index-12"], [341, "index-13"], [341, "index-14"], [341, "index-3"], [341, "index-4"], [341, "index-5"], [341, "index-6"], [341, "index-7"], [341, "index-8"], [341, "index-9"], [343, "index-3"], [343, "index-4"], [343, "index-5"], [344, "index-3"], [344, "index-4"], [344, "index-5"], [344, "index-6"], [344, "index-7"], [344, "index-8"], [350, "index-1"], [350, "index-2"], [350, "index-3"], [350, "index-4"], [351, "index-1"], [351, "index-2"], [352, "index-1"], [352, "index-10"], [352, "index-11"], [352, "index-12"], [352, "index-13"], [352, "index-14"], [352, "index-15"], [352, "index-16"], [352, "index-17"], [352, "index-2"], [352, "index-3"], [352, "index-4"], [352, "index-5"], [352, "index-6"], [352, "index-7"], [352, "index-8"], [352, "index-9"], [353, "index-1"], [353, "index-10"], [353, "index-11"], [353, "index-12"], [353, "index-13"], [353, "index-2"], [353, "index-3"], [353, "index-4"], [353, "index-5"], [353, "index-6"], [353, "index-7"], [353, "index-8"], [353, "index-9"], [354, "index-1"], [354, "index-2"], [354, "index-3"], [354, "index-4"], [354, "index-5"], [448, "index-1"], [448, "index-2"], [448, "index-3"], [449, "index-1"], [449, "index-10"], [449, "index-11"], [449, "index-12"], [449, "index-13"], [449, "index-14"], [449, "index-15"], [449, "index-16"], [449, "index-17"], [449, "index-18"], [449, "index-19"], [449, "index-2"], [449, "index-20"], [449, "index-21"], [449, "index-22"], [449, "index-23"], [449, "index-3"], [449, "index-4"], [449, "index-5"], [449, "index-6"], [449, "index-7"], [449, "index-8"], [449, "index-9"], [450, "index-1"], [450, "index-2"], [450, "index-3"], [451, "index-1"], [451, "index-10"], [451, "index-11"], [451, "index-12"], [451, "index-13"], [451, "index-14"], [451, "index-15"], [451, "index-2"], [451, "index-3"], [451, "index-4"], [451, "index-5"], [451, "index-6"], [451, "index-7"], [451, "index-8"], [451, "index-9"], [452, "index-1"], [452, "index-2"], [452, "index-3"], [453, "index-1"], [453, "index-10"], [453, "index-11"], [453, "index-12"], [453, "index-13"], [453, "index-14"], [453, "index-15"], [453, "index-2"], [453, "index-3"], [453, "index-4"], [453, "index-5"], [453, "index-6"], [453, "index-7"], [453, "index-8"], [453, "index-9"], [454, "index-1"], [454, "index-2"], [454, "index-3"], [455, "index-1"], [455, "index-10"], [455, "index-11"], [455, "index-12"], [455, "index-2"], [455, "index-3"], [455, "index-4"], [455, "index-5"], [455, "index-6"], [455, "index-7"], [455, "index-8"], [455, "index-9"], [456, "index-1"], [456, "index-2"], [456, "index-3"], [457, "index-1"], [457, "index-10"], [457, "index-2"], [457, "index-3"], [457, "index-4"], [457, "index-5"], [457, "index-6"], [457, "index-7"], [457, "index-8"], [457, "index-9"], [459, "index-1"], [459, "index-2"], [459, "index-3"], [460, "index-1"], [460, "index-10"], [460, "index-2"], [460, "index-3"], [460, "index-4"], [460, "index-5"], [460, "index-6"], [460, "index-7"], [460, "index-8"], [460, "index-9"], [461, "index-1"], [461, "index-2"], [461, "index-3"], [462, "index-1"], [462, "index-10"], [462, "index-11"], [462, "index-12"], [462, "index-13"], [462, "index-2"], [462, "index-3"], [462, "index-4"], [462, "index-5"], [462, "index-6"], [462, "index-7"], [462, "index-8"], [462, "index-9"], [463, "index-1"], [463, "index-2"], [463, "index-3"], [464, "index-1"], [464, "index-10"], [464, "index-11"], [464, "index-12"], [464, "index-13"], [464, "index-14"], [464, "index-15"], [464, "index-16"], [464, "index-2"], [464, "index-3"], [464, "index-4"], [464, "index-5"], [464, "index-6"], [464, "index-7"], [464, "index-8"], [464, "index-9"], [465, "index-1"], [465, "index-2"], [465, "index-3"], [466, "index-1"], [466, "index-10"], [466, "index-11"], [466, "index-12"], [466, "index-13"], [466, "index-14"], [466, "index-15"], [466, "index-16"], [466, "index-2"], [466, "index-3"], [466, "index-4"], [466, "index-5"], [466, "index-6"], [466, "index-7"], [466, "index-8"], [466, "index-9"], [467, "index-1"], [467, "index-2"], [467, "index-3"], [468, "index-1"], [468, "index-10"], [468, "index-11"], [468, "index-12"], [468, "index-13"], [468, "index-2"], [468, "index-3"], [468, "index-4"], [468, "index-5"], [468, "index-6"], [468, "index-7"], [468, "index-8"], [468, "index-9"], [469, "index-1"], [469, "index-2"], [469, "index-3"], [470, "index-1"], [470, "index-10"], [470, "index-11"], [470, "index-12"], [470, "index-13"], [470, "index-14"], [470, "index-15"], [470, "index-16"], [470, "index-2"], [470, "index-3"], [470, "index-4"], [470, "index-5"], [470, "index-6"], [470, "index-7"], [470, "index-8"], [470, "index-9"], [471, "index-1"], [471, "index-2"], [471, "index-3"], [472, "index-1"], [472, "index-10"], [472, "index-11"], [472, "index-12"], [472, "index-13"], [472, "index-14"], [472, "index-15"], [472, "index-16"], [472, "index-2"], [472, "index-3"], [472, "index-4"], [472, "index-5"], [472, "index-6"], [472, "index-7"], [472, "index-8"], [472, "index-9"], [473, "index-1"], [473, "index-2"], [473, "index-3"], [474, "index-1"], [474, "index-10"], [474, "index-11"], [474, "index-12"], [474, "index-2"], [474, "index-3"], [474, "index-4"], [474, "index-5"], [474, "index-6"], [474, "index-7"], [474, "index-8"], [474, "index-9"], [475, "index-1"], [475, "index-2"], [475, "index-3"], [476, "index-1"], [476, "index-10"], [476, "index-11"], [476, "index-2"], [476, "index-3"], [476, "index-4"], [476, "index-5"], [476, "index-6"], [476, "index-7"], [476, "index-8"], [476, "index-9"], [478, "index-1"], [478, "index-2"], [478, "index-3"], [478, "index-4"], [478, "index-5"], [478, "index-6"], [478, "index-7"], [478, "index-8"], [479, "index-1"], [479, "index-2"], [479, "index-3"], [483, "index-1"], [483, "index-2"], [483, "index-3"], [484, "index-1"], [484, "index-10"], [484, "index-11"], [484, "index-12"], [484, "index-13"], [484, "index-14"], [484, "index-15"], [484, "index-16"], [484, "index-2"], [484, "index-3"], [484, "index-4"], [484, "index-5"], [484, "index-6"], [484, "index-7"], [484, "index-8"], [484, "index-9"], [485, "index-1"], [485, "index-2"], [485, "index-3"], [486, "index-1"], [486, "index-10"], [486, "index-11"], [486, "index-12"], [486, "index-13"], [486, "index-2"], [486, "index-3"], [486, "index-4"], [486, "index-5"], [486, "index-6"], [486, "index-7"], [486, "index-8"], [486, "index-9"], [487, "index-1"], [487, "index-2"], [487, "index-3"], [488, "index-1"], [488, "index-10"], [488, "index-11"], [488, "index-12"], [488, "index-13"], [488, "index-14"], [488, "index-15"], [488, "index-16"], [488, "index-17"], [488, "index-18"], [488, "index-19"], [488, "index-2"], [488, "index-20"], [488, "index-21"], [488, "index-3"], [488, "index-4"], [488, "index-5"], [488, "index-6"], [488, "index-7"], [488, "index-8"], [488, "index-9"], [489, "index-1"], [489, "index-2"], [489, "index-3"], [490, "index-1"], [490, "index-10"], [490, "index-11"], [490, "index-12"], [490, "index-13"], [490, "index-14"], [490, "index-2"], [490, "index-3"], [490, "index-4"], [490, "index-5"], [490, "index-6"], [490, "index-7"], [490, "index-8"], [490, "index-9"], [491, "index-1"], [491, "index-10"], [491, "index-11"], [491, "index-12"], [491, "index-2"], [491, "index-3"], [491, "index-4"], [491, "index-5"], [491, "index-6"], [491, "index-7"], [491, "index-8"], [491, "index-9"], [493, "index-1"], [493, "index-2"], [493, "index-3"], [494, "index-1"], [494, "index-2"], [494, "index-3"], [494, "index-4"], [494, "index-5"], [494, "index-6"], [494, "index-7"], [495, "index-1"], [495, "index-2"], [495, "index-3"], [496, "index-1"], [496, "index-2"], [496, "index-3"], [496, "index-4"], [496, "index-5"], [496, "index-6"], [496, "index-7"], [496, "index-8"], [496, "index-9"], [497, "index-1"], [497, "index-2"], [497, "index-3"], [498, "index-1"], [498, "index-2"], [498, "index-3"], [498, "index-4"], [498, "index-5"], [498, "index-6"], [498, "index-7"], [498, "index-8"], [498, "index-9"], [499, "index-1"], [499, "index-2"], [499, "index-3"], [500, "index-1"], [500, "index-10"], [500, "index-11"], [500, "index-12"], [500, "index-13"], [500, "index-14"], [500, "index-15"], [500, "index-16"], [500, "index-17"], [500, "index-18"], [500, "index-2"], [500, "index-3"], [500, "index-4"], [500, "index-5"], [500, "index-6"], [500, "index-7"], [500, "index-8"], [500, "index-9"], [501, "index-1"], [501, "index-2"], [501, "index-3"], [502, "index-1"], [502, "index-10"], [502, "index-11"], [502, "index-12"], [502, "index-13"], [502, "index-14"], [502, "index-15"], [502, "index-2"], [502, "index-3"], [502, "index-4"], [502, "index-5"], [502, "index-6"], [502, "index-7"], [502, "index-8"], [502, "index-9"], [503, "index-1"], [503, "index-2"], [503, "index-3"], [504, "index-1"], [504, "index-10"], [504, "index-11"], [504, "index-12"], [504, "index-13"], [504, "index-14"], [504, "index-15"], [504, "index-16"], [504, "index-17"], [504, "index-18"], [504, "index-19"], [504, "index-2"], [504, "index-20"], [504, "index-21"], [504, "index-22"], [504, "index-23"], [504, "index-3"], [504, "index-4"], [504, "index-5"], [504, "index-6"], [504, "index-7"], [504, "index-8"], [504, "index-9"], [505, "index-1"], [505, "index-2"], [505, "index-3"], [506, "index-1"], [506, "index-10"], [506, "index-11"], [506, "index-12"], [506, "index-13"], [506, "index-14"], [506, "index-15"], [506, "index-2"], [506, "index-3"], [506, "index-4"], [506, "index-5"], [506, "index-6"], [506, "index-7"], [506, "index-8"], [506, "index-9"], [507, "index-1"], [507, "index-2"], [507, "index-3"], [508, "index-1"], [508, "index-10"], [508, "index-11"], [508, "index-12"], [508, "index-13"], [508, "index-14"], [508, "index-15"], [508, "index-16"], [508, "index-17"], [508, "index-18"], [508, "index-19"], [508, "index-2"], [508, "index-20"], [508, "index-21"], [508, "index-3"], [508, "index-4"], [508, "index-5"], [508, "index-6"], [508, "index-7"], [508, "index-8"], [508, "index-9"], [509, "index-1"], [509, "index-2"], [509, "index-3"], [510, "index-1"], [510, "index-10"], [510, "index-11"], [510, "index-12"], [510, "index-13"], [510, "index-14"], [510, "index-2"], [510, "index-3"], [510, "index-4"], [510, "index-5"], [510, "index-6"], [510, "index-7"], [510, "index-8"], [510, "index-9"], [511, "index-1"], [511, "index-2"], [511, "index-3"], [512, "index-1"], [512, "index-10"], [512, "index-11"], [512, "index-12"], [512, "index-2"], [512, "index-3"], [512, "index-4"], [512, "index-5"], [512, "index-6"], [512, "index-7"], [512, "index-8"], [512, "index-9"], [513, "index-1"], [513, "index-2"], [513, "index-3"], [514, "index-1"], [514, "index-10"], [514, "index-11"], [514, "index-12"], [514, "index-2"], [514, "index-3"], [514, "index-4"], [514, "index-5"], [514, "index-6"], [514, "index-7"], [514, "index-8"], [514, "index-9"], [515, "index-1"], [515, "index-2"], [515, "index-3"], [516, "index-1"], [516, "index-10"], [516, "index-11"], [516, "index-12"], [516, "index-13"], [516, "index-14"], [516, "index-15"], [516, "index-16"], [516, "index-17"], [516, "index-18"], [516, "index-19"], [516, "index-2"], [516, "index-20"], [516, "index-21"], [516, "index-22"], [516, "index-23"], [516, "index-24"], [516, "index-25"], [516, "index-26"], [516, "index-27"], [516, "index-28"], [516, "index-29"], [516, "index-3"], [516, "index-30"], [516, "index-31"], [516, "index-4"], [516, "index-5"], [516, "index-6"], [516, "index-7"], [516, "index-8"], [516, "index-9"], [517, "index-1"], [517, "index-2"], [517, "index-3"], [518, "index-1"], [518, "index-10"], [518, "index-11"], [518, "index-12"], [518, "index-13"], [518, "index-14"], [518, "index-15"], [518, "index-16"], [518, "index-17"], [518, "index-18"], [518, "index-19"], [518, "index-2"], [518, "index-20"], [518, "index-3"], [518, "index-4"], [518, "index-5"], [518, "index-6"], [518, "index-7"], [518, "index-8"], [518, "index-9"], [519, "index-1"], [519, "index-2"], [519, "index-3"], [520, "index-1"], [520, "index-2"], [520, "index-3"], [520, "index-4"], [520, "index-5"], [520, "index-6"], [520, "index-7"], [520, "index-8"], [522, "index-10"], [522, "index-11"], [522, "index-12"], [522, "index-13"], [522, "index-14"], [522, "index-15"], [522, "index-16"], [522, "index-17"], [522, "index-18"], [522, "index-3"], [522, "index-4"], [522, "index-5"], [522, "index-6"], [522, "index-7"], [522, "index-8"], [522, "index-9"], [524, "index-1"], [524, "index-10"], [524, "index-11"], [524, "index-12"], [524, "index-13"], [524, "index-14"], [524, "index-15"], [524, "index-16"], [524, "index-17"], [524, "index-18"], [524, "index-19"], [524, "index-2"], [524, "index-20"], [524, "index-21"], [524, "index-22"], [524, "index-23"], [524, "index-24"], [524, "index-25"], [524, "index-26"], [524, "index-27"], [524, "index-28"], [524, "index-29"], [524, "index-3"], [524, "index-30"], [524, "index-4"], [524, "index-5"], [524, "index-6"], [524, "index-7"], [524, "index-8"], [524, "index-9"], [525, "index-1"], [525, "index-2"], [525, "index-3"], [526, "index-1"], [526, "index-10"], [526, "index-11"], [526, "index-12"], [526, "index-13"], [526, "index-2"], [526, "index-3"], [526, "index-4"], [526, "index-5"], [526, "index-6"], [526, "index-7"], [526, "index-8"], [526, "index-9"], [527, "index-1"], [527, "index-2"], [527, "index-3"], [528, "index-1"], [528, "index-10"], [528, "index-11"], [528, "index-12"], [528, "index-13"], [528, "index-2"], [528, "index-3"], [528, "index-4"], [528, "index-5"], [528, "index-6"], [528, "index-7"], [528, "index-8"], [528, "index-9"], [530, "index-1"], [530, "index-10"], [530, "index-11"], [530, "index-12"], [530, "index-13"], [530, "index-14"], [530, "index-15"], [530, "index-16"], [530, "index-2"], [530, "index-3"], [530, "index-4"], [530, "index-5"], [530, "index-6"], [530, "index-7"], [530, "index-8"], [530, "index-9"], [531, "index-1"], [531, "index-2"], [531, "index-3"], [532, "index-1"], [532, "index-2"], [532, "index-3"], [532, "index-4"], [532, "index-5"], [532, "index-6"], [532, "index-7"], [533, "index-1"], [533, "index-2"], [533, "index-3"], [534, "index-1"], [534, "index-2"], [534, "index-3"], [534, "index-4"], [534, "index-5"], [534, "index-6"], [536, "index-1"], [536, "index-10"], [536, "index-11"], [536, "index-12"], [536, "index-13"], [536, "index-2"], [536, "index-3"], [536, "index-4"], [536, "index-5"], [536, "index-6"], [536, "index-7"], [536, "index-8"], [536, "index-9"], [538, "index-1"], [538, "index-10"], [538, "index-11"], [538, "index-12"], [538, "index-13"], [538, "index-14"], [538, "index-15"], [538, "index-16"], [538, "index-17"], [538, "index-18"], [538, "index-19"], [538, "index-2"], [538, "index-20"], [538, "index-21"], [538, "index-22"], [538, "index-23"], [538, "index-24"], [538, "index-25"], [538, "index-26"], [538, "index-27"], [538, "index-3"], [538, "index-4"], [538, "index-5"], [538, "index-6"], [538, "index-7"], [538, "index-8"], [538, "index-9"], [540, "index-1"], [540, "index-2"], [540, "index-3"], [540, "index-4"], [540, "index-5"], [541, "index-1"], [541, "index-10"], [541, "index-11"], [541, "index-12"], [541, "index-13"], [541, "index-14"], [541, "index-15"], [541, "index-16"], [541, "index-17"], [541, "index-18"], [541, "index-19"], [541, "index-2"], [541, "index-20"], [541, "index-21"], [541, "index-22"], [541, "index-23"], [541, "index-24"], [541, "index-25"], [541, "index-26"], [541, "index-27"], [541, "index-28"], [541, "index-29"], [541, "index-3"], [541, "index-30"], [541, "index-31"], [541, "index-32"], [541, "index-33"], [541, "index-34"], [541, "index-35"], [541, "index-36"], [541, "index-37"], [541, "index-38"], [541, "index-39"], [541, "index-4"], [541, "index-40"], [541, "index-41"], [541, "index-42"], [541, "index-5"], [541, "index-6"], [541, "index-7"], [541, "index-8"], [541, "index-9"], [542, "index-1"], [542, "index-2"], [542, "index-3"], [543, "index-1"], [543, "index-2"], [543, "index-3"], [543, "index-4"], [543, "index-5"], [543, "index-6"], [543, "index-7"], [543, "index-8"], [544, "index-1"], [544, "index-2"], [544, "index-3"], [544, "index-4"], [544, "index-5"], [544, "index-6"], [545, "index-1"], [545, "index-10"], [545, "index-11"], [545, "index-12"], [545, "index-2"], [545, "index-3"], [545, "index-4"], [545, "index-5"], [545, "index-6"], [545, "index-7"], [545, "index-8"], [545, "index-9"], [546, "index-1"], [546, "index-2"], [546, "index-3"], [547, "index-1"], [547, "index-2"], [547, "index-3"], [547, "index-4"], [547, "index-5"], [547, "index-6"], [548, "index-1"], [548, "index-2"], [548, "index-3"], [549, "index-1"], [549, "index-2"], [549, "index-3"], [549, "index-4"], [549, "index-5"], [549, "index-6"], [549, "index-7"], [550, "index-1"], [550, "index-10"], [550, "index-11"], [550, "index-12"], [550, "index-13"], [550, "index-14"], [550, "index-15"], [550, "index-16"], [550, "index-17"], [550, "index-18"], [550, "index-19"], [550, "index-2"], [550, "index-20"], [550, "index-21"], [550, "index-22"], [550, "index-23"], [550, "index-24"], [550, "index-25"], [550, "index-26"], [550, "index-3"], [550, "index-4"], [550, "index-5"], [550, "index-6"], [550, "index-7"], [550, "index-8"], [550, "index-9"], [551, "index-1"], [551, "index-2"], [551, "index-3"], [552, "index-1"], [552, "index-2"], [552, "index-3"], [552, "index-4"], [552, "index-5"], [552, "index-6"], [552, "index-7"], [552, "index-8"], [553, "index-1"], [553, "index-2"], [553, "index-3"], [554, "index-1"], [554, "index-2"], [554, "index-3"], [554, "index-4"], [554, "index-5"], [554, "index-6"], [554, "index-7"], [554, "index-8"], [555, "index-1"], [555, "index-2"], [555, "index-3"], [556, "index-1"], [556, "index-2"], [556, "index-3"], [556, "index-4"], [556, "index-5"], [556, "index-6"], [556, "index-7"], [556, "index-8"], [556, "index-9"], [557, "index-1"], [557, "index-2"], [557, "index-3"], [558, "index-1"], [558, "index-2"], [558, "index-3"], [558, "index-4"], [558, "index-5"], [558, "index-6"], [558, "index-7"], [558, "index-8"], [560, "index-1"], [560, "index-2"], [560, "index-3"], [560, "index-4"], [560, "index-5"], [560, "index-6"], [560, "index-7"], [560, "index-8"], [561, "index-1"], [561, "index-2"], [561, "index-3"], [562, "index-1"], [562, "index-10"], [562, "index-2"], [562, "index-3"], [562, "index-4"], [562, "index-5"], [562, "index-6"], [562, "index-7"], [562, "index-8"], [562, "index-9"], [563, "index-2"], [563, "index-3"], [563, "index-4"], [563, "index-5"], [566, "index-1"], [566, "index-2"], [566, "index-3"], [566, "index-4"], [567, "index-1"], [567, "index-10"], [567, "index-11"], [567, "index-12"], [567, "index-13"], [567, "index-14"], [567, "index-15"], [567, "index-16"], [567, "index-17"], [567, "index-18"], [567, "index-2"], [567, "index-3"], [567, "index-4"], [567, "index-5"], [567, "index-6"], [567, "index-7"], [567, "index-8"], [567, "index-9"], [568, "index-1"], [568, "index-2"], [568, "index-3"], [568, "index-4"], [569, "index-1"], [569, "index-2"], [569, "index-3"], [570, "index-1"], [570, "index-10"], [570, "index-11"], [570, "index-12"], [570, "index-13"], [570, "index-14"], [570, "index-15"], [570, "index-16"], [570, "index-17"], [570, "index-18"], [570, "index-19"], [570, "index-2"], [570, "index-20"], [570, "index-21"], [570, "index-22"], [570, "index-23"], [570, "index-24"], [570, "index-25"], [570, "index-3"], [570, "index-4"], [570, "index-5"], [570, "index-6"], [570, "index-7"], [570, "index-8"], [570, "index-9"], [571, "index-1"], [571, "index-2"], [571, "index-3"], [572, "index-1"], [572, "index-10"], [572, "index-11"], [572, "index-12"], [572, "index-13"], [572, "index-14"], [572, "index-15"], [572, "index-16"], [572, "index-17"], [572, "index-18"], [572, "index-2"], [572, "index-3"], [572, "index-4"], [572, "index-5"], [572, "index-6"], [572, "index-7"], [572, "index-8"], [572, "index-9"]], "compiled_partition": [[3, "index-1"], [3, "index-2"]], "dnnl::graph::compiled_partition": [[3, "index-0"]], "execute": [[3, "index-5"], [350, "index-4"], [351, "index-2"], [352, "index-17"], [353, "index-13"], [536, "index-9"], [544, "index-5"], [544, "index-6"], [567, "index-13"], [567, "index-14"], [568, "index-4"]], "get_inplace_ports": [[3, "index-4"]], "query_logical_tensor": [[3, "index-3"]], "add_op": [[4, "index-5"]], "dnnl::graph::graph": [[4, "index-0"]], "finalize": [[4, "index-6"], [567, "index-8"]], "get_fpmath_mode": [[4, "index-4"], [538, "index-5"], [538, "index-6"]], "get_partitions": [[4, "index-8"]], "graph": [[4, "index-1"], [4, "index-2"], [336, "index-0"]], "is_finalized": [[4, "index-7"]], "set_fpmath_mode": [[4, "index-3"], [538, "index-7"]], "dim": [[5, "index-1"], [522, "index-1"]], "dims": [[5, "index-2"], [209, "index-44"], [482, "index-3"], [522, "index-2"]], "dnnl::graph::logical_tensor": [[5, "index-0"]], "get_data_type": [[5, "index-14"], [524, "index-20"]], "get_dims": [[5, "index-12"], [524, "index-22"]], "get_id": [[5, "index-13"], [7, "index-5"]], "get_layout_id": [[5, "index-17"]], "get_layout_type": [[5, "index-16"]], "get_mem_size": [[5, "index-19"]], "get_property_type": [[5, "index-15"]], "get_strides": [[5, "index-18"], [462, "index-10"], [464, "index-13"], [466, "index-13"], [468, "index-10"], [470, "index-13"], [472, "index-13"], [524, "index-13"], [526, "index-9"], [528, "index-9"], [541, "index-4"]], "is_equal": [[5, "index-20"]], "logical_tensor": [[5, "index-10"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"]], "operator=": [[5, "index-11"], [491, "index-5"], [491, "index-6"]], "typedef": [[5, "index-1"], [5, "index-2"], [288, "index-1"], [288, "index-2"], [288, "index-3"], [288, "index-4"], [295, "index-1"], [295, "index-2"], [298, "index-1"], [306, "index-1"], [306, "index-2"], [306, "index-3"], [306, "index-4"], [312, "index-1"], [312, "index-2"], [312, "index-3"], [312, "index-4"], [318, "index-1"], [321, "index-1"], [321, "index-2"], [325, "index-1"], [325, "index-2"], [326, "index-1"], [326, "index-2"], [326, "index-3"], [326, "index-4"], [331, "index-1"], [331, "index-2"], [331, "index-3"], [331, "index-4"], [332, "index-1"], [332, "index-2"], [336, "index-1"], [336, "index-2"], [339, "index-1"], [339, "index-2"], [340, "index-1"], [340, "index-2"], [341, "index-1"], [341, "index-2"], [343, "index-1"], [343, "index-2"], [344, "index-1"], [344, "index-2"], [522, "index-1"], [522, "index-2"]], "add_input": [[6, "index-3"]], "add_inputs": [[6, "index-4"]], "add_output": [[6, "index-5"]], "add_outputs": [[6, "index-6"]], "dnnl::graph::op": [[6, "index-0"]], "op": [[6, "index-1"], [6, "index-2"], [340, "index-0"]], "set_attr": [[6, "index-10"], [6, "index-11"], [6, "index-12"], [6, "index-7"], [6, "index-8"], [6, "index-9"]], "compile": [[7, "index-6"]], "dnnl::graph::partition": [[7, "index-0"]], "get_engine_kind": [[7, "index-10"]], "get_input_ports": [[7, "index-8"]], "get_ops": [[7, "index-4"]], "get_ops_num": [[7, "index-3"]], "get_output_ports": [[7, "index-9"]], "is_supported": [[7, "index-7"]], "partition": [[7, "index-1"], [7, "index-2"], [341, "index-0"]], "dnnl::graph::tensor": [[8, "index-0"]], "get_data_handle": [[8, "index-4"], [522, "index-11"]], "get_engine": [[8, "index-6"], [522, "index-10"], [541, "index-1"], [560, "index-3"]], "get_logical_tensor": [[8, "index-7"]], "set_data_handle": [[8, "index-5"], [522, "index-12"]], "tensor": [[8, "index-1"], [8, "index-2"], [8, "index-3"], [344, "index-0"]], "simple_memory_pool_t": [[9, "index-0"]], "primitive attributes": [[10, "index-0"]], "page": [[10, "index-0"], [11, "index-0"], [12, "index-0"], [13, "index-0"], [14, "index-0"], [15, "index-0"], [16, "index-0"], [17, "index-0"], [18, "index-0"], [19, "index-0"], [20, "index-0"], [21, "index-0"], [22, "index-0"], [23, "index-0"], [24, "index-0"], [25, "index-0"], [26, "index-0"], [27, "index-0"], [28, "index-0"], [29, "index-0"], [30, "index-0"], [31, "index-0"], [32, "index-0"], [33, "index-0"], [34, "index-0"], [35, "index-0"], [36, "index-0"], [37, "index-0"], [38, "index-0"], [39, "index-0"], [40, "index-0"], [41, "index-0"], [42, "index-0"], [43, "index-0"], [44, "index-0"], [45, "index-0"], [46, "index-0"], [47, "index-0"], [48, "index-0"], [49, "index-0"], [50, "index-0"], [51, "index-0"], [52, "index-0"], [53, "index-0"], [54, "index-0"], [55, "index-0"], [56, "index-0"], [57, "index-0"], [58, "index-0"], [59, "index-0"], [60, "index-0"], [61, "index-0"], [62, "index-0"], [63, "index-0"], [64, "index-0"], [65, "index-0"], [66, "index-0"], [67, "index-0"], [68, "index-0"], [69, "index-0"], [70, "index-0"], [71, "index-0"], [72, "index-0"], [73, "index-0"], [74, "index-0"], [75, "index-0"], [76, "index-0"], [77, "index-0"], [78, "index-0"], [79, "index-0"], [80, "index-0"], [81, "index-0"], [82, "index-0"], [83, "index-0"], [84, "index-0"], [85, "index-0"], [86, "index-0"], [87, "index-0"], [88, "index-0"], [89, "index-0"], [90, "index-0"], [91, "index-0"], [92, "index-0"], [93, "index-0"], [94, "index-0"], [95, "index-0"], [96, "index-0"], [97, "index-0"], [98, "index-0"], [99, "index-0"], [100, "index-0"], [101, "index-0"], [102, "index-0"], [103, "index-0"], [104, "index-0"], [105, "index-0"], [106, "index-0"], [107, "index-0"], [108, "index-0"], [109, "index-0"], [110, "index-0"], [111, "index-0"], [112, "index-0"], [113, "index-0"], [114, "index-0"], [115, "index-0"], [116, "index-0"], [117, "index-0"], [118, "index-0"], [119, "index-0"], [120, "index-0"], [121, "index-0"], [122, "index-0"], [123, "index-0"], [124, "index-0"], [125, "index-0"], [126, "index-0"], [127, "index-0"], [128, "index-0"], [129, "index-0"], [130, "index-0"], [131, "index-0"], [132, "index-0"], [133, "index-0"], [134, "index-0"], [135, "index-0"], [136, "index-0"], [137, "index-0"], [138, "index-0"], [139, "index-0"], [140, "index-0"], [141, "index-0"], [142, "index-0"], [143, "index-0"], [144, "index-0"], [145, "index-0"], [146, "index-0"], [147, "index-0"], [148, "index-0"], [149, "index-0"], [150, "index-0"], [151, "index-0"], [152, "index-0"], [153, "index-0"], [154, "index-0"], [155, "index-0"], [156, "index-0"], [157, "index-0"], [158, "index-0"], [159, "index-0"], [160, "index-0"], [161, "index-0"], [162, "index-0"], [163, "index-0"], [164, "index-0"], [165, "index-0"], [360, "index-0"], [362, "index-0"], [364, "index-0"], [366, "index-0"], [368, "index-0"], [369, "index-0"], [370, "index-0"], [371, "index-0"], [372, "index-0"], [373, "index-0"], [375, "index-0"], [377, "index-0"], [378, "index-0"], [379, "index-0"], [380, "index-0"], [381, "index-0"], [383, "index-0"], [384, "index-0"], [385, "index-0"], [386, "index-0"], [388, "index-0"], [389, "index-0"], [390, "index-0"], [392, "index-0"], [394, "index-0"], [395, "index-0"], [396, "index-0"], [397, "index-0"], [398, "index-0"], [399, "index-0"], [400, "index-0"], [401, "index-0"], [402, "index-0"], [404, "index-0"], [406, "index-0"], [408, "index-0"], [410, "index-0"], [412, "index-0"], [413, "index-0"], [415, "index-0"], [417, "index-0"], [419, "index-0"], [420, "index-0"], [421, "index-0"], [423, "index-0"], [425, "index-0"], [427, "index-0"], [429, "index-0"], [431, "index-0"], [432, "index-0"], [434, "index-0"], [436, "index-0"], [438, "index-0"], [439, "index-0"], [440, "index-0"], [442, "index-0"]], "primitive attributes: accumulation mode": [[11, "index-0"]], "primitive attributes: deterministic": [[12, "index-0"]], "primitive attributes: dropout": [[13, "index-0"]], "primitive attributes: floating-point math mode": [[14, "index-0"]], "primitive attributes: post-ops": [[15, "index-0"]], "primitive attributes: quantization": [[16, "index-0"]], "primitive attributes: rounding mode": [[17, "index-0"]], "primitive attributes: scratchpad": [[18, "index-0"]], "basic concepts": [[19, "index-0"], [37, "index-0"], [159, "index-0"]], "batch normalization": [[20, "index-0"], [289, "index-0"]], "benchmarking performance": [[21, "index-0"]], "binary": [[22, "index-0"], [203, "index-13"], [290, "index-0"], [456, "index-1"], [456, "index-2"], [456, "index-3"]], "build from source": [[23, "index-0"]], "build options": [[24, "index-0"]], "api": [[25, "index-0"]], "concat": [[26, "index-0"], [67, "index-0"], [203, "index-4"], [293, "index-0"], [459, "index-1"], [459, "index-2"], [459, "index-3"]], "constant tensor cache": [[27, "index-0"], [334, "index-0"]], "naming conventions": [[28, "index-0"]], "convolution": [[29, "index-0"], [68, "index-0"], [203, "index-6"], [294, "index-0"]], "cpu dispatcher control": [[30, "index-0"]], "cpu isa hints": [[31, "index-0"]], "data types": [[32, "index-0"], [295, "index-0"]], "dpc++ interoperability": [[33, "index-0"]], "eltwise": [[34, "index-0"], [203, "index-8"], [297, "index-0"]], "examples": [[35, "index-0"]], "experimental features": [[36, "index-0"]], "graph dump": [[38, "index-0"]], "gated multi-layer perceptron (gated-mlp)": [[39, "index-0"]], "grouped query attention (gqa)": [[40, "index-0"]], "low precision": [[41, "index-0"]], "scaled dot-product attention (sdpa)": [[42, "index-0"]], "sdpa with compressed key and value": [[43, "index-0"]], "group normalization": [[44, "index-0"], [300, "index-0"]], "inference": [[45, "index-0"]], "inference and training aspects": [[46, "index-0"]], "int8 inference": [[47, "index-0"]], "inner product": [[48, "index-0"], [301, "index-0"]], "inspecting jit code": [[49, "index-0"]], "nuances of int8 computations": [[50, "index-0"]], "layer normalization": [[51, "index-0"], [303, "index-0"]], "linking to the library": [[52, "index-0"]], "local response normalization (lrn)": [[53, "index-0"]], "matrix multiplication": [[54, "index-0"], [305, "index-0"]], "abs": [[55, "index-0"]], "absbackward": [[56, "index-0"]], "add": [[57, "index-0"]], "avgpool": [[58, "index-0"]], "avgpoolbackward": [[59, "index-0"]], "batchnormforwardtraining": [[60, "index-0"]], "batchnorminference": [[61, "index-0"]], "batchnormtrainingbackward": [[62, "index-0"]], "biasadd": [[63, "index-0"]], "biasaddbackward": [[64, "index-0"]], "clamp": [[65, "index-0"]], "clampbackward": [[66, "index-0"]], "convolutionbackwarddata": [[69, "index-0"]], "convolutionbackwardweights": [[70, "index-0"]], "convtranspose": [[71, "index-0"]], "convtransposebackwarddata": [[72, "index-0"]], "convtransposebackwardweights": [[73, "index-0"]], "dequantize": [[74, "index-0"]], "divide": [[75, "index-0"]], "dynamicdequantize": [[76, "index-0"]], "dynamicquantize": [[77, "index-0"]], "elu": [[78, "index-0"]], "elubackward": [[79, "index-0"]], "end": [[80, "index-0"], [186, "index-44"]], "exp": [[81, "index-0"]], "gelu": [[82, "index-0"]], "gelubackward": [[83, "index-0"]], "genindex": [[84, "index-0"]], "greaterequal": [[85, "index-0"]], "groupnorm": [[86, "index-0"]], "hardsigmoid": [[87, "index-0"]], "hardsigmoidbackward": [[88, "index-0"]], "hardswish": [[89, "index-0"]], "hardswishbackward": [[90, "index-0"]], "interpolate": [[91, "index-0"]], "interpolatebackward": [[92, "index-0"]], "layernorm": [[93, "index-0"]], "layernormbackward": [[94, "index-0"]], "leakyrelu": [[95, "index-0"]], "log": [[96, "index-0"]], "logsoftmax": [[97, "index-0"]], "logsoftmaxbackward": [[98, "index-0"]], "matmul": [[99, "index-0"], [203, "index-14"], [519, "index-1"], [519, "index-2"], [519, "index-3"]], "maximum": [[100, "index-0"]], "maxpool": [[101, "index-0"]], "maxpoolbackward": [[102, "index-0"]], "minimum": [[103, "index-0"]], "mish": [[104, "index-0"]], "mishbackward": [[105, "index-0"]], "multiply": [[106, "index-0"]], "pow": [[107, "index-0"]], "prelu": [[108, "index-0"], [145, "index-0"], [203, "index-18"], [309, "index-0"]], "prelubackward": [[109, "index-0"]], "quantize": [[110, "index-0"]], "reciprocal": [[111, "index-0"]], "reducel1": [[112, "index-0"]], "reducel2": [[113, "index-0"]], "reducemax": [[114, "index-0"]], "reducemean": [[115, "index-0"]], "reducemin": [[116, "index-0"]], "reduceprod": [[117, "index-0"]], "reducesum": [[118, "index-0"]], "relu": [[119, "index-0"]], "relubackward": [[120, "index-0"]], "reorder": [[121, "index-0"], [149, "index-0"], [203, "index-2"], [315, "index-0"], [544, "index-1"], [544, "index-2"], [544, "index-3"], [544, "index-4"]], "round": [[122, "index-0"]], "select": [[123, "index-0"]], "sigmoid": [[124, "index-0"]], "sigmoidbackward": [[125, "index-0"]], "softmax": [[126, "index-0"], [153, "index-0"], [203, "index-19"], [320, "index-0"]], "softmaxbackward": [[127, "index-0"]], "softplus": [[128, "index-0"]], "softplusbackward": [[129, "index-0"]], "sqrt": [[130, "index-0"]], "sqrtbackward": [[131, "index-0"]], "square": [[132, "index-0"]], "squareddifference": [[133, "index-0"]], "staticreshape": [[134, "index-0"]], "statictranspose": [[135, "index-0"]], "subtract": [[136, "index-0"]], "tanh": [[137, "index-0"]], "tanhbackward": [[138, "index-0"]], "typecast": [[139, "index-0"]], "wildcard": [[140, "index-0"]], "opencl interoperability": [[141, "index-0"]], "configuring onednn for benchmarking": [[142, "index-0"]], "persistent cache": [[143, "index-0"]], "pooling": [[144, "index-0"], [203, "index-16"], [308, "index-0"]], "primitive cache": [[146, "index-0"], [310, "index-0"]], "profiling onednn performance": [[147, "index-0"]], "reduction": [[148, "index-0"], [203, "index-17"], [314, "index-0"], [542, "index-1"], [542, "index-2"], [542, "index-3"]], "resampling": [[150, "index-0"], [203, "index-15"], [316, "index-0"]], "rnn": [[151, "index-0"], [203, "index-12"], [317, "index-0"]], "shuffle": [[152, "index-0"], [203, "index-3"], [319, "index-0"]], "sum": [[154, "index-0"], [203, "index-5"], [322, "index-0"], [561, "index-1"], [561, "index-2"], [561, "index-3"]], "using onednn with threadpool-based threading": [[155, "index-0"]], "training": [[156, "index-0"]], "bfloat16 training": [[157, "index-0"]], "transitioning from intel mkl-dnn to onednn": [[158, "index-0"]], "batch-reduce general matrix multiplication": [[160, "index-0"]], "data transformation": [[161, "index-0"]], "understanding memory formats": [[162, "index-0"]], "verbose mode": [[163, "index-0"]], "verbose message catalogue": [[164, "index-0"]], "profiling with vtune(tm) profiler": [[165, "index-0"]], "api_kind": [[166, "index-0"]], "enum": [[166, "index-0"], [167, "index-0"], [168, "index-0"], [169, "index-0"], [170, "index-0"], [171, "index-0"], [172, "index-0"], [173, "index-0"], [174, "index-0"], [175, "index-0"], [176, "index-0"], [177, "index-0"], [178, "index-0"], [179, "index-0"], [180, "index-0"], [181, "index-0"], [182, "index-0"], [183, "index-0"], [184, "index-0"], [185, "index-0"], [186, "index-0"], [187, "index-0"], [188, "index-0"], [189, "index-0"], [190, "index-0"], [191, "index-0"], [192, "index-0"], [193, "index-0"], [194, "index-0"], [195, "index-0"], [196, "index-0"], [197, "index-0"], [198, "index-0"], [199, "index-0"], [200, "index-0"], [201, "index-0"], [202, "index-0"], [203, "index-0"], [204, "index-0"], [205, "index-0"], [206, "index-0"], [207, "index-0"], [208, "index-0"], [209, "index-0"], [210, "index-0"], [211, "index-0"], [212, "index-0"], [213, "index-0"], [214, "index-0"], [215, "index-0"], [216, "index-0"], [217, "index-0"], [218, "index-0"], [219, "index-0"], [220, "index-0"], [221, "index-0"], [222, "index-0"], [223, "index-0"], [224, "index-0"], [225, "index-0"], [226, "index-0"]], "accumulation_mode": [[167, "index-0"]], "any": [[167, "index-3"], [176, "index-1"], [180, "index-5"], [184, "index-2"], [195, "index-2"], [196, "index-2"]], "enumvalue": [[167, "index-1"], [167, "index-2"], [167, "index-3"], [167, "index-4"], [167, "index-5"], [167, "index-6"], [168, "index-1"], [168, "index-2"], [168, "index-3"], [168, "index-4"], [168, "index-5"], [168, "index-6"], [169, "index-1"], [169, "index-10"], [169, "index-11"], [169, "index-12"], [169, "index-13"], [169, "index-14"], [169, "index-15"], [169, "index-16"], [169, "index-17"], [169, "index-18"], [169, "index-19"], [169, "index-2"], [169, "index-20"], [169, "index-21"], [169, "index-22"], [169, "index-23"], [169, "index-24"], [169, "index-25"], [169, "index-26"], [169, "index-27"], [169, "index-28"], [169, "index-29"], [169, "index-3"], [169, "index-30"], [169, "index-31"], [169, "index-32"], [169, "index-33"], [169, "index-34"], [169, "index-35"], [169, "index-36"], [169, "index-37"], [169, "index-38"], [169, "index-39"], [169, "index-4"], [169, "index-40"], [169, "index-41"], [169, "index-42"], [169, "index-43"], [169, "index-44"], [169, "index-45"], [169, "index-46"], [169, "index-47"], [169, "index-48"], [169, "index-49"], [169, "index-5"], [169, "index-50"], [169, "index-51"], [169, "index-52"], [169, "index-53"], [169, "index-54"], [169, "index-55"], [169, "index-56"], [169, "index-57"], [169, "index-58"], [169, "index-59"], [169, "index-6"], [169, "index-60"], [169, "index-61"], [169, "index-62"], [169, "index-63"], [169, "index-64"], [169, "index-65"], [169, "index-66"], [169, "index-67"], [169, "index-68"], [169, "index-69"], [169, "index-7"], [169, "index-70"], [169, "index-8"], [169, "index-9"], [170, "index-1"], [170, "index-10"], [170, "index-11"], [170, "index-12"], [170, "index-13"], [170, "index-14"], [170, "index-15"], [170, "index-16"], [170, "index-17"], [170, "index-18"], [170, "index-19"], [170, "index-2"], [170, "index-20"], [170, "index-21"], [170, "index-22"], [170, "index-23"], [170, "index-24"], [170, "index-25"], [170, "index-26"], [170, "index-27"], [170, "index-28"], [170, "index-29"], [170, "index-3"], [170, "index-30"], [170, "index-31"], [170, "index-32"], [170, "index-33"], [170, "index-34"], [170, "index-35"], [170, "index-36"], [170, "index-37"], [170, "index-38"], [170, "index-39"], [170, "index-4"], [170, "index-40"], [170, "index-41"], [170, "index-42"], [170, "index-43"], [170, "index-44"], [170, "index-45"], [170, "index-46"], [170, "index-47"], [170, "index-48"], [170, "index-49"], [170, "index-5"], [170, "index-50"], [170, "index-51"], [170, "index-52"], [170, "index-53"], [170, "index-54"], [170, "index-55"], [170, "index-56"], [170, "index-57"], [170, "index-58"], [170, "index-59"], [170, "index-6"], [170, "index-60"], [170, "index-61"], [170, "index-62"], [170, "index-63"], [170, "index-64"], [170, "index-65"], [170, "index-66"], [170, "index-67"], [170, "index-68"], [170, "index-69"], [170, "index-7"], [170, "index-70"], [170, "index-71"], [170, "index-8"], [170, "index-9"], [171, "index-1"], [171, "index-10"], [171, "index-11"], [171, "index-12"], [171, "index-13"], [171, "index-14"], [171, "index-15"], [171, "index-2"], [171, "index-3"], [171, "index-4"], [171, "index-5"], [171, "index-6"], [171, "index-7"], [171, "index-8"], [171, "index-9"], [172, "index-1"], [172, "index-2"], [173, "index-1"], [173, "index-2"], [174, "index-1"], [174, "index-10"], [174, "index-11"], [174, "index-12"], [174, "index-13"], [174, "index-14"], [174, "index-15"], [174, "index-2"], [174, "index-3"], [174, "index-4"], [174, "index-5"], [174, "index-6"], [174, "index-7"], [174, "index-8"], [174, "index-9"], [175, "index-1"], [175, "index-10"], [175, "index-11"], [175, "index-12"], [175, "index-13"], [175, "index-14"], [175, "index-15"], [175, "index-16"], [175, "index-17"], [175, "index-2"], [175, "index-3"], [175, "index-4"], [175, "index-5"], [175, "index-6"], [175, "index-7"], [175, "index-8"], [175, "index-9"], [176, "index-1"], [176, "index-2"], [176, "index-3"], [177, "index-1"], [177, "index-2"], [177, "index-3"], [178, "index-1"], [178, "index-2"], [178, "index-3"], [178, "index-4"], [178, "index-5"], [178, "index-6"], [179, "index-1"], [179, "index-10"], [179, "index-100"], [179, "index-101"], [179, "index-102"], [179, "index-103"], [179, "index-104"], [179, "index-105"], [179, "index-106"], [179, "index-107"], [179, "index-108"], [179, "index-109"], [179, "index-11"], [179, "index-110"], [179, "index-111"], [179, "index-112"], [179, "index-113"], [179, "index-114"], [179, "index-115"], [179, "index-116"], [179, "index-117"], [179, "index-118"], [179, "index-119"], [179, "index-12"], [179, "index-120"], [179, "index-121"], [179, "index-122"], [179, "index-123"], [179, "index-124"], [179, "index-125"], [179, "index-126"], [179, "index-127"], [179, "index-128"], [179, "index-129"], [179, "index-13"], [179, "index-130"], [179, "index-131"], [179, "index-132"], [179, "index-133"], [179, "index-134"], [179, "index-135"], [179, "index-136"], [179, "index-137"], [179, "index-138"], [179, "index-14"], [179, "index-15"], [179, "index-16"], [179, "index-17"], [179, "index-18"], [179, "index-19"], [179, "index-2"], [179, "index-20"], [179, "index-21"], [179, "index-22"], [179, "index-23"], [179, "index-24"], [179, "index-25"], [179, "index-26"], [179, "index-27"], [179, "index-28"], [179, "index-29"], [179, "index-3"], [179, "index-30"], [179, "index-31"], [179, "index-32"], [179, "index-33"], [179, "index-34"], [179, "index-35"], [179, "index-36"], [179, "index-37"], [179, "index-38"], [179, "index-39"], [179, "index-4"], [179, "index-40"], [179, "index-41"], [179, "index-42"], [179, "index-43"], [179, "index-44"], [179, "index-45"], [179, "index-46"], [179, "index-47"], [179, "index-48"], [179, "index-49"], [179, "index-5"], [179, "index-50"], [179, "index-51"], [179, "index-52"], [179, "index-53"], [179, "index-54"], [179, "index-55"], [179, "index-56"], [179, "index-57"], [179, "index-58"], [179, "index-59"], [179, "index-6"], [179, "index-60"], [179, "index-61"], [179, "index-62"], [179, "index-63"], [179, "index-64"], [179, "index-65"], [179, "index-66"], [179, "index-67"], [179, "index-68"], [179, "index-69"], [179, "index-7"], [179, "index-70"], [179, "index-71"], [179, "index-72"], [179, "index-73"], [179, "index-74"], [179, "index-75"], [179, "index-76"], [179, "index-77"], [179, "index-78"], [179, "index-79"], [179, "index-8"], [179, "index-80"], [179, "index-81"], [179, "index-82"], [179, "index-83"], [179, "index-84"], [179, "index-85"], [179, "index-86"], [179, "index-87"], [179, "index-88"], [179, "index-89"], [179, "index-9"], [179, "index-90"], [179, "index-91"], [179, "index-92"], [179, "index-93"], [179, "index-94"], [179, "index-95"], [179, "index-96"], [179, "index-97"], [179, "index-98"], [179, "index-99"], [180, "index-1"], [180, "index-2"], [180, "index-3"], [180, "index-4"], [180, "index-5"], [181, "index-1"], [181, "index-2"], [181, "index-3"], [181, "index-4"], [181, "index-5"], [182, "index-1"], [182, "index-2"], [182, "index-3"], [182, "index-4"], [183, "index-1"], [183, "index-10"], [183, "index-11"], [183, "index-2"], [183, "index-3"], [183, "index-4"], [183, "index-5"], [183, "index-6"], [183, "index-7"], [183, "index-8"], [183, "index-9"], [184, "index-1"], [184, "index-2"], [184, "index-3"], [184, "index-4"], [185, "index-1"], [185, "index-2"], [185, "index-3"], [186, "index-1"], [186, "index-10"], [186, "index-11"], [186, "index-12"], [186, "index-13"], [186, "index-14"], [186, "index-15"], [186, "index-16"], [186, "index-17"], [186, "index-18"], [186, "index-19"], [186, "index-2"], [186, "index-20"], [186, "index-21"], [186, "index-22"], [186, "index-23"], [186, "index-24"], [186, "index-25"], [186, "index-26"], [186, "index-27"], [186, "index-28"], [186, "index-29"], [186, "index-3"], [186, "index-30"], [186, "index-31"], [186, "index-32"], [186, "index-33"], [186, "index-34"], [186, "index-35"], [186, "index-36"], [186, "index-37"], [186, "index-38"], [186, "index-39"], [186, "index-4"], [186, "index-40"], [186, "index-41"], [186, "index-42"], [186, "index-43"], [186, "index-44"], [186, "index-5"], [186, "index-6"], [186, "index-7"], [186, "index-8"], [186, "index-9"], [187, "index-1"], [187, "index-10"], [187, "index-11"], [187, "index-12"], [187, "index-13"], [187, "index-14"], [187, "index-15"], [187, "index-16"], [187, "index-17"], [187, "index-18"], [187, "index-19"], [187, "index-2"], [187, "index-20"], [187, "index-21"], [187, "index-22"], [187, "index-23"], [187, "index-24"], [187, "index-25"], [187, "index-26"], [187, "index-27"], [187, "index-28"], [187, "index-29"], [187, "index-3"], [187, "index-30"], [187, "index-31"], [187, "index-32"], [187, "index-33"], [187, "index-34"], [187, "index-35"], [187, "index-36"], [187, "index-37"], [187, "index-38"], [187, "index-39"], [187, "index-4"], [187, "index-40"], [187, "index-41"], [187, "index-42"], [187, "index-43"], [187, "index-44"], [187, "index-5"], [187, "index-6"], [187, "index-7"], [187, "index-8"], [187, "index-9"], [190, "index-1"], [190, "index-2"], [191, "index-1"], [191, "index-2"], [192, "index-1"], [192, "index-10"], [192, "index-11"], [192, "index-2"], [192, "index-3"], [192, "index-4"], [192, "index-5"], [192, "index-6"], [192, "index-7"], [192, "index-8"], [192, "index-9"], [193, "index-1"], [193, "index-2"], [193, "index-3"], [194, "index-1"], [194, "index-10"], [194, "index-11"], [194, "index-12"], [194, "index-13"], [194, "index-14"], [194, "index-2"], [194, "index-3"], [194, "index-4"], [194, "index-5"], [194, "index-6"], [194, "index-7"], [194, "index-8"], [194, "index-9"], [195, "index-1"], [195, "index-2"], [195, "index-3"], [195, "index-4"], [195, "index-5"], [196, "index-1"], [196, "index-10"], [196, "index-11"], [196, "index-12"], [196, "index-13"], [196, "index-14"], [196, "index-15"], [196, "index-16"], [196, "index-17"], [196, "index-18"], [196, "index-19"], [196, "index-2"], [196, "index-20"], [196, "index-21"], [196, "index-22"], [196, "index-23"], [196, "index-24"], [196, "index-25"], [196, "index-26"], [196, "index-27"], [196, "index-28"], [196, "index-29"], [196, "index-3"], [196, "index-30"], [196, "index-31"], [196, "index-32"], [196, "index-33"], [196, "index-34"], [196, "index-35"], [196, "index-36"], [196, "index-37"], [196, "index-38"], [196, "index-39"], [196, "index-4"], [196, "index-40"], [196, "index-41"], [196, "index-42"], [196, "index-43"], [196, "index-44"], [196, "index-45"], [196, "index-46"], [196, "index-47"], [196, "index-48"], [196, "index-49"], [196, "index-5"], [196, "index-50"], [196, "index-51"], [196, "index-52"], [196, "index-53"], [196, "index-54"], [196, "index-55"], [196, "index-56"], [196, "index-57"], [196, "index-58"], [196, "index-59"], [196, "index-6"], [196, "index-60"], [196, "index-61"], [196, "index-62"], [196, "index-63"], [196, "index-64"], [196, "index-65"], [196, "index-66"], [196, "index-67"], [196, "index-68"], [196, "index-69"], [196, "index-7"], [196, "index-70"], [196, "index-71"], [196, "index-72"], [196, "index-73"], [196, "index-74"], [196, "index-75"], [196, "index-76"], [196, "index-77"], [196, "index-78"], [196, "index-79"], [196, "index-8"], [196, "index-80"], [196, "index-81"], [196, "index-82"], [196, "index-83"], [196, "index-84"], [196, "index-85"], [196, "index-86"], [196, "index-87"], [196, "index-88"], [196, "index-89"], [196, "index-9"], [196, "index-90"], [196, "index-91"], [196, "index-92"], [196, "index-93"], [196, "index-94"], [196, "index-95"], [197, "index-1"], [197, "index-2"], [197, "index-3"], [197, "index-4"], [198, "index-1"], [198, "index-2"], [198, "index-3"], [198, "index-4"], [198, "index-5"], [198, "index-6"], [199, "index-1"], [199, "index-2"], [199, "index-3"], [199, "index-4"], [199, "index-5"], [199, "index-6"], [200, "index-1"], [200, "index-2"], [201, "index-1"], [201, "index-2"], [202, "index-1"], [202, "index-2"], [202, "index-3"], [202, "index-4"], [203, "index-1"], [203, "index-10"], [203, "index-11"], [203, "index-12"], [203, "index-13"], [203, "index-14"], [203, "index-15"], [203, "index-16"], [203, "index-17"], [203, "index-18"], [203, "index-19"], [203, "index-2"], [203, "index-20"], [203, "index-21"], [203, "index-3"], [203, "index-4"], [203, "index-5"], [203, "index-6"], [203, "index-7"], [203, "index-8"], [203, "index-9"], [204, "index-1"], [204, "index-10"], [204, "index-11"], [204, "index-12"], [204, "index-13"], [204, "index-14"], [204, "index-15"], [204, "index-16"], [204, "index-17"], [204, "index-18"], [204, "index-19"], [204, "index-2"], [204, "index-20"], [204, "index-21"], [204, "index-22"], [204, "index-23"], [204, "index-3"], [204, "index-4"], [204, "index-5"], [204, "index-6"], [204, "index-7"], [204, "index-8"], [204, "index-9"], [205, "index-1"], [205, "index-2"], [206, "index-1"], [206, "index-2"], [207, "index-1"], [207, "index-2"], [207, "index-3"], [207, "index-4"], [207, "index-5"], [207, "index-6"], [207, "index-7"], [207, "index-8"], [208, "index-1"], [208, "index-2"], [208, "index-3"], [208, "index-4"], [208, "index-5"], [208, "index-6"], [208, "index-7"], [208, "index-8"], [209, "index-1"], [209, "index-10"], [209, "index-11"], [209, "index-12"], [209, "index-13"], [209, "index-14"], [209, "index-15"], [209, "index-16"], [209, "index-17"], [209, "index-18"], [209, "index-19"], [209, "index-2"], [209, "index-20"], [209, "index-21"], [209, "index-22"], [209, "index-23"], [209, "index-24"], [209, "index-25"], [209, "index-26"], [209, "index-27"], [209, "index-28"], [209, "index-29"], [209, "index-3"], [209, "index-30"], [209, "index-31"], [209, "index-32"], [209, "index-33"], [209, "index-34"], [209, "index-35"], [209, "index-36"], [209, "index-37"], [209, "index-38"], [209, "index-39"], [209, "index-4"], [209, "index-40"], [209, "index-41"], [209, "index-42"], [209, "index-43"], [209, "index-44"], [209, "index-45"], [209, "index-46"], [209, "index-47"], [209, "index-48"], [209, "index-49"], [209, "index-5"], [209, "index-50"], [209, "index-51"], [209, "index-52"], [209, "index-53"], [209, "index-54"], [209, "index-55"], [209, "index-6"], [209, "index-7"], [209, "index-8"], [209, "index-9"], [210, "index-1"], [210, "index-10"], [210, "index-11"], [210, "index-12"], [210, "index-13"], [210, "index-14"], [210, "index-15"], [210, "index-16"], [210, "index-17"], [210, "index-18"], [210, "index-19"], [210, "index-2"], [210, "index-20"], [210, "index-21"], [210, "index-22"], [210, "index-23"], [210, "index-24"], [210, "index-25"], [210, "index-26"], [210, "index-27"], [210, "index-28"], [210, "index-29"], [210, "index-3"], [210, "index-30"], [210, "index-31"], [210, "index-32"], [210, "index-33"], [210, "index-34"], [210, "index-35"], [210, "index-36"], [210, "index-37"], [210, "index-38"], [210, "index-39"], [210, "index-4"], [210, "index-40"], [210, "index-41"], [210, "index-42"], [210, "index-43"], [210, "index-44"], [210, "index-45"], [210, "index-46"], [210, "index-47"], [210, "index-48"], [210, "index-49"], [210, "index-5"], [210, "index-50"], [210, "index-51"], [210, "index-52"], [210, "index-53"], [210, "index-54"], [210, "index-55"], [210, "index-56"], [210, "index-57"], [210, "index-6"], [210, "index-7"], [210, "index-8"], [210, "index-9"], [211, "index-1"], [211, "index-2"], [211, "index-3"], [211, "index-4"], [211, "index-5"], [212, "index-1"], [212, "index-2"], [212, "index-3"], [212, "index-4"], [212, "index-5"], [213, "index-1"], [213, "index-2"], [214, "index-1"], [214, "index-2"], [215, "index-1"], [215, "index-2"], [216, "index-1"], [216, "index-2"], [217, "index-1"], [217, "index-2"], [218, "index-1"], [218, "index-2"], [219, "index-1"], [219, "index-2"], [219, "index-3"], [219, "index-4"], [220, "index-1"], [220, "index-2"], [220, "index-3"], [220, "index-4"], [220, "index-5"], [220, "index-6"], [220, "index-7"], [221, "index-1"], [221, "index-10"], [221, "index-11"], [221, "index-2"], [221, "index-3"], [221, "index-4"], [221, "index-5"], [221, "index-6"], [221, "index-7"], [221, "index-8"], [221, "index-9"], [222, "index-1"], [222, "index-2"], [222, "index-3"], [223, "index-1"], [223, "index-2"], [224, "index-1"], [224, "index-2"], [225, "index-1"], [225, "index-2"], [226, "index-1"], [226, "index-2"], [226, "index-3"], [226, "index-4"]], "f16": [[167, "index-6"], [180, "index-3"], [183, "index-1"], [194, "index-7"]], "f32": [[167, "index-5"], [183, "index-3"], [194, "index-9"]], "relaxed": [[167, "index-2"]], "s32": [[167, "index-4"], [183, "index-4"], [194, "index-10"]], "strict": [[167, "index-1"], [180, "index-1"]], "dnnl_accumulation_mode_any": [[168, "index-3"]], "dnnl_accumulation_mode_f16": [[168, "index-6"]], "dnnl_accumulation_mode_f32": [[168, "index-5"]], "dnnl_accumulation_mode_relaxed": [[168, "index-2"]], "dnnl_accumulation_mode_s32": [[168, "index-4"]], "dnnl_accumulation_mode_strict": [[168, "index-1"]], "dnnl_accumulation_mode_t": [[168, "index-0"]], "dnnl_alg_kind_t": [[169, "index-0"]], "dnnl_binary_add": [[169, "index-45"]], "dnnl_binary_div": [[169, "index-49"]], "dnnl_binary_eq": [[169, "index-55"]], "dnnl_binary_ge": [[169, "index-51"]], "dnnl_binary_gt": [[169, "index-52"]], "dnnl_binary_le": [[169, "index-53"]], "dnnl_binary_lt": [[169, "index-54"]], "dnnl_binary_max": [[169, "index-47"]], "dnnl_binary_min": [[169, "index-48"]], "dnnl_binary_mul": [[169, "index-46"]], "dnnl_binary_ne": [[169, "index-56"]], "dnnl_binary_select": [[169, "index-57"]], "dnnl_binary_sub": [[169, "index-50"]], "dnnl_convolution_auto": [[169, "index-3"]], "dnnl_convolution_direct": [[169, "index-1"]], "dnnl_convolution_winograd": [[169, "index-2"]], "dnnl_deconvolution_direct": [[169, "index-4"]], "dnnl_deconvolution_winograd": [[169, "index-5"]], "dnnl_eltwise_abs": [[169, "index-10"]], "dnnl_eltwise_clip": [[169, "index-20"]], "dnnl_eltwise_clip_v2": [[169, "index-21"]], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [[169, "index-33"]], "dnnl_eltwise_elu": [[169, "index-8"]], "dnnl_eltwise_elu_use_dst_for_bwd": [[169, "index-29"]], "dnnl_eltwise_exp": [[169, "index-16"]], "dnnl_eltwise_exp_use_dst_for_bwd": [[169, "index-32"]], "dnnl_eltwise_gelu_erf": [[169, "index-23"]], "dnnl_eltwise_gelu_tanh": [[169, "index-17"]], "dnnl_eltwise_hardsigmoid": [[169, "index-14"]], "dnnl_eltwise_hardswish": [[169, "index-26"]], "dnnl_eltwise_linear": [[169, "index-12"]], "dnnl_eltwise_log": [[169, "index-19"]], "dnnl_eltwise_logistic": [[169, "index-15"]], "dnnl_eltwise_logistic_use_dst_for_bwd": [[169, "index-31"]], "dnnl_eltwise_mish": [[169, "index-25"]], "dnnl_eltwise_pow": [[169, "index-22"]], "dnnl_eltwise_relu": [[169, "index-6"]], "dnnl_eltwise_relu_use_dst_for_bwd": [[169, "index-27"]], "dnnl_eltwise_round": [[169, "index-24"]], "dnnl_eltwise_soft_relu": [[169, "index-13"]], "dnnl_eltwise_sqrt": [[169, "index-11"]], "dnnl_eltwise_sqrt_use_dst_for_bwd": [[169, "index-30"]], "dnnl_eltwise_square": [[169, "index-9"]], "dnnl_eltwise_swish": [[169, "index-18"]], "dnnl_eltwise_tanh": [[169, "index-7"]], "dnnl_eltwise_tanh_use_dst_for_bwd": [[169, "index-28"]], "dnnl_lbr_augru": [[169, "index-44"]], "dnnl_lbr_gru": [[169, "index-42"]], "dnnl_lrn_across_channels": [[169, "index-37"]], "dnnl_lrn_within_channel": [[169, "index-38"]], "dnnl_pooling_avg_exclude_padding": [[169, "index-36"]], "dnnl_pooling_avg_include_padding": [[169, "index-35"]], "dnnl_pooling_max": [[169, "index-34"]], "dnnl_reduction_max": [[169, "index-60"]], "dnnl_reduction_mean": [[169, "index-64"]], "dnnl_reduction_min": [[169, "index-61"]], "dnnl_reduction_mul": [[169, "index-63"]], "dnnl_reduction_norm_lp_max": [[169, "index-65"]], "dnnl_reduction_norm_lp_power_p_max": [[169, "index-67"]], "dnnl_reduction_norm_lp_power_p_sum": [[169, "index-68"]], "dnnl_reduction_norm_lp_sum": [[169, "index-66"]], "dnnl_reduction_sum": [[169, "index-62"]], "dnnl_resampling_linear": [[169, "index-59"]], "dnnl_resampling_nearest": [[169, "index-58"]], "dnnl_softmax_accurate": [[169, "index-69"]], "dnnl_softmax_log": [[169, "index-70"]], "dnnl_vanilla_augru": [[169, "index-43"]], "dnnl_vanilla_gru": [[169, "index-41"]], "dnnl_vanilla_lstm": [[169, "index-40"]], "dnnl_vanilla_rnn": [[169, "index-39"]], "algorithm": [[170, "index-0"]], "binary_add": [[170, "index-46"]], "binary_div": [[170, "index-50"]], "binary_eq": [[170, "index-56"]], "binary_ge": [[170, "index-52"]], "binary_gt": [[170, "index-53"]], "binary_le": [[170, "index-54"]], "binary_lt": [[170, "index-55"]], "binary_max": [[170, "index-48"]], "binary_min": [[170, "index-49"]], "binary_mul": [[170, "index-47"]], "binary_ne": [[170, "index-57"]], "binary_select": [[170, "index-58"]], "binary_sub": [[170, "index-51"]], "convolution_auto": [[170, "index-2"]], "convolution_direct": [[170, "index-3"]], "convolution_winograd": [[170, "index-4"]], "deconvolution_direct": [[170, "index-5"]], "deconvolution_winograd": [[170, "index-6"]], "eltwise_abs": [[170, "index-11"]], "eltwise_clip": [[170, "index-22"]], "eltwise_clip_v2": [[170, "index-23"]], "eltwise_clip_v2_use_dst_for_bwd": [[170, "index-34"]], "eltwise_elu": [[170, "index-9"]], "eltwise_elu_use_dst_for_bwd": [[170, "index-30"]], "eltwise_exp": [[170, "index-18"]], "eltwise_exp_use_dst_for_bwd": [[170, "index-33"]], "eltwise_gelu_erf": [[170, "index-20"]], "eltwise_gelu_tanh": [[170, "index-19"]], "eltwise_hardsigmoid": [[170, "index-27"]], "eltwise_hardswish": [[170, "index-26"]], "eltwise_linear": [[170, "index-14"]], "eltwise_log": [[170, "index-21"]], "eltwise_logistic": [[170, "index-17"]], "eltwise_logistic_use_dst_for_bwd": [[170, "index-32"]], "eltwise_mish": [[170, "index-16"]], "eltwise_pow": [[170, "index-24"]], "eltwise_relu": [[170, "index-7"]], "eltwise_relu_use_dst_for_bwd": [[170, "index-28"]], "eltwise_round": [[170, "index-25"]], "eltwise_soft_relu": [[170, "index-15"]], "eltwise_sqrt": [[170, "index-12"]], "eltwise_sqrt_use_dst_for_bwd": [[170, "index-31"]], "eltwise_square": [[170, "index-10"]], "eltwise_swish": [[170, "index-13"]], "eltwise_tanh": [[170, "index-8"]], "eltwise_tanh_use_dst_for_bwd": [[170, "index-29"]], "lbr_augru": [[170, "index-45"]], "lbr_gru": [[170, "index-43"]], "lrn_across_channels": [[170, "index-35"]], "lrn_within_channel": [[170, "index-36"]], "pooling_avg_exclude_padding": [[170, "index-39"]], "pooling_avg_include_padding": [[170, "index-38"]], "pooling_max": [[170, "index-37"]], "reduction_max": [[170, "index-61"]], "reduction_mean": [[170, "index-65"]], "reduction_min": [[170, "index-62"]], "reduction_mul": [[170, "index-64"]], "reduction_norm_lp_max": [[170, "index-66"]], "reduction_norm_lp_power_p_max": [[170, "index-68"]], "reduction_norm_lp_power_p_sum": [[170, "index-69"]], "reduction_norm_lp_sum": [[170, "index-67"]], "reduction_sum": [[170, "index-63"]], "resampling_linear": [[170, "index-60"]], "resampling_nearest": [[170, "index-59"]], "softmax_accurate": [[170, "index-70"]], "softmax_log": [[170, "index-71"]], "undef": [[170, "index-1"], [184, "index-1"], [185, "index-1"], [186, "index-1"], [194, "index-1"], [195, "index-1"], [196, "index-1"], [197, "index-1"], [203, "index-1"], [205, "index-1"], [207, "index-1"], [209, "index-1"], [211, "index-1"], [213, "index-1"], [226, "index-1"]], "vanilla_augru": [[170, "index-44"]], "vanilla_gru": [[170, "index-42"]], "vanilla_lstm": [[170, "index-41"]], "vanilla_rnn": [[170, "index-40"]], "avx": [[171, "index-3"]], "avx10_1_512": [[171, "index-10"]], "avx10_1_512_amx": [[171, "index-12"]], "avx10_1_512_amx_fp16": [[171, "index-14"]], "avx2": [[171, "index-4"]], "avx2_vnni": [[171, "index-5"]], "avx2_vnni_2": [[171, "index-6"]], "avx512_core": [[171, "index-7"]], "avx512_core_amx": [[171, "index-13"]], "avx512_core_amx_fp16": [[171, "index-15"]], "avx512_core_bf16": [[171, "index-9"]], "avx512_core_fp16": [[171, "index-11"]], "avx512_core_vnni": [[171, "index-8"]], "cpu_isa": [[171, "index-0"]], "isa_default": [[171, "index-1"]], "sse41": [[171, "index-2"]], "cpu_isa_hints": [[172, "index-0"]], "no_hints": [[172, "index-1"]], "prefer_ymm": [[172, "index-2"]], "dnnl_cpu_isa_hints_t": [[173, "index-0"]], "dnnl_cpu_isa_no_hints": [[173, "index-1"]], "dnnl_cpu_isa_prefer_ymm": [[173, "index-2"]], "dnnl_cpu_isa_avx": [[174, "index-3"]], "dnnl_cpu_isa_avx10_1_512": [[174, "index-10"]], "dnnl_cpu_isa_avx10_1_512_amx": [[174, "index-12"]], "dnnl_cpu_isa_avx10_1_512_amx_fp16": [[174, "index-14"]], "dnnl_cpu_isa_avx2": [[174, "index-4"]], "dnnl_cpu_isa_avx2_vnni": [[174, "index-5"]], "dnnl_cpu_isa_avx2_vnni_2": [[174, "index-6"]], "dnnl_cpu_isa_avx512_core": [[174, "index-7"]], "dnnl_cpu_isa_avx512_core_amx": [[174, "index-13"]], "dnnl_cpu_isa_avx512_core_amx_fp16": [[174, "index-15"]], "dnnl_cpu_isa_avx512_core_bf16": [[174, "index-9"]], "dnnl_cpu_isa_avx512_core_fp16": [[174, "index-11"]], "dnnl_cpu_isa_avx512_core_vnni": [[174, "index-8"]], "dnnl_cpu_isa_default": [[174, "index-1"]], "dnnl_cpu_isa_sse41": [[174, "index-2"]], "dnnl_cpu_isa_t": [[174, "index-0"]], "dnnl_bf16": [[175, "index-3"]], "dnnl_boolean": [[175, "index-9"]], "dnnl_data_type_max": [[175, "index-17"]], "dnnl_data_type_t": [[175, "index-0"]], "dnnl_data_type_undef": [[175, "index-1"]], "dnnl_e8m0": [[175, "index-14"]], "dnnl_f16": [[175, "index-2"]], "dnnl_f32": [[175, "index-4"]], "dnnl_f4_e2m1": [[175, "index-15"]], "dnnl_f4_e3m0": [[175, "index-16"]], "dnnl_f64": [[175, "index-8"]], "dnnl_f8_e4m3": [[175, "index-11"]], "dnnl_f8_e5m2": [[175, "index-10"]], "dnnl_s32": [[175, "index-5"]], "dnnl_s4": [[175, "index-12"]], "dnnl_s8": [[175, "index-6"]], "dnnl_u4": [[175, "index-13"]], "dnnl_u8": [[175, "index-7"]], "cpu": [[176, "index-2"]], "gpu": [[176, "index-3"]], "kind": [[176, "index-0"], [188, "index-0"], [203, "index-0"], [530, "index-4"]], "dnnl_any_engine": [[177, "index-1"]], "dnnl_cpu": [[177, "index-2"]], "dnnl_engine_kind_t": [[177, "index-0"]], "dnnl_gpu": [[177, "index-3"]], "dnnl_blocked": [[178, "index-3"]], "dnnl_format_kind_any": [[178, "index-2"]], "dnnl_format_kind_max": [[178, "index-6"]], "dnnl_format_kind_opaque": [[178, "index-4"]], "dnnl_format_kind_sparse": [[178, "index-5"]], "dnnl_format_kind_t": [[178, "index-0"]], "dnnl_format_kind_undef": [[178, "index-1"]], "dnnl_abcd8b8a": [[179, "index-61"]], "dnnl_abcde2b8a4b": [[179, "index-64"]], "dnnl_abcde4b16a4b": [[179, "index-63"]], "dnnl_a": [[179, "index-3"]], "dnnl_abcd2b4c2b": [[179, "index-62"]], "dnnl_abcde2b4c2b": [[179, "index-69"]], "dnnl_abcdef2b4c2b": [[179, "index-72"]], "dnnl_abcdef2c8b4c": [[179, "index-71"]], "dnnl_abc16b": [[179, "index-53"]], "dnnl_abc32b": [[179, "index-54"]], "dnnl_abc4b": [[179, "index-55"]], "dnnl_abc8b": [[179, "index-56"]], "dnnl_abcd16b": [[179, "index-57"]], "dnnl_abcd32b": [[179, "index-58"]], "dnnl_abcd4b": [[179, "index-59"]], "dnnl_abcd8b": [[179, "index-60"]], "dnnl_abcde16b": [[179, "index-65"]], "dnnl_abcde32b": [[179, "index-66"]], "dnnl_abcde4b": [[179, "index-67"]], "dnnl_abcde8b": [[179, "index-68"]], "dnnl_abcdef16b": [[179, "index-70"]], "dnnl_abcdef4b": [[179, "index-73"]], "dnnl_ab": [[179, "index-4"]], "dnnl_abc": [[179, "index-5"]], "dnnl_abcd": [[179, "index-6"]], "dnnl_abcde": [[179, "index-7"]], "dnnl_abcdef": [[179, "index-8"]], "dnnl_abcdefg": [[179, "index-9"]], "dnnl_abcdefgh": [[179, "index-10"]], "dnnl_abcdefghi": [[179, "index-11"]], "dnnl_abcdefghij": [[179, "index-12"]], "dnnl_abcdefghijk": [[179, "index-13"]], "dnnl_abcdefghijkl": [[179, "index-14"]], "dnnl_abcdefghijlk": [[179, "index-52"]], "dnnl_abcdefghikj": [[179, "index-51"]], "dnnl_abcdefghji": [[179, "index-50"]], "dnnl_abcdefgih": [[179, "index-49"]], "dnnl_abcdefhg": [[179, "index-48"]], "dnnl_abcdegf": [[179, "index-47"]], "dnnl_abcdfe": [[179, "index-41"]], "dnnl_abced": [[179, "index-31"]], "dnnl_abdc": [[179, "index-21"]], "dnnl_abdec": [[179, "index-32"]], "dnnl_abdefc": [[179, "index-42"]], "dnnl_abdfce": [[179, "index-43"]], "dnnl_acb": [[179, "index-16"]], "dnnl_acbd": [[179, "index-22"]], "dnnl_acbde": [[179, "index-33"]], "dnnl_acbdef": [[179, "index-44"]], "dnnl_acdb": [[179, "index-23"]], "dnnl_acdeb": [[179, "index-34"]], "dnnl_adbc": [[179, "index-24"]], "dnnl_adcb": [[179, "index-25"]], "dnnl_adecb": [[179, "index-35"]], "dnnl_adefcb": [[179, "index-45"]], "dnnl_ba": [[179, "index-15"]], "dnnl_bac": [[179, "index-17"]], "dnnl_bacd": [[179, "index-26"]], "dnnl_bacde": [[179, "index-36"]], "dnnl_bca": [[179, "index-18"]], "dnnl_bcda": [[179, "index-27"]], "dnnl_bcdea": [[179, "index-37"]], "dnnl_cab": [[179, "index-19"]], "dnnl_cba": [[179, "index-20"]], "dnnl_cdab": [[179, "index-28"]], "dnnl_cdba": [[179, "index-29"]], "dnnl_cdeab": [[179, "index-38"]], "dnnl_cdeba": [[179, "index-39"]], "dnnl_chwn": [[179, "index-84"]], "dnnl_cn": [[179, "index-77"]], "dnnl_dcab": [[179, "index-30"]], "dnnl_decab": [[179, "index-40"]], "dnnl_defcab": [[179, "index-46"]], "dnnl_dhwigo": [[179, "index-116"]], "dnnl_dhwio": [[179, "index-102"]], "dnnl_dhwoi": [[179, "index-103"]], "dnnl_format_tag_any": [[179, "index-2"]], "dnnl_format_tag_last": [[179, "index-74"]], "dnnl_format_tag_t": [[179, "index-0"]], "dnnl_format_tag_undef": [[179, "index-1"]], "dnnl_giodhw": [[179, "index-115"]], "dnnl_giohw": [[179, "index-112"]], "dnnl_godhwi": [[179, "index-114"]], "dnnl_gohwi": [[179, "index-110"]], "dnnl_goidhw": [[179, "index-113"]], "dnnl_goihw": [[179, "index-109"]], "dnnl_goiw": [[179, "index-106"]], "dnnl_gowi": [[179, "index-107"]], "dnnl_hwigo": [[179, "index-111"]], "dnnl_hwio": [[179, "index-95"]], "dnnl_hwoi": [[179, "index-96"]], "dnnl_idhwo": [[179, "index-105"]], "dnnl_ihwo": [[179, "index-98"]], "dnnl_io": [[179, "index-88"]], "dnnl_iodhw": [[179, "index-101"]], "dnnl_iohw": [[179, "index-99"]], "dnnl_iwo": [[179, "index-93"]], "dnnl_ldoi16o": [[179, "index-125"]], "dnnl_ldgoi16o": [[179, "index-126"]], "dnnl_ldgo": [[179, "index-124"]], "dnnl_ldgoi": [[179, "index-121"]], "dnnl_ldigo": [[179, "index-120"]], "dnnl_ldio": [[179, "index-122"]], "dnnl_ldnc": [[179, "index-119"]], "dnnl_ldoi": [[179, "index-123"]], "dnnl_ncdhw16c": [[179, "index-128"]], "dnnl_ncdhw32c": [[179, "index-127"]], "dnnl_ncdhw4c": [[179, "index-129"]], "dnnl_ncdhw8c": [[179, "index-130"]], "dnnl_nchw16c": [[179, "index-132"]], "dnnl_nchw32c": [[179, "index-131"]], "dnnl_nchw4c": [[179, "index-133"]], "dnnl_nchw8c": [[179, "index-134"]], "dnnl_ncw16c": [[179, "index-136"]], "dnnl_ncw32c": [[179, "index-135"]], "dnnl_ncw4c": [[179, "index-137"]], "dnnl_ncw8c": [[179, "index-138"]], "dnnl_nc": [[179, "index-76"]], "dnnl_ncdhw": [[179, "index-85"]], "dnnl_nchw": [[179, "index-82"]], "dnnl_ncw": [[179, "index-80"]], "dnnl_ndhwc": [[179, "index-86"]], "dnnl_nhwc": [[179, "index-83"]], "dnnl_nt": [[179, "index-79"]], "dnnl_ntc": [[179, "index-118"]], "dnnl_nwc": [[179, "index-81"]], "dnnl_odhwi": [[179, "index-104"]], "dnnl_ohwi": [[179, "index-97"]], "dnnl_oi": [[179, "index-87"]], "dnnl_oidhw": [[179, "index-100"]], "dnnl_oihw": [[179, "index-94"]], "dnnl_oiw": [[179, "index-89"]], "dnnl_owi": [[179, "index-90"]], "dnnl_tn": [[179, "index-78"]], "dnnl_tnc": [[179, "index-117"]], "dnnl_wigo": [[179, "index-108"]], "dnnl_wio": [[179, "index-91"]], "dnnl_woi": [[179, "index-92"]], "dnnl_x": [[179, "index-75"]], "bf16": [[180, "index-2"], [183, "index-2"], [194, "index-8"]], "fpmath_mode": [[180, "index-0"]], "tf32": [[180, "index-4"]], "dnnl_fpmath_mode_any": [[181, "index-4"]], "dnnl_fpmath_mode_bf16": [[181, "index-2"]], "dnnl_fpmath_mode_f16": [[181, "index-3"]], "dnnl_fpmath_mode_strict": [[181, "index-1"]], "dnnl_fpmath_mode_t": [[181, "index-0"]], "dnnl_fpmath_mode_tf32": [[181, "index-5"]], "dnnl_graph_layout_type_any": [[182, "index-2"]], "dnnl_graph_layout_type_opaque": [[182, "index-4"]], "dnnl_graph_layout_type_strided": [[182, "index-3"]], "dnnl_graph_layout_type_t": [[182, "index-0"]], "dnnl_graph_layout_type_undef": [[182, "index-1"]], "boolean": [[183, "index-7"]], "data_type": [[183, "index-0"], [194, "index-0"], [209, "index-45"], [482, "index-4"]], "f8_e4m3": [[183, "index-9"], [194, "index-6"]], "f8_e5m2": [[183, "index-8"], [194, "index-5"]], "s4": [[183, "index-10"], [194, "index-13"]], "s8": [[183, "index-5"], [194, "index-11"]], "u4": [[183, "index-11"], [194, "index-14"]], "u8": [[183, "index-6"], [194, "index-12"]], "layout_type": [[184, "index-0"], [482, "index-6"]], "opaque": [[184, "index-4"], [195, "index-5"]], "strided": [[184, "index-3"]], "constant": [[185, "index-3"]], "property_type": [[185, "index-0"]], "variable": [[185, "index-2"], [480, "index-1"], [480, "index-2"], [481, "index-1"], [481, "index-2"], [482, "index-1"], [482, "index-2"], [482, "index-3"], [482, "index-4"], [482, "index-5"], [482, "index-6"], [482, "index-7"], [482, "index-8"], [563, "index-1"], [573, "index-1"], [573, "index-2"], [573, "index-3"], [573, "index-4"], [573, "index-5"], [573, "index-6"]], "alpha": [[186, "index-2"]], "attr": [[186, "index-0"]], "auto_broadcast": [[186, "index-36"]], "auto_pad": [[186, "index-37"]], "axes": [[186, "index-12"]], "axis": [[186, "index-9"]], "begin_norm_axis": [[186, "index-10"]], "beta": [[186, "index-3"]], "coordinate_transformation_mode": [[186, "index-38"]], "data_format": [[186, "index-39"]], "dilations": [[186, "index-13"], [209, "index-16"]], "dst_shape": [[186, "index-14"]], "epsilon": [[186, "index-4"]], "exclude_pad": [[186, "index-27"]], "group_shape": [[186, "index-26"]], "groups": [[186, "index-11"]], "keep_dims": [[186, "index-28"]], "keep_stats": [[186, "index-29"]], "kernel": [[186, "index-15"], [209, "index-32"]], "max": [[186, "index-5"]], "min": [[186, "index-6"]], "mode": [[186, "index-40"]], "momentum": [[186, "index-7"]], "order": [[186, "index-16"]], "output_padding": [[186, "index-17"]], "pads_begin": [[186, "index-18"]], "pads_end": [[186, "index-19"]], "per_channel_broadcast": [[186, "index-30"]], "qtype": [[186, "index-41"]], "rounding_type": [[186, "index-42"]], "scales": [[186, "index-8"]], "shape": [[186, "index-20"]], "sizes": [[186, "index-21"]], "special_zero": [[186, "index-31"]], "src_shape": [[186, "index-22"]], "strides": [[186, "index-23"], [209, "index-15"], [482, "index-7"]], "transpose_a": [[186, "index-32"]], "transpose_b": [[186, "index-33"]], "use_affine": [[186, "index-34"]], "use_dst": [[186, "index-35"]], "weights_format": [[186, "index-43"]], "weights_shape": [[186, "index-24"]], "zps": [[186, "index-25"]], "dnnl_graph_op_attr_alpha": [[187, "index-2"]], "dnnl_graph_op_attr_auto_broadcast": [[187, "index-36"]], "dnnl_graph_op_attr_auto_pad": [[187, "index-37"]], "dnnl_graph_op_attr_axes": [[187, "index-12"]], "dnnl_graph_op_attr_axis": [[187, "index-9"]], "dnnl_graph_op_attr_begin_norm_axis": [[187, "index-10"]], "dnnl_graph_op_attr_beta": [[187, "index-3"]], "dnnl_graph_op_attr_coordinate_transformation_mode": [[187, "index-38"]], "dnnl_graph_op_attr_data_format": [[187, "index-39"]], "dnnl_graph_op_attr_dilations": [[187, "index-13"]], "dnnl_graph_op_attr_dst_shape": [[187, "index-14"]], "dnnl_graph_op_attr_end": [[187, "index-44"]], "dnnl_graph_op_attr_epsilon": [[187, "index-4"]], "dnnl_graph_op_attr_exclude_pad": [[187, "index-27"]], "dnnl_graph_op_attr_group_shape": [[187, "index-26"]], "dnnl_graph_op_attr_groups": [[187, "index-11"]], "dnnl_graph_op_attr_keep_dims": [[187, "index-28"]], "dnnl_graph_op_attr_keep_stats": [[187, "index-29"]], "dnnl_graph_op_attr_kernel": [[187, "index-15"]], "dnnl_graph_op_attr_max": [[187, "index-5"]], "dnnl_graph_op_attr_min": [[187, "index-6"]], "dnnl_graph_op_attr_mode": [[187, "index-40"]], "dnnl_graph_op_attr_momentum": [[187, "index-7"]], "dnnl_graph_op_attr_order": [[187, "index-16"]], "dnnl_graph_op_attr_output_padding": [[187, "index-17"]], "dnnl_graph_op_attr_pads_begin": [[187, "index-18"]], "dnnl_graph_op_attr_pads_end": [[187, "index-19"]], "dnnl_graph_op_attr_per_channel_broadcast": [[187, "index-30"]], "dnnl_graph_op_attr_qtype": [[187, "index-41"]], "dnnl_graph_op_attr_rounding_type": [[187, "index-42"]], "dnnl_graph_op_attr_scales": [[187, "index-8"]], "dnnl_graph_op_attr_shape": [[187, "index-20"]], "dnnl_graph_op_attr_sizes": [[187, "index-21"]], "dnnl_graph_op_attr_special_zero": [[187, "index-31"]], "dnnl_graph_op_attr_src_shape": [[187, "index-22"]], "dnnl_graph_op_attr_strides": [[187, "index-23"]], "dnnl_graph_op_attr_t": [[187, "index-0"]], "dnnl_graph_op_attr_transpose_a": [[187, "index-32"]], "dnnl_graph_op_attr_transpose_b": [[187, "index-33"]], "dnnl_graph_op_attr_undef": [[187, "index-1"]], "dnnl_graph_op_attr_use_affine": [[187, "index-34"]], "dnnl_graph_op_attr_use_dst": [[187, "index-35"]], "dnnl_graph_op_attr_weights_format": [[187, "index-43"]], "dnnl_graph_op_attr_weights_shape": [[187, "index-24"]], "dnnl_graph_op_attr_zps": [[187, "index-25"]], "dnnl_graph_op_kind_t": [[189, "index-0"]], "debug": [[190, "index-2"]], "fusion": [[190, "index-1"]], "policy": [[190, "index-0"]], "dnnl_graph_partition_policy_debug": [[191, "index-2"]], "dnnl_graph_partition_policy_fusion": [[191, "index-1"]], "dnnl_graph_partition_policy_t": [[191, "index-0"]], "invalid_arguments": [[192, "index-3"], [220, "index-3"]], "invalid_data_type": [[192, "index-11"]], "invalid_graph": [[192, "index-8"]], "invalid_graph_op": [[192, "index-9"]], "invalid_shape": [[192, "index-10"]], "last_impl_reached": [[192, "index-5"], [220, "index-5"]], "not_required": [[192, "index-7"], [220, "index-7"]], "out_of_memory": [[192, "index-2"], [220, "index-2"]], "runtime_error": [[192, "index-6"], [220, "index-6"]], "status": [[192, "index-0"], [220, "index-0"], [342, "index-0"]], "success": [[192, "index-1"], [220, "index-1"]], "unimplemented": [[192, "index-4"], [220, "index-4"]], "dnnl_graph_tensor_property_constant": [[193, "index-3"]], "dnnl_graph_tensor_property_t": [[193, "index-0"]], "dnnl_graph_tensor_property_undef": [[193, "index-1"]], "dnnl_graph_tensor_property_variable": [[193, "index-2"]], "e8m0": [[194, "index-4"]], "f4_e2m1": [[194, "index-3"]], "f4_e3m0": [[194, "index-2"]], "blocked": [[195, "index-3"]], "format_kind": [[195, "index-0"], [209, "index-49"]], "sparse": [[195, "index-4"]], "abcd8b8a": [[196, "index-95"]], "a": [[196, "index-3"]], "abcd8b": [[196, "index-94"]], "ab": [[196, "index-4"]], "abc": [[196, "index-6"]], "abcd": [[196, "index-11"]], "abcde": [[196, "index-20"]], "abcdef": [[196, "index-29"]], "abcdefg": [[196, "index-35"]], "abcdefgh": [[196, "index-37"]], "abcdefghi": [[196, "index-39"]], "abcdefghij": [[196, "index-41"]], "abcdefghijk": [[196, "index-43"]], "abcdefghijkl": [[196, "index-45"]], "abcdefghijlk": [[196, "index-46"]], "abcdefghikj": [[196, "index-44"]], "abcdefghji": [[196, "index-42"]], "abcdefgih": [[196, "index-40"]], "abcdefhg": [[196, "index-38"]], "abcdegf": [[196, "index-36"]], "abcdfe": [[196, "index-34"]], "abced": [[196, "index-28"]], "abdc": [[196, "index-12"]], "abdec": [[196, "index-21"]], "abdefc": [[196, "index-32"]], "abdfce": [[196, "index-30"]], "acb": [[196, "index-7"]], "acbd": [[196, "index-13"]], "acbde": [[196, "index-22"]], "acbdef": [[196, "index-31"]], "acdb": [[196, "index-14"]], "acdeb": [[196, "index-23"]], "adbc": [[196, "index-15"]], "ba": [[196, "index-5"]], "bac": [[196, "index-8"]], "bacd": [[196, "index-16"]], "bacde": [[196, "index-24"]], "bca": [[196, "index-9"]], "bcda": [[196, "index-17"]], "bcdea": [[196, "index-25"]], "cba": [[196, "index-10"]], "cdba": [[196, "index-18"]], "cdeba": [[196, "index-26"]], "chwn": [[196, "index-56"]], "cn": [[196, "index-49"]], "dcab": [[196, "index-19"]], "decab": [[196, "index-27"]], "defcab": [[196, "index-33"]], "dhwigo": [[196, "index-85"]], "dhwio": [[196, "index-71"]], "format_tag": [[196, "index-0"]], "giodhw": [[196, "index-83"]], "giohw": [[196, "index-81"]], "godhwi": [[196, "index-84"]], "gohwi": [[196, "index-78"]], "goidhw": [[196, "index-82"]], "goihw": [[196, "index-79"]], "goiw": [[196, "index-75"]], "gowi": [[196, "index-76"]], "hwigo": [[196, "index-80"]], "hwio": [[196, "index-66"]], "idhwo": [[196, "index-74"]], "ihwo": [[196, "index-68"]], "io": [[196, "index-60"]], "iodhw": [[196, "index-73"]], "iohw": [[196, "index-69"]], "iwo": [[196, "index-64"]], "ldgo": [[196, "index-93"]], "ldgoi": [[196, "index-90"]], "ldigo": [[196, "index-89"]], "ldio": [[196, "index-91"]], "ldnc": [[196, "index-88"]], "ldoi": [[196, "index-92"]], "nc": [[196, "index-48"]], "ncdhw": [[196, "index-57"]], "nchw": [[196, "index-54"]], "ncw": [[196, "index-52"]], "ndhwc": [[196, "index-58"]], "nhwc": [[196, "index-55"]], "nt": [[196, "index-51"]], "ntc": [[196, "index-87"]], "nwc": [[196, "index-53"]], "odhwi": [[196, "index-72"]], "ohwi": [[196, "index-67"]], "oi": [[196, "index-59"]], "oidhw": [[196, "index-70"]], "oihw": [[196, "index-65"]], "oiw": [[196, "index-61"]], "owi": [[196, "index-62"]], "tn": [[196, "index-50"]], "tnc": [[196, "index-86"]], "wigo": [[196, "index-77"]], "wio": [[196, "index-63"]], "x": [[196, "index-47"]], "coo": [[197, "index-4"], [524, "index-29"]], "csr": [[197, "index-2"], [524, "index-28"]], "packed": [[197, "index-3"], [524, "index-30"]], "sparse_encoding": [[197, "index-0"], [209, "index-53"]], "fuse_norm_add_relu": [[198, "index-6"]], "fuse_norm_relu": [[198, "index-5"]], "none": [[198, "index-1"]], "normalization_flags": [[198, "index-0"]], "use_global_stats": [[198, "index-2"]], "use_scale": [[198, "index-3"]], "use_shift": [[198, "index-4"]], "dnnl_fuse_norm_add_relu": [[199, "index-6"]], "dnnl_fuse_norm_relu": [[199, "index-5"]], "dnnl_normalization_flags_none": [[199, "index-1"]], "dnnl_normalization_flags_t": [[199, "index-0"]], "dnnl_use_global_stats": [[199, "index-2"]], "dnnl_use_scale": [[199, "index-3"]], "dnnl_use_shift": [[199, "index-4"]], "buffer": [[200, "index-2"], [224, "index-2"]], "memory_kind": [[200, "index-0"], [224, "index-0"]], "usm": [[200, "index-1"], [224, "index-1"]], "dnnl_ocl_interop_buffer": [[201, "index-2"]], "dnnl_ocl_interop_memory_kind_t": [[201, "index-0"]], "dnnl_ocl_interop_usm": [[201, "index-1"]], "dnnl_pack_type_no_trans": [[202, "index-2"]], "dnnl_pack_type_pack32": [[202, "index-4"]], "dnnl_pack_type_t": [[202, "index-0"]], "dnnl_pack_type_trans": [[202, "index-3"]], "dnnl_pack_type_undef": [[202, "index-1"]], "batch_normalization": [[203, "index-10"]], "deconvolution": [[203, "index-7"], [296, "index-0"]], "group_normalization": [[203, "index-21"]], "inner_product": [[203, "index-11"]], "layer_normalization": [[203, "index-20"]], "lrn": [[203, "index-9"], [304, "index-0"]], "dnnl_batch_normalization": [[204, "index-10"]], "dnnl_binary": [[204, "index-14"]], "dnnl_concat": [[204, "index-4"]], "dnnl_convolution": [[204, "index-6"]], "dnnl_deconvolution": [[204, "index-7"]], "dnnl_eltwise": [[204, "index-8"]], "dnnl_gemm": [[204, "index-13"]], "dnnl_group_normalization": [[204, "index-22"]], "dnnl_inner_product": [[204, "index-11"]], "dnnl_layer_normalization": [[204, "index-21"]], "dnnl_lrn": [[204, "index-9"]], "dnnl_matmul": [[204, "index-15"]], "dnnl_pooling": [[204, "index-17"]], "dnnl_prelu": [[204, "index-19"]], "dnnl_primitive_kind_max": [[204, "index-23"]], "dnnl_primitive_kind_t": [[204, "index-0"]], "dnnl_reduction": [[204, "index-18"]], "dnnl_reorder": [[204, "index-2"]], "dnnl_resampling": [[204, "index-16"]], "dnnl_rnn": [[204, "index-12"]], "dnnl_shuffle": [[204, "index-3"]], "dnnl_softmax": [[204, "index-20"]], "dnnl_sum": [[204, "index-5"]], "dnnl_undefined_primitive": [[204, "index-1"]], "profiling_data_kind": [[205, "index-0"]], "time": [[205, "index-2"]], "dnnl_profiling_data_kind_t": [[206, "index-0"]], "dnnl_profiling_data_kind_time": [[206, "index-2"]], "dnnl_profiling_data_kind_undef": [[206, "index-1"]], "backward": [[207, "index-5"]], "backward_bias": [[207, "index-8"]], "backward_data": [[207, "index-6"]], "backward_weights": [[207, "index-7"]], "forward": [[207, "index-4"]], "forward_inference": [[207, "index-3"]], "forward_training": [[207, "index-2"]], "prop_kind": [[207, "index-0"], [209, "index-12"]], "dnnl_backward": [[208, "index-5"]], "dnnl_backward_bias": [[208, "index-8"]], "dnnl_backward_data": [[208, "index-6"]], "dnnl_backward_weights": [[208, "index-7"]], "dnnl_forward": [[208, "index-4"]], "dnnl_forward_inference": [[208, "index-3"]], "dnnl_forward_training": [[208, "index-2"]], "dnnl_prop_kind_t": [[208, "index-0"]], "dnnl_prop_kind_undef": [[208, "index-1"]], "activation_kind": [[209, "index-31"]], "alg_kind": [[209, "index-21"]], "alpha_f32": [[209, "index-22"]], "axis_s32": [[209, "index-24"]], "beta_f32": [[209, "index-23"]], "cache_blob_id": [[209, "index-14"]], "cache_blob_id_size_s64": [[209, "index-13"]], "cell_kind": [[209, "index-29"]], "diff_dst_md": [[209, "index-39"]], "diff_src_md": [[209, "index-35"]], "diff_weights_md": [[209, "index-37"]], "direction": [[209, "index-30"]], "dst_md": [[209, "index-38"]], "engine": [[209, "index-2"], [298, "index-0"], [335, "index-0"], [478, "index-1"], [478, "index-2"]], "epsilon_f32": [[209, "index-19"]], "exec_arg_md": [[209, "index-42"]], "factors": [[209, "index-28"]], "flags": [[209, "index-20"], [222, "index-0"]], "group_size_s64": [[209, "index-33"]], "impl_info_str": [[209, "index-11"], [541, "index-2"]], "inner_blks": [[209, "index-51"]], "inner_idxs": [[209, "index-52"]], "inner_nblks_s32": [[209, "index-50"]], "k_f32": [[209, "index-26"]], "local_size_s64": [[209, "index-25"]], "memory_consumption_s64": [[209, "index-7"]], "ndims_s32": [[209, "index-43"]], "nnz_s64": [[209, "index-54"]], "num_handles_s32": [[209, "index-55"]], "num_of_inputs_s32": [[209, "index-4"]], "num_of_outputs_s32": [[209, "index-5"]], "p_f32": [[209, "index-27"]], "padded_dims": [[209, "index-47"]], "padded_offsets": [[209, "index-48"]], "padding_l": [[209, "index-17"]], "padding_r": [[209, "index-18"]], "primitive_kind": [[209, "index-3"]], "query": [[209, "index-0"]], "reorder_dst_engine": [[209, "index-10"]], "reorder_src_engine": [[209, "index-9"]], "scratchpad_engine": [[209, "index-8"], [541, "index-39"]], "scratchpad_md": [[209, "index-41"]], "src_md": [[209, "index-34"]], "submemory_offset_s64": [[209, "index-46"]], "time_estimate_f64": [[209, "index-6"]], "weights_md": [[209, "index-36"]], "workspace_md": [[209, "index-40"]], "dnnl_query_activation_kind": [[210, "index-31"]], "dnnl_query_alg_kind": [[210, "index-21"]], "dnnl_query_alpha_f32": [[210, "index-22"]], "dnnl_query_axis_s32": [[210, "index-24"]], "dnnl_query_beta_f32": [[210, "index-23"]], "dnnl_query_cache_blob_id": [[210, "index-14"]], "dnnl_query_cache_blob_id_size_s64": [[210, "index-13"]], "dnnl_query_cell_kind": [[210, "index-29"]], "dnnl_query_data_type": [[210, "index-46"]], "dnnl_query_diff_dst_md": [[210, "index-40"]], "dnnl_query_diff_src_md": [[210, "index-36"]], "dnnl_query_diff_weights_md": [[210, "index-38"]], "dnnl_query_dilations": [[210, "index-16"]], "dnnl_query_dims": [[210, "index-45"]], "dnnl_query_direction": [[210, "index-30"]], "dnnl_query_dst_md": [[210, "index-39"]], "dnnl_query_engine": [[210, "index-2"]], "dnnl_query_epsilon_f32": [[210, "index-19"]], "dnnl_query_exec_arg_md": [[210, "index-43"]], "dnnl_query_factors": [[210, "index-28"]], "dnnl_query_flags": [[210, "index-20"]], "dnnl_query_format_kind": [[210, "index-50"]], "dnnl_query_group_size_s64": [[210, "index-33"]], "dnnl_query_impl_info_str": [[210, "index-9"]], "dnnl_query_inner_blks": [[210, "index-52"]], "dnnl_query_inner_idxs": [[210, "index-53"]], "dnnl_query_inner_nblks_s32": [[210, "index-51"]], "dnnl_query_k_f32": [[210, "index-26"]], "dnnl_query_kernel": [[210, "index-32"]], "dnnl_query_local_size_s64": [[210, "index-25"]], "dnnl_query_max": [[210, "index-57"]], "dnnl_query_memory_consumption_s64": [[210, "index-7"]], "dnnl_query_ndims_s32": [[210, "index-44"]], "dnnl_query_nnz_s64": [[210, "index-55"]], "dnnl_query_num_handles_s32": [[210, "index-56"]], "dnnl_query_num_of_inputs_s32": [[210, "index-4"]], "dnnl_query_num_of_outputs_s32": [[210, "index-5"]], "dnnl_query_p_f32": [[210, "index-27"]], "dnnl_query_padded_dims": [[210, "index-48"]], "dnnl_query_padded_offsets": [[210, "index-49"]], "dnnl_query_padding_l": [[210, "index-17"]], "dnnl_query_padding_r": [[210, "index-18"]], "dnnl_query_primitive_kind": [[210, "index-3"]], "dnnl_query_prop_kind": [[210, "index-12"]], "dnnl_query_reorder_dst_engine": [[210, "index-11"]], "dnnl_query_reorder_src_engine": [[210, "index-10"]], "dnnl_query_scratchpad_engine": [[210, "index-8"]], "dnnl_query_scratchpad_md": [[210, "index-42"]], "dnnl_query_some_md": [[210, "index-34"]], "dnnl_query_sparse_encoding": [[210, "index-54"]], "dnnl_query_src_md": [[210, "index-35"]], "dnnl_query_strides": [[210, "index-15"]], "dnnl_query_submemory_offset_s64": [[210, "index-47"]], "dnnl_query_t": [[210, "index-0"]], "dnnl_query_time_estimate_f64": [[210, "index-6"]], "dnnl_query_undef": [[210, "index-1"]], "dnnl_query_weights_md": [[210, "index-37"]], "dnnl_query_workspace_md": [[210, "index-41"]], "bidirectional_concat": [[211, "index-4"]], "bidirectional_sum": [[211, "index-5"]], "rnn_direction": [[211, "index-0"]], "unidirectional_left2right": [[211, "index-2"]], "unidirectional_right2left": [[211, "index-3"]], "dnnl_bidirectional_concat": [[212, "index-4"]], "dnnl_bidirectional_sum": [[212, "index-5"]], "dnnl_rnn_direction_t": [[212, "index-0"]], "dnnl_rnn_direction_undef": [[212, "index-1"]], "dnnl_unidirectional_left2right": [[212, "index-2"]], "dnnl_unidirectional_right2left": [[212, "index-3"]], "diff_weights_overwrite": [[213, "index-2"]], "rnn_flags": [[213, "index-0"]], "dnnl_rnn_flags_diff_weights_overwrite": [[214, "index-2"]], "dnnl_rnn_flags_t": [[214, "index-0"]], "dnnl_rnn_flags_undef": [[214, "index-1"]], "environment": [[215, "index-1"]], "rounding_mode": [[215, "index-0"]], "stochastic": [[215, "index-2"]], "dnnl_rounding_mode_environment": [[216, "index-1"]], "dnnl_rounding_mode_stochastic": [[216, "index-2"]], "dnnl_rounding_mode_t": [[216, "index-0"]], "library": [[217, "index-1"]], "scratchpad_mode": [[217, "index-0"]], "user": [[217, "index-2"]], "dnnl_scratchpad_mode_library": [[218, "index-1"]], "dnnl_scratchpad_mode_t": [[218, "index-0"]], "dnnl_scratchpad_mode_user": [[218, "index-2"]], "dnnl_coo": [[219, "index-4"]], "dnnl_csr": [[219, "index-2"]], "dnnl_packed": [[219, "index-3"]], "dnnl_sparse_encoding_t": [[219, "index-0"]], "dnnl_sparse_encoding_undef": [[219, "index-1"]], "dnnl_invalid_arguments": [[221, "index-3"]], "dnnl_invalid_data_type": [[221, "index-11"]], "dnnl_invalid_graph": [[221, "index-8"]], "dnnl_invalid_graph_op": [[221, "index-9"]], "dnnl_invalid_shape": [[221, "index-10"]], "dnnl_last_impl_reached": [[221, "index-5"]], "dnnl_not_required": [[221, "index-7"]], "dnnl_out_of_memory": [[221, "index-2"]], "dnnl_runtime_error": [[221, "index-6"]], "dnnl_status_t": [[221, "index-0"]], "dnnl_success": [[221, "index-1"]], "dnnl_unimplemented": [[221, "index-4"]], "default_flags": [[222, "index-3"]], "in_order": [[222, "index-1"]], "out_of_order": [[222, "index-2"]], "dnnl_stream_default_flags": [[223, "index-2"]], "dnnl_stream_flags_t": [[223, "index-0"]], "dnnl_stream_out_of_order": [[223, "index-1"]], "dnnl_sycl_interop_buffer": [[225, "index-2"]], "dnnl_sycl_interop_memory_kind_t": [[225, "index-0"]], "dnnl_sycl_interop_usm": [[225, "index-1"]], "no_trans": [[226, "index-2"]], "pack32": [[226, "index-4"]], "pack_type": [[226, "index-0"]], "trans": [[226, "index-3"]], "augru.cpp": [[227, "index-0"]], "example": [[227, "index-0"], [228, "index-0"], [229, "index-0"], [230, "index-0"], [231, "index-0"], [232, "index-0"], [233, "index-0"], [234, "index-0"], [235, "index-0"], [236, "index-0"], [237, "index-0"], [238, "index-0"], [239, "index-0"], [240, "index-0"], [241, "index-0"], [242, "index-0"], [243, "index-0"], [244, "index-0"], [245, "index-0"], [246, "index-0"], [247, "index-0"], [248, "index-0"], [249, "index-0"], [250, "index-0"], [251, "index-0"], [252, "index-0"], [253, "index-0"], [254, "index-0"], [255, "index-0"], [256, "index-0"], [257, "index-0"], [258, "index-0"], [259, "index-0"], [260, "index-0"], [261, "index-0"], [262, "index-0"], [263, "index-0"], [264, "index-0"], [265, "index-0"], [266, "index-0"], [267, "index-0"], [268, "index-0"], [269, "index-0"], [270, "index-0"], [271, "index-0"], [272, "index-0"], [273, "index-0"], [274, "index-0"], [275, "index-0"], [276, "index-0"], [277, "index-0"], [278, "index-0"], [279, "index-0"], [280, "index-0"]], "batch_normalization.cpp": [[228, "index-0"]], "binary.cpp": [[229, "index-0"]], "bnorm_u8_via_binary_postops.cpp": [[230, "index-0"]], "cnn_inference_f32.c": [[231, "index-0"]], "cnn_inference_f32.cpp": [[232, "index-0"]], "cnn_inference_int8.cpp": [[233, "index-0"]], "cnn_training_bf16.cpp": [[234, "index-0"]], "cnn_training_f32.cpp": [[235, "index-0"]], "concat.cpp": [[236, "index-0"]], "convolution.cpp": [[237, "index-0"]], "cpu_brgemm.cpp": [[238, "index-0"]], "cpu_cnn_training_f32.c": [[239, "index-0"]], "cpu_getting_started.cpp": [[240, "index-0"]], "cpu_inference_int8.cpp": [[241, "index-0"]], "cpu_matmul_coo.cpp": [[242, "index-0"]], "cpu_matmul_csr.cpp": [[243, "index-0"]], "cpu_matmul_quantization.cpp": [[244, "index-0"]], "cpu_matmul_weights_compression.cpp": [[245, "index-0"]], "cpu_rnn_inference_f32.cpp": [[246, "index-0"]], "cpu_rnn_inference_int8.cpp": [[247, "index-0"]], "cpu_sgemm_and_matmul.cpp": [[248, "index-0"]], "cpu_single_op_partition.cpp": [[249, "index-0"]], "cross_engine_reorder.c": [[250, "index-0"]], "cross_engine_reorder.cpp": [[251, "index-0"]], "deconvolution.cpp": [[252, "index-0"]], "eltwise.cpp": [[253, "index-0"]], "getting_started.cpp": [[254, "index-0"]], "gpu_opencl_getting_started.cpp": [[255, "index-0"]], "gpu_opencl_interop.cpp": [[256, "index-0"]], "group_normalization.cpp": [[257, "index-0"]], "inference_int8_matmul.cpp": [[258, "index-0"]], "inner_product.cpp": [[259, "index-0"]], "layer_normalization.cpp": [[260, "index-0"]], "lbr_gru.cpp": [[261, "index-0"]], "lrn.cpp": [[262, "index-0"]], "lstm.cpp": [[263, "index-0"]], "matmul.cpp": [[264, "index-0"]], "memory_format_propagation.cpp": [[265, "index-0"]], "performance_profiling.cpp": [[266, "index-0"]], "pooling.cpp": [[267, "index-0"]], "prelu.cpp": [[268, "index-0"]], "reduction.cpp": [[269, "index-0"]], "reorder.cpp": [[270, "index-0"]], "resampling.cpp": [[271, "index-0"]], "rnn_training_f32.cpp": [[272, "index-0"]], "shuffle.cpp": [[273, "index-0"]], "softmax.cpp": [[274, "index-0"]], "sum.cpp": [[275, "index-0"]], "sycl_getting_started.cpp": [[276, "index-0"]], "sycl_interop_buffer.cpp": [[277, "index-0"]], "sycl_single_op_partition.cpp": [[278, "index-0"]], "vanilla_rnn.cpp": [[279, "index-0"]], "weights_decompression_matmul.cpp": [[280, "index-0"]], "global": [[281, "index-0"]], "namespace": [[281, "index-0"], [348, "index-0"], [349, "index-0"], [350, "index-0"], [351, "index-0"], [352, "index-0"], [353, "index-0"], [354, "index-0"], [355, "index-0"], [356, "index-0"], [357, "index-0"], [358, "index-0"]], "set_any_layout": [[281, "index-1"]], "group": [[286, "index-0"], [287, "index-0"], [288, "index-0"], [289, "index-0"], [290, "index-0"], [291, "index-0"], [292, "index-0"], [293, "index-0"], [294, "index-0"], [295, "index-0"], [296, "index-0"], [297, "index-0"], [298, "index-0"], [299, "index-0"], [300, "index-0"], [301, "index-0"], [302, "index-0"], [303, "index-0"], [304, "index-0"], [305, "index-0"], [306, "index-0"], [307, "index-0"], [308, "index-0"], [309, "index-0"], [310, "index-0"], [311, "index-0"], [312, "index-0"], [313, "index-0"], [314, "index-0"], [315, "index-0"], [316, "index-0"], [317, "index-0"], [318, "index-0"], [319, "index-0"], [320, "index-0"], [321, "index-0"], [322, "index-0"], [323, "index-0"], [324, "index-0"], [325, "index-0"], [326, "index-0"], [327, "index-0"], [328, "index-0"], [329, "index-0"], [330, "index-0"], [331, "index-0"], [332, "index-0"], [333, "index-0"], [334, "index-0"], [335, "index-0"], [336, "index-0"], [337, "index-0"], [338, "index-0"], [339, "index-0"], [340, "index-0"], [341, "index-0"], [342, "index-0"], [343, "index-0"], [344, "index-0"], [345, "index-0"]], "onednn api": [[286, "index-0"]], "accumulation mode": [[287, "index-0"]], "convert_to_c": [[287, "index-1"], [288, "index-5"], [288, "index-6"], [288, "index-7"], [288, "index-8"], [298, "index-2"], [299, "index-1"], [312, "index-5"], [312, "index-6"], [312, "index-7"], [317, "index-1"], [317, "index-2"], [352, "index-1"], [353, "index-1"]], "attributes": [[288, "index-0"]], "const_dnnl_post_ops_t": [[288, "index-4"]], "const_dnnl_primitive_attr_t": [[288, "index-2"]], "dnnl_post_ops_append_binary": [[288, "index-43"]], "dnnl_post_ops_append_dw": [[288, "index-41"]], "dnnl_post_ops_append_eltwise": [[288, "index-39"]], "dnnl_post_ops_append_prelu": [[288, "index-45"]], "dnnl_post_ops_append_sum": [[288, "index-37"]], "dnnl_post_ops_clone": [[288, "index-33"]], "dnnl_post_ops_create": [[288, "index-32"]], "dnnl_post_ops_destroy": [[288, "index-34"]], "dnnl_post_ops_get_kind": [[288, "index-36"]], "dnnl_post_ops_get_params_binary": [[288, "index-44"]], "dnnl_post_ops_get_params_dw": [[288, "index-42"]], "dnnl_post_ops_get_params_eltwise": [[288, "index-40"]], "dnnl_post_ops_get_params_prelu": [[288, "index-46"]], "dnnl_post_ops_get_params_sum": [[288, "index-38"]], "dnnl_post_ops_len": [[288, "index-35"]], "dnnl_post_ops_t": [[288, "index-3"]], "dnnl_primitive_attr_clone": [[288, "index-10"]], "dnnl_primitive_attr_create": [[288, "index-9"]], "dnnl_primitive_attr_destroy": [[288, "index-11"]], "dnnl_primitive_attr_get_accumulation_mode": [[288, "index-20"]], "dnnl_primitive_attr_get_deterministic": [[288, "index-18"]], "dnnl_primitive_attr_get_dropout": [[288, "index-12"]], "dnnl_primitive_attr_get_fpmath_mode": [[288, "index-14"]], "dnnl_primitive_attr_get_fpmath_mode_v2": [[288, "index-16"]], "dnnl_primitive_attr_get_post_ops": [[288, "index-30"]], "dnnl_primitive_attr_get_rnn_data_qparams": [[288, "index-48"]], "dnnl_primitive_attr_get_rnn_weights_projection_qparams": [[288, "index-52"]], "dnnl_primitive_attr_get_rnn_weights_qparams": [[288, "index-50"]], "dnnl_primitive_attr_get_rounding": [[288, "index-29"]], "dnnl_primitive_attr_get_scratchpad_mode": [[288, "index-22"]], "dnnl_primitive_attr_set_accumulation_mode": [[288, "index-21"]], "dnnl_primitive_attr_set_deterministic": [[288, "index-19"]], "dnnl_primitive_attr_set_dropout": [[288, "index-13"]], "dnnl_primitive_attr_set_fpmath_mode": [[288, "index-15"]], "dnnl_primitive_attr_set_fpmath_mode_v2": [[288, "index-17"]], "dnnl_primitive_attr_set_post_ops": [[288, "index-31"]], "dnnl_primitive_attr_set_rnn_data_qparams": [[288, "index-47"]], "dnnl_primitive_attr_set_rnn_weights_projection_qparams": [[288, "index-51"]], "dnnl_primitive_attr_set_rnn_weights_qparams": [[288, "index-49"]], "dnnl_primitive_attr_set_rounding": [[288, "index-28"]], "dnnl_primitive_attr_set_scales": [[288, "index-25"]], "dnnl_primitive_attr_set_scales_mask": [[288, "index-24"]], "dnnl_primitive_attr_set_scratchpad_mode": [[288, "index-23"]], "dnnl_primitive_attr_set_zero_points": [[288, "index-27"]], "dnnl_primitive_attr_set_zero_points_mask": [[288, "index-26"]], "dnnl_primitive_attr_t": [[288, "index-1"]], "dnnl_batch_normalization_backward_primitive_desc_create": [[289, "index-2"]], "dnnl_batch_normalization_forward_primitive_desc_create": [[289, "index-1"]], "dnnl_binary_primitive_desc_create": [[290, "index-1"]], "dnnl_binary_primitive_desc_create_v2": [[290, "index-2"]], "blas functions": [[291, "index-0"]], "dnnl_gemm_s8s8s32": [[291, "index-6"]], "dnnl_gemm_u8s8s32": [[291, "index-5"]], "dnnl_sgemm": [[291, "index-4"]], "gemm_s8s8s32": [[291, "index-3"], [354, "index-5"]], "gemm_u8s8s32": [[291, "index-2"], [354, "index-4"]], "sgemm": [[291, "index-1"], [354, "index-3"]], "common api": [[292, "index-0"]], "dnnl_concat_primitive_desc_create": [[293, "index-1"]], "dnnl_convolution_backward_data_primitive_desc_create": [[294, "index-2"]], "dnnl_convolution_backward_weights_primitive_desc_create": [[294, "index-3"]], "dnnl_convolution_forward_primitive_desc_create": [[294, "index-1"]], "dnnl_max_ndims": [[295, "index-3"]], "define": [[295, "index-3"], [306, "index-36"], [306, "index-37"], [306, "index-38"], [306, "index-39"], [306, "index-40"], [306, "index-41"], [312, "index-21"], [312, "index-22"], [312, "index-23"], [312, "index-24"], [312, "index-25"], [312, "index-26"], [312, "index-27"], [312, "index-28"], [312, "index-29"], [312, "index-30"], [312, "index-31"], [312, "index-32"], [312, "index-33"], [312, "index-34"], [312, "index-35"], [312, "index-36"], [312, "index-37"], [312, "index-38"], [312, "index-39"], [312, "index-40"], [312, "index-41"], [312, "index-42"], [312, "index-43"], [312, "index-44"], [312, "index-45"], [312, "index-46"], [312, "index-47"], [312, "index-48"], [312, "index-49"], [312, "index-50"], [312, "index-51"], [312, "index-52"], [312, "index-53"], [312, "index-54"], [312, "index-55"], [312, "index-56"], [312, "index-57"], [312, "index-58"], [312, "index-59"], [312, "index-60"], [312, "index-61"], [312, "index-62"], [312, "index-63"], [312, "index-64"], [312, "index-65"], [312, "index-66"], [312, "index-67"], [312, "index-68"], [312, "index-69"], [312, "index-70"], [312, "index-71"], [312, "index-72"], [312, "index-73"], [312, "index-74"], [312, "index-75"], [312, "index-76"], [312, "index-77"], [312, "index-78"], [312, "index-79"], [312, "index-80"], [312, "index-81"], [312, "index-82"], [312, "index-83"], [312, "index-84"], [312, "index-85"], [312, "index-86"], [312, "index-87"], [312, "index-88"], [312, "index-89"], [312, "index-90"], [312, "index-91"], [312, "index-92"], [312, "index-93"], [312, "index-94"], [312, "index-95"], [312, "index-96"], [318, "index-22"], [318, "index-23"], [318, "index-24"], [318, "index-25"], [318, "index-26"], [318, "index-27"], [338, "index-6"], [338, "index-7"]], "dnnl_dim_t": [[295, "index-1"]], "dnnl_dims_t": [[295, "index-2"]], "dnnl_deconvolution_backward_data_primitive_desc_create": [[296, "index-2"]], "dnnl_deconvolution_backward_weights_primitive_desc_create": [[296, "index-3"]], "dnnl_deconvolution_forward_primitive_desc_create": [[296, "index-1"]], "dnnl_eltwise_backward_primitive_desc_create": [[297, "index-2"]], "dnnl_eltwise_forward_primitive_desc_create": [[297, "index-1"]], "dnnl_engine_create": [[298, "index-4"]], "dnnl_engine_destroy": [[298, "index-6"]], "dnnl_engine_get_count": [[298, "index-3"]], "dnnl_engine_get_kind": [[298, "index-5"]], "dnnl_engine_t": [[298, "index-1"]], "floating-point math mode": [[299, "index-0"]], "dnnl_get_default_fpmath_mode": [[299, "index-2"]], "dnnl_set_default_fpmath_mode": [[299, "index-3"]], "dnnl_group_normalization_backward_primitive_desc_create": [[300, "index-2"]], "dnnl_group_normalization_forward_primitive_desc_create": [[300, "index-1"]], "dnnl_inner_product_backward_data_primitive_desc_create": [[301, "index-2"]], "dnnl_inner_product_backward_weights_primitive_desc_create": [[301, "index-3"]], "dnnl_inner_product_forward_primitive_desc_create": [[301, "index-1"]], "runtime interoperability api": [[302, "index-0"], [337, "index-0"]], "dnnl_layer_normalization_backward_primitive_desc_create": [[303, "index-2"]], "dnnl_layer_normalization_backward_primitive_desc_create_v2": [[303, "index-4"]], "dnnl_layer_normalization_forward_primitive_desc_create": [[303, "index-1"]], "dnnl_layer_normalization_forward_primitive_desc_create_v2": [[303, "index-3"]], "dnnl_lrn_backward_primitive_desc_create": [[304, "index-2"]], "dnnl_lrn_forward_primitive_desc_create": [[304, "index-1"]], "dnnl_matmul_primitive_desc_create": [[305, "index-1"]], "dnnl_memory_allocate": [[306, "index-36"]], "dnnl_memory_none": [[306, "index-37"]], "dnnl_runtime_dim_val": [[306, "index-38"]], "dnnl_runtime_f32_val": [[306, "index-39"]], "dnnl_runtime_s32_val": [[306, "index-40"]], "dnnl_runtime_size_val": [[306, "index-41"]], "memory": [[306, "index-0"], [480, "index-2"], [522, "index-3"], [522, "index-4"], [522, "index-5"], [522, "index-6"]], "const_dnnl_memory_desc_t": [[306, "index-2"]], "const_dnnl_memory_t": [[306, "index-4"]], "dnnl_data_type_size": [[306, "index-22"]], "dnnl_memory_create": [[306, "index-23"]], "dnnl_memory_create_v2": [[306, "index-24"]], "dnnl_memory_desc_clone": [[306, "index-6"]], "dnnl_memory_desc_create_submemory": [[306, "index-14"]], "dnnl_memory_desc_create_with_blob": [[306, "index-8"]], "dnnl_memory_desc_create_with_coo_encoding": [[306, "index-12"]], "dnnl_memory_desc_create_with_csr_encoding": [[306, "index-11"]], "dnnl_memory_desc_create_with_packed_encoding": [[306, "index-13"]], "dnnl_memory_desc_create_with_strides": [[306, "index-9"]], "dnnl_memory_desc_create_with_tag": [[306, "index-10"]], "dnnl_memory_desc_destroy": [[306, "index-5"]], "dnnl_memory_desc_equal": [[306, "index-19"]], "dnnl_memory_desc_get_blob": [[306, "index-7"]], "dnnl_memory_desc_get_size": [[306, "index-20"]], "dnnl_memory_desc_get_size_v2": [[306, "index-21"]], "dnnl_memory_desc_permute_axes": [[306, "index-16"]], "dnnl_memory_desc_query": [[306, "index-17"]], "dnnl_memory_desc_query_v2": [[306, "index-18"]], "dnnl_memory_desc_reshape": [[306, "index-15"]], "dnnl_memory_desc_t": [[306, "index-1"]], "dnnl_memory_destroy": [[306, "index-35"]], "dnnl_memory_get_data_handle": [[306, "index-31"]], "dnnl_memory_get_data_handle_v2": [[306, "index-33"]], "dnnl_memory_get_engine": [[306, "index-26"]], "dnnl_memory_get_memory_desc": [[306, "index-25"]], "dnnl_memory_map_data": [[306, "index-27"]], "dnnl_memory_map_data_v2": [[306, "index-28"]], "dnnl_memory_set_data_handle": [[306, "index-32"]], "dnnl_memory_set_data_handle_v2": [[306, "index-34"]], "dnnl_memory_t": [[306, "index-3"]], "dnnl_memory_unmap_data": [[306, "index-29"]], "dnnl_memory_unmap_data_v2": [[306, "index-30"]], "opencl interoperability api": [[307, "index-0"], [339, "index-0"]], "dnnl_ocl_interop_engine_create": [[307, "index-9"]], "dnnl_ocl_interop_engine_create_from_cache_blob": [[307, "index-8"]], "dnnl_ocl_interop_engine_get_cache_blob": [[307, "index-7"]], "dnnl_ocl_interop_engine_get_cache_blob_id": [[307, "index-6"]], "dnnl_ocl_interop_engine_get_context": [[307, "index-10"]], "dnnl_ocl_interop_get_device": [[307, "index-11"]], "dnnl_ocl_interop_memory_create": [[307, "index-1"]], "dnnl_ocl_interop_memory_create_v2": [[307, "index-2"]], "dnnl_ocl_interop_memory_get_mem_object": [[307, "index-4"]], "dnnl_ocl_interop_memory_get_memory_kind": [[307, "index-3"]], "dnnl_ocl_interop_memory_set_mem_object": [[307, "index-5"]], "dnnl_ocl_interop_primitive_execute": [[307, "index-14"]], "dnnl_ocl_interop_stream_create": [[307, "index-12"]], "dnnl_ocl_interop_stream_get_command_queue": [[307, "index-13"]], "dnnl_pooling_backward_primitive_desc_create": [[308, "index-2"]], "dnnl_pooling_forward_primitive_desc_create": [[308, "index-1"]], "dnnl_prelu_backward_primitive_desc_create": [[309, "index-2"]], "dnnl_prelu_forward_primitive_desc_create": [[309, "index-1"]], "dnnl_get_primitive_cache_capacity": [[310, "index-3"]], "dnnl_set_primitive_cache_capacity": [[310, "index-4"]], "get_primitive_cache_capacity": [[310, "index-1"]], "set_primitive_cache_capacity": [[310, "index-2"]], "primitives": [[311, "index-0"]], "common": [[312, "index-0"]], "dnnl_arg_attr_dropout_mask": [[312, "index-21"]], "dnnl_arg_attr_dropout_probability": [[312, "index-22"]], "dnnl_arg_attr_dropout_seed": [[312, "index-23"]], "dnnl_arg_attr_multiple_post_op": [[312, "index-24"]], "dnnl_arg_attr_multiple_post_op_base": [[312, "index-25"]], "dnnl_arg_attr_output_scales": [[312, "index-26"]], "dnnl_arg_attr_post_op_dw": [[312, "index-27"]], "dnnl_arg_attr_rounding_seed": [[312, "index-28"]], "dnnl_arg_attr_scales": [[312, "index-29"]], "dnnl_arg_attr_zero_points": [[312, "index-30"]], "dnnl_arg_augru_attention": [[312, "index-31"]], "dnnl_arg_bias": [[312, "index-32"]], "dnnl_arg_diff_augru_attention": [[312, "index-33"]], "dnnl_arg_diff_bias": [[312, "index-34"]], "dnnl_arg_diff_dst": [[312, "index-35"]], "dnnl_arg_diff_dst_0": [[312, "index-36"]], "dnnl_arg_diff_dst_1": [[312, "index-37"]], "dnnl_arg_diff_dst_2": [[312, "index-38"]], "dnnl_arg_diff_dst_iter": [[312, "index-39"]], "dnnl_arg_diff_dst_iter_c": [[312, "index-40"]], "dnnl_arg_diff_dst_layer": [[312, "index-41"]], "dnnl_arg_diff_scale": [[312, "index-42"]], "dnnl_arg_diff_shift": [[312, "index-43"]], "dnnl_arg_diff_src": [[312, "index-44"]], "dnnl_arg_diff_src_0": [[312, "index-45"]], "dnnl_arg_diff_src_1": [[312, "index-46"]], "dnnl_arg_diff_src_2": [[312, "index-47"]], "dnnl_arg_diff_src_3": [[312, "index-48"]], "dnnl_arg_diff_src_iter": [[312, "index-49"]], "dnnl_arg_diff_src_iter_c": [[312, "index-50"]], "dnnl_arg_diff_src_layer": [[312, "index-51"]], "dnnl_arg_diff_weights": [[312, "index-52"]], "dnnl_arg_diff_weights_0": [[312, "index-53"]], "dnnl_arg_diff_weights_1": [[312, "index-54"]], "dnnl_arg_diff_weights_2": [[312, "index-55"]], "dnnl_arg_diff_weights_3": [[312, "index-56"]], "dnnl_arg_diff_weights_iter": [[312, "index-57"]], "dnnl_arg_diff_weights_layer": [[312, "index-58"]], "dnnl_arg_diff_weights_peephole": [[312, "index-59"]], "dnnl_arg_diff_weights_projection": [[312, "index-60"]], "dnnl_arg_dst": [[312, "index-61"]], "dnnl_arg_dst_0": [[312, "index-62"]], "dnnl_arg_dst_1": [[312, "index-63"]], "dnnl_arg_dst_2": [[312, "index-64"]], "dnnl_arg_dst_iter": [[312, "index-65"]], "dnnl_arg_dst_iter_c": [[312, "index-66"]], "dnnl_arg_dst_layer": [[312, "index-67"]], "dnnl_arg_from": [[312, "index-68"]], "dnnl_arg_mean": [[312, "index-69"]], "dnnl_arg_multiple_dst": [[312, "index-70"]], "dnnl_arg_multiple_src": [[312, "index-71"]], "dnnl_arg_reduce": [[312, "index-72"]], "dnnl_arg_scale": [[312, "index-73"]], "dnnl_arg_scratchpad": [[312, "index-74"]], "dnnl_arg_shift": [[312, "index-75"]], "dnnl_arg_src": [[312, "index-76"]], "dnnl_arg_src_0": [[312, "index-77"]], "dnnl_arg_src_1": [[312, "index-78"]], "dnnl_arg_src_2": [[312, "index-79"]], "dnnl_arg_src_3": [[312, "index-80"]], "dnnl_arg_src_iter": [[312, "index-81"]], "dnnl_arg_src_iter_c": [[312, "index-82"]], "dnnl_arg_src_layer": [[312, "index-83"]], "dnnl_arg_to": [[312, "index-84"]], "dnnl_arg_undef": [[312, "index-85"]], "dnnl_arg_variance": [[312, "index-86"]], "dnnl_arg_weights": [[312, "index-87"]], "dnnl_arg_weights_0": [[312, "index-88"]], "dnnl_arg_weights_1": [[312, "index-89"]], "dnnl_arg_weights_2": [[312, "index-90"]], "dnnl_arg_weights_3": [[312, "index-91"]], "dnnl_arg_weights_iter": [[312, "index-92"]], "dnnl_arg_weights_layer": [[312, "index-93"]], "dnnl_arg_weights_peephole": [[312, "index-94"]], "dnnl_arg_weights_projection": [[312, "index-95"]], "dnnl_arg_workspace": [[312, "index-96"]], "const_dnnl_primitive_desc_t": [[312, "index-2"]], "const_dnnl_primitive_t": [[312, "index-4"]], "dnnl_primitive_create": [[312, "index-15"]], "dnnl_primitive_create_from_cache_blob": [[312, "index-16"]], "dnnl_primitive_desc_clone": [[312, "index-9"]], "dnnl_primitive_desc_destroy": [[312, "index-11"]], "dnnl_primitive_desc_get_attr": [[312, "index-10"]], "dnnl_primitive_desc_next_impl": [[312, "index-8"]], "dnnl_primitive_desc_query": [[312, "index-12"]], "dnnl_primitive_desc_query_md": [[312, "index-13"]], "dnnl_primitive_desc_query_s32": [[312, "index-14"]], "dnnl_primitive_desc_t": [[312, "index-1"]], "dnnl_primitive_destroy": [[312, "index-20"]], "dnnl_primitive_execute": [[312, "index-17"]], "dnnl_primitive_get_cache_blob": [[312, "index-19"]], "dnnl_primitive_get_primitive_desc": [[312, "index-18"]], "dnnl_primitive_t": [[312, "index-3"]], "profiling": [[313, "index-0"]], "dnnl_query_profiling_data": [[313, "index-4"]], "dnnl_reset_profiling": [[313, "index-3"]], "get_profiling_data": [[313, "index-2"]], "reset_profiling": [[313, "index-1"]], "dnnl_reduction_primitive_desc_create": [[314, "index-1"]], "dnnl_reorder_primitive_desc_create": [[315, "index-1"]], "dnnl_resampling_backward_primitive_desc_create": [[316, "index-2"]], "dnnl_resampling_forward_primitive_desc_create": [[316, "index-1"]], "dnnl_augru_backward_primitive_desc_create": [[317, "index-12"]], "dnnl_augru_forward_primitive_desc_create": [[317, "index-11"]], "dnnl_gru_backward_primitive_desc_create": [[317, "index-8"]], "dnnl_gru_forward_primitive_desc_create": [[317, "index-7"]], "dnnl_lbr_augru_backward_primitive_desc_create": [[317, "index-14"]], "dnnl_lbr_augru_forward_primitive_desc_create": [[317, "index-13"]], "dnnl_lbr_gru_backward_primitive_desc_create": [[317, "index-10"]], "dnnl_lbr_gru_forward_primitive_desc_create": [[317, "index-9"]], "dnnl_lstm_backward_primitive_desc_create": [[317, "index-6"]], "dnnl_lstm_forward_primitive_desc_create": [[317, "index-5"]], "dnnl_vanilla_rnn_backward_primitive_desc_create": [[317, "index-4"]], "dnnl_vanilla_rnn_forward_primitive_desc_create": [[317, "index-3"]], "dnnl_jit_profile_linux_jitdump": [[318, "index-22"]], "dnnl_jit_profile_linux_jitdump_use_tsc": [[318, "index-23"]], "dnnl_jit_profile_linux_perf": [[318, "index-24"]], "dnnl_jit_profile_linux_perfmap": [[318, "index-25"]], "dnnl_jit_profile_none": [[318, "index-26"]], "dnnl_jit_profile_vtune": [[318, "index-27"]], "service": [[318, "index-0"]], "dnnl_get_cpu_isa_hints": [[318, "index-19"]], "dnnl_get_effective_cpu_isa": [[318, "index-17"]], "dnnl_set_cpu_isa_hints": [[318, "index-18"]], "dnnl_set_jit_dump": [[318, "index-13"]], "dnnl_set_jit_profiling_flags": [[318, "index-14"]], "dnnl_set_jit_profiling_jitdumpdir": [[318, "index-15"]], "dnnl_set_max_cpu_isa": [[318, "index-16"]], "dnnl_set_verbose": [[318, "index-20"]], "dnnl_version": [[318, "index-21"]], "get_cpu_isa_hints": [[318, "index-12"]], "get_default_fpmath_mode": [[318, "index-4"]], "get_effective_cpu_isa": [[318, "index-10"]], "set_cpu_isa_hints": [[318, "index-11"]], "set_default_fpmath_mode": [[318, "index-5"]], "set_jit_dump": [[318, "index-6"]], "set_jit_profiling_flags": [[318, "index-7"]], "set_jit_profiling_jitdumpdir": [[318, "index-8"]], "set_max_cpu_isa": [[318, "index-9"]], "set_verbose": [[318, "index-2"]], "version": [[318, "index-3"]], "version_t": [[318, "index-1"]], "dnnl_shuffle_backward_primitive_desc_create": [[319, "index-2"]], "dnnl_shuffle_forward_primitive_desc_create": [[319, "index-1"]], "dnnl_softmax_backward_primitive_desc_create": [[320, "index-2"]], "dnnl_softmax_forward_primitive_desc_create": [[320, "index-1"]], "stream": [[321, "index-0"], [560, "index-1"], [560, "index-2"]], "const_dnnl_stream_t": [[321, "index-2"]], "dnnl_stream_create": [[321, "index-3"]], "dnnl_stream_destroy": [[321, "index-6"]], "dnnl_stream_get_engine": [[321, "index-4"]], "dnnl_stream_t": [[321, "index-1"]], "dnnl_stream_wait": [[321, "index-5"]], "dnnl_sum_primitive_desc_create": [[322, "index-1"]], "sycl interoperability api": [[323, "index-0"], [343, "index-0"]], "dnnl_sycl_interop_engine_create": [[323, "index-1"]], "dnnl_sycl_interop_engine_get_context": [[323, "index-2"]], "dnnl_sycl_interop_engine_get_device": [[323, "index-3"]], "dnnl_sycl_interop_memory_create": [[323, "index-4"]], "dnnl_sycl_interop_memory_create_v2": [[323, "index-5"]], "dnnl_sycl_interop_memory_get_memory_kind": [[323, "index-6"]], "dnnl_sycl_interop_memory_set_buffer": [[323, "index-7"]], "dnnl_sycl_interop_primitive_execute": [[323, "index-10"]], "dnnl_sycl_interop_stream_create": [[323, "index-8"]], "dnnl_sycl_interop_stream_get_queue": [[323, "index-9"]], "threadpool interoperability api": [[324, "index-0"]], "dnnl_threadpool_interop_gemm_s8s8s32": [[324, "index-7"]], "dnnl_threadpool_interop_gemm_u8s8s32": [[324, "index-6"]], "dnnl_threadpool_interop_get_max_concurrency": [[324, "index-4"]], "dnnl_threadpool_interop_set_max_concurrency": [[324, "index-3"]], "dnnl_threadpool_interop_sgemm": [[324, "index-5"]], "dnnl_threadpool_interop_stream_create": [[324, "index-1"]], "dnnl_threadpool_interop_stream_get_threadpool": [[324, "index-2"]], "ukernels": [[325, "index-0"]], "const_dnnl_ukernel_attr_params_t": [[325, "index-2"]], "dnnl_ukernel_attr_params_create": [[325, "index-3"]], "dnnl_ukernel_attr_params_destroy": [[325, "index-8"]], "dnnl_ukernel_attr_params_set_a_scales": [[325, "index-5"]], "dnnl_ukernel_attr_params_set_b_scales": [[325, "index-6"]], "dnnl_ukernel_attr_params_set_d_scales": [[325, "index-7"]], "dnnl_ukernel_attr_params_set_post_ops_args": [[325, "index-4"]], "dnnl_ukernel_attr_params_t": [[325, "index-1"]], "brgemm ukernel": [[326, "index-0"]], "const_dnnl_brgemm_t": [[326, "index-2"]], "const_dnnl_transform_t": [[326, "index-4"]], "dnnl_brgemm_create": [[326, "index-5"]], "dnnl_brgemm_destroy": [[326, "index-20"]], "dnnl_brgemm_execute": [[326, "index-18"]], "dnnl_brgemm_execute_postops": [[326, "index-19"]], "dnnl_brgemm_finalize": [[326, "index-11"]], "dnnl_brgemm_generate": [[326, "index-17"]], "dnnl_brgemm_get_b_pack_type": [[326, "index-12"]], "dnnl_brgemm_get_scratchpad_size": [[326, "index-13"]], "dnnl_brgemm_is_execute_postops_valid": [[326, "index-14"]], "dnnl_brgemm_release_hw_context": [[326, "index-16"]], "dnnl_brgemm_set_a_scales": [[326, "index-8"]], "dnnl_brgemm_set_b_scales": [[326, "index-9"]], "dnnl_brgemm_set_d_scales": [[326, "index-10"]], "dnnl_brgemm_set_add_c": [[326, "index-6"]], "dnnl_brgemm_set_hw_context": [[326, "index-15"]], "dnnl_brgemm_set_post_ops": [[326, "index-7"]], "dnnl_brgemm_t": [[326, "index-1"]], "dnnl_transform_create": [[326, "index-21"]], "dnnl_transform_destroy": [[326, "index-24"]], "dnnl_transform_execute": [[326, "index-23"]], "dnnl_transform_generate": [[326, "index-22"]], "dnnl_transform_t": [[326, "index-3"]], "transform ukernel": [[327, "index-0"]], "ukernel utils": [[328, "index-0"]], "utilities": [[329, "index-0"], [345, "index-0"]], "graph api": [[330, "index-0"]], "const_dnnl_graph_allocator_t": [[331, "index-4"]], "dnnl_graph_allocator_create": [[331, "index-5"]], "dnnl_graph_allocator_destroy": [[331, "index-6"]], "dnnl_graph_allocator_t": [[331, "index-3"]], "dnnl_graph_host_allocate_f": [[331, "index-1"]], "dnnl_graph_host_deallocate_f": [[331, "index-2"]], "compiled partition": [[332, "index-0"]], "const_dnnl_graph_compiled_partition_t": [[332, "index-2"]], "dnnl_graph_compiled_partition_create": [[332, "index-3"]], "dnnl_graph_compiled_partition_destroy": [[332, "index-5"]], "dnnl_graph_compiled_partition_execute": [[332, "index-4"]], "dnnl_graph_compiled_partition_get_inplace_ports": [[332, "index-7"]], "dnnl_graph_compiled_partition_query_logical_tensor": [[332, "index-6"]], "dnnl_graph_compiled_partition_t": [[332, "index-1"]], "compiled partition cache": [[333, "index-0"]], "dnnl_graph_get_compiled_partition_cache_capacity": [[333, "index-3"]], "dnnl_graph_set_compiled_partition_cache_capacity": [[333, "index-4"]], "get_compiled_partition_cache_capacity": [[333, "index-1"]], "set_compiled_partition_cache_capacity": [[333, "index-2"]], "dnnl_graph_get_constant_tensor_cache": [[334, "index-6"]], "dnnl_graph_get_constant_tensor_cache_capacity": [[334, "index-8"]], "dnnl_graph_set_constant_tensor_cache": [[334, "index-5"]], "dnnl_graph_set_constant_tensor_cache_capacity": [[334, "index-7"]], "get_constant_tensor_cache": [[334, "index-2"]], "get_constant_tensor_cache_capacity": [[334, "index-4"]], "set_constant_tensor_cache": [[334, "index-1"]], "set_constant_tensor_cache_capacity": [[334, "index-3"]], "dnnl_graph_make_engine_with_allocator": [[335, "index-2"]], "make_engine_with_allocator": [[335, "index-1"], [350, "index-2"], [350, "index-3"]], "const_dnnl_graph_graph_t": [[336, "index-2"]], "dnnl_graph_add_op": [[336, "index-8"]], "dnnl_graph_graph_create": [[336, "index-3"]], "dnnl_graph_graph_create_with_fpmath_mode": [[336, "index-4"]], "dnnl_graph_graph_destroy": [[336, "index-5"]], "dnnl_graph_graph_filter": [[336, "index-11"]], "dnnl_graph_graph_finalize": [[336, "index-9"]], "dnnl_graph_graph_get_fpmath_mode": [[336, "index-7"]], "dnnl_graph_graph_get_partition_num": [[336, "index-12"]], "dnnl_graph_graph_get_partitions": [[336, "index-13"]], "dnnl_graph_graph_is_finalized": [[336, "index-10"]], "dnnl_graph_graph_set_fpmath_mode": [[336, "index-6"]], "dnnl_graph_graph_t": [[336, "index-1"]], "dnnl_graph_unknown_dim": [[338, "index-6"]], "dnnl_graph_unknown_ndims": [[338, "index-7"]], "logical tensor": [[338, "index-0"]], "dnnl_graph_logical_tensor_get_mem_size": [[338, "index-4"]], "dnnl_graph_logical_tensor_init": [[338, "index-1"]], "dnnl_graph_logical_tensor_init_with_dims": [[338, "index-2"]], "dnnl_graph_logical_tensor_init_with_strides": [[338, "index-3"]], "dnnl_graph_logical_tensor_is_equal": [[338, "index-5"]], "dnnl_graph_ocl_allocate_f": [[339, "index-1"]], "dnnl_graph_ocl_deallocate_f": [[339, "index-2"]], "dnnl_graph_ocl_interop_allocator_create": [[339, "index-3"]], "dnnl_graph_ocl_interop_compiled_partition_execute": [[339, "index-6"]], "dnnl_graph_ocl_interop_make_engine_from_cache_blob_with_allocator": [[339, "index-5"]], "dnnl_graph_ocl_interop_make_engine_with_allocator": [[339, "index-4"]], "const_dnnl_graph_op_t": [[340, "index-2"]], "dnnl_graph_op_add_input": [[340, "index-5"]], "dnnl_graph_op_add_output": [[340, "index-6"]], "dnnl_graph_op_create": [[340, "index-3"]], "dnnl_graph_op_destroy": [[340, "index-4"]], "dnnl_graph_op_get_id": [[340, "index-11"]], "dnnl_graph_op_get_kind": [[340, "index-12"]], "dnnl_graph_op_set_attr_bool": [[340, "index-8"]], "dnnl_graph_op_set_attr_f32": [[340, "index-7"]], "dnnl_graph_op_set_attr_s64": [[340, "index-9"]], "dnnl_graph_op_set_attr_str": [[340, "index-10"]], "dnnl_graph_op_t": [[340, "index-1"]], "const_dnnl_graph_partition_t": [[341, "index-2"]], "dnnl_graph_partition_compile": [[341, "index-8"]], "dnnl_graph_partition_create_with_op": [[341, "index-3"]], "dnnl_graph_partition_destroy": [[341, "index-4"]], "dnnl_graph_partition_get_engine_kind": [[341, "index-14"]], "dnnl_graph_partition_get_id": [[341, "index-7"]], "dnnl_graph_partition_get_input_ports": [[341, "index-10"]], "dnnl_graph_partition_get_input_ports_num": [[341, "index-9"]], "dnnl_graph_partition_get_op_num": [[341, "index-5"]], "dnnl_graph_partition_get_ops": [[341, "index-6"]], "dnnl_graph_partition_get_output_ports": [[341, "index-12"]], "dnnl_graph_partition_get_output_ports_num": [[341, "index-11"]], "dnnl_graph_partition_is_supported": [[341, "index-13"]], "dnnl_graph_partition_t": [[341, "index-1"]], "dnnl_graph_sycl_allocate_f": [[343, "index-1"]], "dnnl_graph_sycl_deallocate_f": [[343, "index-2"]], "dnnl_graph_sycl_interop_allocator_create": [[343, "index-3"]], "dnnl_graph_sycl_interop_compiled_partition_execute": [[343, "index-5"]], "dnnl_graph_sycl_interop_make_engine_with_allocator": [[343, "index-4"]], "const_dnnl_graph_tensor_t": [[344, "index-2"]], "dnnl_graph_tensor_create": [[344, "index-3"]], "dnnl_graph_tensor_destroy": [[344, "index-4"]], "dnnl_graph_tensor_get_data_handle": [[344, "index-5"]], "dnnl_graph_tensor_get_engine": [[344, "index-7"]], "dnnl_graph_tensor_get_logical_tensor": [[344, "index-8"]], "dnnl_graph_tensor_set_data_handle": [[344, "index-6"]], "dnnl_graph_tensor_t": [[344, "index-1"]], "dnnl": [[348, "index-0"]], "dnnl::graph": [[349, "index-0"]], "dnnl::graph::ocl_interop": [[350, "index-0"]], "make_allocator": [[350, "index-1"], [351, "index-1"]], "dnnl::graph::sycl_interop": [[351, "index-0"]], "dnnl::ocl_interop": [[352, "index-0"]], "get_command_queue": [[352, "index-9"]], "get_context": [[352, "index-6"], [353, "index-3"]], "get_device": [[352, "index-7"], [353, "index-4"]], "get_engine_cache_blob": [[352, "index-3"]], "get_engine_cache_blob_id": [[352, "index-2"]], "get_mem_object": [[352, "index-10"]], "get_memory_kind": [[352, "index-12"], [353, "index-9"]], "make_engine": [[352, "index-4"], [352, "index-5"], [353, "index-2"]], "make_memory": [[352, "index-13"], [352, "index-14"], [352, "index-15"], [352, "index-16"], [353, "index-10"], [353, "index-11"], [353, "index-12"]], "make_stream": [[352, "index-8"], [353, "index-5"], [354, "index-1"]], "set_mem_object": [[352, "index-11"]], "dnnl::sycl_interop": [[353, "index-0"]], "get_buffer": [[353, "index-7"]], "get_queue": [[353, "index-6"]], "set_buffer": [[353, "index-8"]], "dnnl::threadpool_interop": [[354, "index-0"]], "get_threadpool": [[354, "index-2"]], "dnnl::ukernel": [[355, "index-0"]], "oneapi": [[356, "index-0"]], "std": [[357, "index-0"]], "sycl": [[358, "index-0"]], "augru rnn primitive example": [[360, "index-0"]], "batch normalization primitive example": [[362, "index-0"]], "binary primitive example": [[364, "index-0"]], "bnorm u8 by binary post-ops example": [[366, "index-0"]], "cnn f32 inference example": [[368, "index-0"], [369, "index-0"]], "cnn int8 inference example": [[370, "index-0"]], "cnn bf16 training example": [[371, "index-0"]], "cnn f32 training example": [[372, "index-0"], [378, "index-0"]], "concat primitive example": [[373, "index-0"]], "convolution primitive example": [[375, "index-0"]], "brgemm ukernel example": [[377, "index-0"]], "matmul primitive example": [[379, "index-0"], [380, "index-0"], [383, "index-0"], [417, "index-0"]], "matmul tutorial: quantization": [[381, "index-0"]], "rnn f32 inference example": [[384, "index-0"]], "rnn int8 inference example": [[385, "index-0"]], "matmul tutorial: comparison with sgemm": [[386, "index-0"]], "reorder between cpu and gpu engines": [[388, "index-0"], [389, "index-0"]], "deconvolution primitive example": [[390, "index-0"]], "element-wise primitive example": [[392, "index-0"]], "getting started": [[394, "index-0"]], "getting started on gpu with opencl extensions api": [[395, "index-0"]], "getting started on cpu with graph api": [[396, "index-0"]], "convolution int8 inference example with graph api": [[397, "index-0"]], "single op partition on cpu": [[398, "index-0"]], "getting started with opencl extensions and graph api": [[399, "index-0"]], "getting started with sycl extensions api and graph api": [[400, "index-0"]], "single op partition on gpu": [[401, "index-0"]], "group normalization primitive example": [[402, "index-0"]], "matmul tutorial: int8 inference": [[404, "index-0"]], "inner product primitive example": [[406, "index-0"]], "layer normalization primitive example": [[408, "index-0"]], "linear-before-reset gru rnn primitive example": [[410, "index-0"]], "legal information": [[412, "index-0"]], "local response normalization primitive example": [[413, "index-0"]], "lstm rnn primitive example": [[415, "index-0"]], "memory format propagation": [[419, "index-0"]], "performance profiling example": [[420, "index-0"]], "pooling primitive example": [[421, "index-0"]], "primitive example": [[423, "index-0"]], "reduction primitive example": [[425, "index-0"]], "reorder primitive example": [[427, "index-0"]], "resampling primitive example": [[429, "index-0"]], "rnn f32 training example": [[431, "index-0"]], "shuffle primitive example": [[432, "index-0"]], "softmax primitive example": [[434, "index-0"]], "sum primitive example": [[436, "index-0"]], "getting started on both cpu and gpu with sycl extensions api": [[438, "index-0"]], "todo list": [[439, "index-0"]], "vanilla rnn primitive example": [[440, "index-0"]], "matmul tutorial: weights decompression": [[442, "index-0"]], "args_t": [[446, "index-0"]], "struct": [[446, "index-0"], [447, "index-0"], [448, "index-0"], [449, "index-0"], [450, "index-0"], [451, "index-0"], [452, "index-0"], [453, "index-0"], [454, "index-0"], [455, "index-0"], [456, "index-0"], [457, "index-0"], [458, "index-0"], [459, "index-0"], [460, "index-0"], [461, "index-0"], [462, "index-0"], [463, "index-0"], [464, "index-0"], [465, "index-0"], [466, "index-0"], [467, "index-0"], [468, "index-0"], [469, "index-0"], [470, "index-0"], [471, "index-0"], [472, "index-0"], [473, "index-0"], [474, "index-0"], [475, "index-0"], [476, "index-0"], [477, "index-0"], [478, "index-0"], [479, "index-0"], [480, "index-0"], [481, "index-0"], [482, "index-0"], [483, "index-0"], [484, "index-0"], [485, "index-0"], [486, "index-0"], [487, "index-0"], [488, "index-0"], [489, "index-0"], [490, "index-0"], [491, "index-0"], [492, "index-0"], [493, "index-0"], [494, "index-0"], [495, "index-0"], [496, "index-0"], [497, "index-0"], [498, "index-0"], [499, "index-0"], [500, "index-0"], [501, "index-0"], [502, "index-0"], [503, "index-0"], [504, "index-0"], [505, "index-0"], [506, "index-0"], [507, "index-0"], [508, "index-0"], [509, "index-0"], [510, "index-0"], [511, "index-0"], [512, "index-0"], [513, "index-0"], [514, "index-0"], [515, "index-0"], [516, "index-0"], [517, "index-0"], [518, "index-0"], [519, "index-0"], [520, "index-0"], [521, "index-0"], [522, "index-0"], [523, "index-0"], [524, "index-0"], [525, "index-0"], [526, "index-0"], [527, "index-0"], [528, "index-0"], [529, "index-0"], [530, "index-0"], [531, "index-0"], [532, "index-0"], [533, "index-0"], [534, "index-0"], [535, "index-0"], [536, "index-0"], [537, "index-0"], [538, "index-0"], [539, "index-0"], [540, "index-0"], [541, "index-0"], [542, "index-0"], [543, "index-0"], [544, "index-0"], [545, "index-0"], [546, "index-0"], [547, "index-0"], [548, "index-0"], [549, "index-0"], [550, "index-0"], [551, "index-0"], [552, "index-0"], [553, "index-0"], [554, "index-0"], [555, "index-0"], [556, "index-0"], [557, "index-0"], [558, "index-0"], [559, "index-0"], [560, "index-0"], [561, "index-0"], [562, "index-0"], [563, "index-0"], [564, "index-0"], [565, "index-0"], [566, "index-0"], [567, "index-0"], [568, "index-0"], [569, "index-0"], [570, "index-0"], [571, "index-0"], [572, "index-0"], [573, "index-0"], [574, "index-0"], [575, "index-0"], [576, "index-0"], [577, "index-0"], [578, "index-0"], [579, "index-0"], [580, "index-0"]], "cpu_deletor_t": [[447, "index-0"]], "augru_backward": [[448, "index-1"], [448, "index-2"], [448, "index-3"]], "dnnl::augru_backward": [[448, "index-0"]], "attention_desc": [[449, "index-6"], [451, "index-6"], [504, "index-6"], [506, "index-6"]], "bias_desc": [[449, "index-9"], [451, "index-9"], [466, "index-10"], [472, "index-10"], [488, "index-8"], [490, "index-8"], [498, "index-8"], [504, "index-9"], [506, "index-9"], [508, "index-8"], [510, "index-8"], [516, "index-13"], [518, "index-13"], [520, "index-7"], [550, "index-11"], [570, "index-9"], [572, "index-9"]], "diff_attention_desc": [[449, "index-15"], [504, "index-15"]], "diff_bias_desc": [[449, "index-18"], [464, "index-10"], [470, "index-10"], [488, "index-16"], [496, "index-8"], [504, "index-18"], [508, "index-16"], [516, "index-25"], [550, "index-23"], [570, "index-17"]], "diff_dst_iter_desc": [[449, "index-20"], [488, "index-18"], [504, "index-20"], [508, "index-18"], [516, "index-27"], [550, "index-25"], [570, "index-19"]], "diff_dst_layer_desc": [[449, "index-19"], [488, "index-17"], [504, "index-19"], [508, "index-17"], [516, "index-26"], [550, "index-24"], [570, "index-18"]], "diff_src_iter_desc": [[449, "index-14"], [488, "index-13"], [504, "index-14"], [508, "index-13"], [516, "index-19"], [550, "index-17"], [570, "index-14"]], "diff_src_layer_desc": [[449, "index-13"], [488, "index-12"], [504, "index-13"], [508, "index-12"], [516, "index-18"], [550, "index-15"], [570, "index-13"]], "diff_weights_iter_desc": [[449, "index-17"], [488, "index-15"], [504, "index-17"], [508, "index-15"], [516, "index-22"], [550, "index-20"], [570, "index-16"]], "diff_weights_layer_desc": [[449, "index-16"], [488, "index-14"], [504, "index-16"], [508, "index-14"], [516, "index-21"], [550, "index-19"], [570, "index-15"]], "dnnl::augru_backward::primitive_desc": [[449, "index-0"]], "dst_iter_desc": [[449, "index-11"], [451, "index-11"], [488, "index-10"], [490, "index-10"], [504, "index-11"], [506, "index-11"], [508, "index-10"], [510, "index-10"], [516, "index-15"], [518, "index-15"], [550, "index-13"], [570, "index-11"], [572, "index-11"]], "dst_layer_desc": [[449, "index-10"], [451, "index-10"], [488, "index-9"], [490, "index-9"], [504, "index-10"], [506, "index-10"], [508, "index-9"], [510, "index-9"], [516, "index-14"], [518, "index-14"], [550, "index-12"], [570, "index-10"], [572, "index-10"]], "get_cell_kind": [[449, "index-21"], [451, "index-13"], [488, "index-19"], [490, "index-12"], [504, "index-21"], [506, "index-13"], [508, "index-19"], [510, "index-12"], [516, "index-29"], [518, "index-18"], [541, "index-18"], [570, "index-20"], [572, "index-13"]], "get_direction": [[449, "index-23"], [451, "index-15"], [488, "index-21"], [490, "index-14"], [504, "index-23"], [506, "index-15"], [508, "index-21"], [510, "index-14"], [516, "index-31"], [518, "index-20"], [541, "index-19"], [570, "index-23"], [572, "index-16"]], "get_prop_kind": [[449, "index-22"], [451, "index-14"], [453, "index-13"], [455, "index-10"], [462, "index-9"], [464, "index-12"], [466, "index-12"], [468, "index-9"], [470, "index-12"], [472, "index-12"], [474, "index-10"], [476, "index-9"], [484, "index-13"], [486, "index-10"], [488, "index-20"], [490, "index-13"], [494, "index-7"], [496, "index-9"], [498, "index-9"], [500, "index-16"], [502, "index-13"], [504, "index-22"], [506, "index-14"], [508, "index-20"], [510, "index-13"], [512, "index-8"], [514, "index-8"], [516, "index-30"], [518, "index-19"], [526, "index-8"], [528, "index-8"], [532, "index-7"], [534, "index-6"], [541, "index-23"], [552, "index-6"], [554, "index-6"], [556, "index-8"], [558, "index-7"], [570, "index-21"], [572, "index-14"]], "primitive_desc": [[449, "index-1"], [449, "index-2"], [449, "index-3"], [451, "index-1"], [451, "index-2"], [451, "index-3"], [453, "index-1"], [453, "index-2"], [453, "index-3"], [455, "index-1"], [455, "index-2"], [455, "index-3"], [457, "index-1"], [457, "index-2"], [457, "index-3"], [457, "index-4"], [460, "index-1"], [460, "index-2"], [460, "index-3"], [460, "index-4"], [462, "index-1"], [462, "index-2"], [462, "index-3"], [462, "index-4"], [464, "index-1"], [464, "index-2"], [464, "index-3"], [464, "index-4"], [464, "index-5"], [464, "index-6"], [466, "index-1"], [466, "index-2"], [466, "index-3"], [466, "index-4"], [466, "index-5"], [466, "index-6"], [468, "index-1"], [468, "index-2"], [468, "index-3"], [468, "index-4"], [470, "index-1"], [470, "index-2"], [470, "index-3"], [470, "index-4"], [470, "index-5"], [470, "index-6"], [472, "index-1"], [472, "index-2"], [472, "index-3"], [472, "index-4"], [472, "index-5"], [472, "index-6"], [474, "index-1"], [474, "index-2"], [474, "index-3"], [474, "index-4"], [474, "index-5"], [476, "index-1"], [476, "index-2"], [476, "index-3"], [476, "index-4"], [476, "index-5"], [484, "index-1"], [484, "index-2"], [484, "index-3"], [486, "index-1"], [486, "index-2"], [486, "index-3"], [488, "index-1"], [488, "index-2"], [488, "index-3"], [490, "index-1"], [490, "index-2"], [490, "index-3"], [494, "index-1"], [494, "index-2"], [494, "index-3"], [496, "index-1"], [496, "index-2"], [496, "index-3"], [496, "index-4"], [498, "index-1"], [498, "index-2"], [498, "index-3"], [498, "index-4"], [500, "index-1"], [500, "index-2"], [500, "index-3"], [500, "index-4"], [500, "index-5"], [500, "index-6"], [502, "index-1"], [502, "index-2"], [502, "index-3"], [502, "index-4"], [502, "index-5"], [502, "index-6"], [504, "index-1"], [504, "index-2"], [504, "index-3"], [506, "index-1"], [506, "index-2"], [506, "index-3"], [508, "index-1"], [508, "index-2"], [508, "index-3"], [510, "index-1"], [510, "index-2"], [510, "index-3"], [512, "index-1"], [512, "index-2"], [512, "index-3"], [514, "index-1"], [514, "index-2"], [514, "index-3"], [516, "index-1"], [516, "index-2"], [516, "index-3"], [516, "index-4"], [516, "index-5"], [518, "index-1"], [518, "index-2"], [518, "index-3"], [518, "index-4"], [518, "index-5"], [520, "index-1"], [520, "index-2"], [520, "index-3"], [520, "index-4"], [526, "index-1"], [526, "index-2"], [526, "index-3"], [528, "index-1"], [528, "index-2"], [528, "index-3"], [532, "index-1"], [532, "index-2"], [532, "index-3"], [534, "index-1"], [534, "index-2"], [534, "index-3"], [543, "index-1"], [543, "index-2"], [543, "index-3"], [545, "index-1"], [545, "index-2"], [545, "index-3"], [545, "index-4"], [547, "index-1"], [547, "index-2"], [547, "index-3"], [547, "index-4"], [549, "index-1"], [549, "index-2"], [549, "index-3"], [549, "index-4"], [549, "index-5"], [552, "index-1"], [552, "index-2"], [552, "index-3"], [554, "index-1"], [554, "index-2"], [554, "index-3"], [556, "index-1"], [556, "index-2"], [556, "index-3"], [558, "index-1"], [558, "index-2"], [558, "index-3"], [562, "index-1"], [562, "index-2"], [562, "index-3"], [562, "index-4"], [570, "index-1"], [570, "index-2"], [570, "index-3"], [570, "index-4"], [572, "index-1"], [572, "index-2"], [572, "index-3"], [572, "index-4"]], "src_iter_desc": [[449, "index-5"], [451, "index-5"], [488, "index-5"], [490, "index-5"], [504, "index-5"], [506, "index-5"], [508, "index-5"], [510, "index-5"], [516, "index-7"], [518, "index-7"], [550, "index-5"], [570, "index-6"], [572, "index-6"]], "src_layer_desc": [[449, "index-4"], [451, "index-4"], [488, "index-4"], [490, "index-4"], [504, "index-4"], [506, "index-4"], [508, "index-4"], [510, "index-4"], [516, "index-6"], [518, "index-6"], [550, "index-3"], [570, "index-5"], [572, "index-5"]], "weights_iter_desc": [[449, "index-8"], [451, "index-8"], [488, "index-7"], [490, "index-7"], [504, "index-8"], [506, "index-8"], [508, "index-7"], [510, "index-7"], [516, "index-10"], [518, "index-10"], [550, "index-8"], [570, "index-8"], [572, "index-8"]], "weights_layer_desc": [[449, "index-7"], [451, "index-7"], [488, "index-6"], [490, "index-6"], [504, "index-7"], [506, "index-7"], [508, "index-6"], [510, "index-6"], [516, "index-9"], [518, "index-9"], [550, "index-7"], [570, "index-7"], [572, "index-7"]], "workspace_desc": [[449, "index-12"], [451, "index-12"], [453, "index-12"], [455, "index-7"], [484, "index-12"], [486, "index-7"], [488, "index-11"], [490, "index-11"], [500, "index-15"], [502, "index-10"], [504, "index-12"], [506, "index-12"], [508, "index-11"], [510, "index-11"], [512, "index-6"], [514, "index-6"], [516, "index-17"], [518, "index-17"], [526, "index-6"], [528, "index-6"], [541, "index-37"], [570, "index-12"], [572, "index-12"]], "augru_forward": [[450, "index-1"], [450, "index-2"], [450, "index-3"]], "dnnl::augru_forward": [[450, "index-0"]], "dnnl::augru_forward::primitive_desc": [[451, "index-0"]], "batch_normalization_backward": [[452, "index-1"], [452, "index-2"], [452, "index-3"]], "dnnl::batch_normalization_backward": [[452, "index-0"]], "diff_dst_desc": [[453, "index-8"], [462, "index-7"], [464, "index-9"], [468, "index-7"], [470, "index-9"], [474, "index-8"], [484, "index-8"], [494, "index-6"], [496, "index-7"], [500, "index-11"], [512, "index-5"], [526, "index-5"], [532, "index-6"], [541, "index-29"], [541, "index-35"], [547, "index-6"], [552, "index-5"], [556, "index-6"]], "diff_src_desc": [[453, "index-7"], [462, "index-5"], [468, "index-5"], [474, "index-7"], [484, "index-7"], [494, "index-4"], [500, "index-10"], [512, "index-4"], [526, "index-4"], [532, "index-5"], [541, "index-28"], [541, "index-34"], [547, "index-5"], [552, "index-4"], [556, "index-5"]], "diff_weights_desc": [[453, "index-9"], [464, "index-8"], [470, "index-8"], [484, "index-9"], [496, "index-6"], [500, "index-12"], [541, "index-30"], [541, "index-36"]], "dnnl::batch_normalization_backward::primitive_desc": [[453, "index-0"]], "dst_desc": [[453, "index-6"], [455, "index-5"], [457, "index-9"], [460, "index-6"], [466, "index-9"], [472, "index-9"], [476, "index-7"], [484, "index-6"], [486, "index-5"], [498, "index-7"], [500, "index-9"], [502, "index-8"], [514, "index-5"], [520, "index-8"], [528, "index-5"], [534, "index-5"], [541, "index-26"], [541, "index-32"], [543, "index-5"], [545, "index-8"], [549, "index-7"], [554, "index-5"], [556, "index-4"], [558, "index-5"], [562, "index-6"]], "get_epsilon": [[453, "index-14"], [455, "index-11"], [484, "index-15"], [486, "index-12"], [500, "index-17"], [502, "index-14"], [541, "index-8"], [543, "index-7"]], "get_flags": [[453, "index-15"], [455, "index-12"], [484, "index-16"], [486, "index-13"], [500, "index-18"], [502, "index-15"], [541, "index-9"], [563, "index-5"]], "mean_desc": [[453, "index-10"], [455, "index-8"], [484, "index-10"], [486, "index-8"], [500, "index-13"], [502, "index-11"]], "src_desc": [[453, "index-4"], [455, "index-4"], [457, "index-5"], [460, "index-5"], [464, "index-7"], [466, "index-7"], [470, "index-7"], [472, "index-7"], [474, "index-6"], [476, "index-6"], [484, "index-4"], [486, "index-4"], [496, "index-5"], [498, "index-5"], [500, "index-7"], [502, "index-7"], [514, "index-4"], [520, "index-5"], [528, "index-4"], [532, "index-4"], [534, "index-4"], [541, "index-25"], [541, "index-31"], [543, "index-4"], [545, "index-7"], [549, "index-6"], [554, "index-4"], [558, "index-4"], [562, "index-5"]], "variance_desc": [[453, "index-11"], [455, "index-9"], [484, "index-11"], [486, "index-9"], [500, "index-14"], [502, "index-12"]], "weights_desc": [[453, "index-5"], [455, "index-6"], [462, "index-6"], [466, "index-8"], [468, "index-6"], [472, "index-8"], [484, "index-5"], [486, "index-6"], [494, "index-5"], [498, "index-6"], [500, "index-8"], [502, "index-9"], [520, "index-6"], [541, "index-27"], [541, "index-33"]], "batch_normalization_forward": [[454, "index-1"], [454, "index-2"], [454, "index-3"]], "dnnl::batch_normalization_forward": [[454, "index-0"]], "dnnl::batch_normalization_forward::primitive_desc": [[455, "index-0"]], "dnnl::binary": [[456, "index-0"]], "dnnl::binary::primitive_desc": [[457, "index-0"]], "get_algorithm": [[457, "index-10"], [462, "index-8"], [464, "index-11"], [466, "index-11"], [468, "index-8"], [470, "index-11"], [472, "index-11"], [474, "index-9"], [476, "index-8"], [512, "index-7"], [514, "index-7"], [526, "index-7"], [528, "index-7"], [541, "index-10"], [543, "index-8"], [556, "index-7"], [558, "index-6"]], "src0_desc": [[457, "index-6"]], "src1_desc": [[457, "index-7"]], "src2_desc": [[457, "index-8"]], "dnnl_brgemm": [[458, "index-0"]], "dnnl::concat": [[459, "index-0"]], "dnnl::concat::primitive_desc": [[460, "index-0"]], "primitive_desc_base": [[460, "index-10"], [460, "index-7"], [460, "index-8"], [460, "index-9"], [540, "index-2"], [540, "index-3"], [540, "index-4"], [540, "index-5"], [545, "index-10"], [545, "index-11"], [545, "index-12"], [545, "index-9"], [562, "index-10"], [562, "index-7"], [562, "index-8"], [562, "index-9"]], "convolution_backward_data": [[461, "index-1"], [461, "index-2"], [461, "index-3"]], "dnnl::convolution_backward_data": [[461, "index-0"]], "dnnl::convolution_backward_data::primitive_desc": [[462, "index-0"]], "get_dilations": [[462, "index-11"], [464, "index-14"], [466, "index-14"], [468, "index-11"], [470, "index-14"], [472, "index-14"], [526, "index-11"], [528, "index-11"], [541, "index-5"]], "get_padding_l": [[462, "index-12"], [464, "index-15"], [466, "index-15"], [468, "index-12"], [470, "index-15"], [472, "index-15"], [526, "index-12"], [528, "index-12"], [541, "index-6"]], "get_padding_r": [[462, "index-13"], [464, "index-16"], [466, "index-16"], [468, "index-13"], [470, "index-16"], [472, "index-16"], [526, "index-13"], [528, "index-13"], [541, "index-7"]], "convolution_backward_weights": [[463, "index-1"], [463, "index-2"], [463, "index-3"]], "dnnl::convolution_backward_weights": [[463, "index-0"]], "dnnl::convolution_backward_weights::primitive_desc": [[464, "index-0"]], "convolution_forward": [[465, "index-1"], [465, "index-2"], [465, "index-3"]], "dnnl::convolution_forward": [[465, "index-0"]], "dnnl::convolution_forward::primitive_desc": [[466, "index-0"]], "deconvolution_backward_data": [[467, "index-1"], [467, "index-2"], [467, "index-3"]], "dnnl::deconvolution_backward_data": [[467, "index-0"]], "dnnl::deconvolution_backward_data::primitive_desc": [[468, "index-0"]], "deconvolution_backward_weights": [[469, "index-1"], [469, "index-2"], [469, "index-3"]], "dnnl::deconvolution_backward_weights": [[469, "index-0"]], "dnnl::deconvolution_backward_weights::primitive_desc": [[470, "index-0"]], "deconvolution_forward": [[471, "index-1"], [471, "index-2"], [471, "index-3"]], "dnnl::deconvolution_forward": [[471, "index-0"]], "dnnl::deconvolution_forward::primitive_desc": [[472, "index-0"]], "dnnl::eltwise_backward": [[473, "index-0"]], "eltwise_backward": [[473, "index-1"], [473, "index-2"], [473, "index-3"]], "dnnl::eltwise_backward::primitive_desc": [[474, "index-0"]], "get_alpha": [[474, "index-11"], [476, "index-10"], [512, "index-9"], [514, "index-9"], [541, "index-11"], [570, "index-24"], [572, "index-17"]], "get_beta": [[474, "index-12"], [476, "index-11"], [512, "index-10"], [514, "index-10"], [541, "index-12"], [570, "index-25"], [572, "index-18"]], "dnnl::eltwise_forward": [[475, "index-0"]], "eltwise_forward": [[475, "index-1"], [475, "index-2"], [475, "index-3"]], "dnnl::eltwise_forward::primitive_desc": [[476, "index-0"]], "dnnl_engine": [[477, "index-0"]], "dnnl::engine": [[478, "index-0"]], "get_count": [[478, "index-8"]], "get_kind": [[478, "index-3"], [536, "index-7"], [541, "index-41"]], "handle": [[478, "index-4"], [478, "index-5"], [478, "index-6"], [478, "index-7"], [491, "index-1"], [491, "index-2"], [491, "index-3"], [491, "index-4"], [522, "index-15"], [522, "index-16"], [522, "index-17"], [522, "index-18"], [536, "index-10"], [536, "index-11"], [536, "index-12"], [536, "index-13"], [560, "index-5"], [560, "index-6"], [560, "index-7"], [560, "index-8"]], "dnnl::error": [[479, "index-0"]], "error": [[479, "index-1"]], "what": [[479, "index-2"]], "wrap_c_api": [[479, "index-3"]], "arg": [[480, "index-1"]], "dnnl_exec_arg_t": [[480, "index-0"]], "dnnl_graph_inplace_pair_t": [[481, "index-0"]], "input_id": [[481, "index-1"]], "output_id": [[481, "index-2"]], "dnnl_graph_logical_tensor_t": [[482, "index-0"]], "id": [[482, "index-1"]], "layout_id": [[482, "index-8"]], "ndims": [[482, "index-2"]], "property": [[482, "index-5"]], "dnnl::group_normalization_backward": [[483, "index-0"]], "group_normalization_backward": [[483, "index-1"], [483, "index-2"], [483, "index-3"]], "dnnl::group_normalization_backward::primitive_desc": [[484, "index-0"]], "get_group_size": [[484, "index-14"], [486, "index-11"], [541, "index-22"], [552, "index-8"], [554, "index-8"]], "dnnl::group_normalization_forward": [[485, "index-0"]], "group_normalization_forward": [[485, "index-1"], [485, "index-2"], [485, "index-3"]], "dnnl::group_normalization_forward::primitive_desc": [[486, "index-0"]], "dnnl::gru_backward": [[487, "index-0"]], "gru_backward": [[487, "index-1"], [487, "index-2"], [487, "index-3"]], "dnnl::gru_backward::primitive_desc": [[488, "index-0"]], "dnnl::gru_forward": [[489, "index-0"]], "gru_forward": [[489, "index-1"], [489, "index-2"], [489, "index-3"]], "dnnl::gru_forward::primitive_desc": [[490, "index-0"]], "dnnl::handle": [[491, "index-0"]], "get": [[491, "index-8"]], "operator t": [[491, "index-9"]], "operator bool": [[491, "index-10"]], "operator!=": [[491, "index-12"], [524, "index-27"]], "operator==": [[491, "index-11"], [524, "index-26"]], "reset": [[491, "index-7"]], "dnnl::handle_traits": [[492, "index-0"]], "dnnl::inner_product_backward_data": [[493, "index-0"]], "inner_product_backward_data": [[493, "index-1"], [493, "index-2"], [493, "index-3"]], "dnnl::inner_product_backward_data::primitive_desc": [[494, "index-0"]], "dnnl::inner_product_backward_weights": [[495, "index-0"]], "inner_product_backward_weights": [[495, "index-1"], [495, "index-2"], [495, "index-3"]], "dnnl::inner_product_backward_weights::primitive_desc": [[496, "index-0"]], "dnnl::inner_product_forward": [[497, "index-0"]], "inner_product_forward": [[497, "index-1"], [497, "index-2"], [497, "index-3"]], "dnnl::inner_product_forward::primitive_desc": [[498, "index-0"]], "dnnl::layer_normalization_backward": [[499, "index-0"]], "layer_normalization_backward": [[499, "index-1"], [499, "index-2"], [499, "index-3"]], "dnnl::layer_normalization_backward::primitive_desc": [[500, "index-0"]], "dnnl::layer_normalization_forward": [[501, "index-0"]], "layer_normalization_forward": [[501, "index-1"], [501, "index-2"], [501, "index-3"]], "dnnl::layer_normalization_forward::primitive_desc": [[502, "index-0"]], "dnnl::lbr_augru_backward": [[503, "index-0"]], "lbr_augru_backward": [[503, "index-1"], [503, "index-2"], [503, "index-3"]], "dnnl::lbr_augru_backward::primitive_desc": [[504, "index-0"]], "dnnl::lbr_augru_forward": [[505, "index-0"]], "lbr_augru_forward": [[505, "index-1"], [505, "index-2"], [505, "index-3"]], "dnnl::lbr_augru_forward::primitive_desc": [[506, "index-0"]], "dnnl::lbr_gru_backward": [[507, "index-0"]], "lbr_gru_backward": [[507, "index-1"], [507, "index-2"], [507, "index-3"]], "dnnl::lbr_gru_backward::primitive_desc": [[508, "index-0"]], "dnnl::lbr_gru_forward": [[509, "index-0"]], "lbr_gru_forward": [[509, "index-1"], [509, "index-2"], [509, "index-3"]], "dnnl::lbr_gru_forward::primitive_desc": [[510, "index-0"]], "dnnl::lrn_backward": [[511, "index-0"]], "lrn_backward": [[511, "index-1"], [511, "index-2"], [511, "index-3"]], "dnnl::lrn_backward::primitive_desc": [[512, "index-0"]], "get_k": [[512, "index-12"], [514, "index-12"], [541, "index-15"]], "get_local_size": [[512, "index-11"], [514, "index-11"], [541, "index-14"]], "dnnl::lrn_forward": [[513, "index-0"]], "lrn_forward": [[513, "index-1"], [513, "index-2"], [513, "index-3"]], "dnnl::lrn_forward::primitive_desc": [[514, "index-0"]], "dnnl::lstm_backward": [[515, "index-0"]], "lstm_backward": [[515, "index-1"], [515, "index-2"], [515, "index-3"]], "diff_dst_iter_c_desc": [[516, "index-28"], [550, "index-26"]], "diff_src_iter_c_desc": [[516, "index-20"], [550, "index-18"]], "diff_weights_peephole_desc": [[516, "index-23"], [550, "index-21"]], "diff_weights_projection_desc": [[516, "index-24"], [550, "index-22"]], "dnnl::lstm_backward::primitive_desc": [[516, "index-0"]], "dst_iter_c_desc": [[516, "index-16"], [518, "index-16"], [550, "index-14"]], "src_iter_c_desc": [[516, "index-8"], [518, "index-8"], [550, "index-6"]], "weights_peephole_desc": [[516, "index-11"], [518, "index-11"], [550, "index-9"]], "weights_projection_desc": [[516, "index-12"], [518, "index-12"], [550, "index-10"]], "dnnl::lstm_forward": [[517, "index-0"]], "lstm_forward": [[517, "index-1"], [517, "index-2"], [517, "index-3"]], "dnnl::lstm_forward::primitive_desc": [[518, "index-0"]], "dnnl::matmul": [[519, "index-0"]], "dnnl::matmul::primitive_desc": [[520, "index-0"]], "dnnl_memory": [[521, "index-0"]], "data_type_size": [[522, "index-8"]], "dnnl::memory": [[522, "index-0"]], "get_desc": [[522, "index-9"]], "map_data": [[522, "index-13"]], "unmap_data": [[522, "index-14"]], "validate_dims": [[522, "index-7"]], "dnnl_memory_desc": [[523, "index-0"]], "desc": [[524, "index-1"], [524, "index-2"], [524, "index-3"], [524, "index-4"], [524, "index-5"]], "dnnl::memory::desc": [[524, "index-0"]], "get_blob": [[524, "index-24"]], "get_format_kind": [[524, "index-21"]], "get_inner_blks": [[524, "index-15"]], "get_inner_idxs": [[524, "index-16"]], "get_inner_nblks": [[524, "index-14"]], "get_ndims": [[524, "index-9"]], "get_nnz": [[524, "index-18"]], "get_num_handles": [[524, "index-17"]], "get_padded_dims": [[524, "index-10"]], "get_padded_offsets": [[524, "index-11"]], "get_size": [[524, "index-23"]], "get_sparse_encoding": [[524, "index-19"]], "get_submemory_offset": [[524, "index-12"]], "is_zero": [[524, "index-25"]], "permute_axes": [[524, "index-8"]], "reshape": [[524, "index-7"]], "submemory_desc": [[524, "index-6"]], "dnnl::pooling_backward": [[525, "index-0"]], "pooling_backward": [[525, "index-1"], [525, "index-2"], [525, "index-3"]], "dnnl::pooling_backward::primitive_desc": [[526, "index-0"]], "get_kernel": [[526, "index-10"], [528, "index-10"], [541, "index-21"]], "dnnl::pooling_forward": [[527, "index-0"]], "pooling_forward": [[527, "index-1"], [527, "index-2"], [527, "index-3"]], "dnnl::pooling_forward::primitive_desc": [[528, "index-0"]], "dnnl_post_ops": [[529, "index-0"]], "append_binary": [[530, "index-13"]], "append_dw": [[530, "index-11"]], "append_eltwise": [[530, "index-9"]], "append_prelu": [[530, "index-15"]], "append_sum": [[530, "index-5"]], "dnnl::post_ops": [[530, "index-0"]], "get_params_binary": [[530, "index-14"]], "get_params_dw": [[530, "index-12"]], "get_params_eltwise": [[530, "index-10"]], "get_params_prelu": [[530, "index-16"]], "get_params_sum": [[530, "index-6"], [530, "index-7"], [530, "index-8"]], "len": [[530, "index-3"]], "post_ops": [[530, "index-1"], [530, "index-2"]], "dnnl::prelu_backward": [[531, "index-0"]], "prelu_backward": [[531, "index-1"], [531, "index-2"], [531, "index-3"]], "dnnl::prelu_backward::primitive_desc": [[532, "index-0"]], "dnnl::prelu_forward": [[533, "index-0"]], "prelu_forward": [[533, "index-1"], [533, "index-2"], [533, "index-3"]], "dnnl::prelu_forward::primitive_desc": [[534, "index-0"]], "dnnl_primitive": [[535, "index-0"]], "dnnl::primitive": [[536, "index-0"]], "get_cache_blob": [[536, "index-8"]], "get_primitive_desc": [[536, "index-6"]], "primitive": [[536, "index-1"], [536, "index-2"], [536, "index-3"], [536, "index-4"], [536, "index-5"]], "dnnl_primitive_attr": [[537, "index-0"]], "dnnl::primitive_attr": [[538, "index-0"]], "get_accumulation_mode": [[538, "index-8"]], "get_deterministic": [[538, "index-10"]], "get_dropout": [[538, "index-3"]], "get_post_ops": [[538, "index-20"]], "get_rnn_data_qparams": [[538, "index-23"]], "get_rnn_weights_projection_qparams": [[538, "index-27"]], "get_rnn_weights_qparams": [[538, "index-25"]], "get_rounding_mode": [[538, "index-12"]], "get_scratchpad_mode": [[538, "index-14"]], "primitive_attr": [[538, "index-1"], [538, "index-2"]], "set_accumulation_mode": [[538, "index-9"]], "set_deterministic": [[538, "index-11"]], "set_dropout": [[538, "index-4"]], "set_post_ops": [[538, "index-21"], [567, "index-4"]], "set_rnn_data_qparams": [[538, "index-22"]], "set_rnn_weights_projection_qparams": [[538, "index-26"]], "set_rnn_weights_qparams": [[538, "index-24"]], "set_rounding_mode": [[538, "index-13"]], "set_scales": [[538, "index-17"]], "set_scales_mask": [[538, "index-16"]], "set_scratchpad_mode": [[538, "index-15"]], "set_zero_points": [[538, "index-19"]], "set_zero_points_mask": [[538, "index-18"]], "dnnl_primitive_desc": [[539, "index-0"]], "dnnl::primitive_desc": [[540, "index-0"]], "next_impl": [[540, "index-1"]], "dnnl::primitive_desc_base": [[541, "index-0"]], "get_activation_kind": [[541, "index-20"], [570, "index-22"], [572, "index-15"]], "get_axis": [[541, "index-13"], [552, "index-7"], [554, "index-7"], [556, "index-9"], [558, "index-8"]], "get_cache_blob_id": [[541, "index-42"]], "get_factors": [[541, "index-17"]], "get_p": [[541, "index-16"], [543, "index-6"]], "get_primitive_attr": [[541, "index-40"]], "query_md": [[541, "index-24"]], "query_s64": [[541, "index-3"]], "scratchpad_desc": [[541, "index-38"]], "dnnl::reduction": [[542, "index-0"]], "dnnl::reduction::primitive_desc": [[543, "index-0"]], "dnnl::reorder": [[544, "index-0"]], "dnnl::reorder::primitive_desc": [[545, "index-0"]], "get_dst_engine": [[545, "index-6"]], "get_src_engine": [[545, "index-5"]], "dnnl::resampling_backward": [[546, "index-0"]], "resampling_backward": [[546, "index-1"], [546, "index-2"], [546, "index-3"]], "dnnl::resampling_backward::primitive_desc": [[547, "index-0"]], "dnnl::resampling_forward": [[548, "index-0"]], "resampling_forward": [[548, "index-1"], [548, "index-2"], [548, "index-3"]], "dnnl::resampling_forward::primitive_desc": [[549, "index-0"]], "augru_attention_desc": [[550, "index-4"]], "diff_augru_attention_desc": [[550, "index-16"]], "dnnl::rnn_primitive_desc_base": [[550, "index-0"]], "rnn_primitive_desc_base": [[550, "index-1"], [550, "index-2"]], "dnnl::shuffle_backward": [[551, "index-0"]], "shuffle_backward": [[551, "index-1"], [551, "index-2"], [551, "index-3"]], "dnnl::shuffle_backward::primitive_desc": [[552, "index-0"]], "dnnl::shuffle_forward": [[553, "index-0"]], "shuffle_forward": [[553, "index-1"], [553, "index-2"], [553, "index-3"]], "dnnl::shuffle_forward::primitive_desc": [[554, "index-0"]], "dnnl::softmax_backward": [[555, "index-0"]], "softmax_backward": [[555, "index-1"], [555, "index-2"], [555, "index-3"]], "dnnl::softmax_backward::primitive_desc": [[556, "index-0"]], "dnnl::softmax_forward": [[557, "index-0"]], "softmax_forward": [[557, "index-1"], [557, "index-2"], [557, "index-3"]], "dnnl::softmax_forward::primitive_desc": [[558, "index-0"]], "dnnl_stream": [[559, "index-0"]], "dnnl::stream": [[560, "index-0"]], "wait": [[560, "index-4"]], "dnnl::sum": [[561, "index-0"]], "dnnl::sum::primitive_desc": [[562, "index-0"]], "asynchronous": [[563, "index-1"]], "dnnl::threadpool_interop::threadpool_iface": [[563, "index-0"]], "get_in_parallel": [[563, "index-3"]], "get_num_threads": [[563, "index-2"]], "parallel_for": [[563, "index-4"]], "dnnl_transform": [[564, "index-0"]], "dnnl_ukernel_attr_params": [[565, "index-0"]], "dnnl::ukernel::attr_params": [[566, "index-0"]], "set_a_scales": [[566, "index-2"], [567, "index-5"]], "set_b_scales": [[566, "index-3"], [567, "index-6"]], "set_d_scales": [[566, "index-4"], [567, "index-7"]], "set_post_ops_args": [[566, "index-1"]], "brgemm": [[567, "index-1"], [567, "index-2"]], "default_attr_params": [[567, "index-18"]], "default_post_ops": [[567, "index-17"]], "dnnl::ukernel::brgemm": [[567, "index-0"]], "generate": [[567, "index-12"], [568, "index-3"]], "get_b_pack_type": [[567, "index-15"]], "get_scratchpad_size": [[567, "index-9"]], "is_execute_postops_valid": [[567, "index-10"]], "release_hw_context": [[567, "index-16"]], "set_add_c": [[567, "index-3"]], "set_hw_context": [[567, "index-11"]], "dnnl::ukernel::transform": [[568, "index-0"]], "transform": [[568, "index-1"], [568, "index-2"]], "dnnl::vanilla_rnn_backward": [[569, "index-0"]], "vanilla_rnn_backward": [[569, "index-1"], [569, "index-2"], [569, "index-3"]], "dnnl::vanilla_rnn_backward::primitive_desc": [[570, "index-0"]], "dnnl::vanilla_rnn_forward": [[571, "index-0"]], "vanilla_rnn_forward": [[571, "index-1"], [571, "index-2"], [571, "index-3"]], "dnnl::vanilla_rnn_forward::primitive_desc": [[572, "index-0"]], "cpu_runtime": [[573, "index-5"]], "dnnl_version_t": [[573, "index-0"]], "gpu_runtime": [[573, "index-6"]], "hash": [[573, "index-4"]], "major": [[573, "index-1"]], "minor": [[573, "index-2"]], "patch": [[573, "index-3"]], "example_allows_unimplemented": [[574, "index-0"]], "gemm_dims_t": [[575, "index-0"]], "gqa_dims_t": [[576, "index-0"]], "mlp_dims_t": [[577, "index-0"]], "mqa_dims_t": [[578, "index-0"]], "sdpa_dims_t": [[579, "index-0"]], "sycl_deletor_t": [[580, "index-0"]]}})