Search.setIndex({"docnames": ["advanced_topics", "build_and_link", "class_dnnl_graph_allocator", "class_dnnl_graph_compiled_partition", "class_dnnl_graph_graph", "class_dnnl_graph_logical_tensor", "class_dnnl_graph_op", "class_dnnl_graph_partition", "class_dnnl_graph_tensor", "class_simple_memory_pool_t", "dev_guide_attributes", "dev_guide_attributes_accumulation_mode", "dev_guide_attributes_deterministic", "dev_guide_attributes_dropout", "dev_guide_attributes_fpmath_mode", "dev_guide_attributes_post_ops", "dev_guide_attributes_quantization", "dev_guide_attributes_rounding_mode", "dev_guide_attributes_scratchpad", "dev_guide_basic_concepts", "dev_guide_batch_normalization", "dev_guide_benchdnn", "dev_guide_binary", "dev_guide_build", "dev_guide_build_options", "dev_guide_c_and_cpp_apis", "dev_guide_concat", "dev_guide_constant_tensor_cache", "dev_guide_conventions", "dev_guide_convolution", "dev_guide_cpu_dispatcher_control", "dev_guide_cpu_isa_hints", "dev_guide_data_types", "dev_guide_dpcpp_interoperability", "dev_guide_eltwise", "dev_guide_examples", "dev_guide_experimental", "dev_guide_graph_basic_concepts", "dev_guide_graph_compiler", "dev_guide_graph_dump", "dev_guide_graph_fusion_patterns", "dev_guide_graph_low_precision", "dev_guide_graph_sdpa", "dev_guide_group_normalization", "dev_guide_inference", "dev_guide_inference_and_training_aspects", "dev_guide_inference_int8", "dev_guide_inner_product", "dev_guide_inspecting_jit", "dev_guide_int8_computations", "dev_guide_layer_normalization", "dev_guide_link", "dev_guide_lrn", "dev_guide_matmul", "dev_guide_op_abs", "dev_guide_op_absbackward", "dev_guide_op_add", "dev_guide_op_avgpool", "dev_guide_op_avgpoolbackward", "dev_guide_op_batchnormforwardtraining", "dev_guide_op_batchnorminference", "dev_guide_op_batchnormtrainingbackward", "dev_guide_op_biasadd", "dev_guide_op_biasaddbackward", "dev_guide_op_clamp", "dev_guide_op_clampbackward", "dev_guide_op_concat", "dev_guide_op_convolution", "dev_guide_op_convolutionbackwarddata", "dev_guide_op_convolutionbackwardweights", "dev_guide_op_convtranspose", "dev_guide_op_convtransposebackwarddata", "dev_guide_op_convtransposebackwardweights", "dev_guide_op_dequantize", "dev_guide_op_divide", "dev_guide_op_dynamicdequantize", "dev_guide_op_dynamicquantize", "dev_guide_op_elu", "dev_guide_op_elubackward", "dev_guide_op_end", "dev_guide_op_exp", "dev_guide_op_gelu", "dev_guide_op_gelubackward", "dev_guide_op_groupnorm", "dev_guide_op_hardsigmoid", "dev_guide_op_hardsigmoidbackward", "dev_guide_op_hardswish", "dev_guide_op_hardswishbackward", "dev_guide_op_interpolate", "dev_guide_op_interpolatebackward", "dev_guide_op_layernorm", "dev_guide_op_layernormbackward", "dev_guide_op_leakyrelu", "dev_guide_op_log", "dev_guide_op_logsoftmax", "dev_guide_op_logsoftmaxbackward", "dev_guide_op_matmul", "dev_guide_op_maximum", "dev_guide_op_maxpool", "dev_guide_op_maxpoolbackward", "dev_guide_op_minimum", "dev_guide_op_mish", "dev_guide_op_mishbackward", "dev_guide_op_multiply", "dev_guide_op_pow", "dev_guide_op_prelu", "dev_guide_op_prelubackward", "dev_guide_op_quantize", "dev_guide_op_reciprocal", "dev_guide_op_reducel1", "dev_guide_op_reducel2", "dev_guide_op_reducemax", "dev_guide_op_reducemean", "dev_guide_op_reducemin", "dev_guide_op_reduceprod", "dev_guide_op_reducesum", "dev_guide_op_relu", "dev_guide_op_relubackward", "dev_guide_op_reorder", "dev_guide_op_round", "dev_guide_op_select", "dev_guide_op_sigmoid", "dev_guide_op_sigmoidbackward", "dev_guide_op_softmax", "dev_guide_op_softmaxbackward", "dev_guide_op_softplus", "dev_guide_op_softplusbackward", "dev_guide_op_sqrt", "dev_guide_op_sqrtbackward", "dev_guide_op_square", "dev_guide_op_squareddifference", "dev_guide_op_staticreshape", "dev_guide_op_statictranspose", "dev_guide_op_subtract", "dev_guide_op_tanh", "dev_guide_op_tanhbackward", "dev_guide_op_typecast", "dev_guide_op_wildcard", "dev_guide_opencl_interoperability", "dev_guide_performance_settings", "dev_guide_persistent_cache", "dev_guide_pooling", "dev_guide_prelu", "dev_guide_primitive_cache", "dev_guide_profilers", "dev_guide_reduction", "dev_guide_reorder", "dev_guide_resampling", "dev_guide_rnn", "dev_guide_shuffle", "dev_guide_softmax", "dev_guide_sum", "dev_guide_threadpool", "dev_guide_training", "dev_guide_training_bf16", "dev_guide_transition_to_dnnl", "dev_guide_ukernel_basic_concepts", "dev_guide_ukernel_brgemm", "dev_guide_ukernel_transform", "dev_guide_understanding_memory_formats", "dev_guide_verbose", "dev_guide_verbose_table", "dev_guide_vtune", "enum_api_kind", "enum_dnnl_accumulation_mode", "enum_dnnl_accumulation_mode_t", "enum_dnnl_alg_kind_t", "enum_dnnl_algorithm", "enum_dnnl_cpu_isa", "enum_dnnl_cpu_isa_hints", "enum_dnnl_cpu_isa_hints_t", "enum_dnnl_cpu_isa_t", "enum_dnnl_data_type_t", "enum_dnnl_engine_kind", "enum_dnnl_engine_kind_t", "enum_dnnl_format_kind_t", "enum_dnnl_format_tag_t", "enum_dnnl_fpmath_mode", "enum_dnnl_fpmath_mode_t", "enum_dnnl_graph_layout_type_t", "enum_dnnl_graph_logical_tensor_data_type", "enum_dnnl_graph_logical_tensor_layout_type", "enum_dnnl_graph_logical_tensor_property_type", "enum_dnnl_graph_op_attr", "enum_dnnl_graph_op_attr_t", "enum_dnnl_graph_op_kind", "enum_dnnl_graph_op_kind_t", "enum_dnnl_graph_partition_policy", "enum_dnnl_graph_partition_policy_t", "enum_dnnl_graph_status", "enum_dnnl_graph_tensor_property_t", "enum_dnnl_memory_data_type", "enum_dnnl_memory_format_kind", "enum_dnnl_memory_format_tag", "enum_dnnl_memory_sparse_encoding", "enum_dnnl_normalization_flags", "enum_dnnl_normalization_flags_t", "enum_dnnl_ocl_interop_memory_kind", "enum_dnnl_ocl_interop_memory_kind_t", "enum_dnnl_pack_type_t", "enum_dnnl_primitive_kind", "enum_dnnl_primitive_kind_t", "enum_dnnl_profiling_data_kind", "enum_dnnl_profiling_data_kind_t", "enum_dnnl_prop_kind", "enum_dnnl_prop_kind_t", "enum_dnnl_query", "enum_dnnl_query_t", "enum_dnnl_rnn_direction", "enum_dnnl_rnn_direction_t", "enum_dnnl_rnn_flags", "enum_dnnl_rnn_flags_t", "enum_dnnl_rounding_mode", "enum_dnnl_rounding_mode_t", "enum_dnnl_scratchpad_mode", "enum_dnnl_scratchpad_mode_t", "enum_dnnl_sparse_encoding_t", "enum_dnnl_status", "enum_dnnl_status_t", "enum_dnnl_stream_flags", "enum_dnnl_stream_flags_t", "enum_dnnl_sycl_interop_memory_kind", "enum_dnnl_sycl_interop_memory_kind_t", "enum_dnnl_ukernel_pack_type", "example_augru.cpp", "example_batch_normalization.cpp", "example_binary.cpp", "example_bnorm_u8_via_binary_postops.cpp", "example_cnn_inference_f32.c", "example_cnn_inference_f32.cpp", "example_cnn_inference_int8.cpp", "example_cnn_training_bf16.cpp", "example_cnn_training_f32.cpp", "example_concat.cpp", "example_convolution.cpp", "example_cpu_brgemm.cpp", "example_cpu_cnn_training_f32.c", "example_cpu_getting_started.cpp", "example_cpu_inference_int8.cpp", "example_cpu_matmul_coo.cpp", "example_cpu_matmul_csr.cpp", "example_cpu_matmul_quantization.cpp", "example_cpu_matmul_weights_compression.cpp", "example_cpu_rnn_inference_f32.cpp", "example_cpu_rnn_inference_int8.cpp", "example_cpu_sgemm_and_matmul.cpp", "example_cpu_single_op_partition.cpp", "example_cross_engine_reorder.c", "example_cross_engine_reorder.cpp", "example_deconvolution.cpp", "example_eltwise.cpp", "example_getting_started.cpp", "example_gpu_opencl_getting_started.cpp", "example_gpu_opencl_interop.cpp", "example_group_normalization.cpp", "example_inference_int8_matmul.cpp", "example_inner_product.cpp", "example_layer_normalization.cpp", "example_lbr_gru.cpp", "example_lrn.cpp", "example_lstm.cpp", "example_matmul.cpp", "example_memory_format_propagation.cpp", "example_performance_profiling.cpp", "example_pooling.cpp", "example_prelu.cpp", "example_reduction.cpp", "example_reorder.cpp", "example_resampling.cpp", "example_rnn_training_f32.cpp", "example_shuffle.cpp", "example_softmax.cpp", "example_sum.cpp", "example_sycl_getting_started.cpp", "example_sycl_interop_buffer.cpp", "example_sycl_single_op_partition.cpp", "example_vanilla_rnn.cpp", "example_weights_decompression_matmul.cpp", "global", "graph_extension", "graph_programming_model", "graph_supported_operations", "group_dnnl_api", "group_dnnl_api_accumulation_mode", "group_dnnl_api_attributes", "group_dnnl_api_batch_normalization", "group_dnnl_api_binary", "group_dnnl_api_blas", "group_dnnl_api_common", "group_dnnl_api_concat", "group_dnnl_api_convolution", "group_dnnl_api_data_types", "group_dnnl_api_deconvolution", "group_dnnl_api_eltwise", "group_dnnl_api_engine", "group_dnnl_api_fpmath_mode", "group_dnnl_api_group_normalization", "group_dnnl_api_inner_product", "group_dnnl_api_interop", "group_dnnl_api_layer_normalization", "group_dnnl_api_lrn", "group_dnnl_api_matmul", "group_dnnl_api_memory", "group_dnnl_api_ocl_interop", "group_dnnl_api_pooling", "group_dnnl_api_prelu", "group_dnnl_api_primitive_cache", "group_dnnl_api_primitives", "group_dnnl_api_primitives_common", "group_dnnl_api_profiling", "group_dnnl_api_reduction", "group_dnnl_api_reorder", "group_dnnl_api_resampling", "group_dnnl_api_rnn", "group_dnnl_api_service", "group_dnnl_api_shuffle", "group_dnnl_api_softmax", "group_dnnl_api_stream", "group_dnnl_api_sum", "group_dnnl_api_sycl_interop", "group_dnnl_api_threadpool_interop", "group_dnnl_api_ukernel", "group_dnnl_api_ukernel_brgemm", "group_dnnl_api_utils", "group_dnnl_graph_api", "group_dnnl_graph_api_allocator", "group_dnnl_graph_api_compiled_partition", "group_dnnl_graph_api_compiled_partition_cache", "group_dnnl_graph_api_constant_tensor_cache", "group_dnnl_graph_api_engine", "group_dnnl_graph_api_graph", "group_dnnl_graph_api_interop", "group_dnnl_graph_api_logical_tensor", "group_dnnl_graph_api_ocl_interop", "group_dnnl_graph_api_op", "group_dnnl_graph_api_partition", "group_dnnl_graph_api_status", "group_dnnl_graph_api_sycl_interop", "group_dnnl_graph_api_tensor", "group_dnnl_graph_api_utils", "index", "interop_with_dpcpp_and_opencl", "namespace_dnnl", "namespace_dnnl_graph", "namespace_dnnl_graph_ocl_interop", "namespace_dnnl_graph_sycl_interop", "namespace_dnnl_ocl_interop", "namespace_dnnl_sycl_interop", "namespace_dnnl_threadpool_interop", "namespace_dnnl_ukernel", "namespace_oneapi", "namespace_std", "namespace_sycl", "orphans", "page_augru_example_cpp", "page_augru_example_cpp_short", "page_batch_normalization_example_cpp", "page_batch_normalization_example_cpp_short", "page_binary_example_cpp", "page_binary_example_cpp_short", "page_bnorm_u8_via_binary_postops_cpp", "page_bnorm_u8_via_binary_postops_cpp_short", "page_cnn_inference_f32_c", "page_cnn_inference_f32_cpp", "page_cnn_inference_int8_cpp", "page_cnn_training_bf16_cpp", "page_cnn_training_f32_cpp", "page_concat_example_cpp", "page_concat_example_cpp_short", "page_convolution_example_cpp", "page_convolution_example_cpp_short", "page_cpu_brgemm_example_cpp", "page_cpu_cnn_training_f32_c", "page_cpu_matmul_coo_cpp", "page_cpu_matmul_csr_cpp", "page_cpu_matmul_quantization_cpp", "page_cpu_matmul_quantization_cpp_short", "page_cpu_matmul_weights_compression_cpp", "page_cpu_rnn_inference_f32_cpp", "page_cpu_rnn_inference_int8_cpp", "page_cpu_sgemm_and_matmul_cpp", "page_cpu_sgemm_and_matmul_cpp_short", "page_cross_engine_reorder_c", "page_cross_engine_reorder_cpp", "page_deconvolution_example_cpp", "page_deconvolution_example_cpp_short", "page_eltwise_example_cpp", "page_eltwise_example_cpp_short", "page_getting_started_cpp", "page_gpu_opencl_interop_cpp", "page_graph_cpu_getting_started_cpp", "page_graph_cpu_inference_int8_cpp", "page_graph_cpu_single_op_partition_cpp", "page_graph_gpu_opencl_getting_started_cpp", "page_graph_sycl_getting_started_cpp", "page_graph_sycl_single_op_partition_cpp", "page_group_normalization_example_cpp", "page_group_normalization_example_cpp_short", "page_inference_int8_matmul_cpp", "page_inference_int8_matmul_cpp_short", "page_inner_product_example_cpp", "page_inner_product_example_cpp_short", "page_layer_normalization_example_cpp", "page_layer_normalization_example_cpp_short", "page_lbr_gru_example_cpp", "page_lbr_gru_example_cpp_short", "page_legal_information", "page_lrn_example_cpp", "page_lrn_example_cpp_short", "page_lstm_example_cpp", "page_lstm_example_cpp_short", "page_matmul_example_cpp", "page_matmul_example_cpp_short", "page_memory_format_propagation_cpp", "page_performance_profiling_cpp", "page_pooling_example_cpp", "page_pooling_example_cpp_short", "page_prelu_example_cpp", "page_prelu_example_cpp_short", "page_reduction_example_cpp", "page_reduction_example_cpp_short", "page_reorder_example_cpp", "page_reorder_example_cpp_short", "page_resampling_example_cpp", "page_resampling_example_cpp_short", "page_rnn_training_f32_cpp", "page_shuffle_example_cpp", "page_shuffle_example_cpp_short", "page_softmax_example_cpp", "page_softmax_example_cpp_short", "page_sum_example_cpp", "page_sum_example_cpp_short", "page_sycl_interop_buffer_cpp", "page_todo", "page_vanilla_rnn_example_cpp", "page_vanilla_rnn_example_cpp_short", "page_weights_decompression_matmul_cpp", "page_weights_decompression_matmul_cpp_short", "performance_profiling_and_inspection", "programming_model", "struct_args_t", "struct_cpu_deletor", "struct_dnnl_augru_backward", "struct_dnnl_augru_backward_primitive_desc", "struct_dnnl_augru_forward", "struct_dnnl_augru_forward_primitive_desc", "struct_dnnl_batch_normalization_backward", "struct_dnnl_batch_normalization_backward_primitive_desc", "struct_dnnl_batch_normalization_forward", "struct_dnnl_batch_normalization_forward_primitive_desc", "struct_dnnl_binary", "struct_dnnl_binary_primitive_desc", "struct_dnnl_brgemm", "struct_dnnl_concat", "struct_dnnl_concat_primitive_desc", "struct_dnnl_convolution_backward_data", "struct_dnnl_convolution_backward_data_primitive_desc", "struct_dnnl_convolution_backward_weights", "struct_dnnl_convolution_backward_weights_primitive_desc", "struct_dnnl_convolution_forward", "struct_dnnl_convolution_forward_primitive_desc", "struct_dnnl_deconvolution_backward_data", "struct_dnnl_deconvolution_backward_data_primitive_desc", "struct_dnnl_deconvolution_backward_weights", "struct_dnnl_deconvolution_backward_weights_primitive_desc", "struct_dnnl_deconvolution_forward", "struct_dnnl_deconvolution_forward_primitive_desc", "struct_dnnl_eltwise_backward", "struct_dnnl_eltwise_backward_primitive_desc", "struct_dnnl_eltwise_forward", "struct_dnnl_eltwise_forward_primitive_desc", "struct_dnnl_engine", "struct_dnnl_engine-2", "struct_dnnl_error", "struct_dnnl_exec_arg_t", "struct_dnnl_graph_inplace_pair_t", "struct_dnnl_graph_logical_tensor_t", "struct_dnnl_group_normalization_backward", "struct_dnnl_group_normalization_backward_primitive_desc", "struct_dnnl_group_normalization_forward", "struct_dnnl_group_normalization_forward_primitive_desc", "struct_dnnl_gru_backward", "struct_dnnl_gru_backward_primitive_desc", "struct_dnnl_gru_forward", "struct_dnnl_gru_forward_primitive_desc", "struct_dnnl_handle", "struct_dnnl_handle_traits", "struct_dnnl_inner_product_backward_data", "struct_dnnl_inner_product_backward_data_primitive_desc", "struct_dnnl_inner_product_backward_weights", "struct_dnnl_inner_product_backward_weights_primitive_desc", "struct_dnnl_inner_product_forward", "struct_dnnl_inner_product_forward_primitive_desc", "struct_dnnl_layer_normalization_backward", "struct_dnnl_layer_normalization_backward_primitive_desc", "struct_dnnl_layer_normalization_forward", "struct_dnnl_layer_normalization_forward_primitive_desc", "struct_dnnl_lbr_augru_backward", "struct_dnnl_lbr_augru_backward_primitive_desc", "struct_dnnl_lbr_augru_forward", "struct_dnnl_lbr_augru_forward_primitive_desc", "struct_dnnl_lbr_gru_backward", "struct_dnnl_lbr_gru_backward_primitive_desc", "struct_dnnl_lbr_gru_forward", "struct_dnnl_lbr_gru_forward_primitive_desc", "struct_dnnl_lrn_backward", "struct_dnnl_lrn_backward_primitive_desc", "struct_dnnl_lrn_forward", "struct_dnnl_lrn_forward_primitive_desc", "struct_dnnl_lstm_backward", "struct_dnnl_lstm_backward_primitive_desc", "struct_dnnl_lstm_forward", "struct_dnnl_lstm_forward_primitive_desc", "struct_dnnl_matmul", "struct_dnnl_matmul_primitive_desc", "struct_dnnl_memory", "struct_dnnl_memory-2", "struct_dnnl_memory_desc", "struct_dnnl_memory_desc-2", "struct_dnnl_pooling_backward", "struct_dnnl_pooling_backward_primitive_desc", "struct_dnnl_pooling_forward", "struct_dnnl_pooling_forward_primitive_desc", "struct_dnnl_post_ops", "struct_dnnl_post_ops-2", "struct_dnnl_prelu_backward", "struct_dnnl_prelu_backward_primitive_desc", "struct_dnnl_prelu_forward", "struct_dnnl_prelu_forward_primitive_desc", "struct_dnnl_primitive", "struct_dnnl_primitive-2", "struct_dnnl_primitive_attr", "struct_dnnl_primitive_attr-2", "struct_dnnl_primitive_desc", "struct_dnnl_primitive_desc-2", "struct_dnnl_primitive_desc_base", "struct_dnnl_reduction", "struct_dnnl_reduction_primitive_desc", "struct_dnnl_reorder", "struct_dnnl_reorder_primitive_desc", "struct_dnnl_resampling_backward", "struct_dnnl_resampling_backward_primitive_desc", "struct_dnnl_resampling_forward", "struct_dnnl_resampling_forward_primitive_desc", "struct_dnnl_rnn_primitive_desc_base", "struct_dnnl_shuffle_backward", "struct_dnnl_shuffle_backward_primitive_desc", "struct_dnnl_shuffle_forward", "struct_dnnl_shuffle_forward_primitive_desc", "struct_dnnl_softmax_backward", "struct_dnnl_softmax_backward_primitive_desc", "struct_dnnl_softmax_forward", "struct_dnnl_softmax_forward_primitive_desc", "struct_dnnl_stream", "struct_dnnl_stream-2", "struct_dnnl_sum", "struct_dnnl_sum_primitive_desc", "struct_dnnl_threadpool_interop_threadpool_iface", "struct_dnnl_transform", "struct_dnnl_ukernel_attr_params", "struct_dnnl_ukernel_attr_params-2", "struct_dnnl_ukernel_brgemm", "struct_dnnl_ukernel_transform", "struct_dnnl_vanilla_rnn_backward", "struct_dnnl_vanilla_rnn_backward_primitive_desc", "struct_dnnl_vanilla_rnn_forward", "struct_dnnl_vanilla_rnn_forward_primitive_desc", "struct_dnnl_version_t", "struct_example_allows_unimplemented", "struct_gemm_dims_t", "struct_gqa_dims_t", "struct_mqa_dims_t", "struct_sdpa_dims_t", "struct_sycl_deletor", "supported_primitives", "ukernels"], "filenames": ["advanced_topics.rst", "build_and_link.rst", "class_dnnl_graph_allocator.rst", "class_dnnl_graph_compiled_partition.rst", "class_dnnl_graph_graph.rst", "class_dnnl_graph_logical_tensor.rst", "class_dnnl_graph_op.rst", "class_dnnl_graph_partition.rst", "class_dnnl_graph_tensor.rst", "class_simple_memory_pool_t.rst", "dev_guide_attributes.rst", "dev_guide_attributes_accumulation_mode.rst", "dev_guide_attributes_deterministic.rst", "dev_guide_attributes_dropout.rst", "dev_guide_attributes_fpmath_mode.rst", "dev_guide_attributes_post_ops.rst", "dev_guide_attributes_quantization.rst", "dev_guide_attributes_rounding_mode.rst", "dev_guide_attributes_scratchpad.rst", "dev_guide_basic_concepts.rst", "dev_guide_batch_normalization.rst", "dev_guide_benchdnn.rst", "dev_guide_binary.rst", "dev_guide_build.rst", "dev_guide_build_options.rst", "dev_guide_c_and_cpp_apis.rst", "dev_guide_concat.rst", "dev_guide_constant_tensor_cache.rst", "dev_guide_conventions.rst", "dev_guide_convolution.rst", "dev_guide_cpu_dispatcher_control.rst", "dev_guide_cpu_isa_hints.rst", "dev_guide_data_types.rst", "dev_guide_dpcpp_interoperability.rst", "dev_guide_eltwise.rst", "dev_guide_examples.rst", "dev_guide_experimental.rst", "dev_guide_graph_basic_concepts.rst", "dev_guide_graph_compiler.rst", "dev_guide_graph_dump.rst", "dev_guide_graph_fusion_patterns.rst", "dev_guide_graph_low_precision.rst", "dev_guide_graph_sdpa.rst", "dev_guide_group_normalization.rst", "dev_guide_inference.rst", "dev_guide_inference_and_training_aspects.rst", "dev_guide_inference_int8.rst", "dev_guide_inner_product.rst", "dev_guide_inspecting_jit.rst", "dev_guide_int8_computations.rst", "dev_guide_layer_normalization.rst", "dev_guide_link.rst", "dev_guide_lrn.rst", "dev_guide_matmul.rst", "dev_guide_op_abs.rst", "dev_guide_op_absbackward.rst", "dev_guide_op_add.rst", "dev_guide_op_avgpool.rst", "dev_guide_op_avgpoolbackward.rst", "dev_guide_op_batchnormforwardtraining.rst", "dev_guide_op_batchnorminference.rst", "dev_guide_op_batchnormtrainingbackward.rst", "dev_guide_op_biasadd.rst", "dev_guide_op_biasaddbackward.rst", "dev_guide_op_clamp.rst", "dev_guide_op_clampbackward.rst", "dev_guide_op_concat.rst", "dev_guide_op_convolution.rst", "dev_guide_op_convolutionbackwarddata.rst", "dev_guide_op_convolutionbackwardweights.rst", "dev_guide_op_convtranspose.rst", "dev_guide_op_convtransposebackwarddata.rst", "dev_guide_op_convtransposebackwardweights.rst", "dev_guide_op_dequantize.rst", "dev_guide_op_divide.rst", "dev_guide_op_dynamicdequantize.rst", "dev_guide_op_dynamicquantize.rst", "dev_guide_op_elu.rst", "dev_guide_op_elubackward.rst", "dev_guide_op_end.rst", "dev_guide_op_exp.rst", "dev_guide_op_gelu.rst", "dev_guide_op_gelubackward.rst", "dev_guide_op_groupnorm.rst", "dev_guide_op_hardsigmoid.rst", "dev_guide_op_hardsigmoidbackward.rst", "dev_guide_op_hardswish.rst", "dev_guide_op_hardswishbackward.rst", "dev_guide_op_interpolate.rst", "dev_guide_op_interpolatebackward.rst", "dev_guide_op_layernorm.rst", "dev_guide_op_layernormbackward.rst", "dev_guide_op_leakyrelu.rst", "dev_guide_op_log.rst", "dev_guide_op_logsoftmax.rst", "dev_guide_op_logsoftmaxbackward.rst", "dev_guide_op_matmul.rst", "dev_guide_op_maximum.rst", "dev_guide_op_maxpool.rst", "dev_guide_op_maxpoolbackward.rst", "dev_guide_op_minimum.rst", "dev_guide_op_mish.rst", "dev_guide_op_mishbackward.rst", "dev_guide_op_multiply.rst", "dev_guide_op_pow.rst", "dev_guide_op_prelu.rst", "dev_guide_op_prelubackward.rst", "dev_guide_op_quantize.rst", "dev_guide_op_reciprocal.rst", "dev_guide_op_reducel1.rst", "dev_guide_op_reducel2.rst", "dev_guide_op_reducemax.rst", "dev_guide_op_reducemean.rst", "dev_guide_op_reducemin.rst", "dev_guide_op_reduceprod.rst", "dev_guide_op_reducesum.rst", "dev_guide_op_relu.rst", "dev_guide_op_relubackward.rst", "dev_guide_op_reorder.rst", "dev_guide_op_round.rst", "dev_guide_op_select.rst", "dev_guide_op_sigmoid.rst", "dev_guide_op_sigmoidbackward.rst", "dev_guide_op_softmax.rst", "dev_guide_op_softmaxbackward.rst", "dev_guide_op_softplus.rst", "dev_guide_op_softplusbackward.rst", "dev_guide_op_sqrt.rst", "dev_guide_op_sqrtbackward.rst", "dev_guide_op_square.rst", "dev_guide_op_squareddifference.rst", "dev_guide_op_staticreshape.rst", "dev_guide_op_statictranspose.rst", "dev_guide_op_subtract.rst", "dev_guide_op_tanh.rst", "dev_guide_op_tanhbackward.rst", "dev_guide_op_typecast.rst", "dev_guide_op_wildcard.rst", "dev_guide_opencl_interoperability.rst", "dev_guide_performance_settings.rst", "dev_guide_persistent_cache.rst", "dev_guide_pooling.rst", "dev_guide_prelu.rst", "dev_guide_primitive_cache.rst", "dev_guide_profilers.rst", "dev_guide_reduction.rst", "dev_guide_reorder.rst", "dev_guide_resampling.rst", "dev_guide_rnn.rst", "dev_guide_shuffle.rst", "dev_guide_softmax.rst", "dev_guide_sum.rst", "dev_guide_threadpool.rst", "dev_guide_training.rst", "dev_guide_training_bf16.rst", "dev_guide_transition_to_dnnl.rst", "dev_guide_ukernel_basic_concepts.rst", "dev_guide_ukernel_brgemm.rst", "dev_guide_ukernel_transform.rst", "dev_guide_understanding_memory_formats.rst", "dev_guide_verbose.rst", "dev_guide_verbose_table.rst", "dev_guide_vtune.rst", "enum_api_kind.rst", "enum_dnnl_accumulation_mode.rst", "enum_dnnl_accumulation_mode_t.rst", "enum_dnnl_alg_kind_t.rst", "enum_dnnl_algorithm.rst", "enum_dnnl_cpu_isa.rst", "enum_dnnl_cpu_isa_hints.rst", "enum_dnnl_cpu_isa_hints_t.rst", "enum_dnnl_cpu_isa_t.rst", "enum_dnnl_data_type_t.rst", "enum_dnnl_engine_kind.rst", "enum_dnnl_engine_kind_t.rst", "enum_dnnl_format_kind_t.rst", "enum_dnnl_format_tag_t.rst", "enum_dnnl_fpmath_mode.rst", "enum_dnnl_fpmath_mode_t.rst", "enum_dnnl_graph_layout_type_t.rst", "enum_dnnl_graph_logical_tensor_data_type.rst", "enum_dnnl_graph_logical_tensor_layout_type.rst", "enum_dnnl_graph_logical_tensor_property_type.rst", "enum_dnnl_graph_op_attr.rst", "enum_dnnl_graph_op_attr_t.rst", "enum_dnnl_graph_op_kind.rst", "enum_dnnl_graph_op_kind_t.rst", "enum_dnnl_graph_partition_policy.rst", "enum_dnnl_graph_partition_policy_t.rst", "enum_dnnl_graph_status.rst", "enum_dnnl_graph_tensor_property_t.rst", "enum_dnnl_memory_data_type.rst", "enum_dnnl_memory_format_kind.rst", "enum_dnnl_memory_format_tag.rst", "enum_dnnl_memory_sparse_encoding.rst", "enum_dnnl_normalization_flags.rst", "enum_dnnl_normalization_flags_t.rst", "enum_dnnl_ocl_interop_memory_kind.rst", "enum_dnnl_ocl_interop_memory_kind_t.rst", "enum_dnnl_pack_type_t.rst", "enum_dnnl_primitive_kind.rst", "enum_dnnl_primitive_kind_t.rst", "enum_dnnl_profiling_data_kind.rst", "enum_dnnl_profiling_data_kind_t.rst", "enum_dnnl_prop_kind.rst", "enum_dnnl_prop_kind_t.rst", "enum_dnnl_query.rst", "enum_dnnl_query_t.rst", "enum_dnnl_rnn_direction.rst", "enum_dnnl_rnn_direction_t.rst", "enum_dnnl_rnn_flags.rst", "enum_dnnl_rnn_flags_t.rst", "enum_dnnl_rounding_mode.rst", "enum_dnnl_rounding_mode_t.rst", "enum_dnnl_scratchpad_mode.rst", "enum_dnnl_scratchpad_mode_t.rst", "enum_dnnl_sparse_encoding_t.rst", "enum_dnnl_status.rst", "enum_dnnl_status_t.rst", "enum_dnnl_stream_flags.rst", "enum_dnnl_stream_flags_t.rst", "enum_dnnl_sycl_interop_memory_kind.rst", "enum_dnnl_sycl_interop_memory_kind_t.rst", "enum_dnnl_ukernel_pack_type.rst", "example_augru.cpp.rst", "example_batch_normalization.cpp.rst", "example_binary.cpp.rst", "example_bnorm_u8_via_binary_postops.cpp.rst", "example_cnn_inference_f32.c.rst", "example_cnn_inference_f32.cpp.rst", "example_cnn_inference_int8.cpp.rst", "example_cnn_training_bf16.cpp.rst", "example_cnn_training_f32.cpp.rst", "example_concat.cpp.rst", "example_convolution.cpp.rst", "example_cpu_brgemm.cpp.rst", "example_cpu_cnn_training_f32.c.rst", "example_cpu_getting_started.cpp.rst", "example_cpu_inference_int8.cpp.rst", "example_cpu_matmul_coo.cpp.rst", "example_cpu_matmul_csr.cpp.rst", "example_cpu_matmul_quantization.cpp.rst", "example_cpu_matmul_weights_compression.cpp.rst", "example_cpu_rnn_inference_f32.cpp.rst", "example_cpu_rnn_inference_int8.cpp.rst", "example_cpu_sgemm_and_matmul.cpp.rst", "example_cpu_single_op_partition.cpp.rst", "example_cross_engine_reorder.c.rst", "example_cross_engine_reorder.cpp.rst", "example_deconvolution.cpp.rst", "example_eltwise.cpp.rst", "example_getting_started.cpp.rst", "example_gpu_opencl_getting_started.cpp.rst", "example_gpu_opencl_interop.cpp.rst", "example_group_normalization.cpp.rst", "example_inference_int8_matmul.cpp.rst", "example_inner_product.cpp.rst", "example_layer_normalization.cpp.rst", "example_lbr_gru.cpp.rst", "example_lrn.cpp.rst", "example_lstm.cpp.rst", "example_matmul.cpp.rst", "example_memory_format_propagation.cpp.rst", "example_performance_profiling.cpp.rst", "example_pooling.cpp.rst", "example_prelu.cpp.rst", "example_reduction.cpp.rst", "example_reorder.cpp.rst", "example_resampling.cpp.rst", "example_rnn_training_f32.cpp.rst", "example_shuffle.cpp.rst", "example_softmax.cpp.rst", "example_sum.cpp.rst", "example_sycl_getting_started.cpp.rst", "example_sycl_interop_buffer.cpp.rst", "example_sycl_single_op_partition.cpp.rst", "example_vanilla_rnn.cpp.rst", "example_weights_decompression_matmul.cpp.rst", "global.rst", "graph_extension.rst", "graph_programming_model.rst", "graph_supported_operations.rst", "group_dnnl_api.rst", "group_dnnl_api_accumulation_mode.rst", "group_dnnl_api_attributes.rst", "group_dnnl_api_batch_normalization.rst", "group_dnnl_api_binary.rst", "group_dnnl_api_blas.rst", "group_dnnl_api_common.rst", "group_dnnl_api_concat.rst", "group_dnnl_api_convolution.rst", "group_dnnl_api_data_types.rst", "group_dnnl_api_deconvolution.rst", "group_dnnl_api_eltwise.rst", "group_dnnl_api_engine.rst", "group_dnnl_api_fpmath_mode.rst", "group_dnnl_api_group_normalization.rst", "group_dnnl_api_inner_product.rst", "group_dnnl_api_interop.rst", "group_dnnl_api_layer_normalization.rst", "group_dnnl_api_lrn.rst", "group_dnnl_api_matmul.rst", "group_dnnl_api_memory.rst", "group_dnnl_api_ocl_interop.rst", "group_dnnl_api_pooling.rst", "group_dnnl_api_prelu.rst", "group_dnnl_api_primitive_cache.rst", "group_dnnl_api_primitives.rst", "group_dnnl_api_primitives_common.rst", "group_dnnl_api_profiling.rst", "group_dnnl_api_reduction.rst", "group_dnnl_api_reorder.rst", "group_dnnl_api_resampling.rst", "group_dnnl_api_rnn.rst", "group_dnnl_api_service.rst", "group_dnnl_api_shuffle.rst", "group_dnnl_api_softmax.rst", "group_dnnl_api_stream.rst", "group_dnnl_api_sum.rst", "group_dnnl_api_sycl_interop.rst", "group_dnnl_api_threadpool_interop.rst", "group_dnnl_api_ukernel.rst", "group_dnnl_api_ukernel_brgemm.rst", "group_dnnl_api_utils.rst", "group_dnnl_graph_api.rst", "group_dnnl_graph_api_allocator.rst", "group_dnnl_graph_api_compiled_partition.rst", "group_dnnl_graph_api_compiled_partition_cache.rst", "group_dnnl_graph_api_constant_tensor_cache.rst", "group_dnnl_graph_api_engine.rst", "group_dnnl_graph_api_graph.rst", "group_dnnl_graph_api_interop.rst", "group_dnnl_graph_api_logical_tensor.rst", "group_dnnl_graph_api_ocl_interop.rst", "group_dnnl_graph_api_op.rst", "group_dnnl_graph_api_partition.rst", "group_dnnl_graph_api_status.rst", "group_dnnl_graph_api_sycl_interop.rst", "group_dnnl_graph_api_tensor.rst", "group_dnnl_graph_api_utils.rst", "index.rst", "interop_with_dpcpp_and_opencl.rst", "namespace_dnnl.rst", "namespace_dnnl_graph.rst", "namespace_dnnl_graph_ocl_interop.rst", "namespace_dnnl_graph_sycl_interop.rst", "namespace_dnnl_ocl_interop.rst", "namespace_dnnl_sycl_interop.rst", "namespace_dnnl_threadpool_interop.rst", "namespace_dnnl_ukernel.rst", "namespace_oneapi.rst", "namespace_std.rst", "namespace_sycl.rst", "orphans.rst", "page_augru_example_cpp.rst", "page_augru_example_cpp_short.rst", "page_batch_normalization_example_cpp.rst", "page_batch_normalization_example_cpp_short.rst", "page_binary_example_cpp.rst", "page_binary_example_cpp_short.rst", "page_bnorm_u8_via_binary_postops_cpp.rst", "page_bnorm_u8_via_binary_postops_cpp_short.rst", "page_cnn_inference_f32_c.rst", "page_cnn_inference_f32_cpp.rst", "page_cnn_inference_int8_cpp.rst", "page_cnn_training_bf16_cpp.rst", "page_cnn_training_f32_cpp.rst", "page_concat_example_cpp.rst", "page_concat_example_cpp_short.rst", "page_convolution_example_cpp.rst", "page_convolution_example_cpp_short.rst", "page_cpu_brgemm_example_cpp.rst", "page_cpu_cnn_training_f32_c.rst", "page_cpu_matmul_coo_cpp.rst", "page_cpu_matmul_csr_cpp.rst", "page_cpu_matmul_quantization_cpp.rst", "page_cpu_matmul_quantization_cpp_short.rst", "page_cpu_matmul_weights_compression_cpp.rst", "page_cpu_rnn_inference_f32_cpp.rst", "page_cpu_rnn_inference_int8_cpp.rst", "page_cpu_sgemm_and_matmul_cpp.rst", "page_cpu_sgemm_and_matmul_cpp_short.rst", "page_cross_engine_reorder_c.rst", "page_cross_engine_reorder_cpp.rst", "page_deconvolution_example_cpp.rst", "page_deconvolution_example_cpp_short.rst", "page_eltwise_example_cpp.rst", "page_eltwise_example_cpp_short.rst", "page_getting_started_cpp.rst", "page_gpu_opencl_interop_cpp.rst", "page_graph_cpu_getting_started_cpp.rst", "page_graph_cpu_inference_int8_cpp.rst", "page_graph_cpu_single_op_partition_cpp.rst", "page_graph_gpu_opencl_getting_started_cpp.rst", "page_graph_sycl_getting_started_cpp.rst", "page_graph_sycl_single_op_partition_cpp.rst", "page_group_normalization_example_cpp.rst", "page_group_normalization_example_cpp_short.rst", "page_inference_int8_matmul_cpp.rst", "page_inference_int8_matmul_cpp_short.rst", "page_inner_product_example_cpp.rst", "page_inner_product_example_cpp_short.rst", "page_layer_normalization_example_cpp.rst", "page_layer_normalization_example_cpp_short.rst", "page_lbr_gru_example_cpp.rst", "page_lbr_gru_example_cpp_short.rst", "page_legal_information.rst", "page_lrn_example_cpp.rst", "page_lrn_example_cpp_short.rst", "page_lstm_example_cpp.rst", "page_lstm_example_cpp_short.rst", "page_matmul_example_cpp.rst", "page_matmul_example_cpp_short.rst", "page_memory_format_propagation_cpp.rst", "page_performance_profiling_cpp.rst", "page_pooling_example_cpp.rst", "page_pooling_example_cpp_short.rst", "page_prelu_example_cpp.rst", "page_prelu_example_cpp_short.rst", "page_reduction_example_cpp.rst", "page_reduction_example_cpp_short.rst", "page_reorder_example_cpp.rst", "page_reorder_example_cpp_short.rst", "page_resampling_example_cpp.rst", "page_resampling_example_cpp_short.rst", "page_rnn_training_f32_cpp.rst", "page_shuffle_example_cpp.rst", "page_shuffle_example_cpp_short.rst", "page_softmax_example_cpp.rst", "page_softmax_example_cpp_short.rst", "page_sum_example_cpp.rst", "page_sum_example_cpp_short.rst", "page_sycl_interop_buffer_cpp.rst", "page_todo.rst", "page_vanilla_rnn_example_cpp.rst", "page_vanilla_rnn_example_cpp_short.rst", "page_weights_decompression_matmul_cpp.rst", "page_weights_decompression_matmul_cpp_short.rst", "performance_profiling_and_inspection.rst", "programming_model.rst", "struct_args_t.rst", "struct_cpu_deletor.rst", "struct_dnnl_augru_backward.rst", "struct_dnnl_augru_backward_primitive_desc.rst", "struct_dnnl_augru_forward.rst", "struct_dnnl_augru_forward_primitive_desc.rst", "struct_dnnl_batch_normalization_backward.rst", "struct_dnnl_batch_normalization_backward_primitive_desc.rst", "struct_dnnl_batch_normalization_forward.rst", "struct_dnnl_batch_normalization_forward_primitive_desc.rst", "struct_dnnl_binary.rst", "struct_dnnl_binary_primitive_desc.rst", "struct_dnnl_brgemm.rst", "struct_dnnl_concat.rst", "struct_dnnl_concat_primitive_desc.rst", "struct_dnnl_convolution_backward_data.rst", "struct_dnnl_convolution_backward_data_primitive_desc.rst", "struct_dnnl_convolution_backward_weights.rst", "struct_dnnl_convolution_backward_weights_primitive_desc.rst", "struct_dnnl_convolution_forward.rst", "struct_dnnl_convolution_forward_primitive_desc.rst", "struct_dnnl_deconvolution_backward_data.rst", "struct_dnnl_deconvolution_backward_data_primitive_desc.rst", "struct_dnnl_deconvolution_backward_weights.rst", "struct_dnnl_deconvolution_backward_weights_primitive_desc.rst", "struct_dnnl_deconvolution_forward.rst", "struct_dnnl_deconvolution_forward_primitive_desc.rst", "struct_dnnl_eltwise_backward.rst", "struct_dnnl_eltwise_backward_primitive_desc.rst", "struct_dnnl_eltwise_forward.rst", "struct_dnnl_eltwise_forward_primitive_desc.rst", "struct_dnnl_engine.rst", "struct_dnnl_engine-2.rst", "struct_dnnl_error.rst", "struct_dnnl_exec_arg_t.rst", "struct_dnnl_graph_inplace_pair_t.rst", "struct_dnnl_graph_logical_tensor_t.rst", "struct_dnnl_group_normalization_backward.rst", "struct_dnnl_group_normalization_backward_primitive_desc.rst", "struct_dnnl_group_normalization_forward.rst", "struct_dnnl_group_normalization_forward_primitive_desc.rst", "struct_dnnl_gru_backward.rst", "struct_dnnl_gru_backward_primitive_desc.rst", "struct_dnnl_gru_forward.rst", "struct_dnnl_gru_forward_primitive_desc.rst", "struct_dnnl_handle.rst", "struct_dnnl_handle_traits.rst", "struct_dnnl_inner_product_backward_data.rst", "struct_dnnl_inner_product_backward_data_primitive_desc.rst", "struct_dnnl_inner_product_backward_weights.rst", "struct_dnnl_inner_product_backward_weights_primitive_desc.rst", "struct_dnnl_inner_product_forward.rst", "struct_dnnl_inner_product_forward_primitive_desc.rst", "struct_dnnl_layer_normalization_backward.rst", "struct_dnnl_layer_normalization_backward_primitive_desc.rst", "struct_dnnl_layer_normalization_forward.rst", "struct_dnnl_layer_normalization_forward_primitive_desc.rst", "struct_dnnl_lbr_augru_backward.rst", "struct_dnnl_lbr_augru_backward_primitive_desc.rst", "struct_dnnl_lbr_augru_forward.rst", "struct_dnnl_lbr_augru_forward_primitive_desc.rst", "struct_dnnl_lbr_gru_backward.rst", "struct_dnnl_lbr_gru_backward_primitive_desc.rst", "struct_dnnl_lbr_gru_forward.rst", "struct_dnnl_lbr_gru_forward_primitive_desc.rst", "struct_dnnl_lrn_backward.rst", "struct_dnnl_lrn_backward_primitive_desc.rst", "struct_dnnl_lrn_forward.rst", "struct_dnnl_lrn_forward_primitive_desc.rst", "struct_dnnl_lstm_backward.rst", "struct_dnnl_lstm_backward_primitive_desc.rst", "struct_dnnl_lstm_forward.rst", "struct_dnnl_lstm_forward_primitive_desc.rst", "struct_dnnl_matmul.rst", "struct_dnnl_matmul_primitive_desc.rst", "struct_dnnl_memory.rst", "struct_dnnl_memory-2.rst", "struct_dnnl_memory_desc.rst", "struct_dnnl_memory_desc-2.rst", "struct_dnnl_pooling_backward.rst", "struct_dnnl_pooling_backward_primitive_desc.rst", "struct_dnnl_pooling_forward.rst", "struct_dnnl_pooling_forward_primitive_desc.rst", "struct_dnnl_post_ops.rst", "struct_dnnl_post_ops-2.rst", "struct_dnnl_prelu_backward.rst", "struct_dnnl_prelu_backward_primitive_desc.rst", "struct_dnnl_prelu_forward.rst", "struct_dnnl_prelu_forward_primitive_desc.rst", "struct_dnnl_primitive.rst", "struct_dnnl_primitive-2.rst", "struct_dnnl_primitive_attr.rst", "struct_dnnl_primitive_attr-2.rst", "struct_dnnl_primitive_desc.rst", "struct_dnnl_primitive_desc-2.rst", "struct_dnnl_primitive_desc_base.rst", "struct_dnnl_reduction.rst", "struct_dnnl_reduction_primitive_desc.rst", "struct_dnnl_reorder.rst", "struct_dnnl_reorder_primitive_desc.rst", "struct_dnnl_resampling_backward.rst", "struct_dnnl_resampling_backward_primitive_desc.rst", "struct_dnnl_resampling_forward.rst", "struct_dnnl_resampling_forward_primitive_desc.rst", "struct_dnnl_rnn_primitive_desc_base.rst", "struct_dnnl_shuffle_backward.rst", "struct_dnnl_shuffle_backward_primitive_desc.rst", "struct_dnnl_shuffle_forward.rst", "struct_dnnl_shuffle_forward_primitive_desc.rst", "struct_dnnl_softmax_backward.rst", "struct_dnnl_softmax_backward_primitive_desc.rst", "struct_dnnl_softmax_forward.rst", "struct_dnnl_softmax_forward_primitive_desc.rst", "struct_dnnl_stream.rst", "struct_dnnl_stream-2.rst", "struct_dnnl_sum.rst", "struct_dnnl_sum_primitive_desc.rst", "struct_dnnl_threadpool_interop_threadpool_iface.rst", "struct_dnnl_transform.rst", "struct_dnnl_ukernel_attr_params.rst", "struct_dnnl_ukernel_attr_params-2.rst", "struct_dnnl_ukernel_brgemm.rst", "struct_dnnl_ukernel_transform.rst", "struct_dnnl_vanilla_rnn_backward.rst", "struct_dnnl_vanilla_rnn_backward_primitive_desc.rst", "struct_dnnl_vanilla_rnn_forward.rst", "struct_dnnl_vanilla_rnn_forward_primitive_desc.rst", "struct_dnnl_version_t.rst", "struct_example_allows_unimplemented.rst", "struct_gemm_dims_t.rst", "struct_gqa_dims_t.rst", "struct_mqa_dims_t.rst", "struct_sdpa_dims_t.rst", "struct_sycl_deletor.rst", "supported_primitives.rst", "ukernels.rst"], "titles": ["Advanced Topics", "Building and Linking", "class dnnl::graph::allocator", "class dnnl::graph::compiled_partition", "class dnnl::graph::graph", "class dnnl::graph::logical_tensor", "class dnnl::graph::op", "class dnnl::graph::partition", "class dnnl::graph::tensor", "class simple_memory_pool_t", "Primitive Attributes", "Primitive Attributes: accumulation mode", "Primitive Attributes: deterministic", "Primitive Attributes: dropout", "Primitive Attributes: floating-point math mode", "Primitive Attributes: Post-ops", "Primitive Attributes: Quantization", "Primitive Attributes: rounding mode", "Primitive Attributes: Scratchpad", "Basic Concepts", "Batch Normalization", "Benchmarking Performance", "Binary", "Build from Source", "Build Options", "API", "Concat", "Constant Tensor Cache", "Naming Conventions", "Convolution", "CPU Dispatcher Control", "CPU ISA Hints", "Data Types", "DPC++ Interoperability", "Eltwise", "Examples", "Experimental features", "Basic Concepts", "Graph Compiler", "Graph Dump", "Supported Fusion Patterns", "Low Precision", "Scaled Dot-Product Attention (SDPA)", "Group Normalization", "Inference", "Inference and Training Aspects", "Int8 Inference", "Inner Product", "Inspecting JIT Code", "Nuances of int8 Computations", "Layer Normalization", "Linking to the Library", "Local Response Normalization (LRN)", "Matrix Multiplication", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "GroupNorm", "HardSigmoid", "HardSigmoidBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "Maximum", "MaxPool", "MaxPoolBackward", "Minimum", "Mish", "MishBackward", "Multiply", "Pow", "PReLU", "PReLUBackward", "Quantize", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReLU", "ReLUBackward", "Reorder", "Round", "Select", "Sigmoid", "SigmoidBackward", "SoftMax", "SoftMaxBackward", "SoftPlus", "SoftPlusBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "OpenCL Interoperability", "Configuring oneDNN for Benchmarking", "Persistent Cache", "Pooling", "PReLU", "Primitive Cache", "Profiling oneDNN Performance", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sum", "Using oneDNN with Threadpool-Based Threading", "Training", "Bfloat16 Training", "Transitioning from Intel MKL-DNN to oneDNN", "Basic Concepts", "Batch-Reduce General Matrix Multiplication", "Data transformation", "Understanding Memory Formats", "Verbose Mode", "Verbose Message Catalogue", "Profiling with VTune(TM) Profiler", "enum api_kind", "enum dnnl::accumulation_mode", "enum dnnl_accumulation_mode_t", "enum dnnl_alg_kind_t", "enum dnnl::algorithm", "enum dnnl::cpu_isa", "enum dnnl::cpu_isa_hints", "enum dnnl_cpu_isa_hints_t", "enum dnnl_cpu_isa_t", "enum dnnl_data_type_t", "enum dnnl::engine::kind", "enum dnnl_engine_kind_t", "enum dnnl_format_kind_t", "enum dnnl_format_tag_t", "enum dnnl::fpmath_mode", "enum dnnl_fpmath_mode_t", "enum dnnl_graph_layout_type_t", "enum dnnl::graph::logical_tensor::data_type", "enum dnnl::graph::logical_tensor::layout_type", "enum dnnl::graph::logical_tensor::property_type", "enum dnnl::graph::op::attr", "enum dnnl_graph_op_attr_t", "enum dnnl::graph::op::kind", "enum dnnl_graph_op_kind_t", "enum dnnl::graph::partition::policy", "enum dnnl_graph_partition_policy_t", "enum dnnl::graph::status", "enum dnnl_graph_tensor_property_t", "enum dnnl::memory::data_type", "enum dnnl::memory::format_kind", "enum dnnl::memory::format_tag", "enum dnnl::memory::sparse_encoding", "enum dnnl::normalization_flags", "enum dnnl_normalization_flags_t", "enum dnnl::ocl_interop::memory_kind", "enum dnnl_ocl_interop_memory_kind_t", "enum dnnl_pack_type_t", "enum dnnl::primitive::kind", "enum dnnl_primitive_kind_t", "enum dnnl::profiling_data_kind", "enum dnnl_profiling_data_kind_t", "enum dnnl::prop_kind", "enum dnnl_prop_kind_t", "enum dnnl::query", "enum dnnl_query_t", "enum dnnl::rnn_direction", "enum dnnl_rnn_direction_t", "enum dnnl::rnn_flags", "enum dnnl_rnn_flags_t", "enum dnnl::rounding_mode", "enum dnnl_rounding_mode_t", "enum dnnl::scratchpad_mode", "enum dnnl_scratchpad_mode_t", "enum dnnl_sparse_encoding_t", "enum dnnl::status", "enum dnnl_status_t", "enum dnnl::stream::flags", "enum dnnl_stream_flags_t", "enum dnnl::sycl_interop::memory_kind", "enum dnnl_sycl_interop_memory_kind_t", "enum dnnl::ukernel::pack_type", "augru.cpp", "batch_normalization.cpp", "binary.cpp", "bnorm_u8_via_binary_postops.cpp", "cnn_inference_f32.c", "cnn_inference_f32.cpp", "cnn_inference_int8.cpp", "cnn_training_bf16.cpp", "cnn_training_f32.cpp", "concat.cpp", "convolution.cpp", "cpu_brgemm.cpp", "cpu_cnn_training_f32.c", "cpu_getting_started.cpp", "cpu_inference_int8.cpp", "cpu_matmul_coo.cpp", "cpu_matmul_csr.cpp", "cpu_matmul_quantization.cpp", "cpu_matmul_weights_compression.cpp", "cpu_rnn_inference_f32.cpp", "cpu_rnn_inference_int8.cpp", "cpu_sgemm_and_matmul.cpp", "cpu_single_op_partition.cpp", "cross_engine_reorder.c", "cross_engine_reorder.cpp", "deconvolution.cpp", "eltwise.cpp", "getting_started.cpp", "gpu_opencl_getting_started.cpp", "gpu_opencl_interop.cpp", "group_normalization.cpp", "inference_int8_matmul.cpp", "inner_product.cpp", "layer_normalization.cpp", "lbr_gru.cpp", "lrn.cpp", "lstm.cpp", "matmul.cpp", "memory_format_propagation.cpp", "performance_profiling.cpp", "pooling.cpp", "prelu.cpp", "reduction.cpp", "reorder.cpp", "resampling.cpp", "rnn_training_f32.cpp", "shuffle.cpp", "softmax.cpp", "sum.cpp", "sycl_getting_started.cpp", "sycl_interop_buffer.cpp", "sycl_single_op_partition.cpp", "vanilla_rnn.cpp", "weights_decompression_matmul.cpp", "Global Namespace", "Graph Extension", "Programming Model", "Supported Operations", "oneDNN API", "Accumulation Mode", "Attributes", "Batch Normalization", "Binary", "BLAS functions", "Common API", "Concat", "Convolution", "Data types", "Deconvolution", "Eltwise", "Engine", "Floating-point Math Mode", "Group Normalization", "Inner Product", "Runtime interoperability API", "Layer Normalization", "LRN", "Matrix Multiplication", "Memory", "OpenCL interoperability API", "Pooling", "PReLU", "Primitive Cache", "Primitives", "Common", "Profiling", "Reduction", "Reorder", "Resampling", "RNN", "Service", "Shuffle", "Softmax", "Stream", "Sum", "SYCL interoperability API", "Threadpool interoperability API", "Ukernels", "BRGeMM ukernel", "Utilities", "Graph API", "Allocator", "Compiled Partition", "Compiled Partition Cache", "Constant Tensor Cache", "Engine", "Graph", "Runtime interoperability API", "Logical Tensor", "OpenCL interoperability API", "Op", "Partition", "Status", "SYCL interoperability API", "Tensor", "Utilities", "oneAPI Deep Neural Network Library Developer Guide and Reference", "Interoperability with DPC++ and OpenCL", "namespace dnnl", "namespace dnnl::graph", "namespace dnnl::graph::ocl_interop", "namespace dnnl::graph::sycl_interop", "namespace dnnl::ocl_interop", "namespace dnnl::sycl_interop", "namespace dnnl::threadpool_interop", "namespace dnnl::ukernel", "namespace oneapi", "namespace std", "namespace sycl", "Orphans", "AUGRU RNN Primitive Example", "&lt;Untitled&gt;", "Batch Normalization Primitive Example", "&lt;Untitled&gt;", "Binary Primitive Example", "&lt;Untitled&gt;", "Bnorm u8 by binary post-ops example", "&lt;Untitled&gt;", "CNN f32 inference example", "CNN f32 inference example", "CNN int8 inference example", "CNN bf16 training example", "CNN f32 training example", "Concat Primitive Example", "&lt;Untitled&gt;", "Convolution Primitive Example", "&lt;Untitled&gt;", "BRGeMM ukernel example", "CNN f32 training example", "MatMul Primitive Example", "MatMul Primitive Example", "MatMul Tutorial: Quantization", "&lt;Untitled&gt;", "MatMul Primitive Example", "RNN f32 inference example", "RNN int8 inference example", "MatMul Tutorial: Comparison with SGEMM", "&lt;Untitled&gt;", "Reorder between CPU and GPU engines", "Reorder between CPU and GPU engines", "Deconvolution Primitive Example", "&lt;Untitled&gt;", "Element-Wise Primitive Example", "&lt;Untitled&gt;", "Getting started", "Getting started on GPU with OpenCL extensions API", "Getting started on CPU with Graph API", "Convolution int8 inference example with Graph API", "Single op partition on CPU", "Getting started with OpenCL extensions and Graph API", "Getting started with SYCL extensions API and Graph API", "Single op partition on GPU", "Group Normalization Primitive Example", "&lt;Untitled&gt;", "MatMul Tutorial: INT8 Inference", "&lt;Untitled&gt;", "Inner Product Primitive Example", "&lt;Untitled&gt;", "Layer Normalization Primitive Example", "&lt;Untitled&gt;", "Linear-Before-Reset GRU RNN Primitive Example", "&lt;Untitled&gt;", "Legal Information", "Local Response Normalization Primitive Example", "&lt;Untitled&gt;", "LSTM RNN Primitive Example", "&lt;Untitled&gt;", "Matmul Primitive Example", "&lt;Untitled&gt;", "Memory Format Propagation", "Performance Profiling Example", "Pooling Primitive Example", "&lt;Untitled&gt;", "Primitive Example", "&lt;Untitled&gt;", "Reduction Primitive Example", "&lt;Untitled&gt;", "Reorder Primitive Example", "&lt;Untitled&gt;", "Resampling Primitive Example", "&lt;Untitled&gt;", "RNN f32 training example", "Shuffle Primitive Example", "&lt;Untitled&gt;", "Softmax Primitive Example", "&lt;Untitled&gt;", "Sum Primitive Example", "&lt;Untitled&gt;", "Getting started on both CPU and GPU with SYCL extensions API", "Todo List", "Vanilla RNN Primitive Example", "&lt;Untitled&gt;", "MatMul Tutorial: weights decompression", "&lt;Untitled&gt;", "Performance Profiling and Inspection", "Programming Model", "struct args_t", "struct cpu_deletor", "struct dnnl::augru_backward", "struct dnnl::augru_backward::primitive_desc", "struct dnnl::augru_forward", "struct dnnl::augru_forward::primitive_desc", "struct dnnl::batch_normalization_backward", "struct dnnl::batch_normalization_backward::primitive_desc", "struct dnnl::batch_normalization_forward", "struct dnnl::batch_normalization_forward::primitive_desc", "struct dnnl::binary", "struct dnnl::binary::primitive_desc", "struct dnnl_brgemm", "struct dnnl::concat", "struct dnnl::concat::primitive_desc", "struct dnnl::convolution_backward_data", "struct dnnl::convolution_backward_data::primitive_desc", "struct dnnl::convolution_backward_weights", "struct dnnl::convolution_backward_weights::primitive_desc", "struct dnnl::convolution_forward", "struct dnnl::convolution_forward::primitive_desc", "struct dnnl::deconvolution_backward_data", "struct dnnl::deconvolution_backward_data::primitive_desc", "struct dnnl::deconvolution_backward_weights", "struct dnnl::deconvolution_backward_weights::primitive_desc", "struct dnnl::deconvolution_forward", "struct dnnl::deconvolution_forward::primitive_desc", "struct dnnl::eltwise_backward", "struct dnnl::eltwise_backward::primitive_desc", "struct dnnl::eltwise_forward", "struct dnnl::eltwise_forward::primitive_desc", "struct dnnl_engine", "struct dnnl::engine", "struct dnnl::error", "struct dnnl_exec_arg_t", "struct dnnl_graph_inplace_pair_t", "struct dnnl_graph_logical_tensor_t", "struct dnnl::group_normalization_backward", "struct dnnl::group_normalization_backward::primitive_desc", "struct dnnl::group_normalization_forward", "struct dnnl::group_normalization_forward::primitive_desc", "struct dnnl::gru_backward", "struct dnnl::gru_backward::primitive_desc", "struct dnnl::gru_forward", "struct dnnl::gru_forward::primitive_desc", "template struct dnnl::handle", "template struct dnnl::handle_traits", "struct dnnl::inner_product_backward_data", "struct dnnl::inner_product_backward_data::primitive_desc", "struct dnnl::inner_product_backward_weights", "struct dnnl::inner_product_backward_weights::primitive_desc", "struct dnnl::inner_product_forward", "struct dnnl::inner_product_forward::primitive_desc", "struct dnnl::layer_normalization_backward", "struct dnnl::layer_normalization_backward::primitive_desc", "struct dnnl::layer_normalization_forward", "struct dnnl::layer_normalization_forward::primitive_desc", "struct dnnl::lbr_augru_backward", "struct dnnl::lbr_augru_backward::primitive_desc", "struct dnnl::lbr_augru_forward", "struct dnnl::lbr_augru_forward::primitive_desc", "struct dnnl::lbr_gru_backward", "struct dnnl::lbr_gru_backward::primitive_desc", "struct dnnl::lbr_gru_forward", "struct dnnl::lbr_gru_forward::primitive_desc", "struct dnnl::lrn_backward", "struct dnnl::lrn_backward::primitive_desc", "struct dnnl::lrn_forward", "struct dnnl::lrn_forward::primitive_desc", "struct dnnl::lstm_backward", "struct dnnl::lstm_backward::primitive_desc", "struct dnnl::lstm_forward", "struct dnnl::lstm_forward::primitive_desc", "struct dnnl::matmul", "struct dnnl::matmul::primitive_desc", "struct dnnl_memory", "struct dnnl::memory", "struct dnnl_memory_desc", "struct dnnl::memory::desc", "struct dnnl::pooling_backward", "struct dnnl::pooling_backward::primitive_desc", "struct dnnl::pooling_forward", "struct dnnl::pooling_forward::primitive_desc", "struct dnnl_post_ops", "struct dnnl::post_ops", "struct dnnl::prelu_backward", "struct dnnl::prelu_backward::primitive_desc", "struct dnnl::prelu_forward", "struct dnnl::prelu_forward::primitive_desc", "struct dnnl_primitive", "struct dnnl::primitive", "struct dnnl_primitive_attr", "struct dnnl::primitive_attr", "struct dnnl_primitive_desc", "struct dnnl::primitive_desc", "struct dnnl::primitive_desc_base", "struct dnnl::reduction", "struct dnnl::reduction::primitive_desc", "struct dnnl::reorder", "struct dnnl::reorder::primitive_desc", "struct dnnl::resampling_backward", "struct dnnl::resampling_backward::primitive_desc", "struct dnnl::resampling_forward", "struct dnnl::resampling_forward::primitive_desc", "struct dnnl::rnn_primitive_desc_base", "struct dnnl::shuffle_backward", "struct dnnl::shuffle_backward::primitive_desc", "struct dnnl::shuffle_forward", "struct dnnl::shuffle_forward::primitive_desc", "struct dnnl::softmax_backward", "struct dnnl::softmax_backward::primitive_desc", "struct dnnl::softmax_forward", "struct dnnl::softmax_forward::primitive_desc", "struct dnnl_stream", "struct dnnl::stream", "struct dnnl::sum", "struct dnnl::sum::primitive_desc", "struct dnnl::threadpool_interop::threadpool_iface", "struct dnnl_transform", "struct dnnl_ukernel_attr_params", "struct dnnl::ukernel::attr_params", "struct dnnl::ukernel::brgemm", "struct dnnl::ukernel::transform", "struct dnnl::vanilla_rnn_backward", "struct dnnl::vanilla_rnn_backward::primitive_desc", "struct dnnl::vanilla_rnn_forward", "struct dnnl::vanilla_rnn_forward::primitive_desc", "struct dnnl_version_t", "struct example_allows_unimplemented", "struct gemm_dims_t", "struct gqa_dims_t", "struct mqa_dims_t", "struct sdpa_dims_t", "struct sycl_deletor", "Supported Primitives", "Ukernels"], "terms": {"transit": 0, "from": [0, 1, 3, 4, 7, 10, 11, 13, 14, 15, 16, 18, 19, 24, 26, 28, 29, 34, 36, 37, 38, 40, 42, 44, 45, 46, 47, 49, 51, 52, 53, 63, 75, 76, 88, 89, 90, 91, 94, 95, 96, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 120, 123, 124, 131, 132, 136, 139, 140, 141, 143, 144, 146, 148, 149, 156, 157, 158, 159, 160, 161, 166, 167, 176, 193, 196, 208, 209, 214, 215, 224, 225, 226, 227, 228, 231, 232, 234, 235, 236, 237, 238, 241, 242, 243, 244, 246, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 283, 284, 294, 295, 299, 302, 303, 308, 313, 322, 326, 330, 335, 344, 345, 346, 347, 354, 355, 356, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 377, 378, 379, 384, 385, 386, 388, 389, 390, 396, 398, 400, 401, 402, 404, 405, 407, 409, 410, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 435, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 561, 563, 564, 565, 566], "intelmkl": 0, "dnn": [0, 13, 32, 159], "onednn": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 138, 140, 143, 146, 147, 148, 154, 156, 159, 160, 161, 162, 176, 241, 245, 251, 253, 263, 274, 303, 314, 320, 324, 329, 332, 333, 337, 340, 342, 343, 346, 348, 364, 375, 378, 379, 380, 390, 391, 392, 393, 394, 395, 413, 414, 438, 473, 476, 485, 486, 557], "understand": [0, 37, 176, 302, 413], "memori": [0, 3, 5, 8, 10, 11, 15, 16, 20, 22, 25, 26, 29, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 49, 50, 52, 53, 131, 132, 139, 141, 142, 144, 145, 146, 147, 148, 149, 151, 154, 157, 158, 160, 164, 165, 166, 167, 172, 175, 176, 189, 197, 198, 206, 207, 210, 211, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 284, 285, 286, 287, 288, 289, 290, 292, 293, 296, 297, 299, 300, 301, 303, 304, 305, 308, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 325, 326, 332, 333, 337, 338, 342, 346, 347, 348, 353, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 384, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 431, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 559, 560, 561, 562, 563, 564, 565, 566, 569], "format": [0, 15, 16, 19, 20, 22, 26, 29, 34, 35, 36, 38, 43, 44, 45, 46, 47, 50, 52, 53, 67, 68, 69, 70, 71, 72, 88, 89, 105, 106, 141, 142, 144, 145, 146, 147, 148, 149, 151, 156, 157, 158, 160, 161, 175, 176, 192, 193, 194, 206, 207, 216, 228, 229, 231, 232, 235, 236, 238, 239, 240, 241, 251, 255, 256, 262, 263, 269, 277, 289, 302, 308, 353, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 384, 385, 388, 389, 391, 396, 397, 398, 400, 401, 404, 405, 409, 410, 425, 430, 431, 432, 434, 435, 436, 439, 443, 447, 454, 456, 458, 462, 464, 468, 478, 482, 488, 490, 494, 498, 502, 506, 510, 516, 518, 520, 526, 541, 546, 550, 564], "nuanc": [0, 16, 26, 32, 287, 320, 348], "int8": [0, 10, 15, 16, 26, 29, 32, 35, 42, 43, 45, 47, 50, 53, 73, 107, 145, 148, 150, 230, 238, 241, 244, 255, 284, 287, 320, 348, 353, 375, 399, 532], "comput": [0, 3, 4, 6, 7, 10, 11, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 55, 57, 59, 63, 65, 67, 68, 69, 70, 71, 72, 78, 82, 85, 87, 89, 90, 91, 95, 96, 98, 102, 106, 117, 122, 124, 126, 128, 135, 136, 137, 139, 141, 142, 144, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 164, 165, 169, 170, 182, 190, 195, 196, 204, 205, 224, 225, 226, 227, 233, 234, 235, 241, 242, 243, 244, 249, 250, 251, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 284, 285, 287, 291, 294, 296, 297, 299, 302, 303, 307, 308, 310, 312, 313, 316, 317, 319, 320, 326, 330, 334, 335, 346, 347, 348, 354, 356, 358, 360, 363, 364, 367, 369, 371, 375, 376, 377, 378, 379, 383, 384, 386, 388, 389, 396, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 447, 475, 478, 494, 524, 530, 538, 550, 552], "primit": [0, 20, 22, 24, 26, 28, 29, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 49, 50, 52, 60, 67, 118, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 158, 159, 163, 166, 175, 176, 189, 192, 193, 194, 195, 196, 201, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 282, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 340, 342, 346, 347, 353, 355, 357, 359, 360, 362, 363, 364, 365, 366, 368, 370, 372, 375, 378, 379, 380, 381, 385, 387, 397, 398, 399, 401, 403, 405, 408, 410, 412, 414, 416, 418, 420, 422, 424, 425, 427, 429, 431, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 561, 563, 564, 565, 566], "cach": [0, 3, 19, 24, 44, 53, 144, 156, 159, 182, 190, 206, 207, 237, 238, 252, 273, 279, 282, 303, 308, 324, 326, 333, 344, 346, 391, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 475, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 519, 521, 525, 527, 530, 535, 536, 538, 540, 542, 545, 547, 549, 551, 555, 563, 565], "persist": [0, 143], "us": [0, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 65, 67, 68, 73, 74, 75, 76, 78, 79, 88, 89, 90, 91, 97, 100, 103, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 122, 128, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 164, 165, 166, 167, 169, 170, 172, 175, 176, 182, 187, 188, 190, 191, 192, 193, 194, 195, 196, 201, 206, 207, 214, 215, 216, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 285, 286, 287, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 326, 328, 330, 332, 333, 335, 337, 338, 340, 344, 345, 346, 347, 348, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 406, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 437, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 475, 476, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 523, 524, 526, 528, 530, 532, 537, 538, 539, 541, 543, 546, 548, 550, 552, 554, 556, 560, 561, 564, 566], "threadpool": [0, 29, 42, 278, 282, 298, 348, 557], "base": [0, 10, 15, 16, 18, 19, 20, 22, 23, 24, 25, 29, 30, 32, 33, 34, 36, 42, 43, 44, 45, 47, 48, 49, 50, 52, 91, 92, 101, 104, 105, 138, 139, 141, 142, 144, 145, 147, 148, 149, 150, 154, 155, 160, 161, 166, 167, 246, 269, 275, 320, 322, 348, 363, 388, 394, 395, 413, 425, 454, 476, 485, 523, 530, 534, 535, 539, 544, 556, 561], "thread": [0, 18, 19, 29, 36, 40, 42, 144, 156, 214, 215, 320, 328, 348, 414, 557], "experiment": [0, 20, 24, 38, 161, 340], "featur": [0, 15, 20, 24, 25, 27, 29, 30, 31, 39, 49, 50, 143, 159, 160, 161, 169, 170, 243, 244, 269, 284, 314, 364, 388, 425, 524], "sourc": [1, 10, 15, 16, 18, 24, 26, 28, 29, 34, 36, 37, 38, 44, 45, 46, 47, 49, 53, 142, 146, 147, 149, 154, 161, 206, 207, 224, 225, 226, 231, 232, 233, 234, 236, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 276, 285, 286, 289, 290, 292, 293, 296, 297, 299, 300, 301, 302, 304, 305, 308, 310, 311, 312, 315, 316, 318, 340, 354, 356, 357, 358, 364, 365, 366, 367, 368, 369, 372, 375, 377, 383, 384, 386, 388, 389, 396, 397, 398, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 426, 428, 430, 431, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 535, 537, 538, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566, 567], "option": [1, 18, 20, 21, 23, 30, 31, 36, 39, 42, 43, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 144, 148, 152, 155, 160, 196, 214, 215, 224, 258, 260, 276, 285, 302, 308, 314, 333, 337, 344, 345, 346, 347, 354, 380, 388, 404, 409, 414, 434, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 518, 520, 522, 526, 528, 534, 537, 538, 539, 541, 543, 546, 548, 550, 552, 556, 561, 562, 564, 566], "librari": [1, 3, 4, 5, 7, 8, 10, 12, 14, 15, 16, 19, 25, 27, 29, 30, 33, 36, 37, 39, 40, 44, 45, 46, 47, 48, 73, 75, 76, 96, 107, 137, 138, 139, 140, 141, 149, 152, 155, 160, 168, 171, 179, 181, 182, 189, 190, 195, 200, 201, 214, 215, 217, 218, 248, 251, 302, 303, 314, 319, 326, 328, 330, 332, 335, 336, 338, 346, 347, 383, 388, 389, 398, 413, 414, 432, 436, 472, 475, 476, 485, 516, 530, 554, 557], "more": [2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 19, 20, 24, 26, 29, 32, 36, 38, 40, 41, 43, 45, 46, 47, 120, 131, 144, 145, 148, 151, 154, 155, 157, 158, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 235, 241, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 344, 345, 346, 347, 348, 350, 363, 371, 375, 380, 383, 388, 398, 414, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 563, 564, 565, 566, 567], "includ": [2, 3, 4, 5, 6, 7, 8, 16, 19, 20, 22, 24, 26, 29, 32, 37, 38, 40, 41, 43, 44, 47, 50, 51, 53, 144, 146, 148, 149, 150, 151, 152, 155, 157, 158, 160, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 302, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 414, 415, 417, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 563, 564, 565, 566, 567], "dnnl_graph": [2, 3, 4, 5, 6, 7, 8, 51, 180, 181, 182, 183, 185, 187, 189, 237, 238, 246, 252, 273, 275, 390, 391, 392, 393, 394, 395], "hpp": [2, 3, 4, 5, 6, 7, 8, 33, 38, 51, 138, 152, 155, 157, 158, 159, 164, 167, 168, 169, 173, 177, 180, 181, 182, 183, 185, 187, 189, 191, 192, 193, 194, 195, 197, 200, 202, 204, 206, 208, 210, 212, 214, 217, 219, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 365, 366, 367, 369, 371, 373, 374, 375, 377, 380, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 563, 564, 565, 566], "public": [2, 3, 4, 5, 6, 7, 8, 9, 51, 152, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566, 568], "allocator_handl": 2, "dnnl_graph_host_allocate_f": [2, 278, 325], "host_malloc": [2, 278, 325], "dnnl_graph_host_deallocate_f": [2, 278, 325], "host_fre": [2, 278, 325], "an": [2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 161, 173, 174, 176, 179, 181, 183, 184, 189, 193, 194, 195, 196, 200, 201, 202, 203, 206, 207, 216, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 284, 287, 289, 293, 294, 295, 297, 300, 302, 303, 308, 313, 314, 315, 317, 318, 319, 320, 322, 325, 326, 328, 330, 332, 333, 334, 335, 337, 338, 340, 344, 345, 346, 347, 348, 350, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 407, 409, 410, 411, 413, 414, 415, 417, 418, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566], "accord": [2, 3, 4, 6, 7, 8, 16, 26, 37, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 146, 151, 189, 214, 215, 218, 278, 313, 326, 330, 332, 335, 363, 476, 510, 512], "given": [2, 7, 8, 11, 12, 13, 14, 16, 17, 22, 26, 29, 32, 36, 38, 42, 43, 45, 46, 47, 49, 50, 53, 54, 56, 74, 93, 97, 100, 101, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 127, 129, 130, 133, 136, 140, 146, 150, 156, 157, 159, 161, 189, 217, 218, 237, 238, 239, 240, 246, 252, 263, 273, 275, 284, 302, 303, 308, 319, 325, 333, 335, 337, 346, 347, 373, 374, 375, 380, 383, 388, 389, 390, 392, 394, 395, 432, 516, 518, 524, 532], "function": [2, 12, 14, 15, 16, 19, 20, 25, 27, 28, 30, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 64, 80, 92, 94, 101, 109, 110, 111, 112, 113, 114, 115, 138, 143, 144, 152, 155, 157, 158, 159, 160, 166, 189, 207, 217, 218, 235, 237, 238, 241, 251, 252, 255, 263, 269, 273, 277, 282, 336, 342, 343, 371, 375, 380, 381, 398, 414, 425, 436, 472, 473, 485, 516, 518, 530, 554, 557], "pointer": [2, 7, 8, 18, 25, 33, 36, 138, 156, 157, 158, 161, 206, 207, 235, 241, 245, 287, 302, 303, 308, 314, 319, 320, 321, 322, 325, 333, 337, 338, 344, 345, 346, 347, 348, 371, 375, 380, 388, 472, 485, 516, 518, 530, 554, 560, 561, 562], "paramet": [2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 19, 20, 25, 29, 41, 43, 45, 46, 47, 48, 49, 50, 67, 68, 90, 91, 142, 143, 144, 148, 149, 156, 160, 161, 172, 175, 195, 196, 201, 204, 205, 206, 207, 241, 243, 244, 245, 251, 255, 263, 269, 277, 278, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 344, 345, 346, 347, 348, 363, 364, 375, 378, 379, 380, 383, 388, 389, 398, 413, 425, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "A": [2, 3, 4, 5, 7, 8, 10, 18, 19, 29, 36, 37, 40, 41, 42, 44, 46, 47, 49, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 88, 89, 98, 99, 107, 109, 110, 111, 112, 113, 114, 115, 131, 132, 141, 144, 146, 147, 148, 149, 157, 158, 159, 160, 161, 175, 192, 194, 199, 200, 201, 208, 209, 216, 223, 224, 235, 239, 240, 241, 245, 251, 255, 258, 260, 276, 277, 278, 284, 285, 286, 287, 289, 290, 291, 292, 293, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 342, 344, 346, 347, 348, 354, 364, 371, 373, 374, 375, 380, 388, 389, 398, 404, 409, 413, 432, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 473, 474, 478, 480, 482, 484, 485, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 530, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 554, 556, 560, 561, 562, 564, 566], "malloc": [2, 228, 236, 247, 325, 333, 337, 344, 345, 362, 372, 382], "cpu": [2, 8, 16, 19, 20, 27, 29, 32, 33, 35, 36, 38, 42, 44, 47, 53, 140, 141, 143, 144, 146, 148, 152, 156, 157, 158, 160, 161, 168, 169, 170, 171, 173, 174, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 274, 277, 278, 294, 302, 314, 320, 348, 353, 371, 372, 373, 374, 375, 378, 379, 380, 388, 391, 393, 394, 395, 413, 414, 436, 438, 439, 516, 557, 567], "free": [2, 5, 37, 228, 236, 247, 325, 333, 337, 344, 345, 362, 372, 380, 382, 516], "default": [2, 3, 4, 5, 8, 10, 11, 12, 15, 17, 18, 19, 23, 24, 27, 30, 31, 32, 33, 36, 38, 39, 40, 44, 46, 48, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 83, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 120, 122, 123, 124, 125, 126, 128, 130, 133, 135, 138, 143, 144, 148, 157, 158, 159, 160, 164, 165, 169, 170, 177, 178, 197, 198, 214, 215, 219, 220, 221, 222, 235, 258, 276, 284, 295, 313, 314, 327, 328, 371, 404, 434, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 525, 526, 527, 528, 530, 532, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 561, 562, 563, 564, 565, 566], "constructor": [2, 3, 5, 8, 10, 19, 140, 148, 157, 158, 235, 364, 371, 388, 413, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 519, 520, 521, 522, 525, 526, 527, 528, 530, 532, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 561, 562, 563, 564, 565, 566], "compil": [3, 7, 18, 32, 36, 40, 44, 48, 96, 139, 143, 179, 181, 189, 218, 237, 238, 246, 252, 273, 274, 275, 279, 282, 314, 324, 325, 328, 332, 333, 335, 337, 338, 344, 345, 383, 388, 389, 413, 414, 432, 475, 476], "partit": [3, 4, 35, 39, 40, 41, 42, 157, 158, 179, 181, 188, 235, 237, 238, 246, 252, 273, 275, 278, 282, 324, 325, 330, 332, 333, 337, 338, 343, 344, 345, 371, 475, 476], "object": [3, 4, 5, 6, 7, 8, 10, 15, 16, 20, 24, 29, 36, 37, 43, 46, 47, 50, 53, 140, 144, 147, 148, 156, 157, 158, 159, 161, 194, 207, 216, 224, 225, 226, 227, 233, 234, 235, 241, 242, 249, 250, 251, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 299, 302, 303, 308, 311, 317, 319, 321, 322, 330, 334, 338, 344, 345, 346, 347, 354, 356, 358, 360, 364, 367, 369, 371, 375, 377, 384, 386, 393, 394, 396, 400, 402, 403, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 561, 562, 563, 564, 565, 566], "compiled_partition_handl": 3, "dnnl_graph_compiled_partition_t": [3, 278, 326, 335], "logical_tensor": [3, 6, 7, 8, 37, 160, 237, 238, 246, 252, 273, 275, 278, 332, 338, 343, 390, 391, 392, 393, 394, 395], "query_logical_tensor": [3, 37, 237, 238, 246, 252, 273, 275], "size_t": [3, 5, 6, 7, 9, 157, 158, 228, 229, 231, 232, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 263, 273, 274, 275, 278, 294, 302, 303, 308, 322, 325, 326, 328, 329, 330, 332, 333, 334, 335, 337, 343, 362, 363, 365, 366, 371, 372, 375, 377, 378, 379, 380, 382, 389, 432, 472, 475, 476, 516, 518, 561], "tid": [3, 5, 278, 326, 332], "const": [3, 4, 5, 6, 7, 8, 9, 15, 16, 33, 36, 138, 140, 144, 152, 157, 158, 159, 207, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 287, 289, 290, 292, 302, 303, 304, 308, 312, 313, 314, 317, 318, 319, 320, 321, 322, 325, 326, 329, 330, 332, 333, 334, 335, 337, 338, 342, 343, 344, 345, 346, 347, 348, 354, 356, 358, 360, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 379, 380, 382, 383, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 573], "std": [3, 4, 5, 6, 7, 9, 15, 16, 18, 36, 140, 152, 157, 158, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 309, 314, 319, 342, 344, 345, 346, 347, 354, 356, 358, 360, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 377, 378, 379, 380, 383, 384, 386, 388, 389, 390, 391, 393, 394, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 561, 563, 564, 565, 566], "vector": [3, 4, 5, 6, 7, 16, 29, 30, 31, 32, 36, 47, 48, 49, 67, 68, 140, 144, 156, 157, 158, 159, 168, 171, 206, 207, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 284, 303, 308, 309, 313, 318, 319, 342, 344, 345, 346, 347, 354, 356, 358, 360, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 377, 378, 379, 380, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 561, 563, 564, 565, 566], "pair": [3, 27, 49, 157, 158, 235, 303, 308, 319, 326, 346, 347, 371, 475, 530, 538, 561], "get_inplace_port": 3, "void": [3, 4, 6, 8, 9, 15, 16, 18, 19, 33, 36, 138, 152, 157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 302, 303, 306, 308, 309, 314, 319, 320, 321, 322, 325, 327, 328, 333, 337, 338, 342, 343, 346, 347, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 573], "execut": [3, 10, 12, 13, 15, 16, 17, 18, 19, 24, 30, 33, 36, 37, 38, 44, 45, 46, 49, 51, 138, 154, 156, 157, 158, 159, 160, 189, 202, 203, 206, 207, 208, 209, 214, 215, 217, 218, 219, 220, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 294, 302, 303, 308, 309, 314, 317, 319, 320, 322, 325, 326, 332, 333, 335, 337, 338, 344, 345, 346, 347, 348, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 384, 385, 386, 387, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 472, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 516, 519, 521, 524, 525, 527, 530, 532, 536, 538, 540, 542, 545, 547, 549, 551, 553, 554, 555, 557, 561, 562, 563, 565], "stream": [3, 18, 24, 30, 32, 33, 36, 37, 38, 44, 45, 138, 155, 157, 158, 160, 168, 171, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 288, 302, 303, 308, 309, 319, 320, 326, 333, 337, 342, 344, 345, 346, 347, 348, 354, 356, 358, 360, 362, 363, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 384, 386, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 516, 519, 521, 525, 527, 530, 536, 538, 540, 542, 545, 547, 549, 551, 553, 555, 557, 563, 565], "astream": [3, 278, 320, 344, 345, 346, 347, 348, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 519, 521, 525, 527, 530, 536, 538, 540, 542, 545, 547, 549, 551, 555, 563, 565], "tensor": [3, 5, 6, 7, 10, 15, 16, 18, 19, 20, 22, 26, 29, 34, 36, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 56, 58, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 127, 129, 130, 131, 133, 134, 136, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 167, 175, 176, 179, 181, 182, 190, 192, 193, 194, 196, 200, 216, 224, 225, 226, 227, 230, 233, 234, 235, 237, 238, 239, 240, 242, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 282, 284, 286, 289, 290, 291, 292, 299, 301, 302, 304, 308, 310, 312, 315, 318, 321, 322, 324, 326, 330, 333, 334, 335, 337, 343, 344, 345, 354, 356, 358, 360, 362, 363, 364, 367, 369, 371, 377, 380, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 429, 430, 431, 434, 451, 453, 454, 456, 458, 460, 462, 464, 466, 475, 476, 516, 518, 520, 522, 524, 532, 560, 561], "input": [3, 4, 5, 6, 7, 13, 16, 17, 18, 20, 22, 24, 26, 28, 29, 32, 34, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 166, 167, 176, 193, 195, 196, 206, 207, 230, 231, 232, 234, 235, 237, 238, 241, 243, 244, 246, 249, 251, 252, 255, 256, 263, 264, 268, 269, 273, 275, 277, 278, 284, 293, 302, 308, 313, 322, 326, 330, 332, 333, 334, 335, 337, 338, 344, 345, 362, 363, 364, 365, 366, 369, 371, 375, 378, 379, 380, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 398, 400, 413, 414, 415, 423, 425, 436, 443, 445, 474, 475, 476, 482, 484, 498, 500, 502, 504, 510, 512, 532, 562, 564, 566], "output": [3, 4, 5, 6, 7, 10, 12, 13, 15, 20, 22, 24, 26, 29, 32, 34, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 176, 193, 195, 196, 206, 207, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 244, 246, 248, 249, 251, 252, 255, 256, 258, 267, 268, 269, 273, 274, 275, 277, 278, 284, 285, 286, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 330, 332, 333, 334, 335, 337, 338, 344, 345, 346, 347, 348, 362, 363, 364, 365, 366, 369, 371, 372, 373, 374, 375, 378, 379, 380, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 398, 400, 404, 413, 414, 421, 422, 423, 425, 432, 436, 443, 445, 474, 475, 476, 482, 484, 498, 500, 502, 504, 510, 512, 524, 531, 532, 561, 562, 564, 566], "empti": [3, 4, 5, 8, 10, 15, 18, 24, 45, 105, 109, 110, 111, 112, 113, 114, 115, 160, 161, 172, 175, 191, 192, 194, 216, 284, 303, 308, 322, 326, 330, 333, 337, 346, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 561, 562, 563, 564, 565, 566], "queri": [3, 15, 16, 18, 19, 27, 29, 30, 31, 33, 36, 37, 42, 44, 45, 47, 52, 138, 140, 148, 156, 157, 158, 159, 161, 189, 194, 202, 203, 207, 214, 215, 216, 217, 218, 231, 232, 235, 236, 237, 238, 246, 252, 273, 275, 284, 294, 302, 303, 306, 308, 309, 319, 322, 326, 327, 328, 342, 346, 347, 365, 366, 371, 372, 388, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 475, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 518, 520, 522, 526, 528, 530, 532, 534, 535, 537, 538, 539, 541, 543, 544, 546, 548, 550, 552, 556, 561, 564, 566], "logic": [3, 5, 6, 7, 8, 19, 20, 26, 29, 34, 36, 41, 42, 43, 45, 50, 52, 76, 137, 139, 141, 142, 146, 149, 150, 151, 156, 159, 176, 179, 181, 190, 193, 206, 207, 237, 238, 246, 251, 252, 273, 275, 278, 282, 284, 299, 302, 324, 326, 330, 334, 335, 338, 388, 390, 391, 392, 393, 394, 395, 476, 518, 532], "id": [3, 5, 6, 7, 13, 23, 28, 37, 140, 206, 207, 237, 238, 246, 252, 253, 254, 273, 274, 275, 278, 303, 326, 332, 334, 335, 346, 389, 396, 432, 475, 476, 535], "If": [3, 5, 10, 13, 15, 18, 20, 23, 27, 28, 38, 40, 43, 45, 50, 58, 61, 65, 68, 69, 72, 73, 75, 76, 78, 107, 109, 110, 111, 112, 113, 114, 115, 117, 120, 122, 128, 135, 139, 148, 149, 157, 158, 159, 160, 195, 196, 207, 235, 237, 238, 252, 273, 284, 299, 302, 303, 306, 308, 314, 321, 322, 326, 327, 328, 332, 346, 347, 363, 371, 393, 394, 414, 494, 496, 518, 524, 539, 557, 560, 561], "doesn": [3, 5, 8, 30, 53, 138, 146, 157, 158, 176, 187, 188, 235, 302, 303, 313, 319, 326, 332, 338, 346, 347, 371, 388, 390, 391, 393, 394, 398, 436, 476, 510, 512, 516], "t": [3, 5, 6, 7, 8, 27, 28, 30, 33, 42, 44, 46, 50, 53, 90, 91, 138, 144, 146, 148, 157, 158, 160, 161, 166, 167, 176, 187, 188, 224, 228, 231, 232, 235, 236, 241, 243, 244, 245, 257, 258, 260, 269, 276, 278, 284, 287, 302, 303, 313, 319, 320, 323, 326, 332, 338, 342, 346, 347, 348, 354, 362, 365, 366, 371, 372, 375, 380, 388, 390, 391, 393, 394, 398, 402, 404, 409, 425, 432, 434, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "belong": [3, 144, 284, 326, 346, 347, 530, 538, 557], "ani": [3, 7, 10, 11, 13, 14, 15, 16, 19, 20, 22, 24, 26, 29, 30, 31, 34, 36, 37, 40, 44, 45, 47, 48, 49, 52, 53, 54, 55, 64, 65, 79, 80, 81, 82, 86, 87, 88, 89, 93, 101, 102, 108, 116, 118, 119, 121, 127, 129, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 160, 161, 164, 173, 177, 179, 181, 187, 188, 192, 193, 194, 216, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 302, 308, 314, 322, 326, 332, 335, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 384, 386, 388, 396, 398, 399, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 437, 443, 445, 456, 458, 460, 462, 464, 466, 472, 476, 482, 484, 485, 488, 490, 492, 498, 500, 502, 504, 510, 512, 516, 518, 530, 532, 537, 543, 554, 564, 566], "except": [3, 4, 5, 10, 11, 19, 22, 24, 25, 26, 36, 66, 88, 140, 148, 157, 158, 159, 161, 164, 168, 171, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 294, 314, 347, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 388, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 473, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 530, 537, 539, 541, 543, 546, 548, 550, 552, 554, 556, 561, 562, 564, 566, 568], "rais": [3, 5], "api": [3, 4, 5, 7, 10, 12, 14, 15, 18, 19, 20, 22, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 47, 50, 51, 52, 53, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 195, 196, 206, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 251, 252, 253, 269, 273, 274, 275, 278, 283, 284, 287, 294, 295, 302, 308, 313, 314, 326, 328, 329, 330, 332, 335, 340, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 439, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 473, 476, 478, 480, 482, 484, 485, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 537, 539, 541, 543, 544, 546, 548, 550, 552, 554, 556, 564, 566], "The": [3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 176, 183, 184, 187, 188, 189, 193, 196, 207, 214, 215, 217, 218, 227, 234, 235, 245, 249, 251, 255, 263, 269, 277, 284, 285, 287, 290, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 308, 309, 313, 314, 315, 319, 320, 322, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 340, 344, 345, 346, 347, 348, 350, 360, 362, 363, 364, 365, 366, 369, 371, 372, 375, 378, 379, 380, 383, 384, 388, 389, 390, 391, 393, 394, 398, 413, 414, 425, 432, 436, 443, 445, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 473, 475, 476, 482, 484, 485, 490, 492, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 530, 532, 534, 535, 538, 539, 543, 546, 548, 554, 556, 557, 561, 564, 566], "uniqu": [3, 5, 6, 7, 16, 37, 109, 110, 111, 112, 113, 114, 115, 244, 326, 332, 334, 476, 524], "requir": [3, 5, 10, 15, 16, 18, 20, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 146, 148, 151, 152, 154, 155, 156, 157, 158, 159, 160, 183, 189, 195, 196, 206, 207, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 285, 293, 302, 303, 308, 309, 319, 322, 326, 332, 346, 347, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 383, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 443, 445, 447, 449, 478, 480, 482, 484, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 518, 520, 522, 535, 561, 564, 566], "return": [3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 18, 24, 25, 30, 31, 37, 41, 45, 46, 49, 52, 120, 131, 132, 138, 140, 141, 152, 157, 158, 159, 187, 188, 189, 207, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 344, 345, 346, 347, 348, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 383, 384, 386, 388, 389, 390, 391, 393, 394, 396, 398, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 473, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 535, 537, 538, 539, 541, 543, 544, 546, 548, 550, 552, 554, 556, 557, 561, 564, 566], "hint": [3, 10, 24, 45, 169, 170, 231, 232, 236, 269, 314, 326, 365, 366, 372, 425, 438, 443, 447, 456, 458, 462, 464, 468, 475, 478, 482, 488, 490, 494, 498, 502, 506, 510, 520, 526, 541, 546, 550, 564], "place": [3, 15, 20, 22, 23, 25, 34, 43, 45, 50, 131, 132, 139, 150, 151, 158, 200, 201, 225, 226, 227, 250, 251, 254, 257, 263, 264, 265, 271, 284, 285, 289, 293, 296, 299, 314, 318, 326, 356, 357, 358, 359, 360, 363, 378, 379, 386, 388, 396, 397, 402, 403, 415, 417, 428, 429, 449, 454, 475, 480, 524, 555], "It": [3, 4, 13, 15, 16, 18, 19, 22, 24, 27, 30, 32, 36, 37, 38, 41, 42, 44, 45, 46, 49, 51, 53, 73, 75, 76, 88, 90, 92, 104, 107, 118, 136, 137, 138, 139, 143, 157, 158, 159, 160, 182, 187, 188, 190, 194, 216, 235, 252, 285, 296, 299, 302, 303, 308, 309, 314, 326, 330, 346, 371, 375, 388, 389, 390, 391, 393, 394, 413, 414, 432, 443, 447, 456, 458, 462, 464, 468, 475, 476, 478, 482, 488, 490, 494, 498, 502, 506, 510, 516, 518, 520, 526, 530, 539, 541, 546, 550, 564], "indic": [3, 4, 5, 15, 19, 28, 29, 32, 36, 37, 41, 46, 52, 67, 68, 83, 90, 91, 109, 110, 111, 112, 113, 114, 115, 141, 142, 148, 149, 159, 175, 176, 192, 206, 207, 238, 244, 255, 264, 277, 284, 290, 292, 302, 304, 313, 322, 326, 335, 380, 388, 390, 391, 393, 394, 398, 415, 436, 443, 445, 456, 458, 460, 462, 464, 466, 475, 482, 484, 498, 500, 502, 504, 510, 512, 516, 518, 520, 522, 524, 532, 561, 564, 566], "can": [3, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 56, 70, 74, 83, 90, 92, 94, 96, 97, 100, 103, 120, 131, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 158, 159, 160, 164, 176, 183, 184, 193, 194, 214, 215, 216, 219, 235, 245, 251, 255, 263, 269, 277, 284, 285, 286, 289, 290, 291, 292, 293, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 322, 326, 327, 328, 332, 335, 346, 371, 375, 376, 380, 383, 388, 389, 390, 391, 393, 394, 398, 399, 413, 414, 425, 432, 436, 437, 449, 475, 480, 485, 510, 512, 516, 518, 523, 524, 530, 532, 535, 561, 566], "share": [3, 18, 24, 33, 37, 40, 46, 53, 138, 142, 144, 148, 159, 197, 198, 221, 222, 231, 232, 236, 326, 365, 366, 372, 475], "same": [3, 5, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 28, 29, 32, 33, 34, 36, 37, 40, 41, 42, 43, 45, 46, 50, 52, 53, 60, 62, 66, 67, 70, 83, 90, 91, 131, 136, 139, 140, 142, 145, 146, 147, 148, 149, 151, 154, 157, 158, 159, 164, 165, 176, 193, 195, 196, 207, 214, 215, 231, 232, 233, 235, 236, 244, 251, 262, 269, 284, 285, 286, 287, 290, 292, 293, 296, 299, 302, 303, 304, 306, 308, 319, 320, 326, 327, 332, 334, 346, 347, 348, 363, 364, 365, 366, 367, 371, 372, 378, 379, 383, 388, 413, 414, 425, 449, 456, 458, 460, 462, 464, 466, 475, 476, 480, 485, 518, 520, 522, 524, 530, 535, 538], "buffer": [3, 8, 10, 13, 17, 18, 19, 25, 36, 37, 45, 53, 156, 157, 158, 197, 198, 206, 207, 214, 215, 221, 222, 224, 225, 226, 227, 229, 230, 233, 234, 235, 237, 238, 242, 243, 244, 246, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 302, 303, 308, 319, 322, 326, 332, 338, 346, 347, 354, 356, 358, 360, 363, 367, 369, 371, 377, 379, 384, 386, 388, 389, 396, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430, 432, 434, 475, 516, 518, 561, 562], "In": [3, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 42, 43, 44, 45, 46, 47, 49, 50, 53, 67, 68, 96, 138, 139, 140, 144, 146, 147, 148, 150, 151, 155, 156, 157, 159, 160, 176, 193, 204, 205, 206, 219, 224, 227, 233, 234, 237, 238, 241, 246, 249, 250, 252, 256, 258, 260, 265, 273, 275, 276, 284, 285, 296, 299, 302, 303, 309, 319, 326, 338, 346, 347, 354, 356, 357, 358, 359, 360, 363, 364, 367, 369, 375, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 403, 404, 409, 413, 414, 417, 428, 429, 432, 434, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 475, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 534, 537, 539, 541, 543, 546, 548, 550, 552, 556, 561, 562, 564, 566], "help": [3, 24, 37, 79, 137, 157, 158, 235, 237, 238, 246, 252, 273, 275, 326, 371, 475], "reduc": [3, 15, 16, 18, 19, 24, 27, 29, 44, 45, 46, 53, 109, 110, 111, 112, 113, 114, 115, 140, 143, 145, 154, 196, 214, 215, 241, 249, 326, 375, 376, 384, 475, 524, 575], "footprint": [3, 18, 151, 154, 214, 215, 326, 475], "improv": [3, 13, 15, 20, 25, 27, 32, 34, 38, 43, 45, 46, 50, 60, 83, 90, 91, 159, 241, 284, 326, 340, 375, 475, 524], "local": [3, 18, 139, 156, 166, 167, 206, 207, 228, 229, 231, 232, 236, 259, 300, 326, 353, 362, 365, 366, 372, 408, 413, 475, 505, 506, 507, 508, 535, 574], "But": [3, 24, 36, 38, 49, 241, 326, 332, 375, 390, 391, 392, 393, 394, 395, 475], "sinc": [3, 15, 16, 28, 36, 41, 49, 142, 157, 158, 159, 160, 161, 176, 196, 235, 241, 250, 251, 255, 265, 284, 309, 326, 371, 375, 386, 388, 398, 413, 414, 417, 436, 475], "mai": [3, 7, 13, 14, 15, 19, 22, 23, 24, 25, 29, 31, 32, 33, 34, 37, 39, 40, 41, 42, 45, 49, 51, 131, 132, 138, 139, 140, 144, 145, 146, 154, 157, 158, 160, 161, 182, 183, 184, 190, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 287, 291, 302, 308, 313, 314, 320, 326, 332, 335, 348, 354, 356, 358, 360, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 388, 396, 398, 400, 402, 404, 406, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 443, 445, 456, 458, 460, 462, 464, 466, 475, 482, 484, 488, 490, 492, 498, 500, 502, 504, 510, 512, 516, 518, 524, 531, 537, 543, 564, 566, 567], "have": [3, 4, 7, 10, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 32, 34, 36, 37, 38, 42, 44, 45, 47, 49, 50, 53, 67, 131, 132, 136, 139, 140, 142, 143, 145, 146, 151, 154, 156, 159, 161, 269, 284, 286, 290, 291, 292, 302, 303, 304, 308, 313, 314, 318, 319, 326, 330, 332, 335, 346, 347, 375, 383, 388, 398, 413, 425, 432, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 475, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 535, 537, 538, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "global": [3, 18, 32, 143, 195, 196, 241, 245, 342, 343, 353, 375, 380, 475, 561], "view": [3, 48, 131, 132, 148, 243, 244, 269, 326, 378, 379, 425, 475], "user": [3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 19, 20, 24, 25, 26, 27, 29, 33, 36, 37, 38, 42, 43, 44, 45, 47, 49, 50, 53, 90, 138, 140, 141, 143, 144, 146, 147, 151, 152, 156, 157, 158, 159, 187, 188, 195, 196, 207, 214, 215, 224, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 246, 249, 251, 252, 256, 258, 260, 263, 265, 269, 273, 275, 276, 299, 302, 303, 308, 319, 326, 330, 332, 335, 338, 346, 347, 354, 362, 363, 364, 365, 366, 369, 371, 372, 378, 379, 380, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 400, 404, 409, 413, 414, 417, 425, 432, 434, 475, 494, 496, 516, 523, 530, 557], "": [3, 5, 6, 10, 13, 15, 16, 18, 19, 22, 23, 24, 25, 26, 28, 29, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 83, 90, 91, 98, 99, 131, 137, 138, 144, 146, 150, 154, 157, 158, 159, 182, 190, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 284, 302, 303, 308, 309, 326, 328, 332, 334, 346, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 375, 377, 378, 379, 380, 382, 383, 384, 386, 388, 389, 390, 391, 393, 394, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 475, 516, 524, 530], "applic": [3, 10, 11, 12, 14, 15, 16, 18, 19, 24, 25, 27, 29, 31, 32, 36, 37, 38, 39, 40, 44, 45, 49, 51, 139, 140, 143, 155, 157, 158, 159, 160, 161, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 302, 314, 326, 340, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 383, 384, 386, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 475, 518], "possibl": [3, 16, 19, 20, 22, 24, 26, 30, 31, 33, 34, 43, 44, 45, 46, 49, 50, 53, 138, 139, 145, 148, 150, 151, 156, 159, 269, 284, 285, 290, 292, 293, 295, 296, 297, 299, 300, 302, 304, 305, 308, 310, 312, 313, 314, 315, 316, 326, 388, 413, 425, 445, 447, 449, 456, 458, 460, 464, 466, 470, 475, 478, 480, 484, 492, 494, 496, 500, 504, 508, 512, 518, 522, 528, 537, 543, 548, 552, 564, 566], "i": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 85, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 123, 124, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 166, 167, 172, 175, 176, 179, 180, 181, 183, 184, 187, 188, 189, 192, 193, 194, 195, 196, 201, 212, 213, 214, 215, 216, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 285, 286, 287, 290, 292, 293, 296, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 340, 344, 345, 346, 347, 348, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 475, 476, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 535, 537, 539, 541, 543, 546, 548, 550, 552, 554, 556, 557, 561, 562, 564, 566], "other": [3, 5, 10, 15, 18, 19, 20, 22, 24, 26, 28, 29, 30, 31, 32, 33, 36, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 138, 139, 140, 141, 144, 146, 148, 149, 150, 151, 157, 158, 159, 160, 161, 176, 187, 188, 193, 214, 215, 230, 231, 235, 242, 243, 244, 269, 302, 308, 314, 326, 330, 332, 334, 340, 363, 365, 371, 375, 377, 379, 380, 388, 406, 413, 414, 425, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "thi": [3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 62, 63, 67, 73, 83, 90, 91, 107, 131, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 172, 175, 176, 196, 201, 204, 205, 214, 215, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 285, 287, 289, 296, 299, 302, 303, 308, 311, 313, 314, 319, 320, 322, 326, 328, 329, 332, 333, 335, 337, 338, 346, 347, 348, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 473, 475, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 523, 524, 526, 528, 534, 537, 539, 541, 543, 546, 548, 550, 552, 556, 557, 561, 562, 564, 566], "case": [3, 5, 7, 8, 10, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 28, 29, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 57, 77, 85, 92, 105, 106, 108, 116, 131, 138, 139, 140, 141, 142, 145, 146, 147, 149, 150, 151, 154, 159, 160, 176, 224, 231, 232, 234, 241, 245, 249, 251, 256, 258, 260, 265, 276, 284, 285, 290, 292, 296, 299, 302, 303, 304, 308, 314, 319, 326, 332, 335, 338, 346, 347, 354, 363, 365, 366, 369, 375, 380, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 400, 404, 409, 413, 417, 432, 434, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 473, 475, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 534, 537, 539, 541, 543, 546, 548, 550, 552, 556, 557, 561, 562, 564, 566], "should": [3, 5, 7, 12, 15, 16, 18, 19, 20, 22, 24, 26, 27, 29, 34, 36, 37, 41, 43, 44, 45, 47, 49, 50, 52, 53, 56, 58, 59, 61, 62, 66, 68, 69, 72, 74, 75, 76, 83, 88, 89, 97, 100, 103, 109, 110, 111, 112, 113, 114, 115, 120, 133, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 214, 215, 227, 228, 235, 236, 243, 245, 251, 255, 269, 284, 287, 294, 302, 309, 313, 314, 320, 322, 325, 326, 330, 332, 333, 335, 337, 340, 344, 345, 348, 360, 362, 363, 364, 371, 372, 380, 383, 388, 389, 390, 391, 392, 393, 394, 395, 398, 413, 425, 432, 443, 445, 454, 475, 482, 484, 485, 498, 500, 502, 504, 510, 512, 516, 523, 524, 532, 534, 539, 556, 564, 566], "take": [3, 13, 14, 15, 16, 19, 24, 27, 29, 30, 31, 32, 34, 36, 40, 41, 42, 44, 45, 48, 71, 72, 73, 75, 76, 96, 107, 109, 110, 111, 112, 113, 114, 115, 120, 140, 142, 143, 144, 159, 160, 251, 285, 296, 299, 308, 314, 326, 360, 362, 363, 388, 390, 392, 393, 394, 395, 475], "pass": [3, 4, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 29, 33, 36, 37, 38, 40, 41, 43, 44, 45, 50, 51, 52, 53, 83, 90, 131, 138, 141, 142, 144, 146, 147, 148, 157, 158, 160, 161, 176, 195, 196, 228, 229, 235, 236, 241, 245, 247, 251, 269, 274, 284, 290, 292, 297, 301, 302, 303, 308, 314, 322, 326, 330, 332, 346, 347, 362, 363, 364, 371, 372, 375, 380, 382, 383, 388, 389, 413, 425, 432, 458, 460, 464, 466, 472, 474, 475, 485, 516, 524, 530, 532, 538, 554, 557, 561], "differ": [3, 5, 13, 15, 16, 18, 19, 22, 24, 25, 27, 32, 33, 36, 37, 39, 42, 46, 49, 52, 53, 56, 70, 74, 96, 97, 100, 103, 118, 130, 131, 132, 133, 140, 144, 145, 146, 148, 154, 157, 158, 159, 166, 167, 182, 183, 184, 190, 214, 215, 224, 231, 232, 234, 235, 236, 249, 256, 258, 260, 265, 269, 276, 285, 294, 296, 299, 302, 322, 326, 332, 354, 360, 363, 365, 366, 369, 371, 372, 375, 380, 384, 388, 390, 391, 393, 394, 400, 404, 409, 413, 414, 417, 425, 434, 454, 475, 485, 518, 534, 539, 556, 561], "avoid": [3, 16, 17, 22, 24, 26, 31, 32, 36, 44, 45, 49, 59, 60, 61, 143, 145, 157, 158, 227, 231, 232, 235, 236, 326, 360, 365, 366, 371, 372, 413, 475], "overwrit": [3, 22, 27, 29, 47, 53, 145, 147, 151, 326, 475], "which": [3, 6, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 57, 66, 67, 73, 75, 76, 83, 90, 91, 92, 94, 95, 107, 109, 110, 111, 112, 113, 114, 115, 123, 124, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 154, 156, 157, 158, 159, 160, 176, 179, 181, 193, 235, 237, 238, 243, 244, 245, 246, 248, 249, 251, 252, 255, 262, 263, 269, 273, 275, 284, 285, 287, 290, 292, 293, 302, 304, 308, 311, 314, 315, 316, 317, 320, 325, 326, 328, 332, 333, 334, 338, 348, 371, 378, 379, 380, 383, 384, 388, 389, 390, 391, 393, 394, 398, 413, 414, 425, 432, 443, 447, 454, 456, 458, 462, 464, 468, 475, 476, 478, 482, 485, 488, 490, 494, 498, 502, 506, 510, 516, 520, 526, 532, 535, 539, 541, 546, 548, 550, 552, 556, 564], "probabl": [3, 13, 15, 42, 53, 284, 308, 326, 475, 532], "caus": [3, 11, 44, 45, 326, 472, 475, 485, 516, 530, 554], "unexpect": [3, 25, 239, 240, 248, 274, 287, 320, 326, 348, 373, 374, 383, 432, 475], "incorrect": [3, 18, 24, 160, 161, 189, 217, 218, 247, 263, 326, 382, 388, 475], "result": [3, 10, 12, 13, 15, 16, 18, 20, 22, 24, 25, 28, 29, 31, 32, 34, 37, 43, 45, 46, 47, 49, 50, 52, 53, 109, 110, 111, 112, 113, 114, 115, 130, 140, 141, 142, 144, 145, 147, 150, 154, 157, 158, 159, 161, 196, 207, 208, 209, 230, 235, 237, 238, 241, 243, 244, 245, 248, 251, 252, 253, 273, 274, 278, 284, 287, 302, 308, 320, 322, 326, 348, 363, 364, 371, 375, 376, 380, 414, 475, 518, 524, 531, 532, 535, 561], "list": [3, 6, 7, 24, 34, 36, 44, 45, 51, 57, 58, 67, 68, 69, 70, 71, 72, 73, 88, 89, 98, 99, 107, 109, 110, 111, 112, 113, 114, 115, 131, 132, 139, 144, 148, 160, 161, 168, 171, 278, 314, 326, 333, 335, 337, 353, 388, 390, 391, 393, 394], "run": [3, 10, 12, 18, 19, 20, 23, 24, 32, 36, 43, 45, 46, 48, 49, 53, 59, 139, 157, 158, 161, 214, 215, 230, 235, 237, 238, 243, 244, 245, 246, 252, 255, 263, 273, 275, 277, 278, 298, 303, 319, 320, 331, 333, 337, 344, 345, 364, 371, 375, 378, 379, 380, 381, 383, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 413, 414, 432, 436], "over": [3, 13, 18, 24, 26, 30, 31, 38, 45, 46, 48, 50, 58, 66, 68, 69, 72, 90, 91, 109, 110, 111, 112, 113, 114, 115, 143, 144, 148, 150, 157, 158, 159, 160, 235, 286, 289, 314, 316, 344, 345, 371, 390, 393, 394, 454, 534, 550, 552], "graph_handl": 4, "engin": [4, 7, 8, 10, 15, 16, 24, 27, 29, 32, 33, 35, 36, 37, 44, 45, 47, 53, 118, 138, 144, 148, 157, 158, 160, 174, 189, 206, 207, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 284, 285, 286, 288, 289, 290, 292, 293, 296, 297, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 324, 326, 328, 330, 333, 335, 337, 338, 342, 343, 344, 345, 346, 347, 348, 353, 354, 356, 358, 360, 362, 363, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 384, 386, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 439, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 471, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 520, 522, 524, 526, 528, 530, 532, 534, 535, 537, 538, 539, 541, 543, 544, 546, 548, 550, 552, 554, 556, 564, 566], "kind": [4, 6, 7, 10, 15, 17, 20, 24, 27, 29, 33, 34, 36, 37, 43, 46, 47, 50, 138, 141, 142, 147, 148, 149, 150, 157, 158, 160, 161, 166, 167, 174, 175, 186, 192, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 216, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 285, 286, 290, 292, 293, 294, 296, 297, 299, 300, 302, 303, 304, 305, 308, 309, 310, 312, 313, 315, 316, 319, 328, 329, 330, 334, 335, 342, 343, 346, 347, 354, 356, 358, 360, 362, 363, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 563, 564, 565, 566], "engine_kind": [4, 27, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 330, 354, 356, 358, 360, 362, 363, 365, 366, 367, 369, 377, 384, 386, 388, 396, 398, 400, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436], "fpmath_mod": [4, 14, 157, 160, 277, 295, 314, 342, 436, 532], "mode": [4, 10, 12, 18, 20, 22, 24, 29, 34, 36, 43, 46, 50, 52, 59, 73, 75, 76, 88, 89, 107, 140, 141, 142, 143, 144, 147, 148, 150, 161, 164, 165, 177, 178, 183, 184, 204, 205, 212, 213, 214, 215, 224, 225, 227, 258, 259, 260, 274, 276, 277, 278, 282, 284, 288, 293, 301, 308, 314, 330, 342, 353, 354, 355, 356, 357, 360, 369, 370, 380, 384, 385, 386, 387, 396, 397, 402, 403, 404, 405, 407, 408, 409, 410, 413, 415, 416, 417, 418, 423, 424, 428, 429, 432, 434, 435, 436, 438, 485, 532], "statu": [4, 7, 24, 25, 42, 157, 158, 218, 230, 231, 235, 242, 244, 251, 253, 274, 278, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 328, 330, 332, 333, 334, 335, 337, 338, 342, 343, 346, 348, 365, 371, 377, 379, 388, 432, 473], "add_op": [4, 37, 237, 238, 252, 273, 330, 390, 391, 393, 394], "op": [4, 7, 10, 13, 16, 32, 35, 36, 40, 42, 44, 45, 46, 58, 63, 83, 89, 90, 91, 137, 157, 158, 161, 184, 187, 188, 189, 195, 196, 218, 225, 226, 227, 230, 234, 235, 237, 238, 246, 249, 252, 255, 256, 261, 263, 267, 273, 275, 277, 278, 282, 284, 287, 320, 322, 324, 330, 335, 343, 348, 353, 356, 357, 358, 359, 364, 369, 370, 371, 384, 385, 390, 391, 393, 394, 398, 400, 401, 411, 412, 414, 421, 436, 524, 532, 561], "bool": [4, 5, 6, 7, 9, 32, 57, 58, 65, 78, 83, 90, 91, 96, 105, 109, 110, 111, 112, 113, 114, 115, 117, 122, 128, 131, 135, 152, 157, 158, 159, 235, 239, 240, 241, 245, 246, 262, 269, 275, 278, 302, 342, 371, 373, 374, 375, 380, 392, 395, 413, 425, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566], "allow_except": 4, "true": [4, 5, 6, 7, 9, 12, 14, 42, 45, 51, 53, 57, 58, 65, 78, 83, 90, 91, 96, 105, 109, 110, 111, 112, 113, 114, 115, 117, 122, 128, 131, 135, 139, 157, 158, 159, 235, 237, 238, 252, 269, 273, 277, 332, 371, 425, 436, 485, 518, 534, 539, 557, 561], "final": [4, 15, 16, 18, 24, 34, 37, 46, 49, 156, 157, 158, 159, 166, 176, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 302, 322, 330, 332, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 375, 377, 383, 384, 386, 388, 389, 390, 391, 393, 394, 396, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 426, 428, 430, 432, 434, 561], "is_fin": 4, "get_partit": [4, 7, 37, 237, 238, 252, 273, 335, 390, 391, 393, 394], "polici": [4, 7, 18, 42, 188, 214, 215, 278, 330, 393, 394], "fusion": [4, 15, 19, 20, 36, 38, 53, 187, 188, 263, 279, 284, 398, 399, 436, 437], "creat": [4, 7, 8, 10, 15, 16, 18, 20, 22, 23, 24, 26, 29, 33, 34, 36, 37, 43, 44, 45, 47, 50, 52, 53, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 194, 206, 207, 214, 215, 216, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 284, 285, 286, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 330, 332, 333, 335, 337, 338, 344, 345, 346, 347, 348, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 516, 518, 524, 532, 539, 554], "new": [4, 7, 19, 27, 36, 37, 46, 152, 157, 158, 166, 167, 176, 201, 235, 302, 306, 326, 327, 328, 330, 332, 335, 338, 371, 390, 393, 394, 485, 518], "float": [4, 6, 10, 11, 15, 16, 17, 25, 29, 32, 36, 45, 46, 53, 60, 61, 73, 107, 146, 147, 154, 157, 158, 161, 164, 165, 172, 177, 178, 180, 191, 207, 212, 213, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 282, 284, 285, 287, 288, 293, 296, 299, 300, 302, 310, 312, 313, 314, 318, 320, 330, 334, 342, 348, 353, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 386, 388, 389, 391, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 524, 526, 528, 532, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "point": [4, 10, 11, 15, 16, 17, 22, 24, 25, 29, 32, 36, 41, 45, 46, 53, 73, 75, 107, 144, 146, 147, 154, 156, 157, 161, 164, 165, 172, 177, 178, 180, 191, 207, 212, 213, 241, 255, 277, 282, 284, 288, 302, 308, 313, 314, 330, 334, 353, 364, 375, 376, 378, 379, 380, 398, 399, 414, 436, 437, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 524, 532, 534, 564, 566], "math": [4, 10, 32, 161, 177, 178, 232, 243, 244, 269, 282, 284, 288, 314, 330, 353, 366, 425], "all": [4, 5, 7, 10, 14, 15, 16, 18, 22, 23, 24, 26, 29, 32, 33, 34, 36, 38, 40, 41, 42, 44, 46, 49, 53, 63, 66, 68, 70, 71, 72, 96, 109, 110, 111, 112, 113, 114, 115, 120, 131, 139, 142, 143, 144, 147, 148, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 183, 184, 204, 205, 207, 214, 215, 235, 237, 238, 243, 244, 245, 246, 251, 252, 255, 263, 273, 275, 277, 284, 285, 295, 296, 299, 302, 303, 309, 313, 314, 317, 322, 328, 330, 332, 333, 346, 347, 371, 375, 378, 379, 380, 388, 389, 390, 391, 392, 393, 394, 395, 398, 414, 432, 436, 443, 445, 447, 456, 458, 460, 462, 464, 466, 478, 482, 484, 488, 490, 492, 494, 498, 500, 502, 504, 510, 512, 518, 523, 530, 534, 535, 554, 561, 564, 566], "inherit": [4, 49, 263, 302, 330, 414], "add": [4, 6, 14, 22, 24, 29, 36, 40, 42, 44, 47, 49, 51, 53, 57, 58, 62, 67, 68, 69, 70, 71, 72, 98, 99, 145, 147, 157, 158, 160, 166, 167, 185, 195, 196, 210, 211, 229, 235, 237, 238, 243, 252, 263, 273, 281, 302, 330, 334, 363, 364, 371, 378, 379, 390, 391, 414, 518], "dag": [4, 42, 330], "failur": [4, 160, 161, 183, 302, 330, 390, 393, 394, 473, 518], "oper": [4, 5, 6, 7, 10, 12, 13, 15, 16, 18, 19, 20, 22, 24, 26, 28, 29, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 157, 158, 159, 160, 167, 183, 184, 185, 186, 187, 188, 189, 196, 217, 218, 219, 227, 235, 237, 238, 246, 249, 251, 252, 255, 259, 263, 273, 275, 277, 279, 284, 285, 286, 287, 293, 296, 299, 302, 303, 308, 310, 312, 320, 321, 322, 330, 332, 333, 334, 335, 342, 346, 348, 356, 357, 360, 363, 364, 371, 375, 383, 384, 388, 389, 390, 391, 393, 394, 398, 399, 407, 413, 414, 432, 436, 437, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566, 573], "ha": [4, 5, 13, 15, 17, 18, 19, 20, 21, 24, 25, 28, 32, 36, 37, 38, 41, 46, 49, 53, 83, 90, 91, 92, 139, 140, 142, 143, 144, 154, 157, 158, 160, 161, 176, 193, 196, 234, 235, 244, 245, 249, 284, 302, 303, 306, 308, 314, 319, 327, 330, 332, 346, 347, 363, 369, 371, 375, 378, 380, 383, 384, 388, 389, 413, 414, 432, 476, 518, 534], "alreadi": [4, 36, 45, 144, 157, 306, 327, 330, 388, 413, 534], "been": [4, 15, 24, 154, 284, 302, 303, 308, 319, 330, 346, 347, 414, 516, 534], "ad": [4, 6, 17, 18, 29, 37, 44, 49, 59, 60, 61, 62, 83, 90, 91, 159, 176, 183, 212, 213, 263, 322, 330, 334, 390, 391, 393, 394, 414, 561], "cannot": [4, 10, 15, 33, 36, 37, 45, 49, 53, 118, 140, 141, 146, 148, 155, 159, 160, 189, 194, 214, 215, 216, 218, 241, 302, 314, 330, 375, 472, 485, 516, 518, 530, 539, 554], "schema": [4, 189, 194, 216, 218, 330], "check": [4, 7, 10, 16, 20, 22, 29, 34, 37, 43, 45, 47, 52, 53, 118, 141, 148, 149, 157, 158, 160, 161, 183, 184, 228, 230, 231, 235, 236, 237, 238, 241, 244, 245, 247, 248, 251, 252, 253, 255, 273, 274, 278, 284, 302, 303, 308, 328, 330, 335, 346, 362, 363, 365, 371, 372, 375, 379, 380, 382, 388, 389, 390, 391, 392, 393, 394, 395, 398, 413, 454, 473, 485, 518, 530, 532, 534, 539, 544, 556], "eg": [4, 5, 42, 187, 188, 277, 330, 332, 436], "number": [4, 5, 7, 14, 15, 16, 17, 18, 20, 22, 24, 25, 28, 29, 32, 36, 37, 40, 42, 43, 44, 45, 50, 53, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 75, 76, 83, 98, 99, 107, 137, 139, 142, 143, 145, 148, 156, 159, 160, 161, 176, 206, 207, 231, 232, 233, 236, 239, 240, 243, 244, 258, 269, 272, 284, 286, 287, 289, 290, 291, 292, 294, 302, 303, 304, 306, 308, 309, 314, 318, 319, 320, 322, 326, 327, 330, 332, 333, 334, 335, 337, 347, 348, 362, 363, 364, 365, 366, 367, 372, 373, 374, 375, 404, 425, 430, 456, 458, 460, 462, 464, 466, 472, 476, 516, 518, 520, 522, 524, 532, 535, 546, 548, 550, 552, 557, 561], "data": [4, 5, 8, 11, 14, 15, 16, 17, 18, 19, 24, 25, 28, 36, 37, 38, 40, 41, 44, 45, 49, 144, 154, 156, 161, 172, 176, 180, 189, 191, 193, 196, 202, 203, 204, 205, 206, 207, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 284, 287, 288, 289, 293, 294, 299, 302, 309, 310, 311, 312, 313, 315, 318, 320, 321, 322, 330, 332, 338, 348, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 439, 476, 494, 496, 516, 518, 524, 532, 538, 546, 548, 556, 560, 561, 562, 564, 575], "type": [4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 33, 36, 37, 38, 41, 44, 45, 46, 144, 154, 155, 159, 160, 161, 172, 179, 180, 181, 189, 191, 195, 199, 205, 206, 207, 218, 223, 230, 231, 235, 239, 240, 241, 248, 251, 263, 277, 278, 282, 283, 284, 288, 294, 295, 299, 302, 303, 308, 313, 319, 321, 322, 323, 330, 332, 335, 338, 339, 346, 347, 360, 364, 365, 371, 373, 374, 375, 383, 388, 389, 391, 398, 414, 432, 436, 439, 476, 485, 494, 496, 516, 518, 524, 532, 535, 560, 561, 562], "attribut": [4, 6, 19, 32, 37, 42, 44, 45, 143, 144, 156, 160, 161, 183, 184, 196, 206, 235, 245, 255, 263, 277, 282, 285, 286, 289, 290, 292, 293, 296, 297, 299, 300, 301, 304, 305, 307, 308, 310, 311, 312, 313, 315, 316, 318, 321, 322, 330, 334, 353, 358, 359, 364, 369, 370, 371, 379, 380, 384, 385, 390, 392, 393, 394, 395, 398, 400, 401, 411, 412, 414, 421, 422, 436, 439, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 476, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 524, 526, 528, 531, 532, 535, 537, 538, 539, 541, 543, 546, 548, 550, 552, 556, 559, 560, 561, 564, 566], "etc": [4, 5, 12, 19, 28, 36, 40, 42, 143, 144, 147, 159, 160, 161, 294, 330, 332, 390, 393, 394, 518, 535], "flag": [4, 20, 24, 32, 36, 39, 43, 50, 144, 148, 160, 161, 168, 169, 170, 171, 195, 196, 206, 207, 210, 211, 220, 248, 278, 285, 287, 296, 299, 308, 313, 314, 317, 320, 328, 335, 342, 343, 348, 356, 357, 383, 413, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 530, 535, 537, 539, 541, 543, 546, 548, 550, 552, 554, 556, 557, 561, 562, 564, 566], "whether": [4, 29, 33, 49, 52, 57, 58, 83, 90, 96, 105, 138, 284, 302, 303, 308, 346, 363, 413, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 530, 532, 537, 539, 541, 543, 546, 548, 550, 552, 554, 556, 561, 562, 564, 566], "allow": [4, 10, 11, 14, 16, 17, 19, 24, 26, 29, 30, 31, 32, 36, 37, 40, 45, 46, 47, 51, 56, 74, 97, 100, 103, 120, 133, 142, 151, 154, 156, 158, 165, 172, 175, 177, 178, 201, 236, 263, 284, 287, 302, 305, 310, 312, 320, 348, 372, 414, 432, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 518, 520, 522, 526, 528, 537, 539, 541, 543, 546, 548, 550, 552, 556, 561, 562, 564, 566], "throw": [4, 10, 25, 140, 157, 158, 224, 230, 231, 235, 239, 240, 241, 242, 244, 245, 248, 251, 253, 255, 263, 274, 347, 354, 365, 371, 373, 374, 375, 377, 379, 380, 383, 388, 389, 398, 432, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 473, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 534, 537, 539, 541, 543, 546, 548, 550, 552, 556, 561, 562, 564, 566], "fail": [4, 38, 144, 160, 161, 189, 217, 218, 241, 245, 251, 253, 255, 274, 375, 380, 388, 389, 398, 432, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 473, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 534, 537, 539, 541, 543, 546, 548, 550, 552, 556, 561, 562, 564, 566], "success": [4, 52, 189, 217, 218, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 346, 348, 414, 534], "describ": [4, 5, 11, 14, 15, 16, 17, 19, 24, 28, 32, 37, 40, 45, 46, 49, 88, 89, 139, 146, 148, 155, 156, 159, 175, 176, 192, 241, 269, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 330, 332, 333, 334, 335, 337, 338, 346, 348, 363, 375, 388, 389, 413, 425, 432, 452, 471, 515, 517, 518, 529, 533, 544, 553, 558, 559], "error": [4, 15, 16, 24, 25, 30, 31, 37, 38, 45, 46, 49, 140, 157, 158, 160, 230, 231, 235, 241, 242, 244, 251, 274, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 330, 332, 333, 334, 335, 337, 338, 342, 346, 348, 365, 371, 375, 377, 379, 388, 413, 432, 523, 532], "otherwis": [4, 5, 13, 17, 20, 24, 30, 32, 34, 38, 45, 65, 78, 85, 109, 110, 111, 112, 113, 114, 115, 117, 122, 128, 135, 140, 157, 195, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 330, 332, 333, 334, 335, 337, 338, 346, 348, 468, 485, 518], "mean": [4, 5, 14, 15, 16, 22, 26, 27, 28, 34, 36, 37, 40, 45, 52, 59, 60, 61, 67, 68, 69, 70, 71, 72, 75, 76, 83, 90, 91, 94, 95, 98, 99, 112, 131, 132, 139, 141, 142, 145, 146, 149, 150, 151, 157, 158, 159, 166, 167, 179, 181, 182, 190, 195, 196, 225, 227, 235, 251, 254, 257, 262, 285, 287, 290, 292, 293, 296, 299, 302, 308, 310, 320, 328, 330, 335, 348, 356, 360, 371, 383, 388, 389, 396, 402, 413, 432, 447, 449, 456, 458, 460, 462, 464, 466, 468, 470, 476, 478, 480, 494, 496, 518], "finish": [4, 37, 157, 158, 235, 237, 238, 246, 252, 273, 275, 317, 330, 371, 390, 391, 393, 394, 554, 557], "readi": [4, 37, 45, 322, 330, 388, 390, 393, 394, 413, 561], "similarli": [4, 49, 141, 148, 330, 413], "un": [4, 330], "also": [4, 7, 15, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 32, 36, 37, 38, 40, 44, 46, 51, 53, 92, 139, 143, 144, 146, 152, 156, 157, 158, 159, 160, 176, 206, 224, 235, 245, 258, 260, 269, 276, 284, 285, 286, 289, 290, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 330, 332, 335, 348, 354, 363, 371, 380, 383, 388, 389, 390, 391, 392, 393, 394, 395, 404, 409, 413, 425, 432, 434, 516, 518, 524, 532, 535], "fals": [4, 5, 7, 12, 42, 57, 58, 65, 78, 83, 90, 91, 96, 105, 109, 110, 111, 112, 113, 114, 115, 117, 122, 128, 131, 135, 157, 158, 235, 237, 238, 246, 252, 269, 273, 275, 371, 392, 395, 425, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "get": [4, 13, 17, 22, 27, 35, 36, 42, 44, 45, 144, 159, 160, 237, 238, 241, 248, 251, 252, 253, 269, 273, 274, 293, 313, 314, 320, 332, 338, 353, 375, 413, 425, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "filter": [4, 28, 144, 159, 160, 330], "claim": [4, 330, 406], "intern": [4, 7, 18, 24, 30, 31, 33, 37, 160, 172, 175, 201, 224, 229, 234, 249, 256, 258, 260, 265, 269, 276, 284, 330, 354, 369, 378, 384, 389, 393, 394, 400, 404, 409, 417, 425, 432, 434], "capabl": [4, 10, 15, 30, 32, 36, 41, 161, 330], "store": [4, 8, 16, 18, 19, 28, 29, 38, 44, 46, 49, 131, 138, 143, 144, 148, 157, 158, 159, 196, 231, 235, 244, 255, 277, 287, 302, 320, 348, 365, 371, 375, 379, 388, 390, 391, 393, 394, 398, 436, 485, 516, 531], "dnnl_dim_t": [5, 207, 228, 236, 247, 278, 284, 287, 291, 296, 300, 302, 315, 320, 322, 342, 348, 362, 372, 382, 516], "dim": [5, 15, 16, 36, 53, 146, 157, 158, 159, 176, 206, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 284, 302, 308, 332, 354, 356, 358, 360, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 476, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 532, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 561, 562, 564, 566, 569, 570, 571, 572], "enum": [5, 6, 7, 156, 159, 278, 283, 284, 291, 294, 295, 302, 303, 308, 309, 313, 314, 317, 319, 321, 323, 332, 334, 335, 336, 342, 343, 346, 347, 349, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 472, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 516, 519, 521, 525, 527, 530, 536, 538, 540, 542, 545, 547, 549, 551, 554, 555, 563, 565], "data_typ": [5, 15, 16, 36, 49, 146, 157, 158, 159, 160, 161, 172, 206, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 302, 342, 354, 356, 358, 360, 365, 366, 367, 369, 371, 373, 374, 375, 377, 378, 379, 380, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 476, 494, 496, 516, 518, 524, 532, 561, 562], "layout_typ": [5, 37, 237, 238, 246, 252, 273, 275, 278, 332, 390, 391, 392, 393, 394, 395, 476], "property_typ": [5, 238, 278, 391], "dnnl_graph_logical_tensor_t": [5, 278, 326, 332, 334, 335, 338], "c_data": 5, "dtype": [5, 278, 332], "int32_t": [5, 36, 49, 239, 240, 241, 244, 255, 278, 284, 287, 302, 308, 320, 332, 342, 348, 373, 374, 375, 398, 524], "ndim": [5, 33, 36, 50, 159, 161, 176, 228, 236, 278, 284, 302, 332, 347, 362, 372, 476], "ltype": [5, 278, 332], "ptype": [5, 278, 332], "undef": [5, 15, 160, 161, 167, 180, 181, 182, 183, 191, 192, 193, 194, 200, 202, 204, 206, 208, 210, 223, 237, 238, 252, 273, 278, 390, 391, 393, 394, 413, 414, 443, 445, 447, 449, 451, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 520, 522, 524, 526, 528, 535, 537, 546, 548, 550, 552, 564, 566], "adim": [5, 248, 278, 518], "stride": [5, 10, 15, 16, 28, 29, 37, 53, 57, 58, 67, 68, 69, 70, 71, 72, 98, 99, 118, 156, 160, 161, 175, 176, 179, 181, 183, 184, 192, 193, 206, 207, 228, 229, 230, 231, 232, 234, 236, 237, 238, 246, 249, 251, 252, 262, 263, 264, 269, 273, 275, 278, 284, 290, 292, 302, 304, 332, 362, 363, 364, 365, 366, 369, 372, 384, 388, 390, 391, 393, 394, 398, 413, 414, 415, 425, 436, 456, 458, 460, 462, 464, 466, 476, 518, 520, 522, 524, 535], "lid": 5, "get_dim": [5, 159, 241, 255, 263, 277, 375, 398, 414, 436, 518], "get_id": [5, 7, 237, 238, 246, 252, 273, 275], "get_data_typ": [5, 157, 158, 235, 237, 238, 246, 252, 263, 273, 275, 371, 414, 518], "get_property_typ": 5, "get_layout_typ": 5, "get_layout_id": 5, "get_strid": [5, 159, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 518, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_mem_s": [5, 37], "is_equ": [5, 278, 332], "lt": [5, 8, 278, 326], "integ": [5, 13, 16, 30, 32, 41, 46, 49, 53, 119, 144, 157, 164, 165, 168, 171, 172, 180, 191, 241, 243, 284, 287, 320, 334, 348, 364, 375, 516, 532], "repres": [5, 6, 7, 15, 16, 19, 28, 29, 36, 37, 41, 49, 64, 67, 94, 95, 123, 124, 137, 144, 157, 160, 237, 238, 239, 240, 246, 252, 273, 275, 326, 330, 335, 363, 373, 374, 378, 379, 383, 388, 389, 414, 432, 516], "dimens": [5, 7, 13, 15, 16, 18, 19, 20, 22, 26, 28, 29, 34, 36, 37, 41, 42, 43, 46, 47, 50, 53, 57, 58, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 83, 88, 90, 91, 94, 95, 96, 98, 99, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 120, 123, 131, 132, 141, 142, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 175, 176, 192, 193, 199, 206, 207, 223, 224, 225, 226, 227, 233, 234, 235, 242, 245, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 284, 286, 287, 289, 290, 291, 292, 299, 302, 304, 312, 320, 322, 332, 335, 338, 347, 348, 354, 356, 358, 360, 367, 369, 371, 375, 377, 378, 379, 380, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 454, 456, 458, 460, 462, 464, 466, 476, 516, 518, 520, 522, 524, 532, 541, 543, 561, 562], "size": [5, 9, 15, 16, 18, 20, 22, 25, 27, 28, 32, 36, 37, 42, 43, 45, 46, 49, 50, 57, 58, 62, 88, 89, 98, 99, 123, 140, 141, 142, 145, 147, 151, 156, 157, 158, 159, 172, 176, 180, 183, 184, 193, 206, 207, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 254, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 284, 286, 287, 300, 302, 303, 308, 309, 315, 320, 322, 325, 328, 332, 333, 337, 343, 346, 348, 354, 356, 358, 360, 362, 363, 365, 366, 367, 369, 371, 372, 373, 374, 375, 378, 379, 380, 384, 386, 388, 396, 400, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 476, 478, 480, 506, 508, 516, 518, 524, 532, 535, 546, 548, 561], "implement": [5, 10, 11, 12, 15, 16, 18, 19, 24, 25, 30, 32, 36, 37, 38, 41, 44, 45, 46, 49, 73, 75, 76, 96, 107, 137, 139, 140, 143, 152, 154, 155, 159, 161, 164, 165, 172, 180, 189, 195, 201, 206, 207, 217, 218, 224, 227, 230, 231, 234, 237, 238, 242, 244, 245, 246, 248, 249, 251, 252, 256, 263, 265, 273, 275, 308, 314, 320, 348, 354, 356, 357, 360, 362, 363, 365, 366, 369, 372, 377, 378, 379, 380, 383, 384, 388, 389, 396, 397, 400, 413, 417, 432, 485, 516, 534, 535, 557], "ar": [5, 10, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 73, 75, 76, 83, 90, 91, 96, 98, 99, 107, 109, 110, 111, 112, 113, 114, 115, 120, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 176, 183, 193, 196, 204, 205, 206, 207, 214, 215, 224, 234, 235, 237, 238, 241, 243, 244, 245, 246, 249, 250, 252, 255, 256, 258, 260, 263, 265, 269, 273, 275, 276, 277, 284, 285, 286, 287, 290, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 308, 312, 313, 314, 315, 316, 319, 320, 321, 322, 328, 332, 346, 347, 348, 354, 360, 362, 363, 364, 369, 371, 375, 378, 379, 380, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 398, 400, 404, 406, 409, 413, 414, 417, 425, 432, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 476, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 523, 524, 526, 528, 530, 532, 535, 537, 538, 539, 541, 543, 546, 548, 550, 552, 556, 557, 560, 561, 564, 566], "forc": [5, 14, 42, 53, 516], "limit": [5, 15, 16, 25, 30, 31, 40, 44, 143, 144, 161, 214, 215, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 328, 354, 356, 358, 360, 362, 363, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 516], "length": [5, 42, 105, 106, 243, 244, 269, 284, 334, 425, 516], "copi": [5, 10, 15, 131, 132, 146, 154, 157, 158, 207, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 302, 311, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 472, 485, 516, 518, 530, 532, 554], "layout": [5, 7, 13, 15, 37, 44, 50, 53, 63, 118, 131, 132, 136, 148, 156, 157, 161, 176, 179, 181, 199, 223, 224, 234, 237, 238, 244, 246, 249, 252, 255, 256, 258, 260, 265, 269, 273, 275, 276, 277, 278, 284, 302, 332, 335, 338, 354, 363, 369, 378, 379, 384, 390, 393, 394, 398, 400, 404, 409, 413, 417, 425, 434, 436, 476, 518, 524, 532], "properti": [5, 10, 37, 156, 160, 182, 190, 214, 215, 241, 273, 275, 332, 375, 391, 394, 395, 406, 476], "element": [5, 15, 28, 29, 32, 34, 36, 42, 45, 54, 56, 64, 67, 73, 74, 75, 76, 77, 80, 81, 84, 86, 90, 91, 92, 93, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 123, 125, 127, 129, 130, 131, 132, 133, 134, 136, 145, 156, 159, 161, 176, 187, 188, 189, 196, 200, 201, 217, 218, 250, 284, 286, 287, 289, 290, 292, 302, 303, 304, 318, 319, 320, 332, 334, 338, 346, 347, 348, 353, 375, 383, 387, 388, 456, 458, 460, 462, 464, 466, 476, 516, 520, 522, 524], "1": [5, 13, 14, 15, 19, 20, 22, 24, 26, 30, 32, 33, 34, 36, 38, 40, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 135, 139, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 166, 167, 168, 171, 172, 176, 179, 188, 190, 193, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 284, 286, 287, 302, 308, 314, 320, 322, 332, 335, 347, 348, 354, 356, 358, 360, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 402, 404, 407, 409, 411, 413, 414, 415, 419, 421, 425, 426, 427, 428, 429, 432, 434, 436, 451, 454, 476, 518, 524, 534, 535, 539, 556, 557], "unknown": [5, 7, 37, 197, 198, 221, 222, 231, 232, 237, 238, 252, 273, 302, 332, 335, 365, 366, 380, 398, 436, 476], "see": [5, 10, 15, 16, 19, 20, 21, 23, 24, 26, 29, 32, 34, 36, 38, 42, 43, 44, 45, 46, 49, 50, 53, 70, 90, 141, 143, 144, 145, 148, 151, 152, 155, 157, 158, 159, 160, 162, 176, 193, 206, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 285, 286, 289, 290, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 346, 347, 348, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 383, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 516, 524, 530, 532, 535, 538, 557, 564, 566], "dnnl_graph_unknown_ndim": [5, 237, 238, 246, 252, 273, 275, 278, 332, 476], "0": [5, 9, 13, 15, 16, 18, 22, 24, 29, 34, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 142, 143, 144, 146, 147, 148, 149, 152, 155, 157, 158, 159, 160, 172, 175, 176, 179, 184, 190, 196, 199, 203, 205, 207, 209, 216, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 286, 294, 302, 303, 306, 308, 314, 322, 327, 328, 330, 332, 335, 346, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 476, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 532, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 557, 561, 564, 566], "scalar": [5, 15, 144, 284, 287, 320, 348, 476, 524], "deleg": 5, "basic": [5, 10, 15, 24, 144, 146, 157, 158, 235, 251, 280, 287, 294, 302, 307, 317, 332, 335, 340, 371, 383, 388, 389, 432, 439, 518, 575], "inform": [5, 15, 28, 37, 38, 44, 45, 51, 53, 140, 143, 156, 159, 160, 161, 206, 239, 240, 262, 269, 302, 308, 314, 322, 326, 332, 353, 373, 374, 390, 391, 392, 393, 394, 395, 413, 425, 561, 567], "dnnl_graph_unknown_dim": [5, 278, 332, 476], "defin": [5, 10, 11, 15, 17, 19, 20, 24, 26, 29, 32, 33, 36, 38, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 66, 67, 73, 75, 76, 85, 90, 92, 96, 107, 138, 141, 142, 147, 148, 149, 150, 152, 155, 156, 159, 172, 180, 183, 184, 228, 231, 232, 236, 251, 253, 273, 275, 278, 284, 287, 291, 302, 308, 314, 320, 332, 348, 362, 365, 366, 372, 379, 383, 388, 390, 391, 392, 393, 394, 395, 414, 476, 524, 532], "zero": [5, 13, 15, 16, 20, 29, 32, 36, 41, 42, 45, 46, 53, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 75, 76, 92, 98, 99, 107, 131, 146, 148, 157, 158, 159, 161, 196, 206, 207, 227, 231, 232, 235, 239, 240, 241, 255, 269, 277, 284, 290, 292, 297, 299, 301, 302, 308, 313, 328, 330, 360, 365, 366, 371, 373, 374, 375, 376, 398, 399, 425, 436, 437, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 476, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 518, 520, 522, 524, 526, 528, 532, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "field": [5, 9, 42, 160, 176, 179, 181, 243, 284, 302, 332, 440, 473, 568, 569, 570, 571, 572, 573], "deduc": [5, 7, 37, 147, 335, 413, 476], "accordingli": [5, 15, 16, 159, 302, 332, 364, 389, 432, 518, 523], "alwai": [5, 13, 15, 19, 20, 24, 32, 34, 36, 43, 45, 46, 47, 49, 50, 52, 53, 146, 148, 157, 158, 159, 176, 235, 284, 302, 314, 371, 375, 383, 388, 518, 524, 532], "current": [5, 10, 13, 14, 15, 16, 20, 27, 30, 31, 32, 36, 44, 45, 49, 140, 142, 144, 146, 148, 159, 160, 161, 245, 255, 269, 277, 302, 314, 328, 344, 345, 380, 398, 425, 436, 476], "support": [5, 7, 12, 14, 16, 17, 18, 19, 23, 24, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 41, 42, 44, 45, 47, 48, 53, 138, 139, 143, 144, 147, 149, 157, 158, 159, 160, 161, 168, 171, 183, 184, 196, 200, 230, 231, 235, 242, 243, 244, 245, 277, 279, 284, 285, 286, 287, 290, 291, 292, 293, 296, 299, 301, 302, 308, 314, 320, 335, 340, 344, 345, 348, 364, 365, 371, 377, 378, 379, 380, 388, 413, 436, 449, 454, 476, 480, 516, 523, 524, 532, 534, 539, 556], "neg": [5, 15, 20, 29, 32, 46, 57, 58, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 90, 91, 92, 94, 95, 98, 99, 132, 157, 158, 196, 230, 235, 247, 248, 251, 274, 313, 328, 364, 371, 382, 383, 388, 432, 476, 535, 546, 548, 550, 552, 564, 566], "valu": [5, 6, 8, 10, 13, 14, 15, 16, 17, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 45, 46, 47, 48, 49, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 135, 138, 140, 141, 143, 144, 146, 154, 156, 157, 158, 159, 160, 161, 227, 231, 232, 235, 239, 240, 241, 244, 247, 248, 251, 255, 274, 277, 278, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 308, 310, 312, 313, 314, 315, 316, 319, 320, 321, 322, 327, 328, 330, 332, 334, 336, 338, 346, 347, 348, 360, 364, 365, 366, 371, 373, 374, 375, 378, 379, 380, 382, 383, 388, 398, 413, 414, 432, 436, 443, 445, 447, 449, 454, 456, 458, 460, 462, 464, 466, 470, 472, 476, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 508, 510, 512, 516, 518, 520, 522, 524, 528, 530, 532, 534, 535, 537, 538, 539, 543, 548, 552, 556, 560, 561, 564, 566], "opaqu": [5, 7, 10, 15, 37, 118, 141, 175, 179, 181, 192, 194, 207, 216, 332, 335, 452, 471, 476, 515, 517, 523, 529, 531, 533, 553, 558, 559], "assign": [5, 28, 225, 226, 244, 254, 257, 264, 271, 302, 356, 358, 379, 396, 402, 415, 428, 485, 518], "each": [5, 7, 15, 16, 18, 22, 28, 29, 32, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 68, 70, 71, 72, 83, 109, 110, 111, 112, 113, 114, 115, 120, 130, 139, 140, 142, 145, 147, 148, 149, 156, 160, 175, 183, 187, 188, 192, 214, 215, 233, 244, 251, 284, 287, 290, 292, 302, 303, 304, 308, 309, 318, 319, 320, 322, 328, 330, 332, 335, 346, 347, 348, 363, 364, 367, 375, 383, 388, 414, 456, 458, 460, 462, 464, 466, 476, 516, 518, 520, 522, 524, 532, 556, 561], "call": [5, 7, 15, 18, 21, 25, 27, 28, 29, 30, 31, 33, 36, 37, 44, 45, 47, 49, 92, 138, 140, 148, 149, 157, 158, 159, 160, 235, 284, 302, 303, 309, 314, 319, 320, 322, 325, 328, 330, 333, 335, 337, 346, 347, 363, 371, 375, 378, 379, 383, 388, 389, 390, 391, 393, 394, 395, 413, 414, 432, 472, 473, 485, 516, 530, 532, 554, 557, 561], "byte": [5, 18, 32, 49, 206, 207, 302, 303, 308, 332, 333, 346, 516, 518], "compar": [5, 18, 38, 45, 49, 53, 120, 154, 241, 245, 302, 332, 375, 376, 380, 413, 544], "two": [5, 18, 19, 24, 28, 29, 33, 36, 37, 40, 41, 45, 46, 49, 53, 56, 74, 96, 97, 100, 103, 118, 120, 130, 133, 138, 141, 144, 148, 156, 157, 158, 159, 160, 176, 193, 214, 215, 235, 269, 286, 294, 302, 311, 332, 369, 370, 371, 380, 383, 388, 390, 393, 394, 395, 425], "tenor": [5, 332], "equal": [5, 15, 20, 22, 26, 33, 36, 43, 45, 47, 50, 57, 75, 76, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 120, 131, 138, 140, 141, 142, 147, 151, 159, 166, 167, 176, 193, 238, 284, 286, 287, 302, 303, 309, 319, 320, 332, 346, 347, 348, 388, 391, 485, 516, 518, 524, 532], "decid": [5, 37, 179, 181, 237, 238, 252, 273, 332, 413, 443, 447, 456, 458, 462, 464, 468, 478, 482, 488, 490, 494, 498, 502, 506, 510, 520, 526, 541, 546, 550, 564], "reorder": [5, 16, 19, 24, 26, 27, 32, 35, 40, 42, 44, 45, 46, 49, 53, 144, 151, 157, 158, 160, 161, 185, 200, 201, 206, 224, 228, 229, 230, 231, 232, 234, 235, 236, 241, 242, 243, 244, 247, 248, 249, 255, 256, 258, 260, 262, 263, 265, 269, 276, 277, 278, 281, 282, 294, 302, 307, 308, 332, 342, 353, 354, 362, 363, 364, 365, 366, 369, 371, 372, 375, 377, 378, 379, 384, 398, 400, 404, 409, 414, 417, 422, 425, 434, 436, 439, 530, 574], "need": [5, 16, 18, 23, 24, 33, 37, 40, 42, 44, 45, 83, 138, 148, 157, 158, 159, 207, 228, 229, 231, 232, 235, 236, 237, 238, 246, 252, 262, 263, 269, 273, 275, 302, 308, 322, 330, 332, 338, 362, 365, 366, 371, 372, 383, 388, 389, 390, 391, 393, 394, 425, 432, 557, 561], "below": [5, 10, 15, 19, 20, 22, 23, 24, 25, 27, 29, 30, 33, 34, 36, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 147, 148, 149, 152, 155, 159, 255, 277, 284, 332, 363, 388, 393, 394, 398, 413, 436, 524, 557], "circumst": [5, 7, 140, 160, 332, 335, 413], "regard": [5, 40, 70, 332], "struct": [5, 228, 236, 278, 284, 285, 286, 289, 290, 292, 293, 294, 296, 297, 299, 300, 301, 302, 304, 305, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 325, 326, 330, 332, 334, 335, 338, 342, 348, 349, 362, 372, 388, 414], "when": [5, 8, 10, 11, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 159, 160, 161, 176, 183, 187, 188, 193, 195, 214, 215, 243, 247, 248, 284, 302, 303, 308, 309, 314, 320, 322, 328, 332, 348, 378, 379, 382, 383, 388, 413, 414, 476, 516, 524, 532], "underli": [5, 8, 33, 36, 138, 143, 298, 302, 303, 319, 320, 331, 332, 333, 337, 338, 346, 347, 389, 432, 485, 516, 530], "For": [5, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 73, 75, 76, 88, 89, 96, 107, 109, 110, 111, 112, 113, 114, 115, 138, 140, 142, 144, 146, 148, 151, 154, 156, 157, 158, 159, 161, 176, 182, 190, 193, 196, 207, 224, 234, 235, 244, 249, 251, 256, 258, 260, 265, 276, 284, 285, 287, 296, 299, 302, 303, 308, 314, 319, 320, 322, 325, 332, 335, 346, 347, 348, 354, 363, 364, 369, 371, 375, 378, 379, 383, 384, 388, 389, 390, 391, 400, 404, 409, 413, 417, 432, 434, 476, 516, 523, 524, 532, 535, 561], "exampl": [5, 19, 21, 24, 25, 27, 28, 30, 31, 36, 37, 38, 39, 40, 41, 44, 45, 49, 51, 73, 75, 76, 79, 96, 107, 109, 110, 111, 112, 113, 114, 115, 120, 131, 139, 155, 159, 161, 176, 182, 190, 193, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 285, 296, 299, 302, 308, 314, 332, 340, 353, 355, 357, 359, 361, 368, 370, 375, 376, 380, 381, 382, 383, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 401, 403, 405, 410, 412, 413, 416, 418, 420, 422, 424, 427, 429, 431, 432, 435, 436, 437, 438, 476, 518, 524, 532, 535, 575], "one": [5, 7, 11, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 33, 34, 36, 40, 41, 43, 45, 46, 47, 49, 50, 51, 53, 66, 68, 73, 75, 76, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 120, 131, 138, 139, 140, 141, 145, 146, 147, 148, 150, 151, 154, 157, 158, 159, 160, 161, 176, 193, 196, 224, 234, 235, 237, 238, 244, 246, 249, 252, 256, 258, 260, 263, 265, 269, 273, 275, 276, 284, 287, 293, 294, 302, 303, 308, 319, 320, 322, 332, 335, 340, 346, 347, 348, 354, 363, 369, 371, 375, 376, 378, 379, 383, 384, 388, 389, 391, 398, 399, 400, 404, 409, 413, 414, 417, 425, 432, 434, 436, 437, 468, 476, 518, 523, 530, 538, 561, 562], "while": [5, 18, 24, 25, 28, 29, 32, 36, 42, 44, 45, 49, 96, 138, 146, 148, 154, 176, 231, 232, 249, 253, 332, 335, 365, 366, 380, 384, 388, 544], "underneath": [5, 42, 332], "both": [5, 18, 20, 22, 23, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 50, 53, 56, 58, 59, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 90, 91, 97, 100, 103, 107, 133, 138, 139, 140, 144, 148, 150, 151, 154, 160, 176, 244, 250, 262, 265, 274, 285, 286, 293, 296, 299, 302, 314, 322, 332, 353, 378, 383, 386, 388, 389, 390, 393, 394, 398, 413, 417, 518], "nhwc": [5, 28, 147, 193, 227, 251, 267, 332, 360, 388, 421], "still": [5, 16, 24, 30, 44, 148, 159, 332, 388], "op_handl": 6, "attr": [6, 10, 15, 16, 18, 29, 44, 140, 146, 161, 237, 238, 244, 245, 246, 252, 255, 263, 273, 275, 277, 278, 284, 285, 286, 289, 290, 292, 293, 296, 297, 299, 300, 301, 304, 305, 308, 310, 311, 312, 313, 315, 316, 318, 379, 380, 390, 391, 392, 393, 394, 395, 398, 414, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 524, 526, 528, 532, 537, 538, 539, 541, 543, 546, 548, 550, 552, 556, 564, 566], "akind": [6, 278, 284, 294, 308, 342, 346, 347, 472], "string": [6, 24, 27, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 88, 89, 97, 98, 99, 100, 103, 105, 106, 107, 120, 130, 133, 157, 158, 160, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 276, 308, 314, 334, 342, 354, 356, 358, 360, 362, 367, 369, 371, 372, 373, 374, 377, 383, 384, 386, 388, 389, 390, 391, 393, 394, 396, 400, 402, 404, 407, 409, 411, 415, 417, 421, 423, 426, 428, 430, 432, 434, 473], "verbose_nam": [6, 278, 334], "add_input": 6, "add_output": 6, "templat": [6, 144, 160, 241, 314, 323, 342, 347, 375, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "typenam": [6, 241, 323, 342, 347, 375, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "type_i": 6, "req": 6, "is_sam": [6, 241, 375], "int64_t": [6, 207, 237, 238, 241, 245, 252, 255, 273, 277, 278, 291, 334, 375, 380, 390, 391, 393, 394, 398, 436, 535], "set_attr": [6, 237, 238, 246, 252, 273, 275, 390, 391, 392, 393, 394, 395], "name": [6, 15, 20, 22, 23, 24, 26, 27, 29, 31, 34, 40, 43, 45, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 144, 146, 147, 148, 149, 150, 151, 155, 159, 160, 176, 193, 206, 207, 214, 215, 278, 284, 314, 334, 353, 388, 406, 413, 433, 535], "type_f": 6, "type_b": 6, "type_": 6, "specifi": [6, 10, 11, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 29, 31, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 56, 57, 58, 66, 68, 73, 74, 75, 76, 83, 88, 89, 97, 98, 99, 100, 103, 107, 109, 110, 111, 112, 113, 114, 115, 120, 130, 131, 132, 133, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 157, 158, 160, 161, 176, 183, 184, 195, 196, 214, 215, 228, 229, 231, 232, 235, 236, 243, 244, 245, 248, 263, 284, 285, 287, 296, 299, 302, 303, 314, 319, 320, 322, 326, 335, 344, 345, 346, 347, 348, 362, 363, 365, 366, 371, 372, 378, 379, 380, 383, 388, 389, 390, 391, 392, 393, 394, 395, 398, 413, 432, 436, 472, 485, 494, 496, 516, 524, 530, 532, 535, 538, 554, 561, 562], "convolut": [6, 12, 15, 18, 19, 24, 26, 28, 32, 34, 35, 36, 38, 40, 41, 44, 45, 49, 68, 69, 70, 71, 72, 141, 144, 146, 159, 160, 161, 166, 167, 176, 185, 187, 188, 193, 200, 201, 228, 229, 230, 231, 232, 236, 237, 238, 249, 252, 262, 263, 273, 281, 282, 284, 302, 307, 308, 353, 362, 363, 364, 365, 366, 370, 372, 384, 388, 390, 393, 394, 414, 455, 456, 457, 458, 459, 460, 476, 510, 523, 524, 535, 574], "relu": [6, 19, 20, 28, 29, 34, 40, 44, 53, 92, 105, 117, 142, 148, 157, 158, 166, 167, 185, 187, 188, 195, 196, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 242, 247, 248, 249, 250, 251, 252, 253, 255, 256, 261, 263, 273, 274, 281, 285, 293, 305, 356, 358, 362, 363, 364, 365, 366, 369, 371, 372, 377, 382, 384, 386, 389, 390, 391, 393, 394, 398, 399, 400, 411, 414, 432], "bound": [6, 18, 34, 45, 46, 64, 65, 144, 237, 238, 246, 252, 273, 275], "set": [6, 7, 8, 10, 12, 14, 15, 16, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 43, 45, 46, 48, 49, 50, 53, 57, 67, 83, 90, 91, 105, 109, 110, 111, 112, 113, 114, 115, 120, 143, 144, 146, 148, 156, 157, 158, 160, 161, 168, 171, 225, 226, 230, 231, 235, 237, 238, 243, 244, 252, 254, 257, 263, 264, 265, 271, 273, 277, 278, 284, 286, 290, 292, 295, 297, 299, 301, 302, 303, 305, 306, 308, 310, 312, 313, 314, 319, 320, 321, 322, 327, 328, 330, 334, 338, 346, 347, 356, 358, 363, 364, 365, 371, 389, 390, 391, 392, 394, 395, 396, 402, 413, 414, 415, 417, 428, 436, 485, 516, 518, 524, 532, 557, 560, 561], "self": [6, 144, 161, 390, 391, 392, 393, 394, 395], "partition_handl": 7, "dnnl_graph_partition_t": [7, 278, 326, 330, 335], "p": [7, 13, 23, 48, 144, 145, 161, 206, 207, 243, 244, 278, 310, 378, 379, 535, 537], "aop": 7, "ekind": [7, 273, 278, 335, 394, 395], "get_ops_num": 7, "get_op": 7, "compiled_partit": [7, 37, 160, 237, 238, 246, 252, 273, 275, 278, 326, 333, 335, 337, 343, 344, 345, 390, 391, 392, 394, 395], "e": [7, 15, 16, 18, 20, 24, 26, 34, 36, 38, 43, 44, 45, 47, 50, 53, 77, 80, 90, 91, 101, 102, 121, 125, 150, 155, 156, 157, 158, 159, 160, 176, 193, 225, 230, 231, 235, 237, 238, 241, 242, 244, 245, 247, 248, 251, 252, 254, 255, 257, 258, 259, 269, 273, 274, 277, 284, 302, 314, 356, 365, 371, 375, 377, 379, 380, 382, 388, 396, 398, 402, 404, 407, 425, 432, 436, 454, 474, 518, 524, 534, 539, 556], "is_support": [7, 237, 238, 246, 252, 273, 275, 278, 335], "get_input_port": [7, 37, 237, 238, 246, 252, 273, 275], "get_output_port": [7, 37, 237, 238, 246, 252, 273, 275], "get_engine_kind": 7, "raw": [7, 25, 241, 245, 375, 380, 388], "c": [7, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 28, 29, 32, 34, 35, 40, 43, 47, 50, 51, 52, 53, 57, 59, 60, 62, 66, 83, 90, 91, 98, 123, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 155, 157, 158, 159, 172, 176, 180, 193, 206, 224, 229, 230, 231, 232, 235, 239, 240, 241, 242, 243, 244, 245, 248, 251, 253, 255, 257, 260, 269, 276, 277, 278, 283, 284, 287, 294, 295, 301, 302, 308, 313, 314, 320, 322, 342, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 473, 478, 480, 482, 484, 485, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 537, 539, 541, 543, 544, 546, 548, 550, 552, 554, 556, 561, 564, 566], "handl": [7, 8, 15, 16, 18, 19, 25, 36, 37, 49, 146, 159, 161, 224, 225, 226, 227, 233, 234, 237, 238, 242, 243, 244, 245, 246, 249, 250, 252, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 278, 284, 287, 294, 302, 303, 308, 317, 319, 320, 321, 322, 323, 325, 326, 330, 332, 333, 334, 335, 337, 338, 342, 346, 347, 348, 354, 356, 358, 360, 367, 369, 377, 378, 379, 380, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 400, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 426, 428, 430, 432, 434, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "directli": [7, 20, 24, 29, 49, 154, 159, 241, 302, 335, 375, 388, 392, 395, 432, 516, 557], "without": [7, 8, 11, 14, 16, 19, 24, 29, 32, 36, 139, 148, 155, 157, 158, 166, 172, 175, 201, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 290, 292, 302, 303, 319, 320, 335, 338, 346, 347, 348, 354, 356, 358, 360, 362, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 384, 386, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 537, 539, 541, 543, 546, 548, 550, 552, 556, 561, 562, 564, 566], "contain": [7, 15, 19, 20, 23, 24, 28, 36, 37, 39, 40, 41, 45, 57, 58, 67, 68, 69, 70, 71, 72, 73, 88, 89, 98, 99, 107, 109, 110, 111, 112, 113, 114, 115, 131, 132, 144, 156, 159, 160, 176, 224, 234, 249, 251, 256, 258, 260, 265, 276, 284, 290, 292, 302, 303, 304, 314, 319, 332, 333, 335, 346, 347, 350, 354, 364, 369, 383, 384, 388, 389, 390, 392, 393, 394, 395, 400, 404, 409, 417, 432, 434, 456, 458, 460, 462, 464, 466, 474, 518, 520, 522, 530, 531, 538, 567], "onli": [7, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 52, 53, 73, 75, 76, 91, 105, 106, 107, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 172, 175, 176, 193, 194, 196, 201, 204, 205, 207, 216, 227, 231, 232, 235, 236, 269, 284, 290, 291, 292, 294, 302, 303, 304, 314, 320, 322, 332, 335, 344, 345, 346, 348, 360, 362, 363, 365, 366, 371, 372, 375, 380, 383, 388, 390, 391, 392, 393, 394, 395, 398, 413, 414, 425, 436, 456, 458, 460, 462, 464, 466, 518, 520, 522, 524, 532, 561], "unord": 7, "gener": [7, 15, 17, 19, 23, 24, 28, 30, 31, 36, 37, 38, 39, 40, 42, 45, 48, 51, 139, 143, 144, 155, 156, 160, 175, 179, 181, 192, 206, 207, 224, 225, 226, 227, 233, 234, 235, 242, 249, 250, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 293, 302, 314, 322, 326, 354, 356, 358, 360, 367, 369, 371, 377, 380, 383, 384, 386, 388, 390, 391, 392, 394, 395, 396, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 476, 561, 562, 575], "debug": [7, 12, 23, 24, 30, 38, 143, 144, 160, 187, 188, 302, 314, 383, 388, 389, 432, 516], "purpos": [7, 10, 11, 24, 25, 30, 32, 33, 38, 138, 143, 159, 160, 302, 375, 388, 414, 516], "verbos": [7, 24, 25, 36, 38, 140, 143, 314, 413, 438], "shape": [7, 19, 20, 26, 29, 37, 42, 43, 44, 50, 53, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 74, 83, 88, 89, 96, 97, 98, 99, 100, 103, 109, 110, 111, 112, 113, 114, 115, 120, 130, 131, 133, 136, 146, 151, 156, 159, 161, 183, 184, 189, 218, 230, 237, 238, 241, 245, 246, 252, 262, 269, 273, 275, 303, 308, 319, 332, 335, 346, 347, 363, 364, 375, 380, 381, 390, 393, 394, 398, 399, 413, 425, 436, 476, 530, 538], "choos": [7, 16, 23, 24, 25, 26, 29, 30, 37, 38, 45, 47, 49, 53, 142, 151, 224, 230, 234, 249, 256, 258, 260, 262, 265, 276, 302, 335, 354, 363, 364, 369, 380, 384, 398, 400, 404, 409, 413, 414, 417, 434, 436], "optim": [7, 13, 15, 20, 22, 24, 26, 29, 32, 34, 36, 37, 38, 42, 43, 46, 47, 48, 50, 52, 53, 141, 143, 146, 148, 149, 150, 151, 159, 182, 190, 224, 234, 249, 256, 258, 260, 263, 265, 276, 335, 340, 354, 355, 356, 357, 358, 359, 363, 367, 368, 369, 370, 383, 384, 385, 388, 389, 396, 397, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 417, 421, 422, 426, 427, 428, 429, 430, 431, 432, 434, 435], "save": [7, 24, 36, 37, 48, 52, 141, 196, 264, 335, 415], "some": [7, 10, 11, 12, 13, 14, 15, 16, 18, 24, 26, 29, 32, 34, 36, 45, 48, 52, 139, 140, 141, 143, 144, 146, 154, 155, 156, 159, 160, 164, 165, 231, 232, 236, 251, 255, 269, 277, 287, 302, 320, 335, 348, 360, 362, 363, 365, 366, 372, 375, 380, 383, 388, 389, 390, 391, 392, 393, 394, 395, 398, 413, 425, 432, 436, 518, 523], "under": [7, 38, 157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 335, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "certain": [7, 19, 20, 29, 30, 31, 40, 47, 160, 176, 193, 291, 335, 472, 523, 524], "dure": [7, 10, 14, 15, 16, 17, 18, 19, 20, 24, 29, 30, 32, 34, 36, 37, 38, 43, 44, 45, 46, 47, 49, 50, 52, 53, 131, 136, 138, 140, 141, 144, 146, 159, 161, 164, 165, 179, 181, 182, 190, 207, 246, 269, 275, 287, 320, 335, 348, 375, 389, 413, 425, 432, 476, 516, 518, 524, 532, 557, 562], "stage": [7, 29, 37, 38, 47, 53, 131, 237, 238, 246, 252, 273, 275, 322, 328, 332, 335, 390, 391, 392, 393, 394, 395, 561], "unsupport": [7, 16, 24, 46, 160, 161, 237, 238, 246, 252, 273, 274, 275, 335, 390, 391, 392, 393, 394, 395, 432], "befor": [7, 10, 13, 16, 17, 18, 25, 26, 27, 29, 30, 31, 32, 33, 37, 41, 44, 67, 68, 69, 70, 71, 72, 92, 96, 120, 130, 138, 144, 151, 157, 160, 166, 167, 212, 213, 228, 236, 244, 258, 269, 284, 302, 314, 328, 333, 335, 362, 372, 378, 379, 383, 388, 389, 405, 413, 414, 425, 432, 516, 524], "transform": [7, 13, 18, 19, 42, 46, 83, 88, 89, 157, 235, 278, 302, 322, 335, 349, 363, 364, 371, 388, 485, 518, 558, 575], "isn": [7, 53], "tensor_handl": 8, "aengin": [8, 346, 347, 348, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 520, 522, 526, 528, 537, 541, 543, 546, 548, 550, 552, 554, 556, 564, 566], "get_data_handl": [8, 33, 36, 138, 157, 158, 231, 232, 235, 243, 244, 302, 365, 366, 371, 378, 379, 388, 516], "set_data_handl": [8, 243, 244, 302, 346, 347, 378, 379, 516], "get_engin": [8, 302, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 554, 556, 564, 566], "get_logical_tensor": 8, "storag": [8, 14, 19, 32, 157, 158, 194, 216, 235, 302, 303, 308, 319, 321, 322, 338, 346, 347, 371, 559, 560], "alloc": [8, 9, 18, 19, 25, 33, 138, 139, 157, 158, 197, 198, 214, 215, 221, 222, 224, 225, 226, 227, 229, 230, 233, 234, 235, 237, 238, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 282, 302, 303, 319, 324, 329, 333, 337, 338, 343, 344, 345, 346, 347, 354, 356, 358, 360, 363, 367, 369, 371, 377, 380, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 516, 518, 539], "own": [8, 18, 19, 33, 36, 44, 138, 139, 302, 303, 308, 319, 338, 346, 347, 388, 516, 557], "dnnl_memory_alloc": [8, 33, 138, 228, 236, 247, 278, 302, 303, 319, 338, 346, 347, 362, 372, 382, 516], "special": [8, 13, 19, 22, 26, 32, 33, 34, 37, 49, 53, 62, 138, 142, 145, 146, 149, 150, 151, 157, 158, 159, 175, 192, 235, 245, 302, 303, 308, 319, 326, 338, 346, 347, 371, 380, 516], "instruct": [8, 14, 24, 29, 30, 32, 36, 46, 48, 49, 139, 144, 154, 157, 158, 160, 168, 171, 193, 235, 302, 303, 314, 319, 338, 346, 347, 371, 388, 516], "dnnl_memory_non": [8, 33, 138, 278, 302, 303, 319, 338, 346, 347, 516], "On": [8, 24, 32, 44, 45, 53, 154, 159, 160, 176, 193, 195, 196, 287, 320, 348, 375, 389, 432, 516], "usm": [8, 197, 198, 221, 222, 302, 303, 319, 333, 337, 344, 345, 346, 347, 516], "associ": [8, 22, 26, 32, 34, 37, 41, 44, 142, 145, 146, 149, 150, 151, 302, 303, 308, 309, 319, 330, 333, 344, 346, 347, 516, 518, 554], "align": [9, 120, 148, 160, 243, 244, 278, 325, 333, 337, 388, 414], "cl_device_id": [9, 138, 140, 278, 303, 333, 344, 346], "dev": [9, 278, 337], "cl_context": [9, 138, 140, 253, 278, 303, 333, 344, 346], "ctx": [9, 243, 244, 278, 573], "lock_guard": 9, "mutex": 9, "pool_guard": 9, "pool_lock": 9, "ptr": [9, 278, 441, 573], "nullptr": [9, 18, 157, 158, 159, 161, 235, 253, 302, 303, 308, 328, 346, 371, 389, 485], "need_alloc_new_mm": 9, "auto": [9, 15, 16, 18, 29, 36, 38, 41, 44, 45, 49, 56, 74, 97, 100, 103, 120, 130, 133, 148, 157, 158, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 377, 378, 379, 380, 383, 384, 386, 388, 389, 390, 391, 393, 394, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436], "cnt": 9, "map_size_ptr_": 9, "count": [9, 57, 58, 75, 76, 94, 95, 131, 132, 144, 229, 237, 238, 252, 273, 278, 284, 294, 472], "method": [9, 16, 44, 139, 147, 161, 166, 167, 312, 332, 383, 388, 432, 441, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 519, 521, 525, 527, 536, 540, 542, 545, 547, 549, 551, 555, 563, 565, 568, 573], "allocate_host": 9, "dealloc": [9, 325, 333, 337, 388], "devic": [9, 12, 17, 19, 24, 32, 33, 138, 140, 161, 197, 198, 221, 222, 273, 278, 294, 303, 319, 328, 333, 337, 344, 345, 346, 347, 383, 388, 389, 390, 391, 392, 393, 394, 395, 432], "context": [9, 19, 29, 33, 140, 157, 158, 161, 176, 193, 235, 243, 244, 278, 302, 303, 317, 319, 322, 333, 337, 344, 345, 346, 347, 371, 378, 379, 383, 388, 389, 393, 394, 395, 432, 518, 561, 573], "event": [9, 33, 138, 144, 278, 303, 319, 333, 337, 344, 345, 346, 347], "cl_event": [9, 278, 303, 333, 344, 346], "deallocate_host": 9, "clear": [9, 302, 306, 327, 328], "quick": 10, "recap": 10, "creation": [10, 11, 14, 15, 16, 17, 18, 20, 24, 26, 29, 34, 43, 44, 47, 50, 53, 140, 143, 148, 151, 243, 244, 245, 253, 255, 274, 277, 302, 314, 322, 332, 354, 355, 364, 367, 368, 369, 370, 375, 380, 383, 384, 385, 388, 389, 398, 400, 401, 402, 403, 404, 405, 409, 410, 414, 432, 434, 435, 436, 557], "step": [10, 19, 24, 29, 42, 44, 45, 46, 49, 120, 140, 156, 157, 158, 224, 235, 237, 238, 246, 252, 257, 258, 260, 273, 275, 276, 322, 354, 371, 383, 388, 389, 390, 393, 394, 402, 404, 409, 413, 432, 434, 561], "consist": [10, 19, 22, 24, 28, 30, 42, 45, 53, 139, 148, 159, 161, 302, 413, 518], "follow": [10, 13, 15, 16, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 157, 159, 160, 161, 176, 193, 227, 237, 238, 246, 252, 255, 263, 269, 273, 275, 277, 284, 302, 303, 313, 314, 319, 322, 346, 347, 360, 375, 383, 388, 389, 398, 413, 414, 425, 432, 436, 443, 445, 482, 484, 485, 498, 500, 502, 504, 510, 512, 516, 518, 523, 532, 561, 564, 566], "descriptor": [10, 15, 16, 17, 18, 19, 20, 24, 26, 29, 34, 36, 43, 44, 45, 47, 50, 52, 141, 147, 148, 151, 159, 161, 172, 175, 191, 192, 194, 206, 207, 216, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 240, 241, 244, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 284, 285, 286, 289, 290, 292, 293, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 310, 311, 312, 313, 315, 316, 318, 319, 346, 347, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 378, 379, 383, 384, 385, 386, 389, 396, 398, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 435, 436, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 563, 564, 565, 566], "backward": [10, 18, 19, 22, 24, 26, 28, 30, 40, 44, 75, 76, 83, 90, 91, 145, 148, 151, 160, 161, 166, 167, 195, 196, 204, 205, 224, 225, 231, 232, 236, 250, 258, 259, 260, 264, 265, 269, 276, 285, 290, 292, 293, 296, 297, 299, 300, 304, 305, 308, 312, 313, 315, 316, 354, 356, 363, 365, 366, 372, 386, 404, 407, 409, 413, 415, 417, 425, 434, 442, 443, 446, 447, 455, 456, 461, 462, 467, 468, 477, 478, 481, 482, 487, 488, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 519, 520, 525, 526, 540, 541, 545, 546, 549, 550, 563, 564], "propag": [10, 17, 18, 19, 20, 22, 24, 26, 28, 29, 34, 35, 43, 44, 47, 50, 52, 91, 141, 142, 145, 147, 148, 149, 150, 151, 160, 161, 195, 196, 204, 205, 206, 207, 224, 225, 250, 258, 259, 260, 262, 263, 265, 276, 284, 285, 290, 292, 293, 296, 297, 299, 300, 304, 305, 308, 312, 313, 315, 316, 353, 354, 355, 356, 357, 363, 369, 370, 384, 385, 386, 387, 388, 396, 397, 402, 403, 404, 405, 407, 408, 409, 410, 414, 415, 416, 417, 418, 423, 424, 428, 429, 434, 435, 439, 442, 443, 444, 445, 446, 447, 448, 449, 454, 455, 456, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 519, 520, 521, 522, 525, 526, 527, 528, 534, 535, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 556, 563, 564, 565, 566], "forward": [10, 18, 19, 22, 24, 26, 28, 40, 44, 58, 144, 145, 148, 151, 161, 195, 196, 204, 205, 228, 229, 230, 231, 232, 236, 248, 253, 259, 269, 274, 284, 285, 290, 292, 293, 296, 297, 299, 300, 302, 304, 305, 308, 312, 313, 315, 316, 354, 355, 356, 357, 362, 363, 364, 365, 366, 369, 370, 372, 383, 384, 385, 386, 387, 389, 396, 397, 402, 403, 404, 405, 407, 408, 409, 410, 413, 415, 416, 417, 418, 423, 424, 425, 428, 429, 432, 434, 435, 443, 444, 445, 447, 448, 449, 456, 458, 459, 460, 462, 464, 465, 466, 468, 469, 470, 478, 479, 480, 482, 483, 484, 488, 490, 491, 492, 494, 495, 496, 498, 499, 500, 502, 503, 504, 506, 507, 508, 510, 511, 512, 520, 521, 522, 524, 526, 527, 528, 541, 542, 543, 546, 547, 548, 550, 551, 552, 564, 565, 566], "might": [10, 12, 15, 16, 18, 20, 22, 28, 29, 32, 34, 36, 43, 45, 47, 49, 50, 52, 141, 146, 148, 149, 156, 159, 176, 231, 232, 236, 245, 365, 366, 372, 375, 380, 383, 388, 398, 523], "well": [10, 16, 18, 19, 24, 32, 44, 45, 139, 155, 157, 159, 160, 244, 245, 363, 375, 378, 380, 393, 394, 413, 485], "train": [10, 13, 15, 16, 17, 18, 24, 35, 38, 44, 46, 49, 52, 59, 92, 139, 143, 159, 195, 196, 204, 205, 231, 232, 236, 259, 269, 285, 293, 353, 354, 355, 356, 357, 363, 386, 387, 396, 397, 404, 405, 407, 408, 409, 410, 413, 415, 416, 417, 418, 423, 424, 428, 429, 434, 435, 439], "specif": [10, 14, 15, 19, 20, 22, 23, 27, 29, 31, 34, 37, 38, 42, 43, 46, 52, 120, 139, 141, 147, 148, 149, 156, 157, 158, 161, 172, 176, 179, 181, 187, 188, 191, 193, 199, 206, 207, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 293, 294, 302, 303, 310, 314, 319, 322, 328, 330, 338, 346, 347, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 468, 470, 516, 537, 561], "aspect": [10, 413, 439], "sole": [10, 44], "detail": [10, 14, 16, 19, 23, 24, 32, 37, 40, 44, 45, 49, 144, 154, 160, 230, 231, 242, 244, 365, 375, 377, 379, 388], "why": [10, 159], "found": [10, 16, 24, 32, 140, 141, 154, 155, 159, 160, 161, 247, 264, 382, 415], "concept": [10, 53, 146, 280, 294, 307, 317, 375, 376, 380, 381, 383, 388, 389, 398, 399, 413, 432, 436, 437, 439, 575], "fact": [10, 51, 146, 388, 414], "import": [10, 15, 16, 19, 24, 44, 45, 49, 51, 139, 159, 383, 389, 432], "u": [10, 28, 148, 149, 166, 167, 241, 245, 255, 258, 277, 375, 380, 388, 398, 404, 436], "now": [10, 16, 28, 29, 36, 42, 44, 47, 148, 224, 229, 231, 232, 234, 249, 256, 258, 260, 265, 269, 276, 354, 365, 366, 369, 378, 379, 383, 384, 388, 400, 404, 409, 413, 417, 425, 432, 434], "2": [10, 15, 20, 30, 32, 33, 34, 36, 38, 40, 42, 43, 46, 48, 50, 52, 53, 59, 60, 61, 67, 68, 69, 70, 72, 75, 76, 83, 89, 90, 91, 96, 102, 105, 106, 110, 120, 130, 139, 140, 144, 148, 156, 157, 158, 159, 160, 166, 167, 168, 171, 172, 175, 176, 179, 180, 188, 190, 191, 201, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 302, 308, 314, 321, 322, 332, 354, 356, 358, 360, 362, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 454, 518, 524, 532, 534, 539, 556, 560, 561], "fulli": [10, 18, 19, 41, 45, 47, 53, 414], "correspond": [10, 13, 15, 16, 19, 20, 22, 24, 25, 26, 28, 29, 31, 32, 34, 36, 37, 38, 42, 43, 45, 46, 47, 50, 53, 67, 68, 96, 109, 110, 111, 112, 113, 114, 115, 131, 139, 140, 142, 146, 147, 148, 149, 150, 157, 158, 159, 160, 161, 176, 193, 207, 235, 248, 251, 263, 283, 284, 290, 292, 294, 295, 302, 303, 308, 313, 319, 328, 346, 347, 371, 375, 383, 388, 389, 413, 414, 432, 456, 458, 460, 462, 464, 466, 516, 518, 524, 532], "onc": [10, 15, 18, 27, 30, 31, 44, 45, 49, 53, 143, 148, 156, 157, 158, 159, 235, 244, 308, 314, 322, 328, 332, 363, 371, 378, 379, 380, 381, 383, 388, 398, 399, 436, 437, 561], "chang": [10, 14, 15, 16, 19, 24, 30, 31, 32, 36, 38, 41, 44, 53, 131, 143, 146, 152, 157, 158, 159, 176, 182, 190, 201, 235, 262, 284, 302, 308, 311, 314, 347, 363, 371, 388, 413, 414, 516, 524, 534], "problem": [10, 49, 146, 160, 161, 245, 375, 380], "where": [10, 13, 14, 15, 16, 18, 20, 22, 26, 28, 29, 32, 34, 42, 43, 45, 46, 47, 49, 50, 52, 53, 57, 60, 66, 67, 68, 73, 75, 76, 90, 91, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 131, 140, 141, 145, 147, 148, 149, 159, 160, 176, 193, 212, 213, 264, 267, 284, 287, 320, 348, 362, 363, 364, 375, 388, 413, 415, 421, 524], "destin": [10, 15, 16, 17, 26, 28, 29, 34, 36, 38, 44, 46, 47, 49, 53, 142, 146, 147, 149, 154, 157, 158, 161, 206, 207, 224, 225, 226, 233, 234, 242, 249, 250, 251, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 284, 285, 286, 289, 290, 292, 293, 296, 297, 299, 300, 301, 302, 304, 305, 308, 310, 311, 312, 315, 316, 318, 354, 356, 358, 364, 367, 368, 369, 377, 383, 384, 386, 388, 396, 398, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 431, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 524, 526, 528, 535, 537, 538, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "so": [10, 15, 16, 19, 24, 25, 26, 31, 44, 45, 49, 51, 53, 144, 148, 151, 156, 157, 159, 172, 175, 201, 241, 244, 269, 284, 302, 308, 363, 364, 375, 383, 388, 389, 390, 393, 394, 414, 425, 432, 523], "extra": [10, 18, 20, 23, 24, 31, 38, 40, 45, 49, 157, 158, 159, 160, 196, 207, 235, 258, 371, 388, 404, 413], "were": [10, 18, 33, 138, 160, 196, 383, 388, 389, 432, 561], "design": [10, 15, 16, 26, 50, 66, 149, 156, 413], "extens": [10, 30, 32, 33, 35, 36, 42, 48, 49, 138, 148, 168, 171, 252, 253, 273, 274, 298, 303, 319, 320, 331, 333, 337, 340, 353], "henc": [10, 15, 18, 20, 29, 34, 43, 45, 50, 143, 148, 149, 150, 154, 157, 159, 160, 196, 237, 238, 241, 246, 252, 273, 275, 290, 292, 304, 375, 388, 413, 456, 458, 460, 462, 464, 466, 520, 522], "thei": [10, 15, 18, 19, 20, 25, 29, 33, 36, 37, 40, 43, 45, 46, 47, 49, 50, 53, 83, 88, 90, 91, 138, 141, 148, 157, 158, 159, 160, 176, 235, 237, 238, 243, 246, 249, 252, 255, 273, 275, 371, 378, 383, 384, 388, 389, 398, 413, 414, 432], "structur": [10, 15, 40, 159, 176, 207, 302, 314, 452, 471, 474, 515, 517, 523, 529, 531, 533, 553, 558, 559, 567], "must": [10, 13, 14, 15, 16, 18, 20, 22, 24, 26, 29, 33, 37, 38, 43, 44, 45, 46, 47, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 146, 148, 155, 156, 157, 158, 176, 207, 235, 284, 286, 287, 290, 292, 302, 303, 304, 308, 313, 314, 319, 320, 322, 328, 332, 346, 347, 348, 363, 364, 371, 383, 388, 389, 390, 391, 392, 393, 394, 395, 432, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 530, 532, 537, 538, 539, 541, 543, 546, 548, 550, 552, 556, 561, 562, 564, 566], "them": [10, 24, 25, 34, 36, 37, 38, 40, 41, 44, 45, 49, 109, 110, 111, 112, 113, 114, 115, 120, 139, 157, 158, 159, 183, 195, 235, 284, 285, 296, 299, 302, 313, 371, 383, 388, 413, 443, 445, 476, 482, 484, 498, 500, 502, 504, 510, 512, 566], "setter": [10, 27, 31, 157], "destroi": [10, 18, 138, 207, 284, 294, 302, 308, 317, 321, 322, 325, 326, 330, 334, 335, 338, 388, 413, 432, 518, 524, 532], "right": [10, 13, 29, 34, 52, 53, 57, 58, 67, 68, 69, 70, 71, 72, 90, 91, 96, 98, 99, 120, 141, 147, 149, 150, 159, 160, 206, 207, 208, 209, 234, 249, 262, 264, 269, 290, 292, 302, 304, 369, 384, 413, 415, 425, 456, 458, 460, 462, 464, 466, 520, 522, 535], "after": [10, 15, 16, 20, 29, 37, 38, 42, 45, 47, 130, 144, 148, 155, 157, 158, 160, 176, 229, 234, 235, 237, 238, 246, 247, 248, 249, 251, 252, 269, 273, 274, 275, 284, 314, 322, 330, 335, 369, 371, 382, 383, 384, 388, 389, 390, 391, 393, 394, 413, 414, 425, 432, 454, 523, 524, 534, 539, 556, 561], "modifi": [10, 20, 24, 29, 43, 45, 47, 50, 53, 150, 284, 306, 327], "stai": [10, 159, 518], "equival": [10, 33, 138, 472, 485, 516, 530, 554], "null": [10, 161, 228, 236, 247, 284, 285, 286, 289, 290, 292, 293, 296, 297, 299, 300, 301, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 348, 362, 372, 382, 472, 485, 516, 530, 554], "upon": [10, 17, 44, 383, 388, 389, 413, 432], "unless": [10, 22, 25, 32, 50, 157, 158, 160, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 302, 303, 308, 319, 346, 347, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 516, 530, 538], "simpli": [10, 26, 29, 151, 302, 375], "omit": [10, 15, 73, 75, 76, 107, 204, 205, 363], "skeleton": [10, 15], "simplifi": [10, 28, 29, 45, 67, 94, 147, 155, 157, 158, 159, 235, 371], "read": [10, 27, 33, 138, 224, 225, 226, 227, 234, 241, 242, 249, 250, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 276, 354, 356, 358, 360, 369, 375, 377, 384, 386, 389, 396, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 426, 428, 430, 432, 434, 516], "dnnl_primitive_attr_t": [10, 278, 284, 532], "dnnl_primitive_attr_cr": [10, 278, 284], "dnnl_primitive_attr_set_someth": 10, "param": [10, 15, 18, 157, 158, 161, 228, 235, 236, 241, 362, 371, 372, 375, 524, 561], "dnnl_primitive_attr_set_something_els": 10, "other_param": [10, 15], "dnnl_eltwise_backward_primitive_desc_cr": [10, 236, 278, 293, 372], "op_pd": [10, 15, 18], "hint_fwd_pd": [10, 278, 285, 290, 292, 293, 296, 297, 299, 300, 304, 305, 312, 313, 315, 316, 443, 447, 456, 458, 462, 464, 468, 478, 482, 488, 490, 494, 498, 502, 506, 510, 520, 526, 541, 546, 550, 564], "here": [10, 15, 16, 18, 20, 26, 28, 29, 34, 36, 37, 38, 44, 45, 46, 52, 66, 67, 88, 89, 139, 141, 144, 148, 149, 154, 155, 157, 158, 159, 160, 166, 224, 225, 231, 235, 241, 248, 249, 255, 258, 259, 260, 264, 269, 276, 277, 302, 328, 354, 356, 364, 365, 371, 375, 378, 379, 383, 384, 388, 393, 394, 398, 404, 407, 409, 413, 414, 415, 425, 433, 434, 436, 518], "doe": [10, 15, 16, 18, 22, 23, 24, 26, 29, 32, 34, 36, 38, 42, 44, 46, 47, 49, 52, 54, 55, 79, 80, 81, 82, 86, 87, 93, 101, 102, 108, 116, 118, 119, 121, 127, 129, 130, 134, 136, 137, 139, 141, 143, 144, 145, 147, 149, 151, 155, 158, 159, 160, 161, 195, 262, 284, 287, 289, 302, 320, 348, 364, 388, 413, 414, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 518, 520, 522, 524, 526, 528, 532, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "effect": [10, 15, 27, 29, 30, 38, 96, 140, 156, 160, 314, 476], "we": [10, 15, 16, 18, 20, 28, 29, 34, 40, 43, 44, 46, 50, 53, 67, 68, 120, 139, 141, 142, 147, 148, 149, 159, 160, 224, 228, 231, 232, 234, 236, 241, 243, 244, 245, 249, 251, 256, 258, 260, 262, 265, 269, 276, 354, 362, 365, 366, 369, 372, 375, 378, 379, 380, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 400, 404, 409, 413, 414, 417, 425, 432, 434], "immedi": [10, 413, 557], "dnnl_primitive_attr_destroi": [10, 278, 284], "dnnl": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 30, 31, 33, 34, 36, 37, 43, 44, 45, 47, 49, 50, 51, 53, 138, 140, 144, 145, 147, 148, 152, 155, 157, 158, 159, 160, 161, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 350, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 437], "primitive_attr": [10, 12, 13, 14, 15, 16, 18, 19, 29, 44, 49, 53, 157, 158, 161, 226, 227, 230, 234, 235, 241, 244, 245, 249, 255, 256, 261, 263, 267, 277, 278, 284, 342, 358, 360, 364, 369, 371, 375, 376, 379, 380, 381, 384, 398, 399, 400, 411, 414, 421, 436, 437, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 524, 526, 528, 534, 535, 537, 538, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "set_someth": 10, "set_something_els": 10, "primitive_desc": [10, 15, 16, 18, 19, 20, 29, 34, 43, 44, 45, 50, 140, 148, 161, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 285, 286, 290, 292, 293, 296, 297, 299, 300, 301, 304, 305, 308, 310, 312, 313, 315, 316, 342, 346, 347, 354, 356, 358, 360, 363, 364, 365, 366, 367, 369, 373, 374, 375, 377, 378, 379, 380, 383, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 519, 521, 524, 525, 527, 530, 532, 535, 536, 538, 540, 542, 544, 545, 547, 549, 551, 555, 563, 565], "pd": [10, 15, 28, 243, 269, 425, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 519, 520, 521, 522, 525, 526, 527, 528, 530, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 563, 564, 565, 566], "happen": [10, 16, 29, 30, 36, 45, 49, 66, 140, 146, 156, 157, 159, 228, 236, 255, 287, 320, 322, 348, 362, 372, 388, 398, 413], "automat": [10, 36, 38, 49, 143, 167, 175, 176, 192, 193, 454, 556], "As": [10, 15, 16, 17, 18, 20, 24, 25, 28, 29, 34, 37, 44, 45, 49, 146, 154, 159, 243, 269, 284, 302, 378, 379, 425, 518, 524], "mention": [10, 18, 20, 34, 45, 49, 120, 243, 364, 378, 379, 388], "abov": [10, 16, 18, 20, 23, 24, 30, 33, 34, 36, 38, 40, 42, 45, 47, 49, 96, 120, 138, 139, 150, 159, 160, 183, 184, 243, 302, 378, 379, 388, 390, 391, 393, 394, 414, 518], "enabl": [10, 14, 15, 18, 19, 20, 24, 27, 29, 30, 31, 32, 33, 34, 36, 39, 40, 43, 46, 47, 48, 49, 50, 51, 53, 138, 139, 143, 144, 150, 152, 159, 161, 224, 234, 237, 238, 249, 252, 256, 258, 260, 265, 273, 276, 278, 302, 314, 328, 340, 342, 354, 363, 364, 369, 380, 384, 388, 391, 398, 400, 404, 409, 417, 434, 436, 516], "extend": [10, 16, 33, 36, 138, 201, 284, 322, 561], "behavior": [10, 11, 14, 15, 17, 18, 20, 24, 29, 30, 43, 45, 47, 48, 49, 50, 52, 53, 144, 148, 150, 164, 165, 172, 175, 177, 178, 195, 196, 201, 277, 284, 302, 303, 317, 332, 346, 390, 391, 392, 393, 394, 395, 436, 518, 554, 557], "explan": [10, 160, 161], "provid": [10, 12, 13, 14, 15, 16, 18, 19, 20, 24, 25, 27, 29, 31, 33, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 147, 148, 156, 157, 158, 160, 195, 196, 214, 215, 224, 231, 234, 235, 239, 240, 249, 256, 258, 260, 265, 269, 276, 284, 299, 302, 306, 308, 327, 328, 332, 346, 347, 354, 365, 369, 371, 373, 374, 384, 390, 391, 392, 393, 394, 395, 400, 404, 409, 413, 414, 417, 425, 434, 486, 494, 496, 516, 524], "section": [10, 14, 15, 16, 19, 20, 22, 24, 27, 28, 29, 32, 34, 36, 40, 43, 44, 45, 49, 52, 141, 143, 144, 148, 149, 155, 157, 158, 235, 241, 371, 375, 388, 390, 391, 392, 393, 394, 395], "scratchpad": [10, 19, 24, 28, 29, 45, 157, 158, 161, 206, 207, 214, 215, 235, 284, 308, 322, 353, 371, 532, 535, 561], "intermedi": [10, 15, 16, 28, 29, 32, 34, 37, 45, 49, 52, 146, 157, 158, 235, 241, 262, 284, 287, 320, 322, 348, 371, 375, 380, 561], "temporari": [10, 18, 19, 28, 38, 45, 243, 244, 308, 314], "implicit": [10, 14, 22, 26, 28, 29, 40, 53, 146, 151, 177, 178], "down": [10, 14, 17, 29, 37, 41, 49, 157, 159, 160, 414], "convers": [10, 14, 16, 17, 29, 41, 49, 118, 157, 158, 177, 178, 212, 213], "f32": [10, 11, 13, 14, 15, 16, 20, 22, 29, 32, 34, 35, 36, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 145, 146, 147, 148, 149, 150, 154, 157, 158, 159, 160, 164, 165, 177, 178, 180, 191, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 353, 354, 356, 358, 360, 364, 365, 367, 369, 371, 373, 374, 375, 377, 379, 380, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 426, 428, 430, 432, 434, 436, 524, 532], "accumul": [10, 15, 16, 25, 32, 40, 49, 63, 141, 142, 146, 148, 157, 158, 161, 164, 165, 235, 253, 269, 274, 282, 284, 288, 309, 322, 330, 353, 371, 389, 425, 432, 523, 524, 532, 561], "lower": [10, 11, 16, 20, 28, 29, 32, 37, 38, 43, 46, 49, 64, 65, 139, 141, 142, 147, 159, 160, 176], "precis": [10, 11, 16, 17, 25, 29, 32, 42, 44, 46, 47, 49, 53, 136, 146, 154, 157, 158, 159, 172, 180, 191, 235, 241, 245, 280, 284, 287, 320, 348, 371, 375, 376, 380, 518, 532], "datatyp": [10, 11, 14, 16, 17, 32, 148, 156, 160, 161, 164, 165, 284], "round": [10, 11, 16, 34, 40, 46, 57, 73, 75, 76, 98, 107, 136, 159, 164, 165, 166, 167, 185, 212, 213, 281, 284, 308, 353, 532], "control": [10, 17, 18, 19, 20, 23, 24, 29, 32, 43, 50, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 83, 88, 89, 96, 98, 99, 131, 139, 156, 284, 285, 296, 299, 306, 314, 327, 328, 438, 554], "argument": [10, 14, 15, 17, 32, 44, 104, 157, 158, 161, 189, 206, 207, 217, 218, 224, 225, 226, 227, 231, 232, 233, 234, 235, 242, 249, 250, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 276, 284, 285, 296, 299, 303, 308, 313, 319, 321, 332, 344, 345, 346, 347, 354, 356, 358, 360, 363, 365, 366, 367, 369, 371, 377, 378, 379, 384, 386, 388, 389, 396, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430, 434, 443, 445, 474, 482, 484, 498, 500, 502, 504, 510, 512, 518, 530, 532, 538, 560, 561, 564, 566], "downconvers": [10, 32, 177, 178], "determinist": [10, 13, 17, 37, 161, 284, 353, 532], "enforc": [10, 12, 45], "dropout": [10, 53, 284, 308, 532], "appli": [10, 13, 15, 16, 20, 22, 29, 32, 34, 42, 43, 44, 46, 47, 49, 50, 53, 54, 56, 64, 73, 74, 75, 76, 77, 80, 81, 83, 84, 86, 92, 93, 94, 96, 97, 100, 103, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 125, 130, 132, 133, 134, 141, 145, 147, 148, 150, 157, 160, 176, 182, 187, 188, 190, 193, 196, 247, 249, 255, 267, 277, 284, 286, 287, 302, 303, 308, 313, 319, 320, 322, 346, 347, 348, 364, 382, 383, 384, 388, 398, 414, 421, 436, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 516, 532, 561, 564, 566], "pseudo": [10, 29, 36, 49, 53, 140, 146, 159], "random": [10, 17, 53, 212, 213, 241, 242, 245, 255, 277, 375, 377, 380, 398, 436], "quantiz": [10, 14, 15, 32, 41, 42, 44, 49, 53, 73, 75, 76, 146, 148, 157, 158, 183, 184, 185, 227, 230, 235, 238, 241, 244, 277, 278, 281, 284, 322, 353, 360, 364, 371, 376, 379, 391, 398, 399, 436, 437, 524, 532, 561], "infer": [10, 15, 16, 24, 35, 36, 38, 48, 49, 53, 139, 143, 148, 159, 182, 189, 190, 195, 196, 204, 205, 218, 228, 229, 230, 238, 243, 244, 246, 255, 269, 275, 277, 278, 353, 375, 399, 414, 425, 436, 439], "post": [10, 13, 16, 32, 35, 36, 42, 44, 45, 46, 49, 157, 158, 161, 187, 188, 195, 196, 225, 226, 227, 230, 234, 235, 249, 256, 261, 263, 267, 284, 308, 321, 322, 353, 356, 357, 358, 359, 369, 370, 371, 384, 385, 391, 400, 401, 411, 412, 414, 421, 523, 524, 532, 560, 561], "fuse": [10, 13, 15, 16, 19, 20, 22, 29, 34, 40, 41, 44, 45, 46, 47, 53, 195, 196, 263, 284, 285, 308, 356, 357, 358, 359, 369, 370, 384, 385, 398, 399, 400, 401, 411, 412, 524], "mostli": [10, 45, 176, 193, 302], "becaus": [10, 15, 16, 20, 24, 30, 31, 34, 43, 45, 46, 50, 52, 157, 160, 161, 189, 193, 206, 217, 218, 269, 293, 302, 363, 364, 388, 390, 391, 393, 394, 413, 414, 425, 432, 524], "separ": [10, 15, 20, 24, 27, 29, 43, 45, 50, 83, 139, 146, 160, 161, 269, 302, 308, 378, 379, 388, 414, 425], "delai": [10, 231, 232, 365, 366], "successfulli": 10, "whatev": [10, 263, 414], "configur": [10, 18, 20, 23, 29, 31, 32, 38, 43, 45, 46, 50, 53, 91, 142, 148, 156, 157, 160, 161, 196, 214, 215, 219, 220, 230, 284, 285, 296, 299, 314, 362, 363, 364, 369, 370, 413, 438, 523, 524, 532], "want": [10, 16, 18, 38, 45, 49, 139, 393, 394], "howev": [10, 12, 14, 15, 16, 18, 20, 24, 26, 33, 34, 43, 44, 45, 49, 50, 53, 139, 141, 142, 149, 150, 154, 159, 244, 245, 249, 269, 293, 302, 363, 375, 378, 380, 383, 384, 388, 389, 414, 425, 432], "try": [10, 157, 158, 230, 231, 235, 242, 244, 251, 269, 274, 365, 371, 377, 379, 388, 390, 391, 392, 393, 394, 395, 425, 432], "dnnl_unimpl": [10, 140, 157, 158, 189, 217, 218, 230, 231, 235, 242, 244, 314, 365, 371, 377, 379], "unfortun": [10, 49, 139, 155], "about": [10, 15, 18, 45, 53, 140, 143, 144, 159, 160, 239, 240, 302, 373, 374, 388, 414], "what": [10, 15, 16, 45, 46, 158, 160, 183, 251, 274, 278, 302, 308, 383, 388, 413, 432, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 473, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566, 568], "exactli": [10, 16, 29, 45, 49, 53, 109, 110, 111, 112, 113, 114, 115, 302], "go": [10, 44, 70, 159, 241, 375, 383, 388, 389, 432], "wrong": [10, 140, 388], "document": [10, 15, 16, 24, 28, 37, 42, 45, 49, 51, 139, 154], "benefit": [11, 19, 24, 44, 143, 156, 293], "speed": [11, 18, 31, 44, 140, 259, 407], "up": [11, 14, 23, 24, 32, 49, 53, 140, 141, 142, 144, 157, 158, 159, 225, 226, 228, 235, 236, 247, 254, 257, 259, 264, 271, 308, 332, 356, 358, 362, 371, 372, 382, 396, 402, 407, 413, 415, 428, 476], "notic": [11, 14, 24, 160, 187, 188, 388], "impact": [11, 12, 14, 16, 32, 36, 155, 159, 160], "accuraci": [11, 14, 16, 29, 36, 44, 45, 46, 49, 53, 241, 251, 253, 375, 376, 388, 389], "numer": [11, 14, 17, 20, 34, 41, 43, 49, 50, 60, 83, 90, 91, 150, 154, 167, 243, 244, 251, 253, 269, 274, 389, 425, 432], "alter": [11, 14, 17, 148], "low": [11, 17, 19, 32, 36, 44, 156, 157, 158, 235, 280, 284, 290, 292, 304, 371, 456, 458, 460, 462, 464, 466, 520, 522, 532], "accumulation_mod": [11, 32, 283, 342, 532], "accept": [11, 12, 17, 25, 27, 39, 44, 46, 58, 68, 69, 99, 137, 144, 314, 330], "strict": [11, 14, 164, 165, 177, 284], "f64": [11, 29, 32, 34, 50, 141, 150, 165, 191, 284], "integr": [11, 19, 24, 32, 37, 38, 45, 51, 144, 237, 238, 246, 252, 273, 275, 277, 314, 436], "s32": [11, 13, 15, 16, 17, 22, 29, 32, 34, 36, 46, 47, 49, 53, 58, 68, 69, 72, 75, 76, 88, 89, 109, 110, 111, 112, 113, 114, 115, 141, 142, 146, 147, 149, 157, 158, 164, 165, 180, 191, 235, 239, 240, 241, 255, 284, 371, 373, 374, 375, 398, 532], "relax": [11, 164], "partial": [11, 18, 20, 30, 43, 50, 164, 165, 314, 398, 413], "src": [11, 15, 16, 20, 23, 24, 26, 28, 29, 32, 34, 36, 38, 42, 43, 45, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 149, 150, 151, 155, 158, 160, 164, 165, 224, 225, 226, 227, 228, 231, 232, 233, 234, 236, 241, 242, 249, 250, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 278, 284, 285, 293, 296, 299, 354, 356, 358, 360, 362, 365, 366, 367, 368, 369, 372, 375, 377, 378, 379, 384, 386, 388, 396, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 431, 434, 449, 454, 480, 488, 490, 492, 538, 539, 556], "dst": [11, 13, 15, 16, 17, 20, 22, 26, 28, 29, 32, 34, 36, 43, 45, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 149, 150, 151, 158, 164, 165, 166, 167, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 242, 249, 250, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 276, 278, 284, 285, 293, 296, 299, 354, 356, 358, 360, 362, 364, 365, 366, 367, 368, 369, 372, 377, 378, 379, 384, 386, 388, 396, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430, 431, 434, 449, 451, 454, 480, 488, 490, 492, 524, 538, 539, 556], "fastest": [11, 164, 165], "avail": [11, 14, 21, 24, 25, 29, 30, 32, 36, 38, 42, 44, 48, 51, 53, 109, 110, 111, 112, 113, 114, 115, 131, 140, 144, 146, 160, 161, 189, 217, 218, 224, 230, 231, 242, 243, 244, 308, 354, 365, 377, 378, 379, 389, 413, 432, 534], "higher": [11, 15, 20, 27, 29, 31, 38, 41, 43, 46, 50, 53, 139, 141, 142, 147, 159, 160, 161], "f16": [11, 14, 15, 20, 22, 29, 32, 34, 36, 42, 43, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 145, 146, 147, 148, 149, 150, 154, 157, 158, 164, 165, 177, 178, 180, 191], "To": [12, 13, 15, 16, 24, 27, 28, 29, 32, 33, 36, 37, 44, 45, 46, 49, 52, 67, 70, 120, 138, 143, 144, 146, 147, 155, 160, 244, 269, 378, 380, 383, 388, 389, 390, 391, 392, 393, 394, 395, 413, 425, 432], "valid": [12, 24, 32, 40, 45, 53, 57, 58, 64, 65, 67, 68, 69, 70, 71, 72, 98, 99, 144, 148, 160, 172, 175, 183, 184, 201, 207, 263, 286, 302, 330, 332, 333, 344, 413, 476, 516, 518], "certif": 12, "guarante": [12, 36, 45, 131, 132, 140, 159, 375], "multipl": [12, 15, 16, 18, 19, 20, 22, 28, 29, 37, 38, 40, 41, 43, 45, 49, 50, 114, 139, 145, 146, 152, 160, 166, 167, 176, 193, 200, 201, 242, 261, 269, 277, 282, 287, 302, 303, 307, 318, 319, 328, 346, 347, 360, 363, 375, 376, 377, 380, 381, 383, 388, 398, 399, 411, 413, 414, 425, 436, 437, 513, 516, 518, 534, 574, 575], "platform": [12, 29, 32, 42, 48, 49, 144, 157, 158, 161, 230, 231, 235, 242, 244, 340, 365, 371, 377, 379, 414], "exact": [12, 41, 49, 142, 148, 241, 375, 388], "bitwis": [12, 20, 24, 43, 50, 219], "most": [12, 15, 16, 19, 22, 24, 25, 26, 29, 30, 32, 36, 40, 45, 47, 49, 52, 53, 96, 139, 145, 146, 151, 154, 159, 176, 206, 294, 308, 375, 388, 398, 413, 436, 472, 485, 516, 530, 554], "fix": [12, 159], "environ": [12, 14, 17, 23, 24, 30, 31, 32, 36, 39, 48, 49, 51, 139, 140, 143, 144, 155, 160, 161, 212, 213, 314, 413, 414], "particular": [12, 15, 17, 18, 19, 28, 29, 32, 36, 45, 49, 53, 150, 156, 159, 160, 176, 248, 251, 294, 302, 308, 317, 375, 383, 388, 389, 432, 472, 518], "hardwar": [12, 14, 16, 20, 22, 29, 33, 34, 37, 43, 46, 49, 52, 139, 141, 144, 148, 149, 154, 156, 157, 322, 326, 413, 561], "softwar": [12, 23, 48, 49, 157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "runtim": [12, 15, 16, 20, 27, 32, 33, 36, 38, 40, 42, 43, 50, 53, 59, 90, 138, 140, 146, 152, 156, 160, 161, 206, 207, 252, 255, 277, 282, 284, 303, 308, 319, 320, 324, 325, 328, 333, 337, 344, 345, 348, 375, 388, 389, 393, 394, 398, 413, 414, 432, 436, 524, 567], "version": [12, 20, 23, 24, 25, 38, 43, 44, 51, 140, 155, 157, 158, 160, 166, 167, 176, 193, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 302, 308, 314, 342, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 454, 556, 567], "variabl": [12, 14, 20, 22, 23, 24, 26, 29, 30, 31, 34, 36, 39, 43, 47, 48, 50, 51, 52, 53, 54, 57, 64, 66, 67, 77, 80, 81, 84, 86, 92, 93, 96, 98, 116, 121, 123, 125, 134, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 155, 160, 182, 190, 269, 278, 308, 314, 388, 413, 414, 425], "ident": [12, 26, 40, 50, 51, 109, 110, 111, 112, 113, 114, 115, 140, 143, 150, 151, 224, 234, 249, 256, 258, 260, 265, 276, 354, 367, 368, 369, 384, 400, 404, 409, 417, 430, 431, 434], "between": [12, 15, 16, 18, 19, 22, 23, 24, 33, 35, 37, 40, 41, 42, 49, 57, 67, 83, 98, 99, 118, 138, 139, 146, 154, 156, 157, 158, 159, 160, 161, 182, 190, 214, 215, 228, 229, 231, 232, 235, 236, 237, 238, 247, 248, 249, 252, 269, 273, 284, 294, 302, 311, 332, 353, 362, 363, 365, 366, 371, 372, 375, 380, 384, 388, 413, 425, 439, 476, 518, 524, 532, 538], "produc": [12, 18, 20, 29, 34, 37, 38, 39, 40, 45, 47, 48, 92, 150, 160, 302, 308, 314, 375, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 519, 520, 521, 522, 525, 526, 527, 528, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 561, 562, 563, 564, 565, 566], "bit": [12, 14, 15, 17, 24, 25, 30, 32, 41, 44, 45, 46, 49, 154, 168, 171, 172, 180, 191, 199, 212, 213, 223, 241, 244, 284, 287, 314, 320, 340, 348, 364, 375, 389, 524, 532, 557], "wise": [12, 28, 34, 45, 54, 56, 74, 80, 93, 97, 100, 101, 103, 104, 105, 108, 119, 127, 129, 130, 133, 136, 142, 159, 187, 188, 196, 200, 201, 234, 249, 250, 264, 353, 369, 384, 387, 415], "reli": [12, 28, 38, 146], "non": [12, 16, 17, 19, 23, 26, 29, 32, 36, 41, 44, 46, 49, 50, 57, 58, 67, 68, 69, 70, 71, 72, 77, 78, 88, 92, 98, 99, 139, 146, 148, 159, 160, 161, 166, 167, 172, 180, 191, 196, 206, 207, 231, 232, 239, 240, 255, 263, 302, 322, 325, 326, 333, 337, 345, 365, 366, 373, 374, 388, 398, 414, 518, 561], "construct": [12, 19, 33, 37, 39, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 157, 158, 235, 269, 302, 303, 319, 330, 344, 345, 346, 347, 348, 371, 389, 425, 432, 534, 568, 573], "atom": [12, 406], "order": [12, 15, 16, 19, 24, 28, 29, 30, 31, 33, 36, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 144, 146, 148, 149, 159, 160, 176, 183, 184, 193, 219, 220, 231, 232, 236, 251, 258, 284, 287, 289, 290, 292, 302, 303, 304, 309, 314, 320, 348, 365, 366, 372, 388, 390, 391, 393, 394, 404, 414, 454, 456, 458, 460, 462, 464, 466, 476, 518, 520, 522, 524, 532], "dnnl_primitive_attr_set_determinist": [12, 278, 284], "set_determinist": [12, 532], "permit": [12, 25], "dispatch": [12, 14, 19, 24, 29, 31, 314, 438], "perform": [12, 13, 15, 16, 18, 19, 24, 25, 27, 30, 31, 32, 35, 36, 38, 39, 40, 41, 44, 45, 46, 49, 54, 56, 57, 59, 67, 70, 74, 83, 88, 90, 91, 93, 97, 98, 100, 101, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 120, 127, 129, 130, 133, 136, 139, 148, 152, 154, 159, 160, 161, 162, 196, 204, 205, 231, 232, 236, 237, 238, 252, 262, 263, 264, 273, 284, 285, 286, 287, 290, 292, 293, 296, 299, 300, 301, 302, 304, 305, 314, 316, 320, 340, 348, 353, 362, 363, 364, 365, 366, 372, 375, 376, 380, 388, 389, 391, 398, 415, 432, 436, 454, 516, 523, 524, 532, 556, 561], "matmul": [12, 14, 17, 24, 32, 36, 40, 42, 53, 160, 161, 185, 200, 239, 240, 241, 242, 245, 246, 255, 275, 277, 278, 281, 301, 342, 353, 376, 381, 392, 395, 399, 412, 437, 530], "normal": [12, 28, 32, 36, 38, 45, 59, 60, 83, 90, 91, 166, 167, 195, 196, 200, 201, 225, 227, 254, 257, 259, 282, 300, 307, 308, 353, 357, 360, 380, 388, 397, 403, 408, 413, 446, 447, 448, 449, 477, 478, 479, 480, 493, 494, 495, 496, 505, 507, 574], "especi": [12, 45, 49, 143, 160, 302, 523], "gpu": [12, 15, 19, 20, 22, 26, 27, 29, 32, 33, 34, 35, 36, 42, 50, 52, 53, 138, 141, 143, 144, 145, 146, 148, 149, 150, 151, 160, 161, 173, 174, 224, 247, 248, 252, 253, 273, 274, 275, 277, 294, 333, 344, 353, 354, 388, 393, 394, 413, 414, 436, 439, 567], "mani": [13, 24, 28, 37, 42, 44, 139, 159, 308, 388], "gnn": 13, "model": [13, 15, 19, 28, 29, 32, 33, 37, 38, 40, 41, 42, 45, 46, 47, 73, 83, 107, 138, 148, 229, 231, 232, 236, 243, 244, 251, 269, 279, 340, 365, 366, 372, 378, 379, 380, 388, 425], "layer": [13, 28, 32, 38, 40, 44, 45, 88, 90, 91, 148, 200, 201, 224, 241, 243, 244, 255, 257, 258, 260, 269, 276, 277, 282, 302, 307, 308, 313, 353, 354, 362, 363, 364, 365, 366, 372, 375, 378, 379, 398, 403, 404, 409, 413, 425, 434, 436, 443, 445, 482, 484, 493, 494, 495, 496, 498, 500, 502, 504, 510, 512, 544, 564, 566, 574], "signific": [13, 16, 25, 45, 154, 159], "amount": [13, 18, 24, 29, 67, 68, 69, 70, 71, 72, 160, 196, 291, 302], "time": [13, 16, 18, 19, 20, 23, 24, 29, 43, 44, 45, 47, 48, 49, 52, 53, 67, 68, 73, 103, 139, 140, 141, 147, 149, 156, 157, 159, 166, 202, 203, 224, 229, 245, 251, 255, 257, 258, 260, 269, 276, 277, 284, 298, 302, 303, 306, 308, 314, 319, 320, 327, 328, 331, 332, 333, 337, 354, 363, 364, 375, 380, 381, 383, 388, 398, 399, 402, 404, 409, 414, 425, 434, 436, 437, 532], "enhanc": 13, "akin": 13, "binari": [13, 16, 20, 24, 29, 34, 35, 37, 38, 40, 43, 47, 48, 50, 53, 140, 141, 145, 147, 150, 156, 157, 158, 166, 167, 195, 196, 200, 201, 227, 235, 282, 284, 302, 307, 308, 342, 353, 359, 361, 371, 413, 454, 518, 524, 530, 534, 539, 556, 561, 574], "depend": [13, 15, 16, 18, 19, 20, 23, 24, 32, 37, 38, 41, 43, 46, 49, 50, 51, 53, 63, 120, 139, 142, 143, 148, 159, 160, 161, 176, 193, 284, 287, 289, 293, 302, 303, 308, 319, 320, 333, 337, 344, 345, 346, 347, 348, 362, 363, 375, 388, 389, 413, 432, 454, 468, 470, 518, 524, 532], "prng": 13, "variat": [13, 139], "philox": 13, "algorithm": [13, 15, 16, 20, 24, 34, 44, 45, 141, 145, 147, 157, 158, 160, 161, 166, 206, 207, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 239, 240, 242, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 276, 284, 286, 290, 292, 293, 300, 304, 310, 312, 316, 342, 354, 356, 358, 360, 363, 364, 365, 366, 367, 369, 371, 373, 374, 377, 383, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 426, 428, 430, 432, 434, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 524, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "mathrm": [13, 53], "mask": [13, 15, 16, 29, 42, 46, 47, 53, 139, 146, 157, 158, 230, 235, 241, 245, 255, 277, 278, 284, 308, 321, 322, 364, 371, 375, 380, 398, 436, 524, 532, 557, 560, 561], "cdot": [13, 15, 16, 20, 28, 29, 34, 42, 43, 46, 47, 49, 50, 52, 53, 57, 60, 67, 73, 75, 76, 83, 85, 90, 96, 98, 107, 109, 110, 111, 112, 113, 114, 115, 132, 141, 142, 146, 147, 148, 151, 157, 167, 375], "usual": [13, 33, 42, 45, 46, 92, 139, 140, 144, 157, 158, 160, 179, 181, 235, 371, 389, 432, 476], "potenti": [13, 16, 29, 34, 49, 144, 156, 157, 158, 183, 235, 371, 413, 518], "u8": [13, 15, 16, 22, 25, 29, 32, 34, 35, 40, 46, 47, 50, 53, 73, 75, 76, 107, 141, 142, 146, 147, 148, 149, 150, 157, 158, 160, 180, 191, 227, 230, 235, 238, 241, 242, 244, 255, 353, 361, 364, 371, 375, 377, 379, 391, 398], "whose": 13, "either": [13, 16, 19, 20, 22, 24, 26, 37, 40, 43, 45, 46, 49, 50, 53, 58, 59, 61, 68, 69, 72, 88, 89, 120, 142, 145, 151, 154, 157, 158, 159, 160, 166, 167, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 285, 296, 299, 300, 302, 304, 312, 313, 316, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 506, 508, 518, 520, 522, 541, 543, 550, 552], "got": [13, 157, 158, 161, 235, 237, 238, 246, 251, 252, 253, 273, 275, 371, 388, 389], "k": [13, 18, 36, 42, 52, 53, 96, 157, 158, 199, 206, 207, 223, 228, 231, 232, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 255, 259, 261, 275, 277, 278, 287, 300, 320, 322, 342, 348, 362, 365, 366, 371, 372, 373, 374, 375, 377, 380, 398, 407, 411, 436, 506, 508, 535, 561, 562, 569], "drop": [13, 14], "out": [13, 15, 16, 19, 20, 28, 33, 36, 37, 40, 52, 67, 68, 69, 70, 71, 72, 138, 141, 144, 149, 156, 158, 159, 160, 161, 176, 189, 193, 200, 201, 217, 218, 219, 220, 228, 236, 243, 250, 251, 265, 278, 284, 289, 302, 311, 318, 362, 372, 378, 379, 386, 388, 413, 417, 454, 524, 555, 562], "seed": [13, 17, 53, 308], "leq": [13, 34, 116, 142, 149], "dnnl_primitive_attr_get_dropout": [13, 278, 284], "dnnl_primitive_attr_set_dropout": [13, 278, 284], "get_dropout": [13, 532], "set_dropout": [13, 532], "three": [13, 24, 28, 38, 40, 44, 53, 139, 148, 159, 383, 389, 414, 432], "addit": [13, 14, 15, 19, 20, 22, 24, 27, 28, 29, 30, 31, 32, 36, 37, 45, 47, 49, 53, 56, 68, 70, 71, 72, 96, 115, 139, 144, 157, 158, 161, 196, 207, 224, 234, 235, 249, 256, 258, 260, 265, 276, 302, 322, 332, 354, 364, 369, 371, 383, 384, 388, 389, 400, 404, 409, 413, 414, 417, 432, 434, 561], "dnnl_arg_attr_dropout_mask": [13, 53, 278, 308], "through": [13, 15, 24, 27, 32, 37, 42, 44, 46, 140, 155, 156, 157, 269, 332, 364, 383, 388, 390, 391, 393, 394, 413, 425, 432, 476], "dnnl_arg_attr_dropout_prob": [13, 53, 278, 308], "singl": [13, 16, 17, 20, 22, 24, 29, 32, 35, 36, 40, 41, 44, 46, 50, 104, 109, 110, 111, 112, 113, 114, 115, 146, 148, 154, 157, 158, 159, 166, 167, 172, 180, 187, 188, 191, 235, 246, 275, 277, 284, 287, 302, 308, 320, 322, 348, 364, 371, 375, 388, 436, 518, 524], "hold": [13, 18, 34, 53, 109, 110, 111, 112, 113, 114, 115, 241, 244, 269, 284, 322, 363, 375, 378, 388, 413, 425, 532, 561], "dnnl_arg_attr_dropout_se": [13, 53, 278, 308], "benefici": [14, 34, 45, 159, 523], "speedup": [14, 414], "how": [14, 15, 16, 18, 20, 22, 26, 29, 33, 34, 36, 37, 42, 43, 44, 46, 47, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 83, 88, 89, 98, 99, 131, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 157, 158, 159, 160, 166, 167, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 252, 269, 273, 275, 284, 287, 302, 308, 320, 348, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 378, 379, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 524], "narrow": 14, "bf16": [14, 15, 20, 22, 25, 29, 32, 34, 35, 42, 43, 45, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 145, 146, 147, 148, 149, 150, 154, 157, 158, 177, 178, 180, 191, 231, 277, 353, 436], "tf32": [14, 177, 178], "furthermor": [14, 29, 67], "do": [14, 15, 16, 18, 20, 24, 25, 32, 36, 44, 45, 49, 57, 98, 138, 139, 147, 151, 154, 159, 161, 176, 193, 210, 211, 237, 238, 244, 246, 252, 253, 262, 273, 275, 302, 378, 413, 414, 516, 518], "affect": [14, 15, 24, 36, 46, 49, 140, 159, 176, 314, 561], "remain": [14, 24, 28, 29, 67, 159, 243, 244, 269, 378, 379, 413, 425, 518, 524], "3": [14, 15, 16, 32, 34, 36, 38, 40, 43, 46, 49, 53, 59, 60, 61, 86, 91, 105, 120, 144, 148, 152, 157, 158, 159, 172, 179, 180, 191, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 249, 250, 251, 252, 253, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 302, 308, 332, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 384, 386, 388, 389, 390, 391, 393, 394, 400, 402, 404, 407, 411, 413, 414, 415, 417, 419, 421, 423, 426, 428, 430, 432, 434, 476, 518], "disabl": [14, 24, 27, 30, 31, 36, 48, 143, 144, 160, 290, 292, 297, 301, 306, 314, 327, 328, 458, 460, 464, 466], "smaller": [14, 24, 64, 65, 96, 146, 255, 398], "least": [14, 19, 23, 53, 66, 143, 287, 320, 321, 346, 348, 383, 388, 516, 560], "accur": [14, 29, 49, 245, 380], "expon": [14, 32, 104, 108, 154, 166, 167, 172, 180, 191], "mantissa": [14, 17, 32, 154, 172, 180, 191, 212, 213], "ignor": [14, 29, 31, 32, 57, 58, 61, 68, 88, 89, 98, 99, 251, 299, 302, 309, 388, 494, 496], "compli": [14, 414], "second": [14, 15, 27, 28, 40, 42, 49, 67, 106, 109, 110, 111, 112, 113, 114, 115, 120, 176, 193, 206, 207, 237, 252, 269, 273, 284, 302, 332, 383, 390, 391, 393, 394, 413, 425, 518, 524], "dnnl_primitive_attr_set_fpmath_mode_v2": [14, 278, 284], "set_fpmath_mod": [14, 277, 436, 532], "weight": [14, 15, 18, 24, 26, 27, 28, 29, 32, 36, 44, 45, 46, 47, 49, 53, 67, 68, 69, 70, 71, 72, 96, 142, 146, 148, 154, 159, 160, 161, 176, 182, 190, 193, 204, 205, 206, 207, 210, 211, 224, 229, 230, 231, 232, 234, 236, 238, 242, 243, 244, 249, 255, 256, 258, 260, 261, 262, 263, 265, 269, 276, 277, 284, 290, 292, 297, 301, 302, 305, 308, 313, 353, 354, 363, 364, 365, 366, 369, 372, 377, 378, 379, 384, 391, 398, 399, 400, 404, 409, 411, 413, 414, 417, 425, 434, 437, 443, 445, 447, 449, 456, 457, 458, 460, 462, 463, 464, 466, 478, 480, 482, 484, 488, 489, 490, 492, 494, 496, 498, 500, 502, 504, 510, 512, 514, 524, 532, 535, 544, 564, 566], "de": [14, 73, 75, 76, 160, 277, 413, 436], "refer": [14, 15, 16, 18, 19, 20, 22, 24, 26, 27, 29, 32, 33, 34, 36, 40, 43, 46, 47, 50, 51, 52, 53, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 207, 230, 231, 235, 237, 238, 242, 244, 246, 273, 275, 284, 285, 287, 293, 296, 299, 302, 308, 320, 348, 365, 371, 375, 377, 379, 383, 388, 389, 413, 414, 432, 449, 480, 561], "tutori": [14, 32, 35, 53, 241, 245, 255, 277, 353], "decompress": [14, 32, 53, 277, 353], "onednn_default_fpmath_mod": 14, "dnnl_set_default_fpmath_mod": [14, 278, 295], "set_default_fpmath_mod": [14, 314, 342], "build": [14, 18, 48, 51, 131, 152, 214, 215, 228, 229, 231, 232, 236, 237, 238, 243, 244, 246, 252, 269, 273, 275, 314, 332, 340, 362, 363, 365, 366, 372, 378, 379, 389, 425, 476], "arm": [14, 160, 340], "bfloat16": [14, 30, 32, 45, 168, 171, 172, 180, 231, 353, 365], "kernel": [14, 15, 24, 28, 31, 33, 38, 42, 48, 57, 58, 67, 68, 69, 70, 71, 72, 98, 99, 141, 144, 156, 157, 158, 159, 161, 183, 184, 206, 207, 228, 229, 231, 232, 235, 236, 253, 262, 264, 274, 278, 284, 304, 314, 322, 326, 362, 363, 365, 366, 371, 372, 380, 413, 415, 520, 522, 524, 535, 561], "introduc": [14, 36, 38, 42, 49, 143, 154, 159, 388, 414], "typic": [15, 16, 19, 20, 26, 37, 38, 42, 43, 45, 46, 49, 52, 96, 137, 139, 146, 149, 150, 159, 161, 187, 188, 237, 238, 241, 252, 255, 273, 277, 302, 308, 311, 375, 388, 398, 436], "bandwidth": [15, 45, 413], "pressur": [15, 45], "lead": [15, 18, 20, 22, 24, 25, 29, 32, 34, 40, 43, 45, 49, 50, 52, 146, 157, 158, 159, 183, 235, 245, 287, 320, 322, 348, 371, 380, 388, 390, 393, 394, 561, 562], "append": [15, 36, 157, 158, 235, 284, 371, 524], "mechan": [15, 33, 36, 41, 48, 51, 138, 139, 243, 244, 378, 379], "just": [15, 16, 24, 28, 29, 31, 34, 45, 48, 143, 144, 155, 157, 158, 159, 160, 166, 176, 230, 231, 235, 242, 244, 365, 371, 377, 379, 380, 383, 388, 389, 390, 391, 392, 393, 394, 395, 413, 432], "like": [15, 19, 20, 24, 28, 29, 37, 45, 47, 49, 51, 52, 60, 96, 141, 148, 159, 160, 284, 332, 375, 380, 388, 390, 391, 392, 393, 394, 395, 523, 524], "dnnl_post_ops_t": [15, 278, 284, 524], "post_op": [15, 44, 157, 158, 161, 226, 227, 230, 234, 235, 245, 249, 255, 256, 261, 263, 278, 284, 321, 322, 342, 358, 360, 364, 369, 371, 380, 384, 398, 400, 411, 414, 485, 532, 560, 561], "attach": [15, 16, 24, 26, 44, 45, 139, 157, 158, 235, 371, 383, 388, 389, 390, 392, 393, 394, 395, 432, 516, 524], "set_post_op": [15, 29, 44, 157, 158, 226, 227, 230, 234, 235, 245, 249, 255, 256, 261, 263, 358, 360, 364, 369, 371, 380, 384, 398, 400, 411, 414, 532, 561], "dnnl_primitive_attr_set_post_op": [15, 278, 284], "simpl": [15, 16, 25, 29, 48, 140, 155, 156, 160, 228, 236, 237, 241, 245, 246, 252, 255, 273, 275, 362, 364, 372, 375, 380, 388, 390, 392, 393, 394, 395, 398], "po": [15, 245, 255, 380, 398, 561], "assert": [15, 18, 36, 159, 229, 231, 232, 237, 238, 241, 243, 244, 246, 252, 273, 275, 302, 363, 365, 366, 375, 390, 391, 392, 393, 394, 395, 518], "len": [15, 287, 320, 348, 524], "append_someth": 15, "append_something_els": 15, "note": [15, 16, 18, 24, 32, 36, 44, 45, 46, 49, 69, 139, 148, 157, 158, 159, 160, 176, 224, 225, 233, 235, 237, 238, 241, 244, 246, 258, 259, 260, 264, 269, 273, 275, 276, 289, 308, 328, 332, 354, 356, 363, 364, 367, 371, 375, 378, 379, 388, 404, 407, 409, 415, 425, 434, 454], "matter": [15, 36, 45, 49, 390, 391, 393, 394], "further": [15, 28, 29, 33, 67, 138, 147, 176, 193, 414], "would": [15, 16, 18, 20, 24, 28, 29, 31, 38, 43, 44, 45, 49, 50, 53, 141, 146, 157, 158, 159, 235, 241, 284, 285, 287, 302, 313, 320, 348, 364, 371, 375, 388, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 518, 524, 532, 538, 564, 566], "togeth": [15, 39, 159, 313, 321, 414, 443, 482, 498, 502, 510, 512, 523, 560, 564], "anoth": [15, 18, 28, 45, 118, 139, 144, 148, 157, 159, 237, 238, 252, 273, 308, 332, 363, 383, 388, 389, 432, 476, 485, 518], "sequenc": [15, 19, 28, 29, 42, 49, 144, 176, 243, 244, 269, 284, 378, 379, 383, 389, 414, 425, 432, 524], "appear": [15, 26, 45, 149, 159, 160], "maximum": [15, 16, 19, 22, 36, 40, 45, 111, 141, 156, 185, 243, 244, 264, 269, 281, 291, 320, 375, 415, 425], "32": [15, 25, 45, 46, 49, 154, 158, 172, 176, 180, 191, 199, 223, 231, 232, 234, 243, 244, 246, 249, 275, 278, 284, 287, 308, 320, 348, 364, 365, 366, 369, 384, 524, 532], "page": [15, 19, 26, 45, 46, 70, 144, 145, 146, 151, 433], "moreov": [15, 28, 31, 34, 46, 139, 176, 193], "actual": [15, 16, 18, 19, 29, 36, 45, 47, 49, 139, 148, 157, 158, 159, 175, 192, 194, 216, 235, 284, 302, 308, 371, 375, 383, 388, 413, 516, 518, 532, 544], "instanc": [15, 16, 18, 20, 28, 29, 31, 36, 44, 49, 53, 139, 143, 146, 155, 159, 176, 254, 302, 320, 330, 335, 348, 388, 396, 473, 523, 557, 561], "veri": [15, 16, 18, 45, 49, 154, 159, 383, 388], "slow": 15, "robust": [15, 44, 45], "code": [15, 19, 24, 25, 26, 28, 29, 30, 31, 33, 36, 37, 44, 45, 49, 51, 138, 140, 143, 144, 146, 151, 156, 157, 158, 159, 160, 235, 237, 238, 252, 253, 273, 302, 314, 363, 364, 371, 378, 379, 383, 389, 390, 391, 392, 393, 394, 395, 413, 414, 432, 438], "inspect": [15, 19, 308, 340, 388], "index": [15, 20, 22, 26, 28, 29, 34, 36, 43, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 159, 161, 228, 236, 251, 278, 284, 289, 294, 302, 303, 308, 319, 329, 340, 343, 346, 347, 362, 363, 372, 378, 379, 383, 388, 389, 432, 451, 454, 472, 474, 516, 518, 524, 530, 532, 535, 538, 556], "less": [15, 22, 29, 53, 96, 139, 147, 166, 167, 269, 306, 327, 364, 425, 472], "than": [15, 18, 22, 24, 27, 29, 32, 34, 45, 49, 53, 64, 65, 96, 131, 146, 147, 151, 159, 160, 166, 167, 207, 214, 215, 231, 232, 236, 255, 306, 327, 365, 366, 372, 388, 398, 414, 472], "its": [15, 18, 19, 22, 24, 30, 32, 34, 36, 40, 41, 42, 44, 47, 49, 52, 53, 104, 106, 138, 139, 148, 156, 159, 160, 176, 195, 255, 269, 277, 302, 330, 334, 363, 364, 388, 389, 398, 406, 425, 432, 436, 472, 485, 516, 530, 554, 557], "popular": [15, 16, 41, 159, 388], "activ": [15, 16, 18, 20, 23, 28, 40, 46, 47, 64, 80, 92, 101, 148, 159, 176, 193, 206, 207, 255, 262, 278, 284, 313, 398, 413, 476, 524, 532, 535, 564, 566], "preced": [15, 20, 24, 28, 30, 31, 40, 48, 52, 58, 68, 69, 72, 141, 143, 144, 149, 160, 176, 413], "inner": [15, 28, 32, 44, 49, 159, 176, 200, 201, 229, 256, 282, 307, 353, 363, 401, 413, 487, 488, 489, 490, 491, 492, 518, 574], "product": [15, 28, 32, 40, 44, 49, 53, 96, 131, 157, 158, 200, 201, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 242, 247, 248, 249, 250, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 276, 278, 282, 287, 302, 307, 320, 348, 353, 354, 356, 358, 360, 362, 363, 365, 366, 367, 369, 371, 372, 377, 382, 384, 386, 396, 401, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 426, 428, 430, 434, 487, 488, 489, 490, 491, 492, 518, 574], "dnnl_post_ops_append_eltwis": [15, 278, 284], "append_eltwis": [15, 44, 157, 158, 226, 230, 234, 235, 249, 255, 256, 261, 263, 358, 364, 369, 371, 384, 398, 400, 411, 414, 524], "simplic": [15, 16, 148, 159, 233, 241, 245, 367, 375, 380, 383, 389, 432], "alg": [15, 160, 413, 414], "alpha": [15, 20, 29, 34, 43, 46, 52, 77, 78, 84, 85, 92, 105, 142, 157, 158, 161, 183, 184, 206, 207, 226, 228, 231, 232, 234, 235, 236, 245, 249, 251, 255, 256, 259, 261, 277, 278, 284, 287, 293, 300, 305, 313, 320, 342, 348, 358, 362, 365, 366, 369, 371, 372, 380, 384, 388, 398, 400, 407, 411, 414, 436, 468, 470, 506, 508, 524, 526, 528, 535, 564, 566], "beta": [15, 20, 29, 34, 43, 50, 52, 59, 60, 83, 84, 85, 90, 91, 104, 125, 126, 146, 157, 158, 161, 183, 184, 206, 207, 226, 228, 231, 232, 234, 235, 236, 245, 249, 251, 256, 259, 261, 278, 284, 285, 287, 293, 296, 299, 300, 313, 320, 342, 348, 358, 362, 365, 366, 369, 371, 372, 380, 384, 388, 400, 407, 411, 414, 468, 470, 506, 508, 524, 535, 564, 566], "replac": [15, 34, 49, 53, 64, 65, 144, 148, 149, 155, 160, 380, 381, 388], "operatornam": [15, 16, 32, 34, 157], "preserv": [15, 18, 44, 45, 228, 236, 362, 372], "exist": [15, 19, 32, 33, 36, 38, 53, 138, 210, 211, 302, 329, 333, 337, 518], "prior": [15, 284, 303, 308, 309, 346, 388, 524, 530, 531, 561], "shift": [15, 28, 46, 49, 60, 90, 195, 196, 225, 227, 254, 257, 277, 278, 284, 285, 296, 299, 308, 356, 360, 396, 402, 436, 494, 496, 532], "multipli": [15, 18, 28, 40, 42, 49, 148, 185, 245, 253, 269, 274, 281, 284, 287, 302, 318, 320, 348, 380, 389, 425, 432, 524, 556], "scale": [15, 22, 26, 27, 28, 29, 36, 40, 41, 44, 47, 49, 53, 60, 73, 75, 76, 77, 78, 83, 88, 89, 90, 91, 107, 146, 147, 150, 151, 157, 158, 161, 172, 183, 184, 191, 195, 196, 225, 227, 230, 235, 238, 241, 244, 254, 255, 257, 267, 272, 277, 278, 284, 285, 287, 296, 299, 308, 312, 318, 320, 321, 322, 348, 356, 360, 364, 371, 375, 376, 378, 379, 380, 381, 391, 396, 398, 399, 402, 421, 422, 430, 436, 437, 494, 496, 524, 531, 532, 541, 543, 556, 560, 561], "residu": [15, 38, 243, 523], "learn": [15, 16, 24, 28, 29, 30, 32, 41, 44, 45, 49, 139, 168, 171, 262, 340, 413, 523], "block": [15, 19, 26, 28, 36, 38, 42, 144, 156, 160, 161, 175, 176, 192, 193, 206, 207, 263, 302, 322, 340, 388, 413, 518, 523, 562], "previous": [15, 46, 237, 238, 252, 273, 302, 364, 389, 413, 432, 516, 518, 532], "scenario": [15, 32, 33, 40, 138, 139, 141, 182, 190, 364], "previou": [15, 16, 24, 34, 40, 42, 44, 46, 146, 148, 159, 228, 236, 241, 255, 277, 284, 362, 372, 375, 398, 436, 524], "magnitud": 15, "operand": [15, 40, 49, 160, 284, 524], "s8": [15, 16, 20, 22, 25, 29, 32, 34, 36, 40, 43, 46, 47, 50, 53, 73, 75, 76, 107, 141, 142, 146, 147, 148, 149, 150, 157, 158, 160, 180, 191, 230, 235, 238, 241, 242, 244, 255, 267, 277, 364, 371, 375, 377, 379, 391, 398, 421, 436], "gemm": [15, 18, 24, 29, 49, 159, 161, 243, 244, 379, 414], "_point": 15, "origin": [15, 16, 20, 34, 43, 45, 46, 50, 88, 89, 146, 147, 150, 151, 159, 160, 166, 255, 277, 284, 293, 302, 364, 375, 398, 436, 524], "reinterpret": [15, 29, 33, 284, 524], "_data": 15, "_type": 15, "1x1": [15, 161, 284, 524], "seen": [15, 414], "mobilenet_v1": 15, "stack": [15, 148], "opportun": 15, "dnnl_post_ops_append_dw": [15, 278, 284], "append_dw": [15, 524], "better": [15, 22, 24, 45, 154, 159, 161, 302, 363, 375, 380, 388, 391, 413, 414], "readabl": [15, 38, 388, 432], "assum": [15, 16, 19, 23, 24, 29, 49, 51, 67, 73, 75, 76, 107, 142, 144, 147, 159, 224, 234, 241, 245, 249, 256, 258, 260, 265, 269, 276, 284, 287, 302, 308, 320, 348, 354, 369, 375, 378, 379, 380, 384, 388, 389, 400, 404, 409, 413, 414, 417, 425, 432, 434, 518, 524], "2d": [15, 20, 29, 34, 43, 47, 49, 52, 53, 96, 141, 142, 147, 149, 150, 156, 159, 161, 176, 193, 284, 290, 292, 304, 312, 388, 414, 428, 429, 456, 458, 460, 462, 464, 466, 520, 522, 524], "notat": [15, 18, 34, 42, 53, 159, 176, 193], "conv_1x1": 15, "spatial": [15, 18, 20, 28, 29, 43, 47, 52, 57, 58, 67, 68, 69, 70, 71, 72, 88, 89, 98, 99, 141, 142, 147, 149, 159, 161, 176, 193, 284, 290, 292, 302, 304, 312, 388, 456, 458, 460, 462, 464, 466, 476, 520, 522, 524, 541, 543], "kh": [15, 16, 28, 29, 47, 49, 57, 67, 68, 98, 141, 234, 238, 249, 262, 263, 264, 284, 369, 384, 413, 414, 415, 524], "kw": [15, 16, 28, 29, 47, 49, 57, 67, 98, 141, 234, 238, 249, 262, 263, 264, 284, 369, 384, 413, 414, 415, 524], "conv_dw": 15, "g": [15, 16, 18, 20, 23, 24, 28, 29, 34, 36, 38, 43, 45, 47, 50, 51, 67, 83, 90, 91, 149, 155, 156, 157, 158, 159, 160, 193, 224, 234, 235, 237, 238, 241, 244, 245, 252, 258, 260, 269, 273, 276, 277, 278, 284, 302, 354, 369, 371, 375, 380, 388, 390, 391, 393, 394, 404, 409, 425, 434, 436, 454, 474, 524, 532, 534, 539, 556], "oc": [15, 16, 28, 29, 47, 67, 228, 234, 236, 238, 249, 256, 258, 262, 263, 278, 284, 362, 369, 372, 384, 400, 404, 413, 414, 524], "ic": [15, 16, 28, 29, 47, 67, 73, 107, 147, 150, 225, 226, 227, 228, 233, 234, 236, 237, 238, 249, 250, 252, 254, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 278, 284, 356, 358, 360, 362, 367, 369, 372, 384, 386, 396, 400, 404, 407, 413, 414, 415, 417, 419, 421, 423, 426, 428, 430, 524], "pad_l": 15, "pad_r": 15, "conv_": [15, 16], "dw": [15, 28, 29, 57, 67, 68, 98, 141, 264, 415], "dst_": [15, 16, 34, 49, 73, 104, 107], "n": [15, 16, 18, 20, 22, 26, 28, 29, 36, 40, 42, 43, 46, 47, 50, 52, 53, 57, 59, 60, 62, 66, 67, 90, 91, 94, 96, 98, 132, 141, 142, 144, 146, 147, 149, 151, 152, 157, 158, 159, 161, 176, 193, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 287, 289, 302, 318, 320, 321, 322, 342, 348, 354, 356, 358, 360, 362, 365, 367, 369, 371, 372, 373, 374, 375, 377, 379, 380, 382, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 518, 524, 557, 560, 561, 562, 569], "oc_": 15, "ceil": [15, 57, 98, 183, 184, 284, 524], "oh_": 15, "ow_": 15, "oh_conv_1x1": 15, "ow_conv_1x1": 15, "height": [15, 28, 29, 67, 68, 98, 99, 159, 176, 193, 225, 226, 227, 233, 234, 249, 250, 254, 256, 259, 264, 265, 266, 267, 268, 270, 272, 290, 292, 304, 356, 358, 360, 363, 367, 369, 384, 386, 396, 400, 407, 415, 417, 419, 421, 423, 426, 430, 456, 458, 460, 462, 464, 466, 520, 522], "width": [15, 28, 29, 67, 68, 98, 99, 159, 176, 193, 225, 226, 227, 233, 234, 249, 250, 254, 256, 259, 264, 265, 266, 267, 268, 270, 272, 290, 292, 304, 356, 358, 360, 363, 367, 369, 384, 386, 396, 400, 407, 415, 417, 419, 421, 423, 426, 430, 456, 458, 460, 462, 464, 466, 520, 522], "conv": [15, 16, 29, 44, 140, 144, 155, 160, 228, 230, 231, 232, 236, 237, 238, 252, 262, 263, 273, 362, 364, 365, 366, 372, 391, 413, 414], "bia": [15, 16, 17, 28, 29, 46, 47, 53, 62, 63, 67, 70, 83, 90, 91, 96, 148, 161, 167, 176, 193, 196, 204, 205, 212, 213, 224, 230, 231, 232, 234, 236, 249, 256, 258, 260, 261, 269, 276, 284, 290, 292, 297, 301, 308, 313, 354, 363, 364, 365, 366, 369, 372, 384, 400, 404, 409, 411, 425, 434, 443, 445, 458, 460, 464, 466, 482, 484, 490, 492, 498, 500, 502, 504, 510, 512, 514, 524, 535, 544, 564, 566], "though": [15, 18, 25, 45, 49, 148, 214, 215, 375, 380, 388], "convent": [15, 20, 22, 26, 29, 34, 40, 43, 45, 47, 50, 52, 53, 54, 57, 64, 66, 67, 77, 80, 81, 84, 86, 92, 93, 96, 98, 116, 121, 123, 125, 134, 141, 142, 146, 147, 148, 149, 150, 151, 159, 160, 302, 353, 388, 413, 433], "impli": [15, 131, 157, 158, 196, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "part": [15, 16, 19, 24, 37, 41, 42, 48, 140, 143, 157, 158, 235, 237, 238, 246, 252, 273, 275, 302, 322, 371, 388, 392, 395, 413, 518, 561, 562], "dst_1x1": 15, "wei_dw": 15, "dst_dw": 15, "dnnl_format_tag_ani": [15, 141, 148, 176, 193, 228, 236, 286, 290, 292, 297, 302, 305, 308, 310, 312, 313, 362, 372], "coincid": [15, 159, 322, 561], "util": [15, 18, 31, 36, 139, 157, 158, 235, 269, 282, 288, 371, 389, 425], "lifetim": [15, 37, 138, 207, 237, 238, 246, 252, 273, 275, 284, 303, 308, 346], "thu": [15, 29, 53, 139, 269, 413, 425], "gain": [15, 44, 414], "expect": [15, 19, 20, 24, 29, 36, 41, 43, 47, 49, 50, 52, 53, 140, 141, 147, 157, 158, 160, 161, 166, 167, 195, 206, 207, 235, 251, 253, 284, 321, 322, 371, 388, 389, 413, 414, 454, 516, 532, 534, 539, 544, 556, 557, 560, 561], "dnnl_post_ops_append_binari": [15, 278, 284], "append_binari": [15, 157, 158, 227, 235, 360, 371, 524], "desc": [15, 16, 18, 19, 33, 36, 44, 45, 138, 140, 144, 157, 158, 159, 161, 206, 207, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 302, 346, 347, 354, 356, 358, 360, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 377, 378, 379, 380, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 520, 522, 524, 526, 528, 532, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "src1": [15, 284, 451, 524], "_1": [15, 97, 100], "per": [15, 22, 26, 29, 41, 43, 47, 50, 53, 68, 70, 71, 72, 73, 75, 76, 83, 90, 91, 106, 107, 139, 150, 229, 267, 302, 314, 375, 414, 421, 524, 567], "broadcast": [15, 22, 26, 42, 53, 56, 62, 74, 96, 97, 100, 103, 130, 133, 142, 146, 151, 284, 286, 524], "channel": [15, 20, 28, 29, 41, 43, 46, 47, 50, 52, 60, 62, 63, 67, 68, 69, 70, 71, 72, 73, 75, 76, 83, 90, 91, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 142, 148, 149, 150, 161, 166, 167, 176, 193, 224, 225, 226, 227, 233, 234, 238, 249, 250, 254, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 300, 302, 354, 356, 358, 360, 363, 367, 369, 384, 386, 388, 391, 396, 400, 402, 404, 407, 409, 413, 415, 417, 419, 421, 423, 425, 426, 427, 428, 430, 434, 476, 524], "format_tag": [15, 16, 19, 22, 29, 44, 45, 47, 53, 142, 145, 147, 148, 157, 158, 159, 160, 161, 199, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 239, 240, 242, 243, 244, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 302, 342, 354, 356, 358, 360, 365, 366, 367, 369, 371, 373, 374, 377, 378, 379, 383, 384, 386, 388, 389, 396, 398, 399, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 437, 443, 445, 456, 458, 460, 462, 464, 466, 482, 484, 488, 490, 492, 498, 500, 502, 504, 510, 512, 516, 518, 537, 543, 564, 566], "tag": [15, 16, 18, 29, 36, 45, 47, 53, 141, 147, 157, 158, 161, 176, 193, 194, 216, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 239, 240, 242, 249, 250, 251, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 278, 302, 308, 354, 356, 358, 360, 363, 364, 365, 366, 367, 369, 371, 373, 374, 377, 383, 384, 386, 388, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 518], "later": [15, 19, 23, 24, 45, 83, 90, 159, 224, 225, 250, 258, 260, 265, 276, 354, 356, 386, 388, 404, 409, 417, 434], "mismatch": [15, 45, 160, 161, 251, 388], "suboptim": [15, 20, 29, 34, 43, 50, 52, 302, 414, 516], "initi": [15, 19, 28, 30, 33, 45, 53, 139, 142, 148, 157, 158, 159, 161, 168, 171, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 241, 242, 243, 244, 245, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 270, 272, 274, 276, 277, 286, 290, 292, 297, 302, 303, 305, 310, 312, 313, 314, 319, 322, 332, 334, 346, 347, 354, 356, 358, 360, 363, 365, 366, 367, 369, 371, 372, 375, 377, 378, 379, 380, 384, 386, 388, 396, 398, 400, 402, 404, 409, 411, 417, 419, 421, 423, 426, 430, 434, 436, 443, 445, 456, 458, 460, 462, 464, 466, 482, 484, 488, 490, 492, 498, 500, 502, 504, 510, 512, 516, 537, 543, 561, 564, 566], "get_params_binari": [15, 524], "dnnl_post_ops_append_prelu": [15, 278, 284], "append_prelu": [15, 524], "int": [15, 16, 49, 144, 152, 157, 158, 159, 172, 175, 176, 201, 207, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 289, 302, 303, 306, 308, 309, 314, 315, 316, 318, 319, 320, 322, 327, 328, 333, 342, 343, 346, 347, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 561, 563, 564, 565, 566, 567], "assumpt": [15, 28, 147, 390, 391, 392, 393, 394, 395, 398, 436], "dnnl_arg_attr_multiple_post_op": [15, 22, 29, 34, 43, 47, 50, 53, 141, 145, 147, 150, 227, 278, 308, 360, 524], "dnnl_arg_weight": [15, 16, 29, 44, 47, 53, 142, 228, 229, 230, 231, 232, 234, 236, 239, 240, 241, 242, 245, 249, 255, 256, 261, 262, 263, 265, 277, 278, 308, 362, 364, 365, 366, 369, 372, 373, 374, 375, 377, 380, 384, 398, 400, 411, 413, 414, 417, 436, 524], "fp32": [15, 24, 32, 45], "plain": [15, 16, 26, 53, 146, 176, 193, 199, 223, 284, 302, 414, 524], "ab": [15, 28, 34, 36, 40, 42, 46, 47, 53, 55, 157, 158, 166, 167, 185, 193, 199, 223, 227, 235, 242, 255, 277, 281, 284, 360, 371, 377, 398, 436, 518, 524], "acb": [15, 193, 284, 524], "acdb": [15, 28, 193, 284, 524], "acdeb": [15, 193, 284, 524], "th": [15, 46, 109, 110, 111, 112, 113, 114, 115, 284, 524, 532], "dedic": [15, 36, 44, 156, 157, 158, 235, 284, 371, 524, 532], "along": [15, 37, 53, 66, 75, 76, 109, 110, 111, 112, 113, 114, 115, 123, 140, 145, 149, 150, 155, 160, 161, 199, 223, 277, 284, 302, 315, 426, 427, 428, 429, 436, 524, 532, 546, 548], "common": [15, 16, 19, 37, 45, 139, 157, 158, 160, 214, 215, 235, 269, 282, 284, 307, 371, 383, 388, 389, 425, 432, 524, 532], "whole": [15, 16, 24, 142, 157, 158, 159, 235, 269, 284, 371, 425, 524, 532], "laid": [15, 19, 28, 159, 176, 193, 284, 302, 311, 388, 413, 524], "cnn": [15, 20, 28, 29, 35, 36, 45, 46, 47, 48, 50, 141, 149, 154, 176, 193, 229, 230, 231, 232, 284, 302, 353, 375, 388, 413, 524], "4d": [15, 42, 47, 90, 91, 159, 176, 193, 284, 302, 388, 524], "h": [15, 20, 22, 28, 29, 32, 42, 43, 47, 51, 52, 59, 60, 62, 141, 142, 146, 155, 159, 161, 165, 166, 170, 171, 172, 174, 175, 176, 178, 179, 184, 186, 188, 190, 193, 196, 198, 199, 201, 203, 205, 207, 209, 211, 213, 215, 216, 218, 220, 222, 228, 229, 232, 236, 237, 238, 242, 243, 244, 246, 247, 251, 252, 253, 262, 269, 273, 274, 275, 284, 302, 362, 366, 372, 377, 382, 383, 388, 389, 390, 391, 392, 393, 394, 395, 413, 425, 432, 474, 475, 476, 524, 567], "w": [15, 20, 22, 28, 29, 43, 46, 47, 52, 53, 59, 60, 62, 141, 142, 146, 148, 159, 172, 176, 180, 193, 228, 229, 231, 232, 236, 244, 251, 262, 263, 284, 302, 362, 365, 366, 372, 378, 379, 388, 413, 524], "let": [15, 16, 29, 44, 45, 47, 67, 68, 147, 159, 179, 181, 231, 232, 241, 262, 365, 366, 375, 383, 388, 389, 413, 414, 432], "consid": [15, 16, 18, 20, 26, 29, 32, 42, 43, 45, 49, 50, 151, 159, 196, 290, 292, 302, 304, 375, 383, 388, 485], "pattern": [15, 19, 36, 41, 279, 390, 393, 394], "pretti": [15, 388], "topologi": [15, 29, 44, 141, 149, 228, 229, 231, 232, 255, 269, 277, 362, 363, 365, 366, 398, 413, 425, 436], "resnet": [15, 40], "famili": [15, 24, 49, 168, 171], "append_sum": [15, 245, 380, 524], "eltwise_relu": [15, 44, 157, 158, 167, 226, 229, 230, 231, 232, 234, 235, 248, 249, 250, 251, 253, 255, 256, 261, 263, 274, 358, 363, 364, 365, 366, 369, 371, 383, 384, 386, 388, 389, 398, 400, 411, 414, 432, 564, 566], "slope": [15, 20, 29, 92, 105, 106, 196, 230, 251, 313, 364, 388, 564, 566], "f": [15, 23, 28, 53, 125, 126, 145, 147, 148, 157, 158, 193, 224, 225, 226, 227, 230, 233, 234, 235, 241, 242, 243, 244, 245, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 276, 278, 284, 287, 320, 348, 354, 356, 358, 360, 364, 367, 369, 371, 375, 377, 379, 380, 384, 386, 388, 396, 398, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 426, 428, 430, 434, 524, 532], "unus": [15, 278, 313], "convolution_forward": [15, 16, 19, 29, 44, 140, 229, 230, 231, 232, 234, 262, 263, 290, 342, 363, 364, 365, 366, 369, 413, 414, 456, 458, 530], "conv_d": [15, 414, 524], "hypothet": 15, "illustr": 15, "set_scales_mask": [15, 16, 53, 230, 241, 245, 255, 267, 364, 375, 376, 380, 381, 398, 399, 421, 532], "cover": [15, 16, 36, 45, 49, 159, 388, 413], "eltwise_tanh": [15, 167, 276, 434, 564, 566], "eltwise_linear": [15, 167], "linear": [15, 19, 34, 73, 75, 76, 88, 89, 107, 147, 159, 166, 167, 183, 184, 258, 287, 293, 312, 389, 405, 432, 516], "dnnl_arg_src": [15, 16, 20, 29, 34, 43, 44, 47, 50, 52, 53, 141, 142, 145, 147, 149, 150, 225, 228, 229, 230, 231, 232, 234, 236, 239, 240, 241, 242, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 277, 278, 303, 308, 319, 346, 347, 356, 362, 363, 364, 365, 366, 369, 372, 373, 374, 375, 377, 380, 382, 383, 384, 386, 388, 389, 396, 398, 400, 402, 407, 411, 413, 414, 415, 417, 419, 421, 423, 426, 428, 432, 436, 474, 530, 538], "dnnl_arg_dst": [15, 16, 20, 22, 26, 29, 34, 43, 44, 47, 50, 52, 53, 141, 142, 145, 147, 149, 150, 151, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 240, 241, 242, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 277, 278, 308, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 377, 380, 382, 383, 384, 386, 388, 389, 396, 398, 400, 402, 407, 411, 413, 414, 415, 417, 419, 421, 423, 426, 428, 430, 432, 436], "s_": 15, "mobilenet": 15, "pad": [15, 28, 29, 42, 57, 58, 67, 68, 69, 70, 71, 72, 98, 99, 141, 148, 159, 160, 161, 166, 167, 206, 207, 234, 244, 249, 262, 263, 264, 269, 278, 284, 290, 292, 302, 304, 308, 363, 369, 378, 384, 413, 414, 415, 425, 456, 458, 460, 462, 464, 466, 518, 520, 522, 524, 535], "dnnl_arg_attr_post_op_dw": [15, 29, 278, 308], "cpd": 15, "dw_weight_md": 15, "exec_arg_md": [15, 206, 346, 347, 530, 538], "dw_bias_md": 15, "dnnl_arg_bia": [15, 29, 47, 53, 148, 224, 228, 229, 230, 231, 232, 234, 236, 243, 244, 249, 256, 258, 260, 261, 269, 276, 278, 308, 354, 362, 364, 365, 366, 369, 372, 378, 379, 384, 400, 404, 409, 411, 425, 434], "behaviour": 15, "relu_": 15, "scales_": 15, "conv_dst_md": [15, 228, 230, 231, 232, 234, 236, 262, 263, 362, 364, 365, 366, 369, 372, 413, 414], "mb": [15, 27, 28, 144, 261, 284, 411, 524, 532, 570, 571, 572], "nchw": [15, 20, 28, 43, 52, 141, 147, 149, 193, 225, 226, 229, 230, 231, 232, 233, 234, 248, 249, 250, 253, 256, 259, 262, 263, 264, 265, 266, 267, 268, 270, 272, 274, 356, 358, 363, 364, 365, 366, 367, 369, 383, 384, 386, 388, 389, 400, 407, 413, 414, 415, 417, 419, 421, 423, 426, 430, 432], "abcd": [15, 28, 160, 193, 270, 413, 414, 426], "binary_add": [15, 157, 158, 167, 227, 235, 360, 371], "src1_md": 15, "unordered_map": [15, 224, 225, 226, 227, 229, 231, 232, 233, 234, 237, 238, 239, 240, 242, 243, 244, 246, 249, 250, 252, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 278, 346, 347, 354, 356, 358, 360, 363, 365, 366, 367, 369, 373, 374, 377, 378, 379, 384, 386, 390, 391, 392, 393, 394, 395, 396, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430, 434, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 519, 521, 524, 525, 527, 530, 536, 538, 540, 542, 545, 547, 549, 551, 555, 563, 565], "arg": [15, 16, 44, 228, 236, 278, 284, 303, 308, 319, 346, 347, 362, 372, 440, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 474, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 519, 521, 525, 527, 530, 532, 536, 538, 540, 542, 545, 547, 549, 551, 555, 563, 565], "insert": [15, 41, 96, 224, 225, 226, 227, 231, 232, 233, 234, 239, 240, 242, 249, 250, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 276, 354, 356, 358, 360, 365, 366, 367, 369, 373, 374, 377, 384, 386, 396, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 426, 428, 430, 434, 524], "conv_src_memori": [15, 228, 230, 231, 232, 236, 362, 364, 365, 366, 372], "binary_post_op_posit": [15, 22, 29, 34, 43, 47, 50, 53, 141, 145, 147, 150], "hard": 15, "dnnl_arg_src_1": [15, 20, 22, 29, 34, 43, 47, 50, 53, 141, 145, 147, 150, 226, 227, 278, 308, 358, 360], "parenthes": 15, "around": [15, 19, 25, 241, 375, 398, 413], "binary_post_op_src1_memori": 15, "sign": [16, 32, 41, 46, 49, 157, 158, 172, 180, 191, 235, 284, 287, 308, 320, 348, 364, 371, 532], "unsign": [16, 32, 41, 49, 172, 180, 191, 207, 255, 278, 284, 285, 287, 296, 299, 313, 314, 317, 320, 342, 348, 364, 398, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 532, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566, 567], "primari": 16, "goal": 16, "compat": [16, 24, 30, 46], "relat": [16, 20, 22, 24, 26, 29, 32, 34, 36, 38, 40, 43, 50, 52, 141, 144, 145, 146, 147, 148, 149, 150, 151, 245, 378, 379, 380, 388, 389, 414, 432], "materi": 16, "deep": [16, 28, 29, 30, 32, 41, 44, 45, 49, 139, 155, 168, 171, 262, 334, 413], "annot": [16, 144, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 378, 379], "x_": [16, 46, 49, 375], "scale_": [16, 29, 146], "x": [16, 22, 28, 29, 49, 56, 74, 83, 88, 89, 97, 100, 103, 133, 144, 146, 151, 159, 167, 193, 225, 228, 229, 230, 231, 232, 236, 253, 254, 255, 257, 267, 277, 278, 287, 320, 322, 348, 356, 362, 363, 364, 365, 366, 372, 389, 396, 398, 402, 421, 432, 436, 561], "zp_": 16, "factor": [16, 22, 26, 29, 42, 43, 44, 47, 49, 50, 53, 77, 78, 146, 147, 150, 157, 206, 207, 230, 244, 272, 278, 284, 308, 312, 364, 375, 379, 398, 413, 430, 436, 524, 532, 535, 541, 543], "int32": 16, "denot": [16, 24, 28, 34, 40, 46, 49, 58, 68, 69, 72, 98, 99, 105, 106, 131, 156, 159, 160, 176, 193, 413], "elementwis": [16, 22, 161, 167, 195, 284, 293, 413, 450, 451, 467, 468, 469, 470, 524], "formula": [16, 20, 29, 32, 34, 42, 43, 45, 47, 49, 50, 52, 54, 57, 59, 60, 64, 67, 68, 75, 76, 77, 80, 81, 84, 85, 86, 90, 92, 93, 96, 98, 101, 104, 105, 116, 121, 123, 125, 134, 141, 142, 147, 148, 149, 150, 159, 166, 284, 313, 322, 375, 510, 512, 532, 561], "arrai": [16, 18, 46, 159, 206, 207, 241, 247, 248, 269, 272, 284, 287, 289, 290, 292, 302, 303, 304, 308, 312, 318, 319, 320, 332, 346, 347, 348, 375, 382, 425, 430, 456, 458, 460, 462, 464, 466, 516, 520, 522, 532], "best": [16, 24, 29, 30, 38, 50, 53, 139, 142, 146, 160, 161, 231, 232, 236, 237, 238, 252, 263, 273, 302, 363, 365, 366, 372, 398, 414, 436], "those": [16, 19, 24, 32, 34, 96, 139, 157, 158, 159, 168, 171, 235, 244, 371, 375, 378, 390, 391, 393, 394, 414], "These": [16, 19, 24, 37, 39, 46, 49, 176, 193, 255, 388, 398, 413, 414], "ahead": 16, "calibr": 16, "tool": [16, 48], "static": [16, 24, 36, 41, 51, 53, 157, 158, 224, 225, 226, 227, 228, 233, 234, 235, 236, 241, 242, 249, 250, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 276, 278, 354, 356, 358, 360, 362, 367, 369, 371, 372, 375, 376, 377, 384, 386, 396, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430, 434, 472, 473, 516, 518, 557, 561], "minimum": [16, 22, 24, 40, 113, 185, 281, 333, 375, 516], "dynam": [16, 32, 51, 53, 144, 241, 245, 346, 347, 375, 376, 380, 530, 538], "conjunct": 16, "behav": [16, 49, 148, 196], "dimension": [16, 28, 37, 46, 53, 94, 159, 284, 302, 338, 518, 532], "reason": [16, 28, 31, 49, 140, 157, 158, 159, 235, 245, 284, 371, 380, 413, 532], "subset": [16, 38, 168, 171, 287], "guid": [16, 24, 32, 144, 156, 230, 231, 242, 244, 285, 286, 289, 290, 293, 296, 297, 299, 300, 301, 303, 304, 305, 310, 311, 312, 313, 315, 316, 318, 319, 365, 377, 379], "appropri": [16, 22, 26, 29, 31, 47, 49, 53, 141, 142, 145, 151, 157, 159, 241, 375, 388, 398, 436], "convert": [16, 17, 32, 34, 36, 41, 46, 49, 73, 75, 76, 107, 118, 146, 154, 157, 158, 231, 241, 283, 284, 294, 295, 308, 313, 346, 347, 365, 375, 414, 485, 516], "wider": [16, 32, 164, 165, 284], "int16": 16, "overflow": [16, 25, 32, 40, 49, 244], "maintain": [16, 143, 154, 302, 390, 391, 393, 394, 518], "necessari": [16, 19, 24, 29, 30, 33, 41, 44, 45, 47, 138, 144, 146, 148, 159, 204, 205, 245, 262, 302, 308, 363, 380, 390, 391, 393, 394], "written": [16, 18, 49, 302, 330], "satur": [16, 49, 146, 287, 320, 348], "underflow": [16, 46], "architectur": [16, 29, 30, 36, 42, 49, 139, 144, 156, 157, 160, 161, 287, 320, 340, 348, 413], "slightli": [16, 49, 375], "vari": [16, 49, 160, 390, 391, 393, 394], "_op": [16, 145, 157], "dequant": [16, 40, 41, 46, 75, 118, 146, 185, 230, 238, 281, 284, 364, 391, 524], "achiev": [16, 29, 44, 46, 146, 148, 159, 237, 238, 252, 273, 364], "eltwis": [16, 20, 22, 24, 29, 43, 45, 47, 53, 141, 145, 147, 150, 157, 161, 166, 167, 200, 282, 307, 353, 364, 383, 388, 414, 467, 468, 469, 470, 523, 524, 574], "dev_guide_attributes_post_ops_eltwis": 16, "dev_guide_attributes_post_ops_binari": 16, "src_": [16, 32, 34, 49, 73, 75, 76, 104, 107, 109, 110, 111, 112, 113, 114, 115], "weights_": [16, 32], "work": [16, 18, 19, 21, 22, 24, 26, 29, 33, 34, 36, 38, 39, 45, 46, 49, 50, 138, 139, 142, 144, 145, 146, 149, 150, 151, 154, 159, 160, 237, 238, 245, 251, 252, 269, 273, 302, 375, 380, 388, 398, 413, 425, 436, 516], "task": [16, 18, 33, 138, 144], "form": [16, 27, 28, 37, 44, 150, 159, 176, 193, 388], "12": [16, 46, 144, 160, 172, 176, 224, 238, 257, 260, 354, 391, 402, 409], "35": [16, 144], "36": 16, "zero_point": [16, 146, 278, 284, 524, 532], "zero_point_": 16, "mathemat": [16, 29, 44, 45, 101, 104, 105, 146, 148, 161, 414], "_to": 16, "_int8": 16, "_f32": [16, 207], "comp_": 16, "bias_": 16, "_": [16, 20, 26, 28, 40, 43, 49, 50, 59, 66, 75, 76, 90, 109, 110, 111, 112, 113, 114, 115, 147, 160, 284], "regular": [16, 24, 36, 160, 300, 388, 432, 506, 508], "chosen": [16, 19, 38, 45, 146, 166, 167, 172, 175, 201, 231, 232, 236, 269, 302, 363, 364, 365, 366, 372, 388, 413, 425], "compens": [16, 26, 49, 157, 244, 278, 379], "term": [16, 18, 28, 29, 139, 147, 148, 157, 290, 292, 297, 301, 458, 460, 464, 466], "account": [16, 29, 142], "pre": [16, 19, 38, 53, 255, 277, 398, 399, 436, 437], "_s8": 16, "rang": [16, 25, 40, 44, 49, 66, 73, 75, 76, 107, 109, 110, 111, 112, 113, 114, 115, 132, 144, 154, 161, 241, 274, 375, 432], "loss": [16, 29, 40, 44, 380], "re": [16, 22, 26, 27, 49, 144, 157, 158, 227, 230, 231, 235, 242, 244, 360, 365, 371, 375, 377, 379, 398, 436], "end": [16, 24, 34, 44, 54, 55, 75, 76, 77, 85, 92, 105, 108, 116, 142, 144, 147, 148, 149, 152, 157, 158, 183, 184, 185, 224, 225, 226, 227, 229, 233, 234, 235, 237, 238, 242, 244, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 281, 354, 356, 358, 360, 367, 369, 371, 377, 378, 379, 384, 386, 389, 396, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434], "seem": [16, 144, 388], "imposs": [16, 49, 302, 518], "trick": [16, 49, 241, 375], "everi": [16, 18, 33, 34, 53, 54, 64, 77, 80, 81, 84, 86, 92, 93, 116, 121, 123, 125, 134, 138, 143, 144, 155, 159, 287, 320, 348, 388], "ih": [16, 28, 29, 47, 67, 147, 225, 226, 227, 228, 233, 234, 236, 237, 238, 249, 250, 252, 254, 256, 259, 263, 264, 265, 266, 267, 268, 270, 272, 273, 356, 358, 360, 362, 367, 369, 372, 384, 386, 396, 400, 407, 414, 415, 417, 419, 421, 423, 426, 430], "iw": [16, 28, 29, 47, 67, 147, 225, 226, 227, 228, 233, 234, 236, 237, 238, 249, 250, 252, 254, 256, 259, 263, 264, 265, 266, 267, 268, 270, 272, 273, 356, 358, 360, 362, 367, 369, 372, 384, 386, 396, 400, 407, 414, 415, 417, 419, 421, 423, 426, 430], "oh": [16, 28, 29, 57, 67, 98, 141, 147, 234, 249, 263, 264, 268, 369, 384, 414, 415, 423, 524], "ow": [16, 28, 29, 57, 67, 98, 141, 147, 234, 249, 263, 264, 268, 369, 384, 414, 415, 423, 524], "frac": [16, 20, 29, 34, 42, 43, 46, 49, 50, 52, 57, 59, 60, 67, 83, 86, 90, 94, 102, 112, 121, 123, 141, 145, 147, 149, 150, 375], "respons": [16, 24, 25, 33, 36, 37, 40, 49, 53, 138, 157, 166, 167, 259, 300, 302, 303, 308, 346, 353, 388, 408, 413, 505, 507, 530, 574], "prepar": [16, 45, 49, 157, 158, 230, 235, 241, 245, 263, 364, 371, 375, 380, 414, 432], "wa": [16, 18, 34, 42, 45, 50, 51, 140, 141, 143, 159, 160, 161, 189, 214, 215, 217, 218, 255, 264, 309, 314, 320, 348, 398, 415], "long": [16, 24, 144, 148, 157, 158, 172, 175, 201, 214, 215, 235, 371], "fit": [16, 156, 161, 269, 425], "everyth": [16, 388, 432], "fine": [16, 18, 414], "mind": 16, "tri": [16, 45], "minim": [16, 18, 23, 25, 32, 40, 44, 156, 159], "yet": [16, 241, 245, 302, 375, 378, 379, 380], "power": [16, 104, 108, 145, 340], "enough": [16, 18, 42, 49, 157, 158, 235, 330, 371], "wai": [16, 17, 18, 19, 26, 28, 29, 33, 36, 44, 46, 49, 120, 138, 139, 151, 154, 159, 201, 249, 284, 311, 332, 384, 413, 414, 432, 454, 516, 532, 534, 539, 556], "essenti": [16, 44, 45, 149, 237, 238, 246, 252, 273, 275, 375], "abil": [16, 30, 31, 33, 138, 388], "That": [16, 29, 131, 140, 143, 159, 388], "equat": [16, 34, 148], "_scale": 16, "standard": [16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 32, 34, 43, 47, 50, 51, 52, 53, 54, 57, 64, 66, 67, 77, 80, 81, 84, 86, 92, 93, 96, 98, 116, 121, 123, 125, 134, 141, 142, 146, 147, 148, 149, 150, 151, 172, 180, 191, 287, 320, 348], "downconvert": 16, "hw": [16, 32, 43, 144, 157, 158, 159, 235, 371], "mxcsr": [16, 46], "regist": [16, 31, 46, 169, 170, 406], "dnnl_primitive_attr_set_scales_mask": [16, 278, 284, 532], "simplest": [16, 284, 375, 432, 524], "sever": [16, 19, 24, 26, 29, 34, 38, 51, 155, 159, 393, 394], "sai": [16, 40], "d_0": [16, 46], "d_": [16, 46], "d_i": [16, 46], "le": 16, "Then": [16, 47, 120, 131, 159, 389, 414, 432], "sum": [16, 18, 20, 22, 24, 26, 29, 43, 47, 49, 50, 52, 53, 57, 59, 90, 109, 110, 112, 115, 141, 145, 146, 147, 148, 150, 160, 161, 166, 167, 200, 201, 266, 267, 282, 284, 307, 310, 342, 353, 413, 419, 421, 431, 524, 530, 574], "limits_": [16, 20, 43, 49, 50, 52, 57, 59, 90, 98, 109, 110, 112, 114, 115, 141, 145, 150, 151, 284, 532], "prod": [16, 114, 228, 236, 284, 362, 372, 532], "wei_plain_f32_md": 16, "hwigo": [16, 193], "wei_scal": [16, 238, 391], "conv_pd": [16, 140, 228, 231, 232, 234, 236, 262, 263, 362, 365, 366, 369, 372, 413, 414, 524], "next": [16, 32, 42, 159, 161, 231, 232, 263, 269, 308, 362, 363, 364, 365, 366, 378, 379, 388, 389, 390, 393, 394, 413, 414, 425, 432, 534], "wei_conv_s8_md": 16, "weights_desc": [16, 224, 229, 230, 231, 232, 234, 242, 249, 255, 256, 258, 260, 262, 263, 265, 276, 277, 278, 290, 292, 297, 301, 305, 354, 363, 364, 365, 366, 369, 377, 384, 398, 400, 404, 409, 413, 414, 417, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "quantization_mask": 16, "wei_s8": [16, 160], "wei_f32": [16, 160, 413, 414], "wei_reorder_pd": 16, "wei_reord": 16, "complementari": 16, "ideal": [16, 49], "first": [16, 27, 28, 29, 30, 31, 34, 40, 42, 46, 47, 49, 53, 67, 120, 140, 148, 157, 158, 159, 160, 176, 193, 235, 237, 243, 244, 252, 273, 302, 314, 332, 371, 375, 378, 379, 383, 388, 389, 390, 391, 393, 394, 395, 414, 432, 476, 518], "src_scale": [16, 230, 364], "src_f32": [16, 160, 413, 414], "src_s8": 16, "dst_scale": [16, 230, 364], "dst_f32": [16, 160, 413, 414], "dst_s8": 16, "declar": [16, 38, 243, 244, 378, 379], "chose": [16, 231, 232, 236, 302, 365, 366, 372], "src_conv_s8_any_md": 16, "batch": [16, 28, 29, 36, 42, 43, 44, 45, 53, 59, 60, 67, 83, 96, 144, 150, 159, 176, 193, 200, 201, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 243, 244, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 278, 282, 301, 302, 307, 322, 353, 354, 357, 358, 360, 362, 363, 364, 365, 366, 367, 369, 372, 378, 379, 384, 386, 388, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 446, 447, 448, 449, 476, 561, 574, 575], "wei_conv_s8_any_md": 16, "dst_conv_s8_any_md": 16, "ditto": 16, "data_mask": 16, "wei_mask": 16, "set_zero_points_mask": [16, 53, 241, 255, 375, 376, 398, 399, 532], "prop_kind": [16, 29, 44, 45, 47, 160, 161, 195, 196, 206, 224, 225, 229, 230, 231, 232, 234, 243, 244, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 271, 274, 276, 278, 284, 285, 290, 292, 293, 296, 297, 299, 300, 304, 305, 312, 313, 315, 316, 342, 354, 356, 363, 364, 365, 366, 369, 378, 379, 383, 384, 386, 388, 389, 396, 400, 402, 404, 407, 409, 413, 414, 415, 417, 423, 425, 426, 428, 432, 434, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "forward_infer": [16, 29, 44, 45, 47, 160, 204, 229, 243, 244, 251, 262, 263, 269, 363, 378, 379, 388, 413, 414, 425, 445, 449, 460, 466, 470, 480, 484, 492, 496, 500, 504, 508, 512, 522, 528, 543, 548, 552, 566], "convolution_direct": [16, 160, 167, 229, 230, 231, 232, 234, 263, 363, 364, 365, 366, 369, 413, 414, 456, 458, 460, 462], "padding_l": [16, 29, 206, 278, 290, 292, 304, 456, 458, 460, 462, 464, 466, 520, 522], "padding_r": [16, 29, 206, 278, 290, 292, 304, 456, 458, 460, 462, 464, 466, 520, 522], "padding_kind": 16, "flow": [16, 247, 248, 382, 383], "respect": [17, 23, 28, 29, 32, 34, 37, 41, 45, 47, 53, 67, 89, 92, 140, 147, 159, 160, 161, 176, 193, 195, 204, 205, 231, 232, 236, 269, 284, 285, 290, 292, 293, 296, 297, 299, 300, 304, 305, 308, 312, 313, 314, 315, 316, 365, 366, 372, 380, 414, 425, 476, 532, 564], "rounding_mod": [17, 32, 284, 342, 532], "sycl": [17, 24, 32, 35, 36, 161, 273, 274, 275, 278, 282, 298, 302, 324, 325, 331, 345, 346, 347, 353, 395, 573], "opencl": [17, 19, 23, 32, 35, 36, 140, 161, 252, 253, 282, 298, 302, 324, 331, 344, 346, 353, 388, 406, 439, 516], "languag": [17, 25, 40, 42, 157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "stochast": [17, 32, 212, 213, 308], "truncat": 17, "dnnl_arg_attr_rounding_se": [17, 278, 308], "interest": [17, 159, 340, 388, 413], "vanish": 17, "gradient": [17, 28, 45, 55, 61, 63, 65, 70, 78, 82, 85, 87, 89, 92, 95, 102, 106, 117, 122, 124, 126, 128, 135, 148, 154, 206, 207, 210, 211, 290, 292, 297, 308, 413, 457, 458, 463, 464, 489, 490], "diffsrc": [17, 20, 28, 29, 34, 43, 47, 50, 52, 58, 68, 71, 91, 99, 141, 142, 147, 149, 150], "diffweight": [17, 28, 29, 47, 69, 72, 142], "independ": [18, 24, 49, 50, 53, 96, 148, 150, 156, 159, 308], "core": [18, 38, 42, 168, 171, 406, 414], "system": [18, 19, 23, 24, 29, 32, 36, 48, 49, 51, 139, 140, 144, 148, 149, 159, 160, 161, 294], "parallel": [18, 42, 156, 214, 215, 320, 557], "reduct": [18, 24, 25, 40, 109, 110, 111, 112, 113, 114, 115, 166, 167, 200, 201, 206, 207, 282, 307, 342, 353, 420, 530, 535, 574], "privat": [18, 152, 214, 215, 363], "matrix": [18, 28, 29, 30, 32, 42, 49, 96, 148, 149, 159, 200, 201, 239, 240, 241, 242, 243, 244, 245, 255, 261, 277, 282, 287, 307, 320, 348, 373, 374, 375, 376, 377, 380, 398, 411, 413, 436, 513, 514, 574, 575], "im2col": 18, "longer": [18, 207], "complet": [18, 21, 25, 36, 137, 141, 144, 160, 251, 262, 263, 302, 309, 314, 333, 383, 388, 389, 413, 432, 516], "confus": [18, 45], "workspac": [18, 20, 28, 29, 52, 141, 148, 161, 195, 196, 206, 207, 224, 225, 228, 231, 232, 236, 258, 259, 260, 264, 269, 276, 285, 308, 354, 356, 362, 363, 365, 366, 372, 404, 407, 409, 415, 425, 434, 443, 445, 447, 449, 478, 480, 482, 484, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 520, 522, 535, 564, 566], "space": [18, 19, 24, 157, 158, 159, 160, 161, 228, 235, 236, 291, 330, 362, 371, 372, 516], "direct": [18, 28, 42, 45, 56, 74, 97, 100, 103, 130, 133, 148, 155, 166, 167, 206, 207, 208, 209, 224, 258, 260, 269, 276, 278, 302, 313, 354, 404, 409, 425, 434, 443, 445, 482, 484, 485, 498, 500, 502, 504, 510, 512, 516, 530, 534, 535, 544, 564, 566], "too": [18, 245, 314, 380], "few": [18, 29, 44, 47, 148, 308, 365, 366, 372], "proport": 18, "imag": [18, 28, 40, 44, 57, 141, 159, 251, 388], "diff_weight": [18, 28, 45, 69, 72, 210, 211, 231, 232, 269, 305, 365, 366, 425], "group": [18, 28, 37, 46, 68, 69, 70, 71, 72, 83, 144, 149, 159, 161, 176, 183, 184, 193, 200, 201, 206, 207, 234, 237, 238, 252, 254, 270, 273, 277, 278, 282, 284, 302, 307, 315, 353, 369, 370, 390, 391, 393, 394, 397, 426, 436, 477, 478, 479, 480, 532, 535, 546, 548, 574], "upper": [18, 28, 42, 64, 65, 143, 159, 176, 314], "total": [18, 68, 139, 144, 269, 425], "By": [18, 19, 24, 32, 36, 37, 38, 44, 328], "contrast": 18, "littl": [18, 241, 375], "sizeof": [18, 36, 159, 172, 175, 201, 228, 236, 247, 253, 263, 362, 372, 382, 389], "summand": 18, "scratchpad_mod": [18, 24, 284, 342, 532], "worri": 18, "onednn_enable_concurrent_exec": [18, 24], "cmake": [18, 23, 24, 30, 31, 36, 38, 39, 140, 143, 144, 155, 160], "off": [18, 24, 30, 31, 38, 39, 143, 144, 157, 158, 160, 214, 215, 235, 239, 240, 251, 314, 371, 373, 374, 388], "across": [18, 24, 29, 45, 46, 50, 52, 53, 148, 166, 167, 269, 300, 425], "level": [18, 36, 37, 38, 39, 140, 144, 156, 160, 278, 302, 314, 342], "freed": 18, "referenc": 18, "segment": 18, "fault": 18, "you": [18, 19, 20, 23, 24, 29, 33, 40, 42, 43, 44, 45, 47, 49, 50, 51, 70, 144, 148, 150, 155, 157, 158, 159, 207, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 389, 393, 394, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "ON": [18, 23, 24, 30, 31, 36, 38, 39, 143, 144, 160, 214, 215], "larger": [18, 29, 36, 214, 215, 269, 425], "concurr": [18, 33, 36, 138, 214, 215, 306, 320, 327], "suffici": 18, "dnnl_arg_scratchpad": [18, 278, 308], "reus": [18, 19, 29, 44, 45, 53, 148, 157, 158, 159, 235, 269, 371, 425], "make": [18, 19, 23, 31, 39, 45, 49, 51, 53, 96, 137, 139, 157, 158, 159, 176, 193, 207, 235, 293, 302, 330, 371, 518, 523], "safe": [18, 19, 34, 139, 140, 159, 214, 215, 251, 306, 327, 328, 388, 516], "good": [18, 44, 53, 159, 375, 388], "side": [18, 29, 96, 157, 158, 235, 302, 371, 516], "dnnl_primitive_attr_set_scratchpad_mod": [18, 278, 284], "set_scratchpad_mod": [18, 532], "highlight": [18, 45], "consum": [18, 36, 37, 40, 156, 269, 302, 425], "due": [18, 28, 45, 49, 160, 161, 189, 217, 218, 245, 375, 380, 518], "print": [18, 36, 38, 160, 161], "much": [18, 19, 49, 156, 157, 158, 160, 235, 245, 371, 380, 389, 432], "cout": [18, 229, 237, 238, 243, 244, 246, 251, 252, 253, 263, 273, 274, 275, 388, 389, 432], "query_s64": [18, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "memory_consumption_s64": [18, 206], "endl": [18, 229, 237, 238, 243, 244, 246, 251, 252, 253, 273, 274, 275, 388, 389, 432], "visibl": 18, "zero_md": 18, "scratchpad_desc": [18, 262, 413, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_scratchpad_mod": [18, 532], "custom": [18, 19, 23, 24, 33, 36, 37, 156, 157, 159], "scratchpad_md": [18, 206], "prim": [18, 160, 228, 236, 263, 362, 372, 414], "get_siz": [18, 36, 45, 159, 242, 243, 244, 263, 302, 346, 377, 378, 379, 516, 518], "scratchpad_ptr": [18, 278, 322], "user_memory_manag": 18, "outlin": [19, 45, 139], "program": [19, 21, 23, 29, 33, 37, 38, 47, 49, 138, 148, 247, 248, 251, 253, 279, 340, 380, 382, 383, 388, 389, 414, 432], "present": [19, 96, 140, 148, 157, 158, 235, 371, 413], "kei": [19, 20, 22, 26, 29, 37, 42, 43, 45, 47, 50, 51, 53, 140, 146, 148, 149, 150, 151, 249, 354, 355, 356, 357, 358, 359, 360, 362, 363, 367, 368, 369, 370, 384, 385, 388, 390, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 421, 422, 426, 427, 428, 429, 430, 431, 434, 435], "discuss": [19, 44, 45, 139, 302, 388], "essenc": 19, "process": [19, 27, 40, 41, 44, 45, 49, 139, 143, 144, 148, 157, 158, 159, 161, 235, 269, 322, 371, 375, 413, 425, 561], "relationship": [19, 37, 237, 238, 273, 278, 390, 393, 394], "entiti": [19, 37, 308], "briefli": 19, "figur": [19, 148], "relev": [19, 45, 269, 414, 425], "built": [19, 21, 23, 24, 36, 38, 51, 152, 155, 160, 320, 348, 413, 414], "notion": [19, 22, 26, 45, 145, 151, 413], "encapsul": [19, 303, 317, 333, 334, 338, 346, 383, 388, 389, 432, 516], "lstm": [19, 49, 166, 167, 176, 193, 244, 269, 308, 313, 353, 379, 410, 425, 509, 510, 511, 512], "addition": [19, 37, 49, 53, 96, 139, 154, 231, 365, 413, 414], "complex": [19, 29, 38], "pure": 19, "state": [19, 28, 36, 45, 49, 148, 176, 193, 244, 258, 269, 276, 302, 308, 309, 313, 330, 378, 379, 404, 406, 425, 434, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 561, 564, 566], "One": [19, 33, 118, 154, 159], "immut": [19, 37], "approach": [19, 38, 45, 139, 159, 302, 364, 375, 413], "tailor": [19, 36], "amort": 19, "mutabl": [19, 37, 332], "card": [19, 294], "transfer": [19, 241, 294, 375], "ti": [19, 317, 383, 388, 389, 432], "command": [19, 23, 24, 51, 139, 144, 303, 319, 389, 414], "queue": [19, 33, 36, 138, 273, 274, 275, 278, 303, 319, 346, 347, 389, 393, 394, 395, 432], "map": [19, 20, 22, 26, 29, 33, 34, 43, 44, 47, 50, 52, 53, 73, 75, 76, 107, 137, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 155, 159, 161, 237, 238, 246, 251, 252, 273, 275, 302, 314, 344, 345, 346, 347, 375, 383, 388, 389, 454, 516, 530, 534, 538, 539, 556], "offset": [19, 73, 75, 76, 107, 159, 160, 161, 206, 207, 241, 251, 269, 278, 287, 302, 320, 322, 348, 375, 388, 425, 516, 518, 561], "conceptu": [19, 49], "expos": [19, 20, 32, 43, 50, 139, 156], "flexibl": [19, 38, 154, 156, 159, 380], "dnnl_memory_desc_t": [19, 155, 159, 176, 228, 236, 247, 278, 302, 308, 362, 372, 382, 518], "variou": [19, 140, 156, 302, 308], "via": [19, 20, 22, 24, 30, 31, 32, 34, 36, 41, 42, 76, 131, 139, 140, 141, 143, 159, 160, 227, 263, 269, 302, 308, 314, 330, 335, 346, 347, 356, 357, 360, 361, 364, 383, 388, 389, 413, 425, 432, 516, 524, 530, 532, 538], "instanti": 19, "iter": [19, 143, 148, 157, 158, 182, 190, 229, 231, 232, 235, 236, 243, 244, 269, 365, 366, 371, 372, 378, 379, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 534, 544, 564, 566], "prefer": [19, 25, 31, 169, 170, 231, 232, 236, 269, 365, 366, 372, 425], "concret": [19, 237, 238, 246, 252, 273, 275, 390, 393, 394], "embodi": 19, "There": [19, 20, 22, 25, 26, 29, 34, 36, 43, 44, 46, 47, 52, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 155, 157, 158, 235, 269, 284, 302, 371, 383, 389, 414, 425, 432, 532, 535], "extract": [19, 29, 389, 432], "submemory_desc": [19, 243, 244, 269, 378, 379, 425, 518], "src_desc": [19, 44, 229, 230, 231, 232, 234, 242, 249, 262, 263, 278, 285, 289, 290, 292, 293, 296, 297, 299, 300, 301, 304, 305, 310, 311, 312, 315, 316, 318, 363, 364, 365, 366, 369, 377, 384, 413, 414, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "action": [19, 45], "placehold": [19, 29, 47, 53, 148, 193, 262, 413], "obtain": [19, 45, 46, 49, 140, 157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 302, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 390, 391, 393, 394, 396, 398, 400, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 539], "high": [19, 25, 46, 160, 290, 292, 304, 456, 458, 460, 462, 464, 466, 520, 522], "instead": [19, 22, 23, 24, 28, 29, 34, 40, 47, 49, 51, 53, 141, 145, 146, 147, 159, 269, 284, 287, 313, 320, 322, 348, 363, 388, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 524, 561, 564, 566], "individu": [19, 32, 34, 36, 139, 287, 291, 320, 348, 363], "transpar": [19, 38], "effort": 19, "backend": [19, 32, 36, 38, 118, 160, 161, 390, 391, 393, 394], "awar": [19, 31, 388], "scalabl": [19, 49, 168, 171], "ukernel": [19, 51, 156, 157, 158, 235, 278, 282, 340, 342, 452, 559], "sequenti": [19, 24, 36, 156, 362, 363], "compos": [19, 36, 40, 156], "full": [19, 25, 51, 144, 155, 156, 160, 196, 389, 432], "show": [20, 29, 43, 46, 47, 50, 141, 142, 147, 154, 159, 160, 380, 388], "straightforward": [20, 29, 43, 50, 141, 142, 147, 388], "gamma": [20, 29, 43, 50, 59, 60, 61, 83, 90, 91, 285, 296, 299], "mu": [20, 43, 50, 59, 60, 90, 91], "sqrt": [20, 34, 40, 42, 43, 50, 60, 83, 90, 110, 128, 185, 241, 245, 281, 375, 380], "sigma": [20, 43, 50, 59, 60, 61, 90, 91, 148], "varepsilon": [20, 43, 50, 60], "dnnl_use_scal": [20, 43, 50, 195, 196], "dnnl_use_shift": [20, 43, 50, 195, 196], "dnnl_use_global_stat": [20, 43, 50, 195, 196], "constant": [20, 42, 43, 44, 50, 60, 83, 90, 91, 92, 131, 140, 182, 190, 196, 207, 238, 279, 282, 284, 302, 308, 314, 317, 321, 322, 324, 325, 326, 330, 334, 335, 338, 391, 518, 532, 561], "stabil": [20, 34, 43, 50, 60, 83, 90, 91], "nhw": [20, 59], "learnabl": [20, 28, 43, 45, 50, 90, 91], "dnnl_fuse_norm_relu": [20, 195, 196], "dnnl_fuse_norm_add_relu": [20, 195, 196], "popul": [20, 43, 148], "sampl": [20, 43, 46, 141, 144, 152, 389, 432], "unbias": [20, 43], "hat": [20, 43], "becom": [20, 42, 43, 50, 155, 160, 176, 193, 414], "dnnl_forward_train": [20, 29, 34, 43, 50, 141, 142, 147, 149, 150, 204, 205, 285, 290, 292, 293, 296, 297, 299, 300, 304, 305, 312, 313, 315, 316], "dnnl_forward_infer": [20, 29, 34, 43, 50, 141, 142, 147, 149, 150, 204, 205, 285, 290, 292, 293, 296, 297, 299, 300, 304, 305, 312, 313, 315, 316], "diffgamma": [20, 43, 50, 91], "diffbeta": [20, 43, 50, 91], "diffdst": [20, 28, 29, 34, 43, 47, 50, 52, 58, 63, 68, 69, 71, 72, 91, 99, 141, 142, 147, 149, 150], "mark": [20, 40, 43, 49, 50, 91, 159], "asterisk": [20, 43, 50, 91], "clariti": [20, 43, 50], "summari": [20, 43, 50, 144, 413], "shown": [20, 25, 43, 45, 49, 50, 84, 85, 139, 144, 148, 159, 388, 414], "dnnl_backward": [20, 43, 50, 196, 204, 205, 285, 296, 299, 313], "dnnl_backward_data": [20, 43, 50, 196, 204, 205, 285, 296, 299], "dnnl_normalization_flags_non": [20, 43, 50, 195, 196], "Not": [20, 25, 43, 50, 144], "src_1": [20, 22, 56, 74, 97, 100, 103, 120, 130, 133, 226, 358], "diffsrc_1": 20, "tabl": [20, 22, 25, 26, 28, 29, 32, 33, 34, 43, 47, 50, 52, 53, 73, 107, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 207], "dnnl_arg_scal": [20, 43, 50, 225, 254, 257, 278, 308, 356, 396, 402], "dnnl_arg_shift": [20, 43, 50, 225, 254, 257, 278, 308, 356, 396, 402], "dnnl_arg_mean": [20, 43, 50, 225, 254, 257, 278, 308, 356, 396, 402], "dnnl_arg_vari": [20, 43, 50, 225, 254, 257, 278, 308, 356, 396, 402], "dnnl_arg_workspac": [20, 45, 52, 141, 224, 225, 228, 231, 232, 236, 258, 259, 260, 264, 269, 276, 278, 308, 354, 356, 362, 365, 366, 372, 404, 407, 409, 415, 425, 434], "dnnl_arg_diff_dst": [20, 29, 34, 43, 47, 50, 52, 141, 142, 147, 149, 150, 231, 232, 236, 278, 308, 365, 366, 372], "dnnl_arg_diff_src": [20, 29, 34, 43, 47, 50, 52, 141, 142, 147, 149, 150, 231, 232, 236, 278, 308, 365, 366, 372], "dnnl_arg_diff_src_1": [20, 278, 308], "dnnl_arg_diff_scal": [20, 43, 50, 278, 308], "dnnl_arg_diff_shift": [20, 43, 50, 278, 308], "flavor": [20, 43, 50, 322, 388, 561], "batch_normalization_forward": [20, 225, 285, 342, 356, 447, 530], "OR": [20, 43, 50, 157, 158, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "latter": [20, 24, 28, 33, 43, 45, 49, 50, 51, 138, 154, 302, 362, 363, 534], "overwritten": [20, 22, 34, 43, 50, 150], "dst_desc": [20, 44, 229, 230, 231, 232, 233, 234, 242, 249, 262, 263, 272, 278, 285, 286, 289, 290, 292, 293, 296, 297, 299, 300, 301, 304, 305, 310, 311, 312, 315, 316, 318, 363, 365, 366, 367, 369, 377, 384, 413, 414, 430, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "diff_dst_desc": [20, 231, 232, 278, 285, 290, 292, 293, 296, 297, 299, 300, 304, 305, 312, 315, 316, 365, 366, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "even": [20, 32, 45, 49, 136, 139, 148, 159, 293, 388], "combin": [20, 22, 29, 34, 36, 39, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 144, 146, 147, 148, 149, 150, 157, 160, 161, 219, 302, 383, 388, 518, 523], "scaleshift": [20, 43], "restrict": [20, 22, 29, 30, 31, 34, 43, 47, 50, 52, 53, 62, 141, 145, 147, 148, 149, 150, 157, 161, 291, 314], "1d": [20, 29, 33, 43, 47, 50, 52, 62, 75, 76, 83, 88, 89, 90, 91, 96, 105, 106, 109, 110, 111, 112, 113, 114, 115, 141, 147, 159, 161, 176, 193, 290, 292, 312, 388], "dnnl_x": [20, 43, 176, 228, 236, 362, 372], "dnnl_a": [20, 43, 176, 193], "sp_n": [20, 43], "sp_0": [20, 43], "0d": [20, 52, 388], "nc": [20, 47, 50, 193, 229, 239, 240, 256, 271, 373, 374, 400, 428], "dnnl_nc": [20, 43, 47, 50, 176], "dnnl_ab": [20, 43, 50, 176, 193, 302], "ncw": [20, 43, 141, 193], "dnnl_ncw": [20, 29, 43, 47, 141, 176], "dnnl_abc": [20, 43, 50, 141, 176, 193], "dnnl_nwc": [20, 29, 43, 47, 141, 176], "dnnl_acb": [20, 43, 141, 176, 193], "dnnl_nchw": [20, 26, 29, 43, 47, 52, 141, 149, 159, 176, 228, 236, 247, 302, 362, 372, 382], "dnnl_abcd": [20, 43, 50, 52, 141, 149, 176, 193], "dnnl_nhwc": [20, 26, 29, 43, 47, 52, 141, 149, 159, 176, 302], "dnnl_acdb": [20, 43, 52, 141, 149, 176, 193], "3d": [20, 29, 43, 47, 50, 52, 53, 90, 91, 141, 142, 147, 149, 157, 158, 159, 161, 176, 193, 235, 290, 292, 301, 304, 312, 371, 388, 456, 458, 460, 462, 464, 466, 520, 522], "ncdhw": [20, 43, 141, 149, 176, 193, 254, 396], "dnnl_ncdhw": [20, 29, 43, 47, 141, 149, 176], "dnnl_ndhwc": [20, 29, 43, 47, 141, 149, 176], "dnnl_acdeb": [20, 43, 141, 149, 176, 193], "come": [20, 34, 45, 46, 51, 52, 139, 141, 149, 176, 193, 214, 215, 255, 269, 277, 388, 398, 425, 436], "intens": [20, 32, 44, 52, 139, 141, 149, 302, 388, 413, 414], "chain": [20, 29, 40, 45, 46, 47, 49, 157, 158, 235, 284, 322, 371, 414, 523], "descript": [20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 34, 36, 38, 39, 40, 42, 43, 44, 47, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 135, 141, 143, 144, 145, 147, 148, 150, 157, 159, 160, 161, 193, 291, 302, 338, 378, 379, 388, 413, 414], "dnnl_eltwise_relu": [20, 34, 166, 167, 228, 236, 247, 313, 362, 372, 382], "correctli": [20, 29, 144, 314, 388, 413], "highli": [20, 26, 34, 43, 50, 52, 151, 380], "whenev": [20, 22, 26, 34, 43, 45, 50, 145, 150, 151, 159, 284, 388], "caveat": [20, 34, 43, 50, 151], "statist": [20, 50, 160, 176, 193, 195, 196, 375, 494, 496], "calcul": [20, 36, 42, 44, 46, 57, 58, 59, 61, 65, 67, 68, 69, 70, 71, 72, 78, 83, 88, 89, 94, 95, 98, 99, 109, 110, 111, 112, 113, 114, 115, 117, 122, 123, 124, 128, 131, 135, 141, 142, 160, 166, 167, 244, 332, 364], "pleas": [20, 24, 44, 53, 118, 144, 160, 230, 231, 244, 302, 328, 332, 365, 379, 413], "review": [20, 413], "demonstr": [20, 22, 26, 29, 34, 36, 42, 43, 44, 47, 50, 52, 53, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 157, 158, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 262, 263, 265, 269, 273, 275, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437], "benchdnn": [21, 24, 36, 139, 144, 160], "readm": 21, "overlin": [22, 26, 29, 34, 56, 66, 74, 97, 100, 103, 133, 146, 149, 150, 151], "src_0": [22, 56, 74, 97, 100, 103, 120, 130, 133, 151, 226, 358], "mathbin": [22, 56, 74], "subtract": [22, 40, 49, 130, 185, 281, 284, 524], "divis": [22, 28, 59, 60, 61, 67, 68, 69, 70, 71, 72, 74, 83, 146, 227, 360], "greater": [22, 45, 49, 64, 65, 147, 166, 167], "dnnl_arg_src_0": [22, 226, 227, 278, 308, 358, 360], "text": [22, 29, 34, 43, 47, 50, 53, 54, 55, 77, 84, 85, 92, 105, 108, 116, 141, 145, 147, 150, 159, 432], "scale0": 22, "dnnl_arg_attr_scal": [22, 29, 47, 50, 53, 146, 150, 230, 241, 245, 255, 267, 277, 278, 284, 308, 364, 375, 380, 398, 421, 436, 532], "scale1": 22, "semant": [22, 28, 36, 41, 49, 53, 96, 105, 106, 138, 142, 284, 314, 388, 485, 524, 567], "recommend": [22, 26, 40, 44, 45, 49, 53, 139, 142, 145, 151, 160, 413, 414], "match": [22, 26, 37, 44, 45, 56, 66, 74, 88, 96, 97, 100, 103, 120, 133, 140, 142, 146, 151, 160, 161, 265, 302, 346, 347, 414, 417, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 530, 537, 538, 539, 541, 543, 546, 548, 550, 552, 556, 564, 566], "syntax": [22, 44], "d": [22, 28, 29, 34, 42, 47, 48, 52, 53, 62, 96, 109, 110, 111, 112, 113, 114, 115, 141, 142, 157, 158, 159, 161, 176, 193, 224, 235, 241, 247, 258, 260, 269, 276, 284, 302, 321, 322, 354, 371, 375, 382, 388, 404, 409, 425, 434, 532, 560, 561], "nxcxdxhxw": 22, "pytorch": [22, 106], "explicitli": [22, 24, 25, 29, 38, 40, 41, 139, 145, 148, 330, 332, 388], "deriv": [22, 26, 141, 145, 151, 195, 196, 284, 299, 454, 524, 556], "ones": [22, 49, 147, 155, 159, 224, 234, 237, 238, 246, 249, 252, 258, 260, 273, 275, 276, 302, 354, 369, 380, 384, 404, 409, 434, 518], "unavoid": 22, "correct": [22, 24, 159, 187, 188, 255, 383, 388, 390, 391, 392, 393, 394, 395, 398], "issu": [22, 33, 45, 49, 138, 144, 187, 188, 245, 380], "arbitrari": [22, 26, 34, 36, 50, 64, 65, 77, 78, 83, 84, 85, 90, 91, 92, 94, 95, 104, 123, 124, 125, 126, 137, 142, 145, 146, 147, 149, 150, 151, 159, 244, 245, 289, 364, 379, 380, 398], "6": [22, 26, 29, 34, 36, 46, 50, 53, 86, 102, 144, 145, 146, 149, 150, 151, 157, 158, 159, 172, 218, 224, 227, 229, 235, 237, 238, 239, 240, 252, 254, 260, 273, 354, 360, 371, 373, 374, 390, 391, 393, 394, 396, 409], "fewer": [22, 26, 34, 41, 50, 145, 146, 149, 150, 151], "bnorm": [22, 35, 227, 353, 361], "postop": [22, 161, 361, 364], "clone": [23, 284, 302, 308, 454, 534, 539, 556], "repositori": [23, 24], "git": [23, 140, 160, 314, 413, 567], "http": [23, 42, 51, 157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "github": [23, 24, 42, 241, 375], "com": [23, 51], "ensur": [23, 24, 25, 30, 45, 138, 237, 238, 252, 273, 302, 389, 413, 432, 518], "cmake_install_prefix": 23, "locat": [23, 24, 45, 51, 159, 302, 311, 314, 338, 535, 539], "cmake_build_typ": 23, "select": [23, 24, 36, 38, 40, 42, 46, 161, 175, 176, 185, 192, 193, 281, 321, 414, 560], "releas": [23, 24, 138, 157, 158, 235, 314, 322, 328, 333, 371, 561], "relwithdebinfo": 23, "cmake_prefix_path": 23, "directori": [23, 36, 51, 144, 314], "search": 23, "makefil": 23, "mkdir": 23, "cd": 23, "uncom": 23, "line": [23, 139, 144, 159, 160, 414], "export": [23, 27, 139, 414], "cc": 23, "cxx": 23, "icx": [23, 51], "icpx": [23, 51], "j": [23, 52, 94, 123, 144, 152, 229, 243, 244, 302, 363, 518], "setvar": 23, "sh": [23, 28, 29, 57, 67, 68, 98, 141, 234, 249, 264, 369, 384, 415], "script": [23, 155], "folder": [23, 24, 38], "your": [23, 44, 45, 51, 144, 414], "opt": [23, 24], "ddnnl_cpu_runtim": 23, "ddnnl_gpu_runtim": 23, "open": [23, 24, 340], "driver": [23, 24], "openclroot": 23, "path": [23, 24, 36, 38, 51, 154, 314], "gnu": [23, 24], "dcmake_system_nam": 23, "dcmake_system_processor": 23, "dcmake_library_path": 23, "usr": 23, "lib": [23, 51], "acl_root_dir": [23, 24], "ddnnl_aarch64_use_acl": 23, "studio": [23, 51, 139, 155], "solut": [23, 51, 155, 159], "16": [23, 25, 28, 32, 45, 144, 154, 157, 158, 160, 172, 176, 180, 191, 235, 247, 248, 302, 371, 382, 383], "2019": [23, 49, 231, 241, 245, 247, 248, 251, 253, 255, 262, 263, 274, 365, 375, 380, 382, 398], "config": [23, 38, 155], "file": [23, 24, 36, 38, 39, 48, 144, 155, 157, 158, 159, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 314, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436], "being": [23, 53, 146, 148, 196, 302, 309, 314, 389, 432, 518], "sln": [23, 155], "project": [23, 24, 25, 155, 176, 193, 284, 308, 313, 510, 512, 532, 544], "bat": 23, "x86": [23, 48, 157], "commmand": 23, "prompt": 23, "ninja": 23, "v3": [23, 49, 160, 284], "23": [23, 154], "unit": [23, 24, 27, 37, 148, 157, 158, 166, 167, 235, 293, 335, 371, 389, 406, 432], "test": [23, 30, 36, 144, 152, 245, 302, 380, 516], "ctest": 23, "conda": 23, "env": 23, "doc": [23, 44, 159], "yml": 23, "header": [23, 25, 32, 33, 38, 138, 144, 155, 160, 237, 238, 246, 252, 273, 275], "administr": 23, "privileg": 23, "sudo": 23, "mac": 23, "bold": [24, 30, 31, 38, 39, 143, 160], "onednn_library_typ": 24, "onednn_cpu_runtim": 24, "none": [24, 34, 53, 56, 57, 58, 67, 68, 69, 70, 71, 72, 74, 88, 89, 97, 98, 99, 100, 103, 120, 130, 133, 160, 183, 184, 195, 413], "omp": [24, 144], "seq": 24, "onednn_gpu_runtim": 24, "ocl": [24, 253, 393], "offload": 24, "onednn_build_doc": 24, "onednn_build_exampl": 24, "onednn_build_test": 24, "onednn_build_graph": [24, 39], "onednn_enable_graph_dump": [24, 39], "dump": [24, 48, 144, 279, 314], "artifact": [24, 39], "onednn_experimental_graph_compiler_backend": [24, 38], "onednn_arch_opt_flag": 24, "warn": [24, 38, 144, 245, 380], "onednn_enable_jit_profil": [24, 144], "profil": [24, 35, 36, 161, 202, 203, 263, 282, 314, 340, 353], "onednn_enable_itt_task": [24, 144], "onednn_enable_primitive_cach": [24, 143], "onednn_enable_max_cpu_isa": [24, 30], "onednn_enable_cpu_isa_hint": [24, 31], "isa": [24, 30, 32, 36, 37, 48, 49, 160, 161, 168, 169, 170, 171, 278, 314, 340, 342, 413, 438], "workload": [24, 29, 44, 148, 413, 414], "primitive_nam": 24, "cpu_isa_nam": 24, "gpu_isa_nam": 24, "isa_nam": 24, "onednn_experiment": [24, 36], "onednn_verbos": [24, 36, 314, 413, 414], "onednn_dev_mod": [24, 160], "trace": [24, 160, 414], "debuginfo": [24, 160], "log": [24, 34, 36, 38, 40, 94, 160, 185, 245, 281, 380], "develop": [24, 25, 32, 38, 48, 49, 160, 230, 231, 242, 244, 285, 286, 289, 290, 293, 296, 297, 299, 300, 301, 303, 304, 305, 310, 311, 312, 313, 315, 316, 318, 319, 365, 377, 379], "onednn_aarch64_use_acl": 24, "onednn_blas_vendor": 24, "armpl": 24, "acceler": [24, 32, 45, 52, 156], "extern": 24, "link": [24, 48, 67, 68, 69, 70, 71, 72, 340], "onednn_gpu_vendor": 24, "nvidia": 24, "amd": 24, "dnnl_gpu_runtim": [24, 155], "onednn_dpcpp_host_compil": 24, "clang": [24, 51, 139, 239, 240, 373, 374], "onednn_library_nam": 24, "smoke": [24, 255, 398], "ci": 24, "nightli": 24, "modifier_nam": 24, "coverag": [24, 25, 36], "counterpart": [24, 49, 155, 302, 518], "prefix": [24, 314], "sub": [24, 37, 139, 148, 155, 159, 166, 167, 269, 302, 378, 413, 425], "intend": [24, 29, 154, 160, 303, 340, 346], "subject": 24, "oneapi": [24, 42, 51, 152, 155, 157, 158, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 282, 354, 356, 358, 362, 365, 366, 367, 369, 371, 372, 375, 377, 380, 382, 384, 386, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 407, 409, 411, 415, 419, 421, 423, 425, 426, 428, 430, 432, 436], "dpc": [24, 319, 353, 432, 439], "main": [24, 36, 154, 156, 157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 302, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436, 524], "discov": 24, "absolut": [24, 54, 109], "cmake_cxx_compil": 24, "window": [24, 45, 49, 57, 58, 98, 99, 141, 160, 314, 406], "linux": [24, 139, 160, 314], "7": [24, 144, 152, 154, 157, 158, 159, 172, 180, 191, 218, 235, 237, 238, 239, 240, 247, 248, 252, 273, 371, 373, 374, 378, 379, 382, 390, 391, 393, 394, 414], "4": [24, 30, 32, 34, 36, 40, 49, 53, 59, 60, 61, 91, 102, 120, 139, 144, 157, 158, 159, 166, 167, 168, 171, 172, 176, 180, 191, 218, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 247, 249, 252, 253, 260, 263, 264, 269, 270, 273, 274, 275, 276, 278, 302, 332, 360, 362, 365, 366, 369, 371, 372, 373, 374, 382, 384, 389, 390, 391, 393, 394, 409, 414, 415, 425, 426, 432, 434], "gcc": 24, "interoper": [24, 36, 282, 324, 344, 345, 346, 347, 348, 353, 389, 393, 394, 432, 439], "8": [24, 30, 32, 41, 46, 49, 51, 139, 144, 154, 157, 158, 168, 171, 172, 176, 180, 191, 193, 218, 227, 228, 230, 235, 236, 237, 238, 239, 240, 252, 273, 284, 287, 320, 348, 360, 362, 364, 371, 372, 373, 374, 390, 391, 393, 394, 413, 532], "disk": 24, "occupi": [24, 154, 302, 516], "app": 24, "remov": [24, 109, 110, 111, 112, 113, 114, 115, 299, 302, 314, 328, 518], "batch_norm": [24, 200, 353], "concat": [24, 161, 185, 200, 201, 281, 282, 302, 307, 342, 353, 368, 413, 530, 574], "deconvolut": [24, 166, 167, 200, 201, 282, 307, 385, 461, 462, 463, 464, 465, 466], "inner_product": [24, 200, 229, 353], "layer_norm": [24, 200, 353], "lrn": [24, 166, 167, 200, 201, 206, 207, 228, 229, 231, 232, 236, 282, 307, 353, 362, 365, 366, 372, 413, 505, 506, 507, 508, 535, 574], "pool": [24, 32, 45, 49, 57, 58, 98, 99, 166, 167, 200, 201, 206, 207, 228, 229, 231, 232, 236, 262, 282, 307, 353, 362, 363, 365, 366, 372, 416, 519, 520, 521, 522, 535, 574], "prelu": [24, 29, 47, 53, 92, 106, 185, 200, 201, 281, 282, 284, 307, 353, 417, 418, 524, 525, 526, 527, 528, 574], "resampl": [24, 166, 167, 200, 201, 206, 207, 282, 307, 353, 424, 535, 540, 541, 542, 543, 574], "rnn": [24, 26, 35, 44, 45, 49, 50, 161, 166, 167, 176, 193, 200, 201, 206, 207, 208, 209, 210, 211, 224, 243, 244, 258, 260, 269, 276, 282, 284, 302, 307, 308, 353, 355, 405, 410, 413, 435, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 532, 535, 544, 563, 564, 565, 566, 574], "sdpa": [24, 40], "shuffl": [24, 161, 200, 201, 206, 207, 282, 307, 353, 413, 427, 545, 546, 547, 548, 574], "softmax": [24, 40, 42, 45, 94, 124, 161, 166, 167, 185, 200, 201, 243, 244, 281, 282, 307, 353, 413, 429, 549, 550, 551, 552, 574], "attempt": [24, 308, 472, 485, 516, 530, 554], "unimpl": [24, 144, 189, 206, 217, 314], "style": 24, "semicolon": 24, "delimit": [24, 144], "donednn_enable_primit": 24, "sse41": [24, 30, 31, 168, 314], "avx2": [24, 30, 32, 48, 168, 171, 314, 413], "avx512": [24, 32, 49, 159], "amx": [24, 30, 32, 36, 148, 157, 158, 168, 171, 235, 371], "linearli": 24, "complianc": [24, 157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "donednn_enable_primitive_cpu_isa": 24, "gen9": [24, 48], "gen11": 24, "xelp": 24, "xehp": 24, "xehpg": 24, "xehpc": 24, "xe2": 24, "donednn_enable_primitive_gpu_isa": 24, "x64": [24, 32, 144, 160], "interfac": [24, 144, 152, 320, 325, 332, 333, 337, 348, 389, 432, 557], "leav": [24, 42, 231, 232, 365, 366, 380], "donednn_enable_gemm_kernels_isa": 24, "no_corr": 24, "add_bitwis": 24, "short": [24, 148, 155, 413], "verifi": [24, 140, 454, 534, 539, 556], "largest": 24, "unmodifi": 24, "processor": [24, 29, 30, 42, 48, 139, 168, 171, 253, 340, 389, 432], "jit": [24, 30, 31, 44, 51, 143, 144, 157, 158, 160, 235, 314, 371, 413, 414, 438], "detect": [24, 30, 38, 141, 284, 532], "r": [24, 28, 29, 42, 46, 48, 49, 53, 66, 73, 75, 76, 90, 91, 107, 109, 110, 111, 112, 113, 114, 115, 144, 145, 146, 148, 166, 167, 253, 258, 287, 320, 348, 389, 404, 414, 432], "xsse4": 24, "sse4": [24, 30, 32, 159, 168, 171], "older": [24, 30, 32], "msse4": 24, "give": [24, 148, 159, 375], "therefor": [24, 138, 140, 144, 154, 302, 518], "arch_opt_flag": 24, "portabl": [24, 139, 302], "throughout": [24, 44, 269, 388, 425], "undefin": [24, 45, 161, 167, 172, 175, 176, 179, 181, 182, 183, 184, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 216, 223, 302, 308, 332, 518], "crash": [24, 388], "conflict": [24, 432], "donednn_cpu_runtim": 24, "tbbroot": 24, "environment": 24, "instal": [24, 38, 51], "dtbbroot": 24, "winograd": [24, 26, 146, 160, 161, 166, 167], "_onednn_test_threadpool_impl": 24, "standalon": 24, "eigen": [24, 152], "eigen3_dir": 24, "d_onednn_test_threadpool_impl": 24, "deigen3_dir": 24, "eigen3": 24, "plu": 24, "decomposit": 24, "At": [24, 30, 31, 44, 53, 66, 143, 144, 156, 160, 251, 388], "balanc": [24, 380], "item": [24, 144], "worker": [24, 557], "64": [24, 48, 49, 144, 157, 158, 172, 205, 234, 235, 238, 244, 249, 267, 284, 340, 369, 371, 384, 391, 421, 532], "optimis": 24, "computelibrari": 24, "machin": [24, 245, 380], "mlplatform": 24, "org": [24, 42, 157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "donednn_aarch64_use_acl": 24, "download": [24, 38], "advis": [24, 30, 31, 50, 156], "v23": 24, "11": [24, 25, 46, 144, 172, 228, 229, 231, 232, 236, 237, 238, 239, 240, 252, 263, 264, 273, 362, 365, 366, 372, 373, 374, 383, 388, 391, 414, 415], "donednn_blas_vendor": 24, "graphic": [24, 42, 48, 253, 340, 389, 432], "sdk": 24, "dopenclroot": 24, "donednn_gpu_runtim": 24, "simultan": [24, 36, 38, 146, 322], "besid": [24, 37, 40], "avx512_cor": [24, 30, 160, 168, 314], "conveni": [25, 34, 53, 159, 176, 193, 308, 389, 473, 535], "almost": [25, 139, 159], "far": [25, 49], "concern": [25, 49], "switch": [25, 155, 159], "back": [25, 29, 37, 45, 49, 57, 58, 67, 68, 69, 70, 71, 72, 94, 95, 98, 99, 144, 146, 161, 231, 232, 290, 292, 302, 304, 325, 333, 337, 365, 366, 394, 395, 432, 456, 458, 460, 462, 464, 466, 516, 520, 522], "forth": 25, "desir": [25, 45, 139, 314], "c99": 25, "medium": 25, "insid": [25, 27, 37, 38, 159, 182, 190, 241, 255, 277, 302, 375, 390, 391, 398, 436, 518], "thin": 25, "wrapper": [25, 472, 485, 516, 530, 554], "stabl": [25, 42, 150, 167], "abi": [25, 155, 201], "usabl": [25, 28], "target": [25, 37, 76, 157, 158, 235, 243, 244, 284, 326, 330, 333, 335, 337, 371, 532], "audienc": 25, "experienc": 25, "ffi": 25, "framework": [25, 37, 41, 45, 137, 139, 143, 159, 332, 340, 388, 390, 391, 392, 393, 394, 395], "overhead": [25, 27, 40, 44, 140, 143, 144, 156, 159, 160], "sanit": [25, 40], "consequ": [25, 414], "nan": 25, "larg": [25, 40, 143, 161], "close": [25, 139, 154], "overlap": [25, 57, 141], "concaten": [26, 66, 148, 161, 200, 208, 209, 233, 289, 302, 367, 453, 454], "concat_dimens": [26, 278, 289, 454], "ou": [26, 66, 149, 150], "src_i": [26, 64, 66, 94, 123, 151], "c_1": [26, 66], "c_": [26, 66, 148], "dnnl_arg_multiple_src": [26, 151, 233, 272, 278, 308, 367, 430], "sum_i": [26, 157, 244], "c_i": 26, "necessarili": [26, 147, 154, 157, 158, 235, 371], "dnnl_nchw16c": [26, 176, 193], "dnnl_ncdhw8c": [26, 176, 193], "prepack": 26, "dnnl_format_kind_opaqu": [26, 175, 192], "s8s8": [26, 49], "abl": [26, 30, 53, 146, 151, 196, 388], "slower": [26, 32, 151], "graph": [27, 32, 35, 36, 40, 41, 42, 51, 79, 131, 137, 160, 163, 218, 237, 238, 246, 252, 273, 275, 278, 282, 314, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 340, 342, 475], "compon": [27, 36, 40, 160], "fold": 27, "redund": 27, "megabyt": 27, "won": [27, 160], "reach": [27, 36, 189, 217, 218, 328, 534], "getter": 27, "ref": [27, 157, 158, 235, 371], "dnnl_graph_set_constant_tensor_cache_capac": [27, 278, 328], "dnnl_graph_get_constant_tensor_cache_capac": [27, 278, 328], "programm": 27, "onednn_graph_constant_tensor_cache_capac": 27, "engine_kind1": 27, "size1": 27, "engine_kind2": 27, "size2": 27, "1024": [27, 36, 143, 146, 246, 269, 275, 278, 327, 425], "2048": [27, 246, 275], "start": [27, 35, 36, 40, 46, 90, 91, 105, 106, 152, 155, 156, 159, 160, 237, 243, 251, 252, 253, 273, 274, 308, 353, 383, 391, 392, 395, 413, 414, 439], "pars": 27, "prioriti": [27, 38], "neural": [28, 29, 32, 40, 155, 228, 229, 313, 334, 362, 363], "network": [28, 29, 32, 40, 44, 155, 228, 229, 313, 334, 362, 363], "df_": 28, "commonli": [28, 29], "wide": [28, 40], "known": [28, 29, 53, 157, 245, 251, 255, 277, 302, 375, 380, 388, 390, 393, 394, 398, 436], "summar": [28, 33, 138, 148], "scale_shift": 28, "carri": [28, 157], "diff_src": [28, 45, 52, 55, 58, 61, 65, 68, 71, 78, 82, 85, 87, 89, 91, 95, 99, 102, 106, 117, 122, 124, 126, 128, 135, 141, 147, 231, 232, 236, 269, 285, 293, 296, 299, 365, 366, 372, 425], "diff_dst": [28, 45, 52, 55, 58, 61, 63, 65, 68, 69, 71, 72, 78, 82, 85, 87, 89, 91, 95, 99, 102, 106, 117, 122, 124, 126, 128, 135, 231, 232, 236, 285, 293, 296, 299, 365, 366, 372], "diff_bia": [28, 63], "diff_scale_shift": 28, "_layer": 28, "_iter": 28, "recurr": [28, 32, 148, 224, 258, 260, 276, 308, 313, 354, 404, 409, 434, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "letter": [28, 159, 176, 193, 413], "od": 28, "depth": [28, 29, 67, 68, 159, 176, 193, 254, 290, 292, 304, 396, 456, 458, 460, 462, 464, 466, 520, 522], "kd": [28, 29, 47], "sd": [28, 29, 67, 68], "sw": [28, 29, 57, 67, 68, 98, 141, 234, 249, 264, 369, 384, 415], "dd": [28, 29, 34, 67, 68], "dh": [28, 29, 57, 67, 68, 98, 141, 264, 415], "dilat": [28, 68, 69, 70, 71, 72, 98, 99, 183, 184, 206, 207, 228, 236, 237, 238, 252, 262, 264, 273, 278, 290, 292, 304, 362, 372, 390, 391, 393, 394, 413, 415, 456, 458, 460, 462, 464, 466, 520, 522, 535], "ph": 28, "pw": 28, "transposit": [28, 287, 320, 348], "b": [28, 40, 48, 53, 148, 157, 158, 159, 176, 193, 235, 241, 245, 255, 277, 278, 287, 301, 302, 320, 321, 322, 342, 348, 371, 375, 380, 398, 413, 436, 514, 560, 561], "hidden": [28, 49, 244, 258, 276, 308, 313, 378, 404, 434, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 564, 566], "_t": [28, 148], "timestamp": [28, 144, 148], "l": [28, 51, 52, 148, 176, 224, 258, 260, 269, 276, 284, 302, 354, 404, 409, 425, 434, 532], "tanh": [28, 29, 34, 40, 101, 135, 148, 166, 167, 185, 224, 234, 249, 256, 258, 260, 261, 276, 281, 354, 369, 384, 400, 404, 409, 411, 434], "logist": [28, 34, 166, 167], "cell": [28, 32, 49, 166, 167, 176, 193, 206, 207, 210, 211, 244, 258, 276, 308, 313, 378, 379, 404, 434, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 535, 544, 564, 566], "tild": [28, 148], "candid": [28, 40, 53, 176, 193], "gate": [28, 148, 166, 167, 176, 193, 224, 258, 260, 269, 276, 302, 354, 404, 409, 425, 434], "forget": [28, 176, 193, 231, 232, 365, 366], "o": [28, 139, 144, 148, 159, 161, 176, 193, 244, 258, 263, 269, 284, 302, 378, 379, 404, 425, 532], "updat": [28, 29, 32, 47, 148, 154, 155, 176, 193, 231, 232, 236, 237, 238, 246, 252, 258, 269, 273, 275, 365, 366, 372, 404, 425, 490], "reset": [28, 36, 152, 166, 167, 176, 193, 258, 309, 405, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "english": 28, "alphabet": 28, "canon": 28, "z": [28, 49], "outermost": [28, 149, 150, 159, 176, 193, 302], "innermost": [28, 149, 150, 176, 193, 206, 207, 302], "dens": [28, 36, 159, 160, 302, 518], "ba": [28, 36, 193, 199, 223, 518], "last": [28, 36, 49, 50, 90, 91, 96, 132, 139, 157, 158, 159, 160, 189, 217, 218, 235, 299, 309, 363, 371, 378, 379, 388, 476, 534], "transpos": [28, 42, 96, 149, 176, 193, 199, 223, 249, 255, 287, 320, 348, 384, 398], "natur": [28, 93, 166, 167, 388], "suppos": [28, 46, 269, 425], "column": [28, 36, 53, 96, 144, 156, 159, 287, 320, 348], "row": [28, 36, 96, 149, 156, 159, 194, 216, 241, 244, 278, 287, 320, 332, 348, 375], "major": [28, 49, 149, 159, 241, 287, 314, 320, 332, 348, 375, 567], "fortran": 28, "todo": [28, 141, 243, 353, 378], "pictur": [28, 141, 159, 433], "ab16a": 28, "similar": [28, 32, 36, 44, 142, 155, 158, 159, 161, 194, 199, 216, 223, 237, 238, 246, 252, 269, 273, 275, 302, 364, 375, 388, 425, 518], "split": [28, 45, 139, 144, 157, 158, 159, 235, 302, 371, 518], "contigu": [28, 53, 159, 287, 320, 322, 332, 348], "represent": [28, 41, 159, 302, 375, 378, 383, 388, 389, 432, 518], "domain": [28, 36, 159, 176, 193, 284, 375, 524], "four": [28, 49, 148], "cross": [29, 118, 139, 160, 340], "correl": 29, "comment": [29, 67, 68], "front": [29, 57, 58, 67, 68, 69, 70, 71, 72, 98, 99, 144, 290, 292, 304, 456, 458, 460, 462, 464, 466, 520, 522], "top": [29, 57, 58, 67, 68, 69, 70, 71, 72, 98, 99, 144, 159, 284, 290, 292, 302, 304, 456, 458, 460, 462, 464, 466, 520, 522, 524], "left": [29, 34, 52, 53, 57, 58, 67, 68, 69, 70, 71, 72, 90, 91, 96, 98, 99, 120, 141, 147, 149, 150, 159, 160, 206, 207, 208, 209, 234, 249, 262, 264, 269, 284, 290, 292, 302, 304, 369, 384, 413, 415, 425, 456, 458, 460, 462, 464, 466, 520, 522, 524, 535], "pd_l": [29, 67, 68], "ph_l": [29, 57, 67, 68, 98, 141, 234, 249, 264, 369, 384, 415], "pw_l": [29, 57, 67, 68, 98, 141, 234, 249, 264, 369, 384, 415], "_l": 29, "stand": [29, 139], "bottom": [29, 57, 58, 67, 68, 69, 70, 71, 72, 98, 99, 159, 290, 292, 304, 456, 458, 460, 462, 464, 466, 520, 522], "pd_r": [29, 67, 68], "ph_r": [29, 67, 68, 234, 249, 264, 369, 384, 415], "pw_r": [29, 67, 68, 234, 249, 264, 369, 384, 415], "_r": 29, "broken": [29, 157, 158, 235, 371], "exposit": 29, "realiti": 29, "geq": [29, 34, 147, 364], "sum_": [29, 47, 53, 67, 94, 96, 123], "lfloor": [29, 67, 147], "rfloor": [29, 67, 147], "oc_g": [29, 67], "ic_g": [29, 67], "5d": [29, 50, 159, 176, 193, 284, 524], "depthwis": [29, 284, 308, 524], "dkh": [29, 67], "dkw": [29, 67], "fraction": 29, "swap": [29, 302, 518], "li": 29, "expand": [29, 249, 384], "plai": [29, 388], "crucial": 29, "role": 29, "determin": [29, 46, 179, 181, 262, 390, 391, 393, 394, 414], "diffbia": [29, 47, 148], "dnnl_arg_diff_weight": [29, 47, 142, 231, 232, 236, 278, 308, 365, 366, 372], "dnnl_arg_diff_bia": [29, 47, 148, 231, 232, 236, 269, 278, 308, 365, 366, 372, 425], "prelu_post_op_posit": [29, 47, 53], "f8_e5m2": [29, 32, 53, 73, 107, 146, 180, 191], "physic": [29, 50, 139, 159, 176, 251, 302, 388, 518], "critic": [29, 44, 45, 47, 140, 262, 413], "shorten": [29, 47, 148, 160], "dnnl_wio": [29, 47, 176], "dnnl_hwio": [29, 47, 176], "dnnl_dhwio": [29, 47, 176], "xe": [29, 42, 340], "hpc": [29, 32], "entir": [29, 44, 47, 53, 109, 110, 111, 112, 113, 114, 115], "dnnl_arg_": [29, 47, 53, 303, 308, 319, 346, 347, 530, 538], "memory_index": [29, 47, 53], "dnnl_arg_attr_zero_point": [29, 53, 241, 255, 277, 278, 284, 308, 375, 398, 436, 532], "prevent": [29, 33, 46, 138, 308], "feasibl": 29, "usag": [29, 31, 32, 36, 37, 48, 118, 160, 176, 193, 224, 225, 237, 238, 246, 252, 258, 260, 273, 275, 276, 284, 354, 356, 404, 409, 414, 434, 524, 532], "deploi": 29, "done": [29, 34, 45, 53, 141, 146, 157, 158, 235, 363, 364, 371, 388, 389], "set_scal": [29, 53, 277, 436, 437, 532], "wei": [29, 32], "eta": 29, "set_zero_point": [29, 53, 277, 436, 437, 532], "shift_": [29, 146], "simd": [29, 30, 32, 168, 171], "expens": [29, 45, 383, 388, 413, 518], "fast": [29, 157, 158, 159, 235, 371], "lavin": 29, "grai": 29, "often": [29, 144, 160], "aarch64": [29, 144, 161, 340], "rearrang": [29, 132], "fallback": 29, "condit": [29, 34, 44, 120, 148, 157, 158, 189, 217, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 322, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "exce": [29, 161], "half": [29, 32, 154, 172, 180, 191], "14": [29, 46, 144, 262, 413, 414, 524], "constraint": [29, 53], "met": [29, 105, 106], "silent": [29, 31], "fall": [29, 161], "explicit": [29, 152, 269, 302, 425], "weigh": 29, "against": 29, "boost": [29, 30, 32, 154, 160, 168, 171], "consumpt": [29, 207, 302, 388], "grow": 29, "significantli": [29, 143, 154], "growth": 29, "rest": [29, 67], "conv1_pd": 29, "convolution_winograd": [29, 167, 456, 458, 460, 462], "conv1_src_md": [29, 229, 363], "conv1_weights_md": [29, 229, 363], "conv1_bias_md": [29, 229, 363], "conv1_dst_md": [29, 229, 363], "conv1_strid": [29, 229, 363], "conv1_padding_l": 29, "conv1_padding_r": 29, "convolution_auto": [29, 167, 262, 413, 456, 458, 460], "heurist": [29, 161], "affin": [29, 90, 91, 139], "f8_e4m3": [29, 32, 53, 73, 107, 146, 180, 191], "center": [29, 32, 53, 146, 241, 375, 398], "max": [29, 32, 34, 36, 44, 45, 46, 49, 53, 64, 65, 84, 86, 97, 98, 111, 141, 145, 146, 150, 157, 158, 166, 167, 183, 184, 235, 241, 245, 287, 304, 310, 320, 348, 371, 375, 380, 389, 432], "seri": [29, 32, 49, 53, 146], "fp8": [29, 53], "No": [29, 30, 32, 38, 39, 147, 148, 158, 161, 169, 170, 224, 230, 231, 242, 244, 269, 354, 365, 377, 379, 413, 425], "sometim": [30, 44, 45, 47, 49, 159, 269, 383, 388, 425], "explor": [30, 144], "onednn_max_cpu_isa": 30, "avx": [30, 32, 160, 168, 171, 314, 413], "advanc": [30, 32, 36, 48, 53, 148, 168, 171, 245, 340, 380, 398, 436], "avx2_vnni": [30, 168, 314], "dl": [30, 32, 154, 160, 168, 171], "512": [30, 32, 36, 160, 168, 171, 242, 261, 377, 411], "avx512bw": [30, 32], "avx512vl": 30, "avx512dq": 30, "avx512_core_vnni": [30, 168, 314], "avx512_core_bf16": [30, 160, 168, 314], "avx10_1_512": [30, 168, 314], "avx512_core_fp16": [30, 160, 168, 314], "avx10": 30, "float16": [30, 168, 171], "avx10_1_512_amx": [30, 168, 314], "avx512_core_amx": [30, 160, 168, 314], "avx2_vnni_2": [30, 168, 314], "avx10_1_512_amx_fp16": [30, 168, 314], "avx512_core_amx_fp16": [30, 160, 168, 314], "exclud": [30, 166, 167], "preview": 30, "alias": [30, 144, 176, 193, 314], "introduct": [30, 48], "manag": [30, 31, 37, 138, 144, 160, 214, 215, 237, 238, 246, 252, 273, 275, 303, 346, 485], "set_max_cpu_isa": [30, 314, 342], "ed": [30, 144], "observ": [30, 139, 160], "get_effective_cpu_isa": [30, 314, 342], "highest": [30, 38, 44, 160], "zmm": 31, "advantag": [31, 154], "clock": [31, 144], "onednn_cpu_isa_hint": 31, "set_cpu_isa_hint": [31, 314, 342], "routin": [31, 157, 158, 235, 322, 371, 558], "no_hint": [31, 169, 314], "prefer_ymm": [31, 169], "ymm": [31, 169, 170], "get_cpu_isa_hint": [31, 314, 342], "pose": 31, "bypass": 31, "ieee": [32, 154], "golden": 32, "comparison": [32, 53, 157, 158, 235, 245, 302, 353, 371], "boolean": [32, 42, 120, 172, 180, 284, 334, 532], "s4": [32, 191], "u4": [32, 191], "doubl": [32, 172, 207, 241, 245, 278, 375, 380], "ofp8": [32, 172, 180, 191], "5": [32, 34, 36, 46, 49, 81, 83, 88, 89, 90, 91, 120, 144, 147, 154, 156, 157, 158, 159, 172, 176, 180, 191, 218, 228, 229, 231, 232, 235, 236, 237, 238, 239, 240, 246, 252, 253, 259, 263, 267, 273, 274, 275, 332, 362, 365, 366, 371, 372, 373, 374, 389, 390, 391, 393, 394, 407, 421, 432], "arithmet": [32, 112, 130, 144, 157, 245, 284, 380, 532], "topic": [32, 35, 302, 340, 388, 413, 414], "govern": [32, 157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "convert_": 32, "_dt": 32, "_zero": 32, "_point_": 32, "postops_": 32, "oscale_": 32, "mix": [32, 41, 42, 43, 136], "nearest": [32, 88, 89, 119, 136, 166, 167, 183, 184, 312], "tie": 32, "flush": [32, 328], "fenv": 32, "fesetround": 32, "xmmintrin": 32, "_mm_set_flush_zero_mod": 32, "_mm_flush_zero_on": 32, "ftz": 32, "explain": [32, 46, 363, 364], "recogn": [32, 40, 41], "fp16": 32, "tba": 32, "word": [32, 45, 49, 53, 176, 193, 214, 215], "4x": 32, "microarchitectur": 32, "uarch": [32, 144], "lp": [32, 145, 166], "dp4a": 32, "uhd": 32, "11th": 32, "14th": 32, "gen": [32, 48, 241, 245, 255, 277, 375, 380, 398, 436], "iri": [32, 406], "formerli": [32, 49], "dg1": 32, "hpg": 32, "xmx": [32, 42], "aka": [32, 176, 196, 243, 244, 388], "dpa": 32, "arc": [32, 406], "tm": [32, 144, 353], "achemist": 32, "flex": 32, "arctic": 32, "sound": [32, 159], "mad": 32, "pont": 32, "vecchio": 32, "upconvers": 32, "faster": 32, "newer": 32, "interact": [33, 138, 298, 303, 319, 320, 331, 333, 337], "dnnl_sycl": [33, 221, 273, 274, 275, 394, 395, 432], "seamlessli": 33, "submit": [33, 138, 274, 309, 360, 362, 363, 389, 432, 557], "access": [33, 44, 138, 139, 154, 244, 269, 274, 302, 306, 314, 327, 332, 378, 383, 388, 389, 425, 432, 516], "uint8_t": [33, 49, 140, 157, 158, 207, 235, 241, 244, 255, 278, 287, 302, 303, 308, 320, 330, 332, 333, 334, 335, 342, 344, 346, 348, 371, 375, 379, 398, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 520, 521, 522, 525, 526, 527, 528, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 563, 564, 565, 566], "unifi": [33, 37, 138], "sycl_interop": [33, 273, 274, 275, 278, 282, 302, 319, 324, 325, 337, 342, 343, 394, 395, 432], "make_engin": [33, 138, 140, 346, 347], "get_devic": [33, 36, 138, 140, 273, 275, 346, 347, 394, 395], "get_context": [33, 36, 138, 253, 273, 275, 346, 347, 389, 394, 395], "make_stream": [33, 36, 138, 273, 275, 346, 347, 348, 394, 395], "get_queu": [33, 274, 347, 432], "make_memori": [33, 138, 274, 346, 347, 432], "get_buff": [33, 274, 302, 347, 432], "altern": [33, 42, 45, 138, 147], "uniform": [33, 138, 139], "host": [33, 138, 197, 198, 221, 222, 302, 325, 337, 345, 389, 432, 516], "memory_kind": [33, 138, 274, 278, 303, 319, 346, 347, 432], "could": [33, 40, 41, 138, 144, 154, 157, 158, 164, 165, 235, 241, 313, 371, 375, 388], "identifi": [33, 36, 37, 138, 144, 302, 335], "get_memory_kind": [33, 138, 346, 347], "track": [33, 37, 79], "accessor": [33, 432], "proper": [33, 45, 46, 138, 157, 158, 235, 245, 371, 375, 380, 388], "write": [33, 36, 44, 138, 144, 157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 302, 322, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 389, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 516, 561], "i_1": 34, "ldot": [34, 46, 53], "i_k": 34, "dnnl_eltwise_ab": [34, 166, 167], "begin": [34, 54, 55, 77, 85, 92, 105, 108, 116, 142, 147, 148, 149, 157, 158, 224, 225, 226, 227, 229, 233, 234, 235, 242, 244, 249, 250, 253, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 354, 356, 358, 360, 367, 369, 371, 377, 379, 384, 386, 389, 396, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434], "clip": [34, 64, 166, 167], "dnnl_eltwise_clip": [34, 166, 167], "clip_v2": 34, "dnnl_eltwise_clip_v2": [34, 166, 167], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [34, 166, 167], "elu": [34, 40, 78, 166, 167, 185, 281], "dnnl_eltwise_elu": [34, 166, 167], "dnnl_eltwise_elu_use_dst_for_bwd": [34, 166, 167], "exp": [34, 40, 94, 123, 166, 185, 244, 281], "dnnl_eltwise_exp": [34, 166, 167], "dnnl_eltwise_exp_use_dst_for_bwd": [34, 166, 167], "gelu_erf": 34, "dnnl_eltwise_gelu_erf": [34, 166, 167], "erf": [34, 81, 166, 167], "pi": 34, "gelu_tanh": 34, "dnnl_eltwise_gelu_tanh": [34, 166, 167], "044715": 34, "hardsigmoid": [34, 85, 166, 167, 185, 281], "dnnl_eltwise_hardsigmoid": [34, 166, 167], "min": [34, 49, 64, 65, 84, 86, 100, 113, 142, 144, 145, 152, 166, 167, 183, 184, 241, 310, 375], "hardswish": [34, 40, 87, 166, 167, 185, 281], "dnnl_eltwise_hardswish": [34, 166, 167], "dnnl_eltwise_linear": [34, 166, 167], "dnnl_eltwise_log": [34, 166, 167], "log_": 34, "dnnl_eltwise_logist": [34, 166, 167, 313], "dnnl_eltwise_logistic_use_dst_for_bwd": [34, 166, 167], "mish": [34, 102, 166, 167, 185, 281], "dnnl_eltwise_mish": [34, 166, 167], "omega": [34, 46, 102], "delta": [34, 102], "pow": [34, 40, 166, 167, 185, 281], "dnnl_eltwise_pow": [34, 166, 167], "dnnl_eltwise_relu_use_dst_for_bwd": [34, 166, 167, 293, 468], "dnnl_eltwise_round": [34, 166, 167], "soft_relu": [34, 166, 167], "dnnl_eltwise_soft_relu": [34, 166, 167], "dnnl_eltwise_sqrt": [34, 166, 167], "dnnl_eltwise_sqrt_use_dst_for_bwd": [34, 166, 167], "squar": [34, 40, 110, 127, 130, 166, 167, 185, 281], "dnnl_eltwise_squar": [34, 166, 167], "swish": [34, 166, 167], "dnnl_eltwise_swish": [34, 166, 167], "dnnl_eltwise_tanh": [34, 166, 167, 313], "dnnl_eltwise_tanh_use_dst_for_bwd": [34, 166, 167], "134145": 34, "_relu": 34, "logsigmoid": 34, "soft": [34, 44], "eltwise_forward": [34, 229, 231, 232, 248, 250, 251, 253, 263, 274, 293, 342, 363, 365, 366, 383, 386, 388, 389, 432, 468, 530], "rather": [34, 269, 425], "Such": [34, 45, 139, 518], "satisfi": [34, 37], "aggress": 36, "onednn_experimental_bnorm_stats_one_pass": 36, "varianc": [36, 59, 60, 61, 83, 90, 91, 195, 196, 225, 227, 254, 257, 285, 296, 299, 308, 356, 360, 396, 402, 447, 449, 478, 480, 494, 496], "bn": 36, "rfc": 36, "spars": [36, 157, 158, 161, 175, 192, 194, 206, 207, 216, 235, 239, 240, 242, 302, 371, 373, 374, 518], "microkernel": 36, "metadata": [36, 37, 239, 240, 373, 374], "enumer": [36, 535], "format_kind": [36, 155, 160, 161, 206, 286, 290, 292, 297, 299, 301, 302, 305, 310, 312, 313, 516, 518], "compress": [36, 44, 53, 194, 216, 277, 436, 437], "sort": 36, "co": [36, 159, 224, 225, 226, 227, 233, 234, 242, 244, 249, 250, 251, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 276, 278, 287, 320, 342, 348, 354, 356, 358, 360, 367, 369, 377, 384, 386, 388, 396, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430, 434], "ordin": 36, "sparse_encod": [36, 206, 516, 518], "member": [36, 206], "content": [36, 140, 302, 516, 518], "unspecifi": [36, 160, 173, 174, 302, 518], "pseudocod": 36, "namespac": [36, 140, 155, 157, 158, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 303, 319, 320, 321, 324, 333, 337, 353, 354, 356, 358, 360, 365, 366, 367, 369, 371, 373, 374, 375, 377, 380, 383, 384, 386, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436], "m": [36, 53, 96, 144, 157, 158, 229, 235, 239, 240, 241, 242, 245, 246, 255, 261, 263, 275, 277, 278, 287, 320, 322, 342, 348, 371, 373, 374, 375, 377, 380, 398, 411, 414, 436, 561, 569], "nnz": [36, 239, 240, 242, 278, 302, 373, 374, 377, 518], "values_dt": 36, "indices_dt": [36, 278, 302], "pointers_dt": [36, 278, 302], "csr_md": 36, "entri": [36, 42, 160, 206, 207, 239, 240, 284, 302, 306, 309, 327, 373, 374, 518, 524], "csr_valu": 36, "5f": [36, 227, 239, 240, 244, 255, 360, 373, 374, 379, 398], "0f": [36, 228, 229, 230, 231, 232, 236, 239, 240, 242, 243, 244, 247, 248, 253, 269, 274, 278, 362, 364, 365, 366, 372, 373, 374, 377, 378, 379, 382, 383, 389, 425, 432], "csr_indic": 36, "csr_pointer": 36, "csr_mem": 36, "values_sz": 36, "indices_sz": 36, "pointers_sz": 36, "values_handl": 36, "indices_handl": 36, "pointers_handl": 36, "coo_md": 36, "coo_valu": 36, "coo_row_indic": 36, "coo_col_indic": 36, "coo_mem": 36, "row_indices_handl": 36, "col_indices_handl": 36, "99": 36, "wtag": 36, "dtag": 36, "4x1000000": 36, "1000000x128": 36, "1000000": 36, "dt": [36, 157, 158, 160, 161, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 239, 240, 241, 242, 249, 250, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 278, 354, 356, 358, 360, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 377, 384, 386, 396, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 524], "3x512x1024": 36, "1x1024x512": 36, "agnost": [36, 176, 193, 302], "collect": [36, 37, 144, 160, 321, 335, 375], "cl_command_queu": [36, 138, 253, 278, 303, 346, 389], "ocl_queu": [36, 253, 389], "cl_queue_properti": 36, "prop": 36, "cl_queue_profiling_en": 36, "clcreatecommandqueuewithproperti": 36, "ocl_interop": [36, 138, 140, 253, 278, 282, 303, 324, 333, 342, 343, 389], "reset_profil": [36, 309, 342], "enqueu": [36, 389], "twice": 36, "wait": [36, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 309, 317, 354, 356, 358, 360, 365, 366, 367, 369, 373, 374, 375, 377, 380, 383, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 413, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 516, 554, 557], "conv_prim": [36, 234, 369], "uint64_t": [36, 152, 278, 309, 342, 557], "nsec": 36, "get_profiling_data": [36, 309, 342], "profiling_data_kind": [36, 309, 342], "resourc": [36, 37, 143, 325], "vendor": 36, "scope": [36, 44, 413], "apart": 36, "logfil": 36, "third": [36, 120, 388], "parti": 36, "spdlog": 36, "onednn_verbose_logfil": 36, "cnn_test_logg": 36, "cpp": [36, 38, 48, 51, 152, 160, 353, 363, 364, 378, 379, 383, 388, 389, 390, 391, 392, 393, 394, 395, 413, 414, 432], "consol": 36, "logger": 36, "until": [36, 231, 232, 237, 238, 246, 252, 273, 275, 302, 363, 365, 366, 380, 432, 516], "filepath": 36, "dnnl_verbose_logfil": 36, "stdout": [36, 160, 314], "rotat": 36, "lazi": 36, "onednn_verbose_logfile_s": 36, "50": 36, "onednn_verbose_log_with_consol": 36, "onednn_verbose_num_logfil": 36, "ai": 37, "class": [37, 140, 152, 206, 274, 278, 320, 325, 326, 330, 332, 334, 335, 338, 343, 348, 473, 485, 486, 530, 534, 535, 544], "bind": [37, 237, 238, 246, 252, 273, 275], "know": [37, 45, 241, 375], "connect": [37, 47, 137, 237, 238, 243, 252, 269, 273, 278, 332, 334, 390, 391, 393, 394, 425, 476], "edg": 37, "subgraph": [37, 39, 40, 41], "within": [37, 40, 49, 52, 144, 156, 159, 166, 167, 287, 299, 300, 302, 320, 348], "cycl": [37, 375], "procedur": 37, "port": 37, "node": [37, 42, 131, 139, 228, 236, 278, 362, 372, 414], "abstract": [37, 140, 156, 157, 158, 235, 294, 302, 334, 338, 371, 383, 388, 389, 432, 557], "multi": [37, 38, 40, 42, 56, 74, 97, 100, 103, 130, 133, 139, 338], "lifecycl": 37, "anymor": [37, 159], "head": [38, 40, 42, 144], "attent": [38, 40, 148, 224, 243, 244, 258, 276, 308, 313, 354, 378, 379, 404, 434, 443, 445, 498, 500, 544], "mha": 38, "perceptron": [38, 40], "mlp": [38, 255, 277, 398, 436], "bring": [38, 49], "involv": [38, 518], "onednn_experimental_graph_compiler_cpu_jit": 38, "onednn_experimental_graph_compiler_cpu_llvm_config": 38, "xbyak": 38, "donednn_build_graph": 38, "donednn_experimental_graph_compiler_backend": 38, "donednn_experimental_graph_compiler_cpu_jit": 38, "adopt": 38, "friendli": [38, 44, 269, 364, 414, 425], "ir": [38, 48], "among": [38, 139, 144, 332], "occur": [38, 49, 159, 161], "shall": [38, 157], "guidelin": 38, "10": [38, 144, 154, 172, 218, 224, 225, 226, 227, 228, 233, 234, 236, 237, 238, 241, 242, 243, 244, 245, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 278, 354, 356, 358, 360, 362, 367, 369, 372, 375, 377, 380, 384, 386, 388, 390, 391, 393, 394, 396, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430, 434], "technologi": 38, "onednn_experimental_graph_compiler_opt_level": 38, "turn": [38, 45, 159, 160, 388, 413], "onednn_experimental_graph_compiler_kernel_trac": 38, "stderr": 38, "filenam": 38, "json": [38, 39], "chrome": 38, "onednn_experimental_graph_compiler_print_pass_result": 38, "onednn_experimental_graph_compiler_verbos": 38, "messag": [38, 160, 241, 245, 375, 380, 388, 432, 438, 473, 568], "info": [38, 39, 144, 160, 284, 313, 413, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 524, 564, 566], "onednn_experimental_graph_compiler_dump_gencod": 38, "path_to_dump": 38, "onednn_experimental_graph_compiler_c_includ": 38, "path_to_c_codegen_head": 38, "sctrace": 38, "tmp": [38, 243, 244, 314], "rank": [38, 66, 73, 75, 76, 90, 91, 96, 107, 109, 110, 111, 112, 113, 114, 115], "cpu_includ": 38, "manual": [38, 41, 45, 49, 157, 158, 235, 243, 371], "path_to_onednn_repo": 38, "graph_compil": 38, "offlin": 38, "dump_cod": 38, "visual": [39, 51, 67, 68, 69, 70, 71, 72, 139, 155], "benchmark": [39, 414, 438], "onednn_graph_dump": 39, "serial": [39, 140, 302, 344], "onednn_graph_verbos": 39, "100001": 39, "100002": 39, "1313609102600373579": 39, "100003": 39, "12829238476173481280": 39, "overal": [40, 131, 159, 414], "choic": [40, 159, 161, 168, 171], "bracket": 40, "superscript": 40, "repetit": 40, "subscript": 40, "t1": [40, 161, 269, 278, 425], "neighbor": [40, 166, 167, 312], "implicitli": [40, 41, 148, 284, 302, 524], "in1": 40, "proceed": 40, "categori": [40, 176, 193], "unari": [40, 467, 469], "clamp": [40, 65, 185, 281], "gelu": [40, 82, 166, 167, 185, 281], "leakyrelu": [40, 185, 281], "sigmoid": [40, 122, 148, 167, 185, 281], "softplu": [40, 101, 126, 185, 281], "divid": [40, 42, 49, 67, 68, 69, 70, 71, 72, 83, 157, 158, 161, 176, 185, 193, 235, 281, 371], "reducel1": [40, 185, 281], "reducel2": [40, 185, 281], "reducemax": [40, 185, 281], "reducemean": [40, 185, 281], "reducemin": [40, 185, 281], "reduceprod": [40, 185, 281], "reducesum": [40, 185, 281], "biasadd": [40, 63, 185, 237, 252, 273, 281, 390, 393, 394], "batchnorminfer": [40, 59, 185, 281], "resnext": 40, "ssd": 40, "convtranspos": [40, 185, 281], "adversari": 40, "interpol": [40, 89, 147, 183, 184, 185, 281, 312], "bert": [40, 42], "dlrm": 40, "parallelwavegan": 40, "avgpool": [40, 185, 281], "maxpool": [40, 185, 281], "densenet": 40, "reciproc": [40, 185, 281], "dot": 40, "t2": 40, "layernorm": [40, 91, 185, 281], "groupnorm": [40, 185, 281], "smoothquant": 40, "convolutionbackwardweight": [40, 185, 281], "biasaddbackward": [40, 185, 281], "relubackward": [40, 185, 281], "batchnormtrainingbackward": [40, 185, 281], "reshapetranspos": 40, "staticreshap": [40, 42, 185, 281], "statictranspos": [40, 42, 185, 281], "activationbackward": 40, "sigmoidbackward": [40, 185, 281], "gelubackward": [40, 185, 281], "encod": [40, 51, 161, 194, 206, 207, 216, 239, 240, 242, 243, 244, 302, 377, 378, 379, 518], "decod": [40, 48, 243, 244, 378, 379], "bottleneck": [40, 160], "t3": 40, "t4": 40, "out1": 40, "out2": 40, "out3": 40, "out4": 40, "out5": 40, "out6": 40, "t0": [40, 161, 269, 278, 425], "t5": 40, "t6": 40, "out7": 40, "batchnormforwardtrain": [40, 185, 281], "out8": 40, "out9": 40, "out10": 40, "out11": 40, "convolutionbackwarddata": [40, 185, 281], "strictli": 41, "symmetr": [41, 49, 290, 292, 304], "scheme": 41, "asymmetr": [41, 53, 73, 75, 76, 107, 284, 375, 376, 398, 399, 436, 437, 524], "honor": 41, "faithfulli": 41, "elimin": 41, "typecast": [41, 118, 185, 281], "vice": [41, 53, 96], "versa": [41, 53, 96], "clearli": 41, "backbon": 42, "diffus": 42, "gpt": 42, "q": [42, 144, 273, 274, 275, 278, 394, 395, 432], "v": [42, 53, 149, 241, 242, 245, 255, 263, 277, 278, 375, 377, 380, 398, 436, 516], "qk": 42, "d_k": 42, "mini": [42, 176, 193, 255, 302, 398, 476], "acycl": 42, "blue": 42, "brown": 42, "causal": 42, "triangular": 42, "diagon": 42, "fill": [42, 44, 45, 53, 120, 157, 158, 159, 230, 235, 244, 245, 247, 248, 255, 263, 265, 277, 278, 371, 379, 380, 382, 383, 398, 413, 417, 436], "inf": [42, 108], "elsewher": [42, 414], "unchang": [42, 182, 190, 308, 534], "reshap": [42, 302, 518], "definit": [42, 147, 148, 149, 302, 323, 325, 336, 339, 475], "meet": 42, "properli": [42, 148, 159, 161, 308], "openmp": [42, 139, 160, 413], "256": [42, 144, 229, 230, 238, 243, 244, 254, 261, 262, 278, 364, 396, 411, 413], "arxiv": 42, "1706": 42, "03762v7": 42, "io": [42, 193, 241, 375], "graph_extens": 42, "html": [42, 241, 375], "c_g": 43, "c_ghw": 43, "group_normalization_forward": [43, 254, 296, 342, 396, 478, 530], "preprocess": 44, "classifi": 44, "depict": [44, 148, 159], "conv_prim_descr": 44, "maxim": [44, 314], "accomplish": 44, "manner": [44, 302, 518], "don": [44, 53, 228, 236, 241, 269, 362, 372, 375, 425], "find": [44, 109, 110, 111, 112, 113, 155, 237, 238, 241, 245, 248, 252, 273, 274, 375, 380, 383, 432], "look": [44, 159], "source_mem_descr": 44, "dest_mem_descr": 44, "weights_mem_descr": 44, "weight_memori": 44, "conv_source_memori": 44, "user_source_memori": 44, "get_desc": [44, 157, 158, 224, 229, 230, 231, 232, 234, 235, 241, 242, 243, 244, 248, 249, 255, 256, 258, 260, 262, 263, 265, 269, 276, 277, 302, 346, 354, 363, 364, 365, 366, 369, 371, 375, 377, 378, 379, 383, 384, 398, 400, 404, 409, 413, 414, 417, 425, 434, 436, 516], "reorder_prim_descr": 44, "conv_weights_memori": [44, 228, 230, 231, 232, 236, 362, 364, 365, 366, 372], "conv_dest_memori": 44, "durat": 44, "grab": 44, "infus": 44, "cast": [44, 49, 118, 136, 251, 388], "distribut": [44, 144, 157, 158, 166, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "effici": [44, 49, 159], "fed": [45, 154, 237, 238, 252, 273], "predict": 45, "forward_train": [45, 47, 148, 160, 161, 204, 224, 225, 234, 249, 250, 254, 256, 257, 258, 259, 260, 264, 265, 268, 269, 270, 271, 276, 354, 356, 369, 384, 386, 396, 400, 402, 404, 407, 409, 415, 417, 423, 425, 426, 428, 434, 445, 449, 460, 466, 470, 480, 484, 492, 496, 500, 504, 508, 512, 522, 528, 543, 548, 552, 566], "suffix": [45, 388], "_train": 45, "versu": [45, 154], "_infer": 45, "answer": 45, "backward_data": [45, 161, 204, 447, 478, 494], "sens": [45, 176, 193, 241, 375], "backward_weight": [45, 161, 204], "solver": 45, "practic": [45, 139, 146, 160, 237, 238, 246, 252, 263, 273, 275, 364, 413, 414], "consider": [45, 375], "care": 45, "pooling_max": [45, 167, 229, 231, 232, 262, 264, 363, 365, 366, 413, 415, 520, 522], "slide": 45, "posit": [45, 46, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 83, 88, 89, 90, 91, 92, 98, 99, 131, 159, 227, 302, 328, 360], "Of": [45, 523], "cours": [45, 159, 523], "again": [45, 148], "takeawai": 45, "former": [45, 49, 155, 159], "invoc": 45, "techniqu": 45, "perspect": [45, 146, 159, 388], "varieti": 45, "emit": 45, "unnecessari": [45, 139, 413], "bullet": 45, "9": [45, 46, 48, 172, 218, 237, 238, 252, 273, 390, 391, 393, 394, 414], "pick": [45, 263, 413, 414], "occasion": 45, "brain": 45, "workflow": [45, 389, 390, 391, 392, 393, 394, 395, 432], "workspace_desc": [45, 141, 224, 225, 231, 232, 258, 259, 260, 264, 269, 276, 354, 356, 365, 366, 404, 407, 409, 415, 425, 434, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "perfectli": 45, "inde": 45, "fwd": 45, "forward_primitive_desc": 45, "workspace_md": [45, 206], "primitive_forward": 45, "anywher": [45, 388], "els": [45, 88, 89, 228, 231, 232, 234, 236, 237, 238, 241, 249, 252, 263, 269, 273, 274, 362, 365, 366, 369, 372, 375, 384, 388, 425, 432], "bwd": 45, "primitive_backward": 45, "push": [46, 243, 244], "recent": [46, 143, 154], "focus": [46, 49, 139, 375], "shrink": [46, 49, 241, 375], "throughput": [46, 139, 154], "eight": 46, "offer": [46, 154], "pack": [46, 53, 157, 158, 159, 194, 199, 216, 223, 235, 242, 255, 277, 302, 321, 322, 371, 377, 398, 399, 436, 437, 518, 560, 561, 562], "cost": [46, 269, 414, 425], "dataset": [46, 364], "establish": 46, "q_": 46, "255": [46, 49, 207, 255, 398], "r_": 46, "127": [46, 49, 146, 244, 379], "alpha_": 46, "lceil": [46, 147], "rceil": [46, 147], "w_": [46, 49, 147, 148], "roundnearesteven": 46, "approx": [46, 144], "approxim": [46, 166], "t_": 46, "15": [46, 49, 144, 159, 239, 240, 373, 374], "17": [46, 144, 159, 414], "96": [46, 205, 228, 229, 231, 232, 236, 237, 252, 255, 256, 263, 273, 277, 362, 365, 366, 372, 398, 400, 414, 436], "bigl": 46, "bigr": 46, "238": 46, "187": 46, "66": 46, "88": 46, "net": [46, 48, 228, 229, 236, 243, 244, 269, 278, 362, 363, 364, 372, 378, 379, 425], "uniformli": 46, "g_0": 46, "o_1": 46, "i_2": 46, "h_3": 46, "w_4": 46, "walk": 46, "treat": [47, 49, 146, 150, 154], "minibatch": [47, 139, 302], "flatten": 47, "dnnl_io": [47, 176], "dnnl_oi": [47, 176], "dnnl_oiw": [47, 176], "dnnl_oihw": [47, 176, 228, 236, 362, 372], "dnnl_oidhw": [47, 176], "onednn_jit_dump": 48, "dnnl_set_jit_dump": [48, 278, 314], "dnnl_dump_cpu_jit_avx2_conv_fwd_kernel_f32": 48, "bin": 48, "dnnl_dump_cpu_jit_avx_gemv_t_f32_kern": 48, "30": [48, 241, 244, 245, 375, 379, 380], "disassembl": 48, "objdump": 48, "mi386": 48, "xed": 48, "emul": 48, "sde": 48, "dnnl_dump_gpu_simple_reord": 48, "dnnl_dump_gpu_gen9_conv_fwd": 48, "iga64": 48, "assembli": 48, "emphas": 49, "signed": 49, "int8_t": [49, 241, 244, 255, 267, 277, 278, 287, 320, 342, 348, 375, 379, 398, 421, 436], "dnnl_gemm_u8s8s32": [49, 244, 278, 287], "averag": [49, 57, 141, 144, 166, 167, 304], "biggl": 49, "biggr": 49, "div": [49, 166, 167], "dnnl_gemm_s8s8s32": [49, 278, 287], "gru": [49, 166, 167, 176, 193, 258, 276, 313, 405, 434, 481, 482, 483, 484, 501, 502, 503, 504], "behind": [49, 159, 413], "xeon": [49, 168, 171, 406, 414], "e7": 49, "haswel": 49, "x1xx": 49, "skylak": 49, "vpmaddubsw": 49, "vpmaddwd": 49, "vpaddd": 49, "s16": 49, "int16_t": 49, "c_s32": [49, 241, 375], "a_u8": [49, 241, 255, 375, 398], "b_s8": [49, 241, 255, 277, 375, 398, 436], "u8s8s32_compute_avx512": 49, "ab_s16": 49, "vpmaddubsw_r": 49, "saturate_to_s16": 49, "caution": 49, "snippet": 49, "u8s8s32_comput": 49, "32767": 49, "int16_min": 49, "int16_max": 49, "64770": 49, "pitfal": [49, 159], "vpmovsxbw": 49, "vpmovzxbw": 49, "2x": 49, "u7": 49, "s7": 49, "63": [49, 144, 244, 284, 532], "worth": [49, 375, 388, 414], "data_": 49, "set_rnn_data_qparam": [49, 244, 379, 532], "set_rnn_weights_qparam": [49, 244, 379, 532], "128": [49, 157, 158, 160, 205, 207, 229, 235, 255, 261, 262, 263, 371, 398, 411, 413, 414], "w_max": 49, "x2xx": 49, "cascad": 49, "lake": 49, "vpdpbusd": 49, "u8s8s32_compute_avx512_dl_boost": 49, "real": [49, 146, 159, 176, 241, 375, 390, 391, 392, 393, 394, 395], "world": [49, 241, 375], "overcom": 49, "emploi": 49, "y_": 49, "a_s8": 49, "u8s8": 49, "s8s8s32_comput": 49, "32258": 49, "solv": [49, 157, 158, 235, 371], "overview": 49, "x_s8": 49, "precomput": [49, 243, 244, 364, 379], "embed": [49, 378, 379], "rescal": 49, "insignificantli": 49, "noth": [49, 157, 158, 235, 371], "meaningless": 49, "ia": 49, "volum": [49, 131, 302], "2a": 49, "2b": 49, "2c": [49, 243, 244], "325383": 49, "070u": 49, "futur": [49, 328], "319433": 49, "037": 49, "chapter": 49, "rodriguez": 49, "andr": 49, "et": 49, "al": 49, "white": 49, "paper": [49, 159], "2018": [49, 230, 243, 244, 269, 425], "axi": [50, 53, 63, 66, 67, 68, 70, 71, 72, 73, 75, 76, 83, 88, 89, 90, 91, 94, 95, 107, 109, 110, 111, 112, 113, 114, 115, 123, 124, 132, 149, 150, 161, 183, 184, 206, 207, 233, 238, 270, 271, 278, 302, 315, 316, 367, 391, 426, 427, 428, 429, 535, 546, 548, 550, 552], "stat_desc": [50, 278, 299, 494, 496], "layer_normalization_forward": [50, 257, 299, 342, 402, 494, 530], "_ndim": 50, "_dim": [50, 53], "dnnl_tnc": [50, 148, 176], "dnnl_tn": [50, 176], "dnnl_nt": [50, 176], "dnnl_ldnc": [50, 148, 176], "unlik": [50, 75, 92, 118, 287, 320, 348, 393, 394, 476], "tnc": [50, 90, 91, 193, 224, 243, 244, 257, 258, 260, 269, 276, 354, 378, 379, 402, 404, 409, 425, 434], "dnnl_ntc": [50, 148, 176], "dnnl_bac": [50, 176, 193], "ldnc": [50, 90, 91, 193, 243, 244, 378, 379], "dnnl_type": [51, 159, 166, 170, 171, 175, 176, 196, 201, 203, 205, 207, 209, 211, 213, 215, 216, 474], "auxiliari": [51, 160, 251, 269, 388, 425], "dnnl_config": 51, "dnnl_version": [51, 278, 314], "dnnl_graph_typ": [51, 179, 184, 186, 188, 190, 475, 476], "dnnl_ukernel": [51, 157, 158, 223, 235, 371, 560], "dnnl_ukernel_typ": [51, 199], "libdnnl": [51, 144], "dnnl_library_typ": [51, 155], "dylib": 51, "bindnnl": 51, "dll": 51, "dnnlroot": 51, "getting_start": [51, 353, 388], "ldnnl": 51, "resolv": [51, 244, 378], "sure": [51, 53, 96, 157, 158, 235, 330, 371], "ld_library_path": 51, "dyld_library_path": 51, "rpath": 51, "appl": [51, 406], "secur": 51, "entitl": 51, "fly": [51, 388], "xcode": 51, "codesign": 51, "plist": 51, "xml": 51, "utf": 51, "doctyp": 51, "dtd": 51, "en": 51, "www": [51, 157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "propertylist": 51, "dict": 51, "eha": 51, "cl": [51, 144, 252, 253, 274, 389, 393, 432], "microsoft": [51, 139, 155, 406], "msv": 51, "n_": 52, "local_s": [52, 228, 231, 232, 236, 259, 278, 300, 362, 365, 366, 372, 407, 506, 508], "12d": [53, 176, 193], "bs_0": 53, "bs_1": 53, "rng": [53, 308], "dnnl_runtime_dim_v": [53, 161, 245, 255, 278, 302, 303, 308, 319, 346, 347, 380, 381, 398, 399, 530, 538], "wildcard": [53, 185, 281, 302, 332], "hand": [53, 159, 176, 193, 302], "situat": [53, 414], "inconsist": [53, 160, 161], "invalid": [53, 160, 161, 306, 314, 327, 328], "nd": [53, 105, 106, 159], "sake": [53, 159, 388], "prod_": 53, "mbox": [53, 142], "ax": [53, 88, 89, 96, 109, 110, 111, 112, 113, 114, 115, 142, 150, 161, 183, 184, 302, 518], "abc": [53, 193, 261, 302, 411, 518], "bac": [53, 193], "1x1x": 53, "x1": 53, "dnnl_arg_dropout_se": 53, "int_min": 53, "int_max": 53, "matric": [53, 156, 157, 158, 161, 241, 245, 255, 277, 287, 320, 348, 375, 380, 398, 436], "subsequ": [53, 155, 159, 160, 204, 205, 269, 295, 314, 378, 379, 388, 425], "sgemm": [53, 245, 287, 342, 348, 353, 381], "ge": [54, 77, 92, 105], "diff": [55, 85, 157, 158, 196, 206, 231, 232, 235, 236, 241, 245, 269, 285, 290, 292, 293, 296, 297, 299, 300, 304, 305, 308, 312, 313, 315, 316, 365, 366, 371, 372, 375, 380, 425, 443, 447, 456, 458, 462, 464, 468, 478, 482, 488, 490, 494, 498, 502, 506, 510, 520, 526, 535, 541, 544, 546, 550, 564], "_dst": [55, 85], "rule": [56, 74, 96, 97, 100, 103, 130, 133, 207], "auto_broadcast": [56, 74, 97, 100, 103, 120, 130, 133, 183, 184], "numpi": [56, 74, 97, 100, 103, 120, 130, 133, 183, 184, 302], "denom": [57, 141], "exclude_pad": [57, 58, 183, 184], "move": [57, 58, 67, 68, 69, 70, 71, 72, 98, 99, 159, 242, 377, 378, 379, 383, 472, 485, 516, 530, 554], "s64": [57, 58, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 83, 88, 89, 90, 91, 94, 95, 98, 99, 107, 109, 110, 111, 112, 113, 114, 115, 123, 124, 131, 132], "pads_begin": [57, 58, 67, 68, 69, 70, 71, 72, 98, 99, 183, 184, 237, 238, 252, 273, 390, 391, 393, 394], "auto_pad": [57, 58, 67, 68, 69, 70, 71, 72, 98, 99, 183, 184], "same_upp": [57, 58, 67, 68, 69, 70, 71, 72, 98, 99, 183, 184], "same_low": [57, 58, 67, 68, 69, 70, 71, 72, 98, 99, 183, 184], "pads_end": [57, 58, 67, 68, 69, 70, 71, 72, 98, 99, 183, 184, 237, 238, 252, 273, 390, 391, 393, 394], "rounding_typ": [57, 98, 183, 184], "floor": [57, 68, 98, 183, 184], "data_format": [57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 83, 88, 89, 98, 99, 105, 106, 160, 183, 184, 237, 238, 252, 273, 390, 391, 393, 394, 476], "interpret": [57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 83, 88, 89, 96, 98, 99, 131], "ncx": [57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 83, 88, 89, 98, 99, 105, 106, 183, 184, 237, 252, 273, 390, 393, 394], "nxc": [57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 83, 88, 89, 98, 99, 105, 106, 183, 184, 238, 391, 476], "srcshape": 58, "src_shape": [58, 88, 89, 183], "epsilon": [59, 60, 61, 83, 90, 91, 183, 184, 206, 207, 245, 257, 278, 285, 296, 299, 380, 402, 447, 449, 478, 480, 494, 496, 535, 537], "momentum": [59, 183, 184], "neither": [59, 61, 299, 383, 388, 389, 432, 494, 496], "running_mean": 59, "running_vari": 59, "batch_mean": 59, "batch_vari": 59, "diff_gamma": [61, 91], "diff_beta": [61, 91], "_valu": 64, "use_dst": [65, 78, 117, 122, 128, 135, 183, 184], "weights_format": [67, 68, 69, 70, 71, 72, 183, 184, 237, 238, 252, 273, 390, 391, 393, 394], "oix": [67, 68, 69, 70, 71, 72, 183, 184, 237, 252, 273, 390, 393, 394], "fist": 67, "stretch": [67, 68, 69, 70, 71, 72], "xio": [67, 68, 69, 70, 71, 72, 183, 184, 238, 391], "_channel": [67, 68, 69, 70, 71, 72], "_shape": [67, 68, 69, 70, 71, 72, 106], "firstli": [68, 96], "_pad": 68, "_h": 68, "_padding_h": 68, "output_pad": [68, 70, 71, 72, 183, 184], "dst_shape": [68, 88, 89, 120, 183, 184], "weights_shap": [69, 72, 183], "iox": [70, 71, 72, 183, 184], "xoi": [70, 71, 72, 183, 184], "zp": [73, 75, 76, 107, 183, 184, 238, 241, 375, 391], "zps_i": [73, 75, 76], "scale_i": [73, 107], "qtype": [73, 75, 76, 107, 183, 184, 238, 391], "per_tensor": [73, 75, 76, 107, 183, 184, 238, 391], "per_channel": [73, 75, 76, 105, 107, 183, 184, 238, 391], "scales_i": [75, 76], "channelnum": [75, 76, 109, 110, 111, 112, 113, 114, 115], "exponenti": [80, 166, 167], "sqrt2": 81, "y": 83, "coeffici": [83, 92], "keep_stat": [83, 90, 183, 184], "use_affin": [83, 90, 91, 183, 184], "modul": [83, 90, 91, 144], "1e": [83, 90, 91, 241, 375], "span": [83, 90, 91], "_src": 85, "bilinear": [88, 89, 167, 183, 184, 312], "trilinear": [88, 89, 147, 167, 183, 184, 312], "coordinate_transformation_mod": [88, 89, 183, 184], "coordin": [88, 89, 194, 216], "resiz": [88, 89, 242, 377], "half_pixel": [88, 89, 183, 184], "align_corn": [88, 89, 183, 184], "x_resiz": [88, 89], "differenti": [88, 140, 155, 334], "begin_norm_axi": [90, 91, 183, 184], "small": [92, 139, 156, 157, 161, 414], "leakag": 92, "logarithm": [93, 166, 167], "formul": [94, 125, 126, 388], "dst_i": [94, 123, 130], "big": 94, "src_j": [94, 123], "logsoftmax": [95, 150, 166, 167, 185, 281], "unsqueez": 96, "transpose_a": [96, 183, 184, 246, 275, 392, 395], "transpose_b": [96, 183, 184, 246, 275, 392, 395], "_0": [97, 100], "distanc": [98, 99], "avgpoolbackward": [99, 185, 281], "ln": [101, 125, 150], "diff_": [102, 148], "3src": 102, "2src": 102, "parametr": 105, "per_channel_broadcast": [105, 183, 184], "uni": [105, 106, 160, 243, 244, 413, 414], "direction": [105, 106], "rightmost": [105, 269, 425], "shape_i": 105, "tensorflow": [106, 154, 159], "_forward": 106, "diff_slop": 106, "zp_i": 107, "infin": 108, "neq": 108, "l1": [109, 144], "norm": [109, 110, 145, 166, 241, 245, 375, 380], "keep_dim": [109, 110, 111, 112, 113, 114, 115, 183, 184], "shapeof": [109, 110, 111, 112, 113, 114, 115], "l2": [110, 144, 241, 375], "root": [110, 127, 145, 166, 167], "cond": 120, "invalid_shap": [120, 189], "_0_i": 130, "_1_i": 130, "special_zero": [131, 183, 184], "keep": [131, 154, 156, 159, 182, 190, 207, 231, 232, 236, 269, 363, 365, 366, 372, 414, 425], "permut": [132, 176, 193, 278, 302, 518], "dnnl_ocl": [138, 197, 252, 253, 389, 393], "cl_mem": [138, 253, 278, 302, 303, 346, 388, 389, 516], "get_command_queu": [138, 253, 346, 389], "get_mem_object": [138, 253, 346, 389], "retain": 138, "destruct": [138, 518, 524, 532], "measur": [139, 160, 364], "affinit": 139, "tbb": [139, 144], "intention": 139, "nor": [139, 299, 383, 388, 389, 432, 494, 496], "principl": 139, "numactl": 139, "easi": 139, "modern": 139, "socket": [139, 414], "chip": 139, "tile": 139, "cluster": 139, "setup": [139, 144], "variant": [139, 148, 290, 292], "orient": 139, "latenc": [139, 144], "server": 139, "interleav": [139, 156], "chanc": 139, "traffic": 139, "omp_proc_bind": 139, "spread": 139, "omp_plac": 139, "omp_num_thread": [139, 414], "membind": 139, "cpunodebind": 139, "physcpubind": 139, "kmp_hw_subset": 139, "1t": 139, "costli": 140, "mitig": [140, 143, 244], "blob": [140, 206, 207, 278, 302, 303, 308, 333, 344, 346, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 518, 519, 521, 525, 527, 530, 535, 536, 538, 540, 542, 545, 547, 549, 551, 555, 563, 565], "commit": [140, 160, 314], "hash": [140, 160, 314, 413, 567], "dnnl_version_t": [140, 278, 314, 342], "packag": [140, 155], "fetch": 140, "primitive_desc_bas": [140, 308, 342, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_cache_blob_id": [140, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_cache_blob": [140, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 519, 521, 525, 527, 530, 536, 538, 540, 542, 545, 547, 549, 551, 555, 563, 565], "cache_miss": [140, 160], "cache_hit": [140, 160], "persistent_cache_hit": [140, 160], "store_cache_blob_on_disk": 140, "load_cache_blob_from_disk": 140, "conv_from_cache_blob": 140, "get_engine_cache_blob_id": [140, 346], "get_engine_cache_blob": [140, 346], "ocl_engin": 140, "get_blob": [140, 518], "deseri": 140, "dnnl_pooling_avg_include_pad": [141, 166, 167, 304], "dnnl_pooling_avg_exclude_pad": [141, 166, 167, 304], "nice": 141, "restor": 141, "itself": [141, 308, 388, 534, 554], "dnnl_pooling_max": [141, 166, 167, 228, 236, 304, 362, 372], "flt_max": 141, "dbl_max": 141, "area": [141, 160, 302, 518], "leaki": [142, 305], "trainabl": [142, 305], "Its": 142, "weights_md": [142, 206, 228, 261, 265, 362, 411, 417, 535], "repeat": [143, 413], "capac": [143, 278, 306, 327, 328, 342, 343], "exceed": [143, 161], "evict": [143, 306, 327], "hit": 143, "miss": [143, 144, 160, 183, 229, 231, 232, 243, 244, 363, 365, 366], "profile_cr": [143, 160], "onednn_primitive_cache_capac": 143, "dnnl_set_primitive_cache_capac": [143, 278, 306], "notifi": 144, "address": [144, 156, 159, 269, 333, 425], "onednn_jit_profil": 144, "tsc": [144, 314], "dnnl_set_jit_profiling_flag": [144, 278, 314], "box": 144, "overrid": [144, 152, 314], "dnnl_set_jit_profiling_jitdumpdir": [144, 278, 314], "timelin": 144, "chart": 144, "fp": [144, 284, 295, 314], "onednn_itt_task_level": 144, "trigger": [144, 414], "master": [144, 154], "amplx": 144, "knob": 144, "shapes_alexnet": 144, "nmi": 144, "watchdog": 144, "timer": 144, "impl": [144, 152], "prb": 144, "gop": 144, "gfreq": 144, "gflop": 144, "0time": 144, "0gflop": 144, "avx512_common": [144, 414], "alexnet": [144, 228, 229, 230, 231, 232, 236, 362, 363, 364, 365, 366, 372], "conv1": [144, 229, 237, 252, 273, 362, 363, 390, 393, 394], "g1mb256ic3ih227oc96oh55kh11sh4ph0n": 144, "53": 144, "9726": 144, "4285": 144, "3096": 144, "81": 144, "22": 144, "5851": 144, "2389": 144, "74": 144, "conv2": [144, 229, 362, 363], "g2mb256ic96ih27oc256oh27kh5ph2n": 144, "104": 144, "696": 144, "20": [144, 241, 245, 254, 332, 375, 380, 396], "2195": 144, "5177": 144, "98": 144, "21": [144, 414], "9233": 144, "4775": 144, "56": [144, 238], "conv3": [144, 229, 230, 364], "mb256ic256ih13oc384oh13kh3ph1n": 144, "68": 144, "904": 144, "5134": 144, "4441": 144, "57": 144, "18": [144, 160, 414], "1391": 144, "3798": 144, "conv4": [144, 229], "g2mb256ic384ih13oc384oh13kh3ph1n": 144, "51": 144, "678": 144, "7397": 144, "4401": 144, "97": [144, 160], "4623": 144, "4146": 144, "76": 144, "conv5": [144, 229], "g2mb256ic384ih13oc256oh13kh3ph1n": 144, "34": 144, "452": 144, "77148": 144, "4433": 144, "13": [144, 172, 176, 229, 230, 234, 249, 251, 364, 369, 384, 388], "50435": 144, "4051": 144, "skip": [144, 157, 158, 161, 235, 302, 322, 371, 392, 395, 516, 561], "mistrust": 144, "72": [144, 270, 426], "6726": 144, "avg": 144, "83": 144, "6142": 144, "report": [144, 146, 284, 532], "csv": 144, "_jit_avx512_common_conv_fwd_kernel": 144, "300": 144, "128503": 144, "293": 144, "946143": 144, "285": 144, "549830": 144, "268": 144, "868599": 144, "715527": 144, "libgomp": 144, "func": [144, 231, 232, 236, 365, 366, 372], "0x194f0": 144, "186": 144, "604226": 144, "0x19370": 144, "82": 144, "609694": 144, "jit_avx512_co": 144, "682241": 144, "vmlinux": 144, "763433": 144, "1451": 144, "459338": 144, "outsid": [144, 320, 394, 395], "280": 144, "489764": 144, "434821": 144, "interv": 144, "2000": 144, "ue": 144, "2344": 144, "3131": 144, "24": [144, 159], "1246": 144, "2237": 144, "2988": 144, "5157": 144, "6731": 144, "4617": 144, "5369": 144, "4434": 144, "87": 144, "1371": 144, "4020": 144, "75": [144, 228, 229, 231, 232, 236, 362, 365, 366, 372], "428": 144, "4522": 144, "06": 144, "7986": 144, "4037": 144, "79": 144, "64233": 144, "4508": 144, "05": 144, "99841": 144, "3828": 144, "1404": 144, "85": 144, "7318": 144, "dtlb": 144, "load": 144, "lock": 144, "4k": 144, "fb": 144, "26": [144, 224, 260, 354, 409], "icach": 144, "micro": [144, 156], "itlb": 144, "bad": [144, 161], "specul": 144, "l3": 144, "dram": 144, "frequenc": 144, "clocktick": 144, "retir": 144, "cpi": 144, "rate": [144, 160], "x87": 144, "microcod": 144, "assist": 144, "jitdump": [144, 314], "perfmap": [144, 314], "jitdumpdir": [144, 314], "record": [144, 237, 238, 252, 273], "k1": [144, 229], "mb1ic32ih14oc32oh14kh3ph1n": 144, "resnet_50": 144, "res4a_branch2b": 144, "mb1ic32ih14oc32oh14kh3ph1nresnet_50": 144, "0032768": 144, "0131836": 144, "248": 144, "551": 144, "0262988": 144, "124": [144, 146], "599": 144, "woken": 144, "captur": [144, 473], "wrote": 144, "884": 144, "23102": 144, "inject": 144, "displai": [144, 160, 161], "stdio": [144, 228, 236, 247, 362, 372, 382], "n20": 144, "lost": 144, "23k": 144, "uhh": 144, "5775500000": 144, "symbol": [144, 155], "39": 144, "33": 144, "0x000000000001d8ba": 144, "29": 144, "41": [144, 414], "31475": 144, "jit_avx2_conv_fwd_kernel_f32": 144, "49": 144, "0x000000000001d712": 144, "47": 144, "jit_avx2_convolution_fwd_t": 144, "execute_forward": 144, "exec_ctx_t": 144, "lambda": 144, "52": 144, "0x000000000001d8be": 144, "93": 144, "0x000000000001d716": 144, "0x000000000001d8c5": 144, "55": [144, 228, 229, 231, 232, 236, 263, 362, 365, 366, 372, 414], "0x000000000001d8c3": 144, "46": 144, "0x000000000001d71d": 144, "resolut": 144, "disassembli": 144, "brendan": 144, "gregg": 144, "excel": 144, "mathop": 145, "mul": [145, 166, 167, 310], "idl": 145, "ep": [145, 278, 310, 537], "kept": [146, 159, 176, 308, 534], "dnnl_arg_from": [146, 228, 229, 230, 231, 232, 236, 244, 247, 262, 278, 308, 362, 363, 364, 365, 366, 372, 379, 382, 413], "dnnl_arg_to": [146, 228, 229, 230, 231, 232, 236, 244, 247, 262, 278, 308, 362, 363, 364, 365, 366, 372, 379, 382, 413], "encount": [146, 160, 161, 363], "bug": [146, 187, 188], "team": 146, "dnnl_s8": [146, 172, 180, 191], "dnnl_f32": [146, 159, 172, 176, 180, 191, 228, 236, 247, 322, 362, 372, 382], "allevi": [146, 245, 380], "dt_src": 146, "memory_format": 146, "fmt_src": 146, "dt_dst": 146, "fmt_dst": 146, "upsampl": [147, 264, 415], "downsampl": 147, "f_h": 147, "f_w": 147, "ih_0": 147, "iw_0": 147, "ih_1": 147, "iw_1": 147, "nchw16c": [147, 159, 193], "_spatial": 147, "_size": 147, "unrol": 148, "srciter": 148, "dstiter": 148, "evalu": 148, "left2right": 148, "increas": [148, 154, 414], "right2left": 148, "decreas": [148, 414], "bidirectional_concat": [148, 208, 243, 244, 378, 379], "dstlayer": 148, "bidirectional_sum": [148, 208], "srclayer": 148, "h_": [148, 166, 167], "And": [148, 159, 302, 518], "vanilla_rnn_forward": [148, 276, 313, 342, 434, 530, 532, 564], "vanilla_rnn_backward": [148, 313, 342, 530], "vanilla_rnn_pd": [148, 276, 434], "aprop": 148, "src_layer_desc": [148, 244, 269, 278, 313, 379, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "src_iter_desc": [148, 224, 258, 260, 269, 276, 278, 313, 354, 404, 409, 425, 434, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "weights_layer_desc": [148, 243, 244, 269, 278, 313, 378, 379, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "weights_iter_desc": [148, 224, 243, 244, 258, 260, 269, 276, 278, 313, 354, 378, 404, 409, 425, 434, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "bias_desc": [148, 230, 231, 269, 278, 290, 292, 297, 301, 313, 364, 365, 425, 443, 445, 460, 466, 482, 484, 492, 498, 500, 502, 504, 510, 512, 514, 544, 564, 566], "dst_layer_desc": [148, 243, 244, 269, 278, 313, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "dst_iter_desc": [148, 224, 258, 260, 269, 276, 278, 313, 354, 404, 409, 425, 434, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "a_t": [148, 244], "h_t": 148, "lstm_forward": [148, 243, 244, 260, 269, 313, 342, 378, 379, 409, 425, 510, 530], "lstm_backward": [148, 269, 313, 342, 425, 530], "lstm_pd": [148, 260, 409], "src_iter_h_desc": 148, "src_iter_c_desc": [148, 260, 269, 278, 313, 409, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "dst_iter_h_desc": 148, "dst_iter_c_desc": [148, 260, 269, 278, 313, 409, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "i_t": 148, "w_i": 148, "u_i": 148, "b_i": [148, 157], "f_t": 148, "w_f": 148, "u_f": 148, "b_f": 148, "c_t": [148, 166, 167], "u_": 148, "b_": [148, 166, 167], "o_t": 148, "w_o": 148, "u_o": 148, "b_o": 148, "weightslay": 148, "weightsit": 148, "srciterc": 148, "dstiterc": 148, "weights_peephole_desc": [148, 278, 313, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "p_i": 148, "p_f": 148, "p_o": 148, "p_": 148, "weights_peephol": 148, "weights_projection_desc": [148, 278, 313, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "weights_project": 148, "gru_forward": [148, 313, 342, 482, 530], "gru_backward": [148, 313, 342, 530], "gru_pd": 148, "u_t": 148, "w_u": 148, "u_u": 148, "b_u": 148, "r_t": [148, 166, 167], "w_r": 148, "u_r": 148, "b_r": 148, "lbr_gru_forward": [148, 258, 313, 342, 404, 502, 530], "lbr_gru_backward": [148, 313, 342, 530], "lbr_gru_pd": [148, 258, 404], "rsquo": 148, "augru_forward": [148, 224, 313, 342, 354, 443, 530], "augru_backward": [148, 313, 342, 530], "augru_pd": [148, 224, 354], "attention_desc": [148, 278, 313, 443, 445, 498, 500], "lbr_augru_forward": [148, 313, 342, 498, 530], "lbr_augru_backward": [148, 313, 342, 530], "lbr_augru_pd": 148, "diffweightslay": 148, "diffweightsit": 148, "diffweightspeephol": 148, "diffweightsproject": 148, "diff_weights_overwrit": [148, 210], "dnnl_arg_src_lay": [148, 224, 243, 244, 258, 260, 269, 276, 278, 308, 354, 378, 379, 404, 409, 425, 434], "srclayerattent": 148, "dnnl_arg_src_layer_attent": 148, "dnnl_arg_src_it": [148, 224, 243, 244, 258, 260, 269, 276, 278, 308, 354, 378, 404, 409, 425, 434], "dnnl_arg_src_iter_c": [148, 243, 244, 260, 269, 278, 308, 378, 409, 425], "dnnl_arg_weights_lay": [148, 224, 243, 244, 258, 260, 269, 276, 278, 308, 354, 378, 379, 404, 409, 425, 434], "dnnl_arg_weights_it": [148, 224, 243, 244, 258, 260, 269, 276, 278, 308, 354, 378, 379, 404, 409, 425, 434], "weightspeephol": 148, "dnnl_arg_weights_peephol": [148, 278, 308], "weightsproject": 148, "dnnl_arg_weights_project": [148, 278, 308], "dnnl_arg_dst_lay": [148, 224, 243, 244, 258, 260, 269, 276, 278, 308, 354, 378, 379, 404, 409, 425, 434], "dnnl_arg_dst_it": [148, 224, 243, 244, 258, 260, 269, 276, 278, 308, 354, 378, 404, 409, 425, 434], "dnnl_arg_dst_iter_c": [148, 243, 244, 260, 269, 278, 308, 378, 409, 425], "dnnl_workspac": 148, "diffsrclay": 148, "dnnl_arg_diff_src_lay": [148, 269, 278, 308, 425], "diffsrclayerattent": 148, "dnnl_arg_diff_src_layer_attent": 148, "diffsrcit": 148, "dnnl_arg_diff_src_it": [148, 269, 278, 308, 425], "diffsrciterc": 148, "dnnl_arg_diff_src_iter_c": [148, 269, 278, 308, 425], "dnnl_arg_diff_weights_lay": [148, 269, 278, 308, 425], "dnnl_arg_diff_weights_it": [148, 269, 278, 308, 425], "dnnl_arg_diff_weights_peephol": [148, 278, 308], "dnnl_arg_diff_weights_project": [148, 278, 308], "diffdstlay": 148, "dnnl_arg_diff_dst_lay": [148, 269, 278, 308, 425], "diffdstit": 148, "dnnl_arg_diff_dst_it": [148, 269, 278, 308, 425], "diffdstiterc": 148, "dnnl_arg_diff_dst_iter_c": [148, 269, 278, 308, 425], "With": [148, 154, 432], "dnnl_ldgo": [148, 176], "dnnl_ldigo": [148, 176], "dnnl_ldio": [148, 176], "dnnl_ldgoi": [148, 176], "dnnl_ldoi": [148, 176], "markdown": 148, "thought": 149, "formal": 149, "group_siz": [149, 270, 278, 315, 426, 546, 548], "ug": 149, "nu": 150, "bigger": [151, 159], "dnnl_threadpool_ifac": [152, 557], "test_thread": 152, "threadpool_t": 152, "threadpool_interop": [152, 278, 282, 320, 342], "threadpool_ifac": [152, 348], "nonblockingthreadpool": 152, "unique_ptr": 152, "tp_": 152, "num_thread": 152, "hardware_concurr": 152, "get_num_thread": [152, 557], "numthread": 152, "get_in_parallel": [152, 557], "currentthreadid": 152, "get_flag": [152, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 557, 564, 566], "asynchron": [152, 383, 389, 413, 432, 557], "parallel_for": [152, 274, 432, 557], "fn": [152, 557], "nthr": [152, 160], "njob": 152, "schedul": 152, "balance211": 152, "new_content_goes_her": 153, "propos": 154, "idea": [154, 159, 375], "spot": 154, "trade": 154, "site": [154, 473], "themselv": [154, 159, 237, 238, 246, 252, 273, 275, 388, 390, 391, 392, 393, 394, 395, 476], "afterward": 154, "incompat": [155, 161], "migrat": [155, 214, 215], "mkldnn": 155, "substr": [155, 161], "renam": 155, "macro": [155, 278], "v1": [155, 241, 245, 375, 380], "mkldnn_memory_desc_t": 155, "md": [155, 159, 161, 233, 272, 367, 388, 414, 430, 516, 518], "mkldnn_block": 155, "exec": [155, 160, 253, 274, 413, 414], "mkldnn_args_src": 155, "dnnl_block": [155, 175, 192, 302, 518], "dnnl_args_src": 155, "mkldnn_dnnl_mangl": 155, "preprocessor": 155, "mkldnn_memory_desc_init_by_tag": 155, "dnnl_memory_desc_init_by_tag": 155, "mkldnn_arch_opt_flag": 155, "dnnl_arch_opt_flag": 155, "mkldnn_build_exampl": 155, "dnnl_build_exampl": 155, "mkldnn_build_for_ci": 155, "dnnl_build_for_ci": 155, "mkldnn_build_test": 155, "dnnl_build_test": 155, "mkldnn_cpu_runtim": 155, "dnnl_cpu_runtim": 155, "mkldnn_enable_concurrent_exec": 155, "dnnl_enable_concurrent_exec": [155, 214, 215], "mkldnn_enable_jit_profil": 155, "dnnl_enable_jit_profil": 155, "mkldnn_gpu_backend": 155, "dnnl_gpu_backend": 155, "mkldnn_gpu_runtim": 155, "mkldnn_install_mod": 155, "dnnl_install_mod": 155, "mkldnn_library_typ": 155, "mkldnn_thread": 155, "dnnl_thread": 155, "mkldnn_use_clang_sanit": 155, "dnnl_use_clang_sanit": 155, "mkldnn_verbos": 155, "dnnl_verbos": 155, "mkldnn_werror": 155, "dnnl_werror": 155, "find_packag": 155, "target_link_librari": 155, "project_app": 155, "Or": 155, "inclus": 155, "add_subdirectori": 155, "dnnl_dir": 155, "include_directori": 155, "thing": [155, 388, 413], "recompil": 155, "patch": [155, 314, 567], "region": [156, 302, 518], "consecut": [156, 302, 518], "granular": [156, 414], "fundament": 156, "freez": 156, "hoist": 156, "loop": [156, 157, 158, 235, 371], "brgemm": [157, 158, 235, 278, 282, 321, 349, 452, 485, 575], "a_i": [157, 244], "_arg": 157, "express": [157, 158, 160, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 390, 393, 394, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "pack_typ": [157, 158, 235, 278, 322, 349, 371, 561, 562], "get_b_pack_typ": [157, 158, 235, 371, 561], "no_tran": [157, 158, 223, 235, 371, 562], "copyright": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "2024": [157, 158, 230, 235, 237, 238, 239, 240, 246, 249, 252, 254, 258, 262, 263, 269, 273, 275, 276, 277, 371, 373, 374, 384, 396, 404, 425, 434, 436], "corpor": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "licens": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "apach": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "law": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "agre": [157, 158, 207, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "AS": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "basi": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "warranti": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "OF": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "permiss": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 396, 398, 400, 402, 404, 406, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "cmath": [157, 158, 224, 225, 226, 227, 231, 233, 234, 235, 239, 240, 241, 242, 245, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 276, 277, 354, 356, 358, 360, 365, 367, 369, 371, 373, 374, 375, 377, 380, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430, 434, 436], "iostream": [157, 158, 224, 225, 226, 227, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 365, 367, 369, 371, 373, 374, 375, 377, 380, 384, 386, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 415, 421, 423, 426, 428, 430, 432, 434, 436], "example_util": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 382, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436], "brgemm_exampl": [157, 158, 235, 278, 371], "engine_stream": [157, 158, 224, 225, 226, 227, 233, 234, 235, 242, 249, 250, 251, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 276, 354, 356, 358, 360, 367, 369, 371, 377, 384, 386, 388, 396, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430, 434], "k_k": [157, 158, 235, 371], "48": [157, 158, 229, 235, 371], "printf": [157, 158, 228, 235, 236, 241, 245, 247, 362, 371, 372, 375, 380, 382], "n_call": [157, 158, 235, 371], "lda": [157, 158, 235, 245, 278, 287, 320, 322, 342, 348, 371, 380, 561], "ldb": [157, 158, 235, 245, 278, 287, 320, 322, 342, 348, 371, 380, 561], "ldc": [157, 158, 235, 245, 278, 287, 320, 322, 342, 348, 371, 380, 561], "ldd": [157, 158, 235, 278, 322, 371, 561], "batch_siz": [157, 158, 235, 278, 322, 371, 561], "a_dt": [157, 158, 235, 278, 322, 371, 561], "b_dt": [157, 158, 235, 278, 322, 371, 561], "c_dt": [157, 158, 235, 278, 322, 371, 561], "d_dt": [157, 158, 235, 278, 322, 371, 561], "a_dim": [157, 158, 235, 371], "b_dim": [157, 158, 235, 371], "c_dim": [157, 158, 235, 371], "d_dim": [157, 158, 235, 371], "binary_add_dim": [157, 158, 235, 371], "b_scales_dim": [157, 158, 235, 371], "a_user_data": [157, 158, 235, 371], "b_user_data": [157, 158, 235, 371], "binary_add_user_data": [157, 158, 235, 371], "b_scales_user_data": [157, 158, 235, 371], "d_data": [157, 158, 235, 371], "d_user_data": [157, 158, 235, 371], "sign_gen": [157, 158, 235, 371], "val": [157, 158, 235, 371], "holder": [157, 158, 235, 371], "a_f32_md": [157, 158, 235, 371], "b_f32_md": [157, 158, 235, 371], "binary_add_f32_md": [157, 158, 235, 371], "b_scales_f32_md": [157, 158, 235, 371], "d_f32_md": [157, 158, 235, 371], "a_f32_mem": [157, 158, 235, 277, 278, 371, 436], "b_f32_mem": [157, 158, 235, 255, 277, 371, 398, 436], "binary_add_f32_mem": [157, 158, 235, 371], "b_scales_f32_mem": [157, 158, 235, 371], "d_f32_mem": [157, 158, 235, 371], "request": [157, 158, 189, 217, 218, 235, 294, 302, 308, 309, 333, 347, 371, 535], "a_md": [157, 158, 235, 241, 245, 255, 277, 371, 375, 380, 398, 436], "b_md": [157, 158, 235, 241, 245, 255, 277, 371, 375, 380, 398, 436], "binary_add_md": [157, 158, 235, 371], "b_scales_md": [157, 158, 235, 371], "c_md": [157, 158, 235, 241, 245, 255, 277, 371, 375, 380, 398, 436], "d_md": [157, 158, 235, 371], "a_mem": [157, 158, 235, 371], "b_mem": [157, 158, 235, 371], "binary_add_mem": [157, 158, 235, 371], "b_scales_mem": [157, 158, 235, 371], "c_mem": [157, 158, 235, 371], "d_mem": [157, 158, 235, 371], "a_ptr": [157, 158, 235, 278, 322, 371], "reinterpret_cast": [157, 158, 235, 371], "b_ptr": [157, 158, 235, 278, 322, 371], "a_dt_siz": [157, 158, 235, 371], "data_type_s": [157, 158, 235, 371, 516], "b_dt_size": [157, 158, 235, 371], "c_ptr": [157, 158, 235, 278, 322, 371], "brgemm_op": [157, 158, 235, 371], "brg": [157, 158, 160, 235, 371], "brg_po": [157, 158, 235, 371], "reusabl": [157, 158, 235, 371], "piec": [157, 158, 235, 302, 308, 371], "set_add_c": [157, 158, 235, 371, 561], "catch": [157, 158, 230, 231, 235, 242, 244, 251, 274, 365, 371, 377, 379, 388, 432], "example_allows_unimpl": [157, 158, 224, 230, 231, 235, 242, 244, 278, 354, 365, 371, 377, 379], "set_b_scal": [157, 158, 235, 371, 560, 561], "servic": [157, 158, 235, 282, 288, 371], "scratchpad_s": [157, 158, 235, 371], "get_scratchpad_s": [157, 158, 235, 371, 561], "b_block": [157, 158, 235, 371], "b_base_ptr": [157, 158, 235, 371], "blocked_b_s": [157, 158, 235, 371], "regardless": [157, 158, 235, 371], "need_pack": [157, 158, 235, 371], "pack32": [157, 158, 223, 235, 371], "vnni": [157, 158, 235, 371], "bfloat16_t": [157, 158, 235, 371], "incorpor": [157, 158, 235, 371, 414], "pack_b": [157, 158, 235, 371], "in_pack_typ": [157, 158, 235, 278, 322, 371, 562], "in_ld": [157, 158, 235, 278, 322, 371, 562], "out_ld": [157, 158, 235, 278, 322, 371, 562], "in_dt": [157, 158, 235, 278, 322, 371, 562], "out_dt": [157, 158, 235, 278, 322, 371, 562], "a_b_offset": [157, 158, 235, 278, 322, 371, 561], "a_offset_i": [157, 158, 235, 371], "b_offset_i": [157, 158, 235, 371], "make_pair": [157, 158, 235, 371], "set_hw_context": [157, 158, 235, 371, 561], "a_b": [157, 158, 235, 371], "acc_ptr": [157, 158, 235, 371], "a_b_po_offset": [157, 158, 235, 371], "a_offset_po": [157, 158, 235, 371], "b_offset_po": [157, 158, 235, 371], "emplace_back": [157, 158, 235, 371], "put": [157, 158, 231, 232, 235, 303, 346, 365, 366, 371], "sit": [157, 158, 235, 371], "bin_po_ptr": [157, 158, 235, 371], "push_back": [157, 158, 229, 231, 232, 233, 235, 243, 244, 272, 363, 365, 366, 367, 371, 378, 379, 430], "attr_param": [157, 158, 235, 278, 321, 322, 349, 371, 485, 561], "set_post_ops_arg": [157, 158, 235, 371, 560], "release_hw_context": [157, 158, 235, 371, 561], "clean": [157, 158, 228, 235, 236, 247, 362, 371, 372, 382, 414], "delet": [157, 158, 235, 371, 485], "verif": [157, 158, 235, 371], "uncondit": [157, 158, 235, 371], "user_d_mem": [157, 158, 235, 371], "saniti": [157, 158, 235, 251, 255, 371, 388, 398], "pop": [157, 158, 235, 371], "to_throw": [157, 158, 235, 371], "fabsf": [157, 158, 235, 371], "19e": [157, 158, 235, 371], "12g": [157, 158, 235, 371], "runtime_error": [157, 158, 189, 217, 235, 239, 240, 314, 371, 373, 374], "argc": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 384, 386, 388, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436], "char": [157, 158, 207, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 287, 314, 320, 334, 342, 348, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 473, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566, 567, 568], "argv": [157, 158, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 354, 356, 358, 360, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 377, 380, 384, 386, 388, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436], "handle_example_error": [157, 158, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 354, 356, 358, 360, 365, 366, 367, 369, 371, 373, 374, 375, 377, 380, 384, 386, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "analyz": 159, "adjust": [159, 302, 518], "facilit": 159, "articl": [159, 414], "devot": 159, "multidimension": 159, "interchang": 159, "focu": 159, "phase": [159, 284, 524], "simpler": 159, "chw": 159, "displac": 159, "jump": 159, "plane": 159, "offset_nchw": 159, "adjac": 159, "border": 159, "contrari": [159, 375, 389, 432], "pixel": [159, 251, 388], "bvlc": 159, "caff": 159, "dnnl_format_tag_t": [159, 193, 228, 236, 278, 302, 342, 362, 372, 516], "quit": [159, 245, 251, 380, 388], "offset_nhwc": 159, "hwc": 159, "wc": 159, "bmp": 159, "color": 159, "24bit": 159, "recognit": 159, "outer": [159, 176], "offset_chwn": 159, "hwn": 159, "wn": 159, "dnnl_chwn": [159, 176], "artifici": 159, "disjoint": 159, "trivial": [159, 161, 523], "tip": 159, "stride_n": [159, 251, 388], "stride_c": [159, 251, 388], "stride_h": [159, 251, 388], "stride_w": [159, 251, 388], "dnnl_dims_t": [159, 176, 207, 228, 236, 247, 278, 284, 290, 291, 292, 302, 304, 332, 362, 372, 382, 476, 516], "dnnl_memory_desc_init_by_strid": 159, "dnnl_memory_desc_create_with_strid": [159, 278, 302], "behalf": 159, "great": 159, "nchw8c": [159, 193], "guess": [159, 375], "offset_nchw8c": 159, "slice": 159, "uppercas": 159, "distinguish": 159, "8c": 159, "dnnl_memory_desc_create_with_tag": [159, 176, 228, 236, 247, 278, 302, 362, 372, 382], "dnnl_nchw8c": [159, 176, 193], "ptrdiff_t": 159, "inner_nblk": 159, "inner_idx": [159, 206], "1st": [159, 176, 193, 302], "0st": [159, 302], "3rd": [159, 176], "inner_blk": [159, 206], "q_stride": 159, "q_inner_nblk": 159, "q_inner_idx": 159, "q_inner_blk": 159, "dnnl_memory_desc_queri": [159, 278, 302], "dnnl_query_strid": [159, 206, 207, 302], "dnnl_query_inner_nblk": 159, "dnnl_query_inner_idx": [159, 206, 207, 302], "dnnl_query_inner_blk": [159, 206, 207, 302], "memcmp": 159, "dnnl_max_ndim": [159, 278, 291], "tail": 159, "somehow": 159, "came": 159, "div_up": 159, "price": 159, "neglig": [159, 160, 414], "d0": [159, 161], "dnnl_memory_desc_get_s": [159, 278, 302], "phys_siz": 159, "eltwise_op": [159, 284, 524], "block_siz": 159, "c_pad": 159, "expect_stride_n": 159, "expect_stride_c": 159, "expect_stride_h": 159, "expect_stride_w": 159, "expect_stride_8c": 159, "expect_tru": 159, "get_padded_dim": [159, 518], "get_inner_nblk": [159, 518], "get_inner_idx": [159, 518], "get_inner_blk": [159, 518], "profile_exec": [160, 414], "onednn_verbose_timestamp": 160, "rel": 160, "gemm_api": 160, "legaci": 160, "dnnl_set_verbos": [160, 278, 314], "face": 160, "insight": 160, "256x256": 160, "25x256": 160, "v0": [160, 413, 414], "6afab8e57f65a8995685d97ba6f80fa6c24b87a0": 160, "dnnl_backend": 160, "memory_descriptor": 160, "problem_desc": 160, "exec_tim": 160, "partition_id": 160, "partition_kind": 160, "op_nam": 160, "144": 160, "break": 160, "spent": [160, 375], "tune": [160, 414], "led": 160, "breviti": [160, 241, 375], "src_u8": 160, "f0": [160, 413, 414], "brgemm_matmul": 160, "did": 160, "ic16ih7oc16oh7kh5ph2n": 160, "wip": 160, "1693533460193": 160, "346924": 160, "abcd16b": [160, 193, 414], "abcd16b16a": [160, 193], "bia_f32": 160, "mb2_ic16oc16_ih7oh7kh5sh1dh0ph2_iw7ow7kw5sw1dw0pw2": 160, "709961": 160, "1693533460194": 160, "199951": 160, "0161133": 160, "1693533460228": 160, "559082": 160, "16x16x5x5": 160, "724854": 160, "1693533460229": 160, "437012": 160, "481": 160, "1693533460259": 160, "165039": 160, "blk": 160, "2x16x7x7": 160, "349854": 160, "586914": 160, "604": 160, "1693533460272": 160, "332031": 160, "0358887": 160, "416992": 160, "052002": 160, "561035": 160, "0878906": 160, "1693533460313": 160, "719971": 160, "275146": 160, "1693533460314": 160, "072021": 160, "8389": 160, "__repro": 160, "ic16ih7oc16oh7kh5ph2nwip": 160, "comma": 160, "marker": 160, "millisecond": [160, 229, 414], "unix": 160, "epoch": 160, "kernel_cache_hit": 160, "nested_cache_hit": 160, "cpu2gpu": [160, 248], "gpu2cpu": [160, 248], "tensor_nam": 160, "extra_flag": 160, "synchron": [160, 302, 389, 413, 432, 516], "exit": [160, 253], "wall": 160, "group_norm": [161, 200, 353], "evenli": 161, "mandatori": [161, 322], "primitv": 161, "a0": 161, "a1": 161, "explanatori": [161, 473], "msg": [161, 278], "unavail": 161, "gnorm": 161, "fpmath": [161, 277, 295, 436, 532], "ip": 161, "miscellan": 161, "nest": 161, "pm": 161, "unsuccess": 161, "d1": 161, "onednn_experimental_profil": 161, "exhaust": 161, "dnnl_common": [164, 173, 177, 219, 472, 473, 485, 554], "dnnl_accumulation_mode_strict": [164, 165, 284], "dnnl_accumulation_mode_relax": [164, 165, 284], "dnnl_accumulation_mode_ani": [164, 165, 284], "dnnl_accumulation_mode_s32": [164, 165, 284], "dnnl_accumulation_mode_f32": [164, 165, 284], "dnnl_accumulation_mode_f16": [164, 165, 284], "dnnl_common_typ": [165, 172, 174, 178, 218, 220, 567], "dnnl_alg_kind_undef": [166, 167], "dnnl_convolution_direct": [166, 167, 228, 236, 290, 362, 372], "0x1": [166, 170, 171, 184, 211], "dnnl_convolution_winograd": [166, 167, 290], "0x2": 166, "dnnl_convolution_auto": [166, 167, 290], "0x3": [166, 171], "dnnl_deconvolution_direct": [166, 167, 292], "0xa": 166, "dnnl_deconvolution_winograd": [166, 167, 292], "0xb": 166, "0x20": [166, 184], "0x100": 166, "0x1ff": 166, "0x2ff": 166, "0x3ff": 166, "dnnl_lrn_across_channel": [166, 167, 228, 236, 300, 362, 372], "0xaff": 166, "dnnl_lrn_within_channel": [166, 167, 300], "0xbff": 166, "dnnl_vanilla_rnn": [166, 167], "0x1fff": 166, "dnnl_vanilla_lstm": [166, 167], "0x2fff": 166, "dnnl_vanilla_gru": [166, 167], "0x3fff": 166, "dnnl_lbr_gru": [166, 167], "0x4fff": 166, "dnnl_vanilla_augru": [166, 167], "0x5fff": 166, "dnnl_lbr_augru": [166, 167], "0x6fff": 166, "dnnl_binary_add": [166, 167, 286], "0x1fff0": 166, "dnnl_binary_mul": [166, 167, 286], "0x1fff1": 166, "dnnl_binary_max": [166, 167, 286], "0x1fff2": 166, "dnnl_binary_min": [166, 167, 286], "0x1fff3": 166, "dnnl_binary_div": [166, 167, 286], "0x1fff4": 166, "dnnl_binary_sub": [166, 167, 286], "0x1fff5": 166, "dnnl_binary_g": [166, 167, 286], "0x1fff6": 166, "dnnl_binary_gt": [166, 167, 286], "0x1fff7": 166, "dnnl_binary_l": [166, 167, 286], "0x1fff8": 166, "dnnl_binary_lt": [166, 167, 286], "0x1fff9": 166, "dnnl_binary_eq": [166, 167, 286], "0x1fffa": 166, "dnnl_binary_n": [166, 167, 286], "0x1fffb": 166, "dnnl_resampling_nearest": [166, 167, 312], "0x2fff0": 166, "dnnl_resampling_linear": [166, 167, 312], "0x2fff1": 166, "dnnl_reduction_max": [166, 167, 310, 537], "dnnl_reduction_min": [166, 167, 310, 537], "dnnl_reduction_sum": [166, 167, 310, 537], "dnnl_reduction_mul": [166, 167, 310, 537], "dnnl_reduction_mean": [166, 167, 310, 537], "dnnl_reduction_norm_lp_max": [166, 167, 310, 537], "dnnl_reduction_norm_lp_sum": [166, 167, 310, 537], "dnnl_reduction_norm_lp_power_p_max": [166, 167, 310, 537], "dnnl_reduction_norm_lp_power_p_sum": [166, 167, 310, 537], "dnnl_softmax_accur": [166, 167, 316], "0x30000": 166, "dnnl_softmax_log": [166, 167, 316], "hyperbol": [166, 167], "tangent": [166, 167], "cumul": [166, 414], "gaussian": 166, "modif": 166, "w_c": [166, 167], "x_t": [166, 167], "c_x": [166, 167], "u_c": [166, 167], "c_h": [166, 167], "bias": [166, 269, 425], "augru": [166, 167, 313, 353, 355, 442, 443, 444, 445, 497, 498, 499, 500, 544], "pth": 166, "deconvolution_direct": [167, 249, 384, 464, 466], "deconvolution_winograd": [167, 464, 466], "eltwise_elu": 167, "eltwise_squar": 167, "eltwise_ab": 167, "eltwise_sqrt": 167, "eltwise_swish": 167, "eltwise_soft_relu": 167, "eltwise_mish": 167, "eltwise_logist": [167, 564, 566], "eltwise_exp": 167, "eltwise_gelu_tanh": 167, "eltwise_gelu_erf": 167, "eltwise_log": 167, "eltwise_clip": 167, "eltwise_clip_v2": 167, "eltwise_pow": 167, "eltwise_round": 167, "eltwise_hardswish": 167, "eltwise_hardsigmoid": 167, "eltwise_relu_use_dst_for_bwd": 167, "eltwise_tanh_use_dst_for_bwd": 167, "eltwise_elu_use_dst_for_bwd": 167, "eltwise_sqrt_use_dst_for_bwd": 167, "eltwise_logistic_use_dst_for_bwd": 167, "eltwise_exp_use_dst_for_bwd": 167, "eltwise_clip_v2_use_dst_for_bwd": 167, "lrn_across_channel": [167, 229, 231, 232, 259, 365, 366, 407, 506, 508], "lrn_within_channel": [167, 506, 508], "pooling_avg_include_pad": [167, 520, 522], "pooling_avg_exclude_pad": [167, 520, 522], "vanilla_rnn": 167, "vanilla_lstm": 167, "vanilla_gru": 167, "lbr_gru": [167, 404], "vanilla_augru": 167, "lbr_augru": 167, "binary_mul": [167, 226, 227, 358, 360], "binary_max": 167, "binary_min": 167, "binary_div": [167, 227, 360], "binary_sub": [167, 227, 360], "binary_g": 167, "binary_gt": 167, "binary_l": 167, "binary_lt": 167, "binary_eq": 167, "binary_n": 167, "resampling_nearest": [167, 541, 543], "resampling_linear": [167, 268, 423, 541, 543], "reduction_max": 167, "reduction_min": 167, "reduction_sum": [167, 266, 419], "reduction_mul": 167, "reduction_mean": 167, "reduction_norm_lp_max": 167, "reduction_norm_lp_sum": 167, "reduction_norm_lp_power_p_max": 167, "reduction_norm_lp_power_p_sum": 167, "softmax_accur": [167, 271, 428, 550, 552], "softmax_log": [167, 550, 552], "rectifi": [167, 293, 389, 432], "linar": 167, "vanilla": [167, 276, 313, 435, 563, 564, 565, 566], "lrb": 167, "norm_lp_max": 167, "norm_lp_sum": 167, "norm_lp_power_p_max": 167, "norm_lp_power_p_sum": 167, "isa_default": [168, 314], "dnnl_cpu_isa_default": [168, 171, 314], "dnnl_cpu_isa_sse41": [168, 171], "dnnl_cpu_isa_avx": [168, 171], "dnnl_cpu_isa_avx2": [168, 171], "dnnl_cpu_isa_avx2_vnni": [168, 171], "dnnl_cpu_isa_avx2_vnni_2": [168, 171], "dnnl_cpu_isa_avx512_cor": [168, 171], "dnnl_cpu_isa_avx512_core_vnni": [168, 171], "dnnl_cpu_isa_avx512_core_bf16": [168, 171], "dnnl_cpu_isa_avx10_1_512": [168, 171], "dnnl_cpu_isa_avx512_core_fp16": [168, 171], "dnnl_cpu_isa_avx10_1_512_amx": [168, 171], "dnnl_cpu_isa_avx512_core_amx": [168, 171], "dnnl_cpu_isa_avx10_1_512_amx_fp16": [168, 171], "dnnl_cpu_isa_avx512_core_amx_fp16": [168, 171], "dnnl_cpu_isa_no_hint": [169, 170, 314], "dnnl_cpu_isa_prefer_ymm": [169, 170], "exclus": [169, 170, 302, 516], "0x0": [170, 171, 211], "0x7": 171, "0xf": 171, "0x1f": 171, "0x27": 171, "0x67": 171, "0xe7": 171, "0x1ef": 171, "0xfef": 171, "0x1fef": 171, "dnnl_data_type_undef": [172, 180, 191], "dnnl_f16": [172, 180, 191], "dnnl_bf16": [172, 180, 191], "dnnl_s32": [172, 180, 191], "dnnl_u8": [172, 180, 191], "dnnl_f64": [172, 191], "dnnl_boolean": [172, 180], "dnnl_f8_e5m2": [172, 180, 191], "dnnl_f8_e4m3": [172, 180, 191], "dnnl_s4": [172, 191], "dnnl_u4": [172, 191], "dnnl_e8m0": [172, 191], "dnnl_data_type_max": 172, "0x7fff": [172, 175, 201, 207], "mx": [172, 191], "compliant": [172, 191], "dnnl_any_engin": [173, 174], "dnnl_cpu": [173, 174, 236, 247, 372, 382], "dnnl_gpu": [173, 174, 247, 382], "dnnl_format_kind_undef": [175, 192, 290, 292, 297, 299, 301], "dnnl_format_kind_ani": [175, 192, 286, 290, 292, 297, 302, 305, 310, 312, 313], "dnnl_format_kind_spars": [175, 192], "dnnl_format_kind_max": 175, "dnnl_format_tag_undef": [176, 193], "dnnl_abcdef": [176, 193], "dnnl_abcdefg": [176, 193], "dnnl_abcdefgh": [176, 193], "dnnl_abcdefghi": [176, 193], "dnnl_abcdefghij": [176, 193], "dnnl_abcdefghijk": [176, 193], "dnnl_abcdefghijkl": [176, 193], "dnnl_ba": [176, 193, 302], "dnnl_bca": [176, 193], "dnnl_cab": [176, 193], "dnnl_cba": [176, 193], "dnnl_abdc": [176, 193], "dnnl_acbd": [176, 193], "dnnl_adbc": [176, 193], "dnnl_adcb": [176, 193], "dnnl_bacd": [176, 193], "dnnl_bcda": [176, 193], "dnnl_cdab": [176, 193], "dnnl_cdba": [176, 193], "dnnl_dcab": [176, 193], "dnnl_abdec": [176, 193], "dnnl_adecb": [176, 193], "dnnl_bcdea": [176, 193], "dnnl_cdeab": [176, 193], "dnnl_cdeba": [176, 193], "dnnl_decab": [176, 193], "dnnl_abcdf": [176, 193], "dnnl_abdefc": [176, 193], "dnnl_abdfc": [176, 193], "dnnl_acbdef": [176, 193], "dnnl_adefcb": [176, 193], "dnnl_defcab": [176, 193], "dnnl_abcdegf": [176, 193], "dnnl_abcdefhg": [176, 193], "dnnl_abcdefgih": [176, 193], "dnnl_abcdefghji": [176, 193], "dnnl_abcdefghikj": [176, 193], "dnnl_abcdefghijlk": [176, 193], "dnnl_abc16a": [176, 193], "dnnl_abc16a16b": [176, 193], "dnnl_abc32a32b": [176, 193], "dnnl_abc4a4b": [176, 193], "dnnl_abc16b": [176, 193], "dnnl_abc16b16a": [176, 193], "dnnl_abc4a": [176, 193], "dnnl_abc32b": [176, 193], "dnnl_abc4b": [176, 193], "dnnl_abc4b16a4b": [176, 193], "dnnl_abc2b8a4b": [176, 193], "dnnl_abc16b16a4b": [176, 193], "dnnl_abc16b16a2b": [176, 193], "dnnl_abc4b4a": [176, 193], "dnnl_abc8a16b2a": [176, 193], "dnnl_abc8a8b": [176, 193], "dnnl_abc8a4b": [176, 193], "dnnl_abc8b": [176, 193], "dnnl_abc8b16a2b": [176, 193], "dnnl_bac8a16b2a": [176, 193], "dnnl_abc8b8a": [176, 193], "dnnl_abcd16a": [176, 193], "dnnl_abcd8a": [176, 193], "dnnl_abcd16a16b": [176, 193], "dnnl_abcd32a": [176, 193], "dnnl_abcd32a32b": [176, 193], "dnnl_abcd16b": [176, 193], "dnnl_abcd16b16a": [176, 193], "dnnl_abcd16b16c": [176, 193], "dnnl_abcd16c16b": [176, 193], "dnnl_abcd4a": [176, 193], "dnnl_abcd32b": [176, 193], "dnnl_abcd4b": [176, 193], "dnnl_abcd4b16a4b": [176, 193], "dnnl_abcd16b16a4b": [176, 193], "dnnl_abcd16b16a2b": [176, 193], "dnnl_abcd4b4a": [176, 193], "dnnl_abcd4a4b": [176, 193], "dnnl_abcd2c4b2c": [176, 193], "dnnl_abcd4b8c2b": [176, 193], "dnnl_abcd4c16b4c": [176, 193], "dnnl_abcd2c8b4c": [176, 193], "dnnl_abcd16c16b4c": [176, 193], "dnnl_abcd16c16b2c": [176, 193], "dnnl_abcd4c4b": [176, 193], "dnnl_abcd4b4c": [176, 193], "dnnl_abcd8a16b2a": [176, 193], "dnnl_abcd2b8a4b": [176, 193], "dnnl_abcd8a8b": [176, 193], "dnnl_abcd8a4b": [176, 193], "dnnl_abcd8b": [176, 193], "dnnl_abcd4c8b2c": [176, 193], "dnnl_abcd8b16a2b": [176, 193], "dnnl_abcd8b16c2b": [176, 193], "dnnl_bacd8a16b2a": [176, 193], "dnnl_abcd8b8a": [176, 193], "dnnl_abcd8b8c": [176, 193], "dnnl_abcd8b4c": [176, 193], "dnnl_abcd8c16b2c": [176, 193], "dnnl_abcde8a16b2a": [176, 193], "dnnl_acbd8b16c2b": [176, 193], "dnnl_abcd8c8b": [176, 193], "dnnl_abcde16a": [176, 193], "dnnl_abcde32a": [176, 193], "dnnl_abcde16a16b": [176, 193], "dnnl_bacde8a16b2a": [176, 193], "dnnl_abcd2b4c2b": [176, 193], "dnnl_abcde4b16a4b": [176, 193], "dnnl_abcde2b8a4b": [176, 193], "dnnl_abcde16b": [176, 193], "dnnl_abcde16b16a": [176, 193], "dnnl_abcde16b16c": [176, 193], "dnnl_abcde16c16b": [176, 193], "dnnl_abcde2c8b4c": [176, 193], "dnnl_abcde4a": [176, 193], "dnnl_abcde32b": [176, 193], "dnnl_abcde4b": [176, 193], "dnnl_abcde4b4a": [176, 193], "dnnl_abcde4a4b": [176, 193], "dnnl_abcde4b4c": [176, 193], "dnnl_abcde2c4b2c": [176, 193], "dnnl_abcde4b8c2b": [176, 193], "dnnl_abcde4c16b4c": [176, 193], "dnnl_abcde16c16b4c": [176, 193], "dnnl_abcde16c16b2c": [176, 193], "dnnl_abcde4c4b": [176, 193], "dnnl_abcde8a": [176, 193], "dnnl_abcde8a8b": [176, 193], "dnnl_abcde8a4b": [176, 193], "dnnl_bacde16b16a": [176, 193], "dnnl_abcde8b": [176, 193], "dnnl_abcde8b16a2b": [176, 193], "dnnl_abcde8b16c2b": [176, 193], "dnnl_abcde4c8b2c": [176, 193], "dnnl_acbde8b16c2b": [176, 193], "dnnl_abcde8b8a": [176, 193], "dnnl_abcde32a32b": [176, 193], "dnnl_abcde8b8c": [176, 193], "dnnl_abcde8b4c": [176, 193], "dnnl_abc4a8b8a4b": [176, 193], "dnnl_abcd4a8b8a4b": [176, 193], "dnnl_abcde4a8b8a4b": [176, 193], "dnnl_bac4b8a8b4a": [176, 193], "dnnl_bacd4b8a8b4a": [176, 193], "dnnl_bacde4b8a8b4a": [176, 193], "dnnl_abcd2a8b8a2b": [176, 193], "dnnl_abcd4b8c8b4c": [176, 193], "dnnl_abcde4b8c8b4c": [176, 193], "dnnl_abcde2b8c8b2c": [176, 193], "dnnl_abcde8c16b2c": [176, 193], "dnnl_abcde8c8b": [176, 193], "dnnl_abcde2b4c2b": [176, 193], "dnnl_abcdef16b": [176, 193], "dnnl_abcdef16b16c": [176, 193], "dnnl_abcdef16c16b": [176, 193], "dnnl_abcdef4c16b4c": [176, 193], "dnnl_abcdef2c8b4c": [176, 193], "dnnl_abcdef4c8b2c": [176, 193], "dnnl_abcdef2b4c2b": [176, 193], "dnnl_abcdef4b": [176, 193], "dnnl_abcdef4c4b": [176, 193], "dnnl_abcdef4b4c": [176, 193], "dnnl_abcdef2c4b2c": [176, 193], "dnnl_abcdef4b8c2b": [176, 193], "dnnl_abcdef8b8c": [176, 193], "dnnl_abcdef8b4c": [176, 193], "dnnl_abcdef8c16b2c": [176, 193], "dnnl_abcdef4b8c8b4c": [176, 193], "dnnl_abcdef8b16c2b": [176, 193], "dnnl_acbdef8b16c2b": [176, 193], "dnnl_abcdef8c8b": [176, 193], "dnnl_abdc16b": [176, 193], "dnnl_abdc16b2c": [176, 193], "dnnl_abdc16b4c": [176, 193], "dnnl_abdc4b": [176, 193], "dnnl_abdc8b": [176, 193], "dnnl_abdec16b": [176, 193], "dnnl_abdec16b2c": [176, 193], "dnnl_abdec16b4c": [176, 193], "dnnl_abdec32b": [176, 193], "dnnl_abdec4b": [176, 193], "dnnl_abdec8b": [176, 193], "dnnl_abdefc16b": [176, 193], "dnnl_abdefc16b2c": [176, 193], "dnnl_acbdef16c16b": [176, 193], "dnnl_abdefc4b": [176, 193], "dnnl_abdefc8b": [176, 193], "dnnl_abcdef16a": [176, 193], "dnnl_abcdef32a": [176, 193], "dnnl_abedc16b": [176, 193], "dnnl_acb16a": [176, 193], "dnnl_acb16a2b": [176, 193], "dnnl_acb16a4b": [176, 193], "dnnl_acb4a": [176, 193], "dnnl_acb8a": [176, 193], "dnnl_acbd16b16c": [176, 193], "dnnl_acbd16c16b": [176, 193], "dnnl_acbde16b16c": [176, 193], "dnnl_acbde16c16b": [176, 193], "dnnl_acdb16a": [176, 193], "dnnl_acdb16a2b": [176, 193], "dnnl_acdb16a4b": [176, 193], "dnnl_acdb32a": [176, 193], "dnnl_acdb4a": [176, 193], "dnnl_acdb8a": [176, 193], "dnnl_acdeb16a": [176, 193], "dnnl_acdeb16a2b": [176, 193], "dnnl_acdeb4a": [176, 193], "dnnl_acdeb8a": [176, 193], "dnnl_adcb16a": [176, 193], "dnnl_bac16a16b": [176, 193], "dnnl_bac16b16a": [176, 193], "dnnl_bacd16a16b": [176, 193], "dnnl_bacd16b16a": [176, 193], "dnnl_acbd4c8b8c4b": [176, 193], "dnnl_acbde4c8b8c4b": [176, 193], "dnnl_acbdef4c8b8c4b": [176, 193], "dnnl_bacde16a16b": [176, 193], "dnnl_acbdef16b16c": [176, 193], "dnnl_abc16b32a": [176, 193], "dnnl_abc16b64a": [176, 193], "dnnl_abc4b32a4b": [176, 193], "dnnl_abc4b64a4b": [176, 193], "dnnl_abc8b32a2b": [176, 193], "dnnl_abc8b64a2b": [176, 193], "dnnl_ab16b16a": [176, 193], "dnnl_ab16b32a": [176, 193], "dnnl_ab16b64a": [176, 193], "dnnl_ab8b16a2b": [176, 193], "dnnl_ab8b32a2b": [176, 193], "dnnl_ab8b64a2b": [176, 193], "dnnl_ab4b16a4b": [176, 193], "dnnl_ab4b32a4b": [176, 193], "dnnl_ab4b64a4b": [176, 193], "dnnl_ab16b16a4b": [176, 193], "dnnl_abcd16b32a": [176, 193], "dnnl_abcd16b64a": [176, 193], "dnnl_abcd4b32a4b": [176, 193], "dnnl_abcd4b64a4b": [176, 193], "dnnl_abcd8b32a2b": [176, 193], "dnnl_abcd8b64a2b": [176, 193], "dnnl_abcde4b32a4b": [176, 193], "dnnl_abcde4b64a4b": [176, 193], "dnnl_abcde16b16a4b": [176, 193], "dnnl_abcde16b16a2b": [176, 193], "dnnl_abcde16b32a": [176, 193], "dnnl_abcde16b64a": [176, 193], "dnnl_abcde8b32a2b": [176, 193], "dnnl_abcde8b64a2b": [176, 193], "dnnl_abcdef16c16b4c": [176, 193], "dnnl_abcdef16c16b2c": [176, 193], "dnnl_ab32a32b8a4b": [176, 193], "dnnl_ab8a4b": [176, 193], "dnnl_ab32a32b8a2b": [176, 193], "dnnl_ab8a2b": [176, 193], "dnnl_abdc32d": [176, 193], "dnnl_abdc32d4c": [176, 193], "dnnl_abdec32": [176, 193], "dnnl_abdec32e2c": [176, 193], "dnnl_abdec32e4c": [176, 193], "dnnl_abdefc16b4c": [176, 193], "dnnl_acdeb16a4b": [176, 193], "dnnl_abcd16a16b2a": [176, 193], "dnnl_abc16a16b2a": [176, 193], "dnnl_abcd16b16c2b": [176, 193], "dnnl_abcde16b16c2b": [176, 193], "dnnl_acb32a": [176, 193], "dnnl_acb32a2b": [176, 193], "dnnl_acb32a4b": [176, 193], "dnnl_acb48a": [176, 193], "dnnl_acb48a2b": [176, 193], "dnnl_acb48a4b": [176, 193], "dnnl_acb64a": [176, 193], "dnnl_acb64a2b": [176, 193], "dnnl_acb64a4b": [176, 193], "dnnl_cba2b": [176, 193], "dnnl_cba4b": [176, 193], "dnnl_abdc32b": [176, 193], "dnnl_abdc32b2c": [176, 193], "dnnl_abdc32b4c": [176, 193], "dnnl_abdc48b": [176, 193], "dnnl_abdc48b2c": [176, 193], "dnnl_abdc48b4c": [176, 193], "dnnl_abdc64b": [176, 193], "dnnl_abdc64b2c": [176, 193], "dnnl_abdc64b4c": [176, 193], "dnnl_adcb2c": [176, 193], "dnnl_adcb4c": [176, 193], "dnnl_acdb32a2b": [176, 193], "dnnl_acdb32a4b": [176, 193], "dnnl_acdb48a": [176, 193], "dnnl_acdb48a2b": [176, 193], "dnnl_acdb48a4b": [176, 193], "dnnl_acdb64a": [176, 193], "dnnl_acdb64a2b": [176, 193], "dnnl_acdb64a4b": [176, 193], "dnnl_cdba2b": [176, 193], "dnnl_cdba4b": [176, 193], "dnnl_abdec32b2c": [176, 193], "dnnl_abdec32b4c": [176, 193], "dnnl_abdec48b": [176, 193], "dnnl_abdec48b2c": [176, 193], "dnnl_abdec48b4c": [176, 193], "dnnl_abdec64b": [176, 193], "dnnl_abdec64b2c": [176, 193], "dnnl_abdec64b4c": [176, 193], "dnnl_adecb2c": [176, 193], "dnnl_adecb4c": [176, 193], "dnnl_acdeb32a": [176, 193], "dnnl_acdeb32a2b": [176, 193], "dnnl_acdeb32a4b": [176, 193], "dnnl_acdeb48a": [176, 193], "dnnl_acdeb48a2b": [176, 193], "dnnl_acdeb48a4b": [176, 193], "dnnl_acdeb64a": [176, 193], "dnnl_acdeb64a2b": [176, 193], "dnnl_acdeb64a4b": [176, 193], "dnnl_cdeba2b": [176, 193], "dnnl_cdeba4b": [176, 193], "dnnl_abdefc32b": [176, 193], "dnnl_abdefc32b2c": [176, 193], "dnnl_abdefc32b4c": [176, 193], "dnnl_abdefc48b": [176, 193], "dnnl_abdefc48b2c": [176, 193], "dnnl_abdefc48b4c": [176, 193], "dnnl_abdefc64b": [176, 193], "dnnl_abdefc64b2c": [176, 193], "dnnl_abdefc64b4c": [176, 193], "dnnl_adefcb2c": [176, 193], "dnnl_adefcb4c": [176, 193], "dnnl_ab16b32a4b": [176, 193], "dnnl_ab16b48a4b": [176, 193], "dnnl_ab16b64a4b": [176, 193], "dnnl_ab16b16a2b": [176, 193], "dnnl_ab16b32a2b": [176, 193], "dnnl_ab16b48a2b": [176, 193], "dnnl_ab16b64a2b": [176, 193], "dnnl_abc16b32a4b": [176, 193], "dnnl_abc16b48a4b": [176, 193], "dnnl_abc16b64a4b": [176, 193], "dnnl_abc16b32a2b": [176, 193], "dnnl_abc16b48a2b": [176, 193], "dnnl_abc16b64a2b": [176, 193], "dnnl_abcd16b32a4b": [176, 193], "dnnl_abcd16b48a4b": [176, 193], "dnnl_abcd16b64a4b": [176, 193], "dnnl_abcd16b32a2b": [176, 193], "dnnl_abcd16b48a2b": [176, 193], "dnnl_abcd16b64a2b": [176, 193], "dnnl_abcde16b32a4b": [176, 193], "dnnl_abcde16b48a4b": [176, 193], "dnnl_abcde16b64a4b": [176, 193], "dnnl_abcde16b32a2b": [176, 193], "dnnl_abcde16b48a2b": [176, 193], "dnnl_abcde16b64a2b": [176, 193], "dnnl_abc32a16b": [176, 193], "dnnl_abcd32a16b": [176, 193], "dnnl_abcde32a16b": [176, 193], "dnnl_ab48a16b": [176, 193], "dnnl_ab48a32b": [176, 193], "dnnl_abc40a16b": [176, 193], "dnnl_abc40a32b": [176, 193], "dnnl_abc48b16c": [176, 193], "dnnl_abc48b32c": [176, 193], "dnnl_abcd40a16b": [176, 193], "dnnl_abcd40a32b": [176, 193], "dnnl_abcd32c": [176, 193], "dnnl_abdce32c": [176, 193], "dnnl_abdce32c2": [176, 193], "dnnl_ba16a16b2a": [176, 193], "dnnl_ba16a32b2a": [176, 193], "dnnl_ba16a48b2a": [176, 193], "dnnl_ba16a64b2a": [176, 193], "dnnl_ba16a16b4a": [176, 193], "dnnl_ba16a32b4a": [176, 193], "dnnl_ba16a48b4a": [176, 193], "dnnl_ba16a64b4a": [176, 193], "dnnl_abcd8a2b": [176, 193], "dnnl_abdec16c16b2c": [176, 193], "dnnl_abdec16c16b4c": [176, 193], "dnnl_abdefc16c16b2c": [176, 193], "dnnl_acb16b16a2b": [176, 193], "dnnl_acb16b16a4b": [176, 193], "dnnl_acdb16b16a2b": [176, 193], "dnnl_acdb16b16a4b": [176, 193], "dnnl_acdeb16b16a2b": [176, 193], "dnnl_abdefc16c16b4c": [176, 193], "dnnl_acdeb16b16a4b": [176, 193], "dnnl_acb16b32a2b": [176, 193], "dnnl_acb16b32a4b": [176, 193], "dnnl_acb16b48a2b": [176, 193], "dnnl_acb16b48a4b": [176, 193], "dnnl_acb16b64a2b": [176, 193], "dnnl_acb16b64a4b": [176, 193], "dnnl_abdc16c16b2c": [176, 193], "dnnl_abdc16c16b4c": [176, 193], "dnnl_abdc16c32b2c": [176, 193], "dnnl_abdc16c32b4c": [176, 193], "dnnl_abdc16c48b2c": [176, 193], "dnnl_abdc16c48b4c": [176, 193], "dnnl_abdc16c64b2c": [176, 193], "dnnl_abdc16c64b4c": [176, 193], "dnnl_acdb16b32a2b": [176, 193], "dnnl_acdb16b32a4b": [176, 193], "dnnl_acdb16b48a2b": [176, 193], "dnnl_acdb16b48a4b": [176, 193], "dnnl_acdb16b64a2b": [176, 193], "dnnl_acdb16b64a4b": [176, 193], "dnnl_abdec16c32b2c": [176, 193], "dnnl_abdec16c32b4c": [176, 193], "dnnl_abdec16c48b2c": [176, 193], "dnnl_abdec16c48b4c": [176, 193], "dnnl_abdec16c64b2c": [176, 193], "dnnl_abdec16c64b4c": [176, 193], "dnnl_acdeb16b32a2b": [176, 193], "dnnl_acdeb16b32a4b": [176, 193], "dnnl_acdeb16b48a2b": [176, 193], "dnnl_acdeb16b48a4b": [176, 193], "dnnl_acdeb16b64a2b": [176, 193], "dnnl_acdeb16b64a4b": [176, 193], "dnnl_abdefc16c32b2c": [176, 193], "dnnl_abdefc16c32b4c": [176, 193], "dnnl_abdefc16c48b2c": [176, 193], "dnnl_abdefc16c48b4c": [176, 193], "dnnl_abdefc16c64b2c": [176, 193], "dnnl_abdefc16c64b4c": [176, 193], "dnnl_decba16a": [176, 193], "dnnl_abc4a2b": [176, 193], "dnnl_abc8a2b": [176, 193], "dnnl_abcd8b2c": [176, 193], "dnnl_abcde4a2b": [176, 193], "dnnl_abcde8a2b": [176, 193], "dnnl_abcde40a16b": [176, 193], "dnnl_abcde40a32b": [176, 193], "dnnl_abcde8b2c": [176, 193], "dnnl_abcde4a8b8a2b": [176, 193], "dnnl_abcd4a8b8a2b": [176, 193], "dnnl_abc4a8b8a2b": [176, 193], "dnnl_abcdef4b8c8b2c": [176, 193], "dnnl_abcde4b8c8b2c": [176, 193], "dnnl_abcd4b8c8b2c": [176, 193], "dnnl_bacde4b8a8b2a": [176, 193], "dnnl_bacd4b8a8b2a": [176, 193], "dnnl_bac4b8a8b2a": [176, 193], "dnnl_acbdef4c8b8c2b": [176, 193], "dnnl_acbde4c8b8c2b": [176, 193], "dnnl_acbd4c8b8c2b": [176, 193], "dnnl_abcdef8b2c": [176, 193], "dnnl_ab32a16b": [176, 193], "dnnl_ab32a32b": [176, 193], "dnnl_ba4b8a8b2a": [176, 193], "dnnl_ba4b8a8b4a": [176, 193], "dnnl_abc32b16c": [176, 193], "dnnl_abc32b32c": [176, 193], "dnnl_acb4c8b8c2b": [176, 193], "dnnl_acb4c8b8c4b": [176, 193], "dnnl_abcd4a2b": [176, 193], "dnnl_abc2b8a16b4a": [176, 193], "dnnl_abcd2b8a16b4a": [176, 193], "dnnl_abcde2b8a16b4a": [176, 193], "dnnl_abc2a8b16a4b": [176, 193], "dnnl_abc2a8b16a2b": [176, 193], "dnnl_abc2b32a8b": [176, 193], "dnnl_abcd2a8b16a4b": [176, 193], "dnnl_abcd2a8b16a2b": [176, 193], "dnnl_acbd2c8b16c2b": [176, 193], "dnnl_abcd2b32a8b": [176, 193], "dnnl_abcd2c8b16c2b": [176, 193], "dnnl_abcde2a8b16a4b": [176, 193], "dnnl_abcde2a8b16a2b": [176, 193], "dnnl_acbde2c8b16c2b": [176, 193], "dnnl_abcde2b32a8b": [176, 193], "dnnl_abc2b8c16b2c": [176, 193], "dnnl_abcd2b8c16b2c": [176, 193], "dnnl_abcde2b8c16b2c": [176, 193], "dnnl_abcdef2b8c16b2c": [176, 193], "dnnl_bacde2b8a16b4a": [176, 193], "dnnl_bacd2b8a16b4a": [176, 193], "dnnl_bac2b8a16b4a": [176, 193], "dnnl_bacde2b8a16b2a": [176, 193], "dnnl_bacd2b8a16b2a": [176, 193], "dnnl_bac2b8a16b2a": [176, 193], "dnnl_abcde2c8b16c2b": [176, 193], "dnnl_abcdef2c8b16c2b": [176, 193], "dnnl_acbdef2c8b16c2b": [176, 193], "dnnl_abcd2b8c16b4c": [176, 193], "dnnl_abcde2b8c16b4c": [176, 193], "dnnl_ba4b8a16b2a": [176, 193], "dnnl_ba4b8a16b4a": [176, 193], "dnnl_acb4c8b16c2b": [176, 193], "dnnl_acb4c8b16c4b": [176, 193], "dnnl_ba16a16b": [176, 193], "dnnl_ba16a32b": [176, 193], "dnnl_ba16a48b": [176, 193], "dnnl_ba16a64b": [176, 193], "dnnl_acb16c2b": [176, 193], "dnnl_acb16c4b": [176, 193], "dnnl_ba16b2a": [176, 193], "dnnl_ba16b4a": [176, 193], "dnnl_abc16b16c": [176, 193], "dnnl_abc16b32c": [176, 193], "dnnl_ab16a16b": [176, 193], "dnnl_ab16a32b": [176, 193], "dnnl_abcde16a16b2a": [176, 193], "dnnl_abcdef16b16c2b": [176, 193], "dnnl_acedb16a": [176, 193], "dnnl_abdfec16b": [176, 193], "dnnl_abdec64e2c": [176, 193], "dnnl_abdec64e4c": [176, 193], "dnnl_acb16b16c": [176, 193], "dnnl_acb16b32c": [176, 193], "dnnl_acb16b48c": [176, 193], "dnnl_acb16b64c": [176, 193], "dnnl_acb16b16c2b": [176, 193], "dnnl_acb16b32c2b": [176, 193], "dnnl_acb16b48c2b": [176, 193], "dnnl_acb16b64c2b": [176, 193], "dnnl_acb16b16c4b": [176, 193], "dnnl_acb16b32c4b": [176, 193], "dnnl_acb16b48c4b": [176, 193], "dnnl_acb16b64c4b": [176, 193], "dnnl_abcd4c": [176, 193], "dnnl_abcde4c": [176, 193], "dnnl_abcdef4c": [176, 193], "dnnl_abcde32c": [176, 193], "dnnl_abcdef32c": [176, 193], "dnnl_abcd16a32b": [176, 193], "dnnl_decba8a": [176, 193], "dnnl_acdefb16b32c2b": [176, 193], "dnnl_acdefb16b32c4b": [176, 193], "dnnl_acdefb16b48c2b": [176, 193], "dnnl_acdefb16b48c4b": [176, 193], "dnnl_acdefb16b64c2b": [176, 193], "dnnl_acdefb16b64c4b": [176, 193], "dnnl_bcdea16a32b2a": [176, 193], "dnnl_bcdea16a32b4a": [176, 193], "dnnl_bcdea16a48b2a": [176, 193], "dnnl_bcdea16a48b4a": [176, 193], "dnnl_bcdea16a64b2a": [176, 193], "dnnl_bcdea16a64b4a": [176, 193], "dnnl_acdefb32c": [176, 193], "dnnl_acdefb32c2b": [176, 193], "dnnl_acdefb32c4b": [176, 193], "dnnl_acdefb48c": [176, 193], "dnnl_acdefb48c2b": [176, 193], "dnnl_acdefb48c4b": [176, 193], "dnnl_acdefb64c": [176, 193], "dnnl_acdefb64c2b": [176, 193], "dnnl_acdefb64c4b": [176, 193], "dnnl_bcdea32b": [176, 193], "dnnl_bcdea32b2a": [176, 193], "dnnl_bcdea32b4a": [176, 193], "dnnl_bcdea48b": [176, 193], "dnnl_bcdea48b2a": [176, 193], "dnnl_bcdea48b4a": [176, 193], "dnnl_bcdea64b": [176, 193], "dnnl_bcdea64b2a": [176, 193], "dnnl_bcdea64b4a": [176, 193], "dnnl_bca32b": [176, 193], "dnnl_bca32b2a": [176, 193], "dnnl_bca32b4a": [176, 193], "dnnl_bca48b": [176, 193], "dnnl_bca48b2a": [176, 193], "dnnl_bca48b4a": [176, 193], "dnnl_bca64b": [176, 193], "dnnl_bca64b2a": [176, 193], "dnnl_bca64b4a": [176, 193], "dnnl_acdb32c": [176, 193], "dnnl_acdb32c2b": [176, 193], "dnnl_acdb32c4b": [176, 193], "dnnl_acdb48c": [176, 193], "dnnl_acdb48c2b": [176, 193], "dnnl_acdb48c4b": [176, 193], "dnnl_acdb64c": [176, 193], "dnnl_acdb64c2b": [176, 193], "dnnl_acdb64c4b": [176, 193], "dnnl_bca16a16b2a": [176, 193], "dnnl_bca16a16b4a": [176, 193], "dnnl_bcda16a16b2a": [176, 193], "dnnl_bcda16a16b4a": [176, 193], "dnnl_bcdea16a16b2a": [176, 193], "dnnl_bcdea16a16b4a": [176, 193], "dnnl_acdb16b16c2b": [176, 193], "dnnl_acdb16b16c4b": [176, 193], "dnnl_acdeb16b16c2b": [176, 193], "dnnl_acdeb16b16c4b": [176, 193], "dnnl_acdefb16b16c2b": [176, 193], "dnnl_acdefb16b16c4b": [176, 193], "dnnl_bca16a32b2a": [176, 193], "dnnl_bca16a32b4a": [176, 193], "dnnl_bca16a48b2a": [176, 193], "dnnl_bca16a48b4a": [176, 193], "dnnl_bca16a64b2a": [176, 193], "dnnl_bca16a64b4a": [176, 193], "dnnl_acdb16b32c2b": [176, 193], "dnnl_acdb16b32c4b": [176, 193], "dnnl_acdb16b48c2b": [176, 193], "dnnl_acdb16b48c4b": [176, 193], "dnnl_acdb16b64c2b": [176, 193], "dnnl_acdb16b64c4b": [176, 193], "dnnl_bcda16a32b2a": [176, 193], "dnnl_bcda16a32b4a": [176, 193], "dnnl_bcda16a48b2a": [176, 193], "dnnl_bcda16a48b4a": [176, 193], "dnnl_bcda16a64b2a": [176, 193], "dnnl_bcda16a64b4a": [176, 193], "dnnl_acdeb16b32c2b": [176, 193], "dnnl_acdeb16b32c4b": [176, 193], "dnnl_acdeb16b48c2b": [176, 193], "dnnl_acdeb16b48c4b": [176, 193], "dnnl_acdeb16b64c2b": [176, 193], "dnnl_acdeb16b64c4b": [176, 193], "dnnl_bca16b": [176, 193], "dnnl_bca16b2a": [176, 193], "dnnl_bca16b4a": [176, 193], "dnnl_bcda16b": [176, 193], "dnnl_bcda16b2a": [176, 193], "dnnl_bcda16b4a": [176, 193], "dnnl_bcdea16b": [176, 193], "dnnl_bcdea16b2a": [176, 193], "dnnl_bcdea16b4a": [176, 193], "dnnl_acdb16c": [176, 193], "dnnl_acdb16c2b": [176, 193], "dnnl_acdb16c4b": [176, 193], "dnnl_acdeb16c": [176, 193], "dnnl_acdeb16c2b": [176, 193], "dnnl_acdeb16c4b": [176, 193], "dnnl_acdefb16c": [176, 193], "dnnl_acdefb16c2b": [176, 193], "dnnl_acdefb16c4b": [176, 193], "dnnl_bcda32b": [176, 193], "dnnl_bcda32b2a": [176, 193], "dnnl_bcda32b4a": [176, 193], "dnnl_bcda48b": [176, 193], "dnnl_bcda48b2a": [176, 193], "dnnl_bcda48b4a": [176, 193], "dnnl_bcda64b": [176, 193], "dnnl_bcda64b2a": [176, 193], "dnnl_bcda64b4a": [176, 193], "dnnl_acdeb32c": [176, 193], "dnnl_acdeb32c2b": [176, 193], "dnnl_acdeb32c4b": [176, 193], "dnnl_acdeb48c": [176, 193], "dnnl_acdeb48c2b": [176, 193], "dnnl_acdeb48c4b": [176, 193], "dnnl_acdeb64c": [176, 193], "dnnl_acdeb64c2b": [176, 193], "dnnl_acdeb64c4b": [176, 193], "dnnl_acb24a": [176, 193], "dnnl_acdb24a": [176, 193], "dnnl_acdeb24a": [176, 193], "dnnl_abdc24b": [176, 193], "dnnl_abdec24b": [176, 193], "dnnl_abdefc24b": [176, 193], "dnnl_abdc16d": [176, 193], "dnnl_abdec16": [176, 193], "dnnl_abdce16c": [176, 193], "dnnl_acb24a2b": [176, 193], "dnnl_acdb24a2b": [176, 193], "dnnl_acdeb24a2b": [176, 193], "dnnl_abdc24b2c": [176, 193], "dnnl_abdec24b2c": [176, 193], "dnnl_abdefc24b2c": [176, 193], "dnnl_acb8a2b": [176, 193], "dnnl_acdb8a2b": [176, 193], "dnnl_acdeb8a2b": [176, 193], "dnnl_abdc8b2c": [176, 193], "dnnl_abdec8b2c": [176, 193], "dnnl_abdefc8b2c": [176, 193], "dnnl_ab8b32a": [176, 193], "dnnl_abc8b32a": [176, 193], "dnnl_abcd8b32a": [176, 193], "dnnl_abcde8b32a": [176, 193], "dnnl_ab8b24a": [176, 193], "dnnl_abc8b24a": [176, 193], "dnnl_abcd8b24a": [176, 193], "dnnl_abcde8b24a": [176, 193], "dnnl_ab8b16a": [176, 193], "dnnl_abc8b16a": [176, 193], "dnnl_abcd8b16a": [176, 193], "dnnl_abcde8b16a": [176, 193], "dnnl_ab8b8a": [176, 193], "dnnl_ab4b8a4b": [176, 193], "dnnl_ab4b24a4b": [176, 193], "dnnl_abc4b8a4b": [176, 193], "dnnl_abc4b24a4b": [176, 193], "dnnl_abcd4b8a4b": [176, 193], "dnnl_abcd4b24a4b": [176, 193], "dnnl_abcde4b8a4b": [176, 193], "dnnl_abcde4b24a4b": [176, 193], "dnnl_ab8b24a2b": [176, 193], "dnnl_abc8b24a2b": [176, 193], "dnnl_abcd8b24a2b": [176, 193], "dnnl_abcde8b24a2b": [176, 193], "dnnl_ab8b8a2b": [176, 193], "dnnl_abc8b8a2b": [176, 193], "dnnl_abcd8b8a2b": [176, 193], "dnnl_abcde8b8a2b": [176, 193], "dnnl_acb24a4b": [176, 193], "dnnl_acdb24a4b": [176, 193], "dnnl_acdeb24a4b": [176, 193], "dnnl_abdc24b4c": [176, 193], "dnnl_abdec24b4c": [176, 193], "dnnl_abdefc24b4c": [176, 193], "dnnl_acb8a4b": [176, 193], "dnnl_acdb8a4b": [176, 193], "dnnl_acdeb8a4b": [176, 193], "dnnl_abdc8b4c": [176, 193], "dnnl_abdec8b4c": [176, 193], "dnnl_abdefc8b4c": [176, 193], "dnnl_bca8b": [176, 193], "dnnl_bca8b2a": [176, 193], "dnnl_bcda8b": [176, 193], "dnnl_bcda8b2a": [176, 193], "dnnl_bcdea8b": [176, 193], "dnnl_bcdea8b2a": [176, 193], "dnnl_acdb8c": [176, 193], "dnnl_acdb8c2b": [176, 193], "dnnl_acdeb8c": [176, 193], "dnnl_acdeb8c2b": [176, 193], "dnnl_acdefb8c": [176, 193], "dnnl_acdefb8c2b": [176, 193], "dnnl_bca24b": [176, 193], "dnnl_bca24b2a": [176, 193], "dnnl_bcda24b": [176, 193], "dnnl_bcda24b2a": [176, 193], "dnnl_bcdea24b": [176, 193], "dnnl_bcdea24b2a": [176, 193], "dnnl_acdb24c": [176, 193], "dnnl_acdb24c2b": [176, 193], "dnnl_acdeb24c": [176, 193], "dnnl_acdeb24c2b": [176, 193], "dnnl_acdefb24c": [176, 193], "dnnl_acdefb24c2b": [176, 193], "dnnl_bca8b4a": [176, 193], "dnnl_bcda8b4a": [176, 193], "dnnl_bcdea8b4a": [176, 193], "dnnl_acdb8c4b": [176, 193], "dnnl_acdeb8c4b": [176, 193], "dnnl_acdefb8c4b": [176, 193], "dnnl_bca24b4a": [176, 193], "dnnl_bcda24b4a": [176, 193], "dnnl_bcdea24b4a": [176, 193], "dnnl_acdb24c4b": [176, 193], "dnnl_acdeb24c4b": [176, 193], "dnnl_acdefb24c4b": [176, 193], "dnnl_ab16b48a": [176, 193], "dnnl_abc16b48a": [176, 193], "dnnl_abcd16b48a": [176, 193], "dnnl_abcde16b48a": [176, 193], "dnnl_abc16a4b": [176, 193], "dnnl_abcd16a4b": [176, 193], "dnnl_abcde16a4b": [176, 193], "dnnl_defcba16a": [176, 193], "dnnl_defcba8a": [176, 193], "dnnl_acb16b64a": [176, 193], "dnnl_acdb16b64a": [176, 193], "dnnl_acdeb16b64a": [176, 193], "dnnl_acb16b48a": [176, 193], "dnnl_acdb16b48a": [176, 193], "dnnl_acdeb16b48a": [176, 193], "dnnl_acb16b32a": [176, 193], "dnnl_acdb16b32a": [176, 193], "dnnl_acdeb16b32a": [176, 193], "dnnl_acb16b16a": [176, 193], "dnnl_acdb16b16a": [176, 193], "dnnl_acdeb16b16a": [176, 193], "dnnl_acb8b32a": [176, 193], "dnnl_acdb8b32a": [176, 193], "dnnl_acdeb8b32a": [176, 193], "dnnl_acb8b24a": [176, 193], "dnnl_acdb8b24a": [176, 193], "dnnl_acdeb8b24a": [176, 193], "dnnl_acb8b16a": [176, 193], "dnnl_acdb8b16a": [176, 193], "dnnl_acdeb8b16a": [176, 193], "dnnl_acb8b8a": [176, 193], "dnnl_acdb8b8a": [176, 193], "dnnl_acdeb8b8a": [176, 193], "dnnl_acb8b64a2b": [176, 193], "dnnl_acdb8b64a2b": [176, 193], "dnnl_acdeb8b64a2b": [176, 193], "dnnl_acb8b32a2b": [176, 193], "dnnl_acdb8b32a2b": [176, 193], "dnnl_acdeb8b32a2b": [176, 193], "dnnl_acb8b24a2b": [176, 193], "dnnl_acdb8b24a2b": [176, 193], "dnnl_acdeb8b24a2b": [176, 193], "dnnl_acb8b16a2b": [176, 193], "dnnl_acdb8b16a2b": [176, 193], "dnnl_acdeb8b16a2b": [176, 193], "dnnl_acb8b8a2b": [176, 193], "dnnl_acdb8b8a2b": [176, 193], "dnnl_acdeb8b8a2b": [176, 193], "dnnl_acb4b64a4b": [176, 193], "dnnl_acdb4b64a4b": [176, 193], "dnnl_acdeb4b64a4b": [176, 193], "dnnl_acb4b32a4b": [176, 193], "dnnl_acdb4b32a4b": [176, 193], "dnnl_acdeb4b32a4b": [176, 193], "dnnl_acb4b24a4b": [176, 193], "dnnl_acdb4b24a4b": [176, 193], "dnnl_acdeb4b24a4b": [176, 193], "dnnl_acb4b16a4b": [176, 193], "dnnl_acdb4b16a4b": [176, 193], "dnnl_acdeb4b16a4b": [176, 193], "dnnl_acb4b8a4b": [176, 193], "dnnl_acdb4b8a4b": [176, 193], "dnnl_acdeb4b8a4b": [176, 193], "dnnl_ab4a": [176, 193], "dnnl_ab8a": [176, 193], "dnnl_ba4b4a": [176, 193], "dnnl_ba8b4a": [176, 193], "dnnl_ba2a24b": [176, 193], "dnnl_acb2b24c": [176, 193], "dnnl_ba2a8b": [176, 193], "dnnl_acb2b8c": [176, 193], "dnnl_ba8a24b": [176, 193], "dnnl_acb8b24c": [176, 193], "dnnl_ba8a16b": [176, 193], "dnnl_acb8b16c": [176, 193], "dnnl_ba8a8b": [176, 193], "dnnl_acb8b8c": [176, 193], "dnnl_bcad": [176, 193], "dnnl_cabd": [176, 193], "dnnl_dabc": [176, 193], "dnnl_ab32a": [176, 193], "dnnl_abdec16e4c": [176, 193], "dnnl_abdc16d4c": [176, 193], "dnnl_format_tag_last": [176, 193], "dnnl_cn": 176, "dnnl_owi": 176, "dnnl_woi": [176, 193], "dnnl_iwo": 176, "dnnl_hwoi": [176, 193], "dnnl_ohwi": 176, "dnnl_ihwo": 176, "dnnl_iohw": 176, "dnnl_iodhw": 176, "dnnl_dhwoi": [176, 193], "dnnl_odhwi": 176, "dnnl_idhwo": 176, "dnnl_goiw": 176, "dnnl_gowi": 176, "dnnl_wigo": 176, "dnnl_goihw": 176, "dnnl_gohwi": 176, "dnnl_hwigo": 176, "dnnl_giohw": 176, "dnnl_goidhw": 176, "dnnl_godhwi": 176, "dnnl_giodhw": 176, "dnnl_dhwigo": 176, "dnnl_ldoi16o": 176, "dnnl_ldoi32o": 176, "dnnl_ldoi16o4i": 176, "dnnl_ldoi32o4i": 176, "dnnl_ldio32i": [176, 193], "dnnl_ldgoi16o": 176, "dnnl_ldgoi16o4i": 176, "dnnl_ldgoi32o": 176, "dnnl_ldgoi32o2i": 176, "dnnl_ldgoi32o4i": 176, "dnnl_ldgoi64o2i": 176, "dnnl_ldgoi64o4i": 176, "dnnl_ldgio16i": [176, 193], "dnnl_ldgio32i": [176, 193], "dnnl_ldgio32i2o": [176, 193], "dnnl_ncdhw32c": [176, 193], "dnnl_ncdhw16c": [176, 193], "dnnl_ncdhw4c": [176, 193], "dnnl_nchw32c": [176, 193], "dnnl_nchw4c": [176, 193], "dnnl_ncw32c": [176, 193], "dnnl_ncw16c": [176, 193], "dnnl_ncw4c": [176, 193], "dnnl_ncw8c": [176, 193], "dnnl_ncw16n16c": [176, 193], "dnnl_ncdhw16n16c": [176, 193], "dnnl_nchw16n16c": [176, 193], "dnnl_ncw32n16c": [176, 193], "dnnl_nchw32n16c": [176, 193], "dnnl_nchw16n32c": [176, 193], "dnnl_ncdhw32n16c": [176, 193], "dnnl_ncw32n32c": [176, 193], "dnnl_nchw32n32c": [176, 193], "dnnl_ncdhw32n32c": [176, 193], "dnnl_oi16i16o": [176, 193], "dnnl_oi16i32o": [176, 193], "dnnl_oi16i48o": [176, 193], "dnnl_oi16i64o": [176, 193], "dnnl_oi8i8o2i": [176, 193], "dnnl_oi8i16o2i": [176, 193], "dnnl_oi8i24o2i": [176, 193], "dnnl_oi8i32o2i": [176, 193], "dnnl_oi8i64o2i": [176, 193], "dnnl_oi4i8o4i": [176, 193], "dnnl_oi4i16o4i": [176, 193], "dnnl_oi4i24o4i": [176, 193], "dnnl_oi4i32o4i": [176, 193], "dnnl_oi4i64o4i": [176, 193], "dnnl_oi16i16o4i": [176, 193], "dnnl_oi8i32o": [176, 193], "dnnl_oi8i24o": [176, 193], "dnnl_oi8i16o": [176, 193], "dnnl_oi8i8o": [176, 193], "dnnl_iow16o16i": [176, 193], "dnnl_iow16i16o": [176, 193], "dnnl_oiw16i16o": [176, 193], "dnnl_owi16i16o": [176, 193], "dnnl_oiw16i32o": [176, 193], "dnnl_owi16i32o": [176, 193], "dnnl_oiw16i48o": [176, 193], "dnnl_owi16i48o": [176, 193], "dnnl_oiw16i64o": [176, 193], "dnnl_owi16i64o": [176, 193], "dnnl_oiw16o16i": [176, 193], "dnnl_oiw16o": [176, 193], "dnnl_oiw4i8o4i": [176, 193], "dnnl_owi4i8o4i": [176, 193], "dnnl_oiw4i16o4i": [176, 193], "dnnl_owi4i16o4i": [176, 193], "dnnl_oiw4i24o4i": [176, 193], "dnnl_owi4i24o4i": [176, 193], "dnnl_oiw4i32o4i": [176, 193], "dnnl_owi4i32o4i": [176, 193], "dnnl_oiw4i64o4i": [176, 193], "dnnl_owi4i64o4i": [176, 193], "dnnl_oiw2i8o4i": [176, 193], "dnnl_oiw16i16o4i": [176, 193], "dnnl_oiw16i16o2i": [176, 193], "dnnl_oiw16o16i2o": [176, 193], "dnnl_oiw4i4o": [176, 193], "dnnl_oiw4o4i": [176, 193], "dnnl_oiw4o": [176, 193], "dnnl_oiw8i8o2i": [176, 193], "dnnl_owi8i8o2i": [176, 193], "dnnl_oiw8i16o2i": [176, 193], "dnnl_owi8i16o2i": [176, 193], "dnnl_oiw8i24o2i": [176, 193], "dnnl_owi8i24o2i": [176, 193], "dnnl_oiw8i32o2i": [176, 193], "dnnl_owi8i32o2i": [176, 193], "dnnl_oiw8i64o2i": [176, 193], "dnnl_owi8i64o2i": [176, 193], "dnnl_oiw8i8o": [176, 193], "dnnl_owi8i8o": [176, 193], "dnnl_oiw8o16i2o": [176, 193], "dnnl_iow8o16i2o": [176, 193], "dnnl_oiw8o8i": [176, 193], "dnnl_oiw8o4i": [176, 193], "dnnl_owi16o": [176, 193], "dnnl_owi16o2i": [176, 193], "dnnl_owi16o4i": [176, 193], "dnnl_iwo8i": [176, 193], "dnnl_iwo8i2o": [176, 193], "dnnl_iwo8i4o": [176, 193], "dnnl_iwo16i": [176, 193], "dnnl_iwo16i2o": [176, 193], "dnnl_iwo16i4o": [176, 193], "dnnl_iwo24i": [176, 193], "dnnl_iwo24i2o": [176, 193], "dnnl_iwo24i4o": [176, 193], "dnnl_owi4o": [176, 193], "dnnl_owi8o": [176, 193], "dnnl_owi8o2i": [176, 193], "dnnl_oiw8i32o": [176, 193], "dnnl_owi8i32o": [176, 193], "dnnl_oiw8i24o": [176, 193], "dnnl_owi8i24o": [176, 193], "dnnl_oiw8i16o": [176, 193], "dnnl_owi8i16o": [176, 193], "dnnl_owi8o4i": [176, 193], "dnnl_iohw16i16o": [176, 193], "dnnl_iohw16o16i": [176, 193], "dnnl_ohwi16o": [176, 193], "dnnl_ohwi16o2i": [176, 193], "dnnl_ohwi16o4i": [176, 193], "dnnl_ihwo8i": [176, 193], "dnnl_ihwo8i2o": [176, 193], "dnnl_ihwo8i4o": [176, 193], "dnnl_ihwo16i": [176, 193], "dnnl_ihwo16i2o": [176, 193], "dnnl_ihwo16i4o": [176, 193], "dnnl_ihwo24i": [176, 193], "dnnl_ihwo24i2o": [176, 193], "dnnl_ihwo24i4o": [176, 193], "dnnl_ohwi24o": [176, 193], "dnnl_ohwi32o": [176, 193], "dnnl_ohwi4o": [176, 193], "dnnl_ohwi8o": [176, 193], "dnnl_ohwi8o2i": [176, 193], "dnnl_ohwi8o4i": [176, 193], "dnnl_oihw16i16o": [176, 193], "dnnl_ohwi16i16o": [176, 193], "dnnl_oihw16i32o": [176, 193], "dnnl_ohwi16i32o": [176, 193], "dnnl_oihw16i48o": [176, 193], "dnnl_ohwi16i48o": [176, 193], "dnnl_oihw16i64o": [176, 193], "dnnl_ohwi16i64o": [176, 193], "dnnl_oihw16o16i": [176, 193], "dnnl_oihw16o": [176, 193], "dnnl_oihw4i8o4i": [176, 193], "dnnl_ohwi4i8o4i": [176, 193], "dnnl_oihw4i16o4i": [176, 193], "dnnl_ohwi4i16o4i": [176, 193], "dnnl_oihw4i24o4i": [176, 193], "dnnl_ohwi4i24o4i": [176, 193], "dnnl_oihw4i32o4i": [176, 193], "dnnl_ohwi4i32o4i": [176, 193], "dnnl_oihw4i64o4i": [176, 193], "dnnl_ohwi4i64o4i": [176, 193], "dnnl_oihw16i16o4i": [176, 193], "dnnl_oihw16i16o2i": [176, 193], "dnnl_oihw16o16i2o": [176, 193], "dnnl_oihw4i4o": [176, 193], "dnnl_oihw4o4i": [176, 193], "dnnl_oihw4o": [176, 193], "dnnl_oihw8i8o2i": [176, 193], "dnnl_ohwi8i8o2i": [176, 193], "dnnl_oihw8i16o2i": [176, 193], "dnnl_ohwi8i16o2i": [176, 193], "dnnl_oihw8i32o2i": [176, 193], "dnnl_ohwi8i32o2i": [176, 193], "dnnl_oihw8i24o2i": [176, 193], "dnnl_ohwi8i24o2i": [176, 193], "dnnl_oihw8i64o2i": [176, 193], "dnnl_ohwi8i64o2i": [176, 193], "dnnl_oihw8i8o": [176, 193], "dnnl_ohwi8i8o": [176, 193], "dnnl_oihw8o16i2o": [176, 193], "dnnl_oihw2i8o4i": [176, 193], "dnnl_iohw8o16i2o": [176, 193], "dnnl_oihw8o8i": [176, 193], "dnnl_oihw8o4i": [176, 193], "dnnl_owhi16o": [176, 193], "dnnl_oihw8i32o": [176, 193], "dnnl_ohwi8i32o": [176, 193], "dnnl_oihw8i24o": [176, 193], "dnnl_ohwi8i24o": [176, 193], "dnnl_oihw8i16o": [176, 193], "dnnl_ohwi8i16o": [176, 193], "dnnl_odhwi16o": [176, 193], "dnnl_odhwi16o2i": [176, 193], "dnnl_odhwi16o4i": [176, 193], "dnnl_idhwo8i": [176, 193], "dnnl_idhwo8i2o": [176, 193], "dnnl_idhwo8i4o": [176, 193], "dnnl_idhwo16i": [176, 193], "dnnl_idhwo16i2o": [176, 193], "dnnl_idhwo16i4o": [176, 193], "dnnl_idhwo24i": [176, 193], "dnnl_idhwo24i2o": [176, 193], "dnnl_idhwo24i4o": [176, 193], "dnnl_odhwi4o": [176, 193], "dnnl_odhwi8o": [176, 193], "dnnl_odhwi8o2i": [176, 193], "dnnl_odhwi8o4i": [176, 193], "dnnl_odwhi16o": [176, 193], "dnnl_oidhw16i16o": [176, 193], "dnnl_odhwi16i16o": [176, 193], "dnnl_oidhw16i32o": [176, 193], "dnnl_odhwi16i32o": [176, 193], "dnnl_oidhw16i48o": [176, 193], "dnnl_odhwi16i48o": [176, 193], "dnnl_oidhw16i64o": [176, 193], "dnnl_odhwi16i64o": [176, 193], "dnnl_oidhw16o16i": [176, 193], "dnnl_oidhw16o": [176, 193], "dnnl_oidhw4i4o": [176, 193], "dnnl_oidhw4o4i": [176, 193], "dnnl_oidhw4o": [176, 193], "dnnl_oidhw8i8o2i": [176, 193], "dnnl_odhwi8i8o2i": [176, 193], "dnnl_oidhw8i16o2i": [176, 193], "dnnl_odhwi8i16o2i": [176, 193], "dnnl_oidhw8i32o2i": [176, 193], "dnnl_odhwi8i32o2i": [176, 193], "dnnl_oidhw8i24o2i": [176, 193], "dnnl_odhwi8i24o2i": [176, 193], "dnnl_oidhw8i64o2i": [176, 193], "dnnl_odhwi8i64o2i": [176, 193], "dnnl_oidhw8i8o": [176, 193], "dnnl_odhwi8i8o": [176, 193], "dnnl_oidhw8o16i2o": [176, 193], "dnnl_iodhw8o16i2o": [176, 193], "dnnl_oidhw4i8o4i": [176, 193], "dnnl_odhwi4i8o4i": [176, 193], "dnnl_oidhw4i16o4i": [176, 193], "dnnl_odhwi4i16o4i": [176, 193], "dnnl_oidhw4i24o4i": [176, 193], "dnnl_odhwi4i24o4i": [176, 193], "dnnl_oidhw4i32o4i": [176, 193], "dnnl_odhwi4i32o4i": [176, 193], "dnnl_oidhw4i64o4i": [176, 193], "dnnl_odhwi4i64o4i": [176, 193], "dnnl_oidhw16i16o4i": [176, 193], "dnnl_oidhw16i16o2i": [176, 193], "dnnl_oidhw2i8o4i": [176, 193], "dnnl_oidhw8o8i": [176, 193], "dnnl_oidhw8o4i": [176, 193], "dnnl_iodhw16i16o": [176, 193], "dnnl_oidhw4o8i8o4i": [176, 193], "dnnl_iodhw16o16i": [176, 193], "dnnl_oidhw16o16i2o": [176, 193], "dnnl_oidhw8i32o": [176, 193], "dnnl_odhwi8i32o": [176, 193], "dnnl_oidhw8i24o": [176, 193], "dnnl_odhwi8i24o": [176, 193], "dnnl_oidhw8i16o": [176, 193], "dnnl_odhwi8i16o": [176, 193], "dnnl_goiw16g": [176, 193], "dnnl_goiw8g": [176, 193], "dnnl_goiw4g": [176, 193], "dnnl_giow16o16i": [176, 193], "dnnl_giow16i16o": [176, 193], "dnnl_goiw16i16o": [176, 193], "dnnl_goiw16o16i": [176, 193], "dnnl_goiw16o": [176, 193], "dnnl_goiw4i16o4i": [176, 193], "dnnl_goiw2i8o4i": [176, 193], "dnnl_goiw16i16o4i": [176, 193], "dnnl_goiw16i16o2i": [176, 193], "dnnl_goiw16o16i2o": [176, 193], "dnnl_goiw4i4o": [176, 193], "dnnl_goiw4o4i": [176, 193], "dnnl_goiw4o": [176, 193], "dnnl_goiw8i16o2i": [176, 193], "dnnl_goiw8i8o": [176, 193], "dnnl_goiw8o16i2o": [176, 193], "dnnl_giow8o16i2o": [176, 193], "dnnl_goiw8o8i": [176, 193], "dnnl_goiw8o4i": [176, 193], "dnnl_gowi16o": [176, 193], "dnnl_gowi16o2i": [176, 193], "dnnl_gowi16o4i": [176, 193], "dnnl_giwo8i": [176, 193], "dnnl_giwo8i2o": [176, 193], "dnnl_giwo8i4o": [176, 193], "dnnl_giwo16i": [176, 193], "dnnl_giwo16i2o": [176, 193], "dnnl_giwo16i4o": [176, 193], "dnnl_giwo24i": [176, 193], "dnnl_giwo24i2o": [176, 193], "dnnl_giwo24i4o": [176, 193], "dnnl_gowi4o": [176, 193], "dnnl_gowi8o": [176, 193], "dnnl_gowi8o2i": [176, 193], "dnnl_gowi8o4i": [176, 193], "dnnl_goiw32g": [176, 193], "dnnl_goiw2i4o2i": [176, 193], "dnnl_goiw2o4i2o": [176, 193], "dnnl_goiw4i8o2i": [176, 193], "dnnl_goiw4o8i2o": [176, 193], "dnnl_goiw4i": [176, 193], "dnnl_goiw32i": [176, 193], "dnnl_giohw16i16o": [176, 193], "dnnl_giohw16o16i": [176, 193], "dnnl_gohwi16o": [176, 193], "dnnl_gohwi16o2i": [176, 193], "dnnl_gohwi16o4i": [176, 193], "dnnl_gihwo8i": [176, 193], "dnnl_gihwo8i2o": [176, 193], "dnnl_gihwo8i4o": [176, 193], "dnnl_gihwo16i": [176, 193], "dnnl_gihwo16i2o": [176, 193], "dnnl_gihwo16i4o": [176, 193], "dnnl_gihwo24i": [176, 193], "dnnl_gihwo24i2o": [176, 193], "dnnl_gihwo24i4o": [176, 193], "dnnl_gohwi32o": [176, 193], "dnnl_gohwi24o": [176, 193], "dnnl_gohwi24o2i": [176, 193], "dnnl_gohwi24o4i": [176, 193], "dnnl_gohwi4o": [176, 193], "dnnl_gohwi8o": [176, 193], "dnnl_gohwi8o2i": [176, 193], "dnnl_gohwi8o4i": [176, 193], "dnnl_goihw16g": [176, 193], "dnnl_goihw16i16o": [176, 193], "dnnl_goihw16o16i": [176, 193], "dnnl_goihw16o": [176, 193], "dnnl_goihw2i8o4i": [176, 193], "dnnl_goihw4i16o4i": [176, 193], "dnnl_goihw16i16o4i": [176, 193], "dnnl_goihw16i16o2i": [176, 193], "dnnl_goihw16o16i2o": [176, 193], "dnnl_goihw4i4o": [176, 193], "dnnl_goihw4o4i": [176, 193], "dnnl_goihw4o": [176, 193], "dnnl_goihw8g": [176, 193], "dnnl_goihw4g": [176, 193], "dnnl_goihw8i16o2i": [176, 193], "dnnl_goihw8i8o": [176, 193], "dnnl_goihw8o16i2o": [176, 193], "dnnl_giohw8o16i2o": [176, 193], "dnnl_goihw8o8i": [176, 193], "dnnl_goihw8o4i": [176, 193], "dnnl_goihw32g": [176, 193], "dnnl_gowhi16o": [176, 193], "dnnl_goihw4i": [176, 193], "dnnl_goihw32i": [176, 193], "dnnl_oiw4o8i8o4i": [176, 193], "dnnl_oihw4o8i8o4i": [176, 193], "dnnl_iow4i8o8i4o": [176, 193], "dnnl_iohw4i8o8i4o": [176, 193], "dnnl_iodhw4i8o8i4o": [176, 193], "dnnl_oihw2o8i8o2i": [176, 193], "dnnl_goiw4o8i8o4i": [176, 193], "dnnl_goihw4o8i8o4i": [176, 193], "dnnl_goidhw4o8i8o4i": [176, 193], "dnnl_giow4i8o8i4o": [176, 193], "dnnl_giohw4i8o8i4o": [176, 193], "dnnl_giodhw4i8o8i4o": [176, 193], "dnnl_goihw2o8i8o2i": [176, 193], "dnnl_goihw2i4o2i": [176, 193], "dnnl_goihw2o4i2o": [176, 193], "dnnl_goihw4i8o2i": [176, 193], "dnnl_goihw4o8i2o": [176, 193], "dnnl_giodhw16i16o": [176, 193], "dnnl_giodhw16o16i": [176, 193], "dnnl_godhwi16o": [176, 193], "dnnl_godhwi16o2i": [176, 193], "dnnl_godhwi16o4i": [176, 193], "dnnl_gidhwo8i": [176, 193], "dnnl_gidhwo8i2o": [176, 193], "dnnl_gidhwo8i4o": [176, 193], "dnnl_gidhwo16i": [176, 193], "dnnl_gidhwo16i2o": [176, 193], "dnnl_gidhwo16i4o": [176, 193], "dnnl_gidhwo24i": [176, 193], "dnnl_gidhwo24i2o": [176, 193], "dnnl_gidhwo24i4o": [176, 193], "dnnl_godhwi4o": [176, 193], "dnnl_godhwi8o": [176, 193], "dnnl_godhwi8o2i": [176, 193], "dnnl_godhwi8o4i": [176, 193], "dnnl_godwhi16o": [176, 193], "dnnl_goidhw16i16o": [176, 193], "dnnl_goidhw4i16o4i": [176, 193], "dnnl_goidhw16i16o4i": [176, 193], "dnnl_goidhw2i8o4i": [176, 193], "dnnl_goidhw16i16o2i": [176, 193], "dnnl_goidhw16o16i": [176, 193], "dnnl_goidhw16o16i2o": [176, 193], "dnnl_goidhw16o": [176, 193], "dnnl_goidhw4i4o": [176, 193], "dnnl_goidhw4o4i": [176, 193], "dnnl_goidhw4o": [176, 193], "dnnl_goidhw8i16o2i": [176, 193], "dnnl_goidhw8i8o": [176, 193], "dnnl_goidhw8o16i2o": [176, 193], "dnnl_giodhw8o16i2o": [176, 193], "dnnl_goidhw8o8i": [176, 193], "dnnl_goidhw8o4i": [176, 193], "dnnl_goidhw16g": [176, 193], "dnnl_goidhw32g": [176, 193], "dnnl_goidhw2i4o2i": [176, 193], "dnnl_goidhw4i8o2i": [176, 193], "dnnl_goidhw2o4i2o": [176, 193], "dnnl_goidhw4o8i2o": [176, 193], "dnnl_goidhw4i": [176, 193], "dnnl_goidhw32i": [176, 193], "dnnl_owi24o": [176, 193], "dnnl_owi24o2i": [176, 193], "dnnl_owi24o4i": [176, 193], "dnnl_owi32o": [176, 193], "dnnl_owi32o2i": [176, 193], "dnnl_owi32o4i": [176, 193], "dnnl_owi48o": [176, 193], "dnnl_owi48o2i": [176, 193], "dnnl_owi48o4i": [176, 193], "dnnl_owi64o": [176, 193], "dnnl_owi64o2i": [176, 193], "dnnl_owi64o4i": [176, 193], "dnnl_iwo32i": [176, 193], "dnnl_iwo32i2o": [176, 193], "dnnl_iwo32i4o": [176, 193], "dnnl_iwo48i": [176, 193], "dnnl_iwo48i2o": [176, 193], "dnnl_iwo48i4o": [176, 193], "dnnl_iwo64i": [176, 193], "dnnl_iwo64i2o": [176, 193], "dnnl_iwo64i4o": [176, 193], "dnnl_wio2i": [176, 193], "dnnl_wio4i": [176, 193], "dnnl_gowi24o": [176, 193], "dnnl_gowi24o2i": [176, 193], "dnnl_gowi24o4i": [176, 193], "dnnl_gowi32o": [176, 193], "dnnl_gowi32o2i": [176, 193], "dnnl_gowi32o4i": [176, 193], "dnnl_gowi48o": [176, 193], "dnnl_gowi48o2i": [176, 193], "dnnl_gowi48o4i": [176, 193], "dnnl_gowi64o": [176, 193], "dnnl_gowi64o2i": [176, 193], "dnnl_gowi64o4i": [176, 193], "dnnl_giwo32i": [176, 193], "dnnl_giwo32i2o": [176, 193], "dnnl_giwo32i4o": [176, 193], "dnnl_giwo48i": [176, 193], "dnnl_giwo48i2o": [176, 193], "dnnl_giwo48i4o": [176, 193], "dnnl_giwo64i": [176, 193], "dnnl_giwo64i2o": [176, 193], "dnnl_giwo64i4o": [176, 193], "dnnl_gwio": [176, 193], "dnnl_gwio2i": [176, 193], "dnnl_gwio4i": [176, 193], "dnnl_ohwi24o2i": [176, 193], "dnnl_ohwi24o4i": [176, 193], "dnnl_ohwi32o2i": [176, 193], "dnnl_ohwi32o4i": [176, 193], "dnnl_ohwi48o": [176, 193], "dnnl_ohwi48o2i": [176, 193], "dnnl_ohwi48o4i": [176, 193], "dnnl_ohwi64o": [176, 193], "dnnl_ohwi64o2i": [176, 193], "dnnl_ohwi64o4i": [176, 193], "dnnl_ihwo32i": [176, 193], "dnnl_ihwo32i2o": [176, 193], "dnnl_ihwo32i4o": [176, 193], "dnnl_ihwo48i": [176, 193], "dnnl_ihwo48i2o": [176, 193], "dnnl_ihwo48i4o": [176, 193], "dnnl_ihwo64i": [176, 193], "dnnl_ihwo64i2o": [176, 193], "dnnl_ihwo64i4o": [176, 193], "dnnl_hwio2i": [176, 193], "dnnl_hwio4i": [176, 193], "dnnl_gohwi32o2i": [176, 193], "dnnl_gohwi32o4i": [176, 193], "dnnl_gohwi48o": [176, 193], "dnnl_gohwi48o2i": [176, 193], "dnnl_gohwi48o4i": [176, 193], "dnnl_gohwi64o": [176, 193], "dnnl_gohwi64o2i": [176, 193], "dnnl_gohwi64o4i": [176, 193], "dnnl_gihwo32i": [176, 193], "dnnl_gihwo32i2o": [176, 193], "dnnl_gihwo32i4o": [176, 193], "dnnl_gihwo48i": [176, 193], "dnnl_gihwo48i2o": [176, 193], "dnnl_gihwo48i4o": [176, 193], "dnnl_gihwo64i": [176, 193], "dnnl_gihwo64i2o": [176, 193], "dnnl_gihwo64i4o": [176, 193], "dnnl_ghwio": [176, 193], "dnnl_ghwio2i": [176, 193], "dnnl_ghwio4i": [176, 193], "dnnl_odhwi24o": [176, 193], "dnnl_odhwi24o2i": [176, 193], "dnnl_odhwi24o4i": [176, 193], "dnnl_odhwi32o": [176, 193], "dnnl_odhwi32o2i": [176, 193], "dnnl_odhwi32o4i": [176, 193], "dnnl_odhwi48o": [176, 193], "dnnl_odhwi48o2i": [176, 193], "dnnl_odhwi48o4i": [176, 193], "dnnl_odhwi64o": [176, 193], "dnnl_odhwi64o2i": [176, 193], "dnnl_odhwi64o4i": [176, 193], "dnnl_idhwo32i": [176, 193], "dnnl_idhwo32i2o": [176, 193], "dnnl_idhwo32i4o": [176, 193], "dnnl_idhwo48i": [176, 193], "dnnl_idhwo48i2o": [176, 193], "dnnl_idhwo48i4o": [176, 193], "dnnl_idhwo64i": [176, 193], "dnnl_idhwo64i2o": [176, 193], "dnnl_idhwo64i4o": [176, 193], "dnnl_dhwio2i": [176, 193], "dnnl_dhwio4i": [176, 193], "dnnl_godhwi24o": [176, 193], "dnnl_godhwi24o2i": [176, 193], "dnnl_godhwi24o4i": [176, 193], "dnnl_godhwi32o": [176, 193], "dnnl_godhwi32o2i": [176, 193], "dnnl_godhwi32o4i": [176, 193], "dnnl_godhwi48o": [176, 193], "dnnl_godhwi48o2i": [176, 193], "dnnl_godhwi48o4i": [176, 193], "dnnl_godhwi64o": [176, 193], "dnnl_godhwi64o2i": [176, 193], "dnnl_godhwi64o4i": [176, 193], "dnnl_gidhwo32i": [176, 193], "dnnl_gidhwo32i2o": [176, 193], "dnnl_gidhwo32i4o": [176, 193], "dnnl_gidhwo48i": [176, 193], "dnnl_gidhwo48i2o": [176, 193], "dnnl_gidhwo48i4o": [176, 193], "dnnl_gidhwo64i": [176, 193], "dnnl_gidhwo64i2o": [176, 193], "dnnl_gidhwo64i4o": [176, 193], "dnnl_gdhwio": [176, 193], "dnnl_gdhwio2i": [176, 193], "dnnl_gdhwio4i": [176, 193], "dnnl_oi16i32o4i": [176, 193], "dnnl_oi16i48o4i": [176, 193], "dnnl_oi16i64o4i": [176, 193], "dnnl_oi16i16o2i": [176, 193], "dnnl_oi16i32o2i": [176, 193], "dnnl_oi16i48o2i": [176, 193], "dnnl_oi16i64o2i": [176, 193], "dnnl_oiw16i32o4i": [176, 193], "dnnl_oiw16i48o4i": [176, 193], "dnnl_oiw16i64o4i": [176, 193], "dnnl_oiw16i32o2i": [176, 193], "dnnl_oiw16i48o2i": [176, 193], "dnnl_oiw16i64o2i": [176, 193], "dnnl_oihw16i32o4i": [176, 193], "dnnl_oihw16i48o4i": [176, 193], "dnnl_oihw16i64o4i": [176, 193], "dnnl_oihw16i32o2i": [176, 193], "dnnl_oihw16i48o2i": [176, 193], "dnnl_oihw16i64o2i": [176, 193], "dnnl_oidhw16i32o4i": [176, 193], "dnnl_oidhw16i48o4i": [176, 193], "dnnl_oidhw16i64o4i": [176, 193], "dnnl_oidhw16i32o2i": [176, 193], "dnnl_oidhw16i48o2i": [176, 193], "dnnl_oidhw16i64o2i": [176, 193], "dnnl_owi16i16o2i": [176, 193], "dnnl_owi16i16o4i": [176, 193], "dnnl_ohwi16i16o2i": [176, 193], "dnnl_ohwi16i16o4i": [176, 193], "dnnl_odhwi16i16o2i": [176, 193], "dnnl_odhwi16i16o4i": [176, 193], "dnnl_iwo16o16i2o": [176, 193], "dnnl_iwo16o16i4o": [176, 193], "dnnl_ihwo16o16i2o": [176, 193], "dnnl_ihwo16o16i4o": [176, 193], "dnnl_idhwo16o16i2o": [176, 193], "dnnl_idhwo16o16i4o": [176, 193], "dnnl_gowi16i16o2i": [176, 193], "dnnl_gowi16i16o4i": [176, 193], "dnnl_gohwi16i16o2i": [176, 193], "dnnl_gohwi16i16o4i": [176, 193], "dnnl_godhwi16i16o2i": [176, 193], "dnnl_godhwi16i16o4i": [176, 193], "dnnl_giwo16o16i2o": [176, 193], "dnnl_giwo16o16i4o": [176, 193], "dnnl_gihwo16o16i2o": [176, 193], "dnnl_gihwo16o16i4o": [176, 193], "dnnl_gidhwo16o16i2o": [176, 193], "dnnl_gidhwo16o16i4o": [176, 193], "dnnl_owi16i32o2i": [176, 193], "dnnl_owi16i32o4i": [176, 193], "dnnl_owi16i48o2i": [176, 193], "dnnl_owi16i48o4i": [176, 193], "dnnl_owi16i64o2i": [176, 193], "dnnl_owi16i64o4i": [176, 193], "dnnl_iwo16o32i2o": [176, 193], "dnnl_iwo16o32i4o": [176, 193], "dnnl_iwo16o48i2o": [176, 193], "dnnl_iwo16o48i4o": [176, 193], "dnnl_iwo16o64i2o": [176, 193], "dnnl_iwo16o64i4o": [176, 193], "dnnl_gowi16i32o2i": [176, 193], "dnnl_gowi16i32o4i": [176, 193], "dnnl_gowi16i48o2i": [176, 193], "dnnl_gowi16i48o4i": [176, 193], "dnnl_gowi16i64o2i": [176, 193], "dnnl_gowi16i64o4i": [176, 193], "dnnl_giwo16o32i2o": [176, 193], "dnnl_giwo16o32i4o": [176, 193], "dnnl_giwo16o48i2o": [176, 193], "dnnl_giwo16o48i4o": [176, 193], "dnnl_giwo16o64i2o": [176, 193], "dnnl_giwo16o64i4o": [176, 193], "dnnl_ohwi16i32o2i": [176, 193], "dnnl_ohwi16i32o4i": [176, 193], "dnnl_ohwi16i48o2i": [176, 193], "dnnl_ohwi16i48o4i": [176, 193], "dnnl_ohwi16i64o2i": [176, 193], "dnnl_ohwi16i64o4i": [176, 193], "dnnl_ihwo16o32i2o": [176, 193], "dnnl_ihwo16o32i4o": [176, 193], "dnnl_ihwo16o48i2o": [176, 193], "dnnl_ihwo16o48i4o": [176, 193], "dnnl_ihwo16o64i2o": [176, 193], "dnnl_ihwo16o64i4o": [176, 193], "dnnl_gohwi16i32o2i": [176, 193], "dnnl_gohwi16i32o4i": [176, 193], "dnnl_gohwi16i48o2i": [176, 193], "dnnl_gohwi16i48o4i": [176, 193], "dnnl_gohwi16i64o2i": [176, 193], "dnnl_gohwi16i64o4i": [176, 193], "dnnl_gihwo16o32i2o": [176, 193], "dnnl_gihwo16o32i4o": [176, 193], "dnnl_gihwo16o48i2o": [176, 193], "dnnl_gihwo16o48i4o": [176, 193], "dnnl_gihwo16o64i2o": [176, 193], "dnnl_gihwo16o64i4o": [176, 193], "dnnl_odhwi16i32o2i": [176, 193], "dnnl_odhwi16i32o4i": [176, 193], "dnnl_odhwi16i48o2i": [176, 193], "dnnl_odhwi16i48o4i": [176, 193], "dnnl_odhwi16i64o2i": [176, 193], "dnnl_odhwi16i64o4i": [176, 193], "dnnl_idhwo16o32i2o": [176, 193], "dnnl_idhwo16o32i4o": [176, 193], "dnnl_idhwo16o48i2o": [176, 193], "dnnl_idhwo16o48i4o": [176, 193], "dnnl_idhwo16o64i2o": [176, 193], "dnnl_idhwo16o64i4o": [176, 193], "dnnl_godhwi16i32o2i": [176, 193], "dnnl_godhwi16i32o4i": [176, 193], "dnnl_godhwi16i48o2i": [176, 193], "dnnl_godhwi16i48o4i": [176, 193], "dnnl_godhwi16i64o2i": [176, 193], "dnnl_godhwi16i64o4i": [176, 193], "dnnl_gidhwo16o32i2o": [176, 193], "dnnl_gidhwo16o32i4o": [176, 193], "dnnl_gidhwo16o48i2o": [176, 193], "dnnl_gidhwo16o48i4o": [176, 193], "dnnl_gidhwo16o64i2o": [176, 193], "dnnl_gidhwo16o64i4o": [176, 193], "dnnl_hwiog16g": [176, 193], "dnnl_hwiog8g": [176, 193], "dnnl_dhwiog16g": [176, 193], "dnnl_dhwiog8g": [176, 193], "dnnl_ncdhw40n16c": [176, 193], "dnnl_ncw40n16c": [176, 193], "dnnl_nchw40n16c": [176, 193], "dnnl_ncw40n32c": [176, 193], "dnnl_nchw40n32c": [176, 193], "dnnl_ncdhw40n32c": [176, 193], "dnnl_oidhw4o8i8o2i": [176, 193], "dnnl_oihw4o8i8o2i": [176, 193], "dnnl_oiw4o8i8o2i": [176, 193], "dnnl_goidhw4o8i8o2i": [176, 193], "dnnl_goihw4o8i8o2i": [176, 193], "dnnl_goiw4o8i8o2i": [176, 193], "dnnl_iodhw4i8o8i2o": [176, 193], "dnnl_iohw4i8o8i2o": [176, 193], "dnnl_iow4i8o8i2o": [176, 193], "dnnl_giodhw4i8o8i2o": [176, 193], "dnnl_giohw4i8o8i2o": [176, 193], "dnnl_giow4i8o8i2o": [176, 193], "dnnl_ncw2c32n8c": [176, 193], "dnnl_nchw2c32n8c": [176, 193], "dnnl_ncdhw2c32n8c": [176, 193], "dnnl_oiw2i8o16i4o": [176, 193], "dnnl_oihw2i8o16i4o": [176, 193], "dnnl_oidhw2i8o16i4o": [176, 193], "dnnl_oiw2o8i16o4i": [176, 193], "dnnl_oiw2o8i16o2i": [176, 193], "dnnl_iow2i8o16i4o": [176, 193], "dnnl_iow2i8o16i2o": [176, 193], "dnnl_oihw2o8i16o4i": [176, 193], "dnnl_oihw2o8i16o2i": [176, 193], "dnnl_iohw2i8o16i4o": [176, 193], "dnnl_iohw2i8o16i2o": [176, 193], "dnnl_oidhw2o8i16o4i": [176, 193], "dnnl_oidhw2o8i16o2i": [176, 193], "dnnl_iodhw2i8o16i4o": [176, 193], "dnnl_iodhw2i8o16i2o": [176, 193], "dnnl_goiw2o8i16o2i": [176, 193], "dnnl_giow2i8o16i2o": [176, 193], "dnnl_giohw2i8o16i2o": [176, 193], "dnnl_giodhw2i8o16i2o": [176, 193], "dnnl_goihw2o8i16o2i": [176, 193], "dnnl_goidhw2o8i16o2i": [176, 193], "dnnl_goiw2o8i16o4i": [176, 193], "dnnl_goihw2o8i16o4i": [176, 193], "ndhwc": [176, 193], "data_in_ncdhw": 176, "data_in_ndhwc": 176, "dnnl_memory_desc_destroi": [176, 228, 236, 247, 278, 302, 362, 372, 382], "alia": [176, 193, 204, 205, 308, 350], "6d": [176, 193], "7d": [176, 193], "8d": [176, 193], "9d": [176, 193], "10d": [176, 193], "11d": [176, 193], "2nd": [176, 193], "sentinel": 176, "incl": 176, "seq_length": [176, 193], "num_lay": [176, 193, 258, 276, 404, 434], "num_direct": [176, 193, 258, 276, 404, 434], "input_channel": [176, 193, 258, 276, 404, 434], "num_gat": [176, 193, 258, 276, 404, 434], "output_channel": [176, 193, 258, 276, 404, 434], "num_channels_in_hidden_st": [176, 193], "num_channels_in_recurrent_project": [176, 193], "dnnl_fpmath_mode_strict": [177, 178, 284, 295, 314], "dnnl_fpmath_mode_bf16": [177, 178, 284, 295, 314], "dnnl_fpmath_mode_f16": [177, 178, 284, 295, 314], "dnnl_fpmath_mode_tf32": [177, 178, 284, 295, 314], "dnnl_fpmath_mode_ani": [177, 178, 284, 295, 314], "dnnl_graph_layout_type_undef": [179, 181], "dnnl_graph_layout_type_ani": [179, 181, 332], "dnnl_graph_layout_type_strid": [179, 181, 332, 476], "dnnl_graph_layout_type_opaqu": [179, 181, 476], "dnnl_graph_tensor_property_undef": [182, 190], "dnnl_graph_tensor_property_vari": [182, 190], "dnnl_graph_tensor_property_const": [182, 190], "dnnl_graph_op_attr_undef": [183, 184], "dnnl_graph_op_attr_alpha": [183, 184], "dnnl_graph_op_attr_beta": [183, 184], "dnnl_graph_op_attr_epsilon": [183, 184], "dnnl_graph_op_attr_max": [183, 184], "dnnl_graph_op_attr_min": [183, 184], "dnnl_graph_op_attr_momentum": [183, 184], "dnnl_graph_op_attr_scal": [183, 184], "dnnl_graph_op_attr_axi": [183, 184], "dnnl_graph_op_attr_begin_norm_axi": [183, 184], "dnnl_graph_op_attr_group": [183, 184], "dnnl_graph_op_attr_ax": [183, 184], "dnnl_graph_op_attr_dil": [183, 184], "dnnl_graph_op_attr_dst_shap": [183, 184], "dnnl_graph_op_attr_kernel": [183, 184], "dnnl_graph_op_attr_ord": [183, 184], "dnnl_graph_op_attr_output_pad": [183, 184], "dnnl_graph_op_attr_pads_begin": [183, 184], "dnnl_graph_op_attr_pads_end": [183, 184], "dnnl_graph_op_attr_shap": [183, 184], "dnnl_graph_op_attr_s": [183, 184], "dnnl_graph_op_attr_src_shap": [183, 184], "dnnl_graph_op_attr_strid": [183, 184], "dnnl_graph_op_attr_weights_shap": [183, 184], "dnnl_graph_op_attr_zp": [183, 184], "dnnl_graph_op_attr_exclude_pad": [183, 184], "dnnl_graph_op_attr_keep_dim": [183, 184], "dnnl_graph_op_attr_keep_stat": [183, 184], "dnnl_graph_op_attr_per_channel_broadcast": [183, 184], "dnnl_graph_op_attr_special_zero": [183, 184], "dnnl_graph_op_attr_transpose_a": [183, 184], "dnnl_graph_op_attr_transpose_b": [183, 184], "dnnl_graph_op_attr_use_affin": [183, 184], "dnnl_graph_op_attr_use_dst": [183, 184], "dnnl_graph_op_attr_auto_broadcast": [183, 184], "dnnl_graph_op_attr_auto_pad": [183, 184], "dnnl_graph_op_attr_coordinate_transformation_mod": [183, 184], "dnnl_graph_op_attr_data_format": [183, 184, 476], "dnnl_graph_op_attr_mod": [183, 184], "dnnl_graph_op_attr_qtyp": [183, 184], "dnnl_graph_op_attr_rounding_typ": [183, 184], "dnnl_graph_op_attr_weights_format": [183, 184, 476], "dnnl_graph_op_attr_end": [183, 184], "illeg": 183, "weight_shap": [183, 184], "exter": [183, 184], "0x30": 184, "0x40": 184, "0x60": 184, "0x80": 184, "0xff": 184, "input_shap": 184, "dnnl_graph_op_ab": [185, 186], "absbackward": [185, 281], "dnnl_graph_op_abs_backward": [185, 186], "dnnl_graph_op_add": [185, 186], "dnnl_graph_op_avg_pool": [185, 186], "dnnl_graph_op_avg_pool_backward": [185, 186], "dnnl_graph_op_batch_norm_forward_train": [185, 186], "dnnl_graph_op_batch_norm_infer": [185, 186], "dnnl_graph_op_batch_norm_backward": [185, 186], "dnnl_graph_op_bias_add": [185, 186], "dnnl_graph_op_bias_add_backward": [185, 186], "dnnl_graph_op_clamp": [185, 186], "clampbackward": [185, 281], "dnnl_graph_op_clamp_backward": [185, 186], "dnnl_graph_op_concat": [185, 186], "dnnl_graph_op_convolut": [185, 186], "dnnl_graph_op_convolution_backward_data": [185, 186], "dnnl_graph_op_convolution_backward_weight": [185, 186], "dnnl_graph_op_conv_transpos": [185, 186], "convtransposebackwarddata": [185, 281], "dnnl_graph_op_conv_transpose_backward_data": [185, 186], "convtransposebackwardweight": [185, 281], "dnnl_graph_op_conv_transpose_backward_weight": [185, 186], "dnnl_graph_op_dequant": [185, 186], "dnnl_graph_op_divid": [185, 186], "dynamicdequant": [185, 281], "dnnl_graph_op_dynamic_dequant": [185, 186], "dynamicquant": [185, 281], "dnnl_graph_op_dynamic_quant": [185, 186], "dnnl_graph_op_elu": [185, 186], "elubackward": [185, 281], "dnnl_graph_op_elu_backward": [185, 186], "dnnl_graph_op_end": [185, 186], "dnnl_graph_op_exp": [185, 186], "dnnl_graph_op_gelu": [185, 186], "dnnl_graph_op_gelu_backward": [185, 186], "dnnl_graph_op_group_norm": [185, 186], "dnnl_graph_op_hard_sigmoid": [185, 186], "hardsigmoidbackward": [185, 281], "dnnl_graph_op_hard_sigmoid_backward": [185, 186], "dnnl_graph_op_hard_swish": [185, 186], "hardswishbackward": [185, 281], "dnnl_graph_op_hard_swish_backward": [185, 186], "dnnl_graph_op_interpol": [185, 186], "interpolatebackward": [185, 281], "dnnl_graph_op_interpolate_backward": [185, 186], "dnnl_graph_op_layer_norm": [185, 186], "layernormbackward": [185, 281], "dnnl_graph_op_layer_norm_backward": [185, 186], "dnnl_graph_op_leaky_relu": [185, 186], "dnnl_graph_op_log": [185, 186], "dnnl_graph_op_log_softmax": [185, 186], "logsoftmaxbackward": [185, 281], "dnnl_graph_op_log_softmax_backward": [185, 186], "dnnl_graph_op_matmul": [185, 186], "dnnl_graph_op_maximum": [185, 186], "dnnl_graph_op_max_pool": [185, 186], "maxpoolbackward": [185, 281], "dnnl_graph_op_max_pool_backward": [185, 186], "dnnl_graph_op_minimum": [185, 186], "dnnl_graph_op_mish": [185, 186], "mishbackward": [185, 281], "dnnl_graph_op_mish_backward": [185, 186], "dnnl_graph_op_multipli": [185, 186], "dnnl_graph_op_pow": [185, 186], "dnnl_graph_op_prelu": [185, 186], "prelubackward": [185, 281], "dnnl_graph_op_prelu_backward": [185, 186], "dnnl_graph_op_quant": [185, 186], "dnnl_graph_op_reciproc": [185, 186], "dnnl_graph_op_reduce_l1": [185, 186], "dnnl_graph_op_reduce_l2": [185, 186], "dnnl_graph_op_reduce_max": [185, 186], "dnnl_graph_op_reduce_mean": [185, 186], "dnnl_graph_op_reduce_min": [185, 186], "dnnl_graph_op_reduce_prod": [185, 186], "dnnl_graph_op_reduce_sum": [185, 186], "dnnl_graph_op_relu": [185, 186], "dnnl_graph_op_relu_backward": [185, 186], "dnnl_graph_op_reord": [185, 186], "dnnl_graph_op_round": [185, 186], "dnnl_graph_op_select": [185, 186], "dnnl_graph_op_sigmoid": [185, 186], "dnnl_graph_op_sigmoid_backward": [185, 186], "dnnl_graph_op_softmax": [185, 186], "softmaxbackward": [185, 281], "dnnl_graph_op_softmax_backward": [185, 186], "dnnl_graph_op_softplu": [185, 186], "softplusbackward": [185, 281], "dnnl_graph_op_softplus_backward": [185, 186], "dnnl_graph_op_sqrt": [185, 186], "sqrtbackward": [185, 281], "dnnl_graph_op_sqrt_backward": [185, 186], "dnnl_graph_op_squar": [185, 186], "squareddiffer": [185, 281], "dnnl_graph_op_squared_differ": [185, 186], "dnnl_graph_op_static_reshap": [185, 186], "dnnl_graph_op_static_transpos": [185, 186], "dnnl_graph_op_subtract": [185, 186], "dnnl_graph_op_tanh": [185, 186], "tanhbackward": [185, 281], "dnnl_graph_op_tanh_backward": [185, 186], "dnnl_graph_op_type_cast": [185, 186], "dnnl_graph_op_wildcard": [185, 186], "lastsymbol": 185, "dnnl_graph_op_last_symbol": [185, 186], "dnnl_graph_partition_policy_fus": [187, 188], "dnnl_graph_partition_policy_debug": [187, 188], "chian": [187, 188], "dnnl_success": [189, 217, 218, 228, 236, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 346, 348, 362, 372], "out_of_memori": [189, 217], "dnnl_out_of_memori": [189, 217, 218], "invalid_argu": [189, 217, 263, 306, 314, 388], "dnnl_invalid_argu": [189, 217, 218, 284, 302, 306, 314, 326, 327, 328], "last_impl_reach": [189, 217], "dnnl_last_impl_reach": [189, 217, 218, 308], "dnnl_runtime_error": [189, 217, 218, 314], "not_requir": [189, 217], "dnnl_not_requir": [189, 217, 218, 308], "invalid_graph": 189, "dnnl_invalid_graph": [189, 218], "invalid_graph_op": 189, "dnnl_invalid_graph_op": [189, 218], "dnnl_invalid_shap": [189, 218], "invalid_data_typ": 189, "dnnl_invalid_data_typ": [189, 218], "legitim": [189, 218], "e8m0": 191, "bca": 193, "cba": 193, "abdc": 193, "acbd": 193, "adbc": 193, "bacd": 193, "bcda": 193, "cdba": 193, "dcab": 193, "abdec": 193, "bcdea": 193, "cdeba": 193, "decab": 193, "abcdef": 193, "abdfc": 193, "acbdef": 193, "abdefc": 193, "defcab": 193, "abcdf": 193, "abcdefg": 193, "abcdegf": 193, "abcdefgh": 193, "abcdefhg": 193, "abcdefghi": 193, "abcdefgih": 193, "abcdefghij": 193, "abcdefghji": 193, "abcdefghijk": 193, "abcdefghikj": 193, "abcdefghijkl": 193, "abcdefghijlk": 193, "cn": [193, 302], "tn": 193, "nt": 193, "nwc": 193, "chwn": [193, 388], "oi": [193, 239, 240, 373, 374], "oiw": 193, "owi": 193, "wio": 193, "iwo": 193, "oihw": [193, 229, 230, 231, 232, 234, 249, 256, 262, 263, 363, 364, 365, 366, 369, 384, 400, 413, 414], "hwio": 193, "ohwi": 193, "ihwo": 193, "iohw": 193, "oidhw": 193, "dhwio": 193, "odhwi": 193, "iodhw": 193, "idhwo": 193, "goiw": 193, "gowi": 193, "wigo": 193, "gohwi": 193, "goihw": [193, 229, 234, 369], "giohw": 193, "goidhw": 193, "giodhw": 193, "godhwi": 193, "dhwigo": 193, "ntc": 193, "ldigo": [193, 224, 243, 244, 258, 260, 269, 276, 354, 378, 379, 404, 409, 425, 434], "ldgoi": 193, "ldio": 193, "ldoi": 193, "ldgo": [193, 224, 243, 244, 258, 260, 269, 276, 354, 378, 379, 404, 409, 425, 434], "ab16b16a": 193, "ab16b32a": 193, "ab16b48a": 193, "ab16b64a": 193, "ab8b16a2b": 193, "ab8b32a2b": 193, "ab8b64a2b": 193, "ab4b16a4b": 193, "ab4b32a4b": 193, "ab4b64a4b": 193, "ab16b16a4b": 193, "ab16b32a4b": 193, "ab16b48a4b": 193, "ab16b64a4b": 193, "ab16b16a2b": 193, "ab16b32a2b": 193, "ab16b48a2b": 193, "ab16b64a2b": 193, "ab4a": 193, "ab8a": 193, "ab32a": 193, "abc16a": 193, "abc16a16b": 193, "abc4a4b": 193, "abc16b": 193, "abc32b": 193, "abc16b16a": 193, "acb16b16a": 193, "abc16b32a": 193, "acb16b32a": 193, "abc16b48a": 193, "acb16b48a": 193, "abc16b64a": 193, "acb16b64a": 193, "abc4a": 193, "abc4b": 193, "abc4b16a4b": 193, "acb4b16a4b": 193, "abc4b32a4b": 193, "acb4b32a4b": 193, "abc4b64a4b": 193, "acb4b64a4b": 193, "abc2b8a4b": 193, "abc16a16b2a": 193, "abc16b16a4b": 193, "abc16b32a4b": 193, "abc16b48a4b": 193, "abc16b64a4b": 193, "abc16b16a2b": 193, "abc16b32a2b": 193, "abc16b48a2b": 193, "abc16b64a2b": 193, "abc4b4a": 193, "abc8a16b2a": 193, "abc8a8b": 193, "abc8a4b": 193, "abc8b": 193, "abc8b16a2b": 193, "acb8b16a2b": 193, "abc8b32a2b": 193, "acb8b32a2b": 193, "abc8b64a2b": 193, "acb8b64a2b": 193, "abc8b8a": 193, "acb8b8a": 193, "abcd8a": 193, "abcd16a": 193, "abcd32a": 193, "abcd16a16b": 193, "abcd32b": 193, "acdb16b16a": 193, "abcd16b32a": 193, "acdb16b32a": 193, "abcd16b48a": 193, "acdb16b48a": 193, "abcd16b64a": 193, "acdb16b64a": 193, "abcd16b16c": 193, "abcd16c16b": 193, "abcd4a": 193, "abcd4b": 193, "abcd4b16a4b": 193, "acdb4b16a4b": 193, "abcd4b32a4b": 193, "acdb4b32a4b": 193, "abcd4b64a4b": 193, "acdb4b64a4b": 193, "abcd2b8a4b": 193, "abcd4b4a": 193, "abcd4a4b": 193, "abcd4c16b4c": 193, "abcd2c8b4c": 193, "abcd16a16b2a": 193, "abcd16b16a4b": 193, "abcd16b32a4b": 193, "abcd16b48a4b": 193, "abcd16b64a4b": 193, "abcd16b16a2b": 193, "abcd16b32a2b": 193, "abcd16b48a2b": 193, "abcd16b64a2b": 193, "abcd16b16c2b": 193, "abcd16c16b4c": 193, "abcd16c16b2c": 193, "abcd4c4b": 193, "abcd4b4c": 193, "abcd8a16b2a": 193, "abcd8a8b": 193, "abcd8a4b": 193, "abcd8a2b": 193, "abcd8b": [193, 413], "abcd8b16a2b": 193, "acdb8b16a2b": 193, "abcd8b32a2b": 193, "acdb8b32a2b": 193, "abcd8b64a2b": 193, "acdb8b64a2b": 193, "abcd8b16c2b": 193, "abcd8b8a": [193, 413], "acdb8b8a": 193, "abcd8b8c": 193, "abcd8b4c": 193, "abcd8c16b2c": 193, "abcd8c8b": 193, "abcde16a": 193, "abcde32a": 193, "abcde16a16b": 193, "abcde16b": 193, "abcde32b": 193, "abcde16b16a": 193, "acdeb16b16a": 193, "abcde16b32a": 193, "acdeb16b32a": 193, "abcde16b48a": 193, "acdeb16b48a": 193, "abcde16b64a": 193, "acdeb16b64a": 193, "abcde16b16c": 193, "abcde16c16b": 193, "abcde2c8b4c": 193, "abcde4a": 193, "abcde4b": 193, "abcde4b4a": 193, "abcde4a4b": 193, "abcde4b4c": 193, "abcde4c16b4c": 193, "abcde16b16c2b": 193, "abcde16c16b4c": 193, "abcde16c16b2c": 193, "abcdef16c16b2c": 193, "abcde4c4b": 193, "abcde8a": 193, "abcde8a8b": 193, "abcde8a4b": 193, "abcde8b": 193, "abcde8b16a2b": 193, "acdeb8b16a2b": 193, "abcde8b32a2b": 193, "acdeb8b32a2b": 193, "abcde8b64a2b": 193, "acdeb8b64a2b": 193, "abcde4b16a4b": 193, "acdeb4b16a4b": 193, "abcde4b32a4b": 193, "acdeb4b32a4b": 193, "abcde4b64a4b": 193, "acdeb4b64a4b": 193, "abcde16b16a4b": 193, "abcde16b32a4b": 193, "abcde16b48a4b": 193, "abcde16b64a4b": 193, "abcde16b16a2b": 193, "abcde16b32a2b": 193, "abcde16b48a2b": 193, "abcde16b64a2b": 193, "abcde2b8a4b": 193, "abcde8b16c2b": 193, "abcde8b8a": 193, "acdeb8b8a": 193, "abcde8b8c": 193, "abcde8b4c": 193, "abcd4a8b8a4b": 193, "abcd2a8b8a2b": 193, "abcde4b8c8b4c": 193, "abcde2b8c8b2c": 193, "abcde8c16b2c": 193, "abcde8c8b": 193, "abcdef16b": 193, "abcdef16b16c": 193, "abcdef16c16b": 193, "abcdef4b": 193, "abcdef2c8b4c": 193, "abcdef4c4b": 193, "abcdef4b4c": 193, "abcdef8b8c": 193, "abcdef8b4c": 193, "abcdef8c16b2c": 193, "abcdef4c16b4c": 193, "abcdef8c8b": 193, "abdc16b": 193, "abdc4b": 193, "abdc8b": 193, "abdc8b2c": 193, "abdc8b4c": 193, "abdec16b": 193, "abdec4b": 193, "abdec8b": 193, "abdec8b2c": 193, "abdec8b4c": 193, "abdefc16b": 193, "acbdef16c16b": 193, "acbdef16b16c": 193, "abdefc4b": 193, "abdefc8b": 193, "abdefc8b2c": 193, "abdefc8b4c": 193, "acb16a": 193, "acb4a": 193, "acb8a": 193, "acb8a2b": 193, "acb8a4b": 193, "acbd16b16c": 193, "acbd16c16b": 193, "acbde16b16c": 193, "acbde16c16b": 193, "acdb16a": [193, 414], "acdb4a": 193, "acdb8a": 193, "acdb8a2b": 193, "acdb8a4b": 193, "acdeb16a": 193, "acdeb4a": 193, "acdeb8a": 193, "acdeb8a2b": 193, "acdeb8a4b": 193, "bac16a16b": 193, "bac16b16a": 193, "bacd16a16b": 193, "bacd16b16a": 193, "abcd32a32b": 193, "bacde16b16a": 193, "bacde16a16b": 193, "abdec32b": 193, "abcdef16a": 193, "abcdef32a": 193, "acdb32a": 193, "abcd2b4c2b": 193, "abcde2b4c2b": 193, "abcdef2b4c2b": 193, "abcd2c4b2c": 193, "abcde2c4b2c": 193, "abcdef2c4b2c": 193, "abcd4b8c2b": 193, "abcde4b8c2b": 193, "abcdef4b8c2b": 193, "abcd4c8b2c": 193, "abcde4c8b2c": 193, "abcdef4c8b2c": 193, "ab32a32b8a4b": 193, "ab32a32b8a2b": 193, "ab8a4b": 193, "ab8a2b": 193, "abdc16d": 193, "abdc32d": 193, "abdc16d4c": 193, "abdc32d4c": 193, "abcd32c": 193, "abdec16": 193, "abdec32": 193, "abdec16e4c": 193, "abdec32e2c": 193, "abdec32e4c": 193, "abdce16c": 193, "abdce32c": 193, "abdce32c2": 193, "abcdef16c16b4c": 193, "abdc16b4c": 193, "abdec16b4c": 193, "acb16a4b": 193, "acdb16a2b": 193, "abdefc16b4c": 193, "acdeb16a4b": 193, "acb32a": 193, "acb32a2b": 193, "acb32a4b": 193, "acb48a": 193, "acb48a2b": 193, "acb48a4b": 193, "acb64a": 193, "acb64a2b": 193, "acb64a4b": 193, "cba2b": 193, "cba4b": 193, "abdc32b": 193, "abdc32b2c": 193, "abdc32b4c": 193, "abdc48b": 193, "abdc48b2c": 193, "abdc48b4c": 193, "abdc64b": 193, "abdc64b2c": 193, "abdc64b4c": 193, "adcb": 193, "adcb2c": 193, "adcb4c": 193, "acdb32a2b": 193, "acdb32a4b": 193, "acdb48a": 193, "acdb48a2b": 193, "acdb48a4b": 193, "acdb64a": 193, "acdb64a2b": 193, "acdb64a4b": 193, "cdba2b": 193, "cdba4b": 193, "abdec32b2c": 193, "abdec32b4c": 193, "abdec48b": 193, "abdec48b2c": 193, "abdec48b4c": 193, "abdec64b": 193, "abdec64b2c": 193, "abdec64b4c": 193, "adecb": 193, "adecb2c": 193, "adecb4c": 193, "acdeb32a": 193, "acdeb32a2b": 193, "acdeb32a4b": 193, "acdeb48a": 193, "acdeb48a2b": 193, "acdeb48a4b": 193, "acdeb64a": 193, "acdeb64a2b": 193, "acdeb64a4b": 193, "cdeba2b": 193, "cdeba4b": 193, "abdefc32b": 193, "abdefc32b2c": 193, "abdefc32b4c": 193, "abdefc48b": 193, "abdefc48b2c": 193, "abdefc48b4c": 193, "abdefc64b": 193, "abdefc64b2c": 193, "abdefc64b4c": 193, "adefcb": 193, "adefcb2c": 193, "adefcb4c": 193, "abc32a32b": 193, "bac8a16b2a": 193, "bacd8a16b2a": 193, "abcde8a16b2a": 193, "acbd8b16c2b": 193, "bacde8a16b2a": 193, "acbde8b16c2b": 193, "abcde32a32b": 193, "abc4a8b8a4b": 193, "abcde4a8b8a4b": 193, "bac4b8a8b4a": 193, "bacd4b8a8b4a": 193, "bacde4b8a8b4a": 193, "abcd4b8c8b4c": 193, "abcdef4b8c8b4c": 193, "abcdef8b16c2b": 193, "acbdef8b16c2b": 193, "abdc16b2c": 193, "abdec16b2c": 193, "abdefc16b2c": 193, "abedc16b": 193, "acb16a2b": 193, "acdb16a4b": 193, "acdeb16a2b": 193, "adcb16a": 193, "acbd4c8b8c4b": 193, "acbde4c8b8c4b": 193, "acbdef4c8b8c4b": 193, "abc32a16b": 193, "abcd16a32b": 193, "abcd32a16b": 193, "abcde32a16b": 193, "ab48a16b": 193, "ab48a32b": 193, "abc40a16b": 193, "abc40a32b": 193, "abc48b16c": 193, "abc48b32c": 193, "abcd40a16b": 193, "abcd40a32b": 193, "ba16a16b": 193, "ba16a32b": 193, "ba16a48b": 193, "ba16a64b": 193, "ba16a16b2a": 193, "ba16a32b2a": 193, "ba16a48b2a": 193, "ba16a64b2a": 193, "ba16a16b4a": 193, "ba16a32b4a": 193, "ba16a48b4a": 193, "ba16a64b4a": 193, "decba16a": 193, "decba8a": 193, "defcba16a": 193, "defcba8a": 193, "acb16b16c": 193, "acb16b32c": 193, "acb16b48c": 193, "acb16b64c": 193, "acb16b16c2b": 193, "acb16b32c2b": 193, "acb16b48c2b": 193, "acb16b64c2b": 193, "acb16b16c4b": 193, "acb16b32c4b": 193, "acb16b48c4b": 193, "acb16b64c4b": 193, "acb24a": 193, "acdb24a": 193, "acdeb24a": 193, "abdc24b": 193, "abdec24b": 193, "abdefc24b": 193, "acb24a2b": 193, "acdb24a2b": 193, "acdeb24a2b": 193, "abdc24b2c": 193, "abdec24b2c": 193, "abdefc24b2c": 193, "acb24a4b": 193, "acdb24a4b": 193, "acdeb24a4b": 193, "abdc24b4c": 193, "abdec24b4c": 193, "abdefc24b4c": 193, "ab8b32a": 193, "abc8b32a": 193, "acb8b32a": 193, "abcd8b32a": 193, "acdb8b32a": 193, "abcde8b32a": 193, "acdeb8b32a": 193, "ab8b24a": 193, "abc8b24a": 193, "acb8b24a": 193, "abcd8b24a": 193, "acdb8b24a": 193, "abcde8b24a": 193, "acdeb8b24a": 193, "ab8b16a": 193, "abc8b16a": 193, "acb8b16a": 193, "abcd8b16a": 193, "acdb8b16a": 193, "abcde8b16a": 193, "acdeb8b16a": 193, "ab8b8a": 193, "format_tag_last": 193, "ncdhw16c": 193, "ncdhw4c": 193, "ncdhw8c": 193, "nchw4c": 193, "ncw16c": 193, "ncw4c": 193, "ncw8c": 193, "ncw16n16c": 193, "nchw16n16c": 193, "ncdhw16n16c": 193, "ncdhw32n32c": 193, "nchw32n32c": 193, "iohw16i16o": 193, "oi16i16o": 193, "oi16i32o": 193, "oi16i48o": 193, "oi16i64o": 193, "oi8i16o2i": 193, "oi8i32o2i": 193, "oi8i64o2i": 193, "oi4i8o4i": 193, "oi4i16o4i": 193, "oi4i24o4i": 193, "oi4i32o4i": 193, "oi4i64o4i": 193, "ohwi32o": 193, "iodhw16i16o": 193, "giohw16i16o": 193, "gohwi32o": 193, "goidhw16g": 193, "iow16o16i": 193, "oiw16i16o": 193, "owi16i16o": 193, "oiw16i32o": 193, "owi16i32o": 193, "oiw16i48o": 193, "owi16i48o": 193, "oiw16i64o": 193, "owi16i64o": 193, "iow16i16o": 193, "giow16i16o": 193, "oiw16o16i": 193, "oiw16o": 193, "oiw4i8o4i": 193, "owi4i8o4i": 193, "oiw4i16o4i": 193, "owi4i16o4i": 193, "oiw4i24o4i": 193, "owi4i24o4i": 193, "oiw4i32o4i": 193, "owi4i32o4i": 193, "oiw4i64o4i": 193, "owi4i64o4i": 193, "oiw2i8o4i": 193, "oiw4i4o": 193, "oiw4o4i": 193, "oiw4o": 193, "oiw8i16o2i": 193, "owi8i16o2i": 193, "oiw8i32o2i": 193, "owi8i32o2i": 193, "oiw8i64o2i": 193, "owi8i64o2i": 193, "oiw8i8o": 193, "owi8i8o": 193, "oiw8o16i2o": 193, "oiw8o8i": 193, "oiw8o4i": 193, "oiw16i16o4i": 193, "oiw16i32o4i": 193, "oiw16i48o4i": 193, "oiw16i64o4i": 193, "oiw16i16o2i": 193, "oiw16i32o2i": 193, "oiw16i48o2i": 193, "oiw16i64o2i": 193, "oiw16o16i2o": 193, "owi16o": 193, "owi16o2i": 193, "iwo16i": 193, "iwo16i2o": 193, "iwo16i4o": 193, "owi4o": 193, "owi8o": 193, "owi8o2i": 193, "owi8o4i": 193, "iohw16o16i": 193, "ohwi16o": 193, "ohwi16o2i": 193, "ihwo16i": 193, "ihwo16i2o": 193, "ihwo16i4o": 193, "ohwi4o": 193, "ohwi8o": 193, "ohwi8o2i": 193, "ohwi8o4i": 193, "oihw16i16o": 193, "ohwi16i16o": 193, "oihw16i32o": 193, "ohwi16i32o": 193, "oihw16i48o": 193, "ohwi16i48o": 193, "oihw16i64o": 193, "ohwi16i64o": 193, "oihw16o16i": 193, "oihw16o": 193, "oihw4i8o4i": 193, "ohwi4i8o4i": 193, "oihw4i16o4i": 193, "ohwi4i16o4i": 193, "oihw4i24o4i": 193, "ohwi4i24o4i": 193, "oihw4i32o4i": 193, "ohwi4i32o4i": 193, "oihw4i64o4i": 193, "ohwi4i64o4i": 193, "oihw4i4o": 193, "oihw4o4i": 193, "oihw4o": 193, "oihw8i16o2i": 193, "ohwi8i16o2i": 193, "oihw8i32o2i": 193, "ohwi8i32o2i": 193, "oihw8i64o2i": 193, "ohwi8i64o2i": 193, "oihw8i8o": 193, "ohwi8i8o": 193, "oihw8o16i2o": 193, "oihw8o8i": 193, "oihw8o4i": 193, "oihw2i8o4i": 193, "iodhw16o16i": 193, "odhwi16o": 193, "odhwi16o2i": 193, "idhwo16i": 193, "idhwo16i2o": 193, "idhwo16i4o": 193, "odhwi4o": 193, "odhwi8o": 193, "odhwi8o2i": 193, "odhwi8o4i": 193, "oidhw16i16o": 193, "odhwi16i16o": 193, "oidhw16i32o": 193, "odhwi16i32o": 193, "oidhw16i48o": 193, "odhwi16i48o": 193, "oidhw16i64o": 193, "odhwi16i64o": 193, "oidhw16o16i": 193, "oidhw16o16i2o": 193, "oidhw16o": 193, "oidhw4i4o": 193, "oidhw4o4i": 193, "oidhw4o": 193, "oidhw8i16o2i": 193, "odhwi8i16o2i": 193, "oidhw8i32o2i": 193, "odhwi8i32o2i": 193, "oidhw8i64o2i": 193, "odhwi8i64o2i": 193, "oidhw4i8o4i": 193, "odhwi4i8o4i": 193, "oidhw4i16o4i": 193, "odhwi4i16o4i": 193, "oidhw16i16o4i": 193, "oidhw16i32o4i": 193, "oidhw16i48o4i": 193, "oidhw16i64o4i": 193, "oidhw16i16o2i": 193, "oidhw16i32o2i": 193, "oidhw16i48o2i": 193, "oidhw16i64o2i": 193, "oidhw4i24o4i": 193, "odhwi4i24o4i": 193, "oidhw4i32o4i": 193, "odhwi4i32o4i": 193, "oidhw4i64o4i": 193, "odhwi4i64o4i": 193, "oidhw2i8o4i": 193, "oidhw8i8o": 193, "odhwi8i8o": 193, "oidhw8o8i": 193, "oidhw8o4i": 193, "giow16o16i": 193, "goiw16i16o": 193, "goiw16o16i": 193, "goiw16o": 193, "goiw4i16o4i": 193, "goiw2i8o4i": 193, "goiw4i4o": 193, "goiw4o4i": 193, "goiw4o": 193, "goiw8i16o2i": 193, "goiw8i8o": 193, "goiw8o16i2o": 193, "goiw8o8i": 193, "goiw8o4i": 193, "goiw16i16o4i": 193, "goiw16i16o2i": 193, "goiw16o16i2o": 193, "gowi16o": 193, "gowi16o2i": 193, "giwo16i": 193, "giwo16i2o": 193, "giwo16i4o": 193, "gowi4o": 193, "gowi8o": 193, "gowi8o2i": 193, "gowi8o4i": 193, "goiw8g": 193, "goiw16g": 193, "giohw16o16i": 193, "gohwi16o": 193, "gohwi16o2i": 193, "gihwo16i": 193, "gihwo16i2o": 193, "gihwo16i4o": 193, "gohwi4o": 193, "gohwi8o": 193, "gohwi8o2i": 193, "gohwi8o4i": 193, "goihw16g": 193, "goihw16i16o": 193, "goihw16o16i": 193, "goihw16o": 193, "goihw4i16o4i": 193, "goihw2i8o4i": 193, "goihw4i4o": 193, "goihw4o4i": 193, "goihw4o": 193, "goihw8g": 193, "goihw8i16o2i": 193, "goihw8i8o": 193, "goihw8o16i2o": 193, "oiw4o8i8o4i": 193, "oidhw4o8i8o4i": 193, "oihw4o8i8o4i": 193, "oihw2o8i8o2i": 193, "goiw4o8i8o4i": 193, "goidhw4o8i8o4i": 193, "goihw4o8i8o4i": 193, "goihw2o8i8o2i": 193, "oihw16i16o4i": 193, "oihw16i32o4i": 193, "oihw16i48o4i": 193, "oihw16i64o4i": 193, "oihw16i16o2i": 193, "oihw16i32o2i": 193, "oihw16i48o2i": 193, "oihw16i64o2i": 193, "oihw16o16i2o": 193, "goihw16i16o4i": 193, "goihw16i16o2i": 193, "goihw16o16i2o": 193, "goihw8o8i": 193, "goihw8o4i": 193, "giodhw16i16o": 193, "giodhw16o16i": 193, "godhwi16o": 193, "godhwi16o2i": 193, "gidhwo16i": 193, "gidhwo16i2o": 193, "gidhwo16i4o": 193, "godhwi4o": 193, "godhwi8o": 193, "godhwi8o2i": 193, "godhwi8o4i": 193, "goidhw16i16o": 193, "goidhw16o16i": 193, "goidhw16o16i2o": 193, "goidhw16o": 193, "goidhw4i4o": 193, "goidhw4o4i": 193, "goidhw4o": 193, "goidhw8i16o2i": 193, "goidhw4i16o4i": 193, "goidhw16i16o4i": 193, "goidhw16i16o2i": 193, "goidhw2i8o4i": 193, "goidhw8i8o": 193, "goidhw8o8i": 193, "goidhw8o4i": 193, "goiw2i4o2i": 193, "goihw2i4o2i": 193, "goidhw2i4o2i": 193, "goiw2o4i2o": 193, "goihw2o4i2o": 193, "goidhw2o4i2o": 193, "goiw4i8o2i": 193, "goihw4i8o2i": 193, "goidhw4i8o2i": 193, "goiw4o8i2o": 193, "goihw4o8i2o": 193, "goidhw4o8i2o": 193, "ldoi16o": 193, "ldoi32o": 193, "ldoi16o4i": 193, "ldoi32o4i": 193, "ldgoi16o": 193, "ldgoi16o4i": 193, "ldgoi32o": 193, "ldgoi32o2i": 193, "ldgoi32o4i": 193, "owi16o4i": 193, "ohwi16o4i": 193, "gowi16o4i": 193, "gohwi16o4i": 193, "odhwi16o4i": 193, "godhwi16o4i": 193, "owi32o": 193, "owi32o2i": 193, "owi32o4i": 193, "owi48o": 193, "owi48o2i": 193, "owi48o4i": 193, "owi64o": 193, "owi64o2i": 193, "owi64o4i": 193, "iwo32i": 193, "iwo32i2o": 193, "iwo32i4o": 193, "iwo48i": 193, "iwo48i2o": 193, "iwo48i4o": 193, "iwo64i": 193, "iwo64i2o": 193, "iwo64i4o": 193, "wio2i": 193, "wio4i": 193, "gowi32o": 193, "gowi32o2i": 193, "gowi32o4i": 193, "gowi48o": 193, "gowi48o2i": 193, "gowi48o4i": 193, "gowi64o": 193, "gowi64o2i": 193, "gowi64o4i": 193, "giwo32i": 193, "giwo32i2o": 193, "giwo32i4o": 193, "giwo48i": 193, "giwo48i2o": 193, "giwo48i4o": 193, "giwo64i": 193, "giwo64i2o": 193, "giwo64i4o": 193, "gwio": 193, "gwio2i": 193, "gwio4i": 193, "ohwi32o2i": 193, "ohwi32o4i": 193, "ohwi48o": 193, "ohwi48o2i": 193, "ohwi48o4i": 193, "ohwi64o": 193, "ohwi64o2i": 193, "ohwi64o4i": 193, "ihwo32i": 193, "ihwo32i2o": 193, "ihwo32i4o": 193, "ihwo48i": 193, "ihwo48i2o": 193, "ihwo48i4o": 193, "ihwo64i": 193, "ihwo64i2o": 193, "ihwo64i4o": 193, "hwio2i": 193, "hwio4i": 193, "gohwi32o2i": 193, "gohwi32o4i": 193, "gohwi48o": 193, "gohwi48o2i": 193, "gohwi48o4i": 193, "gohwi64o": 193, "gohwi64o2i": 193, "gohwi64o4i": 193, "gihwo32i": 193, "gihwo32i2o": 193, "gihwo32i4o": 193, "gihwo48i": 193, "gihwo48i2o": 193, "gihwo48i4o": 193, "gihwo64i": 193, "gihwo64i2o": 193, "gihwo64i4o": 193, "ghwio": 193, "ghwio2i": 193, "ghwio4i": 193, "odhwi32o": 193, "odhwi32o2i": 193, "odhwi32o4i": 193, "odhwi48o": 193, "odhwi48o2i": 193, "odhwi48o4i": 193, "odhwi64o": 193, "odhwi64o2i": 193, "odhwi64o4i": 193, "idhwo32i": 193, "idhwo32i2o": 193, "idhwo32i4o": 193, "idhwo48i": 193, "idhwo48i2o": 193, "idhwo48i4o": 193, "idhwo64i": 193, "idhwo64i2o": 193, "idhwo64i4o": 193, "dhwio2i": 193, "dhwio4i": 193, "godhwi32o": 193, "godhwi32o2i": 193, "godhwi32o4i": 193, "godhwi48o": 193, "godhwi48o2i": 193, "godhwi48o4i": 193, "godhwi64o": 193, "godhwi64o2i": 193, "godhwi64o4i": 193, "gidhwo32i": 193, "gidhwo32i2o": 193, "gidhwo32i4o": 193, "gidhwo48i": 193, "gidhwo48i2o": 193, "gidhwo48i4o": 193, "gidhwo64i": 193, "gidhwo64i2o": 193, "gidhwo64i4o": 193, "gdhwio": 193, "gdhwio2i": 193, "gdhwio4i": 193, "ldio32i": 193, "ldgio16i": 193, "ldgio32i": 193, "ldgio32i2o": 193, "ncdhw32c": 193, "nchw32c": 193, "ncw32c": 193, "ncw32n16c": 193, "nchw32n16c": 193, "ncdhw32n16c": 193, "ncw32n32c": 193, "oi16i16o4i": 193, "iow8o16i2o": 193, "iohw8o16i2o": 193, "owhi16o": 193, "oidhw8o16i2o": 193, "iodhw8o16i2o": 193, "goiw4g": 193, "giow8o16i2o": 193, "goiw32g": 193, "goihw4g": 193, "giohw8o16i2o": 193, "goihw32g": 193, "gowhi16o": 193, "iow4i8o8i4o": 193, "iohw4i8o8i4o": 193, "iodhw4i8o8i4o": 193, "giow4i8o8i4o": 193, "giohw4i8o8i4o": 193, "giodhw4i8o8i4o": 193, "goidhw8o16i2o": 193, "giodhw8o16i2o": 193, "goidhw32g": 193, "oi16i32o4i": 193, "oi16i48o4i": 193, "oi16i64o4i": 193, "oi16i16o2i": 193, "oi16i32o2i": 193, "oi16i48o2i": 193, "oi16i64o2i": 193, "abdec16c16b4c": 193, "acb16b16a2b": 193, "abdc16c16b2c": 193, "acb16b16a4b": 193, "abdc16c16b4c": 193, "acdb16b16a2b": 193, "abdefc16c16b4c": 193, "acdeb16b16a4b": 193, "acb16b32a2b": 193, "acb16b32a4b": 193, "acb16b48a2b": 193, "acb16b48a4b": 193, "acb16b64a2b": 193, "acb16b64a4b": 193, "abdc16c32b2c": 193, "abdc16c32b4c": 193, "abdc16c48b2c": 193, "abdc16c48b4c": 193, "abdc16c64b2c": 193, "abdc16c64b4c": 193, "acdb16b32a2b": 193, "acdb16b32a4b": 193, "acdb16b48a2b": 193, "acdb16b48a4b": 193, "acdb16b64a2b": 193, "acdb16b64a4b": 193, "abdec16c32b2c": 193, "abdec16c32b4c": 193, "abdec16c48b2c": 193, "abdec16c48b4c": 193, "abdec16c64b2c": 193, "abdec16c64b4c": 193, "acdeb16b32a2b": 193, "acdeb16b32a4b": 193, "acdeb16b48a2b": 193, "acdeb16b48a4b": 193, "acdeb16b64a2b": 193, "acdeb16b64a4b": 193, "abdefc16c32b2c": 193, "abdefc16c32b4c": 193, "abdefc16c48b2c": 193, "abdefc16c48b4c": 193, "abdefc16c64b2c": 193, "abdefc16c64b4c": 193, "owi16i16o2i": 193, "gowi16i16o2i": 193, "ohwi16i16o2i": 193, "gohwi16i16o2i": 193, "odhwi16i16o2i": 193, "godhwi16i16o2i": 193, "owi16i16o4i": 193, "gowi16i16o4i": 193, "ohwi16i16o4i": 193, "gohwi16i16o4i": 193, "odhwi16i16o4i": 193, "godhwi16i16o4i": 193, "owi16i32o2i": 193, "owi16i32o4i": 193, "owi16i48o2i": 193, "owi16i48o4i": 193, "owi16i64o2i": 193, "owi16i64o4i": 193, "gowi16i32o2i": 193, "gowi16i32o4i": 193, "gowi16i48o2i": 193, "gowi16i48o4i": 193, "gowi16i64o2i": 193, "gowi16i64o4i": 193, "ohwi16i32o2i": 193, "ohwi16i32o4i": 193, "ohwi16i48o2i": 193, "ohwi16i48o4i": 193, "ohwi16i64o2i": 193, "ohwi16i64o4i": 193, "gohwi16i32o2i": 193, "gohwi16i32o4i": 193, "gohwi16i48o2i": 193, "gohwi16i48o4i": 193, "gohwi16i64o2i": 193, "gohwi16i64o4i": 193, "odhwi16i32o2i": 193, "odhwi16i32o4i": 193, "odhwi16i48o2i": 193, "odhwi16i48o4i": 193, "odhwi16i64o2i": 193, "odhwi16i64o4i": 193, "idhwo16o32i2o": 193, "idhwo16o32i4o": 193, "idhwo16o48i2o": 193, "idhwo16o48i4o": 193, "idhwo16o64i2o": 193, "idhwo16o64i4o": 193, "godhwi16i32o2i": 193, "godhwi16i32o4i": 193, "godhwi16i48o2i": 193, "godhwi16i48o4i": 193, "godhwi16i64o2i": 193, "godhwi16i64o4i": 193, "gidhwo16o32i2o": 193, "gidhwo16o32i4o": 193, "gidhwo16o48i2o": 193, "gidhwo16o48i4o": 193, "gidhwo16o64i2o": 193, "gidhwo16o64i4o": 193, "iwo16o16i2o": 193, "iwo16o16i4o": 193, "ihwo16o16i2o": 193, "ihwo16o16i4o": 193, "idhwo16o16i2o": 193, "idhwo16o16i4o": 193, "giwo16o16i2o": 193, "giwo16o16i4o": 193, "gihwo16o16i2o": 193, "gihwo16o16i4o": 193, "gidhwo16o16i2o": 193, "gidhwo16o16i4o": 193, "iwo16o32i2o": 193, "iwo16o32i4o": 193, "iwo16o48i2o": 193, "iwo16o48i4o": 193, "iwo16o64i2o": 193, "iwo16o64i4o": 193, "giwo16o32i2o": 193, "giwo16o32i4o": 193, "giwo16o48i2o": 193, "giwo16o48i4o": 193, "giwo16o64i2o": 193, "giwo16o64i4o": 193, "ihwo16o32i2o": 193, "ihwo16o32i4o": 193, "ihwo16o48i2o": 193, "ihwo16o48i4o": 193, "ihwo16o64i2o": 193, "ihwo16o64i4o": 193, "gihwo16o32i2o": 193, "gihwo16o32i4o": 193, "gihwo16o48i2o": 193, "gihwo16o48i4o": 193, "gihwo16o64i2o": 193, "gihwo16o64i4o": 193, "abdec16c16b2c": 193, "abdefc16c16b2c": 193, "acdb16b16a4b": 193, "acdeb16b16a2b": 193, "hwiog16g": 193, "hwiog8g": 193, "dhwiog16g": 193, "dhwiog8g": 193, "abc4a2b": 193, "abc8a2b": 193, "abcd4a2b": 193, "abcde4a2b": 193, "abcde8a2b": 193, "abcd4a8b8a2b": 193, "ncdhw40n32c": 193, "nchw40n32c": 193, "ncw40n32c": 193, "oidhw4o8i8o2i": 193, "oihw4o8i8o2i": 193, "oiw4o8i8o2i": 193, "goidhw4o8i8o2i": 193, "goihw4o8i8o2i": 193, "goiw4o8i8o2i": 193, "iodhw4i8o8i2o": 193, "iohw4i8o8i2o": 193, "iow4i8o8i2o": 193, "giodhw4i8o8i2o": 193, "giohw4i8o8i2o": 193, "giow4i8o8i2o": 193, "abcd8b2c": 193, "abcde40a16b": 193, "abcde40a32b": 193, "abcde8b2c": 193, "abcde4a8b8a2b": 193, "abc4a8b8a2b": 193, "abcdef4b8c8b2c": 193, "abcde4b8c8b2c": 193, "abcd4b8c8b2c": 193, "bacde4b8a8b2a": 193, "bacd4b8a8b2a": 193, "bac4b8a8b2a": 193, "acbdef4c8b8c2b": 193, "acbde4c8b8c2b": 193, "acbd4c8b8c2b": 193, "abcdef8b2c": 193, "ab32a16b": 193, "ab32a32b": 193, "ba4b8a8b2a": 193, "ba4b8a8b4a": 193, "abc32b16c": 193, "abc32b32c": 193, "acb4c8b8c2b": 193, "acb4c8b8c4b": 193, "abc2b8a16b4a": 193, "abcd2b8a16b4a": 193, "abcde2b8a16b4a": 193, "abc2a8b16a4b": 193, "abc2a8b16a2b": 193, "abc2b32a8b": 193, "abcd2a8b16a4b": 193, "abcd2a8b16a2b": 193, "acbd2c8b16c2b": 193, "abcd2b32a8b": 193, "abcd2c8b16c2b": 193, "abcde2a8b16a4b": 193, "abcde2a8b16a2b": 193, "acbde2c8b16c2b": 193, "abcde2b32a8b": 193, "abc2b8c16b2c": 193, "abcd2b8c16b2c": 193, "abcde2b8c16b2c": 193, "abcdef2b8c16b2c": 193, "bacde2b8a16b4a": 193, "bacd2b8a16b4a": 193, "bac2b8a16b4a": 193, "bacde2b8a16b2a": 193, "bacd2b8a16b2a": 193, "bac2b8a16b2a": 193, "abcde2c8b16c2b": 193, "abcdef2c8b16c2b": 193, "acbdef2c8b16c2b": 193, "abcd2b8c16b4c": 193, "abcde2b8c16b4c": 193, "ncdhw40n16c": 193, "ncw40n16c": 193, "nchw40n16c": 193, "ncw2c32n8c": 193, "nchw2c32n8c": 193, "ncdhw2c32n8c": 193, "oiw2i8o16i4o": 193, "oihw2i8o16i4o": 193, "oidhw2i8o16i4o": 193, "oiw2o8i16o4i": 193, "oiw2o8i16o2i": 193, "iow2i8o16i4o": 193, "iow2i8o16i2o": 193, "oihw2o8i16o4i": 193, "oihw2o8i16o2i": 193, "iohw2i8o16i4o": 193, "iohw2i8o16i2o": 193, "oidhw2o8i16o4i": 193, "oidhw2o8i16o2i": 193, "iodhw2i8o16i4o": 193, "iodhw2i8o16i2o": 193, "goiw2o8i16o2i": 193, "giow2i8o16i2o": 193, "giohw2i8o16i2o": 193, "giodhw2i8o16i2o": 193, "goihw2o8i16o2i": 193, "goidhw2o8i16o2i": 193, "goiw2o8i16o4i": 193, "goihw2o8i16o4i": 193, "ba4b8a16b2a": 193, "ba4b8a16b4a": 193, "acb4c8b16c2b": 193, "acb4c8b16c4b": 193, "acb16c2b": 193, "acb16c4b": 193, "ba16b2a": 193, "ba16b4a": 193, "ba4b4a": 193, "ba8b4a": 193, "abc16b16c": 193, "abc16b32c": 193, "ab16a16b": 193, "ab16a32b": 193, "abcde16a16b2a": 193, "abcdef16b16c2b": 193, "acedb16a": 193, "abdfec16b": 193, "odwhi16o": 193, "godwhi16o": 193, "abdec64e2c": 193, "abdec64e4c": 193, "ldgoi64o2i": 193, "ldgoi64o4i": 193, "abcd4c": 193, "abcde4c": 193, "abcdef4c": 193, "abcde32c": 193, "abcdef32c": 193, "acdefb16b32c2b": 193, "acdefb16b32c4b": 193, "acdefb16b48c2b": 193, "acdefb16b48c4b": 193, "acdefb16b64c2b": 193, "acdefb16b64c4b": 193, "bcdea16a32b2a": 193, "bcdea16a32b4a": 193, "bcdea16a48b2a": 193, "bcdea16a48b4a": 193, "bcdea16a64b2a": 193, "bcdea16a64b4a": 193, "acdefb32c": 193, "acdefb32c2b": 193, "acdefb32c4b": 193, "acdefb48c": 193, "acdefb48c2b": 193, "acdefb48c4b": 193, "acdefb64c": 193, "acdefb64c2b": 193, "acdefb64c4b": 193, "bcdea32b": 193, "bcdea32b2a": 193, "bcdea32b4a": 193, "bcdea48b": 193, "bcdea48b2a": 193, "bcdea48b4a": 193, "bcdea64b": 193, "bcdea64b2a": 193, "bcdea64b4a": 193, "bca32b": 193, "bca32b2a": 193, "bca32b4a": 193, "bca48b": 193, "bca48b2a": 193, "bca48b4a": 193, "bca64b": 193, "bca64b2a": 193, "bca64b4a": 193, "acdb32c": 193, "acdb32c2b": 193, "acdb32c4b": 193, "acdb48c": 193, "acdb48c2b": 193, "acdb48c4b": 193, "acdb64c": 193, "acdb64c2b": 193, "acdb64c4b": 193, "bca16a16b2a": 193, "bca16a16b4a": 193, "bcda16a16b2a": 193, "bcda16a16b4a": 193, "bcdea16a16b2a": 193, "bcdea16a16b4a": 193, "acdb16b16c2b": 193, "acdb16b16c4b": 193, "acdeb16b16c2b": 193, "acdeb16b16c4b": 193, "acdefb16b16c2b": 193, "acdefb16b16c4b": 193, "bca16a32b2a": 193, "bca16a32b4a": 193, "bca16a48b2a": 193, "bca16a48b4a": 193, "bca16a64b2a": 193, "bca16a64b4a": 193, "acdb16b32c2b": 193, "acdb16b32c4b": 193, "acdb16b48c2b": 193, "acdb16b48c4b": 193, "acdb16b64c2b": 193, "acdb16b64c4b": 193, "bcda16a32b2a": 193, "bcda16a32b4a": 193, "bcda16a48b2a": 193, "bcda16a48b4a": 193, "bcda16a64b2a": 193, "bcda16a64b4a": 193, "acdeb16b32c2b": 193, "acdeb16b32c4b": 193, "acdeb16b48c2b": 193, "acdeb16b48c4b": 193, "acdeb16b64c2b": 193, "acdeb16b64c4b": 193, "bca16b": 193, "bca16b2a": 193, "bca16b4a": 193, "bcda16b": 193, "bcda16b2a": 193, "bcda16b4a": 193, "bcdea16b": 193, "bcdea16b2a": 193, "bcdea16b4a": 193, "acdb16c": 193, "acdb16c2b": 193, "acdb16c4b": 193, "acdeb16c": 193, "acdeb16c2b": 193, "acdeb16c4b": 193, "acdefb16c": 193, "acdefb16c2b": 193, "acdefb16c4b": 193, "bcda32b": 193, "bcda32b2a": 193, "bcda32b4a": 193, "bcda48b": 193, "bcda48b2a": 193, "bcda48b4a": 193, "bcda64b": 193, "bcda64b2a": 193, "bcda64b4a": 193, "acdeb32c": 193, "acdeb32c2b": 193, "acdeb32c4b": 193, "acdeb48c": 193, "acdeb48c2b": 193, "acdeb48c4b": 193, "acdeb64c": 193, "acdeb64c2b": 193, "acdeb64c4b": 193, "nchw16n32c": 193, "goiw4i": 193, "goiw32i": 193, "goihw4i": 193, "goihw32i": 193, "goidhw4i": 193, "goidhw32i": 193, "cab": 193, "cdab": 193, "cdeab": 193, "woi": 193, "hwoi": 193, "dhwoi": 193, "owi24o": 193, "ohwi24o": 193, "odhwi24o": 193, "gowi24o": 193, "gohwi24o": 193, "godhwi24o": 193, "owi24o2i": 193, "ohwi24o2i": 193, "odhwi24o2i": 193, "gowi24o2i": 193, "gohwi24o2i": 193, "godhwi24o2i": 193, "owi24o4i": 193, "ohwi24o4i": 193, "odhwi24o4i": 193, "gowi24o4i": 193, "gohwi24o4i": 193, "godhwi24o4i": 193, "oi8i32o": 193, "oiw8i32o": 193, "owi8i32o": 193, "oihw8i32o": 193, "ohwi8i32o": 193, "oidhw8i32o": 193, "odhwi8i32o": 193, "oi8i24o": 193, "oiw8i24o": 193, "owi8i24o": 193, "oihw8i24o": 193, "ohwi8i24o": 193, "oidhw8i24o": 193, "odhwi8i24o": 193, "oi8i16o": 193, "oiw8i16o": 193, "owi8i16o": 193, "oihw8i16o": 193, "ohwi8i16o": 193, "oidhw8i16o": 193, "odhwi8i16o": 193, "oi8i8o": 193, "ab4b8a4b": 193, "ab4b24a4b": 193, "abc4b8a4b": 193, "acb4b8a4b": 193, "abc4b24a4b": 193, "acb4b24a4b": 193, "abcd4b8a4b": 193, "acdb4b8a4b": 193, "abcd4b24a4b": 193, "acdb4b24a4b": 193, "abcde4b8a4b": 193, "acdeb4b8a4b": 193, "abcde4b24a4b": 193, "acdeb4b24a4b": 193, "bca8b": 193, "bca8b2a": 193, "bcda8b": 193, "bcda8b2a": 193, "bcdea8b": 193, "bcdea8b2a": 193, "acdb8c": 193, "acdb8c2b": 193, "acdeb8c": 193, "acdeb8c2b": 193, "acdefb8c": 193, "acdefb8c2b": 193, "bca24b": 193, "bca24b2a": 193, "bcda24b": 193, "bcda24b2a": 193, "bcdea24b": 193, "bcdea24b2a": 193, "acdb24c": 193, "acdb24c2b": 193, "acdeb24c": 193, "acdeb24c2b": 193, "acdefb24c": 193, "acdefb24c2b": 193, "iwo8i": 193, "iwo8i2o": 193, "iwo24i": 193, "iwo24i2o": 193, "ihwo8i": 193, "ihwo8i2o": 193, "ihwo24i": 193, "ihwo24i2o": 193, "idhwo8i": 193, "idhwo8i2o": 193, "idhwo24i": 193, "idhwo24i2o": 193, "giwo8i": 193, "giwo8i2o": 193, "giwo24i": 193, "giwo24i2o": 193, "gihwo8i": 193, "gihwo8i2o": 193, "gihwo24i": 193, "gihwo24i2o": 193, "gidhwo8i": 193, "gidhwo8i2o": 193, "gidhwo24i": 193, "gidhwo24i2o": 193, "ab8b24a2b": 193, "abc8b24a2b": 193, "acb8b24a2b": 193, "abcd8b24a2b": 193, "acdb8b24a2b": 193, "abcde8b24a2b": 193, "acdeb8b24a2b": 193, "ab8b8a2b": 193, "abc8b8a2b": 193, "acb8b8a2b": 193, "abcd8b8a2b": 193, "acdb8b8a2b": 193, "abcde8b8a2b": 193, "acdeb8b8a2b": 193, "oi8i8o2i": 193, "oi8i24o2i": 193, "oiw8i8o2i": 193, "owi8i8o2i": 193, "oiw8i24o2i": 193, "owi8i24o2i": 193, "oihw8i8o2i": 193, "ohwi8i8o2i": 193, "oihw8i24o2i": 193, "ohwi8i24o2i": 193, "oidhw8i8o2i": 193, "odhwi8i8o2i": 193, "oidhw8i24o2i": 193, "odhwi8i24o2i": 193, "bca8b4a": 193, "bcda8b4a": 193, "bcdea8b4a": 193, "acdb8c4b": 193, "acdeb8c4b": 193, "acdefb8c4b": 193, "bca24b4a": 193, "bcda24b4a": 193, "bcdea24b4a": 193, "acdb24c4b": 193, "acdeb24c4b": 193, "acdefb24c4b": 193, "abc16a4b": 193, "abcd16a4b": 193, "abcde16a4b": 193, "iwo8i4o": 193, "iwo24i4o": 193, "ihwo8i4o": 193, "ihwo24i4o": 193, "idhwo8i4o": 193, "idhwo24i4o": 193, "giwo8i4o": 193, "giwo24i4o": 193, "gihwo8i4o": 193, "gihwo24i4o": 193, "gidhwo8i4o": 193, "gidhwo24i4o": 193, "ba2a24b": 193, "acb2b24c": 193, "ba2a8b": 193, "acb2b8c": 193, "ba8a24b": 193, "acb8b24c": 193, "ba8a16b": 193, "acb8b16c": 193, "ba8a8b": 193, "acb8b8c": 193, "bcad": 193, "cabd": 193, "dabc": 193, "dnnl_sparse_encoding_undef": [194, 216], "csr": [194, 216, 240, 302, 374, 518], "dnnl_csr": [194, 216], "dnnl_pack": [194, 216], "coo": [194, 216, 239, 302, 373, 518], "dnnl_coo": [194, 216], "unstructur": [194, 216], "sparsiti": [194, 216], "use_global_stat": 195, "use_scal": [195, 225, 254, 257, 356, 396, 402], "use_shift": [195, 225, 254, 257, 356, 396, 402], "fuse_norm_relu": [195, 225, 356], "fuse_norm_add_relu": 195, "0x0u": 196, "0x1u": [196, 220], "0x2u": [196, 220], "0x4u": 196, "0x8u": 196, "0x10u": 196, "wrt": [196, 241, 375], "dnnl_ocl_interop_usm": [197, 198, 303, 346], "dnnl_ocl_interop_buff": [197, 198, 303, 346], "dnnl_ocl_typ": 198, "dnnl_pack_type_undef": [199, 223], "dnnl_pack_type_no_tran": [199, 223, 322], "dnnl_pack_type_tran": [199, 223, 322], "dnnl_pack_type_pack32": [199, 223], "guard": [199, 223], "dnnl_undefined_primit": [200, 201, 284], "dnnl_reorder": [200, 201], "dnnl_shuffl": [200, 201], "dnnl_concat": [200, 201], "dnnl_sum": [200, 201, 284], "dnnl_convolut": [200, 201, 284, 524], "dnnl_deconvolut": [200, 201], "dnnl_eltwis": [200, 201, 284], "dnnl_lrn": [200, 201], "dnnl_batch_norm": [200, 201], "dnnl_inner_product": [200, 201], "dnnl_rnn": [200, 201], "dnnl_binari": [200, 201, 284, 524], "dnnl_matmul": [200, 201], "dnnl_resampl": [200, 201], "dnnl_pool": [200, 201], "dnnl_reduct": [200, 201], "dnnl_prelu": [200, 201], "dnnl_softmax": [200, 201], "dnnl_layer_norm": [200, 201], "dnnl_group_norm": [200, 201], "summat": [200, 208, 209, 555], "dnnl_gemm": 201, "dnnl_primitive_kind_max": 201, "dnnl_profiling_data_kind_undef": [202, 203], "dnnl_profiling_data_kind_tim": [202, 203], "nanosecond": [202, 203], "dnnl_prop_kind_undef": [204, 205], "dnnl_forward": [204, 205, 228, 236, 247, 362, 372, 382], "dnnl_backward_weight": [204, 205], "backward_bia": 204, "dnnl_backward_bia": [204, 205], "160": 205, "192": [205, 229, 414], "193": 205, "dnnl_query_undef": [206, 207], "dnnl_query_engin": [206, 207], "primitive_kind": 206, "dnnl_query_primitive_kind": [206, 207], "num_of_inputs_s32": 206, "dnnl_query_num_of_inputs_s32": [206, 207, 308], "num_of_outputs_s32": 206, "dnnl_query_num_of_outputs_s32": [206, 207, 308], "time_estimate_f64": 206, "dnnl_query_time_estimate_f64": [206, 207], "dnnl_query_memory_consumption_s64": [206, 207], "scratchpad_engin": [206, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "dnnl_query_scratchpad_engin": [206, 207], "reorder_src_engin": 206, "dnnl_query_reorder_src_engin": [206, 207], "reorder_dst_engin": 206, "dnnl_query_reorder_dst_engin": [206, 207], "impl_info_str": [206, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "dnnl_query_impl_info_str": [206, 207, 308], "dnnl_query_prop_kind": [206, 207], "cache_blob_id_size_s64": 206, "dnnl_query_cache_blob_id_size_s64": [206, 207], "cache_blob_id": [206, 278, 303, 346], "dnnl_query_cache_blob_id": [206, 207], "dnnl_query_dil": [206, 207], "dnnl_query_padding_l": [206, 207], "dnnl_query_padding_r": [206, 207], "epsilon_f32": 206, "dnnl_query_epsilon_f32": [206, 207], "dnnl_query_flag": [206, 207], "alg_kind": [206, 278, 284, 286, 290, 292, 293, 300, 304, 310, 312, 316], "dnnl_query_alg_kind": [206, 207], "alpha_f32": 206, "dnnl_query_alpha_f32": [206, 207], "beta_f32": 206, "dnnl_query_beta_f32": [206, 207], "axis_s32": 206, "dnnl_query_axis_s32": [206, 207], "local_size_s64": 206, "dnnl_query_local_size_s64": [206, 207], "k_f32": 206, "dnnl_query_k_f32": [206, 207], "p_f32": 206, "dnnl_query_p_f32": [206, 207], "dnnl_query_factor": [206, 207], "cell_kind": [206, 544], "dnnl_query_cell_kind": [206, 207], "dnnl_query_direct": [206, 207], "activation_kind": 206, "dnnl_query_activation_kind": [206, 207], "dnnl_query_kernel": [206, 207], "group_size_s64": 206, "dnnl_query_group_size_s64": [206, 207], "src_md": [206, 225, 227, 228, 233, 242, 250, 251, 254, 256, 257, 259, 261, 264, 265, 266, 267, 268, 270, 271, 272, 356, 360, 362, 367, 377, 386, 388, 396, 400, 402, 407, 411, 415, 417, 419, 421, 423, 426, 428, 430, 535, 539], "dnnl_query_src_md": [206, 207, 228, 236, 308, 362, 372], "diff_src_md": 206, "dnnl_query_diff_src_md": [206, 207], "dnnl_query_weights_md": [206, 207, 228, 236, 308, 362, 372], "diff_weights_md": 206, "dnnl_query_diff_weights_md": [206, 207, 236, 372], "dst_md": [206, 225, 226, 228, 239, 240, 242, 250, 254, 256, 257, 259, 261, 264, 265, 266, 267, 268, 270, 271, 356, 358, 362, 373, 374, 377, 386, 396, 400, 402, 407, 411, 415, 417, 419, 421, 423, 426, 428, 535, 539], "dnnl_query_dst_md": [206, 207, 228, 236, 308, 362, 372], "diff_dst_md": 206, "dnnl_query_diff_dst_md": [206, 207, 236, 372], "dnnl_query_workspace_md": [206, 207, 228, 236, 308, 362, 372], "dnnl_query_scratchpad_md": [206, 207], "dnnl_query_exec_arg_md": [206, 207, 303, 308, 319], "ndims_s32": 206, "dnnl_query_ndims_s32": [206, 207, 302], "dnnl_query_dim": [206, 207, 302], "dnnl_query_data_typ": [206, 207, 302], "submemory_offset_s64": 206, "dnnl_query_submemory_offset_s64": [206, 207, 302], "padded_dim": [206, 302, 308, 518], "dnnl_query_padded_dim": [206, 207, 302], "padded_offset": 206, "dnnl_query_padded_offset": [206, 207, 302], "dnnl_query_format_kind": [206, 207, 302], "inner_nblks_s32": 206, "dnnl_query_inner_nblks_s32": [206, 207, 302], "dnnl_query_sparse_encod": [206, 207, 302], "nnz_s64": 206, "dnnl_query_nnz_s64": [206, 207, 302], "num_handles_s32": 206, "dnnl_query_num_handles_s32": [206, 207, 302], "dnnl_query_t": [206, 278, 302, 308, 342], "estim": [206, 207], "submemori": [206, 207, 302, 518], "dnnl_query_some_md": 207, "dnnl_query_max": 207, "dnnl_primitive_desc_queri": [207, 278, 308], "dnnl_query_": 207, "_engin": 207, "dnnl_engine_t": [207, 228, 236, 247, 278, 285, 286, 289, 290, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 329, 333, 335, 337, 338, 362, 372, 382], "dnnl_primitive_kind_t": [207, 278, 284, 308, 342], "_s32": 207, "_s64": 207, "_f64": 207, "_str": 207, "_md": [207, 388, 414], "const_dnnl_memory_desc_t": [207, 228, 236, 278, 284, 285, 286, 289, 290, 292, 293, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 310, 311, 312, 313, 315, 316, 318, 319, 362, 372], "_pd": [207, 388], "const_dnnl_primitive_desc_t": [207, 278, 285, 290, 292, 293, 296, 297, 299, 300, 304, 305, 308, 312, 313, 315, 316, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 519, 521, 525, 527, 530, 536, 538, 540, 542, 545, 547, 549, 551, 555, 563, 565], "dnnl_alg_kind_t": [207, 278, 284, 286, 290, 292, 293, 300, 304, 308, 310, 312, 313, 316, 342], "dnnl_rnn_direction_t": [207, 278, 313, 342], "dnnl_data_type_t": [207, 278, 284, 291, 299, 302, 322, 332, 342, 476, 516], "dnnl_format_kind_t": [207, 278, 302], "dnnl_sparse_encoding_t": [207, 278, 302], "thumb": 207, "dnnl_primitive_desc_clon": [207, 278, 308], "scratch": 207, "stub": 207, "grad": 207, "dnnl_rnn_direction_undef": [208, 209], "unidirectional_left2right": [208, 224, 243, 244, 258, 260, 269, 276, 354, 378, 379, 404, 409, 425, 434], "dnnl_unidirectional_left2right": [208, 209], "unidirectional_right2left": 208, "dnnl_unidirectional_right2left": [208, 209], "dnnl_bidirectional_concat": [208, 209], "dnnl_bidirectional_sum": [208, 209], "unidirect": [208, 209, 243, 244, 269, 378, 379, 425], "bidirect": [208, 209, 243, 244, 378, 379], "dnnl_rnn_flags_undef": [210, 211], "dnnl_rnn_flags_diff_weights_overwrit": [210, 211], "dnnl_rounding_mode_environ": [212, 213], "dnnl_rounding_mode_stochast": [212, 213], "dictat": [212, 213], "trail": [212, 213], "dnnl_scratchpad_mode_librari": [214, 215, 284], "dnnl_scratchpad_mode_us": [214, 215, 284], "safeti": [214, 215], "in_ord": [219, 248, 273, 275, 383, 394, 395], "dnnl_stream_in_ord": [219, 220], "out_of_ord": 219, "dnnl_stream_out_of_ord": [219, 220], "default_flag": [219, 554], "dnnl_stream_default_flag": [219, 220, 228, 236, 247, 362, 372, 382], "dnnl_sycl_interop_usm": [221, 222, 319], "dnnl_sycl_interop_buff": [221, 222, 319], "dnnl_sycl_typ": 222, "tran": [223, 562], "2022": [224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 241, 243, 244, 245, 247, 248, 250, 253, 255, 256, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 354, 356, 358, 360, 362, 365, 366, 367, 369, 372, 375, 380, 382, 386, 398, 400, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430], "augru_exampl": [224, 278, 354], "src_dim": [224, 225, 227, 233, 234, 242, 249, 250, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 276, 354, 356, 360, 367, 369, 377, 384, 386, 396, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430, 434], "attention_dim": [224, 354], "weights_dim": [224, 234, 242, 249, 256, 260, 261, 265, 276, 354, 369, 377, 384, 400, 409, 411, 417, 434], "bias_dim": [224, 234, 249, 256, 258, 260, 261, 276, 354, 369, 384, 400, 404, 409, 411, 434], "dst_dim": [224, 234, 242, 249, 250, 256, 260, 261, 264, 265, 266, 268, 354, 369, 377, 384, 386, 400, 409, 411, 415, 417, 419, 423], "src_layer_data": [224, 258, 260, 276, 354, 404, 409, 434], "attention_data": [224, 354], "weights_layer_data": [224, 258, 260, 276, 354, 404, 409, 434], "weights_iter_data": [224, 258, 260, 276, 354, 404, 409, 434], "bias_data": [224, 234, 249, 256, 258, 260, 261, 276, 354, 369, 384, 400, 404, 409, 411, 434], "dst_layer_data": [224, 258, 260, 276, 354, 404, 409, 434], "sin": [224, 225, 226, 227, 234, 242, 249, 254, 256, 257, 258, 260, 261, 272, 276, 354, 356, 358, 360, 369, 377, 384, 396, 400, 402, 404, 409, 411, 430, 434], "src_layer_md": [224, 258, 260, 276, 354, 404, 409, 434], "attention_md": [224, 354], "bias_md": [224, 256, 258, 260, 261, 276, 354, 400, 404, 409, 411, 434], "dst_layer_md": [224, 258, 260, 276, 354, 404, 409, 434], "src_layer_mem": [224, 258, 260, 276, 354, 404, 409, 434], "attention_mem": [224, 354], "bias_mem": [224, 256, 258, 260, 261, 276, 354, 400, 404, 409, 411, 434], "dst_layer_mem": [224, 258, 260, 276, 354, 404, 409, 434], "user_weights_layer_mem": [224, 258, 260, 276, 354, 404, 409, 434], "user_weights_iter_mem": [224, 258, 260, 276, 354, 404, 409, 434], "write_to_dnnl_memori": [224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 242, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 372, 377, 382, 384, 386, 388, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434, 436], "augru_weights_layer_md": [224, 354], "augru_weights_iter_md": [224, 354], "src_iter_md": [224, 258, 260, 276, 354, 404, 409, 434], "dst_iter_md": [224, 258, 260, 276, 354, 404, 409, 434], "rnn_direct": [224, 243, 244, 258, 260, 269, 276, 313, 342, 354, 378, 379, 404, 409, 425, 434, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "augru_weights_layer_mem": [224, 354], "augru_weights_iter_mem": [224, 354], "src_iter_mem": [224, 258, 260, 276, 354, 404, 409, 434], "weights_iter_mem": [224, 258, 260, 276, 354, 404, 409, 434], "dst_iter_mem": [224, 258, 260, 276, 354, 404, 409, 434], "workspace_mem": [224, 225, 258, 259, 260, 264, 276, 354, 356, 404, 407, 409, 415, 434], "augru_prim": [224, 354], "augru_arg": [224, 354], "dnnl_arg_augru_attent": [224, 278, 308, 354], "read_from_dnnl_memori": [224, 225, 226, 227, 234, 239, 240, 242, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 276, 278, 354, 356, 358, 360, 369, 373, 374, 377, 382, 384, 386, 388, 389, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430, 434], "parse_engine_kind": [224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 354, 356, 358, 360, 362, 365, 366, 367, 369, 377, 384, 386, 388, 396, 398, 400, 402, 404, 407, 409, 411, 415, 417, 419, 421, 423, 425, 426, 428, 430, 432, 434, 436], "2020": [225, 226, 227, 233, 234, 250, 256, 257, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 356, 358, 360, 367, 369, 386, 400, 402, 407, 409, 411, 415, 417, 419, 421, 423, 426, 428, 430], "batch_normalization_exampl": [225, 278, 356], "227": [225, 228, 229, 231, 232, 236, 250, 252, 256, 257, 259, 263, 265, 266, 267, 268, 270, 272, 273, 356, 362, 363, 365, 366, 372, 386, 400, 402, 407, 414, 417, 419, 421, 423, 426, 430], "scaleshift_dim": [225, 254, 257, 356, 396, 402], "src_data": [225, 227, 233, 234, 242, 249, 250, 254, 256, 257, 259, 261, 264, 265, 266, 267, 268, 270, 271, 272, 356, 360, 367, 369, 377, 384, 386, 396, 400, 402, 407, 411, 415, 417, 419, 421, 423, 426, 428, 430], "scale_data": [225, 227, 254, 257, 356, 360, 396, 402], "shift_data": [225, 227, 254, 257, 356, 360, 396, 402], "tan": [225, 254, 257, 356, 396, 402], "scaleshift_md": [225, 254, 257, 356, 396, 402], "src_mem": [225, 227, 233, 242, 250, 251, 254, 256, 257, 259, 261, 262, 264, 266, 267, 268, 270, 271, 272, 356, 360, 367, 377, 386, 388, 396, 400, 402, 407, 411, 413, 415, 419, 421, 423, 426, 428, 430], "scale_mem": [225, 227, 254, 257, 356, 360, 396, 402], "shift_mem": [225, 227, 254, 257, 356, 360, 396, 402], "bnorm_pd": [225, 356], "10f": [225, 254, 257, 356, 396, 402], "normalization_flag": [225, 254, 257, 285, 296, 299, 308, 342, 356, 396, 402, 447, 449, 478, 480, 494, 496], "mean_mem": [225, 227, 254, 257, 356, 360, 396, 402], "mean_desc": [225, 254, 257, 356, 396, 402, 447, 449, 478, 480, 494, 496], "variance_mem": [225, 227, 254, 257, 356, 360, 396, 402], "variance_desc": [225, 254, 257, 356, 396, 402, 447, 449, 478, 480, 494, 496], "bnorm_prim": [225, 356], "bnorm_arg": [225, 356], "binary_exampl": [226, 278, 358], "150": [226, 227, 358, 360], "src_0_dim": [226, 358], "src_1_dim": [226, 358], "src_0_data": [226, 358], "src_1_data": [226, 358], "src_0_md": [226, 358], "src_1_md": [226, 358], "src_0_mem": [226, 358], "src_1_mem": [226, 358], "binary_op": [226, 227, 284, 358, 360, 524], "binary_attr": [226, 227, 358, 360], "binary_pd": [226, 227, 358, 360], "binary_prim": [226, 227, 358, 360], "binary_arg": [226, 227, 358, 360], "tmp_dst": [227, 360], "params_dim": [227, 360], "mean_data": [227, 360], "variance_data": [227, 360], "oscale_data": [227, 360], "mean_md": [227, 360], "variance_md": [227, 360], "scale_md": [227, 360], "shift_md": [227, 360], "oscale_md": [227, 360], "oscale_mem": [227, 360], "dst_tmp": [227, 360], "output_scal": [227, 360], "2016": [228, 229, 232, 236, 362, 366, 372], "posix_memalign": [228, 236, 362, 372], "_posix_c_sourc": [228, 236, 278, 362, 372], "200112l": [228, 236, 362, 372], "stdlib": [228, 236, 247, 362, 372, 382], "conv_ih": [228, 236, 278, 362, 372], "conv_iw": [228, 236, 278, 362, 372], "conv_oh": [228, 236, 278, 362, 372], "conv_ow": [228, 236, 278, 362, 372], "conv_strid": [228, 230, 231, 232, 236, 278, 362, 364, 365, 366, 372], "conv_pad": [228, 230, 231, 232, 236, 278, 362, 364, 365, 366, 372], "pool_oh": [228, 236, 278, 362, 372], "27": [228, 229, 231, 232, 236, 264, 362, 365, 366, 372, 415], "pool_ow": [228, 236, 278, 362, 372], "pool_strid": [228, 231, 232, 236, 278, 362, 365, 366, 372], "pool_pad": [228, 229, 231, 232, 236, 278, 362, 363, 365, 366, 372], "arr": [228, 236, 278, 362, 372], "init_net_data": [228, 236, 278, 362, 372], "uint32_t": [228, 231, 232, 236, 278, 362, 365, 366, 372], "1637": [228, 236, 362, 372], "indx": [228, 236, 362, 372], "typedef": [228, 236, 278, 342, 362, 372], "narg": [228, 236, 278, 303, 308, 319, 362, 372, 440], "dnnl_exec_arg_t": [228, 236, 247, 278, 303, 308, 319, 362, 372, 382, 440], "args_t": [228, 236, 278, 362, 372], "prepare_arg_nod": [228, 236, 278, 362, 372], "free_arg_nod": [228, 236, 278, 362, 372], "set_arg": [228, 236, 278, 362, 372], "arg_idx": [228, 236, 278, 362, 372], "dnnl_memory_t": [228, 236, 247, 278, 302, 303, 308, 319, 362, 372, 382, 474], "init_data_memori": [228, 236, 278, 362, 372], "user_tag": [228, 236, 278, 362, 372], "user_md": [228, 236, 362, 372], "dnnl_memory_cr": [228, 236, 247, 278, 302, 362, 372, 382], "dnnl_status_t": [228, 236, 278, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 348, 362, 372, 388, 432, 473], "prepare_reord": [228, 236, 278, 362, 372], "user_memori": [228, 236, 278, 362, 372], "prim_memory_md": [228, 236, 278, 362, 372], "prim_engin": [228, 236, 278, 362, 372], "dir_is_user_to_prim": [228, 236, 278, 362, 372], "prim_memori": [228, 236, 278, 362, 372], "dnnl_primitive_t": [228, 236, 247, 278, 308, 362, 372, 382], "net_index": [228, 236, 278, 362, 372], "inc": [228, 236, 362, 372, 406], "net_arg": [228, 229, 236, 278, 362, 363, 372], "user_memory_md": [228, 236, 362, 372], "dnnl_memory_get_memory_desc": [228, 236, 278, 302, 362, 372], "user_mem_engin": [228, 236, 362, 372], "dnnl_memory_get_engin": [228, 236, 278, 302, 362, 372], "dnnl_memory_desc_equ": [228, 236, 278, 302, 362, 372], "dnnl_primitive_desc_t": [228, 236, 247, 278, 284, 285, 286, 289, 290, 292, 293, 296, 297, 299, 300, 301, 304, 305, 308, 310, 311, 312, 313, 315, 316, 318, 362, 372, 382, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "reorder_pd": [228, 236, 267, 362, 372, 421], "dnnl_reorder_primitive_desc_cr": [228, 236, 247, 278, 311, 362, 372, 382], "dnnl_primitive_cr": [228, 236, 247, 278, 308, 362, 372, 382], "dnnl_primitive_desc_destroi": [228, 236, 247, 278, 308, 362, 372, 382], "simple_net": [228, 229, 231, 232, 236, 243, 244, 269, 278, 362, 364, 365, 366, 372, 425], "dnnl_engine_kind_t": [228, 278, 294, 328, 329, 330, 335, 342, 362], "dnnl_engine_cr": [228, 236, 247, 278, 294, 362, 372, 382], "net_src_siz": [228, 236, 362, 372], "net_dst_siz": [228, 236, 362, 372], "net_src": [228, 231, 232, 236, 243, 244, 269, 362, 365, 366, 372, 378, 379, 425], "net_dst": [228, 232, 236, 243, 244, 269, 362, 366, 372, 378, 379, 425], "memset": [228, 236, 243, 244, 362, 372, 378, 379], "conv_user_src_s": [228, 236, 362, 372], "conv_user_weights_s": [228, 236, 362, 372], "conv_bias_s": [228, 236, 362, 372], "conv_user_dst_s": [228, 236, 362, 372], "conv_dil": [228, 236, 362, 372], "conv_src": [228, 236, 263, 362, 372, 414], "conv_weight": [228, 230, 231, 232, 236, 362, 364, 365, 366, 372], "conv_bia": [228, 230, 231, 232, 236, 362, 364, 365, 366, 372], "conv_user_src_memori": [228, 231, 232, 236, 362, 365, 366, 372], "conv_user_weights_memori": [228, 231, 232, 236, 362, 365, 366, 372], "conv_user_bias_memori": [228, 231, 232, 236, 362, 365, 366, 372], "conv_src_md": [228, 230, 231, 232, 234, 236, 262, 263, 362, 364, 365, 366, 369, 372, 413, 414], "conv_weights_md": [228, 230, 231, 232, 234, 236, 262, 362, 364, 365, 366, 369, 372, 413], "conv_bias_md": [228, 230, 231, 232, 236, 362, 364, 365, 366, 372], "dnnl_convolution_forward_primitive_desc_cr": [228, 236, 278, 290, 362, 372], "conv_internal_src_memori": [228, 236, 362, 372], "conv_internal_weights_memori": [228, 236, 362, 372], "conv_internal_dst_memori": [228, 236, 362, 372], "dnnl_primitive_desc_query_md": [228, 236, 278, 303, 308, 319, 362, 372], "conv_reorder_src": [228, 236, 362, 372], "conv_reorder_weight": [228, 236, 362, 372], "negative_slop": [228, 231, 232, 236, 362, 365, 366, 372], "relu_src_md": [228, 231, 232, 236, 362, 365, 366, 372], "relu_dst_md": [228, 236, 362, 372], "relu_pd": [228, 231, 232, 236, 247, 248, 251, 253, 263, 274, 362, 365, 366, 372, 382, 383, 388, 389, 432], "dnnl_eltwise_forward_primitive_desc_cr": [228, 236, 247, 278, 293, 362, 372, 382], "relu_dst_memori": [228, 231, 232, 236, 362, 365, 366, 372], "0001": [228, 229, 231, 232, 236, 362, 365, 366, 372], "0001f": [228, 229, 231, 232, 236, 362, 365, 366, 372], "75f": [228, 229, 231, 232, 236, 259, 362, 365, 366, 372, 407], "lrn_src_md": [228, 236, 362, 372], "lrn_dst_md": [228, 236, 362, 372], "lrn_pd": [228, 231, 232, 236, 259, 362, 365, 366, 372, 407], "dnnl_lrn_forward_primitive_desc_cr": [228, 236, 278, 300, 362, 372], "lrn_dst_memori": [228, 231, 232, 236, 362, 365, 366, 372], "lrn_ws_memori": [228, 236, 362, 372], "lrn_ws_md": [228, 236, 362, 372], "pool_dst_siz": [228, 236, 362, 372], "pool_kernel": [228, 231, 232, 236, 362, 365, 366, 372], "pool_dil": [228, 229, 231, 232, 236, 362, 363, 365, 366, 372], "pool_src_md": [228, 236, 362, 372], "pool_dst_any_md": [228, 362], "pool_user_dst_memori": [228, 231, 232, 236, 362, 365, 366, 372], "pool_pd": [228, 231, 232, 236, 262, 362, 365, 366, 372, 413], "dnnl_pooling_forward_primitive_desc_cr": [228, 236, 278, 304, 362, 372], "pool_ws_memori": [228, 236, 362, 372], "pool_ws_md": [228, 236, 362, 372], "pool_dst_memori": [228, 231, 232, 236, 362, 365, 366, 372], "pool_reorder_dst": [228, 236, 362, 372], "pool_internal_dst_memori": [228, 236, 362, 372], "pool_dst_md": [228, 231, 232, 236, 262, 362, 365, 366, 372, 413], "tent": [228, 236, 362, 372], "workaround": [228, 236, 362, 372], "dnnl_stream_t": [228, 236, 247, 278, 303, 308, 309, 317, 319, 320, 326, 333, 337, 362, 372, 382], "dnnl_stream_creat": [228, 236, 247, 278, 317, 362, 372, 382], "dnnl_primitive_execut": [228, 236, 247, 278, 284, 308, 362, 372, 382, 474], "dnnl_stream_wait": [228, 236, 247, 278, 302, 309, 317, 362, 372, 382], "dnnl_stream_destroi": [228, 236, 247, 278, 317, 362, 372, 382], "dnnl_memory_destroi": [228, 236, 247, 278, 302, 362, 372, 382], "dnnl_primitive_destroi": [228, 236, 247, 278, 308, 362, 372, 382], "dnnl_engine_destroi": [228, 236, 247, 278, 294, 362, 372, 382], "engine_kind2str_upp": [228, 251, 274, 278, 362, 388, 432], "chrono": 229, "100": [229, 255, 277, 398, 436], "eng": [229, 230, 231, 232, 237, 238, 241, 245, 246, 251, 252, 253, 255, 262, 263, 269, 273, 274, 275, 277, 278, 363, 364, 365, 366, 375, 380, 388, 389, 390, 391, 392, 394, 395, 398, 413, 414, 425, 432, 436, 524], "conv1_src_tz": [229, 363], "conv1_weights_tz": [229, 363], "conv1_bias_tz": [229, 363], "conv1_dst_tz": [229, 363], "conv1_pad": [229, 363], "user_src": [229, 230, 263, 363, 364, 414], "user_dst": [229, 230, 263, 363, 364, 414], "1000": [229, 255, 271, 277, 363, 398, 428, 436], "conv1_weight": [229, 363], "conv1_bia": [229, 363], "user_src_memori": [229, 230, 363, 364], "user_weights_memori": [229, 230, 363, 364], "conv1_user_bias_memori": [229, 363], "conv1_prim_desc": [229, 363], "conv1_src_memori": [229, 363], "conv1_weights_memori": [229, 363], "conv1_dst_memori": [229, 363], "relu1": [229, 237, 252, 273, 390, 393, 394], "negative1_slop": [229, 363], "relu1_prim_desc": [229, 363], "lrn1": 229, "alpha1": 229, "beta1": 229, "local1_s": 229, "lrn1_prim_desc": 229, "lrn_forward": [229, 231, 232, 259, 300, 342, 365, 366, 407, 506, 530], "lrn1_dst_memori": [229, 363], "pool1": [229, 362, 363], "pool1_dst_tz": 229, "pool1_kernel": [229, 363], "pool1_strid": [229, 363], "pool1_dst_md": [229, 363], "pool1_pd": [229, 363], "pooling_forward": [229, 231, 232, 262, 264, 304, 342, 363, 365, 366, 413, 415, 520, 530], "pool1_dst_memori": [229, 363], "conv2_src_tz": 229, "conv2_weights_tz": 229, "conv2_bias_tz": 229, "conv2_dst_tz": 229, "conv2_strid": 229, "conv2_pad": 229, "conv2_weight": 229, "conv2_bia": 229, "conv2_user_weights_memori": 229, "conv2_user_bias_memori": 229, "conv2_src_md": 229, "conv2_bias_md": 229, "conv2_weights_md": 229, "conv2_dst_md": 229, "conv2_prim_desc": 229, "conv2_src_memori": 229, "conv2_weights_memori": 229, "conv2_dst_memori": 229, "relu2": 229, "negative2_slop": 229, "relu2_prim_desc": 229, "lrn2": 229, "alpha2": 229, "beta2": 229, "local2_s": 229, "k2": 229, "lrn2_prim_desc": 229, "lrn2_dst_memori": 229, "pool2": 229, "pool2_dst_tz": 229, "pool2_kernel": 229, "pool2_strid": 229, "pool2_dil": 229, "pool2_pad": 229, "pool2_dst_md": 229, "pool2_pd": 229, "pool2_dst_memori": 229, "384": [229, 230, 364], "conv3_src_tz": 229, "conv3_weights_tz": 229, "conv3_bias_tz": 229, "conv3_dst_tz": 229, "conv3_strid": 229, "conv3_pad": 229, "conv3_weight": 229, "conv3_bia": 229, "conv3_user_weights_memori": 229, "conv3_user_bias_memori": 229, "conv3_src_md": 229, "conv3_bias_md": 229, "conv3_weights_md": 229, "conv3_dst_md": 229, "conv3_prim_desc": 229, "conv3_src_memori": 229, "conv3_weights_memori": 229, "conv3_dst_memori": 229, "relu3": [229, 230, 364], "negative3_slop": 229, "relu3_prim_desc": 229, "conv4_src_tz": 229, "conv4_weights_tz": 229, "conv4_bias_tz": 229, "conv4_dst_tz": 229, "conv4_strid": 229, "conv4_pad": 229, "conv4_weight": 229, "conv4_bia": 229, "conv4_user_weights_memori": 229, "conv4_user_bias_memori": 229, "conv4_src_md": 229, "conv4_bias_md": 229, "conv4_weights_md": 229, "conv4_dst_md": 229, "conv4_prim_desc": 229, "conv4_src_memori": 229, "conv4_weights_memori": 229, "conv4_dst_memori": 229, "relu4": 229, "negative4_slop": 229, "relu4_prim_desc": 229, "conv5_src_tz": 229, "conv5_weights_tz": 229, "conv5_bias_tz": 229, "conv5_dst_tz": 229, "conv5_strid": 229, "conv5_pad": 229, "conv5_weight": 229, "conv5_bia": 229, "conv5_user_weights_memori": 229, "conv5_user_bias_memori": 229, "conv5_src_md": 229, "conv5_weights_md": 229, "conv5_bias_md": 229, "conv5_dst_md": 229, "conv5_prim_desc": 229, "conv5_src_memori": 229, "conv5_weights_memori": 229, "conv5_dst_memori": 229, "relu5": 229, "negative5_slop": 229, "relu5_prim_desc": 229, "pool5": 229, "pool5_dst_tz": 229, "pool5_kernel": 229, "pool5_strid": 229, "pool5_dil": 229, "pool5_pad": 229, "pool5_dst": 229, "pool5_dst_md": 229, "pool5_pd": 229, "pool5_dst_memori": 229, "fc6": 229, "4096": 229, "fc6_src_tz": 229, "fc6_weights_tz": 229, "fc6_bias_tz": 229, "fc6_dst_tz": 229, "fc6_weight": 229, "fc6_bia": 229, "fc6_user_weights_memori": 229, "fc6_user_bias_memori": 229, "fc6_src_md": 229, "fc6_bias_md": 229, "fc6_weights_md": 229, "fc6_dst_md": 229, "fc6_prim_desc": 229, "inner_product_forward": [229, 256, 297, 342, 400, 488, 490, 530], "fc6_src_memori": 229, "fc6_weights_memori": 229, "fc6_dst_memori": 229, "fc7": 229, "fc7_weights_tz": 229, "fc7_bias_tz": 229, "fc7_dst_tz": 229, "fc7_weight": 229, "fc7_bia": 229, "fc7_user_weights_memori": 229, "fc7_user_bias_memori": 229, "fc7_bias_md": 229, "fc7_weights_md": 229, "fc7_dst_md": 229, "fc7_prim_desc": 229, "fc7_weights_memori": 229, "fc7_dst_memori": 229, "fc8": 229, "fc8_weights_tz": 229, "fc8_bias_tz": 229, "fc8_dst_tz": 229, "fc8_weight": 229, "fc8_bia": 229, "fc8_user_weights_memori": 229, "fc8_user_bias_memori": 229, "user_dst_memori": [229, 230, 364], "fc8_bias_md": 229, "fc8_weights_md": 229, "fc8_dst_md": 229, "fc8_prim_desc": 229, "fc8_weights_memori": 229, "fc8_dst_memori": 229, "someth": [229, 231, 232, 243, 244, 269, 363, 365, 366, 425], "duration_cast": 229, "steady_clock": 229, "time_since_epoch": 229, "stdexcept": [230, 231, 241, 245, 248, 251, 253, 255, 263, 277, 365, 375, 380, 389, 398, 436], "simple_net_int8": 230, "conv_src_tz": [230, 231, 232, 364, 365, 366], "conv_weights_tz": [230, 231, 232, 364, 365, 366], "conv_bias_tz": [230, 231, 232, 364, 365, 366], "conv_dst_tz": [230, 231, 232, 364, 365, 366], "8f": [230, 364], "weight_scal": [230, 364], "55f": [230, 364], "src_mask": [230, 364], "weight_mask": [230, 364], "dst_mask": [230, 364], "user_bias_memori": [230, 364], "conv_attr": [230, 234, 364, 369], "dst_scale_md": [230, 364], "dst_scale_memori": [230, 364], "ops_alpha": [230, 364], "ops_beta": [230, 364], "conv_prim_desc": [230, 263, 364], "src_attr": [230, 364], "src_scale_md": [230, 364], "src_scale_memori": [230, 364], "src_reorder_pd": [230, 364], "src_reorder": [230, 364], "weight_attr": [230, 364], "wei_scale_md": [230, 364], "wei_scale_memori": [230, 364], "weight_reorder_pd": [230, 364], "weight_reord": [230, 364], "conv_bias_memori": [230, 231, 236, 364, 365, 372], "conv_dst_memori": [230, 231, 232, 364, 365, 366], "dst_attr": [230, 364], "dst_reorder_pd": [230, 364], "dst_reorder": [230, 364], "cassert": [231, 241, 245, 255, 274, 277, 365, 375, 380, 398, 432, 436], "net_fwd": [231, 232, 236, 365, 366, 372], "net_bwd": [231, 232, 236, 365, 366, 372], "net_fwd_arg": [231, 232, 236, 365, 366, 372], "net_bwd_arg": [231, 232, 236, 365, 366, 372], "sinf": [231, 232, 365, 366], "relu_data_tz": [231, 232, 365, 366], "lrn_data_tz": [231, 232, 365, 366], "lrn_workspace_memori": [231, 232, 365, 366], "pool_dst_tz": [231, 232, 365, 366], "pool_workspace_memori": [231, 232, 365, 366], "diff_data": [231, 232, 236, 365, 366, 372], "net_diff_dst": [231, 232, 236, 269, 365, 366, 372, 425], "pool_user_diff_dst_memori": [231, 232, 236, 365, 366, 372], "pool_diff_src_md": [231, 232, 236, 365, 366, 372], "pool_diff_dst_md": [231, 232, 236, 365, 366, 372], "pool_bwd_pd": [231, 232, 236, 365, 366, 372], "pooling_backward": [231, 232, 304, 342, 365, 366, 530], "pool_diff_dst_memori": [231, 232, 236, 365, 366, 372], "pool_diff_src_memori": [231, 232, 236, 365, 366, 372], "diff_src_desc": [231, 232, 278, 285, 290, 292, 293, 296, 297, 299, 300, 304, 305, 312, 315, 316, 365, 366, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "lrn_diff_dst_md": [231, 232, 236, 365, 366, 372], "lrn_diff_src_md": [231, 232, 236, 365, 366, 372], "lrn_bwd_pd": [231, 232, 236, 365, 366, 372], "lrn_backward": [231, 232, 300, 342, 365, 366, 530], "lrn_diff_dst_memori": [231, 232, 365, 366], "lrn_diff_src_memori": [231, 232, 236, 365, 366, 372], "relu_diff_src_md": [231, 232, 236, 365, 366, 372], "relu_diff_dst_md": [231, 232, 236, 365, 366, 372], "primitive_descriptor": [231, 232, 285, 296, 297, 299, 300, 365, 366], "relu_bwd_pd": [231, 232, 236, 365, 366, 372], "eltwise_backward": [231, 232, 293, 342, 365, 366, 530], "relu_diff_dst_memori": [231, 232, 365, 366], "relu_diff_src_memori": [231, 232, 236, 365, 366, 372], "conv_user_diff_weights_memori": [231, 232, 236, 365, 366, 372], "conv_diff_bias_memori": [231, 232, 236, 365, 366, 372], "conv_bwd_src_md": [231, 232, 365, 366], "conv_diff_weights_md": [231, 232, 236, 365, 366, 372], "conv_diff_dst_md": [231, 232, 236, 365, 366, 372], "conv_diff_bias_md": [231, 232, 236, 365, 366, 372], "conv_bwd_weights_pd": [231, 232, 236, 365, 366, 372], "convolution_backward_weight": [231, 232, 290, 342, 365, 366, 530], "conv_bwd_src_memori": [231, 232, 365, 366], "relu_bwd": [231, 232, 236, 365, 366, 372], "conv_diff_weight": [231, 232, 236, 365, 366, 372], "conv_diff_dst_memori": [231, 232, 236, 365, 366, 372], "conv_diff_weights_memori": [231, 232, 236, 365, 366, 372], "diff_weights_desc": [231, 232, 278, 290, 292, 297, 305, 365, 366, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "didn": [231, 232, 365, 366], "anyth": [231, 232, 303, 346, 365, 366], "n_iter": [231, 232, 236, 365, 366, 372], "net_output": [231, 232, 236, 365, 366, 372], "update_diff_dst": [231, 232, 236, 365, 366, 372], "net_diff_weight": [231, 232, 236, 365, 366, 372], "net_diff_bia": [231, 232, 236, 365, 366, 372], "update_weight": [231, 232, 236, 365, 366, 372], "conv_user_diff_weights_buff": [232, 236, 366, 372], "conv_diff_bias_buff": [232, 236, 366, 372], "concat_exampl": [233, 278, 367], "120": [233, 367], "num_src": [233, 272, 367, 430], "mem": [233, 243, 244, 247, 248, 253, 272, 274, 278, 367, 382, 389, 430, 432], "concat_pd": [233, 367], "dst_mem": [233, 239, 240, 242, 250, 251, 256, 259, 261, 262, 264, 266, 267, 268, 270, 272, 278, 367, 373, 374, 377, 386, 388, 400, 407, 411, 413, 415, 419, 421, 423, 426, 430], "concat_prim": [233, 367], "concat_arg": [233, 367], "convolution_exampl": [234, 278, 369], "strides_dim": [234, 249, 264, 369, 384, 415], "padding_dims_l": [234, 249, 264, 369, 384, 415], "padding_dims_r": [234, 249, 264, 369, 384, 415], "weights_data": [234, 239, 240, 242, 249, 256, 261, 265, 369, 373, 374, 377, 384, 400, 411, 417], "dst_data": [234, 239, 240, 242, 249, 250, 256, 259, 261, 264, 265, 266, 267, 268, 270, 272, 369, 373, 374, 377, 384, 386, 400, 407, 411, 415, 417, 419, 421, 423, 426, 430], "user_src_mem": [234, 242, 249, 265, 369, 377, 384, 417], "user_weights_mem": [234, 242, 249, 256, 265, 369, 377, 384, 400, 417], "user_dst_mem": [234, 242, 249, 265, 369, 377, 384, 417], "user_bias_md": [234, 249, 369, 384], "user_bias_mem": [234, 249, 369, 384], "conv_op": [234, 369], "conv_src_mem": [234, 262, 369, 413], "conv_weights_mem": [234, 262, 369, 413], "conv_dst_mem": [234, 262, 369, 413], "conv_arg": [234, 369, 524], "depthwise_convolution_exampl": [234, 278, 369], "exit_cod": [234, 251, 274, 369, 388, 432], "idx": [236, 274, 278, 308, 372, 432, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "n_fwd": [236, 372], "n_bwd": [236, 372], "dnnl_pooling_backward_primitive_desc_cr": [236, 278, 304, 372], "pool_internal_diff_dst_memori": [236, 372], "pool_reorder_diff_dst": [236, 372], "pool_bwd": [236, 372], "dnnl_lrn_backward_primitive_desc_cr": [236, 278, 300, 372], "lrn_bwd": [236, 372], "conv_diff_src_md": [236, 372], "dnnl_convolution_backward_weights_primitive_desc_cr": [236, 278, 290, 372], "conv_bwd_reorder_src": [236, 372], "conv_bwd_internal_src_memori": [236, 372], "conv_bwd_weights_src_memori": [236, 372], "conv_reorder_diff_dst": [236, 372], "conv_internal_diff_dst_memori": [236, 372], "conv_reorder_diff_weight": [236, 372], "conv_internal_diff_weights_memori": [236, 372], "conv_bwd_weight": [236, 372], "dnnl_memory_set_data_handl": [236, 278, 302, 303, 319, 372], "dnnl_memory_get_data_handl": [236, 278, 302, 372], "cleanup": [236, 372], "2023": [237, 238, 240, 242, 251, 254, 257, 273, 274, 277, 374, 377, 396, 402, 436], "unordered_set": [237, 238, 246, 252, 273, 275, 278, 390, 391, 392, 393, 394, 395], "graph_example_util": [237, 238, 246, 252, 273, 275, 390, 391, 392, 393, 394, 395], "cpu_getting_started_tutori": 237, "oc1": [237, 252, 273], "oc2": [237, 252, 273], "225": 237, "kh1": [237, 252, 273], "kw1": [237, 252, 273], "kh2": [237, 252, 273], "kw2": [237, 252, 273], "conv0_input_dim": [237, 252, 273], "conv0_weight_dim": [237, 252, 273], "conv0_bias_dim": [237, 252, 273], "conv1_weight_dim": [237, 252, 273], "conv1_bias_dim": [237, 252, 273], "conv0_src_desc": [237, 252, 273, 390, 393, 394], "conv0_weight_desc": [237, 252, 273, 390, 393, 394], "conv0_dst_desc": [237, 252, 273, 390, 393, 394], "conv0": [237, 252, 273, 390, 393, 394], "bias_add": [237, 252, 273], "conv0_bias_desc": [237, 252, 273, 390, 393, 394], "conv0_bias_add_dst_desc": [237, 252, 273, 390, 393, 394], "conv0_bias_add": [237, 252, 273, 390, 393, 394], "relu0_dst_desc": [237, 252, 273, 390, 393, 394], "relu0": [237, 252, 273, 390, 393, 394], "conv1_weight_desc": [237, 252, 273, 390, 393, 394], "conv1_dst_desc": [237, 252, 273, 390, 393, 394], "conv1_bias_desc": [237, 252, 273, 390, 393, 394], "conv1_bias_add_dst_desc": [237, 252, 273, 390, 393, 394], "conv1_bias_add": [237, 252, 273, 390, 393, 394], "relu1_dst_desc": [237, 252, 273, 390, 393, 394], "make_engine_with_alloc": [237, 238, 246, 273, 275, 329, 343, 344, 345, 390, 391, 392, 394, 395], "strm": [237, 238, 246, 252, 253, 273, 274, 275, 389, 390, 391, 392, 394, 395, 432], "global_outputs_ts_map": [237, 238, 252, 273, 278], "shared_ptr": [237, 238, 246, 252, 273, 275, 278, 485], "data_buff": [237, 238, 246, 252, 273, 275, 278], "id_to_queried_logical_tensor": [237, 238, 252, 273], "helper": [237, 238, 252, 273, 516], "ids_with_any_layout": [237, 238, 252, 273], "set_any_layout": [237, 238, 252, 273, 278], "mock": [237, 238, 246, 252, 273, 275], "concrete_shap": [237, 238, 246, 252, 273, 275], "although": [237, 238, 246, 252, 273, 275, 364], "cpu_get_start": 237, "continu": [237, 238, 252, 273, 363, 388], "cp": [237, 238, 243, 244, 246, 252, 273, 275, 390, 391, 392, 394, 395], "inputs_t": [237, 238, 246, 252, 273, 275, 390, 391, 392, 394, 395], "outputs_t": [237, 238, 246, 252, 273, 275, 390, 391, 392, 394, 395], "allocate_graph_mem": [237, 238, 246, 278], "conv0_src": [237, 273], "conv0_wei": [237, 273], "conv0_bias_src1": [237, 273], "conv1_wei": [237, 273], "conv1_bias_src1": [237, 273], "relu_dst": [237, 273], "simple_pattern_int8": 238, "conv_input_dim": 238, "conv_weight_dim": 238, "conv_bias_dim": 238, "dequant0_src_desc": [238, 391], "conv_src_desc": [238, 391], "dequant0": [238, 391], "1f": [238, 242, 244, 245, 377, 379, 380, 391], "dequant1_src_desc": [238, 391], "conv_weight_desc": [238, 391], "dequant1": [238, 391], "wei_zp": [238, 391], "conv_bias_desc": [238, 391], "conv_dst_desc": [238, 391], "relu_dst_desc": [238, 391], "quant_dst_desc": [238, 391], "quant": [238, 391], "dq0_src": 238, "dq1_src": 238, "quant_dst": 238, "check_result": [239, 240, 278, 373, 374], "expected_result": [239, 240, 373, 374], "750000": [239, 240, 373, 374], "250000": [239, 240, 373, 374], "500000": [239, 240, 373, 374], "000000": [239, 240, 373, 374], "19": [239, 240, 373, 374], "sparse_matmul": [239, 240, 278, 373, 374], "src_coo_valu": [239, 373], "src_coo_row_indic": [239, 373], "src_coo_col_indic": [239, 373], "static_cast": [239, 240, 255, 373, 374, 398], "src_coo_md": [239, 373], "wei_md": [239, 240, 373, 374], "src_coo_mem": [239, 373], "wei_mem": [239, 240, 373, 374], "sparse_matmul_pd": [239, 240, 373, 374], "sparse_matmul_prim": [239, 240, 373, 374], "sparse_matmul_arg": [239, 240, 373, 374], "src_csr_valu": [240, 374], "src_csr_indic": [240, 374], "src_csr_pointer": [240, 374], "src_csr_md": [240, 374], "src_csr_mem": [240, 374], "cctype": [241, 245, 255, 277, 375, 380, 398, 436], "cstdio": [241, 245, 255, 277, 375, 380, 398, 436], "type_trait": [241, 375], "init_vector": [241, 245, 255, 277, 375, 380, 398, 436], "min_valu": [241, 375], "max_valu": [241, 375], "mt19937": [241, 245, 255, 277, 375, 380, 398, 436], "uniform_real_distribut": [241, 245, 255, 277, 375, 380, 398, 436], "find_min_max": [241, 375], "compute_q10n_param": [241, 375], "max_int": [241, 375], "numeric_limit": [241, 245, 375, 380], "min_int": [241, 375], "lowest": [241, 375], "ifndef": [241, 375], "omit_workaround_for_skx": [241, 375], "dev_guide_int8_comput": [241, 375], "endif": [241, 274, 375, 432], "min_val": [241, 375], "max_val": [241, 375], "tcomput": [241, 375], "q10n": [241, 375], "tdata": [241, 375], "tscale": [241, 375], "3g": [241, 375], "invers": [241, 375], "tzero": [241, 375], "compare_vector": [241, 245, 375, 380], "v2": [241, 245, 375, 380], "scale_v2": [241, 375], "zp_v2": [241, 375], "threshold": [241, 245, 375, 380], "v1_l2": [241, 245, 375, 380], "diff_l2": [241, 245, 375, 380], "v2_n": [241, 375], "deq10n": [241, 375], "ok": [241, 245, 375, 380], "tcomparison": [241, 375], "trefer": [241, 245, 375, 380], "terror": [241, 245, 375, 380], "trel": [241, 375], "naccuraci": [241, 375], "x_int_m": [241, 278, 375], "x_f32": [241, 278, 375], "scale_x": [241, 278, 375], "zp_x": [241, 278, 375], "q10n_scheme": [241, 375], "mimic": [241, 375], "x_int_md": [241, 375], "x_f32_md": [241, 375], "x_f32_m": [241, 375], "q10n_attr": [241, 375], "q10n_pd": [241, 375], "dst_scale_x_m": [241, 375], "zp_x_m": [241, 375], "f32_matmul_comput": [241, 278, 375], "a_f32": [241, 277, 278, 375, 436], "b_f32": [241, 255, 277, 278, 375, 398, 436], "c_f32": [241, 277, 278, 375, 436], "wrap": [241, 245, 248, 375, 380, 472, 473, 485, 516, 530, 554], "a_f32_m": [241, 375], "b_f32_m": [241, 375], "c_f32_m": [241, 375], "matmul_pd": [241, 242, 245, 255, 261, 277, 375, 377, 380, 398, 411, 436], "matmul_p": [241, 245, 255, 277, 278, 375, 380, 398, 436], "scale_c": [241, 278, 375], "zp_c": [241, 255, 278, 375, 398], "dynamic_q10n_matmul": [241, 278, 375], "c_u8": [241, 255, 278, 375, 398], "scale_a": [241, 375], "scale_b": [241, 375], "zp_a": [241, 255, 375, 398], "zp_b": [241, 277, 375, 436], "a_u8_md": [241, 375], "a_u8_m": [241, 375], "b_s8_md": [241, 375], "b_s8_m": [241, 375], "emb": [241, 375], "anywai": [241, 375], "theori": [241, 375], "postpon": [241, 375], "exercis": [241, 375], "c_f32_md": [241, 375], "matmul_attr": [241, 261, 375, 411], "scales_a_m": [241, 375], "scales_b_m": [241, 375], "zp_a_m": [241, 375], "c_u8_md": [241, 375], "c_u8_m": [241, 375], "compare_f32_and_quantized_matmul": [241, 278, 375], "param_a_min_v": [241, 375], "param_a_max_v": [241, 375], "4f": [241, 259, 375, 407], "param_b_min_v": [241, 375], "param_b_max_v": [241, 375], "threshold_dynamic_q10n": [241, 375], "2f": [241, 244, 375, 379], "_true_": [241, 375], "c_u8_dynamic_q10n": [241, 375], "scale_c_dynamic_q10n": [241, 375], "zp_c_dynamic_q10n": [241, 375], "rc": [241, 245, 375, 380], "logic_error": [241, 245, 248, 251, 253, 255, 375, 380, 383, 388, 389, 398], "matmul_exampl": [242, 261, 278, 377, 411], "densiti": [242, 377], "default_random_engin": [242, 377], "def_gen": [242, 377], "bernoulli_distribut": [242, 377], "b_dist": [242, 377], "is_on": [242, 377], "count_if": [242, 377], "matmul_src_md": [242, 377], "matmul_weights_md": [242, 377], "matmul_dst_md": [242, 377], "npleas": [242, 377], "matmul_src_mem": [242, 377], "matmul_weights_mem": [242, 377], "matmul_dst_mem": [242, 377], "matmul_prim": [242, 261, 377, 411], "wei_packed_md": [242, 377], "nhandl": [242, 278, 302, 303, 319, 377], "get_num_handl": [242, 377, 518], "wei_handl": [242, 377], "wei_buff": [242, 377], "buf_sz": [242, 377], "matmul_arg": [242, 261, 377, 411], "gnmt": [243, 244, 269, 378, 379, 425], "cstring": [243, 244, 269, 425], "dim_t": [243, 244, 278, 379], "src_seq_length_max": [243, 244, 278, 378, 379], "tgt_seq_length_max": [243, 244, 278, 378, 379], "feature_s": [243, 244, 278, 378, 379], "enc_bidir_n_lay": [243, 244, 278, 378, 379], "enc_unidir_n_lay": [243, 244, 278, 378, 379], "dec_n_lay": [243, 244, 278, 378, 379], "lstm_n_gate": [243, 244, 269, 278, 378, 379, 425], "weighted_src_lay": [243, 244, 278], "alignment_model": [243, 244, 278], "exp_sum": [243, 244, 278], "compute_weighted_annot": [243, 244, 278, 378, 379], "weighted_annot": [243, 244, 278, 378, 379], "weights_annot": [243, 244, 278], "enc_dst_lay": [243, 244], "num_weighted_annot": [243, 244], "dnnl_sgemm": [243, 244, 245, 278, 287, 380], "compute_attent": [243, 244, 278, 378, 379], "context_vector": [243, 244, 278], "weights_src_lay": [243, 244, 278], "dec_src_lay": [243, 244, 278], "weights_align": [243, 244, 278], "dst_iter": [243, 244, 269, 284, 378, 425, 532], "src_layer": [243, 244, 269, 284, 378, 379, 425, 532], "weights_yi": [243, 244], "weights_ai": [243, 244], "weighted_dec_src_lay": [243, 244], "alignment_model_ptr": [243, 244], "pragma_omp_parallel_for_collaps": [243, 244, 278], "tanhf": [243, 244], "gemv": [243, 244], "expf": [243, 244], "copy_context": [243, 244, 278, 378, 379], "src_iter": [243, 244, 269, 278, 284, 378, 379, 425, 532], "n_layer": [243, 244, 278], "cpu_engin": [243, 244, 248, 378, 379, 383], "encoder_net": [243, 244, 378, 379], "decoder_net": [243, 244, 378, 379], "encoder_net_arg": [243, 244, 378, 379], "decoder_net_arg": [243, 244, 378, 379], "enc_bidir_src_layer_tz": [243, 244, 378, 379], "enc_bidir_weights_layer_tz": [243, 244, 378, 379], "enc_bidir_weights_iter_tz": [243, 244, 378, 379], "enc_bidir_bias_tz": [243, 244, 378, 379], "enc_bidir_dst_layer_tz": [243, 244, 378, 379], "user_enc_bidir_wei_lay": [243, 244, 378, 379], "user_enc_bidir_wei_it": [243, 244, 378, 379], "user_enc_bidir_bia": [243, 244, 378, 379], "user_enc_bidir_src_layer_md": [243, 244, 378, 379], "user_enc_bidir_wei_layer_md": [243, 244, 378, 379], "user_enc_bidir_wei_iter_md": [243, 244, 378, 379], "user_enc_bidir_bias_md": [243, 244, 378, 379], "user_enc_bidir_src_layer_memori": [243, 244, 378, 379], "user_enc_bidir_wei_layer_memori": [243, 244, 378, 379], "user_enc_bidir_wei_iter_memori": [243, 244, 378, 379], "user_enc_bidir_bias_memori": [243, 244, 378, 379], "enc_bidir_wei_layer_md": [243, 244, 378, 379], "enc_bidir_wei_iter_md": [243, 244, 378, 379], "enc_bidir_dst_layer_md": [243, 244, 378, 379], "enc_bidir_prim_desc": [243, 244, 378, 379], "enc_bidir_wei_layer_memori": [243, 244, 378, 379], "enc_bidir_wei_layer_reorder_pd": [243, 244, 378], "enc_bidir_wei_iter_memori": [243, 244, 378, 379], "enc_bidir_wei_iter_reorder_pd": [243, 244], "enc_bidir_dst_layer_memori": [243, 244, 378, 379], "bi": [243, 244], "user_enc_uni_first_wei_lay": [243, 244, 378, 379], "user_enc_uni_first_wei_it": [243, 244, 378, 379], "user_enc_uni_first_bia": [243, 244, 378, 379], "user_enc_uni_first_wei_layer_dim": [243, 244], "user_enc_uni_first_wei_iter_dim": [243, 244], "user_enc_uni_first_bias_dim": [243, 244], "enc_uni_first_dst_layer_dim": [243, 244], "user_enc_uni_first_wei_layer_md": [243, 244], "user_enc_uni_first_wei_iter_md": [243, 244], "user_enc_uni_first_bias_md": [243, 244, 378, 379], "user_enc_uni_first_wei_layer_memori": [243, 244], "user_enc_uni_first_wei_iter_memori": [243, 244], "user_enc_uni_first_bias_memori": [243, 244, 378, 379], "enc_uni_first_wei_layer_md": [243, 244, 378, 379], "enc_uni_first_wei_iter_md": [243, 244, 378, 379], "enc_uni_first_dst_layer_md": [243, 244, 378, 379], "enc_uni_first_prim_desc": [243, 244, 378, 379], "enc_uni_first_wei_layer_memori": [243, 244, 378, 379], "enc_uni_first_wei_layer_reorder_pd": 243, "enc_uni_first_wei_iter_memori": [243, 244, 378, 379], "enc_uni_first_wei_iter_reorder_pd": 243, "enc_uni_first_dst_layer_memori": [243, 244, 378, 379], "user_enc_uni_wei_lay": [243, 244, 378, 379], "user_enc_uni_wei_it": [243, 244, 378, 379], "user_enc_uni_bia": [243, 244, 378, 379], "user_enc_uni_wei_layer_dim": [243, 244], "user_enc_uni_wei_iter_dim": [243, 244], "user_enc_uni_bias_dim": [243, 244], "enc_dst_layer_dim": [243, 244], "user_enc_uni_wei_layer_md": [243, 244], "user_enc_uni_wei_iter_md": [243, 244], "user_enc_uni_bias_md": [243, 244, 378, 379], "user_enc_uni_wei_layer_memori": [243, 244], "user_enc_uni_wei_iter_memori": [243, 244], "user_enc_uni_bias_memori": [243, 244, 378, 379], "enc_uni_wei_layer_md": [243, 244, 378, 379], "enc_uni_wei_iter_md": [243, 244, 378, 379], "enc_dst_layer_md": [243, 244, 378, 379], "enc_uni_prim_desc": [243, 244, 378, 379], "enc_uni_wei_layer_memori": [243, 244, 378, 379], "enc_uni_wei_layer_reorder_pd": [243, 244], "enc_uni_wei_iter_memori": [243, 244, 378, 379], "enc_uni_wei_iter_reorder_pd": [243, 244], "enc_dst_layer_memori": [243, 244, 378, 379], "dec": [243, 244], "user_dec_wei_lay": [243, 244, 378, 379], "user_dec_wei_it": [243, 244, 378, 379], "user_dec_bia": [243, 244, 378, 379], "user_dec_dst": [243, 378], "user_weights_attention_src_lay": [243, 244, 378, 379], "user_weights_annot": [243, 244, 378, 379], "user_weights_align": [243, 244, 378, 379], "user_dec_wei_layer_dim": [243, 244, 378, 379], "user_dec_wei_iter_dim": [243, 244, 378, 379], "user_dec_bias_dim": [243, 244, 378, 379], "dec_src_layer_dim": [243, 244, 378, 379], "dec_dst_layer_dim": [243, 244, 378, 379], "dec_dst_iter_c_dim": [243, 244, 378, 379], "noctx": [243, 244], "dec_dst_iter_dim": [243, 244, 378, 379], "dec_dst_iter_noctx_dim": [243, 244, 378, 379], "user_dec_wei_layer_md": [243, 244, 378, 379], "user_dec_wei_iter_md": [243, 244, 378, 379], "user_dec_bias_md": [243, 244, 378, 379], "dec_dst_layer_md": [243, 244, 378, 379], "dec_src_layer_md": [243, 244, 378, 379], "dec_dst_iter_md": [243, 244, 378, 379], "dec_dst_iter_c_md": [243, 244, 378, 379], "user_dec_wei_layer_memori": [243, 244, 378, 379], "user_dec_wei_iter_memori": [243, 244, 378, 379], "user_dec_bias_memori": [243, 244, 378, 379], "user_dec_dst_layer_memori": [243, 378], "dec_src_layer_memori": [243, 244, 378, 379], "dec_dst_iter_c_memori": [243, 244, 378, 379], "dec_wei_layer_md": [243, 244, 378], "dec_wei_iter_md": [243, 244, 378], "dec_dst_iter_memori": [243, 244, 378, 379], "dec_dst_iter_noctx_md": [243, 244, 378, 379], "dec_ctx_prim_desc": [243, 244, 378, 379], "dec_wei_layer_memori": [243, 244, 378, 379], "dec_wei_layer_reorder_pd": [243, 244, 378, 379], "dec_wei_iter_memori": [243, 244, 378], "dec_wei_iter_reorder_pd": [243, 244, 378], "enc": [243, 244], "ano": [243, 244], "init": [243, 244, 251, 253, 263, 389], "src_att_layer_handl": [243, 244, 378, 379], "src_att_iter_handl": [243, 244, 378, 379], "att": [243, 244], "dst_layer_handl": [243, 244, 378, 379], "compute_sum_of_row": [244, 278, 379], "col": [244, 278], "a_reduc": [244, 278], "weights_src_layer_scal": [244, 278], "dec_src_layer_scal": [244, 278], "dec_src_layer_shift": [244, 278], "tnc_offset": 244, "max_idx": 244, "max_idx_v": 244, "data_shift": [244, 379], "data_scal": [244, 379], "weights_scale_mask": [244, 379], "weights_scal": [244, 379], "halv": [244, 379], "scales_half": [244, 379], "65": [244, 379], "3f": [244, 265, 379, 417], "enc_bidir_src_layer_md": [244, 379], "attri": 244, "enc_bidir_src_layer_memori": [244, 379], "enc_bidir_src_layer_reorder_pd": [244, 379], "weights_attention_scal": [244, 379], "dec_dst": [244, 379], "dec_src_it": [244, 378], "dec_dst_it": [244, 378, 379], "dec_dst_layer_memori": [244, 379], "weights_attention_sum_row": [244, 379], "s8u8s32": [244, 379], "tight": [245, 380], "difficult": [245, 380], "finit": [245, 380], "tl2": [245, 380], "trelative_error": [245, 380], "taccuraci": [245, 380], "number_of_run": [245, 255, 277, 278, 380, 398, 436], "fixed_beta": [245, 278, 380], "_dynamic_": [245, 380], "dynamic_matmul_cr": [245, 278, 380], "a_shap": [245, 380], "b_shape": [245, 380], "c_shape": [245, 380], "a_strid": [245, 380], "b_stride": [245, 380], "c_stride": [245, 380], "earlier": [245, 380, 388, 432], "dynamic_matmul_execut": [245, 278, 380], "transa": [245, 278, 287, 320, 342, 348, 380], "transb": [245, 278, 287, 320, 342, 348, 380], "translat": [245, 380], "tolow": [245, 380], "a_m": [245, 380], "b_m": [245, 380], "c_m": [245, 380], "alpha_m": [245, 380], "sgemm_and_matmul_with_param": [245, 278, 380], "c_sgemm": [245, 380], "c_dynamic_matmul": [245, 380], "dynamic_matmul": [245, 380], "diverg": [245, 380], "sgemm_and_matmul": [245, 278, 380], "cpu_single_op_partition_tutori": 246, "src0_dim": [246, 275], "src1_dim": [246, 275], "matmul_src0_desc": [246, 275, 392, 395], "matmul_src1_desc": [246, 275, 392, 395], "matmul_dst_desc": [246, 275, 392, 395], "matmul_src0": [246, 275], "matmul_src1": [246, 275], "matmul_dst": [246, 275], "n_dim": [247, 278, 382], "n_elem": [247, 382], "complain_example_error_and_exit": [247, 278, 382], "find_neg": [247, 248, 278, 382, 383], "engine_cpu": [247, 382], "engine_gpu": [247, 382], "validate_engine_kind": [247, 248, 275, 278, 382, 383], "tz": [247, 248, 382, 383], "m_cpu_md": [247, 382], "m_gpu_md": [247, 382], "m_cpu": [247, 248, 382, 383], "m_gpu": [247, 248, 382, 383], "r1_pd": [247, 382], "r1": [247, 248, 382, 383], "r2_pd": [247, 382], "r2": [247, 248, 382, 383], "stream_gpu": [247, 248, 382, 383], "r1_arg": [247, 382], "relu_arg": [247, 382], "r2_arg": [247, 382], "prologu": [248, 251, 253, 263, 274], "nelem": 248, "cross_engine_reorder_tutori": 248, "gpu_engin": [248, 383], "deconvolution_exampl": [249, 278, 384], "revers": [249, 384], "deconv_src_md": [249, 384], "deconv_weights_md": [249, 384], "deconv_dst_md": [249, 384], "deconv_op": [249, 384], "deconv_attr": [249, 384], "deconv_pd": [249, 384], "deconvolution_forward": [249, 292, 342, 384, 462, 464, 530], "deconv_src_mem": [249, 384], "deconv_weights_mem": [249, 384], "deconv_dst_mem": [249, 384], "deconv_prim": [249, 384], "deconv_arg": [249, 384], "eltwise_exampl": [250, 278, 386], "eltwise_pd": [250, 386], "eltwise_prim": [250, 386], "eltwise_arg": [250, 386], "dnnl_debug": [251, 274, 383, 388, 389, 432], "getting_started_tutori": 251, "image_s": [251, 388], "alt_src_md": [251, 388], "obj": [251, 388], "relu_imag": [251, 388], "caught": [251, 274, 388, 432], "tstatu": [251, 274, 388, 432], "dnnl_status2str": [251, 274, 278, 388, 432], "tmessag": [251, 274, 388, 432], "cl_ext": [252, 393], "ocl_getting_started_tutori": 252, "allocate_ocl_graph_mem": [252, 278], "ocl_check": [253, 278, 389], "cl_int": 253, "cl_success": 253, "__file__": 253, "__line__": 253, "cl_kernel": [253, 278, 389], "create_init_opencl_kernel": [253, 278, 389], "ocl_ctx": [253, 278], "kernel_nam": [253, 278, 389], "ocl_cod": [253, 278, 389], "err": 253, "cl_program": 253, "ocl_program": 253, "clcreateprogramwithsourc": 253, "clbuildprogram": 253, "ocl_kernel": 253, "clcreatekernel": 253, "clreleaseprogram": 253, "gpu_opencl_interop_tutori": 253, "tz_dim": [253, 269, 274, 389, 425, 432], "mem_d": [253, 274, 389, 432], "__kernel": [253, 389], "__global": [253, 389], "get_global_id": [253, 389], "oclkernel": 253, "ocl_init_kernel": [253, 389], "oclexecut": 253, "ocl_buf": [253, 389], "clsetkernelarg": [253, 389], "clenqueuendrangekernel": [253, 389], "mem_data": [253, 389], "clreleasekernel": 253, "group_normalization_exampl": [254, 278, 396], "28": [254, 396, 414], "gnorm_pd": [254, 396], "gnorm_prim": [254, 396], "gnorm_arg": [254, 396], "uniform_int_distribut": [255, 398], "sc_a": [255, 398], "sc_b": [255, 277, 398, 436], "sc_c": [255, 398], "matmul_pd_cr": [255, 277, 278, 398, 436], "prepare_input": [255, 277, 278, 398, 436], "a_u8_mem": [255, 278, 398], "sc_a_mem": [255, 278, 398], "sc_b_mem": [255, 277, 278, 398, 436], "sc_c_mem": [255, 278, 398], "zp_a_mem": [255, 278, 398], "zp_c_mem": [255, 278, 398], "25f": [255, 398], "40": [255, 398], "sanity_check": [255, 278, 398], "c_u8_mem": [255, 278, 398], "tquantiz": [255, 398], "twhich": [255, 398], "b_s8_mem": [255, 277, 278, 398, 436], "meaning": [255, 277, 398, 436], "inner_product_exampl": [256, 278, 400], "inner_product_weights_md": [256, 400], "inner_product_op": [256, 400], "inner_product_attr": [256, 400], "inner_product_pd": [256, 400], "inner_product_weights_mem": [256, 400], "inner_product_prim": [256, 400], "inner_product_arg": [256, 400], "layer_normalization_exampl": [257, 278, 402], "lnorm_pd": [257, 402], "lnorm_prim": [257, 402], "lnorm_arg": [257, 402], "lbr_gru_exampl": [258, 278, 404], "weights_layer_dim": [258, 404], "weights_iter_dim": [258, 404], "dst_layer_dim": [258, 276, 404, 434], "dst_iter_dim": [258, 276, 404, 434], "dst_iter_data": [258, 276, 404, 434], "weights_layer_md": [258, 276, 404, 434], "weights_iter_md": [258, 276, 404, 434], "weights_layer_mem": [258, 276, 404, 434], "lbr_gru_prim": [258, 404], "lbr_gru_arg": [258, 404], "lrn_exampl": [259, 278, 407], "lrn_prim": [259, 407], "lrn_arg": [259, 407], "lstm_exampl": [260, 278, 409], "lstm_weights_layer_md": [260, 409], "lstm_weights_iter_md": [260, 409], "src_iter_c_md": [260, 409], "dst_iter_c_md": [260, 409], "lstm_weights_layer_mem": [260, 409], "lstm_weights_iter_mem": [260, 409], "src_iter_c_mem": [260, 409], "dst_iter_c_mem": [260, 409], "lstm_prim": [260, 409], "lstm_arg": [260, 409], "weights_mem": [261, 262, 411, 413], "matmul_op": [261, 411], "sstream": 262, "memory_format_propagation_tutori": 262, "3x3": [262, 413], "need_reorder_src": [262, 413], "need_reorder_weight": [262, 413], "need_reorder_dst": [262, 413], "pool_dst_mem": [262, 413], "reorder_src": [262, 413], "reorder_weight": [262, 413], "conv_scratchpad_mem": [262, 413], "pool_scratchpad_mem": [262, 413], "reorder_dst": [262, 413], "init_data": [263, 278], "create_and_execute_relu": [263, 278, 414], "create_attr_with_relu_post_op": [263, 278, 414], "naiv": 263, "conv_relu_na": [263, 414], "user_wei": [263, 414], "mem_desc": 263, "conv_wei_md": [263, 414], "conv_primit": 263, "conv_relu_block": [263, 414], "implementation2": 263, "condition": 263, "r_pd": [263, 414], "conv_wei": [263, 414], "conv_dst": [263, 414], "prim_descriptor": 263, "conv_relu_fus": [263, 414], "prim_desc": 263, "implementation3": 263, "synthet": [263, 414], "pooling_exampl": [264, 278, 415], "kernel_dim": [264, 415], "pooling_pd": [264, 415], "pooling_prim": [264, 415], "pooling_arg": [264, 415], "prelu_exampl": [265, 278, 417], "prelu_pd": [265, 417], "prelu_forward": [265, 305, 342, 417, 526, 530], "prelu_weights_mem": [265, 417], "prelu_prim": [265, 417], "prelu_arg": [265, 417], "reduction_exampl": [266, 278, 419], "reduction_pd": [266, 419], "reduction_prim": [266, 419], "reduction_arg": [266, 419], "reorder_exampl": [267, 278, 421], "ic_dim": [267, 421], "reorder_attr": [267, 421], "dst_scales_mem": [267, 421], "reorder_prim": [267, 421], "reorder_arg": [267, 421], "resampling_exampl": [268, 278, 423], "350": [268, 423], "resampling_pd": [268, 423], "resampling_forward": [268, 312, 342, 423, 530, 541], "resampling_prim": [268, 423], "resampling_arg": [268, 423], "n0": [269, 278, 425], "rand": [269, 278, 425], "31": [269, 278, 425], "n1": [269, 278, 425], "chunk": [269, 425], "compact": [269, 414, 425], "leftmost": [269, 425], "leftmost_batch": [269, 278, 425], "rightmost_batch": [269, 278, 425], "leftmost_seq_length": [269, 278, 425], "rightmost_seq_length": [269, 278, 425], "common_feature_s": [269, 278, 425], "characterist": [269, 388, 425], "common_n_lay": [269, 278, 425], "is_train": [269, 425], "fwd_inf_train": [269, 425], "fwd_net": [269, 425], "bwd_net": [269, 425], "shorter": [269, 425], "net_src_dim": [269, 425], "leftmost_src_layer_dim": [269, 425], "rightmost_src_layer_dim": [269, 425], "common_weights_layer_dim": [269, 425], "common_weights_iter_dim": [269, 425], "common_bias_dim": [269, 425], "leftmost_dst_layer_dim": [269, 425], "rightmost_dst_layer_dim": [269, 425], "arrang": [269, 425], "our": [269, 389, 413, 425, 432], "leftmost_dst_iter_dim": [269, 425], "leftmost_dst_iter_c_dim": [269, 425], "rightmost_src_iter_dim": [269, 425], "rightmost_src_iter_c_dim": [269, 425], "tz_volum": [269, 425], "suppli": [269, 322, 425], "formatted_md": [269, 425], "generic_md": [269, 425], "studi": [269, 425], "suggest": [269, 425], "leftmost_dst_layer_memori": [269, 425], "rightmost_dst_layer_memori": [269, 425], "net_src_memori": [269, 425], "accommod": [269, 413, 425], "user_leftmost_src_layer_md": [269, 425], "user_rightmost_src_layer_md": [269, 425], "leftmost_src_layer_memori": [269, 425], "rightmost_src_layer_memori": [269, 425], "ll": [269, 425], "user_common_weights_lay": [269, 425], "user_common_weights_layer_memori": [269, 425], "user_common_weights_it": [269, 425], "user_common_weights_iter_memori": [269, 425], "user_common_bia": [269, 425], "user_common_bias_memori": [269, 425], "user_leftmost_dst_lay": [269, 425], "user_leftmost_dst_layer_memori": [269, 425], "user_rightmost_dst_lay": [269, 425], "user_rightmost_dst_layer_memori": [269, 425], "leftmost_prim_desc": [269, 425], "aprop_kind": [269, 425, 443, 445, 447, 449, 454, 460, 466, 470, 478, 480, 482, 484, 492, 494, 496, 498, 500, 502, 504, 508, 510, 512, 522, 528, 534, 539, 543, 544, 548, 552, 556, 564, 566], "leftmost_dst_iter_memori": [269, 425], "leftmost_dst_iter_c_memori": [269, 425], "rightmost_src_iter_md": [269, 425], "rightmost_src_iter_memori": [269, 425], "rightmost_src_iter_c_md": [269, 425], "rightmost_src_iter_c_memori": [269, 425], "rightmost_prim_desc": [269, 425], "rigthmost": [269, 425], "common_weights_layer_memori": [269, 425], "common_weights_iter_memori": [269, 425], "common_bias_memori": [269, 425], "workspace_primitive_desc": [269, 425], "commun": [269, 425], "create_w": [269, 425], "leftmost_workspace_memori": [269, 425], "rightmost_workspace_memori": [269, 425], "leftmost_lay": [269, 425], "rightmost_lay": [269, 425], "net_diff_src": [269, 425], "net_diff_src_memori": [269, 425], "user_leftmost_diff_src_layer_md": [269, 425], "user_rightmost_diff_src_layer_md": [269, 425], "leftmost_diff_src_layer_memori": [269, 425], "rightmost_diff_src_layer_memori": [269, 425], "backpropag": [269, 425], "user_common_diff_weights_lay": [269, 425], "user_common_diff_weights_layer_memori": [269, 425], "user_common_diff_bia": [269, 425], "user_common_diff_bias_memori": [269, 425], "net_diff_dst_dim": [269, 425], "net_diff_dst_memori": [269, 425], "diff_dst_lay": [269, 425], "user_leftmost_diff_dst_layer_md": [269, 425], "user_rightmost_diff_dst_layer_md": [269, 425], "leftmost_diff_dst_layer_memori": [269, 425], "rightmost_diff_dst_layer_memori": [269, 425], "leftmost_bwd_prim_desc": [269, 425], "diff_src_layer_desc": [269, 278, 313, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "diff_src_iter_desc": [269, 278, 313, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "diff_src_iter_c_desc": [269, 278, 313, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "diff_weights_layer_desc": [269, 278, 313, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "diff_weights_iter_desc": [269, 278, 313, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "diff_bias_desc": [269, 278, 290, 292, 297, 313, 425, 443, 445, 458, 464, 482, 484, 490, 498, 500, 502, 504, 510, 512, 544, 564, 566], "diff_dst_layer_desc": [269, 278, 313, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "diff_dst_iter_desc": [269, 278, 313, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "diff_dst_iter_c_desc": [269, 278, 313, 425, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "leftmost_diff_dst_iter_memori": [269, 425], "leftmost_diff_dst_iter_c_memori": [269, 425], "rightmost_diff_src_iter_md": [269, 425], "rightmost_diff_src_iter_memori": [269, 425], "rightmost_diff_src_iter_c_md": [269, 425], "rightmost_diff_src_iter_c_memori": [269, 425], "rightmost_bwd_prim_desc": [269, 425], "leftmost_src_layer_bwd_memori": [269, 425], "rightmost_src_layer_bwd_memori": [269, 425], "common_weights_layer_bwd_memori": [269, 425], "common_weights_iter_bwd_memori": [269, 425], "common_bias_bwd_memori": [269, 425], "common_diff_weights_layer_memori": [269, 425], "reorder_common_diff_weights_lay": [269, 425], "common_diff_bias_memori": [269, 425], "reorder_common_diff_bia": [269, 425], "dst_layer": [269, 284, 425, 532], "leftmost_dst_layer_bwd_memori": [269, 425], "rightmost_dst_layer_bwd_memori": [269, 425], "common_diff_weights_iter_memori": [269, 425], "leftmost_dst_iter_bwd_memori": [269, 425], "leftmost_dst_iter_c_bwd_memori": [269, 425], "rightmost_layer_bwd": [269, 425], "leftmost_layer_bwd": [269, 425], "shuffle_exampl": [270, 278, 426], "shuffle_axi": [270, 426], "shuffle_pd": [270, 426], "shuffle_forward": [270, 315, 342, 426, 530, 546], "shuffle_prim": [270, 426], "shuffle_arg": [270, 426], "softmax_exampl": [271, 278, 428], "softmax_pd": [271, 428], "softmax_forward": [271, 316, 342, 428, 530, 550], "softmax_prim": [271, 428], "softmax_arg": [271, 428], "sum_exampl": [272, 278, 430], "sum_pd": [272, 430], "sum_prim": [272, 430], "sum_arg": [272, 430], "dnnl_graph_sycl": [273, 275, 394, 395], "sycl_getting_started_tutori": 273, "make_alloc": [273, 275, 325, 344, 345, 394, 395], "sycl_malloc_wrapp": [273, 275, 278, 394, 395], "sycl_free_wrapp": [273, 275, 278, 394, 395], "gpu_selector_v": [273, 275, 394, 395], "cpu_selector_v": [273, 394, 395], "sycl_get_start": 273, "allocate_sycl_graph_mem": [273, 275, 278], "__has_includ": [274, 432], "elif": [274, 432], "kernel_tag": [274, 432], "sycl_interop_buffer_tutori": 274, "buf": [274, 278, 333, 337], "sycl_buf": [274, 432], "handler": [274, 432], "cgh": [274, 432], "get_access": [274, 432], "host_acc": [274, 432], "get_host_access": [274, 432], "exp_valu": [274, 432], "gpu_single_op_partition_tutori": 275, "vanilla_rnn_exampl": [276, 278, 434], "vanilla_rnn_prim": [276, 434], "vanilla_rnn_arg": [276, 434], "apply_to_int": [277, 278, 284, 436, 532], "zp_b_mem": [277, 278, 436], "num_g": [277, 436], "n_group": [277, 436], "c_f32_mem": [277, 436], "dnnl_memory_desc": [278, 302], "dnnl_memori": [278, 302], "const_dnnl_memory_t": [278, 302, 303, 319], "dnnl_primitive_desc": [278, 308], "dnnl_primitive_attr": [278, 284], "const_dnnl_primitive_attr_t": [278, 284, 285, 286, 289, 290, 292, 293, 296, 297, 299, 300, 301, 304, 305, 308, 310, 311, 312, 313, 315, 316, 318], "dnnl_post_op": [278, 284], "const_dnnl_post_ops_t": [278, 284, 322], "dnnl_primit": [278, 308], "const_dnnl_primitive_t": [278, 303, 308, 319], "dnnl_engin": [278, 294], "dnnl_stream": [278, 317], "const_dnnl_stream_t": [278, 317], "dnnl_graph_ocl_allocate_f": [278, 333, 344], "dnnl_graph_ocl_deallocate_f": [278, 333, 344], "dnnl_graph_sycl_allocate_f": [278, 325, 337, 345, 394, 395], "dnnl_graph_sycl_deallocate_f": [278, 325, 337, 345, 394, 395], "dnnl_graph_partit": [278, 335], "const_dnnl_graph_partition_t": [278, 335], "dnnl_graph_graph": [278, 330], "dnnl_graph_graph_t": [278, 330], "const_dnnl_graph_graph_t": [278, 330], "dnnl_graph_op": [278, 334], "dnnl_graph_op_t": [278, 330, 334], "const_dnnl_graph_op_t": [278, 334, 335], "dnnl_graph_alloc": [278, 325], "dnnl_graph_allocator_t": [278, 325, 333, 337], "const_dnnl_graph_allocator_t": [278, 325, 329, 333, 337], "dnnl_graph_compiled_partit": [278, 326], "const_dnnl_graph_compiled_partition_t": [278, 326, 333, 337], "dnnl_graph_tensor": [278, 338], "dnnl_graph_tensor_t": [278, 338], "const_dnnl_graph_tensor_t": [278, 326, 333, 337, 338], "dnnl_ukernel_attr_param": [278, 321], "dnnl_ukernel_attr_params_t": [278, 321], "const_dnnl_ukernel_attr_params_t": [278, 321, 322], "dnnl_brgemm": [278, 322], "dnnl_brgemm_t": [278, 322], "const_dnnl_brgemm_t": [278, 322], "dnnl_transform": [278, 322], "dnnl_transform_t": [278, 322], "const_dnnl_transform_t": [278, 322], "api_kind": 278, "dnnl_accumulation_mode_t": [278, 283, 284, 342], "dnnl_cpu_isa_hints_t": [278, 314], "dnnl_cpu_isa_t": [278, 314], "dnnl_fpmath_mode_t": [278, 284, 295, 330, 342], "dnnl_graph_layout_type_t": [278, 332, 476], "dnnl_graph_op_attr_t": [278, 334], "dnnl_graph_op_kind_t": [278, 334], "dnnl_graph_partition_policy_t": [278, 330, 335], "dnnl_graph_tensor_property_t": [278, 332, 476], "dnnl_normalization_flags_t": [278, 285, 296, 299, 308, 342], "dnnl_ocl_interop_memory_kind_t": [278, 303, 346], "dnnl_pack_type_t": [278, 321, 322], "dnnl_profiling_data_kind_t": [278, 302, 309], "dnnl_prop_kind_t": [278, 284, 285, 290, 292, 293, 296, 297, 299, 300, 304, 305, 308, 312, 313, 315, 316, 342], "dnnl_rnn_flags_t": [278, 313, 342], "dnnl_rounding_mode_t": [278, 284, 342], "dnnl_scratchpad_mode_t": [278, 284, 342], "dnnl_stream_flags_t": [278, 317], "dnnl_sycl_interop_memory_kind_t": [278, 319, 347], "cpu_deletor": 278, "dnnl_graph_inplace_pair_t": [278, 326], "gemm_dims_t": 278, "gqa_dims_t": 278, "mqa_dims_t": 278, "sdpa_dims_t": 278, "sycl_deletor": 278, "simple_memory_pool_t": 278, "min_run": 278, "bnorm_u8_via_binary_postop": [278, 353, 360], "cnn_inference_f32": [278, 353, 363], "cross_engine_reord": [278, 353, 382, 383], "initializer_list": 278, "extra_arg": 278, "fill_random": 278, "fill_mask": 278, "seq_len": [278, 570, 571, 572], "get_type_str": 278, "print_test_cas": 278, "bench_gqa": 278, "time_limit": 278, "bad_arg": 278, "bench": 278, "gqa_perf": 278, "id_to_set_any_layout": 278, "is_input": 278, "ocl_malloc_shar": 278, "ocl_malloc_devic": 278, "ocl_fre": [278, 333, 344], "ocl_memcpi": 278, "make_md": 278, "write_dt": 278, "write_to_dnnl_tensor": 278, "get_mem_pool": 278, "create_alloc": 278, "bench_mqa": 278, "mqa_perf": 278, "bench_sdpa_primit": 278, "bench_sdpa": 278, "sdpa_perf": 278, "size_of": 278, "is_integ": 278, "run_cas": 278, "matmul_perf": 278, "performance_profil": [278, 353, 414], "sycl_usm_tutori": 278, "inference_int8_matmul": [278, 353, 398], "weights_decompression_matmul": [278, 353, 436], "dnnl_api": [278, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338], "dnnl_primitive_desc_next_impl": [278, 308], "existing_primitive_desc": [278, 308], "dnnl_primitive_desc_get_attr": [278, 308], "dnnl_primitive_desc_query_s32": [278, 308], "dnnl_primitive_create_from_cache_blob": [278, 308], "cache_blob": [278, 303, 308, 333, 344, 346, 442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 519, 521, 525, 527, 530, 536, 538, 540, 542, 545, 547, 549, 551, 555, 563, 565], "dnnl_primitive_get_primitive_desc": [278, 308], "dnnl_primitive_get_cache_blob": [278, 308], "dnnl_primitive_attr_clon": [278, 284], "existing_attr": [278, 284], "dropout_desc": [278, 284], "dnnl_primitive_attr_get_fpmath_mod": [278, 284], "dnnl_primitive_attr_set_fpmath_mod": [278, 284], "dnnl_primitive_attr_get_fpmath_mode_v2": [278, 284], "dnnl_primitive_attr_get_determinist": [278, 284], "dnnl_primitive_attr_get_accumulation_mod": [278, 284], "dnnl_primitive_attr_set_accumulation_mod": [278, 284], "dnnl_primitive_attr_get_scratchpad_mod": [278, 284], "dnnl_primitive_attr_set_scal": [278, 284, 532], "group_dim": [278, 284], "dnnl_primitive_attr_set_zero_points_mask": [278, 284, 532], "dnnl_primitive_attr_set_zero_point": [278, 284, 532], "dnnl_primitive_attr_set_round": [278, 284], "dnnl_primitive_attr_get_round": [278, 284], "dnnl_primitive_attr_get_post_op": [278, 284], "dnnl_post_ops_cr": [278, 284], "dnnl_post_ops_clon": [278, 284], "existing_post_op": [278, 284], "dnnl_post_ops_destroi": [278, 284], "dnnl_post_ops_len": [278, 284], "dnnl_post_ops_get_kind": [278, 284], "dnnl_post_ops_append_sum": [278, 284], "dnnl_post_ops_get_params_sum": [278, 284], "dnnl_post_ops_get_params_eltwis": [278, 284], "weights_data_typ": [278, 284, 524], "bias_data_typ": [278, 284, 524], "dst_data_typ": [278, 284, 524], "kernel_s": [278, 284, 524], "stride_s": [278, 284, 524], "padding_l_s": [278, 284, 524], "dnnl_post_ops_get_params_dw": [278, 284], "src1_desc": [278, 284, 286, 451, 524], "dnnl_post_ops_get_params_binari": [278, 284], "dnnl_post_ops_get_params_prelu": [278, 284], "memory_desc": [278, 302, 303, 319, 346, 347], "dnnl_memory_desc_clon": [278, 302], "existing_memory_desc": [278, 302], "dnnl_memory_desc_get_blob": [278, 302], "dnnl_memory_desc_create_with_blob": [278, 302], "dnnl_memory_desc_create_with_csr_encod": [278, 302], "dnnl_memory_desc_create_with_coo_encod": [278, 302], "dnnl_memory_desc_create_with_packed_encod": [278, 302], "dnnl_memory_desc_create_submemori": [278, 302], "parent_memory_desc": [278, 302], "dnnl_memory_desc_reshap": [278, 302], "out_memory_desc": [278, 302], "in_memory_desc": [278, 302], "dnnl_memory_desc_permute_ax": [278, 302], "dnnl_memory_desc_query_v2": [278, 302], "lh": [278, 302], "rh": [278, 302], "dnnl_memory_desc_get_size_v2": [278, 302], "dnnl_data_type_s": [278, 302], "dnnl_memory_create_v2": [278, 302], "dnnl_memory_map_data": [278, 302], "mapped_ptr": [278, 302, 516], "dnnl_memory_map_data_v2": [278, 302], "dnnl_memory_unmap_data": [278, 302], "dnnl_memory_unmap_data_v2": [278, 302], "dnnl_memory_get_data_handle_v2": [278, 302], "dnnl_memory_set_data_handle_v2": [278, 302], "reorder_primitive_desc": [278, 311], "src_engin": [278, 311, 539], "dst_engin": [278, 311, 539], "dnnl_concat_primitive_desc_cr": [278, 289], "concat_primitive_desc": [278, 289], "dnnl_sum_primitive_desc_cr": [278, 318], "sum_primitive_desc": [278, 318], "dnnl_binary_primitive_desc_cr": [278, 286], "src0_desc": [278, 286, 451], "dnnl_convolution_backward_data_primitive_desc_cr": [278, 290], "dnnl_deconvolution_forward_primitive_desc_cr": [278, 292], "dnnl_deconvolution_backward_data_primitive_desc_cr": [278, 292], "dnnl_deconvolution_backward_weights_primitive_desc_cr": [278, 292], "dnnl_shuffle_forward_primitive_desc_cr": [278, 315], "dnnl_shuffle_backward_primitive_desc_cr": [278, 315], "data_desc": [278, 293, 468], "dnnl_softmax_forward_primitive_desc_cr": [278, 316], "softmax_axi": [278, 316], "dnnl_softmax_backward_primitive_desc_cr": [278, 316], "dnnl_prelu_forward_primitive_desc_cr": [278, 305], "dnnl_prelu_backward_primitive_desc_cr": [278, 305], "dnnl_batch_normalization_forward_primitive_desc_cr": [278, 285], "dnnl_batch_normalization_backward_primitive_desc_cr": [278, 285], "dnnl_group_normalization_forward_primitive_desc_cr": [278, 296], "dnnl_group_normalization_backward_primitive_desc_cr": [278, 296], "dnnl_layer_normalization_forward_primitive_desc_cr": [278, 299], "dnnl_layer_normalization_backward_primitive_desc_cr": [278, 299], "dnnl_layer_normalization_forward_primitive_desc_create_v2": [278, 299], "scale_shift_data_typ": [278, 299, 494, 496], "dnnl_layer_normalization_backward_primitive_desc_create_v2": [278, 299], "diff_scale_shift_data_typ": [278, 299, 494], "dnnl_inner_product_forward_primitive_desc_cr": [278, 297], "dnnl_inner_product_backward_data_primitive_desc_cr": [278, 297], "dnnl_inner_product_backward_weights_primitive_desc_cr": [278, 297], "dnnl_primitive_attr_set_rnn_data_qparam": [278, 284], "dnnl_primitive_attr_get_rnn_data_qparam": [278, 284], "dnnl_primitive_attr_set_rnn_weights_qparam": [278, 284], "dnnl_primitive_attr_get_rnn_weights_qparam": [278, 284], "dnnl_primitive_attr_set_rnn_weights_projection_qparam": [278, 284], "dnnl_primitive_attr_get_rnn_weights_projection_qparam": [278, 284], "dnnl_vanilla_rnn_forward_primitive_desc_cr": [278, 284, 313], "dnnl_vanilla_rnn_backward_primitive_desc_cr": [278, 313], "dnnl_lstm_forward_primitive_desc_cr": [278, 313], "dnnl_lstm_backward_primitive_desc_cr": [278, 313], "diff_weights_peephole_desc": [278, 313, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "diff_weights_projection_desc": [278, 313, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "dnnl_gru_forward_primitive_desc_cr": [278, 313], "dnnl_gru_backward_primitive_desc_cr": [278, 313], "dnnl_lbr_gru_forward_primitive_desc_cr": [278, 313], "dnnl_lbr_gru_backward_primitive_desc_cr": [278, 313], "dnnl_augru_forward_primitive_desc_cr": [278, 313], "dnnl_augru_backward_primitive_desc_cr": [278, 313], "diff_attention_desc": [278, 313, 443, 498], "dnnl_lbr_augru_forward_primitive_desc_cr": [278, 313], "dnnl_lbr_augru_backward_primitive_desc_cr": [278, 313], "dnnl_matmul_primitive_desc_cr": [278, 301], "dnnl_resampling_forward_primitive_desc_cr": [278, 312], "dnnl_resampling_backward_primitive_desc_cr": [278, 312], "dnnl_reduction_primitive_desc_cr": [278, 310], "dnnl_get_primitive_cache_capac": [278, 306], "dir": [278, 313, 314, 342], "dnnl_set_max_cpu_isa": [278, 314], "dnnl_get_effective_cpu_isa": [278, 314], "dnnl_set_cpu_isa_hint": [278, 314], "isa_hint": [278, 314, 342], "dnnl_get_cpu_isa_hint": [278, 314], "dnnl_reset_profil": [278, 309], "dnnl_query_profiling_data": [278, 309], "data_kind": [278, 309, 342], "num_entri": [278, 309], "offsetc": [278, 287, 320, 342, 348], "ao": [278, 287, 320, 342, 348], "bo": [278, 287, 320, 342, 348], "dnnl_dt2str": 278, "dnnl_fpmath_mode2str": 278, "dnnl_accumulation_mode2str": 278, "dnnl_engine_kind2str": 278, "dnnl_sparse_encoding2str": 278, "dnnl_fmt_tag2str": 278, "dnnl_prop_kind2str": 278, "dnnl_prim_kind2str": 278, "dnnl_alg_kind2str": 278, "dnnl_rnn_flags2str": 278, "dnnl_rnn_direction2str": 278, "dnnl_scratchpad_mode2str": 278, "dnnl_rounding_mode2str": 278, "dnnl_cpu_isa2str": 278, "dnnl_cpu_isa_hints2str": 278, "dnnl_runtime2str": 278, "dnnl_fmt_kind2str": 278, "dnnl_ocl_interop_memory_cr": [278, 303], "dnnl_ocl_interop_memory_create_v2": [278, 303], "dnnl_ocl_interop_memory_get_memory_kind": [278, 303], "dnnl_ocl_interop_memory_get_mem_object": [278, 303], "mem_object": [278, 303, 346], "dnnl_ocl_interop_memory_set_mem_object": [278, 303], "dnnl_ocl_interop_engine_get_cache_blob_id": [278, 303], "dnnl_ocl_interop_engine_get_cache_blob": [278, 303, 346], "dnnl_ocl_interop_engine_create_from_cache_blob": [278, 303, 333], "dnnl_ocl_interop_engine_cr": [278, 303, 333], "dnnl_ocl_interop_engine_get_context": [278, 303], "dnnl_ocl_interop_get_devic": [278, 303], "dnnl_ocl_interop_stream_cr": [278, 303], "dnnl_ocl_interop_stream_get_command_queu": [278, 303], "dnnl_ocl_interop_primitive_execut": [278, 303], "dep": [278, 303, 319, 333, 337, 344, 345, 346, 347], "ndep": [278, 303, 333], "return_ev": [278, 303, 319, 333], "dnnl_sycl_interop_engine_cr": [278, 319], "dnnl_sycl_interop_engine_get_context": [278, 319], "dnnl_sycl_interop_engine_get_devic": [278, 319], "dnnl_sycl_interop_memory_cr": [278, 319], "dnnl_sycl_interop_memory_create_v2": [278, 319], "dnnl_sycl_interop_memory_get_memory_kind": [278, 319], "dnnl_sycl_interop_memory_set_buff": [278, 319], "dnnl_sycl_interop_stream_cr": [278, 319], "dnnl_sycl_interop_stream_get_queu": [278, 319], "dnnl_sycl_interop_primitive_execut": [278, 319], "dnnl_threadpool_interop_stream_cr": [278, 320], "dnnl_threadpool_interop_stream_get_threadpool": [278, 320], "dnnl_threadpool_interop_set_max_concurr": [278, 320], "max_concurr": [278, 320], "dnnl_threadpool_interop_get_max_concurr": [278, 320], "dnnl_threadpool_interop_sgemm": [278, 320], "dnnl_threadpool_interop_gemm_u8s8s32": [278, 320], "dnnl_threadpool_interop_gemm_s8s8s32": [278, 320], "dnnl_engine_get_count": [278, 294], "dnnl_engine_get_kind": [278, 294], "dnnl_stream_get_engin": [278, 317], "dnnl_get_default_fpmath_mod": [278, 295], "dnnl_graph_allocator_cr": [278, 325], "dnnl_graph_allocator_destroi": [278, 325], "dnnl_graph_make_engine_with_alloc": [278, 329], "dnnl_graph_logical_tensor_init": [278, 332], "dnnl_graph_logical_tensor_init_with_dim": [278, 332], "dnnl_graph_logical_tensor_init_with_strid": [278, 332], "dnnl_graph_logical_tensor_get_mem_s": [278, 332], "dnnl_graph_logical_tensor_is_equ": [278, 332], "lt1": [278, 332], "lt2": [278, 332], "dnnl_graph_tensor_cr": [278, 338], "dnnl_graph_tensor_destroi": [278, 338], "dnnl_graph_tensor_get_data_handl": [278, 338], "dnnl_graph_tensor_set_data_handl": [278, 338], "dnnl_graph_tensor_get_engin": [278, 338], "dnnl_graph_tensor_get_logical_tensor": [278, 338], "dnnl_graph_op_cr": [278, 334], "dnnl_graph_op_destroi": [278, 334], "dnnl_graph_op_add_input": [278, 334], "dnnl_graph_op_add_output": [278, 334], "dnnl_graph_op_set_attr_f32": [278, 334], "value_len": [278, 334], "dnnl_graph_op_set_attr_bool": [278, 334], "dnnl_graph_op_set_attr_s64": [278, 334], "dnnl_graph_op_set_attr_str": [278, 334], "dnnl_graph_op_get_id": [278, 334], "dnnl_graph_op_get_kind": [278, 334], "dnnl_graph_partition_create_with_op": [278, 335], "dnnl_graph_partition_destroi": [278, 330, 335], "dnnl_graph_partition_get_op_num": [278, 335], "num": [278, 330, 335], "dnnl_graph_partition_get_op": [278, 335], "dnnl_graph_partition_get_id": [278, 335], "dnnl_graph_partition_compil": [278, 335], "in_num": [278, 335], "out_num": [278, 335], "dnnl_graph_partition_get_input_ports_num": [278, 335], "dnnl_graph_partition_get_input_port": [278, 335], "dnnl_graph_partition_get_output_ports_num": [278, 335], "dnnl_graph_partition_get_output_port": [278, 335], "dnnl_graph_partition_is_support": [278, 335], "dnnl_graph_partition_get_engine_kind": [278, 335], "dnnl_graph_compiled_partition_cr": [278, 326], "dnnl_graph_compiled_partition_execut": [278, 326], "num_input": [278, 326, 333, 337], "num_output": [278, 326, 333, 337], "dnnl_graph_compiled_partition_destroi": [278, 326], "dnnl_graph_compiled_partition_query_logical_tensor": [278, 326], "dnnl_graph_compiled_partition_get_inplace_port": [278, 326], "num_inplace_pair": [278, 326], "inplace_pair": [278, 326], "dnnl_graph_graph_cr": [278, 330], "dnnl_graph_graph_create_with_fpmath_mod": [278, 330], "dnnl_graph_graph_destroi": [278, 330], "dnnl_graph_add_op": [278, 330], "dnnl_graph_graph_fin": [278, 330], "dnnl_graph_graph_is_fin": [278, 330], "dnnl_graph_graph_filt": [278, 330], "dnnl_graph_graph_get_partition_num": [278, 330], "dnnl_graph_graph_get_partit": [278, 330], "dnnl_graph_get_compiled_partition_cache_capac": [278, 327], "dnnl_graph_set_compiled_partition_cache_capac": [278, 327], "dnnl_graph_set_constant_tensor_cach": [278, 328], "dnnl_graph_get_constant_tensor_cach": [278, 328], "eng_kind": [278, 328], "dnnl_graph_ocl_interop_allocator_cr": [278, 333], "ocl_malloc": [278, 333, 344], "dnnl_graph_ocl_interop_make_engine_with_alloc": [278, 333], "dnnl_graph_ocl_interop_make_engine_from_cache_blob_with_alloc": [278, 333], "dnnl_graph_ocl_interop_compiled_partition_execut": [278, 333], "dnnl_graph_sycl_interop_allocator_cr": [278, 337], "sycl_malloc": [278, 337, 345], "sycl_fre": [278, 337, 345], "dnnl_graph_sycl_interop_make_engine_with_alloc": [278, 337], "dnnl_graph_sycl_interop_compiled_partition_execut": [278, 337], "sycl_ev": [278, 337], "dnnl_ukernel_attr_params_cr": [278, 321], "dnnl_ukernel_attr_params_set_post_ops_arg": [278, 321], "post_ops_arg": [278, 321, 560], "dnnl_ukernel_attr_params_set_a_scal": [278, 321], "a_scal": [278, 321, 560], "dnnl_ukernel_attr_params_set_b_scal": [278, 321], "b_scale": [278, 321, 560], "dnnl_ukernel_attr_params_set_d_scal": [278, 321], "d_scale": [278, 321, 560], "dnnl_ukernel_attr_params_destroi": [278, 321], "dnnl_brgemm_creat": [278, 322], "dnnl_brgemm_set_add_c": [278, 322], "add_c": [278, 322, 561], "dnnl_brgemm_set_post_op": [278, 322], "dnnl_brgemm_set_a_scal": [278, 322], "a_scale_mask": [278, 322, 561], "dnnl_brgemm_set_b_scal": [278, 321, 322], "b_scale_mask": [278, 322, 561], "dnnl_brgemm_set_d_scal": [278, 322], "d_scale_mask": [278, 322, 561], "dnnl_brgemm_fin": [278, 322], "dnnl_brgemm_get_b_pack_typ": [278, 322], "dnnl_brgemm_get_scratchpad_s": [278, 322], "dnnl_brgemm_set_hw_context": [278, 322], "dnnl_brgemm_release_hw_context": [278, 322], "dnnl_brgemm_gener": [278, 322], "dnnl_brgemm_execut": [278, 322], "dnnl_brgemm_execute_postop": [278, 322], "d_ptr": [278, 322], "dnnl_brgemm_destroi": [278, 322], "dnnl_transform_cr": [278, 322], "dnnl_transform_gener": [278, 322], "dnnl_transform_execut": [278, 322], "in_ptr": [278, 322], "out_ptr": [278, 322], "dnnl_transform_destroi": [278, 322], "complain_dnnl_error_and_exit": 278, "complain_fmt": 278, "dnnl_arg_attr_multiple_post_op_bas": [278, 308], "dnnl_arg_attr_output_scal": [278, 308], "dnnl_arg_diff_augru_attent": [278, 308], "dnnl_arg_diff_dst_0": [278, 308], "dnnl_arg_diff_dst_1": [278, 308], "dnnl_arg_diff_dst_2": [278, 308], "dnnl_arg_diff_src_0": [278, 308], "dnnl_arg_diff_src_2": [278, 308], "dnnl_arg_diff_src_3": [278, 308], "dnnl_arg_diff_weights_0": [278, 308], "dnnl_arg_diff_weights_1": [278, 308], "dnnl_arg_diff_weights_2": [278, 308], "dnnl_arg_diff_weights_3": [278, 308], "dnnl_arg_dst_0": [278, 308], "dnnl_arg_dst_1": [278, 308], "dnnl_arg_dst_2": [278, 308], "dnnl_arg_multiple_dst": [278, 308], "dnnl_arg_src_2": [278, 308], "dnnl_arg_src_3": [278, 308], "dnnl_arg_undef": [278, 308], "dnnl_arg_weights_0": [278, 308], "dnnl_arg_weights_1": [278, 308], "dnnl_arg_weights_2": [278, 308], "dnnl_arg_weights_3": [278, 308], "dnnl_enable_except": 278, "dnnl_jit_profile_linux_jitdump": [278, 314], "dnnl_jit_profile_linux_jitdump_use_tsc": [278, 314], "dnnl_jit_profile_linux_perf": [278, 314], "dnnl_jit_profile_linux_perfmap": [278, 314], "dnnl_jit_profile_non": [278, 314], "dnnl_jit_profile_vtun": [278, 314], "dnnl_runtime_f32_v": [278, 302, 380], "dnnl_runtime_s32_v": [278, 302], "dnnl_runtime_size_v": [278, 302], "dnnl_throw_error": 278, "pragma_macro": 278, "type_cas": 278, "bla": [282, 320, 348, 557], "convert_to_c": [283, 284, 294, 295, 308, 313, 342, 346, 347, 516], "aalgorithm": [284, 342, 451, 456, 458, 460, 462, 464, 466, 468, 470, 506, 508, 520, 522, 524, 537, 541, 543, 550, 552], "dnnl_": 284, "_primitive_desc_cr": 284, "as_data_typ": [284, 524], "output_height": [284, 524], "output_height_1x1_convolut": [284, 524], "output_width": [284, 524], "output_width_1x1_convolut": [284, 524], "dev_guide_attributes_post_ops_depthwis": [284, 524], "dev_guide_attributes_post_ops_depthwise_fus": [284, 308, 524], "another_input": [284, 524], "sic": [284, 532], "slc": [284, 532], "dic": [284, 532], "dlc": [284, 532], "rnn_attr": 284, "rnn_pd": 284, "nativ": [284, 532], "five": [284, 532], "weights_lay": [284, 532], "weights_iter": [284, 532], "violat": [284, 532], "batch_normalization_backward": [285, 342, 530], "allowed": 286, "algebra": 287, "gemm_u8s8s32": [287, 342, 348], "gemm_s8s8s32": [287, 342, 348], "mxk": [287, 320, 348], "kxn": [287, 320, 348], "mxn": [287, 320, 348], "xerbla": [287, 320, 348], "a_offset": [287, 320, 348], "b_offset": [287, 320, 348], "c_offset": [287, 320, 348], "convolution_backward_data": [290, 342, 530], "deconvolution_backward_data": [292, 342, 530], "deconvolution_backward_weight": [292, 342, 530], "use_dst_for_bwd": [293, 468], "group_normalization_backward": [296, 342, 530], "inner_product_backward_data": [297, 342, 530], "inner_product_backward_weight": [297, 342, 530], "layer_normalization_backward": [299, 342, 530], "stat": 299, "manipul": 302, "discourag": 302, "inequ": [302, 485, 518], "set_buff": [302, 347], "ordinari": 302, "ill": 302, "never": [302, 314], "retriev": [302, 303, 308], "newli": 302, "encompass": [302, 518], "join": [302, 518], "in_md": [302, 518], "out_md": 302, "expect_out_md": [302, 518], "in_dim": 302, "out_dim": 302, "in_tag": 302, "out_tag": 302, "lie": 302, "oihw_4i16o4i": 302, "oihw_4i16o4i_": 302, "4i16o4i": 302, "had": [302, 319, 346, 347, 413, 516], "unmap": [302, 516], "mainli": [302, 516], "made": [302, 516], "prelu_backward": [305, 342, 530], "get_primitive_cache_capac": [306, 342], "set_primitive_cache_capac": [306, 342], "held": [306, 327], "excess": [306, 327], "aqueri": [308, 342], "32bit": 308, "qualifi": 308, "dev_guide_attributes_post_ops_binary_fus": 308, "mnemon": 308, "peephol": [308, 313, 510, 512, 544], "norm_lp": 310, "resampling_backward": [312, 342, 530], "resampling": 312, "rnn_flag": [313, 342], "rnn_primitive_desc_bas": [313, 342, 443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 534, 564, 566], "lbr": [313, 497, 498, 499, 500, 501, 502, 503, 504], "aid": 314, "version_t": [314, 342], "cpu_isa": [314, 342], "cpu_isa_hint": [314, 342], "set_verbos": [314, 342], "get_default_fpmath_mod": [314, 342], "set_jit_dump": [314, 342], "set_jit_profiling_flag": [314, 342], "set_jit_profiling_jitdumpdir": [314, 342], "minor": [314, 567], "dnnl_jit_dump": 314, "dnnl_jit_profil": 314, "vtune": [314, 353, 406], "pid": 314, "perf": 314, "mkdtemp": 314, "xxxxxx": 314, "home": 314, "revert": 314, "invok": 314, "dnnl_max_cpu_isa": 314, "dnnl_cpu_isa": 314, "reflect": 314, "dnnl_cpu_isa_hint": 314, "shuffle_backward": [315, 342, 530], "softmax_backward": [316, 342, 530], "threapdool_ifac": [320, 348], "threadloc": 320, "dnnl_brgemm_no_pack": 322, "dnnl_brgemm_pack_32": 322, "trait": [323, 342, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "handle_trait": [323, 342, 485], "acquir": 325, "input_id": [326, 475], "get_compiled_partition_cache_capac": [327, 343], "set_compiled_partition_cache_capac": [327, 343], "set_constant_tensor_cach": [328, 343], "get_constant_tensor_cach": [328, 343], "set_constant_tensor_cache_capac": [328, 343], "get_constant_tensor_cache_capac": [328, 343], "deprec": 328, "supplement": [329, 333, 337], "meta": 332, "enrich": 332, "progress": 332, "toward": 332, "60": 332, "layout_id": [332, 476], "openpow": 340, "ppc64": 340, "practition": 340, "c_partit": [344, 345], "beforehand": 344, "adevic": [345, 347], "acontext": [345, 347], "amemori": [346, 347], "set_mem_object": 346, "aprimit": [346, 347], "query_md": [346, 347, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 530, 534, 535, 537, 538, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "aqueu": 347, "abuff": 347, "get_threadpool": 348, "cnn_inference_int8": [353, 364], "cnn_training_bf16": 353, "cnn_training_f32": 353, "cpu_cnn_training_f32": 353, "cpu_matmul_csr": 353, "cpu_matmul_coo": 353, "cpu_matmul_quant": 353, "cpu_matmul_weights_compress": 353, "cpu_rnn_inference_f32": [353, 378], "cpu_rnn_inference_int8": [353, 379], "cpu_sgemm_and_matmul": 353, "gpu_opencl_interop": [353, 389], "memory_format_propag": 353, "rnn_training_f32": 353, "sycl_interop_buff": [353, 432], "untitl": 353, "legal": 353, "trademark": 353, "awai": [360, 362, 363, 390, 392, 393, 394, 395], "detriment": [362, 363], "realist": 364, "_x": 375, "research": 375, "max_": 375, "min_": 375, "earli": 375, "obviou": 375, "disadvantag": 375, "wors": 375, "inevit": 375, "unidirectin": [378, 379], "charact": [378, 379], "facil": [383, 388, 389, 432], "resid": [383, 388, 389, 390, 391, 392, 393, 394, 395, 432], "thank": [383, 388], "lightweight": [383, 388], "compris": 388, "singleton": 388, "ten": 388, "educ": 388, "aliv": 388, "_d": 388, "relu_d": 388, "human": [388, 432], "encourag": 388, "experi": 388, "familiar": 388, "spoil": 388, "oop": 388, "forgot": 388, "liter": 389, "get_ocl_mem_object": 389, "realiz": [389, 432], "heavier": [389, 432], "serv": 389, "submiss": 389, "cpu_getting_start": 390, "till": [390, 393, 394], "mayb": [390, 391, 393, 394], "unfin": [390, 393, 394], "simul": [390, 391, 392, 393, 394, 395], "cpu_inference_int8": 391, "cpu_single_op_partit": 392, "quickli": [392, 395], "gpu_opencl_getting_start": 393, "dnnl_graph_ocl": 393, "sycl_getting_start": 394, "sycl_single_op_partit": 395, "logo": 406, "openvino": 406, "pentium": 406, "subsidiari": 406, "brand": 406, "countri": 406, "khrono": 406, "central": 413, "understood": 413, "reader": 413, "bother": 413, "idiomat": 413, "realli": 413, "ver": 413, "1x128x14x14": 413, "326904": 413, "256x128x3x3": 413, "244141": 413, "bia_undef": [413, 414], "mb1_ic128oc256_ih14oh14kh3sh1dh0ph1_iw14ow14kw3sw1dw0pw1": 413, "20312": 413, "ws_undef": 413, "mb1ic256_ih14oh14kh3sh1ph1_iw14ow14kw3sw1pw1": 413, "187012": 413, "1x256x14x14": 413, "0419922": 413, "knowledg": 414, "ex": 414, "user_": 414, "meant": 414, "enter": 414, "easili": 414, "launch": 414, "shell": 414, "tell": 414, "38": 414, "mb128_ic3oc96_ih227oh55kh11sh4dh0ph0_iw227ow55kw11sw4dw0pw0": 414, "314": 414, "data_f32": 414, "diff_undef": 414, "128x96x55x55": 414, "87695": 414, "reoder": 414, "conv_dst1": 414, "pai": 414, "penalti": 414, "96x3x11x11": 414, "0310059": 414, "3101": 414, "66895": 414, "80396": 414, "closer": 414, "0148926": 414, "968": 414, "66797": 414, "kmp_affin": 414, "platinum": 414, "8180": 414, "50ghz": 414, "numa": 414, "ram": 414, "ddr4": 414, "gb": 414, "catalogu": 438, "weak": [442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "allow_empti": [442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "get_primitive_desc": [442, 444, 446, 448, 450, 453, 455, 457, 459, 461, 463, 465, 467, 469, 477, 479, 481, 483, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 519, 521, 525, 527, 530, 536, 538, 540, 542, 545, 547, 549, 551, 555, 563, 565], "get_kind": [442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 519, 520, 521, 522, 525, 526, 527, 528, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 563, 564, 565, 566], "default_attr": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 537, 539, 541, 543, 546, 548, 550, 552, 556, 564, 566], "get_cell_kind": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_prop_kind": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_direct": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_dil": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_padding_l": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_padding_r": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_epsilon": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_algorithm": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_alpha": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_beta": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_axi": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_local_s": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_k": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_p": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_factor": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_activation_kind": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_kernel": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_group_s": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "get_primitive_attr": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 535, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "next_impl": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 537, 539, 541, 543, 544, 546, 548, 550, 552, 556, 564, 566], "augru_attention_desc": [443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "diff_augru_attention_desc": [443, 445, 482, 484, 498, 500, 502, 504, 510, 512, 544, 564, 566], "signifi": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 518, 520, 522, 526, 528, 537, 539, 541, 543, 546, 548, 550, 552, 556, 561, 562, 564, 566], "src0": 451, "caller": [454, 534, 539, 556], "prim_kind": [454, 534, 539, 556], "prop_kind1": [454, 534, 539, 556], "prop_kind2": [454, 534, 539, 556], "get_count": 472, "uniniti": [472, 485, 516, 530, 554], "thrown": [472, 485, 516, 530, 554], "wrap_c_api": 473, "output_id": 475, "union": 476, "descend": [485, 530, 534, 535, 544], "weak_ptr": 485, "dummi": 485, "destructor": 486, "validate_dim": 516, "min_siz": 516, "adata_typ": [516, 518], "map_data": 516, "unmap_data": 516, "absenc": [516, 518], "aformat_tag": 518, "permute_ax": 518, "get_ndim": 518, "get_padded_offset": 518, "get_submemory_offset": 518, "get_nnz": 518, "get_sparse_encod": 518, "get_format_kind": 518, "is_zero": 518, "index_dt": 518, "pointer_dt": 518, "new_desc": 518, "get_params_sum": 524, "get_params_eltwis": 524, "get_params_dw": 524, "get_params_prelu": 524, "zeropoint": 524, "oc_dim": 524, "mb_dim": 524, "channel_dim": 524, "height_dim": 524, "prelu_weight": 524, "weight_desc": [526, 528], "c_pd": 530, "mask_desc": 532, "get_fpmath_mod": 532, "get_accumulation_mod": 532, "set_accumulation_mod": 532, "get_determinist": 532, "get_rounding_mod": 532, "set_rounding_mod": 532, "get_post_op": 532, "get_rnn_data_qparam": 532, "get_rnn_weights_qparam": 532, "set_rnn_weights_projection_qparam": 532, "get_rnn_weights_projection_qparam": 532, "rnn_d": 532, "get_src_engin": 539, "get_dst_engin": 539, "aflag": 554, "constexpr": 557, "virtual": 557, "subclass": 557, "closur": 557, "set_a_scal": [560, 561], "set_d_scal": [560, 561], "default_post_op": 561, "default_attr_param": 561, "cpu_runtim": 567, "gpu_runtim": 567, "absent": 567, "q_head_num": [570, 571], "kv_head_num": 570, "head_siz": [570, 571, 572], "head_num": 572, "query_num": 572, "ctx_": 573}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"advanc": 0, "topic": 0, "build": [1, 23, 24, 27, 30, 31, 36, 38, 39, 143, 144, 155, 160, 390, 391, 392, 393, 394, 395], "link": [1, 51], "class": [2, 3, 4, 5, 6, 7, 8, 9], "dnnl": [2, 3, 4, 5, 6, 7, 8, 164, 167, 168, 169, 173, 177, 180, 181, 182, 183, 185, 187, 189, 191, 192, 193, 194, 195, 197, 200, 202, 204, 206, 208, 210, 212, 214, 217, 219, 221, 223, 342, 343, 344, 345, 346, 347, 348, 349, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566], "graph": [2, 3, 4, 5, 6, 7, 8, 19, 24, 37, 38, 39, 180, 181, 182, 183, 185, 187, 189, 279, 324, 330, 343, 344, 345, 390, 391, 392, 393, 394, 395], "alloc": [2, 325, 413], "overview": [2, 3, 4, 5, 6, 7, 8, 33, 138, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 278, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 344, 345, 346, 347, 348, 350, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567], "detail": [2, 3, 4, 5, 6, 7, 8, 20, 22, 26, 29, 34, 36, 43, 47, 50, 52, 53, 141, 142, 145, 146, 147, 148, 150, 151, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 278, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 344, 345, 346, 347, 348, 350, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567], "document": [2, 3, 4, 5, 6, 7, 8, 23, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 278, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 344, 345, 346, 347, 348, 350, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567], "construct": [2, 3, 4, 5, 6, 7, 8, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 561, 562, 563, 564, 565, 566], "compiled_partit": 3, "method": [3, 4, 5, 6, 7, 8, 38, 443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 473, 478, 480, 482, 484, 485, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 535, 537, 538, 539, 541, 543, 544, 546, 548, 550, 552, 554, 556, 557, 560, 561, 562, 564, 566], "logical_tensor": [5, 180, 181, 182], "typedef": [5, 284, 291, 294, 302, 308, 314, 317, 321, 322, 325, 326, 330, 333, 334, 335, 337, 338, 516], "op": [6, 15, 20, 22, 26, 29, 34, 37, 43, 47, 50, 52, 53, 141, 145, 146, 147, 148, 149, 150, 151, 183, 185, 334, 360, 392, 395], "partit": [7, 37, 187, 326, 327, 335, 390, 391, 392, 393, 394, 395], "tensor": [8, 27, 28, 37, 328, 332, 338], "simple_memory_pool_t": 9, "primit": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 36, 53, 140, 143, 144, 160, 161, 200, 306, 307, 354, 356, 358, 367, 369, 373, 374, 377, 383, 384, 386, 388, 389, 396, 400, 402, 404, 407, 409, 411, 413, 415, 417, 419, 421, 423, 426, 428, 430, 432, 434, 530, 574], "attribut": [10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 26, 29, 34, 43, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 145, 146, 147, 148, 149, 150, 151, 157, 158, 284], "usag": [10, 140], "support": [10, 15, 20, 22, 26, 34, 40, 43, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 148, 150, 151, 154, 281, 574], "relat": [10, 140, 161], "error": [10, 473], "handl": [10, 32, 33, 138, 485], "accumul": [11, 283], "mode": [11, 14, 17, 32, 160, 283, 295], "determinist": 12, "dropout": 13, "introduct": [13, 16, 19, 37, 46, 154, 156, 159, 413], "implement": [13, 20, 22, 26, 29, 34, 42, 43, 47, 50, 52, 53, 141, 142, 145, 146, 147, 148, 149, 150, 151, 157, 158, 160, 414], "api": [13, 16, 25, 27, 36, 140, 282, 288, 298, 303, 319, 320, 324, 331, 333, 337, 389, 390, 391, 393, 394, 432], "float": [14, 40, 42, 295], "point": [14, 40, 42, 295], "math": [14, 295], "The": 14, "enforc": 14, "an": 14, "integr": 14, "A": 14, "note": [14, 20, 22, 25, 26, 29, 34, 43, 47, 50, 52, 53, 141, 142, 145, 146, 147, 150, 151], "default": 14, "post": [15, 20, 22, 26, 29, 34, 43, 47, 50, 52, 53, 141, 145, 146, 147, 148, 149, 150, 151, 360], "eltwis": [15, 34, 250, 293], "sum": [15, 151, 272, 318, 430, 555, 556], "depthwis": 15, "binari": [15, 22, 226, 286, 358, 360, 450, 451], "prelu": [15, 105, 142, 265, 305], "exampl": [15, 16, 18, 20, 22, 26, 29, 34, 35, 42, 43, 46, 47, 48, 50, 52, 53, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 157, 158, 160, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 377, 378, 379, 384, 386, 391, 396, 400, 402, 404, 407, 409, 411, 414, 415, 417, 419, 421, 423, 425, 426, 428, 430, 434], "chain": 15, "relu": [15, 116, 383, 388], "tanh": [15, 134], "scaleshift": 15, "quantiz": [16, 40, 46, 107, 375], "model": [16, 280, 439], "numer": [16, 32], "behavior": [16, 32], "convolut": [16, 29, 67, 234, 290, 369, 391, 413], "workflow": [16, 46, 154], "per": 16, "channel": [16, 159], "scale": [16, 20, 42, 43, 46, 50], "argument": [16, 20, 22, 26, 29, 34, 43, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151], "1": [16, 29, 49], "weight": [16, 436], "output": [16, 28, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 160], "2": [16, 29, 49], "round": [17, 32, 119], "scratchpad": 18, "memori": [18, 19, 28, 33, 138, 140, 143, 156, 159, 161, 191, 192, 193, 194, 302, 383, 388, 389, 413, 432, 516, 518], "engin": [18, 19, 140, 161, 173, 294, 329, 382, 383, 388, 389, 432, 472], "librari": [18, 23, 24, 32, 51, 340], "manag": [18, 143], "user": 18, "basic": [19, 37, 156], "concept": [19, 37, 156], "stream": [19, 219, 317, 383, 388, 389, 432, 554], "object": [19, 33, 138, 383, 388, 389, 413, 432], "level": 19, "abstract": 19, "creat": [19, 383, 388, 389, 413, 432], "extens": [19, 279, 389, 393, 394, 432], "micro": 19, "kernel": [19, 389, 432], "batch": [20, 157, 285, 356], "normal": [20, 43, 50, 52, 285, 296, 299, 356, 396, 402, 407], "gener": [20, 22, 26, 29, 32, 34, 43, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159], "forward": [20, 29, 34, 43, 45, 47, 50, 52, 141, 142, 147, 149, 150], "differ": [20, 29, 34, 38, 43, 45, 47, 50, 141, 142, 147, 149, 150], "between": [20, 29, 34, 38, 43, 45, 47, 50, 141, 142, 147, 149, 150, 382, 383], "train": [20, 29, 32, 34, 40, 43, 45, 47, 50, 141, 142, 147, 148, 149, 150, 153, 154, 365, 366, 372, 425], "infer": [20, 29, 32, 34, 40, 43, 44, 45, 46, 47, 50, 141, 142, 147, 149, 150, 362, 363, 364, 378, 379, 391, 398], "backward": [20, 29, 34, 43, 45, 47, 50, 52, 141, 142, 147, 149, 150], "execut": [20, 22, 26, 29, 34, 43, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 383, 388, 389, 390, 391, 392, 393, 394, 395, 413, 432], "data": [20, 22, 26, 29, 32, 34, 42, 43, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 291, 383, 388, 389, 413, 432], "type": [20, 22, 26, 29, 32, 34, 42, 43, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 157, 158, 291], "represent": [20, 22, 26, 29, 34, 43, 47, 50, 52, 53, 141, 142, 145, 146, 148, 150, 151, 156, 157, 158], "mean": [20, 43, 50], "varianc": [20, 43, 50], "shift": [20, 43, 50], "sourc": [20, 22, 23, 43, 50, 52, 141, 145, 150, 151, 155, 413], "destin": [20, 22, 43, 50, 52, 141, 145, 150, 151, 413], "Their": [20, 43, 50, 52, 141, 150], "gradient": [20, 43, 50, 52, 141, 150], "limit": [20, 22, 24, 26, 29, 32, 34, 36, 42, 43, 47, 50, 52, 53, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 157, 158], "perform": [20, 21, 22, 26, 29, 34, 43, 47, 50, 52, 53, 141, 142, 144, 145, 146, 147, 149, 150, 151, 413, 414, 438], "tip": [20, 22, 26, 29, 34, 43, 47, 50, 52, 53, 141, 142, 145, 146, 147, 149, 150, 151], "benchmark": [21, 139], "from": [23, 155, 383], "download": 23, "code": [23, 38, 48, 155, 388], "linux": [23, 51, 144], "maco": [23, 51], "gcc": 23, "clang": 23, "intel": [23, 32, 49, 155], "oneapi": [23, 340, 350], "dpc": [23, 33, 341], "c": [23, 38, 228, 236, 247], "compil": [23, 24, 37, 38, 326, 327, 390, 391, 392, 393, 394, 395], "sycl": [23, 33, 319, 337, 352, 394, 432], "runtim": [23, 24, 30, 51, 139, 298, 331], "target": [23, 24], "aarch64": [23, 24], "x64": 23, "host": [23, 24], "arm": [23, 24], "comput": [23, 24, 49], "acl": 23, "window": [23, 51], "microsoft": 23, "visual": 23, "valid": [23, 25, 383, 388, 389, 432], "instal": 23, "option": [24, 38], "common": [24, 36, 288, 308], "configur": [24, 139, 414], "function": [24, 148, 278, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 344, 345, 346, 347, 348, 383, 388, 389, 390, 391, 392, 393, 394, 395, 413, 432], "onednn_enable_workload": 24, "onednn_enable_primit": 24, "onednn_enable_primitive_cpu_isa": 24, "onednn_enable_primitive_gpu_isa": 24, "onednn_enable_gemm_kernels_isa": 24, "test": 24, "onednn_test_set": 24, "cpu": [24, 30, 31, 48, 49, 139, 382, 383, 390, 392, 432], "specif": [24, 28, 45], "architectur": [24, 32], "openmp": 24, "thread": [24, 139, 152], "block": [24, 159, 414], "tbb": 24, "threadpool": [24, 152, 320], "vendor": 24, "bla": [24, 287], "gpu": [24, 48, 49, 382, 383, 389, 395, 432], "opencl": [24, 138, 303, 333, 341, 389, 393], "compon": 24, "backend": 24, "input": [25, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "concat": [26, 66, 233, 289, 367, 453, 454], "constant": [27, 328], "cach": [27, 140, 143, 306, 327, 328], "time": [27, 30, 31, 36, 38, 39, 143, 144, 160], "control": [27, 30, 31, 36, 38, 39, 143, 144, 160], "run": [27, 31, 39, 143, 144, 160], "capac": 27, "environ": [27, 38], "variabl": [27, 28, 38], "name": 28, "convent": 28, "formula": 28, "verbos": [28, 160, 161], "rnn": [28, 148, 313, 354, 378, 379, 404, 409, 425, 434], "notat": 28, "format": [28, 159, 413, 414], "tag": [28, 144], "regular": [29, 67], "group": [29, 43, 67, 296, 396], "dilat": [29, 67], "deconvolut": [29, 249, 292, 384], "transpos": 29, "3": 29, "algorithm": [29, 167], "direct": 29, "winograd": 29, "automat": 29, "select": [29, 120], "dispatch": [30, 160, 161], "isa": 31, "hint": 31, "onednn": [32, 51, 139, 144, 152, 155, 282, 383, 388, 389, 432], "denorm": 32, "hardwar": 32, "r": 32, "processor": [32, 49], "graphic": 32, "xe": 32, "interoper": [33, 138, 298, 303, 319, 320, 331, 333, 337, 341], "buffer": [33, 138, 413], "usm": [33, 138], "interfac": [33, 138], "depend": [33, 138], "except": 34, "experiment": 36, "featur": [36, 144], "onednn_experimental_spars": 36, "matrix": [36, 53, 157, 301], "multipl": [36, 53, 157, 159, 301], "csr": 36, "encod": 36, "coo": 36, "pack": 36, "reorder": [36, 118, 146, 267, 311, 382, 383, 413, 421, 538, 539], "onednn_experimental_ukernel": 36, "onednn_experimental_profil": 36, "onednn_experimental_graph_compiler_backend": 36, "onednn_experimental_log": 36, "logic": [37, 332], "codegen": 38, "jit": [38, 48], "llvm": 38, "builtin": 38, "enabl": [38, 160], "trace": 38, "switch": 38, "dump": [38, 39], "fusion": 40, "pattern": [40, 42], "aggress": 40, "low": 41, "precis": 41, "int8": [41, 44, 46, 49, 364, 379, 391, 398], "bf16": [41, 365], "f16": 41, "dot": 42, "product": [42, 47, 297, 400], "attent": 42, "sdpa": 42, "background": 42, "refer": [42, 49, 340], "best": 44, "practic": 44, "fp32": [44, 153], "aspect": 45, "propag": [45, 413], "kind": [45, 173, 185, 200], "workspac": 45, "process": [46, 155], "rang": 46, "factor": 46, "inner": [47, 297, 400], "inspect": [48, 438], "nuanc": 49, "mix": 49, "u8": [49, 360], "s8": 49, "avx2": 49, "avx": 49, "512": 49, "dl": 49, "boost": 49, "same": 49, "layer": [50, 299, 402], "header": [51, 383, 388, 389, 390, 391, 392, 393, 394, 395, 432], "file": 51, "harden": 51, "local": [52, 407], "respons": [52, 407], "lrn": [52, 259, 300], "ab": 54, "oper": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 156, 161, 281], "absbackward": 55, "add": 56, "avgpool": 57, "avgpoolbackward": 58, "batchnormforwardtrain": 59, "batchnorminfer": 60, "batchnormtrainingbackward": 61, "biasadd": 62, "biasaddbackward": 63, "clamp": 64, "clampbackward": 65, "convolutionbackwarddata": 68, "convolutionbackwardweight": 69, "convtranspos": 70, "convtransposebackwarddata": 71, "convtransposebackwardweight": 72, "dequant": 73, "divid": 74, "dynamicdequant": 75, "dynamicquant": 76, "elu": 77, "elubackward": 78, "end": 79, "exp": 80, "gelu": 81, "gelubackward": 82, "groupnorm": 83, "hardsigmoid": 84, "hardsigmoidbackward": 85, "hardswish": 86, "hardswishbackward": 87, "interpol": 88, "interpolatebackward": 89, "layernorm": 90, "layernormbackward": 91, "leakyrelu": 92, "log": 93, "logsoftmax": 94, "logsoftmaxbackward": 95, "matmul": [96, 261, 373, 374, 375, 377, 380, 398, 411, 436, 513, 514], "maximum": 97, "maxpool": 98, "maxpoolbackward": 99, "minimum": 100, "mish": 101, "mishbackward": 102, "multipli": 103, "pow": 104, "broadcast": [105, 106, 120], "rule": [105, 106, 120], "prelubackward": 106, "reciproc": 108, "reducel1": 109, "reducel2": 110, "reducemax": 111, "reducemean": 112, "reducemin": 113, "reduceprod": 114, "reducesum": 115, "relubackward": 117, "sigmoid": 121, "sigmoidbackward": 122, "softmax": [123, 150, 271, 316, 428], "softmaxbackward": 124, "softplu": 125, "softplusbackward": 126, "sqrt": 127, "sqrtbackward": 128, "squar": 129, "squareddiffer": 130, "staticreshap": 131, "statictranspos": 132, "subtract": 133, "tanhbackward": 135, "typecast": 136, "wildcard": 137, "set": 139, "whole": 139, "machin": 139, "singl": [139, 392, 395], "numa": 139, "domain": 139, "sever": 139, "core": 139, "within": 139, "persist": 140, "descriptor": [140, 388], "pool": [141, 264, 304, 413, 415], "consumpt": 143, "profil": [143, 144, 160, 162, 309, 414, 438], "vtune": [144, 162], "itt": 144, "hotspot": 144, "microarchitectur": 144, "inform": [144, 155, 406], "perf": 144, "reduct": [145, 266, 310, 419, 536, 537], "resampl": [147, 268, 312, 423], "nearest": 147, "neighbor": 147, "bilinear": 147, "cell": 148, "vanilla": [148, 434], "lstm": [148, 260, 409], "peephol": 148, "project": 148, "lstmp": 148, "gru": [148, 404], "linear": [148, 404], "befor": [148, 404], "reset": [148, 404], "augru": [148, 224, 354], "consider": 148, "shuffl": [149, 270, 315, 426], "layout": [149, 159], "us": [152, 159], "base": 152, "bfp16": 153, "bfloat16": 154, "transit": 155, "mkl": 155, "dnn": 155, "summari": [155, 414], "chang": 155, "broken": 155, "compat": 155, "develop": [155, 340], "reduc": 157, "transform": [158, 562], "understand": [159, 160], "nomenclatur": 159, "plain": 159, "nchw": 159, "nhwc": 159, "chwn": 159, "relev": 159, "read": 159, "stride": 159, "what": 159, "ar": 159, "8": 159, "16": 159, "troubleshoot": 160, "creation": [160, 161], "issu": 160, "workload": 160, "why": 160, "given": 160, "i": 160, "onednn_verbos": 160, "timestamp": 160, "decrypt": 160, "messag": 161, "catalogu": 161, "tm": 162, "enum": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "api_kind": 163, "accumulation_mod": 164, "valu": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "dnnl_accumulation_mode_t": 165, "dnnl_alg_kind_t": 166, "cpu_isa": 168, "cpu_isa_hint": 169, "dnnl_cpu_isa_hints_t": 170, "dnnl_cpu_isa_t": 171, "dnnl_data_type_t": 172, "dnnl_engine_kind_t": 174, "dnnl_format_kind_t": 175, "dnnl_format_tag_t": 176, "fpmath_mod": 177, "dnnl_fpmath_mode_t": 178, "dnnl_graph_layout_type_t": 179, "data_typ": [180, 191], "layout_typ": 181, "property_typ": 182, "attr": 183, "dnnl_graph_op_attr_t": 184, "dnnl_graph_op_kind_t": 186, "polici": 187, "dnnl_graph_partition_policy_t": 188, "statu": [189, 217, 336], "dnnl_graph_tensor_property_t": 190, "format_kind": 192, "format_tag": 193, "sparse_encod": 194, "normalization_flag": 195, "dnnl_normalization_flags_t": 196, "ocl_interop": [197, 344, 346], "memory_kind": [197, 221], "dnnl_ocl_interop_memory_kind_t": 198, "dnnl_pack_type_t": 199, "dnnl_primitive_kind_t": 201, "profiling_data_kind": 202, "dnnl_profiling_data_kind_t": 203, "prop_kind": 204, "dnnl_prop_kind_t": 205, "queri": 206, "dnnl_query_t": 207, "rnn_direct": 208, "dnnl_rnn_direction_t": 209, "rnn_flag": 210, "dnnl_rnn_flags_t": 211, "rounding_mod": 212, "dnnl_rounding_mode_t": 213, "scratchpad_mod": 214, "dnnl_scratchpad_mode_t": 215, "dnnl_sparse_encoding_t": 216, "dnnl_status_t": 218, "flag": 219, "dnnl_stream_flags_t": 220, "sycl_interop": [221, 345, 347], "dnnl_sycl_interop_memory_kind_t": 222, "ukernel": [223, 321, 322, 349, 371, 560, 561, 562, 575], "pack_typ": 223, "cpp": [224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "batch_norm": 225, "bnorm_u8_via_binary_postop": 227, "cnn_inference_f32": [228, 229], "cnn_inference_int8": 230, "cnn_training_bf16": 231, "cnn_training_f32": 232, "cpu_brgemm": 235, "cpu_cnn_training_f32": 236, "cpu_getting_start": 237, "cpu_inference_int8": 238, "cpu_matmul_coo": 239, "cpu_matmul_csr": 240, "cpu_matmul_quant": 241, "cpu_matmul_weights_compress": 242, "cpu_rnn_inference_f32": 243, "cpu_rnn_inference_int8": 244, "cpu_sgemm_and_matmul": 245, "cpu_single_op_partit": 246, "cross_engine_reord": [247, 248], "getting_start": 251, "gpu_opencl_getting_start": 252, "gpu_opencl_interop": 253, "group_norm": 254, "inference_int8_matmul": 255, "inner_product": 256, "layer_norm": 257, "lbr_gru": 258, "memory_format_propag": [262, 413], "performance_profil": 263, "rnn_training_f32": 269, "sycl_getting_start": 273, "sycl_interop_buff": 274, "sycl_single_op_partit": 275, "vanilla_rnn": 276, "weights_decompression_matmul": 277, "global": [278, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 344, 345, 346, 347, 348], "namespac": [278, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "program": [280, 439], "macro": [291, 302, 308, 314, 332], "servic": 314, "brgemm": [322, 371, 561], "util": [323, 339], "deep": 340, "neural": 340, "network": 340, "guid": 340, "threadpool_interop": [348, 557], "std": 351, "orphan": 353, "untitl": [355, 357, 359, 361, 368, 370, 376, 381, 385, 387, 397, 399, 401, 403, 405, 408, 410, 412, 416, 418, 420, 422, 424, 427, 429, 431, 435, 437], "bnorm": 360, "cnn": [362, 363, 364, 365, 366, 372], "f32": [362, 363, 366, 372, 378, 425], "tutori": [375, 380, 398, 413, 436], "comparison": 380, "sgemm": 380, "public": [383, 388, 389, 390, 391, 392, 393, 394, 395, 432], "cross_engine_reorder_tutori": 383, "wrap": [383, 388, 389, 432], "get": [383, 388, 389, 390, 391, 392, 393, 394, 395, 432], "result": [383, 388, 389, 413, 432], "all": 383, "element": 386, "wise": 386, "start": [388, 389, 390, 393, 394, 432], "getting_started_tutori": 388, "prepar": 388, "outsid": 388, "altern": 388, "wai": 388, "obtain": 388, "main": [388, 432], "gpu_opencl_interop_tutori": 389, "initi": [389, 413, 432], "custom": [389, 432], "cpu_getting_started_tutori": 390, "simple_pattern_int8": 391, "cpu_single_op_partition_tutori": 392, "ocl_getting_started_tutori": 393, "sycl_getting_started_tutori": 394, "sycl_single_op_partition_tutori": 395, "legal": 406, "trademark": 406, "determin": 413, "need": 413, "intermedi": 413, "necessari": 413, "walkthrough": 414, "naiv": 414, "fuse": 414, "notic": 414, "both": 432, "sycl_interop_buffer_tutori": 432, "todo": 433, "list": 433, "decompress": 436, "struct": [440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573], "args_t": 440, "cpu_deletor": 441, "augru_backward": [442, 443], "inherit": [442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "member": [442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 566], "primitive_desc": [443, 445, 447, 449, 451, 454, 456, 458, 460, 462, 464, 466, 468, 470, 478, 480, 482, 484, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 520, 522, 526, 528, 534, 537, 539, 541, 543, 546, 548, 550, 552, 556, 564, 566], "augru_forward": [444, 445], "batch_normalization_backward": [446, 447], "batch_normalization_forward": [448, 449], "dnnl_brgemm": 452, "convolution_backward_data": [455, 456], "convolution_backward_weight": [457, 458], "convolution_forward": [459, 460], "deconvolution_backward_data": [461, 462], "deconvolution_backward_weight": [463, 464], "deconvolution_forward": [465, 466], "eltwise_backward": [467, 468], "eltwise_forward": [469, 470], "dnnl_engin": 471, "dnnl_exec_arg_t": 474, "field": [474, 475, 476, 557, 567], "dnnl_graph_inplace_pair_t": 475, "dnnl_graph_logical_tensor_t": 476, "group_normalization_backward": [477, 478], "group_normalization_forward": [479, 480], "gru_backward": [481, 482], "gru_forward": [483, 484], "templat": [485, 486], "handle_trait": 486, "inner_product_backward_data": [487, 488], "inner_product_backward_weight": [489, 490], "inner_product_forward": [491, 492], "layer_normalization_backward": [493, 494], "layer_normalization_forward": [495, 496], "lbr_augru_backward": [497, 498], "lbr_augru_forward": [499, 500], "lbr_gru_backward": [501, 502], "lbr_gru_forward": [503, 504], "lrn_backward": [505, 506], "lrn_forward": [507, 508], "lstm_backward": [509, 510], "lstm_forward": [511, 512], "dnnl_memori": 515, "dnnl_memory_desc": 517, "desc": 518, "pooling_backward": [519, 520], "pooling_forward": [521, 522], "dnnl_post_op": 523, "post_op": 524, "prelu_backward": [525, 526], "prelu_forward": [527, 528], "dnnl_primit": 529, "dnnl_primitive_attr": 531, "primitive_attr": 532, "dnnl_primitive_desc": 533, "primitive_desc_bas": 535, "resampling_backward": [540, 541], "resampling_forward": [542, 543], "rnn_primitive_desc_bas": 544, "shuffle_backward": [545, 546], "shuffle_forward": [547, 548], "softmax_backward": [549, 550], "softmax_forward": [551, 552], "dnnl_stream": 553, "threadpool_ifac": 557, "dnnl_transform": 558, "dnnl_ukernel_attr_param": 559, "attr_param": 560, "vanilla_rnn_backward": [563, 564], "vanilla_rnn_forward": [565, 566], "dnnl_version_t": 567, "example_allows_unimpl": 568, "gemm_dims_t": 569, "gqa_dims_t": 570, "mqa_dims_t": 571, "sdpa_dims_t": 572, "sycl_deletor": 573}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Advanced Topics": [[0, "advanced-topics"]], "Building and Linking": [[1, "building-and-linking"]], "Primitive Attributes: deterministic": [[12, "primitive-attributes-deterministic"]], "Primitive Attributes: dropout": [[13, "primitive-attributes-dropout"]], "Introduction": [[13, "introduction"], [19, "introduction"], [16, "introduction"], [37, "introduction"], [46, "introduction"], [154, "introduction"], [156, "introduction"], [159, "introduction"]], "Implementation": [[13, "implementation"]], "API": [[13, "api"], [16, "api"], [36, "api"], [25, "api"]], "Primitive Attributes": [[10, "primitive-attributes"]], "Attributes Usage": [[10, "attributes-usage"]], "Supported Attributes": [[10, "supported-attributes"]], "Attribute Related Error Handling": [[10, "attribute-related-error-handling"]], "Primitive Attributes: accumulation mode": [[11, "primitive-attributes-accumulation-mode"]], "class dnnl::graph::allocator": [[2, "class-dnnl-graph-allocator"]], "Overview": [[2, "overview"], [3, "overview"], [8, "overview"], [33, "overview"], [5, "overview"], [4, "overview"], [6, "overview"], [7, "overview"], [138, "overview"], [165, "overview"], [164, "overview"], [167, "overview"], [166, "overview"], [169, "overview"], [168, "overview"], [171, "overview"], [170, "overview"], [172, "overview"], [173, "overview"], [174, "overview"], [175, "overview"], [177, "overview"], [176, "overview"], [178, "overview"], [179, "overview"], [181, "overview"], [180, "overview"], [182, "overview"], [183, "overview"], [184, "overview"], [187, "overview"], [189, "overview"], [188, "overview"], [191, "overview"], [190, "overview"], [193, "overview"], [192, "overview"], [194, "overview"], [195, "overview"], [197, "overview"], [196, "overview"], [199, "overview"], [198, "overview"], [201, "overview"], [200, "overview"], [203, "overview"], [202, "overview"], [204, "overview"], [205, "overview"], [207, "overview"], [206, "overview"], [209, "overview"], [208, "overview"], [211, "overview"], [210, "overview"], [212, "overview"], [213, "overview"], [215, "overview"], [214, "overview"], [216, "overview"], [217, "overview"], [218, "overview"], [219, "overview"], [220, "overview"], [221, "overview"], [222, "overview"], [223, "overview"], [278, "overview"], [283, "overview"], [285, "overview"], [284, "overview"], [286, "overview"], [287, "overview"], [289, "overview"], [291, "overview"], [290, "overview"], [293, "overview"], [292, "overview"], [295, "overview"], [294, "overview"], [297, "overview"], [296, "overview"], [299, "overview"], [301, "overview"], [300, "overview"], [302, "overview"], [303, "overview"], [304, "overview"], [305, "overview"], [307, "overview"], [306, "overview"], [309, "overview"], [308, "overview"], [310, "overview"], [311, "overview"], [313, "overview"], [312, "overview"], [314, "overview"], [315, "overview"], [316, "overview"], [317, "overview"], [319, "overview"], [318, "overview"], [320, "overview"], [321, "overview"], [322, "overview"], [325, "overview"], [326, "overview"], [327, "overview"], [329, "overview"], [328, "overview"], [330, "overview"], [333, "overview"], [332, "overview"], [335, "overview"], [334, "overview"], [337, "overview"], [338, "overview"], [344, "overview"], [345, "overview"], [346, "overview"], [347, "overview"], [348, "overview"], [350, "overview"], [443, "overview"], [442, "overview"], [445, "overview"], [444, "overview"], [446, "overview"], [447, "overview"], [448, "overview"], [449, "overview"], [450, "overview"], [451, "overview"], [453, "overview"], [454, "overview"], [455, "overview"], [456, "overview"], [457, "overview"], [459, "overview"], [458, "overview"], [460, "overview"], [461, "overview"], [462, "overview"], [463, "overview"], [464, "overview"], [465, "overview"], [467, "overview"], [466, "overview"], [468, "overview"], [469, "overview"], [470, "overview"], [473, "overview"], [472, "overview"], [475, "overview"], [474, "overview"], [477, "overview"], [476, "overview"], [479, "overview"], [478, "overview"], [481, "overview"], [480, "overview"], [483, "overview"], [482, "overview"], [485, "overview"], [484, "overview"], [487, "overview"], [488, "overview"], [489, "overview"], [490, "overview"], [491, "overview"], [492, "overview"], [493, "overview"], [495, "overview"], [494, "overview"], [496, "overview"], [497, "overview"], [499, "overview"], [498, "overview"], [500, "overview"], [501, "overview"], [503, "overview"], [502, "overview"], [505, "overview"], [504, "overview"], [507, "overview"], [506, "overview"], [508, "overview"], [509, "overview"], [511, "overview"], [510, "overview"], [512, "overview"], [513, "overview"], [514, "overview"], [516, "overview"], [519, "overview"], [518, "overview"], [521, "overview"], [520, "overview"], [522, "overview"], [523, "overview"], [524, "overview"], [525, "overview"], [526, "overview"], [527, "overview"], [528, "overview"], [530, "overview"], [531, "overview"], [532, "overview"], [534, "overview"], [535, "overview"], [537, "overview"], [536, "overview"], [539, "overview"], [538, "overview"], [540, "overview"], [541, "overview"], [542, "overview"], [543, "overview"], [544, "overview"], [545, "overview"], [546, "overview"], [547, "overview"], [549, "overview"], [548, "overview"], [550, "overview"], [551, "overview"], [552, "overview"], [555, "overview"], [554, "overview"], [557, "overview"], [556, "overview"], [560, "overview"], [561, "overview"], [563, "overview"], [562, "overview"], [565, "overview"], [564, "overview"], [567, "overview"], [566, "overview"]], "Detailed Documentation": [[2, "detailed-documentation"], [3, "detailed-documentation"], [8, "detailed-documentation"], [5, "detailed-documentation"], [4, "detailed-documentation"], [6, "detailed-documentation"], [7, "detailed-documentation"], [165, "detailed-documentation"], [164, "detailed-documentation"], [167, "detailed-documentation"], [166, "detailed-documentation"], [169, "detailed-documentation"], [168, "detailed-documentation"], [171, "detailed-documentation"], [170, "detailed-documentation"], [172, "detailed-documentation"], [173, "detailed-documentation"], [174, "detailed-documentation"], [175, "detailed-documentation"], [177, "detailed-documentation"], [176, "detailed-documentation"], [178, "detailed-documentation"], [179, "detailed-documentation"], [181, "detailed-documentation"], [180, "detailed-documentation"], [182, "detailed-documentation"], [183, "detailed-documentation"], [184, "detailed-documentation"], [187, "detailed-documentation"], [189, "detailed-documentation"], [188, "detailed-documentation"], [191, "detailed-documentation"], [190, "detailed-documentation"], [193, "detailed-documentation"], [192, "detailed-documentation"], [194, "detailed-documentation"], [195, "detailed-documentation"], [197, "detailed-documentation"], [196, "detailed-documentation"], [199, "detailed-documentation"], [198, "detailed-documentation"], [201, "detailed-documentation"], [200, "detailed-documentation"], [203, "detailed-documentation"], [202, "detailed-documentation"], [204, "detailed-documentation"], [205, "detailed-documentation"], [207, "detailed-documentation"], [206, "detailed-documentation"], [209, "detailed-documentation"], [208, "detailed-documentation"], [211, "detailed-documentation"], [210, "detailed-documentation"], [212, "detailed-documentation"], [213, "detailed-documentation"], [215, "detailed-documentation"], [214, "detailed-documentation"], [216, "detailed-documentation"], [217, "detailed-documentation"], [218, "detailed-documentation"], [219, "detailed-documentation"], [220, "detailed-documentation"], [221, "detailed-documentation"], [222, "detailed-documentation"], [223, "detailed-documentation"], [278, "detailed-documentation"], [283, "detailed-documentation"], [285, "detailed-documentation"], [284, "detailed-documentation"], [286, "detailed-documentation"], [287, "detailed-documentation"], [289, "detailed-documentation"], [291, "detailed-documentation"], [290, "detailed-documentation"], [293, "detailed-documentation"], [292, "detailed-documentation"], [295, "detailed-documentation"], [294, "detailed-documentation"], [297, "detailed-documentation"], [296, "detailed-documentation"], [299, "detailed-documentation"], [301, "detailed-documentation"], [300, "detailed-documentation"], [302, "detailed-documentation"], [303, "detailed-documentation"], [304, "detailed-documentation"], [305, "detailed-documentation"], [307, "detailed-documentation"], [306, "detailed-documentation"], [309, "detailed-documentation"], [308, "detailed-documentation"], [310, "detailed-documentation"], [311, "detailed-documentation"], [313, "detailed-documentation"], [312, "detailed-documentation"], [314, "detailed-documentation"], [315, "detailed-documentation"], [316, "detailed-documentation"], [317, "detailed-documentation"], [319, "detailed-documentation"], [318, "detailed-documentation"], [320, "detailed-documentation"], [321, "detailed-documentation"], [322, "detailed-documentation"], [325, "detailed-documentation"], [326, "detailed-documentation"], [327, "detailed-documentation"], [329, "detailed-documentation"], [328, "detailed-documentation"], [330, "detailed-documentation"], [333, "detailed-documentation"], [332, "detailed-documentation"], [335, "detailed-documentation"], [334, "detailed-documentation"], [337, "detailed-documentation"], [338, "detailed-documentation"], [344, "detailed-documentation"], [345, "detailed-documentation"], [346, "detailed-documentation"], [347, "detailed-documentation"], [348, "detailed-documentation"], [350, "detailed-documentation"], [443, "detailed-documentation"], [442, "detailed-documentation"], [445, "detailed-documentation"], [444, "detailed-documentation"], [446, "detailed-documentation"], [447, "detailed-documentation"], [448, "detailed-documentation"], [449, "detailed-documentation"], [450, "detailed-documentation"], [451, "detailed-documentation"], [453, "detailed-documentation"], [454, "detailed-documentation"], [455, "detailed-documentation"], [456, "detailed-documentation"], [457, "detailed-documentation"], [459, "detailed-documentation"], [458, "detailed-documentation"], [460, "detailed-documentation"], [461, "detailed-documentation"], [462, "detailed-documentation"], [463, "detailed-documentation"], [464, "detailed-documentation"], [465, "detailed-documentation"], [467, "detailed-documentation"], [466, "detailed-documentation"], [468, "detailed-documentation"], [469, "detailed-documentation"], [470, "detailed-documentation"], [473, "detailed-documentation"], [472, "detailed-documentation"], [475, "detailed-documentation"], [474, "detailed-documentation"], [477, "detailed-documentation"], [476, "detailed-documentation"], [479, "detailed-documentation"], [478, "detailed-documentation"], [481, "detailed-documentation"], [480, "detailed-documentation"], [483, "detailed-documentation"], [482, "detailed-documentation"], [485, "detailed-documentation"], [484, "detailed-documentation"], [487, "detailed-documentation"], [488, "detailed-documentation"], [489, "detailed-documentation"], [490, "detailed-documentation"], [491, "detailed-documentation"], [492, "detailed-documentation"], [493, "detailed-documentation"], [495, "detailed-documentation"], [494, "detailed-documentation"], [496, "detailed-documentation"], [497, "detailed-documentation"], [499, "detailed-documentation"], [498, "detailed-documentation"], [500, "detailed-documentation"], [501, "detailed-documentation"], [503, "detailed-documentation"], [502, "detailed-documentation"], [505, "detailed-documentation"], [504, "detailed-documentation"], [507, "detailed-documentation"], [506, "detailed-documentation"], [508, "detailed-documentation"], [509, "detailed-documentation"], [511, "detailed-documentation"], [510, "detailed-documentation"], [512, "detailed-documentation"], [513, "detailed-documentation"], [514, "detailed-documentation"], [516, "detailed-documentation"], [519, "detailed-documentation"], [518, "detailed-documentation"], [521, "detailed-documentation"], [520, "detailed-documentation"], [522, "detailed-documentation"], [523, "detailed-documentation"], [524, "detailed-documentation"], [525, "detailed-documentation"], [526, "detailed-documentation"], [527, "detailed-documentation"], [528, "detailed-documentation"], [530, "detailed-documentation"], [531, "detailed-documentation"], [532, "detailed-documentation"], [534, "detailed-documentation"], [535, "detailed-documentation"], [537, "detailed-documentation"], [536, "detailed-documentation"], [539, "detailed-documentation"], [538, "detailed-documentation"], [540, "detailed-documentation"], [541, "detailed-documentation"], [542, "detailed-documentation"], [543, "detailed-documentation"], [544, "detailed-documentation"], [545, "detailed-documentation"], [546, "detailed-documentation"], [547, "detailed-documentation"], [549, "detailed-documentation"], [548, "detailed-documentation"], [550, "detailed-documentation"], [551, "detailed-documentation"], [552, "detailed-documentation"], [555, "detailed-documentation"], [554, "detailed-documentation"], [557, "detailed-documentation"], [556, "detailed-documentation"], [560, "detailed-documentation"], [561, "detailed-documentation"], [563, "detailed-documentation"], [562, "detailed-documentation"], [565, "detailed-documentation"], [564, "detailed-documentation"], [567, "detailed-documentation"], [566, "detailed-documentation"]], "Construction": [[2, "construction"], [3, "construction"], [8, "construction"], [5, "construction"], [4, "construction"], [6, "construction"], [7, "construction"], [443, "construction"], [442, "construction"], [445, "construction"], [444, "construction"], [446, "construction"], [447, "construction"], [448, "construction"], [449, "construction"], [450, "construction"], [451, "construction"], [453, "construction"], [454, "construction"], [455, "construction"], [456, "construction"], [457, "construction"], [459, "construction"], [458, "construction"], [460, "construction"], [461, "construction"], [462, "construction"], [463, "construction"], [464, "construction"], [465, "construction"], [467, "construction"], [466, "construction"], [468, "construction"], [469, "construction"], [470, "construction"], [473, "construction"], [472, "construction"], [477, "construction"], [479, "construction"], [478, "construction"], [481, "construction"], [480, "construction"], [483, "construction"], [482, "construction"], [485, "construction"], [484, "construction"], [487, "construction"], [488, "construction"], [489, "construction"], [490, "construction"], [491, "construction"], [492, "construction"], [493, "construction"], [495, "construction"], [494, "construction"], [496, "construction"], [497, "construction"], [499, "construction"], [498, "construction"], [500, "construction"], [501, "construction"], [503, "construction"], [502, "construction"], [505, "construction"], [504, "construction"], [507, "construction"], [506, "construction"], [508, "construction"], [509, "construction"], [511, "construction"], [510, "construction"], [512, "construction"], [513, "construction"], [514, "construction"], [516, "construction"], [519, "construction"], [518, "construction"], [521, "construction"], [520, "construction"], [522, "construction"], [524, "construction"], [525, "construction"], [526, "construction"], [527, "construction"], [528, "construction"], [530, "construction"], [532, "construction"], [537, "construction"], [536, "construction"], [539, "construction"], [538, "construction"], [540, "construction"], [541, "construction"], [542, "construction"], [543, "construction"], [544, "construction"], [545, "construction"], [546, "construction"], [547, "construction"], [549, "construction"], [548, "construction"], [550, "construction"], [551, "construction"], [552, "construction"], [555, "construction"], [554, "construction"], [556, "construction"], [561, "construction"], [563, "construction"], [562, "construction"], [565, "construction"], [564, "construction"], [566, "construction"]], "class dnnl::graph::compiled_partition": [[3, "class-dnnl-graph-compiled-partition"]], "Methods": [[3, "methods"], [8, "methods"], [5, "methods"], [4, "methods"], [6, "methods"], [7, "methods"], [443, "methods"], [445, "methods"], [447, "methods"], [449, "methods"], [451, "methods"], [454, "methods"], [456, "methods"], [458, "methods"], [460, "methods"], [462, "methods"], [464, "methods"], [466, "methods"], [468, "methods"], [470, "methods"], [473, "methods"], [472, "methods"], [478, "methods"], [480, "methods"], [482, "methods"], [485, "methods"], [484, "methods"], [488, "methods"], [490, "methods"], [492, "methods"], [494, "methods"], [496, "methods"], [498, "methods"], [500, "methods"], [502, "methods"], [504, "methods"], [506, "methods"], [508, "methods"], [510, "methods"], [512, "methods"], [514, "methods"], [516, "methods"], [518, "methods"], [520, "methods"], [522, "methods"], [524, "methods"], [526, "methods"], [528, "methods"], [530, "methods"], [532, "methods"], [534, "methods"], [535, "methods"], [537, "methods"], [539, "methods"], [538, "methods"], [541, "methods"], [543, "methods"], [544, "methods"], [546, "methods"], [548, "methods"], [550, "methods"], [552, "methods"], [554, "methods"], [557, "methods"], [556, "methods"], [560, "methods"], [561, "methods"], [562, "methods"], [564, "methods"], [566, "methods"]], "class simple_memory_pool_t": [[9, "class-simple-memory-pool-t"]], "class dnnl::graph::tensor": [[8, "class-dnnl-graph-tensor"]], "Primitive Attributes: Scratchpad": [[18, "primitive-attributes-scratchpad"]], "Scratchpad Memory Engine": [[18, "scratchpad-memory-engine"]], "Examples": [[18, "examples"], [22, "examples"], [20, "examples"], [35, "examples"], [43, "examples"], [53, "examples"], [157, "examples"], [158, "examples"]], "Library Manages Scratchpad": [[18, "library-manages-scratchpad"]], "User Manages Scratchpad": [[18, "user-manages-scratchpad"]], "Basic Concepts": [[19, "basic-concepts"], [37, "basic-concepts"], [156, "basic-concepts"]], "Primitives": [[19, "primitives"], [19, "id2"], [36, "primitives"], [307, "primitives"]], "Engines": [[19, "engines"]], "Streams": [[19, "streams"]], "Memory Objects": [[19, "memory-objects"], [19, "id1"]], "Levels of Abstraction": [[19, "levels-of-abstraction"]], "Creating Memory Objects and Primitives": [[19, "creating-memory-objects-and-primitives"]], "Graph Extension": [[19, "graph-extension"], [279, "graph-extension"]], "Micro-kernel Extension": [[19, "micro-kernel-extension"]], "Primitive Attributes: rounding mode": [[17, "primitive-attributes-rounding-mode"]], "Primitive Attributes: Quantization": [[16, "primitive-attributes-quantization"]], "Quantization Model": [[16, "quantization-model"]], "Numerical behavior": [[16, "numerical-behavior"]], "Example: Convolution Quantization Workflow": [[16, "example-convolution-quantization-workflow"]], "Per-Channel Scaling": [[16, "per-channel-scaling"]], "Argument Scaling": [[16, "argument-scaling"]], "Example 1: weights quantization with per-output-channel scaling": [[16, "example-1-weights-quantization-with-per-output-channel-scaling"]], "Example 2: convolution with per-output-channel quantization": [[16, "example-2-convolution-with-per-output-channel-quantization"]], "Constant Tensor Cache": [[27, "constant-tensor-cache"], [328, "constant-tensor-cache"]], "Build-Time Controls": [[27, "build-time-controls"], [38, "build-time-controls"], [39, "build-time-controls"], [144, "build-time-controls"], [144, "id1"], [160, "build-time-controls"]], "Run-Time Controls": [[27, "run-time-controls"], [39, "run-time-controls"], [144, "run-time-controls"], [144, "id2"], [160, "run-time-controls"]], "Constant Tensor Cache Capacity Control API": [[27, "constant-tensor-cache-capacity-control-api"]], "Environment Variable": [[27, "environment-variable"]], "Concat": [[26, "concat"], [66, "concat"], [289, "concat"]], "General": [[26, "general"], [54, "general"], [55, "general"], [22, "general"], [62, "general"], [63, "general"], [20, "general"], [34, "general"], [47, "general"], [43, "general"], [50, "general"], [53, "general"], [52, "general"], [57, "general"], [56, "general"], [59, "general"], [58, "general"], [29, "general"], [60, "general"], [61, "general"], [65, "general"], [64, "general"], [66, "general"], [67, "general"], [68, "general"], [69, "general"], [71, "general"], [70, "general"], [72, "general"], [73, "general"], [75, "general"], [74, "general"], [76, "general"], [77, "general"], [79, "general"], [78, "general"], [80, "general"], [81, "general"], [83, "general"], [82, "general"], [85, "general"], [84, "general"], [86, "general"], [87, "general"], [88, "general"], [89, "general"], [90, "general"], [91, "general"], [92, "general"], [93, "general"], [94, "general"], [95, "general"], [96, "general"], [97, "general"], [98, "general"], [99, "general"], [101, "general"], [100, "general"], [103, "general"], [102, "general"], [105, "general"], [104, "general"], [106, "general"], [107, "general"], [109, "general"], [108, "general"], [111, "general"], [110, "general"], [113, "general"], [112, "general"], [115, "general"], [114, "general"], [117, "general"], [116, "general"], [118, "general"], [119, "general"], [121, "general"], [120, "general"], [123, "general"], [122, "general"], [125, "general"], [124, "general"], [127, "general"], [126, "general"], [129, "general"], [128, "general"], [131, "general"], [130, "general"], [132, "general"], [133, "general"], [135, "general"], [134, "general"], [137, "general"], [136, "general"], [141, "general"], [142, "general"], [145, "general"], [147, "general"], [146, "general"], [148, "general"], [149, "general"], [151, "general"], [150, "general"], [157, "general"], [158, "general"]], "Execution Arguments": [[26, "execution-arguments"], [22, "execution-arguments"], [20, "execution-arguments"], [34, "execution-arguments"], [47, "execution-arguments"], [43, "execution-arguments"], [50, "execution-arguments"], [53, "execution-arguments"], [52, "execution-arguments"], [29, "execution-arguments"], [141, "execution-arguments"], [142, "execution-arguments"], [145, "execution-arguments"], [147, "execution-arguments"], [146, "execution-arguments"], [148, "execution-arguments"], [149, "execution-arguments"], [151, "execution-arguments"], [150, "execution-arguments"]], "Implementation Details": [[26, "implementation-details"], [22, "implementation-details"], [20, "implementation-details"], [34, "implementation-details"], [47, "implementation-details"], [43, "implementation-details"], [50, "implementation-details"], [53, "implementation-details"], [52, "implementation-details"], [29, "implementation-details"], [141, "implementation-details"], [142, "implementation-details"], [145, "implementation-details"], [147, "implementation-details"], [146, "implementation-details"], [148, "implementation-details"], [151, "implementation-details"], [150, "implementation-details"]], "General Notes": [[26, "general-notes"], [22, "general-notes"], [20, "general-notes"], [34, "general-notes"], [47, "general-notes"], [43, "general-notes"], [50, "general-notes"], [53, "general-notes"], [52, "general-notes"], [29, "general-notes"], [141, "general-notes"], [142, "general-notes"], [145, "general-notes"], [147, "general-notes"], [146, "general-notes"], [151, "general-notes"], [150, "general-notes"]], "Data Types Support": [[26, "data-types-support"], [22, "data-types-support"], [145, "data-types-support"], [146, "data-types-support"], [151, "data-types-support"]], "Data Representation": [[26, "data-representation"], [22, "data-representation"], [20, "data-representation"], [34, "data-representation"], [47, "data-representation"], [43, "data-representation"], [50, "data-representation"], [53, "data-representation"], [52, "data-representation"], [29, "data-representation"], [141, "data-representation"], [142, "data-representation"], [145, "data-representation"], [146, "data-representation"], [148, "data-representation"], [151, "data-representation"], [150, "data-representation"], [157, "data-representation"], [158, "data-representation"]], "Post-Ops and Attributes": [[26, "post-ops-and-attributes"], [22, "post-ops-and-attributes"], [20, "post-ops-and-attributes"], [34, "post-ops-and-attributes"], [47, "post-ops-and-attributes"], [43, "post-ops-and-attributes"], [141, "post-ops-and-attributes"], [145, "post-ops-and-attributes"], [147, "post-ops-and-attributes"], [146, "post-ops-and-attributes"], [148, "post-ops-and-attributes"], [149, "post-ops-and-attributes"], [151, "post-ops-and-attributes"]], "Implementation Limitations": [[26, "implementation-limitations"], [22, "implementation-limitations"], [20, "implementation-limitations"], [34, "implementation-limitations"], [47, "implementation-limitations"], [43, "implementation-limitations"], [50, "implementation-limitations"], [53, "implementation-limitations"], [52, "implementation-limitations"], [29, "implementation-limitations"], [141, "implementation-limitations"], [142, "implementation-limitations"], [145, "implementation-limitations"], [147, "implementation-limitations"], [146, "implementation-limitations"], [148, "implementation-limitations"], [149, "implementation-limitations"], [151, "implementation-limitations"], [150, "implementation-limitations"]], "Performance Tips": [[26, "performance-tips"], [22, "performance-tips"], [20, "performance-tips"], [34, "performance-tips"], [47, "performance-tips"], [43, "performance-tips"], [50, "performance-tips"], [53, "performance-tips"], [52, "performance-tips"], [29, "performance-tips"], [141, "performance-tips"], [142, "performance-tips"], [145, "performance-tips"], [147, "performance-tips"], [146, "performance-tips"], [149, "performance-tips"], [151, "performance-tips"], [150, "performance-tips"]], "Example": [[26, "example"], [34, "example"], [47, "example"], [46, "example"], [42, "example"], [50, "example"], [52, "example"], [29, "example"], [141, "example"], [142, "example"], [145, "example"], [147, "example"], [146, "example"], [148, "example"], [149, "example"], [151, "example"], [150, "example"], [154, "example"], [160, "example"]], "CPU ISA Hints": [[31, "cpu-isa-hints"]], "Build-time Controls": [[31, "build-time-controls"], [30, "build-time-controls"], [36, "build-time-controls"], [143, "build-time-controls"]], "Run-time Controls": [[31, "run-time-controls"], [143, "run-time-controls"]], "CPU Dispatcher Control": [[30, "cpu-dispatcher-control"]], "Runtime Controls": [[30, "runtime-controls"]], "Graph Compiler": [[38, "graph-compiler"]], "Codegen and JIT Options": [[38, "codegen-and-jit-options"]], "C": [[38, "c"]], "LLVM": [[38, "llvm"]], "Builtin": [[38, "builtin"]], "Environment Variables": [[38, "environment-variables"]], "Enable Tracing": [[38, "enable-tracing"]], "Switch Between Different Codegen Methods": [[38, "switch-between-different-codegen-methods"]], "Enable Code Dumping": [[38, "enable-code-dumping"]], "Graph Dump": [[39, "graph-dump"]], "Abs": [[54, "abs"]], "Operation attributes": [[54, "operation-attributes"], [55, "operation-attributes"], [62, "operation-attributes"], [63, "operation-attributes"], [57, "operation-attributes"], [56, "operation-attributes"], [59, "operation-attributes"], [58, "operation-attributes"], [60, "operation-attributes"], [61, "operation-attributes"], [65, "operation-attributes"], [64, "operation-attributes"], [66, "operation-attributes"], [67, "operation-attributes"], [68, "operation-attributes"], [69, "operation-attributes"], [71, "operation-attributes"], [70, "operation-attributes"], [72, "operation-attributes"], [73, "operation-attributes"], [75, "operation-attributes"], [74, "operation-attributes"], [76, "operation-attributes"], [77, "operation-attributes"], [79, "operation-attributes"], [78, "operation-attributes"], [80, "operation-attributes"], [81, "operation-attributes"], [83, "operation-attributes"], [82, "operation-attributes"], [85, "operation-attributes"], [84, "operation-attributes"], [86, "operation-attributes"], [87, "operation-attributes"], [88, "operation-attributes"], [89, "operation-attributes"], [90, "operation-attributes"], [91, "operation-attributes"], [92, "operation-attributes"], [93, "operation-attributes"], [94, "operation-attributes"], [95, "operation-attributes"], [96, "operation-attributes"], [97, "operation-attributes"], [98, "operation-attributes"], [99, "operation-attributes"], [101, "operation-attributes"], [100, "operation-attributes"], [103, "operation-attributes"], [102, "operation-attributes"], [105, "operation-attributes"], [104, "operation-attributes"], [106, "operation-attributes"], [107, "operation-attributes"], [109, "operation-attributes"], [108, "operation-attributes"], [111, "operation-attributes"], [110, "operation-attributes"], [113, "operation-attributes"], [112, "operation-attributes"], [115, "operation-attributes"], [114, "operation-attributes"], [117, "operation-attributes"], [116, "operation-attributes"], [118, "operation-attributes"], [119, "operation-attributes"], [121, "operation-attributes"], [120, "operation-attributes"], [123, "operation-attributes"], [122, "operation-attributes"], [125, "operation-attributes"], [124, "operation-attributes"], [127, "operation-attributes"], [126, "operation-attributes"], [129, "operation-attributes"], [128, "operation-attributes"], [131, "operation-attributes"], [130, "operation-attributes"], [132, "operation-attributes"], [133, "operation-attributes"], [135, "operation-attributes"], [134, "operation-attributes"], [137, "operation-attributes"], [136, "operation-attributes"]], "Execution arguments": [[54, "execution-arguments"], [55, "execution-arguments"], [62, "execution-arguments"], [63, "execution-arguments"], [57, "execution-arguments"], [56, "execution-arguments"], [59, "execution-arguments"], [58, "execution-arguments"], [60, "execution-arguments"], [61, "execution-arguments"], [65, "execution-arguments"], [64, "execution-arguments"], [66, "execution-arguments"], [67, "execution-arguments"], [68, "execution-arguments"], [69, "execution-arguments"], [71, "execution-arguments"], [70, "execution-arguments"], [72, "execution-arguments"], [73, "execution-arguments"], [75, "execution-arguments"], [74, "execution-arguments"], [76, "execution-arguments"], [77, "execution-arguments"], [79, "execution-arguments"], [78, "execution-arguments"], [80, "execution-arguments"], [81, "execution-arguments"], [83, "execution-arguments"], [82, "execution-arguments"], [85, "execution-arguments"], [84, "execution-arguments"], [86, "execution-arguments"], [87, "execution-arguments"], [88, "execution-arguments"], [89, "execution-arguments"], [90, "execution-arguments"], [91, "execution-arguments"], [92, "execution-arguments"], [93, "execution-arguments"], [94, "execution-arguments"], [95, "execution-arguments"], [96, "execution-arguments"], [97, "execution-arguments"], [98, "execution-arguments"], [99, "execution-arguments"], [101, "execution-arguments"], [100, "execution-arguments"], [103, "execution-arguments"], [102, "execution-arguments"], [105, "execution-arguments"], [106, "execution-arguments"], [107, "execution-arguments"], [109, "execution-arguments"], [108, "execution-arguments"], [111, "execution-arguments"], [110, "execution-arguments"], [113, "execution-arguments"], [112, "execution-arguments"], [115, "execution-arguments"], [114, "execution-arguments"], [117, "execution-arguments"], [116, "execution-arguments"], [118, "execution-arguments"], [119, "execution-arguments"], [121, "execution-arguments"], [120, "execution-arguments"], [123, "execution-arguments"], [122, "execution-arguments"], [125, "execution-arguments"], [124, "execution-arguments"], [127, "execution-arguments"], [126, "execution-arguments"], [129, "execution-arguments"], [128, "execution-arguments"], [131, "execution-arguments"], [130, "execution-arguments"], [132, "execution-arguments"], [133, "execution-arguments"], [135, "execution-arguments"], [134, "execution-arguments"], [137, "execution-arguments"], [136, "execution-arguments"]], "Inputs": [[54, "inputs"], [55, "inputs"], [62, "inputs"], [63, "inputs"], [57, "inputs"], [56, "inputs"], [59, "inputs"], [58, "inputs"], [60, "inputs"], [61, "inputs"], [65, "inputs"], [64, "inputs"], [66, "inputs"], [67, "inputs"], [68, "inputs"], [69, "inputs"], [71, "inputs"], [70, "inputs"], [72, "inputs"], [73, "inputs"], [75, "inputs"], [74, "inputs"], [76, "inputs"], [77, "inputs"], [79, "inputs"], [78, "inputs"], [80, "inputs"], [81, "inputs"], [83, "inputs"], [82, "inputs"], [85, "inputs"], [84, "inputs"], [86, "inputs"], [87, "inputs"], [88, "inputs"], [89, "inputs"], [90, "inputs"], [91, "inputs"], [92, "inputs"], [93, "inputs"], [94, "inputs"], [95, "inputs"], [96, "inputs"], [97, "inputs"], [98, "inputs"], [99, "inputs"], [101, "inputs"], [100, "inputs"], [103, "inputs"], [102, "inputs"], [105, "inputs"], [104, "inputs"], [106, "inputs"], [107, "inputs"], [109, "inputs"], [108, "inputs"], [111, "inputs"], [110, "inputs"], [113, "inputs"], [112, "inputs"], [115, "inputs"], [114, "inputs"], [117, "inputs"], [116, "inputs"], [118, "inputs"], [119, "inputs"], [121, "inputs"], [120, "inputs"], [123, "inputs"], [122, "inputs"], [125, "inputs"], [124, "inputs"], [127, "inputs"], [126, "inputs"], [129, "inputs"], [128, "inputs"], [131, "inputs"], [130, "inputs"], [132, "inputs"], [133, "inputs"], [135, "inputs"], [134, "inputs"], [137, "inputs"], [136, "inputs"]], "Outputs": [[54, "outputs"], [55, "outputs"], [62, "outputs"], [63, "outputs"], [57, "outputs"], [56, "outputs"], [59, "outputs"], [58, "outputs"], [60, "outputs"], [61, "outputs"], [65, "outputs"], [64, "outputs"], [66, "outputs"], [67, "outputs"], [68, "outputs"], [69, "outputs"], [71, "outputs"], [70, "outputs"], [72, "outputs"], [73, "outputs"], [75, "outputs"], [74, "outputs"], [76, "outputs"], [77, "outputs"], [79, "outputs"], [78, "outputs"], [80, "outputs"], [81, "outputs"], [83, "outputs"], [82, "outputs"], [85, "outputs"], [84, "outputs"], [86, "outputs"], [87, "outputs"], [88, "outputs"], [89, "outputs"], [90, "outputs"], [91, "outputs"], [92, "outputs"], [93, "outputs"], [94, "outputs"], [95, "outputs"], [96, "outputs"], [97, "outputs"], [98, "outputs"], [99, "outputs"], [101, "outputs"], [100, "outputs"], [103, "outputs"], [102, "outputs"], [105, "outputs"], [104, "outputs"], [106, "outputs"], [107, "outputs"], [109, "outputs"], [108, "outputs"], [111, "outputs"], [110, "outputs"], [113, "outputs"], [112, "outputs"], [115, "outputs"], [114, "outputs"], [117, "outputs"], [116, "outputs"], [118, "outputs"], [119, "outputs"], [121, "outputs"], [120, "outputs"], [123, "outputs"], [122, "outputs"], [125, "outputs"], [124, "outputs"], [127, "outputs"], [126, "outputs"], [129, "outputs"], [128, "outputs"], [131, "outputs"], [130, "outputs"], [132, "outputs"], [133, "outputs"], [135, "outputs"], [134, "outputs"], [137, "outputs"], [136, "outputs"]], "Supported data types": [[54, "supported-data-types"], [55, "supported-data-types"], [62, "supported-data-types"], [63, "supported-data-types"], [57, "supported-data-types"], [56, "supported-data-types"], [59, "supported-data-types"], [58, "supported-data-types"], [60, "supported-data-types"], [61, "supported-data-types"], [65, "supported-data-types"], [64, "supported-data-types"], [66, "supported-data-types"], [67, "supported-data-types"], [68, "supported-data-types"], [69, "supported-data-types"], [71, "supported-data-types"], [70, "supported-data-types"], [72, "supported-data-types"], [73, "supported-data-types"], [75, "supported-data-types"], [74, "supported-data-types"], [76, "supported-data-types"], [77, "supported-data-types"], [79, "supported-data-types"], [78, "supported-data-types"], [80, "supported-data-types"], [81, "supported-data-types"], [83, "supported-data-types"], [82, "supported-data-types"], [85, "supported-data-types"], [84, "supported-data-types"], [86, "supported-data-types"], [87, "supported-data-types"], [88, "supported-data-types"], [89, "supported-data-types"], [90, "supported-data-types"], [91, "supported-data-types"], [92, "supported-data-types"], [93, "supported-data-types"], [94, "supported-data-types"], [95, "supported-data-types"], [96, "supported-data-types"], [97, "supported-data-types"], [98, "supported-data-types"], [99, "supported-data-types"], [101, "supported-data-types"], [100, "supported-data-types"], [103, "supported-data-types"], [102, "supported-data-types"], [105, "supported-data-types"], [104, "supported-data-types"], [106, "supported-data-types"], [107, "supported-data-types"], [109, "supported-data-types"], [108, "supported-data-types"], [111, "supported-data-types"], [110, "supported-data-types"], [113, "supported-data-types"], [112, "supported-data-types"], [115, "supported-data-types"], [114, "supported-data-types"], [117, "supported-data-types"], [116, "supported-data-types"], [118, "supported-data-types"], [119, "supported-data-types"], [121, "supported-data-types"], [120, "supported-data-types"], [123, "supported-data-types"], [122, "supported-data-types"], [125, "supported-data-types"], [124, "supported-data-types"], [127, "supported-data-types"], [126, "supported-data-types"], [129, "supported-data-types"], [128, "supported-data-types"], [131, "supported-data-types"], [130, "supported-data-types"], [132, "supported-data-types"], [133, "supported-data-types"], [135, "supported-data-types"], [134, "supported-data-types"], [137, "supported-data-types"], [136, "supported-data-types"]], "AbsBackward": [[55, "absbackward"]], "Binary": [[22, "binary"], [15, "binary"], [286, "binary"]], "Sources, Destination": [[22, "sources-destination"], [145, "sources-destination"], [151, "sources-destination"]], "Build from Source": [[23, "build-from-source"]], "Download the Source Code": [[23, "download-the-source-code"]], "Build the Library": [[23, "build-the-library"]], "Linux/macOS": [[23, "linux-macos"], [51, "linux-macos"]], "GCC, Clang, or Intel oneAPI DPC++/C++ Compiler": [[23, "gcc-clang-or-intel-oneapi-dpc-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL runtime": [[23, "intel-oneapi-dpc-c-compiler-with-sycl-runtime"]], "GCC targeting AArch64 on x64 host": [[23, "gcc-targeting-aarch64-on-x64-host"]], "GCC with Arm Compute Library (ACL) on AArch64 host": [[23, "gcc-with-arm-compute-library-acl-on-aarch64-host"]], "Windows": [[23, "windows"], [51, "windows"], [51, "id1"]], "Microsoft Visual C++ Compiler": [[23, "microsoft-visual-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL Runtime": [[23, "id1"]], "Validate the Build": [[23, "validate-the-build"]], "Build documentation": [[23, "build-documentation"]], "Install library": [[23, "install-library"]], "BiasAdd": [[62, "biasadd"]], "BiasAddBackward": [[63, "biasaddbackward"]], "Primitive Attributes: floating-point math mode": [[14, "primitive-attributes-floating-point-math-mode"]], "The floating-point math mode attribute.": [[14, "the-floating-point-math-mode-attribute"]], "Enforcing the floating-point math mode to an integral primitive.": [[14, "enforcing-the-floating-point-math-mode-to-an-integral-primitive"]], "A note on the default floating-point math mode.": [[14, "a-note-on-the-default-floating-point-math-mode"]], "Primitive Attributes: Post-ops": [[15, "primitive-attributes-post-ops"]], "Supported Post-ops": [[15, "supported-post-ops"]], "Eltwise Post-op": [[15, "eltwise-post-op"]], "Sum Post-op": [[15, "sum-post-op"]], "Depthwise Post-op": [[15, "depthwise-post-op"]], "Binary Post-op": [[15, "binary-post-op"]], "Prelu Post-op": [[15, "prelu-post-op"]], "Examples of Chained Post-ops": [[15, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[15, "sum-relu"]], "Tanh -> Sum -> ScaleShift": [[15, "tanh-sum-scaleshift"]], "Relu -> Depthwise -> Relu": [[15, "relu-depthwise-relu"]], "Data Types": [[32, "data-types"], [47, "data-types"], [53, "data-types"], [29, "data-types"], [147, "data-types"], [149, "data-types"], [157, "data-types"], [158, "data-types"]], "Inference and Training": [[32, "inference-and-training"]], "General numerical behavior of the oneDNN library": [[32, "general-numerical-behavior-of-the-onednn-library"]], "Rounding mode and denormal handling": [[32, "rounding-mode-and-denormal-handling"]], "Hardware Limitations": [[32, "hardware-limitations"]], "Intel(R) Architecture Processors": [[32, "intel-r-architecture-processors"]], "Intel(R) Processor Graphics and Xe Architecture graphics": [[32, "intel-r-processor-graphics-and-xe-architecture-graphics"]], "DPC++ Interoperability": [[33, "dpc-interoperability"]], "SYCL Buffers and DPC++ USM Interfaces for Memory Objects": [[33, "sycl-buffers-and-dpc-usm-interfaces-for-memory-objects"]], "Handling Dependencies with USM": [[33, "handling-dependencies-with-usm"]], "Experimental features": [[36, "experimental-features"], [36, "id1"]], "Features details": [[36, "features-details"]], "ONEDNN_EXPERIMENTAL_SPARSE": [[36, "onednn-experimental-sparse"]], "Matrix Multiplication": [[36, "matrix-multiplication"], [53, "matrix-multiplication"], [301, "matrix-multiplication"]], "CSR encoding": [[36, "csr-encoding"]], "COO encoding": [[36, "coo-encoding"]], "PACKED encoding": [[36, "packed-encoding"]], "Reorder": [[36, "reorder"], [118, "reorder"], [146, "reorder"], [311, "reorder"]], "Common Limitations": [[36, "common-limitations"]], "ONEDNN_EXPERIMENTAL_UKERNEL": [[36, "onednn-experimental-ukernel"]], "ONEDNN_EXPERIMENTAL_PROFILING": [[36, "onednn-experimental-profiling"]], "Limitations": [[36, "limitations"], [140, "limitations"]], "ONEDNN_EXPERIMENTAL_GRAPH_COMPILER_BACKEND": [[36, "onednn-experimental-graph-compiler-backend"]], "ONEDNN_EXPERIMENTAL_LOGGING": [[36, "onednn-experimental-logging"]], "Logical Tensor": [[37, "logical-tensor"], [332, "logical-tensor"]], "Op": [[37, "op"], [334, "op"]], "Graph": [[37, "graph"], [330, "graph"]], "Partition": [[37, "partition"], [335, "partition"]], "Compiled Partition": [[37, "compiled-partition"], [326, "compiled-partition"]], "Tensor": [[37, "tensor"], [338, "tensor"]], "Inference and Training Aspects": [[45, "inference-and-training-aspects"]], "Propagation Kinds": [[45, "propagation-kinds"]], "Difference Between Forward Propagation on Training and Inference": [[45, "difference-between-forward-propagation-on-training-and-inference"]], "Different Backward Propagation Kinds": [[45, "different-backward-propagation-kinds"]], "Inference-Specific Aspects": [[45, "inference-specific-aspects"]], "Training-Specific Aspects": [[45, "training-specific-aspects"]], "Workspace": [[45, "workspace"]], "Inference": [[44, "inference"], [40, "inference"], [40, "id1"]], "Best Practices for Inference": [[44, "best-practices-for-inference"]], "fp32 Inference": [[44, "fp32-inference"]], "int8 Inference": [[44, "int8-inference"]], "Input validation notes": [[25, "input-validation-notes"]], "Build Options": [[24, "build-options"]], "Common options": [[24, "common-options"]], "Host compiler": [[24, "host-compiler"]], "Configuring functionality": [[24, "configuring-functionality"]], "ONEDNN_ENABLE_WORKLOAD": [[24, "onednn-enable-workload"]], "ONEDNN_ENABLE_PRIMITIVE": [[24, "onednn-enable-primitive"]], "ONEDNN_ENABLE_PRIMITIVE_CPU_ISA": [[24, "onednn-enable-primitive-cpu-isa"]], "ONEDNN_ENABLE_PRIMITIVE_GPU_ISA": [[24, "onednn-enable-primitive-gpu-isa"]], "ONEDNN_ENABLE_GEMM_KERNELS_ISA": [[24, "onednn-enable-gemm-kernels-isa"]], "Configuring testing": [[24, "configuring-testing"]], "ONEDNN_TEST_SET": [[24, "onednn-test-set"]], "CPU Options": [[24, "cpu-options"]], "Targeting Specific Architecture": [[24, "targeting-specific-architecture"]], "Runtimes": [[24, "runtimes"], [24, "id1"]], "OpenMP": [[24, "openmp"]], "Threading Building Blocks (TBB)": [[24, "threading-building-blocks-tbb"]], "Threadpool": [[24, "threadpool"]], "AArch64 Options": [[24, "aarch64-options"]], "Arm Compute Library": [[24, "arm-compute-library"]], "Vendor BLAS libraries": [[24, "vendor-blas-libraries"]], "GPU Options": [[24, "gpu-options"]], "OpenCL*": [[24, "opencl"]], "Graph component limitations": [[24, "graph-component-limitations"]], "Graph Compiler Backend Limitations": [[24, "graph-compiler-backend-limitations"]], "Batch Normalization": [[20, "batch-normalization"], [285, "batch-normalization"]], "Forward": [[20, "forward"], [34, "forward"], [47, "forward"], [43, "forward"], [50, "forward"], [52, "forward"], [29, "forward"], [141, "forward"], [142, "forward"], [147, "forward"], [149, "forward"], [150, "forward"]], "Difference Between Forward Training and Forward Inference": [[20, "difference-between-forward-training-and-forward-inference"], [34, "difference-between-forward-training-and-forward-inference"], [47, "difference-between-forward-training-and-forward-inference"], [43, "difference-between-forward-training-and-forward-inference"], [50, "difference-between-forward-training-and-forward-inference"], [29, "difference-between-forward-training-and-forward-inference"], [141, "difference-between-forward-training-and-forward-inference"], [142, "difference-between-forward-training-and-forward-inference"], [147, "difference-between-forward-training-and-forward-inference"], [149, "difference-between-forward-training-and-forward-inference"], [150, "difference-between-forward-training-and-forward-inference"]], "Backward": [[20, "backward"], [34, "backward"], [47, "backward"], [43, "backward"], [50, "backward"], [52, "backward"], [29, "backward"], [141, "backward"], [142, "backward"], [147, "backward"], [149, "backward"], [150, "backward"]], "Data Type Support": [[20, "data-type-support"], [34, "data-type-support"], [43, "data-type-support"], [50, "data-type-support"], [52, "data-type-support"], [141, "data-type-support"], [142, "data-type-support"], [148, "data-type-support"], [150, "data-type-support"]], "Mean and Variance": [[20, "mean-and-variance"], [43, "mean-and-variance"], [50, "mean-and-variance"]], "Scale and Shift": [[20, "scale-and-shift"], [43, "scale-and-shift"], [50, "scale-and-shift"]], "Source, Destination, and Their Gradients": [[20, "source-destination-and-their-gradients"], [43, "source-destination-and-their-gradients"], [50, "source-destination-and-their-gradients"], [52, "source-destination-and-their-gradients"], [141, "source-destination-and-their-gradients"], [150, "source-destination-and-their-gradients"]], "Benchmarking Performance": [[21, "benchmarking-performance"]], "Supported Fusion Patterns": [[40, "supported-fusion-patterns"]], "Fusion Patterns": [[40, "fusion-patterns"]], "Floating Point Patterns": [[40, "floating-point-patterns"], [40, "id2"]], "Quantized Patterns": [[40, "quantized-patterns"], [40, "id3"]], "Training": [[40, "training"], [40, "id4"], [153, "training"]], "Aggressive Fusion Patterns": [[40, "aggressive-fusion-patterns"]], "Low Precision": [[41, "low-precision"]], "INT8": [[41, "int8"]], "BF16/F16": [[41, "bf16-f16"]], "Eltwise": [[34, "eltwise"], [293, "eltwise"]], "Exceptions": [[34, "exceptions"]], "Inner Product": [[47, "inner-product"], [297, "inner-product"]], "Int8 Inference": [[46, "int8-inference"]], "Int8 Workflow": [[46, "int8-workflow"]], "Quantization Process": [[46, "quantization-process"]], "Range of the Data": [[46, "range-of-the-data"]], "Scaling Factor": [[46, "scaling-factor"]], "Quantization Example": [[46, "quantization-example"]], "int8 Support": [[46, "int8-support"]], "Attributes": [[46, "attributes"], [157, "attributes"], [158, "attributes"], [284, "attributes"]], "Group Normalization": [[43, "group-normalization"], [296, "group-normalization"]], "Scaled Dot-Product Attention (SDPA)": [[42, "scaled-dot-product-attention-sdpa"]], "Background": [[42, "background"]], "SDPA patterns": [[42, "sdpa-patterns"]], "Floating point SDPA": [[42, "floating-point-sdpa"]], "Data types": [[42, "data-types"], [291, "data-types"]], "Implementation limitations": [[42, "implementation-limitations"], [157, "implementation-limitations"], [158, "implementation-limitations"]], "References": [[42, "references"], [49, "references"]], "Inspecting JIT Code": [[48, "inspecting-jit-code"]], "Example (CPU)": [[48, "example-cpu"]], "Example (GPU)": [[48, "example-gpu"]], "Nuances of int8 Computations": [[49, "nuances-of-int8-computations"]], "CPU": [[49, "cpu"], [139, "cpu"]], "1. Inputs of mixed type: u8 and s8": [[49, "inputs-of-mixed-type-u8-and-s8"]], "1.1. Processors with the Intel AVX2 or Intel AVX-512 Support": [[49, "processors-with-the-intel-avx2-or-intel-avx-512-support"]], "1.2. Processors with the Intel DL Boost Support": [[49, "processors-with-the-intel-dl-boost-support"]], "2. Inputs of the same type: s8": [[49, "inputs-of-the-same-type-s8"]], "GPU": [[49, "gpu"]], "Linking to the Library": [[51, "linking-to-the-library"]], "Header Files": [[51, "header-files"]], "Libraries": [[51, "libraries"]], "Linux": [[51, "linux"]], "macOS": [[51, "macos"]], "Linking to oneDNN": [[51, "linking-to-onednn"]], "Support for macOS hardened runtime": [[51, "support-for-macos-hardened-runtime"]], "Layer Normalization": [[50, "layer-normalization"], [299, "layer-normalization"]], "Post-ops and Attributes": [[50, "post-ops-and-attributes"], [52, "post-ops-and-attributes"], [29, "post-ops-and-attributes"], [150, "post-ops-and-attributes"]], "Attributes and Post-ops": [[53, "attributes-and-post-ops"]], "Matrix Multiplication Primitive Examples": [[53, "matrix-multiplication-primitive-examples"]], "Local Response Normalization (LRN)": [[52, "local-response-normalization-lrn"]], "AvgPool": [[57, "avgpool"]], "Add": [[56, "add"]], "BatchNormForwardTraining": [[59, "batchnormforwardtraining"]], "AvgPoolBackward": [[58, "avgpoolbackward"]], "class dnnl::graph::logical_tensor": [[5, "class-dnnl-graph-logical-tensor"]], "Typedefs": [[5, "typedefs"], [284, "typedefs"], [291, "typedefs"], [294, "typedefs"], [302, "typedefs"], [308, "typedefs"], [314, "typedefs"], [317, "typedefs"], [321, "typedefs"], [322, "typedefs"], [325, "typedefs"], [326, "typedefs"], [330, "typedefs"], [333, "typedefs"], [335, "typedefs"], [334, "typedefs"], [337, "typedefs"], [338, "typedefs"], [516, "typedefs"]], "class dnnl::graph::graph": [[4, "class-dnnl-graph-graph"]], "class dnnl::graph::op": [[6, "class-dnnl-graph-op"]], "class dnnl::graph::partition": [[7, "class-dnnl-graph-partition"]], "Naming Conventions": [[28, "naming-conventions"]], "Variable (Tensor) Names": [[28, "variable-tensor-names"]], "Formulas and Verbose Output": [[28, "formulas-and-verbose-output"]], "RNN-Specific Notation": [[28, "rnn-specific-notation"]], "Memory Formats Tags": [[28, "memory-formats-tags"]], "Convolution": [[29, "convolution"], [67, "convolution"], [290, "convolution"]], "Regular Convolution": [[29, "regular-convolution"], [67, "regular-convolution"]], "Convolution with Groups": [[29, "convolution-with-groups"], [67, "convolution-with-groups"]], "Convolution with Dilation": [[29, "convolution-with-dilation"], [67, "convolution-with-dilation"]], "Deconvolution (Transposed Convolution)": [[29, "deconvolution-transposed-convolution"]], "Example 1": [[29, "example-1"]], "Example 2": [[29, "example-2"]], "Example 3": [[29, "example-3"]], "Algorithms": [[29, "algorithms"]], "Direct Algorithm": [[29, "direct-algorithm"]], "Winograd Convolution": [[29, "winograd-convolution"]], "Automatic Algorithm Selection": [[29, "automatic-algorithm-selection"]], "BatchNormInference": [[60, "batchnorminference"]], "BatchNormTrainingBackward": [[61, "batchnormtrainingbackward"]], "ClampBackward": [[65, "clampbackward"]], "Clamp": [[64, "clamp"]], "ConvolutionBackwardData": [[68, "convolutionbackwarddata"]], "ConvolutionBackwardWeights": [[69, "convolutionbackwardweights"]], "ConvTransposeBackwardData": [[71, "convtransposebackwarddata"]], "ConvTranspose": [[70, "convtranspose"]], "ConvTransposeBackwardWeights": [[72, "convtransposebackwardweights"]], "Dequantize": [[73, "dequantize"]], "DynamicDequantize": [[75, "dynamicdequantize"]], "Divide": [[74, "divide"]], "DynamicQuantize": [[76, "dynamicquantize"]], "Elu": [[77, "elu"]], "End": [[79, "end"]], "EluBackward": [[78, "elubackward"]], "Exp": [[80, "exp"]], "GELU": [[81, "gelu"]], "GroupNorm": [[83, "groupnorm"]], "GELUBackward": [[82, "gelubackward"]], "HardSigmoidBackward": [[85, "hardsigmoidbackward"]], "HardSigmoid": [[84, "hardsigmoid"]], "HardSwish": [[86, "hardswish"]], "HardSwishBackward": [[87, "hardswishbackward"]], "Interpolate": [[88, "interpolate"]], "InterpolateBackward": [[89, "interpolatebackward"]], "LayerNorm": [[90, "layernorm"]], "LayerNormBackward": [[91, "layernormbackward"]], "LeakyReLU": [[92, "leakyrelu"]], "Log": [[93, "log"]], "LogSoftmax": [[94, "logsoftmax"]], "LogSoftmaxBackward": [[95, "logsoftmaxbackward"]], "MatMul": [[96, "matmul"]], "Maximum": [[97, "maximum"]], "MaxPool": [[98, "maxpool"]], "MaxPoolBackward": [[99, "maxpoolbackward"]], "Mish": [[101, "mish"]], "Minimum": [[100, "minimum"]], "Multiply": [[103, "multiply"]], "MishBackward": [[102, "mishbackward"]], "PReLU": [[105, "prelu"], [142, "prelu"], [305, "prelu"]], "Broadcasting Rules": [[105, "broadcasting-rules"], [106, "broadcasting-rules"]], "Pow": [[104, "pow"]], "PReLUBackward": [[106, "prelubackward"]], "Quantize": [[107, "quantize"]], "ReduceL1": [[109, "reducel1"]], "Reciprocal": [[108, "reciprocal"]], "ReduceMax": [[111, "reducemax"]], "ReduceL2": [[110, "reducel2"]], "ReduceMin": [[113, "reducemin"]], "ReduceMean": [[112, "reducemean"]], "ReduceSum": [[115, "reducesum"]], "ReduceProd": [[114, "reduceprod"]], "ReLUBackward": [[117, "relubackward"]], "ReLU": [[116, "relu"]], "Round": [[119, "round"]], "Sigmoid": [[121, "sigmoid"]], "Select": [[120, "select"]], "Broadcasting rules": [[120, "broadcasting-rules"]], "SoftMax": [[123, "softmax"]], "SigmoidBackward": [[122, "sigmoidbackward"]], "SoftPlus": [[125, "softplus"]], "SoftMaxBackward": [[124, "softmaxbackward"]], "Sqrt": [[127, "sqrt"]], "SoftPlusBackward": [[126, "softplusbackward"]], "Square": [[129, "square"]], "SqrtBackward": [[128, "sqrtbackward"]], "StaticReshape": [[131, "staticreshape"]], "SquaredDifference": [[130, "squareddifference"]], "StaticTranspose": [[132, "statictranspose"]], "Subtract": [[133, "subtract"]], "TanhBackward": [[135, "tanhbackward"]], "Tanh": [[134, "tanh"]], "Wildcard": [[137, "wildcard"]], "TypeCast": [[136, "typecast"]], "Configuring oneDNN for Benchmarking": [[139, "configuring-onednn-for-benchmarking"]], "Threading Runtimes": [[139, "threading-runtimes"]], "Benchmarking Settings": [[139, "benchmarking-settings"]], "Whole Machine": [[139, "whole-machine"]], "Single NUMA Domain": [[139, "single-numa-domain"]], "Several Cores Within a NUMA Domain": [[139, "several-cores-within-a-numa-domain"]], "OpenCL Interoperability": [[138, "opencl-interoperability"]], "OpenCL Buffers and USM Interfaces for Memory Objects": [[138, "opencl-buffers-and-usm-interfaces-for-memory-objects"]], "Handling Dependencies": [[138, "handling-dependencies"]], "Pooling": [[141, "pooling"], [304, "pooling"]], "Persistent Cache": [[140, "persistent-cache"]], "Primitive": [[140, "primitive"]], "Relation to Primitive Cache": [[140, "relation-to-primitive-cache"]], "API Usage Example": [[140, "api-usage-example"], [140, "id1"]], "Engine": [[140, "engine"], [294, "engine"], [329, "engine"]], "Memory descriptor": [[140, "memory-descriptor"], [388, "memory-descriptor"]], "Primitive Cache": [[143, "primitive-cache"], [306, "primitive-cache"]], "Managing Memory Consumption": [[143, "managing-memory-consumption"]], "Profiling": [[143, "profiling"], [309, "profiling"]], "Reduction": [[145, "reduction"], [310, "reduction"]], "Notes": [[145, "notes"]], "Profiling oneDNN Performance": [[144, "profiling-onednn-performance"]], "Features for VTune Profiler": [[144, "features-for-vtune-profiler"]], "ITT Tagging for Primitive Execution": [[144, "itt-tagging-for-primitive-execution"]], "Example: Profiling with VTune Profiler": [[144, "example-profiling-with-vtune-profiler"]], "Profiling for Hotspots": [[144, "profiling-for-hotspots"]], "Profiling for Microarchitecture Information": [[144, "profiling-for-microarchitecture-information"]], "Example: Profiling with Linux Perf": [[144, "example-profiling-with-linux-perf"]], "Resampling": [[147, "resampling"], [312, "resampling"]], "Nearest Neighbor Resampling": [[147, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[147, "bilinear-resampling"]], "RNN": [[148, "rnn"], [313, "rnn"]], "Cell Functions": [[148, "cell-functions"]], "Vanilla RNN": [[148, "vanilla-rnn"]], "LSTM": [[148, "lstm"]], "LSTM (or Vanilla LSTM)": [[148, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[148, "lstm-with-peephole"]], "LSTM with Projection (or LSTMP)": [[148, "lstm-with-projection-or-lstmp"]], "GRU": [[148, "gru"]], "Linear-Before-Reset GRU": [[148, "linear-before-reset-gru"]], "AUGRU": [[148, "augru"]], "Linear-Before-Reset AUGRU": [[148, "linear-before-reset-augru"]], "Considerations for Training": [[148, "considerations-for-training"]], "Shuffle": [[149, "shuffle"], [315, "shuffle"]], "Data Layouts": [[149, "data-layouts"]], "Sum": [[151, "sum"], [318, "sum"]], "Softmax": [[150, "softmax"], [316, "softmax"]], "fp32 Training": [[153, "fp32-training"]], "bfp16 Training": [[153, "bfp16-training"]], "Using oneDNN with Threadpool-Based Threading": [[152, "using-onednn-with-threadpool-based-threading"]], "Bfloat16 Training": [[154, "bfloat16-training"]], "bfloat16 Support": [[154, "bfloat16-support"]], "bfloat16 Workflow": [[154, "bfloat16-workflow"]], "Transitioning from Intel MKL-DNN to oneDNN": [[155, "transitioning-from-intel-mkl-dnn-to-onednn"]], "Summary of Changes": [[155, "summary-of-changes"]], "Source Code Changes": [[155, "source-code-changes"]], "Build Process": [[155, "build-process"]], "Broken Compatibility with Intel MKL-DNN": [[155, "broken-compatibility-with-intel-mkl-dnn"]], "Information for Developers": [[155, "information-for-developers"]], "Batch-Reduce General Matrix Multiplication": [[157, "batch-reduce-general-matrix-multiplication"]], "Memory representation": [[156, "memory-representation"]], "Operation representation": [[156, "operation-representation"]], "Understanding Memory Formats": [[159, "understanding-memory-formats"]], "Nomenclature Used": [[159, "nomenclature-used"]], "Data Formats": [[159, "data-formats"]], "Plain Data Formats": [[159, "plain-data-formats"]], "NCHW": [[159, "nchw"]], "NHWC": [[159, "nhwc"]], "CHWN": [[159, "chwn"]], "Relevant Reading": [[159, "relevant-reading"]], "Generalization of the Plain Data Layout": [[159, "generalization-of-the-plain-data-layout"]], "Strides": [[159, "strides"]], "Blocked Layout": [[159, "blocked-layout"]], "What if Channels Are not Multiples of 8 (or 16)?": [[159, "what-if-channels-are-not-multiples-of-8-or-16"]], "Data transformation": [[158, "data-transformation"]], "Verbose Mode": [[160, "verbose-mode"]], "Troubleshooting primitive creation issues": [[160, "troubleshooting-primitive-creation-issues"]], "Profiling a workload": [[160, "profiling-a-workload"]], "Understanding why a given implementation is dispatched": [[160, "understanding-why-a-given-implementation-is-dispatched"]], "Enable ONEDNN_VERBOSE with timestamps": [[160, "enable-onednn-verbose-with-timestamps"]], "Decrypting the Output": [[160, "decrypting-the-output"]], "Verbose Message Catalogue": [[161, "verbose-message-catalogue"]], "Primitive Creation/Dispatching": [[161, "primitive-creation-dispatching"]], "Engine Creation": [[161, "engine-creation"]], "Memory Creation and Related Operations": [[161, "memory-creation-and-related-operations"]], "Profiling with VTune(TM) Profiler": [[162, "profiling-with-vtune-tm-profiler"]], "enum api_kind": [[163, "enum-api-kind"]], "enum dnnl_accumulation_mode_t": [[165, "enum-dnnl-accumulation-mode-t"]], "Enum Values": [[165, "enum-values"], [164, "enum-values"], [167, "enum-values"], [166, "enum-values"], [169, "enum-values"], [168, "enum-values"], [171, "enum-values"], [170, "enum-values"], [172, "enum-values"], [173, "enum-values"], [174, "enum-values"], [175, "enum-values"], [177, "enum-values"], [176, "enum-values"], [178, "enum-values"], [179, "enum-values"], [181, "enum-values"], [180, "enum-values"], [182, "enum-values"], [183, "enum-values"], [184, "enum-values"], [187, "enum-values"], [189, "enum-values"], [188, "enum-values"], [191, "enum-values"], [190, "enum-values"], [193, "enum-values"], [192, "enum-values"], [194, "enum-values"], [195, "enum-values"], [197, "enum-values"], [196, "enum-values"], [199, "enum-values"], [198, "enum-values"], [201, "enum-values"], [200, "enum-values"], [203, "enum-values"], [202, "enum-values"], [204, "enum-values"], [205, "enum-values"], [207, "enum-values"], [206, "enum-values"], [209, "enum-values"], [208, "enum-values"], [211, "enum-values"], [210, "enum-values"], [212, "enum-values"], [213, "enum-values"], [215, "enum-values"], [214, "enum-values"], [216, "enum-values"], [217, "enum-values"], [218, "enum-values"], [219, "enum-values"], [220, "enum-values"], [221, "enum-values"], [222, "enum-values"], [223, "enum-values"]], "enum dnnl::accumulation_mode": [[164, "enum-dnnl-accumulation-mode"]], "enum dnnl::algorithm": [[167, "enum-dnnl-algorithm"]], "enum dnnl_alg_kind_t": [[166, "enum-dnnl-alg-kind-t"]], "enum dnnl::cpu_isa_hints": [[169, "enum-dnnl-cpu-isa-hints"]], "enum dnnl::cpu_isa": [[168, "enum-dnnl-cpu-isa"]], "enum dnnl_cpu_isa_t": [[171, "enum-dnnl-cpu-isa-t"]], "enum dnnl_cpu_isa_hints_t": [[170, "enum-dnnl-cpu-isa-hints-t"]], "enum dnnl_data_type_t": [[172, "enum-dnnl-data-type-t"]], "enum dnnl::engine::kind": [[173, "enum-dnnl-engine-kind"]], "enum dnnl_engine_kind_t": [[174, "enum-dnnl-engine-kind-t"]], "enum dnnl_format_kind_t": [[175, "enum-dnnl-format-kind-t"]], "enum dnnl::fpmath_mode": [[177, "enum-dnnl-fpmath-mode"]], "enum dnnl_format_tag_t": [[176, "enum-dnnl-format-tag-t"]], "enum dnnl_fpmath_mode_t": [[178, "enum-dnnl-fpmath-mode-t"]], "enum dnnl_graph_layout_type_t": [[179, "enum-dnnl-graph-layout-type-t"]], "enum dnnl::graph::logical_tensor::layout_type": [[181, "enum-dnnl-graph-logical-tensor-layout-type"]], "enum dnnl::graph::logical_tensor::data_type": [[180, "enum-dnnl-graph-logical-tensor-data-type"]], "enum dnnl::graph::logical_tensor::property_type": [[182, "enum-dnnl-graph-logical-tensor-property-type"]], "enum dnnl::graph::op::attr": [[183, "enum-dnnl-graph-op-attr"]], "enum dnnl_graph_op_attr_t": [[184, "enum-dnnl-graph-op-attr-t"]], "enum dnnl::graph::op::kind": [[185, "enum-dnnl-graph-op-kind"]], "enum dnnl_graph_op_kind_t": [[186, "enum-dnnl-graph-op-kind-t"]], "enum dnnl::graph::partition::policy": [[187, "enum-dnnl-graph-partition-policy"]], "enum dnnl::graph::status": [[189, "enum-dnnl-graph-status"]], "enum dnnl_graph_partition_policy_t": [[188, "enum-dnnl-graph-partition-policy-t"]], "enum dnnl::memory::data_type": [[191, "enum-dnnl-memory-data-type"]], "enum dnnl_graph_tensor_property_t": [[190, "enum-dnnl-graph-tensor-property-t"]], "enum dnnl::memory::format_tag": [[193, "enum-dnnl-memory-format-tag"]], "enum dnnl::memory::format_kind": [[192, "enum-dnnl-memory-format-kind"]], "enum dnnl::memory::sparse_encoding": [[194, "enum-dnnl-memory-sparse-encoding"]], "enum dnnl::normalization_flags": [[195, "enum-dnnl-normalization-flags"]], "enum dnnl::ocl_interop::memory_kind": [[197, "enum-dnnl-ocl-interop-memory-kind"]], "enum dnnl_normalization_flags_t": [[196, "enum-dnnl-normalization-flags-t"]], "enum dnnl_pack_type_t": [[199, "enum-dnnl-pack-type-t"]], "enum dnnl_ocl_interop_memory_kind_t": [[198, "enum-dnnl-ocl-interop-memory-kind-t"]], "enum dnnl_primitive_kind_t": [[201, "enum-dnnl-primitive-kind-t"]], "enum dnnl::primitive::kind": [[200, "enum-dnnl-primitive-kind"]], "enum dnnl_profiling_data_kind_t": [[203, "enum-dnnl-profiling-data-kind-t"]], "enum dnnl::profiling_data_kind": [[202, "enum-dnnl-profiling-data-kind"]], "enum dnnl::prop_kind": [[204, "enum-dnnl-prop-kind"]], "enum dnnl_prop_kind_t": [[205, "enum-dnnl-prop-kind-t"]], "enum dnnl_query_t": [[207, "enum-dnnl-query-t"]], "enum dnnl::query": [[206, "enum-dnnl-query"]], "enum dnnl_rnn_direction_t": [[209, "enum-dnnl-rnn-direction-t"]], "enum dnnl::rnn_direction": [[208, "enum-dnnl-rnn-direction"]], "enum dnnl_rnn_flags_t": [[211, "enum-dnnl-rnn-flags-t"]], "enum dnnl::rnn_flags": [[210, "enum-dnnl-rnn-flags"]], "enum dnnl::rounding_mode": [[212, "enum-dnnl-rounding-mode"]], "enum dnnl_rounding_mode_t": [[213, "enum-dnnl-rounding-mode-t"]], "enum dnnl_scratchpad_mode_t": [[215, "enum-dnnl-scratchpad-mode-t"]], "enum dnnl::scratchpad_mode": [[214, "enum-dnnl-scratchpad-mode"]], "enum dnnl_sparse_encoding_t": [[216, "enum-dnnl-sparse-encoding-t"]], "enum dnnl::status": [[217, "enum-dnnl-status"]], "enum dnnl_status_t": [[218, "enum-dnnl-status-t"]], "enum dnnl::stream::flags": [[219, "enum-dnnl-stream-flags"]], "enum dnnl_stream_flags_t": [[220, "enum-dnnl-stream-flags-t"]], "enum dnnl::sycl_interop::memory_kind": [[221, "enum-dnnl-sycl-interop-memory-kind"]], "enum dnnl_sycl_interop_memory_kind_t": [[222, "enum-dnnl-sycl-interop-memory-kind-t"]], "enum dnnl::ukernel::pack_type": [[223, "enum-dnnl-ukernel-pack-type"]], "augru.cpp": [[224, "augru-cpp"]], "batch_normalization.cpp": [[225, "batch-normalization-cpp"]], "bnorm_u8_via_binary_postops.cpp": [[227, "bnorm-u8-via-binary-postops-cpp"]], "binary.cpp": [[226, "binary-cpp"]], "cnn_inference_f32.c": [[228, "cnn-inference-f32-c"]], "cnn_inference_f32.cpp": [[229, "cnn-inference-f32-cpp"]], "cnn_inference_int8.cpp": [[230, "cnn-inference-int8-cpp"]], "cnn_training_bf16.cpp": [[231, "cnn-training-bf16-cpp"]], "concat.cpp": [[233, "concat-cpp"]], "cnn_training_f32.cpp": [[232, "cnn-training-f32-cpp"]], "cpu_brgemm.cpp": [[235, "cpu-brgemm-cpp"]], "convolution.cpp": [[234, "convolution-cpp"]], "cpu_getting_started.cpp": [[237, "cpu-getting-started-cpp"]], "cpu_cnn_training_f32.c": [[236, "cpu-cnn-training-f32-c"]], "cpu_inference_int8.cpp": [[238, "cpu-inference-int8-cpp"]], "cpu_matmul_coo.cpp": [[239, "cpu-matmul-coo-cpp"]], "cpu_matmul_csr.cpp": [[240, "cpu-matmul-csr-cpp"]], "cpu_matmul_quantization.cpp": [[241, "cpu-matmul-quantization-cpp"]], "cpu_rnn_inference_f32.cpp": [[243, "cpu-rnn-inference-f32-cpp"]], "cpu_matmul_weights_compression.cpp": [[242, "cpu-matmul-weights-compression-cpp"]], "cpu_sgemm_and_matmul.cpp": [[245, "cpu-sgemm-and-matmul-cpp"]], "cpu_rnn_inference_int8.cpp": [[244, "cpu-rnn-inference-int8-cpp"]], "cpu_single_op_partition.cpp": [[246, "cpu-single-op-partition-cpp"]], "cross_engine_reorder.c": [[247, "cross-engine-reorder-c"]], "deconvolution.cpp": [[249, "deconvolution-cpp"]], "cross_engine_reorder.cpp": [[248, "cross-engine-reorder-cpp"]], "eltwise.cpp": [[250, "eltwise-cpp"]], "getting_started.cpp": [[251, "getting-started-cpp"]], "gpu_opencl_getting_started.cpp": [[252, "gpu-opencl-getting-started-cpp"]], "gpu_opencl_interop.cpp": [[253, "gpu-opencl-interop-cpp"]], "inference_int8_matmul.cpp": [[255, "inference-int8-matmul-cpp"]], "group_normalization.cpp": [[254, "group-normalization-cpp"]], "inner_product.cpp": [[256, "inner-product-cpp"]], "layer_normalization.cpp": [[257, "layer-normalization-cpp"]], "lbr_gru.cpp": [[258, "lbr-gru-cpp"]], "lrn.cpp": [[259, "lrn-cpp"]], "matmul.cpp": [[261, "matmul-cpp"]], "lstm.cpp": [[260, "lstm-cpp"]], "memory_format_propagation.cpp": [[262, "memory-format-propagation-cpp"]], "performance_profiling.cpp": [[263, "performance-profiling-cpp"]], "prelu.cpp": [[265, "prelu-cpp"]], "pooling.cpp": [[264, "pooling-cpp"]], "reduction.cpp": [[266, "reduction-cpp"]], "reorder.cpp": [[267, "reorder-cpp"]], "rnn_training_f32.cpp": [[269, "rnn-training-f32-cpp"]], "resampling.cpp": [[268, "resampling-cpp"]], "shuffle.cpp": [[270, "shuffle-cpp"]], "softmax.cpp": [[271, "softmax-cpp"]], "sycl_getting_started.cpp": [[273, "sycl-getting-started-cpp"]], "sum.cpp": [[272, "sum-cpp"]], "sycl_single_op_partition.cpp": [[275, "sycl-single-op-partition-cpp"]], "sycl_interop_buffer.cpp": [[274, "sycl-interop-buffer-cpp"]], "weights_decompression_matmul.cpp": [[277, "weights-decompression-matmul-cpp"]], "vanilla_rnn.cpp": [[276, "vanilla-rnn-cpp"]], "Global Namespace": [[278, "global-namespace"]], "Global Functions": [[278, "global-functions"], [283, "global-functions"], [285, "global-functions"], [284, "global-functions"], [286, "global-functions"], [287, "global-functions"], [289, "global-functions"], [290, "global-functions"], [293, "global-functions"], [292, "global-functions"], [295, "global-functions"], [294, "global-functions"], [297, "global-functions"], [296, "global-functions"], [299, "global-functions"], [301, "global-functions"], [300, "global-functions"], [302, "global-functions"], [303, "global-functions"], [304, "global-functions"], [305, "global-functions"], [306, "global-functions"], [309, "global-functions"], [308, "global-functions"], [310, "global-functions"], [311, "global-functions"], [313, "global-functions"], [312, "global-functions"], [314, "global-functions"], [315, "global-functions"], [316, "global-functions"], [317, "global-functions"], [319, "global-functions"], [318, "global-functions"], [320, "global-functions"], [321, "global-functions"], [322, "global-functions"], [325, "global-functions"], [326, "global-functions"], [327, "global-functions"], [329, "global-functions"], [328, "global-functions"], [330, "global-functions"], [333, "global-functions"], [332, "global-functions"], [335, "global-functions"], [334, "global-functions"], [337, "global-functions"], [338, "global-functions"], [344, "global-functions"], [345, "global-functions"], [346, "global-functions"], [347, "global-functions"], [348, "global-functions"]], "Programming Model": [[280, "programming-model"], [439, "programming-model"]], "Supported Operations": [[281, "supported-operations"]], "Accumulation Mode": [[283, "accumulation-mode"]], "oneDNN API": [[282, "onednn-api"]], "BLAS functions": [[287, "blas-functions"]], "Common API": [[288, "common-api"]], "Macros": [[291, "macros"], [302, "macros"], [308, "macros"], [314, "macros"], [332, "macros"]], "Deconvolution": [[292, "deconvolution"]], "Floating-point Math Mode": [[295, "floating-point-math-mode"]], "Runtime interoperability API": [[298, "runtime-interoperability-api"], [331, "runtime-interoperability-api"]], "LRN": [[300, "lrn"]], "Memory": [[302, "memory"]], "OpenCL interoperability API": [[303, "opencl-interoperability-api"], [333, "opencl-interoperability-api"]], "Common": [[308, "common"]], "Service": [[314, "service"]], "Stream": [[317, "stream"]], "SYCL interoperability API": [[319, "sycl-interoperability-api"], [337, "sycl-interoperability-api"]], "Threadpool interoperability API": [[320, "threadpool-interoperability-api"]], "Ukernels": [[321, "ukernels"], [575, "ukernels"]], "BRGeMM ukernel": [[322, "brgemm-ukernel"]], "Utilities": [[323, "utilities"], [339, "utilities"]], "Graph API": [[324, "graph-api"]], "Allocator": [[325, "allocator"]], "Compiled Partition Cache": [[327, "compiled-partition-cache"]], "Status": [[336, "status"]], "Interoperability with DPC++ and OpenCL": [[341, "interoperability-with-dpc-and-opencl"]], "oneAPI Deep Neural Network Library Developer Guide and Reference": [[340, "oneapi-deep-neural-network-library-developer-guide-and-reference"]], "namespace dnnl": [[342, "namespace-dnnl"]], "namespace dnnl::graph": [[343, "namespace-dnnl-graph"]], "namespace dnnl::graph::ocl_interop": [[344, "namespace-dnnl-graph-ocl-interop"]], "namespace dnnl::graph::sycl_interop": [[345, "namespace-dnnl-graph-sycl-interop"]], "namespace dnnl::ocl_interop": [[346, "namespace-dnnl-ocl-interop"]], "namespace dnnl::sycl_interop": [[347, "namespace-dnnl-sycl-interop"]], "namespace dnnl::ukernel": [[349, "namespace-dnnl-ukernel"]], "namespace dnnl::threadpool_interop": [[348, "namespace-dnnl-threadpool-interop"]], "namespace std": [[351, "namespace-std"]], "namespace oneapi": [[350, "namespace-oneapi"]], "Orphans": [[353, "orphans"]], "namespace sycl": [[352, "namespace-sycl"]], "<Untitled>": [[355, "untitled"], [357, "untitled"], [359, "untitled"], [361, "untitled"], [368, "untitled"], [370, "untitled"], [376, "untitled"], [381, "untitled"], [385, "untitled"], [387, "untitled"], [397, "untitled"], [399, "untitled"], [401, "untitled"], [403, "untitled"], [405, "untitled"], [408, "untitled"], [410, "untitled"], [412, "untitled"], [416, "untitled"], [418, "untitled"], [420, "untitled"], [422, "untitled"], [424, "untitled"], [427, "untitled"], [429, "untitled"], [431, "untitled"], [435, "untitled"], [437, "untitled"]], "AUGRU RNN Primitive Example": [[354, "augru-rnn-primitive-example"]], "Batch Normalization Primitive Example": [[356, "batch-normalization-primitive-example"]], "Binary Primitive Example": [[358, "binary-primitive-example"]], "Bnorm u8 by binary post-ops example": [[360, "bnorm-u8-by-binary-post-ops-example"]], "CNN f32 inference example": [[362, "cnn-f32-inference-example"], [363, "cnn-f32-inference-example"]], "CNN bf16 training example": [[365, "cnn-bf16-training-example"]], "CNN int8 inference example": [[364, "cnn-int8-inference-example"]], "CNN f32 training example": [[366, "cnn-f32-training-example"], [372, "cnn-f32-training-example"]], "Concat Primitive Example": [[367, "concat-primitive-example"]], "Convolution Primitive Example": [[369, "convolution-primitive-example"]], "BRGeMM ukernel example": [[371, "brgemm-ukernel-example"]], "MatMul Primitive Example": [[373, "matmul-primitive-example"], [374, "matmul-primitive-example"], [377, "matmul-primitive-example"]], "MatMul Tutorial: Quantization": [[375, "matmul-tutorial-quantization"]], "RNN f32 inference example": [[378, "rnn-f32-inference-example"]], "RNN int8 inference example": [[379, "rnn-int8-inference-example"]], "MatMul Tutorial: Comparison with SGEMM": [[380, "matmul-tutorial-comparison-with-sgemm"]], "Reorder between CPU and GPU engines": [[382, "reorder-between-cpu-and-gpu-engines"], [383, "reorder-between-cpu-and-gpu-engines"]], "Public headers": [[383, "public-headers"], [388, "public-headers"], [389, "public-headers"], [390, "public-headers"], [391, "public-headers"], [393, "public-headers"], [392, "public-headers"], [394, "public-headers"], [395, "public-headers"], [432, "public-headers"]], "cross_engine_reorder_tutorial() function": [[383, "cross-engine-reorder-tutorial-function"]], "Engine and stream": [[383, "engine-and-stream"], [388, "engine-and-stream"], [389, "engine-and-stream"], [432, "engine-and-stream"]], "Wrapping data into oneDNN GPU memory object": [[383, "wrapping-data-into-onednn-gpu-memory-object"]], "Creating a ReLU primitive": [[383, "creating-a-relu-primitive"], [388, "creating-a-relu-primitive"]], "Getting results from a oneDNN GPU memory object": [[383, "getting-results-from-a-onednn-gpu-memory-object"]], "Executing all primitives": [[383, "executing-all-primitives"]], "Validate the result": [[383, "validate-the-result"]], "Deconvolution Primitive Example": [[384, "deconvolution-primitive-example"]], "Element-Wise Primitive Example": [[386, "element-wise-primitive-example"]], "Getting started": [[388, "getting-started"]], "getting_started_tutorial() function": [[388, "getting-started-tutorial-function"]], "Data preparation (code outside of oneDNN)": [[388, "data-preparation-code-outside-of-onednn"]], "Wrapping data into a oneDNN memory object": [[388, "wrapping-data-into-a-onednn-memory-object"]], "Alternative way to create a memory descriptor": [[388, "alternative-way-to-create-a-memory-descriptor"]], "Creating a memory object": [[388, "creating-a-memory-object"]], "Executing the ReLU primitive": [[388, "executing-the-relu-primitive"]], "Obtaining the result and validation": [[388, "obtaining-the-result-and-validation"]], "main() function": [[388, "main-function"], [432, "main-function"]], "Getting started on GPU with OpenCL extensions API": [[389, "getting-started-on-gpu-with-opencl-extensions-api"]], "gpu_opencl_interop_tutorial() function": [[389, "gpu-opencl-interop-tutorial-function"]], "Wrapping data into oneDNN memory object": [[389, "wrapping-data-into-onednn-memory-object"], [432, "wrapping-data-into-onednn-memory-object"]], "Initialize the data by executing a custom OpenCL kernel": [[389, "initialize-the-data-by-executing-a-custom-opencl-kernel"]], "Create and execute a primitive": [[389, "create-and-execute-a-primitive"], [432, "create-and-execute-a-primitive"]], "Validate the results": [[389, "validate-the-results"], [432, "validate-the-results"]], "Getting started on CPU with Graph API": [[390, "getting-started-on-cpu-with-graph-api"]], "cpu_getting_started_tutorial() function": [[390, "cpu-getting-started-tutorial-function"]], "Build Graph and Get Partitions": [[390, "build-graph-and-get-partitions"], [391, "build-graph-and-get-partitions"], [392, "build-graph-and-get-partitions"], [395, "build-graph-and-get-partitions"]], "Compile and Execute Partition": [[390, "compile-and-execute-partition"], [391, "compile-and-execute-partition"], [393, "compile-and-execute-partition"], [392, "compile-and-execute-partition"], [394, "compile-and-execute-partition"], [395, "compile-and-execute-partition"]], "Convolution int8 inference example with Graph API": [[391, "convolution-int8-inference-example-with-graph-api"]], "simple_pattern_int8() function": [[391, "simple-pattern-int8-function"]], "Getting started with OpenCL extensions and Graph API": [[393, "getting-started-with-opencl-extensions-and-graph-api"]], "ocl_getting_started_tutorial() function": [[393, "ocl-getting-started-tutorial-function"]], "Build Graph and Get Partitions.": [[393, "build-graph-and-get-partitions"], [394, "build-graph-and-get-partitions"]], "Single op partition on CPU": [[392, "single-op-partition-on-cpu"]], "cpu_single_op_partition_tutorial() function": [[392, "cpu-single-op-partition-tutorial-function"]], "Getting started with SYCL extensions API and Graph API": [[394, "getting-started-with-sycl-extensions-api-and-graph-api"]], "sycl_getting_started_tutorial() function": [[394, "sycl-getting-started-tutorial-function"]], "Single op partition on GPU": [[395, "single-op-partition-on-gpu"]], "sycl_single_op_partition_tutorial() function": [[395, "sycl-single-op-partition-tutorial-function"]], "Group Normalization Primitive Example": [[396, "group-normalization-primitive-example"]], "MatMul Tutorial: INT8 Inference": [[398, "matmul-tutorial-int8-inference"]], "Inner Product Primitive Example": [[400, "inner-product-primitive-example"]], "Layer Normalization Primitive Example": [[402, "layer-normalization-primitive-example"]], "Linear-Before-Reset GRU RNN Primitive Example": [[404, "linear-before-reset-gru-rnn-primitive-example"]], "Legal Information": [[406, "legal-information"]], "Trademark Information": [[406, "trademark-information"]], "Local Response Normalization Primitive Example": [[407, "local-response-normalization-primitive-example"]], "LSTM RNN Primitive Example": [[409, "lstm-rnn-primitive-example"]], "Matmul Primitive Example": [[411, "matmul-primitive-example"]], "Memory Format Propagation": [[413, "memory-format-propagation"]], "Introduction to the tutorial": [[413, "introduction-to-the-tutorial"]], "memory_format_propagation() function": [[413, "memory-format-propagation-function"]], "Initialization": [[413, "initialization"]], "Create convolution and pooling primitives": [[413, "create-convolution-and-pooling-primitives"]], "Create source and destination memory objects": [[413, "create-source-and-destination-memory-objects"]], "Determine if source and destination need to be reordered": [[413, "determine-if-source-and-destination-need-to-be-reordered"]], "Allocate intermediate buffers if necessary": [[413, "allocate-intermediate-buffers-if-necessary"]], "Perform reorders for source data if necessary": [[413, "perform-reorders-for-source-data-if-necessary"]], "Create and execute convolution and pooling primitives": [[413, "create-and-execute-convolution-and-pooling-primitives"]], "Reorder destination data if necessary": [[413, "reorder-destination-data-if-necessary"]], "Results": [[413, "results"]], "Performance Profiling Example": [[414, "performance-profiling-example"]], "Walkthrough": [[414, "walkthrough"]], "Naive Implementation": [[414, "naive-implementation"]], "Blocked format implementation": [[414, "blocked-format-implementation"]], "Fused Implementation": [[414, "fused-implementation"]], "Performance summary": [[414, "performance-summary"]], "Configuration Notice": [[414, "configuration-notice"]], "Pooling Primitive Example": [[415, "pooling-primitive-example"]], "Primitive Example": [[417, "primitive-example"]], "Reduction Primitive Example": [[419, "reduction-primitive-example"]], "Reorder Primitive Example": [[421, "reorder-primitive-example"]], "Resampling Primitive Example": [[423, "resampling-primitive-example"]], "RNN f32 training example": [[425, "rnn-f32-training-example"]], "Shuffle Primitive Example": [[426, "shuffle-primitive-example"]], "Softmax Primitive Example": [[428, "softmax-primitive-example"]], "Sum Primitive Example": [[430, "sum-primitive-example"]], "Todo List": [[433, "todo-list"]], "Getting started on both CPU and GPU with SYCL extensions API": [[432, "getting-started-on-both-cpu-and-gpu-with-sycl-extensions-api"]], "sycl_interop_buffer_tutorial() function": [[432, "sycl-interop-buffer-tutorial-function"]], "Initialize the data executing a custom SYCL kernel": [[432, "initialize-the-data-executing-a-custom-sycl-kernel"]], "Vanilla RNN Primitive Example": [[434, "vanilla-rnn-primitive-example"]], "MatMul Tutorial: weights decompression": [[436, "matmul-tutorial-weights-decompression"]], "Performance Profiling and Inspection": [[438, "performance-profiling-and-inspection"]], "struct args_t": [[440, "struct-args-t"]], "struct cpu_deletor": [[441, "struct-cpu-deletor"]], "struct dnnl::augru_backward::primitive_desc": [[443, "struct-dnnl-augru-backward-primitive-desc"]], "Inherited Members": [[443, "inherited-members"], [442, "inherited-members"], [445, "inherited-members"], [444, "inherited-members"], [446, "inherited-members"], [447, "inherited-members"], [448, "inherited-members"], [449, "inherited-members"], [450, "inherited-members"], [451, "inherited-members"], [453, "inherited-members"], [454, "inherited-members"], [455, "inherited-members"], [456, "inherited-members"], [457, "inherited-members"], [459, "inherited-members"], [458, "inherited-members"], [460, "inherited-members"], [461, "inherited-members"], [462, "inherited-members"], [463, "inherited-members"], [464, "inherited-members"], [465, "inherited-members"], [467, "inherited-members"], [466, "inherited-members"], [468, "inherited-members"], [469, "inherited-members"], [470, "inherited-members"], [472, "inherited-members"], [477, "inherited-members"], [479, "inherited-members"], [478, "inherited-members"], [481, "inherited-members"], [480, "inherited-members"], [483, "inherited-members"], [482, "inherited-members"], [484, "inherited-members"], [487, "inherited-members"], [488, "inherited-members"], [489, "inherited-members"], [490, "inherited-members"], [491, "inherited-members"], [492, "inherited-members"], [493, "inherited-members"], [495, "inherited-members"], [494, "inherited-members"], [496, "inherited-members"], [497, "inherited-members"], [499, "inherited-members"], [498, "inherited-members"], [500, "inherited-members"], [501, "inherited-members"], [503, "inherited-members"], [502, "inherited-members"], [505, "inherited-members"], [504, "inherited-members"], [507, "inherited-members"], [506, "inherited-members"], [508, "inherited-members"], [509, "inherited-members"], [511, "inherited-members"], [510, "inherited-members"], [512, "inherited-members"], [513, "inherited-members"], [514, "inherited-members"], [516, "inherited-members"], [519, "inherited-members"], [518, "inherited-members"], [521, "inherited-members"], [520, "inherited-members"], [522, "inherited-members"], [524, "inherited-members"], [525, "inherited-members"], [526, "inherited-members"], [527, "inherited-members"], [528, "inherited-members"], [530, "inherited-members"], [532, "inherited-members"], [534, "inherited-members"], [535, "inherited-members"], [537, "inherited-members"], [536, "inherited-members"], [539, "inherited-members"], [538, "inherited-members"], [540, "inherited-members"], [541, "inherited-members"], [542, "inherited-members"], [543, "inherited-members"], [544, "inherited-members"], [545, "inherited-members"], [546, "inherited-members"], [547, "inherited-members"], [549, "inherited-members"], [548, "inherited-members"], [550, "inherited-members"], [551, "inherited-members"], [552, "inherited-members"], [555, "inherited-members"], [554, "inherited-members"], [556, "inherited-members"], [560, "inherited-members"], [561, "inherited-members"], [563, "inherited-members"], [562, "inherited-members"], [565, "inherited-members"], [564, "inherited-members"], [566, "inherited-members"]], "struct dnnl::augru_backward": [[442, "struct-dnnl-augru-backward"]], "struct dnnl::augru_forward::primitive_desc": [[445, "struct-dnnl-augru-forward-primitive-desc"]], "struct dnnl::augru_forward": [[444, "struct-dnnl-augru-forward"]], "struct dnnl::batch_normalization_backward": [[446, "struct-dnnl-batch-normalization-backward"]], "struct dnnl::batch_normalization_backward::primitive_desc": [[447, "struct-dnnl-batch-normalization-backward-primitive-desc"]], "struct dnnl::batch_normalization_forward": [[448, "struct-dnnl-batch-normalization-forward"]], "struct dnnl::batch_normalization_forward::primitive_desc": [[449, "struct-dnnl-batch-normalization-forward-primitive-desc"]], "struct dnnl::binary": [[450, "struct-dnnl-binary"]], "struct dnnl::binary::primitive_desc": [[451, "struct-dnnl-binary-primitive-desc"]], "struct dnnl::concat": [[453, "struct-dnnl-concat"]], "struct dnnl_brgemm": [[452, "struct-dnnl-brgemm"]], "struct dnnl::concat::primitive_desc": [[454, "struct-dnnl-concat-primitive-desc"]], "struct dnnl::convolution_backward_data": [[455, "struct-dnnl-convolution-backward-data"]], "struct dnnl::convolution_backward_data::primitive_desc": [[456, "struct-dnnl-convolution-backward-data-primitive-desc"]], "struct dnnl::convolution_backward_weights": [[457, "struct-dnnl-convolution-backward-weights"]], "struct dnnl::convolution_forward": [[459, "struct-dnnl-convolution-forward"]], "struct dnnl::convolution_backward_weights::primitive_desc": [[458, "struct-dnnl-convolution-backward-weights-primitive-desc"]], "struct dnnl::convolution_forward::primitive_desc": [[460, "struct-dnnl-convolution-forward-primitive-desc"]], "struct dnnl::deconvolution_backward_data": [[461, "struct-dnnl-deconvolution-backward-data"]], "struct dnnl::deconvolution_backward_data::primitive_desc": [[462, "struct-dnnl-deconvolution-backward-data-primitive-desc"]], "struct dnnl::deconvolution_backward_weights": [[463, "struct-dnnl-deconvolution-backward-weights"]], "struct dnnl::deconvolution_backward_weights::primitive_desc": [[464, "struct-dnnl-deconvolution-backward-weights-primitive-desc"]], "struct dnnl::deconvolution_forward": [[465, "struct-dnnl-deconvolution-forward"]], "struct dnnl::eltwise_backward": [[467, "struct-dnnl-eltwise-backward"]], "struct dnnl::deconvolution_forward::primitive_desc": [[466, "struct-dnnl-deconvolution-forward-primitive-desc"]], "struct dnnl::eltwise_backward::primitive_desc": [[468, "struct-dnnl-eltwise-backward-primitive-desc"]], "struct dnnl::eltwise_forward": [[469, "struct-dnnl-eltwise-forward"]], "struct dnnl_engine": [[471, "struct-dnnl-engine"]], "struct dnnl::eltwise_forward::primitive_desc": [[470, "struct-dnnl-eltwise-forward-primitive-desc"]], "struct dnnl::error": [[473, "struct-dnnl-error"]], "struct dnnl::engine": [[472, "struct-dnnl-engine"]], "struct dnnl_graph_inplace_pair_t": [[475, "struct-dnnl-graph-inplace-pair-t"]], "Fields": [[475, "fields"], [474, "fields"], [476, "fields"], [557, "fields"], [567, "fields"]], "struct dnnl_exec_arg_t": [[474, "struct-dnnl-exec-arg-t"]], "struct dnnl::group_normalization_backward": [[477, "struct-dnnl-group-normalization-backward"]], "struct dnnl_graph_logical_tensor_t": [[476, "struct-dnnl-graph-logical-tensor-t"]], "struct dnnl::group_normalization_forward": [[479, "struct-dnnl-group-normalization-forward"]], "struct dnnl::group_normalization_backward::primitive_desc": [[478, "struct-dnnl-group-normalization-backward-primitive-desc"]], "struct dnnl::gru_backward": [[481, "struct-dnnl-gru-backward"]], "struct dnnl::group_normalization_forward::primitive_desc": [[480, "struct-dnnl-group-normalization-forward-primitive-desc"]], "struct dnnl::gru_forward": [[483, "struct-dnnl-gru-forward"]], "struct dnnl::gru_backward::primitive_desc": [[482, "struct-dnnl-gru-backward-primitive-desc"]], "template struct dnnl::handle": [[485, "template-struct-dnnl-handle"]], "struct dnnl::gru_forward::primitive_desc": [[484, "struct-dnnl-gru-forward-primitive-desc"]], "template struct dnnl::handle_traits": [[486, "template-struct-dnnl-handle-traits"]], "struct dnnl::inner_product_backward_data": [[487, "struct-dnnl-inner-product-backward-data"]], "struct dnnl::inner_product_backward_data::primitive_desc": [[488, "struct-dnnl-inner-product-backward-data-primitive-desc"]], "struct dnnl::inner_product_backward_weights": [[489, "struct-dnnl-inner-product-backward-weights"]], "struct dnnl::inner_product_backward_weights::primitive_desc": [[490, "struct-dnnl-inner-product-backward-weights-primitive-desc"]], "struct dnnl::inner_product_forward": [[491, "struct-dnnl-inner-product-forward"]], "struct dnnl::inner_product_forward::primitive_desc": [[492, "struct-dnnl-inner-product-forward-primitive-desc"]], "struct dnnl::layer_normalization_backward": [[493, "struct-dnnl-layer-normalization-backward"]], "struct dnnl::layer_normalization_forward": [[495, "struct-dnnl-layer-normalization-forward"]], "struct dnnl::layer_normalization_backward::primitive_desc": [[494, "struct-dnnl-layer-normalization-backward-primitive-desc"]], "struct dnnl::layer_normalization_forward::primitive_desc": [[496, "struct-dnnl-layer-normalization-forward-primitive-desc"]], "struct dnnl::lbr_augru_backward": [[497, "struct-dnnl-lbr-augru-backward"]], "struct dnnl::lbr_augru_forward": [[499, "struct-dnnl-lbr-augru-forward"]], "struct dnnl::lbr_augru_backward::primitive_desc": [[498, "struct-dnnl-lbr-augru-backward-primitive-desc"]], "struct dnnl::lbr_augru_forward::primitive_desc": [[500, "struct-dnnl-lbr-augru-forward-primitive-desc"]], "struct dnnl::lbr_gru_backward": [[501, "struct-dnnl-lbr-gru-backward"]], "struct dnnl::lbr_gru_forward": [[503, "struct-dnnl-lbr-gru-forward"]], "struct dnnl::lbr_gru_backward::primitive_desc": [[502, "struct-dnnl-lbr-gru-backward-primitive-desc"]], "struct dnnl::lrn_backward": [[505, "struct-dnnl-lrn-backward"]], "struct dnnl::lbr_gru_forward::primitive_desc": [[504, "struct-dnnl-lbr-gru-forward-primitive-desc"]], "struct dnnl::lrn_forward": [[507, "struct-dnnl-lrn-forward"]], "struct dnnl::lrn_backward::primitive_desc": [[506, "struct-dnnl-lrn-backward-primitive-desc"]], "struct dnnl::lrn_forward::primitive_desc": [[508, "struct-dnnl-lrn-forward-primitive-desc"]], "struct dnnl::lstm_backward": [[509, "struct-dnnl-lstm-backward"]], "struct dnnl::lstm_forward": [[511, "struct-dnnl-lstm-forward"]], "struct dnnl::lstm_backward::primitive_desc": [[510, "struct-dnnl-lstm-backward-primitive-desc"]], "struct dnnl::lstm_forward::primitive_desc": [[512, "struct-dnnl-lstm-forward-primitive-desc"]], "struct dnnl::matmul": [[513, "struct-dnnl-matmul"]], "struct dnnl::matmul::primitive_desc": [[514, "struct-dnnl-matmul-primitive-desc"]], "struct dnnl_memory": [[515, "struct-dnnl-memory"]], "struct dnnl::memory": [[516, "struct-dnnl-memory"]], "struct dnnl_memory_desc": [[517, "struct-dnnl-memory-desc"]], "struct dnnl::pooling_backward": [[519, "struct-dnnl-pooling-backward"]], "struct dnnl::memory::desc": [[518, "struct-dnnl-memory-desc"]], "struct dnnl::pooling_forward": [[521, "struct-dnnl-pooling-forward"]], "struct dnnl::pooling_backward::primitive_desc": [[520, "struct-dnnl-pooling-backward-primitive-desc"]], "struct dnnl::pooling_forward::primitive_desc": [[522, "struct-dnnl-pooling-forward-primitive-desc"]], "struct dnnl_post_ops": [[523, "struct-dnnl-post-ops"]], "struct dnnl::post_ops": [[524, "struct-dnnl-post-ops"]], "struct dnnl::prelu_backward": [[525, "struct-dnnl-prelu-backward"]], "struct dnnl::prelu_backward::primitive_desc": [[526, "struct-dnnl-prelu-backward-primitive-desc"]], "struct dnnl::prelu_forward": [[527, "struct-dnnl-prelu-forward"]], "struct dnnl_primitive": [[529, "struct-dnnl-primitive"]], "struct dnnl::prelu_forward::primitive_desc": [[528, "struct-dnnl-prelu-forward-primitive-desc"]], "struct dnnl::primitive": [[530, "struct-dnnl-primitive"]], "struct dnnl_primitive_attr": [[531, "struct-dnnl-primitive-attr"]], "struct dnnl::primitive_attr": [[532, "struct-dnnl-primitive-attr"]], "struct dnnl_primitive_desc": [[533, "struct-dnnl-primitive-desc"]], "struct dnnl::primitive_desc": [[534, "struct-dnnl-primitive-desc"]], "struct dnnl::primitive_desc_base": [[535, "struct-dnnl-primitive-desc-base"]], "struct dnnl::reduction::primitive_desc": [[537, "struct-dnnl-reduction-primitive-desc"]], "struct dnnl::reduction": [[536, "struct-dnnl-reduction"]], "struct dnnl::reorder::primitive_desc": [[539, "struct-dnnl-reorder-primitive-desc"]], "struct dnnl::reorder": [[538, "struct-dnnl-reorder"]], "struct dnnl::resampling_backward": [[540, "struct-dnnl-resampling-backward"]], "struct dnnl::resampling_backward::primitive_desc": [[541, "struct-dnnl-resampling-backward-primitive-desc"]], "struct dnnl::resampling_forward": [[542, "struct-dnnl-resampling-forward"]], "struct dnnl::resampling_forward::primitive_desc": [[543, "struct-dnnl-resampling-forward-primitive-desc"]], "struct dnnl::rnn_primitive_desc_base": [[544, "struct-dnnl-rnn-primitive-desc-base"]], "struct dnnl::shuffle_backward": [[545, "struct-dnnl-shuffle-backward"]], "struct dnnl::shuffle_backward::primitive_desc": [[546, "struct-dnnl-shuffle-backward-primitive-desc"]], "struct dnnl::shuffle_forward": [[547, "struct-dnnl-shuffle-forward"]], "struct dnnl::softmax_backward": [[549, "struct-dnnl-softmax-backward"]], "struct dnnl::shuffle_forward::primitive_desc": [[548, "struct-dnnl-shuffle-forward-primitive-desc"]], "struct dnnl::softmax_backward::primitive_desc": [[550, "struct-dnnl-softmax-backward-primitive-desc"]], "struct dnnl::softmax_forward": [[551, "struct-dnnl-softmax-forward"]], "struct dnnl_stream": [[553, "struct-dnnl-stream"]], "struct dnnl::softmax_forward::primitive_desc": [[552, "struct-dnnl-softmax-forward-primitive-desc"]], "struct dnnl::sum": [[555, "struct-dnnl-sum"]], "struct dnnl::stream": [[554, "struct-dnnl-stream"]], "struct dnnl::threadpool_interop::threadpool_iface": [[557, "struct-dnnl-threadpool-interop-threadpool-iface"]], "struct dnnl::sum::primitive_desc": [[556, "struct-dnnl-sum-primitive-desc"]], "struct dnnl_transform": [[558, "struct-dnnl-transform"]], "struct dnnl_ukernel_attr_params": [[559, "struct-dnnl-ukernel-attr-params"]], "struct dnnl::ukernel::attr_params": [[560, "struct-dnnl-ukernel-attr-params"]], "struct dnnl::ukernel::brgemm": [[561, "struct-dnnl-ukernel-brgemm"]], "struct dnnl::vanilla_rnn_backward": [[563, "struct-dnnl-vanilla-rnn-backward"]], "struct dnnl::ukernel::transform": [[562, "struct-dnnl-ukernel-transform"]], "struct dnnl::vanilla_rnn_forward": [[565, "struct-dnnl-vanilla-rnn-forward"]], "struct dnnl::vanilla_rnn_backward::primitive_desc": [[564, "struct-dnnl-vanilla-rnn-backward-primitive-desc"]], "struct dnnl_version_t": [[567, "struct-dnnl-version-t"]], "struct dnnl::vanilla_rnn_forward::primitive_desc": [[566, "struct-dnnl-vanilla-rnn-forward-primitive-desc"]], "struct gemm_dims_t": [[569, "struct-gemm-dims-t"]], "struct example_allows_unimplemented": [[568, "struct-example-allows-unimplemented"]], "struct mqa_dims_t": [[571, "struct-mqa-dims-t"]], "struct gqa_dims_t": [[570, "struct-gqa-dims-t"]], "struct sdpa_dims_t": [[572, "struct-sdpa-dims-t"]], "struct sycl_deletor": [[573, "struct-sycl-deletor"]], "Supported Primitives": [[574, "supported-primitives"]]}, "indexentries": {"allocator": [[2, "index-1"], [2, "index-2"], [325, "index-0"]], "class": [[2, "index-0"], [3, "index-0"], [4, "index-0"], [5, "index-0"], [6, "index-0"], [7, "index-0"], [8, "index-0"], [9, "index-0"]], "dnnl::graph::allocator": [[2, "index-0"]], "function": [[2, "index-1"], [2, "index-2"], [3, "index-1"], [3, "index-2"], [3, "index-3"], [3, "index-4"], [3, "index-5"], [4, "index-1"], [4, "index-2"], [4, "index-3"], [4, "index-4"], [4, "index-5"], [4, "index-6"], [5, "index-10"], [5, "index-11"], [5, "index-12"], [5, "index-13"], [5, "index-14"], [5, "index-15"], [5, "index-16"], [5, "index-17"], [5, "index-18"], [5, "index-19"], [5, "index-20"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"], [6, "index-1"], [6, "index-10"], [6, "index-11"], [6, "index-12"], [6, "index-2"], [6, "index-3"], [6, "index-4"], [6, "index-5"], [6, "index-6"], [6, "index-7"], [6, "index-8"], [6, "index-9"], [7, "index-1"], [7, "index-10"], [7, "index-2"], [7, "index-3"], [7, "index-4"], [7, "index-5"], [7, "index-6"], [7, "index-7"], [7, "index-8"], [7, "index-9"], [8, "index-1"], [8, "index-2"], [8, "index-3"], [8, "index-4"], [8, "index-5"], [8, "index-6"], [8, "index-7"], [278, "index-1"], [283, "index-1"], [284, "index-10"], [284, "index-11"], [284, "index-12"], [284, "index-13"], [284, "index-14"], [284, "index-15"], [284, "index-16"], [284, "index-17"], [284, "index-18"], [284, "index-19"], [284, "index-20"], [284, "index-21"], [284, "index-22"], [284, "index-23"], [284, "index-24"], [284, "index-25"], [284, "index-26"], [284, "index-27"], [284, "index-28"], [284, "index-29"], [284, "index-30"], [284, "index-31"], [284, "index-32"], [284, "index-33"], [284, "index-34"], [284, "index-35"], [284, "index-36"], [284, "index-37"], [284, "index-38"], [284, "index-39"], [284, "index-40"], [284, "index-41"], [284, "index-42"], [284, "index-43"], [284, "index-44"], [284, "index-45"], [284, "index-46"], [284, "index-47"], [284, "index-48"], [284, "index-49"], [284, "index-5"], [284, "index-50"], [284, "index-51"], [284, "index-52"], [284, "index-6"], [284, "index-7"], [284, "index-8"], [284, "index-9"], [285, "index-1"], [285, "index-2"], [286, "index-1"], [287, "index-1"], [287, "index-2"], [287, "index-3"], [287, "index-4"], [287, "index-5"], [287, "index-6"], [289, "index-1"], [290, "index-1"], [290, "index-2"], [290, "index-3"], [292, "index-1"], [292, "index-2"], [292, "index-3"], [293, "index-1"], [293, "index-2"], [294, "index-2"], [294, "index-3"], [294, "index-4"], [294, "index-5"], [294, "index-6"], [295, "index-1"], [295, "index-2"], [295, "index-3"], [296, "index-1"], [296, "index-2"], [297, "index-1"], [297, "index-2"], [297, "index-3"], [299, "index-1"], [299, "index-2"], [299, "index-3"], [299, "index-4"], [300, "index-1"], [300, "index-2"], [301, "index-1"], [302, "index-10"], [302, "index-11"], [302, "index-12"], [302, "index-13"], [302, "index-14"], [302, "index-15"], [302, "index-16"], [302, "index-17"], [302, "index-18"], [302, "index-19"], [302, "index-20"], [302, "index-21"], [302, "index-22"], [302, "index-23"], [302, "index-24"], [302, "index-25"], [302, "index-26"], [302, "index-27"], [302, "index-28"], [302, "index-29"], [302, "index-30"], [302, "index-31"], [302, "index-32"], [302, "index-33"], [302, "index-34"], [302, "index-35"], [302, "index-5"], [302, "index-6"], [302, "index-7"], [302, "index-8"], [302, "index-9"], [303, "index-1"], [303, "index-10"], [303, "index-11"], [303, "index-12"], [303, "index-13"], [303, "index-14"], [303, "index-2"], [303, "index-3"], [303, "index-4"], [303, "index-5"], [303, "index-6"], [303, "index-7"], [303, "index-8"], [303, "index-9"], [304, "index-1"], [304, "index-2"], [305, "index-1"], [305, "index-2"], [306, "index-1"], [306, "index-2"], [306, "index-3"], [306, "index-4"], [308, "index-10"], [308, "index-11"], [308, "index-12"], [308, "index-13"], [308, "index-14"], [308, "index-15"], [308, "index-16"], [308, "index-17"], [308, "index-18"], [308, "index-19"], [308, "index-20"], [308, "index-5"], [308, "index-6"], [308, "index-7"], [308, "index-8"], [308, "index-9"], [309, "index-1"], [309, "index-2"], [309, "index-3"], [309, "index-4"], [310, "index-1"], [311, "index-1"], [312, "index-1"], [312, "index-2"], [313, "index-1"], [313, "index-10"], [313, "index-11"], [313, "index-12"], [313, "index-13"], [313, "index-14"], [313, "index-2"], [313, "index-3"], [313, "index-4"], [313, "index-5"], [313, "index-6"], [313, "index-7"], [313, "index-8"], [313, "index-9"], [314, "index-10"], [314, "index-11"], [314, "index-12"], [314, "index-13"], [314, "index-14"], [314, "index-15"], [314, "index-16"], [314, "index-17"], [314, "index-18"], [314, "index-19"], [314, "index-2"], [314, "index-20"], [314, "index-21"], [314, "index-3"], [314, "index-4"], [314, "index-5"], [314, "index-6"], [314, "index-7"], [314, "index-8"], [314, "index-9"], [315, "index-1"], [315, "index-2"], [316, "index-1"], [316, "index-2"], [317, "index-3"], [317, "index-4"], [317, "index-5"], [317, "index-6"], [318, "index-1"], [319, "index-1"], [319, "index-10"], [319, "index-2"], [319, "index-3"], [319, "index-4"], [319, "index-5"], [319, "index-6"], [319, "index-7"], [319, "index-8"], [319, "index-9"], [320, "index-1"], [320, "index-2"], [320, "index-3"], [320, "index-4"], [320, "index-5"], [320, "index-6"], [320, "index-7"], [321, "index-3"], [321, "index-4"], [321, "index-5"], [321, "index-6"], [321, "index-7"], [321, "index-8"], [322, "index-10"], [322, "index-11"], [322, "index-12"], [322, "index-13"], [322, "index-14"], [322, "index-15"], [322, "index-16"], [322, "index-17"], [322, "index-18"], [322, "index-19"], [322, "index-20"], [322, "index-21"], [322, "index-22"], [322, "index-23"], [322, "index-5"], [322, "index-6"], [322, "index-7"], [322, "index-8"], [322, "index-9"], [325, "index-5"], [325, "index-6"], [326, "index-3"], [326, "index-4"], [326, "index-5"], [326, "index-6"], [326, "index-7"], [327, "index-1"], [327, "index-2"], [327, "index-3"], [327, "index-4"], [328, "index-1"], [328, "index-2"], [328, "index-3"], [328, "index-4"], [328, "index-5"], [328, "index-6"], [328, "index-7"], [328, "index-8"], [329, "index-1"], [329, "index-2"], [330, "index-10"], [330, "index-11"], [330, "index-3"], [330, "index-4"], [330, "index-5"], [330, "index-6"], [330, "index-7"], [330, "index-8"], [330, "index-9"], [332, "index-1"], [332, "index-2"], [332, "index-3"], [332, "index-4"], [332, "index-5"], [333, "index-3"], [333, "index-4"], [333, "index-5"], [333, "index-6"], [334, "index-10"], [334, "index-11"], [334, "index-12"], [334, "index-3"], [334, "index-4"], [334, "index-5"], [334, "index-6"], [334, "index-7"], [334, "index-8"], [334, "index-9"], [335, "index-10"], [335, "index-11"], [335, "index-12"], [335, "index-13"], [335, "index-14"], [335, "index-3"], [335, "index-4"], [335, "index-5"], [335, "index-6"], [335, "index-7"], [335, "index-8"], [335, "index-9"], [337, "index-3"], [337, "index-4"], [337, "index-5"], [338, "index-3"], [338, "index-4"], [338, "index-5"], [338, "index-6"], [338, "index-7"], [338, "index-8"], [344, "index-1"], [344, "index-2"], [344, "index-3"], [344, "index-4"], [345, "index-1"], [345, "index-2"], [346, "index-1"], [346, "index-10"], [346, "index-11"], [346, "index-12"], [346, "index-13"], [346, "index-14"], [346, "index-15"], [346, "index-16"], [346, "index-17"], [346, "index-2"], [346, "index-3"], [346, "index-4"], [346, "index-5"], [346, "index-6"], [346, "index-7"], [346, "index-8"], [346, "index-9"], [347, "index-1"], [347, "index-10"], [347, "index-11"], [347, "index-12"], [347, "index-13"], [347, "index-2"], [347, "index-3"], [347, "index-4"], [347, "index-5"], [347, "index-6"], [347, "index-7"], [347, "index-8"], [347, "index-9"], [348, "index-1"], [348, "index-2"], [348, "index-3"], [348, "index-4"], [348, "index-5"], [442, "index-1"], [442, "index-2"], [442, "index-3"], [443, "index-1"], [443, "index-10"], [443, "index-11"], [443, "index-12"], [443, "index-13"], [443, "index-14"], [443, "index-15"], [443, "index-16"], [443, "index-17"], [443, "index-18"], [443, "index-19"], [443, "index-2"], [443, "index-20"], [443, "index-21"], [443, "index-22"], [443, "index-23"], [443, "index-3"], [443, "index-4"], [443, "index-5"], [443, "index-6"], [443, "index-7"], [443, "index-8"], [443, "index-9"], [444, "index-1"], [444, "index-2"], [444, "index-3"], [445, "index-1"], [445, "index-10"], [445, "index-11"], [445, "index-12"], [445, "index-13"], [445, "index-14"], [445, "index-15"], [445, "index-2"], [445, "index-3"], [445, "index-4"], [445, "index-5"], [445, "index-6"], [445, "index-7"], [445, "index-8"], [445, "index-9"], [446, "index-1"], [446, "index-2"], [446, "index-3"], [447, "index-1"], [447, "index-10"], [447, "index-11"], [447, "index-12"], [447, "index-13"], [447, "index-14"], [447, "index-15"], [447, "index-2"], [447, "index-3"], [447, "index-4"], [447, "index-5"], [447, "index-6"], [447, "index-7"], [447, "index-8"], [447, "index-9"], [448, "index-1"], [448, "index-2"], [448, "index-3"], [449, "index-1"], [449, "index-10"], [449, "index-11"], [449, "index-12"], [449, "index-2"], [449, "index-3"], [449, "index-4"], [449, "index-5"], [449, "index-6"], [449, "index-7"], [449, "index-8"], [449, "index-9"], [450, "index-1"], [450, "index-2"], [450, "index-3"], [451, "index-1"], [451, "index-2"], [451, "index-3"], [451, "index-4"], [451, "index-5"], [451, "index-6"], [451, "index-7"], [451, "index-8"], [453, "index-1"], [453, "index-2"], [453, "index-3"], [454, "index-1"], [454, "index-10"], [454, "index-2"], [454, "index-3"], [454, "index-4"], [454, "index-5"], [454, "index-6"], [454, "index-7"], [454, "index-8"], [454, "index-9"], [455, "index-1"], [455, "index-2"], [455, "index-3"], [456, "index-1"], [456, "index-10"], [456, "index-11"], [456, "index-12"], [456, "index-13"], [456, "index-2"], [456, "index-3"], [456, "index-4"], [456, "index-5"], [456, "index-6"], [456, "index-7"], [456, "index-8"], [456, "index-9"], [457, "index-1"], [457, "index-2"], [457, "index-3"], [458, "index-1"], [458, "index-10"], [458, "index-11"], [458, "index-12"], [458, "index-13"], [458, "index-14"], [458, "index-15"], [458, "index-16"], [458, "index-2"], [458, "index-3"], [458, "index-4"], [458, "index-5"], [458, "index-6"], [458, "index-7"], [458, "index-8"], [458, "index-9"], [459, "index-1"], [459, "index-2"], [459, "index-3"], [460, "index-1"], [460, "index-10"], [460, "index-11"], [460, "index-12"], [460, "index-13"], [460, "index-14"], [460, "index-15"], [460, "index-16"], [460, "index-2"], [460, "index-3"], [460, "index-4"], [460, "index-5"], [460, "index-6"], [460, "index-7"], [460, "index-8"], [460, "index-9"], [461, "index-1"], [461, "index-2"], [461, "index-3"], [462, "index-1"], [462, "index-10"], [462, "index-11"], [462, "index-12"], [462, "index-13"], [462, "index-2"], [462, "index-3"], [462, "index-4"], [462, "index-5"], [462, "index-6"], [462, "index-7"], [462, "index-8"], [462, "index-9"], [463, "index-1"], [463, "index-2"], [463, "index-3"], [464, "index-1"], [464, "index-10"], [464, "index-11"], [464, "index-12"], [464, "index-13"], [464, "index-14"], [464, "index-15"], [464, "index-16"], [464, "index-2"], [464, "index-3"], [464, "index-4"], [464, "index-5"], [464, "index-6"], [464, "index-7"], [464, "index-8"], [464, "index-9"], [465, "index-1"], [465, "index-2"], [465, "index-3"], [466, "index-1"], [466, "index-10"], [466, "index-11"], [466, "index-12"], [466, "index-13"], [466, "index-14"], [466, "index-15"], [466, "index-16"], [466, "index-2"], [466, "index-3"], [466, "index-4"], [466, "index-5"], [466, "index-6"], [466, "index-7"], [466, "index-8"], [466, "index-9"], [467, "index-1"], [467, "index-2"], [467, "index-3"], [468, "index-1"], [468, "index-10"], [468, "index-11"], [468, "index-12"], [468, "index-2"], [468, "index-3"], [468, "index-4"], [468, "index-5"], [468, "index-6"], [468, "index-7"], [468, "index-8"], [468, "index-9"], [469, "index-1"], [469, "index-2"], [469, "index-3"], [470, "index-1"], [470, "index-10"], [470, "index-11"], [470, "index-2"], [470, "index-3"], [470, "index-4"], [470, "index-5"], [470, "index-6"], [470, "index-7"], [470, "index-8"], [470, "index-9"], [472, "index-1"], [472, "index-2"], [472, "index-3"], [472, "index-4"], [472, "index-5"], [472, "index-6"], [472, "index-7"], [472, "index-8"], [473, "index-1"], [473, "index-2"], [473, "index-3"], [477, "index-1"], [477, "index-2"], [477, "index-3"], [478, "index-1"], [478, "index-10"], [478, "index-11"], [478, "index-12"], [478, "index-13"], [478, "index-14"], [478, "index-15"], [478, "index-16"], [478, "index-2"], [478, "index-3"], [478, "index-4"], [478, "index-5"], [478, "index-6"], [478, "index-7"], [478, "index-8"], [478, "index-9"], [479, "index-1"], [479, "index-2"], [479, "index-3"], [480, "index-1"], [480, "index-10"], [480, "index-11"], [480, "index-12"], [480, "index-13"], [480, "index-2"], [480, "index-3"], [480, "index-4"], [480, "index-5"], [480, "index-6"], [480, "index-7"], [480, "index-8"], [480, "index-9"], [481, "index-1"], [481, "index-2"], [481, "index-3"], [482, "index-1"], [482, "index-10"], [482, "index-11"], [482, "index-12"], [482, "index-13"], [482, "index-14"], [482, "index-15"], [482, "index-16"], [482, "index-17"], [482, "index-18"], [482, "index-19"], [482, "index-2"], [482, "index-20"], [482, "index-21"], [482, "index-3"], [482, "index-4"], [482, "index-5"], [482, "index-6"], [482, "index-7"], [482, "index-8"], [482, "index-9"], [483, "index-1"], [483, "index-2"], [483, "index-3"], [484, "index-1"], [484, "index-10"], [484, "index-11"], [484, "index-12"], [484, "index-13"], [484, "index-14"], [484, "index-2"], [484, "index-3"], [484, "index-4"], [484, "index-5"], [484, "index-6"], [484, "index-7"], [484, "index-8"], [484, "index-9"], [485, "index-1"], [485, "index-10"], [485, "index-11"], [485, "index-12"], [485, "index-2"], [485, "index-3"], [485, "index-4"], [485, "index-5"], [485, "index-6"], [485, "index-7"], [485, "index-8"], [485, "index-9"], [487, "index-1"], [487, "index-2"], [487, "index-3"], [488, "index-1"], [488, "index-2"], [488, "index-3"], [488, "index-4"], [488, "index-5"], [488, "index-6"], [488, "index-7"], [489, "index-1"], [489, "index-2"], [489, "index-3"], [490, "index-1"], [490, "index-2"], [490, "index-3"], [490, "index-4"], [490, "index-5"], [490, "index-6"], [490, "index-7"], [490, "index-8"], [490, "index-9"], [491, "index-1"], [491, "index-2"], [491, "index-3"], [492, "index-1"], [492, "index-2"], [492, "index-3"], [492, "index-4"], [492, "index-5"], [492, "index-6"], [492, "index-7"], [492, "index-8"], [492, "index-9"], [493, "index-1"], [493, "index-2"], [493, "index-3"], [494, "index-1"], [494, "index-10"], [494, "index-11"], [494, "index-12"], [494, "index-13"], [494, "index-14"], [494, "index-15"], [494, "index-16"], [494, "index-17"], [494, "index-18"], [494, "index-2"], [494, "index-3"], [494, "index-4"], [494, "index-5"], [494, "index-6"], [494, "index-7"], [494, "index-8"], [494, "index-9"], [495, "index-1"], [495, "index-2"], [495, "index-3"], [496, "index-1"], [496, "index-10"], [496, "index-11"], [496, "index-12"], [496, "index-13"], [496, "index-14"], [496, "index-15"], [496, "index-2"], [496, "index-3"], [496, "index-4"], [496, "index-5"], [496, "index-6"], [496, "index-7"], [496, "index-8"], [496, "index-9"], [497, "index-1"], [497, "index-2"], [497, "index-3"], [498, "index-1"], [498, "index-10"], [498, "index-11"], [498, "index-12"], [498, "index-13"], [498, "index-14"], [498, "index-15"], [498, "index-16"], [498, "index-17"], [498, "index-18"], [498, "index-19"], [498, "index-2"], [498, "index-20"], [498, "index-21"], [498, "index-22"], [498, "index-23"], [498, "index-3"], [498, "index-4"], [498, "index-5"], [498, "index-6"], [498, "index-7"], [498, "index-8"], [498, "index-9"], [499, "index-1"], [499, "index-2"], [499, "index-3"], [500, "index-1"], [500, "index-10"], [500, "index-11"], [500, "index-12"], [500, "index-13"], [500, "index-14"], [500, "index-15"], [500, "index-2"], [500, "index-3"], [500, "index-4"], [500, "index-5"], [500, "index-6"], [500, "index-7"], [500, "index-8"], [500, "index-9"], [501, "index-1"], [501, "index-2"], [501, "index-3"], [502, "index-1"], [502, "index-10"], [502, "index-11"], [502, "index-12"], [502, "index-13"], [502, "index-14"], [502, "index-15"], [502, "index-16"], [502, "index-17"], [502, "index-18"], [502, "index-19"], [502, "index-2"], [502, "index-20"], [502, "index-21"], [502, "index-3"], [502, "index-4"], [502, "index-5"], [502, "index-6"], [502, "index-7"], [502, "index-8"], [502, "index-9"], [503, "index-1"], [503, "index-2"], [503, "index-3"], [504, "index-1"], [504, "index-10"], [504, "index-11"], [504, "index-12"], [504, "index-13"], [504, "index-14"], [504, "index-2"], [504, "index-3"], [504, "index-4"], [504, "index-5"], [504, "index-6"], [504, "index-7"], [504, "index-8"], [504, "index-9"], [505, "index-1"], [505, "index-2"], [505, "index-3"], [506, "index-1"], [506, "index-10"], [506, "index-11"], [506, "index-12"], [506, "index-2"], [506, "index-3"], [506, "index-4"], [506, "index-5"], [506, "index-6"], [506, "index-7"], [506, "index-8"], [506, "index-9"], [507, "index-1"], [507, "index-2"], [507, "index-3"], [508, "index-1"], [508, "index-10"], [508, "index-11"], [508, "index-12"], [508, "index-2"], [508, "index-3"], [508, "index-4"], [508, "index-5"], [508, "index-6"], [508, "index-7"], [508, "index-8"], [508, "index-9"], [509, "index-1"], [509, "index-2"], [509, "index-3"], [510, "index-1"], [510, "index-10"], [510, "index-11"], [510, "index-12"], [510, "index-13"], [510, "index-14"], [510, "index-15"], [510, "index-16"], [510, "index-17"], [510, "index-18"], [510, "index-19"], [510, "index-2"], [510, "index-20"], [510, "index-21"], [510, "index-22"], [510, "index-23"], [510, "index-24"], [510, "index-25"], [510, "index-26"], [510, "index-27"], [510, "index-28"], [510, "index-29"], [510, "index-3"], [510, "index-30"], [510, "index-31"], [510, "index-4"], [510, "index-5"], [510, "index-6"], [510, "index-7"], [510, "index-8"], [510, "index-9"], [511, "index-1"], [511, "index-2"], [511, "index-3"], [512, "index-1"], [512, "index-10"], [512, "index-11"], [512, "index-12"], [512, "index-13"], [512, "index-14"], [512, "index-15"], [512, "index-16"], [512, "index-17"], [512, "index-18"], [512, "index-19"], [512, "index-2"], [512, "index-20"], [512, "index-3"], [512, "index-4"], [512, "index-5"], [512, "index-6"], [512, "index-7"], [512, "index-8"], [512, "index-9"], [513, "index-1"], [513, "index-2"], [513, "index-3"], [514, "index-1"], [514, "index-2"], [514, "index-3"], [514, "index-4"], [514, "index-5"], [514, "index-6"], [514, "index-7"], [514, "index-8"], [516, "index-10"], [516, "index-11"], [516, "index-12"], [516, "index-13"], [516, "index-14"], [516, "index-15"], [516, "index-16"], [516, "index-17"], [516, "index-18"], [516, "index-3"], [516, "index-4"], [516, "index-5"], [516, "index-6"], [516, "index-7"], [516, "index-8"], [516, "index-9"], [518, "index-1"], [518, "index-10"], [518, "index-11"], [518, "index-12"], [518, "index-13"], [518, "index-14"], [518, "index-15"], [518, "index-16"], [518, "index-17"], [518, "index-18"], [518, "index-19"], [518, "index-2"], [518, "index-20"], [518, "index-21"], [518, "index-22"], [518, "index-23"], [518, "index-24"], [518, "index-25"], [518, "index-26"], [518, "index-27"], [518, "index-28"], [518, "index-29"], [518, "index-3"], [518, "index-30"], [518, "index-4"], [518, "index-5"], [518, "index-6"], [518, "index-7"], [518, "index-8"], [518, "index-9"], [519, "index-1"], [519, "index-2"], [519, "index-3"], [520, "index-1"], [520, "index-10"], [520, "index-11"], [520, "index-12"], [520, "index-13"], [520, "index-2"], [520, "index-3"], [520, "index-4"], [520, "index-5"], [520, "index-6"], [520, "index-7"], [520, "index-8"], [520, "index-9"], [521, "index-1"], [521, "index-2"], [521, "index-3"], [522, "index-1"], [522, "index-10"], [522, "index-11"], [522, "index-12"], [522, "index-13"], [522, "index-2"], [522, "index-3"], [522, "index-4"], [522, "index-5"], [522, "index-6"], [522, "index-7"], [522, "index-8"], [522, "index-9"], [524, "index-1"], [524, "index-10"], [524, "index-11"], [524, "index-12"], [524, "index-13"], [524, "index-14"], [524, "index-15"], [524, "index-16"], [524, "index-2"], [524, "index-3"], [524, "index-4"], [524, "index-5"], [524, "index-6"], [524, "index-7"], [524, "index-8"], [524, "index-9"], [525, "index-1"], [525, "index-2"], [525, "index-3"], [526, "index-1"], [526, "index-2"], [526, "index-3"], [526, "index-4"], [526, "index-5"], [526, "index-6"], [526, "index-7"], [527, "index-1"], [527, "index-2"], [527, "index-3"], [528, "index-1"], [528, "index-2"], [528, "index-3"], [528, "index-4"], [528, "index-5"], [528, "index-6"], [530, "index-1"], [530, "index-10"], [530, "index-11"], [530, "index-12"], [530, "index-13"], [530, "index-2"], [530, "index-3"], [530, "index-4"], [530, "index-5"], [530, "index-6"], [530, "index-7"], [530, "index-8"], [530, "index-9"], [532, "index-1"], [532, "index-10"], [532, "index-11"], [532, "index-12"], [532, "index-13"], [532, "index-14"], [532, "index-15"], [532, "index-16"], [532, "index-17"], [532, "index-18"], [532, "index-19"], [532, "index-2"], [532, "index-20"], [532, "index-21"], [532, "index-22"], [532, "index-23"], [532, "index-24"], [532, "index-25"], [532, "index-26"], [532, "index-27"], [532, "index-3"], [532, "index-4"], [532, "index-5"], [532, "index-6"], [532, "index-7"], [532, "index-8"], [532, "index-9"], [534, "index-1"], [534, "index-2"], [534, "index-3"], [534, "index-4"], [534, "index-5"], [535, "index-1"], [535, "index-10"], [535, "index-11"], [535, "index-12"], [535, "index-13"], [535, "index-14"], [535, "index-15"], [535, "index-16"], [535, "index-17"], [535, "index-18"], [535, "index-19"], [535, "index-2"], [535, "index-20"], [535, "index-21"], [535, "index-22"], [535, "index-23"], [535, "index-24"], [535, "index-25"], [535, "index-26"], [535, "index-27"], [535, "index-28"], [535, "index-29"], [535, "index-3"], [535, "index-30"], [535, "index-31"], [535, "index-32"], [535, "index-33"], [535, "index-34"], [535, "index-35"], [535, "index-36"], [535, "index-37"], [535, "index-38"], [535, "index-39"], [535, "index-4"], [535, "index-40"], [535, "index-41"], [535, "index-42"], [535, "index-5"], [535, "index-6"], [535, "index-7"], [535, "index-8"], [535, "index-9"], [536, "index-1"], [536, "index-2"], [536, "index-3"], [537, "index-1"], [537, "index-2"], [537, "index-3"], [537, "index-4"], [537, "index-5"], [537, "index-6"], [537, "index-7"], [537, "index-8"], [538, "index-1"], [538, "index-2"], [538, "index-3"], [538, "index-4"], [538, "index-5"], [538, "index-6"], [539, "index-1"], [539, "index-10"], [539, "index-11"], [539, "index-12"], [539, "index-2"], [539, "index-3"], [539, "index-4"], [539, "index-5"], [539, "index-6"], [539, "index-7"], [539, "index-8"], [539, "index-9"], [540, "index-1"], [540, "index-2"], [540, "index-3"], [541, "index-1"], [541, "index-2"], [541, "index-3"], [541, "index-4"], [541, "index-5"], [541, "index-6"], [542, "index-1"], [542, "index-2"], [542, "index-3"], [543, "index-1"], [543, "index-2"], [543, "index-3"], [543, "index-4"], [543, "index-5"], [543, "index-6"], [543, "index-7"], [544, "index-1"], [544, "index-10"], [544, "index-11"], [544, "index-12"], [544, "index-13"], [544, "index-14"], [544, "index-15"], [544, "index-16"], [544, "index-17"], [544, "index-18"], [544, "index-19"], [544, "index-2"], [544, "index-20"], [544, "index-21"], [544, "index-22"], [544, "index-23"], [544, "index-24"], [544, "index-25"], [544, "index-26"], [544, "index-3"], [544, "index-4"], [544, "index-5"], [544, "index-6"], [544, "index-7"], [544, "index-8"], [544, "index-9"], [545, "index-1"], [545, "index-2"], [545, "index-3"], [546, "index-1"], [546, "index-2"], [546, "index-3"], [546, "index-4"], [546, "index-5"], [546, "index-6"], [546, "index-7"], [546, "index-8"], [547, "index-1"], [547, "index-2"], [547, "index-3"], [548, "index-1"], [548, "index-2"], [548, "index-3"], [548, "index-4"], [548, "index-5"], [548, "index-6"], [548, "index-7"], [548, "index-8"], [549, "index-1"], [549, "index-2"], [549, "index-3"], [550, "index-1"], [550, "index-2"], [550, "index-3"], [550, "index-4"], [550, "index-5"], [550, "index-6"], [550, "index-7"], [550, "index-8"], [550, "index-9"], [551, "index-1"], [551, "index-2"], [551, "index-3"], [552, "index-1"], [552, "index-2"], [552, "index-3"], [552, "index-4"], [552, "index-5"], [552, "index-6"], [552, "index-7"], [552, "index-8"], [554, "index-1"], [554, "index-2"], [554, "index-3"], [554, "index-4"], [554, "index-5"], [554, "index-6"], [554, "index-7"], [554, "index-8"], [555, "index-1"], [555, "index-2"], [555, "index-3"], [556, "index-1"], [556, "index-10"], [556, "index-2"], [556, "index-3"], [556, "index-4"], [556, "index-5"], [556, "index-6"], [556, "index-7"], [556, "index-8"], [556, "index-9"], [557, "index-2"], [557, "index-3"], [557, "index-4"], [557, "index-5"], [560, "index-1"], [560, "index-2"], [560, "index-3"], [560, "index-4"], [561, "index-1"], [561, "index-10"], [561, "index-11"], [561, "index-12"], [561, "index-13"], [561, "index-14"], [561, "index-15"], [561, "index-16"], [561, "index-17"], [561, "index-2"], [561, "index-3"], [561, "index-4"], [561, "index-5"], [561, "index-6"], [561, "index-7"], [561, "index-8"], [561, "index-9"], [562, "index-1"], [562, "index-2"], [562, "index-3"], [562, "index-4"], [563, "index-1"], [563, "index-2"], [563, "index-3"], [564, "index-1"], [564, "index-10"], [564, "index-11"], [564, "index-12"], [564, "index-13"], [564, "index-14"], [564, "index-15"], [564, "index-16"], [564, "index-17"], [564, "index-18"], [564, "index-19"], [564, "index-2"], [564, "index-20"], [564, "index-21"], [564, "index-22"], [564, "index-23"], [564, "index-24"], [564, "index-25"], [564, "index-3"], [564, "index-4"], [564, "index-5"], [564, "index-6"], [564, "index-7"], [564, "index-8"], [564, "index-9"], [565, "index-1"], [565, "index-2"], [565, "index-3"], [566, "index-1"], [566, "index-10"], [566, "index-11"], [566, "index-12"], [566, "index-13"], [566, "index-14"], [566, "index-15"], [566, "index-16"], [566, "index-17"], [566, "index-18"], [566, "index-2"], [566, "index-3"], [566, "index-4"], [566, "index-5"], [566, "index-6"], [566, "index-7"], [566, "index-8"], [566, "index-9"]], "compiled_partition": [[3, "index-1"], [3, "index-2"]], "dnnl::graph::compiled_partition": [[3, "index-0"]], "execute": [[3, "index-5"], [344, "index-4"], [345, "index-2"], [346, "index-17"], [347, "index-13"], [530, "index-9"], [538, "index-5"], [538, "index-6"], [561, "index-13"], [561, "index-14"], [562, "index-4"]], "get_inplace_ports": [[3, "index-4"]], "query_logical_tensor": [[3, "index-3"]], "add_op": [[4, "index-3"]], "dnnl::graph::graph": [[4, "index-0"]], "finalize": [[4, "index-4"], [561, "index-8"]], "get_partitions": [[4, "index-6"]], "graph": [[4, "index-1"], [4, "index-2"], [330, "index-0"]], "is_finalized": [[4, "index-5"]], "dim": [[5, "index-1"], [516, "index-1"]], "dims": [[5, "index-2"], [206, "index-44"], [476, "index-3"], [516, "index-2"]], "dnnl::graph::logical_tensor": [[5, "index-0"]], "get_data_type": [[5, "index-14"], [518, "index-20"]], "get_dims": [[5, "index-12"], [518, "index-22"]], "get_id": [[5, "index-13"], [7, "index-5"]], "get_layout_id": [[5, "index-17"]], "get_layout_type": [[5, "index-16"]], "get_mem_size": [[5, "index-19"]], "get_property_type": [[5, "index-15"]], "get_strides": [[5, "index-18"], [456, "index-10"], [458, "index-13"], [460, "index-13"], [462, "index-10"], [464, "index-13"], [466, "index-13"], [518, "index-13"], [520, "index-9"], [522, "index-9"], [535, "index-4"]], "is_equal": [[5, "index-20"]], "logical_tensor": [[5, "index-10"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"]], "operator=": [[5, "index-11"], [485, "index-5"], [485, "index-6"]], "typedef": [[5, "index-1"], [5, "index-2"], [284, "index-1"], [284, "index-2"], [284, "index-3"], [284, "index-4"], [291, "index-1"], [291, "index-2"], [294, "index-1"], [302, "index-1"], [302, "index-2"], [302, "index-3"], [302, "index-4"], [308, "index-1"], [308, "index-2"], [308, "index-3"], [308, "index-4"], [314, "index-1"], [317, "index-1"], [317, "index-2"], [321, "index-1"], [321, "index-2"], [322, "index-1"], [322, "index-2"], [322, "index-3"], [322, "index-4"], [325, "index-1"], [325, "index-2"], [325, "index-3"], [325, "index-4"], [326, "index-1"], [326, "index-2"], [330, "index-1"], [330, "index-2"], [333, "index-1"], [333, "index-2"], [334, "index-1"], [334, "index-2"], [335, "index-1"], [335, "index-2"], [337, "index-1"], [337, "index-2"], [338, "index-1"], [338, "index-2"], [516, "index-1"], [516, "index-2"]], "add_input": [[6, "index-3"]], "add_inputs": [[6, "index-4"]], "add_output": [[6, "index-5"]], "add_outputs": [[6, "index-6"]], "dnnl::graph::op": [[6, "index-0"]], "op": [[6, "index-1"], [6, "index-2"], [334, "index-0"]], "set_attr": [[6, "index-10"], [6, "index-11"], [6, "index-12"], [6, "index-7"], [6, "index-8"], [6, "index-9"]], "compile": [[7, "index-6"]], "dnnl::graph::partition": [[7, "index-0"]], "get_engine_kind": [[7, "index-10"]], "get_input_ports": [[7, "index-8"]], "get_ops": [[7, "index-4"]], "get_ops_num": [[7, "index-3"]], "get_output_ports": [[7, "index-9"]], "is_supported": [[7, "index-7"]], "partition": [[7, "index-1"], [7, "index-2"], [335, "index-0"]], "dnnl::graph::tensor": [[8, "index-0"]], "get_data_handle": [[8, "index-4"], [516, "index-11"]], "get_engine": [[8, "index-6"], [516, "index-10"], [535, "index-1"], [554, "index-3"]], "get_logical_tensor": [[8, "index-7"]], "set_data_handle": [[8, "index-5"], [516, "index-12"]], "tensor": [[8, "index-1"], [8, "index-2"], [8, "index-3"], [338, "index-0"]], "simple_memory_pool_t": [[9, "index-0"]], "primitive attributes": [[10, "index-0"]], "page": [[10, "index-0"], [11, "index-0"], [12, "index-0"], [13, "index-0"], [14, "index-0"], [15, "index-0"], [16, "index-0"], [17, "index-0"], [18, "index-0"], [19, "index-0"], [20, "index-0"], [21, "index-0"], [22, "index-0"], [23, "index-0"], [24, "index-0"], [25, "index-0"], [26, "index-0"], [27, "index-0"], [28, "index-0"], [29, "index-0"], [30, "index-0"], [31, "index-0"], [32, "index-0"], [33, "index-0"], [34, "index-0"], [35, "index-0"], [36, "index-0"], [37, "index-0"], [38, "index-0"], [39, "index-0"], [40, "index-0"], [41, "index-0"], [42, "index-0"], [43, "index-0"], [44, "index-0"], [45, "index-0"], [46, "index-0"], [47, "index-0"], [48, "index-0"], [49, "index-0"], [50, "index-0"], [51, "index-0"], [52, "index-0"], [53, "index-0"], [54, "index-0"], [55, "index-0"], [56, "index-0"], [57, "index-0"], [58, "index-0"], [59, "index-0"], [60, "index-0"], [61, "index-0"], [62, "index-0"], [63, "index-0"], [64, "index-0"], [65, "index-0"], [66, "index-0"], [67, "index-0"], [68, "index-0"], [69, "index-0"], [70, "index-0"], [71, "index-0"], [72, "index-0"], [73, "index-0"], [74, "index-0"], [75, "index-0"], [76, "index-0"], [77, "index-0"], [78, "index-0"], [79, "index-0"], [80, "index-0"], [81, "index-0"], [82, "index-0"], [83, "index-0"], [84, "index-0"], [85, "index-0"], [86, "index-0"], [87, "index-0"], [88, "index-0"], [89, "index-0"], [90, "index-0"], [91, "index-0"], [92, "index-0"], [93, "index-0"], [94, "index-0"], [95, "index-0"], [96, "index-0"], [97, "index-0"], [98, "index-0"], [99, "index-0"], [100, "index-0"], [101, "index-0"], [102, "index-0"], [103, "index-0"], [104, "index-0"], [105, "index-0"], [106, "index-0"], [107, "index-0"], [108, "index-0"], [109, "index-0"], [110, "index-0"], [111, "index-0"], [112, "index-0"], [113, "index-0"], [114, "index-0"], [115, "index-0"], [116, "index-0"], [117, "index-0"], [118, "index-0"], [119, "index-0"], [120, "index-0"], [121, "index-0"], [122, "index-0"], [123, "index-0"], [124, "index-0"], [125, "index-0"], [126, "index-0"], [127, "index-0"], [128, "index-0"], [129, "index-0"], [130, "index-0"], [131, "index-0"], [132, "index-0"], [133, "index-0"], [134, "index-0"], [135, "index-0"], [136, "index-0"], [137, "index-0"], [138, "index-0"], [139, "index-0"], [140, "index-0"], [141, "index-0"], [142, "index-0"], [143, "index-0"], [144, "index-0"], [145, "index-0"], [146, "index-0"], [147, "index-0"], [148, "index-0"], [149, "index-0"], [150, "index-0"], [151, "index-0"], [152, "index-0"], [153, "index-0"], [154, "index-0"], [155, "index-0"], [156, "index-0"], [157, "index-0"], [158, "index-0"], [159, "index-0"], [160, "index-0"], [161, "index-0"], [162, "index-0"], [354, "index-0"], [356, "index-0"], [358, "index-0"], [360, "index-0"], [362, "index-0"], [363, "index-0"], [364, "index-0"], [365, "index-0"], [366, "index-0"], [367, "index-0"], [369, "index-0"], [371, "index-0"], [372, "index-0"], [373, "index-0"], [374, "index-0"], [375, "index-0"], [377, "index-0"], [378, "index-0"], [379, "index-0"], [380, "index-0"], [382, "index-0"], [383, "index-0"], [384, "index-0"], [386, "index-0"], [388, "index-0"], [389, "index-0"], [390, "index-0"], [391, "index-0"], [392, "index-0"], [393, "index-0"], [394, "index-0"], [395, "index-0"], [396, "index-0"], [398, "index-0"], [400, "index-0"], [402, "index-0"], [404, "index-0"], [406, "index-0"], [407, "index-0"], [409, "index-0"], [411, "index-0"], [413, "index-0"], [414, "index-0"], [415, "index-0"], [417, "index-0"], [419, "index-0"], [421, "index-0"], [423, "index-0"], [425, "index-0"], [426, "index-0"], [428, "index-0"], [430, "index-0"], [432, "index-0"], [433, "index-0"], [434, "index-0"], [436, "index-0"]], "primitive attributes: accumulation mode": [[11, "index-0"]], "primitive attributes: deterministic": [[12, "index-0"]], "primitive attributes: dropout": [[13, "index-0"]], "primitive attributes: floating-point math mode": [[14, "index-0"]], "primitive attributes: post-ops": [[15, "index-0"]], "primitive attributes: quantization": [[16, "index-0"]], "primitive attributes: rounding mode": [[17, "index-0"]], "primitive attributes: scratchpad": [[18, "index-0"]], "basic concepts": [[19, "index-0"], [37, "index-0"], [156, "index-0"]], "batch normalization": [[20, "index-0"], [285, "index-0"]], "benchmarking performance": [[21, "index-0"]], "binary": [[22, "index-0"], [200, "index-13"], [286, "index-0"], [450, "index-1"], [450, "index-2"], [450, "index-3"]], "build from source": [[23, "index-0"]], "build options": [[24, "index-0"]], "api": [[25, "index-0"]], "concat": [[26, "index-0"], [66, "index-0"], [200, "index-4"], [289, "index-0"], [453, "index-1"], [453, "index-2"], [453, "index-3"]], "constant tensor cache": [[27, "index-0"], [328, "index-0"]], "naming conventions": [[28, "index-0"]], "convolution": [[29, "index-0"], [67, "index-0"], [200, "index-6"], [290, "index-0"]], "cpu dispatcher control": [[30, "index-0"]], "cpu isa hints": [[31, "index-0"]], "data types": [[32, "index-0"], [291, "index-0"]], "dpc++ interoperability": [[33, "index-0"]], "eltwise": [[34, "index-0"], [200, "index-8"], [293, "index-0"]], "examples": [[35, "index-0"]], "experimental features": [[36, "index-0"]], "graph compiler": [[38, "index-0"]], "graph dump": [[39, "index-0"]], "supported fusion patterns": [[40, "index-0"]], "low precision": [[41, "index-0"]], "scaled dot-product attention (sdpa)": [[42, "index-0"]], "group normalization": [[43, "index-0"], [296, "index-0"]], "inference": [[44, "index-0"]], "inference and training aspects": [[45, "index-0"]], "int8 inference": [[46, "index-0"]], "inner product": [[47, "index-0"], [297, "index-0"]], "inspecting jit code": [[48, "index-0"]], "nuances of int8 computations": [[49, "index-0"]], "layer normalization": [[50, "index-0"], [299, "index-0"]], "linking to the library": [[51, "index-0"]], "local response normalization (lrn)": [[52, "index-0"]], "matrix multiplication": [[53, "index-0"], [301, "index-0"]], "abs": [[54, "index-0"]], "absbackward": [[55, "index-0"]], "add": [[56, "index-0"]], "avgpool": [[57, "index-0"]], "avgpoolbackward": [[58, "index-0"]], "batchnormforwardtraining": [[59, "index-0"]], "batchnorminference": [[60, "index-0"]], "batchnormtrainingbackward": [[61, "index-0"]], "biasadd": [[62, "index-0"]], "biasaddbackward": [[63, "index-0"]], "clamp": [[64, "index-0"]], "clampbackward": [[65, "index-0"]], "convolutionbackwarddata": [[68, "index-0"]], "convolutionbackwardweights": [[69, "index-0"]], "convtranspose": [[70, "index-0"]], "convtransposebackwarddata": [[71, "index-0"]], "convtransposebackwardweights": [[72, "index-0"]], "dequantize": [[73, "index-0"]], "divide": [[74, "index-0"]], "dynamicdequantize": [[75, "index-0"]], "dynamicquantize": [[76, "index-0"]], "elu": [[77, "index-0"]], "elubackward": [[78, "index-0"]], "end": [[79, "index-0"], [183, "index-43"]], "exp": [[80, "index-0"]], "gelu": [[81, "index-0"]], "gelubackward": [[82, "index-0"]], "groupnorm": [[83, "index-0"]], "hardsigmoid": [[84, "index-0"]], "hardsigmoidbackward": [[85, "index-0"]], "hardswish": [[86, "index-0"]], "hardswishbackward": [[87, "index-0"]], "interpolate": [[88, "index-0"]], "interpolatebackward": [[89, "index-0"]], "layernorm": [[90, "index-0"]], "layernormbackward": [[91, "index-0"]], "leakyrelu": [[92, "index-0"]], "log": [[93, "index-0"]], "logsoftmax": [[94, "index-0"]], "logsoftmaxbackward": [[95, "index-0"]], "matmul": [[96, "index-0"], [200, "index-14"], [513, "index-1"], [513, "index-2"], [513, "index-3"]], "maximum": [[97, "index-0"]], "maxpool": [[98, "index-0"]], "maxpoolbackward": [[99, "index-0"]], "minimum": [[100, "index-0"]], "mish": [[101, "index-0"]], "mishbackward": [[102, "index-0"]], "multiply": [[103, "index-0"]], "pow": [[104, "index-0"]], "prelu": [[105, "index-0"], [142, "index-0"], [200, "index-18"], [305, "index-0"]], "prelubackward": [[106, "index-0"]], "quantize": [[107, "index-0"]], "reciprocal": [[108, "index-0"]], "reducel1": [[109, "index-0"]], "reducel2": [[110, "index-0"]], "reducemax": [[111, "index-0"]], "reducemean": [[112, "index-0"]], "reducemin": [[113, "index-0"]], "reduceprod": [[114, "index-0"]], "reducesum": [[115, "index-0"]], "relu": [[116, "index-0"]], "relubackward": [[117, "index-0"]], "reorder": [[118, "index-0"], [146, "index-0"], [200, "index-2"], [311, "index-0"], [538, "index-1"], [538, "index-2"], [538, "index-3"], [538, "index-4"]], "round": [[119, "index-0"]], "select": [[120, "index-0"]], "sigmoid": [[121, "index-0"]], "sigmoidbackward": [[122, "index-0"]], "softmax": [[123, "index-0"], [150, "index-0"], [200, "index-19"], [316, "index-0"]], "softmaxbackward": [[124, "index-0"]], "softplus": [[125, "index-0"]], "softplusbackward": [[126, "index-0"]], "sqrt": [[127, "index-0"]], "sqrtbackward": [[128, "index-0"]], "square": [[129, "index-0"]], "squareddifference": [[130, "index-0"]], "staticreshape": [[131, "index-0"]], "statictranspose": [[132, "index-0"]], "subtract": [[133, "index-0"]], "tanh": [[134, "index-0"]], "tanhbackward": [[135, "index-0"]], "typecast": [[136, "index-0"]], "wildcard": [[137, "index-0"]], "opencl interoperability": [[138, "index-0"]], "configuring onednn for benchmarking": [[139, "index-0"]], "persistent cache": [[140, "index-0"]], "pooling": [[141, "index-0"], [200, "index-16"], [304, "index-0"]], "primitive cache": [[143, "index-0"], [306, "index-0"]], "profiling onednn performance": [[144, "index-0"]], "reduction": [[145, "index-0"], [200, "index-17"], [310, "index-0"], [536, "index-1"], [536, "index-2"], [536, "index-3"]], "resampling": [[147, "index-0"], [200, "index-15"], [312, "index-0"]], "rnn": [[148, "index-0"], [200, "index-12"], [313, "index-0"]], "shuffle": [[149, "index-0"], [200, "index-3"], [315, "index-0"]], "sum": [[151, "index-0"], [200, "index-5"], [318, "index-0"], [555, "index-1"], [555, "index-2"], [555, "index-3"]], "using onednn with threadpool-based threading": [[152, "index-0"]], "training": [[153, "index-0"]], "bfloat16 training": [[154, "index-0"]], "transitioning from intel mkl-dnn to onednn": [[155, "index-0"]], "batch-reduce general matrix multiplication": [[157, "index-0"]], "data transformation": [[158, "index-0"]], "understanding memory formats": [[159, "index-0"]], "verbose mode": [[160, "index-0"]], "verbose message catalogue": [[161, "index-0"]], "profiling with vtune(tm) profiler": [[162, "index-0"]], "api_kind": [[163, "index-0"]], "enum": [[163, "index-0"], [164, "index-0"], [165, "index-0"], [166, "index-0"], [167, "index-0"], [168, "index-0"], [169, "index-0"], [170, "index-0"], [171, "index-0"], [172, "index-0"], [173, "index-0"], [174, "index-0"], [175, "index-0"], [176, "index-0"], [177, "index-0"], [178, "index-0"], [179, "index-0"], [180, "index-0"], [181, "index-0"], [182, "index-0"], [183, "index-0"], [184, "index-0"], [185, "index-0"], [186, "index-0"], [187, "index-0"], [188, "index-0"], [189, "index-0"], [190, "index-0"], [191, "index-0"], [192, "index-0"], [193, "index-0"], [194, "index-0"], [195, "index-0"], [196, "index-0"], [197, "index-0"], [198, "index-0"], [199, "index-0"], [200, "index-0"], [201, "index-0"], [202, "index-0"], [203, "index-0"], [204, "index-0"], [205, "index-0"], [206, "index-0"], [207, "index-0"], [208, "index-0"], [209, "index-0"], [210, "index-0"], [211, "index-0"], [212, "index-0"], [213, "index-0"], [214, "index-0"], [215, "index-0"], [216, "index-0"], [217, "index-0"], [218, "index-0"], [219, "index-0"], [220, "index-0"], [221, "index-0"], [222, "index-0"], [223, "index-0"]], "accumulation_mode": [[164, "index-0"]], "any": [[164, "index-3"], [173, "index-1"], [177, "index-5"], [181, "index-2"], [192, "index-2"], [193, "index-2"]], "enumvalue": [[164, "index-1"], [164, "index-2"], [164, "index-3"], [164, "index-4"], [164, "index-5"], [164, "index-6"], [165, "index-1"], [165, "index-2"], [165, "index-3"], [165, "index-4"], [165, "index-5"], [165, "index-6"], [166, "index-1"], [166, "index-10"], [166, "index-11"], [166, "index-12"], [166, "index-13"], [166, "index-14"], [166, "index-15"], [166, "index-16"], [166, "index-17"], [166, "index-18"], [166, "index-19"], [166, "index-2"], [166, "index-20"], [166, "index-21"], [166, "index-22"], [166, "index-23"], [166, "index-24"], [166, "index-25"], [166, "index-26"], [166, "index-27"], [166, "index-28"], [166, "index-29"], [166, "index-3"], [166, "index-30"], [166, "index-31"], [166, "index-32"], [166, "index-33"], [166, "index-34"], [166, "index-35"], [166, "index-36"], [166, "index-37"], [166, "index-38"], [166, "index-39"], [166, "index-4"], [166, "index-40"], [166, "index-41"], [166, "index-42"], [166, "index-43"], [166, "index-44"], [166, "index-45"], [166, "index-46"], [166, "index-47"], [166, "index-48"], [166, "index-49"], [166, "index-5"], [166, "index-50"], [166, "index-51"], [166, "index-52"], [166, "index-53"], [166, "index-54"], [166, "index-55"], [166, "index-56"], [166, "index-57"], [166, "index-58"], [166, "index-59"], [166, "index-6"], [166, "index-60"], [166, "index-61"], [166, "index-62"], [166, "index-63"], [166, "index-64"], [166, "index-65"], [166, "index-66"], [166, "index-67"], [166, "index-68"], [166, "index-69"], [166, "index-7"], [166, "index-8"], [166, "index-9"], [167, "index-1"], [167, "index-10"], [167, "index-11"], [167, "index-12"], [167, "index-13"], [167, "index-14"], [167, "index-15"], [167, "index-16"], [167, "index-17"], [167, "index-18"], [167, "index-19"], [167, "index-2"], [167, "index-20"], [167, "index-21"], [167, "index-22"], [167, "index-23"], [167, "index-24"], [167, "index-25"], [167, "index-26"], [167, "index-27"], [167, "index-28"], [167, "index-29"], [167, "index-3"], [167, "index-30"], [167, "index-31"], [167, "index-32"], [167, "index-33"], [167, "index-34"], [167, "index-35"], [167, "index-36"], [167, "index-37"], [167, "index-38"], [167, "index-39"], [167, "index-4"], [167, "index-40"], [167, "index-41"], [167, "index-42"], [167, "index-43"], [167, "index-44"], [167, "index-45"], [167, "index-46"], [167, "index-47"], [167, "index-48"], [167, "index-49"], [167, "index-5"], [167, "index-50"], [167, "index-51"], [167, "index-52"], [167, "index-53"], [167, "index-54"], [167, "index-55"], [167, "index-56"], [167, "index-57"], [167, "index-58"], [167, "index-59"], [167, "index-6"], [167, "index-60"], [167, "index-61"], [167, "index-62"], [167, "index-63"], [167, "index-64"], [167, "index-65"], [167, "index-66"], [167, "index-67"], [167, "index-68"], [167, "index-69"], [167, "index-7"], [167, "index-70"], [167, "index-8"], [167, "index-9"], [168, "index-1"], [168, "index-10"], [168, "index-11"], [168, "index-12"], [168, "index-13"], [168, "index-14"], [168, "index-15"], [168, "index-2"], [168, "index-3"], [168, "index-4"], [168, "index-5"], [168, "index-6"], [168, "index-7"], [168, "index-8"], [168, "index-9"], [169, "index-1"], [169, "index-2"], [170, "index-1"], [170, "index-2"], [171, "index-1"], [171, "index-10"], [171, "index-11"], [171, "index-12"], [171, "index-13"], [171, "index-14"], [171, "index-15"], [171, "index-2"], [171, "index-3"], [171, "index-4"], [171, "index-5"], [171, "index-6"], [171, "index-7"], [171, "index-8"], [171, "index-9"], [172, "index-1"], [172, "index-10"], [172, "index-11"], [172, "index-12"], [172, "index-13"], [172, "index-14"], [172, "index-15"], [172, "index-2"], [172, "index-3"], [172, "index-4"], [172, "index-5"], [172, "index-6"], [172, "index-7"], [172, "index-8"], [172, "index-9"], [173, "index-1"], [173, "index-2"], [173, "index-3"], [174, "index-1"], [174, "index-2"], [174, "index-3"], [175, "index-1"], [175, "index-2"], [175, "index-3"], [175, "index-4"], [175, "index-5"], [175, "index-6"], [176, "index-1"], [176, "index-10"], [176, "index-100"], [176, "index-101"], [176, "index-102"], [176, "index-103"], [176, "index-104"], [176, "index-105"], [176, "index-106"], [176, "index-107"], [176, "index-108"], [176, "index-109"], [176, "index-11"], [176, "index-110"], [176, "index-111"], [176, "index-112"], [176, "index-113"], [176, "index-114"], [176, "index-115"], [176, "index-116"], [176, "index-117"], [176, "index-118"], [176, "index-119"], [176, "index-12"], [176, "index-120"], [176, "index-121"], [176, "index-122"], [176, "index-123"], [176, "index-124"], [176, "index-125"], [176, "index-126"], [176, "index-127"], [176, "index-128"], [176, "index-129"], [176, "index-13"], [176, "index-130"], [176, "index-131"], [176, "index-132"], [176, "index-133"], [176, "index-134"], [176, "index-135"], [176, "index-136"], [176, "index-137"], [176, "index-138"], [176, "index-14"], [176, "index-15"], [176, "index-16"], [176, "index-17"], [176, "index-18"], [176, "index-19"], [176, "index-2"], [176, "index-20"], [176, "index-21"], [176, "index-22"], [176, "index-23"], [176, "index-24"], [176, "index-25"], [176, "index-26"], [176, "index-27"], [176, "index-28"], [176, "index-29"], [176, "index-3"], [176, "index-30"], [176, "index-31"], [176, "index-32"], [176, "index-33"], [176, "index-34"], [176, "index-35"], [176, "index-36"], [176, "index-37"], [176, "index-38"], [176, "index-39"], [176, "index-4"], [176, "index-40"], [176, "index-41"], [176, "index-42"], [176, "index-43"], [176, "index-44"], [176, "index-45"], [176, "index-46"], [176, "index-47"], [176, "index-48"], [176, "index-49"], [176, "index-5"], [176, "index-50"], [176, "index-51"], [176, "index-52"], [176, "index-53"], [176, "index-54"], [176, "index-55"], [176, "index-56"], [176, "index-57"], [176, "index-58"], [176, "index-59"], [176, "index-6"], [176, "index-60"], [176, "index-61"], [176, "index-62"], [176, "index-63"], [176, "index-64"], [176, "index-65"], [176, "index-66"], [176, "index-67"], [176, "index-68"], [176, "index-69"], [176, "index-7"], [176, "index-70"], [176, "index-71"], [176, "index-72"], [176, "index-73"], [176, "index-74"], [176, "index-75"], [176, "index-76"], [176, "index-77"], [176, "index-78"], [176, "index-79"], [176, "index-8"], [176, "index-80"], [176, "index-81"], [176, "index-82"], [176, "index-83"], [176, "index-84"], [176, "index-85"], [176, "index-86"], [176, "index-87"], [176, "index-88"], [176, "index-89"], [176, "index-9"], [176, "index-90"], [176, "index-91"], [176, "index-92"], [176, "index-93"], [176, "index-94"], [176, "index-95"], [176, "index-96"], [176, "index-97"], [176, "index-98"], [176, "index-99"], [177, "index-1"], [177, "index-2"], [177, "index-3"], [177, "index-4"], [177, "index-5"], [178, "index-1"], [178, "index-2"], [178, "index-3"], [178, "index-4"], [178, "index-5"], [179, "index-1"], [179, "index-2"], [179, "index-3"], [179, "index-4"], [180, "index-1"], [180, "index-2"], [180, "index-3"], [180, "index-4"], [180, "index-5"], [180, "index-6"], [180, "index-7"], [180, "index-8"], [180, "index-9"], [181, "index-1"], [181, "index-2"], [181, "index-3"], [181, "index-4"], [182, "index-1"], [182, "index-2"], [182, "index-3"], [183, "index-1"], [183, "index-10"], [183, "index-11"], [183, "index-12"], [183, "index-13"], [183, "index-14"], [183, "index-15"], [183, "index-16"], [183, "index-17"], [183, "index-18"], [183, "index-19"], [183, "index-2"], [183, "index-20"], [183, "index-21"], [183, "index-22"], [183, "index-23"], [183, "index-24"], [183, "index-25"], [183, "index-26"], [183, "index-27"], [183, "index-28"], [183, "index-29"], [183, "index-3"], [183, "index-30"], [183, "index-31"], [183, "index-32"], [183, "index-33"], [183, "index-34"], [183, "index-35"], [183, "index-36"], [183, "index-37"], [183, "index-38"], [183, "index-39"], [183, "index-4"], [183, "index-40"], [183, "index-41"], [183, "index-42"], [183, "index-43"], [183, "index-5"], [183, "index-6"], [183, "index-7"], [183, "index-8"], [183, "index-9"], [184, "index-1"], [184, "index-10"], [184, "index-11"], [184, "index-12"], [184, "index-13"], [184, "index-14"], [184, "index-15"], [184, "index-16"], [184, "index-17"], [184, "index-18"], [184, "index-19"], [184, "index-2"], [184, "index-20"], [184, "index-21"], [184, "index-22"], [184, "index-23"], [184, "index-24"], [184, "index-25"], [184, "index-26"], [184, "index-27"], [184, "index-28"], [184, "index-29"], [184, "index-3"], [184, "index-30"], [184, "index-31"], [184, "index-32"], [184, "index-33"], [184, "index-34"], [184, "index-35"], [184, "index-36"], [184, "index-37"], [184, "index-38"], [184, "index-39"], [184, "index-4"], [184, "index-40"], [184, "index-41"], [184, "index-42"], [184, "index-43"], [184, "index-5"], [184, "index-6"], [184, "index-7"], [184, "index-8"], [184, "index-9"], [187, "index-1"], [187, "index-2"], [188, "index-1"], [188, "index-2"], [189, "index-1"], [189, "index-10"], [189, "index-11"], [189, "index-2"], [189, "index-3"], [189, "index-4"], [189, "index-5"], [189, "index-6"], [189, "index-7"], [189, "index-8"], [189, "index-9"], [190, "index-1"], [190, "index-2"], [190, "index-3"], [191, "index-1"], [191, "index-10"], [191, "index-11"], [191, "index-12"], [191, "index-2"], [191, "index-3"], [191, "index-4"], [191, "index-5"], [191, "index-6"], [191, "index-7"], [191, "index-8"], [191, "index-9"], [192, "index-1"], [192, "index-2"], [192, "index-3"], [192, "index-4"], [192, "index-5"], [193, "index-1"], [193, "index-10"], [193, "index-11"], [193, "index-12"], [193, "index-13"], [193, "index-14"], [193, "index-15"], [193, "index-16"], [193, "index-17"], [193, "index-18"], [193, "index-19"], [193, "index-2"], [193, "index-20"], [193, "index-21"], [193, "index-22"], [193, "index-23"], [193, "index-24"], [193, "index-25"], [193, "index-26"], [193, "index-27"], [193, "index-28"], [193, "index-29"], [193, "index-3"], [193, "index-30"], [193, "index-31"], [193, "index-32"], [193, "index-33"], [193, "index-34"], [193, "index-35"], [193, "index-36"], [193, "index-37"], [193, "index-38"], [193, "index-39"], [193, "index-4"], [193, "index-40"], [193, "index-41"], [193, "index-42"], [193, "index-43"], [193, "index-44"], [193, "index-45"], [193, "index-46"], [193, "index-47"], [193, "index-48"], [193, "index-49"], [193, "index-5"], [193, "index-50"], [193, "index-51"], [193, "index-52"], [193, "index-53"], [193, "index-54"], [193, "index-55"], [193, "index-56"], [193, "index-57"], [193, "index-58"], [193, "index-59"], [193, "index-6"], [193, "index-60"], [193, "index-61"], [193, "index-62"], [193, "index-63"], [193, "index-64"], [193, "index-65"], [193, "index-66"], [193, "index-67"], [193, "index-68"], [193, "index-69"], [193, "index-7"], [193, "index-70"], [193, "index-71"], [193, "index-72"], [193, "index-73"], [193, "index-74"], [193, "index-75"], [193, "index-76"], [193, "index-77"], [193, "index-78"], [193, "index-79"], [193, "index-8"], [193, "index-80"], [193, "index-81"], [193, "index-82"], [193, "index-83"], [193, "index-84"], [193, "index-85"], [193, "index-86"], [193, "index-87"], [193, "index-88"], [193, "index-89"], [193, "index-9"], [193, "index-90"], [193, "index-91"], [193, "index-92"], [193, "index-93"], [193, "index-94"], [193, "index-95"], [194, "index-1"], [194, "index-2"], [194, "index-3"], [194, "index-4"], [195, "index-1"], [195, "index-2"], [195, "index-3"], [195, "index-4"], [195, "index-5"], [195, "index-6"], [196, "index-1"], [196, "index-2"], [196, "index-3"], [196, "index-4"], [196, "index-5"], [196, "index-6"], [197, "index-1"], [197, "index-2"], [198, "index-1"], [198, "index-2"], [199, "index-1"], [199, "index-2"], [199, "index-3"], [199, "index-4"], [200, "index-1"], [200, "index-10"], [200, "index-11"], [200, "index-12"], [200, "index-13"], [200, "index-14"], [200, "index-15"], [200, "index-16"], [200, "index-17"], [200, "index-18"], [200, "index-19"], [200, "index-2"], [200, "index-20"], [200, "index-21"], [200, "index-3"], [200, "index-4"], [200, "index-5"], [200, "index-6"], [200, "index-7"], [200, "index-8"], [200, "index-9"], [201, "index-1"], [201, "index-10"], [201, "index-11"], [201, "index-12"], [201, "index-13"], [201, "index-14"], [201, "index-15"], [201, "index-16"], [201, "index-17"], [201, "index-18"], [201, "index-19"], [201, "index-2"], [201, "index-20"], [201, "index-21"], [201, "index-22"], [201, "index-23"], [201, "index-3"], [201, "index-4"], [201, "index-5"], [201, "index-6"], [201, "index-7"], [201, "index-8"], [201, "index-9"], [202, "index-1"], [202, "index-2"], [203, "index-1"], [203, "index-2"], [204, "index-1"], [204, "index-2"], [204, "index-3"], [204, "index-4"], [204, "index-5"], [204, "index-6"], [204, "index-7"], [204, "index-8"], [205, "index-1"], [205, "index-2"], [205, "index-3"], [205, "index-4"], [205, "index-5"], [205, "index-6"], [205, "index-7"], [205, "index-8"], [206, "index-1"], [206, "index-10"], [206, "index-11"], [206, "index-12"], [206, "index-13"], [206, "index-14"], [206, "index-15"], [206, "index-16"], [206, "index-17"], [206, "index-18"], [206, "index-19"], [206, "index-2"], [206, "index-20"], [206, "index-21"], [206, "index-22"], [206, "index-23"], [206, "index-24"], [206, "index-25"], [206, "index-26"], [206, "index-27"], [206, "index-28"], [206, "index-29"], [206, "index-3"], [206, "index-30"], [206, "index-31"], [206, "index-32"], [206, "index-33"], [206, "index-34"], [206, "index-35"], [206, "index-36"], [206, "index-37"], [206, "index-38"], [206, "index-39"], [206, "index-4"], [206, "index-40"], [206, "index-41"], [206, "index-42"], [206, "index-43"], [206, "index-44"], [206, "index-45"], [206, "index-46"], [206, "index-47"], [206, "index-48"], [206, "index-49"], [206, "index-5"], [206, "index-50"], [206, "index-51"], [206, "index-52"], [206, "index-53"], [206, "index-54"], [206, "index-55"], [206, "index-6"], [206, "index-7"], [206, "index-8"], [206, "index-9"], [207, "index-1"], [207, "index-10"], [207, "index-11"], [207, "index-12"], [207, "index-13"], [207, "index-14"], [207, "index-15"], [207, "index-16"], [207, "index-17"], [207, "index-18"], [207, "index-19"], [207, "index-2"], [207, "index-20"], [207, "index-21"], [207, "index-22"], [207, "index-23"], [207, "index-24"], [207, "index-25"], [207, "index-26"], [207, "index-27"], [207, "index-28"], [207, "index-29"], [207, "index-3"], [207, "index-30"], [207, "index-31"], [207, "index-32"], [207, "index-33"], [207, "index-34"], [207, "index-35"], [207, "index-36"], [207, "index-37"], [207, "index-38"], [207, "index-39"], [207, "index-4"], [207, "index-40"], [207, "index-41"], [207, "index-42"], [207, "index-43"], [207, "index-44"], [207, "index-45"], [207, "index-46"], [207, "index-47"], [207, "index-48"], [207, "index-49"], [207, "index-5"], [207, "index-50"], [207, "index-51"], [207, "index-52"], [207, "index-53"], [207, "index-54"], [207, "index-55"], [207, "index-56"], [207, "index-57"], [207, "index-6"], [207, "index-7"], [207, "index-8"], [207, "index-9"], [208, "index-1"], [208, "index-2"], [208, "index-3"], [208, "index-4"], [208, "index-5"], [209, "index-1"], [209, "index-2"], [209, "index-3"], [209, "index-4"], [209, "index-5"], [210, "index-1"], [210, "index-2"], [211, "index-1"], [211, "index-2"], [212, "index-1"], [212, "index-2"], [213, "index-1"], [213, "index-2"], [214, "index-1"], [214, "index-2"], [215, "index-1"], [215, "index-2"], [216, "index-1"], [216, "index-2"], [216, "index-3"], [216, "index-4"], [217, "index-1"], [217, "index-2"], [217, "index-3"], [217, "index-4"], [217, "index-5"], [217, "index-6"], [217, "index-7"], [218, "index-1"], [218, "index-10"], [218, "index-11"], [218, "index-2"], [218, "index-3"], [218, "index-4"], [218, "index-5"], [218, "index-6"], [218, "index-7"], [218, "index-8"], [218, "index-9"], [219, "index-1"], [219, "index-2"], [219, "index-3"], [220, "index-1"], [220, "index-2"], [221, "index-1"], [221, "index-2"], [222, "index-1"], [222, "index-2"], [223, "index-1"], [223, "index-2"], [223, "index-3"], [223, "index-4"]], "f16": [[164, "index-6"], [177, "index-3"], [180, "index-1"], [191, "index-5"]], "f32": [[164, "index-5"], [180, "index-3"], [191, "index-7"]], "relaxed": [[164, "index-2"]], "s32": [[164, "index-4"], [180, "index-4"], [191, "index-8"]], "strict": [[164, "index-1"], [177, "index-1"]], "dnnl_accumulation_mode_any": [[165, "index-3"]], "dnnl_accumulation_mode_f16": [[165, "index-6"]], "dnnl_accumulation_mode_f32": [[165, "index-5"]], "dnnl_accumulation_mode_relaxed": [[165, "index-2"]], "dnnl_accumulation_mode_s32": [[165, "index-4"]], "dnnl_accumulation_mode_strict": [[165, "index-1"]], "dnnl_accumulation_mode_t": [[165, "index-0"]], "dnnl_alg_kind_t": [[166, "index-0"]], "dnnl_binary_add": [[166, "index-45"]], "dnnl_binary_div": [[166, "index-49"]], "dnnl_binary_eq": [[166, "index-55"]], "dnnl_binary_ge": [[166, "index-51"]], "dnnl_binary_gt": [[166, "index-52"]], "dnnl_binary_le": [[166, "index-53"]], "dnnl_binary_lt": [[166, "index-54"]], "dnnl_binary_max": [[166, "index-47"]], "dnnl_binary_min": [[166, "index-48"]], "dnnl_binary_mul": [[166, "index-46"]], "dnnl_binary_ne": [[166, "index-56"]], "dnnl_binary_sub": [[166, "index-50"]], "dnnl_convolution_auto": [[166, "index-3"]], "dnnl_convolution_direct": [[166, "index-1"]], "dnnl_convolution_winograd": [[166, "index-2"]], "dnnl_deconvolution_direct": [[166, "index-4"]], "dnnl_deconvolution_winograd": [[166, "index-5"]], "dnnl_eltwise_abs": [[166, "index-10"]], "dnnl_eltwise_clip": [[166, "index-20"]], "dnnl_eltwise_clip_v2": [[166, "index-21"]], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [[166, "index-33"]], "dnnl_eltwise_elu": [[166, "index-8"]], "dnnl_eltwise_elu_use_dst_for_bwd": [[166, "index-29"]], "dnnl_eltwise_exp": [[166, "index-16"]], "dnnl_eltwise_exp_use_dst_for_bwd": [[166, "index-32"]], "dnnl_eltwise_gelu_erf": [[166, "index-23"]], "dnnl_eltwise_gelu_tanh": [[166, "index-17"]], "dnnl_eltwise_hardsigmoid": [[166, "index-14"]], "dnnl_eltwise_hardswish": [[166, "index-26"]], "dnnl_eltwise_linear": [[166, "index-12"]], "dnnl_eltwise_log": [[166, "index-19"]], "dnnl_eltwise_logistic": [[166, "index-15"]], "dnnl_eltwise_logistic_use_dst_for_bwd": [[166, "index-31"]], "dnnl_eltwise_mish": [[166, "index-25"]], "dnnl_eltwise_pow": [[166, "index-22"]], "dnnl_eltwise_relu": [[166, "index-6"]], "dnnl_eltwise_relu_use_dst_for_bwd": [[166, "index-27"]], "dnnl_eltwise_round": [[166, "index-24"]], "dnnl_eltwise_soft_relu": [[166, "index-13"]], "dnnl_eltwise_sqrt": [[166, "index-11"]], "dnnl_eltwise_sqrt_use_dst_for_bwd": [[166, "index-30"]], "dnnl_eltwise_square": [[166, "index-9"]], "dnnl_eltwise_swish": [[166, "index-18"]], "dnnl_eltwise_tanh": [[166, "index-7"]], "dnnl_eltwise_tanh_use_dst_for_bwd": [[166, "index-28"]], "dnnl_lbr_augru": [[166, "index-44"]], "dnnl_lbr_gru": [[166, "index-42"]], "dnnl_lrn_across_channels": [[166, "index-37"]], "dnnl_lrn_within_channel": [[166, "index-38"]], "dnnl_pooling_avg_exclude_padding": [[166, "index-36"]], "dnnl_pooling_avg_include_padding": [[166, "index-35"]], "dnnl_pooling_max": [[166, "index-34"]], "dnnl_reduction_max": [[166, "index-59"]], "dnnl_reduction_mean": [[166, "index-63"]], "dnnl_reduction_min": [[166, "index-60"]], "dnnl_reduction_mul": [[166, "index-62"]], "dnnl_reduction_norm_lp_max": [[166, "index-64"]], "dnnl_reduction_norm_lp_power_p_max": [[166, "index-66"]], "dnnl_reduction_norm_lp_power_p_sum": [[166, "index-67"]], "dnnl_reduction_norm_lp_sum": [[166, "index-65"]], "dnnl_reduction_sum": [[166, "index-61"]], "dnnl_resampling_linear": [[166, "index-58"]], "dnnl_resampling_nearest": [[166, "index-57"]], "dnnl_softmax_accurate": [[166, "index-68"]], "dnnl_softmax_log": [[166, "index-69"]], "dnnl_vanilla_augru": [[166, "index-43"]], "dnnl_vanilla_gru": [[166, "index-41"]], "dnnl_vanilla_lstm": [[166, "index-40"]], "dnnl_vanilla_rnn": [[166, "index-39"]], "algorithm": [[167, "index-0"]], "binary_add": [[167, "index-46"]], "binary_div": [[167, "index-50"]], "binary_eq": [[167, "index-56"]], "binary_ge": [[167, "index-52"]], "binary_gt": [[167, "index-53"]], "binary_le": [[167, "index-54"]], "binary_lt": [[167, "index-55"]], "binary_max": [[167, "index-48"]], "binary_min": [[167, "index-49"]], "binary_mul": [[167, "index-47"]], "binary_ne": [[167, "index-57"]], "binary_sub": [[167, "index-51"]], "convolution_auto": [[167, "index-2"]], "convolution_direct": [[167, "index-3"]], "convolution_winograd": [[167, "index-4"]], "deconvolution_direct": [[167, "index-5"]], "deconvolution_winograd": [[167, "index-6"]], "eltwise_abs": [[167, "index-11"]], "eltwise_clip": [[167, "index-22"]], "eltwise_clip_v2": [[167, "index-23"]], "eltwise_clip_v2_use_dst_for_bwd": [[167, "index-34"]], "eltwise_elu": [[167, "index-9"]], "eltwise_elu_use_dst_for_bwd": [[167, "index-30"]], "eltwise_exp": [[167, "index-18"]], "eltwise_exp_use_dst_for_bwd": [[167, "index-33"]], "eltwise_gelu_erf": [[167, "index-20"]], "eltwise_gelu_tanh": [[167, "index-19"]], "eltwise_hardsigmoid": [[167, "index-27"]], "eltwise_hardswish": [[167, "index-26"]], "eltwise_linear": [[167, "index-14"]], "eltwise_log": [[167, "index-21"]], "eltwise_logistic": [[167, "index-17"]], "eltwise_logistic_use_dst_for_bwd": [[167, "index-32"]], "eltwise_mish": [[167, "index-16"]], "eltwise_pow": [[167, "index-24"]], "eltwise_relu": [[167, "index-7"]], "eltwise_relu_use_dst_for_bwd": [[167, "index-28"]], "eltwise_round": [[167, "index-25"]], "eltwise_soft_relu": [[167, "index-15"]], "eltwise_sqrt": [[167, "index-12"]], "eltwise_sqrt_use_dst_for_bwd": [[167, "index-31"]], "eltwise_square": [[167, "index-10"]], "eltwise_swish": [[167, "index-13"]], "eltwise_tanh": [[167, "index-8"]], "eltwise_tanh_use_dst_for_bwd": [[167, "index-29"]], "lbr_augru": [[167, "index-45"]], "lbr_gru": [[167, "index-43"]], "lrn_across_channels": [[167, "index-35"]], "lrn_within_channel": [[167, "index-36"]], "pooling_avg_exclude_padding": [[167, "index-39"]], "pooling_avg_include_padding": [[167, "index-38"]], "pooling_max": [[167, "index-37"]], "reduction_max": [[167, "index-60"]], "reduction_mean": [[167, "index-64"]], "reduction_min": [[167, "index-61"]], "reduction_mul": [[167, "index-63"]], "reduction_norm_lp_max": [[167, "index-65"]], "reduction_norm_lp_power_p_max": [[167, "index-67"]], "reduction_norm_lp_power_p_sum": [[167, "index-68"]], "reduction_norm_lp_sum": [[167, "index-66"]], "reduction_sum": [[167, "index-62"]], "resampling_linear": [[167, "index-59"]], "resampling_nearest": [[167, "index-58"]], "softmax_accurate": [[167, "index-69"]], "softmax_log": [[167, "index-70"]], "undef": [[167, "index-1"], [181, "index-1"], [182, "index-1"], [183, "index-1"], [191, "index-1"], [192, "index-1"], [193, "index-1"], [194, "index-1"], [200, "index-1"], [202, "index-1"], [204, "index-1"], [206, "index-1"], [208, "index-1"], [210, "index-1"], [223, "index-1"]], "vanilla_augru": [[167, "index-44"]], "vanilla_gru": [[167, "index-42"]], "vanilla_lstm": [[167, "index-41"]], "vanilla_rnn": [[167, "index-40"]], "avx": [[168, "index-3"]], "avx10_1_512": [[168, "index-10"]], "avx10_1_512_amx": [[168, "index-12"]], "avx10_1_512_amx_fp16": [[168, "index-14"]], "avx2": [[168, "index-4"]], "avx2_vnni": [[168, "index-5"]], "avx2_vnni_2": [[168, "index-6"]], "avx512_core": [[168, "index-7"]], "avx512_core_amx": [[168, "index-13"]], "avx512_core_amx_fp16": [[168, "index-15"]], "avx512_core_bf16": [[168, "index-9"]], "avx512_core_fp16": [[168, "index-11"]], "avx512_core_vnni": [[168, "index-8"]], "cpu_isa": [[168, "index-0"]], "isa_default": [[168, "index-1"]], "sse41": [[168, "index-2"]], "cpu_isa_hints": [[169, "index-0"]], "no_hints": [[169, "index-1"]], "prefer_ymm": [[169, "index-2"]], "dnnl_cpu_isa_hints_t": [[170, "index-0"]], "dnnl_cpu_isa_no_hints": [[170, "index-1"]], "dnnl_cpu_isa_prefer_ymm": [[170, "index-2"]], "dnnl_cpu_isa_avx": [[171, "index-3"]], "dnnl_cpu_isa_avx10_1_512": [[171, "index-10"]], "dnnl_cpu_isa_avx10_1_512_amx": [[171, "index-12"]], "dnnl_cpu_isa_avx10_1_512_amx_fp16": [[171, "index-14"]], "dnnl_cpu_isa_avx2": [[171, "index-4"]], "dnnl_cpu_isa_avx2_vnni": [[171, "index-5"]], "dnnl_cpu_isa_avx2_vnni_2": [[171, "index-6"]], "dnnl_cpu_isa_avx512_core": [[171, "index-7"]], "dnnl_cpu_isa_avx512_core_amx": [[171, "index-13"]], "dnnl_cpu_isa_avx512_core_amx_fp16": [[171, "index-15"]], "dnnl_cpu_isa_avx512_core_bf16": [[171, "index-9"]], "dnnl_cpu_isa_avx512_core_fp16": [[171, "index-11"]], "dnnl_cpu_isa_avx512_core_vnni": [[171, "index-8"]], "dnnl_cpu_isa_default": [[171, "index-1"]], "dnnl_cpu_isa_sse41": [[171, "index-2"]], "dnnl_cpu_isa_t": [[171, "index-0"]], "dnnl_bf16": [[172, "index-3"]], "dnnl_boolean": [[172, "index-9"]], "dnnl_data_type_max": [[172, "index-15"]], "dnnl_data_type_t": [[172, "index-0"]], "dnnl_data_type_undef": [[172, "index-1"]], "dnnl_e8m0": [[172, "index-14"]], "dnnl_f16": [[172, "index-2"]], "dnnl_f32": [[172, "index-4"]], "dnnl_f64": [[172, "index-8"]], "dnnl_f8_e4m3": [[172, "index-11"]], "dnnl_f8_e5m2": [[172, "index-10"]], "dnnl_s32": [[172, "index-5"]], "dnnl_s4": [[172, "index-12"]], "dnnl_s8": [[172, "index-6"]], "dnnl_u4": [[172, "index-13"]], "dnnl_u8": [[172, "index-7"]], "cpu": [[173, "index-2"]], "gpu": [[173, "index-3"]], "kind": [[173, "index-0"], [185, "index-0"], [200, "index-0"], [524, "index-4"]], "dnnl_any_engine": [[174, "index-1"]], "dnnl_cpu": [[174, "index-2"]], "dnnl_engine_kind_t": [[174, "index-0"]], "dnnl_gpu": [[174, "index-3"]], "dnnl_blocked": [[175, "index-3"]], "dnnl_format_kind_any": [[175, "index-2"]], "dnnl_format_kind_max": [[175, "index-6"]], "dnnl_format_kind_opaque": [[175, "index-4"]], "dnnl_format_kind_sparse": [[175, "index-5"]], "dnnl_format_kind_t": [[175, "index-0"]], "dnnl_format_kind_undef": [[175, "index-1"]], "dnnl_abcd8b8a": [[176, "index-61"]], "dnnl_abcde2b8a4b": [[176, "index-64"]], "dnnl_abcde4b16a4b": [[176, "index-63"]], "dnnl_a": [[176, "index-3"]], "dnnl_abcd2b4c2b": [[176, "index-62"]], "dnnl_abcde2b4c2b": [[176, "index-69"]], "dnnl_abcdef2b4c2b": [[176, "index-72"]], "dnnl_abcdef2c8b4c": [[176, "index-71"]], "dnnl_abc16b": [[176, "index-53"]], "dnnl_abc32b": [[176, "index-54"]], "dnnl_abc4b": [[176, "index-55"]], "dnnl_abc8b": [[176, "index-56"]], "dnnl_abcd16b": [[176, "index-57"]], "dnnl_abcd32b": [[176, "index-58"]], "dnnl_abcd4b": [[176, "index-59"]], "dnnl_abcd8b": [[176, "index-60"]], "dnnl_abcde16b": [[176, "index-65"]], "dnnl_abcde32b": [[176, "index-66"]], "dnnl_abcde4b": [[176, "index-67"]], "dnnl_abcde8b": [[176, "index-68"]], "dnnl_abcdef16b": [[176, "index-70"]], "dnnl_abcdef4b": [[176, "index-73"]], "dnnl_ab": [[176, "index-4"]], "dnnl_abc": [[176, "index-5"]], "dnnl_abcd": [[176, "index-6"]], "dnnl_abcde": [[176, "index-7"]], "dnnl_abcdef": [[176, "index-8"]], "dnnl_abcdefg": [[176, "index-9"]], "dnnl_abcdefgh": [[176, "index-10"]], "dnnl_abcdefghi": [[176, "index-11"]], "dnnl_abcdefghij": [[176, "index-12"]], "dnnl_abcdefghijk": [[176, "index-13"]], "dnnl_abcdefghijkl": [[176, "index-14"]], "dnnl_abcdefghijlk": [[176, "index-52"]], "dnnl_abcdefghikj": [[176, "index-51"]], "dnnl_abcdefghji": [[176, "index-50"]], "dnnl_abcdefgih": [[176, "index-49"]], "dnnl_abcdefhg": [[176, "index-48"]], "dnnl_abcdegf": [[176, "index-47"]], "dnnl_abcdfe": [[176, "index-41"]], "dnnl_abced": [[176, "index-31"]], "dnnl_abdc": [[176, "index-21"]], "dnnl_abdec": [[176, "index-32"]], "dnnl_abdefc": [[176, "index-42"]], "dnnl_abdfce": [[176, "index-43"]], "dnnl_acb": [[176, "index-16"]], "dnnl_acbd": [[176, "index-22"]], "dnnl_acbde": [[176, "index-33"]], "dnnl_acbdef": [[176, "index-44"]], "dnnl_acdb": [[176, "index-23"]], "dnnl_acdeb": [[176, "index-34"]], "dnnl_adbc": [[176, "index-24"]], "dnnl_adcb": [[176, "index-25"]], "dnnl_adecb": [[176, "index-35"]], "dnnl_adefcb": [[176, "index-45"]], "dnnl_ba": [[176, "index-15"]], "dnnl_bac": [[176, "index-17"]], "dnnl_bacd": [[176, "index-26"]], "dnnl_bacde": [[176, "index-36"]], "dnnl_bca": [[176, "index-18"]], "dnnl_bcda": [[176, "index-27"]], "dnnl_bcdea": [[176, "index-37"]], "dnnl_cab": [[176, "index-19"]], "dnnl_cba": [[176, "index-20"]], "dnnl_cdab": [[176, "index-28"]], "dnnl_cdba": [[176, "index-29"]], "dnnl_cdeab": [[176, "index-38"]], "dnnl_cdeba": [[176, "index-39"]], "dnnl_chwn": [[176, "index-84"]], "dnnl_cn": [[176, "index-77"]], "dnnl_dcab": [[176, "index-30"]], "dnnl_decab": [[176, "index-40"]], "dnnl_defcab": [[176, "index-46"]], "dnnl_dhwigo": [[176, "index-116"]], "dnnl_dhwio": [[176, "index-102"]], "dnnl_dhwoi": [[176, "index-103"]], "dnnl_format_tag_any": [[176, "index-2"]], "dnnl_format_tag_last": [[176, "index-74"]], "dnnl_format_tag_t": [[176, "index-0"]], "dnnl_format_tag_undef": [[176, "index-1"]], "dnnl_giodhw": [[176, "index-115"]], "dnnl_giohw": [[176, "index-112"]], "dnnl_godhwi": [[176, "index-114"]], "dnnl_gohwi": [[176, "index-110"]], "dnnl_goidhw": [[176, "index-113"]], "dnnl_goihw": [[176, "index-109"]], "dnnl_goiw": [[176, "index-106"]], "dnnl_gowi": [[176, "index-107"]], "dnnl_hwigo": [[176, "index-111"]], "dnnl_hwio": [[176, "index-95"]], "dnnl_hwoi": [[176, "index-96"]], "dnnl_idhwo": [[176, "index-105"]], "dnnl_ihwo": [[176, "index-98"]], "dnnl_io": [[176, "index-88"]], "dnnl_iodhw": [[176, "index-101"]], "dnnl_iohw": [[176, "index-99"]], "dnnl_iwo": [[176, "index-93"]], "dnnl_ldoi16o": [[176, "index-125"]], "dnnl_ldgoi16o": [[176, "index-126"]], "dnnl_ldgo": [[176, "index-124"]], "dnnl_ldgoi": [[176, "index-121"]], "dnnl_ldigo": [[176, "index-120"]], "dnnl_ldio": [[176, "index-122"]], "dnnl_ldnc": [[176, "index-119"]], "dnnl_ldoi": [[176, "index-123"]], "dnnl_ncdhw16c": [[176, "index-128"]], "dnnl_ncdhw32c": [[176, "index-127"]], "dnnl_ncdhw4c": [[176, "index-129"]], "dnnl_ncdhw8c": [[176, "index-130"]], "dnnl_nchw16c": [[176, "index-132"]], "dnnl_nchw32c": [[176, "index-131"]], "dnnl_nchw4c": [[176, "index-133"]], "dnnl_nchw8c": [[176, "index-134"]], "dnnl_ncw16c": [[176, "index-136"]], "dnnl_ncw32c": [[176, "index-135"]], "dnnl_ncw4c": [[176, "index-137"]], "dnnl_ncw8c": [[176, "index-138"]], "dnnl_nc": [[176, "index-76"]], "dnnl_ncdhw": [[176, "index-85"]], "dnnl_nchw": [[176, "index-82"]], "dnnl_ncw": [[176, "index-80"]], "dnnl_ndhwc": [[176, "index-86"]], "dnnl_nhwc": [[176, "index-83"]], "dnnl_nt": [[176, "index-79"]], "dnnl_ntc": [[176, "index-118"]], "dnnl_nwc": [[176, "index-81"]], "dnnl_odhwi": [[176, "index-104"]], "dnnl_ohwi": [[176, "index-97"]], "dnnl_oi": [[176, "index-87"]], "dnnl_oidhw": [[176, "index-100"]], "dnnl_oihw": [[176, "index-94"]], "dnnl_oiw": [[176, "index-89"]], "dnnl_owi": [[176, "index-90"]], "dnnl_tn": [[176, "index-78"]], "dnnl_tnc": [[176, "index-117"]], "dnnl_wigo": [[176, "index-108"]], "dnnl_wio": [[176, "index-91"]], "dnnl_woi": [[176, "index-92"]], "dnnl_x": [[176, "index-75"]], "bf16": [[177, "index-2"], [180, "index-2"], [191, "index-6"]], "fpmath_mode": [[177, "index-0"]], "tf32": [[177, "index-4"]], "dnnl_fpmath_mode_any": [[178, "index-4"]], "dnnl_fpmath_mode_bf16": [[178, "index-2"]], "dnnl_fpmath_mode_f16": [[178, "index-3"]], "dnnl_fpmath_mode_strict": [[178, "index-1"]], "dnnl_fpmath_mode_t": [[178, "index-0"]], "dnnl_fpmath_mode_tf32": [[178, "index-5"]], "dnnl_graph_layout_type_any": [[179, "index-2"]], "dnnl_graph_layout_type_opaque": [[179, "index-4"]], "dnnl_graph_layout_type_strided": [[179, "index-3"]], "dnnl_graph_layout_type_t": [[179, "index-0"]], "dnnl_graph_layout_type_undef": [[179, "index-1"]], "boolean": [[180, "index-7"]], "data_type": [[180, "index-0"], [191, "index-0"], [206, "index-45"], [476, "index-4"]], "f8_e4m3": [[180, "index-9"], [191, "index-4"]], "f8_e5m2": [[180, "index-8"], [191, "index-3"]], "s8": [[180, "index-5"], [191, "index-9"]], "u8": [[180, "index-6"], [191, "index-10"]], "layout_type": [[181, "index-0"], [476, "index-6"]], "opaque": [[181, "index-4"], [192, "index-5"]], "strided": [[181, "index-3"]], "constant": [[182, "index-3"]], "property_type": [[182, "index-0"]], "variable": [[182, "index-2"], [474, "index-1"], [474, "index-2"], [475, "index-1"], [475, "index-2"], [476, "index-1"], [476, "index-2"], [476, "index-3"], [476, "index-4"], [476, "index-5"], [476, "index-6"], [476, "index-7"], [476, "index-8"], [557, "index-1"], [567, "index-1"], [567, "index-2"], [567, "index-3"], [567, "index-4"], [567, "index-5"], [567, "index-6"]], "alpha": [[183, "index-2"]], "attr": [[183, "index-0"]], "auto_broadcast": [[183, "index-35"]], "auto_pad": [[183, "index-36"]], "axes": [[183, "index-12"]], "axis": [[183, "index-9"]], "begin_norm_axis": [[183, "index-10"]], "beta": [[183, "index-3"]], "coordinate_transformation_mode": [[183, "index-37"]], "data_format": [[183, "index-38"]], "dilations": [[183, "index-13"], [206, "index-16"]], "dst_shape": [[183, "index-14"]], "epsilon": [[183, "index-4"]], "exclude_pad": [[183, "index-26"]], "groups": [[183, "index-11"]], "keep_dims": [[183, "index-27"]], "keep_stats": [[183, "index-28"]], "kernel": [[183, "index-15"], [206, "index-32"]], "max": [[183, "index-5"]], "min": [[183, "index-6"]], "mode": [[183, "index-39"]], "momentum": [[183, "index-7"]], "order": [[183, "index-16"]], "output_padding": [[183, "index-17"]], "pads_begin": [[183, "index-18"]], "pads_end": [[183, "index-19"]], "per_channel_broadcast": [[183, "index-29"]], "qtype": [[183, "index-40"]], "rounding_type": [[183, "index-41"]], "scales": [[183, "index-8"]], "shape": [[183, "index-20"]], "sizes": [[183, "index-21"]], "special_zero": [[183, "index-30"]], "src_shape": [[183, "index-22"]], "strides": [[183, "index-23"], [206, "index-15"], [476, "index-7"]], "transpose_a": [[183, "index-31"]], "transpose_b": [[183, "index-32"]], "use_affine": [[183, "index-33"]], "use_dst": [[183, "index-34"]], "weights_format": [[183, "index-42"]], "weights_shape": [[183, "index-24"]], "zps": [[183, "index-25"]], "dnnl_graph_op_attr_alpha": [[184, "index-2"]], "dnnl_graph_op_attr_auto_broadcast": [[184, "index-35"]], "dnnl_graph_op_attr_auto_pad": [[184, "index-36"]], "dnnl_graph_op_attr_axes": [[184, "index-12"]], "dnnl_graph_op_attr_axis": [[184, "index-9"]], "dnnl_graph_op_attr_begin_norm_axis": [[184, "index-10"]], "dnnl_graph_op_attr_beta": [[184, "index-3"]], "dnnl_graph_op_attr_coordinate_transformation_mode": [[184, "index-37"]], "dnnl_graph_op_attr_data_format": [[184, "index-38"]], "dnnl_graph_op_attr_dilations": [[184, "index-13"]], "dnnl_graph_op_attr_dst_shape": [[184, "index-14"]], "dnnl_graph_op_attr_end": [[184, "index-43"]], "dnnl_graph_op_attr_epsilon": [[184, "index-4"]], "dnnl_graph_op_attr_exclude_pad": [[184, "index-26"]], "dnnl_graph_op_attr_groups": [[184, "index-11"]], "dnnl_graph_op_attr_keep_dims": [[184, "index-27"]], "dnnl_graph_op_attr_keep_stats": [[184, "index-28"]], "dnnl_graph_op_attr_kernel": [[184, "index-15"]], "dnnl_graph_op_attr_max": [[184, "index-5"]], "dnnl_graph_op_attr_min": [[184, "index-6"]], "dnnl_graph_op_attr_mode": [[184, "index-39"]], "dnnl_graph_op_attr_momentum": [[184, "index-7"]], "dnnl_graph_op_attr_order": [[184, "index-16"]], "dnnl_graph_op_attr_output_padding": [[184, "index-17"]], "dnnl_graph_op_attr_pads_begin": [[184, "index-18"]], "dnnl_graph_op_attr_pads_end": [[184, "index-19"]], "dnnl_graph_op_attr_per_channel_broadcast": [[184, "index-29"]], "dnnl_graph_op_attr_qtype": [[184, "index-40"]], "dnnl_graph_op_attr_rounding_type": [[184, "index-41"]], "dnnl_graph_op_attr_scales": [[184, "index-8"]], "dnnl_graph_op_attr_shape": [[184, "index-20"]], "dnnl_graph_op_attr_sizes": [[184, "index-21"]], "dnnl_graph_op_attr_special_zero": [[184, "index-30"]], "dnnl_graph_op_attr_src_shape": [[184, "index-22"]], "dnnl_graph_op_attr_strides": [[184, "index-23"]], "dnnl_graph_op_attr_t": [[184, "index-0"]], "dnnl_graph_op_attr_transpose_a": [[184, "index-31"]], "dnnl_graph_op_attr_transpose_b": [[184, "index-32"]], "dnnl_graph_op_attr_undef": [[184, "index-1"]], "dnnl_graph_op_attr_use_affine": [[184, "index-33"]], "dnnl_graph_op_attr_use_dst": [[184, "index-34"]], "dnnl_graph_op_attr_weights_format": [[184, "index-42"]], "dnnl_graph_op_attr_weights_shape": [[184, "index-24"]], "dnnl_graph_op_attr_zps": [[184, "index-25"]], "dnnl_graph_op_kind_t": [[186, "index-0"]], "debug": [[187, "index-2"]], "fusion": [[187, "index-1"]], "policy": [[187, "index-0"]], "dnnl_graph_partition_policy_debug": [[188, "index-2"]], "dnnl_graph_partition_policy_fusion": [[188, "index-1"]], "dnnl_graph_partition_policy_t": [[188, "index-0"]], "invalid_arguments": [[189, "index-3"], [217, "index-3"]], "invalid_data_type": [[189, "index-11"]], "invalid_graph": [[189, "index-8"]], "invalid_graph_op": [[189, "index-9"]], "invalid_shape": [[189, "index-10"]], "last_impl_reached": [[189, "index-5"], [217, "index-5"]], "not_required": [[189, "index-7"], [217, "index-7"]], "out_of_memory": [[189, "index-2"], [217, "index-2"]], "runtime_error": [[189, "index-6"], [217, "index-6"]], "status": [[189, "index-0"], [217, "index-0"], [336, "index-0"]], "success": [[189, "index-1"], [217, "index-1"]], "unimplemented": [[189, "index-4"], [217, "index-4"]], "dnnl_graph_tensor_property_constant": [[190, "index-3"]], "dnnl_graph_tensor_property_t": [[190, "index-0"]], "dnnl_graph_tensor_property_undef": [[190, "index-1"]], "dnnl_graph_tensor_property_variable": [[190, "index-2"]], "e8m0": [[191, "index-2"]], "s4": [[191, "index-11"]], "u4": [[191, "index-12"]], "blocked": [[192, "index-3"]], "format_kind": [[192, "index-0"], [206, "index-49"]], "sparse": [[192, "index-4"]], "abcd8b8a": [[193, "index-95"]], "a": [[193, "index-3"]], "abcd8b": [[193, "index-94"]], "ab": [[193, "index-4"]], "abc": [[193, "index-6"]], "abcd": [[193, "index-11"]], "abcde": [[193, "index-20"]], "abcdef": [[193, "index-29"]], "abcdefg": [[193, "index-35"]], "abcdefgh": [[193, "index-37"]], "abcdefghi": [[193, "index-39"]], "abcdefghij": [[193, "index-41"]], "abcdefghijk": [[193, "index-43"]], "abcdefghijkl": [[193, "index-45"]], "abcdefghijlk": [[193, "index-46"]], "abcdefghikj": [[193, "index-44"]], "abcdefghji": [[193, "index-42"]], "abcdefgih": [[193, "index-40"]], "abcdefhg": [[193, "index-38"]], "abcdegf": [[193, "index-36"]], "abcdfe": [[193, "index-34"]], "abced": [[193, "index-28"]], "abdc": [[193, "index-12"]], "abdec": [[193, "index-21"]], "abdefc": [[193, "index-32"]], "abdfce": [[193, "index-30"]], "acb": [[193, "index-7"]], "acbd": [[193, "index-13"]], "acbde": [[193, "index-22"]], "acbdef": [[193, "index-31"]], "acdb": [[193, "index-14"]], "acdeb": [[193, "index-23"]], "adbc": [[193, "index-15"]], "ba": [[193, "index-5"]], "bac": [[193, "index-8"]], "bacd": [[193, "index-16"]], "bacde": [[193, "index-24"]], "bca": [[193, "index-9"]], "bcda": [[193, "index-17"]], "bcdea": [[193, "index-25"]], "cba": [[193, "index-10"]], "cdba": [[193, "index-18"]], "cdeba": [[193, "index-26"]], "chwn": [[193, "index-56"]], "cn": [[193, "index-49"]], "dcab": [[193, "index-19"]], "decab": [[193, "index-27"]], "defcab": [[193, "index-33"]], "dhwigo": [[193, "index-85"]], "dhwio": [[193, "index-71"]], "format_tag": [[193, "index-0"]], "giodhw": [[193, "index-83"]], "giohw": [[193, "index-81"]], "godhwi": [[193, "index-84"]], "gohwi": [[193, "index-78"]], "goidhw": [[193, "index-82"]], "goihw": [[193, "index-79"]], "goiw": [[193, "index-75"]], "gowi": [[193, "index-76"]], "hwigo": [[193, "index-80"]], "hwio": [[193, "index-66"]], "idhwo": [[193, "index-74"]], "ihwo": [[193, "index-68"]], "io": [[193, "index-60"]], "iodhw": [[193, "index-73"]], "iohw": [[193, "index-69"]], "iwo": [[193, "index-64"]], "ldgo": [[193, "index-93"]], "ldgoi": [[193, "index-90"]], "ldigo": [[193, "index-89"]], "ldio": [[193, "index-91"]], "ldnc": [[193, "index-88"]], "ldoi": [[193, "index-92"]], "nc": [[193, "index-48"]], "ncdhw": [[193, "index-57"]], "nchw": [[193, "index-54"]], "ncw": [[193, "index-52"]], "ndhwc": [[193, "index-58"]], "nhwc": [[193, "index-55"]], "nt": [[193, "index-51"]], "ntc": [[193, "index-87"]], "nwc": [[193, "index-53"]], "odhwi": [[193, "index-72"]], "ohwi": [[193, "index-67"]], "oi": [[193, "index-59"]], "oidhw": [[193, "index-70"]], "oihw": [[193, "index-65"]], "oiw": [[193, "index-61"]], "owi": [[193, "index-62"]], "tn": [[193, "index-50"]], "tnc": [[193, "index-86"]], "wigo": [[193, "index-77"]], "wio": [[193, "index-63"]], "x": [[193, "index-47"]], "coo": [[194, "index-4"], [518, "index-29"]], "csr": [[194, "index-2"], [518, "index-28"]], "packed": [[194, "index-3"], [518, "index-30"]], "sparse_encoding": [[194, "index-0"], [206, "index-53"]], "fuse_norm_add_relu": [[195, "index-6"]], "fuse_norm_relu": [[195, "index-5"]], "none": [[195, "index-1"]], "normalization_flags": [[195, "index-0"]], "use_global_stats": [[195, "index-2"]], "use_scale": [[195, "index-3"]], "use_shift": [[195, "index-4"]], "dnnl_fuse_norm_add_relu": [[196, "index-6"]], "dnnl_fuse_norm_relu": [[196, "index-5"]], "dnnl_normalization_flags_none": [[196, "index-1"]], "dnnl_normalization_flags_t": [[196, "index-0"]], "dnnl_use_global_stats": [[196, "index-2"]], "dnnl_use_scale": [[196, "index-3"]], "dnnl_use_shift": [[196, "index-4"]], "buffer": [[197, "index-2"], [221, "index-2"]], "memory_kind": [[197, "index-0"], [221, "index-0"]], "usm": [[197, "index-1"], [221, "index-1"]], "dnnl_ocl_interop_buffer": [[198, "index-2"]], "dnnl_ocl_interop_memory_kind_t": [[198, "index-0"]], "dnnl_ocl_interop_usm": [[198, "index-1"]], "dnnl_pack_type_no_trans": [[199, "index-2"]], "dnnl_pack_type_pack32": [[199, "index-4"]], "dnnl_pack_type_t": [[199, "index-0"]], "dnnl_pack_type_trans": [[199, "index-3"]], "dnnl_pack_type_undef": [[199, "index-1"]], "batch_normalization": [[200, "index-10"]], "deconvolution": [[200, "index-7"], [292, "index-0"]], "group_normalization": [[200, "index-21"]], "inner_product": [[200, "index-11"]], "layer_normalization": [[200, "index-20"]], "lrn": [[200, "index-9"], [300, "index-0"]], "dnnl_batch_normalization": [[201, "index-10"]], "dnnl_binary": [[201, "index-14"]], "dnnl_concat": [[201, "index-4"]], "dnnl_convolution": [[201, "index-6"]], "dnnl_deconvolution": [[201, "index-7"]], "dnnl_eltwise": [[201, "index-8"]], "dnnl_gemm": [[201, "index-13"]], "dnnl_group_normalization": [[201, "index-22"]], "dnnl_inner_product": [[201, "index-11"]], "dnnl_layer_normalization": [[201, "index-21"]], "dnnl_lrn": [[201, "index-9"]], "dnnl_matmul": [[201, "index-15"]], "dnnl_pooling": [[201, "index-17"]], "dnnl_prelu": [[201, "index-19"]], "dnnl_primitive_kind_max": [[201, "index-23"]], "dnnl_primitive_kind_t": [[201, "index-0"]], "dnnl_reduction": [[201, "index-18"]], "dnnl_reorder": [[201, "index-2"]], "dnnl_resampling": [[201, "index-16"]], "dnnl_rnn": [[201, "index-12"]], "dnnl_shuffle": [[201, "index-3"]], "dnnl_softmax": [[201, "index-20"]], "dnnl_sum": [[201, "index-5"]], "dnnl_undefined_primitive": [[201, "index-1"]], "profiling_data_kind": [[202, "index-0"]], "time": [[202, "index-2"]], "dnnl_profiling_data_kind_t": [[203, "index-0"]], "dnnl_profiling_data_kind_time": [[203, "index-2"]], "dnnl_profiling_data_kind_undef": [[203, "index-1"]], "backward": [[204, "index-5"]], "backward_bias": [[204, "index-8"]], "backward_data": [[204, "index-6"]], "backward_weights": [[204, "index-7"]], "forward": [[204, "index-4"]], "forward_inference": [[204, "index-3"]], "forward_training": [[204, "index-2"]], "prop_kind": [[204, "index-0"], [206, "index-12"]], "dnnl_backward": [[205, "index-5"]], "dnnl_backward_bias": [[205, "index-8"]], "dnnl_backward_data": [[205, "index-6"]], "dnnl_backward_weights": [[205, "index-7"]], "dnnl_forward": [[205, "index-4"]], "dnnl_forward_inference": [[205, "index-3"]], "dnnl_forward_training": [[205, "index-2"]], "dnnl_prop_kind_t": [[205, "index-0"]], "dnnl_prop_kind_undef": [[205, "index-1"]], "activation_kind": [[206, "index-31"]], "alg_kind": [[206, "index-21"]], "alpha_f32": [[206, "index-22"]], "axis_s32": [[206, "index-24"]], "beta_f32": [[206, "index-23"]], "cache_blob_id": [[206, "index-14"]], "cache_blob_id_size_s64": [[206, "index-13"]], "cell_kind": [[206, "index-29"]], "diff_dst_md": [[206, "index-39"]], "diff_src_md": [[206, "index-35"]], "diff_weights_md": [[206, "index-37"]], "direction": [[206, "index-30"]], "dst_md": [[206, "index-38"]], "engine": [[206, "index-2"], [294, "index-0"], [329, "index-0"], [472, "index-1"], [472, "index-2"]], "epsilon_f32": [[206, "index-19"]], "exec_arg_md": [[206, "index-42"]], "factors": [[206, "index-28"]], "flags": [[206, "index-20"], [219, "index-0"]], "group_size_s64": [[206, "index-33"]], "impl_info_str": [[206, "index-11"], [535, "index-2"]], "inner_blks": [[206, "index-51"]], "inner_idxs": [[206, "index-52"]], "inner_nblks_s32": [[206, "index-50"]], "k_f32": [[206, "index-26"]], "local_size_s64": [[206, "index-25"]], "memory_consumption_s64": [[206, "index-7"]], "ndims_s32": [[206, "index-43"]], "nnz_s64": [[206, "index-54"]], "num_handles_s32": [[206, "index-55"]], "num_of_inputs_s32": [[206, "index-4"]], "num_of_outputs_s32": [[206, "index-5"]], "p_f32": [[206, "index-27"]], "padded_dims": [[206, "index-47"]], "padded_offsets": [[206, "index-48"]], "padding_l": [[206, "index-17"]], "padding_r": [[206, "index-18"]], "primitive_kind": [[206, "index-3"]], "query": [[206, "index-0"]], "reorder_dst_engine": [[206, "index-10"]], "reorder_src_engine": [[206, "index-9"]], "scratchpad_engine": [[206, "index-8"], [535, "index-39"]], "scratchpad_md": [[206, "index-41"]], "src_md": [[206, "index-34"]], "submemory_offset_s64": [[206, "index-46"]], "time_estimate_f64": [[206, "index-6"]], "weights_md": [[206, "index-36"]], "workspace_md": [[206, "index-40"]], "dnnl_query_activation_kind": [[207, "index-31"]], "dnnl_query_alg_kind": [[207, "index-21"]], "dnnl_query_alpha_f32": [[207, "index-22"]], "dnnl_query_axis_s32": [[207, "index-24"]], "dnnl_query_beta_f32": [[207, "index-23"]], "dnnl_query_cache_blob_id": [[207, "index-14"]], "dnnl_query_cache_blob_id_size_s64": [[207, "index-13"]], "dnnl_query_cell_kind": [[207, "index-29"]], "dnnl_query_data_type": [[207, "index-46"]], "dnnl_query_diff_dst_md": [[207, "index-40"]], "dnnl_query_diff_src_md": [[207, "index-36"]], "dnnl_query_diff_weights_md": [[207, "index-38"]], "dnnl_query_dilations": [[207, "index-16"]], "dnnl_query_dims": [[207, "index-45"]], "dnnl_query_direction": [[207, "index-30"]], "dnnl_query_dst_md": [[207, "index-39"]], "dnnl_query_engine": [[207, "index-2"]], "dnnl_query_epsilon_f32": [[207, "index-19"]], "dnnl_query_exec_arg_md": [[207, "index-43"]], "dnnl_query_factors": [[207, "index-28"]], "dnnl_query_flags": [[207, "index-20"]], "dnnl_query_format_kind": [[207, "index-50"]], "dnnl_query_group_size_s64": [[207, "index-33"]], "dnnl_query_impl_info_str": [[207, "index-9"]], "dnnl_query_inner_blks": [[207, "index-52"]], "dnnl_query_inner_idxs": [[207, "index-53"]], "dnnl_query_inner_nblks_s32": [[207, "index-51"]], "dnnl_query_k_f32": [[207, "index-26"]], "dnnl_query_kernel": [[207, "index-32"]], "dnnl_query_local_size_s64": [[207, "index-25"]], "dnnl_query_max": [[207, "index-57"]], "dnnl_query_memory_consumption_s64": [[207, "index-7"]], "dnnl_query_ndims_s32": [[207, "index-44"]], "dnnl_query_nnz_s64": [[207, "index-55"]], "dnnl_query_num_handles_s32": [[207, "index-56"]], "dnnl_query_num_of_inputs_s32": [[207, "index-4"]], "dnnl_query_num_of_outputs_s32": [[207, "index-5"]], "dnnl_query_p_f32": [[207, "index-27"]], "dnnl_query_padded_dims": [[207, "index-48"]], "dnnl_query_padded_offsets": [[207, "index-49"]], "dnnl_query_padding_l": [[207, "index-17"]], "dnnl_query_padding_r": [[207, "index-18"]], "dnnl_query_primitive_kind": [[207, "index-3"]], "dnnl_query_prop_kind": [[207, "index-12"]], "dnnl_query_reorder_dst_engine": [[207, "index-11"]], "dnnl_query_reorder_src_engine": [[207, "index-10"]], "dnnl_query_scratchpad_engine": [[207, "index-8"]], "dnnl_query_scratchpad_md": [[207, "index-42"]], "dnnl_query_some_md": [[207, "index-34"]], "dnnl_query_sparse_encoding": [[207, "index-54"]], "dnnl_query_src_md": [[207, "index-35"]], "dnnl_query_strides": [[207, "index-15"]], "dnnl_query_submemory_offset_s64": [[207, "index-47"]], "dnnl_query_t": [[207, "index-0"]], "dnnl_query_time_estimate_f64": [[207, "index-6"]], "dnnl_query_undef": [[207, "index-1"]], "dnnl_query_weights_md": [[207, "index-37"]], "dnnl_query_workspace_md": [[207, "index-41"]], "bidirectional_concat": [[208, "index-4"]], "bidirectional_sum": [[208, "index-5"]], "rnn_direction": [[208, "index-0"]], "unidirectional_left2right": [[208, "index-2"]], "unidirectional_right2left": [[208, "index-3"]], "dnnl_bidirectional_concat": [[209, "index-4"]], "dnnl_bidirectional_sum": [[209, "index-5"]], "dnnl_rnn_direction_t": [[209, "index-0"]], "dnnl_rnn_direction_undef": [[209, "index-1"]], "dnnl_unidirectional_left2right": [[209, "index-2"]], "dnnl_unidirectional_right2left": [[209, "index-3"]], "diff_weights_overwrite": [[210, "index-2"]], "rnn_flags": [[210, "index-0"]], "dnnl_rnn_flags_diff_weights_overwrite": [[211, "index-2"]], "dnnl_rnn_flags_t": [[211, "index-0"]], "dnnl_rnn_flags_undef": [[211, "index-1"]], "environment": [[212, "index-1"]], "rounding_mode": [[212, "index-0"]], "stochastic": [[212, "index-2"]], "dnnl_rounding_mode_environment": [[213, "index-1"]], "dnnl_rounding_mode_stochastic": [[213, "index-2"]], "dnnl_rounding_mode_t": [[213, "index-0"]], "library": [[214, "index-1"]], "scratchpad_mode": [[214, "index-0"]], "user": [[214, "index-2"]], "dnnl_scratchpad_mode_library": [[215, "index-1"]], "dnnl_scratchpad_mode_t": [[215, "index-0"]], "dnnl_scratchpad_mode_user": [[215, "index-2"]], "dnnl_coo": [[216, "index-4"]], "dnnl_csr": [[216, "index-2"]], "dnnl_packed": [[216, "index-3"]], "dnnl_sparse_encoding_t": [[216, "index-0"]], "dnnl_sparse_encoding_undef": [[216, "index-1"]], "dnnl_invalid_arguments": [[218, "index-3"]], "dnnl_invalid_data_type": [[218, "index-11"]], "dnnl_invalid_graph": [[218, "index-8"]], "dnnl_invalid_graph_op": [[218, "index-9"]], "dnnl_invalid_shape": [[218, "index-10"]], "dnnl_last_impl_reached": [[218, "index-5"]], "dnnl_not_required": [[218, "index-7"]], "dnnl_out_of_memory": [[218, "index-2"]], "dnnl_runtime_error": [[218, "index-6"]], "dnnl_status_t": [[218, "index-0"]], "dnnl_success": [[218, "index-1"]], "dnnl_unimplemented": [[218, "index-4"]], "default_flags": [[219, "index-3"]], "in_order": [[219, "index-1"]], "out_of_order": [[219, "index-2"]], "dnnl_stream_default_flags": [[220, "index-2"]], "dnnl_stream_flags_t": [[220, "index-0"]], "dnnl_stream_out_of_order": [[220, "index-1"]], "dnnl_sycl_interop_buffer": [[222, "index-2"]], "dnnl_sycl_interop_memory_kind_t": [[222, "index-0"]], "dnnl_sycl_interop_usm": [[222, "index-1"]], "no_trans": [[223, "index-2"]], "pack32": [[223, "index-4"]], "pack_type": [[223, "index-0"]], "trans": [[223, "index-3"]], "augru.cpp": [[224, "index-0"]], "example": [[224, "index-0"], [225, "index-0"], [226, "index-0"], [227, "index-0"], [228, "index-0"], [229, "index-0"], [230, "index-0"], [231, "index-0"], [232, "index-0"], [233, "index-0"], [234, "index-0"], [235, "index-0"], [236, "index-0"], [237, "index-0"], [238, "index-0"], [239, "index-0"], [240, "index-0"], [241, "index-0"], [242, "index-0"], [243, "index-0"], [244, "index-0"], [245, "index-0"], [246, "index-0"], [247, "index-0"], [248, "index-0"], [249, "index-0"], [250, "index-0"], [251, "index-0"], [252, "index-0"], [253, "index-0"], [254, "index-0"], [255, "index-0"], [256, "index-0"], [257, "index-0"], [258, "index-0"], [259, "index-0"], [260, "index-0"], [261, "index-0"], [262, "index-0"], [263, "index-0"], [264, "index-0"], [265, "index-0"], [266, "index-0"], [267, "index-0"], [268, "index-0"], [269, "index-0"], [270, "index-0"], [271, "index-0"], [272, "index-0"], [273, "index-0"], [274, "index-0"], [275, "index-0"], [276, "index-0"], [277, "index-0"]], "batch_normalization.cpp": [[225, "index-0"]], "binary.cpp": [[226, "index-0"]], "bnorm_u8_via_binary_postops.cpp": [[227, "index-0"]], "cnn_inference_f32.c": [[228, "index-0"]], "cnn_inference_f32.cpp": [[229, "index-0"]], "cnn_inference_int8.cpp": [[230, "index-0"]], "cnn_training_bf16.cpp": [[231, "index-0"]], "cnn_training_f32.cpp": [[232, "index-0"]], "concat.cpp": [[233, "index-0"]], "convolution.cpp": [[234, "index-0"]], "cpu_brgemm.cpp": [[235, "index-0"]], "cpu_cnn_training_f32.c": [[236, "index-0"]], "cpu_getting_started.cpp": [[237, "index-0"]], "cpu_inference_int8.cpp": [[238, "index-0"]], "cpu_matmul_coo.cpp": [[239, "index-0"]], "cpu_matmul_csr.cpp": [[240, "index-0"]], "cpu_matmul_quantization.cpp": [[241, "index-0"]], "cpu_matmul_weights_compression.cpp": [[242, "index-0"]], "cpu_rnn_inference_f32.cpp": [[243, "index-0"]], "cpu_rnn_inference_int8.cpp": [[244, "index-0"]], "cpu_sgemm_and_matmul.cpp": [[245, "index-0"]], "cpu_single_op_partition.cpp": [[246, "index-0"]], "cross_engine_reorder.c": [[247, "index-0"]], "cross_engine_reorder.cpp": [[248, "index-0"]], "deconvolution.cpp": [[249, "index-0"]], "eltwise.cpp": [[250, "index-0"]], "getting_started.cpp": [[251, "index-0"]], "gpu_opencl_getting_started.cpp": [[252, "index-0"]], "gpu_opencl_interop.cpp": [[253, "index-0"]], "group_normalization.cpp": [[254, "index-0"]], "inference_int8_matmul.cpp": [[255, "index-0"]], "inner_product.cpp": [[256, "index-0"]], "layer_normalization.cpp": [[257, "index-0"]], "lbr_gru.cpp": [[258, "index-0"]], "lrn.cpp": [[259, "index-0"]], "lstm.cpp": [[260, "index-0"]], "matmul.cpp": [[261, "index-0"]], "memory_format_propagation.cpp": [[262, "index-0"]], "performance_profiling.cpp": [[263, "index-0"]], "pooling.cpp": [[264, "index-0"]], "prelu.cpp": [[265, "index-0"]], "reduction.cpp": [[266, "index-0"]], "reorder.cpp": [[267, "index-0"]], "resampling.cpp": [[268, "index-0"]], "rnn_training_f32.cpp": [[269, "index-0"]], "shuffle.cpp": [[270, "index-0"]], "softmax.cpp": [[271, "index-0"]], "sum.cpp": [[272, "index-0"]], "sycl_getting_started.cpp": [[273, "index-0"]], "sycl_interop_buffer.cpp": [[274, "index-0"]], "sycl_single_op_partition.cpp": [[275, "index-0"]], "vanilla_rnn.cpp": [[276, "index-0"]], "weights_decompression_matmul.cpp": [[277, "index-0"]], "global": [[278, "index-0"]], "namespace": [[278, "index-0"], [342, "index-0"], [343, "index-0"], [344, "index-0"], [345, "index-0"], [346, "index-0"], [347, "index-0"], [348, "index-0"], [349, "index-0"], [350, "index-0"], [351, "index-0"], [352, "index-0"]], "set_any_layout": [[278, "index-1"]], "group": [[282, "index-0"], [283, "index-0"], [284, "index-0"], [285, "index-0"], [286, "index-0"], [287, "index-0"], [288, "index-0"], [289, "index-0"], [290, "index-0"], [291, "index-0"], [292, "index-0"], [293, "index-0"], [294, "index-0"], [295, "index-0"], [296, "index-0"], [297, "index-0"], [298, "index-0"], [299, "index-0"], [300, "index-0"], [301, "index-0"], [302, "index-0"], [303, "index-0"], [304, "index-0"], [305, "index-0"], [306, "index-0"], [307, "index-0"], [308, "index-0"], [309, "index-0"], [310, "index-0"], [311, "index-0"], [312, "index-0"], [313, "index-0"], [314, "index-0"], [315, "index-0"], [316, "index-0"], [317, "index-0"], [318, "index-0"], [319, "index-0"], [320, "index-0"], [321, "index-0"], [322, "index-0"], [323, "index-0"], [324, "index-0"], [325, "index-0"], [326, "index-0"], [327, "index-0"], [328, "index-0"], [329, "index-0"], [330, "index-0"], [331, "index-0"], [332, "index-0"], [333, "index-0"], [334, "index-0"], [335, "index-0"], [336, "index-0"], [337, "index-0"], [338, "index-0"], [339, "index-0"]], "onednn api": [[282, "index-0"]], "accumulation mode": [[283, "index-0"]], "convert_to_c": [[283, "index-1"], [284, "index-5"], [284, "index-6"], [284, "index-7"], [284, "index-8"], [294, "index-2"], [295, "index-1"], [308, "index-5"], [308, "index-6"], [308, "index-7"], [313, "index-1"], [313, "index-2"], [346, "index-1"], [347, "index-1"]], "attributes": [[284, "index-0"]], "const_dnnl_post_ops_t": [[284, "index-4"]], "const_dnnl_primitive_attr_t": [[284, "index-2"]], "dnnl_post_ops_append_binary": [[284, "index-43"]], "dnnl_post_ops_append_dw": [[284, "index-41"]], "dnnl_post_ops_append_eltwise": [[284, "index-39"]], "dnnl_post_ops_append_prelu": [[284, "index-45"]], "dnnl_post_ops_append_sum": [[284, "index-37"]], "dnnl_post_ops_clone": [[284, "index-33"]], "dnnl_post_ops_create": [[284, "index-32"]], "dnnl_post_ops_destroy": [[284, "index-34"]], "dnnl_post_ops_get_kind": [[284, "index-36"]], "dnnl_post_ops_get_params_binary": [[284, "index-44"]], "dnnl_post_ops_get_params_dw": [[284, "index-42"]], "dnnl_post_ops_get_params_eltwise": [[284, "index-40"]], "dnnl_post_ops_get_params_prelu": [[284, "index-46"]], "dnnl_post_ops_get_params_sum": [[284, "index-38"]], "dnnl_post_ops_len": [[284, "index-35"]], "dnnl_post_ops_t": [[284, "index-3"]], "dnnl_primitive_attr_clone": [[284, "index-10"]], "dnnl_primitive_attr_create": [[284, "index-9"]], "dnnl_primitive_attr_destroy": [[284, "index-11"]], "dnnl_primitive_attr_get_accumulation_mode": [[284, "index-20"]], "dnnl_primitive_attr_get_deterministic": [[284, "index-18"]], "dnnl_primitive_attr_get_dropout": [[284, "index-12"]], "dnnl_primitive_attr_get_fpmath_mode": [[284, "index-14"]], "dnnl_primitive_attr_get_fpmath_mode_v2": [[284, "index-16"]], "dnnl_primitive_attr_get_post_ops": [[284, "index-30"]], "dnnl_primitive_attr_get_rnn_data_qparams": [[284, "index-48"]], "dnnl_primitive_attr_get_rnn_weights_projection_qparams": [[284, "index-52"]], "dnnl_primitive_attr_get_rnn_weights_qparams": [[284, "index-50"]], "dnnl_primitive_attr_get_rounding": [[284, "index-29"]], "dnnl_primitive_attr_get_scratchpad_mode": [[284, "index-22"]], "dnnl_primitive_attr_set_accumulation_mode": [[284, "index-21"]], "dnnl_primitive_attr_set_deterministic": [[284, "index-19"]], "dnnl_primitive_attr_set_dropout": [[284, "index-13"]], "dnnl_primitive_attr_set_fpmath_mode": [[284, "index-15"]], "dnnl_primitive_attr_set_fpmath_mode_v2": [[284, "index-17"]], "dnnl_primitive_attr_set_post_ops": [[284, "index-31"]], "dnnl_primitive_attr_set_rnn_data_qparams": [[284, "index-47"]], "dnnl_primitive_attr_set_rnn_weights_projection_qparams": [[284, "index-51"]], "dnnl_primitive_attr_set_rnn_weights_qparams": [[284, "index-49"]], "dnnl_primitive_attr_set_rounding": [[284, "index-28"]], "dnnl_primitive_attr_set_scales": [[284, "index-25"]], "dnnl_primitive_attr_set_scales_mask": [[284, "index-24"]], "dnnl_primitive_attr_set_scratchpad_mode": [[284, "index-23"]], "dnnl_primitive_attr_set_zero_points": [[284, "index-27"]], "dnnl_primitive_attr_set_zero_points_mask": [[284, "index-26"]], "dnnl_primitive_attr_t": [[284, "index-1"]], "dnnl_batch_normalization_backward_primitive_desc_create": [[285, "index-2"]], "dnnl_batch_normalization_forward_primitive_desc_create": [[285, "index-1"]], "dnnl_binary_primitive_desc_create": [[286, "index-1"]], "blas functions": [[287, "index-0"]], "dnnl_gemm_s8s8s32": [[287, "index-6"]], "dnnl_gemm_u8s8s32": [[287, "index-5"]], "dnnl_sgemm": [[287, "index-4"]], "gemm_s8s8s32": [[287, "index-3"], [348, "index-5"]], "gemm_u8s8s32": [[287, "index-2"], [348, "index-4"]], "sgemm": [[287, "index-1"], [348, "index-3"]], "common api": [[288, "index-0"]], "dnnl_concat_primitive_desc_create": [[289, "index-1"]], "dnnl_convolution_backward_data_primitive_desc_create": [[290, "index-2"]], "dnnl_convolution_backward_weights_primitive_desc_create": [[290, "index-3"]], "dnnl_convolution_forward_primitive_desc_create": [[290, "index-1"]], "dnnl_max_ndims": [[291, "index-3"]], "define": [[291, "index-3"], [302, "index-36"], [302, "index-37"], [302, "index-38"], [302, "index-39"], [302, "index-40"], [302, "index-41"], [308, "index-21"], [308, "index-22"], [308, "index-23"], [308, "index-24"], [308, "index-25"], [308, "index-26"], [308, "index-27"], [308, "index-28"], [308, "index-29"], [308, "index-30"], [308, "index-31"], [308, "index-32"], [308, "index-33"], [308, "index-34"], [308, "index-35"], [308, "index-36"], [308, "index-37"], [308, "index-38"], [308, "index-39"], [308, "index-40"], [308, "index-41"], [308, "index-42"], [308, "index-43"], [308, "index-44"], [308, "index-45"], [308, "index-46"], [308, "index-47"], [308, "index-48"], [308, "index-49"], [308, "index-50"], [308, "index-51"], [308, "index-52"], [308, "index-53"], [308, "index-54"], [308, "index-55"], [308, "index-56"], [308, "index-57"], [308, "index-58"], [308, "index-59"], [308, "index-60"], [308, "index-61"], [308, "index-62"], [308, "index-63"], [308, "index-64"], [308, "index-65"], [308, "index-66"], [308, "index-67"], [308, "index-68"], [308, "index-69"], [308, "index-70"], [308, "index-71"], [308, "index-72"], [308, "index-73"], [308, "index-74"], [308, "index-75"], [308, "index-76"], [308, "index-77"], [308, "index-78"], [308, "index-79"], [308, "index-80"], [308, "index-81"], [308, "index-82"], [308, "index-83"], [308, "index-84"], [308, "index-85"], [308, "index-86"], [308, "index-87"], [308, "index-88"], [308, "index-89"], [308, "index-90"], [308, "index-91"], [308, "index-92"], [308, "index-93"], [308, "index-94"], [308, "index-95"], [314, "index-22"], [314, "index-23"], [314, "index-24"], [314, "index-25"], [314, "index-26"], [314, "index-27"], [332, "index-6"], [332, "index-7"]], "dnnl_dim_t": [[291, "index-1"]], "dnnl_dims_t": [[291, "index-2"]], "dnnl_deconvolution_backward_data_primitive_desc_create": [[292, "index-2"]], "dnnl_deconvolution_backward_weights_primitive_desc_create": [[292, "index-3"]], "dnnl_deconvolution_forward_primitive_desc_create": [[292, "index-1"]], "dnnl_eltwise_backward_primitive_desc_create": [[293, "index-2"]], "dnnl_eltwise_forward_primitive_desc_create": [[293, "index-1"]], "dnnl_engine_create": [[294, "index-4"]], "dnnl_engine_destroy": [[294, "index-6"]], "dnnl_engine_get_count": [[294, "index-3"]], "dnnl_engine_get_kind": [[294, "index-5"]], "dnnl_engine_t": [[294, "index-1"]], "floating-point math mode": [[295, "index-0"]], "dnnl_get_default_fpmath_mode": [[295, "index-2"]], "dnnl_set_default_fpmath_mode": [[295, "index-3"]], "dnnl_group_normalization_backward_primitive_desc_create": [[296, "index-2"]], "dnnl_group_normalization_forward_primitive_desc_create": [[296, "index-1"]], "dnnl_inner_product_backward_data_primitive_desc_create": [[297, "index-2"]], "dnnl_inner_product_backward_weights_primitive_desc_create": [[297, "index-3"]], "dnnl_inner_product_forward_primitive_desc_create": [[297, "index-1"]], "runtime interoperability api": [[298, "index-0"], [331, "index-0"]], "dnnl_layer_normalization_backward_primitive_desc_create": [[299, "index-2"]], "dnnl_layer_normalization_backward_primitive_desc_create_v2": [[299, "index-4"]], "dnnl_layer_normalization_forward_primitive_desc_create": [[299, "index-1"]], "dnnl_layer_normalization_forward_primitive_desc_create_v2": [[299, "index-3"]], "dnnl_lrn_backward_primitive_desc_create": [[300, "index-2"]], "dnnl_lrn_forward_primitive_desc_create": [[300, "index-1"]], "dnnl_matmul_primitive_desc_create": [[301, "index-1"]], "dnnl_memory_allocate": [[302, "index-36"]], "dnnl_memory_none": [[302, "index-37"]], "dnnl_runtime_dim_val": [[302, "index-38"]], "dnnl_runtime_f32_val": [[302, "index-39"]], "dnnl_runtime_s32_val": [[302, "index-40"]], "dnnl_runtime_size_val": [[302, "index-41"]], "memory": [[302, "index-0"], [474, "index-2"], [516, "index-3"], [516, "index-4"], [516, "index-5"], [516, "index-6"]], "const_dnnl_memory_desc_t": [[302, "index-2"]], "const_dnnl_memory_t": [[302, "index-4"]], "dnnl_data_type_size": [[302, "index-22"]], "dnnl_memory_create": [[302, "index-23"]], "dnnl_memory_create_v2": [[302, "index-24"]], "dnnl_memory_desc_clone": [[302, "index-6"]], "dnnl_memory_desc_create_submemory": [[302, "index-14"]], "dnnl_memory_desc_create_with_blob": [[302, "index-8"]], "dnnl_memory_desc_create_with_coo_encoding": [[302, "index-12"]], "dnnl_memory_desc_create_with_csr_encoding": [[302, "index-11"]], "dnnl_memory_desc_create_with_packed_encoding": [[302, "index-13"]], "dnnl_memory_desc_create_with_strides": [[302, "index-9"]], "dnnl_memory_desc_create_with_tag": [[302, "index-10"]], "dnnl_memory_desc_destroy": [[302, "index-5"]], "dnnl_memory_desc_equal": [[302, "index-19"]], "dnnl_memory_desc_get_blob": [[302, "index-7"]], "dnnl_memory_desc_get_size": [[302, "index-20"]], "dnnl_memory_desc_get_size_v2": [[302, "index-21"]], "dnnl_memory_desc_permute_axes": [[302, "index-16"]], "dnnl_memory_desc_query": [[302, "index-17"]], "dnnl_memory_desc_query_v2": [[302, "index-18"]], "dnnl_memory_desc_reshape": [[302, "index-15"]], "dnnl_memory_desc_t": [[302, "index-1"]], "dnnl_memory_destroy": [[302, "index-35"]], "dnnl_memory_get_data_handle": [[302, "index-31"]], "dnnl_memory_get_data_handle_v2": [[302, "index-33"]], "dnnl_memory_get_engine": [[302, "index-26"]], "dnnl_memory_get_memory_desc": [[302, "index-25"]], "dnnl_memory_map_data": [[302, "index-27"]], "dnnl_memory_map_data_v2": [[302, "index-28"]], "dnnl_memory_set_data_handle": [[302, "index-32"]], "dnnl_memory_set_data_handle_v2": [[302, "index-34"]], "dnnl_memory_t": [[302, "index-3"]], "dnnl_memory_unmap_data": [[302, "index-29"]], "dnnl_memory_unmap_data_v2": [[302, "index-30"]], "opencl interoperability api": [[303, "index-0"], [333, "index-0"]], "dnnl_ocl_interop_engine_create": [[303, "index-9"]], "dnnl_ocl_interop_engine_create_from_cache_blob": [[303, "index-8"]], "dnnl_ocl_interop_engine_get_cache_blob": [[303, "index-7"]], "dnnl_ocl_interop_engine_get_cache_blob_id": [[303, "index-6"]], "dnnl_ocl_interop_engine_get_context": [[303, "index-10"]], "dnnl_ocl_interop_get_device": [[303, "index-11"]], "dnnl_ocl_interop_memory_create": [[303, "index-1"]], "dnnl_ocl_interop_memory_create_v2": [[303, "index-2"]], "dnnl_ocl_interop_memory_get_mem_object": [[303, "index-4"]], "dnnl_ocl_interop_memory_get_memory_kind": [[303, "index-3"]], "dnnl_ocl_interop_memory_set_mem_object": [[303, "index-5"]], "dnnl_ocl_interop_primitive_execute": [[303, "index-14"]], "dnnl_ocl_interop_stream_create": [[303, "index-12"]], "dnnl_ocl_interop_stream_get_command_queue": [[303, "index-13"]], "dnnl_pooling_backward_primitive_desc_create": [[304, "index-2"]], "dnnl_pooling_forward_primitive_desc_create": [[304, "index-1"]], "dnnl_prelu_backward_primitive_desc_create": [[305, "index-2"]], "dnnl_prelu_forward_primitive_desc_create": [[305, "index-1"]], "dnnl_get_primitive_cache_capacity": [[306, "index-3"]], "dnnl_set_primitive_cache_capacity": [[306, "index-4"]], "get_primitive_cache_capacity": [[306, "index-1"]], "set_primitive_cache_capacity": [[306, "index-2"]], "primitives": [[307, "index-0"]], "common": [[308, "index-0"]], "dnnl_arg_attr_dropout_mask": [[308, "index-21"]], "dnnl_arg_attr_dropout_probability": [[308, "index-22"]], "dnnl_arg_attr_dropout_seed": [[308, "index-23"]], "dnnl_arg_attr_multiple_post_op": [[308, "index-24"]], "dnnl_arg_attr_multiple_post_op_base": [[308, "index-25"]], "dnnl_arg_attr_output_scales": [[308, "index-26"]], "dnnl_arg_attr_post_op_dw": [[308, "index-27"]], "dnnl_arg_attr_rounding_seed": [[308, "index-28"]], "dnnl_arg_attr_scales": [[308, "index-29"]], "dnnl_arg_attr_zero_points": [[308, "index-30"]], "dnnl_arg_augru_attention": [[308, "index-31"]], "dnnl_arg_bias": [[308, "index-32"]], "dnnl_arg_diff_augru_attention": [[308, "index-33"]], "dnnl_arg_diff_bias": [[308, "index-34"]], "dnnl_arg_diff_dst": [[308, "index-35"]], "dnnl_arg_diff_dst_0": [[308, "index-36"]], "dnnl_arg_diff_dst_1": [[308, "index-37"]], "dnnl_arg_diff_dst_2": [[308, "index-38"]], "dnnl_arg_diff_dst_iter": [[308, "index-39"]], "dnnl_arg_diff_dst_iter_c": [[308, "index-40"]], "dnnl_arg_diff_dst_layer": [[308, "index-41"]], "dnnl_arg_diff_scale": [[308, "index-42"]], "dnnl_arg_diff_shift": [[308, "index-43"]], "dnnl_arg_diff_src": [[308, "index-44"]], "dnnl_arg_diff_src_0": [[308, "index-45"]], "dnnl_arg_diff_src_1": [[308, "index-46"]], "dnnl_arg_diff_src_2": [[308, "index-47"]], "dnnl_arg_diff_src_3": [[308, "index-48"]], "dnnl_arg_diff_src_iter": [[308, "index-49"]], "dnnl_arg_diff_src_iter_c": [[308, "index-50"]], "dnnl_arg_diff_src_layer": [[308, "index-51"]], "dnnl_arg_diff_weights": [[308, "index-52"]], "dnnl_arg_diff_weights_0": [[308, "index-53"]], "dnnl_arg_diff_weights_1": [[308, "index-54"]], "dnnl_arg_diff_weights_2": [[308, "index-55"]], "dnnl_arg_diff_weights_3": [[308, "index-56"]], "dnnl_arg_diff_weights_iter": [[308, "index-57"]], "dnnl_arg_diff_weights_layer": [[308, "index-58"]], "dnnl_arg_diff_weights_peephole": [[308, "index-59"]], "dnnl_arg_diff_weights_projection": [[308, "index-60"]], "dnnl_arg_dst": [[308, "index-61"]], "dnnl_arg_dst_0": [[308, "index-62"]], "dnnl_arg_dst_1": [[308, "index-63"]], "dnnl_arg_dst_2": [[308, "index-64"]], "dnnl_arg_dst_iter": [[308, "index-65"]], "dnnl_arg_dst_iter_c": [[308, "index-66"]], "dnnl_arg_dst_layer": [[308, "index-67"]], "dnnl_arg_from": [[308, "index-68"]], "dnnl_arg_mean": [[308, "index-69"]], "dnnl_arg_multiple_dst": [[308, "index-70"]], "dnnl_arg_multiple_src": [[308, "index-71"]], "dnnl_arg_scale": [[308, "index-72"]], "dnnl_arg_scratchpad": [[308, "index-73"]], "dnnl_arg_shift": [[308, "index-74"]], "dnnl_arg_src": [[308, "index-75"]], "dnnl_arg_src_0": [[308, "index-76"]], "dnnl_arg_src_1": [[308, "index-77"]], "dnnl_arg_src_2": [[308, "index-78"]], "dnnl_arg_src_3": [[308, "index-79"]], "dnnl_arg_src_iter": [[308, "index-80"]], "dnnl_arg_src_iter_c": [[308, "index-81"]], "dnnl_arg_src_layer": [[308, "index-82"]], "dnnl_arg_to": [[308, "index-83"]], "dnnl_arg_undef": [[308, "index-84"]], "dnnl_arg_variance": [[308, "index-85"]], "dnnl_arg_weights": [[308, "index-86"]], "dnnl_arg_weights_0": [[308, "index-87"]], "dnnl_arg_weights_1": [[308, "index-88"]], "dnnl_arg_weights_2": [[308, "index-89"]], "dnnl_arg_weights_3": [[308, "index-90"]], "dnnl_arg_weights_iter": [[308, "index-91"]], "dnnl_arg_weights_layer": [[308, "index-92"]], "dnnl_arg_weights_peephole": [[308, "index-93"]], "dnnl_arg_weights_projection": [[308, "index-94"]], "dnnl_arg_workspace": [[308, "index-95"]], "const_dnnl_primitive_desc_t": [[308, "index-2"]], "const_dnnl_primitive_t": [[308, "index-4"]], "dnnl_primitive_create": [[308, "index-15"]], "dnnl_primitive_create_from_cache_blob": [[308, "index-16"]], "dnnl_primitive_desc_clone": [[308, "index-9"]], "dnnl_primitive_desc_destroy": [[308, "index-11"]], "dnnl_primitive_desc_get_attr": [[308, "index-10"]], "dnnl_primitive_desc_next_impl": [[308, "index-8"]], "dnnl_primitive_desc_query": [[308, "index-12"]], "dnnl_primitive_desc_query_md": [[308, "index-13"]], "dnnl_primitive_desc_query_s32": [[308, "index-14"]], "dnnl_primitive_desc_t": [[308, "index-1"]], "dnnl_primitive_destroy": [[308, "index-20"]], "dnnl_primitive_execute": [[308, "index-17"]], "dnnl_primitive_get_cache_blob": [[308, "index-19"]], "dnnl_primitive_get_primitive_desc": [[308, "index-18"]], "dnnl_primitive_t": [[308, "index-3"]], "profiling": [[309, "index-0"]], "dnnl_query_profiling_data": [[309, "index-4"]], "dnnl_reset_profiling": [[309, "index-3"]], "get_profiling_data": [[309, "index-2"]], "reset_profiling": [[309, "index-1"]], "dnnl_reduction_primitive_desc_create": [[310, "index-1"]], "dnnl_reorder_primitive_desc_create": [[311, "index-1"]], "dnnl_resampling_backward_primitive_desc_create": [[312, "index-2"]], "dnnl_resampling_forward_primitive_desc_create": [[312, "index-1"]], "dnnl_augru_backward_primitive_desc_create": [[313, "index-12"]], "dnnl_augru_forward_primitive_desc_create": [[313, "index-11"]], "dnnl_gru_backward_primitive_desc_create": [[313, "index-8"]], "dnnl_gru_forward_primitive_desc_create": [[313, "index-7"]], "dnnl_lbr_augru_backward_primitive_desc_create": [[313, "index-14"]], "dnnl_lbr_augru_forward_primitive_desc_create": [[313, "index-13"]], "dnnl_lbr_gru_backward_primitive_desc_create": [[313, "index-10"]], "dnnl_lbr_gru_forward_primitive_desc_create": [[313, "index-9"]], "dnnl_lstm_backward_primitive_desc_create": [[313, "index-6"]], "dnnl_lstm_forward_primitive_desc_create": [[313, "index-5"]], "dnnl_vanilla_rnn_backward_primitive_desc_create": [[313, "index-4"]], "dnnl_vanilla_rnn_forward_primitive_desc_create": [[313, "index-3"]], "dnnl_jit_profile_linux_jitdump": [[314, "index-22"]], "dnnl_jit_profile_linux_jitdump_use_tsc": [[314, "index-23"]], "dnnl_jit_profile_linux_perf": [[314, "index-24"]], "dnnl_jit_profile_linux_perfmap": [[314, "index-25"]], "dnnl_jit_profile_none": [[314, "index-26"]], "dnnl_jit_profile_vtune": [[314, "index-27"]], "service": [[314, "index-0"]], "dnnl_get_cpu_isa_hints": [[314, "index-19"]], "dnnl_get_effective_cpu_isa": [[314, "index-17"]], "dnnl_set_cpu_isa_hints": [[314, "index-18"]], "dnnl_set_jit_dump": [[314, "index-13"]], "dnnl_set_jit_profiling_flags": [[314, "index-14"]], "dnnl_set_jit_profiling_jitdumpdir": [[314, "index-15"]], "dnnl_set_max_cpu_isa": [[314, "index-16"]], "dnnl_set_verbose": [[314, "index-20"]], "dnnl_version": [[314, "index-21"]], "get_cpu_isa_hints": [[314, "index-12"]], "get_default_fpmath_mode": [[314, "index-4"]], "get_effective_cpu_isa": [[314, "index-10"]], "set_cpu_isa_hints": [[314, "index-11"]], "set_default_fpmath_mode": [[314, "index-5"]], "set_jit_dump": [[314, "index-6"]], "set_jit_profiling_flags": [[314, "index-7"]], "set_jit_profiling_jitdumpdir": [[314, "index-8"]], "set_max_cpu_isa": [[314, "index-9"]], "set_verbose": [[314, "index-2"]], "version": [[314, "index-3"]], "version_t": [[314, "index-1"]], "dnnl_shuffle_backward_primitive_desc_create": [[315, "index-2"]], "dnnl_shuffle_forward_primitive_desc_create": [[315, "index-1"]], "dnnl_softmax_backward_primitive_desc_create": [[316, "index-2"]], "dnnl_softmax_forward_primitive_desc_create": [[316, "index-1"]], "stream": [[317, "index-0"], [554, "index-1"], [554, "index-2"]], "const_dnnl_stream_t": [[317, "index-2"]], "dnnl_stream_create": [[317, "index-3"]], "dnnl_stream_destroy": [[317, "index-6"]], "dnnl_stream_get_engine": [[317, "index-4"]], "dnnl_stream_t": [[317, "index-1"]], "dnnl_stream_wait": [[317, "index-5"]], "dnnl_sum_primitive_desc_create": [[318, "index-1"]], "sycl interoperability api": [[319, "index-0"], [337, "index-0"]], "dnnl_sycl_interop_engine_create": [[319, "index-1"]], "dnnl_sycl_interop_engine_get_context": [[319, "index-2"]], "dnnl_sycl_interop_engine_get_device": [[319, "index-3"]], "dnnl_sycl_interop_memory_create": [[319, "index-4"]], "dnnl_sycl_interop_memory_create_v2": [[319, "index-5"]], "dnnl_sycl_interop_memory_get_memory_kind": [[319, "index-6"]], "dnnl_sycl_interop_memory_set_buffer": [[319, "index-7"]], "dnnl_sycl_interop_primitive_execute": [[319, "index-10"]], "dnnl_sycl_interop_stream_create": [[319, "index-8"]], "dnnl_sycl_interop_stream_get_queue": [[319, "index-9"]], "threadpool interoperability api": [[320, "index-0"]], "dnnl_threadpool_interop_gemm_s8s8s32": [[320, "index-7"]], "dnnl_threadpool_interop_gemm_u8s8s32": [[320, "index-6"]], "dnnl_threadpool_interop_get_max_concurrency": [[320, "index-4"]], "dnnl_threadpool_interop_set_max_concurrency": [[320, "index-3"]], "dnnl_threadpool_interop_sgemm": [[320, "index-5"]], "dnnl_threadpool_interop_stream_create": [[320, "index-1"]], "dnnl_threadpool_interop_stream_get_threadpool": [[320, "index-2"]], "ukernels": [[321, "index-0"]], "const_dnnl_ukernel_attr_params_t": [[321, "index-2"]], "dnnl_ukernel_attr_params_create": [[321, "index-3"]], "dnnl_ukernel_attr_params_destroy": [[321, "index-8"]], "dnnl_ukernel_attr_params_set_a_scales": [[321, "index-5"]], "dnnl_ukernel_attr_params_set_b_scales": [[321, "index-6"]], "dnnl_ukernel_attr_params_set_d_scales": [[321, "index-7"]], "dnnl_ukernel_attr_params_set_post_ops_args": [[321, "index-4"]], "dnnl_ukernel_attr_params_t": [[321, "index-1"]], "brgemm ukernel": [[322, "index-0"]], "const_dnnl_brgemm_t": [[322, "index-2"]], "const_dnnl_transform_t": [[322, "index-4"]], "dnnl_brgemm_create": [[322, "index-5"]], "dnnl_brgemm_destroy": [[322, "index-19"]], "dnnl_brgemm_execute": [[322, "index-17"]], "dnnl_brgemm_execute_postops": [[322, "index-18"]], "dnnl_brgemm_finalize": [[322, "index-11"]], "dnnl_brgemm_generate": [[322, "index-16"]], "dnnl_brgemm_get_b_pack_type": [[322, "index-12"]], "dnnl_brgemm_get_scratchpad_size": [[322, "index-13"]], "dnnl_brgemm_release_hw_context": [[322, "index-15"]], "dnnl_brgemm_set_a_scales": [[322, "index-8"]], "dnnl_brgemm_set_b_scales": [[322, "index-9"]], "dnnl_brgemm_set_d_scales": [[322, "index-10"]], "dnnl_brgemm_set_add_c": [[322, "index-6"]], "dnnl_brgemm_set_hw_context": [[322, "index-14"]], "dnnl_brgemm_set_post_ops": [[322, "index-7"]], "dnnl_brgemm_t": [[322, "index-1"]], "dnnl_transform_create": [[322, "index-20"]], "dnnl_transform_destroy": [[322, "index-23"]], "dnnl_transform_execute": [[322, "index-22"]], "dnnl_transform_generate": [[322, "index-21"]], "dnnl_transform_t": [[322, "index-3"]], "utilities": [[323, "index-0"], [339, "index-0"]], "graph api": [[324, "index-0"]], "const_dnnl_graph_allocator_t": [[325, "index-4"]], "dnnl_graph_allocator_create": [[325, "index-5"]], "dnnl_graph_allocator_destroy": [[325, "index-6"]], "dnnl_graph_allocator_t": [[325, "index-3"]], "dnnl_graph_host_allocate_f": [[325, "index-1"]], "dnnl_graph_host_deallocate_f": [[325, "index-2"]], "compiled partition": [[326, "index-0"]], "const_dnnl_graph_compiled_partition_t": [[326, "index-2"]], "dnnl_graph_compiled_partition_create": [[326, "index-3"]], "dnnl_graph_compiled_partition_destroy": [[326, "index-5"]], "dnnl_graph_compiled_partition_execute": [[326, "index-4"]], "dnnl_graph_compiled_partition_get_inplace_ports": [[326, "index-7"]], "dnnl_graph_compiled_partition_query_logical_tensor": [[326, "index-6"]], "dnnl_graph_compiled_partition_t": [[326, "index-1"]], "compiled partition cache": [[327, "index-0"]], "dnnl_graph_get_compiled_partition_cache_capacity": [[327, "index-3"]], "dnnl_graph_set_compiled_partition_cache_capacity": [[327, "index-4"]], "get_compiled_partition_cache_capacity": [[327, "index-1"]], "set_compiled_partition_cache_capacity": [[327, "index-2"]], "dnnl_graph_get_constant_tensor_cache": [[328, "index-6"]], "dnnl_graph_get_constant_tensor_cache_capacity": [[328, "index-8"]], "dnnl_graph_set_constant_tensor_cache": [[328, "index-5"]], "dnnl_graph_set_constant_tensor_cache_capacity": [[328, "index-7"]], "get_constant_tensor_cache": [[328, "index-2"]], "get_constant_tensor_cache_capacity": [[328, "index-4"]], "set_constant_tensor_cache": [[328, "index-1"]], "set_constant_tensor_cache_capacity": [[328, "index-3"]], "dnnl_graph_make_engine_with_allocator": [[329, "index-2"]], "make_engine_with_allocator": [[329, "index-1"], [344, "index-2"], [344, "index-3"]], "const_dnnl_graph_graph_t": [[330, "index-2"]], "dnnl_graph_add_op": [[330, "index-6"]], "dnnl_graph_graph_create": [[330, "index-3"]], "dnnl_graph_graph_create_with_fpmath_mode": [[330, "index-4"]], "dnnl_graph_graph_destroy": [[330, "index-5"]], "dnnl_graph_graph_filter": [[330, "index-9"]], "dnnl_graph_graph_finalize": [[330, "index-7"]], "dnnl_graph_graph_get_partition_num": [[330, "index-10"]], "dnnl_graph_graph_get_partitions": [[330, "index-11"]], "dnnl_graph_graph_is_finalized": [[330, "index-8"]], "dnnl_graph_graph_t": [[330, "index-1"]], "dnnl_graph_unknown_dim": [[332, "index-6"]], "dnnl_graph_unknown_ndims": [[332, "index-7"]], "logical tensor": [[332, "index-0"]], "dnnl_graph_logical_tensor_get_mem_size": [[332, "index-4"]], "dnnl_graph_logical_tensor_init": [[332, "index-1"]], "dnnl_graph_logical_tensor_init_with_dims": [[332, "index-2"]], "dnnl_graph_logical_tensor_init_with_strides": [[332, "index-3"]], "dnnl_graph_logical_tensor_is_equal": [[332, "index-5"]], "dnnl_graph_ocl_allocate_f": [[333, "index-1"]], "dnnl_graph_ocl_deallocate_f": [[333, "index-2"]], "dnnl_graph_ocl_interop_allocator_create": [[333, "index-3"]], "dnnl_graph_ocl_interop_compiled_partition_execute": [[333, "index-6"]], "dnnl_graph_ocl_interop_make_engine_from_cache_blob_with_allocator": [[333, "index-5"]], "dnnl_graph_ocl_interop_make_engine_with_allocator": [[333, "index-4"]], "const_dnnl_graph_op_t": [[334, "index-2"]], "dnnl_graph_op_add_input": [[334, "index-5"]], "dnnl_graph_op_add_output": [[334, "index-6"]], "dnnl_graph_op_create": [[334, "index-3"]], "dnnl_graph_op_destroy": [[334, "index-4"]], "dnnl_graph_op_get_id": [[334, "index-11"]], "dnnl_graph_op_get_kind": [[334, "index-12"]], "dnnl_graph_op_set_attr_bool": [[334, "index-8"]], "dnnl_graph_op_set_attr_f32": [[334, "index-7"]], "dnnl_graph_op_set_attr_s64": [[334, "index-9"]], "dnnl_graph_op_set_attr_str": [[334, "index-10"]], "dnnl_graph_op_t": [[334, "index-1"]], "const_dnnl_graph_partition_t": [[335, "index-2"]], "dnnl_graph_partition_compile": [[335, "index-8"]], "dnnl_graph_partition_create_with_op": [[335, "index-3"]], "dnnl_graph_partition_destroy": [[335, "index-4"]], "dnnl_graph_partition_get_engine_kind": [[335, "index-14"]], "dnnl_graph_partition_get_id": [[335, "index-7"]], "dnnl_graph_partition_get_input_ports": [[335, "index-10"]], "dnnl_graph_partition_get_input_ports_num": [[335, "index-9"]], "dnnl_graph_partition_get_op_num": [[335, "index-5"]], "dnnl_graph_partition_get_ops": [[335, "index-6"]], "dnnl_graph_partition_get_output_ports": [[335, "index-12"]], "dnnl_graph_partition_get_output_ports_num": [[335, "index-11"]], "dnnl_graph_partition_is_supported": [[335, "index-13"]], "dnnl_graph_partition_t": [[335, "index-1"]], "dnnl_graph_sycl_allocate_f": [[337, "index-1"]], "dnnl_graph_sycl_deallocate_f": [[337, "index-2"]], "dnnl_graph_sycl_interop_allocator_create": [[337, "index-3"]], "dnnl_graph_sycl_interop_compiled_partition_execute": [[337, "index-5"]], "dnnl_graph_sycl_interop_make_engine_with_allocator": [[337, "index-4"]], "const_dnnl_graph_tensor_t": [[338, "index-2"]], "dnnl_graph_tensor_create": [[338, "index-3"]], "dnnl_graph_tensor_destroy": [[338, "index-4"]], "dnnl_graph_tensor_get_data_handle": [[338, "index-5"]], "dnnl_graph_tensor_get_engine": [[338, "index-7"]], "dnnl_graph_tensor_get_logical_tensor": [[338, "index-8"]], "dnnl_graph_tensor_set_data_handle": [[338, "index-6"]], "dnnl_graph_tensor_t": [[338, "index-1"]], "dnnl": [[342, "index-0"]], "dnnl::graph": [[343, "index-0"]], "dnnl::graph::ocl_interop": [[344, "index-0"]], "make_allocator": [[344, "index-1"], [345, "index-1"]], "dnnl::graph::sycl_interop": [[345, "index-0"]], "dnnl::ocl_interop": [[346, "index-0"]], "get_command_queue": [[346, "index-9"]], "get_context": [[346, "index-6"], [347, "index-3"]], "get_device": [[346, "index-7"], [347, "index-4"]], "get_engine_cache_blob": [[346, "index-3"]], "get_engine_cache_blob_id": [[346, "index-2"]], "get_mem_object": [[346, "index-10"]], "get_memory_kind": [[346, "index-12"], [347, "index-9"]], "make_engine": [[346, "index-4"], [346, "index-5"], [347, "index-2"]], "make_memory": [[346, "index-13"], [346, "index-14"], [346, "index-15"], [346, "index-16"], [347, "index-10"], [347, "index-11"], [347, "index-12"]], "make_stream": [[346, "index-8"], [347, "index-5"], [348, "index-1"]], "set_mem_object": [[346, "index-11"]], "dnnl::sycl_interop": [[347, "index-0"]], "get_buffer": [[347, "index-7"]], "get_queue": [[347, "index-6"]], "set_buffer": [[347, "index-8"]], "dnnl::threadpool_interop": [[348, "index-0"]], "get_threadpool": [[348, "index-2"]], "dnnl::ukernel": [[349, "index-0"]], "oneapi": [[350, "index-0"]], "std": [[351, "index-0"]], "sycl": [[352, "index-0"]], "augru rnn primitive example": [[354, "index-0"]], "batch normalization primitive example": [[356, "index-0"]], "binary primitive example": [[358, "index-0"]], "bnorm u8 by binary post-ops example": [[360, "index-0"]], "cnn f32 inference example": [[362, "index-0"], [363, "index-0"]], "cnn int8 inference example": [[364, "index-0"]], "cnn bf16 training example": [[365, "index-0"]], "cnn f32 training example": [[366, "index-0"], [372, "index-0"]], "concat primitive example": [[367, "index-0"]], "convolution primitive example": [[369, "index-0"]], "brgemm ukernel example": [[371, "index-0"]], "matmul primitive example": [[373, "index-0"], [374, "index-0"], [377, "index-0"], [411, "index-0"]], "matmul tutorial: quantization": [[375, "index-0"]], "rnn f32 inference example": [[378, "index-0"]], "rnn int8 inference example": [[379, "index-0"]], "matmul tutorial: comparison with sgemm": [[380, "index-0"]], "reorder between cpu and gpu engines": [[382, "index-0"], [383, "index-0"]], "deconvolution primitive example": [[384, "index-0"]], "element-wise primitive example": [[386, "index-0"]], "getting started": [[388, "index-0"]], "getting started on gpu with opencl extensions api": [[389, "index-0"]], "getting started on cpu with graph api": [[390, "index-0"]], "convolution int8 inference example with graph api": [[391, "index-0"]], "single op partition on cpu": [[392, "index-0"]], "getting started with opencl extensions and graph api": [[393, "index-0"]], "getting started with sycl extensions api and graph api": [[394, "index-0"]], "single op partition on gpu": [[395, "index-0"]], "group normalization primitive example": [[396, "index-0"]], "matmul tutorial: int8 inference": [[398, "index-0"]], "inner product primitive example": [[400, "index-0"]], "layer normalization primitive example": [[402, "index-0"]], "linear-before-reset gru rnn primitive example": [[404, "index-0"]], "legal information": [[406, "index-0"]], "local response normalization primitive example": [[407, "index-0"]], "lstm rnn primitive example": [[409, "index-0"]], "memory format propagation": [[413, "index-0"]], "performance profiling example": [[414, "index-0"]], "pooling primitive example": [[415, "index-0"]], "primitive example": [[417, "index-0"]], "reduction primitive example": [[419, "index-0"]], "reorder primitive example": [[421, "index-0"]], "resampling primitive example": [[423, "index-0"]], "rnn f32 training example": [[425, "index-0"]], "shuffle primitive example": [[426, "index-0"]], "softmax primitive example": [[428, "index-0"]], "sum primitive example": [[430, "index-0"]], "getting started on both cpu and gpu with sycl extensions api": [[432, "index-0"]], "todo list": [[433, "index-0"]], "vanilla rnn primitive example": [[434, "index-0"]], "matmul tutorial: weights decompression": [[436, "index-0"]], "args_t": [[440, "index-0"]], "struct": [[440, "index-0"], [441, "index-0"], [442, "index-0"], [443, "index-0"], [444, "index-0"], [445, "index-0"], [446, "index-0"], [447, "index-0"], [448, "index-0"], [449, "index-0"], [450, "index-0"], [451, "index-0"], [452, "index-0"], [453, "index-0"], [454, "index-0"], [455, "index-0"], [456, "index-0"], [457, "index-0"], [458, "index-0"], [459, "index-0"], [460, "index-0"], [461, "index-0"], [462, "index-0"], [463, "index-0"], [464, "index-0"], [465, "index-0"], [466, "index-0"], [467, "index-0"], [468, "index-0"], [469, "index-0"], [470, "index-0"], [471, "index-0"], [472, "index-0"], [473, "index-0"], [474, "index-0"], [475, "index-0"], [476, "index-0"], [477, "index-0"], [478, "index-0"], [479, "index-0"], [480, "index-0"], [481, "index-0"], [482, "index-0"], [483, "index-0"], [484, "index-0"], [485, "index-0"], [486, "index-0"], [487, "index-0"], [488, "index-0"], [489, "index-0"], [490, "index-0"], [491, "index-0"], [492, "index-0"], [493, "index-0"], [494, "index-0"], [495, "index-0"], [496, "index-0"], [497, "index-0"], [498, "index-0"], [499, "index-0"], [500, "index-0"], [501, "index-0"], [502, "index-0"], [503, "index-0"], [504, "index-0"], [505, "index-0"], [506, "index-0"], [507, "index-0"], [508, "index-0"], [509, "index-0"], [510, "index-0"], [511, "index-0"], [512, "index-0"], [513, "index-0"], [514, "index-0"], [515, "index-0"], [516, "index-0"], [517, "index-0"], [518, "index-0"], [519, "index-0"], [520, "index-0"], [521, "index-0"], [522, "index-0"], [523, "index-0"], [524, "index-0"], [525, "index-0"], [526, "index-0"], [527, "index-0"], [528, "index-0"], [529, "index-0"], [530, "index-0"], [531, "index-0"], [532, "index-0"], [533, "index-0"], [534, "index-0"], [535, "index-0"], [536, "index-0"], [537, "index-0"], [538, "index-0"], [539, "index-0"], [540, "index-0"], [541, "index-0"], [542, "index-0"], [543, "index-0"], [544, "index-0"], [545, "index-0"], [546, "index-0"], [547, "index-0"], [548, "index-0"], [549, "index-0"], [550, "index-0"], [551, "index-0"], [552, "index-0"], [553, "index-0"], [554, "index-0"], [555, "index-0"], [556, "index-0"], [557, "index-0"], [558, "index-0"], [559, "index-0"], [560, "index-0"], [561, "index-0"], [562, "index-0"], [563, "index-0"], [564, "index-0"], [565, "index-0"], [566, "index-0"], [567, "index-0"], [568, "index-0"], [569, "index-0"], [570, "index-0"], [571, "index-0"], [572, "index-0"], [573, "index-0"]], "cpu_deletor": [[441, "index-0"]], "augru_backward": [[442, "index-1"], [442, "index-2"], [442, "index-3"]], "dnnl::augru_backward": [[442, "index-0"]], "attention_desc": [[443, "index-6"], [445, "index-6"], [498, "index-6"], [500, "index-6"]], "bias_desc": [[443, "index-9"], [445, "index-9"], [460, "index-10"], [466, "index-10"], [482, "index-8"], [484, "index-8"], [492, "index-8"], [498, "index-9"], [500, "index-9"], [502, "index-8"], [504, "index-8"], [510, "index-13"], [512, "index-13"], [514, "index-7"], [544, "index-11"], [564, "index-9"], [566, "index-9"]], "diff_attention_desc": [[443, "index-15"], [498, "index-15"]], "diff_bias_desc": [[443, "index-18"], [458, "index-10"], [464, "index-10"], [482, "index-16"], [490, "index-8"], [498, "index-18"], [502, "index-16"], [510, "index-25"], [544, "index-23"], [564, "index-17"]], "diff_dst_iter_desc": [[443, "index-20"], [482, "index-18"], [498, "index-20"], [502, "index-18"], [510, "index-27"], [544, "index-25"], [564, "index-19"]], "diff_dst_layer_desc": [[443, "index-19"], [482, "index-17"], [498, "index-19"], [502, "index-17"], [510, "index-26"], [544, "index-24"], [564, "index-18"]], "diff_src_iter_desc": [[443, "index-14"], [482, "index-13"], [498, "index-14"], [502, "index-13"], [510, "index-19"], [544, "index-17"], [564, "index-14"]], "diff_src_layer_desc": [[443, "index-13"], [482, "index-12"], [498, "index-13"], [502, "index-12"], [510, "index-18"], [544, "index-15"], [564, "index-13"]], "diff_weights_iter_desc": [[443, "index-17"], [482, "index-15"], [498, "index-17"], [502, "index-15"], [510, "index-22"], [544, "index-20"], [564, "index-16"]], "diff_weights_layer_desc": [[443, "index-16"], [482, "index-14"], [498, "index-16"], [502, "index-14"], [510, "index-21"], [544, "index-19"], [564, "index-15"]], "dnnl::augru_backward::primitive_desc": [[443, "index-0"]], "dst_iter_desc": [[443, "index-11"], [445, "index-11"], [482, "index-10"], [484, "index-10"], [498, "index-11"], [500, "index-11"], [502, "index-10"], [504, "index-10"], [510, "index-15"], [512, "index-15"], [544, "index-13"], [564, "index-11"], [566, "index-11"]], "dst_layer_desc": [[443, "index-10"], [445, "index-10"], [482, "index-9"], [484, "index-9"], [498, "index-10"], [500, "index-10"], [502, "index-9"], [504, "index-9"], [510, "index-14"], [512, "index-14"], [544, "index-12"], [564, "index-10"], [566, "index-10"]], "get_cell_kind": [[443, "index-21"], [445, "index-13"], [482, "index-19"], [484, "index-12"], [498, "index-21"], [500, "index-13"], [502, "index-19"], [504, "index-12"], [510, "index-29"], [512, "index-18"], [535, "index-18"], [564, "index-20"], [566, "index-13"]], "get_direction": [[443, "index-23"], [445, "index-15"], [482, "index-21"], [484, "index-14"], [498, "index-23"], [500, "index-15"], [502, "index-21"], [504, "index-14"], [510, "index-31"], [512, "index-20"], [535, "index-19"], [564, "index-23"], [566, "index-16"]], "get_prop_kind": [[443, "index-22"], [445, "index-14"], [447, "index-13"], [449, "index-10"], [456, "index-9"], [458, "index-12"], [460, "index-12"], [462, "index-9"], [464, "index-12"], [466, "index-12"], [468, "index-10"], [470, "index-9"], [478, "index-13"], [480, "index-10"], [482, "index-20"], [484, "index-13"], [488, "index-7"], [490, "index-9"], [492, "index-9"], [494, "index-16"], [496, "index-13"], [498, "index-22"], [500, "index-14"], [502, "index-20"], [504, "index-13"], [506, "index-8"], [508, "index-8"], [510, "index-30"], [512, "index-19"], [520, "index-8"], [522, "index-8"], [526, "index-7"], [528, "index-6"], [535, "index-23"], [546, "index-6"], [548, "index-6"], [550, "index-8"], [552, "index-7"], [564, "index-21"], [566, "index-14"]], "primitive_desc": [[443, "index-1"], [443, "index-2"], [443, "index-3"], [445, "index-1"], [445, "index-2"], [445, "index-3"], [447, "index-1"], [447, "index-2"], [447, "index-3"], [449, "index-1"], [449, "index-2"], [449, "index-3"], [451, "index-1"], [451, "index-2"], [451, "index-3"], [454, "index-1"], [454, "index-2"], [454, "index-3"], [454, "index-4"], [456, "index-1"], [456, "index-2"], [456, "index-3"], [456, "index-4"], [458, "index-1"], [458, "index-2"], [458, "index-3"], [458, "index-4"], [458, "index-5"], [458, "index-6"], [460, "index-1"], [460, "index-2"], [460, "index-3"], [460, "index-4"], [460, "index-5"], [460, "index-6"], [462, "index-1"], [462, "index-2"], [462, "index-3"], [462, "index-4"], [464, "index-1"], [464, "index-2"], [464, "index-3"], [464, "index-4"], [464, "index-5"], [464, "index-6"], [466, "index-1"], [466, "index-2"], [466, "index-3"], [466, "index-4"], [466, "index-5"], [466, "index-6"], [468, "index-1"], [468, "index-2"], [468, "index-3"], [468, "index-4"], [468, "index-5"], [470, "index-1"], [470, "index-2"], [470, "index-3"], [470, "index-4"], [470, "index-5"], [478, "index-1"], [478, "index-2"], [478, "index-3"], [480, "index-1"], [480, "index-2"], [480, "index-3"], [482, "index-1"], [482, "index-2"], [482, "index-3"], [484, "index-1"], [484, "index-2"], [484, "index-3"], [488, "index-1"], [488, "index-2"], [488, "index-3"], [490, "index-1"], [490, "index-2"], [490, "index-3"], [490, "index-4"], [492, "index-1"], [492, "index-2"], [492, "index-3"], [492, "index-4"], [494, "index-1"], [494, "index-2"], [494, "index-3"], [494, "index-4"], [494, "index-5"], [494, "index-6"], [496, "index-1"], [496, "index-2"], [496, "index-3"], [496, "index-4"], [496, "index-5"], [496, "index-6"], [498, "index-1"], [498, "index-2"], [498, "index-3"], [500, "index-1"], [500, "index-2"], [500, "index-3"], [502, "index-1"], [502, "index-2"], [502, "index-3"], [504, "index-1"], [504, "index-2"], [504, "index-3"], [506, "index-1"], [506, "index-2"], [506, "index-3"], [508, "index-1"], [508, "index-2"], [508, "index-3"], [510, "index-1"], [510, "index-2"], [510, "index-3"], [510, "index-4"], [510, "index-5"], [512, "index-1"], [512, "index-2"], [512, "index-3"], [512, "index-4"], [512, "index-5"], [514, "index-1"], [514, "index-2"], [514, "index-3"], [514, "index-4"], [520, "index-1"], [520, "index-2"], [520, "index-3"], [522, "index-1"], [522, "index-2"], [522, "index-3"], [526, "index-1"], [526, "index-2"], [526, "index-3"], [528, "index-1"], [528, "index-2"], [528, "index-3"], [537, "index-1"], [537, "index-2"], [537, "index-3"], [539, "index-1"], [539, "index-2"], [539, "index-3"], [539, "index-4"], [541, "index-1"], [541, "index-2"], [541, "index-3"], [541, "index-4"], [543, "index-1"], [543, "index-2"], [543, "index-3"], [543, "index-4"], [543, "index-5"], [546, "index-1"], [546, "index-2"], [546, "index-3"], [548, "index-1"], [548, "index-2"], [548, "index-3"], [550, "index-1"], [550, "index-2"], [550, "index-3"], [552, "index-1"], [552, "index-2"], [552, "index-3"], [556, "index-1"], [556, "index-2"], [556, "index-3"], [556, "index-4"], [564, "index-1"], [564, "index-2"], [564, "index-3"], [564, "index-4"], [566, "index-1"], [566, "index-2"], [566, "index-3"], [566, "index-4"]], "src_iter_desc": [[443, "index-5"], [445, "index-5"], [482, "index-5"], [484, "index-5"], [498, "index-5"], [500, "index-5"], [502, "index-5"], [504, "index-5"], [510, "index-7"], [512, "index-7"], [544, "index-5"], [564, "index-6"], [566, "index-6"]], "src_layer_desc": [[443, "index-4"], [445, "index-4"], [482, "index-4"], [484, "index-4"], [498, "index-4"], [500, "index-4"], [502, "index-4"], [504, "index-4"], [510, "index-6"], [512, "index-6"], [544, "index-3"], [564, "index-5"], [566, "index-5"]], "weights_iter_desc": [[443, "index-8"], [445, "index-8"], [482, "index-7"], [484, "index-7"], [498, "index-8"], [500, "index-8"], [502, "index-7"], [504, "index-7"], [510, "index-10"], [512, "index-10"], [544, "index-8"], [564, "index-8"], [566, "index-8"]], "weights_layer_desc": [[443, "index-7"], [445, "index-7"], [482, "index-6"], [484, "index-6"], [498, "index-7"], [500, "index-7"], [502, "index-6"], [504, "index-6"], [510, "index-9"], [512, "index-9"], [544, "index-7"], [564, "index-7"], [566, "index-7"]], "workspace_desc": [[443, "index-12"], [445, "index-12"], [447, "index-12"], [449, "index-7"], [478, "index-12"], [480, "index-7"], [482, "index-11"], [484, "index-11"], [494, "index-15"], [496, "index-10"], [498, "index-12"], [500, "index-12"], [502, "index-11"], [504, "index-11"], [506, "index-6"], [508, "index-6"], [510, "index-17"], [512, "index-17"], [520, "index-6"], [522, "index-6"], [535, "index-37"], [564, "index-12"], [566, "index-12"]], "augru_forward": [[444, "index-1"], [444, "index-2"], [444, "index-3"]], "dnnl::augru_forward": [[444, "index-0"]], "dnnl::augru_forward::primitive_desc": [[445, "index-0"]], "batch_normalization_backward": [[446, "index-1"], [446, "index-2"], [446, "index-3"]], "dnnl::batch_normalization_backward": [[446, "index-0"]], "diff_dst_desc": [[447, "index-8"], [456, "index-7"], [458, "index-9"], [462, "index-7"], [464, "index-9"], [468, "index-8"], [478, "index-8"], [488, "index-6"], [490, "index-7"], [494, "index-11"], [506, "index-5"], [520, "index-5"], [526, "index-6"], [535, "index-29"], [535, "index-35"], [541, "index-6"], [546, "index-5"], [550, "index-6"]], "diff_src_desc": [[447, "index-7"], [456, "index-5"], [462, "index-5"], [468, "index-7"], [478, "index-7"], [488, "index-4"], [494, "index-10"], [506, "index-4"], [520, "index-4"], [526, "index-5"], [535, "index-28"], [535, "index-34"], [541, "index-5"], [546, "index-4"], [550, "index-5"]], "diff_weights_desc": [[447, "index-9"], [458, "index-8"], [464, "index-8"], [478, "index-9"], [490, "index-6"], [494, "index-12"], [535, "index-30"], [535, "index-36"]], "dnnl::batch_normalization_backward::primitive_desc": [[447, "index-0"]], "dst_desc": [[447, "index-6"], [449, "index-5"], [451, "index-7"], [454, "index-6"], [460, "index-9"], [466, "index-9"], [470, "index-7"], [478, "index-6"], [480, "index-5"], [492, "index-7"], [494, "index-9"], [496, "index-8"], [508, "index-5"], [514, "index-8"], [522, "index-5"], [528, "index-5"], [535, "index-26"], [535, "index-32"], [537, "index-5"], [539, "index-8"], [543, "index-7"], [548, "index-5"], [550, "index-4"], [552, "index-5"], [556, "index-6"]], "get_epsilon": [[447, "index-14"], [449, "index-11"], [478, "index-15"], [480, "index-12"], [494, "index-17"], [496, "index-14"], [535, "index-8"], [537, "index-7"]], "get_flags": [[447, "index-15"], [449, "index-12"], [478, "index-16"], [480, "index-13"], [494, "index-18"], [496, "index-15"], [535, "index-9"], [557, "index-5"]], "mean_desc": [[447, "index-10"], [449, "index-8"], [478, "index-10"], [480, "index-8"], [494, "index-13"], [496, "index-11"]], "src_desc": [[447, "index-4"], [449, "index-4"], [451, "index-4"], [454, "index-5"], [458, "index-7"], [460, "index-7"], [464, "index-7"], [466, "index-7"], [468, "index-6"], [470, "index-6"], [478, "index-4"], [480, "index-4"], [490, "index-5"], [492, "index-5"], [494, "index-7"], [496, "index-7"], [508, "index-4"], [514, "index-5"], [522, "index-4"], [526, "index-4"], [528, "index-4"], [535, "index-25"], [535, "index-31"], [537, "index-4"], [539, "index-7"], [543, "index-6"], [548, "index-4"], [552, "index-4"], [556, "index-5"]], "variance_desc": [[447, "index-11"], [449, "index-9"], [478, "index-11"], [480, "index-9"], [494, "index-14"], [496, "index-12"]], "weights_desc": [[447, "index-5"], [449, "index-6"], [456, "index-6"], [460, "index-8"], [462, "index-6"], [466, "index-8"], [478, "index-5"], [480, "index-6"], [488, "index-5"], [492, "index-6"], [494, "index-8"], [496, "index-9"], [514, "index-6"], [535, "index-27"], [535, "index-33"]], "batch_normalization_forward": [[448, "index-1"], [448, "index-2"], [448, "index-3"]], "dnnl::batch_normalization_forward": [[448, "index-0"]], "dnnl::batch_normalization_forward::primitive_desc": [[449, "index-0"]], "dnnl::binary": [[450, "index-0"]], "dnnl::binary::primitive_desc": [[451, "index-0"]], "get_algorithm": [[451, "index-8"], [456, "index-8"], [458, "index-11"], [460, "index-11"], [462, "index-8"], [464, "index-11"], [466, "index-11"], [468, "index-9"], [470, "index-8"], [506, "index-7"], [508, "index-7"], [520, "index-7"], [522, "index-7"], [535, "index-10"], [537, "index-8"], [550, "index-7"], [552, "index-6"]], "src0_desc": [[451, "index-5"]], "src1_desc": [[451, "index-6"]], "dnnl_brgemm": [[452, "index-0"]], "dnnl::concat": [[453, "index-0"]], "dnnl::concat::primitive_desc": [[454, "index-0"]], "primitive_desc_base": [[454, "index-10"], [454, "index-7"], [454, "index-8"], [454, "index-9"], [534, "index-2"], [534, "index-3"], [534, "index-4"], [534, "index-5"], [539, "index-10"], [539, "index-11"], [539, "index-12"], [539, "index-9"], [556, "index-10"], [556, "index-7"], [556, "index-8"], [556, "index-9"]], "convolution_backward_data": [[455, "index-1"], [455, "index-2"], [455, "index-3"]], "dnnl::convolution_backward_data": [[455, "index-0"]], "dnnl::convolution_backward_data::primitive_desc": [[456, "index-0"]], "get_dilations": [[456, "index-11"], [458, "index-14"], [460, "index-14"], [462, "index-11"], [464, "index-14"], [466, "index-14"], [520, "index-11"], [522, "index-11"], [535, "index-5"]], "get_padding_l": [[456, "index-12"], [458, "index-15"], [460, "index-15"], [462, "index-12"], [464, "index-15"], [466, "index-15"], [520, "index-12"], [522, "index-12"], [535, "index-6"]], "get_padding_r": [[456, "index-13"], [458, "index-16"], [460, "index-16"], [462, "index-13"], [464, "index-16"], [466, "index-16"], [520, "index-13"], [522, "index-13"], [535, "index-7"]], "convolution_backward_weights": [[457, "index-1"], [457, "index-2"], [457, "index-3"]], "dnnl::convolution_backward_weights": [[457, "index-0"]], "dnnl::convolution_backward_weights::primitive_desc": [[458, "index-0"]], "convolution_forward": [[459, "index-1"], [459, "index-2"], [459, "index-3"]], "dnnl::convolution_forward": [[459, "index-0"]], "dnnl::convolution_forward::primitive_desc": [[460, "index-0"]], "deconvolution_backward_data": [[461, "index-1"], [461, "index-2"], [461, "index-3"]], "dnnl::deconvolution_backward_data": [[461, "index-0"]], "dnnl::deconvolution_backward_data::primitive_desc": [[462, "index-0"]], "deconvolution_backward_weights": [[463, "index-1"], [463, "index-2"], [463, "index-3"]], "dnnl::deconvolution_backward_weights": [[463, "index-0"]], "dnnl::deconvolution_backward_weights::primitive_desc": [[464, "index-0"]], "deconvolution_forward": [[465, "index-1"], [465, "index-2"], [465, "index-3"]], "dnnl::deconvolution_forward": [[465, "index-0"]], "dnnl::deconvolution_forward::primitive_desc": [[466, "index-0"]], "dnnl::eltwise_backward": [[467, "index-0"]], "eltwise_backward": [[467, "index-1"], [467, "index-2"], [467, "index-3"]], "dnnl::eltwise_backward::primitive_desc": [[468, "index-0"]], "get_alpha": [[468, "index-11"], [470, "index-10"], [506, "index-9"], [508, "index-9"], [535, "index-11"], [564, "index-24"], [566, "index-17"]], "get_beta": [[468, "index-12"], [470, "index-11"], [506, "index-10"], [508, "index-10"], [535, "index-12"], [564, "index-25"], [566, "index-18"]], "dnnl::eltwise_forward": [[469, "index-0"]], "eltwise_forward": [[469, "index-1"], [469, "index-2"], [469, "index-3"]], "dnnl::eltwise_forward::primitive_desc": [[470, "index-0"]], "dnnl_engine": [[471, "index-0"]], "dnnl::engine": [[472, "index-0"]], "get_count": [[472, "index-8"]], "get_kind": [[472, "index-3"], [530, "index-7"], [535, "index-41"]], "handle": [[472, "index-4"], [472, "index-5"], [472, "index-6"], [472, "index-7"], [485, "index-1"], [485, "index-2"], [485, "index-3"], [485, "index-4"], [516, "index-15"], [516, "index-16"], [516, "index-17"], [516, "index-18"], [530, "index-10"], [530, "index-11"], [530, "index-12"], [530, "index-13"], [554, "index-5"], [554, "index-6"], [554, "index-7"], [554, "index-8"]], "dnnl::error": [[473, "index-0"]], "error": [[473, "index-1"]], "what": [[473, "index-2"]], "wrap_c_api": [[473, "index-3"]], "arg": [[474, "index-1"]], "dnnl_exec_arg_t": [[474, "index-0"]], "dnnl_graph_inplace_pair_t": [[475, "index-0"]], "input_id": [[475, "index-1"]], "output_id": [[475, "index-2"]], "dnnl_graph_logical_tensor_t": [[476, "index-0"]], "id": [[476, "index-1"]], "layout_id": [[476, "index-8"]], "ndims": [[476, "index-2"]], "property": [[476, "index-5"]], "dnnl::group_normalization_backward": [[477, "index-0"]], "group_normalization_backward": [[477, "index-1"], [477, "index-2"], [477, "index-3"]], "dnnl::group_normalization_backward::primitive_desc": [[478, "index-0"]], "get_group_size": [[478, "index-14"], [480, "index-11"], [535, "index-22"], [546, "index-8"], [548, "index-8"]], "dnnl::group_normalization_forward": [[479, "index-0"]], "group_normalization_forward": [[479, "index-1"], [479, "index-2"], [479, "index-3"]], "dnnl::group_normalization_forward::primitive_desc": [[480, "index-0"]], "dnnl::gru_backward": [[481, "index-0"]], "gru_backward": [[481, "index-1"], [481, "index-2"], [481, "index-3"]], "dnnl::gru_backward::primitive_desc": [[482, "index-0"]], "dnnl::gru_forward": [[483, "index-0"]], "gru_forward": [[483, "index-1"], [483, "index-2"], [483, "index-3"]], "dnnl::gru_forward::primitive_desc": [[484, "index-0"]], "dnnl::handle": [[485, "index-0"]], "get": [[485, "index-8"]], "operator t": [[485, "index-9"]], "operator bool": [[485, "index-10"]], "operator!=": [[485, "index-12"], [518, "index-27"]], "operator==": [[485, "index-11"], [518, "index-26"]], "reset": [[485, "index-7"]], "dnnl::handle_traits": [[486, "index-0"]], "dnnl::inner_product_backward_data": [[487, "index-0"]], "inner_product_backward_data": [[487, "index-1"], [487, "index-2"], [487, "index-3"]], "dnnl::inner_product_backward_data::primitive_desc": [[488, "index-0"]], "dnnl::inner_product_backward_weights": [[489, "index-0"]], "inner_product_backward_weights": [[489, "index-1"], [489, "index-2"], [489, "index-3"]], "dnnl::inner_product_backward_weights::primitive_desc": [[490, "index-0"]], "dnnl::inner_product_forward": [[491, "index-0"]], "inner_product_forward": [[491, "index-1"], [491, "index-2"], [491, "index-3"]], "dnnl::inner_product_forward::primitive_desc": [[492, "index-0"]], "dnnl::layer_normalization_backward": [[493, "index-0"]], "layer_normalization_backward": [[493, "index-1"], [493, "index-2"], [493, "index-3"]], "dnnl::layer_normalization_backward::primitive_desc": [[494, "index-0"]], "dnnl::layer_normalization_forward": [[495, "index-0"]], "layer_normalization_forward": [[495, "index-1"], [495, "index-2"], [495, "index-3"]], "dnnl::layer_normalization_forward::primitive_desc": [[496, "index-0"]], "dnnl::lbr_augru_backward": [[497, "index-0"]], "lbr_augru_backward": [[497, "index-1"], [497, "index-2"], [497, "index-3"]], "dnnl::lbr_augru_backward::primitive_desc": [[498, "index-0"]], "dnnl::lbr_augru_forward": [[499, "index-0"]], "lbr_augru_forward": [[499, "index-1"], [499, "index-2"], [499, "index-3"]], "dnnl::lbr_augru_forward::primitive_desc": [[500, "index-0"]], "dnnl::lbr_gru_backward": [[501, "index-0"]], "lbr_gru_backward": [[501, "index-1"], [501, "index-2"], [501, "index-3"]], "dnnl::lbr_gru_backward::primitive_desc": [[502, "index-0"]], "dnnl::lbr_gru_forward": [[503, "index-0"]], "lbr_gru_forward": [[503, "index-1"], [503, "index-2"], [503, "index-3"]], "dnnl::lbr_gru_forward::primitive_desc": [[504, "index-0"]], "dnnl::lrn_backward": [[505, "index-0"]], "lrn_backward": [[505, "index-1"], [505, "index-2"], [505, "index-3"]], "dnnl::lrn_backward::primitive_desc": [[506, "index-0"]], "get_k": [[506, "index-12"], [508, "index-12"], [535, "index-15"]], "get_local_size": [[506, "index-11"], [508, "index-11"], [535, "index-14"]], "dnnl::lrn_forward": [[507, "index-0"]], "lrn_forward": [[507, "index-1"], [507, "index-2"], [507, "index-3"]], "dnnl::lrn_forward::primitive_desc": [[508, "index-0"]], "dnnl::lstm_backward": [[509, "index-0"]], "lstm_backward": [[509, "index-1"], [509, "index-2"], [509, "index-3"]], "diff_dst_iter_c_desc": [[510, "index-28"], [544, "index-26"]], "diff_src_iter_c_desc": [[510, "index-20"], [544, "index-18"]], "diff_weights_peephole_desc": [[510, "index-23"], [544, "index-21"]], "diff_weights_projection_desc": [[510, "index-24"], [544, "index-22"]], "dnnl::lstm_backward::primitive_desc": [[510, "index-0"]], "dst_iter_c_desc": [[510, "index-16"], [512, "index-16"], [544, "index-14"]], "src_iter_c_desc": [[510, "index-8"], [512, "index-8"], [544, "index-6"]], "weights_peephole_desc": [[510, "index-11"], [512, "index-11"], [544, "index-9"]], "weights_projection_desc": [[510, "index-12"], [512, "index-12"], [544, "index-10"]], "dnnl::lstm_forward": [[511, "index-0"]], "lstm_forward": [[511, "index-1"], [511, "index-2"], [511, "index-3"]], "dnnl::lstm_forward::primitive_desc": [[512, "index-0"]], "dnnl::matmul": [[513, "index-0"]], "dnnl::matmul::primitive_desc": [[514, "index-0"]], "dnnl_memory": [[515, "index-0"]], "data_type_size": [[516, "index-8"]], "dnnl::memory": [[516, "index-0"]], "get_desc": [[516, "index-9"]], "map_data": [[516, "index-13"]], "unmap_data": [[516, "index-14"]], "validate_dims": [[516, "index-7"]], "dnnl_memory_desc": [[517, "index-0"]], "desc": [[518, "index-1"], [518, "index-2"], [518, "index-3"], [518, "index-4"], [518, "index-5"]], "dnnl::memory::desc": [[518, "index-0"]], "get_blob": [[518, "index-24"]], "get_format_kind": [[518, "index-21"]], "get_inner_blks": [[518, "index-15"]], "get_inner_idxs": [[518, "index-16"]], "get_inner_nblks": [[518, "index-14"]], "get_ndims": [[518, "index-9"]], "get_nnz": [[518, "index-18"]], "get_num_handles": [[518, "index-17"]], "get_padded_dims": [[518, "index-10"]], "get_padded_offsets": [[518, "index-11"]], "get_size": [[518, "index-23"]], "get_sparse_encoding": [[518, "index-19"]], "get_submemory_offset": [[518, "index-12"]], "is_zero": [[518, "index-25"]], "permute_axes": [[518, "index-8"]], "reshape": [[518, "index-7"]], "submemory_desc": [[518, "index-6"]], "dnnl::pooling_backward": [[519, "index-0"]], "pooling_backward": [[519, "index-1"], [519, "index-2"], [519, "index-3"]], "dnnl::pooling_backward::primitive_desc": [[520, "index-0"]], "get_kernel": [[520, "index-10"], [522, "index-10"], [535, "index-21"]], "dnnl::pooling_forward": [[521, "index-0"]], "pooling_forward": [[521, "index-1"], [521, "index-2"], [521, "index-3"]], "dnnl::pooling_forward::primitive_desc": [[522, "index-0"]], "dnnl_post_ops": [[523, "index-0"]], "append_binary": [[524, "index-13"]], "append_dw": [[524, "index-11"]], "append_eltwise": [[524, "index-9"]], "append_prelu": [[524, "index-15"]], "append_sum": [[524, "index-5"]], "dnnl::post_ops": [[524, "index-0"]], "get_params_binary": [[524, "index-14"]], "get_params_dw": [[524, "index-12"]], "get_params_eltwise": [[524, "index-10"]], "get_params_prelu": [[524, "index-16"]], "get_params_sum": [[524, "index-6"], [524, "index-7"], [524, "index-8"]], "len": [[524, "index-3"]], "post_ops": [[524, "index-1"], [524, "index-2"]], "dnnl::prelu_backward": [[525, "index-0"]], "prelu_backward": [[525, "index-1"], [525, "index-2"], [525, "index-3"]], "dnnl::prelu_backward::primitive_desc": [[526, "index-0"]], "dnnl::prelu_forward": [[527, "index-0"]], "prelu_forward": [[527, "index-1"], [527, "index-2"], [527, "index-3"]], "dnnl::prelu_forward::primitive_desc": [[528, "index-0"]], "dnnl_primitive": [[529, "index-0"]], "dnnl::primitive": [[530, "index-0"]], "get_cache_blob": [[530, "index-8"]], "get_primitive_desc": [[530, "index-6"]], "primitive": [[530, "index-1"], [530, "index-2"], [530, "index-3"], [530, "index-4"], [530, "index-5"]], "dnnl_primitive_attr": [[531, "index-0"]], "dnnl::primitive_attr": [[532, "index-0"]], "get_accumulation_mode": [[532, "index-8"]], "get_deterministic": [[532, "index-10"]], "get_dropout": [[532, "index-3"]], "get_fpmath_mode": [[532, "index-5"], [532, "index-6"]], "get_post_ops": [[532, "index-20"]], "get_rnn_data_qparams": [[532, "index-23"]], "get_rnn_weights_projection_qparams": [[532, "index-27"]], "get_rnn_weights_qparams": [[532, "index-25"]], "get_rounding_mode": [[532, "index-12"]], "get_scratchpad_mode": [[532, "index-14"]], "primitive_attr": [[532, "index-1"], [532, "index-2"]], "set_accumulation_mode": [[532, "index-9"]], "set_deterministic": [[532, "index-11"]], "set_dropout": [[532, "index-4"]], "set_fpmath_mode": [[532, "index-7"]], "set_post_ops": [[532, "index-21"], [561, "index-4"]], "set_rnn_data_qparams": [[532, "index-22"]], "set_rnn_weights_projection_qparams": [[532, "index-26"]], "set_rnn_weights_qparams": [[532, "index-24"]], "set_rounding_mode": [[532, "index-13"]], "set_scales": [[532, "index-17"]], "set_scales_mask": [[532, "index-16"]], "set_scratchpad_mode": [[532, "index-15"]], "set_zero_points": [[532, "index-19"]], "set_zero_points_mask": [[532, "index-18"]], "dnnl_primitive_desc": [[533, "index-0"]], "dnnl::primitive_desc": [[534, "index-0"]], "next_impl": [[534, "index-1"]], "dnnl::primitive_desc_base": [[535, "index-0"]], "get_activation_kind": [[535, "index-20"], [564, "index-22"], [566, "index-15"]], "get_axis": [[535, "index-13"], [546, "index-7"], [548, "index-7"], [550, "index-9"], [552, "index-8"]], "get_cache_blob_id": [[535, "index-42"]], "get_factors": [[535, "index-17"]], "get_p": [[535, "index-16"], [537, "index-6"]], "get_primitive_attr": [[535, "index-40"]], "query_md": [[535, "index-24"]], "query_s64": [[535, "index-3"]], "scratchpad_desc": [[535, "index-38"]], "dnnl::reduction": [[536, "index-0"]], "dnnl::reduction::primitive_desc": [[537, "index-0"]], "dnnl::reorder": [[538, "index-0"]], "dnnl::reorder::primitive_desc": [[539, "index-0"]], "get_dst_engine": [[539, "index-6"]], "get_src_engine": [[539, "index-5"]], "dnnl::resampling_backward": [[540, "index-0"]], "resampling_backward": [[540, "index-1"], [540, "index-2"], [540, "index-3"]], "dnnl::resampling_backward::primitive_desc": [[541, "index-0"]], "dnnl::resampling_forward": [[542, "index-0"]], "resampling_forward": [[542, "index-1"], [542, "index-2"], [542, "index-3"]], "dnnl::resampling_forward::primitive_desc": [[543, "index-0"]], "augru_attention_desc": [[544, "index-4"]], "diff_augru_attention_desc": [[544, "index-16"]], "dnnl::rnn_primitive_desc_base": [[544, "index-0"]], "rnn_primitive_desc_base": [[544, "index-1"], [544, "index-2"]], "dnnl::shuffle_backward": [[545, "index-0"]], "shuffle_backward": [[545, "index-1"], [545, "index-2"], [545, "index-3"]], "dnnl::shuffle_backward::primitive_desc": [[546, "index-0"]], "dnnl::shuffle_forward": [[547, "index-0"]], "shuffle_forward": [[547, "index-1"], [547, "index-2"], [547, "index-3"]], "dnnl::shuffle_forward::primitive_desc": [[548, "index-0"]], "dnnl::softmax_backward": [[549, "index-0"]], "softmax_backward": [[549, "index-1"], [549, "index-2"], [549, "index-3"]], "dnnl::softmax_backward::primitive_desc": [[550, "index-0"]], "dnnl::softmax_forward": [[551, "index-0"]], "softmax_forward": [[551, "index-1"], [551, "index-2"], [551, "index-3"]], "dnnl::softmax_forward::primitive_desc": [[552, "index-0"]], "dnnl_stream": [[553, "index-0"]], "dnnl::stream": [[554, "index-0"]], "wait": [[554, "index-4"]], "dnnl::sum": [[555, "index-0"]], "dnnl::sum::primitive_desc": [[556, "index-0"]], "asynchronous": [[557, "index-1"]], "dnnl::threadpool_interop::threadpool_iface": [[557, "index-0"]], "get_in_parallel": [[557, "index-3"]], "get_num_threads": [[557, "index-2"]], "parallel_for": [[557, "index-4"]], "dnnl_transform": [[558, "index-0"]], "dnnl_ukernel_attr_params": [[559, "index-0"]], "dnnl::ukernel::attr_params": [[560, "index-0"]], "set_a_scales": [[560, "index-2"], [561, "index-5"]], "set_b_scales": [[560, "index-3"], [561, "index-6"]], "set_d_scales": [[560, "index-4"], [561, "index-7"]], "set_post_ops_args": [[560, "index-1"]], "brgemm": [[561, "index-1"], [561, "index-2"]], "default_attr_params": [[561, "index-17"]], "default_post_ops": [[561, "index-16"]], "dnnl::ukernel::brgemm": [[561, "index-0"]], "generate": [[561, "index-12"], [562, "index-3"]], "get_b_pack_type": [[561, "index-9"]], "get_scratchpad_size": [[561, "index-10"]], "release_hw_context": [[561, "index-15"]], "set_add_c": [[561, "index-3"]], "set_hw_context": [[561, "index-11"]], "dnnl::ukernel::transform": [[562, "index-0"]], "transform": [[562, "index-1"], [562, "index-2"]], "dnnl::vanilla_rnn_backward": [[563, "index-0"]], "vanilla_rnn_backward": [[563, "index-1"], [563, "index-2"], [563, "index-3"]], "dnnl::vanilla_rnn_backward::primitive_desc": [[564, "index-0"]], "dnnl::vanilla_rnn_forward": [[565, "index-0"]], "vanilla_rnn_forward": [[565, "index-1"], [565, "index-2"], [565, "index-3"]], "dnnl::vanilla_rnn_forward::primitive_desc": [[566, "index-0"]], "cpu_runtime": [[567, "index-5"]], "dnnl_version_t": [[567, "index-0"]], "gpu_runtime": [[567, "index-6"]], "hash": [[567, "index-4"]], "major": [[567, "index-1"]], "minor": [[567, "index-2"]], "patch": [[567, "index-3"]], "example_allows_unimplemented": [[568, "index-0"]], "gemm_dims_t": [[569, "index-0"]], "gqa_dims_t": [[570, "index-0"]], "mqa_dims_t": [[571, "index-0"]], "sdpa_dims_t": [[572, "index-0"]], "sycl_deletor": [[573, "index-0"]]}})