# *******************************************************************************
# Copyright 2024-2025 Arm Limited and affiliates.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# *******************************************************************************

name: "Performance AArch64"

on:
  workflow_dispatch:
    inputs:
      onednn_base_hash:
        required: false
        type: string
        description: 'Baseline oneDNN commit'
      onednn_new_hash:
        required: false
        type: string
        description: 'New oneDNN commit'
      acl_base_hash:
        required: false
        type: string
        description: 'Baseline ACL commit'
      acl_new_hash:
        required: false
        type: string
        description: 'New ACL commit'
      num_threads:
        required: false
        type: string
        description: 'Number of threads to use'
      benchdnn_command:
        required: false
        type: string
        description: 'benchdnn command to run'

  workflow_call:

#* Stop stale workflows
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-performance
  cancel-in-progress: true

# Declare default permissions as read only.
permissions: write-all

jobs:
  build-and-test-performance:
    strategy:
      matrix:
        config: [
          { name: c7g, label: ah-ubuntu_22_04-c7g_m-100, threading: OMP, toolset: gcc, build: Release, testset: NIGHTLY }
        ]

    name: ${{ matrix.config.name }}, ${{ matrix.config.toolset }}, ${{ matrix.config.threading }}, ${{ matrix.config.build }}
    runs-on: ${{ matrix.config.label }}
    permissions:
      contents: write
    continue-on-error: true
    steps:

      - name: Checkout oneDNN
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: oneDNN

      # Note: This will create a github actions cache
      - name: Get latest CMake and Ninja
        uses: lukka/get-cmake@56d043d188c3612951d8755da8f4b709ec951ad6 # v3.31.6
        with:
          cmakeVersion: 3.31.0
          ninjaVersion: 1.12.0

      - if: ${{ matrix.config.threading == 'OMP' }}
        name: Install openmp
        run: |
          sudo apt install -y libomp-dev

      - name: Read version file
        id: get-versions
        run: |
          content=`cat ${{ github.workspace }}/oneDNN/.github/automation/aarch64/ci.json`
          content="${content//[$'\t\r\n$ ']}"
          echo "output=$content" >> $GITHUB_OUTPUT

      - name: Install gcc
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt update -y
          sudo apt install -y g++-${{ fromJson(steps.get-versions.outputs.output).dependencies.gcc }}

      - name: setup python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: '3.10'

      - name: Install scipy
        if: ${{ matrix.config.build == 'Release' }}
        run: pip install scipy statistics GitPython

      - name: Build Base ComputeLibrary
        uses: ./oneDNN/.github/actions/build-acl
        with:
          toolset: ${{ matrix.config.toolset }}
          build: ${{ matrix.config.build }}
          threading: ${{ matrix.config.threading }}
          acl_hash: ${{ inputs.acl_base_hash || fromJson(steps.get-versions.outputs.output).dependencies.acl }}
          gcc_version: ${{ fromJson(steps.get-versions.outputs.output).dependencies.gcc }}

      - name: Rename to ComputeLibrary_base
        run: mv ${{ github.workspace }}/ComputeLibrary ${{ github.workspace }}/ComputeLibrary_base

      - name: Build New ComputeLibrary
        uses: ./oneDNN/.github/actions/build-acl
        with:
          toolset: ${{ matrix.config.toolset }}
          build: ${{ matrix.config.build }}
          threading: ${{ matrix.config.threading }}
          acl_hash: ${{ inputs.acl_new_hash || fromJson(steps.get-versions.outputs.output).dependencies.acl }}
          gcc_version: ${{ fromJson(steps.get-versions.outputs.output).dependencies.gcc }}

      - name: Move to ComputeLibrary_new
        run: mv ${{ github.workspace }}/ComputeLibrary ${{ github.workspace }}/ComputeLibrary_new

      - name: Checkout oneDNN base
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{inputs.onednn_base_hash || fromJson(steps.get-versions.outputs.output).dependencies.onednn-base }}
          path: oneDNN_base

      - name: Checkout oneDNN new
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          # when the input is non empty use it otherwise falls back to github.sha
          ref: ${{ inputs.onednn_new_hash != '' && inputs.onednn_new_hash || github.sha }}
          path: oneDNN_new

      - name: Configure oneDNN base
        run: .github/automation/aarch64/build.sh
        working-directory: ${{ github.workspace }}/oneDNN_base
        env:
          ACL_ROOT_DIR: ${{ github.workspace }}/ComputeLibrary_base
          BUILD_TOOLSET: ${{ matrix.config.toolset }}
          CMAKE_BUILD_TYPE: ${{ matrix.config.build }}
          CMAKE_GENERATOR: Ninja
          GCC_VERSION: ${{ fromJson(steps.get-versions.outputs.output).dependencies.gcc }}
          ONEDNN_ACTION: configure
          ONEDNN_TEST_SET: ${{ matrix.config.testset }}
          ONEDNN_THREADING: ${{ matrix.config.threading }}

      - name: Build oneDNN base
        run: .github/automation/aarch64/build.sh
        working-directory: ${{ github.workspace }}/oneDNN_base
        env:
          ONEDNN_ACTION: build

      - name: Configure oneDNN new
        run: .github/automation/aarch64/build.sh
        working-directory: ${{ github.workspace }}/oneDNN_new
        env:
          ACL_ROOT_DIR: ${{ github.workspace }}/ComputeLibrary_new
          BUILD_TOOLSET: ${{ matrix.config.toolset }}
          CMAKE_BUILD_TYPE: ${{ matrix.config.build }}
          CMAKE_GENERATOR: Ninja
          GCC_VERSION: ${{ fromJson(steps.get-versions.outputs.output).dependencies.gcc }}
          ONEDNN_ACTION: configure
          ONEDNN_TEST_SET: ${{ matrix.config.testset }}
          ONEDNN_THREADING: ${{ matrix.config.threading }}

      - name: Build oneDNN new
        run: .github/automation/aarch64/build.sh
        working-directory: ${{ github.workspace }}/oneDNN_new
        env:
          ONEDNN_ACTION: build

      - name: Run nightly performance tests
        if: ${{ inputs.benchdnn_command == '' }}
        shell: bash
        run: |
          OMP_NUM_THREADS=${{ inputs.num_threads || 16 }} bash ${{ github.workspace }}/oneDNN/.github/automation/performance/bench_nightly_performance.sh ${{ github.workspace }}/oneDNN_base/build/tests/benchdnn/benchdnn ${{ github.workspace }}/oneDNN_new/build/tests/benchdnn/benchdnn base.txt new.txt
          python ${{ github.workspace }}/oneDNN/.github/automation/performance/benchdnn_comparison.py base.txt new.txt --out-file perf_table.md

      - name: Update wiki
        if: ${{ (success() || failure()) && inputs.benchdnn_command == '' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/ryo-not-rio/wiki') }}
        uses: ./oneDNN/.github/actions/update-wiki
        with:
          command: add-perf
          title: ${{ matrix.config.name }}
          in-file: perf_table.md

      - name: Run custom performance tests
        if: ${{ inputs.benchdnn_command != '' }}
        shell: bash
        run: |
          OMP_NUM_THREADS=${{ inputs.num_threads || 16 }} \
          bash ${{ github.workspace }}/oneDNN/.github/automation/performance/run_benchdnn_compare.sh \
            "${{ github.workspace }}/oneDNN_base/build/tests/benchdnn/benchdnn" \
            "${{ github.workspace }}/oneDNN_new/build/tests/benchdnn/benchdnn" \
            base.txt new.txt ${{ inputs.benchdnn_command }}

      - name: Print speed comparisons
        if: ${{ (success() || failure()) && inputs.benchdnn_command != '' }}
        run: python3 ${{ github.workspace }}/oneDNN/.github/automation/performance/benchdnn_comparison.py base.txt new.txt --out-file perf_results.md; cat perf_results.md >> $GITHUB_STEP_SUMMARY

  #* This job adds a check named "Nightly Performance AArch64" that represents overall
  #* workflow status and can be used in branch rulesets
  status:
    needs: build-and-test-performance
    runs-on: ubuntu-latest
    name: "Nightly Performance AArch64"
    steps:
      - name: Print success
        run: echo Success
