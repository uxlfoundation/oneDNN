Search.setIndex({"docnames": ["advanced_topics", "build_and_link", "class_dnnl_graph_allocator", "class_dnnl_graph_compiled_partition", "class_dnnl_graph_graph", "class_dnnl_graph_logical_tensor", "class_dnnl_graph_op", "class_dnnl_graph_partition", "class_dnnl_graph_tensor", "class_simple_memory_pool_t", "dev_guide_attributes", "dev_guide_attributes_accumulation_mode", "dev_guide_attributes_deterministic", "dev_guide_attributes_dropout", "dev_guide_attributes_fpmath_mode", "dev_guide_attributes_post_ops", "dev_guide_attributes_quantization", "dev_guide_attributes_rounding_mode", "dev_guide_attributes_scratchpad", "dev_guide_basic_concepts", "dev_guide_batch_normalization", "dev_guide_benchdnn", "dev_guide_binary", "dev_guide_build", "dev_guide_build_options", "dev_guide_c_and_cpp_apis", "dev_guide_concat", "dev_guide_constant_tensor_cache", "dev_guide_conventions", "dev_guide_convolution", "dev_guide_cpu_dispatcher_control", "dev_guide_cpu_isa_hints", "dev_guide_data_types", "dev_guide_dpcpp_interoperability", "dev_guide_eltwise", "dev_guide_examples", "dev_guide_experimental", "dev_guide_graph_basic_concepts", "dev_guide_graph_compiler", "dev_guide_graph_dump", "dev_guide_graph_fusion_patterns", "dev_guide_graph_gated_mlp", "dev_guide_graph_gqa", "dev_guide_graph_low_precision", "dev_guide_graph_sdpa", "dev_guide_graph_sdpa_compressed_kv", "dev_guide_group_normalization", "dev_guide_inference", "dev_guide_inference_and_training_aspects", "dev_guide_inference_int8", "dev_guide_inner_product", "dev_guide_inspecting_jit", "dev_guide_int8_computations", "dev_guide_layer_normalization", "dev_guide_link", "dev_guide_lrn", "dev_guide_matmul", "dev_guide_op_abs", "dev_guide_op_absbackward", "dev_guide_op_add", "dev_guide_op_avgpool", "dev_guide_op_avgpoolbackward", "dev_guide_op_batchnormforwardtraining", "dev_guide_op_batchnorminference", "dev_guide_op_batchnormtrainingbackward", "dev_guide_op_biasadd", "dev_guide_op_biasaddbackward", "dev_guide_op_clamp", "dev_guide_op_clampbackward", "dev_guide_op_concat", "dev_guide_op_convolution", "dev_guide_op_convolutionbackwarddata", "dev_guide_op_convolutionbackwardweights", "dev_guide_op_convtranspose", "dev_guide_op_convtransposebackwarddata", "dev_guide_op_convtransposebackwardweights", "dev_guide_op_dequantize", "dev_guide_op_divide", "dev_guide_op_dynamicdequantize", "dev_guide_op_dynamicquantize", "dev_guide_op_elu", "dev_guide_op_elubackward", "dev_guide_op_end", "dev_guide_op_exp", "dev_guide_op_gelu", "dev_guide_op_gelubackward", "dev_guide_op_genindex", "dev_guide_op_greaterequal", "dev_guide_op_groupnorm", "dev_guide_op_hardsigmoid", "dev_guide_op_hardsigmoidbackward", "dev_guide_op_hardswish", "dev_guide_op_hardswishbackward", "dev_guide_op_interpolate", "dev_guide_op_interpolatebackward", "dev_guide_op_layernorm", "dev_guide_op_layernormbackward", "dev_guide_op_leakyrelu", "dev_guide_op_log", "dev_guide_op_logsoftmax", "dev_guide_op_logsoftmaxbackward", "dev_guide_op_matmul", "dev_guide_op_maximum", "dev_guide_op_maxpool", "dev_guide_op_maxpoolbackward", "dev_guide_op_minimum", "dev_guide_op_mish", "dev_guide_op_mishbackward", "dev_guide_op_multiply", "dev_guide_op_pow", "dev_guide_op_prelu", "dev_guide_op_prelubackward", "dev_guide_op_quantize", "dev_guide_op_reciprocal", "dev_guide_op_reducel1", "dev_guide_op_reducel2", "dev_guide_op_reducemax", "dev_guide_op_reducemean", "dev_guide_op_reducemin", "dev_guide_op_reduceprod", "dev_guide_op_reducesum", "dev_guide_op_relu", "dev_guide_op_relubackward", "dev_guide_op_reorder", "dev_guide_op_round", "dev_guide_op_select", "dev_guide_op_sigmoid", "dev_guide_op_sigmoidbackward", "dev_guide_op_softmax", "dev_guide_op_softmaxbackward", "dev_guide_op_softplus", "dev_guide_op_softplusbackward", "dev_guide_op_sqrt", "dev_guide_op_sqrtbackward", "dev_guide_op_square", "dev_guide_op_squareddifference", "dev_guide_op_staticreshape", "dev_guide_op_statictranspose", "dev_guide_op_subtract", "dev_guide_op_tanh", "dev_guide_op_tanhbackward", "dev_guide_op_typecast", "dev_guide_op_wildcard", "dev_guide_opencl_interoperability", "dev_guide_performance_settings", "dev_guide_persistent_cache", "dev_guide_pooling", "dev_guide_prelu", "dev_guide_primitive_cache", "dev_guide_profilers", "dev_guide_reduction", "dev_guide_reorder", "dev_guide_resampling", "dev_guide_rnn", "dev_guide_shuffle", "dev_guide_softmax", "dev_guide_sum", "dev_guide_threadpool", "dev_guide_training", "dev_guide_training_bf16", "dev_guide_transition_to_dnnl", "dev_guide_ukernel_basic_concepts", "dev_guide_ukernel_brgemm", "dev_guide_ukernel_transform", "dev_guide_understanding_memory_formats", "dev_guide_verbose", "dev_guide_verbose_table", "dev_guide_vtune", "enum_api_kind", "enum_dnnl_accumulation_mode", "enum_dnnl_accumulation_mode_t", "enum_dnnl_alg_kind_t", "enum_dnnl_algorithm", "enum_dnnl_cpu_isa", "enum_dnnl_cpu_isa_hints", "enum_dnnl_cpu_isa_hints_t", "enum_dnnl_cpu_isa_t", "enum_dnnl_data_type_t", "enum_dnnl_engine_kind", "enum_dnnl_engine_kind_t", "enum_dnnl_format_kind_t", "enum_dnnl_format_tag_t", "enum_dnnl_fpmath_mode", "enum_dnnl_fpmath_mode_t", "enum_dnnl_graph_layout_type_t", "enum_dnnl_graph_logical_tensor_data_type", "enum_dnnl_graph_logical_tensor_layout_type", "enum_dnnl_graph_logical_tensor_property_type", "enum_dnnl_graph_op_attr", "enum_dnnl_graph_op_attr_t", "enum_dnnl_graph_op_kind", "enum_dnnl_graph_op_kind_t", "enum_dnnl_graph_partition_policy", "enum_dnnl_graph_partition_policy_t", "enum_dnnl_graph_status", "enum_dnnl_graph_tensor_property_t", "enum_dnnl_memory_data_type", "enum_dnnl_memory_format_kind", "enum_dnnl_memory_format_tag", "enum_dnnl_memory_sparse_encoding", "enum_dnnl_normalization_flags", "enum_dnnl_normalization_flags_t", "enum_dnnl_ocl_interop_memory_kind", "enum_dnnl_ocl_interop_memory_kind_t", "enum_dnnl_pack_type_t", "enum_dnnl_primitive_kind", "enum_dnnl_primitive_kind_t", "enum_dnnl_profiling_data_kind", "enum_dnnl_profiling_data_kind_t", "enum_dnnl_prop_kind", "enum_dnnl_prop_kind_t", "enum_dnnl_query", "enum_dnnl_query_t", "enum_dnnl_rnn_direction", "enum_dnnl_rnn_direction_t", "enum_dnnl_rnn_flags", "enum_dnnl_rnn_flags_t", "enum_dnnl_rounding_mode", "enum_dnnl_rounding_mode_t", "enum_dnnl_scratchpad_mode", "enum_dnnl_scratchpad_mode_t", "enum_dnnl_sparse_encoding_t", "enum_dnnl_status", "enum_dnnl_status_t", "enum_dnnl_stream_flags", "enum_dnnl_stream_flags_t", "enum_dnnl_sycl_interop_memory_kind", "enum_dnnl_sycl_interop_memory_kind_t", "enum_dnnl_ukernel_pack_type", "example_augru.cpp", "example_batch_normalization.cpp", "example_binary.cpp", "example_bnorm_u8_via_binary_postops.cpp", "example_cnn_inference_f32.c", "example_cnn_inference_f32.cpp", "example_cnn_inference_int8.cpp", "example_cnn_training_bf16.cpp", "example_cnn_training_f32.cpp", "example_concat.cpp", "example_convolution.cpp", "example_cpu_brgemm.cpp", "example_cpu_cnn_training_f32.c", "example_cpu_getting_started.cpp", "example_cpu_inference_int8.cpp", "example_cpu_matmul_coo.cpp", "example_cpu_matmul_csr.cpp", "example_cpu_matmul_quantization.cpp", "example_cpu_matmul_weights_compression.cpp", "example_cpu_rnn_inference_f32.cpp", "example_cpu_rnn_inference_int8.cpp", "example_cpu_sgemm_and_matmul.cpp", "example_cpu_single_op_partition.cpp", "example_cross_engine_reorder.c", "example_cross_engine_reorder.cpp", "example_deconvolution.cpp", "example_eltwise.cpp", "example_getting_started.cpp", "example_gpu_opencl_getting_started.cpp", "example_gpu_opencl_interop.cpp", "example_group_normalization.cpp", "example_inference_int8_matmul.cpp", "example_inner_product.cpp", "example_layer_normalization.cpp", "example_lbr_gru.cpp", "example_lrn.cpp", "example_lstm.cpp", "example_matmul.cpp", "example_memory_format_propagation.cpp", "example_performance_profiling.cpp", "example_pooling.cpp", "example_prelu.cpp", "example_reduction.cpp", "example_reorder.cpp", "example_resampling.cpp", "example_rnn_training_f32.cpp", "example_shuffle.cpp", "example_softmax.cpp", "example_sum.cpp", "example_sycl_getting_started.cpp", "example_sycl_interop_buffer.cpp", "example_sycl_single_op_partition.cpp", "example_vanilla_rnn.cpp", "example_weights_decompression_matmul.cpp", "global", "graph_extension", "graph_programming_model", "graph_supported_operations", "group_dnnl_api", "group_dnnl_api_accumulation_mode", "group_dnnl_api_attributes", "group_dnnl_api_batch_normalization", "group_dnnl_api_binary", "group_dnnl_api_blas", "group_dnnl_api_common", "group_dnnl_api_concat", "group_dnnl_api_convolution", "group_dnnl_api_data_types", "group_dnnl_api_deconvolution", "group_dnnl_api_eltwise", "group_dnnl_api_engine", "group_dnnl_api_fpmath_mode", "group_dnnl_api_group_normalization", "group_dnnl_api_inner_product", "group_dnnl_api_interop", "group_dnnl_api_layer_normalization", "group_dnnl_api_lrn", "group_dnnl_api_matmul", "group_dnnl_api_memory", "group_dnnl_api_ocl_interop", "group_dnnl_api_pooling", "group_dnnl_api_prelu", "group_dnnl_api_primitive_cache", "group_dnnl_api_primitives", "group_dnnl_api_primitives_common", "group_dnnl_api_profiling", "group_dnnl_api_reduction", "group_dnnl_api_reorder", "group_dnnl_api_resampling", "group_dnnl_api_rnn", "group_dnnl_api_service", "group_dnnl_api_shuffle", "group_dnnl_api_softmax", "group_dnnl_api_stream", "group_dnnl_api_sum", "group_dnnl_api_sycl_interop", "group_dnnl_api_threadpool_interop", "group_dnnl_api_ukernel", "group_dnnl_api_ukernel_brgemm", "group_dnnl_api_ukernel_transform", "group_dnnl_api_ukernel_utils", "group_dnnl_api_utils", "group_dnnl_graph_api", "group_dnnl_graph_api_allocator", "group_dnnl_graph_api_compiled_partition", "group_dnnl_graph_api_compiled_partition_cache", "group_dnnl_graph_api_constant_tensor_cache", "group_dnnl_graph_api_engine", "group_dnnl_graph_api_graph", "group_dnnl_graph_api_interop", "group_dnnl_graph_api_logical_tensor", "group_dnnl_graph_api_ocl_interop", "group_dnnl_graph_api_op", "group_dnnl_graph_api_partition", "group_dnnl_graph_api_status", "group_dnnl_graph_api_sycl_interop", "group_dnnl_graph_api_tensor", "group_dnnl_graph_api_utils", "index", "interop_with_dpcpp_and_opencl", "namespace_dnnl", "namespace_dnnl_graph", "namespace_dnnl_graph_ocl_interop", "namespace_dnnl_graph_sycl_interop", "namespace_dnnl_ocl_interop", "namespace_dnnl_sycl_interop", "namespace_dnnl_threadpool_interop", "namespace_dnnl_ukernel", "namespace_oneapi", "namespace_std", "namespace_sycl", "orphans", "page_augru_example_cpp", "page_augru_example_cpp_short", "page_batch_normalization_example_cpp", "page_batch_normalization_example_cpp_short", "page_binary_example_cpp", "page_binary_example_cpp_short", "page_bnorm_u8_via_binary_postops_cpp", "page_bnorm_u8_via_binary_postops_cpp_short", "page_cnn_inference_f32_c", "page_cnn_inference_f32_cpp", "page_cnn_inference_int8_cpp", "page_cnn_training_bf16_cpp", "page_cnn_training_f32_cpp", "page_concat_example_cpp", "page_concat_example_cpp_short", "page_convolution_example_cpp", "page_convolution_example_cpp_short", "page_cpu_brgemm_example_cpp", "page_cpu_cnn_training_f32_c", "page_cpu_matmul_coo_cpp", "page_cpu_matmul_csr_cpp", "page_cpu_matmul_quantization_cpp", "page_cpu_matmul_quantization_cpp_short", "page_cpu_matmul_weights_compression_cpp", "page_cpu_rnn_inference_f32_cpp", "page_cpu_rnn_inference_int8_cpp", "page_cpu_sgemm_and_matmul_cpp", "page_cpu_sgemm_and_matmul_cpp_short", "page_cross_engine_reorder_c", "page_cross_engine_reorder_cpp", "page_deconvolution_example_cpp", "page_deconvolution_example_cpp_short", "page_eltwise_example_cpp", "page_eltwise_example_cpp_short", "page_getting_started_cpp", "page_gpu_opencl_interop_cpp", "page_graph_cpu_getting_started_cpp", "page_graph_cpu_inference_int8_cpp", "page_graph_cpu_single_op_partition_cpp", "page_graph_gpu_opencl_getting_started_cpp", "page_graph_sycl_getting_started_cpp", "page_graph_sycl_single_op_partition_cpp", "page_group_normalization_example_cpp", "page_group_normalization_example_cpp_short", "page_inference_int8_matmul_cpp", "page_inference_int8_matmul_cpp_short", "page_inner_product_example_cpp", "page_inner_product_example_cpp_short", "page_layer_normalization_example_cpp", "page_layer_normalization_example_cpp_short", "page_lbr_gru_example_cpp", "page_lbr_gru_example_cpp_short", "page_legal_information", "page_lrn_example_cpp", "page_lrn_example_cpp_short", "page_lstm_example_cpp", "page_lstm_example_cpp_short", "page_matmul_example_cpp", "page_matmul_example_cpp_short", "page_memory_format_propagation_cpp", "page_performance_profiling_cpp", "page_pooling_example_cpp", "page_pooling_example_cpp_short", "page_prelu_example_cpp", "page_prelu_example_cpp_short", "page_reduction_example_cpp", "page_reduction_example_cpp_short", "page_reorder_example_cpp", "page_reorder_example_cpp_short", "page_resampling_example_cpp", "page_resampling_example_cpp_short", "page_rnn_training_f32_cpp", "page_shuffle_example_cpp", "page_shuffle_example_cpp_short", "page_softmax_example_cpp", "page_softmax_example_cpp_short", "page_sum_example_cpp", "page_sum_example_cpp_short", "page_sycl_interop_buffer_cpp", "page_todo", "page_vanilla_rnn_example_cpp", "page_vanilla_rnn_example_cpp_short", "page_weights_decompression_matmul_cpp", "page_weights_decompression_matmul_cpp_short", "performance_profiling_and_inspection", "programming_model", "struct_args_t", "struct_cpu_deletor", "struct_dnnl_augru_backward", "struct_dnnl_augru_backward_primitive_desc", "struct_dnnl_augru_forward", "struct_dnnl_augru_forward_primitive_desc", "struct_dnnl_batch_normalization_backward", "struct_dnnl_batch_normalization_backward_primitive_desc", "struct_dnnl_batch_normalization_forward", "struct_dnnl_batch_normalization_forward_primitive_desc", "struct_dnnl_binary", "struct_dnnl_binary_primitive_desc", "struct_dnnl_brgemm", "struct_dnnl_concat", "struct_dnnl_concat_primitive_desc", "struct_dnnl_convolution_backward_data", "struct_dnnl_convolution_backward_data_primitive_desc", "struct_dnnl_convolution_backward_weights", "struct_dnnl_convolution_backward_weights_primitive_desc", "struct_dnnl_convolution_forward", "struct_dnnl_convolution_forward_primitive_desc", "struct_dnnl_deconvolution_backward_data", "struct_dnnl_deconvolution_backward_data_primitive_desc", "struct_dnnl_deconvolution_backward_weights", "struct_dnnl_deconvolution_backward_weights_primitive_desc", "struct_dnnl_deconvolution_forward", "struct_dnnl_deconvolution_forward_primitive_desc", "struct_dnnl_eltwise_backward", "struct_dnnl_eltwise_backward_primitive_desc", "struct_dnnl_eltwise_forward", "struct_dnnl_eltwise_forward_primitive_desc", "struct_dnnl_engine", "struct_dnnl_engine-2", "struct_dnnl_error", "struct_dnnl_exec_arg_t", "struct_dnnl_graph_inplace_pair_t", "struct_dnnl_graph_logical_tensor_t", "struct_dnnl_group_normalization_backward", "struct_dnnl_group_normalization_backward_primitive_desc", "struct_dnnl_group_normalization_forward", "struct_dnnl_group_normalization_forward_primitive_desc", "struct_dnnl_gru_backward", "struct_dnnl_gru_backward_primitive_desc", "struct_dnnl_gru_forward", "struct_dnnl_gru_forward_primitive_desc", "struct_dnnl_handle", "struct_dnnl_handle_traits", "struct_dnnl_inner_product_backward_data", "struct_dnnl_inner_product_backward_data_primitive_desc", "struct_dnnl_inner_product_backward_weights", "struct_dnnl_inner_product_backward_weights_primitive_desc", "struct_dnnl_inner_product_forward", "struct_dnnl_inner_product_forward_primitive_desc", "struct_dnnl_layer_normalization_backward", "struct_dnnl_layer_normalization_backward_primitive_desc", "struct_dnnl_layer_normalization_forward", "struct_dnnl_layer_normalization_forward_primitive_desc", "struct_dnnl_lbr_augru_backward", "struct_dnnl_lbr_augru_backward_primitive_desc", "struct_dnnl_lbr_augru_forward", "struct_dnnl_lbr_augru_forward_primitive_desc", "struct_dnnl_lbr_gru_backward", "struct_dnnl_lbr_gru_backward_primitive_desc", "struct_dnnl_lbr_gru_forward", "struct_dnnl_lbr_gru_forward_primitive_desc", "struct_dnnl_lrn_backward", "struct_dnnl_lrn_backward_primitive_desc", "struct_dnnl_lrn_forward", "struct_dnnl_lrn_forward_primitive_desc", "struct_dnnl_lstm_backward", "struct_dnnl_lstm_backward_primitive_desc", "struct_dnnl_lstm_forward", "struct_dnnl_lstm_forward_primitive_desc", "struct_dnnl_matmul", "struct_dnnl_matmul_primitive_desc", "struct_dnnl_memory", "struct_dnnl_memory-2", "struct_dnnl_memory_desc", "struct_dnnl_memory_desc-2", "struct_dnnl_pooling_backward", "struct_dnnl_pooling_backward_primitive_desc", "struct_dnnl_pooling_forward", "struct_dnnl_pooling_forward_primitive_desc", "struct_dnnl_post_ops", "struct_dnnl_post_ops-2", "struct_dnnl_prelu_backward", "struct_dnnl_prelu_backward_primitive_desc", "struct_dnnl_prelu_forward", "struct_dnnl_prelu_forward_primitive_desc", "struct_dnnl_primitive", "struct_dnnl_primitive-2", "struct_dnnl_primitive_attr", "struct_dnnl_primitive_attr-2", "struct_dnnl_primitive_desc", "struct_dnnl_primitive_desc-2", "struct_dnnl_primitive_desc_base", "struct_dnnl_reduction", "struct_dnnl_reduction_primitive_desc", "struct_dnnl_reorder", "struct_dnnl_reorder_primitive_desc", "struct_dnnl_resampling_backward", "struct_dnnl_resampling_backward_primitive_desc", "struct_dnnl_resampling_forward", "struct_dnnl_resampling_forward_primitive_desc", "struct_dnnl_rnn_primitive_desc_base", "struct_dnnl_shuffle_backward", "struct_dnnl_shuffle_backward_primitive_desc", "struct_dnnl_shuffle_forward", "struct_dnnl_shuffle_forward_primitive_desc", "struct_dnnl_softmax_backward", "struct_dnnl_softmax_backward_primitive_desc", "struct_dnnl_softmax_forward", "struct_dnnl_softmax_forward_primitive_desc", "struct_dnnl_stream", "struct_dnnl_stream-2", "struct_dnnl_sum", "struct_dnnl_sum_primitive_desc", "struct_dnnl_threadpool_interop_threadpool_iface", "struct_dnnl_transform", "struct_dnnl_ukernel_attr_params", "struct_dnnl_ukernel_attr_params-2", "struct_dnnl_ukernel_brgemm", "struct_dnnl_ukernel_transform", "struct_dnnl_vanilla_rnn_backward", "struct_dnnl_vanilla_rnn_backward_primitive_desc", "struct_dnnl_vanilla_rnn_forward", "struct_dnnl_vanilla_rnn_forward_primitive_desc", "struct_dnnl_version_t", "struct_example_allows_unimplemented", "struct_gemm_dims_t", "struct_gqa_dims_t", "struct_mlp_dims_t", "struct_mqa_dims_t", "struct_sdpa_dims_t", "struct_sycl_deletor", "supported_primitives", "ukernels"], "filenames": ["advanced_topics.rst", "build_and_link.rst", "class_dnnl_graph_allocator.rst", "class_dnnl_graph_compiled_partition.rst", "class_dnnl_graph_graph.rst", "class_dnnl_graph_logical_tensor.rst", "class_dnnl_graph_op.rst", "class_dnnl_graph_partition.rst", "class_dnnl_graph_tensor.rst", "class_simple_memory_pool_t.rst", "dev_guide_attributes.rst", "dev_guide_attributes_accumulation_mode.rst", "dev_guide_attributes_deterministic.rst", "dev_guide_attributes_dropout.rst", "dev_guide_attributes_fpmath_mode.rst", "dev_guide_attributes_post_ops.rst", "dev_guide_attributes_quantization.rst", "dev_guide_attributes_rounding_mode.rst", "dev_guide_attributes_scratchpad.rst", "dev_guide_basic_concepts.rst", "dev_guide_batch_normalization.rst", "dev_guide_benchdnn.rst", "dev_guide_binary.rst", "dev_guide_build.rst", "dev_guide_build_options.rst", "dev_guide_c_and_cpp_apis.rst", "dev_guide_concat.rst", "dev_guide_constant_tensor_cache.rst", "dev_guide_conventions.rst", "dev_guide_convolution.rst", "dev_guide_cpu_dispatcher_control.rst", "dev_guide_cpu_isa_hints.rst", "dev_guide_data_types.rst", "dev_guide_dpcpp_interoperability.rst", "dev_guide_eltwise.rst", "dev_guide_examples.rst", "dev_guide_experimental.rst", "dev_guide_graph_basic_concepts.rst", "dev_guide_graph_compiler.rst", "dev_guide_graph_dump.rst", "dev_guide_graph_fusion_patterns.rst", "dev_guide_graph_gated_mlp.rst", "dev_guide_graph_gqa.rst", "dev_guide_graph_low_precision.rst", "dev_guide_graph_sdpa.rst", "dev_guide_graph_sdpa_compressed_kv.rst", "dev_guide_group_normalization.rst", "dev_guide_inference.rst", "dev_guide_inference_and_training_aspects.rst", "dev_guide_inference_int8.rst", "dev_guide_inner_product.rst", "dev_guide_inspecting_jit.rst", "dev_guide_int8_computations.rst", "dev_guide_layer_normalization.rst", "dev_guide_link.rst", "dev_guide_lrn.rst", "dev_guide_matmul.rst", "dev_guide_op_abs.rst", "dev_guide_op_absbackward.rst", "dev_guide_op_add.rst", "dev_guide_op_avgpool.rst", "dev_guide_op_avgpoolbackward.rst", "dev_guide_op_batchnormforwardtraining.rst", "dev_guide_op_batchnorminference.rst", "dev_guide_op_batchnormtrainingbackward.rst", "dev_guide_op_biasadd.rst", "dev_guide_op_biasaddbackward.rst", "dev_guide_op_clamp.rst", "dev_guide_op_clampbackward.rst", "dev_guide_op_concat.rst", "dev_guide_op_convolution.rst", "dev_guide_op_convolutionbackwarddata.rst", "dev_guide_op_convolutionbackwardweights.rst", "dev_guide_op_convtranspose.rst", "dev_guide_op_convtransposebackwarddata.rst", "dev_guide_op_convtransposebackwardweights.rst", "dev_guide_op_dequantize.rst", "dev_guide_op_divide.rst", "dev_guide_op_dynamicdequantize.rst", "dev_guide_op_dynamicquantize.rst", "dev_guide_op_elu.rst", "dev_guide_op_elubackward.rst", "dev_guide_op_end.rst", "dev_guide_op_exp.rst", "dev_guide_op_gelu.rst", "dev_guide_op_gelubackward.rst", "dev_guide_op_genindex.rst", "dev_guide_op_greaterequal.rst", "dev_guide_op_groupnorm.rst", "dev_guide_op_hardsigmoid.rst", "dev_guide_op_hardsigmoidbackward.rst", "dev_guide_op_hardswish.rst", "dev_guide_op_hardswishbackward.rst", "dev_guide_op_interpolate.rst", "dev_guide_op_interpolatebackward.rst", "dev_guide_op_layernorm.rst", "dev_guide_op_layernormbackward.rst", "dev_guide_op_leakyrelu.rst", "dev_guide_op_log.rst", "dev_guide_op_logsoftmax.rst", "dev_guide_op_logsoftmaxbackward.rst", "dev_guide_op_matmul.rst", "dev_guide_op_maximum.rst", "dev_guide_op_maxpool.rst", "dev_guide_op_maxpoolbackward.rst", "dev_guide_op_minimum.rst", "dev_guide_op_mish.rst", "dev_guide_op_mishbackward.rst", "dev_guide_op_multiply.rst", "dev_guide_op_pow.rst", "dev_guide_op_prelu.rst", "dev_guide_op_prelubackward.rst", "dev_guide_op_quantize.rst", "dev_guide_op_reciprocal.rst", "dev_guide_op_reducel1.rst", "dev_guide_op_reducel2.rst", "dev_guide_op_reducemax.rst", "dev_guide_op_reducemean.rst", "dev_guide_op_reducemin.rst", "dev_guide_op_reduceprod.rst", "dev_guide_op_reducesum.rst", "dev_guide_op_relu.rst", "dev_guide_op_relubackward.rst", "dev_guide_op_reorder.rst", "dev_guide_op_round.rst", "dev_guide_op_select.rst", "dev_guide_op_sigmoid.rst", "dev_guide_op_sigmoidbackward.rst", "dev_guide_op_softmax.rst", "dev_guide_op_softmaxbackward.rst", "dev_guide_op_softplus.rst", "dev_guide_op_softplusbackward.rst", "dev_guide_op_sqrt.rst", "dev_guide_op_sqrtbackward.rst", "dev_guide_op_square.rst", "dev_guide_op_squareddifference.rst", "dev_guide_op_staticreshape.rst", "dev_guide_op_statictranspose.rst", "dev_guide_op_subtract.rst", "dev_guide_op_tanh.rst", "dev_guide_op_tanhbackward.rst", "dev_guide_op_typecast.rst", "dev_guide_op_wildcard.rst", "dev_guide_opencl_interoperability.rst", "dev_guide_performance_settings.rst", "dev_guide_persistent_cache.rst", "dev_guide_pooling.rst", "dev_guide_prelu.rst", "dev_guide_primitive_cache.rst", "dev_guide_profilers.rst", "dev_guide_reduction.rst", "dev_guide_reorder.rst", "dev_guide_resampling.rst", "dev_guide_rnn.rst", "dev_guide_shuffle.rst", "dev_guide_softmax.rst", "dev_guide_sum.rst", "dev_guide_threadpool.rst", "dev_guide_training.rst", "dev_guide_training_bf16.rst", "dev_guide_transition_to_dnnl.rst", "dev_guide_ukernel_basic_concepts.rst", "dev_guide_ukernel_brgemm.rst", "dev_guide_ukernel_transform.rst", "dev_guide_understanding_memory_formats.rst", "dev_guide_verbose.rst", "dev_guide_verbose_table.rst", "dev_guide_vtune.rst", "enum_api_kind.rst", "enum_dnnl_accumulation_mode.rst", "enum_dnnl_accumulation_mode_t.rst", "enum_dnnl_alg_kind_t.rst", "enum_dnnl_algorithm.rst", "enum_dnnl_cpu_isa.rst", "enum_dnnl_cpu_isa_hints.rst", "enum_dnnl_cpu_isa_hints_t.rst", "enum_dnnl_cpu_isa_t.rst", "enum_dnnl_data_type_t.rst", "enum_dnnl_engine_kind.rst", "enum_dnnl_engine_kind_t.rst", "enum_dnnl_format_kind_t.rst", "enum_dnnl_format_tag_t.rst", "enum_dnnl_fpmath_mode.rst", "enum_dnnl_fpmath_mode_t.rst", "enum_dnnl_graph_layout_type_t.rst", "enum_dnnl_graph_logical_tensor_data_type.rst", "enum_dnnl_graph_logical_tensor_layout_type.rst", "enum_dnnl_graph_logical_tensor_property_type.rst", "enum_dnnl_graph_op_attr.rst", "enum_dnnl_graph_op_attr_t.rst", "enum_dnnl_graph_op_kind.rst", "enum_dnnl_graph_op_kind_t.rst", "enum_dnnl_graph_partition_policy.rst", "enum_dnnl_graph_partition_policy_t.rst", "enum_dnnl_graph_status.rst", "enum_dnnl_graph_tensor_property_t.rst", "enum_dnnl_memory_data_type.rst", "enum_dnnl_memory_format_kind.rst", "enum_dnnl_memory_format_tag.rst", "enum_dnnl_memory_sparse_encoding.rst", "enum_dnnl_normalization_flags.rst", "enum_dnnl_normalization_flags_t.rst", "enum_dnnl_ocl_interop_memory_kind.rst", "enum_dnnl_ocl_interop_memory_kind_t.rst", "enum_dnnl_pack_type_t.rst", "enum_dnnl_primitive_kind.rst", "enum_dnnl_primitive_kind_t.rst", "enum_dnnl_profiling_data_kind.rst", "enum_dnnl_profiling_data_kind_t.rst", "enum_dnnl_prop_kind.rst", "enum_dnnl_prop_kind_t.rst", "enum_dnnl_query.rst", "enum_dnnl_query_t.rst", "enum_dnnl_rnn_direction.rst", "enum_dnnl_rnn_direction_t.rst", "enum_dnnl_rnn_flags.rst", "enum_dnnl_rnn_flags_t.rst", "enum_dnnl_rounding_mode.rst", "enum_dnnl_rounding_mode_t.rst", "enum_dnnl_scratchpad_mode.rst", "enum_dnnl_scratchpad_mode_t.rst", "enum_dnnl_sparse_encoding_t.rst", "enum_dnnl_status.rst", "enum_dnnl_status_t.rst", "enum_dnnl_stream_flags.rst", "enum_dnnl_stream_flags_t.rst", "enum_dnnl_sycl_interop_memory_kind.rst", "enum_dnnl_sycl_interop_memory_kind_t.rst", "enum_dnnl_ukernel_pack_type.rst", "example_augru.cpp.rst", "example_batch_normalization.cpp.rst", "example_binary.cpp.rst", "example_bnorm_u8_via_binary_postops.cpp.rst", "example_cnn_inference_f32.c.rst", "example_cnn_inference_f32.cpp.rst", "example_cnn_inference_int8.cpp.rst", "example_cnn_training_bf16.cpp.rst", "example_cnn_training_f32.cpp.rst", "example_concat.cpp.rst", "example_convolution.cpp.rst", "example_cpu_brgemm.cpp.rst", "example_cpu_cnn_training_f32.c.rst", "example_cpu_getting_started.cpp.rst", "example_cpu_inference_int8.cpp.rst", "example_cpu_matmul_coo.cpp.rst", "example_cpu_matmul_csr.cpp.rst", "example_cpu_matmul_quantization.cpp.rst", "example_cpu_matmul_weights_compression.cpp.rst", "example_cpu_rnn_inference_f32.cpp.rst", "example_cpu_rnn_inference_int8.cpp.rst", "example_cpu_sgemm_and_matmul.cpp.rst", "example_cpu_single_op_partition.cpp.rst", "example_cross_engine_reorder.c.rst", "example_cross_engine_reorder.cpp.rst", "example_deconvolution.cpp.rst", "example_eltwise.cpp.rst", "example_getting_started.cpp.rst", "example_gpu_opencl_getting_started.cpp.rst", "example_gpu_opencl_interop.cpp.rst", "example_group_normalization.cpp.rst", "example_inference_int8_matmul.cpp.rst", "example_inner_product.cpp.rst", "example_layer_normalization.cpp.rst", "example_lbr_gru.cpp.rst", "example_lrn.cpp.rst", "example_lstm.cpp.rst", "example_matmul.cpp.rst", "example_memory_format_propagation.cpp.rst", "example_performance_profiling.cpp.rst", "example_pooling.cpp.rst", "example_prelu.cpp.rst", "example_reduction.cpp.rst", "example_reorder.cpp.rst", "example_resampling.cpp.rst", "example_rnn_training_f32.cpp.rst", "example_shuffle.cpp.rst", "example_softmax.cpp.rst", "example_sum.cpp.rst", "example_sycl_getting_started.cpp.rst", "example_sycl_interop_buffer.cpp.rst", "example_sycl_single_op_partition.cpp.rst", "example_vanilla_rnn.cpp.rst", "example_weights_decompression_matmul.cpp.rst", "global.rst", "graph_extension.rst", "graph_programming_model.rst", "graph_supported_operations.rst", "group_dnnl_api.rst", "group_dnnl_api_accumulation_mode.rst", "group_dnnl_api_attributes.rst", "group_dnnl_api_batch_normalization.rst", "group_dnnl_api_binary.rst", "group_dnnl_api_blas.rst", "group_dnnl_api_common.rst", "group_dnnl_api_concat.rst", "group_dnnl_api_convolution.rst", "group_dnnl_api_data_types.rst", "group_dnnl_api_deconvolution.rst", "group_dnnl_api_eltwise.rst", "group_dnnl_api_engine.rst", "group_dnnl_api_fpmath_mode.rst", "group_dnnl_api_group_normalization.rst", "group_dnnl_api_inner_product.rst", "group_dnnl_api_interop.rst", "group_dnnl_api_layer_normalization.rst", "group_dnnl_api_lrn.rst", "group_dnnl_api_matmul.rst", "group_dnnl_api_memory.rst", "group_dnnl_api_ocl_interop.rst", "group_dnnl_api_pooling.rst", "group_dnnl_api_prelu.rst", "group_dnnl_api_primitive_cache.rst", "group_dnnl_api_primitives.rst", "group_dnnl_api_primitives_common.rst", "group_dnnl_api_profiling.rst", "group_dnnl_api_reduction.rst", "group_dnnl_api_reorder.rst", "group_dnnl_api_resampling.rst", "group_dnnl_api_rnn.rst", "group_dnnl_api_service.rst", "group_dnnl_api_shuffle.rst", "group_dnnl_api_softmax.rst", "group_dnnl_api_stream.rst", "group_dnnl_api_sum.rst", "group_dnnl_api_sycl_interop.rst", "group_dnnl_api_threadpool_interop.rst", "group_dnnl_api_ukernel.rst", "group_dnnl_api_ukernel_brgemm.rst", "group_dnnl_api_ukernel_transform.rst", "group_dnnl_api_ukernel_utils.rst", "group_dnnl_api_utils.rst", "group_dnnl_graph_api.rst", "group_dnnl_graph_api_allocator.rst", "group_dnnl_graph_api_compiled_partition.rst", "group_dnnl_graph_api_compiled_partition_cache.rst", "group_dnnl_graph_api_constant_tensor_cache.rst", "group_dnnl_graph_api_engine.rst", "group_dnnl_graph_api_graph.rst", "group_dnnl_graph_api_interop.rst", "group_dnnl_graph_api_logical_tensor.rst", "group_dnnl_graph_api_ocl_interop.rst", "group_dnnl_graph_api_op.rst", "group_dnnl_graph_api_partition.rst", "group_dnnl_graph_api_status.rst", "group_dnnl_graph_api_sycl_interop.rst", "group_dnnl_graph_api_tensor.rst", "group_dnnl_graph_api_utils.rst", "index.rst", "interop_with_dpcpp_and_opencl.rst", "namespace_dnnl.rst", "namespace_dnnl_graph.rst", "namespace_dnnl_graph_ocl_interop.rst", "namespace_dnnl_graph_sycl_interop.rst", "namespace_dnnl_ocl_interop.rst", "namespace_dnnl_sycl_interop.rst", "namespace_dnnl_threadpool_interop.rst", "namespace_dnnl_ukernel.rst", "namespace_oneapi.rst", "namespace_std.rst", "namespace_sycl.rst", "orphans.rst", "page_augru_example_cpp.rst", "page_augru_example_cpp_short.rst", "page_batch_normalization_example_cpp.rst", "page_batch_normalization_example_cpp_short.rst", "page_binary_example_cpp.rst", "page_binary_example_cpp_short.rst", "page_bnorm_u8_via_binary_postops_cpp.rst", "page_bnorm_u8_via_binary_postops_cpp_short.rst", "page_cnn_inference_f32_c.rst", "page_cnn_inference_f32_cpp.rst", "page_cnn_inference_int8_cpp.rst", "page_cnn_training_bf16_cpp.rst", "page_cnn_training_f32_cpp.rst", "page_concat_example_cpp.rst", "page_concat_example_cpp_short.rst", "page_convolution_example_cpp.rst", "page_convolution_example_cpp_short.rst", "page_cpu_brgemm_example_cpp.rst", "page_cpu_cnn_training_f32_c.rst", "page_cpu_matmul_coo_cpp.rst", "page_cpu_matmul_csr_cpp.rst", "page_cpu_matmul_quantization_cpp.rst", "page_cpu_matmul_quantization_cpp_short.rst", "page_cpu_matmul_weights_compression_cpp.rst", "page_cpu_rnn_inference_f32_cpp.rst", "page_cpu_rnn_inference_int8_cpp.rst", "page_cpu_sgemm_and_matmul_cpp.rst", "page_cpu_sgemm_and_matmul_cpp_short.rst", "page_cross_engine_reorder_c.rst", "page_cross_engine_reorder_cpp.rst", "page_deconvolution_example_cpp.rst", "page_deconvolution_example_cpp_short.rst", "page_eltwise_example_cpp.rst", "page_eltwise_example_cpp_short.rst", "page_getting_started_cpp.rst", "page_gpu_opencl_interop_cpp.rst", "page_graph_cpu_getting_started_cpp.rst", "page_graph_cpu_inference_int8_cpp.rst", "page_graph_cpu_single_op_partition_cpp.rst", "page_graph_gpu_opencl_getting_started_cpp.rst", "page_graph_sycl_getting_started_cpp.rst", "page_graph_sycl_single_op_partition_cpp.rst", "page_group_normalization_example_cpp.rst", "page_group_normalization_example_cpp_short.rst", "page_inference_int8_matmul_cpp.rst", "page_inference_int8_matmul_cpp_short.rst", "page_inner_product_example_cpp.rst", "page_inner_product_example_cpp_short.rst", "page_layer_normalization_example_cpp.rst", "page_layer_normalization_example_cpp_short.rst", "page_lbr_gru_example_cpp.rst", "page_lbr_gru_example_cpp_short.rst", "page_legal_information.rst", "page_lrn_example_cpp.rst", "page_lrn_example_cpp_short.rst", "page_lstm_example_cpp.rst", "page_lstm_example_cpp_short.rst", "page_matmul_example_cpp.rst", "page_matmul_example_cpp_short.rst", "page_memory_format_propagation_cpp.rst", "page_performance_profiling_cpp.rst", "page_pooling_example_cpp.rst", "page_pooling_example_cpp_short.rst", "page_prelu_example_cpp.rst", "page_prelu_example_cpp_short.rst", "page_reduction_example_cpp.rst", "page_reduction_example_cpp_short.rst", "page_reorder_example_cpp.rst", "page_reorder_example_cpp_short.rst", "page_resampling_example_cpp.rst", "page_resampling_example_cpp_short.rst", "page_rnn_training_f32_cpp.rst", "page_shuffle_example_cpp.rst", "page_shuffle_example_cpp_short.rst", "page_softmax_example_cpp.rst", "page_softmax_example_cpp_short.rst", "page_sum_example_cpp.rst", "page_sum_example_cpp_short.rst", "page_sycl_interop_buffer_cpp.rst", "page_todo.rst", "page_vanilla_rnn_example_cpp.rst", "page_vanilla_rnn_example_cpp_short.rst", "page_weights_decompression_matmul_cpp.rst", "page_weights_decompression_matmul_cpp_short.rst", "performance_profiling_and_inspection.rst", "programming_model.rst", "struct_args_t.rst", "struct_cpu_deletor.rst", "struct_dnnl_augru_backward.rst", "struct_dnnl_augru_backward_primitive_desc.rst", "struct_dnnl_augru_forward.rst", "struct_dnnl_augru_forward_primitive_desc.rst", "struct_dnnl_batch_normalization_backward.rst", "struct_dnnl_batch_normalization_backward_primitive_desc.rst", "struct_dnnl_batch_normalization_forward.rst", "struct_dnnl_batch_normalization_forward_primitive_desc.rst", "struct_dnnl_binary.rst", "struct_dnnl_binary_primitive_desc.rst", "struct_dnnl_brgemm.rst", "struct_dnnl_concat.rst", "struct_dnnl_concat_primitive_desc.rst", "struct_dnnl_convolution_backward_data.rst", "struct_dnnl_convolution_backward_data_primitive_desc.rst", "struct_dnnl_convolution_backward_weights.rst", "struct_dnnl_convolution_backward_weights_primitive_desc.rst", "struct_dnnl_convolution_forward.rst", "struct_dnnl_convolution_forward_primitive_desc.rst", "struct_dnnl_deconvolution_backward_data.rst", "struct_dnnl_deconvolution_backward_data_primitive_desc.rst", "struct_dnnl_deconvolution_backward_weights.rst", "struct_dnnl_deconvolution_backward_weights_primitive_desc.rst", "struct_dnnl_deconvolution_forward.rst", "struct_dnnl_deconvolution_forward_primitive_desc.rst", "struct_dnnl_eltwise_backward.rst", "struct_dnnl_eltwise_backward_primitive_desc.rst", "struct_dnnl_eltwise_forward.rst", "struct_dnnl_eltwise_forward_primitive_desc.rst", "struct_dnnl_engine.rst", "struct_dnnl_engine-2.rst", "struct_dnnl_error.rst", "struct_dnnl_exec_arg_t.rst", "struct_dnnl_graph_inplace_pair_t.rst", "struct_dnnl_graph_logical_tensor_t.rst", "struct_dnnl_group_normalization_backward.rst", "struct_dnnl_group_normalization_backward_primitive_desc.rst", "struct_dnnl_group_normalization_forward.rst", "struct_dnnl_group_normalization_forward_primitive_desc.rst", "struct_dnnl_gru_backward.rst", "struct_dnnl_gru_backward_primitive_desc.rst", "struct_dnnl_gru_forward.rst", "struct_dnnl_gru_forward_primitive_desc.rst", "struct_dnnl_handle.rst", "struct_dnnl_handle_traits.rst", "struct_dnnl_inner_product_backward_data.rst", "struct_dnnl_inner_product_backward_data_primitive_desc.rst", "struct_dnnl_inner_product_backward_weights.rst", "struct_dnnl_inner_product_backward_weights_primitive_desc.rst", "struct_dnnl_inner_product_forward.rst", "struct_dnnl_inner_product_forward_primitive_desc.rst", "struct_dnnl_layer_normalization_backward.rst", "struct_dnnl_layer_normalization_backward_primitive_desc.rst", "struct_dnnl_layer_normalization_forward.rst", "struct_dnnl_layer_normalization_forward_primitive_desc.rst", "struct_dnnl_lbr_augru_backward.rst", "struct_dnnl_lbr_augru_backward_primitive_desc.rst", "struct_dnnl_lbr_augru_forward.rst", "struct_dnnl_lbr_augru_forward_primitive_desc.rst", "struct_dnnl_lbr_gru_backward.rst", "struct_dnnl_lbr_gru_backward_primitive_desc.rst", "struct_dnnl_lbr_gru_forward.rst", "struct_dnnl_lbr_gru_forward_primitive_desc.rst", "struct_dnnl_lrn_backward.rst", "struct_dnnl_lrn_backward_primitive_desc.rst", "struct_dnnl_lrn_forward.rst", "struct_dnnl_lrn_forward_primitive_desc.rst", "struct_dnnl_lstm_backward.rst", "struct_dnnl_lstm_backward_primitive_desc.rst", "struct_dnnl_lstm_forward.rst", "struct_dnnl_lstm_forward_primitive_desc.rst", "struct_dnnl_matmul.rst", "struct_dnnl_matmul_primitive_desc.rst", "struct_dnnl_memory.rst", "struct_dnnl_memory-2.rst", "struct_dnnl_memory_desc.rst", "struct_dnnl_memory_desc-2.rst", "struct_dnnl_pooling_backward.rst", "struct_dnnl_pooling_backward_primitive_desc.rst", "struct_dnnl_pooling_forward.rst", "struct_dnnl_pooling_forward_primitive_desc.rst", "struct_dnnl_post_ops.rst", "struct_dnnl_post_ops-2.rst", "struct_dnnl_prelu_backward.rst", "struct_dnnl_prelu_backward_primitive_desc.rst", "struct_dnnl_prelu_forward.rst", "struct_dnnl_prelu_forward_primitive_desc.rst", "struct_dnnl_primitive.rst", "struct_dnnl_primitive-2.rst", "struct_dnnl_primitive_attr.rst", "struct_dnnl_primitive_attr-2.rst", "struct_dnnl_primitive_desc.rst", "struct_dnnl_primitive_desc-2.rst", "struct_dnnl_primitive_desc_base.rst", "struct_dnnl_reduction.rst", "struct_dnnl_reduction_primitive_desc.rst", "struct_dnnl_reorder.rst", "struct_dnnl_reorder_primitive_desc.rst", "struct_dnnl_resampling_backward.rst", "struct_dnnl_resampling_backward_primitive_desc.rst", "struct_dnnl_resampling_forward.rst", "struct_dnnl_resampling_forward_primitive_desc.rst", "struct_dnnl_rnn_primitive_desc_base.rst", "struct_dnnl_shuffle_backward.rst", "struct_dnnl_shuffle_backward_primitive_desc.rst", "struct_dnnl_shuffle_forward.rst", "struct_dnnl_shuffle_forward_primitive_desc.rst", "struct_dnnl_softmax_backward.rst", "struct_dnnl_softmax_backward_primitive_desc.rst", "struct_dnnl_softmax_forward.rst", "struct_dnnl_softmax_forward_primitive_desc.rst", "struct_dnnl_stream.rst", "struct_dnnl_stream-2.rst", "struct_dnnl_sum.rst", "struct_dnnl_sum_primitive_desc.rst", "struct_dnnl_threadpool_interop_threadpool_iface.rst", "struct_dnnl_transform.rst", "struct_dnnl_ukernel_attr_params.rst", "struct_dnnl_ukernel_attr_params-2.rst", "struct_dnnl_ukernel_brgemm.rst", "struct_dnnl_ukernel_transform.rst", "struct_dnnl_vanilla_rnn_backward.rst", "struct_dnnl_vanilla_rnn_backward_primitive_desc.rst", "struct_dnnl_vanilla_rnn_forward.rst", "struct_dnnl_vanilla_rnn_forward_primitive_desc.rst", "struct_dnnl_version_t.rst", "struct_example_allows_unimplemented.rst", "struct_gemm_dims_t.rst", "struct_gqa_dims_t.rst", "struct_mlp_dims_t.rst", "struct_mqa_dims_t.rst", "struct_sdpa_dims_t.rst", "struct_sycl_deletor.rst", "supported_primitives.rst", "ukernels.rst"], "titles": ["Advanced Topics", "Building and Linking", "class dnnl::graph::allocator", "class dnnl::graph::compiled_partition", "class dnnl::graph::graph", "class dnnl::graph::logical_tensor", "class dnnl::graph::op", "class dnnl::graph::partition", "class dnnl::graph::tensor", "class simple_memory_pool_t", "Primitive Attributes", "Primitive Attributes: accumulation mode", "Primitive Attributes: deterministic", "Primitive Attributes: dropout", "Primitive Attributes: floating-point math mode", "Primitive Attributes: Post-ops", "Primitive Attributes: Quantization", "Primitive Attributes: rounding mode", "Primitive Attributes: Scratchpad", "Basic Concepts", "Batch Normalization", "Benchmarking Performance", "Binary", "Build from Source", "Build Options", "API", "Concat", "Constant Tensor Cache", "Naming Conventions", "Convolution", "CPU Dispatcher Control", "CPU ISA Hints", "Data Types", "DPC++ Interoperability", "Eltwise", "Examples", "Experimental features", "Basic Concepts", "Graph Compiler", "Graph Dump", "Fusion Patterns", "Gated Multi-Layer Perceptron (Gated-MLP)", "Grouped Query Attention (GQA)", "Low Precision", "Scaled Dot-Product Attention (SDPA)", "SDPA with Compressed Key and Value", "Group Normalization", "Inference", "Inference and Training Aspects", "Int8 Inference", "Inner Product", "Inspecting JIT Code", "Nuances of int8 Computations", "Layer Normalization", "Linking to the Library", "Local Response Normalization (LRN)", "Matrix Multiplication", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "GenIndex", "GreaterEqual", "GroupNorm", "HardSigmoid", "HardSigmoidBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "Maximum", "MaxPool", "MaxPoolBackward", "Minimum", "Mish", "MishBackward", "Multiply", "Pow", "PReLU", "PReLUBackward", "Quantize", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReLU", "ReLUBackward", "Reorder", "Round", "Select", "Sigmoid", "SigmoidBackward", "SoftMax", "SoftMaxBackward", "SoftPlus", "SoftPlusBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "OpenCL Interoperability", "Configuring oneDNN for Benchmarking", "Persistent Cache", "Pooling", "PReLU", "Primitive Cache", "Profiling oneDNN Performance", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sum", "Using oneDNN with Threadpool-Based Threading", "Training", "Bfloat16 Training", "Transitioning from Intel MKL-DNN to oneDNN", "Basic Concepts", "Batch-Reduce General Matrix Multiplication", "Data transformation", "Understanding Memory Formats", "Verbose Mode", "Verbose Message Catalogue", "Profiling with VTune(TM) Profiler", "enum api_kind", "enum dnnl::accumulation_mode", "enum dnnl_accumulation_mode_t", "enum dnnl_alg_kind_t", "enum dnnl::algorithm", "enum dnnl::cpu_isa", "enum dnnl::cpu_isa_hints", "enum dnnl_cpu_isa_hints_t", "enum dnnl_cpu_isa_t", "enum dnnl_data_type_t", "enum dnnl::engine::kind", "enum dnnl_engine_kind_t", "enum dnnl_format_kind_t", "enum dnnl_format_tag_t", "enum dnnl::fpmath_mode", "enum dnnl_fpmath_mode_t", "enum dnnl_graph_layout_type_t", "enum dnnl::graph::logical_tensor::data_type", "enum dnnl::graph::logical_tensor::layout_type", "enum dnnl::graph::logical_tensor::property_type", "enum dnnl::graph::op::attr", "enum dnnl_graph_op_attr_t", "enum dnnl::graph::op::kind", "enum dnnl_graph_op_kind_t", "enum dnnl::graph::partition::policy", "enum dnnl_graph_partition_policy_t", "enum dnnl::graph::status", "enum dnnl_graph_tensor_property_t", "enum dnnl::memory::data_type", "enum dnnl::memory::format_kind", "enum dnnl::memory::format_tag", "enum dnnl::memory::sparse_encoding", "enum dnnl::normalization_flags", "enum dnnl_normalization_flags_t", "enum dnnl::ocl_interop::memory_kind", "enum dnnl_ocl_interop_memory_kind_t", "enum dnnl_pack_type_t", "enum dnnl::primitive::kind", "enum dnnl_primitive_kind_t", "enum dnnl::profiling_data_kind", "enum dnnl_profiling_data_kind_t", "enum dnnl::prop_kind", "enum dnnl_prop_kind_t", "enum dnnl::query", "enum dnnl_query_t", "enum dnnl::rnn_direction", "enum dnnl_rnn_direction_t", "enum dnnl::rnn_flags", "enum dnnl_rnn_flags_t", "enum dnnl::rounding_mode", "enum dnnl_rounding_mode_t", "enum dnnl::scratchpad_mode", "enum dnnl_scratchpad_mode_t", "enum dnnl_sparse_encoding_t", "enum dnnl::status", "enum dnnl_status_t", "enum dnnl::stream::flags", "enum dnnl_stream_flags_t", "enum dnnl::sycl_interop::memory_kind", "enum dnnl_sycl_interop_memory_kind_t", "enum dnnl::ukernel::pack_type", "augru.cpp", "batch_normalization.cpp", "binary.cpp", "bnorm_u8_via_binary_postops.cpp", "cnn_inference_f32.c", "cnn_inference_f32.cpp", "cnn_inference_int8.cpp", "cnn_training_bf16.cpp", "cnn_training_f32.cpp", "concat.cpp", "convolution.cpp", "cpu_brgemm.cpp", "cpu_cnn_training_f32.c", "cpu_getting_started.cpp", "cpu_inference_int8.cpp", "cpu_matmul_coo.cpp", "cpu_matmul_csr.cpp", "cpu_matmul_quantization.cpp", "cpu_matmul_weights_compression.cpp", "cpu_rnn_inference_f32.cpp", "cpu_rnn_inference_int8.cpp", "cpu_sgemm_and_matmul.cpp", "cpu_single_op_partition.cpp", "cross_engine_reorder.c", "cross_engine_reorder.cpp", "deconvolution.cpp", "eltwise.cpp", "getting_started.cpp", "gpu_opencl_getting_started.cpp", "gpu_opencl_interop.cpp", "group_normalization.cpp", "inference_int8_matmul.cpp", "inner_product.cpp", "layer_normalization.cpp", "lbr_gru.cpp", "lrn.cpp", "lstm.cpp", "matmul.cpp", "memory_format_propagation.cpp", "performance_profiling.cpp", "pooling.cpp", "prelu.cpp", "reduction.cpp", "reorder.cpp", "resampling.cpp", "rnn_training_f32.cpp", "shuffle.cpp", "softmax.cpp", "sum.cpp", "sycl_getting_started.cpp", "sycl_interop_buffer.cpp", "sycl_single_op_partition.cpp", "vanilla_rnn.cpp", "weights_decompression_matmul.cpp", "Global Namespace", "Graph Extension", "Programming Model", "Supported Operations", "oneDNN API", "Accumulation Mode", "Attributes", "Batch Normalization", "Binary", "BLAS functions", "Common API", "Concat", "Convolution", "Data types", "Deconvolution", "Eltwise", "Engine", "Floating-point Math Mode", "Group Normalization", "Inner Product", "Runtime interoperability API", "Layer Normalization", "LRN", "Matrix Multiplication", "Memory", "OpenCL interoperability API", "Pooling", "PReLU", "Primitive Cache", "Primitives", "Common", "Profiling", "Reduction", "Reorder", "Resampling", "RNN", "Service", "Shuffle", "Softmax", "Stream", "Sum", "SYCL interoperability API", "Threadpool interoperability API", "Ukernels", "BRGeMM ukernel", "Transform ukernel", "ukernel utils", "Utilities", "Graph API", "Allocator", "Compiled Partition", "Compiled Partition Cache", "Constant Tensor Cache", "Engine", "Graph", "Runtime interoperability API", "Logical Tensor", "OpenCL interoperability API", "Op", "Partition", "Status", "SYCL interoperability API", "Tensor", "Utilities", "oneAPI Deep Neural Network Library Developer Guide and Reference", "Interoperability with DPC++ and OpenCL", "namespace dnnl", "namespace dnnl::graph", "namespace dnnl::graph::ocl_interop", "namespace dnnl::graph::sycl_interop", "namespace dnnl::ocl_interop", "namespace dnnl::sycl_interop", "namespace dnnl::threadpool_interop", "namespace dnnl::ukernel", "namespace oneapi", "namespace std", "namespace sycl", "Orphans", "AUGRU RNN Primitive Example", "&lt;Untitled&gt;", "Batch Normalization Primitive Example", "&lt;Untitled&gt;", "Binary Primitive Example", "&lt;Untitled&gt;", "Bnorm u8 by binary post-ops example", "&lt;Untitled&gt;", "CNN f32 inference example", "CNN f32 inference example", "CNN int8 inference example", "CNN bf16 training example", "CNN f32 training example", "Concat Primitive Example", "&lt;Untitled&gt;", "Convolution Primitive Example", "&lt;Untitled&gt;", "BRGeMM ukernel example", "CNN f32 training example", "MatMul Primitive Example", "MatMul Primitive Example", "MatMul Tutorial: Quantization", "&lt;Untitled&gt;", "MatMul Primitive Example", "RNN f32 inference example", "RNN int8 inference example", "MatMul Tutorial: Comparison with SGEMM", "&lt;Untitled&gt;", "Reorder between CPU and GPU engines", "Reorder between CPU and GPU engines", "Deconvolution Primitive Example", "&lt;Untitled&gt;", "Element-Wise Primitive Example", "&lt;Untitled&gt;", "Getting started", "Getting started on GPU with OpenCL extensions API", "Getting started on CPU with Graph API", "Convolution int8 inference example with Graph API", "Single op partition on CPU", "Getting started with OpenCL extensions and Graph API", "Getting started with SYCL extensions API and Graph API", "Single op partition on GPU", "Group Normalization Primitive Example", "&lt;Untitled&gt;", "MatMul Tutorial: INT8 Inference", "&lt;Untitled&gt;", "Inner Product Primitive Example", "&lt;Untitled&gt;", "Layer Normalization Primitive Example", "&lt;Untitled&gt;", "Linear-Before-Reset GRU RNN Primitive Example", "&lt;Untitled&gt;", "Legal Information", "Local Response Normalization Primitive Example", "&lt;Untitled&gt;", "LSTM RNN Primitive Example", "&lt;Untitled&gt;", "Matmul Primitive Example", "&lt;Untitled&gt;", "Memory Format Propagation", "Performance Profiling Example", "Pooling Primitive Example", "&lt;Untitled&gt;", "Primitive Example", "&lt;Untitled&gt;", "Reduction Primitive Example", "&lt;Untitled&gt;", "Reorder Primitive Example", "&lt;Untitled&gt;", "Resampling Primitive Example", "&lt;Untitled&gt;", "RNN f32 training example", "Shuffle Primitive Example", "&lt;Untitled&gt;", "Softmax Primitive Example", "&lt;Untitled&gt;", "Sum Primitive Example", "&lt;Untitled&gt;", "Getting started on both CPU and GPU with SYCL extensions API", "Todo List", "Vanilla RNN Primitive Example", "&lt;Untitled&gt;", "MatMul Tutorial: weights decompression", "&lt;Untitled&gt;", "Performance Profiling and Inspection", "Programming Model", "struct args_t", "struct cpu_deletor", "struct dnnl::augru_backward", "struct dnnl::augru_backward::primitive_desc", "struct dnnl::augru_forward", "struct dnnl::augru_forward::primitive_desc", "struct dnnl::batch_normalization_backward", "struct dnnl::batch_normalization_backward::primitive_desc", "struct dnnl::batch_normalization_forward", "struct dnnl::batch_normalization_forward::primitive_desc", "struct dnnl::binary", "struct dnnl::binary::primitive_desc", "struct dnnl_brgemm", "struct dnnl::concat", "struct dnnl::concat::primitive_desc", "struct dnnl::convolution_backward_data", "struct dnnl::convolution_backward_data::primitive_desc", "struct dnnl::convolution_backward_weights", "struct dnnl::convolution_backward_weights::primitive_desc", "struct dnnl::convolution_forward", "struct dnnl::convolution_forward::primitive_desc", "struct dnnl::deconvolution_backward_data", "struct dnnl::deconvolution_backward_data::primitive_desc", "struct dnnl::deconvolution_backward_weights", "struct dnnl::deconvolution_backward_weights::primitive_desc", "struct dnnl::deconvolution_forward", "struct dnnl::deconvolution_forward::primitive_desc", "struct dnnl::eltwise_backward", "struct dnnl::eltwise_backward::primitive_desc", "struct dnnl::eltwise_forward", "struct dnnl::eltwise_forward::primitive_desc", "struct dnnl_engine", "struct dnnl::engine", "struct dnnl::error", "struct dnnl_exec_arg_t", "struct dnnl_graph_inplace_pair_t", "struct dnnl_graph_logical_tensor_t", "struct dnnl::group_normalization_backward", "struct dnnl::group_normalization_backward::primitive_desc", "struct dnnl::group_normalization_forward", "struct dnnl::group_normalization_forward::primitive_desc", "struct dnnl::gru_backward", "struct dnnl::gru_backward::primitive_desc", "struct dnnl::gru_forward", "struct dnnl::gru_forward::primitive_desc", "template struct dnnl::handle", "template struct dnnl::handle_traits", "struct dnnl::inner_product_backward_data", "struct dnnl::inner_product_backward_data::primitive_desc", "struct dnnl::inner_product_backward_weights", "struct dnnl::inner_product_backward_weights::primitive_desc", "struct dnnl::inner_product_forward", "struct dnnl::inner_product_forward::primitive_desc", "struct dnnl::layer_normalization_backward", "struct dnnl::layer_normalization_backward::primitive_desc", "struct dnnl::layer_normalization_forward", "struct dnnl::layer_normalization_forward::primitive_desc", "struct dnnl::lbr_augru_backward", "struct dnnl::lbr_augru_backward::primitive_desc", "struct dnnl::lbr_augru_forward", "struct dnnl::lbr_augru_forward::primitive_desc", "struct dnnl::lbr_gru_backward", "struct dnnl::lbr_gru_backward::primitive_desc", "struct dnnl::lbr_gru_forward", "struct dnnl::lbr_gru_forward::primitive_desc", "struct dnnl::lrn_backward", "struct dnnl::lrn_backward::primitive_desc", "struct dnnl::lrn_forward", "struct dnnl::lrn_forward::primitive_desc", "struct dnnl::lstm_backward", "struct dnnl::lstm_backward::primitive_desc", "struct dnnl::lstm_forward", "struct dnnl::lstm_forward::primitive_desc", "struct dnnl::matmul", "struct dnnl::matmul::primitive_desc", "struct dnnl_memory", "struct dnnl::memory", "struct dnnl_memory_desc", "struct dnnl::memory::desc", "struct dnnl::pooling_backward", "struct dnnl::pooling_backward::primitive_desc", "struct dnnl::pooling_forward", "struct dnnl::pooling_forward::primitive_desc", "struct dnnl_post_ops", "struct dnnl::post_ops", "struct dnnl::prelu_backward", "struct dnnl::prelu_backward::primitive_desc", "struct dnnl::prelu_forward", "struct dnnl::prelu_forward::primitive_desc", "struct dnnl_primitive", "struct dnnl::primitive", "struct dnnl_primitive_attr", "struct dnnl::primitive_attr", "struct dnnl_primitive_desc", "struct dnnl::primitive_desc", "struct dnnl::primitive_desc_base", "struct dnnl::reduction", "struct dnnl::reduction::primitive_desc", "struct dnnl::reorder", "struct dnnl::reorder::primitive_desc", "struct dnnl::resampling_backward", "struct dnnl::resampling_backward::primitive_desc", "struct dnnl::resampling_forward", "struct dnnl::resampling_forward::primitive_desc", "struct dnnl::rnn_primitive_desc_base", "struct dnnl::shuffle_backward", "struct dnnl::shuffle_backward::primitive_desc", "struct dnnl::shuffle_forward", "struct dnnl::shuffle_forward::primitive_desc", "struct dnnl::softmax_backward", "struct dnnl::softmax_backward::primitive_desc", "struct dnnl::softmax_forward", "struct dnnl::softmax_forward::primitive_desc", "struct dnnl_stream", "struct dnnl::stream", "struct dnnl::sum", "struct dnnl::sum::primitive_desc", "struct dnnl::threadpool_interop::threadpool_iface", "struct dnnl_transform", "struct dnnl_ukernel_attr_params", "struct dnnl::ukernel::attr_params", "struct dnnl::ukernel::brgemm", "struct dnnl::ukernel::transform", "struct dnnl::vanilla_rnn_backward", "struct dnnl::vanilla_rnn_backward::primitive_desc", "struct dnnl::vanilla_rnn_forward", "struct dnnl::vanilla_rnn_forward::primitive_desc", "struct dnnl_version_t", "struct example_allows_unimplemented", "struct gemm_dims_t", "struct gqa_dims_t", "struct mlp_dims_t", "struct mqa_dims_t", "struct sdpa_dims_t", "struct sycl_deletor", "Supported Primitives", "Ukernels"], "terms": {"transit": 0, "from": [0, 1, 3, 4, 7, 10, 11, 13, 14, 15, 16, 18, 19, 24, 26, 28, 29, 34, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 66, 78, 79, 93, 94, 95, 96, 99, 100, 101, 110, 111, 114, 115, 116, 117, 118, 119, 120, 123, 125, 128, 129, 136, 137, 141, 144, 145, 146, 148, 149, 151, 153, 154, 155, 161, 162, 163, 164, 165, 166, 171, 172, 181, 198, 201, 213, 214, 219, 220, 229, 230, 231, 232, 233, 236, 237, 239, 240, 241, 242, 243, 246, 247, 248, 249, 251, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 288, 289, 299, 300, 304, 307, 308, 313, 318, 327, 333, 337, 342, 351, 352, 353, 354, 361, 362, 363, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 384, 385, 386, 391, 392, 393, 395, 396, 397, 403, 405, 407, 408, 409, 411, 412, 414, 416, 417, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 568, 570, 571, 572, 573], "intel": [0, 24, 29, 30, 36, 41, 42, 44, 45, 51, 56, 143, 144, 151, 159, 162, 163, 165, 173, 176, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 347, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 396, 403, 405, 407, 409, 411, 413, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443], "mkl": 0, "dnn": [0, 13, 32, 164], "onednn": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 143, 145, 148, 151, 152, 153, 159, 161, 164, 165, 166, 167, 181, 246, 250, 256, 258, 268, 279, 308, 319, 325, 331, 336, 339, 340, 344, 347, 349, 350, 353, 355, 371, 382, 385, 386, 387, 397, 398, 399, 400, 401, 402, 420, 421, 445, 480, 483, 492, 493, 564], "understand": [0, 37, 181, 307, 420], "memori": [0, 3, 5, 8, 10, 11, 15, 16, 20, 22, 25, 26, 29, 34, 35, 36, 37, 38, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 136, 137, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 159, 162, 163, 165, 169, 170, 171, 172, 177, 180, 181, 194, 202, 203, 211, 212, 215, 216, 219, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 301, 302, 304, 305, 306, 308, 309, 310, 313, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 332, 333, 339, 340, 344, 345, 349, 353, 354, 355, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 391, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 438, 441, 442, 443, 444, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573, 576], "format": [0, 15, 16, 19, 20, 22, 26, 29, 34, 35, 36, 38, 46, 47, 48, 49, 50, 53, 55, 56, 70, 71, 72, 73, 74, 75, 93, 94, 110, 111, 146, 147, 149, 150, 151, 152, 153, 154, 156, 161, 162, 163, 165, 166, 180, 181, 197, 198, 199, 211, 212, 221, 233, 234, 236, 237, 240, 241, 243, 244, 245, 246, 256, 260, 261, 267, 268, 274, 282, 294, 307, 313, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 391, 392, 395, 396, 398, 403, 404, 405, 407, 408, 411, 412, 416, 417, 432, 437, 438, 439, 441, 442, 443, 446, 450, 454, 461, 463, 465, 469, 471, 475, 485, 489, 495, 497, 501, 505, 509, 513, 517, 523, 525, 527, 533, 548, 553, 557, 571], "nuanc": [0, 16, 26, 32, 292, 325, 355], "int8": [0, 10, 15, 16, 26, 29, 32, 35, 44, 45, 46, 48, 50, 53, 56, 76, 112, 150, 153, 155, 235, 243, 246, 249, 260, 289, 292, 325, 355, 360, 382, 406, 539], "comput": [0, 3, 4, 6, 7, 10, 11, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 32, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 55, 56, 58, 60, 62, 66, 68, 70, 71, 72, 73, 74, 75, 81, 85, 90, 92, 94, 95, 96, 100, 101, 103, 107, 111, 122, 127, 129, 131, 133, 140, 141, 142, 144, 146, 147, 149, 152, 153, 154, 155, 157, 159, 161, 162, 163, 164, 165, 166, 169, 170, 174, 175, 187, 195, 200, 201, 209, 210, 229, 230, 231, 232, 238, 239, 240, 246, 247, 248, 249, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 289, 290, 292, 296, 299, 301, 302, 304, 307, 308, 312, 313, 315, 317, 318, 321, 322, 324, 325, 333, 337, 341, 342, 353, 354, 355, 361, 363, 365, 367, 370, 371, 374, 376, 378, 382, 383, 384, 385, 386, 390, 391, 393, 395, 396, 403, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 454, 482, 485, 501, 531, 537, 545, 557, 559], "primit": [0, 20, 22, 24, 26, 28, 29, 32, 33, 34, 37, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 63, 70, 123, 143, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 163, 164, 168, 171, 180, 181, 194, 197, 198, 199, 200, 201, 206, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 287, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 347, 349, 353, 354, 360, 362, 364, 366, 367, 369, 370, 371, 372, 373, 375, 377, 379, 382, 385, 386, 387, 388, 392, 394, 404, 405, 406, 408, 410, 412, 415, 417, 419, 421, 423, 425, 427, 429, 431, 432, 434, 436, 438, 442, 443, 444, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 568, 570, 571, 572, 573], "cach": [0, 3, 19, 24, 45, 47, 56, 149, 161, 164, 187, 195, 211, 212, 242, 243, 257, 278, 284, 287, 308, 313, 331, 333, 340, 351, 353, 398, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 482, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 537, 542, 543, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "persist": [0, 148], "us": [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 62, 68, 70, 71, 76, 77, 78, 79, 81, 82, 87, 93, 94, 95, 96, 102, 105, 108, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 127, 133, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 169, 170, 171, 172, 174, 175, 177, 180, 181, 187, 192, 193, 195, 196, 197, 198, 199, 200, 201, 206, 211, 212, 219, 220, 221, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 332, 333, 335, 337, 339, 340, 342, 344, 345, 347, 351, 352, 353, 354, 355, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 413, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 444, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 482, 483, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 530, 531, 533, 535, 537, 539, 544, 545, 546, 548, 550, 553, 555, 557, 559, 561, 563, 567, 568, 571, 573], "threadpool": [0, 29, 42, 44, 283, 287, 303, 355, 564], "base": [0, 10, 15, 16, 18, 19, 20, 22, 23, 24, 25, 29, 30, 32, 33, 34, 36, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 96, 97, 106, 109, 110, 143, 144, 146, 147, 149, 150, 152, 153, 154, 155, 159, 160, 165, 166, 171, 172, 251, 274, 280, 325, 327, 355, 370, 395, 401, 402, 420, 432, 461, 483, 492, 530, 537, 541, 542, 546, 551, 563, 568], "thread": [0, 18, 19, 29, 36, 42, 44, 149, 161, 219, 220, 325, 335, 355, 421, 564], "experiment": [0, 20, 24, 38, 166, 347], "featur": [0, 15, 20, 24, 25, 27, 29, 30, 31, 39, 52, 53, 148, 164, 165, 166, 174, 175, 248, 249, 274, 289, 319, 371, 395, 432, 531], "sourc": [1, 10, 15, 16, 18, 24, 26, 28, 29, 34, 36, 37, 38, 47, 48, 49, 50, 52, 56, 147, 151, 152, 154, 159, 166, 211, 212, 229, 230, 231, 236, 237, 238, 239, 241, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 281, 290, 291, 294, 295, 297, 298, 301, 302, 304, 305, 306, 307, 309, 310, 313, 315, 316, 317, 320, 321, 323, 347, 361, 363, 364, 365, 371, 372, 373, 374, 375, 376, 379, 382, 384, 390, 391, 393, 395, 396, 403, 404, 405, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 433, 435, 437, 438, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 542, 544, 545, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573, 574], "option": [1, 18, 20, 21, 23, 30, 31, 36, 37, 39, 41, 42, 44, 45, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 148, 149, 153, 157, 160, 165, 201, 219, 220, 229, 263, 265, 281, 290, 307, 313, 319, 340, 344, 351, 352, 353, 354, 361, 387, 395, 411, 416, 421, 441, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 525, 527, 529, 533, 535, 541, 544, 545, 546, 548, 550, 553, 555, 557, 559, 563, 568, 569, 571, 573], "librari": [1, 3, 4, 5, 7, 8, 10, 12, 14, 15, 16, 19, 25, 27, 29, 30, 33, 36, 37, 39, 40, 44, 47, 48, 49, 50, 51, 76, 78, 79, 101, 112, 142, 143, 144, 145, 146, 154, 157, 160, 165, 173, 176, 184, 186, 187, 194, 195, 200, 205, 206, 219, 220, 222, 223, 253, 256, 307, 308, 319, 324, 333, 335, 337, 339, 342, 343, 345, 353, 354, 390, 395, 396, 405, 420, 421, 439, 443, 479, 482, 483, 492, 523, 537, 561, 564], "more": [2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 19, 20, 24, 26, 29, 32, 36, 38, 40, 43, 46, 48, 49, 50, 125, 136, 149, 150, 153, 156, 159, 160, 162, 163, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 240, 246, 289, 290, 291, 292, 294, 295, 297, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 337, 339, 340, 341, 342, 344, 345, 351, 352, 353, 354, 355, 357, 370, 378, 382, 387, 390, 395, 405, 421, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574], "includ": [2, 3, 4, 5, 6, 7, 8, 16, 19, 20, 22, 24, 26, 29, 32, 37, 38, 40, 43, 45, 46, 47, 50, 53, 54, 56, 149, 151, 153, 154, 155, 156, 157, 160, 162, 163, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 307, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 421, 422, 424, 426, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574], "dnnl_graph": [2, 3, 4, 5, 6, 7, 8, 54, 185, 186, 187, 188, 190, 192, 194, 242, 243, 251, 257, 278, 280, 397, 398, 399, 400, 401, 402], "hpp": [2, 3, 4, 5, 6, 7, 8, 33, 38, 54, 143, 157, 160, 162, 163, 164, 169, 172, 173, 174, 178, 182, 185, 186, 187, 188, 190, 192, 194, 196, 197, 198, 199, 200, 202, 205, 207, 209, 211, 213, 215, 217, 219, 222, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 372, 373, 374, 376, 378, 380, 381, 382, 384, 387, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573], "public": [2, 3, 4, 5, 6, 7, 8, 9, 54, 157, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573, 575], "allocator_handl": 2, "dnnl_graph_host_allocate_f": [2, 283, 332], "host_malloc": [2, 283, 332], "dnnl_graph_host_deallocate_f": [2, 283, 332], "host_fre": [2, 283, 332], "an": [2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 162, 163, 164, 165, 166, 178, 179, 181, 184, 186, 188, 189, 194, 198, 199, 200, 201, 205, 206, 207, 208, 211, 212, 221, 222, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 289, 292, 294, 298, 299, 300, 302, 305, 307, 308, 313, 318, 319, 320, 322, 323, 324, 325, 327, 332, 333, 335, 337, 339, 340, 341, 342, 344, 345, 347, 351, 352, 353, 354, 355, 357, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 414, 416, 417, 418, 420, 421, 422, 424, 425, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573], "accord": [2, 3, 4, 6, 7, 8, 16, 26, 37, 48, 49, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 151, 156, 194, 219, 220, 223, 283, 318, 333, 337, 339, 342, 370, 483, 517, 519], "given": [2, 4, 7, 8, 11, 12, 13, 14, 16, 17, 22, 26, 29, 32, 36, 37, 38, 44, 46, 48, 49, 50, 52, 53, 56, 57, 59, 77, 87, 98, 102, 105, 106, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 132, 134, 135, 138, 141, 145, 151, 155, 161, 162, 164, 166, 194, 222, 223, 242, 243, 244, 245, 251, 257, 268, 278, 280, 289, 307, 308, 313, 324, 327, 332, 340, 342, 344, 353, 354, 380, 381, 382, 387, 390, 395, 396, 397, 399, 401, 402, 439, 523, 525, 531, 539], "function": [2, 4, 12, 14, 15, 16, 19, 20, 25, 27, 28, 30, 31, 32, 33, 34, 36, 38, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 67, 83, 97, 99, 106, 114, 115, 116, 117, 118, 119, 120, 143, 148, 149, 157, 160, 162, 163, 164, 165, 171, 194, 212, 222, 223, 240, 242, 243, 246, 256, 257, 260, 268, 274, 278, 282, 287, 329, 343, 349, 350, 378, 382, 387, 388, 405, 421, 432, 443, 479, 480, 492, 523, 525, 537, 561, 564], "pointer": [2, 7, 8, 18, 25, 33, 36, 143, 161, 162, 163, 166, 211, 212, 240, 246, 250, 292, 307, 308, 313, 319, 324, 325, 326, 327, 332, 340, 344, 345, 351, 352, 353, 354, 355, 378, 382, 387, 395, 479, 492, 523, 525, 537, 561, 567, 568, 569], "paramet": [2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 19, 20, 25, 29, 43, 46, 48, 49, 50, 51, 52, 53, 70, 71, 95, 96, 147, 148, 149, 153, 154, 161, 165, 166, 177, 180, 200, 201, 206, 209, 210, 211, 212, 246, 248, 249, 250, 256, 260, 268, 274, 282, 283, 288, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 337, 339, 340, 341, 342, 344, 345, 351, 352, 353, 354, 355, 370, 371, 382, 385, 386, 387, 390, 395, 396, 405, 420, 432, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573], "A": [2, 3, 4, 5, 7, 8, 10, 18, 19, 29, 36, 37, 40, 43, 44, 45, 47, 49, 50, 52, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 79, 93, 94, 103, 104, 112, 114, 115, 116, 117, 118, 119, 120, 136, 137, 146, 149, 151, 152, 153, 154, 162, 163, 164, 165, 166, 180, 197, 199, 204, 205, 206, 213, 214, 221, 228, 229, 240, 244, 245, 246, 250, 256, 260, 263, 265, 281, 282, 283, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 337, 339, 340, 341, 342, 344, 345, 349, 351, 353, 354, 355, 361, 371, 378, 380, 381, 382, 387, 395, 396, 405, 411, 416, 420, 439, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 480, 481, 485, 487, 489, 491, 492, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 533, 535, 537, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 561, 563, 567, 568, 569, 571, 573], "malloc": [2, 233, 241, 252, 332, 340, 344, 351, 352, 369, 379, 389], "cpu": [2, 8, 16, 19, 20, 27, 29, 32, 33, 35, 36, 38, 41, 42, 44, 45, 47, 50, 56, 145, 146, 148, 149, 151, 153, 157, 161, 162, 163, 165, 166, 173, 174, 175, 176, 178, 179, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 279, 282, 299, 307, 319, 325, 355, 360, 378, 379, 380, 381, 382, 385, 386, 387, 395, 398, 400, 401, 402, 420, 421, 443, 445, 446, 523, 564, 574], "free": [2, 5, 37, 233, 241, 252, 332, 340, 344, 351, 352, 369, 379, 387, 389, 523], "default": [2, 3, 4, 5, 8, 10, 11, 12, 15, 17, 18, 19, 23, 24, 27, 30, 31, 32, 33, 36, 38, 39, 47, 49, 51, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 87, 88, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 125, 127, 128, 129, 130, 131, 133, 135, 138, 140, 143, 148, 149, 153, 162, 163, 164, 165, 169, 170, 174, 175, 182, 183, 202, 203, 219, 220, 224, 225, 226, 227, 240, 263, 281, 289, 300, 318, 319, 334, 335, 378, 411, 441, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 532, 533, 534, 535, 537, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 568, 569, 570, 571, 572, 573], "constructor": [2, 3, 5, 8, 10, 19, 37, 145, 153, 162, 163, 240, 371, 378, 395, 420, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 526, 527, 528, 529, 532, 533, 534, 535, 537, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 568, 569, 570, 571, 572, 573], "compil": [3, 7, 18, 32, 36, 47, 51, 101, 144, 148, 184, 186, 194, 223, 242, 243, 251, 257, 278, 279, 280, 284, 287, 319, 331, 332, 335, 339, 340, 342, 344, 345, 351, 352, 390, 395, 396, 420, 421, 439, 482, 483], "partit": [3, 4, 35, 39, 40, 41, 43, 44, 162, 163, 184, 186, 193, 240, 242, 243, 251, 257, 278, 280, 283, 287, 331, 332, 337, 339, 340, 344, 345, 350, 351, 352, 378, 482, 483], "object": [3, 4, 5, 6, 7, 8, 10, 15, 16, 20, 24, 29, 36, 37, 45, 46, 49, 50, 53, 56, 145, 149, 152, 153, 161, 162, 163, 164, 166, 199, 212, 221, 229, 230, 231, 232, 238, 239, 240, 246, 247, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 304, 307, 308, 313, 316, 322, 324, 326, 327, 337, 341, 345, 351, 352, 353, 354, 361, 363, 365, 367, 371, 374, 376, 378, 382, 384, 391, 393, 400, 401, 403, 407, 409, 410, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 568, 569, 570, 571, 572, 573], "compiled_partition_handl": 3, "dnnl_graph_compiled_partition_t": [3, 283, 333, 342], "logical_tensor": [3, 6, 7, 8, 37, 165, 242, 243, 251, 257, 278, 280, 283, 339, 345, 350, 397, 398, 399, 400, 401, 402], "query_logical_tensor": [3, 37, 242, 243, 251, 257, 278, 280], "size_t": [3, 5, 6, 7, 9, 162, 163, 233, 234, 236, 237, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 268, 278, 279, 280, 283, 299, 307, 308, 313, 327, 332, 333, 335, 336, 337, 339, 340, 341, 342, 344, 350, 369, 370, 372, 373, 378, 379, 382, 384, 385, 386, 387, 389, 396, 439, 479, 482, 483, 523, 525, 568], "tid": [3, 5, 283, 333, 339], "const": [3, 4, 5, 6, 7, 8, 9, 15, 16, 33, 36, 143, 145, 149, 157, 162, 163, 164, 212, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 292, 294, 295, 297, 307, 308, 309, 313, 317, 318, 319, 322, 323, 324, 325, 326, 327, 332, 333, 336, 337, 339, 340, 341, 342, 344, 345, 349, 350, 351, 352, 353, 354, 355, 361, 363, 365, 367, 369, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 386, 387, 389, 390, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 581], "std": [3, 4, 5, 6, 7, 9, 15, 16, 18, 36, 145, 157, 162, 163, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 314, 319, 324, 349, 351, 352, 353, 354, 361, 363, 365, 367, 370, 371, 372, 373, 374, 376, 378, 380, 381, 382, 384, 385, 386, 387, 390, 391, 393, 395, 396, 397, 398, 400, 401, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 568, 570, 571, 572, 573], "vector": [3, 4, 5, 6, 7, 16, 29, 30, 31, 32, 36, 50, 51, 52, 70, 71, 145, 149, 161, 162, 163, 164, 173, 176, 188, 211, 212, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 289, 308, 313, 314, 318, 323, 324, 349, 351, 352, 353, 354, 361, 363, 365, 367, 370, 371, 372, 373, 374, 376, 378, 380, 381, 382, 384, 385, 386, 387, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 568, 570, 571, 572, 573], "pair": [3, 27, 52, 162, 163, 240, 308, 313, 324, 333, 353, 354, 378, 482, 537, 545, 568], "get_inplace_port": 3, "void": [3, 4, 6, 8, 9, 15, 16, 18, 19, 33, 36, 143, 157, 162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 307, 308, 311, 313, 314, 319, 324, 325, 326, 327, 332, 334, 335, 340, 344, 345, 349, 350, 353, 354, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 581], "execut": [3, 10, 12, 13, 15, 16, 17, 18, 19, 24, 30, 33, 36, 37, 38, 45, 47, 48, 49, 52, 54, 143, 159, 161, 162, 163, 164, 165, 194, 207, 208, 211, 212, 213, 214, 219, 220, 222, 223, 224, 225, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 299, 307, 308, 313, 314, 319, 322, 324, 325, 327, 332, 333, 339, 340, 342, 344, 345, 351, 352, 353, 354, 355, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 391, 392, 393, 394, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 479, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 523, 526, 528, 531, 532, 534, 537, 539, 543, 545, 547, 549, 552, 554, 556, 558, 560, 561, 562, 564, 568, 569, 570, 572], "stream": [3, 18, 24, 30, 32, 33, 36, 37, 38, 47, 48, 143, 160, 162, 163, 165, 173, 176, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 293, 307, 308, 313, 314, 324, 325, 333, 340, 344, 349, 351, 352, 353, 354, 355, 361, 363, 365, 367, 369, 370, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 391, 393, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 523, 526, 528, 532, 534, 537, 543, 545, 547, 549, 552, 554, 556, 558, 560, 562, 564, 570, 572], "astream": [3, 283, 325, 351, 352, 353, 354, 355, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 537, 543, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "tensor": [3, 5, 6, 7, 10, 15, 16, 18, 19, 20, 22, 26, 29, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 55, 56, 57, 59, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 130, 132, 134, 135, 136, 138, 139, 141, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 162, 163, 164, 165, 166, 172, 180, 181, 184, 186, 187, 195, 197, 198, 199, 201, 205, 221, 229, 230, 231, 232, 235, 238, 239, 240, 242, 243, 244, 245, 247, 251, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 287, 289, 291, 294, 295, 296, 297, 304, 306, 307, 309, 313, 315, 317, 320, 323, 326, 327, 331, 333, 337, 340, 341, 342, 344, 350, 351, 352, 361, 363, 365, 367, 369, 370, 371, 374, 376, 378, 384, 387, 388, 390, 391, 393, 395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 436, 437, 438, 441, 458, 460, 461, 463, 465, 467, 469, 471, 473, 482, 483, 523, 525, 527, 529, 531, 539, 567, 568], "input": [3, 4, 5, 6, 7, 13, 16, 17, 18, 20, 22, 24, 26, 28, 29, 32, 34, 36, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 171, 172, 181, 188, 198, 200, 201, 211, 212, 235, 236, 237, 239, 240, 242, 243, 246, 248, 249, 251, 254, 256, 257, 260, 261, 268, 269, 273, 274, 278, 280, 282, 283, 289, 298, 307, 313, 318, 327, 333, 337, 339, 340, 341, 342, 344, 345, 351, 352, 369, 370, 371, 372, 373, 376, 378, 382, 385, 386, 387, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 405, 407, 420, 421, 422, 430, 432, 443, 450, 452, 481, 482, 483, 489, 491, 505, 507, 509, 511, 517, 519, 539, 569, 571, 573], "output": [3, 4, 5, 6, 7, 10, 12, 13, 15, 20, 22, 24, 26, 29, 32, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 166, 181, 198, 200, 201, 211, 212, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 249, 251, 253, 254, 256, 257, 260, 261, 263, 272, 273, 274, 278, 279, 280, 282, 283, 289, 290, 291, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 337, 339, 340, 341, 342, 344, 345, 351, 352, 353, 354, 355, 369, 370, 371, 372, 373, 376, 378, 379, 380, 381, 382, 385, 386, 387, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 405, 407, 411, 420, 421, 428, 429, 430, 432, 439, 443, 450, 452, 481, 482, 483, 489, 491, 505, 507, 509, 511, 517, 519, 531, 538, 539, 568, 569, 571, 573], "empti": [3, 4, 5, 8, 10, 15, 18, 24, 48, 110, 114, 115, 116, 117, 118, 119, 120, 165, 166, 177, 180, 196, 197, 199, 221, 289, 291, 308, 313, 327, 333, 337, 340, 344, 353, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 568, 569, 570, 571, 572, 573], "queri": [3, 15, 16, 18, 19, 27, 29, 30, 31, 33, 36, 37, 40, 44, 45, 47, 48, 50, 55, 143, 145, 153, 161, 162, 163, 164, 166, 194, 199, 207, 208, 212, 219, 220, 221, 222, 223, 236, 237, 240, 241, 242, 243, 251, 257, 278, 280, 289, 299, 307, 308, 311, 313, 314, 324, 327, 333, 334, 335, 349, 353, 354, 372, 373, 378, 379, 395, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 482, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 525, 527, 529, 533, 535, 537, 539, 541, 542, 544, 545, 546, 548, 550, 551, 553, 555, 557, 559, 563, 568, 571, 573], "logic": [3, 5, 6, 7, 8, 19, 20, 26, 29, 34, 36, 41, 42, 43, 44, 45, 46, 48, 53, 55, 79, 142, 144, 146, 147, 151, 154, 155, 156, 161, 164, 181, 184, 186, 195, 198, 211, 212, 242, 243, 251, 256, 257, 278, 280, 283, 287, 289, 304, 307, 331, 333, 337, 341, 342, 345, 395, 397, 398, 399, 400, 401, 402, 483, 525, 539], "id": [3, 5, 6, 7, 13, 23, 28, 37, 145, 211, 212, 242, 243, 251, 257, 258, 259, 278, 279, 280, 283, 308, 333, 339, 341, 342, 353, 396, 403, 439, 482, 483, 542], "If": [3, 5, 10, 13, 15, 18, 20, 23, 27, 28, 38, 40, 41, 45, 46, 48, 53, 61, 64, 68, 71, 72, 75, 76, 78, 79, 81, 112, 114, 115, 116, 117, 118, 119, 120, 122, 125, 127, 133, 140, 144, 153, 154, 162, 163, 164, 165, 200, 201, 212, 240, 242, 243, 257, 278, 289, 304, 307, 308, 311, 313, 319, 326, 327, 333, 334, 335, 339, 353, 354, 370, 378, 400, 401, 421, 501, 503, 525, 531, 546, 564, 567, 568], "doesn": [3, 5, 8, 30, 56, 143, 151, 162, 163, 181, 192, 193, 240, 307, 308, 318, 324, 333, 339, 345, 353, 354, 378, 395, 397, 398, 400, 401, 405, 443, 483, 517, 519, 523], "t": [3, 5, 6, 7, 8, 27, 28, 30, 33, 44, 47, 49, 53, 56, 95, 96, 143, 149, 151, 153, 162, 163, 165, 166, 171, 172, 181, 192, 193, 229, 233, 236, 237, 240, 241, 246, 248, 249, 250, 262, 263, 265, 274, 281, 283, 289, 292, 307, 308, 318, 324, 325, 330, 333, 339, 345, 349, 353, 354, 355, 361, 369, 372, 373, 378, 379, 382, 387, 395, 397, 398, 400, 401, 405, 409, 411, 416, 432, 439, 441, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573], "belong": [3, 149, 289, 333, 353, 354, 537, 545, 564], "ani": [3, 7, 10, 11, 13, 14, 15, 16, 19, 20, 22, 24, 26, 29, 30, 31, 34, 36, 37, 40, 47, 48, 50, 51, 52, 55, 56, 57, 58, 67, 68, 82, 83, 84, 85, 91, 92, 93, 94, 98, 106, 107, 113, 121, 123, 124, 126, 132, 134, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 165, 166, 169, 178, 182, 184, 186, 192, 193, 197, 198, 199, 221, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 307, 313, 319, 327, 333, 339, 342, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 391, 393, 395, 403, 405, 406, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 444, 450, 452, 463, 465, 467, 469, 471, 473, 479, 483, 489, 491, 492, 495, 497, 499, 505, 507, 509, 511, 517, 519, 523, 525, 537, 539, 544, 550, 561, 571, 573], "except": [3, 4, 5, 10, 11, 19, 22, 24, 25, 26, 36, 69, 93, 145, 153, 162, 163, 164, 166, 169, 173, 176, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 299, 319, 354, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 395, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 480, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 533, 535, 537, 544, 546, 548, 550, 553, 555, 557, 559, 561, 563, 568, 569, 571, 573, 575], "rais": [3, 5], "api": [3, 4, 5, 7, 10, 12, 14, 15, 18, 19, 20, 22, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 53, 54, 55, 56, 143, 146, 147, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 200, 201, 211, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 256, 257, 258, 274, 278, 279, 280, 283, 288, 289, 292, 299, 300, 307, 313, 318, 319, 333, 335, 336, 337, 339, 342, 347, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 446, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 480, 483, 485, 487, 489, 491, 492, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 544, 546, 548, 550, 551, 553, 555, 557, 559, 561, 563, 571, 573], "The": [3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 181, 188, 189, 192, 193, 194, 198, 201, 212, 219, 220, 222, 223, 232, 239, 240, 250, 254, 256, 260, 268, 274, 282, 289, 290, 292, 295, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 313, 314, 318, 319, 320, 324, 325, 327, 332, 333, 334, 335, 337, 339, 340, 341, 342, 344, 345, 347, 351, 352, 353, 354, 355, 357, 367, 369, 370, 371, 372, 373, 376, 378, 379, 382, 385, 386, 387, 390, 391, 395, 396, 397, 398, 400, 401, 405, 420, 421, 432, 439, 443, 450, 452, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 480, 482, 483, 489, 491, 492, 497, 499, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 537, 539, 541, 542, 545, 546, 550, 553, 555, 561, 563, 564, 568, 571, 573], "uniqu": [3, 5, 6, 7, 16, 37, 114, 115, 116, 117, 118, 119, 120, 249, 333, 339, 341, 483, 531], "requir": [3, 5, 10, 15, 16, 18, 20, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 149, 150, 151, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 188, 194, 200, 201, 211, 212, 222, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 290, 298, 307, 308, 313, 314, 324, 327, 333, 339, 353, 354, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 390, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 450, 452, 454, 456, 485, 487, 489, 491, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 525, 527, 529, 542, 568, 571, 573], "return": [3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 18, 24, 25, 30, 31, 37, 43, 48, 49, 52, 55, 125, 136, 137, 143, 145, 146, 157, 162, 163, 164, 192, 193, 194, 212, 222, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 351, 352, 353, 354, 355, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 390, 391, 393, 395, 396, 397, 398, 400, 401, 403, 405, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 480, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 542, 544, 545, 546, 548, 550, 551, 553, 555, 557, 559, 561, 563, 564, 568, 571, 573], "hint": [3, 10, 24, 48, 174, 175, 236, 237, 241, 274, 319, 333, 372, 373, 379, 432, 445, 450, 454, 463, 465, 469, 471, 475, 482, 485, 489, 495, 497, 501, 505, 509, 513, 517, 527, 533, 548, 553, 557, 571], "place": [3, 15, 20, 22, 23, 25, 34, 46, 48, 53, 136, 137, 144, 155, 156, 163, 205, 206, 230, 231, 232, 255, 256, 259, 262, 268, 269, 270, 276, 289, 290, 294, 298, 301, 304, 319, 323, 333, 363, 364, 365, 366, 367, 370, 385, 386, 393, 395, 403, 404, 409, 410, 422, 424, 435, 436, 456, 461, 482, 487, 531, 562], "It": [3, 4, 13, 15, 16, 18, 19, 22, 24, 27, 30, 32, 36, 37, 38, 42, 43, 44, 45, 47, 48, 49, 52, 54, 76, 78, 79, 93, 95, 97, 109, 112, 123, 141, 142, 143, 144, 148, 162, 163, 164, 165, 187, 192, 193, 195, 199, 221, 240, 257, 290, 301, 304, 307, 308, 313, 314, 319, 333, 337, 353, 378, 382, 395, 396, 397, 398, 400, 401, 420, 421, 439, 450, 454, 463, 465, 469, 471, 475, 482, 483, 485, 489, 495, 497, 501, 505, 509, 513, 517, 523, 525, 527, 533, 537, 546, 548, 553, 557, 571], "indic": [3, 4, 5, 15, 19, 28, 29, 32, 36, 37, 42, 43, 45, 49, 55, 70, 71, 78, 88, 95, 96, 114, 115, 116, 117, 118, 119, 120, 146, 147, 153, 154, 164, 180, 181, 188, 197, 211, 212, 243, 249, 260, 269, 282, 289, 295, 297, 307, 309, 318, 327, 333, 342, 387, 395, 397, 398, 400, 401, 405, 422, 443, 450, 452, 463, 465, 467, 469, 471, 473, 482, 489, 491, 505, 507, 509, 511, 517, 519, 523, 525, 527, 529, 531, 539, 568, 571, 573], "can": [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 59, 73, 77, 87, 88, 95, 97, 99, 101, 102, 105, 108, 125, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 181, 188, 189, 198, 199, 219, 220, 221, 224, 240, 250, 256, 260, 268, 274, 282, 289, 290, 291, 294, 295, 296, 297, 298, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 333, 334, 335, 339, 342, 353, 378, 382, 383, 387, 390, 395, 396, 397, 398, 400, 401, 405, 406, 420, 421, 432, 439, 443, 444, 456, 482, 487, 492, 517, 519, 523, 525, 530, 531, 537, 539, 542, 568, 573], "share": [3, 18, 24, 33, 37, 40, 45, 49, 56, 143, 147, 149, 153, 164, 188, 202, 203, 226, 227, 236, 237, 241, 333, 372, 373, 379, 482], "same": [3, 5, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 28, 29, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 49, 53, 55, 56, 63, 65, 69, 70, 73, 78, 86, 88, 95, 96, 136, 141, 144, 145, 147, 150, 151, 152, 153, 154, 156, 159, 162, 163, 164, 169, 170, 181, 188, 198, 200, 201, 212, 219, 220, 236, 237, 238, 240, 241, 249, 256, 267, 274, 289, 290, 291, 292, 295, 297, 298, 301, 304, 307, 308, 309, 311, 313, 324, 325, 333, 334, 339, 341, 353, 354, 355, 370, 371, 372, 373, 374, 378, 379, 385, 386, 390, 395, 420, 421, 432, 456, 463, 465, 467, 469, 471, 473, 482, 483, 487, 492, 525, 527, 529, 531, 537, 542, 545], "buffer": [3, 8, 10, 13, 17, 18, 19, 25, 36, 37, 48, 56, 155, 161, 162, 163, 202, 203, 211, 212, 219, 220, 226, 227, 229, 230, 231, 232, 234, 235, 238, 239, 240, 242, 243, 247, 248, 249, 251, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 307, 308, 313, 324, 327, 333, 339, 345, 353, 354, 361, 363, 365, 367, 370, 374, 376, 378, 384, 386, 391, 393, 395, 396, 403, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437, 439, 441, 482, 523, 525, 568, 569], "In": [3, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 56, 70, 71, 101, 143, 144, 145, 149, 151, 152, 153, 155, 156, 160, 161, 162, 164, 165, 181, 198, 209, 210, 211, 224, 229, 232, 238, 239, 242, 243, 246, 251, 254, 255, 257, 261, 263, 265, 270, 278, 280, 281, 289, 290, 301, 304, 307, 308, 314, 324, 333, 345, 353, 354, 361, 363, 364, 365, 366, 367, 370, 371, 374, 376, 382, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 416, 420, 421, 424, 435, 436, 439, 441, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 482, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 541, 544, 546, 548, 550, 553, 555, 557, 559, 563, 568, 569, 571, 573], "help": [3, 24, 37, 82, 142, 162, 163, 240, 242, 243, 251, 257, 278, 280, 333, 378, 482], "reduc": [3, 15, 16, 18, 19, 24, 27, 29, 42, 45, 47, 48, 49, 56, 114, 115, 116, 117, 118, 119, 120, 145, 148, 150, 159, 201, 219, 220, 246, 254, 333, 382, 383, 391, 482, 531, 583], "footprint": [3, 18, 45, 156, 159, 219, 220, 333, 482], "improv": [3, 13, 15, 20, 25, 27, 32, 34, 38, 41, 45, 46, 48, 49, 53, 63, 88, 95, 96, 164, 246, 289, 333, 347, 382, 482, 531], "local": [3, 18, 144, 161, 171, 172, 211, 212, 233, 234, 236, 237, 241, 264, 305, 333, 360, 369, 372, 373, 379, 415, 420, 482, 512, 513, 514, 515, 542, 582], "But": [3, 24, 36, 38, 52, 246, 333, 339, 382, 397, 398, 399, 400, 401, 402, 482], "sinc": [3, 15, 16, 28, 36, 43, 52, 147, 162, 163, 164, 165, 166, 181, 201, 240, 246, 255, 256, 260, 270, 289, 314, 333, 378, 382, 393, 395, 405, 420, 421, 424, 443, 482], "mai": [3, 7, 13, 14, 15, 19, 22, 23, 24, 25, 29, 31, 32, 33, 34, 37, 39, 40, 42, 43, 44, 45, 48, 52, 54, 136, 137, 143, 144, 145, 149, 150, 151, 159, 162, 163, 165, 166, 187, 188, 189, 195, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 292, 296, 307, 313, 318, 319, 325, 333, 339, 342, 355, 361, 363, 365, 367, 369, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 395, 403, 405, 407, 409, 411, 413, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 450, 452, 463, 465, 467, 469, 471, 473, 482, 489, 491, 495, 497, 499, 505, 507, 509, 511, 517, 519, 523, 525, 531, 538, 544, 550, 571, 573, 574], "have": [3, 4, 7, 10, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 32, 34, 36, 37, 38, 41, 42, 44, 47, 48, 50, 52, 53, 56, 70, 78, 136, 137, 141, 144, 145, 147, 148, 150, 151, 156, 159, 161, 164, 166, 274, 289, 291, 295, 296, 297, 307, 308, 309, 313, 318, 319, 323, 324, 333, 337, 339, 342, 353, 354, 382, 390, 395, 405, 420, 432, 439, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 482, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 542, 544, 545, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "global": [3, 18, 32, 148, 200, 201, 349, 350, 360, 482, 568], "view": [3, 51, 136, 137, 153, 248, 249, 274, 333, 385, 386, 432, 482], "user": [3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 19, 20, 24, 25, 26, 27, 29, 33, 36, 37, 38, 44, 46, 47, 48, 50, 52, 53, 56, 95, 143, 145, 146, 148, 149, 151, 152, 156, 157, 161, 162, 163, 164, 192, 193, 200, 201, 212, 219, 220, 229, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 251, 254, 256, 257, 261, 263, 265, 268, 270, 274, 278, 280, 281, 304, 307, 308, 313, 324, 333, 337, 339, 342, 345, 353, 354, 361, 369, 370, 371, 372, 373, 376, 378, 379, 385, 386, 387, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 407, 411, 416, 420, 421, 424, 432, 439, 441, 482, 501, 503, 523, 530, 537, 564], "": [3, 5, 6, 10, 13, 15, 16, 18, 19, 22, 23, 24, 25, 26, 28, 29, 33, 34, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 56, 78, 88, 95, 96, 103, 104, 136, 142, 143, 149, 151, 155, 159, 162, 163, 164, 187, 195, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 289, 307, 308, 313, 314, 333, 335, 339, 341, 353, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 382, 384, 385, 386, 387, 389, 390, 391, 393, 395, 396, 397, 398, 400, 401, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 482, 523, 531, 537], "applic": [3, 10, 11, 12, 14, 15, 16, 18, 19, 24, 25, 27, 29, 31, 32, 36, 37, 38, 39, 40, 41, 47, 48, 52, 54, 144, 145, 148, 160, 162, 163, 164, 165, 166, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 307, 319, 333, 347, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 482, 525], "possibl": [3, 16, 19, 20, 22, 24, 26, 30, 31, 33, 34, 46, 47, 48, 49, 52, 53, 56, 143, 144, 150, 153, 155, 156, 161, 164, 274, 289, 290, 295, 297, 298, 300, 301, 302, 304, 305, 307, 309, 310, 313, 315, 317, 318, 319, 320, 321, 333, 395, 420, 432, 452, 454, 456, 463, 465, 467, 471, 473, 477, 482, 485, 487, 491, 499, 501, 503, 507, 511, 515, 519, 525, 529, 535, 544, 550, 555, 559, 571, 573], "i": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 87, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 128, 129, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 171, 172, 177, 180, 181, 184, 185, 186, 188, 189, 192, 193, 194, 197, 198, 199, 200, 201, 206, 217, 218, 219, 220, 221, 222, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 290, 291, 292, 295, 297, 298, 301, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 327, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 347, 351, 352, 353, 354, 355, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 482, 483, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 542, 544, 546, 548, 550, 553, 555, 557, 559, 561, 563, 564, 568, 569, 571, 573], "other": [3, 5, 10, 15, 18, 19, 20, 22, 24, 26, 28, 29, 30, 31, 32, 33, 36, 40, 41, 44, 47, 48, 50, 51, 52, 54, 55, 56, 78, 143, 144, 145, 146, 149, 151, 153, 154, 155, 156, 162, 163, 164, 165, 166, 181, 192, 193, 198, 219, 220, 235, 236, 240, 247, 248, 249, 274, 307, 313, 319, 333, 337, 339, 341, 347, 370, 372, 378, 382, 384, 386, 387, 395, 413, 420, 421, 432, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573], "thi": [3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 65, 66, 70, 76, 87, 88, 95, 96, 112, 136, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 177, 180, 181, 201, 206, 209, 210, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 290, 292, 294, 301, 304, 307, 308, 313, 316, 318, 319, 324, 325, 327, 333, 335, 336, 339, 340, 342, 344, 345, 353, 354, 355, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 480, 482, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 530, 531, 533, 535, 541, 544, 546, 548, 550, 553, 555, 557, 559, 563, 564, 568, 569, 571, 573], "case": [3, 5, 7, 8, 10, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 28, 29, 32, 33, 34, 36, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 60, 80, 87, 90, 97, 110, 111, 113, 121, 136, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 156, 159, 164, 165, 181, 229, 236, 237, 239, 246, 250, 254, 256, 261, 263, 265, 270, 281, 289, 290, 295, 297, 301, 304, 307, 308, 309, 313, 319, 324, 333, 339, 342, 345, 353, 354, 361, 370, 372, 373, 376, 382, 387, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 407, 411, 416, 420, 424, 439, 441, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 480, 482, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 541, 544, 546, 548, 550, 553, 555, 557, 559, 563, 564, 568, 569, 571, 573], "should": [3, 5, 7, 12, 15, 16, 18, 19, 20, 22, 24, 26, 27, 29, 34, 36, 37, 43, 45, 46, 47, 48, 50, 52, 53, 55, 56, 59, 61, 62, 64, 65, 69, 71, 72, 75, 77, 78, 79, 87, 88, 93, 94, 102, 105, 108, 114, 115, 116, 117, 118, 119, 120, 125, 138, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 188, 219, 220, 232, 233, 240, 241, 248, 250, 256, 260, 274, 289, 292, 299, 307, 314, 318, 319, 325, 327, 332, 333, 337, 339, 340, 342, 344, 347, 351, 352, 355, 367, 369, 370, 371, 378, 379, 387, 390, 395, 396, 397, 398, 399, 400, 401, 402, 405, 420, 432, 439, 450, 452, 461, 482, 489, 491, 492, 505, 507, 509, 511, 517, 519, 523, 530, 531, 539, 541, 546, 563, 571, 573], "take": [3, 13, 14, 15, 16, 19, 24, 27, 29, 30, 31, 32, 34, 36, 40, 42, 43, 44, 45, 47, 48, 51, 74, 75, 76, 78, 79, 101, 112, 114, 115, 116, 117, 118, 119, 120, 125, 145, 147, 148, 149, 164, 165, 256, 290, 301, 304, 313, 319, 333, 367, 369, 370, 395, 397, 399, 400, 401, 402, 482], "pass": [3, 4, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 29, 33, 36, 37, 38, 40, 43, 44, 46, 47, 48, 53, 54, 55, 56, 88, 95, 136, 143, 146, 147, 149, 151, 152, 153, 162, 163, 165, 166, 181, 200, 201, 233, 234, 240, 241, 246, 250, 252, 256, 274, 279, 289, 295, 297, 302, 306, 307, 308, 313, 319, 327, 333, 337, 339, 353, 354, 369, 370, 371, 378, 379, 382, 387, 389, 390, 395, 396, 420, 432, 439, 465, 467, 471, 473, 479, 481, 482, 492, 523, 531, 537, 539, 545, 561, 564, 568], "differ": [3, 5, 13, 15, 16, 18, 19, 22, 24, 25, 27, 32, 33, 36, 37, 39, 41, 42, 44, 45, 49, 52, 55, 56, 59, 73, 77, 87, 101, 102, 105, 108, 123, 135, 136, 137, 138, 145, 149, 150, 151, 153, 159, 162, 163, 164, 171, 172, 187, 188, 189, 195, 219, 220, 229, 236, 237, 239, 240, 241, 254, 261, 263, 265, 270, 274, 281, 290, 299, 301, 304, 307, 327, 333, 339, 361, 367, 370, 372, 373, 376, 378, 379, 382, 387, 391, 395, 397, 398, 400, 401, 407, 411, 416, 420, 421, 424, 432, 441, 461, 482, 492, 525, 541, 546, 563, 568], "avoid": [3, 16, 17, 22, 24, 26, 31, 32, 36, 47, 48, 52, 62, 63, 64, 148, 150, 162, 163, 232, 236, 237, 240, 241, 333, 367, 372, 373, 378, 379, 420, 482], "overwrit": [3, 22, 27, 29, 50, 56, 150, 152, 156, 333, 482], "which": [3, 6, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 56, 60, 69, 70, 76, 78, 79, 86, 88, 95, 96, 97, 99, 100, 112, 114, 115, 116, 117, 118, 119, 120, 128, 129, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 155, 159, 161, 162, 163, 164, 165, 181, 184, 186, 188, 198, 240, 242, 243, 248, 249, 250, 251, 253, 254, 256, 257, 260, 267, 268, 274, 278, 280, 289, 290, 292, 295, 297, 298, 307, 309, 313, 316, 319, 320, 321, 322, 325, 332, 333, 335, 339, 340, 341, 345, 355, 378, 385, 386, 387, 390, 391, 395, 396, 397, 398, 400, 401, 405, 420, 421, 432, 439, 450, 454, 461, 463, 465, 469, 471, 475, 482, 483, 485, 489, 492, 495, 497, 501, 505, 509, 513, 517, 523, 527, 533, 539, 542, 546, 548, 553, 555, 557, 559, 563, 571], "probabl": [3, 13, 15, 42, 44, 56, 289, 313, 333, 482, 539], "caus": [3, 11, 47, 48, 333, 479, 482, 492, 523, 537, 561], "unexpect": [3, 25, 244, 245, 253, 279, 292, 325, 333, 355, 380, 381, 390, 439, 482], "incorrect": [3, 18, 24, 165, 166, 194, 222, 223, 252, 268, 333, 389, 395, 482], "result": [3, 10, 12, 13, 15, 16, 18, 20, 22, 24, 25, 28, 29, 31, 32, 34, 37, 42, 44, 45, 46, 48, 49, 50, 52, 53, 55, 56, 86, 114, 115, 116, 117, 118, 119, 120, 135, 145, 146, 147, 149, 150, 152, 155, 159, 162, 163, 164, 166, 201, 212, 213, 214, 235, 240, 242, 243, 246, 248, 249, 250, 253, 256, 257, 258, 278, 279, 283, 289, 292, 307, 313, 325, 327, 333, 355, 370, 371, 378, 382, 383, 387, 421, 482, 525, 531, 538, 539, 542, 568], "list": [3, 6, 7, 24, 34, 36, 47, 48, 54, 60, 61, 70, 71, 72, 73, 74, 75, 76, 78, 93, 94, 103, 104, 112, 114, 115, 116, 117, 118, 119, 120, 136, 137, 144, 149, 153, 165, 166, 173, 176, 283, 319, 333, 340, 342, 344, 360, 395, 397, 398, 400, 401], "run": [3, 10, 12, 18, 19, 20, 23, 24, 32, 36, 46, 48, 49, 51, 52, 56, 62, 144, 162, 163, 166, 219, 220, 235, 240, 242, 243, 248, 249, 250, 251, 257, 260, 268, 278, 280, 282, 283, 303, 308, 324, 325, 338, 340, 344, 351, 352, 371, 378, 382, 385, 386, 387, 388, 390, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 420, 421, 439, 443], "over": [3, 13, 18, 24, 26, 30, 31, 38, 48, 49, 51, 53, 61, 69, 71, 72, 75, 95, 96, 114, 115, 116, 117, 118, 119, 120, 148, 149, 153, 155, 162, 163, 164, 165, 240, 291, 294, 319, 321, 351, 352, 378, 397, 400, 401, 461, 541, 557, 559], "graph_handl": 4, "engin": [4, 7, 8, 10, 15, 16, 24, 27, 29, 32, 33, 35, 36, 37, 47, 48, 50, 56, 123, 143, 149, 153, 162, 163, 165, 179, 194, 211, 212, 222, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 289, 290, 291, 293, 294, 295, 297, 298, 301, 302, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 331, 333, 335, 337, 340, 342, 344, 345, 349, 350, 351, 352, 353, 354, 355, 360, 361, 363, 365, 367, 369, 370, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 391, 393, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 446, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 478, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 527, 529, 531, 533, 535, 537, 539, 541, 542, 544, 545, 546, 548, 550, 551, 553, 555, 557, 559, 561, 563, 571, 573], "kind": [4, 6, 7, 10, 15, 17, 20, 24, 27, 29, 33, 34, 36, 37, 45, 46, 49, 50, 53, 143, 146, 147, 152, 153, 154, 155, 162, 163, 165, 166, 171, 172, 179, 180, 191, 197, 199, 202, 203, 206, 207, 208, 209, 210, 211, 212, 221, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 290, 291, 295, 297, 298, 299, 301, 302, 304, 305, 307, 308, 309, 310, 313, 314, 315, 317, 318, 320, 321, 324, 335, 336, 337, 341, 342, 349, 350, 353, 354, 361, 363, 365, 367, 369, 370, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 570, 571, 572, 573], "engine_kind": [4, 27, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 247, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 337, 361, 363, 365, 367, 369, 370, 372, 373, 374, 376, 384, 391, 393, 395, 403, 405, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443], "fpmath_mod": [4, 14, 162, 165, 282, 300, 319, 349, 443, 539], "mode": [4, 10, 12, 18, 20, 22, 24, 29, 34, 36, 37, 46, 49, 53, 55, 62, 76, 78, 79, 93, 94, 112, 145, 146, 147, 148, 149, 152, 153, 166, 169, 170, 182, 183, 188, 189, 209, 210, 217, 218, 219, 220, 229, 230, 232, 263, 264, 265, 279, 281, 282, 283, 287, 289, 293, 298, 306, 313, 319, 337, 349, 360, 361, 362, 363, 364, 367, 376, 377, 387, 391, 392, 393, 394, 403, 404, 409, 410, 411, 412, 414, 415, 416, 417, 420, 422, 423, 424, 425, 430, 431, 435, 436, 439, 441, 442, 443, 445, 492, 539], "set_fpmath_mod": [4, 14, 37, 45, 282, 443, 539], "bool": [4, 5, 6, 7, 9, 32, 60, 61, 68, 81, 88, 95, 96, 101, 110, 114, 115, 116, 117, 118, 119, 120, 122, 127, 133, 136, 140, 157, 162, 163, 164, 240, 244, 245, 246, 250, 251, 267, 274, 280, 283, 307, 349, 378, 380, 381, 382, 387, 399, 402, 420, 432, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573], "apply_to_int": [4, 45, 282, 283, 289, 337, 443, 539], "fals": [4, 5, 7, 12, 44, 60, 61, 68, 81, 87, 88, 95, 96, 101, 110, 114, 115, 116, 117, 118, 119, 120, 122, 127, 133, 136, 140, 162, 163, 240, 242, 243, 251, 257, 274, 278, 280, 378, 399, 402, 432, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573], "get_fpmath_mod": [4, 539], "statu": [4, 7, 24, 25, 41, 42, 44, 45, 162, 163, 223, 235, 236, 240, 247, 249, 256, 258, 279, 283, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 335, 337, 339, 340, 341, 342, 344, 345, 349, 350, 353, 355, 372, 378, 384, 386, 395, 439, 480], "add_op": [4, 37, 242, 243, 257, 278, 337, 397, 398, 400, 401], "op": [4, 7, 10, 13, 16, 32, 35, 36, 40, 41, 44, 47, 48, 49, 61, 66, 88, 94, 95, 96, 142, 162, 163, 166, 189, 192, 193, 194, 200, 201, 223, 230, 231, 232, 235, 239, 240, 242, 243, 251, 254, 257, 260, 261, 266, 268, 272, 278, 280, 282, 283, 287, 289, 292, 325, 327, 331, 337, 342, 350, 355, 360, 363, 364, 365, 366, 371, 376, 377, 378, 391, 392, 397, 398, 400, 401, 405, 407, 408, 418, 419, 421, 428, 443, 531, 539, 568], "allow_except": 4, "true": [4, 5, 6, 7, 9, 12, 14, 44, 45, 48, 54, 56, 60, 61, 68, 81, 87, 88, 95, 96, 101, 110, 114, 115, 116, 117, 118, 119, 120, 122, 127, 133, 136, 140, 144, 162, 163, 164, 240, 242, 243, 257, 274, 278, 282, 339, 378, 432, 443, 492, 525, 541, 546, 564, 568], "final": [4, 15, 16, 18, 24, 34, 37, 49, 52, 161, 162, 163, 164, 171, 181, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 283, 307, 327, 337, 339, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 382, 384, 390, 391, 393, 395, 396, 397, 398, 400, 401, 403, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 433, 435, 437, 439, 441, 568], "is_fin": 4, "get_partit": [4, 7, 37, 242, 243, 257, 278, 342, 397, 398, 400, 401], "polici": [4, 7, 18, 44, 193, 219, 220, 283, 337, 400, 401], "fusion": [4, 15, 19, 20, 36, 38, 56, 192, 193, 268, 284, 289, 405, 406, 443, 444], "creat": [4, 7, 8, 10, 15, 16, 18, 20, 22, 23, 24, 26, 29, 33, 34, 36, 37, 41, 42, 44, 46, 47, 48, 50, 53, 55, 56, 86, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 199, 211, 212, 219, 220, 221, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 289, 290, 291, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 337, 339, 340, 342, 344, 345, 351, 352, 353, 354, 355, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 523, 525, 531, 539, 546, 561], "new": [4, 7, 19, 23, 27, 36, 37, 49, 157, 162, 163, 171, 172, 181, 206, 240, 307, 311, 333, 334, 335, 337, 339, 342, 345, 378, 397, 400, 401, 492, 525], "float": [4, 6, 10, 11, 15, 16, 17, 25, 29, 32, 36, 37, 42, 48, 49, 56, 63, 64, 76, 112, 151, 152, 155, 159, 162, 163, 166, 169, 170, 177, 182, 183, 185, 196, 212, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 287, 289, 290, 292, 293, 298, 301, 304, 305, 307, 315, 317, 318, 319, 323, 325, 337, 341, 349, 355, 360, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 393, 395, 396, 398, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 531, 533, 535, 539, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "point": [4, 10, 11, 15, 16, 17, 22, 24, 25, 29, 32, 36, 37, 42, 43, 48, 49, 56, 76, 78, 112, 149, 151, 152, 155, 159, 161, 162, 166, 169, 170, 177, 182, 183, 185, 196, 212, 217, 218, 246, 260, 282, 287, 289, 293, 307, 313, 318, 319, 337, 341, 360, 371, 382, 383, 385, 386, 387, 405, 406, 421, 443, 444, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 531, 539, 541, 571, 573], "math": [4, 10, 32, 37, 166, 182, 183, 237, 248, 249, 274, 287, 289, 293, 319, 337, 360, 373, 432], "all": [4, 5, 7, 10, 14, 15, 16, 18, 22, 23, 24, 26, 29, 32, 33, 34, 36, 38, 40, 41, 42, 43, 44, 45, 47, 49, 52, 56, 66, 69, 71, 73, 74, 75, 101, 114, 115, 116, 117, 118, 119, 120, 125, 136, 144, 147, 148, 149, 152, 153, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 188, 189, 209, 210, 212, 219, 220, 240, 242, 243, 248, 249, 250, 251, 256, 257, 260, 268, 278, 280, 282, 289, 290, 291, 300, 301, 304, 307, 308, 314, 318, 319, 322, 327, 335, 337, 339, 340, 353, 354, 378, 382, 385, 386, 387, 395, 396, 397, 398, 399, 400, 401, 402, 405, 421, 439, 443, 450, 452, 454, 463, 465, 467, 469, 471, 473, 485, 489, 491, 495, 497, 499, 501, 505, 507, 509, 511, 517, 519, 525, 530, 537, 541, 542, 561, 568, 571, 573], "inherit": [4, 52, 268, 307, 337, 421], "set": [4, 6, 7, 8, 10, 12, 14, 15, 16, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 44, 45, 46, 48, 49, 51, 52, 53, 56, 60, 70, 88, 95, 96, 110, 114, 115, 116, 117, 118, 119, 120, 125, 148, 149, 151, 153, 155, 161, 162, 163, 165, 166, 173, 176, 230, 231, 235, 236, 240, 242, 243, 248, 249, 257, 259, 262, 268, 269, 270, 276, 278, 282, 283, 289, 291, 295, 297, 300, 302, 304, 306, 307, 308, 310, 311, 313, 315, 317, 318, 319, 324, 325, 326, 327, 334, 335, 337, 341, 345, 353, 354, 363, 365, 370, 371, 372, 378, 396, 397, 398, 399, 401, 402, 403, 409, 420, 421, 422, 424, 435, 443, 492, 523, 525, 531, 539, 564, 567, 568], "enabl": [4, 10, 14, 15, 18, 19, 20, 24, 27, 29, 30, 31, 32, 33, 34, 36, 39, 46, 49, 50, 51, 52, 53, 54, 56, 143, 144, 148, 149, 155, 157, 164, 166, 229, 239, 242, 243, 254, 257, 261, 263, 265, 270, 278, 281, 283, 307, 319, 335, 347, 349, 361, 370, 371, 376, 387, 391, 395, 398, 405, 407, 411, 416, 424, 441, 443, 523], "automat": [4, 10, 36, 38, 52, 148, 172, 180, 181, 197, 198, 461, 563], "down": [4, 10, 14, 17, 29, 37, 41, 43, 52, 162, 164, 165, 421], "convers": [4, 10, 14, 16, 17, 29, 43, 52, 123, 162, 163, 182, 183, 217, 218], "promot": 4, "speedup": [4, 14, 421], "lower": [4, 10, 11, 16, 20, 28, 29, 32, 37, 38, 45, 46, 49, 52, 67, 68, 144, 146, 147, 152, 164, 165, 181], "precis": [4, 10, 11, 16, 17, 25, 29, 32, 44, 45, 47, 49, 50, 52, 56, 141, 151, 155, 159, 162, 163, 164, 177, 185, 196, 240, 246, 250, 285, 289, 292, 325, 355, 378, 382, 383, 387, 525, 539], "data": [4, 5, 8, 11, 14, 15, 16, 17, 18, 19, 24, 25, 28, 36, 37, 38, 40, 43, 47, 48, 52, 149, 159, 161, 166, 177, 181, 185, 194, 196, 198, 201, 207, 208, 209, 210, 211, 212, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 287, 289, 292, 293, 294, 298, 299, 304, 307, 314, 315, 316, 317, 318, 320, 323, 325, 326, 327, 337, 339, 345, 355, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 446, 483, 501, 503, 523, 525, 531, 539, 545, 553, 555, 563, 567, 568, 569, 571, 583], "type": [4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 33, 36, 37, 38, 43, 47, 48, 49, 149, 159, 160, 164, 165, 166, 177, 184, 185, 186, 194, 196, 200, 204, 210, 211, 212, 223, 228, 235, 236, 240, 244, 245, 246, 253, 256, 268, 282, 283, 287, 288, 289, 293, 299, 300, 304, 307, 308, 313, 318, 324, 326, 327, 330, 337, 339, 342, 345, 346, 353, 354, 367, 371, 372, 378, 380, 381, 382, 390, 395, 396, 398, 405, 421, 439, 443, 446, 483, 492, 501, 503, 523, 525, 531, 539, 542, 567, 568, 569], "when": [4, 5, 8, 10, 11, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 181, 188, 192, 193, 198, 200, 219, 220, 240, 248, 252, 253, 289, 307, 308, 313, 314, 319, 325, 327, 335, 339, 355, 378, 385, 386, 389, 390, 395, 420, 421, 483, 523, 531, 539, 568], "avail": [4, 11, 14, 21, 24, 25, 29, 30, 32, 36, 38, 42, 44, 45, 47, 51, 54, 56, 114, 115, 116, 117, 118, 119, 120, 136, 145, 149, 151, 165, 166, 194, 222, 223, 229, 235, 236, 247, 248, 249, 313, 361, 372, 384, 385, 386, 396, 420, 439, 541], "enforc": [4, 10, 12, 48], "compli": [4, 14, 421], "specifi": [4, 6, 10, 11, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 29, 31, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 61, 69, 71, 76, 77, 78, 79, 86, 87, 88, 93, 94, 102, 103, 104, 105, 108, 112, 114, 115, 116, 117, 118, 119, 120, 125, 135, 136, 137, 138, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 162, 163, 165, 166, 181, 188, 189, 200, 201, 219, 220, 233, 234, 236, 237, 240, 241, 248, 249, 250, 253, 268, 289, 290, 292, 301, 304, 307, 308, 319, 324, 325, 327, 333, 342, 351, 352, 353, 354, 355, 369, 370, 372, 373, 378, 379, 385, 386, 387, 390, 395, 396, 397, 398, 399, 400, 401, 402, 405, 420, 439, 443, 479, 492, 501, 503, 523, 531, 537, 539, 542, 545, 561, 568, 569], "boolean": [4, 32, 37, 44, 45, 87, 125, 177, 185, 289, 341, 539], "flag": [4, 20, 24, 32, 36, 37, 39, 45, 46, 53, 149, 153, 165, 166, 173, 174, 175, 176, 200, 201, 211, 212, 215, 216, 225, 253, 283, 290, 292, 301, 304, 313, 318, 319, 322, 325, 327, 335, 337, 342, 349, 350, 355, 363, 364, 390, 420, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 533, 535, 537, 542, 544, 546, 548, 550, 553, 555, 557, 559, 561, 563, 564, 568, 569, 571, 573], "setter": [4, 10, 27, 31, 37, 162], "control": [4, 10, 17, 18, 19, 20, 23, 24, 29, 32, 46, 53, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 88, 93, 94, 101, 103, 104, 136, 144, 161, 289, 290, 301, 304, 311, 319, 334, 335, 337, 445, 561], "whether": [4, 29, 33, 37, 52, 55, 60, 61, 88, 95, 101, 110, 143, 289, 307, 308, 313, 337, 353, 370, 420, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 533, 535, 537, 539, 544, 546, 548, 550, 553, 555, 557, 559, 561, 563, 568, 569, 571, 573], "arithmet": [4, 32, 37, 117, 135, 149, 155, 162, 250, 289, 337, 387, 539], "integr": [4, 11, 19, 24, 32, 37, 38, 45, 48, 54, 149, 242, 243, 251, 257, 278, 280, 282, 319, 337, 443], "oper": [4, 5, 6, 7, 10, 12, 13, 15, 16, 18, 19, 20, 22, 24, 26, 28, 29, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 159, 162, 163, 164, 165, 172, 188, 189, 190, 191, 192, 193, 194, 201, 222, 223, 224, 232, 240, 242, 243, 251, 254, 256, 257, 260, 264, 268, 278, 280, 282, 284, 289, 290, 291, 292, 298, 301, 304, 307, 308, 313, 315, 317, 325, 326, 327, 337, 339, 340, 341, 342, 349, 353, 355, 363, 364, 367, 370, 371, 378, 382, 390, 391, 395, 396, 397, 398, 400, 401, 405, 406, 414, 420, 421, 439, 443, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573, 581], "get": [4, 13, 17, 22, 27, 35, 36, 41, 42, 44, 47, 48, 149, 164, 165, 242, 243, 246, 253, 256, 257, 258, 274, 278, 279, 298, 318, 319, 325, 337, 339, 345, 360, 382, 420, 432, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573], "add": [4, 6, 14, 22, 24, 29, 36, 40, 44, 47, 50, 52, 54, 56, 60, 61, 65, 70, 71, 72, 73, 74, 75, 103, 104, 150, 152, 162, 163, 165, 171, 172, 190, 200, 201, 215, 216, 234, 240, 242, 243, 248, 257, 268, 278, 286, 307, 337, 341, 370, 371, 378, 385, 386, 397, 398, 421, 525], "dag": [4, 41, 42, 44, 45, 337], "failur": [4, 165, 166, 188, 307, 337, 397, 400, 401, 480, 525], "ha": [4, 5, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 28, 32, 36, 37, 38, 42, 43, 49, 52, 56, 86, 88, 95, 96, 97, 144, 145, 147, 148, 149, 159, 162, 163, 165, 166, 181, 198, 201, 239, 240, 249, 250, 254, 289, 307, 308, 311, 313, 319, 324, 334, 337, 339, 353, 354, 370, 376, 378, 382, 385, 387, 390, 391, 395, 396, 420, 421, 439, 483, 525, 541], "alreadi": [4, 36, 48, 149, 162, 311, 334, 337, 395, 420, 541], "been": [4, 15, 24, 159, 289, 307, 308, 313, 324, 337, 353, 354, 421, 523, 541], "ad": [4, 6, 17, 18, 29, 37, 47, 52, 62, 63, 64, 65, 88, 95, 96, 164, 181, 188, 217, 218, 268, 327, 337, 341, 397, 398, 400, 401, 421, 568], "cannot": [4, 10, 15, 33, 36, 37, 48, 52, 56, 123, 145, 146, 151, 153, 160, 164, 165, 194, 199, 219, 220, 221, 223, 246, 307, 319, 337, 382, 479, 492, 523, 525, 537, 546, 561], "schema": [4, 194, 199, 221, 223, 337], "check": [4, 7, 10, 16, 20, 22, 29, 34, 37, 46, 48, 50, 55, 56, 123, 146, 153, 154, 162, 163, 165, 166, 188, 189, 233, 235, 236, 240, 241, 242, 243, 246, 249, 250, 252, 253, 256, 257, 258, 260, 278, 279, 283, 289, 307, 308, 313, 335, 337, 342, 353, 369, 370, 372, 378, 379, 382, 386, 387, 389, 395, 396, 397, 398, 399, 400, 401, 402, 405, 420, 461, 480, 492, 525, 537, 539, 541, 546, 551, 563], "eg": [4, 5, 192, 193, 282, 337, 339, 443], "number": [4, 5, 7, 14, 15, 16, 17, 18, 20, 22, 24, 25, 28, 29, 32, 36, 37, 40, 42, 44, 45, 46, 47, 48, 53, 56, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 75, 76, 78, 79, 88, 103, 104, 112, 142, 144, 147, 148, 150, 153, 161, 164, 165, 166, 181, 188, 211, 212, 236, 237, 238, 241, 244, 245, 248, 249, 263, 274, 277, 289, 291, 292, 294, 295, 296, 297, 299, 307, 308, 309, 311, 313, 314, 319, 323, 324, 325, 327, 333, 334, 337, 339, 340, 341, 342, 344, 354, 355, 369, 370, 371, 372, 373, 374, 379, 380, 381, 382, 411, 432, 437, 463, 465, 467, 469, 471, 473, 479, 483, 523, 525, 527, 529, 531, 539, 542, 553, 555, 557, 559, 564, 568], "attribut": [4, 6, 19, 32, 37, 41, 44, 45, 47, 48, 148, 149, 161, 165, 166, 188, 189, 201, 211, 240, 250, 260, 268, 282, 287, 290, 291, 294, 295, 297, 298, 301, 302, 304, 305, 306, 309, 310, 312, 313, 315, 316, 317, 318, 320, 321, 323, 326, 327, 337, 341, 360, 365, 366, 371, 376, 377, 378, 386, 387, 391, 392, 397, 399, 400, 401, 402, 405, 407, 408, 418, 419, 421, 428, 429, 443, 446, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 483, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 531, 533, 535, 538, 539, 542, 544, 545, 546, 548, 550, 553, 555, 557, 559, 563, 566, 567, 568, 571, 573], "etc": [4, 5, 12, 19, 23, 28, 36, 40, 41, 44, 148, 149, 152, 164, 165, 166, 299, 337, 339, 397, 400, 401, 525, 542], "allow": [4, 10, 11, 14, 16, 17, 19, 24, 26, 29, 30, 31, 32, 36, 37, 40, 48, 49, 50, 54, 59, 77, 87, 102, 105, 108, 125, 138, 147, 156, 159, 161, 163, 170, 177, 180, 182, 183, 206, 241, 268, 289, 291, 292, 307, 310, 315, 317, 325, 355, 379, 421, 439, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 525, 527, 529, 533, 535, 544, 546, 548, 550, 553, 555, 557, 559, 563, 568, 569, 571, 573], "throw": [4, 10, 25, 145, 162, 163, 229, 235, 236, 240, 244, 245, 246, 247, 249, 250, 253, 256, 258, 260, 268, 279, 354, 361, 372, 378, 380, 381, 382, 384, 386, 387, 390, 395, 396, 405, 439, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 480, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 533, 535, 541, 544, 546, 548, 550, 553, 555, 557, 559, 563, 568, 569, 571, 573], "fail": [4, 38, 149, 165, 166, 194, 222, 223, 246, 250, 256, 258, 260, 279, 382, 387, 395, 396, 405, 439, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 480, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 533, 535, 541, 544, 546, 548, 550, 553, 555, 557, 559, 563, 568, 569, 571, 573], "success": [4, 55, 194, 222, 223, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 337, 339, 340, 341, 342, 344, 345, 353, 355, 421, 541], "describ": [4, 5, 11, 14, 15, 16, 17, 19, 24, 28, 32, 37, 40, 42, 48, 49, 52, 93, 94, 144, 151, 153, 160, 161, 164, 180, 181, 197, 246, 274, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 337, 339, 340, 341, 342, 344, 345, 353, 355, 370, 382, 395, 396, 420, 432, 439, 459, 478, 522, 524, 525, 536, 540, 551, 560, 565, 566], "error": [4, 15, 16, 24, 25, 30, 31, 37, 38, 42, 44, 45, 48, 49, 52, 145, 162, 163, 165, 235, 236, 240, 246, 247, 249, 256, 279, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 332, 333, 337, 339, 340, 341, 342, 344, 345, 349, 353, 355, 372, 378, 382, 384, 386, 395, 420, 439, 530, 539], "otherwis": [4, 5, 13, 17, 20, 24, 30, 32, 34, 38, 48, 68, 81, 90, 114, 115, 116, 117, 118, 119, 120, 122, 127, 133, 140, 145, 162, 200, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 337, 339, 340, 341, 342, 344, 345, 353, 355, 475, 492, 525, 568], "mean": [4, 5, 14, 15, 16, 22, 26, 27, 28, 34, 36, 37, 40, 42, 48, 55, 62, 63, 64, 70, 71, 72, 73, 74, 75, 78, 79, 88, 95, 96, 99, 100, 103, 104, 117, 136, 137, 144, 146, 147, 150, 151, 154, 155, 156, 162, 163, 164, 171, 172, 184, 186, 187, 195, 200, 201, 230, 232, 240, 256, 259, 262, 267, 290, 292, 295, 297, 298, 301, 304, 307, 313, 315, 325, 335, 337, 342, 355, 363, 367, 378, 390, 395, 396, 403, 409, 420, 439, 454, 456, 463, 465, 467, 469, 471, 473, 475, 477, 483, 485, 487, 501, 503, 525], "finish": [4, 37, 162, 163, 240, 242, 243, 251, 257, 278, 280, 322, 337, 378, 397, 398, 400, 401, 561, 564], "readi": [4, 37, 48, 327, 337, 395, 397, 400, 401, 420, 568], "similarli": [4, 42, 52, 146, 153, 337, 420], "un": [4, 337], "also": [4, 7, 15, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 32, 36, 37, 38, 41, 42, 44, 47, 49, 54, 56, 97, 144, 148, 149, 151, 157, 161, 162, 163, 164, 165, 181, 211, 229, 240, 250, 263, 265, 274, 281, 289, 290, 291, 294, 295, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 337, 339, 342, 355, 361, 370, 378, 387, 390, 395, 396, 397, 398, 399, 400, 401, 402, 411, 416, 420, 432, 439, 441, 523, 525, 531, 539, 542], "filter": [4, 28, 149, 164, 165, 337], "claim": [4, 337, 413], "intern": [4, 7, 18, 24, 30, 31, 33, 37, 165, 177, 180, 206, 229, 234, 239, 254, 261, 263, 265, 270, 274, 281, 289, 337, 361, 376, 385, 391, 396, 400, 401, 407, 411, 416, 424, 432, 439, 441], "capabl": [4, 10, 15, 30, 32, 36, 43, 166, 337], "store": [4, 8, 16, 18, 19, 28, 29, 38, 42, 44, 45, 47, 49, 52, 136, 143, 148, 149, 153, 155, 162, 163, 164, 201, 236, 240, 249, 260, 282, 292, 307, 325, 355, 372, 378, 382, 386, 395, 397, 398, 400, 401, 405, 443, 492, 523, 538], "dnnl_dim_t": [5, 212, 233, 241, 252, 283, 289, 292, 296, 301, 305, 307, 320, 325, 327, 349, 355, 369, 379, 389, 523], "dim": [5, 15, 16, 36, 56, 151, 162, 163, 164, 181, 211, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 289, 307, 313, 339, 361, 363, 365, 367, 369, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 483, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 539, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 568, 569, 571, 573, 576, 577, 578, 579, 580], "enum": [5, 6, 7, 161, 164, 283, 288, 289, 296, 299, 300, 307, 308, 313, 314, 318, 319, 322, 324, 326, 329, 330, 339, 341, 342, 343, 349, 350, 353, 354, 356, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 479, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 523, 526, 528, 532, 534, 537, 543, 545, 547, 549, 552, 554, 556, 558, 561, 562, 570, 572], "data_typ": [5, 15, 16, 36, 52, 151, 162, 163, 164, 165, 166, 177, 211, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 307, 349, 361, 363, 365, 367, 372, 373, 374, 376, 378, 380, 381, 382, 384, 385, 386, 387, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 483, 501, 503, 523, 525, 531, 539, 568, 569], "layout_typ": [5, 37, 242, 243, 251, 257, 278, 280, 283, 339, 397, 398, 399, 400, 401, 402, 483], "property_typ": [5, 243, 283, 398], "dnnl_graph_logical_tensor_t": [5, 283, 333, 339, 341, 342, 345], "c_data": 5, "dtype": [5, 283, 339], "int32_t": [5, 36, 52, 244, 245, 246, 249, 260, 283, 289, 292, 307, 313, 325, 339, 349, 355, 380, 381, 382, 405, 531], "ndim": [5, 33, 36, 53, 164, 166, 181, 233, 241, 283, 289, 307, 339, 354, 369, 379, 483], "ltype": [5, 283, 339], "ptype": [5, 283, 339], "undef": [5, 15, 165, 166, 172, 185, 186, 187, 188, 196, 197, 198, 199, 205, 207, 209, 211, 213, 215, 228, 242, 243, 257, 278, 283, 397, 398, 400, 401, 420, 421, 450, 452, 454, 456, 458, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 527, 529, 531, 533, 535, 542, 544, 553, 555, 557, 559, 571, 573], "adim": [5, 253, 283, 525], "stride": [5, 10, 15, 16, 28, 29, 37, 41, 56, 60, 61, 70, 71, 72, 73, 74, 75, 103, 104, 123, 161, 165, 166, 180, 181, 184, 186, 188, 189, 197, 198, 211, 212, 233, 234, 235, 236, 237, 239, 241, 242, 243, 251, 254, 256, 257, 267, 268, 269, 274, 278, 280, 283, 289, 295, 297, 307, 309, 339, 369, 370, 371, 372, 373, 376, 379, 391, 395, 397, 398, 400, 401, 405, 420, 421, 422, 432, 443, 463, 465, 467, 469, 471, 473, 483, 525, 527, 529, 531, 542], "lid": 5, "get_dim": [5, 164, 246, 260, 268, 282, 382, 405, 421, 443, 525], "get_id": [5, 7, 242, 243, 251, 257, 278, 280], "get_data_typ": [5, 162, 163, 240, 242, 243, 251, 257, 268, 278, 280, 378, 421, 525], "get_property_typ": 5, "get_layout_typ": 5, "get_layout_id": 5, "get_strid": [5, 164, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 525, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_mem_s": [5, 37], "is_equ": [5, 283, 339], "lt": [5, 8, 283, 333], "integ": [5, 13, 16, 30, 32, 43, 49, 52, 56, 124, 149, 162, 169, 170, 173, 176, 177, 185, 196, 246, 248, 289, 292, 325, 341, 355, 371, 382, 523, 539], "repres": [5, 6, 7, 15, 16, 19, 28, 29, 36, 37, 43, 52, 67, 70, 86, 99, 100, 128, 129, 142, 149, 162, 165, 242, 243, 244, 245, 251, 257, 278, 280, 333, 337, 342, 370, 380, 381, 385, 386, 390, 395, 396, 421, 439, 523], "dimens": [5, 7, 13, 15, 16, 18, 19, 20, 22, 26, 28, 29, 34, 36, 37, 41, 42, 43, 44, 45, 46, 49, 50, 53, 56, 60, 61, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 86, 88, 93, 95, 96, 99, 100, 101, 103, 104, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 125, 128, 136, 137, 146, 147, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 180, 181, 188, 197, 198, 204, 211, 212, 228, 229, 230, 231, 232, 238, 239, 240, 247, 250, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 289, 291, 292, 294, 295, 296, 297, 304, 307, 309, 317, 325, 327, 339, 342, 345, 354, 355, 361, 363, 365, 367, 374, 376, 378, 382, 384, 385, 386, 387, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 461, 463, 465, 467, 469, 471, 473, 483, 523, 525, 527, 529, 531, 539, 548, 550, 568, 569], "size": [5, 9, 15, 16, 18, 20, 22, 25, 27, 28, 32, 36, 37, 42, 44, 45, 46, 48, 49, 52, 53, 60, 61, 65, 78, 93, 94, 103, 104, 128, 145, 146, 147, 150, 152, 156, 161, 162, 163, 164, 177, 181, 185, 188, 189, 198, 211, 212, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 253, 254, 255, 256, 257, 259, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 289, 291, 292, 305, 307, 308, 313, 314, 320, 325, 327, 332, 335, 339, 340, 344, 350, 353, 355, 361, 363, 365, 367, 369, 370, 372, 373, 374, 376, 378, 379, 380, 381, 382, 385, 386, 387, 391, 393, 395, 403, 407, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 483, 485, 487, 513, 515, 523, 525, 531, 539, 542, 553, 555, 568], "implement": [5, 10, 11, 12, 15, 16, 18, 19, 24, 25, 30, 32, 36, 37, 38, 43, 47, 48, 49, 52, 76, 78, 79, 101, 112, 142, 144, 145, 148, 157, 159, 160, 164, 166, 169, 170, 177, 185, 194, 200, 206, 211, 212, 222, 223, 229, 232, 235, 236, 239, 242, 243, 247, 249, 250, 251, 253, 254, 256, 257, 261, 268, 270, 278, 280, 313, 319, 325, 355, 361, 363, 364, 367, 369, 370, 372, 373, 376, 379, 384, 385, 386, 387, 390, 391, 395, 396, 403, 404, 407, 420, 424, 439, 492, 523, 541, 542, 564], "ar": [5, 10, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 60, 61, 62, 63, 70, 71, 72, 73, 74, 75, 76, 78, 79, 86, 88, 95, 96, 101, 103, 104, 112, 114, 115, 116, 117, 118, 119, 120, 125, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 181, 188, 198, 201, 209, 210, 211, 212, 219, 220, 229, 239, 240, 242, 243, 246, 248, 249, 250, 251, 254, 255, 257, 260, 261, 263, 265, 268, 270, 274, 278, 280, 281, 282, 289, 290, 291, 292, 295, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 310, 313, 317, 318, 319, 320, 321, 324, 325, 326, 327, 335, 339, 353, 354, 355, 361, 367, 369, 370, 371, 376, 378, 382, 385, 386, 387, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 405, 407, 411, 413, 416, 420, 421, 424, 432, 439, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 483, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 530, 531, 533, 535, 537, 539, 542, 544, 545, 546, 548, 550, 553, 555, 557, 559, 563, 564, 567, 568, 571, 573], "forc": [5, 14, 44, 56, 523], "limit": [5, 15, 16, 23, 25, 30, 31, 40, 47, 148, 149, 166, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 335, 361, 363, 365, 367, 369, 370, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 523], "length": [5, 42, 44, 45, 110, 111, 248, 249, 274, 289, 341, 432, 523], "copi": [5, 10, 15, 136, 137, 151, 159, 162, 163, 212, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 307, 316, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 479, 492, 523, 525, 537, 539, 561], "layout": [5, 7, 13, 15, 22, 37, 47, 53, 56, 66, 123, 136, 137, 141, 153, 161, 162, 166, 181, 184, 186, 204, 228, 229, 239, 242, 243, 249, 251, 254, 257, 260, 261, 263, 265, 270, 274, 278, 280, 281, 282, 283, 289, 307, 339, 342, 345, 361, 370, 376, 385, 386, 391, 397, 400, 401, 405, 407, 411, 416, 420, 424, 432, 441, 443, 483, 525, 531, 539], "properti": [5, 10, 37, 161, 165, 187, 195, 219, 220, 246, 278, 280, 339, 382, 398, 401, 402, 413, 483], "element": [5, 15, 28, 29, 32, 34, 36, 44, 45, 48, 57, 59, 67, 70, 76, 77, 78, 79, 80, 83, 84, 86, 87, 89, 91, 95, 96, 97, 98, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 130, 132, 134, 135, 136, 137, 138, 139, 141, 150, 161, 164, 166, 181, 188, 192, 193, 194, 201, 205, 206, 222, 223, 255, 289, 291, 292, 294, 295, 297, 307, 308, 309, 323, 324, 325, 339, 341, 345, 353, 354, 355, 360, 382, 390, 394, 395, 463, 465, 467, 469, 471, 473, 483, 523, 527, 529, 531], "1": [5, 13, 14, 15, 19, 20, 22, 24, 26, 30, 32, 33, 34, 36, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 140, 144, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 171, 172, 173, 176, 177, 181, 184, 193, 195, 196, 198, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 276, 278, 279, 280, 281, 282, 283, 289, 291, 292, 307, 313, 319, 325, 327, 339, 342, 354, 355, 361, 363, 365, 367, 369, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 409, 411, 414, 416, 418, 420, 421, 422, 426, 428, 432, 433, 434, 435, 436, 439, 441, 443, 458, 461, 483, 525, 531, 541, 542, 546, 563, 564], "unknown": [5, 7, 37, 202, 203, 226, 227, 236, 237, 242, 243, 257, 278, 307, 339, 342, 372, 373, 387, 405, 443, 483], "see": [5, 10, 15, 16, 19, 20, 21, 23, 24, 26, 29, 32, 34, 36, 38, 41, 44, 46, 47, 48, 49, 52, 53, 56, 73, 95, 146, 148, 149, 150, 153, 156, 157, 160, 162, 163, 164, 165, 167, 181, 198, 211, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 290, 291, 294, 295, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 332, 353, 354, 355, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 390, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 523, 531, 537, 539, 542, 545, 564, 571, 573], "dnnl_graph_unknown_ndim": [5, 242, 243, 251, 257, 278, 280, 283, 339, 483], "0": [5, 9, 13, 15, 16, 18, 22, 24, 29, 34, 36, 38, 40, 44, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 149, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 177, 180, 181, 184, 189, 195, 196, 201, 204, 208, 210, 212, 214, 221, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 291, 299, 307, 308, 311, 313, 319, 327, 334, 335, 337, 339, 342, 353, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 483, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 539, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 564, 568, 571, 573], "scalar": [5, 15, 149, 289, 292, 325, 355, 483, 531], "deleg": 5, "basic": [5, 10, 15, 24, 149, 151, 162, 163, 240, 256, 285, 292, 299, 307, 312, 322, 339, 342, 347, 378, 390, 395, 396, 439, 446, 525, 583], "inform": [5, 15, 28, 37, 38, 45, 47, 48, 54, 56, 145, 148, 161, 164, 165, 166, 211, 244, 245, 267, 274, 307, 313, 319, 327, 333, 339, 360, 380, 381, 397, 398, 399, 400, 401, 402, 420, 432, 568, 574], "dnnl_graph_unknown_dim": [5, 283, 339, 483], "defin": [5, 10, 11, 15, 17, 19, 20, 24, 26, 29, 32, 33, 36, 38, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 69, 70, 76, 78, 79, 90, 95, 97, 101, 112, 143, 146, 147, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 177, 185, 188, 189, 233, 236, 237, 240, 241, 256, 258, 278, 280, 283, 289, 292, 296, 307, 313, 319, 325, 339, 355, 369, 372, 373, 378, 379, 386, 390, 395, 397, 398, 399, 400, 401, 402, 421, 483, 531, 539], "zero": [5, 13, 15, 16, 20, 29, 32, 36, 43, 44, 45, 48, 49, 56, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 75, 76, 78, 79, 97, 103, 104, 112, 136, 151, 153, 162, 163, 164, 166, 201, 211, 212, 232, 236, 237, 240, 244, 245, 246, 260, 274, 282, 289, 295, 297, 302, 304, 306, 307, 313, 318, 335, 337, 367, 372, 373, 378, 380, 381, 382, 383, 405, 406, 432, 443, 444, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 483, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 525, 527, 529, 531, 533, 535, 539, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "field": [5, 9, 41, 42, 44, 45, 165, 181, 184, 186, 248, 289, 307, 339, 447, 480, 575, 576, 577, 578, 579, 580, 581], "deduc": [5, 7, 37, 152, 342, 420, 483], "accordingli": [5, 15, 16, 164, 307, 339, 371, 396, 439, 525, 530], "alwai": [5, 13, 15, 19, 20, 24, 32, 34, 36, 44, 46, 48, 49, 50, 52, 53, 55, 56, 151, 153, 162, 163, 164, 181, 240, 289, 307, 319, 378, 382, 390, 395, 525, 531, 539], "current": [5, 10, 13, 14, 15, 16, 20, 23, 27, 30, 31, 32, 36, 44, 45, 47, 48, 52, 145, 147, 149, 151, 153, 164, 165, 166, 250, 260, 274, 282, 307, 319, 335, 351, 352, 387, 405, 432, 443, 483], "support": [5, 7, 12, 14, 16, 17, 18, 19, 23, 24, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 56, 143, 144, 148, 149, 152, 154, 162, 163, 164, 165, 166, 173, 176, 188, 189, 201, 205, 235, 236, 240, 247, 248, 249, 250, 282, 284, 289, 290, 291, 292, 295, 296, 297, 298, 301, 304, 306, 307, 313, 319, 325, 342, 347, 351, 352, 355, 371, 372, 378, 384, 385, 386, 387, 395, 420, 443, 456, 458, 461, 483, 487, 523, 530, 531, 539, 541, 546, 563], "neg": [5, 15, 20, 29, 32, 49, 60, 61, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 95, 96, 97, 99, 100, 103, 104, 137, 162, 163, 201, 235, 240, 252, 253, 256, 279, 318, 335, 371, 378, 389, 390, 395, 439, 483, 542, 553, 555, 557, 559, 571, 573], "valu": [5, 6, 8, 10, 13, 14, 15, 16, 17, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 42, 43, 44, 48, 49, 50, 51, 52, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 140, 143, 145, 146, 148, 149, 151, 155, 159, 161, 162, 163, 164, 165, 166, 232, 236, 237, 240, 244, 245, 246, 249, 252, 253, 256, 260, 279, 282, 283, 288, 289, 290, 291, 292, 295, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 310, 311, 313, 315, 317, 318, 319, 320, 321, 324, 325, 326, 327, 334, 335, 337, 339, 341, 343, 345, 353, 354, 355, 367, 371, 372, 373, 378, 380, 381, 382, 385, 386, 387, 389, 390, 395, 405, 420, 421, 439, 443, 450, 452, 454, 456, 461, 463, 465, 467, 469, 471, 473, 477, 479, 483, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 515, 517, 519, 523, 525, 527, 529, 531, 535, 537, 539, 541, 542, 544, 545, 546, 550, 555, 559, 563, 567, 568, 571, 573], "opaqu": [5, 7, 10, 15, 37, 123, 146, 180, 184, 186, 197, 199, 212, 221, 339, 342, 459, 478, 483, 522, 524, 530, 536, 538, 540, 560, 565, 566], "assign": [5, 28, 230, 231, 249, 259, 262, 269, 276, 307, 363, 365, 386, 403, 409, 422, 435, 492, 525], "each": [5, 7, 15, 16, 18, 22, 28, 29, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 71, 73, 74, 75, 86, 88, 114, 115, 116, 117, 118, 119, 120, 125, 135, 144, 145, 147, 150, 152, 153, 154, 161, 165, 180, 188, 192, 193, 197, 219, 220, 238, 249, 256, 289, 292, 295, 297, 307, 308, 309, 313, 314, 323, 324, 325, 327, 335, 337, 339, 342, 353, 354, 355, 370, 371, 374, 382, 390, 395, 421, 463, 465, 467, 469, 471, 473, 483, 523, 525, 527, 529, 531, 539, 563, 568], "call": [5, 7, 15, 18, 21, 25, 27, 28, 29, 30, 31, 33, 36, 37, 41, 47, 48, 50, 52, 97, 143, 145, 153, 154, 162, 163, 164, 165, 240, 289, 307, 308, 314, 319, 324, 325, 327, 332, 335, 337, 340, 342, 344, 353, 354, 370, 378, 382, 385, 386, 390, 395, 396, 397, 398, 400, 401, 402, 420, 421, 439, 479, 480, 492, 523, 537, 539, 561, 564, 568], "byte": [5, 18, 32, 52, 211, 212, 307, 308, 313, 339, 340, 353, 523, 525], "compar": [5, 18, 38, 42, 45, 48, 52, 56, 125, 159, 246, 250, 307, 339, 382, 383, 387, 420, 551], "two": [5, 18, 19, 22, 24, 28, 29, 33, 36, 37, 40, 41, 43, 44, 45, 48, 49, 52, 56, 59, 77, 87, 101, 102, 105, 108, 123, 125, 135, 138, 143, 146, 149, 153, 161, 162, 163, 164, 165, 181, 198, 219, 220, 240, 274, 291, 299, 307, 316, 339, 376, 377, 378, 387, 390, 395, 397, 400, 401, 402, 432], "tenor": [5, 339], "equal": [5, 15, 20, 22, 26, 33, 36, 42, 45, 46, 48, 50, 53, 60, 78, 79, 87, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 125, 136, 143, 145, 146, 147, 152, 155, 156, 164, 171, 172, 181, 198, 243, 289, 291, 292, 307, 308, 314, 324, 325, 339, 353, 354, 355, 395, 398, 492, 523, 525, 531, 539], "decid": [5, 37, 184, 186, 242, 243, 257, 278, 339, 420, 450, 454, 463, 465, 469, 471, 475, 485, 489, 495, 497, 501, 505, 509, 513, 517, 527, 533, 548, 553, 557, 571], "reorder": [5, 16, 19, 24, 26, 27, 32, 35, 40, 44, 47, 48, 49, 52, 56, 149, 156, 162, 163, 165, 166, 190, 205, 206, 211, 229, 233, 234, 235, 236, 237, 239, 240, 241, 246, 247, 248, 249, 252, 253, 254, 260, 261, 263, 265, 267, 268, 270, 274, 281, 282, 283, 286, 287, 299, 307, 312, 313, 339, 349, 360, 361, 369, 370, 371, 372, 373, 376, 378, 379, 382, 384, 385, 386, 391, 405, 407, 411, 416, 421, 424, 429, 432, 441, 443, 446, 537, 582], "need": [5, 16, 18, 23, 24, 33, 37, 40, 41, 42, 44, 45, 47, 48, 88, 143, 153, 162, 163, 164, 212, 233, 234, 236, 237, 240, 241, 242, 243, 251, 257, 267, 268, 274, 278, 280, 307, 313, 327, 337, 339, 345, 369, 372, 373, 378, 379, 390, 395, 396, 397, 398, 400, 401, 432, 439, 564, 568], "below": [5, 10, 15, 19, 20, 22, 23, 24, 25, 27, 29, 30, 33, 34, 36, 39, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 152, 153, 154, 157, 160, 164, 260, 282, 289, 339, 370, 395, 400, 401, 405, 420, 443, 531, 564], "circumst": [5, 7, 145, 165, 339, 342, 420], "regard": [5, 40, 73, 339], "struct": [5, 233, 241, 283, 289, 290, 291, 294, 295, 297, 298, 299, 301, 302, 304, 305, 306, 307, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 332, 333, 337, 339, 341, 342, 345, 349, 355, 356, 369, 379, 395, 421], "underli": [5, 8, 33, 36, 143, 148, 303, 307, 308, 324, 325, 338, 339, 340, 344, 345, 353, 354, 396, 439, 492, 523, 537], "For": [5, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 43, 44, 46, 48, 49, 50, 51, 52, 53, 55, 56, 76, 78, 79, 93, 94, 101, 112, 114, 115, 116, 117, 118, 119, 120, 143, 145, 147, 149, 151, 153, 156, 159, 161, 162, 163, 164, 166, 181, 187, 188, 195, 198, 201, 212, 229, 239, 240, 249, 254, 256, 261, 263, 265, 270, 281, 289, 290, 292, 301, 304, 307, 308, 313, 319, 324, 325, 327, 332, 339, 342, 353, 354, 355, 361, 370, 371, 376, 378, 382, 385, 386, 390, 391, 395, 396, 397, 398, 407, 411, 416, 420, 424, 439, 441, 483, 523, 530, 531, 539, 542, 568], "exampl": [5, 19, 21, 24, 25, 27, 28, 30, 31, 36, 37, 38, 39, 40, 43, 47, 48, 52, 54, 76, 78, 79, 82, 101, 112, 114, 115, 116, 117, 118, 119, 120, 125, 136, 144, 160, 164, 166, 181, 187, 195, 198, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 290, 301, 304, 307, 313, 319, 339, 347, 360, 362, 364, 366, 368, 375, 377, 382, 383, 387, 388, 389, 390, 392, 394, 395, 396, 397, 399, 400, 401, 402, 404, 405, 406, 408, 410, 412, 417, 419, 420, 423, 425, 427, 429, 431, 434, 436, 438, 439, 442, 443, 444, 445, 483, 525, 531, 539, 542, 583], "one": [5, 7, 11, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 33, 34, 36, 40, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 69, 71, 76, 78, 79, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 125, 136, 143, 144, 145, 146, 150, 151, 152, 153, 155, 156, 159, 162, 163, 164, 165, 166, 181, 198, 201, 229, 239, 240, 242, 243, 249, 251, 254, 257, 261, 263, 265, 268, 270, 274, 278, 280, 281, 289, 292, 298, 299, 307, 308, 313, 324, 325, 327, 339, 342, 347, 353, 354, 355, 361, 370, 376, 378, 382, 383, 385, 386, 390, 391, 395, 396, 398, 405, 406, 407, 411, 416, 420, 421, 424, 432, 439, 441, 443, 444, 475, 483, 525, 530, 537, 545, 568, 569], "while": [5, 18, 24, 25, 28, 29, 32, 36, 41, 42, 44, 45, 47, 48, 52, 78, 101, 143, 151, 153, 159, 181, 236, 237, 254, 258, 339, 342, 372, 373, 387, 391, 395, 551], "underneath": [5, 41, 44, 339], "both": [5, 18, 20, 22, 23, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 53, 56, 59, 61, 62, 64, 70, 71, 72, 73, 74, 75, 76, 77, 79, 87, 88, 95, 96, 102, 105, 108, 112, 138, 143, 144, 145, 149, 153, 155, 156, 159, 165, 181, 249, 255, 267, 270, 279, 290, 291, 298, 301, 304, 307, 319, 327, 339, 360, 385, 390, 393, 395, 396, 397, 400, 401, 405, 420, 424, 525], "nhwc": [5, 28, 152, 198, 232, 256, 272, 339, 367, 395, 428], "still": [5, 16, 24, 30, 47, 153, 164, 339, 395], "op_handl": 6, "attr": [6, 10, 15, 16, 18, 29, 47, 145, 151, 166, 242, 243, 249, 250, 251, 257, 260, 268, 278, 280, 282, 283, 289, 290, 291, 294, 295, 297, 298, 301, 302, 304, 305, 306, 309, 310, 313, 315, 316, 317, 318, 320, 321, 323, 386, 387, 397, 398, 399, 400, 401, 402, 405, 421, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 531, 533, 535, 539, 544, 545, 546, 548, 550, 553, 555, 557, 559, 563, 571, 573], "akind": [6, 283, 289, 299, 313, 349, 353, 354, 479], "string": [6, 24, 27, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 87, 88, 93, 94, 102, 103, 104, 105, 108, 110, 111, 112, 125, 135, 138, 162, 163, 165, 229, 230, 231, 232, 233, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 281, 313, 319, 341, 349, 361, 363, 365, 367, 369, 374, 376, 378, 379, 380, 381, 384, 390, 391, 393, 395, 396, 397, 398, 400, 401, 403, 407, 409, 411, 414, 416, 418, 422, 424, 428, 430, 433, 435, 437, 439, 441, 480], "verbose_nam": [6, 283, 341], "add_input": 6, "add_output": 6, "templat": [6, 149, 165, 246, 319, 330, 349, 354, 382, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "typenam": [6, 246, 330, 349, 354, 382, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "type_i": 6, "req": 6, "is_sam": [6, 246, 382], "int64_t": [6, 212, 242, 243, 246, 250, 257, 260, 278, 282, 283, 296, 341, 382, 387, 397, 398, 400, 401, 405, 443, 542], "set_attr": [6, 242, 243, 251, 257, 278, 280, 397, 398, 399, 400, 401, 402], "name": [6, 15, 20, 22, 23, 24, 26, 27, 29, 31, 34, 40, 46, 48, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 149, 151, 152, 153, 154, 155, 156, 160, 164, 165, 166, 181, 198, 211, 212, 219, 220, 283, 289, 319, 341, 360, 395, 413, 420, 440, 542], "type_f": 6, "type_b": 6, "type_": 6, "convolut": [6, 12, 15, 18, 19, 24, 26, 28, 32, 34, 35, 36, 38, 40, 43, 47, 48, 52, 71, 72, 73, 74, 75, 146, 149, 151, 164, 165, 166, 171, 172, 181, 190, 192, 193, 198, 205, 206, 233, 234, 235, 236, 237, 241, 242, 243, 254, 257, 267, 268, 278, 286, 287, 289, 307, 312, 313, 360, 369, 370, 371, 372, 373, 377, 379, 391, 395, 397, 400, 401, 421, 462, 463, 464, 465, 466, 467, 483, 517, 530, 531, 542, 582], "relu": [6, 19, 20, 28, 29, 34, 40, 41, 47, 56, 97, 110, 122, 147, 153, 162, 163, 171, 172, 190, 192, 193, 200, 201, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 247, 252, 253, 254, 255, 256, 257, 258, 260, 261, 266, 268, 278, 279, 286, 290, 298, 310, 363, 365, 369, 370, 371, 372, 373, 376, 378, 379, 384, 389, 391, 393, 396, 397, 398, 400, 401, 405, 406, 407, 418, 421, 439], "bound": [6, 18, 34, 48, 49, 67, 68, 149, 242, 243, 251, 257, 278, 280], "self": [6, 149, 166, 397, 398, 399, 400, 401, 402], "partition_handl": 7, "dnnl_graph_partition_t": [7, 283, 333, 337, 342], "p": [7, 13, 23, 51, 149, 150, 166, 211, 212, 248, 249, 283, 315, 385, 386, 542, 544], "aop": 7, "ekind": [7, 278, 283, 342, 401, 402], "get_ops_num": 7, "get_op": 7, "compiled_partit": [7, 37, 165, 242, 243, 251, 257, 278, 280, 283, 333, 340, 342, 344, 350, 351, 352, 397, 398, 399, 401, 402], "e": [7, 15, 16, 18, 20, 24, 26, 34, 36, 38, 46, 47, 48, 50, 53, 56, 80, 83, 95, 96, 106, 107, 126, 130, 155, 160, 161, 162, 163, 164, 165, 181, 198, 230, 235, 236, 240, 242, 243, 246, 247, 249, 250, 252, 253, 256, 257, 259, 260, 262, 263, 264, 274, 278, 279, 282, 289, 307, 319, 363, 372, 378, 382, 384, 386, 387, 389, 395, 403, 405, 409, 411, 414, 432, 439, 443, 461, 481, 525, 531, 541, 546, 563], "is_support": [7, 242, 243, 251, 257, 278, 280, 283, 342], "get_input_port": [7, 37, 242, 243, 251, 257, 278, 280], "get_output_port": [7, 37, 242, 243, 251, 257, 278, 280], "get_engine_kind": 7, "raw": [7, 25, 246, 250, 382, 387, 395], "c": [7, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 28, 29, 32, 34, 35, 40, 46, 50, 53, 54, 55, 56, 60, 62, 63, 65, 69, 88, 95, 96, 103, 128, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 160, 162, 163, 164, 177, 181, 185, 198, 211, 229, 234, 235, 236, 237, 240, 244, 245, 246, 247, 248, 249, 250, 253, 256, 258, 260, 262, 265, 274, 281, 282, 283, 288, 289, 292, 299, 300, 306, 307, 313, 318, 319, 325, 327, 349, 353, 354, 355, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 480, 485, 487, 489, 491, 492, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 544, 546, 548, 550, 551, 553, 555, 557, 559, 561, 563, 568, 571, 573], "handl": [7, 8, 15, 16, 18, 19, 25, 36, 37, 52, 151, 162, 163, 164, 166, 229, 230, 231, 232, 238, 239, 240, 242, 243, 247, 248, 249, 250, 251, 254, 255, 257, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 283, 289, 292, 299, 307, 308, 313, 322, 324, 325, 326, 327, 330, 332, 333, 337, 339, 340, 341, 342, 344, 345, 349, 353, 354, 355, 361, 363, 365, 367, 374, 376, 378, 384, 385, 386, 387, 391, 393, 395, 397, 398, 399, 400, 401, 402, 403, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 433, 435, 437, 439, 441, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573], "directli": [7, 20, 24, 29, 52, 155, 159, 164, 246, 307, 342, 382, 395, 399, 402, 439, 523, 564], "without": [7, 8, 11, 14, 16, 19, 24, 29, 32, 36, 144, 153, 160, 162, 163, 171, 177, 180, 206, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 295, 297, 307, 308, 324, 325, 342, 345, 353, 354, 355, 361, 363, 365, 367, 369, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 391, 393, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 533, 535, 544, 546, 548, 550, 553, 555, 557, 559, 563, 568, 569, 571, 573], "contain": [7, 15, 19, 20, 23, 24, 28, 36, 37, 39, 40, 43, 48, 60, 61, 70, 71, 72, 73, 74, 75, 76, 93, 94, 103, 104, 112, 114, 115, 116, 117, 118, 119, 120, 136, 137, 149, 161, 164, 165, 181, 229, 239, 254, 256, 261, 263, 265, 270, 281, 289, 295, 297, 307, 308, 309, 319, 324, 339, 340, 342, 353, 354, 357, 361, 371, 376, 390, 391, 395, 396, 397, 399, 400, 401, 402, 407, 411, 416, 424, 439, 441, 463, 465, 467, 469, 471, 473, 481, 525, 527, 529, 537, 538, 545, 574], "onli": [7, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 43, 44, 45, 46, 47, 48, 50, 52, 53, 55, 56, 76, 78, 79, 96, 110, 111, 112, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 177, 180, 181, 198, 199, 201, 206, 209, 210, 212, 221, 232, 236, 237, 240, 241, 274, 289, 295, 296, 297, 299, 307, 308, 309, 319, 325, 327, 339, 342, 351, 352, 353, 355, 367, 369, 370, 372, 373, 378, 379, 382, 387, 390, 395, 397, 398, 399, 400, 401, 402, 405, 420, 421, 432, 443, 463, 465, 467, 469, 471, 473, 525, 527, 529, 531, 539, 568], "unord": 7, "gener": [7, 15, 17, 19, 23, 24, 28, 30, 31, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 51, 54, 144, 148, 149, 160, 161, 165, 180, 184, 186, 197, 211, 212, 229, 230, 231, 232, 238, 239, 240, 247, 254, 255, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 298, 307, 319, 327, 333, 361, 363, 365, 367, 374, 376, 378, 384, 387, 390, 391, 393, 395, 397, 398, 399, 401, 402, 403, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 483, 568, 569, 583], "debug": [7, 12, 23, 24, 30, 38, 148, 149, 165, 192, 193, 307, 319, 390, 395, 396, 439, 523], "purpos": [7, 10, 11, 24, 25, 30, 32, 33, 38, 143, 148, 164, 165, 307, 382, 395, 421, 523], "verbos": [7, 24, 25, 36, 38, 145, 148, 319, 420, 445], "shape": [7, 19, 20, 26, 29, 37, 41, 42, 44, 45, 46, 47, 53, 56, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 86, 87, 88, 93, 94, 101, 102, 103, 104, 105, 108, 114, 115, 116, 117, 118, 119, 120, 125, 135, 136, 138, 141, 151, 156, 161, 164, 166, 188, 189, 194, 223, 235, 242, 243, 246, 250, 251, 257, 267, 274, 278, 280, 308, 313, 324, 339, 342, 353, 354, 370, 371, 382, 387, 388, 397, 400, 401, 405, 406, 420, 432, 443, 483, 537, 545], "choos": [7, 16, 23, 24, 25, 26, 29, 30, 37, 38, 48, 50, 52, 56, 147, 156, 229, 235, 239, 254, 261, 263, 265, 267, 270, 281, 307, 342, 361, 370, 371, 376, 387, 391, 405, 407, 411, 416, 420, 421, 424, 441, 443], "optim": [7, 13, 15, 20, 22, 24, 26, 29, 32, 34, 36, 37, 38, 41, 42, 44, 45, 46, 49, 50, 51, 53, 55, 56, 146, 148, 151, 153, 154, 155, 156, 164, 187, 195, 229, 239, 254, 261, 263, 265, 268, 270, 281, 342, 347, 361, 362, 363, 364, 365, 366, 370, 374, 375, 376, 377, 390, 391, 392, 395, 396, 403, 404, 407, 408, 409, 410, 411, 412, 416, 417, 418, 419, 420, 421, 424, 428, 429, 433, 434, 435, 436, 437, 438, 439, 441, 442], "save": [7, 24, 36, 37, 51, 55, 146, 201, 269, 342, 422], "some": [7, 10, 11, 12, 13, 14, 15, 16, 18, 24, 26, 29, 32, 34, 36, 48, 51, 55, 144, 145, 146, 148, 149, 151, 159, 160, 161, 164, 165, 169, 170, 236, 237, 241, 256, 260, 274, 282, 292, 307, 325, 342, 355, 367, 369, 370, 372, 373, 379, 382, 387, 390, 395, 396, 397, 398, 399, 400, 401, 402, 405, 420, 432, 439, 443, 525, 530], "under": [7, 36, 38, 162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 342, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "certain": [7, 19, 20, 29, 30, 31, 40, 50, 165, 181, 198, 296, 342, 479, 530, 531], "dure": [7, 10, 14, 15, 16, 17, 18, 19, 20, 24, 29, 30, 32, 34, 36, 37, 38, 46, 47, 48, 49, 50, 52, 53, 55, 56, 136, 141, 143, 145, 146, 149, 151, 164, 166, 169, 170, 184, 186, 187, 195, 212, 251, 274, 280, 292, 325, 342, 355, 382, 396, 420, 432, 439, 483, 523, 525, 531, 539, 564, 569], "stage": [7, 29, 37, 38, 50, 56, 136, 242, 243, 251, 257, 278, 280, 327, 335, 339, 342, 397, 398, 399, 400, 401, 402, 568], "unsupport": [7, 16, 24, 49, 165, 166, 242, 243, 251, 257, 278, 279, 280, 342, 397, 398, 399, 400, 401, 402, 439], "befor": [7, 10, 13, 16, 17, 18, 25, 26, 27, 29, 30, 31, 32, 33, 37, 43, 47, 70, 71, 72, 73, 74, 75, 97, 101, 125, 135, 143, 149, 156, 162, 165, 171, 172, 217, 218, 233, 241, 249, 263, 274, 289, 307, 319, 335, 340, 342, 369, 379, 385, 386, 390, 395, 396, 412, 420, 421, 432, 439, 523, 531], "transform": [7, 13, 18, 19, 41, 42, 44, 49, 88, 93, 94, 162, 240, 283, 307, 327, 342, 356, 370, 371, 378, 395, 492, 525, 565, 583], "isn": [7, 56], "tensor_handl": 8, "aengin": [8, 353, 354, 355, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 527, 529, 533, 535, 544, 548, 550, 553, 555, 557, 559, 561, 563, 571, 573], "get_data_handl": [8, 33, 36, 143, 162, 163, 236, 237, 240, 248, 249, 307, 372, 373, 378, 385, 386, 395, 523], "set_data_handl": [8, 248, 249, 307, 353, 354, 385, 386, 523], "get_engin": [8, 307, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 561, 563, 571, 573], "get_logical_tensor": 8, "storag": [8, 14, 19, 32, 162, 163, 199, 221, 240, 307, 308, 313, 324, 326, 327, 345, 353, 354, 378, 566, 567], "alloc": [8, 9, 18, 19, 25, 33, 143, 144, 162, 163, 202, 203, 219, 220, 226, 227, 229, 230, 231, 232, 234, 235, 238, 239, 240, 242, 243, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 287, 307, 308, 324, 331, 336, 340, 344, 345, 350, 351, 352, 353, 354, 361, 363, 365, 367, 370, 374, 376, 378, 384, 387, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 523, 525, 546], "own": [8, 18, 19, 33, 36, 47, 143, 144, 307, 308, 313, 324, 345, 353, 354, 395, 523, 564], "dnnl_memory_alloc": [8, 33, 143, 233, 241, 252, 283, 307, 308, 324, 345, 353, 354, 369, 379, 389, 523], "special": [8, 13, 19, 22, 26, 32, 33, 34, 37, 52, 56, 65, 143, 147, 150, 151, 154, 155, 156, 162, 163, 164, 180, 197, 240, 250, 307, 308, 313, 324, 333, 345, 353, 354, 378, 387, 523], "instruct": [8, 14, 24, 29, 30, 32, 36, 49, 51, 52, 144, 149, 159, 162, 163, 165, 173, 176, 198, 240, 307, 308, 319, 324, 345, 353, 354, 378, 395, 523], "dnnl_memory_non": [8, 33, 143, 283, 307, 308, 324, 345, 353, 354, 523], "On": [8, 24, 32, 47, 48, 56, 78, 159, 164, 165, 181, 198, 200, 201, 292, 325, 355, 382, 396, 439, 523], "usm": [8, 202, 203, 226, 227, 307, 308, 324, 340, 344, 351, 352, 353, 354, 523], "associ": [8, 22, 26, 32, 34, 37, 43, 47, 147, 150, 151, 154, 155, 156, 307, 308, 313, 314, 324, 337, 340, 351, 353, 354, 523, 525, 561], "align": [9, 44, 45, 125, 153, 165, 248, 249, 283, 332, 340, 344, 395, 421], "cl_device_id": [9, 143, 145, 283, 308, 340, 351, 353], "dev": [9, 283, 344], "cl_context": [9, 143, 145, 258, 283, 308, 340, 351, 353], "ctx": [9, 248, 249, 283, 581], "lock_guard": 9, "mutex": 9, "pool_guard": 9, "pool_lock": 9, "ptr": [9, 283, 448, 581], "nullptr": [9, 18, 162, 163, 164, 166, 240, 258, 307, 308, 313, 335, 353, 378, 396, 492], "need_alloc_new_mm": 9, "auto": [9, 15, 16, 18, 29, 36, 38, 43, 47, 48, 52, 59, 77, 87, 102, 105, 108, 125, 135, 138, 153, 162, 163, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 370, 371, 372, 373, 374, 376, 378, 380, 381, 382, 384, 385, 386, 387, 390, 391, 393, 395, 396, 397, 398, 400, 401, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443], "cnt": 9, "map_size_ptr_": 9, "count": [9, 60, 61, 78, 79, 99, 100, 136, 137, 149, 234, 242, 243, 257, 278, 283, 289, 299, 479], "method": [9, 16, 47, 144, 152, 166, 171, 172, 317, 339, 390, 395, 439, 448, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 543, 547, 549, 552, 554, 556, 558, 562, 570, 572, 575, 581], "allocate_host": 9, "dealloc": [9, 332, 340, 344, 395], "devic": [9, 12, 17, 19, 24, 32, 33, 143, 145, 166, 202, 203, 226, 227, 278, 283, 299, 308, 324, 335, 340, 344, 351, 352, 353, 354, 390, 395, 396, 397, 398, 399, 400, 401, 402, 439], "context": [9, 19, 29, 33, 145, 162, 163, 166, 181, 198, 240, 248, 249, 283, 307, 308, 322, 324, 327, 340, 344, 351, 352, 353, 354, 378, 385, 386, 390, 395, 396, 400, 401, 402, 439, 525, 568, 581], "event": [9, 33, 143, 149, 283, 308, 324, 340, 344, 351, 352, 353, 354], "cl_event": [9, 283, 308, 340, 351, 353], "deallocate_host": 9, "clear": [9, 307, 311, 334, 335], "quick": 10, "recap": 10, "creation": [10, 11, 14, 15, 16, 17, 18, 20, 24, 26, 29, 34, 46, 47, 50, 53, 56, 145, 148, 153, 156, 248, 249, 250, 258, 260, 279, 282, 307, 319, 327, 339, 361, 362, 371, 374, 375, 376, 377, 382, 387, 390, 391, 392, 395, 396, 405, 407, 408, 409, 410, 411, 412, 416, 417, 421, 439, 441, 442, 443, 564], "step": [10, 19, 24, 29, 42, 44, 47, 48, 49, 52, 125, 145, 161, 162, 163, 229, 240, 242, 243, 251, 257, 262, 263, 265, 278, 280, 281, 327, 361, 378, 390, 395, 396, 397, 400, 401, 409, 411, 416, 420, 439, 441, 568], "consist": [10, 19, 22, 24, 28, 30, 41, 44, 48, 56, 144, 153, 164, 166, 307, 420, 525], "follow": [10, 13, 15, 16, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 162, 164, 165, 166, 181, 198, 232, 242, 243, 251, 257, 260, 268, 274, 278, 280, 282, 289, 307, 308, 318, 319, 324, 327, 353, 354, 367, 382, 390, 395, 396, 405, 420, 421, 432, 439, 443, 450, 452, 489, 491, 492, 505, 507, 509, 511, 517, 519, 523, 525, 530, 539, 568, 571, 573], "descriptor": [10, 15, 16, 17, 18, 19, 20, 24, 26, 29, 34, 36, 46, 47, 48, 50, 53, 55, 146, 152, 153, 156, 164, 166, 177, 180, 196, 197, 199, 211, 212, 221, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 246, 249, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 289, 290, 291, 294, 295, 297, 298, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 315, 316, 317, 318, 320, 321, 323, 324, 353, 354, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 385, 386, 390, 391, 392, 393, 396, 403, 405, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 570, 571, 572, 573], "backward": [10, 18, 19, 22, 24, 26, 28, 30, 47, 78, 79, 88, 95, 96, 150, 153, 156, 165, 166, 171, 172, 200, 201, 209, 210, 229, 230, 236, 237, 241, 255, 263, 264, 265, 269, 270, 274, 281, 290, 295, 297, 298, 301, 302, 304, 305, 309, 310, 313, 317, 318, 320, 321, 361, 363, 370, 372, 373, 379, 393, 411, 414, 416, 420, 422, 424, 432, 441, 449, 450, 453, 454, 462, 463, 468, 469, 474, 475, 484, 485, 488, 489, 494, 495, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 526, 527, 532, 533, 547, 548, 552, 553, 556, 557, 570, 571], "propag": [10, 17, 18, 19, 20, 22, 24, 26, 28, 29, 34, 35, 46, 47, 50, 53, 55, 96, 146, 147, 150, 152, 153, 154, 155, 156, 165, 166, 200, 201, 209, 210, 211, 212, 229, 230, 255, 263, 264, 265, 267, 268, 270, 281, 289, 290, 295, 297, 298, 301, 302, 304, 305, 309, 310, 313, 317, 318, 320, 321, 360, 361, 362, 363, 364, 370, 376, 377, 391, 392, 393, 394, 395, 403, 404, 409, 410, 411, 412, 414, 415, 416, 417, 421, 422, 423, 424, 425, 430, 431, 435, 436, 441, 442, 446, 449, 450, 451, 452, 453, 454, 455, 456, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 526, 527, 528, 529, 532, 533, 534, 535, 541, 542, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 563, 570, 571, 572, 573], "forward": [10, 18, 19, 22, 24, 26, 28, 41, 47, 61, 149, 150, 153, 156, 166, 200, 201, 209, 210, 233, 234, 235, 236, 237, 241, 253, 258, 264, 274, 279, 289, 290, 295, 297, 298, 301, 302, 304, 305, 307, 309, 310, 313, 317, 318, 320, 321, 361, 362, 363, 364, 369, 370, 371, 372, 373, 376, 377, 379, 390, 391, 392, 393, 394, 396, 403, 404, 409, 410, 411, 412, 414, 415, 416, 417, 420, 422, 423, 424, 425, 430, 431, 432, 435, 436, 439, 441, 442, 450, 451, 452, 454, 455, 456, 463, 465, 466, 467, 469, 471, 472, 473, 475, 476, 477, 485, 486, 487, 489, 490, 491, 495, 497, 498, 499, 501, 502, 503, 505, 506, 507, 509, 510, 511, 513, 514, 515, 517, 518, 519, 527, 528, 529, 531, 533, 534, 535, 548, 549, 550, 553, 554, 555, 557, 558, 559, 571, 572, 573], "might": [10, 12, 15, 16, 18, 20, 22, 28, 29, 32, 34, 36, 46, 48, 50, 52, 53, 55, 146, 151, 153, 154, 161, 164, 181, 236, 237, 241, 250, 291, 372, 373, 379, 382, 387, 390, 395, 405, 458, 530], "well": [10, 16, 18, 19, 24, 32, 47, 48, 144, 160, 162, 164, 165, 249, 250, 370, 382, 385, 387, 400, 401, 420, 492], "train": [10, 13, 15, 16, 17, 18, 24, 35, 38, 42, 47, 49, 52, 55, 62, 97, 144, 148, 164, 200, 201, 209, 210, 236, 237, 241, 264, 274, 290, 298, 360, 361, 362, 363, 364, 370, 393, 394, 403, 404, 411, 412, 414, 415, 416, 417, 420, 422, 423, 424, 425, 430, 431, 435, 436, 441, 442, 446], "specif": [10, 14, 15, 19, 20, 22, 23, 27, 29, 31, 34, 37, 38, 42, 44, 45, 46, 49, 55, 125, 144, 146, 152, 153, 154, 161, 162, 163, 166, 177, 181, 184, 186, 192, 193, 196, 198, 204, 211, 212, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 298, 299, 307, 308, 315, 319, 324, 327, 335, 337, 345, 353, 354, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 475, 477, 523, 544, 568], "aspect": [10, 420, 446], "sole": [10, 47], "detail": [10, 14, 16, 19, 23, 24, 32, 37, 40, 47, 48, 52, 149, 159, 165, 235, 236, 247, 249, 372, 382, 384, 386, 395], "why": [10, 164], "found": [10, 16, 24, 32, 145, 146, 159, 160, 164, 165, 166, 252, 269, 389, 422], "concept": [10, 56, 151, 285, 299, 312, 322, 382, 383, 387, 388, 390, 395, 396, 405, 406, 420, 439, 443, 444, 446, 583], "fact": [10, 54, 151, 395, 421], "import": [10, 15, 16, 19, 24, 47, 48, 52, 54, 144, 164, 390, 396, 439], "u": [10, 28, 153, 154, 171, 172, 246, 250, 260, 263, 282, 382, 387, 395, 405, 411, 443], "now": [10, 16, 28, 29, 36, 44, 47, 50, 153, 229, 234, 236, 237, 239, 254, 261, 263, 265, 270, 274, 281, 361, 372, 373, 376, 385, 386, 390, 391, 395, 407, 411, 416, 420, 424, 432, 439, 441], "2": [10, 15, 20, 30, 32, 33, 34, 36, 38, 41, 42, 44, 45, 46, 49, 51, 53, 55, 56, 62, 63, 64, 70, 71, 72, 73, 75, 78, 79, 88, 94, 95, 96, 101, 107, 110, 111, 115, 125, 135, 144, 145, 149, 153, 161, 162, 163, 164, 165, 171, 172, 173, 176, 177, 180, 181, 184, 185, 193, 195, 196, 206, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 307, 313, 319, 326, 327, 339, 361, 363, 365, 367, 369, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 458, 461, 525, 531, 539, 541, 546, 563, 567, 568], "fulli": [10, 18, 19, 41, 43, 48, 50, 56, 421], "correspond": [10, 13, 15, 16, 19, 20, 22, 24, 25, 26, 28, 29, 31, 32, 34, 36, 37, 38, 44, 46, 48, 49, 50, 53, 56, 70, 71, 101, 114, 115, 116, 117, 118, 119, 120, 136, 144, 145, 147, 151, 152, 153, 154, 155, 162, 163, 164, 165, 166, 181, 188, 198, 212, 240, 253, 256, 268, 288, 289, 295, 297, 299, 300, 307, 308, 313, 318, 324, 335, 353, 354, 378, 382, 390, 395, 396, 420, 421, 439, 463, 465, 467, 469, 471, 473, 523, 525, 531, 539], "onc": [10, 15, 18, 27, 30, 31, 47, 48, 52, 56, 148, 153, 161, 162, 163, 164, 240, 249, 313, 319, 327, 335, 339, 370, 378, 385, 386, 387, 388, 390, 395, 405, 406, 443, 444, 568], "chang": [10, 14, 15, 16, 19, 23, 24, 30, 31, 32, 36, 38, 43, 47, 56, 136, 148, 151, 157, 162, 163, 164, 181, 187, 195, 206, 240, 267, 289, 307, 313, 316, 319, 354, 370, 378, 395, 420, 421, 523, 531, 541], "problem": [10, 52, 151, 165, 166, 250, 382, 387], "where": [10, 13, 14, 15, 16, 18, 20, 22, 26, 28, 29, 32, 34, 41, 44, 46, 48, 49, 50, 52, 53, 55, 56, 60, 63, 69, 70, 71, 76, 78, 79, 86, 95, 96, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 128, 136, 145, 146, 150, 152, 153, 154, 164, 165, 181, 188, 198, 217, 218, 269, 272, 289, 292, 325, 355, 369, 370, 371, 382, 395, 420, 422, 428, 531], "destin": [10, 15, 16, 17, 26, 28, 29, 34, 36, 38, 47, 49, 50, 52, 56, 147, 151, 152, 154, 159, 162, 163, 166, 211, 212, 229, 230, 231, 238, 239, 247, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 289, 290, 291, 294, 295, 297, 298, 301, 302, 304, 305, 306, 307, 309, 310, 313, 315, 316, 317, 320, 321, 323, 361, 363, 365, 371, 374, 375, 376, 384, 390, 391, 393, 395, 403, 405, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 438, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 531, 533, 535, 542, 544, 545, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "so": [10, 15, 16, 19, 24, 25, 26, 31, 41, 47, 48, 52, 54, 56, 149, 153, 156, 161, 162, 164, 177, 180, 206, 246, 249, 274, 289, 307, 313, 370, 371, 382, 390, 395, 396, 397, 400, 401, 421, 432, 439, 530], "extra": [10, 18, 20, 23, 24, 31, 38, 40, 48, 52, 162, 163, 164, 165, 201, 212, 240, 263, 378, 395, 411, 420], "were": [10, 18, 33, 143, 165, 201, 390, 395, 396, 439, 568], "design": [10, 15, 16, 26, 53, 69, 154, 161, 420], "extens": [10, 30, 32, 33, 35, 36, 42, 44, 45, 51, 52, 143, 153, 173, 176, 257, 258, 278, 279, 303, 308, 324, 325, 338, 340, 344, 347, 360], "henc": [10, 15, 18, 20, 29, 34, 46, 48, 53, 148, 153, 154, 155, 159, 162, 164, 165, 201, 242, 243, 246, 251, 257, 278, 280, 295, 297, 309, 382, 395, 420, 463, 465, 467, 469, 471, 473, 527, 529], "thei": [10, 15, 18, 19, 20, 25, 29, 33, 36, 37, 40, 42, 46, 48, 49, 50, 52, 53, 56, 88, 93, 95, 96, 143, 146, 153, 162, 163, 164, 165, 181, 240, 242, 243, 248, 251, 254, 257, 260, 278, 280, 378, 385, 390, 391, 395, 396, 405, 420, 421, 439], "structur": [10, 15, 44, 164, 181, 212, 307, 319, 459, 478, 481, 522, 524, 530, 536, 538, 540, 560, 565, 566, 574], "must": [10, 13, 14, 15, 16, 18, 20, 22, 23, 24, 26, 29, 33, 37, 38, 45, 46, 47, 48, 49, 50, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 151, 153, 160, 161, 162, 163, 181, 212, 240, 282, 289, 291, 292, 295, 297, 307, 308, 309, 313, 318, 319, 324, 325, 327, 335, 339, 353, 354, 355, 370, 371, 378, 390, 395, 396, 397, 398, 399, 400, 401, 402, 439, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 533, 535, 537, 539, 544, 545, 546, 548, 550, 553, 555, 557, 559, 563, 568, 569, 571, 573], "them": [10, 24, 25, 34, 36, 37, 38, 40, 43, 47, 48, 52, 114, 115, 116, 117, 118, 119, 120, 125, 144, 162, 163, 164, 188, 200, 240, 289, 290, 301, 304, 307, 318, 378, 390, 395, 420, 450, 452, 483, 489, 491, 505, 507, 509, 511, 517, 519, 573], "destroi": [10, 18, 143, 212, 289, 299, 307, 313, 322, 326, 327, 332, 333, 337, 341, 342, 345, 395, 420, 439, 525, 531, 539], "right": [10, 13, 29, 34, 41, 55, 56, 60, 61, 70, 71, 72, 73, 74, 75, 95, 96, 101, 103, 104, 125, 146, 152, 154, 155, 164, 165, 211, 212, 213, 214, 239, 254, 267, 269, 274, 295, 297, 307, 309, 376, 391, 420, 422, 432, 463, 465, 467, 469, 471, 473, 527, 529, 542], "after": [10, 15, 16, 20, 29, 37, 38, 42, 44, 48, 50, 135, 149, 153, 160, 162, 163, 165, 181, 234, 239, 240, 242, 243, 251, 252, 253, 254, 256, 257, 274, 278, 279, 280, 289, 319, 327, 337, 342, 376, 378, 389, 390, 391, 395, 396, 397, 398, 400, 401, 420, 421, 432, 439, 461, 530, 531, 541, 546, 563, 568], "modifi": [10, 20, 24, 29, 46, 48, 50, 53, 56, 155, 289, 311, 334], "stai": [10, 164, 525], "equival": [10, 33, 143, 479, 492, 523, 537, 561], "null": [10, 166, 233, 241, 252, 289, 290, 291, 294, 295, 297, 298, 301, 302, 304, 305, 306, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 355, 369, 379, 389, 479, 492, 523, 537, 561], "upon": [10, 17, 47, 390, 395, 396, 420, 439], "unless": [10, 22, 25, 32, 53, 162, 163, 165, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 307, 308, 313, 324, 353, 354, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 523, 537, 545], "simpli": [10, 26, 29, 156, 307, 382], "omit": [10, 15, 76, 78, 79, 112, 209, 210, 370], "skeleton": [10, 15], "simplifi": [10, 28, 29, 48, 70, 99, 152, 160, 162, 163, 164, 240, 378], "read": [10, 27, 33, 143, 229, 230, 231, 232, 239, 246, 247, 254, 255, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 281, 361, 363, 365, 367, 376, 382, 384, 391, 393, 396, 403, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 433, 435, 437, 439, 441, 523], "dnnl_primitive_attr_t": [10, 283, 289, 539], "dnnl_primitive_attr_cr": [10, 283, 289], "dnnl_primitive_attr_set_someth": 10, "param": [10, 15, 18, 162, 163, 166, 233, 240, 241, 246, 369, 378, 379, 382, 531, 568], "dnnl_primitive_attr_set_something_els": 10, "other_param": [10, 15], "dnnl_eltwise_backward_primitive_desc_cr": [10, 241, 283, 298, 379], "op_pd": [10, 15, 18], "hint_fwd_pd": [10, 283, 290, 295, 297, 298, 301, 302, 304, 305, 309, 310, 317, 318, 320, 321, 450, 454, 463, 465, 469, 471, 475, 485, 489, 495, 497, 501, 505, 509, 513, 517, 527, 533, 548, 553, 557, 571], "here": [10, 15, 16, 18, 20, 26, 28, 29, 34, 36, 37, 38, 47, 48, 49, 55, 69, 70, 93, 94, 144, 146, 149, 153, 154, 159, 160, 162, 163, 164, 165, 171, 229, 230, 236, 240, 246, 253, 254, 260, 263, 264, 265, 269, 274, 281, 282, 307, 335, 361, 363, 371, 372, 378, 382, 385, 386, 390, 391, 395, 400, 401, 405, 411, 414, 416, 420, 421, 422, 432, 440, 441, 443, 525], "doe": [10, 15, 16, 18, 22, 23, 24, 26, 29, 32, 34, 36, 38, 41, 42, 44, 45, 47, 49, 50, 52, 55, 57, 58, 82, 83, 84, 85, 91, 92, 98, 106, 107, 113, 121, 123, 124, 126, 132, 134, 135, 139, 141, 142, 144, 146, 148, 149, 150, 152, 154, 156, 160, 163, 164, 165, 166, 200, 267, 289, 292, 294, 307, 325, 355, 371, 395, 420, 421, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 525, 527, 529, 531, 533, 535, 539, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "effect": [10, 15, 27, 29, 30, 38, 101, 145, 161, 165, 319, 483], "we": [10, 15, 16, 18, 20, 28, 29, 34, 40, 45, 46, 47, 49, 53, 56, 70, 71, 125, 144, 146, 147, 152, 153, 154, 164, 165, 229, 233, 236, 237, 239, 241, 246, 248, 249, 250, 254, 256, 261, 263, 265, 267, 270, 274, 281, 361, 369, 372, 373, 376, 379, 382, 385, 386, 387, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 407, 411, 416, 420, 421, 424, 432, 439, 441], "immedi": [10, 420, 564], "dnnl_primitive_attr_destroi": [10, 283, 289], "dnnl": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 30, 31, 33, 34, 36, 37, 45, 46, 47, 48, 50, 52, 53, 54, 56, 143, 145, 149, 150, 152, 153, 157, 160, 162, 163, 164, 165, 166, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 288, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 357, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 444], "primitive_attr": [10, 12, 13, 14, 15, 16, 18, 19, 29, 47, 52, 56, 162, 163, 166, 231, 232, 235, 239, 240, 246, 249, 250, 254, 260, 261, 266, 268, 272, 282, 283, 289, 349, 365, 367, 371, 376, 378, 382, 383, 386, 387, 388, 391, 405, 406, 407, 418, 421, 428, 443, 444, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 531, 533, 535, 541, 542, 544, 545, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "set_someth": 10, "set_something_els": 10, "primitive_desc": [10, 15, 16, 18, 19, 20, 29, 34, 46, 47, 48, 53, 145, 153, 166, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 290, 291, 295, 297, 298, 301, 302, 304, 305, 306, 309, 310, 313, 315, 317, 318, 320, 321, 349, 353, 354, 361, 363, 365, 367, 370, 371, 372, 373, 374, 376, 380, 381, 382, 384, 385, 386, 387, 390, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 531, 532, 534, 537, 539, 542, 543, 545, 547, 549, 551, 552, 554, 556, 558, 562, 570, 572], "pd": [10, 15, 28, 248, 274, 432, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 528, 529, 532, 533, 534, 535, 537, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 570, 571, 572, 573], "happen": [10, 16, 29, 30, 36, 48, 52, 69, 145, 151, 161, 162, 164, 233, 241, 260, 292, 325, 327, 355, 369, 379, 395, 405, 420], "As": [10, 15, 16, 17, 18, 20, 24, 25, 28, 29, 34, 37, 47, 48, 52, 151, 159, 164, 248, 274, 289, 307, 385, 386, 432, 525, 531], "mention": [10, 18, 20, 34, 48, 52, 125, 248, 371, 385, 386, 395], "abov": [10, 16, 18, 20, 23, 24, 30, 33, 34, 36, 38, 40, 44, 48, 50, 52, 101, 125, 143, 144, 155, 164, 165, 188, 189, 248, 307, 385, 386, 395, 397, 398, 400, 401, 421, 525], "extend": [10, 16, 33, 36, 42, 45, 143, 206, 289, 327, 568], "behavior": [10, 11, 14, 15, 17, 18, 20, 24, 29, 30, 46, 48, 50, 51, 52, 53, 55, 56, 149, 153, 155, 169, 170, 177, 180, 182, 183, 200, 201, 206, 282, 289, 307, 308, 322, 339, 353, 397, 398, 399, 400, 401, 402, 443, 525, 561, 564], "explan": [10, 165, 166], "provid": [10, 12, 13, 14, 15, 16, 18, 19, 20, 24, 25, 27, 29, 31, 33, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 152, 153, 161, 162, 163, 165, 200, 201, 219, 220, 229, 236, 239, 240, 244, 245, 254, 261, 263, 265, 270, 274, 281, 289, 304, 307, 311, 313, 334, 335, 339, 353, 354, 361, 372, 376, 378, 380, 381, 391, 397, 398, 399, 400, 401, 402, 407, 411, 416, 420, 421, 424, 432, 441, 493, 501, 503, 523, 531], "section": [10, 14, 15, 16, 19, 20, 22, 24, 27, 28, 29, 32, 34, 36, 46, 47, 48, 52, 55, 146, 148, 149, 153, 154, 160, 162, 163, 240, 246, 378, 382, 395, 397, 398, 399, 400, 401, 402], "scratchpad": [10, 19, 24, 28, 29, 48, 162, 163, 166, 211, 212, 219, 220, 240, 289, 313, 327, 360, 378, 539, 542, 568], "intermedi": [10, 15, 16, 28, 29, 32, 34, 37, 42, 44, 45, 48, 52, 55, 151, 155, 162, 163, 240, 246, 267, 289, 292, 325, 327, 355, 378, 382, 387, 568], "temporari": [10, 18, 19, 28, 38, 48, 248, 249, 313, 319], "implicit": [10, 14, 22, 26, 28, 29, 40, 44, 56, 151, 156, 182, 183], "f32": [10, 11, 13, 14, 15, 16, 20, 22, 29, 32, 34, 35, 36, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 150, 151, 152, 153, 154, 155, 159, 162, 163, 164, 165, 169, 170, 182, 183, 185, 196, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 360, 361, 363, 365, 367, 371, 372, 374, 376, 378, 380, 381, 382, 384, 386, 387, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 433, 435, 437, 439, 441, 443, 531, 539], "accumul": [10, 15, 16, 25, 32, 40, 52, 66, 146, 147, 151, 153, 162, 163, 166, 169, 170, 240, 258, 274, 279, 287, 289, 293, 314, 327, 337, 360, 378, 396, 432, 439, 530, 531, 539, 568], "datatyp": [10, 11, 14, 16, 17, 32, 153, 161, 165, 166, 169, 170, 289], "round": [10, 11, 16, 34, 40, 49, 60, 76, 78, 79, 103, 112, 141, 164, 169, 170, 171, 172, 190, 217, 218, 286, 289, 313, 360, 539], "argument": [10, 14, 15, 17, 32, 47, 109, 162, 163, 166, 194, 211, 212, 222, 223, 229, 230, 231, 232, 236, 237, 238, 239, 240, 247, 254, 255, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 281, 289, 290, 301, 304, 308, 313, 318, 324, 326, 339, 351, 352, 353, 354, 361, 363, 365, 367, 370, 372, 373, 374, 376, 378, 384, 385, 386, 391, 393, 395, 396, 403, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437, 441, 450, 452, 481, 489, 491, 505, 507, 509, 511, 517, 519, 525, 537, 539, 545, 567, 568, 571, 573], "downconvers": [10, 32, 182, 183], "determinist": [10, 13, 17, 37, 166, 289, 360, 539], "dropout": [10, 56, 289, 313, 539], "appli": [10, 13, 15, 16, 20, 22, 23, 29, 32, 34, 42, 44, 45, 46, 47, 49, 50, 52, 53, 56, 57, 59, 67, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 91, 97, 98, 99, 101, 102, 105, 108, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 126, 128, 130, 135, 137, 138, 139, 146, 150, 152, 153, 155, 162, 165, 181, 187, 192, 193, 195, 198, 201, 252, 254, 260, 272, 282, 289, 291, 292, 307, 308, 313, 318, 324, 325, 327, 353, 354, 355, 371, 389, 390, 391, 395, 405, 421, 428, 443, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 523, 539, 568, 571, 573], "pseudo": [10, 29, 36, 52, 56, 145, 151, 164], "random": [10, 17, 56, 217, 218, 246, 247, 250, 260, 282, 382, 384, 387, 405, 443], "quantiz": [10, 14, 15, 32, 43, 44, 45, 47, 52, 56, 76, 78, 79, 151, 153, 162, 163, 188, 189, 190, 232, 235, 240, 243, 246, 249, 282, 283, 286, 289, 327, 360, 367, 371, 378, 383, 386, 398, 405, 406, 443, 444, 531, 539, 568], "infer": [10, 15, 16, 24, 35, 36, 38, 45, 51, 52, 56, 144, 148, 153, 164, 187, 194, 195, 200, 201, 209, 210, 223, 233, 234, 235, 243, 248, 249, 251, 260, 274, 280, 282, 283, 360, 382, 406, 421, 432, 443, 446], "post": [10, 13, 16, 32, 35, 36, 41, 44, 47, 48, 49, 52, 162, 163, 166, 192, 193, 200, 201, 230, 231, 232, 235, 239, 240, 254, 261, 266, 268, 272, 289, 313, 326, 327, 360, 363, 364, 365, 366, 376, 377, 378, 391, 392, 398, 407, 408, 418, 419, 421, 428, 530, 531, 539, 567, 568], "fuse": [10, 13, 15, 16, 19, 20, 22, 29, 34, 40, 43, 45, 47, 48, 49, 50, 56, 200, 201, 268, 289, 290, 313, 363, 364, 365, 366, 376, 377, 391, 392, 405, 406, 407, 408, 418, 419, 531], "mostli": [10, 48, 181, 198, 307], "becaus": [10, 15, 16, 20, 24, 30, 31, 34, 40, 44, 46, 48, 49, 53, 55, 162, 165, 166, 194, 198, 211, 222, 223, 274, 298, 307, 370, 371, 395, 397, 398, 400, 401, 420, 421, 432, 439, 531], "separ": [10, 15, 20, 24, 27, 29, 46, 48, 53, 88, 144, 151, 165, 166, 274, 307, 313, 385, 386, 395, 421, 432], "delai": [10, 236, 237, 372, 373], "successfulli": 10, "whatev": [10, 268, 421], "configur": [10, 18, 20, 23, 29, 31, 32, 38, 45, 46, 48, 49, 53, 56, 96, 147, 153, 161, 162, 165, 166, 201, 219, 220, 224, 225, 235, 289, 290, 301, 304, 319, 369, 370, 371, 376, 377, 420, 445, 530, 531, 539], "want": [10, 16, 18, 38, 48, 52, 144, 400, 401], "howev": [10, 12, 14, 15, 16, 18, 20, 24, 26, 33, 34, 42, 46, 47, 48, 52, 53, 56, 144, 146, 147, 154, 155, 159, 164, 249, 250, 254, 274, 298, 307, 370, 382, 385, 387, 390, 391, 395, 396, 421, 432, 439], "try": [10, 162, 163, 235, 236, 240, 247, 249, 256, 274, 279, 372, 378, 384, 386, 395, 397, 398, 399, 400, 401, 402, 432, 439], "dnnl_unimpl": [10, 145, 162, 163, 194, 222, 223, 235, 236, 240, 247, 249, 319, 372, 378, 384, 386], "unfortun": [10, 52, 144, 160], "about": [10, 15, 18, 48, 56, 145, 148, 149, 164, 165, 244, 245, 307, 380, 381, 395, 421], "what": [10, 15, 16, 48, 49, 163, 165, 188, 256, 279, 283, 307, 313, 390, 395, 420, 439, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 480, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573, 575], "exactli": [10, 16, 29, 48, 52, 56, 114, 115, 116, 117, 118, 119, 120, 307], "go": [10, 47, 73, 164, 246, 382, 390, 395, 396, 439], "wrong": [10, 145, 395], "document": [10, 15, 16, 24, 28, 37, 41, 42, 44, 48, 52, 54, 144, 159], "benefit": [11, 19, 24, 47, 148, 161, 298], "speed": [11, 18, 31, 47, 145, 264, 414], "up": [11, 14, 23, 24, 32, 41, 52, 56, 145, 146, 147, 149, 162, 163, 164, 230, 231, 233, 240, 241, 252, 259, 262, 264, 269, 276, 313, 339, 363, 365, 369, 378, 379, 389, 403, 409, 414, 420, 422, 435, 483], "notic": [11, 14, 24, 165, 192, 193, 395], "impact": [11, 12, 14, 16, 32, 36, 160, 164, 165], "accuraci": [11, 14, 16, 29, 36, 45, 47, 48, 49, 52, 56, 155, 246, 256, 258, 382, 383, 395, 396], "numer": [11, 14, 17, 20, 34, 43, 46, 52, 53, 63, 88, 95, 96, 155, 159, 172, 248, 249, 256, 258, 274, 279, 396, 432, 439], "alter": [11, 14, 17, 153], "low": [11, 17, 19, 32, 36, 45, 47, 161, 162, 163, 240, 285, 289, 295, 297, 309, 378, 463, 465, 467, 469, 471, 473, 527, 529, 539], "accumulation_mod": [11, 32, 288, 349, 539], "accept": [11, 12, 17, 25, 27, 37, 39, 47, 49, 61, 71, 72, 104, 142, 149, 319, 337], "strict": [11, 14, 155, 169, 170, 182, 289], "f64": [11, 29, 32, 34, 53, 56, 146, 155, 170, 196, 289], "s32": [11, 13, 15, 16, 17, 22, 29, 32, 34, 36, 45, 49, 50, 52, 56, 61, 71, 72, 75, 78, 79, 86, 87, 93, 94, 114, 115, 116, 117, 118, 119, 120, 146, 147, 151, 152, 154, 162, 163, 169, 170, 185, 196, 240, 244, 245, 246, 260, 289, 378, 380, 381, 382, 405, 539], "relax": [11, 155, 169], "partial": [11, 18, 20, 30, 46, 53, 169, 170, 319, 405, 420], "src": [11, 15, 16, 20, 23, 24, 26, 28, 29, 32, 34, 36, 38, 41, 44, 46, 48, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 154, 155, 156, 160, 163, 165, 169, 170, 229, 230, 231, 232, 233, 236, 237, 238, 239, 241, 246, 247, 254, 255, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 289, 290, 298, 301, 304, 361, 363, 365, 367, 369, 372, 373, 374, 375, 376, 379, 382, 384, 385, 386, 391, 393, 395, 403, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 438, 441, 456, 461, 487, 495, 497, 499, 545, 546, 563], "dst": [11, 13, 15, 16, 17, 20, 22, 26, 28, 29, 32, 34, 36, 46, 48, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 154, 155, 156, 163, 169, 170, 171, 172, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 247, 254, 255, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 281, 283, 289, 290, 298, 301, 304, 361, 363, 365, 367, 369, 371, 372, 373, 374, 375, 376, 379, 384, 385, 386, 391, 393, 395, 403, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437, 438, 441, 456, 458, 461, 487, 495, 497, 499, 531, 545, 546, 563], "fastest": [11, 169, 170], "higher": [11, 15, 20, 27, 29, 31, 38, 43, 46, 49, 53, 56, 144, 146, 147, 152, 164, 165, 166], "f16": [11, 14, 15, 20, 22, 29, 32, 34, 36, 41, 42, 44, 45, 46, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 150, 151, 152, 153, 154, 155, 159, 162, 163, 169, 170, 182, 183, 185, 196], "To": [12, 13, 15, 16, 24, 27, 28, 29, 32, 33, 36, 37, 42, 47, 48, 49, 52, 55, 70, 73, 125, 143, 148, 149, 151, 152, 160, 165, 249, 274, 385, 387, 390, 395, 396, 397, 398, 399, 400, 401, 402, 420, 432, 439], "valid": [12, 24, 32, 40, 48, 56, 60, 61, 67, 68, 70, 71, 72, 73, 74, 75, 103, 104, 149, 153, 165, 177, 180, 188, 189, 206, 212, 268, 283, 291, 307, 327, 337, 339, 340, 351, 420, 483, 523, 525, 568], "certif": 12, "guarante": [12, 36, 48, 136, 137, 145, 164, 382], "multipl": [12, 15, 16, 18, 19, 20, 22, 28, 29, 37, 38, 40, 42, 43, 46, 48, 52, 53, 119, 144, 150, 151, 157, 165, 171, 172, 181, 198, 205, 206, 247, 266, 274, 282, 287, 292, 307, 308, 312, 323, 324, 335, 353, 354, 367, 370, 382, 383, 384, 387, 388, 390, 395, 405, 406, 418, 420, 421, 432, 443, 444, 520, 523, 525, 541, 582, 583], "platform": [12, 29, 32, 41, 42, 44, 45, 51, 52, 149, 162, 163, 166, 235, 236, 240, 247, 249, 347, 372, 378, 384, 386, 421], "exact": [12, 43, 52, 147, 153, 246, 382, 395], "bitwis": [12, 20, 24, 46, 53, 224], "most": [12, 15, 16, 19, 22, 24, 25, 26, 29, 30, 32, 36, 40, 48, 50, 52, 55, 56, 101, 144, 150, 151, 156, 159, 164, 181, 211, 299, 313, 382, 395, 405, 420, 443, 479, 492, 523, 537, 561], "fix": [12, 164], "environ": [12, 14, 17, 23, 24, 30, 31, 32, 36, 39, 51, 52, 54, 144, 145, 148, 149, 160, 165, 166, 217, 218, 319, 420, 421], "particular": [12, 15, 17, 18, 19, 28, 29, 32, 36, 48, 52, 56, 155, 161, 164, 165, 181, 253, 256, 299, 307, 313, 322, 382, 390, 395, 396, 439, 479, 525], "hardwar": [12, 14, 16, 20, 22, 29, 33, 34, 37, 46, 49, 52, 55, 144, 146, 149, 153, 154, 159, 161, 162, 327, 333, 420, 568], "softwar": [12, 23, 51, 52, 162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "runtim": [12, 15, 16, 20, 27, 32, 33, 36, 38, 41, 42, 44, 46, 53, 56, 62, 95, 143, 145, 151, 157, 161, 165, 166, 211, 212, 257, 260, 282, 287, 289, 308, 313, 324, 325, 331, 332, 335, 340, 344, 351, 352, 355, 382, 395, 396, 400, 401, 405, 420, 421, 439, 443, 531, 574], "version": [12, 20, 23, 24, 25, 38, 46, 47, 54, 145, 160, 162, 163, 165, 171, 172, 181, 198, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 307, 313, 319, 349, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 461, 563, 574], "variabl": [12, 14, 20, 22, 23, 24, 26, 29, 30, 31, 34, 36, 39, 46, 50, 51, 53, 54, 55, 56, 57, 60, 67, 69, 70, 80, 83, 84, 89, 91, 97, 98, 101, 103, 121, 126, 128, 130, 139, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 160, 165, 187, 195, 274, 283, 313, 319, 395, 420, 421, 432], "ident": [12, 26, 53, 54, 114, 115, 116, 117, 118, 119, 120, 145, 148, 155, 156, 229, 239, 254, 261, 263, 265, 270, 281, 361, 374, 375, 376, 391, 407, 411, 416, 424, 437, 438, 441], "between": [12, 15, 16, 18, 19, 22, 23, 24, 33, 35, 37, 40, 41, 42, 43, 44, 45, 52, 60, 70, 87, 88, 103, 104, 123, 143, 144, 151, 159, 161, 162, 163, 164, 165, 166, 187, 195, 219, 220, 233, 234, 236, 237, 240, 241, 242, 243, 252, 253, 254, 257, 274, 278, 289, 299, 307, 316, 339, 360, 369, 370, 372, 373, 378, 379, 382, 387, 391, 395, 420, 432, 446, 483, 525, 531, 539, 545], "produc": [12, 18, 20, 29, 34, 37, 38, 39, 40, 48, 50, 51, 97, 155, 165, 307, 313, 319, 382, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 528, 529, 532, 533, 534, 535, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 568, 569, 570, 571, 572, 573], "bit": [12, 14, 15, 17, 24, 25, 30, 32, 43, 47, 48, 49, 52, 159, 173, 176, 177, 185, 196, 204, 217, 218, 228, 246, 249, 289, 292, 319, 325, 347, 355, 371, 382, 396, 531, 539, 564], "wise": [12, 28, 34, 48, 57, 59, 77, 83, 87, 98, 102, 105, 106, 108, 109, 110, 113, 124, 132, 134, 135, 138, 141, 147, 164, 192, 193, 201, 205, 206, 239, 254, 255, 269, 360, 376, 391, 394, 422], "reli": [12, 28, 38, 151], "non": [12, 16, 17, 19, 23, 26, 29, 32, 36, 43, 47, 49, 52, 53, 60, 61, 70, 71, 72, 73, 74, 75, 80, 81, 93, 97, 103, 104, 144, 151, 153, 164, 165, 166, 171, 172, 177, 185, 196, 201, 211, 212, 236, 237, 244, 245, 260, 268, 307, 327, 332, 333, 340, 344, 352, 372, 373, 380, 381, 395, 405, 421, 525, 568], "construct": [12, 19, 33, 37, 39, 41, 42, 44, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 162, 163, 240, 274, 307, 308, 324, 337, 351, 352, 353, 354, 355, 378, 396, 432, 439, 541, 575, 581], "atom": [12, 413], "order": [12, 15, 16, 19, 24, 28, 29, 30, 31, 33, 36, 47, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 151, 153, 154, 164, 165, 181, 188, 189, 198, 224, 225, 236, 237, 241, 256, 263, 289, 292, 294, 295, 297, 307, 308, 309, 314, 319, 325, 355, 372, 373, 379, 395, 397, 398, 400, 401, 411, 421, 461, 463, 465, 467, 469, 471, 473, 483, 525, 527, 529, 531, 539], "dnnl_primitive_attr_set_determinist": [12, 283, 289], "set_determinist": [12, 539], "permit": [12, 25], "dispatch": [12, 14, 19, 24, 29, 31, 319, 445], "perform": [12, 13, 15, 16, 18, 19, 24, 25, 27, 30, 31, 32, 35, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49, 52, 57, 59, 60, 62, 70, 73, 77, 87, 88, 93, 95, 96, 98, 102, 103, 105, 106, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 125, 132, 134, 135, 138, 141, 144, 153, 157, 159, 164, 165, 166, 167, 201, 209, 210, 236, 237, 241, 242, 243, 257, 267, 268, 269, 278, 289, 290, 291, 292, 295, 297, 298, 301, 304, 305, 306, 307, 309, 310, 319, 321, 325, 347, 355, 360, 369, 370, 371, 372, 373, 379, 382, 383, 387, 395, 396, 398, 405, 422, 439, 443, 461, 523, 530, 531, 539, 563, 568], "matmul": [12, 14, 17, 24, 32, 36, 40, 41, 42, 44, 56, 165, 166, 190, 205, 244, 245, 246, 247, 250, 251, 260, 280, 282, 283, 286, 306, 349, 360, 383, 388, 399, 402, 406, 419, 444, 537], "normal": [12, 28, 32, 36, 38, 48, 62, 63, 88, 95, 96, 171, 172, 200, 201, 205, 206, 230, 232, 259, 262, 264, 287, 305, 312, 313, 360, 364, 367, 387, 395, 404, 410, 415, 420, 453, 454, 455, 456, 484, 485, 486, 487, 500, 501, 502, 503, 512, 514, 582], "especi": [12, 42, 45, 48, 52, 148, 165, 307, 530], "gpu": [12, 15, 19, 20, 22, 26, 27, 29, 32, 33, 34, 35, 36, 41, 42, 44, 45, 53, 55, 56, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 165, 166, 178, 179, 229, 252, 253, 257, 258, 278, 279, 280, 282, 299, 340, 351, 360, 361, 395, 400, 401, 420, 421, 443, 446, 574], "mani": [13, 24, 28, 37, 41, 42, 44, 47, 144, 164, 313, 395], "gnn": 13, "model": [13, 15, 19, 28, 29, 32, 33, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 50, 76, 88, 112, 143, 153, 234, 236, 237, 241, 248, 249, 256, 274, 284, 347, 372, 373, 379, 385, 386, 387, 395, 432], "layer": [13, 28, 32, 38, 40, 47, 48, 93, 95, 96, 153, 205, 206, 229, 246, 248, 249, 260, 262, 263, 265, 274, 281, 282, 287, 307, 312, 313, 318, 360, 361, 369, 370, 371, 372, 373, 379, 382, 385, 386, 405, 410, 411, 416, 420, 432, 441, 443, 450, 452, 489, 491, 500, 501, 502, 503, 505, 507, 509, 511, 517, 519, 551, 571, 573, 582], "signific": [13, 16, 25, 48, 159, 164], "amount": [13, 18, 24, 29, 70, 71, 72, 73, 74, 75, 165, 201, 296, 307], "time": [13, 16, 18, 19, 20, 22, 23, 24, 29, 46, 47, 48, 50, 51, 52, 55, 56, 70, 71, 76, 108, 144, 145, 146, 152, 154, 161, 162, 164, 171, 207, 208, 229, 234, 250, 256, 260, 262, 263, 265, 274, 281, 282, 289, 303, 307, 308, 311, 313, 319, 324, 325, 334, 335, 338, 339, 340, 344, 361, 370, 371, 382, 387, 388, 390, 395, 405, 406, 409, 411, 416, 421, 432, 441, 443, 444, 539], "enhanc": 13, "akin": 13, "binari": [13, 16, 20, 24, 29, 34, 35, 37, 38, 40, 41, 46, 50, 51, 53, 56, 145, 146, 150, 152, 155, 161, 162, 163, 171, 172, 200, 201, 205, 206, 232, 240, 287, 289, 307, 312, 313, 349, 360, 366, 368, 378, 420, 461, 525, 531, 537, 541, 546, 563, 568, 582], "depend": [13, 15, 16, 18, 19, 20, 23, 24, 32, 37, 38, 43, 46, 49, 52, 53, 54, 56, 66, 125, 144, 147, 148, 153, 155, 164, 165, 166, 181, 198, 289, 292, 294, 298, 307, 308, 313, 324, 325, 340, 344, 351, 352, 353, 354, 355, 369, 370, 382, 395, 396, 420, 439, 461, 475, 477, 525, 531, 539], "prng": 13, "variat": [13, 144], "philox": 13, "algorithm": [13, 15, 16, 20, 24, 34, 47, 48, 146, 150, 152, 162, 163, 165, 166, 171, 211, 212, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 244, 245, 247, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 281, 289, 291, 295, 297, 298, 305, 309, 315, 317, 321, 349, 361, 363, 365, 367, 370, 371, 372, 373, 374, 376, 378, 380, 381, 384, 390, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 433, 435, 437, 439, 441, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 531, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "mathrm": [13, 56], "mask": [13, 15, 16, 29, 42, 44, 49, 50, 56, 144, 151, 162, 163, 235, 240, 246, 250, 260, 282, 283, 289, 313, 326, 327, 371, 378, 382, 387, 405, 443, 531, 539, 564, 567, 568], "cdot": [13, 15, 16, 20, 22, 28, 29, 34, 41, 44, 46, 49, 50, 52, 53, 55, 56, 60, 63, 70, 76, 78, 79, 88, 90, 95, 101, 103, 112, 114, 115, 116, 117, 118, 119, 120, 137, 146, 147, 151, 152, 153, 156, 162, 172, 382], "usual": [13, 33, 41, 44, 48, 49, 97, 144, 145, 149, 162, 163, 165, 184, 186, 240, 378, 396, 439, 483], "potenti": [13, 16, 29, 34, 52, 149, 161, 162, 163, 188, 240, 378, 420, 525], "u8": [13, 15, 16, 22, 25, 29, 32, 34, 35, 40, 45, 49, 50, 53, 56, 76, 78, 79, 112, 146, 147, 151, 152, 153, 154, 155, 162, 163, 165, 185, 196, 232, 235, 240, 243, 246, 247, 249, 260, 360, 368, 371, 378, 382, 384, 386, 398, 405], "whose": 13, "either": [13, 16, 19, 20, 22, 24, 26, 37, 40, 46, 48, 49, 52, 53, 56, 61, 62, 64, 71, 72, 75, 93, 94, 125, 147, 150, 156, 159, 162, 163, 164, 165, 171, 172, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 290, 301, 304, 305, 307, 309, 317, 318, 321, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 513, 515, 525, 527, 529, 548, 550, 557, 559], "got": [13, 162, 163, 166, 240, 242, 243, 251, 256, 257, 258, 278, 280, 378, 395, 396], "k": [13, 18, 36, 41, 42, 44, 45, 55, 56, 78, 101, 162, 163, 166, 204, 211, 212, 228, 233, 236, 237, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 260, 264, 266, 280, 282, 283, 292, 305, 325, 327, 349, 355, 369, 372, 373, 378, 379, 380, 381, 382, 384, 387, 405, 414, 418, 443, 513, 515, 542, 568, 569, 576], "drop": [13, 14], "out": [13, 15, 16, 19, 20, 28, 33, 36, 37, 40, 42, 44, 45, 55, 70, 71, 72, 73, 74, 75, 143, 146, 149, 154, 155, 161, 163, 164, 165, 166, 181, 194, 198, 205, 206, 222, 223, 224, 225, 233, 241, 248, 255, 256, 270, 283, 289, 294, 307, 316, 323, 369, 379, 385, 386, 393, 395, 420, 424, 461, 531, 562, 569], "seed": [13, 17, 56, 313], "leq": [13, 22, 34, 121, 147, 154], "dnnl_primitive_attr_get_dropout": [13, 283, 289], "dnnl_primitive_attr_set_dropout": [13, 283, 289], "get_dropout": [13, 539], "set_dropout": [13, 539], "three": [13, 24, 28, 38, 40, 41, 45, 47, 56, 144, 153, 164, 390, 396, 421, 439], "addit": [13, 14, 15, 19, 20, 22, 24, 27, 28, 29, 30, 31, 32, 36, 37, 45, 48, 50, 52, 56, 59, 71, 73, 74, 75, 101, 120, 144, 149, 155, 162, 163, 166, 201, 212, 229, 239, 240, 254, 261, 263, 265, 270, 281, 307, 327, 339, 361, 371, 376, 378, 390, 391, 395, 396, 407, 411, 416, 420, 421, 424, 439, 441, 568], "dnnl_arg_attr_dropout_mask": [13, 56, 283, 313], "through": [13, 15, 24, 27, 32, 37, 41, 42, 44, 45, 47, 49, 145, 160, 161, 162, 274, 339, 371, 390, 395, 397, 398, 400, 401, 420, 432, 439, 483], "dnnl_arg_attr_dropout_prob": [13, 56, 283, 313], "singl": [13, 16, 17, 20, 22, 24, 29, 32, 35, 36, 41, 42, 43, 47, 49, 53, 109, 114, 115, 116, 117, 118, 119, 120, 151, 153, 159, 162, 163, 164, 171, 172, 177, 185, 192, 193, 196, 240, 251, 280, 282, 289, 292, 307, 313, 325, 327, 355, 371, 378, 382, 395, 443, 525, 531], "hold": [13, 18, 34, 56, 114, 115, 116, 117, 118, 119, 120, 246, 249, 274, 289, 327, 370, 382, 385, 395, 420, 432, 539, 568], "dnnl_arg_attr_dropout_se": [13, 56, 283, 313], "benefici": [14, 34, 48, 164, 530], "how": [14, 15, 16, 18, 20, 22, 26, 29, 33, 34, 36, 37, 41, 42, 44, 46, 47, 49, 50, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 88, 93, 94, 103, 104, 136, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 159, 162, 163, 164, 165, 171, 172, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 257, 274, 278, 280, 289, 292, 307, 313, 325, 355, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 385, 386, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 531], "narrow": 14, "bf16": [14, 15, 20, 22, 25, 29, 32, 34, 35, 41, 42, 44, 45, 46, 48, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 150, 151, 152, 153, 154, 155, 159, 162, 163, 182, 183, 185, 196, 236, 282, 360, 443], "tf32": [14, 182, 183], "furthermor": [14, 29, 70], "do": [14, 15, 16, 18, 20, 24, 25, 32, 36, 47, 48, 52, 60, 103, 143, 144, 152, 156, 159, 164, 166, 181, 198, 215, 216, 242, 243, 249, 251, 257, 258, 267, 278, 280, 307, 385, 420, 421, 523, 525], "affect": [14, 15, 24, 36, 49, 52, 145, 164, 181, 319, 568], "remain": [14, 24, 28, 29, 70, 164, 248, 249, 274, 385, 386, 420, 432, 525, 531], "3": [14, 15, 16, 32, 34, 36, 38, 40, 41, 42, 44, 46, 49, 52, 56, 62, 63, 64, 91, 96, 110, 125, 149, 153, 157, 162, 163, 164, 177, 184, 185, 196, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 254, 255, 256, 257, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 307, 313, 339, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 391, 393, 395, 396, 397, 398, 400, 401, 407, 409, 411, 414, 418, 420, 421, 422, 424, 426, 428, 430, 433, 435, 437, 439, 441, 483, 525], "disabl": [14, 24, 27, 30, 31, 36, 51, 148, 149, 165, 295, 297, 302, 306, 311, 319, 334, 335, 465, 467, 471, 473], "smaller": [14, 24, 67, 68, 101, 151, 260, 405], "least": [14, 19, 23, 56, 69, 148, 292, 325, 326, 353, 355, 390, 395, 523, 567], "accur": [14, 29, 52, 250, 387], "expon": [14, 32, 109, 113, 159, 171, 172, 177, 185, 196], "mantissa": [14, 17, 32, 159, 177, 185, 196, 217, 218], "ignor": [14, 29, 31, 32, 60, 61, 64, 71, 93, 94, 103, 104, 256, 304, 307, 314, 395, 501, 503], "second": [14, 15, 27, 28, 40, 41, 42, 44, 45, 52, 70, 111, 114, 115, 116, 117, 118, 119, 120, 125, 181, 198, 211, 212, 242, 257, 274, 278, 289, 307, 339, 390, 397, 398, 400, 401, 420, 432, 525, 531], "dnnl_primitive_attr_set_fpmath_mode_v2": [14, 283, 289], "weight": [14, 15, 18, 24, 26, 27, 28, 29, 32, 36, 41, 47, 48, 49, 50, 52, 56, 70, 71, 72, 73, 74, 75, 101, 147, 151, 153, 159, 164, 165, 166, 181, 187, 195, 198, 209, 210, 211, 212, 215, 216, 229, 234, 235, 236, 237, 239, 241, 243, 247, 248, 249, 254, 260, 261, 263, 265, 266, 267, 268, 270, 274, 281, 282, 289, 295, 297, 302, 306, 307, 310, 313, 318, 360, 361, 370, 371, 372, 373, 376, 379, 384, 385, 386, 391, 398, 405, 406, 407, 411, 416, 418, 420, 421, 424, 432, 441, 444, 450, 452, 454, 456, 463, 464, 465, 467, 469, 470, 471, 473, 485, 487, 489, 491, 495, 496, 497, 499, 501, 503, 505, 507, 509, 511, 517, 519, 521, 531, 539, 542, 551, 571, 573], "de": [14, 45, 76, 78, 79, 165, 282, 420, 443], "refer": [14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 29, 32, 33, 34, 36, 40, 46, 49, 50, 53, 54, 55, 56, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 212, 235, 236, 240, 242, 243, 247, 249, 251, 278, 280, 289, 290, 292, 298, 301, 304, 307, 313, 325, 355, 372, 378, 382, 384, 386, 390, 395, 396, 420, 421, 439, 456, 487, 568], "tutori": [14, 32, 35, 56, 246, 250, 260, 282, 360], "decompress": [14, 32, 56, 282, 360], "onednn_default_fpmath_mod": 14, "dnnl_set_default_fpmath_mod": [14, 283, 300], "set_default_fpmath_mod": [14, 319, 349], "build": [14, 18, 51, 54, 136, 157, 219, 220, 233, 234, 236, 237, 241, 242, 243, 248, 249, 251, 257, 274, 278, 280, 319, 339, 347, 369, 370, 372, 373, 379, 385, 386, 396, 432, 483], "arm": [14, 165, 347], "bfloat16": [14, 30, 32, 48, 173, 176, 177, 185, 236, 360, 372], "kernel": [14, 15, 24, 28, 31, 33, 38, 41, 44, 51, 60, 61, 70, 71, 72, 73, 74, 75, 103, 104, 146, 149, 161, 162, 163, 164, 166, 188, 189, 211, 212, 233, 234, 236, 237, 240, 241, 258, 267, 269, 279, 283, 289, 309, 319, 327, 333, 369, 370, 372, 373, 378, 379, 387, 420, 422, 527, 529, 531, 542, 568], "introduc": [14, 36, 38, 44, 52, 148, 159, 164, 395, 421], "typic": [15, 16, 19, 20, 26, 37, 38, 41, 42, 44, 45, 46, 48, 49, 52, 55, 101, 142, 144, 151, 154, 155, 164, 166, 192, 193, 242, 243, 246, 257, 260, 278, 282, 307, 313, 316, 382, 395, 405, 443], "bandwidth": [15, 42, 48, 420], "pressur": [15, 48], "lead": [15, 18, 20, 22, 24, 25, 29, 32, 34, 40, 42, 44, 45, 46, 48, 52, 53, 55, 151, 162, 163, 164, 188, 240, 250, 292, 325, 327, 355, 378, 387, 395, 397, 400, 401, 568, 569], "append": [15, 36, 162, 163, 240, 289, 378, 531], "mechan": [15, 33, 36, 43, 45, 51, 54, 143, 144, 248, 249, 385, 386], "just": [15, 16, 24, 28, 29, 31, 34, 48, 51, 148, 149, 160, 162, 163, 164, 165, 171, 181, 235, 236, 240, 247, 249, 372, 378, 384, 386, 387, 390, 395, 396, 397, 398, 399, 400, 401, 402, 420, 439], "like": [15, 19, 20, 24, 28, 29, 37, 41, 45, 48, 50, 52, 54, 55, 63, 101, 146, 153, 164, 165, 289, 339, 382, 387, 395, 397, 398, 399, 400, 401, 402, 530, 531], "dnnl_post_ops_t": [15, 283, 289, 531], "post_op": [15, 47, 162, 163, 166, 231, 232, 235, 239, 240, 250, 254, 260, 261, 266, 268, 283, 289, 326, 327, 349, 365, 367, 371, 376, 378, 387, 391, 405, 407, 418, 421, 492, 539, 567, 568], "attach": [15, 16, 24, 26, 47, 48, 144, 162, 163, 240, 378, 390, 395, 396, 397, 399, 400, 401, 402, 439, 523, 531], "set_post_op": [15, 29, 47, 162, 163, 231, 232, 235, 239, 240, 250, 254, 260, 261, 266, 268, 365, 367, 371, 376, 378, 387, 391, 405, 407, 418, 421, 539, 568], "dnnl_primitive_attr_set_post_op": [15, 283, 289], "simpl": [15, 16, 25, 29, 51, 145, 160, 161, 165, 233, 241, 242, 246, 250, 251, 257, 260, 278, 280, 369, 371, 379, 382, 387, 395, 397, 399, 400, 401, 402, 405], "po": [15, 250, 260, 387, 405, 568], "assert": [15, 18, 36, 164, 234, 236, 237, 242, 243, 246, 248, 249, 251, 257, 278, 280, 307, 370, 372, 373, 382, 397, 398, 399, 400, 401, 402, 525], "len": [15, 292, 325, 355, 531], "append_someth": 15, "append_something_els": 15, "note": [15, 16, 18, 24, 32, 36, 45, 47, 48, 49, 52, 72, 144, 153, 162, 163, 164, 165, 181, 229, 230, 238, 240, 242, 243, 246, 249, 251, 263, 264, 265, 269, 274, 278, 280, 281, 294, 313, 335, 339, 361, 363, 370, 371, 374, 378, 382, 385, 386, 395, 411, 414, 416, 422, 432, 441, 461], "matter": [15, 36, 48, 52, 397, 398, 400, 401], "further": [15, 28, 29, 33, 41, 70, 143, 152, 181, 198, 421], "would": [15, 16, 18, 20, 24, 28, 29, 31, 38, 46, 47, 48, 52, 53, 56, 146, 151, 162, 163, 164, 240, 246, 289, 290, 292, 307, 318, 325, 355, 371, 378, 382, 395, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 525, 531, 539, 545, 571, 573], "togeth": [15, 39, 164, 318, 326, 421, 450, 489, 505, 509, 517, 519, 530, 567, 571], "anoth": [15, 18, 28, 42, 48, 123, 144, 149, 153, 162, 164, 166, 242, 243, 257, 278, 313, 339, 370, 390, 395, 396, 439, 483, 492, 525], "sequenc": [15, 19, 28, 29, 42, 44, 45, 52, 149, 181, 248, 249, 274, 289, 385, 386, 390, 396, 421, 432, 439, 531], "appear": [15, 26, 48, 154, 164, 165], "maximum": [15, 16, 19, 22, 36, 40, 48, 116, 146, 161, 166, 190, 248, 249, 269, 274, 286, 296, 325, 382, 422, 432], "32": [15, 16, 25, 48, 49, 52, 159, 163, 177, 181, 185, 196, 204, 228, 236, 237, 239, 248, 249, 251, 254, 280, 282, 283, 289, 292, 313, 325, 355, 371, 372, 373, 376, 391, 443, 531, 539], "page": [15, 19, 26, 48, 49, 73, 149, 150, 151, 156, 440], "moreov": [15, 28, 31, 34, 49, 144, 181, 198], "actual": [15, 16, 18, 19, 29, 36, 48, 50, 52, 144, 153, 155, 162, 163, 164, 180, 197, 199, 221, 240, 289, 307, 313, 378, 382, 390, 395, 420, 523, 525, 539, 551], "instanc": [15, 16, 18, 20, 28, 29, 31, 36, 47, 52, 56, 144, 148, 151, 160, 164, 181, 259, 307, 325, 337, 342, 355, 395, 403, 480, 530, 564, 568], "veri": [15, 16, 18, 48, 52, 159, 164, 390, 395], "slow": 15, "robust": [15, 47, 48], "code": [15, 19, 24, 25, 26, 28, 29, 30, 31, 33, 36, 37, 47, 48, 52, 54, 143, 145, 148, 149, 151, 156, 161, 162, 163, 164, 165, 240, 242, 243, 257, 258, 278, 307, 319, 370, 371, 378, 385, 386, 390, 396, 397, 398, 399, 400, 401, 402, 420, 421, 439, 445], "inspect": [15, 19, 313, 347, 395], "index": [15, 20, 22, 26, 28, 29, 34, 36, 46, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 164, 166, 233, 241, 256, 283, 289, 294, 299, 307, 308, 313, 324, 336, 347, 350, 353, 354, 369, 370, 379, 385, 386, 390, 395, 396, 439, 458, 461, 479, 481, 523, 525, 531, 537, 539, 542, 545, 563], "less": [15, 22, 29, 56, 101, 144, 152, 171, 172, 274, 311, 334, 371, 432, 479], "than": [15, 18, 22, 24, 27, 29, 32, 34, 48, 52, 56, 67, 68, 87, 101, 136, 151, 152, 156, 164, 165, 171, 172, 212, 219, 220, 236, 237, 241, 260, 311, 334, 372, 373, 379, 395, 405, 421, 479], "its": [15, 18, 19, 22, 24, 30, 32, 34, 36, 40, 41, 43, 44, 47, 50, 52, 55, 56, 109, 111, 143, 144, 153, 161, 164, 165, 181, 200, 260, 274, 282, 307, 337, 341, 370, 371, 395, 396, 405, 413, 432, 439, 443, 479, 492, 523, 537, 561, 564], "popular": [15, 16, 43, 164, 395], "activ": [15, 16, 18, 20, 23, 28, 41, 49, 50, 67, 83, 97, 106, 153, 164, 181, 198, 211, 212, 260, 267, 283, 289, 318, 405, 420, 483, 531, 539, 542, 571, 573], "preced": [15, 20, 24, 28, 30, 31, 40, 51, 55, 61, 71, 72, 75, 146, 148, 149, 154, 165, 181, 420], "inner": [15, 28, 32, 47, 52, 164, 181, 205, 206, 234, 261, 287, 312, 360, 370, 408, 420, 494, 495, 496, 497, 498, 499, 525, 582], "product": [15, 28, 32, 40, 41, 42, 45, 47, 52, 56, 101, 136, 162, 163, 205, 206, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 247, 252, 253, 254, 255, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 281, 283, 287, 292, 307, 312, 325, 355, 360, 361, 363, 365, 367, 369, 370, 372, 373, 374, 376, 378, 379, 384, 389, 391, 393, 403, 408, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 433, 435, 437, 441, 494, 495, 496, 497, 498, 499, 525, 582], "dnnl_post_ops_append_eltwis": [15, 283, 289], "append_eltwis": [15, 47, 162, 163, 231, 235, 239, 240, 254, 260, 261, 266, 268, 365, 371, 376, 378, 391, 405, 407, 418, 421, 531], "simplic": [15, 16, 153, 164, 238, 374, 382, 390, 396, 439], "alg": [15, 165, 420, 421], "alpha": [15, 20, 29, 34, 46, 49, 55, 80, 81, 89, 90, 97, 110, 147, 162, 163, 166, 188, 189, 211, 212, 231, 233, 236, 237, 239, 240, 241, 250, 254, 256, 260, 261, 264, 266, 282, 283, 289, 292, 298, 305, 310, 318, 325, 349, 355, 365, 369, 372, 373, 376, 378, 379, 387, 391, 395, 405, 407, 414, 418, 421, 443, 475, 477, 513, 515, 531, 533, 535, 542, 571, 573], "beta": [15, 20, 29, 34, 46, 53, 55, 62, 63, 88, 89, 90, 95, 96, 109, 130, 131, 151, 162, 163, 166, 188, 189, 211, 212, 231, 233, 236, 237, 239, 240, 241, 250, 254, 256, 261, 264, 266, 283, 289, 290, 292, 298, 301, 304, 305, 318, 325, 349, 355, 365, 369, 372, 373, 376, 378, 379, 387, 391, 395, 407, 414, 418, 421, 475, 477, 513, 515, 531, 542, 571, 573], "replac": [15, 34, 41, 52, 56, 67, 68, 149, 153, 154, 160, 165, 387, 388, 395], "operatornam": [15, 16, 32, 34, 162], "preserv": [15, 18, 47, 48, 233, 241, 369, 379], "exist": [15, 19, 32, 33, 36, 38, 56, 143, 215, 216, 307, 336, 340, 344, 525], "prior": [15, 289, 308, 313, 314, 353, 395, 531, 537, 538, 568], "shift": [15, 28, 49, 52, 63, 95, 200, 201, 230, 232, 259, 262, 282, 283, 289, 290, 301, 304, 313, 363, 367, 403, 409, 443, 501, 503, 539], "multipli": [15, 18, 28, 40, 41, 44, 52, 153, 190, 250, 258, 274, 279, 286, 289, 292, 307, 323, 325, 355, 387, 396, 432, 439, 531, 563], "scale": [15, 22, 26, 27, 28, 29, 32, 36, 40, 42, 43, 45, 47, 50, 52, 56, 63, 76, 78, 79, 80, 81, 88, 93, 94, 95, 96, 112, 151, 152, 155, 156, 162, 163, 166, 177, 188, 189, 196, 200, 201, 230, 232, 235, 240, 243, 246, 249, 259, 260, 262, 272, 277, 282, 283, 289, 290, 292, 301, 304, 313, 317, 323, 325, 326, 327, 355, 363, 367, 371, 378, 382, 383, 385, 386, 387, 388, 398, 403, 405, 406, 409, 428, 429, 437, 443, 444, 501, 503, 531, 538, 539, 548, 550, 563, 567, 568], "residu": [15, 38, 248, 530], "learn": [15, 16, 24, 28, 29, 30, 32, 43, 47, 48, 52, 144, 173, 176, 267, 347, 420, 530], "block": [15, 19, 26, 28, 36, 38, 44, 149, 161, 165, 166, 180, 181, 197, 198, 211, 212, 268, 307, 327, 347, 395, 420, 525, 530, 569], "previous": [15, 49, 242, 243, 257, 278, 307, 371, 396, 420, 439, 523, 525, 539], "scenario": [15, 32, 33, 143, 144, 146, 187, 195, 371], "previou": [15, 16, 24, 34, 40, 44, 47, 49, 151, 153, 164, 233, 241, 246, 260, 282, 289, 369, 379, 382, 405, 443, 531], "magnitud": 15, "operand": [15, 40, 52, 165, 289, 531], "s8": [15, 16, 20, 22, 25, 29, 32, 34, 36, 40, 45, 46, 49, 50, 53, 56, 76, 78, 79, 112, 146, 147, 151, 152, 153, 154, 155, 162, 163, 165, 185, 196, 235, 240, 243, 246, 247, 249, 260, 272, 282, 371, 378, 382, 384, 386, 398, 405, 428, 443], "gemm": [15, 18, 24, 29, 52, 164, 166, 248, 249, 386, 421], "_point": 15, "origin": [15, 16, 20, 34, 46, 48, 49, 53, 93, 94, 151, 152, 155, 156, 164, 165, 171, 260, 282, 289, 298, 307, 371, 382, 405, 443, 531], "reinterpret": [15, 29, 33, 289, 531], "_data": 15, "_type": 15, "1x1": [15, 166, 289, 531], "seen": [15, 421], "mobilenet_v1": 15, "stack": [15, 153], "opportun": 15, "dnnl_post_ops_append_dw": [15, 283, 289], "append_dw": [15, 531], "better": [15, 22, 24, 48, 159, 164, 166, 307, 370, 382, 387, 395, 398, 420, 421], "readabl": [15, 38, 395, 439], "assum": [15, 16, 19, 23, 24, 29, 52, 54, 70, 76, 78, 79, 112, 147, 149, 152, 164, 229, 239, 246, 250, 254, 261, 263, 265, 270, 274, 281, 289, 292, 307, 313, 325, 355, 361, 376, 382, 385, 386, 387, 391, 395, 396, 407, 411, 416, 420, 421, 424, 432, 439, 441, 525, 531], "2d": [15, 20, 29, 34, 46, 50, 52, 55, 56, 101, 146, 147, 152, 154, 155, 161, 164, 166, 181, 198, 289, 295, 297, 309, 317, 395, 421, 435, 436, 463, 465, 467, 469, 471, 473, 527, 529, 531], "notat": [15, 18, 34, 42, 44, 45, 56, 164, 181, 198], "conv_1x1": 15, "spatial": [15, 18, 20, 28, 29, 46, 50, 55, 60, 61, 70, 71, 72, 73, 74, 75, 93, 94, 103, 104, 146, 147, 152, 154, 164, 166, 181, 198, 289, 295, 297, 307, 309, 317, 395, 463, 465, 467, 469, 471, 473, 483, 527, 529, 531, 548, 550], "kh": [15, 16, 28, 29, 50, 52, 60, 70, 71, 103, 146, 239, 243, 254, 267, 268, 269, 289, 376, 391, 420, 421, 422, 531], "kw": [15, 16, 28, 29, 50, 52, 60, 70, 103, 146, 239, 243, 254, 267, 268, 269, 289, 376, 391, 420, 421, 422, 531], "conv_dw": 15, "g": [15, 16, 18, 20, 23, 24, 28, 29, 34, 36, 38, 45, 46, 48, 50, 53, 54, 70, 78, 88, 95, 96, 154, 160, 161, 162, 163, 164, 165, 198, 229, 239, 240, 242, 243, 246, 249, 250, 257, 263, 265, 274, 278, 281, 282, 283, 289, 307, 361, 376, 378, 382, 387, 395, 397, 398, 400, 401, 411, 416, 432, 441, 443, 461, 481, 531, 539, 541, 546, 563], "oc": [15, 16, 28, 29, 50, 70, 233, 239, 241, 243, 254, 261, 263, 267, 268, 283, 289, 369, 376, 379, 391, 407, 411, 420, 421, 531, 578], "ic": [15, 16, 28, 29, 50, 70, 76, 112, 152, 155, 230, 231, 232, 233, 238, 239, 241, 242, 243, 254, 255, 257, 259, 261, 263, 264, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 283, 289, 363, 365, 367, 369, 374, 376, 379, 391, 393, 403, 407, 411, 414, 420, 421, 422, 424, 426, 428, 430, 433, 435, 437, 531, 578], "pad_l": 15, "pad_r": 15, "conv_": [15, 16], "dw": [15, 28, 29, 60, 70, 71, 103, 146, 269, 422], "dst_": [15, 16, 34, 52, 76, 109, 112], "n": [15, 16, 18, 20, 22, 26, 28, 29, 36, 40, 42, 44, 45, 46, 49, 50, 53, 55, 56, 60, 62, 63, 65, 69, 70, 95, 96, 99, 101, 103, 137, 146, 147, 149, 151, 152, 154, 156, 157, 162, 163, 164, 166, 181, 198, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 292, 294, 307, 323, 325, 326, 327, 349, 355, 361, 363, 365, 367, 369, 372, 374, 376, 378, 379, 380, 381, 382, 384, 386, 387, 389, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 525, 531, 564, 567, 568, 569, 576], "oc_": 15, "ceil": [15, 60, 103, 188, 189, 289, 531], "oh_": 15, "ow_": 15, "oh_conv_1x1": 15, "ow_conv_1x1": 15, "height": [15, 28, 29, 70, 71, 103, 104, 164, 181, 198, 230, 231, 232, 238, 239, 254, 255, 259, 261, 264, 269, 270, 271, 272, 273, 275, 277, 295, 297, 309, 363, 365, 367, 370, 374, 376, 391, 393, 403, 407, 414, 422, 424, 426, 428, 430, 433, 437, 463, 465, 467, 469, 471, 473, 527, 529], "width": [15, 28, 29, 70, 71, 103, 104, 164, 181, 198, 230, 231, 232, 238, 239, 254, 255, 259, 261, 264, 269, 270, 271, 272, 273, 275, 277, 295, 297, 309, 363, 365, 367, 370, 374, 376, 391, 393, 403, 407, 414, 422, 424, 426, 428, 430, 433, 437, 463, 465, 467, 469, 471, 473, 527, 529], "conv": [15, 16, 29, 47, 145, 149, 160, 165, 233, 235, 236, 237, 241, 242, 243, 257, 267, 268, 278, 369, 371, 372, 373, 379, 398, 420, 421], "bia": [15, 16, 17, 28, 29, 49, 50, 56, 65, 66, 70, 73, 88, 95, 96, 101, 153, 166, 172, 181, 198, 201, 209, 210, 217, 218, 229, 235, 236, 237, 239, 241, 254, 261, 263, 265, 266, 274, 281, 289, 295, 297, 302, 306, 313, 318, 361, 370, 371, 372, 373, 376, 379, 391, 407, 411, 416, 418, 432, 441, 450, 452, 465, 467, 471, 473, 489, 491, 497, 499, 505, 507, 509, 511, 517, 519, 521, 531, 542, 551, 571, 573], "though": [15, 18, 25, 48, 52, 153, 219, 220, 382, 387, 395], "convent": [15, 20, 22, 26, 29, 34, 40, 46, 48, 50, 53, 55, 56, 57, 60, 67, 69, 70, 80, 83, 84, 89, 91, 97, 98, 101, 103, 121, 126, 128, 130, 139, 146, 147, 151, 152, 153, 154, 155, 156, 164, 165, 307, 360, 395, 420, 440], "impli": [15, 136, 162, 163, 201, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "part": [15, 16, 19, 24, 37, 43, 44, 51, 145, 148, 162, 163, 240, 242, 243, 251, 257, 278, 280, 307, 327, 378, 395, 399, 402, 420, 525, 568, 569], "dst_1x1": 15, "wei_dw": 15, "dst_dw": 15, "dnnl_format_tag_ani": [15, 146, 153, 181, 198, 233, 241, 291, 295, 297, 302, 307, 310, 313, 315, 317, 318, 369, 379], "coincid": [15, 164, 327, 568], "util": [15, 18, 31, 36, 144, 162, 163, 240, 274, 287, 293, 378, 396, 432], "lifetim": [15, 37, 143, 212, 242, 243, 251, 257, 278, 280, 289, 308, 313, 353], "thu": [15, 29, 56, 144, 274, 420, 432], "gain": [15, 47, 421], "expect": [15, 19, 20, 24, 29, 36, 43, 46, 50, 52, 53, 55, 56, 78, 145, 146, 152, 162, 163, 165, 166, 171, 172, 200, 211, 212, 240, 256, 258, 289, 326, 327, 378, 395, 396, 420, 421, 461, 523, 539, 541, 546, 551, 563, 564, 567, 568], "dnnl_post_ops_append_binari": [15, 283, 289], "append_binari": [15, 162, 163, 232, 240, 367, 378, 531], "desc": [15, 16, 18, 19, 33, 36, 47, 48, 143, 145, 149, 162, 163, 164, 166, 211, 212, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 307, 353, 354, 361, 363, 365, 367, 370, 371, 372, 373, 374, 376, 378, 380, 381, 382, 384, 385, 386, 387, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 527, 529, 531, 533, 535, 539, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "src1": [15, 289, 458, 531], "_1": [15, 102, 105], "per": [15, 22, 26, 29, 42, 43, 46, 50, 53, 56, 71, 73, 74, 75, 76, 78, 79, 88, 95, 96, 111, 112, 144, 155, 234, 272, 307, 319, 382, 421, 428, 531, 574], "broadcast": [15, 22, 26, 41, 44, 56, 59, 65, 77, 87, 101, 102, 105, 108, 135, 138, 147, 151, 156, 289, 291, 531], "channel": [15, 20, 28, 29, 43, 46, 49, 50, 53, 55, 63, 65, 66, 70, 71, 72, 73, 74, 75, 76, 78, 79, 88, 95, 96, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 147, 153, 154, 155, 166, 171, 172, 181, 198, 229, 230, 231, 232, 238, 239, 243, 254, 255, 259, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 305, 307, 361, 363, 365, 367, 370, 374, 376, 391, 393, 395, 398, 403, 407, 409, 411, 414, 416, 420, 422, 424, 426, 428, 430, 432, 433, 434, 435, 437, 441, 483, 531], "format_tag": [15, 16, 19, 22, 29, 47, 48, 50, 56, 147, 150, 152, 153, 162, 163, 164, 165, 166, 204, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 244, 245, 247, 248, 249, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 307, 349, 361, 363, 365, 367, 372, 373, 374, 376, 378, 380, 381, 384, 385, 386, 390, 391, 393, 395, 396, 403, 405, 406, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 444, 450, 452, 463, 465, 467, 469, 471, 473, 489, 491, 495, 497, 499, 505, 507, 509, 511, 517, 519, 523, 525, 544, 550, 571, 573], "tag": [15, 16, 18, 29, 36, 48, 50, 56, 146, 152, 162, 163, 166, 181, 198, 199, 221, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 244, 245, 247, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 307, 313, 361, 363, 365, 367, 370, 371, 372, 373, 374, 376, 378, 380, 381, 384, 390, 391, 393, 395, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 525], "later": [15, 19, 23, 24, 48, 88, 95, 164, 229, 230, 255, 263, 265, 270, 281, 361, 363, 393, 395, 411, 416, 424, 441], "mismatch": [15, 48, 165, 166, 256, 395], "suboptim": [15, 20, 29, 34, 46, 53, 55, 307, 421, 523], "initi": [15, 19, 28, 30, 33, 48, 56, 144, 147, 153, 162, 163, 164, 166, 173, 176, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 246, 247, 248, 249, 250, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 275, 277, 279, 281, 282, 291, 295, 297, 302, 307, 308, 310, 315, 317, 318, 319, 324, 327, 339, 341, 353, 354, 361, 363, 365, 367, 370, 372, 373, 374, 376, 378, 379, 382, 384, 385, 386, 387, 391, 393, 395, 403, 405, 407, 409, 411, 416, 418, 424, 426, 428, 430, 433, 437, 441, 443, 450, 452, 463, 465, 467, 469, 471, 473, 489, 491, 495, 497, 499, 505, 507, 509, 511, 517, 519, 523, 544, 550, 568, 571, 573], "get_params_binari": [15, 531], "dnnl_post_ops_append_prelu": [15, 283, 289], "append_prelu": [15, 531], "int": [15, 16, 52, 149, 157, 162, 163, 164, 177, 180, 181, 206, 212, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 294, 307, 308, 311, 313, 314, 319, 320, 321, 323, 324, 325, 327, 334, 335, 337, 340, 349, 350, 353, 354, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 568, 570, 571, 572, 573, 574], "assumpt": [15, 28, 152, 397, 398, 399, 400, 401, 402, 405, 443], "dnnl_arg_attr_multiple_post_op": [15, 22, 29, 34, 46, 50, 53, 56, 146, 150, 152, 155, 232, 283, 313, 367, 531], "dnnl_arg_weight": [15, 16, 29, 47, 50, 56, 147, 233, 234, 235, 236, 237, 239, 241, 244, 245, 246, 247, 250, 254, 260, 261, 266, 267, 268, 270, 282, 283, 313, 369, 371, 372, 373, 376, 379, 380, 381, 382, 384, 387, 391, 405, 407, 418, 420, 421, 424, 443, 531], "fp32": [15, 24, 32, 48], "plain": [15, 16, 26, 56, 151, 181, 198, 204, 228, 289, 307, 421, 531], "ab": [15, 28, 34, 36, 40, 41, 42, 44, 45, 49, 50, 56, 58, 162, 163, 171, 172, 190, 198, 204, 228, 232, 240, 247, 260, 282, 286, 289, 367, 378, 384, 405, 443, 525, 531], "acb": [15, 198, 289, 531], "acdb": [15, 28, 198, 289, 531], "acdeb": [15, 198, 289, 531], "th": [15, 49, 114, 115, 116, 117, 118, 119, 120, 289, 531, 539], "dedic": [15, 36, 47, 161, 162, 163, 240, 289, 378, 531, 539], "along": [15, 37, 56, 69, 78, 79, 86, 114, 115, 116, 117, 118, 119, 120, 128, 145, 150, 154, 155, 160, 165, 166, 204, 228, 282, 289, 307, 320, 433, 434, 435, 436, 443, 531, 539, 553, 555], "common": [15, 16, 19, 37, 48, 144, 162, 163, 165, 219, 220, 240, 274, 287, 289, 312, 378, 390, 395, 396, 432, 439, 531, 539], "whole": [15, 16, 24, 147, 162, 163, 164, 240, 274, 289, 378, 432, 531, 539], "laid": [15, 19, 28, 164, 181, 198, 289, 307, 316, 395, 420, 531], "cnn": [15, 20, 28, 29, 35, 36, 48, 49, 50, 51, 53, 146, 154, 159, 181, 198, 234, 235, 236, 237, 289, 307, 360, 382, 395, 420, 531], "4d": [15, 42, 44, 45, 50, 95, 96, 164, 181, 198, 289, 307, 395, 531], "h": [15, 20, 22, 28, 29, 32, 44, 45, 46, 50, 54, 55, 62, 63, 65, 146, 147, 151, 160, 164, 166, 170, 171, 175, 176, 177, 179, 180, 181, 183, 184, 189, 191, 193, 195, 198, 201, 203, 204, 206, 208, 210, 212, 214, 216, 218, 220, 221, 223, 225, 227, 233, 234, 237, 241, 242, 243, 247, 248, 249, 251, 252, 256, 257, 258, 267, 274, 278, 279, 280, 289, 307, 369, 373, 379, 384, 389, 390, 395, 396, 397, 398, 399, 400, 401, 402, 420, 432, 439, 481, 482, 483, 531, 574], "w": [15, 20, 22, 28, 29, 41, 46, 49, 50, 55, 56, 62, 63, 65, 146, 147, 151, 153, 164, 177, 181, 185, 198, 233, 234, 236, 237, 241, 249, 256, 267, 268, 289, 307, 369, 372, 373, 379, 385, 386, 395, 420, 531], "let": [15, 16, 29, 47, 48, 50, 70, 71, 78, 152, 164, 184, 186, 236, 237, 246, 267, 372, 373, 382, 390, 395, 396, 420, 421, 439], "consid": [15, 16, 18, 20, 26, 29, 32, 44, 46, 48, 52, 53, 156, 164, 201, 295, 297, 307, 309, 382, 390, 395, 492], "pattern": [15, 19, 36, 43, 284, 397, 400, 401], "pretti": [15, 395], "topologi": [15, 29, 47, 146, 154, 233, 234, 236, 237, 260, 274, 282, 369, 370, 372, 373, 405, 420, 432, 443], "resnet": [15, 40], "famili": [15, 24, 52, 173, 176], "append_sum": [15, 250, 387, 531], "eltwise_relu": [15, 47, 162, 163, 172, 231, 234, 235, 236, 237, 239, 240, 253, 254, 255, 256, 258, 260, 261, 266, 268, 279, 365, 370, 371, 372, 373, 376, 378, 390, 391, 393, 395, 396, 405, 407, 418, 421, 439, 571, 573], "slope": [15, 20, 29, 97, 110, 111, 201, 235, 256, 318, 371, 395, 571, 573], "f": [15, 23, 28, 56, 130, 131, 150, 152, 153, 162, 163, 198, 229, 230, 231, 232, 235, 238, 239, 240, 246, 247, 248, 249, 250, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 281, 283, 289, 292, 325, 355, 361, 363, 365, 367, 371, 374, 376, 378, 382, 384, 386, 387, 391, 393, 395, 403, 405, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 433, 435, 437, 441, 531, 539], "unus": [15, 283, 318], "convolution_forward": [15, 16, 19, 29, 47, 145, 234, 235, 236, 237, 239, 267, 268, 295, 349, 370, 371, 372, 373, 376, 420, 421, 463, 465, 537], "conv_d": [15, 421, 531], "hypothet": 15, "illustr": 15, "set_scales_mask": [15, 16, 56, 235, 246, 250, 260, 272, 371, 382, 383, 387, 388, 405, 406, 428, 539], "cover": [15, 16, 36, 48, 52, 164, 395, 420], "eltwise_tanh": [15, 172, 281, 441, 571, 573], "eltwise_linear": [15, 172], "linear": [15, 19, 34, 41, 76, 78, 79, 93, 94, 112, 152, 164, 171, 172, 188, 189, 263, 292, 298, 317, 396, 412, 439, 523], "dnnl_arg_src": [15, 16, 20, 29, 34, 46, 47, 50, 53, 55, 56, 146, 147, 150, 152, 154, 155, 230, 233, 234, 235, 236, 237, 239, 241, 244, 245, 246, 247, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 282, 283, 308, 313, 324, 353, 354, 363, 369, 370, 371, 372, 373, 376, 379, 380, 381, 382, 384, 387, 389, 390, 391, 393, 395, 396, 403, 405, 407, 409, 414, 418, 420, 421, 422, 424, 426, 428, 430, 433, 435, 439, 443, 481, 537, 545], "dnnl_arg_dst": [15, 16, 20, 22, 26, 29, 34, 46, 47, 50, 53, 55, 56, 146, 147, 150, 152, 154, 155, 156, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 246, 247, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 282, 283, 313, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 384, 387, 389, 390, 391, 393, 395, 396, 403, 405, 407, 409, 414, 418, 420, 421, 422, 424, 426, 428, 430, 433, 435, 437, 439, 443], "s_": 15, "mobilenet": 15, "pad": [15, 28, 29, 44, 60, 61, 70, 71, 72, 73, 74, 75, 103, 104, 146, 153, 164, 165, 166, 171, 172, 211, 212, 239, 249, 254, 267, 268, 269, 274, 283, 289, 295, 297, 307, 309, 313, 370, 376, 385, 391, 420, 421, 422, 432, 463, 465, 467, 469, 471, 473, 525, 527, 529, 531, 542], "dnnl_arg_attr_post_op_dw": [15, 29, 283, 313], "cpd": 15, "dw_weight_md": 15, "exec_arg_md": [15, 211, 353, 354, 537, 545], "dw_bias_md": 15, "dnnl_arg_bia": [15, 29, 50, 56, 153, 229, 233, 234, 235, 236, 237, 239, 241, 248, 249, 254, 261, 263, 265, 266, 274, 281, 283, 313, 361, 369, 371, 372, 373, 376, 379, 385, 386, 391, 407, 411, 416, 418, 432, 441], "behaviour": 15, "relu_": 15, "scales_": 15, "conv_dst_md": [15, 233, 235, 236, 237, 239, 241, 267, 268, 369, 371, 372, 373, 376, 379, 420, 421], "mb": [15, 27, 28, 149, 266, 289, 418, 531, 539, 577, 578, 579, 580], "nchw": [15, 20, 28, 46, 55, 146, 152, 154, 198, 230, 231, 234, 235, 236, 237, 238, 239, 253, 254, 255, 258, 261, 264, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 363, 365, 370, 371, 372, 373, 374, 376, 390, 391, 393, 395, 396, 407, 414, 420, 421, 422, 424, 426, 428, 430, 433, 437, 439], "abcd": [15, 28, 165, 198, 275, 420, 421, 433], "binary_add": [15, 162, 163, 172, 232, 240, 367, 378], "src1_md": 15, "unordered_map": [15, 229, 230, 231, 232, 234, 236, 237, 238, 239, 242, 243, 244, 245, 247, 248, 249, 251, 254, 255, 257, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 283, 353, 354, 361, 363, 365, 367, 370, 372, 373, 374, 376, 380, 381, 384, 385, 386, 391, 393, 397, 398, 399, 400, 401, 402, 403, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437, 441, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 531, 532, 534, 537, 543, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "arg": [15, 16, 47, 233, 241, 283, 289, 308, 313, 324, 353, 354, 369, 379, 447, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 481, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 537, 539, 543, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "insert": [15, 43, 101, 229, 230, 231, 232, 236, 237, 238, 239, 244, 245, 247, 254, 255, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 281, 361, 363, 365, 367, 372, 373, 374, 376, 380, 381, 384, 391, 393, 403, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 433, 435, 437, 441, 531], "conv_src_memori": [15, 233, 235, 236, 237, 241, 369, 371, 372, 373, 379], "binary_post_op_posit": [15, 22, 29, 34, 46, 50, 53, 56, 146, 150, 152, 155], "hard": 15, "dnnl_arg_src_1": [15, 20, 22, 29, 34, 46, 50, 53, 56, 146, 150, 152, 155, 231, 232, 283, 313, 365, 367], "parenthes": 15, "around": [15, 19, 25, 246, 382, 405, 420], "binary_post_op_src1_memori": 15, "sign": [16, 32, 43, 49, 52, 162, 163, 177, 185, 196, 240, 289, 292, 313, 325, 355, 371, 378, 539], "unsign": [16, 32, 43, 52, 177, 185, 196, 212, 260, 283, 289, 290, 292, 301, 304, 318, 319, 322, 325, 349, 355, 371, 405, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 539, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573, 574], "primari": 16, "goal": 16, "compat": [16, 24, 30, 49, 87], "relat": [16, 20, 22, 24, 26, 29, 32, 34, 36, 38, 40, 46, 53, 55, 146, 149, 150, 151, 152, 153, 154, 155, 156, 250, 385, 386, 387, 395, 396, 421, 439], "materi": 16, "deep": [16, 28, 29, 30, 32, 43, 47, 48, 52, 144, 160, 173, 176, 267, 341, 420], "annot": [16, 149, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 385, 386], "x_": [16, 49, 52, 382], "scale_": [16, 29, 151], "x": [16, 22, 28, 29, 41, 52, 59, 77, 88, 93, 94, 102, 105, 108, 138, 149, 151, 156, 164, 172, 198, 230, 233, 234, 235, 236, 237, 241, 258, 259, 260, 262, 272, 282, 283, 292, 325, 327, 355, 363, 369, 370, 371, 372, 373, 379, 396, 403, 405, 409, 428, 439, 443, 568], "zp_": 16, "factor": [16, 22, 26, 29, 42, 44, 45, 46, 47, 50, 52, 53, 56, 78, 80, 81, 151, 152, 155, 162, 188, 211, 212, 235, 249, 277, 283, 289, 313, 317, 371, 382, 386, 405, 420, 437, 443, 531, 539, 542, 548, 550], "int32": 16, "denot": [16, 24, 28, 34, 40, 49, 52, 61, 71, 72, 75, 103, 104, 110, 111, 136, 161, 164, 165, 181, 198, 420], "elementwis": [16, 22, 166, 172, 200, 289, 298, 420, 457, 458, 474, 475, 476, 477, 531], "formula": [16, 20, 29, 32, 34, 44, 46, 48, 50, 52, 53, 55, 57, 60, 62, 63, 67, 70, 71, 78, 79, 80, 83, 84, 89, 90, 91, 95, 97, 98, 101, 103, 106, 109, 110, 121, 126, 128, 130, 139, 146, 147, 152, 153, 154, 155, 164, 171, 289, 318, 327, 382, 517, 519, 539, 568], "arrai": [16, 18, 49, 164, 211, 212, 246, 252, 253, 274, 277, 289, 292, 294, 295, 297, 307, 308, 309, 313, 317, 323, 324, 325, 339, 353, 354, 355, 382, 389, 432, 437, 463, 465, 467, 469, 471, 473, 523, 527, 529, 539], "best": [16, 24, 29, 30, 38, 53, 56, 144, 147, 151, 165, 166, 236, 237, 241, 242, 243, 257, 268, 278, 307, 370, 372, 373, 379, 405, 421, 443], "those": [16, 19, 24, 32, 34, 101, 144, 162, 163, 164, 173, 176, 240, 249, 378, 382, 385, 397, 398, 400, 401, 421], "These": [16, 19, 24, 37, 39, 49, 52, 181, 198, 260, 395, 405, 420, 421], "ahead": 16, "calibr": 16, "tool": [16, 51], "static": [16, 24, 36, 43, 54, 56, 162, 163, 229, 230, 231, 232, 233, 238, 239, 240, 241, 246, 247, 250, 254, 255, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 281, 283, 361, 363, 365, 367, 369, 374, 376, 378, 379, 382, 383, 384, 387, 391, 393, 403, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437, 441, 479, 480, 523, 525, 564, 568], "minimum": [16, 22, 24, 40, 118, 190, 286, 340, 382, 523], "dynam": [16, 32, 54, 56, 78, 149, 246, 250, 353, 354, 382, 383, 387, 537, 545], "conjunct": 16, "behav": [16, 52, 153, 201], "dimension": [16, 28, 37, 49, 56, 99, 164, 289, 307, 345, 525, 539], "reason": [16, 28, 31, 52, 145, 162, 163, 164, 240, 250, 289, 378, 387, 420, 539], "subset": [16, 38, 173, 176, 292], "guid": [16, 24, 32, 149, 161, 235, 236, 247, 249, 290, 291, 294, 295, 298, 301, 302, 304, 305, 306, 308, 309, 310, 315, 316, 317, 318, 320, 321, 323, 324, 372, 384, 386], "appropri": [16, 22, 26, 29, 31, 50, 52, 56, 146, 147, 150, 156, 162, 164, 246, 382, 395, 405, 443], "convert": [16, 17, 32, 34, 36, 42, 43, 45, 49, 52, 76, 78, 79, 112, 123, 151, 159, 162, 163, 236, 246, 288, 289, 299, 300, 313, 318, 353, 354, 372, 382, 421, 492, 523], "wider": [16, 32, 45, 169, 170, 289], "int16": 16, "overflow": [16, 25, 32, 40, 52, 249], "maintain": [16, 148, 159, 307, 397, 398, 400, 401, 525], "necessari": [16, 19, 24, 29, 30, 33, 43, 47, 48, 50, 143, 149, 151, 153, 164, 209, 210, 250, 267, 307, 313, 370, 387, 397, 398, 400, 401], "written": [16, 18, 52, 307, 337], "satur": [16, 52, 151, 292, 325, 355], "underflow": [16, 49], "architectur": [16, 29, 30, 36, 41, 42, 44, 45, 52, 144, 149, 161, 162, 165, 166, 292, 325, 347, 355, 420], "slightli": [16, 52, 382], "vari": [16, 52, 165, 397, 398, 400, 401], "_op": [16, 150, 162], "dequant": [16, 40, 43, 45, 49, 78, 123, 151, 190, 235, 243, 286, 289, 371, 398, 531], "achiev": [16, 29, 42, 47, 49, 151, 153, 164, 242, 243, 257, 278, 371], "eltwis": [16, 20, 22, 24, 29, 41, 46, 48, 50, 56, 146, 150, 152, 155, 162, 166, 171, 172, 205, 287, 312, 360, 371, 390, 395, 421, 474, 475, 476, 477, 530, 531, 582], "dev_guide_attributes_post_ops_eltwis": 16, "dev_guide_attributes_post_ops_binari": 16, "src_": [16, 32, 34, 52, 76, 78, 79, 109, 112, 114, 115, 116, 117, 118, 119, 120], "weights_": [16, 32], "work": [16, 18, 19, 21, 22, 24, 26, 29, 33, 34, 36, 38, 39, 48, 49, 52, 53, 143, 144, 147, 149, 150, 151, 154, 155, 156, 159, 164, 165, 242, 243, 250, 256, 257, 274, 278, 307, 382, 387, 395, 405, 420, 432, 443, 523], "task": [16, 18, 33, 143, 149], "form": [16, 27, 28, 37, 41, 47, 155, 164, 181, 198, 395], "55": [16, 149, 233, 234, 236, 237, 241, 268, 369, 372, 373, 379, 421], "56": [16, 149, 243], "zero_point": [16, 151, 283, 289, 531, 539], "zero_point_": 16, "mathemat": [16, 29, 47, 48, 106, 109, 110, 151, 153, 166, 421], "_to": 16, "_int8": 16, "_f32": [16, 212], "comp_": 16, "bias_": 16, "_": [16, 20, 26, 28, 40, 46, 52, 53, 62, 69, 78, 79, 95, 114, 115, 116, 117, 118, 119, 120, 152, 165, 289], "regular": [16, 24, 36, 165, 305, 395, 439, 513, 515], "chosen": [16, 19, 38, 48, 151, 171, 172, 177, 180, 206, 236, 237, 241, 274, 307, 370, 371, 372, 373, 379, 395, 420, 432], "compens": [16, 26, 52, 162, 249, 283, 386], "term": [16, 18, 28, 29, 144, 152, 153, 162, 295, 297, 302, 306, 465, 467, 471, 473], "account": [16, 29, 147], "pre": [16, 19, 38, 56, 260, 282, 405, 406, 443, 444], "_s8": 16, "rang": [16, 25, 40, 47, 52, 69, 76, 78, 79, 86, 112, 114, 115, 116, 117, 118, 119, 120, 137, 149, 159, 166, 246, 279, 382, 439], "loss": [16, 29, 40, 47, 387], "re": [16, 22, 26, 27, 52, 149, 162, 163, 232, 235, 236, 240, 247, 249, 367, 372, 378, 382, 384, 386, 405, 443], "end": [16, 24, 34, 47, 57, 58, 78, 79, 80, 87, 90, 97, 110, 113, 121, 147, 149, 152, 153, 154, 157, 162, 163, 188, 189, 190, 229, 230, 231, 232, 234, 238, 239, 240, 242, 243, 247, 249, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 286, 361, 363, 365, 367, 374, 376, 378, 384, 385, 386, 391, 393, 396, 403, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441], "seem": [16, 149, 395], "imposs": [16, 52, 307, 525], "trick": [16, 52, 246, 382], "everi": [16, 18, 23, 33, 34, 56, 57, 67, 80, 83, 84, 89, 91, 97, 98, 121, 126, 128, 130, 139, 143, 148, 149, 160, 164, 292, 325, 355, 395], "ih": [16, 28, 29, 50, 70, 152, 230, 231, 232, 233, 238, 239, 241, 242, 243, 254, 255, 257, 259, 261, 264, 268, 269, 270, 271, 272, 273, 275, 277, 278, 363, 365, 367, 369, 374, 376, 379, 391, 393, 403, 407, 414, 421, 422, 424, 426, 428, 430, 433, 437], "iw": [16, 28, 29, 50, 70, 152, 230, 231, 232, 233, 238, 239, 241, 242, 243, 254, 255, 257, 259, 261, 264, 268, 269, 270, 271, 272, 273, 275, 277, 278, 363, 365, 367, 369, 374, 376, 379, 391, 393, 403, 407, 414, 421, 422, 424, 426, 428, 430, 433, 437], "oh": [16, 28, 29, 60, 70, 103, 146, 152, 239, 254, 268, 269, 273, 376, 391, 421, 422, 430, 531], "ow": [16, 28, 29, 60, 70, 103, 146, 152, 239, 254, 268, 269, 273, 376, 391, 421, 422, 430, 531], "frac": [16, 20, 29, 34, 44, 46, 49, 52, 53, 55, 60, 62, 63, 70, 88, 91, 95, 99, 107, 117, 126, 128, 146, 150, 152, 154, 155, 382], "respons": [16, 24, 25, 33, 36, 37, 40, 52, 143, 162, 171, 172, 264, 305, 307, 308, 313, 353, 360, 395, 415, 420, 512, 514, 537, 582], "prepar": [16, 48, 52, 162, 163, 235, 240, 246, 250, 268, 371, 378, 382, 387, 421, 439], "wa": [16, 18, 34, 48, 53, 54, 145, 146, 148, 164, 165, 166, 194, 219, 220, 222, 223, 260, 269, 314, 319, 325, 355, 405, 422], "long": [16, 24, 42, 44, 45, 149, 153, 162, 163, 177, 180, 206, 219, 220, 240, 378], "fit": [16, 161, 166, 274, 432], "everyth": [16, 395, 439], "fine": [16, 18, 421], "mind": 16, "tri": [16, 48], "minim": [16, 18, 23, 25, 32, 40, 47, 161, 164], "yet": [16, 246, 250, 307, 382, 385, 386, 387], "power": [16, 109, 113, 150, 347], "enough": [16, 18, 42, 44, 52, 162, 163, 240, 337, 378], "wai": [16, 17, 18, 19, 26, 28, 29, 33, 36, 47, 49, 52, 125, 143, 144, 156, 159, 164, 206, 254, 289, 316, 339, 391, 420, 421, 439, 461, 523, 539, 541, 546, 563], "essenti": [16, 47, 48, 154, 242, 243, 251, 257, 278, 280, 382], "abil": [16, 30, 31, 33, 143, 395], "That": [16, 29, 136, 145, 148, 164, 395], "equat": [16, 34, 153], "_scale": 16, "standard": [16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 32, 34, 46, 50, 53, 54, 55, 56, 57, 60, 67, 69, 70, 80, 83, 84, 89, 91, 97, 98, 101, 103, 121, 126, 128, 130, 139, 146, 147, 151, 152, 153, 154, 155, 156, 177, 185, 196, 292, 325, 355], "downconvert": 16, "hw": [16, 32, 46, 149, 162, 163, 164, 240, 378], "mxcsr": [16, 49], "regist": [16, 31, 49, 174, 175, 413], "dnnl_primitive_attr_set_scales_mask": [16, 283, 289, 539], "simplest": [16, 289, 382, 439, 531], "sever": [16, 19, 24, 26, 29, 34, 38, 54, 155, 160, 164, 400, 401], "sai": [16, 40], "d_0": [16, 49], "d_": [16, 49], "d_i": [16, 49], "le": 16, "Then": [16, 50, 125, 136, 164, 396, 421, 439], "sum": [16, 18, 20, 22, 24, 26, 29, 46, 50, 52, 53, 55, 56, 60, 62, 95, 114, 115, 117, 120, 146, 150, 151, 152, 153, 155, 165, 166, 171, 172, 205, 206, 271, 272, 287, 289, 312, 315, 349, 360, 420, 426, 428, 438, 531, 537, 582], "limits_": [16, 20, 46, 52, 53, 55, 60, 62, 95, 103, 114, 115, 117, 119, 120, 146, 150, 155, 156, 289, 539], "prod": [16, 119, 233, 241, 289, 369, 379, 539], "wei_plain_f32_md": 16, "hwigo": [16, 198], "wei_scal": [16, 243, 398], "conv_pd": [16, 145, 233, 236, 237, 239, 241, 267, 268, 369, 372, 373, 376, 379, 420, 421, 531], "next": [16, 32, 44, 164, 166, 236, 237, 268, 274, 313, 369, 370, 371, 372, 373, 385, 386, 395, 396, 397, 400, 401, 420, 421, 432, 439, 541], "wei_conv_s8_md": 16, "weights_desc": [16, 229, 234, 235, 236, 237, 239, 247, 254, 260, 261, 263, 265, 267, 268, 270, 281, 282, 283, 295, 297, 302, 306, 310, 361, 370, 371, 372, 373, 376, 384, 391, 405, 407, 411, 416, 420, 421, 424, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "quantization_mask": 16, "wei_s8": [16, 165], "wei_f32": [16, 165, 420, 421], "wei_reorder_pd": 16, "wei_reord": 16, "complementari": 16, "ideal": [16, 52], "first": [16, 27, 28, 29, 30, 31, 34, 40, 41, 44, 49, 50, 52, 56, 70, 125, 145, 153, 162, 163, 164, 165, 181, 198, 240, 242, 248, 249, 257, 278, 307, 319, 339, 378, 382, 385, 386, 390, 395, 396, 397, 398, 400, 401, 402, 421, 439, 483, 525], "src_scale": [16, 235, 371], "src_f32": [16, 165, 420, 421], "src_s8": 16, "dst_scale": [16, 235, 371], "dst_f32": [16, 165, 420, 421], "dst_s8": 16, "declar": [16, 38, 248, 249, 385, 386], "chose": [16, 236, 237, 241, 307, 372, 373, 379], "src_conv_s8_any_md": 16, "batch": [16, 28, 29, 36, 42, 44, 45, 46, 47, 48, 56, 62, 63, 70, 88, 101, 149, 155, 164, 181, 198, 205, 206, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 248, 249, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 287, 306, 307, 312, 327, 360, 361, 364, 365, 367, 369, 370, 371, 372, 373, 374, 376, 379, 385, 386, 391, 393, 395, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 453, 454, 455, 456, 483, 568, 582, 583], "wei_conv_s8_any_md": 16, "dst_conv_s8_any_md": 16, "ditto": 16, "data_mask": 16, "wei_mask": 16, "set_zero_points_mask": [16, 56, 246, 260, 382, 383, 405, 406, 539], "prop_kind": [16, 29, 47, 48, 50, 165, 166, 200, 201, 211, 229, 230, 234, 235, 236, 237, 239, 248, 249, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 279, 281, 283, 289, 290, 295, 297, 298, 301, 302, 304, 305, 309, 310, 317, 318, 320, 321, 349, 361, 363, 370, 371, 372, 373, 376, 385, 386, 390, 391, 393, 395, 396, 403, 407, 409, 411, 414, 416, 420, 421, 422, 424, 430, 432, 433, 435, 439, 441, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "forward_infer": [16, 29, 47, 48, 50, 165, 209, 234, 248, 249, 256, 267, 268, 274, 370, 385, 386, 395, 420, 421, 432, 452, 456, 467, 473, 477, 487, 491, 499, 503, 507, 511, 515, 519, 529, 535, 550, 555, 559, 573], "convolution_direct": [16, 165, 172, 234, 235, 236, 237, 239, 268, 370, 371, 372, 373, 376, 420, 421, 463, 465, 467, 469], "padding_l": [16, 29, 211, 283, 295, 297, 309, 463, 465, 467, 469, 471, 473, 527, 529], "padding_r": [16, 29, 211, 283, 295, 297, 309, 463, 465, 467, 469, 471, 473, 527, 529], "padding_kind": 16, "flow": [16, 252, 253, 389, 390], "respect": [17, 28, 29, 32, 34, 37, 43, 48, 50, 56, 70, 94, 97, 145, 152, 164, 165, 166, 181, 198, 200, 209, 210, 236, 237, 241, 274, 289, 290, 295, 297, 298, 301, 302, 304, 305, 309, 310, 313, 317, 318, 319, 320, 321, 372, 373, 379, 387, 421, 432, 483, 539, 571], "rounding_mod": [17, 32, 289, 349, 539], "sycl": [17, 24, 32, 35, 36, 166, 278, 279, 280, 283, 287, 303, 307, 331, 332, 338, 352, 353, 354, 360, 402, 581], "opencl": [17, 19, 23, 32, 35, 36, 145, 166, 257, 258, 287, 303, 307, 331, 338, 351, 353, 360, 395, 413, 446, 523], "languag": [17, 25, 40, 41, 44, 162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "stochast": [17, 32, 217, 218, 313], "truncat": 17, "dnnl_arg_attr_rounding_se": [17, 283, 313], "interest": [17, 164, 347, 395, 420], "vanish": 17, "gradient": [17, 28, 48, 58, 64, 66, 68, 73, 81, 85, 90, 92, 94, 97, 100, 107, 111, 122, 127, 129, 131, 133, 140, 153, 159, 211, 212, 215, 216, 295, 297, 302, 313, 420, 464, 465, 470, 471, 496, 497], "diffsrc": [17, 20, 28, 29, 34, 46, 50, 53, 55, 61, 71, 74, 96, 104, 146, 147, 152, 154, 155], "diffweight": [17, 28, 29, 50, 72, 75, 147], "independ": [18, 24, 52, 53, 56, 101, 153, 155, 161, 164, 313], "core": [18, 38, 44, 173, 176, 413, 421], "system": [18, 19, 23, 24, 29, 32, 36, 51, 52, 54, 144, 145, 149, 153, 154, 164, 165, 166, 299], "parallel": [18, 42, 44, 161, 219, 220, 325, 564], "reduct": [18, 24, 25, 40, 114, 115, 116, 117, 118, 119, 120, 171, 172, 205, 206, 211, 212, 287, 312, 349, 360, 427, 537, 542, 582], "privat": [18, 157, 219, 220, 370], "matrix": [18, 28, 29, 30, 32, 42, 44, 45, 52, 101, 153, 154, 164, 205, 206, 244, 245, 246, 247, 248, 249, 250, 260, 266, 282, 287, 292, 312, 325, 355, 380, 381, 382, 383, 384, 387, 405, 418, 420, 443, 520, 521, 582, 583], "im2col": 18, "longer": [18, 42, 212], "complet": [18, 21, 25, 36, 142, 146, 149, 165, 256, 267, 268, 307, 314, 319, 340, 390, 395, 396, 420, 439, 523], "confus": [18, 48], "workspac": [18, 20, 28, 29, 55, 146, 153, 166, 200, 201, 211, 212, 229, 230, 233, 236, 237, 241, 263, 264, 265, 269, 274, 281, 290, 313, 361, 363, 369, 370, 372, 373, 379, 411, 414, 416, 422, 432, 441, 450, 452, 454, 456, 485, 487, 489, 491, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 527, 529, 542, 571, 573], "space": [18, 19, 24, 162, 163, 164, 165, 166, 233, 240, 241, 296, 337, 369, 378, 379, 523], "direct": [18, 28, 41, 42, 44, 45, 48, 59, 77, 87, 102, 105, 108, 135, 138, 153, 160, 171, 172, 211, 212, 213, 214, 229, 263, 265, 274, 281, 283, 307, 318, 361, 411, 416, 432, 441, 450, 452, 489, 491, 492, 505, 507, 509, 511, 517, 519, 523, 537, 541, 542, 551, 571, 573], "too": [18, 250, 319, 387], "few": [18, 29, 42, 45, 47, 50, 153, 313, 372, 373, 379], "proport": 18, "imag": [18, 28, 40, 47, 60, 146, 164, 256, 395], "diff_weight": [18, 28, 48, 72, 75, 215, 216, 236, 237, 274, 310, 372, 373, 432], "group": [18, 28, 37, 40, 45, 49, 71, 72, 73, 74, 75, 78, 88, 149, 154, 164, 166, 181, 188, 189, 198, 205, 206, 211, 212, 239, 242, 243, 257, 259, 275, 278, 282, 283, 287, 289, 307, 312, 320, 360, 376, 377, 397, 398, 400, 401, 404, 433, 443, 484, 485, 486, 487, 539, 542, 553, 555, 582], "upper": [18, 28, 44, 67, 68, 148, 164, 181, 319], "total": [18, 71, 144, 149, 274, 432], "By": [18, 19, 24, 32, 36, 37, 38, 47, 335], "contrast": 18, "littl": [18, 246, 382], "sizeof": [18, 36, 164, 177, 180, 206, 233, 241, 252, 258, 268, 369, 379, 389, 396], "summand": 18, "scratchpad_mod": [18, 24, 289, 349, 539], "worri": 18, "onednn_enable_concurrent_exec": [18, 24], "cmake": [18, 23, 24, 30, 31, 36, 38, 39, 145, 148, 149, 160, 165], "off": [18, 24, 30, 31, 38, 39, 148, 149, 162, 163, 165, 219, 220, 240, 244, 245, 256, 319, 378, 380, 381, 395], "across": [18, 24, 29, 48, 49, 53, 55, 56, 153, 171, 172, 274, 305, 432], "level": [18, 36, 37, 38, 39, 145, 149, 161, 165, 283, 307, 319, 349], "freed": 18, "referenc": 18, "segment": 18, "fault": 18, "you": [18, 19, 20, 23, 24, 29, 33, 37, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 53, 54, 56, 73, 149, 153, 155, 160, 162, 163, 164, 212, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 396, 400, 401, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "ON": [18, 23, 24, 30, 31, 36, 38, 39, 148, 149, 165, 219, 220], "larger": [18, 29, 36, 219, 220, 274, 432], "concurr": [18, 33, 36, 143, 219, 220, 311, 325, 334], "suffici": 18, "dnnl_arg_scratchpad": [18, 283, 313], "reus": [18, 19, 29, 47, 48, 56, 153, 162, 163, 164, 240, 274, 378, 432], "make": [18, 19, 23, 31, 39, 48, 52, 54, 56, 78, 101, 142, 144, 162, 163, 164, 181, 198, 212, 240, 298, 307, 337, 378, 525, 530], "safe": [18, 19, 34, 144, 145, 164, 219, 220, 256, 311, 334, 335, 395, 523], "good": [18, 47, 56, 164, 382, 395], "side": [18, 29, 101, 162, 163, 240, 307, 378, 523], "dnnl_primitive_attr_set_scratchpad_mod": [18, 283, 289], "set_scratchpad_mod": [18, 539], "highlight": [18, 48], "consum": [18, 36, 37, 40, 161, 274, 307, 432], "due": [18, 28, 48, 52, 165, 166, 194, 222, 223, 250, 382, 387, 525], "print": [18, 36, 38, 165, 166], "much": [18, 19, 52, 161, 162, 163, 165, 240, 250, 378, 387, 396, 439], "cout": [18, 234, 242, 243, 248, 249, 251, 256, 257, 258, 268, 278, 279, 280, 395, 396, 439], "query_s64": [18, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "memory_consumption_s64": [18, 211], "endl": [18, 234, 242, 243, 248, 249, 251, 256, 257, 258, 278, 279, 280, 395, 396, 439], "visibl": 18, "zero_md": 18, "scratchpad_desc": [18, 267, 420, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_scratchpad_mod": [18, 539], "custom": [18, 19, 23, 24, 33, 36, 37, 161, 162, 164], "scratchpad_md": [18, 211], "prim": [18, 165, 233, 241, 268, 369, 379, 421], "get_siz": [18, 36, 48, 164, 247, 248, 249, 268, 307, 353, 384, 385, 386, 523, 525], "scratchpad_ptr": [18, 283, 327], "user_memory_manag": 18, "outlin": [19, 48, 144], "program": [19, 21, 23, 29, 33, 37, 38, 50, 52, 143, 153, 252, 253, 256, 258, 284, 347, 387, 389, 390, 395, 396, 421, 439], "present": [19, 101, 145, 153, 162, 163, 240, 378, 420], "kei": [19, 20, 22, 26, 29, 37, 40, 42, 44, 46, 48, 50, 53, 54, 56, 145, 151, 153, 154, 155, 156, 254, 361, 362, 363, 364, 365, 366, 367, 369, 370, 374, 375, 376, 377, 391, 392, 395, 397, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 416, 417, 418, 419, 428, 429, 433, 434, 435, 436, 437, 438, 441, 442], "discuss": [19, 47, 48, 144, 307, 395], "essenc": 19, "process": [19, 27, 40, 43, 47, 48, 52, 144, 148, 149, 153, 162, 163, 164, 166, 240, 274, 327, 378, 382, 420, 432, 568], "relationship": [19, 37, 242, 243, 278, 283, 397, 400, 401], "entiti": [19, 37, 313], "briefli": 19, "figur": [19, 153], "relev": [19, 48, 274, 421, 432], "built": [19, 21, 23, 24, 36, 38, 54, 157, 160, 165, 325, 355, 420, 421], "notion": [19, 22, 26, 48, 150, 156, 420], "encapsul": [19, 308, 322, 340, 341, 345, 353, 390, 395, 396, 439, 523], "lstm": [19, 52, 171, 172, 181, 198, 249, 274, 313, 318, 360, 386, 417, 432, 516, 517, 518, 519], "addition": [19, 37, 45, 52, 56, 101, 144, 159, 162, 163, 236, 240, 372, 378, 420, 421], "complex": [19, 29, 38], "pure": 19, "state": [19, 28, 36, 48, 52, 153, 162, 163, 181, 198, 240, 249, 263, 274, 281, 307, 313, 314, 318, 337, 378, 385, 386, 411, 413, 432, 441, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 568, 571, 573], "One": [19, 33, 42, 44, 123, 159, 164, 166], "immut": [19, 37], "approach": [19, 38, 48, 144, 164, 307, 371, 382, 420], "tailor": [19, 36], "amort": 19, "mutabl": [19, 37, 339], "card": [19, 299], "transfer": [19, 246, 299, 382], "ti": [19, 322, 390, 395, 396, 439], "command": [19, 23, 24, 54, 144, 149, 308, 324, 396, 421], "queue": [19, 33, 36, 143, 278, 279, 280, 283, 308, 324, 353, 354, 396, 400, 401, 402, 439], "map": [19, 20, 22, 26, 29, 33, 34, 42, 46, 47, 50, 53, 55, 56, 76, 78, 79, 112, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 160, 164, 166, 242, 243, 251, 256, 257, 278, 280, 307, 319, 351, 352, 353, 354, 382, 390, 395, 396, 461, 523, 537, 541, 545, 546, 563], "offset": [19, 41, 76, 78, 79, 112, 164, 165, 166, 211, 212, 246, 256, 274, 283, 292, 307, 325, 327, 355, 382, 395, 432, 523, 525, 568], "conceptu": [19, 52], "expos": [19, 20, 32, 46, 53, 144, 161], "flexibl": [19, 38, 159, 161, 164, 387], "dnnl_memory_desc_t": [19, 160, 164, 181, 233, 241, 252, 283, 307, 313, 369, 379, 389, 525], "variou": [19, 145, 161, 307, 313], "via": [19, 20, 22, 24, 30, 31, 32, 34, 36, 41, 42, 43, 44, 45, 79, 136, 144, 145, 146, 148, 164, 165, 232, 268, 274, 307, 313, 319, 337, 342, 353, 354, 363, 364, 367, 368, 371, 390, 395, 396, 420, 432, 439, 523, 531, 537, 539, 545], "instanti": 19, "iter": [19, 148, 153, 162, 163, 187, 195, 234, 236, 237, 240, 241, 248, 249, 274, 372, 373, 378, 379, 385, 386, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 541, 551, 571, 573], "prefer": [19, 25, 31, 174, 175, 236, 237, 241, 274, 372, 373, 379, 432], "concret": [19, 242, 243, 251, 257, 278, 280, 397, 400, 401], "embodi": 19, "There": [19, 20, 22, 25, 26, 29, 34, 36, 44, 46, 47, 49, 50, 55, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 160, 162, 163, 240, 274, 289, 291, 307, 378, 390, 396, 421, 432, 439, 539, 542], "extract": [19, 29, 396, 439], "submemory_desc": [19, 248, 249, 274, 385, 386, 432, 525], "src_desc": [19, 47, 234, 235, 236, 237, 239, 247, 254, 267, 268, 283, 290, 294, 295, 297, 298, 301, 302, 304, 305, 306, 309, 310, 315, 316, 317, 320, 321, 323, 370, 371, 372, 373, 376, 384, 391, 420, 421, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "action": [19, 48], "placehold": [19, 29, 50, 56, 153, 198, 267, 420], "obtain": [19, 48, 49, 52, 145, 162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 307, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 397, 398, 400, 401, 403, 405, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 546], "high": [19, 25, 49, 165, 295, 297, 309, 463, 465, 467, 469, 471, 473, 527, 529], "instead": [19, 22, 23, 24, 28, 29, 34, 40, 50, 52, 54, 56, 146, 150, 151, 152, 164, 274, 289, 292, 318, 325, 327, 355, 370, 395, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 531, 568, 571, 573], "individu": [19, 32, 34, 36, 144, 292, 296, 325, 355, 370], "transpar": [19, 38], "effort": 19, "backend": [19, 32, 36, 38, 123, 165, 166, 397, 398, 400, 401], "awar": [19, 31, 395], "scalabl": [19, 52, 173, 176], "ukernel": [19, 54, 161, 162, 163, 240, 283, 287, 347, 349, 459, 566], "sequenti": [19, 24, 36, 161, 369, 370], "compos": [19, 36, 40, 161], "full": [19, 25, 54, 149, 160, 161, 165, 201, 396, 439], "show": [20, 29, 46, 49, 50, 53, 146, 147, 152, 159, 164, 165, 387, 395], "straightforward": [20, 29, 46, 53, 146, 147, 152, 395], "gamma": [20, 29, 46, 53, 62, 63, 64, 88, 95, 96, 290, 301, 304], "mu": [20, 46, 53, 62, 63, 95, 96], "sqrt": [20, 34, 40, 44, 46, 53, 63, 88, 95, 115, 133, 190, 246, 250, 286, 382, 387], "sigma": [20, 46, 53, 62, 63, 64, 95, 96, 153], "varepsilon": [20, 46, 53, 63], "dnnl_use_scal": [20, 46, 53, 200, 201], "dnnl_use_shift": [20, 46, 53, 200, 201], "dnnl_use_global_stat": [20, 46, 53, 200, 201], "constant": [20, 44, 46, 47, 53, 63, 88, 95, 96, 97, 136, 145, 187, 195, 201, 212, 243, 284, 287, 289, 307, 313, 319, 322, 326, 327, 331, 332, 333, 337, 341, 342, 345, 398, 525, 539, 568], "stabil": [20, 34, 46, 53, 63, 88, 95, 96], "nhw": [20, 62], "learnabl": [20, 28, 46, 48, 53, 95, 96], "dnnl_fuse_norm_relu": [20, 200, 201], "dnnl_fuse_norm_add_relu": [20, 200, 201], "popul": [20, 46, 153], "sampl": [20, 46, 49, 146, 149, 157, 396, 439], "unbias": [20, 46], "hat": [20, 46], "becom": [20, 42, 44, 46, 53, 160, 165, 181, 198, 421], "dnnl_forward_train": [20, 29, 34, 46, 53, 146, 147, 152, 154, 155, 209, 210, 290, 295, 297, 298, 301, 302, 304, 305, 309, 310, 317, 318, 320, 321], "dnnl_forward_infer": [20, 29, 34, 46, 53, 146, 147, 152, 154, 155, 209, 210, 290, 295, 297, 298, 301, 302, 304, 305, 309, 310, 317, 318, 320, 321], "diffgamma": [20, 46, 53, 96], "diffbeta": [20, 46, 53, 96], "diffdst": [20, 28, 29, 34, 46, 50, 53, 55, 61, 66, 71, 72, 74, 75, 96, 104, 146, 147, 152, 154, 155], "mark": [20, 40, 46, 52, 53, 96, 164], "asterisk": [20, 46, 53, 96], "clariti": [20, 46, 53], "summari": [20, 46, 53, 149, 420], "shown": [20, 25, 46, 48, 52, 53, 89, 90, 144, 149, 153, 164, 395, 421], "dnnl_backward": [20, 46, 53, 201, 209, 210, 290, 301, 304, 318], "dnnl_backward_data": [20, 46, 53, 201, 209, 210, 290, 301, 304], "dnnl_normalization_flags_non": [20, 46, 53, 200, 201], "Not": [20, 25, 46, 53, 149], "src_1": [20, 22, 59, 77, 87, 102, 105, 108, 125, 135, 138, 231, 365], "diffsrc_1": 20, "tabl": [20, 22, 25, 26, 28, 29, 32, 33, 34, 46, 50, 53, 55, 56, 76, 112, 143, 146, 147, 150, 151, 152, 153, 154, 155, 156, 212], "dnnl_arg_scal": [20, 46, 53, 230, 259, 262, 283, 313, 363, 403, 409], "dnnl_arg_shift": [20, 46, 53, 230, 259, 262, 283, 313, 363, 403, 409], "dnnl_arg_mean": [20, 46, 53, 230, 259, 262, 283, 313, 363, 403, 409], "dnnl_arg_vari": [20, 46, 53, 230, 259, 262, 283, 313, 363, 403, 409], "dnnl_arg_workspac": [20, 48, 55, 146, 229, 230, 233, 236, 237, 241, 263, 264, 265, 269, 274, 281, 283, 313, 361, 363, 369, 372, 373, 379, 411, 414, 416, 422, 432, 441], "dnnl_arg_diff_dst": [20, 29, 34, 46, 50, 53, 55, 146, 147, 152, 154, 155, 236, 237, 241, 283, 313, 372, 373, 379], "dnnl_arg_diff_src": [20, 29, 34, 46, 50, 53, 55, 146, 147, 152, 154, 155, 236, 237, 241, 283, 313, 372, 373, 379], "dnnl_arg_diff_src_1": [20, 283, 313], "dnnl_arg_diff_scal": [20, 46, 53, 283, 313], "dnnl_arg_diff_shift": [20, 46, 53, 283, 313], "flavor": [20, 46, 53, 327, 395, 568], "batch_normalization_forward": [20, 230, 290, 349, 363, 454, 537], "OR": [20, 46, 53, 162, 163, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "latter": [20, 24, 28, 33, 46, 48, 52, 53, 54, 143, 159, 307, 369, 370, 541], "overwritten": [20, 22, 34, 46, 53, 155], "dst_desc": [20, 47, 234, 235, 236, 237, 238, 239, 247, 254, 267, 268, 277, 283, 290, 291, 294, 295, 297, 298, 301, 302, 304, 305, 306, 309, 310, 315, 316, 317, 320, 321, 323, 370, 372, 373, 374, 376, 384, 391, 420, 421, 437, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "diff_dst_desc": [20, 236, 237, 283, 290, 295, 297, 298, 301, 302, 304, 305, 309, 310, 317, 320, 321, 372, 373, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "even": [20, 32, 48, 52, 141, 144, 153, 164, 298, 395], "combin": [20, 22, 29, 34, 36, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 149, 151, 152, 153, 154, 155, 162, 165, 166, 224, 307, 390, 395, 525, 530], "scaleshift": [20, 46], "restrict": [20, 22, 29, 30, 31, 34, 46, 50, 53, 55, 56, 65, 146, 150, 152, 153, 154, 155, 162, 166, 296, 319], "1d": [20, 29, 33, 46, 50, 53, 55, 65, 79, 88, 93, 94, 95, 96, 101, 110, 111, 114, 115, 116, 117, 118, 119, 120, 146, 152, 164, 166, 181, 198, 295, 297, 317, 395], "dnnl_x": [20, 46, 181, 233, 241, 369, 379], "dnnl_a": [20, 46, 181, 198], "sp_n": [20, 46], "sp_0": [20, 46], "0d": [20, 55, 395], "nc": [20, 50, 53, 198, 234, 244, 245, 261, 276, 380, 381, 407, 435], "dnnl_nc": [20, 46, 50, 53, 181], "dnnl_ab": [20, 46, 53, 181, 198, 307], "ncw": [20, 46, 146, 198], "dnnl_ncw": [20, 29, 46, 50, 146, 181], "dnnl_abc": [20, 46, 53, 146, 181, 198], "dnnl_nwc": [20, 29, 46, 50, 146, 181], "dnnl_acb": [20, 46, 146, 181, 198], "dnnl_nchw": [20, 26, 29, 46, 50, 55, 146, 154, 164, 181, 233, 241, 252, 307, 369, 379, 389], "dnnl_abcd": [20, 46, 53, 55, 146, 154, 181, 198], "dnnl_nhwc": [20, 26, 29, 46, 50, 55, 146, 154, 164, 181, 307], "dnnl_acdb": [20, 46, 55, 146, 154, 181, 198], "3d": [20, 29, 46, 50, 53, 55, 56, 95, 96, 146, 147, 152, 154, 162, 163, 164, 166, 181, 198, 240, 295, 297, 306, 309, 317, 378, 395, 463, 465, 467, 469, 471, 473, 527, 529], "ncdhw": [20, 46, 146, 154, 181, 198, 259, 403], "dnnl_ncdhw": [20, 29, 46, 50, 146, 154, 181], "dnnl_ndhwc": [20, 29, 46, 50, 146, 154, 181], "dnnl_acdeb": [20, 46, 146, 154, 181, 198], "come": [20, 34, 48, 49, 54, 55, 144, 146, 154, 181, 198, 219, 220, 260, 274, 282, 395, 405, 432, 443], "intens": [20, 32, 47, 55, 144, 146, 154, 307, 395, 420, 421], "chain": [20, 29, 40, 48, 49, 50, 52, 162, 163, 240, 289, 327, 378, 421, 530], "descript": [20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 34, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 125, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 140, 146, 148, 149, 150, 152, 153, 155, 162, 164, 165, 166, 198, 296, 307, 345, 385, 386, 395, 420, 421], "dnnl_eltwise_relu": [20, 34, 171, 172, 233, 241, 252, 318, 369, 379, 389], "correctli": [20, 29, 149, 319, 395, 420], "highli": [20, 26, 34, 46, 53, 55, 156, 387], "whenev": [20, 22, 26, 34, 46, 48, 53, 150, 155, 156, 164, 289, 395], "caveat": [20, 34, 46, 53, 156], "statist": [20, 53, 165, 181, 198, 200, 201, 382, 501, 503], "calcul": [20, 36, 41, 42, 44, 47, 49, 60, 61, 62, 64, 68, 70, 71, 72, 73, 74, 75, 81, 88, 93, 94, 99, 100, 103, 104, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 129, 133, 136, 140, 146, 147, 165, 171, 172, 249, 339, 371], "pleas": [20, 24, 47, 56, 123, 149, 165, 235, 236, 249, 307, 335, 339, 372, 386, 420], "review": [20, 420], "demonstr": [20, 22, 26, 29, 34, 36, 41, 42, 44, 46, 47, 50, 53, 55, 56, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 162, 163, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 267, 268, 270, 274, 278, 280, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444], "benchdnn": [21, 24, 36, 144, 149, 165], "readm": 21, "overlin": [22, 26, 29, 34, 59, 69, 77, 102, 105, 108, 138, 151, 154, 155, 156], "src_0": [22, 59, 77, 87, 102, 105, 108, 125, 135, 138, 156, 231, 365], "mathbin": [22, 59, 77], "subtract": [22, 40, 52, 135, 190, 286, 289, 531], "divis": [22, 28, 62, 63, 64, 70, 71, 72, 73, 74, 75, 77, 88, 151, 232, 282, 367, 443], "div": [22, 52, 171, 172], "greater": [22, 48, 52, 67, 68, 87, 152, 171, 172], "geq": [22, 29, 34, 152, 371], "neq": [22, 113], "max": [22, 29, 32, 34, 36, 47, 48, 49, 52, 56, 67, 68, 89, 91, 102, 103, 116, 146, 150, 151, 155, 162, 163, 171, 172, 188, 189, 240, 246, 250, 292, 309, 315, 325, 355, 378, 382, 387, 396, 439], "min": [22, 34, 52, 67, 68, 89, 91, 105, 118, 147, 149, 150, 157, 171, 172, 188, 189, 246, 315, 382], "condit": [22, 29, 34, 47, 125, 153, 162, 163, 194, 222, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 327, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "select": [22, 23, 24, 36, 38, 40, 44, 49, 166, 171, 172, 180, 181, 190, 197, 198, 286, 326, 421, 567], "third": [22, 36, 125, 395], "src_2": 22, "dnnl_arg_src_0": [22, 231, 232, 283, 313, 365, 367], "dnnl_arg_src_2": [22, 283, 313], "text": [22, 29, 34, 46, 50, 53, 56, 57, 58, 80, 87, 89, 90, 97, 110, 113, 121, 146, 150, 152, 155, 164, 439], "scale0": 22, "dnnl_arg_attr_scal": [22, 29, 50, 53, 56, 151, 155, 235, 246, 250, 260, 272, 282, 283, 289, 313, 371, 382, 387, 405, 428, 443, 539], "scale1": 22, "semant": [22, 28, 36, 43, 52, 56, 101, 110, 111, 143, 147, 289, 319, 395, 492, 531, 574], "recommend": [22, 26, 40, 47, 48, 52, 56, 144, 147, 150, 156, 165, 420, 421], "match": [22, 26, 37, 47, 48, 59, 69, 77, 78, 87, 93, 101, 102, 105, 108, 125, 138, 145, 147, 151, 156, 165, 166, 188, 270, 307, 353, 354, 421, 424, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 537, 544, 545, 546, 548, 550, 553, 555, 557, 559, 563, 571, 573], "syntax": [22, 47], "d": [22, 28, 29, 34, 42, 44, 45, 50, 51, 55, 56, 65, 101, 114, 115, 116, 117, 118, 119, 120, 146, 147, 162, 163, 164, 166, 181, 198, 229, 240, 246, 252, 263, 265, 274, 281, 289, 307, 326, 327, 361, 378, 382, 389, 395, 411, 416, 432, 441, 539, 567, 568], "nxcxdxhxw": 22, "pytorch": [22, 111], "explicitli": [22, 24, 25, 29, 38, 40, 43, 44, 144, 150, 153, 337, 339, 395], "deriv": [22, 26, 146, 150, 156, 200, 201, 289, 304, 461, 531, 563], "ones": [22, 52, 152, 160, 164, 229, 239, 242, 243, 251, 254, 257, 263, 265, 278, 280, 281, 307, 361, 376, 387, 391, 411, 416, 441, 525], "unavoid": 22, "correct": [22, 24, 164, 192, 193, 260, 390, 395, 397, 398, 399, 400, 401, 402, 405], "issu": [22, 33, 48, 52, 143, 149, 192, 193, 250, 387], "arbitrari": [22, 26, 34, 36, 53, 67, 68, 80, 81, 88, 89, 90, 95, 96, 97, 99, 100, 109, 128, 129, 130, 131, 142, 147, 150, 151, 152, 154, 155, 156, 164, 249, 250, 294, 371, 386, 387, 405], "6": [22, 26, 29, 34, 36, 49, 53, 56, 91, 107, 149, 150, 151, 154, 155, 156, 162, 163, 164, 177, 223, 229, 232, 234, 240, 242, 243, 244, 245, 257, 259, 265, 278, 361, 367, 378, 380, 381, 397, 398, 400, 401, 403, 416], "fewer": [22, 26, 34, 43, 53, 150, 151, 154, 155, 156], "bnorm": [22, 35, 232, 360, 368], "postop": [22, 166, 368, 371], "clone": [23, 289, 307, 313, 461, 541, 546, 563], "repositori": [23, 24], "git": [23, 145, 165, 319, 420, 574], "http": [23, 41, 42, 44, 45, 54, 162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "github": [23, 24, 41, 44, 246, 382], "com": [23, 54], "ensur": [23, 24, 25, 30, 48, 87, 143, 242, 243, 257, 278, 307, 396, 420, 439, 525], "cmake_install_prefix": 23, "locat": [23, 24, 48, 54, 164, 307, 316, 319, 345, 542, 546], "cmake_build_typ": 23, "releas": [23, 24, 143, 162, 163, 240, 319, 327, 335, 340, 378, 568], "relwithdebinfo": 23, "cmake_prefix_path": 23, "directori": [23, 36, 54, 149, 319], "search": 23, "makefil": 23, "mkdir": 23, "cd": 23, "uncom": 23, "line": [23, 144, 149, 164, 165, 421], "export": [23, 27, 144, 421], "cc": 23, "cxx": 23, "icx": [23, 54], "icpx": [23, 54], "j": [23, 55, 78, 99, 128, 149, 157, 234, 248, 249, 307, 370, 525], "setvar": 23, "sh": [23, 28, 29, 60, 70, 71, 103, 146, 239, 254, 269, 376, 391, 422], "script": [23, 160], "folder": [23, 24, 38], "your": [23, 47, 48, 54, 149, 421], "opt": [23, 24, 155], "ddnnl_cpu_runtim": 23, "ddnnl_gpu_runtim": 23, "open": [23, 24, 41, 347], "driver": [23, 24], "openclroot": 23, "path": [23, 24, 36, 38, 54, 159, 319], "gnu": [23, 24], "dcmake_system_nam": 23, "dcmake_system_processor": 23, "dcmake_library_path": 23, "usr": 23, "lib": [23, 54], "acl_root_dir": [23, 24], "ddnnl_aarch64_use_acl": 23, "studio": [23, 54, 144, 160], "solut": [23, 54, 160, 164], "16": [23, 25, 28, 32, 45, 48, 149, 159, 162, 163, 165, 177, 181, 185, 196, 240, 252, 253, 307, 378, 389, 390], "2019": [23, 52, 236, 246, 250, 252, 253, 256, 258, 260, 267, 268, 279, 372, 382, 387, 389, 405], "config": [23, 38, 160], "multi": [23, 37, 38, 40, 42, 44, 59, 77, 87, 102, 105, 108, 135, 138, 144, 345], "rerun": 23, "scratch": [23, 212], "file": [23, 24, 36, 38, 39, 51, 149, 160, 162, 163, 164, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 319, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443], "sln": [23, 160], "project": [23, 24, 25, 160, 181, 198, 289, 313, 318, 517, 519, 539, 551], "bat": 23, "x86": [23, 51, 162], "commmand": 23, "prompt": 23, "ninja": 23, "v3": [23, 52, 165, 289], "23": [23, 159], "unit": [23, 24, 27, 37, 41, 153, 155, 162, 163, 171, 172, 240, 298, 342, 378, 396, 413, 439], "test": [23, 30, 36, 149, 157, 250, 307, 387, 523], "ctest": 23, "conda": 23, "env": 23, "doc": [23, 47, 164], "yml": 23, "header": [23, 25, 32, 33, 38, 143, 149, 160, 165, 242, 243, 251, 257, 278, 280], "administr": 23, "privileg": 23, "sudo": 23, "mac": 23, "bold": [24, 30, 31, 38, 39, 148, 165], "onednn_library_typ": 24, "onednn_cpu_runtim": 24, "none": [24, 34, 56, 59, 60, 61, 70, 71, 72, 73, 74, 75, 77, 87, 93, 94, 102, 103, 104, 105, 108, 125, 135, 138, 165, 188, 189, 200, 420], "omp": [24, 149], "seq": 24, "onednn_gpu_runtim": 24, "ocl": [24, 258, 400], "offload": 24, "onednn_build_doc": 24, "onednn_build_exampl": 24, "onednn_build_test": 24, "onednn_build_graph": [24, 39], "onednn_enable_graph_dump": [24, 39], "dump": [24, 51, 149, 284, 319], "artifact": [24, 39], "onednn_experimental_graph_compiler_backend": [24, 38], "onednn_arch_opt_flag": 24, "warn": [24, 38, 149, 165, 250, 387], "onednn_enable_jit_profil": [24, 149], "profil": [24, 35, 36, 166, 207, 208, 268, 287, 319, 347, 360], "onednn_enable_itt_task": [24, 149], "onednn_enable_primitive_cach": [24, 148], "onednn_enable_max_cpu_isa": [24, 30], "onednn_enable_cpu_isa_hint": [24, 31], "isa": [24, 30, 32, 36, 37, 51, 52, 165, 166, 173, 174, 175, 176, 283, 319, 347, 349, 420, 445], "workload": [24, 29, 47, 153, 420, 421], "primitive_nam": 24, "cpu_isa_nam": 24, "gpu_isa_nam": 24, "isa_nam": 24, "onednn_experiment": [24, 36], "onednn_verbos": [24, 36, 319, 420, 421], "onednn_dev_mod": [24, 165], "trace": [24, 165, 421], "debuginfo": [24, 165], "log": [24, 34, 36, 38, 40, 99, 165, 190, 250, 286, 387], "develop": [24, 25, 32, 36, 38, 51, 52, 165, 235, 236, 247, 249, 290, 291, 294, 295, 298, 301, 302, 304, 305, 306, 308, 309, 310, 315, 316, 317, 318, 320, 321, 323, 324, 372, 384, 386], "onednn_aarch64_use_acl": 24, "onednn_blas_vendor": 24, "armpl": 24, "acceler": [24, 32, 48, 55, 161], "extern": 24, "link": [24, 51, 70, 71, 72, 73, 74, 75, 347], "onednn_gpu_vendor": 24, "nvidia": 24, "amd": 24, "dnnl_gpu_runtim": [24, 160], "onednn_dpcpp_host_compil": 24, "clang": [24, 54, 144, 244, 245, 380, 381], "onednn_library_nam": 24, "smoke": [24, 260, 405], "ci": 24, "nightli": 24, "modifier_nam": 24, "coverag": [24, 25, 36], "counterpart": [24, 52, 160, 307, 525], "prefix": [24, 319], "sub": [24, 37, 144, 153, 160, 164, 171, 172, 274, 307, 385, 420, 432], "intend": [24, 29, 159, 165, 308, 347, 353], "subject": 24, "oneapi": [24, 41, 44, 54, 157, 160, 162, 163, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 287, 361, 363, 365, 369, 372, 373, 374, 376, 378, 379, 382, 384, 387, 389, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 414, 416, 418, 422, 426, 428, 430, 432, 433, 435, 437, 439, 443], "dpc": [24, 324, 360, 439, 446], "main": [24, 36, 159, 161, 162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 307, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443, 531], "discov": 24, "absolut": [24, 57, 114], "cmake_cxx_compil": 24, "window": [24, 48, 52, 60, 61, 103, 104, 146, 165, 319, 413], "linux": [24, 144, 165, 319], "7": [24, 149, 157, 159, 162, 163, 164, 177, 185, 196, 223, 240, 242, 243, 244, 245, 252, 253, 257, 278, 378, 380, 381, 385, 386, 389, 397, 398, 400, 401, 421], "4": [24, 30, 32, 34, 36, 41, 52, 56, 62, 63, 64, 96, 107, 125, 144, 149, 162, 163, 164, 171, 172, 173, 176, 177, 181, 185, 196, 223, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 244, 245, 248, 249, 251, 252, 254, 257, 258, 265, 268, 269, 274, 275, 278, 279, 280, 281, 283, 307, 339, 367, 369, 372, 373, 376, 378, 379, 380, 381, 389, 391, 396, 397, 398, 400, 401, 416, 421, 422, 432, 433, 439, 441], "gcc": 24, "interoper": [24, 36, 287, 331, 351, 352, 353, 354, 355, 360, 396, 400, 401, 439, 446], "8": [24, 30, 32, 43, 49, 52, 54, 144, 149, 159, 162, 163, 173, 176, 177, 181, 185, 196, 198, 223, 232, 233, 235, 240, 241, 242, 243, 244, 245, 257, 278, 289, 292, 325, 355, 367, 369, 371, 378, 379, 380, 381, 397, 398, 400, 401, 420, 539], "disk": 24, "occupi": [24, 159, 307, 523], "app": 24, "remov": [24, 114, 115, 116, 117, 118, 119, 120, 304, 307, 319, 335, 525], "batch_norm": [24, 205, 360], "concat": [24, 166, 190, 205, 206, 286, 287, 307, 312, 349, 360, 375, 420, 537, 582], "deconvolut": [24, 171, 172, 205, 206, 287, 312, 392, 468, 469, 470, 471, 472, 473], "inner_product": [24, 205, 234, 360], "layer_norm": [24, 205, 360], "lrn": [24, 171, 172, 205, 206, 211, 212, 233, 234, 236, 237, 241, 287, 312, 360, 369, 372, 373, 379, 420, 512, 513, 514, 515, 542, 582], "pool": [24, 32, 48, 52, 60, 61, 103, 104, 171, 172, 205, 206, 211, 212, 233, 234, 236, 237, 241, 267, 287, 312, 360, 369, 370, 372, 373, 379, 423, 526, 527, 528, 529, 542, 582], "prelu": [24, 29, 50, 56, 97, 111, 190, 205, 206, 286, 287, 289, 312, 360, 424, 425, 531, 532, 533, 534, 535, 582], "resampl": [24, 171, 172, 205, 206, 211, 212, 287, 312, 360, 431, 542, 547, 548, 549, 550, 582], "rnn": [24, 26, 35, 47, 48, 52, 53, 166, 171, 172, 181, 198, 205, 206, 211, 212, 213, 214, 215, 216, 229, 248, 249, 263, 265, 274, 281, 287, 289, 307, 312, 313, 360, 362, 412, 417, 420, 442, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 539, 542, 551, 570, 571, 572, 573, 582], "sdpa": [24, 40, 42], "shuffl": [24, 166, 205, 206, 211, 212, 287, 312, 360, 420, 434, 552, 553, 554, 555, 582], "softmax": [24, 40, 42, 44, 48, 99, 129, 166, 171, 172, 190, 205, 206, 248, 249, 286, 287, 312, 360, 420, 436, 556, 557, 558, 559, 582], "attempt": [24, 313, 479, 492, 523, 537, 561], "unimpl": [24, 149, 194, 211, 222, 319], "style": 24, "semicolon": 24, "delimit": [24, 149], "donednn_enable_primit": 24, "sse41": [24, 30, 31, 173, 319], "avx2": [24, 30, 32, 51, 173, 176, 319, 420], "avx512": [24, 32, 52, 164], "amx": [24, 30, 32, 36, 153, 162, 163, 173, 176, 240, 378], "linearli": 24, "complianc": [24, 162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "donednn_enable_primitive_cpu_isa": 24, "gen9": [24, 51], "gen11": 24, "xelp": 24, "xehp": 24, "xehpg": 24, "xehpc": 24, "xe2": 24, "xe3": 24, "donednn_enable_primitive_gpu_isa": 24, "x64": [24, 32, 149, 165], "interfac": [24, 149, 157, 325, 332, 339, 340, 344, 355, 396, 439, 564], "leav": [24, 44, 236, 237, 372, 373, 387], "donednn_enable_gemm_kernels_isa": 24, "no_corr": 24, "add_bitwis": 24, "short": [24, 153, 160, 420], "verifi": [24, 145, 461, 541, 546, 563], "largest": 24, "unmodifi": 24, "processor": [24, 29, 30, 41, 42, 44, 45, 51, 144, 173, 176, 258, 347, 396, 439], "jit": [24, 30, 31, 47, 54, 148, 149, 162, 163, 165, 240, 319, 378, 420, 421, 445], "detect": [24, 30, 38, 146, 289, 539], "r": [24, 28, 29, 42, 44, 45, 49, 51, 52, 56, 69, 76, 78, 79, 86, 95, 96, 112, 114, 115, 116, 117, 118, 119, 120, 149, 150, 151, 153, 171, 172, 258, 263, 292, 325, 355, 396, 411, 421, 439], "xsse4": 24, "sse4": [24, 30, 32, 164, 173, 176], "older": [24, 30, 32], "msse4": 24, "give": [24, 153, 164, 382], "therefor": [24, 42, 143, 145, 149, 159, 307, 525], "arch_opt_flag": 24, "portabl": [24, 144, 307], "throughout": [24, 47, 274, 395, 432], "undefin": [24, 48, 166, 172, 177, 180, 181, 184, 186, 187, 188, 189, 195, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 221, 228, 307, 313, 339, 525], "crash": [24, 395], "conflict": [24, 439], "donednn_cpu_runtim": 24, "tbbroot": 24, "environment": 24, "instal": [24, 38, 54], "dtbbroot": 24, "winograd": [24, 26, 151, 165, 166, 171, 172], "_onednn_test_threadpool_impl": 24, "standalon": 24, "eigen": [24, 157], "eigen3_dir": 24, "d_onednn_test_threadpool_impl": 24, "deigen3_dir": 24, "eigen3": 24, "plu": 24, "decomposit": 24, "At": [24, 30, 31, 47, 56, 69, 148, 149, 161, 165, 256, 395], "balanc": [24, 387], "item": [24, 149], "worker": [24, 564], "64": [24, 51, 52, 149, 162, 163, 177, 210, 239, 240, 243, 249, 254, 272, 282, 289, 347, 376, 378, 391, 398, 428, 443, 539], "optimis": 24, "computelibrari": 24, "machin": [24, 250, 387], "mlplatform": 24, "org": [24, 41, 42, 44, 45, 162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "donednn_aarch64_use_acl": 24, "download": [24, 38], "advis": [24, 30, 31, 53, 161], "v23": 24, "11": [24, 25, 49, 149, 177, 233, 234, 236, 237, 241, 242, 243, 244, 245, 257, 268, 269, 278, 369, 372, 373, 379, 380, 381, 390, 395, 398, 421, 422], "donednn_blas_vendor": 24, "graphic": [24, 41, 42, 44, 45, 51, 258, 347, 396, 439], "sdk": 24, "dopenclroot": 24, "donednn_gpu_runtim": 24, "simultan": [24, 36, 38, 151, 327], "besid": [24, 37, 40, 42], "avx512_cor": [24, 30, 165, 173, 319], "conveni": [25, 34, 56, 164, 181, 198, 313, 396, 480, 542], "almost": [25, 144, 164], "far": [25, 52], "concern": [25, 52], "switch": [25, 160, 164], "back": [25, 29, 37, 48, 52, 60, 61, 70, 71, 72, 73, 74, 75, 99, 100, 103, 104, 149, 151, 166, 236, 237, 295, 297, 307, 309, 332, 340, 344, 372, 373, 401, 402, 439, 463, 465, 467, 469, 471, 473, 523, 527, 529], "forth": 25, "desir": [25, 48, 144, 319], "c99": 25, "medium": 25, "insid": [25, 27, 37, 38, 164, 187, 195, 246, 260, 282, 307, 382, 397, 398, 405, 443, 525], "thin": 25, "wrapper": [25, 479, 492, 523, 537, 561], "stabl": [25, 44, 155, 172], "abi": [25, 160, 206], "usabl": [25, 28], "target": [25, 37, 79, 162, 163, 240, 248, 249, 289, 333, 337, 340, 342, 344, 378, 539], "audienc": 25, "experienc": 25, "ffi": 25, "framework": [25, 37, 43, 48, 142, 144, 148, 164, 339, 347, 395, 397, 398, 399, 400, 401, 402], "overhead": [25, 27, 40, 42, 47, 145, 148, 149, 161, 164, 165], "sanit": [25, 40], "consequ": [25, 421], "nan": 25, "larg": [25, 40, 41, 148, 166], "close": [25, 144, 159], "overlap": [25, 60, 146], "concaten": [26, 69, 153, 166, 205, 213, 214, 238, 294, 307, 374, 460, 461], "concat_dimens": [26, 283, 294, 461], "ou": [26, 69, 154, 155], "src_i": [26, 67, 69, 99, 128, 156], "c_1": [26, 69], "c_": [26, 69, 153], "dnnl_arg_multiple_src": [26, 156, 238, 277, 283, 313, 374, 437], "sum_i": [26, 162, 249], "c_i": 26, "necessarili": [26, 152, 159, 162, 163, 240, 378], "dnnl_nchw16c": [26, 181, 198], "dnnl_ncdhw8c": [26, 181, 198], "prepack": 26, "dnnl_format_kind_opaqu": [26, 180, 197], "s8s8": [26, 52], "abl": [26, 30, 56, 151, 156, 201, 395], "slower": [26, 32, 156], "graph": [27, 32, 35, 36, 40, 41, 42, 43, 44, 45, 54, 82, 136, 142, 165, 168, 223, 242, 243, 251, 257, 278, 280, 283, 287, 319, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 347, 349, 482], "compon": [27, 36, 40, 165], "fold": 27, "redund": 27, "megabyt": 27, "won": [27, 165], "reach": [27, 36, 155, 194, 222, 223, 335, 541], "getter": 27, "ref": [27, 162, 163, 240, 378], "dnnl_graph_set_constant_tensor_cache_capac": [27, 283, 335], "dnnl_graph_get_constant_tensor_cache_capac": [27, 283, 335], "programm": 27, "onednn_graph_constant_tensor_cache_capac": 27, "engine_kind1": 27, "size1": 27, "engine_kind2": 27, "size2": 27, "1024": [27, 36, 148, 151, 251, 274, 280, 283, 334, 432], "2048": [27, 251, 280], "start": [27, 35, 36, 40, 49, 95, 96, 110, 111, 157, 160, 161, 164, 165, 242, 248, 256, 257, 258, 278, 279, 313, 360, 390, 398, 399, 402, 420, 421, 446], "pars": 27, "prioriti": [27, 38], "neural": [28, 29, 32, 40, 160, 233, 234, 318, 341, 369, 370], "network": [28, 29, 32, 40, 41, 47, 160, 233, 234, 318, 341, 369, 370], "df_": 28, "commonli": [28, 29], "wide": [28, 40, 41], "known": [28, 29, 56, 162, 250, 256, 260, 282, 307, 382, 387, 395, 397, 400, 401, 405, 443], "summar": [28, 33, 143, 153], "scale_shift": 28, "carri": [28, 162], "diff_src": [28, 48, 55, 58, 61, 64, 68, 71, 74, 81, 85, 90, 92, 94, 96, 100, 104, 107, 111, 122, 127, 129, 131, 133, 140, 146, 152, 236, 237, 241, 274, 290, 298, 301, 304, 372, 373, 379, 432], "diff_dst": [28, 48, 55, 58, 61, 64, 66, 68, 71, 72, 74, 75, 81, 85, 90, 92, 94, 96, 100, 104, 107, 111, 122, 127, 129, 131, 133, 140, 236, 237, 241, 290, 298, 301, 304, 372, 373, 379], "diff_bia": [28, 66], "diff_scale_shift": 28, "_layer": 28, "_iter": 28, "recurr": [28, 32, 153, 229, 263, 265, 281, 313, 318, 361, 411, 416, 441, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "letter": [28, 164, 181, 198, 420], "od": 28, "depth": [28, 29, 70, 71, 164, 181, 198, 259, 295, 297, 309, 403, 463, 465, 467, 469, 471, 473, 527, 529], "kd": [28, 29, 50], "sd": [28, 29, 70, 71], "sw": [28, 29, 60, 70, 71, 103, 146, 239, 254, 269, 376, 391, 422], "dd": [28, 29, 34, 70, 71], "dh": [28, 29, 60, 70, 71, 103, 146, 269, 422], "dilat": [28, 71, 72, 73, 74, 75, 103, 104, 188, 189, 211, 212, 233, 241, 242, 243, 257, 267, 269, 278, 283, 295, 297, 309, 369, 379, 397, 398, 400, 401, 420, 422, 463, 465, 467, 469, 471, 473, 527, 529, 542], "ph": 28, "pw": 28, "transposit": [28, 292, 325, 355], "b": [28, 40, 51, 56, 153, 162, 163, 164, 181, 198, 240, 246, 250, 260, 282, 283, 292, 306, 307, 325, 326, 327, 349, 355, 378, 382, 387, 405, 420, 443, 521, 567, 568], "hidden": [28, 52, 249, 263, 281, 313, 318, 385, 411, 441, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 571, 573], "_t": [28, 153], "timestamp": [28, 149, 153], "l": [28, 54, 55, 153, 181, 229, 263, 265, 274, 281, 289, 307, 361, 411, 416, 432, 441, 539], "tanh": [28, 29, 34, 40, 106, 140, 153, 171, 172, 190, 229, 239, 254, 261, 263, 265, 266, 281, 286, 361, 376, 391, 407, 411, 416, 418, 441], "logist": [28, 34, 171, 172], "cell": [28, 32, 52, 171, 172, 181, 198, 211, 212, 215, 216, 249, 263, 281, 313, 318, 385, 386, 411, 441, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 542, 551, 571, 573], "tild": [28, 153], "candid": [28, 40, 56, 181, 198], "gate": [28, 40, 153, 171, 172, 181, 198, 229, 263, 265, 274, 281, 307, 361, 411, 416, 432, 441], "forget": [28, 181, 198, 236, 237, 372, 373], "o": [28, 42, 44, 45, 144, 149, 153, 164, 166, 181, 198, 249, 263, 268, 274, 289, 307, 385, 386, 411, 432, 539], "updat": [28, 29, 32, 50, 153, 159, 160, 181, 198, 236, 237, 241, 242, 243, 251, 257, 263, 274, 278, 280, 372, 373, 379, 411, 432, 497], "reset": [28, 36, 157, 171, 172, 181, 198, 263, 314, 412, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573], "english": 28, "alphabet": 28, "canon": 28, "z": [28, 52], "outermost": [28, 154, 155, 164, 181, 198, 307], "innermost": [28, 154, 155, 181, 198, 211, 212, 307], "dens": [28, 36, 164, 165, 307, 525], "ba": [28, 36, 198, 204, 228, 525], "last": [28, 36, 41, 52, 53, 95, 96, 101, 137, 144, 155, 162, 163, 164, 165, 194, 222, 223, 240, 304, 314, 370, 378, 385, 386, 395, 483, 541], "transpos": [28, 44, 101, 154, 181, 198, 204, 228, 254, 260, 292, 325, 355, 391, 405], "natur": [28, 98, 171, 172, 395], "suppos": [28, 49, 274, 432], "column": [28, 36, 56, 101, 149, 161, 164, 292, 325, 355], "row": [28, 36, 101, 154, 161, 164, 199, 221, 246, 249, 283, 292, 325, 339, 355, 382], "major": [28, 52, 154, 164, 246, 292, 319, 325, 339, 355, 382, 574], "fortran": 28, "todo": [28, 146, 248, 360, 385], "pictur": [28, 146, 164, 440], "ab16a": 28, "similar": [28, 32, 36, 42, 47, 147, 160, 163, 164, 166, 199, 204, 221, 228, 242, 243, 251, 257, 274, 278, 280, 307, 371, 382, 395, 432, 525], "split": [28, 42, 48, 144, 149, 162, 163, 164, 240, 307, 378, 525], "contigu": [28, 56, 164, 292, 325, 327, 339, 355], "represent": [28, 43, 164, 307, 382, 385, 390, 395, 396, 439, 525], "domain": [28, 36, 164, 181, 198, 289, 382, 531], "four": [28, 52, 153], "cross": [29, 123, 144, 165, 347], "correl": 29, "comment": [29, 70, 71], "front": [29, 60, 61, 70, 71, 72, 73, 74, 75, 103, 104, 149, 295, 297, 309, 463, 465, 467, 469, 471, 473, 527, 529], "top": [29, 41, 44, 60, 61, 70, 71, 72, 73, 74, 75, 103, 104, 149, 164, 289, 295, 297, 307, 309, 463, 465, 467, 469, 471, 473, 527, 529, 531], "left": [29, 34, 41, 44, 55, 56, 60, 61, 70, 71, 72, 73, 74, 75, 95, 96, 101, 103, 104, 125, 146, 152, 154, 155, 164, 165, 211, 212, 213, 214, 239, 254, 267, 269, 274, 289, 295, 297, 307, 309, 376, 391, 420, 422, 432, 463, 465, 467, 469, 471, 473, 527, 529, 531, 542], "pd_l": [29, 70, 71], "ph_l": [29, 60, 70, 71, 103, 146, 239, 254, 269, 376, 391, 422], "pw_l": [29, 60, 70, 71, 103, 146, 239, 254, 269, 376, 391, 422], "_l": 29, "stand": [29, 144], "bottom": [29, 41, 60, 61, 70, 71, 72, 73, 74, 75, 103, 104, 164, 295, 297, 309, 463, 465, 467, 469, 471, 473, 527, 529], "pd_r": [29, 70, 71], "ph_r": [29, 70, 71, 239, 254, 269, 376, 391, 422], "pw_r": [29, 70, 71, 239, 254, 269, 376, 391, 422], "_r": 29, "broken": [29, 162, 163, 240, 378], "exposit": 29, "realiti": 29, "sum_": [29, 50, 56, 70, 99, 101, 128], "lfloor": [29, 70, 152], "rfloor": [29, 70, 152], "oc_g": [29, 70], "ic_g": [29, 70], "5d": [29, 53, 164, 181, 198, 289, 531], "depthwis": [29, 289, 313, 531], "dkh": [29, 70], "dkw": [29, 70], "fraction": 29, "swap": [29, 307, 525], "li": 29, "expand": [29, 254, 391], "plai": [29, 395], "crucial": 29, "role": 29, "determin": [29, 49, 184, 186, 267, 397, 398, 400, 401, 421], "diffbia": [29, 50, 153], "dnnl_arg_diff_weight": [29, 50, 147, 236, 237, 241, 283, 313, 372, 373, 379], "dnnl_arg_diff_bia": [29, 50, 153, 236, 237, 241, 274, 283, 313, 372, 373, 379, 432], "prelu_post_op_posit": [29, 50, 56], "f8_e5m2": [29, 32, 56, 76, 112, 151, 185, 196], "physic": [29, 53, 144, 164, 181, 256, 307, 395, 525], "critic": [29, 47, 48, 50, 145, 267, 420], "shorten": [29, 50, 153, 165], "dnnl_wio": [29, 50, 181], "dnnl_hwio": [29, 50, 181], "dnnl_dhwio": [29, 50, 181], "xe": [29, 42, 44, 45, 347], "hpc": [29, 32], "entir": [29, 47, 50, 56, 114, 115, 116, 117, 118, 119, 120], "dnnl_arg_": [29, 50, 56, 308, 313, 324, 353, 354, 537, 545], "memory_index": [29, 50, 56], "dnnl_arg_attr_zero_point": [29, 56, 246, 260, 282, 283, 289, 313, 382, 405, 443, 539], "prevent": [29, 33, 49, 143, 313], "feasibl": 29, "usag": [29, 31, 32, 36, 37, 45, 51, 123, 165, 181, 198, 229, 230, 242, 243, 251, 257, 263, 265, 278, 280, 281, 289, 361, 363, 411, 416, 421, 441, 531, 539], "deploi": 29, "done": [29, 34, 48, 56, 146, 151, 162, 163, 240, 370, 371, 378, 395, 396], "set_scal": [29, 56, 282, 443, 444, 539], "wei": [29, 32], "eta": 29, "set_zero_point": [29, 56, 282, 443, 444, 539], "shift_": [29, 151], "simd": [29, 30, 32, 173, 176], "expens": [29, 48, 390, 395, 420, 525], "fast": [29, 42, 44, 162, 163, 164, 240, 378], "lavin": 29, "grai": 29, "often": [29, 149, 165], "aarch64": [29, 149, 166, 347], "rearrang": [29, 137], "fallback": 29, "exce": [29, 166], "half": [29, 32, 159, 177, 185, 196], "14": [29, 49, 149, 177, 267, 420, 421, 531], "constraint": [29, 56], "met": [29, 110, 111], "silent": [29, 31], "fall": [29, 166], "explicit": [29, 44, 157, 274, 307, 432], "weigh": 29, "against": 29, "boost": [29, 30, 32, 159, 165, 173, 176], "consumpt": [29, 212, 307, 395], "grow": 29, "significantli": [29, 148, 159], "growth": 29, "rest": [29, 70], "conv1_pd": 29, "convolution_winograd": [29, 172, 463, 465, 467, 469], "conv1_src_md": [29, 234, 370], "conv1_weights_md": [29, 234, 370], "conv1_bias_md": [29, 234, 370], "conv1_dst_md": [29, 234, 370], "conv1_strid": [29, 234, 370], "conv1_padding_l": 29, "conv1_padding_r": 29, "convolution_auto": [29, 172, 267, 420, 463, 465, 467], "heurist": [29, 166], "affin": [29, 95, 96, 144], "f8_e4m3": [29, 32, 56, 76, 112, 151, 185, 196], "center": [29, 32, 56, 151, 246, 382, 405], "seri": [29, 32, 52, 56, 151], "fp8": [29, 56], "No": [29, 30, 32, 38, 39, 152, 153, 163, 166, 174, 175, 229, 235, 236, 247, 249, 274, 361, 372, 384, 386, 420, 432], "sometim": [30, 47, 48, 50, 52, 164, 274, 390, 395, 432], "explor": [30, 149], "onednn_max_cpu_isa": 30, "avx": [30, 32, 165, 173, 176, 319, 420], "advanc": [30, 32, 36, 51, 56, 153, 173, 176, 250, 347, 387, 405, 443], "avx2_vnni": [30, 173, 319], "dl": [30, 32, 159, 165, 173, 176], "512": [30, 32, 36, 165, 173, 176, 247, 266, 384, 418], "avx512bw": [30, 32], "avx512vl": 30, "avx512dq": 30, "avx512_core_vnni": [30, 173, 319], "avx512_core_bf16": [30, 165, 173, 319], "avx10_1_512": [30, 173, 319], "avx512_core_fp16": [30, 165, 173, 319], "avx10": 30, "float16": [30, 173, 176], "avx10_1_512_amx": [30, 173, 319], "avx512_core_amx": [30, 165, 173, 319], "avx2_vnni_2": [30, 173, 319], "avx10_1_512_amx_fp16": [30, 173, 319], "avx512_core_amx_fp16": [30, 165, 173, 319], "exclud": [30, 171, 172], "preview": 30, "alias": [30, 149, 181, 198, 319], "introduct": [30, 51], "manag": [30, 31, 37, 143, 149, 165, 219, 220, 242, 243, 251, 257, 278, 280, 308, 353, 492], "set_max_cpu_isa": [30, 319, 349], "ed": [30, 149], "observ": [30, 144, 165], "get_effective_cpu_isa": [30, 319, 349], "highest": [30, 38, 47, 165], "zmm": 31, "advantag": [31, 159], "clock": [31, 149], "onednn_cpu_isa_hint": 31, "set_cpu_isa_hint": [31, 319, 349], "routin": [31, 162, 163, 240, 327, 328, 378, 565], "no_hint": [31, 174, 319], "prefer_ymm": [31, 174], "ymm": [31, 174, 175], "get_cpu_isa_hint": [31, 319, 349], "pose": 31, "bypass": 31, "ieee": [32, 159], "golden": 32, "comparison": [32, 56, 87, 162, 163, 240, 250, 307, 360, 378], "s4": [32, 45, 56, 78, 185, 196], "u4": [32, 45, 56, 78, 185, 196], "doubl": [32, 177, 212, 246, 250, 283, 382, 387], "ofp8": [32, 177, 185, 196], "5": [32, 34, 36, 41, 49, 52, 84, 88, 93, 94, 95, 96, 125, 149, 152, 159, 161, 162, 163, 164, 177, 181, 185, 196, 223, 233, 234, 236, 237, 240, 241, 242, 243, 244, 245, 251, 257, 258, 264, 268, 272, 278, 279, 280, 339, 369, 372, 373, 378, 379, 380, 381, 396, 397, 398, 400, 401, 414, 428, 439], "e8m0": [32, 196], "mx": [32, 177, 196], "f4_e2m1": [32, 196], "f4_e3m0": [32, 196], "topic": [32, 35, 45, 307, 347, 395, 420, 421], "govern": [32, 162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "convert_": 32, "_dt": 32, "_zero": 32, "_point_": 32, "postops_": 32, "oscale_": 32, "mix": [32, 41, 42, 43, 44, 46, 141], "nearest": [32, 93, 94, 124, 141, 171, 172, 188, 189, 317], "tie": 32, "flush": [32, 335], "fenv": 32, "fesetround": 32, "xmmintrin": 32, "_mm_set_flush_zero_mod": 32, "_mm_flush_zero_on": 32, "ftz": 32, "explain": [32, 49, 370, 371], "recogn": [32, 40, 43], "fp16": 32, "tba": 32, "word": [32, 48, 52, 56, 181, 198, 219, 220], "4x": 32, "microarchitectur": 32, "uarch": [32, 149], "lp": [32, 150, 171], "dp4a": 32, "uhd": 32, "11th": 32, "14th": 32, "gen": [32, 51, 246, 250, 260, 282, 382, 387, 405, 443], "iri": [32, 413], "formerli": [32, 52], "dg1": 32, "hpg": 32, "xmx": [32, 42, 44, 45], "aka": [32, 181, 201, 248, 249, 395], "dpa": 32, "arc": [32, 413], "tm": [32, 149, 360], "achemist": 32, "flex": 32, "arctic": 32, "sound": [32, 164], "mad": 32, "pont": 32, "vecchio": 32, "upconvers": 32, "faster": 32, "newer": 32, "interact": [33, 143, 303, 308, 324, 325, 338, 340, 344], "dnnl_sycl": [33, 226, 278, 279, 280, 401, 402, 439], "seamlessli": 33, "submit": [33, 143, 279, 314, 367, 369, 370, 396, 439, 564], "access": [33, 47, 143, 144, 159, 249, 274, 279, 307, 311, 319, 334, 339, 385, 390, 395, 396, 432, 439, 523], "uint8_t": [33, 52, 145, 162, 163, 212, 240, 246, 249, 260, 283, 292, 307, 308, 313, 325, 337, 339, 340, 341, 342, 349, 351, 353, 355, 378, 382, 386, 405, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 527, 528, 529, 532, 533, 534, 535, 537, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 570, 571, 572, 573], "unifi": [33, 37, 143], "sycl_interop": [33, 278, 279, 280, 283, 287, 307, 324, 331, 332, 344, 349, 350, 401, 402, 439], "make_engin": [33, 143, 145, 353, 354], "get_devic": [33, 36, 143, 145, 278, 280, 353, 354, 401, 402], "get_context": [33, 36, 143, 258, 278, 280, 353, 354, 396, 401, 402], "make_stream": [33, 36, 143, 278, 280, 353, 354, 355, 401, 402], "get_queu": [33, 279, 354, 439], "make_memori": [33, 143, 279, 353, 354, 439], "get_buff": [33, 279, 307, 354, 439], "altern": [33, 44, 48, 143, 152], "uniform": [33, 143, 144], "host": [33, 143, 202, 203, 226, 227, 307, 332, 344, 352, 396, 439, 523], "memory_kind": [33, 143, 279, 283, 308, 324, 353, 354, 439], "could": [33, 40, 43, 143, 149, 159, 162, 163, 169, 170, 240, 246, 318, 378, 382, 395], "identifi": [33, 36, 37, 143, 149, 307, 342], "get_memory_kind": [33, 143, 353, 354], "track": [33, 37, 82], "accessor": [33, 439], "proper": [33, 48, 49, 143, 162, 163, 240, 250, 378, 382, 387, 395], "write": [33, 36, 42, 44, 47, 143, 149, 162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 307, 327, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 396, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 523, 568], "i_1": 34, "ldot": [34, 49, 56], "i_k": 34, "dnnl_eltwise_ab": [34, 171, 172], "begin": [34, 57, 58, 80, 87, 90, 97, 110, 113, 121, 147, 152, 153, 154, 162, 163, 229, 230, 231, 232, 234, 238, 239, 240, 247, 249, 254, 255, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 361, 363, 365, 367, 374, 376, 378, 384, 386, 391, 393, 396, 403, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441], "clip": [34, 67, 171, 172], "dnnl_eltwise_clip": [34, 171, 172], "clip_v2": 34, "dnnl_eltwise_clip_v2": [34, 171, 172], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [34, 171, 172], "elu": [34, 40, 81, 171, 172, 190, 286], "dnnl_eltwise_elu": [34, 171, 172], "dnnl_eltwise_elu_use_dst_for_bwd": [34, 171, 172], "exp": [34, 40, 99, 128, 171, 190, 249, 286], "dnnl_eltwise_exp": [34, 171, 172], "dnnl_eltwise_exp_use_dst_for_bwd": [34, 171, 172], "gelu_erf": 34, "dnnl_eltwise_gelu_erf": [34, 171, 172], "erf": [34, 84, 171, 172], "pi": 34, "gelu_tanh": 34, "dnnl_eltwise_gelu_tanh": [34, 171, 172], "044715": 34, "hardsigmoid": [34, 90, 171, 172, 190, 286], "dnnl_eltwise_hardsigmoid": [34, 171, 172], "hardswish": [34, 40, 92, 171, 172, 190, 286], "dnnl_eltwise_hardswish": [34, 171, 172], "dnnl_eltwise_linear": [34, 171, 172], "dnnl_eltwise_log": [34, 171, 172], "log_": 34, "dnnl_eltwise_logist": [34, 171, 172, 318], "dnnl_eltwise_logistic_use_dst_for_bwd": [34, 171, 172], "mish": [34, 107, 171, 172, 190, 286], "dnnl_eltwise_mish": [34, 171, 172], "omega": [34, 49, 107], "delta": [34, 107], "pow": [34, 40, 171, 172, 190, 286], "dnnl_eltwise_pow": [34, 171, 172], "dnnl_eltwise_relu_use_dst_for_bwd": [34, 171, 172, 298, 475], "dnnl_eltwise_round": [34, 171, 172], "soft_relu": [34, 171, 172], "dnnl_eltwise_soft_relu": [34, 171, 172], "dnnl_eltwise_sqrt": [34, 171, 172], "dnnl_eltwise_sqrt_use_dst_for_bwd": [34, 171, 172], "squar": [34, 40, 115, 132, 135, 171, 172, 190, 286], "dnnl_eltwise_squar": [34, 171, 172], "swish": [34, 41, 171, 172], "dnnl_eltwise_swish": [34, 171, 172], "dnnl_eltwise_tanh": [34, 171, 172, 318], "dnnl_eltwise_tanh_use_dst_for_bwd": [34, 171, 172], "134145": 34, "_relu": 34, "logsigmoid": 34, "soft": [34, 47], "eltwise_forward": [34, 234, 236, 237, 253, 255, 256, 258, 268, 279, 298, 349, 370, 372, 373, 390, 393, 395, 396, 439, 475, 537], "rather": [34, 274, 432], "Such": [34, 48, 144, 525], "satisfi": [34, 37], "aggress": 36, "onednn_experimental_bnorm_stats_one_pass": 36, "varianc": [36, 62, 63, 64, 88, 95, 96, 200, 201, 230, 232, 259, 262, 290, 301, 304, 313, 363, 367, 403, 409, 454, 456, 485, 487, 501, 503], "bn": 36, "rfc": 36, "onednn_experimental_gpu_conv_v2": 36, "shapeless": 36, "spars": [36, 162, 163, 166, 180, 197, 199, 211, 212, 221, 240, 244, 245, 247, 307, 378, 380, 381, 525], "microkernel": 36, "metadata": [36, 37, 244, 245, 380, 381], "enumer": [36, 542], "format_kind": [36, 160, 165, 166, 211, 291, 295, 297, 302, 304, 306, 307, 310, 315, 317, 318, 523, 525], "compress": [36, 40, 47, 56, 199, 221, 282, 443, 444], "sort": 36, "co": [36, 164, 229, 230, 231, 232, 238, 239, 247, 249, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 281, 283, 292, 325, 349, 355, 361, 363, 365, 367, 374, 376, 384, 391, 393, 395, 403, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437, 441], "ordin": 36, "sparse_encod": [36, 211, 523, 525], "member": [36, 211], "content": [36, 145, 307, 523, 525], "unspecifi": [36, 165, 178, 179, 307, 525], "pseudocod": 36, "namespac": [36, 145, 160, 162, 163, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 287, 308, 324, 325, 326, 331, 340, 344, 360, 361, 363, 365, 367, 372, 373, 374, 376, 378, 380, 381, 382, 384, 387, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443], "m": [36, 56, 101, 149, 162, 163, 234, 240, 244, 245, 246, 247, 250, 251, 260, 266, 268, 280, 282, 283, 292, 325, 327, 349, 355, 378, 380, 381, 382, 384, 387, 405, 418, 421, 443, 568, 576], "nnz": [36, 244, 245, 247, 283, 307, 380, 381, 384, 525], "values_dt": 36, "indices_dt": [36, 283, 307], "pointers_dt": [36, 283, 307], "csr_md": 36, "entri": [36, 44, 165, 211, 212, 244, 245, 289, 307, 311, 314, 334, 380, 381, 525, 531], "csr_valu": 36, "5f": [36, 232, 244, 245, 249, 260, 367, 380, 381, 386, 405], "0f": [36, 233, 234, 235, 236, 237, 241, 244, 245, 247, 248, 249, 252, 253, 258, 274, 279, 283, 369, 371, 372, 373, 379, 380, 381, 384, 385, 386, 389, 390, 396, 432, 439], "csr_indic": 36, "csr_pointer": 36, "csr_mem": 36, "values_sz": 36, "indices_sz": 36, "pointers_sz": 36, "values_handl": 36, "indices_handl": 36, "pointers_handl": 36, "coo_md": 36, "coo_valu": 36, "coo_row_indic": 36, "coo_col_indic": 36, "coo_mem": 36, "row_indices_handl": 36, "col_indices_handl": 36, "99": 36, "wtag": 36, "dtag": 36, "4x1000000": 36, "1000000x128": 36, "1000000": 36, "dt": [36, 162, 163, 165, 166, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 254, 255, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 361, 363, 365, 367, 370, 371, 372, 373, 374, 376, 378, 380, 381, 382, 384, 391, 393, 403, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 531], "3x512x1024": 36, "1x1024x512": 36, "agnost": [36, 181, 198, 307], "collect": [36, 37, 149, 165, 326, 342, 382], "cl_command_queu": [36, 143, 258, 283, 308, 353, 396], "ocl_queu": [36, 258, 396], "cl_queue_properti": 36, "prop": 36, "cl_queue_profiling_en": 36, "clcreatecommandqueuewithproperti": 36, "ocl_interop": [36, 143, 145, 258, 283, 287, 308, 331, 340, 349, 350, 396], "reset_profil": [36, 314, 349], "enqueu": [36, 396], "twice": 36, "wait": [36, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 314, 322, 361, 363, 365, 367, 372, 373, 374, 376, 380, 381, 382, 384, 387, 390, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 420, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 523, 561, 564], "conv_prim": [36, 239, 376], "uint64_t": [36, 157, 283, 314, 349, 564], "nsec": 36, "get_profiling_data": [36, 314, 349], "profiling_data_kind": [36, 314, 349], "resourc": [36, 37, 148, 332], "vendor": 36, "scope": [36, 47, 420], "apart": [36, 45], "logfil": 36, "parti": 36, "spdlog": 36, "onednn_verbose_logfil": 36, "cnn_test_logg": 36, "cpp": [36, 38, 51, 54, 157, 165, 360, 370, 371, 385, 386, 390, 395, 396, 397, 398, 399, 400, 401, 402, 420, 421, 439], "consol": 36, "logger": 36, "until": [36, 236, 237, 242, 243, 251, 257, 278, 280, 307, 370, 372, 373, 387, 439, 523], "filepath": 36, "dnnl_verbose_logfil": 36, "stdout": [36, 165, 319], "rotat": 36, "lazi": 36, "onednn_verbose_logfile_s": 36, "50": 36, "onednn_verbose_log_with_consol": 36, "onednn_verbose_num_logfil": 36, "ai": 37, "class": [37, 145, 157, 211, 279, 283, 325, 332, 333, 337, 339, 341, 342, 345, 350, 355, 480, 492, 493, 537, 541, 542, 551], "bind": [37, 242, 243, 251, 257, 278, 280], "know": [37, 48, 246, 382], "connect": [37, 41, 50, 142, 242, 243, 248, 257, 274, 278, 283, 339, 341, 397, 398, 400, 401, 432, 483], "edg": 37, "paramt": 37, "subgraph": [37, 39, 40, 43, 44], "within": [37, 40, 52, 55, 149, 161, 164, 171, 172, 292, 304, 305, 307, 325, 355], "cycl": [37, 382], "procedur": 37, "port": 37, "node": [37, 41, 42, 44, 45, 136, 144, 233, 241, 283, 369, 379, 421], "abstract": [37, 145, 161, 162, 163, 240, 299, 307, 341, 345, 378, 390, 395, 396, 439, 564], "lifecycl": 37, "anymor": [37, 164], "head": [38, 42, 44, 45, 149], "attent": [38, 40, 41, 45, 153, 229, 248, 249, 263, 281, 313, 318, 361, 385, 386, 411, 441, 450, 452, 505, 507, 551], "mha": 38, "perceptron": [38, 40], "mlp": [38, 40, 260, 282, 405, 443], "bring": [38, 52], "involv": [38, 525], "onednn_experimental_graph_compiler_cpu_jit": 38, "onednn_experimental_graph_compiler_cpu_llvm_config": 38, "xbyak": 38, "donednn_build_graph": 38, "donednn_experimental_graph_compiler_backend": 38, "donednn_experimental_graph_compiler_cpu_jit": 38, "adopt": [38, 41, 45, 78], "friendli": [38, 47, 274, 371, 421, 432], "ir": [38, 51], "among": [38, 144, 149, 339], "occur": [38, 52, 164, 166, 188], "shall": [38, 162], "guidelin": 38, "10": [38, 149, 159, 177, 223, 229, 230, 231, 232, 233, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 283, 361, 363, 365, 367, 369, 374, 376, 379, 382, 384, 387, 391, 393, 395, 397, 398, 400, 401, 403, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437, 441], "technologi": 38, "onednn_experimental_graph_compiler_opt_level": 38, "turn": [38, 48, 164, 165, 395, 420], "onednn_experimental_graph_compiler_kernel_trac": 38, "stderr": 38, "filenam": 38, "json": [38, 39], "chrome": 38, "onednn_experimental_graph_compiler_print_pass_result": 38, "onednn_experimental_graph_compiler_verbos": 38, "messag": [38, 165, 246, 250, 382, 387, 395, 439, 445, 480, 575], "info": [38, 39, 149, 165, 289, 318, 420, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 531, 571, 573], "onednn_experimental_graph_compiler_dump_gencod": 38, "path_to_dump": 38, "onednn_experimental_graph_compiler_c_includ": 38, "path_to_c_codegen_head": 38, "sctrace": 38, "tmp": [38, 248, 249, 319], "rank": [38, 69, 76, 78, 79, 86, 95, 96, 101, 112, 114, 115, 116, 117, 118, 119, 120], "cpu_includ": 38, "manual": [38, 43, 48, 52, 162, 163, 240, 248, 378], "path_to_onednn_repo": 38, "graph_compil": 38, "offlin": 38, "dump_cod": 38, "visual": [39, 54, 70, 71, 72, 73, 74, 75, 144, 160], "benchmark": [39, 421, 445], "onednn_graph_dump": 39, "serial": [39, 145, 307, 351], "onednn_graph_verbos": 39, "100001": 39, "100002": 39, "1313609102600373579": 39, "100003": 39, "12829238476173481280": 39, "overal": [40, 136, 164, 421], "choic": [40, 164, 166, 173, 176], "bracket": 40, "superscript": 40, "repetit": 40, "subscript": 40, "t1": [40, 166, 274, 283, 432], "neighbor": [40, 171, 172, 317], "implicitli": [40, 43, 153, 289, 307, 531], "in1": 40, "proceed": 40, "categori": [40, 181, 198], "unari": [40, 474, 476], "clamp": [40, 68, 190, 286], "gelu": [40, 41, 85, 171, 172, 190, 286], "leakyrelu": [40, 190, 286], "sigmoid": [40, 41, 127, 153, 172, 190, 286], "softplu": [40, 106, 131, 190, 286], "divid": [40, 44, 52, 70, 71, 72, 73, 74, 75, 88, 162, 163, 166, 181, 190, 198, 240, 286, 378], "reducel1": [40, 190, 286], "reducel2": [40, 190, 286], "reducemax": [40, 190, 286], "reducemean": [40, 190, 286], "reducemin": [40, 190, 286], "reduceprod": [40, 190, 286], "reducesum": [40, 190, 286], "dot": [40, 42, 45], "gqa": 40, "biasadd": [40, 66, 190, 242, 257, 278, 286, 397, 400, 401], "batchnorminfer": [40, 62, 190, 286], "resnext": 40, "ssd": 40, "convtranspos": [40, 190, 286], "adversari": 40, "interpol": [40, 42, 94, 152, 188, 189, 190, 286, 317], "bert": [40, 44], "dlrm": 40, "parallelwavegan": 40, "avgpool": [40, 190, 286], "maxpool": [40, 190, 286], "densenet": 40, "reciproc": [40, 190, 286], "t2": 40, "layernorm": [40, 96, 190, 286], "groupnorm": [40, 190, 286], "smoothquant": 40, "convolutionbackwardweight": [40, 190, 286], "biasaddbackward": [40, 190, 286], "relubackward": [40, 190, 286], "batchnormtrainingbackward": [40, 190, 286], "variant": [41, 144, 153, 295, 297], "feed": 41, "ffn": 41, "llm": [41, 45], "v": [41, 42, 44, 45, 56, 154, 246, 247, 250, 260, 268, 282, 283, 382, 384, 387, 405, 443, 523], "glu": 41, "qualiti": [41, 42], "w_1": 41, "w_2": 41, "otim": 41, "fc": 41, "swiglu": 41, "llama": 41, "qwen": 41, "acycl": [41, 42, 44, 45], "blue": [41, 42, 44, 45], "brown": [41, 42, 44, 45], "definit": [41, 42, 44, 45, 152, 153, 154, 307, 330, 332, 343, 346, 482], "meet": [41, 42, 44, 45], "properli": [41, 44, 153, 164, 166, 313], "arxiv": [41, 42, 44, 45], "1706": [41, 42, 44, 45], "03762v7": [41, 42, 44, 45], "2002": 41, "05202": 41, "effici": [41, 47, 52, 164], "foundat": 41, "2302": 41, "13971": 41, "technic": 41, "report": [41, 149, 151, 289, 539], "2309": 41, "16609": 41, "io": [41, 44, 198, 246, 382], "graph_extens": [41, 44], "html": [41, 44, 246, 382], "bottleneck": [42, 165], "load": [42, 149], "sentenc": 42, "mqa": [42, 44], "degrad": 42, "instabl": 42, "propos": [42, 159], "subgroup": 42, "mini": [42, 44, 45, 181, 198, 260, 307, 405, 483], "h_q": 42, "h_kv": 42, "n_rep": 42, "reshap": [42, 44, 307, 525], "staticreshap": [42, 44, 190, 286], "q": [42, 44, 45, 149, 278, 279, 280, 283, 401, 402, 439], "openmp": [42, 44, 144, 165, 420], "256": [42, 44, 149, 234, 235, 243, 248, 249, 259, 266, 267, 283, 371, 403, 418, 420], "decod": [42, 44, 51, 248, 249, 385, 386], "1911": [42, 44], "02150": [42, 44], "checkpoint": 42, "2305": 42, "13245": 42, "strictli": 43, "symmetr": [43, 52, 295, 297, 309], "scheme": 43, "asymmetr": [43, 56, 76, 78, 79, 112, 289, 382, 383, 405, 406, 443, 444, 531], "honor": 43, "faithfulli": 43, "elimin": 43, "typecast": [43, 123, 190, 286], "vice": [43, 56, 101], "versa": [43, 56, 101], "clearli": 43, "backbon": 44, "diffus": 44, "gpt": 44, "qk": 44, "d_k": 44, "causal": 44, "triangular": 44, "diagon": 44, "fill": [44, 47, 48, 56, 125, 162, 163, 164, 235, 240, 249, 250, 252, 253, 260, 268, 270, 282, 283, 378, 386, 387, 389, 390, 405, 420, 424, 443], "inf": [44, 113], "elsewher": [44, 421], "unchang": [44, 187, 195, 313, 541], "genindex": [44, 190], "greaterequ": [44, 190], "statictranspos": [44, 190, 286], "int4": 45, "exploit": 45, "kv": 45, "subsequ": [45, 56, 160, 164, 165, 209, 210, 274, 300, 319, 385, 386, 395, 432], "dynamicdequant": [45, 190, 286], "dynamicquant": [45, 190, 286], "group_shap": [45, 78, 188], "scale_k": 45, "zp_k": 45, "scale_v": 45, "zp_v": 45, "dt_fp": 45, "dt_int": 45, "c_g": 46, "c_ghw": 46, "group_normalization_forward": [46, 259, 301, 349, 403, 485, 537], "preprocess": 47, "classifi": 47, "depict": [47, 153, 164], "conv_prim_descr": 47, "maxim": [47, 319], "accomplish": 47, "manner": [47, 307, 525], "don": [47, 56, 233, 241, 246, 274, 369, 379, 382, 432], "find": [47, 114, 115, 116, 117, 118, 160, 242, 243, 246, 250, 253, 257, 278, 279, 382, 387, 390, 439], "look": [47, 164], "source_mem_descr": 47, "dest_mem_descr": 47, "weights_mem_descr": 47, "weight_memori": 47, "conv_source_memori": 47, "user_source_memori": 47, "get_desc": [47, 162, 163, 229, 234, 235, 236, 237, 239, 240, 246, 247, 248, 249, 253, 254, 260, 261, 263, 265, 267, 268, 270, 274, 281, 282, 307, 353, 361, 370, 371, 372, 373, 376, 378, 382, 384, 385, 386, 390, 391, 405, 407, 411, 416, 420, 421, 424, 432, 441, 443, 523], "reorder_prim_descr": 47, "conv_weights_memori": [47, 233, 235, 236, 237, 241, 369, 371, 372, 373, 379], "conv_dest_memori": 47, "durat": 47, "grab": 47, "infus": 47, "cast": [47, 52, 123, 141, 256, 395], "distribut": [47, 149, 162, 163, 171, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "fed": [48, 159, 242, 243, 257, 278], "predict": 48, "forward_train": [48, 50, 153, 165, 166, 209, 229, 230, 239, 254, 255, 259, 261, 262, 263, 264, 265, 269, 270, 273, 274, 275, 276, 281, 361, 363, 376, 391, 393, 403, 407, 409, 411, 414, 416, 422, 424, 430, 432, 433, 435, 441, 452, 456, 467, 473, 477, 487, 491, 499, 503, 507, 511, 515, 519, 529, 535, 550, 555, 559, 573], "suffix": [48, 395], "_train": 48, "versu": [48, 159], "_infer": 48, "answer": 48, "backward_data": [48, 166, 209, 454, 485, 501], "sens": [48, 181, 198, 246, 382], "backward_weight": [48, 166, 209], "solver": 48, "practic": [48, 144, 151, 165, 242, 243, 251, 257, 268, 278, 280, 371, 420, 421], "consider": [48, 382], "care": 48, "pooling_max": [48, 172, 234, 236, 237, 267, 269, 370, 372, 373, 420, 422, 527, 529], "slide": 48, "posit": [48, 49, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 75, 88, 93, 94, 95, 96, 97, 103, 104, 136, 164, 232, 307, 335, 367], "Of": [48, 530], "cours": [48, 164, 530], "again": [48, 153], "takeawai": 48, "former": [48, 52, 160, 164], "invoc": 48, "techniqu": 48, "perspect": [48, 151, 164, 395], "varieti": 48, "emit": 48, "unnecessari": [48, 144, 420], "bullet": 48, "9": [48, 49, 51, 177, 223, 242, 243, 257, 278, 397, 398, 400, 401, 421], "pick": [48, 268, 420, 421], "occasion": 48, "brain": 48, "workflow": [48, 396, 397, 398, 399, 400, 401, 402, 439], "workspace_desc": [48, 146, 229, 230, 236, 237, 263, 264, 265, 269, 274, 281, 361, 363, 372, 373, 411, 414, 416, 422, 432, 441, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "perfectli": 48, "inde": 48, "fwd": 48, "forward_primitive_desc": 48, "workspace_md": [48, 211], "primitive_forward": 48, "anywher": [48, 395], "els": [48, 93, 94, 162, 163, 233, 236, 237, 239, 240, 241, 242, 243, 246, 254, 257, 268, 274, 278, 279, 369, 372, 373, 376, 378, 379, 382, 391, 395, 432, 439], "bwd": 48, "primitive_backward": 48, "push": [49, 248, 249], "recent": [49, 148, 159], "focus": [49, 52, 144, 382], "shrink": [49, 52, 246, 382], "throughput": [49, 144, 159], "eight": 49, "offer": [49, 159], "pack": [49, 56, 162, 163, 164, 199, 204, 221, 228, 240, 247, 260, 282, 307, 326, 327, 378, 384, 405, 406, 443, 444, 525, 567, 568, 569], "cost": [49, 274, 421, 432], "dataset": [49, 371], "establish": 49, "q_": 49, "255": [49, 52, 212, 260, 405], "r_": 49, "127": [49, 52, 151, 249, 386], "alpha_": 49, "lceil": [49, 152], "rceil": [49, 152], "w_": [49, 52, 152, 153], "roundnearesteven": 49, "approx": [49, 149], "approxim": [49, 171], "t_": 49, "15": [49, 52, 149, 164, 177, 244, 245, 380, 381], "17": [49, 149, 164, 421], "12": [49, 149, 165, 177, 181, 229, 243, 262, 265, 361, 398, 409, 416], "96": [49, 210, 233, 234, 236, 237, 241, 242, 257, 260, 261, 268, 278, 369, 372, 373, 379, 405, 407, 421], "bigl": 49, "bigr": 49, "238": 49, "187": 49, "66": 49, "88": 49, "net": [49, 51, 233, 234, 241, 248, 249, 274, 283, 369, 370, 371, 379, 385, 386, 432], "uniformli": 49, "g_0": 49, "o_1": 49, "i_2": 49, "h_3": 49, "w_4": 49, "walk": 49, "treat": [50, 52, 151, 155, 159], "minibatch": [50, 144, 307], "flatten": 50, "dnnl_io": [50, 181], "dnnl_oi": [50, 181], "dnnl_oiw": [50, 181], "dnnl_oihw": [50, 181, 233, 241, 369, 379], "dnnl_oidhw": [50, 181], "onednn_jit_dump": 51, "dnnl_set_jit_dump": [51, 283, 319], "dnnl_dump_cpu_jit_avx2_conv_fwd_kernel_f32": 51, "bin": 51, "dnnl_dump_cpu_jit_avx_gemv_t_f32_kern": 51, "30": [51, 246, 249, 250, 382, 386, 387], "disassembl": 51, "objdump": 51, "mi386": 51, "xed": 51, "emul": 51, "sde": 51, "dnnl_dump_gpu_simple_reord": 51, "dnnl_dump_gpu_gen9_conv_fwd": 51, "iga64": 51, "assembli": 51, "emphas": 52, "signed": 52, "int8_t": [52, 246, 249, 260, 272, 282, 283, 292, 325, 349, 355, 382, 386, 405, 428, 443], "dnnl_gemm_u8s8s32": [52, 249, 283, 292], "averag": [52, 60, 146, 149, 171, 172, 309], "biggl": 52, "biggr": 52, "dnnl_gemm_s8s8s32": [52, 283, 292], "gru": [52, 171, 172, 181, 198, 263, 281, 318, 412, 441, 488, 489, 490, 491, 508, 509, 510, 511], "behind": [52, 164, 420], "xeon": [52, 173, 176, 413, 421], "e7": 52, "haswel": 52, "x1xx": 52, "skylak": 52, "vpmaddubsw": 52, "vpmaddwd": 52, "vpaddd": 52, "s16": 52, "int16_t": 52, "c_s32": [52, 246, 382], "a_u8": [52, 246, 260, 382, 405], "b_s8": [52, 246, 260, 282, 382, 405, 443], "u8s8s32_compute_avx512": 52, "ab_s16": 52, "vpmaddubsw_r": 52, "saturate_to_s16": 52, "caution": 52, "snippet": 52, "u8s8s32_comput": 52, "32767": 52, "int16_min": 52, "int16_max": 52, "64770": 52, "pitfal": [52, 164], "vpmovsxbw": 52, "vpmovzxbw": 52, "2x": 52, "u7": 52, "s7": 52, "63": [52, 149, 249, 289, 539], "worth": [52, 382, 395, 421], "data_": 52, "set_rnn_data_qparam": [52, 249, 386, 539], "set_rnn_weights_qparam": [52, 249, 386, 539], "128": [52, 162, 163, 165, 210, 212, 234, 240, 260, 266, 267, 268, 378, 405, 418, 420, 421], "w_max": 52, "x2xx": 52, "cascad": 52, "lake": 52, "vpdpbusd": 52, "u8s8s32_compute_avx512_dl_boost": 52, "real": [52, 151, 164, 181, 246, 382, 397, 398, 399, 400, 401, 402], "world": [52, 246, 382], "overcom": 52, "emploi": 52, "y_": 52, "a_s8": 52, "u8s8": 52, "s8s8s32_comput": 52, "32258": 52, "solv": [52, 162, 163, 240, 378], "overview": 52, "x_s8": 52, "precomput": [52, 248, 249, 371, 386], "embed": [52, 385, 386], "rescal": 52, "insignificantli": 52, "noth": [52, 162, 163, 240, 378], "meaningless": 52, "ia": 52, "volum": [52, 136, 307], "2a": 52, "2b": 52, "2c": [52, 248, 249], "325383": 52, "070u": 52, "futur": [52, 335], "319433": 52, "037": 52, "chapter": 52, "rodriguez": 52, "andr": 52, "et": 52, "al": 52, "white": 52, "paper": [52, 164], "2018": [52, 235, 248, 249, 274, 432], "axi": [53, 56, 66, 69, 70, 71, 73, 74, 75, 76, 78, 79, 86, 88, 93, 94, 95, 96, 99, 100, 112, 114, 115, 116, 117, 118, 119, 120, 128, 129, 137, 154, 155, 166, 188, 189, 211, 212, 238, 243, 275, 276, 283, 307, 320, 321, 374, 398, 433, 434, 435, 436, 542, 553, 555, 557, 559], "stat_desc": [53, 283, 304, 501, 503], "layer_normalization_forward": [53, 262, 304, 349, 409, 501, 537], "_ndim": 53, "_dim": [53, 56], "dnnl_tnc": [53, 153, 181], "dnnl_tn": [53, 181], "dnnl_nt": [53, 181], "dnnl_ldnc": [53, 153, 181], "unlik": [53, 78, 97, 123, 292, 325, 355, 400, 401, 483], "tnc": [53, 95, 96, 198, 229, 248, 249, 262, 263, 265, 274, 281, 361, 385, 386, 409, 411, 416, 432, 441], "dnnl_ntc": [53, 153, 181], "dnnl_bac": [53, 181, 198], "ldnc": [53, 95, 96, 198, 248, 249, 385, 386], "dnnl_type": [54, 164, 171, 175, 176, 180, 181, 201, 206, 208, 210, 212, 214, 216, 218, 220, 221, 481], "auxiliari": [54, 165, 256, 274, 395, 432], "dnnl_config": 54, "dnnl_version": [54, 283, 319], "dnnl_graph_typ": [54, 184, 189, 191, 193, 195, 482, 483], "dnnl_ukernel": [54, 162, 163, 228, 240, 378, 567, 568, 569], "dnnl_ukernel_typ": [54, 204], "libdnnl": [54, 149], "dnnl_library_typ": [54, 160], "dylib": 54, "bindnnl": 54, "dll": 54, "dnnlroot": 54, "getting_start": [54, 360, 395], "ldnnl": 54, "resolv": [54, 249, 385], "sure": [54, 56, 101, 162, 163, 240, 337, 378], "ld_library_path": 54, "dyld_library_path": 54, "rpath": 54, "appl": [54, 413], "secur": 54, "entitl": 54, "fly": [54, 395], "xcode": 54, "codesign": 54, "plist": 54, "xml": 54, "encod": [54, 166, 199, 211, 212, 221, 244, 245, 247, 248, 249, 307, 384, 385, 386, 525], "utf": 54, "doctyp": 54, "dtd": 54, "en": 54, "www": [54, 162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "propertylist": 54, "dict": 54, "eha": 54, "cl": [54, 149, 257, 258, 396, 400, 439], "microsoft": [54, 144, 160, 413], "msv": 54, "n_": 55, "local_s": [55, 233, 236, 237, 241, 264, 283, 305, 369, 372, 373, 379, 414, 513, 515], "12d": [56, 181, 198], "bs_0": 56, "bs_1": 56, "rng": [56, 313], "dnnl_runtime_dim_v": [56, 166, 250, 260, 283, 307, 308, 313, 324, 353, 354, 387, 388, 405, 406, 537, 545], "wildcard": [56, 190, 286, 307, 339], "hand": [56, 164, 181, 198, 307], "situat": [56, 421], "inconsist": [56, 165, 166], "being": [56, 151, 153, 201, 307, 314, 319, 396, 439, 525], "invalid": [56, 162, 163, 165, 166, 240, 311, 319, 334, 335, 378], "nd": [56, 110, 111, 164], "sake": [56, 164, 395], "prod_": 56, "mbox": [56, 147], "ax": [56, 93, 94, 101, 114, 115, 116, 117, 118, 119, 120, 147, 155, 166, 188, 189, 307, 525], "abc": [56, 198, 266, 307, 418, 525], "bac": [56, 198], "1x1x": 56, "x1": 56, "dnnl_arg_dropout_se": 56, "int_min": 56, "int_max": 56, "matric": [56, 161, 162, 163, 166, 246, 250, 260, 282, 292, 325, 355, 382, 387, 405, 443], "sgemm": [56, 250, 292, 349, 355, 360, 388], "ge": [57, 80, 87, 97, 110], "diff": [58, 90, 162, 163, 201, 211, 236, 237, 240, 241, 246, 250, 274, 290, 295, 297, 298, 301, 302, 304, 305, 309, 310, 313, 317, 318, 320, 321, 372, 373, 378, 379, 382, 387, 432, 450, 454, 463, 465, 469, 471, 475, 485, 489, 495, 497, 501, 505, 509, 513, 517, 527, 533, 542, 548, 551, 553, 557, 571], "_dst": [58, 90], "rule": [59, 77, 87, 101, 102, 105, 108, 135, 138, 212], "auto_broadcast": [59, 77, 87, 102, 105, 108, 125, 135, 138, 188, 189], "numpi": [59, 77, 87, 102, 105, 108, 125, 135, 138, 188, 189, 307], "denom": [60, 146], "exclude_pad": [60, 61, 188, 189], "move": [60, 61, 70, 71, 72, 73, 74, 75, 103, 104, 164, 247, 384, 385, 386, 390, 479, 492, 523, 537, 561], "s64": [60, 61, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 86, 88, 93, 94, 95, 96, 99, 100, 103, 104, 112, 114, 115, 116, 117, 118, 119, 120, 128, 129, 136, 137], "pads_begin": [60, 61, 70, 71, 72, 73, 74, 75, 103, 104, 188, 189, 242, 243, 257, 278, 397, 398, 400, 401], "auto_pad": [60, 61, 70, 71, 72, 73, 74, 75, 103, 104, 188, 189], "same_upp": [60, 61, 70, 71, 72, 73, 74, 75, 103, 104, 188, 189], "same_low": [60, 61, 70, 71, 72, 73, 74, 75, 103, 104, 188, 189], "pads_end": [60, 61, 70, 71, 72, 73, 74, 75, 103, 104, 188, 189, 242, 243, 257, 278, 397, 398, 400, 401], "rounding_typ": [60, 103, 188, 189], "floor": [60, 71, 103, 188, 189], "data_format": [60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 88, 93, 94, 103, 104, 110, 111, 165, 188, 189, 242, 243, 257, 278, 397, 398, 400, 401, 483], "interpret": [60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 88, 93, 94, 101, 103, 104, 136], "ncx": [60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 88, 93, 94, 103, 104, 110, 111, 188, 189, 242, 257, 278, 397, 400, 401], "nxc": [60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 88, 93, 94, 103, 104, 110, 111, 188, 189, 243, 398, 483], "srcshape": 61, "src_shape": [61, 93, 94, 188], "epsilon": [62, 63, 64, 88, 95, 96, 188, 189, 211, 212, 250, 262, 283, 290, 301, 304, 387, 409, 454, 456, 485, 487, 501, 503, 542, 544], "momentum": [62, 188, 189], "neither": [62, 64, 304, 390, 395, 396, 439, 501, 503], "running_mean": 62, "running_vari": 62, "batch_mean": 62, "batch_vari": 62, "diff_gamma": [64, 96], "diff_beta": [64, 96], "_valu": 67, "use_dst": [68, 81, 122, 127, 133, 140, 188, 189], "weights_format": [70, 71, 72, 73, 74, 75, 188, 189, 242, 243, 257, 278, 397, 398, 400, 401], "oix": [70, 71, 72, 73, 74, 75, 188, 189, 242, 257, 278, 397, 400, 401], "fist": 70, "stretch": [70, 71, 72, 73, 74, 75], "xio": [70, 71, 72, 73, 74, 75, 188, 189, 243, 398], "_channel": [70, 71, 72, 73, 74, 75], "_shape": [70, 71, 72, 73, 74, 75, 111], "firstli": [71, 101], "_pad": 71, "_h": 71, "_padding_h": 71, "output_pad": [71, 73, 74, 75, 188, 189], "dst_shape": [71, 93, 94, 125, 188, 189], "weights_shap": [72, 75, 188], "iox": [73, 74, 75, 188, 189], "xoi": [73, 74, 75, 188, 189], "zp": [76, 78, 79, 112, 188, 189, 243, 246, 382, 398], "zps_i": [76, 78, 79], "scale_i": [76, 112], "qtype": [76, 78, 79, 112, 188, 189, 243, 398], "per_tensor": [76, 78, 79, 112, 188, 189, 243, 398], "per_channel": [76, 78, 79, 110, 112, 188, 189, 243, 398], "scales_i": [78, 79], "channelnum": [78, 79, 114, 115, 116, 117, 118, 119, 120], "gx1": 78, "groupnum": 78, "zps_j": 78, "scales_j": 78, "groupsiz": 78, "gropup": 78, "src_dim": [78, 229, 230, 232, 238, 239, 247, 254, 255, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 281, 361, 363, 367, 374, 376, 384, 391, 393, 403, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437, 441], "group_siz": [78, 154, 275, 283, 320, 433, 553, 555], "exponenti": [83, 171, 172], "sqrt2": 84, "y": 88, "coeffici": [88, 97], "keep_stat": [88, 95, 188, 189], "use_affin": [88, 95, 96, 188, 189], "modul": [88, 95, 96, 149], "1e": [88, 95, 96, 246, 382], "span": [88, 95, 96], "_src": 90, "bilinear": [93, 94, 172, 188, 189, 317], "trilinear": [93, 94, 152, 172, 188, 189, 317], "coordinate_transformation_mod": [93, 94, 188, 189], "coordin": [93, 94, 199, 221], "resiz": [93, 94, 247, 384], "half_pixel": [93, 94, 188, 189], "align_corn": [93, 94, 188, 189], "x_resiz": [93, 94], "differenti": [93, 145, 160, 341], "begin_norm_axi": [95, 96, 188, 189], "small": [97, 144, 161, 162, 166, 421], "leakag": 97, "logarithm": [98, 171, 172], "formul": [99, 130, 131, 395], "dst_i": [99, 128, 135], "big": 99, "src_j": [99, 128], "logsoftmax": [100, 155, 171, 172, 190, 286], "unsqueez": 101, "transpose_a": [101, 188, 189, 251, 280, 399, 402], "transpose_b": [101, 188, 189, 251, 280, 399, 402], "_0": [102, 105], "distanc": [103, 104], "avgpoolbackward": [104, 190, 286], "ln": [106, 130, 155], "diff_": [107, 153], "3src": 107, "2src": 107, "parametr": 110, "per_channel_broadcast": [110, 188, 189], "uni": [110, 111, 165, 248, 249, 420, 421], "direction": [110, 111], "rightmost": [110, 274, 432], "shape_i": 110, "tensorflow": [111, 159, 164], "_forward": 111, "diff_slop": 111, "zp_i": 112, "infin": 113, "l1": [114, 149], "norm": [114, 115, 150, 171, 246, 250, 382, 387], "keep_dim": [114, 115, 116, 117, 118, 119, 120, 188, 189], "shapeof": [114, 115, 116, 117, 118, 119, 120], "l2": [115, 149, 246, 382], "root": [115, 132, 150, 171, 172], "cond": 125, "invalid_shap": [125, 194], "_0_i": 135, "_1_i": 135, "special_zero": [136, 188, 189], "keep": [136, 159, 161, 164, 187, 195, 212, 236, 237, 241, 274, 370, 372, 373, 379, 421, 432], "permut": [137, 181, 198, 283, 307, 525], "dnnl_ocl": [143, 202, 257, 258, 396, 400], "cl_mem": [143, 258, 283, 307, 308, 353, 395, 396, 523], "get_command_queu": [143, 258, 353, 396], "get_mem_object": [143, 258, 353, 396], "retain": 143, "destruct": [143, 525, 531, 539], "measur": [144, 165, 371], "affinit": 144, "tbb": [144, 149], "intention": 144, "nor": [144, 304, 390, 395, 396, 439, 501, 503], "principl": 144, "numactl": 144, "easi": 144, "modern": 144, "socket": [144, 421], "chip": 144, "tile": 144, "cluster": 144, "setup": [144, 149], "orient": 144, "latenc": [144, 149], "server": 144, "interleav": [144, 161], "chanc": 144, "traffic": 144, "omp_proc_bind": 144, "spread": 144, "omp_plac": 144, "omp_num_thread": [144, 421], "membind": 144, "cpunodebind": 144, "physcpubind": 144, "kmp_hw_subset": 144, "1t": 144, "costli": 145, "mitig": [145, 148, 249], "blob": [145, 211, 212, 283, 307, 308, 313, 340, 351, 353, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 525, 526, 528, 532, 534, 537, 542, 543, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "commit": [145, 165, 319], "hash": [145, 165, 319, 420, 574], "dnnl_version_t": [145, 283, 319, 349], "packag": [145, 160], "fetch": 145, "primitive_desc_bas": [145, 313, 349, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_cache_blob_id": [145, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_cache_blob": [145, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 537, 543, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "cache_miss": [145, 165], "cache_hit": [145, 165], "persistent_cache_hit": [145, 165], "store_cache_blob_on_disk": 145, "load_cache_blob_from_disk": 145, "conv_from_cache_blob": 145, "get_engine_cache_blob_id": [145, 353], "get_engine_cache_blob": [145, 353], "ocl_engin": 145, "get_blob": [145, 525], "deseri": 145, "dnnl_pooling_avg_include_pad": [146, 171, 172, 309], "dnnl_pooling_avg_exclude_pad": [146, 171, 172, 309], "nice": 146, "restor": 146, "itself": [146, 313, 395, 541, 561], "dnnl_pooling_max": [146, 171, 172, 233, 241, 309, 369, 379], "flt_max": 146, "dbl_max": 146, "area": [146, 165, 307, 525], "leaki": [147, 310], "trainabl": [147, 310], "Its": 147, "weights_md": [147, 211, 233, 266, 270, 369, 418, 424, 542], "repeat": [148, 420], "capac": [148, 283, 311, 334, 335, 349, 350], "exceed": [148, 166], "evict": [148, 311, 334], "hit": 148, "miss": [148, 149, 165, 188, 234, 236, 237, 248, 249, 370, 372, 373], "profile_cr": [148, 165], "onednn_primitive_cache_capac": 148, "dnnl_set_primitive_cache_capac": [148, 283, 311], "notifi": 149, "address": [149, 161, 164, 274, 340, 432], "onednn_jit_profil": 149, "tsc": [149, 319], "dnnl_set_jit_profiling_flag": [149, 283, 319], "box": 149, "overrid": [149, 157, 319], "dnnl_set_jit_profiling_jitdumpdir": [149, 283, 319], "timelin": 149, "chart": 149, "fp": [149, 289, 300, 319], "onednn_itt_task_level": 149, "trigger": [149, 421], "master": [149, 159], "amplx": 149, "knob": 149, "shapes_alexnet": 149, "nmi": 149, "watchdog": 149, "timer": 149, "impl": [149, 157, 166], "prb": 149, "gop": 149, "gfreq": 149, "gflop": 149, "0time": 149, "0gflop": 149, "avx512_common": [149, 421], "alexnet": [149, 233, 234, 235, 236, 237, 241, 369, 370, 371, 372, 373, 379], "conv1": [149, 234, 242, 257, 278, 369, 370, 397, 400, 401], "g1mb256ic3ih227oc96oh55kh11sh4ph0n": 149, "53": 149, "9726": 149, "4285": 149, "3096": 149, "81": 149, "22": 149, "5851": 149, "2389": 149, "74": 149, "conv2": [149, 234, 369, 370], "g2mb256ic96ih27oc256oh27kh5ph2n": 149, "104": 149, "696": 149, "20": [149, 246, 250, 259, 339, 382, 387, 403], "2195": 149, "5177": 149, "98": 149, "21": [149, 421], "9233": 149, "4775": 149, "conv3": [149, 234, 235, 371], "mb256ic256ih13oc384oh13kh3ph1n": 149, "68": 149, "904": 149, "5134": 149, "4441": 149, "57": 149, "18": [149, 165, 421], "1391": 149, "3798": 149, "conv4": [149, 234], "g2mb256ic384ih13oc384oh13kh3ph1n": 149, "51": 149, "678": 149, "7397": 149, "4401": 149, "97": [149, 165], "4623": 149, "4146": 149, "76": 149, "conv5": [149, 234], "g2mb256ic384ih13oc256oh13kh3ph1n": 149, "34": 149, "452": 149, "77148": 149, "4433": 149, "13": [149, 177, 181, 234, 235, 239, 254, 256, 371, 376, 391, 395], "50435": 149, "4051": 149, "skip": [149, 162, 163, 166, 240, 307, 327, 378, 399, 402, 523, 568], "mistrust": 149, "72": [149, 275, 433], "6726": 149, "avg": 149, "83": 149, "6142": 149, "csv": 149, "_jit_avx512_common_conv_fwd_kernel": 149, "300": 149, "128503": 149, "293": 149, "946143": 149, "285": 149, "549830": 149, "268": 149, "868599": 149, "715527": 149, "libgomp": 149, "func": [149, 236, 237, 241, 372, 373, 379], "0x194f0": 149, "186": 149, "604226": 149, "0x19370": 149, "82": 149, "609694": 149, "jit_avx512_co": 149, "35": 149, "682241": 149, "vmlinux": 149, "763433": 149, "1451": 149, "459338": 149, "outsid": [149, 325, 401, 402], "280": 149, "489764": 149, "434821": 149, "interv": 149, "2000": 149, "ue": 149, "2344": 149, "3131": 149, "24": [149, 164], "1246": 149, "2237": 149, "2988": 149, "5157": 149, "6731": 149, "4617": 149, "5369": 149, "4434": 149, "87": 149, "1371": 149, "4020": 149, "75": [149, 233, 234, 236, 237, 241, 369, 372, 373, 379], "428": 149, "4522": 149, "06": 149, "7986": 149, "4037": 149, "79": 149, "64233": 149, "4508": 149, "05": 149, "99841": 149, "3828": 149, "1404": 149, "85": 149, "7318": 149, "dtlb": 149, "lock": 149, "4k": 149, "fb": 149, "26": [149, 229, 265, 361, 416], "icach": 149, "micro": [149, 161], "itlb": 149, "bad": [149, 166], "specul": 149, "l3": 149, "dram": 149, "frequenc": 149, "clocktick": 149, "retir": 149, "cpi": 149, "rate": [149, 165], "x87": 149, "microcod": 149, "assist": 149, "jitdump": [149, 319], "perfmap": [149, 319], "jitdumpdir": [149, 319], "record": [149, 242, 243, 257, 278], "k1": [149, 234], "mb1ic32ih14oc32oh14kh3ph1n": 149, "resnet_50": 149, "res4a_branch2b": 149, "mb1ic32ih14oc32oh14kh3ph1nresnet_50": 149, "0032768": 149, "0131836": 149, "248": 149, "551": 149, "0262988": 149, "124": [149, 151], "599": 149, "woken": 149, "captur": [149, 480], "wrote": 149, "884": 149, "23102": 149, "inject": 149, "displai": [149, 165, 166], "stdio": [149, 233, 241, 252, 369, 379, 389], "n20": 149, "lost": 149, "23k": 149, "uhh": 149, "5775500000": 149, "symbol": [149, 160], "39": 149, "33": 149, "0x000000000001d8ba": 149, "29": 149, "41": [149, 421], "31475": 149, "jit_avx2_conv_fwd_kernel_f32": 149, "49": 149, "0x000000000001d712": 149, "47": 149, "jit_avx2_convolution_fwd_t": 149, "execute_forward": 149, "exec_ctx_t": 149, "lambda": 149, "52": 149, "0x000000000001d8be": 149, "93": 149, "0x000000000001d716": 149, "0x000000000001d8c5": 149, "0x000000000001d8c3": 149, "46": 149, "0x000000000001d71d": 149, "resolut": 149, "disassembli": 149, "brendan": 149, "gregg": 149, "excel": 149, "mathop": 150, "mul": [150, 171, 172, 315], "idl": 150, "ep": [150, 283, 315, 544], "kept": [151, 164, 181, 313, 541], "dnnl_arg_from": [151, 233, 234, 235, 236, 237, 241, 249, 252, 267, 283, 313, 369, 370, 371, 372, 373, 379, 386, 389, 420], "dnnl_arg_to": [151, 233, 234, 235, 236, 237, 241, 249, 252, 267, 283, 313, 369, 370, 371, 372, 373, 379, 386, 389, 420], "encount": [151, 165, 166, 370], "bug": [151, 192, 193], "team": 151, "dnnl_s8": [151, 177, 185, 196], "dnnl_f32": [151, 164, 177, 181, 185, 196, 233, 241, 252, 327, 369, 379, 389], "allevi": [151, 250, 387], "dt_src": 151, "memory_format": 151, "fmt_src": 151, "dt_dst": 151, "fmt_dst": 151, "upsampl": [152, 269, 422], "downsampl": 152, "f_h": 152, "f_w": 152, "ih_0": 152, "iw_0": 152, "ih_1": 152, "iw_1": 152, "nchw16c": [152, 164, 198], "_spatial": 152, "_size": 152, "unrol": 153, "srciter": 153, "dstiter": 153, "evalu": 153, "left2right": 153, "increas": [153, 159, 421], "right2left": 153, "decreas": [153, 155, 421], "bidirectional_concat": [153, 213, 248, 249, 385, 386], "dstlayer": 153, "bidirectional_sum": [153, 213], "srclayer": 153, "h_": [153, 171, 172], "And": [153, 164, 307, 525], "vanilla_rnn_forward": [153, 281, 318, 349, 441, 537, 539, 571], "vanilla_rnn_backward": [153, 318, 349, 537], "vanilla_rnn_pd": [153, 281, 441], "aprop": 153, "src_layer_desc": [153, 249, 274, 283, 318, 386, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "src_iter_desc": [153, 229, 263, 265, 274, 281, 283, 318, 361, 411, 416, 432, 441, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "weights_layer_desc": [153, 248, 249, 274, 283, 318, 385, 386, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "weights_iter_desc": [153, 229, 248, 249, 263, 265, 274, 281, 283, 318, 361, 385, 411, 416, 432, 441, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "bias_desc": [153, 235, 236, 274, 283, 295, 297, 302, 306, 318, 371, 372, 432, 450, 452, 467, 473, 489, 491, 499, 505, 507, 509, 511, 517, 519, 521, 551, 571, 573], "dst_layer_desc": [153, 248, 249, 274, 283, 318, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "dst_iter_desc": [153, 229, 263, 265, 274, 281, 283, 318, 361, 411, 416, 432, 441, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "a_t": [153, 249], "h_t": 153, "lstm_forward": [153, 248, 249, 265, 274, 318, 349, 385, 386, 416, 432, 517, 537], "lstm_backward": [153, 274, 318, 349, 432, 537], "lstm_pd": [153, 265, 416], "src_iter_h_desc": 153, "src_iter_c_desc": [153, 265, 274, 283, 318, 416, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "dst_iter_h_desc": 153, "dst_iter_c_desc": [153, 265, 274, 283, 318, 416, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "i_t": 153, "w_i": 153, "u_i": 153, "b_i": [153, 162], "f_t": 153, "w_f": 153, "u_f": 153, "b_f": 153, "c_t": [153, 171, 172], "u_": 153, "b_": [153, 171, 172], "o_t": 153, "w_o": 153, "u_o": 153, "b_o": 153, "weightslay": 153, "weightsit": 153, "srciterc": 153, "dstiterc": 153, "weights_peephole_desc": [153, 283, 318, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "p_i": 153, "p_f": 153, "p_o": 153, "p_": 153, "weights_peephol": 153, "weights_projection_desc": [153, 283, 318, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "weights_project": 153, "gru_forward": [153, 318, 349, 489, 537], "gru_backward": [153, 318, 349, 537], "gru_pd": 153, "u_t": 153, "w_u": 153, "u_u": 153, "b_u": 153, "r_t": [153, 171, 172], "w_r": 153, "u_r": 153, "b_r": 153, "lbr_gru_forward": [153, 263, 318, 349, 411, 509, 537], "lbr_gru_backward": [153, 318, 349, 537], "lbr_gru_pd": [153, 263, 411], "rsquo": 153, "augru_forward": [153, 229, 318, 349, 361, 450, 537], "augru_backward": [153, 318, 349, 537], "augru_pd": [153, 229, 361], "attention_desc": [153, 283, 318, 450, 452, 505, 507], "lbr_augru_forward": [153, 318, 349, 505, 537], "lbr_augru_backward": [153, 318, 349, 537], "lbr_augru_pd": 153, "diffweightslay": 153, "diffweightsit": 153, "diffweightspeephol": 153, "diffweightsproject": 153, "diff_weights_overwrit": [153, 215], "dnnl_arg_src_lay": [153, 229, 248, 249, 263, 265, 274, 281, 283, 313, 361, 385, 386, 411, 416, 432, 441], "srclayerattent": 153, "dnnl_arg_src_layer_attent": 153, "dnnl_arg_src_it": [153, 229, 248, 249, 263, 265, 274, 281, 283, 313, 361, 385, 411, 416, 432, 441], "dnnl_arg_src_iter_c": [153, 248, 249, 265, 274, 283, 313, 385, 416, 432], "dnnl_arg_weights_lay": [153, 229, 248, 249, 263, 265, 274, 281, 283, 313, 361, 385, 386, 411, 416, 432, 441], "dnnl_arg_weights_it": [153, 229, 248, 249, 263, 265, 274, 281, 283, 313, 361, 385, 386, 411, 416, 432, 441], "weightspeephol": 153, "dnnl_arg_weights_peephol": [153, 283, 313], "weightsproject": 153, "dnnl_arg_weights_project": [153, 283, 313], "dnnl_arg_dst_lay": [153, 229, 248, 249, 263, 265, 274, 281, 283, 313, 361, 385, 386, 411, 416, 432, 441], "dnnl_arg_dst_it": [153, 229, 248, 249, 263, 265, 274, 281, 283, 313, 361, 385, 411, 416, 432, 441], "dnnl_arg_dst_iter_c": [153, 248, 249, 265, 274, 283, 313, 385, 416, 432], "dnnl_workspac": 153, "diffsrclay": 153, "dnnl_arg_diff_src_lay": [153, 274, 283, 313, 432], "diffsrclayerattent": 153, "dnnl_arg_diff_src_layer_attent": 153, "diffsrcit": 153, "dnnl_arg_diff_src_it": [153, 274, 283, 313, 432], "diffsrciterc": 153, "dnnl_arg_diff_src_iter_c": [153, 274, 283, 313, 432], "dnnl_arg_diff_weights_lay": [153, 274, 283, 313, 432], "dnnl_arg_diff_weights_it": [153, 274, 283, 313, 432], "dnnl_arg_diff_weights_peephol": [153, 283, 313], "dnnl_arg_diff_weights_project": [153, 283, 313], "diffdstlay": 153, "dnnl_arg_diff_dst_lay": [153, 274, 283, 313, 432], "diffdstit": 153, "dnnl_arg_diff_dst_it": [153, 274, 283, 313, 432], "diffdstiterc": 153, "dnnl_arg_diff_dst_iter_c": [153, 274, 283, 313, 432], "With": [153, 159, 439], "dnnl_ldgo": [153, 181], "dnnl_ldigo": [153, 181], "dnnl_ldio": [153, 181], "dnnl_ldgoi": [153, 181], "dnnl_ldoi": [153, 181], "markdown": 153, "thought": 154, "formal": 154, "ug": 154, "nu": 155, "request": [155, 162, 163, 194, 222, 223, 240, 299, 307, 313, 314, 340, 354, 378, 542], "minor": [155, 319, 574], "piec": [155, 162, 163, 240, 307, 313, 378], "ulp": 155, "bigger": [156, 164], "dnnl_threadpool_ifac": [157, 564], "test_thread": 157, "threadpool_t": 157, "threadpool_interop": [157, 283, 287, 325, 349], "threadpool_ifac": [157, 355], "nonblockingthreadpool": 157, "unique_ptr": 157, "tp_": 157, "num_thread": 157, "hardware_concurr": 157, "get_num_thread": [157, 564], "numthread": 157, "get_in_parallel": [157, 564], "currentthreadid": 157, "get_flag": [157, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 564, 571, 573], "asynchron": [157, 390, 396, 420, 439, 564], "parallel_for": [157, 279, 439, 564], "fn": [157, 564], "nthr": [157, 165], "njob": 157, "schedul": 157, "balance211": 157, "new_content_goes_her": 158, "idea": [159, 164, 382], "spot": 159, "trade": 159, "site": [159, 480], "themselv": [159, 164, 242, 243, 251, 257, 278, 280, 395, 397, 398, 399, 400, 401, 402, 483], "afterward": 159, "incompat": [160, 166], "migrat": [160, 219, 220], "mkldnn": 160, "substr": [160, 166], "renam": 160, "macro": [160, 283], "v1": [160, 165, 246, 250, 382, 387], "mkldnn_memory_desc_t": 160, "md": [160, 164, 166, 238, 277, 374, 395, 421, 437, 523, 525], "mkldnn_block": 160, "exec": [160, 165, 258, 279, 420, 421], "mkldnn_args_src": 160, "dnnl_block": [160, 180, 197, 307, 525], "dnnl_args_src": 160, "mkldnn_dnnl_mangl": 160, "preprocessor": 160, "mkldnn_memory_desc_init_by_tag": 160, "dnnl_memory_desc_init_by_tag": 160, "mkldnn_arch_opt_flag": 160, "dnnl_arch_opt_flag": 160, "mkldnn_build_exampl": 160, "dnnl_build_exampl": 160, "mkldnn_build_for_ci": 160, "dnnl_build_for_ci": 160, "mkldnn_build_test": 160, "dnnl_build_test": 160, "mkldnn_cpu_runtim": 160, "dnnl_cpu_runtim": 160, "mkldnn_enable_concurrent_exec": 160, "dnnl_enable_concurrent_exec": [160, 219, 220], "mkldnn_enable_jit_profil": 160, "dnnl_enable_jit_profil": 160, "mkldnn_gpu_backend": 160, "dnnl_gpu_backend": 160, "mkldnn_gpu_runtim": 160, "mkldnn_install_mod": 160, "dnnl_install_mod": 160, "mkldnn_library_typ": 160, "mkldnn_thread": 160, "dnnl_thread": 160, "mkldnn_use_clang_sanit": 160, "dnnl_use_clang_sanit": 160, "mkldnn_verbos": 160, "dnnl_verbos": 160, "mkldnn_werror": 160, "dnnl_werror": 160, "find_packag": 160, "target_link_librari": 160, "project_app": 160, "Or": 160, "inclus": 160, "add_subdirectori": 160, "dnnl_dir": 160, "include_directori": 160, "thing": [160, 395, 420], "recompil": 160, "patch": [160, 319, 574], "region": [161, 307, 525], "consecut": [161, 307, 525], "granular": [161, 421], "fundament": 161, "freez": 161, "hoist": 161, "loop": [161, 162, 163, 240, 378], "brgemm": [162, 163, 240, 283, 287, 326, 356, 459, 492, 583], "a_i": [162, 249], "_arg": 162, "express": [162, 163, 165, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 397, 400, 401, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "pack_typ": [162, 163, 240, 283, 327, 329, 356, 378, 568, 569], "get_b_pack_typ": [162, 163, 240, 378, 568], "no_tran": [162, 163, 228, 240, 378, 569], "copyright": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "2024": [162, 163, 235, 240, 242, 243, 244, 245, 251, 254, 257, 259, 263, 267, 268, 274, 278, 279, 280, 281, 282, 378, 380, 381, 391, 403, 411, 432, 441, 443], "corpor": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 413, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "licens": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "apach": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "law": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "agre": [162, 163, 212, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "AS": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "basi": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "warranti": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "OF": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "permiss": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 403, 405, 407, 409, 411, 413, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "cmath": [162, 163, 229, 230, 231, 232, 236, 238, 239, 240, 244, 245, 246, 247, 250, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 281, 282, 361, 363, 365, 367, 372, 374, 376, 378, 380, 381, 382, 384, 387, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437, 441, 443], "iostream": [162, 163, 229, 230, 231, 232, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 372, 374, 376, 378, 380, 381, 382, 384, 387, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 422, 428, 430, 433, 435, 437, 439, 441, 443], "example_util": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 389, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443], "brgemm_exampl": [162, 163, 240, 283, 378], "engine_stream": [162, 163, 229, 230, 231, 232, 238, 239, 240, 247, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 281, 361, 363, 365, 367, 374, 376, 378, 384, 391, 393, 395, 403, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437, 441], "k_k": [162, 163, 240, 378], "48": [162, 163, 234, 240, 378], "printf": [162, 163, 233, 240, 241, 246, 250, 252, 369, 378, 379, 382, 387, 389], "n_call": [162, 163, 240, 378], "lda": [162, 163, 240, 250, 283, 292, 325, 327, 349, 355, 378, 387, 568], "ldb": [162, 163, 240, 250, 283, 292, 325, 327, 349, 355, 378, 387, 568], "ldc": [162, 163, 240, 250, 283, 292, 325, 327, 349, 355, 378, 387, 568], "ldd": [162, 163, 240, 283, 327, 378, 568], "batch_siz": [162, 163, 240, 283, 327, 378, 568], "a_dt": [162, 163, 240, 283, 327, 378, 568], "b_dt": [162, 163, 240, 283, 327, 378, 568], "c_dt": [162, 163, 240, 283, 327, 378, 568], "d_dt": [162, 163, 240, 283, 327, 378, 568], "a_dim": [162, 163, 240, 378], "b_dim": [162, 163, 240, 378], "c_dim": [162, 163, 240, 378], "d_dim": [162, 163, 240, 378], "binary_add_dim": [162, 163, 240, 378], "b_scales_dim": [162, 163, 240, 378], "a_user_data": [162, 163, 240, 378], "b_user_data": [162, 163, 240, 378], "binary_add_user_data": [162, 163, 240, 378], "b_scales_user_data": [162, 163, 240, 378], "d_data": [162, 163, 240, 378], "d_user_data": [162, 163, 240, 378], "sign_gen": [162, 163, 240, 378], "val": [162, 163, 240, 378], "holder": [162, 163, 240, 378], "a_f32_md": [162, 163, 240, 378], "b_f32_md": [162, 163, 240, 378], "binary_add_f32_md": [162, 163, 240, 378], "b_scales_f32_md": [162, 163, 240, 378], "d_f32_md": [162, 163, 240, 378], "a_f32_mem": [162, 163, 240, 282, 283, 378, 443], "b_f32_mem": [162, 163, 240, 260, 282, 378, 405, 443], "binary_add_f32_mem": [162, 163, 240, 378], "b_scales_f32_mem": [162, 163, 240, 378], "d_f32_mem": [162, 163, 240, 378], "a_md": [162, 163, 240, 246, 250, 260, 282, 378, 382, 387, 405, 443], "b_md": [162, 163, 240, 246, 250, 260, 282, 378, 382, 387, 405, 443], "binary_add_md": [162, 163, 240, 378], "b_scales_md": [162, 163, 240, 378], "c_md": [162, 163, 240, 246, 250, 260, 282, 378, 382, 387, 405, 443], "d_md": [162, 163, 240, 378], "a_mem": [162, 163, 240, 378], "b_mem": [162, 163, 240, 378], "binary_add_mem": [162, 163, 240, 378], "b_scales_mem": [162, 163, 240, 378], "c_mem": [162, 163, 240, 378], "d_mem": [162, 163, 240, 378], "a_ptr": [162, 163, 240, 283, 327, 378], "reinterpret_cast": [162, 163, 240, 378], "b_ptr": [162, 163, 240, 283, 327, 378], "a_dt_siz": [162, 163, 240, 378], "data_type_s": [162, 163, 240, 378, 523], "b_dt_size": [162, 163, 240, 378], "c_ptr": [162, 163, 240, 283, 327, 378], "brgemm_op": [162, 163, 240, 378], "brg": [162, 163, 165, 240, 378], "brg_po": [162, 163, 240, 378], "reusabl": [162, 163, 240, 378], "set_add_c": [162, 163, 240, 378, 568], "catch": [162, 163, 235, 236, 240, 247, 249, 256, 279, 372, 378, 384, 386, 395, 439], "example_allows_unimpl": [162, 163, 229, 235, 236, 240, 247, 249, 283, 361, 372, 378, 384, 386], "set_b_scal": [162, 163, 240, 378, 567, 568], "servic": [162, 163, 240, 287, 293, 378], "scratchpad_s": [162, 163, 240, 378], "get_scratchpad_s": [162, 163, 240, 378, 568], "b_block": [162, 163, 240, 378], "b_base_ptr": [162, 163, 240, 378], "blocked_b_s": [162, 163, 240, 378], "regardless": [162, 163, 240, 378], "need_pack": [162, 163, 240, 378], "pack32": [162, 163, 228, 240, 378], "vnni": [162, 163, 240, 378], "bfloat16_t": [162, 163, 240, 378], "incorpor": [162, 163, 240, 378, 421], "pack_b": [162, 163, 240, 378], "in_pack_typ": [162, 163, 240, 283, 327, 378, 569], "in_ld": [162, 163, 240, 283, 327, 378, 569], "out_ld": [162, 163, 240, 283, 327, 378, 569], "in_dt": [162, 163, 240, 283, 327, 378, 569], "out_dt": [162, 163, 240, 283, 327, 378, 569], "a_b_offset": [162, 163, 240, 283, 327, 378, 568], "a_offset_i": [162, 163, 240, 378], "b_offset_i": [162, 163, 240, 378], "make_pair": [162, 163, 240, 378], "set_hw_context": [162, 163, 240, 378, 568], "a_b": [162, 163, 240, 378], "acc_ptr": [162, 163, 240, 378], "a_b_po_offset": [162, 163, 240, 378], "a_offset_po": [162, 163, 240, 378], "b_offset_po": [162, 163, 240, 378], "emplace_back": [162, 163, 240, 378], "put": [162, 163, 236, 237, 240, 308, 353, 372, 373, 378], "sit": [162, 163, 240, 378], "bin_po_ptr": [162, 163, 240, 378], "push_back": [162, 163, 234, 236, 237, 238, 240, 248, 249, 277, 370, 372, 373, 374, 378, 385, 386, 437], "attr_param": [162, 163, 240, 283, 326, 327, 329, 356, 378, 492, 568], "set_post_ops_arg": [162, 163, 240, 378, 567], "is_execute_postops_valid": [162, 163, 240, 378, 568], "release_hw_context": [162, 163, 240, 378, 568], "clean": [162, 163, 233, 240, 241, 252, 369, 378, 379, 389, 421], "delet": [162, 163, 240, 378, 492], "verif": [162, 163, 240, 378], "uncondit": [162, 163, 240, 378], "user_d_mem": [162, 163, 240, 378], "saniti": [162, 163, 240, 256, 260, 378, 395, 405], "pop": [162, 163, 240, 378], "to_throw": [162, 163, 240, 378], "fabsf": [162, 163, 240, 378], "19e": [162, 163, 240, 378], "12g": [162, 163, 240, 378], "runtime_error": [162, 163, 194, 222, 240, 244, 245, 319, 378, 380, 381], "argc": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 391, 393, 395, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443], "char": [162, 163, 212, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 292, 319, 325, 341, 349, 355, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 480, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573, 574, 575], "argv": [162, 163, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 361, 363, 365, 367, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 387, 391, 393, 395, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443], "handle_example_error": [162, 163, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 361, 363, 365, 367, 372, 373, 374, 376, 378, 380, 381, 382, 384, 387, 391, 393, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "analyz": 164, "adjust": [164, 307, 525], "facilit": 164, "articl": [164, 421], "devot": 164, "multidimension": 164, "interchang": 164, "focu": 164, "phase": [164, 289, 531], "simpler": 164, "chw": 164, "displac": 164, "jump": 164, "plane": 164, "offset_nchw": 164, "adjac": 164, "border": 164, "contrari": [164, 382, 396, 439], "pixel": [164, 256, 395], "bvlc": 164, "caff": 164, "dnnl_format_tag_t": [164, 198, 233, 241, 283, 307, 349, 369, 379, 523], "quit": [164, 250, 256, 387, 395], "offset_nhwc": 164, "hwc": 164, "wc": 164, "bmp": 164, "color": 164, "24bit": 164, "recognit": 164, "outer": [164, 181], "offset_chwn": 164, "hwn": 164, "wn": 164, "dnnl_chwn": [164, 181], "artifici": 164, "disjoint": 164, "trivial": [164, 166, 530], "tip": 164, "stride_n": [164, 256, 395], "stride_c": [164, 256, 395], "stride_h": [164, 256, 395], "stride_w": [164, 256, 395], "dnnl_dims_t": [164, 181, 212, 233, 241, 252, 283, 289, 295, 296, 297, 307, 309, 339, 369, 379, 389, 483, 523], "dnnl_memory_desc_init_by_strid": 164, "dnnl_memory_desc_create_with_strid": [164, 283, 307], "behalf": 164, "great": 164, "nchw8c": [164, 198], "guess": [164, 382], "offset_nchw8c": 164, "slice": 164, "uppercas": 164, "distinguish": 164, "8c": 164, "dnnl_memory_desc_create_with_tag": [164, 181, 233, 241, 252, 283, 307, 369, 379, 389], "dnnl_nchw8c": [164, 181, 198], "ptrdiff_t": 164, "inner_nblk": 164, "inner_idx": [164, 211], "1st": [164, 181, 198, 307], "0st": [164, 307], "3rd": [164, 181], "inner_blk": [164, 211], "q_stride": 164, "q_inner_nblk": 164, "q_inner_idx": 164, "q_inner_blk": 164, "dnnl_memory_desc_queri": [164, 283, 307], "dnnl_query_strid": [164, 211, 212, 307], "dnnl_query_inner_nblk": 164, "dnnl_query_inner_idx": [164, 211, 212, 307], "dnnl_query_inner_blk": [164, 211, 212, 307], "memcmp": 164, "dnnl_max_ndim": [164, 283, 296], "tail": 164, "somehow": 164, "came": 164, "div_up": 164, "price": 164, "neglig": [164, 165, 421], "d0": [164, 166], "dnnl_memory_desc_get_s": [164, 283, 307], "phys_siz": 164, "eltwise_op": [164, 289, 531], "block_siz": 164, "c_pad": 164, "expect_stride_n": 164, "expect_stride_c": 164, "expect_stride_h": 164, "expect_stride_w": 164, "expect_stride_8c": 164, "expect_tru": 164, "get_padded_dim": [164, 525], "get_inner_nblk": [164, 525], "get_inner_idx": [164, 525], "get_inner_blk": [164, 525], "profile_exec": [165, 421], "onednn_verbose_timestamp": 165, "rel": 165, "gemm_api": 165, "legaci": 165, "dnnl_set_verbos": [165, 283, 319], "face": 165, "insight": 165, "256x256": 165, "25x256": 165, "v0": [165, 420, 421], "6afab8e57f65a8995685d97ba6f80fa6c24b87a0": 165, "dnnl_backend": 165, "memory_descriptor": 165, "problem_desc": 165, "exec_tim": 165, "partition_id": 165, "partition_kind": 165, "op_nam": 165, "144": 165, "break": 165, "spent": [165, 382], "tune": [165, 421], "led": 165, "breviti": [165, 246, 382], "src_u8": 165, "f0": [165, 420, 421], "brgemm_matmul": 165, "did": 165, "ic16ih7oc16oh7kh5ph2n": 165, "wip": 165, "1693533460193": 165, "346924": 165, "abcd16b": [165, 198, 421], "abcd16b16a": [165, 198], "bia_f32": 165, "mb2_ic16oc16_ih7oh7kh5sh1dh0ph2_iw7ow7kw5sw1dw0pw2": 165, "709961": 165, "1693533460194": 165, "199951": 165, "0161133": 165, "1693533460228": 165, "559082": 165, "16x16x5x5": 165, "724854": 165, "1693533460229": 165, "437012": 165, "481": 165, "1693533460259": 165, "165039": 165, "blk": 165, "2x16x7x7": 165, "349854": 165, "586914": 165, "604": 165, "1693533460272": 165, "332031": 165, "0358887": 165, "416992": 165, "052002": 165, "561035": 165, "0878906": 165, "1693533460313": 165, "719971": 165, "275146": 165, "1693533460314": 165, "072021": 165, "8389": 165, "__repro": 165, "ic16ih7oc16oh7kh5ph2nwip": 165, "comma": 165, "marker": 165, "millisecond": [165, 234, 421], "unix": 165, "epoch": 165, "kernel_cache_hit": 165, "nested_cache_hit": 165, "cpu2gpu": [165, 253], "gpu2cpu": [165, 253], "tensor_nam": 165, "extra_flag": 165, "synchron": [165, 307, 396, 420, 439, 523], "exit": [165, 258], "wall": 165, "group_norm": [166, 205, 360], "evenli": 166, "mandatori": [166, 327], "primitv": 166, "t0": [166, 274, 283, 432], "a0": 166, "a1": 166, "beyond": 166, "explanatori": [166, 480], "msg": [166, 283], "unavail": 166, "gnorm": 166, "fpmath": [166, 282, 300, 443, 539], "ip": 166, "miscellan": 166, "nest": 166, "pm": 166, "unsuccess": 166, "runtime_kind": 166, "d1": 166, "onednn_experimental_profil": 166, "exhaust": 166, "dnnl_common": [169, 178, 182, 224, 479, 480, 492, 561], "dnnl_accumulation_mode_strict": [169, 170, 289], "dnnl_accumulation_mode_relax": [169, 170, 289], "dnnl_accumulation_mode_ani": [169, 170, 289], "dnnl_accumulation_mode_s32": [169, 170, 289], "dnnl_accumulation_mode_f32": [169, 170, 289], "dnnl_accumulation_mode_f16": [169, 170, 289], "dnnl_common_typ": [170, 177, 179, 183, 223, 225, 574], "dnnl_alg_kind_undef": [171, 172], "dnnl_convolution_direct": [171, 172, 233, 241, 295, 369, 379], "0x1": [171, 175, 176, 189, 216], "dnnl_convolution_winograd": [171, 172, 295], "0x2": 171, "dnnl_convolution_auto": [171, 172, 295], "0x3": [171, 176], "dnnl_deconvolution_direct": [171, 172, 297], "0xa": 171, "dnnl_deconvolution_winograd": [171, 172, 297], "0xb": 171, "0x20": [171, 189], "0x100": 171, "0x1ff": 171, "0x2ff": 171, "0x3ff": 171, "dnnl_lrn_across_channel": [171, 172, 233, 241, 305, 369, 379], "0xaff": 171, "dnnl_lrn_within_channel": [171, 172, 305], "0xbff": 171, "dnnl_vanilla_rnn": [171, 172], "0x1fff": 171, "dnnl_vanilla_lstm": [171, 172], "0x2fff": 171, "dnnl_vanilla_gru": [171, 172], "0x3fff": 171, "dnnl_lbr_gru": [171, 172], "0x4fff": 171, "dnnl_vanilla_augru": [171, 172], "0x5fff": 171, "dnnl_lbr_augru": [171, 172], "0x6fff": 171, "dnnl_binary_add": [171, 172, 291], "0x1fff0": 171, "dnnl_binary_mul": [171, 172, 291], "0x1fff1": 171, "dnnl_binary_max": [171, 172, 291], "0x1fff2": 171, "dnnl_binary_min": [171, 172, 291], "0x1fff3": 171, "dnnl_binary_div": [171, 172, 291], "0x1fff4": 171, "dnnl_binary_sub": [171, 172, 291], "0x1fff5": 171, "dnnl_binary_g": [171, 172, 291], "0x1fff6": 171, "dnnl_binary_gt": [171, 172, 291], "0x1fff7": 171, "dnnl_binary_l": [171, 172, 291], "0x1fff8": 171, "dnnl_binary_lt": [171, 172, 291], "0x1fff9": 171, "dnnl_binary_eq": [171, 172, 291], "0x1fffa": 171, "dnnl_binary_n": [171, 172, 291], "0x1fffb": 171, "dnnl_binary_select": [171, 172], "0x1fffc": 171, "dnnl_resampling_nearest": [171, 172, 317], "0x2fff0": 171, "dnnl_resampling_linear": [171, 172, 317], "0x2fff1": 171, "dnnl_reduction_max": [171, 172, 315, 544], "dnnl_reduction_min": [171, 172, 315, 544], "dnnl_reduction_sum": [171, 172, 315, 544], "dnnl_reduction_mul": [171, 172, 315, 544], "dnnl_reduction_mean": [171, 172, 315, 544], "dnnl_reduction_norm_lp_max": [171, 172, 315, 544], "dnnl_reduction_norm_lp_sum": [171, 172, 315, 544], "dnnl_reduction_norm_lp_power_p_max": [171, 172, 315, 544], "dnnl_reduction_norm_lp_power_p_sum": [171, 172, 315, 544], "dnnl_softmax_accur": [171, 172, 321], "0x30000": 171, "dnnl_softmax_log": [171, 172, 321], "hyperbol": [171, 172], "tangent": [171, 172], "cumul": [171, 421], "gaussian": 171, "modif": 171, "w_c": [171, 172], "x_t": [171, 172], "c_x": [171, 172], "u_c": [171, 172], "c_h": [171, 172], "bias": [171, 274, 432], "augru": [171, 172, 318, 360, 362, 449, 450, 451, 452, 504, 505, 506, 507, 551], "pth": 171, "deconvolution_direct": [172, 254, 391, 471, 473], "deconvolution_winograd": [172, 471, 473], "eltwise_elu": 172, "eltwise_squar": 172, "eltwise_ab": 172, "eltwise_sqrt": 172, "eltwise_swish": 172, "eltwise_soft_relu": 172, "eltwise_mish": 172, "eltwise_logist": [172, 571, 573], "eltwise_exp": 172, "eltwise_gelu_tanh": 172, "eltwise_gelu_erf": 172, "eltwise_log": 172, "eltwise_clip": 172, "eltwise_clip_v2": 172, "eltwise_pow": 172, "eltwise_round": 172, "eltwise_hardswish": 172, "eltwise_hardsigmoid": 172, "eltwise_relu_use_dst_for_bwd": 172, "eltwise_tanh_use_dst_for_bwd": 172, "eltwise_elu_use_dst_for_bwd": 172, "eltwise_sqrt_use_dst_for_bwd": 172, "eltwise_logistic_use_dst_for_bwd": 172, "eltwise_exp_use_dst_for_bwd": 172, "eltwise_clip_v2_use_dst_for_bwd": 172, "lrn_across_channel": [172, 234, 236, 237, 264, 372, 373, 414, 513, 515], "lrn_within_channel": [172, 513, 515], "pooling_avg_include_pad": [172, 527, 529], "pooling_avg_exclude_pad": [172, 527, 529], "vanilla_rnn": 172, "vanilla_lstm": 172, "vanilla_gru": 172, "lbr_gru": [172, 411], "vanilla_augru": 172, "lbr_augru": 172, "binary_mul": [172, 231, 232, 365, 367], "binary_max": 172, "binary_min": 172, "binary_div": [172, 232, 367], "binary_sub": [172, 232, 367], "binary_g": 172, "binary_gt": 172, "binary_l": 172, "binary_lt": 172, "binary_eq": 172, "binary_n": 172, "binary_select": 172, "resampling_nearest": [172, 548, 550], "resampling_linear": [172, 273, 430, 548, 550], "reduction_max": 172, "reduction_min": 172, "reduction_sum": [172, 271, 426], "reduction_mul": 172, "reduction_mean": 172, "reduction_norm_lp_max": 172, "reduction_norm_lp_sum": 172, "reduction_norm_lp_power_p_max": 172, "reduction_norm_lp_power_p_sum": 172, "softmax_accur": [172, 276, 435, 557, 559], "softmax_log": [172, 557, 559], "rectifi": [172, 298, 396, 439], "linar": 172, "vanilla": [172, 281, 318, 442, 570, 571, 572, 573], "lrb": 172, "norm_lp_max": 172, "norm_lp_sum": 172, "norm_lp_power_p_max": 172, "norm_lp_power_p_sum": 172, "isa_default": [173, 319], "dnnl_cpu_isa_default": [173, 176, 319], "dnnl_cpu_isa_sse41": [173, 176], "dnnl_cpu_isa_avx": [173, 176], "dnnl_cpu_isa_avx2": [173, 176], "dnnl_cpu_isa_avx2_vnni": [173, 176], "dnnl_cpu_isa_avx2_vnni_2": [173, 176], "dnnl_cpu_isa_avx512_cor": [173, 176], "dnnl_cpu_isa_avx512_core_vnni": [173, 176], "dnnl_cpu_isa_avx512_core_bf16": [173, 176], "dnnl_cpu_isa_avx10_1_512": [173, 176], "dnnl_cpu_isa_avx512_core_fp16": [173, 176], "dnnl_cpu_isa_avx10_1_512_amx": [173, 176], "dnnl_cpu_isa_avx512_core_amx": [173, 176], "dnnl_cpu_isa_avx10_1_512_amx_fp16": [173, 176], "dnnl_cpu_isa_avx512_core_amx_fp16": [173, 176], "dnnl_cpu_isa_no_hint": [174, 175, 319], "dnnl_cpu_isa_prefer_ymm": [174, 175], "exclus": [174, 175, 307, 523], "0x0": [175, 176, 216], "0x7": 176, "0xf": 176, "0x1f": 176, "0x27": 176, "0x67": 176, "0xe7": 176, "0x1ef": 176, "0xfef": 176, "0x1fef": 176, "dnnl_data_type_undef": [177, 185, 196], "dnnl_f16": [177, 185, 196], "dnnl_bf16": [177, 185, 196], "dnnl_s32": [177, 185, 196], "dnnl_u8": [177, 185, 196], "dnnl_f64": [177, 196], "dnnl_boolean": [177, 185], "dnnl_f8_e5m2": [177, 185, 196], "dnnl_f8_e4m3": [177, 185, 196], "dnnl_s4": [177, 185, 196], "dnnl_u4": [177, 185, 196], "dnnl_e8m0": [177, 196], "dnnl_f4_e2m1": [177, 196], "dnnl_f4_e3m0": [177, 196], "dnnl_data_type_max": 177, "0x7fff": [177, 180, 206, 212], "compliant": [177, 196], "dnnl_any_engin": [178, 179], "dnnl_cpu": [178, 179, 241, 252, 379, 389], "dnnl_gpu": [178, 179, 252, 389], "dnnl_format_kind_undef": [180, 197, 295, 297, 302, 304, 306], "dnnl_format_kind_ani": [180, 197, 291, 295, 297, 302, 307, 310, 315, 317, 318], "dnnl_format_kind_spars": [180, 197], "dnnl_format_kind_max": 180, "dnnl_format_tag_undef": [181, 198], "dnnl_abcdef": [181, 198], "dnnl_abcdefg": [181, 198], "dnnl_abcdefgh": [181, 198], "dnnl_abcdefghi": [181, 198], "dnnl_abcdefghij": [181, 198], "dnnl_abcdefghijk": [181, 198], "dnnl_abcdefghijkl": [181, 198], "dnnl_ba": [181, 198, 307], "dnnl_bca": [181, 198], "dnnl_cab": [181, 198], "dnnl_cba": [181, 198], "dnnl_abdc": [181, 198], "dnnl_acbd": [181, 198], "dnnl_adbc": [181, 198], "dnnl_adcb": [181, 198], "dnnl_bacd": [181, 198], "dnnl_bcda": [181, 198], "dnnl_cdab": [181, 198], "dnnl_cdba": [181, 198], "dnnl_dcab": [181, 198], "dnnl_abdec": [181, 198], "dnnl_adecb": [181, 198], "dnnl_bcdea": [181, 198], "dnnl_cdeab": [181, 198], "dnnl_cdeba": [181, 198], "dnnl_decab": [181, 198], "dnnl_abcdf": [181, 198], "dnnl_abdefc": [181, 198], "dnnl_abdfc": [181, 198], "dnnl_acbdef": [181, 198], "dnnl_adefcb": [181, 198], "dnnl_defcab": [181, 198], "dnnl_abcdegf": [181, 198], "dnnl_abcdefhg": [181, 198], "dnnl_abcdefgih": [181, 198], "dnnl_abcdefghji": [181, 198], "dnnl_abcdefghikj": [181, 198], "dnnl_abcdefghijlk": [181, 198], "dnnl_abc16a": [181, 198], "dnnl_abc16a16b": [181, 198], "dnnl_abc32a32b": [181, 198], "dnnl_abc4a4b": [181, 198], "dnnl_abc16b": [181, 198], "dnnl_abc16b16a": [181, 198], "dnnl_abc4a": [181, 198], "dnnl_abc32b": [181, 198], "dnnl_abc4b": [181, 198], "dnnl_abc4b16a4b": [181, 198], "dnnl_abc2b8a4b": [181, 198], "dnnl_abc16b16a4b": [181, 198], "dnnl_abc16b16a2b": [181, 198], "dnnl_abc4b4a": [181, 198], "dnnl_abc8a16b2a": [181, 198], "dnnl_abc8a8b": [181, 198], "dnnl_abc8a4b": [181, 198], "dnnl_abc8b": [181, 198], "dnnl_abc8b16a2b": [181, 198], "dnnl_bac8a16b2a": [181, 198], "dnnl_abc8b8a": [181, 198], "dnnl_abcd16a": [181, 198], "dnnl_abcd8a": [181, 198], "dnnl_abcd16a16b": [181, 198], "dnnl_abcd32a": [181, 198], "dnnl_abcd32a32b": [181, 198], "dnnl_abcd16b": [181, 198], "dnnl_abcd16b16a": [181, 198], "dnnl_abcd16b16c": [181, 198], "dnnl_abcd16c16b": [181, 198], "dnnl_abcd4a": [181, 198], "dnnl_abcd32b": [181, 198], "dnnl_abcd4b": [181, 198], "dnnl_abcd4b16a4b": [181, 198], "dnnl_abcd16b16a4b": [181, 198], "dnnl_abcd16b16a2b": [181, 198], "dnnl_abcd4b4a": [181, 198], "dnnl_abcd4a4b": [181, 198], "dnnl_abcd2c4b2c": [181, 198], "dnnl_abcd4b8c2b": [181, 198], "dnnl_abcd4c16b4c": [181, 198], "dnnl_abcd2c8b4c": [181, 198], "dnnl_abcd16c16b4c": [181, 198], "dnnl_abcd16c16b2c": [181, 198], "dnnl_abcd4c4b": [181, 198], "dnnl_abcd4b4c": [181, 198], "dnnl_abcd8a16b2a": [181, 198], "dnnl_abcd2b8a4b": [181, 198], "dnnl_abcd8a8b": [181, 198], "dnnl_abcd8a4b": [181, 198], "dnnl_abcd8b": [181, 198], "dnnl_abcd4c8b2c": [181, 198], "dnnl_abcd8b16a2b": [181, 198], "dnnl_abcd8b16c2b": [181, 198], "dnnl_bacd8a16b2a": [181, 198], "dnnl_abcd8b8a": [181, 198], "dnnl_abcd8b8c": [181, 198], "dnnl_abcd8b4c": [181, 198], "dnnl_abcd8c16b2c": [181, 198], "dnnl_abcde8a16b2a": [181, 198], "dnnl_acbd8b16c2b": [181, 198], "dnnl_abcd8c8b": [181, 198], "dnnl_abcde16a": [181, 198], "dnnl_abcde32a": [181, 198], "dnnl_abcde16a16b": [181, 198], "dnnl_bacde8a16b2a": [181, 198], "dnnl_abcd2b4c2b": [181, 198], "dnnl_abcde4b16a4b": [181, 198], "dnnl_abcde2b8a4b": [181, 198], "dnnl_abcde16b": [181, 198], "dnnl_abcde16b16a": [181, 198], "dnnl_abcde16b16c": [181, 198], "dnnl_abcde16c16b": [181, 198], "dnnl_abcde2c8b4c": [181, 198], "dnnl_abcde4a": [181, 198], "dnnl_abcde32b": [181, 198], "dnnl_abcde4b": [181, 198], "dnnl_abcde4b4a": [181, 198], "dnnl_abcde4a4b": [181, 198], "dnnl_abcde4b4c": [181, 198], "dnnl_abcde2c4b2c": [181, 198], "dnnl_abcde4b8c2b": [181, 198], "dnnl_abcde4c16b4c": [181, 198], "dnnl_abcde16c16b4c": [181, 198], "dnnl_abcde16c16b2c": [181, 198], "dnnl_abcde4c4b": [181, 198], "dnnl_abcde8a": [181, 198], "dnnl_abcde8a8b": [181, 198], "dnnl_abcde8a4b": [181, 198], "dnnl_bacde16b16a": [181, 198], "dnnl_abcde8b": [181, 198], "dnnl_abcde8b16a2b": [181, 198], "dnnl_abcde8b16c2b": [181, 198], "dnnl_abcde4c8b2c": [181, 198], "dnnl_acbde8b16c2b": [181, 198], "dnnl_abcde8b8a": [181, 198], "dnnl_abcde32a32b": [181, 198], "dnnl_abcde8b8c": [181, 198], "dnnl_abcde8b4c": [181, 198], "dnnl_abc4a8b8a4b": [181, 198], "dnnl_abcd4a8b8a4b": [181, 198], "dnnl_abcde4a8b8a4b": [181, 198], "dnnl_bac4b8a8b4a": [181, 198], "dnnl_bacd4b8a8b4a": [181, 198], "dnnl_bacde4b8a8b4a": [181, 198], "dnnl_abcd2a8b8a2b": [181, 198], "dnnl_abcd4b8c8b4c": [181, 198], "dnnl_abcde4b8c8b4c": [181, 198], "dnnl_abcde2b8c8b2c": [181, 198], "dnnl_abcde8c16b2c": [181, 198], "dnnl_abcde8c8b": [181, 198], "dnnl_abcde2b4c2b": [181, 198], "dnnl_abcdef16b": [181, 198], "dnnl_abcdef16b16c": [181, 198], "dnnl_abcdef16c16b": [181, 198], "dnnl_abcdef4c16b4c": [181, 198], "dnnl_abcdef2c8b4c": [181, 198], "dnnl_abcdef4c8b2c": [181, 198], "dnnl_abcdef2b4c2b": [181, 198], "dnnl_abcdef4b": [181, 198], "dnnl_abcdef4c4b": [181, 198], "dnnl_abcdef4b4c": [181, 198], "dnnl_abcdef2c4b2c": [181, 198], "dnnl_abcdef4b8c2b": [181, 198], "dnnl_abcdef8b8c": [181, 198], "dnnl_abcdef8b4c": [181, 198], "dnnl_abcdef8c16b2c": [181, 198], "dnnl_abcdef4b8c8b4c": [181, 198], "dnnl_abcdef8b16c2b": [181, 198], "dnnl_acbdef8b16c2b": [181, 198], "dnnl_abcdef8c8b": [181, 198], "dnnl_abdc16b": [181, 198], "dnnl_abdc16b2c": [181, 198], "dnnl_abdc16b4c": [181, 198], "dnnl_abdc4b": [181, 198], "dnnl_abdc8b": [181, 198], "dnnl_abdec16b": [181, 198], "dnnl_abdec16b2c": [181, 198], "dnnl_abdec16b4c": [181, 198], "dnnl_abdec32b": [181, 198], "dnnl_abdec4b": [181, 198], "dnnl_abdec8b": [181, 198], "dnnl_abdefc16b": [181, 198], "dnnl_abdefc16b2c": [181, 198], "dnnl_acbdef16c16b": [181, 198], "dnnl_abdefc4b": [181, 198], "dnnl_abdefc8b": [181, 198], "dnnl_abcdef16a": [181, 198], "dnnl_abcdef32a": [181, 198], "dnnl_abedc16b": [181, 198], "dnnl_acb16a": [181, 198], "dnnl_acb16a2b": [181, 198], "dnnl_acb16a4b": [181, 198], "dnnl_acb4a": [181, 198], "dnnl_acb8a": [181, 198], "dnnl_acbd16b16c": [181, 198], "dnnl_acbd16c16b": [181, 198], "dnnl_acbde16b16c": [181, 198], "dnnl_acbde16c16b": [181, 198], "dnnl_acdb16a": [181, 198], "dnnl_acdb16a2b": [181, 198], "dnnl_acdb16a4b": [181, 198], "dnnl_acdb32a": [181, 198], "dnnl_acdb4a": [181, 198], "dnnl_acdb8a": [181, 198], "dnnl_acdeb16a": [181, 198], "dnnl_acdeb16a2b": [181, 198], "dnnl_acdeb4a": [181, 198], "dnnl_acdeb8a": [181, 198], "dnnl_adcb16a": [181, 198], "dnnl_bac16a16b": [181, 198], "dnnl_bac16b16a": [181, 198], "dnnl_bacd16a16b": [181, 198], "dnnl_bacd16b16a": [181, 198], "dnnl_acbd4c8b8c4b": [181, 198], "dnnl_acbde4c8b8c4b": [181, 198], "dnnl_acbdef4c8b8c4b": [181, 198], "dnnl_bacde16a16b": [181, 198], "dnnl_acbdef16b16c": [181, 198], "dnnl_abc16b32a": [181, 198], "dnnl_abc16b64a": [181, 198], "dnnl_abc4b32a4b": [181, 198], "dnnl_abc4b64a4b": [181, 198], "dnnl_abc8b32a2b": [181, 198], "dnnl_abc8b64a2b": [181, 198], "dnnl_ab16b16a": [181, 198], "dnnl_ab16b32a": [181, 198], "dnnl_ab16b64a": [181, 198], "dnnl_ab8b16a2b": [181, 198], "dnnl_ab8b32a2b": [181, 198], "dnnl_ab8b64a2b": [181, 198], "dnnl_ab4b16a4b": [181, 198], "dnnl_ab4b32a4b": [181, 198], "dnnl_ab4b64a4b": [181, 198], "dnnl_ab16b16a4b": [181, 198], "dnnl_abcd16b32a": [181, 198], "dnnl_abcd16b64a": [181, 198], "dnnl_abcd4b32a4b": [181, 198], "dnnl_abcd4b64a4b": [181, 198], "dnnl_abcd8b32a2b": [181, 198], "dnnl_abcd8b64a2b": [181, 198], "dnnl_abcde4b32a4b": [181, 198], "dnnl_abcde4b64a4b": [181, 198], "dnnl_abcde16b16a4b": [181, 198], "dnnl_abcde16b16a2b": [181, 198], "dnnl_abcde16b32a": [181, 198], "dnnl_abcde16b64a": [181, 198], "dnnl_abcde8b32a2b": [181, 198], "dnnl_abcde8b64a2b": [181, 198], "dnnl_abcdef16c16b4c": [181, 198], "dnnl_abcdef16c16b2c": [181, 198], "dnnl_ab32a32b8a4b": [181, 198], "dnnl_ab8a4b": [181, 198], "dnnl_ab32a32b8a2b": [181, 198], "dnnl_ab8a2b": [181, 198], "dnnl_abdc32d": [181, 198], "dnnl_abdc32d4c": [181, 198], "dnnl_abdec32": [181, 198], "dnnl_abdec32e2c": [181, 198], "dnnl_abdec32e4c": [181, 198], "dnnl_abdefc16b4c": [181, 198], "dnnl_acdeb16a4b": [181, 198], "dnnl_abcd16a16b2a": [181, 198], "dnnl_abc16a16b2a": [181, 198], "dnnl_abcd16b16c2b": [181, 198], "dnnl_abcde16b16c2b": [181, 198], "dnnl_acb32a": [181, 198], "dnnl_acb32a2b": [181, 198], "dnnl_acb32a4b": [181, 198], "dnnl_acb48a": [181, 198], "dnnl_acb48a2b": [181, 198], "dnnl_acb48a4b": [181, 198], "dnnl_acb64a": [181, 198], "dnnl_acb64a2b": [181, 198], "dnnl_acb64a4b": [181, 198], "dnnl_cba2b": [181, 198], "dnnl_cba4b": [181, 198], "dnnl_abdc32b": [181, 198], "dnnl_abdc32b2c": [181, 198], "dnnl_abdc32b4c": [181, 198], "dnnl_abdc48b": [181, 198], "dnnl_abdc48b2c": [181, 198], "dnnl_abdc48b4c": [181, 198], "dnnl_abdc64b": [181, 198], "dnnl_abdc64b2c": [181, 198], "dnnl_abdc64b4c": [181, 198], "dnnl_adcb2c": [181, 198], "dnnl_adcb4c": [181, 198], "dnnl_acdb32a2b": [181, 198], "dnnl_acdb32a4b": [181, 198], "dnnl_acdb48a": [181, 198], "dnnl_acdb48a2b": [181, 198], "dnnl_acdb48a4b": [181, 198], "dnnl_acdb64a": [181, 198], "dnnl_acdb64a2b": [181, 198], "dnnl_acdb64a4b": [181, 198], "dnnl_cdba2b": [181, 198], "dnnl_cdba4b": [181, 198], "dnnl_abdec32b2c": [181, 198], "dnnl_abdec32b4c": [181, 198], "dnnl_abdec48b": [181, 198], "dnnl_abdec48b2c": [181, 198], "dnnl_abdec48b4c": [181, 198], "dnnl_abdec64b": [181, 198], "dnnl_abdec64b2c": [181, 198], "dnnl_abdec64b4c": [181, 198], "dnnl_adecb2c": [181, 198], "dnnl_adecb4c": [181, 198], "dnnl_acdeb32a": [181, 198], "dnnl_acdeb32a2b": [181, 198], "dnnl_acdeb32a4b": [181, 198], "dnnl_acdeb48a": [181, 198], "dnnl_acdeb48a2b": [181, 198], "dnnl_acdeb48a4b": [181, 198], "dnnl_acdeb64a": [181, 198], "dnnl_acdeb64a2b": [181, 198], "dnnl_acdeb64a4b": [181, 198], "dnnl_cdeba2b": [181, 198], "dnnl_cdeba4b": [181, 198], "dnnl_abdefc32b": [181, 198], "dnnl_abdefc32b2c": [181, 198], "dnnl_abdefc32b4c": [181, 198], "dnnl_abdefc48b": [181, 198], "dnnl_abdefc48b2c": [181, 198], "dnnl_abdefc48b4c": [181, 198], "dnnl_abdefc64b": [181, 198], "dnnl_abdefc64b2c": [181, 198], "dnnl_abdefc64b4c": [181, 198], "dnnl_adefcb2c": [181, 198], "dnnl_adefcb4c": [181, 198], "dnnl_ab16b32a4b": [181, 198], "dnnl_ab16b48a4b": [181, 198], "dnnl_ab16b64a4b": [181, 198], "dnnl_ab16b16a2b": [181, 198], "dnnl_ab16b32a2b": [181, 198], "dnnl_ab16b48a2b": [181, 198], "dnnl_ab16b64a2b": [181, 198], "dnnl_abc16b32a4b": [181, 198], "dnnl_abc16b48a4b": [181, 198], "dnnl_abc16b64a4b": [181, 198], "dnnl_abc16b32a2b": [181, 198], "dnnl_abc16b48a2b": [181, 198], "dnnl_abc16b64a2b": [181, 198], "dnnl_abcd16b32a4b": [181, 198], "dnnl_abcd16b48a4b": [181, 198], "dnnl_abcd16b64a4b": [181, 198], "dnnl_abcd16b32a2b": [181, 198], "dnnl_abcd16b48a2b": [181, 198], "dnnl_abcd16b64a2b": [181, 198], "dnnl_abcde16b32a4b": [181, 198], "dnnl_abcde16b48a4b": [181, 198], "dnnl_abcde16b64a4b": [181, 198], "dnnl_abcde16b32a2b": [181, 198], "dnnl_abcde16b48a2b": [181, 198], "dnnl_abcde16b64a2b": [181, 198], "dnnl_abc32a16b": [181, 198], "dnnl_abcd32a16b": [181, 198], "dnnl_abcde32a16b": [181, 198], "dnnl_ab48a16b": [181, 198], "dnnl_ab48a32b": [181, 198], "dnnl_abc40a16b": [181, 198], "dnnl_abc40a32b": [181, 198], "dnnl_abc48b16c": [181, 198], "dnnl_abc48b32c": [181, 198], "dnnl_abcd40a16b": [181, 198], "dnnl_abcd40a32b": [181, 198], "dnnl_abcd32c": [181, 198], "dnnl_abdce32c": [181, 198], "dnnl_abdce32c2": [181, 198], "dnnl_ba16a16b2a": [181, 198], "dnnl_ba16a32b2a": [181, 198], "dnnl_ba16a48b2a": [181, 198], "dnnl_ba16a64b2a": [181, 198], "dnnl_ba16a16b4a": [181, 198], "dnnl_ba16a32b4a": [181, 198], "dnnl_ba16a48b4a": [181, 198], "dnnl_ba16a64b4a": [181, 198], "dnnl_abcd8a2b": [181, 198], "dnnl_abdec16c16b2c": [181, 198], "dnnl_abdec16c16b4c": [181, 198], "dnnl_abdefc16c16b2c": [181, 198], "dnnl_acb16b16a2b": [181, 198], "dnnl_acb16b16a4b": [181, 198], "dnnl_acdb16b16a2b": [181, 198], "dnnl_acdb16b16a4b": [181, 198], "dnnl_acdeb16b16a2b": [181, 198], "dnnl_abdefc16c16b4c": [181, 198], "dnnl_acdeb16b16a4b": [181, 198], "dnnl_acb16b32a2b": [181, 198], "dnnl_acb16b32a4b": [181, 198], "dnnl_acb16b48a2b": [181, 198], "dnnl_acb16b48a4b": [181, 198], "dnnl_acb16b64a2b": [181, 198], "dnnl_acb16b64a4b": [181, 198], "dnnl_abdc16c16b2c": [181, 198], "dnnl_abdc16c16b4c": [181, 198], "dnnl_abdc16c32b2c": [181, 198], "dnnl_abdc16c32b4c": [181, 198], "dnnl_abdc16c48b2c": [181, 198], "dnnl_abdc16c48b4c": [181, 198], "dnnl_abdc16c64b2c": [181, 198], "dnnl_abdc16c64b4c": [181, 198], "dnnl_acdb16b32a2b": [181, 198], "dnnl_acdb16b32a4b": [181, 198], "dnnl_acdb16b48a2b": [181, 198], "dnnl_acdb16b48a4b": [181, 198], "dnnl_acdb16b64a2b": [181, 198], "dnnl_acdb16b64a4b": [181, 198], "dnnl_abdec16c32b2c": [181, 198], "dnnl_abdec16c32b4c": [181, 198], "dnnl_abdec16c48b2c": [181, 198], "dnnl_abdec16c48b4c": [181, 198], "dnnl_abdec16c64b2c": [181, 198], "dnnl_abdec16c64b4c": [181, 198], "dnnl_acdeb16b32a2b": [181, 198], "dnnl_acdeb16b32a4b": [181, 198], "dnnl_acdeb16b48a2b": [181, 198], "dnnl_acdeb16b48a4b": [181, 198], "dnnl_acdeb16b64a2b": [181, 198], "dnnl_acdeb16b64a4b": [181, 198], "dnnl_abdefc16c32b2c": [181, 198], "dnnl_abdefc16c32b4c": [181, 198], "dnnl_abdefc16c48b2c": [181, 198], "dnnl_abdefc16c48b4c": [181, 198], "dnnl_abdefc16c64b2c": [181, 198], "dnnl_abdefc16c64b4c": [181, 198], "dnnl_decba16a": [181, 198], "dnnl_abc4a2b": [181, 198], "dnnl_abc8a2b": [181, 198], "dnnl_abcd8b2c": [181, 198], "dnnl_abcde4a2b": [181, 198], "dnnl_abcde8a2b": [181, 198], "dnnl_abcde40a16b": [181, 198], "dnnl_abcde40a32b": [181, 198], "dnnl_abcde8b2c": [181, 198], "dnnl_abcde4a8b8a2b": [181, 198], "dnnl_abcd4a8b8a2b": [181, 198], "dnnl_abc4a8b8a2b": [181, 198], "dnnl_abcdef4b8c8b2c": [181, 198], "dnnl_abcde4b8c8b2c": [181, 198], "dnnl_abcd4b8c8b2c": [181, 198], "dnnl_bacde4b8a8b2a": [181, 198], "dnnl_bacd4b8a8b2a": [181, 198], "dnnl_bac4b8a8b2a": [181, 198], "dnnl_acbdef4c8b8c2b": [181, 198], "dnnl_acbde4c8b8c2b": [181, 198], "dnnl_acbd4c8b8c2b": [181, 198], "dnnl_abcdef8b2c": [181, 198], "dnnl_ab32a16b": [181, 198], "dnnl_ab32a32b": [181, 198], "dnnl_ba4b8a8b2a": [181, 198], "dnnl_ba4b8a8b4a": [181, 198], "dnnl_abc32b16c": [181, 198], "dnnl_abc32b32c": [181, 198], "dnnl_acb4c8b8c2b": [181, 198], "dnnl_acb4c8b8c4b": [181, 198], "dnnl_abcd4a2b": [181, 198], "dnnl_abc2b8a16b4a": [181, 198], "dnnl_abcd2b8a16b4a": [181, 198], "dnnl_abcde2b8a16b4a": [181, 198], "dnnl_abc2a8b16a4b": [181, 198], "dnnl_abc2a8b16a2b": [181, 198], "dnnl_abc2b32a8b": [181, 198], "dnnl_abcd2a8b16a4b": [181, 198], "dnnl_abcd2a8b16a2b": [181, 198], "dnnl_acbd2c8b16c2b": [181, 198], "dnnl_abcd2b32a8b": [181, 198], "dnnl_abcd2c8b16c2b": [181, 198], "dnnl_abcde2a8b16a4b": [181, 198], "dnnl_abcde2a8b16a2b": [181, 198], "dnnl_acbde2c8b16c2b": [181, 198], "dnnl_abcde2b32a8b": [181, 198], "dnnl_abc2b8c16b2c": [181, 198], "dnnl_abcd2b8c16b2c": [181, 198], "dnnl_abcde2b8c16b2c": [181, 198], "dnnl_abcdef2b8c16b2c": [181, 198], "dnnl_bacde2b8a16b4a": [181, 198], "dnnl_bacd2b8a16b4a": [181, 198], "dnnl_bac2b8a16b4a": [181, 198], "dnnl_bacde2b8a16b2a": [181, 198], "dnnl_bacd2b8a16b2a": [181, 198], "dnnl_bac2b8a16b2a": [181, 198], "dnnl_abcde2c8b16c2b": [181, 198], "dnnl_abcdef2c8b16c2b": [181, 198], "dnnl_acbdef2c8b16c2b": [181, 198], "dnnl_abcd2b8c16b4c": [181, 198], "dnnl_abcde2b8c16b4c": [181, 198], "dnnl_ba4b8a16b2a": [181, 198], "dnnl_ba4b8a16b4a": [181, 198], "dnnl_acb4c8b16c2b": [181, 198], "dnnl_acb4c8b16c4b": [181, 198], "dnnl_ba16a16b": [181, 198], "dnnl_ba16a32b": [181, 198], "dnnl_ba16a48b": [181, 198], "dnnl_ba16a64b": [181, 198], "dnnl_acb16c2b": [181, 198], "dnnl_acb16c4b": [181, 198], "dnnl_ba16b2a": [181, 198], "dnnl_ba16b4a": [181, 198], "dnnl_abc16b16c": [181, 198], "dnnl_abc16b32c": [181, 198], "dnnl_ab16a16b": [181, 198], "dnnl_ab16a32b": [181, 198], "dnnl_abcde16a16b2a": [181, 198], "dnnl_abcdef16b16c2b": [181, 198], "dnnl_acedb16a": [181, 198], "dnnl_abdfec16b": [181, 198], "dnnl_abdec64e2c": [181, 198], "dnnl_abdec64e4c": [181, 198], "dnnl_acb16b16c": [181, 198], "dnnl_acb16b32c": [181, 198], "dnnl_acb16b48c": [181, 198], "dnnl_acb16b64c": [181, 198], "dnnl_acb16b16c2b": [181, 198], "dnnl_acb16b32c2b": [181, 198], "dnnl_acb16b48c2b": [181, 198], "dnnl_acb16b64c2b": [181, 198], "dnnl_acb16b16c4b": [181, 198], "dnnl_acb16b32c4b": [181, 198], "dnnl_acb16b48c4b": [181, 198], "dnnl_acb16b64c4b": [181, 198], "dnnl_abcd4c": [181, 198], "dnnl_abcde4c": [181, 198], "dnnl_abcdef4c": [181, 198], "dnnl_abcde32c": [181, 198], "dnnl_abcdef32c": [181, 198], "dnnl_abcd16a32b": [181, 198], "dnnl_decba8a": [181, 198], "dnnl_acdefb16b32c2b": [181, 198], "dnnl_acdefb16b32c4b": [181, 198], "dnnl_acdefb16b48c2b": [181, 198], "dnnl_acdefb16b48c4b": [181, 198], "dnnl_acdefb16b64c2b": [181, 198], "dnnl_acdefb16b64c4b": [181, 198], "dnnl_bcdea16a32b2a": [181, 198], "dnnl_bcdea16a32b4a": [181, 198], "dnnl_bcdea16a48b2a": [181, 198], "dnnl_bcdea16a48b4a": [181, 198], "dnnl_bcdea16a64b2a": [181, 198], "dnnl_bcdea16a64b4a": [181, 198], "dnnl_acdefb32c": [181, 198], "dnnl_acdefb32c2b": [181, 198], "dnnl_acdefb32c4b": [181, 198], "dnnl_acdefb48c": [181, 198], "dnnl_acdefb48c2b": [181, 198], "dnnl_acdefb48c4b": [181, 198], "dnnl_acdefb64c": [181, 198], "dnnl_acdefb64c2b": [181, 198], "dnnl_acdefb64c4b": [181, 198], "dnnl_bcdea32b": [181, 198], "dnnl_bcdea32b2a": [181, 198], "dnnl_bcdea32b4a": [181, 198], "dnnl_bcdea48b": [181, 198], "dnnl_bcdea48b2a": [181, 198], "dnnl_bcdea48b4a": [181, 198], "dnnl_bcdea64b": [181, 198], "dnnl_bcdea64b2a": [181, 198], "dnnl_bcdea64b4a": [181, 198], "dnnl_bca32b": [181, 198], "dnnl_bca32b2a": [181, 198], "dnnl_bca32b4a": [181, 198], "dnnl_bca48b": [181, 198], "dnnl_bca48b2a": [181, 198], "dnnl_bca48b4a": [181, 198], "dnnl_bca64b": [181, 198], "dnnl_bca64b2a": [181, 198], "dnnl_bca64b4a": [181, 198], "dnnl_acdb32c": [181, 198], "dnnl_acdb32c2b": [181, 198], "dnnl_acdb32c4b": [181, 198], "dnnl_acdb48c": [181, 198], "dnnl_acdb48c2b": [181, 198], "dnnl_acdb48c4b": [181, 198], "dnnl_acdb64c": [181, 198], "dnnl_acdb64c2b": [181, 198], "dnnl_acdb64c4b": [181, 198], "dnnl_bca16a16b2a": [181, 198], "dnnl_bca16a16b4a": [181, 198], "dnnl_bcda16a16b2a": [181, 198], "dnnl_bcda16a16b4a": [181, 198], "dnnl_bcdea16a16b2a": [181, 198], "dnnl_bcdea16a16b4a": [181, 198], "dnnl_acdb16b16c2b": [181, 198], "dnnl_acdb16b16c4b": [181, 198], "dnnl_acdeb16b16c2b": [181, 198], "dnnl_acdeb16b16c4b": [181, 198], "dnnl_acdefb16b16c2b": [181, 198], "dnnl_acdefb16b16c4b": [181, 198], "dnnl_bca16a32b2a": [181, 198], "dnnl_bca16a32b4a": [181, 198], "dnnl_bca16a48b2a": [181, 198], "dnnl_bca16a48b4a": [181, 198], "dnnl_bca16a64b2a": [181, 198], "dnnl_bca16a64b4a": [181, 198], "dnnl_acdb16b32c2b": [181, 198], "dnnl_acdb16b32c4b": [181, 198], "dnnl_acdb16b48c2b": [181, 198], "dnnl_acdb16b48c4b": [181, 198], "dnnl_acdb16b64c2b": [181, 198], "dnnl_acdb16b64c4b": [181, 198], "dnnl_bcda16a32b2a": [181, 198], "dnnl_bcda16a32b4a": [181, 198], "dnnl_bcda16a48b2a": [181, 198], "dnnl_bcda16a48b4a": [181, 198], "dnnl_bcda16a64b2a": [181, 198], "dnnl_bcda16a64b4a": [181, 198], "dnnl_acdeb16b32c2b": [181, 198], "dnnl_acdeb16b32c4b": [181, 198], "dnnl_acdeb16b48c2b": [181, 198], "dnnl_acdeb16b48c4b": [181, 198], "dnnl_acdeb16b64c2b": [181, 198], "dnnl_acdeb16b64c4b": [181, 198], "dnnl_bca16b": [181, 198], "dnnl_bca16b2a": [181, 198], "dnnl_bca16b4a": [181, 198], "dnnl_bcda16b": [181, 198], "dnnl_bcda16b2a": [181, 198], "dnnl_bcda16b4a": [181, 198], "dnnl_bcdea16b": [181, 198], "dnnl_bcdea16b2a": [181, 198], "dnnl_bcdea16b4a": [181, 198], "dnnl_acdb16c": [181, 198], "dnnl_acdb16c2b": [181, 198], "dnnl_acdb16c4b": [181, 198], "dnnl_acdeb16c": [181, 198], "dnnl_acdeb16c2b": [181, 198], "dnnl_acdeb16c4b": [181, 198], "dnnl_acdefb16c": [181, 198], "dnnl_acdefb16c2b": [181, 198], "dnnl_acdefb16c4b": [181, 198], "dnnl_bcda32b": [181, 198], "dnnl_bcda32b2a": [181, 198], "dnnl_bcda32b4a": [181, 198], "dnnl_bcda48b": [181, 198], "dnnl_bcda48b2a": [181, 198], "dnnl_bcda48b4a": [181, 198], "dnnl_bcda64b": [181, 198], "dnnl_bcda64b2a": [181, 198], "dnnl_bcda64b4a": [181, 198], "dnnl_acdeb32c": [181, 198], "dnnl_acdeb32c2b": [181, 198], "dnnl_acdeb32c4b": [181, 198], "dnnl_acdeb48c": [181, 198], "dnnl_acdeb48c2b": [181, 198], "dnnl_acdeb48c4b": [181, 198], "dnnl_acdeb64c": [181, 198], "dnnl_acdeb64c2b": [181, 198], "dnnl_acdeb64c4b": [181, 198], "dnnl_acb24a": [181, 198], "dnnl_acdb24a": [181, 198], "dnnl_acdeb24a": [181, 198], "dnnl_abdc24b": [181, 198], "dnnl_abdec24b": [181, 198], "dnnl_abdefc24b": [181, 198], "dnnl_abdc16d": [181, 198], "dnnl_abdec16": [181, 198], "dnnl_abdce16c": [181, 198], "dnnl_acb24a2b": [181, 198], "dnnl_acdb24a2b": [181, 198], "dnnl_acdeb24a2b": [181, 198], "dnnl_abdc24b2c": [181, 198], "dnnl_abdec24b2c": [181, 198], "dnnl_abdefc24b2c": [181, 198], "dnnl_acb8a2b": [181, 198], "dnnl_acdb8a2b": [181, 198], "dnnl_acdeb8a2b": [181, 198], "dnnl_abdc8b2c": [181, 198], "dnnl_abdec8b2c": [181, 198], "dnnl_abdefc8b2c": [181, 198], "dnnl_ab8b32a": [181, 198], "dnnl_abc8b32a": [181, 198], "dnnl_abcd8b32a": [181, 198], "dnnl_abcde8b32a": [181, 198], "dnnl_ab8b24a": [181, 198], "dnnl_abc8b24a": [181, 198], "dnnl_abcd8b24a": [181, 198], "dnnl_abcde8b24a": [181, 198], "dnnl_ab8b16a": [181, 198], "dnnl_abc8b16a": [181, 198], "dnnl_abcd8b16a": [181, 198], "dnnl_abcde8b16a": [181, 198], "dnnl_ab8b8a": [181, 198], "dnnl_ab4b8a4b": [181, 198], "dnnl_ab4b24a4b": [181, 198], "dnnl_abc4b8a4b": [181, 198], "dnnl_abc4b24a4b": [181, 198], "dnnl_abcd4b8a4b": [181, 198], "dnnl_abcd4b24a4b": [181, 198], "dnnl_abcde4b8a4b": [181, 198], "dnnl_abcde4b24a4b": [181, 198], "dnnl_ab8b24a2b": [181, 198], "dnnl_abc8b24a2b": [181, 198], "dnnl_abcd8b24a2b": [181, 198], "dnnl_abcde8b24a2b": [181, 198], "dnnl_ab8b8a2b": [181, 198], "dnnl_abc8b8a2b": [181, 198], "dnnl_abcd8b8a2b": [181, 198], "dnnl_abcde8b8a2b": [181, 198], "dnnl_acb24a4b": [181, 198], "dnnl_acdb24a4b": [181, 198], "dnnl_acdeb24a4b": [181, 198], "dnnl_abdc24b4c": [181, 198], "dnnl_abdec24b4c": [181, 198], "dnnl_abdefc24b4c": [181, 198], "dnnl_acb8a4b": [181, 198], "dnnl_acdb8a4b": [181, 198], "dnnl_acdeb8a4b": [181, 198], "dnnl_abdc8b4c": [181, 198], "dnnl_abdec8b4c": [181, 198], "dnnl_abdefc8b4c": [181, 198], "dnnl_bca8b": [181, 198], "dnnl_bca8b2a": [181, 198], "dnnl_bcda8b": [181, 198], "dnnl_bcda8b2a": [181, 198], "dnnl_bcdea8b": [181, 198], "dnnl_bcdea8b2a": [181, 198], "dnnl_acdb8c": [181, 198], "dnnl_acdb8c2b": [181, 198], "dnnl_acdeb8c": [181, 198], "dnnl_acdeb8c2b": [181, 198], "dnnl_acdefb8c": [181, 198], "dnnl_acdefb8c2b": [181, 198], "dnnl_bca24b": [181, 198], "dnnl_bca24b2a": [181, 198], "dnnl_bcda24b": [181, 198], "dnnl_bcda24b2a": [181, 198], "dnnl_bcdea24b": [181, 198], "dnnl_bcdea24b2a": [181, 198], "dnnl_acdb24c": [181, 198], "dnnl_acdb24c2b": [181, 198], "dnnl_acdeb24c": [181, 198], "dnnl_acdeb24c2b": [181, 198], "dnnl_acdefb24c": [181, 198], "dnnl_acdefb24c2b": [181, 198], "dnnl_bca8b4a": [181, 198], "dnnl_bcda8b4a": [181, 198], "dnnl_bcdea8b4a": [181, 198], "dnnl_acdb8c4b": [181, 198], "dnnl_acdeb8c4b": [181, 198], "dnnl_acdefb8c4b": [181, 198], "dnnl_bca24b4a": [181, 198], "dnnl_bcda24b4a": [181, 198], "dnnl_bcdea24b4a": [181, 198], "dnnl_acdb24c4b": [181, 198], "dnnl_acdeb24c4b": [181, 198], "dnnl_acdefb24c4b": [181, 198], "dnnl_ab16b48a": [181, 198], "dnnl_abc16b48a": [181, 198], "dnnl_abcd16b48a": [181, 198], "dnnl_abcde16b48a": [181, 198], "dnnl_abc16a4b": [181, 198], "dnnl_abcd16a4b": [181, 198], "dnnl_abcde16a4b": [181, 198], "dnnl_defcba16a": [181, 198], "dnnl_defcba8a": [181, 198], "dnnl_acb16b64a": [181, 198], "dnnl_acdb16b64a": [181, 198], "dnnl_acdeb16b64a": [181, 198], "dnnl_acb16b48a": [181, 198], "dnnl_acdb16b48a": [181, 198], "dnnl_acdeb16b48a": [181, 198], "dnnl_acb16b32a": [181, 198], "dnnl_acdb16b32a": [181, 198], "dnnl_acdeb16b32a": [181, 198], "dnnl_acb16b16a": [181, 198], "dnnl_acdb16b16a": [181, 198], "dnnl_acdeb16b16a": [181, 198], "dnnl_acb8b32a": [181, 198], "dnnl_acdb8b32a": [181, 198], "dnnl_acdeb8b32a": [181, 198], "dnnl_acb8b24a": [181, 198], "dnnl_acdb8b24a": [181, 198], "dnnl_acdeb8b24a": [181, 198], "dnnl_acb8b16a": [181, 198], "dnnl_acdb8b16a": [181, 198], "dnnl_acdeb8b16a": [181, 198], "dnnl_acb8b8a": [181, 198], "dnnl_acdb8b8a": [181, 198], "dnnl_acdeb8b8a": [181, 198], "dnnl_acb8b64a2b": [181, 198], "dnnl_acdb8b64a2b": [181, 198], "dnnl_acdeb8b64a2b": [181, 198], "dnnl_acb8b32a2b": [181, 198], "dnnl_acdb8b32a2b": [181, 198], "dnnl_acdeb8b32a2b": [181, 198], "dnnl_acb8b24a2b": [181, 198], "dnnl_acdb8b24a2b": [181, 198], "dnnl_acdeb8b24a2b": [181, 198], "dnnl_acb8b16a2b": [181, 198], "dnnl_acdb8b16a2b": [181, 198], "dnnl_acdeb8b16a2b": [181, 198], "dnnl_acb8b8a2b": [181, 198], "dnnl_acdb8b8a2b": [181, 198], "dnnl_acdeb8b8a2b": [181, 198], "dnnl_acb4b64a4b": [181, 198], "dnnl_acdb4b64a4b": [181, 198], "dnnl_acdeb4b64a4b": [181, 198], "dnnl_acb4b32a4b": [181, 198], "dnnl_acdb4b32a4b": [181, 198], "dnnl_acdeb4b32a4b": [181, 198], "dnnl_acb4b24a4b": [181, 198], "dnnl_acdb4b24a4b": [181, 198], "dnnl_acdeb4b24a4b": [181, 198], "dnnl_acb4b16a4b": [181, 198], "dnnl_acdb4b16a4b": [181, 198], "dnnl_acdeb4b16a4b": [181, 198], "dnnl_acb4b8a4b": [181, 198], "dnnl_acdb4b8a4b": [181, 198], "dnnl_acdeb4b8a4b": [181, 198], "dnnl_ab4a": [181, 198], "dnnl_ab8a": [181, 198], "dnnl_ba4b4a": [181, 198], "dnnl_ba8b4a": [181, 198], "dnnl_ba2a24b": [181, 198], "dnnl_acb2b24c": [181, 198], "dnnl_ba2a8b": [181, 198], "dnnl_acb2b8c": [181, 198], "dnnl_ba8a24b": [181, 198], "dnnl_acb8b24c": [181, 198], "dnnl_ba8a16b": [181, 198], "dnnl_acb8b16c": [181, 198], "dnnl_ba8a8b": [181, 198], "dnnl_acb8b8c": [181, 198], "dnnl_bcad": [181, 198], "dnnl_cabd": [181, 198], "dnnl_dabc": [181, 198], "dnnl_ab32a": [181, 198], "dnnl_acbd8b8c": [181, 198], "dnnl_acbde8b8c": [181, 198], "dnnl_bac8a8b": [181, 198], "dnnl_bacd8a8b": [181, 198], "dnnl_bacde8a8b": [181, 198], "dnnl_acbdef8b8c": [181, 198], "dnnl_abdec16e4c": [181, 198], "dnnl_abdc16d4c": [181, 198], "dnnl_format_tag_last": [181, 198], "dnnl_cn": 181, "dnnl_owi": 181, "dnnl_woi": [181, 198], "dnnl_iwo": 181, "dnnl_hwoi": [181, 198], "dnnl_ohwi": 181, "dnnl_ihwo": 181, "dnnl_iohw": 181, "dnnl_iodhw": 181, "dnnl_dhwoi": [181, 198], "dnnl_odhwi": 181, "dnnl_idhwo": 181, "dnnl_goiw": 181, "dnnl_gowi": 181, "dnnl_wigo": 181, "dnnl_goihw": 181, "dnnl_gohwi": 181, "dnnl_hwigo": 181, "dnnl_giohw": 181, "dnnl_goidhw": 181, "dnnl_godhwi": 181, "dnnl_giodhw": 181, "dnnl_dhwigo": 181, "dnnl_ldoi16o": 181, "dnnl_ldoi32o": 181, "dnnl_ldoi16o4i": 181, "dnnl_ldoi32o4i": 181, "dnnl_ldio32i": [181, 198], "dnnl_ldgoi16o": 181, "dnnl_ldgoi16o4i": 181, "dnnl_ldgoi32o": 181, "dnnl_ldgoi32o2i": 181, "dnnl_ldgoi32o4i": 181, "dnnl_ldgoi64o2i": 181, "dnnl_ldgoi64o4i": 181, "dnnl_ldgio16i": [181, 198], "dnnl_ldgio32i": [181, 198], "dnnl_ldgio32i2o": [181, 198], "dnnl_ncdhw32c": [181, 198], "dnnl_ncdhw16c": [181, 198], "dnnl_ncdhw4c": [181, 198], "dnnl_nchw32c": [181, 198], "dnnl_nchw4c": [181, 198], "dnnl_ncw32c": [181, 198], "dnnl_ncw16c": [181, 198], "dnnl_ncw4c": [181, 198], "dnnl_ncw8c": [181, 198], "dnnl_ncw16n16c": [181, 198], "dnnl_ncdhw16n16c": [181, 198], "dnnl_nchw16n16c": [181, 198], "dnnl_ncw32n16c": [181, 198], "dnnl_nchw32n16c": [181, 198], "dnnl_nchw16n32c": [181, 198], "dnnl_ncdhw32n16c": [181, 198], "dnnl_ncw32n32c": [181, 198], "dnnl_nchw32n32c": [181, 198], "dnnl_ncdhw32n32c": [181, 198], "dnnl_oi16i16o": [181, 198], "dnnl_oi16i32o": [181, 198], "dnnl_oi16i48o": [181, 198], "dnnl_oi16i64o": [181, 198], "dnnl_oi8i8o2i": [181, 198], "dnnl_oi8i16o2i": [181, 198], "dnnl_oi8i24o2i": [181, 198], "dnnl_oi8i32o2i": [181, 198], "dnnl_oi8i64o2i": [181, 198], "dnnl_oi4i8o4i": [181, 198], "dnnl_oi4i16o4i": [181, 198], "dnnl_oi4i24o4i": [181, 198], "dnnl_oi4i32o4i": [181, 198], "dnnl_oi4i64o4i": [181, 198], "dnnl_oi16i16o4i": [181, 198], "dnnl_oi8i32o": [181, 198], "dnnl_oi8i24o": [181, 198], "dnnl_oi8i16o": [181, 198], "dnnl_oi8i8o": [181, 198], "dnnl_iow8o8i": [181, 198], "dnnl_iow16o16i": [181, 198], "dnnl_iow16i16o": [181, 198], "dnnl_oiw16i16o": [181, 198], "dnnl_owi16i16o": [181, 198], "dnnl_oiw16i32o": [181, 198], "dnnl_owi16i32o": [181, 198], "dnnl_oiw16i48o": [181, 198], "dnnl_owi16i48o": [181, 198], "dnnl_oiw16i64o": [181, 198], "dnnl_owi16i64o": [181, 198], "dnnl_oiw16o16i": [181, 198], "dnnl_oiw16o": [181, 198], "dnnl_oiw4i8o4i": [181, 198], "dnnl_owi4i8o4i": [181, 198], "dnnl_oiw4i16o4i": [181, 198], "dnnl_owi4i16o4i": [181, 198], "dnnl_oiw4i24o4i": [181, 198], "dnnl_owi4i24o4i": [181, 198], "dnnl_oiw4i32o4i": [181, 198], "dnnl_owi4i32o4i": [181, 198], "dnnl_oiw4i64o4i": [181, 198], "dnnl_owi4i64o4i": [181, 198], "dnnl_oiw2i8o4i": [181, 198], "dnnl_oiw16i16o4i": [181, 198], "dnnl_oiw16i16o2i": [181, 198], "dnnl_oiw16o16i2o": [181, 198], "dnnl_oiw4i4o": [181, 198], "dnnl_oiw4o4i": [181, 198], "dnnl_oiw4o": [181, 198], "dnnl_oiw8i8o2i": [181, 198], "dnnl_owi8i8o2i": [181, 198], "dnnl_oiw8i16o2i": [181, 198], "dnnl_owi8i16o2i": [181, 198], "dnnl_oiw8i24o2i": [181, 198], "dnnl_owi8i24o2i": [181, 198], "dnnl_oiw8i32o2i": [181, 198], "dnnl_owi8i32o2i": [181, 198], "dnnl_oiw8i64o2i": [181, 198], "dnnl_owi8i64o2i": [181, 198], "dnnl_oiw8i8o": [181, 198], "dnnl_owi8i8o": [181, 198], "dnnl_oiw8o16i2o": [181, 198], "dnnl_iow8o16i2o": [181, 198], "dnnl_oiw8o8i": [181, 198], "dnnl_oiw8o4i": [181, 198], "dnnl_owi16o": [181, 198], "dnnl_owi16o2i": [181, 198], "dnnl_owi16o4i": [181, 198], "dnnl_iwo8i": [181, 198], "dnnl_iwo8i2o": [181, 198], "dnnl_iwo8i4o": [181, 198], "dnnl_iwo16i": [181, 198], "dnnl_iwo16i2o": [181, 198], "dnnl_iwo16i4o": [181, 198], "dnnl_iwo24i": [181, 198], "dnnl_iwo24i2o": [181, 198], "dnnl_iwo24i4o": [181, 198], "dnnl_owi4o": [181, 198], "dnnl_owi8o": [181, 198], "dnnl_owi8o2i": [181, 198], "dnnl_oiw8i32o": [181, 198], "dnnl_owi8i32o": [181, 198], "dnnl_oiw8i24o": [181, 198], "dnnl_owi8i24o": [181, 198], "dnnl_oiw8i16o": [181, 198], "dnnl_owi8i16o": [181, 198], "dnnl_owi8o4i": [181, 198], "dnnl_iohw16i16o": [181, 198], "dnnl_iohw8o8i": [181, 198], "dnnl_iohw16o16i": [181, 198], "dnnl_ohwi16o": [181, 198], "dnnl_ohwi16o2i": [181, 198], "dnnl_ohwi16o4i": [181, 198], "dnnl_ihwo8i": [181, 198], "dnnl_ihwo8i2o": [181, 198], "dnnl_ihwo8i4o": [181, 198], "dnnl_ihwo16i": [181, 198], "dnnl_ihwo16i2o": [181, 198], "dnnl_ihwo16i4o": [181, 198], "dnnl_ihwo24i": [181, 198], "dnnl_ihwo24i2o": [181, 198], "dnnl_ihwo24i4o": [181, 198], "dnnl_ohwi24o": [181, 198], "dnnl_ohwi32o": [181, 198], "dnnl_ohwi4o": [181, 198], "dnnl_ohwi8o": [181, 198], "dnnl_ohwi8o2i": [181, 198], "dnnl_ohwi8o4i": [181, 198], "dnnl_oihw16i16o": [181, 198], "dnnl_ohwi16i16o": [181, 198], "dnnl_oihw16i32o": [181, 198], "dnnl_ohwi16i32o": [181, 198], "dnnl_oihw16i48o": [181, 198], "dnnl_ohwi16i48o": [181, 198], "dnnl_oihw16i64o": [181, 198], "dnnl_ohwi16i64o": [181, 198], "dnnl_oihw16o16i": [181, 198], "dnnl_oihw16o": [181, 198], "dnnl_oihw4i8o4i": [181, 198], "dnnl_ohwi4i8o4i": [181, 198], "dnnl_oihw4i16o4i": [181, 198], "dnnl_ohwi4i16o4i": [181, 198], "dnnl_oihw4i24o4i": [181, 198], "dnnl_ohwi4i24o4i": [181, 198], "dnnl_oihw4i32o4i": [181, 198], "dnnl_ohwi4i32o4i": [181, 198], "dnnl_oihw4i64o4i": [181, 198], "dnnl_ohwi4i64o4i": [181, 198], "dnnl_oihw16i16o4i": [181, 198], "dnnl_oihw16i16o2i": [181, 198], "dnnl_oihw16o16i2o": [181, 198], "dnnl_oihw4i4o": [181, 198], "dnnl_oihw4o4i": [181, 198], "dnnl_oihw4o": [181, 198], "dnnl_oihw8i8o2i": [181, 198], "dnnl_ohwi8i8o2i": [181, 198], "dnnl_oihw8i16o2i": [181, 198], "dnnl_ohwi8i16o2i": [181, 198], "dnnl_oihw8i32o2i": [181, 198], "dnnl_ohwi8i32o2i": [181, 198], "dnnl_oihw8i24o2i": [181, 198], "dnnl_ohwi8i24o2i": [181, 198], "dnnl_oihw8i64o2i": [181, 198], "dnnl_ohwi8i64o2i": [181, 198], "dnnl_oihw8i8o": [181, 198], "dnnl_ohwi8i8o": [181, 198], "dnnl_oihw8o16i2o": [181, 198], "dnnl_oihw2i8o4i": [181, 198], "dnnl_iohw8o16i2o": [181, 198], "dnnl_oihw8o8i": [181, 198], "dnnl_oihw8o4i": [181, 198], "dnnl_owhi16o": [181, 198], "dnnl_oihw8i32o": [181, 198], "dnnl_ohwi8i32o": [181, 198], "dnnl_oihw8i24o": [181, 198], "dnnl_ohwi8i24o": [181, 198], "dnnl_oihw8i16o": [181, 198], "dnnl_ohwi8i16o": [181, 198], "dnnl_odhwi16o": [181, 198], "dnnl_odhwi16o2i": [181, 198], "dnnl_odhwi16o4i": [181, 198], "dnnl_idhwo8i": [181, 198], "dnnl_idhwo8i2o": [181, 198], "dnnl_idhwo8i4o": [181, 198], "dnnl_idhwo16i": [181, 198], "dnnl_idhwo16i2o": [181, 198], "dnnl_idhwo16i4o": [181, 198], "dnnl_idhwo24i": [181, 198], "dnnl_idhwo24i2o": [181, 198], "dnnl_idhwo24i4o": [181, 198], "dnnl_odhwi4o": [181, 198], "dnnl_odhwi8o": [181, 198], "dnnl_odhwi8o2i": [181, 198], "dnnl_odhwi8o4i": [181, 198], "dnnl_odwhi16o": [181, 198], "dnnl_oidhw16i16o": [181, 198], "dnnl_odhwi16i16o": [181, 198], "dnnl_oidhw16i32o": [181, 198], "dnnl_odhwi16i32o": [181, 198], "dnnl_oidhw16i48o": [181, 198], "dnnl_odhwi16i48o": [181, 198], "dnnl_oidhw16i64o": [181, 198], "dnnl_odhwi16i64o": [181, 198], "dnnl_oidhw16o16i": [181, 198], "dnnl_oidhw16o": [181, 198], "dnnl_oidhw4i4o": [181, 198], "dnnl_oidhw4o4i": [181, 198], "dnnl_oidhw4o": [181, 198], "dnnl_oidhw8i8o2i": [181, 198], "dnnl_odhwi8i8o2i": [181, 198], "dnnl_oidhw8i16o2i": [181, 198], "dnnl_odhwi8i16o2i": [181, 198], "dnnl_oidhw8i32o2i": [181, 198], "dnnl_odhwi8i32o2i": [181, 198], "dnnl_oidhw8i24o2i": [181, 198], "dnnl_odhwi8i24o2i": [181, 198], "dnnl_oidhw8i64o2i": [181, 198], "dnnl_odhwi8i64o2i": [181, 198], "dnnl_oidhw8i8o": [181, 198], "dnnl_odhwi8i8o": [181, 198], "dnnl_oidhw8o16i2o": [181, 198], "dnnl_iodhw8o16i2o": [181, 198], "dnnl_oidhw4i8o4i": [181, 198], "dnnl_odhwi4i8o4i": [181, 198], "dnnl_oidhw4i16o4i": [181, 198], "dnnl_odhwi4i16o4i": [181, 198], "dnnl_oidhw4i24o4i": [181, 198], "dnnl_odhwi4i24o4i": [181, 198], "dnnl_oidhw4i32o4i": [181, 198], "dnnl_odhwi4i32o4i": [181, 198], "dnnl_oidhw4i64o4i": [181, 198], "dnnl_odhwi4i64o4i": [181, 198], "dnnl_oidhw16i16o4i": [181, 198], "dnnl_oidhw16i16o2i": [181, 198], "dnnl_oidhw2i8o4i": [181, 198], "dnnl_oidhw8o8i": [181, 198], "dnnl_oidhw8o4i": [181, 198], "dnnl_iodhw16i16o": [181, 198], "dnnl_oidhw4o8i8o4i": [181, 198], "dnnl_iodhw8o8i": [181, 198], "dnnl_iodhw16o16i": [181, 198], "dnnl_oidhw16o16i2o": [181, 198], "dnnl_oidhw8i32o": [181, 198], "dnnl_odhwi8i32o": [181, 198], "dnnl_oidhw8i24o": [181, 198], "dnnl_odhwi8i24o": [181, 198], "dnnl_oidhw8i16o": [181, 198], "dnnl_odhwi8i16o": [181, 198], "dnnl_goiw16g": [181, 198], "dnnl_goiw8g": [181, 198], "dnnl_goiw4g": [181, 198], "dnnl_giow8o8i": [181, 198], "dnnl_giow16o16i": [181, 198], "dnnl_giow16i16o": [181, 198], "dnnl_goiw16i16o": [181, 198], "dnnl_goiw16o16i": [181, 198], "dnnl_goiw16o": [181, 198], "dnnl_goiw4i16o4i": [181, 198], "dnnl_goiw2i8o4i": [181, 198], "dnnl_goiw16i16o4i": [181, 198], "dnnl_goiw16i16o2i": [181, 198], "dnnl_goiw16o16i2o": [181, 198], "dnnl_goiw4i4o": [181, 198], "dnnl_goiw4o4i": [181, 198], "dnnl_goiw4o": [181, 198], "dnnl_goiw8i16o2i": [181, 198], "dnnl_goiw8i8o": [181, 198], "dnnl_goiw8o16i2o": [181, 198], "dnnl_giow8o16i2o": [181, 198], "dnnl_goiw8o8i": [181, 198], "dnnl_goiw8o4i": [181, 198], "dnnl_gowi16o": [181, 198], "dnnl_gowi16o2i": [181, 198], "dnnl_gowi16o4i": [181, 198], "dnnl_giwo8i": [181, 198], "dnnl_giwo8i2o": [181, 198], "dnnl_giwo8i4o": [181, 198], "dnnl_giwo16i": [181, 198], "dnnl_giwo16i2o": [181, 198], "dnnl_giwo16i4o": [181, 198], "dnnl_giwo24i": [181, 198], "dnnl_giwo24i2o": [181, 198], "dnnl_giwo24i4o": [181, 198], "dnnl_gowi4o": [181, 198], "dnnl_gowi8o": [181, 198], "dnnl_gowi8o2i": [181, 198], "dnnl_gowi8o4i": [181, 198], "dnnl_goiw32g": [181, 198], "dnnl_goiw2i4o2i": [181, 198], "dnnl_goiw2o4i2o": [181, 198], "dnnl_goiw4i8o2i": [181, 198], "dnnl_goiw4o8i2o": [181, 198], "dnnl_goiw4i": [181, 198], "dnnl_goiw32i": [181, 198], "dnnl_giohw16i16o": [181, 198], "dnnl_giohw8o8i": [181, 198], "dnnl_giohw16o16i": [181, 198], "dnnl_gohwi16o": [181, 198], "dnnl_gohwi16o2i": [181, 198], "dnnl_gohwi16o4i": [181, 198], "dnnl_gihwo8i": [181, 198], "dnnl_gihwo8i2o": [181, 198], "dnnl_gihwo8i4o": [181, 198], "dnnl_gihwo16i": [181, 198], "dnnl_gihwo16i2o": [181, 198], "dnnl_gihwo16i4o": [181, 198], "dnnl_gihwo24i": [181, 198], "dnnl_gihwo24i2o": [181, 198], "dnnl_gihwo24i4o": [181, 198], "dnnl_gohwi32o": [181, 198], "dnnl_gohwi24o": [181, 198], "dnnl_gohwi24o2i": [181, 198], "dnnl_gohwi24o4i": [181, 198], "dnnl_gohwi4o": [181, 198], "dnnl_gohwi8o": [181, 198], "dnnl_gohwi8o2i": [181, 198], "dnnl_gohwi8o4i": [181, 198], "dnnl_goihw16g": [181, 198], "dnnl_goihw16i16o": [181, 198], "dnnl_goihw16o16i": [181, 198], "dnnl_goihw16o": [181, 198], "dnnl_goihw2i8o4i": [181, 198], "dnnl_goihw4i16o4i": [181, 198], "dnnl_goihw16i16o4i": [181, 198], "dnnl_goihw16i16o2i": [181, 198], "dnnl_goihw16o16i2o": [181, 198], "dnnl_goihw4i4o": [181, 198], "dnnl_goihw4o4i": [181, 198], "dnnl_goihw4o": [181, 198], "dnnl_goihw8g": [181, 198], "dnnl_goihw4g": [181, 198], "dnnl_goihw8i16o2i": [181, 198], "dnnl_goihw8i8o": [181, 198], "dnnl_goihw8o16i2o": [181, 198], "dnnl_giohw8o16i2o": [181, 198], "dnnl_goihw8o8i": [181, 198], "dnnl_goihw8o4i": [181, 198], "dnnl_goihw32g": [181, 198], "dnnl_gowhi16o": [181, 198], "dnnl_goihw4i": [181, 198], "dnnl_goihw32i": [181, 198], "dnnl_oiw4o8i8o4i": [181, 198], "dnnl_oihw4o8i8o4i": [181, 198], "dnnl_iow4i8o8i4o": [181, 198], "dnnl_iohw4i8o8i4o": [181, 198], "dnnl_iodhw4i8o8i4o": [181, 198], "dnnl_oihw2o8i8o2i": [181, 198], "dnnl_goiw4o8i8o4i": [181, 198], "dnnl_goihw4o8i8o4i": [181, 198], "dnnl_goidhw4o8i8o4i": [181, 198], "dnnl_giow4i8o8i4o": [181, 198], "dnnl_giohw4i8o8i4o": [181, 198], "dnnl_giodhw4i8o8i4o": [181, 198], "dnnl_goihw2o8i8o2i": [181, 198], "dnnl_goihw2i4o2i": [181, 198], "dnnl_goihw2o4i2o": [181, 198], "dnnl_goihw4i8o2i": [181, 198], "dnnl_goihw4o8i2o": [181, 198], "dnnl_giodhw16i16o": [181, 198], "dnnl_giodhw8o8i": [181, 198], "dnnl_giodhw16o16i": [181, 198], "dnnl_godhwi16o": [181, 198], "dnnl_godhwi16o2i": [181, 198], "dnnl_godhwi16o4i": [181, 198], "dnnl_gidhwo8i": [181, 198], "dnnl_gidhwo8i2o": [181, 198], "dnnl_gidhwo8i4o": [181, 198], "dnnl_gidhwo16i": [181, 198], "dnnl_gidhwo16i2o": [181, 198], "dnnl_gidhwo16i4o": [181, 198], "dnnl_gidhwo24i": [181, 198], "dnnl_gidhwo24i2o": [181, 198], "dnnl_gidhwo24i4o": [181, 198], "dnnl_godhwi4o": [181, 198], "dnnl_godhwi8o": [181, 198], "dnnl_godhwi8o2i": [181, 198], "dnnl_godhwi8o4i": [181, 198], "dnnl_godwhi16o": [181, 198], "dnnl_goidhw16i16o": [181, 198], "dnnl_goidhw4i16o4i": [181, 198], "dnnl_goidhw16i16o4i": [181, 198], "dnnl_goidhw2i8o4i": [181, 198], "dnnl_goidhw16i16o2i": [181, 198], "dnnl_goidhw16o16i": [181, 198], "dnnl_goidhw16o16i2o": [181, 198], "dnnl_goidhw16o": [181, 198], "dnnl_goidhw4i4o": [181, 198], "dnnl_goidhw4o4i": [181, 198], "dnnl_goidhw4o": [181, 198], "dnnl_goidhw8i16o2i": [181, 198], "dnnl_goidhw8i8o": [181, 198], "dnnl_goidhw8o16i2o": [181, 198], "dnnl_giodhw8o16i2o": [181, 198], "dnnl_goidhw8o8i": [181, 198], "dnnl_goidhw8o4i": [181, 198], "dnnl_goidhw16g": [181, 198], "dnnl_goidhw32g": [181, 198], "dnnl_goidhw2i4o2i": [181, 198], "dnnl_goidhw4i8o2i": [181, 198], "dnnl_goidhw2o4i2o": [181, 198], "dnnl_goidhw4o8i2o": [181, 198], "dnnl_goidhw4i": [181, 198], "dnnl_goidhw32i": [181, 198], "dnnl_owi24o": [181, 198], "dnnl_owi24o2i": [181, 198], "dnnl_owi24o4i": [181, 198], "dnnl_owi32o": [181, 198], "dnnl_owi32o2i": [181, 198], "dnnl_owi32o4i": [181, 198], "dnnl_owi48o": [181, 198], "dnnl_owi48o2i": [181, 198], "dnnl_owi48o4i": [181, 198], "dnnl_owi64o": [181, 198], "dnnl_owi64o2i": [181, 198], "dnnl_owi64o4i": [181, 198], "dnnl_iwo32i": [181, 198], "dnnl_iwo32i2o": [181, 198], "dnnl_iwo32i4o": [181, 198], "dnnl_iwo48i": [181, 198], "dnnl_iwo48i2o": [181, 198], "dnnl_iwo48i4o": [181, 198], "dnnl_iwo64i": [181, 198], "dnnl_iwo64i2o": [181, 198], "dnnl_iwo64i4o": [181, 198], "dnnl_wio2i": [181, 198], "dnnl_wio4i": [181, 198], "dnnl_gowi24o": [181, 198], "dnnl_gowi24o2i": [181, 198], "dnnl_gowi24o4i": [181, 198], "dnnl_gowi32o": [181, 198], "dnnl_gowi32o2i": [181, 198], "dnnl_gowi32o4i": [181, 198], "dnnl_gowi48o": [181, 198], "dnnl_gowi48o2i": [181, 198], "dnnl_gowi48o4i": [181, 198], "dnnl_gowi64o": [181, 198], "dnnl_gowi64o2i": [181, 198], "dnnl_gowi64o4i": [181, 198], "dnnl_giwo32i": [181, 198], "dnnl_giwo32i2o": [181, 198], "dnnl_giwo32i4o": [181, 198], "dnnl_giwo48i": [181, 198], "dnnl_giwo48i2o": [181, 198], "dnnl_giwo48i4o": [181, 198], "dnnl_giwo64i": [181, 198], "dnnl_giwo64i2o": [181, 198], "dnnl_giwo64i4o": [181, 198], "dnnl_gwio": [181, 198], "dnnl_gwio2i": [181, 198], "dnnl_gwio4i": [181, 198], "dnnl_ohwi24o2i": [181, 198], "dnnl_ohwi24o4i": [181, 198], "dnnl_ohwi32o2i": [181, 198], "dnnl_ohwi32o4i": [181, 198], "dnnl_ohwi48o": [181, 198], "dnnl_ohwi48o2i": [181, 198], "dnnl_ohwi48o4i": [181, 198], "dnnl_ohwi64o": [181, 198], "dnnl_ohwi64o2i": [181, 198], "dnnl_ohwi64o4i": [181, 198], "dnnl_ihwo32i": [181, 198], "dnnl_ihwo32i2o": [181, 198], "dnnl_ihwo32i4o": [181, 198], "dnnl_ihwo48i": [181, 198], "dnnl_ihwo48i2o": [181, 198], "dnnl_ihwo48i4o": [181, 198], "dnnl_ihwo64i": [181, 198], "dnnl_ihwo64i2o": [181, 198], "dnnl_ihwo64i4o": [181, 198], "dnnl_hwio2i": [181, 198], "dnnl_hwio4i": [181, 198], "dnnl_gohwi32o2i": [181, 198], "dnnl_gohwi32o4i": [181, 198], "dnnl_gohwi48o": [181, 198], "dnnl_gohwi48o2i": [181, 198], "dnnl_gohwi48o4i": [181, 198], "dnnl_gohwi64o": [181, 198], "dnnl_gohwi64o2i": [181, 198], "dnnl_gohwi64o4i": [181, 198], "dnnl_gihwo32i": [181, 198], "dnnl_gihwo32i2o": [181, 198], "dnnl_gihwo32i4o": [181, 198], "dnnl_gihwo48i": [181, 198], "dnnl_gihwo48i2o": [181, 198], "dnnl_gihwo48i4o": [181, 198], "dnnl_gihwo64i": [181, 198], "dnnl_gihwo64i2o": [181, 198], "dnnl_gihwo64i4o": [181, 198], "dnnl_ghwio": [181, 198], "dnnl_ghwio2i": [181, 198], "dnnl_ghwio4i": [181, 198], "dnnl_odhwi24o": [181, 198], "dnnl_odhwi24o2i": [181, 198], "dnnl_odhwi24o4i": [181, 198], "dnnl_odhwi32o": [181, 198], "dnnl_odhwi32o2i": [181, 198], "dnnl_odhwi32o4i": [181, 198], "dnnl_odhwi48o": [181, 198], "dnnl_odhwi48o2i": [181, 198], "dnnl_odhwi48o4i": [181, 198], "dnnl_odhwi64o": [181, 198], "dnnl_odhwi64o2i": [181, 198], "dnnl_odhwi64o4i": [181, 198], "dnnl_idhwo32i": [181, 198], "dnnl_idhwo32i2o": [181, 198], "dnnl_idhwo32i4o": [181, 198], "dnnl_idhwo48i": [181, 198], "dnnl_idhwo48i2o": [181, 198], "dnnl_idhwo48i4o": [181, 198], "dnnl_idhwo64i": [181, 198], "dnnl_idhwo64i2o": [181, 198], "dnnl_idhwo64i4o": [181, 198], "dnnl_dhwio2i": [181, 198], "dnnl_dhwio4i": [181, 198], "dnnl_godhwi24o": [181, 198], "dnnl_godhwi24o2i": [181, 198], "dnnl_godhwi24o4i": [181, 198], "dnnl_godhwi32o": [181, 198], "dnnl_godhwi32o2i": [181, 198], "dnnl_godhwi32o4i": [181, 198], "dnnl_godhwi48o": [181, 198], "dnnl_godhwi48o2i": [181, 198], "dnnl_godhwi48o4i": [181, 198], "dnnl_godhwi64o": [181, 198], "dnnl_godhwi64o2i": [181, 198], "dnnl_godhwi64o4i": [181, 198], "dnnl_gidhwo32i": [181, 198], "dnnl_gidhwo32i2o": [181, 198], "dnnl_gidhwo32i4o": [181, 198], "dnnl_gidhwo48i": [181, 198], "dnnl_gidhwo48i2o": [181, 198], "dnnl_gidhwo48i4o": [181, 198], "dnnl_gidhwo64i": [181, 198], "dnnl_gidhwo64i2o": [181, 198], "dnnl_gidhwo64i4o": [181, 198], "dnnl_gdhwio": [181, 198], "dnnl_gdhwio2i": [181, 198], "dnnl_gdhwio4i": [181, 198], "dnnl_oi16i32o4i": [181, 198], "dnnl_oi16i48o4i": [181, 198], "dnnl_oi16i64o4i": [181, 198], "dnnl_oi16i16o2i": [181, 198], "dnnl_oi16i32o2i": [181, 198], "dnnl_oi16i48o2i": [181, 198], "dnnl_oi16i64o2i": [181, 198], "dnnl_oiw16i32o4i": [181, 198], "dnnl_oiw16i48o4i": [181, 198], "dnnl_oiw16i64o4i": [181, 198], "dnnl_oiw16i32o2i": [181, 198], "dnnl_oiw16i48o2i": [181, 198], "dnnl_oiw16i64o2i": [181, 198], "dnnl_oihw16i32o4i": [181, 198], "dnnl_oihw16i48o4i": [181, 198], "dnnl_oihw16i64o4i": [181, 198], "dnnl_oihw16i32o2i": [181, 198], "dnnl_oihw16i48o2i": [181, 198], "dnnl_oihw16i64o2i": [181, 198], "dnnl_oidhw16i32o4i": [181, 198], "dnnl_oidhw16i48o4i": [181, 198], "dnnl_oidhw16i64o4i": [181, 198], "dnnl_oidhw16i32o2i": [181, 198], "dnnl_oidhw16i48o2i": [181, 198], "dnnl_oidhw16i64o2i": [181, 198], "dnnl_owi16i16o2i": [181, 198], "dnnl_owi16i16o4i": [181, 198], "dnnl_ohwi16i16o2i": [181, 198], "dnnl_ohwi16i16o4i": [181, 198], "dnnl_odhwi16i16o2i": [181, 198], "dnnl_odhwi16i16o4i": [181, 198], "dnnl_iwo16o16i2o": [181, 198], "dnnl_iwo16o16i4o": [181, 198], "dnnl_ihwo16o16i2o": [181, 198], "dnnl_ihwo16o16i4o": [181, 198], "dnnl_idhwo16o16i2o": [181, 198], "dnnl_idhwo16o16i4o": [181, 198], "dnnl_gowi16i16o2i": [181, 198], "dnnl_gowi16i16o4i": [181, 198], "dnnl_gohwi16i16o2i": [181, 198], "dnnl_gohwi16i16o4i": [181, 198], "dnnl_godhwi16i16o2i": [181, 198], "dnnl_godhwi16i16o4i": [181, 198], "dnnl_giwo16o16i2o": [181, 198], "dnnl_giwo16o16i4o": [181, 198], "dnnl_gihwo16o16i2o": [181, 198], "dnnl_gihwo16o16i4o": [181, 198], "dnnl_gidhwo16o16i2o": [181, 198], "dnnl_gidhwo16o16i4o": [181, 198], "dnnl_owi16i32o2i": [181, 198], "dnnl_owi16i32o4i": [181, 198], "dnnl_owi16i48o2i": [181, 198], "dnnl_owi16i48o4i": [181, 198], "dnnl_owi16i64o2i": [181, 198], "dnnl_owi16i64o4i": [181, 198], "dnnl_iwo16o32i2o": [181, 198], "dnnl_iwo16o32i4o": [181, 198], "dnnl_iwo16o48i2o": [181, 198], "dnnl_iwo16o48i4o": [181, 198], "dnnl_iwo16o64i2o": [181, 198], "dnnl_iwo16o64i4o": [181, 198], "dnnl_gowi16i32o2i": [181, 198], "dnnl_gowi16i32o4i": [181, 198], "dnnl_gowi16i48o2i": [181, 198], "dnnl_gowi16i48o4i": [181, 198], "dnnl_gowi16i64o2i": [181, 198], "dnnl_gowi16i64o4i": [181, 198], "dnnl_giwo16o32i2o": [181, 198], "dnnl_giwo16o32i4o": [181, 198], "dnnl_giwo16o48i2o": [181, 198], "dnnl_giwo16o48i4o": [181, 198], "dnnl_giwo16o64i2o": [181, 198], "dnnl_giwo16o64i4o": [181, 198], "dnnl_ohwi16i32o2i": [181, 198], "dnnl_ohwi16i32o4i": [181, 198], "dnnl_ohwi16i48o2i": [181, 198], "dnnl_ohwi16i48o4i": [181, 198], "dnnl_ohwi16i64o2i": [181, 198], "dnnl_ohwi16i64o4i": [181, 198], "dnnl_ihwo16o32i2o": [181, 198], "dnnl_ihwo16o32i4o": [181, 198], "dnnl_ihwo16o48i2o": [181, 198], "dnnl_ihwo16o48i4o": [181, 198], "dnnl_ihwo16o64i2o": [181, 198], "dnnl_ihwo16o64i4o": [181, 198], "dnnl_gohwi16i32o2i": [181, 198], "dnnl_gohwi16i32o4i": [181, 198], "dnnl_gohwi16i48o2i": [181, 198], "dnnl_gohwi16i48o4i": [181, 198], "dnnl_gohwi16i64o2i": [181, 198], "dnnl_gohwi16i64o4i": [181, 198], "dnnl_gihwo16o32i2o": [181, 198], "dnnl_gihwo16o32i4o": [181, 198], "dnnl_gihwo16o48i2o": [181, 198], "dnnl_gihwo16o48i4o": [181, 198], "dnnl_gihwo16o64i2o": [181, 198], "dnnl_gihwo16o64i4o": [181, 198], "dnnl_odhwi16i32o2i": [181, 198], "dnnl_odhwi16i32o4i": [181, 198], "dnnl_odhwi16i48o2i": [181, 198], "dnnl_odhwi16i48o4i": [181, 198], "dnnl_odhwi16i64o2i": [181, 198], "dnnl_odhwi16i64o4i": [181, 198], "dnnl_idhwo16o32i2o": [181, 198], "dnnl_idhwo16o32i4o": [181, 198], "dnnl_idhwo16o48i2o": [181, 198], "dnnl_idhwo16o48i4o": [181, 198], "dnnl_idhwo16o64i2o": [181, 198], "dnnl_idhwo16o64i4o": [181, 198], "dnnl_godhwi16i32o2i": [181, 198], "dnnl_godhwi16i32o4i": [181, 198], "dnnl_godhwi16i48o2i": [181, 198], "dnnl_godhwi16i48o4i": [181, 198], "dnnl_godhwi16i64o2i": [181, 198], "dnnl_godhwi16i64o4i": [181, 198], "dnnl_gidhwo16o32i2o": [181, 198], "dnnl_gidhwo16o32i4o": [181, 198], "dnnl_gidhwo16o48i2o": [181, 198], "dnnl_gidhwo16o48i4o": [181, 198], "dnnl_gidhwo16o64i2o": [181, 198], "dnnl_gidhwo16o64i4o": [181, 198], "dnnl_hwiog16g": [181, 198], "dnnl_hwiog8g": [181, 198], "dnnl_dhwiog16g": [181, 198], "dnnl_dhwiog8g": [181, 198], "dnnl_ncdhw40n16c": [181, 198], "dnnl_ncw40n16c": [181, 198], "dnnl_nchw40n16c": [181, 198], "dnnl_ncw40n32c": [181, 198], "dnnl_nchw40n32c": [181, 198], "dnnl_ncdhw40n32c": [181, 198], "dnnl_oidhw4o8i8o2i": [181, 198], "dnnl_oihw4o8i8o2i": [181, 198], "dnnl_oiw4o8i8o2i": [181, 198], "dnnl_goidhw4o8i8o2i": [181, 198], "dnnl_goihw4o8i8o2i": [181, 198], "dnnl_goiw4o8i8o2i": [181, 198], "dnnl_iodhw4i8o8i2o": [181, 198], "dnnl_iohw4i8o8i2o": [181, 198], "dnnl_iow4i8o8i2o": [181, 198], "dnnl_giodhw4i8o8i2o": [181, 198], "dnnl_giohw4i8o8i2o": [181, 198], "dnnl_giow4i8o8i2o": [181, 198], "dnnl_ncw2c32n8c": [181, 198], "dnnl_nchw2c32n8c": [181, 198], "dnnl_ncdhw2c32n8c": [181, 198], "dnnl_oiw2i8o16i4o": [181, 198], "dnnl_oihw2i8o16i4o": [181, 198], "dnnl_oidhw2i8o16i4o": [181, 198], "dnnl_oiw2o8i16o4i": [181, 198], "dnnl_oiw2o8i16o2i": [181, 198], "dnnl_iow2i8o16i4o": [181, 198], "dnnl_iow2i8o16i2o": [181, 198], "dnnl_oihw2o8i16o4i": [181, 198], "dnnl_oihw2o8i16o2i": [181, 198], "dnnl_iohw2i8o16i4o": [181, 198], "dnnl_iohw2i8o16i2o": [181, 198], "dnnl_oidhw2o8i16o4i": [181, 198], "dnnl_oidhw2o8i16o2i": [181, 198], "dnnl_iodhw2i8o16i4o": [181, 198], "dnnl_iodhw2i8o16i2o": [181, 198], "dnnl_goiw2o8i16o2i": [181, 198], "dnnl_giow2i8o16i2o": [181, 198], "dnnl_giohw2i8o16i2o": [181, 198], "dnnl_giodhw2i8o16i2o": [181, 198], "dnnl_goihw2o8i16o2i": [181, 198], "dnnl_goidhw2o8i16o2i": [181, 198], "dnnl_goiw2o8i16o4i": [181, 198], "dnnl_goihw2o8i16o4i": [181, 198], "ndhwc": [181, 198], "data_in_ncdhw": 181, "data_in_ndhwc": 181, "dnnl_memory_desc_destroi": [181, 233, 241, 252, 283, 307, 369, 379, 389], "alia": [181, 198, 209, 210, 313, 357], "6d": [181, 198], "7d": [181, 198], "8d": [181, 198], "9d": [181, 198], "10d": [181, 198], "11d": [181, 198], "2nd": [181, 198], "sentinel": 181, "incl": 181, "seq_length": [181, 198], "num_lay": [181, 198, 263, 281, 411, 441], "num_direct": [181, 198, 263, 281, 411, 441], "input_channel": [181, 198, 263, 281, 411, 441], "num_gat": [181, 198, 263, 281, 411, 441], "output_channel": [181, 198, 263, 281, 411, 441], "num_channels_in_hidden_st": [181, 198], "num_channels_in_recurrent_project": [181, 198], "dnnl_fpmath_mode_strict": [182, 183, 289, 300, 319], "dnnl_fpmath_mode_bf16": [182, 183, 289, 300, 319], "dnnl_fpmath_mode_f16": [182, 183, 289, 300, 319], "dnnl_fpmath_mode_tf32": [182, 183, 289, 300, 319], "dnnl_fpmath_mode_ani": [182, 183, 289, 300, 319], "dnnl_graph_layout_type_undef": [184, 186], "dnnl_graph_layout_type_ani": [184, 186, 339], "dnnl_graph_layout_type_strid": [184, 186, 339, 483], "dnnl_graph_layout_type_opaqu": [184, 186, 483], "dnnl_graph_tensor_property_undef": [187, 195], "dnnl_graph_tensor_property_vari": [187, 195], "dnnl_graph_tensor_property_const": [187, 195], "dnnl_graph_op_attr_undef": [188, 189], "dnnl_graph_op_attr_alpha": [188, 189], "dnnl_graph_op_attr_beta": [188, 189], "dnnl_graph_op_attr_epsilon": [188, 189], "dnnl_graph_op_attr_max": [188, 189], "dnnl_graph_op_attr_min": [188, 189], "dnnl_graph_op_attr_momentum": [188, 189], "dnnl_graph_op_attr_scal": [188, 189], "dnnl_graph_op_attr_axi": [188, 189], "dnnl_graph_op_attr_begin_norm_axi": [188, 189], "dnnl_graph_op_attr_group": [188, 189], "dnnl_graph_op_attr_ax": [188, 189], "dnnl_graph_op_attr_dil": [188, 189], "dnnl_graph_op_attr_dst_shap": [188, 189], "dnnl_graph_op_attr_kernel": [188, 189], "dnnl_graph_op_attr_ord": [188, 189], "dnnl_graph_op_attr_output_pad": [188, 189], "dnnl_graph_op_attr_pads_begin": [188, 189], "dnnl_graph_op_attr_pads_end": [188, 189], "dnnl_graph_op_attr_shap": [188, 189], "dnnl_graph_op_attr_s": [188, 189], "dnnl_graph_op_attr_src_shap": [188, 189], "dnnl_graph_op_attr_strid": [188, 189], "dnnl_graph_op_attr_weights_shap": [188, 189], "dnnl_graph_op_attr_zp": [188, 189], "dnnl_graph_op_attr_group_shap": [188, 189], "dnnl_graph_op_attr_exclude_pad": [188, 189], "dnnl_graph_op_attr_keep_dim": [188, 189], "dnnl_graph_op_attr_keep_stat": [188, 189], "dnnl_graph_op_attr_per_channel_broadcast": [188, 189], "dnnl_graph_op_attr_special_zero": [188, 189], "dnnl_graph_op_attr_transpose_a": [188, 189], "dnnl_graph_op_attr_transpose_b": [188, 189], "dnnl_graph_op_attr_use_affin": [188, 189], "dnnl_graph_op_attr_use_dst": [188, 189], "dnnl_graph_op_attr_auto_broadcast": [188, 189], "dnnl_graph_op_attr_auto_pad": [188, 189], "dnnl_graph_op_attr_coordinate_transformation_mod": [188, 189], "dnnl_graph_op_attr_data_format": [188, 189, 483], "dnnl_graph_op_attr_mod": [188, 189], "dnnl_graph_op_attr_qtyp": [188, 189], "dnnl_graph_op_attr_rounding_typ": [188, 189], "dnnl_graph_op_attr_weights_format": [188, 189, 483], "dnnl_graph_op_attr_end": [188, 189], "illeg": 188, "weight_shap": [188, 189], "exter": [188, 189], "0x30": 189, "0x40": 189, "0x60": 189, "0x80": 189, "0xff": 189, "input_shap": 189, "dnnl_graph_op_ab": [190, 191], "absbackward": [190, 286], "dnnl_graph_op_abs_backward": [190, 191], "dnnl_graph_op_add": [190, 191], "dnnl_graph_op_avg_pool": [190, 191], "dnnl_graph_op_avg_pool_backward": [190, 191], "batchnormforwardtrain": [190, 286], "dnnl_graph_op_batch_norm_forward_train": [190, 191], "dnnl_graph_op_batch_norm_infer": [190, 191], "dnnl_graph_op_batch_norm_backward": [190, 191], "dnnl_graph_op_bias_add": [190, 191], "dnnl_graph_op_bias_add_backward": [190, 191], "dnnl_graph_op_clamp": [190, 191], "clampbackward": [190, 286], "dnnl_graph_op_clamp_backward": [190, 191], "dnnl_graph_op_concat": [190, 191], "dnnl_graph_op_convolut": [190, 191], "convolutionbackwarddata": [190, 286], "dnnl_graph_op_convolution_backward_data": [190, 191], "dnnl_graph_op_convolution_backward_weight": [190, 191], "dnnl_graph_op_conv_transpos": [190, 191], "convtransposebackwarddata": [190, 286], "dnnl_graph_op_conv_transpose_backward_data": [190, 191], "convtransposebackwardweight": [190, 286], "dnnl_graph_op_conv_transpose_backward_weight": [190, 191], "dnnl_graph_op_dequant": [190, 191], "dnnl_graph_op_divid": [190, 191], "dnnl_graph_op_dynamic_dequant": [190, 191], "dnnl_graph_op_dynamic_quant": [190, 191], "dnnl_graph_op_elu": [190, 191], "elubackward": [190, 286], "dnnl_graph_op_elu_backward": [190, 191], "dnnl_graph_op_end": [190, 191], "dnnl_graph_op_exp": [190, 191], "dnnl_graph_op_gelu": [190, 191], "gelubackward": [190, 286], "dnnl_graph_op_gelu_backward": [190, 191], "dnnl_graph_op_group_norm": [190, 191], "dnnl_graph_op_hard_sigmoid": [190, 191], "hardsigmoidbackward": [190, 286], "dnnl_graph_op_hard_sigmoid_backward": [190, 191], "dnnl_graph_op_hard_swish": [190, 191], "hardswishbackward": [190, 286], "dnnl_graph_op_hard_swish_backward": [190, 191], "dnnl_graph_op_interpol": [190, 191], "interpolatebackward": [190, 286], "dnnl_graph_op_interpolate_backward": [190, 191], "dnnl_graph_op_layer_norm": [190, 191], "layernormbackward": [190, 286], "dnnl_graph_op_layer_norm_backward": [190, 191], "dnnl_graph_op_leaky_relu": [190, 191], "dnnl_graph_op_log": [190, 191], "dnnl_graph_op_log_softmax": [190, 191], "logsoftmaxbackward": [190, 286], "dnnl_graph_op_log_softmax_backward": [190, 191], "dnnl_graph_op_matmul": [190, 191], "dnnl_graph_op_maximum": [190, 191], "dnnl_graph_op_max_pool": [190, 191], "maxpoolbackward": [190, 286], "dnnl_graph_op_max_pool_backward": [190, 191], "dnnl_graph_op_minimum": [190, 191], "dnnl_graph_op_mish": [190, 191], "mishbackward": [190, 286], "dnnl_graph_op_mish_backward": [190, 191], "dnnl_graph_op_multipli": [190, 191], "dnnl_graph_op_pow": [190, 191], "dnnl_graph_op_prelu": [190, 191], "prelubackward": [190, 286], "dnnl_graph_op_prelu_backward": [190, 191], "dnnl_graph_op_quant": [190, 191], "dnnl_graph_op_reciproc": [190, 191], "dnnl_graph_op_reduce_l1": [190, 191], "dnnl_graph_op_reduce_l2": [190, 191], "dnnl_graph_op_reduce_max": [190, 191], "dnnl_graph_op_reduce_mean": [190, 191], "dnnl_graph_op_reduce_min": [190, 191], "dnnl_graph_op_reduce_prod": [190, 191], "dnnl_graph_op_reduce_sum": [190, 191], "dnnl_graph_op_relu": [190, 191], "dnnl_graph_op_relu_backward": [190, 191], "dnnl_graph_op_reord": [190, 191], "dnnl_graph_op_round": [190, 191], "dnnl_graph_op_select": [190, 191], "dnnl_graph_op_sigmoid": [190, 191], "sigmoidbackward": [190, 286], "dnnl_graph_op_sigmoid_backward": [190, 191], "dnnl_graph_op_softmax": [190, 191], "softmaxbackward": [190, 286], "dnnl_graph_op_softmax_backward": [190, 191], "dnnl_graph_op_softplu": [190, 191], "softplusbackward": [190, 286], "dnnl_graph_op_softplus_backward": [190, 191], "dnnl_graph_op_sqrt": [190, 191], "sqrtbackward": [190, 286], "dnnl_graph_op_sqrt_backward": [190, 191], "dnnl_graph_op_squar": [190, 191], "squareddiffer": [190, 286], "dnnl_graph_op_squared_differ": [190, 191], "dnnl_graph_op_static_reshap": [190, 191], "dnnl_graph_op_static_transpos": [190, 191], "dnnl_graph_op_subtract": [190, 191], "dnnl_graph_op_tanh": [190, 191], "tanhbackward": [190, 286], "dnnl_graph_op_tanh_backward": [190, 191], "dnnl_graph_op_type_cast": [190, 191], "dnnl_graph_op_wildcard": [190, 191], "dnnl_graph_op_gen_index": [190, 191], "dnnl_graph_op_greater_equ": [190, 191], "lastsymbol": 190, "dnnl_graph_op_last_symbol": [190, 191], "dnnl_graph_partition_policy_fus": [192, 193], "dnnl_graph_partition_policy_debug": [192, 193], "chian": [192, 193], "dnnl_success": [194, 222, 223, 233, 241, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 337, 339, 340, 341, 342, 344, 345, 353, 355, 369, 379], "out_of_memori": [194, 222], "dnnl_out_of_memori": [194, 222, 223], "invalid_argu": [194, 222, 268, 311, 319, 395], "dnnl_invalid_argu": [194, 222, 223, 289, 307, 311, 319, 333, 334, 335], "last_impl_reach": [194, 222], "dnnl_last_impl_reach": [194, 222, 223, 313], "dnnl_runtime_error": [194, 222, 223, 319], "not_requir": [194, 222], "dnnl_not_requir": [194, 222, 223, 313], "invalid_graph": 194, "dnnl_invalid_graph": [194, 223], "invalid_graph_op": 194, "dnnl_invalid_graph_op": [194, 223], "dnnl_invalid_shap": [194, 223], "invalid_data_typ": 194, "dnnl_invalid_data_typ": [194, 223], "legitim": [194, 223], "bca": 198, "cba": 198, "abdc": 198, "acbd": 198, "adbc": 198, "bacd": 198, "bcda": 198, "cdba": 198, "dcab": 198, "abdec": 198, "bcdea": 198, "cdeba": 198, "decab": 198, "abcdef": 198, "abdfc": 198, "acbdef": 198, "abdefc": 198, "defcab": 198, "abcdf": 198, "abcdefg": 198, "abcdegf": 198, "abcdefgh": 198, "abcdefhg": 198, "abcdefghi": 198, "abcdefgih": 198, "abcdefghij": 198, "abcdefghji": 198, "abcdefghijk": 198, "abcdefghikj": 198, "abcdefghijkl": 198, "abcdefghijlk": 198, "cn": [198, 307], "tn": 198, "nt": 198, "nwc": 198, "chwn": [198, 395], "oi": [198, 244, 245, 380, 381], "oiw": 198, "owi": 198, "wio": 198, "iwo": 198, "oihw": [198, 234, 235, 236, 237, 239, 254, 261, 267, 268, 370, 371, 372, 373, 376, 391, 407, 420, 421], "hwio": 198, "ohwi": 198, "ihwo": 198, "iohw": 198, "oidhw": 198, "dhwio": 198, "odhwi": 198, "iodhw": 198, "idhwo": 198, "goiw": 198, "gowi": 198, "wigo": 198, "gohwi": 198, "goihw": [198, 234, 239, 376], "giohw": 198, "goidhw": 198, "giodhw": 198, "godhwi": 198, "dhwigo": 198, "ntc": 198, "ldigo": [198, 229, 248, 249, 263, 265, 274, 281, 361, 385, 386, 411, 416, 432, 441], "ldgoi": 198, "ldio": 198, "ldoi": 198, "ldgo": [198, 229, 248, 249, 263, 265, 274, 281, 361, 385, 386, 411, 416, 432, 441], "ab16b16a": 198, "ab16b32a": 198, "ab16b48a": 198, "ab16b64a": 198, "ab8b16a2b": 198, "ab8b32a2b": 198, "ab8b64a2b": 198, "ab4b16a4b": 198, "ab4b32a4b": 198, "ab4b64a4b": 198, "ab16b16a4b": 198, "ab16b32a4b": 198, "ab16b48a4b": 198, "ab16b64a4b": 198, "ab16b16a2b": 198, "ab16b32a2b": 198, "ab16b48a2b": 198, "ab16b64a2b": 198, "ab4a": 198, "ab8a": 198, "ab32a": 198, "abc16a": 198, "abc16a16b": 198, "abc4a4b": 198, "abc16b": 198, "abc32b": 198, "abc16b16a": 198, "acb16b16a": 198, "abc16b32a": 198, "acb16b32a": 198, "abc16b48a": 198, "acb16b48a": 198, "abc16b64a": 198, "acb16b64a": 198, "abc4a": 198, "abc4b": 198, "abc4b16a4b": 198, "acb4b16a4b": 198, "abc4b32a4b": 198, "acb4b32a4b": 198, "abc4b64a4b": 198, "acb4b64a4b": 198, "abc2b8a4b": 198, "abc16a16b2a": 198, "abc16b16a4b": 198, "abc16b32a4b": 198, "abc16b48a4b": 198, "abc16b64a4b": 198, "abc16b16a2b": 198, "abc16b32a2b": 198, "abc16b48a2b": 198, "abc16b64a2b": 198, "abc4b4a": 198, "abc8a16b2a": 198, "abc8a8b": 198, "abc8a4b": 198, "abc8b": 198, "abc8b16a2b": 198, "acb8b16a2b": 198, "abc8b32a2b": 198, "acb8b32a2b": 198, "abc8b64a2b": 198, "acb8b64a2b": 198, "abc8b8a": 198, "acb8b8a": 198, "abcd8a": 198, "abcd16a": 198, "abcd32a": 198, "abcd16a16b": 198, "abcd32b": 198, "acdb16b16a": 198, "abcd16b32a": 198, "acdb16b32a": 198, "abcd16b48a": 198, "acdb16b48a": 198, "abcd16b64a": 198, "acdb16b64a": 198, "abcd16b16c": 198, "abcd16c16b": 198, "abcd4a": 198, "abcd4b": 198, "abcd4b16a4b": 198, "acdb4b16a4b": 198, "abcd4b32a4b": 198, "acdb4b32a4b": 198, "abcd4b64a4b": 198, "acdb4b64a4b": 198, "abcd2b8a4b": 198, "abcd4b4a": 198, "abcd4a4b": 198, "abcd4c16b4c": 198, "abcd2c8b4c": 198, "abcd16a16b2a": 198, "abcd16b16a4b": 198, "abcd16b32a4b": 198, "abcd16b48a4b": 198, "abcd16b64a4b": 198, "abcd16b16a2b": 198, "abcd16b32a2b": 198, "abcd16b48a2b": 198, "abcd16b64a2b": 198, "abcd16b16c2b": 198, "abcd16c16b4c": 198, "abcd16c16b2c": 198, "abcd4c4b": 198, "abcd4b4c": 198, "abcd8a16b2a": 198, "abcd8a8b": 198, "abcd8a4b": 198, "abcd8a2b": 198, "abcd8b": [198, 420], "abcd8b16a2b": 198, "acdb8b16a2b": 198, "abcd8b32a2b": 198, "acdb8b32a2b": 198, "abcd8b64a2b": 198, "acdb8b64a2b": 198, "abcd8b16c2b": 198, "abcd8b8a": [198, 420], "acdb8b8a": 198, "abcd8b8c": 198, "abcd8b4c": 198, "abcd8c16b2c": 198, "abcd8c8b": 198, "abcde16a": 198, "abcde32a": 198, "abcde16a16b": 198, "abcde16b": 198, "abcde32b": 198, "abcde16b16a": 198, "acdeb16b16a": 198, "abcde16b32a": 198, "acdeb16b32a": 198, "abcde16b48a": 198, "acdeb16b48a": 198, "abcde16b64a": 198, "acdeb16b64a": 198, "abcde16b16c": 198, "abcde16c16b": 198, "abcde2c8b4c": 198, "abcde4a": 198, "abcde4b": 198, "abcde4b4a": 198, "abcde4a4b": 198, "abcde4b4c": 198, "abcde4c16b4c": 198, "abcde16b16c2b": 198, "abcde16c16b4c": 198, "abcde16c16b2c": 198, "abcdef16c16b2c": 198, "abcde4c4b": 198, "abcde8a": 198, "abcde8a8b": 198, "abcde8a4b": 198, "abcde8b": 198, "abcde8b16a2b": 198, "acdeb8b16a2b": 198, "abcde8b32a2b": 198, "acdeb8b32a2b": 198, "abcde8b64a2b": 198, "acdeb8b64a2b": 198, "abcde4b16a4b": 198, "acdeb4b16a4b": 198, "abcde4b32a4b": 198, "acdeb4b32a4b": 198, "abcde4b64a4b": 198, "acdeb4b64a4b": 198, "abcde16b16a4b": 198, "abcde16b32a4b": 198, "abcde16b48a4b": 198, "abcde16b64a4b": 198, "abcde16b16a2b": 198, "abcde16b32a2b": 198, "abcde16b48a2b": 198, "abcde16b64a2b": 198, "abcde2b8a4b": 198, "abcde8b16c2b": 198, "abcde8b8a": 198, "acdeb8b8a": 198, "abcde8b8c": 198, "abcde8b4c": 198, "abcd4a8b8a4b": 198, "abcd2a8b8a2b": 198, "abcde4b8c8b4c": 198, "abcde2b8c8b2c": 198, "abcde8c16b2c": 198, "abcde8c8b": 198, "abcdef16b": 198, "abcdef16b16c": 198, "abcdef16c16b": 198, "abcdef4b": 198, "abcdef2c8b4c": 198, "abcdef4c4b": 198, "abcdef4b4c": 198, "abcdef8b8c": 198, "abcdef8b4c": 198, "abcdef8c16b2c": 198, "abcdef4c16b4c": 198, "abcdef8c8b": 198, "abdc16b": 198, "abdc4b": 198, "abdc8b": 198, "abdc8b2c": 198, "abdc8b4c": 198, "abdec16b": 198, "abdec4b": 198, "abdec8b": 198, "abdec8b2c": 198, "abdec8b4c": 198, "abdefc16b": 198, "acbdef16c16b": 198, "acbdef8b8c": 198, "acbdef16b16c": 198, "abdefc4b": 198, "abdefc8b": 198, "abdefc8b2c": 198, "abdefc8b4c": 198, "acb16a": 198, "acb4a": 198, "acb8a": 198, "acb8a2b": 198, "acb8a4b": 198, "acbd8b8c": 198, "acbd16b16c": 198, "acbd16c16b": 198, "acbde8b8c": 198, "acbde16b16c": 198, "acbde16c16b": 198, "acdb16a": [198, 421], "acdb4a": 198, "acdb8a": 198, "acdb8a2b": 198, "acdb8a4b": 198, "acdeb16a": 198, "acdeb4a": 198, "acdeb8a": 198, "acdeb8a2b": 198, "acdeb8a4b": 198, "bac8a8b": 198, "bac16a16b": 198, "bac16b16a": 198, "bacd8a8b": 198, "bacd16a16b": 198, "bacd16b16a": 198, "abcd32a32b": 198, "bacde16b16a": 198, "bacde8a8b": 198, "bacde16a16b": 198, "abdec32b": 198, "abcdef16a": 198, "abcdef32a": 198, "acdb32a": 198, "abcd2b4c2b": 198, "abcde2b4c2b": 198, "abcdef2b4c2b": 198, "abcd2c4b2c": 198, "abcde2c4b2c": 198, "abcdef2c4b2c": 198, "abcd4b8c2b": 198, "abcde4b8c2b": 198, "abcdef4b8c2b": 198, "abcd4c8b2c": 198, "abcde4c8b2c": 198, "abcdef4c8b2c": 198, "ab32a32b8a4b": 198, "ab32a32b8a2b": 198, "ab8a4b": 198, "ab8a2b": 198, "abdc16d": 198, "abdc32d": 198, "abdc16d4c": 198, "abdc32d4c": 198, "abcd32c": 198, "abdec16": 198, "abdec32": 198, "abdec16e4c": 198, "abdec32e2c": 198, "abdec32e4c": 198, "abdce16c": 198, "abdce32c": 198, "abdce32c2": 198, "abcdef16c16b4c": 198, "abdc16b4c": 198, "abdec16b4c": 198, "acb16a4b": 198, "acdb16a2b": 198, "abdefc16b4c": 198, "acdeb16a4b": 198, "acb32a": 198, "acb32a2b": 198, "acb32a4b": 198, "acb48a": 198, "acb48a2b": 198, "acb48a4b": 198, "acb64a": 198, "acb64a2b": 198, "acb64a4b": 198, "cba2b": 198, "cba4b": 198, "abdc32b": 198, "abdc32b2c": 198, "abdc32b4c": 198, "abdc48b": 198, "abdc48b2c": 198, "abdc48b4c": 198, "abdc64b": 198, "abdc64b2c": 198, "abdc64b4c": 198, "adcb": 198, "adcb2c": 198, "adcb4c": 198, "acdb32a2b": 198, "acdb32a4b": 198, "acdb48a": 198, "acdb48a2b": 198, "acdb48a4b": 198, "acdb64a": 198, "acdb64a2b": 198, "acdb64a4b": 198, "cdba2b": 198, "cdba4b": 198, "abdec32b2c": 198, "abdec32b4c": 198, "abdec48b": 198, "abdec48b2c": 198, "abdec48b4c": 198, "abdec64b": 198, "abdec64b2c": 198, "abdec64b4c": 198, "adecb": 198, "adecb2c": 198, "adecb4c": 198, "acdeb32a": 198, "acdeb32a2b": 198, "acdeb32a4b": 198, "acdeb48a": 198, "acdeb48a2b": 198, "acdeb48a4b": 198, "acdeb64a": 198, "acdeb64a2b": 198, "acdeb64a4b": 198, "cdeba2b": 198, "cdeba4b": 198, "abdefc32b": 198, "abdefc32b2c": 198, "abdefc32b4c": 198, "abdefc48b": 198, "abdefc48b2c": 198, "abdefc48b4c": 198, "abdefc64b": 198, "abdefc64b2c": 198, "abdefc64b4c": 198, "adefcb": 198, "adefcb2c": 198, "adefcb4c": 198, "abc32a32b": 198, "bac8a16b2a": 198, "bacd8a16b2a": 198, "abcde8a16b2a": 198, "acbd8b16c2b": 198, "bacde8a16b2a": 198, "acbde8b16c2b": 198, "abcde32a32b": 198, "abc4a8b8a4b": 198, "abcde4a8b8a4b": 198, "bac4b8a8b4a": 198, "bacd4b8a8b4a": 198, "bacde4b8a8b4a": 198, "abcd4b8c8b4c": 198, "abcdef4b8c8b4c": 198, "abcdef8b16c2b": 198, "acbdef8b16c2b": 198, "abdc16b2c": 198, "abdec16b2c": 198, "abdefc16b2c": 198, "abedc16b": 198, "acb16a2b": 198, "acdb16a4b": 198, "acdeb16a2b": 198, "adcb16a": 198, "acbd4c8b8c4b": 198, "acbde4c8b8c4b": 198, "acbdef4c8b8c4b": 198, "abc32a16b": 198, "abcd16a32b": 198, "abcd32a16b": 198, "abcde32a16b": 198, "ab48a16b": 198, "ab48a32b": 198, "abc40a16b": 198, "abc40a32b": 198, "abc48b16c": 198, "abc48b32c": 198, "abcd40a16b": 198, "abcd40a32b": 198, "ba16a16b": 198, "ba16a32b": 198, "ba16a48b": 198, "ba16a64b": 198, "ba16a16b2a": 198, "ba16a32b2a": 198, "ba16a48b2a": 198, "ba16a64b2a": 198, "ba16a16b4a": 198, "ba16a32b4a": 198, "ba16a48b4a": 198, "ba16a64b4a": 198, "decba16a": 198, "decba8a": 198, "defcba16a": 198, "defcba8a": 198, "acb16b16c": 198, "acb16b32c": 198, "acb16b48c": 198, "acb16b64c": 198, "acb16b16c2b": 198, "acb16b32c2b": 198, "acb16b48c2b": 198, "acb16b64c2b": 198, "acb16b16c4b": 198, "acb16b32c4b": 198, "acb16b48c4b": 198, "acb16b64c4b": 198, "acb24a": 198, "acdb24a": 198, "acdeb24a": 198, "abdc24b": 198, "abdec24b": 198, "abdefc24b": 198, "acb24a2b": 198, "acdb24a2b": 198, "acdeb24a2b": 198, "abdc24b2c": 198, "abdec24b2c": 198, "abdefc24b2c": 198, "acb24a4b": 198, "acdb24a4b": 198, "acdeb24a4b": 198, "abdc24b4c": 198, "abdec24b4c": 198, "abdefc24b4c": 198, "ab8b32a": 198, "abc8b32a": 198, "acb8b32a": 198, "abcd8b32a": 198, "acdb8b32a": 198, "abcde8b32a": 198, "acdeb8b32a": 198, "ab8b24a": 198, "abc8b24a": 198, "acb8b24a": 198, "abcd8b24a": 198, "acdb8b24a": 198, "abcde8b24a": 198, "acdeb8b24a": 198, "ab8b16a": 198, "abc8b16a": 198, "acb8b16a": 198, "abcd8b16a": 198, "acdb8b16a": 198, "abcde8b16a": 198, "acdeb8b16a": 198, "ab8b8a": 198, "format_tag_last": 198, "ncdhw16c": 198, "ncdhw4c": 198, "ncdhw8c": 198, "nchw4c": 198, "ncw16c": 198, "ncw4c": 198, "ncw8c": 198, "ncw16n16c": 198, "nchw16n16c": 198, "ncdhw16n16c": 198, "ncdhw32n32c": 198, "nchw32n32c": 198, "iohw16i16o": 198, "oi16i16o": 198, "oi16i32o": 198, "oi16i48o": 198, "oi16i64o": 198, "oi8i16o2i": 198, "oi8i32o2i": 198, "oi8i64o2i": 198, "oi4i8o4i": 198, "oi4i16o4i": 198, "oi4i24o4i": 198, "oi4i32o4i": 198, "oi4i64o4i": 198, "ohwi32o": 198, "iodhw16i16o": 198, "giohw16i16o": 198, "gohwi32o": 198, "goidhw16g": 198, "iow8o8i": 198, "iow16o16i": 198, "oiw16i16o": 198, "owi16i16o": 198, "oiw16i32o": 198, "owi16i32o": 198, "oiw16i48o": 198, "owi16i48o": 198, "oiw16i64o": 198, "owi16i64o": 198, "iow16i16o": 198, "giow16i16o": 198, "oiw16o16i": 198, "oiw16o": 198, "oiw4i8o4i": 198, "owi4i8o4i": 198, "oiw4i16o4i": 198, "owi4i16o4i": 198, "oiw4i24o4i": 198, "owi4i24o4i": 198, "oiw4i32o4i": 198, "owi4i32o4i": 198, "oiw4i64o4i": 198, "owi4i64o4i": 198, "oiw2i8o4i": 198, "oiw4i4o": 198, "oiw4o4i": 198, "oiw4o": 198, "oiw8i16o2i": 198, "owi8i16o2i": 198, "oiw8i32o2i": 198, "owi8i32o2i": 198, "oiw8i64o2i": 198, "owi8i64o2i": 198, "oiw8i8o": 198, "owi8i8o": 198, "oiw8o16i2o": 198, "oiw8o8i": 198, "oiw8o4i": 198, "oiw16i16o4i": 198, "oiw16i32o4i": 198, "oiw16i48o4i": 198, "oiw16i64o4i": 198, "oiw16i16o2i": 198, "oiw16i32o2i": 198, "oiw16i48o2i": 198, "oiw16i64o2i": 198, "oiw16o16i2o": 198, "owi16o": 198, "owi16o2i": 198, "iwo16i": 198, "iwo16i2o": 198, "iwo16i4o": 198, "owi4o": 198, "owi8o": 198, "owi8o2i": 198, "owi8o4i": 198, "iohw8o8i": 198, "iohw16o16i": 198, "ohwi16o": 198, "ohwi16o2i": 198, "ihwo16i": 198, "ihwo16i2o": 198, "ihwo16i4o": 198, "ohwi4o": 198, "ohwi8o": 198, "ohwi8o2i": 198, "ohwi8o4i": 198, "oihw16i16o": 198, "ohwi16i16o": 198, "oihw16i32o": 198, "ohwi16i32o": 198, "oihw16i48o": 198, "ohwi16i48o": 198, "oihw16i64o": 198, "ohwi16i64o": 198, "oihw16o16i": 198, "oihw16o": 198, "oihw4i8o4i": 198, "ohwi4i8o4i": 198, "oihw4i16o4i": 198, "ohwi4i16o4i": 198, "oihw4i24o4i": 198, "ohwi4i24o4i": 198, "oihw4i32o4i": 198, "ohwi4i32o4i": 198, "oihw4i64o4i": 198, "ohwi4i64o4i": 198, "oihw4i4o": 198, "oihw4o4i": 198, "oihw4o": 198, "oihw8i16o2i": 198, "ohwi8i16o2i": 198, "oihw8i32o2i": 198, "ohwi8i32o2i": 198, "oihw8i64o2i": 198, "ohwi8i64o2i": 198, "oihw8i8o": 198, "ohwi8i8o": 198, "oihw8o16i2o": 198, "oihw8o8i": 198, "oihw8o4i": 198, "oihw2i8o4i": 198, "iodhw8o8i": 198, "iodhw16o16i": 198, "odhwi16o": 198, "odhwi16o2i": 198, "idhwo16i": 198, "idhwo16i2o": 198, "idhwo16i4o": 198, "odhwi4o": 198, "odhwi8o": 198, "odhwi8o2i": 198, "odhwi8o4i": 198, "oidhw16i16o": 198, "odhwi16i16o": 198, "oidhw16i32o": 198, "odhwi16i32o": 198, "oidhw16i48o": 198, "odhwi16i48o": 198, "oidhw16i64o": 198, "odhwi16i64o": 198, "oidhw16o16i": 198, "oidhw16o16i2o": 198, "oidhw16o": 198, "oidhw4i4o": 198, "oidhw4o4i": 198, "oidhw4o": 198, "oidhw8i16o2i": 198, "odhwi8i16o2i": 198, "oidhw8i32o2i": 198, "odhwi8i32o2i": 198, "oidhw8i64o2i": 198, "odhwi8i64o2i": 198, "oidhw4i8o4i": 198, "odhwi4i8o4i": 198, "oidhw4i16o4i": 198, "odhwi4i16o4i": 198, "oidhw16i16o4i": 198, "oidhw16i32o4i": 198, "oidhw16i48o4i": 198, "oidhw16i64o4i": 198, "oidhw16i16o2i": 198, "oidhw16i32o2i": 198, "oidhw16i48o2i": 198, "oidhw16i64o2i": 198, "oidhw4i24o4i": 198, "odhwi4i24o4i": 198, "oidhw4i32o4i": 198, "odhwi4i32o4i": 198, "oidhw4i64o4i": 198, "odhwi4i64o4i": 198, "oidhw2i8o4i": 198, "oidhw8i8o": 198, "odhwi8i8o": 198, "oidhw8o8i": 198, "oidhw8o4i": 198, "giow8o8i": 198, "giow16o16i": 198, "goiw16i16o": 198, "goiw16o16i": 198, "goiw16o": 198, "goiw4i16o4i": 198, "goiw2i8o4i": 198, "goiw4i4o": 198, "goiw4o4i": 198, "goiw4o": 198, "goiw8i16o2i": 198, "goiw8i8o": 198, "goiw8o16i2o": 198, "goiw8o8i": 198, "goiw8o4i": 198, "goiw16i16o4i": 198, "goiw16i16o2i": 198, "goiw16o16i2o": 198, "gowi16o": 198, "gowi16o2i": 198, "giwo16i": 198, "giwo16i2o": 198, "giwo16i4o": 198, "gowi4o": 198, "gowi8o": 198, "gowi8o2i": 198, "gowi8o4i": 198, "goiw8g": 198, "goiw16g": 198, "giohw8o8i": 198, "giohw16o16i": 198, "gohwi16o": 198, "gohwi16o2i": 198, "gihwo16i": 198, "gihwo16i2o": 198, "gihwo16i4o": 198, "gohwi4o": 198, "gohwi8o": 198, "gohwi8o2i": 198, "gohwi8o4i": 198, "goihw16g": 198, "goihw16i16o": 198, "goihw16o16i": 198, "goihw16o": 198, "goihw4i16o4i": 198, "goihw2i8o4i": 198, "goihw4i4o": 198, "goihw4o4i": 198, "goihw4o": 198, "goihw8g": 198, "goihw8i16o2i": 198, "goihw8i8o": 198, "goihw8o16i2o": 198, "oiw4o8i8o4i": 198, "oidhw4o8i8o4i": 198, "oihw4o8i8o4i": 198, "oihw2o8i8o2i": 198, "goiw4o8i8o4i": 198, "goidhw4o8i8o4i": 198, "goihw4o8i8o4i": 198, "goihw2o8i8o2i": 198, "oihw16i16o4i": 198, "oihw16i32o4i": 198, "oihw16i48o4i": 198, "oihw16i64o4i": 198, "oihw16i16o2i": 198, "oihw16i32o2i": 198, "oihw16i48o2i": 198, "oihw16i64o2i": 198, "oihw16o16i2o": 198, "goihw16i16o4i": 198, "goihw16i16o2i": 198, "goihw16o16i2o": 198, "goihw8o8i": 198, "goihw8o4i": 198, "giodhw16i16o": 198, "giodhw8o8i": 198, "giodhw16o16i": 198, "godhwi16o": 198, "godhwi16o2i": 198, "gidhwo16i": 198, "gidhwo16i2o": 198, "gidhwo16i4o": 198, "godhwi4o": 198, "godhwi8o": 198, "godhwi8o2i": 198, "godhwi8o4i": 198, "goidhw16i16o": 198, "goidhw16o16i": 198, "goidhw16o16i2o": 198, "goidhw16o": 198, "goidhw4i4o": 198, "goidhw4o4i": 198, "goidhw4o": 198, "goidhw8i16o2i": 198, "goidhw4i16o4i": 198, "goidhw16i16o4i": 198, "goidhw16i16o2i": 198, "goidhw2i8o4i": 198, "goidhw8i8o": 198, "goidhw8o8i": 198, "goidhw8o4i": 198, "goiw2i4o2i": 198, "goihw2i4o2i": 198, "goidhw2i4o2i": 198, "goiw2o4i2o": 198, "goihw2o4i2o": 198, "goidhw2o4i2o": 198, "goiw4i8o2i": 198, "goihw4i8o2i": 198, "goidhw4i8o2i": 198, "goiw4o8i2o": 198, "goihw4o8i2o": 198, "goidhw4o8i2o": 198, "ldoi16o": 198, "ldoi32o": 198, "ldoi16o4i": 198, "ldoi32o4i": 198, "ldgoi16o": 198, "ldgoi16o4i": 198, "ldgoi32o": 198, "ldgoi32o2i": 198, "ldgoi32o4i": 198, "owi16o4i": 198, "ohwi16o4i": 198, "gowi16o4i": 198, "gohwi16o4i": 198, "odhwi16o4i": 198, "godhwi16o4i": 198, "owi32o": 198, "owi32o2i": 198, "owi32o4i": 198, "owi48o": 198, "owi48o2i": 198, "owi48o4i": 198, "owi64o": 198, "owi64o2i": 198, "owi64o4i": 198, "iwo32i": 198, "iwo32i2o": 198, "iwo32i4o": 198, "iwo48i": 198, "iwo48i2o": 198, "iwo48i4o": 198, "iwo64i": 198, "iwo64i2o": 198, "iwo64i4o": 198, "wio2i": 198, "wio4i": 198, "gowi32o": 198, "gowi32o2i": 198, "gowi32o4i": 198, "gowi48o": 198, "gowi48o2i": 198, "gowi48o4i": 198, "gowi64o": 198, "gowi64o2i": 198, "gowi64o4i": 198, "giwo32i": 198, "giwo32i2o": 198, "giwo32i4o": 198, "giwo48i": 198, "giwo48i2o": 198, "giwo48i4o": 198, "giwo64i": 198, "giwo64i2o": 198, "giwo64i4o": 198, "gwio": 198, "gwio2i": 198, "gwio4i": 198, "ohwi32o2i": 198, "ohwi32o4i": 198, "ohwi48o": 198, "ohwi48o2i": 198, "ohwi48o4i": 198, "ohwi64o": 198, "ohwi64o2i": 198, "ohwi64o4i": 198, "ihwo32i": 198, "ihwo32i2o": 198, "ihwo32i4o": 198, "ihwo48i": 198, "ihwo48i2o": 198, "ihwo48i4o": 198, "ihwo64i": 198, "ihwo64i2o": 198, "ihwo64i4o": 198, "hwio2i": 198, "hwio4i": 198, "gohwi32o2i": 198, "gohwi32o4i": 198, "gohwi48o": 198, "gohwi48o2i": 198, "gohwi48o4i": 198, "gohwi64o": 198, "gohwi64o2i": 198, "gohwi64o4i": 198, "gihwo32i": 198, "gihwo32i2o": 198, "gihwo32i4o": 198, "gihwo48i": 198, "gihwo48i2o": 198, "gihwo48i4o": 198, "gihwo64i": 198, "gihwo64i2o": 198, "gihwo64i4o": 198, "ghwio": 198, "ghwio2i": 198, "ghwio4i": 198, "odhwi32o": 198, "odhwi32o2i": 198, "odhwi32o4i": 198, "odhwi48o": 198, "odhwi48o2i": 198, "odhwi48o4i": 198, "odhwi64o": 198, "odhwi64o2i": 198, "odhwi64o4i": 198, "idhwo32i": 198, "idhwo32i2o": 198, "idhwo32i4o": 198, "idhwo48i": 198, "idhwo48i2o": 198, "idhwo48i4o": 198, "idhwo64i": 198, "idhwo64i2o": 198, "idhwo64i4o": 198, "dhwio2i": 198, "dhwio4i": 198, "godhwi32o": 198, "godhwi32o2i": 198, "godhwi32o4i": 198, "godhwi48o": 198, "godhwi48o2i": 198, "godhwi48o4i": 198, "godhwi64o": 198, "godhwi64o2i": 198, "godhwi64o4i": 198, "gidhwo32i": 198, "gidhwo32i2o": 198, "gidhwo32i4o": 198, "gidhwo48i": 198, "gidhwo48i2o": 198, "gidhwo48i4o": 198, "gidhwo64i": 198, "gidhwo64i2o": 198, "gidhwo64i4o": 198, "gdhwio": 198, "gdhwio2i": 198, "gdhwio4i": 198, "ldio32i": 198, "ldgio16i": 198, "ldgio32i": 198, "ldgio32i2o": 198, "ncdhw32c": 198, "nchw32c": 198, "ncw32c": 198, "ncw32n16c": 198, "nchw32n16c": 198, "ncdhw32n16c": 198, "ncw32n32c": 198, "oi16i16o4i": 198, "iow8o16i2o": 198, "iohw8o16i2o": 198, "owhi16o": 198, "oidhw8o16i2o": 198, "iodhw8o16i2o": 198, "goiw4g": 198, "giow8o16i2o": 198, "goiw32g": 198, "goihw4g": 198, "giohw8o16i2o": 198, "goihw32g": 198, "gowhi16o": 198, "iow4i8o8i4o": 198, "iohw4i8o8i4o": 198, "iodhw4i8o8i4o": 198, "giow4i8o8i4o": 198, "giohw4i8o8i4o": 198, "giodhw4i8o8i4o": 198, "goidhw8o16i2o": 198, "giodhw8o16i2o": 198, "goidhw32g": 198, "oi16i32o4i": 198, "oi16i48o4i": 198, "oi16i64o4i": 198, "oi16i16o2i": 198, "oi16i32o2i": 198, "oi16i48o2i": 198, "oi16i64o2i": 198, "abdec16c16b4c": 198, "acb16b16a2b": 198, "abdc16c16b2c": 198, "acb16b16a4b": 198, "abdc16c16b4c": 198, "acdb16b16a2b": 198, "abdefc16c16b4c": 198, "acdeb16b16a4b": 198, "acb16b32a2b": 198, "acb16b32a4b": 198, "acb16b48a2b": 198, "acb16b48a4b": 198, "acb16b64a2b": 198, "acb16b64a4b": 198, "abdc16c32b2c": 198, "abdc16c32b4c": 198, "abdc16c48b2c": 198, "abdc16c48b4c": 198, "abdc16c64b2c": 198, "abdc16c64b4c": 198, "acdb16b32a2b": 198, "acdb16b32a4b": 198, "acdb16b48a2b": 198, "acdb16b48a4b": 198, "acdb16b64a2b": 198, "acdb16b64a4b": 198, "abdec16c32b2c": 198, "abdec16c32b4c": 198, "abdec16c48b2c": 198, "abdec16c48b4c": 198, "abdec16c64b2c": 198, "abdec16c64b4c": 198, "acdeb16b32a2b": 198, "acdeb16b32a4b": 198, "acdeb16b48a2b": 198, "acdeb16b48a4b": 198, "acdeb16b64a2b": 198, "acdeb16b64a4b": 198, "abdefc16c32b2c": 198, "abdefc16c32b4c": 198, "abdefc16c48b2c": 198, "abdefc16c48b4c": 198, "abdefc16c64b2c": 198, "abdefc16c64b4c": 198, "owi16i16o2i": 198, "gowi16i16o2i": 198, "ohwi16i16o2i": 198, "gohwi16i16o2i": 198, "odhwi16i16o2i": 198, "godhwi16i16o2i": 198, "owi16i16o4i": 198, "gowi16i16o4i": 198, "ohwi16i16o4i": 198, "gohwi16i16o4i": 198, "odhwi16i16o4i": 198, "godhwi16i16o4i": 198, "owi16i32o2i": 198, "owi16i32o4i": 198, "owi16i48o2i": 198, "owi16i48o4i": 198, "owi16i64o2i": 198, "owi16i64o4i": 198, "gowi16i32o2i": 198, "gowi16i32o4i": 198, "gowi16i48o2i": 198, "gowi16i48o4i": 198, "gowi16i64o2i": 198, "gowi16i64o4i": 198, "ohwi16i32o2i": 198, "ohwi16i32o4i": 198, "ohwi16i48o2i": 198, "ohwi16i48o4i": 198, "ohwi16i64o2i": 198, "ohwi16i64o4i": 198, "gohwi16i32o2i": 198, "gohwi16i32o4i": 198, "gohwi16i48o2i": 198, "gohwi16i48o4i": 198, "gohwi16i64o2i": 198, "gohwi16i64o4i": 198, "odhwi16i32o2i": 198, "odhwi16i32o4i": 198, "odhwi16i48o2i": 198, "odhwi16i48o4i": 198, "odhwi16i64o2i": 198, "odhwi16i64o4i": 198, "idhwo16o32i2o": 198, "idhwo16o32i4o": 198, "idhwo16o48i2o": 198, "idhwo16o48i4o": 198, "idhwo16o64i2o": 198, "idhwo16o64i4o": 198, "godhwi16i32o2i": 198, "godhwi16i32o4i": 198, "godhwi16i48o2i": 198, "godhwi16i48o4i": 198, "godhwi16i64o2i": 198, "godhwi16i64o4i": 198, "gidhwo16o32i2o": 198, "gidhwo16o32i4o": 198, "gidhwo16o48i2o": 198, "gidhwo16o48i4o": 198, "gidhwo16o64i2o": 198, "gidhwo16o64i4o": 198, "iwo16o16i2o": 198, "iwo16o16i4o": 198, "ihwo16o16i2o": 198, "ihwo16o16i4o": 198, "idhwo16o16i2o": 198, "idhwo16o16i4o": 198, "giwo16o16i2o": 198, "giwo16o16i4o": 198, "gihwo16o16i2o": 198, "gihwo16o16i4o": 198, "gidhwo16o16i2o": 198, "gidhwo16o16i4o": 198, "iwo16o32i2o": 198, "iwo16o32i4o": 198, "iwo16o48i2o": 198, "iwo16o48i4o": 198, "iwo16o64i2o": 198, "iwo16o64i4o": 198, "giwo16o32i2o": 198, "giwo16o32i4o": 198, "giwo16o48i2o": 198, "giwo16o48i4o": 198, "giwo16o64i2o": 198, "giwo16o64i4o": 198, "ihwo16o32i2o": 198, "ihwo16o32i4o": 198, "ihwo16o48i2o": 198, "ihwo16o48i4o": 198, "ihwo16o64i2o": 198, "ihwo16o64i4o": 198, "gihwo16o32i2o": 198, "gihwo16o32i4o": 198, "gihwo16o48i2o": 198, "gihwo16o48i4o": 198, "gihwo16o64i2o": 198, "gihwo16o64i4o": 198, "abdec16c16b2c": 198, "abdefc16c16b2c": 198, "acdb16b16a4b": 198, "acdeb16b16a2b": 198, "hwiog16g": 198, "hwiog8g": 198, "dhwiog16g": 198, "dhwiog8g": 198, "abc4a2b": 198, "abc8a2b": 198, "abcd4a2b": 198, "abcde4a2b": 198, "abcde8a2b": 198, "abcd4a8b8a2b": 198, "ncdhw40n32c": 198, "nchw40n32c": 198, "ncw40n32c": 198, "oidhw4o8i8o2i": 198, "oihw4o8i8o2i": 198, "oiw4o8i8o2i": 198, "goidhw4o8i8o2i": 198, "goihw4o8i8o2i": 198, "goiw4o8i8o2i": 198, "iodhw4i8o8i2o": 198, "iohw4i8o8i2o": 198, "iow4i8o8i2o": 198, "giodhw4i8o8i2o": 198, "giohw4i8o8i2o": 198, "giow4i8o8i2o": 198, "abcd8b2c": 198, "abcde40a16b": 198, "abcde40a32b": 198, "abcde8b2c": 198, "abcde4a8b8a2b": 198, "abc4a8b8a2b": 198, "abcdef4b8c8b2c": 198, "abcde4b8c8b2c": 198, "abcd4b8c8b2c": 198, "bacde4b8a8b2a": 198, "bacd4b8a8b2a": 198, "bac4b8a8b2a": 198, "acbdef4c8b8c2b": 198, "acbde4c8b8c2b": 198, "acbd4c8b8c2b": 198, "abcdef8b2c": 198, "ab32a16b": 198, "ab32a32b": 198, "ba4b8a8b2a": 198, "ba4b8a8b4a": 198, "abc32b16c": 198, "abc32b32c": 198, "acb4c8b8c2b": 198, "acb4c8b8c4b": 198, "abc2b8a16b4a": 198, "abcd2b8a16b4a": 198, "abcde2b8a16b4a": 198, "abc2a8b16a4b": 198, "abc2a8b16a2b": 198, "abc2b32a8b": 198, "abcd2a8b16a4b": 198, "abcd2a8b16a2b": 198, "acbd2c8b16c2b": 198, "abcd2b32a8b": 198, "abcd2c8b16c2b": 198, "abcde2a8b16a4b": 198, "abcde2a8b16a2b": 198, "acbde2c8b16c2b": 198, "abcde2b32a8b": 198, "abc2b8c16b2c": 198, "abcd2b8c16b2c": 198, "abcde2b8c16b2c": 198, "abcdef2b8c16b2c": 198, "bacde2b8a16b4a": 198, "bacd2b8a16b4a": 198, "bac2b8a16b4a": 198, "bacde2b8a16b2a": 198, "bacd2b8a16b2a": 198, "bac2b8a16b2a": 198, "abcde2c8b16c2b": 198, "abcdef2c8b16c2b": 198, "acbdef2c8b16c2b": 198, "abcd2b8c16b4c": 198, "abcde2b8c16b4c": 198, "ncdhw40n16c": 198, "ncw40n16c": 198, "nchw40n16c": 198, "ncw2c32n8c": 198, "nchw2c32n8c": 198, "ncdhw2c32n8c": 198, "oiw2i8o16i4o": 198, "oihw2i8o16i4o": 198, "oidhw2i8o16i4o": 198, "oiw2o8i16o4i": 198, "oiw2o8i16o2i": 198, "iow2i8o16i4o": 198, "iow2i8o16i2o": 198, "oihw2o8i16o4i": 198, "oihw2o8i16o2i": 198, "iohw2i8o16i4o": 198, "iohw2i8o16i2o": 198, "oidhw2o8i16o4i": 198, "oidhw2o8i16o2i": 198, "iodhw2i8o16i4o": 198, "iodhw2i8o16i2o": 198, "goiw2o8i16o2i": 198, "giow2i8o16i2o": 198, "giohw2i8o16i2o": 198, "giodhw2i8o16i2o": 198, "goihw2o8i16o2i": 198, "goidhw2o8i16o2i": 198, "goiw2o8i16o4i": 198, "goihw2o8i16o4i": 198, "ba4b8a16b2a": 198, "ba4b8a16b4a": 198, "acb4c8b16c2b": 198, "acb4c8b16c4b": 198, "acb16c2b": 198, "acb16c4b": 198, "ba16b2a": 198, "ba16b4a": 198, "ba4b4a": 198, "ba8b4a": 198, "abc16b16c": 198, "abc16b32c": 198, "ab16a16b": 198, "ab16a32b": 198, "abcde16a16b2a": 198, "abcdef16b16c2b": 198, "acedb16a": 198, "abdfec16b": 198, "odwhi16o": 198, "godwhi16o": 198, "abdec64e2c": 198, "abdec64e4c": 198, "ldgoi64o2i": 198, "ldgoi64o4i": 198, "abcd4c": 198, "abcde4c": 198, "abcdef4c": 198, "abcde32c": 198, "abcdef32c": 198, "acdefb16b32c2b": 198, "acdefb16b32c4b": 198, "acdefb16b48c2b": 198, "acdefb16b48c4b": 198, "acdefb16b64c2b": 198, "acdefb16b64c4b": 198, "bcdea16a32b2a": 198, "bcdea16a32b4a": 198, "bcdea16a48b2a": 198, "bcdea16a48b4a": 198, "bcdea16a64b2a": 198, "bcdea16a64b4a": 198, "acdefb32c": 198, "acdefb32c2b": 198, "acdefb32c4b": 198, "acdefb48c": 198, "acdefb48c2b": 198, "acdefb48c4b": 198, "acdefb64c": 198, "acdefb64c2b": 198, "acdefb64c4b": 198, "bcdea32b": 198, "bcdea32b2a": 198, "bcdea32b4a": 198, "bcdea48b": 198, "bcdea48b2a": 198, "bcdea48b4a": 198, "bcdea64b": 198, "bcdea64b2a": 198, "bcdea64b4a": 198, "bca32b": 198, "bca32b2a": 198, "bca32b4a": 198, "bca48b": 198, "bca48b2a": 198, "bca48b4a": 198, "bca64b": 198, "bca64b2a": 198, "bca64b4a": 198, "acdb32c": 198, "acdb32c2b": 198, "acdb32c4b": 198, "acdb48c": 198, "acdb48c2b": 198, "acdb48c4b": 198, "acdb64c": 198, "acdb64c2b": 198, "acdb64c4b": 198, "bca16a16b2a": 198, "bca16a16b4a": 198, "bcda16a16b2a": 198, "bcda16a16b4a": 198, "bcdea16a16b2a": 198, "bcdea16a16b4a": 198, "acdb16b16c2b": 198, "acdb16b16c4b": 198, "acdeb16b16c2b": 198, "acdeb16b16c4b": 198, "acdefb16b16c2b": 198, "acdefb16b16c4b": 198, "bca16a32b2a": 198, "bca16a32b4a": 198, "bca16a48b2a": 198, "bca16a48b4a": 198, "bca16a64b2a": 198, "bca16a64b4a": 198, "acdb16b32c2b": 198, "acdb16b32c4b": 198, "acdb16b48c2b": 198, "acdb16b48c4b": 198, "acdb16b64c2b": 198, "acdb16b64c4b": 198, "bcda16a32b2a": 198, "bcda16a32b4a": 198, "bcda16a48b2a": 198, "bcda16a48b4a": 198, "bcda16a64b2a": 198, "bcda16a64b4a": 198, "acdeb16b32c2b": 198, "acdeb16b32c4b": 198, "acdeb16b48c2b": 198, "acdeb16b48c4b": 198, "acdeb16b64c2b": 198, "acdeb16b64c4b": 198, "bca16b": 198, "bca16b2a": 198, "bca16b4a": 198, "bcda16b": 198, "bcda16b2a": 198, "bcda16b4a": 198, "bcdea16b": 198, "bcdea16b2a": 198, "bcdea16b4a": 198, "acdb16c": 198, "acdb16c2b": 198, "acdb16c4b": 198, "acdeb16c": 198, "acdeb16c2b": 198, "acdeb16c4b": 198, "acdefb16c": 198, "acdefb16c2b": 198, "acdefb16c4b": 198, "bcda32b": 198, "bcda32b2a": 198, "bcda32b4a": 198, "bcda48b": 198, "bcda48b2a": 198, "bcda48b4a": 198, "bcda64b": 198, "bcda64b2a": 198, "bcda64b4a": 198, "acdeb32c": 198, "acdeb32c2b": 198, "acdeb32c4b": 198, "acdeb48c": 198, "acdeb48c2b": 198, "acdeb48c4b": 198, "acdeb64c": 198, "acdeb64c2b": 198, "acdeb64c4b": 198, "nchw16n32c": 198, "goiw4i": 198, "goiw32i": 198, "goihw4i": 198, "goihw32i": 198, "goidhw4i": 198, "goidhw32i": 198, "cab": 198, "cdab": 198, "cdeab": 198, "woi": 198, "hwoi": 198, "dhwoi": 198, "owi24o": 198, "ohwi24o": 198, "odhwi24o": 198, "gowi24o": 198, "gohwi24o": 198, "godhwi24o": 198, "owi24o2i": 198, "ohwi24o2i": 198, "odhwi24o2i": 198, "gowi24o2i": 198, "gohwi24o2i": 198, "godhwi24o2i": 198, "owi24o4i": 198, "ohwi24o4i": 198, "odhwi24o4i": 198, "gowi24o4i": 198, "gohwi24o4i": 198, "godhwi24o4i": 198, "oi8i32o": 198, "oiw8i32o": 198, "owi8i32o": 198, "oihw8i32o": 198, "ohwi8i32o": 198, "oidhw8i32o": 198, "odhwi8i32o": 198, "oi8i24o": 198, "oiw8i24o": 198, "owi8i24o": 198, "oihw8i24o": 198, "ohwi8i24o": 198, "oidhw8i24o": 198, "odhwi8i24o": 198, "oi8i16o": 198, "oiw8i16o": 198, "owi8i16o": 198, "oihw8i16o": 198, "ohwi8i16o": 198, "oidhw8i16o": 198, "odhwi8i16o": 198, "oi8i8o": 198, "ab4b8a4b": 198, "ab4b24a4b": 198, "abc4b8a4b": 198, "acb4b8a4b": 198, "abc4b24a4b": 198, "acb4b24a4b": 198, "abcd4b8a4b": 198, "acdb4b8a4b": 198, "abcd4b24a4b": 198, "acdb4b24a4b": 198, "abcde4b8a4b": 198, "acdeb4b8a4b": 198, "abcde4b24a4b": 198, "acdeb4b24a4b": 198, "bca8b": 198, "bca8b2a": 198, "bcda8b": 198, "bcda8b2a": 198, "bcdea8b": 198, "bcdea8b2a": 198, "acdb8c": 198, "acdb8c2b": 198, "acdeb8c": 198, "acdeb8c2b": 198, "acdefb8c": 198, "acdefb8c2b": 198, "bca24b": 198, "bca24b2a": 198, "bcda24b": 198, "bcda24b2a": 198, "bcdea24b": 198, "bcdea24b2a": 198, "acdb24c": 198, "acdb24c2b": 198, "acdeb24c": 198, "acdeb24c2b": 198, "acdefb24c": 198, "acdefb24c2b": 198, "iwo8i": 198, "iwo8i2o": 198, "iwo24i": 198, "iwo24i2o": 198, "ihwo8i": 198, "ihwo8i2o": 198, "ihwo24i": 198, "ihwo24i2o": 198, "idhwo8i": 198, "idhwo8i2o": 198, "idhwo24i": 198, "idhwo24i2o": 198, "giwo8i": 198, "giwo8i2o": 198, "giwo24i": 198, "giwo24i2o": 198, "gihwo8i": 198, "gihwo8i2o": 198, "gihwo24i": 198, "gihwo24i2o": 198, "gidhwo8i": 198, "gidhwo8i2o": 198, "gidhwo24i": 198, "gidhwo24i2o": 198, "ab8b24a2b": 198, "abc8b24a2b": 198, "acb8b24a2b": 198, "abcd8b24a2b": 198, "acdb8b24a2b": 198, "abcde8b24a2b": 198, "acdeb8b24a2b": 198, "ab8b8a2b": 198, "abc8b8a2b": 198, "acb8b8a2b": 198, "abcd8b8a2b": 198, "acdb8b8a2b": 198, "abcde8b8a2b": 198, "acdeb8b8a2b": 198, "oi8i8o2i": 198, "oi8i24o2i": 198, "oiw8i8o2i": 198, "owi8i8o2i": 198, "oiw8i24o2i": 198, "owi8i24o2i": 198, "oihw8i8o2i": 198, "ohwi8i8o2i": 198, "oihw8i24o2i": 198, "ohwi8i24o2i": 198, "oidhw8i8o2i": 198, "odhwi8i8o2i": 198, "oidhw8i24o2i": 198, "odhwi8i24o2i": 198, "bca8b4a": 198, "bcda8b4a": 198, "bcdea8b4a": 198, "acdb8c4b": 198, "acdeb8c4b": 198, "acdefb8c4b": 198, "bca24b4a": 198, "bcda24b4a": 198, "bcdea24b4a": 198, "acdb24c4b": 198, "acdeb24c4b": 198, "acdefb24c4b": 198, "abc16a4b": 198, "abcd16a4b": 198, "abcde16a4b": 198, "iwo8i4o": 198, "iwo24i4o": 198, "ihwo8i4o": 198, "ihwo24i4o": 198, "idhwo8i4o": 198, "idhwo24i4o": 198, "giwo8i4o": 198, "giwo24i4o": 198, "gihwo8i4o": 198, "gihwo24i4o": 198, "gidhwo8i4o": 198, "gidhwo24i4o": 198, "ba2a24b": 198, "acb2b24c": 198, "ba2a8b": 198, "acb2b8c": 198, "ba8a24b": 198, "acb8b24c": 198, "ba8a16b": 198, "acb8b16c": 198, "ba8a8b": 198, "acb8b8c": 198, "bcad": 198, "cabd": 198, "dabc": 198, "dnnl_sparse_encoding_undef": [199, 221], "csr": [199, 221, 245, 307, 381, 525], "dnnl_csr": [199, 221], "dnnl_pack": [199, 221], "coo": [199, 221, 244, 307, 380, 525], "dnnl_coo": [199, 221], "unstructur": [199, 221], "sparsiti": [199, 221], "use_global_stat": 200, "use_scal": [200, 230, 259, 262, 363, 403, 409], "use_shift": [200, 230, 259, 262, 363, 403, 409], "fuse_norm_relu": [200, 230, 363], "fuse_norm_add_relu": 200, "0x0u": 201, "0x1u": [201, 225], "0x2u": [201, 225], "0x4u": 201, "0x8u": 201, "0x10u": 201, "wrt": [201, 246, 382], "dnnl_ocl_interop_usm": [202, 203, 308, 353], "dnnl_ocl_interop_buff": [202, 203, 308, 353], "dnnl_ocl_typ": 203, "dnnl_pack_type_undef": [204, 228], "dnnl_pack_type_no_tran": [204, 228, 327], "dnnl_pack_type_tran": [204, 228, 327], "dnnl_pack_type_pack32": [204, 228], "guard": [204, 228], "dnnl_undefined_primit": [205, 206, 289], "dnnl_reorder": [205, 206], "dnnl_shuffl": [205, 206], "dnnl_concat": [205, 206], "dnnl_sum": [205, 206, 289], "dnnl_convolut": [205, 206, 289, 531], "dnnl_deconvolut": [205, 206], "dnnl_eltwis": [205, 206, 289], "dnnl_lrn": [205, 206], "dnnl_batch_norm": [205, 206], "dnnl_inner_product": [205, 206], "dnnl_rnn": [205, 206], "dnnl_binari": [205, 206, 289, 531], "dnnl_matmul": [205, 206], "dnnl_resampl": [205, 206], "dnnl_pool": [205, 206], "dnnl_reduct": [205, 206], "dnnl_prelu": [205, 206], "dnnl_softmax": [205, 206], "dnnl_layer_norm": [205, 206], "dnnl_group_norm": [205, 206], "summat": [205, 213, 214, 562], "dnnl_gemm": 206, "dnnl_primitive_kind_max": 206, "dnnl_profiling_data_kind_undef": [207, 208], "dnnl_profiling_data_kind_tim": [207, 208], "nanosecond": [207, 208], "dnnl_prop_kind_undef": [209, 210], "dnnl_forward": [209, 210, 233, 241, 252, 369, 379, 389], "dnnl_backward_weight": [209, 210], "backward_bia": 209, "dnnl_backward_bia": [209, 210], "160": 210, "192": [210, 234, 421], "193": 210, "dnnl_query_undef": [211, 212], "dnnl_query_engin": [211, 212], "primitive_kind": 211, "dnnl_query_primitive_kind": [211, 212], "num_of_inputs_s32": 211, "dnnl_query_num_of_inputs_s32": [211, 212, 313], "num_of_outputs_s32": 211, "dnnl_query_num_of_outputs_s32": [211, 212, 313], "time_estimate_f64": 211, "dnnl_query_time_estimate_f64": [211, 212], "dnnl_query_memory_consumption_s64": [211, 212], "scratchpad_engin": [211, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "dnnl_query_scratchpad_engin": [211, 212], "reorder_src_engin": 211, "dnnl_query_reorder_src_engin": [211, 212], "reorder_dst_engin": 211, "dnnl_query_reorder_dst_engin": [211, 212], "impl_info_str": [211, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "dnnl_query_impl_info_str": [211, 212, 313], "dnnl_query_prop_kind": [211, 212], "cache_blob_id_size_s64": 211, "dnnl_query_cache_blob_id_size_s64": [211, 212], "cache_blob_id": [211, 283, 308, 353], "dnnl_query_cache_blob_id": [211, 212], "dnnl_query_dil": [211, 212], "dnnl_query_padding_l": [211, 212], "dnnl_query_padding_r": [211, 212], "epsilon_f32": 211, "dnnl_query_epsilon_f32": [211, 212], "dnnl_query_flag": [211, 212], "alg_kind": [211, 283, 289, 291, 295, 297, 298, 305, 309, 315, 317, 321], "dnnl_query_alg_kind": [211, 212], "alpha_f32": 211, "dnnl_query_alpha_f32": [211, 212], "beta_f32": 211, "dnnl_query_beta_f32": [211, 212], "axis_s32": 211, "dnnl_query_axis_s32": [211, 212], "local_size_s64": 211, "dnnl_query_local_size_s64": [211, 212], "k_f32": 211, "dnnl_query_k_f32": [211, 212], "p_f32": 211, "dnnl_query_p_f32": [211, 212], "dnnl_query_factor": [211, 212], "cell_kind": [211, 551], "dnnl_query_cell_kind": [211, 212], "dnnl_query_direct": [211, 212], "activation_kind": 211, "dnnl_query_activation_kind": [211, 212], "dnnl_query_kernel": [211, 212], "group_size_s64": 211, "dnnl_query_group_size_s64": [211, 212], "src_md": [211, 230, 232, 233, 238, 247, 255, 256, 259, 261, 262, 264, 266, 269, 270, 271, 272, 273, 275, 276, 277, 363, 367, 369, 374, 384, 393, 395, 403, 407, 409, 414, 418, 422, 424, 426, 428, 430, 433, 435, 437, 542, 546], "dnnl_query_src_md": [211, 212, 233, 241, 313, 369, 379], "diff_src_md": 211, "dnnl_query_diff_src_md": [211, 212], "dnnl_query_weights_md": [211, 212, 233, 241, 313, 369, 379], "diff_weights_md": 211, "dnnl_query_diff_weights_md": [211, 212, 241, 379], "dst_md": [211, 230, 231, 233, 244, 245, 247, 255, 259, 261, 262, 264, 266, 269, 270, 271, 272, 273, 275, 276, 363, 365, 369, 380, 381, 384, 393, 403, 407, 409, 414, 418, 422, 424, 426, 428, 430, 433, 435, 542, 546], "dnnl_query_dst_md": [211, 212, 233, 241, 313, 369, 379], "diff_dst_md": 211, "dnnl_query_diff_dst_md": [211, 212, 241, 379], "dnnl_query_workspace_md": [211, 212, 233, 241, 313, 369, 379], "dnnl_query_scratchpad_md": [211, 212], "dnnl_query_exec_arg_md": [211, 212, 308, 313, 324], "ndims_s32": 211, "dnnl_query_ndims_s32": [211, 212, 307], "dnnl_query_dim": [211, 212, 307], "dnnl_query_data_typ": [211, 212, 307], "submemory_offset_s64": 211, "dnnl_query_submemory_offset_s64": [211, 212, 307], "padded_dim": [211, 307, 313, 525], "dnnl_query_padded_dim": [211, 212, 307], "padded_offset": 211, "dnnl_query_padded_offset": [211, 212, 307], "dnnl_query_format_kind": [211, 212, 307], "inner_nblks_s32": 211, "dnnl_query_inner_nblks_s32": [211, 212, 307], "dnnl_query_sparse_encod": [211, 212, 307], "nnz_s64": 211, "dnnl_query_nnz_s64": [211, 212, 307], "num_handles_s32": 211, "dnnl_query_num_handles_s32": [211, 212, 307], "dnnl_query_t": [211, 283, 307, 313, 349], "estim": [211, 212], "submemori": [211, 212, 307, 525], "dnnl_query_some_md": 212, "dnnl_query_max": 212, "dnnl_primitive_desc_queri": [212, 283, 313], "dnnl_query_": 212, "_engin": 212, "dnnl_engine_t": [212, 233, 241, 252, 283, 290, 291, 294, 295, 297, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 336, 340, 342, 344, 345, 369, 379, 389], "dnnl_primitive_kind_t": [212, 283, 289, 313, 349], "_s32": 212, "_s64": 212, "_f64": 212, "_str": 212, "_md": [212, 395, 421], "const_dnnl_memory_desc_t": [212, 233, 241, 283, 289, 290, 291, 294, 295, 297, 298, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 315, 316, 317, 318, 320, 321, 323, 324, 369, 379], "_pd": [212, 395], "const_dnnl_primitive_desc_t": [212, 283, 290, 295, 297, 298, 301, 302, 304, 305, 309, 310, 313, 317, 318, 320, 321, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 537, 543, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "dnnl_alg_kind_t": [212, 283, 289, 291, 295, 297, 298, 305, 309, 313, 315, 317, 318, 321, 349], "dnnl_rnn_direction_t": [212, 283, 318, 349], "dnnl_data_type_t": [212, 283, 289, 296, 304, 307, 327, 339, 349, 483, 523], "dnnl_format_kind_t": [212, 283, 307], "dnnl_sparse_encoding_t": [212, 283, 307], "thumb": 212, "dnnl_primitive_desc_clon": [212, 283, 313], "stub": 212, "grad": 212, "dnnl_rnn_direction_undef": [213, 214], "unidirectional_left2right": [213, 229, 248, 249, 263, 265, 274, 281, 361, 385, 386, 411, 416, 432, 441], "dnnl_unidirectional_left2right": [213, 214], "unidirectional_right2left": 213, "dnnl_unidirectional_right2left": [213, 214], "dnnl_bidirectional_concat": [213, 214], "dnnl_bidirectional_sum": [213, 214], "unidirect": [213, 214, 248, 249, 274, 385, 386, 432], "bidirect": [213, 214, 248, 249, 385, 386], "dnnl_rnn_flags_undef": [215, 216], "dnnl_rnn_flags_diff_weights_overwrit": [215, 216], "dnnl_rounding_mode_environ": [217, 218], "dnnl_rounding_mode_stochast": [217, 218], "dictat": [217, 218], "trail": [217, 218], "dnnl_scratchpad_mode_librari": [219, 220, 289], "dnnl_scratchpad_mode_us": [219, 220, 289], "safeti": [219, 220], "in_ord": [224, 253, 278, 280, 390, 401, 402], "dnnl_stream_in_ord": [224, 225], "out_of_ord": 224, "dnnl_stream_out_of_ord": [224, 225], "default_flag": [224, 561], "dnnl_stream_default_flag": [224, 225, 233, 241, 252, 369, 379, 389], "dnnl_sycl_interop_usm": [226, 227, 324], "dnnl_sycl_interop_buff": [226, 227, 324], "dnnl_sycl_typ": 227, "tran": [228, 569], "2022": [229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 248, 249, 252, 253, 255, 258, 260, 261, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 361, 363, 365, 367, 369, 372, 373, 374, 376, 379, 389, 393, 405, 407, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437], "augru_exampl": [229, 283, 361], "attention_dim": [229, 361], "weights_dim": [229, 239, 247, 254, 261, 265, 266, 270, 281, 361, 376, 384, 391, 407, 416, 418, 424, 441], "bias_dim": [229, 239, 254, 261, 263, 265, 266, 281, 361, 376, 391, 407, 411, 416, 418, 441], "dst_dim": [229, 239, 247, 254, 255, 261, 265, 266, 269, 270, 271, 273, 361, 376, 384, 391, 393, 407, 416, 418, 422, 424, 426, 430], "src_layer_data": [229, 263, 265, 281, 361, 411, 416, 441], "attention_data": [229, 361], "weights_layer_data": [229, 263, 265, 281, 361, 411, 416, 441], "weights_iter_data": [229, 263, 265, 281, 361, 411, 416, 441], "bias_data": [229, 239, 254, 261, 263, 265, 266, 281, 361, 376, 391, 407, 411, 416, 418, 441], "dst_layer_data": [229, 263, 265, 281, 361, 411, 416, 441], "sin": [229, 230, 231, 232, 239, 247, 254, 259, 261, 262, 263, 265, 266, 277, 281, 361, 363, 365, 367, 376, 384, 391, 403, 407, 409, 411, 416, 418, 437, 441], "src_layer_md": [229, 263, 265, 281, 361, 411, 416, 441], "attention_md": [229, 361], "bias_md": [229, 261, 263, 265, 266, 281, 361, 407, 411, 416, 418, 441], "dst_layer_md": [229, 263, 265, 281, 361, 411, 416, 441], "src_layer_mem": [229, 263, 265, 281, 361, 411, 416, 441], "attention_mem": [229, 361], "bias_mem": [229, 261, 263, 265, 266, 281, 361, 407, 411, 416, 418, 441], "dst_layer_mem": [229, 263, 265, 281, 361, 411, 416, 441], "user_weights_layer_mem": [229, 263, 265, 281, 361, 411, 416, 441], "user_weights_iter_mem": [229, 263, 265, 281, 361, 411, 416, 441], "write_to_dnnl_memori": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 247, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 379, 384, 389, 391, 393, 395, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441, 443], "augru_weights_layer_md": [229, 361], "augru_weights_iter_md": [229, 361], "src_iter_md": [229, 263, 265, 281, 361, 411, 416, 441], "dst_iter_md": [229, 263, 265, 281, 361, 411, 416, 441], "rnn_direct": [229, 248, 249, 263, 265, 274, 281, 318, 349, 361, 385, 386, 411, 416, 432, 441, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "augru_weights_layer_mem": [229, 361], "augru_weights_iter_mem": [229, 361], "src_iter_mem": [229, 263, 265, 281, 361, 411, 416, 441], "weights_iter_mem": [229, 263, 265, 281, 361, 411, 416, 441], "dst_iter_mem": [229, 263, 265, 281, 361, 411, 416, 441], "workspace_mem": [229, 230, 263, 264, 265, 269, 281, 361, 363, 411, 414, 416, 422, 441], "augru_prim": [229, 361], "augru_arg": [229, 361], "dnnl_arg_augru_attent": [229, 283, 313, 361], "read_from_dnnl_memori": [229, 230, 231, 232, 239, 244, 245, 247, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 281, 283, 361, 363, 365, 367, 376, 380, 381, 384, 389, 391, 393, 395, 396, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437, 441], "parse_engine_kind": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 247, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 361, 363, 365, 367, 369, 372, 373, 374, 376, 384, 391, 393, 395, 403, 405, 407, 409, 411, 414, 416, 418, 422, 424, 426, 428, 430, 432, 433, 435, 437, 439, 441, 443], "2020": [230, 231, 232, 238, 239, 255, 261, 262, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 363, 365, 367, 374, 376, 393, 407, 409, 414, 416, 418, 422, 424, 426, 428, 430, 433, 435, 437], "batch_normalization_exampl": [230, 283, 363], "227": [230, 233, 234, 236, 237, 241, 255, 257, 261, 262, 264, 268, 270, 271, 272, 273, 275, 277, 278, 363, 369, 370, 372, 373, 379, 393, 407, 409, 414, 421, 424, 426, 428, 430, 433, 437], "scaleshift_dim": [230, 259, 262, 363, 403, 409], "src_data": [230, 232, 238, 239, 247, 254, 255, 259, 261, 262, 264, 266, 269, 270, 271, 272, 273, 275, 276, 277, 363, 367, 374, 376, 384, 391, 393, 403, 407, 409, 414, 418, 422, 424, 426, 428, 430, 433, 435, 437], "scale_data": [230, 232, 259, 262, 363, 367, 403, 409], "shift_data": [230, 232, 259, 262, 363, 367, 403, 409], "tan": [230, 259, 262, 363, 403, 409], "scaleshift_md": [230, 259, 262, 363, 403, 409], "src_mem": [230, 232, 238, 247, 255, 256, 259, 261, 262, 264, 266, 267, 269, 271, 272, 273, 275, 276, 277, 363, 367, 374, 384, 393, 395, 403, 407, 409, 414, 418, 420, 422, 426, 428, 430, 433, 435, 437], "scale_mem": [230, 232, 259, 262, 363, 367, 403, 409], "shift_mem": [230, 232, 259, 262, 363, 367, 403, 409], "bnorm_pd": [230, 363], "10f": [230, 259, 262, 363, 403, 409], "normalization_flag": [230, 259, 262, 290, 301, 304, 313, 349, 363, 403, 409, 454, 456, 485, 487, 501, 503], "mean_mem": [230, 232, 259, 262, 363, 367, 403, 409], "mean_desc": [230, 259, 262, 363, 403, 409, 454, 456, 485, 487, 501, 503], "variance_mem": [230, 232, 259, 262, 363, 367, 403, 409], "variance_desc": [230, 259, 262, 363, 403, 409, 454, 456, 485, 487, 501, 503], "bnorm_prim": [230, 363], "bnorm_arg": [230, 363], "binary_exampl": [231, 283, 365], "150": [231, 232, 365, 367], "src_0_dim": [231, 365], "src_1_dim": [231, 365], "src_0_data": [231, 365], "src_1_data": [231, 365], "src_0_md": [231, 365], "src_1_md": [231, 365], "src_0_mem": [231, 365], "src_1_mem": [231, 365], "binary_op": [231, 232, 289, 365, 367, 531], "binary_attr": [231, 232, 365, 367], "binary_pd": [231, 232, 365, 367], "binary_prim": [231, 232, 365, 367], "binary_arg": [231, 232, 365, 367], "tmp_dst": [232, 367], "params_dim": [232, 367], "mean_data": [232, 367], "variance_data": [232, 367], "oscale_data": [232, 367], "mean_md": [232, 367], "variance_md": [232, 367], "scale_md": [232, 367], "shift_md": [232, 367], "oscale_md": [232, 367], "oscale_mem": [232, 367], "dst_tmp": [232, 367], "output_scal": [232, 367], "2016": [233, 234, 237, 241, 369, 373, 379], "posix_memalign": [233, 241, 369, 379], "_posix_c_sourc": [233, 241, 283, 369, 379], "200112l": [233, 241, 369, 379], "stdlib": [233, 241, 252, 369, 379, 389], "conv_ih": [233, 241, 283, 369, 379], "conv_iw": [233, 241, 283, 369, 379], "conv_oh": [233, 241, 283, 369, 379], "conv_ow": [233, 241, 283, 369, 379], "conv_strid": [233, 235, 236, 237, 241, 283, 369, 371, 372, 373, 379], "conv_pad": [233, 235, 236, 237, 241, 283, 369, 371, 372, 373, 379], "pool_oh": [233, 241, 283, 369, 379], "27": [233, 234, 236, 237, 241, 269, 369, 372, 373, 379, 422], "pool_ow": [233, 241, 283, 369, 379], "pool_strid": [233, 236, 237, 241, 283, 369, 372, 373, 379], "pool_pad": [233, 234, 236, 237, 241, 283, 369, 370, 372, 373, 379], "arr": [233, 241, 283, 369, 379], "init_net_data": [233, 241, 283, 369, 379], "uint32_t": [233, 236, 237, 241, 283, 369, 372, 373, 379], "1637": [233, 241, 369, 379], "indx": [233, 241, 369, 379], "typedef": [233, 241, 283, 349, 369, 379], "narg": [233, 241, 283, 308, 313, 324, 369, 379, 447], "dnnl_exec_arg_t": [233, 241, 252, 283, 308, 313, 324, 369, 379, 389, 447], "args_t": [233, 241, 283, 369, 379], "prepare_arg_nod": [233, 241, 283, 369, 379], "free_arg_nod": [233, 241, 283, 369, 379], "set_arg": [233, 241, 283, 369, 379], "arg_idx": [233, 241, 283, 369, 379], "dnnl_memory_t": [233, 241, 252, 283, 307, 308, 313, 324, 369, 379, 389, 481], "init_data_memori": [233, 241, 283, 369, 379], "user_tag": [233, 241, 283, 369, 379], "user_md": [233, 241, 369, 379], "dnnl_memory_cr": [233, 241, 252, 283, 307, 369, 379, 389], "dnnl_status_t": [233, 241, 283, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 355, 369, 379, 395, 439, 480], "prepare_reord": [233, 241, 283, 369, 379], "user_memori": [233, 241, 283, 369, 379], "prim_memory_md": [233, 241, 283, 369, 379], "prim_engin": [233, 241, 283, 369, 379], "dir_is_user_to_prim": [233, 241, 283, 369, 379], "prim_memori": [233, 241, 283, 369, 379], "dnnl_primitive_t": [233, 241, 252, 283, 313, 369, 379, 389], "net_index": [233, 241, 283, 369, 379], "inc": [233, 241, 369, 379, 413], "net_arg": [233, 234, 241, 283, 369, 370, 379], "user_memory_md": [233, 241, 369, 379], "dnnl_memory_get_memory_desc": [233, 241, 283, 307, 369, 379], "user_mem_engin": [233, 241, 369, 379], "dnnl_memory_get_engin": [233, 241, 283, 307, 369, 379], "dnnl_memory_desc_equ": [233, 241, 283, 307, 369, 379], "dnnl_primitive_desc_t": [233, 241, 252, 283, 289, 290, 291, 294, 295, 297, 298, 301, 302, 304, 305, 306, 309, 310, 313, 315, 316, 317, 318, 320, 321, 323, 369, 379, 389, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "reorder_pd": [233, 241, 272, 369, 379, 428], "dnnl_reorder_primitive_desc_cr": [233, 241, 252, 283, 316, 369, 379, 389], "dnnl_primitive_cr": [233, 241, 252, 283, 313, 369, 379, 389], "dnnl_primitive_desc_destroi": [233, 241, 252, 283, 313, 369, 379, 389], "simple_net": [233, 234, 236, 237, 241, 248, 249, 274, 283, 369, 371, 372, 373, 379, 432], "dnnl_engine_kind_t": [233, 283, 299, 335, 336, 337, 342, 349, 369], "dnnl_engine_cr": [233, 241, 252, 283, 299, 369, 379, 389], "net_src_siz": [233, 241, 369, 379], "net_dst_siz": [233, 241, 369, 379], "net_src": [233, 236, 237, 241, 248, 249, 274, 369, 372, 373, 379, 385, 386, 432], "net_dst": [233, 237, 241, 248, 249, 274, 369, 373, 379, 385, 386, 432], "memset": [233, 241, 248, 249, 369, 379, 385, 386], "conv_user_src_s": [233, 241, 369, 379], "conv_user_weights_s": [233, 241, 369, 379], "conv_bias_s": [233, 241, 369, 379], "conv_user_dst_s": [233, 241, 369, 379], "conv_dil": [233, 241, 369, 379], "conv_src": [233, 241, 268, 369, 379, 421], "conv_weight": [233, 235, 236, 237, 241, 369, 371, 372, 373, 379], "conv_bia": [233, 235, 236, 237, 241, 369, 371, 372, 373, 379], "conv_user_src_memori": [233, 236, 237, 241, 369, 372, 373, 379], "conv_user_weights_memori": [233, 236, 237, 241, 369, 372, 373, 379], "conv_user_bias_memori": [233, 236, 237, 241, 369, 372, 373, 379], "conv_src_md": [233, 235, 236, 237, 239, 241, 267, 268, 369, 371, 372, 373, 376, 379, 420, 421], "conv_weights_md": [233, 235, 236, 237, 239, 241, 267, 369, 371, 372, 373, 376, 379, 420], "conv_bias_md": [233, 235, 236, 237, 241, 369, 371, 372, 373, 379], "dnnl_convolution_forward_primitive_desc_cr": [233, 241, 283, 295, 369, 379], "conv_internal_src_memori": [233, 241, 369, 379], "conv_internal_weights_memori": [233, 241, 369, 379], "conv_internal_dst_memori": [233, 241, 369, 379], "dnnl_primitive_desc_query_md": [233, 241, 283, 308, 313, 324, 369, 379], "conv_reorder_src": [233, 241, 369, 379], "conv_reorder_weight": [233, 241, 369, 379], "negative_slop": [233, 236, 237, 241, 369, 372, 373, 379], "relu_src_md": [233, 236, 237, 241, 369, 372, 373, 379], "relu_dst_md": [233, 241, 369, 379], "relu_pd": [233, 236, 237, 241, 252, 253, 256, 258, 268, 279, 369, 372, 373, 379, 389, 390, 395, 396, 439], "dnnl_eltwise_forward_primitive_desc_cr": [233, 241, 252, 283, 298, 369, 379, 389], "relu_dst_memori": [233, 236, 237, 241, 369, 372, 373, 379], "0001": [233, 234, 236, 237, 241, 369, 372, 373, 379], "0001f": [233, 234, 236, 237, 241, 369, 372, 373, 379], "75f": [233, 234, 236, 237, 241, 264, 369, 372, 373, 379, 414], "lrn_src_md": [233, 241, 369, 379], "lrn_dst_md": [233, 241, 369, 379], "lrn_pd": [233, 236, 237, 241, 264, 369, 372, 373, 379, 414], "dnnl_lrn_forward_primitive_desc_cr": [233, 241, 283, 305, 369, 379], "lrn_dst_memori": [233, 236, 237, 241, 369, 372, 373, 379], "lrn_ws_memori": [233, 241, 369, 379], "lrn_ws_md": [233, 241, 369, 379], "pool_dst_siz": [233, 241, 369, 379], "pool_kernel": [233, 236, 237, 241, 369, 372, 373, 379], "pool_dil": [233, 234, 236, 237, 241, 369, 370, 372, 373, 379], "pool_src_md": [233, 241, 369, 379], "pool_dst_any_md": [233, 369], "pool_user_dst_memori": [233, 236, 237, 241, 369, 372, 373, 379], "pool_pd": [233, 236, 237, 241, 267, 369, 372, 373, 379, 420], "dnnl_pooling_forward_primitive_desc_cr": [233, 241, 283, 309, 369, 379], "pool_ws_memori": [233, 241, 369, 379], "pool_ws_md": [233, 241, 369, 379], "pool_dst_memori": [233, 236, 237, 241, 369, 372, 373, 379], "pool_reorder_dst": [233, 241, 369, 379], "pool_internal_dst_memori": [233, 241, 369, 379], "pool_dst_md": [233, 236, 237, 241, 267, 369, 372, 373, 379, 420], "tent": [233, 241, 369, 379], "workaround": [233, 241, 369, 379], "dnnl_stream_t": [233, 241, 252, 283, 308, 313, 314, 322, 324, 325, 333, 340, 344, 369, 379, 389], "dnnl_stream_creat": [233, 241, 252, 283, 322, 369, 379, 389], "dnnl_primitive_execut": [233, 241, 252, 283, 289, 313, 369, 379, 389, 481], "dnnl_stream_wait": [233, 241, 252, 283, 307, 314, 322, 369, 379, 389], "dnnl_stream_destroi": [233, 241, 252, 283, 322, 369, 379, 389], "dnnl_memory_destroi": [233, 241, 252, 283, 307, 369, 379, 389], "dnnl_primitive_destroi": [233, 241, 252, 283, 313, 369, 379, 389], "dnnl_engine_destroi": [233, 241, 252, 283, 299, 369, 379, 389], "engine_kind2str_upp": [233, 256, 279, 283, 369, 395, 439], "chrono": 234, "100": [234, 260, 282, 405, 443], "eng": [234, 235, 236, 237, 242, 243, 246, 250, 251, 256, 257, 258, 260, 267, 268, 274, 278, 279, 280, 282, 283, 370, 371, 372, 373, 382, 387, 395, 396, 397, 398, 399, 401, 402, 405, 420, 421, 432, 439, 443, 531], "conv1_src_tz": [234, 370], "conv1_weights_tz": [234, 370], "conv1_bias_tz": [234, 370], "conv1_dst_tz": [234, 370], "conv1_pad": [234, 370], "user_src": [234, 235, 268, 370, 371, 421], "user_dst": [234, 235, 268, 370, 371, 421], "1000": [234, 260, 276, 282, 370, 405, 435, 443], "conv1_weight": [234, 370], "conv1_bia": [234, 370], "user_src_memori": [234, 235, 370, 371], "user_weights_memori": [234, 235, 370, 371], "conv1_user_bias_memori": [234, 370], "conv1_prim_desc": [234, 370], "conv1_src_memori": [234, 370], "conv1_weights_memori": [234, 370], "conv1_dst_memori": [234, 370], "relu1": [234, 242, 257, 278, 397, 400, 401], "negative1_slop": [234, 370], "relu1_prim_desc": [234, 370], "lrn1": 234, "alpha1": 234, "beta1": 234, "local1_s": 234, "lrn1_prim_desc": 234, "lrn_forward": [234, 236, 237, 264, 305, 349, 372, 373, 414, 513, 537], "lrn1_dst_memori": [234, 370], "pool1": [234, 369, 370], "pool1_dst_tz": 234, "pool1_kernel": [234, 370], "pool1_strid": [234, 370], "pool1_dst_md": [234, 370], "pool1_pd": [234, 370], "pooling_forward": [234, 236, 237, 267, 269, 309, 349, 370, 372, 373, 420, 422, 527, 537], "pool1_dst_memori": [234, 370], "conv2_src_tz": 234, "conv2_weights_tz": 234, "conv2_bias_tz": 234, "conv2_dst_tz": 234, "conv2_strid": 234, "conv2_pad": 234, "conv2_weight": 234, "conv2_bia": 234, "conv2_user_weights_memori": 234, "conv2_user_bias_memori": 234, "conv2_src_md": 234, "conv2_bias_md": 234, "conv2_weights_md": 234, "conv2_dst_md": 234, "conv2_prim_desc": 234, "conv2_src_memori": 234, "conv2_weights_memori": 234, "conv2_dst_memori": 234, "relu2": 234, "negative2_slop": 234, "relu2_prim_desc": 234, "lrn2": 234, "alpha2": 234, "beta2": 234, "local2_s": 234, "k2": 234, "lrn2_prim_desc": 234, "lrn2_dst_memori": 234, "pool2": 234, "pool2_dst_tz": 234, "pool2_kernel": 234, "pool2_strid": 234, "pool2_dil": 234, "pool2_pad": 234, "pool2_dst_md": 234, "pool2_pd": 234, "pool2_dst_memori": 234, "384": [234, 235, 371], "conv3_src_tz": 234, "conv3_weights_tz": 234, "conv3_bias_tz": 234, "conv3_dst_tz": 234, "conv3_strid": 234, "conv3_pad": 234, "conv3_weight": 234, "conv3_bia": 234, "conv3_user_weights_memori": 234, "conv3_user_bias_memori": 234, "conv3_src_md": 234, "conv3_bias_md": 234, "conv3_weights_md": 234, "conv3_dst_md": 234, "conv3_prim_desc": 234, "conv3_src_memori": 234, "conv3_weights_memori": 234, "conv3_dst_memori": 234, "relu3": [234, 235, 371], "negative3_slop": 234, "relu3_prim_desc": 234, "conv4_src_tz": 234, "conv4_weights_tz": 234, "conv4_bias_tz": 234, "conv4_dst_tz": 234, "conv4_strid": 234, "conv4_pad": 234, "conv4_weight": 234, "conv4_bia": 234, "conv4_user_weights_memori": 234, "conv4_user_bias_memori": 234, "conv4_src_md": 234, "conv4_bias_md": 234, "conv4_weights_md": 234, "conv4_dst_md": 234, "conv4_prim_desc": 234, "conv4_src_memori": 234, "conv4_weights_memori": 234, "conv4_dst_memori": 234, "relu4": 234, "negative4_slop": 234, "relu4_prim_desc": 234, "conv5_src_tz": 234, "conv5_weights_tz": 234, "conv5_bias_tz": 234, "conv5_dst_tz": 234, "conv5_strid": 234, "conv5_pad": 234, "conv5_weight": 234, "conv5_bia": 234, "conv5_user_weights_memori": 234, "conv5_user_bias_memori": 234, "conv5_src_md": 234, "conv5_weights_md": 234, "conv5_bias_md": 234, "conv5_dst_md": 234, "conv5_prim_desc": 234, "conv5_src_memori": 234, "conv5_weights_memori": 234, "conv5_dst_memori": 234, "relu5": 234, "negative5_slop": 234, "relu5_prim_desc": 234, "pool5": 234, "pool5_dst_tz": 234, "pool5_kernel": 234, "pool5_strid": 234, "pool5_dil": 234, "pool5_pad": 234, "pool5_dst": 234, "pool5_dst_md": 234, "pool5_pd": 234, "pool5_dst_memori": 234, "fc6": 234, "4096": 234, "fc6_src_tz": 234, "fc6_weights_tz": 234, "fc6_bias_tz": 234, "fc6_dst_tz": 234, "fc6_weight": 234, "fc6_bia": 234, "fc6_user_weights_memori": 234, "fc6_user_bias_memori": 234, "fc6_src_md": 234, "fc6_bias_md": 234, "fc6_weights_md": 234, "fc6_dst_md": 234, "fc6_prim_desc": 234, "inner_product_forward": [234, 261, 302, 349, 407, 495, 497, 537], "fc6_src_memori": 234, "fc6_weights_memori": 234, "fc6_dst_memori": 234, "fc7": 234, "fc7_weights_tz": 234, "fc7_bias_tz": 234, "fc7_dst_tz": 234, "fc7_weight": 234, "fc7_bia": 234, "fc7_user_weights_memori": 234, "fc7_user_bias_memori": 234, "fc7_bias_md": 234, "fc7_weights_md": 234, "fc7_dst_md": 234, "fc7_prim_desc": 234, "fc7_weights_memori": 234, "fc7_dst_memori": 234, "fc8": 234, "fc8_weights_tz": 234, "fc8_bias_tz": 234, "fc8_dst_tz": 234, "fc8_weight": 234, "fc8_bia": 234, "fc8_user_weights_memori": 234, "fc8_user_bias_memori": 234, "user_dst_memori": [234, 235, 371], "fc8_bias_md": 234, "fc8_weights_md": 234, "fc8_dst_md": 234, "fc8_prim_desc": 234, "fc8_weights_memori": 234, "fc8_dst_memori": 234, "someth": [234, 236, 237, 248, 249, 274, 370, 372, 373, 432], "duration_cast": 234, "steady_clock": 234, "time_since_epoch": 234, "stdexcept": [235, 236, 246, 250, 253, 256, 258, 260, 268, 282, 372, 382, 387, 396, 405, 443], "simple_net_int8": 235, "conv_src_tz": [235, 236, 237, 371, 372, 373], "conv_weights_tz": [235, 236, 237, 371, 372, 373], "conv_bias_tz": [235, 236, 237, 371, 372, 373], "conv_dst_tz": [235, 236, 237, 371, 372, 373], "8f": [235, 371], "weight_scal": [235, 371], "55f": [235, 371], "src_mask": [235, 371], "weight_mask": [235, 371], "dst_mask": [235, 371], "user_bias_memori": [235, 371], "conv_attr": [235, 239, 371, 376], "dst_scale_md": [235, 371], "dst_scale_memori": [235, 371], "ops_alpha": [235, 371], "ops_beta": [235, 371], "conv_prim_desc": [235, 268, 371], "src_attr": [235, 371], "src_scale_md": [235, 371], "src_scale_memori": [235, 371], "src_reorder_pd": [235, 371], "src_reorder": [235, 371], "weight_attr": [235, 371], "wei_scale_md": [235, 371], "wei_scale_memori": [235, 371], "weight_reorder_pd": [235, 371], "weight_reord": [235, 371], "conv_bias_memori": [235, 236, 241, 371, 372, 379], "conv_dst_memori": [235, 236, 237, 371, 372, 373], "dst_attr": [235, 371], "dst_reorder_pd": [235, 371], "dst_reorder": [235, 371], "cassert": [236, 246, 250, 260, 279, 282, 372, 382, 387, 405, 439, 443], "net_fwd": [236, 237, 241, 372, 373, 379], "net_bwd": [236, 237, 241, 372, 373, 379], "net_fwd_arg": [236, 237, 241, 372, 373, 379], "net_bwd_arg": [236, 237, 241, 372, 373, 379], "sinf": [236, 237, 372, 373], "relu_data_tz": [236, 237, 372, 373], "lrn_data_tz": [236, 237, 372, 373], "lrn_workspace_memori": [236, 237, 372, 373], "pool_dst_tz": [236, 237, 372, 373], "pool_workspace_memori": [236, 237, 372, 373], "diff_data": [236, 237, 241, 372, 373, 379], "net_diff_dst": [236, 237, 241, 274, 372, 373, 379, 432], "pool_user_diff_dst_memori": [236, 237, 241, 372, 373, 379], "pool_diff_src_md": [236, 237, 241, 372, 373, 379], "pool_diff_dst_md": [236, 237, 241, 372, 373, 379], "pool_bwd_pd": [236, 237, 241, 372, 373, 379], "pooling_backward": [236, 237, 309, 349, 372, 373, 537], "pool_diff_dst_memori": [236, 237, 241, 372, 373, 379], "pool_diff_src_memori": [236, 237, 241, 372, 373, 379], "diff_src_desc": [236, 237, 283, 290, 295, 297, 298, 301, 302, 304, 305, 309, 310, 317, 320, 321, 372, 373, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "lrn_diff_dst_md": [236, 237, 241, 372, 373, 379], "lrn_diff_src_md": [236, 237, 241, 372, 373, 379], "lrn_bwd_pd": [236, 237, 241, 372, 373, 379], "lrn_backward": [236, 237, 305, 349, 372, 373, 537], "lrn_diff_dst_memori": [236, 237, 372, 373], "lrn_diff_src_memori": [236, 237, 241, 372, 373, 379], "relu_diff_src_md": [236, 237, 241, 372, 373, 379], "relu_diff_dst_md": [236, 237, 241, 372, 373, 379], "primitive_descriptor": [236, 237, 290, 301, 302, 304, 305, 372, 373], "relu_bwd_pd": [236, 237, 241, 372, 373, 379], "eltwise_backward": [236, 237, 298, 349, 372, 373, 537], "relu_diff_dst_memori": [236, 237, 372, 373], "relu_diff_src_memori": [236, 237, 241, 372, 373, 379], "conv_user_diff_weights_memori": [236, 237, 241, 372, 373, 379], "conv_diff_bias_memori": [236, 237, 241, 372, 373, 379], "conv_bwd_src_md": [236, 237, 372, 373], "conv_diff_weights_md": [236, 237, 241, 372, 373, 379], "conv_diff_dst_md": [236, 237, 241, 372, 373, 379], "conv_diff_bias_md": [236, 237, 241, 372, 373, 379], "conv_bwd_weights_pd": [236, 237, 241, 372, 373, 379], "convolution_backward_weight": [236, 237, 295, 349, 372, 373, 537], "conv_bwd_src_memori": [236, 237, 372, 373], "relu_bwd": [236, 237, 241, 372, 373, 379], "conv_diff_weight": [236, 237, 241, 372, 373, 379], "conv_diff_dst_memori": [236, 237, 241, 372, 373, 379], "conv_diff_weights_memori": [236, 237, 241, 372, 373, 379], "diff_weights_desc": [236, 237, 283, 295, 297, 302, 310, 372, 373, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "didn": [236, 237, 372, 373], "anyth": [236, 237, 308, 353, 372, 373], "n_iter": [236, 237, 241, 372, 373, 379], "net_output": [236, 237, 241, 372, 373, 379], "update_diff_dst": [236, 237, 241, 372, 373, 379], "net_diff_weight": [236, 237, 241, 372, 373, 379], "net_diff_bia": [236, 237, 241, 372, 373, 379], "update_weight": [236, 237, 241, 372, 373, 379], "conv_user_diff_weights_buff": [237, 241, 373, 379], "conv_diff_bias_buff": [237, 241, 373, 379], "concat_exampl": [238, 283, 374], "120": [238, 374], "num_src": [238, 277, 374, 437], "mem": [238, 248, 249, 252, 253, 258, 277, 279, 283, 374, 389, 396, 437, 439], "concat_pd": [238, 374], "dst_mem": [238, 244, 245, 247, 255, 256, 261, 264, 266, 267, 269, 271, 272, 273, 275, 277, 283, 374, 380, 381, 384, 393, 395, 407, 414, 418, 420, 422, 426, 428, 430, 433, 437], "concat_prim": [238, 374], "concat_arg": [238, 374], "convolution_exampl": [239, 283, 376], "strides_dim": [239, 254, 269, 376, 391, 422], "padding_dims_l": [239, 254, 269, 376, 391, 422], "padding_dims_r": [239, 254, 269, 376, 391, 422], "weights_data": [239, 244, 245, 247, 254, 261, 266, 270, 376, 380, 381, 384, 391, 407, 418, 424], "dst_data": [239, 244, 245, 247, 254, 255, 261, 264, 266, 269, 270, 271, 272, 273, 275, 277, 376, 380, 381, 384, 391, 393, 407, 414, 418, 422, 424, 426, 428, 430, 433, 437], "user_src_mem": [239, 247, 254, 270, 376, 384, 391, 424], "user_weights_mem": [239, 247, 254, 261, 270, 376, 384, 391, 407, 424], "user_dst_mem": [239, 247, 254, 270, 376, 384, 391, 424], "user_bias_md": [239, 254, 376, 391], "user_bias_mem": [239, 254, 376, 391], "conv_op": [239, 376], "conv_src_mem": [239, 267, 376, 420], "conv_weights_mem": [239, 267, 376, 420], "conv_dst_mem": [239, 267, 376, 420], "conv_arg": [239, 376, 531], "depthwise_convolution_exampl": [239, 283, 376], "exit_cod": [239, 256, 279, 376, 395, 439], "idx": [241, 279, 283, 313, 379, 439, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "n_fwd": [241, 379], "n_bwd": [241, 379], "dnnl_pooling_backward_primitive_desc_cr": [241, 283, 309, 379], "pool_internal_diff_dst_memori": [241, 379], "pool_reorder_diff_dst": [241, 379], "pool_bwd": [241, 379], "dnnl_lrn_backward_primitive_desc_cr": [241, 283, 305, 379], "lrn_bwd": [241, 379], "conv_diff_src_md": [241, 379], "dnnl_convolution_backward_weights_primitive_desc_cr": [241, 283, 295, 379], "conv_bwd_reorder_src": [241, 379], "conv_bwd_internal_src_memori": [241, 379], "conv_bwd_weights_src_memori": [241, 379], "conv_reorder_diff_dst": [241, 379], "conv_internal_diff_dst_memori": [241, 379], "conv_reorder_diff_weight": [241, 379], "conv_internal_diff_weights_memori": [241, 379], "conv_bwd_weight": [241, 379], "dnnl_memory_set_data_handl": [241, 283, 307, 308, 324, 379], "dnnl_memory_get_data_handl": [241, 283, 307, 379], "cleanup": [241, 379], "2023": [242, 243, 245, 247, 256, 259, 262, 278, 282, 381, 384, 403, 409, 443], "unordered_set": [242, 243, 251, 257, 278, 280, 283, 397, 398, 399, 400, 401, 402], "graph_example_util": [242, 243, 251, 257, 278, 280, 397, 398, 399, 400, 401, 402], "cpu_getting_started_tutori": 242, "oc1": [242, 257, 278], "oc2": [242, 257, 278], "225": 242, "kh1": [242, 257, 278], "kw1": [242, 257, 278], "kh2": [242, 257, 278], "kw2": [242, 257, 278], "conv0_input_dim": [242, 257, 278], "conv0_weight_dim": [242, 257, 278], "conv0_bias_dim": [242, 257, 278], "conv1_weight_dim": [242, 257, 278], "conv1_bias_dim": [242, 257, 278], "conv0_src_desc": [242, 257, 278, 397, 400, 401], "conv0_weight_desc": [242, 257, 278, 397, 400, 401], "conv0_dst_desc": [242, 257, 278, 397, 400, 401], "conv0": [242, 257, 278, 397, 400, 401], "bias_add": [242, 257, 278], "conv0_bias_desc": [242, 257, 278, 397, 400, 401], "conv0_bias_add_dst_desc": [242, 257, 278, 397, 400, 401], "conv0_bias_add": [242, 257, 278, 397, 400, 401], "relu0_dst_desc": [242, 257, 278, 397, 400, 401], "relu0": [242, 257, 278, 397, 400, 401], "conv1_weight_desc": [242, 257, 278, 397, 400, 401], "conv1_dst_desc": [242, 257, 278, 397, 400, 401], "conv1_bias_desc": [242, 257, 278, 397, 400, 401], "conv1_bias_add_dst_desc": [242, 257, 278, 397, 400, 401], "conv1_bias_add": [242, 257, 278, 397, 400, 401], "relu1_dst_desc": [242, 257, 278, 397, 400, 401], "make_engine_with_alloc": [242, 243, 251, 278, 280, 336, 350, 351, 352, 397, 398, 399, 401, 402], "strm": [242, 243, 251, 257, 258, 278, 279, 280, 396, 397, 398, 399, 401, 402, 439], "global_outputs_ts_map": [242, 243, 257, 278, 283], "shared_ptr": [242, 243, 251, 257, 278, 280, 283, 492], "data_buff": [242, 243, 251, 257, 278, 280, 283], "id_to_queried_logical_tensor": [242, 243, 257, 278], "helper": [242, 243, 257, 278, 523], "ids_with_any_layout": [242, 243, 257, 278], "set_any_layout": [242, 243, 257, 278, 283], "mock": [242, 243, 251, 257, 278, 280], "concrete_shap": [242, 243, 251, 257, 278, 280], "although": [242, 243, 251, 257, 278, 280, 371], "cpu_get_start": 242, "continu": [242, 243, 257, 278, 370, 395], "cp": [242, 243, 248, 249, 251, 257, 278, 280, 397, 398, 399, 401, 402], "inputs_t": [242, 243, 251, 257, 278, 280, 397, 398, 399, 401, 402], "outputs_t": [242, 243, 251, 257, 278, 280, 397, 398, 399, 401, 402], "allocate_graph_mem": [242, 243, 251, 283], "conv0_src": [242, 278], "conv0_wei": [242, 278], "conv0_bias_src1": [242, 278], "conv1_wei": [242, 278], "conv1_bias_src1": [242, 278], "relu_dst": [242, 278], "simple_pattern_int8": 243, "conv_input_dim": 243, "conv_weight_dim": 243, "conv_bias_dim": 243, "dequant0_src_desc": [243, 398], "conv_src_desc": [243, 398], "dequant0": [243, 398], "1f": [243, 247, 249, 250, 384, 386, 387, 398], "dequant1_src_desc": [243, 398], "conv_weight_desc": [243, 398], "dequant1": [243, 398], "wei_zp": [243, 398], "conv_bias_desc": [243, 398], "conv_dst_desc": [243, 398], "relu_dst_desc": [243, 398], "quant_dst_desc": [243, 398], "quant": [243, 398], "dq0_src": 243, "dq1_src": 243, "quant_dst": 243, "check_result": [244, 245, 283, 380, 381], "expected_result": [244, 245, 380, 381], "750000": [244, 245, 380, 381], "250000": [244, 245, 380, 381], "500000": [244, 245, 380, 381], "000000": [244, 245, 380, 381], "19": [244, 245, 380, 381], "sparse_matmul": [244, 245, 283, 380, 381], "src_coo_valu": [244, 380], "src_coo_row_indic": [244, 380], "src_coo_col_indic": [244, 380], "static_cast": [244, 245, 260, 380, 381, 405], "src_coo_md": [244, 380], "wei_md": [244, 245, 380, 381], "src_coo_mem": [244, 380], "wei_mem": [244, 245, 380, 381], "sparse_matmul_pd": [244, 245, 380, 381], "sparse_matmul_prim": [244, 245, 380, 381], "sparse_matmul_arg": [244, 245, 380, 381], "src_csr_valu": [245, 381], "src_csr_indic": [245, 381], "src_csr_pointer": [245, 381], "src_csr_md": [245, 381], "src_csr_mem": [245, 381], "2025": [246, 250, 382, 387], "cctype": [246, 250, 260, 282, 382, 387, 405, 443], "cstdio": [246, 250, 260, 282, 382, 387, 405, 443], "type_trait": [246, 382], "init_vector": [246, 250, 260, 282, 382, 387, 405, 443], "min_valu": [246, 382], "max_valu": [246, 382], "mt19937": [246, 250, 260, 282, 382, 387, 405, 443], "uniform_real_distribut": [246, 250, 260, 282, 382, 387, 405, 443], "find_min_max": [246, 382], "compute_q10n_param": [246, 382], "max_int": [246, 382], "numeric_limit": [246, 250, 382, 387], "min_int": [246, 382], "lowest": [246, 382], "ifndef": [246, 382], "omit_workaround_for_skx": [246, 382], "dev_guide_int8_comput": [246, 382], "endif": [246, 279, 382, 439], "min_val": [246, 382], "max_val": [246, 382], "tcomput": [246, 382], "q10n": [246, 382], "tdata": [246, 382], "tscale": [246, 382], "3g": [246, 382], "invers": [246, 382], "tzero": [246, 382], "compare_vector": [246, 250, 382, 387], "v2": [246, 250, 382, 387], "scale_v2": [246, 382], "zp_v2": [246, 382], "threshold": [246, 250, 382, 387], "v1_l2": [246, 250, 382, 387], "diff_l2": [246, 250, 382, 387], "v2_n": [246, 382], "deq10n": [246, 382], "ok": [246, 250, 382, 387], "tcomparison": [246, 382], "trefer": [246, 250, 382, 387], "terror": [246, 250, 382, 387], "trel": [246, 382], "naccuraci": [246, 382], "x_int_m": [246, 283, 382], "x_f32": [246, 283, 382], "scale_x": [246, 283, 382], "zp_x": [246, 283, 382], "q10n_scheme": [246, 382], "mimic": [246, 382], "x_int_md": [246, 382], "x_f32_md": [246, 382], "x_f32_m": [246, 382], "q10n_attr": [246, 382], "q10n_pd": [246, 382], "dst_scale_x_m": [246, 382], "zp_x_m": [246, 382], "f32_matmul_comput": [246, 283, 382], "a_f32": [246, 282, 283, 382, 443], "b_f32": [246, 260, 282, 283, 382, 405, 443], "c_f32": [246, 282, 283, 382, 443], "wrap": [246, 250, 253, 382, 387, 479, 480, 492, 523, 537, 561], "a_f32_m": [246, 382], "b_f32_m": [246, 382], "c_f32_m": [246, 382], "matmul_pd": [246, 247, 250, 260, 266, 282, 382, 384, 387, 405, 418, 443], "matmul_p": [246, 250, 260, 282, 283, 382, 387, 405, 443], "scale_c": [246, 283, 382], "zp_c": [246, 260, 283, 382, 405], "dynamic_q10n_matmul": [246, 283, 382], "c_u8": [246, 260, 283, 382, 405], "scale_a": [246, 382], "scale_b": [246, 382], "zp_a": [246, 260, 382, 405], "zp_b": [246, 282, 382, 443], "a_u8_md": [246, 382], "a_u8_m": [246, 382], "b_s8_md": [246, 382], "b_s8_m": [246, 382], "emb": [246, 382], "anywai": [246, 382], "theori": [246, 382], "postpon": [246, 382], "exercis": [246, 382], "c_f32_md": [246, 382], "matmul_attr": [246, 266, 382, 418], "scales_a_m": [246, 382], "scales_b_m": [246, 382], "zp_a_m": [246, 382], "c_u8_md": [246, 382], "c_u8_m": [246, 382], "compare_f32_and_quantized_matmul": [246, 283, 382], "param_a_min_v": [246, 382], "param_a_max_v": [246, 382], "4f": [246, 264, 382, 414], "param_b_min_v": [246, 382], "param_b_max_v": [246, 382], "threshold_dynamic_q10n": [246, 382], "2f": [246, 249, 382, 386], "_true_": [246, 382], "c_u8_dynamic_q10n": [246, 382], "scale_c_dynamic_q10n": [246, 382], "zp_c_dynamic_q10n": [246, 382], "rc": [246, 250, 382, 387], "logic_error": [246, 250, 253, 256, 258, 260, 382, 387, 390, 395, 396, 405], "matmul_exampl": [247, 266, 283, 384, 418], "densiti": [247, 384], "default_random_engin": [247, 384], "def_gen": [247, 384], "bernoulli_distribut": [247, 384], "b_dist": [247, 384], "is_on": [247, 384], "count_if": [247, 384], "matmul_src_md": [247, 384], "matmul_weights_md": [247, 384], "matmul_dst_md": [247, 384], "npleas": [247, 384], "matmul_src_mem": [247, 384], "matmul_weights_mem": [247, 384], "matmul_dst_mem": [247, 384], "matmul_prim": [247, 266, 384, 418], "wei_packed_md": [247, 384], "nhandl": [247, 283, 307, 308, 324, 384], "get_num_handl": [247, 384, 525], "wei_handl": [247, 384], "wei_buff": [247, 384], "buf_sz": [247, 384], "matmul_arg": [247, 266, 384, 418], "gnmt": [248, 249, 274, 385, 386, 432], "cstring": [248, 249, 274, 432], "dim_t": [248, 249, 283, 386], "src_seq_length_max": [248, 249, 283, 385, 386], "tgt_seq_length_max": [248, 249, 283, 385, 386], "feature_s": [248, 249, 283, 385, 386], "enc_bidir_n_lay": [248, 249, 283, 385, 386], "enc_unidir_n_lay": [248, 249, 283, 385, 386], "dec_n_lay": [248, 249, 283, 385, 386], "lstm_n_gate": [248, 249, 274, 283, 385, 386, 432], "weighted_src_lay": [248, 249, 283], "alignment_model": [248, 249, 283], "exp_sum": [248, 249, 283], "compute_weighted_annot": [248, 249, 283, 385, 386], "weighted_annot": [248, 249, 283, 385, 386], "weights_annot": [248, 249, 283], "enc_dst_lay": [248, 249], "num_weighted_annot": [248, 249], "dnnl_sgemm": [248, 249, 250, 283, 292, 387], "compute_attent": [248, 249, 283, 385, 386], "context_vector": [248, 249, 283], "weights_src_lay": [248, 249, 283], "dec_src_lay": [248, 249, 283], "weights_align": [248, 249, 283], "dst_iter": [248, 249, 274, 289, 385, 432, 539], "src_layer": [248, 249, 274, 289, 385, 386, 432, 539], "weights_yi": [248, 249], "weights_ai": [248, 249], "weighted_dec_src_lay": [248, 249], "alignment_model_ptr": [248, 249], "pragma_omp_parallel_for_collaps": [248, 249, 283], "tanhf": [248, 249], "gemv": [248, 249], "expf": [248, 249], "copy_context": [248, 249, 283, 385, 386], "src_iter": [248, 249, 274, 283, 289, 385, 386, 432, 539], "n_layer": [248, 249, 283], "cpu_engin": [248, 249, 253, 385, 386, 390], "encoder_net": [248, 249, 385, 386], "decoder_net": [248, 249, 385, 386], "encoder_net_arg": [248, 249, 385, 386], "decoder_net_arg": [248, 249, 385, 386], "enc_bidir_src_layer_tz": [248, 249, 385, 386], "enc_bidir_weights_layer_tz": [248, 249, 385, 386], "enc_bidir_weights_iter_tz": [248, 249, 385, 386], "enc_bidir_bias_tz": [248, 249, 385, 386], "enc_bidir_dst_layer_tz": [248, 249, 385, 386], "user_enc_bidir_wei_lay": [248, 249, 385, 386], "user_enc_bidir_wei_it": [248, 249, 385, 386], "user_enc_bidir_bia": [248, 249, 385, 386], "user_enc_bidir_src_layer_md": [248, 249, 385, 386], "user_enc_bidir_wei_layer_md": [248, 249, 385, 386], "user_enc_bidir_wei_iter_md": [248, 249, 385, 386], "user_enc_bidir_bias_md": [248, 249, 385, 386], "user_enc_bidir_src_layer_memori": [248, 249, 385, 386], "user_enc_bidir_wei_layer_memori": [248, 249, 385, 386], "user_enc_bidir_wei_iter_memori": [248, 249, 385, 386], "user_enc_bidir_bias_memori": [248, 249, 385, 386], "enc_bidir_wei_layer_md": [248, 249, 385, 386], "enc_bidir_wei_iter_md": [248, 249, 385, 386], "enc_bidir_dst_layer_md": [248, 249, 385, 386], "enc_bidir_prim_desc": [248, 249, 385, 386], "enc_bidir_wei_layer_memori": [248, 249, 385, 386], "enc_bidir_wei_layer_reorder_pd": [248, 249, 385], "enc_bidir_wei_iter_memori": [248, 249, 385, 386], "enc_bidir_wei_iter_reorder_pd": [248, 249], "enc_bidir_dst_layer_memori": [248, 249, 385, 386], "bi": [248, 249], "user_enc_uni_first_wei_lay": [248, 249, 385, 386], "user_enc_uni_first_wei_it": [248, 249, 385, 386], "user_enc_uni_first_bia": [248, 249, 385, 386], "user_enc_uni_first_wei_layer_dim": [248, 249], "user_enc_uni_first_wei_iter_dim": [248, 249], "user_enc_uni_first_bias_dim": [248, 249], "enc_uni_first_dst_layer_dim": [248, 249], "user_enc_uni_first_wei_layer_md": [248, 249], "user_enc_uni_first_wei_iter_md": [248, 249], "user_enc_uni_first_bias_md": [248, 249, 385, 386], "user_enc_uni_first_wei_layer_memori": [248, 249], "user_enc_uni_first_wei_iter_memori": [248, 249], "user_enc_uni_first_bias_memori": [248, 249, 385, 386], "enc_uni_first_wei_layer_md": [248, 249, 385, 386], "enc_uni_first_wei_iter_md": [248, 249, 385, 386], "enc_uni_first_dst_layer_md": [248, 249, 385, 386], "enc_uni_first_prim_desc": [248, 249, 385, 386], "enc_uni_first_wei_layer_memori": [248, 249, 385, 386], "enc_uni_first_wei_layer_reorder_pd": 248, "enc_uni_first_wei_iter_memori": [248, 249, 385, 386], "enc_uni_first_wei_iter_reorder_pd": 248, "enc_uni_first_dst_layer_memori": [248, 249, 385, 386], "user_enc_uni_wei_lay": [248, 249, 385, 386], "user_enc_uni_wei_it": [248, 249, 385, 386], "user_enc_uni_bia": [248, 249, 385, 386], "user_enc_uni_wei_layer_dim": [248, 249], "user_enc_uni_wei_iter_dim": [248, 249], "user_enc_uni_bias_dim": [248, 249], "enc_dst_layer_dim": [248, 249], "user_enc_uni_wei_layer_md": [248, 249], "user_enc_uni_wei_iter_md": [248, 249], "user_enc_uni_bias_md": [248, 249, 385, 386], "user_enc_uni_wei_layer_memori": [248, 249], "user_enc_uni_wei_iter_memori": [248, 249], "user_enc_uni_bias_memori": [248, 249, 385, 386], "enc_uni_wei_layer_md": [248, 249, 385, 386], "enc_uni_wei_iter_md": [248, 249, 385, 386], "enc_dst_layer_md": [248, 249, 385, 386], "enc_uni_prim_desc": [248, 249, 385, 386], "enc_uni_wei_layer_memori": [248, 249, 385, 386], "enc_uni_wei_layer_reorder_pd": [248, 249], "enc_uni_wei_iter_memori": [248, 249, 385, 386], "enc_uni_wei_iter_reorder_pd": [248, 249], "enc_dst_layer_memori": [248, 249, 385, 386], "dec": [248, 249], "user_dec_wei_lay": [248, 249, 385, 386], "user_dec_wei_it": [248, 249, 385, 386], "user_dec_bia": [248, 249, 385, 386], "user_dec_dst": [248, 385], "user_weights_attention_src_lay": [248, 249, 385, 386], "user_weights_annot": [248, 249, 385, 386], "user_weights_align": [248, 249, 385, 386], "user_dec_wei_layer_dim": [248, 249, 385, 386], "user_dec_wei_iter_dim": [248, 249, 385, 386], "user_dec_bias_dim": [248, 249, 385, 386], "dec_src_layer_dim": [248, 249, 385, 386], "dec_dst_layer_dim": [248, 249, 385, 386], "dec_dst_iter_c_dim": [248, 249, 385, 386], "noctx": [248, 249], "dec_dst_iter_dim": [248, 249, 385, 386], "dec_dst_iter_noctx_dim": [248, 249, 385, 386], "user_dec_wei_layer_md": [248, 249, 385, 386], "user_dec_wei_iter_md": [248, 249, 385, 386], "user_dec_bias_md": [248, 249, 385, 386], "dec_dst_layer_md": [248, 249, 385, 386], "dec_src_layer_md": [248, 249, 385, 386], "dec_dst_iter_md": [248, 249, 385, 386], "dec_dst_iter_c_md": [248, 249, 385, 386], "user_dec_wei_layer_memori": [248, 249, 385, 386], "user_dec_wei_iter_memori": [248, 249, 385, 386], "user_dec_bias_memori": [248, 249, 385, 386], "user_dec_dst_layer_memori": [248, 385], "dec_src_layer_memori": [248, 249, 385, 386], "dec_dst_iter_c_memori": [248, 249, 385, 386], "dec_wei_layer_md": [248, 249, 385], "dec_wei_iter_md": [248, 249, 385], "dec_dst_iter_memori": [248, 249, 385, 386], "dec_dst_iter_noctx_md": [248, 249, 385, 386], "dec_ctx_prim_desc": [248, 249, 385, 386], "dec_wei_layer_memori": [248, 249, 385, 386], "dec_wei_layer_reorder_pd": [248, 249, 385, 386], "dec_wei_iter_memori": [248, 249, 385], "dec_wei_iter_reorder_pd": [248, 249, 385], "enc": [248, 249], "ano": [248, 249], "init": [248, 249, 256, 258, 268, 396], "src_att_layer_handl": [248, 249, 385, 386], "src_att_iter_handl": [248, 249, 385, 386], "att": [248, 249], "dst_layer_handl": [248, 249, 385, 386], "compute_sum_of_row": [249, 283, 386], "col": [249, 283], "a_reduc": [249, 283], "weights_src_layer_scal": [249, 283], "dec_src_layer_scal": [249, 283], "dec_src_layer_shift": [249, 283], "tnc_offset": 249, "max_idx": 249, "max_idx_v": 249, "data_shift": [249, 386], "data_scal": [249, 386], "weights_scale_mask": [249, 386], "weights_scal": [249, 386], "halv": [249, 386], "scales_half": [249, 386], "65": [249, 386], "3f": [249, 270, 386, 424], "enc_bidir_src_layer_md": [249, 386], "attri": 249, "enc_bidir_src_layer_memori": [249, 386], "enc_bidir_src_layer_reorder_pd": [249, 386], "weights_attention_scal": [249, 386], "dec_dst": [249, 386], "dec_src_it": [249, 385], "dec_dst_it": [249, 385, 386], "dec_dst_layer_memori": [249, 386], "weights_attention_sum_row": [249, 386], "s8u8s32": [249, 386], "tight": [250, 387], "difficult": [250, 387], "finit": [250, 387], "tl2": [250, 387], "trelative_error": [250, 387], "taccuraci": [250, 387], "number_of_run": [250, 260, 282, 283, 387, 405, 443], "fixed_beta": [250, 283, 387], "_dynamic_": [250, 387], "dynamic_matmul_cr": [250, 283, 387], "a_shap": [250, 387], "b_shape": [250, 387], "c_shape": [250, 387], "a_strid": [250, 387], "b_stride": [250, 387], "c_stride": [250, 387], "earlier": [250, 387, 395, 439], "dynamic_matmul_execut": [250, 283, 387], "transa": [250, 283, 292, 325, 349, 355, 387], "transb": [250, 283, 292, 325, 349, 355, 387], "translat": [250, 387], "tolow": [250, 387], "a_m": [250, 387], "b_m": [250, 387], "c_m": [250, 387], "alpha_m": [250, 387], "sgemm_and_matmul_with_param": [250, 283, 387], "c_sgemm": [250, 387], "c_dynamic_matmul": [250, 387], "dynamic_matmul": [250, 387], "diverg": [250, 387], "sgemm_and_matmul": [250, 283, 387], "cpu_single_op_partition_tutori": 251, "src0_dim": [251, 280], "src1_dim": [251, 280], "matmul_src0_desc": [251, 280, 399, 402], "matmul_src1_desc": [251, 280, 399, 402], "matmul_dst_desc": [251, 280, 399, 402], "matmul_src0": [251, 280], "matmul_src1": [251, 280], "matmul_dst": [251, 280], "n_dim": [252, 283, 389], "n_elem": [252, 389], "complain_example_error_and_exit": [252, 283, 389], "find_neg": [252, 253, 283, 389, 390], "engine_cpu": [252, 389], "engine_gpu": [252, 389], "validate_engine_kind": [252, 253, 280, 283, 389, 390], "tz": [252, 253, 389, 390], "m_cpu_md": [252, 389], "m_gpu_md": [252, 389], "m_cpu": [252, 253, 389, 390], "m_gpu": [252, 253, 389, 390], "r1_pd": [252, 389], "r1": [252, 253, 389, 390], "r2_pd": [252, 389], "r2": [252, 253, 389, 390], "stream_gpu": [252, 253, 389, 390], "r1_arg": [252, 389], "relu_arg": [252, 389], "r2_arg": [252, 389], "prologu": [253, 256, 258, 268, 279], "nelem": 253, "cross_engine_reorder_tutori": 253, "gpu_engin": [253, 390], "deconvolution_exampl": [254, 283, 391], "revers": [254, 391], "deconv_src_md": [254, 391], "deconv_weights_md": [254, 391], "deconv_dst_md": [254, 391], "deconv_op": [254, 391], "deconv_attr": [254, 391], "deconv_pd": [254, 391], "deconvolution_forward": [254, 297, 349, 391, 469, 471, 537], "deconv_src_mem": [254, 391], "deconv_weights_mem": [254, 391], "deconv_dst_mem": [254, 391], "deconv_prim": [254, 391], "deconv_arg": [254, 391], "eltwise_exampl": [255, 283, 393], "eltwise_pd": [255, 393], "eltwise_prim": [255, 393], "eltwise_arg": [255, 393], "dnnl_debug": [256, 279, 390, 395, 396, 439], "getting_started_tutori": 256, "image_s": [256, 395], "alt_src_md": [256, 395], "obj": [256, 395], "relu_imag": [256, 395], "caught": [256, 279, 395, 439], "tstatu": [256, 279, 395, 439], "dnnl_status2str": [256, 279, 283, 395, 439], "tmessag": [256, 279, 395, 439], "cl_ext": [257, 400], "ocl_getting_started_tutori": 257, "allocate_ocl_graph_mem": [257, 283], "ocl_check": [258, 283, 396], "cl_int": 258, "cl_success": 258, "__file__": 258, "__line__": 258, "cl_kernel": [258, 283, 396], "create_init_opencl_kernel": [258, 283, 396], "ocl_ctx": [258, 283], "kernel_nam": [258, 283, 396], "ocl_cod": [258, 283, 396], "err": 258, "cl_program": 258, "ocl_program": 258, "clcreateprogramwithsourc": 258, "clbuildprogram": 258, "ocl_kernel": 258, "clcreatekernel": 258, "clreleaseprogram": 258, "gpu_opencl_interop_tutori": 258, "tz_dim": [258, 274, 279, 396, 432, 439], "mem_d": [258, 279, 396, 439], "__kernel": [258, 396], "__global": [258, 396], "get_global_id": [258, 396], "oclkernel": 258, "ocl_init_kernel": [258, 396], "oclexecut": 258, "ocl_buf": [258, 396], "clsetkernelarg": [258, 396], "clenqueuendrangekernel": [258, 396], "mem_data": [258, 396], "clreleasekernel": 258, "group_normalization_exampl": [259, 283, 403], "28": [259, 403, 421], "gnorm_pd": [259, 403], "gnorm_prim": [259, 403], "gnorm_arg": [259, 403], "uniform_int_distribut": [260, 405], "sc_a": [260, 405], "sc_b": [260, 282, 405, 443], "sc_c": [260, 405], "matmul_pd_cr": [260, 282, 283, 405, 443], "prepare_input": [260, 282, 283, 405, 443], "a_u8_mem": [260, 283, 405], "sc_a_mem": [260, 283, 405], "sc_b_mem": [260, 282, 283, 405, 443], "sc_c_mem": [260, 283, 405], "zp_a_mem": [260, 283, 405], "zp_c_mem": [260, 283, 405], "25f": [260, 405], "40": [260, 405], "sanity_check": [260, 283, 405], "c_u8_mem": [260, 283, 405], "tquantiz": [260, 405], "twhich": [260, 405], "b_s8_mem": [260, 282, 283, 405, 443], "meaning": [260, 282, 405, 443], "inner_product_exampl": [261, 283, 407], "inner_product_weights_md": [261, 407], "inner_product_op": [261, 407], "inner_product_attr": [261, 407], "inner_product_pd": [261, 407], "inner_product_weights_mem": [261, 407], "inner_product_prim": [261, 407], "inner_product_arg": [261, 407], "layer_normalization_exampl": [262, 283, 409], "lnorm_pd": [262, 409], "lnorm_prim": [262, 409], "lnorm_arg": [262, 409], "lbr_gru_exampl": [263, 283, 411], "weights_layer_dim": [263, 411], "weights_iter_dim": [263, 411], "dst_layer_dim": [263, 281, 411, 441], "dst_iter_dim": [263, 281, 411, 441], "dst_iter_data": [263, 281, 411, 441], "weights_layer_md": [263, 281, 411, 441], "weights_iter_md": [263, 281, 411, 441], "weights_layer_mem": [263, 281, 411, 441], "lbr_gru_prim": [263, 411], "lbr_gru_arg": [263, 411], "lrn_exampl": [264, 283, 414], "lrn_prim": [264, 414], "lrn_arg": [264, 414], "lstm_exampl": [265, 283, 416], "lstm_weights_layer_md": [265, 416], "lstm_weights_iter_md": [265, 416], "src_iter_c_md": [265, 416], "dst_iter_c_md": [265, 416], "lstm_weights_layer_mem": [265, 416], "lstm_weights_iter_mem": [265, 416], "src_iter_c_mem": [265, 416], "dst_iter_c_mem": [265, 416], "lstm_prim": [265, 416], "lstm_arg": [265, 416], "weights_mem": [266, 267, 418, 420], "matmul_op": [266, 418], "sstream": 267, "memory_format_propagation_tutori": 267, "3x3": [267, 420], "need_reorder_src": [267, 420], "need_reorder_weight": [267, 420], "need_reorder_dst": [267, 420], "pool_dst_mem": [267, 420], "reorder_src": [267, 420], "reorder_weight": [267, 420], "conv_scratchpad_mem": [267, 420], "pool_scratchpad_mem": [267, 420], "reorder_dst": [267, 420], "init_data": [268, 283], "create_and_execute_relu": [268, 283, 421], "create_attr_with_relu_post_op": [268, 283, 421], "naiv": 268, "conv_relu_na": [268, 421], "user_wei": [268, 421], "mem_desc": 268, "conv_wei_md": [268, 421], "conv_primit": 268, "conv_relu_block": [268, 421], "implementation2": 268, "condition": 268, "r_pd": [268, 421], "conv_wei": [268, 421], "conv_dst": [268, 421], "prim_descriptor": 268, "conv_relu_fus": [268, 421], "prim_desc": 268, "implementation3": 268, "synthet": [268, 421], "pooling_exampl": [269, 283, 422], "kernel_dim": [269, 422], "pooling_pd": [269, 422], "pooling_prim": [269, 422], "pooling_arg": [269, 422], "prelu_exampl": [270, 283, 424], "prelu_pd": [270, 424], "prelu_forward": [270, 310, 349, 424, 533, 537], "prelu_weights_mem": [270, 424], "prelu_prim": [270, 424], "prelu_arg": [270, 424], "reduction_exampl": [271, 283, 426], "reduction_pd": [271, 426], "reduction_prim": [271, 426], "reduction_arg": [271, 426], "reorder_exampl": [272, 283, 428], "ic_dim": [272, 428], "reorder_attr": [272, 428], "dst_scales_mem": [272, 428], "reorder_prim": [272, 428], "reorder_arg": [272, 428], "resampling_exampl": [273, 283, 430], "350": [273, 430], "resampling_pd": [273, 430], "resampling_forward": [273, 317, 349, 430, 537, 548], "resampling_prim": [273, 430], "resampling_arg": [273, 430], "n0": [274, 283, 432], "rand": [274, 283, 432], "31": [274, 283, 432], "n1": [274, 283, 432], "chunk": [274, 432], "compact": [274, 421, 432], "leftmost": [274, 432], "leftmost_batch": [274, 283, 432], "rightmost_batch": [274, 283, 432], "leftmost_seq_length": [274, 283, 432], "rightmost_seq_length": [274, 283, 432], "common_feature_s": [274, 283, 432], "characterist": [274, 395, 432], "common_n_lay": [274, 283, 432], "is_train": [274, 432], "fwd_inf_train": [274, 432], "fwd_net": [274, 432], "bwd_net": [274, 432], "shorter": [274, 432], "net_src_dim": [274, 432], "leftmost_src_layer_dim": [274, 432], "rightmost_src_layer_dim": [274, 432], "common_weights_layer_dim": [274, 432], "common_weights_iter_dim": [274, 432], "common_bias_dim": [274, 432], "leftmost_dst_layer_dim": [274, 432], "rightmost_dst_layer_dim": [274, 432], "arrang": [274, 432], "our": [274, 396, 420, 432, 439], "leftmost_dst_iter_dim": [274, 432], "leftmost_dst_iter_c_dim": [274, 432], "rightmost_src_iter_dim": [274, 432], "rightmost_src_iter_c_dim": [274, 432], "tz_volum": [274, 432], "suppli": [274, 327, 432], "formatted_md": [274, 432], "generic_md": [274, 432], "studi": [274, 432], "suggest": [274, 432], "leftmost_dst_layer_memori": [274, 432], "rightmost_dst_layer_memori": [274, 432], "net_src_memori": [274, 432], "accommod": [274, 420, 432], "user_leftmost_src_layer_md": [274, 432], "user_rightmost_src_layer_md": [274, 432], "leftmost_src_layer_memori": [274, 432], "rightmost_src_layer_memori": [274, 432], "ll": [274, 432], "user_common_weights_lay": [274, 432], "user_common_weights_layer_memori": [274, 432], "user_common_weights_it": [274, 432], "user_common_weights_iter_memori": [274, 432], "user_common_bia": [274, 432], "user_common_bias_memori": [274, 432], "user_leftmost_dst_lay": [274, 432], "user_leftmost_dst_layer_memori": [274, 432], "user_rightmost_dst_lay": [274, 432], "user_rightmost_dst_layer_memori": [274, 432], "leftmost_prim_desc": [274, 432], "aprop_kind": [274, 432, 450, 452, 454, 456, 461, 467, 473, 477, 485, 487, 489, 491, 499, 501, 503, 505, 507, 509, 511, 515, 517, 519, 529, 535, 541, 546, 550, 551, 555, 559, 563, 571, 573], "leftmost_dst_iter_memori": [274, 432], "leftmost_dst_iter_c_memori": [274, 432], "rightmost_src_iter_md": [274, 432], "rightmost_src_iter_memori": [274, 432], "rightmost_src_iter_c_md": [274, 432], "rightmost_src_iter_c_memori": [274, 432], "rightmost_prim_desc": [274, 432], "rigthmost": [274, 432], "common_weights_layer_memori": [274, 432], "common_weights_iter_memori": [274, 432], "common_bias_memori": [274, 432], "workspace_primitive_desc": [274, 432], "commun": [274, 432], "create_w": [274, 432], "leftmost_workspace_memori": [274, 432], "rightmost_workspace_memori": [274, 432], "leftmost_lay": [274, 432], "rightmost_lay": [274, 432], "net_diff_src": [274, 432], "net_diff_src_memori": [274, 432], "user_leftmost_diff_src_layer_md": [274, 432], "user_rightmost_diff_src_layer_md": [274, 432], "leftmost_diff_src_layer_memori": [274, 432], "rightmost_diff_src_layer_memori": [274, 432], "backpropag": [274, 432], "user_common_diff_weights_lay": [274, 432], "user_common_diff_weights_layer_memori": [274, 432], "user_common_diff_bia": [274, 432], "user_common_diff_bias_memori": [274, 432], "net_diff_dst_dim": [274, 432], "net_diff_dst_memori": [274, 432], "diff_dst_lay": [274, 432], "user_leftmost_diff_dst_layer_md": [274, 432], "user_rightmost_diff_dst_layer_md": [274, 432], "leftmost_diff_dst_layer_memori": [274, 432], "rightmost_diff_dst_layer_memori": [274, 432], "leftmost_bwd_prim_desc": [274, 432], "diff_src_layer_desc": [274, 283, 318, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "diff_src_iter_desc": [274, 283, 318, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "diff_src_iter_c_desc": [274, 283, 318, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "diff_weights_layer_desc": [274, 283, 318, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "diff_weights_iter_desc": [274, 283, 318, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "diff_bias_desc": [274, 283, 295, 297, 302, 318, 432, 450, 452, 465, 471, 489, 491, 497, 505, 507, 509, 511, 517, 519, 551, 571, 573], "diff_dst_layer_desc": [274, 283, 318, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "diff_dst_iter_desc": [274, 283, 318, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "diff_dst_iter_c_desc": [274, 283, 318, 432, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "leftmost_diff_dst_iter_memori": [274, 432], "leftmost_diff_dst_iter_c_memori": [274, 432], "rightmost_diff_src_iter_md": [274, 432], "rightmost_diff_src_iter_memori": [274, 432], "rightmost_diff_src_iter_c_md": [274, 432], "rightmost_diff_src_iter_c_memori": [274, 432], "rightmost_bwd_prim_desc": [274, 432], "leftmost_src_layer_bwd_memori": [274, 432], "rightmost_src_layer_bwd_memori": [274, 432], "common_weights_layer_bwd_memori": [274, 432], "common_weights_iter_bwd_memori": [274, 432], "common_bias_bwd_memori": [274, 432], "common_diff_weights_layer_memori": [274, 432], "reorder_common_diff_weights_lay": [274, 432], "common_diff_bias_memori": [274, 432], "reorder_common_diff_bia": [274, 432], "dst_layer": [274, 289, 432, 539], "leftmost_dst_layer_bwd_memori": [274, 432], "rightmost_dst_layer_bwd_memori": [274, 432], "common_diff_weights_iter_memori": [274, 432], "leftmost_dst_iter_bwd_memori": [274, 432], "leftmost_dst_iter_c_bwd_memori": [274, 432], "rightmost_layer_bwd": [274, 432], "leftmost_layer_bwd": [274, 432], "shuffle_exampl": [275, 283, 433], "shuffle_axi": [275, 433], "shuffle_pd": [275, 433], "shuffle_forward": [275, 320, 349, 433, 537, 553], "shuffle_prim": [275, 433], "shuffle_arg": [275, 433], "softmax_exampl": [276, 283, 435], "softmax_pd": [276, 435], "softmax_forward": [276, 321, 349, 435, 537, 557], "softmax_prim": [276, 435], "softmax_arg": [276, 435], "sum_exampl": [277, 283, 437], "sum_pd": [277, 437], "sum_prim": [277, 437], "sum_arg": [277, 437], "dnnl_graph_sycl": [278, 280, 401, 402], "sycl_getting_started_tutori": 278, "make_alloc": [278, 280, 332, 351, 352, 401, 402], "sycl_malloc_wrapp": [278, 280, 283, 401, 402], "sycl_free_wrapp": [278, 280, 283, 401, 402], "gpu_selector_v": [278, 280, 401, 402], "cpu_selector_v": [278, 401, 402], "sycl_get_start": 278, "allocate_sycl_graph_mem": [278, 280, 283], "__has_includ": [279, 439], "kernel_tag": [279, 439], "sycl_interop_buffer_tutori": 279, "buf": [279, 283, 340, 344], "sycl_buf": [279, 439], "handler": [279, 439], "cgh": [279, 439], "get_access": [279, 439], "host_acc": [279, 439], "get_host_access": [279, 439], "exp_valu": [279, 439], "gpu_single_op_partition_tutori": 280, "vanilla_rnn_exampl": [281, 283, 441], "vanilla_rnn_prim": [281, 441], "vanilla_rnn_arg": [281, 441], "zp_b_mem": [282, 283, 443], "num_g": [282, 443], "n_group": [282, 443], "c_f32_mem": [282, 443], "dnnl_memory_desc": [283, 307], "dnnl_memori": [283, 307], "const_dnnl_memory_t": [283, 307, 308, 324], "dnnl_primitive_desc": [283, 313], "dnnl_primitive_attr": [283, 289], "const_dnnl_primitive_attr_t": [283, 289, 290, 291, 294, 295, 297, 298, 301, 302, 304, 305, 306, 309, 310, 313, 315, 316, 317, 318, 320, 321, 323], "dnnl_post_op": [283, 289], "const_dnnl_post_ops_t": [283, 289, 327], "dnnl_primit": [283, 313], "const_dnnl_primitive_t": [283, 308, 313, 324], "dnnl_engin": [283, 299], "dnnl_stream": [283, 322], "const_dnnl_stream_t": [283, 322], "dnnl_graph_ocl_allocate_f": [283, 340, 351], "dnnl_graph_ocl_deallocate_f": [283, 340, 351], "dnnl_graph_sycl_allocate_f": [283, 332, 344, 352, 401, 402], "dnnl_graph_sycl_deallocate_f": [283, 332, 344, 352, 401, 402], "dnnl_graph_partit": [283, 342], "const_dnnl_graph_partition_t": [283, 342], "dnnl_graph_graph": [283, 337], "dnnl_graph_graph_t": [283, 337], "const_dnnl_graph_graph_t": [283, 337], "dnnl_graph_op": [283, 341], "dnnl_graph_op_t": [283, 337, 341], "const_dnnl_graph_op_t": [283, 341, 342], "dnnl_graph_alloc": [283, 332], "dnnl_graph_allocator_t": [283, 332, 340, 344], "const_dnnl_graph_allocator_t": [283, 332, 336, 340, 344], "dnnl_graph_compiled_partit": [283, 333], "const_dnnl_graph_compiled_partition_t": [283, 333, 340, 344], "dnnl_graph_tensor": [283, 345], "dnnl_graph_tensor_t": [283, 345], "const_dnnl_graph_tensor_t": [283, 333, 340, 344, 345], "dnnl_ukernel_attr_param": [283, 326], "dnnl_ukernel_attr_params_t": [283, 326], "const_dnnl_ukernel_attr_params_t": [283, 326, 327], "dnnl_brgemm": [283, 327], "dnnl_brgemm_t": [283, 327], "const_dnnl_brgemm_t": [283, 327], "dnnl_transform": [283, 327], "dnnl_transform_t": [283, 327], "const_dnnl_transform_t": [283, 327], "api_kind": 283, "dnnl_accumulation_mode_t": [283, 288, 289, 349], "dnnl_cpu_isa_hints_t": [283, 319], "dnnl_cpu_isa_t": [283, 319], "dnnl_fpmath_mode_t": [283, 289, 300, 337, 349], "dnnl_graph_layout_type_t": [283, 339, 483], "dnnl_graph_op_attr_t": [283, 341], "dnnl_graph_op_kind_t": [283, 341], "dnnl_graph_partition_policy_t": [283, 337, 342], "dnnl_graph_tensor_property_t": [283, 339, 483], "dnnl_normalization_flags_t": [283, 290, 301, 304, 313, 349], "dnnl_ocl_interop_memory_kind_t": [283, 308, 353], "dnnl_pack_type_t": [283, 326, 327], "dnnl_profiling_data_kind_t": [283, 307, 314], "dnnl_prop_kind_t": [283, 289, 290, 295, 297, 298, 301, 302, 304, 305, 309, 310, 313, 317, 318, 320, 321, 349], "dnnl_rnn_flags_t": [283, 318, 349], "dnnl_rounding_mode_t": [283, 289, 349], "dnnl_scratchpad_mode_t": [283, 289, 349], "dnnl_stream_flags_t": [283, 322], "dnnl_sycl_interop_memory_kind_t": [283, 324, 354], "cpu_deletor": 283, "dnnl_graph_inplace_pair_t": [283, 333], "gemm_dims_t": 283, "gqa_dims_t": 283, "mlp_dims_t": 283, "mqa_dims_t": 283, "sdpa_dims_t": 283, "sycl_deletor": 283, "simple_memory_pool_t": 283, "min_run": 283, "bnorm_u8_via_binary_postop": [283, 360, 367], "cnn_inference_f32": [283, 360, 370], "cross_engine_reord": [283, 360, 389, 390], "initializer_list": 283, "extra_arg": 283, "fill_random": 283, "get_type_str": 283, "print_test_cas": 283, "bench_gated_mlp": 283, "time_limit": 283, "bad_arg": 283, "bench": 283, "mlp_perf": 283, "size_of": 283, "fill_mask": 283, "seq_len": [283, 577, 579, 580], "bench_gqa": 283, "gqa_perf": 283, "id_to_set_any_layout": 283, "is_input": 283, "ocl_malloc_shar": 283, "ocl_malloc_devic": 283, "ocl_fre": [283, 340, 351], "ocl_memcpi": 283, "make_md": 283, "write_dt": 283, "write_to_dnnl_tensor": 283, "get_mem_pool": 283, "create_alloc": 283, "bench_mqa": 283, "mqa_perf": 283, "bench_sdpa_primit": 283, "bench_sdpa": 283, "sdpa_perf": 283, "is_integ": 283, "run_cas": 283, "matmul_perf": 283, "performance_profil": [283, 360, 421], "sycl_usm_tutori": 283, "inference_int8_matmul": [283, 360, 405], "weights_decompression_matmul": [283, 360, 443], "dnnl_api": [283, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345], "dnnl_primitive_desc_next_impl": [283, 313], "existing_primitive_desc": [283, 313], "dnnl_primitive_desc_get_attr": [283, 313], "dnnl_primitive_desc_query_s32": [283, 313], "dnnl_primitive_create_from_cache_blob": [283, 313], "cache_blob": [283, 308, 313, 340, 351, 353, 449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 537, 543, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "dnnl_primitive_get_primitive_desc": [283, 313], "dnnl_primitive_get_cache_blob": [283, 313], "dnnl_primitive_attr_clon": [283, 289], "existing_attr": [283, 289], "dropout_desc": [283, 289], "dnnl_primitive_attr_get_fpmath_mod": [283, 289], "dnnl_primitive_attr_set_fpmath_mod": [283, 289], "dnnl_primitive_attr_get_fpmath_mode_v2": [283, 289], "dnnl_primitive_attr_get_determinist": [283, 289], "dnnl_primitive_attr_get_accumulation_mod": [283, 289], "dnnl_primitive_attr_set_accumulation_mod": [283, 289], "dnnl_primitive_attr_get_scratchpad_mod": [283, 289], "dnnl_primitive_attr_set_scal": [283, 289, 539], "group_dim": [283, 289], "dnnl_primitive_attr_set_zero_points_mask": [283, 289, 539], "dnnl_primitive_attr_set_zero_point": [283, 289, 539], "dnnl_primitive_attr_set_round": [283, 289], "dnnl_primitive_attr_get_round": [283, 289], "dnnl_primitive_attr_get_post_op": [283, 289], "dnnl_post_ops_cr": [283, 289], "dnnl_post_ops_clon": [283, 289], "existing_post_op": [283, 289], "dnnl_post_ops_destroi": [283, 289], "dnnl_post_ops_len": [283, 289], "dnnl_post_ops_get_kind": [283, 289], "dnnl_post_ops_append_sum": [283, 289], "dnnl_post_ops_get_params_sum": [283, 289], "dnnl_post_ops_get_params_eltwis": [283, 289], "weights_data_typ": [283, 289, 531], "bias_data_typ": [283, 289, 531], "dst_data_typ": [283, 289, 531], "kernel_s": [283, 289, 531], "stride_s": [283, 289, 531], "padding_l_s": [283, 289, 531], "dnnl_post_ops_get_params_dw": [283, 289], "src1_desc": [283, 289, 291, 458, 531], "dnnl_post_ops_get_params_binari": [283, 289], "dnnl_post_ops_get_params_prelu": [283, 289], "memory_desc": [283, 307, 308, 324, 353, 354], "dnnl_memory_desc_clon": [283, 307], "existing_memory_desc": [283, 307], "dnnl_memory_desc_get_blob": [283, 307], "dnnl_memory_desc_create_with_blob": [283, 307], "dnnl_memory_desc_create_with_csr_encod": [283, 307], "dnnl_memory_desc_create_with_coo_encod": [283, 307], "dnnl_memory_desc_create_with_packed_encod": [283, 307], "dnnl_memory_desc_create_submemori": [283, 307], "parent_memory_desc": [283, 307], "dnnl_memory_desc_reshap": [283, 307], "out_memory_desc": [283, 307], "in_memory_desc": [283, 307], "dnnl_memory_desc_permute_ax": [283, 307], "dnnl_memory_desc_query_v2": [283, 307], "lh": [283, 307], "rh": [283, 307], "dnnl_memory_desc_get_size_v2": [283, 307], "dnnl_data_type_s": [283, 307], "dnnl_memory_create_v2": [283, 307], "dnnl_memory_map_data": [283, 307], "mapped_ptr": [283, 307, 523], "dnnl_memory_map_data_v2": [283, 307], "dnnl_memory_unmap_data": [283, 307], "dnnl_memory_unmap_data_v2": [283, 307], "dnnl_memory_get_data_handle_v2": [283, 307], "dnnl_memory_set_data_handle_v2": [283, 307], "reorder_primitive_desc": [283, 316], "src_engin": [283, 316, 546], "dst_engin": [283, 316, 546], "dnnl_concat_primitive_desc_cr": [283, 294], "concat_primitive_desc": [283, 294], "dnnl_sum_primitive_desc_cr": [283, 323], "sum_primitive_desc": [283, 323], "dnnl_binary_primitive_desc_cr": [283, 291], "src0_desc": [283, 291, 458], "dnnl_binary_primitive_desc_create_v2": [283, 291], "src2_desc": [283, 291, 458], "dnnl_convolution_backward_data_primitive_desc_cr": [283, 295], "dnnl_deconvolution_forward_primitive_desc_cr": [283, 297], "dnnl_deconvolution_backward_data_primitive_desc_cr": [283, 297], "dnnl_deconvolution_backward_weights_primitive_desc_cr": [283, 297], "dnnl_shuffle_forward_primitive_desc_cr": [283, 320], "dnnl_shuffle_backward_primitive_desc_cr": [283, 320], "data_desc": [283, 298, 475], "dnnl_softmax_forward_primitive_desc_cr": [283, 321], "softmax_axi": [283, 321], "dnnl_softmax_backward_primitive_desc_cr": [283, 321], "dnnl_prelu_forward_primitive_desc_cr": [283, 310], "dnnl_prelu_backward_primitive_desc_cr": [283, 310], "dnnl_batch_normalization_forward_primitive_desc_cr": [283, 290], "dnnl_batch_normalization_backward_primitive_desc_cr": [283, 290], "dnnl_group_normalization_forward_primitive_desc_cr": [283, 301], "dnnl_group_normalization_backward_primitive_desc_cr": [283, 301], "dnnl_layer_normalization_forward_primitive_desc_cr": [283, 304], "dnnl_layer_normalization_backward_primitive_desc_cr": [283, 304], "dnnl_layer_normalization_forward_primitive_desc_create_v2": [283, 304], "scale_shift_data_typ": [283, 304, 501, 503], "dnnl_layer_normalization_backward_primitive_desc_create_v2": [283, 304], "diff_scale_shift_data_typ": [283, 304, 501], "dnnl_inner_product_forward_primitive_desc_cr": [283, 302], "dnnl_inner_product_backward_data_primitive_desc_cr": [283, 302], "dnnl_inner_product_backward_weights_primitive_desc_cr": [283, 302], "dnnl_primitive_attr_set_rnn_data_qparam": [283, 289], "dnnl_primitive_attr_get_rnn_data_qparam": [283, 289], "dnnl_primitive_attr_set_rnn_weights_qparam": [283, 289], "dnnl_primitive_attr_get_rnn_weights_qparam": [283, 289], "dnnl_primitive_attr_set_rnn_weights_projection_qparam": [283, 289], "dnnl_primitive_attr_get_rnn_weights_projection_qparam": [283, 289], "dnnl_vanilla_rnn_forward_primitive_desc_cr": [283, 289, 318], "dnnl_vanilla_rnn_backward_primitive_desc_cr": [283, 318], "dnnl_lstm_forward_primitive_desc_cr": [283, 318], "dnnl_lstm_backward_primitive_desc_cr": [283, 318], "diff_weights_peephole_desc": [283, 318, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "diff_weights_projection_desc": [283, 318, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "dnnl_gru_forward_primitive_desc_cr": [283, 318], "dnnl_gru_backward_primitive_desc_cr": [283, 318], "dnnl_lbr_gru_forward_primitive_desc_cr": [283, 318], "dnnl_lbr_gru_backward_primitive_desc_cr": [283, 318], "dnnl_augru_forward_primitive_desc_cr": [283, 318], "dnnl_augru_backward_primitive_desc_cr": [283, 318], "diff_attention_desc": [283, 318, 450, 505], "dnnl_lbr_augru_forward_primitive_desc_cr": [283, 318], "dnnl_lbr_augru_backward_primitive_desc_cr": [283, 318], "dnnl_matmul_primitive_desc_cr": [283, 306], "dnnl_resampling_forward_primitive_desc_cr": [283, 317], "dnnl_resampling_backward_primitive_desc_cr": [283, 317], "dnnl_reduction_primitive_desc_cr": [283, 315], "dnnl_get_primitive_cache_capac": [283, 311], "dir": [283, 318, 319, 349], "dnnl_set_max_cpu_isa": [283, 319], "dnnl_get_effective_cpu_isa": [283, 319], "dnnl_set_cpu_isa_hint": [283, 319], "isa_hint": [283, 319, 349], "dnnl_get_cpu_isa_hint": [283, 319], "dnnl_reset_profil": [283, 314], "dnnl_query_profiling_data": [283, 314], "data_kind": [283, 314, 349], "num_entri": [283, 314], "offsetc": [283, 292, 325, 349, 355], "ao": [283, 292, 325, 349, 355], "bo": [283, 292, 325, 349, 355], "dnnl_dt2str": 283, "dnnl_fpmath_mode2str": 283, "dnnl_accumulation_mode2str": 283, "dnnl_engine_kind2str": 283, "dnnl_sparse_encoding2str": 283, "dnnl_fmt_tag2str": 283, "dnnl_prop_kind2str": 283, "dnnl_prim_kind2str": 283, "dnnl_alg_kind2str": 283, "dnnl_rnn_flags2str": 283, "dnnl_rnn_direction2str": 283, "dnnl_scratchpad_mode2str": 283, "dnnl_rounding_mode2str": 283, "dnnl_cpu_isa2str": 283, "dnnl_cpu_isa_hints2str": 283, "dnnl_runtime2str": 283, "dnnl_fmt_kind2str": 283, "dnnl_ocl_interop_memory_cr": [283, 308], "dnnl_ocl_interop_memory_create_v2": [283, 308], "dnnl_ocl_interop_memory_get_memory_kind": [283, 308], "dnnl_ocl_interop_memory_get_mem_object": [283, 308], "mem_object": [283, 308, 353], "dnnl_ocl_interop_memory_set_mem_object": [283, 308], "dnnl_ocl_interop_engine_get_cache_blob_id": [283, 308], "dnnl_ocl_interop_engine_get_cache_blob": [283, 308, 353], "dnnl_ocl_interop_engine_create_from_cache_blob": [283, 308, 340], "dnnl_ocl_interop_engine_cr": [283, 308, 340], "dnnl_ocl_interop_engine_get_context": [283, 308], "dnnl_ocl_interop_get_devic": [283, 308], "dnnl_ocl_interop_stream_cr": [283, 308], "dnnl_ocl_interop_stream_get_command_queu": [283, 308], "dnnl_ocl_interop_primitive_execut": [283, 308], "dep": [283, 308, 324, 340, 344, 351, 352, 353, 354], "ndep": [283, 308, 340], "return_ev": [283, 308, 324, 340], "dnnl_sycl_interop_engine_cr": [283, 324], "dnnl_sycl_interop_engine_get_context": [283, 324], "dnnl_sycl_interop_engine_get_devic": [283, 324], "dnnl_sycl_interop_memory_cr": [283, 324], "dnnl_sycl_interop_memory_create_v2": [283, 324], "dnnl_sycl_interop_memory_get_memory_kind": [283, 324], "dnnl_sycl_interop_memory_set_buff": [283, 324], "dnnl_sycl_interop_stream_cr": [283, 324], "dnnl_sycl_interop_stream_get_queu": [283, 324], "dnnl_sycl_interop_primitive_execut": [283, 324], "dnnl_threadpool_interop_stream_cr": [283, 325], "dnnl_threadpool_interop_stream_get_threadpool": [283, 325], "dnnl_threadpool_interop_set_max_concurr": [283, 325], "max_concurr": [283, 325], "dnnl_threadpool_interop_get_max_concurr": [283, 325], "dnnl_threadpool_interop_sgemm": [283, 325], "dnnl_threadpool_interop_gemm_u8s8s32": [283, 325], "dnnl_threadpool_interop_gemm_s8s8s32": [283, 325], "dnnl_engine_get_count": [283, 299], "dnnl_engine_get_kind": [283, 299], "dnnl_stream_get_engin": [283, 322], "dnnl_get_default_fpmath_mod": [283, 300], "dnnl_graph_allocator_cr": [283, 332], "dnnl_graph_allocator_destroi": [283, 332], "dnnl_graph_make_engine_with_alloc": [283, 336], "dnnl_graph_logical_tensor_init": [283, 339], "dnnl_graph_logical_tensor_init_with_dim": [283, 339], "dnnl_graph_logical_tensor_init_with_strid": [283, 339], "dnnl_graph_logical_tensor_get_mem_s": [283, 339], "dnnl_graph_logical_tensor_is_equ": [283, 339], "lt1": [283, 339], "lt2": [283, 339], "dnnl_graph_tensor_cr": [283, 345], "dnnl_graph_tensor_destroi": [283, 345], "dnnl_graph_tensor_get_data_handl": [283, 345], "dnnl_graph_tensor_set_data_handl": [283, 345], "dnnl_graph_tensor_get_engin": [283, 345], "dnnl_graph_tensor_get_logical_tensor": [283, 345], "dnnl_graph_op_cr": [283, 341], "dnnl_graph_op_destroi": [283, 341], "dnnl_graph_op_add_input": [283, 341], "dnnl_graph_op_add_output": [283, 341], "dnnl_graph_op_set_attr_f32": [283, 341], "value_len": [283, 341], "dnnl_graph_op_set_attr_bool": [283, 341], "dnnl_graph_op_set_attr_s64": [283, 341], "dnnl_graph_op_set_attr_str": [283, 341], "dnnl_graph_op_get_id": [283, 341], "dnnl_graph_op_get_kind": [283, 341], "dnnl_graph_partition_create_with_op": [283, 342], "dnnl_graph_partition_destroi": [283, 337, 342], "dnnl_graph_partition_get_op_num": [283, 342], "num": [283, 337, 342], "dnnl_graph_partition_get_op": [283, 342], "dnnl_graph_partition_get_id": [283, 342], "dnnl_graph_partition_compil": [283, 342], "in_num": [283, 342], "out_num": [283, 342], "dnnl_graph_partition_get_input_ports_num": [283, 342], "dnnl_graph_partition_get_input_port": [283, 342], "dnnl_graph_partition_get_output_ports_num": [283, 342], "dnnl_graph_partition_get_output_port": [283, 342], "dnnl_graph_partition_is_support": [283, 342], "dnnl_graph_partition_get_engine_kind": [283, 342], "dnnl_graph_compiled_partition_cr": [283, 333], "dnnl_graph_compiled_partition_execut": [283, 333], "num_input": [283, 333, 340, 344], "num_output": [283, 333, 340, 344], "dnnl_graph_compiled_partition_destroi": [283, 333], "dnnl_graph_compiled_partition_query_logical_tensor": [283, 333], "dnnl_graph_compiled_partition_get_inplace_port": [283, 333], "num_inplace_pair": [283, 333], "inplace_pair": [283, 333], "dnnl_graph_graph_cr": [283, 337], "dnnl_graph_graph_create_with_fpmath_mod": [283, 337], "dnnl_graph_graph_destroi": [283, 337], "dnnl_graph_graph_set_fpmath_mod": [283, 337], "dnnl_graph_graph_get_fpmath_mod": [283, 337], "dnnl_graph_add_op": [283, 337], "dnnl_graph_graph_fin": [283, 337], "dnnl_graph_graph_is_fin": [283, 337], "dnnl_graph_graph_filt": [283, 337], "dnnl_graph_graph_get_partition_num": [283, 337], "dnnl_graph_graph_get_partit": [283, 337], "dnnl_graph_get_compiled_partition_cache_capac": [283, 334], "dnnl_graph_set_compiled_partition_cache_capac": [283, 334], "dnnl_graph_set_constant_tensor_cach": [283, 335], "dnnl_graph_get_constant_tensor_cach": [283, 335], "eng_kind": [283, 335], "dnnl_graph_ocl_interop_allocator_cr": [283, 340], "ocl_malloc": [283, 340, 351], "dnnl_graph_ocl_interop_make_engine_with_alloc": [283, 340], "dnnl_graph_ocl_interop_make_engine_from_cache_blob_with_alloc": [283, 340], "dnnl_graph_ocl_interop_compiled_partition_execut": [283, 340], "dnnl_graph_sycl_interop_allocator_cr": [283, 344], "sycl_malloc": [283, 344, 352], "sycl_fre": [283, 344, 352], "dnnl_graph_sycl_interop_make_engine_with_alloc": [283, 344], "dnnl_graph_sycl_interop_compiled_partition_execut": [283, 344], "sycl_ev": [283, 344], "dnnl_ukernel_attr_params_cr": [283, 326], "dnnl_ukernel_attr_params_set_post_ops_arg": [283, 326], "post_ops_arg": [283, 326, 567], "dnnl_ukernel_attr_params_set_a_scal": [283, 326], "a_scal": [283, 326, 567], "dnnl_ukernel_attr_params_set_b_scal": [283, 326], "b_scale": [283, 326, 567], "dnnl_ukernel_attr_params_set_d_scal": [283, 326], "d_scale": [283, 326, 567], "dnnl_ukernel_attr_params_destroi": [283, 326], "dnnl_brgemm_creat": [283, 327], "dnnl_brgemm_set_add_c": [283, 327], "add_c": [283, 327, 568], "dnnl_brgemm_set_post_op": [283, 327], "dnnl_brgemm_set_a_scal": [283, 327], "a_scale_mask": [283, 327, 568], "dnnl_brgemm_set_b_scal": [283, 326, 327], "b_scale_mask": [283, 327, 568], "dnnl_brgemm_set_d_scal": [283, 327], "d_scale_mask": [283, 327, 568], "dnnl_brgemm_fin": [283, 327], "dnnl_brgemm_get_b_pack_typ": [283, 327], "dnnl_brgemm_get_scratchpad_s": [283, 327], "dnnl_brgemm_is_execute_postops_valid": [283, 327], "dnnl_brgemm_set_hw_context": [283, 327], "dnnl_brgemm_release_hw_context": [283, 327], "dnnl_brgemm_gener": [283, 327], "dnnl_brgemm_execut": [283, 327], "dnnl_brgemm_execute_postop": [283, 327], "d_ptr": [283, 327], "dnnl_brgemm_destroi": [283, 327], "dnnl_transform_cr": [283, 327], "dnnl_transform_gener": [283, 327], "dnnl_transform_execut": [283, 327], "in_ptr": [283, 327], "out_ptr": [283, 327], "dnnl_transform_destroi": [283, 327], "complain_dnnl_error_and_exit": 283, "complain_fmt": 283, "dnnl_arg_attr_multiple_post_op_bas": [283, 313], "dnnl_arg_attr_output_scal": [283, 313], "dnnl_arg_diff_augru_attent": [283, 313], "dnnl_arg_diff_dst_0": [283, 313], "dnnl_arg_diff_dst_1": [283, 313], "dnnl_arg_diff_dst_2": [283, 313], "dnnl_arg_diff_src_0": [283, 313], "dnnl_arg_diff_src_2": [283, 313], "dnnl_arg_diff_src_3": [283, 313], "dnnl_arg_diff_weights_0": [283, 313], "dnnl_arg_diff_weights_1": [283, 313], "dnnl_arg_diff_weights_2": [283, 313], "dnnl_arg_diff_weights_3": [283, 313], "dnnl_arg_dst_0": [283, 313], "dnnl_arg_dst_1": [283, 313], "dnnl_arg_dst_2": [283, 313], "dnnl_arg_multiple_dst": [283, 313], "dnnl_arg_src_3": [283, 313], "dnnl_arg_undef": [283, 313], "dnnl_arg_weights_0": [283, 313], "dnnl_arg_weights_1": [283, 313], "dnnl_arg_weights_2": [283, 313], "dnnl_arg_weights_3": [283, 313], "dnnl_enable_except": 283, "dnnl_jit_profile_linux_jitdump": [283, 319], "dnnl_jit_profile_linux_jitdump_use_tsc": [283, 319], "dnnl_jit_profile_linux_perf": [283, 319], "dnnl_jit_profile_linux_perfmap": [283, 319], "dnnl_jit_profile_non": [283, 319], "dnnl_jit_profile_vtun": [283, 319], "dnnl_runtime_f32_v": [283, 307, 387], "dnnl_runtime_s32_v": [283, 307], "dnnl_runtime_size_v": [283, 307], "dnnl_throw_error": 283, "pragma_macro": 283, "type_cas": 283, "bla": [287, 325, 355, 564], "convert_to_c": [288, 289, 299, 300, 313, 318, 349, 353, 354, 523], "aalgorithm": [289, 349, 458, 463, 465, 467, 469, 471, 473, 475, 477, 513, 515, 527, 529, 531, 544, 548, 550, 557, 559], "dnnl_": 289, "_primitive_desc_cr": 289, "as_data_typ": [289, 531], "output_height": [289, 531], "output_height_1x1_convolut": [289, 531], "output_width": [289, 531], "output_width_1x1_convolut": [289, 531], "dev_guide_attributes_post_ops_depthwis": [289, 531], "dev_guide_attributes_post_ops_depthwise_fus": [289, 313, 531], "another_input": [289, 531], "sic": [289, 539], "slc": [289, 539], "dic": [289, 539], "dlc": [289, 539], "rnn_attr": 289, "rnn_pd": 289, "nativ": [289, 539], "five": [289, 539], "weights_lay": [289, 539], "weights_iter": [289, 539], "violat": [289, 539], "batch_normalization_backward": [290, 349, 537], "ternari": [291, 458], "algebra": 292, "gemm_u8s8s32": [292, 349, 355], "gemm_s8s8s32": [292, 349, 355], "mxk": [292, 325, 355], "kxn": [292, 325, 355], "mxn": [292, 325, 355], "xerbla": [292, 325, 355], "a_offset": [292, 325, 355], "b_offset": [292, 325, 355], "c_offset": [292, 325, 355], "convolution_backward_data": [295, 349, 537], "deconvolution_backward_data": [297, 349, 537], "deconvolution_backward_weight": [297, 349, 537], "use_dst_for_bwd": [298, 475], "group_normalization_backward": [301, 349, 537], "inner_product_backward_data": [302, 349, 537], "inner_product_backward_weight": [302, 349, 537], "layer_normalization_backward": [304, 349, 537], "stat": 304, "manipul": 307, "discourag": 307, "inequ": [307, 492, 525], "set_buff": [307, 354], "ordinari": 307, "ill": 307, "never": [307, 319], "retriev": [307, 308, 313], "newli": 307, "encompass": [307, 525], "join": [307, 525], "in_md": [307, 525], "out_md": 307, "expect_out_md": [307, 525], "in_dim": 307, "out_dim": 307, "in_tag": 307, "out_tag": 307, "lie": 307, "oihw_4i16o4i": 307, "oihw_4i16o4i_": 307, "4i16o4i": 307, "had": [307, 324, 353, 354, 420, 523], "unmap": [307, 523], "mainli": [307, 523], "made": [307, 523], "prelu_backward": [310, 349, 537], "get_primitive_cache_capac": [311, 349], "set_primitive_cache_capac": [311, 349], "held": [311, 334], "excess": [311, 334], "aqueri": [313, 349], "32bit": 313, "qualifi": 313, "dev_guide_attributes_post_ops_binary_fus": 313, "mnemon": 313, "peephol": [313, 318, 517, 519, 551], "norm_lp": 315, "resampling_backward": [317, 349, 537], "resampling": 317, "rnn_flag": [318, 349], "rnn_primitive_desc_bas": [318, 349, 450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 541, 571, 573], "lbr": [318, 504, 505, 506, 507, 508, 509, 510, 511], "aid": 319, "version_t": [319, 349], "cpu_isa": [319, 349], "cpu_isa_hint": [319, 349], "set_verbos": [319, 349], "get_default_fpmath_mod": [319, 349], "set_jit_dump": [319, 349], "set_jit_profiling_flag": [319, 349], "set_jit_profiling_jitdumpdir": [319, 349], "dnnl_jit_dump": 319, "dnnl_jit_profil": 319, "vtune": [319, 360, 413], "pid": 319, "perf": 319, "mkdtemp": 319, "xxxxxx": 319, "home": 319, "revert": 319, "invok": 319, "dnnl_max_cpu_isa": 319, "dnnl_cpu_isa": 319, "reflect": 319, "dnnl_cpu_isa_hint": 319, "shuffle_backward": [320, 349, 537], "softmax_backward": [321, 349, 537], "threapdool_ifac": [325, 355], "threadloc": 325, "dnnl_brgemm_no_pack": 327, "dnnl_brgemm_pack_32": 327, "trait": [330, 349, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573], "handle_trait": [330, 349, 492], "acquir": 332, "input_id": [333, 482], "get_compiled_partition_cache_capac": [334, 350], "set_compiled_partition_cache_capac": [334, 350], "set_constant_tensor_cach": [335, 350], "get_constant_tensor_cach": [335, 350], "set_constant_tensor_cache_capac": [335, 350], "get_constant_tensor_cache_capac": [335, 350], "deprec": 335, "supplement": [336, 340, 344], "meta": 339, "enrich": 339, "progress": 339, "toward": 339, "60": 339, "layout_id": [339, 483], "openpow": 347, "ppc64": 347, "practition": 347, "c_partit": [351, 352], "beforehand": 351, "adevic": [352, 354], "acontext": [352, 354], "amemori": [353, 354], "set_mem_object": 353, "aprimit": [353, 354], "query_md": [353, 354, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 537, 541, 542, 544, 545, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "aqueu": 354, "abuff": 354, "get_threadpool": 355, "cnn_inference_int8": [360, 371], "cnn_training_bf16": 360, "cnn_training_f32": 360, "cpu_cnn_training_f32": 360, "cpu_matmul_csr": 360, "cpu_matmul_coo": 360, "cpu_matmul_quant": 360, "cpu_matmul_weights_compress": 360, "cpu_rnn_inference_f32": [360, 385], "cpu_rnn_inference_int8": [360, 386], "cpu_sgemm_and_matmul": 360, "gpu_opencl_interop": [360, 396], "memory_format_propag": 360, "rnn_training_f32": 360, "sycl_interop_buff": [360, 439], "untitl": 360, "legal": 360, "trademark": 360, "awai": [367, 369, 370, 397, 399, 400, 401, 402], "detriment": [369, 370], "realist": 371, "_x": 382, "research": 382, "max_": 382, "min_": 382, "earli": 382, "obviou": 382, "disadvantag": 382, "wors": 382, "inevit": 382, "unidirectin": [385, 386], "charact": [385, 386], "facil": [390, 395, 396, 439], "resid": [390, 395, 396, 397, 398, 399, 400, 401, 402, 439], "thank": [390, 395], "lightweight": [390, 395], "compris": 395, "singleton": 395, "ten": 395, "educ": 395, "aliv": 395, "_d": 395, "relu_d": 395, "human": [395, 439], "encourag": 395, "experi": 395, "familiar": 395, "spoil": 395, "oop": 395, "forgot": 395, "liter": 396, "get_ocl_mem_object": 396, "realiz": [396, 439], "heavier": [396, 439], "serv": 396, "submiss": 396, "cpu_getting_start": 397, "till": [397, 400, 401], "mayb": [397, 398, 400, 401], "unfin": [397, 400, 401], "simul": [397, 398, 399, 400, 401, 402], "cpu_inference_int8": 398, "cpu_single_op_partit": 399, "quickli": [399, 402], "gpu_opencl_getting_start": 400, "dnnl_graph_ocl": 400, "sycl_getting_start": 401, "sycl_single_op_partit": 402, "logo": 413, "openvino": 413, "pentium": 413, "subsidiari": 413, "brand": 413, "countri": 413, "khrono": 413, "central": 420, "understood": 420, "reader": 420, "bother": 420, "idiomat": 420, "realli": 420, "ver": 420, "1x128x14x14": 420, "326904": 420, "256x128x3x3": 420, "244141": 420, "bia_undef": [420, 421], "mb1_ic128oc256_ih14oh14kh3sh1dh0ph1_iw14ow14kw3sw1dw0pw1": 420, "20312": 420, "ws_undef": 420, "mb1ic256_ih14oh14kh3sh1ph1_iw14ow14kw3sw1pw1": 420, "187012": 420, "1x256x14x14": 420, "0419922": 420, "knowledg": 421, "ex": 421, "user_": 421, "meant": 421, "enter": 421, "easili": 421, "launch": 421, "shell": 421, "tell": 421, "38": 421, "mb128_ic3oc96_ih227oh55kh11sh4dh0ph0_iw227ow55kw11sw4dw0pw0": 421, "314": 421, "data_f32": 421, "diff_undef": 421, "128x96x55x55": 421, "87695": 421, "reoder": 421, "conv_dst1": 421, "pai": 421, "penalti": 421, "96x3x11x11": 421, "0310059": 421, "3101": 421, "66895": 421, "80396": 421, "closer": 421, "0148926": 421, "968": 421, "66797": 421, "kmp_affin": 421, "platinum": 421, "8180": 421, "50ghz": 421, "numa": 421, "ram": 421, "ddr4": 421, "gb": 421, "catalogu": 445, "weak": [449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573], "allow_empti": [449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573], "get_primitive_desc": [449, 451, 453, 455, 457, 460, 462, 464, 466, 468, 470, 472, 474, 476, 484, 486, 488, 490, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 526, 528, 532, 534, 537, 543, 545, 547, 549, 552, 554, 556, 558, 562, 570, 572], "get_kind": [449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 528, 529, 532, 533, 534, 535, 537, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 570, 571, 572, 573], "default_attr": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 544, 546, 548, 550, 553, 555, 557, 559, 563, 571, 573], "get_cell_kind": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_prop_kind": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_direct": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_dil": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_padding_l": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_padding_r": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_epsilon": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_algorithm": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_alpha": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_beta": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_axi": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_local_s": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_k": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_p": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_factor": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_activation_kind": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_kernel": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_group_s": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "get_primitive_attr": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 542, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "next_impl": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 544, 546, 548, 550, 551, 553, 555, 557, 559, 563, 571, 573], "augru_attention_desc": [450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "diff_augru_attention_desc": [450, 452, 489, 491, 505, 507, 509, 511, 517, 519, 551, 571, 573], "signifi": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 525, 527, 529, 533, 535, 544, 546, 548, 550, 553, 555, 557, 559, 563, 568, 569, 571, 573], "src0": 458, "src2": 458, "caller": [461, 541, 546, 563], "prim_kind": [461, 541, 546, 563], "prop_kind1": [461, 541, 546, 563], "prop_kind2": [461, 541, 546, 563], "get_count": 479, "uniniti": [479, 492, 523, 537, 561], "thrown": [479, 492, 523, 537, 561], "wrap_c_api": 480, "output_id": 482, "union": 483, "descend": [492, 537, 541, 542, 551], "weak_ptr": 492, "dummi": 492, "destructor": 493, "validate_dim": 523, "min_siz": 523, "adata_typ": [523, 525], "map_data": 523, "unmap_data": 523, "absenc": [523, 525], "aformat_tag": 525, "permute_ax": 525, "get_ndim": 525, "get_padded_offset": 525, "get_submemory_offset": 525, "get_nnz": 525, "get_sparse_encod": 525, "get_format_kind": 525, "is_zero": 525, "index_dt": 525, "pointer_dt": 525, "new_desc": 525, "get_params_sum": 531, "get_params_eltwis": 531, "get_params_dw": 531, "get_params_prelu": 531, "zeropoint": 531, "oc_dim": 531, "mb_dim": 531, "channel_dim": 531, "height_dim": 531, "prelu_weight": 531, "weight_desc": [533, 535], "c_pd": 537, "mask_desc": 539, "get_accumulation_mod": 539, "set_accumulation_mod": 539, "get_determinist": 539, "get_rounding_mod": 539, "set_rounding_mod": 539, "get_post_op": 539, "get_rnn_data_qparam": 539, "get_rnn_weights_qparam": 539, "set_rnn_weights_projection_qparam": 539, "get_rnn_weights_projection_qparam": 539, "rnn_d": 539, "get_src_engin": 546, "get_dst_engin": 546, "aflag": 561, "constexpr": 564, "virtual": 564, "subclass": 564, "closur": 564, "set_a_scal": [567, 568], "set_d_scal": [567, 568], "default_post_op": 568, "default_attr_param": 568, "cpu_runtim": 574, "gpu_runtim": 574, "absent": 574, "q_head_num": [577, 579], "kv_head_num": 577, "head_siz": [577, 579, 580], "gr": 578, "head_num": 580, "query_num": 580, "ctx_": 581}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"advanc": 0, "topic": 0, "build": [1, 23, 24, 27, 30, 31, 36, 38, 39, 148, 149, 160, 165, 397, 398, 399, 400, 401, 402], "link": [1, 54], "class": [2, 3, 4, 5, 6, 7, 8, 9], "dnnl": [2, 3, 4, 5, 6, 7, 8, 169, 172, 173, 174, 178, 182, 185, 186, 187, 188, 190, 192, 194, 196, 197, 198, 199, 200, 202, 205, 207, 209, 211, 213, 215, 217, 219, 222, 224, 226, 228, 349, 350, 351, 352, 353, 354, 355, 356, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573], "graph": [2, 3, 4, 5, 6, 7, 8, 19, 24, 37, 38, 39, 185, 186, 187, 188, 190, 192, 194, 284, 331, 337, 350, 351, 352, 397, 398, 399, 400, 401, 402], "alloc": [2, 332, 420], "overview": [2, 3, 4, 5, 6, 7, 8, 33, 40, 41, 42, 44, 45, 143, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 283, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 351, 352, 353, 354, 355, 357, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574], "detail": [2, 3, 4, 5, 6, 7, 8, 20, 22, 26, 29, 34, 36, 46, 50, 53, 55, 56, 146, 147, 150, 151, 152, 153, 155, 156, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 283, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 351, 352, 353, 354, 355, 357, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574], "document": [2, 3, 4, 5, 6, 7, 8, 23, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 283, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 351, 352, 353, 354, 355, 357, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574], "construct": [2, 3, 4, 5, 6, 7, 8, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 568, 569, 570, 571, 572, 573], "compiled_partit": 3, "method": [3, 4, 5, 6, 7, 8, 38, 450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 479, 480, 485, 487, 489, 491, 492, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 542, 544, 545, 546, 548, 550, 551, 553, 555, 557, 559, 561, 563, 564, 567, 568, 569, 571, 573], "logical_tensor": [5, 185, 186, 187], "typedef": [5, 289, 296, 299, 307, 313, 319, 322, 326, 327, 332, 333, 337, 340, 341, 342, 344, 345, 523], "op": [6, 15, 20, 22, 26, 29, 34, 37, 46, 50, 53, 55, 56, 146, 150, 151, 152, 153, 154, 155, 156, 188, 190, 341, 367, 399, 402], "partit": [7, 37, 192, 333, 334, 342, 397, 398, 399, 400, 401, 402], "tensor": [8, 27, 28, 37, 335, 339, 345], "simple_memory_pool_t": 9, "primit": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 36, 56, 145, 148, 149, 165, 166, 205, 311, 312, 361, 363, 365, 374, 376, 380, 381, 384, 390, 391, 393, 395, 396, 403, 407, 409, 411, 414, 416, 418, 420, 422, 424, 426, 428, 430, 433, 435, 437, 439, 441, 537, 582], "attribut": [10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 26, 29, 34, 46, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 150, 151, 152, 153, 154, 155, 156, 162, 163, 289], "usag": [10, 145], "support": [10, 15, 20, 22, 26, 34, 46, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 153, 155, 156, 159, 286, 582], "relat": [10, 145, 166], "error": [10, 480], "handl": [10, 32, 33, 143, 492], "accumul": [11, 155, 288], "mode": [11, 14, 17, 32, 45, 155, 165, 288, 300], "determinist": 12, "dropout": 13, "introduct": [13, 16, 19, 37, 49, 159, 161, 164, 420], "implement": [13, 20, 22, 26, 29, 34, 41, 42, 44, 45, 46, 50, 53, 55, 56, 146, 147, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 421], "api": [13, 16, 25, 27, 36, 145, 287, 293, 303, 308, 324, 325, 331, 338, 340, 344, 396, 397, 398, 400, 401, 439], "float": [14, 40, 41, 44, 45, 300], "point": [14, 40, 41, 44, 45, 300], "math": [14, 45, 300], "The": 14, "enforc": 14, "an": 14, "integr": 14, "A": 14, "note": [14, 20, 22, 25, 26, 29, 34, 46, 50, 53, 55, 56, 146, 147, 150, 151, 152, 155, 156], "default": 14, "post": [15, 20, 22, 26, 29, 34, 46, 50, 53, 55, 56, 146, 150, 151, 152, 153, 154, 155, 156, 367], "eltwis": [15, 34, 255, 298], "sum": [15, 156, 277, 323, 437, 562, 563], "depthwis": 15, "binari": [15, 22, 231, 291, 365, 367, 457, 458], "prelu": [15, 110, 147, 270, 310], "exampl": [15, 16, 18, 20, 22, 26, 29, 34, 35, 41, 42, 44, 46, 49, 50, 51, 53, 55, 56, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 159, 162, 163, 165, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 384, 385, 386, 391, 393, 398, 403, 407, 409, 411, 414, 416, 418, 421, 422, 424, 426, 428, 430, 432, 433, 435, 437, 441], "chain": 15, "relu": [15, 121, 390, 395], "tanh": [15, 139], "scaleshift": 15, "quantiz": [16, 40, 49, 112, 382], "model": [16, 285, 446], "numer": [16, 32], "behavior": [16, 32], "convolut": [16, 29, 70, 239, 295, 376, 398, 420], "workflow": [16, 49, 159], "per": 16, "channel": [16, 164], "scale": [16, 20, 44, 46, 49, 53], "argument": [16, 20, 22, 26, 29, 34, 46, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156], "1": [16, 29, 52], "weight": [16, 443], "output": [16, 28, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 165], "2": [16, 29, 52], "round": [17, 32, 124], "scratchpad": 18, "memori": [18, 19, 28, 33, 143, 145, 148, 161, 164, 166, 196, 197, 198, 199, 307, 390, 395, 396, 420, 439, 523, 525], "engin": [18, 19, 145, 166, 178, 299, 336, 389, 390, 395, 396, 439, 479], "librari": [18, 23, 24, 32, 54, 347], "manag": [18, 148], "user": 18, "basic": [19, 37, 161], "concept": [19, 37, 161], "stream": [19, 224, 322, 390, 395, 396, 439, 561], "object": [19, 33, 143, 390, 395, 396, 420, 439], "level": 19, "abstract": 19, "creat": [19, 390, 395, 396, 420, 439], "extens": [19, 284, 396, 400, 401, 439], "micro": 19, "kernel": [19, 396, 439], "batch": [20, 162, 290, 363], "normal": [20, 46, 53, 55, 290, 301, 304, 363, 403, 409, 414], "gener": [20, 22, 26, 29, 32, 34, 46, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164], "forward": [20, 29, 34, 46, 48, 50, 53, 55, 146, 147, 152, 154, 155], "differ": [20, 29, 34, 38, 46, 48, 50, 53, 146, 147, 152, 154, 155], "between": [20, 29, 34, 38, 46, 48, 50, 53, 146, 147, 152, 154, 155, 389, 390], "train": [20, 29, 32, 34, 40, 46, 48, 50, 53, 146, 147, 152, 153, 154, 155, 158, 159, 372, 373, 379, 432], "infer": [20, 29, 32, 34, 40, 46, 47, 48, 49, 50, 53, 146, 147, 152, 154, 155, 369, 370, 371, 385, 386, 398, 405], "backward": [20, 29, 34, 46, 48, 50, 53, 55, 146, 147, 152, 154, 155], "execut": [20, 22, 26, 29, 34, 46, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 390, 395, 396, 397, 398, 399, 400, 401, 402, 420, 439], "data": [20, 22, 26, 29, 32, 34, 41, 42, 44, 45, 46, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 296, 390, 395, 396, 420, 439], "type": [20, 22, 26, 29, 32, 34, 41, 42, 44, 45, 46, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 162, 163, 296], "represent": [20, 22, 26, 29, 34, 46, 50, 53, 55, 56, 146, 147, 150, 151, 153, 155, 156, 161, 162, 163], "mean": [20, 46, 53], "varianc": [20, 46, 53], "shift": [20, 46, 53], "sourc": [20, 22, 23, 46, 53, 55, 146, 150, 155, 156, 160, 420], "destin": [20, 22, 46, 53, 55, 146, 150, 155, 156, 420], "Their": [20, 46, 53, 55, 146, 155], "gradient": [20, 46, 53, 55, 146, 155], "limit": [20, 22, 24, 26, 29, 32, 34, 36, 41, 42, 44, 45, 46, 50, 53, 55, 56, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 162, 163], "perform": [20, 21, 22, 26, 29, 34, 46, 50, 53, 55, 56, 146, 147, 149, 150, 151, 152, 154, 155, 156, 420, 421, 445], "tip": [20, 22, 26, 29, 34, 46, 50, 53, 55, 56, 146, 147, 150, 151, 152, 154, 155, 156], "benchmark": [21, 144], "from": [23, 160, 390], "download": 23, "code": [23, 38, 51, 160, 395], "linux": [23, 54, 149], "maco": [23, 54], "gcc": 23, "clang": 23, "intel": [23, 32, 52, 160], "oneapi": [23, 347, 357], "dpc": [23, 33, 348], "c": [23, 38, 233, 241, 252], "compil": [23, 24, 37, 38, 333, 334, 397, 398, 399, 400, 401, 402], "sycl": [23, 33, 324, 344, 359, 401, 439], "runtim": [23, 24, 30, 54, 144, 303, 338], "target": [23, 24], "aarch64": [23, 24], "x64": 23, "host": [23, 24], "arm": [23, 24], "comput": [23, 24, 52], "acl": 23, "window": [23, 54], "microsoft": 23, "visual": 23, "valid": [23, 25, 390, 395, 396, 439], "instal": 23, "option": [24, 38], "common": [24, 36, 293, 313], "configur": [24, 144, 421], "function": [24, 153, 283, 288, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 351, 352, 353, 354, 355, 390, 395, 396, 397, 398, 399, 400, 401, 402, 420, 439], "onednn_enable_workload": 24, "onednn_enable_primit": 24, "onednn_enable_primitive_cpu_isa": 24, "onednn_enable_primitive_gpu_isa": 24, "onednn_enable_gemm_kernels_isa": 24, "test": 24, "onednn_test_set": 24, "cpu": [24, 30, 31, 51, 52, 144, 389, 390, 397, 399, 439], "specif": [24, 28, 48], "architectur": [24, 32], "openmp": 24, "thread": [24, 144, 157], "block": [24, 164, 421], "tbb": 24, "threadpool": [24, 157, 325], "vendor": 24, "bla": [24, 292], "gpu": [24, 51, 52, 389, 390, 396, 402, 439], "opencl": [24, 143, 308, 340, 348, 396, 400], "compon": 24, "backend": 24, "input": [25, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "concat": [26, 69, 238, 294, 374, 460, 461], "constant": [27, 335], "cach": [27, 145, 148, 311, 334, 335], "time": [27, 30, 31, 36, 38, 39, 148, 149, 165], "control": [27, 30, 31, 36, 38, 39, 148, 149, 165], "run": [27, 31, 39, 148, 149, 165], "capac": 27, "environ": [27, 38], "variabl": [27, 28, 38], "name": 28, "convent": 28, "formula": 28, "verbos": [28, 165, 166], "rnn": [28, 153, 318, 361, 385, 386, 411, 416, 432, 441], "notat": 28, "format": [28, 164, 420, 421], "tag": [28, 149], "regular": [29, 70], "group": [29, 42, 46, 70, 301, 403], "dilat": [29, 70], "deconvolut": [29, 254, 297, 391], "transpos": 29, "3": 29, "algorithm": [29, 172], "direct": 29, "winograd": 29, "automat": 29, "select": [29, 125], "dispatch": [30, 165, 166], "isa": 31, "hint": 31, "onednn": [32, 54, 144, 149, 157, 160, 287, 390, 395, 396, 439], "denorm": 32, "hardwar": 32, "r": 32, "processor": [32, 52], "graphic": 32, "xe": 32, "interoper": [33, 143, 303, 308, 324, 325, 338, 340, 344, 348], "buffer": [33, 143, 420], "usm": [33, 143], "interfac": [33, 143], "depend": [33, 143], "except": 34, "experiment": 36, "featur": [36, 149], "onednn_experimental_spars": 36, "matrix": [36, 56, 162, 306], "multipl": [36, 56, 162, 164, 306], "csr": 36, "encod": 36, "coo": 36, "pack": 36, "reorder": [36, 123, 151, 272, 316, 389, 390, 420, 428, 545, 546], "onednn_experimental_ukernel": 36, "onednn_experimental_profil": 36, "onednn_experimental_graph_compiler_backend": 36, "onednn_experimental_log": 36, "logic": [37, 339], "codegen": 38, "jit": [38, 51], "llvm": 38, "builtin": 38, "enabl": [38, 165], "trace": 38, "switch": 38, "dump": [38, 39], "fusion": 40, "pattern": [40, 41, 42, 44, 45], "gate": 41, "multi": 41, "layer": [41, 53, 304, 409], "perceptron": 41, "mlp": 41, "refer": [41, 42, 44, 45, 52, 347], "queri": [42, 211], "attent": [42, 44], "gqa": 42, "low": 43, "precis": 43, "int8": [43, 47, 49, 52, 371, 386, 398, 405], "bf16": [43, 372], "f16": 43, "dot": 44, "product": [44, 50, 302, 407], "sdpa": [44, 45], "compress": 45, "kei": 45, "valu": [45, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "best": 47, "practic": 47, "fp32": [47, 158], "aspect": 48, "propag": [48, 420], "kind": [48, 178, 190, 205], "workspac": 48, "process": [49, 160], "rang": 49, "factor": 49, "inner": [50, 302, 407], "inspect": [51, 445], "nuanc": 52, "mix": 52, "u8": [52, 367], "s8": 52, "avx2": 52, "avx": 52, "512": 52, "dl": 52, "boost": 52, "same": 52, "header": [54, 390, 395, 396, 397, 398, 399, 400, 401, 402, 439], "file": 54, "harden": 54, "local": [55, 414], "respons": [55, 414], "lrn": [55, 264, 305], "ab": 57, "oper": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 161, 166, 286], "absbackward": 58, "add": 59, "avgpool": 60, "avgpoolbackward": 61, "batchnormforwardtrain": 62, "batchnorminfer": 63, "batchnormtrainingbackward": 64, "biasadd": 65, "biasaddbackward": 66, "clamp": 67, "clampbackward": 68, "convolutionbackwarddata": 71, "convolutionbackwardweight": 72, "convtranspos": 73, "convtransposebackwarddata": 74, "convtransposebackwardweight": 75, "dequant": 76, "divid": 77, "dynamicdequant": 78, "dynamicquant": 79, "elu": 80, "elubackward": 81, "end": 82, "exp": 83, "gelu": 84, "gelubackward": 85, "genindex": 86, "greaterequ": 87, "groupnorm": 88, "hardsigmoid": 89, "hardsigmoidbackward": 90, "hardswish": 91, "hardswishbackward": 92, "interpol": 93, "interpolatebackward": 94, "layernorm": 95, "layernormbackward": 96, "leakyrelu": 97, "log": 98, "logsoftmax": 99, "logsoftmaxbackward": 100, "matmul": [101, 266, 380, 381, 382, 384, 387, 405, 418, 443, 520, 521], "maximum": 102, "maxpool": 103, "maxpoolbackward": 104, "minimum": 105, "mish": 106, "mishbackward": 107, "multipli": 108, "pow": 109, "broadcast": [110, 111, 125], "rule": [110, 111, 125], "prelubackward": 111, "reciproc": 113, "reducel1": 114, "reducel2": 115, "reducemax": 116, "reducemean": 117, "reducemin": 118, "reduceprod": 119, "reducesum": 120, "relubackward": 122, "sigmoid": 126, "sigmoidbackward": 127, "softmax": [128, 155, 276, 321, 435], "softmaxbackward": 129, "softplu": 130, "softplusbackward": 131, "sqrt": 132, "sqrtbackward": 133, "squar": 134, "squareddiffer": 135, "staticreshap": 136, "statictranspos": 137, "subtract": 138, "tanhbackward": 140, "typecast": 141, "wildcard": 142, "set": 144, "whole": 144, "machin": 144, "singl": [144, 399, 402], "numa": 144, "domain": 144, "sever": 144, "core": 144, "within": 144, "persist": 145, "descriptor": [145, 395], "pool": [146, 269, 309, 420, 422], "consumpt": 148, "profil": [148, 149, 165, 167, 314, 421, 445], "vtune": [149, 167], "itt": 149, "hotspot": 149, "microarchitectur": 149, "inform": [149, 160, 413], "perf": 149, "reduct": [150, 271, 315, 426, 543, 544], "resampl": [152, 273, 317, 430], "nearest": 152, "neighbor": 152, "bilinear": 152, "cell": 153, "vanilla": [153, 441], "lstm": [153, 265, 416], "peephol": 153, "project": 153, "lstmp": 153, "gru": [153, 411], "linear": [153, 411], "befor": [153, 411], "reset": [153, 411], "augru": [153, 229, 361], "consider": 153, "shuffl": [154, 275, 320, 433], "layout": [154, 164], "us": [157, 164], "base": 157, "bfp16": 158, "bfloat16": 159, "transit": 160, "mkl": 160, "dnn": 160, "summari": [160, 421], "chang": 160, "broken": 160, "compat": 160, "develop": [160, 347], "reduc": 162, "transform": [163, 328, 569], "understand": [164, 165], "nomenclatur": 164, "plain": 164, "nchw": 164, "nhwc": 164, "chwn": 164, "relev": 164, "read": 164, "stride": 164, "what": 164, "ar": 164, "8": 164, "16": 164, "troubleshoot": 165, "creation": [165, 166], "issu": 165, "workload": 165, "why": 165, "given": 165, "i": 165, "onednn_verbos": 165, "timestamp": 165, "decrypt": 165, "messag": 166, "catalogu": 166, "tm": 167, "enum": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "api_kind": 168, "accumulation_mod": 169, "dnnl_accumulation_mode_t": 170, "dnnl_alg_kind_t": 171, "cpu_isa": 173, "cpu_isa_hint": 174, "dnnl_cpu_isa_hints_t": 175, "dnnl_cpu_isa_t": 176, "dnnl_data_type_t": 177, "dnnl_engine_kind_t": 179, "dnnl_format_kind_t": 180, "dnnl_format_tag_t": 181, "fpmath_mod": 182, "dnnl_fpmath_mode_t": 183, "dnnl_graph_layout_type_t": 184, "data_typ": [185, 196], "layout_typ": 186, "property_typ": 187, "attr": 188, "dnnl_graph_op_attr_t": 189, "dnnl_graph_op_kind_t": 191, "polici": 192, "dnnl_graph_partition_policy_t": 193, "statu": [194, 222, 343], "dnnl_graph_tensor_property_t": 195, "format_kind": 197, "format_tag": 198, "sparse_encod": 199, "normalization_flag": 200, "dnnl_normalization_flags_t": 201, "ocl_interop": [202, 351, 353], "memory_kind": [202, 226], "dnnl_ocl_interop_memory_kind_t": 203, "dnnl_pack_type_t": 204, "dnnl_primitive_kind_t": 206, "profiling_data_kind": 207, "dnnl_profiling_data_kind_t": 208, "prop_kind": 209, "dnnl_prop_kind_t": 210, "dnnl_query_t": 212, "rnn_direct": 213, "dnnl_rnn_direction_t": 214, "rnn_flag": 215, "dnnl_rnn_flags_t": 216, "rounding_mod": 217, "dnnl_rounding_mode_t": 218, "scratchpad_mod": 219, "dnnl_scratchpad_mode_t": 220, "dnnl_sparse_encoding_t": 221, "dnnl_status_t": 223, "flag": 224, "dnnl_stream_flags_t": 225, "sycl_interop": [226, 352, 354], "dnnl_sycl_interop_memory_kind_t": 227, "ukernel": [228, 326, 327, 328, 329, 356, 378, 567, 568, 569, 583], "pack_typ": 228, "cpp": [229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "batch_norm": 230, "bnorm_u8_via_binary_postop": 232, "cnn_inference_f32": [233, 234], "cnn_inference_int8": 235, "cnn_training_bf16": 236, "cnn_training_f32": 237, "cpu_brgemm": 240, "cpu_cnn_training_f32": 241, "cpu_getting_start": 242, "cpu_inference_int8": 243, "cpu_matmul_coo": 244, "cpu_matmul_csr": 245, "cpu_matmul_quant": 246, "cpu_matmul_weights_compress": 247, "cpu_rnn_inference_f32": 248, "cpu_rnn_inference_int8": 249, "cpu_sgemm_and_matmul": 250, "cpu_single_op_partit": 251, "cross_engine_reord": [252, 253], "getting_start": 256, "gpu_opencl_getting_start": 257, "gpu_opencl_interop": 258, "group_norm": 259, "inference_int8_matmul": 260, "inner_product": 261, "layer_norm": 262, "lbr_gru": 263, "memory_format_propag": [267, 420], "performance_profil": 268, "rnn_training_f32": 274, "sycl_getting_start": 278, "sycl_interop_buff": 279, "sycl_single_op_partit": 280, "vanilla_rnn": 281, "weights_decompression_matmul": 282, "global": [283, 288, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 351, 352, 353, 354, 355], "namespac": [283, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359], "program": [285, 446], "macro": [296, 307, 313, 319, 339], "servic": 319, "brgemm": [327, 378, 568], "util": [329, 330, 346], "deep": 347, "neural": 347, "network": 347, "guid": 347, "threadpool_interop": [355, 564], "std": 358, "orphan": 360, "untitl": [362, 364, 366, 368, 375, 377, 383, 388, 392, 394, 404, 406, 408, 410, 412, 415, 417, 419, 423, 425, 427, 429, 431, 434, 436, 438, 442, 444], "bnorm": 367, "cnn": [369, 370, 371, 372, 373, 379], "f32": [369, 370, 373, 379, 385, 432], "tutori": [382, 387, 405, 420, 443], "comparison": 387, "sgemm": 387, "public": [390, 395, 396, 397, 398, 399, 400, 401, 402, 439], "cross_engine_reorder_tutori": 390, "wrap": [390, 395, 396, 439], "get": [390, 395, 396, 397, 398, 399, 400, 401, 402, 439], "result": [390, 395, 396, 420, 439], "all": 390, "element": 393, "wise": 393, "start": [395, 396, 397, 400, 401, 439], "getting_started_tutori": 395, "prepar": 395, "outsid": 395, "altern": 395, "wai": 395, "obtain": 395, "main": [395, 439], "gpu_opencl_interop_tutori": 396, "initi": [396, 420, 439], "custom": [396, 439], "cpu_getting_started_tutori": 397, "simple_pattern_int8": 398, "cpu_single_op_partition_tutori": 399, "ocl_getting_started_tutori": 400, "sycl_getting_started_tutori": 401, "sycl_single_op_partition_tutori": 402, "legal": 413, "trademark": 413, "determin": 420, "need": 420, "intermedi": 420, "necessari": 420, "walkthrough": 421, "naiv": 421, "fuse": 421, "notic": 421, "both": 439, "sycl_interop_buffer_tutori": 439, "todo": 440, "list": 440, "decompress": 443, "struct": [447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581], "args_t": 447, "cpu_deletor": 448, "augru_backward": [449, 450], "inherit": [449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573], "member": [449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573], "primitive_desc": [450, 452, 454, 456, 458, 461, 463, 465, 467, 469, 471, 473, 475, 477, 485, 487, 489, 491, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 527, 529, 533, 535, 541, 544, 546, 548, 550, 553, 555, 557, 559, 563, 571, 573], "augru_forward": [451, 452], "batch_normalization_backward": [453, 454], "batch_normalization_forward": [455, 456], "dnnl_brgemm": 459, "convolution_backward_data": [462, 463], "convolution_backward_weight": [464, 465], "convolution_forward": [466, 467], "deconvolution_backward_data": [468, 469], "deconvolution_backward_weight": [470, 471], "deconvolution_forward": [472, 473], "eltwise_backward": [474, 475], "eltwise_forward": [476, 477], "dnnl_engin": 478, "dnnl_exec_arg_t": 481, "field": [481, 482, 483, 564, 574], "dnnl_graph_inplace_pair_t": 482, "dnnl_graph_logical_tensor_t": 483, "group_normalization_backward": [484, 485], "group_normalization_forward": [486, 487], "gru_backward": [488, 489], "gru_forward": [490, 491], "templat": [492, 493], "handle_trait": 493, "inner_product_backward_data": [494, 495], "inner_product_backward_weight": [496, 497], "inner_product_forward": [498, 499], "layer_normalization_backward": [500, 501], "layer_normalization_forward": [502, 503], "lbr_augru_backward": [504, 505], "lbr_augru_forward": [506, 507], "lbr_gru_backward": [508, 509], "lbr_gru_forward": [510, 511], "lrn_backward": [512, 513], "lrn_forward": [514, 515], "lstm_backward": [516, 517], "lstm_forward": [518, 519], "dnnl_memori": 522, "dnnl_memory_desc": 524, "desc": 525, "pooling_backward": [526, 527], "pooling_forward": [528, 529], "dnnl_post_op": 530, "post_op": 531, "prelu_backward": [532, 533], "prelu_forward": [534, 535], "dnnl_primit": 536, "dnnl_primitive_attr": 538, "primitive_attr": 539, "dnnl_primitive_desc": 540, "primitive_desc_bas": 542, "resampling_backward": [547, 548], "resampling_forward": [549, 550], "rnn_primitive_desc_bas": 551, "shuffle_backward": [552, 553], "shuffle_forward": [554, 555], "softmax_backward": [556, 557], "softmax_forward": [558, 559], "dnnl_stream": 560, "threadpool_ifac": 564, "dnnl_transform": 565, "dnnl_ukernel_attr_param": 566, "attr_param": 567, "vanilla_rnn_backward": [570, 571], "vanilla_rnn_forward": [572, 573], "dnnl_version_t": 574, "example_allows_unimpl": 575, "gemm_dims_t": 576, "gqa_dims_t": 577, "mlp_dims_t": 578, "mqa_dims_t": 579, "sdpa_dims_t": 580, "sycl_deletor": 581}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Building and Linking": [[1, "building-and-linking"]], "Advanced Topics": [[0, "advanced-topics"]], "Primitive Attributes: dropout": [[13, "primitive-attributes-dropout"]], "Introduction": [[13, "introduction"], [19, "introduction"], [16, "introduction"], [37, "introduction"], [49, "introduction"], [159, "introduction"], [161, "introduction"], [164, "introduction"]], "Implementation": [[13, "implementation"]], "API": [[13, "api"], [16, "api"], [36, "api"], [25, "api"]], "Primitive Attributes: deterministic": [[12, "primitive-attributes-deterministic"]], "Primitive Attributes": [[10, "primitive-attributes"]], "Attributes Usage": [[10, "attributes-usage"]], "Supported Attributes": [[10, "supported-attributes"]], "Attribute Related Error Handling": [[10, "attribute-related-error-handling"]], "Primitive Attributes: accumulation mode": [[11, "primitive-attributes-accumulation-mode"]], "class dnnl::graph::allocator": [[2, "class-dnnl-graph-allocator"]], "Overview": [[2, "overview"], [3, "overview"], [8, "overview"], [42, "overview"], [33, "overview"], [40, "overview"], [41, "overview"], [44, "overview"], [45, "overview"], [4, "overview"], [5, "overview"], [6, "overview"], [7, "overview"], [143, "overview"], [169, "overview"], [170, "overview"], [171, "overview"], [173, "overview"], [172, "overview"], [175, "overview"], [174, "overview"], [177, "overview"], [176, "overview"], [178, "overview"], [179, "overview"], [181, "overview"], [180, "overview"], [182, "overview"], [183, "overview"], [184, "overview"], [185, "overview"], [187, "overview"], [186, "overview"], [189, "overview"], [188, "overview"], [192, "overview"], [193, "overview"], [195, "overview"], [194, "overview"], [196, "overview"], [197, "overview"], [199, "overview"], [198, "overview"], [201, "overview"], [200, "overview"], [202, "overview"], [203, "overview"], [205, "overview"], [204, "overview"], [207, "overview"], [206, "overview"], [209, "overview"], [208, "overview"], [210, "overview"], [211, "overview"], [213, "overview"], [212, "overview"], [215, "overview"], [214, "overview"], [217, "overview"], [216, "overview"], [218, "overview"], [219, "overview"], [220, "overview"], [221, "overview"], [222, "overview"], [223, "overview"], [225, "overview"], [224, "overview"], [227, "overview"], [226, "overview"], [228, "overview"], [283, "overview"], [288, "overview"], [289, "overview"], [291, "overview"], [290, "overview"], [292, "overview"], [295, "overview"], [294, "overview"], [297, "overview"], [296, "overview"], [299, "overview"], [298, "overview"], [300, "overview"], [301, "overview"], [302, "overview"], [305, "overview"], [304, "overview"], [306, "overview"], [307, "overview"], [309, "overview"], [308, "overview"], [310, "overview"], [311, "overview"], [313, "overview"], [312, "overview"], [315, "overview"], [314, "overview"], [317, "overview"], [316, "overview"], [319, "overview"], [318, "overview"], [320, "overview"], [321, "overview"], [322, "overview"], [323, "overview"], [324, "overview"], [325, "overview"], [326, "overview"], [327, "overview"], [333, "overview"], [332, "overview"], [335, "overview"], [334, "overview"], [336, "overview"], [337, "overview"], [339, "overview"], [341, "overview"], [340, "overview"], [342, "overview"], [344, "overview"], [345, "overview"], [351, "overview"], [352, "overview"], [353, "overview"], [354, "overview"], [355, "overview"], [357, "overview"], [449, "overview"], [451, "overview"], [450, "overview"], [452, "overview"], [453, "overview"], [454, "overview"], [455, "overview"], [457, "overview"], [456, "overview"], [458, "overview"], [461, "overview"], [460, "overview"], [463, "overview"], [462, "overview"], [465, "overview"], [464, "overview"], [467, "overview"], [466, "overview"], [468, "overview"], [469, "overview"], [471, "overview"], [470, "overview"], [473, "overview"], [472, "overview"], [475, "overview"], [474, "overview"], [476, "overview"], [477, "overview"], [479, "overview"], [481, "overview"], [480, "overview"], [482, "overview"], [483, "overview"], [485, "overview"], [484, "overview"], [486, "overview"], [487, "overview"], [488, "overview"], [489, "overview"], [490, "overview"], [491, "overview"], [492, "overview"], [495, "overview"], [494, "overview"], [497, "overview"], [496, "overview"], [499, "overview"], [498, "overview"], [500, "overview"], [501, "overview"], [502, "overview"], [503, "overview"], [505, "overview"], [504, "overview"], [506, "overview"], [507, "overview"], [509, "overview"], [508, "overview"], [510, "overview"], [511, "overview"], [512, "overview"], [513, "overview"], [515, "overview"], [514, "overview"], [517, "overview"], [516, "overview"], [518, "overview"], [519, "overview"], [520, "overview"], [521, "overview"], [523, "overview"], [525, "overview"], [526, "overview"], [527, "overview"], [528, "overview"], [529, "overview"], [531, "overview"], [530, "overview"], [533, "overview"], [532, "overview"], [535, "overview"], [534, "overview"], [537, "overview"], [539, "overview"], [538, "overview"], [541, "overview"], [542, "overview"], [543, "overview"], [544, "overview"], [545, "overview"], [547, "overview"], [546, "overview"], [548, "overview"], [549, "overview"], [550, "overview"], [551, "overview"], [553, "overview"], [552, "overview"], [555, "overview"], [554, "overview"], [557, "overview"], [556, "overview"], [559, "overview"], [558, "overview"], [561, "overview"], [563, "overview"], [562, "overview"], [564, "overview"], [567, "overview"], [569, "overview"], [568, "overview"], [570, "overview"], [571, "overview"], [572, "overview"], [573, "overview"], [574, "overview"]], "Detailed Documentation": [[2, "detailed-documentation"], [3, "detailed-documentation"], [8, "detailed-documentation"], [4, "detailed-documentation"], [5, "detailed-documentation"], [6, "detailed-documentation"], [7, "detailed-documentation"], [169, "detailed-documentation"], [170, "detailed-documentation"], [171, "detailed-documentation"], [173, "detailed-documentation"], [172, "detailed-documentation"], [175, "detailed-documentation"], [174, "detailed-documentation"], [177, "detailed-documentation"], [176, "detailed-documentation"], [178, "detailed-documentation"], [179, "detailed-documentation"], [181, "detailed-documentation"], [180, "detailed-documentation"], [182, "detailed-documentation"], [183, "detailed-documentation"], [184, "detailed-documentation"], [185, "detailed-documentation"], [187, "detailed-documentation"], [186, "detailed-documentation"], [189, "detailed-documentation"], [188, "detailed-documentation"], [192, "detailed-documentation"], [193, "detailed-documentation"], [195, "detailed-documentation"], [194, "detailed-documentation"], [196, "detailed-documentation"], [197, "detailed-documentation"], [199, "detailed-documentation"], [198, "detailed-documentation"], [201, "detailed-documentation"], [200, "detailed-documentation"], [202, "detailed-documentation"], [203, "detailed-documentation"], [205, "detailed-documentation"], [204, "detailed-documentation"], [207, "detailed-documentation"], [206, "detailed-documentation"], [209, "detailed-documentation"], [208, "detailed-documentation"], [210, "detailed-documentation"], [211, "detailed-documentation"], [213, "detailed-documentation"], [212, "detailed-documentation"], [215, "detailed-documentation"], [214, "detailed-documentation"], [217, "detailed-documentation"], [216, "detailed-documentation"], [218, "detailed-documentation"], [219, "detailed-documentation"], [220, "detailed-documentation"], [221, "detailed-documentation"], [222, "detailed-documentation"], [223, "detailed-documentation"], [225, "detailed-documentation"], [224, "detailed-documentation"], [227, "detailed-documentation"], [226, "detailed-documentation"], [228, "detailed-documentation"], [283, "detailed-documentation"], [288, "detailed-documentation"], [289, "detailed-documentation"], [291, "detailed-documentation"], [290, "detailed-documentation"], [292, "detailed-documentation"], [295, "detailed-documentation"], [294, "detailed-documentation"], [297, "detailed-documentation"], [296, "detailed-documentation"], [299, "detailed-documentation"], [298, "detailed-documentation"], [300, "detailed-documentation"], [301, "detailed-documentation"], [302, "detailed-documentation"], [305, "detailed-documentation"], [304, "detailed-documentation"], [306, "detailed-documentation"], [307, "detailed-documentation"], [309, "detailed-documentation"], [308, "detailed-documentation"], [310, "detailed-documentation"], [311, "detailed-documentation"], [313, "detailed-documentation"], [312, "detailed-documentation"], [315, "detailed-documentation"], [314, "detailed-documentation"], [317, "detailed-documentation"], [316, "detailed-documentation"], [319, "detailed-documentation"], [318, "detailed-documentation"], [320, "detailed-documentation"], [321, "detailed-documentation"], [322, "detailed-documentation"], [323, "detailed-documentation"], [324, "detailed-documentation"], [325, "detailed-documentation"], [326, "detailed-documentation"], [327, "detailed-documentation"], [333, "detailed-documentation"], [332, "detailed-documentation"], [335, "detailed-documentation"], [334, "detailed-documentation"], [336, "detailed-documentation"], [337, "detailed-documentation"], [339, "detailed-documentation"], [341, "detailed-documentation"], [340, "detailed-documentation"], [342, "detailed-documentation"], [344, "detailed-documentation"], [345, "detailed-documentation"], [351, "detailed-documentation"], [352, "detailed-documentation"], [353, "detailed-documentation"], [354, "detailed-documentation"], [355, "detailed-documentation"], [357, "detailed-documentation"], [449, "detailed-documentation"], [451, "detailed-documentation"], [450, "detailed-documentation"], [452, "detailed-documentation"], [453, "detailed-documentation"], [454, "detailed-documentation"], [455, "detailed-documentation"], [457, "detailed-documentation"], [456, "detailed-documentation"], [458, "detailed-documentation"], [461, "detailed-documentation"], [460, "detailed-documentation"], [463, "detailed-documentation"], [462, "detailed-documentation"], [465, "detailed-documentation"], [464, "detailed-documentation"], [467, "detailed-documentation"], [466, "detailed-documentation"], [468, "detailed-documentation"], [469, "detailed-documentation"], [471, "detailed-documentation"], [470, "detailed-documentation"], [473, "detailed-documentation"], [472, "detailed-documentation"], [475, "detailed-documentation"], [474, "detailed-documentation"], [476, "detailed-documentation"], [477, "detailed-documentation"], [479, "detailed-documentation"], [481, "detailed-documentation"], [480, "detailed-documentation"], [482, "detailed-documentation"], [483, "detailed-documentation"], [485, "detailed-documentation"], [484, "detailed-documentation"], [486, "detailed-documentation"], [487, "detailed-documentation"], [488, "detailed-documentation"], [489, "detailed-documentation"], [490, "detailed-documentation"], [491, "detailed-documentation"], [492, "detailed-documentation"], [495, "detailed-documentation"], [494, "detailed-documentation"], [497, "detailed-documentation"], [496, "detailed-documentation"], [499, "detailed-documentation"], [498, "detailed-documentation"], [500, "detailed-documentation"], [501, "detailed-documentation"], [502, "detailed-documentation"], [503, "detailed-documentation"], [505, "detailed-documentation"], [504, "detailed-documentation"], [506, "detailed-documentation"], [507, "detailed-documentation"], [509, "detailed-documentation"], [508, "detailed-documentation"], [510, "detailed-documentation"], [511, "detailed-documentation"], [512, "detailed-documentation"], [513, "detailed-documentation"], [515, "detailed-documentation"], [514, "detailed-documentation"], [517, "detailed-documentation"], [516, "detailed-documentation"], [518, "detailed-documentation"], [519, "detailed-documentation"], [520, "detailed-documentation"], [521, "detailed-documentation"], [523, "detailed-documentation"], [525, "detailed-documentation"], [526, "detailed-documentation"], [527, "detailed-documentation"], [528, "detailed-documentation"], [529, "detailed-documentation"], [531, "detailed-documentation"], [530, "detailed-documentation"], [533, "detailed-documentation"], [532, "detailed-documentation"], [535, "detailed-documentation"], [534, "detailed-documentation"], [537, "detailed-documentation"], [539, "detailed-documentation"], [538, "detailed-documentation"], [541, "detailed-documentation"], [542, "detailed-documentation"], [543, "detailed-documentation"], [544, "detailed-documentation"], [545, "detailed-documentation"], [547, "detailed-documentation"], [546, "detailed-documentation"], [548, "detailed-documentation"], [549, "detailed-documentation"], [550, "detailed-documentation"], [551, "detailed-documentation"], [553, "detailed-documentation"], [552, "detailed-documentation"], [555, "detailed-documentation"], [554, "detailed-documentation"], [557, "detailed-documentation"], [556, "detailed-documentation"], [559, "detailed-documentation"], [558, "detailed-documentation"], [561, "detailed-documentation"], [563, "detailed-documentation"], [562, "detailed-documentation"], [564, "detailed-documentation"], [567, "detailed-documentation"], [569, "detailed-documentation"], [568, "detailed-documentation"], [570, "detailed-documentation"], [571, "detailed-documentation"], [572, "detailed-documentation"], [573, "detailed-documentation"], [574, "detailed-documentation"]], "Construction": [[2, "construction"], [3, "construction"], [8, "construction"], [4, "construction"], [5, "construction"], [6, "construction"], [7, "construction"], [449, "construction"], [451, "construction"], [450, "construction"], [452, "construction"], [453, "construction"], [454, "construction"], [455, "construction"], [457, "construction"], [456, "construction"], [458, "construction"], [461, "construction"], [460, "construction"], [463, "construction"], [462, "construction"], [465, "construction"], [464, "construction"], [467, "construction"], [466, "construction"], [468, "construction"], [469, "construction"], [471, "construction"], [470, "construction"], [473, "construction"], [472, "construction"], [475, "construction"], [474, "construction"], [476, "construction"], [477, "construction"], [479, "construction"], [480, "construction"], [485, "construction"], [484, "construction"], [486, "construction"], [487, "construction"], [488, "construction"], [489, "construction"], [490, "construction"], [491, "construction"], [492, "construction"], [495, "construction"], [494, "construction"], [497, "construction"], [496, "construction"], [499, "construction"], [498, "construction"], [500, "construction"], [501, "construction"], [502, "construction"], [503, "construction"], [505, "construction"], [504, "construction"], [506, "construction"], [507, "construction"], [509, "construction"], [508, "construction"], [510, "construction"], [511, "construction"], [512, "construction"], [513, "construction"], [515, "construction"], [514, "construction"], [517, "construction"], [516, "construction"], [518, "construction"], [519, "construction"], [520, "construction"], [521, "construction"], [523, "construction"], [525, "construction"], [526, "construction"], [527, "construction"], [528, "construction"], [529, "construction"], [531, "construction"], [533, "construction"], [532, "construction"], [535, "construction"], [534, "construction"], [537, "construction"], [539, "construction"], [543, "construction"], [544, "construction"], [545, "construction"], [547, "construction"], [546, "construction"], [548, "construction"], [549, "construction"], [550, "construction"], [551, "construction"], [553, "construction"], [552, "construction"], [555, "construction"], [554, "construction"], [557, "construction"], [556, "construction"], [559, "construction"], [558, "construction"], [561, "construction"], [563, "construction"], [562, "construction"], [569, "construction"], [568, "construction"], [570, "construction"], [571, "construction"], [572, "construction"], [573, "construction"]], "class dnnl::graph::compiled_partition": [[3, "class-dnnl-graph-compiled-partition"]], "Methods": [[3, "methods"], [8, "methods"], [4, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [450, "methods"], [452, "methods"], [454, "methods"], [456, "methods"], [458, "methods"], [461, "methods"], [463, "methods"], [465, "methods"], [467, "methods"], [469, "methods"], [471, "methods"], [473, "methods"], [475, "methods"], [477, "methods"], [479, "methods"], [480, "methods"], [485, "methods"], [487, "methods"], [489, "methods"], [491, "methods"], [492, "methods"], [495, "methods"], [497, "methods"], [499, "methods"], [501, "methods"], [503, "methods"], [505, "methods"], [507, "methods"], [509, "methods"], [511, "methods"], [513, "methods"], [515, "methods"], [517, "methods"], [519, "methods"], [521, "methods"], [523, "methods"], [525, "methods"], [527, "methods"], [529, "methods"], [531, "methods"], [533, "methods"], [535, "methods"], [537, "methods"], [539, "methods"], [541, "methods"], [542, "methods"], [544, "methods"], [545, "methods"], [546, "methods"], [548, "methods"], [550, "methods"], [551, "methods"], [553, "methods"], [555, "methods"], [557, "methods"], [559, "methods"], [561, "methods"], [563, "methods"], [564, "methods"], [567, "methods"], [569, "methods"], [568, "methods"], [571, "methods"], [573, "methods"]], "class dnnl::graph::tensor": [[8, "class-dnnl-graph-tensor"]], "class simple_memory_pool_t": [[9, "class-simple-memory-pool-t"]], "Primitive Attributes: Scratchpad": [[18, "primitive-attributes-scratchpad"]], "Scratchpad Memory Engine": [[18, "scratchpad-memory-engine"]], "Examples": [[18, "examples"], [22, "examples"], [41, "examples"], [20, "examples"], [35, "examples"], [46, "examples"], [56, "examples"], [163, "examples"], [162, "examples"]], "Library Manages Scratchpad": [[18, "library-manages-scratchpad"]], "User Manages Scratchpad": [[18, "user-manages-scratchpad"]], "Basic Concepts": [[19, "basic-concepts"], [37, "basic-concepts"], [161, "basic-concepts"]], "Primitives": [[19, "primitives"], [19, "id2"], [36, "primitives"], [312, "primitives"]], "Engines": [[19, "engines"]], "Streams": [[19, "streams"]], "Memory Objects": [[19, "memory-objects"], [19, "id1"]], "Levels of Abstraction": [[19, "levels-of-abstraction"]], "Creating Memory Objects and Primitives": [[19, "creating-memory-objects-and-primitives"]], "Graph Extension": [[19, "graph-extension"], [284, "graph-extension"]], "Micro-kernel Extension": [[19, "micro-kernel-extension"]], "Primitive Attributes: rounding mode": [[17, "primitive-attributes-rounding-mode"]], "Primitive Attributes: Quantization": [[16, "primitive-attributes-quantization"]], "Quantization Model": [[16, "quantization-model"]], "Numerical behavior": [[16, "numerical-behavior"]], "Example: Convolution Quantization Workflow": [[16, "example-convolution-quantization-workflow"]], "Per-Channel Scaling": [[16, "per-channel-scaling"]], "Argument Scaling": [[16, "argument-scaling"]], "Example 1: weights quantization with per-output-channel scaling": [[16, "example-1-weights-quantization-with-per-output-channel-scaling"]], "Example 2: convolution with per-output-channel quantization": [[16, "example-2-convolution-with-per-output-channel-quantization"]], "Constant Tensor Cache": [[27, "constant-tensor-cache"], [335, "constant-tensor-cache"]], "Build-Time Controls": [[27, "build-time-controls"], [38, "build-time-controls"], [39, "build-time-controls"], [149, "build-time-controls"], [149, "id1"], [165, "build-time-controls"]], "Run-Time Controls": [[27, "run-time-controls"], [39, "run-time-controls"], [149, "run-time-controls"], [149, "id2"], [165, "run-time-controls"]], "Constant Tensor Cache Capacity Control API": [[27, "constant-tensor-cache-capacity-control-api"]], "Environment Variable": [[27, "environment-variable"]], "Concat": [[26, "concat"], [69, "concat"], [294, "concat"]], "General": [[26, "general"], [59, "general"], [58, "general"], [22, "general"], [20, "general"], [34, "general"], [46, "general"], [50, "general"], [55, "general"], [56, "general"], [57, "general"], [60, "general"], [61, "general"], [53, "general"], [63, "general"], [62, "general"], [29, "general"], [65, "general"], [64, "general"], [67, "general"], [66, "general"], [69, "general"], [68, "general"], [71, "general"], [70, "general"], [73, "general"], [72, "general"], [75, "general"], [74, "general"], [77, "general"], [76, "general"], [79, "general"], [78, "general"], [81, "general"], [80, "general"], [83, "general"], [82, "general"], [84, "general"], [85, "general"], [87, "general"], [86, "general"], [89, "general"], [88, "general"], [91, "general"], [90, "general"], [93, "general"], [92, "general"], [94, "general"], [95, "general"], [97, "general"], [96, "general"], [99, "general"], [98, "general"], [101, "general"], [100, "general"], [103, "general"], [102, "general"], [105, "general"], [104, "general"], [106, "general"], [107, "general"], [108, "general"], [109, "general"], [110, "general"], [111, "general"], [113, "general"], [112, "general"], [114, "general"], [115, "general"], [117, "general"], [116, "general"], [118, "general"], [119, "general"], [120, "general"], [121, "general"], [122, "general"], [123, "general"], [125, "general"], [124, "general"], [127, "general"], [126, "general"], [129, "general"], [128, "general"], [131, "general"], [130, "general"], [133, "general"], [132, "general"], [134, "general"], [135, "general"], [137, "general"], [136, "general"], [139, "general"], [138, "general"], [141, "general"], [140, "general"], [142, "general"], [146, "general"], [147, "general"], [151, "general"], [150, "general"], [153, "general"], [152, "general"], [154, "general"], [155, "general"], [156, "general"], [163, "general"], [162, "general"]], "Execution Arguments": [[26, "execution-arguments"], [22, "execution-arguments"], [20, "execution-arguments"], [34, "execution-arguments"], [46, "execution-arguments"], [50, "execution-arguments"], [55, "execution-arguments"], [56, "execution-arguments"], [53, "execution-arguments"], [29, "execution-arguments"], [87, "execution-arguments"], [86, "execution-arguments"], [146, "execution-arguments"], [147, "execution-arguments"], [151, "execution-arguments"], [150, "execution-arguments"], [153, "execution-arguments"], [152, "execution-arguments"], [154, "execution-arguments"], [155, "execution-arguments"], [156, "execution-arguments"]], "Implementation Details": [[26, "implementation-details"], [22, "implementation-details"], [20, "implementation-details"], [34, "implementation-details"], [46, "implementation-details"], [50, "implementation-details"], [55, "implementation-details"], [56, "implementation-details"], [53, "implementation-details"], [29, "implementation-details"], [146, "implementation-details"], [147, "implementation-details"], [151, "implementation-details"], [150, "implementation-details"], [153, "implementation-details"], [152, "implementation-details"], [155, "implementation-details"], [156, "implementation-details"]], "General Notes": [[26, "general-notes"], [22, "general-notes"], [20, "general-notes"], [34, "general-notes"], [46, "general-notes"], [50, "general-notes"], [55, "general-notes"], [56, "general-notes"], [53, "general-notes"], [29, "general-notes"], [146, "general-notes"], [147, "general-notes"], [151, "general-notes"], [150, "general-notes"], [152, "general-notes"], [155, "general-notes"], [156, "general-notes"]], "Data Types Support": [[26, "data-types-support"], [22, "data-types-support"], [151, "data-types-support"], [150, "data-types-support"], [156, "data-types-support"]], "Data Representation": [[26, "data-representation"], [22, "data-representation"], [20, "data-representation"], [34, "data-representation"], [46, "data-representation"], [50, "data-representation"], [55, "data-representation"], [56, "data-representation"], [53, "data-representation"], [29, "data-representation"], [146, "data-representation"], [147, "data-representation"], [151, "data-representation"], [150, "data-representation"], [153, "data-representation"], [155, "data-representation"], [156, "data-representation"], [163, "data-representation"], [162, "data-representation"]], "Post-Ops and Attributes": [[26, "post-ops-and-attributes"], [22, "post-ops-and-attributes"], [20, "post-ops-and-attributes"], [34, "post-ops-and-attributes"], [46, "post-ops-and-attributes"], [50, "post-ops-and-attributes"], [146, "post-ops-and-attributes"], [151, "post-ops-and-attributes"], [150, "post-ops-and-attributes"], [153, "post-ops-and-attributes"], [152, "post-ops-and-attributes"], [154, "post-ops-and-attributes"], [156, "post-ops-and-attributes"]], "Implementation Limitations": [[26, "implementation-limitations"], [42, "implementation-limitations"], [22, "implementation-limitations"], [45, "implementation-limitations"], [20, "implementation-limitations"], [34, "implementation-limitations"], [46, "implementation-limitations"], [50, "implementation-limitations"], [55, "implementation-limitations"], [56, "implementation-limitations"], [53, "implementation-limitations"], [29, "implementation-limitations"], [146, "implementation-limitations"], [147, "implementation-limitations"], [151, "implementation-limitations"], [150, "implementation-limitations"], [153, "implementation-limitations"], [152, "implementation-limitations"], [154, "implementation-limitations"], [155, "implementation-limitations"], [156, "implementation-limitations"]], "Performance Tips": [[26, "performance-tips"], [22, "performance-tips"], [20, "performance-tips"], [34, "performance-tips"], [46, "performance-tips"], [50, "performance-tips"], [55, "performance-tips"], [56, "performance-tips"], [53, "performance-tips"], [29, "performance-tips"], [146, "performance-tips"], [147, "performance-tips"], [151, "performance-tips"], [150, "performance-tips"], [152, "performance-tips"], [154, "performance-tips"], [155, "performance-tips"], [156, "performance-tips"]], "Example": [[26, "example"], [42, "example"], [44, "example"], [34, "example"], [49, "example"], [50, "example"], [55, "example"], [53, "example"], [29, "example"], [146, "example"], [147, "example"], [151, "example"], [150, "example"], [153, "example"], [152, "example"], [154, "example"], [155, "example"], [156, "example"], [159, "example"], [165, "example"]], "CPU Dispatcher Control": [[30, "cpu-dispatcher-control"]], "Build-time Controls": [[30, "build-time-controls"], [31, "build-time-controls"], [36, "build-time-controls"], [148, "build-time-controls"]], "Runtime Controls": [[30, "runtime-controls"]], "CPU ISA Hints": [[31, "cpu-isa-hints"]], "Run-time Controls": [[31, "run-time-controls"], [148, "run-time-controls"]], "Graph Compiler": [[38, "graph-compiler"]], "Codegen and JIT Options": [[38, "codegen-and-jit-options"]], "C": [[38, "c"]], "LLVM": [[38, "llvm"]], "Builtin": [[38, "builtin"]], "Environment Variables": [[38, "environment-variables"]], "Enable Tracing": [[38, "enable-tracing"]], "Switch Between Different Codegen Methods": [[38, "switch-between-different-codegen-methods"]], "Enable Code Dumping": [[38, "enable-code-dumping"]], "Graph Dump": [[39, "graph-dump"]], "Low Precision": [[43, "low-precision"]], "INT8": [[43, "int8"]], "BF16/F16": [[43, "bf16-f16"]], "Grouped Query Attention (GQA)": [[42, "grouped-query-attention-gqa"]], "GQA Pattern": [[42, "gqa-pattern"]], "Data Types": [[42, "data-types"], [32, "data-types"], [41, "data-types"], [44, "data-types"], [45, "data-types"], [50, "data-types"], [56, "data-types"], [29, "data-types"], [152, "data-types"], [154, "data-types"], [163, "data-types"], [162, "data-types"]], "References": [[42, "references"], [41, "references"], [44, "references"], [45, "references"], [52, "references"]], "Add": [[59, "add"]], "Operation attributes": [[59, "operation-attributes"], [58, "operation-attributes"], [57, "operation-attributes"], [60, "operation-attributes"], [61, "operation-attributes"], [63, "operation-attributes"], [62, "operation-attributes"], [65, "operation-attributes"], [64, "operation-attributes"], [67, "operation-attributes"], [66, "operation-attributes"], [69, "operation-attributes"], [68, "operation-attributes"], [71, "operation-attributes"], [70, "operation-attributes"], [73, "operation-attributes"], [72, "operation-attributes"], [75, "operation-attributes"], [74, "operation-attributes"], [77, "operation-attributes"], [76, "operation-attributes"], [79, "operation-attributes"], [78, "operation-attributes"], [81, "operation-attributes"], [80, "operation-attributes"], [83, "operation-attributes"], [82, "operation-attributes"], [84, "operation-attributes"], [85, "operation-attributes"], [89, "operation-attributes"], [88, "operation-attributes"], [91, "operation-attributes"], [90, "operation-attributes"], [93, "operation-attributes"], [92, "operation-attributes"], [94, "operation-attributes"], [95, "operation-attributes"], [97, "operation-attributes"], [96, "operation-attributes"], [99, "operation-attributes"], [98, "operation-attributes"], [101, "operation-attributes"], [100, "operation-attributes"], [103, "operation-attributes"], [102, "operation-attributes"], [105, "operation-attributes"], [104, "operation-attributes"], [106, "operation-attributes"], [107, "operation-attributes"], [108, "operation-attributes"], [109, "operation-attributes"], [110, "operation-attributes"], [111, "operation-attributes"], [113, "operation-attributes"], [112, "operation-attributes"], [114, "operation-attributes"], [115, "operation-attributes"], [117, "operation-attributes"], [116, "operation-attributes"], [118, "operation-attributes"], [119, "operation-attributes"], [120, "operation-attributes"], [121, "operation-attributes"], [122, "operation-attributes"], [123, "operation-attributes"], [125, "operation-attributes"], [124, "operation-attributes"], [127, "operation-attributes"], [126, "operation-attributes"], [129, "operation-attributes"], [128, "operation-attributes"], [131, "operation-attributes"], [130, "operation-attributes"], [133, "operation-attributes"], [132, "operation-attributes"], [134, "operation-attributes"], [135, "operation-attributes"], [137, "operation-attributes"], [136, "operation-attributes"], [139, "operation-attributes"], [138, "operation-attributes"], [141, "operation-attributes"], [140, "operation-attributes"], [142, "operation-attributes"]], "Execution arguments": [[59, "execution-arguments"], [58, "execution-arguments"], [57, "execution-arguments"], [60, "execution-arguments"], [61, "execution-arguments"], [63, "execution-arguments"], [62, "execution-arguments"], [65, "execution-arguments"], [64, "execution-arguments"], [67, "execution-arguments"], [66, "execution-arguments"], [69, "execution-arguments"], [68, "execution-arguments"], [71, "execution-arguments"], [70, "execution-arguments"], [73, "execution-arguments"], [72, "execution-arguments"], [75, "execution-arguments"], [74, "execution-arguments"], [77, "execution-arguments"], [76, "execution-arguments"], [79, "execution-arguments"], [78, "execution-arguments"], [81, "execution-arguments"], [80, "execution-arguments"], [83, "execution-arguments"], [82, "execution-arguments"], [84, "execution-arguments"], [85, "execution-arguments"], [89, "execution-arguments"], [88, "execution-arguments"], [91, "execution-arguments"], [90, "execution-arguments"], [93, "execution-arguments"], [92, "execution-arguments"], [94, "execution-arguments"], [95, "execution-arguments"], [97, "execution-arguments"], [96, "execution-arguments"], [99, "execution-arguments"], [98, "execution-arguments"], [101, "execution-arguments"], [100, "execution-arguments"], [103, "execution-arguments"], [102, "execution-arguments"], [105, "execution-arguments"], [104, "execution-arguments"], [106, "execution-arguments"], [107, "execution-arguments"], [108, "execution-arguments"], [110, "execution-arguments"], [111, "execution-arguments"], [113, "execution-arguments"], [112, "execution-arguments"], [114, "execution-arguments"], [115, "execution-arguments"], [117, "execution-arguments"], [116, "execution-arguments"], [118, "execution-arguments"], [119, "execution-arguments"], [120, "execution-arguments"], [121, "execution-arguments"], [122, "execution-arguments"], [123, "execution-arguments"], [125, "execution-arguments"], [124, "execution-arguments"], [127, "execution-arguments"], [126, "execution-arguments"], [129, "execution-arguments"], [128, "execution-arguments"], [131, "execution-arguments"], [130, "execution-arguments"], [133, "execution-arguments"], [132, "execution-arguments"], [134, "execution-arguments"], [135, "execution-arguments"], [137, "execution-arguments"], [136, "execution-arguments"], [139, "execution-arguments"], [138, "execution-arguments"], [141, "execution-arguments"], [140, "execution-arguments"], [142, "execution-arguments"]], "Inputs": [[59, "inputs"], [58, "inputs"], [57, "inputs"], [60, "inputs"], [61, "inputs"], [63, "inputs"], [62, "inputs"], [65, "inputs"], [64, "inputs"], [67, "inputs"], [66, "inputs"], [69, "inputs"], [68, "inputs"], [71, "inputs"], [70, "inputs"], [73, "inputs"], [72, "inputs"], [75, "inputs"], [74, "inputs"], [77, "inputs"], [76, "inputs"], [79, "inputs"], [78, "inputs"], [81, "inputs"], [80, "inputs"], [83, "inputs"], [82, "inputs"], [84, "inputs"], [85, "inputs"], [89, "inputs"], [88, "inputs"], [91, "inputs"], [90, "inputs"], [93, "inputs"], [92, "inputs"], [94, "inputs"], [95, "inputs"], [97, "inputs"], [96, "inputs"], [99, "inputs"], [98, "inputs"], [101, "inputs"], [100, "inputs"], [103, "inputs"], [102, "inputs"], [105, "inputs"], [104, "inputs"], [106, "inputs"], [107, "inputs"], [108, "inputs"], [109, "inputs"], [110, "inputs"], [111, "inputs"], [113, "inputs"], [112, "inputs"], [114, "inputs"], [115, "inputs"], [117, "inputs"], [116, "inputs"], [118, "inputs"], [119, "inputs"], [120, "inputs"], [121, "inputs"], [122, "inputs"], [123, "inputs"], [125, "inputs"], [124, "inputs"], [127, "inputs"], [126, "inputs"], [129, "inputs"], [128, "inputs"], [131, "inputs"], [130, "inputs"], [133, "inputs"], [132, "inputs"], [134, "inputs"], [135, "inputs"], [137, "inputs"], [136, "inputs"], [139, "inputs"], [138, "inputs"], [141, "inputs"], [140, "inputs"], [142, "inputs"]], "Outputs": [[59, "outputs"], [58, "outputs"], [57, "outputs"], [60, "outputs"], [61, "outputs"], [63, "outputs"], [62, "outputs"], [65, "outputs"], [64, "outputs"], [67, "outputs"], [66, "outputs"], [69, "outputs"], [68, "outputs"], [71, "outputs"], [70, "outputs"], [73, "outputs"], [72, "outputs"], [75, "outputs"], [74, "outputs"], [77, "outputs"], [76, "outputs"], [79, "outputs"], [78, "outputs"], [81, "outputs"], [80, "outputs"], [83, "outputs"], [82, "outputs"], [84, "outputs"], [85, "outputs"], [89, "outputs"], [88, "outputs"], [91, "outputs"], [90, "outputs"], [93, "outputs"], [92, "outputs"], [94, "outputs"], [95, "outputs"], [97, "outputs"], [96, "outputs"], [99, "outputs"], [98, "outputs"], [101, "outputs"], [100, "outputs"], [103, "outputs"], [102, "outputs"], [105, "outputs"], [104, "outputs"], [106, "outputs"], [107, "outputs"], [108, "outputs"], [109, "outputs"], [110, "outputs"], [111, "outputs"], [113, "outputs"], [112, "outputs"], [114, "outputs"], [115, "outputs"], [117, "outputs"], [116, "outputs"], [118, "outputs"], [119, "outputs"], [120, "outputs"], [121, "outputs"], [122, "outputs"], [123, "outputs"], [125, "outputs"], [124, "outputs"], [127, "outputs"], [126, "outputs"], [129, "outputs"], [128, "outputs"], [131, "outputs"], [130, "outputs"], [133, "outputs"], [132, "outputs"], [134, "outputs"], [135, "outputs"], [137, "outputs"], [136, "outputs"], [139, "outputs"], [138, "outputs"], [141, "outputs"], [140, "outputs"], [142, "outputs"]], "Supported data types": [[59, "supported-data-types"], [58, "supported-data-types"], [57, "supported-data-types"], [60, "supported-data-types"], [61, "supported-data-types"], [63, "supported-data-types"], [62, "supported-data-types"], [65, "supported-data-types"], [64, "supported-data-types"], [67, "supported-data-types"], [66, "supported-data-types"], [69, "supported-data-types"], [68, "supported-data-types"], [71, "supported-data-types"], [70, "supported-data-types"], [73, "supported-data-types"], [72, "supported-data-types"], [75, "supported-data-types"], [74, "supported-data-types"], [77, "supported-data-types"], [76, "supported-data-types"], [79, "supported-data-types"], [78, "supported-data-types"], [81, "supported-data-types"], [80, "supported-data-types"], [83, "supported-data-types"], [82, "supported-data-types"], [84, "supported-data-types"], [85, "supported-data-types"], [89, "supported-data-types"], [88, "supported-data-types"], [91, "supported-data-types"], [90, "supported-data-types"], [93, "supported-data-types"], [92, "supported-data-types"], [94, "supported-data-types"], [95, "supported-data-types"], [97, "supported-data-types"], [96, "supported-data-types"], [99, "supported-data-types"], [98, "supported-data-types"], [101, "supported-data-types"], [100, "supported-data-types"], [103, "supported-data-types"], [102, "supported-data-types"], [105, "supported-data-types"], [104, "supported-data-types"], [106, "supported-data-types"], [107, "supported-data-types"], [108, "supported-data-types"], [109, "supported-data-types"], [110, "supported-data-types"], [111, "supported-data-types"], [113, "supported-data-types"], [112, "supported-data-types"], [114, "supported-data-types"], [115, "supported-data-types"], [117, "supported-data-types"], [116, "supported-data-types"], [118, "supported-data-types"], [119, "supported-data-types"], [120, "supported-data-types"], [121, "supported-data-types"], [122, "supported-data-types"], [123, "supported-data-types"], [125, "supported-data-types"], [124, "supported-data-types"], [127, "supported-data-types"], [126, "supported-data-types"], [129, "supported-data-types"], [128, "supported-data-types"], [131, "supported-data-types"], [130, "supported-data-types"], [133, "supported-data-types"], [132, "supported-data-types"], [134, "supported-data-types"], [135, "supported-data-types"], [137, "supported-data-types"], [136, "supported-data-types"], [139, "supported-data-types"], [138, "supported-data-types"], [141, "supported-data-types"], [140, "supported-data-types"], [142, "supported-data-types"]], "AbsBackward": [[58, "absbackward"]], "Build from Source": [[23, "build-from-source"]], "Download the Source Code": [[23, "download-the-source-code"]], "Build the Library": [[23, "build-the-library"]], "Linux/macOS": [[23, "linux-macos"], [54, "linux-macos"]], "GCC, Clang, or Intel oneAPI DPC++/C++ Compiler": [[23, "gcc-clang-or-intel-oneapi-dpc-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL runtime": [[23, "intel-oneapi-dpc-c-compiler-with-sycl-runtime"]], "GCC targeting AArch64 on x64 host": [[23, "gcc-targeting-aarch64-on-x64-host"]], "GCC with Arm Compute Library (ACL) on AArch64 host": [[23, "gcc-with-arm-compute-library-acl-on-aarch64-host"]], "Windows": [[23, "windows"], [54, "windows"], [54, "id1"]], "Microsoft Visual C++ Compiler": [[23, "microsoft-visual-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL Runtime": [[23, "id1"]], "Validate the Build": [[23, "validate-the-build"]], "Build documentation": [[23, "build-documentation"]], "Install library": [[23, "install-library"]], "Binary": [[22, "binary"], [15, "binary"], [291, "binary"]], "Sources, Destination": [[22, "sources-destination"], [150, "sources-destination"], [156, "sources-destination"]], "Primitive Attributes: Post-ops": [[15, "primitive-attributes-post-ops"]], "Supported Post-ops": [[15, "supported-post-ops"]], "Eltwise Post-op": [[15, "eltwise-post-op"]], "Sum Post-op": [[15, "sum-post-op"]], "Depthwise Post-op": [[15, "depthwise-post-op"]], "Binary Post-op": [[15, "binary-post-op"]], "Prelu Post-op": [[15, "prelu-post-op"]], "Examples of Chained Post-ops": [[15, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[15, "sum-relu"]], "Tanh -> Sum -> ScaleShift": [[15, "tanh-sum-scaleshift"]], "Relu -> Depthwise -> Relu": [[15, "relu-depthwise-relu"]], "Primitive Attributes: floating-point math mode": [[14, "primitive-attributes-floating-point-math-mode"]], "The floating-point math mode attribute.": [[14, "the-floating-point-math-mode-attribute"]], "Enforcing the floating-point math mode to an integral primitive.": [[14, "enforcing-the-floating-point-math-mode-to-an-integral-primitive"]], "A note on the default floating-point math mode.": [[14, "a-note-on-the-default-floating-point-math-mode"]], "DPC++ Interoperability": [[33, "dpc-interoperability"]], "SYCL Buffers and DPC++ USM Interfaces for Memory Objects": [[33, "sycl-buffers-and-dpc-usm-interfaces-for-memory-objects"]], "Handling Dependencies with USM": [[33, "handling-dependencies-with-usm"]], "Inference and Training": [[32, "inference-and-training"]], "General numerical behavior of the oneDNN library": [[32, "general-numerical-behavior-of-the-onednn-library"]], "Rounding mode and denormal handling": [[32, "rounding-mode-and-denormal-handling"]], "Hardware Limitations": [[32, "hardware-limitations"]], "Intel(R) Architecture Processors": [[32, "intel-r-architecture-processors"]], "Intel(R) Processor Graphics and Xe Architecture graphics": [[32, "intel-r-processor-graphics-and-xe-architecture-graphics"]], "Logical Tensor": [[37, "logical-tensor"], [339, "logical-tensor"]], "Op": [[37, "op"], [341, "op"]], "Graph": [[37, "graph"], [337, "graph"]], "Partition": [[37, "partition"], [342, "partition"]], "Compiled Partition": [[37, "compiled-partition"], [333, "compiled-partition"]], "Tensor": [[37, "tensor"], [345, "tensor"]], "Experimental features": [[36, "experimental-features"], [36, "id1"]], "Features details": [[36, "features-details"]], "ONEDNN_EXPERIMENTAL_SPARSE": [[36, "onednn-experimental-sparse"]], "Matrix Multiplication": [[36, "matrix-multiplication"], [56, "matrix-multiplication"], [306, "matrix-multiplication"]], "CSR encoding": [[36, "csr-encoding"]], "COO encoding": [[36, "coo-encoding"]], "PACKED encoding": [[36, "packed-encoding"]], "Reorder": [[36, "reorder"], [123, "reorder"], [151, "reorder"], [316, "reorder"]], "Common Limitations": [[36, "common-limitations"]], "ONEDNN_EXPERIMENTAL_UKERNEL": [[36, "onednn-experimental-ukernel"]], "ONEDNN_EXPERIMENTAL_PROFILING": [[36, "onednn-experimental-profiling"]], "Limitations": [[36, "limitations"], [145, "limitations"]], "ONEDNN_EXPERIMENTAL_GRAPH_COMPILER_BACKEND": [[36, "onednn-experimental-graph-compiler-backend"]], "ONEDNN_EXPERIMENTAL_LOGGING": [[36, "onednn-experimental-logging"]], "Fusion Patterns": [[40, "fusion-patterns"]], "Inference": [[40, "inference"], [47, "inference"]], "Floating Point Patterns": [[40, "floating-point-patterns"]], "Quantized Patterns": [[40, "quantized-patterns"]], "Training": [[40, "training"], [158, "training"]], "Gated Multi-Layer Perceptron (Gated-MLP)": [[41, "gated-multi-layer-perceptron-gated-mlp"]], "Gated-MLP patterns": [[41, "gated-mlp-patterns"]], "Floating-point Gated-MLP": [[41, "floating-point-gated-mlp"]], "Implementation limitations": [[41, "implementation-limitations"], [44, "implementation-limitations"], [163, "implementation-limitations"], [162, "implementation-limitations"]], "Scaled Dot-Product Attention (SDPA)": [[44, "scaled-dot-product-attention-sdpa"]], "SDPA patterns": [[44, "sdpa-patterns"]], "Floating-point SDPA": [[44, "floating-point-sdpa"]], "SDPA with Compressed Key and Value": [[45, "sdpa-with-compressed-key-and-value"]], "SDPA Pattern": [[45, "sdpa-pattern"]], "Floating-point Math Mode": [[45, "floating-point-math-mode"], [300, "floating-point-math-mode"]], "Batch Normalization": [[20, "batch-normalization"], [290, "batch-normalization"]], "Forward": [[20, "forward"], [34, "forward"], [46, "forward"], [50, "forward"], [55, "forward"], [53, "forward"], [29, "forward"], [146, "forward"], [147, "forward"], [152, "forward"], [154, "forward"], [155, "forward"]], "Difference Between Forward Training and Forward Inference": [[20, "difference-between-forward-training-and-forward-inference"], [34, "difference-between-forward-training-and-forward-inference"], [46, "difference-between-forward-training-and-forward-inference"], [50, "difference-between-forward-training-and-forward-inference"], [53, "difference-between-forward-training-and-forward-inference"], [29, "difference-between-forward-training-and-forward-inference"], [146, "difference-between-forward-training-and-forward-inference"], [147, "difference-between-forward-training-and-forward-inference"], [152, "difference-between-forward-training-and-forward-inference"], [154, "difference-between-forward-training-and-forward-inference"], [155, "difference-between-forward-training-and-forward-inference"]], "Backward": [[20, "backward"], [34, "backward"], [46, "backward"], [50, "backward"], [55, "backward"], [53, "backward"], [29, "backward"], [146, "backward"], [147, "backward"], [152, "backward"], [154, "backward"], [155, "backward"]], "Data Type Support": [[20, "data-type-support"], [34, "data-type-support"], [46, "data-type-support"], [55, "data-type-support"], [53, "data-type-support"], [146, "data-type-support"], [147, "data-type-support"], [153, "data-type-support"], [155, "data-type-support"]], "Mean and Variance": [[20, "mean-and-variance"], [46, "mean-and-variance"], [53, "mean-and-variance"]], "Scale and Shift": [[20, "scale-and-shift"], [46, "scale-and-shift"], [53, "scale-and-shift"]], "Source, Destination, and Their Gradients": [[20, "source-destination-and-their-gradients"], [46, "source-destination-and-their-gradients"], [55, "source-destination-and-their-gradients"], [53, "source-destination-and-their-gradients"], [146, "source-destination-and-their-gradients"], [155, "source-destination-and-their-gradients"]], "Benchmarking Performance": [[21, "benchmarking-performance"]], "Input validation notes": [[25, "input-validation-notes"]], "Build Options": [[24, "build-options"]], "Common options": [[24, "common-options"]], "Host compiler": [[24, "host-compiler"]], "Configuring functionality": [[24, "configuring-functionality"]], "ONEDNN_ENABLE_WORKLOAD": [[24, "onednn-enable-workload"]], "ONEDNN_ENABLE_PRIMITIVE": [[24, "onednn-enable-primitive"]], "ONEDNN_ENABLE_PRIMITIVE_CPU_ISA": [[24, "onednn-enable-primitive-cpu-isa"]], "ONEDNN_ENABLE_PRIMITIVE_GPU_ISA": [[24, "onednn-enable-primitive-gpu-isa"]], "ONEDNN_ENABLE_GEMM_KERNELS_ISA": [[24, "onednn-enable-gemm-kernels-isa"]], "Configuring testing": [[24, "configuring-testing"]], "ONEDNN_TEST_SET": [[24, "onednn-test-set"]], "CPU Options": [[24, "cpu-options"]], "Targeting Specific Architecture": [[24, "targeting-specific-architecture"]], "Runtimes": [[24, "runtimes"], [24, "id1"]], "OpenMP": [[24, "openmp"]], "Threading Building Blocks (TBB)": [[24, "threading-building-blocks-tbb"]], "Threadpool": [[24, "threadpool"]], "AArch64 Options": [[24, "aarch64-options"]], "Arm Compute Library": [[24, "arm-compute-library"]], "Vendor BLAS libraries": [[24, "vendor-blas-libraries"]], "GPU Options": [[24, "gpu-options"]], "OpenCL*": [[24, "opencl"]], "Graph component limitations": [[24, "graph-component-limitations"]], "Graph Compiler Backend Limitations": [[24, "graph-compiler-backend-limitations"]], "Eltwise": [[34, "eltwise"], [298, "eltwise"]], "Exceptions": [[34, "exceptions"]], "Int8 Inference": [[49, "int8-inference"]], "Int8 Workflow": [[49, "int8-workflow"]], "Quantization Process": [[49, "quantization-process"]], "Range of the Data": [[49, "range-of-the-data"]], "Scaling Factor": [[49, "scaling-factor"]], "Quantization Example": [[49, "quantization-example"]], "int8 Support": [[49, "int8-support"]], "Attributes": [[49, "attributes"], [163, "attributes"], [162, "attributes"], [289, "attributes"]], "Inference and Training Aspects": [[48, "inference-and-training-aspects"]], "Propagation Kinds": [[48, "propagation-kinds"]], "Difference Between Forward Propagation on Training and Inference": [[48, "difference-between-forward-propagation-on-training-and-inference"]], "Different Backward Propagation Kinds": [[48, "different-backward-propagation-kinds"]], "Inference-Specific Aspects": [[48, "inference-specific-aspects"]], "Training-Specific Aspects": [[48, "training-specific-aspects"]], "Workspace": [[48, "workspace"]], "Best Practices for Inference": [[47, "best-practices-for-inference"]], "fp32 Inference": [[47, "fp32-inference"]], "int8 Inference": [[47, "int8-inference"]], "Group Normalization": [[46, "group-normalization"], [301, "group-normalization"]], "Inspecting JIT Code": [[51, "inspecting-jit-code"]], "Example (CPU)": [[51, "example-cpu"]], "Example (GPU)": [[51, "example-gpu"]], "Inner Product": [[50, "inner-product"], [302, "inner-product"]], "Linking to the Library": [[54, "linking-to-the-library"]], "Header Files": [[54, "header-files"]], "Libraries": [[54, "libraries"]], "Linux": [[54, "linux"]], "macOS": [[54, "macos"]], "Linking to oneDNN": [[54, "linking-to-onednn"]], "Support for macOS hardened runtime": [[54, "support-for-macos-hardened-runtime"]], "Local Response Normalization (LRN)": [[55, "local-response-normalization-lrn"]], "Post-ops and Attributes": [[55, "post-ops-and-attributes"], [53, "post-ops-and-attributes"], [29, "post-ops-and-attributes"], [155, "post-ops-and-attributes"]], "Attributes and Post-ops": [[56, "attributes-and-post-ops"]], "Matrix Multiplication Primitive Examples": [[56, "matrix-multiplication-primitive-examples"]], "Abs": [[57, "abs"]], "AvgPool": [[60, "avgpool"]], "AvgPoolBackward": [[61, "avgpoolbackward"]], "Layer Normalization": [[53, "layer-normalization"], [304, "layer-normalization"]], "Nuances of int8 Computations": [[52, "nuances-of-int8-computations"]], "CPU": [[52, "cpu"], [144, "cpu"]], "1. Inputs of mixed type: u8 and s8": [[52, "inputs-of-mixed-type-u8-and-s8"]], "1.1. Processors with the Intel AVX2 or Intel AVX-512 Support": [[52, "processors-with-the-intel-avx2-or-intel-avx-512-support"]], "1.2. Processors with the Intel DL Boost Support": [[52, "processors-with-the-intel-dl-boost-support"]], "2. Inputs of the same type: s8": [[52, "inputs-of-the-same-type-s8"]], "GPU": [[52, "gpu"]], "BatchNormInference": [[63, "batchnorminference"]], "BatchNormForwardTraining": [[62, "batchnormforwardtraining"]], "class dnnl::graph::graph": [[4, "class-dnnl-graph-graph"]], "class dnnl::graph::logical_tensor": [[5, "class-dnnl-graph-logical-tensor"]], "Typedefs": [[5, "typedefs"], [289, "typedefs"], [296, "typedefs"], [299, "typedefs"], [307, "typedefs"], [313, "typedefs"], [319, "typedefs"], [322, "typedefs"], [326, "typedefs"], [327, "typedefs"], [333, "typedefs"], [332, "typedefs"], [337, "typedefs"], [341, "typedefs"], [340, "typedefs"], [342, "typedefs"], [344, "typedefs"], [345, "typedefs"], [523, "typedefs"]], "class dnnl::graph::op": [[6, "class-dnnl-graph-op"]], "class dnnl::graph::partition": [[7, "class-dnnl-graph-partition"]], "Convolution": [[29, "convolution"], [70, "convolution"], [295, "convolution"]], "Regular Convolution": [[29, "regular-convolution"], [70, "regular-convolution"]], "Convolution with Groups": [[29, "convolution-with-groups"], [70, "convolution-with-groups"]], "Convolution with Dilation": [[29, "convolution-with-dilation"], [70, "convolution-with-dilation"]], "Deconvolution (Transposed Convolution)": [[29, "deconvolution-transposed-convolution"]], "Example 1": [[29, "example-1"]], "Example 2": [[29, "example-2"]], "Example 3": [[29, "example-3"]], "Algorithms": [[29, "algorithms"]], "Direct Algorithm": [[29, "direct-algorithm"]], "Winograd Convolution": [[29, "winograd-convolution"]], "Automatic Algorithm Selection": [[29, "automatic-algorithm-selection"]], "Naming Conventions": [[28, "naming-conventions"]], "Variable (Tensor) Names": [[28, "variable-tensor-names"]], "Formulas and Verbose Output": [[28, "formulas-and-verbose-output"]], "RNN-Specific Notation": [[28, "rnn-specific-notation"]], "Memory Formats Tags": [[28, "memory-formats-tags"]], "BiasAdd": [[65, "biasadd"]], "BatchNormTrainingBackward": [[64, "batchnormtrainingbackward"]], "Clamp": [[67, "clamp"]], "BiasAddBackward": [[66, "biasaddbackward"]], "ClampBackward": [[68, "clampbackward"]], "ConvolutionBackwardData": [[71, "convolutionbackwarddata"]], "ConvTranspose": [[73, "convtranspose"]], "ConvolutionBackwardWeights": [[72, "convolutionbackwardweights"]], "ConvTransposeBackwardWeights": [[75, "convtransposebackwardweights"]], "ConvTransposeBackwardData": [[74, "convtransposebackwarddata"]], "Divide": [[77, "divide"]], "Dequantize": [[76, "dequantize"]], "DynamicQuantize": [[79, "dynamicquantize"]], "DynamicDequantize": [[78, "dynamicdequantize"]], "EluBackward": [[81, "elubackward"]], "Elu": [[80, "elu"]], "Exp": [[83, "exp"]], "End": [[82, "end"]], "GELU": [[84, "gelu"]], "GELUBackward": [[85, "gelubackward"]], "GreaterEqual": [[87, "greaterequal"]], "Operation Attributes": [[87, "operation-attributes"], [86, "operation-attributes"]], "Input": [[87, "input"], [86, "input"]], "Output": [[87, "output"], [86, "output"]], "Supported Data Types": [[87, "supported-data-types"], [86, "supported-data-types"]], "GenIndex": [[86, "genindex"]], "HardSigmoid": [[89, "hardsigmoid"]], "GroupNorm": [[88, "groupnorm"]], "HardSwish": [[91, "hardswish"]], "HardSigmoidBackward": [[90, "hardsigmoidbackward"]], "Interpolate": [[93, "interpolate"]], "HardSwishBackward": [[92, "hardswishbackward"]], "InterpolateBackward": [[94, "interpolatebackward"]], "LayerNorm": [[95, "layernorm"]], "LeakyReLU": [[97, "leakyrelu"]], "LayerNormBackward": [[96, "layernormbackward"]], "LogSoftmax": [[99, "logsoftmax"]], "Log": [[98, "log"]], "MatMul": [[101, "matmul"]], "LogSoftmaxBackward": [[100, "logsoftmaxbackward"]], "MaxPool": [[103, "maxpool"]], "Maximum": [[102, "maximum"]], "Minimum": [[105, "minimum"]], "MaxPoolBackward": [[104, "maxpoolbackward"]], "Mish": [[106, "mish"]], "MishBackward": [[107, "mishbackward"]], "Multiply": [[108, "multiply"]], "Pow": [[109, "pow"]], "PReLU": [[110, "prelu"], [147, "prelu"], [310, "prelu"]], "Broadcasting Rules": [[110, "broadcasting-rules"], [111, "broadcasting-rules"]], "PReLUBackward": [[111, "prelubackward"]], "Reciprocal": [[113, "reciprocal"]], "Quantize": [[112, "quantize"]], "ReduceL1": [[114, "reducel1"]], "ReduceL2": [[115, "reducel2"]], "ReduceMean": [[117, "reducemean"]], "ReduceMax": [[116, "reducemax"]], "ReduceMin": [[118, "reducemin"]], "ReduceProd": [[119, "reduceprod"]], "ReduceSum": [[120, "reducesum"]], "ReLU": [[121, "relu"]], "ReLUBackward": [[122, "relubackward"]], "Select": [[125, "select"]], "Broadcasting rules": [[125, "broadcasting-rules"]], "Round": [[124, "round"]], "SigmoidBackward": [[127, "sigmoidbackward"]], "Sigmoid": [[126, "sigmoid"]], "SoftMaxBackward": [[129, "softmaxbackward"]], "SoftMax": [[128, "softmax"]], "SoftPlusBackward": [[131, "softplusbackward"]], "SoftPlus": [[130, "softplus"]], "SqrtBackward": [[133, "sqrtbackward"]], "Sqrt": [[132, "sqrt"]], "Square": [[134, "square"]], "SquaredDifference": [[135, "squareddifference"]], "StaticTranspose": [[137, "statictranspose"]], "StaticReshape": [[136, "staticreshape"]], "Tanh": [[139, "tanh"]], "Subtract": [[138, "subtract"]], "TypeCast": [[141, "typecast"]], "TanhBackward": [[140, "tanhbackward"]], "Wildcard": [[142, "wildcard"]], "OpenCL Interoperability": [[143, "opencl-interoperability"]], "OpenCL Buffers and USM Interfaces for Memory Objects": [[143, "opencl-buffers-and-usm-interfaces-for-memory-objects"]], "Handling Dependencies": [[143, "handling-dependencies"]], "Configuring oneDNN for Benchmarking": [[144, "configuring-onednn-for-benchmarking"]], "Threading Runtimes": [[144, "threading-runtimes"]], "Benchmarking Settings": [[144, "benchmarking-settings"]], "Whole Machine": [[144, "whole-machine"]], "Single NUMA Domain": [[144, "single-numa-domain"]], "Several Cores Within a NUMA Domain": [[144, "several-cores-within-a-numa-domain"]], "Persistent Cache": [[145, "persistent-cache"]], "Primitive": [[145, "primitive"]], "Relation to Primitive Cache": [[145, "relation-to-primitive-cache"]], "API Usage Example": [[145, "api-usage-example"], [145, "id1"]], "Engine": [[145, "engine"], [299, "engine"], [336, "engine"]], "Memory descriptor": [[145, "memory-descriptor"], [395, "memory-descriptor"]], "Pooling": [[146, "pooling"], [309, "pooling"]], "Profiling oneDNN Performance": [[149, "profiling-onednn-performance"]], "Features for VTune Profiler": [[149, "features-for-vtune-profiler"]], "ITT Tagging for Primitive Execution": [[149, "itt-tagging-for-primitive-execution"]], "Example: Profiling with VTune Profiler": [[149, "example-profiling-with-vtune-profiler"]], "Profiling for Hotspots": [[149, "profiling-for-hotspots"]], "Profiling for Microarchitecture Information": [[149, "profiling-for-microarchitecture-information"]], "Example: Profiling with Linux Perf": [[149, "example-profiling-with-linux-perf"]], "Primitive Cache": [[148, "primitive-cache"], [311, "primitive-cache"]], "Managing Memory Consumption": [[148, "managing-memory-consumption"]], "Profiling": [[148, "profiling"], [314, "profiling"]], "Reduction": [[150, "reduction"], [315, "reduction"]], "Notes": [[150, "notes"]], "RNN": [[153, "rnn"], [318, "rnn"]], "Cell Functions": [[153, "cell-functions"]], "Vanilla RNN": [[153, "vanilla-rnn"]], "LSTM": [[153, "lstm"]], "LSTM (or Vanilla LSTM)": [[153, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[153, "lstm-with-peephole"]], "LSTM with Projection (or LSTMP)": [[153, "lstm-with-projection-or-lstmp"]], "GRU": [[153, "gru"]], "Linear-Before-Reset GRU": [[153, "linear-before-reset-gru"]], "AUGRU": [[153, "augru"]], "Linear-Before-Reset AUGRU": [[153, "linear-before-reset-augru"]], "Considerations for Training": [[153, "considerations-for-training"]], "Resampling": [[152, "resampling"], [317, "resampling"]], "Nearest Neighbor Resampling": [[152, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[152, "bilinear-resampling"]], "Shuffle": [[154, "shuffle"], [320, "shuffle"]], "Data Layouts": [[154, "data-layouts"]], "Softmax": [[155, "softmax"], [321, "softmax"]], "Accumulation Mode": [[155, "accumulation-mode"], [288, "accumulation-mode"]], "Sum": [[156, "sum"], [323, "sum"]], "Using oneDNN with Threadpool-Based Threading": [[157, "using-onednn-with-threadpool-based-threading"]], "fp32 Training": [[158, "fp32-training"]], "bfp16 Training": [[158, "bfp16-training"]], "Bfloat16 Training": [[159, "bfloat16-training"]], "bfloat16 Support": [[159, "bfloat16-support"]], "bfloat16 Workflow": [[159, "bfloat16-workflow"]], "Memory representation": [[161, "memory-representation"]], "Operation representation": [[161, "operation-representation"]], "Transitioning from Intel MKL-DNN to oneDNN": [[160, "transitioning-from-intel-mkl-dnn-to-onednn"]], "Summary of Changes": [[160, "summary-of-changes"]], "Source Code Changes": [[160, "source-code-changes"]], "Build Process": [[160, "build-process"]], "Broken Compatibility with Intel MKL-DNN": [[160, "broken-compatibility-with-intel-mkl-dnn"]], "Information for Developers": [[160, "information-for-developers"]], "Data transformation": [[163, "data-transformation"]], "Batch-Reduce General Matrix Multiplication": [[162, "batch-reduce-general-matrix-multiplication"]], "Understanding Memory Formats": [[164, "understanding-memory-formats"]], "Nomenclature Used": [[164, "nomenclature-used"]], "Data Formats": [[164, "data-formats"]], "Plain Data Formats": [[164, "plain-data-formats"]], "NCHW": [[164, "nchw"]], "NHWC": [[164, "nhwc"]], "CHWN": [[164, "chwn"]], "Relevant Reading": [[164, "relevant-reading"]], "Generalization of the Plain Data Layout": [[164, "generalization-of-the-plain-data-layout"]], "Strides": [[164, "strides"]], "Blocked Layout": [[164, "blocked-layout"]], "What if Channels Are not Multiples of 8 (or 16)?": [[164, "what-if-channels-are-not-multiples-of-8-or-16"]], "Verbose Mode": [[165, "verbose-mode"]], "Troubleshooting primitive creation issues": [[165, "troubleshooting-primitive-creation-issues"]], "Profiling a workload": [[165, "profiling-a-workload"]], "Understanding why a given implementation is dispatched": [[165, "understanding-why-a-given-implementation-is-dispatched"]], "Enable ONEDNN_VERBOSE with timestamps": [[165, "enable-onednn-verbose-with-timestamps"]], "Decrypting the Output": [[165, "decrypting-the-output"]], "Profiling with VTune(TM) Profiler": [[167, "profiling-with-vtune-tm-profiler"]], "Verbose Message Catalogue": [[166, "verbose-message-catalogue"]], "Primitive Creation/Dispatching": [[166, "primitive-creation-dispatching"]], "Engine Creation": [[166, "engine-creation"]], "Memory Creation and Related Operations": [[166, "memory-creation-and-related-operations"]], "enum api_kind": [[168, "enum-api-kind"]], "enum dnnl::accumulation_mode": [[169, "enum-dnnl-accumulation-mode"]], "Enum Values": [[169, "enum-values"], [170, "enum-values"], [171, "enum-values"], [173, "enum-values"], [172, "enum-values"], [175, "enum-values"], [174, "enum-values"], [177, "enum-values"], [176, "enum-values"], [178, "enum-values"], [179, "enum-values"], [181, "enum-values"], [180, "enum-values"], [182, "enum-values"], [183, "enum-values"], [184, "enum-values"], [185, "enum-values"], [187, "enum-values"], [186, "enum-values"], [189, "enum-values"], [188, "enum-values"], [192, "enum-values"], [193, "enum-values"], [195, "enum-values"], [194, "enum-values"], [196, "enum-values"], [197, "enum-values"], [199, "enum-values"], [198, "enum-values"], [201, "enum-values"], [200, "enum-values"], [202, "enum-values"], [203, "enum-values"], [205, "enum-values"], [204, "enum-values"], [207, "enum-values"], [206, "enum-values"], [209, "enum-values"], [208, "enum-values"], [210, "enum-values"], [211, "enum-values"], [213, "enum-values"], [212, "enum-values"], [215, "enum-values"], [214, "enum-values"], [217, "enum-values"], [216, "enum-values"], [218, "enum-values"], [219, "enum-values"], [220, "enum-values"], [221, "enum-values"], [222, "enum-values"], [223, "enum-values"], [225, "enum-values"], [224, "enum-values"], [227, "enum-values"], [226, "enum-values"], [228, "enum-values"]], "enum dnnl_accumulation_mode_t": [[170, "enum-dnnl-accumulation-mode-t"]], "enum dnnl_alg_kind_t": [[171, "enum-dnnl-alg-kind-t"]], "enum dnnl::cpu_isa": [[173, "enum-dnnl-cpu-isa"]], "enum dnnl::algorithm": [[172, "enum-dnnl-algorithm"]], "enum dnnl_cpu_isa_hints_t": [[175, "enum-dnnl-cpu-isa-hints-t"]], "enum dnnl::cpu_isa_hints": [[174, "enum-dnnl-cpu-isa-hints"]], "enum dnnl_data_type_t": [[177, "enum-dnnl-data-type-t"]], "enum dnnl_cpu_isa_t": [[176, "enum-dnnl-cpu-isa-t"]], "enum dnnl::engine::kind": [[178, "enum-dnnl-engine-kind"]], "enum dnnl_engine_kind_t": [[179, "enum-dnnl-engine-kind-t"]], "enum dnnl_format_tag_t": [[181, "enum-dnnl-format-tag-t"]], "enum dnnl_format_kind_t": [[180, "enum-dnnl-format-kind-t"]], "enum dnnl::fpmath_mode": [[182, "enum-dnnl-fpmath-mode"]], "enum dnnl_fpmath_mode_t": [[183, "enum-dnnl-fpmath-mode-t"]], "enum dnnl_graph_layout_type_t": [[184, "enum-dnnl-graph-layout-type-t"]], "enum dnnl::graph::logical_tensor::data_type": [[185, "enum-dnnl-graph-logical-tensor-data-type"]], "enum dnnl::graph::logical_tensor::property_type": [[187, "enum-dnnl-graph-logical-tensor-property-type"]], "enum dnnl::graph::logical_tensor::layout_type": [[186, "enum-dnnl-graph-logical-tensor-layout-type"]], "enum dnnl_graph_op_attr_t": [[189, "enum-dnnl-graph-op-attr-t"]], "enum dnnl::graph::op::attr": [[188, "enum-dnnl-graph-op-attr"]], "enum dnnl_graph_op_kind_t": [[191, "enum-dnnl-graph-op-kind-t"]], "enum dnnl::graph::op::kind": [[190, "enum-dnnl-graph-op-kind"]], "enum dnnl::graph::partition::policy": [[192, "enum-dnnl-graph-partition-policy"]], "enum dnnl_graph_partition_policy_t": [[193, "enum-dnnl-graph-partition-policy-t"]], "enum dnnl_graph_tensor_property_t": [[195, "enum-dnnl-graph-tensor-property-t"]], "enum dnnl::graph::status": [[194, "enum-dnnl-graph-status"]], "enum dnnl::memory::data_type": [[196, "enum-dnnl-memory-data-type"]], "enum dnnl::memory::format_kind": [[197, "enum-dnnl-memory-format-kind"]], "enum dnnl::memory::sparse_encoding": [[199, "enum-dnnl-memory-sparse-encoding"]], "enum dnnl::memory::format_tag": [[198, "enum-dnnl-memory-format-tag"]], "enum dnnl_normalization_flags_t": [[201, "enum-dnnl-normalization-flags-t"]], "enum dnnl::normalization_flags": [[200, "enum-dnnl-normalization-flags"]], "enum dnnl::ocl_interop::memory_kind": [[202, "enum-dnnl-ocl-interop-memory-kind"]], "enum dnnl_ocl_interop_memory_kind_t": [[203, "enum-dnnl-ocl-interop-memory-kind-t"]], "enum dnnl::primitive::kind": [[205, "enum-dnnl-primitive-kind"]], "enum dnnl_pack_type_t": [[204, "enum-dnnl-pack-type-t"]], "enum dnnl::profiling_data_kind": [[207, "enum-dnnl-profiling-data-kind"]], "enum dnnl_primitive_kind_t": [[206, "enum-dnnl-primitive-kind-t"]], "enum dnnl::prop_kind": [[209, "enum-dnnl-prop-kind"]], "enum dnnl_profiling_data_kind_t": [[208, "enum-dnnl-profiling-data-kind-t"]], "enum dnnl_prop_kind_t": [[210, "enum-dnnl-prop-kind-t"]], "enum dnnl::query": [[211, "enum-dnnl-query"]], "enum dnnl::rnn_direction": [[213, "enum-dnnl-rnn-direction"]], "enum dnnl_query_t": [[212, "enum-dnnl-query-t"]], "enum dnnl::rnn_flags": [[215, "enum-dnnl-rnn-flags"]], "enum dnnl_rnn_direction_t": [[214, "enum-dnnl-rnn-direction-t"]], "enum dnnl::rounding_mode": [[217, "enum-dnnl-rounding-mode"]], "enum dnnl_rnn_flags_t": [[216, "enum-dnnl-rnn-flags-t"]], "enum dnnl_rounding_mode_t": [[218, "enum-dnnl-rounding-mode-t"]], "enum dnnl::scratchpad_mode": [[219, "enum-dnnl-scratchpad-mode"]], "enum dnnl_scratchpad_mode_t": [[220, "enum-dnnl-scratchpad-mode-t"]], "enum dnnl_sparse_encoding_t": [[221, "enum-dnnl-sparse-encoding-t"]], "enum dnnl::status": [[222, "enum-dnnl-status"]], "enum dnnl_status_t": [[223, "enum-dnnl-status-t"]], "enum dnnl_stream_flags_t": [[225, "enum-dnnl-stream-flags-t"]], "enum dnnl::stream::flags": [[224, "enum-dnnl-stream-flags"]], "enum dnnl_sycl_interop_memory_kind_t": [[227, "enum-dnnl-sycl-interop-memory-kind-t"]], "enum dnnl::sycl_interop::memory_kind": [[226, "enum-dnnl-sycl-interop-memory-kind"]], "augru.cpp": [[229, "augru-cpp"]], "enum dnnl::ukernel::pack_type": [[228, "enum-dnnl-ukernel-pack-type"]], "batch_normalization.cpp": [[230, "batch-normalization-cpp"]], "binary.cpp": [[231, "binary-cpp"]], "cnn_inference_f32.c": [[233, "cnn-inference-f32-c"]], "bnorm_u8_via_binary_postops.cpp": [[232, "bnorm-u8-via-binary-postops-cpp"]], "cnn_inference_int8.cpp": [[235, "cnn-inference-int8-cpp"]], "cnn_inference_f32.cpp": [[234, "cnn-inference-f32-cpp"]], "cnn_training_f32.cpp": [[237, "cnn-training-f32-cpp"]], "cnn_training_bf16.cpp": [[236, "cnn-training-bf16-cpp"]], "concat.cpp": [[238, "concat-cpp"]], "convolution.cpp": [[239, "convolution-cpp"]], "cpu_brgemm.cpp": [[240, "cpu-brgemm-cpp"]], "cpu_cnn_training_f32.c": [[241, "cpu-cnn-training-f32-c"]], "cpu_getting_started.cpp": [[242, "cpu-getting-started-cpp"]], "cpu_inference_int8.cpp": [[243, "cpu-inference-int8-cpp"]], "cpu_matmul_coo.cpp": [[244, "cpu-matmul-coo-cpp"]], "cpu_matmul_csr.cpp": [[245, "cpu-matmul-csr-cpp"]], "cpu_matmul_quantization.cpp": [[246, "cpu-matmul-quantization-cpp"]], "cpu_matmul_weights_compression.cpp": [[247, "cpu-matmul-weights-compression-cpp"]], "cpu_rnn_inference_f32.cpp": [[248, "cpu-rnn-inference-f32-cpp"]], "cpu_rnn_inference_int8.cpp": [[249, "cpu-rnn-inference-int8-cpp"]], "cpu_sgemm_and_matmul.cpp": [[250, "cpu-sgemm-and-matmul-cpp"]], "cpu_single_op_partition.cpp": [[251, "cpu-single-op-partition-cpp"]], "cross_engine_reorder.cpp": [[253, "cross-engine-reorder-cpp"]], "cross_engine_reorder.c": [[252, "cross-engine-reorder-c"]], "eltwise.cpp": [[255, "eltwise-cpp"]], "deconvolution.cpp": [[254, "deconvolution-cpp"]], "gpu_opencl_getting_started.cpp": [[257, "gpu-opencl-getting-started-cpp"]], "getting_started.cpp": [[256, "getting-started-cpp"]], "gpu_opencl_interop.cpp": [[258, "gpu-opencl-interop-cpp"]], "group_normalization.cpp": [[259, "group-normalization-cpp"]], "inference_int8_matmul.cpp": [[260, "inference-int8-matmul-cpp"]], "inner_product.cpp": [[261, "inner-product-cpp"]], "layer_normalization.cpp": [[262, "layer-normalization-cpp"]], "lbr_gru.cpp": [[263, "lbr-gru-cpp"]], "lstm.cpp": [[265, "lstm-cpp"]], "lrn.cpp": [[264, "lrn-cpp"]], "matmul.cpp": [[266, "matmul-cpp"]], "memory_format_propagation.cpp": [[267, "memory-format-propagation-cpp"]], "performance_profiling.cpp": [[268, "performance-profiling-cpp"]], "pooling.cpp": [[269, "pooling-cpp"]], "prelu.cpp": [[270, "prelu-cpp"]], "reduction.cpp": [[271, "reduction-cpp"]], "reorder.cpp": [[272, "reorder-cpp"]], "resampling.cpp": [[273, "resampling-cpp"]], "shuffle.cpp": [[275, "shuffle-cpp"]], "rnn_training_f32.cpp": [[274, "rnn-training-f32-cpp"]], "sum.cpp": [[277, "sum-cpp"]], "softmax.cpp": [[276, "softmax-cpp"]], "sycl_interop_buffer.cpp": [[279, "sycl-interop-buffer-cpp"]], "sycl_getting_started.cpp": [[278, "sycl-getting-started-cpp"]], "vanilla_rnn.cpp": [[281, "vanilla-rnn-cpp"]], "sycl_single_op_partition.cpp": [[280, "sycl-single-op-partition-cpp"]], "Global Namespace": [[283, "global-namespace"]], "Global Functions": [[283, "global-functions"], [288, "global-functions"], [289, "global-functions"], [291, "global-functions"], [290, "global-functions"], [292, "global-functions"], [295, "global-functions"], [294, "global-functions"], [297, "global-functions"], [299, "global-functions"], [298, "global-functions"], [300, "global-functions"], [301, "global-functions"], [302, "global-functions"], [305, "global-functions"], [304, "global-functions"], [306, "global-functions"], [307, "global-functions"], [309, "global-functions"], [308, "global-functions"], [310, "global-functions"], [311, "global-functions"], [313, "global-functions"], [315, "global-functions"], [314, "global-functions"], [317, "global-functions"], [316, "global-functions"], [319, "global-functions"], [318, "global-functions"], [320, "global-functions"], [321, "global-functions"], [322, "global-functions"], [323, "global-functions"], [324, "global-functions"], [325, "global-functions"], [326, "global-functions"], [327, "global-functions"], [333, "global-functions"], [332, "global-functions"], [335, "global-functions"], [334, "global-functions"], [336, "global-functions"], [337, "global-functions"], [339, "global-functions"], [341, "global-functions"], [340, "global-functions"], [342, "global-functions"], [344, "global-functions"], [345, "global-functions"], [351, "global-functions"], [352, "global-functions"], [353, "global-functions"], [354, "global-functions"], [355, "global-functions"]], "weights_decompression_matmul.cpp": [[282, "weights-decompression-matmul-cpp"]], "Programming Model": [[285, "programming-model"], [446, "programming-model"]], "Supported Operations": [[286, "supported-operations"]], "oneDNN API": [[287, "onednn-api"]], "Common API": [[293, "common-api"]], "BLAS functions": [[292, "blas-functions"]], "Deconvolution": [[297, "deconvolution"]], "Data types": [[296, "data-types"]], "Macros": [[296, "macros"], [307, "macros"], [313, "macros"], [319, "macros"], [339, "macros"]], "Runtime interoperability API": [[303, "runtime-interoperability-api"], [338, "runtime-interoperability-api"]], "LRN": [[305, "lrn"]], "Memory": [[307, "memory"]], "OpenCL interoperability API": [[308, "opencl-interoperability-api"], [340, "opencl-interoperability-api"]], "Common": [[313, "common"]], "Service": [[319, "service"]], "Stream": [[322, "stream"]], "SYCL interoperability API": [[324, "sycl-interoperability-api"], [344, "sycl-interoperability-api"]], "Threadpool interoperability API": [[325, "threadpool-interoperability-api"]], "Ukernels": [[326, "ukernels"], [583, "ukernels"]], "BRGeMM ukernel": [[327, "brgemm-ukernel"]], "Transform ukernel": [[328, "transform-ukernel"]], "ukernel utils": [[329, "ukernel-utils"]], "Utilities": [[330, "utilities"], [346, "utilities"]], "Graph API": [[331, "graph-api"]], "Allocator": [[332, "allocator"]], "Compiled Partition Cache": [[334, "compiled-partition-cache"]], "Status": [[343, "status"]], "oneAPI Deep Neural Network Library Developer Guide and Reference": [[347, "oneapi-deep-neural-network-library-developer-guide-and-reference"]], "namespace dnnl": [[349, "namespace-dnnl"]], "Interoperability with DPC++ and OpenCL": [[348, "interoperability-with-dpc-and-opencl"]], "namespace dnnl::graph::ocl_interop": [[351, "namespace-dnnl-graph-ocl-interop"]], "namespace dnnl::graph": [[350, "namespace-dnnl-graph"]], "namespace dnnl::graph::sycl_interop": [[352, "namespace-dnnl-graph-sycl-interop"]], "namespace dnnl::ocl_interop": [[353, "namespace-dnnl-ocl-interop"]], "namespace dnnl::sycl_interop": [[354, "namespace-dnnl-sycl-interop"]], "namespace dnnl::threadpool_interop": [[355, "namespace-dnnl-threadpool-interop"]], "namespace oneapi": [[357, "namespace-oneapi"]], "namespace dnnl::ukernel": [[356, "namespace-dnnl-ukernel"]], "namespace std": [[358, "namespace-std"]], "namespace sycl": [[359, "namespace-sycl"]], "AUGRU RNN Primitive Example": [[361, "augru-rnn-primitive-example"]], "Orphans": [[360, "orphans"]], "<Untitled>": [[362, "untitled"], [364, "untitled"], [366, "untitled"], [368, "untitled"], [375, "untitled"], [377, "untitled"], [383, "untitled"], [388, "untitled"], [392, "untitled"], [394, "untitled"], [404, "untitled"], [406, "untitled"], [408, "untitled"], [410, "untitled"], [412, "untitled"], [415, "untitled"], [417, "untitled"], [419, "untitled"], [423, "untitled"], [425, "untitled"], [427, "untitled"], [429, "untitled"], [431, "untitled"], [434, "untitled"], [436, "untitled"], [438, "untitled"], [442, "untitled"], [444, "untitled"]], "Batch Normalization Primitive Example": [[363, "batch-normalization-primitive-example"]], "Binary Primitive Example": [[365, "binary-primitive-example"]], "Bnorm u8 by binary post-ops example": [[367, "bnorm-u8-by-binary-post-ops-example"]], "CNN f32 inference example": [[369, "cnn-f32-inference-example"], [370, "cnn-f32-inference-example"]], "CNN int8 inference example": [[371, "cnn-int8-inference-example"]], "CNN f32 training example": [[373, "cnn-f32-training-example"], [379, "cnn-f32-training-example"]], "CNN bf16 training example": [[372, "cnn-bf16-training-example"]], "Concat Primitive Example": [[374, "concat-primitive-example"]], "Convolution Primitive Example": [[376, "convolution-primitive-example"]], "BRGeMM ukernel example": [[378, "brgemm-ukernel-example"]], "MatMul Primitive Example": [[380, "matmul-primitive-example"], [381, "matmul-primitive-example"], [384, "matmul-primitive-example"]], "MatMul Tutorial: Quantization": [[382, "matmul-tutorial-quantization"]], "RNN f32 inference example": [[385, "rnn-f32-inference-example"]], "MatMul Tutorial: Comparison with SGEMM": [[387, "matmul-tutorial-comparison-with-sgemm"]], "RNN int8 inference example": [[386, "rnn-int8-inference-example"]], "Reorder between CPU and GPU engines": [[389, "reorder-between-cpu-and-gpu-engines"], [390, "reorder-between-cpu-and-gpu-engines"]], "Deconvolution Primitive Example": [[391, "deconvolution-primitive-example"]], "Public headers": [[390, "public-headers"], [395, "public-headers"], [396, "public-headers"], [397, "public-headers"], [399, "public-headers"], [398, "public-headers"], [401, "public-headers"], [400, "public-headers"], [402, "public-headers"], [439, "public-headers"]], "cross_engine_reorder_tutorial() function": [[390, "cross-engine-reorder-tutorial-function"]], "Engine and stream": [[390, "engine-and-stream"], [395, "engine-and-stream"], [396, "engine-and-stream"], [439, "engine-and-stream"]], "Wrapping data into oneDNN GPU memory object": [[390, "wrapping-data-into-onednn-gpu-memory-object"]], "Creating a ReLU primitive": [[390, "creating-a-relu-primitive"], [395, "creating-a-relu-primitive"]], "Getting results from a oneDNN GPU memory object": [[390, "getting-results-from-a-onednn-gpu-memory-object"]], "Executing all primitives": [[390, "executing-all-primitives"]], "Validate the result": [[390, "validate-the-result"]], "Element-Wise Primitive Example": [[393, "element-wise-primitive-example"]], "Getting started": [[395, "getting-started"]], "getting_started_tutorial() function": [[395, "getting-started-tutorial-function"]], "Data preparation (code outside of oneDNN)": [[395, "data-preparation-code-outside-of-onednn"]], "Wrapping data into a oneDNN memory object": [[395, "wrapping-data-into-a-onednn-memory-object"]], "Alternative way to create a memory descriptor": [[395, "alternative-way-to-create-a-memory-descriptor"]], "Creating a memory object": [[395, "creating-a-memory-object"]], "Executing the ReLU primitive": [[395, "executing-the-relu-primitive"]], "Obtaining the result and validation": [[395, "obtaining-the-result-and-validation"]], "main() function": [[395, "main-function"], [439, "main-function"]], "Getting started on GPU with OpenCL extensions API": [[396, "getting-started-on-gpu-with-opencl-extensions-api"]], "gpu_opencl_interop_tutorial() function": [[396, "gpu-opencl-interop-tutorial-function"]], "Wrapping data into oneDNN memory object": [[396, "wrapping-data-into-onednn-memory-object"], [439, "wrapping-data-into-onednn-memory-object"]], "Initialize the data by executing a custom OpenCL kernel": [[396, "initialize-the-data-by-executing-a-custom-opencl-kernel"]], "Create and execute a primitive": [[396, "create-and-execute-a-primitive"], [439, "create-and-execute-a-primitive"]], "Validate the results": [[396, "validate-the-results"], [439, "validate-the-results"]], "Getting started on CPU with Graph API": [[397, "getting-started-on-cpu-with-graph-api"]], "cpu_getting_started_tutorial() function": [[397, "cpu-getting-started-tutorial-function"]], "Build Graph and Get Partitions": [[397, "build-graph-and-get-partitions"], [399, "build-graph-and-get-partitions"], [398, "build-graph-and-get-partitions"], [402, "build-graph-and-get-partitions"]], "Compile and Execute Partition": [[397, "compile-and-execute-partition"], [399, "compile-and-execute-partition"], [398, "compile-and-execute-partition"], [401, "compile-and-execute-partition"], [400, "compile-and-execute-partition"], [402, "compile-and-execute-partition"]], "Single op partition on CPU": [[399, "single-op-partition-on-cpu"]], "cpu_single_op_partition_tutorial() function": [[399, "cpu-single-op-partition-tutorial-function"]], "Convolution int8 inference example with Graph API": [[398, "convolution-int8-inference-example-with-graph-api"]], "simple_pattern_int8() function": [[398, "simple-pattern-int8-function"]], "Getting started with SYCL extensions API and Graph API": [[401, "getting-started-with-sycl-extensions-api-and-graph-api"]], "sycl_getting_started_tutorial() function": [[401, "sycl-getting-started-tutorial-function"]], "Build Graph and Get Partitions.": [[401, "build-graph-and-get-partitions"], [400, "build-graph-and-get-partitions"]], "Getting started with OpenCL extensions and Graph API": [[400, "getting-started-with-opencl-extensions-and-graph-api"]], "ocl_getting_started_tutorial() function": [[400, "ocl-getting-started-tutorial-function"]], "Single op partition on GPU": [[402, "single-op-partition-on-gpu"]], "sycl_single_op_partition_tutorial() function": [[402, "sycl-single-op-partition-tutorial-function"]], "Group Normalization Primitive Example": [[403, "group-normalization-primitive-example"]], "MatMul Tutorial: INT8 Inference": [[405, "matmul-tutorial-int8-inference"]], "Inner Product Primitive Example": [[407, "inner-product-primitive-example"]], "Layer Normalization Primitive Example": [[409, "layer-normalization-primitive-example"]], "Linear-Before-Reset GRU RNN Primitive Example": [[411, "linear-before-reset-gru-rnn-primitive-example"]], "Legal Information": [[413, "legal-information"]], "Trademark Information": [[413, "trademark-information"]], "Local Response Normalization Primitive Example": [[414, "local-response-normalization-primitive-example"]], "LSTM RNN Primitive Example": [[416, "lstm-rnn-primitive-example"]], "Matmul Primitive Example": [[418, "matmul-primitive-example"]], "Memory Format Propagation": [[420, "memory-format-propagation"]], "Introduction to the tutorial": [[420, "introduction-to-the-tutorial"]], "memory_format_propagation() function": [[420, "memory-format-propagation-function"]], "Initialization": [[420, "initialization"]], "Create convolution and pooling primitives": [[420, "create-convolution-and-pooling-primitives"]], "Create source and destination memory objects": [[420, "create-source-and-destination-memory-objects"]], "Determine if source and destination need to be reordered": [[420, "determine-if-source-and-destination-need-to-be-reordered"]], "Allocate intermediate buffers if necessary": [[420, "allocate-intermediate-buffers-if-necessary"]], "Perform reorders for source data if necessary": [[420, "perform-reorders-for-source-data-if-necessary"]], "Create and execute convolution and pooling primitives": [[420, "create-and-execute-convolution-and-pooling-primitives"]], "Reorder destination data if necessary": [[420, "reorder-destination-data-if-necessary"]], "Results": [[420, "results"]], "Performance Profiling Example": [[421, "performance-profiling-example"]], "Walkthrough": [[421, "walkthrough"]], "Naive Implementation": [[421, "naive-implementation"]], "Blocked format implementation": [[421, "blocked-format-implementation"]], "Fused Implementation": [[421, "fused-implementation"]], "Performance summary": [[421, "performance-summary"]], "Configuration Notice": [[421, "configuration-notice"]], "Pooling Primitive Example": [[422, "pooling-primitive-example"]], "Primitive Example": [[424, "primitive-example"]], "Reduction Primitive Example": [[426, "reduction-primitive-example"]], "Reorder Primitive Example": [[428, "reorder-primitive-example"]], "Resampling Primitive Example": [[430, "resampling-primitive-example"]], "RNN f32 training example": [[432, "rnn-f32-training-example"]], "Shuffle Primitive Example": [[433, "shuffle-primitive-example"]], "Softmax Primitive Example": [[435, "softmax-primitive-example"]], "Sum Primitive Example": [[437, "sum-primitive-example"]], "Getting started on both CPU and GPU with SYCL extensions API": [[439, "getting-started-on-both-cpu-and-gpu-with-sycl-extensions-api"]], "sycl_interop_buffer_tutorial() function": [[439, "sycl-interop-buffer-tutorial-function"]], "Initialize the data executing a custom SYCL kernel": [[439, "initialize-the-data-executing-a-custom-sycl-kernel"]], "Vanilla RNN Primitive Example": [[441, "vanilla-rnn-primitive-example"]], "Todo List": [[440, "todo-list"]], "MatMul Tutorial: weights decompression": [[443, "matmul-tutorial-weights-decompression"]], "Performance Profiling and Inspection": [[445, "performance-profiling-and-inspection"]], "struct args_t": [[447, "struct-args-t"]], "struct cpu_deletor": [[448, "struct-cpu-deletor"]], "struct dnnl::augru_backward": [[449, "struct-dnnl-augru-backward"]], "Inherited Members": [[449, "inherited-members"], [451, "inherited-members"], [450, "inherited-members"], [452, "inherited-members"], [453, "inherited-members"], [454, "inherited-members"], [455, "inherited-members"], [457, "inherited-members"], [456, "inherited-members"], [458, "inherited-members"], [461, "inherited-members"], [460, "inherited-members"], [463, "inherited-members"], [462, "inherited-members"], [465, "inherited-members"], [464, "inherited-members"], [467, "inherited-members"], [466, "inherited-members"], [468, "inherited-members"], [469, "inherited-members"], [471, "inherited-members"], [470, "inherited-members"], [473, "inherited-members"], [472, "inherited-members"], [475, "inherited-members"], [474, "inherited-members"], [476, "inherited-members"], [477, "inherited-members"], [479, "inherited-members"], [485, "inherited-members"], [484, "inherited-members"], [486, "inherited-members"], [487, "inherited-members"], [488, "inherited-members"], [489, "inherited-members"], [490, "inherited-members"], [491, "inherited-members"], [495, "inherited-members"], [494, "inherited-members"], [497, "inherited-members"], [496, "inherited-members"], [499, "inherited-members"], [498, "inherited-members"], [500, "inherited-members"], [501, "inherited-members"], [502, "inherited-members"], [503, "inherited-members"], [505, "inherited-members"], [504, "inherited-members"], [506, "inherited-members"], [507, "inherited-members"], [509, "inherited-members"], [508, "inherited-members"], [510, "inherited-members"], [511, "inherited-members"], [512, "inherited-members"], [513, "inherited-members"], [515, "inherited-members"], [514, "inherited-members"], [517, "inherited-members"], [516, "inherited-members"], [518, "inherited-members"], [519, "inherited-members"], [520, "inherited-members"], [521, "inherited-members"], [523, "inherited-members"], [525, "inherited-members"], [526, "inherited-members"], [527, "inherited-members"], [528, "inherited-members"], [529, "inherited-members"], [531, "inherited-members"], [533, "inherited-members"], [532, "inherited-members"], [535, "inherited-members"], [534, "inherited-members"], [537, "inherited-members"], [539, "inherited-members"], [541, "inherited-members"], [542, "inherited-members"], [543, "inherited-members"], [544, "inherited-members"], [545, "inherited-members"], [547, "inherited-members"], [546, "inherited-members"], [548, "inherited-members"], [549, "inherited-members"], [550, "inherited-members"], [551, "inherited-members"], [553, "inherited-members"], [552, "inherited-members"], [555, "inherited-members"], [554, "inherited-members"], [557, "inherited-members"], [556, "inherited-members"], [559, "inherited-members"], [558, "inherited-members"], [561, "inherited-members"], [563, "inherited-members"], [562, "inherited-members"], [567, "inherited-members"], [569, "inherited-members"], [568, "inherited-members"], [570, "inherited-members"], [571, "inherited-members"], [572, "inherited-members"], [573, "inherited-members"]], "struct dnnl::augru_forward": [[451, "struct-dnnl-augru-forward"]], "struct dnnl::augru_backward::primitive_desc": [[450, "struct-dnnl-augru-backward-primitive-desc"]], "struct dnnl::augru_forward::primitive_desc": [[452, "struct-dnnl-augru-forward-primitive-desc"]], "struct dnnl::batch_normalization_backward": [[453, "struct-dnnl-batch-normalization-backward"]], "struct dnnl::batch_normalization_backward::primitive_desc": [[454, "struct-dnnl-batch-normalization-backward-primitive-desc"]], "struct dnnl::batch_normalization_forward": [[455, "struct-dnnl-batch-normalization-forward"]], "struct dnnl::binary": [[457, "struct-dnnl-binary"]], "struct dnnl::batch_normalization_forward::primitive_desc": [[456, "struct-dnnl-batch-normalization-forward-primitive-desc"]], "struct dnnl_brgemm": [[459, "struct-dnnl-brgemm"]], "struct dnnl::binary::primitive_desc": [[458, "struct-dnnl-binary-primitive-desc"]], "struct dnnl::concat::primitive_desc": [[461, "struct-dnnl-concat-primitive-desc"]], "struct dnnl::concat": [[460, "struct-dnnl-concat"]], "struct dnnl::convolution_backward_data::primitive_desc": [[463, "struct-dnnl-convolution-backward-data-primitive-desc"]], "struct dnnl::convolution_backward_data": [[462, "struct-dnnl-convolution-backward-data"]], "struct dnnl::convolution_backward_weights::primitive_desc": [[465, "struct-dnnl-convolution-backward-weights-primitive-desc"]], "struct dnnl::convolution_backward_weights": [[464, "struct-dnnl-convolution-backward-weights"]], "struct dnnl::convolution_forward::primitive_desc": [[467, "struct-dnnl-convolution-forward-primitive-desc"]], "struct dnnl::convolution_forward": [[466, "struct-dnnl-convolution-forward"]], "struct dnnl::deconvolution_backward_data": [[468, "struct-dnnl-deconvolution-backward-data"]], "struct dnnl::deconvolution_backward_data::primitive_desc": [[469, "struct-dnnl-deconvolution-backward-data-primitive-desc"]], "struct dnnl::deconvolution_backward_weights::primitive_desc": [[471, "struct-dnnl-deconvolution-backward-weights-primitive-desc"]], "struct dnnl::deconvolution_backward_weights": [[470, "struct-dnnl-deconvolution-backward-weights"]], "struct dnnl::deconvolution_forward::primitive_desc": [[473, "struct-dnnl-deconvolution-forward-primitive-desc"]], "struct dnnl::deconvolution_forward": [[472, "struct-dnnl-deconvolution-forward"]], "struct dnnl::eltwise_backward::primitive_desc": [[475, "struct-dnnl-eltwise-backward-primitive-desc"]], "struct dnnl::eltwise_backward": [[474, "struct-dnnl-eltwise-backward"]], "struct dnnl::eltwise_forward": [[476, "struct-dnnl-eltwise-forward"]], "struct dnnl::eltwise_forward::primitive_desc": [[477, "struct-dnnl-eltwise-forward-primitive-desc"]], "struct dnnl::engine": [[479, "struct-dnnl-engine"]], "struct dnnl_engine": [[478, "struct-dnnl-engine"]], "struct dnnl_exec_arg_t": [[481, "struct-dnnl-exec-arg-t"]], "Fields": [[481, "fields"], [482, "fields"], [483, "fields"], [564, "fields"], [574, "fields"]], "struct dnnl::error": [[480, "struct-dnnl-error"]], "struct dnnl_graph_inplace_pair_t": [[482, "struct-dnnl-graph-inplace-pair-t"]], "struct dnnl_graph_logical_tensor_t": [[483, "struct-dnnl-graph-logical-tensor-t"]], "struct dnnl::group_normalization_backward::primitive_desc": [[485, "struct-dnnl-group-normalization-backward-primitive-desc"]], "struct dnnl::group_normalization_backward": [[484, "struct-dnnl-group-normalization-backward"]], "struct dnnl::group_normalization_forward": [[486, "struct-dnnl-group-normalization-forward"]], "struct dnnl::group_normalization_forward::primitive_desc": [[487, "struct-dnnl-group-normalization-forward-primitive-desc"]], "struct dnnl::gru_backward": [[488, "struct-dnnl-gru-backward"]], "struct dnnl::gru_backward::primitive_desc": [[489, "struct-dnnl-gru-backward-primitive-desc"]], "struct dnnl::gru_forward": [[490, "struct-dnnl-gru-forward"]], "struct dnnl::gru_forward::primitive_desc": [[491, "struct-dnnl-gru-forward-primitive-desc"]], "template struct dnnl::handle": [[492, "template-struct-dnnl-handle"]], "template struct dnnl::handle_traits": [[493, "template-struct-dnnl-handle-traits"]], "struct dnnl::inner_product_backward_data::primitive_desc": [[495, "struct-dnnl-inner-product-backward-data-primitive-desc"]], "struct dnnl::inner_product_backward_data": [[494, "struct-dnnl-inner-product-backward-data"]], "struct dnnl::inner_product_backward_weights::primitive_desc": [[497, "struct-dnnl-inner-product-backward-weights-primitive-desc"]], "struct dnnl::inner_product_backward_weights": [[496, "struct-dnnl-inner-product-backward-weights"]], "struct dnnl::inner_product_forward::primitive_desc": [[499, "struct-dnnl-inner-product-forward-primitive-desc"]], "struct dnnl::inner_product_forward": [[498, "struct-dnnl-inner-product-forward"]], "struct dnnl::layer_normalization_backward": [[500, "struct-dnnl-layer-normalization-backward"]], "struct dnnl::layer_normalization_backward::primitive_desc": [[501, "struct-dnnl-layer-normalization-backward-primitive-desc"]], "struct dnnl::layer_normalization_forward": [[502, "struct-dnnl-layer-normalization-forward"]], "struct dnnl::layer_normalization_forward::primitive_desc": [[503, "struct-dnnl-layer-normalization-forward-primitive-desc"]], "struct dnnl::lbr_augru_backward::primitive_desc": [[505, "struct-dnnl-lbr-augru-backward-primitive-desc"]], "struct dnnl::lbr_augru_backward": [[504, "struct-dnnl-lbr-augru-backward"]], "struct dnnl::lbr_augru_forward": [[506, "struct-dnnl-lbr-augru-forward"]], "struct dnnl::lbr_augru_forward::primitive_desc": [[507, "struct-dnnl-lbr-augru-forward-primitive-desc"]], "struct dnnl::lbr_gru_backward::primitive_desc": [[509, "struct-dnnl-lbr-gru-backward-primitive-desc"]], "struct dnnl::lbr_gru_backward": [[508, "struct-dnnl-lbr-gru-backward"]], "struct dnnl::lbr_gru_forward": [[510, "struct-dnnl-lbr-gru-forward"]], "struct dnnl::lbr_gru_forward::primitive_desc": [[511, "struct-dnnl-lbr-gru-forward-primitive-desc"]], "struct dnnl::lrn_backward": [[512, "struct-dnnl-lrn-backward"]], "struct dnnl::lrn_backward::primitive_desc": [[513, "struct-dnnl-lrn-backward-primitive-desc"]], "struct dnnl::lrn_forward::primitive_desc": [[515, "struct-dnnl-lrn-forward-primitive-desc"]], "struct dnnl::lrn_forward": [[514, "struct-dnnl-lrn-forward"]], "struct dnnl::lstm_backward::primitive_desc": [[517, "struct-dnnl-lstm-backward-primitive-desc"]], "struct dnnl::lstm_backward": [[516, "struct-dnnl-lstm-backward"]], "struct dnnl::lstm_forward": [[518, "struct-dnnl-lstm-forward"]], "struct dnnl::lstm_forward::primitive_desc": [[519, "struct-dnnl-lstm-forward-primitive-desc"]], "struct dnnl::matmul": [[520, "struct-dnnl-matmul"]], "struct dnnl::matmul::primitive_desc": [[521, "struct-dnnl-matmul-primitive-desc"]], "struct dnnl::memory": [[523, "struct-dnnl-memory"]], "struct dnnl_memory": [[522, "struct-dnnl-memory"]], "struct dnnl::memory::desc": [[525, "struct-dnnl-memory-desc"]], "struct dnnl_memory_desc": [[524, "struct-dnnl-memory-desc"]], "struct dnnl::pooling_backward": [[526, "struct-dnnl-pooling-backward"]], "struct dnnl::pooling_backward::primitive_desc": [[527, "struct-dnnl-pooling-backward-primitive-desc"]], "struct dnnl::pooling_forward": [[528, "struct-dnnl-pooling-forward"]], "struct dnnl::pooling_forward::primitive_desc": [[529, "struct-dnnl-pooling-forward-primitive-desc"]], "struct dnnl::post_ops": [[531, "struct-dnnl-post-ops"]], "struct dnnl_post_ops": [[530, "struct-dnnl-post-ops"]], "struct dnnl::prelu_backward::primitive_desc": [[533, "struct-dnnl-prelu-backward-primitive-desc"]], "struct dnnl::prelu_backward": [[532, "struct-dnnl-prelu-backward"]], "struct dnnl::prelu_forward::primitive_desc": [[535, "struct-dnnl-prelu-forward-primitive-desc"]], "struct dnnl::prelu_forward": [[534, "struct-dnnl-prelu-forward"]], "struct dnnl::primitive": [[537, "struct-dnnl-primitive"]], "struct dnnl_primitive": [[536, "struct-dnnl-primitive"]], "struct dnnl::primitive_attr": [[539, "struct-dnnl-primitive-attr"]], "struct dnnl_primitive_attr": [[538, "struct-dnnl-primitive-attr"]], "struct dnnl::primitive_desc": [[541, "struct-dnnl-primitive-desc"]], "struct dnnl_primitive_desc": [[540, "struct-dnnl-primitive-desc"]], "struct dnnl::primitive_desc_base": [[542, "struct-dnnl-primitive-desc-base"]], "struct dnnl::reduction": [[543, "struct-dnnl-reduction"]], "struct dnnl::reduction::primitive_desc": [[544, "struct-dnnl-reduction-primitive-desc"]], "struct dnnl::reorder": [[545, "struct-dnnl-reorder"]], "struct dnnl::resampling_backward": [[547, "struct-dnnl-resampling-backward"]], "struct dnnl::reorder::primitive_desc": [[546, "struct-dnnl-reorder-primitive-desc"]], "struct dnnl::resampling_backward::primitive_desc": [[548, "struct-dnnl-resampling-backward-primitive-desc"]], "struct dnnl::resampling_forward": [[549, "struct-dnnl-resampling-forward"]], "struct dnnl::resampling_forward::primitive_desc": [[550, "struct-dnnl-resampling-forward-primitive-desc"]], "struct dnnl::rnn_primitive_desc_base": [[551, "struct-dnnl-rnn-primitive-desc-base"]], "struct dnnl::shuffle_backward::primitive_desc": [[553, "struct-dnnl-shuffle-backward-primitive-desc"]], "struct dnnl::shuffle_backward": [[552, "struct-dnnl-shuffle-backward"]], "struct dnnl::shuffle_forward::primitive_desc": [[555, "struct-dnnl-shuffle-forward-primitive-desc"]], "struct dnnl::shuffle_forward": [[554, "struct-dnnl-shuffle-forward"]], "struct dnnl::softmax_backward::primitive_desc": [[557, "struct-dnnl-softmax-backward-primitive-desc"]], "struct dnnl::softmax_backward": [[556, "struct-dnnl-softmax-backward"]], "struct dnnl::softmax_forward::primitive_desc": [[559, "struct-dnnl-softmax-forward-primitive-desc"]], "struct dnnl::softmax_forward": [[558, "struct-dnnl-softmax-forward"]], "struct dnnl_stream": [[560, "struct-dnnl-stream"]], "struct dnnl::stream": [[561, "struct-dnnl-stream"]], "struct dnnl::sum::primitive_desc": [[563, "struct-dnnl-sum-primitive-desc"]], "struct dnnl::sum": [[562, "struct-dnnl-sum"]], "struct dnnl::threadpool_interop::threadpool_iface": [[564, "struct-dnnl-threadpool-interop-threadpool-iface"]], "struct dnnl_transform": [[565, "struct-dnnl-transform"]], "struct dnnl_ukernel_attr_params": [[566, "struct-dnnl-ukernel-attr-params"]], "struct dnnl::ukernel::attr_params": [[567, "struct-dnnl-ukernel-attr-params"]], "struct dnnl::ukernel::transform": [[569, "struct-dnnl-ukernel-transform"]], "struct dnnl::ukernel::brgemm": [[568, "struct-dnnl-ukernel-brgemm"]], "struct dnnl::vanilla_rnn_backward": [[570, "struct-dnnl-vanilla-rnn-backward"]], "struct dnnl::vanilla_rnn_backward::primitive_desc": [[571, "struct-dnnl-vanilla-rnn-backward-primitive-desc"]], "struct dnnl::vanilla_rnn_forward": [[572, "struct-dnnl-vanilla-rnn-forward"]], "struct dnnl::vanilla_rnn_forward::primitive_desc": [[573, "struct-dnnl-vanilla-rnn-forward-primitive-desc"]], "struct example_allows_unimplemented": [[575, "struct-example-allows-unimplemented"]], "struct dnnl_version_t": [[574, "struct-dnnl-version-t"]], "struct gqa_dims_t": [[577, "struct-gqa-dims-t"]], "struct gemm_dims_t": [[576, "struct-gemm-dims-t"]], "struct mqa_dims_t": [[579, "struct-mqa-dims-t"]], "struct mlp_dims_t": [[578, "struct-mlp-dims-t"]], "struct sycl_deletor": [[581, "struct-sycl-deletor"]], "struct sdpa_dims_t": [[580, "struct-sdpa-dims-t"]], "Supported Primitives": [[582, "supported-primitives"]]}, "indexentries": {"allocator": [[2, "index-1"], [2, "index-2"], [332, "index-0"]], "class": [[2, "index-0"], [3, "index-0"], [4, "index-0"], [5, "index-0"], [6, "index-0"], [7, "index-0"], [8, "index-0"], [9, "index-0"]], "dnnl::graph::allocator": [[2, "index-0"]], "function": [[2, "index-1"], [2, "index-2"], [3, "index-1"], [3, "index-2"], [3, "index-3"], [3, "index-4"], [3, "index-5"], [4, "index-1"], [4, "index-2"], [4, "index-3"], [4, "index-4"], [4, "index-5"], [4, "index-6"], [4, "index-7"], [4, "index-8"], [5, "index-10"], [5, "index-11"], [5, "index-12"], [5, "index-13"], [5, "index-14"], [5, "index-15"], [5, "index-16"], [5, "index-17"], [5, "index-18"], [5, "index-19"], [5, "index-20"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"], [6, "index-1"], [6, "index-10"], [6, "index-11"], [6, "index-12"], [6, "index-2"], [6, "index-3"], [6, "index-4"], [6, "index-5"], [6, "index-6"], [6, "index-7"], [6, "index-8"], [6, "index-9"], [7, "index-1"], [7, "index-10"], [7, "index-2"], [7, "index-3"], [7, "index-4"], [7, "index-5"], [7, "index-6"], [7, "index-7"], [7, "index-8"], [7, "index-9"], [8, "index-1"], [8, "index-2"], [8, "index-3"], [8, "index-4"], [8, "index-5"], [8, "index-6"], [8, "index-7"], [283, "index-1"], [288, "index-1"], [289, "index-10"], [289, "index-11"], [289, "index-12"], [289, "index-13"], [289, "index-14"], [289, "index-15"], [289, "index-16"], [289, "index-17"], [289, "index-18"], [289, "index-19"], [289, "index-20"], [289, "index-21"], [289, "index-22"], [289, "index-23"], [289, "index-24"], [289, "index-25"], [289, "index-26"], [289, "index-27"], [289, "index-28"], [289, "index-29"], [289, "index-30"], [289, "index-31"], [289, "index-32"], [289, "index-33"], [289, "index-34"], [289, "index-35"], [289, "index-36"], [289, "index-37"], [289, "index-38"], [289, "index-39"], [289, "index-40"], [289, "index-41"], [289, "index-42"], [289, "index-43"], [289, "index-44"], [289, "index-45"], [289, "index-46"], [289, "index-47"], [289, "index-48"], [289, "index-49"], [289, "index-5"], [289, "index-50"], [289, "index-51"], [289, "index-52"], [289, "index-6"], [289, "index-7"], [289, "index-8"], [289, "index-9"], [290, "index-1"], [290, "index-2"], [291, "index-1"], [291, "index-2"], [292, "index-1"], [292, "index-2"], [292, "index-3"], [292, "index-4"], [292, "index-5"], [292, "index-6"], [294, "index-1"], [295, "index-1"], [295, "index-2"], [295, "index-3"], [297, "index-1"], [297, "index-2"], [297, "index-3"], [298, "index-1"], [298, "index-2"], [299, "index-2"], [299, "index-3"], [299, "index-4"], [299, "index-5"], [299, "index-6"], [300, "index-1"], [300, "index-2"], [300, "index-3"], [301, "index-1"], [301, "index-2"], [302, "index-1"], [302, "index-2"], [302, "index-3"], [304, "index-1"], [304, "index-2"], [304, "index-3"], [304, "index-4"], [305, "index-1"], [305, "index-2"], [306, "index-1"], [307, "index-10"], [307, "index-11"], [307, "index-12"], [307, "index-13"], [307, "index-14"], [307, "index-15"], [307, "index-16"], [307, "index-17"], [307, "index-18"], [307, "index-19"], [307, "index-20"], [307, "index-21"], [307, "index-22"], [307, "index-23"], [307, "index-24"], [307, "index-25"], [307, "index-26"], [307, "index-27"], [307, "index-28"], [307, "index-29"], [307, "index-30"], [307, "index-31"], [307, "index-32"], [307, "index-33"], [307, "index-34"], [307, "index-35"], [307, "index-5"], [307, "index-6"], [307, "index-7"], [307, "index-8"], [307, "index-9"], [308, "index-1"], [308, "index-10"], [308, "index-11"], [308, "index-12"], [308, "index-13"], [308, "index-14"], [308, "index-2"], [308, "index-3"], [308, "index-4"], [308, "index-5"], [308, "index-6"], [308, "index-7"], [308, "index-8"], [308, "index-9"], [309, "index-1"], [309, "index-2"], [310, "index-1"], [310, "index-2"], [311, "index-1"], [311, "index-2"], [311, "index-3"], [311, "index-4"], [313, "index-10"], [313, "index-11"], [313, "index-12"], [313, "index-13"], [313, "index-14"], [313, "index-15"], [313, "index-16"], [313, "index-17"], [313, "index-18"], [313, "index-19"], [313, "index-20"], [313, "index-5"], [313, "index-6"], [313, "index-7"], [313, "index-8"], [313, "index-9"], [314, "index-1"], [314, "index-2"], [314, "index-3"], [314, "index-4"], [315, "index-1"], [316, "index-1"], [317, "index-1"], [317, "index-2"], [318, "index-1"], [318, "index-10"], [318, "index-11"], [318, "index-12"], [318, "index-13"], [318, "index-14"], [318, "index-2"], [318, "index-3"], [318, "index-4"], [318, "index-5"], [318, "index-6"], [318, "index-7"], [318, "index-8"], [318, "index-9"], [319, "index-10"], [319, "index-11"], [319, "index-12"], [319, "index-13"], [319, "index-14"], [319, "index-15"], [319, "index-16"], [319, "index-17"], [319, "index-18"], [319, "index-19"], [319, "index-2"], [319, "index-20"], [319, "index-21"], [319, "index-3"], [319, "index-4"], [319, "index-5"], [319, "index-6"], [319, "index-7"], [319, "index-8"], [319, "index-9"], [320, "index-1"], [320, "index-2"], [321, "index-1"], [321, "index-2"], [322, "index-3"], [322, "index-4"], [322, "index-5"], [322, "index-6"], [323, "index-1"], [324, "index-1"], [324, "index-10"], [324, "index-2"], [324, "index-3"], [324, "index-4"], [324, "index-5"], [324, "index-6"], [324, "index-7"], [324, "index-8"], [324, "index-9"], [325, "index-1"], [325, "index-2"], [325, "index-3"], [325, "index-4"], [325, "index-5"], [325, "index-6"], [325, "index-7"], [326, "index-3"], [326, "index-4"], [326, "index-5"], [326, "index-6"], [326, "index-7"], [326, "index-8"], [327, "index-10"], [327, "index-11"], [327, "index-12"], [327, "index-13"], [327, "index-14"], [327, "index-15"], [327, "index-16"], [327, "index-17"], [327, "index-18"], [327, "index-19"], [327, "index-20"], [327, "index-21"], [327, "index-22"], [327, "index-23"], [327, "index-24"], [327, "index-5"], [327, "index-6"], [327, "index-7"], [327, "index-8"], [327, "index-9"], [332, "index-5"], [332, "index-6"], [333, "index-3"], [333, "index-4"], [333, "index-5"], [333, "index-6"], [333, "index-7"], [334, "index-1"], [334, "index-2"], [334, "index-3"], [334, "index-4"], [335, "index-1"], [335, "index-2"], [335, "index-3"], [335, "index-4"], [335, "index-5"], [335, "index-6"], [335, "index-7"], [335, "index-8"], [336, "index-1"], [336, "index-2"], [337, "index-10"], [337, "index-11"], [337, "index-12"], [337, "index-13"], [337, "index-3"], [337, "index-4"], [337, "index-5"], [337, "index-6"], [337, "index-7"], [337, "index-8"], [337, "index-9"], [339, "index-1"], [339, "index-2"], [339, "index-3"], [339, "index-4"], [339, "index-5"], [340, "index-3"], [340, "index-4"], [340, "index-5"], [340, "index-6"], [341, "index-10"], [341, "index-11"], [341, "index-12"], [341, "index-3"], [341, "index-4"], [341, "index-5"], [341, "index-6"], [341, "index-7"], [341, "index-8"], [341, "index-9"], [342, "index-10"], [342, "index-11"], [342, "index-12"], [342, "index-13"], [342, "index-14"], [342, "index-3"], [342, "index-4"], [342, "index-5"], [342, "index-6"], [342, "index-7"], [342, "index-8"], [342, "index-9"], [344, "index-3"], [344, "index-4"], [344, "index-5"], [345, "index-3"], [345, "index-4"], [345, "index-5"], [345, "index-6"], [345, "index-7"], [345, "index-8"], [351, "index-1"], [351, "index-2"], [351, "index-3"], [351, "index-4"], [352, "index-1"], [352, "index-2"], [353, "index-1"], [353, "index-10"], [353, "index-11"], [353, "index-12"], [353, "index-13"], [353, "index-14"], [353, "index-15"], [353, "index-16"], [353, "index-17"], [353, "index-2"], [353, "index-3"], [353, "index-4"], [353, "index-5"], [353, "index-6"], [353, "index-7"], [353, "index-8"], [353, "index-9"], [354, "index-1"], [354, "index-10"], [354, "index-11"], [354, "index-12"], [354, "index-13"], [354, "index-2"], [354, "index-3"], [354, "index-4"], [354, "index-5"], [354, "index-6"], [354, "index-7"], [354, "index-8"], [354, "index-9"], [355, "index-1"], [355, "index-2"], [355, "index-3"], [355, "index-4"], [355, "index-5"], [449, "index-1"], [449, "index-2"], [449, "index-3"], [450, "index-1"], [450, "index-10"], [450, "index-11"], [450, "index-12"], [450, "index-13"], [450, "index-14"], [450, "index-15"], [450, "index-16"], [450, "index-17"], [450, "index-18"], [450, "index-19"], [450, "index-2"], [450, "index-20"], [450, "index-21"], [450, "index-22"], [450, "index-23"], [450, "index-3"], [450, "index-4"], [450, "index-5"], [450, "index-6"], [450, "index-7"], [450, "index-8"], [450, "index-9"], [451, "index-1"], [451, "index-2"], [451, "index-3"], [452, "index-1"], [452, "index-10"], [452, "index-11"], [452, "index-12"], [452, "index-13"], [452, "index-14"], [452, "index-15"], [452, "index-2"], [452, "index-3"], [452, "index-4"], [452, "index-5"], [452, "index-6"], [452, "index-7"], [452, "index-8"], [452, "index-9"], [453, "index-1"], [453, "index-2"], [453, "index-3"], [454, "index-1"], [454, "index-10"], [454, "index-11"], [454, "index-12"], [454, "index-13"], [454, "index-14"], [454, "index-15"], [454, "index-2"], [454, "index-3"], [454, "index-4"], [454, "index-5"], [454, "index-6"], [454, "index-7"], [454, "index-8"], [454, "index-9"], [455, "index-1"], [455, "index-2"], [455, "index-3"], [456, "index-1"], [456, "index-10"], [456, "index-11"], [456, "index-12"], [456, "index-2"], [456, "index-3"], [456, "index-4"], [456, "index-5"], [456, "index-6"], [456, "index-7"], [456, "index-8"], [456, "index-9"], [457, "index-1"], [457, "index-2"], [457, "index-3"], [458, "index-1"], [458, "index-10"], [458, "index-2"], [458, "index-3"], [458, "index-4"], [458, "index-5"], [458, "index-6"], [458, "index-7"], [458, "index-8"], [458, "index-9"], [460, "index-1"], [460, "index-2"], [460, "index-3"], [461, "index-1"], [461, "index-10"], [461, "index-2"], [461, "index-3"], [461, "index-4"], [461, "index-5"], [461, "index-6"], [461, "index-7"], [461, "index-8"], [461, "index-9"], [462, "index-1"], [462, "index-2"], [462, "index-3"], [463, "index-1"], [463, "index-10"], [463, "index-11"], [463, "index-12"], [463, "index-13"], [463, "index-2"], [463, "index-3"], [463, "index-4"], [463, "index-5"], [463, "index-6"], [463, "index-7"], [463, "index-8"], [463, "index-9"], [464, "index-1"], [464, "index-2"], [464, "index-3"], [465, "index-1"], [465, "index-10"], [465, "index-11"], [465, "index-12"], [465, "index-13"], [465, "index-14"], [465, "index-15"], [465, "index-16"], [465, "index-2"], [465, "index-3"], [465, "index-4"], [465, "index-5"], [465, "index-6"], [465, "index-7"], [465, "index-8"], [465, "index-9"], [466, "index-1"], [466, "index-2"], [466, "index-3"], [467, "index-1"], [467, "index-10"], [467, "index-11"], [467, "index-12"], [467, "index-13"], [467, "index-14"], [467, "index-15"], [467, "index-16"], [467, "index-2"], [467, "index-3"], [467, "index-4"], [467, "index-5"], [467, "index-6"], [467, "index-7"], [467, "index-8"], [467, "index-9"], [468, "index-1"], [468, "index-2"], [468, "index-3"], [469, "index-1"], [469, "index-10"], [469, "index-11"], [469, "index-12"], [469, "index-13"], [469, "index-2"], [469, "index-3"], [469, "index-4"], [469, "index-5"], [469, "index-6"], [469, "index-7"], [469, "index-8"], [469, "index-9"], [470, "index-1"], [470, "index-2"], [470, "index-3"], [471, "index-1"], [471, "index-10"], [471, "index-11"], [471, "index-12"], [471, "index-13"], [471, "index-14"], [471, "index-15"], [471, "index-16"], [471, "index-2"], [471, "index-3"], [471, "index-4"], [471, "index-5"], [471, "index-6"], [471, "index-7"], [471, "index-8"], [471, "index-9"], [472, "index-1"], [472, "index-2"], [472, "index-3"], [473, "index-1"], [473, "index-10"], [473, "index-11"], [473, "index-12"], [473, "index-13"], [473, "index-14"], [473, "index-15"], [473, "index-16"], [473, "index-2"], [473, "index-3"], [473, "index-4"], [473, "index-5"], [473, "index-6"], [473, "index-7"], [473, "index-8"], [473, "index-9"], [474, "index-1"], [474, "index-2"], [474, "index-3"], [475, "index-1"], [475, "index-10"], [475, "index-11"], [475, "index-12"], [475, "index-2"], [475, "index-3"], [475, "index-4"], [475, "index-5"], [475, "index-6"], [475, "index-7"], [475, "index-8"], [475, "index-9"], [476, "index-1"], [476, "index-2"], [476, "index-3"], [477, "index-1"], [477, "index-10"], [477, "index-11"], [477, "index-2"], [477, "index-3"], [477, "index-4"], [477, "index-5"], [477, "index-6"], [477, "index-7"], [477, "index-8"], [477, "index-9"], [479, "index-1"], [479, "index-2"], [479, "index-3"], [479, "index-4"], [479, "index-5"], [479, "index-6"], [479, "index-7"], [479, "index-8"], [480, "index-1"], [480, "index-2"], [480, "index-3"], [484, "index-1"], [484, "index-2"], [484, "index-3"], [485, "index-1"], [485, "index-10"], [485, "index-11"], [485, "index-12"], [485, "index-13"], [485, "index-14"], [485, "index-15"], [485, "index-16"], [485, "index-2"], [485, "index-3"], [485, "index-4"], [485, "index-5"], [485, "index-6"], [485, "index-7"], [485, "index-8"], [485, "index-9"], [486, "index-1"], [486, "index-2"], [486, "index-3"], [487, "index-1"], [487, "index-10"], [487, "index-11"], [487, "index-12"], [487, "index-13"], [487, "index-2"], [487, "index-3"], [487, "index-4"], [487, "index-5"], [487, "index-6"], [487, "index-7"], [487, "index-8"], [487, "index-9"], [488, "index-1"], [488, "index-2"], [488, "index-3"], [489, "index-1"], [489, "index-10"], [489, "index-11"], [489, "index-12"], [489, "index-13"], [489, "index-14"], [489, "index-15"], [489, "index-16"], [489, "index-17"], [489, "index-18"], [489, "index-19"], [489, "index-2"], [489, "index-20"], [489, "index-21"], [489, "index-3"], [489, "index-4"], [489, "index-5"], [489, "index-6"], [489, "index-7"], [489, "index-8"], [489, "index-9"], [490, "index-1"], [490, "index-2"], [490, "index-3"], [491, "index-1"], [491, "index-10"], [491, "index-11"], [491, "index-12"], [491, "index-13"], [491, "index-14"], [491, "index-2"], [491, "index-3"], [491, "index-4"], [491, "index-5"], [491, "index-6"], [491, "index-7"], [491, "index-8"], [491, "index-9"], [492, "index-1"], [492, "index-10"], [492, "index-11"], [492, "index-12"], [492, "index-2"], [492, "index-3"], [492, "index-4"], [492, "index-5"], [492, "index-6"], [492, "index-7"], [492, "index-8"], [492, "index-9"], [494, "index-1"], [494, "index-2"], [494, "index-3"], [495, "index-1"], [495, "index-2"], [495, "index-3"], [495, "index-4"], [495, "index-5"], [495, "index-6"], [495, "index-7"], [496, "index-1"], [496, "index-2"], [496, "index-3"], [497, "index-1"], [497, "index-2"], [497, "index-3"], [497, "index-4"], [497, "index-5"], [497, "index-6"], [497, "index-7"], [497, "index-8"], [497, "index-9"], [498, "index-1"], [498, "index-2"], [498, "index-3"], [499, "index-1"], [499, "index-2"], [499, "index-3"], [499, "index-4"], [499, "index-5"], [499, "index-6"], [499, "index-7"], [499, "index-8"], [499, "index-9"], [500, "index-1"], [500, "index-2"], [500, "index-3"], [501, "index-1"], [501, "index-10"], [501, "index-11"], [501, "index-12"], [501, "index-13"], [501, "index-14"], [501, "index-15"], [501, "index-16"], [501, "index-17"], [501, "index-18"], [501, "index-2"], [501, "index-3"], [501, "index-4"], [501, "index-5"], [501, "index-6"], [501, "index-7"], [501, "index-8"], [501, "index-9"], [502, "index-1"], [502, "index-2"], [502, "index-3"], [503, "index-1"], [503, "index-10"], [503, "index-11"], [503, "index-12"], [503, "index-13"], [503, "index-14"], [503, "index-15"], [503, "index-2"], [503, "index-3"], [503, "index-4"], [503, "index-5"], [503, "index-6"], [503, "index-7"], [503, "index-8"], [503, "index-9"], [504, "index-1"], [504, "index-2"], [504, "index-3"], [505, "index-1"], [505, "index-10"], [505, "index-11"], [505, "index-12"], [505, "index-13"], [505, "index-14"], [505, "index-15"], [505, "index-16"], [505, "index-17"], [505, "index-18"], [505, "index-19"], [505, "index-2"], [505, "index-20"], [505, "index-21"], [505, "index-22"], [505, "index-23"], [505, "index-3"], [505, "index-4"], [505, "index-5"], [505, "index-6"], [505, "index-7"], [505, "index-8"], [505, "index-9"], [506, "index-1"], [506, "index-2"], [506, "index-3"], [507, "index-1"], [507, "index-10"], [507, "index-11"], [507, "index-12"], [507, "index-13"], [507, "index-14"], [507, "index-15"], [507, "index-2"], [507, "index-3"], [507, "index-4"], [507, "index-5"], [507, "index-6"], [507, "index-7"], [507, "index-8"], [507, "index-9"], [508, "index-1"], [508, "index-2"], [508, "index-3"], [509, "index-1"], [509, "index-10"], [509, "index-11"], [509, "index-12"], [509, "index-13"], [509, "index-14"], [509, "index-15"], [509, "index-16"], [509, "index-17"], [509, "index-18"], [509, "index-19"], [509, "index-2"], [509, "index-20"], [509, "index-21"], [509, "index-3"], [509, "index-4"], [509, "index-5"], [509, "index-6"], [509, "index-7"], [509, "index-8"], [509, "index-9"], [510, "index-1"], [510, "index-2"], [510, "index-3"], [511, "index-1"], [511, "index-10"], [511, "index-11"], [511, "index-12"], [511, "index-13"], [511, "index-14"], [511, "index-2"], [511, "index-3"], [511, "index-4"], [511, "index-5"], [511, "index-6"], [511, "index-7"], [511, "index-8"], [511, "index-9"], [512, "index-1"], [512, "index-2"], [512, "index-3"], [513, "index-1"], [513, "index-10"], [513, "index-11"], [513, "index-12"], [513, "index-2"], [513, "index-3"], [513, "index-4"], [513, "index-5"], [513, "index-6"], [513, "index-7"], [513, "index-8"], [513, "index-9"], [514, "index-1"], [514, "index-2"], [514, "index-3"], [515, "index-1"], [515, "index-10"], [515, "index-11"], [515, "index-12"], [515, "index-2"], [515, "index-3"], [515, "index-4"], [515, "index-5"], [515, "index-6"], [515, "index-7"], [515, "index-8"], [515, "index-9"], [516, "index-1"], [516, "index-2"], [516, "index-3"], [517, "index-1"], [517, "index-10"], [517, "index-11"], [517, "index-12"], [517, "index-13"], [517, "index-14"], [517, "index-15"], [517, "index-16"], [517, "index-17"], [517, "index-18"], [517, "index-19"], [517, "index-2"], [517, "index-20"], [517, "index-21"], [517, "index-22"], [517, "index-23"], [517, "index-24"], [517, "index-25"], [517, "index-26"], [517, "index-27"], [517, "index-28"], [517, "index-29"], [517, "index-3"], [517, "index-30"], [517, "index-31"], [517, "index-4"], [517, "index-5"], [517, "index-6"], [517, "index-7"], [517, "index-8"], [517, "index-9"], [518, "index-1"], [518, "index-2"], [518, "index-3"], [519, "index-1"], [519, "index-10"], [519, "index-11"], [519, "index-12"], [519, "index-13"], [519, "index-14"], [519, "index-15"], [519, "index-16"], [519, "index-17"], [519, "index-18"], [519, "index-19"], [519, "index-2"], [519, "index-20"], [519, "index-3"], [519, "index-4"], [519, "index-5"], [519, "index-6"], [519, "index-7"], [519, "index-8"], [519, "index-9"], [520, "index-1"], [520, "index-2"], [520, "index-3"], [521, "index-1"], [521, "index-2"], [521, "index-3"], [521, "index-4"], [521, "index-5"], [521, "index-6"], [521, "index-7"], [521, "index-8"], [523, "index-10"], [523, "index-11"], [523, "index-12"], [523, "index-13"], [523, "index-14"], [523, "index-15"], [523, "index-16"], [523, "index-17"], [523, "index-18"], [523, "index-3"], [523, "index-4"], [523, "index-5"], [523, "index-6"], [523, "index-7"], [523, "index-8"], [523, "index-9"], [525, "index-1"], [525, "index-10"], [525, "index-11"], [525, "index-12"], [525, "index-13"], [525, "index-14"], [525, "index-15"], [525, "index-16"], [525, "index-17"], [525, "index-18"], [525, "index-19"], [525, "index-2"], [525, "index-20"], [525, "index-21"], [525, "index-22"], [525, "index-23"], [525, "index-24"], [525, "index-25"], [525, "index-26"], [525, "index-27"], [525, "index-28"], [525, "index-29"], [525, "index-3"], [525, "index-30"], [525, "index-4"], [525, "index-5"], [525, "index-6"], [525, "index-7"], [525, "index-8"], [525, "index-9"], [526, "index-1"], [526, "index-2"], [526, "index-3"], [527, "index-1"], [527, "index-10"], [527, "index-11"], [527, "index-12"], [527, "index-13"], [527, "index-2"], [527, "index-3"], [527, "index-4"], [527, "index-5"], [527, "index-6"], [527, "index-7"], [527, "index-8"], [527, "index-9"], [528, "index-1"], [528, "index-2"], [528, "index-3"], [529, "index-1"], [529, "index-10"], [529, "index-11"], [529, "index-12"], [529, "index-13"], [529, "index-2"], [529, "index-3"], [529, "index-4"], [529, "index-5"], [529, "index-6"], [529, "index-7"], [529, "index-8"], [529, "index-9"], [531, "index-1"], [531, "index-10"], [531, "index-11"], [531, "index-12"], [531, "index-13"], [531, "index-14"], [531, "index-15"], [531, "index-16"], [531, "index-2"], [531, "index-3"], [531, "index-4"], [531, "index-5"], [531, "index-6"], [531, "index-7"], [531, "index-8"], [531, "index-9"], [532, "index-1"], [532, "index-2"], [532, "index-3"], [533, "index-1"], [533, "index-2"], [533, "index-3"], [533, "index-4"], [533, "index-5"], [533, "index-6"], [533, "index-7"], [534, "index-1"], [534, "index-2"], [534, "index-3"], [535, "index-1"], [535, "index-2"], [535, "index-3"], [535, "index-4"], [535, "index-5"], [535, "index-6"], [537, "index-1"], [537, "index-10"], [537, "index-11"], [537, "index-12"], [537, "index-13"], [537, "index-2"], [537, "index-3"], [537, "index-4"], [537, "index-5"], [537, "index-6"], [537, "index-7"], [537, "index-8"], [537, "index-9"], [539, "index-1"], [539, "index-10"], [539, "index-11"], [539, "index-12"], [539, "index-13"], [539, "index-14"], [539, "index-15"], [539, "index-16"], [539, "index-17"], [539, "index-18"], [539, "index-19"], [539, "index-2"], [539, "index-20"], [539, "index-21"], [539, "index-22"], [539, "index-23"], [539, "index-24"], [539, "index-25"], [539, "index-26"], [539, "index-27"], [539, "index-3"], [539, "index-4"], [539, "index-5"], [539, "index-6"], [539, "index-7"], [539, "index-8"], [539, "index-9"], [541, "index-1"], [541, "index-2"], [541, "index-3"], [541, "index-4"], [541, "index-5"], [542, "index-1"], [542, "index-10"], [542, "index-11"], [542, "index-12"], [542, "index-13"], [542, "index-14"], [542, "index-15"], [542, "index-16"], [542, "index-17"], [542, "index-18"], [542, "index-19"], [542, "index-2"], [542, "index-20"], [542, "index-21"], [542, "index-22"], [542, "index-23"], [542, "index-24"], [542, "index-25"], [542, "index-26"], [542, "index-27"], [542, "index-28"], [542, "index-29"], [542, "index-3"], [542, "index-30"], [542, "index-31"], [542, "index-32"], [542, "index-33"], [542, "index-34"], [542, "index-35"], [542, "index-36"], [542, "index-37"], [542, "index-38"], [542, "index-39"], [542, "index-4"], [542, "index-40"], [542, "index-41"], [542, "index-42"], [542, "index-5"], [542, "index-6"], [542, "index-7"], [542, "index-8"], [542, "index-9"], [543, "index-1"], [543, "index-2"], [543, "index-3"], [544, "index-1"], [544, "index-2"], [544, "index-3"], [544, "index-4"], [544, "index-5"], [544, "index-6"], [544, "index-7"], [544, "index-8"], [545, "index-1"], [545, "index-2"], [545, "index-3"], [545, "index-4"], [545, "index-5"], [545, "index-6"], [546, "index-1"], [546, "index-10"], [546, "index-11"], [546, "index-12"], [546, "index-2"], [546, "index-3"], [546, "index-4"], [546, "index-5"], [546, "index-6"], [546, "index-7"], [546, "index-8"], [546, "index-9"], [547, "index-1"], [547, "index-2"], [547, "index-3"], [548, "index-1"], [548, "index-2"], [548, "index-3"], [548, "index-4"], [548, "index-5"], [548, "index-6"], [549, "index-1"], [549, "index-2"], [549, "index-3"], [550, "index-1"], [550, "index-2"], [550, "index-3"], [550, "index-4"], [550, "index-5"], [550, "index-6"], [550, "index-7"], [551, "index-1"], [551, "index-10"], [551, "index-11"], [551, "index-12"], [551, "index-13"], [551, "index-14"], [551, "index-15"], [551, "index-16"], [551, "index-17"], [551, "index-18"], [551, "index-19"], [551, "index-2"], [551, "index-20"], [551, "index-21"], [551, "index-22"], [551, "index-23"], [551, "index-24"], [551, "index-25"], [551, "index-26"], [551, "index-3"], [551, "index-4"], [551, "index-5"], [551, "index-6"], [551, "index-7"], [551, "index-8"], [551, "index-9"], [552, "index-1"], [552, "index-2"], [552, "index-3"], [553, "index-1"], [553, "index-2"], [553, "index-3"], [553, "index-4"], [553, "index-5"], [553, "index-6"], [553, "index-7"], [553, "index-8"], [554, "index-1"], [554, "index-2"], [554, "index-3"], [555, "index-1"], [555, "index-2"], [555, "index-3"], [555, "index-4"], [555, "index-5"], [555, "index-6"], [555, "index-7"], [555, "index-8"], [556, "index-1"], [556, "index-2"], [556, "index-3"], [557, "index-1"], [557, "index-2"], [557, "index-3"], [557, "index-4"], [557, "index-5"], [557, "index-6"], [557, "index-7"], [557, "index-8"], [557, "index-9"], [558, "index-1"], [558, "index-2"], [558, "index-3"], [559, "index-1"], [559, "index-2"], [559, "index-3"], [559, "index-4"], [559, "index-5"], [559, "index-6"], [559, "index-7"], [559, "index-8"], [561, "index-1"], [561, "index-2"], [561, "index-3"], [561, "index-4"], [561, "index-5"], [561, "index-6"], [561, "index-7"], [561, "index-8"], [562, "index-1"], [562, "index-2"], [562, "index-3"], [563, "index-1"], [563, "index-10"], [563, "index-2"], [563, "index-3"], [563, "index-4"], [563, "index-5"], [563, "index-6"], [563, "index-7"], [563, "index-8"], [563, "index-9"], [564, "index-2"], [564, "index-3"], [564, "index-4"], [564, "index-5"], [567, "index-1"], [567, "index-2"], [567, "index-3"], [567, "index-4"], [568, "index-1"], [568, "index-10"], [568, "index-11"], [568, "index-12"], [568, "index-13"], [568, "index-14"], [568, "index-15"], [568, "index-16"], [568, "index-17"], [568, "index-18"], [568, "index-2"], [568, "index-3"], [568, "index-4"], [568, "index-5"], [568, "index-6"], [568, "index-7"], [568, "index-8"], [568, "index-9"], [569, "index-1"], [569, "index-2"], [569, "index-3"], [569, "index-4"], [570, "index-1"], [570, "index-2"], [570, "index-3"], [571, "index-1"], [571, "index-10"], [571, "index-11"], [571, "index-12"], [571, "index-13"], [571, "index-14"], [571, "index-15"], [571, "index-16"], [571, "index-17"], [571, "index-18"], [571, "index-19"], [571, "index-2"], [571, "index-20"], [571, "index-21"], [571, "index-22"], [571, "index-23"], [571, "index-24"], [571, "index-25"], [571, "index-3"], [571, "index-4"], [571, "index-5"], [571, "index-6"], [571, "index-7"], [571, "index-8"], [571, "index-9"], [572, "index-1"], [572, "index-2"], [572, "index-3"], [573, "index-1"], [573, "index-10"], [573, "index-11"], [573, "index-12"], [573, "index-13"], [573, "index-14"], [573, "index-15"], [573, "index-16"], [573, "index-17"], [573, "index-18"], [573, "index-2"], [573, "index-3"], [573, "index-4"], [573, "index-5"], [573, "index-6"], [573, "index-7"], [573, "index-8"], [573, "index-9"]], "compiled_partition": [[3, "index-1"], [3, "index-2"]], "dnnl::graph::compiled_partition": [[3, "index-0"]], "execute": [[3, "index-5"], [351, "index-4"], [352, "index-2"], [353, "index-17"], [354, "index-13"], [537, "index-9"], [545, "index-5"], [545, "index-6"], [568, "index-14"], [568, "index-15"], [569, "index-4"]], "get_inplace_ports": [[3, "index-4"]], "query_logical_tensor": [[3, "index-3"]], "add_op": [[4, "index-5"]], "dnnl::graph::graph": [[4, "index-0"]], "finalize": [[4, "index-6"], [568, "index-8"]], "get_fpmath_mode": [[4, "index-4"], [539, "index-5"], [539, "index-6"]], "get_partitions": [[4, "index-8"]], "graph": [[4, "index-1"], [4, "index-2"], [337, "index-0"]], "is_finalized": [[4, "index-7"]], "set_fpmath_mode": [[4, "index-3"], [539, "index-7"]], "dim": [[5, "index-1"], [523, "index-1"]], "dims": [[5, "index-2"], [211, "index-44"], [483, "index-3"], [523, "index-2"]], "dnnl::graph::logical_tensor": [[5, "index-0"]], "get_data_type": [[5, "index-14"], [525, "index-20"]], "get_dims": [[5, "index-12"], [525, "index-22"]], "get_id": [[5, "index-13"], [7, "index-5"]], "get_layout_id": [[5, "index-17"]], "get_layout_type": [[5, "index-16"]], "get_mem_size": [[5, "index-19"]], "get_property_type": [[5, "index-15"]], "get_strides": [[5, "index-18"], [463, "index-10"], [465, "index-13"], [467, "index-13"], [469, "index-10"], [471, "index-13"], [473, "index-13"], [525, "index-13"], [527, "index-9"], [529, "index-9"], [542, "index-4"]], "is_equal": [[5, "index-20"]], "logical_tensor": [[5, "index-10"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"]], "operator=": [[5, "index-11"], [492, "index-5"], [492, "index-6"]], "typedef": [[5, "index-1"], [5, "index-2"], [289, "index-1"], [289, "index-2"], [289, "index-3"], [289, "index-4"], [296, "index-1"], [296, "index-2"], [299, "index-1"], [307, "index-1"], [307, "index-2"], [307, "index-3"], [307, "index-4"], [313, "index-1"], [313, "index-2"], [313, "index-3"], [313, "index-4"], [319, "index-1"], [322, "index-1"], [322, "index-2"], [326, "index-1"], [326, "index-2"], [327, "index-1"], [327, "index-2"], [327, "index-3"], [327, "index-4"], [332, "index-1"], [332, "index-2"], [332, "index-3"], [332, "index-4"], [333, "index-1"], [333, "index-2"], [337, "index-1"], [337, "index-2"], [340, "index-1"], [340, "index-2"], [341, "index-1"], [341, "index-2"], [342, "index-1"], [342, "index-2"], [344, "index-1"], [344, "index-2"], [345, "index-1"], [345, "index-2"], [523, "index-1"], [523, "index-2"]], "add_input": [[6, "index-3"]], "add_inputs": [[6, "index-4"]], "add_output": [[6, "index-5"]], "add_outputs": [[6, "index-6"]], "dnnl::graph::op": [[6, "index-0"]], "op": [[6, "index-1"], [6, "index-2"], [341, "index-0"]], "set_attr": [[6, "index-10"], [6, "index-11"], [6, "index-12"], [6, "index-7"], [6, "index-8"], [6, "index-9"]], "compile": [[7, "index-6"]], "dnnl::graph::partition": [[7, "index-0"]], "get_engine_kind": [[7, "index-10"]], "get_input_ports": [[7, "index-8"]], "get_ops": [[7, "index-4"]], "get_ops_num": [[7, "index-3"]], "get_output_ports": [[7, "index-9"]], "is_supported": [[7, "index-7"]], "partition": [[7, "index-1"], [7, "index-2"], [342, "index-0"]], "dnnl::graph::tensor": [[8, "index-0"]], "get_data_handle": [[8, "index-4"], [523, "index-11"]], "get_engine": [[8, "index-6"], [523, "index-10"], [542, "index-1"], [561, "index-3"]], "get_logical_tensor": [[8, "index-7"]], "set_data_handle": [[8, "index-5"], [523, "index-12"]], "tensor": [[8, "index-1"], [8, "index-2"], [8, "index-3"], [345, "index-0"]], "simple_memory_pool_t": [[9, "index-0"]], "primitive attributes": [[10, "index-0"]], "page": [[10, "index-0"], [11, "index-0"], [12, "index-0"], [13, "index-0"], [14, "index-0"], [15, "index-0"], [16, "index-0"], [17, "index-0"], [18, "index-0"], [19, "index-0"], [20, "index-0"], [21, "index-0"], [22, "index-0"], [23, "index-0"], [24, "index-0"], [25, "index-0"], [26, "index-0"], [27, "index-0"], [28, "index-0"], [29, "index-0"], [30, "index-0"], [31, "index-0"], [32, "index-0"], [33, "index-0"], [34, "index-0"], [35, "index-0"], [36, "index-0"], [37, "index-0"], [38, "index-0"], [39, "index-0"], [40, "index-0"], [41, "index-0"], [42, "index-0"], [43, "index-0"], [44, "index-0"], [45, "index-0"], [46, "index-0"], [47, "index-0"], [48, "index-0"], [49, "index-0"], [50, "index-0"], [51, "index-0"], [52, "index-0"], [53, "index-0"], [54, "index-0"], [55, "index-0"], [56, "index-0"], [57, "index-0"], [58, "index-0"], [59, "index-0"], [60, "index-0"], [61, "index-0"], [62, "index-0"], [63, "index-0"], [64, "index-0"], [65, "index-0"], [66, "index-0"], [67, "index-0"], [68, "index-0"], [69, "index-0"], [70, "index-0"], [71, "index-0"], [72, "index-0"], [73, "index-0"], [74, "index-0"], [75, "index-0"], [76, "index-0"], [77, "index-0"], [78, "index-0"], [79, "index-0"], [80, "index-0"], [81, "index-0"], [82, "index-0"], [83, "index-0"], [84, "index-0"], [85, "index-0"], [86, "index-0"], [87, "index-0"], [88, "index-0"], [89, "index-0"], [90, "index-0"], [91, "index-0"], [92, "index-0"], [93, "index-0"], [94, "index-0"], [95, "index-0"], [96, "index-0"], [97, "index-0"], [98, "index-0"], [99, "index-0"], [100, "index-0"], [101, "index-0"], [102, "index-0"], [103, "index-0"], [104, "index-0"], [105, "index-0"], [106, "index-0"], [107, "index-0"], [108, "index-0"], [109, "index-0"], [110, "index-0"], [111, "index-0"], [112, "index-0"], [113, "index-0"], [114, "index-0"], [115, "index-0"], [116, "index-0"], [117, "index-0"], [118, "index-0"], [119, "index-0"], [120, "index-0"], [121, "index-0"], [122, "index-0"], [123, "index-0"], [124, "index-0"], [125, "index-0"], [126, "index-0"], [127, "index-0"], [128, "index-0"], [129, "index-0"], [130, "index-0"], [131, "index-0"], [132, "index-0"], [133, "index-0"], [134, "index-0"], [135, "index-0"], [136, "index-0"], [137, "index-0"], [138, "index-0"], [139, "index-0"], [140, "index-0"], [141, "index-0"], [142, "index-0"], [143, "index-0"], [144, "index-0"], [145, "index-0"], [146, "index-0"], [147, "index-0"], [148, "index-0"], [149, "index-0"], [150, "index-0"], [151, "index-0"], [152, "index-0"], [153, "index-0"], [154, "index-0"], [155, "index-0"], [156, "index-0"], [157, "index-0"], [158, "index-0"], [159, "index-0"], [160, "index-0"], [161, "index-0"], [162, "index-0"], [163, "index-0"], [164, "index-0"], [165, "index-0"], [166, "index-0"], [167, "index-0"], [361, "index-0"], [363, "index-0"], [365, "index-0"], [367, "index-0"], [369, "index-0"], [370, "index-0"], [371, "index-0"], [372, "index-0"], [373, "index-0"], [374, "index-0"], [376, "index-0"], [378, "index-0"], [379, "index-0"], [380, "index-0"], [381, "index-0"], [382, "index-0"], [384, "index-0"], [385, "index-0"], [386, "index-0"], [387, "index-0"], [389, "index-0"], [390, "index-0"], [391, "index-0"], [393, "index-0"], [395, "index-0"], [396, "index-0"], [397, "index-0"], [398, "index-0"], [399, "index-0"], [400, "index-0"], [401, "index-0"], [402, "index-0"], [403, "index-0"], [405, "index-0"], [407, "index-0"], [409, "index-0"], [411, "index-0"], [413, "index-0"], [414, "index-0"], [416, "index-0"], [418, "index-0"], [420, "index-0"], [421, "index-0"], [422, "index-0"], [424, "index-0"], [426, "index-0"], [428, "index-0"], [430, "index-0"], [432, "index-0"], [433, "index-0"], [435, "index-0"], [437, "index-0"], [439, "index-0"], [440, "index-0"], [441, "index-0"], [443, "index-0"]], "primitive attributes: accumulation mode": [[11, "index-0"]], "primitive attributes: deterministic": [[12, "index-0"]], "primitive attributes: dropout": [[13, "index-0"]], "primitive attributes: floating-point math mode": [[14, "index-0"]], "primitive attributes: post-ops": [[15, "index-0"]], "primitive attributes: quantization": [[16, "index-0"]], "primitive attributes: rounding mode": [[17, "index-0"]], "primitive attributes: scratchpad": [[18, "index-0"]], "basic concepts": [[19, "index-0"], [37, "index-0"], [161, "index-0"]], "batch normalization": [[20, "index-0"], [290, "index-0"]], "benchmarking performance": [[21, "index-0"]], "binary": [[22, "index-0"], [205, "index-13"], [291, "index-0"], [457, "index-1"], [457, "index-2"], [457, "index-3"]], "build from source": [[23, "index-0"]], "build options": [[24, "index-0"]], "api": [[25, "index-0"]], "concat": [[26, "index-0"], [69, "index-0"], [205, "index-4"], [294, "index-0"], [460, "index-1"], [460, "index-2"], [460, "index-3"]], "constant tensor cache": [[27, "index-0"], [335, "index-0"]], "naming conventions": [[28, "index-0"]], "convolution": [[29, "index-0"], [70, "index-0"], [205, "index-6"], [295, "index-0"]], "cpu dispatcher control": [[30, "index-0"]], "cpu isa hints": [[31, "index-0"]], "data types": [[32, "index-0"], [296, "index-0"]], "dpc++ interoperability": [[33, "index-0"]], "eltwise": [[34, "index-0"], [205, "index-8"], [298, "index-0"]], "examples": [[35, "index-0"]], "experimental features": [[36, "index-0"]], "graph compiler": [[38, "index-0"]], "graph dump": [[39, "index-0"]], "fusion patterns": [[40, "index-0"]], "gated multi-layer perceptron (gated-mlp)": [[41, "index-0"]], "grouped query attention (gqa)": [[42, "index-0"]], "low precision": [[43, "index-0"]], "scaled dot-product attention (sdpa)": [[44, "index-0"]], "sdpa with compressed key and value": [[45, "index-0"]], "group normalization": [[46, "index-0"], [301, "index-0"]], "inference": [[47, "index-0"]], "inference and training aspects": [[48, "index-0"]], "int8 inference": [[49, "index-0"]], "inner product": [[50, "index-0"], [302, "index-0"]], "inspecting jit code": [[51, "index-0"]], "nuances of int8 computations": [[52, "index-0"]], "layer normalization": [[53, "index-0"], [304, "index-0"]], "linking to the library": [[54, "index-0"]], "local response normalization (lrn)": [[55, "index-0"]], "matrix multiplication": [[56, "index-0"], [306, "index-0"]], "abs": [[57, "index-0"]], "absbackward": [[58, "index-0"]], "add": [[59, "index-0"]], "avgpool": [[60, "index-0"]], "avgpoolbackward": [[61, "index-0"]], "batchnormforwardtraining": [[62, "index-0"]], "batchnorminference": [[63, "index-0"]], "batchnormtrainingbackward": [[64, "index-0"]], "biasadd": [[65, "index-0"]], "biasaddbackward": [[66, "index-0"]], "clamp": [[67, "index-0"]], "clampbackward": [[68, "index-0"]], "convolutionbackwarddata": [[71, "index-0"]], "convolutionbackwardweights": [[72, "index-0"]], "convtranspose": [[73, "index-0"]], "convtransposebackwarddata": [[74, "index-0"]], "convtransposebackwardweights": [[75, "index-0"]], "dequantize": [[76, "index-0"]], "divide": [[77, "index-0"]], "dynamicdequantize": [[78, "index-0"]], "dynamicquantize": [[79, "index-0"]], "elu": [[80, "index-0"]], "elubackward": [[81, "index-0"]], "end": [[82, "index-0"], [188, "index-44"]], "exp": [[83, "index-0"]], "gelu": [[84, "index-0"]], "gelubackward": [[85, "index-0"]], "genindex": [[86, "index-0"]], "greaterequal": [[87, "index-0"]], "groupnorm": [[88, "index-0"]], "hardsigmoid": [[89, "index-0"]], "hardsigmoidbackward": [[90, "index-0"]], "hardswish": [[91, "index-0"]], "hardswishbackward": [[92, "index-0"]], "interpolate": [[93, "index-0"]], "interpolatebackward": [[94, "index-0"]], "layernorm": [[95, "index-0"]], "layernormbackward": [[96, "index-0"]], "leakyrelu": [[97, "index-0"]], "log": [[98, "index-0"]], "logsoftmax": [[99, "index-0"]], "logsoftmaxbackward": [[100, "index-0"]], "matmul": [[101, "index-0"], [205, "index-14"], [520, "index-1"], [520, "index-2"], [520, "index-3"]], "maximum": [[102, "index-0"]], "maxpool": [[103, "index-0"]], "maxpoolbackward": [[104, "index-0"]], "minimum": [[105, "index-0"]], "mish": [[106, "index-0"]], "mishbackward": [[107, "index-0"]], "multiply": [[108, "index-0"]], "pow": [[109, "index-0"]], "prelu": [[110, "index-0"], [147, "index-0"], [205, "index-18"], [310, "index-0"]], "prelubackward": [[111, "index-0"]], "quantize": [[112, "index-0"]], "reciprocal": [[113, "index-0"]], "reducel1": [[114, "index-0"]], "reducel2": [[115, "index-0"]], "reducemax": [[116, "index-0"]], "reducemean": [[117, "index-0"]], "reducemin": [[118, "index-0"]], "reduceprod": [[119, "index-0"]], "reducesum": [[120, "index-0"]], "relu": [[121, "index-0"]], "relubackward": [[122, "index-0"]], "reorder": [[123, "index-0"], [151, "index-0"], [205, "index-2"], [316, "index-0"], [545, "index-1"], [545, "index-2"], [545, "index-3"], [545, "index-4"]], "round": [[124, "index-0"]], "select": [[125, "index-0"]], "sigmoid": [[126, "index-0"]], "sigmoidbackward": [[127, "index-0"]], "softmax": [[128, "index-0"], [155, "index-0"], [205, "index-19"], [321, "index-0"]], "softmaxbackward": [[129, "index-0"]], "softplus": [[130, "index-0"]], "softplusbackward": [[131, "index-0"]], "sqrt": [[132, "index-0"]], "sqrtbackward": [[133, "index-0"]], "square": [[134, "index-0"]], "squareddifference": [[135, "index-0"]], "staticreshape": [[136, "index-0"]], "statictranspose": [[137, "index-0"]], "subtract": [[138, "index-0"]], "tanh": [[139, "index-0"]], "tanhbackward": [[140, "index-0"]], "typecast": [[141, "index-0"]], "wildcard": [[142, "index-0"]], "opencl interoperability": [[143, "index-0"]], "configuring onednn for benchmarking": [[144, "index-0"]], "persistent cache": [[145, "index-0"]], "pooling": [[146, "index-0"], [205, "index-16"], [309, "index-0"]], "primitive cache": [[148, "index-0"], [311, "index-0"]], "profiling onednn performance": [[149, "index-0"]], "reduction": [[150, "index-0"], [205, "index-17"], [315, "index-0"], [543, "index-1"], [543, "index-2"], [543, "index-3"]], "resampling": [[152, "index-0"], [205, "index-15"], [317, "index-0"]], "rnn": [[153, "index-0"], [205, "index-12"], [318, "index-0"]], "shuffle": [[154, "index-0"], [205, "index-3"], [320, "index-0"]], "sum": [[156, "index-0"], [205, "index-5"], [323, "index-0"], [562, "index-1"], [562, "index-2"], [562, "index-3"]], "using onednn with threadpool-based threading": [[157, "index-0"]], "training": [[158, "index-0"]], "bfloat16 training": [[159, "index-0"]], "transitioning from intel mkl-dnn to onednn": [[160, "index-0"]], "batch-reduce general matrix multiplication": [[162, "index-0"]], "data transformation": [[163, "index-0"]], "understanding memory formats": [[164, "index-0"]], "verbose mode": [[165, "index-0"]], "verbose message catalogue": [[166, "index-0"]], "profiling with vtune(tm) profiler": [[167, "index-0"]], "api_kind": [[168, "index-0"]], "enum": [[168, "index-0"], [169, "index-0"], [170, "index-0"], [171, "index-0"], [172, "index-0"], [173, "index-0"], [174, "index-0"], [175, "index-0"], [176, "index-0"], [177, "index-0"], [178, "index-0"], [179, "index-0"], [180, "index-0"], [181, "index-0"], [182, "index-0"], [183, "index-0"], [184, "index-0"], [185, "index-0"], [186, "index-0"], [187, "index-0"], [188, "index-0"], [189, "index-0"], [190, "index-0"], [191, "index-0"], [192, "index-0"], [193, "index-0"], [194, "index-0"], [195, "index-0"], [196, "index-0"], [197, "index-0"], [198, "index-0"], [199, "index-0"], [200, "index-0"], [201, "index-0"], [202, "index-0"], [203, "index-0"], [204, "index-0"], [205, "index-0"], [206, "index-0"], [207, "index-0"], [208, "index-0"], [209, "index-0"], [210, "index-0"], [211, "index-0"], [212, "index-0"], [213, "index-0"], [214, "index-0"], [215, "index-0"], [216, "index-0"], [217, "index-0"], [218, "index-0"], [219, "index-0"], [220, "index-0"], [221, "index-0"], [222, "index-0"], [223, "index-0"], [224, "index-0"], [225, "index-0"], [226, "index-0"], [227, "index-0"], [228, "index-0"]], "accumulation_mode": [[169, "index-0"]], "any": [[169, "index-3"], [178, "index-1"], [182, "index-5"], [186, "index-2"], [197, "index-2"], [198, "index-2"]], "enumvalue": [[169, "index-1"], [169, "index-2"], [169, "index-3"], [169, "index-4"], [169, "index-5"], [169, "index-6"], [170, "index-1"], [170, "index-2"], [170, "index-3"], [170, "index-4"], [170, "index-5"], [170, "index-6"], [171, "index-1"], [171, "index-10"], [171, "index-11"], [171, "index-12"], [171, "index-13"], [171, "index-14"], [171, "index-15"], [171, "index-16"], [171, "index-17"], [171, "index-18"], [171, "index-19"], [171, "index-2"], [171, "index-20"], [171, "index-21"], [171, "index-22"], [171, "index-23"], [171, "index-24"], [171, "index-25"], [171, "index-26"], [171, "index-27"], [171, "index-28"], [171, "index-29"], [171, "index-3"], [171, "index-30"], [171, "index-31"], [171, "index-32"], [171, "index-33"], [171, "index-34"], [171, "index-35"], [171, "index-36"], [171, "index-37"], [171, "index-38"], [171, "index-39"], [171, "index-4"], [171, "index-40"], [171, "index-41"], [171, "index-42"], [171, "index-43"], [171, "index-44"], [171, "index-45"], [171, "index-46"], [171, "index-47"], [171, "index-48"], [171, "index-49"], [171, "index-5"], [171, "index-50"], [171, "index-51"], [171, "index-52"], [171, "index-53"], [171, "index-54"], [171, "index-55"], [171, "index-56"], [171, "index-57"], [171, "index-58"], [171, "index-59"], [171, "index-6"], [171, "index-60"], [171, "index-61"], [171, "index-62"], [171, "index-63"], [171, "index-64"], [171, "index-65"], [171, "index-66"], [171, "index-67"], [171, "index-68"], [171, "index-69"], [171, "index-7"], [171, "index-70"], [171, "index-8"], [171, "index-9"], [172, "index-1"], [172, "index-10"], [172, "index-11"], [172, "index-12"], [172, "index-13"], [172, "index-14"], [172, "index-15"], [172, "index-16"], [172, "index-17"], [172, "index-18"], [172, "index-19"], [172, "index-2"], [172, "index-20"], [172, "index-21"], [172, "index-22"], [172, "index-23"], [172, "index-24"], [172, "index-25"], [172, "index-26"], [172, "index-27"], [172, "index-28"], [172, "index-29"], [172, "index-3"], [172, "index-30"], [172, "index-31"], [172, "index-32"], [172, "index-33"], [172, "index-34"], [172, "index-35"], [172, "index-36"], [172, "index-37"], [172, "index-38"], [172, "index-39"], [172, "index-4"], [172, "index-40"], [172, "index-41"], [172, "index-42"], [172, "index-43"], [172, "index-44"], [172, "index-45"], [172, "index-46"], [172, "index-47"], [172, "index-48"], [172, "index-49"], [172, "index-5"], [172, "index-50"], [172, "index-51"], [172, "index-52"], [172, "index-53"], [172, "index-54"], [172, "index-55"], [172, "index-56"], [172, "index-57"], [172, "index-58"], [172, "index-59"], [172, "index-6"], [172, "index-60"], [172, "index-61"], [172, "index-62"], [172, "index-63"], [172, "index-64"], [172, "index-65"], [172, "index-66"], [172, "index-67"], [172, "index-68"], [172, "index-69"], [172, "index-7"], [172, "index-70"], [172, "index-71"], [172, "index-8"], [172, "index-9"], [173, "index-1"], [173, "index-10"], [173, "index-11"], [173, "index-12"], [173, "index-13"], [173, "index-14"], [173, "index-15"], [173, "index-2"], [173, "index-3"], [173, "index-4"], [173, "index-5"], [173, "index-6"], [173, "index-7"], [173, "index-8"], [173, "index-9"], [174, "index-1"], [174, "index-2"], [175, "index-1"], [175, "index-2"], [176, "index-1"], [176, "index-10"], [176, "index-11"], [176, "index-12"], [176, "index-13"], [176, "index-14"], [176, "index-15"], [176, "index-2"], [176, "index-3"], [176, "index-4"], [176, "index-5"], [176, "index-6"], [176, "index-7"], [176, "index-8"], [176, "index-9"], [177, "index-1"], [177, "index-10"], [177, "index-11"], [177, "index-12"], [177, "index-13"], [177, "index-14"], [177, "index-15"], [177, "index-16"], [177, "index-17"], [177, "index-2"], [177, "index-3"], [177, "index-4"], [177, "index-5"], [177, "index-6"], [177, "index-7"], [177, "index-8"], [177, "index-9"], [178, "index-1"], [178, "index-2"], [178, "index-3"], [179, "index-1"], [179, "index-2"], [179, "index-3"], [180, "index-1"], [180, "index-2"], [180, "index-3"], [180, "index-4"], [180, "index-5"], [180, "index-6"], [181, "index-1"], [181, "index-10"], [181, "index-100"], [181, "index-101"], [181, "index-102"], [181, "index-103"], [181, "index-104"], [181, "index-105"], [181, "index-106"], [181, "index-107"], [181, "index-108"], [181, "index-109"], [181, "index-11"], [181, "index-110"], [181, "index-111"], [181, "index-112"], [181, "index-113"], [181, "index-114"], [181, "index-115"], [181, "index-116"], [181, "index-117"], [181, "index-118"], [181, "index-119"], [181, "index-12"], [181, "index-120"], [181, "index-121"], [181, "index-122"], [181, "index-123"], [181, "index-124"], [181, "index-125"], [181, "index-126"], [181, "index-127"], [181, "index-128"], [181, "index-129"], [181, "index-13"], [181, "index-130"], [181, "index-131"], [181, "index-132"], [181, "index-133"], [181, "index-134"], [181, "index-135"], [181, "index-136"], [181, "index-137"], [181, "index-138"], [181, "index-14"], [181, "index-15"], [181, "index-16"], [181, "index-17"], [181, "index-18"], [181, "index-19"], [181, "index-2"], [181, "index-20"], [181, "index-21"], [181, "index-22"], [181, "index-23"], [181, "index-24"], [181, "index-25"], [181, "index-26"], [181, "index-27"], [181, "index-28"], [181, "index-29"], [181, "index-3"], [181, "index-30"], [181, "index-31"], [181, "index-32"], [181, "index-33"], [181, "index-34"], [181, "index-35"], [181, "index-36"], [181, "index-37"], [181, "index-38"], [181, "index-39"], [181, "index-4"], [181, "index-40"], [181, "index-41"], [181, "index-42"], [181, "index-43"], [181, "index-44"], [181, "index-45"], [181, "index-46"], [181, "index-47"], [181, "index-48"], [181, "index-49"], [181, "index-5"], [181, "index-50"], [181, "index-51"], [181, "index-52"], [181, "index-53"], [181, "index-54"], [181, "index-55"], [181, "index-56"], [181, "index-57"], [181, "index-58"], [181, "index-59"], [181, "index-6"], [181, "index-60"], [181, "index-61"], [181, "index-62"], [181, "index-63"], [181, "index-64"], [181, "index-65"], [181, "index-66"], [181, "index-67"], [181, "index-68"], [181, "index-69"], [181, "index-7"], [181, "index-70"], [181, "index-71"], [181, "index-72"], [181, "index-73"], [181, "index-74"], [181, "index-75"], [181, "index-76"], [181, "index-77"], [181, "index-78"], [181, "index-79"], [181, "index-8"], [181, "index-80"], [181, "index-81"], [181, "index-82"], [181, "index-83"], [181, "index-84"], [181, "index-85"], [181, "index-86"], [181, "index-87"], [181, "index-88"], [181, "index-89"], [181, "index-9"], [181, "index-90"], [181, "index-91"], [181, "index-92"], [181, "index-93"], [181, "index-94"], [181, "index-95"], [181, "index-96"], [181, "index-97"], [181, "index-98"], [181, "index-99"], [182, "index-1"], [182, "index-2"], [182, "index-3"], [182, "index-4"], [182, "index-5"], [183, "index-1"], [183, "index-2"], [183, "index-3"], [183, "index-4"], [183, "index-5"], [184, "index-1"], [184, "index-2"], [184, "index-3"], [184, "index-4"], [185, "index-1"], [185, "index-10"], [185, "index-11"], [185, "index-2"], [185, "index-3"], [185, "index-4"], [185, "index-5"], [185, "index-6"], [185, "index-7"], [185, "index-8"], [185, "index-9"], [186, "index-1"], [186, "index-2"], [186, "index-3"], [186, "index-4"], [187, "index-1"], [187, "index-2"], [187, "index-3"], [188, "index-1"], [188, "index-10"], [188, "index-11"], [188, "index-12"], [188, "index-13"], [188, "index-14"], [188, "index-15"], [188, "index-16"], [188, "index-17"], [188, "index-18"], [188, "index-19"], [188, "index-2"], [188, "index-20"], [188, "index-21"], [188, "index-22"], [188, "index-23"], [188, "index-24"], [188, "index-25"], [188, "index-26"], [188, "index-27"], [188, "index-28"], [188, "index-29"], [188, "index-3"], [188, "index-30"], [188, "index-31"], [188, "index-32"], [188, "index-33"], [188, "index-34"], [188, "index-35"], [188, "index-36"], [188, "index-37"], [188, "index-38"], [188, "index-39"], [188, "index-4"], [188, "index-40"], [188, "index-41"], [188, "index-42"], [188, "index-43"], [188, "index-44"], [188, "index-5"], [188, "index-6"], [188, "index-7"], [188, "index-8"], [188, "index-9"], [189, "index-1"], [189, "index-10"], [189, "index-11"], [189, "index-12"], [189, "index-13"], [189, "index-14"], [189, "index-15"], [189, "index-16"], [189, "index-17"], [189, "index-18"], [189, "index-19"], [189, "index-2"], [189, "index-20"], [189, "index-21"], [189, "index-22"], [189, "index-23"], [189, "index-24"], [189, "index-25"], [189, "index-26"], [189, "index-27"], [189, "index-28"], [189, "index-29"], [189, "index-3"], [189, "index-30"], [189, "index-31"], [189, "index-32"], [189, "index-33"], [189, "index-34"], [189, "index-35"], [189, "index-36"], [189, "index-37"], [189, "index-38"], [189, "index-39"], [189, "index-4"], [189, "index-40"], [189, "index-41"], [189, "index-42"], [189, "index-43"], [189, "index-44"], [189, "index-5"], [189, "index-6"], [189, "index-7"], [189, "index-8"], [189, "index-9"], [192, "index-1"], [192, "index-2"], [193, "index-1"], [193, "index-2"], [194, "index-1"], [194, "index-10"], [194, "index-11"], [194, "index-2"], [194, "index-3"], [194, "index-4"], [194, "index-5"], [194, "index-6"], [194, "index-7"], [194, "index-8"], [194, "index-9"], [195, "index-1"], [195, "index-2"], [195, "index-3"], [196, "index-1"], [196, "index-10"], [196, "index-11"], [196, "index-12"], [196, "index-13"], [196, "index-14"], [196, "index-2"], [196, "index-3"], [196, "index-4"], [196, "index-5"], [196, "index-6"], [196, "index-7"], [196, "index-8"], [196, "index-9"], [197, "index-1"], [197, "index-2"], [197, "index-3"], [197, "index-4"], [197, "index-5"], [198, "index-1"], [198, "index-10"], [198, "index-11"], [198, "index-12"], [198, "index-13"], [198, "index-14"], [198, "index-15"], [198, "index-16"], [198, "index-17"], [198, "index-18"], [198, "index-19"], [198, "index-2"], [198, "index-20"], [198, "index-21"], [198, "index-22"], [198, "index-23"], [198, "index-24"], [198, "index-25"], [198, "index-26"], [198, "index-27"], [198, "index-28"], [198, "index-29"], [198, "index-3"], [198, "index-30"], [198, "index-31"], [198, "index-32"], [198, "index-33"], [198, "index-34"], [198, "index-35"], [198, "index-36"], [198, "index-37"], [198, "index-38"], [198, "index-39"], [198, "index-4"], [198, "index-40"], [198, "index-41"], [198, "index-42"], [198, "index-43"], [198, "index-44"], [198, "index-45"], [198, "index-46"], [198, "index-47"], [198, "index-48"], [198, "index-49"], [198, "index-5"], [198, "index-50"], [198, "index-51"], [198, "index-52"], [198, "index-53"], [198, "index-54"], [198, "index-55"], [198, "index-56"], [198, "index-57"], [198, "index-58"], [198, "index-59"], [198, "index-6"], [198, "index-60"], [198, "index-61"], [198, "index-62"], [198, "index-63"], [198, "index-64"], [198, "index-65"], [198, "index-66"], [198, "index-67"], [198, "index-68"], [198, "index-69"], [198, "index-7"], [198, "index-70"], [198, "index-71"], [198, "index-72"], [198, "index-73"], [198, "index-74"], [198, "index-75"], [198, "index-76"], [198, "index-77"], [198, "index-78"], [198, "index-79"], [198, "index-8"], [198, "index-80"], [198, "index-81"], [198, "index-82"], [198, "index-83"], [198, "index-84"], [198, "index-85"], [198, "index-86"], [198, "index-87"], [198, "index-88"], [198, "index-89"], [198, "index-9"], [198, "index-90"], [198, "index-91"], [198, "index-92"], [198, "index-93"], [198, "index-94"], [198, "index-95"], [199, "index-1"], [199, "index-2"], [199, "index-3"], [199, "index-4"], [200, "index-1"], [200, "index-2"], [200, "index-3"], [200, "index-4"], [200, "index-5"], [200, "index-6"], [201, "index-1"], [201, "index-2"], [201, "index-3"], [201, "index-4"], [201, "index-5"], [201, "index-6"], [202, "index-1"], [202, "index-2"], [203, "index-1"], [203, "index-2"], [204, "index-1"], [204, "index-2"], [204, "index-3"], [204, "index-4"], [205, "index-1"], [205, "index-10"], [205, "index-11"], [205, "index-12"], [205, "index-13"], [205, "index-14"], [205, "index-15"], [205, "index-16"], [205, "index-17"], [205, "index-18"], [205, "index-19"], [205, "index-2"], [205, "index-20"], [205, "index-21"], [205, "index-3"], [205, "index-4"], [205, "index-5"], [205, "index-6"], [205, "index-7"], [205, "index-8"], [205, "index-9"], [206, "index-1"], [206, "index-10"], [206, "index-11"], [206, "index-12"], [206, "index-13"], [206, "index-14"], [206, "index-15"], [206, "index-16"], [206, "index-17"], [206, "index-18"], [206, "index-19"], [206, "index-2"], [206, "index-20"], [206, "index-21"], [206, "index-22"], [206, "index-23"], [206, "index-3"], [206, "index-4"], [206, "index-5"], [206, "index-6"], [206, "index-7"], [206, "index-8"], [206, "index-9"], [207, "index-1"], [207, "index-2"], [208, "index-1"], [208, "index-2"], [209, "index-1"], [209, "index-2"], [209, "index-3"], [209, "index-4"], [209, "index-5"], [209, "index-6"], [209, "index-7"], [209, "index-8"], [210, "index-1"], [210, "index-2"], [210, "index-3"], [210, "index-4"], [210, "index-5"], [210, "index-6"], [210, "index-7"], [210, "index-8"], [211, "index-1"], [211, "index-10"], [211, "index-11"], [211, "index-12"], [211, "index-13"], [211, "index-14"], [211, "index-15"], [211, "index-16"], [211, "index-17"], [211, "index-18"], [211, "index-19"], [211, "index-2"], [211, "index-20"], [211, "index-21"], [211, "index-22"], [211, "index-23"], [211, "index-24"], [211, "index-25"], [211, "index-26"], [211, "index-27"], [211, "index-28"], [211, "index-29"], [211, "index-3"], [211, "index-30"], [211, "index-31"], [211, "index-32"], [211, "index-33"], [211, "index-34"], [211, "index-35"], [211, "index-36"], [211, "index-37"], [211, "index-38"], [211, "index-39"], [211, "index-4"], [211, "index-40"], [211, "index-41"], [211, "index-42"], [211, "index-43"], [211, "index-44"], [211, "index-45"], [211, "index-46"], [211, "index-47"], [211, "index-48"], [211, "index-49"], [211, "index-5"], [211, "index-50"], [211, "index-51"], [211, "index-52"], [211, "index-53"], [211, "index-54"], [211, "index-55"], [211, "index-6"], [211, "index-7"], [211, "index-8"], [211, "index-9"], [212, "index-1"], [212, "index-10"], [212, "index-11"], [212, "index-12"], [212, "index-13"], [212, "index-14"], [212, "index-15"], [212, "index-16"], [212, "index-17"], [212, "index-18"], [212, "index-19"], [212, "index-2"], [212, "index-20"], [212, "index-21"], [212, "index-22"], [212, "index-23"], [212, "index-24"], [212, "index-25"], [212, "index-26"], [212, "index-27"], [212, "index-28"], [212, "index-29"], [212, "index-3"], [212, "index-30"], [212, "index-31"], [212, "index-32"], [212, "index-33"], [212, "index-34"], [212, "index-35"], [212, "index-36"], [212, "index-37"], [212, "index-38"], [212, "index-39"], [212, "index-4"], [212, "index-40"], [212, "index-41"], [212, "index-42"], [212, "index-43"], [212, "index-44"], [212, "index-45"], [212, "index-46"], [212, "index-47"], [212, "index-48"], [212, "index-49"], [212, "index-5"], [212, "index-50"], [212, "index-51"], [212, "index-52"], [212, "index-53"], [212, "index-54"], [212, "index-55"], [212, "index-56"], [212, "index-57"], [212, "index-6"], [212, "index-7"], [212, "index-8"], [212, "index-9"], [213, "index-1"], [213, "index-2"], [213, "index-3"], [213, "index-4"], [213, "index-5"], [214, "index-1"], [214, "index-2"], [214, "index-3"], [214, "index-4"], [214, "index-5"], [215, "index-1"], [215, "index-2"], [216, "index-1"], [216, "index-2"], [217, "index-1"], [217, "index-2"], [218, "index-1"], [218, "index-2"], [219, "index-1"], [219, "index-2"], [220, "index-1"], [220, "index-2"], [221, "index-1"], [221, "index-2"], [221, "index-3"], [221, "index-4"], [222, "index-1"], [222, "index-2"], [222, "index-3"], [222, "index-4"], [222, "index-5"], [222, "index-6"], [222, "index-7"], [223, "index-1"], [223, "index-10"], [223, "index-11"], [223, "index-2"], [223, "index-3"], [223, "index-4"], [223, "index-5"], [223, "index-6"], [223, "index-7"], [223, "index-8"], [223, "index-9"], [224, "index-1"], [224, "index-2"], [224, "index-3"], [225, "index-1"], [225, "index-2"], [226, "index-1"], [226, "index-2"], [227, "index-1"], [227, "index-2"], [228, "index-1"], [228, "index-2"], [228, "index-3"], [228, "index-4"]], "f16": [[169, "index-6"], [182, "index-3"], [185, "index-1"], [196, "index-7"]], "f32": [[169, "index-5"], [185, "index-3"], [196, "index-9"]], "relaxed": [[169, "index-2"]], "s32": [[169, "index-4"], [185, "index-4"], [196, "index-10"]], "strict": [[169, "index-1"], [182, "index-1"]], "dnnl_accumulation_mode_any": [[170, "index-3"]], "dnnl_accumulation_mode_f16": [[170, "index-6"]], "dnnl_accumulation_mode_f32": [[170, "index-5"]], "dnnl_accumulation_mode_relaxed": [[170, "index-2"]], "dnnl_accumulation_mode_s32": [[170, "index-4"]], "dnnl_accumulation_mode_strict": [[170, "index-1"]], "dnnl_accumulation_mode_t": [[170, "index-0"]], "dnnl_alg_kind_t": [[171, "index-0"]], "dnnl_binary_add": [[171, "index-45"]], "dnnl_binary_div": [[171, "index-49"]], "dnnl_binary_eq": [[171, "index-55"]], "dnnl_binary_ge": [[171, "index-51"]], "dnnl_binary_gt": [[171, "index-52"]], "dnnl_binary_le": [[171, "index-53"]], "dnnl_binary_lt": [[171, "index-54"]], "dnnl_binary_max": [[171, "index-47"]], "dnnl_binary_min": [[171, "index-48"]], "dnnl_binary_mul": [[171, "index-46"]], "dnnl_binary_ne": [[171, "index-56"]], "dnnl_binary_select": [[171, "index-57"]], "dnnl_binary_sub": [[171, "index-50"]], "dnnl_convolution_auto": [[171, "index-3"]], "dnnl_convolution_direct": [[171, "index-1"]], "dnnl_convolution_winograd": [[171, "index-2"]], "dnnl_deconvolution_direct": [[171, "index-4"]], "dnnl_deconvolution_winograd": [[171, "index-5"]], "dnnl_eltwise_abs": [[171, "index-10"]], "dnnl_eltwise_clip": [[171, "index-20"]], "dnnl_eltwise_clip_v2": [[171, "index-21"]], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [[171, "index-33"]], "dnnl_eltwise_elu": [[171, "index-8"]], "dnnl_eltwise_elu_use_dst_for_bwd": [[171, "index-29"]], "dnnl_eltwise_exp": [[171, "index-16"]], "dnnl_eltwise_exp_use_dst_for_bwd": [[171, "index-32"]], "dnnl_eltwise_gelu_erf": [[171, "index-23"]], "dnnl_eltwise_gelu_tanh": [[171, "index-17"]], "dnnl_eltwise_hardsigmoid": [[171, "index-14"]], "dnnl_eltwise_hardswish": [[171, "index-26"]], "dnnl_eltwise_linear": [[171, "index-12"]], "dnnl_eltwise_log": [[171, "index-19"]], "dnnl_eltwise_logistic": [[171, "index-15"]], "dnnl_eltwise_logistic_use_dst_for_bwd": [[171, "index-31"]], "dnnl_eltwise_mish": [[171, "index-25"]], "dnnl_eltwise_pow": [[171, "index-22"]], "dnnl_eltwise_relu": [[171, "index-6"]], "dnnl_eltwise_relu_use_dst_for_bwd": [[171, "index-27"]], "dnnl_eltwise_round": [[171, "index-24"]], "dnnl_eltwise_soft_relu": [[171, "index-13"]], "dnnl_eltwise_sqrt": [[171, "index-11"]], "dnnl_eltwise_sqrt_use_dst_for_bwd": [[171, "index-30"]], "dnnl_eltwise_square": [[171, "index-9"]], "dnnl_eltwise_swish": [[171, "index-18"]], "dnnl_eltwise_tanh": [[171, "index-7"]], "dnnl_eltwise_tanh_use_dst_for_bwd": [[171, "index-28"]], "dnnl_lbr_augru": [[171, "index-44"]], "dnnl_lbr_gru": [[171, "index-42"]], "dnnl_lrn_across_channels": [[171, "index-37"]], "dnnl_lrn_within_channel": [[171, "index-38"]], "dnnl_pooling_avg_exclude_padding": [[171, "index-36"]], "dnnl_pooling_avg_include_padding": [[171, "index-35"]], "dnnl_pooling_max": [[171, "index-34"]], "dnnl_reduction_max": [[171, "index-60"]], "dnnl_reduction_mean": [[171, "index-64"]], "dnnl_reduction_min": [[171, "index-61"]], "dnnl_reduction_mul": [[171, "index-63"]], "dnnl_reduction_norm_lp_max": [[171, "index-65"]], "dnnl_reduction_norm_lp_power_p_max": [[171, "index-67"]], "dnnl_reduction_norm_lp_power_p_sum": [[171, "index-68"]], "dnnl_reduction_norm_lp_sum": [[171, "index-66"]], "dnnl_reduction_sum": [[171, "index-62"]], "dnnl_resampling_linear": [[171, "index-59"]], "dnnl_resampling_nearest": [[171, "index-58"]], "dnnl_softmax_accurate": [[171, "index-69"]], "dnnl_softmax_log": [[171, "index-70"]], "dnnl_vanilla_augru": [[171, "index-43"]], "dnnl_vanilla_gru": [[171, "index-41"]], "dnnl_vanilla_lstm": [[171, "index-40"]], "dnnl_vanilla_rnn": [[171, "index-39"]], "algorithm": [[172, "index-0"]], "binary_add": [[172, "index-46"]], "binary_div": [[172, "index-50"]], "binary_eq": [[172, "index-56"]], "binary_ge": [[172, "index-52"]], "binary_gt": [[172, "index-53"]], "binary_le": [[172, "index-54"]], "binary_lt": [[172, "index-55"]], "binary_max": [[172, "index-48"]], "binary_min": [[172, "index-49"]], "binary_mul": [[172, "index-47"]], "binary_ne": [[172, "index-57"]], "binary_select": [[172, "index-58"]], "binary_sub": [[172, "index-51"]], "convolution_auto": [[172, "index-2"]], "convolution_direct": [[172, "index-3"]], "convolution_winograd": [[172, "index-4"]], "deconvolution_direct": [[172, "index-5"]], "deconvolution_winograd": [[172, "index-6"]], "eltwise_abs": [[172, "index-11"]], "eltwise_clip": [[172, "index-22"]], "eltwise_clip_v2": [[172, "index-23"]], "eltwise_clip_v2_use_dst_for_bwd": [[172, "index-34"]], "eltwise_elu": [[172, "index-9"]], "eltwise_elu_use_dst_for_bwd": [[172, "index-30"]], "eltwise_exp": [[172, "index-18"]], "eltwise_exp_use_dst_for_bwd": [[172, "index-33"]], "eltwise_gelu_erf": [[172, "index-20"]], "eltwise_gelu_tanh": [[172, "index-19"]], "eltwise_hardsigmoid": [[172, "index-27"]], "eltwise_hardswish": [[172, "index-26"]], "eltwise_linear": [[172, "index-14"]], "eltwise_log": [[172, "index-21"]], "eltwise_logistic": [[172, "index-17"]], "eltwise_logistic_use_dst_for_bwd": [[172, "index-32"]], "eltwise_mish": [[172, "index-16"]], "eltwise_pow": [[172, "index-24"]], "eltwise_relu": [[172, "index-7"]], "eltwise_relu_use_dst_for_bwd": [[172, "index-28"]], "eltwise_round": [[172, "index-25"]], "eltwise_soft_relu": [[172, "index-15"]], "eltwise_sqrt": [[172, "index-12"]], "eltwise_sqrt_use_dst_for_bwd": [[172, "index-31"]], "eltwise_square": [[172, "index-10"]], "eltwise_swish": [[172, "index-13"]], "eltwise_tanh": [[172, "index-8"]], "eltwise_tanh_use_dst_for_bwd": [[172, "index-29"]], "lbr_augru": [[172, "index-45"]], "lbr_gru": [[172, "index-43"]], "lrn_across_channels": [[172, "index-35"]], "lrn_within_channel": [[172, "index-36"]], "pooling_avg_exclude_padding": [[172, "index-39"]], "pooling_avg_include_padding": [[172, "index-38"]], "pooling_max": [[172, "index-37"]], "reduction_max": [[172, "index-61"]], "reduction_mean": [[172, "index-65"]], "reduction_min": [[172, "index-62"]], "reduction_mul": [[172, "index-64"]], "reduction_norm_lp_max": [[172, "index-66"]], "reduction_norm_lp_power_p_max": [[172, "index-68"]], "reduction_norm_lp_power_p_sum": [[172, "index-69"]], "reduction_norm_lp_sum": [[172, "index-67"]], "reduction_sum": [[172, "index-63"]], "resampling_linear": [[172, "index-60"]], "resampling_nearest": [[172, "index-59"]], "softmax_accurate": [[172, "index-70"]], "softmax_log": [[172, "index-71"]], "undef": [[172, "index-1"], [186, "index-1"], [187, "index-1"], [188, "index-1"], [196, "index-1"], [197, "index-1"], [198, "index-1"], [199, "index-1"], [205, "index-1"], [207, "index-1"], [209, "index-1"], [211, "index-1"], [213, "index-1"], [215, "index-1"], [228, "index-1"]], "vanilla_augru": [[172, "index-44"]], "vanilla_gru": [[172, "index-42"]], "vanilla_lstm": [[172, "index-41"]], "vanilla_rnn": [[172, "index-40"]], "avx": [[173, "index-3"]], "avx10_1_512": [[173, "index-10"]], "avx10_1_512_amx": [[173, "index-12"]], "avx10_1_512_amx_fp16": [[173, "index-14"]], "avx2": [[173, "index-4"]], "avx2_vnni": [[173, "index-5"]], "avx2_vnni_2": [[173, "index-6"]], "avx512_core": [[173, "index-7"]], "avx512_core_amx": [[173, "index-13"]], "avx512_core_amx_fp16": [[173, "index-15"]], "avx512_core_bf16": [[173, "index-9"]], "avx512_core_fp16": [[173, "index-11"]], "avx512_core_vnni": [[173, "index-8"]], "cpu_isa": [[173, "index-0"]], "isa_default": [[173, "index-1"]], "sse41": [[173, "index-2"]], "cpu_isa_hints": [[174, "index-0"]], "no_hints": [[174, "index-1"]], "prefer_ymm": [[174, "index-2"]], "dnnl_cpu_isa_hints_t": [[175, "index-0"]], "dnnl_cpu_isa_no_hints": [[175, "index-1"]], "dnnl_cpu_isa_prefer_ymm": [[175, "index-2"]], "dnnl_cpu_isa_avx": [[176, "index-3"]], "dnnl_cpu_isa_avx10_1_512": [[176, "index-10"]], "dnnl_cpu_isa_avx10_1_512_amx": [[176, "index-12"]], "dnnl_cpu_isa_avx10_1_512_amx_fp16": [[176, "index-14"]], "dnnl_cpu_isa_avx2": [[176, "index-4"]], "dnnl_cpu_isa_avx2_vnni": [[176, "index-5"]], "dnnl_cpu_isa_avx2_vnni_2": [[176, "index-6"]], "dnnl_cpu_isa_avx512_core": [[176, "index-7"]], "dnnl_cpu_isa_avx512_core_amx": [[176, "index-13"]], "dnnl_cpu_isa_avx512_core_amx_fp16": [[176, "index-15"]], "dnnl_cpu_isa_avx512_core_bf16": [[176, "index-9"]], "dnnl_cpu_isa_avx512_core_fp16": [[176, "index-11"]], "dnnl_cpu_isa_avx512_core_vnni": [[176, "index-8"]], "dnnl_cpu_isa_default": [[176, "index-1"]], "dnnl_cpu_isa_sse41": [[176, "index-2"]], "dnnl_cpu_isa_t": [[176, "index-0"]], "dnnl_bf16": [[177, "index-3"]], "dnnl_boolean": [[177, "index-9"]], "dnnl_data_type_max": [[177, "index-17"]], "dnnl_data_type_t": [[177, "index-0"]], "dnnl_data_type_undef": [[177, "index-1"]], "dnnl_e8m0": [[177, "index-14"]], "dnnl_f16": [[177, "index-2"]], "dnnl_f32": [[177, "index-4"]], "dnnl_f4_e2m1": [[177, "index-15"]], "dnnl_f4_e3m0": [[177, "index-16"]], "dnnl_f64": [[177, "index-8"]], "dnnl_f8_e4m3": [[177, "index-11"]], "dnnl_f8_e5m2": [[177, "index-10"]], "dnnl_s32": [[177, "index-5"]], "dnnl_s4": [[177, "index-12"]], "dnnl_s8": [[177, "index-6"]], "dnnl_u4": [[177, "index-13"]], "dnnl_u8": [[177, "index-7"]], "cpu": [[178, "index-2"]], "gpu": [[178, "index-3"]], "kind": [[178, "index-0"], [190, "index-0"], [205, "index-0"], [531, "index-4"]], "dnnl_any_engine": [[179, "index-1"]], "dnnl_cpu": [[179, "index-2"]], "dnnl_engine_kind_t": [[179, "index-0"]], "dnnl_gpu": [[179, "index-3"]], "dnnl_blocked": [[180, "index-3"]], "dnnl_format_kind_any": [[180, "index-2"]], "dnnl_format_kind_max": [[180, "index-6"]], "dnnl_format_kind_opaque": [[180, "index-4"]], "dnnl_format_kind_sparse": [[180, "index-5"]], "dnnl_format_kind_t": [[180, "index-0"]], "dnnl_format_kind_undef": [[180, "index-1"]], "dnnl_abcd8b8a": [[181, "index-61"]], "dnnl_abcde2b8a4b": [[181, "index-64"]], "dnnl_abcde4b16a4b": [[181, "index-63"]], "dnnl_a": [[181, "index-3"]], "dnnl_abcd2b4c2b": [[181, "index-62"]], "dnnl_abcde2b4c2b": [[181, "index-69"]], "dnnl_abcdef2b4c2b": [[181, "index-72"]], "dnnl_abcdef2c8b4c": [[181, "index-71"]], "dnnl_abc16b": [[181, "index-53"]], "dnnl_abc32b": [[181, "index-54"]], "dnnl_abc4b": [[181, "index-55"]], "dnnl_abc8b": [[181, "index-56"]], "dnnl_abcd16b": [[181, "index-57"]], "dnnl_abcd32b": [[181, "index-58"]], "dnnl_abcd4b": [[181, "index-59"]], "dnnl_abcd8b": [[181, "index-60"]], "dnnl_abcde16b": [[181, "index-65"]], "dnnl_abcde32b": [[181, "index-66"]], "dnnl_abcde4b": [[181, "index-67"]], "dnnl_abcde8b": [[181, "index-68"]], "dnnl_abcdef16b": [[181, "index-70"]], "dnnl_abcdef4b": [[181, "index-73"]], "dnnl_ab": [[181, "index-4"]], "dnnl_abc": [[181, "index-5"]], "dnnl_abcd": [[181, "index-6"]], "dnnl_abcde": [[181, "index-7"]], "dnnl_abcdef": [[181, "index-8"]], "dnnl_abcdefg": [[181, "index-9"]], "dnnl_abcdefgh": [[181, "index-10"]], "dnnl_abcdefghi": [[181, "index-11"]], "dnnl_abcdefghij": [[181, "index-12"]], "dnnl_abcdefghijk": [[181, "index-13"]], "dnnl_abcdefghijkl": [[181, "index-14"]], "dnnl_abcdefghijlk": [[181, "index-52"]], "dnnl_abcdefghikj": [[181, "index-51"]], "dnnl_abcdefghji": [[181, "index-50"]], "dnnl_abcdefgih": [[181, "index-49"]], "dnnl_abcdefhg": [[181, "index-48"]], "dnnl_abcdegf": [[181, "index-47"]], "dnnl_abcdfe": [[181, "index-41"]], "dnnl_abced": [[181, "index-31"]], "dnnl_abdc": [[181, "index-21"]], "dnnl_abdec": [[181, "index-32"]], "dnnl_abdefc": [[181, "index-42"]], "dnnl_abdfce": [[181, "index-43"]], "dnnl_acb": [[181, "index-16"]], "dnnl_acbd": [[181, "index-22"]], "dnnl_acbde": [[181, "index-33"]], "dnnl_acbdef": [[181, "index-44"]], "dnnl_acdb": [[181, "index-23"]], "dnnl_acdeb": [[181, "index-34"]], "dnnl_adbc": [[181, "index-24"]], "dnnl_adcb": [[181, "index-25"]], "dnnl_adecb": [[181, "index-35"]], "dnnl_adefcb": [[181, "index-45"]], "dnnl_ba": [[181, "index-15"]], "dnnl_bac": [[181, "index-17"]], "dnnl_bacd": [[181, "index-26"]], "dnnl_bacde": [[181, "index-36"]], "dnnl_bca": [[181, "index-18"]], "dnnl_bcda": [[181, "index-27"]], "dnnl_bcdea": [[181, "index-37"]], "dnnl_cab": [[181, "index-19"]], "dnnl_cba": [[181, "index-20"]], "dnnl_cdab": [[181, "index-28"]], "dnnl_cdba": [[181, "index-29"]], "dnnl_cdeab": [[181, "index-38"]], "dnnl_cdeba": [[181, "index-39"]], "dnnl_chwn": [[181, "index-84"]], "dnnl_cn": [[181, "index-77"]], "dnnl_dcab": [[181, "index-30"]], "dnnl_decab": [[181, "index-40"]], "dnnl_defcab": [[181, "index-46"]], "dnnl_dhwigo": [[181, "index-116"]], "dnnl_dhwio": [[181, "index-102"]], "dnnl_dhwoi": [[181, "index-103"]], "dnnl_format_tag_any": [[181, "index-2"]], "dnnl_format_tag_last": [[181, "index-74"]], "dnnl_format_tag_t": [[181, "index-0"]], "dnnl_format_tag_undef": [[181, "index-1"]], "dnnl_giodhw": [[181, "index-115"]], "dnnl_giohw": [[181, "index-112"]], "dnnl_godhwi": [[181, "index-114"]], "dnnl_gohwi": [[181, "index-110"]], "dnnl_goidhw": [[181, "index-113"]], "dnnl_goihw": [[181, "index-109"]], "dnnl_goiw": [[181, "index-106"]], "dnnl_gowi": [[181, "index-107"]], "dnnl_hwigo": [[181, "index-111"]], "dnnl_hwio": [[181, "index-95"]], "dnnl_hwoi": [[181, "index-96"]], "dnnl_idhwo": [[181, "index-105"]], "dnnl_ihwo": [[181, "index-98"]], "dnnl_io": [[181, "index-88"]], "dnnl_iodhw": [[181, "index-101"]], "dnnl_iohw": [[181, "index-99"]], "dnnl_iwo": [[181, "index-93"]], "dnnl_ldoi16o": [[181, "index-125"]], "dnnl_ldgoi16o": [[181, "index-126"]], "dnnl_ldgo": [[181, "index-124"]], "dnnl_ldgoi": [[181, "index-121"]], "dnnl_ldigo": [[181, "index-120"]], "dnnl_ldio": [[181, "index-122"]], "dnnl_ldnc": [[181, "index-119"]], "dnnl_ldoi": [[181, "index-123"]], "dnnl_ncdhw16c": [[181, "index-128"]], "dnnl_ncdhw32c": [[181, "index-127"]], "dnnl_ncdhw4c": [[181, "index-129"]], "dnnl_ncdhw8c": [[181, "index-130"]], "dnnl_nchw16c": [[181, "index-132"]], "dnnl_nchw32c": [[181, "index-131"]], "dnnl_nchw4c": [[181, "index-133"]], "dnnl_nchw8c": [[181, "index-134"]], "dnnl_ncw16c": [[181, "index-136"]], "dnnl_ncw32c": [[181, "index-135"]], "dnnl_ncw4c": [[181, "index-137"]], "dnnl_ncw8c": [[181, "index-138"]], "dnnl_nc": [[181, "index-76"]], "dnnl_ncdhw": [[181, "index-85"]], "dnnl_nchw": [[181, "index-82"]], "dnnl_ncw": [[181, "index-80"]], "dnnl_ndhwc": [[181, "index-86"]], "dnnl_nhwc": [[181, "index-83"]], "dnnl_nt": [[181, "index-79"]], "dnnl_ntc": [[181, "index-118"]], "dnnl_nwc": [[181, "index-81"]], "dnnl_odhwi": [[181, "index-104"]], "dnnl_ohwi": [[181, "index-97"]], "dnnl_oi": [[181, "index-87"]], "dnnl_oidhw": [[181, "index-100"]], "dnnl_oihw": [[181, "index-94"]], "dnnl_oiw": [[181, "index-89"]], "dnnl_owi": [[181, "index-90"]], "dnnl_tn": [[181, "index-78"]], "dnnl_tnc": [[181, "index-117"]], "dnnl_wigo": [[181, "index-108"]], "dnnl_wio": [[181, "index-91"]], "dnnl_woi": [[181, "index-92"]], "dnnl_x": [[181, "index-75"]], "bf16": [[182, "index-2"], [185, "index-2"], [196, "index-8"]], "fpmath_mode": [[182, "index-0"]], "tf32": [[182, "index-4"]], "dnnl_fpmath_mode_any": [[183, "index-4"]], "dnnl_fpmath_mode_bf16": [[183, "index-2"]], "dnnl_fpmath_mode_f16": [[183, "index-3"]], "dnnl_fpmath_mode_strict": [[183, "index-1"]], "dnnl_fpmath_mode_t": [[183, "index-0"]], "dnnl_fpmath_mode_tf32": [[183, "index-5"]], "dnnl_graph_layout_type_any": [[184, "index-2"]], "dnnl_graph_layout_type_opaque": [[184, "index-4"]], "dnnl_graph_layout_type_strided": [[184, "index-3"]], "dnnl_graph_layout_type_t": [[184, "index-0"]], "dnnl_graph_layout_type_undef": [[184, "index-1"]], "boolean": [[185, "index-7"]], "data_type": [[185, "index-0"], [196, "index-0"], [211, "index-45"], [483, "index-4"]], "f8_e4m3": [[185, "index-9"], [196, "index-6"]], "f8_e5m2": [[185, "index-8"], [196, "index-5"]], "s4": [[185, "index-10"], [196, "index-13"]], "s8": [[185, "index-5"], [196, "index-11"]], "u4": [[185, "index-11"], [196, "index-14"]], "u8": [[185, "index-6"], [196, "index-12"]], "layout_type": [[186, "index-0"], [483, "index-6"]], "opaque": [[186, "index-4"], [197, "index-5"]], "strided": [[186, "index-3"]], "constant": [[187, "index-3"]], "property_type": [[187, "index-0"]], "variable": [[187, "index-2"], [481, "index-1"], [481, "index-2"], [482, "index-1"], [482, "index-2"], [483, "index-1"], [483, "index-2"], [483, "index-3"], [483, "index-4"], [483, "index-5"], [483, "index-6"], [483, "index-7"], [483, "index-8"], [564, "index-1"], [574, "index-1"], [574, "index-2"], [574, "index-3"], [574, "index-4"], [574, "index-5"], [574, "index-6"]], "alpha": [[188, "index-2"]], "attr": [[188, "index-0"]], "auto_broadcast": [[188, "index-36"]], "auto_pad": [[188, "index-37"]], "axes": [[188, "index-12"]], "axis": [[188, "index-9"]], "begin_norm_axis": [[188, "index-10"]], "beta": [[188, "index-3"]], "coordinate_transformation_mode": [[188, "index-38"]], "data_format": [[188, "index-39"]], "dilations": [[188, "index-13"], [211, "index-16"]], "dst_shape": [[188, "index-14"]], "epsilon": [[188, "index-4"]], "exclude_pad": [[188, "index-27"]], "group_shape": [[188, "index-26"]], "groups": [[188, "index-11"]], "keep_dims": [[188, "index-28"]], "keep_stats": [[188, "index-29"]], "kernel": [[188, "index-15"], [211, "index-32"]], "max": [[188, "index-5"]], "min": [[188, "index-6"]], "mode": [[188, "index-40"]], "momentum": [[188, "index-7"]], "order": [[188, "index-16"]], "output_padding": [[188, "index-17"]], "pads_begin": [[188, "index-18"]], "pads_end": [[188, "index-19"]], "per_channel_broadcast": [[188, "index-30"]], "qtype": [[188, "index-41"]], "rounding_type": [[188, "index-42"]], "scales": [[188, "index-8"]], "shape": [[188, "index-20"]], "sizes": [[188, "index-21"]], "special_zero": [[188, "index-31"]], "src_shape": [[188, "index-22"]], "strides": [[188, "index-23"], [211, "index-15"], [483, "index-7"]], "transpose_a": [[188, "index-32"]], "transpose_b": [[188, "index-33"]], "use_affine": [[188, "index-34"]], "use_dst": [[188, "index-35"]], "weights_format": [[188, "index-43"]], "weights_shape": [[188, "index-24"]], "zps": [[188, "index-25"]], "dnnl_graph_op_attr_alpha": [[189, "index-2"]], "dnnl_graph_op_attr_auto_broadcast": [[189, "index-36"]], "dnnl_graph_op_attr_auto_pad": [[189, "index-37"]], "dnnl_graph_op_attr_axes": [[189, "index-12"]], "dnnl_graph_op_attr_axis": [[189, "index-9"]], "dnnl_graph_op_attr_begin_norm_axis": [[189, "index-10"]], "dnnl_graph_op_attr_beta": [[189, "index-3"]], "dnnl_graph_op_attr_coordinate_transformation_mode": [[189, "index-38"]], "dnnl_graph_op_attr_data_format": [[189, "index-39"]], "dnnl_graph_op_attr_dilations": [[189, "index-13"]], "dnnl_graph_op_attr_dst_shape": [[189, "index-14"]], "dnnl_graph_op_attr_end": [[189, "index-44"]], "dnnl_graph_op_attr_epsilon": [[189, "index-4"]], "dnnl_graph_op_attr_exclude_pad": [[189, "index-27"]], "dnnl_graph_op_attr_group_shape": [[189, "index-26"]], "dnnl_graph_op_attr_groups": [[189, "index-11"]], "dnnl_graph_op_attr_keep_dims": [[189, "index-28"]], "dnnl_graph_op_attr_keep_stats": [[189, "index-29"]], "dnnl_graph_op_attr_kernel": [[189, "index-15"]], "dnnl_graph_op_attr_max": [[189, "index-5"]], "dnnl_graph_op_attr_min": [[189, "index-6"]], "dnnl_graph_op_attr_mode": [[189, "index-40"]], "dnnl_graph_op_attr_momentum": [[189, "index-7"]], "dnnl_graph_op_attr_order": [[189, "index-16"]], "dnnl_graph_op_attr_output_padding": [[189, "index-17"]], "dnnl_graph_op_attr_pads_begin": [[189, "index-18"]], "dnnl_graph_op_attr_pads_end": [[189, "index-19"]], "dnnl_graph_op_attr_per_channel_broadcast": [[189, "index-30"]], "dnnl_graph_op_attr_qtype": [[189, "index-41"]], "dnnl_graph_op_attr_rounding_type": [[189, "index-42"]], "dnnl_graph_op_attr_scales": [[189, "index-8"]], "dnnl_graph_op_attr_shape": [[189, "index-20"]], "dnnl_graph_op_attr_sizes": [[189, "index-21"]], "dnnl_graph_op_attr_special_zero": [[189, "index-31"]], "dnnl_graph_op_attr_src_shape": [[189, "index-22"]], "dnnl_graph_op_attr_strides": [[189, "index-23"]], "dnnl_graph_op_attr_t": [[189, "index-0"]], "dnnl_graph_op_attr_transpose_a": [[189, "index-32"]], "dnnl_graph_op_attr_transpose_b": [[189, "index-33"]], "dnnl_graph_op_attr_undef": [[189, "index-1"]], "dnnl_graph_op_attr_use_affine": [[189, "index-34"]], "dnnl_graph_op_attr_use_dst": [[189, "index-35"]], "dnnl_graph_op_attr_weights_format": [[189, "index-43"]], "dnnl_graph_op_attr_weights_shape": [[189, "index-24"]], "dnnl_graph_op_attr_zps": [[189, "index-25"]], "dnnl_graph_op_kind_t": [[191, "index-0"]], "debug": [[192, "index-2"]], "fusion": [[192, "index-1"]], "policy": [[192, "index-0"]], "dnnl_graph_partition_policy_debug": [[193, "index-2"]], "dnnl_graph_partition_policy_fusion": [[193, "index-1"]], "dnnl_graph_partition_policy_t": [[193, "index-0"]], "invalid_arguments": [[194, "index-3"], [222, "index-3"]], "invalid_data_type": [[194, "index-11"]], "invalid_graph": [[194, "index-8"]], "invalid_graph_op": [[194, "index-9"]], "invalid_shape": [[194, "index-10"]], "last_impl_reached": [[194, "index-5"], [222, "index-5"]], "not_required": [[194, "index-7"], [222, "index-7"]], "out_of_memory": [[194, "index-2"], [222, "index-2"]], "runtime_error": [[194, "index-6"], [222, "index-6"]], "status": [[194, "index-0"], [222, "index-0"], [343, "index-0"]], "success": [[194, "index-1"], [222, "index-1"]], "unimplemented": [[194, "index-4"], [222, "index-4"]], "dnnl_graph_tensor_property_constant": [[195, "index-3"]], "dnnl_graph_tensor_property_t": [[195, "index-0"]], "dnnl_graph_tensor_property_undef": [[195, "index-1"]], "dnnl_graph_tensor_property_variable": [[195, "index-2"]], "e8m0": [[196, "index-4"]], "f4_e2m1": [[196, "index-3"]], "f4_e3m0": [[196, "index-2"]], "blocked": [[197, "index-3"]], "format_kind": [[197, "index-0"], [211, "index-49"]], "sparse": [[197, "index-4"]], "abcd8b8a": [[198, "index-95"]], "a": [[198, "index-3"]], "abcd8b": [[198, "index-94"]], "ab": [[198, "index-4"]], "abc": [[198, "index-6"]], "abcd": [[198, "index-11"]], "abcde": [[198, "index-20"]], "abcdef": [[198, "index-29"]], "abcdefg": [[198, "index-35"]], "abcdefgh": [[198, "index-37"]], "abcdefghi": [[198, "index-39"]], "abcdefghij": [[198, "index-41"]], "abcdefghijk": [[198, "index-43"]], "abcdefghijkl": [[198, "index-45"]], "abcdefghijlk": [[198, "index-46"]], "abcdefghikj": [[198, "index-44"]], "abcdefghji": [[198, "index-42"]], "abcdefgih": [[198, "index-40"]], "abcdefhg": [[198, "index-38"]], "abcdegf": [[198, "index-36"]], "abcdfe": [[198, "index-34"]], "abced": [[198, "index-28"]], "abdc": [[198, "index-12"]], "abdec": [[198, "index-21"]], "abdefc": [[198, "index-32"]], "abdfce": [[198, "index-30"]], "acb": [[198, "index-7"]], "acbd": [[198, "index-13"]], "acbde": [[198, "index-22"]], "acbdef": [[198, "index-31"]], "acdb": [[198, "index-14"]], "acdeb": [[198, "index-23"]], "adbc": [[198, "index-15"]], "ba": [[198, "index-5"]], "bac": [[198, "index-8"]], "bacd": [[198, "index-16"]], "bacde": [[198, "index-24"]], "bca": [[198, "index-9"]], "bcda": [[198, "index-17"]], "bcdea": [[198, "index-25"]], "cba": [[198, "index-10"]], "cdba": [[198, "index-18"]], "cdeba": [[198, "index-26"]], "chwn": [[198, "index-56"]], "cn": [[198, "index-49"]], "dcab": [[198, "index-19"]], "decab": [[198, "index-27"]], "defcab": [[198, "index-33"]], "dhwigo": [[198, "index-85"]], "dhwio": [[198, "index-71"]], "format_tag": [[198, "index-0"]], "giodhw": [[198, "index-83"]], "giohw": [[198, "index-81"]], "godhwi": [[198, "index-84"]], "gohwi": [[198, "index-78"]], "goidhw": [[198, "index-82"]], "goihw": [[198, "index-79"]], "goiw": [[198, "index-75"]], "gowi": [[198, "index-76"]], "hwigo": [[198, "index-80"]], "hwio": [[198, "index-66"]], "idhwo": [[198, "index-74"]], "ihwo": [[198, "index-68"]], "io": [[198, "index-60"]], "iodhw": [[198, "index-73"]], "iohw": [[198, "index-69"]], "iwo": [[198, "index-64"]], "ldgo": [[198, "index-93"]], "ldgoi": [[198, "index-90"]], "ldigo": [[198, "index-89"]], "ldio": [[198, "index-91"]], "ldnc": [[198, "index-88"]], "ldoi": [[198, "index-92"]], "nc": [[198, "index-48"]], "ncdhw": [[198, "index-57"]], "nchw": [[198, "index-54"]], "ncw": [[198, "index-52"]], "ndhwc": [[198, "index-58"]], "nhwc": [[198, "index-55"]], "nt": [[198, "index-51"]], "ntc": [[198, "index-87"]], "nwc": [[198, "index-53"]], "odhwi": [[198, "index-72"]], "ohwi": [[198, "index-67"]], "oi": [[198, "index-59"]], "oidhw": [[198, "index-70"]], "oihw": [[198, "index-65"]], "oiw": [[198, "index-61"]], "owi": [[198, "index-62"]], "tn": [[198, "index-50"]], "tnc": [[198, "index-86"]], "wigo": [[198, "index-77"]], "wio": [[198, "index-63"]], "x": [[198, "index-47"]], "coo": [[199, "index-4"], [525, "index-29"]], "csr": [[199, "index-2"], [525, "index-28"]], "packed": [[199, "index-3"], [525, "index-30"]], "sparse_encoding": [[199, "index-0"], [211, "index-53"]], "fuse_norm_add_relu": [[200, "index-6"]], "fuse_norm_relu": [[200, "index-5"]], "none": [[200, "index-1"]], "normalization_flags": [[200, "index-0"]], "use_global_stats": [[200, "index-2"]], "use_scale": [[200, "index-3"]], "use_shift": [[200, "index-4"]], "dnnl_fuse_norm_add_relu": [[201, "index-6"]], "dnnl_fuse_norm_relu": [[201, "index-5"]], "dnnl_normalization_flags_none": [[201, "index-1"]], "dnnl_normalization_flags_t": [[201, "index-0"]], "dnnl_use_global_stats": [[201, "index-2"]], "dnnl_use_scale": [[201, "index-3"]], "dnnl_use_shift": [[201, "index-4"]], "buffer": [[202, "index-2"], [226, "index-2"]], "memory_kind": [[202, "index-0"], [226, "index-0"]], "usm": [[202, "index-1"], [226, "index-1"]], "dnnl_ocl_interop_buffer": [[203, "index-2"]], "dnnl_ocl_interop_memory_kind_t": [[203, "index-0"]], "dnnl_ocl_interop_usm": [[203, "index-1"]], "dnnl_pack_type_no_trans": [[204, "index-2"]], "dnnl_pack_type_pack32": [[204, "index-4"]], "dnnl_pack_type_t": [[204, "index-0"]], "dnnl_pack_type_trans": [[204, "index-3"]], "dnnl_pack_type_undef": [[204, "index-1"]], "batch_normalization": [[205, "index-10"]], "deconvolution": [[205, "index-7"], [297, "index-0"]], "group_normalization": [[205, "index-21"]], "inner_product": [[205, "index-11"]], "layer_normalization": [[205, "index-20"]], "lrn": [[205, "index-9"], [305, "index-0"]], "dnnl_batch_normalization": [[206, "index-10"]], "dnnl_binary": [[206, "index-14"]], "dnnl_concat": [[206, "index-4"]], "dnnl_convolution": [[206, "index-6"]], "dnnl_deconvolution": [[206, "index-7"]], "dnnl_eltwise": [[206, "index-8"]], "dnnl_gemm": [[206, "index-13"]], "dnnl_group_normalization": [[206, "index-22"]], "dnnl_inner_product": [[206, "index-11"]], "dnnl_layer_normalization": [[206, "index-21"]], "dnnl_lrn": [[206, "index-9"]], "dnnl_matmul": [[206, "index-15"]], "dnnl_pooling": [[206, "index-17"]], "dnnl_prelu": [[206, "index-19"]], "dnnl_primitive_kind_max": [[206, "index-23"]], "dnnl_primitive_kind_t": [[206, "index-0"]], "dnnl_reduction": [[206, "index-18"]], "dnnl_reorder": [[206, "index-2"]], "dnnl_resampling": [[206, "index-16"]], "dnnl_rnn": [[206, "index-12"]], "dnnl_shuffle": [[206, "index-3"]], "dnnl_softmax": [[206, "index-20"]], "dnnl_sum": [[206, "index-5"]], "dnnl_undefined_primitive": [[206, "index-1"]], "profiling_data_kind": [[207, "index-0"]], "time": [[207, "index-2"]], "dnnl_profiling_data_kind_t": [[208, "index-0"]], "dnnl_profiling_data_kind_time": [[208, "index-2"]], "dnnl_profiling_data_kind_undef": [[208, "index-1"]], "backward": [[209, "index-5"]], "backward_bias": [[209, "index-8"]], "backward_data": [[209, "index-6"]], "backward_weights": [[209, "index-7"]], "forward": [[209, "index-4"]], "forward_inference": [[209, "index-3"]], "forward_training": [[209, "index-2"]], "prop_kind": [[209, "index-0"], [211, "index-12"]], "dnnl_backward": [[210, "index-5"]], "dnnl_backward_bias": [[210, "index-8"]], "dnnl_backward_data": [[210, "index-6"]], "dnnl_backward_weights": [[210, "index-7"]], "dnnl_forward": [[210, "index-4"]], "dnnl_forward_inference": [[210, "index-3"]], "dnnl_forward_training": [[210, "index-2"]], "dnnl_prop_kind_t": [[210, "index-0"]], "dnnl_prop_kind_undef": [[210, "index-1"]], "activation_kind": [[211, "index-31"]], "alg_kind": [[211, "index-21"]], "alpha_f32": [[211, "index-22"]], "axis_s32": [[211, "index-24"]], "beta_f32": [[211, "index-23"]], "cache_blob_id": [[211, "index-14"]], "cache_blob_id_size_s64": [[211, "index-13"]], "cell_kind": [[211, "index-29"]], "diff_dst_md": [[211, "index-39"]], "diff_src_md": [[211, "index-35"]], "diff_weights_md": [[211, "index-37"]], "direction": [[211, "index-30"]], "dst_md": [[211, "index-38"]], "engine": [[211, "index-2"], [299, "index-0"], [336, "index-0"], [479, "index-1"], [479, "index-2"]], "epsilon_f32": [[211, "index-19"]], "exec_arg_md": [[211, "index-42"]], "factors": [[211, "index-28"]], "flags": [[211, "index-20"], [224, "index-0"]], "group_size_s64": [[211, "index-33"]], "impl_info_str": [[211, "index-11"], [542, "index-2"]], "inner_blks": [[211, "index-51"]], "inner_idxs": [[211, "index-52"]], "inner_nblks_s32": [[211, "index-50"]], "k_f32": [[211, "index-26"]], "local_size_s64": [[211, "index-25"]], "memory_consumption_s64": [[211, "index-7"]], "ndims_s32": [[211, "index-43"]], "nnz_s64": [[211, "index-54"]], "num_handles_s32": [[211, "index-55"]], "num_of_inputs_s32": [[211, "index-4"]], "num_of_outputs_s32": [[211, "index-5"]], "p_f32": [[211, "index-27"]], "padded_dims": [[211, "index-47"]], "padded_offsets": [[211, "index-48"]], "padding_l": [[211, "index-17"]], "padding_r": [[211, "index-18"]], "primitive_kind": [[211, "index-3"]], "query": [[211, "index-0"]], "reorder_dst_engine": [[211, "index-10"]], "reorder_src_engine": [[211, "index-9"]], "scratchpad_engine": [[211, "index-8"], [542, "index-39"]], "scratchpad_md": [[211, "index-41"]], "src_md": [[211, "index-34"]], "submemory_offset_s64": [[211, "index-46"]], "time_estimate_f64": [[211, "index-6"]], "weights_md": [[211, "index-36"]], "workspace_md": [[211, "index-40"]], "dnnl_query_activation_kind": [[212, "index-31"]], "dnnl_query_alg_kind": [[212, "index-21"]], "dnnl_query_alpha_f32": [[212, "index-22"]], "dnnl_query_axis_s32": [[212, "index-24"]], "dnnl_query_beta_f32": [[212, "index-23"]], "dnnl_query_cache_blob_id": [[212, "index-14"]], "dnnl_query_cache_blob_id_size_s64": [[212, "index-13"]], "dnnl_query_cell_kind": [[212, "index-29"]], "dnnl_query_data_type": [[212, "index-46"]], "dnnl_query_diff_dst_md": [[212, "index-40"]], "dnnl_query_diff_src_md": [[212, "index-36"]], "dnnl_query_diff_weights_md": [[212, "index-38"]], "dnnl_query_dilations": [[212, "index-16"]], "dnnl_query_dims": [[212, "index-45"]], "dnnl_query_direction": [[212, "index-30"]], "dnnl_query_dst_md": [[212, "index-39"]], "dnnl_query_engine": [[212, "index-2"]], "dnnl_query_epsilon_f32": [[212, "index-19"]], "dnnl_query_exec_arg_md": [[212, "index-43"]], "dnnl_query_factors": [[212, "index-28"]], "dnnl_query_flags": [[212, "index-20"]], "dnnl_query_format_kind": [[212, "index-50"]], "dnnl_query_group_size_s64": [[212, "index-33"]], "dnnl_query_impl_info_str": [[212, "index-9"]], "dnnl_query_inner_blks": [[212, "index-52"]], "dnnl_query_inner_idxs": [[212, "index-53"]], "dnnl_query_inner_nblks_s32": [[212, "index-51"]], "dnnl_query_k_f32": [[212, "index-26"]], "dnnl_query_kernel": [[212, "index-32"]], "dnnl_query_local_size_s64": [[212, "index-25"]], "dnnl_query_max": [[212, "index-57"]], "dnnl_query_memory_consumption_s64": [[212, "index-7"]], "dnnl_query_ndims_s32": [[212, "index-44"]], "dnnl_query_nnz_s64": [[212, "index-55"]], "dnnl_query_num_handles_s32": [[212, "index-56"]], "dnnl_query_num_of_inputs_s32": [[212, "index-4"]], "dnnl_query_num_of_outputs_s32": [[212, "index-5"]], "dnnl_query_p_f32": [[212, "index-27"]], "dnnl_query_padded_dims": [[212, "index-48"]], "dnnl_query_padded_offsets": [[212, "index-49"]], "dnnl_query_padding_l": [[212, "index-17"]], "dnnl_query_padding_r": [[212, "index-18"]], "dnnl_query_primitive_kind": [[212, "index-3"]], "dnnl_query_prop_kind": [[212, "index-12"]], "dnnl_query_reorder_dst_engine": [[212, "index-11"]], "dnnl_query_reorder_src_engine": [[212, "index-10"]], "dnnl_query_scratchpad_engine": [[212, "index-8"]], "dnnl_query_scratchpad_md": [[212, "index-42"]], "dnnl_query_some_md": [[212, "index-34"]], "dnnl_query_sparse_encoding": [[212, "index-54"]], "dnnl_query_src_md": [[212, "index-35"]], "dnnl_query_strides": [[212, "index-15"]], "dnnl_query_submemory_offset_s64": [[212, "index-47"]], "dnnl_query_t": [[212, "index-0"]], "dnnl_query_time_estimate_f64": [[212, "index-6"]], "dnnl_query_undef": [[212, "index-1"]], "dnnl_query_weights_md": [[212, "index-37"]], "dnnl_query_workspace_md": [[212, "index-41"]], "bidirectional_concat": [[213, "index-4"]], "bidirectional_sum": [[213, "index-5"]], "rnn_direction": [[213, "index-0"]], "unidirectional_left2right": [[213, "index-2"]], "unidirectional_right2left": [[213, "index-3"]], "dnnl_bidirectional_concat": [[214, "index-4"]], "dnnl_bidirectional_sum": [[214, "index-5"]], "dnnl_rnn_direction_t": [[214, "index-0"]], "dnnl_rnn_direction_undef": [[214, "index-1"]], "dnnl_unidirectional_left2right": [[214, "index-2"]], "dnnl_unidirectional_right2left": [[214, "index-3"]], "diff_weights_overwrite": [[215, "index-2"]], "rnn_flags": [[215, "index-0"]], "dnnl_rnn_flags_diff_weights_overwrite": [[216, "index-2"]], "dnnl_rnn_flags_t": [[216, "index-0"]], "dnnl_rnn_flags_undef": [[216, "index-1"]], "environment": [[217, "index-1"]], "rounding_mode": [[217, "index-0"]], "stochastic": [[217, "index-2"]], "dnnl_rounding_mode_environment": [[218, "index-1"]], "dnnl_rounding_mode_stochastic": [[218, "index-2"]], "dnnl_rounding_mode_t": [[218, "index-0"]], "library": [[219, "index-1"]], "scratchpad_mode": [[219, "index-0"]], "user": [[219, "index-2"]], "dnnl_scratchpad_mode_library": [[220, "index-1"]], "dnnl_scratchpad_mode_t": [[220, "index-0"]], "dnnl_scratchpad_mode_user": [[220, "index-2"]], "dnnl_coo": [[221, "index-4"]], "dnnl_csr": [[221, "index-2"]], "dnnl_packed": [[221, "index-3"]], "dnnl_sparse_encoding_t": [[221, "index-0"]], "dnnl_sparse_encoding_undef": [[221, "index-1"]], "dnnl_invalid_arguments": [[223, "index-3"]], "dnnl_invalid_data_type": [[223, "index-11"]], "dnnl_invalid_graph": [[223, "index-8"]], "dnnl_invalid_graph_op": [[223, "index-9"]], "dnnl_invalid_shape": [[223, "index-10"]], "dnnl_last_impl_reached": [[223, "index-5"]], "dnnl_not_required": [[223, "index-7"]], "dnnl_out_of_memory": [[223, "index-2"]], "dnnl_runtime_error": [[223, "index-6"]], "dnnl_status_t": [[223, "index-0"]], "dnnl_success": [[223, "index-1"]], "dnnl_unimplemented": [[223, "index-4"]], "default_flags": [[224, "index-3"]], "in_order": [[224, "index-1"]], "out_of_order": [[224, "index-2"]], "dnnl_stream_default_flags": [[225, "index-2"]], "dnnl_stream_flags_t": [[225, "index-0"]], "dnnl_stream_out_of_order": [[225, "index-1"]], "dnnl_sycl_interop_buffer": [[227, "index-2"]], "dnnl_sycl_interop_memory_kind_t": [[227, "index-0"]], "dnnl_sycl_interop_usm": [[227, "index-1"]], "no_trans": [[228, "index-2"]], "pack32": [[228, "index-4"]], "pack_type": [[228, "index-0"]], "trans": [[228, "index-3"]], "augru.cpp": [[229, "index-0"]], "example": [[229, "index-0"], [230, "index-0"], [231, "index-0"], [232, "index-0"], [233, "index-0"], [234, "index-0"], [235, "index-0"], [236, "index-0"], [237, "index-0"], [238, "index-0"], [239, "index-0"], [240, "index-0"], [241, "index-0"], [242, "index-0"], [243, "index-0"], [244, "index-0"], [245, "index-0"], [246, "index-0"], [247, "index-0"], [248, "index-0"], [249, "index-0"], [250, "index-0"], [251, "index-0"], [252, "index-0"], [253, "index-0"], [254, "index-0"], [255, "index-0"], [256, "index-0"], [257, "index-0"], [258, "index-0"], [259, "index-0"], [260, "index-0"], [261, "index-0"], [262, "index-0"], [263, "index-0"], [264, "index-0"], [265, "index-0"], [266, "index-0"], [267, "index-0"], [268, "index-0"], [269, "index-0"], [270, "index-0"], [271, "index-0"], [272, "index-0"], [273, "index-0"], [274, "index-0"], [275, "index-0"], [276, "index-0"], [277, "index-0"], [278, "index-0"], [279, "index-0"], [280, "index-0"], [281, "index-0"], [282, "index-0"]], "batch_normalization.cpp": [[230, "index-0"]], "binary.cpp": [[231, "index-0"]], "bnorm_u8_via_binary_postops.cpp": [[232, "index-0"]], "cnn_inference_f32.c": [[233, "index-0"]], "cnn_inference_f32.cpp": [[234, "index-0"]], "cnn_inference_int8.cpp": [[235, "index-0"]], "cnn_training_bf16.cpp": [[236, "index-0"]], "cnn_training_f32.cpp": [[237, "index-0"]], "concat.cpp": [[238, "index-0"]], "convolution.cpp": [[239, "index-0"]], "cpu_brgemm.cpp": [[240, "index-0"]], "cpu_cnn_training_f32.c": [[241, "index-0"]], "cpu_getting_started.cpp": [[242, "index-0"]], "cpu_inference_int8.cpp": [[243, "index-0"]], "cpu_matmul_coo.cpp": [[244, "index-0"]], "cpu_matmul_csr.cpp": [[245, "index-0"]], "cpu_matmul_quantization.cpp": [[246, "index-0"]], "cpu_matmul_weights_compression.cpp": [[247, "index-0"]], "cpu_rnn_inference_f32.cpp": [[248, "index-0"]], "cpu_rnn_inference_int8.cpp": [[249, "index-0"]], "cpu_sgemm_and_matmul.cpp": [[250, "index-0"]], "cpu_single_op_partition.cpp": [[251, "index-0"]], "cross_engine_reorder.c": [[252, "index-0"]], "cross_engine_reorder.cpp": [[253, "index-0"]], "deconvolution.cpp": [[254, "index-0"]], "eltwise.cpp": [[255, "index-0"]], "getting_started.cpp": [[256, "index-0"]], "gpu_opencl_getting_started.cpp": [[257, "index-0"]], "gpu_opencl_interop.cpp": [[258, "index-0"]], "group_normalization.cpp": [[259, "index-0"]], "inference_int8_matmul.cpp": [[260, "index-0"]], "inner_product.cpp": [[261, "index-0"]], "layer_normalization.cpp": [[262, "index-0"]], "lbr_gru.cpp": [[263, "index-0"]], "lrn.cpp": [[264, "index-0"]], "lstm.cpp": [[265, "index-0"]], "matmul.cpp": [[266, "index-0"]], "memory_format_propagation.cpp": [[267, "index-0"]], "performance_profiling.cpp": [[268, "index-0"]], "pooling.cpp": [[269, "index-0"]], "prelu.cpp": [[270, "index-0"]], "reduction.cpp": [[271, "index-0"]], "reorder.cpp": [[272, "index-0"]], "resampling.cpp": [[273, "index-0"]], "rnn_training_f32.cpp": [[274, "index-0"]], "shuffle.cpp": [[275, "index-0"]], "softmax.cpp": [[276, "index-0"]], "sum.cpp": [[277, "index-0"]], "sycl_getting_started.cpp": [[278, "index-0"]], "sycl_interop_buffer.cpp": [[279, "index-0"]], "sycl_single_op_partition.cpp": [[280, "index-0"]], "vanilla_rnn.cpp": [[281, "index-0"]], "weights_decompression_matmul.cpp": [[282, "index-0"]], "global": [[283, "index-0"]], "namespace": [[283, "index-0"], [349, "index-0"], [350, "index-0"], [351, "index-0"], [352, "index-0"], [353, "index-0"], [354, "index-0"], [355, "index-0"], [356, "index-0"], [357, "index-0"], [358, "index-0"], [359, "index-0"]], "set_any_layout": [[283, "index-1"]], "group": [[287, "index-0"], [288, "index-0"], [289, "index-0"], [290, "index-0"], [291, "index-0"], [292, "index-0"], [293, "index-0"], [294, "index-0"], [295, "index-0"], [296, "index-0"], [297, "index-0"], [298, "index-0"], [299, "index-0"], [300, "index-0"], [301, "index-0"], [302, "index-0"], [303, "index-0"], [304, "index-0"], [305, "index-0"], [306, "index-0"], [307, "index-0"], [308, "index-0"], [309, "index-0"], [310, "index-0"], [311, "index-0"], [312, "index-0"], [313, "index-0"], [314, "index-0"], [315, "index-0"], [316, "index-0"], [317, "index-0"], [318, "index-0"], [319, "index-0"], [320, "index-0"], [321, "index-0"], [322, "index-0"], [323, "index-0"], [324, "index-0"], [325, "index-0"], [326, "index-0"], [327, "index-0"], [328, "index-0"], [329, "index-0"], [330, "index-0"], [331, "index-0"], [332, "index-0"], [333, "index-0"], [334, "index-0"], [335, "index-0"], [336, "index-0"], [337, "index-0"], [338, "index-0"], [339, "index-0"], [340, "index-0"], [341, "index-0"], [342, "index-0"], [343, "index-0"], [344, "index-0"], [345, "index-0"], [346, "index-0"]], "onednn api": [[287, "index-0"]], "accumulation mode": [[288, "index-0"]], "convert_to_c": [[288, "index-1"], [289, "index-5"], [289, "index-6"], [289, "index-7"], [289, "index-8"], [299, "index-2"], [300, "index-1"], [313, "index-5"], [313, "index-6"], [313, "index-7"], [318, "index-1"], [318, "index-2"], [353, "index-1"], [354, "index-1"]], "attributes": [[289, "index-0"]], "const_dnnl_post_ops_t": [[289, "index-4"]], "const_dnnl_primitive_attr_t": [[289, "index-2"]], "dnnl_post_ops_append_binary": [[289, "index-43"]], "dnnl_post_ops_append_dw": [[289, "index-41"]], "dnnl_post_ops_append_eltwise": [[289, "index-39"]], "dnnl_post_ops_append_prelu": [[289, "index-45"]], "dnnl_post_ops_append_sum": [[289, "index-37"]], "dnnl_post_ops_clone": [[289, "index-33"]], "dnnl_post_ops_create": [[289, "index-32"]], "dnnl_post_ops_destroy": [[289, "index-34"]], "dnnl_post_ops_get_kind": [[289, "index-36"]], "dnnl_post_ops_get_params_binary": [[289, "index-44"]], "dnnl_post_ops_get_params_dw": [[289, "index-42"]], "dnnl_post_ops_get_params_eltwise": [[289, "index-40"]], "dnnl_post_ops_get_params_prelu": [[289, "index-46"]], "dnnl_post_ops_get_params_sum": [[289, "index-38"]], "dnnl_post_ops_len": [[289, "index-35"]], "dnnl_post_ops_t": [[289, "index-3"]], "dnnl_primitive_attr_clone": [[289, "index-10"]], "dnnl_primitive_attr_create": [[289, "index-9"]], "dnnl_primitive_attr_destroy": [[289, "index-11"]], "dnnl_primitive_attr_get_accumulation_mode": [[289, "index-20"]], "dnnl_primitive_attr_get_deterministic": [[289, "index-18"]], "dnnl_primitive_attr_get_dropout": [[289, "index-12"]], "dnnl_primitive_attr_get_fpmath_mode": [[289, "index-14"]], "dnnl_primitive_attr_get_fpmath_mode_v2": [[289, "index-16"]], "dnnl_primitive_attr_get_post_ops": [[289, "index-30"]], "dnnl_primitive_attr_get_rnn_data_qparams": [[289, "index-48"]], "dnnl_primitive_attr_get_rnn_weights_projection_qparams": [[289, "index-52"]], "dnnl_primitive_attr_get_rnn_weights_qparams": [[289, "index-50"]], "dnnl_primitive_attr_get_rounding": [[289, "index-29"]], "dnnl_primitive_attr_get_scratchpad_mode": [[289, "index-22"]], "dnnl_primitive_attr_set_accumulation_mode": [[289, "index-21"]], "dnnl_primitive_attr_set_deterministic": [[289, "index-19"]], "dnnl_primitive_attr_set_dropout": [[289, "index-13"]], "dnnl_primitive_attr_set_fpmath_mode": [[289, "index-15"]], "dnnl_primitive_attr_set_fpmath_mode_v2": [[289, "index-17"]], "dnnl_primitive_attr_set_post_ops": [[289, "index-31"]], "dnnl_primitive_attr_set_rnn_data_qparams": [[289, "index-47"]], "dnnl_primitive_attr_set_rnn_weights_projection_qparams": [[289, "index-51"]], "dnnl_primitive_attr_set_rnn_weights_qparams": [[289, "index-49"]], "dnnl_primitive_attr_set_rounding": [[289, "index-28"]], "dnnl_primitive_attr_set_scales": [[289, "index-25"]], "dnnl_primitive_attr_set_scales_mask": [[289, "index-24"]], "dnnl_primitive_attr_set_scratchpad_mode": [[289, "index-23"]], "dnnl_primitive_attr_set_zero_points": [[289, "index-27"]], "dnnl_primitive_attr_set_zero_points_mask": [[289, "index-26"]], "dnnl_primitive_attr_t": [[289, "index-1"]], "dnnl_batch_normalization_backward_primitive_desc_create": [[290, "index-2"]], "dnnl_batch_normalization_forward_primitive_desc_create": [[290, "index-1"]], "dnnl_binary_primitive_desc_create": [[291, "index-1"]], "dnnl_binary_primitive_desc_create_v2": [[291, "index-2"]], "blas functions": [[292, "index-0"]], "dnnl_gemm_s8s8s32": [[292, "index-6"]], "dnnl_gemm_u8s8s32": [[292, "index-5"]], "dnnl_sgemm": [[292, "index-4"]], "gemm_s8s8s32": [[292, "index-3"], [355, "index-5"]], "gemm_u8s8s32": [[292, "index-2"], [355, "index-4"]], "sgemm": [[292, "index-1"], [355, "index-3"]], "common api": [[293, "index-0"]], "dnnl_concat_primitive_desc_create": [[294, "index-1"]], "dnnl_convolution_backward_data_primitive_desc_create": [[295, "index-2"]], "dnnl_convolution_backward_weights_primitive_desc_create": [[295, "index-3"]], "dnnl_convolution_forward_primitive_desc_create": [[295, "index-1"]], "dnnl_max_ndims": [[296, "index-3"]], "define": [[296, "index-3"], [307, "index-36"], [307, "index-37"], [307, "index-38"], [307, "index-39"], [307, "index-40"], [307, "index-41"], [313, "index-21"], [313, "index-22"], [313, "index-23"], [313, "index-24"], [313, "index-25"], [313, "index-26"], [313, "index-27"], [313, "index-28"], [313, "index-29"], [313, "index-30"], [313, "index-31"], [313, "index-32"], [313, "index-33"], [313, "index-34"], [313, "index-35"], [313, "index-36"], [313, "index-37"], [313, "index-38"], [313, "index-39"], [313, "index-40"], [313, "index-41"], [313, "index-42"], [313, "index-43"], [313, "index-44"], [313, "index-45"], [313, "index-46"], [313, "index-47"], [313, "index-48"], [313, "index-49"], [313, "index-50"], [313, "index-51"], [313, "index-52"], [313, "index-53"], [313, "index-54"], [313, "index-55"], [313, "index-56"], [313, "index-57"], [313, "index-58"], [313, "index-59"], [313, "index-60"], [313, "index-61"], [313, "index-62"], [313, "index-63"], [313, "index-64"], [313, "index-65"], [313, "index-66"], [313, "index-67"], [313, "index-68"], [313, "index-69"], [313, "index-70"], [313, "index-71"], [313, "index-72"], [313, "index-73"], [313, "index-74"], [313, "index-75"], [313, "index-76"], [313, "index-77"], [313, "index-78"], [313, "index-79"], [313, "index-80"], [313, "index-81"], [313, "index-82"], [313, "index-83"], [313, "index-84"], [313, "index-85"], [313, "index-86"], [313, "index-87"], [313, "index-88"], [313, "index-89"], [313, "index-90"], [313, "index-91"], [313, "index-92"], [313, "index-93"], [313, "index-94"], [313, "index-95"], [319, "index-22"], [319, "index-23"], [319, "index-24"], [319, "index-25"], [319, "index-26"], [319, "index-27"], [339, "index-6"], [339, "index-7"]], "dnnl_dim_t": [[296, "index-1"]], "dnnl_dims_t": [[296, "index-2"]], "dnnl_deconvolution_backward_data_primitive_desc_create": [[297, "index-2"]], "dnnl_deconvolution_backward_weights_primitive_desc_create": [[297, "index-3"]], "dnnl_deconvolution_forward_primitive_desc_create": [[297, "index-1"]], "dnnl_eltwise_backward_primitive_desc_create": [[298, "index-2"]], "dnnl_eltwise_forward_primitive_desc_create": [[298, "index-1"]], "dnnl_engine_create": [[299, "index-4"]], "dnnl_engine_destroy": [[299, "index-6"]], "dnnl_engine_get_count": [[299, "index-3"]], "dnnl_engine_get_kind": [[299, "index-5"]], "dnnl_engine_t": [[299, "index-1"]], "floating-point math mode": [[300, "index-0"]], "dnnl_get_default_fpmath_mode": [[300, "index-2"]], "dnnl_set_default_fpmath_mode": [[300, "index-3"]], "dnnl_group_normalization_backward_primitive_desc_create": [[301, "index-2"]], "dnnl_group_normalization_forward_primitive_desc_create": [[301, "index-1"]], "dnnl_inner_product_backward_data_primitive_desc_create": [[302, "index-2"]], "dnnl_inner_product_backward_weights_primitive_desc_create": [[302, "index-3"]], "dnnl_inner_product_forward_primitive_desc_create": [[302, "index-1"]], "runtime interoperability api": [[303, "index-0"], [338, "index-0"]], "dnnl_layer_normalization_backward_primitive_desc_create": [[304, "index-2"]], "dnnl_layer_normalization_backward_primitive_desc_create_v2": [[304, "index-4"]], "dnnl_layer_normalization_forward_primitive_desc_create": [[304, "index-1"]], "dnnl_layer_normalization_forward_primitive_desc_create_v2": [[304, "index-3"]], "dnnl_lrn_backward_primitive_desc_create": [[305, "index-2"]], "dnnl_lrn_forward_primitive_desc_create": [[305, "index-1"]], "dnnl_matmul_primitive_desc_create": [[306, "index-1"]], "dnnl_memory_allocate": [[307, "index-36"]], "dnnl_memory_none": [[307, "index-37"]], "dnnl_runtime_dim_val": [[307, "index-38"]], "dnnl_runtime_f32_val": [[307, "index-39"]], "dnnl_runtime_s32_val": [[307, "index-40"]], "dnnl_runtime_size_val": [[307, "index-41"]], "memory": [[307, "index-0"], [481, "index-2"], [523, "index-3"], [523, "index-4"], [523, "index-5"], [523, "index-6"]], "const_dnnl_memory_desc_t": [[307, "index-2"]], "const_dnnl_memory_t": [[307, "index-4"]], "dnnl_data_type_size": [[307, "index-22"]], "dnnl_memory_create": [[307, "index-23"]], "dnnl_memory_create_v2": [[307, "index-24"]], "dnnl_memory_desc_clone": [[307, "index-6"]], "dnnl_memory_desc_create_submemory": [[307, "index-14"]], "dnnl_memory_desc_create_with_blob": [[307, "index-8"]], "dnnl_memory_desc_create_with_coo_encoding": [[307, "index-12"]], "dnnl_memory_desc_create_with_csr_encoding": [[307, "index-11"]], "dnnl_memory_desc_create_with_packed_encoding": [[307, "index-13"]], "dnnl_memory_desc_create_with_strides": [[307, "index-9"]], "dnnl_memory_desc_create_with_tag": [[307, "index-10"]], "dnnl_memory_desc_destroy": [[307, "index-5"]], "dnnl_memory_desc_equal": [[307, "index-19"]], "dnnl_memory_desc_get_blob": [[307, "index-7"]], "dnnl_memory_desc_get_size": [[307, "index-20"]], "dnnl_memory_desc_get_size_v2": [[307, "index-21"]], "dnnl_memory_desc_permute_axes": [[307, "index-16"]], "dnnl_memory_desc_query": [[307, "index-17"]], "dnnl_memory_desc_query_v2": [[307, "index-18"]], "dnnl_memory_desc_reshape": [[307, "index-15"]], "dnnl_memory_desc_t": [[307, "index-1"]], "dnnl_memory_destroy": [[307, "index-35"]], "dnnl_memory_get_data_handle": [[307, "index-31"]], "dnnl_memory_get_data_handle_v2": [[307, "index-33"]], "dnnl_memory_get_engine": [[307, "index-26"]], "dnnl_memory_get_memory_desc": [[307, "index-25"]], "dnnl_memory_map_data": [[307, "index-27"]], "dnnl_memory_map_data_v2": [[307, "index-28"]], "dnnl_memory_set_data_handle": [[307, "index-32"]], "dnnl_memory_set_data_handle_v2": [[307, "index-34"]], "dnnl_memory_t": [[307, "index-3"]], "dnnl_memory_unmap_data": [[307, "index-29"]], "dnnl_memory_unmap_data_v2": [[307, "index-30"]], "opencl interoperability api": [[308, "index-0"], [340, "index-0"]], "dnnl_ocl_interop_engine_create": [[308, "index-9"]], "dnnl_ocl_interop_engine_create_from_cache_blob": [[308, "index-8"]], "dnnl_ocl_interop_engine_get_cache_blob": [[308, "index-7"]], "dnnl_ocl_interop_engine_get_cache_blob_id": [[308, "index-6"]], "dnnl_ocl_interop_engine_get_context": [[308, "index-10"]], "dnnl_ocl_interop_get_device": [[308, "index-11"]], "dnnl_ocl_interop_memory_create": [[308, "index-1"]], "dnnl_ocl_interop_memory_create_v2": [[308, "index-2"]], "dnnl_ocl_interop_memory_get_mem_object": [[308, "index-4"]], "dnnl_ocl_interop_memory_get_memory_kind": [[308, "index-3"]], "dnnl_ocl_interop_memory_set_mem_object": [[308, "index-5"]], "dnnl_ocl_interop_primitive_execute": [[308, "index-14"]], "dnnl_ocl_interop_stream_create": [[308, "index-12"]], "dnnl_ocl_interop_stream_get_command_queue": [[308, "index-13"]], "dnnl_pooling_backward_primitive_desc_create": [[309, "index-2"]], "dnnl_pooling_forward_primitive_desc_create": [[309, "index-1"]], "dnnl_prelu_backward_primitive_desc_create": [[310, "index-2"]], "dnnl_prelu_forward_primitive_desc_create": [[310, "index-1"]], "dnnl_get_primitive_cache_capacity": [[311, "index-3"]], "dnnl_set_primitive_cache_capacity": [[311, "index-4"]], "get_primitive_cache_capacity": [[311, "index-1"]], "set_primitive_cache_capacity": [[311, "index-2"]], "primitives": [[312, "index-0"]], "common": [[313, "index-0"]], "dnnl_arg_attr_dropout_mask": [[313, "index-21"]], "dnnl_arg_attr_dropout_probability": [[313, "index-22"]], "dnnl_arg_attr_dropout_seed": [[313, "index-23"]], "dnnl_arg_attr_multiple_post_op": [[313, "index-24"]], "dnnl_arg_attr_multiple_post_op_base": [[313, "index-25"]], "dnnl_arg_attr_output_scales": [[313, "index-26"]], "dnnl_arg_attr_post_op_dw": [[313, "index-27"]], "dnnl_arg_attr_rounding_seed": [[313, "index-28"]], "dnnl_arg_attr_scales": [[313, "index-29"]], "dnnl_arg_attr_zero_points": [[313, "index-30"]], "dnnl_arg_augru_attention": [[313, "index-31"]], "dnnl_arg_bias": [[313, "index-32"]], "dnnl_arg_diff_augru_attention": [[313, "index-33"]], "dnnl_arg_diff_bias": [[313, "index-34"]], "dnnl_arg_diff_dst": [[313, "index-35"]], "dnnl_arg_diff_dst_0": [[313, "index-36"]], "dnnl_arg_diff_dst_1": [[313, "index-37"]], "dnnl_arg_diff_dst_2": [[313, "index-38"]], "dnnl_arg_diff_dst_iter": [[313, "index-39"]], "dnnl_arg_diff_dst_iter_c": [[313, "index-40"]], "dnnl_arg_diff_dst_layer": [[313, "index-41"]], "dnnl_arg_diff_scale": [[313, "index-42"]], "dnnl_arg_diff_shift": [[313, "index-43"]], "dnnl_arg_diff_src": [[313, "index-44"]], "dnnl_arg_diff_src_0": [[313, "index-45"]], "dnnl_arg_diff_src_1": [[313, "index-46"]], "dnnl_arg_diff_src_2": [[313, "index-47"]], "dnnl_arg_diff_src_3": [[313, "index-48"]], "dnnl_arg_diff_src_iter": [[313, "index-49"]], "dnnl_arg_diff_src_iter_c": [[313, "index-50"]], "dnnl_arg_diff_src_layer": [[313, "index-51"]], "dnnl_arg_diff_weights": [[313, "index-52"]], "dnnl_arg_diff_weights_0": [[313, "index-53"]], "dnnl_arg_diff_weights_1": [[313, "index-54"]], "dnnl_arg_diff_weights_2": [[313, "index-55"]], "dnnl_arg_diff_weights_3": [[313, "index-56"]], "dnnl_arg_diff_weights_iter": [[313, "index-57"]], "dnnl_arg_diff_weights_layer": [[313, "index-58"]], "dnnl_arg_diff_weights_peephole": [[313, "index-59"]], "dnnl_arg_diff_weights_projection": [[313, "index-60"]], "dnnl_arg_dst": [[313, "index-61"]], "dnnl_arg_dst_0": [[313, "index-62"]], "dnnl_arg_dst_1": [[313, "index-63"]], "dnnl_arg_dst_2": [[313, "index-64"]], "dnnl_arg_dst_iter": [[313, "index-65"]], "dnnl_arg_dst_iter_c": [[313, "index-66"]], "dnnl_arg_dst_layer": [[313, "index-67"]], "dnnl_arg_from": [[313, "index-68"]], "dnnl_arg_mean": [[313, "index-69"]], "dnnl_arg_multiple_dst": [[313, "index-70"]], "dnnl_arg_multiple_src": [[313, "index-71"]], "dnnl_arg_scale": [[313, "index-72"]], "dnnl_arg_scratchpad": [[313, "index-73"]], "dnnl_arg_shift": [[313, "index-74"]], "dnnl_arg_src": [[313, "index-75"]], "dnnl_arg_src_0": [[313, "index-76"]], "dnnl_arg_src_1": [[313, "index-77"]], "dnnl_arg_src_2": [[313, "index-78"]], "dnnl_arg_src_3": [[313, "index-79"]], "dnnl_arg_src_iter": [[313, "index-80"]], "dnnl_arg_src_iter_c": [[313, "index-81"]], "dnnl_arg_src_layer": [[313, "index-82"]], "dnnl_arg_to": [[313, "index-83"]], "dnnl_arg_undef": [[313, "index-84"]], "dnnl_arg_variance": [[313, "index-85"]], "dnnl_arg_weights": [[313, "index-86"]], "dnnl_arg_weights_0": [[313, "index-87"]], "dnnl_arg_weights_1": [[313, "index-88"]], "dnnl_arg_weights_2": [[313, "index-89"]], "dnnl_arg_weights_3": [[313, "index-90"]], "dnnl_arg_weights_iter": [[313, "index-91"]], "dnnl_arg_weights_layer": [[313, "index-92"]], "dnnl_arg_weights_peephole": [[313, "index-93"]], "dnnl_arg_weights_projection": [[313, "index-94"]], "dnnl_arg_workspace": [[313, "index-95"]], "const_dnnl_primitive_desc_t": [[313, "index-2"]], "const_dnnl_primitive_t": [[313, "index-4"]], "dnnl_primitive_create": [[313, "index-15"]], "dnnl_primitive_create_from_cache_blob": [[313, "index-16"]], "dnnl_primitive_desc_clone": [[313, "index-9"]], "dnnl_primitive_desc_destroy": [[313, "index-11"]], "dnnl_primitive_desc_get_attr": [[313, "index-10"]], "dnnl_primitive_desc_next_impl": [[313, "index-8"]], "dnnl_primitive_desc_query": [[313, "index-12"]], "dnnl_primitive_desc_query_md": [[313, "index-13"]], "dnnl_primitive_desc_query_s32": [[313, "index-14"]], "dnnl_primitive_desc_t": [[313, "index-1"]], "dnnl_primitive_destroy": [[313, "index-20"]], "dnnl_primitive_execute": [[313, "index-17"]], "dnnl_primitive_get_cache_blob": [[313, "index-19"]], "dnnl_primitive_get_primitive_desc": [[313, "index-18"]], "dnnl_primitive_t": [[313, "index-3"]], "profiling": [[314, "index-0"]], "dnnl_query_profiling_data": [[314, "index-4"]], "dnnl_reset_profiling": [[314, "index-3"]], "get_profiling_data": [[314, "index-2"]], "reset_profiling": [[314, "index-1"]], "dnnl_reduction_primitive_desc_create": [[315, "index-1"]], "dnnl_reorder_primitive_desc_create": [[316, "index-1"]], "dnnl_resampling_backward_primitive_desc_create": [[317, "index-2"]], "dnnl_resampling_forward_primitive_desc_create": [[317, "index-1"]], "dnnl_augru_backward_primitive_desc_create": [[318, "index-12"]], "dnnl_augru_forward_primitive_desc_create": [[318, "index-11"]], "dnnl_gru_backward_primitive_desc_create": [[318, "index-8"]], "dnnl_gru_forward_primitive_desc_create": [[318, "index-7"]], "dnnl_lbr_augru_backward_primitive_desc_create": [[318, "index-14"]], "dnnl_lbr_augru_forward_primitive_desc_create": [[318, "index-13"]], "dnnl_lbr_gru_backward_primitive_desc_create": [[318, "index-10"]], "dnnl_lbr_gru_forward_primitive_desc_create": [[318, "index-9"]], "dnnl_lstm_backward_primitive_desc_create": [[318, "index-6"]], "dnnl_lstm_forward_primitive_desc_create": [[318, "index-5"]], "dnnl_vanilla_rnn_backward_primitive_desc_create": [[318, "index-4"]], "dnnl_vanilla_rnn_forward_primitive_desc_create": [[318, "index-3"]], "dnnl_jit_profile_linux_jitdump": [[319, "index-22"]], "dnnl_jit_profile_linux_jitdump_use_tsc": [[319, "index-23"]], "dnnl_jit_profile_linux_perf": [[319, "index-24"]], "dnnl_jit_profile_linux_perfmap": [[319, "index-25"]], "dnnl_jit_profile_none": [[319, "index-26"]], "dnnl_jit_profile_vtune": [[319, "index-27"]], "service": [[319, "index-0"]], "dnnl_get_cpu_isa_hints": [[319, "index-19"]], "dnnl_get_effective_cpu_isa": [[319, "index-17"]], "dnnl_set_cpu_isa_hints": [[319, "index-18"]], "dnnl_set_jit_dump": [[319, "index-13"]], "dnnl_set_jit_profiling_flags": [[319, "index-14"]], "dnnl_set_jit_profiling_jitdumpdir": [[319, "index-15"]], "dnnl_set_max_cpu_isa": [[319, "index-16"]], "dnnl_set_verbose": [[319, "index-20"]], "dnnl_version": [[319, "index-21"]], "get_cpu_isa_hints": [[319, "index-12"]], "get_default_fpmath_mode": [[319, "index-4"]], "get_effective_cpu_isa": [[319, "index-10"]], "set_cpu_isa_hints": [[319, "index-11"]], "set_default_fpmath_mode": [[319, "index-5"]], "set_jit_dump": [[319, "index-6"]], "set_jit_profiling_flags": [[319, "index-7"]], "set_jit_profiling_jitdumpdir": [[319, "index-8"]], "set_max_cpu_isa": [[319, "index-9"]], "set_verbose": [[319, "index-2"]], "version": [[319, "index-3"]], "version_t": [[319, "index-1"]], "dnnl_shuffle_backward_primitive_desc_create": [[320, "index-2"]], "dnnl_shuffle_forward_primitive_desc_create": [[320, "index-1"]], "dnnl_softmax_backward_primitive_desc_create": [[321, "index-2"]], "dnnl_softmax_forward_primitive_desc_create": [[321, "index-1"]], "stream": [[322, "index-0"], [561, "index-1"], [561, "index-2"]], "const_dnnl_stream_t": [[322, "index-2"]], "dnnl_stream_create": [[322, "index-3"]], "dnnl_stream_destroy": [[322, "index-6"]], "dnnl_stream_get_engine": [[322, "index-4"]], "dnnl_stream_t": [[322, "index-1"]], "dnnl_stream_wait": [[322, "index-5"]], "dnnl_sum_primitive_desc_create": [[323, "index-1"]], "sycl interoperability api": [[324, "index-0"], [344, "index-0"]], "dnnl_sycl_interop_engine_create": [[324, "index-1"]], "dnnl_sycl_interop_engine_get_context": [[324, "index-2"]], "dnnl_sycl_interop_engine_get_device": [[324, "index-3"]], "dnnl_sycl_interop_memory_create": [[324, "index-4"]], "dnnl_sycl_interop_memory_create_v2": [[324, "index-5"]], "dnnl_sycl_interop_memory_get_memory_kind": [[324, "index-6"]], "dnnl_sycl_interop_memory_set_buffer": [[324, "index-7"]], "dnnl_sycl_interop_primitive_execute": [[324, "index-10"]], "dnnl_sycl_interop_stream_create": [[324, "index-8"]], "dnnl_sycl_interop_stream_get_queue": [[324, "index-9"]], "threadpool interoperability api": [[325, "index-0"]], "dnnl_threadpool_interop_gemm_s8s8s32": [[325, "index-7"]], "dnnl_threadpool_interop_gemm_u8s8s32": [[325, "index-6"]], "dnnl_threadpool_interop_get_max_concurrency": [[325, "index-4"]], "dnnl_threadpool_interop_set_max_concurrency": [[325, "index-3"]], "dnnl_threadpool_interop_sgemm": [[325, "index-5"]], "dnnl_threadpool_interop_stream_create": [[325, "index-1"]], "dnnl_threadpool_interop_stream_get_threadpool": [[325, "index-2"]], "ukernels": [[326, "index-0"]], "const_dnnl_ukernel_attr_params_t": [[326, "index-2"]], "dnnl_ukernel_attr_params_create": [[326, "index-3"]], "dnnl_ukernel_attr_params_destroy": [[326, "index-8"]], "dnnl_ukernel_attr_params_set_a_scales": [[326, "index-5"]], "dnnl_ukernel_attr_params_set_b_scales": [[326, "index-6"]], "dnnl_ukernel_attr_params_set_d_scales": [[326, "index-7"]], "dnnl_ukernel_attr_params_set_post_ops_args": [[326, "index-4"]], "dnnl_ukernel_attr_params_t": [[326, "index-1"]], "brgemm ukernel": [[327, "index-0"]], "const_dnnl_brgemm_t": [[327, "index-2"]], "const_dnnl_transform_t": [[327, "index-4"]], "dnnl_brgemm_create": [[327, "index-5"]], "dnnl_brgemm_destroy": [[327, "index-20"]], "dnnl_brgemm_execute": [[327, "index-18"]], "dnnl_brgemm_execute_postops": [[327, "index-19"]], "dnnl_brgemm_finalize": [[327, "index-11"]], "dnnl_brgemm_generate": [[327, "index-17"]], "dnnl_brgemm_get_b_pack_type": [[327, "index-12"]], "dnnl_brgemm_get_scratchpad_size": [[327, "index-13"]], "dnnl_brgemm_is_execute_postops_valid": [[327, "index-14"]], "dnnl_brgemm_release_hw_context": [[327, "index-16"]], "dnnl_brgemm_set_a_scales": [[327, "index-8"]], "dnnl_brgemm_set_b_scales": [[327, "index-9"]], "dnnl_brgemm_set_d_scales": [[327, "index-10"]], "dnnl_brgemm_set_add_c": [[327, "index-6"]], "dnnl_brgemm_set_hw_context": [[327, "index-15"]], "dnnl_brgemm_set_post_ops": [[327, "index-7"]], "dnnl_brgemm_t": [[327, "index-1"]], "dnnl_transform_create": [[327, "index-21"]], "dnnl_transform_destroy": [[327, "index-24"]], "dnnl_transform_execute": [[327, "index-23"]], "dnnl_transform_generate": [[327, "index-22"]], "dnnl_transform_t": [[327, "index-3"]], "transform ukernel": [[328, "index-0"]], "ukernel utils": [[329, "index-0"]], "utilities": [[330, "index-0"], [346, "index-0"]], "graph api": [[331, "index-0"]], "const_dnnl_graph_allocator_t": [[332, "index-4"]], "dnnl_graph_allocator_create": [[332, "index-5"]], "dnnl_graph_allocator_destroy": [[332, "index-6"]], "dnnl_graph_allocator_t": [[332, "index-3"]], "dnnl_graph_host_allocate_f": [[332, "index-1"]], "dnnl_graph_host_deallocate_f": [[332, "index-2"]], "compiled partition": [[333, "index-0"]], "const_dnnl_graph_compiled_partition_t": [[333, "index-2"]], "dnnl_graph_compiled_partition_create": [[333, "index-3"]], "dnnl_graph_compiled_partition_destroy": [[333, "index-5"]], "dnnl_graph_compiled_partition_execute": [[333, "index-4"]], "dnnl_graph_compiled_partition_get_inplace_ports": [[333, "index-7"]], "dnnl_graph_compiled_partition_query_logical_tensor": [[333, "index-6"]], "dnnl_graph_compiled_partition_t": [[333, "index-1"]], "compiled partition cache": [[334, "index-0"]], "dnnl_graph_get_compiled_partition_cache_capacity": [[334, "index-3"]], "dnnl_graph_set_compiled_partition_cache_capacity": [[334, "index-4"]], "get_compiled_partition_cache_capacity": [[334, "index-1"]], "set_compiled_partition_cache_capacity": [[334, "index-2"]], "dnnl_graph_get_constant_tensor_cache": [[335, "index-6"]], "dnnl_graph_get_constant_tensor_cache_capacity": [[335, "index-8"]], "dnnl_graph_set_constant_tensor_cache": [[335, "index-5"]], "dnnl_graph_set_constant_tensor_cache_capacity": [[335, "index-7"]], "get_constant_tensor_cache": [[335, "index-2"]], "get_constant_tensor_cache_capacity": [[335, "index-4"]], "set_constant_tensor_cache": [[335, "index-1"]], "set_constant_tensor_cache_capacity": [[335, "index-3"]], "dnnl_graph_make_engine_with_allocator": [[336, "index-2"]], "make_engine_with_allocator": [[336, "index-1"], [351, "index-2"], [351, "index-3"]], "const_dnnl_graph_graph_t": [[337, "index-2"]], "dnnl_graph_add_op": [[337, "index-8"]], "dnnl_graph_graph_create": [[337, "index-3"]], "dnnl_graph_graph_create_with_fpmath_mode": [[337, "index-4"]], "dnnl_graph_graph_destroy": [[337, "index-5"]], "dnnl_graph_graph_filter": [[337, "index-11"]], "dnnl_graph_graph_finalize": [[337, "index-9"]], "dnnl_graph_graph_get_fpmath_mode": [[337, "index-7"]], "dnnl_graph_graph_get_partition_num": [[337, "index-12"]], "dnnl_graph_graph_get_partitions": [[337, "index-13"]], "dnnl_graph_graph_is_finalized": [[337, "index-10"]], "dnnl_graph_graph_set_fpmath_mode": [[337, "index-6"]], "dnnl_graph_graph_t": [[337, "index-1"]], "dnnl_graph_unknown_dim": [[339, "index-6"]], "dnnl_graph_unknown_ndims": [[339, "index-7"]], "logical tensor": [[339, "index-0"]], "dnnl_graph_logical_tensor_get_mem_size": [[339, "index-4"]], "dnnl_graph_logical_tensor_init": [[339, "index-1"]], "dnnl_graph_logical_tensor_init_with_dims": [[339, "index-2"]], "dnnl_graph_logical_tensor_init_with_strides": [[339, "index-3"]], "dnnl_graph_logical_tensor_is_equal": [[339, "index-5"]], "dnnl_graph_ocl_allocate_f": [[340, "index-1"]], "dnnl_graph_ocl_deallocate_f": [[340, "index-2"]], "dnnl_graph_ocl_interop_allocator_create": [[340, "index-3"]], "dnnl_graph_ocl_interop_compiled_partition_execute": [[340, "index-6"]], "dnnl_graph_ocl_interop_make_engine_from_cache_blob_with_allocator": [[340, "index-5"]], "dnnl_graph_ocl_interop_make_engine_with_allocator": [[340, "index-4"]], "const_dnnl_graph_op_t": [[341, "index-2"]], "dnnl_graph_op_add_input": [[341, "index-5"]], "dnnl_graph_op_add_output": [[341, "index-6"]], "dnnl_graph_op_create": [[341, "index-3"]], "dnnl_graph_op_destroy": [[341, "index-4"]], "dnnl_graph_op_get_id": [[341, "index-11"]], "dnnl_graph_op_get_kind": [[341, "index-12"]], "dnnl_graph_op_set_attr_bool": [[341, "index-8"]], "dnnl_graph_op_set_attr_f32": [[341, "index-7"]], "dnnl_graph_op_set_attr_s64": [[341, "index-9"]], "dnnl_graph_op_set_attr_str": [[341, "index-10"]], "dnnl_graph_op_t": [[341, "index-1"]], "const_dnnl_graph_partition_t": [[342, "index-2"]], "dnnl_graph_partition_compile": [[342, "index-8"]], "dnnl_graph_partition_create_with_op": [[342, "index-3"]], "dnnl_graph_partition_destroy": [[342, "index-4"]], "dnnl_graph_partition_get_engine_kind": [[342, "index-14"]], "dnnl_graph_partition_get_id": [[342, "index-7"]], "dnnl_graph_partition_get_input_ports": [[342, "index-10"]], "dnnl_graph_partition_get_input_ports_num": [[342, "index-9"]], "dnnl_graph_partition_get_op_num": [[342, "index-5"]], "dnnl_graph_partition_get_ops": [[342, "index-6"]], "dnnl_graph_partition_get_output_ports": [[342, "index-12"]], "dnnl_graph_partition_get_output_ports_num": [[342, "index-11"]], "dnnl_graph_partition_is_supported": [[342, "index-13"]], "dnnl_graph_partition_t": [[342, "index-1"]], "dnnl_graph_sycl_allocate_f": [[344, "index-1"]], "dnnl_graph_sycl_deallocate_f": [[344, "index-2"]], "dnnl_graph_sycl_interop_allocator_create": [[344, "index-3"]], "dnnl_graph_sycl_interop_compiled_partition_execute": [[344, "index-5"]], "dnnl_graph_sycl_interop_make_engine_with_allocator": [[344, "index-4"]], "const_dnnl_graph_tensor_t": [[345, "index-2"]], "dnnl_graph_tensor_create": [[345, "index-3"]], "dnnl_graph_tensor_destroy": [[345, "index-4"]], "dnnl_graph_tensor_get_data_handle": [[345, "index-5"]], "dnnl_graph_tensor_get_engine": [[345, "index-7"]], "dnnl_graph_tensor_get_logical_tensor": [[345, "index-8"]], "dnnl_graph_tensor_set_data_handle": [[345, "index-6"]], "dnnl_graph_tensor_t": [[345, "index-1"]], "dnnl": [[349, "index-0"]], "dnnl::graph": [[350, "index-0"]], "dnnl::graph::ocl_interop": [[351, "index-0"]], "make_allocator": [[351, "index-1"], [352, "index-1"]], "dnnl::graph::sycl_interop": [[352, "index-0"]], "dnnl::ocl_interop": [[353, "index-0"]], "get_command_queue": [[353, "index-9"]], "get_context": [[353, "index-6"], [354, "index-3"]], "get_device": [[353, "index-7"], [354, "index-4"]], "get_engine_cache_blob": [[353, "index-3"]], "get_engine_cache_blob_id": [[353, "index-2"]], "get_mem_object": [[353, "index-10"]], "get_memory_kind": [[353, "index-12"], [354, "index-9"]], "make_engine": [[353, "index-4"], [353, "index-5"], [354, "index-2"]], "make_memory": [[353, "index-13"], [353, "index-14"], [353, "index-15"], [353, "index-16"], [354, "index-10"], [354, "index-11"], [354, "index-12"]], "make_stream": [[353, "index-8"], [354, "index-5"], [355, "index-1"]], "set_mem_object": [[353, "index-11"]], "dnnl::sycl_interop": [[354, "index-0"]], "get_buffer": [[354, "index-7"]], "get_queue": [[354, "index-6"]], "set_buffer": [[354, "index-8"]], "dnnl::threadpool_interop": [[355, "index-0"]], "get_threadpool": [[355, "index-2"]], "dnnl::ukernel": [[356, "index-0"]], "oneapi": [[357, "index-0"]], "std": [[358, "index-0"]], "sycl": [[359, "index-0"]], "augru rnn primitive example": [[361, "index-0"]], "batch normalization primitive example": [[363, "index-0"]], "binary primitive example": [[365, "index-0"]], "bnorm u8 by binary post-ops example": [[367, "index-0"]], "cnn f32 inference example": [[369, "index-0"], [370, "index-0"]], "cnn int8 inference example": [[371, "index-0"]], "cnn bf16 training example": [[372, "index-0"]], "cnn f32 training example": [[373, "index-0"], [379, "index-0"]], "concat primitive example": [[374, "index-0"]], "convolution primitive example": [[376, "index-0"]], "brgemm ukernel example": [[378, "index-0"]], "matmul primitive example": [[380, "index-0"], [381, "index-0"], [384, "index-0"], [418, "index-0"]], "matmul tutorial: quantization": [[382, "index-0"]], "rnn f32 inference example": [[385, "index-0"]], "rnn int8 inference example": [[386, "index-0"]], "matmul tutorial: comparison with sgemm": [[387, "index-0"]], "reorder between cpu and gpu engines": [[389, "index-0"], [390, "index-0"]], "deconvolution primitive example": [[391, "index-0"]], "element-wise primitive example": [[393, "index-0"]], "getting started": [[395, "index-0"]], "getting started on gpu with opencl extensions api": [[396, "index-0"]], "getting started on cpu with graph api": [[397, "index-0"]], "convolution int8 inference example with graph api": [[398, "index-0"]], "single op partition on cpu": [[399, "index-0"]], "getting started with opencl extensions and graph api": [[400, "index-0"]], "getting started with sycl extensions api and graph api": [[401, "index-0"]], "single op partition on gpu": [[402, "index-0"]], "group normalization primitive example": [[403, "index-0"]], "matmul tutorial: int8 inference": [[405, "index-0"]], "inner product primitive example": [[407, "index-0"]], "layer normalization primitive example": [[409, "index-0"]], "linear-before-reset gru rnn primitive example": [[411, "index-0"]], "legal information": [[413, "index-0"]], "local response normalization primitive example": [[414, "index-0"]], "lstm rnn primitive example": [[416, "index-0"]], "memory format propagation": [[420, "index-0"]], "performance profiling example": [[421, "index-0"]], "pooling primitive example": [[422, "index-0"]], "primitive example": [[424, "index-0"]], "reduction primitive example": [[426, "index-0"]], "reorder primitive example": [[428, "index-0"]], "resampling primitive example": [[430, "index-0"]], "rnn f32 training example": [[432, "index-0"]], "shuffle primitive example": [[433, "index-0"]], "softmax primitive example": [[435, "index-0"]], "sum primitive example": [[437, "index-0"]], "getting started on both cpu and gpu with sycl extensions api": [[439, "index-0"]], "todo list": [[440, "index-0"]], "vanilla rnn primitive example": [[441, "index-0"]], "matmul tutorial: weights decompression": [[443, "index-0"]], "args_t": [[447, "index-0"]], "struct": [[447, "index-0"], [448, "index-0"], [449, "index-0"], [450, "index-0"], [451, "index-0"], [452, "index-0"], [453, "index-0"], [454, "index-0"], [455, "index-0"], [456, "index-0"], [457, "index-0"], [458, "index-0"], [459, "index-0"], [460, "index-0"], [461, "index-0"], [462, "index-0"], [463, "index-0"], [464, "index-0"], [465, "index-0"], [466, "index-0"], [467, "index-0"], [468, "index-0"], [469, "index-0"], [470, "index-0"], [471, "index-0"], [472, "index-0"], [473, "index-0"], [474, "index-0"], [475, "index-0"], [476, "index-0"], [477, "index-0"], [478, "index-0"], [479, "index-0"], [480, "index-0"], [481, "index-0"], [482, "index-0"], [483, "index-0"], [484, "index-0"], [485, "index-0"], [486, "index-0"], [487, "index-0"], [488, "index-0"], [489, "index-0"], [490, "index-0"], [491, "index-0"], [492, "index-0"], [493, "index-0"], [494, "index-0"], [495, "index-0"], [496, "index-0"], [497, "index-0"], [498, "index-0"], [499, "index-0"], [500, "index-0"], [501, "index-0"], [502, "index-0"], [503, "index-0"], [504, "index-0"], [505, "index-0"], [506, "index-0"], [507, "index-0"], [508, "index-0"], [509, "index-0"], [510, "index-0"], [511, "index-0"], [512, "index-0"], [513, "index-0"], [514, "index-0"], [515, "index-0"], [516, "index-0"], [517, "index-0"], [518, "index-0"], [519, "index-0"], [520, "index-0"], [521, "index-0"], [522, "index-0"], [523, "index-0"], [524, "index-0"], [525, "index-0"], [526, "index-0"], [527, "index-0"], [528, "index-0"], [529, "index-0"], [530, "index-0"], [531, "index-0"], [532, "index-0"], [533, "index-0"], [534, "index-0"], [535, "index-0"], [536, "index-0"], [537, "index-0"], [538, "index-0"], [539, "index-0"], [540, "index-0"], [541, "index-0"], [542, "index-0"], [543, "index-0"], [544, "index-0"], [545, "index-0"], [546, "index-0"], [547, "index-0"], [548, "index-0"], [549, "index-0"], [550, "index-0"], [551, "index-0"], [552, "index-0"], [553, "index-0"], [554, "index-0"], [555, "index-0"], [556, "index-0"], [557, "index-0"], [558, "index-0"], [559, "index-0"], [560, "index-0"], [561, "index-0"], [562, "index-0"], [563, "index-0"], [564, "index-0"], [565, "index-0"], [566, "index-0"], [567, "index-0"], [568, "index-0"], [569, "index-0"], [570, "index-0"], [571, "index-0"], [572, "index-0"], [573, "index-0"], [574, "index-0"], [575, "index-0"], [576, "index-0"], [577, "index-0"], [578, "index-0"], [579, "index-0"], [580, "index-0"], [581, "index-0"]], "cpu_deletor": [[448, "index-0"]], "augru_backward": [[449, "index-1"], [449, "index-2"], [449, "index-3"]], "dnnl::augru_backward": [[449, "index-0"]], "attention_desc": [[450, "index-6"], [452, "index-6"], [505, "index-6"], [507, "index-6"]], "bias_desc": [[450, "index-9"], [452, "index-9"], [467, "index-10"], [473, "index-10"], [489, "index-8"], [491, "index-8"], [499, "index-8"], [505, "index-9"], [507, "index-9"], [509, "index-8"], [511, "index-8"], [517, "index-13"], [519, "index-13"], [521, "index-7"], [551, "index-11"], [571, "index-9"], [573, "index-9"]], "diff_attention_desc": [[450, "index-15"], [505, "index-15"]], "diff_bias_desc": [[450, "index-18"], [465, "index-10"], [471, "index-10"], [489, "index-16"], [497, "index-8"], [505, "index-18"], [509, "index-16"], [517, "index-25"], [551, "index-23"], [571, "index-17"]], "diff_dst_iter_desc": [[450, "index-20"], [489, "index-18"], [505, "index-20"], [509, "index-18"], [517, "index-27"], [551, "index-25"], [571, "index-19"]], "diff_dst_layer_desc": [[450, "index-19"], [489, "index-17"], [505, "index-19"], [509, "index-17"], [517, "index-26"], [551, "index-24"], [571, "index-18"]], "diff_src_iter_desc": [[450, "index-14"], [489, "index-13"], [505, "index-14"], [509, "index-13"], [517, "index-19"], [551, "index-17"], [571, "index-14"]], "diff_src_layer_desc": [[450, "index-13"], [489, "index-12"], [505, "index-13"], [509, "index-12"], [517, "index-18"], [551, "index-15"], [571, "index-13"]], "diff_weights_iter_desc": [[450, "index-17"], [489, "index-15"], [505, "index-17"], [509, "index-15"], [517, "index-22"], [551, "index-20"], [571, "index-16"]], "diff_weights_layer_desc": [[450, "index-16"], [489, "index-14"], [505, "index-16"], [509, "index-14"], [517, "index-21"], [551, "index-19"], [571, "index-15"]], "dnnl::augru_backward::primitive_desc": [[450, "index-0"]], "dst_iter_desc": [[450, "index-11"], [452, "index-11"], [489, "index-10"], [491, "index-10"], [505, "index-11"], [507, "index-11"], [509, "index-10"], [511, "index-10"], [517, "index-15"], [519, "index-15"], [551, "index-13"], [571, "index-11"], [573, "index-11"]], "dst_layer_desc": [[450, "index-10"], [452, "index-10"], [489, "index-9"], [491, "index-9"], [505, "index-10"], [507, "index-10"], [509, "index-9"], [511, "index-9"], [517, "index-14"], [519, "index-14"], [551, "index-12"], [571, "index-10"], [573, "index-10"]], "get_cell_kind": [[450, "index-21"], [452, "index-13"], [489, "index-19"], [491, "index-12"], [505, "index-21"], [507, "index-13"], [509, "index-19"], [511, "index-12"], [517, "index-29"], [519, "index-18"], [542, "index-18"], [571, "index-20"], [573, "index-13"]], "get_direction": [[450, "index-23"], [452, "index-15"], [489, "index-21"], [491, "index-14"], [505, "index-23"], [507, "index-15"], [509, "index-21"], [511, "index-14"], [517, "index-31"], [519, "index-20"], [542, "index-19"], [571, "index-23"], [573, "index-16"]], "get_prop_kind": [[450, "index-22"], [452, "index-14"], [454, "index-13"], [456, "index-10"], [463, "index-9"], [465, "index-12"], [467, "index-12"], [469, "index-9"], [471, "index-12"], [473, "index-12"], [475, "index-10"], [477, "index-9"], [485, "index-13"], [487, "index-10"], [489, "index-20"], [491, "index-13"], [495, "index-7"], [497, "index-9"], [499, "index-9"], [501, "index-16"], [503, "index-13"], [505, "index-22"], [507, "index-14"], [509, "index-20"], [511, "index-13"], [513, "index-8"], [515, "index-8"], [517, "index-30"], [519, "index-19"], [527, "index-8"], [529, "index-8"], [533, "index-7"], [535, "index-6"], [542, "index-23"], [553, "index-6"], [555, "index-6"], [557, "index-8"], [559, "index-7"], [571, "index-21"], [573, "index-14"]], "primitive_desc": [[450, "index-1"], [450, "index-2"], [450, "index-3"], [452, "index-1"], [452, "index-2"], [452, "index-3"], [454, "index-1"], [454, "index-2"], [454, "index-3"], [456, "index-1"], [456, "index-2"], [456, "index-3"], [458, "index-1"], [458, "index-2"], [458, "index-3"], [458, "index-4"], [461, "index-1"], [461, "index-2"], [461, "index-3"], [461, "index-4"], [463, "index-1"], [463, "index-2"], [463, "index-3"], [463, "index-4"], [465, "index-1"], [465, "index-2"], [465, "index-3"], [465, "index-4"], [465, "index-5"], [465, "index-6"], [467, "index-1"], [467, "index-2"], [467, "index-3"], [467, "index-4"], [467, "index-5"], [467, "index-6"], [469, "index-1"], [469, "index-2"], [469, "index-3"], [469, "index-4"], [471, "index-1"], [471, "index-2"], [471, "index-3"], [471, "index-4"], [471, "index-5"], [471, "index-6"], [473, "index-1"], [473, "index-2"], [473, "index-3"], [473, "index-4"], [473, "index-5"], [473, "index-6"], [475, "index-1"], [475, "index-2"], [475, "index-3"], [475, "index-4"], [475, "index-5"], [477, "index-1"], [477, "index-2"], [477, "index-3"], [477, "index-4"], [477, "index-5"], [485, "index-1"], [485, "index-2"], [485, "index-3"], [487, "index-1"], [487, "index-2"], [487, "index-3"], [489, "index-1"], [489, "index-2"], [489, "index-3"], [491, "index-1"], [491, "index-2"], [491, "index-3"], [495, "index-1"], [495, "index-2"], [495, "index-3"], [497, "index-1"], [497, "index-2"], [497, "index-3"], [497, "index-4"], [499, "index-1"], [499, "index-2"], [499, "index-3"], [499, "index-4"], [501, "index-1"], [501, "index-2"], [501, "index-3"], [501, "index-4"], [501, "index-5"], [501, "index-6"], [503, "index-1"], [503, "index-2"], [503, "index-3"], [503, "index-4"], [503, "index-5"], [503, "index-6"], [505, "index-1"], [505, "index-2"], [505, "index-3"], [507, "index-1"], [507, "index-2"], [507, "index-3"], [509, "index-1"], [509, "index-2"], [509, "index-3"], [511, "index-1"], [511, "index-2"], [511, "index-3"], [513, "index-1"], [513, "index-2"], [513, "index-3"], [515, "index-1"], [515, "index-2"], [515, "index-3"], [517, "index-1"], [517, "index-2"], [517, "index-3"], [517, "index-4"], [517, "index-5"], [519, "index-1"], [519, "index-2"], [519, "index-3"], [519, "index-4"], [519, "index-5"], [521, "index-1"], [521, "index-2"], [521, "index-3"], [521, "index-4"], [527, "index-1"], [527, "index-2"], [527, "index-3"], [529, "index-1"], [529, "index-2"], [529, "index-3"], [533, "index-1"], [533, "index-2"], [533, "index-3"], [535, "index-1"], [535, "index-2"], [535, "index-3"], [544, "index-1"], [544, "index-2"], [544, "index-3"], [546, "index-1"], [546, "index-2"], [546, "index-3"], [546, "index-4"], [548, "index-1"], [548, "index-2"], [548, "index-3"], [548, "index-4"], [550, "index-1"], [550, "index-2"], [550, "index-3"], [550, "index-4"], [550, "index-5"], [553, "index-1"], [553, "index-2"], [553, "index-3"], [555, "index-1"], [555, "index-2"], [555, "index-3"], [557, "index-1"], [557, "index-2"], [557, "index-3"], [559, "index-1"], [559, "index-2"], [559, "index-3"], [563, "index-1"], [563, "index-2"], [563, "index-3"], [563, "index-4"], [571, "index-1"], [571, "index-2"], [571, "index-3"], [571, "index-4"], [573, "index-1"], [573, "index-2"], [573, "index-3"], [573, "index-4"]], "src_iter_desc": [[450, "index-5"], [452, "index-5"], [489, "index-5"], [491, "index-5"], [505, "index-5"], [507, "index-5"], [509, "index-5"], [511, "index-5"], [517, "index-7"], [519, "index-7"], [551, "index-5"], [571, "index-6"], [573, "index-6"]], "src_layer_desc": [[450, "index-4"], [452, "index-4"], [489, "index-4"], [491, "index-4"], [505, "index-4"], [507, "index-4"], [509, "index-4"], [511, "index-4"], [517, "index-6"], [519, "index-6"], [551, "index-3"], [571, "index-5"], [573, "index-5"]], "weights_iter_desc": [[450, "index-8"], [452, "index-8"], [489, "index-7"], [491, "index-7"], [505, "index-8"], [507, "index-8"], [509, "index-7"], [511, "index-7"], [517, "index-10"], [519, "index-10"], [551, "index-8"], [571, "index-8"], [573, "index-8"]], "weights_layer_desc": [[450, "index-7"], [452, "index-7"], [489, "index-6"], [491, "index-6"], [505, "index-7"], [507, "index-7"], [509, "index-6"], [511, "index-6"], [517, "index-9"], [519, "index-9"], [551, "index-7"], [571, "index-7"], [573, "index-7"]], "workspace_desc": [[450, "index-12"], [452, "index-12"], [454, "index-12"], [456, "index-7"], [485, "index-12"], [487, "index-7"], [489, "index-11"], [491, "index-11"], [501, "index-15"], [503, "index-10"], [505, "index-12"], [507, "index-12"], [509, "index-11"], [511, "index-11"], [513, "index-6"], [515, "index-6"], [517, "index-17"], [519, "index-17"], [527, "index-6"], [529, "index-6"], [542, "index-37"], [571, "index-12"], [573, "index-12"]], "augru_forward": [[451, "index-1"], [451, "index-2"], [451, "index-3"]], "dnnl::augru_forward": [[451, "index-0"]], "dnnl::augru_forward::primitive_desc": [[452, "index-0"]], "batch_normalization_backward": [[453, "index-1"], [453, "index-2"], [453, "index-3"]], "dnnl::batch_normalization_backward": [[453, "index-0"]], "diff_dst_desc": [[454, "index-8"], [463, "index-7"], [465, "index-9"], [469, "index-7"], [471, "index-9"], [475, "index-8"], [485, "index-8"], [495, "index-6"], [497, "index-7"], [501, "index-11"], [513, "index-5"], [527, "index-5"], [533, "index-6"], [542, "index-29"], [542, "index-35"], [548, "index-6"], [553, "index-5"], [557, "index-6"]], "diff_src_desc": [[454, "index-7"], [463, "index-5"], [469, "index-5"], [475, "index-7"], [485, "index-7"], [495, "index-4"], [501, "index-10"], [513, "index-4"], [527, "index-4"], [533, "index-5"], [542, "index-28"], [542, "index-34"], [548, "index-5"], [553, "index-4"], [557, "index-5"]], "diff_weights_desc": [[454, "index-9"], [465, "index-8"], [471, "index-8"], [485, "index-9"], [497, "index-6"], [501, "index-12"], [542, "index-30"], [542, "index-36"]], "dnnl::batch_normalization_backward::primitive_desc": [[454, "index-0"]], "dst_desc": [[454, "index-6"], [456, "index-5"], [458, "index-9"], [461, "index-6"], [467, "index-9"], [473, "index-9"], [477, "index-7"], [485, "index-6"], [487, "index-5"], [499, "index-7"], [501, "index-9"], [503, "index-8"], [515, "index-5"], [521, "index-8"], [529, "index-5"], [535, "index-5"], [542, "index-26"], [542, "index-32"], [544, "index-5"], [546, "index-8"], [550, "index-7"], [555, "index-5"], [557, "index-4"], [559, "index-5"], [563, "index-6"]], "get_epsilon": [[454, "index-14"], [456, "index-11"], [485, "index-15"], [487, "index-12"], [501, "index-17"], [503, "index-14"], [542, "index-8"], [544, "index-7"]], "get_flags": [[454, "index-15"], [456, "index-12"], [485, "index-16"], [487, "index-13"], [501, "index-18"], [503, "index-15"], [542, "index-9"], [564, "index-5"]], "mean_desc": [[454, "index-10"], [456, "index-8"], [485, "index-10"], [487, "index-8"], [501, "index-13"], [503, "index-11"]], "src_desc": [[454, "index-4"], [456, "index-4"], [458, "index-5"], [461, "index-5"], [465, "index-7"], [467, "index-7"], [471, "index-7"], [473, "index-7"], [475, "index-6"], [477, "index-6"], [485, "index-4"], [487, "index-4"], [497, "index-5"], [499, "index-5"], [501, "index-7"], [503, "index-7"], [515, "index-4"], [521, "index-5"], [529, "index-4"], [533, "index-4"], [535, "index-4"], [542, "index-25"], [542, "index-31"], [544, "index-4"], [546, "index-7"], [550, "index-6"], [555, "index-4"], [559, "index-4"], [563, "index-5"]], "variance_desc": [[454, "index-11"], [456, "index-9"], [485, "index-11"], [487, "index-9"], [501, "index-14"], [503, "index-12"]], "weights_desc": [[454, "index-5"], [456, "index-6"], [463, "index-6"], [467, "index-8"], [469, "index-6"], [473, "index-8"], [485, "index-5"], [487, "index-6"], [495, "index-5"], [499, "index-6"], [501, "index-8"], [503, "index-9"], [521, "index-6"], [542, "index-27"], [542, "index-33"]], "batch_normalization_forward": [[455, "index-1"], [455, "index-2"], [455, "index-3"]], "dnnl::batch_normalization_forward": [[455, "index-0"]], "dnnl::batch_normalization_forward::primitive_desc": [[456, "index-0"]], "dnnl::binary": [[457, "index-0"]], "dnnl::binary::primitive_desc": [[458, "index-0"]], "get_algorithm": [[458, "index-10"], [463, "index-8"], [465, "index-11"], [467, "index-11"], [469, "index-8"], [471, "index-11"], [473, "index-11"], [475, "index-9"], [477, "index-8"], [513, "index-7"], [515, "index-7"], [527, "index-7"], [529, "index-7"], [542, "index-10"], [544, "index-8"], [557, "index-7"], [559, "index-6"]], "src0_desc": [[458, "index-6"]], "src1_desc": [[458, "index-7"]], "src2_desc": [[458, "index-8"]], "dnnl_brgemm": [[459, "index-0"]], "dnnl::concat": [[460, "index-0"]], "dnnl::concat::primitive_desc": [[461, "index-0"]], "primitive_desc_base": [[461, "index-10"], [461, "index-7"], [461, "index-8"], [461, "index-9"], [541, "index-2"], [541, "index-3"], [541, "index-4"], [541, "index-5"], [546, "index-10"], [546, "index-11"], [546, "index-12"], [546, "index-9"], [563, "index-10"], [563, "index-7"], [563, "index-8"], [563, "index-9"]], "convolution_backward_data": [[462, "index-1"], [462, "index-2"], [462, "index-3"]], "dnnl::convolution_backward_data": [[462, "index-0"]], "dnnl::convolution_backward_data::primitive_desc": [[463, "index-0"]], "get_dilations": [[463, "index-11"], [465, "index-14"], [467, "index-14"], [469, "index-11"], [471, "index-14"], [473, "index-14"], [527, "index-11"], [529, "index-11"], [542, "index-5"]], "get_padding_l": [[463, "index-12"], [465, "index-15"], [467, "index-15"], [469, "index-12"], [471, "index-15"], [473, "index-15"], [527, "index-12"], [529, "index-12"], [542, "index-6"]], "get_padding_r": [[463, "index-13"], [465, "index-16"], [467, "index-16"], [469, "index-13"], [471, "index-16"], [473, "index-16"], [527, "index-13"], [529, "index-13"], [542, "index-7"]], "convolution_backward_weights": [[464, "index-1"], [464, "index-2"], [464, "index-3"]], "dnnl::convolution_backward_weights": [[464, "index-0"]], "dnnl::convolution_backward_weights::primitive_desc": [[465, "index-0"]], "convolution_forward": [[466, "index-1"], [466, "index-2"], [466, "index-3"]], "dnnl::convolution_forward": [[466, "index-0"]], "dnnl::convolution_forward::primitive_desc": [[467, "index-0"]], "deconvolution_backward_data": [[468, "index-1"], [468, "index-2"], [468, "index-3"]], "dnnl::deconvolution_backward_data": [[468, "index-0"]], "dnnl::deconvolution_backward_data::primitive_desc": [[469, "index-0"]], "deconvolution_backward_weights": [[470, "index-1"], [470, "index-2"], [470, "index-3"]], "dnnl::deconvolution_backward_weights": [[470, "index-0"]], "dnnl::deconvolution_backward_weights::primitive_desc": [[471, "index-0"]], "deconvolution_forward": [[472, "index-1"], [472, "index-2"], [472, "index-3"]], "dnnl::deconvolution_forward": [[472, "index-0"]], "dnnl::deconvolution_forward::primitive_desc": [[473, "index-0"]], "dnnl::eltwise_backward": [[474, "index-0"]], "eltwise_backward": [[474, "index-1"], [474, "index-2"], [474, "index-3"]], "dnnl::eltwise_backward::primitive_desc": [[475, "index-0"]], "get_alpha": [[475, "index-11"], [477, "index-10"], [513, "index-9"], [515, "index-9"], [542, "index-11"], [571, "index-24"], [573, "index-17"]], "get_beta": [[475, "index-12"], [477, "index-11"], [513, "index-10"], [515, "index-10"], [542, "index-12"], [571, "index-25"], [573, "index-18"]], "dnnl::eltwise_forward": [[476, "index-0"]], "eltwise_forward": [[476, "index-1"], [476, "index-2"], [476, "index-3"]], "dnnl::eltwise_forward::primitive_desc": [[477, "index-0"]], "dnnl_engine": [[478, "index-0"]], "dnnl::engine": [[479, "index-0"]], "get_count": [[479, "index-8"]], "get_kind": [[479, "index-3"], [537, "index-7"], [542, "index-41"]], "handle": [[479, "index-4"], [479, "index-5"], [479, "index-6"], [479, "index-7"], [492, "index-1"], [492, "index-2"], [492, "index-3"], [492, "index-4"], [523, "index-15"], [523, "index-16"], [523, "index-17"], [523, "index-18"], [537, "index-10"], [537, "index-11"], [537, "index-12"], [537, "index-13"], [561, "index-5"], [561, "index-6"], [561, "index-7"], [561, "index-8"]], "dnnl::error": [[480, "index-0"]], "error": [[480, "index-1"]], "what": [[480, "index-2"]], "wrap_c_api": [[480, "index-3"]], "arg": [[481, "index-1"]], "dnnl_exec_arg_t": [[481, "index-0"]], "dnnl_graph_inplace_pair_t": [[482, "index-0"]], "input_id": [[482, "index-1"]], "output_id": [[482, "index-2"]], "dnnl_graph_logical_tensor_t": [[483, "index-0"]], "id": [[483, "index-1"]], "layout_id": [[483, "index-8"]], "ndims": [[483, "index-2"]], "property": [[483, "index-5"]], "dnnl::group_normalization_backward": [[484, "index-0"]], "group_normalization_backward": [[484, "index-1"], [484, "index-2"], [484, "index-3"]], "dnnl::group_normalization_backward::primitive_desc": [[485, "index-0"]], "get_group_size": [[485, "index-14"], [487, "index-11"], [542, "index-22"], [553, "index-8"], [555, "index-8"]], "dnnl::group_normalization_forward": [[486, "index-0"]], "group_normalization_forward": [[486, "index-1"], [486, "index-2"], [486, "index-3"]], "dnnl::group_normalization_forward::primitive_desc": [[487, "index-0"]], "dnnl::gru_backward": [[488, "index-0"]], "gru_backward": [[488, "index-1"], [488, "index-2"], [488, "index-3"]], "dnnl::gru_backward::primitive_desc": [[489, "index-0"]], "dnnl::gru_forward": [[490, "index-0"]], "gru_forward": [[490, "index-1"], [490, "index-2"], [490, "index-3"]], "dnnl::gru_forward::primitive_desc": [[491, "index-0"]], "dnnl::handle": [[492, "index-0"]], "get": [[492, "index-8"]], "operator t": [[492, "index-9"]], "operator bool": [[492, "index-10"]], "operator!=": [[492, "index-12"], [525, "index-27"]], "operator==": [[492, "index-11"], [525, "index-26"]], "reset": [[492, "index-7"]], "dnnl::handle_traits": [[493, "index-0"]], "dnnl::inner_product_backward_data": [[494, "index-0"]], "inner_product_backward_data": [[494, "index-1"], [494, "index-2"], [494, "index-3"]], "dnnl::inner_product_backward_data::primitive_desc": [[495, "index-0"]], "dnnl::inner_product_backward_weights": [[496, "index-0"]], "inner_product_backward_weights": [[496, "index-1"], [496, "index-2"], [496, "index-3"]], "dnnl::inner_product_backward_weights::primitive_desc": [[497, "index-0"]], "dnnl::inner_product_forward": [[498, "index-0"]], "inner_product_forward": [[498, "index-1"], [498, "index-2"], [498, "index-3"]], "dnnl::inner_product_forward::primitive_desc": [[499, "index-0"]], "dnnl::layer_normalization_backward": [[500, "index-0"]], "layer_normalization_backward": [[500, "index-1"], [500, "index-2"], [500, "index-3"]], "dnnl::layer_normalization_backward::primitive_desc": [[501, "index-0"]], "dnnl::layer_normalization_forward": [[502, "index-0"]], "layer_normalization_forward": [[502, "index-1"], [502, "index-2"], [502, "index-3"]], "dnnl::layer_normalization_forward::primitive_desc": [[503, "index-0"]], "dnnl::lbr_augru_backward": [[504, "index-0"]], "lbr_augru_backward": [[504, "index-1"], [504, "index-2"], [504, "index-3"]], "dnnl::lbr_augru_backward::primitive_desc": [[505, "index-0"]], "dnnl::lbr_augru_forward": [[506, "index-0"]], "lbr_augru_forward": [[506, "index-1"], [506, "index-2"], [506, "index-3"]], "dnnl::lbr_augru_forward::primitive_desc": [[507, "index-0"]], "dnnl::lbr_gru_backward": [[508, "index-0"]], "lbr_gru_backward": [[508, "index-1"], [508, "index-2"], [508, "index-3"]], "dnnl::lbr_gru_backward::primitive_desc": [[509, "index-0"]], "dnnl::lbr_gru_forward": [[510, "index-0"]], "lbr_gru_forward": [[510, "index-1"], [510, "index-2"], [510, "index-3"]], "dnnl::lbr_gru_forward::primitive_desc": [[511, "index-0"]], "dnnl::lrn_backward": [[512, "index-0"]], "lrn_backward": [[512, "index-1"], [512, "index-2"], [512, "index-3"]], "dnnl::lrn_backward::primitive_desc": [[513, "index-0"]], "get_k": [[513, "index-12"], [515, "index-12"], [542, "index-15"]], "get_local_size": [[513, "index-11"], [515, "index-11"], [542, "index-14"]], "dnnl::lrn_forward": [[514, "index-0"]], "lrn_forward": [[514, "index-1"], [514, "index-2"], [514, "index-3"]], "dnnl::lrn_forward::primitive_desc": [[515, "index-0"]], "dnnl::lstm_backward": [[516, "index-0"]], "lstm_backward": [[516, "index-1"], [516, "index-2"], [516, "index-3"]], "diff_dst_iter_c_desc": [[517, "index-28"], [551, "index-26"]], "diff_src_iter_c_desc": [[517, "index-20"], [551, "index-18"]], "diff_weights_peephole_desc": [[517, "index-23"], [551, "index-21"]], "diff_weights_projection_desc": [[517, "index-24"], [551, "index-22"]], "dnnl::lstm_backward::primitive_desc": [[517, "index-0"]], "dst_iter_c_desc": [[517, "index-16"], [519, "index-16"], [551, "index-14"]], "src_iter_c_desc": [[517, "index-8"], [519, "index-8"], [551, "index-6"]], "weights_peephole_desc": [[517, "index-11"], [519, "index-11"], [551, "index-9"]], "weights_projection_desc": [[517, "index-12"], [519, "index-12"], [551, "index-10"]], "dnnl::lstm_forward": [[518, "index-0"]], "lstm_forward": [[518, "index-1"], [518, "index-2"], [518, "index-3"]], "dnnl::lstm_forward::primitive_desc": [[519, "index-0"]], "dnnl::matmul": [[520, "index-0"]], "dnnl::matmul::primitive_desc": [[521, "index-0"]], "dnnl_memory": [[522, "index-0"]], "data_type_size": [[523, "index-8"]], "dnnl::memory": [[523, "index-0"]], "get_desc": [[523, "index-9"]], "map_data": [[523, "index-13"]], "unmap_data": [[523, "index-14"]], "validate_dims": [[523, "index-7"]], "dnnl_memory_desc": [[524, "index-0"]], "desc": [[525, "index-1"], [525, "index-2"], [525, "index-3"], [525, "index-4"], [525, "index-5"]], "dnnl::memory::desc": [[525, "index-0"]], "get_blob": [[525, "index-24"]], "get_format_kind": [[525, "index-21"]], "get_inner_blks": [[525, "index-15"]], "get_inner_idxs": [[525, "index-16"]], "get_inner_nblks": [[525, "index-14"]], "get_ndims": [[525, "index-9"]], "get_nnz": [[525, "index-18"]], "get_num_handles": [[525, "index-17"]], "get_padded_dims": [[525, "index-10"]], "get_padded_offsets": [[525, "index-11"]], "get_size": [[525, "index-23"]], "get_sparse_encoding": [[525, "index-19"]], "get_submemory_offset": [[525, "index-12"]], "is_zero": [[525, "index-25"]], "permute_axes": [[525, "index-8"]], "reshape": [[525, "index-7"]], "submemory_desc": [[525, "index-6"]], "dnnl::pooling_backward": [[526, "index-0"]], "pooling_backward": [[526, "index-1"], [526, "index-2"], [526, "index-3"]], "dnnl::pooling_backward::primitive_desc": [[527, "index-0"]], "get_kernel": [[527, "index-10"], [529, "index-10"], [542, "index-21"]], "dnnl::pooling_forward": [[528, "index-0"]], "pooling_forward": [[528, "index-1"], [528, "index-2"], [528, "index-3"]], "dnnl::pooling_forward::primitive_desc": [[529, "index-0"]], "dnnl_post_ops": [[530, "index-0"]], "append_binary": [[531, "index-13"]], "append_dw": [[531, "index-11"]], "append_eltwise": [[531, "index-9"]], "append_prelu": [[531, "index-15"]], "append_sum": [[531, "index-5"]], "dnnl::post_ops": [[531, "index-0"]], "get_params_binary": [[531, "index-14"]], "get_params_dw": [[531, "index-12"]], "get_params_eltwise": [[531, "index-10"]], "get_params_prelu": [[531, "index-16"]], "get_params_sum": [[531, "index-6"], [531, "index-7"], [531, "index-8"]], "len": [[531, "index-3"]], "post_ops": [[531, "index-1"], [531, "index-2"]], "dnnl::prelu_backward": [[532, "index-0"]], "prelu_backward": [[532, "index-1"], [532, "index-2"], [532, "index-3"]], "dnnl::prelu_backward::primitive_desc": [[533, "index-0"]], "dnnl::prelu_forward": [[534, "index-0"]], "prelu_forward": [[534, "index-1"], [534, "index-2"], [534, "index-3"]], "dnnl::prelu_forward::primitive_desc": [[535, "index-0"]], "dnnl_primitive": [[536, "index-0"]], "dnnl::primitive": [[537, "index-0"]], "get_cache_blob": [[537, "index-8"]], "get_primitive_desc": [[537, "index-6"]], "primitive": [[537, "index-1"], [537, "index-2"], [537, "index-3"], [537, "index-4"], [537, "index-5"]], "dnnl_primitive_attr": [[538, "index-0"]], "dnnl::primitive_attr": [[539, "index-0"]], "get_accumulation_mode": [[539, "index-8"]], "get_deterministic": [[539, "index-10"]], "get_dropout": [[539, "index-3"]], "get_post_ops": [[539, "index-20"]], "get_rnn_data_qparams": [[539, "index-23"]], "get_rnn_weights_projection_qparams": [[539, "index-27"]], "get_rnn_weights_qparams": [[539, "index-25"]], "get_rounding_mode": [[539, "index-12"]], "get_scratchpad_mode": [[539, "index-14"]], "primitive_attr": [[539, "index-1"], [539, "index-2"]], "set_accumulation_mode": [[539, "index-9"]], "set_deterministic": [[539, "index-11"]], "set_dropout": [[539, "index-4"]], "set_post_ops": [[539, "index-21"], [568, "index-4"]], "set_rnn_data_qparams": [[539, "index-22"]], "set_rnn_weights_projection_qparams": [[539, "index-26"]], "set_rnn_weights_qparams": [[539, "index-24"]], "set_rounding_mode": [[539, "index-13"]], "set_scales": [[539, "index-17"]], "set_scales_mask": [[539, "index-16"]], "set_scratchpad_mode": [[539, "index-15"]], "set_zero_points": [[539, "index-19"]], "set_zero_points_mask": [[539, "index-18"]], "dnnl_primitive_desc": [[540, "index-0"]], "dnnl::primitive_desc": [[541, "index-0"]], "next_impl": [[541, "index-1"]], "dnnl::primitive_desc_base": [[542, "index-0"]], "get_activation_kind": [[542, "index-20"], [571, "index-22"], [573, "index-15"]], "get_axis": [[542, "index-13"], [553, "index-7"], [555, "index-7"], [557, "index-9"], [559, "index-8"]], "get_cache_blob_id": [[542, "index-42"]], "get_factors": [[542, "index-17"]], "get_p": [[542, "index-16"], [544, "index-6"]], "get_primitive_attr": [[542, "index-40"]], "query_md": [[542, "index-24"]], "query_s64": [[542, "index-3"]], "scratchpad_desc": [[542, "index-38"]], "dnnl::reduction": [[543, "index-0"]], "dnnl::reduction::primitive_desc": [[544, "index-0"]], "dnnl::reorder": [[545, "index-0"]], "dnnl::reorder::primitive_desc": [[546, "index-0"]], "get_dst_engine": [[546, "index-6"]], "get_src_engine": [[546, "index-5"]], "dnnl::resampling_backward": [[547, "index-0"]], "resampling_backward": [[547, "index-1"], [547, "index-2"], [547, "index-3"]], "dnnl::resampling_backward::primitive_desc": [[548, "index-0"]], "dnnl::resampling_forward": [[549, "index-0"]], "resampling_forward": [[549, "index-1"], [549, "index-2"], [549, "index-3"]], "dnnl::resampling_forward::primitive_desc": [[550, "index-0"]], "augru_attention_desc": [[551, "index-4"]], "diff_augru_attention_desc": [[551, "index-16"]], "dnnl::rnn_primitive_desc_base": [[551, "index-0"]], "rnn_primitive_desc_base": [[551, "index-1"], [551, "index-2"]], "dnnl::shuffle_backward": [[552, "index-0"]], "shuffle_backward": [[552, "index-1"], [552, "index-2"], [552, "index-3"]], "dnnl::shuffle_backward::primitive_desc": [[553, "index-0"]], "dnnl::shuffle_forward": [[554, "index-0"]], "shuffle_forward": [[554, "index-1"], [554, "index-2"], [554, "index-3"]], "dnnl::shuffle_forward::primitive_desc": [[555, "index-0"]], "dnnl::softmax_backward": [[556, "index-0"]], "softmax_backward": [[556, "index-1"], [556, "index-2"], [556, "index-3"]], "dnnl::softmax_backward::primitive_desc": [[557, "index-0"]], "dnnl::softmax_forward": [[558, "index-0"]], "softmax_forward": [[558, "index-1"], [558, "index-2"], [558, "index-3"]], "dnnl::softmax_forward::primitive_desc": [[559, "index-0"]], "dnnl_stream": [[560, "index-0"]], "dnnl::stream": [[561, "index-0"]], "wait": [[561, "index-4"]], "dnnl::sum": [[562, "index-0"]], "dnnl::sum::primitive_desc": [[563, "index-0"]], "asynchronous": [[564, "index-1"]], "dnnl::threadpool_interop::threadpool_iface": [[564, "index-0"]], "get_in_parallel": [[564, "index-3"]], "get_num_threads": [[564, "index-2"]], "parallel_for": [[564, "index-4"]], "dnnl_transform": [[565, "index-0"]], "dnnl_ukernel_attr_params": [[566, "index-0"]], "dnnl::ukernel::attr_params": [[567, "index-0"]], "set_a_scales": [[567, "index-2"], [568, "index-5"]], "set_b_scales": [[567, "index-3"], [568, "index-6"]], "set_d_scales": [[567, "index-4"], [568, "index-7"]], "set_post_ops_args": [[567, "index-1"]], "brgemm": [[568, "index-1"], [568, "index-2"]], "default_attr_params": [[568, "index-18"]], "default_post_ops": [[568, "index-17"]], "dnnl::ukernel::brgemm": [[568, "index-0"]], "generate": [[568, "index-13"], [569, "index-3"]], "get_b_pack_type": [[568, "index-9"]], "get_scratchpad_size": [[568, "index-10"]], "is_execute_postops_valid": [[568, "index-11"]], "release_hw_context": [[568, "index-16"]], "set_add_c": [[568, "index-3"]], "set_hw_context": [[568, "index-12"]], "dnnl::ukernel::transform": [[569, "index-0"]], "transform": [[569, "index-1"], [569, "index-2"]], "dnnl::vanilla_rnn_backward": [[570, "index-0"]], "vanilla_rnn_backward": [[570, "index-1"], [570, "index-2"], [570, "index-3"]], "dnnl::vanilla_rnn_backward::primitive_desc": [[571, "index-0"]], "dnnl::vanilla_rnn_forward": [[572, "index-0"]], "vanilla_rnn_forward": [[572, "index-1"], [572, "index-2"], [572, "index-3"]], "dnnl::vanilla_rnn_forward::primitive_desc": [[573, "index-0"]], "cpu_runtime": [[574, "index-5"]], "dnnl_version_t": [[574, "index-0"]], "gpu_runtime": [[574, "index-6"]], "hash": [[574, "index-4"]], "major": [[574, "index-1"]], "minor": [[574, "index-2"]], "patch": [[574, "index-3"]], "example_allows_unimplemented": [[575, "index-0"]], "gemm_dims_t": [[576, "index-0"]], "gqa_dims_t": [[577, "index-0"]], "mlp_dims_t": [[578, "index-0"]], "mqa_dims_t": [[579, "index-0"]], "sdpa_dims_t": [[580, "index-0"]], "sycl_deletor": [[581, "index-0"]]}})