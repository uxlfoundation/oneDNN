Search.setIndex({"docnames": ["advanced_topics", "build_and_link", "class_dnnl_graph_allocator", "class_dnnl_graph_compiled_partition", "class_dnnl_graph_graph", "class_dnnl_graph_logical_tensor", "class_dnnl_graph_op", "class_dnnl_graph_partition", "class_dnnl_graph_tensor", "dev_guide_attributes", "dev_guide_attributes_fpmath_mode", "dev_guide_attributes_post_ops", "dev_guide_attributes_quantization", "dev_guide_attributes_scratchpad", "dev_guide_basic_concepts", "dev_guide_batch_normalization", "dev_guide_benchdnn", "dev_guide_binary", "dev_guide_build", "dev_guide_build_options", "dev_guide_c_and_cpp_apis", "dev_guide_concat", "dev_guide_conventions", "dev_guide_convolution", "dev_guide_cpu_dispatcher_control", "dev_guide_cpu_isa_hints", "dev_guide_data_types", "dev_guide_dpcpp_interoperability", "dev_guide_eltwise", "dev_guide_examples", "dev_guide_experimental", "dev_guide_graph_basic_concepts", "dev_guide_graph_dump", "dev_guide_graph_fusion_patterns", "dev_guide_graph_low_precision", "dev_guide_inference", "dev_guide_inference_and_training_aspects", "dev_guide_inference_int8", "dev_guide_inner_product", "dev_guide_inspecting_jit", "dev_guide_int8_computations", "dev_guide_layer_normalization", "dev_guide_link", "dev_guide_lrn", "dev_guide_matmul", "dev_guide_op_abs", "dev_guide_op_absbackward", "dev_guide_op_add", "dev_guide_op_avgpool", "dev_guide_op_avgpoolbackward", "dev_guide_op_batchnormforwardtraining", "dev_guide_op_batchnorminference", "dev_guide_op_batchnormtrainingbackward", "dev_guide_op_biasadd", "dev_guide_op_biasaddbackward", "dev_guide_op_clamp", "dev_guide_op_clampbackward", "dev_guide_op_concat", "dev_guide_op_convolution", "dev_guide_op_convolutionbackwarddata", "dev_guide_op_convolutionbackwardweights", "dev_guide_op_convtranspose", "dev_guide_op_convtransposebackwarddata", "dev_guide_op_convtransposebackwardweights", "dev_guide_op_dequantize", "dev_guide_op_divide", "dev_guide_op_dynamicdequantize", "dev_guide_op_dynamicquantize", "dev_guide_op_elu", "dev_guide_op_elubackward", "dev_guide_op_end", "dev_guide_op_exp", "dev_guide_op_gelu", "dev_guide_op_gelubackward", "dev_guide_op_hardswish", "dev_guide_op_hardswishbackward", "dev_guide_op_interpolate", "dev_guide_op_interpolatebackward", "dev_guide_op_layernorm", "dev_guide_op_layernormbackward", "dev_guide_op_leakyrelu", "dev_guide_op_log", "dev_guide_op_logsoftmax", "dev_guide_op_logsoftmaxbackward", "dev_guide_op_matmul", "dev_guide_op_maximum", "dev_guide_op_maxpool", "dev_guide_op_maxpoolbackward", "dev_guide_op_minimum", "dev_guide_op_mish", "dev_guide_op_mishbackward", "dev_guide_op_multiply", "dev_guide_op_prelu", "dev_guide_op_prelubackward", "dev_guide_op_quantize", "dev_guide_op_reciprocal", "dev_guide_op_reducel1", "dev_guide_op_reducel2", "dev_guide_op_reducemax", "dev_guide_op_reducemean", "dev_guide_op_reducemin", "dev_guide_op_reduceprod", "dev_guide_op_reducesum", "dev_guide_op_relu", "dev_guide_op_relubackward", "dev_guide_op_reorder", "dev_guide_op_round", "dev_guide_op_sigmoid", "dev_guide_op_sigmoidbackward", "dev_guide_op_softmax", "dev_guide_op_softmaxbackward", "dev_guide_op_softplus", "dev_guide_op_softplusbackward", "dev_guide_op_sqrt", "dev_guide_op_sqrtbackward", "dev_guide_op_square", "dev_guide_op_squareddifference", "dev_guide_op_staticreshape", "dev_guide_op_statictranspose", "dev_guide_op_subtract", "dev_guide_op_tanh", "dev_guide_op_tanhbackward", "dev_guide_op_typecast", "dev_guide_op_wildcard", "dev_guide_opencl_interoperability", "dev_guide_performance_settings", "dev_guide_persistent_cache", "dev_guide_pooling", "dev_guide_prelu", "dev_guide_primitive_cache", "dev_guide_profilers", "dev_guide_reduction", "dev_guide_reorder", "dev_guide_resampling", "dev_guide_rnn", "dev_guide_shuffle", "dev_guide_softmax", "dev_guide_sum", "dev_guide_threadpool", "dev_guide_training", "dev_guide_training_bf16", "dev_guide_transition_to_dnnl", "dev_guide_understanding_memory_formats", "dev_guide_verbose", "dev_guide_vtune", "enum_dnnl_alg_kind_t", "enum_dnnl_algorithm", "enum_dnnl_cpu_isa", "enum_dnnl_cpu_isa_hints", "enum_dnnl_cpu_isa_hints_t", "enum_dnnl_cpu_isa_t", "enum_dnnl_data_type_t", "enum_dnnl_engine_kind", "enum_dnnl_engine_kind_t", "enum_dnnl_format_kind_t", "enum_dnnl_format_tag_t", "enum_dnnl_fpmath_mode", "enum_dnnl_fpmath_mode_t", "enum_dnnl_graph_layout_type_t", "enum_dnnl_graph_logical_tensor_data_type", "enum_dnnl_graph_logical_tensor_layout_type", "enum_dnnl_graph_logical_tensor_property_type", "enum_dnnl_graph_op_attr", "enum_dnnl_graph_op_attr_t", "enum_dnnl_graph_op_kind", "enum_dnnl_graph_op_kind_t", "enum_dnnl_graph_partition_policy", "enum_dnnl_graph_partition_policy_t", "enum_dnnl_graph_status", "enum_dnnl_graph_tensor_property_t", "enum_dnnl_memory_data_type", "enum_dnnl_memory_format_kind", "enum_dnnl_memory_format_tag", "enum_dnnl_normalization_flags", "enum_dnnl_normalization_flags_t", "enum_dnnl_ocl_interop_memory_kind", "enum_dnnl_ocl_interop_memory_kind_t", "enum_dnnl_primitive_kind", "enum_dnnl_primitive_kind_t", "enum_dnnl_prop_kind", "enum_dnnl_prop_kind_t", "enum_dnnl_query", "enum_dnnl_query_t", "enum_dnnl_rnn_direction", "enum_dnnl_rnn_direction_t", "enum_dnnl_rnn_flags", "enum_dnnl_rnn_flags_t", "enum_dnnl_scratchpad_mode", "enum_dnnl_scratchpad_mode_t", "enum_dnnl_status", "enum_dnnl_status_t", "enum_dnnl_stream_flags", "enum_dnnl_stream_flags_t", "enum_dnnl_sycl_interop_memory_kind", "enum_dnnl_sycl_interop_memory_kind_t", "example_augru.cpp", "example_batch_normalization.cpp", "example_binary.cpp", "example_bnorm_u8_via_binary_postops.cpp", "example_cnn_inference_f32.c", "example_cnn_inference_f32.cpp", "example_cnn_inference_int8.cpp", "example_cnn_training_bf16.cpp", "example_cnn_training_f32.cpp", "example_concat.cpp", "example_convolution.cpp", "example_cpu_cnn_training_f32.c", "example_cpu_matmul_quantization.cpp", "example_cpu_rnn_inference_f32.cpp", "example_cpu_rnn_inference_int8.cpp", "example_cpu_sgemm_and_matmul.cpp", "example_cross_engine_reorder.c", "example_cross_engine_reorder.cpp", "example_eltwise.cpp", "example_getting_started.cpp", "example_gpu_opencl_interop.cpp", "example_inference_int8_matmul.cpp", "example_inner_product.cpp", "example_layer_normalization.cpp", "example_lrn.cpp", "example_lstm.cpp", "example_matmul.cpp", "example_memory_format_propagation.cpp", "example_performance_profiling.cpp", "example_pooling.cpp", "example_prelu.cpp", "example_reduction.cpp", "example_reorder.cpp", "example_resampling.cpp", "example_rnn_training_f32.cpp", "example_shuffle.cpp", "example_softmax.cpp", "example_sum.cpp", "example_sycl_interop_buffer.cpp", "global", "graph_extension", "graph_programming_model", "graph_supported_operations", "group_dnnl_api", "group_dnnl_api_attributes", "group_dnnl_api_batch_normalization", "group_dnnl_api_binary", "group_dnnl_api_blas", "group_dnnl_api_common", "group_dnnl_api_concat", "group_dnnl_api_convolution", "group_dnnl_api_data_types", "group_dnnl_api_deconvolution", "group_dnnl_api_eltwise", "group_dnnl_api_engine", "group_dnnl_api_fpmath_mode", "group_dnnl_api_inner_product", "group_dnnl_api_interop", "group_dnnl_api_layer_normalization", "group_dnnl_api_lrn", "group_dnnl_api_matmul", "group_dnnl_api_memory", "group_dnnl_api_ocl_interop", "group_dnnl_api_pooling", "group_dnnl_api_prelu", "group_dnnl_api_primitive_cache", "group_dnnl_api_primitives", "group_dnnl_api_primitives_common", "group_dnnl_api_reduction", "group_dnnl_api_reorder", "group_dnnl_api_resampling", "group_dnnl_api_rnn", "group_dnnl_api_service", "group_dnnl_api_shuffle", "group_dnnl_api_softmax", "group_dnnl_api_stream", "group_dnnl_api_sum", "group_dnnl_api_sycl_interop", "group_dnnl_api_threadpool_interop", "group_dnnl_api_utils", "group_dnnl_graph_api", "group_dnnl_graph_api_allocator", "group_dnnl_graph_api_compiled_partition", "group_dnnl_graph_api_compiled_partition_cache", "group_dnnl_graph_api_constant_tensor_cache", "group_dnnl_graph_api_engine", "group_dnnl_graph_api_graph", "group_dnnl_graph_api_interop", "group_dnnl_graph_api_logical_tensor", "group_dnnl_graph_api_op", "group_dnnl_graph_api_partition", "group_dnnl_graph_api_status", "group_dnnl_graph_api_sycl_interop", "group_dnnl_graph_api_tensor", "group_dnnl_graph_api_utils", "index", "interop_with_dpcpp_and_opencl", "namespace_dnnl", "namespace_dnnl_graph", "namespace_dnnl_graph_sycl_interop", "namespace_dnnl_ocl_interop", "namespace_dnnl_sycl_interop", "namespace_dnnl_threadpool_interop", "namespace_oneapi", "namespace_std", "namespace_sycl", "orphans", "page_augru_example_cpp", "page_augru_example_cpp_short", "page_batch_normalization_example_cpp", "page_batch_normalization_example_cpp_short", "page_binary_example_cpp", "page_binary_example_cpp_short", "page_bnorm_u8_via_binary_postops_cpp", "page_bnorm_u8_via_binary_postops_cpp_short", "page_cnn_inference_f32_c", "page_cnn_inference_f32_cpp", "page_cnn_inference_int8_cpp", "page_cnn_training_bf16_cpp", "page_cnn_training_f32_cpp", "page_concat_example_cpp", "page_concat_example_cpp_short", "page_convolution_example_cpp", "page_convolution_example_cpp_short", "page_cpu_cnn_training_f32_c", "page_cpu_matmul_quantization_cpp", "page_cpu_matmul_quantization_cpp_short", "page_cpu_rnn_inference_f32_cpp", "page_cpu_rnn_inference_int8_cpp", "page_cpu_sgemm_and_matmul_cpp", "page_cpu_sgemm_and_matmul_cpp_short", "page_cross_engine_reorder_c", "page_cross_engine_reorder_cpp", "page_eltwise_example_cpp", "page_eltwise_example_cpp_short", "page_getting_started_cpp", "page_gpu_opencl_interop_cpp", "page_inference_int8_matmul_cpp", "page_inference_int8_matmul_cpp_short", "page_inner_product_example_cpp", "page_inner_product_example_cpp_short", "page_layer_normalization_example_cpp", "page_layer_normalization_example_cpp_short", "page_legal_information", "page_lrn_example_cpp", "page_lrn_example_cpp_short", "page_lstm_example_cpp", "page_lstm_example_cpp_short", "page_matmul_example_cpp", "page_matmul_example_cpp_short", "page_memory_format_propagation_cpp", "page_performance_profiling_cpp", "page_pooling_example_cpp", "page_pooling_example_cpp_short", "page_prelu_example_cpp", "page_prelu_example_cpp_short", "page_reduction_example_cpp", "page_reduction_example_cpp_short", "page_reorder_example_cpp", "page_reorder_example_cpp_short", "page_resampling_example_cpp", "page_resampling_example_cpp_short", "page_rnn_training_f32_cpp", "page_shuffle_example_cpp", "page_shuffle_example_cpp_short", "page_softmax_example_cpp", "page_softmax_example_cpp_short", "page_sum_example_cpp", "page_sum_example_cpp_short", "page_sycl_interop_buffer_cpp", "page_todo", "performance_profiling_and_inspection", "programming_model", "struct_args_t", "struct_dnnl_augru_backward", "struct_dnnl_augru_backward_primitive_desc", "struct_dnnl_augru_forward", "struct_dnnl_augru_forward_primitive_desc", "struct_dnnl_batch_normalization_backward", "struct_dnnl_batch_normalization_backward_primitive_desc", "struct_dnnl_batch_normalization_forward", "struct_dnnl_batch_normalization_forward_primitive_desc", "struct_dnnl_binary", "struct_dnnl_binary_primitive_desc", "struct_dnnl_concat", "struct_dnnl_concat_primitive_desc", "struct_dnnl_convolution_backward_data", "struct_dnnl_convolution_backward_data_primitive_desc", "struct_dnnl_convolution_backward_weights", "struct_dnnl_convolution_backward_weights_primitive_desc", "struct_dnnl_convolution_forward", "struct_dnnl_convolution_forward_primitive_desc", "struct_dnnl_deconvolution_backward_data", "struct_dnnl_deconvolution_backward_data_primitive_desc", "struct_dnnl_deconvolution_backward_weights", "struct_dnnl_deconvolution_backward_weights_primitive_desc", "struct_dnnl_deconvolution_forward", "struct_dnnl_deconvolution_forward_primitive_desc", "struct_dnnl_eltwise_backward", "struct_dnnl_eltwise_backward_primitive_desc", "struct_dnnl_eltwise_forward", "struct_dnnl_eltwise_forward_primitive_desc", "struct_dnnl_engine", "struct_dnnl_engine-2", "struct_dnnl_error", "struct_dnnl_exec_arg_t", "struct_dnnl_graph_inplace_pair_t", "struct_dnnl_graph_logical_tensor_t", "struct_dnnl_gru_backward", "struct_dnnl_gru_backward_primitive_desc", "struct_dnnl_gru_forward", "struct_dnnl_gru_forward_primitive_desc", "struct_dnnl_handle", "struct_dnnl_handle_traits", "struct_dnnl_inner_product_backward_data", "struct_dnnl_inner_product_backward_data_primitive_desc", "struct_dnnl_inner_product_backward_weights", "struct_dnnl_inner_product_backward_weights_primitive_desc", "struct_dnnl_inner_product_forward", "struct_dnnl_inner_product_forward_primitive_desc", "struct_dnnl_layer_normalization_backward", "struct_dnnl_layer_normalization_backward_primitive_desc", "struct_dnnl_layer_normalization_forward", "struct_dnnl_layer_normalization_forward_primitive_desc", "struct_dnnl_lbr_augru_backward", "struct_dnnl_lbr_augru_backward_primitive_desc", "struct_dnnl_lbr_augru_forward", "struct_dnnl_lbr_augru_forward_primitive_desc", "struct_dnnl_lbr_gru_backward", "struct_dnnl_lbr_gru_backward_primitive_desc", "struct_dnnl_lbr_gru_forward", "struct_dnnl_lbr_gru_forward_primitive_desc", "struct_dnnl_lrn_backward", "struct_dnnl_lrn_backward_primitive_desc", "struct_dnnl_lrn_forward", "struct_dnnl_lrn_forward_primitive_desc", "struct_dnnl_lstm_backward", "struct_dnnl_lstm_backward_primitive_desc", "struct_dnnl_lstm_forward", "struct_dnnl_lstm_forward_primitive_desc", "struct_dnnl_matmul", "struct_dnnl_matmul_primitive_desc", "struct_dnnl_memory", "struct_dnnl_memory-2", "struct_dnnl_memory_desc", "struct_dnnl_memory_desc-2", "struct_dnnl_pooling_backward", "struct_dnnl_pooling_backward_primitive_desc", "struct_dnnl_pooling_forward", "struct_dnnl_pooling_forward_primitive_desc", "struct_dnnl_post_ops", "struct_dnnl_post_ops-2", "struct_dnnl_prelu_backward", "struct_dnnl_prelu_backward_primitive_desc", "struct_dnnl_prelu_forward", "struct_dnnl_prelu_forward_primitive_desc", "struct_dnnl_primitive", "struct_dnnl_primitive-2", "struct_dnnl_primitive_attr", "struct_dnnl_primitive_attr-2", "struct_dnnl_primitive_desc", "struct_dnnl_primitive_desc-2", "struct_dnnl_primitive_desc_base", "struct_dnnl_reduction", "struct_dnnl_reduction_primitive_desc", "struct_dnnl_reorder", "struct_dnnl_reorder_primitive_desc", "struct_dnnl_resampling_backward", "struct_dnnl_resampling_backward_primitive_desc", "struct_dnnl_resampling_forward", "struct_dnnl_resampling_forward_primitive_desc", "struct_dnnl_rnn_primitive_desc_base", "struct_dnnl_shuffle_backward", "struct_dnnl_shuffle_backward_primitive_desc", "struct_dnnl_shuffle_forward", "struct_dnnl_shuffle_forward_primitive_desc", "struct_dnnl_softmax_backward", "struct_dnnl_softmax_backward_primitive_desc", "struct_dnnl_softmax_forward", "struct_dnnl_softmax_forward_primitive_desc", "struct_dnnl_stream", "struct_dnnl_stream-2", "struct_dnnl_sum", "struct_dnnl_sum_primitive_desc", "struct_dnnl_threadpool_interop_threadpool_iface", "struct_dnnl_vanilla_rnn_backward", "struct_dnnl_vanilla_rnn_backward_primitive_desc", "struct_dnnl_vanilla_rnn_forward", "struct_dnnl_vanilla_rnn_forward_primitive_desc", "struct_dnnl_version_t", "struct_example_allows_unimplemented", "struct_gemm_dims_t", "supported_primitives"], "filenames": ["advanced_topics.rst", "build_and_link.rst", "class_dnnl_graph_allocator.rst", "class_dnnl_graph_compiled_partition.rst", "class_dnnl_graph_graph.rst", "class_dnnl_graph_logical_tensor.rst", "class_dnnl_graph_op.rst", "class_dnnl_graph_partition.rst", "class_dnnl_graph_tensor.rst", "dev_guide_attributes.rst", "dev_guide_attributes_fpmath_mode.rst", "dev_guide_attributes_post_ops.rst", "dev_guide_attributes_quantization.rst", "dev_guide_attributes_scratchpad.rst", "dev_guide_basic_concepts.rst", "dev_guide_batch_normalization.rst", "dev_guide_benchdnn.rst", "dev_guide_binary.rst", "dev_guide_build.rst", "dev_guide_build_options.rst", "dev_guide_c_and_cpp_apis.rst", "dev_guide_concat.rst", "dev_guide_conventions.rst", "dev_guide_convolution.rst", "dev_guide_cpu_dispatcher_control.rst", "dev_guide_cpu_isa_hints.rst", "dev_guide_data_types.rst", "dev_guide_dpcpp_interoperability.rst", "dev_guide_eltwise.rst", "dev_guide_examples.rst", "dev_guide_experimental.rst", "dev_guide_graph_basic_concepts.rst", "dev_guide_graph_dump.rst", "dev_guide_graph_fusion_patterns.rst", "dev_guide_graph_low_precision.rst", "dev_guide_inference.rst", "dev_guide_inference_and_training_aspects.rst", "dev_guide_inference_int8.rst", "dev_guide_inner_product.rst", "dev_guide_inspecting_jit.rst", "dev_guide_int8_computations.rst", "dev_guide_layer_normalization.rst", "dev_guide_link.rst", "dev_guide_lrn.rst", "dev_guide_matmul.rst", "dev_guide_op_abs.rst", "dev_guide_op_absbackward.rst", "dev_guide_op_add.rst", "dev_guide_op_avgpool.rst", "dev_guide_op_avgpoolbackward.rst", "dev_guide_op_batchnormforwardtraining.rst", "dev_guide_op_batchnorminference.rst", "dev_guide_op_batchnormtrainingbackward.rst", "dev_guide_op_biasadd.rst", "dev_guide_op_biasaddbackward.rst", "dev_guide_op_clamp.rst", "dev_guide_op_clampbackward.rst", "dev_guide_op_concat.rst", "dev_guide_op_convolution.rst", "dev_guide_op_convolutionbackwarddata.rst", "dev_guide_op_convolutionbackwardweights.rst", "dev_guide_op_convtranspose.rst", "dev_guide_op_convtransposebackwarddata.rst", "dev_guide_op_convtransposebackwardweights.rst", "dev_guide_op_dequantize.rst", "dev_guide_op_divide.rst", "dev_guide_op_dynamicdequantize.rst", "dev_guide_op_dynamicquantize.rst", "dev_guide_op_elu.rst", "dev_guide_op_elubackward.rst", "dev_guide_op_end.rst", "dev_guide_op_exp.rst", "dev_guide_op_gelu.rst", "dev_guide_op_gelubackward.rst", "dev_guide_op_hardswish.rst", "dev_guide_op_hardswishbackward.rst", "dev_guide_op_interpolate.rst", "dev_guide_op_interpolatebackward.rst", "dev_guide_op_layernorm.rst", "dev_guide_op_layernormbackward.rst", "dev_guide_op_leakyrelu.rst", "dev_guide_op_log.rst", "dev_guide_op_logsoftmax.rst", "dev_guide_op_logsoftmaxbackward.rst", "dev_guide_op_matmul.rst", "dev_guide_op_maximum.rst", "dev_guide_op_maxpool.rst", "dev_guide_op_maxpoolbackward.rst", "dev_guide_op_minimum.rst", "dev_guide_op_mish.rst", "dev_guide_op_mishbackward.rst", "dev_guide_op_multiply.rst", "dev_guide_op_prelu.rst", "dev_guide_op_prelubackward.rst", "dev_guide_op_quantize.rst", "dev_guide_op_reciprocal.rst", "dev_guide_op_reducel1.rst", "dev_guide_op_reducel2.rst", "dev_guide_op_reducemax.rst", "dev_guide_op_reducemean.rst", "dev_guide_op_reducemin.rst", "dev_guide_op_reduceprod.rst", "dev_guide_op_reducesum.rst", "dev_guide_op_relu.rst", "dev_guide_op_relubackward.rst", "dev_guide_op_reorder.rst", "dev_guide_op_round.rst", "dev_guide_op_sigmoid.rst", "dev_guide_op_sigmoidbackward.rst", "dev_guide_op_softmax.rst", "dev_guide_op_softmaxbackward.rst", "dev_guide_op_softplus.rst", "dev_guide_op_softplusbackward.rst", "dev_guide_op_sqrt.rst", "dev_guide_op_sqrtbackward.rst", "dev_guide_op_square.rst", "dev_guide_op_squareddifference.rst", "dev_guide_op_staticreshape.rst", "dev_guide_op_statictranspose.rst", "dev_guide_op_subtract.rst", "dev_guide_op_tanh.rst", "dev_guide_op_tanhbackward.rst", "dev_guide_op_typecast.rst", "dev_guide_op_wildcard.rst", "dev_guide_opencl_interoperability.rst", "dev_guide_performance_settings.rst", "dev_guide_persistent_cache.rst", "dev_guide_pooling.rst", "dev_guide_prelu.rst", "dev_guide_primitive_cache.rst", "dev_guide_profilers.rst", "dev_guide_reduction.rst", "dev_guide_reorder.rst", "dev_guide_resampling.rst", "dev_guide_rnn.rst", "dev_guide_shuffle.rst", "dev_guide_softmax.rst", "dev_guide_sum.rst", "dev_guide_threadpool.rst", "dev_guide_training.rst", "dev_guide_training_bf16.rst", "dev_guide_transition_to_dnnl.rst", "dev_guide_understanding_memory_formats.rst", "dev_guide_verbose.rst", "dev_guide_vtune.rst", "enum_dnnl_alg_kind_t.rst", "enum_dnnl_algorithm.rst", "enum_dnnl_cpu_isa.rst", "enum_dnnl_cpu_isa_hints.rst", "enum_dnnl_cpu_isa_hints_t.rst", "enum_dnnl_cpu_isa_t.rst", "enum_dnnl_data_type_t.rst", "enum_dnnl_engine_kind.rst", "enum_dnnl_engine_kind_t.rst", "enum_dnnl_format_kind_t.rst", "enum_dnnl_format_tag_t.rst", "enum_dnnl_fpmath_mode.rst", "enum_dnnl_fpmath_mode_t.rst", "enum_dnnl_graph_layout_type_t.rst", "enum_dnnl_graph_logical_tensor_data_type.rst", "enum_dnnl_graph_logical_tensor_layout_type.rst", "enum_dnnl_graph_logical_tensor_property_type.rst", "enum_dnnl_graph_op_attr.rst", "enum_dnnl_graph_op_attr_t.rst", "enum_dnnl_graph_op_kind.rst", "enum_dnnl_graph_op_kind_t.rst", "enum_dnnl_graph_partition_policy.rst", "enum_dnnl_graph_partition_policy_t.rst", "enum_dnnl_graph_status.rst", "enum_dnnl_graph_tensor_property_t.rst", "enum_dnnl_memory_data_type.rst", "enum_dnnl_memory_format_kind.rst", "enum_dnnl_memory_format_tag.rst", "enum_dnnl_normalization_flags.rst", "enum_dnnl_normalization_flags_t.rst", "enum_dnnl_ocl_interop_memory_kind.rst", "enum_dnnl_ocl_interop_memory_kind_t.rst", "enum_dnnl_primitive_kind.rst", "enum_dnnl_primitive_kind_t.rst", "enum_dnnl_prop_kind.rst", "enum_dnnl_prop_kind_t.rst", "enum_dnnl_query.rst", "enum_dnnl_query_t.rst", "enum_dnnl_rnn_direction.rst", "enum_dnnl_rnn_direction_t.rst", "enum_dnnl_rnn_flags.rst", "enum_dnnl_rnn_flags_t.rst", "enum_dnnl_scratchpad_mode.rst", "enum_dnnl_scratchpad_mode_t.rst", "enum_dnnl_status.rst", "enum_dnnl_status_t.rst", "enum_dnnl_stream_flags.rst", "enum_dnnl_stream_flags_t.rst", "enum_dnnl_sycl_interop_memory_kind.rst", "enum_dnnl_sycl_interop_memory_kind_t.rst", "example_augru.cpp.rst", "example_batch_normalization.cpp.rst", "example_binary.cpp.rst", "example_bnorm_u8_via_binary_postops.cpp.rst", "example_cnn_inference_f32.c.rst", "example_cnn_inference_f32.cpp.rst", "example_cnn_inference_int8.cpp.rst", "example_cnn_training_bf16.cpp.rst", "example_cnn_training_f32.cpp.rst", "example_concat.cpp.rst", "example_convolution.cpp.rst", "example_cpu_cnn_training_f32.c.rst", "example_cpu_matmul_quantization.cpp.rst", "example_cpu_rnn_inference_f32.cpp.rst", "example_cpu_rnn_inference_int8.cpp.rst", "example_cpu_sgemm_and_matmul.cpp.rst", "example_cross_engine_reorder.c.rst", "example_cross_engine_reorder.cpp.rst", "example_eltwise.cpp.rst", "example_getting_started.cpp.rst", "example_gpu_opencl_interop.cpp.rst", "example_inference_int8_matmul.cpp.rst", "example_inner_product.cpp.rst", "example_layer_normalization.cpp.rst", "example_lrn.cpp.rst", "example_lstm.cpp.rst", "example_matmul.cpp.rst", "example_memory_format_propagation.cpp.rst", "example_performance_profiling.cpp.rst", "example_pooling.cpp.rst", "example_prelu.cpp.rst", "example_reduction.cpp.rst", "example_reorder.cpp.rst", "example_resampling.cpp.rst", "example_rnn_training_f32.cpp.rst", "example_shuffle.cpp.rst", "example_softmax.cpp.rst", "example_sum.cpp.rst", "example_sycl_interop_buffer.cpp.rst", "global.rst", "graph_extension.rst", "graph_programming_model.rst", "graph_supported_operations.rst", "group_dnnl_api.rst", "group_dnnl_api_attributes.rst", "group_dnnl_api_batch_normalization.rst", "group_dnnl_api_binary.rst", "group_dnnl_api_blas.rst", "group_dnnl_api_common.rst", "group_dnnl_api_concat.rst", "group_dnnl_api_convolution.rst", "group_dnnl_api_data_types.rst", "group_dnnl_api_deconvolution.rst", "group_dnnl_api_eltwise.rst", "group_dnnl_api_engine.rst", "group_dnnl_api_fpmath_mode.rst", "group_dnnl_api_inner_product.rst", "group_dnnl_api_interop.rst", "group_dnnl_api_layer_normalization.rst", "group_dnnl_api_lrn.rst", "group_dnnl_api_matmul.rst", "group_dnnl_api_memory.rst", "group_dnnl_api_ocl_interop.rst", "group_dnnl_api_pooling.rst", "group_dnnl_api_prelu.rst", "group_dnnl_api_primitive_cache.rst", "group_dnnl_api_primitives.rst", "group_dnnl_api_primitives_common.rst", "group_dnnl_api_reduction.rst", "group_dnnl_api_reorder.rst", "group_dnnl_api_resampling.rst", "group_dnnl_api_rnn.rst", "group_dnnl_api_service.rst", "group_dnnl_api_shuffle.rst", "group_dnnl_api_softmax.rst", "group_dnnl_api_stream.rst", "group_dnnl_api_sum.rst", "group_dnnl_api_sycl_interop.rst", "group_dnnl_api_threadpool_interop.rst", "group_dnnl_api_utils.rst", "group_dnnl_graph_api.rst", "group_dnnl_graph_api_allocator.rst", "group_dnnl_graph_api_compiled_partition.rst", "group_dnnl_graph_api_compiled_partition_cache.rst", "group_dnnl_graph_api_constant_tensor_cache.rst", "group_dnnl_graph_api_engine.rst", "group_dnnl_graph_api_graph.rst", "group_dnnl_graph_api_interop.rst", "group_dnnl_graph_api_logical_tensor.rst", "group_dnnl_graph_api_op.rst", "group_dnnl_graph_api_partition.rst", "group_dnnl_graph_api_status.rst", "group_dnnl_graph_api_sycl_interop.rst", "group_dnnl_graph_api_tensor.rst", "group_dnnl_graph_api_utils.rst", "index.rst", "interop_with_dpcpp_and_opencl.rst", "namespace_dnnl.rst", "namespace_dnnl_graph.rst", "namespace_dnnl_graph_sycl_interop.rst", "namespace_dnnl_ocl_interop.rst", "namespace_dnnl_sycl_interop.rst", "namespace_dnnl_threadpool_interop.rst", "namespace_oneapi.rst", "namespace_std.rst", "namespace_sycl.rst", "orphans.rst", "page_augru_example_cpp.rst", "page_augru_example_cpp_short.rst", "page_batch_normalization_example_cpp.rst", "page_batch_normalization_example_cpp_short.rst", "page_binary_example_cpp.rst", "page_binary_example_cpp_short.rst", "page_bnorm_u8_via_binary_postops_cpp.rst", "page_bnorm_u8_via_binary_postops_cpp_short.rst", "page_cnn_inference_f32_c.rst", "page_cnn_inference_f32_cpp.rst", "page_cnn_inference_int8_cpp.rst", "page_cnn_training_bf16_cpp.rst", "page_cnn_training_f32_cpp.rst", "page_concat_example_cpp.rst", "page_concat_example_cpp_short.rst", "page_convolution_example_cpp.rst", "page_convolution_example_cpp_short.rst", "page_cpu_cnn_training_f32_c.rst", "page_cpu_matmul_quantization_cpp.rst", "page_cpu_matmul_quantization_cpp_short.rst", "page_cpu_rnn_inference_f32_cpp.rst", "page_cpu_rnn_inference_int8_cpp.rst", "page_cpu_sgemm_and_matmul_cpp.rst", "page_cpu_sgemm_and_matmul_cpp_short.rst", "page_cross_engine_reorder_c.rst", "page_cross_engine_reorder_cpp.rst", "page_eltwise_example_cpp.rst", "page_eltwise_example_cpp_short.rst", "page_getting_started_cpp.rst", "page_gpu_opencl_interop_cpp.rst", "page_inference_int8_matmul_cpp.rst", "page_inference_int8_matmul_cpp_short.rst", "page_inner_product_example_cpp.rst", "page_inner_product_example_cpp_short.rst", "page_layer_normalization_example_cpp.rst", "page_layer_normalization_example_cpp_short.rst", "page_legal_information.rst", "page_lrn_example_cpp.rst", "page_lrn_example_cpp_short.rst", "page_lstm_example_cpp.rst", "page_lstm_example_cpp_short.rst", "page_matmul_example_cpp.rst", "page_matmul_example_cpp_short.rst", "page_memory_format_propagation_cpp.rst", "page_performance_profiling_cpp.rst", "page_pooling_example_cpp.rst", "page_pooling_example_cpp_short.rst", "page_prelu_example_cpp.rst", "page_prelu_example_cpp_short.rst", "page_reduction_example_cpp.rst", "page_reduction_example_cpp_short.rst", "page_reorder_example_cpp.rst", "page_reorder_example_cpp_short.rst", "page_resampling_example_cpp.rst", "page_resampling_example_cpp_short.rst", "page_rnn_training_f32_cpp.rst", "page_shuffle_example_cpp.rst", "page_shuffle_example_cpp_short.rst", "page_softmax_example_cpp.rst", "page_softmax_example_cpp_short.rst", "page_sum_example_cpp.rst", "page_sum_example_cpp_short.rst", "page_sycl_interop_buffer_cpp.rst", "page_todo.rst", "performance_profiling_and_inspection.rst", "programming_model.rst", "struct_args_t.rst", "struct_dnnl_augru_backward.rst", "struct_dnnl_augru_backward_primitive_desc.rst", "struct_dnnl_augru_forward.rst", "struct_dnnl_augru_forward_primitive_desc.rst", "struct_dnnl_batch_normalization_backward.rst", "struct_dnnl_batch_normalization_backward_primitive_desc.rst", "struct_dnnl_batch_normalization_forward.rst", "struct_dnnl_batch_normalization_forward_primitive_desc.rst", "struct_dnnl_binary.rst", "struct_dnnl_binary_primitive_desc.rst", "struct_dnnl_concat.rst", "struct_dnnl_concat_primitive_desc.rst", "struct_dnnl_convolution_backward_data.rst", "struct_dnnl_convolution_backward_data_primitive_desc.rst", "struct_dnnl_convolution_backward_weights.rst", "struct_dnnl_convolution_backward_weights_primitive_desc.rst", "struct_dnnl_convolution_forward.rst", "struct_dnnl_convolution_forward_primitive_desc.rst", "struct_dnnl_deconvolution_backward_data.rst", "struct_dnnl_deconvolution_backward_data_primitive_desc.rst", "struct_dnnl_deconvolution_backward_weights.rst", "struct_dnnl_deconvolution_backward_weights_primitive_desc.rst", "struct_dnnl_deconvolution_forward.rst", "struct_dnnl_deconvolution_forward_primitive_desc.rst", "struct_dnnl_eltwise_backward.rst", "struct_dnnl_eltwise_backward_primitive_desc.rst", "struct_dnnl_eltwise_forward.rst", "struct_dnnl_eltwise_forward_primitive_desc.rst", "struct_dnnl_engine.rst", "struct_dnnl_engine-2.rst", "struct_dnnl_error.rst", "struct_dnnl_exec_arg_t.rst", "struct_dnnl_graph_inplace_pair_t.rst", "struct_dnnl_graph_logical_tensor_t.rst", "struct_dnnl_gru_backward.rst", "struct_dnnl_gru_backward_primitive_desc.rst", "struct_dnnl_gru_forward.rst", "struct_dnnl_gru_forward_primitive_desc.rst", "struct_dnnl_handle.rst", "struct_dnnl_handle_traits.rst", "struct_dnnl_inner_product_backward_data.rst", "struct_dnnl_inner_product_backward_data_primitive_desc.rst", "struct_dnnl_inner_product_backward_weights.rst", "struct_dnnl_inner_product_backward_weights_primitive_desc.rst", "struct_dnnl_inner_product_forward.rst", "struct_dnnl_inner_product_forward_primitive_desc.rst", "struct_dnnl_layer_normalization_backward.rst", "struct_dnnl_layer_normalization_backward_primitive_desc.rst", "struct_dnnl_layer_normalization_forward.rst", "struct_dnnl_layer_normalization_forward_primitive_desc.rst", "struct_dnnl_lbr_augru_backward.rst", "struct_dnnl_lbr_augru_backward_primitive_desc.rst", "struct_dnnl_lbr_augru_forward.rst", "struct_dnnl_lbr_augru_forward_primitive_desc.rst", "struct_dnnl_lbr_gru_backward.rst", "struct_dnnl_lbr_gru_backward_primitive_desc.rst", "struct_dnnl_lbr_gru_forward.rst", "struct_dnnl_lbr_gru_forward_primitive_desc.rst", "struct_dnnl_lrn_backward.rst", "struct_dnnl_lrn_backward_primitive_desc.rst", "struct_dnnl_lrn_forward.rst", "struct_dnnl_lrn_forward_primitive_desc.rst", "struct_dnnl_lstm_backward.rst", "struct_dnnl_lstm_backward_primitive_desc.rst", "struct_dnnl_lstm_forward.rst", "struct_dnnl_lstm_forward_primitive_desc.rst", "struct_dnnl_matmul.rst", "struct_dnnl_matmul_primitive_desc.rst", "struct_dnnl_memory.rst", "struct_dnnl_memory-2.rst", "struct_dnnl_memory_desc.rst", "struct_dnnl_memory_desc-2.rst", "struct_dnnl_pooling_backward.rst", "struct_dnnl_pooling_backward_primitive_desc.rst", "struct_dnnl_pooling_forward.rst", "struct_dnnl_pooling_forward_primitive_desc.rst", "struct_dnnl_post_ops.rst", "struct_dnnl_post_ops-2.rst", "struct_dnnl_prelu_backward.rst", "struct_dnnl_prelu_backward_primitive_desc.rst", "struct_dnnl_prelu_forward.rst", "struct_dnnl_prelu_forward_primitive_desc.rst", "struct_dnnl_primitive.rst", "struct_dnnl_primitive-2.rst", "struct_dnnl_primitive_attr.rst", "struct_dnnl_primitive_attr-2.rst", "struct_dnnl_primitive_desc.rst", "struct_dnnl_primitive_desc-2.rst", "struct_dnnl_primitive_desc_base.rst", "struct_dnnl_reduction.rst", "struct_dnnl_reduction_primitive_desc.rst", "struct_dnnl_reorder.rst", "struct_dnnl_reorder_primitive_desc.rst", "struct_dnnl_resampling_backward.rst", "struct_dnnl_resampling_backward_primitive_desc.rst", "struct_dnnl_resampling_forward.rst", "struct_dnnl_resampling_forward_primitive_desc.rst", "struct_dnnl_rnn_primitive_desc_base.rst", "struct_dnnl_shuffle_backward.rst", "struct_dnnl_shuffle_backward_primitive_desc.rst", "struct_dnnl_shuffle_forward.rst", "struct_dnnl_shuffle_forward_primitive_desc.rst", "struct_dnnl_softmax_backward.rst", "struct_dnnl_softmax_backward_primitive_desc.rst", "struct_dnnl_softmax_forward.rst", "struct_dnnl_softmax_forward_primitive_desc.rst", "struct_dnnl_stream.rst", "struct_dnnl_stream-2.rst", "struct_dnnl_sum.rst", "struct_dnnl_sum_primitive_desc.rst", "struct_dnnl_threadpool_interop_threadpool_iface.rst", "struct_dnnl_vanilla_rnn_backward.rst", "struct_dnnl_vanilla_rnn_backward_primitive_desc.rst", "struct_dnnl_vanilla_rnn_forward.rst", "struct_dnnl_vanilla_rnn_forward_primitive_desc.rst", "struct_dnnl_version_t.rst", "struct_example_allows_unimplemented.rst", "struct_gemm_dims_t.rst", "supported_primitives.rst"], "titles": ["Advanced Topics", "Building and Linking", "class dnnl::graph::allocator", "class dnnl::graph::compiled_partition", "class dnnl::graph::graph", "class dnnl::graph::logical_tensor", "class dnnl::graph::op", "class dnnl::graph::partition", "class dnnl::graph::tensor", "Primitive Attributes", "Primitive Attributes: floating-point math mode", "Primitive Attributes: Post-ops", "Primitive Attributes: Quantization", "Primitive Attributes: Scratchpad", "Basic Concepts", "Batch Normalization", "Benchmarking Performance", "Binary", "Build from Source", "Build Options", "API", "Concat", "Naming Conventions", "Convolution", "CPU Dispatcher Control", "CPU ISA Hints", "Data Types", "DPC++ Interoperability", "Eltwise", "Examples", "Experimental features", "Basic Concepts", "Graph Dump", "Supported Fusion Patterns", "Low Precision", "Inference", "Inference and Training Aspects", "Int8 Inference", "Inner Product", "Inspecting JIT Code", "Nuances of int8 Computations", "Layer Normalization", "Linking to the Library", "Local Response Normalization (LRN)", "Matrix Multiplication", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "Maximum", "MaxPool", "MaxPoolBackward", "Minimum", "Mish", "MishBackward", "Multiply", "PReLU", "PReLUBackward", "Quantize", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "ReLU", "ReLUBackward", "Reorder", "Round", "Sigmoid", "SigmoidBackward", "Softmax", "SoftmaxBackward", "SoftPlus", "SoftPlusBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "OpenCL Interoperability", "Configuring oneDNN for Benchmarking", "Persistent Cache", "Pooling", "PReLU", "Primitive Cache", "Profiling oneDNN Performance", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sum", "Using oneDNN with Threadpool-Based Threading", "Training", "Bfloat16 Training", "Transitioning from Intel MKL-DNN to oneDNN", "Understanding Memory Formats", "Verbose Mode", "Profiling with VTune(TM) Amplifier", "enum dnnl_alg_kind_t", "enum dnnl::algorithm", "enum dnnl::cpu_isa", "enum dnnl::cpu_isa_hints", "enum dnnl_cpu_isa_hints_t", "enum dnnl_cpu_isa_t", "enum dnnl_data_type_t", "enum dnnl::engine::kind", "enum dnnl_engine_kind_t", "enum dnnl_format_kind_t", "enum dnnl_format_tag_t", "enum dnnl::fpmath_mode", "enum dnnl_fpmath_mode_t", "enum dnnl_graph_layout_type_t", "enum dnnl::graph::logical_tensor::data_type", "enum dnnl::graph::logical_tensor::layout_type", "enum dnnl::graph::logical_tensor::property_type", "enum dnnl::graph::op::attr", "enum dnnl_graph_op_attr_t", "enum dnnl::graph::op::kind", "enum dnnl_graph_op_kind_t", "enum dnnl::graph::partition::policy", "enum dnnl_graph_partition_policy_t", "enum dnnl::graph::status", "enum dnnl_graph_tensor_property_t", "enum dnnl::memory::data_type", "enum dnnl::memory::format_kind", "enum dnnl::memory::format_tag", "enum dnnl::normalization_flags", "enum dnnl_normalization_flags_t", "enum dnnl::ocl_interop::memory_kind", "enum dnnl_ocl_interop_memory_kind_t", "enum dnnl::primitive::kind", "enum dnnl_primitive_kind_t", "enum dnnl::prop_kind", "enum dnnl_prop_kind_t", "enum dnnl::query", "enum dnnl_query_t", "enum dnnl::rnn_direction", "enum dnnl_rnn_direction_t", "enum dnnl::rnn_flags", "enum dnnl_rnn_flags_t", "enum dnnl::scratchpad_mode", "enum dnnl_scratchpad_mode_t", "enum dnnl::status", "enum dnnl_status_t", "enum dnnl::stream::flags", "enum dnnl_stream_flags_t", "enum dnnl::sycl_interop::memory_kind", "enum dnnl_sycl_interop_memory_kind_t", "augru.cpp", "batch_normalization.cpp", "binary.cpp", "bnorm_u8_via_binary_postops.cpp", "cnn_inference_f32.c", "cnn_inference_f32.cpp", "cnn_inference_int8.cpp", "cnn_training_bf16.cpp", "cnn_training_f32.cpp", "concat.cpp", "convolution.cpp", "cpu_cnn_training_f32.c", "cpu_matmul_quantization.cpp", "cpu_rnn_inference_f32.cpp", "cpu_rnn_inference_int8.cpp", "cpu_sgemm_and_matmul.cpp", "cross_engine_reorder.c", "cross_engine_reorder.cpp", "eltwise.cpp", "getting_started.cpp", "gpu_opencl_interop.cpp", "inference_int8_matmul.cpp", "inner_product.cpp", "layer_normalization.cpp", "lrn.cpp", "lstm.cpp", "matmul.cpp", "memory_format_propagation.cpp", "performance_profiling.cpp", "pooling.cpp", "prelu.cpp", "reduction.cpp", "reorder.cpp", "resampling.cpp", "rnn_training_f32.cpp", "shuffle.cpp", "softmax.cpp", "sum.cpp", "sycl_interop_buffer.cpp", "Global Namespace", "Graph Extension", "Programming Model", "Supported Operations", "oneDNN API", "Attributes", "Batch Normalization", "Binary", "BLAS functions", "Common API", "Concat", "Convolution", "Data types", "Deconvolution", "Eltwise", "Engine", "Floating-point Math Mode", "Inner Product", "Runtime interoperability API", "Layer Normalization", "LRN", "Matrix Multiplication", "Memory", "OpenCL interoperability API", "Pooling", "PReLU", "Primitive Cache", "Primitives", "Common", "Reduction", "Reorder", "Resampling", "RNN", "Service", "Shuffle", "Softmax", "Stream", "Sum", "SYCL interoperability API", "Threadpool interoperability API", "Utilities", "Graph API", "Allocator", "Compiled Partition", "Compiled Partition Cache", "Constant Tensor Cache", "Engine", "Graph", "Runtime interoperability API", "Logical Tensor", "Op", "Partition", "Status", "SYCL interoperability API", "Tensor", "Utilities", "oneAPI Deep Neural Network Library Developer Guide and Reference", "Interoperability with DPC++ and OpenCL", "namespace dnnl", "namespace dnnl::graph", "namespace dnnl::graph::sycl_interop", "namespace dnnl::ocl_interop", "namespace dnnl::sycl_interop", "namespace dnnl::threadpool_interop", "namespace oneapi", "namespace std", "namespace sycl", "Orphans", "AUGRU RNN Primitive Example", "&lt;Untitled&gt;", "Batch Normalization Primitive Example", "&lt;Untitled&gt;", "Binary Primitive Example", "&lt;Untitled&gt;", "Bnorm u8 by binary post-ops example", "&lt;Untitled&gt;", "CNN f32 inference example", "CNN f32 inference example", "CNN int8 inference example", "CNN bf16 training example", "CNN f32 training example", "Concat Primitive Example", "&lt;Untitled&gt;", "Convolution Primitive Example", "&lt;Untitled&gt;", "CNN f32 training example", "MatMul Tutorial: Quantization", "&lt;Untitled&gt;", "RNN f32 inference example", "RNN int8 inference example", "MatMul Tutorial: Comparison with SGEMM", "&lt;Untitled&gt;", "Reorder between CPU and GPU engines", "Reorder between CPU and GPU engines", "Element-Wise Primitive Example", "&lt;Untitled&gt;", "Getting started", "Getting started on GPU with OpenCL extensions API", "MatMul Tutorial: INT8 Inference", "&lt;Untitled&gt;", "Inner Product Primitive Example", "&lt;Untitled&gt;", "Layer Normalization Primitive Example", "&lt;Untitled&gt;", "Legal Information", "Local Response Normalization Primitive Example", "&lt;Untitled&gt;", "LSTM RNN Primitive Example", "&lt;Untitled&gt;", "Matmul Primitive Example", "&lt;Untitled&gt;", "Memory Format Propagation", "Performance Profiling Example", "Pooling Primitive Example", "&lt;Untitled&gt;", "Primitive Example", "&lt;Untitled&gt;", "Reduction Primitive Example", "&lt;Untitled&gt;", "Reorder Primitive Example", "&lt;Untitled&gt;", "Resampling Primitive Example", "&lt;Untitled&gt;", "RNN f32 training example", "Shuffle Primitive Example", "&lt;Untitled&gt;", "Softmax Primitive Example", "&lt;Untitled&gt;", "Sum Primitive Example", "&lt;Untitled&gt;", "Getting started on both CPU and GPU with SYCL extensions API", "Todo List", "Performance Profiling and Inspection", "Programming Model", "struct args_t", "struct dnnl::augru_backward", "struct dnnl::augru_backward::primitive_desc", "struct dnnl::augru_forward", "struct dnnl::augru_forward::primitive_desc", "struct dnnl::batch_normalization_backward", "struct dnnl::batch_normalization_backward::primitive_desc", "struct dnnl::batch_normalization_forward", "struct dnnl::batch_normalization_forward::primitive_desc", "struct dnnl::binary", "struct dnnl::binary::primitive_desc", "struct dnnl::concat", "struct dnnl::concat::primitive_desc", "struct dnnl::convolution_backward_data", "struct dnnl::convolution_backward_data::primitive_desc", "struct dnnl::convolution_backward_weights", "struct dnnl::convolution_backward_weights::primitive_desc", "struct dnnl::convolution_forward", "struct dnnl::convolution_forward::primitive_desc", "struct dnnl::deconvolution_backward_data", "struct dnnl::deconvolution_backward_data::primitive_desc", "struct dnnl::deconvolution_backward_weights", "struct dnnl::deconvolution_backward_weights::primitive_desc", "struct dnnl::deconvolution_forward", "struct dnnl::deconvolution_forward::primitive_desc", "struct dnnl::eltwise_backward", "struct dnnl::eltwise_backward::primitive_desc", "struct dnnl::eltwise_forward", "struct dnnl::eltwise_forward::primitive_desc", "struct dnnl_engine", "struct dnnl::engine", "struct dnnl::error", "struct dnnl_exec_arg_t", "struct dnnl_graph_inplace_pair_t", "struct dnnl_graph_logical_tensor_t", "struct dnnl::gru_backward", "struct dnnl::gru_backward::primitive_desc", "struct dnnl::gru_forward", "struct dnnl::gru_forward::primitive_desc", "template struct dnnl::handle", "template struct dnnl::handle_traits", "struct dnnl::inner_product_backward_data", "struct dnnl::inner_product_backward_data::primitive_desc", "struct dnnl::inner_product_backward_weights", "struct dnnl::inner_product_backward_weights::primitive_desc", "struct dnnl::inner_product_forward", "struct dnnl::inner_product_forward::primitive_desc", "struct dnnl::layer_normalization_backward", "struct dnnl::layer_normalization_backward::primitive_desc", "struct dnnl::layer_normalization_forward", "struct dnnl::layer_normalization_forward::primitive_desc", "struct dnnl::lbr_augru_backward", "struct dnnl::lbr_augru_backward::primitive_desc", "struct dnnl::lbr_augru_forward", "struct dnnl::lbr_augru_forward::primitive_desc", "struct dnnl::lbr_gru_backward", "struct dnnl::lbr_gru_backward::primitive_desc", "struct dnnl::lbr_gru_forward", "struct dnnl::lbr_gru_forward::primitive_desc", "struct dnnl::lrn_backward", "struct dnnl::lrn_backward::primitive_desc", "struct dnnl::lrn_forward", "struct dnnl::lrn_forward::primitive_desc", "struct dnnl::lstm_backward", "struct dnnl::lstm_backward::primitive_desc", "struct dnnl::lstm_forward", "struct dnnl::lstm_forward::primitive_desc", "struct dnnl::matmul", "struct dnnl::matmul::primitive_desc", "struct dnnl_memory", "struct dnnl::memory", "struct dnnl_memory_desc", "struct dnnl::memory::desc", "struct dnnl::pooling_backward", "struct dnnl::pooling_backward::primitive_desc", "struct dnnl::pooling_forward", "struct dnnl::pooling_forward::primitive_desc", "struct dnnl_post_ops", "struct dnnl::post_ops", "struct dnnl::prelu_backward", "struct dnnl::prelu_backward::primitive_desc", "struct dnnl::prelu_forward", "struct dnnl::prelu_forward::primitive_desc", "struct dnnl_primitive", "struct dnnl::primitive", "struct dnnl_primitive_attr", "struct dnnl::primitive_attr", "struct dnnl_primitive_desc", "struct dnnl::primitive_desc", "struct dnnl::primitive_desc_base", "struct dnnl::reduction", "struct dnnl::reduction::primitive_desc", "struct dnnl::reorder", "struct dnnl::reorder::primitive_desc", "struct dnnl::resampling_backward", "struct dnnl::resampling_backward::primitive_desc", "struct dnnl::resampling_forward", "struct dnnl::resampling_forward::primitive_desc", "struct dnnl::rnn_primitive_desc_base", "struct dnnl::shuffle_backward", "struct dnnl::shuffle_backward::primitive_desc", "struct dnnl::shuffle_forward", "struct dnnl::shuffle_forward::primitive_desc", "struct dnnl::softmax_backward", "struct dnnl::softmax_backward::primitive_desc", "struct dnnl::softmax_forward", "struct dnnl::softmax_forward::primitive_desc", "struct dnnl_stream", "struct dnnl::stream", "struct dnnl::sum", "struct dnnl::sum::primitive_desc", "struct dnnl::threadpool_interop::threadpool_iface", "struct dnnl::vanilla_rnn_backward", "struct dnnl::vanilla_rnn_backward::primitive_desc", "struct dnnl::vanilla_rnn_forward", "struct dnnl::vanilla_rnn_forward::primitive_desc", "struct dnnl_version_t", "struct example_allows_unimplemented", "struct gemm_dims_t", "Supported Primitives"], "terms": {"transit": 0, "from": [0, 1, 3, 4, 7, 9, 10, 11, 12, 13, 14, 19, 21, 22, 23, 28, 31, 33, 35, 36, 37, 38, 40, 42, 43, 54, 66, 67, 76, 77, 78, 79, 82, 83, 84, 92, 93, 96, 97, 98, 99, 100, 101, 102, 105, 117, 118, 122, 125, 126, 127, 129, 130, 132, 134, 135, 142, 143, 145, 146, 155, 172, 174, 183, 184, 187, 188, 195, 196, 197, 198, 199, 202, 203, 205, 206, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 249, 250, 253, 256, 257, 262, 266, 277, 281, 285, 294, 295, 296, 302, 303, 304, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 328, 330, 331, 332, 334, 335, 336, 339, 341, 342, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "intel": [0, 19, 23, 24, 39, 124, 125, 140, 143, 147, 150, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 290, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 331, 332, 334, 336, 338, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364], "mkl": 0, "dnn": [0, 26, 142], "onednn": [0, 10, 11, 12, 13, 14, 16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 124, 126, 129, 132, 133, 134, 140, 142, 143, 144, 155, 207, 210, 214, 215, 223, 233, 257, 267, 273, 280, 283, 287, 290, 292, 295, 297, 312, 320, 322, 323, 324, 345, 346, 366, 399, 402, 407, 408, 479], "understand": [0, 31, 155, 256, 345], "memori": [0, 3, 5, 8, 9, 11, 12, 15, 17, 20, 21, 23, 28, 29, 31, 35, 36, 37, 38, 40, 41, 43, 44, 117, 118, 125, 127, 128, 130, 131, 132, 133, 134, 135, 137, 140, 143, 145, 146, 151, 154, 155, 168, 175, 176, 181, 182, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 242, 244, 245, 247, 248, 251, 253, 254, 255, 257, 258, 259, 262, 263, 264, 265, 266, 268, 269, 271, 272, 273, 276, 277, 283, 287, 288, 292, 295, 296, 297, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 328, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 480, 481, 482, 483, 486], "format": [0, 11, 12, 14, 15, 17, 21, 23, 28, 29, 35, 36, 37, 38, 41, 43, 44, 58, 59, 60, 61, 62, 63, 76, 77, 92, 93, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 143, 154, 155, 171, 172, 181, 182, 199, 200, 202, 203, 206, 207, 214, 216, 217, 222, 223, 229, 244, 256, 262, 301, 302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 330, 331, 332, 334, 335, 341, 342, 357, 362, 363, 364, 367, 370, 374, 380, 382, 384, 388, 390, 394, 404, 410, 412, 416, 420, 424, 428, 432, 438, 440, 442, 448, 463, 468, 472, 481], "nuanc": [0, 12, 21, 26, 242, 273, 297], "int8": [0, 9, 11, 12, 21, 23, 26, 29, 36, 38, 41, 44, 64, 94, 131, 134, 136, 201, 207, 209, 216, 239, 242, 273, 297, 301, 320, 333, 454], "comput": [0, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 26, 28, 31, 32, 34, 35, 36, 37, 38, 41, 43, 44, 46, 48, 50, 54, 56, 58, 59, 60, 61, 62, 63, 69, 73, 75, 77, 78, 79, 83, 84, 86, 90, 93, 104, 108, 110, 112, 114, 121, 122, 123, 125, 127, 128, 130, 133, 134, 135, 136, 138, 140, 142, 143, 148, 149, 161, 169, 173, 174, 179, 180, 195, 196, 197, 198, 204, 205, 207, 208, 209, 213, 214, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 242, 246, 249, 251, 253, 256, 261, 262, 263, 265, 266, 269, 270, 272, 273, 277, 281, 284, 285, 296, 297, 302, 304, 306, 308, 311, 312, 315, 317, 320, 321, 322, 323, 327, 328, 330, 331, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 374, 401, 416, 446, 452, 460, 472, 474], "primit": [0, 15, 17, 19, 21, 22, 23, 26, 27, 28, 30, 31, 35, 36, 37, 38, 40, 41, 43, 51, 58, 105, 127, 128, 131, 132, 133, 134, 135, 136, 137, 140, 142, 143, 145, 154, 155, 168, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 290, 292, 296, 301, 303, 305, 307, 308, 310, 311, 312, 313, 314, 316, 318, 319, 320, 322, 323, 324, 325, 329, 332, 333, 335, 337, 340, 342, 344, 346, 348, 350, 352, 354, 356, 357, 359, 361, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "cach": [0, 3, 14, 19, 35, 44, 130, 142, 161, 169, 181, 182, 238, 257, 262, 275, 277, 295, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 401, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 441, 443, 447, 449, 452, 457, 458, 460, 462, 464, 467, 469, 471, 473, 477, 480, 482], "persist": [0, 129], "us": [0, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 50, 56, 58, 59, 64, 65, 66, 67, 69, 70, 76, 77, 78, 79, 85, 88, 91, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 108, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 143, 145, 146, 148, 149, 151, 154, 155, 161, 166, 167, 169, 170, 171, 172, 173, 174, 178, 181, 182, 187, 188, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 277, 281, 283, 285, 287, 288, 290, 294, 295, 296, 297, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 401, 402, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 445, 446, 448, 450, 452, 454, 459, 460, 461, 463, 465, 468, 470, 472, 474, 476, 478, 481, 483], "threadpool": [0, 234, 238, 252, 267, 297, 479], "base": [0, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24, 26, 27, 28, 35, 36, 38, 39, 40, 41, 43, 79, 80, 89, 92, 124, 125, 127, 128, 130, 131, 133, 134, 135, 136, 140, 141, 143, 145, 146, 229, 273, 297, 311, 330, 345, 357, 380, 402, 407, 445, 452, 456, 457, 461, 466, 478], "thread": [0, 13, 14, 23, 130, 187, 188, 273, 297, 346, 479], "experiment": [0, 15, 19, 290], "featur": [0, 11, 15, 19, 20, 24, 25, 32, 40, 41, 129, 142, 143, 148, 149, 208, 209, 229, 239, 267, 312, 330, 357, 446], "sourc": [1, 9, 11, 12, 13, 19, 21, 22, 23, 28, 31, 35, 36, 37, 38, 40, 44, 95, 96, 97, 98, 99, 100, 101, 102, 128, 132, 133, 140, 181, 182, 195, 196, 197, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 256, 258, 259, 262, 263, 264, 265, 268, 269, 271, 290, 302, 304, 305, 306, 312, 313, 314, 315, 316, 317, 319, 320, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 358, 360, 362, 363, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 457, 459, 460, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483, 484], "option": [1, 13, 15, 16, 18, 24, 25, 30, 32, 40, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 121, 123, 125, 129, 130, 134, 138, 141, 143, 174, 187, 188, 195, 220, 240, 256, 262, 267, 287, 294, 296, 302, 324, 330, 341, 346, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 440, 442, 444, 448, 450, 456, 459, 460, 461, 463, 465, 468, 470, 472, 474, 478, 481, 483], "librari": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 20, 23, 24, 27, 30, 31, 32, 33, 35, 36, 37, 38, 39, 64, 66, 67, 84, 94, 123, 124, 125, 126, 127, 135, 138, 141, 143, 147, 150, 158, 160, 161, 168, 169, 173, 177, 178, 187, 188, 189, 190, 212, 214, 256, 257, 267, 272, 277, 279, 281, 283, 285, 286, 295, 296, 327, 330, 331, 332, 345, 346, 364, 398, 401, 402, 407, 438, 452, 476, 479], "more": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 19, 21, 23, 34, 36, 37, 38, 117, 130, 131, 134, 137, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 207, 239, 240, 241, 242, 244, 245, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 281, 283, 284, 285, 287, 288, 294, 295, 296, 297, 298, 311, 320, 324, 327, 330, 332, 346, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484], "includ": [2, 3, 4, 5, 6, 7, 8, 12, 14, 15, 17, 19, 21, 23, 26, 31, 33, 34, 35, 38, 41, 42, 44, 130, 132, 134, 135, 136, 137, 138, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 256, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 324, 326, 327, 328, 330, 331, 332, 334, 335, 336, 337, 339, 341, 342, 343, 344, 346, 347, 349, 351, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484], "dnnl_graph": [2, 3, 4, 5, 6, 7, 8, 42, 159, 160, 161, 162, 164, 166, 168], "hpp": [2, 3, 4, 5, 6, 7, 8, 27, 42, 124, 138, 141, 142, 146, 147, 148, 152, 156, 159, 160, 161, 162, 164, 166, 168, 170, 171, 172, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 313, 314, 315, 317, 320, 324, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483], "public": [2, 3, 4, 5, 6, 7, 8, 42, 138, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483, 485], "allocator_handl": 2, "dnnl_graph_host_allocate_f": [2, 234, 276], "host_malloc": [2, 234, 276], "dnnl_graph_host_deallocate_f": [2, 234, 276], "host_fre": [2, 234, 276], "an": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 152, 153, 155, 158, 160, 162, 163, 168, 172, 173, 174, 177, 178, 181, 182, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 242, 244, 248, 249, 250, 251, 254, 256, 257, 262, 266, 267, 268, 270, 271, 272, 273, 276, 277, 281, 283, 284, 285, 287, 288, 290, 294, 295, 296, 297, 298, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 324, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 339, 341, 342, 343, 345, 346, 347, 349, 350, 351, 353, 355, 357, 358, 360, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483], "accord": [2, 3, 4, 6, 7, 8, 12, 21, 31, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 132, 137, 168, 187, 188, 190, 266, 277, 281, 283, 285, 311, 402, 432, 434], "given": [2, 7, 8, 10, 12, 17, 21, 23, 36, 37, 38, 40, 41, 44, 45, 47, 65, 81, 85, 88, 89, 91, 92, 96, 97, 98, 99, 100, 101, 102, 113, 115, 116, 119, 122, 126, 132, 136, 142, 168, 189, 190, 223, 239, 257, 262, 272, 276, 285, 287, 295, 296, 320, 324, 327, 330, 331, 364, 446, 454], "function": [2, 10, 11, 12, 14, 15, 20, 22, 24, 25, 26, 27, 28, 35, 36, 39, 40, 41, 42, 43, 44, 55, 71, 80, 82, 89, 96, 97, 98, 99, 100, 101, 102, 124, 129, 130, 138, 141, 142, 143, 145, 168, 182, 189, 190, 207, 214, 216, 223, 229, 234, 238, 286, 292, 293, 320, 324, 325, 332, 346, 357, 398, 399, 407, 438, 440, 452, 476, 479], "pointer": [2, 7, 8, 13, 20, 27, 124, 181, 182, 207, 210, 242, 256, 257, 262, 267, 272, 273, 276, 287, 288, 294, 295, 296, 297, 320, 324, 330, 398, 407, 438, 452, 476], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 20, 23, 34, 36, 37, 38, 39, 40, 41, 58, 59, 78, 79, 128, 129, 130, 134, 135, 143, 151, 154, 173, 174, 178, 179, 180, 181, 182, 207, 208, 209, 210, 214, 216, 223, 229, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 281, 283, 284, 285, 287, 288, 294, 295, 296, 297, 311, 312, 320, 322, 323, 324, 327, 330, 331, 332, 345, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "A": [2, 3, 4, 5, 7, 8, 9, 13, 14, 23, 31, 33, 34, 35, 37, 38, 40, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 76, 77, 86, 87, 94, 96, 97, 98, 99, 100, 101, 102, 118, 127, 130, 132, 133, 134, 135, 136, 142, 143, 154, 171, 177, 178, 183, 184, 195, 207, 210, 214, 216, 220, 234, 239, 240, 241, 242, 244, 245, 246, 247, 248, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 281, 283, 284, 285, 287, 288, 292, 295, 296, 297, 302, 312, 320, 324, 330, 331, 332, 341, 345, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 399, 400, 404, 406, 407, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 448, 450, 452, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 476, 478, 481, 483], "malloc": [2, 199, 206, 211, 276, 287, 294, 310, 319, 326], "cpu": [2, 8, 12, 14, 15, 23, 26, 27, 29, 35, 38, 44, 126, 127, 129, 130, 132, 134, 138, 143, 147, 148, 149, 150, 152, 153, 206, 207, 208, 209, 210, 211, 212, 233, 234, 249, 256, 267, 273, 290, 297, 301, 319, 320, 322, 323, 324, 330, 345, 346, 366, 367, 438, 479, 484], "free": [2, 5, 31, 199, 206, 211, 276, 287, 294, 310, 319, 324, 326, 438], "default": [2, 3, 4, 5, 8, 9, 11, 13, 14, 18, 19, 24, 25, 26, 27, 32, 33, 35, 37, 39, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 108, 109, 110, 111, 112, 114, 116, 117, 119, 121, 124, 129, 130, 134, 142, 143, 148, 149, 156, 157, 175, 176, 187, 188, 191, 192, 193, 194, 239, 250, 266, 267, 278, 279, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 447, 448, 449, 450, 452, 454, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "constructor": [2, 3, 5, 8, 9, 14, 126, 134, 312, 330, 345, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 441, 442, 443, 444, 447, 448, 449, 450, 452, 454, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "compil": [3, 7, 13, 35, 39, 84, 125, 129, 158, 160, 168, 190, 233, 238, 275, 276, 279, 283, 285, 287, 288, 294, 327, 330, 331, 345, 346, 364, 401, 402], "partit": [3, 4, 32, 33, 34, 158, 160, 167, 234, 238, 275, 276, 281, 283, 287, 288, 293, 294, 401, 402], "object": [3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 19, 23, 31, 37, 38, 41, 44, 126, 130, 133, 134, 142, 182, 195, 196, 197, 198, 204, 205, 207, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 256, 257, 262, 264, 270, 272, 281, 284, 288, 294, 295, 296, 302, 304, 306, 308, 312, 315, 317, 320, 328, 334, 336, 337, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483], "compiled_partition_handl": 3, "dnnl_graph_compiled_partition_t": [3, 234, 277, 285], "logical_tensor": [3, 6, 7, 8, 31, 234, 283, 288, 293], "query_logical_tensor": [3, 31], "size_t": [3, 5, 6, 7, 199, 200, 202, 203, 206, 207, 208, 209, 210, 211, 212, 215, 223, 233, 234, 249, 256, 257, 262, 276, 277, 280, 281, 283, 284, 285, 287, 293, 310, 311, 313, 314, 319, 320, 322, 323, 324, 326, 331, 364, 398, 401, 402, 438, 440], "tid": [3, 5, 234, 277, 283], "const": [3, 4, 5, 6, 7, 8, 11, 12, 27, 124, 126, 130, 138, 142, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 239, 242, 244, 245, 247, 256, 257, 258, 262, 265, 266, 267, 270, 271, 272, 273, 276, 277, 280, 281, 283, 284, 285, 287, 288, 292, 293, 294, 295, 296, 297, 302, 304, 306, 308, 310, 312, 313, 314, 315, 317, 319, 320, 323, 324, 326, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "std": [3, 4, 5, 6, 7, 11, 12, 13, 126, 138, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 267, 272, 292, 294, 295, 296, 302, 304, 306, 308, 311, 312, 313, 314, 315, 317, 320, 322, 323, 324, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483], "vector": [3, 4, 5, 6, 7, 12, 23, 24, 25, 26, 38, 39, 40, 58, 59, 126, 130, 142, 147, 150, 181, 182, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 239, 262, 266, 271, 272, 294, 295, 296, 302, 304, 306, 308, 311, 312, 313, 314, 315, 317, 320, 322, 323, 324, 328, 330, 331, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 480, 481, 482, 483], "pair": [3, 40, 262, 272, 277, 296, 401, 452, 460], "get_inplace_port": 3, "void": [3, 4, 6, 8, 11, 12, 13, 14, 27, 124, 138, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 256, 257, 260, 262, 267, 272, 273, 276, 278, 279, 287, 288, 292, 293, 295, 296, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 330, 331, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483], "execut": [3, 9, 11, 12, 13, 14, 19, 24, 27, 31, 35, 36, 37, 40, 42, 140, 142, 143, 168, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 249, 256, 257, 262, 267, 270, 272, 273, 276, 277, 283, 285, 287, 288, 294, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 328, 329, 332, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 398, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 438, 441, 443, 446, 447, 449, 452, 454, 458, 460, 462, 464, 467, 469, 471, 473, 475, 476, 477, 479, 480, 482], "stream": [3, 13, 19, 24, 26, 27, 31, 35, 36, 124, 141, 143, 147, 150, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 243, 256, 257, 262, 272, 273, 277, 287, 292, 294, 295, 296, 297, 302, 304, 306, 308, 310, 311, 313, 314, 315, 317, 319, 320, 322, 323, 324, 328, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 438, 441, 443, 447, 449, 452, 458, 460, 462, 464, 467, 469, 471, 473, 475, 477, 479, 480, 482], "astream": [3, 234, 273, 294, 295, 296, 297, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 441, 443, 447, 449, 452, 458, 460, 462, 464, 467, 469, 471, 473, 477, 480, 482], "tensor": [3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 21, 23, 28, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 111, 113, 115, 116, 117, 119, 120, 122, 127, 128, 131, 132, 133, 134, 135, 136, 137, 140, 142, 143, 146, 154, 155, 158, 160, 161, 169, 171, 172, 174, 177, 195, 196, 197, 198, 201, 204, 205, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 238, 239, 241, 244, 245, 246, 247, 253, 255, 256, 258, 262, 263, 265, 268, 271, 275, 277, 281, 284, 285, 287, 293, 294, 302, 304, 306, 308, 310, 311, 312, 315, 317, 324, 325, 327, 328, 330, 332, 333, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 361, 362, 363, 378, 379, 380, 382, 384, 386, 388, 390, 392, 401, 402, 438, 440, 442, 444, 446, 454], "input": [3, 4, 5, 6, 7, 12, 13, 15, 17, 21, 22, 23, 26, 28, 31, 33, 35, 36, 37, 38, 39, 41, 43, 44, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 145, 146, 155, 172, 173, 174, 181, 182, 201, 202, 203, 205, 207, 208, 209, 214, 216, 217, 223, 224, 228, 229, 234, 239, 248, 256, 262, 266, 277, 281, 283, 284, 285, 287, 288, 294, 310, 311, 312, 313, 314, 317, 320, 322, 323, 324, 327, 330, 331, 332, 334, 345, 346, 347, 355, 357, 370, 372, 400, 401, 402, 404, 406, 420, 422, 424, 426, 432, 434, 454, 481, 483], "output": [3, 4, 5, 6, 7, 11, 15, 17, 21, 23, 26, 28, 31, 33, 35, 36, 37, 38, 39, 41, 43, 44, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 142, 155, 172, 173, 174, 181, 182, 200, 201, 202, 203, 205, 206, 207, 209, 212, 214, 216, 217, 227, 228, 229, 233, 234, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 281, 283, 284, 285, 287, 288, 294, 296, 297, 310, 311, 312, 313, 314, 317, 319, 320, 322, 323, 324, 327, 330, 331, 332, 334, 345, 346, 353, 354, 355, 357, 364, 370, 372, 400, 401, 402, 404, 406, 420, 422, 424, 426, 432, 434, 446, 453, 454, 481, 483], "empti": [3, 4, 5, 8, 9, 11, 13, 19, 36, 92, 96, 97, 98, 99, 100, 101, 102, 151, 154, 170, 171, 239, 257, 262, 277, 281, 287, 295, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "queri": [3, 11, 12, 13, 14, 23, 24, 25, 27, 31, 35, 36, 38, 43, 124, 126, 134, 142, 168, 182, 187, 188, 189, 190, 202, 203, 206, 249, 256, 257, 260, 262, 272, 277, 278, 279, 292, 295, 296, 313, 314, 319, 330, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 401, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 452, 456, 457, 459, 460, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "logic": [3, 5, 6, 7, 8, 14, 15, 21, 23, 28, 34, 36, 38, 41, 43, 67, 123, 125, 127, 128, 132, 135, 136, 137, 142, 155, 158, 160, 169, 172, 181, 182, 214, 238, 239, 253, 256, 275, 277, 281, 284, 285, 288, 330, 402, 440, 454], "id": [3, 5, 6, 7, 18, 22, 31, 126, 181, 182, 215, 233, 234, 257, 277, 283, 284, 285, 295, 331, 364, 401, 402, 457], "If": [3, 5, 9, 11, 13, 15, 18, 22, 33, 36, 41, 49, 52, 56, 59, 60, 63, 66, 67, 69, 96, 97, 98, 99, 100, 101, 102, 104, 108, 114, 121, 125, 134, 142, 173, 174, 182, 239, 253, 256, 257, 260, 262, 267, 277, 278, 283, 311, 346, 440, 446, 461, 479], "doesn": [3, 5, 15, 44, 124, 132, 155, 166, 167, 256, 257, 266, 272, 277, 283, 295, 296, 330, 332, 402, 432, 434, 438], "t": [3, 5, 6, 7, 15, 18, 22, 27, 35, 37, 41, 44, 78, 79, 124, 130, 132, 134, 145, 146, 155, 166, 167, 195, 199, 202, 203, 206, 207, 208, 209, 210, 218, 220, 229, 234, 239, 242, 256, 257, 266, 272, 273, 274, 277, 283, 292, 295, 296, 297, 302, 310, 313, 314, 319, 320, 324, 330, 332, 336, 341, 357, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "belong": [3, 130, 239, 277, 296, 452, 460, 479], "ani": [3, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 23, 24, 25, 28, 31, 33, 35, 36, 38, 39, 40, 43, 44, 45, 46, 55, 56, 70, 71, 72, 73, 74, 75, 76, 77, 81, 89, 90, 95, 103, 105, 106, 107, 113, 115, 120, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 152, 156, 158, 160, 166, 167, 171, 172, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 256, 262, 267, 277, 283, 285, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 322, 323, 324, 326, 328, 330, 332, 333, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 382, 384, 386, 388, 390, 392, 398, 402, 404, 406, 407, 410, 412, 414, 420, 422, 424, 426, 432, 434, 438, 440, 452, 454, 459, 465, 476, 481, 483], "except": [3, 4, 5, 9, 14, 17, 19, 20, 21, 57, 76, 126, 134, 142, 147, 150, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 249, 267, 296, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 330, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 374, 376, 378, 382, 384, 386, 388, 390, 392, 394, 396, 398, 399, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 448, 450, 452, 459, 461, 463, 465, 468, 470, 472, 474, 476, 481, 483, 485], "rais": [3, 5], "api": [3, 4, 5, 7, 9, 10, 11, 13, 15, 17, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 36, 38, 41, 42, 43, 44, 124, 127, 128, 131, 132, 133, 134, 135, 136, 137, 141, 142, 173, 174, 181, 199, 200, 201, 202, 203, 206, 208, 209, 211, 212, 214, 215, 229, 233, 239, 242, 249, 250, 262, 266, 267, 277, 279, 280, 281, 283, 285, 290, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 399, 402, 404, 406, 407, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 466, 468, 470, 472, 474, 476, 478, 481, 483], "The": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 155, 162, 163, 166, 167, 168, 172, 174, 182, 187, 188, 189, 190, 198, 205, 210, 214, 216, 223, 229, 237, 239, 240, 242, 245, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 262, 266, 267, 268, 272, 273, 276, 277, 278, 279, 281, 283, 284, 285, 287, 288, 290, 294, 295, 296, 297, 298, 308, 310, 311, 312, 313, 314, 317, 319, 320, 322, 323, 324, 327, 330, 331, 332, 345, 346, 357, 364, 370, 372, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 399, 401, 402, 404, 406, 407, 412, 414, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 452, 454, 456, 457, 460, 461, 465, 468, 470, 476, 478, 479, 481, 483], "uniqu": [3, 5, 6, 7, 12, 31, 96, 97, 98, 99, 100, 101, 102, 209, 277, 283, 284, 402, 446], "requir": [3, 5, 6, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 31, 35, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 134, 137, 138, 140, 141, 142, 162, 168, 173, 174, 181, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 240, 248, 256, 257, 262, 272, 277, 283, 295, 296, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 324, 326, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 374, 376, 404, 406, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 440, 442, 444, 457, 481, 483], "return": [3, 4, 5, 6, 7, 8, 9, 11, 13, 19, 20, 24, 25, 31, 34, 36, 37, 40, 43, 117, 118, 124, 126, 138, 142, 166, 167, 168, 182, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 294, 295, 296, 297, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 399, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 457, 459, 460, 461, 463, 465, 466, 468, 470, 472, 474, 476, 478, 479, 481, 483], "hint": [3, 9, 36, 148, 149, 202, 203, 206, 229, 267, 277, 313, 314, 319, 357, 366, 370, 374, 382, 384, 388, 390, 394, 401, 404, 410, 412, 416, 420, 424, 428, 432, 442, 448, 463, 468, 472, 481], "place": [3, 11, 15, 17, 18, 20, 28, 36, 41, 117, 118, 125, 136, 137, 177, 178, 196, 197, 198, 213, 214, 218, 223, 224, 225, 231, 239, 240, 244, 248, 253, 267, 271, 277, 304, 305, 306, 307, 308, 311, 322, 323, 328, 330, 336, 337, 347, 349, 360, 361, 376, 380, 401, 446, 477], "It": [3, 4, 11, 12, 13, 14, 17, 19, 24, 26, 31, 34, 35, 36, 37, 40, 42, 44, 64, 66, 67, 76, 78, 80, 94, 105, 122, 123, 124, 125, 129, 142, 143, 161, 166, 167, 169, 240, 253, 257, 262, 267, 277, 281, 295, 320, 330, 331, 345, 346, 364, 370, 374, 382, 384, 388, 390, 394, 401, 402, 404, 410, 412, 416, 420, 424, 428, 432, 438, 442, 448, 452, 461, 463, 468, 472, 481], "indic": [3, 4, 5, 11, 14, 22, 23, 26, 31, 34, 37, 43, 58, 59, 78, 79, 96, 97, 98, 99, 100, 101, 102, 127, 128, 134, 135, 142, 154, 155, 171, 181, 182, 209, 216, 224, 239, 245, 247, 256, 258, 266, 277, 285, 324, 330, 332, 347, 370, 372, 382, 384, 386, 388, 390, 392, 401, 404, 406, 420, 422, 424, 426, 432, 434, 438, 440, 442, 444, 446, 454, 481, 483], "can": [3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 61, 65, 66, 67, 78, 80, 82, 84, 85, 88, 91, 117, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 155, 162, 163, 172, 187, 188, 191, 210, 214, 216, 223, 229, 239, 240, 241, 244, 245, 246, 247, 248, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 277, 278, 283, 285, 295, 320, 321, 324, 327, 330, 331, 332, 333, 345, 346, 357, 364, 376, 401, 407, 432, 434, 438, 440, 445, 446, 452, 454, 457, 483], "share": [3, 13, 19, 27, 31, 33, 37, 124, 128, 130, 134, 142, 175, 176, 193, 194, 202, 203, 206, 277, 313, 314, 319, 401], "same": [3, 5, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 26, 27, 28, 33, 34, 36, 37, 41, 43, 44, 51, 53, 57, 58, 61, 78, 79, 117, 122, 125, 126, 128, 131, 132, 133, 134, 135, 137, 140, 142, 155, 172, 173, 174, 182, 187, 188, 202, 203, 204, 206, 209, 214, 222, 229, 239, 240, 241, 242, 245, 247, 248, 253, 256, 258, 260, 262, 272, 273, 277, 278, 283, 284, 296, 297, 311, 312, 313, 314, 315, 319, 322, 323, 327, 330, 345, 346, 357, 376, 382, 384, 386, 388, 390, 392, 401, 402, 407, 440, 442, 444, 446, 452, 457, 460], "buffer": [3, 8, 13, 14, 20, 31, 36, 175, 176, 187, 188, 193, 194, 195, 196, 197, 198, 200, 201, 204, 205, 208, 209, 213, 214, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 256, 257, 272, 277, 283, 288, 295, 296, 302, 304, 306, 308, 311, 315, 317, 323, 328, 330, 331, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 358, 360, 362, 364, 401, 438, 440], "In": [3, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 35, 36, 37, 38, 40, 41, 44, 58, 59, 84, 125, 126, 130, 132, 133, 134, 136, 137, 141, 142, 155, 172, 179, 180, 181, 191, 195, 198, 204, 205, 207, 213, 217, 220, 225, 239, 240, 253, 256, 257, 272, 277, 295, 296, 302, 304, 305, 306, 307, 308, 311, 312, 315, 317, 320, 327, 328, 330, 331, 334, 336, 337, 341, 345, 346, 349, 360, 361, 364, 370, 372, 374, 376, 378, 382, 384, 386, 388, 390, 392, 394, 396, 401, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 456, 459, 461, 463, 465, 468, 470, 472, 474, 481, 483], "help": [3, 19, 31, 70, 123, 277, 401], "reduc": [3, 11, 12, 13, 14, 19, 23, 35, 36, 37, 44, 96, 97, 98, 99, 100, 101, 102, 126, 129, 131, 140, 174, 187, 188, 207, 277, 320, 321, 401, 446], "footprint": [3, 13, 137, 140, 187, 188, 277, 401], "improv": [3, 11, 15, 20, 26, 28, 36, 37, 41, 51, 78, 79, 142, 207, 239, 277, 290, 320, 401, 446], "local": [3, 13, 125, 145, 146, 181, 182, 199, 200, 202, 203, 206, 219, 254, 277, 301, 310, 313, 314, 319, 340, 345, 401, 427, 428, 429, 430, 457, 487], "But": [3, 19, 40, 207, 277, 283, 320, 401], "sinc": [3, 11, 12, 22, 34, 40, 128, 142, 143, 155, 174, 207, 213, 214, 216, 225, 239, 277, 320, 328, 330, 332, 345, 346, 349, 401], "mai": [3, 7, 10, 11, 14, 17, 18, 19, 20, 25, 26, 27, 28, 31, 32, 33, 34, 36, 40, 42, 117, 118, 124, 125, 126, 130, 131, 132, 140, 143, 161, 162, 163, 169, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 242, 246, 256, 262, 266, 267, 273, 277, 283, 285, 297, 302, 304, 306, 308, 310, 312, 313, 314, 315, 317, 319, 320, 324, 326, 328, 330, 332, 334, 336, 338, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 370, 372, 382, 384, 386, 388, 390, 392, 401, 404, 406, 410, 412, 414, 420, 422, 424, 426, 432, 434, 438, 440, 446, 453, 459, 465, 481, 483, 484], "have": [3, 4, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 26, 28, 31, 35, 36, 38, 40, 41, 44, 58, 117, 118, 122, 125, 126, 128, 129, 131, 132, 137, 140, 142, 229, 239, 241, 245, 246, 247, 256, 257, 258, 262, 266, 267, 271, 272, 277, 281, 283, 285, 295, 296, 320, 327, 330, 332, 345, 357, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 401, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 457, 459, 460, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "global": [3, 13, 129, 173, 174, 207, 210, 292, 293, 301, 320, 324, 401], "view": [3, 39, 117, 118, 134, 208, 209, 229, 277, 322, 323, 357, 401], "user": [3, 4, 5, 7, 9, 11, 12, 14, 15, 19, 20, 21, 23, 27, 30, 35, 36, 38, 40, 41, 44, 78, 124, 126, 127, 129, 130, 132, 133, 137, 138, 142, 166, 167, 173, 174, 182, 187, 188, 195, 199, 200, 201, 202, 203, 205, 206, 214, 217, 220, 223, 225, 229, 256, 257, 262, 272, 277, 281, 283, 285, 295, 296, 302, 310, 311, 312, 313, 314, 317, 319, 322, 323, 324, 327, 330, 331, 334, 341, 345, 346, 349, 357, 364, 401, 438, 445, 452, 479], "": [3, 5, 6, 9, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 27, 28, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 78, 79, 86, 87, 117, 123, 124, 130, 132, 136, 140, 142, 161, 169, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 239, 256, 257, 262, 277, 283, 284, 295, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 322, 323, 324, 326, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 401, 438, 446, 452], "applic": [3, 9, 10, 11, 12, 13, 19, 20, 23, 25, 26, 31, 32, 33, 35, 36, 40, 42, 125, 126, 129, 141, 142, 143, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 256, 267, 277, 290, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 327, 328, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 401, 440], "possibl": [3, 12, 14, 15, 17, 19, 21, 24, 25, 27, 28, 35, 36, 37, 40, 41, 44, 125, 131, 134, 136, 137, 142, 229, 239, 240, 245, 247, 248, 250, 251, 253, 254, 256, 258, 259, 262, 263, 265, 266, 267, 268, 269, 277, 330, 345, 357, 372, 374, 376, 382, 384, 386, 390, 392, 396, 401, 406, 414, 416, 418, 422, 426, 430, 434, 440, 444, 450, 459, 465, 470, 474, 481, 483], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 110, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 151, 154, 155, 158, 160, 162, 163, 166, 167, 168, 171, 172, 173, 174, 178, 187, 188, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 239, 240, 241, 242, 245, 247, 248, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 290, 294, 295, 296, 297, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 322, 323, 324, 326, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 401, 402, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 457, 459, 461, 463, 465, 468, 470, 472, 474, 476, 478, 479, 481, 483], "other": [3, 5, 9, 11, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 27, 33, 35, 36, 38, 39, 40, 42, 43, 44, 124, 125, 126, 127, 130, 132, 134, 135, 136, 137, 142, 155, 166, 167, 172, 187, 188, 201, 202, 208, 209, 229, 256, 262, 267, 277, 281, 283, 284, 290, 311, 313, 320, 323, 324, 330, 338, 345, 346, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "thi": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 53, 54, 58, 64, 78, 79, 94, 117, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 151, 154, 155, 174, 178, 179, 180, 187, 188, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 242, 244, 253, 256, 257, 262, 264, 266, 267, 272, 273, 277, 279, 280, 283, 285, 287, 288, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 399, 401, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 445, 446, 448, 450, 456, 459, 461, 463, 465, 468, 470, 472, 474, 478, 479, 481, 483], "case": [3, 5, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 26, 27, 28, 31, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 48, 68, 80, 92, 93, 95, 103, 117, 125, 126, 127, 128, 131, 132, 133, 135, 136, 137, 140, 142, 143, 155, 195, 202, 203, 205, 207, 210, 214, 217, 220, 225, 239, 240, 245, 247, 253, 256, 257, 258, 262, 267, 272, 277, 283, 285, 295, 296, 302, 311, 313, 314, 317, 320, 324, 327, 330, 331, 334, 341, 345, 349, 364, 370, 372, 374, 376, 378, 382, 384, 386, 388, 390, 392, 394, 396, 399, 401, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 456, 459, 461, 463, 465, 468, 470, 472, 474, 479, 481, 483], "should": [3, 5, 7, 11, 12, 13, 14, 15, 17, 19, 21, 23, 28, 30, 31, 34, 35, 36, 38, 40, 41, 43, 44, 47, 49, 50, 52, 53, 57, 59, 60, 63, 65, 66, 67, 76, 77, 85, 88, 91, 96, 97, 98, 99, 100, 101, 102, 119, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 142, 187, 188, 198, 199, 206, 208, 210, 214, 216, 229, 239, 242, 249, 256, 266, 267, 273, 276, 277, 281, 283, 285, 287, 290, 294, 297, 308, 310, 311, 312, 319, 324, 327, 330, 331, 332, 345, 357, 364, 370, 372, 380, 401, 404, 406, 407, 420, 422, 424, 426, 432, 434, 438, 445, 446, 454, 456, 461, 478, 481, 483], "take": [3, 10, 11, 12, 14, 19, 23, 24, 25, 28, 33, 34, 35, 36, 39, 62, 63, 64, 66, 67, 84, 94, 96, 97, 98, 99, 100, 101, 102, 126, 128, 129, 130, 142, 143, 214, 240, 253, 262, 267, 277, 308, 310, 311, 330, 401], "pass": [3, 4, 9, 10, 11, 12, 13, 14, 15, 19, 20, 23, 27, 30, 31, 33, 34, 35, 36, 41, 42, 43, 44, 78, 117, 127, 128, 130, 132, 133, 134, 155, 173, 174, 199, 200, 206, 207, 210, 211, 214, 229, 233, 239, 245, 247, 251, 255, 256, 257, 262, 267, 277, 281, 283, 295, 296, 310, 311, 312, 319, 320, 324, 326, 327, 330, 331, 345, 357, 364, 384, 386, 390, 392, 398, 400, 401, 407, 438, 446, 452, 454, 460, 476, 479], "differ": [3, 5, 11, 12, 13, 14, 17, 19, 20, 26, 27, 31, 32, 37, 40, 43, 44, 47, 61, 65, 84, 85, 88, 91, 105, 116, 117, 118, 119, 126, 130, 131, 132, 134, 140, 142, 145, 146, 161, 162, 163, 169, 187, 188, 195, 202, 203, 205, 206, 217, 220, 225, 229, 240, 249, 253, 256, 277, 283, 302, 308, 311, 313, 314, 317, 319, 320, 324, 330, 334, 341, 345, 346, 349, 357, 380, 401, 407, 440, 456, 461, 478], "avoid": [3, 12, 17, 19, 21, 25, 26, 35, 36, 40, 50, 51, 52, 129, 131, 198, 202, 203, 206, 277, 308, 313, 314, 319, 345, 401], "overwrit": [3, 17, 23, 38, 44, 131, 133, 137, 277, 401], "which": [3, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 27, 28, 31, 33, 34, 35, 36, 37, 38, 40, 41, 44, 48, 57, 58, 64, 66, 67, 78, 79, 80, 82, 83, 94, 96, 97, 98, 99, 100, 101, 102, 109, 110, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 136, 140, 142, 143, 155, 158, 160, 172, 208, 209, 210, 212, 214, 216, 222, 223, 229, 239, 240, 242, 245, 247, 248, 256, 258, 262, 264, 267, 268, 269, 270, 273, 276, 277, 283, 284, 288, 297, 322, 323, 324, 327, 330, 331, 332, 345, 346, 357, 364, 370, 374, 380, 382, 384, 388, 390, 394, 401, 402, 404, 407, 410, 412, 416, 420, 424, 428, 432, 438, 442, 448, 457, 461, 463, 468, 470, 472, 474, 478, 481], "probabl": [3, 11, 277, 401], "caus": [3, 35, 36, 277, 398, 401, 407, 438, 452, 476], "unexpect": [3, 20, 212, 233, 242, 273, 277, 297, 327, 364, 401], "incorrect": [3, 13, 19, 168, 189, 190, 211, 223, 277, 326, 330, 401], "result": [3, 9, 11, 12, 13, 15, 17, 19, 20, 22, 23, 25, 26, 28, 31, 36, 37, 38, 40, 43, 44, 96, 97, 98, 99, 100, 101, 102, 116, 126, 127, 128, 130, 131, 133, 136, 140, 142, 174, 182, 183, 184, 201, 207, 208, 209, 210, 212, 214, 215, 233, 234, 239, 242, 256, 262, 273, 277, 297, 311, 312, 320, 321, 324, 346, 401, 440, 446, 453, 454, 457], "list": [3, 6, 7, 19, 28, 35, 36, 42, 48, 49, 58, 59, 60, 61, 62, 63, 64, 76, 77, 86, 87, 94, 96, 97, 98, 99, 100, 101, 102, 118, 125, 130, 134, 143, 147, 150, 267, 277, 285, 287, 301, 330], "run": [3, 13, 14, 15, 18, 19, 36, 37, 39, 40, 44, 50, 125, 187, 188, 201, 208, 209, 210, 216, 223, 234, 252, 257, 272, 273, 282, 287, 294, 312, 320, 322, 323, 324, 325, 327, 330, 331, 332, 333, 345, 346, 364], "over": [3, 13, 19, 21, 24, 25, 36, 37, 39, 41, 49, 57, 59, 60, 63, 78, 79, 96, 97, 98, 99, 100, 101, 102, 129, 130, 134, 136, 142, 143, 241, 244, 267, 269, 294, 380, 456, 472, 474], "graph_handl": 4, "engin": [4, 7, 8, 9, 11, 12, 19, 23, 26, 27, 29, 31, 35, 36, 38, 44, 105, 124, 130, 134, 143, 153, 168, 181, 182, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 243, 244, 245, 247, 248, 251, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 277, 281, 285, 287, 288, 292, 293, 294, 295, 296, 297, 301, 302, 304, 306, 308, 310, 311, 313, 314, 315, 317, 319, 320, 322, 323, 324, 328, 332, 334, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 358, 360, 362, 367, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 397, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 442, 444, 446, 448, 450, 452, 454, 456, 457, 459, 460, 461, 463, 465, 466, 468, 470, 472, 474, 476, 478, 481, 483], "kind": [4, 6, 7, 9, 11, 15, 19, 23, 27, 28, 31, 37, 38, 41, 124, 126, 127, 128, 133, 134, 135, 136, 143, 145, 146, 153, 154, 165, 171, 175, 176, 178, 179, 180, 181, 182, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 239, 240, 241, 245, 247, 248, 249, 251, 253, 254, 256, 257, 258, 259, 262, 263, 265, 266, 268, 269, 272, 280, 281, 284, 285, 292, 293, 295, 296, 302, 304, 306, 308, 310, 311, 313, 314, 315, 317, 319, 320, 322, 323, 324, 326, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 480, 481, 482, 483], "engine_kind": [4, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 281, 302, 304, 306, 308, 310, 311, 313, 314, 315, 317, 328, 330, 332, 334, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364], "fpmath_mod": [4, 10, 250, 267, 292, 454], "mode": [4, 9, 13, 15, 17, 19, 23, 26, 28, 37, 41, 43, 50, 64, 66, 67, 76, 77, 94, 126, 127, 128, 129, 130, 133, 134, 136, 156, 157, 162, 163, 179, 180, 187, 188, 195, 196, 198, 219, 220, 233, 234, 238, 239, 243, 248, 255, 267, 281, 292, 301, 302, 303, 304, 305, 308, 317, 318, 324, 328, 329, 336, 337, 339, 340, 341, 342, 345, 347, 348, 349, 350, 355, 356, 360, 361, 364, 366, 407, 454], "statu": [4, 7, 19, 20, 190, 201, 202, 209, 214, 215, 233, 234, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 279, 281, 283, 284, 285, 287, 288, 292, 293, 297, 313, 323, 330, 364, 399], "add_op": [4, 31, 281], "op": [4, 7, 9, 12, 26, 29, 33, 35, 36, 37, 49, 54, 77, 78, 79, 123, 163, 166, 167, 168, 173, 174, 190, 196, 197, 198, 201, 205, 216, 217, 221, 223, 227, 234, 238, 239, 242, 273, 275, 281, 285, 293, 297, 301, 304, 305, 306, 307, 312, 317, 318, 332, 334, 335, 343, 344, 346, 353, 446, 454], "bool": [4, 5, 7, 48, 49, 56, 69, 78, 79, 84, 92, 96, 97, 98, 99, 100, 101, 102, 104, 108, 114, 117, 121, 138, 142, 207, 210, 222, 229, 234, 256, 292, 320, 324, 345, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483], "allow_except": 4, "true": [4, 5, 6, 7, 36, 42, 44, 48, 49, 56, 69, 78, 79, 84, 92, 96, 97, 98, 99, 100, 101, 102, 104, 108, 114, 117, 121, 125, 142, 229, 283, 357, 407, 440, 456, 461, 479], "final": [4, 11, 12, 13, 19, 28, 31, 37, 40, 142, 145, 155, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 213, 214, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 256, 281, 283, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 327, 328, 330, 331, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 358, 360, 362, 364], "is_fin": 4, "get_partit": [4, 7, 31, 285], "polici": [4, 7, 13, 167, 187, 188, 234, 281], "fusion": [4, 11, 14, 15, 44, 166, 167, 223, 235, 239, 332, 333], "creat": [4, 7, 9, 11, 12, 13, 15, 17, 18, 19, 21, 23, 27, 28, 31, 35, 36, 38, 41, 43, 44, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 142, 143, 181, 182, 187, 188, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 281, 283, 285, 287, 288, 294, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 328, 329, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 438, 446, 454, 461, 476], "new": [4, 7, 14, 31, 37, 138, 145, 146, 155, 178, 256, 260, 277, 278, 281, 283, 285, 288, 407, 440], "float": [4, 9, 11, 12, 20, 23, 36, 37, 44, 51, 64, 94, 132, 133, 140, 151, 156, 157, 159, 170, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 242, 243, 248, 253, 254, 256, 263, 265, 266, 267, 271, 273, 281, 284, 292, 297, 301, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 326, 328, 330, 331, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 446, 448, 450, 454, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "point": [4, 9, 11, 12, 17, 19, 20, 23, 34, 36, 37, 44, 66, 130, 132, 133, 140, 151, 156, 157, 159, 170, 182, 207, 216, 238, 239, 243, 256, 262, 266, 267, 281, 284, 301, 312, 320, 321, 322, 323, 324, 332, 333, 346, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 446, 454, 456, 481, 483], "math": [4, 9, 26, 156, 157, 203, 208, 209, 229, 238, 239, 243, 267, 281, 301, 314, 357], "all": [4, 5, 7, 9, 10, 11, 12, 13, 17, 18, 19, 21, 23, 26, 27, 28, 33, 34, 35, 37, 40, 44, 54, 57, 59, 61, 62, 63, 84, 96, 97, 98, 99, 100, 101, 102, 117, 125, 128, 130, 133, 134, 136, 137, 140, 141, 142, 143, 179, 180, 182, 187, 188, 208, 209, 210, 214, 216, 223, 239, 240, 250, 253, 256, 257, 266, 267, 270, 281, 283, 295, 320, 322, 323, 324, 330, 331, 332, 346, 364, 370, 372, 374, 382, 384, 386, 388, 390, 392, 404, 406, 410, 412, 414, 416, 420, 422, 424, 426, 432, 434, 440, 445, 452, 456, 457, 476, 481, 483], "inherit": [4, 40, 223, 256, 281, 346], "add": [4, 6, 17, 23, 33, 35, 38, 40, 42, 44, 48, 49, 53, 58, 59, 60, 61, 62, 63, 86, 87, 131, 133, 143, 145, 146, 164, 173, 174, 200, 208, 223, 256, 281, 284, 311, 312, 322, 323, 346, 440], "dag": [4, 281], "failur": [4, 143, 162, 256, 281, 399, 440], "oper": [4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 142, 143, 146, 162, 163, 164, 165, 166, 167, 168, 174, 189, 190, 191, 198, 214, 216, 219, 223, 235, 239, 240, 241, 242, 248, 253, 256, 257, 262, 263, 265, 273, 281, 283, 284, 285, 292, 295, 297, 304, 305, 308, 311, 312, 320, 327, 330, 331, 332, 333, 339, 345, 346, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "ha": [4, 5, 11, 13, 14, 15, 16, 19, 20, 22, 26, 30, 31, 34, 37, 40, 78, 79, 80, 125, 126, 128, 129, 130, 140, 143, 155, 172, 174, 205, 209, 210, 239, 256, 257, 260, 262, 267, 272, 278, 281, 283, 295, 296, 311, 317, 320, 322, 324, 327, 330, 331, 345, 346, 364, 402, 440, 456], "alreadi": [4, 36, 130, 260, 278, 281, 330, 345, 456], "been": [4, 11, 19, 140, 239, 256, 257, 262, 272, 281, 295, 296, 346, 438, 456], "ad": [4, 6, 13, 23, 31, 35, 40, 50, 51, 52, 53, 78, 79, 142, 143, 155, 162, 223, 281, 284, 346], "cannot": [4, 9, 11, 27, 31, 36, 40, 44, 105, 126, 127, 132, 134, 141, 142, 168, 187, 188, 190, 207, 256, 267, 281, 320, 398, 407, 438, 452, 461, 476], "schema": [4, 168, 190, 281], "check": [4, 7, 9, 12, 15, 17, 23, 28, 36, 38, 43, 44, 105, 127, 134, 135, 162, 199, 201, 202, 206, 207, 209, 210, 211, 212, 214, 215, 216, 233, 234, 239, 256, 257, 262, 281, 285, 295, 310, 311, 313, 319, 320, 323, 324, 326, 330, 331, 332, 345, 380, 399, 407, 440, 452, 454, 456, 461, 466, 478], "eg": [4, 5, 166, 167, 281, 283], "number": [4, 5, 7, 10, 11, 12, 13, 15, 17, 19, 20, 22, 23, 26, 31, 33, 35, 36, 41, 44, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 66, 67, 86, 87, 94, 123, 125, 128, 129, 131, 134, 142, 143, 155, 181, 182, 202, 203, 204, 206, 208, 209, 229, 232, 239, 241, 242, 244, 245, 246, 247, 249, 256, 258, 260, 262, 267, 271, 272, 273, 277, 278, 281, 283, 284, 285, 287, 296, 297, 310, 311, 312, 313, 314, 315, 319, 320, 357, 362, 382, 384, 386, 388, 390, 392, 398, 402, 438, 440, 442, 444, 446, 457, 468, 470, 472, 474, 479], "data": [4, 5, 8, 10, 11, 12, 13, 14, 19, 20, 22, 31, 33, 34, 35, 36, 40, 130, 140, 151, 155, 159, 168, 170, 172, 174, 179, 180, 181, 182, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 238, 239, 242, 243, 244, 248, 249, 253, 256, 263, 264, 265, 266, 268, 271, 273, 281, 283, 288, 297, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 322, 323, 324, 326, 328, 332, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 367, 402, 438, 440, 446, 454, 460, 468, 470, 478, 481], "type": [4, 5, 6, 7, 10, 11, 12, 13, 14, 18, 19, 20, 27, 31, 34, 35, 36, 37, 130, 140, 141, 142, 151, 158, 159, 160, 168, 170, 173, 180, 181, 182, 190, 201, 202, 207, 212, 214, 223, 234, 238, 239, 243, 249, 250, 256, 257, 262, 266, 272, 274, 281, 283, 285, 288, 289, 295, 296, 308, 312, 313, 320, 327, 330, 331, 332, 346, 364, 367, 402, 407, 438, 440, 446, 454, 457], "attribut": [4, 6, 14, 26, 31, 35, 36, 129, 130, 143, 162, 163, 174, 181, 210, 216, 223, 238, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 271, 281, 284, 301, 306, 307, 312, 317, 318, 323, 324, 332, 334, 335, 343, 344, 346, 353, 354, 367, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 402, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 446, 448, 450, 453, 454, 457, 459, 460, 461, 463, 465, 468, 470, 472, 474, 478, 481, 483], "etc": [4, 5, 14, 22, 33, 129, 130, 133, 142, 143, 249, 281, 283, 440, 457], "flag": [4, 15, 19, 26, 32, 41, 130, 147, 148, 149, 150, 173, 174, 181, 182, 185, 186, 192, 212, 234, 240, 242, 253, 262, 266, 267, 270, 273, 279, 285, 292, 293, 297, 304, 305, 327, 345, 370, 372, 374, 376, 378, 382, 384, 386, 388, 390, 392, 394, 396, 398, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 448, 450, 452, 457, 459, 461, 463, 465, 468, 470, 472, 474, 476, 479, 481, 483], "whether": [4, 23, 27, 40, 43, 48, 49, 78, 84, 92, 124, 239, 256, 257, 262, 295, 311, 345, 370, 372, 374, 376, 378, 382, 384, 386, 388, 390, 392, 394, 396, 398, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 448, 450, 452, 454, 459, 461, 463, 465, 468, 470, 472, 474, 476, 481, 483], "allow": [4, 9, 10, 12, 14, 19, 21, 23, 24, 25, 26, 31, 33, 36, 37, 38, 42, 47, 65, 85, 88, 91, 119, 128, 137, 140, 151, 154, 156, 157, 178, 206, 223, 242, 256, 259, 263, 265, 273, 297, 319, 346, 364, 370, 372, 374, 376, 378, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 440, 442, 444, 448, 450, 459, 461, 463, 465, 468, 470, 472, 474, 481, 483], "throw": [4, 9, 20, 126, 195, 201, 202, 207, 209, 210, 212, 214, 215, 216, 223, 233, 296, 302, 313, 320, 323, 324, 327, 330, 331, 332, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 399, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 448, 450, 456, 459, 461, 463, 465, 468, 470, 472, 474, 478, 481, 483], "fail": [4, 130, 168, 189, 190, 207, 210, 214, 215, 216, 233, 320, 324, 330, 331, 332, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 399, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 448, 450, 456, 459, 461, 463, 465, 468, 470, 472, 474, 478, 481, 483], "success": [4, 43, 168, 189, 190, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 281, 283, 284, 285, 287, 288, 297, 346, 456], "describ": [4, 5, 10, 11, 12, 14, 22, 26, 31, 33, 36, 37, 40, 76, 77, 125, 132, 134, 141, 142, 154, 155, 171, 207, 229, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 281, 283, 284, 285, 287, 288, 297, 311, 320, 330, 331, 345, 357, 364, 397, 437, 439, 440, 451, 455, 466, 475], "error": [4, 11, 12, 19, 20, 24, 25, 31, 36, 37, 40, 126, 201, 202, 207, 209, 214, 233, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 281, 283, 284, 285, 287, 288, 292, 297, 313, 320, 323, 330, 345, 364, 445, 454], "otherwis": [4, 5, 15, 24, 26, 28, 36, 56, 69, 96, 97, 98, 99, 100, 101, 102, 104, 108, 114, 121, 126, 173, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 281, 283, 284, 285, 287, 288, 297, 394, 407, 440], "mean": [4, 5, 10, 11, 12, 17, 21, 22, 28, 30, 31, 33, 36, 43, 50, 51, 52, 58, 59, 60, 61, 62, 63, 66, 67, 78, 79, 82, 83, 86, 87, 99, 117, 118, 125, 127, 128, 131, 132, 135, 136, 137, 142, 145, 146, 158, 160, 161, 169, 173, 174, 196, 198, 214, 218, 222, 240, 242, 245, 247, 248, 253, 256, 262, 263, 273, 281, 285, 297, 304, 308, 327, 330, 331, 336, 345, 364, 374, 376, 382, 384, 386, 388, 390, 392, 394, 396, 402, 416, 418, 440], "finish": [4, 31, 270, 281, 476, 479], "readi": [4, 31, 36, 281, 330, 345], "similarli": [4, 40, 127, 134, 281, 345], "un": [4, 281], "also": [4, 7, 11, 13, 14, 15, 18, 19, 22, 23, 24, 25, 26, 31, 35, 37, 42, 44, 80, 125, 129, 130, 132, 138, 142, 143, 155, 181, 195, 210, 220, 229, 239, 240, 241, 244, 245, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 281, 283, 285, 297, 302, 311, 324, 327, 330, 331, 341, 345, 357, 364, 438, 440, 446, 454, 457], "fals": [4, 5, 7, 48, 49, 56, 69, 78, 79, 84, 92, 96, 97, 98, 99, 100, 101, 102, 104, 108, 114, 117, 121, 229, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "get": [4, 17, 29, 35, 36, 130, 142, 207, 212, 214, 215, 229, 233, 248, 266, 267, 273, 283, 288, 301, 320, 345, 357, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "filter": [4, 22, 130, 142, 281], "claim": [4, 281, 338], "intern": [4, 7, 13, 24, 25, 27, 31, 151, 154, 178, 195, 200, 205, 217, 220, 225, 229, 239, 281, 302, 317, 322, 331, 334, 341, 349, 357, 364], "capabl": [4, 9, 11, 19, 26, 34, 281], "store": [4, 8, 12, 13, 14, 22, 23, 35, 37, 40, 117, 124, 129, 130, 134, 142, 174, 202, 209, 216, 242, 256, 273, 297, 313, 320, 323, 330, 332, 407, 438, 453], "dnnl_dim_t": [5, 182, 199, 206, 211, 234, 239, 242, 246, 254, 268, 273, 292, 297, 310, 319, 326, 438], "dim": [5, 11, 12, 44, 132, 142, 155, 181, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 239, 256, 262, 283, 302, 304, 306, 308, 310, 312, 313, 314, 315, 317, 319, 320, 322, 323, 324, 326, 327, 328, 330, 331, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 402, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 454, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483, 486], "enum": [5, 6, 7, 142, 234, 239, 246, 249, 250, 256, 257, 262, 266, 267, 270, 272, 274, 283, 284, 285, 286, 292, 293, 295, 296, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 398, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 438, 441, 443, 447, 449, 452, 458, 460, 462, 464, 467, 469, 471, 473, 476, 477, 480, 482], "data_typ": [5, 11, 12, 40, 132, 142, 143, 151, 181, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 239, 256, 292, 302, 304, 306, 308, 313, 314, 315, 317, 320, 322, 323, 324, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 402, 438, 440, 446], "layout_typ": [5, 31, 283, 402], "property_typ": 5, "dnnl_graph_logical_tensor_t": [5, 234, 277, 283, 284, 285, 288], "c_data": 5, "dtype": [5, 234, 283], "int32_t": [5, 40, 207, 209, 216, 234, 239, 242, 256, 262, 273, 283, 292, 297, 320, 332, 446], "ndim": [5, 27, 41, 142, 155, 199, 206, 234, 256, 283, 296, 310, 319, 402], "ltype": [5, 234, 283], "ptype": [5, 234, 283], "undef": [5, 11, 143, 146, 159, 160, 161, 162, 170, 171, 172, 177, 179, 181, 183, 185, 345, 346, 370, 372, 374, 376, 378, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 442, 444, 446, 448, 450, 457, 459, 468, 470, 472, 474, 481, 483], "adim": [5, 212, 234, 440], "stride": [5, 9, 11, 12, 22, 23, 44, 48, 49, 58, 59, 60, 61, 62, 63, 86, 87, 105, 154, 155, 158, 160, 162, 163, 171, 172, 181, 182, 199, 200, 201, 202, 203, 205, 206, 214, 222, 223, 224, 229, 234, 239, 245, 247, 256, 258, 283, 310, 311, 312, 313, 314, 317, 319, 330, 332, 345, 346, 347, 357, 382, 384, 386, 388, 390, 392, 402, 440, 442, 444, 446, 457], "lid": 5, "get_dim": [5, 142, 207, 216, 223, 320, 332, 346, 440], "get_id": [5, 7], "get_data_typ": [5, 223, 346, 440], "get_property_typ": 5, "get_layout_typ": 5, "get_layout_id": 5, "get_strid": [5, 142, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 440, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_mem_s": [5, 31], "is_equ": [5, 234, 283], "lt": [5, 8, 234, 277], "integ": [5, 12, 23, 24, 26, 34, 37, 40, 41, 106, 130, 147, 150, 151, 159, 170, 207, 208, 239, 242, 273, 284, 297, 312, 320, 438, 454], "repres": [5, 6, 7, 11, 12, 14, 22, 23, 31, 34, 40, 55, 58, 82, 83, 109, 110, 123, 130, 143, 277, 281, 285, 311, 322, 323, 327, 330, 331, 346, 364, 438], "dimens": [5, 7, 11, 12, 13, 14, 15, 17, 21, 22, 23, 28, 31, 34, 37, 38, 41, 44, 48, 49, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 76, 78, 79, 82, 83, 84, 86, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 109, 117, 118, 127, 128, 131, 132, 133, 134, 135, 136, 137, 142, 154, 155, 171, 172, 181, 182, 195, 196, 197, 198, 204, 205, 210, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 241, 242, 244, 245, 246, 247, 253, 256, 258, 265, 273, 283, 285, 288, 296, 297, 302, 304, 306, 308, 315, 317, 320, 322, 323, 324, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 380, 382, 384, 386, 388, 390, 392, 402, 438, 440, 442, 444, 446, 454, 463, 465], "size": [5, 11, 12, 13, 15, 17, 20, 22, 23, 31, 36, 37, 40, 41, 48, 49, 53, 76, 77, 86, 87, 109, 126, 127, 128, 131, 133, 135, 137, 142, 155, 162, 163, 172, 181, 182, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 239, 241, 242, 254, 256, 257, 262, 268, 273, 276, 283, 287, 295, 297, 302, 304, 306, 308, 310, 311, 313, 314, 315, 317, 319, 320, 322, 323, 324, 328, 330, 334, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 402, 428, 430, 438, 440, 446, 454, 457, 468, 470], "implement": [5, 9, 11, 12, 13, 14, 19, 20, 24, 26, 31, 34, 35, 36, 37, 40, 64, 66, 67, 84, 94, 123, 125, 126, 129, 138, 140, 141, 142, 143, 168, 173, 178, 181, 182, 189, 190, 195, 198, 201, 202, 205, 209, 210, 212, 214, 217, 223, 225, 237, 262, 267, 273, 297, 302, 304, 305, 308, 310, 311, 313, 314, 317, 319, 322, 323, 324, 327, 330, 331, 334, 345, 349, 364, 407, 438, 456, 457, 479], "ar": [5, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 78, 79, 84, 86, 87, 96, 97, 98, 99, 100, 101, 102, 116, 117, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 143, 155, 162, 172, 174, 179, 180, 181, 182, 187, 188, 195, 205, 207, 208, 209, 210, 213, 216, 217, 220, 223, 225, 229, 239, 240, 241, 242, 245, 247, 248, 249, 250, 251, 253, 254, 256, 258, 259, 262, 265, 266, 267, 268, 269, 272, 273, 279, 283, 296, 297, 302, 308, 310, 311, 312, 317, 320, 322, 323, 324, 327, 328, 330, 331, 332, 334, 338, 341, 345, 346, 349, 357, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 402, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 445, 446, 448, 450, 452, 454, 457, 459, 460, 461, 463, 465, 468, 470, 472, 474, 478, 479, 481, 483], "forc": [5, 44, 438], "limit": [5, 11, 12, 20, 24, 25, 33, 35, 129, 130, 187, 188, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 311, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 358, 360, 362, 438], "length": [5, 92, 93, 208, 209, 229, 239, 284, 357, 438], "copi": [5, 9, 11, 117, 118, 132, 140, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 256, 264, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 322, 323, 324, 326, 328, 330, 331, 332, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 398, 407, 438, 440, 452, 454, 476], "layout": [5, 7, 11, 31, 35, 41, 54, 105, 117, 118, 122, 134, 155, 158, 160, 195, 205, 209, 216, 217, 220, 225, 229, 239, 256, 283, 285, 288, 302, 311, 317, 322, 323, 332, 334, 341, 345, 349, 357, 402, 440, 446, 454], "properti": [5, 9, 31, 161, 169, 187, 188, 207, 283, 320, 338, 402], "element": [5, 11, 22, 23, 26, 28, 36, 45, 47, 55, 58, 64, 65, 66, 67, 68, 71, 72, 74, 78, 79, 80, 81, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 111, 113, 115, 116, 117, 118, 119, 120, 122, 131, 142, 155, 166, 167, 168, 174, 177, 178, 189, 190, 213, 239, 241, 242, 244, 245, 247, 256, 258, 271, 273, 283, 284, 288, 297, 301, 320, 327, 329, 330, 382, 384, 386, 388, 390, 392, 402, 442, 444, 446], "1": [5, 11, 14, 15, 17, 19, 21, 24, 26, 27, 28, 33, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 121, 125, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 145, 146, 147, 150, 151, 155, 158, 167, 169, 172, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 233, 234, 239, 241, 242, 256, 262, 267, 273, 283, 285, 296, 297, 302, 304, 306, 308, 310, 312, 313, 314, 315, 317, 319, 320, 322, 323, 324, 326, 327, 330, 331, 332, 336, 339, 341, 343, 345, 346, 347, 351, 353, 357, 358, 359, 360, 361, 364, 378, 380, 402, 440, 446, 456, 457, 461, 478, 479], "unknown": [5, 7, 31, 175, 176, 193, 194, 202, 203, 256, 283, 285, 313, 314, 324, 332, 402], "see": [5, 9, 11, 12, 14, 15, 16, 18, 19, 21, 23, 26, 28, 35, 36, 37, 40, 41, 44, 61, 78, 127, 129, 130, 131, 134, 137, 138, 141, 142, 143, 144, 155, 172, 181, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 241, 244, 245, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 295, 296, 297, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 438, 446, 452, 454, 457, 460, 479, 481, 483], "dnnl_graph_unknown_ndim": [5, 234, 283, 402], "0": [5, 11, 12, 13, 17, 19, 23, 28, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 141, 142, 143, 151, 154, 155, 158, 163, 169, 174, 180, 182, 184, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 239, 241, 249, 256, 257, 260, 262, 267, 278, 279, 281, 283, 285, 295, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 322, 323, 324, 326, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 402, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 454, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 479, 481, 483], "scalar": [5, 11, 130, 239, 242, 273, 297, 402, 446], "deleg": 5, "basic": [5, 9, 11, 130, 132, 143, 214, 242, 249, 256, 261, 270, 283, 285, 290, 327, 330, 331, 364, 367, 440], "inform": [5, 11, 19, 22, 35, 36, 42, 44, 126, 129, 142, 143, 181, 222, 229, 256, 262, 267, 277, 283, 301, 345, 357, 484], "dnnl_graph_unknown_dim": [5, 234, 283, 402], "defin": [5, 9, 11, 14, 15, 19, 21, 23, 26, 27, 36, 37, 38, 40, 41, 42, 43, 44, 57, 58, 64, 66, 67, 78, 80, 84, 94, 124, 127, 128, 133, 134, 135, 136, 138, 141, 142, 162, 163, 199, 202, 203, 206, 214, 215, 234, 237, 239, 242, 246, 256, 262, 267, 273, 283, 297, 310, 313, 314, 319, 323, 327, 330, 346, 402, 446, 454], "zero": [5, 11, 12, 15, 23, 26, 34, 36, 37, 44, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 66, 67, 80, 86, 87, 94, 117, 132, 134, 142, 174, 198, 202, 203, 207, 216, 229, 239, 245, 247, 251, 253, 255, 256, 262, 266, 281, 308, 313, 314, 320, 321, 332, 333, 357, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 402, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 440, 442, 444, 446, 448, 450, 454, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "field": [5, 143, 155, 158, 160, 208, 239, 256, 283, 368, 399, 485, 486], "deduc": [5, 7, 31, 133, 285, 345, 402], "accordingli": [5, 11, 12, 66, 67, 142, 256, 283, 312, 331, 364, 440, 445], "alwai": [5, 11, 14, 15, 19, 26, 28, 36, 37, 38, 40, 41, 43, 44, 132, 134, 142, 155, 239, 256, 267, 320, 327, 330, 440, 446, 454], "current": [5, 9, 10, 11, 12, 15, 24, 25, 26, 35, 36, 40, 126, 128, 130, 132, 134, 136, 142, 210, 216, 229, 256, 267, 294, 324, 332, 357, 402], "support": [5, 7, 10, 12, 13, 14, 18, 19, 22, 23, 24, 25, 26, 27, 32, 34, 35, 36, 38, 39, 44, 124, 125, 129, 130, 133, 135, 142, 143, 147, 150, 162, 163, 174, 177, 201, 202, 208, 209, 210, 235, 239, 240, 241, 242, 245, 246, 247, 248, 253, 255, 256, 262, 267, 273, 285, 290, 294, 297, 313, 322, 323, 324, 330, 345, 376, 380, 402, 438, 445, 446, 454, 456, 461, 478], "neg": [5, 11, 15, 23, 26, 37, 48, 49, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 78, 79, 80, 82, 83, 86, 87, 118, 174, 201, 211, 212, 214, 233, 266, 279, 312, 326, 327, 330, 364, 402, 457, 468, 470, 472, 474, 481, 483], "valu": [5, 6, 9, 10, 11, 12, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 34, 36, 37, 38, 39, 40, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 91, 94, 96, 97, 98, 99, 100, 101, 102, 106, 109, 110, 111, 112, 116, 117, 118, 119, 124, 126, 129, 130, 132, 140, 142, 143, 198, 202, 203, 207, 209, 211, 212, 214, 216, 233, 234, 239, 240, 241, 242, 245, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 272, 273, 278, 279, 281, 283, 284, 286, 295, 296, 297, 308, 312, 313, 314, 320, 322, 323, 324, 326, 327, 330, 332, 345, 346, 364, 370, 372, 374, 376, 380, 382, 384, 386, 388, 390, 392, 396, 398, 402, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 430, 432, 434, 438, 442, 444, 446, 450, 452, 454, 456, 457, 459, 460, 461, 465, 470, 474, 478, 481, 483], "opaqu": [5, 7, 9, 11, 31, 105, 127, 154, 158, 160, 171, 182, 283, 285, 397, 402, 437, 439, 445, 451, 453, 455, 475], "assign": [5, 22, 196, 197, 209, 218, 224, 231, 304, 306, 323, 336, 347, 360, 407], "each": [5, 7, 11, 12, 13, 17, 22, 23, 26, 30, 31, 32, 33, 35, 36, 37, 38, 59, 61, 62, 63, 96, 97, 98, 99, 100, 101, 102, 116, 125, 126, 128, 131, 133, 134, 135, 143, 154, 162, 166, 167, 171, 187, 188, 204, 209, 214, 239, 242, 245, 247, 256, 258, 262, 271, 272, 273, 281, 283, 285, 297, 311, 312, 315, 320, 327, 330, 346, 382, 384, 386, 388, 390, 392, 402, 440, 442, 444, 446, 454, 478], "call": [5, 7, 11, 13, 16, 20, 22, 23, 24, 25, 27, 31, 35, 36, 38, 40, 80, 124, 126, 134, 135, 142, 143, 239, 256, 257, 267, 272, 273, 276, 279, 281, 285, 287, 295, 296, 311, 320, 322, 323, 327, 330, 331, 345, 346, 364, 398, 399, 407, 438, 452, 454, 476, 479], "byte": [5, 13, 26, 40, 181, 182, 256, 257, 262, 283, 295, 438, 440], "compar": [5, 13, 36, 40, 44, 140, 207, 210, 256, 283, 320, 321, 324, 345, 466], "two": [5, 13, 14, 19, 22, 23, 27, 31, 33, 34, 36, 37, 40, 44, 47, 65, 84, 85, 88, 91, 105, 116, 119, 124, 127, 130, 134, 142, 155, 172, 187, 188, 229, 241, 249, 256, 264, 283, 317, 318, 324, 327, 330, 357], "tenor": [5, 283], "equal": [5, 11, 15, 17, 21, 27, 36, 38, 41, 48, 66, 67, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 117, 124, 126, 127, 128, 133, 137, 142, 145, 146, 155, 172, 239, 241, 242, 256, 257, 272, 273, 283, 295, 296, 297, 330, 407, 438, 440, 446, 454], "decid": [5, 31, 158, 160, 283, 345, 370, 374, 382, 384, 388, 390, 394, 404, 410, 412, 416, 420, 424, 428, 432, 442, 448, 463, 468, 472, 481], "reorder": [5, 12, 14, 19, 21, 29, 33, 35, 36, 37, 40, 44, 130, 137, 143, 164, 177, 178, 181, 195, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 216, 217, 220, 222, 223, 225, 229, 234, 238, 249, 256, 261, 262, 283, 292, 301, 302, 310, 311, 312, 313, 314, 317, 319, 320, 322, 323, 332, 334, 341, 346, 349, 354, 357, 367, 452, 478, 487], "need": [5, 12, 13, 18, 19, 27, 31, 33, 35, 36, 124, 134, 142, 182, 199, 200, 202, 203, 206, 222, 223, 229, 256, 262, 281, 283, 288, 310, 313, 314, 319, 327, 330, 331, 357, 364, 479], "below": [5, 9, 11, 14, 15, 17, 19, 20, 23, 24, 27, 28, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 133, 134, 135, 138, 141, 142, 216, 239, 283, 311, 330, 332, 345, 446, 479], "circumst": [5, 7, 283, 285, 345], "regard": [5, 33, 61, 283], "struct": [5, 199, 206, 234, 239, 240, 241, 244, 245, 247, 248, 249, 251, 253, 254, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 277, 281, 283, 284, 285, 288, 292, 297, 310, 319, 330, 346], "when": [5, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 27, 28, 31, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 155, 162, 166, 167, 172, 173, 187, 188, 208, 211, 212, 239, 256, 262, 267, 273, 283, 297, 322, 323, 326, 327, 330, 345, 346, 402, 438, 446, 454], "underli": [5, 8, 27, 124, 129, 252, 256, 257, 272, 273, 282, 283, 287, 288, 295, 296, 331, 364, 407, 438, 452], "For": [5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 28, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 64, 66, 67, 76, 77, 84, 94, 96, 97, 98, 99, 100, 101, 102, 124, 126, 128, 130, 132, 134, 136, 137, 140, 142, 155, 161, 169, 172, 174, 182, 195, 205, 209, 214, 217, 220, 225, 239, 240, 242, 253, 256, 257, 262, 267, 273, 276, 283, 285, 295, 297, 302, 311, 312, 317, 320, 322, 323, 327, 330, 331, 334, 341, 345, 349, 364, 402, 438, 445, 446, 454, 457], "exampl": [5, 14, 16, 19, 20, 22, 31, 32, 33, 34, 35, 36, 40, 42, 64, 66, 67, 70, 84, 94, 96, 97, 98, 99, 100, 101, 102, 117, 125, 141, 142, 155, 161, 169, 172, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 239, 240, 253, 256, 262, 267, 283, 290, 301, 303, 305, 307, 309, 316, 318, 320, 321, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 337, 342, 344, 345, 348, 350, 352, 354, 356, 359, 361, 363, 364, 366, 402, 440, 446, 454, 457], "one": [5, 7, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 27, 28, 31, 33, 34, 36, 37, 38, 40, 41, 42, 44, 57, 59, 64, 66, 67, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 117, 124, 125, 126, 127, 131, 132, 133, 134, 136, 137, 140, 142, 143, 155, 172, 174, 195, 205, 209, 217, 220, 223, 225, 229, 239, 242, 248, 249, 256, 262, 272, 273, 283, 285, 290, 296, 297, 302, 311, 317, 320, 321, 322, 323, 327, 330, 331, 332, 333, 334, 341, 345, 346, 349, 357, 364, 394, 402, 440, 445, 452, 460], "while": [5, 13, 19, 20, 22, 23, 26, 35, 36, 40, 84, 124, 132, 134, 140, 155, 202, 203, 215, 283, 285, 313, 314, 324, 330, 466], "underneath": [5, 283], "both": [5, 13, 15, 17, 18, 19, 20, 22, 24, 27, 28, 29, 31, 35, 36, 41, 44, 47, 49, 50, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 78, 79, 85, 88, 91, 94, 119, 124, 125, 130, 134, 136, 137, 140, 155, 209, 213, 222, 225, 233, 240, 241, 248, 253, 256, 267, 283, 301, 322, 327, 328, 330, 331, 332, 345, 349, 440], "nhwc": [5, 22, 133, 172, 198, 214, 227, 283, 308, 330, 353], "still": [5, 12, 19, 35, 134, 142, 283, 330], "op_handl": 6, "attr": [6, 9, 11, 12, 13, 23, 35, 126, 132, 209, 210, 216, 223, 234, 239, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 258, 259, 262, 263, 264, 265, 266, 268, 269, 271, 323, 324, 332, 346, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 446, 448, 450, 454, 459, 460, 461, 463, 465, 468, 470, 472, 474, 478, 481, 483], "akind": [6, 234, 239, 249, 262, 292, 295, 296, 398], "string": [6, 19, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 76, 77, 85, 86, 87, 88, 91, 92, 93, 94, 116, 117, 119, 143, 195, 196, 197, 198, 199, 204, 205, 206, 208, 209, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 262, 267, 284, 292, 302, 304, 306, 308, 310, 315, 317, 319, 327, 328, 330, 331, 334, 336, 339, 341, 343, 347, 349, 353, 355, 358, 360, 362, 364, 399], "verbose_nam": [6, 234, 284], "add_input": 6, "add_output": 6, "templat": [6, 130, 143, 207, 267, 274, 292, 296, 320, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "typenam": [6, 207, 274, 292, 296, 320, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "is_sam": [6, 207, 320], "int64_t": [6, 182, 207, 210, 216, 234, 246, 284, 320, 324, 332, 457], "set_attr": 6, "name": [6, 11, 15, 17, 18, 19, 21, 23, 25, 28, 33, 36, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 123, 127, 128, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 155, 172, 181, 182, 187, 188, 234, 239, 267, 284, 301, 330, 338, 345, 365, 457], "specifi": [6, 9, 10, 11, 12, 15, 17, 18, 19, 21, 23, 25, 28, 31, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 57, 59, 60, 64, 65, 66, 67, 76, 77, 85, 86, 87, 88, 91, 94, 96, 97, 98, 99, 100, 101, 102, 116, 117, 118, 119, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 140, 143, 155, 162, 163, 173, 174, 187, 188, 199, 200, 202, 203, 206, 208, 209, 210, 212, 223, 239, 240, 242, 253, 256, 257, 267, 272, 273, 277, 285, 294, 295, 296, 297, 310, 311, 313, 314, 319, 322, 323, 324, 327, 330, 331, 332, 345, 364, 398, 407, 438, 446, 452, 454, 457, 460, 476], "convolut": [6, 11, 13, 14, 19, 21, 22, 26, 28, 33, 34, 35, 36, 40, 59, 60, 61, 62, 63, 127, 130, 132, 142, 143, 145, 146, 155, 164, 166, 167, 172, 177, 178, 199, 200, 201, 202, 203, 206, 222, 223, 238, 239, 256, 261, 262, 301, 310, 311, 312, 313, 314, 318, 319, 330, 346, 381, 382, 383, 384, 385, 386, 402, 432, 445, 446, 457, 487], "relu": [6, 14, 15, 22, 23, 28, 33, 35, 44, 80, 92, 104, 128, 134, 145, 146, 164, 166, 167, 173, 174, 196, 197, 199, 200, 201, 202, 203, 205, 206, 211, 212, 213, 214, 215, 216, 217, 221, 223, 233, 240, 248, 259, 304, 306, 310, 311, 312, 313, 314, 317, 319, 326, 328, 331, 332, 333, 334, 343, 346, 364], "bound": [6, 13, 28, 36, 37, 55, 56, 130], "set": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 22, 23, 24, 25, 26, 31, 32, 36, 37, 39, 40, 41, 44, 48, 58, 78, 79, 92, 96, 97, 98, 99, 100, 101, 102, 129, 130, 132, 134, 143, 147, 150, 196, 197, 201, 202, 208, 209, 218, 223, 224, 225, 231, 237, 239, 241, 245, 247, 250, 251, 253, 255, 256, 257, 259, 260, 262, 263, 265, 266, 267, 272, 273, 278, 279, 281, 284, 288, 295, 296, 304, 306, 311, 312, 313, 331, 336, 345, 346, 347, 349, 360, 407, 438, 440, 446, 454, 479], "self": [6, 130], "partition_handl": 7, "dnnl_graph_partition_t": [7, 234, 277, 281, 285], "p": [7, 18, 39, 130, 131, 181, 182, 208, 209, 234, 263, 322, 323, 457, 459], "aop": 7, "ekind": [7, 234, 285], "get_ops_num": 7, "get_op": 7, "compiled_partit": [7, 31, 234, 277, 285, 287, 293, 294], "e": [7, 11, 12, 13, 15, 21, 28, 35, 36, 38, 41, 44, 68, 71, 78, 79, 89, 90, 107, 111, 136, 141, 142, 155, 172, 196, 201, 202, 207, 209, 210, 211, 212, 214, 216, 218, 219, 229, 233, 239, 256, 267, 304, 313, 320, 323, 324, 326, 330, 332, 336, 339, 357, 364, 380, 400, 440, 446, 456, 461, 478], "is_support": [7, 234, 285], "get_input_port": [7, 31], "get_output_port": [7, 31], "get_engine_kind": 7, "raw": [7, 20, 207, 210, 320, 324, 330], "c": [7, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 26, 28, 29, 33, 38, 41, 42, 43, 44, 48, 50, 51, 53, 57, 78, 79, 86, 109, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 141, 142, 155, 172, 181, 195, 200, 201, 202, 203, 207, 208, 209, 210, 212, 214, 215, 216, 218, 220, 229, 234, 239, 242, 249, 250, 255, 256, 262, 266, 267, 273, 292, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 399, 404, 406, 407, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 459, 461, 463, 465, 466, 468, 470, 472, 474, 476, 478, 481, 483], "handl": [7, 8, 11, 12, 13, 14, 20, 26, 31, 40, 124, 132, 142, 195, 196, 197, 198, 204, 205, 208, 209, 210, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 234, 239, 242, 249, 256, 257, 262, 270, 272, 273, 274, 276, 277, 281, 283, 284, 285, 287, 288, 292, 295, 296, 297, 302, 304, 306, 308, 315, 317, 322, 323, 324, 328, 330, 334, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 358, 360, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "directli": [7, 15, 19, 23, 40, 140, 142, 207, 256, 285, 320, 330, 364, 438, 479], "without": [7, 10, 12, 14, 19, 23, 26, 30, 31, 125, 134, 141, 145, 151, 154, 178, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 245, 247, 256, 257, 272, 273, 285, 295, 296, 297, 302, 304, 306, 308, 310, 313, 314, 315, 317, 318, 319, 320, 322, 323, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 370, 372, 374, 376, 378, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 448, 450, 459, 461, 463, 465, 468, 470, 472, 474, 481, 483], "contain": [7, 11, 14, 15, 18, 22, 31, 32, 33, 34, 36, 48, 49, 58, 59, 60, 61, 62, 63, 64, 76, 77, 86, 87, 94, 96, 97, 98, 99, 100, 101, 102, 118, 130, 142, 143, 155, 195, 205, 214, 217, 220, 225, 239, 245, 247, 256, 257, 258, 267, 272, 283, 285, 295, 296, 298, 302, 312, 317, 327, 330, 331, 334, 341, 349, 364, 382, 384, 386, 388, 390, 392, 400, 442, 444, 452, 453, 460, 484], "onli": [7, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 34, 35, 36, 38, 40, 41, 43, 44, 64, 66, 67, 79, 92, 93, 94, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 151, 154, 155, 172, 174, 178, 179, 180, 182, 198, 202, 203, 206, 229, 237, 239, 245, 246, 247, 249, 256, 257, 258, 267, 273, 283, 285, 294, 295, 297, 308, 310, 311, 313, 314, 319, 320, 324, 327, 330, 332, 345, 346, 357, 382, 384, 386, 388, 390, 392, 440, 442, 444, 446, 454], "unord": 7, "gener": [7, 11, 14, 18, 19, 22, 24, 25, 31, 32, 33, 36, 39, 42, 125, 129, 130, 141, 154, 158, 160, 171, 181, 182, 195, 196, 197, 198, 204, 205, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 248, 256, 267, 277, 302, 304, 306, 308, 315, 317, 324, 327, 328, 330, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 402], "debug": [7, 18, 19, 24, 129, 130, 166, 167, 256, 267, 327, 330, 331, 364, 438], "purpos": [7, 9, 19, 20, 24, 26, 27, 124, 129, 142, 143, 256, 320, 330, 346, 438], "verbos": [7, 19, 20, 126, 129, 267, 345, 366], "shape": [7, 14, 15, 21, 23, 31, 35, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 65, 76, 77, 84, 85, 86, 87, 88, 91, 96, 97, 98, 99, 100, 101, 102, 116, 117, 119, 122, 132, 137, 142, 162, 163, 168, 190, 201, 207, 210, 222, 229, 262, 272, 283, 285, 296, 311, 312, 320, 324, 325, 332, 333, 345, 357, 402, 452, 460], "choos": [7, 12, 18, 19, 20, 21, 23, 24, 31, 36, 38, 40, 44, 128, 137, 195, 201, 205, 217, 220, 222, 225, 256, 285, 302, 311, 312, 317, 324, 332, 334, 341, 345, 346, 349], "optim": [7, 11, 15, 17, 19, 21, 23, 26, 28, 30, 31, 37, 38, 39, 41, 43, 44, 66, 67, 127, 129, 132, 134, 135, 136, 137, 142, 161, 169, 195, 205, 217, 220, 223, 225, 285, 290, 302, 303, 304, 305, 306, 307, 311, 315, 316, 317, 318, 327, 330, 331, 334, 335, 336, 337, 341, 342, 343, 344, 345, 346, 349, 353, 354, 358, 359, 360, 361, 362, 363, 364], "save": [7, 31, 39, 43, 127, 174, 224, 285, 347], "some": [7, 9, 10, 11, 12, 13, 19, 21, 23, 28, 36, 39, 43, 125, 126, 127, 129, 130, 132, 140, 141, 142, 143, 202, 203, 206, 214, 216, 229, 242, 256, 273, 285, 297, 308, 310, 311, 313, 314, 319, 320, 324, 327, 330, 331, 332, 345, 357, 364, 440, 445], "under": [7, 23, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 285, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "certain": [7, 14, 15, 23, 24, 25, 33, 38, 143, 155, 172, 246, 285, 398, 445, 446], "dure": [7, 9, 10, 11, 12, 13, 14, 15, 19, 23, 24, 25, 26, 28, 31, 35, 36, 37, 38, 40, 41, 43, 44, 117, 122, 124, 126, 127, 130, 132, 142, 158, 160, 161, 169, 182, 229, 242, 273, 285, 297, 320, 331, 345, 357, 364, 402, 438, 440, 446, 454, 479], "stage": [7, 23, 38, 44, 117, 279, 283, 285], "unsupport": [7, 12, 37, 233, 285, 364], "befor": [7, 9, 12, 13, 20, 21, 23, 24, 25, 26, 27, 31, 34, 35, 58, 59, 60, 61, 62, 63, 80, 84, 116, 130, 137, 143, 145, 146, 199, 206, 209, 229, 239, 256, 267, 279, 285, 310, 319, 322, 323, 327, 330, 331, 345, 346, 357, 364, 438, 446], "transform": [7, 13, 14, 37, 76, 77, 256, 285, 311, 312, 330, 440], "isn": 7, "tensor_handl": 8, "aengin": [8, 295, 296, 297, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 442, 444, 448, 450, 459, 463, 465, 468, 470, 472, 474, 476, 478, 481, 483], "get_data_handl": [8, 27, 124, 202, 203, 208, 209, 256, 313, 314, 322, 323, 330, 438], "set_data_handl": [8, 208, 209, 256, 295, 296, 322, 323, 438], "get_engin": [8, 256, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 476, 478, 481, 483], "storag": [8, 10, 14, 256, 257, 262, 272, 288, 295, 296], "On": [8, 19, 26, 35, 36, 44, 140, 142, 143, 155, 172, 173, 174, 242, 273, 297, 320, 331, 364, 438], "usm": [8, 175, 176, 193, 194, 256, 257, 272, 287, 294, 295, 296, 438], "alloc": [8, 13, 14, 20, 27, 124, 125, 175, 176, 187, 188, 193, 194, 195, 196, 197, 198, 200, 201, 204, 205, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 256, 257, 272, 275, 280, 287, 288, 293, 294, 295, 296, 302, 304, 306, 308, 311, 315, 317, 324, 328, 330, 331, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 438, 440, 461], "associ": [8, 17, 21, 28, 31, 34, 35, 128, 131, 132, 135, 136, 137, 257, 262, 272, 281, 295, 296, 438, 476], "quick": 9, "recap": 9, "creation": [9, 10, 11, 12, 13, 15, 19, 21, 23, 28, 35, 38, 41, 44, 126, 129, 134, 137, 143, 208, 209, 210, 215, 216, 233, 256, 267, 283, 302, 303, 312, 315, 316, 317, 318, 320, 324, 327, 330, 331, 332, 334, 335, 336, 337, 341, 342, 346, 364, 479], "step": [9, 14, 19, 23, 35, 36, 37, 40, 126, 195, 218, 220, 302, 327, 330, 331, 336, 341, 345, 364], "consist": [9, 14, 17, 22, 24, 36, 44, 125, 134, 142, 256, 345, 440], "follow": [9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 155, 172, 198, 216, 223, 229, 239, 256, 266, 267, 308, 320, 327, 330, 331, 332, 345, 346, 357, 364, 370, 372, 404, 406, 407, 420, 422, 424, 426, 432, 434, 440, 445, 454, 481, 483], "descriptor": [9, 11, 12, 13, 14, 15, 19, 21, 23, 28, 35, 36, 38, 41, 43, 126, 127, 133, 134, 137, 142, 151, 154, 170, 171, 181, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 268, 269, 271, 272, 295, 296, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 327, 328, 331, 332, 334, 335, 336, 337, 339, 341, 342, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 480, 481, 482, 483], "backward": [9, 13, 14, 17, 19, 21, 22, 35, 66, 67, 78, 79, 131, 134, 137, 143, 145, 146, 173, 174, 179, 180, 195, 196, 202, 203, 206, 213, 219, 220, 224, 225, 229, 240, 245, 247, 248, 251, 253, 254, 258, 259, 262, 265, 266, 268, 269, 302, 304, 311, 313, 314, 319, 328, 339, 341, 345, 347, 349, 357, 369, 370, 373, 374, 381, 382, 387, 388, 393, 394, 403, 404, 409, 410, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 441, 442, 447, 448, 462, 463, 467, 468, 471, 472, 480, 481], "propag": [9, 13, 14, 15, 17, 19, 21, 22, 23, 28, 29, 35, 38, 41, 43, 79, 127, 128, 131, 133, 134, 135, 136, 137, 143, 173, 174, 179, 180, 181, 182, 195, 196, 213, 219, 220, 222, 223, 225, 239, 240, 245, 247, 248, 251, 253, 254, 258, 259, 262, 265, 266, 268, 269, 301, 302, 303, 304, 305, 311, 317, 318, 328, 329, 330, 336, 337, 339, 340, 341, 342, 346, 347, 348, 349, 350, 355, 356, 360, 361, 367, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 403, 404, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 441, 442, 443, 444, 447, 448, 449, 450, 456, 457, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 480, 481, 482, 483], "forward": [9, 13, 14, 17, 19, 21, 22, 35, 49, 130, 131, 134, 137, 173, 174, 179, 180, 199, 200, 201, 202, 203, 206, 212, 215, 219, 229, 233, 239, 240, 245, 247, 248, 251, 253, 254, 256, 258, 259, 262, 265, 266, 268, 269, 302, 303, 304, 305, 310, 311, 312, 313, 314, 317, 318, 319, 327, 328, 329, 331, 336, 337, 339, 340, 341, 342, 345, 347, 348, 349, 350, 355, 356, 357, 360, 361, 364, 370, 371, 372, 374, 375, 376, 382, 384, 385, 386, 388, 390, 391, 392, 394, 395, 396, 404, 405, 406, 410, 412, 413, 414, 416, 417, 418, 420, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 442, 443, 444, 446, 448, 449, 450, 463, 464, 465, 468, 469, 470, 472, 473, 474, 481, 482, 483], "might": [9, 11, 12, 13, 15, 17, 19, 22, 23, 26, 28, 30, 36, 38, 40, 41, 43, 127, 132, 134, 135, 142, 155, 202, 203, 206, 210, 313, 314, 319, 320, 324, 327, 330, 332, 445], "well": [9, 12, 13, 14, 35, 36, 125, 141, 142, 143, 209, 210, 311, 320, 322, 324, 345, 407], "train": [9, 11, 12, 13, 19, 29, 35, 37, 40, 43, 50, 80, 125, 129, 142, 173, 174, 179, 180, 202, 203, 206, 219, 229, 240, 248, 301, 302, 303, 304, 305, 311, 328, 329, 339, 340, 341, 342, 345, 347, 348, 349, 350, 355, 356, 360, 361, 367], "specif": [9, 10, 11, 14, 15, 17, 18, 23, 25, 28, 31, 37, 43, 125, 127, 133, 134, 135, 151, 155, 158, 160, 166, 167, 170, 172, 181, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 248, 249, 256, 257, 263, 267, 272, 281, 288, 295, 296, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 324, 326, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 394, 396, 438, 459], "aspect": [9, 345, 367], "sole": [9, 35], "detail": [9, 12, 14, 18, 19, 26, 35, 36, 40, 130, 140, 143, 201, 202, 209, 313, 320, 323, 330], "why": [9, 142], "found": [9, 12, 19, 126, 127, 140, 141, 142, 211, 224, 326, 347], "concept": [9, 44, 132, 249, 261, 270, 320, 321, 324, 325, 327, 330, 331, 332, 333, 345, 364, 367], "fact": [9, 42, 132, 330, 346], "import": [9, 11, 12, 14, 19, 35, 36, 40, 42, 125, 142, 327, 331, 364], "u": [9, 22, 134, 135, 145, 146, 207, 210, 216, 320, 324, 330, 332], "now": [9, 12, 22, 23, 35, 38, 134, 195, 200, 202, 203, 205, 217, 220, 225, 229, 302, 313, 314, 317, 322, 323, 327, 330, 334, 341, 345, 349, 357, 364], "2": [9, 11, 15, 24, 26, 27, 28, 37, 39, 41, 43, 44, 50, 51, 52, 58, 59, 60, 61, 63, 66, 67, 77, 78, 79, 84, 90, 92, 93, 97, 116, 125, 126, 129, 130, 134, 136, 142, 143, 145, 146, 147, 150, 151, 154, 155, 158, 167, 169, 178, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 256, 262, 267, 283, 302, 304, 306, 308, 310, 312, 313, 314, 315, 317, 319, 320, 322, 323, 324, 326, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 380, 402, 440, 446, 454, 456, 461, 478], "fulli": [9, 13, 14, 34, 36, 38, 44, 346], "correspond": [9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 31, 36, 37, 38, 41, 44, 58, 59, 84, 96, 97, 98, 99, 100, 101, 102, 117, 125, 126, 128, 132, 133, 134, 135, 136, 142, 143, 155, 172, 182, 212, 214, 223, 239, 245, 247, 249, 250, 256, 257, 262, 266, 272, 295, 296, 320, 327, 330, 331, 345, 346, 364, 382, 384, 386, 388, 390, 392, 438, 440, 446, 454], "onc": [9, 11, 13, 24, 25, 35, 36, 40, 44, 129, 134, 142, 209, 262, 267, 279, 283, 311, 322, 323, 324, 325, 327, 330, 332, 333], "chang": [9, 10, 11, 12, 14, 19, 24, 25, 26, 30, 34, 35, 44, 117, 129, 132, 138, 142, 155, 161, 169, 178, 222, 239, 256, 262, 264, 267, 296, 311, 330, 345, 346, 438, 446, 456], "problem": [9, 23, 40, 132, 143, 210, 320, 324], "where": [9, 10, 11, 12, 13, 15, 17, 21, 22, 23, 26, 28, 36, 37, 38, 40, 41, 43, 44, 48, 51, 57, 58, 59, 64, 66, 67, 78, 79, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 117, 126, 127, 131, 133, 134, 135, 136, 142, 143, 155, 172, 224, 227, 239, 242, 273, 297, 310, 311, 312, 320, 330, 345, 347, 353, 446], "destin": [9, 11, 12, 21, 22, 23, 28, 35, 37, 38, 40, 44, 128, 132, 133, 140, 181, 182, 195, 196, 197, 204, 205, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 256, 258, 259, 262, 263, 264, 265, 268, 269, 271, 302, 304, 306, 312, 315, 316, 317, 327, 328, 330, 332, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 363, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 446, 448, 450, 457, 459, 460, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "so": [9, 11, 12, 14, 19, 20, 21, 25, 35, 36, 40, 42, 44, 130, 134, 137, 142, 151, 154, 178, 207, 209, 229, 239, 256, 262, 311, 312, 320, 327, 330, 331, 346, 357, 364, 445], "extra": [9, 13, 15, 18, 19, 25, 33, 36, 40, 142, 143, 174, 182, 330, 345], "were": [9, 13, 27, 143, 174, 327, 330, 331, 364], "design": [9, 11, 12, 21, 41, 57, 135, 345], "extens": [9, 23, 24, 26, 27, 29, 39, 40, 124, 134, 147, 150, 215, 233, 252, 257, 272, 273, 282, 287, 290, 301], "henc": [9, 11, 13, 15, 23, 28, 36, 41, 129, 134, 135, 136, 140, 142, 174, 207, 245, 247, 258, 320, 330, 345, 382, 384, 386, 388, 390, 392, 442, 444], "thei": [9, 11, 13, 14, 15, 20, 23, 27, 31, 33, 36, 37, 38, 40, 41, 44, 76, 78, 79, 127, 134, 142, 155, 208, 216, 322, 327, 330, 331, 332, 345, 346, 364], "structur": [9, 11, 142, 155, 182, 256, 267, 397, 400, 437, 439, 445, 451, 453, 455, 475, 484], "must": [9, 10, 11, 12, 13, 15, 17, 19, 21, 23, 27, 31, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 130, 132, 134, 141, 155, 182, 239, 241, 242, 245, 247, 256, 258, 262, 266, 267, 272, 273, 279, 283, 295, 296, 297, 311, 312, 327, 330, 331, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 448, 450, 452, 454, 459, 460, 461, 463, 465, 468, 470, 472, 474, 478, 481, 483], "them": [9, 19, 20, 28, 30, 31, 33, 34, 35, 36, 40, 96, 97, 98, 99, 100, 101, 102, 125, 126, 142, 162, 173, 239, 240, 253, 256, 266, 327, 330, 345, 370, 372, 402, 404, 406, 420, 422, 424, 426, 432, 434, 483], "setter": [9, 25], "destroi": [9, 13, 124, 182, 239, 249, 256, 262, 270, 276, 277, 281, 284, 285, 288, 330, 345, 364, 440, 446, 454], "right": [9, 23, 28, 43, 44, 48, 49, 58, 59, 60, 61, 62, 63, 78, 79, 84, 86, 87, 127, 133, 135, 136, 142, 143, 181, 182, 183, 184, 205, 222, 224, 229, 245, 247, 256, 258, 317, 345, 347, 357, 382, 384, 386, 388, 390, 392, 442, 444, 457], "after": [9, 11, 12, 15, 23, 31, 36, 38, 116, 130, 134, 141, 143, 155, 200, 205, 211, 212, 214, 229, 233, 239, 267, 281, 285, 317, 326, 327, 330, 331, 345, 346, 357, 364, 380, 445, 446, 456, 461, 478], "modifi": [9, 15, 23, 31, 36, 38, 41, 44, 136, 239, 260, 278], "stai": [9, 142, 440], "equival": [9, 27, 124, 398, 407, 438, 452, 476], "null": [9, 199, 206, 211, 239, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 297, 310, 319, 326, 398, 407, 438, 452, 476], "upon": [9, 35, 327, 330, 331, 345, 364], "unless": [9, 17, 20, 41, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 256, 257, 262, 272, 295, 296, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 358, 360, 362, 438, 452, 460], "simpli": [9, 21, 23, 137, 256, 320], "omit": [9, 11, 179, 180, 311], "skeleton": [9, 11], "simplifi": [9, 22, 23, 36, 58, 82, 133, 141, 142], "read": [9, 27, 195, 196, 197, 198, 205, 207, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 302, 304, 306, 308, 317, 320, 328, 331, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 358, 360, 362, 364, 438], "dnnl_primitive_attr_t": [9, 234, 239, 454], "dnnl_primitive_attr_cr": [9, 234, 239], "dnnl_primitive_attr_set_someth": 9, "param": [9, 11, 13, 199, 206, 207, 310, 319, 320, 446], "dnnl_primitive_attr_set_something_els": 9, "other_param": [9, 11], "dnnl_eltwise_backward_primitive_desc_cr": [9, 206, 234, 248, 319], "op_pd": [9, 11, 13], "hint_fwd_pd": [9, 234, 240, 245, 247, 248, 251, 253, 254, 258, 259, 265, 266, 268, 269, 370, 374, 382, 384, 388, 390, 394, 404, 410, 412, 416, 420, 424, 428, 432, 442, 448, 463, 468, 472, 481], "here": [9, 11, 12, 13, 15, 21, 22, 23, 28, 31, 35, 36, 37, 43, 57, 58, 76, 77, 125, 127, 130, 134, 135, 140, 141, 142, 143, 145, 195, 196, 202, 207, 212, 216, 219, 220, 224, 229, 237, 256, 302, 304, 312, 313, 320, 322, 323, 327, 330, 332, 339, 341, 345, 346, 347, 357, 365, 440], "doe": [9, 11, 12, 13, 17, 18, 19, 21, 23, 26, 28, 30, 35, 38, 40, 43, 45, 46, 70, 71, 72, 73, 74, 75, 81, 89, 90, 95, 103, 105, 106, 107, 113, 115, 116, 120, 122, 123, 125, 127, 129, 130, 131, 133, 135, 137, 141, 142, 173, 222, 239, 242, 244, 256, 273, 297, 330, 345, 346, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 440, 442, 444, 446, 448, 450, 454, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "effect": [9, 11, 23, 84, 126, 267, 402], "we": [9, 11, 12, 13, 15, 22, 23, 28, 33, 35, 37, 41, 44, 58, 59, 125, 127, 128, 133, 134, 135, 136, 142, 195, 199, 202, 203, 205, 206, 207, 208, 209, 210, 214, 217, 220, 222, 225, 229, 302, 310, 313, 314, 317, 319, 320, 322, 323, 324, 327, 330, 331, 334, 341, 345, 346, 349, 357, 364], "immedi": [9, 345, 479], "dnnl_primitive_attr_destroi": [9, 234, 239], "dnnl": [9, 10, 11, 12, 13, 14, 15, 17, 19, 23, 24, 25, 27, 28, 31, 35, 36, 38, 40, 41, 42, 44, 124, 126, 130, 131, 133, 134, 138, 141, 142, 143, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 298, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364], "primitive_attr": [9, 11, 12, 13, 14, 23, 35, 40, 44, 197, 198, 201, 205, 207, 209, 210, 216, 217, 221, 223, 227, 234, 239, 292, 306, 308, 312, 317, 320, 321, 323, 324, 325, 332, 333, 334, 343, 346, 353, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 446, 448, 450, 456, 457, 459, 460, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "set_someth": 9, "set_something_els": 9, "primitive_desc": [9, 11, 12, 13, 14, 15, 23, 28, 35, 36, 41, 126, 134, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 240, 241, 245, 247, 248, 251, 253, 254, 255, 258, 259, 262, 263, 265, 266, 268, 269, 292, 296, 302, 304, 306, 308, 311, 312, 313, 314, 315, 317, 320, 322, 323, 324, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 441, 443, 446, 447, 449, 452, 454, 457, 458, 460, 462, 464, 466, 467, 469, 471, 473, 477, 480, 482], "pd": [9, 11, 22, 208, 229, 357, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 442, 443, 444, 447, 448, 449, 450, 452, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 480, 481, 482, 483], "happen": [9, 12, 23, 36, 40, 57, 132, 142, 199, 206, 216, 242, 273, 297, 310, 319, 330, 332, 345], "automat": [9, 40, 129, 146, 154, 155, 171, 172, 380, 478], "As": [9, 11, 12, 13, 15, 19, 20, 22, 23, 28, 31, 35, 36, 40, 132, 140, 142, 208, 229, 239, 256, 322, 323, 357, 440, 446], "mention": [9, 13, 15, 28, 36, 40, 208, 312, 322, 323, 330], "abov": [9, 12, 13, 15, 18, 23, 24, 27, 28, 33, 36, 38, 40, 84, 124, 125, 136, 142, 208, 256, 322, 323, 330, 346, 440], "enabl": [9, 10, 11, 13, 14, 15, 19, 23, 24, 25, 26, 27, 28, 30, 32, 37, 38, 39, 40, 41, 42, 44, 125, 129, 130, 136, 138, 142, 195, 205, 217, 220, 225, 234, 256, 267, 279, 290, 292, 302, 311, 312, 317, 324, 330, 332, 334, 341, 349, 438], "extend": [9, 12, 27, 124, 178, 239], "behavior": [9, 10, 11, 13, 15, 19, 23, 36, 38, 39, 40, 41, 43, 44, 130, 134, 136, 151, 154, 156, 157, 173, 174, 178, 239, 257, 270, 283, 295, 476, 479], "explan": 9, "provid": [9, 10, 11, 12, 13, 14, 15, 19, 20, 23, 25, 27, 30, 31, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 133, 134, 173, 174, 187, 188, 195, 202, 205, 217, 220, 225, 229, 239, 256, 260, 262, 278, 279, 283, 302, 313, 317, 334, 341, 345, 346, 349, 357, 408, 438, 446], "section": [9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 26, 28, 35, 36, 40, 43, 127, 129, 130, 134, 135, 141, 207, 320, 330], "scratchpad": [9, 14, 19, 22, 23, 36, 181, 182, 187, 188, 239, 262, 301, 454, 457], "intermedi": [9, 11, 12, 22, 23, 26, 28, 31, 36, 40, 43, 132, 207, 222, 242, 273, 297, 320, 324], "temporari": [9, 13, 14, 22, 36, 208, 209, 262, 267], "implicit": [9, 10, 17, 21, 22, 23, 33, 44, 132, 137, 156, 157], "down": [9, 10, 23, 31, 34, 40, 142, 346], "convers": [9, 10, 12, 23, 34, 40, 105, 156, 157], "f32": [9, 10, 11, 12, 15, 17, 23, 26, 28, 29, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 128, 131, 132, 133, 134, 135, 136, 140, 142, 156, 157, 159, 170, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 301, 302, 304, 306, 308, 312, 313, 315, 317, 320, 323, 324, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 358, 360, 362, 364, 446], "quantiz": [9, 11, 26, 34, 35, 40, 44, 64, 66, 67, 132, 134, 162, 163, 164, 198, 201, 207, 209, 234, 239, 301, 308, 312, 321, 323, 332, 333, 446, 454], "infer": [9, 11, 12, 19, 29, 39, 40, 44, 125, 129, 134, 142, 161, 168, 169, 173, 174, 179, 180, 190, 199, 200, 201, 208, 209, 216, 229, 234, 301, 320, 333, 346, 357, 367], "post": [9, 12, 26, 29, 35, 36, 37, 40, 166, 167, 173, 174, 196, 197, 198, 201, 205, 217, 221, 223, 227, 239, 262, 301, 304, 305, 306, 307, 317, 318, 334, 335, 343, 344, 346, 353, 445, 446, 454], "fuse": [9, 11, 12, 14, 15, 17, 23, 28, 34, 35, 36, 37, 38, 44, 173, 174, 223, 239, 240, 262, 304, 305, 306, 307, 317, 318, 332, 333, 334, 335, 343, 344, 446], "appli": [9, 11, 12, 15, 17, 23, 26, 28, 35, 37, 38, 40, 44, 45, 47, 55, 64, 65, 66, 67, 68, 71, 72, 74, 80, 81, 82, 84, 85, 88, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 107, 109, 111, 116, 118, 119, 120, 127, 131, 133, 134, 155, 161, 166, 167, 169, 172, 174, 211, 216, 227, 241, 242, 256, 262, 266, 273, 297, 312, 326, 327, 330, 332, 346, 353, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 481, 483], "mostli": [9, 36, 155, 172], "becaus": [9, 11, 12, 15, 19, 24, 25, 28, 36, 37, 41, 43, 168, 172, 181, 189, 190, 229, 248, 256, 311, 312, 330, 345, 346, 357, 364, 446], "separ": [9, 11, 15, 23, 36, 41, 125, 132, 143, 229, 256, 262, 322, 323, 330, 346, 357], "delai": [9, 202, 203, 313, 314], "successfulli": 9, "whatev": [9, 223, 346], "configur": [9, 13, 15, 18, 23, 25, 26, 36, 37, 41, 44, 79, 128, 134, 174, 187, 188, 191, 192, 201, 239, 240, 253, 267, 310, 311, 312, 317, 318, 345, 366, 445, 446, 454], "want": [9, 12, 13, 19, 36, 40, 125], "howev": [9, 10, 11, 12, 13, 15, 19, 21, 27, 28, 35, 36, 40, 41, 44, 125, 127, 128, 135, 136, 140, 142, 209, 210, 229, 248, 256, 311, 320, 322, 324, 327, 330, 331, 346, 357, 364], "try": [9, 201, 202, 209, 214, 229, 233, 313, 323, 330, 357, 364], "dnnl_unimpl": [9, 126, 168, 189, 190, 201, 202, 209, 267, 313, 323], "unfortun": [9, 40, 125, 141], "about": [9, 11, 13, 36, 44, 126, 129, 130, 142, 143, 256, 330, 346], "what": [9, 11, 12, 36, 37, 162, 214, 233, 234, 256, 262, 327, 330, 345, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 399, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483, 485], "exactli": [9, 12, 23, 36, 40, 96, 97, 98, 99, 100, 101, 102, 256], "go": [9, 35, 61, 142, 207, 320, 327, 330, 331, 364], "wrong": [9, 126, 330], "document": [9, 11, 12, 22, 36, 40, 42, 125, 140], "benefici": [10, 28, 36, 142, 445], "speedup": [10, 346], "notic": [10, 19, 166, 167, 330], "impact": [10, 12, 26, 30, 141, 142, 143], "accuraci": [10, 12, 23, 30, 35, 36, 37, 40, 44, 207, 214, 215, 320, 321, 330, 331], "how": [10, 11, 12, 13, 15, 17, 21, 23, 27, 28, 31, 35, 37, 38, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 76, 77, 86, 87, 117, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 140, 142, 143, 145, 146, 199, 200, 201, 202, 203, 206, 207, 208, 209, 229, 239, 242, 256, 273, 297, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 446], "numer": [10, 15, 28, 34, 40, 41, 51, 78, 79, 136, 140, 146, 208, 209, 214, 215, 229, 233, 331, 357, 364], "alter": 10, "narrow": 10, "f16": [10, 11, 15, 17, 23, 26, 28, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 128, 131, 132, 133, 134, 135, 136, 140, 156, 157, 159, 170], "bf16": [10, 11, 15, 17, 20, 23, 26, 28, 29, 36, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 128, 131, 132, 133, 134, 135, 136, 140, 156, 157, 159, 170, 202, 301], "tf32": [10, 156, 157], "furthermor": [10, 23, 58], "do": [10, 11, 12, 13, 15, 18, 20, 26, 35, 36, 40, 48, 86, 124, 125, 133, 137, 140, 142, 155, 172, 209, 215, 222, 256, 322, 345, 346, 438, 440], "affect": [10, 11, 30, 37, 40, 126, 142, 155, 267], "datatyp": [10, 12, 26, 134], "remain": [10, 22, 23, 58, 142, 208, 209, 229, 322, 323, 345, 357, 440, 446], "3": [10, 11, 12, 26, 28, 33, 37, 40, 44, 50, 51, 52, 74, 79, 92, 130, 134, 136, 138, 142, 143, 151, 158, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 256, 262, 283, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 328, 330, 331, 334, 336, 339, 343, 345, 346, 347, 349, 351, 353, 355, 358, 360, 362, 364, 440], "strict": [10, 156], "disabl": [10, 19, 24, 25, 39, 129, 130, 143, 245, 247, 251, 255, 260, 267, 278, 279, 384, 386, 390, 392], "smaller": [10, 19, 55, 56, 84, 132, 216, 332], "least": [10, 14, 18, 44, 57, 129, 242, 273, 295, 297, 327, 330, 438], "accur": [10, 23, 40, 210, 324], "expon": [10, 95, 140, 145, 146], "mantissa": [10, 140, 151, 159, 170], "bit": [10, 11, 19, 20, 24, 26, 34, 35, 36, 37, 40, 140, 147, 150, 151, 159, 170, 207, 209, 239, 242, 267, 273, 290, 297, 312, 320, 331, 446, 454, 479], "ignor": [10, 23, 25, 26, 48, 49, 52, 59, 60, 76, 77, 86, 87, 214, 256, 330], "integr": [10, 14, 19, 26, 31, 36, 42, 130, 267], "onednn_default_fpmath_mod": 10, "environ": [10, 18, 19, 24, 25, 30, 32, 39, 40, 42, 125, 129, 130, 141, 143, 267, 345, 346], "variabl": [10, 15, 17, 18, 19, 21, 23, 24, 25, 28, 30, 32, 38, 39, 41, 42, 43, 44, 45, 48, 55, 57, 58, 68, 71, 72, 74, 80, 81, 84, 86, 103, 107, 109, 111, 120, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 141, 143, 161, 169, 229, 234, 262, 267, 330, 345, 346, 357], "dnnl_set_default_fpmath_mod": [10, 234, 250], "set_default_fpmath_mod": [10, 267, 292], "build": [10, 13, 39, 42, 117, 138, 187, 188, 199, 200, 202, 203, 206, 208, 209, 229, 267, 283, 290, 310, 311, 313, 314, 319, 322, 323, 331, 357, 402], "arm": [10, 143, 290], "instruct": [10, 19, 23, 24, 26, 37, 39, 40, 125, 130, 140, 143, 147, 150, 172, 256, 257, 267, 272, 295, 296, 330, 438], "dispatch": [10, 14, 23, 25, 267, 366], "bfloat16": [10, 24, 26, 36, 147, 150, 151, 159, 202, 301, 313], "kernel": [10, 11, 19, 22, 25, 27, 39, 48, 49, 58, 59, 60, 61, 62, 63, 66, 67, 86, 87, 130, 142, 162, 163, 181, 182, 199, 200, 202, 203, 206, 215, 222, 224, 233, 234, 239, 258, 267, 277, 310, 311, 313, 314, 319, 324, 345, 347, 442, 444, 446, 457], "avail": [10, 16, 19, 20, 23, 24, 26, 35, 39, 42, 44, 96, 97, 98, 99, 100, 101, 102, 117, 126, 130, 143, 168, 189, 190, 195, 201, 202, 208, 209, 262, 302, 313, 322, 323, 331, 345, 364, 456], "hardwar": [10, 12, 15, 17, 23, 27, 28, 31, 37, 40, 43, 125, 127, 130, 134, 135, 140, 277, 345], "introduc": [10, 40, 129, 140, 142, 330, 346], "drop": 10, "typic": [11, 12, 15, 21, 31, 36, 37, 40, 43, 84, 123, 125, 132, 135, 136, 142, 166, 167, 207, 216, 256, 262, 264, 320, 330, 332], "bandwidth": [11, 36, 345], "pressur": [11, 36], "lead": [11, 13, 15, 17, 19, 20, 23, 26, 28, 33, 36, 40, 41, 43, 132, 142, 162, 210, 242, 273, 297, 324, 330], "higher": [11, 15, 19, 23, 34, 37, 41, 44, 125, 127, 128, 133, 142], "perform": [11, 12, 13, 14, 19, 20, 24, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 40, 45, 47, 48, 50, 58, 61, 65, 66, 67, 76, 78, 79, 81, 85, 86, 88, 89, 91, 92, 96, 97, 98, 99, 100, 101, 102, 113, 115, 116, 119, 122, 125, 134, 138, 140, 142, 143, 144, 174, 179, 180, 202, 203, 206, 222, 223, 224, 239, 240, 241, 242, 245, 247, 248, 253, 254, 255, 256, 258, 259, 267, 269, 273, 290, 297, 301, 310, 311, 312, 313, 314, 319, 320, 321, 324, 330, 331, 332, 347, 364, 380, 438, 445, 446, 454, 478], "append": [11, 239, 446], "mechan": [11, 27, 34, 39, 42, 125, 208, 209, 322, 323], "multipl": [11, 12, 13, 14, 15, 17, 22, 23, 31, 33, 34, 36, 40, 41, 101, 125, 131, 132, 138, 145, 146, 155, 172, 177, 178, 221, 229, 238, 242, 256, 261, 271, 308, 311, 320, 321, 324, 325, 327, 330, 332, 333, 343, 345, 346, 357, 435, 440, 456, 487], "order": [11, 12, 14, 19, 22, 23, 24, 27, 35, 36, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 132, 134, 142, 143, 155, 162, 163, 172, 191, 192, 202, 203, 206, 214, 239, 242, 244, 245, 247, 256, 258, 267, 273, 297, 313, 314, 319, 330, 346, 380, 382, 384, 386, 388, 390, 392, 402, 440, 442, 444, 446, 454], "just": [11, 12, 19, 22, 23, 25, 28, 36, 39, 129, 130, 141, 142, 145, 155, 201, 202, 209, 313, 323, 324, 327, 330, 331, 345, 364], "like": [11, 14, 15, 19, 22, 23, 31, 36, 38, 40, 42, 43, 51, 84, 127, 134, 142, 143, 239, 283, 320, 324, 330, 445, 446], "dnnl_post_ops_t": [11, 234, 239, 446], "post_op": [11, 35, 197, 198, 201, 205, 210, 216, 217, 221, 223, 234, 239, 292, 306, 308, 312, 317, 324, 332, 334, 343, 346, 407, 454], "attach": [11, 12, 19, 21, 35, 36, 125, 327, 330, 331, 364, 446], "set_post_op": [11, 23, 35, 197, 198, 201, 205, 210, 216, 217, 221, 223, 306, 308, 312, 317, 324, 332, 334, 343, 346, 454], "dnnl_primitive_attr_set_post_op": [11, 234, 239], "simpl": [11, 12, 20, 23, 39, 126, 141, 143, 199, 206, 207, 210, 216, 310, 312, 319, 320, 324, 330, 332], "po": [11, 23, 210, 216, 324, 332], "assert": [11, 13, 142, 200, 202, 203, 207, 208, 209, 256, 311, 313, 314, 320, 440], "len": [11, 242, 273, 297, 446], "append_someth": 11, "particular": [11, 13, 14, 19, 22, 23, 26, 36, 40, 44, 136, 142, 143, 155, 212, 214, 249, 262, 270, 320, 327, 330, 331, 364, 398], "append_something_els": 11, "note": [11, 12, 13, 19, 35, 36, 37, 40, 60, 125, 134, 142, 143, 155, 195, 196, 204, 207, 209, 219, 220, 224, 229, 244, 262, 283, 302, 304, 311, 312, 315, 320, 322, 323, 330, 339, 341, 347, 357, 380], "matter": [11, 36, 40], "further": [11, 22, 23, 27, 58, 124, 133, 155, 172], "would": [11, 12, 13, 15, 19, 22, 23, 25, 35, 36, 40, 41, 44, 127, 132, 142, 207, 239, 240, 242, 256, 266, 273, 297, 312, 320, 330, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 440, 446, 454, 460, 481, 483], "togeth": [11, 32, 142, 266, 346, 370, 404, 420, 424, 432, 434, 445, 481], "anoth": [11, 13, 22, 36, 105, 125, 130, 134, 142, 262, 283, 311, 327, 330, 331, 364, 402, 407, 440], "sequenc": [11, 14, 22, 23, 40, 130, 155, 208, 209, 229, 239, 322, 323, 327, 331, 346, 357, 364, 446], "appear": [11, 21, 36, 135, 142, 143], "maximum": [11, 12, 14, 17, 33, 36, 98, 127, 164, 208, 209, 224, 229, 246, 273, 320, 347, 357], "32": [11, 20, 36, 37, 40, 140, 151, 155, 159, 170, 202, 203, 205, 208, 209, 234, 239, 242, 262, 273, 297, 312, 313, 314, 317, 446, 454], "page": [11, 14, 21, 36, 37, 61, 130, 131, 132, 137, 143, 365], "moreov": [11, 22, 23, 25, 28, 37, 125, 155, 172], "depend": [11, 12, 13, 14, 15, 18, 19, 26, 31, 34, 37, 40, 41, 42, 44, 54, 124, 125, 128, 129, 134, 142, 155, 172, 239, 242, 244, 248, 256, 262, 272, 273, 287, 294, 296, 297, 310, 311, 320, 330, 331, 345, 364, 380, 394, 396, 440, 446, 454], "actual": [11, 12, 13, 14, 23, 36, 38, 40, 125, 134, 142, 154, 171, 239, 256, 262, 320, 327, 330, 345, 438, 454, 466], "instanc": [11, 12, 13, 15, 22, 23, 25, 35, 40, 44, 125, 129, 132, 136, 141, 142, 155, 256, 273, 281, 285, 297, 330, 399, 445, 479], "refer": [11, 12, 13, 14, 15, 17, 19, 21, 23, 27, 28, 33, 37, 38, 41, 42, 43, 44, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 142, 182, 201, 202, 209, 239, 240, 242, 248, 253, 262, 273, 297, 313, 320, 323, 327, 330, 331, 345, 346, 364, 376], "veri": [11, 12, 13, 36, 40, 140, 142, 327, 330], "slow": 11, "robust": [11, 35, 36], "code": [11, 14, 19, 20, 21, 22, 23, 24, 25, 27, 31, 35, 36, 40, 42, 124, 126, 129, 130, 132, 137, 142, 143, 215, 256, 267, 311, 312, 322, 323, 327, 331, 345, 346, 364, 366], "inspect": [11, 14, 262, 290, 330], "index": [11, 15, 17, 21, 22, 23, 28, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 131, 132, 133, 134, 135, 136, 137, 142, 199, 206, 214, 234, 239, 244, 249, 262, 272, 280, 290, 293, 296, 310, 311, 319, 322, 323, 327, 330, 331, 364, 378, 380, 398, 400, 446, 452, 454, 457, 460, 478], "less": [11, 17, 23, 44, 84, 125, 133, 145, 146, 229, 260, 278, 312, 357, 398], "than": [11, 13, 17, 19, 23, 26, 28, 36, 40, 44, 55, 56, 84, 117, 132, 133, 137, 142, 145, 146, 182, 187, 188, 202, 203, 206, 216, 260, 278, 313, 314, 319, 330, 332, 346, 398], "its": [11, 13, 14, 17, 19, 23, 24, 26, 28, 33, 34, 35, 38, 40, 43, 93, 124, 125, 134, 142, 155, 173, 216, 229, 256, 281, 284, 311, 312, 330, 331, 332, 338, 357, 364, 398, 407, 438, 452, 476, 479], "most": [11, 12, 14, 17, 19, 20, 21, 23, 24, 26, 33, 36, 38, 40, 43, 44, 84, 125, 131, 132, 137, 140, 142, 143, 155, 181, 249, 262, 320, 330, 332, 345, 398, 407, 438, 452, 476], "popular": [11, 12, 34, 142, 330], "activ": [11, 12, 13, 15, 18, 22, 37, 38, 55, 71, 80, 89, 134, 142, 155, 172, 181, 182, 216, 222, 234, 239, 266, 332, 345, 402, 446, 454, 457, 481, 483], "preced": [11, 15, 19, 22, 24, 25, 33, 39, 43, 49, 59, 60, 63, 127, 129, 130, 135, 143, 155, 345], "inner": [11, 22, 26, 35, 40, 142, 155, 177, 178, 200, 217, 238, 261, 301, 311, 335, 345, 409, 410, 411, 412, 413, 414, 440, 487], "product": [11, 22, 26, 35, 40, 44, 84, 117, 177, 178, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 234, 238, 242, 256, 261, 273, 297, 301, 302, 304, 306, 308, 310, 311, 313, 314, 315, 317, 319, 326, 328, 335, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 358, 360, 362, 409, 410, 411, 412, 413, 414, 440, 487], "dnnl_post_ops_append_eltwis": [11, 234, 239], "append_eltwis": [11, 35, 197, 201, 205, 216, 217, 221, 223, 306, 312, 317, 332, 334, 343, 346, 446], "simplic": [11, 12, 134, 142, 204, 207, 210, 315, 320, 324, 327, 331, 364], "algorithm": [11, 12, 15, 19, 28, 35, 36, 127, 131, 133, 143, 145, 181, 182, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 239, 241, 245, 247, 248, 254, 258, 263, 265, 269, 292, 302, 304, 306, 308, 311, 312, 313, 314, 315, 317, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 358, 360, 362, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 446, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "alg": [11, 143, 345, 346], "alpha": [11, 15, 23, 28, 37, 43, 68, 69, 80, 92, 128, 132, 162, 163, 181, 182, 197, 199, 202, 203, 205, 206, 210, 214, 216, 217, 219, 221, 234, 239, 242, 248, 254, 259, 266, 273, 292, 297, 306, 310, 313, 314, 317, 319, 324, 330, 332, 334, 339, 343, 346, 394, 396, 428, 430, 446, 448, 450, 457, 481, 483], "beta": [11, 15, 23, 28, 41, 43, 50, 51, 78, 79, 111, 112, 132, 162, 163, 181, 182, 197, 199, 202, 203, 205, 206, 210, 214, 217, 219, 221, 234, 239, 240, 242, 248, 253, 254, 266, 273, 292, 297, 306, 310, 313, 314, 317, 319, 324, 330, 334, 339, 343, 346, 394, 396, 428, 430, 446, 457, 481, 483], "replac": [11, 28, 40, 44, 55, 56, 130, 134, 135, 141, 324, 325, 330], "dst": [11, 12, 15, 17, 21, 22, 23, 26, 28, 36, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 131, 132, 133, 135, 136, 137, 145, 146, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 239, 240, 248, 253, 302, 304, 306, 308, 310, 312, 313, 314, 315, 316, 317, 319, 322, 323, 328, 330, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 358, 360, 362, 363, 376, 378, 380, 410, 412, 414, 446, 460, 461, 478], "operatornam": [11, 12, 26, 28], "preserv": [11, 13, 35, 36, 199, 206, 310, 319], "accumul": [11, 12, 20, 26, 33, 40, 54, 128, 132, 134, 215, 229, 233, 239, 281, 331, 357, 364, 445, 446], "exist": [11, 14, 26, 27, 44, 124, 256, 280, 287, 440], "prior": [11, 239, 257, 262, 295, 330, 446, 452, 453], "shift": [11, 22, 37, 40, 51, 78, 173, 174, 196, 198, 218, 234, 239, 240, 253, 262, 304, 308, 336, 454], "multipli": [11, 13, 22, 33, 40, 134, 164, 210, 215, 229, 233, 239, 242, 256, 271, 273, 297, 324, 331, 357, 364, 446, 478], "scale": [11, 17, 21, 22, 23, 34, 35, 38, 40, 44, 51, 64, 66, 67, 68, 69, 76, 77, 78, 79, 94, 132, 133, 136, 137, 162, 163, 173, 174, 196, 198, 201, 207, 209, 216, 218, 227, 232, 234, 239, 240, 242, 253, 262, 265, 271, 273, 297, 304, 308, 312, 320, 321, 322, 323, 324, 325, 332, 333, 336, 353, 354, 362, 446, 453, 454, 463, 465, 478], "residu": [11, 208, 445], "learn": [11, 12, 19, 22, 23, 24, 26, 34, 35, 36, 40, 125, 147, 150, 222, 290, 345, 445], "block": [11, 14, 21, 22, 130, 143, 154, 155, 171, 172, 181, 182, 223, 256, 290, 330, 345, 440, 445], "previous": [11, 37, 256, 312, 331, 345, 364, 438, 454], "previou": [11, 12, 19, 28, 35, 37, 132, 134, 142, 199, 206, 207, 216, 239, 310, 319, 320, 332, 446], "magnitud": 11, "cdot": [11, 12, 15, 22, 23, 28, 37, 38, 40, 41, 43, 44, 48, 51, 58, 64, 66, 67, 78, 84, 86, 94, 96, 97, 98, 99, 100, 101, 102, 118, 127, 128, 132, 133, 134, 136, 137, 146, 320], "_point": 11, "origin": [11, 12, 15, 28, 36, 37, 41, 76, 77, 132, 133, 136, 137, 142, 145, 216, 239, 248, 256, 312, 320, 332, 446], "reinterpret": [11, 23, 27, 239, 446], "_data": 11, "_type": 11, "gpu": [11, 14, 15, 17, 21, 23, 26, 27, 28, 29, 41, 43, 44, 124, 129, 130, 131, 132, 134, 135, 136, 137, 143, 152, 153, 195, 211, 212, 215, 233, 249, 290, 301, 302, 330, 345, 346, 367, 484], "u8": [11, 12, 17, 20, 23, 26, 28, 29, 33, 37, 38, 41, 44, 64, 66, 67, 94, 127, 128, 132, 133, 134, 135, 136, 159, 170, 198, 201, 207, 209, 216, 301, 309, 312, 320, 323, 332], "s8": [11, 12, 15, 17, 20, 23, 26, 28, 33, 37, 38, 41, 44, 64, 66, 67, 94, 127, 128, 132, 133, 134, 135, 136, 159, 170, 201, 207, 209, 216, 227, 312, 320, 323, 332, 353], "1x1": [11, 239, 446], "seen": [11, 346], "model": [11, 14, 22, 23, 26, 27, 31, 33, 34, 36, 37, 38, 64, 94, 124, 134, 200, 202, 203, 206, 208, 209, 214, 229, 235, 290, 313, 314, 319, 322, 323, 324, 330, 357], "mobilenet_v1": 11, "stack": [11, 134], "opportun": 11, "dnnl_post_ops_append_dw": [11, 234, 239], "append_dw": [11, 446], "better": [11, 17, 19, 36, 140, 142, 256, 311, 320, 324, 330, 345, 346], "readabl": [11, 330, 364], "assum": [11, 12, 14, 19, 23, 40, 42, 58, 66, 67, 128, 130, 133, 142, 195, 205, 207, 210, 217, 220, 225, 229, 239, 242, 256, 262, 273, 297, 302, 317, 320, 322, 323, 324, 330, 331, 334, 341, 345, 346, 349, 357, 364, 440, 446], "2d": [11, 15, 23, 28, 38, 40, 43, 44, 84, 127, 128, 133, 135, 136, 142, 155, 172, 239, 245, 247, 258, 265, 330, 346, 360, 361, 382, 384, 386, 388, 390, 392, 442, 444, 446], "notat": [11, 13, 28, 44, 142, 155, 172], "conv_1x1": 11, "weight": [11, 13, 19, 21, 22, 23, 26, 35, 36, 37, 38, 40, 44, 58, 59, 60, 61, 62, 63, 84, 128, 132, 134, 140, 142, 143, 155, 161, 169, 172, 179, 180, 181, 182, 195, 200, 201, 202, 203, 205, 206, 208, 209, 216, 217, 220, 221, 222, 223, 225, 229, 239, 245, 247, 251, 255, 256, 259, 262, 266, 302, 311, 312, 313, 314, 317, 319, 322, 323, 332, 333, 334, 341, 343, 345, 346, 349, 357, 370, 372, 374, 376, 382, 383, 384, 386, 388, 389, 390, 392, 404, 406, 410, 411, 412, 414, 416, 418, 420, 422, 424, 426, 432, 434, 436, 446, 454, 457, 466, 481, 483], "spatial": [11, 13, 15, 22, 23, 38, 43, 48, 49, 58, 59, 60, 61, 62, 63, 76, 77, 86, 87, 127, 128, 133, 135, 142, 155, 172, 239, 245, 247, 256, 258, 265, 330, 382, 384, 386, 388, 390, 392, 402, 442, 444, 446, 463, 465], "kh": [11, 12, 22, 23, 38, 40, 48, 58, 59, 86, 127, 205, 222, 223, 224, 239, 317, 345, 346, 347, 446], "kw": [11, 12, 22, 23, 38, 40, 48, 58, 86, 127, 205, 222, 223, 224, 239, 317, 345, 346, 347, 446], "conv_dw": 11, "g": [11, 12, 13, 15, 18, 22, 23, 28, 36, 38, 41, 42, 58, 78, 79, 135, 141, 142, 172, 195, 205, 207, 209, 210, 220, 229, 239, 256, 302, 317, 320, 324, 330, 341, 357, 380, 400, 446, 454, 456, 461, 478], "oc": [11, 12, 22, 23, 38, 58, 199, 205, 206, 217, 222, 223, 234, 239, 310, 317, 319, 334, 345, 346, 446], "ic": [11, 12, 22, 23, 38, 58, 64, 94, 133, 136, 196, 197, 198, 199, 204, 205, 206, 213, 217, 219, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 239, 304, 306, 308, 310, 315, 317, 319, 328, 334, 339, 345, 346, 347, 349, 351, 353, 355, 358, 360, 362, 446], "pad_l": 11, "pad_r": 11, "conv_": [11, 12], "dw": [11, 22, 23, 48, 58, 59, 86, 127, 224, 347], "dst_": [11, 12, 28, 40, 64, 94], "n": [11, 12, 13, 15, 17, 21, 22, 23, 33, 37, 38, 41, 43, 44, 48, 50, 51, 53, 57, 58, 78, 79, 82, 84, 86, 118, 127, 128, 130, 132, 133, 135, 137, 138, 142, 143, 155, 172, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 239, 242, 244, 256, 271, 273, 292, 297, 302, 304, 306, 308, 310, 313, 315, 317, 319, 320, 323, 324, 326, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 446, 479, 486], "oc_": 11, "ceil": [11, 48, 86, 162, 163, 239, 446], "oh_": 11, "ow_": 11, "oh_conv_1x1": 11, "ow_conv_1x1": 11, "height": [11, 22, 23, 58, 59, 86, 87, 142, 155, 172, 196, 197, 198, 204, 205, 213, 217, 219, 224, 225, 226, 227, 228, 230, 232, 245, 247, 258, 304, 306, 308, 311, 315, 317, 328, 334, 339, 347, 349, 351, 353, 355, 358, 362, 382, 384, 386, 388, 390, 392, 442, 444], "width": [11, 22, 23, 58, 59, 86, 87, 142, 143, 155, 172, 196, 197, 198, 204, 205, 213, 217, 219, 224, 225, 226, 227, 228, 230, 232, 245, 247, 258, 304, 306, 308, 311, 315, 317, 328, 334, 339, 347, 349, 351, 353, 355, 358, 362, 382, 384, 386, 388, 390, 392, 442, 444], "conv": [11, 12, 23, 35, 126, 130, 141, 143, 199, 201, 202, 203, 206, 222, 223, 310, 312, 313, 314, 319, 345, 346], "dep": [11, 234, 272, 287, 294, 296], "s32": [11, 12, 23, 26, 28, 37, 38, 40, 44, 59, 60, 63, 66, 67, 76, 77, 96, 97, 98, 99, 100, 101, 102, 127, 128, 132, 133, 135, 159, 170, 207, 216, 320, 332], "though": [11, 13, 20, 36, 40, 134, 187, 188, 320, 324, 330], "convent": [11, 15, 17, 21, 23, 28, 33, 36, 38, 41, 43, 44, 45, 48, 55, 57, 58, 68, 71, 72, 74, 80, 81, 84, 86, 103, 107, 109, 111, 120, 127, 128, 132, 133, 134, 135, 136, 137, 142, 143, 256, 301, 330, 345, 365], "impli": [11, 117, 174, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 358, 360, 362], "part": [11, 12, 14, 19, 31, 34, 39, 126, 129, 256, 330, 345, 440], "dst_1x1": 11, "wei_dw": 11, "dst_dw": 11, "dnnl_format_tag_ani": [11, 127, 134, 155, 172, 199, 206, 241, 245, 247, 251, 256, 259, 262, 263, 265, 266, 310, 319], "coincid": [11, 142], "util": [11, 13, 25, 30, 125, 229, 238, 243, 331, 357], "lifetim": [11, 31, 124, 182, 239, 262], "through": [11, 31, 35, 37, 141, 229, 283, 312, 327, 330, 345, 357, 364, 402], "thu": [11, 44, 125, 229, 345, 357], "gain": [11, 35, 346], "expect": [11, 14, 15, 23, 34, 38, 40, 41, 43, 44, 127, 133, 145, 146, 173, 181, 182, 214, 215, 239, 330, 331, 345, 346, 380, 438, 454, 456, 461, 466, 478, 479], "dnnl_post_ops_append_binari": [11, 234, 239], "append_binari": [11, 198, 308, 446], "desc": [11, 12, 13, 14, 19, 24, 25, 26, 27, 30, 32, 35, 36, 42, 124, 126, 129, 130, 142, 143, 181, 182, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 256, 295, 296, 302, 304, 306, 308, 311, 312, 313, 314, 315, 317, 320, 322, 323, 324, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 442, 444, 446, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "src1": [11, 239, 378, 446], "second": [11, 22, 33, 40, 58, 93, 96, 97, 98, 99, 100, 101, 102, 155, 172, 181, 182, 229, 239, 256, 283, 327, 345, 357, 440, 446], "operand": [11, 33, 40, 239, 446], "_1": [11, 85, 88], "scenario": [11, 26, 27, 124, 125, 161, 169, 312], "per": [11, 17, 21, 23, 34, 38, 41, 44, 59, 61, 62, 63, 64, 66, 67, 78, 79, 93, 94, 125, 136, 200, 227, 256, 267, 320, 346, 353, 446, 484], "broadcast": [11, 17, 21, 44, 47, 53, 65, 84, 85, 88, 91, 116, 117, 119, 128, 132, 137, 239, 241, 446], "channel": [11, 15, 22, 23, 34, 37, 38, 41, 43, 51, 53, 54, 58, 59, 60, 61, 62, 63, 64, 66, 67, 78, 79, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 128, 134, 135, 136, 145, 146, 155, 172, 195, 196, 197, 198, 204, 205, 213, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 254, 256, 302, 304, 306, 308, 311, 315, 317, 328, 330, 334, 336, 339, 341, 345, 347, 349, 351, 353, 355, 357, 358, 359, 360, 362, 402, 446], "format_tag": [11, 12, 14, 17, 23, 35, 36, 38, 44, 128, 131, 133, 134, 142, 143, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 256, 292, 302, 304, 306, 308, 313, 314, 315, 317, 322, 323, 327, 328, 330, 331, 332, 333, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 382, 384, 386, 388, 390, 392, 404, 406, 410, 412, 414, 420, 422, 424, 426, 432, 434, 438, 440, 459, 465, 481, 483], "tag": [11, 12, 13, 23, 36, 38, 44, 127, 133, 136, 155, 172, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 213, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 256, 262, 302, 304, 306, 308, 311, 312, 313, 314, 315, 317, 327, 328, 330, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 440], "later": [11, 14, 18, 19, 36, 78, 142, 195, 196, 213, 220, 225, 302, 304, 328, 330, 341, 349], "mismatch": [11, 36, 214, 330], "suboptim": [11, 15, 23, 28, 41, 43, 256, 346, 438], "initi": [11, 14, 22, 24, 27, 36, 44, 125, 128, 134, 142, 147, 150, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 241, 245, 247, 251, 256, 257, 259, 263, 265, 266, 267, 272, 283, 284, 295, 296, 302, 304, 306, 308, 311, 313, 314, 315, 317, 319, 320, 322, 323, 324, 328, 330, 332, 334, 336, 341, 343, 349, 351, 353, 355, 358, 362, 370, 372, 382, 384, 386, 388, 390, 392, 404, 406, 410, 412, 414, 420, 422, 424, 426, 432, 434, 438, 459, 465, 481, 483], "get_params_binari": [11, 446], "dnnl_post_ops_append_prelu": [11, 234, 239], "append_prelu": [11, 446], "int": [11, 12, 28, 40, 130, 138, 142, 151, 154, 155, 178, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 239, 244, 256, 260, 262, 267, 268, 269, 271, 272, 273, 278, 279, 292, 293, 296, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 322, 323, 324, 326, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484], "mask": [11, 12, 23, 37, 38, 44, 125, 132, 201, 207, 210, 216, 234, 239, 312, 320, 324, 332, 446, 454, 479], "assumpt": [11, 22, 133, 332], "runtim": [11, 12, 15, 27, 41, 44, 50, 78, 124, 126, 132, 138, 143, 181, 182, 216, 238, 239, 262, 267, 272, 273, 275, 276, 287, 294, 297, 320, 330, 331, 332, 345, 346, 364, 446, 484], "dnnl_arg_attr_multiple_post_op": [11, 17, 23, 28, 38, 44, 127, 131, 133, 198, 234, 262, 308, 446], "dnnl_arg_weight": [11, 12, 23, 35, 38, 44, 128, 199, 200, 201, 202, 203, 205, 206, 207, 210, 216, 217, 221, 222, 223, 225, 234, 262, 310, 312, 313, 314, 317, 319, 320, 324, 332, 334, 343, 345, 346, 349, 446], "fp32": [11, 19, 26, 36], "plain": [11, 12, 21, 23, 38, 44, 132, 155, 172, 239, 256, 346, 446], "ab": [11, 22, 28, 33, 37, 38, 44, 46, 145, 146, 164, 172, 198, 216, 239, 308, 332, 440, 446], "acb": [11, 172, 239, 446], "acdb": [11, 22, 172, 239, 446], "acdeb": [11, 172, 239, 446], "between": [11, 12, 13, 14, 17, 18, 19, 27, 29, 31, 33, 34, 40, 48, 58, 86, 87, 105, 124, 125, 132, 140, 142, 161, 169, 187, 188, 199, 200, 202, 203, 206, 211, 212, 229, 239, 249, 256, 264, 283, 301, 310, 311, 313, 314, 319, 320, 324, 330, 345, 357, 367, 402, 440, 446, 454, 460], "th": [11, 37, 96, 97, 98, 99, 100, 101, 102, 239, 446, 454], "dedic": [11, 35, 239, 446, 454], "along": [11, 31, 44, 57, 66, 67, 96, 97, 98, 99, 100, 101, 102, 109, 126, 131, 135, 136, 141, 239, 256, 268, 358, 359, 360, 361, 446, 454, 468, 470], "common": [11, 12, 14, 31, 36, 125, 187, 188, 229, 238, 239, 261, 327, 330, 331, 357, 364, 446, 454], "whole": [11, 12, 128, 142, 229, 239, 357, 446, 454], "laid": [11, 14, 22, 142, 155, 172, 239, 256, 264, 330, 345, 446], "out": [11, 12, 14, 15, 22, 27, 31, 33, 43, 58, 59, 60, 61, 62, 63, 127, 130, 135, 142, 143, 155, 168, 172, 177, 178, 189, 190, 191, 192, 199, 206, 208, 213, 214, 225, 234, 239, 244, 256, 264, 271, 310, 319, 322, 323, 328, 330, 345, 349, 380, 446, 477], "cnn": [11, 15, 22, 23, 29, 36, 37, 38, 39, 41, 127, 135, 140, 155, 172, 200, 201, 202, 203, 239, 256, 301, 320, 330, 345, 446], "4d": [11, 38, 78, 79, 136, 142, 155, 172, 239, 256, 330, 446], "h": [11, 15, 17, 22, 23, 26, 38, 42, 43, 50, 51, 53, 127, 128, 132, 141, 142, 145, 149, 150, 151, 153, 154, 155, 157, 158, 163, 165, 167, 169, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 199, 200, 203, 206, 208, 209, 211, 214, 215, 222, 229, 233, 239, 256, 310, 314, 319, 326, 327, 330, 331, 345, 357, 364, 400, 401, 402, 446, 484], "w": [11, 15, 17, 22, 23, 37, 38, 43, 44, 50, 51, 53, 127, 128, 132, 134, 142, 151, 155, 159, 172, 199, 200, 202, 203, 206, 209, 214, 222, 223, 239, 256, 310, 313, 314, 319, 322, 323, 330, 345, 446], "let": [11, 12, 23, 35, 36, 38, 58, 59, 133, 142, 158, 160, 202, 203, 207, 222, 313, 314, 320, 327, 330, 331, 345, 346, 364], "consid": [11, 12, 13, 15, 21, 23, 26, 36, 40, 41, 137, 142, 174, 245, 247, 256, 258, 320, 327, 330, 407], "pattern": [11, 14, 34, 235], "pretti": [11, 330], "topologi": [11, 23, 35, 127, 135, 199, 200, 202, 203, 216, 229, 310, 311, 313, 314, 332, 345, 357], "resnet": [11, 33], "famili": [11, 40, 147, 150], "append_sum": [11, 210, 324, 446], "eltwise_relu": [11, 35, 146, 197, 200, 201, 202, 203, 205, 212, 213, 214, 215, 216, 217, 221, 223, 233, 306, 311, 312, 313, 314, 317, 327, 328, 330, 331, 332, 334, 343, 346, 364, 481, 483], "slope": [11, 15, 23, 80, 92, 93, 174, 201, 214, 266, 312, 330, 481, 483], "f": [11, 18, 22, 23, 111, 112, 131, 133, 134, 172, 195, 196, 197, 198, 201, 204, 205, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 239, 242, 273, 297, 302, 304, 306, 308, 312, 315, 317, 320, 323, 324, 328, 330, 332, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 358, 360, 362, 446, 454], "unus": [11, 266], "convolution_forward": [11, 12, 14, 23, 35, 126, 200, 201, 202, 203, 205, 222, 223, 245, 292, 311, 312, 313, 314, 317, 345, 346, 382, 384, 452], "conv_d": [11, 346, 446], "src": [11, 12, 15, 16, 18, 19, 21, 22, 23, 26, 28, 36, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 131, 132, 133, 135, 136, 137, 141, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 240, 248, 253, 302, 304, 306, 308, 310, 313, 314, 315, 316, 317, 319, 320, 322, 323, 328, 330, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 363, 376, 380, 410, 412, 414, 460, 461, 478], "hypothet": 11, "illustr": 11, "set_scales_mask": [11, 12, 44, 201, 207, 210, 216, 227, 312, 320, 321, 324, 325, 332, 333, 353, 454], "cover": [11, 12, 26, 36, 40, 142, 330, 345], "eltwise_tanh": [11, 146, 481, 483], "eltwise_linear": [11, 146], "linear": [11, 14, 28, 64, 66, 67, 76, 77, 94, 133, 142, 145, 146, 162, 163, 242, 248, 265, 331, 364, 438], "dnnl_arg_src": [11, 12, 15, 23, 28, 35, 38, 41, 43, 44, 127, 128, 131, 133, 135, 136, 196, 199, 200, 201, 202, 203, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 262, 272, 296, 304, 310, 311, 312, 313, 314, 317, 319, 320, 324, 326, 327, 328, 330, 331, 332, 334, 336, 339, 343, 345, 346, 347, 349, 351, 353, 355, 358, 360, 364, 400, 452, 460], "dnnl_arg_dst": [11, 12, 15, 17, 21, 23, 28, 35, 38, 41, 43, 44, 127, 128, 131, 133, 135, 136, 137, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 262, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 320, 324, 326, 327, 328, 330, 331, 332, 334, 336, 339, 343, 345, 346, 347, 349, 351, 353, 355, 358, 360, 362, 364], "s_": 11, "mobilenet": 11, "bia": [11, 12, 22, 23, 37, 38, 44, 53, 54, 58, 61, 78, 79, 84, 134, 146, 155, 172, 174, 179, 180, 195, 201, 202, 203, 205, 206, 217, 220, 221, 229, 239, 245, 247, 251, 255, 262, 266, 302, 311, 312, 313, 314, 317, 319, 334, 341, 343, 357, 370, 372, 384, 386, 390, 392, 404, 406, 412, 414, 420, 422, 424, 426, 432, 434, 436, 446, 457, 466, 481, 483], "pad": [11, 22, 23, 48, 49, 58, 59, 60, 61, 62, 63, 86, 87, 134, 142, 145, 146, 181, 182, 205, 209, 222, 223, 224, 229, 234, 239, 245, 247, 256, 258, 262, 311, 317, 322, 345, 346, 347, 357, 382, 384, 386, 388, 390, 392, 440, 442, 444, 446, 457], "dnnl_arg_attr_post_op_dw": [11, 23, 234, 262], "auto": [11, 12, 13, 23, 34, 35, 36, 40, 47, 65, 85, 88, 91, 116, 117, 119, 134, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 311, 312, 313, 314, 315, 317, 320, 322, 323, 324, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364], "cpd": 11, "dw_weight_md": 11, "exec_arg_md": [11, 181, 296, 452, 460], "dw_bias_md": 11, "dnnl_arg_bia": [11, 23, 38, 44, 134, 195, 199, 200, 201, 202, 203, 205, 206, 208, 209, 217, 220, 221, 229, 234, 262, 302, 310, 312, 313, 314, 317, 319, 322, 323, 334, 341, 343, 357], "behaviour": 11, "relu_": 11, "scales_": 11, "addit": [11, 14, 15, 17, 19, 22, 23, 24, 25, 26, 36, 38, 40, 44, 47, 59, 61, 62, 63, 84, 102, 125, 130, 174, 182, 195, 205, 217, 220, 225, 283, 302, 312, 317, 327, 330, 331, 334, 341, 345, 346, 349, 364], "conv_dst_md": [11, 199, 201, 202, 203, 205, 206, 222, 223, 310, 312, 313, 314, 317, 319, 345, 346], "mb": [11, 22, 130, 221, 239, 343, 446, 454], "nchw": [11, 15, 22, 23, 38, 43, 127, 133, 135, 172, 196, 197, 200, 201, 202, 203, 204, 205, 212, 213, 215, 217, 219, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 304, 306, 311, 312, 313, 314, 315, 317, 327, 328, 330, 331, 334, 339, 345, 346, 347, 349, 351, 353, 355, 358, 362, 364], "abcd": [11, 22, 143, 172, 230, 345, 346, 358], "binary_add": [11, 146, 198, 308], "src1_md": 11, "To": [11, 12, 19, 22, 23, 26, 27, 30, 31, 35, 36, 37, 40, 43, 58, 61, 124, 129, 130, 132, 133, 141, 209, 229, 322, 324, 327, 330, 331, 345, 357, 364], "argument": [11, 12, 35, 168, 181, 182, 189, 190, 195, 196, 197, 198, 202, 203, 204, 205, 213, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 239, 240, 253, 262, 266, 272, 283, 294, 296, 302, 304, 306, 308, 311, 313, 314, 315, 317, 322, 323, 328, 330, 331, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 358, 360, 362, 370, 372, 400, 404, 406, 420, 422, 424, 426, 432, 434, 440, 452, 454, 460, 481, 483], "unordered_map": [11, 195, 196, 197, 198, 200, 202, 203, 204, 205, 208, 209, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 296, 302, 304, 306, 308, 311, 313, 314, 315, 317, 322, 323, 328, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 358, 360, 362, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 441, 443, 446, 447, 449, 452, 458, 460, 462, 464, 467, 469, 471, 473, 477, 480, 482], "arg": [11, 12, 35, 199, 206, 234, 239, 262, 272, 296, 310, 319, 368, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 400, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 441, 443, 447, 449, 452, 454, 458, 460, 462, 464, 467, 469, 471, 473, 477, 480, 482], "insert": [11, 34, 84, 195, 196, 197, 198, 202, 203, 204, 205, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 302, 304, 306, 308, 313, 314, 315, 317, 328, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 358, 360, 362, 446], "conv_src_memori": [11, 199, 201, 202, 203, 206, 310, 312, 313, 314, 319], "binary_post_op_posit": [11, 17, 23, 28, 38, 44, 127, 131, 133], "hard": 11, "dnnl_arg_src_1": [11, 15, 17, 23, 28, 38, 44, 127, 131, 133, 197, 198, 234, 262, 306, 308], "parenthes": 11, "around": [11, 14, 20, 207, 320, 332, 345], "binary_post_op_src1_memori": 11, "either": [12, 14, 15, 17, 19, 21, 33, 36, 37, 40, 41, 44, 49, 50, 52, 59, 60, 63, 76, 77, 128, 131, 137, 140, 142, 145, 146, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 240, 253, 254, 256, 258, 265, 266, 269, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 428, 430, 440, 442, 444, 463, 465, 472, 474], "sign": [12, 26, 34, 37, 40, 151, 159, 170, 239, 242, 262, 273, 297, 312, 454], "unsign": [12, 26, 34, 40, 151, 159, 170, 182, 216, 234, 239, 240, 242, 253, 266, 267, 270, 273, 292, 297, 312, 332, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 454, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483, 484], "primari": 12, "goal": 12, "precis": [12, 20, 23, 26, 35, 37, 38, 40, 44, 122, 132, 140, 142, 151, 159, 170, 207, 210, 239, 242, 273, 297, 320, 321, 324, 440, 454], "compat": [12, 19, 37], "relat": [12, 15, 17, 19, 21, 23, 26, 28, 33, 41, 43, 127, 130, 131, 132, 133, 134, 135, 136, 137, 210, 322, 323, 324, 330, 331, 346, 364], "materi": 12, "lower": [12, 15, 22, 23, 26, 31, 37, 40, 55, 56, 125, 127, 128, 133, 142, 155], "deep": [12, 22, 23, 24, 26, 34, 35, 36, 40, 125, 141, 147, 150, 222, 284, 345], "annot": [12, 130, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 322, 323], "x_": [12, 37, 40, 320], "scale_": 12, "x": [12, 17, 22, 23, 40, 47, 65, 76, 77, 85, 88, 91, 119, 130, 132, 137, 142, 146, 172, 196, 199, 200, 201, 202, 203, 206, 215, 216, 218, 227, 234, 242, 273, 297, 304, 310, 311, 312, 313, 314, 319, 331, 332, 336, 353, 364], "zp_": 12, "factor": [12, 17, 21, 23, 35, 38, 40, 41, 44, 68, 69, 132, 133, 136, 181, 182, 201, 209, 232, 234, 239, 262, 265, 312, 320, 323, 332, 345, 362, 446, 454, 457, 463, 465], "int32": 12, "denot": [12, 22, 28, 33, 37, 40, 49, 59, 60, 63, 86, 87, 92, 93, 142, 143, 155, 172, 345], "elementwis": [12, 17, 146, 173, 239, 248, 345, 377, 378, 393, 394, 395, 396, 446], "formula": [12, 15, 23, 26, 28, 36, 38, 40, 41, 43, 45, 48, 50, 51, 55, 58, 59, 66, 67, 68, 71, 72, 74, 78, 80, 81, 84, 86, 89, 92, 103, 107, 109, 111, 120, 127, 128, 133, 134, 135, 136, 142, 145, 239, 266, 320, 432, 434, 454], "arrai": [12, 13, 37, 142, 181, 182, 207, 211, 212, 229, 232, 239, 242, 244, 245, 247, 256, 258, 262, 265, 271, 272, 273, 283, 297, 320, 326, 357, 362, 382, 384, 386, 388, 390, 392, 438, 442, 444], "best": [12, 19, 23, 24, 41, 44, 125, 128, 132, 143, 202, 203, 206, 223, 256, 311, 313, 314, 319, 332, 346], "those": [12, 19, 26, 28, 84, 125, 142, 143, 147, 150, 209, 320, 322, 346], "These": [12, 14, 19, 31, 32, 37, 40, 155, 172, 216, 330, 332, 345, 346], "ahead": 12, "time": [12, 13, 14, 15, 18, 19, 23, 35, 36, 38, 39, 40, 43, 44, 58, 59, 64, 91, 125, 126, 127, 133, 135, 136, 142, 145, 195, 200, 210, 214, 216, 218, 220, 229, 239, 252, 256, 257, 260, 262, 267, 272, 273, 278, 282, 283, 287, 302, 311, 312, 320, 324, 325, 327, 330, 332, 333, 336, 341, 346, 357, 454], "calibr": 12, "tool": [12, 39], "static": [12, 19, 34, 42, 44, 195, 196, 197, 198, 199, 204, 205, 206, 207, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 234, 302, 304, 306, 308, 310, 315, 317, 319, 320, 321, 328, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 358, 360, 362, 398, 399, 438, 479], "minimum": [12, 17, 19, 33, 100, 164, 320, 438], "dynam": [12, 26, 42, 44, 130, 207, 210, 296, 320, 321, 324, 452, 460], "method": [12, 35, 125, 133, 145, 146, 265, 283, 327, 330, 364, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 441, 443, 447, 449, 458, 462, 464, 467, 469, 471, 473, 477, 480, 482, 485], "conjuct": 12, "behav": [12, 39, 40, 134, 174], "dimension": [12, 22, 23, 31, 37, 44, 82, 142, 239, 288, 454], "reason": [12, 19, 22, 25, 40, 126, 142, 210, 239, 324, 345, 454], "subset": [12, 147, 150, 237, 242], "guid": [12, 19, 26, 130, 201, 202, 209, 240, 241, 244, 245, 248, 251, 253, 254, 255, 257, 258, 259, 263, 264, 265, 266, 268, 269, 271, 272, 313, 323], "appropri": [12, 17, 21, 23, 25, 38, 40, 44, 127, 128, 131, 137, 142, 207, 320, 330, 332], "convert": [12, 26, 28, 34, 37, 40, 64, 66, 67, 94, 105, 132, 140, 202, 207, 239, 249, 250, 262, 266, 295, 296, 313, 320, 346, 407, 438], "wider": [12, 26], "int16": 12, "overflow": [12, 20, 26, 33, 40, 209], "maintain": [12, 129, 140, 256, 440], "necessari": [12, 14, 19, 23, 24, 27, 34, 35, 36, 38, 124, 130, 132, 134, 142, 179, 180, 210, 222, 256, 262, 311, 324], "written": [12, 13, 40, 281], "satur": [12, 40, 132, 242, 273, 297], "underflow": [12, 37], "architectur": [12, 24, 40, 125, 130, 143, 242, 273, 290, 297, 345], "slightli": [12, 40, 320], "vari": [12, 40, 143], "singl": [12, 15, 17, 23, 26, 30, 34, 35, 37, 41, 96, 97, 98, 99, 100, 101, 102, 132, 134, 140, 142, 145, 146, 151, 159, 166, 167, 170, 239, 242, 256, 262, 273, 297, 312, 320, 330, 440, 446], "_op": [12, 131], "dequant": [12, 33, 34, 37, 66, 105, 132, 164, 201, 239, 312, 446], "achiev": [12, 23, 35, 37, 132, 134, 142, 312], "eltwis": [12, 15, 17, 19, 23, 36, 38, 44, 131, 133, 145, 146, 177, 238, 261, 301, 312, 327, 330, 346, 393, 394, 395, 396, 445, 446, 487], "dev_guide_attributes_post_ops_eltwis": 12, "binari": [12, 15, 19, 23, 28, 29, 31, 33, 38, 39, 44, 127, 131, 133, 145, 146, 173, 174, 177, 178, 198, 238, 239, 261, 262, 292, 301, 307, 309, 345, 380, 446, 452, 456, 461, 478, 487], "dev_guide_attributes_post_ops_binari": 12, "src_": [12, 26, 28, 40, 64, 66, 67, 94, 96, 97, 98, 99, 100, 101, 102], "weights_": [12, 26], "work": [12, 13, 14, 16, 17, 19, 21, 23, 27, 28, 32, 36, 37, 40, 41, 124, 125, 128, 130, 131, 132, 135, 136, 137, 140, 142, 210, 214, 229, 256, 320, 324, 330, 332, 345, 357, 438], "task": [12, 13, 27, 130], "form": [12, 22, 31, 35, 136, 142, 155, 172, 330], "12": [12, 37, 130, 155, 195, 218, 220, 302, 336, 341], "35": [12, 130], "36": 12, "zero_point": [12, 132, 234, 239, 446, 454], "zero_point_": 12, "mathemat": [12, 35, 36, 89, 92, 132, 134, 346], "_to": 12, "_int8": 12, "_f32": [12, 182], "comp_": 12, "_": [12, 15, 21, 22, 33, 40, 41, 50, 57, 66, 67, 78, 96, 97, 98, 99, 100, 101, 102, 133, 143, 239], "regular": [12, 30, 254, 330, 364, 428, 430], "chosen": [12, 14, 36, 132, 145, 146, 151, 154, 178, 202, 203, 206, 229, 256, 311, 312, 313, 314, 319, 330, 345, 357], "compens": [12, 21, 40, 209, 234, 323], "term": [12, 13, 22, 23, 125, 133, 134, 245, 247, 251, 255, 384, 386, 390, 392], "account": [12, 23, 128], "non": [12, 14, 15, 18, 21, 23, 26, 34, 35, 37, 40, 41, 48, 49, 58, 59, 60, 61, 62, 63, 68, 69, 76, 80, 86, 87, 125, 132, 134, 136, 142, 143, 145, 146, 151, 159, 170, 174, 202, 203, 216, 223, 256, 276, 277, 287, 294, 313, 314, 330, 332, 346], "pre": [12, 14, 44, 216, 332, 333], "_s8": 12, "potenti": [12, 23, 28, 40, 130, 162, 345, 440], "rang": [12, 20, 33, 35, 40, 57, 64, 66, 67, 94, 96, 97, 98, 99, 100, 101, 102, 118, 130, 140, 207, 233, 320, 364], "round": [12, 26, 28, 33, 37, 48, 64, 66, 67, 86, 94, 122, 142, 145, 146, 164], "signific": [12, 20, 36, 140, 142], "loss": [12, 23, 33, 35, 324], "re": [12, 17, 21, 40, 130, 198, 201, 202, 209, 308, 313, 320, 323, 332], "end": [12, 19, 28, 35, 45, 46, 66, 67, 68, 80, 92, 95, 103, 128, 130, 133, 134, 135, 138, 164, 195, 196, 197, 198, 200, 204, 205, 209, 213, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 315, 317, 322, 323, 328, 331, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364], "seem": [12, 130, 330], "imposs": [12, 40, 256, 440], "trick": [12, 40, 207, 320], "everi": [12, 13, 27, 28, 44, 45, 55, 68, 71, 72, 74, 80, 81, 103, 107, 109, 111, 120, 129, 130, 141, 142, 242, 273, 297, 330], "ih": [12, 22, 23, 38, 58, 133, 196, 197, 198, 199, 204, 205, 206, 213, 217, 219, 223, 224, 225, 226, 227, 228, 230, 232, 304, 306, 308, 310, 315, 317, 319, 328, 334, 339, 346, 347, 349, 351, 353, 355, 358, 362], "iw": [12, 22, 23, 38, 58, 133, 196, 197, 198, 199, 204, 205, 206, 213, 217, 219, 223, 224, 225, 226, 227, 228, 230, 232, 304, 306, 308, 310, 315, 317, 319, 328, 334, 339, 346, 347, 349, 351, 353, 355, 358, 362], "oh": [12, 22, 23, 48, 58, 86, 127, 133, 205, 223, 224, 228, 317, 346, 347, 355, 446], "ow": [12, 22, 23, 48, 58, 86, 127, 133, 205, 223, 224, 228, 317, 346, 347, 355, 446], "frac": [12, 15, 23, 28, 37, 40, 41, 43, 48, 50, 51, 58, 74, 78, 82, 90, 99, 107, 109, 127, 131, 133, 135, 136, 320], "respons": [12, 19, 20, 27, 31, 33, 40, 44, 124, 145, 146, 219, 254, 256, 257, 262, 295, 301, 330, 340, 345, 427, 429, 452, 487], "prepar": [12, 36, 40, 201, 207, 210, 223, 312, 320, 324, 346, 364], "wa": [12, 13, 28, 36, 41, 42, 126, 127, 129, 142, 168, 187, 188, 189, 190, 216, 224, 267, 273, 297, 332, 347], "long": [12, 19, 130, 134, 151, 154, 178, 187, 188], "fit": [12, 143, 229, 357], "everyth": [12, 330, 364], "fine": [12, 13, 346], "mind": 12, "tri": [12, 36], "minim": [12, 13, 18, 20, 26, 33, 35, 142], "yet": [12, 207, 210, 256, 320, 322, 323, 324], "power": [12, 95, 131, 290], "enough": [12, 13, 40, 281], "wai": [12, 13, 14, 21, 22, 23, 27, 35, 37, 40, 124, 125, 137, 140, 142, 178, 239, 264, 283, 345, 346, 364, 380, 438, 454, 456, 461, 478], "essenti": [12, 35, 36, 135, 320], "abil": [12, 24, 25, 27, 124, 330], "That": [12, 23, 117, 126, 129, 142, 330], "equat": [12, 28, 134], "_scale": 12, "standard": [12, 15, 17, 18, 19, 20, 21, 22, 23, 26, 28, 38, 41, 42, 43, 44, 45, 48, 55, 57, 58, 68, 71, 72, 74, 80, 81, 84, 86, 103, 107, 109, 111, 120, 127, 128, 132, 133, 134, 135, 136, 137, 151, 159, 170, 242, 273, 297], "downconvert": 12, "hw": [12, 26, 130, 142], "mxcsr": [12, 37], "regist": [12, 19, 25, 37, 148, 149, 338], "dnnl_primitive_attr_set_scales_mask": [12, 234, 239, 454], "simplest": [12, 239, 320, 364, 446], "sever": [12, 14, 19, 21, 23, 28, 42, 141, 142], "sai": [12, 33], "d_0": [12, 37], "d_": [12, 37], "d_i": [12, 37], "le": 12, "Then": [12, 38, 117, 142, 331, 346, 364], "sum": [12, 13, 15, 17, 19, 21, 23, 38, 40, 41, 43, 44, 48, 50, 78, 96, 97, 99, 102, 127, 131, 132, 133, 134, 136, 143, 145, 146, 177, 178, 226, 227, 238, 239, 261, 263, 292, 301, 345, 351, 353, 363, 446, 452, 487], "limits_": [12, 15, 40, 41, 43, 48, 50, 78, 86, 96, 97, 99, 101, 102, 127, 131, 136, 137, 239, 454], "prod": [12, 101, 199, 206, 239, 310, 319, 454], "wei_plain_f32_md": 12, "hwigo": [12, 172], "wei_scal": 12, "conv_pd": [12, 126, 199, 202, 203, 205, 206, 222, 223, 310, 313, 314, 317, 319, 345, 346, 446], "next": [12, 26, 142, 202, 203, 223, 229, 262, 310, 311, 312, 313, 314, 322, 323, 330, 331, 345, 346, 357, 364, 456], "wei_conv_s8_md": 12, "weights_desc": [12, 195, 200, 201, 202, 203, 205, 216, 217, 220, 222, 223, 225, 234, 245, 247, 251, 255, 259, 302, 311, 312, 313, 314, 317, 332, 334, 341, 345, 346, 349, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "quantization_mask": 12, "wei_s8": 12, "wei_f32": [12, 143, 345, 346], "wei_reorder_pd": 12, "wei_reord": 12, "complementari": 12, "ideal": [12, 40], "first": [12, 22, 23, 24, 25, 28, 33, 37, 38, 40, 44, 58, 126, 134, 142, 143, 155, 172, 208, 209, 256, 267, 283, 320, 322, 323, 327, 330, 331, 346, 364, 402, 440], "src_scale": [12, 201, 312], "src_f32": [12, 143, 345, 346], "src_s8": 12, "dst_scale": [12, 201, 312], "dst_f32": [12, 143, 345, 346], "dst_s8": 12, "declar": [12, 208, 209, 322, 323], "chose": [12, 202, 203, 206, 256, 313, 314, 319], "src_conv_s8_any_md": 12, "batch": [12, 22, 23, 30, 35, 36, 44, 50, 51, 58, 84, 130, 136, 142, 155, 172, 177, 178, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 238, 255, 256, 261, 301, 302, 305, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 322, 323, 328, 330, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 373, 374, 375, 376, 402, 487], "wei_conv_s8_any_md": 12, "dst_conv_s8_any_md": 12, "ditto": 12, "data_mask": 12, "wei_mask": 12, "set_zero_points_mask": [12, 44, 207, 216, 320, 321, 332, 333, 454], "prop_kind": [12, 23, 35, 36, 38, 143, 173, 174, 181, 195, 196, 200, 201, 202, 203, 205, 208, 209, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 228, 229, 230, 231, 233, 234, 239, 240, 245, 247, 248, 251, 253, 254, 258, 259, 265, 266, 268, 269, 292, 302, 304, 311, 312, 313, 314, 317, 322, 323, 327, 328, 330, 331, 334, 336, 339, 341, 345, 346, 347, 349, 355, 357, 358, 360, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "forward_infer": [12, 23, 35, 36, 38, 143, 179, 200, 208, 209, 214, 222, 223, 229, 311, 322, 323, 330, 345, 346, 357, 372, 376, 386, 392, 396, 406, 414, 418, 422, 426, 430, 434, 444, 450, 465, 470, 474, 483], "convolution_direct": [12, 143, 146, 200, 201, 202, 203, 205, 223, 311, 312, 313, 314, 317, 345, 346, 382, 384, 386, 388], "padding_l": [12, 23, 181, 234, 245, 247, 258, 382, 384, 386, 388, 390, 392, 442, 444], "padding_r": [12, 23, 181, 234, 245, 247, 258, 382, 384, 386, 388, 390, 392, 442, 444], "padding_kind": 12, "flow": [12, 211, 212, 326, 327], "independ": [13, 19, 40, 41, 44, 84, 134, 136, 142], "core": [13, 147, 150, 338, 346], "system": [13, 14, 18, 19, 23, 26, 39, 40, 42, 125, 126, 130, 134, 135, 142, 143, 249], "parallel": [13, 187, 188, 273, 479], "reduct": [13, 19, 20, 33, 96, 97, 98, 99, 100, 101, 102, 145, 146, 177, 178, 181, 182, 238, 261, 292, 301, 352, 452, 457, 487], "k": [13, 43, 44, 84, 181, 182, 199, 202, 203, 206, 207, 208, 209, 210, 216, 219, 221, 234, 242, 254, 273, 292, 297, 310, 313, 314, 319, 320, 324, 332, 339, 343, 428, 430, 457, 486], "gemm": [13, 19, 23, 40, 142, 208, 209, 323, 346], "partial": [13, 15, 24, 41, 267, 332, 345], "privat": [13, 138, 187, 188, 311], "produc": [13, 15, 23, 28, 31, 32, 33, 36, 38, 39, 80, 136, 143, 256, 262, 267, 320, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 442, 443, 444, 447, 448, 449, 450, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 480, 481, 482, 483], "matrix": [13, 22, 23, 24, 26, 40, 84, 134, 142, 177, 178, 207, 208, 209, 210, 216, 221, 238, 242, 261, 273, 297, 320, 321, 324, 332, 343, 345, 435, 436, 487], "im2col": 13, "longer": [13, 182], "complet": [13, 16, 20, 123, 130, 214, 222, 223, 237, 256, 267, 327, 330, 331, 345, 364, 438], "confus": [13, 36], "workspac": [13, 15, 22, 23, 43, 127, 134, 173, 174, 181, 182, 195, 196, 199, 202, 203, 206, 219, 220, 224, 229, 240, 262, 302, 304, 310, 311, 313, 314, 319, 339, 341, 347, 357, 370, 372, 374, 376, 404, 406, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 442, 444, 457, 481, 483], "amount": [13, 19, 23, 58, 59, 60, 61, 62, 63, 143, 174, 246, 256], "space": [13, 14, 19, 142, 143, 199, 206, 246, 281, 310, 319, 438], "direct": [13, 22, 36, 47, 65, 85, 88, 91, 116, 119, 134, 141, 145, 146, 181, 182, 183, 184, 195, 220, 229, 234, 256, 266, 302, 341, 357, 370, 372, 404, 406, 407, 420, 422, 424, 426, 432, 434, 438, 452, 456, 457, 466, 481, 483], "too": [13, 210, 267, 324], "few": [13, 23, 35, 38, 134, 262, 313, 314, 319], "proport": 13, "imag": [13, 22, 33, 35, 48, 127, 142, 214, 330], "diff_weight": [13, 22, 36, 60, 63, 128, 202, 203, 229, 259, 313, 314, 357], "group": [13, 22, 31, 37, 59, 60, 61, 62, 63, 130, 135, 142, 155, 162, 163, 172, 181, 182, 205, 230, 256, 268, 317, 318, 358, 457, 468, 470], "upper": [13, 22, 55, 56, 129, 142, 155, 267], "total": [13, 59, 125, 130, 229, 357], "By": [13, 14, 19, 31, 35, 279], "contrast": 13, "littl": [13, 207, 320], "sizeof": [13, 142, 151, 154, 178, 199, 206, 211, 215, 223, 310, 319, 326, 331], "summand": 13, "scratchpad_mod": [13, 19, 239, 292, 454], "worri": 13, "onednn_enable_concurrent_exec": [13, 19], "cmake": [13, 18, 19, 24, 25, 30, 32, 126, 129, 130, 141, 143], "off": [13, 19, 24, 25, 32, 129, 130, 143, 187, 188, 214, 267, 330], "across": [13, 19, 23, 36, 37, 41, 43, 44, 134, 145, 146, 229, 254, 357], "level": [13, 31, 32, 126, 129, 130, 143, 234, 256, 267, 292], "freed": 13, "referenc": 13, "segment": 13, "fault": 13, "you": [13, 14, 15, 18, 19, 23, 27, 33, 35, 36, 38, 40, 41, 42, 61, 130, 134, 136, 141, 142, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362], "ON": [13, 18, 19, 24, 25, 30, 32, 129, 130, 143, 187, 188], "own": [13, 14, 27, 35, 124, 125, 256, 257, 262, 272, 295, 296, 330, 438, 479], "larger": [13, 187, 188, 229, 357], "concurr": [13, 27, 187, 188, 260, 273, 278], "suffici": 13, "dnnl_arg_scratchpad": [13, 234, 262], "reus": [13, 14, 23, 35, 36, 44, 134, 142, 229, 357], "make": [13, 14, 18, 19, 25, 32, 36, 40, 42, 44, 84, 123, 125, 142, 155, 172, 182, 248, 256, 281, 440, 445], "safe": [13, 14, 28, 125, 126, 142, 187, 188, 214, 260, 278, 330, 438], "good": [13, 35, 44, 142, 320, 330], "speed": [13, 19, 35, 126, 219, 339], "side": [13, 23, 84, 256, 438], "control": [13, 15, 18, 23, 26, 41, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 76, 77, 84, 86, 87, 117, 125, 239, 240, 253, 260, 267, 278, 279, 366, 476], "dnnl_primitive_attr_set_scratchpad_mod": [13, 234, 239], "set_scratchpad_mod": [13, 454], "highlight": [13, 36], "consum": [13, 31, 33, 229, 256, 357], "due": [13, 22, 36, 40, 168, 189, 190, 210, 320, 324, 440], "print": [13, 143], "much": [13, 14, 40, 143, 210, 324, 331, 364], "hold": [13, 28, 44, 96, 97, 98, 99, 100, 101, 102, 207, 209, 229, 239, 311, 320, 322, 330, 345, 357, 454], "cout": [13, 200, 208, 209, 214, 215, 223, 233, 330, 331, 364], "query_s64": [13, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "memory_consumption_s64": [13, 181], "endl": [13, 200, 208, 209, 214, 215, 233, 330, 331, 364], "visibl": 13, "zero_md": 13, "scratchpad_desc": [13, 222, 345, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_scratchpad_mod": [13, 454], "custom": [13, 18, 19, 27, 31, 142], "scratchpad_md": [13, 181], "prim": [13, 199, 206, 223, 310, 319, 346], "get_siz": [13, 36, 142, 208, 209, 223, 256, 295, 322, 323, 438, 440], "scratchpad_ptr": 13, "nullptr": [13, 142, 215, 257, 262, 279, 295, 331, 407], "user_memory_manag": 13, "outlin": [14, 36, 125], "program": [14, 16, 18, 23, 27, 31, 38, 40, 124, 134, 211, 212, 214, 215, 235, 290, 324, 326, 327, 330, 331, 346, 364], "present": [14, 84, 126, 134, 345], "kei": [14, 15, 17, 21, 23, 31, 36, 38, 41, 42, 44, 126, 132, 134, 135, 136, 137, 302, 303, 304, 305, 306, 307, 308, 310, 311, 315, 316, 317, 318, 330, 334, 335, 336, 337, 341, 342, 343, 344, 353, 354, 358, 359, 360, 361, 362, 363], "discuss": [14, 35, 36, 125, 256, 330], "essenc": 14, "process": [14, 33, 34, 35, 36, 40, 125, 129, 130, 134, 142, 229, 320, 345, 357], "context": [14, 27, 126, 155, 172, 208, 209, 234, 256, 257, 270, 272, 287, 294, 295, 296, 322, 323, 327, 330, 331, 364, 440], "relationship": [14, 31], "entiti": [14, 31, 262], "briefli": 14, "figur": [14, 134], "relev": [14, 36, 229, 346, 357], "built": [14, 16, 18, 19, 30, 42, 138, 141, 273, 297, 345, 346], "notion": [14, 17, 21, 36, 131, 137, 345], "encapsul": [14, 257, 270, 284, 288, 295, 327, 330, 331, 364, 438], "lstm": [14, 40, 145, 146, 155, 172, 209, 229, 262, 266, 301, 323, 342, 357, 431, 432, 433, 434], "addition": [14, 23, 40, 44, 84, 125, 140, 202, 313, 345, 346], "complex": [14, 23], "pure": 14, "state": [14, 22, 36, 40, 134, 155, 172, 209, 229, 256, 262, 266, 281, 322, 323, 338, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "One": [14, 23, 27, 105, 140, 142], "immut": [14, 31], "approach": [14, 36, 125, 142, 256, 312, 320, 345], "tailor": 14, "amort": 14, "mutabl": [14, 283], "devic": [14, 19, 26, 27, 124, 126, 175, 176, 193, 194, 234, 249, 257, 272, 287, 294, 295, 296, 327, 330, 331, 364], "card": [14, 249], "transfer": [14, 207, 249, 320], "ti": [14, 270, 327, 330, 331, 364], "opencl": [14, 18, 29, 126, 215, 238, 252, 256, 267, 295, 301, 330, 338, 367, 438], "command": [14, 18, 42, 125, 130, 257, 272, 331, 346], "queue": [14, 27, 233, 234, 257, 272, 295, 296, 331, 364], "map": [14, 15, 17, 21, 23, 27, 28, 35, 38, 41, 43, 44, 64, 66, 67, 94, 123, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 214, 256, 267, 294, 296, 320, 327, 330, 331, 380, 438, 452, 456, 460, 461, 478], "offset": [14, 64, 66, 67, 94, 142, 181, 182, 207, 214, 229, 234, 242, 256, 273, 297, 320, 330, 357, 438, 440], "conceptu": [14, 40], "expos": [14, 15, 41, 125], "flexibl": [14, 140, 142, 324], "dnnl_memory_desc_t": [14, 141, 142, 155, 199, 206, 211, 234, 256, 262, 310, 319, 326, 440], "special": [14, 17, 21, 26, 27, 28, 31, 40, 44, 53, 124, 128, 131, 132, 135, 136, 137, 142, 154, 171, 210, 256, 257, 262, 272, 277, 295, 296, 324, 438], "construct": [14, 27, 31, 32, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 229, 256, 257, 272, 281, 294, 295, 296, 297, 331, 357, 364, 456, 485], "variou": [14, 126, 256, 262], "via": [14, 15, 17, 19, 24, 25, 28, 34, 67, 117, 125, 126, 127, 129, 142, 143, 198, 223, 229, 256, 267, 281, 285, 296, 304, 305, 308, 309, 312, 327, 330, 331, 345, 357, 364, 438, 446, 452, 454, 460], "instanti": 14, "iter": [14, 129, 134, 161, 169, 200, 202, 203, 206, 208, 209, 229, 313, 314, 319, 322, 323, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 456, 466, 481, 483], "prefer": [14, 19, 20, 25, 148, 149, 202, 203, 206, 229, 313, 314, 319, 357], "concret": 14, "embodi": 14, "There": [14, 15, 17, 19, 20, 21, 23, 28, 35, 37, 38, 43, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 141, 229, 239, 256, 327, 331, 346, 357, 364, 454, 457], "extract": [14, 331, 364], "submemory_desc": [14, 208, 209, 229, 322, 323, 357, 440], "src_desc": [14, 35, 200, 201, 202, 203, 205, 222, 223, 234, 240, 244, 245, 247, 248, 251, 253, 254, 255, 258, 259, 263, 264, 265, 268, 269, 271, 311, 312, 313, 314, 317, 345, 346, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "action": [14, 36], "placehold": [14, 23, 38, 44, 134, 172, 222, 345], "obtain": [14, 19, 36, 37, 40, 126, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 256, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 358, 360, 362, 461], "high": [14, 20, 37, 143, 245, 247, 258, 382, 384, 386, 388, 390, 392, 442, 444], "instead": [14, 17, 18, 19, 22, 23, 28, 33, 38, 40, 42, 44, 131, 132, 133, 142, 229, 239, 242, 266, 273, 297, 311, 330, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 446, 481, 483], "individu": [14, 26, 28, 30, 125, 242, 246, 273, 297, 311], "transpar": 14, "effort": 14, "backend": [14, 19, 105], "awar": [14, 25, 330], "scalabl": [14, 40, 147, 150], "benefit": [14, 19, 35, 129, 248], "show": [15, 23, 37, 38, 41, 127, 128, 133, 140, 142, 324, 330], "straightforward": [15, 23, 41, 127, 128, 133, 330], "gamma": [15, 23, 41, 50, 51, 52, 78, 79, 240, 253], "mu": [15, 41, 50, 51, 78, 79], "sqrt": [15, 28, 33, 41, 51, 78, 97, 114, 164, 207, 210, 320, 324], "sigma": [15, 41, 50, 51, 52, 78, 79, 134], "varepsilon": [15, 41, 51], "dnnl_use_scal": [15, 41, 173, 174], "dnnl_use_shift": [15, 41, 173, 174], "dnnl_use_global_stat": [15, 41, 173, 174], "constant": [15, 35, 41, 51, 78, 79, 80, 117, 161, 169, 174, 182, 238, 239, 256, 262, 267, 270, 275, 276, 277, 281, 284, 285, 288, 440, 454], "stabil": [15, 28, 41, 51, 78, 79], "nhw": [15, 50], "learnabl": [15, 22, 36, 41, 78, 79], "dnnl_fuse_norm_relu": [15, 173, 174], "dnnl_fuse_norm_add_relu": [15, 173, 174], "popul": [15, 134], "sampl": [15, 37, 127, 130, 138, 331, 364], "unbias": 15, "version": [15, 18, 19, 20, 35, 42, 126, 141, 143, 145, 146, 155, 172, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262, 267, 292, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 380, 478, 484], "hat": 15, "becom": [15, 41, 141, 155, 172, 346], "dnnl_forward_train": [15, 23, 28, 41, 127, 128, 133, 135, 136, 179, 180, 240, 245, 247, 248, 251, 253, 254, 258, 259, 265, 266, 268, 269], "dnnl_forward_infer": [15, 23, 28, 41, 127, 128, 133, 135, 136, 179, 180, 240, 245, 247, 248, 251, 253, 254, 258, 259, 265, 266, 268, 269], "diffsrc": [15, 22, 23, 28, 38, 41, 43, 49, 59, 62, 79, 87, 127, 128, 133, 135, 136], "diffgamma": [15, 41, 79], "diffbeta": [15, 41, 79], "diffdst": [15, 22, 23, 28, 38, 41, 43, 49, 54, 59, 60, 62, 63, 79, 87, 127, 128, 133, 135, 136], "mark": [15, 33, 40, 41, 79, 142], "asterisk": [15, 41, 79], "clariti": [15, 41], "summari": [15, 41, 130, 345], "shown": [15, 20, 36, 40, 41, 125, 130, 134, 135, 142, 330, 346], "dnnl_backward": [15, 41, 174, 179, 180, 240, 253, 266], "dnnl_backward_data": [15, 41, 174, 179, 180, 240, 253], "dnnl_normalization_flags_non": [15, 41, 173, 174], "Not": [15, 20, 41, 130], "src_1": [15, 17, 47, 65, 85, 88, 91, 116, 119, 197, 306], "diff_src_1": 15, "tabl": [15, 17, 20, 21, 22, 23, 26, 27, 28, 38, 41, 43, 44, 124, 127, 128, 131, 132, 133, 134, 135, 136, 137, 182], "dnnl_arg_scal": [15, 41, 196, 218, 234, 262, 304, 336], "dnnl_arg_shift": [15, 41, 196, 218, 234, 262, 304, 336], "dnnl_arg_mean": [15, 41, 196, 218, 234, 262, 304, 336], "dnnl_arg_vari": [15, 41, 196, 218, 234, 262, 304, 336], "dnnl_arg_workspac": [15, 36, 43, 127, 195, 196, 199, 202, 203, 206, 219, 220, 224, 229, 234, 262, 302, 304, 310, 313, 314, 319, 339, 341, 347, 357], "dnnl_arg_diff_dst": [15, 23, 28, 38, 41, 43, 127, 128, 133, 135, 136, 202, 203, 206, 234, 262, 313, 314, 319], "dnnl_arg_diff_src": [15, 23, 28, 38, 41, 43, 127, 128, 133, 135, 136, 202, 203, 206, 234, 262, 313, 314, 319], "dnnl_arg_diff_src_1": [15, 234, 262], "dnnl_arg_diff_scal": [15, 41, 234, 262], "dnnl_arg_diff_shift": [15, 41, 234, 262], "flavor": [15, 41, 330], "batch_normalization_forward": [15, 196, 240, 292, 304, 374, 452], "bitwis": [15, 41, 191], "OR": [15, 41, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "latter": [15, 19, 22, 27, 36, 40, 41, 42, 124, 140, 256, 310, 311, 456], "overwritten": [15, 17, 28, 41, 136], "dst_desc": [15, 35, 200, 201, 202, 203, 204, 205, 222, 223, 232, 234, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 258, 259, 263, 264, 265, 268, 269, 271, 311, 313, 314, 315, 317, 345, 346, 362, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "diff_dst_desc": [15, 202, 203, 234, 240, 245, 247, 248, 251, 253, 254, 258, 259, 265, 268, 269, 313, 314, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "even": [15, 26, 36, 40, 122, 125, 134, 142, 248, 330], "combin": [15, 17, 23, 28, 32, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 130, 132, 133, 134, 135, 136, 191, 256, 327, 330, 440, 445], "mea": [15, 132], "restrict": [15, 17, 23, 24, 25, 28, 38, 41, 43, 44, 53, 127, 131, 133, 134, 135, 136, 246, 267], "1d": [15, 23, 27, 38, 41, 43, 53, 66, 67, 76, 77, 78, 79, 84, 92, 93, 96, 97, 98, 99, 100, 101, 102, 127, 133, 142, 155, 172, 245, 247, 265, 330], "dnnl_x": [15, 155, 199, 206, 310, 319], "dnnl_a": [15, 155, 172], "dnnl_nc": [15, 38, 41, 155], "dnnl_ab": [15, 38, 41, 136, 155, 172, 256], "sp_n": 15, "sp_0": 15, "imp": [15, 23, 38, 41, 43], "0d": [15, 38, 43, 330], "nc": [15, 38, 41, 172, 200, 217, 231, 334, 360], "ncw": [15, 23, 38, 127, 172], "dnnl_ncw": [15, 23, 38, 127, 155], "dnnl_abc": [15, 23, 38, 41, 127, 155, 172], "dnnl_nwc": [15, 23, 38, 127, 155], "dnnl_acb": [15, 23, 38, 127, 155, 172], "dnnl_nchw": [15, 21, 23, 38, 43, 127, 135, 142, 155, 199, 206, 211, 256, 310, 319, 326], "dnnl_abcd": [15, 23, 38, 41, 43, 127, 135, 136, 155, 172], "dnnl_nhwc": [15, 21, 23, 38, 43, 127, 135, 142, 155, 256], "dnnl_acdb": [15, 23, 38, 43, 127, 135, 136, 155, 172], "3d": [15, 23, 38, 41, 43, 44, 78, 79, 127, 128, 133, 135, 142, 155, 172, 245, 247, 255, 258, 265, 330, 382, 384, 386, 388, 390, 392, 442, 444], "ncdhw": [15, 23, 38, 127, 135, 155, 172], "dnnl_ncdhw": [15, 23, 38, 127, 135, 155], "dnnl_ndhwc": [15, 23, 38, 127, 135, 155], "dnnl_acdeb": [15, 23, 38, 127, 135, 155, 172], "come": [15, 28, 36, 37, 42, 43, 125, 127, 135, 155, 172, 187, 188, 216, 229, 330, 332, 357], "intens": [15, 26, 35, 43, 125, 127, 135, 256, 330, 345, 346], "chain": [15, 23, 33, 36, 37, 38, 40, 239, 346, 445], "de": [15, 17, 32, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 76, 77, 78, 79, 84, 85, 86, 87, 88, 91, 94, 96, 97, 98, 99, 100, 101, 102, 117, 118, 119, 345], "dnnl_eltwise_relu": [15, 28, 145, 146, 199, 206, 211, 266, 310, 319, 326], "correctli": [15, 23, 130, 267, 330, 345], "diff_dst": [15, 22, 36, 43, 46, 49, 52, 54, 56, 59, 60, 62, 63, 65, 69, 73, 75, 77, 79, 83, 87, 90, 93, 104, 108, 110, 112, 114, 121, 128, 136, 202, 203, 206, 240, 248, 253, 313, 314, 319], "diff_src": [15, 22, 36, 43, 46, 49, 52, 56, 59, 62, 69, 73, 75, 77, 79, 83, 87, 90, 93, 104, 108, 110, 112, 114, 121, 127, 128, 133, 136, 202, 203, 206, 229, 240, 248, 253, 313, 314, 319, 357], "highli": [15, 21, 28, 41, 43, 137, 324], "whenev": [15, 17, 21, 28, 36, 41, 131, 136, 137, 142, 239, 330], "caveat": [15, 28, 41, 137], "statist": [15, 41, 143, 155, 172, 173, 174, 320, 416, 418], "calcul": [15, 30, 35, 37, 48, 49, 50, 52, 56, 58, 59, 60, 61, 62, 63, 69, 76, 77, 82, 83, 86, 87, 96, 97, 98, 99, 100, 101, 102, 104, 108, 109, 110, 114, 117, 121, 127, 128, 143, 145, 146, 209, 283, 312], "pleas": [15, 19, 35, 44, 105, 130, 143, 201, 202, 209, 283, 313, 323, 345], "review": [15, 345], "demonstr": [15, 17, 21, 23, 28, 35, 38, 41, 43, 44, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 199, 200, 201, 202, 203, 204, 206, 208, 209, 211, 212, 213, 214, 215, 222, 223, 225, 229, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "benchdnn": [16, 125, 130, 143], "descript": [16, 17, 18, 21, 23, 28, 33, 35, 38, 41, 43, 44, 127, 130, 131, 133, 134, 136, 142, 143, 172, 246, 256, 288, 322, 323, 330, 345, 346], "oneapi": [16, 19, 42, 138, 141, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 302, 304, 306, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 331, 332, 334, 336, 339, 341, 343, 347, 351, 353, 355, 357, 358, 360, 362, 364], "readm": 16, "overlin": [17, 21, 23, 28, 47, 57, 65, 85, 88, 91, 119, 132, 135, 136, 137], "src_0": [17, 47, 65, 85, 88, 91, 119, 137, 197, 306], "mathbin": [17, 47, 65], "subtract": [17, 33, 40, 116, 164, 239, 446], "divis": [17, 22, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 132, 198, 308], "greater": [17, 36, 40, 55, 56, 133, 145, 146], "dnnl_arg_src_0": [17, 197, 198, 234, 262, 306, 308], "text": [17, 23, 28, 38, 44, 45, 46, 68, 80, 92, 95, 103, 127, 131, 133, 142, 364], "scale0": 17, "dnnl_arg_attr_scal": [17, 23, 38, 41, 44, 132, 136, 201, 207, 210, 216, 227, 234, 239, 262, 312, 320, 324, 332, 353, 454], "scale1": 17, "semant": [17, 22, 34, 40, 44, 84, 92, 93, 124, 128, 239, 267, 330, 407, 446, 484], "recommend": [17, 21, 33, 35, 36, 40, 44, 125, 128, 131, 137, 345, 346], "match": [17, 21, 31, 35, 36, 47, 57, 65, 76, 84, 85, 88, 91, 119, 128, 132, 137, 225, 256, 296, 346, 349, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 452, 459, 460, 461, 463, 465, 468, 470, 472, 474, 478, 481, 483], "syntax": [17, 35], "d": [17, 22, 23, 28, 38, 39, 43, 44, 45, 48, 53, 55, 57, 64, 68, 71, 72, 74, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 111, 113, 115, 120, 122, 127, 128, 136, 142, 155, 172, 195, 207, 211, 220, 229, 239, 256, 302, 320, 326, 330, 341, 357, 454], "nxcxdxhxw": 17, "pytorch": [17, 93], "explicitli": [17, 19, 20, 23, 33, 34, 125, 131, 134, 281, 283, 330], "deriv": [17, 21, 127, 131, 137, 173, 174, 239, 253, 380, 446, 478], "ones": [17, 40, 133, 141, 142, 195, 205, 220, 256, 302, 317, 324, 341, 440], "unavoid": 17, "correct": [17, 142, 166, 167, 216, 327, 330, 332], "issu": [17, 27, 36, 40, 130, 166, 167, 210, 324], "arbitrari": [17, 21, 28, 41, 55, 56, 68, 69, 78, 79, 80, 82, 83, 109, 110, 111, 112, 123, 128, 131, 132, 133, 135, 136, 137, 142, 209, 210, 244, 312, 323, 324, 332], "6": [17, 21, 23, 28, 37, 41, 44, 74, 90, 130, 131, 132, 135, 136, 137, 142, 151, 190, 195, 198, 200, 220, 302, 308, 341], "fewer": [17, 21, 28, 34, 41, 131, 132, 135, 136, 137], "bnorm": [17, 29, 198, 301, 309], "postop": [17, 309, 312], "clone": [18, 239, 256, 262, 380, 456, 461, 478], "repositori": [18, 19], "git": [18, 126, 143, 267, 345, 484], "http": [18, 42, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "github": [18, 19, 207, 320], "com": [18, 42], "ensur": [18, 19, 20, 24, 36, 124, 256, 331, 345, 364, 440], "softwar": [18, 39, 40, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "cmake_install_prefix": 18, "locat": [18, 19, 36, 42, 142, 256, 264, 267, 288, 457, 461], "cmake_build_typ": 18, "select": [18, 19, 30, 37, 154, 155, 171, 172, 346], "releas": [18, 19, 124, 267], "relwithdebinfo": 18, "cmake_prefix_path": 18, "directori": [18, 42, 130, 267], "search": 18, "up": [18, 19, 26, 40, 44, 126, 127, 128, 130, 142, 196, 197, 199, 206, 211, 218, 219, 224, 231, 262, 283, 304, 306, 310, 319, 326, 336, 339, 345, 347, 360, 402], "makefil": 18, "mkdir": 18, "cd": 18, "uncom": 18, "line": [18, 125, 130, 142, 143, 346], "export": [18, 125, 346], "cc": 18, "cxx": 18, "icx": [18, 42], "icpx": [18, 42], "j": [18, 43, 82, 109, 130, 138, 200, 208, 209, 256, 311, 440], "toolkit": 18, "distribut": [18, 35, 130, 145, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "setvar": 18, "sh": [18, 22, 23, 48, 58, 59, 86, 127, 205, 224, 317, 347], "script": [18, 141], "opt": [18, 19], "ddnnl_cpu_runtim": 18, "ddnnl_gpu_runtim": 18, "open": [18, 19, 290], "driver": [18, 19], "openclroot": 18, "path": [18, 19, 42, 140, 267], "gnu": [18, 19], "dcmake_system_nam": 18, "dcmake_system_processor": 18, "dcmake_library_path": 18, "usr": 18, "lib": [18, 42], "acl_root_dir": [18, 19], "ddnnl_aarch64_use_acl": 18, "studio": [18, 42, 125, 141], "solut": [18, 42, 141, 142], "16": [18, 20, 22, 26, 36, 130, 140, 143, 151, 155, 159, 170, 211, 212, 256, 326, 327], "2019": [18, 40, 202, 207, 210, 211, 212, 214, 215, 216, 222, 223, 233, 313, 320, 324, 326, 332], "toolchain": 18, "switch": [18, 20, 141, 142], "2022": [18, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "config": [18, 141], "v3": [18, 40, 239], "21": [18, 130, 346], "respect": [18, 22, 23, 26, 28, 31, 34, 36, 38, 44, 58, 77, 80, 126, 133, 142, 143, 155, 172, 173, 179, 180, 202, 203, 206, 229, 239, 240, 245, 247, 248, 251, 253, 254, 258, 259, 262, 265, 266, 267, 268, 269, 313, 314, 319, 324, 346, 357, 402, 454, 481], "file": [18, 19, 32, 39, 130, 141, 142, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 267, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364], "being": [18, 19, 44, 132, 134, 135, 174, 256, 267, 331, 364, 440], "sln": [18, 141], "project": [18, 20, 141, 155, 172, 239, 262, 266, 432, 434, 454, 466], "bat": 18, "x86": [18, 39], "commmand": 18, "prompt": 18, "altern": [18, 27, 36, 124, 133], "ninja": 18, "unit": [18, 31, 134, 145, 146, 248, 285, 331, 338, 364], "test": [18, 19, 30, 130, 138, 210, 256, 324, 438], "ctest": 18, "conda": 18, "env": 18, "doc": [18, 35, 142], "yml": 18, "header": [18, 20, 26, 27, 124, 130, 141], "administr": 18, "privileg": 18, "sudo": 18, "mac": 18, "bold": [19, 24, 25, 32, 129, 143], "onednn_library_typ": 19, "onednn_cpu_runtim": 19, "none": [19, 28, 44, 47, 48, 49, 58, 59, 60, 61, 62, 63, 65, 76, 77, 85, 86, 87, 88, 91, 116, 117, 119, 143, 162, 163, 173, 345], "omp": [19, 130], "seq": 19, "sycl": [19, 29, 233, 234, 238, 252, 256, 267, 275, 276, 282, 294, 296, 301], "onednn_gpu_runtim": 19, "ocl": [19, 215], "offload": 19, "onednn_build_exampl": 19, "onednn_build_test": 19, "onednn_build_graph": [19, 32], "onednn_enable_graph_dump": [19, 32], "dump": [19, 39, 130, 235, 267], "artifact": [19, 32], "onednn_arch_opt_flag": 19, "warn": [19, 130, 210, 324], "onednn_enable_jit_profil": [19, 130], "profil": [19, 29, 143, 223, 267, 290, 301], "onednn_enable_itt_task": [19, 130], "onednn_enable_primitive_cach": [19, 129], "onednn_enable_max_cpu_isa": [19, 24], "onednn_enable_cpu_isa_hint": [19, 25], "workload": [19, 35, 345, 346], "primitive_nam": 19, "cpu_isa_nam": 19, "gpu_isa_nam": 19, "onednn_experiment": [19, 30], "onednn_verbos": [19, 267, 345, 346], "onednn_aarch64_use_acl": 19, "onednn_blas_vendor": 19, "armpl": 19, "extern": 19, "link": [19, 39, 58, 59, 60, 61, 62, 63, 290], "onednn_gpu_vendor": 19, "nvidia": 19, "onednn_dpcpp_host_compil": 19, "dpcpp": 19, "onednn_library_nam": 19, "counterpart": [19, 40, 141, 256, 440], "prefix": [19, 267], "intend": [19, 23, 140, 143, 257, 290, 295], "develop": [19, 20, 26, 39, 40, 143, 201, 202, 209, 240, 241, 244, 245, 248, 251, 253, 254, 255, 257, 258, 259, 263, 264, 265, 266, 268, 269, 271, 272, 313, 323], "subject": 19, "dpc": [19, 267, 272, 301, 364, 367], "main": [19, 140, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 358, 360, 362, 446], "discov": 19, "absolut": [19, 45, 96], "cmake_cxx_compil": 19, "window": [19, 36, 40, 48, 49, 86, 87, 127, 143, 267, 338], "linux": [19, 125, 143, 267], "7": [19, 130, 138, 140, 142, 151, 159, 170, 190, 211, 212, 322, 323, 326, 346], "4": [19, 23, 24, 26, 28, 37, 40, 44, 50, 51, 52, 79, 90, 125, 130, 142, 145, 146, 147, 150, 151, 155, 190, 198, 199, 200, 202, 203, 205, 206, 208, 209, 211, 215, 220, 223, 224, 229, 230, 233, 234, 256, 283, 308, 310, 313, 314, 317, 319, 326, 331, 341, 346, 347, 357, 358, 364], "gcc": 19, "interoper": [19, 238, 275, 294, 295, 296, 297, 301, 331, 364, 367], "disk": 19, "occupi": [19, 140, 256, 438], "app": 19, "remov": [19, 96, 97, 98, 99, 100, 101, 102, 253, 256, 267, 440], "batch_norm": [19, 177, 301], "concat": [19, 164, 177, 178, 238, 256, 261, 292, 301, 316, 345, 452, 487], "deconvolut": [19, 145, 146, 177, 178, 238, 261, 387, 388, 389, 390, 391, 392], "inner_product": [19, 177, 200, 301], "layer_norm": [19, 177, 301], "lrn": [19, 145, 146, 177, 178, 181, 182, 199, 200, 202, 203, 206, 238, 261, 301, 310, 313, 314, 319, 345, 427, 428, 429, 430, 457, 487], "matmul": [19, 33, 44, 164, 177, 207, 210, 216, 234, 255, 292, 301, 321, 325, 333, 344, 452], "pool": [19, 36, 40, 48, 49, 86, 87, 145, 146, 177, 178, 181, 182, 199, 200, 202, 203, 206, 222, 238, 261, 301, 310, 311, 313, 314, 319, 348, 441, 442, 443, 444, 457, 487], "prelu": [19, 80, 93, 164, 177, 178, 238, 239, 261, 301, 349, 350, 446, 447, 448, 449, 450, 487], "resampl": [19, 145, 146, 177, 178, 181, 182, 238, 261, 301, 356, 457, 462, 463, 464, 465, 487], "rnn": [19, 21, 29, 35, 36, 40, 41, 145, 146, 155, 172, 177, 178, 181, 182, 183, 184, 185, 186, 195, 208, 209, 220, 229, 238, 239, 256, 261, 262, 301, 303, 342, 345, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 454, 457, 466, 480, 481, 482, 483, 487], "shuffl": [19, 177, 178, 181, 182, 238, 261, 301, 345, 359, 457, 467, 468, 469, 470, 487], "softmax": [19, 36, 82, 110, 145, 146, 164, 177, 178, 208, 209, 238, 261, 301, 345, 361, 471, 472, 473, 474, 487], "attempt": [19, 262, 398, 407, 438, 452, 476], "unimpl": [19, 130, 168, 181, 189, 267], "style": 19, "semicolon": 19, "delimit": [19, 130], "donednn_enable_primit": 19, "sse41": [19, 24, 25, 147, 267], "avx2": [19, 24, 26, 39, 143, 147, 150, 267, 345], "avx512": [19, 26, 40, 142], "amx": [19, 24, 26, 134, 147, 150], "linearli": 19, "donednn_enable_primitive_cpu_isa": 19, "gen9": [19, 26, 39], "gen11": [19, 26], "xelp": 19, "xehp": 19, "xehpg": 19, "xehpc": 19, "donednn_enable_primitive_gpu_isa": 19, "processor": [19, 23, 24, 39, 125, 147, 150, 215, 290, 331, 364], "jit": [19, 24, 25, 35, 42, 129, 130, 143, 267, 345, 346, 366], "detect": [19, 24, 127, 239, 454], "r": [19, 22, 23, 37, 39, 40, 57, 64, 66, 67, 78, 79, 94, 96, 97, 98, 99, 100, 101, 102, 130, 131, 134, 145, 146, 215, 242, 273, 297, 331, 346, 364], "xsse4": 19, "sse4": [19, 24, 26, 142, 147, 150], "older": [19, 24, 26], "clang": [19, 42, 125], "msse4": 19, "give": [19, 134, 142, 320], "therefor": [19, 126, 130, 140], "arch_opt_flag": 19, "portabl": [19, 125, 256], "reli": [19, 22, 132], "situat": [19, 44, 346], "sometim": [19, 24, 35, 36, 38, 40, 142, 229, 327, 330, 357], "zmm": 19, "usag": [19, 23, 26, 39, 105, 155, 172, 195, 196, 220, 239, 302, 304, 341, 346, 446, 454], "advantag": [19, 140], "clock": [19, 130], "sequenti": [19, 267, 310, 311], "throughout": [19, 35, 229, 330, 357], "undefin": [19, 36, 146, 151, 154, 155, 158, 160, 161, 162, 163, 169, 170, 171, 172, 177, 178, 179, 180, 183, 184, 185, 186, 283], "crash": [19, 330], "conflict": [19, 364], "donednn_cpu_runtim": 19, "tbbroot": 19, "environment": 19, "instal": [19, 42], "dtbbroot": 19, "winograd": [19, 21, 132, 143, 145, 146], "_onednn_test_threadpool_impl": 19, "three": [19, 22, 33, 35, 44, 125, 134, 142, 327, 331, 346, 364], "standalon": 19, "eigen": [19, 138], "eigen3_dir": 19, "d_onednn_test_threadpool_impl": 19, "deigen3_dir": 19, "eigen3": 19, "plu": 19, "decomposit": 19, "At": [19, 24, 25, 35, 44, 57, 129, 130, 143, 214, 330], "balanc": [19, 324], "item": [19, 130], "worker": [19, 479], "64": [19, 39, 40, 130, 151, 180, 205, 209, 227, 239, 290, 317, 353, 454], "optimis": 19, "depe": 19, "computelibrari": 19, "machin": [19, 210, 324], "mlplatform": 19, "org": [19, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "donednn_aarch64_use_acl": 19, "download": 19, "advis": [19, 24, 25, 41], "v22": 19, "08": 19, "donednn_blas_vendor": 19, "graphic": [19, 39, 215, 290, 331, 364], "sdk": 19, "dopenclroot": 19, "donednn_gpu_runtim": 19, "simutan": 19, "conveni": [20, 28, 44, 142, 155, 172, 262, 331, 399, 457], "almost": [20, 125, 142], "far": [20, 40], "concern": [20, 40], "languag": [20, 33, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "back": [20, 23, 31, 36, 40, 48, 49, 58, 59, 60, 61, 62, 63, 82, 83, 86, 87, 130, 132, 202, 203, 245, 247, 256, 258, 276, 287, 313, 314, 364, 382, 384, 386, 388, 390, 392, 438, 442, 444], "forth": 20, "desir": [20, 36, 125, 267], "c99": 20, "11": [20, 37, 130, 199, 200, 202, 203, 206, 223, 224, 310, 313, 314, 319, 327, 330, 346, 347], "coverag": 20, "full": [20, 42, 130, 141, 174, 331, 364], "medium": 20, "insid": [20, 31, 142, 161, 169, 207, 216, 256, 320, 332, 440], "thin": 20, "wrapper": [20, 398, 407, 438, 452, 476], "stabl": [20, 136, 146], "abi": [20, 141, 178], "usabl": [20, 22], "target": [20, 31, 67, 208, 209, 239, 277, 281, 285, 287, 454], "audienc": 20, "experienc": 20, "ffi": 20, "framework": [20, 31, 34, 36, 123, 125, 129, 142, 283, 290, 330], "overhead": [20, 33, 35, 126, 129, 130, 142], "sanit": [20, 33], "consequ": [20, 346], "nan": 20, "larg": [20, 33, 129], "close": [20, 125, 140], "accept": [20, 32, 35, 37, 49, 59, 60, 87, 123, 130, 267, 281], "overlap": [20, 48, 127], "permit": 20, "concaten": [21, 57, 134, 177, 183, 184, 204, 244, 256, 315, 379, 380], "concat_dimens": [21, 234, 244, 380], "ou": [21, 57, 135, 136], "src_i": [21, 55, 57, 82, 109, 137], "c_1": [21, 57], "c_": [21, 57, 134], "ident": [21, 41, 42, 96, 97, 98, 99, 100, 101, 102, 126, 129, 136, 137, 195, 205, 217, 220, 225, 302, 315, 316, 317, 334, 341, 349, 362, 363], "dnnl_arg_multiple_src": [21, 137, 204, 232, 234, 262, 315, 362], "sum_i": [21, 209], "c_i": 21, "necessarili": [21, 133, 140], "dnnl_nchw16c": [21, 155, 172], "dnnl_ncdhw8c": [21, 155, 172], "prepack": 21, "dnnl_format_kind_opaqu": [21, 154, 171], "s8s8": [21, 40], "abl": [21, 24, 44, 132, 137, 174, 330], "slower": [21, 26, 137], "neural": [22, 23, 26, 33, 141, 199, 200, 266, 284, 310, 311], "network": [22, 23, 26, 33, 35, 141, 199, 200, 266, 284, 310, 311], "gradient": [22, 36, 46, 52, 54, 56, 61, 69, 73, 75, 77, 80, 83, 90, 93, 104, 108, 110, 112, 114, 121, 134, 140, 181, 182, 245, 247, 251, 262, 345, 383, 384, 389, 390, 411, 412], "df_": 22, "diffweight": [22, 23, 38, 60, 63, 128], "commonli": 22, "wide": [22, 33], "known": [22, 23, 26, 44, 210, 214, 216, 256, 320, 324, 330, 332], "summar": [22, 27, 124, 134], "me": 22, "scale_shift": 22, "normal": [22, 30, 36, 50, 51, 78, 79, 145, 146, 173, 174, 177, 178, 196, 198, 218, 219, 238, 254, 261, 262, 301, 305, 308, 324, 330, 337, 340, 345, 373, 374, 375, 376, 415, 416, 417, 418, 427, 429, 487], "layer": [22, 35, 36, 76, 78, 79, 134, 177, 178, 195, 207, 208, 209, 216, 218, 220, 229, 238, 256, 261, 262, 266, 301, 302, 310, 311, 312, 313, 314, 319, 320, 322, 323, 332, 337, 341, 345, 357, 370, 372, 404, 406, 415, 416, 417, 418, 420, 422, 424, 426, 432, 434, 466, 481, 483, 487], "carri": 22, "diff_bia": [22, 54], "diff_scale_shift": 22, "_layer": 22, "_iter": 22, "recurr": [22, 26, 134, 195, 220, 262, 266, 302, 341, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "letter": [22, 142, 155, 172, 345], "od": 22, "depth": [22, 23, 58, 59, 142, 155, 172, 245, 247, 258, 382, 384, 386, 388, 390, 392, 442, 444], "kd": [22, 23, 38], "sd": [22, 23, 58, 59], "sw": [22, 23, 48, 58, 59, 86, 127, 205, 224, 317, 347], "dd": [22, 23, 28, 58, 59], "dh": [22, 23, 48, 58, 59, 86, 127, 224, 347], "dilat": [22, 59, 60, 61, 62, 63, 86, 87, 162, 163, 181, 182, 199, 206, 222, 224, 234, 245, 247, 258, 310, 319, 345, 347, 382, 384, 386, 388, 390, 392, 442, 444, 457], "ph": 22, "pw": 22, "wise": [22, 28, 36, 45, 47, 65, 71, 81, 85, 88, 89, 91, 92, 95, 106, 113, 115, 116, 119, 122, 128, 142, 166, 167, 174, 177, 178, 205, 213, 224, 301, 317, 329, 347], "transposit": [22, 242, 273, 297], "b": [22, 33, 39, 44, 134, 136, 142, 155, 172, 207, 210, 216, 234, 242, 255, 256, 273, 292, 297, 320, 324, 332, 345, 436], "hidden": [22, 40, 209, 262, 266, 322, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 481, 483], "_t": [22, 134], "timestamp": [22, 130, 134], "l": [22, 42, 43, 134, 155, 195, 220, 229, 239, 256, 302, 341, 357, 454], "tanh": [22, 23, 28, 33, 89, 121, 134, 145, 146, 164, 195, 205, 217, 220, 221, 302, 317, 334, 341, 343], "logist": [22, 28, 145, 146], "cell": [22, 26, 40, 145, 146, 155, 172, 181, 182, 185, 186, 209, 262, 266, 322, 323, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 457, 466, 481, 483], "tild": [22, 134], "candid": [22, 33, 44, 155, 172], "gate": [22, 134, 145, 146, 155, 172, 195, 220, 229, 256, 302, 341, 357], "forget": [22, 155, 172, 202, 203, 313, 314], "o": [22, 125, 130, 134, 142, 155, 172, 209, 223, 229, 239, 256, 322, 323, 357, 454], "updat": [22, 23, 26, 38, 134, 140, 141, 155, 172, 202, 203, 206, 229, 313, 314, 319, 357, 412], "reset": [22, 138, 145, 146, 155, 172, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "english": 22, "alphabet": 22, "canon": 22, "z": [22, 40], "outermost": [22, 135, 136, 142, 155, 172, 256], "innermost": [22, 135, 136, 155, 172, 181, 182, 256], "dens": [22, 136, 142, 256, 440], "ba": [22, 172, 440], "last": [22, 40, 41, 78, 79, 84, 118, 125, 142, 143, 168, 189, 190, 253, 311, 322, 323, 330, 402, 456], "transpos": [22, 84, 135, 155, 172, 216, 242, 273, 297, 332], "natur": [22, 81, 145, 146, 330], "suppos": [22, 37, 229, 357], "column": [22, 44, 84, 130, 142, 242, 273, 297], "row": [22, 84, 142, 207, 209, 234, 242, 273, 283, 297, 320], "major": [22, 40, 142, 207, 242, 267, 273, 283, 297, 320, 484], "fortran": 22, "todo": [22, 127, 208, 301, 322], "pictur": [22, 127, 142, 365], "ab16a": 22, "similar": [22, 26, 35, 128, 141, 142, 229, 312, 320, 330, 357], "split": [22, 36, 125, 130, 142, 256, 440], "contigu": [22, 44, 142, 242, 273, 283, 297], "represent": [22, 34, 142, 256, 320, 322, 327, 330, 331, 364, 440], "mani": [22, 31, 35, 125, 142, 330], "domain": [22, 23, 142, 155, 172, 239, 320, 446], "four": [22, 40, 134], "comment": 23, "front": [23, 48, 49, 58, 59, 60, 61, 62, 63, 86, 87, 130, 245, 247, 258, 382, 384, 386, 388, 390, 392, 442, 444], "top": [23, 48, 49, 58, 59, 60, 61, 62, 63, 86, 87, 130, 142, 239, 245, 247, 256, 258, 382, 384, 386, 388, 390, 392, 442, 444, 446], "left": [23, 28, 43, 44, 48, 49, 58, 59, 60, 61, 62, 63, 78, 79, 84, 86, 87, 127, 133, 135, 136, 142, 143, 181, 182, 183, 184, 205, 222, 224, 229, 239, 245, 247, 256, 258, 317, 345, 347, 357, 382, 384, 386, 388, 390, 392, 442, 444, 446, 457], "pd_l": [23, 58, 59], "ph_l": [23, 48, 58, 59, 86, 127, 205, 224, 317, 347], "pw_l": [23, 48, 58, 59, 86, 127, 205, 224, 317, 347], "_l": 23, "stand": [23, 125], "bottom": [23, 48, 49, 58, 59, 60, 61, 62, 63, 86, 87, 142, 245, 247, 258, 382, 384, 386, 388, 390, 392, 442, 444], "pd_r": [23, 58, 59], "ph_r": [23, 58, 59, 205, 224, 317, 347], "pw_r": [23, 58, 59, 205, 224, 317, 347], "_r": 23, "broken": 23, "exposit": 23, "realiti": 23, "geq": [23, 28, 133, 312], "sum_": [23, 38, 44, 58, 82, 84, 109], "lfloor": [23, 58, 133], "rfloor": [23, 58, 133], "oc_g": [23, 58], "ic_g": [23, 58], "5d": [23, 41, 142, 155, 172, 239, 446], "depthwis": [23, 239, 262, 446], "dkh": [23, 58], "dkw": [23, 58], "fraction": 23, "swap": [23, 256, 440], "put": [23, 202, 203, 257, 295, 313, 314], "determin": [23, 31, 37, 158, 160, 222, 346], "diffbia": [23, 38, 134], "dnnl_arg_diff_weight": [23, 38, 128, 202, 203, 206, 234, 262, 313, 314, 319], "dnnl_arg_diff_bia": [23, 38, 134, 202, 203, 206, 229, 234, 262, 313, 314, 319, 357], "f64": [23, 26, 170], "wei": [23, 26, 38], "physic": [23, 41, 125, 136, 142, 155, 214, 256, 330, 440], "critic": [23, 35, 36, 38, 126, 222, 345], "shorten": [23, 38, 134], "oiw": [23, 38, 172], "goiw": [23, 172], "dnnl_oiw": [23, 38, 155], "dnnl_goiw": [23, 155], "dnnl_wio": [23, 38, 155], "dnnl_cba": [23, 38, 155, 172], "dnnl_wigo": [23, 155], "dnnl_dcab": [23, 155, 172], "oihw": [23, 38, 172, 200, 201, 202, 203, 205, 217, 222, 223, 311, 312, 313, 314, 317, 334, 345, 346], "goihw": [23, 172, 200, 205, 317], "dnnl_oihw": [23, 38, 155, 199, 206, 310, 319], "dnnl_goihw": [23, 155], "dnnl_hwio": [23, 38, 155], "dnnl_cdba": [23, 38, 155, 172], "dnnl_hwigo": [23, 155], "dnnl_decab": [23, 155, 172], "oidhw": [23, 38, 172], "goidhw": [23, 172], "dnnl_oidhw": [23, 38, 155], "dnnl_goidhw": [23, 155], "dnnl_abcdef": [23, 155, 172], "dnnl_dhwio": [23, 38, 155], "dnnl_cdeba": [23, 38, 155, 172], "dnnl_dhwigo": [23, 155], "dnnl_defcab": [23, 155, 172], "entir": [23, 35, 38, 44, 96, 97, 98, 99, 100, 101, 102], "dnnl_arg_": [23, 38, 44, 262, 272, 296, 452, 460], "memory_index": [23, 38, 44], "dnnl_arg_attr_zero_point": [23, 44, 207, 216, 234, 239, 262, 320, 332, 454], "prevent": [23, 27, 37, 262], "feasibl": 23, "deploi": 23, "done": [23, 28, 36, 44, 127, 132, 311, 312, 330, 331], "pseudo": [23, 40, 126, 132, 142], "set_output_scal": 23, "eta": 23, "set_zero_point": 23, "shift_src": [23, 132], "shift_dst": [23, 132], "shift_": [23, 132], "simd": [23, 24, 26, 147, 150], "expens": [23, 36, 327, 330, 345, 440], "fast": [23, 142], "lavin": 23, "grai": 23, "often": [23, 130, 143], "rearrang": [23, 118], "fallback": 23, "platform": [23, 26, 39, 40, 130, 201, 202, 209, 290, 313, 323, 346], "condit": [23, 28, 35, 134, 168, 189, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362], "exce": 23, "half": [23, 26, 140, 151, 159, 170], "14": [23, 37, 130, 222, 345, 346, 446], "constraint": [23, 44], "met": [23, 92, 93], "silent": [23, 25], "fall": 23, "explicit": [23, 138, 229, 256, 357], "advanc": [23, 24, 26, 39, 44, 134, 147, 150, 210, 290, 324, 332], "512": [23, 24, 26, 147, 150, 221, 343], "avx": [23, 24, 26, 147, 150, 267, 345], "boost": [23, 24, 26, 140, 147, 150], "dl": [23, 24, 26, 140, 147, 150], "3x3": [23, 222, 345], "tile": [23, 125], "weigh": 23, "against": 23, "consumpt": [23, 182, 256, 330], "grow": 23, "significantli": [23, 129, 140], "growth": 23, "rest": [23, 58], "conv1_pd": 23, "convolution_winograd": [23, 146, 382, 384, 386, 388], "conv1_src_md": [23, 200, 311], "conv1_weights_md": [23, 200, 311], "conv1_bias_md": [23, 200, 311], "conv1_dst_md": [23, 200, 311], "conv1_strid": [23, 200, 311], "conv1_padding_l": 23, "conv1_padding_r": 23, "convolution_auto": [23, 146, 222, 345, 382, 384, 386], "heurist": 23, "affin": [23, 78, 79, 125], "explor": [24, 130], "onednn_max_cpu_isa": 24, "isa": [24, 26, 31, 39, 40, 143, 147, 148, 149, 150, 234, 267, 290, 292, 345, 366], "avx2_vnni": [24, 147, 267], "avx512_cor": [24, 147, 267], "avx512bw": [24, 26], "avx512vl": 24, "avx512dq": 24, "avx512_core_vnni": [24, 147, 267], "avx512_core_bf16": [24, 147, 267], "avx512_core_fp16": [24, 147, 267], "float16": [24, 147, 150], "avx512_core_amx": [24, 147, 267], "8": [24, 26, 34, 37, 40, 42, 125, 130, 140, 147, 150, 151, 155, 159, 170, 172, 190, 198, 199, 201, 206, 239, 242, 273, 297, 308, 310, 312, 319, 345, 454], "No": [24, 26, 32, 133, 134, 148, 149, 195, 201, 202, 209, 229, 267, 302, 313, 323, 345, 357], "exclud": [24, 145, 146], "preview": [24, 147, 150], "avx2_vnni_2": [24, 147, 267], "avx512_core_amx_fp16": [24, 147, 267], "manag": [24, 25, 31, 124, 130, 143, 187, 188, 407], "set_max_cpu_isa": [24, 267, 292], "ed": [24, 130], "observ": [24, 125], "get_effective_cpu_isa": [24, 267, 292], "highest": [24, 35], "onednn_cpu_isa_hint": 25, "set_cpu_isa_hint": [25, 267, 292], "routin": 25, "no_hint": [25, 148, 267], "prefer_ymm": [25, 148], "ymm": [25, 148, 149], "get_cpu_isa_hint": [25, 267, 292], "pose": 25, "bypass": 25, "ieee": [26, 140], "golden": 26, "low": [26, 35, 239, 245, 247, 258, 382, 384, 386, 388, 390, 392, 442, 444, 454], "comparison": [26, 44, 210, 256, 301], "doubl": [26, 151, 182, 207, 210, 234, 320, 324], "arithmet": [26, 99, 116, 130, 210, 324], "topic": [26, 29, 256, 290, 330, 345, 346], "govern": [26, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "convert_": 26, "_dt": 26, "_zero": 26, "_point_": 26, "postops_": 26, "oscale_": 26, "mix": [26, 34, 122], "downconvers": [26, 156, 157], "fenv": 26, "nearest": [26, 76, 77, 106, 122, 145, 146, 162, 163, 265], "tie": 26, "x64": [26, 130], "fesetround": 26, "denorm": 26, "flush": 26, "xmmintrin": 26, "_mm_set_flush_zero_mod": 26, "_mm_flush_zero_on": 26, "acceler": [26, 36, 43], "explain": [26, 37, 311, 312], "recogn": [26, 33, 34], "mini": [26, 155, 172, 216, 256, 332, 402], "fp16": 26, "word": [26, 36, 40, 44, 155, 172, 187, 188], "valid": [26, 33, 36, 44, 48, 49, 55, 56, 58, 59, 60, 61, 62, 63, 86, 87, 130, 134, 143, 151, 154, 162, 163, 178, 182, 223, 241, 256, 281, 283, 345, 402, 438, 440], "4x": 26, "microarchitectur": 26, "uarch": [26, 130], "lp": [26, 131, 145], "previoulsi": 26, "gen12lp": 26, "hp": 26, "hpc": 26, "newer": 26, "interact": [27, 124, 252, 257, 272, 273, 282, 287], "dnnl_sycl": [27, 193, 233, 364], "seamlessli": 27, "submit": [27, 233, 308, 310, 311, 331, 364, 479], "access": [27, 35, 124, 125, 140, 209, 229, 233, 256, 260, 267, 278, 283, 322, 327, 330, 331, 357, 364, 438], "uint8_t": [27, 40, 126, 182, 207, 209, 216, 234, 242, 257, 262, 273, 281, 283, 284, 285, 292, 295, 297, 320, 323, 332, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 442, 443, 444, 447, 448, 449, 450, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 480, 481, 482, 483], "unifi": [27, 31, 124], "sycl_interop": [27, 233, 234, 256, 272, 275, 276, 287, 292, 293, 364], "make_engin": [27, 124, 126, 295, 296], "get_devic": [27, 124, 126, 295, 296], "get_context": [27, 124, 215, 295, 296, 331], "make_stream": [27, 124, 295, 296, 297], "get_queu": [27, 233, 296, 364], "make_memori": [27, 124, 233, 295, 296, 364], "get_buff": [27, 233, 256, 296, 364], "uniform": [27, 124, 125], "host": [27, 124, 175, 176, 193, 194, 256, 276, 287, 294, 331, 364, 438], "usual": [27, 36, 37, 80, 125, 126, 130, 158, 160, 331, 364, 402], "memory_kind": [27, 124, 233, 234, 257, 272, 295, 296, 364], "could": [27, 33, 34, 124, 130, 140, 207, 266, 320, 330], "dnnl_memory_alloc": [27, 124, 199, 206, 211, 234, 256, 257, 272, 295, 296, 310, 319, 326, 438], "dnnl_memory_non": [27, 124, 234, 256, 257, 272, 295, 296, 438], "identifi": [27, 31, 124, 130, 256, 285], "get_memory_kind": [27, 124, 295, 296], "track": [27, 31, 70], "accessor": [27, 364], "event": [27, 130, 234, 272, 287, 294, 296], "proper": [27, 36, 37, 210, 320, 324, 330], "write": [27, 35, 130, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 256, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 331, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 438], "i_1": 28, "ldot": [28, 37, 44], "i_k": 28, "dnnl_eltwise_ab": [28, 145, 146], "begin": [28, 45, 46, 68, 80, 92, 95, 103, 128, 133, 134, 135, 195, 196, 197, 198, 200, 204, 205, 209, 213, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 315, 317, 323, 328, 331, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364], "leq": [28, 103, 128, 135], "clip": [28, 55, 145, 146], "dnnl_eltwise_clip": [28, 145, 146], "clip_v2": 28, "dnnl_eltwise_clip_v2": [28, 145, 146], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [28, 145, 146], "elu": [28, 33, 69, 145, 146, 164], "dnnl_eltwise_elu": [28, 145, 146], "dnnl_eltwise_elu_use_dst_for_bwd": [28, 145, 146], "exp": [28, 33, 82, 109, 145, 164, 209], "dnnl_eltwise_exp": [28, 145, 146], "dnnl_eltwise_exp_use_dst_for_bwd": [28, 145, 146], "gelu_erf": 28, "dnnl_eltwise_gelu_erf": [28, 145, 146], "5": [28, 37, 40, 72, 76, 77, 78, 79, 130, 133, 140, 142, 151, 155, 190, 199, 200, 202, 203, 206, 215, 219, 223, 227, 233, 283, 310, 313, 314, 319, 331, 339, 353, 364], "erf": [28, 72, 145, 146], "pi": 28, "gelu_tanh": 28, "dnnl_eltwise_gelu_tanh": [28, 145, 146], "044715": 28, "hardsigmoid": [28, 145, 146], "dnnl_eltwise_hardsigmoid": [28, 145, 146], "max": [28, 35, 36, 37, 40, 55, 56, 74, 85, 86, 98, 127, 131, 136, 145, 146, 162, 163, 207, 210, 242, 258, 263, 273, 297, 320, 324, 331, 364], "min": [28, 40, 55, 56, 74, 88, 100, 128, 130, 131, 138, 145, 146, 162, 163, 207, 263, 320], "hardswish": [28, 33, 75, 145, 146, 164], "dnnl_eltwise_hardswish": [28, 145, 146], "dnnl_eltwise_linear": [28, 145, 146], "log": [28, 33, 82, 164, 210, 324], "dnnl_eltwise_log": [28, 145, 146], "log_": 28, "dnnl_eltwise_logist": [28, 145, 146, 266], "dnnl_eltwise_logistic_use_dst_for_bwd": [28, 145, 146], "mish": [28, 90, 145, 146, 164], "dnnl_eltwise_mish": [28, 145, 146], "omega": [28, 37, 90], "delta": [28, 90], "pow": [28, 33, 145, 146], "dnnl_eltwise_pow": [28, 145, 146], "dnnl_eltwise_relu_use_dst_for_bwd": [28, 145, 146, 248, 394], "dnnl_eltwise_round": [28, 145, 146], "soft_relu": [28, 145, 146], "dnnl_eltwise_soft_relu": [28, 145, 146], "dnnl_eltwise_sqrt": [28, 145, 146], "dnnl_eltwise_sqrt_use_dst_for_bwd": [28, 145, 146], "squar": [28, 33, 97, 113, 116, 145, 146, 164], "dnnl_eltwise_squar": [28, 145, 146], "swish": [28, 145, 146], "dnnl_eltwise_swish": [28, 145, 146], "dnnl_eltwise_tanh": [28, 145, 146, 266], "dnnl_eltwise_tanh_use_dst_for_bwd": [28, 145, 146], "134145": 28, "_relu": 28, "logsigmoid": 28, "soft": [28, 35], "eltwise_forward": [28, 200, 202, 203, 212, 213, 214, 215, 223, 233, 248, 292, 311, 313, 314, 327, 328, 330, 331, 364, 394, 452], "rather": [28, 229, 357], "Such": [28, 36, 125, 440], "satisfi": [28, 31], "tutori": [29, 44, 207, 210, 216, 301], "start": [29, 33, 37, 78, 79, 92, 93, 138, 141, 142, 143, 208, 214, 215, 233, 262, 301, 327, 345, 346, 367], "aggress": 30, "onednn_experimental_bnorm_stats_one_pass": 30, "varianc": [30, 50, 51, 52, 78, 79, 173, 174, 196, 198, 218, 240, 253, 262, 304, 308, 336, 374, 376, 416, 418], "bn": 30, "rfc": 30, "guarante": [30, 36, 117, 118, 142, 320], "sub": [31, 125, 134, 141, 142, 145, 146, 229, 256, 322, 345, 357], "ai": 31, "class": [31, 126, 138, 181, 233, 273, 276, 277, 281, 283, 284, 285, 288, 293, 297, 399, 407, 408, 452, 456, 457, 466], "bind": 31, "besid": [31, 33], "metadata": 31, "know": [31, 36, 207, 320], "connect": [31, 38, 123, 208, 229, 283, 284, 357, 402], "edg": 31, "collect": [31, 130, 143, 285, 320], "subgraph": [31, 32, 33, 34], "within": [31, 33, 40, 43, 130, 142, 145, 146, 242, 253, 254, 256, 273, 297], "cycl": [31, 320], "procedur": 31, "port": 31, "node": [31, 117, 125, 199, 206, 234, 310, 319, 346], "abstract": [31, 126, 249, 256, 284, 288, 327, 330, 331, 364, 479], "multi": [31, 47, 65, 85, 88, 91, 116, 119, 125, 288], "lifecycl": 31, "resourc": [31, 129, 276], "anymor": [31, 142], "visual": [32, 42, 58, 59, 60, 61, 62, 63, 125, 141], "benchmark": [32, 346, 366], "onednn_graph_dump": 32, "serial": 32, "json": 32, "onednn_graph_verbos": 32, "info": [32, 130, 143, 239, 266, 345, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 446, 481, 483], "100001": 32, "100002": 32, "1313609102600373579": 32, "100003": 32, "12829238476173481280": 32, "graph": [33, 34, 42, 70, 117, 123, 190, 234, 238, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 290, 292, 401], "compon": 33, "overal": [33, 117, 142, 346], "choic": [33, 142, 147, 150], "bracket": 33, "compos": 33, "superscript": 33, "repetit": 33, "subscript": 33, "t1": [33, 229, 234, 357], "neighbor": [33, 145, 146, 265], "implicitli": [33, 34, 134, 239, 256, 446], "in1": 33, "proceed": 33, "categori": [33, 155, 172], "unari": [33, 393, 395], "clamp": [33, 56, 164], "gelu": [33, 73, 145, 146, 164], "leakyrelu": [33, 164], "sigmoid": [33, 108, 134, 146, 164], "softplu": [33, 89, 112, 164], "divid": [33, 40, 58, 59, 60, 61, 62, 63, 155, 164, 172], "reducel1": [33, 164], "reducel2": [33, 164], "reducemax": [33, 164], "reducemean": [33, 164], "reducemin": [33, 164], "reduceprod": [33, 164], "reducesum": [33, 164], "biasadd": [33, 54, 164], "batchnorminfer": [33, 50, 164], "resnext": 33, "ssd": 33, "convtranspos": [33, 164], "adversari": 33, "interpol": [33, 77, 133, 162, 163, 164, 265], "bert": 33, "dlrm": 33, "parallelwavegan": 33, "avgpool": [33, 164], "maxpool": [33, 164], "densenet": 33, "reciproc": [33, 164], "t2": 33, "convolutionbackwardweight": [33, 164], "biasaddbackward": [33, 164], "relubackward": [33, 164], "batchnormtrainingbackward": [33, 164], "strictli": 34, "symmetr": [34, 40, 66, 67, 245, 247, 258], "scheme": 34, "asymmetr": [34, 44, 64, 66, 67, 94, 239, 320, 321, 332, 333, 446], "manual": [34, 36, 40, 208], "honor": 34, "faithfulli": 34, "exact": [34, 40, 128, 134, 207, 320, 330], "elimin": 34, "typecast": [34, 105, 164], "vice": [34, 44, 84], "versa": [34, 44, 84], "clearli": 34, "scope": [35, 345], "preprocess": 35, "classifi": 35, "depict": [35, 134, 142], "conv_prim_descr": 35, "friendli": [35, 229, 312, 346, 357], "maxim": [35, 267], "your": [35, 36, 42, 130, 346], "accomplish": 35, "manner": [35, 256, 440], "don": [35, 44, 199, 206, 207, 229, 310, 319, 320, 357], "find": [35, 96, 97, 98, 99, 100, 141, 207, 210, 212, 233, 320, 324, 327, 364], "look": [35, 142], "source_mem_descr": 35, "dest_mem_descr": 35, "weights_mem_descr": 35, "weight_memori": 35, "conv_source_memori": 35, "user_source_memori": 35, "get_desc": [35, 195, 200, 201, 202, 203, 205, 207, 208, 209, 212, 216, 217, 220, 222, 223, 225, 229, 256, 295, 302, 311, 312, 313, 314, 317, 320, 322, 323, 327, 332, 334, 341, 345, 346, 349, 357, 438], "reorder_prim_descr": 35, "conv_weights_memori": [35, 199, 201, 202, 203, 206, 310, 312, 313, 314, 319], "conv_dest_memori": 35, "durat": 35, "grab": 35, "infus": 35, "cast": [35, 40, 105, 122, 214, 330], "compress": 35, "effici": [35, 40, 142], "fill": [35, 36, 142, 201, 209, 210, 211, 212, 216, 223, 225, 234, 323, 324, 326, 327, 332, 345, 349], "fed": [36, 140], "turn": [36, 142, 143, 330, 345], "predict": 36, "forward_train": [36, 38, 134, 143, 179, 195, 196, 205, 213, 217, 218, 219, 220, 224, 225, 228, 229, 230, 231, 302, 304, 317, 328, 334, 336, 339, 341, 347, 349, 355, 357, 358, 360, 372, 376, 386, 392, 396, 406, 414, 418, 422, 426, 430, 434, 444, 450, 465, 470, 474, 483], "suffix": [36, 330], "_train": 36, "versu": [36, 140], "_infer": 36, "answer": 36, "backward_data": [36, 179, 374, 416], "sens": [36, 155, 172, 207, 320], "backward_weight": [36, 179], "solver": 36, "practic": [36, 125, 132, 143, 223, 312, 345, 346], "consider": [36, 320], "care": 36, "pooling_max": [36, 146, 200, 202, 203, 222, 224, 311, 313, 314, 345, 347, 442, 444], "slide": 36, "posit": [36, 37, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 76, 77, 78, 79, 80, 86, 87, 142, 198, 256, 279, 308], "Of": [36, 445], "cours": [36, 142, 445], "again": [36, 134], "takeawai": 36, "former": [36, 40, 141, 142], "invoc": 36, "especi": [36, 40, 129, 143, 256, 445], "techniqu": 36, "perspect": [36, 132, 142, 330], "varieti": 36, "emit": 36, "unnecessari": [36, 125, 345], "bullet": 36, "9": [36, 37, 39, 190, 346], "pick": [36, 223, 345, 346], "occasion": 36, "enforc": 36, "brain": 36, "workflow": [36, 331, 364], "workspace_desc": [36, 127, 195, 196, 202, 203, 219, 220, 224, 229, 302, 304, 313, 314, 339, 341, 347, 357, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "perfectli": 36, "inde": 36, "fwd": 36, "forward_primitive_desc": 36, "workspace_md": [36, 181], "primitive_forward": 36, "anywher": [36, 330], "els": [36, 76, 77, 199, 202, 203, 205, 206, 207, 223, 229, 233, 310, 313, 314, 317, 319, 320, 330, 357, 364], "bwd": 36, "primitive_backward": 36, "push": [37, 208, 209], "recent": [37, 129, 140], "focus": [37, 40, 125, 320], "shrink": [37, 40, 207, 320], "throughput": [37, 125, 140], "eight": 37, "offer": [37, 140], "pack": [37, 44, 142, 216, 332, 333], "cost": [37, 229, 346, 357], "dataset": [37, 312], "establish": 37, "q_": 37, "255": [37, 40, 182, 216, 332], "r_": 37, "127": [37, 40, 132, 209, 323], "alpha_": 37, "lceil": [37, 133], "rceil": [37, 133], "w_": [37, 40, 133, 134], "b_": [37, 134, 145, 146], "31": [37, 229, 234, 357], "roundnearesteven": 37, "approx": [37, 130], "approxim": [37, 145], "t_": 37, "15": [37, 40, 130, 142], "17": [37, 130, 142, 346], "96": [37, 180, 199, 200, 202, 203, 206, 216, 217, 223, 310, 313, 314, 319, 332, 334, 346], "bigl": 37, "bigr": 37, "238": 37, "187": 37, "66": 37, "88": 37, "528": 37, "1145": 37, "1762": 37, "net": [37, 39, 199, 200, 206, 208, 209, 229, 234, 310, 311, 312, 319, 322, 323, 357], "uniformli": 37, "g_0": 37, "o_1": 37, "i_2": 37, "h_3": 37, "w_4": 37, "walk": 37, "treat": [38, 40, 132, 136, 140], "minibatch": [38, 125, 256], "flatten": 38, "oi": [38, 172], "dnnl_oi": [38, 155], "dnnl_io": [38, 155], "dnnl_ba": [38, 136, 155, 172, 256], "onednn_jit_dump": 39, "dnnl_set_jit_dump": [39, 234, 267], "cpp": [39, 42, 138, 301, 311, 312, 322, 323, 327, 330, 331, 345, 346, 364], "dnnl_dump_cpu_jit_avx2_conv_fwd_kernel_f32": 39, "bin": 39, "dnnl_dump_cpu_jit_avx_gemv_t_f32_kern": 39, "30": [39, 207, 209, 210, 320, 323, 324], "disassembl": 39, "objdump": 39, "mi386": 39, "xed": 39, "ir": 39, "decod": [39, 208, 209, 322, 323], "emul": 39, "sde": 39, "dnnl_dump_gpu_simple_reord": 39, "dnnl_dump_gpu_gen9_conv_fwd": 39, "iga64": 39, "introduct": 39, "gen": [39, 207, 210, 216, 320, 324, 332], "assembli": 39, "emphas": 40, "signed": 40, "int8_t": [40, 207, 209, 216, 227, 234, 242, 273, 292, 297, 320, 323, 332, 353], "dnnl_gemm_u8s8s32": [40, 209, 234, 242], "averag": [40, 48, 127, 130, 145, 146, 258], "biggl": 40, "biggr": 40, "div": [40, 145, 146], "dnnl_gemm_s8s8s32": [40, 234, 242], "gru": [40, 145, 146, 155, 172, 266, 403, 404, 405, 406, 423, 424, 425, 426], "behind": [40, 142, 345], "xeon": [40, 147, 150, 338, 346], "e7": 40, "formerli": 40, "haswel": 40, "x1xx": 40, "seri": 40, "skylak": 40, "vpmaddubsw": 40, "vpmaddwd": 40, "vpaddd": 40, "s16": 40, "int16_t": 40, "c_s32": [40, 207, 320], "a_u8": [40, 207, 216, 320, 332], "b_s8": [40, 207, 216, 320, 332], "u8s8s32_compute_avx512": 40, "ab_s16": 40, "vpmaddubsw_r": 40, "saturate_to_s16": 40, "caution": 40, "snippet": 40, "u8s8s32_comput": 40, "32767": 40, "int16_min": 40, "int16_max": 40, "64770": 40, "pitfal": [40, 142], "vpmovsxbw": 40, "vpmovzxbw": 40, "2x": 40, "occur": [40, 142], "u7": 40, "s7": 40, "63": [40, 130, 209, 239, 454], "worth": [40, 320, 330, 346], "data_": 40, "set_rnn_data_qparam": [40, 209, 323, 454], "set_rnn_weights_qparam": [40, 209, 323, 454], "128": [40, 180, 182, 200, 216, 221, 222, 223, 332, 343, 345, 346], "w_max": 40, "x2xx": 40, "cascad": 40, "lake": 40, "bring": 40, "vpdpbusd": 40, "u8s8s32_compute_avx512_dl_boost": 40, "real": [40, 132, 142, 155, 207, 320], "world": [40, 207, 320], "overcom": 40, "emploi": 40, "y_": 40, "a_s8": 40, "u8s8": 40, "s8s8s32_comput": 40, "32258": 40, "solv": 40, "overview": 40, "x_s8": 40, "precomput": [40, 208, 209, 312, 323], "embed": [40, 322, 323], "rescal": 40, "insignificantli": 40, "noth": 40, "meaningless": 40, "ia": 40, "volum": [40, 117, 256], "2a": 40, "2b": 40, "2c": [40, 208, 209], "325383": 40, "070u": 40, "futur": 40, "319433": 40, "037": 40, "chapter": 40, "rodriguez": 40, "andr": 40, "et": 40, "al": 40, "white": 40, "paper": [40, 142], "2018": [40, 201, 208, 209, 229, 357], "axi": [41, 44, 54, 57, 58, 59, 61, 62, 63, 64, 66, 67, 76, 77, 78, 79, 82, 83, 94, 96, 97, 98, 99, 100, 101, 102, 109, 110, 118, 135, 136, 162, 163, 181, 182, 204, 230, 231, 234, 256, 268, 269, 315, 358, 359, 360, 361, 457, 468, 470, 472, 474], "stat_desc": [41, 234, 253, 416, 418], "layer_normalization_forward": [41, 218, 253, 292, 336, 416, 452], "scaleshift": 41, "_ndim": 41, "_dim": [41, 44], "dnnl_tnc": [41, 134, 155], "dnnl_tn": [41, 155], "dnnl_nt": [41, 155], "dnnl_ldnc": [41, 134, 155], "unlik": [41, 66, 80, 105, 242, 273, 297, 402], "tnc": [41, 78, 79, 172, 195, 208, 209, 218, 220, 229, 302, 322, 323, 336, 341, 357], "dnnl_ntc": [41, 134, 155], "dnnl_bac": [41, 155, 172], "ldnc": [41, 78, 79, 172, 208, 209, 322, 323], "dnnl_type": [42, 142, 145, 149, 150, 154, 155, 174, 178, 180, 182, 184, 186, 188, 400], "auxiliari": [42, 143, 214, 330], "dnnl_config": 42, "dnnl_version": [42, 234, 267], "dnnl_graph_typ": [42, 158, 163, 165, 167, 169, 401, 402], "libdnnl": [42, 130], "dnnl_library_typ": [42, 141], "dylib": 42, "bindnnl": 42, "dll": 42, "dnnlroot": 42, "getting_start": [42, 301, 330], "ldnnl": 42, "resolv": [42, 209, 322], "sure": [42, 44, 84, 281], "ld_library_path": 42, "dyld_library_path": 42, "rpath": 42, "appl": [42, 338], "secur": 42, "entitl": 42, "fly": [42, 330], "xcode": 42, "codesign": 42, "plist": 42, "xml": 42, "encod": [42, 208, 209, 322, 323], "utf": 42, "doctyp": 42, "dtd": 42, "en": 42, "www": [42, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "propertylist": 42, "dict": 42, "eha": 42, "cl": [42, 130, 215, 233, 331, 364], "microsoft": [42, 125, 141, 338], "msv": 42, "n_": 43, "local_s": [43, 199, 202, 203, 206, 219, 234, 254, 310, 313, 314, 319, 339, 428, 430], "sou": [43, 135], "m": [44, 84, 130, 200, 207, 210, 216, 221, 223, 234, 242, 273, 292, 297, 320, 324, 332, 343, 346, 486], "12d": [44, 155, 172], "bs_0": 44, "bs_1": 44, "dnnl_runtime_dim_v": [44, 210, 216, 234, 256, 262, 272, 296, 324, 325, 332, 333, 452, 460], "wildcard": [44, 164, 256, 283], "hand": [44, 142, 155, 172, 256], "inconsist": 44, "v": [44, 135, 207, 210, 216, 223, 234, 320, 324, 332, 438], "invalid": [44, 260, 267, 278, 279], "nd": [44, 92, 93, 142], "sake": [44, 142, 330], "prod_": 44, "mathrm": 44, "mbox": [44, 128], "ax": [44, 76, 77, 84, 96, 97, 98, 99, 100, 101, 102, 128, 136, 162, 163, 256, 440], "abc": [44, 172, 221, 256, 343, 440], "bac": [44, 172], "matric": [44, 207, 210, 216, 242, 273, 297, 320, 324, 332], "subsequ": [44, 141, 142, 143, 179, 180, 229, 250, 267, 322, 323, 330, 357], "sgemm": [44, 210, 242, 292, 297, 301, 325], "ge": [45, 68, 80, 92], "argu": [45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 121, 122], "diff": [46, 77, 87, 174, 181, 202, 203, 206, 207, 210, 229, 240, 245, 247, 248, 251, 253, 254, 258, 259, 262, 265, 266, 268, 269, 313, 314, 319, 320, 324, 357, 370, 374, 382, 384, 388, 390, 394, 404, 410, 412, 416, 420, 424, 428, 432, 442, 448, 457, 463, 466, 468, 472, 481], "_dst": 46, "diff_d": [46, 56, 60, 63, 69, 73, 75, 79, 90, 104, 108, 110, 112, 114, 121], "rule": [47, 65, 84, 85, 88, 91, 116, 117, 119, 182], "auto_broadcast": [47, 65, 85, 88, 91, 116, 119, 162, 163], "numpi": [47, 65, 85, 88, 91, 116, 117, 119, 162, 163, 256], "source0": [47, 85, 88, 91, 119], "denom": [48, 127], "exclude_pad": [48, 49, 162, 163], "move": [48, 49, 58, 59, 60, 61, 62, 63, 86, 87, 142, 322, 323, 327, 398, 407, 438, 452, 476], "s64": [48, 49, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 76, 77, 78, 79, 82, 83, 86, 87, 94, 96, 97, 98, 99, 100, 101, 102, 109, 110, 118], "pads_begin": [48, 49, 58, 59, 60, 61, 62, 63, 86, 87, 162, 163], "auto_pad": [48, 49, 58, 59, 60, 61, 62, 63, 86, 87, 162, 163], "same_upp": [48, 49, 58, 59, 60, 61, 62, 63, 86, 87, 162, 163], "same_low": [48, 49, 58, 59, 60, 61, 62, 63, 86, 87, 162, 163], "pads_end": [48, 49, 58, 59, 60, 61, 62, 63, 86, 87, 162, 163], "count": [48, 49, 66, 67, 82, 83, 117, 118, 130, 200, 234, 239, 249, 398], "rounding_typ": [48, 86, 162, 163], "floor": [48, 59, 86, 162, 163], "data_format": [48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 76, 77, 86, 87, 92, 93, 162, 163, 402], "interpret": [48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 76, 77, 84, 86, 87, 117], "ncx": [48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 76, 77, 86, 87, 92, 93, 162, 163], "nxc": [48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 76, 77, 86, 87, 92, 93, 162, 163, 402], "srcshape": 49, "src_shape": [49, 76, 77, 162], "epsilon": [50, 51, 52, 78, 79, 162, 163, 181, 182, 210, 218, 234, 240, 253, 324, 336, 374, 376, 416, 418, 457, 459], "momentum": [50, 162, 163], "neither": [50, 52, 327, 330, 331, 364], "running_mean": 50, "running_vari": 50, "batch_mean": 50, "batch_vari": 50, "diff_gamma": [52, 79], "diff_beta": [52, 79], "di": [54, 65], "_valu": 55, "descr": [55, 56, 68, 69, 80, 82, 83, 92, 93, 104, 108, 109, 110, 111, 112, 114, 116, 121], "use_dst": [56, 69, 104, 108, 114, 121, 162, 163], "rank": [57, 64, 66, 67, 78, 79, 84, 94, 96, 97, 98, 99, 100, 101, 102], "weights_format": [58, 59, 60, 61, 62, 63, 162, 163], "oix": [58, 59, 60, 162, 163], "fist": 58, "stretch": [58, 59, 60, 61, 62, 63], "xio": [58, 59, 60, 162, 163], "_channel": [58, 59, 60, 61, 62, 63], "_shape": [58, 59, 60, 61, 62, 63, 93], "firstli": [59, 84], "_pad": 59, "_h": 59, "_padding_h": 59, "output_pad": [59, 61, 62, 63, 162, 163], "dst_shape": [59, 76, 77, 162, 163], "weights_shap": [60, 63, 162], "vdumoulin": 61, "conv_arithmet": 61, "iox": [61, 62, 63, 162, 163], "xoi": [61, 62, 63, 162, 163], "zp": [64, 66, 67, 94, 162, 163, 207, 320], "zps_i": [64, 66, 67], "scale_i": [64, 94], "qtype": [64, 66, 67, 94, 162, 163], "per_tensor": [64, 66, 67, 94, 162, 163], "per_channel": [64, 66, 67, 92, 94, 162, 163], "scales_i": [66, 67], "channelnum": [66, 67, 96, 97, 98, 99, 100, 101, 102], "destinat": 70, "exponenti": [71, 145, 146], "sqrt2": 72, "bilinear": [76, 77, 146, 162, 163, 265], "trilinear": [76, 77, 133, 146, 162, 163, 265], "coordinate_transformation_mod": [76, 77, 162, 163], "coordin": [76, 77], "resiz": [76, 77], "half_pixel": [76, 77, 162, 163], "align_corn": [76, 77, 162, 163], "x_resiz": [76, 77], "differenti": [76, 126, 141, 284], "s3": 76, "nam": 77, "begin_norm_axi": [78, 79, 162, 163], "keep_stat": [78, 162, 163], "use_affin": [78, 79, 162, 163], "modul": [78, 79, 130], "1e": [78, 79, 207, 320], "span": [78, 79], "layernorm": [79, 164], "small": [80, 125, 346], "coeffici": 80, "leakag": 80, "logarithm": [81, 145, 146], "formul": [82, 111, 112, 330], "dst_i": [82, 109, 116], "big": 82, "src_j": [82, 109], "logsoftmax": [83, 136, 145, 146, 164], "unsqueez": 84, "transpose_a": [84, 162, 163], "transpose_b": [84, 162, 163], "_0": [85, 88], "distanc": [86, 87], "avgpoolbackward": [87, 164], "ln": [89, 111, 136], "diff_": [90, 134], "3src": 90, "2src": 90, "parametr": 92, "per_channel_broadcast": [92, 162, 163], "uni": [92, 93, 143, 208, 209, 345, 346], "direction": [92, 93], "rightmost": [92, 229, 357], "shape_i": 92, "tensorflow": [93, 140, 142], "_forward": 93, "diff_slop": 93, "zp_i": 94, "infin": 95, "neq": 95, "inf": 95, "dest": 95, "l1": [96, 130], "norm": [96, 97, 131, 145, 207, 210, 320, 324], "keep_dim": [96, 97, 98, 99, 100, 101, 102, 162, 163], "shapeof": [96, 97, 98, 99, 100, 101, 102], "destina": [96, 97, 98, 99, 100, 101, 102], "l2": [97, 130, 207, 320], "root": [97, 113, 131, 145, 146], "cross": [105, 125, 143, 290], "src_2": 116, "_1_i": 116, "_2_i": 116, "source1": 116, "special_zero": [117, 162, 163], "keep": [117, 140, 142, 161, 169, 182, 202, 203, 206, 229, 311, 313, 314, 319, 346, 357], "permut": [118, 155, 172, 234, 256, 440], "substract": 119, "dnnl_ocl": [124, 175, 215, 331], "cl_device_id": [124, 126, 234, 257, 295], "cl_context": [124, 126, 215, 234, 257, 295], "cl_command_queu": [124, 215, 234, 257, 295, 331], "cl_mem": [124, 215, 234, 256, 257, 295, 330, 331, 438], "ocl_interop": [124, 126, 215, 234, 257, 275, 292, 331], "get_command_queu": [124, 215, 295, 331], "get_mem_object": [124, 215, 295, 331], "retain": 124, "destruct": [124, 440, 446, 454], "measur": [125, 143, 312], "affinit": 125, "tbb": [125, 130, 267], "intention": 125, "openmp": [125, 143, 267, 345], "nor": [125, 327, 330, 331, 364], "principl": 125, "numactl": 125, "easi": 125, "modern": 125, "socket": [125, 346], "chip": 125, "cluster": 125, "setup": [125, 130], "variant": [125, 134, 245, 247], "among": [125, 130, 283], "orient": 125, "latenc": [125, 130], "server": 125, "interleav": 125, "chanc": 125, "traffic": 125, "variat": 125, "omp_proc_bind": 125, "spread": 125, "omp_plac": 125, "omp_num_thread": [125, 346], "membind": 125, "cpunodebind": 125, "physcpubind": 125, "kmp_hw_subset": 125, "1t": 125, "costli": 126, "mitig": [126, 129, 209], "blob": [126, 181, 182, 257, 262, 295, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 441, 443, 447, 449, 452, 457, 458, 460, 462, 464, 467, 469, 471, 473, 477, 480, 482], "content": [126, 256, 438], "commit": [126, 143, 267], "hash": [126, 143, 267, 345, 484], "dnnl_version_t": [126, 234, 267, 292], "packag": [126, 141], "fetch": 126, "primitive_desc_bas": [126, 262, 292, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_cache_blob_id": [126, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_cache_blob": [126, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 441, 443, 447, 449, 452, 458, 460, 462, 464, 467, 469, 471, 473, 477, 480, 482], "cache_miss": [126, 143], "cache_hit": [126, 143], "from_cache_blob": [126, 143], "namespac": [126, 141, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 238, 257, 272, 273, 275, 287, 301, 302, 304, 306, 308, 313, 314, 315, 317, 320, 324, 327, 328, 331, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364], "store_cache_blob_on_disk": 126, "load_cache_blob_from_disk": 126, "conv_from_cache_blob": 126, "get_engine_cache_blob_id": [126, 295], "get_engine_cache_blob": [126, 295], "ocl_engin": 126, "dnnl_pooling_avg_include_pad": [127, 145, 146, 258], "dnnl_pooling_avg_exclude_pad": [127, 145, 146, 258], "nice": 127, "restor": 127, "itself": [127, 262, 330, 456, 476], "acc": 127, "leaki": [128, 259], "trainabl": [128, 259], "align": [128, 134, 143, 208, 209, 234, 276, 287, 330, 346], "Its": 128, "weights_md": [128, 181, 199, 221, 225, 310, 343, 349, 457], "repeat": [129, 345], "capac": [129, 234, 260, 278, 292, 293], "exceed": 129, "evict": [129, 260, 278], "hit": 129, "miss": [129, 130, 143, 162, 200, 202, 203, 208, 209, 311, 313, 314], "onednn_primitive_cache_capac": 129, "1024": [129, 132, 229, 234, 278, 357], "dnnl_set_primitive_cache_capac": [129, 234, 260], "notifi": 130, "address": [130, 142, 229, 357], "tm": [130, 301], "onednn_jit_profil": 130, "aarc": 130, "tsc": [130, 267], "dnnl_set_jit_profiling_flag": [130, 234, 267], "box": 130, "overrid": [130, 138, 267], "dnnl_set_jit_profiling_jitdumpdir": [130, 234, 267], "timelin": 130, "chart": 130, "fp": [130, 239, 250, 267], "onednn_itt_task_level": 130, "trigger": [130, 346], "master": [130, 140], "amplx": 130, "q": [130, 233, 364], "knob": 130, "shapes_alexnet": 130, "nmi": 130, "watchdog": 130, "timer": 130, "impl": [130, 138], "prb": 130, "gop": 130, "gfreq": 130, "gflop": 130, "0time": 130, "0gflop": 130, "avx512_common": [130, 346], "alexnet": [130, 199, 200, 201, 202, 203, 206, 310, 311, 312, 313, 314, 319], "conv1": [130, 200, 310, 311], "g1mb256ic3ih227oc96oh55kh11sh4ph0n": 130, "53": 130, "9726": 130, "4285": 130, "3096": 130, "81": 130, "22": 130, "5851": 130, "2389": 130, "74": 130, "conv2": [130, 200, 310, 311], "g2mb256ic96ih27oc256oh27kh5ph2n": 130, "104": 130, "696": 130, "20": [130, 207, 210, 283, 320, 324], "2195": 130, "5177": 130, "98": 130, "9233": 130, "4775": 130, "56": 130, "conv3": [130, 200, 201, 312], "mb256ic256ih13oc384oh13kh3ph1n": 130, "68": 130, "904": 130, "5134": 130, "4441": 130, "57": 130, "18": [130, 346], "1391": 130, "3798": 130, "conv4": [130, 200], "g2mb256ic384ih13oc384oh13kh3ph1n": 130, "51": 130, "678": 130, "7397": 130, "4401": 130, "97": 130, "4623": 130, "4146": 130, "76": 130, "conv5": [130, 200], "g2mb256ic384ih13oc256oh13kh3ph1n": 130, "34": 130, "452": 130, "77148": 130, "4433": 130, "13": [130, 155, 200, 201, 205, 214, 312, 317, 330], "50435": 130, "4051": 130, "skip": 130, "mistrust": 130, "72": [130, 230, 358], "6726": 130, "avg": 130, "83": 130, "6142": 130, "10": [130, 140, 190, 195, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 210, 213, 214, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 234, 302, 304, 306, 308, 310, 315, 317, 319, 320, 324, 328, 330, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 358, 360, 362], "interfac": [130, 138, 273, 276, 283, 287, 297, 331, 364, 479], "report": [130, 132, 239, 454], "csv": 130, "head": 130, "_jit_avx512_common_conv_fwd_kernel": 130, "300": 130, "128503": 130, "293": 130, "946143": 130, "285": 130, "549830": 130, "268": 130, "868599": 130, "256": [130, 200, 201, 208, 209, 221, 222, 234, 312, 343, 345], "715527": 130, "libgomp": 130, "func": [130, 202, 203, 206, 313, 314, 319], "0x194f0": 130, "186": 130, "604226": 130, "0x19370": 130, "82": 130, "609694": 130, "jit_avx512_co": 130, "682241": 130, "vmlinux": 130, "763433": 130, "1451": 130, "459338": 130, "outsid": [130, 273], "280": 130, "489764": 130, "434821": 130, "interv": 130, "2000": 130, "ue": 130, "2344": 130, "3131": 130, "24": [130, 142], "1246": 130, "2237": 130, "2988": 130, "5157": 130, "6731": 130, "4617": 130, "5369": 130, "4434": 130, "87": 130, "1371": 130, "4020": 130, "75": [130, 199, 200, 202, 203, 206, 310, 313, 314, 319], "428": 130, "4522": 130, "06": 130, "7986": 130, "4037": 130, "79": 130, "64233": 130, "4508": 130, "05": 130, "99841": 130, "3828": 130, "1404": 130, "85": 130, "7318": 130, "dtlb": 130, "load": 130, "lock": 130, "4k": 130, "alias": [130, 155, 172], "fb": 130, "26": [130, 195, 220, 302, 341], "icach": 130, "micro": 130, "itlb": 130, "bad": 130, "specul": 130, "l3": 130, "dram": 130, "frequenc": 130, "clocktick": 130, "retir": 130, "cpi": 130, "rate": [130, 143], "x87": 130, "microcod": 130, "assist": 130, "jitdump": [130, 267], "perfmap": [130, 267], "jitdumpdir": [130, 267], "record": 130, "k1": [130, 200], "mb1ic32ih14oc32oh14kh3ph1n": 130, "resnet_50": 130, "res4a_branch2b": 130, "mb1ic32ih14oc32oh14kh3ph1nresnet_50": 130, "0032768": 130, "0131836": 130, "248": 130, "551": 130, "0262988": 130, "124": [130, 132], "599": 130, "woken": 130, "captur": [130, 399], "wrote": 130, "884": 130, "23102": 130, "inject": 130, "displai": [130, 143], "stdio": [130, 199, 206, 211, 310, 319, 326], "n20": 130, "lost": 130, "23k": 130, "uhh": 130, "5775500000": 130, "symbol": [130, 141], "39": 130, "33": 130, "0x000000000001d8ba": 130, "29": 130, "41": [130, 346], "31475": 130, "jit_avx2_conv_fwd_kernel_f32": 130, "49": 130, "0x000000000001d712": 130, "47": 130, "jit_avx2_convolution_fwd_t": 130, "execute_forward": 130, "exec_ctx_t": 130, "lambda": 130, "52": 130, "0x000000000001d8be": 130, "93": 130, "0x000000000001d716": 130, "0x000000000001d8c5": 130, "55": [130, 199, 200, 202, 203, 206, 223, 310, 313, 314, 319, 346], "0x000000000001d8c3": 130, "46": 130, "0x000000000001d71d": 130, "resolut": 130, "disassembli": 130, "brendan": 130, "gregg": 130, "excel": 130, "mathop": 131, "mul": [131, 145, 146, 263], "idl": 131, "ep": [131, 234, 263, 459], "kept": [132, 142, 155, 262, 456], "simultan": 132, "dnnl_arg_from": [132, 199, 200, 201, 202, 203, 206, 209, 211, 222, 234, 262, 310, 311, 312, 313, 314, 319, 323, 326, 345], "dnnl_arg_to": [132, 199, 200, 201, 202, 203, 206, 209, 211, 222, 234, 262, 310, 311, 312, 313, 314, 319, 323, 326, 345], "encount": [132, 311], "bug": [132, 166, 167], "team": 132, "dnnl_s8": [132, 151, 159, 170], "dnnl_f32": [132, 142, 151, 155, 159, 170, 199, 206, 211, 310, 319, 326], "allevi": [132, 210, 324], "dt_src": 132, "memory_format": 132, "fmt_src": 132, "dt_dst": 132, "fmt_dst": 132, "upsampl": [133, 224, 347], "downsampl": 133, "f_h": 133, "f_w": 133, "definit": [133, 134, 135, 256, 274, 276, 286, 289, 401], "ih_0": 133, "iw_0": 133, "ih_1": 133, "iw_1": 133, "nchw16c": [133, 142, 172], "_spatial": 133, "_size": 133, "unrol": 134, "srciter": 134, "dstiter": 134, "evalu": 134, "left2right": 134, "increas": [134, 140, 346], "right2left": 134, "decreas": [134, 346], "bidirectional_concat": [134, 183, 208, 209, 322, 323], "dstlayer": 134, "bidirectional_sum": [134, 183], "srclayer": 134, "h_": [134, 145, 146], "And": [134, 142, 256, 440], "short": [134, 141, 345], "attent": [134, 195, 208, 209, 262, 266, 302, 322, 323, 370, 372, 420, 422, 466], "vanilla_rnn_forward": [134, 266, 292, 452, 454, 481], "vanilla_rnn_backward": [134, 266, 292, 452], "vanilla_rnn_pd": 134, "aprop": 134, "src_layer_desc": [134, 209, 229, 234, 266, 323, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "src_iter_desc": [134, 195, 220, 229, 234, 266, 302, 341, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "weights_layer_desc": [134, 208, 209, 229, 234, 266, 322, 323, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "weights_iter_desc": [134, 195, 208, 209, 220, 229, 234, 266, 302, 322, 341, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "bias_desc": [134, 201, 202, 229, 234, 245, 247, 251, 255, 266, 312, 313, 357, 370, 372, 386, 392, 404, 406, 414, 420, 422, 424, 426, 432, 434, 436, 466, 481, 483], "dst_layer_desc": [134, 208, 209, 229, 234, 266, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "dst_iter_desc": [134, 195, 220, 229, 234, 266, 302, 341, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "a_t": [134, 209], "h_t": 134, "lstm_forward": [134, 208, 209, 220, 229, 266, 292, 322, 323, 341, 357, 432, 452], "lstm_backward": [134, 229, 266, 292, 357, 452], "lstm_pd": [134, 220, 341], "src_iter_h_desc": 134, "src_iter_c_desc": [134, 220, 229, 234, 266, 341, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "dst_iter_h_desc": 134, "dst_iter_c_desc": [134, 220, 229, 234, 266, 341, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "i_t": 134, "w_i": 134, "u_i": 134, "b_i": 134, "f_t": 134, "w_f": 134, "u_f": 134, "b_f": 134, "c_t": [134, 145, 146], "u_": 134, "o_t": 134, "w_o": 134, "u_o": 134, "b_o": 134, "weightslay": 134, "weightsit": 134, "srciterc": 134, "dstiterc": 134, "weights_peephole_desc": [134, 234, 266, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "p_i": 134, "p_f": 134, "p_o": 134, "p_": 134, "weights_peephol": 134, "desciptor": 134, "weights_projection_desc": [134, 234, 266, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "weights_project": 134, "gru_forward": [134, 266, 292, 404, 452], "gru_backward": [134, 266, 292, 452], "gru_pd": 134, "u_t": 134, "w_u": 134, "u_u": 134, "b_u": 134, "r_t": [134, 145, 146], "w_r": 134, "u_r": 134, "b_r": 134, "lbr_gru_forward": [134, 266, 292, 424, 452], "lbr_gru_backward": [134, 266, 292, 452], "lbr_gru_pd": 134, "augru_forward": [134, 195, 266, 292, 302, 370, 452], "augru_backward": [134, 266, 292, 452], "augru_pd": [134, 195, 302], "attention_desc": [134, 234, 266, 370, 372, 420, 422], "lbr_augru_forward": [134, 266, 292, 420, 452], "lbr_augru_backward": [134, 266, 292, 452], "lbr_augru_pd": 134, "diffweightslay": 134, "diffweightsit": 134, "diffweightspeephol": 134, "diffweightsproject": 134, "properli": [134, 142, 262], "dnnl_arg_src_lay": [134, 195, 208, 209, 220, 229, 234, 262, 302, 322, 323, 341, 357], "srclayerattent": 134, "dnnl_arg_src_layer_attent": 134, "dnnl_arg_src_it": [134, 195, 208, 209, 220, 229, 234, 262, 302, 322, 341, 357], "dnnl_arg_src_iter_c": [134, 208, 209, 220, 229, 234, 262, 322, 341, 357], "dnnl_arg_weights_lay": [134, 195, 208, 209, 220, 229, 234, 262, 302, 322, 323, 341, 357], "dnnl_arg_weights_it": [134, 195, 208, 209, 220, 229, 234, 262, 302, 322, 323, 341, 357], "weightspeephol": 134, "dnnl_arg_weights_peephol": [134, 234, 262], "weightsproject": 134, "dnnl_arg_weights_project": [134, 234, 262], "dnnl_arg_dst_lay": [134, 195, 208, 209, 220, 229, 234, 262, 302, 322, 323, 341, 357], "dnnl_arg_dst_it": [134, 195, 208, 209, 220, 229, 234, 262, 302, 322, 341, 357], "dnnl_arg_dst_iter_c": [134, 208, 209, 220, 229, 234, 262, 322, 341, 357], "dnnl_workspac": 134, "diffsrclay": 134, "dnnl_arg_diff_src_lay": [134, 229, 234, 262, 357], "diffsrclayerattent": 134, "dnnl_arg_diff_src_layer_attent": 134, "diffsrcit": 134, "dnnl_arg_diff_src_it": [134, 229, 234, 262, 357], "diffsrciterc": 134, "dnnl_arg_diff_src_iter_c": [134, 229, 234, 262, 357], "dnnl_arg_diff_weights_lay": [134, 229, 234, 262, 357], "dnnl_arg_diff_weights_it": [134, 229, 234, 262, 357], "dnnl_arg_diff_weights_peephol": [134, 234, 262], "dnnl_arg_diff_weights_project": [134, 234, 262], "diffdstlay": 134, "dnnl_arg_diff_dst_lay": [134, 229, 234, 262, 357], "diffdstit": 134, "dnnl_arg_diff_dst_it": [134, 229, 234, 262, 357], "diffdstiterc": 134, "dnnl_arg_diff_dst_iter_c": [134, 229, 234, 262, 357], "With": [134, 140, 364], "dnnl_ldgo": [134, 155], "dnnl_ldigo": [134, 155], "dnnl_ldio": [134, 155], "dnnl_ldgoi": [134, 155], "dnnl_ldoi": [134, 155], "markdown": 134, "thought": 135, "formal": 135, "group_siz": [135, 230, 234, 268, 358, 468, 470], "ug": 135, "nu": 136, "dnnl_abcd16b": [136, 155, 172], "ne": 136, "bigger": [137, 142], "dnnl_threadpool_ifac": [138, 479], "test_thread": 138, "threadpool_t": 138, "threadpool_interop": [138, 234, 273, 275, 292], "threadpool_ifac": [138, 297], "nonblockingthreadpool": 138, "unique_ptr": 138, "tp_": 138, "num_thread": 138, "hardware_concurr": 138, "get_num_thread": [138, 479], "numthread": 138, "get_in_parallel": [138, 479], "currentthreadid": 138, "uint64_t": [138, 479], "get_flag": [138, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 479, 481, 483], "asynchron": [138, 327, 331, 345, 364, 479], "parallel_for": [138, 233, 364, 479], "fn": [138, 479], "nthr": 138, "njob": 138, "schedul": 138, "balance211": 138, "new_content_goes_her": 139, "propos": 140, "idea": [140, 142, 320], "23": 140, "spot": 140, "trade": 140, "site": [140, 399], "themselv": [140, 142, 330, 402], "afterward": 140, "incompat": 141, "migrat": [141, 187, 188], "mkldnn": 141, "substr": 141, "renam": 141, "macro": [141, 234], "v1": [141, 143, 207, 210, 320, 324], "mkldnn_memory_desc_t": 141, "md": [141, 142, 204, 232, 315, 330, 346, 362, 438, 440], "format_kind": [141, 143, 181, 241, 245, 247, 251, 253, 255, 256, 259, 263, 265, 266, 438, 440], "mkldnn_block": 141, "exec": [141, 143, 215, 233, 345, 346], "mkldnn_args_src": 141, "dnnl_block": [141, 154, 171, 256, 440], "dnnl_args_src": 141, "mkldnn_dnnl_mangl": 141, "preprocessor": 141, "mkldnn_memory_desc_init_by_tag": 141, "dnnl_memory_desc_init_by_tag": 141, "mkldnn_arch_opt_flag": 141, "dnnl_arch_opt_flag": 141, "mkldnn_build_exampl": 141, "dnnl_build_exampl": 141, "mkldnn_build_for_ci": 141, "dnnl_build_for_ci": 141, "mkldnn_build_test": 141, "dnnl_build_test": 141, "mkldnn_cpu_runtim": 141, "dnnl_cpu_runtim": 141, "mkldnn_enable_concurrent_exec": 141, "dnnl_enable_concurrent_exec": [141, 187, 188], "mkldnn_enable_jit_profil": 141, "dnnl_enable_jit_profil": 141, "mkldnn_gpu_backend": 141, "dnnl_gpu_backend": 141, "mkldnn_gpu_runtim": 141, "dnnl_gpu_runtim": 141, "mkldnn_install_mod": 141, "dnnl_install_mod": 141, "mkldnn_library_typ": 141, "mkldnn_thread": 141, "dnnl_thread": 141, "mkldnn_use_clang_sanit": 141, "dnnl_use_clang_sanit": 141, "mkldnn_verbos": 141, "dnnl_verbos": [141, 143], "mkldnn_werror": 141, "dnnl_werror": 141, "find_packag": 141, "target_link_librari": 141, "project_app": 141, "Or": 141, "inclus": 141, "add_subdirectori": 141, "dnnl_dir": 141, "include_directori": 141, "thing": [141, 330, 345], "recompil": 141, "patch": [141, 267, 484], "analyz": 142, "adjust": [142, 256, 440], "sound": 142, "facilit": 142, "articl": [142, 346], "devot": 142, "multidimension": 142, "interchang": 142, "focu": 142, "phase": [142, 239, 446], "simpler": 142, "chw": 142, "displac": 142, "jump": 142, "plane": 142, "offset_nchw": 142, "adjac": 142, "border": 142, "contrari": [142, 320, 331, 364], "pixel": [142, 214, 330], "bvlc": 142, "caff": 142, "dnnl_format_tag_t": [142, 172, 199, 206, 234, 256, 292, 310, 319, 438], "quit": [142, 210, 214, 324, 330], "offset_nhwc": 142, "hwc": 142, "wc": 142, "bmp": 142, "color": 142, "24bit": 142, "neon": 142, "interest": [142, 290, 330, 345], "outer": [142, 155], "offset_chwn": 142, "hwn": 142, "wn": 142, "dnnl_chwn": [142, 155], "artifici": 142, "disjoint": 142, "trivial": [142, 445], "tip": 142, "stride_n": [142, 214, 330], "stride_c": [142, 214, 330], "stride_h": [142, 214, 330], "stride_w": [142, 214, 330], "dnnl_dims_t": [142, 155, 182, 199, 206, 211, 234, 245, 246, 247, 256, 258, 283, 310, 319, 326, 402, 438], "dnnl_memory_desc_init_by_strid": 142, "dnnl_memory_desc_create_with_strid": [142, 234, 256], "behalf": 142, "great": 142, "fix": 142, "nchw8c": [142, 172], "guess": [142, 320], "offset_nchw8c": 142, "slice": 142, "uppercas": 142, "distinguish": 142, "8c": 142, "co": [142, 195, 196, 197, 198, 204, 205, 209, 213, 214, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 234, 242, 273, 292, 297, 302, 304, 306, 308, 315, 317, 328, 330, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 358, 360, 362], "dnnl_memory_desc_create_with_tag": [142, 155, 199, 206, 211, 234, 256, 310, 319, 326], "dnnl_nchw8c": [142, 155, 172], "ptrdiff_t": 142, "inner_nblk": 142, "inner_idx": [142, 181], "1st": [142, 155, 172, 256], "0st": [142, 256], "3rd": [142, 155], "inner_blk": [142, 181], "q_stride": 142, "q_inner_nblk": 142, "q_inner_idx": 142, "q_inner_blk": 142, "dnnl_memory_desc_queri": [142, 234, 256], "dnnl_query_strid": [142, 181, 182, 256], "dnnl_query_inner_nblk": 142, "dnnl_query_inner_idx": [142, 181, 182, 256], "dnnl_query_inner_blk": [142, 181, 182, 256], "memcmp": 142, "dnnl_max_ndim": [142, 234, 246], "tail": 142, "somehow": 142, "came": 142, "div_up": 142, "price": 142, "neglig": [142, 143, 346], "d0": 142, "dnnl_memory_desc_get_s": [142, 234, 256], "phys_siz": 142, "eltwise_op": [142, 239, 446], "block_siz": 142, "c_pad": 142, "expect_stride_n": 142, "expect_stride_c": 142, "expect_stride_h": 142, "expect_stride_w": 142, "expect_stride_8c": 142, "expect_tru": 142, "get_padded_dim": [142, 440], "get_inner_nblk": [142, 440], "get_inner_idx": [142, 440], "get_inner_blk": [142, 440], "spent": [143, 320], "trace": [143, 346], "stdout": [143, 267], "onednn_verbose_timestamp": 143, "dnnl_set_verbos": [143, 234, 267], "ic16ih7oc16oh7kh5ph2n": 143, "wip": 143, "break": 143, "d0fc158e98590dfad0165e568ca466876a794597": 143, "prim_templ": 143, "memory_descriptor": 143, "problem_desc": 143, "exec_tim": 143, "f0": [143, 345, 346], "abcd8b": [143, 172, 345], "2x16x7x7": 143, "0200195": 143, "abcd8b8a": [143, 172, 345], "16x16x5x5": 143, "0251465": 143, "0180664": 143, "0229492": 143, "bia_f32": 143, "mb2_ic16oc16_ih7oh7kh5sh1dh0ph2_iw7ow7kw5sw1dw0pw2": 143, "0390625": 143, "173096": 143, "v2": [143, 207, 210, 320, 324], "1607393146348": 143, "667969": 143, "blk": 143, "58594": 143, "1607393146356": 143, "743896": 143, "63916": 143, "1607393146364": 143, "541992": 143, "35693": 143, "1607393146367": 143, "198975": 143, "71191": 143, "1607393146371": 143, "002930": 143, "93018": 143, "1607393146380": 143, "145020": 143, "75708": 143, "deped": 143, "enviro": 143, "comma": 143, "marker": 143, "millisecond": [143, 200, 346], "unix": 143, "epoch": 143, "cpu2gpu": [143, 212], "gpu2cpu": [143, 212], "tensor_nam": 143, "extra_flag": 143, "unspecifi": [143, 152, 153], "tune": [143, 346], "synchron": [143, 256, 331, 345, 364, 438], "entri": [143, 239, 260, 278, 446], "exit": [143, 215], "wall": 143, "dnnl_alg_kind_undef": [145, 146], "dnnl_convolution_direct": [145, 146, 199, 206, 245, 310, 319], "0x1": [145, 149, 150, 163], "dnnl_convolution_winograd": [145, 146, 245], "0x2": 145, "dnnl_convolution_auto": [145, 146, 245], "0x3": [145, 150], "dnnl_deconvolution_direct": [145, 146, 247], "0xa": 145, "dnnl_deconvolution_winograd": [145, 146, 247], "0xb": 145, "0x20": [145, 163], "0x100": 145, "dnnl_pooling_max": [145, 146, 199, 206, 258, 310, 319], "0x1ff": 145, "0x2ff": 145, "0x3ff": 145, "dnnl_lrn_across_channel": [145, 146, 199, 206, 254, 310, 319], "0xaff": 145, "dnnl_lrn_within_channel": [145, 146, 254], "0xbff": 145, "dnnl_vanilla_rnn": [145, 146], "0x1fff": 145, "dnnl_vanilla_lstm": [145, 146], "0x2fff": 145, "dnnl_vanilla_gru": [145, 146], "0x3fff": 145, "dnnl_lbr_gru": [145, 146], "0x4fff": 145, "dnnl_vanilla_augru": [145, 146], "0x5fff": 145, "dnnl_lbr_augru": [145, 146], "0x6fff": 145, "dnnl_binary_add": [145, 146, 241], "0x1fff0": 145, "dnnl_binary_mul": [145, 146, 241], "0x1fff1": 145, "dnnl_binary_max": [145, 146, 241], "0x1fff2": 145, "dnnl_binary_min": [145, 146, 241], "0x1fff3": 145, "dnnl_binary_div": [145, 146, 241], "0x1fff4": 145, "dnnl_binary_sub": [145, 146, 241], "0x1fff5": 145, "dnnl_binary_g": [145, 146, 241], "0x1fff6": 145, "dnnl_binary_gt": [145, 146, 241], "0x1fff7": 145, "dnnl_binary_l": [145, 146, 241], "0x1fff8": 145, "dnnl_binary_lt": [145, 146, 241], "0x1fff9": 145, "dnnl_binary_eq": [145, 146, 241], "0x1fffa": 145, "dnnl_binary_n": [145, 146, 241], "0x1fffb": 145, "dnnl_resampling_nearest": [145, 146, 265], "0x2fff0": 145, "dnnl_resampling_linear": [145, 146, 265], "0x2fff1": 145, "dnnl_reduction_max": [145, 146, 263, 459], "dnnl_reduction_min": [145, 146, 263, 459], "dnnl_reduction_sum": [145, 146, 263, 459], "dnnl_reduction_mul": [145, 146, 263, 459], "dnnl_reduction_mean": [145, 146, 263, 459], "dnnl_reduction_norm_lp_max": [145, 146, 263, 459], "dnnl_reduction_norm_lp_sum": [145, 146, 263, 459], "dnnl_reduction_norm_lp_power_p_max": [145, 146, 263, 459], "dnnl_reduction_norm_lp_power_p_sum": [145, 146, 263, 459], "dnnl_softmax_accur": [145, 146, 269], "0x30000": 145, "dnnl_softmax_log": [145, 146, 269], "hyperbol": [145, 146], "tangent": [145, 146], "cumul": [145, 346], "gaussian": 145, "modif": 145, "w_c": [145, 146], "x_t": [145, 146], "c_x": [145, 146], "u_c": [145, 146], "c_h": [145, 146], "bias": [145, 229, 357], "augru": [145, 146, 266, 301, 303, 369, 370, 371, 372, 419, 420, 421, 422, 466], "pth": 145, "deconvolution_direct": [146, 390, 392], "deconvolution_winograd": [146, 390, 392], "eltwise_elu": 146, "eltwise_squar": 146, "eltwise_ab": 146, "eltwise_sqrt": 146, "eltwise_swish": 146, "eltwise_soft_relu": 146, "eltwise_mish": 146, "eltwise_logist": [146, 481, 483], "eltwise_exp": 146, "eltwise_gelu_tanh": 146, "eltwise_gelu_erf": 146, "eltwise_log": 146, "eltwise_clip": 146, "eltwise_clip_v2": 146, "eltwise_pow": 146, "eltwise_round": 146, "eltwise_hardswish": 146, "eltwise_hardsigmoid": 146, "eltwise_relu_use_dst_for_bwd": 146, "eltwise_tanh_use_dst_for_bwd": 146, "eltwise_elu_use_dst_for_bwd": 146, "eltwise_sqrt_use_dst_for_bwd": 146, "eltwise_logistic_use_dst_for_bwd": 146, "eltwise_exp_use_dst_for_bwd": 146, "eltwise_clip_v2_use_dst_for_bwd": 146, "lrn_across_channel": [146, 200, 202, 203, 219, 313, 314, 339, 428, 430], "lrn_within_channel": [146, 428, 430], "pooling_avg_include_pad": [146, 442, 444], "pooling_avg_exclude_pad": [146, 442, 444], "vanilla_rnn": 146, "vanilla_lstm": 146, "vanilla_gru": 146, "lbr_gru": 146, "vanilla_augru": 146, "lbr_augru": 146, "binary_mul": [146, 197, 198, 306, 308], "binary_max": 146, "binary_min": 146, "binary_div": [146, 198, 308], "binary_sub": [146, 198, 308], "binary_g": 146, "binary_gt": 146, "binary_l": 146, "binary_lt": 146, "binary_eq": 146, "binary_n": 146, "resampling_nearest": [146, 463, 465], "resampling_linear": [146, 228, 355, 463, 465], "reduction_max": 146, "reduction_min": 146, "reduction_sum": [146, 226, 351], "reduction_mul": 146, "reduction_mean": 146, "reduction_norm_lp_max": 146, "reduction_norm_lp_sum": 146, "reduction_norm_lp_power_p_max": 146, "reduction_norm_lp_power_p_sum": 146, "softmax_accur": [146, 231, 360, 472, 474], "softmax_log": [146, 472, 474], "rectifi": [146, 248, 331, 364], "linar": 146, "vanilla": [146, 266, 480, 481, 482, 483], "lrb": 146, "norm_lp_max": 146, "norm_lp_sum": 146, "norm_lp_power_p_max": 146, "norm_lp_power_p_sum": 146, "isa_default": [147, 267], "dnnl_cpu_isa_default": [147, 150, 267], "dnnl_cpu_isa_sse41": [147, 150], "dnnl_cpu_isa_avx": [147, 150], "dnnl_cpu_isa_avx2": [147, 150], "dnnl_cpu_isa_avx2_vnni": [147, 150], "dnnl_cpu_isa_avx2_vnni_2": [147, 150], "dnnl_cpu_isa_avx512_cor": [147, 150], "dnnl_cpu_isa_avx512_core_vnni": [147, 150], "dnnl_cpu_isa_avx512_core_bf16": [147, 150], "dnnl_cpu_isa_avx512_core_fp16": [147, 150], "dnnl_cpu_isa_avx512_core_amx": [147, 150], "dnnl_cpu_isa_avx512_core_amx_fp16": [147, 150], "dnnl_cpu_isa_no_hint": [148, 149, 267], "dnnl_cpu_isa_prefer_ymm": [148, 149], "exclus": [148, 149, 256, 438], "0x0": [149, 150, 186], "0x7": 150, "0xf": 150, "0x1f": 150, "0x27": 150, "0x67": 150, "0xe7": 150, "0x1ef": 150, "0xfef": 150, "0x1fef": 150, "dnnl_common_typ": [151, 153, 157, 190, 192, 484], "dnnl_data_type_undef": [151, 159, 170], "dnnl_f16": [151, 159, 170], "dnnl_bf16": [151, 159, 170], "dnnl_s32": [151, 159, 170], "dnnl_u8": [151, 159, 170], "dnnl_f64": [151, 170], "dnnl_data_type_max": 151, "0x7fff": [151, 154, 178, 182], "dnnl_common": [152, 156, 191, 398, 399, 407, 476], "dnnl_any_engin": [152, 153], "dnnl_cpu": [152, 153, 206, 211, 319, 326], "dnnl_gpu": [152, 153, 211, 326], "dnnl_format_kind_undef": [154, 171, 245, 247, 251, 253, 255], "dnnl_format_kind_ani": [154, 171, 241, 245, 247, 251, 256, 259, 263, 265, 266], "dnnl_format_kind_max": 154, "dnnl_format_tag_undef": [155, 172], "dnnl_abcdefg": [155, 172], "dnnl_abcdefgh": [155, 172], "dnnl_abcdefghi": [155, 172], "dnnl_abcdefghij": [155, 172], "dnnl_abcdefghijk": [155, 172], "dnnl_abcdefghijkl": [155, 172], "dnnl_bca": [155, 172], "dnnl_cab": [155, 172], "dnnl_abdc": [155, 172], "dnnl_acbd": [155, 172], "dnnl_adbc": [155, 172], "dnnl_adcb": [155, 172], "dnnl_bacd": [155, 172], "dnnl_bcda": [155, 172], "dnnl_cdab": [155, 172], "dnnl_abdec": [155, 172], "dnnl_adecb": [155, 172], "dnnl_bcdea": [155, 172], "dnnl_cdeab": [155, 172], "dnnl_abcdf": [155, 172], "dnnl_abdefc": [155, 172], "dnnl_abdfc": [155, 172], "dnnl_acbdef": [155, 172], "dnnl_adefcb": [155, 172], "dnnl_abcdegf": [155, 172], "dnnl_abcdefhg": [155, 172], "dnnl_abcdefgih": [155, 172], "dnnl_abcdefghji": [155, 172], "dnnl_abcdefghikj": [155, 172], "dnnl_abcdefghijlk": [155, 172], "dnnl_abc16a": [155, 172], "dnnl_abc16a16b": [155, 172], "dnnl_abc32a32b": [155, 172], "dnnl_abc4a4b": [155, 172], "dnnl_abc16b": [155, 172], "dnnl_abc16b16a": [155, 172], "dnnl_abc4a": [155, 172], "dnnl_abc32b": [155, 172], "dnnl_abc4b": [155, 172], "dnnl_abc4b16a4b": [155, 172], "dnnl_abc2b8a4b": [155, 172], "dnnl_abc16b16a4b": [155, 172], "dnnl_abc16b16a2b": [155, 172], "dnnl_abc4b4a": [155, 172], "dnnl_abc8a16b2a": [155, 172], "dnnl_abc8a8b": [155, 172], "dnnl_abc8a4b": [155, 172], "dnnl_abc8b": [155, 172], "dnnl_abc8b16a2b": [155, 172], "dnnl_bac8a16b2a": [155, 172], "dnnl_abc8b8a": [155, 172], "dnnl_abcd16a": [155, 172], "dnnl_abcd8a": [155, 172], "dnnl_abcd16a16b": [155, 172], "dnnl_abcd32a": [155, 172], "dnnl_abcd32a32b": [155, 172], "dnnl_abcd16b16a": [155, 172], "dnnl_abcd16b16c": [155, 172], "dnnl_abcd16c16b": [155, 172], "dnnl_abcd4a": [155, 172], "dnnl_abcd32b": [155, 172], "dnnl_abcd4b": [155, 172], "dnnl_abcd4b16a4b": [155, 172], "dnnl_abcd16b16a4b": [155, 172], "dnnl_abcd16b16a2b": [155, 172], "dnnl_abcd4b4a": [155, 172], "dnnl_abcd4a4b": [155, 172], "dnnl_abcd2c4b2c": [155, 172], "dnnl_abcd4b8c2b": [155, 172], "dnnl_abcd4c16b4c": [155, 172], "dnnl_abcd2c8b4c": [155, 172], "dnnl_abcd16c16b4c": [155, 172], "dnnl_abcd16c16b2c": [155, 172], "dnnl_abcd4c4b": [155, 172], "dnnl_abcd4b4c": [155, 172], "dnnl_abcd8a16b2a": [155, 172], "dnnl_abcd2b8a4b": [155, 172], "dnnl_abcd8a8b": [155, 172], "dnnl_abcd8a4b": [155, 172], "dnnl_abcd8b": [155, 172], "dnnl_abcd4c8b2c": [155, 172], "dnnl_abcd8b16a2b": [155, 172], "dnnl_abcd8b16c2b": [155, 172], "dnnl_bacd8a16b2a": [155, 172], "dnnl_abcd8b8a": [155, 172], "dnnl_abcd8b8c": [155, 172], "dnnl_abcd8b4c": [155, 172], "dnnl_abcd8c16b2c": [155, 172], "dnnl_abcde8a16b2a": [155, 172], "dnnl_acbd8b16c2b": [155, 172], "dnnl_abcd8c8b": [155, 172], "dnnl_abcde16a": [155, 172], "dnnl_abcde32a": [155, 172], "dnnl_abcde16a16b": [155, 172], "dnnl_bacde8a16b2a": [155, 172], "dnnl_abcd2b4c2b": [155, 172], "dnnl_abcde4b16a4b": [155, 172], "dnnl_abcde2b8a4b": [155, 172], "dnnl_abcde16b": [155, 172], "dnnl_abcde16b16a": [155, 172], "dnnl_abcde16b16c": [155, 172], "dnnl_abcde16c16b": [155, 172], "dnnl_abcde2c8b4c": [155, 172], "dnnl_abcde4a": [155, 172], "dnnl_abcde32b": [155, 172], "dnnl_abcde4b": [155, 172], "dnnl_abcde4b4a": [155, 172], "dnnl_abcde4a4b": [155, 172], "dnnl_abcde4b4c": [155, 172], "dnnl_abcde2c4b2c": [155, 172], "dnnl_abcde4b8c2b": [155, 172], "dnnl_abcde4c16b4c": [155, 172], "dnnl_abcde16c16b4c": [155, 172], "dnnl_abcde16c16b2c": [155, 172], "dnnl_abcde4c4b": [155, 172], "dnnl_abcde8a": [155, 172], "dnnl_abcde8a8b": [155, 172], "dnnl_abcde8a4b": [155, 172], "dnnl_bacde16b16a": [155, 172], "dnnl_abcde8b": [155, 172], "dnnl_abcde8b16a2b": [155, 172], "dnnl_abcde8b16c2b": [155, 172], "dnnl_abcde4c8b2c": [155, 172], "dnnl_acbde8b16c2b": [155, 172], "dnnl_abcde8b8a": [155, 172], "dnnl_abcde32a32b": [155, 172], "dnnl_abcde8b8c": [155, 172], "dnnl_abcde8b4c": [155, 172], "dnnl_abc4a8b8a4b": [155, 172], "dnnl_abcd4a8b8a4b": [155, 172], "dnnl_abcde4a8b8a4b": [155, 172], "dnnl_bac4b8a8b4a": [155, 172], "dnnl_bacd4b8a8b4a": [155, 172], "dnnl_bacde4b8a8b4a": [155, 172], "dnnl_abcd2a8b8a2b": [155, 172], "dnnl_abcd4b8c8b4c": [155, 172], "dnnl_abcde4b8c8b4c": [155, 172], "dnnl_abcde2b8c8b2c": [155, 172], "dnnl_abcde8c16b2c": [155, 172], "dnnl_abcde8c8b": [155, 172], "dnnl_abcde2b4c2b": [155, 172], "dnnl_abcdef16b": [155, 172], "dnnl_abcdef16b16c": [155, 172], "dnnl_abcdef16c16b": [155, 172], "dnnl_abcdef4c16b4c": [155, 172], "dnnl_abcdef2c8b4c": [155, 172], "dnnl_abcdef4c8b2c": [155, 172], "dnnl_abcdef2b4c2b": [155, 172], "dnnl_abcdef4b": [155, 172], "dnnl_abcdef4c4b": [155, 172], "dnnl_abcdef4b4c": [155, 172], "dnnl_abcdef2c4b2c": [155, 172], "dnnl_abcdef4b8c2b": [155, 172], "dnnl_abcdef8b8c": [155, 172], "dnnl_abcdef8b4c": [155, 172], "dnnl_abcdef8c16b2c": [155, 172], "dnnl_abcdef4b8c8b4c": [155, 172], "dnnl_abcdef8b16c2b": [155, 172], "dnnl_acbdef8b16c2b": [155, 172], "dnnl_abcdef8c8b": [155, 172], "dnnl_abdc16b": [155, 172], "dnnl_abdc16b2c": [155, 172], "dnnl_abdc16b4c": [155, 172], "dnnl_abdc4b": [155, 172], "dnnl_abdc8b": [155, 172], "dnnl_abdec16b": [155, 172], "dnnl_abdec16b2c": [155, 172], "dnnl_abdec16b4c": [155, 172], "dnnl_abdec32b": [155, 172], "dnnl_abdec4b": [155, 172], "dnnl_abdec8b": [155, 172], "dnnl_abdefc16b": [155, 172], "dnnl_abdefc16b2c": [155, 172], "dnnl_acbdef16c16b": [155, 172], "dnnl_abdefc4b": [155, 172], "dnnl_abdefc8b": [155, 172], "dnnl_abcdef16a": [155, 172], "dnnl_abcdef32a": [155, 172], "dnnl_abedc16b": [155, 172], "dnnl_acb16a": [155, 172], "dnnl_acb16a2b": [155, 172], "dnnl_acb16a4b": [155, 172], "dnnl_acb4a": [155, 172], "dnnl_acb8a": [155, 172], "dnnl_acbd16b16c": [155, 172], "dnnl_acbd16c16b": [155, 172], "dnnl_acbde16b16c": [155, 172], "dnnl_acbde16c16b": [155, 172], "dnnl_acdb16a": [155, 172], "dnnl_acdb16a2b": [155, 172], "dnnl_acdb16a4b": [155, 172], "dnnl_acdb32a": [155, 172], "dnnl_acdb4a": [155, 172], "dnnl_acdb8a": [155, 172], "dnnl_acdeb16a": [155, 172], "dnnl_acdeb16a2b": [155, 172], "dnnl_acdeb4a": [155, 172], "dnnl_acdeb8a": [155, 172], "dnnl_adcb16a": [155, 172], "dnnl_bac16a16b": [155, 172], "dnnl_bac16b16a": [155, 172], "dnnl_bacd16a16b": [155, 172], "dnnl_bacd16b16a": [155, 172], "dnnl_acbd4c8b8c4b": [155, 172], "dnnl_acbde4c8b8c4b": [155, 172], "dnnl_acbdef4c8b8c4b": [155, 172], "dnnl_bacde16a16b": [155, 172], "dnnl_acbdef16b16c": [155, 172], "dnnl_abc16b32a": [155, 172], "dnnl_abc16b64a": [155, 172], "dnnl_abc4b32a4b": [155, 172], "dnnl_abc4b64a4b": [155, 172], "dnnl_abc8b32a2b": [155, 172], "dnnl_abc8b64a2b": [155, 172], "dnnl_ab16b16a": [155, 172], "dnnl_ab16b32a": [155, 172], "dnnl_ab16b64a": [155, 172], "dnnl_ab8b16a2b": [155, 172], "dnnl_ab8b32a2b": [155, 172], "dnnl_ab8b64a2b": [155, 172], "dnnl_ab4b16a4b": [155, 172], "dnnl_ab4b32a4b": [155, 172], "dnnl_ab4b64a4b": [155, 172], "dnnl_ab16b16a4b": [155, 172], "dnnl_abcd16b32a": [155, 172], "dnnl_abcd16b64a": [155, 172], "dnnl_abcd4b32a4b": [155, 172], "dnnl_abcd4b64a4b": [155, 172], "dnnl_abcd8b32a2b": [155, 172], "dnnl_abcd8b64a2b": [155, 172], "dnnl_abcde4b32a4b": [155, 172], "dnnl_abcde4b64a4b": [155, 172], "dnnl_abcde16b16a4b": [155, 172], "dnnl_abcde16b16a2b": [155, 172], "dnnl_abcde16b32a": [155, 172], "dnnl_abcde16b64a": [155, 172], "dnnl_abcde8b32a2b": [155, 172], "dnnl_abcde8b64a2b": [155, 172], "dnnl_abcdef16c16b4c": [155, 172], "dnnl_abcdef16c16b2c": [155, 172], "dnnl_ab32a32b8a4b": [155, 172], "dnnl_ab8a4b": [155, 172], "dnnl_ab32a32b8a2b": [155, 172], "dnnl_ab8a2b": [155, 172], "dnnl_abdc32d": [155, 172], "dnnl_abdc32d4c": [155, 172], "dnnl_abdec32": [155, 172], "dnnl_abdec32e2c": [155, 172], "dnnl_abdec32e4c": [155, 172], "dnnl_abdefc16b4c": [155, 172], "dnnl_acdeb16a4b": [155, 172], "dnnl_abcd16a16b2a": [155, 172], "dnnl_abc16a16b2a": [155, 172], "dnnl_abcd16b16c2b": [155, 172], "dnnl_abcde16b16c2b": [155, 172], "dnnl_acb32a": [155, 172], "dnnl_acb32a2b": [155, 172], "dnnl_acb32a4b": [155, 172], "dnnl_acb48a": [155, 172], "dnnl_acb48a2b": [155, 172], "dnnl_acb48a4b": [155, 172], "dnnl_acb64a": [155, 172], "dnnl_acb64a2b": [155, 172], "dnnl_acb64a4b": [155, 172], "dnnl_cba2b": [155, 172], "dnnl_cba4b": [155, 172], "dnnl_abdc32b": [155, 172], "dnnl_abdc32b2c": [155, 172], "dnnl_abdc32b4c": [155, 172], "dnnl_abdc48b": [155, 172], "dnnl_abdc48b2c": [155, 172], "dnnl_abdc48b4c": [155, 172], "dnnl_abdc64b": [155, 172], "dnnl_abdc64b2c": [155, 172], "dnnl_abdc64b4c": [155, 172], "dnnl_adcb2c": [155, 172], "dnnl_adcb4c": [155, 172], "dnnl_acdb32a2b": [155, 172], "dnnl_acdb32a4b": [155, 172], "dnnl_acdb48a": [155, 172], "dnnl_acdb48a2b": [155, 172], "dnnl_acdb48a4b": [155, 172], "dnnl_acdb64a": [155, 172], "dnnl_acdb64a2b": [155, 172], "dnnl_acdb64a4b": [155, 172], "dnnl_cdba2b": [155, 172], "dnnl_cdba4b": [155, 172], "dnnl_abdec32b2c": [155, 172], "dnnl_abdec32b4c": [155, 172], "dnnl_abdec48b": [155, 172], "dnnl_abdec48b2c": [155, 172], "dnnl_abdec48b4c": [155, 172], "dnnl_abdec64b": [155, 172], "dnnl_abdec64b2c": [155, 172], "dnnl_abdec64b4c": [155, 172], "dnnl_adecb2c": [155, 172], "dnnl_adecb4c": [155, 172], "dnnl_acdeb32a": [155, 172], "dnnl_acdeb32a2b": [155, 172], "dnnl_acdeb32a4b": [155, 172], "dnnl_acdeb48a": [155, 172], "dnnl_acdeb48a2b": [155, 172], "dnnl_acdeb48a4b": [155, 172], "dnnl_acdeb64a": [155, 172], "dnnl_acdeb64a2b": [155, 172], "dnnl_acdeb64a4b": [155, 172], "dnnl_cdeba2b": [155, 172], "dnnl_cdeba4b": [155, 172], "dnnl_abdefc32b": [155, 172], "dnnl_abdefc32b2c": [155, 172], "dnnl_abdefc32b4c": [155, 172], "dnnl_abdefc48b": [155, 172], "dnnl_abdefc48b2c": [155, 172], "dnnl_abdefc48b4c": [155, 172], "dnnl_abdefc64b": [155, 172], "dnnl_abdefc64b2c": [155, 172], "dnnl_abdefc64b4c": [155, 172], "dnnl_adefcb2c": [155, 172], "dnnl_adefcb4c": [155, 172], "dnnl_ab16b32a4b": [155, 172], "dnnl_ab16b48a4b": [155, 172], "dnnl_ab16b64a4b": [155, 172], "dnnl_ab16b16a2b": [155, 172], "dnnl_ab16b32a2b": [155, 172], "dnnl_ab16b48a2b": [155, 172], "dnnl_ab16b64a2b": [155, 172], "dnnl_abc16b32a4b": [155, 172], "dnnl_abc16b48a4b": [155, 172], "dnnl_abc16b64a4b": [155, 172], "dnnl_abc16b32a2b": [155, 172], "dnnl_abc16b48a2b": [155, 172], "dnnl_abc16b64a2b": [155, 172], "dnnl_abcd16b32a4b": [155, 172], "dnnl_abcd16b48a4b": [155, 172], "dnnl_abcd16b64a4b": [155, 172], "dnnl_abcd16b32a2b": [155, 172], "dnnl_abcd16b48a2b": [155, 172], "dnnl_abcd16b64a2b": [155, 172], "dnnl_abcde16b32a4b": [155, 172], "dnnl_abcde16b48a4b": [155, 172], "dnnl_abcde16b64a4b": [155, 172], "dnnl_abcde16b32a2b": [155, 172], "dnnl_abcde16b48a2b": [155, 172], "dnnl_abcde16b64a2b": [155, 172], "dnnl_abc32a16b": [155, 172], "dnnl_abcd32a16b": [155, 172], "dnnl_abcde32a16b": [155, 172], "dnnl_ab48a16b": [155, 172], "dnnl_ab48a32b": [155, 172], "dnnl_abc40a16b": [155, 172], "dnnl_abc40a32b": [155, 172], "dnnl_abc48b16c": [155, 172], "dnnl_abc48b32c": [155, 172], "dnnl_abcd40a16b": [155, 172], "dnnl_abcd40a32b": [155, 172], "dnnl_abcd32c": [155, 172], "dnnl_abdce32c": [155, 172], "dnnl_abdce32c2": [155, 172], "dnnl_ba16a16b2a": [155, 172], "dnnl_ba16a32b2a": [155, 172], "dnnl_ba16a48b2a": [155, 172], "dnnl_ba16a64b2a": [155, 172], "dnnl_ba16a16b4a": [155, 172], "dnnl_ba16a32b4a": [155, 172], "dnnl_ba16a48b4a": [155, 172], "dnnl_ba16a64b4a": [155, 172], "dnnl_abcd8a2b": [155, 172], "dnnl_abdec16c16b2c": [155, 172], "dnnl_abdec16c16b4c": [155, 172], "dnnl_abdefc16c16b2c": [155, 172], "dnnl_acb16b16a2b": [155, 172], "dnnl_acb16b16a4b": [155, 172], "dnnl_acdb16b16a2b": [155, 172], "dnnl_acdb16b16a4b": [155, 172], "dnnl_acdeb16b16a2b": [155, 172], "dnnl_abdefc16c16b4c": [155, 172], "dnnl_acdeb16b16a4b": [155, 172], "dnnl_acb16b32a2b": [155, 172], "dnnl_acb16b32a4b": [155, 172], "dnnl_acb16b48a2b": [155, 172], "dnnl_acb16b48a4b": [155, 172], "dnnl_acb16b64a2b": [155, 172], "dnnl_acb16b64a4b": [155, 172], "dnnl_abdc16c16b2c": [155, 172], "dnnl_abdc16c16b4c": [155, 172], "dnnl_abdc16c32b2c": [155, 172], "dnnl_abdc16c32b4c": [155, 172], "dnnl_abdc16c48b2c": [155, 172], "dnnl_abdc16c48b4c": [155, 172], "dnnl_abdc16c64b2c": [155, 172], "dnnl_abdc16c64b4c": [155, 172], "dnnl_acdb16b32a2b": [155, 172], "dnnl_acdb16b32a4b": [155, 172], "dnnl_acdb16b48a2b": [155, 172], "dnnl_acdb16b48a4b": [155, 172], "dnnl_acdb16b64a2b": [155, 172], "dnnl_acdb16b64a4b": [155, 172], "dnnl_abdec16c32b2c": [155, 172], "dnnl_abdec16c32b4c": [155, 172], "dnnl_abdec16c48b2c": [155, 172], "dnnl_abdec16c48b4c": [155, 172], "dnnl_abdec16c64b2c": [155, 172], "dnnl_abdec16c64b4c": [155, 172], "dnnl_acdeb16b32a2b": [155, 172], "dnnl_acdeb16b32a4b": [155, 172], "dnnl_acdeb16b48a2b": [155, 172], "dnnl_acdeb16b48a4b": [155, 172], "dnnl_acdeb16b64a2b": [155, 172], "dnnl_acdeb16b64a4b": [155, 172], "dnnl_abdefc16c32b2c": [155, 172], "dnnl_abdefc16c32b4c": [155, 172], "dnnl_abdefc16c48b2c": [155, 172], "dnnl_abdefc16c48b4c": [155, 172], "dnnl_abdefc16c64b2c": [155, 172], "dnnl_abdefc16c64b4c": [155, 172], "dnnl_decba16a": [155, 172], "dnnl_abc4a2b": [155, 172], "dnnl_abc8a2b": [155, 172], "dnnl_abcd8b2c": [155, 172], "dnnl_abcde4a2b": [155, 172], "dnnl_abcde8a2b": [155, 172], "dnnl_abcde40a16b": [155, 172], "dnnl_abcde40a32b": [155, 172], "dnnl_abcde8b2c": [155, 172], "dnnl_abcde4a8b8a2b": [155, 172], "dnnl_abcd4a8b8a2b": [155, 172], "dnnl_abc4a8b8a2b": [155, 172], "dnnl_abcdef4b8c8b2c": [155, 172], "dnnl_abcde4b8c8b2c": [155, 172], "dnnl_abcd4b8c8b2c": [155, 172], "dnnl_bacde4b8a8b2a": [155, 172], "dnnl_bacd4b8a8b2a": [155, 172], "dnnl_bac4b8a8b2a": [155, 172], "dnnl_acbdef4c8b8c2b": [155, 172], "dnnl_acbde4c8b8c2b": [155, 172], "dnnl_acbd4c8b8c2b": [155, 172], "dnnl_abcdef8b2c": [155, 172], "dnnl_ab32a16b": [155, 172], "dnnl_ab32a32b": [155, 172], "dnnl_ba4b8a8b2a": [155, 172], "dnnl_ba4b8a8b4a": [155, 172], "dnnl_abc32b16c": [155, 172], "dnnl_abc32b32c": [155, 172], "dnnl_acb4c8b8c2b": [155, 172], "dnnl_acb4c8b8c4b": [155, 172], "dnnl_abcd4a2b": [155, 172], "dnnl_abc2b8a16b4a": [155, 172], "dnnl_abcd2b8a16b4a": [155, 172], "dnnl_abcde2b8a16b4a": [155, 172], "dnnl_abc2a8b16a4b": [155, 172], "dnnl_abc2a8b16a2b": [155, 172], "dnnl_abc2b32a8b": [155, 172], "dnnl_abcd2a8b16a4b": [155, 172], "dnnl_abcd2a8b16a2b": [155, 172], "dnnl_acbd2c8b16c2b": [155, 172], "dnnl_abcd2b32a8b": [155, 172], "dnnl_abcd2c8b16c2b": [155, 172], "dnnl_abcde2a8b16a4b": [155, 172], "dnnl_abcde2a8b16a2b": [155, 172], "dnnl_acbde2c8b16c2b": [155, 172], "dnnl_abcde2b32a8b": [155, 172], "dnnl_abc2b8c16b2c": [155, 172], "dnnl_abcd2b8c16b2c": [155, 172], "dnnl_abcde2b8c16b2c": [155, 172], "dnnl_abcdef2b8c16b2c": [155, 172], "dnnl_bacde2b8a16b4a": [155, 172], "dnnl_bacd2b8a16b4a": [155, 172], "dnnl_bac2b8a16b4a": [155, 172], "dnnl_bacde2b8a16b2a": [155, 172], "dnnl_bacd2b8a16b2a": [155, 172], "dnnl_bac2b8a16b2a": [155, 172], "dnnl_abcde2c8b16c2b": [155, 172], "dnnl_abcdef2c8b16c2b": [155, 172], "dnnl_acbdef2c8b16c2b": [155, 172], "dnnl_abcd2b8c16b4c": [155, 172], "dnnl_abcde2b8c16b4c": [155, 172], "dnnl_ba4b8a16b2a": [155, 172], "dnnl_ba4b8a16b4a": [155, 172], "dnnl_acb4c8b16c2b": [155, 172], "dnnl_acb4c8b16c4b": [155, 172], "dnnl_ba16a16b": [155, 172], "dnnl_ba16a32b": [155, 172], "dnnl_ba16a48b": [155, 172], "dnnl_ba16a64b": [155, 172], "dnnl_acb16c2b": [155, 172], "dnnl_acb16c4b": [155, 172], "dnnl_ba16b2a": [155, 172], "dnnl_ba16b4a": [155, 172], "dnnl_abc16b16c": [155, 172], "dnnl_abc16b32c": [155, 172], "dnnl_ab16a16b": [155, 172], "dnnl_ab16a32b": [155, 172], "dnnl_abcde16a16b2a": [155, 172], "dnnl_abcdef16b16c2b": [155, 172], "dnnl_acedb16a": [155, 172], "dnnl_abdfec16b": [155, 172], "dnnl_abdec64e2c": [155, 172], "dnnl_abdec64e4c": [155, 172], "dnnl_acb16b16c": [155, 172], "dnnl_acb16b32c": [155, 172], "dnnl_acb16b48c": [155, 172], "dnnl_acb16b64c": [155, 172], "dnnl_acb16b16c2b": [155, 172], "dnnl_acb16b32c2b": [155, 172], "dnnl_acb16b48c2b": [155, 172], "dnnl_acb16b64c2b": [155, 172], "dnnl_acb16b16c4b": [155, 172], "dnnl_acb16b32c4b": [155, 172], "dnnl_acb16b48c4b": [155, 172], "dnnl_acb16b64c4b": [155, 172], "dnnl_abcd4c": [155, 172], "dnnl_abcde4c": [155, 172], "dnnl_abcdef4c": [155, 172], "dnnl_abcde32c": [155, 172], "dnnl_abcdef32c": [155, 172], "dnnl_abcd16a32b": [155, 172], "dnnl_decba8a": [155, 172], "dnnl_acdefb16b32c2b": [155, 172], "dnnl_acdefb16b32c4b": [155, 172], "dnnl_acdefb16b48c2b": [155, 172], "dnnl_acdefb16b48c4b": [155, 172], "dnnl_acdefb16b64c2b": [155, 172], "dnnl_acdefb16b64c4b": [155, 172], "dnnl_bcdea16a32b2a": [155, 172], "dnnl_bcdea16a32b4a": [155, 172], "dnnl_bcdea16a48b2a": [155, 172], "dnnl_bcdea16a48b4a": [155, 172], "dnnl_bcdea16a64b2a": [155, 172], "dnnl_bcdea16a64b4a": [155, 172], "dnnl_acdefb32c": [155, 172], "dnnl_acdefb32c2b": [155, 172], "dnnl_acdefb32c4b": [155, 172], "dnnl_acdefb48c": [155, 172], "dnnl_acdefb48c2b": [155, 172], "dnnl_acdefb48c4b": [155, 172], "dnnl_acdefb64c": [155, 172], "dnnl_acdefb64c2b": [155, 172], "dnnl_acdefb64c4b": [155, 172], "dnnl_bcdea32b": [155, 172], "dnnl_bcdea32b2a": [155, 172], "dnnl_bcdea32b4a": [155, 172], "dnnl_bcdea48b": [155, 172], "dnnl_bcdea48b2a": [155, 172], "dnnl_bcdea48b4a": [155, 172], "dnnl_bcdea64b": [155, 172], "dnnl_bcdea64b2a": [155, 172], "dnnl_bcdea64b4a": [155, 172], "dnnl_bca32b": [155, 172], "dnnl_bca32b2a": [155, 172], "dnnl_bca32b4a": [155, 172], "dnnl_bca48b": [155, 172], "dnnl_bca48b2a": [155, 172], "dnnl_bca48b4a": [155, 172], "dnnl_bca64b": [155, 172], "dnnl_bca64b2a": [155, 172], "dnnl_bca64b4a": [155, 172], "dnnl_acdb32c": [155, 172], "dnnl_acdb32c2b": [155, 172], "dnnl_acdb32c4b": [155, 172], "dnnl_acdb48c": [155, 172], "dnnl_acdb48c2b": [155, 172], "dnnl_acdb48c4b": [155, 172], "dnnl_acdb64c": [155, 172], "dnnl_acdb64c2b": [155, 172], "dnnl_acdb64c4b": [155, 172], "dnnl_bca16a16b2a": [155, 172], "dnnl_bca16a16b4a": [155, 172], "dnnl_bcda16a16b2a": [155, 172], "dnnl_bcda16a16b4a": [155, 172], "dnnl_bcdea16a16b2a": [155, 172], "dnnl_bcdea16a16b4a": [155, 172], "dnnl_acdb16b16c2b": [155, 172], "dnnl_acdb16b16c4b": [155, 172], "dnnl_acdeb16b16c2b": [155, 172], "dnnl_acdeb16b16c4b": [155, 172], "dnnl_acdefb16b16c2b": [155, 172], "dnnl_acdefb16b16c4b": [155, 172], "dnnl_bca16a32b2a": [155, 172], "dnnl_bca16a32b4a": [155, 172], "dnnl_bca16a48b2a": [155, 172], "dnnl_bca16a48b4a": [155, 172], "dnnl_bca16a64b2a": [155, 172], "dnnl_bca16a64b4a": [155, 172], "dnnl_acdb16b32c2b": [155, 172], "dnnl_acdb16b32c4b": [155, 172], "dnnl_acdb16b48c2b": [155, 172], "dnnl_acdb16b48c4b": [155, 172], "dnnl_acdb16b64c2b": [155, 172], "dnnl_acdb16b64c4b": [155, 172], "dnnl_bcda16a32b2a": [155, 172], "dnnl_bcda16a32b4a": [155, 172], "dnnl_bcda16a48b2a": [155, 172], "dnnl_bcda16a48b4a": [155, 172], "dnnl_bcda16a64b2a": [155, 172], "dnnl_bcda16a64b4a": [155, 172], "dnnl_acdeb16b32c2b": [155, 172], "dnnl_acdeb16b32c4b": [155, 172], "dnnl_acdeb16b48c2b": [155, 172], "dnnl_acdeb16b48c4b": [155, 172], "dnnl_acdeb16b64c2b": [155, 172], "dnnl_acdeb16b64c4b": [155, 172], "dnnl_bca16b": [155, 172], "dnnl_bca16b2a": [155, 172], "dnnl_bca16b4a": [155, 172], "dnnl_bcda16b": [155, 172], "dnnl_bcda16b2a": [155, 172], "dnnl_bcda16b4a": [155, 172], "dnnl_bcdea16b": [155, 172], "dnnl_bcdea16b2a": [155, 172], "dnnl_bcdea16b4a": [155, 172], "dnnl_acdb16c": [155, 172], "dnnl_acdb16c2b": [155, 172], "dnnl_acdb16c4b": [155, 172], "dnnl_acdeb16c": [155, 172], "dnnl_acdeb16c2b": [155, 172], "dnnl_acdeb16c4b": [155, 172], "dnnl_acdefb16c": [155, 172], "dnnl_acdefb16c2b": [155, 172], "dnnl_acdefb16c4b": [155, 172], "dnnl_bcda32b": [155, 172], "dnnl_bcda32b2a": [155, 172], "dnnl_bcda32b4a": [155, 172], "dnnl_bcda48b": [155, 172], "dnnl_bcda48b2a": [155, 172], "dnnl_bcda48b4a": [155, 172], "dnnl_bcda64b": [155, 172], "dnnl_bcda64b2a": [155, 172], "dnnl_bcda64b4a": [155, 172], "dnnl_acdeb32c": [155, 172], "dnnl_acdeb32c2b": [155, 172], "dnnl_acdeb32c4b": [155, 172], "dnnl_acdeb48c": [155, 172], "dnnl_acdeb48c2b": [155, 172], "dnnl_acdeb48c4b": [155, 172], "dnnl_acdeb64c": [155, 172], "dnnl_acdeb64c2b": [155, 172], "dnnl_acdeb64c4b": [155, 172], "dnnl_format_tag_last": [155, 172], "dnnl_cn": 155, "dnnl_owi": 155, "dnnl_woi": [155, 172], "dnnl_iwo": 155, "dnnl_hwoi": [155, 172], "dnnl_ohwi": 155, "dnnl_ihwo": 155, "dnnl_iohw": 155, "dnnl_iodhw": 155, "dnnl_dhwoi": [155, 172], "dnnl_odhwi": 155, "dnnl_idhwo": 155, "dnnl_gowi": 155, "dnnl_gohwi": 155, "dnnl_giohw": 155, "dnnl_godhwi": 155, "dnnl_giodhw": 155, "dnnl_ldoi32o": 155, "dnnl_ldoi32o4i": 155, "dnnl_ldio32i": [155, 172], "dnnl_ldgoi32o": 155, "dnnl_ldgoi32o2i": 155, "dnnl_ldgoi32o4i": 155, "dnnl_ldgoi64o2i": 155, "dnnl_ldgoi64o4i": 155, "dnnl_ldgio32i": [155, 172], "dnnl_ldgio32i2o": [155, 172], "dnnl_ncdhw32c": [155, 172], "dnnl_ncdhw16c": [155, 172], "dnnl_ncdhw4c": [155, 172], "dnnl_nchw32c": [155, 172], "dnnl_nchw4c": [155, 172], "dnnl_ncw32c": [155, 172], "dnnl_ncw16c": [155, 172], "dnnl_ncw4c": [155, 172], "dnnl_ncw8c": [155, 172], "dnnl_ncw16n16c": [155, 172], "dnnl_ncdhw16n16c": [155, 172], "dnnl_nchw16n16c": [155, 172], "dnnl_ncw32n16c": [155, 172], "dnnl_nchw32n16c": [155, 172], "dnnl_nchw16n32c": [155, 172], "dnnl_ncdhw32n16c": [155, 172], "dnnl_ncw32n32c": [155, 172], "dnnl_nchw32n32c": [155, 172], "dnnl_ncdhw32n32c": [155, 172], "dnnl_oi16i16o": [155, 172], "dnnl_oi16i32o": [155, 172], "dnnl_oi16i64o": [155, 172], "dnnl_oi8i16o2i": [155, 172], "dnnl_oi8i32o2i": [155, 172], "dnnl_oi8i64o2i": [155, 172], "dnnl_oi4i16o4i": [155, 172], "dnnl_oi4i32o4i": [155, 172], "dnnl_oi4i64o4i": [155, 172], "dnnl_oi16i16o4i": [155, 172], "dnnl_iow16o16i": [155, 172], "dnnl_iow16i16o": [155, 172], "dnnl_oiw16i16o": [155, 172], "dnnl_oiw16i32o": [155, 172], "dnnl_oiw16i64o": [155, 172], "dnnl_oiw16o16i": [155, 172], "dnnl_oiw16o": [155, 172], "dnnl_oiw4i16o4i": [155, 172], "dnnl_oiw4i32o4i": [155, 172], "dnnl_oiw4i64o4i": [155, 172], "dnnl_oiw2i8o4i": [155, 172], "dnnl_oiw16i16o4i": [155, 172], "dnnl_oiw16i16o2i": [155, 172], "dnnl_oiw16o16i2o": [155, 172], "dnnl_oiw4i4o": [155, 172], "dnnl_oiw4o4i": [155, 172], "dnnl_oiw4o": [155, 172], "dnnl_oiw8i16o2i": [155, 172], "dnnl_oiw8i32o2i": [155, 172], "dnnl_oiw8i64o2i": [155, 172], "dnnl_oiw8i8o": [155, 172], "dnnl_oiw8o16i2o": [155, 172], "dnnl_iow8o16i2o": [155, 172], "dnnl_oiw8o8i": [155, 172], "dnnl_oiw8o4i": [155, 172], "dnnl_owi16o": [155, 172], "dnnl_owi16o2i": [155, 172], "dnnl_owi16o4i": [155, 172], "dnnl_iwo16i": [155, 172], "dnnl_iwo16i2o": [155, 172], "dnnl_iwo16i4o": [155, 172], "dnnl_owi4o": [155, 172], "dnnl_owi8o": [155, 172], "dnnl_iohw16i16o": [155, 172], "dnnl_iohw16o16i": [155, 172], "dnnl_ohwi16o": [155, 172], "dnnl_ohwi16o2i": [155, 172], "dnnl_ohwi16o4i": [155, 172], "dnnl_ihwo16i": [155, 172], "dnnl_ihwo16i2o": [155, 172], "dnnl_ihwo16i4o": [155, 172], "dnnl_ohwi32o": [155, 172], "dnnl_ohwi4o": [155, 172], "dnnl_ohwi8o": [155, 172], "dnnl_oihw16i16o": [155, 172], "dnnl_oihw16i32o": [155, 172], "dnnl_oihw16i64o": [155, 172], "dnnl_oihw16o16i": [155, 172], "dnnl_oihw16o": [155, 172], "dnnl_oihw4i16o4i": [155, 172], "dnnl_oihw4i32o4i": [155, 172], "dnnl_oihw4i64o4i": [155, 172], "dnnl_oihw16i16o4i": [155, 172], "dnnl_oihw16i16o2i": [155, 172], "dnnl_oihw16o16i2o": [155, 172], "dnnl_oihw4i4o": [155, 172], "dnnl_oihw4o4i": [155, 172], "dnnl_oihw4o": [155, 172], "dnnl_oihw8i16o2i": [155, 172], "dnnl_oihw8i32o2i": [155, 172], "dnnl_oihw8i64o2i": [155, 172], "dnnl_oihw8i8o": [155, 172], "dnnl_oihw8o16i2o": [155, 172], "dnnl_oihw2i8o4i": [155, 172], "dnnl_iohw8o16i2o": [155, 172], "dnnl_oihw8o8i": [155, 172], "dnnl_oihw8o4i": [155, 172], "dnnl_owhi16o": [155, 172], "dnnl_odhwi16o": [155, 172], "dnnl_odhwi16o2i": [155, 172], "dnnl_odhwi16o4i": [155, 172], "dnnl_idhwo16i": [155, 172], "dnnl_idhwo16i2o": [155, 172], "dnnl_idhwo16i4o": [155, 172], "dnnl_odhwi4o": [155, 172], "dnnl_odhwi8o": [155, 172], "dnnl_odwhi16o": [155, 172], "dnnl_oidhw16i16o": [155, 172], "dnnl_oidhw16i32o": [155, 172], "dnnl_oidhw16i64o": [155, 172], "dnnl_oidhw16o16i": [155, 172], "dnnl_oidhw16o": [155, 172], "dnnl_oidhw4i4o": [155, 172], "dnnl_oidhw4o4i": [155, 172], "dnnl_oidhw4o": [155, 172], "dnnl_oidhw8i16o2i": [155, 172], "dnnl_oidhw8i32o2i": [155, 172], "dnnl_oidhw8i64o2i": [155, 172], "dnnl_oidhw8i8o": [155, 172], "dnnl_oidhw8o16i2o": [155, 172], "dnnl_iodhw8o16i2o": [155, 172], "dnnl_oidhw4i16o4i": [155, 172], "dnnl_oidhw4i32o4i": [155, 172], "dnnl_oidhw4i64o4i": [155, 172], "dnnl_oidhw16i16o4i": [155, 172], "dnnl_oidhw16i16o2i": [155, 172], "dnnl_oidhw2i8o4i": [155, 172], "dnnl_oidhw8o8i": [155, 172], "dnnl_oidhw8o4i": [155, 172], "dnnl_iodhw16i16o": [155, 172], "dnnl_oidhw4o8i8o4i": [155, 172], "dnnl_iodhw16o16i": [155, 172], "dnnl_oidhw16o16i2o": [155, 172], "dnnl_goiw16g": [155, 172], "dnnl_goiw8g": [155, 172], "dnnl_goiw4g": [155, 172], "dnnl_giow16o16i": [155, 172], "dnnl_giow16i16o": [155, 172], "dnnl_goiw16i16o": [155, 172], "dnnl_goiw16o16i": [155, 172], "dnnl_goiw16o": [155, 172], "dnnl_goiw4i16o4i": [155, 172], "dnnl_goiw2i8o4i": [155, 172], "dnnl_goiw16i16o4i": [155, 172], "dnnl_goiw16i16o2i": [155, 172], "dnnl_goiw16o16i2o": [155, 172], "dnnl_goiw4i4o": [155, 172], "dnnl_goiw4o4i": [155, 172], "dnnl_goiw4o": [155, 172], "dnnl_goiw8i16o2i": [155, 172], "dnnl_goiw8i8o": [155, 172], "dnnl_goiw8o16i2o": [155, 172], "dnnl_giow8o16i2o": [155, 172], "dnnl_goiw8o8i": [155, 172], "dnnl_goiw8o4i": [155, 172], "dnnl_gowi16o": [155, 172], "dnnl_gowi16o2i": [155, 172], "dnnl_gowi16o4i": [155, 172], "dnnl_giwo16i": [155, 172], "dnnl_giwo16i2o": [155, 172], "dnnl_giwo16i4o": [155, 172], "dnnl_gowi4o": [155, 172], "dnnl_gowi8o": [155, 172], "dnnl_goiw32g": [155, 172], "dnnl_goiw2i4o2i": [155, 172], "dnnl_goiw2o4i2o": [155, 172], "dnnl_goiw4i8o2i": [155, 172], "dnnl_goiw4o8i2o": [155, 172], "dnnl_goiw4i": [155, 172], "dnnl_goiw32i": [155, 172], "dnnl_giohw16i16o": [155, 172], "dnnl_giohw16o16i": [155, 172], "dnnl_gohwi16o": [155, 172], "dnnl_gohwi16o2i": [155, 172], "dnnl_gohwi16o4i": [155, 172], "dnnl_gihwo16i": [155, 172], "dnnl_gihwo16i2o": [155, 172], "dnnl_gihwo16i4o": [155, 172], "dnnl_gohwi32o": [155, 172], "dnnl_gohwi4o": [155, 172], "dnnl_gohwi8o": [155, 172], "dnnl_goihw16g": [155, 172], "dnnl_goihw16i16o": [155, 172], "dnnl_goihw16o16i": [155, 172], "dnnl_goihw16o": [155, 172], "dnnl_goihw2i8o4i": [155, 172], "dnnl_goihw4i16o4i": [155, 172], "dnnl_goihw16i16o4i": [155, 172], "dnnl_goihw16i16o2i": [155, 172], "dnnl_goihw16o16i2o": [155, 172], "dnnl_goihw4i4o": [155, 172], "dnnl_goihw4o4i": [155, 172], "dnnl_goihw4o": [155, 172], "dnnl_goihw8g": [155, 172], "dnnl_goihw4g": [155, 172], "dnnl_goihw8i16o2i": [155, 172], "dnnl_goihw8i8o": [155, 172], "dnnl_goihw8o16i2o": [155, 172], "dnnl_giohw8o16i2o": [155, 172], "dnnl_goihw8o8i": [155, 172], "dnnl_goihw8o4i": [155, 172], "dnnl_goihw32g": [155, 172], "dnnl_gowhi16o": [155, 172], "dnnl_goihw4i": [155, 172], "dnnl_goihw32i": [155, 172], "dnnl_oiw4o8i8o4i": [155, 172], "dnnl_oihw4o8i8o4i": [155, 172], "dnnl_iow4i8o8i4o": [155, 172], "dnnl_iohw4i8o8i4o": [155, 172], "dnnl_iodhw4i8o8i4o": [155, 172], "dnnl_oihw2o8i8o2i": [155, 172], "dnnl_goiw4o8i8o4i": [155, 172], "dnnl_goihw4o8i8o4i": [155, 172], "dnnl_goidhw4o8i8o4i": [155, 172], "dnnl_giow4i8o8i4o": [155, 172], "dnnl_giohw4i8o8i4o": [155, 172], "dnnl_giodhw4i8o8i4o": [155, 172], "dnnl_goihw2o8i8o2i": [155, 172], "dnnl_goihw2i4o2i": [155, 172], "dnnl_goihw2o4i2o": [155, 172], "dnnl_goihw4i8o2i": [155, 172], "dnnl_goihw4o8i2o": [155, 172], "dnnl_giodhw16i16o": [155, 172], "dnnl_giodhw16o16i": [155, 172], "dnnl_godhwi16o": [155, 172], "dnnl_godhwi16o2i": [155, 172], "dnnl_godhwi16o4i": [155, 172], "dnnl_gidhwo16i": [155, 172], "dnnl_gidhwo16i2o": [155, 172], "dnnl_gidhwo16i4o": [155, 172], "dnnl_godhwi4o": [155, 172], "dnnl_godhwi8o": [155, 172], "dnnl_godwhi16o": [155, 172], "dnnl_goidhw16i16o": [155, 172], "dnnl_goidhw4i16o4i": [155, 172], "dnnl_goidhw16i16o4i": [155, 172], "dnnl_goidhw2i8o4i": [155, 172], "dnnl_goidhw16i16o2i": [155, 172], "dnnl_goidhw16o16i": [155, 172], "dnnl_goidhw16o16i2o": [155, 172], "dnnl_goidhw16o": [155, 172], "dnnl_goidhw4i4o": [155, 172], "dnnl_goidhw4o4i": [155, 172], "dnnl_goidhw4o": [155, 172], "dnnl_goidhw8i16o2i": [155, 172], "dnnl_goidhw8i8o": [155, 172], "dnnl_goidhw8o16i2o": [155, 172], "dnnl_giodhw8o16i2o": [155, 172], "dnnl_goidhw8o8i": [155, 172], "dnnl_goidhw8o4i": [155, 172], "dnnl_goidhw16g": [155, 172], "dnnl_goidhw32g": [155, 172], "dnnl_goidhw2i4o2i": [155, 172], "dnnl_goidhw4i8o2i": [155, 172], "dnnl_goidhw2o4i2o": [155, 172], "dnnl_goidhw4o8i2o": [155, 172], "dnnl_goidhw4i": [155, 172], "dnnl_goidhw32i": [155, 172], "dnnl_owi32o": [155, 172], "dnnl_owi32o2i": [155, 172], "dnnl_owi32o4i": [155, 172], "dnnl_owi48o": [155, 172], "dnnl_owi48o2i": [155, 172], "dnnl_owi48o4i": [155, 172], "dnnl_owi64o": [155, 172], "dnnl_owi64o2i": [155, 172], "dnnl_owi64o4i": [155, 172], "dnnl_iwo32i": [155, 172], "dnnl_iwo32i2o": [155, 172], "dnnl_iwo32i4o": [155, 172], "dnnl_iwo48i": [155, 172], "dnnl_iwo48i2o": [155, 172], "dnnl_iwo48i4o": [155, 172], "dnnl_iwo64i": [155, 172], "dnnl_iwo64i2o": [155, 172], "dnnl_iwo64i4o": [155, 172], "dnnl_wio2i": [155, 172], "dnnl_wio4i": [155, 172], "dnnl_gowi32o": [155, 172], "dnnl_gowi32o2i": [155, 172], "dnnl_gowi32o4i": [155, 172], "dnnl_gowi48o": [155, 172], "dnnl_gowi48o2i": [155, 172], "dnnl_gowi48o4i": [155, 172], "dnnl_gowi64o": [155, 172], "dnnl_gowi64o2i": [155, 172], "dnnl_gowi64o4i": [155, 172], "dnnl_giwo32i": [155, 172], "dnnl_giwo32i2o": [155, 172], "dnnl_giwo32i4o": [155, 172], "dnnl_giwo48i": [155, 172], "dnnl_giwo48i2o": [155, 172], "dnnl_giwo48i4o": [155, 172], "dnnl_giwo64i": [155, 172], "dnnl_giwo64i2o": [155, 172], "dnnl_giwo64i4o": [155, 172], "dnnl_gwio": [155, 172], "dnnl_gwio2i": [155, 172], "dnnl_gwio4i": [155, 172], "dnnl_ohwi32o2i": [155, 172], "dnnl_ohwi32o4i": [155, 172], "dnnl_ohwi48o": [155, 172], "dnnl_ohwi48o2i": [155, 172], "dnnl_ohwi48o4i": [155, 172], "dnnl_ohwi64o": [155, 172], "dnnl_ohwi64o2i": [155, 172], "dnnl_ohwi64o4i": [155, 172], "dnnl_ihwo32i": [155, 172], "dnnl_ihwo32i2o": [155, 172], "dnnl_ihwo32i4o": [155, 172], "dnnl_ihwo48i": [155, 172], "dnnl_ihwo48i2o": [155, 172], "dnnl_ihwo48i4o": [155, 172], "dnnl_ihwo64i": [155, 172], "dnnl_ihwo64i2o": [155, 172], "dnnl_ihwo64i4o": [155, 172], "dnnl_hwio2i": [155, 172], "dnnl_hwio4i": [155, 172], "dnnl_gohwi32o2i": [155, 172], "dnnl_gohwi32o4i": [155, 172], "dnnl_gohwi48o": [155, 172], "dnnl_gohwi48o2i": [155, 172], "dnnl_gohwi48o4i": [155, 172], "dnnl_gohwi64o": [155, 172], "dnnl_gohwi64o2i": [155, 172], "dnnl_gohwi64o4i": [155, 172], "dnnl_gihwo32i": [155, 172], "dnnl_gihwo32i2o": [155, 172], "dnnl_gihwo32i4o": [155, 172], "dnnl_gihwo48i": [155, 172], "dnnl_gihwo48i2o": [155, 172], "dnnl_gihwo48i4o": [155, 172], "dnnl_gihwo64i": [155, 172], "dnnl_gihwo64i2o": [155, 172], "dnnl_gihwo64i4o": [155, 172], "dnnl_ghwio": [155, 172], "dnnl_ghwio2i": [155, 172], "dnnl_ghwio4i": [155, 172], "dnnl_odhwi32o": [155, 172], "dnnl_odhwi32o2i": [155, 172], "dnnl_odhwi32o4i": [155, 172], "dnnl_odhwi48o": [155, 172], "dnnl_odhwi48o2i": [155, 172], "dnnl_odhwi48o4i": [155, 172], "dnnl_odhwi64o": [155, 172], "dnnl_odhwi64o2i": [155, 172], "dnnl_odhwi64o4i": [155, 172], "dnnl_idhwo32i": [155, 172], "dnnl_idhwo32i2o": [155, 172], "dnnl_idhwo32i4o": [155, 172], "dnnl_idhwo48i": [155, 172], "dnnl_idhwo48i2o": [155, 172], "dnnl_idhwo48i4o": [155, 172], "dnnl_idhwo64i": [155, 172], "dnnl_idhwo64i2o": [155, 172], "dnnl_idhwo64i4o": [155, 172], "dnnl_dhwio2i": [155, 172], "dnnl_dhwio4i": [155, 172], "dnnl_godhwi32o": [155, 172], "dnnl_godhwi32o2i": [155, 172], "dnnl_godhwi32o4i": [155, 172], "dnnl_godhwi48o": [155, 172], "dnnl_godhwi48o2i": [155, 172], "dnnl_godhwi48o4i": [155, 172], "dnnl_godhwi64o": [155, 172], "dnnl_godhwi64o2i": [155, 172], "dnnl_godhwi64o4i": [155, 172], "dnnl_gidhwo32i": [155, 172], "dnnl_gidhwo32i2o": [155, 172], "dnnl_gidhwo32i4o": [155, 172], "dnnl_gidhwo48i": [155, 172], "dnnl_gidhwo48i2o": [155, 172], "dnnl_gidhwo48i4o": [155, 172], "dnnl_gidhwo64i": [155, 172], "dnnl_gidhwo64i2o": [155, 172], "dnnl_gidhwo64i4o": [155, 172], "dnnl_gdhwio": [155, 172], "dnnl_gdhwio2i": [155, 172], "dnnl_gdhwio4i": [155, 172], "dnnl_oi16i32o4i": [155, 172], "dnnl_oi16i48o4i": [155, 172], "dnnl_oi16i64o4i": [155, 172], "dnnl_oi16i16o2i": [155, 172], "dnnl_oi16i32o2i": [155, 172], "dnnl_oi16i48o2i": [155, 172], "dnnl_oi16i64o2i": [155, 172], "dnnl_oiw16i32o4i": [155, 172], "dnnl_oiw16i48o4i": [155, 172], "dnnl_oiw16i64o4i": [155, 172], "dnnl_oiw16i32o2i": [155, 172], "dnnl_oiw16i48o2i": [155, 172], "dnnl_oiw16i64o2i": [155, 172], "dnnl_oihw16i32o4i": [155, 172], "dnnl_oihw16i48o4i": [155, 172], "dnnl_oihw16i64o4i": [155, 172], "dnnl_oihw16i32o2i": [155, 172], "dnnl_oihw16i48o2i": [155, 172], "dnnl_oihw16i64o2i": [155, 172], "dnnl_oidhw16i32o4i": [155, 172], "dnnl_oidhw16i48o4i": [155, 172], "dnnl_oidhw16i64o4i": [155, 172], "dnnl_oidhw16i32o2i": [155, 172], "dnnl_oidhw16i48o2i": [155, 172], "dnnl_oidhw16i64o2i": [155, 172], "dnnl_owi16i16o2i": [155, 172], "dnnl_owi16i16o4i": [155, 172], "dnnl_ohwi16i16o2i": [155, 172], "dnnl_ohwi16i16o4i": [155, 172], "dnnl_odhwi16i16o2i": [155, 172], "dnnl_odhwi16i16o4i": [155, 172], "dnnl_iwo16o16i2o": [155, 172], "dnnl_iwo16o16i4o": [155, 172], "dnnl_ihwo16o16i2o": [155, 172], "dnnl_ihwo16o16i4o": [155, 172], "dnnl_idhwo16o16i2o": [155, 172], "dnnl_idhwo16o16i4o": [155, 172], "dnnl_gowi16i16o2i": [155, 172], "dnnl_gowi16i16o4i": [155, 172], "dnnl_gohwi16i16o2i": [155, 172], "dnnl_gohwi16i16o4i": [155, 172], "dnnl_godhwi16i16o2i": [155, 172], "dnnl_godhwi16i16o4i": [155, 172], "dnnl_giwo16o16i2o": [155, 172], "dnnl_giwo16o16i4o": [155, 172], "dnnl_gihwo16o16i2o": [155, 172], "dnnl_gihwo16o16i4o": [155, 172], "dnnl_gidhwo16o16i2o": [155, 172], "dnnl_gidhwo16o16i4o": [155, 172], "dnnl_owi16i32o2i": [155, 172], "dnnl_owi16i32o4i": [155, 172], "dnnl_owi16i48o2i": [155, 172], "dnnl_owi16i48o4i": [155, 172], "dnnl_owi16i64o2i": [155, 172], "dnnl_owi16i64o4i": [155, 172], "dnnl_iwo16o32i2o": [155, 172], "dnnl_iwo16o32i4o": [155, 172], "dnnl_iwo16o48i2o": [155, 172], "dnnl_iwo16o48i4o": [155, 172], "dnnl_iwo16o64i2o": [155, 172], "dnnl_iwo16o64i4o": [155, 172], "dnnl_gowi16i32o2i": [155, 172], "dnnl_gowi16i32o4i": [155, 172], "dnnl_gowi16i48o2i": [155, 172], "dnnl_gowi16i48o4i": [155, 172], "dnnl_gowi16i64o2i": [155, 172], "dnnl_gowi16i64o4i": [155, 172], "dnnl_giwo16o32i2o": [155, 172], "dnnl_giwo16o32i4o": [155, 172], "dnnl_giwo16o48i2o": [155, 172], "dnnl_giwo16o48i4o": [155, 172], "dnnl_giwo16o64i2o": [155, 172], "dnnl_giwo16o64i4o": [155, 172], "dnnl_ohwi16i32o2i": [155, 172], "dnnl_ohwi16i32o4i": [155, 172], "dnnl_ohwi16i48o2i": [155, 172], "dnnl_ohwi16i48o4i": [155, 172], "dnnl_ohwi16i64o2i": [155, 172], "dnnl_ohwi16i64o4i": [155, 172], "dnnl_ihwo16o32i2o": [155, 172], "dnnl_ihwo16o32i4o": [155, 172], "dnnl_ihwo16o48i2o": [155, 172], "dnnl_ihwo16o48i4o": [155, 172], "dnnl_ihwo16o64i2o": [155, 172], "dnnl_ihwo16o64i4o": [155, 172], "dnnl_gohwi16i32o2i": [155, 172], "dnnl_gohwi16i32o4i": [155, 172], "dnnl_gohwi16i48o2i": [155, 172], "dnnl_gohwi16i48o4i": [155, 172], "dnnl_gohwi16i64o2i": [155, 172], "dnnl_gohwi16i64o4i": [155, 172], "dnnl_gihwo16o32i2o": [155, 172], "dnnl_gihwo16o32i4o": [155, 172], "dnnl_gihwo16o48i2o": [155, 172], "dnnl_gihwo16o48i4o": [155, 172], "dnnl_gihwo16o64i2o": [155, 172], "dnnl_gihwo16o64i4o": [155, 172], "dnnl_odhwi16i32o2i": [155, 172], "dnnl_odhwi16i32o4i": [155, 172], "dnnl_odhwi16i48o2i": [155, 172], "dnnl_odhwi16i48o4i": [155, 172], "dnnl_odhwi16i64o2i": [155, 172], "dnnl_odhwi16i64o4i": [155, 172], "dnnl_idhwo16o32i2o": [155, 172], "dnnl_idhwo16o32i4o": [155, 172], "dnnl_idhwo16o48i2o": [155, 172], "dnnl_idhwo16o48i4o": [155, 172], "dnnl_idhwo16o64i2o": [155, 172], "dnnl_idhwo16o64i4o": [155, 172], "dnnl_godhwi16i32o2i": [155, 172], "dnnl_godhwi16i32o4i": [155, 172], "dnnl_godhwi16i48o2i": [155, 172], "dnnl_godhwi16i48o4i": [155, 172], "dnnl_godhwi16i64o2i": [155, 172], "dnnl_godhwi16i64o4i": [155, 172], "dnnl_gidhwo16o32i2o": [155, 172], "dnnl_gidhwo16o32i4o": [155, 172], "dnnl_gidhwo16o48i2o": [155, 172], "dnnl_gidhwo16o48i4o": [155, 172], "dnnl_gidhwo16o64i2o": [155, 172], "dnnl_gidhwo16o64i4o": [155, 172], "dnnl_hwiog16g": [155, 172], "dnnl_hwiog8g": [155, 172], "dnnl_ncdhw40n16c": [155, 172], "dnnl_ncw40n16c": [155, 172], "dnnl_nchw40n16c": [155, 172], "dnnl_ncw40n32c": [155, 172], "dnnl_nchw40n32c": [155, 172], "dnnl_ncdhw40n32c": [155, 172], "dnnl_oidhw4o8i8o2i": [155, 172], "dnnl_oihw4o8i8o2i": [155, 172], "dnnl_oiw4o8i8o2i": [155, 172], "dnnl_goidhw4o8i8o2i": [155, 172], "dnnl_goihw4o8i8o2i": [155, 172], "dnnl_goiw4o8i8o2i": [155, 172], "dnnl_iodhw4i8o8i2o": [155, 172], "dnnl_iohw4i8o8i2o": [155, 172], "dnnl_iow4i8o8i2o": [155, 172], "dnnl_giodhw4i8o8i2o": [155, 172], "dnnl_giohw4i8o8i2o": [155, 172], "dnnl_giow4i8o8i2o": [155, 172], "dnnl_ncw2c32n8c": [155, 172], "dnnl_nchw2c32n8c": [155, 172], "dnnl_ncdhw2c32n8c": [155, 172], "dnnl_oiw2i8o16i4o": [155, 172], "dnnl_oihw2i8o16i4o": [155, 172], "dnnl_oidhw2i8o16i4o": [155, 172], "dnnl_oiw2o8i16o4i": [155, 172], "dnnl_oiw2o8i16o2i": [155, 172], "dnnl_iow2i8o16i4o": [155, 172], "dnnl_iow2i8o16i2o": [155, 172], "dnnl_oihw2o8i16o4i": [155, 172], "dnnl_oihw2o8i16o2i": [155, 172], "dnnl_iohw2i8o16i4o": [155, 172], "dnnl_iohw2i8o16i2o": [155, 172], "dnnl_oidhw2o8i16o4i": [155, 172], "dnnl_oidhw2o8i16o2i": [155, 172], "dnnl_iodhw2i8o16i4o": [155, 172], "dnnl_iodhw2i8o16i2o": [155, 172], "dnnl_goiw2o8i16o2i": [155, 172], "dnnl_giow2i8o16i2o": [155, 172], "dnnl_giohw2i8o16i2o": [155, 172], "dnnl_giodhw2i8o16i2o": [155, 172], "dnnl_goihw2o8i16o2i": [155, 172], "dnnl_goidhw2o8i16o2i": [155, 172], "dnnl_goiw2o8i16o4i": [155, 172], "dnnl_goihw2o8i16o4i": [155, 172], "ndhwc": [155, 172], "data_in_ncdhw": 155, "data_in_ndhwc": 155, "dnnl_memory_desc_destroi": [155, 199, 206, 211, 234, 256, 310, 319, 326], "agnost": [155, 172, 256], "aka": [155, 174, 208, 209, 330], "alia": [155, 172, 179, 180, 262, 298], "6d": [155, 172], "7d": [155, 172], "8d": [155, 172], "9d": [155, 172], "10d": [155, 172], "11d": [155, 172], "2nd": [155, 172], "sentinel": 155, "incl": 155, "seq_length": [155, 172], "num_lay": [155, 172], "num_direct": [155, 172], "input_channel": [155, 172], "num_gat": [155, 172], "output_channel": [155, 172], "num_channels_in_hidden_st": [155, 172], "num_channels_in_recurrent_project": [155, 172], "dnnl_fpmath_mode_strict": [156, 157, 239, 250, 267], "dnnl_fpmath_mode_bf16": [156, 157, 239, 250, 267], "dnnl_fpmath_mode_f16": [156, 157, 239, 250, 267], "dnnl_fpmath_mode_tf32": [156, 157, 239, 250, 267], "dnnl_fpmath_mode_ani": [156, 157, 239, 250, 267], "dnnl_graph_layout_type_undef": [158, 160], "dnnl_graph_layout_type_ani": [158, 160, 283], "dnnl_graph_layout_type_strid": [158, 160, 283, 402], "dnnl_graph_layout_type_opaqu": [158, 160, 402], "dnnl_graph_tensor_property_undef": [161, 169], "dnnl_graph_tensor_property_vari": [161, 169], "dnnl_graph_tensor_property_const": [161, 169], "unchang": [161, 169, 262, 456], "dnnl_graph_op_attr_undef": [162, 163], "dnnl_graph_op_attr_alpha": [162, 163], "dnnl_graph_op_attr_beta": [162, 163], "dnnl_graph_op_attr_epsilon": [162, 163], "dnnl_graph_op_attr_max": [162, 163], "dnnl_graph_op_attr_min": [162, 163], "dnnl_graph_op_attr_momentum": [162, 163], "dnnl_graph_op_attr_scal": [162, 163], "dnnl_graph_op_attr_axi": [162, 163], "dnnl_graph_op_attr_begin_norm_axi": [162, 163], "dnnl_graph_op_attr_group": [162, 163], "dnnl_graph_op_attr_ax": [162, 163], "dnnl_graph_op_attr_dil": [162, 163], "dnnl_graph_op_attr_dst_shap": [162, 163], "dnnl_graph_op_attr_kernel": [162, 163], "dnnl_graph_op_attr_ord": [162, 163], "dnnl_graph_op_attr_output_pad": [162, 163], "dnnl_graph_op_attr_pads_begin": [162, 163], "dnnl_graph_op_attr_pads_end": [162, 163], "dnnl_graph_op_attr_shap": [162, 163], "dnnl_graph_op_attr_s": [162, 163], "dnnl_graph_op_attr_src_shap": [162, 163], "dnnl_graph_op_attr_strid": [162, 163], "dnnl_graph_op_attr_weights_shap": [162, 163], "dnnl_graph_op_attr_zp": [162, 163], "dnnl_graph_op_attr_exclude_pad": [162, 163], "dnnl_graph_op_attr_keep_dim": [162, 163], "dnnl_graph_op_attr_keep_stat": [162, 163], "dnnl_graph_op_attr_per_channel_broadcast": [162, 163], "dnnl_graph_op_attr_special_zero": [162, 163], "dnnl_graph_op_attr_transpose_a": [162, 163], "dnnl_graph_op_attr_transpose_b": [162, 163], "dnnl_graph_op_attr_use_affin": [162, 163], "dnnl_graph_op_attr_use_dst": [162, 163], "dnnl_graph_op_attr_auto_broadcast": [162, 163], "dnnl_graph_op_attr_auto_pad": [162, 163], "dnnl_graph_op_attr_coordinate_transformation_mod": [162, 163], "dnnl_graph_op_attr_data_format": [162, 163, 402], "dnnl_graph_op_attr_mod": [162, 163], "dnnl_graph_op_attr_qtyp": [162, 163], "dnnl_graph_op_attr_rounding_typ": [162, 163], "dnnl_graph_op_attr_weights_format": [162, 163, 402], "illeg": 162, "weight_shap": [162, 163], "0x30": 163, "0x40": 163, "0x60": 163, "0x80": 163, "input_shap": 163, "dnnl_graph_op_ab": [164, 165], "absbackward": 164, "dnnl_graph_op_abs_backward": [164, 165], "dnnl_graph_op_add": [164, 165], "dnnl_graph_op_avg_pool": [164, 165], "dnnl_graph_op_avg_pool_backward": [164, 165], "batchnormforwardtrain": 164, "dnnl_graph_op_batch_norm_forward_train": [164, 165], "dnnl_graph_op_batch_norm_infer": [164, 165], "dnnl_graph_op_batch_norm_backward": [164, 165], "dnnl_graph_op_bias_add": [164, 165], "dnnl_graph_op_bias_add_backward": [164, 165], "dnnl_graph_op_clamp": [164, 165], "clampbackward": 164, "dnnl_graph_op_clamp_backward": [164, 165], "dnnl_graph_op_concat": [164, 165], "dnnl_graph_op_convolut": [164, 165], "convolutionbackwarddata": 164, "dnnl_graph_op_convolution_backward_data": [164, 165], "dnnl_graph_op_convolution_backward_weight": [164, 165], "dnnl_graph_op_conv_transpos": [164, 165], "convtransposebackwarddata": 164, "dnnl_graph_op_conv_transpose_backward_data": [164, 165], "convtransposebackwardweight": 164, "dnnl_graph_op_conv_transpose_backward_weight": [164, 165], "dnnl_graph_op_dequant": [164, 165], "dnnl_graph_op_divid": [164, 165], "dynamicdequant": 164, "dnnl_graph_op_dynamic_dequant": [164, 165], "dynamicquant": 164, "dnnl_graph_op_dynamic_quant": [164, 165], "dnnl_graph_op_elu": [164, 165], "elubackward": 164, "dnnl_graph_op_elu_backward": [164, 165], "dnnl_graph_op_end": [164, 165], "dnnl_graph_op_exp": [164, 165], "dnnl_graph_op_gelu": [164, 165], "gelubackward": 164, "dnnl_graph_op_gelu_backward": [164, 165], "dnnl_graph_op_hard_swish": [164, 165], "hardswishbackward": 164, "dnnl_graph_op_hard_swish_backward": [164, 165], "dnnl_graph_op_interpol": [164, 165], "interpolatebackward": 164, "dnnl_graph_op_interpolate_backward": [164, 165], "dnnl_graph_op_layer_norm": [164, 165], "layernormbackward": 164, "dnnl_graph_op_layer_norm_backward": [164, 165], "dnnl_graph_op_leaky_relu": [164, 165], "dnnl_graph_op_log": [164, 165], "dnnl_graph_op_log_softmax": [164, 165], "logsoftmaxbackward": 164, "dnnl_graph_op_log_softmax_backward": [164, 165], "dnnl_graph_op_matmul": [164, 165], "dnnl_graph_op_maximum": [164, 165], "dnnl_graph_op_max_pool": [164, 165], "maxpoolbackward": 164, "dnnl_graph_op_max_pool_backward": [164, 165], "dnnl_graph_op_minimum": [164, 165], "dnnl_graph_op_mish": [164, 165], "mishbackward": 164, "dnnl_graph_op_mish_backward": [164, 165], "dnnl_graph_op_multipli": [164, 165], "dnnl_graph_op_prelu": [164, 165], "prelubackward": 164, "dnnl_graph_op_prelu_backward": [164, 165], "dnnl_graph_op_quant": [164, 165], "dnnl_graph_op_reciproc": [164, 165], "dnnl_graph_op_reduce_l1": [164, 165], "dnnl_graph_op_reduce_l2": [164, 165], "dnnl_graph_op_reduce_max": [164, 165], "dnnl_graph_op_reduce_mean": [164, 165], "dnnl_graph_op_reduce_min": [164, 165], "dnnl_graph_op_reduce_prod": [164, 165], "dnnl_graph_op_reduce_sum": [164, 165], "dnnl_graph_op_relu": [164, 165], "dnnl_graph_op_relu_backward": [164, 165], "dnnl_graph_op_reord": [164, 165], "dnnl_graph_op_round": [164, 165], "dnnl_graph_op_sigmoid": [164, 165], "sigmoidbackward": 164, "dnnl_graph_op_sigmoid_backward": [164, 165], "dnnl_graph_op_softmax": [164, 165], "softmaxbackward": 164, "dnnl_graph_op_softmax_backward": [164, 165], "dnnl_graph_op_softplu": [164, 165], "softplusbackward": 164, "dnnl_graph_op_softplus_backward": [164, 165], "dnnl_graph_op_sqrt": [164, 165], "sqrtbackward": 164, "dnnl_graph_op_sqrt_backward": [164, 165], "dnnl_graph_op_squar": [164, 165], "squareddiffer": 164, "dnnl_graph_op_squared_differ": [164, 165], "staticreshap": 164, "dnnl_graph_op_static_reshap": [164, 165], "statictranspos": 164, "dnnl_graph_op_static_transpos": [164, 165], "dnnl_graph_op_subtract": [164, 165], "dnnl_graph_op_tanh": [164, 165], "tanhbackward": 164, "dnnl_graph_op_tanh_backward": [164, 165], "dnnl_graph_op_type_cast": [164, 165], "dnnl_graph_op_wildcard": [164, 165], "lastsymbol": 164, "dnnl_graph_op_last_symbol": [164, 165], "dnnl_graph_partition_policy_fus": [166, 167], "dnnl_graph_partition_policy_debug": [166, 167], "chian": [166, 167], "dnnl_success": [168, 189, 190, 199, 206, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 281, 283, 284, 285, 287, 288, 297, 310, 319], "out_of_memori": [168, 189], "dnnl_out_of_memori": [168, 189, 190], "invalid_argu": [168, 189, 223, 260, 267, 330], "dnnl_invalid_argu": [168, 189, 190, 239, 256, 260, 267, 277, 278, 279], "last_impl_reach": [168, 189], "dnnl_last_impl_reach": [168, 189, 190, 262], "runtime_error": [168, 189, 267], "dnnl_runtime_error": [168, 189, 190, 267], "not_requir": [168, 189], "dnnl_not_requir": [168, 189, 190, 262], "invalid_graph": 168, "dnnl_invalid_graph": [168, 190], "invalid_graph_op": 168, "dnnl_invalid_graph_op": [168, 190], "invalid_shap": 168, "dnnl_invalid_shap": [168, 190], "invalid_data_typ": 168, "dnnl_invalid_data_typ": [168, 190], "request": [168, 189, 190, 249, 262, 296, 457], "reach": [168, 189, 190, 456], "legitim": [168, 190], "bca": 172, "cba": 172, "abdc": 172, "acbd": 172, "adbc": 172, "bacd": 172, "bcda": 172, "cdba": 172, "dcab": 172, "abdec": 172, "bcdea": 172, "cdeba": 172, "decab": 172, "abcdef": 172, "abdfc": 172, "acbdef": 172, "abdefc": 172, "defcab": 172, "abcdf": 172, "abcdefg": 172, "abcdegf": 172, "abcdefgh": 172, "abcdefhg": 172, "abcdefghi": 172, "abcdefgih": 172, "abcdefghij": 172, "abcdefghji": 172, "abcdefghijk": 172, "abcdefghikj": 172, "abcdefghijkl": 172, "abcdefghijlk": 172, "cn": [172, 256], "tn": 172, "nt": 172, "nwc": 172, "chwn": [172, 330], "io": [172, 207, 320], "owi": 172, "wio": 172, "iwo": 172, "hwio": 172, "ohwi": 172, "ihwo": 172, "iohw": 172, "dhwio": 172, "odhwi": 172, "iodhw": 172, "idhwo": 172, "gowi": 172, "wigo": 172, "gohwi": 172, "giohw": 172, "giodhw": 172, "godhwi": 172, "dhwigo": 172, "ntc": 172, "ldigo": [172, 195, 208, 209, 220, 229, 302, 322, 323, 341, 357], "ldgoi": 172, "ldio": 172, "ldoi": 172, "ldgo": [172, 195, 208, 209, 220, 229, 302, 322, 323, 341, 357], "ab16b16a": 172, "ab16b32a": 172, "ab16b64a": 172, "ab8b16a2b": 172, "ab8b32a2b": 172, "ab8b64a2b": 172, "ab4b16a4b": 172, "ab4b32a4b": 172, "ab4b64a4b": 172, "ab16b16a4b": 172, "ab16b32a4b": 172, "ab16b48a4b": 172, "ab16b64a4b": 172, "ab16b16a2b": 172, "ab16b32a2b": 172, "ab16b48a2b": 172, "ab16b64a2b": 172, "abc16a": 172, "abc16a16b": 172, "abc4a4b": 172, "abc16b": 172, "abc32b": 172, "abc16b16a": 172, "abc16b32a": 172, "abc16b64a": 172, "abc4a": 172, "abc4b": 172, "abc4b16a4b": 172, "abc4b32a4b": 172, "abc4b64a4b": 172, "abc2b8a4b": 172, "abc16a16b2a": 172, "abc16b16a4b": 172, "abc16b32a4b": 172, "abc16b48a4b": 172, "abc16b64a4b": 172, "abc16b16a2b": 172, "abc16b32a2b": 172, "abc16b48a2b": 172, "abc16b64a2b": 172, "abc4b4a": 172, "abc8a16b2a": 172, "abc8a8b": 172, "abc8a4b": 172, "abc8b": 172, "abc8b16a2b": 172, "abc8b32a2b": 172, "abc8b64a2b": 172, "abc8b8a": 172, "abcd8a": 172, "abcd16a": 172, "abcd32a": 172, "abcd16a16b": 172, "abcd16b": [172, 346], "abcd32b": 172, "abcd16b16a": 172, "abcd16b32a": 172, "abcd16b64a": 172, "abcd16b16c": 172, "abcd16c16b": 172, "abcd4a": 172, "abcd4b": 172, "abcd4b16a4b": 172, "abcd4b32a4b": 172, "abcd4b64a4b": 172, "abcd2b8a4b": 172, "abcd4b4a": 172, "abcd4a4b": 172, "abcd4c16b4c": 172, "abcd2c8b4c": 172, "abcd16a16b2a": 172, "abcd16b16a4b": 172, "abcd16b32a4b": 172, "abcd16b48a4b": 172, "abcd16b64a4b": 172, "abcd16b16a2b": 172, "abcd16b32a2b": 172, "abcd16b48a2b": 172, "abcd16b64a2b": 172, "abcd16b16c2b": 172, "abcd16c16b4c": 172, "abcd16c16b2c": 172, "abcd4c4b": 172, "abcd4b4c": 172, "abcd8a16b2a": 172, "abcd8a8b": 172, "abcd8a4b": 172, "abcd8a2b": 172, "abcd8b16a2b": 172, "abcd8b32a2b": 172, "abcd8b64a2b": 172, "abcd8b16c2b": 172, "abcd8b8c": 172, "abcd8b4c": 172, "abcd8c16b2c": 172, "abcd8c8b": 172, "abcde16a": 172, "abcde32a": 172, "abcde16a16b": 172, "abcde16b": 172, "abcde32b": 172, "abcde16b16a": 172, "abcde16b32a": 172, "abcde16b64a": 172, "abcde16b16c": 172, "abcde16c16b": 172, "abcde2c8b4c": 172, "abcde4a": 172, "abcde4b": 172, "abcde4b4a": 172, "abcde4a4b": 172, "abcde4b4c": 172, "abcde4c16b4c": 172, "abcde16b16c2b": 172, "abcde16c16b4c": 172, "abcde16c16b2c": 172, "abcdef16c16b2c": 172, "abcde4c4b": 172, "abcde8a": 172, "abcde8a8b": 172, "abcde8a4b": 172, "abcde8b": 172, "abcde8b16a2b": 172, "abcde8b32a2b": 172, "abcde8b64a2b": 172, "abcde4b16a4b": 172, "abcde4b32a4b": 172, "abcde4b64a4b": 172, "abcde16b16a4b": 172, "abcde16b32a4b": 172, "abcde16b48a4b": 172, "abcde16b64a4b": 172, "abcde16b16a2b": 172, "abcde16b32a2b": 172, "abcde16b48a2b": 172, "abcde16b64a2b": 172, "abcde2b8a4b": 172, "abcde8b16c2b": 172, "abcde8b8a": 172, "abcde8b8c": 172, "abcde8b4c": 172, "abcd4a8b8a4b": 172, "abcd2a8b8a2b": 172, "abcde4b8c8b4c": 172, "abcde2b8c8b2c": 172, "abcde8c16b2c": 172, "abcde8c8b": 172, "abcdef16b": 172, "abcdef16b16c": 172, "abcdef16c16b": 172, "abcdef4b": 172, "abcdef2c8b4c": 172, "abcdef4c4b": 172, "abcdef4b4c": 172, "abcdef8b8c": 172, "abcdef8b4c": 172, "abcdef8c16b2c": 172, "abcdef4c16b4c": 172, "abcdef8c8b": 172, "abdc16b": 172, "abdc4b": 172, "abdc8b": 172, "abdec16b": 172, "abdec4b": 172, "abdec8b": 172, "abdefc16b": 172, "acbdef16c16b": 172, "acbdef16b16c": 172, "abdefc4b": 172, "abdefc8b": 172, "acb16a": 172, "acb4a": 172, "acb8a": 172, "acbd16b16c": 172, "acbd16c16b": 172, "acbde16b16c": 172, "acbde16c16b": 172, "acdb16a": [172, 346], "acdb4a": 172, "acdb8a": 172, "acdeb16a": 172, "acdeb4a": 172, "acdeb8a": 172, "bac16a16b": 172, "bac16b16a": 172, "bacd16a16b": 172, "bacd16b16a": 172, "abcd32a32b": 172, "bacde16b16a": 172, "bacde16a16b": 172, "abdec32b": 172, "abcdef16a": 172, "abcdef32a": 172, "acdb32a": 172, "abcd2b4c2b": 172, "abcde2b4c2b": 172, "abcdef2b4c2b": 172, "abcd2c4b2c": 172, "abcde2c4b2c": 172, "abcdef2c4b2c": 172, "abcd4b8c2b": 172, "abcde4b8c2b": 172, "abcdef4b8c2b": 172, "abcd4c8b2c": 172, "abcde4c8b2c": 172, "abcdef4c8b2c": 172, "ab32a32b8a4b": 172, "ab32a32b8a2b": 172, "ab8a4b": 172, "ab8a2b": 172, "abdc32d": 172, "abdc32d4c": 172, "abcd32c": 172, "abdec32": 172, "abdec32e2c": 172, "abdec32e4c": 172, "abdce32c": 172, "abdce32c2": 172, "abcdef16c16b4c": 172, "abdc16b4c": 172, "abdec16b4c": 172, "acb16a4b": 172, "acdb16a2b": 172, "abdefc16b4c": 172, "acdeb16a4b": 172, "acb32a": 172, "acb32a2b": 172, "acb32a4b": 172, "acb48a": 172, "acb48a2b": 172, "acb48a4b": 172, "acb64a": 172, "acb64a2b": 172, "acb64a4b": 172, "cba2b": 172, "cba4b": 172, "abdc32b": 172, "abdc32b2c": 172, "abdc32b4c": 172, "abdc48b": 172, "abdc48b2c": 172, "abdc48b4c": 172, "abdc64b": 172, "abdc64b2c": 172, "abdc64b4c": 172, "adcb": 172, "adcb2c": 172, "adcb4c": 172, "acdb32a2b": 172, "acdb32a4b": 172, "acdb48a": 172, "acdb48a2b": 172, "acdb48a4b": 172, "acdb64a": 172, "acdb64a2b": 172, "acdb64a4b": 172, "cdba2b": 172, "cdba4b": 172, "abdec32b2c": 172, "abdec32b4c": 172, "abdec48b": 172, "abdec48b2c": 172, "abdec48b4c": 172, "abdec64b": 172, "abdec64b2c": 172, "abdec64b4c": 172, "adecb": 172, "adecb2c": 172, "adecb4c": 172, "acdeb32a": 172, "acdeb32a2b": 172, "acdeb32a4b": 172, "acdeb48a": 172, "acdeb48a2b": 172, "acdeb48a4b": 172, "acdeb64a": 172, "acdeb64a2b": 172, "acdeb64a4b": 172, "cdeba2b": 172, "cdeba4b": 172, "abdefc32b": 172, "abdefc32b2c": 172, "abdefc32b4c": 172, "abdefc48b": 172, "abdefc48b2c": 172, "abdefc48b4c": 172, "abdefc64b": 172, "abdefc64b2c": 172, "abdefc64b4c": 172, "adefcb": 172, "adefcb2c": 172, "adefcb4c": 172, "abc32a32b": 172, "bac8a16b2a": 172, "bacd8a16b2a": 172, "abcde8a16b2a": 172, "acbd8b16c2b": 172, "bacde8a16b2a": 172, "acbde8b16c2b": 172, "abcde32a32b": 172, "abc4a8b8a4b": 172, "abcde4a8b8a4b": 172, "bac4b8a8b4a": 172, "bacd4b8a8b4a": 172, "bacde4b8a8b4a": 172, "abcd4b8c8b4c": 172, "abcdef4b8c8b4c": 172, "abcdef8b16c2b": 172, "acbdef8b16c2b": 172, "abdc16b2c": 172, "abdec16b2c": 172, "abdefc16b2c": 172, "abedc16b": 172, "acb16a2b": 172, "acdb16a4b": 172, "acdeb16a2b": 172, "adcb16a": 172, "acbd4c8b8c4b": 172, "acbde4c8b8c4b": 172, "acbdef4c8b8c4b": 172, "abc32a16b": 172, "abcd16a32b": 172, "abcd32a16b": 172, "abcde32a16b": 172, "ab48a16b": 172, "ab48a32b": 172, "abc40a16b": 172, "abc40a32b": 172, "abc48b16c": 172, "abc48b32c": 172, "abcd40a16b": 172, "abcd40a32b": 172, "ba16a16b": 172, "ba16a32b": 172, "ba16a48b": 172, "ba16a64b": 172, "ba16a16b2a": 172, "ba16a32b2a": 172, "ba16a48b2a": 172, "ba16a64b2a": 172, "ba16a16b4a": 172, "ba16a32b4a": 172, "ba16a48b4a": 172, "ba16a64b4a": 172, "decba16a": 172, "decba8a": 172, "acb16b16c": 172, "acb16b32c": 172, "acb16b48c": 172, "acb16b64c": 172, "acb16b16c2b": 172, "acb16b32c2b": 172, "acb16b48c2b": 172, "acb16b64c2b": 172, "acb16b16c4b": 172, "acb16b32c4b": 172, "acb16b48c4b": 172, "acb16b64c4b": 172, "format_tag_last": 172, "ncdhw16c": 172, "ncdhw4c": 172, "ncdhw8c": 172, "nchw4c": 172, "ncw16c": 172, "ncw4c": 172, "ncw8c": 172, "ncw16n16c": 172, "nchw16n16c": 172, "ncdhw16n16c": 172, "ncdhw32n32c": 172, "nchw32n32c": 172, "iohw16i16o": 172, "oi16i16o": 172, "oi16i32o": 172, "oi16i64o": 172, "oi8i16o2i": 172, "oi8i32o2i": 172, "oi8i64o2i": 172, "oi4i16o4i": 172, "oi4i32o4i": 172, "oi4i64o4i": 172, "ohwi32o": 172, "iodhw16i16o": 172, "giohw16i16o": 172, "gohwi32o": 172, "goidhw16g": 172, "iow16o16i": 172, "oiw16i16o": 172, "oiw16i32o": 172, "oiw16i64o": 172, "iow16i16o": 172, "giow16i16o": 172, "oiw16o16i": 172, "oiw16o": 172, "oiw4i16o4i": 172, "oiw4i32o4i": 172, "oiw4i64o4i": 172, "oiw2i8o4i": 172, "oiw4i4o": 172, "oiw4o4i": 172, "oiw4o": 172, "oiw8i16o2i": 172, "oiw8i32o2i": 172, "oiw8i64o2i": 172, "oiw8i8o": 172, "oiw8o16i2o": 172, "oiw8o8i": 172, "oiw8o4i": 172, "oiw16i16o4i": 172, "oiw16i32o4i": 172, "oiw16i48o4i": 172, "oiw16i64o4i": 172, "oiw16i16o2i": 172, "oiw16i32o2i": 172, "oiw16i48o2i": 172, "oiw16i64o2i": 172, "oiw16o16i2o": 172, "owi16o": 172, "owi16o2i": 172, "iwo16i": 172, "iwo16i2o": 172, "iwo16i4o": 172, "owi4o": 172, "owi8o": 172, "iohw16o16i": 172, "ohwi16o": 172, "ohwi16o2i": 172, "ihwo16i": 172, "ihwo16i2o": 172, "ihwo16i4o": 172, "ohwi4o": 172, "ohwi8o": 172, "oihw16i16o": 172, "oihw16i32o": 172, "oihw16i64o": 172, "oihw16o16i": 172, "oihw16o": 172, "oihw4i16o4i": 172, "oihw4i32o4i": 172, "oihw4i64o4i": 172, "oihw4i4o": 172, "oihw4o4i": 172, "oihw4o": 172, "oihw8i16o2i": 172, "oihw8i32o2i": 172, "oihw8i64o2i": 172, "oihw8i8o": 172, "oihw8o16i2o": 172, "oihw8o8i": 172, "oihw8o4i": 172, "oihw2i8o4i": 172, "iodhw16o16i": 172, "odhwi16o": 172, "odhwi16o2i": 172, "idhwo16i": 172, "idhwo16i2o": 172, "idhwo16i4o": 172, "odhwi4o": 172, "odhwi8o": 172, "oidhw16i16o": 172, "oidhw16i32o": 172, "oidhw16i64o": 172, "oidhw16o16i": 172, "oidhw16o16i2o": 172, "oidhw16o": 172, "oidhw4i4o": 172, "oidhw4o4i": 172, "oidhw4o": 172, "oidhw8i16o2i": 172, "oidhw8i32o2i": 172, "oidhw8i64o2i": 172, "oidhw4i16o4i": 172, "oidhw16i16o4i": 172, "oidhw16i32o4i": 172, "oidhw16i48o4i": 172, "oidhw16i64o4i": 172, "oidhw16i16o2i": 172, "oidhw16i32o2i": 172, "oidhw16i48o2i": 172, "oidhw16i64o2i": 172, "oidhw4i32o4i": 172, "oidhw4i64o4i": 172, "oidhw2i8o4i": 172, "oidhw8i8o": 172, "oidhw8o8i": 172, "oidhw8o4i": 172, "giow16o16i": 172, "goiw16i16o": 172, "goiw16o16i": 172, "goiw16o": 172, "goiw4i16o4i": 172, "goiw2i8o4i": 172, "goiw4i4o": 172, "goiw4o4i": 172, "goiw4o": 172, "goiw8i16o2i": 172, "goiw8i8o": 172, "goiw8o16i2o": 172, "goiw8o8i": 172, "goiw8o4i": 172, "goiw16i16o4i": 172, "goiw16i16o2i": 172, "goiw16o16i2o": 172, "gowi16o": 172, "gowi16o2i": 172, "giwo16i": 172, "giwo16i2o": 172, "giwo16i4o": 172, "gowi4o": 172, "gowi8o": 172, "goiw8g": 172, "goiw16g": 172, "giohw16o16i": 172, "gohwi16o": 172, "gohwi16o2i": 172, "gihwo16i": 172, "gihwo16i2o": 172, "gihwo16i4o": 172, "gohwi4o": 172, "gohwi8o": 172, "goihw16g": 172, "goihw16i16o": 172, "goihw16o16i": 172, "goihw16o": 172, "goihw4i16o4i": 172, "goihw2i8o4i": 172, "goihw4i4o": 172, "goihw4o4i": 172, "goihw4o": 172, "goihw8g": 172, "goihw8i16o2i": 172, "goihw8i8o": 172, "goihw8o16i2o": 172, "oiw4o8i8o4i": 172, "oidhw4o8i8o4i": 172, "oihw4o8i8o4i": 172, "oihw2o8i8o2i": 172, "goiw4o8i8o4i": 172, "goidhw4o8i8o4i": 172, "goihw4o8i8o4i": 172, "goihw2o8i8o2i": 172, "oihw16i16o4i": 172, "oihw16i32o4i": 172, "oihw16i48o4i": 172, "oihw16i64o4i": 172, "oihw16i16o2i": 172, "oihw16i32o2i": 172, "oihw16i48o2i": 172, "oihw16i64o2i": 172, "oihw16o16i2o": 172, "goihw16i16o4i": 172, "goihw16i16o2i": 172, "goihw16o16i2o": 172, "goihw8o8i": 172, "goihw8o4i": 172, "giodhw16i16o": 172, "giodhw16o16i": 172, "godhwi16o": 172, "godhwi16o2i": 172, "gidhwo16i": 172, "gidhwo16i2o": 172, "gidhwo16i4o": 172, "godhwi4o": 172, "godhwi8o": 172, "goidhw16i16o": 172, "goidhw16o16i": 172, "goidhw16o16i2o": 172, "goidhw16o": 172, "goidhw4i4o": 172, "goidhw4o4i": 172, "goidhw4o": 172, "goidhw8i16o2i": 172, "goidhw4i16o4i": 172, "goidhw16i16o4i": 172, "goidhw16i16o2i": 172, "goidhw2i8o4i": 172, "goidhw8i8o": 172, "goidhw8o8i": 172, "goidhw8o4i": 172, "goiw2i4o2i": 172, "goihw2i4o2i": 172, "goidhw2i4o2i": 172, "goiw2o4i2o": 172, "goihw2o4i2o": 172, "goidhw2o4i2o": 172, "goiw4i8o2i": 172, "goihw4i8o2i": 172, "goidhw4i8o2i": 172, "goiw4o8i2o": 172, "goihw4o8i2o": 172, "goidhw4o8i2o": 172, "ldoi32o": 172, "ldoi32o4i": 172, "ldgoi32o": 172, "ldgoi32o2i": 172, "ldgoi32o4i": 172, "owi16o4i": 172, "ohwi16o4i": 172, "gowi16o4i": 172, "gohwi16o4i": 172, "odhwi16o4i": 172, "godhwi16o4i": 172, "owi32o": 172, "owi32o2i": 172, "owi32o4i": 172, "owi48o": 172, "owi48o2i": 172, "owi48o4i": 172, "owi64o": 172, "owi64o2i": 172, "owi64o4i": 172, "iwo32i": 172, "iwo32i2o": 172, "iwo32i4o": 172, "iwo48i": 172, "iwo48i2o": 172, "iwo48i4o": 172, "iwo64i": 172, "iwo64i2o": 172, "iwo64i4o": 172, "wio2i": 172, "wio4i": 172, "gowi32o": 172, "gowi32o2i": 172, "gowi32o4i": 172, "gowi48o": 172, "gowi48o2i": 172, "gowi48o4i": 172, "gowi64o": 172, "gowi64o2i": 172, "gowi64o4i": 172, "giwo32i": 172, "giwo32i2o": 172, "giwo32i4o": 172, "giwo48i": 172, "giwo48i2o": 172, "giwo48i4o": 172, "giwo64i": 172, "giwo64i2o": 172, "giwo64i4o": 172, "gwio": 172, "gwio2i": 172, "gwio4i": 172, "ohwi32o2i": 172, "ohwi32o4i": 172, "ohwi48o": 172, "ohwi48o2i": 172, "ohwi48o4i": 172, "ohwi64o": 172, "ohwi64o2i": 172, "ohwi64o4i": 172, "ihwo32i": 172, "ihwo32i2o": 172, "ihwo32i4o": 172, "ihwo48i": 172, "ihwo48i2o": 172, "ihwo48i4o": 172, "ihwo64i": 172, "ihwo64i2o": 172, "ihwo64i4o": 172, "hwio2i": 172, "hwio4i": 172, "gohwi32o2i": 172, "gohwi32o4i": 172, "gohwi48o": 172, "gohwi48o2i": 172, "gohwi48o4i": 172, "gohwi64o": 172, "gohwi64o2i": 172, "gohwi64o4i": 172, "gihwo32i": 172, "gihwo32i2o": 172, "gihwo32i4o": 172, "gihwo48i": 172, "gihwo48i2o": 172, "gihwo48i4o": 172, "gihwo64i": 172, "gihwo64i2o": 172, "gihwo64i4o": 172, "ghwio": 172, "ghwio2i": 172, "ghwio4i": 172, "odhwi32o": 172, "odhwi32o2i": 172, "odhwi32o4i": 172, "odhwi48o": 172, "odhwi48o2i": 172, "odhwi48o4i": 172, "odhwi64o": 172, "odhwi64o2i": 172, "odhwi64o4i": 172, "idhwo32i": 172, "idhwo32i2o": 172, "idhwo32i4o": 172, "idhwo48i": 172, "idhwo48i2o": 172, "idhwo48i4o": 172, "idhwo64i": 172, "idhwo64i2o": 172, "idhwo64i4o": 172, "dhwio2i": 172, "dhwio4i": 172, "godhwi32o": 172, "godhwi32o2i": 172, "godhwi32o4i": 172, "godhwi48o": 172, "godhwi48o2i": 172, "godhwi48o4i": 172, "godhwi64o": 172, "godhwi64o2i": 172, "godhwi64o4i": 172, "gidhwo32i": 172, "gidhwo32i2o": 172, "gidhwo32i4o": 172, "gidhwo48i": 172, "gidhwo48i2o": 172, "gidhwo48i4o": 172, "gidhwo64i": 172, "gidhwo64i2o": 172, "gidhwo64i4o": 172, "gdhwio": 172, "gdhwio2i": 172, "gdhwio4i": 172, "ldio32i": 172, "ldgio32i": 172, "ldgio32i2o": 172, "ncdhw32c": 172, "nchw32c": 172, "ncw32c": 172, "ncw32n16c": 172, "nchw32n16c": 172, "ncdhw32n16c": 172, "ncw32n32c": 172, "oi16i16o4i": 172, "iow8o16i2o": 172, "iohw8o16i2o": 172, "owhi16o": 172, "oidhw8o16i2o": 172, "iodhw8o16i2o": 172, "goiw4g": 172, "giow8o16i2o": 172, "goiw32g": 172, "goihw4g": 172, "giohw8o16i2o": 172, "goihw32g": 172, "gowhi16o": 172, "iow4i8o8i4o": 172, "iohw4i8o8i4o": 172, "iodhw4i8o8i4o": 172, "giow4i8o8i4o": 172, "giohw4i8o8i4o": 172, "giodhw4i8o8i4o": 172, "goidhw8o16i2o": 172, "giodhw8o16i2o": 172, "goidhw32g": 172, "oi16i32o4i": 172, "oi16i48o4i": 172, "oi16i64o4i": 172, "oi16i16o2i": 172, "oi16i32o2i": 172, "oi16i48o2i": 172, "oi16i64o2i": 172, "abdec16c16b4c": 172, "acb16b16a2b": 172, "abdc16c16b2c": 172, "acb16b16a4b": 172, "abdc16c16b4c": 172, "acdb16b16a2b": 172, "abdefc16c16b4c": 172, "acdeb16b16a4b": 172, "acb16b32a2b": 172, "acb16b32a4b": 172, "acb16b48a2b": 172, "acb16b48a4b": 172, "acb16b64a2b": 172, "acb16b64a4b": 172, "abdc16c32b2c": 172, "abdc16c32b4c": 172, "abdc16c48b2c": 172, "abdc16c48b4c": 172, "abdc16c64b2c": 172, "abdc16c64b4c": 172, "acdb16b32a2b": 172, "acdb16b32a4b": 172, "acdb16b48a2b": 172, "acdb16b48a4b": 172, "acdb16b64a2b": 172, "acdb16b64a4b": 172, "abdec16c32b2c": 172, "abdec16c32b4c": 172, "abdec16c48b2c": 172, "abdec16c48b4c": 172, "abdec16c64b2c": 172, "abdec16c64b4c": 172, "acdeb16b32a2b": 172, "acdeb16b32a4b": 172, "acdeb16b48a2b": 172, "acdeb16b48a4b": 172, "acdeb16b64a2b": 172, "acdeb16b64a4b": 172, "abdefc16c32b2c": 172, "abdefc16c32b4c": 172, "abdefc16c48b2c": 172, "abdefc16c48b4c": 172, "abdefc16c64b2c": 172, "abdefc16c64b4c": 172, "owi16i16o2i": 172, "gowi16i16o2i": 172, "ohwi16i16o2i": 172, "gohwi16i16o2i": 172, "odhwi16i16o2i": 172, "godhwi16i16o2i": 172, "owi16i16o4i": 172, "gowi16i16o4i": 172, "ohwi16i16o4i": 172, "gohwi16i16o4i": 172, "odhwi16i16o4i": 172, "godhwi16i16o4i": 172, "owi16i32o2i": 172, "owi16i32o4i": 172, "owi16i48o2i": 172, "owi16i48o4i": 172, "owi16i64o2i": 172, "owi16i64o4i": 172, "gowi16i32o2i": 172, "gowi16i32o4i": 172, "gowi16i48o2i": 172, "gowi16i48o4i": 172, "gowi16i64o2i": 172, "gowi16i64o4i": 172, "ohwi16i32o2i": 172, "ohwi16i32o4i": 172, "ohwi16i48o2i": 172, "ohwi16i48o4i": 172, "ohwi16i64o2i": 172, "ohwi16i64o4i": 172, "gohwi16i32o2i": 172, "gohwi16i32o4i": 172, "gohwi16i48o2i": 172, "gohwi16i48o4i": 172, "gohwi16i64o2i": 172, "gohwi16i64o4i": 172, "odhwi16i32o2i": 172, "odhwi16i32o4i": 172, "odhwi16i48o2i": 172, "odhwi16i48o4i": 172, "odhwi16i64o2i": 172, "odhwi16i64o4i": 172, "idhwo16o32i2o": 172, "idhwo16o32i4o": 172, "idhwo16o48i2o": 172, "idhwo16o48i4o": 172, "idhwo16o64i2o": 172, "idhwo16o64i4o": 172, "godhwi16i32o2i": 172, "godhwi16i32o4i": 172, "godhwi16i48o2i": 172, "godhwi16i48o4i": 172, "godhwi16i64o2i": 172, "godhwi16i64o4i": 172, "gidhwo16o32i2o": 172, "gidhwo16o32i4o": 172, "gidhwo16o48i2o": 172, "gidhwo16o48i4o": 172, "gidhwo16o64i2o": 172, "gidhwo16o64i4o": 172, "iwo16o16i2o": 172, "iwo16o16i4o": 172, "ihwo16o16i2o": 172, "ihwo16o16i4o": 172, "idhwo16o16i2o": 172, "idhwo16o16i4o": 172, "giwo16o16i2o": 172, "giwo16o16i4o": 172, "gihwo16o16i2o": 172, "gihwo16o16i4o": 172, "gidhwo16o16i2o": 172, "gidhwo16o16i4o": 172, "iwo16o32i2o": 172, "iwo16o32i4o": 172, "iwo16o48i2o": 172, "iwo16o48i4o": 172, "iwo16o64i2o": 172, "iwo16o64i4o": 172, "giwo16o32i2o": 172, "giwo16o32i4o": 172, "giwo16o48i2o": 172, "giwo16o48i4o": 172, "giwo16o64i2o": 172, "giwo16o64i4o": 172, "ihwo16o32i2o": 172, "ihwo16o32i4o": 172, "ihwo16o48i2o": 172, "ihwo16o48i4o": 172, "ihwo16o64i2o": 172, "ihwo16o64i4o": 172, "gihwo16o32i2o": 172, "gihwo16o32i4o": 172, "gihwo16o48i2o": 172, "gihwo16o48i4o": 172, "gihwo16o64i2o": 172, "gihwo16o64i4o": 172, "abdec16c16b2c": 172, "abdefc16c16b2c": 172, "acdb16b16a4b": 172, "acdeb16b16a2b": 172, "hwiog16g": 172, "hwiog8g": 172, "abc4a2b": 172, "abc8a2b": 172, "abcd4a2b": 172, "abcde4a2b": 172, "abcde8a2b": 172, "abcd4a8b8a2b": 172, "ncdhw40n32c": 172, "nchw40n32c": 172, "ncw40n32c": 172, "oidhw4o8i8o2i": 172, "oihw4o8i8o2i": 172, "oiw4o8i8o2i": 172, "goidhw4o8i8o2i": 172, "goihw4o8i8o2i": 172, "goiw4o8i8o2i": 172, "iodhw4i8o8i2o": 172, "iohw4i8o8i2o": 172, "iow4i8o8i2o": 172, "giodhw4i8o8i2o": 172, "giohw4i8o8i2o": 172, "giow4i8o8i2o": 172, "abcd8b2c": 172, "abcde40a16b": 172, "abcde40a32b": 172, "abcde8b2c": 172, "abcde4a8b8a2b": 172, "abc4a8b8a2b": 172, "abcdef4b8c8b2c": 172, "abcde4b8c8b2c": 172, "abcd4b8c8b2c": 172, "bacde4b8a8b2a": 172, "bacd4b8a8b2a": 172, "bac4b8a8b2a": 172, "acbdef4c8b8c2b": 172, "acbde4c8b8c2b": 172, "acbd4c8b8c2b": 172, "abcdef8b2c": 172, "ab32a16b": 172, "ab32a32b": 172, "ba4b8a8b2a": 172, "ba4b8a8b4a": 172, "abc32b16c": 172, "abc32b32c": 172, "acb4c8b8c2b": 172, "acb4c8b8c4b": 172, "abc2b8a16b4a": 172, "abcd2b8a16b4a": 172, "abcde2b8a16b4a": 172, "abc2a8b16a4b": 172, "abc2a8b16a2b": 172, "abc2b32a8b": 172, "abcd2a8b16a4b": 172, "abcd2a8b16a2b": 172, "acbd2c8b16c2b": 172, "abcd2b32a8b": 172, "abcd2c8b16c2b": 172, "abcde2a8b16a4b": 172, "abcde2a8b16a2b": 172, "acbde2c8b16c2b": 172, "abcde2b32a8b": 172, "abc2b8c16b2c": 172, "abcd2b8c16b2c": 172, "abcde2b8c16b2c": 172, "abcdef2b8c16b2c": 172, "bacde2b8a16b4a": 172, "bacd2b8a16b4a": 172, "bac2b8a16b4a": 172, "bacde2b8a16b2a": 172, "bacd2b8a16b2a": 172, "bac2b8a16b2a": 172, "abcde2c8b16c2b": 172, "abcdef2c8b16c2b": 172, "acbdef2c8b16c2b": 172, "abcd2b8c16b4c": 172, "abcde2b8c16b4c": 172, "ncdhw40n16c": 172, "ncw40n16c": 172, "nchw40n16c": 172, "ncw2c32n8c": 172, "nchw2c32n8c": 172, "ncdhw2c32n8c": 172, "oiw2i8o16i4o": 172, "oihw2i8o16i4o": 172, "oidhw2i8o16i4o": 172, "oiw2o8i16o4i": 172, "oiw2o8i16o2i": 172, "iow2i8o16i4o": 172, "iow2i8o16i2o": 172, "oihw2o8i16o4i": 172, "oihw2o8i16o2i": 172, "iohw2i8o16i4o": 172, "iohw2i8o16i2o": 172, "oidhw2o8i16o4i": 172, "oidhw2o8i16o2i": 172, "iodhw2i8o16i4o": 172, "iodhw2i8o16i2o": 172, "goiw2o8i16o2i": 172, "giow2i8o16i2o": 172, "giohw2i8o16i2o": 172, "giodhw2i8o16i2o": 172, "goihw2o8i16o2i": 172, "goidhw2o8i16o2i": 172, "goiw2o8i16o4i": 172, "goihw2o8i16o4i": 172, "ba4b8a16b2a": 172, "ba4b8a16b4a": 172, "acb4c8b16c2b": 172, "acb4c8b16c4b": 172, "acb16c2b": 172, "acb16c4b": 172, "ba16b2a": 172, "ba16b4a": 172, "abc16b16c": 172, "abc16b32c": 172, "ab16a16b": 172, "ab16a32b": 172, "abcde16a16b2a": 172, "abcdef16b16c2b": 172, "acedb16a": 172, "abdfec16b": 172, "odwhi16o": 172, "godwhi16o": 172, "abdec64e2c": 172, "abdec64e4c": 172, "ldgoi64o2i": 172, "ldgoi64o4i": 172, "abcd4c": 172, "abcde4c": 172, "abcdef4c": 172, "abcde32c": 172, "abcdef32c": 172, "acdefb16b32c2b": 172, "acdefb16b32c4b": 172, "acdefb16b48c2b": 172, "acdefb16b48c4b": 172, "acdefb16b64c2b": 172, "acdefb16b64c4b": 172, "bcdea16a32b2a": 172, "bcdea16a32b4a": 172, "bcdea16a48b2a": 172, "bcdea16a48b4a": 172, "bcdea16a64b2a": 172, "bcdea16a64b4a": 172, "acdefb32c": 172, "acdefb32c2b": 172, "acdefb32c4b": 172, "acdefb48c": 172, "acdefb48c2b": 172, "acdefb48c4b": 172, "acdefb64c": 172, "acdefb64c2b": 172, "acdefb64c4b": 172, "bcdea32b": 172, "bcdea32b2a": 172, "bcdea32b4a": 172, "bcdea48b": 172, "bcdea48b2a": 172, "bcdea48b4a": 172, "bcdea64b": 172, "bcdea64b2a": 172, "bcdea64b4a": 172, "bca32b": 172, "bca32b2a": 172, "bca32b4a": 172, "bca48b": 172, "bca48b2a": 172, "bca48b4a": 172, "bca64b": 172, "bca64b2a": 172, "bca64b4a": 172, "acdb32c": 172, "acdb32c2b": 172, "acdb32c4b": 172, "acdb48c": 172, "acdb48c2b": 172, "acdb48c4b": 172, "acdb64c": 172, "acdb64c2b": 172, "acdb64c4b": 172, "bca16a16b2a": 172, "bca16a16b4a": 172, "bcda16a16b2a": 172, "bcda16a16b4a": 172, "bcdea16a16b2a": 172, "bcdea16a16b4a": 172, "acdb16b16c2b": 172, "acdb16b16c4b": 172, "acdeb16b16c2b": 172, "acdeb16b16c4b": 172, "acdefb16b16c2b": 172, "acdefb16b16c4b": 172, "bca16a32b2a": 172, "bca16a32b4a": 172, "bca16a48b2a": 172, "bca16a48b4a": 172, "bca16a64b2a": 172, "bca16a64b4a": 172, "acdb16b32c2b": 172, "acdb16b32c4b": 172, "acdb16b48c2b": 172, "acdb16b48c4b": 172, "acdb16b64c2b": 172, "acdb16b64c4b": 172, "bcda16a32b2a": 172, "bcda16a32b4a": 172, "bcda16a48b2a": 172, "bcda16a48b4a": 172, "bcda16a64b2a": 172, "bcda16a64b4a": 172, "acdeb16b32c2b": 172, "acdeb16b32c4b": 172, "acdeb16b48c2b": 172, "acdeb16b48c4b": 172, "acdeb16b64c2b": 172, "acdeb16b64c4b": 172, "bca16b": 172, "bca16b2a": 172, "bca16b4a": 172, "bcda16b": 172, "bcda16b2a": 172, "bcda16b4a": 172, "bcdea16b": 172, "bcdea16b2a": 172, "bcdea16b4a": 172, "acdb16c": 172, "acdb16c2b": 172, "acdb16c4b": 172, "acdeb16c": 172, "acdeb16c2b": 172, "acdeb16c4b": 172, "acdefb16c": 172, "acdefb16c2b": 172, "acdefb16c4b": 172, "bcda32b": 172, "bcda32b2a": 172, "bcda32b4a": 172, "bcda48b": 172, "bcda48b2a": 172, "bcda48b4a": 172, "bcda64b": 172, "bcda64b2a": 172, "bcda64b4a": 172, "acdeb32c": 172, "acdeb32c2b": 172, "acdeb32c4b": 172, "acdeb48c": 172, "acdeb48c2b": 172, "acdeb48c4b": 172, "acdeb64c": 172, "acdeb64c2b": 172, "acdeb64c4b": 172, "nchw16n32c": 172, "goiw4i": 172, "goiw32i": 172, "goihw4i": 172, "goihw32i": 172, "goidhw4i": 172, "goidhw32i": 172, "cab": 172, "cdab": 172, "cdeab": 172, "woi": 172, "hwoi": 172, "dhwoi": 172, "use_global_stat": 173, "use_scal": [173, 196, 218, 304, 336], "use_shift": [173, 196, 218, 304, 336], "fuse_norm_relu": [173, 196, 304], "fuse_norm_add_relu": 173, "0x0u": 174, "0x1u": [174, 192], "0x2u": [174, 192], "0x4u": 174, "0x8u": 174, "0x10u": 174, "wrt": [174, 207, 320], "dnnl_ocl_interop_usm": [175, 176, 257], "dnnl_ocl_interop_buff": [175, 176, 257], "dnnl_ocl_typ": 176, "dnnl_undefined_primit": [177, 178, 239], "dnnl_reorder": [177, 178], "dnnl_shuffl": [177, 178], "dnnl_concat": [177, 178], "dnnl_sum": [177, 178, 239], "dnnl_convolut": [177, 178, 239, 446], "dnnl_deconvolut": [177, 178], "dnnl_eltwis": [177, 178, 239], "dnnl_lrn": [177, 178], "dnnl_batch_norm": [177, 178], "dnnl_inner_product": [177, 178], "dnnl_rnn": [177, 178], "dnnl_binari": [177, 178, 239, 446], "dnnl_matmul": [177, 178], "dnnl_resampl": [177, 178], "dnnl_pool": [177, 178], "dnnl_reduct": [177, 178], "dnnl_prelu": [177, 178], "dnnl_softmax": [177, 178], "dnnl_layer_norm": [177, 178], "summat": [177, 183, 184, 477], "dnnl_gemm": 178, "dnnl_primitive_kind_max": 178, "dnnl_prop_kind_undef": [179, 180], "dnnl_forward": [179, 180, 199, 206, 211, 310, 319, 326], "dnnl_backward_weight": [179, 180], "backward_bia": 179, "dnnl_backward_bia": [179, 180], "160": 180, "192": [180, 200, 346], "193": 180, "dnnl_query_undef": [181, 182], "dnnl_query_engin": [181, 182], "primitive_kind": 181, "dnnl_query_primitive_kind": [181, 182], "num_of_inputs_s32": 181, "dnnl_query_num_of_inputs_s32": [181, 182, 262], "num_of_outputs_s32": 181, "dnnl_query_num_of_outputs_s32": [181, 182, 262], "time_estimate_f64": 181, "dnnl_query_time_estimate_f64": [181, 182], "dnnl_query_memory_consumption_s64": [181, 182], "scratchpad_engin": [181, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "dnnl_query_scratchpad_engin": [181, 182], "reorder_src_engin": 181, "dnnl_query_reorder_src_engin": [181, 182], "reorder_dst_engin": 181, "dnnl_query_reorder_dst_engin": [181, 182], "impl_info_str": [181, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "dnnl_query_impl_info_str": [181, 182, 262], "dnnl_query_prop_kind": [181, 182], "cache_blob_id_size_s64": 181, "dnnl_query_cache_blob_id_size_s64": [181, 182], "cache_blob_id": [181, 234, 257, 295], "dnnl_query_cache_blob_id": [181, 182], "dnnl_query_dil": [181, 182], "dnnl_query_padding_l": [181, 182], "dnnl_query_padding_r": [181, 182], "epsilon_f32": 181, "dnnl_query_epsilon_f32": [181, 182], "dnnl_query_flag": [181, 182], "alg_kind": [181, 234, 239, 241, 245, 247, 248, 254, 258, 263, 265, 269], "dnnl_query_alg_kind": [181, 182], "alpha_f32": 181, "dnnl_query_alpha_f32": [181, 182], "beta_f32": 181, "dnnl_query_beta_f32": [181, 182], "axis_s32": 181, "dnnl_query_axis_s32": [181, 182], "local_size_s64": 181, "dnnl_query_local_size_s64": [181, 182], "k_f32": 181, "dnnl_query_k_f32": [181, 182], "p_f32": 181, "dnnl_query_p_f32": [181, 182], "dnnl_query_factor": [181, 182], "cell_kind": [181, 466], "dnnl_query_cell_kind": [181, 182], "dnnl_query_direct": [181, 182], "activation_kind": 181, "dnnl_query_activation_kind": [181, 182], "dnnl_query_kernel": [181, 182], "group_size_s64": 181, "dnnl_query_group_size_s64": [181, 182], "src_md": [181, 196, 198, 199, 204, 213, 214, 217, 218, 219, 221, 224, 225, 226, 227, 228, 230, 231, 232, 304, 308, 310, 315, 328, 330, 334, 336, 339, 343, 347, 349, 351, 353, 355, 358, 360, 362, 457, 461], "dnnl_query_src_md": [181, 182, 199, 206, 262, 310, 319], "diff_src_md": 181, "dnnl_query_diff_src_md": [181, 182], "dnnl_query_weights_md": [181, 182, 199, 206, 262, 310, 319], "diff_weights_md": 181, "dnnl_query_diff_weights_md": [181, 182, 206, 319], "dst_md": [181, 196, 197, 199, 213, 217, 218, 219, 221, 224, 225, 226, 227, 228, 230, 231, 304, 306, 310, 328, 334, 336, 339, 343, 347, 349, 351, 353, 355, 358, 360, 457, 461], "dnnl_query_dst_md": [181, 182, 199, 206, 262, 310, 319], "diff_dst_md": 181, "dnnl_query_diff_dst_md": [181, 182, 206, 319], "dnnl_query_workspace_md": [181, 182, 199, 206, 262, 310, 319], "dnnl_query_scratchpad_md": [181, 182], "dnnl_query_exec_arg_md": [181, 182, 262, 272], "ndims_s32": 181, "dnnl_query_ndims_s32": [181, 182, 256], "dnnl_query_dim": [181, 182, 256], "dnnl_query_data_typ": [181, 182, 256], "submemory_offset_s64": 181, "dnnl_query_submemory_offset_s64": [181, 182, 256], "padded_dim": [181, 256, 262, 440], "dnnl_query_padded_dim": [181, 182, 256], "padded_offset": 181, "dnnl_query_padded_offset": [181, 182, 256], "dnnl_query_format_kind": [181, 182, 256], "inner_nblks_s32": 181, "dnnl_query_inner_nblks_s32": [181, 182, 256], "member": 181, "dnnl_query_t": [181, 234, 256, 262, 292], "estim": [181, 182], "submemori": [181, 182, 256, 440], "dnnl_query_some_md": 182, "dnnl_query_max": 182, "dnnl_primitive_desc_queri": [182, 234, 262], "agre": [182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "dnnl_query_": 182, "_engin": 182, "dnnl_engine_t": [182, 199, 206, 211, 234, 240, 241, 244, 245, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 280, 285, 287, 288, 310, 319, 326], "dnnl_primitive_kind_t": [182, 234, 239, 262, 292], "_s32": 182, "_s64": 182, "_f64": 182, "_str": 182, "char": [182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 267, 273, 284, 292, 297, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 328, 330, 331, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 399, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483, 484, 485], "_md": [182, 330, 346], "const_dnnl_memory_desc_t": [182, 199, 206, 234, 239, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 268, 269, 271, 272, 310, 319], "_pd": [182, 330], "const_dnnl_primitive_desc_t": [182, 234, 240, 245, 247, 248, 251, 253, 254, 258, 259, 262, 265, 266, 268, 269, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 441, 443, 447, 449, 452, 458, 460, 462, 464, 467, 469, 471, 473, 477, 480, 482], "dnnl_alg_kind_t": [182, 234, 239, 241, 245, 247, 248, 254, 258, 262, 263, 265, 266, 269, 292], "dnnl_rnn_direction_t": [182, 234, 266, 292], "dnnl_data_type_t": [182, 234, 239, 246, 256, 283, 292, 402, 438], "dnnl_format_kind_t": [182, 234, 256], "thumb": 182, "dnnl_primitive_desc_clon": [182, 234, 262], "scratch": 182, "stub": 182, "grad": 182, "dnnl_rnn_direction_undef": [183, 184], "unidirectional_left2right": [183, 195, 208, 209, 220, 229, 302, 322, 323, 341, 357], "dnnl_unidirectional_left2right": [183, 184], "unidirectional_right2left": 183, "dnnl_unidirectional_right2left": [183, 184], "dnnl_bidirectional_concat": [183, 184], "dnnl_bidirectional_sum": [183, 184], "unidirect": [183, 184, 208, 209, 229, 322, 323, 357], "bidirect": [183, 184, 208, 209, 322, 323], "dnnl_rnn_flags_undef": [185, 186], "dnnl_scratchpad_mode_librari": [187, 188, 239], "dnnl_scratchpad_mode_us": [187, 188, 239], "safeti": [187, 188], "in_ord": [191, 212, 327], "dnnl_stream_in_ord": [191, 192], "out_of_ord": 191, "dnnl_stream_out_of_ord": [191, 192], "default_flag": [191, 476], "dnnl_stream_default_flag": [191, 192, 199, 206, 211, 310, 319, 326], "dnnl_sycl_interop_usm": [193, 194, 272], "dnnl_sycl_interop_buff": [193, 194, 272], "dnnl_sycl_typ": 194, "copyright": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "corpor": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 338, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "licens": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "apach": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "complianc": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "law": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "AS": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "basi": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "warranti": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "OF": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "express": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "permiss": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 332, 334, 336, 338, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "cmath": [195, 196, 197, 198, 202, 204, 205, 207, 210, 213, 214, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 302, 304, 306, 308, 313, 315, 317, 320, 324, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 358, 360, 362], "iostream": [195, 196, 197, 198, 202, 204, 205, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 230, 231, 232, 233, 302, 304, 306, 308, 313, 315, 317, 320, 324, 328, 331, 332, 334, 336, 339, 341, 343, 347, 353, 355, 358, 360, 362, 364], "example_util": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 326, 328, 330, 331, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364], "dt": [195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 302, 304, 306, 308, 311, 312, 313, 314, 315, 317, 320, 328, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 446], "augru_exampl": [195, 234, 302], "example_allows_unimpl": [195, 201, 202, 209, 234, 302, 313, 323], "engine_stream": [195, 196, 197, 198, 204, 205, 213, 214, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 302, 304, 306, 308, 315, 317, 328, 330, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 358, 360, 362], "src_dim": [195, 196, 198, 204, 205, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 302, 304, 308, 315, 317, 328, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 358, 360, 362], "attention_dim": [195, 302], "weights_dim": [195, 205, 217, 220, 221, 225, 302, 317, 334, 341, 343, 349], "bias_dim": [195, 205, 217, 220, 221, 302, 317, 334, 341, 343], "dst_dim": [195, 205, 213, 217, 220, 221, 224, 225, 226, 228, 302, 317, 328, 334, 341, 343, 347, 349, 351, 355], "src_layer_data": [195, 220, 302, 341], "attention_data": [195, 302], "weights_layer_data": [195, 220, 302, 341], "weights_iter_data": [195, 220, 302, 341], "bias_data": [195, 205, 217, 220, 221, 302, 317, 334, 341, 343], "dst_layer_data": [195, 220, 302, 341], "sin": [195, 196, 197, 198, 205, 217, 218, 220, 221, 232, 302, 304, 306, 308, 317, 334, 336, 341, 343, 362], "src_layer_md": [195, 220, 302, 341], "attention_md": [195, 302], "bias_md": [195, 217, 220, 221, 302, 334, 341, 343], "dst_layer_md": [195, 220, 302, 341], "src_layer_mem": [195, 220, 302, 341], "attention_mem": [195, 302], "bias_mem": [195, 217, 220, 221, 302, 334, 341, 343], "dst_layer_mem": [195, 220, 302, 341], "user_weights_layer_mem": [195, 220, 302, 341], "user_weights_iter_mem": [195, 220, 302, 341], "write_to_dnnl_memori": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 326, 328, 330, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "augru_weights_layer_md": [195, 302], "augru_weights_iter_md": [195, 302], "src_iter_md": [195, 220, 302, 341], "dst_iter_md": [195, 220, 302, 341], "rnn_direct": [195, 208, 209, 220, 229, 266, 292, 302, 322, 323, 341, 357, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "augru_weights_layer_mem": [195, 302], "augru_weights_iter_mem": [195, 302], "src_iter_mem": [195, 220, 302, 341], "weights_iter_mem": [195, 220, 302, 341], "dst_iter_mem": [195, 220, 302, 341], "workspace_mem": [195, 196, 219, 220, 224, 302, 304, 339, 341, 347], "augru_prim": [195, 302], "augru_arg": [195, 302], "dnnl_arg_augru_attent": [195, 234, 262, 302], "wait": [195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 270, 302, 304, 306, 308, 313, 314, 315, 317, 320, 324, 327, 328, 330, 331, 332, 334, 336, 339, 341, 343, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364, 438, 476, 479], "read_from_dnnl_memori": [195, 196, 197, 198, 205, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 234, 302, 304, 306, 308, 317, 326, 328, 330, 331, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 358, 360, 362], "argc": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 328, 330, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364], "argv": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 302, 304, 306, 308, 310, 313, 314, 315, 317, 319, 320, 324, 328, 330, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364], "handle_example_error": [195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 302, 304, 306, 308, 313, 314, 315, 317, 320, 324, 328, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362], "parse_engine_kind": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 302, 304, 306, 308, 310, 313, 314, 315, 317, 328, 330, 332, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 357, 358, 360, 362, 364], "2020": [196, 197, 198, 204, 205, 213, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 304, 306, 308, 315, 317, 328, 334, 336, 339, 341, 343, 347, 349, 351, 353, 355, 358, 360, 362], "batch_normalization_exampl": [196, 234, 304], "227": [196, 199, 200, 202, 203, 206, 213, 217, 218, 219, 223, 225, 226, 227, 228, 230, 232, 304, 310, 311, 313, 314, 319, 328, 334, 336, 339, 346, 349, 351, 353, 355, 358, 362], "scaleshift_dim": [196, 218, 304, 336], "src_data": [196, 198, 204, 205, 213, 217, 218, 219, 221, 224, 225, 226, 227, 228, 230, 231, 232, 304, 308, 315, 317, 328, 334, 336, 339, 343, 347, 349, 351, 353, 355, 358, 360, 362], "scale_data": [196, 198, 218, 304, 308, 336], "shift_data": [196, 198, 218, 304, 308, 336], "tan": [196, 218, 304, 336], "scaleshift_md": [196, 218, 304, 336], "src_mem": [196, 198, 204, 213, 214, 217, 218, 219, 221, 222, 224, 226, 227, 228, 230, 231, 232, 304, 308, 315, 328, 330, 334, 336, 339, 343, 345, 347, 351, 353, 355, 358, 360, 362], "scale_mem": [196, 198, 218, 304, 308, 336], "shift_mem": [196, 198, 218, 304, 308, 336], "bnorm_pd": [196, 304], "10f": [196, 218, 304, 336], "normalization_flag": [196, 218, 240, 253, 262, 292, 304, 336, 374, 376, 416, 418], "mean_mem": [196, 198, 218, 304, 308, 336], "mean_desc": [196, 218, 304, 336, 374, 376, 416, 418], "variance_mem": [196, 198, 218, 304, 308, 336], "variance_desc": [196, 218, 304, 336, 374, 376, 416, 418], "bnorm_prim": [196, 304], "bnorm_arg": [196, 304], "binary_exampl": [197, 234, 306], "150": [197, 198, 306, 308], "src_0_dim": [197, 306], "src_1_dim": [197, 306], "src_0_data": [197, 306], "src_1_data": [197, 306], "src_0_md": [197, 306], "src_1_md": [197, 306], "src_0_mem": [197, 306], "src_1_mem": [197, 306], "binary_op": [197, 198, 239, 306, 308, 446], "binary_attr": [197, 198, 306, 308], "binary_pd": [197, 198, 306, 308], "binary_prim": [197, 198, 306, 308], "binary_arg": [197, 198, 306, 308], "tmp_dst": [198, 308], "params_dim": [198, 308], "mean_data": [198, 308], "variance_data": [198, 308], "oscale_data": [198, 308], "5f": [198, 209, 216, 308, 323, 332], "mean_md": [198, 308], "variance_md": [198, 308], "scale_md": [198, 308], "shift_md": [198, 308], "oscale_md": [198, 308], "oscale_mem": [198, 308], "dst_tmp": [198, 308], "output_scal": [198, 308], "2016": [199, 200, 203, 206, 310, 314, 319], "posix_memalign": [199, 206, 310, 319], "_posix_c_sourc": [199, 206, 234, 310, 319], "200112l": [199, 206, 310, 319], "stdlib": [199, 206, 211, 310, 319, 326], "conv_ih": [199, 206, 234, 310, 319], "conv_iw": [199, 206, 234, 310, 319], "conv_oh": [199, 206, 234, 310, 319], "conv_ow": [199, 206, 234, 310, 319], "conv_strid": [199, 201, 202, 203, 206, 234, 310, 312, 313, 314, 319], "conv_pad": [199, 201, 202, 203, 206, 234, 310, 312, 313, 314, 319], "pool_oh": [199, 206, 234, 310, 319], "27": [199, 200, 202, 203, 206, 224, 310, 313, 314, 319, 347], "pool_ow": [199, 206, 234, 310, 319], "pool_strid": [199, 202, 203, 206, 234, 310, 313, 314, 319], "pool_pad": [199, 200, 202, 203, 206, 234, 310, 311, 313, 314, 319], "arr": [199, 206, 234, 310, 319], "init_net_data": [199, 206, 234, 310, 319], "uint32_t": [199, 202, 203, 206, 234, 310, 313, 314, 319], "1637": [199, 206, 310, 319], "indx": [199, 206, 310, 319], "typedef": [199, 206, 234, 292, 310, 319], "narg": [199, 206, 234, 262, 272, 310, 319, 368], "dnnl_exec_arg_t": [199, 206, 211, 234, 262, 272, 310, 319, 326, 368], "args_t": [199, 206, 234, 310, 319], "prepare_arg_nod": [199, 206, 234, 310, 319], "free_arg_nod": [199, 206, 234, 310, 319], "set_arg": [199, 206, 234, 310, 319], "arg_idx": [199, 206, 234, 310, 319], "dnnl_memory_t": [199, 206, 211, 234, 256, 257, 262, 272, 310, 319, 326, 400], "init_data_memori": [199, 206, 234, 310, 319], "user_tag": [199, 206, 234, 310, 319], "user_md": [199, 206, 310, 319], "dnnl_memory_cr": [199, 206, 211, 234, 256, 310, 319, 326], "dnnl_status_t": [199, 206, 234, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 297, 310, 319, 330, 364, 399], "prepare_reord": [199, 206, 234, 310, 319], "user_memori": [199, 206, 234, 310, 319], "prim_memory_md": [199, 206, 234, 310, 319], "prim_engin": [199, 206, 234, 310, 319], "dir_is_user_to_prim": [199, 206, 234, 310, 319], "prim_memori": [199, 206, 234, 310, 319], "dnnl_primitive_t": [199, 206, 211, 234, 262, 310, 319, 326], "net_index": [199, 206, 234, 310, 319], "inc": [199, 206, 310, 319, 338], "net_arg": [199, 200, 206, 234, 310, 311, 319], "user_memory_md": [199, 206, 310, 319], "dnnl_memory_get_memory_desc": [199, 206, 234, 256, 310, 319], "user_mem_engin": [199, 206, 310, 319], "dnnl_memory_get_engin": [199, 206, 234, 256, 310, 319], "dnnl_memory_desc_equ": [199, 206, 234, 256, 310, 319], "dnnl_primitive_desc_t": [199, 206, 211, 234, 239, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 258, 259, 262, 263, 264, 265, 266, 268, 269, 271, 310, 319, 326, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "reorder_pd": [199, 206, 227, 310, 319, 353], "dnnl_reorder_primitive_desc_cr": [199, 206, 211, 234, 264, 310, 319, 326], "dnnl_primitive_cr": [199, 206, 211, 234, 262, 310, 319, 326], "dnnl_primitive_desc_destroi": [199, 206, 211, 234, 262, 310, 319, 326], "simple_net": [199, 200, 202, 203, 206, 208, 209, 229, 234, 310, 312, 313, 314, 319, 357], "dnnl_engine_kind_t": [199, 234, 249, 280, 281, 285, 292, 310], "dnnl_engine_cr": [199, 206, 211, 234, 249, 310, 319, 326], "net_src_siz": [199, 206, 310, 319], "net_dst_siz": [199, 206, 310, 319], "net_src": [199, 202, 203, 206, 208, 209, 229, 310, 313, 314, 319, 322, 323, 357], "net_dst": [199, 203, 206, 208, 209, 229, 310, 314, 319, 322, 323, 357], "memset": [199, 206, 208, 209, 310, 319, 322, 323], "conv_user_src_s": [199, 206, 310, 319], "conv_user_weights_s": [199, 206, 310, 319], "conv_bias_s": [199, 206, 310, 319], "conv_user_dst_s": [199, 206, 310, 319], "conv_dil": [199, 206, 310, 319], "conv_src": [199, 206, 223, 310, 319, 346], "conv_weight": [199, 201, 202, 203, 206, 310, 312, 313, 314, 319], "conv_bia": [199, 201, 202, 203, 206, 310, 312, 313, 314, 319], "conv_user_src_memori": [199, 202, 203, 206, 310, 313, 314, 319], "conv_user_weights_memori": [199, 202, 203, 206, 310, 313, 314, 319], "conv_user_bias_memori": [199, 202, 203, 206, 310, 313, 314, 319], "conv_src_md": [199, 201, 202, 203, 205, 206, 222, 223, 310, 312, 313, 314, 317, 319, 345, 346], "conv_weights_md": [199, 201, 202, 203, 205, 206, 222, 310, 312, 313, 314, 317, 319, 345], "conv_bias_md": [199, 201, 202, 203, 206, 310, 312, 313, 314, 319], "dnnl_convolution_forward_primitive_desc_cr": [199, 206, 234, 245, 310, 319], "conv_internal_src_memori": [199, 206, 310, 319], "conv_internal_weights_memori": [199, 206, 310, 319], "conv_internal_dst_memori": [199, 206, 310, 319], "dnnl_primitive_desc_query_md": [199, 206, 234, 262, 272, 310, 319], "conv_reorder_src": [199, 206, 310, 319], "conv_reorder_weight": [199, 206, 310, 319], "negative_slop": [199, 202, 203, 206, 310, 313, 314, 319], "0f": [199, 200, 201, 202, 203, 206, 208, 209, 211, 212, 215, 229, 233, 234, 310, 312, 313, 314, 319, 322, 323, 326, 327, 331, 357, 364], "relu_src_md": [199, 202, 203, 206, 310, 313, 314, 319], "relu_dst_md": [199, 206, 310, 319], "relu_pd": [199, 202, 203, 206, 211, 212, 214, 215, 223, 233, 310, 313, 314, 319, 326, 327, 330, 331, 364], "dnnl_eltwise_forward_primitive_desc_cr": [199, 206, 211, 234, 248, 310, 319, 326], "relu_dst_memori": [199, 202, 203, 206, 310, 313, 314, 319], "0001": [199, 200, 202, 203, 206, 310, 313, 314, 319], "0001f": [199, 200, 202, 203, 206, 310, 313, 314, 319], "75f": [199, 200, 202, 203, 206, 219, 310, 313, 314, 319, 339], "lrn_src_md": [199, 206, 310, 319], "lrn_dst_md": [199, 206, 310, 319], "lrn_pd": [199, 202, 203, 206, 219, 310, 313, 314, 319, 339], "dnnl_lrn_forward_primitive_desc_cr": [199, 206, 234, 254, 310, 319], "lrn_dst_memori": [199, 202, 203, 206, 310, 313, 314, 319], "lrn_ws_memori": [199, 206, 310, 319], "lrn_ws_md": [199, 206, 310, 319], "pool_dst_siz": [199, 206, 310, 319], "pool_kernel": [199, 202, 203, 206, 310, 313, 314, 319], "pool_dil": [199, 200, 202, 203, 206, 310, 311, 313, 314, 319], "pool_src_md": [199, 206, 310, 319], "pool_dst_any_md": [199, 310], "pool_user_dst_memori": [199, 202, 203, 206, 310, 313, 314, 319], "pool_pd": [199, 202, 203, 206, 222, 310, 313, 314, 319, 345], "dnnl_pooling_forward_primitive_desc_cr": [199, 206, 234, 258, 310, 319], "pool_ws_memori": [199, 206, 310, 319], "pool_ws_md": [199, 206, 310, 319], "pool_dst_memori": [199, 202, 203, 206, 310, 313, 314, 319], "pool_reorder_dst": [199, 206, 310, 319], "pool_internal_dst_memori": [199, 206, 310, 319], "pool_dst_md": [199, 202, 203, 206, 222, 310, 313, 314, 319, 345], "tent": [199, 206, 310, 319], "workaround": [199, 206, 310, 319], "dnnl_stream_t": [199, 206, 211, 234, 257, 262, 270, 272, 273, 277, 287, 310, 319, 326], "dnnl_stream_creat": [199, 206, 211, 234, 270, 310, 319, 326], "dnnl_primitive_execut": [199, 206, 211, 234, 239, 262, 310, 319, 326, 400], "dnnl_stream_wait": [199, 206, 211, 234, 256, 270, 310, 319, 326], "clean": [199, 206, 211, 310, 319, 326, 346], "dnnl_stream_destroi": [199, 206, 211, 234, 270, 310, 319, 326], "dnnl_memory_destroi": [199, 206, 211, 234, 256, 310, 319, 326], "dnnl_primitive_destroi": [199, 206, 211, 234, 262, 310, 319, 326], "dnnl_engine_destroi": [199, 206, 211, 234, 249, 310, 319, 326], "printf": [199, 206, 207, 210, 211, 310, 319, 320, 324, 326], "engine_kind2str_upp": [199, 214, 233, 234, 310, 330, 364], "chrono": 200, "100": [200, 216, 332], "eng": [200, 201, 202, 203, 207, 210, 214, 215, 216, 222, 223, 229, 233, 234, 311, 312, 313, 314, 320, 324, 330, 331, 332, 345, 346, 357, 364, 446], "conv1_src_tz": [200, 311], "conv1_weights_tz": [200, 311], "conv1_bias_tz": [200, 311], "conv1_dst_tz": [200, 311], "conv1_pad": [200, 311], "user_src": [200, 201, 223, 311, 312, 346], "user_dst": [200, 201, 223, 311, 312, 346], "1000": [200, 216, 231, 311, 332, 360], "conv1_weight": [200, 311], "conv1_bia": [200, 311], "user_src_memori": [200, 201, 311, 312], "user_weights_memori": [200, 201, 311, 312], "conv1_user_bias_memori": [200, 311], "conv1_prim_desc": [200, 311], "conv1_src_memori": [200, 311], "push_back": [200, 202, 203, 204, 208, 209, 232, 311, 313, 314, 315, 322, 323, 362], "conv1_weights_memori": [200, 311], "conv1_dst_memori": [200, 311], "relu1": 200, "negative1_slop": [200, 311], "relu1_prim_desc": [200, 311], "lrn1": 200, "alpha1": 200, "beta1": 200, "local1_s": 200, "lrn1_prim_desc": 200, "lrn_forward": [200, 202, 203, 219, 254, 292, 313, 314, 339, 428, 452], "lrn1_dst_memori": [200, 311], "pool1": [200, 310, 311], "pool1_dst_tz": 200, "pool1_kernel": [200, 311], "pool1_strid": [200, 311], "pool1_dst_md": [200, 311], "pool1_pd": [200, 311], "pooling_forward": [200, 202, 203, 222, 224, 258, 292, 311, 313, 314, 345, 347, 442, 452], "pool1_dst_memori": [200, 311], "48": 200, "conv2_src_tz": 200, "conv2_weights_tz": 200, "conv2_bias_tz": 200, "conv2_dst_tz": 200, "conv2_strid": 200, "conv2_pad": 200, "conv2_weight": 200, "conv2_bia": 200, "conv2_user_weights_memori": 200, "conv2_user_bias_memori": 200, "conv2_src_md": 200, "conv2_bias_md": 200, "conv2_weights_md": 200, "conv2_dst_md": 200, "conv2_prim_desc": 200, "conv2_src_memori": 200, "conv2_weights_memori": 200, "conv2_dst_memori": 200, "relu2": 200, "negative2_slop": 200, "relu2_prim_desc": 200, "lrn2": 200, "alpha2": 200, "beta2": 200, "local2_s": 200, "k2": 200, "lrn2_prim_desc": 200, "lrn2_dst_memori": 200, "pool2": 200, "pool2_dst_tz": 200, "pool2_kernel": 200, "pool2_strid": 200, "pool2_dil": 200, "pool2_pad": 200, "pool2_dst_md": 200, "pool2_pd": 200, "pool2_dst_memori": 200, "384": [200, 201, 312], "conv3_src_tz": 200, "conv3_weights_tz": 200, "conv3_bias_tz": 200, "conv3_dst_tz": 200, "conv3_strid": 200, "conv3_pad": 200, "conv3_weight": 200, "conv3_bia": 200, "conv3_user_weights_memori": 200, "conv3_user_bias_memori": 200, "conv3_src_md": 200, "conv3_bias_md": 200, "conv3_weights_md": 200, "conv3_dst_md": 200, "conv3_prim_desc": 200, "conv3_src_memori": 200, "conv3_weights_memori": 200, "conv3_dst_memori": 200, "relu3": [200, 201, 312], "negative3_slop": 200, "relu3_prim_desc": 200, "conv4_src_tz": 200, "conv4_weights_tz": 200, "conv4_bias_tz": 200, "conv4_dst_tz": 200, "conv4_strid": 200, "conv4_pad": 200, "conv4_weight": 200, "conv4_bia": 200, "conv4_user_weights_memori": 200, "conv4_user_bias_memori": 200, "conv4_src_md": 200, "conv4_bias_md": 200, "conv4_weights_md": 200, "conv4_dst_md": 200, "conv4_prim_desc": 200, "conv4_src_memori": 200, "conv4_weights_memori": 200, "conv4_dst_memori": 200, "relu4": 200, "negative4_slop": 200, "relu4_prim_desc": 200, "conv5_src_tz": 200, "conv5_weights_tz": 200, "conv5_bias_tz": 200, "conv5_dst_tz": 200, "conv5_strid": 200, "conv5_pad": 200, "conv5_weight": 200, "conv5_bia": 200, "conv5_user_weights_memori": 200, "conv5_user_bias_memori": 200, "conv5_src_md": 200, "conv5_weights_md": 200, "conv5_bias_md": 200, "conv5_dst_md": 200, "conv5_prim_desc": 200, "conv5_src_memori": 200, "conv5_weights_memori": 200, "conv5_dst_memori": 200, "relu5": 200, "negative5_slop": 200, "relu5_prim_desc": 200, "pool5": 200, "pool5_dst_tz": 200, "pool5_kernel": 200, "pool5_strid": 200, "pool5_dil": 200, "pool5_pad": 200, "pool5_dst": 200, "pool5_dst_md": 200, "pool5_pd": 200, "pool5_dst_memori": 200, "fc6": 200, "4096": 200, "fc6_src_tz": 200, "fc6_weights_tz": 200, "fc6_bias_tz": 200, "fc6_dst_tz": 200, "fc6_weight": 200, "fc6_bia": 200, "fc6_user_weights_memori": 200, "fc6_user_bias_memori": 200, "fc6_src_md": 200, "fc6_bias_md": 200, "fc6_weights_md": 200, "fc6_dst_md": 200, "fc6_prim_desc": 200, "inner_product_forward": [200, 217, 251, 292, 334, 410, 412, 452], "fc6_src_memori": 200, "fc6_weights_memori": 200, "fc6_dst_memori": 200, "fc7": 200, "fc7_weights_tz": 200, "fc7_bias_tz": 200, "fc7_dst_tz": 200, "fc7_weight": 200, "fc7_bia": 200, "fc7_user_weights_memori": 200, "fc7_user_bias_memori": 200, "fc7_bias_md": 200, "fc7_weights_md": 200, "fc7_dst_md": 200, "fc7_prim_desc": 200, "fc7_weights_memori": 200, "fc7_dst_memori": 200, "fc8": 200, "fc8_weights_tz": 200, "fc8_bias_tz": 200, "fc8_dst_tz": 200, "fc8_weight": 200, "fc8_bia": 200, "fc8_user_weights_memori": 200, "fc8_user_bias_memori": 200, "user_dst_memori": [200, 201, 312], "fc8_bias_md": 200, "fc8_weights_md": 200, "fc8_dst_md": 200, "fc8_prim_desc": 200, "fc8_weights_memori": 200, "fc8_dst_memori": 200, "someth": [200, 202, 203, 208, 209, 229, 311, 313, 314, 357], "duration_cast": 200, "steady_clock": 200, "time_since_epoch": 200, "stdexcept": [201, 202, 207, 210, 212, 214, 215, 216, 223, 313, 320, 324, 331, 332], "simple_net_int8": 201, "conv_src_tz": [201, 202, 203, 312, 313, 314], "conv_weights_tz": [201, 202, 203, 312, 313, 314], "conv_bias_tz": [201, 202, 203, 312, 313, 314], "conv_dst_tz": [201, 202, 203, 312, 313, 314], "8f": [201, 312], "weight_scal": [201, 312], "55f": [201, 312], "src_mask": [201, 312], "weight_mask": [201, 312], "dst_mask": [201, 312], "user_bias_memori": [201, 312], "conv_attr": [201, 205, 312, 317], "dst_scale_md": [201, 312], "dst_scale_memori": [201, 312], "ops_alpha": [201, 312], "ops_beta": [201, 312], "catch": [201, 202, 209, 214, 233, 313, 323, 330, 364], "conv_prim_desc": [201, 223, 312], "src_attr": [201, 312], "src_scale_md": [201, 312], "src_scale_memori": [201, 312], "src_reorder_pd": [201, 312], "src_reorder": [201, 312], "weight_attr": [201, 312], "wei_scale_md": [201, 312], "wei_scale_memori": [201, 312], "weight_reorder_pd": [201, 312], "weight_reord": [201, 312], "conv_bias_memori": [201, 202, 206, 312, 313, 319], "conv_dst_memori": [201, 202, 203, 312, 313, 314], "dst_attr": [201, 312], "dst_reorder_pd": [201, 312], "dst_reorder": [201, 312], "cassert": [202, 207, 210, 216, 233, 313, 320, 324, 332, 364], "net_fwd": [202, 203, 206, 313, 314, 319], "net_bwd": [202, 203, 206, 313, 314, 319], "net_fwd_arg": [202, 203, 206, 313, 314, 319], "net_bwd_arg": [202, 203, 206, 313, 314, 319], "sinf": [202, 203, 313, 314], "relu_data_tz": [202, 203, 313, 314], "lrn_data_tz": [202, 203, 313, 314], "lrn_workspace_memori": [202, 203, 313, 314], "pool_dst_tz": [202, 203, 313, 314], "pool_workspace_memori": [202, 203, 313, 314], "leav": [202, 203, 313, 314, 324], "until": [202, 203, 256, 311, 313, 314, 324, 364, 438], "diff_data": [202, 203, 206, 313, 314, 319], "net_diff_dst": [202, 203, 206, 229, 313, 314, 319, 357], "pool_user_diff_dst_memori": [202, 203, 206, 313, 314, 319], "pool_diff_src_md": [202, 203, 206, 313, 314, 319], "pool_diff_dst_md": [202, 203, 206, 313, 314, 319], "pool_bwd_pd": [202, 203, 206, 313, 314, 319], "pooling_backward": [202, 203, 258, 292, 313, 314, 452], "pool_diff_dst_memori": [202, 203, 206, 313, 314, 319], "pool_diff_src_memori": [202, 203, 206, 313, 314, 319], "diff_src_desc": [202, 203, 234, 240, 245, 247, 248, 251, 253, 254, 258, 259, 265, 268, 269, 313, 314, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "lrn_diff_dst_md": [202, 203, 206, 313, 314, 319], "lrn_diff_src_md": [202, 203, 206, 313, 314, 319], "lrn_bwd_pd": [202, 203, 206, 313, 314, 319], "lrn_backward": [202, 203, 254, 292, 313, 314, 452], "lrn_diff_dst_memori": [202, 203, 313, 314], "lrn_diff_src_memori": [202, 203, 206, 313, 314, 319], "relu_diff_src_md": [202, 203, 206, 313, 314, 319], "relu_diff_dst_md": [202, 203, 206, 313, 314, 319], "primitive_descriptor": [202, 203, 240, 251, 253, 254, 313, 314], "relu_bwd_pd": [202, 203, 206, 313, 314, 319], "eltwise_backward": [202, 203, 248, 292, 313, 314, 452], "relu_diff_dst_memori": [202, 203, 313, 314], "relu_diff_src_memori": [202, 203, 206, 313, 314, 319], "conv_user_diff_weights_memori": [202, 203, 206, 313, 314, 319], "conv_diff_bias_memori": [202, 203, 206, 313, 314, 319], "conv_bwd_src_md": [202, 203, 313, 314], "conv_diff_weights_md": [202, 203, 206, 313, 314, 319], "conv_diff_dst_md": [202, 203, 206, 313, 314, 319], "conv_diff_bias_md": [202, 203, 206, 313, 314, 319], "conv_bwd_weights_pd": [202, 203, 206, 313, 314, 319], "convolution_backward_weight": [202, 203, 245, 292, 313, 314, 452], "conv_bwd_src_memori": [202, 203, 313, 314], "relu_bwd": [202, 203, 206, 313, 314, 319], "conv_diff_weight": [202, 203, 206, 313, 314, 319], "conv_diff_dst_memori": [202, 203, 206, 313, 314, 319], "conv_diff_weights_memori": [202, 203, 206, 313, 314, 319], "diff_weights_desc": [202, 203, 234, 245, 247, 251, 259, 313, 314, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "didn": [202, 203, 313, 314], "anyth": [202, 203, 257, 295, 313, 314], "n_iter": [202, 203, 206, 313, 314, 319], "net_output": [202, 203, 206, 313, 314, 319], "update_diff_dst": [202, 203, 206, 313, 314, 319], "net_diff_weight": [202, 203, 206, 313, 314, 319], "net_diff_bia": [202, 203, 206, 313, 314, 319], "update_weight": [202, 203, 206, 313, 314, 319], "conv_user_diff_weights_buff": [203, 206, 314, 319], "conv_diff_bias_buff": [203, 206, 314, 319], "concat_exampl": [204, 234, 315], "120": [204, 315], "num_src": [204, 232, 315, 362], "mem": [204, 208, 209, 211, 212, 215, 232, 233, 234, 315, 326, 331, 362, 364], "concat_pd": [204, 315], "dst_mem": [204, 213, 214, 217, 219, 221, 222, 224, 226, 227, 228, 230, 232, 315, 328, 330, 334, 339, 343, 345, 347, 351, 353, 355, 358, 362], "concat_prim": [204, 315], "concat_arg": [204, 315], "convolution_exampl": [205, 234, 317], "strides_dim": [205, 224, 317, 347], "padding_dims_l": [205, 224, 317, 347], "padding_dims_r": [205, 224, 317, 347], "weights_data": [205, 217, 221, 225, 317, 334, 343, 349], "dst_data": [205, 213, 217, 219, 221, 224, 225, 226, 227, 228, 230, 232, 317, 328, 334, 339, 343, 347, 349, 351, 353, 355, 358, 362], "user_src_mem": [205, 225, 317, 349], "user_weights_mem": [205, 217, 225, 317, 334, 349], "user_dst_mem": [205, 225, 317, 349], "user_bias_md": [205, 317], "user_bias_mem": [205, 317], "conv_op": [205, 317], "conv_src_mem": [205, 222, 317, 345], "conv_weights_mem": [205, 222, 317, 345], "conv_dst_mem": [205, 222, 317, 345], "conv_prim": [205, 317], "conv_arg": [205, 317, 446], "depthwise_convolution_exampl": [205, 234, 317], "exit_cod": [205, 214, 233, 317, 330, 364], "idx": [206, 233, 234, 262, 319, 364, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "n_fwd": [206, 319], "n_bwd": [206, 319], "dnnl_pooling_backward_primitive_desc_cr": [206, 234, 258, 319], "pool_internal_diff_dst_memori": [206, 319], "pool_reorder_diff_dst": [206, 319], "pool_bwd": [206, 319], "dnnl_lrn_backward_primitive_desc_cr": [206, 234, 254, 319], "lrn_bwd": [206, 319], "conv_diff_src_md": [206, 319], "dnnl_convolution_backward_weights_primitive_desc_cr": [206, 234, 245, 319], "conv_bwd_reorder_src": [206, 319], "conv_bwd_internal_src_memori": [206, 319], "conv_bwd_weights_src_memori": [206, 319], "conv_reorder_diff_dst": [206, 319], "conv_internal_diff_dst_memori": [206, 319], "conv_reorder_diff_weight": [206, 319], "conv_internal_diff_weights_memori": [206, 319], "conv_bwd_weight": [206, 319], "dnnl_memory_set_data_handl": [206, 234, 256, 257, 272, 319], "dnnl_memory_get_data_handl": [206, 234, 256, 319], "cleanup": [206, 319], "cctype": [207, 210, 216, 320, 324, 332], "cstdio": [207, 210, 216, 320, 324, 332], "random": [207, 210, 216, 320, 324, 332], "type_trait": [207, 320], "init_vector": [207, 210, 216, 320, 324, 332], "min_valu": [207, 320], "max_valu": [207, 320], "mt19937": [207, 210, 216, 320, 324, 332], "uniform_real_distribut": [207, 210, 216, 320, 324, 332], "find_min_max": [207, 320], "compute_q10n_param": [207, 320], "messag": [207, 210, 320, 324, 330, 364, 399, 485], "max_int": [207, 320], "numeric_limit": [207, 210, 320, 324], "min_int": [207, 320], "lowest": [207, 320], "ifndef": [207, 320], "omit_workaround_for_skx": [207, 320], "dev_guide_int8_comput": [207, 320], "html": [207, 320], "endif": [207, 233, 320, 364], "min_val": [207, 320], "max_val": [207, 320], "tcomput": [207, 320], "q10n": [207, 320], "tdata": [207, 320], "tscale": [207, 320], "3g": [207, 320], "invers": [207, 320], "tzero": [207, 320], "compare_vector": [207, 210, 320, 324], "scale_v2": [207, 320], "zp_v2": [207, 320], "threshold": [207, 210, 320, 324], "v1_l2": [207, 210, 320, 324], "diff_l2": [207, 210, 320, 324], "v2_n": [207, 320], "deq10n": [207, 320], "ok": [207, 210, 320, 324], "tcomparison": [207, 320], "trefer": [207, 210, 320, 324], "terror": [207, 210, 320, 324], "trel": [207, 320], "naccuraci": [207, 320], "x_int_m": [207, 234, 320], "x_f32": [207, 234, 320], "scale_x": [207, 234, 320], "zp_x": [207, 234, 320], "q10n_scheme": [207, 320], "mimic": [207, 320], "x_int_md": [207, 320], "x_f32_md": [207, 320], "x_f32_m": [207, 320], "q10n_attr": [207, 320], "q10n_pd": [207, 320], "dst_scale_x_m": [207, 320], "zp_x_m": [207, 320], "f32_matmul_comput": [207, 234, 320], "a_f32": [207, 234, 320], "b_f32": [207, 216, 234, 320, 332], "c_f32": [207, 234, 320], "a_md": [207, 210, 216, 320, 324, 332], "b_md": [207, 210, 216, 320, 324, 332], "c_md": [207, 210, 216, 320, 324, 332], "wrap": [207, 210, 212, 320, 324, 398, 399, 407, 438, 452, 476], "a_f32_m": [207, 320], "b_f32_m": [207, 320], "c_f32_m": [207, 320], "matmul_pd": [207, 210, 216, 221, 320, 324, 332, 343], "matmul_p": [207, 210, 216, 234, 320, 324, 332], "scale_c": [207, 234, 320], "zp_c": [207, 216, 234, 320, 332], "dynamic_q10n_matmul": [207, 234, 320], "c_u8": [207, 216, 234, 320, 332], "scale_a": [207, 320], "scale_b": [207, 320], "zp_a": [207, 216, 320, 332], "zp_b": [207, 320], "a_u8_md": [207, 320], "a_u8_m": [207, 320], "b_s8_md": [207, 320], "b_s8_m": [207, 320], "breviti": [207, 320], "emb": [207, 320], "anywai": [207, 320], "theori": [207, 320], "postpon": [207, 320], "exercis": [207, 320], "c_f32_md": [207, 320], "matmul_attr": [207, 221, 320, 343], "scales_a_m": [207, 320], "scales_b_m": [207, 320], "zp_a_m": [207, 320], "c_u8_md": [207, 320], "c_u8_m": [207, 320], "compare_f32_and_quantized_matmul": [207, 234, 320], "param_a_min_v": [207, 320], "param_a_max_v": [207, 320], "4f": [207, 219, 320, 339], "param_b_min_v": [207, 320], "param_b_max_v": [207, 320], "center": [207, 320, 332], "threshold_dynamic_q10n": [207, 320], "2f": [207, 209, 320, 323], "_true_": [207, 320], "c_u8_dynamic_q10n": [207, 320], "scale_c_dynamic_q10n": [207, 320], "zp_c_dynamic_q10n": [207, 320], "rc": [207, 210, 320, 324], "logic_error": [207, 210, 212, 214, 215, 216, 320, 324, 327, 330, 331, 332], "gnmt": [208, 209, 229, 322, 323, 357], "cstring": [208, 209, 229, 357], "dim_t": [208, 209, 234, 323], "src_seq_length_max": [208, 209, 234, 322, 323], "tgt_seq_length_max": [208, 209, 234, 322, 323], "feature_s": [208, 209, 234, 322, 323], "enc_bidir_n_lay": [208, 209, 234, 322, 323], "enc_unidir_n_lay": [208, 209, 234, 322, 323], "dec_n_lay": [208, 209, 234, 322, 323], "lstm_n_gate": [208, 209, 229, 234, 322, 323, 357], "weighted_src_lay": [208, 209, 234], "alignment_model": [208, 209, 234], "exp_sum": [208, 209, 234], "compute_weighted_annot": [208, 209, 234, 322, 323], "weighted_annot": [208, 209, 234, 322, 323], "weights_annot": [208, 209, 234], "enc_dst_lay": [208, 209], "num_weighted_annot": [208, 209], "dnnl_sgemm": [208, 209, 210, 234, 242, 324], "compute_attent": [208, 209, 234, 322, 323], "context_vector": [208, 209, 234], "weights_src_lay": [208, 209, 234], "dec_src_lay": [208, 209, 234], "weights_align": [208, 209, 234], "dst_iter": [208, 209, 229, 239, 322, 357, 454], "src_layer": [208, 209, 229, 239, 322, 323, 357, 454], "weights_yi": [208, 209], "weights_ai": [208, 209], "tmp": [208, 209, 267], "weighted_dec_src_lay": [208, 209], "alignment_model_ptr": [208, 209], "pragma_omp_parallel_for_collaps": [208, 209, 234], "tanhf": [208, 209], "gemv": [208, 209], "expf": [208, 209], "copy_context": [208, 209, 234, 322, 323], "src_iter": [208, 209, 229, 234, 239, 322, 323, 357, 454], "n_layer": [208, 209, 234], "cpu_engin": [208, 209, 212, 322, 323, 327], "encoder_net": [208, 209, 322, 323], "decoder_net": [208, 209, 322, 323], "encoder_net_arg": [208, 209, 322, 323], "decoder_net_arg": [208, 209, 322, 323], "enc_bidir_src_layer_tz": [208, 209, 322, 323], "enc_bidir_weights_layer_tz": [208, 209, 322, 323], "enc_bidir_weights_iter_tz": [208, 209, 322, 323], "enc_bidir_bias_tz": [208, 209, 322, 323], "enc_bidir_dst_layer_tz": [208, 209, 322, 323], "user_enc_bidir_wei_lay": [208, 209, 322, 323], "user_enc_bidir_wei_it": [208, 209, 322, 323], "user_enc_bidir_bia": [208, 209, 322, 323], "user_enc_bidir_src_layer_md": [208, 209, 322, 323], "user_enc_bidir_wei_layer_md": [208, 209, 322, 323], "user_enc_bidir_wei_iter_md": [208, 209, 322, 323], "user_enc_bidir_bias_md": [208, 209, 322, 323], "user_enc_bidir_src_layer_memori": [208, 209, 322, 323], "user_enc_bidir_wei_layer_memori": [208, 209, 322, 323], "user_enc_bidir_wei_iter_memori": [208, 209, 322, 323], "user_enc_bidir_bias_memori": [208, 209, 322, 323], "enc_bidir_wei_layer_md": [208, 209, 322, 323], "enc_bidir_wei_iter_md": [208, 209, 322, 323], "enc_bidir_dst_layer_md": [208, 209, 322, 323], "enc_bidir_prim_desc": [208, 209, 322, 323], "enc_bidir_wei_layer_memori": [208, 209, 322, 323], "enc_bidir_wei_layer_reorder_pd": [208, 209, 322], "enc_bidir_wei_iter_memori": [208, 209, 322, 323], "enc_bidir_wei_iter_reorder_pd": [208, 209], "enc_bidir_dst_layer_memori": [208, 209, 322, 323], "bi": [208, 209], "user_enc_uni_first_wei_lay": [208, 209, 322, 323], "user_enc_uni_first_wei_it": [208, 209, 322, 323], "user_enc_uni_first_bia": [208, 209, 322, 323], "user_enc_uni_first_wei_layer_dim": [208, 209], "user_enc_uni_first_wei_iter_dim": [208, 209], "user_enc_uni_first_bias_dim": [208, 209], "enc_uni_first_dst_layer_dim": [208, 209], "user_enc_uni_first_wei_layer_md": [208, 209], "user_enc_uni_first_wei_iter_md": [208, 209], "user_enc_uni_first_bias_md": [208, 209, 322, 323], "user_enc_uni_first_wei_layer_memori": [208, 209], "user_enc_uni_first_wei_iter_memori": [208, 209], "user_enc_uni_first_bias_memori": [208, 209, 322, 323], "enc_uni_first_wei_layer_md": [208, 209, 322, 323], "enc_uni_first_wei_iter_md": [208, 209, 322, 323], "enc_uni_first_dst_layer_md": [208, 209, 322, 323], "enc_uni_first_prim_desc": [208, 209, 322, 323], "enc_uni_first_wei_layer_memori": [208, 209, 322, 323], "enc_uni_first_wei_layer_reorder_pd": 208, "enc_uni_first_wei_iter_memori": [208, 209, 322, 323], "enc_uni_first_wei_iter_reorder_pd": 208, "enc_uni_first_dst_layer_memori": [208, 209, 322, 323], "user_enc_uni_wei_lay": [208, 209, 322, 323], "user_enc_uni_wei_it": [208, 209, 322, 323], "user_enc_uni_bia": [208, 209, 322, 323], "user_enc_uni_wei_layer_dim": [208, 209], "user_enc_uni_wei_iter_dim": [208, 209], "user_enc_uni_bias_dim": [208, 209], "enc_dst_layer_dim": [208, 209], "user_enc_uni_wei_layer_md": [208, 209], "user_enc_uni_wei_iter_md": [208, 209], "user_enc_uni_bias_md": [208, 209, 322, 323], "user_enc_uni_wei_layer_memori": [208, 209], "user_enc_uni_wei_iter_memori": [208, 209], "user_enc_uni_bias_memori": [208, 209, 322, 323], "enc_uni_wei_layer_md": [208, 209, 322, 323], "enc_uni_wei_iter_md": [208, 209, 322, 323], "enc_dst_layer_md": [208, 209, 322, 323], "enc_uni_prim_desc": [208, 209, 322, 323], "enc_uni_wei_layer_memori": [208, 209, 322, 323], "enc_uni_wei_layer_reorder_pd": [208, 209], "enc_uni_wei_iter_memori": [208, 209, 322, 323], "enc_uni_wei_iter_reorder_pd": [208, 209], "enc_dst_layer_memori": [208, 209, 322, 323], "dec": [208, 209], "user_dec_wei_lay": [208, 209, 322, 323], "user_dec_wei_it": [208, 209, 322, 323], "user_dec_bia": [208, 209, 322, 323], "user_dec_dst": [208, 322], "user_weights_attention_src_lay": [208, 209, 322, 323], "user_weights_annot": [208, 209, 322, 323], "user_weights_align": [208, 209, 322, 323], "user_dec_wei_layer_dim": [208, 209, 322, 323], "user_dec_wei_iter_dim": [208, 209, 322, 323], "user_dec_bias_dim": [208, 209, 322, 323], "dec_src_layer_dim": [208, 209, 322, 323], "dec_dst_layer_dim": [208, 209, 322, 323], "dec_dst_iter_c_dim": [208, 209, 322, 323], "noctx": [208, 209], "dec_dst_iter_dim": [208, 209, 322, 323], "dec_dst_iter_noctx_dim": [208, 209, 322, 323], "user_dec_wei_layer_md": [208, 209, 322, 323], "user_dec_wei_iter_md": [208, 209, 322, 323], "user_dec_bias_md": [208, 209, 322, 323], "dec_dst_layer_md": [208, 209, 322, 323], "dec_src_layer_md": [208, 209, 322, 323], "dec_dst_iter_md": [208, 209, 322, 323], "dec_dst_iter_c_md": [208, 209, 322, 323], "user_dec_wei_layer_memori": [208, 209, 322, 323], "user_dec_wei_iter_memori": [208, 209, 322, 323], "user_dec_bias_memori": [208, 209, 322, 323], "user_dec_dst_layer_memori": [208, 322], "dec_src_layer_memori": [208, 209, 322, 323], "dec_dst_iter_c_memori": [208, 209, 322, 323], "dec_wei_layer_md": [208, 209, 322], "dec_wei_iter_md": [208, 209, 322], "dec_dst_iter_memori": [208, 209, 322, 323], "dec_dst_iter_noctx_md": [208, 209, 322, 323], "dec_ctx_prim_desc": [208, 209, 322, 323], "dec_wei_layer_memori": [208, 209, 322, 323], "dec_wei_layer_reorder_pd": [208, 209, 322, 323], "dec_wei_iter_memori": [208, 209, 322], "dec_wei_iter_reorder_pd": [208, 209, 322], "enc": [208, 209], "ano": [208, 209], "init": [208, 209, 214, 215, 223, 331], "src_att_layer_handl": [208, 209, 322, 323], "src_att_iter_handl": [208, 209, 322, 323], "att": [208, 209], "ctx": [208, 209], "cp": [208, 209], "dst_layer_handl": [208, 209, 322, 323], "compute_sum_of_row": [209, 234, 323], "col": [209, 234], "a_reduc": [209, 234], "weights_src_layer_scal": [209, 234], "dec_src_layer_scal": [209, 234], "dec_src_layer_shift": [209, 234], "tnc_offset": 209, "a_i": 209, "max_idx": 209, "max_idx_v": 209, "1f": [209, 210, 323, 324], "data_shift": [209, 323], "data_scal": [209, 323], "weights_scale_mask": [209, 323], "weights_scal": [209, 323], "halv": [209, 323], "scales_half": [209, 323], "65": [209, 323], "3f": [209, 225, 323, 349], "enc_bidir_src_layer_md": [209, 323], "attri": 209, "enc_bidir_src_layer_memori": [209, 323], "enc_bidir_src_layer_reorder_pd": [209, 323], "weights_attention_scal": [209, 323], "dec_dst": [209, 323], "dec_src_it": [209, 322], "dec_dst_it": [209, 322, 323], "dec_dst_layer_memori": [209, 323], "weights_attention_sum_row": [209, 323], "s8u8s32": [209, 323], "tight": [210, 324], "difficult": [210, 324], "finit": [210, 324], "tl2": [210, 324], "trelative_error": [210, 324], "taccuraci": [210, 324], "number_of_run": [210, 216, 234, 324, 332], "fixed_beta": [210, 234, 324], "_dynamic_": [210, 324], "dynamic_matmul_cr": [210, 234, 324], "a_shap": [210, 324], "b_shape": [210, 324], "c_shape": [210, 324], "a_strid": [210, 324], "b_stride": [210, 324], "c_stride": [210, 324], "earlier": [210, 324, 330, 364], "dynamic_matmul_execut": [210, 234, 324], "transa": [210, 234, 242, 273, 292, 297, 324], "transb": [210, 234, 242, 273, 292, 297, 324], "lda": [210, 234, 242, 273, 292, 297, 324], "ldb": [210, 234, 242, 273, 292, 297, 324], "ldc": [210, 234, 242, 273, 292, 297, 324], "translat": [210, 324], "tolow": [210, 324], "a_m": [210, 324], "b_m": [210, 324], "c_m": [210, 324], "alpha_m": [210, 324], "sgemm_and_matmul_with_param": [210, 234, 324], "c_sgemm": [210, 324], "c_dynamic_matmul": [210, 324], "dynamic_matmul": [210, 324], "diverg": [210, 324], "sgemm_and_matmul": [210, 234, 324], "n_dim": [211, 234, 326], "n_elem": [211, 326], "complain_example_error_and_exit": [211, 234, 326], "find_neg": [211, 212, 234, 326, 327], "engine_cpu": [211, 326], "engine_gpu": [211, 326], "validate_engine_kind": [211, 212, 234, 326, 327], "tz": [211, 212, 326, 327], "m_cpu_md": [211, 326], "m_gpu_md": [211, 326], "m_cpu": [211, 212, 326, 327], "m_gpu": [211, 212, 326, 327], "r1_pd": [211, 326], "r1": [211, 212, 326, 327], "r2_pd": [211, 326], "r2": [211, 212, 326, 327], "stream_gpu": [211, 212, 326, 327], "r1_arg": [211, 326], "relu_arg": [211, 326], "r2_arg": [211, 326], "prologu": [212, 214, 215, 223, 233], "nelem": 212, "cross_engine_reorder_tutori": 212, "gpu_engin": [212, 327], "eltwise_exampl": [213, 234, 328], "eltwise_pd": [213, 328], "eltwise_prim": [213, 328], "eltwise_arg": [213, 328], "2023": [214, 233], "dnnl_debug": [214, 233, 327, 330, 331, 364], "getting_started_tutori": 214, "image_s": [214, 330], "alt_src_md": [214, 330], "saniti": [214, 216, 330, 332], "obj": [214, 330], "relu_imag": [214, 330], "got": [214, 215, 330, 331], "caught": [214, 233, 330, 364], "tstatu": [214, 233, 330, 364], "dnnl_status2str": [214, 233, 234, 330, 364], "tmessag": [214, 233, 330, 364], "ocl_check": [215, 234, 331], "cl_int": 215, "cl_success": 215, "__file__": 215, "__line__": 215, "cl_kernel": [215, 234, 331], "create_init_opencl_kernel": [215, 234, 331], "ocl_ctx": [215, 234], "kernel_nam": [215, 234, 331], "ocl_cod": [215, 234, 331], "err": 215, "cl_program": 215, "ocl_program": 215, "clcreateprogramwithsourc": 215, "clbuildprogram": 215, "ocl_kernel": 215, "clcreatekernel": 215, "clreleaseprogram": 215, "gpu_opencl_interop_tutori": 215, "strm": [215, 233, 331, 364], "tz_dim": [215, 229, 233, 331, 357, 364], "mem_d": [215, 233, 331, 364], "__kernel": [215, 331], "__global": [215, 331], "get_global_id": [215, 331], "oclkernel": 215, "ocl_init_kernel": [215, 331], "oclexecut": 215, "ocl_buf": [215, 331], "clsetkernelarg": [215, 331], "ocl_queu": [215, 331], "clenqueuendrangekernel": [215, 331], "mem_data": [215, 331], "clreleasekernel": 215, "uniform_int_distribut": [216, 332], "static_cast": [216, 332], "sc_a": [216, 332], "sc_b": [216, 332], "sc_c": [216, 332], "mlp": [216, 332], "matmul_pd_cr": [216, 234, 332], "prepare_input": [216, 234, 332], "a_u8_mem": [216, 234, 332], "sc_a_mem": [216, 234, 332], "sc_b_mem": [216, 234, 332], "sc_c_mem": [216, 234, 332], "zp_a_mem": [216, 234, 332], "zp_c_mem": [216, 234, 332], "25f": [216, 332], "40": [216, 332], "sanity_check": [216, 234, 332], "c_u8_mem": [216, 234, 332], "smoke": [216, 332], "tquantiz": [216, 332], "twhich": [216, 332], "b_s8_mem": [216, 234, 332], "meaning": [216, 332], "b_f32_mem": [216, 332], "inner_product_exampl": [217, 234, 334], "inner_product_weights_md": [217, 334], "inner_product_op": [217, 334], "inner_product_attr": [217, 334], "inner_product_pd": [217, 334], "inner_product_weights_mem": [217, 334], "inner_product_prim": [217, 334], "inner_product_arg": [217, 334], "layer_normalization_exampl": [218, 234, 336], "lnorm_pd": [218, 336], "lnorm_prim": [218, 336], "lnorm_arg": [218, 336], "lrn_exampl": [219, 234, 339], "lrn_prim": [219, 339], "lrn_arg": [219, 339], "lstm_exampl": [220, 234, 341], "lstm_weights_layer_md": [220, 341], "lstm_weights_iter_md": [220, 341], "src_iter_c_md": [220, 341], "dst_iter_c_md": [220, 341], "lstm_weights_layer_mem": [220, 341], "lstm_weights_iter_mem": [220, 341], "src_iter_c_mem": [220, 341], "dst_iter_c_mem": [220, 341], "lstm_prim": [220, 341], "lstm_arg": [220, 341], "matmul_exampl": [221, 234, 343], "weights_mem": [221, 222, 343, 345], "matmul_op": [221, 343], "matmul_prim": [221, 343], "matmul_arg": [221, 343], "sstream": 222, "memory_format_propagation_tutori": 222, "need_reorder_src": [222, 345], "need_reorder_weight": [222, 345], "need_reorder_dst": [222, 345], "pool_dst_mem": [222, 345], "reorder_src": [222, 345], "reorder_weight": [222, 345], "conv_scratchpad_mem": [222, 345], "pool_scratchpad_mem": [222, 345], "reorder_dst": [222, 345], "init_data": [223, 234], "create_and_execute_relu": [223, 234, 346], "create_attr_with_relu_post_op": [223, 234, 346], "naiv": 223, "conv_relu_na": [223, 346], "user_wei": [223, 346], "mem_desc": 223, "conv_wei_md": [223, 346], "conv_primit": 223, "conv_relu_block": [223, 346], "implementation2": 223, "condition": 223, "r_pd": [223, 346], "conv_wei": [223, 346], "conv_dst": [223, 346], "prim_descriptor": 223, "conv_relu_fus": [223, 346], "prim_desc": 223, "implementation3": 223, "synthet": [223, 346], "pooling_exampl": [224, 234, 347], "kernel_dim": [224, 347], "pooling_pd": [224, 347], "pooling_prim": [224, 347], "pooling_arg": [224, 347], "prelu_exampl": [225, 234, 349], "prelu_pd": [225, 349], "prelu_forward": [225, 259, 292, 349, 448, 452], "prelu_weights_mem": [225, 349], "prelu_prim": [225, 349], "prelu_arg": [225, 349], "reduction_exampl": [226, 234, 351], "reduction_pd": [226, 351], "reduction_prim": [226, 351], "reduction_arg": [226, 351], "reorder_exampl": [227, 234, 353], "ic_dim": [227, 353], "reorder_attr": [227, 353], "dst_scales_mem": [227, 353], "reorder_prim": [227, 353], "reorder_arg": [227, 353], "resampling_exampl": [228, 234, 355], "350": [228, 355], "resampling_pd": [228, 355], "resampling_forward": [228, 265, 292, 355, 452, 463], "resampling_prim": [228, 355], "resampling_arg": [228, 355], "n0": [229, 234, 357], "t0": [229, 234, 357], "rand": [229, 234, 357], "n1": [229, 234, 357], "chunk": [229, 357], "compact": [229, 346, 357], "leftmost": [229, 357], "leftmost_batch": [229, 234, 357], "rightmost_batch": [229, 234, 357], "leftmost_seq_length": [229, 234, 357], "rightmost_seq_length": [229, 234, 357], "common_feature_s": [229, 234, 357], "characterist": [229, 330, 357], "common_n_lay": [229, 234, 357], "is_train": [229, 357], "fwd_inf_train": [229, 357], "fwd_net": [229, 357], "bwd_net": [229, 357], "shorter": [229, 357], "net_src_dim": [229, 357], "leftmost_src_layer_dim": [229, 357], "rightmost_src_layer_dim": [229, 357], "common_weights_layer_dim": [229, 357], "common_weights_iter_dim": [229, 357], "common_bias_dim": [229, 357], "leftmost_dst_layer_dim": [229, 357], "rightmost_dst_layer_dim": [229, 357], "arrang": [229, 357], "our": [229, 331, 345, 357, 364], "leftmost_dst_iter_dim": [229, 357], "leftmost_dst_iter_c_dim": [229, 357], "rightmost_src_iter_dim": [229, 357], "rightmost_src_iter_c_dim": [229, 357], "tz_volum": [229, 357], "auxillari": [229, 357], "suppli": [229, 357], "formatted_md": [229, 357], "generic_md": [229, 357], "studi": [229, 357], "suggest": [229, 357], "leftmost_dst_layer_memori": [229, 357], "rightmost_dst_layer_memori": [229, 357], "net_src_memori": [229, 357], "accommod": [229, 345, 357], "user_leftmost_src_layer_md": [229, 357], "user_rightmost_src_layer_md": [229, 357], "leftmost_src_layer_memori": [229, 357], "rightmost_src_layer_memori": [229, 357], "ll": [229, 357], "user_common_weights_lay": [229, 357], "user_common_weights_layer_memori": [229, 357], "user_common_weights_it": [229, 357], "user_common_weights_iter_memori": [229, 357], "user_common_bia": [229, 357], "user_common_bias_memori": [229, 357], "user_leftmost_dst_lay": [229, 357], "user_leftmost_dst_layer_memori": [229, 357], "user_rightmost_dst_lay": [229, 357], "user_rightmost_dst_layer_memori": [229, 357], "leftmost_prim_desc": [229, 357], "aprop_kind": [229, 357, 370, 372, 374, 376, 380, 386, 392, 396, 404, 406, 414, 416, 418, 420, 422, 424, 426, 430, 432, 434, 444, 450, 456, 461, 465, 466, 470, 474, 478, 481, 483], "leftmost_dst_iter_memori": [229, 357], "leftmost_dst_iter_c_memori": [229, 357], "rightmost_src_iter_md": [229, 357], "rightmost_src_iter_memori": [229, 357], "rightmost_src_iter_c_md": [229, 357], "rightmost_src_iter_c_memori": [229, 357], "rightmost_prim_desc": [229, 357], "rigthmost": [229, 357], "common_weights_layer_memori": [229, 357], "common_weights_iter_memori": [229, 357], "common_bias_memori": [229, 357], "workspace_primitive_desc": [229, 357], "commun": [229, 357], "create_w": [229, 357], "leftmost_workspace_memori": [229, 357], "rightmost_workspace_memori": [229, 357], "leftmost_lay": [229, 357], "rightmost_lay": [229, 357], "net_diff_src": [229, 357], "net_diff_src_memori": [229, 357], "user_leftmost_diff_src_layer_md": [229, 357], "user_rightmost_diff_src_layer_md": [229, 357], "leftmost_diff_src_layer_memori": [229, 357], "rightmost_diff_src_layer_memori": [229, 357], "backpropag": [229, 357], "user_common_diff_weights_lay": [229, 357], "user_common_diff_weights_layer_memori": [229, 357], "user_common_diff_bia": [229, 357], "user_common_diff_bias_memori": [229, 357], "net_diff_dst_dim": [229, 357], "net_diff_dst_memori": [229, 357], "diff_dst_lay": [229, 357], "user_leftmost_diff_dst_layer_md": [229, 357], "user_rightmost_diff_dst_layer_md": [229, 357], "leftmost_diff_dst_layer_memori": [229, 357], "rightmost_diff_dst_layer_memori": [229, 357], "leftmost_bwd_prim_desc": [229, 357], "diff_src_layer_desc": [229, 234, 266, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "diff_src_iter_desc": [229, 234, 266, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "diff_src_iter_c_desc": [229, 234, 266, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "diff_weights_layer_desc": [229, 234, 266, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "diff_weights_iter_desc": [229, 234, 266, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "diff_bias_desc": [229, 234, 245, 247, 251, 266, 357, 370, 372, 384, 390, 404, 406, 412, 420, 422, 424, 426, 432, 434, 466, 481, 483], "diff_dst_layer_desc": [229, 234, 266, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "diff_dst_iter_desc": [229, 234, 266, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "diff_dst_iter_c_desc": [229, 234, 266, 357, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "leftmost_diff_dst_iter_memori": [229, 357], "leftmost_diff_dst_iter_c_memori": [229, 357], "rightmost_diff_src_iter_md": [229, 357], "rightmost_diff_src_iter_memori": [229, 357], "rightmost_diff_src_iter_c_md": [229, 357], "rightmost_diff_src_iter_c_memori": [229, 357], "rightmost_bwd_prim_desc": [229, 357], "leftmost_src_layer_bwd_memori": [229, 357], "rightmost_src_layer_bwd_memori": [229, 357], "common_weights_layer_bwd_memori": [229, 357], "common_weights_iter_bwd_memori": [229, 357], "common_bias_bwd_memori": [229, 357], "common_diff_weights_layer_memori": [229, 357], "reorder_common_diff_weights_lay": [229, 357], "common_diff_bias_memori": [229, 357], "reorder_common_diff_bia": [229, 357], "dst_layer": [229, 239, 357, 454], "leftmost_dst_layer_bwd_memori": [229, 357], "rightmost_dst_layer_bwd_memori": [229, 357], "common_diff_weights_iter_memori": [229, 357], "leftmost_dst_iter_bwd_memori": [229, 357], "leftmost_dst_iter_c_bwd_memori": [229, 357], "rightmost_layer_bwd": [229, 357], "leftmost_layer_bwd": [229, 357], "shuffle_exampl": [230, 234, 358], "shuffle_axi": [230, 358], "shuffle_pd": [230, 358], "shuffle_forward": [230, 268, 292, 358, 452, 468], "shuffle_prim": [230, 358], "shuffle_arg": [230, 358], "softmax_exampl": [231, 234, 360], "softmax_pd": [231, 360], "softmax_forward": [231, 269, 292, 360, 452, 472], "softmax_prim": [231, 360], "softmax_arg": [231, 360], "sum_exampl": [232, 234, 362], "sum_pd": [232, 362], "sum_prim": [232, 362], "sum_arg": [232, 362], "__has_includ": [233, 364], "elif": [233, 364], "kernel_tag": [233, 364], "sycl_interop_buffer_tutori": 233, "buf": [233, 234, 287], "sycl_buf": [233, 364], "handler": [233, 364], "cgh": [233, 364], "get_access": [233, 364], "host_acc": [233, 364], "exp_valu": [233, 364], "dnnl_memory_desc": [234, 256], "dnnl_memori": [234, 256], "const_dnnl_memory_t": [234, 256, 257, 272], "dnnl_primitive_desc": [234, 262], "dnnl_primitive_attr": [234, 239], "const_dnnl_primitive_attr_t": [234, 239, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 258, 259, 262, 263, 264, 265, 266, 268, 269, 271], "dnnl_post_op": [234, 239], "const_dnnl_post_ops_t": [234, 239], "dnnl_primit": [234, 262], "const_dnnl_primitive_t": [234, 262, 272], "dnnl_engin": [234, 249], "dnnl_stream": [234, 270], "const_dnnl_stream_t": [234, 270], "dnnl_graph_sycl_allocate_f": [234, 276, 287, 294], "dev": [234, 287], "dnnl_graph_sycl_deallocate_f": [234, 276, 287, 294], "dnnl_graph_partit": [234, 285], "const_dnnl_graph_partition_t": [234, 285], "dnnl_graph_graph": [234, 281], "dnnl_graph_graph_t": [234, 281], "const_dnnl_graph_graph_t": [234, 281], "dnnl_graph_op": [234, 284], "dnnl_graph_op_t": [234, 281, 284], "const_dnnl_graph_op_t": [234, 284, 285], "dnnl_graph_alloc": [234, 276], "dnnl_graph_allocator_t": [234, 276, 287], "const_dnnl_graph_allocator_t": [234, 276, 280, 287], "dnnl_graph_compiled_partit": [234, 277], "const_dnnl_graph_compiled_partition_t": [234, 277, 287], "dnnl_graph_tensor": [234, 288], "dnnl_graph_tensor_t": [234, 288], "const_dnnl_graph_tensor_t": [234, 277, 287, 288], "dnnl_cpu_isa_hints_t": [234, 267], "dnnl_cpu_isa_t": [234, 267], "dnnl_fpmath_mode_t": [234, 239, 250, 281, 292], "dnnl_graph_layout_type_t": [234, 283, 402], "dnnl_graph_op_attr_t": [234, 284], "dnnl_graph_op_kind_t": [234, 284], "dnnl_graph_partition_policy_t": [234, 281, 285], "dnnl_graph_tensor_property_t": [234, 283, 402], "dnnl_normalization_flags_t": [234, 240, 253, 262, 292], "dnnl_ocl_interop_memory_kind_t": [234, 257, 295], "dnnl_prop_kind_t": [234, 239, 240, 245, 247, 248, 251, 253, 254, 258, 259, 262, 265, 266, 268, 269, 292], "dnnl_rnn_flags_t": [234, 266, 292], "dnnl_scratchpad_mode_t": [234, 239, 292], "dnnl_stream_flags_t": [234, 270], "dnnl_sycl_interop_memory_kind_t": [234, 272, 296], "dnnl_graph_inplace_pair_t": [234, 277], "gemm_dims_t": 234, "min_run": 234, "bnorm_u8_via_binary_postop": [234, 301, 308], "cnn_inference_f32": [234, 301, 311], "cross_engine_reord": [234, 301, 326, 327], "initializer_list": 234, "extra_arg": 234, "get_type_str": 234, "print_test_cas": 234, "fill_random": 234, "is_integ": 234, "run_cas": 234, "time_limit": 234, "bad_arg": 234, "matmul_perf": 234, "performance_profil": [234, 301, 346], "sycl_usm_tutori": 234, "inference_int8_matmul": [234, 301, 332], "dnnl_api": [234, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288], "dnnl_primitive_desc_next_impl": [234, 262], "existing_primitive_desc": [234, 262], "dnnl_primitive_desc_get_attr": [234, 262], "dnnl_primitive_desc_query_s32": [234, 262], "dnnl_primitive_create_from_cache_blob": [234, 262], "cache_blob": [234, 257, 262, 295, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 441, 443, 447, 449, 452, 458, 460, 462, 464, 467, 469, 471, 473, 477, 480, 482], "dnnl_primitive_get_primitive_desc": [234, 262], "dnnl_primitive_get_cache_blob": [234, 262], "dnnl_primitive_attr_clon": [234, 239], "existing_attr": [234, 239], "dnnl_primitive_attr_get_fpmath_mod": [234, 239], "dnnl_primitive_attr_set_fpmath_mod": [234, 239], "dnnl_primitive_attr_get_scratchpad_mod": [234, 239], "dnnl_primitive_attr_set_zero_points_mask": [234, 239, 454], "dnnl_primitive_attr_get_post_op": [234, 239], "dnnl_post_ops_cr": [234, 239], "dnnl_post_ops_clon": [234, 239], "existing_post_op": [234, 239], "dnnl_post_ops_destroi": [234, 239], "dnnl_post_ops_len": [234, 239], "dnnl_post_ops_get_kind": [234, 239], "dnnl_post_ops_append_sum": [234, 239], "dnnl_post_ops_get_params_sum": [234, 239], "dnnl_post_ops_get_params_eltwis": [234, 239], "weights_data_typ": [234, 239, 446], "bias_data_typ": [234, 239, 446], "dst_data_typ": [234, 239, 446], "kernel_s": [234, 239, 446], "stride_s": [234, 239, 446], "padding_l_s": [234, 239, 446], "dnnl_post_ops_get_params_dw": [234, 239], "src1_desc": [234, 239, 241, 378, 446], "dnnl_post_ops_get_params_binari": [234, 239], "dnnl_post_ops_get_params_prelu": [234, 239], "memory_desc": [234, 256, 257, 272, 295, 296], "dnnl_memory_desc_clon": [234, 256], "existing_memory_desc": [234, 256], "dnnl_memory_desc_create_submemori": [234, 256], "parent_memory_desc": [234, 256], "dnnl_memory_desc_reshap": [234, 256], "out_memory_desc": [234, 256], "in_memory_desc": [234, 256], "dnnl_memory_desc_permute_ax": [234, 256], "lh": [234, 256], "rh": [234, 256], "dnnl_data_type_s": [234, 256], "dnnl_memory_map_data": [234, 256], "mapped_ptr": [234, 256, 438], "dnnl_memory_unmap_data": [234, 256], "reorder_primitive_desc": [234, 264], "src_engin": [234, 264, 461], "dst_engin": [234, 264, 461], "dnnl_concat_primitive_desc_cr": [234, 244], "concat_primitive_desc": [234, 244], "dnnl_sum_primitive_desc_cr": [234, 271], "sum_primitive_desc": [234, 271], "dnnl_binary_primitive_desc_cr": [234, 241], "src0_desc": [234, 241, 378], "dnnl_convolution_backward_data_primitive_desc_cr": [234, 245], "dnnl_deconvolution_forward_primitive_desc_cr": [234, 247], "dnnl_deconvolution_backward_data_primitive_desc_cr": [234, 247], "dnnl_deconvolution_backward_weights_primitive_desc_cr": [234, 247], "dnnl_shuffle_forward_primitive_desc_cr": [234, 268], "dnnl_shuffle_backward_primitive_desc_cr": [234, 268], "data_desc": [234, 248, 394], "dnnl_softmax_forward_primitive_desc_cr": [234, 269], "softmax_axi": [234, 269], "dnnl_softmax_backward_primitive_desc_cr": [234, 269], "dnnl_prelu_forward_primitive_desc_cr": [234, 259], "dnnl_prelu_backward_primitive_desc_cr": [234, 259], "dnnl_batch_normalization_forward_primitive_desc_cr": [234, 240], "dnnl_batch_normalization_backward_primitive_desc_cr": [234, 240], "dnnl_layer_normalization_forward_primitive_desc_cr": [234, 253], "dnnl_layer_normalization_backward_primitive_desc_cr": [234, 253], "dnnl_inner_product_forward_primitive_desc_cr": [234, 251], "dnnl_inner_product_backward_data_primitive_desc_cr": [234, 251], "dnnl_inner_product_backward_weights_primitive_desc_cr": [234, 251], "dnnl_primitive_attr_set_rnn_data_qparam": [234, 239], "dnnl_primitive_attr_get_rnn_data_qparam": [234, 239], "dnnl_primitive_attr_set_rnn_weights_qparam": [234, 239], "dnnl_primitive_attr_get_rnn_weights_qparam": [234, 239], "dnnl_primitive_attr_set_rnn_weights_projection_qparam": [234, 239], "dnnl_primitive_attr_get_rnn_weights_projection_qparam": [234, 239], "dnnl_vanilla_rnn_forward_primitive_desc_cr": [234, 239, 266], "dnnl_vanilla_rnn_backward_primitive_desc_cr": [234, 266], "dnnl_lstm_forward_primitive_desc_cr": [234, 266], "dnnl_lstm_backward_primitive_desc_cr": [234, 266], "diff_weights_peephole_desc": [234, 266, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "diff_weights_projection_desc": [234, 266, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "dnnl_gru_forward_primitive_desc_cr": [234, 266], "dnnl_gru_backward_primitive_desc_cr": [234, 266], "dnnl_lbr_gru_forward_primitive_desc_cr": [234, 266], "dnnl_lbr_gru_backward_primitive_desc_cr": [234, 266], "dnnl_augru_forward_primitive_desc_cr": [234, 266], "dnnl_augru_backward_primitive_desc_cr": [234, 266], "diff_attention_desc": [234, 266, 370, 420], "dnnl_lbr_augru_forward_primitive_desc_cr": [234, 266], "dnnl_lbr_augru_backward_primitive_desc_cr": [234, 266], "dnnl_matmul_primitive_desc_cr": [234, 255], "dnnl_resampling_forward_primitive_desc_cr": [234, 265], "dnnl_resampling_backward_primitive_desc_cr": [234, 265], "dnnl_reduction_primitive_desc_cr": [234, 263], "dnnl_get_primitive_cache_capac": [234, 260], "dir": [234, 266, 267, 292], "dnnl_set_max_cpu_isa": [234, 267], "dnnl_get_effective_cpu_isa": [234, 267], "dnnl_set_cpu_isa_hint": [234, 267], "isa_hint": [234, 267, 292], "dnnl_get_cpu_isa_hint": [234, 267], "offsetc": [234, 242, 273, 292, 297], "ao": [234, 242, 273, 292, 297], "bo": [234, 242, 273, 292, 297], "dnnl_dt2str": 234, "dnnl_fpmath_mode2str": 234, "dnnl_engine_kind2str": 234, "dnnl_fmt_tag2str": 234, "dnnl_prop_kind2str": 234, "dnnl_prim_kind2str": 234, "dnnl_alg_kind2str": 234, "dnnl_rnn_flags2str": 234, "dnnl_rnn_direction2str": 234, "dnnl_scratchpad_mode2str": 234, "dnnl_cpu_isa2str": 234, "dnnl_cpu_isa_hints2str": 234, "dnnl_runtime2str": 234, "dnnl_fmt_kind2str": 234, "dnnl_ocl_interop_memory_cr": [234, 257], "dnnl_ocl_interop_memory_get_memory_kind": [234, 257], "dnnl_ocl_interop_memory_get_mem_object": [234, 257], "mem_object": [234, 257, 295], "dnnl_ocl_interop_memory_set_mem_object": [234, 257], "dnnl_ocl_interop_engine_get_cache_blob_id": [234, 257], "dnnl_ocl_interop_engine_get_cache_blob": [234, 257, 295], "dnnl_ocl_interop_engine_create_from_cache_blob": [234, 257], "dnnl_ocl_interop_engine_cr": [234, 257], "dnnl_ocl_interop_engine_get_context": [234, 257], "dnnl_ocl_interop_get_devic": [234, 257], "dnnl_ocl_interop_stream_cr": [234, 257], "dnnl_ocl_interop_stream_get_command_queu": [234, 257], "dnnl_sycl_interop_engine_cr": [234, 272], "dnnl_sycl_interop_engine_get_context": [234, 272], "dnnl_sycl_interop_engine_get_devic": [234, 272], "dnnl_sycl_interop_memory_cr": [234, 272], "dnnl_sycl_interop_memory_get_memory_kind": [234, 272], "dnnl_sycl_interop_memory_set_buff": [234, 272], "dnnl_sycl_interop_stream_cr": [234, 272], "dnnl_sycl_interop_stream_get_queu": [234, 272], "dnnl_sycl_interop_primitive_execut": [234, 272], "return_ev": [234, 272], "dnnl_threadpool_interop_stream_cr": [234, 273], "dnnl_threadpool_interop_stream_get_threadpool": [234, 273], "dnnl_threadpool_interop_set_max_concurr": [234, 273], "max_concurr": [234, 273], "dnnl_threadpool_interop_get_max_concurr": [234, 273], "dnnl_threadpool_interop_sgemm": [234, 273], "dnnl_threadpool_interop_gemm_u8s8s32": [234, 273], "dnnl_threadpool_interop_gemm_s8s8s32": [234, 273], "dnnl_engine_get_count": [234, 249], "dnnl_engine_get_kind": [234, 249], "dnnl_stream_get_engin": [234, 270], "dnnl_get_default_fpmath_mod": [234, 250], "dnnl_graph_allocator_cr": [234, 276], "dnnl_graph_allocator_destroi": [234, 276], "dnnl_graph_make_engine_with_alloc": [234, 280], "dnnl_graph_logical_tensor_init": [234, 283], "dnnl_graph_logical_tensor_init_with_dim": [234, 283], "dnnl_graph_logical_tensor_init_with_strid": [234, 283], "dnnl_graph_logical_tensor_get_mem_s": [234, 283], "dnnl_graph_logical_tensor_is_equ": [234, 283], "lt1": [234, 283], "lt2": [234, 283], "dnnl_graph_tensor_cr": [234, 288], "dnnl_graph_tensor_destroi": [234, 288], "dnnl_graph_tensor_get_data_handl": [234, 288], "dnnl_graph_tensor_set_data_handl": [234, 288], "dnnl_graph_tensor_get_engin": [234, 288], "dnnl_graph_op_cr": [234, 284], "dnnl_graph_op_destroi": [234, 284], "dnnl_graph_op_add_input": [234, 284], "dnnl_graph_op_add_output": [234, 284], "dnnl_graph_op_set_attr_f32": [234, 284], "value_len": [234, 284], "dnnl_graph_op_set_attr_bool": [234, 284], "dnnl_graph_op_set_attr_s64": [234, 284], "dnnl_graph_op_set_attr_str": [234, 284], "dnnl_graph_op_get_id": [234, 284], "dnnl_graph_op_get_kind": [234, 284], "dnnl_graph_partition_create_with_op": [234, 285], "dnnl_graph_partition_destroi": [234, 281, 285], "dnnl_graph_partition_get_op_num": [234, 285], "num": [234, 281, 285], "dnnl_graph_partition_get_op": [234, 285], "dnnl_graph_partition_get_id": [234, 285], "dnnl_graph_partition_compil": [234, 285], "in_num": [234, 285], "out_num": [234, 285], "dnnl_graph_partition_get_input_ports_num": [234, 285], "dnnl_graph_partition_get_input_port": [234, 285], "dnnl_graph_partition_get_output_ports_num": [234, 285], "dnnl_graph_partition_get_output_port": [234, 285], "dnnl_graph_partition_is_support": [234, 285], "dnnl_graph_partition_get_engine_kind": [234, 285], "dnnl_graph_compiled_partition_cr": [234, 277], "dnnl_graph_compiled_partition_execut": [234, 277], "num_input": [234, 277, 287], "num_output": [234, 277, 287], "dnnl_graph_compiled_partition_destroi": [234, 277], "dnnl_graph_compiled_partition_query_logical_tensor": [234, 277], "dnnl_graph_compiled_partition_get_inplace_port": [234, 277], "num_inplace_pair": [234, 277], "inplace_pair": [234, 277], "dnnl_graph_graph_cr": [234, 281], "dnnl_graph_graph_create_with_fpmath_mod": [234, 281], "dnnl_graph_graph_destroi": [234, 281], "dnnl_graph_add_op": [234, 281], "dnnl_graph_graph_fin": [234, 281], "dnnl_graph_graph_is_fin": [234, 281], "dnnl_graph_graph_filt": [234, 281], "dnnl_graph_graph_get_partition_num": [234, 281], "dnnl_graph_graph_get_partit": [234, 281], "dnnl_graph_get_compiled_partition_cache_capac": [234, 278], "dnnl_graph_set_compiled_partition_cache_capac": [234, 278], "dnnl_graph_set_constant_tensor_cach": [234, 279], "dnnl_graph_get_constant_tensor_cach": [234, 279], "dnnl_graph_sycl_interop_allocator_cr": [234, 287], "sycl_malloc": [234, 287, 294], "sycl_fre": [234, 287, 294], "dnnl_graph_sycl_interop_make_engine_with_alloc": [234, 287], "dnnl_graph_sycl_interop_compiled_partition_execut": [234, 287], "sycl_ev": [234, 287], "complain_dnnl_error_and_exit": 234, "complain_fmt": 234, "dnnl_arg_attr_multiple_post_op_bas": [234, 262], "dnnl_arg_attr_output_scal": [234, 262], "dnnl_arg_diff_augru_attent": [234, 262], "dnnl_arg_diff_dst_0": [234, 262], "dnnl_arg_diff_dst_1": [234, 262], "dnnl_arg_diff_dst_2": [234, 262], "dnnl_arg_diff_src_0": [234, 262], "dnnl_arg_diff_src_2": [234, 262], "dnnl_arg_diff_src_3": [234, 262], "dnnl_arg_diff_weights_0": [234, 262], "dnnl_arg_diff_weights_1": [234, 262], "dnnl_arg_diff_weights_2": [234, 262], "dnnl_arg_diff_weights_3": [234, 262], "dnnl_arg_dst_0": [234, 262], "dnnl_arg_dst_1": [234, 262], "dnnl_arg_dst_2": [234, 262], "dnnl_arg_multiple_dst": [234, 262], "dnnl_arg_src_2": [234, 262], "dnnl_arg_src_3": [234, 262], "dnnl_arg_weights_0": [234, 262], "dnnl_arg_weights_1": [234, 262], "dnnl_arg_weights_2": [234, 262], "dnnl_arg_weights_3": [234, 262], "dnnl_enable_except": 234, "dnnl_jit_profile_linux_jitdump": [234, 267], "dnnl_jit_profile_linux_jitdump_use_tsc": [234, 267], "dnnl_jit_profile_linux_perf": [234, 267], "dnnl_jit_profile_linux_perfmap": [234, 267], "dnnl_jit_profile_non": [234, 267], "dnnl_jit_profile_vtun": [234, 267], "dnnl_runtime_dpcpp": [234, 267], "dnnl_runtime_f32_v": [234, 256, 324], "dnnl_runtime_non": [234, 267], "dnnl_runtime_ocl": [234, 267], "dnnl_runtime_omp": [234, 267], "dnnl_runtime_s32_v": [234, 256], "dnnl_runtime_seq": [234, 267], "dnnl_runtime_size_v": [234, 256], "dnnl_runtime_sycl": [234, 267], "dnnl_runtime_tbb": [234, 267], "dnnl_runtime_threadpool": [234, 267], "dnnl_throw_error": 234, "msg": 234, "pragma_macro": 234, "type_cas": 234, "bla": [238, 273, 297, 479], "servic": [238, 243], "convert_to_c": [239, 249, 250, 262, 266, 292, 295, 296, 438], "aalgorithm": [239, 292, 378, 382, 384, 386, 388, 390, 392, 394, 396, 428, 430, 442, 444, 446, 459, 463, 465, 472, 474], "dnnl_": 239, "_primitive_desc_cr": 239, "as_data_typ": [239, 446], "output_height": [239, 446], "output_height_1x1_convolut": [239, 446], "output_width": [239, 446], "output_width_1x1_convolut": [239, 446], "dev_guide_attributes_post_ops_depthwis": [239, 446], "dev_guide_attributes_post_ops_depthwise_fus": [239, 262, 446], "another_input": [239, 446], "sic": [239, 454], "slc": [239, 454], "dic": [239, 454], "dlc": [239, 454], "rnn_attr": 239, "rnn_pd": 239, "nativ": [239, 454], "five": [239, 454], "weights_lay": [239, 454], "weights_iter": [239, 454], "violat": [239, 454], "batch_normalization_backward": [240, 292, 452], "allowed": 241, "algebra": 242, "gemm_u8s8s32": [242, 292, 297], "gemm_s8s8s32": [242, 292, 297], "mxk": [242, 273, 297], "kxn": [242, 273, 297], "mxn": [242, 273, 297], "xerbla": [242, 273, 297], "a_offset": [242, 273, 297], "b_offset": [242, 273, 297], "c_offset": [242, 273, 297], "convolution_backward_data": [245, 292, 452], "deconvolution_backward_data": [247, 292, 452], "deconvolution_backward_weight": [247, 292, 452], "deconvolution_forward": [247, 292, 388, 390, 452], "use_dst_for_bwd": [248, 394], "fpmath": [250, 454], "inner_product_backward_data": [251, 292, 452], "inner_product_backward_weight": [251, 292, 452], "layer_normalization_backward": [253, 292, 452], "stat": 253, "manipul": 256, "discourag": 256, "inequ": [256, 407, 440], "set_buff": [256, 296], "ordinari": 256, "ill": 256, "clear": [256, 260, 278], "never": [256, 267], "region": [256, 440], "area": [256, 440], "encompass": [256, 440], "reshap": [256, 440], "join": [256, 440], "consecut": [256, 440], "in_md": [256, 440], "out_md": 256, "expect_out_md": [256, 440], "in_dim": 256, "out_dim": 256, "in_tag": 256, "out_tag": 256, "piec": [256, 262], "lie": 256, "oihw_4i16o4i": 256, "oihw_4i16o4i_": 256, "4i16o4i": 256, "had": [256, 272, 295, 296, 345, 438], "unmap": [256, 438], "mainli": [256, 438], "made": [256, 438], "retriev": [257, 262], "prelu_backward": [259, 292, 452], "get_primitive_cache_capac": [260, 292], "set_primitive_cache_capac": [260, 292], "held": [260, 278], "excess": [260, 278], "aqueri": [262, 292], "32bit": 262, "qualifi": 262, "dev_guide_attributes_post_ops_binary_fus": 262, "mnemon": 262, "peephol": [262, 266, 432, 434, 466], "norm_lp": 263, "resampling_backward": [265, 292, 452], "resampling": 265, "rnn_flag": [266, 292], "rnn_primitive_desc_bas": [266, 292, 370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 456, 481, 483], "lbr": [266, 419, 420, 421, 422, 423, 424, 425, 426], "aid": 267, "version_t": [267, 292], "cpu_isa": [267, 292], "cpu_isa_hint": [267, 292], "set_verbos": [267, 292], "get_default_fpmath_mod": [267, 292], "set_jit_dump": [267, 292], "set_jit_profiling_flag": [267, 292], "set_jit_profiling_jitdumpdir": [267, 292], "minor": [267, 484], "dnnl_jit_dump": 267, "dnnl_jit_profil": 267, "vtune": [267, 301, 338], "amplifi": [267, 301], "pid": 267, "perf": 267, "mkdtemp": 267, "xxxxxx": 267, "home": 267, "revert": 267, "invok": 267, "dnnl_max_cpu_isa": 267, "dnnl_cpu_isa": 267, "reflect": 267, "dnnl_cpu_isa_hint": 267, "shuffle_backward": [268, 292, 452], "softmax_backward": [269, 292, 452], "threapdool_ifac": [273, 297], "threadloc": 273, "trait": [274, 292, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "handle_trait": [274, 292, 407], "acquir": 276, "make_alloc": [276, 294], "dealloc": [276, 287, 330], "input_id": [277, 401], "get_compiled_partition_cache_capac": [278, 293], "set_compiled_partition_cache_capac": [278, 293], "set_constant_tensor_cach": [279, 293], "get_constant_tensor_cach": [279, 293], "make_engine_with_alloc": [280, 293, 294], "supplement": [280, 287], "meta": 283, "enrich": 283, "progress": 283, "toward": 283, "60": 283, "layout_id": [283, 402], "boolean": 284, "xe": 290, "aarch64": 290, "openpow": 290, "ppc64": 290, "practition": 290, "adevic": [294, 296], "acontext": [294, 296], "c_partit": 294, "amemori": [295, 296], "set_mem_object": 295, "aqueu": 296, "abuff": 296, "aprimit": 296, "query_md": [296, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 452, 456, 457, 459, 460, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_threadpool": 297, "cnn_inference_int8": [301, 312], "cnn_training_bf16": 301, "cnn_training_f32": 301, "cpu_cnn_training_f32": 301, "cpu_matmul_quant": 301, "cpu_rnn_inference_f32": [301, 322], "cpu_rnn_inference_int8": [301, 323], "cpu_sgemm_and_matmul": 301, "gpu_opencl_interop": [301, 331], "memory_format_propag": 301, "rnn_training_f32": 301, "sycl_interop_buff": [301, 364], "untitl": 301, "legal": 301, "trademark": 301, "awai": [308, 310, 311], "detriment": [310, 311], "continu": [311, 330], "although": 312, "realist": 312, "_x": 320, "research": 320, "max_": 320, "min_": 320, "earli": 320, "obviou": 320, "disadvantag": 320, "wors": 320, "inevit": 320, "unidirectin": [322, 323], "charact": [322, 323], "facil": [327, 330, 331, 364], "resid": [327, 330, 331, 364], "thank": [327, 330], "lightweight": [327, 330], "compris": 330, "singleton": 330, "ten": 330, "third": 330, "plai": 330, "educ": 330, "aliv": 330, "_d": 330, "relu_d": 330, "human": [330, 364], "encourag": 330, "experi": 330, "familiar": 330, "spoil": 330, "oop": 330, "forgot": 330, "liter": 331, "enqueu": 331, "get_ocl_mem_object": 331, "realiz": [331, 364], "heavier": [331, 364], "serv": 331, "submiss": 331, "logo": 338, "arc": 338, "atom": 338, "iri": 338, "openvino": 338, "pentium": 338, "subsidiari": 338, "brand": 338, "countri": 338, "khrono": 338, "central": 345, "understood": 345, "reader": 345, "bother": 345, "idiomat": 345, "realli": 345, "ver": 345, "1x128x14x14": 345, "326904": 345, "256x128x3x3": 345, "244141": 345, "bia_undef": [345, 346], "mb1_ic128oc256_ih14oh14kh3sh1dh0ph1_iw14ow14kw3sw1dw0pw1": 345, "20312": 345, "ws_undef": 345, "mb1ic256_ih14oh14kh3sh1ph1_iw14ow14kw3sw1pw1": 345, "187012": 345, "1x256x14x14": 345, "0419922": 345, "knowledg": 346, "ex": 346, "user_": 346, "meant": 346, "enter": 346, "easili": 346, "launch": 346, "shell": 346, "tell": 346, "elsewher": 346, "38": 346, "mb128_ic3oc96_ih227oh55kh11sh4dh0ph0_iw227ow55kw11sw4dw0pw0": 346, "314": 346, "data_f32": 346, "diff_undef": 346, "128x96x55x55": 346, "87695": 346, "incorpor": 346, "reoder": 346, "conv_dst1": 346, "pai": 346, "penalti": 346, "96x3x11x11": 346, "0310059": 346, "3101": 346, "66895": 346, "80396": 346, "closer": 346, "futher": 346, "desctiptor": 346, "compli": 346, "0148926": 346, "968": 346, "66797": 346, "kmp_affin": 346, "granular": 346, "platinum": 346, "8180": 346, "50ghz": 346, "28": 346, "numa": 346, "ram": 346, "ddr4": 346, "gb": 346, "weak": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "allow_empti": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "get_primitive_desc": [369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 403, 405, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 441, 443, 447, 449, 452, 458, 460, 462, 464, 467, 469, 471, 473, 477, 480, 482], "get_kind": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 442, 443, 444, 447, 448, 449, 450, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 480, 481, 482, 483], "default_attr": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 459, 461, 463, 465, 468, 470, 472, 474, 478, 481, 483], "get_cell_kind": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_prop_kind": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_direct": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_dil": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_padding_l": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_padding_r": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_epsilon": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_algorithm": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_alpha": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_beta": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_axi": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_local_s": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_k": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_p": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_factor": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_activation_kind": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_kernel": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_group_s": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "get_primitive_attr": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 457, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "next_impl": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 459, 461, 463, 465, 466, 468, 470, 472, 474, 478, 481, 483], "augru_attention_desc": [370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "diff_augru_attention_desc": [370, 372, 404, 406, 420, 422, 424, 426, 432, 434, 466, 481, 483], "signifi": [370, 372, 374, 376, 378, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 440, 442, 444, 448, 450, 459, 461, 463, 465, 468, 470, 472, 474, 481, 483], "src0": 378, "verifi": [380, 456, 461, 478], "caller": [380, 456, 461, 478], "prim_kind": [380, 456, 461, 478], "prop_kind1": [380, 456, 461, 478], "prop_kind2": [380, 456, 461, 478], "get_count": 398, "uniniti": [398, 407, 438, 452, 476], "thrown": [398, 407, 438, 452, 476], "wrap_c_api": 399, "explanatori": 399, "output_id": 401, "union": 402, "descend": [407, 452, 456, 457, 466], "weak_ptr": 407, "shared_ptr": 407, "delet": 407, "dummi": 407, "destructor": 408, "validate_dim": 438, "min_siz": 438, "data_type_s": 438, "adata_typ": [438, 440], "map_data": 438, "unmap_data": 438, "absenc": [438, 440], "helper": 438, "aformat_tag": 440, "permute_ax": 440, "get_ndim": 440, "get_padded_offset": 440, "get_submemory_offset": 440, "get_format_kind": 440, "is_zero": 440, "new_desc": 440, "involv": 440, "get_params_sum": 446, "get_params_eltwis": 446, "get_params_dw": 446, "get_params_prelu": 446, "zeropoint": 446, "oc_dim": 446, "mb_dim": 446, "channel_dim": 446, "height_dim": 446, "prelu_weight": 446, "weight_desc": [448, 450], "c_pd": 452, "get_fpmath_mod": 454, "set_fpmath_mod": 454, "get_post_op": 454, "get_rnn_data_qparam": 454, "get_rnn_weights_qparam": 454, "set_rnn_weights_projection_qparam": 454, "get_rnn_weights_projection_qparam": 454, "rnn_d": 454, "enumer": 457, "get_src_engin": 461, "get_dst_engin": 461, "aflag": 476, "constexpr": 479, "virtual": 479, "subclass": 479, "closur": 479, "cpu_runtim": 484, "gpu_runtim": 484, "absent": 484}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"advanc": 0, "topic": 0, "build": [1, 18, 19, 24, 25, 30, 32, 129, 130, 141, 143], "link": [1, 42], "class": [2, 3, 4, 5, 6, 7, 8], "dnnl": [2, 3, 4, 5, 6, 7, 8, 146, 147, 148, 152, 156, 159, 160, 161, 162, 164, 166, 168, 170, 171, 172, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 292, 293, 294, 295, 296, 297, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483], "graph": [2, 3, 4, 5, 6, 7, 8, 14, 19, 31, 32, 159, 160, 161, 162, 164, 166, 168, 235, 275, 281, 293, 294], "alloc": [2, 276, 345], "overview": [2, 3, 4, 5, 6, 7, 8, 27, 124, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 294, 295, 296, 297, 298, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484], "detail": [2, 3, 4, 5, 6, 7, 8, 15, 17, 21, 23, 28, 38, 41, 43, 44, 127, 128, 131, 132, 133, 134, 136, 137, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 294, 295, 296, 297, 298, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484], "document": [2, 3, 4, 5, 6, 7, 8, 18, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 294, 295, 296, 297, 298, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484], "construct": [2, 3, 4, 5, 6, 7, 8, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "compiled_partit": 3, "method": [3, 4, 5, 6, 7, 8, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 399, 404, 406, 407, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 457, 459, 460, 461, 463, 465, 466, 468, 470, 472, 474, 476, 478, 479, 481, 483], "logical_tensor": [5, 159, 160, 161], "typedef": [5, 239, 246, 249, 256, 262, 267, 270, 276, 277, 281, 284, 285, 287, 288, 438], "op": [6, 11, 15, 17, 21, 23, 28, 31, 38, 41, 43, 44, 127, 131, 132, 133, 134, 135, 136, 137, 162, 164, 284, 308], "partit": [7, 31, 166, 277, 278, 285], "tensor": [8, 22, 31, 279, 283, 288], "primit": [9, 10, 11, 12, 13, 14, 44, 126, 129, 130, 177, 260, 261, 302, 304, 306, 315, 317, 327, 328, 330, 331, 334, 336, 339, 341, 343, 345, 347, 349, 351, 353, 355, 358, 360, 362, 364, 452, 487], "attribut": [9, 10, 11, 12, 13, 15, 17, 21, 23, 28, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 131, 132, 133, 134, 135, 136, 137, 239], "usag": [9, 126], "support": [9, 11, 15, 17, 21, 28, 33, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 131, 132, 134, 136, 137, 140, 237, 487], "relat": [9, 126], "error": [9, 399], "handl": [9, 27, 407], "float": [10, 26, 33, 250], "point": [10, 26, 33, 250], "math": [10, 250], "mode": [10, 143, 250], "The": 10, "A": 10, "note": [10, 15, 17, 20, 21, 23, 28, 38, 41, 43, 44, 127, 128, 131, 132, 133, 136, 137], "default": 10, "post": [11, 15, 17, 21, 23, 28, 38, 41, 43, 44, 127, 131, 132, 133, 134, 135, 136, 137, 308], "eltwis": [11, 28, 213, 248], "sum": [11, 137, 232, 271, 362, 477, 478], "depthwis": 11, "binari": [11, 17, 197, 241, 306, 308, 377, 378], "prelu": [11, 92, 128, 225, 259], "exampl": [11, 12, 13, 15, 17, 21, 23, 28, 29, 37, 38, 39, 41, 43, 44, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 143, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 319, 322, 323, 328, 334, 336, 339, 341, 343, 346, 347, 349, 351, 353, 355, 357, 358, 360, 362], "chain": 11, "relu": [11, 103, 327, 330], "tanh": [11, 120], "scaleshift": 11, "quantiz": [12, 33, 37, 94, 320], "introduct": [12, 14, 31, 37, 140, 142, 345], "model": [12, 236, 367], "numer": [12, 26], "behavior": [12, 26], "convolut": [12, 23, 58, 205, 245, 317, 345], "workflow": [12, 37, 140], "per": 12, "channel": [12, 142], "scale": [12, 15, 37, 41], "api": [12, 20, 126, 238, 243, 252, 257, 272, 273, 275, 282, 287, 331, 364], "output": [12, 22, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 143], "1": [12, 23, 40], "weight": 12, "2": [12, 23, 40], "group": [12, 23, 58], "scratchpad": 13, "memori": [13, 14, 22, 27, 124, 129, 142, 170, 171, 172, 256, 327, 330, 331, 345, 364, 438, 440], "engin": [13, 14, 126, 152, 249, 280, 326, 327, 330, 331, 364, 398], "librari": [13, 18, 19, 26, 42, 290], "manag": [13, 129], "user": 13, "basic": [14, 31], "concept": [14, 31], "stream": [14, 191, 270, 327, 330, 331, 364, 476], "object": [14, 27, 124, 327, 330, 331, 345, 364], "level": 14, "abstract": 14, "creat": [14, 327, 330, 331, 345, 364], "extens": [14, 235, 331, 364], "batch": [15, 240, 304], "normal": [15, 41, 43, 240, 253, 304, 336, 339], "gener": [15, 17, 21, 23, 26, 28, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 131, 132, 133, 134, 135, 136, 137, 142], "forward": [15, 23, 28, 36, 38, 41, 43, 127, 128, 133, 135, 136], "differ": [15, 23, 28, 36, 38, 41, 127, 128, 133, 135, 136], "between": [15, 23, 28, 36, 38, 41, 127, 128, 133, 135, 136, 326, 327], "train": [15, 23, 26, 28, 33, 36, 38, 41, 127, 128, 133, 134, 135, 136, 139, 140, 313, 314, 319, 357], "infer": [15, 23, 26, 28, 33, 35, 36, 37, 38, 41, 127, 128, 133, 135, 136, 310, 311, 312, 322, 323, 332], "backward": [15, 23, 28, 36, 38, 41, 43, 127, 128, 133, 135, 136], "execut": [15, 17, 21, 23, 28, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 327, 330, 331, 345, 364], "argument": [15, 17, 21, 23, 28, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 131, 132, 133, 134, 135, 136, 137], "implement": [15, 17, 21, 23, 28, 38, 41, 43, 44, 127, 128, 131, 132, 133, 134, 135, 136, 137, 346], "data": [15, 17, 21, 23, 26, 28, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 131, 132, 133, 134, 135, 136, 137, 142, 246, 327, 330, 331, 345, 364], "type": [15, 17, 21, 23, 26, 28, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 131, 132, 133, 134, 135, 136, 137, 246], "represent": [15, 17, 21, 23, 28, 38, 41, 43, 44, 127, 128, 131, 132, 134, 136, 137], "mean": [15, 41], "varianc": [15, 41], "shift": [15, 41], "sourc": [15, 17, 18, 41, 43, 127, 131, 136, 137, 141, 345], "destin": [15, 17, 41, 43, 127, 131, 136, 137, 345], "Their": [15, 41, 43, 127, 136], "gradient": [15, 41, 43, 127, 136], "limit": [15, 17, 19, 21, 23, 26, 28, 38, 41, 43, 44, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137], "perform": [15, 16, 17, 21, 23, 28, 38, 41, 43, 44, 127, 128, 130, 131, 132, 133, 135, 136, 137, 345, 346, 366], "tip": [15, 17, 21, 23, 28, 38, 41, 43, 44, 127, 128, 131, 132, 133, 135, 136, 137], "benchmark": [16, 125], "from": [18, 141, 327], "download": 18, "code": [18, 39, 141, 330], "linux": [18, 42, 130], "maco": [18, 42], "gcc": 18, "clang": 18, "intel": [18, 26, 40, 141], "oneapi": [18, 290, 298], "dpc": [18, 27, 291], "c": [18, 199, 206, 211], "compil": [18, 19, 31, 277, 278], "sycl": [18, 27, 272, 287, 300, 364], "runtim": [18, 19, 24, 42, 125, 252, 282], "target": [18, 19], "aarch64": [18, 19], "x64": 18, "host": [18, 19], "arm": [18, 19], "comput": [18, 19, 40], "acl": 18, "window": [18, 42], "microsoft": 18, "visual": 18, "valid": [18, 20, 327, 330, 331, 364], "instal": 18, "option": 19, "common": [19, 243, 262], "configur": [19, 125, 346], "function": [19, 134, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 294, 295, 296, 297, 327, 330, 331, 345, 364], "onednn_enable_workload": 19, "onednn_enable_primit": 19, "onednn_enable_primitive_cpu_isa": 19, "onednn_enable_primitive_gpu_isa": 19, "cpu": [19, 24, 25, 39, 40, 125, 326, 327, 364], "specif": [19, 22, 36], "architectur": [19, 26], "dispatch": [19, 24], "control": [19, 24, 25, 30, 32, 129, 130, 143], "isa": [19, 25], "hint": [19, 25], "openmp": 19, "thread": [19, 125, 138], "block": [19, 142, 346], "tbb": 19, "threadpool": [19, 138, 273], "vendor": 19, "bla": [19, 242], "gpu": [19, 39, 40, 326, 327, 331, 364], "opencl": [19, 124, 257, 291, 331], "compon": 19, "input": [20, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "concat": [21, 57, 204, 244, 315, 379, 380], "name": 22, "convent": 22, "variabl": 22, "formula": 22, "verbos": [22, 143], "rnn": [22, 134, 266, 302, 322, 323, 341, 357], "notat": 22, "format": [22, 142, 345, 346], "tag": [22, 130], "regular": [23, 58], "dilat": [23, 58], "deconvolut": [23, 247], "transpos": 23, "3": 23, "algorithm": [23, 146], "direct": 23, "winograd": 23, "automat": 23, "select": 23, "time": [24, 25, 30, 32, 129, 130, 143], "run": [25, 32, 129, 130, 143], "onednn": [26, 42, 125, 130, 138, 141, 238, 327, 330, 331, 364], "environ": 26, "hardwar": 26, "r": 26, "processor": [26, 40], "graphic": 26, "xe": 26, "interoper": [27, 124, 252, 257, 272, 273, 282, 287, 291], "buffer": [27, 124, 345], "usm": [27, 124], "interfac": [27, 124], "depend": 27, "except": 28, "experiment": 30, "featur": [30, 130], "logic": [31, 283], "dump": 32, "fusion": 33, "pattern": 33, "low": 34, "precis": 34, "int8": [34, 35, 37, 40, 312, 323, 332], "bf16": [34, 313], "f16": 34, "best": 35, "practic": 35, "fp32": [35, 139], "aspect": 36, "propag": [36, 345], "kind": [36, 152, 164, 177], "workspac": 36, "process": [37, 141], "rang": 37, "factor": 37, "inner": [38, 251, 334], "product": [38, 251, 334], "inspect": [39, 366], "jit": 39, "nuanc": 40, "mix": 40, "u8": [40, 308], "s8": 40, "avx2": 40, "avx": 40, "512": 40, "dl": 40, "boost": 40, "same": 40, "refer": [40, 290], "layer": [41, 253, 336], "header": [42, 327, 330, 331, 364], "file": 42, "harden": 42, "local": [43, 339], "respons": [43, 339], "lrn": [43, 219, 254], "matrix": [44, 255], "multipl": [44, 142, 255], "ab": 45, "oper": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 237], "absbackward": 46, "add": 47, "avgpool": 48, "avgpoolbackward": 49, "batchnormforwardtrain": 50, "batchnorminfer": 51, "batchnormtrainingbackward": 52, "biasadd": 53, "biasaddbackward": 54, "clamp": 55, "clampbackward": 56, "convolutionbackwarddata": 59, "convolutionbackwardweight": 60, "convtranspos": 61, "convtransposebackwarddata": 62, "convtransposebackwardweight": 63, "dequant": 64, "divid": 65, "dynamicdequant": 66, "dynamicquant": 67, "elu": 68, "elubackward": 69, "end": 70, "exp": 71, "gelu": 72, "gelubackward": 73, "hardswish": 74, "hardswishbackward": 75, "interpol": 76, "interpolatebackward": 77, "layernorm": 78, "layernormbackward": 79, "leakyrelu": 80, "log": 81, "logsoftmax": 82, "logsoftmaxbackward": 83, "matmul": [84, 221, 320, 324, 332, 343, 435, 436], "maximum": 85, "maxpool": 86, "maxpoolbackward": 87, "minimum": 88, "mish": 89, "mishbackward": 90, "multipli": 91, "broadcast": [92, 93], "rule": [92, 93], "prelubackward": 93, "reciproc": 95, "reducel1": 96, "reducel2": 97, "reducemax": 98, "reducemean": 99, "reducemin": 100, "reduceprod": 101, "reducesum": 102, "relubackward": 104, "reorder": [105, 132, 227, 264, 326, 327, 345, 353, 460, 461], "round": 106, "sigmoid": 107, "sigmoidbackward": 108, "softmax": [109, 136, 231, 269, 360], "softmaxbackward": 110, "softplu": 111, "softplusbackward": 112, "sqrt": 113, "sqrtbackward": 114, "squar": 115, "squareddiffer": 116, "staticreshap": 117, "statictranspos": 118, "subtract": 119, "tanhbackward": 121, "typecast": 122, "wildcard": 123, "set": 125, "whole": 125, "machin": 125, "singl": 125, "numa": 125, "domain": 125, "sever": 125, "core": 125, "within": 125, "persist": 126, "cach": [126, 129, 260, 278, 279], "pool": [127, 224, 258, 345, 347], "consumpt": 129, "profil": [129, 130, 144, 346, 366], "vtune": [130, 144], "amplifi": [130, 144], "itt": 130, "hotspot": 130, "microarchitectur": 130, "inform": [130, 141, 338], "perf": 130, "reduct": [131, 226, 263, 351, 458, 459], "resampl": [133, 228, 265, 355], "nearest": 133, "neighbor": 133, "bilinear": 133, "cell": 134, "vanilla": 134, "lstm": [134, 220, 341], "peephol": 134, "project": 134, "lstmp": 134, "gru": 134, "linear": 134, "befor": 134, "reset": 134, "augru": [134, 195, 302], "consider": 134, "shuffl": [135, 230, 268, 358], "layout": [135, 142], "us": [138, 142], "base": 138, "bfp16": 139, "bfloat16": 140, "transit": 141, "mkl": 141, "dnn": 141, "summari": [141, 346], "chang": 141, "broken": 141, "compat": 141, "develop": [141, 290], "understand": 142, "nomenclatur": 142, "plain": 142, "nchw": 142, "nhwc": 142, "chwn": 142, "relev": 142, "read": 142, "stride": 142, "what": 142, "ar": 142, "8": 142, "16": 142, "enabl": 143, "onednn_verbos": 143, "timestamp": 143, "decrypt": 143, "tm": 144, "enum": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "dnnl_alg_kind_t": 145, "valu": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "cpu_isa": 147, "cpu_isa_hint": 148, "dnnl_cpu_isa_hints_t": 149, "dnnl_cpu_isa_t": 150, "dnnl_data_type_t": 151, "dnnl_engine_kind_t": 153, "dnnl_format_kind_t": 154, "dnnl_format_tag_t": 155, "fpmath_mod": 156, "dnnl_fpmath_mode_t": 157, "dnnl_graph_layout_type_t": 158, "data_typ": [159, 170], "layout_typ": 160, "property_typ": 161, "attr": 162, "dnnl_graph_op_attr_t": 163, "dnnl_graph_op_kind_t": 165, "polici": 166, "dnnl_graph_partition_policy_t": 167, "statu": [168, 189, 286], "dnnl_graph_tensor_property_t": 169, "format_kind": 171, "format_tag": 172, "normalization_flag": 173, "dnnl_normalization_flags_t": 174, "ocl_interop": [175, 295], "memory_kind": [175, 193], "dnnl_ocl_interop_memory_kind_t": 176, "dnnl_primitive_kind_t": 178, "prop_kind": 179, "dnnl_prop_kind_t": 180, "queri": 181, "dnnl_query_t": 182, "rnn_direct": 183, "dnnl_rnn_direction_t": 184, "rnn_flag": 185, "dnnl_rnn_flags_t": 186, "scratchpad_mod": 187, "dnnl_scratchpad_mode_t": 188, "dnnl_status_t": 190, "flag": 191, "dnnl_stream_flags_t": 192, "sycl_interop": [193, 294, 296], "dnnl_sycl_interop_memory_kind_t": 194, "cpp": [195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "batch_norm": 196, "bnorm_u8_via_binary_postop": 198, "cnn_inference_f32": [199, 200], "cnn_inference_int8": 201, "cnn_training_bf16": 202, "cnn_training_f32": 203, "cpu_cnn_training_f32": 206, "cpu_matmul_quant": 207, "cpu_rnn_inference_f32": 208, "cpu_rnn_inference_int8": 209, "cpu_sgemm_and_matmul": 210, "cross_engine_reord": [211, 212], "getting_start": 214, "gpu_opencl_interop": 215, "inference_int8_matmul": 216, "inner_product": 217, "layer_norm": 218, "memory_format_propag": [222, 345], "performance_profil": 223, "rnn_training_f32": 229, "sycl_interop_buff": 233, "global": [234, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 294, 295, 296, 297], "namespac": [234, 292, 293, 294, 295, 296, 297, 298, 299, 300], "program": [236, 367], "macro": [246, 256, 262, 267, 283], "servic": 267, "util": [274, 289], "constant": 279, "deep": 290, "neural": 290, "network": 290, "guid": 290, "threadpool_interop": [297, 479], "std": 299, "orphan": 301, "untitl": [303, 305, 307, 309, 316, 318, 321, 325, 329, 333, 335, 337, 340, 342, 344, 348, 350, 352, 354, 356, 359, 361, 363], "bnorm": 308, "cnn": [310, 311, 312, 313, 314, 319], "f32": [310, 311, 314, 319, 322, 357], "tutori": [320, 324, 332, 345], "comparison": 324, "sgemm": 324, "public": [327, 330, 331, 364], "cross_engine_reorder_tutori": 327, "wrap": [327, 330, 331, 364], "get": [327, 330, 331, 364], "result": [327, 330, 331, 345, 364], "all": 327, "element": 328, "wise": 328, "start": [330, 331, 364], "getting_started_tutori": 330, "prepar": 330, "outsid": 330, "descriptor": 330, "altern": 330, "wai": 330, "obtain": 330, "main": [330, 364], "gpu_opencl_interop_tutori": 331, "initi": [331, 345, 364], "custom": [331, 364], "kernel": [331, 364], "legal": 338, "trademark": 338, "determin": 345, "need": 345, "intermedi": 345, "necessari": 345, "walkthrough": 346, "naiv": 346, "fuse": 346, "notic": 346, "both": 364, "sycl_interop_buffer_tutori": 364, "todo": 365, "list": 365, "struct": [368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "args_t": 368, "augru_backward": [369, 370], "inherit": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "member": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483], "primitive_desc": [370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 404, 406, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 442, 444, 448, 450, 456, 459, 461, 463, 465, 468, 470, 472, 474, 478, 481, 483], "augru_forward": [371, 372], "batch_normalization_backward": [373, 374], "batch_normalization_forward": [375, 376], "convolution_backward_data": [381, 382], "convolution_backward_weight": [383, 384], "convolution_forward": [385, 386], "deconvolution_backward_data": [387, 388], "deconvolution_backward_weight": [389, 390], "deconvolution_forward": [391, 392], "eltwise_backward": [393, 394], "eltwise_forward": [395, 396], "dnnl_engin": 397, "dnnl_exec_arg_t": 400, "field": [400, 401, 402, 479, 484], "dnnl_graph_inplace_pair_t": 401, "dnnl_graph_logical_tensor_t": 402, "gru_backward": [403, 404], "gru_forward": [405, 406], "templat": [407, 408], "handle_trait": 408, "inner_product_backward_data": [409, 410], "inner_product_backward_weight": [411, 412], "inner_product_forward": [413, 414], "layer_normalization_backward": [415, 416], "layer_normalization_forward": [417, 418], "lbr_augru_backward": [419, 420], "lbr_augru_forward": [421, 422], "lbr_gru_backward": [423, 424], "lbr_gru_forward": [425, 426], "lrn_backward": [427, 428], "lrn_forward": [429, 430], "lstm_backward": [431, 432], "lstm_forward": [433, 434], "dnnl_memori": 437, "dnnl_memory_desc": 439, "desc": 440, "pooling_backward": [441, 442], "pooling_forward": [443, 444], "dnnl_post_op": 445, "post_op": 446, "prelu_backward": [447, 448], "prelu_forward": [449, 450], "dnnl_primit": 451, "dnnl_primitive_attr": 453, "primitive_attr": 454, "dnnl_primitive_desc": 455, "primitive_desc_bas": 457, "resampling_backward": [462, 463], "resampling_forward": [464, 465], "rnn_primitive_desc_bas": 466, "shuffle_backward": [467, 468], "shuffle_forward": [469, 470], "softmax_backward": [471, 472], "softmax_forward": [473, 474], "dnnl_stream": 475, "threadpool_ifac": 479, "vanilla_rnn_backward": [480, 481], "vanilla_rnn_forward": [482, 483], "dnnl_version_t": 484, "example_allows_unimpl": 485, "gemm_dims_t": 486}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Building and Linking": [[1, "building-and-linking"]], "Advanced Topics": [[0, "advanced-topics"]], "class dnnl::graph::compiled_partition": [[3, "class-dnnl-graph-compiled-partition"]], "Overview": [[3, "overview"], [2, "overview"], [8, "overview"], [27, "overview"], [6, "overview"], [7, "overview"], [4, "overview"], [5, "overview"], [124, "overview"], [145, "overview"], [146, "overview"], [147, "overview"], [148, "overview"], [149, "overview"], [151, "overview"], [150, "overview"], [153, "overview"], [152, "overview"], [157, "overview"], [156, "overview"], [155, "overview"], [154, "overview"], [159, "overview"], [158, "overview"], [161, "overview"], [160, "overview"], [163, "overview"], [162, "overview"], [166, "overview"], [167, "overview"], [169, "overview"], [168, "overview"], [170, "overview"], [171, "overview"], [172, "overview"], [173, "overview"], [175, "overview"], [174, "overview"], [177, "overview"], [176, "overview"], [178, "overview"], [179, "overview"], [181, "overview"], [180, "overview"], [182, "overview"], [183, "overview"], [184, "overview"], [185, "overview"], [187, "overview"], [186, "overview"], [189, "overview"], [188, "overview"], [190, "overview"], [191, "overview"], [193, "overview"], [192, "overview"], [194, "overview"], [239, "overview"], [241, "overview"], [240, "overview"], [242, "overview"], [245, "overview"], [244, "overview"], [247, "overview"], [246, "overview"], [248, "overview"], [249, "overview"], [250, "overview"], [251, "overview"], [253, "overview"], [255, "overview"], [254, "overview"], [257, "overview"], [256, "overview"], [258, "overview"], [259, "overview"], [260, "overview"], [261, "overview"], [263, "overview"], [262, "overview"], [265, "overview"], [264, "overview"], [266, "overview"], [267, "overview"], [268, "overview"], [269, "overview"], [270, "overview"], [271, "overview"], [273, "overview"], [272, "overview"], [276, "overview"], [277, "overview"], [279, "overview"], [278, "overview"], [281, "overview"], [280, "overview"], [283, "overview"], [285, "overview"], [284, "overview"], [287, "overview"], [288, "overview"], [294, "overview"], [295, "overview"], [296, "overview"], [297, "overview"], [298, "overview"], [369, "overview"], [370, "overview"], [371, "overview"], [372, "overview"], [373, "overview"], [374, "overview"], [375, "overview"], [376, "overview"], [377, "overview"], [378, "overview"], [379, "overview"], [381, "overview"], [380, "overview"], [383, "overview"], [382, "overview"], [385, "overview"], [384, "overview"], [386, "overview"], [387, "overview"], [389, "overview"], [388, "overview"], [391, "overview"], [390, "overview"], [392, "overview"], [393, "overview"], [395, "overview"], [394, "overview"], [396, "overview"], [398, "overview"], [399, "overview"], [401, "overview"], [400, "overview"], [402, "overview"], [403, "overview"], [404, "overview"], [405, "overview"], [407, "overview"], [406, "overview"], [409, "overview"], [411, "overview"], [410, "overview"], [412, "overview"], [413, "overview"], [414, "overview"], [415, "overview"], [417, "overview"], [416, "overview"], [418, "overview"], [419, "overview"], [421, "overview"], [420, "overview"], [422, "overview"], [423, "overview"], [425, "overview"], [424, "overview"], [426, "overview"], [427, "overview"], [428, "overview"], [429, "overview"], [430, "overview"], [431, "overview"], [432, "overview"], [433, "overview"], [434, "overview"], [435, "overview"], [436, "overview"], [438, "overview"], [440, "overview"], [441, "overview"], [442, "overview"], [443, "overview"], [445, "overview"], [444, "overview"], [447, "overview"], [446, "overview"], [448, "overview"], [449, "overview"], [450, "overview"], [453, "overview"], [452, "overview"], [454, "overview"], [456, "overview"], [457, "overview"], [459, "overview"], [458, "overview"], [460, "overview"], [461, "overview"], [462, "overview"], [463, "overview"], [465, "overview"], [464, "overview"], [466, "overview"], [467, "overview"], [469, "overview"], [468, "overview"], [470, "overview"], [471, "overview"], [473, "overview"], [472, "overview"], [474, "overview"], [476, "overview"], [477, "overview"], [478, "overview"], [479, "overview"], [481, "overview"], [480, "overview"], [483, "overview"], [482, "overview"], [484, "overview"]], "Detailed Documentation": [[3, "detailed-documentation"], [2, "detailed-documentation"], [8, "detailed-documentation"], [6, "detailed-documentation"], [7, "detailed-documentation"], [4, "detailed-documentation"], [5, "detailed-documentation"], [145, "detailed-documentation"], [146, "detailed-documentation"], [147, "detailed-documentation"], [148, "detailed-documentation"], [149, "detailed-documentation"], [151, "detailed-documentation"], [150, "detailed-documentation"], [153, "detailed-documentation"], [152, "detailed-documentation"], [157, "detailed-documentation"], [156, "detailed-documentation"], [155, "detailed-documentation"], [154, "detailed-documentation"], [159, "detailed-documentation"], [158, "detailed-documentation"], [161, "detailed-documentation"], [160, "detailed-documentation"], [163, "detailed-documentation"], [162, "detailed-documentation"], [166, "detailed-documentation"], [167, "detailed-documentation"], [169, "detailed-documentation"], [168, "detailed-documentation"], [170, "detailed-documentation"], [171, "detailed-documentation"], [172, "detailed-documentation"], [173, "detailed-documentation"], [175, "detailed-documentation"], [174, "detailed-documentation"], [177, "detailed-documentation"], [176, "detailed-documentation"], [178, "detailed-documentation"], [179, "detailed-documentation"], [181, "detailed-documentation"], [180, "detailed-documentation"], [182, "detailed-documentation"], [183, "detailed-documentation"], [184, "detailed-documentation"], [185, "detailed-documentation"], [187, "detailed-documentation"], [186, "detailed-documentation"], [189, "detailed-documentation"], [188, "detailed-documentation"], [190, "detailed-documentation"], [191, "detailed-documentation"], [193, "detailed-documentation"], [192, "detailed-documentation"], [194, "detailed-documentation"], [239, "detailed-documentation"], [241, "detailed-documentation"], [240, "detailed-documentation"], [242, "detailed-documentation"], [245, "detailed-documentation"], [244, "detailed-documentation"], [247, "detailed-documentation"], [246, "detailed-documentation"], [248, "detailed-documentation"], [249, "detailed-documentation"], [250, "detailed-documentation"], [251, "detailed-documentation"], [253, "detailed-documentation"], [255, "detailed-documentation"], [254, "detailed-documentation"], [257, "detailed-documentation"], [256, "detailed-documentation"], [258, "detailed-documentation"], [259, "detailed-documentation"], [260, "detailed-documentation"], [261, "detailed-documentation"], [263, "detailed-documentation"], [262, "detailed-documentation"], [265, "detailed-documentation"], [264, "detailed-documentation"], [266, "detailed-documentation"], [267, "detailed-documentation"], [268, "detailed-documentation"], [269, "detailed-documentation"], [270, "detailed-documentation"], [271, "detailed-documentation"], [273, "detailed-documentation"], [272, "detailed-documentation"], [276, "detailed-documentation"], [277, "detailed-documentation"], [279, "detailed-documentation"], [278, "detailed-documentation"], [281, "detailed-documentation"], [280, "detailed-documentation"], [283, "detailed-documentation"], [285, "detailed-documentation"], [284, "detailed-documentation"], [287, "detailed-documentation"], [288, "detailed-documentation"], [294, "detailed-documentation"], [295, "detailed-documentation"], [296, "detailed-documentation"], [297, "detailed-documentation"], [298, "detailed-documentation"], [369, "detailed-documentation"], [370, "detailed-documentation"], [371, "detailed-documentation"], [372, "detailed-documentation"], [373, "detailed-documentation"], [374, "detailed-documentation"], [375, "detailed-documentation"], [376, "detailed-documentation"], [377, "detailed-documentation"], [378, "detailed-documentation"], [379, "detailed-documentation"], [381, "detailed-documentation"], [380, "detailed-documentation"], [383, "detailed-documentation"], [382, "detailed-documentation"], [385, "detailed-documentation"], [384, "detailed-documentation"], [386, "detailed-documentation"], [387, "detailed-documentation"], [389, "detailed-documentation"], [388, "detailed-documentation"], [391, "detailed-documentation"], [390, "detailed-documentation"], [392, "detailed-documentation"], [393, "detailed-documentation"], [395, "detailed-documentation"], [394, "detailed-documentation"], [396, "detailed-documentation"], [398, "detailed-documentation"], [399, "detailed-documentation"], [401, "detailed-documentation"], [400, "detailed-documentation"], [402, "detailed-documentation"], [403, "detailed-documentation"], [404, "detailed-documentation"], [405, "detailed-documentation"], [407, "detailed-documentation"], [406, "detailed-documentation"], [409, "detailed-documentation"], [411, "detailed-documentation"], [410, "detailed-documentation"], [412, "detailed-documentation"], [413, "detailed-documentation"], [414, "detailed-documentation"], [415, "detailed-documentation"], [417, "detailed-documentation"], [416, "detailed-documentation"], [418, "detailed-documentation"], [419, "detailed-documentation"], [421, "detailed-documentation"], [420, "detailed-documentation"], [422, "detailed-documentation"], [423, "detailed-documentation"], [425, "detailed-documentation"], [424, "detailed-documentation"], [426, "detailed-documentation"], [427, "detailed-documentation"], [428, "detailed-documentation"], [429, "detailed-documentation"], [430, "detailed-documentation"], [431, "detailed-documentation"], [432, "detailed-documentation"], [433, "detailed-documentation"], [434, "detailed-documentation"], [435, "detailed-documentation"], [436, "detailed-documentation"], [438, "detailed-documentation"], [440, "detailed-documentation"], [441, "detailed-documentation"], [442, "detailed-documentation"], [443, "detailed-documentation"], [445, "detailed-documentation"], [444, "detailed-documentation"], [447, "detailed-documentation"], [446, "detailed-documentation"], [448, "detailed-documentation"], [449, "detailed-documentation"], [450, "detailed-documentation"], [453, "detailed-documentation"], [452, "detailed-documentation"], [454, "detailed-documentation"], [456, "detailed-documentation"], [457, "detailed-documentation"], [459, "detailed-documentation"], [458, "detailed-documentation"], [460, "detailed-documentation"], [461, "detailed-documentation"], [462, "detailed-documentation"], [463, "detailed-documentation"], [465, "detailed-documentation"], [464, "detailed-documentation"], [466, "detailed-documentation"], [467, "detailed-documentation"], [469, "detailed-documentation"], [468, "detailed-documentation"], [470, "detailed-documentation"], [471, "detailed-documentation"], [473, "detailed-documentation"], [472, "detailed-documentation"], [474, "detailed-documentation"], [476, "detailed-documentation"], [477, "detailed-documentation"], [478, "detailed-documentation"], [479, "detailed-documentation"], [481, "detailed-documentation"], [480, "detailed-documentation"], [483, "detailed-documentation"], [482, "detailed-documentation"], [484, "detailed-documentation"]], "Construction": [[3, "construction"], [2, "construction"], [8, "construction"], [6, "construction"], [7, "construction"], [4, "construction"], [5, "construction"], [369, "construction"], [370, "construction"], [371, "construction"], [372, "construction"], [373, "construction"], [374, "construction"], [375, "construction"], [376, "construction"], [377, "construction"], [378, "construction"], [379, "construction"], [381, "construction"], [380, "construction"], [383, "construction"], [382, "construction"], [385, "construction"], [384, "construction"], [386, "construction"], [387, "construction"], [389, "construction"], [388, "construction"], [391, "construction"], [390, "construction"], [392, "construction"], [393, "construction"], [395, "construction"], [394, "construction"], [396, "construction"], [398, "construction"], [399, "construction"], [403, "construction"], [404, "construction"], [405, "construction"], [407, "construction"], [406, "construction"], [409, "construction"], [411, "construction"], [410, "construction"], [412, "construction"], [413, "construction"], [414, "construction"], [415, "construction"], [417, "construction"], [416, "construction"], [418, "construction"], [419, "construction"], [421, "construction"], [420, "construction"], [422, "construction"], [423, "construction"], [425, "construction"], [424, "construction"], [426, "construction"], [427, "construction"], [428, "construction"], [429, "construction"], [430, "construction"], [431, "construction"], [432, "construction"], [433, "construction"], [434, "construction"], [435, "construction"], [436, "construction"], [438, "construction"], [440, "construction"], [441, "construction"], [442, "construction"], [443, "construction"], [444, "construction"], [447, "construction"], [446, "construction"], [448, "construction"], [449, "construction"], [450, "construction"], [452, "construction"], [454, "construction"], [459, "construction"], [458, "construction"], [460, "construction"], [461, "construction"], [462, "construction"], [463, "construction"], [465, "construction"], [464, "construction"], [466, "construction"], [467, "construction"], [469, "construction"], [468, "construction"], [470, "construction"], [471, "construction"], [473, "construction"], [472, "construction"], [474, "construction"], [476, "construction"], [477, "construction"], [478, "construction"], [481, "construction"], [480, "construction"], [483, "construction"], [482, "construction"]], "Methods": [[3, "methods"], [8, "methods"], [6, "methods"], [7, "methods"], [4, "methods"], [5, "methods"], [370, "methods"], [372, "methods"], [374, "methods"], [376, "methods"], [378, "methods"], [380, "methods"], [382, "methods"], [384, "methods"], [386, "methods"], [388, "methods"], [390, "methods"], [392, "methods"], [394, "methods"], [396, "methods"], [398, "methods"], [399, "methods"], [404, "methods"], [407, "methods"], [406, "methods"], [410, "methods"], [412, "methods"], [414, "methods"], [416, "methods"], [418, "methods"], [420, "methods"], [422, "methods"], [424, "methods"], [426, "methods"], [428, "methods"], [430, "methods"], [432, "methods"], [434, "methods"], [436, "methods"], [438, "methods"], [440, "methods"], [442, "methods"], [444, "methods"], [446, "methods"], [448, "methods"], [450, "methods"], [452, "methods"], [454, "methods"], [456, "methods"], [457, "methods"], [459, "methods"], [460, "methods"], [461, "methods"], [463, "methods"], [465, "methods"], [466, "methods"], [468, "methods"], [470, "methods"], [472, "methods"], [474, "methods"], [476, "methods"], [478, "methods"], [479, "methods"], [481, "methods"], [483, "methods"]], "class dnnl::graph::allocator": [[2, "class-dnnl-graph-allocator"]], "class dnnl::graph::tensor": [[8, "class-dnnl-graph-tensor"]], "Primitive Attributes": [[9, "primitive-attributes"]], "Attributes Usage": [[9, "attributes-usage"]], "Supported Attributes": [[9, "supported-attributes"]], "Attribute Related Error Handling": [[9, "attribute-related-error-handling"]], "Binary": [[17, "binary"], [11, "binary"], [241, "binary"]], "General": [[17, "general"], [21, "general"], [43, "general"], [38, "general"], [45, "general"], [44, "general"], [47, "general"], [46, "general"], [28, "general"], [49, "general"], [48, "general"], [51, "general"], [50, "general"], [15, "general"], [41, "general"], [53, "general"], [52, "general"], [54, "general"], [55, "general"], [56, "general"], [57, "general"], [58, "general"], [59, "general"], [61, "general"], [60, "general"], [23, "general"], [62, "general"], [63, "general"], [65, "general"], [64, "general"], [67, "general"], [66, "general"], [68, "general"], [69, "general"], [71, "general"], [70, "general"], [73, "general"], [72, "general"], [74, "general"], [75, "general"], [76, "general"], [77, "general"], [79, "general"], [78, "general"], [81, "general"], [80, "general"], [82, "general"], [83, "general"], [84, "general"], [85, "general"], [87, "general"], [86, "general"], [89, "general"], [88, "general"], [90, "general"], [91, "general"], [92, "general"], [93, "general"], [95, "general"], [94, "general"], [96, "general"], [97, "general"], [98, "general"], [99, "general"], [101, "general"], [100, "general"], [102, "general"], [103, "general"], [104, "general"], [105, "general"], [106, "general"], [107, "general"], [109, "general"], [108, "general"], [110, "general"], [111, "general"], [113, "general"], [112, "general"], [114, "general"], [115, "general"], [116, "general"], [117, "general"], [119, "general"], [118, "general"], [120, "general"], [121, "general"], [123, "general"], [122, "general"], [127, "general"], [128, "general"], [131, "general"], [133, "general"], [132, "general"], [134, "general"], [135, "general"], [137, "general"], [136, "general"]], "Execution Arguments": [[17, "execution-arguments"], [21, "execution-arguments"], [43, "execution-arguments"], [38, "execution-arguments"], [44, "execution-arguments"], [28, "execution-arguments"], [15, "execution-arguments"], [41, "execution-arguments"], [23, "execution-arguments"], [127, "execution-arguments"], [128, "execution-arguments"], [131, "execution-arguments"], [133, "execution-arguments"], [132, "execution-arguments"], [134, "execution-arguments"], [135, "execution-arguments"], [137, "execution-arguments"], [136, "execution-arguments"]], "Implementation Details": [[17, "implementation-details"], [21, "implementation-details"], [43, "implementation-details"], [38, "implementation-details"], [44, "implementation-details"], [28, "implementation-details"], [15, "implementation-details"], [41, "implementation-details"], [23, "implementation-details"], [127, "implementation-details"], [128, "implementation-details"], [131, "implementation-details"], [133, "implementation-details"], [132, "implementation-details"], [134, "implementation-details"], [137, "implementation-details"], [136, "implementation-details"]], "General Notes": [[17, "general-notes"], [21, "general-notes"], [43, "general-notes"], [38, "general-notes"], [44, "general-notes"], [28, "general-notes"], [15, "general-notes"], [41, "general-notes"], [23, "general-notes"], [127, "general-notes"], [128, "general-notes"], [131, "general-notes"], [133, "general-notes"], [132, "general-notes"], [137, "general-notes"], [136, "general-notes"]], "Post-Ops and Attributes": [[17, "post-ops-and-attributes"], [21, "post-ops-and-attributes"], [38, "post-ops-and-attributes"], [28, "post-ops-and-attributes"], [15, "post-ops-and-attributes"], [127, "post-ops-and-attributes"], [131, "post-ops-and-attributes"], [133, "post-ops-and-attributes"], [132, "post-ops-and-attributes"], [134, "post-ops-and-attributes"], [135, "post-ops-and-attributes"], [137, "post-ops-and-attributes"]], "Data Types Support": [[17, "data-types-support"], [21, "data-types-support"], [131, "data-types-support"], [132, "data-types-support"], [137, "data-types-support"]], "Data Representation": [[17, "data-representation"], [21, "data-representation"], [43, "data-representation"], [38, "data-representation"], [44, "data-representation"], [28, "data-representation"], [15, "data-representation"], [41, "data-representation"], [23, "data-representation"], [127, "data-representation"], [128, "data-representation"], [131, "data-representation"], [132, "data-representation"], [134, "data-representation"], [137, "data-representation"], [136, "data-representation"]], "Sources, Destination": [[17, "sources-destination"], [131, "sources-destination"], [137, "sources-destination"]], "Implementation Limitations": [[17, "implementation-limitations"], [21, "implementation-limitations"], [43, "implementation-limitations"], [38, "implementation-limitations"], [44, "implementation-limitations"], [28, "implementation-limitations"], [15, "implementation-limitations"], [41, "implementation-limitations"], [23, "implementation-limitations"], [127, "implementation-limitations"], [128, "implementation-limitations"], [131, "implementation-limitations"], [133, "implementation-limitations"], [132, "implementation-limitations"], [134, "implementation-limitations"], [135, "implementation-limitations"], [137, "implementation-limitations"], [136, "implementation-limitations"]], "Performance Tips": [[17, "performance-tips"], [21, "performance-tips"], [43, "performance-tips"], [38, "performance-tips"], [44, "performance-tips"], [28, "performance-tips"], [15, "performance-tips"], [41, "performance-tips"], [23, "performance-tips"], [127, "performance-tips"], [128, "performance-tips"], [131, "performance-tips"], [133, "performance-tips"], [132, "performance-tips"], [135, "performance-tips"], [137, "performance-tips"], [136, "performance-tips"]], "Examples": [[17, "examples"], [13, "examples"], [44, "examples"], [29, "examples"], [15, "examples"]], "Benchmarking Performance": [[16, "benchmarking-performance"]], "API": [[20, "api"], [12, "api"]], "Input validation notes": [[20, "input-validation-notes"]], "Concat": [[21, "concat"], [57, "concat"], [244, "concat"]], "Example": [[21, "example"], [43, "example"], [37, "example"], [38, "example"], [28, "example"], [41, "example"], [23, "example"], [127, "example"], [128, "example"], [131, "example"], [133, "example"], [132, "example"], [134, "example"], [135, "example"], [137, "example"], [136, "example"], [140, "example"], [143, "example"]], "CPU ISA Hints": [[25, "cpu-isa-hints"]], "Build-time Controls": [[25, "build-time-controls"], [24, "build-time-controls"], [30, "build-time-controls"], [129, "build-time-controls"]], "Run-time Controls": [[25, "run-time-controls"], [129, "run-time-controls"]], "CPU Dispatcher Control": [[24, "cpu-dispatcher-control"]], "Runtime Controls": [[24, "runtime-controls"]], "Primitive Attributes: Quantization": [[12, "primitive-attributes-quantization"]], "Introduction": [[12, "introduction"], [31, "introduction"], [37, "introduction"], [14, "introduction"], [140, "introduction"], [142, "introduction"]], "Quantization Model": [[12, "quantization-model"]], "Numerical behavior": [[12, "numerical-behavior"]], "Example: Convolution Quantization Workflow": [[12, "example-convolution-quantization-workflow"]], "Per-Channel Scaling": [[12, "per-channel-scaling"]], "Output Scaling Attribute": [[12, "output-scaling-attribute"]], "Example 1: weights quantization with per-output-channel scaling": [[12, "example-1-weights-quantization-with-per-output-channel-scaling"]], "Example 2: convolution with groups, with per-output-channel quantization": [[12, "example-2-convolution-with-groups-with-per-output-channel-quantization"]], "Primitive Attributes: Scratchpad": [[13, "primitive-attributes-scratchpad"]], "Scratchpad Memory Engine": [[13, "scratchpad-memory-engine"]], "Library Manages Scratchpad": [[13, "library-manages-scratchpad"]], "User Manages Scratchpad": [[13, "user-manages-scratchpad"]], "Experimental features": [[30, "experimental-features"], [30, "id1"]], "Basic Concepts": [[31, "basic-concepts"], [14, "basic-concepts"]], "Logical Tensor": [[31, "logical-tensor"], [283, "logical-tensor"]], "Op": [[31, "op"], [284, "op"]], "Graph": [[31, "graph"], [281, "graph"]], "Partition": [[31, "partition"], [285, "partition"]], "Compiled Partition": [[31, "compiled-partition"], [277, "compiled-partition"]], "Tensor": [[31, "tensor"], [288, "tensor"]], "DPC++ Interoperability": [[27, "dpc-interoperability"]], "SYCL Buffers and DPC++ USM Interfaces for Memory Objects": [[27, "sycl-buffers-and-dpc-usm-interfaces-for-memory-objects"]], "Handling Dependencies with USM": [[27, "handling-dependencies-with-usm"]], "Data Types": [[26, "data-types"], [38, "data-types"], [44, "data-types"], [23, "data-types"], [133, "data-types"], [135, "data-types"]], "Inference and Training": [[26, "inference-and-training"]], "General numerical behavior of the oneDNN library": [[26, "general-numerical-behavior-of-the-onednn-library"]], "Floating-point environment": [[26, "floating-point-environment"]], "Hardware Limitations": [[26, "hardware-limitations"]], "Intel(R) Architecture Processors": [[26, "intel-r-architecture-processors"]], "Intel(R) Processor Graphics and Xe Architecture graphics": [[26, "intel-r-processor-graphics-and-xe-architecture-graphics"]], "Graph Dump": [[32, "graph-dump"]], "Build-Time Controls": [[32, "build-time-controls"], [130, "build-time-controls"], [130, "id1"], [143, "build-time-controls"]], "Run-Time Controls": [[32, "run-time-controls"], [130, "run-time-controls"], [130, "id2"], [143, "run-time-controls"]], "Supported Fusion Patterns": [[33, "supported-fusion-patterns"]], "Fusion Patterns": [[33, "fusion-patterns"]], "Inference": [[33, "inference"], [35, "inference"]], "Floating Point Patterns": [[33, "floating-point-patterns"]], "Quantized Patterns": [[33, "quantized-patterns"]], "Training": [[33, "training"], [139, "training"]], "Low Precision": [[34, "low-precision"]], "INT8": [[34, "int8"]], "BF16/F16": [[34, "bf16-f16"]], "Best Practices for Inference": [[35, "best-practices-for-inference"]], "fp32 Inference": [[35, "fp32-inference"]], "int8 Inference": [[35, "int8-inference"]], "Primitive Attributes: Post-ops": [[11, "primitive-attributes-post-ops"]], "Supported Post-ops": [[11, "supported-post-ops"]], "Eltwise Post-op": [[11, "eltwise-post-op"]], "Sum Post-op": [[11, "sum-post-op"]], "Depthwise Post-op": [[11, "depthwise-post-op"]], "Binary Post-op": [[11, "binary-post-op"]], "Prelu Post-op": [[11, "prelu-post-op"]], "Examples of Chained Post-ops": [[11, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[11, "sum-relu"]], "Tanh -> Sum -> ScaleShift": [[11, "tanh-sum-scaleshift"]], "Relu -> Depthwise -> Relu": [[11, "relu-depthwise-relu"]], "Primitive Attributes: floating-point math mode": [[10, "primitive-attributes-floating-point-math-mode"]], "The floating-point math mode attribute.": [[10, "the-floating-point-math-mode-attribute"]], "A note on default floating-point math mode": [[10, "a-note-on-default-floating-point-math-mode"]], "Local Response Normalization (LRN)": [[43, "local-response-normalization-lrn"]], "Forward": [[43, "forward"], [38, "forward"], [28, "forward"], [15, "forward"], [41, "forward"], [23, "forward"], [127, "forward"], [128, "forward"], [133, "forward"], [135, "forward"], [136, "forward"]], "Backward": [[43, "backward"], [38, "backward"], [28, "backward"], [15, "backward"], [41, "backward"], [23, "backward"], [127, "backward"], [128, "backward"], [133, "backward"], [135, "backward"], [136, "backward"]], "Data Type Support": [[43, "data-type-support"], [28, "data-type-support"], [15, "data-type-support"], [41, "data-type-support"], [127, "data-type-support"], [128, "data-type-support"], [134, "data-type-support"], [136, "data-type-support"]], "Source, Destination, and Their Gradients": [[43, "source-destination-and-their-gradients"], [15, "source-destination-and-their-gradients"], [41, "source-destination-and-their-gradients"], [127, "source-destination-and-their-gradients"], [136, "source-destination-and-their-gradients"]], "Post-ops and Attributes": [[43, "post-ops-and-attributes"], [41, "post-ops-and-attributes"], [23, "post-ops-and-attributes"], [136, "post-ops-and-attributes"]], "Linking to the Library": [[42, "linking-to-the-library"]], "Header Files": [[42, "header-files"]], "Libraries": [[42, "libraries"]], "Linux": [[42, "linux"]], "macOS": [[42, "macos"]], "Windows": [[42, "windows"], [42, "id1"], [18, "windows"]], "Linking to oneDNN": [[42, "linking-to-onednn"]], "Linux/macOS": [[42, "linux-macos"], [18, "linux-macos"]], "Support for macOS hardened runtime": [[42, "support-for-macos-hardened-runtime"]], "Inference and Training Aspects": [[36, "inference-and-training-aspects"]], "Propagation Kinds": [[36, "propagation-kinds"]], "Difference Between Forward Propagation on Training and Inference": [[36, "difference-between-forward-propagation-on-training-and-inference"]], "Different Backward Propagation Kinds": [[36, "different-backward-propagation-kinds"]], "Inference-Specific Aspects": [[36, "inference-specific-aspects"]], "Training-Specific Aspects": [[36, "training-specific-aspects"]], "Workspace": [[36, "workspace"]], "Int8 Inference": [[37, "int8-inference"]], "Int8 Workflow": [[37, "int8-workflow"]], "Quantization Process": [[37, "quantization-process"]], "Range of the Data": [[37, "range-of-the-data"]], "Scaling Factor": [[37, "scaling-factor"]], "Quantization Example": [[37, "quantization-example"]], "int8 Support": [[37, "int8-support"]], "Attributes": [[37, "attributes"], [239, "attributes"]], "Inner Product": [[38, "inner-product"], [251, "inner-product"]], "Difference Between Forward Training and Forward Inference": [[38, "difference-between-forward-training-and-forward-inference"], [28, "difference-between-forward-training-and-forward-inference"], [15, "difference-between-forward-training-and-forward-inference"], [41, "difference-between-forward-training-and-forward-inference"], [23, "difference-between-forward-training-and-forward-inference"], [127, "difference-between-forward-training-and-forward-inference"], [128, "difference-between-forward-training-and-forward-inference"], [133, "difference-between-forward-training-and-forward-inference"], [135, "difference-between-forward-training-and-forward-inference"], [136, "difference-between-forward-training-and-forward-inference"]], "Inspecting JIT Code": [[39, "inspecting-jit-code"]], "Example (CPU)": [[39, "example-cpu"]], "Example (GPU)": [[39, "example-gpu"]], "Abs": [[45, "abs"]], "Operation attributes": [[45, "operation-attributes"], [47, "operation-attributes"], [46, "operation-attributes"], [49, "operation-attributes"], [48, "operation-attributes"], [51, "operation-attributes"], [50, "operation-attributes"], [53, "operation-attributes"], [52, "operation-attributes"], [54, "operation-attributes"], [55, "operation-attributes"], [56, "operation-attributes"], [57, "operation-attributes"], [58, "operation-attributes"], [59, "operation-attributes"], [61, "operation-attributes"], [60, "operation-attributes"], [62, "operation-attributes"], [63, "operation-attributes"], [65, "operation-attributes"], [64, "operation-attributes"], [67, "operation-attributes"], [66, "operation-attributes"], [68, "operation-attributes"], [69, "operation-attributes"], [71, "operation-attributes"], [70, "operation-attributes"], [73, "operation-attributes"], [72, "operation-attributes"], [74, "operation-attributes"], [75, "operation-attributes"], [76, "operation-attributes"], [77, "operation-attributes"], [79, "operation-attributes"], [78, "operation-attributes"], [81, "operation-attributes"], [80, "operation-attributes"], [82, "operation-attributes"], [83, "operation-attributes"], [84, "operation-attributes"], [85, "operation-attributes"], [87, "operation-attributes"], [86, "operation-attributes"], [89, "operation-attributes"], [88, "operation-attributes"], [90, "operation-attributes"], [91, "operation-attributes"], [92, "operation-attributes"], [93, "operation-attributes"], [95, "operation-attributes"], [94, "operation-attributes"], [96, "operation-attributes"], [97, "operation-attributes"], [98, "operation-attributes"], [99, "operation-attributes"], [101, "operation-attributes"], [100, "operation-attributes"], [102, "operation-attributes"], [103, "operation-attributes"], [104, "operation-attributes"], [105, "operation-attributes"], [106, "operation-attributes"], [107, "operation-attributes"], [109, "operation-attributes"], [108, "operation-attributes"], [110, "operation-attributes"], [111, "operation-attributes"], [113, "operation-attributes"], [112, "operation-attributes"], [114, "operation-attributes"], [115, "operation-attributes"], [116, "operation-attributes"], [117, "operation-attributes"], [119, "operation-attributes"], [118, "operation-attributes"], [120, "operation-attributes"], [121, "operation-attributes"], [123, "operation-attributes"], [122, "operation-attributes"]], "Execution arguments": [[45, "execution-arguments"], [47, "execution-arguments"], [46, "execution-arguments"], [49, "execution-arguments"], [48, "execution-arguments"], [51, "execution-arguments"], [50, "execution-arguments"], [53, "execution-arguments"], [52, "execution-arguments"], [54, "execution-arguments"], [55, "execution-arguments"], [56, "execution-arguments"], [57, "execution-arguments"], [58, "execution-arguments"], [59, "execution-arguments"], [61, "execution-arguments"], [60, "execution-arguments"], [62, "execution-arguments"], [63, "execution-arguments"], [65, "execution-arguments"], [64, "execution-arguments"], [67, "execution-arguments"], [66, "execution-arguments"], [68, "execution-arguments"], [69, "execution-arguments"], [71, "execution-arguments"], [70, "execution-arguments"], [73, "execution-arguments"], [72, "execution-arguments"], [74, "execution-arguments"], [75, "execution-arguments"], [76, "execution-arguments"], [77, "execution-arguments"], [79, "execution-arguments"], [78, "execution-arguments"], [81, "execution-arguments"], [80, "execution-arguments"], [82, "execution-arguments"], [83, "execution-arguments"], [84, "execution-arguments"], [85, "execution-arguments"], [87, "execution-arguments"], [86, "execution-arguments"], [89, "execution-arguments"], [88, "execution-arguments"], [90, "execution-arguments"], [91, "execution-arguments"], [92, "execution-arguments"], [93, "execution-arguments"], [95, "execution-arguments"], [94, "execution-arguments"], [96, "execution-arguments"], [97, "execution-arguments"], [98, "execution-arguments"], [99, "execution-arguments"], [101, "execution-arguments"], [100, "execution-arguments"], [102, "execution-arguments"], [103, "execution-arguments"], [104, "execution-arguments"], [105, "execution-arguments"], [106, "execution-arguments"], [107, "execution-arguments"], [109, "execution-arguments"], [108, "execution-arguments"], [110, "execution-arguments"], [111, "execution-arguments"], [113, "execution-arguments"], [112, "execution-arguments"], [114, "execution-arguments"], [115, "execution-arguments"], [116, "execution-arguments"], [117, "execution-arguments"], [119, "execution-arguments"], [118, "execution-arguments"], [120, "execution-arguments"], [121, "execution-arguments"], [123, "execution-arguments"], [122, "execution-arguments"]], "Inputs": [[45, "inputs"], [47, "inputs"], [46, "inputs"], [49, "inputs"], [48, "inputs"], [51, "inputs"], [50, "inputs"], [53, "inputs"], [52, "inputs"], [54, "inputs"], [55, "inputs"], [56, "inputs"], [57, "inputs"], [58, "inputs"], [59, "inputs"], [61, "inputs"], [60, "inputs"], [62, "inputs"], [63, "inputs"], [65, "inputs"], [64, "inputs"], [67, "inputs"], [66, "inputs"], [68, "inputs"], [69, "inputs"], [71, "inputs"], [70, "inputs"], [73, "inputs"], [72, "inputs"], [74, "inputs"], [75, "inputs"], [76, "inputs"], [77, "inputs"], [79, "inputs"], [78, "inputs"], [81, "inputs"], [80, "inputs"], [82, "inputs"], [83, "inputs"], [84, "inputs"], [85, "inputs"], [87, "inputs"], [86, "inputs"], [89, "inputs"], [88, "inputs"], [90, "inputs"], [91, "inputs"], [92, "inputs"], [93, "inputs"], [95, "inputs"], [94, "inputs"], [96, "inputs"], [97, "inputs"], [98, "inputs"], [99, "inputs"], [101, "inputs"], [100, "inputs"], [102, "inputs"], [103, "inputs"], [104, "inputs"], [105, "inputs"], [106, "inputs"], [107, "inputs"], [109, "inputs"], [108, "inputs"], [110, "inputs"], [111, "inputs"], [113, "inputs"], [112, "inputs"], [114, "inputs"], [115, "inputs"], [116, "inputs"], [117, "inputs"], [119, "inputs"], [118, "inputs"], [120, "inputs"], [121, "inputs"], [123, "inputs"], [122, "inputs"]], "Outputs": [[45, "outputs"], [47, "outputs"], [46, "outputs"], [49, "outputs"], [48, "outputs"], [51, "outputs"], [50, "outputs"], [53, "outputs"], [52, "outputs"], [54, "outputs"], [55, "outputs"], [56, "outputs"], [57, "outputs"], [58, "outputs"], [59, "outputs"], [61, "outputs"], [60, "outputs"], [62, "outputs"], [63, "outputs"], [65, "outputs"], [64, "outputs"], [67, "outputs"], [66, "outputs"], [68, "outputs"], [69, "outputs"], [71, "outputs"], [70, "outputs"], [73, "outputs"], [72, "outputs"], [74, "outputs"], [75, "outputs"], [76, "outputs"], [77, "outputs"], [79, "outputs"], [78, "outputs"], [81, "outputs"], [80, "outputs"], [82, "outputs"], [83, "outputs"], [84, "outputs"], [85, "outputs"], [87, "outputs"], [86, "outputs"], [89, "outputs"], [88, "outputs"], [90, "outputs"], [91, "outputs"], [92, "outputs"], [93, "outputs"], [95, "outputs"], [94, "outputs"], [96, "outputs"], [97, "outputs"], [98, "outputs"], [99, "outputs"], [101, "outputs"], [100, "outputs"], [102, "outputs"], [103, "outputs"], [104, "outputs"], [105, "outputs"], [106, "outputs"], [107, "outputs"], [109, "outputs"], [108, "outputs"], [110, "outputs"], [111, "outputs"], [113, "outputs"], [112, "outputs"], [114, "outputs"], [115, "outputs"], [116, "outputs"], [117, "outputs"], [119, "outputs"], [118, "outputs"], [120, "outputs"], [121, "outputs"], [123, "outputs"], [122, "outputs"]], "Supported data types": [[45, "supported-data-types"], [47, "supported-data-types"], [46, "supported-data-types"], [49, "supported-data-types"], [48, "supported-data-types"], [51, "supported-data-types"], [50, "supported-data-types"], [53, "supported-data-types"], [52, "supported-data-types"], [54, "supported-data-types"], [55, "supported-data-types"], [56, "supported-data-types"], [57, "supported-data-types"], [58, "supported-data-types"], [59, "supported-data-types"], [61, "supported-data-types"], [60, "supported-data-types"], [62, "supported-data-types"], [63, "supported-data-types"], [65, "supported-data-types"], [64, "supported-data-types"], [67, "supported-data-types"], [66, "supported-data-types"], [68, "supported-data-types"], [69, "supported-data-types"], [71, "supported-data-types"], [70, "supported-data-types"], [73, "supported-data-types"], [72, "supported-data-types"], [74, "supported-data-types"], [75, "supported-data-types"], [76, "supported-data-types"], [77, "supported-data-types"], [79, "supported-data-types"], [78, "supported-data-types"], [81, "supported-data-types"], [80, "supported-data-types"], [82, "supported-data-types"], [83, "supported-data-types"], [84, "supported-data-types"], [85, "supported-data-types"], [87, "supported-data-types"], [86, "supported-data-types"], [89, "supported-data-types"], [88, "supported-data-types"], [90, "supported-data-types"], [91, "supported-data-types"], [92, "supported-data-types"], [93, "supported-data-types"], [95, "supported-data-types"], [94, "supported-data-types"], [96, "supported-data-types"], [97, "supported-data-types"], [98, "supported-data-types"], [99, "supported-data-types"], [101, "supported-data-types"], [100, "supported-data-types"], [102, "supported-data-types"], [103, "supported-data-types"], [104, "supported-data-types"], [105, "supported-data-types"], [106, "supported-data-types"], [107, "supported-data-types"], [109, "supported-data-types"], [108, "supported-data-types"], [110, "supported-data-types"], [111, "supported-data-types"], [113, "supported-data-types"], [112, "supported-data-types"], [114, "supported-data-types"], [115, "supported-data-types"], [116, "supported-data-types"], [117, "supported-data-types"], [119, "supported-data-types"], [118, "supported-data-types"], [120, "supported-data-types"], [121, "supported-data-types"], [123, "supported-data-types"], [122, "supported-data-types"]], "Matrix Multiplication": [[44, "matrix-multiplication"], [255, "matrix-multiplication"]], "Attributes and Post-ops": [[44, "attributes-and-post-ops"]], "Matrix Multiplication Primitive Examples": [[44, "matrix-multiplication-primitive-examples"]], "Add": [[47, "add"]], "AbsBackward": [[46, "absbackward"]], "Eltwise": [[28, "eltwise"], [248, "eltwise"]], "Exceptions": [[28, "exceptions"]], "AvgPoolBackward": [[49, "avgpoolbackward"]], "AvgPool": [[48, "avgpool"]], "BatchNormInference": [[51, "batchnorminference"]], "BatchNormForwardTraining": [[50, "batchnormforwardtraining"]], "Batch Normalization": [[15, "batch-normalization"], [240, "batch-normalization"]], "Mean and Variance": [[15, "mean-and-variance"], [41, "mean-and-variance"]], "Scale and Shift": [[15, "scale-and-shift"], [41, "scale-and-shift"]], "Primitives": [[14, "primitives"], [14, "id2"], [261, "primitives"]], "Engines": [[14, "engines"]], "Streams": [[14, "streams"]], "Memory Objects": [[14, "memory-objects"], [14, "id1"]], "Levels of Abstraction": [[14, "levels-of-abstraction"]], "Creating Memory Objects and Primitives": [[14, "creating-memory-objects-and-primitives"]], "Graph Extension": [[14, "graph-extension"], [235, "graph-extension"]], "class dnnl::graph::op": [[6, "class-dnnl-graph-op"]], "class dnnl::graph::partition": [[7, "class-dnnl-graph-partition"]], "Nuances of int8 Computations": [[40, "nuances-of-int8-computations"]], "CPU": [[40, "cpu"], [125, "cpu"]], "1. Inputs of mixed type: u8 and s8": [[40, "inputs-of-mixed-type-u8-and-s8"]], "1.1. Processors with the Intel AVX2 or Intel AVX-512 Support": [[40, "processors-with-the-intel-avx2-or-intel-avx-512-support"]], "1.2. Processors with the Intel DL Boost Support": [[40, "processors-with-the-intel-dl-boost-support"]], "2. Inputs of the same type: s8": [[40, "inputs-of-the-same-type-s8"]], "GPU": [[40, "gpu"]], "References": [[40, "references"]], "Layer Normalization": [[41, "layer-normalization"], [253, "layer-normalization"]], "BiasAdd": [[53, "biasadd"]], "BatchNormTrainingBackward": [[52, "batchnormtrainingbackward"]], "BiasAddBackward": [[54, "biasaddbackward"]], "Clamp": [[55, "clamp"]], "Build Options": [[19, "build-options"]], "Common options": [[19, "common-options"]], "Host compiler": [[19, "host-compiler"]], "Configuring functionality": [[19, "configuring-functionality"]], "ONEDNN_ENABLE_WORKLOAD": [[19, "onednn-enable-workload"]], "ONEDNN_ENABLE_PRIMITIVE": [[19, "onednn-enable-primitive"]], "ONEDNN_ENABLE_PRIMITIVE_CPU_ISA": [[19, "onednn-enable-primitive-cpu-isa"]], "ONEDNN_ENABLE_PRIMITIVE_GPU_ISA": [[19, "onednn-enable-primitive-gpu-isa"]], "CPU Options": [[19, "cpu-options"]], "Targeting Specific Architecture": [[19, "targeting-specific-architecture"]], "Runtime CPU dispatcher control": [[19, "runtime-cpu-dispatcher-control"]], "Runtime CPU ISA hints": [[19, "runtime-cpu-isa-hints"]], "Runtimes": [[19, "runtimes"], [19, "id1"]], "OpenMP": [[19, "openmp"]], "Threading Building Blocks (TBB)": [[19, "threading-building-blocks-tbb"]], "Threadpool": [[19, "threadpool"]], "AArch64 Options": [[19, "aarch64-options"]], "Arm Compute Library": [[19, "arm-compute-library"]], "Vendor BLAS libraries": [[19, "vendor-blas-libraries"]], "GPU Options": [[19, "gpu-options"]], "OpenCL*": [[19, "opencl"]], "Graph component limitations": [[19, "graph-component-limitations"]], "Build from Source": [[18, "build-from-source"]], "Download the Source Code": [[18, "download-the-source-code"]], "Build the Library": [[18, "build-the-library"]], "GCC, Clang, or Intel oneAPI DPC++/C++ Compiler": [[18, "gcc-clang-or-intel-oneapi-dpc-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL runtime": [[18, "intel-oneapi-dpc-c-compiler-with-sycl-runtime"]], "GCC targeting AArch64 on x64 host": [[18, "gcc-targeting-aarch64-on-x64-host"]], "GCC with Arm Compute Library (ACL) on AArch64 host": [[18, "gcc-with-arm-compute-library-acl-on-aarch64-host"]], "Microsoft Visual C++ Compiler or Intel oneAPI DPC++/C++ Compiler": [[18, "microsoft-visual-c-compiler-or-intel-oneapi-dpc-c-compiler"]], "Intel oneAPI DPC++/C++ Compiler with SYCL Runtime": [[18, "id1"]], "Validate the Build": [[18, "validate-the-build"]], "Build documentation": [[18, "build-documentation"]], "Install library": [[18, "install-library"]], "ClampBackward": [[56, "clampbackward"]], "Convolution": [[58, "convolution"], [23, "convolution"], [245, "convolution"]], "Regular Convolution": [[58, "regular-convolution"], [23, "regular-convolution"]], "Convolution with Groups": [[58, "convolution-with-groups"], [23, "convolution-with-groups"]], "Convolution with Dilation": [[58, "convolution-with-dilation"], [23, "convolution-with-dilation"]], "ConvolutionBackwardData": [[59, "convolutionbackwarddata"]], "class dnnl::graph::graph": [[4, "class-dnnl-graph-graph"]], "class dnnl::graph::logical_tensor": [[5, "class-dnnl-graph-logical-tensor"]], "Typedefs": [[5, "typedefs"], [239, "typedefs"], [246, "typedefs"], [249, "typedefs"], [256, "typedefs"], [262, "typedefs"], [267, "typedefs"], [270, "typedefs"], [276, "typedefs"], [277, "typedefs"], [281, "typedefs"], [285, "typedefs"], [284, "typedefs"], [287, "typedefs"], [288, "typedefs"], [438, "typedefs"]], "ConvTranspose": [[61, "convtranspose"]], "ConvolutionBackwardWeights": [[60, "convolutionbackwardweights"]], "Naming Conventions": [[22, "naming-conventions"]], "Variable (Tensor) Names": [[22, "variable-tensor-names"]], "Formulas and Verbose Output": [[22, "formulas-and-verbose-output"]], "RNN-Specific Notation": [[22, "rnn-specific-notation"]], "Memory Formats Tags": [[22, "memory-formats-tags"]], "Deconvolution (Transposed Convolution)": [[23, "deconvolution-transposed-convolution"]], "Example 1": [[23, "example-1"]], "Example 2": [[23, "example-2"]], "Example 3": [[23, "example-3"]], "Algorithms": [[23, "algorithms"]], "Direct Algorithm": [[23, "direct-algorithm"]], "Winograd Convolution": [[23, "winograd-convolution"]], "Automatic Algorithm Selection": [[23, "automatic-algorithm-selection"]], "ConvTransposeBackwardData": [[62, "convtransposebackwarddata"]], "ConvTransposeBackwardWeights": [[63, "convtransposebackwardweights"]], "Divide": [[65, "divide"]], "Dequantize": [[64, "dequantize"]], "DynamicQuantize": [[67, "dynamicquantize"]], "DynamicDequantize": [[66, "dynamicdequantize"]], "Elu": [[68, "elu"]], "EluBackward": [[69, "elubackward"]], "Exp": [[71, "exp"]], "End": [[70, "end"]], "GELUBackward": [[73, "gelubackward"]], "GELU": [[72, "gelu"]], "HardSwish": [[74, "hardswish"]], "HardSwishBackward": [[75, "hardswishbackward"]], "Interpolate": [[76, "interpolate"]], "InterpolateBackward": [[77, "interpolatebackward"]], "LayerNormBackward": [[79, "layernormbackward"]], "LayerNorm": [[78, "layernorm"]], "Log": [[81, "log"]], "LeakyReLU": [[80, "leakyrelu"]], "LogSoftmax": [[82, "logsoftmax"]], "LogSoftmaxBackward": [[83, "logsoftmaxbackward"]], "MatMul": [[84, "matmul"]], "Maximum": [[85, "maximum"]], "MaxPoolBackward": [[87, "maxpoolbackward"]], "MaxPool": [[86, "maxpool"]], "Mish": [[89, "mish"]], "Minimum": [[88, "minimum"]], "MishBackward": [[90, "mishbackward"]], "Multiply": [[91, "multiply"]], "PReLU": [[92, "prelu"], [128, "prelu"], [259, "prelu"]], "Broadcasting Rules": [[92, "broadcasting-rules"], [93, "broadcasting-rules"]], "PReLUBackward": [[93, "prelubackward"]], "Reciprocal": [[95, "reciprocal"]], "Quantize": [[94, "quantize"]], "ReduceL1": [[96, "reducel1"]], "ReduceL2": [[97, "reducel2"]], "ReduceMax": [[98, "reducemax"]], "ReduceMean": [[99, "reducemean"]], "ReduceProd": [[101, "reduceprod"]], "ReduceMin": [[100, "reducemin"]], "ReduceSum": [[102, "reducesum"]], "ReLU": [[103, "relu"]], "ReLUBackward": [[104, "relubackward"]], "Reorder": [[105, "reorder"], [132, "reorder"], [264, "reorder"]], "Round": [[106, "round"]], "Sigmoid": [[107, "sigmoid"]], "Softmax": [[109, "softmax"], [136, "softmax"], [269, "softmax"]], "SigmoidBackward": [[108, "sigmoidbackward"]], "SoftmaxBackward": [[110, "softmaxbackward"]], "SoftPlus": [[111, "softplus"]], "Sqrt": [[113, "sqrt"]], "SoftPlusBackward": [[112, "softplusbackward"]], "SqrtBackward": [[114, "sqrtbackward"]], "Square": [[115, "square"]], "SquaredDifference": [[116, "squareddifference"]], "StaticReshape": [[117, "staticreshape"]], "Subtract": [[119, "subtract"]], "StaticTranspose": [[118, "statictranspose"]], "Tanh": [[120, "tanh"]], "TanhBackward": [[121, "tanhbackward"]], "Wildcard": [[123, "wildcard"]], "TypeCast": [[122, "typecast"]], "OpenCL Interoperability": [[124, "opencl-interoperability"]], "OpenCL Buffers and USM Interfaces for Memory Objects": [[124, "opencl-buffers-and-usm-interfaces-for-memory-objects"]], "Configuring oneDNN for Benchmarking": [[125, "configuring-onednn-for-benchmarking"]], "Threading Runtimes": [[125, "threading-runtimes"]], "Benchmarking Settings": [[125, "benchmarking-settings"]], "Whole Machine": [[125, "whole-machine"]], "Single NUMA Domain": [[125, "single-numa-domain"]], "Several Cores Within a NUMA Domain": [[125, "several-cores-within-a-numa-domain"]], "Persistent Cache": [[126, "persistent-cache"]], "Primitive": [[126, "primitive"]], "Relation to Primitive Cache": [[126, "relation-to-primitive-cache"]], "API Usage Example": [[126, "api-usage-example"], [126, "id1"]], "Engine": [[126, "engine"], [249, "engine"], [280, "engine"]], "Limitations": [[126, "limitations"]], "Pooling": [[127, "pooling"], [258, "pooling"]], "Primitive Cache": [[129, "primitive-cache"], [260, "primitive-cache"]], "Managing Memory Consumption": [[129, "managing-memory-consumption"]], "Profiling": [[129, "profiling"]], "Profiling oneDNN Performance": [[130, "profiling-onednn-performance"]], "Features for VTune Amplifier": [[130, "features-for-vtune-amplifier"]], "ITT Tagging for Primitive Execution": [[130, "itt-tagging-for-primitive-execution"]], "Example: Profiling with VTune Amplifier": [[130, "example-profiling-with-vtune-amplifier"]], "Profiling for Hotspots": [[130, "profiling-for-hotspots"]], "Profiling for Microarchitecture Information": [[130, "profiling-for-microarchitecture-information"]], "Example: Profiling with Linux Perf": [[130, "example-profiling-with-linux-perf"]], "Reduction": [[131, "reduction"], [263, "reduction"]], "Notes": [[131, "notes"]], "Resampling": [[133, "resampling"], [265, "resampling"]], "Nearest Neighbor Resampling": [[133, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[133, "bilinear-resampling"]], "RNN": [[134, "rnn"], [266, "rnn"]], "Cell Functions": [[134, "cell-functions"]], "Vanilla RNN": [[134, "vanilla-rnn"]], "LSTM": [[134, "lstm"]], "LSTM (or Vanilla LSTM)": [[134, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[134, "lstm-with-peephole"]], "LSTM with Projection (or LSTMP)": [[134, "lstm-with-projection-or-lstmp"]], "GRU": [[134, "gru"]], "Linear-Before-Reset GRU": [[134, "linear-before-reset-gru"]], "AUGRU": [[134, "augru"]], "Linear-Before-Reset AUGRU": [[134, "linear-before-reset-augru"]], "Considerations for Training": [[134, "considerations-for-training"]], "Shuffle": [[135, "shuffle"], [268, "shuffle"]], "Data Layouts": [[135, "data-layouts"]], "Sum": [[137, "sum"], [271, "sum"]], "fp32 Training": [[139, "fp32-training"]], "bfp16 Training": [[139, "bfp16-training"]], "Using oneDNN with Threadpool-Based Threading": [[138, "using-onednn-with-threadpool-based-threading"]], "Bfloat16 Training": [[140, "bfloat16-training"]], "bfloat16 Support": [[140, "bfloat16-support"]], "bfloat16 Workflow": [[140, "bfloat16-workflow"]], "Transitioning from Intel MKL-DNN to oneDNN": [[141, "transitioning-from-intel-mkl-dnn-to-onednn"]], "Summary of Changes": [[141, "summary-of-changes"]], "Source Code Changes": [[141, "source-code-changes"]], "Build Process": [[141, "build-process"]], "Broken Compatibility with Intel MKL-DNN": [[141, "broken-compatibility-with-intel-mkl-dnn"]], "Information for Developers": [[141, "information-for-developers"]], "Understanding Memory Formats": [[142, "understanding-memory-formats"]], "Nomenclature Used": [[142, "nomenclature-used"]], "Data Formats": [[142, "data-formats"]], "Plain Data Formats": [[142, "plain-data-formats"]], "NCHW": [[142, "nchw"]], "NHWC": [[142, "nhwc"]], "CHWN": [[142, "chwn"]], "Relevant Reading": [[142, "relevant-reading"]], "Generalization of the Plain Data Layout": [[142, "generalization-of-the-plain-data-layout"]], "Strides": [[142, "strides"]], "Blocked Layout": [[142, "blocked-layout"]], "What if Channels Are not Multiples of 8 (or 16)?": [[142, "what-if-channels-are-not-multiples-of-8-or-16"]], "Verbose Mode": [[143, "verbose-mode"]], "Enable ONEDNN_VERBOSE": [[143, "enable-onednn-verbose"]], "Enable ONEDNN_VERBOSE with timestamps": [[143, "enable-onednn-verbose-with-timestamps"]], "Decrypting the Output": [[143, "decrypting-the-output"]], "Profiling with VTune(TM) Amplifier": [[144, "profiling-with-vtune-tm-amplifier"]], "enum dnnl_alg_kind_t": [[145, "enum-dnnl-alg-kind-t"]], "Enum Values": [[145, "enum-values"], [146, "enum-values"], [147, "enum-values"], [148, "enum-values"], [149, "enum-values"], [151, "enum-values"], [150, "enum-values"], [153, "enum-values"], [152, "enum-values"], [157, "enum-values"], [156, "enum-values"], [155, "enum-values"], [154, "enum-values"], [159, "enum-values"], [158, "enum-values"], [161, "enum-values"], [160, "enum-values"], [163, "enum-values"], [162, "enum-values"], [166, "enum-values"], [167, "enum-values"], [169, "enum-values"], [168, "enum-values"], [170, "enum-values"], [171, "enum-values"], [172, "enum-values"], [173, "enum-values"], [175, "enum-values"], [174, "enum-values"], [177, "enum-values"], [176, "enum-values"], [178, "enum-values"], [179, "enum-values"], [181, "enum-values"], [180, "enum-values"], [182, "enum-values"], [183, "enum-values"], [184, "enum-values"], [185, "enum-values"], [187, "enum-values"], [186, "enum-values"], [189, "enum-values"], [188, "enum-values"], [190, "enum-values"], [191, "enum-values"], [193, "enum-values"], [192, "enum-values"], [194, "enum-values"]], "enum dnnl::algorithm": [[146, "enum-dnnl-algorithm"]], "enum dnnl::cpu_isa": [[147, "enum-dnnl-cpu-isa"]], "enum dnnl::cpu_isa_hints": [[148, "enum-dnnl-cpu-isa-hints"]], "enum dnnl_cpu_isa_hints_t": [[149, "enum-dnnl-cpu-isa-hints-t"]], "enum dnnl_data_type_t": [[151, "enum-dnnl-data-type-t"]], "enum dnnl_cpu_isa_t": [[150, "enum-dnnl-cpu-isa-t"]], "enum dnnl_engine_kind_t": [[153, "enum-dnnl-engine-kind-t"]], "enum dnnl::engine::kind": [[152, "enum-dnnl-engine-kind"]], "enum dnnl_fpmath_mode_t": [[157, "enum-dnnl-fpmath-mode-t"]], "enum dnnl::fpmath_mode": [[156, "enum-dnnl-fpmath-mode"]], "enum dnnl_format_tag_t": [[155, "enum-dnnl-format-tag-t"]], "enum dnnl_format_kind_t": [[154, "enum-dnnl-format-kind-t"]], "enum dnnl::graph::logical_tensor::data_type": [[159, "enum-dnnl-graph-logical-tensor-data-type"]], "enum dnnl_graph_layout_type_t": [[158, "enum-dnnl-graph-layout-type-t"]], "enum dnnl::graph::logical_tensor::property_type": [[161, "enum-dnnl-graph-logical-tensor-property-type"]], "enum dnnl::graph::logical_tensor::layout_type": [[160, "enum-dnnl-graph-logical-tensor-layout-type"]], "enum dnnl_graph_op_attr_t": [[163, "enum-dnnl-graph-op-attr-t"]], "enum dnnl::graph::op::attr": [[162, "enum-dnnl-graph-op-attr"]], "enum dnnl::graph::op::kind": [[164, "enum-dnnl-graph-op-kind"]], "enum dnnl_graph_op_kind_t": [[165, "enum-dnnl-graph-op-kind-t"]], "enum dnnl::graph::partition::policy": [[166, "enum-dnnl-graph-partition-policy"]], "enum dnnl_graph_partition_policy_t": [[167, "enum-dnnl-graph-partition-policy-t"]], "enum dnnl_graph_tensor_property_t": [[169, "enum-dnnl-graph-tensor-property-t"]], "enum dnnl::graph::status": [[168, "enum-dnnl-graph-status"]], "enum dnnl::memory::data_type": [[170, "enum-dnnl-memory-data-type"]], "enum dnnl::memory::format_kind": [[171, "enum-dnnl-memory-format-kind"]], "enum dnnl::memory::format_tag": [[172, "enum-dnnl-memory-format-tag"]], "enum dnnl::normalization_flags": [[173, "enum-dnnl-normalization-flags"]], "enum dnnl::ocl_interop::memory_kind": [[175, "enum-dnnl-ocl-interop-memory-kind"]], "enum dnnl_normalization_flags_t": [[174, "enum-dnnl-normalization-flags-t"]], "enum dnnl::primitive::kind": [[177, "enum-dnnl-primitive-kind"]], "enum dnnl_ocl_interop_memory_kind_t": [[176, "enum-dnnl-ocl-interop-memory-kind-t"]], "enum dnnl_primitive_kind_t": [[178, "enum-dnnl-primitive-kind-t"]], "enum dnnl::prop_kind": [[179, "enum-dnnl-prop-kind"]], "enum dnnl::query": [[181, "enum-dnnl-query"]], "enum dnnl_prop_kind_t": [[180, "enum-dnnl-prop-kind-t"]], "enum dnnl_query_t": [[182, "enum-dnnl-query-t"]], "enum dnnl::rnn_direction": [[183, "enum-dnnl-rnn-direction"]], "enum dnnl_rnn_direction_t": [[184, "enum-dnnl-rnn-direction-t"]], "enum dnnl::rnn_flags": [[185, "enum-dnnl-rnn-flags"]], "enum dnnl::scratchpad_mode": [[187, "enum-dnnl-scratchpad-mode"]], "enum dnnl_rnn_flags_t": [[186, "enum-dnnl-rnn-flags-t"]], "enum dnnl::status": [[189, "enum-dnnl-status"]], "enum dnnl_scratchpad_mode_t": [[188, "enum-dnnl-scratchpad-mode-t"]], "enum dnnl_status_t": [[190, "enum-dnnl-status-t"]], "enum dnnl::stream::flags": [[191, "enum-dnnl-stream-flags"]], "enum dnnl::sycl_interop::memory_kind": [[193, "enum-dnnl-sycl-interop-memory-kind"]], "enum dnnl_stream_flags_t": [[192, "enum-dnnl-stream-flags-t"]], "augru.cpp": [[195, "augru-cpp"]], "enum dnnl_sycl_interop_memory_kind_t": [[194, "enum-dnnl-sycl-interop-memory-kind-t"]], "binary.cpp": [[197, "binary-cpp"]], "batch_normalization.cpp": [[196, "batch-normalization-cpp"]], "bnorm_u8_via_binary_postops.cpp": [[198, "bnorm-u8-via-binary-postops-cpp"]], "cnn_inference_f32.c": [[199, "cnn-inference-f32-c"]], "cnn_inference_int8.cpp": [[201, "cnn-inference-int8-cpp"]], "cnn_inference_f32.cpp": [[200, "cnn-inference-f32-cpp"]], "cnn_training_f32.cpp": [[203, "cnn-training-f32-cpp"]], "cnn_training_bf16.cpp": [[202, "cnn-training-bf16-cpp"]], "convolution.cpp": [[205, "convolution-cpp"]], "concat.cpp": [[204, "concat-cpp"]], "cpu_matmul_quantization.cpp": [[207, "cpu-matmul-quantization-cpp"]], "cpu_cnn_training_f32.c": [[206, "cpu-cnn-training-f32-c"]], "cpu_rnn_inference_int8.cpp": [[209, "cpu-rnn-inference-int8-cpp"]], "cpu_rnn_inference_f32.cpp": [[208, "cpu-rnn-inference-f32-cpp"]], "cross_engine_reorder.c": [[211, "cross-engine-reorder-c"]], "cpu_sgemm_and_matmul.cpp": [[210, "cpu-sgemm-and-matmul-cpp"]], "cross_engine_reorder.cpp": [[212, "cross-engine-reorder-cpp"]], "eltwise.cpp": [[213, "eltwise-cpp"]], "getting_started.cpp": [[214, "getting-started-cpp"]], "gpu_opencl_interop.cpp": [[215, "gpu-opencl-interop-cpp"]], "inference_int8_matmul.cpp": [[216, "inference-int8-matmul-cpp"]], "inner_product.cpp": [[217, "inner-product-cpp"]], "layer_normalization.cpp": [[218, "layer-normalization-cpp"]], "lrn.cpp": [[219, "lrn-cpp"]], "lstm.cpp": [[220, "lstm-cpp"]], "matmul.cpp": [[221, "matmul-cpp"]], "performance_profiling.cpp": [[223, "performance-profiling-cpp"]], "memory_format_propagation.cpp": [[222, "memory-format-propagation-cpp"]], "pooling.cpp": [[224, "pooling-cpp"]], "prelu.cpp": [[225, "prelu-cpp"]], "reduction.cpp": [[226, "reduction-cpp"]], "reorder.cpp": [[227, "reorder-cpp"]], "resampling.cpp": [[228, "resampling-cpp"]], "rnn_training_f32.cpp": [[229, "rnn-training-f32-cpp"]], "softmax.cpp": [[231, "softmax-cpp"]], "shuffle.cpp": [[230, "shuffle-cpp"]], "sum.cpp": [[232, "sum-cpp"]], "sycl_interop_buffer.cpp": [[233, "sycl-interop-buffer-cpp"]], "Global Namespace": [[234, "global-namespace"]], "Supported Operations": [[237, "supported-operations"]], "Programming Model": [[236, "programming-model"], [367, "programming-model"]], "Global Functions": [[239, "global-functions"], [241, "global-functions"], [240, "global-functions"], [242, "global-functions"], [245, "global-functions"], [244, "global-functions"], [247, "global-functions"], [248, "global-functions"], [249, "global-functions"], [250, "global-functions"], [251, "global-functions"], [253, "global-functions"], [255, "global-functions"], [254, "global-functions"], [257, "global-functions"], [256, "global-functions"], [258, "global-functions"], [259, "global-functions"], [260, "global-functions"], [263, "global-functions"], [262, "global-functions"], [265, "global-functions"], [264, "global-functions"], [266, "global-functions"], [267, "global-functions"], [268, "global-functions"], [269, "global-functions"], [270, "global-functions"], [271, "global-functions"], [273, "global-functions"], [272, "global-functions"], [276, "global-functions"], [277, "global-functions"], [279, "global-functions"], [278, "global-functions"], [281, "global-functions"], [280, "global-functions"], [283, "global-functions"], [285, "global-functions"], [284, "global-functions"], [287, "global-functions"], [288, "global-functions"], [294, "global-functions"], [295, "global-functions"], [296, "global-functions"], [297, "global-functions"]], "oneDNN API": [[238, "onednn-api"]], "Common API": [[243, "common-api"]], "BLAS functions": [[242, "blas-functions"]], "Deconvolution": [[247, "deconvolution"]], "Data types": [[246, "data-types"]], "Macros": [[246, "macros"], [256, "macros"], [262, "macros"], [267, "macros"], [283, "macros"]], "Floating-point Math Mode": [[250, "floating-point-math-mode"]], "Runtime interoperability API": [[252, "runtime-interoperability-api"], [282, "runtime-interoperability-api"]], "LRN": [[254, "lrn"]], "OpenCL interoperability API": [[257, "opencl-interoperability-api"]], "Memory": [[256, "memory"]], "Common": [[262, "common"]], "Service": [[267, "service"]], "Stream": [[270, "stream"]], "Threadpool interoperability API": [[273, "threadpool-interoperability-api"]], "SYCL interoperability API": [[272, "sycl-interoperability-api"], [287, "sycl-interoperability-api"]], "Utilities": [[274, "utilities"], [289, "utilities"]], "Graph API": [[275, "graph-api"]], "Allocator": [[276, "allocator"]], "Constant Tensor Cache": [[279, "constant-tensor-cache"]], "Compiled Partition Cache": [[278, "compiled-partition-cache"]], "Status": [[286, "status"]], "oneAPI Deep Neural Network Library Developer Guide and Reference": [[290, "oneapi-deep-neural-network-library-developer-guide-and-reference"]], "Interoperability with DPC++ and OpenCL": [[291, "interoperability-with-dpc-and-opencl"]], "namespace dnnl": [[292, "namespace-dnnl"]], "namespace dnnl::graph": [[293, "namespace-dnnl-graph"]], "namespace dnnl::graph::sycl_interop": [[294, "namespace-dnnl-graph-sycl-interop"]], "namespace dnnl::ocl_interop": [[295, "namespace-dnnl-ocl-interop"]], "namespace dnnl::sycl_interop": [[296, "namespace-dnnl-sycl-interop"]], "namespace dnnl::threadpool_interop": [[297, "namespace-dnnl-threadpool-interop"]], "namespace oneapi": [[298, "namespace-oneapi"]], "namespace std": [[299, "namespace-std"]], "namespace sycl": [[300, "namespace-sycl"]], "Orphans": [[301, "orphans"]], "AUGRU RNN Primitive Example": [[302, "augru-rnn-primitive-example"]], "<Untitled>": [[303, "untitled"], [305, "untitled"], [307, "untitled"], [309, "untitled"], [316, "untitled"], [318, "untitled"], [321, "untitled"], [325, "untitled"], [329, "untitled"], [333, "untitled"], [335, "untitled"], [337, "untitled"], [340, "untitled"], [342, "untitled"], [344, "untitled"], [348, "untitled"], [350, "untitled"], [352, "untitled"], [354, "untitled"], [356, "untitled"], [359, "untitled"], [361, "untitled"], [363, "untitled"]], "Batch Normalization Primitive Example": [[304, "batch-normalization-primitive-example"]], "Binary Primitive Example": [[306, "binary-primitive-example"]], "Bnorm u8 by binary post-ops example": [[308, "bnorm-u8-by-binary-post-ops-example"]], "CNN f32 inference example": [[310, "cnn-f32-inference-example"], [311, "cnn-f32-inference-example"]], "CNN int8 inference example": [[312, "cnn-int8-inference-example"]], "CNN bf16 training example": [[313, "cnn-bf16-training-example"]], "CNN f32 training example": [[314, "cnn-f32-training-example"], [319, "cnn-f32-training-example"]], "Concat Primitive Example": [[315, "concat-primitive-example"]], "Convolution Primitive Example": [[317, "convolution-primitive-example"]], "MatMul Tutorial: Quantization": [[320, "matmul-tutorial-quantization"]], "RNN f32 inference example": [[322, "rnn-f32-inference-example"]], "RNN int8 inference example": [[323, "rnn-int8-inference-example"]], "MatMul Tutorial: Comparison with SGEMM": [[324, "matmul-tutorial-comparison-with-sgemm"]], "Reorder between CPU and GPU engines": [[327, "reorder-between-cpu-and-gpu-engines"], [326, "reorder-between-cpu-and-gpu-engines"]], "Public headers": [[327, "public-headers"], [330, "public-headers"], [331, "public-headers"], [364, "public-headers"]], "cross_engine_reorder_tutorial() function": [[327, "cross-engine-reorder-tutorial-function"]], "Engine and stream": [[327, "engine-and-stream"], [330, "engine-and-stream"], [331, "engine-and-stream"], [364, "engine-and-stream"]], "Wrapping data into oneDNN GPU memory object": [[327, "wrapping-data-into-onednn-gpu-memory-object"]], "Creating a ReLU primitive": [[327, "creating-a-relu-primitive"], [330, "creating-a-relu-primitive"]], "Getting results from a oneDNN GPU memory object": [[327, "getting-results-from-a-onednn-gpu-memory-object"]], "Executing all primitives": [[327, "executing-all-primitives"]], "Validate the result": [[327, "validate-the-result"]], "Element-Wise Primitive Example": [[328, "element-wise-primitive-example"]], "Getting started": [[330, "getting-started"]], "getting_started_tutorial() function": [[330, "getting-started-tutorial-function"]], "Data preparation (code outside of oneDNN)": [[330, "data-preparation-code-outside-of-onednn"]], "Wrapping data into a oneDNN memory object": [[330, "wrapping-data-into-a-onednn-memory-object"]], "Memory descriptor": [[330, "memory-descriptor"]], "Alternative way to create a memory descriptor": [[330, "alternative-way-to-create-a-memory-descriptor"]], "Creating a memory object": [[330, "creating-a-memory-object"]], "Executing the ReLU primitive": [[330, "executing-the-relu-primitive"]], "Obtaining the result and validation": [[330, "obtaining-the-result-and-validation"]], "main() function": [[330, "main-function"], [364, "main-function"]], "Getting started on GPU with OpenCL extensions API": [[331, "getting-started-on-gpu-with-opencl-extensions-api"]], "gpu_opencl_interop_tutorial() function": [[331, "gpu-opencl-interop-tutorial-function"]], "Wrapping data into oneDNN memory object": [[331, "wrapping-data-into-onednn-memory-object"], [364, "wrapping-data-into-onednn-memory-object"]], "Initialize the data by executing a custom OpenCL kernel": [[331, "initialize-the-data-by-executing-a-custom-opencl-kernel"]], "Create and execute a primitive": [[331, "create-and-execute-a-primitive"], [364, "create-and-execute-a-primitive"]], "Validate the results": [[331, "validate-the-results"], [364, "validate-the-results"]], "MatMul Tutorial: INT8 Inference": [[332, "matmul-tutorial-int8-inference"]], "Inner Product Primitive Example": [[334, "inner-product-primitive-example"]], "Layer Normalization Primitive Example": [[336, "layer-normalization-primitive-example"]], "Local Response Normalization Primitive Example": [[339, "local-response-normalization-primitive-example"]], "Legal Information": [[338, "legal-information"]], "Trademark Information": [[338, "trademark-information"]], "LSTM RNN Primitive Example": [[341, "lstm-rnn-primitive-example"]], "Matmul Primitive Example": [[343, "matmul-primitive-example"]], "Memory Format Propagation": [[345, "memory-format-propagation"]], "Introduction to the tutorial": [[345, "introduction-to-the-tutorial"]], "memory_format_propagation() function": [[345, "memory-format-propagation-function"]], "Initialization": [[345, "initialization"]], "Create convolution and pooling primitives": [[345, "create-convolution-and-pooling-primitives"]], "Create source and destination memory objects": [[345, "create-source-and-destination-memory-objects"]], "Determine if source and destination need to be reordered": [[345, "determine-if-source-and-destination-need-to-be-reordered"]], "Allocate intermediate buffers if necessary": [[345, "allocate-intermediate-buffers-if-necessary"]], "Perform reorders for source data if necessary": [[345, "perform-reorders-for-source-data-if-necessary"]], "Create and execute convolution and pooling primitives": [[345, "create-and-execute-convolution-and-pooling-primitives"]], "Reorder destination data if necessary": [[345, "reorder-destination-data-if-necessary"]], "Results": [[345, "results"]], "Performance Profiling Example": [[346, "performance-profiling-example"]], "Walkthrough": [[346, "walkthrough"]], "Naive Implementation": [[346, "naive-implementation"]], "Blocked format implementation": [[346, "blocked-format-implementation"]], "Fused Implementation": [[346, "fused-implementation"]], "Performance summary": [[346, "performance-summary"]], "Configuration Notice": [[346, "configuration-notice"]], "Pooling Primitive Example": [[347, "pooling-primitive-example"]], "Primitive Example": [[349, "primitive-example"]], "Reduction Primitive Example": [[351, "reduction-primitive-example"]], "Reorder Primitive Example": [[353, "reorder-primitive-example"]], "Resampling Primitive Example": [[355, "resampling-primitive-example"]], "RNN f32 training example": [[357, "rnn-f32-training-example"]], "Shuffle Primitive Example": [[358, "shuffle-primitive-example"]], "Softmax Primitive Example": [[360, "softmax-primitive-example"]], "Sum Primitive Example": [[362, "sum-primitive-example"]], "Getting started on both CPU and GPU with SYCL extensions API": [[364, "getting-started-on-both-cpu-and-gpu-with-sycl-extensions-api"]], "sycl_interop_buffer_tutorial() function": [[364, "sycl-interop-buffer-tutorial-function"]], "Initialize the data executing a custom SYCL kernel": [[364, "initialize-the-data-executing-a-custom-sycl-kernel"]], "Todo List": [[365, "todo-list"]], "Performance Profiling and Inspection": [[366, "performance-profiling-and-inspection"]], "struct dnnl::augru_backward": [[369, "struct-dnnl-augru-backward"]], "Inherited Members": [[369, "inherited-members"], [370, "inherited-members"], [371, "inherited-members"], [372, "inherited-members"], [373, "inherited-members"], [374, "inherited-members"], [375, "inherited-members"], [376, "inherited-members"], [377, "inherited-members"], [378, "inherited-members"], [379, "inherited-members"], [381, "inherited-members"], [380, "inherited-members"], [383, "inherited-members"], [382, "inherited-members"], [385, "inherited-members"], [384, "inherited-members"], [386, "inherited-members"], [387, "inherited-members"], [389, "inherited-members"], [388, "inherited-members"], [391, "inherited-members"], [390, "inherited-members"], [392, "inherited-members"], [393, "inherited-members"], [395, "inherited-members"], [394, "inherited-members"], [396, "inherited-members"], [398, "inherited-members"], [403, "inherited-members"], [404, "inherited-members"], [405, "inherited-members"], [406, "inherited-members"], [409, "inherited-members"], [411, "inherited-members"], [410, "inherited-members"], [412, "inherited-members"], [413, "inherited-members"], [414, "inherited-members"], [415, "inherited-members"], [417, "inherited-members"], [416, "inherited-members"], [418, "inherited-members"], [419, "inherited-members"], [421, "inherited-members"], [420, "inherited-members"], [422, "inherited-members"], [423, "inherited-members"], [425, "inherited-members"], [424, "inherited-members"], [426, "inherited-members"], [427, "inherited-members"], [428, "inherited-members"], [429, "inherited-members"], [430, "inherited-members"], [431, "inherited-members"], [432, "inherited-members"], [433, "inherited-members"], [434, "inherited-members"], [435, "inherited-members"], [436, "inherited-members"], [438, "inherited-members"], [440, "inherited-members"], [441, "inherited-members"], [442, "inherited-members"], [443, "inherited-members"], [444, "inherited-members"], [447, "inherited-members"], [446, "inherited-members"], [448, "inherited-members"], [449, "inherited-members"], [450, "inherited-members"], [452, "inherited-members"], [454, "inherited-members"], [456, "inherited-members"], [457, "inherited-members"], [459, "inherited-members"], [458, "inherited-members"], [460, "inherited-members"], [461, "inherited-members"], [462, "inherited-members"], [463, "inherited-members"], [465, "inherited-members"], [464, "inherited-members"], [466, "inherited-members"], [467, "inherited-members"], [469, "inherited-members"], [468, "inherited-members"], [470, "inherited-members"], [471, "inherited-members"], [473, "inherited-members"], [472, "inherited-members"], [474, "inherited-members"], [476, "inherited-members"], [477, "inherited-members"], [478, "inherited-members"], [481, "inherited-members"], [480, "inherited-members"], [483, "inherited-members"], [482, "inherited-members"]], "struct args_t": [[368, "struct-args-t"]], "struct dnnl::augru_backward::primitive_desc": [[370, "struct-dnnl-augru-backward-primitive-desc"]], "struct dnnl::augru_forward": [[371, "struct-dnnl-augru-forward"]], "struct dnnl::augru_forward::primitive_desc": [[372, "struct-dnnl-augru-forward-primitive-desc"]], "struct dnnl::batch_normalization_backward": [[373, "struct-dnnl-batch-normalization-backward"]], "struct dnnl::batch_normalization_backward::primitive_desc": [[374, "struct-dnnl-batch-normalization-backward-primitive-desc"]], "struct dnnl::batch_normalization_forward": [[375, "struct-dnnl-batch-normalization-forward"]], "struct dnnl::batch_normalization_forward::primitive_desc": [[376, "struct-dnnl-batch-normalization-forward-primitive-desc"]], "struct dnnl::binary": [[377, "struct-dnnl-binary"]], "struct dnnl::binary::primitive_desc": [[378, "struct-dnnl-binary-primitive-desc"]], "struct dnnl::concat": [[379, "struct-dnnl-concat"]], "struct dnnl::convolution_backward_data": [[381, "struct-dnnl-convolution-backward-data"]], "struct dnnl::concat::primitive_desc": [[380, "struct-dnnl-concat-primitive-desc"]], "struct dnnl::convolution_backward_weights": [[383, "struct-dnnl-convolution-backward-weights"]], "struct dnnl::convolution_backward_data::primitive_desc": [[382, "struct-dnnl-convolution-backward-data-primitive-desc"]], "struct dnnl::convolution_forward": [[385, "struct-dnnl-convolution-forward"]], "struct dnnl::convolution_backward_weights::primitive_desc": [[384, "struct-dnnl-convolution-backward-weights-primitive-desc"]], "struct dnnl::convolution_forward::primitive_desc": [[386, "struct-dnnl-convolution-forward-primitive-desc"]], "struct dnnl::deconvolution_backward_data": [[387, "struct-dnnl-deconvolution-backward-data"]], "struct dnnl::deconvolution_backward_weights": [[389, "struct-dnnl-deconvolution-backward-weights"]], "struct dnnl::deconvolution_backward_data::primitive_desc": [[388, "struct-dnnl-deconvolution-backward-data-primitive-desc"]], "struct dnnl::deconvolution_forward": [[391, "struct-dnnl-deconvolution-forward"]], "struct dnnl::deconvolution_backward_weights::primitive_desc": [[390, "struct-dnnl-deconvolution-backward-weights-primitive-desc"]], "struct dnnl::deconvolution_forward::primitive_desc": [[392, "struct-dnnl-deconvolution-forward-primitive-desc"]], "struct dnnl::eltwise_backward": [[393, "struct-dnnl-eltwise-backward"]], "struct dnnl::eltwise_forward": [[395, "struct-dnnl-eltwise-forward"]], "struct dnnl::eltwise_backward::primitive_desc": [[394, "struct-dnnl-eltwise-backward-primitive-desc"]], "struct dnnl::eltwise_forward::primitive_desc": [[396, "struct-dnnl-eltwise-forward-primitive-desc"]], "struct dnnl_engine": [[397, "struct-dnnl-engine"]], "struct dnnl::engine": [[398, "struct-dnnl-engine"]], "struct dnnl::error": [[399, "struct-dnnl-error"]], "struct dnnl_graph_inplace_pair_t": [[401, "struct-dnnl-graph-inplace-pair-t"]], "Fields": [[401, "fields"], [400, "fields"], [402, "fields"], [479, "fields"], [484, "fields"]], "struct dnnl_exec_arg_t": [[400, "struct-dnnl-exec-arg-t"]], "struct dnnl_graph_logical_tensor_t": [[402, "struct-dnnl-graph-logical-tensor-t"]], "struct dnnl::gru_backward": [[403, "struct-dnnl-gru-backward"]], "struct dnnl::gru_backward::primitive_desc": [[404, "struct-dnnl-gru-backward-primitive-desc"]], "struct dnnl::gru_forward": [[405, "struct-dnnl-gru-forward"]], "template struct dnnl::handle": [[407, "template-struct-dnnl-handle"]], "struct dnnl::gru_forward::primitive_desc": [[406, "struct-dnnl-gru-forward-primitive-desc"]], "template struct dnnl::handle_traits": [[408, "template-struct-dnnl-handle-traits"]], "struct dnnl::inner_product_backward_data": [[409, "struct-dnnl-inner-product-backward-data"]], "struct dnnl::inner_product_backward_weights": [[411, "struct-dnnl-inner-product-backward-weights"]], "struct dnnl::inner_product_backward_data::primitive_desc": [[410, "struct-dnnl-inner-product-backward-data-primitive-desc"]], "struct dnnl::inner_product_backward_weights::primitive_desc": [[412, "struct-dnnl-inner-product-backward-weights-primitive-desc"]], "struct dnnl::inner_product_forward": [[413, "struct-dnnl-inner-product-forward"]], "struct dnnl::inner_product_forward::primitive_desc": [[414, "struct-dnnl-inner-product-forward-primitive-desc"]], "struct dnnl::layer_normalization_backward": [[415, "struct-dnnl-layer-normalization-backward"]], "struct dnnl::layer_normalization_forward": [[417, "struct-dnnl-layer-normalization-forward"]], "struct dnnl::layer_normalization_backward::primitive_desc": [[416, "struct-dnnl-layer-normalization-backward-primitive-desc"]], "struct dnnl::layer_normalization_forward::primitive_desc": [[418, "struct-dnnl-layer-normalization-forward-primitive-desc"]], "struct dnnl::lbr_augru_backward": [[419, "struct-dnnl-lbr-augru-backward"]], "struct dnnl::lbr_augru_forward": [[421, "struct-dnnl-lbr-augru-forward"]], "struct dnnl::lbr_augru_backward::primitive_desc": [[420, "struct-dnnl-lbr-augru-backward-primitive-desc"]], "struct dnnl::lbr_augru_forward::primitive_desc": [[422, "struct-dnnl-lbr-augru-forward-primitive-desc"]], "struct dnnl::lbr_gru_backward": [[423, "struct-dnnl-lbr-gru-backward"]], "struct dnnl::lbr_gru_forward": [[425, "struct-dnnl-lbr-gru-forward"]], "struct dnnl::lbr_gru_backward::primitive_desc": [[424, "struct-dnnl-lbr-gru-backward-primitive-desc"]], "struct dnnl::lbr_gru_forward::primitive_desc": [[426, "struct-dnnl-lbr-gru-forward-primitive-desc"]], "struct dnnl::lrn_backward": [[427, "struct-dnnl-lrn-backward"]], "struct dnnl::lrn_backward::primitive_desc": [[428, "struct-dnnl-lrn-backward-primitive-desc"]], "struct dnnl::lrn_forward": [[429, "struct-dnnl-lrn-forward"]], "struct dnnl::lrn_forward::primitive_desc": [[430, "struct-dnnl-lrn-forward-primitive-desc"]], "struct dnnl::lstm_backward": [[431, "struct-dnnl-lstm-backward"]], "struct dnnl::lstm_backward::primitive_desc": [[432, "struct-dnnl-lstm-backward-primitive-desc"]], "struct dnnl::lstm_forward": [[433, "struct-dnnl-lstm-forward"]], "struct dnnl::lstm_forward::primitive_desc": [[434, "struct-dnnl-lstm-forward-primitive-desc"]], "struct dnnl::matmul": [[435, "struct-dnnl-matmul"]], "struct dnnl::matmul::primitive_desc": [[436, "struct-dnnl-matmul-primitive-desc"]], "struct dnnl_memory": [[437, "struct-dnnl-memory"]], "struct dnnl::memory": [[438, "struct-dnnl-memory"]], "struct dnnl_memory_desc": [[439, "struct-dnnl-memory-desc"]], "struct dnnl::memory::desc": [[440, "struct-dnnl-memory-desc"]], "struct dnnl::pooling_backward": [[441, "struct-dnnl-pooling-backward"]], "struct dnnl::pooling_backward::primitive_desc": [[442, "struct-dnnl-pooling-backward-primitive-desc"]], "struct dnnl::pooling_forward": [[443, "struct-dnnl-pooling-forward"]], "struct dnnl_post_ops": [[445, "struct-dnnl-post-ops"]], "struct dnnl::pooling_forward::primitive_desc": [[444, "struct-dnnl-pooling-forward-primitive-desc"]], "struct dnnl::prelu_backward": [[447, "struct-dnnl-prelu-backward"]], "struct dnnl::post_ops": [[446, "struct-dnnl-post-ops"]], "struct dnnl::prelu_backward::primitive_desc": [[448, "struct-dnnl-prelu-backward-primitive-desc"]], "struct dnnl::prelu_forward": [[449, "struct-dnnl-prelu-forward"]], "struct dnnl_primitive": [[451, "struct-dnnl-primitive"]], "struct dnnl::prelu_forward::primitive_desc": [[450, "struct-dnnl-prelu-forward-primitive-desc"]], "struct dnnl_primitive_attr": [[453, "struct-dnnl-primitive-attr"]], "struct dnnl::primitive": [[452, "struct-dnnl-primitive"]], "struct dnnl_primitive_desc": [[455, "struct-dnnl-primitive-desc"]], "struct dnnl::primitive_attr": [[454, "struct-dnnl-primitive-attr"]], "struct dnnl::primitive_desc": [[456, "struct-dnnl-primitive-desc"]], "struct dnnl::primitive_desc_base": [[457, "struct-dnnl-primitive-desc-base"]], "struct dnnl::reduction::primitive_desc": [[459, "struct-dnnl-reduction-primitive-desc"]], "struct dnnl::reduction": [[458, "struct-dnnl-reduction"]], "struct dnnl::reorder": [[460, "struct-dnnl-reorder"]], "struct dnnl::reorder::primitive_desc": [[461, "struct-dnnl-reorder-primitive-desc"]], "struct dnnl::resampling_backward": [[462, "struct-dnnl-resampling-backward"]], "struct dnnl::resampling_backward::primitive_desc": [[463, "struct-dnnl-resampling-backward-primitive-desc"]], "struct dnnl::resampling_forward::primitive_desc": [[465, "struct-dnnl-resampling-forward-primitive-desc"]], "struct dnnl::resampling_forward": [[464, "struct-dnnl-resampling-forward"]], "struct dnnl::rnn_primitive_desc_base": [[466, "struct-dnnl-rnn-primitive-desc-base"]], "struct dnnl::shuffle_backward": [[467, "struct-dnnl-shuffle-backward"]], "struct dnnl::shuffle_forward": [[469, "struct-dnnl-shuffle-forward"]], "struct dnnl::shuffle_backward::primitive_desc": [[468, "struct-dnnl-shuffle-backward-primitive-desc"]], "struct dnnl::shuffle_forward::primitive_desc": [[470, "struct-dnnl-shuffle-forward-primitive-desc"]], "struct dnnl::softmax_backward": [[471, "struct-dnnl-softmax-backward"]], "struct dnnl::softmax_forward": [[473, "struct-dnnl-softmax-forward"]], "struct dnnl::softmax_backward::primitive_desc": [[472, "struct-dnnl-softmax-backward-primitive-desc"]], "struct dnnl_stream": [[475, "struct-dnnl-stream"]], "struct dnnl::softmax_forward::primitive_desc": [[474, "struct-dnnl-softmax-forward-primitive-desc"]], "struct dnnl::stream": [[476, "struct-dnnl-stream"]], "struct dnnl::sum": [[477, "struct-dnnl-sum"]], "struct dnnl::sum::primitive_desc": [[478, "struct-dnnl-sum-primitive-desc"]], "struct dnnl::threadpool_interop::threadpool_iface": [[479, "struct-dnnl-threadpool-interop-threadpool-iface"]], "struct dnnl::vanilla_rnn_backward::primitive_desc": [[481, "struct-dnnl-vanilla-rnn-backward-primitive-desc"]], "struct dnnl::vanilla_rnn_backward": [[480, "struct-dnnl-vanilla-rnn-backward"]], "struct dnnl::vanilla_rnn_forward::primitive_desc": [[483, "struct-dnnl-vanilla-rnn-forward-primitive-desc"]], "struct dnnl::vanilla_rnn_forward": [[482, "struct-dnnl-vanilla-rnn-forward"]], "struct example_allows_unimplemented": [[485, "struct-example-allows-unimplemented"]], "struct dnnl_version_t": [[484, "struct-dnnl-version-t"]], "struct gemm_dims_t": [[486, "struct-gemm-dims-t"]], "Supported Primitives": [[487, "supported-primitives"]]}, "indexentries": {"allocator": [[2, "index-1"], [2, "index-2"], [276, "index-0"]], "class": [[2, "index-0"], [3, "index-0"], [4, "index-0"], [5, "index-0"], [6, "index-0"], [7, "index-0"], [8, "index-0"]], "dnnl::graph::allocator": [[2, "index-0"]], "function": [[2, "index-1"], [2, "index-2"], [3, "index-1"], [3, "index-2"], [3, "index-3"], [3, "index-4"], [3, "index-5"], [4, "index-1"], [4, "index-2"], [4, "index-3"], [4, "index-4"], [4, "index-5"], [4, "index-6"], [5, "index-10"], [5, "index-11"], [5, "index-12"], [5, "index-13"], [5, "index-14"], [5, "index-15"], [5, "index-16"], [5, "index-17"], [5, "index-18"], [5, "index-19"], [5, "index-20"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"], [6, "index-1"], [6, "index-2"], [6, "index-3"], [6, "index-4"], [6, "index-5"], [6, "index-6"], [6, "index-7"], [7, "index-1"], [7, "index-10"], [7, "index-2"], [7, "index-3"], [7, "index-4"], [7, "index-5"], [7, "index-6"], [7, "index-7"], [7, "index-8"], [7, "index-9"], [8, "index-1"], [8, "index-2"], [8, "index-3"], [8, "index-4"], [8, "index-5"], [239, "index-10"], [239, "index-11"], [239, "index-12"], [239, "index-13"], [239, "index-14"], [239, "index-15"], [239, "index-16"], [239, "index-17"], [239, "index-18"], [239, "index-19"], [239, "index-20"], [239, "index-21"], [239, "index-22"], [239, "index-23"], [239, "index-24"], [239, "index-25"], [239, "index-26"], [239, "index-27"], [239, "index-28"], [239, "index-29"], [239, "index-30"], [239, "index-31"], [239, "index-32"], [239, "index-33"], [239, "index-34"], [239, "index-35"], [239, "index-36"], [239, "index-37"], [239, "index-38"], [239, "index-39"], [239, "index-5"], [239, "index-6"], [239, "index-7"], [239, "index-8"], [239, "index-9"], [240, "index-1"], [240, "index-2"], [241, "index-1"], [242, "index-1"], [242, "index-2"], [242, "index-3"], [242, "index-4"], [242, "index-5"], [242, "index-6"], [244, "index-1"], [245, "index-1"], [245, "index-2"], [245, "index-3"], [247, "index-1"], [247, "index-2"], [247, "index-3"], [248, "index-1"], [248, "index-2"], [249, "index-2"], [249, "index-3"], [249, "index-4"], [249, "index-5"], [249, "index-6"], [250, "index-1"], [250, "index-2"], [250, "index-3"], [251, "index-1"], [251, "index-2"], [251, "index-3"], [253, "index-1"], [253, "index-2"], [254, "index-1"], [254, "index-2"], [255, "index-1"], [256, "index-10"], [256, "index-11"], [256, "index-12"], [256, "index-13"], [256, "index-14"], [256, "index-15"], [256, "index-16"], [256, "index-17"], [256, "index-18"], [256, "index-19"], [256, "index-20"], [256, "index-21"], [256, "index-22"], [256, "index-23"], [256, "index-5"], [256, "index-6"], [256, "index-7"], [256, "index-8"], [256, "index-9"], [257, "index-1"], [257, "index-10"], [257, "index-11"], [257, "index-12"], [257, "index-2"], [257, "index-3"], [257, "index-4"], [257, "index-5"], [257, "index-6"], [257, "index-7"], [257, "index-8"], [257, "index-9"], [258, "index-1"], [258, "index-2"], [259, "index-1"], [259, "index-2"], [260, "index-1"], [260, "index-2"], [260, "index-3"], [260, "index-4"], [262, "index-10"], [262, "index-11"], [262, "index-12"], [262, "index-13"], [262, "index-14"], [262, "index-15"], [262, "index-16"], [262, "index-17"], [262, "index-18"], [262, "index-19"], [262, "index-20"], [262, "index-5"], [262, "index-6"], [262, "index-7"], [262, "index-8"], [262, "index-9"], [263, "index-1"], [264, "index-1"], [265, "index-1"], [265, "index-2"], [266, "index-1"], [266, "index-10"], [266, "index-11"], [266, "index-12"], [266, "index-13"], [266, "index-14"], [266, "index-2"], [266, "index-3"], [266, "index-4"], [266, "index-5"], [266, "index-6"], [266, "index-7"], [266, "index-8"], [266, "index-9"], [267, "index-10"], [267, "index-11"], [267, "index-12"], [267, "index-13"], [267, "index-14"], [267, "index-15"], [267, "index-16"], [267, "index-17"], [267, "index-18"], [267, "index-19"], [267, "index-2"], [267, "index-20"], [267, "index-21"], [267, "index-3"], [267, "index-4"], [267, "index-5"], [267, "index-6"], [267, "index-7"], [267, "index-8"], [267, "index-9"], [268, "index-1"], [268, "index-2"], [269, "index-1"], [269, "index-2"], [270, "index-3"], [270, "index-4"], [270, "index-5"], [270, "index-6"], [271, "index-1"], [272, "index-1"], [272, "index-2"], [272, "index-3"], [272, "index-4"], [272, "index-5"], [272, "index-6"], [272, "index-7"], [272, "index-8"], [272, "index-9"], [273, "index-1"], [273, "index-2"], [273, "index-3"], [273, "index-4"], [273, "index-5"], [273, "index-6"], [273, "index-7"], [276, "index-5"], [276, "index-6"], [277, "index-3"], [277, "index-4"], [277, "index-5"], [277, "index-6"], [277, "index-7"], [278, "index-1"], [278, "index-2"], [278, "index-3"], [278, "index-4"], [279, "index-1"], [279, "index-2"], [279, "index-3"], [279, "index-4"], [280, "index-1"], [280, "index-2"], [281, "index-10"], [281, "index-11"], [281, "index-3"], [281, "index-4"], [281, "index-5"], [281, "index-6"], [281, "index-7"], [281, "index-8"], [281, "index-9"], [283, "index-1"], [283, "index-2"], [283, "index-3"], [283, "index-4"], [283, "index-5"], [284, "index-10"], [284, "index-11"], [284, "index-12"], [284, "index-3"], [284, "index-4"], [284, "index-5"], [284, "index-6"], [284, "index-7"], [284, "index-8"], [284, "index-9"], [285, "index-10"], [285, "index-11"], [285, "index-12"], [285, "index-13"], [285, "index-14"], [285, "index-3"], [285, "index-4"], [285, "index-5"], [285, "index-6"], [285, "index-7"], [285, "index-8"], [285, "index-9"], [287, "index-3"], [287, "index-4"], [287, "index-5"], [288, "index-3"], [288, "index-4"], [288, "index-5"], [288, "index-6"], [288, "index-7"], [294, "index-1"], [294, "index-2"], [295, "index-1"], [295, "index-10"], [295, "index-11"], [295, "index-12"], [295, "index-13"], [295, "index-14"], [295, "index-2"], [295, "index-3"], [295, "index-4"], [295, "index-5"], [295, "index-6"], [295, "index-7"], [295, "index-8"], [295, "index-9"], [296, "index-1"], [296, "index-10"], [296, "index-11"], [296, "index-12"], [296, "index-2"], [296, "index-3"], [296, "index-4"], [296, "index-5"], [296, "index-6"], [296, "index-7"], [296, "index-8"], [296, "index-9"], [297, "index-1"], [297, "index-2"], [297, "index-3"], [297, "index-4"], [297, "index-5"], [369, "index-1"], [369, "index-2"], [369, "index-3"], [370, "index-1"], [370, "index-10"], [370, "index-11"], [370, "index-12"], [370, "index-13"], [370, "index-14"], [370, "index-15"], [370, "index-16"], [370, "index-17"], [370, "index-18"], [370, "index-19"], [370, "index-2"], [370, "index-20"], [370, "index-21"], [370, "index-22"], [370, "index-23"], [370, "index-3"], [370, "index-4"], [370, "index-5"], [370, "index-6"], [370, "index-7"], [370, "index-8"], [370, "index-9"], [371, "index-1"], [371, "index-2"], [371, "index-3"], [372, "index-1"], [372, "index-10"], [372, "index-11"], [372, "index-12"], [372, "index-13"], [372, "index-14"], [372, "index-15"], [372, "index-2"], [372, "index-3"], [372, "index-4"], [372, "index-5"], [372, "index-6"], [372, "index-7"], [372, "index-8"], [372, "index-9"], [373, "index-1"], [373, "index-2"], [373, "index-3"], [374, "index-1"], [374, "index-10"], [374, "index-11"], [374, "index-12"], [374, "index-13"], [374, "index-14"], [374, "index-15"], [374, "index-2"], [374, "index-3"], [374, "index-4"], [374, "index-5"], [374, "index-6"], [374, "index-7"], [374, "index-8"], [374, "index-9"], [375, "index-1"], [375, "index-2"], [375, "index-3"], [376, "index-1"], [376, "index-10"], [376, "index-11"], [376, "index-12"], [376, "index-2"], [376, "index-3"], [376, "index-4"], [376, "index-5"], [376, "index-6"], [376, "index-7"], [376, "index-8"], [376, "index-9"], [377, "index-1"], [377, "index-2"], [377, "index-3"], [378, "index-1"], [378, "index-2"], [378, "index-3"], [378, "index-4"], [378, "index-5"], [378, "index-6"], [378, "index-7"], [378, "index-8"], [379, "index-1"], [379, "index-2"], [379, "index-3"], [380, "index-1"], [380, "index-10"], [380, "index-2"], [380, "index-3"], [380, "index-4"], [380, "index-5"], [380, "index-6"], [380, "index-7"], [380, "index-8"], [380, "index-9"], [381, "index-1"], [381, "index-2"], [381, "index-3"], [382, "index-1"], [382, "index-10"], [382, "index-11"], [382, "index-12"], [382, "index-13"], [382, "index-2"], [382, "index-3"], [382, "index-4"], [382, "index-5"], [382, "index-6"], [382, "index-7"], [382, "index-8"], [382, "index-9"], [383, "index-1"], [383, "index-2"], [383, "index-3"], [384, "index-1"], [384, "index-10"], [384, "index-11"], [384, "index-12"], [384, "index-13"], [384, "index-14"], [384, "index-15"], [384, "index-16"], [384, "index-2"], [384, "index-3"], [384, "index-4"], [384, "index-5"], [384, "index-6"], [384, "index-7"], [384, "index-8"], [384, "index-9"], [385, "index-1"], [385, "index-2"], [385, "index-3"], [386, "index-1"], [386, "index-10"], [386, "index-11"], [386, "index-12"], [386, "index-13"], [386, "index-14"], [386, "index-15"], [386, "index-16"], [386, "index-2"], [386, "index-3"], [386, "index-4"], [386, "index-5"], [386, "index-6"], [386, "index-7"], [386, "index-8"], [386, "index-9"], [387, "index-1"], [387, "index-2"], [387, "index-3"], [388, "index-1"], [388, "index-10"], [388, "index-11"], [388, "index-12"], [388, "index-13"], [388, "index-2"], [388, "index-3"], [388, "index-4"], [388, "index-5"], [388, "index-6"], [388, "index-7"], [388, "index-8"], [388, "index-9"], [389, "index-1"], [389, "index-2"], [389, "index-3"], [390, "index-1"], [390, "index-10"], [390, "index-11"], [390, "index-12"], [390, "index-13"], [390, "index-14"], [390, "index-15"], [390, "index-16"], [390, "index-2"], [390, "index-3"], [390, "index-4"], [390, "index-5"], [390, "index-6"], [390, "index-7"], [390, "index-8"], [390, "index-9"], [391, "index-1"], [391, "index-2"], [391, "index-3"], [392, "index-1"], [392, "index-10"], [392, "index-11"], [392, "index-12"], [392, "index-13"], [392, "index-14"], [392, "index-15"], [392, "index-16"], [392, "index-2"], [392, "index-3"], [392, "index-4"], [392, "index-5"], [392, "index-6"], [392, "index-7"], [392, "index-8"], [392, "index-9"], [393, "index-1"], [393, "index-2"], [393, "index-3"], [394, "index-1"], [394, "index-10"], [394, "index-11"], [394, "index-12"], [394, "index-2"], [394, "index-3"], [394, "index-4"], [394, "index-5"], [394, "index-6"], [394, "index-7"], [394, "index-8"], [394, "index-9"], [395, "index-1"], [395, "index-2"], [395, "index-3"], [396, "index-1"], [396, "index-10"], [396, "index-11"], [396, "index-2"], [396, "index-3"], [396, "index-4"], [396, "index-5"], [396, "index-6"], [396, "index-7"], [396, "index-8"], [396, "index-9"], [398, "index-1"], [398, "index-2"], [398, "index-3"], [398, "index-4"], [398, "index-5"], [398, "index-6"], [398, "index-7"], [398, "index-8"], [399, "index-1"], [399, "index-2"], [399, "index-3"], [403, "index-1"], [403, "index-2"], [403, "index-3"], [404, "index-1"], [404, "index-10"], [404, "index-11"], [404, "index-12"], [404, "index-13"], [404, "index-14"], [404, "index-15"], [404, "index-16"], [404, "index-17"], [404, "index-18"], [404, "index-19"], [404, "index-2"], [404, "index-20"], [404, "index-21"], [404, "index-3"], [404, "index-4"], [404, "index-5"], [404, "index-6"], [404, "index-7"], [404, "index-8"], [404, "index-9"], [405, "index-1"], [405, "index-2"], [405, "index-3"], [406, "index-1"], [406, "index-10"], [406, "index-11"], [406, "index-12"], [406, "index-13"], [406, "index-14"], [406, "index-2"], [406, "index-3"], [406, "index-4"], [406, "index-5"], [406, "index-6"], [406, "index-7"], [406, "index-8"], [406, "index-9"], [407, "index-1"], [407, "index-10"], [407, "index-11"], [407, "index-12"], [407, "index-2"], [407, "index-3"], [407, "index-4"], [407, "index-5"], [407, "index-6"], [407, "index-7"], [407, "index-8"], [407, "index-9"], [409, "index-1"], [409, "index-2"], [409, "index-3"], [410, "index-1"], [410, "index-2"], [410, "index-3"], [410, "index-4"], [410, "index-5"], [410, "index-6"], [410, "index-7"], [411, "index-1"], [411, "index-2"], [411, "index-3"], [412, "index-1"], [412, "index-2"], [412, "index-3"], [412, "index-4"], [412, "index-5"], [412, "index-6"], [412, "index-7"], [412, "index-8"], [412, "index-9"], [413, "index-1"], [413, "index-2"], [413, "index-3"], [414, "index-1"], [414, "index-2"], [414, "index-3"], [414, "index-4"], [414, "index-5"], [414, "index-6"], [414, "index-7"], [414, "index-8"], [414, "index-9"], [415, "index-1"], [415, "index-2"], [415, "index-3"], [416, "index-1"], [416, "index-10"], [416, "index-11"], [416, "index-12"], [416, "index-13"], [416, "index-14"], [416, "index-15"], [416, "index-16"], [416, "index-2"], [416, "index-3"], [416, "index-4"], [416, "index-5"], [416, "index-6"], [416, "index-7"], [416, "index-8"], [416, "index-9"], [417, "index-1"], [417, "index-2"], [417, "index-3"], [418, "index-1"], [418, "index-10"], [418, "index-11"], [418, "index-12"], [418, "index-13"], [418, "index-2"], [418, "index-3"], [418, "index-4"], [418, "index-5"], [418, "index-6"], [418, "index-7"], [418, "index-8"], [418, "index-9"], [419, "index-1"], [419, "index-2"], [419, "index-3"], [420, "index-1"], [420, "index-10"], [420, "index-11"], [420, "index-12"], [420, "index-13"], [420, "index-14"], [420, "index-15"], [420, "index-16"], [420, "index-17"], [420, "index-18"], [420, "index-19"], [420, "index-2"], [420, "index-20"], [420, "index-21"], [420, "index-22"], [420, "index-23"], [420, "index-3"], [420, "index-4"], [420, "index-5"], [420, "index-6"], [420, "index-7"], [420, "index-8"], [420, "index-9"], [421, "index-1"], [421, "index-2"], [421, "index-3"], [422, "index-1"], [422, "index-10"], [422, "index-11"], [422, "index-12"], [422, "index-13"], [422, "index-14"], [422, "index-15"], [422, "index-2"], [422, "index-3"], [422, "index-4"], [422, "index-5"], [422, "index-6"], [422, "index-7"], [422, "index-8"], [422, "index-9"], [423, "index-1"], [423, "index-2"], [423, "index-3"], [424, "index-1"], [424, "index-10"], [424, "index-11"], [424, "index-12"], [424, "index-13"], [424, "index-14"], [424, "index-15"], [424, "index-16"], [424, "index-17"], [424, "index-18"], [424, "index-19"], [424, "index-2"], [424, "index-20"], [424, "index-21"], [424, "index-3"], [424, "index-4"], [424, "index-5"], [424, "index-6"], [424, "index-7"], [424, "index-8"], [424, "index-9"], [425, "index-1"], [425, "index-2"], [425, "index-3"], [426, "index-1"], [426, "index-10"], [426, "index-11"], [426, "index-12"], [426, "index-13"], [426, "index-14"], [426, "index-2"], [426, "index-3"], [426, "index-4"], [426, "index-5"], [426, "index-6"], [426, "index-7"], [426, "index-8"], [426, "index-9"], [427, "index-1"], [427, "index-2"], [427, "index-3"], [428, "index-1"], [428, "index-10"], [428, "index-11"], [428, "index-12"], [428, "index-2"], [428, "index-3"], [428, "index-4"], [428, "index-5"], [428, "index-6"], [428, "index-7"], [428, "index-8"], [428, "index-9"], [429, "index-1"], [429, "index-2"], [429, "index-3"], [430, "index-1"], [430, "index-10"], [430, "index-11"], [430, "index-12"], [430, "index-2"], [430, "index-3"], [430, "index-4"], [430, "index-5"], [430, "index-6"], [430, "index-7"], [430, "index-8"], [430, "index-9"], [431, "index-1"], [431, "index-2"], [431, "index-3"], [432, "index-1"], [432, "index-10"], [432, "index-11"], [432, "index-12"], [432, "index-13"], [432, "index-14"], [432, "index-15"], [432, "index-16"], [432, "index-17"], [432, "index-18"], [432, "index-19"], [432, "index-2"], [432, "index-20"], [432, "index-21"], [432, "index-22"], [432, "index-23"], [432, "index-24"], [432, "index-25"], [432, "index-26"], [432, "index-27"], [432, "index-28"], [432, "index-29"], [432, "index-3"], [432, "index-30"], [432, "index-31"], [432, "index-4"], [432, "index-5"], [432, "index-6"], [432, "index-7"], [432, "index-8"], [432, "index-9"], [433, "index-1"], [433, "index-2"], [433, "index-3"], [434, "index-1"], [434, "index-10"], [434, "index-11"], [434, "index-12"], [434, "index-13"], [434, "index-14"], [434, "index-15"], [434, "index-16"], [434, "index-17"], [434, "index-18"], [434, "index-19"], [434, "index-2"], [434, "index-20"], [434, "index-3"], [434, "index-4"], [434, "index-5"], [434, "index-6"], [434, "index-7"], [434, "index-8"], [434, "index-9"], [435, "index-1"], [435, "index-2"], [435, "index-3"], [436, "index-1"], [436, "index-2"], [436, "index-3"], [436, "index-4"], [436, "index-5"], [436, "index-6"], [436, "index-7"], [436, "index-8"], [438, "index-10"], [438, "index-11"], [438, "index-12"], [438, "index-13"], [438, "index-14"], [438, "index-15"], [438, "index-16"], [438, "index-17"], [438, "index-3"], [438, "index-4"], [438, "index-5"], [438, "index-6"], [438, "index-7"], [438, "index-8"], [438, "index-9"], [440, "index-1"], [440, "index-10"], [440, "index-11"], [440, "index-12"], [440, "index-13"], [440, "index-14"], [440, "index-15"], [440, "index-16"], [440, "index-17"], [440, "index-18"], [440, "index-19"], [440, "index-2"], [440, "index-20"], [440, "index-21"], [440, "index-22"], [440, "index-3"], [440, "index-4"], [440, "index-5"], [440, "index-6"], [440, "index-7"], [440, "index-8"], [440, "index-9"], [441, "index-1"], [441, "index-2"], [441, "index-3"], [442, "index-1"], [442, "index-10"], [442, "index-11"], [442, "index-12"], [442, "index-13"], [442, "index-2"], [442, "index-3"], [442, "index-4"], [442, "index-5"], [442, "index-6"], [442, "index-7"], [442, "index-8"], [442, "index-9"], [443, "index-1"], [443, "index-2"], [443, "index-3"], [444, "index-1"], [444, "index-10"], [444, "index-11"], [444, "index-12"], [444, "index-13"], [444, "index-2"], [444, "index-3"], [444, "index-4"], [444, "index-5"], [444, "index-6"], [444, "index-7"], [444, "index-8"], [444, "index-9"], [446, "index-1"], [446, "index-10"], [446, "index-11"], [446, "index-12"], [446, "index-13"], [446, "index-14"], [446, "index-15"], [446, "index-16"], [446, "index-2"], [446, "index-3"], [446, "index-4"], [446, "index-5"], [446, "index-6"], [446, "index-7"], [446, "index-8"], [446, "index-9"], [447, "index-1"], [447, "index-2"], [447, "index-3"], [448, "index-1"], [448, "index-2"], [448, "index-3"], [448, "index-4"], [448, "index-5"], [448, "index-6"], [448, "index-7"], [449, "index-1"], [449, "index-2"], [449, "index-3"], [450, "index-1"], [450, "index-2"], [450, "index-3"], [450, "index-4"], [450, "index-5"], [450, "index-6"], [452, "index-1"], [452, "index-10"], [452, "index-11"], [452, "index-12"], [452, "index-13"], [452, "index-2"], [452, "index-3"], [452, "index-4"], [452, "index-5"], [452, "index-6"], [452, "index-7"], [452, "index-8"], [452, "index-9"], [454, "index-1"], [454, "index-10"], [454, "index-11"], [454, "index-12"], [454, "index-13"], [454, "index-14"], [454, "index-15"], [454, "index-16"], [454, "index-2"], [454, "index-3"], [454, "index-4"], [454, "index-5"], [454, "index-6"], [454, "index-7"], [454, "index-8"], [454, "index-9"], [456, "index-1"], [456, "index-2"], [456, "index-3"], [456, "index-4"], [456, "index-5"], [457, "index-1"], [457, "index-10"], [457, "index-11"], [457, "index-12"], [457, "index-13"], [457, "index-14"], [457, "index-15"], [457, "index-16"], [457, "index-17"], [457, "index-18"], [457, "index-19"], [457, "index-2"], [457, "index-20"], [457, "index-21"], [457, "index-22"], [457, "index-23"], [457, "index-24"], [457, "index-25"], [457, "index-26"], [457, "index-27"], [457, "index-28"], [457, "index-29"], [457, "index-3"], [457, "index-30"], [457, "index-31"], [457, "index-32"], [457, "index-33"], [457, "index-34"], [457, "index-35"], [457, "index-36"], [457, "index-37"], [457, "index-38"], [457, "index-39"], [457, "index-4"], [457, "index-40"], [457, "index-41"], [457, "index-42"], [457, "index-5"], [457, "index-6"], [457, "index-7"], [457, "index-8"], [457, "index-9"], [458, "index-1"], [458, "index-2"], [458, "index-3"], [459, "index-1"], [459, "index-2"], [459, "index-3"], [459, "index-4"], [459, "index-5"], [459, "index-6"], [459, "index-7"], [459, "index-8"], [460, "index-1"], [460, "index-2"], [460, "index-3"], [460, "index-4"], [460, "index-5"], [460, "index-6"], [461, "index-1"], [461, "index-10"], [461, "index-11"], [461, "index-12"], [461, "index-2"], [461, "index-3"], [461, "index-4"], [461, "index-5"], [461, "index-6"], [461, "index-7"], [461, "index-8"], [461, "index-9"], [462, "index-1"], [462, "index-2"], [462, "index-3"], [463, "index-1"], [463, "index-2"], [463, "index-3"], [463, "index-4"], [463, "index-5"], [463, "index-6"], [464, "index-1"], [464, "index-2"], [464, "index-3"], [465, "index-1"], [465, "index-2"], [465, "index-3"], [465, "index-4"], [465, "index-5"], [465, "index-6"], [465, "index-7"], [466, "index-1"], [466, "index-10"], [466, "index-11"], [466, "index-12"], [466, "index-13"], [466, "index-14"], [466, "index-15"], [466, "index-16"], [466, "index-17"], [466, "index-18"], [466, "index-19"], [466, "index-2"], [466, "index-20"], [466, "index-21"], [466, "index-22"], [466, "index-23"], [466, "index-24"], [466, "index-25"], [466, "index-26"], [466, "index-3"], [466, "index-4"], [466, "index-5"], [466, "index-6"], [466, "index-7"], [466, "index-8"], [466, "index-9"], [467, "index-1"], [467, "index-2"], [467, "index-3"], [468, "index-1"], [468, "index-2"], [468, "index-3"], [468, "index-4"], [468, "index-5"], [468, "index-6"], [468, "index-7"], [468, "index-8"], [469, "index-1"], [469, "index-2"], [469, "index-3"], [470, "index-1"], [470, "index-2"], [470, "index-3"], [470, "index-4"], [470, "index-5"], [470, "index-6"], [470, "index-7"], [470, "index-8"], [471, "index-1"], [471, "index-2"], [471, "index-3"], [472, "index-1"], [472, "index-2"], [472, "index-3"], [472, "index-4"], [472, "index-5"], [472, "index-6"], [472, "index-7"], [472, "index-8"], [472, "index-9"], [473, "index-1"], [473, "index-2"], [473, "index-3"], [474, "index-1"], [474, "index-2"], [474, "index-3"], [474, "index-4"], [474, "index-5"], [474, "index-6"], [474, "index-7"], [474, "index-8"], [476, "index-1"], [476, "index-2"], [476, "index-3"], [476, "index-4"], [476, "index-5"], [476, "index-6"], [476, "index-7"], [476, "index-8"], [477, "index-1"], [477, "index-2"], [477, "index-3"], [478, "index-1"], [478, "index-10"], [478, "index-2"], [478, "index-3"], [478, "index-4"], [478, "index-5"], [478, "index-6"], [478, "index-7"], [478, "index-8"], [478, "index-9"], [479, "index-2"], [479, "index-3"], [479, "index-4"], [479, "index-5"], [480, "index-1"], [480, "index-2"], [480, "index-3"], [481, "index-1"], [481, "index-10"], [481, "index-11"], [481, "index-12"], [481, "index-13"], [481, "index-14"], [481, "index-15"], [481, "index-16"], [481, "index-17"], [481, "index-18"], [481, "index-19"], [481, "index-2"], [481, "index-20"], [481, "index-21"], [481, "index-22"], [481, "index-23"], [481, "index-24"], [481, "index-25"], [481, "index-3"], [481, "index-4"], [481, "index-5"], [481, "index-6"], [481, "index-7"], [481, "index-8"], [481, "index-9"], [482, "index-1"], [482, "index-2"], [482, "index-3"], [483, "index-1"], [483, "index-10"], [483, "index-11"], [483, "index-12"], [483, "index-13"], [483, "index-14"], [483, "index-15"], [483, "index-16"], [483, "index-17"], [483, "index-18"], [483, "index-2"], [483, "index-3"], [483, "index-4"], [483, "index-5"], [483, "index-6"], [483, "index-7"], [483, "index-8"], [483, "index-9"]], "compiled_partition": [[3, "index-1"], [3, "index-2"]], "dnnl::graph::compiled_partition": [[3, "index-0"]], "execute": [[3, "index-5"], [294, "index-2"], [296, "index-12"], [452, "index-9"], [460, "index-5"], [460, "index-6"]], "get_inplace_ports": [[3, "index-4"]], "query_logical_tensor": [[3, "index-3"]], "add_op": [[4, "index-3"]], "dnnl::graph::graph": [[4, "index-0"]], "finalize": [[4, "index-4"]], "get_partitions": [[4, "index-6"]], "graph": [[4, "index-1"], [4, "index-2"], [281, "index-0"]], "is_finalized": [[4, "index-5"]], "dim": [[5, "index-1"], [438, "index-1"]], "dims": [[5, "index-2"], [181, "index-44"], [402, "index-3"], [438, "index-2"]], "dnnl::graph::logical_tensor": [[5, "index-0"]], "get_data_type": [[5, "index-14"], [440, "index-17"]], "get_dims": [[5, "index-12"], [440, "index-18"]], "get_id": [[5, "index-13"], [7, "index-5"]], "get_layout_id": [[5, "index-17"]], "get_layout_type": [[5, "index-16"]], "get_mem_size": [[5, "index-19"]], "get_property_type": [[5, "index-15"]], "get_strides": [[5, "index-18"], [382, "index-10"], [384, "index-13"], [386, "index-13"], [388, "index-10"], [390, "index-13"], [392, "index-13"], [440, "index-12"], [442, "index-9"], [444, "index-9"], [457, "index-4"]], "is_equal": [[5, "index-20"]], "logical_tensor": [[5, "index-10"], [5, "index-3"], [5, "index-4"], [5, "index-5"], [5, "index-6"], [5, "index-7"], [5, "index-8"], [5, "index-9"]], "operator=": [[5, "index-11"], [407, "index-5"], [407, "index-6"]], "typedef": [[5, "index-1"], [5, "index-2"], [239, "index-1"], [239, "index-2"], [239, "index-3"], [239, "index-4"], [246, "index-1"], [246, "index-2"], [249, "index-1"], [256, "index-1"], [256, "index-2"], [256, "index-3"], [256, "index-4"], [262, "index-1"], [262, "index-2"], [262, "index-3"], [262, "index-4"], [267, "index-1"], [270, "index-1"], [270, "index-2"], [276, "index-1"], [276, "index-2"], [276, "index-3"], [276, "index-4"], [277, "index-1"], [277, "index-2"], [281, "index-1"], [281, "index-2"], [284, "index-1"], [284, "index-2"], [285, "index-1"], [285, "index-2"], [287, "index-1"], [287, "index-2"], [288, "index-1"], [288, "index-2"], [438, "index-1"], [438, "index-2"]], "add_input": [[6, "index-3"]], "add_inputs": [[6, "index-4"]], "add_output": [[6, "index-5"]], "add_outputs": [[6, "index-6"]], "dnnl::graph::op": [[6, "index-0"]], "op": [[6, "index-1"], [6, "index-2"], [284, "index-0"]], "set_attr": [[6, "index-7"]], "compile": [[7, "index-6"]], "dnnl::graph::partition": [[7, "index-0"]], "get_engine_kind": [[7, "index-10"]], "get_input_ports": [[7, "index-8"]], "get_ops": [[7, "index-4"]], "get_ops_num": [[7, "index-3"]], "get_output_ports": [[7, "index-9"]], "is_supported": [[7, "index-7"]], "partition": [[7, "index-1"], [7, "index-2"], [285, "index-0"]], "dnnl::graph::tensor": [[8, "index-0"]], "get_data_handle": [[8, "index-3"], [438, "index-10"]], "get_engine": [[8, "index-5"], [438, "index-9"], [457, "index-1"], [476, "index-3"]], "set_data_handle": [[8, "index-4"], [438, "index-11"]], "tensor": [[8, "index-1"], [8, "index-2"], [288, "index-0"]], "primitive attributes": [[9, "index-0"]], "page": [[9, "index-0"], [10, "index-0"], [11, "index-0"], [12, "index-0"], [13, "index-0"], [14, "index-0"], [15, "index-0"], [16, "index-0"], [17, "index-0"], [18, "index-0"], [19, "index-0"], [20, "index-0"], [21, "index-0"], [22, "index-0"], [23, "index-0"], [24, "index-0"], [25, "index-0"], [26, "index-0"], [27, "index-0"], [28, "index-0"], [29, "index-0"], [30, "index-0"], [31, "index-0"], [32, "index-0"], [33, "index-0"], [34, "index-0"], [35, "index-0"], [36, "index-0"], [37, "index-0"], [38, "index-0"], [39, "index-0"], [40, "index-0"], [41, "index-0"], [42, "index-0"], [43, "index-0"], [44, "index-0"], [45, "index-0"], [46, "index-0"], [47, "index-0"], [48, "index-0"], [49, "index-0"], [50, "index-0"], [51, "index-0"], [52, "index-0"], [53, "index-0"], [54, "index-0"], [55, "index-0"], [56, "index-0"], [57, "index-0"], [58, "index-0"], [59, "index-0"], [60, "index-0"], [61, "index-0"], [62, "index-0"], [63, "index-0"], [64, "index-0"], [65, "index-0"], [66, "index-0"], [67, "index-0"], [68, "index-0"], [69, "index-0"], [70, "index-0"], [71, "index-0"], [72, "index-0"], [73, "index-0"], [74, "index-0"], [75, "index-0"], [76, "index-0"], [77, "index-0"], [78, "index-0"], [79, "index-0"], [80, "index-0"], [81, "index-0"], [82, "index-0"], [83, "index-0"], [84, "index-0"], [85, "index-0"], [86, "index-0"], [87, "index-0"], [88, "index-0"], [89, "index-0"], [90, "index-0"], [91, "index-0"], [92, "index-0"], [93, "index-0"], [94, "index-0"], [95, "index-0"], [96, "index-0"], [97, "index-0"], [98, "index-0"], [99, "index-0"], [100, "index-0"], [101, "index-0"], [102, "index-0"], [103, "index-0"], [104, "index-0"], [105, "index-0"], [106, "index-0"], [107, "index-0"], [108, "index-0"], [109, "index-0"], [110, "index-0"], [111, "index-0"], [112, "index-0"], [113, "index-0"], [114, "index-0"], [115, "index-0"], [116, "index-0"], [117, "index-0"], [118, "index-0"], [119, "index-0"], [120, "index-0"], [121, "index-0"], [122, "index-0"], [123, "index-0"], [124, "index-0"], [125, "index-0"], [126, "index-0"], [127, "index-0"], [128, "index-0"], [129, "index-0"], [130, "index-0"], [131, "index-0"], [132, "index-0"], [133, "index-0"], [134, "index-0"], [135, "index-0"], [136, "index-0"], [137, "index-0"], [138, "index-0"], [139, "index-0"], [140, "index-0"], [141, "index-0"], [142, "index-0"], [143, "index-0"], [144, "index-0"], [302, "index-0"], [304, "index-0"], [306, "index-0"], [308, "index-0"], [310, "index-0"], [311, "index-0"], [312, "index-0"], [313, "index-0"], [314, "index-0"], [315, "index-0"], [317, "index-0"], [319, "index-0"], [320, "index-0"], [322, "index-0"], [323, "index-0"], [324, "index-0"], [326, "index-0"], [327, "index-0"], [328, "index-0"], [330, "index-0"], [331, "index-0"], [332, "index-0"], [334, "index-0"], [336, "index-0"], [338, "index-0"], [339, "index-0"], [341, "index-0"], [343, "index-0"], [345, "index-0"], [346, "index-0"], [347, "index-0"], [349, "index-0"], [351, "index-0"], [353, "index-0"], [355, "index-0"], [357, "index-0"], [358, "index-0"], [360, "index-0"], [362, "index-0"], [364, "index-0"], [365, "index-0"]], "primitive attributes: floating-point math mode": [[10, "index-0"]], "primitive attributes: post-ops": [[11, "index-0"]], "primitive attributes: quantization": [[12, "index-0"]], "primitive attributes: scratchpad": [[13, "index-0"]], "basic concepts": [[14, "index-0"], [31, "index-0"]], "batch normalization": [[15, "index-0"], [240, "index-0"]], "benchmarking performance": [[16, "index-0"]], "binary": [[17, "index-0"], [177, "index-13"], [241, "index-0"], [377, "index-1"], [377, "index-2"], [377, "index-3"]], "build from source": [[18, "index-0"]], "build options": [[19, "index-0"]], "api": [[20, "index-0"]], "concat": [[21, "index-0"], [57, "index-0"], [177, "index-4"], [244, "index-0"], [379, "index-1"], [379, "index-2"], [379, "index-3"]], "naming conventions": [[22, "index-0"]], "convolution": [[23, "index-0"], [58, "index-0"], [177, "index-6"], [245, "index-0"]], "cpu dispatcher control": [[24, "index-0"]], "cpu isa hints": [[25, "index-0"]], "data types": [[26, "index-0"], [246, "index-0"]], "dpc++ interoperability": [[27, "index-0"]], "eltwise": [[28, "index-0"], [177, "index-8"], [248, "index-0"]], "examples": [[29, "index-0"]], "experimental features": [[30, "index-0"]], "graph dump": [[32, "index-0"]], "supported fusion patterns": [[33, "index-0"]], "low precision": [[34, "index-0"]], "inference": [[35, "index-0"]], "inference and training aspects": [[36, "index-0"]], "int8 inference": [[37, "index-0"]], "inner product": [[38, "index-0"], [251, "index-0"]], "inspecting jit code": [[39, "index-0"]], "nuances of int8 computations": [[40, "index-0"]], "layer normalization": [[41, "index-0"], [253, "index-0"]], "linking to the library": [[42, "index-0"]], "local response normalization (lrn)": [[43, "index-0"]], "matrix multiplication": [[44, "index-0"], [255, "index-0"]], "abs": [[45, "index-0"]], "absbackward": [[46, "index-0"]], "add": [[47, "index-0"]], "avgpool": [[48, "index-0"]], "avgpoolbackward": [[49, "index-0"]], "batchnormforwardtraining": [[50, "index-0"]], "batchnorminference": [[51, "index-0"]], "batchnormtrainingbackward": [[52, "index-0"]], "biasadd": [[53, "index-0"]], "biasaddbackward": [[54, "index-0"]], "clamp": [[55, "index-0"]], "clampbackward": [[56, "index-0"]], "convolutionbackwarddata": [[59, "index-0"]], "convolutionbackwardweights": [[60, "index-0"]], "convtranspose": [[61, "index-0"]], "convtransposebackwarddata": [[62, "index-0"]], "convtransposebackwardweights": [[63, "index-0"]], "dequantize": [[64, "index-0"]], "divide": [[65, "index-0"]], "dynamicdequantize": [[66, "index-0"]], "dynamicquantize": [[67, "index-0"]], "elu": [[68, "index-0"]], "elubackward": [[69, "index-0"]], "end": [[70, "index-0"]], "exp": [[71, "index-0"]], "gelu": [[72, "index-0"]], "gelubackward": [[73, "index-0"]], "hardswish": [[74, "index-0"]], "hardswishbackward": [[75, "index-0"]], "interpolate": [[76, "index-0"]], "interpolatebackward": [[77, "index-0"]], "layernorm": [[78, "index-0"]], "layernormbackward": [[79, "index-0"]], "leakyrelu": [[80, "index-0"]], "log": [[81, "index-0"]], "logsoftmax": [[82, "index-0"]], "logsoftmaxbackward": [[83, "index-0"]], "matmul": [[84, "index-0"], [177, "index-14"], [435, "index-1"], [435, "index-2"], [435, "index-3"]], "maximum": [[85, "index-0"]], "maxpool": [[86, "index-0"]], "maxpoolbackward": [[87, "index-0"]], "minimum": [[88, "index-0"]], "mish": [[89, "index-0"]], "mishbackward": [[90, "index-0"]], "multiply": [[91, "index-0"]], "prelu": [[92, "index-0"], [128, "index-0"], [177, "index-18"], [259, "index-0"]], "prelubackward": [[93, "index-0"]], "quantize": [[94, "index-0"]], "reciprocal": [[95, "index-0"]], "reducel1": [[96, "index-0"]], "reducel2": [[97, "index-0"]], "reducemax": [[98, "index-0"]], "reducemean": [[99, "index-0"]], "reducemin": [[100, "index-0"]], "reduceprod": [[101, "index-0"]], "reducesum": [[102, "index-0"]], "relu": [[103, "index-0"]], "relubackward": [[104, "index-0"]], "reorder": [[105, "index-0"], [132, "index-0"], [177, "index-2"], [264, "index-0"], [460, "index-1"], [460, "index-2"], [460, "index-3"], [460, "index-4"]], "round": [[106, "index-0"]], "sigmoid": [[107, "index-0"]], "sigmoidbackward": [[108, "index-0"]], "softmax": [[109, "index-0"], [136, "index-0"], [177, "index-19"], [269, "index-0"]], "softmaxbackward": [[110, "index-0"]], "softplus": [[111, "index-0"]], "softplusbackward": [[112, "index-0"]], "sqrt": [[113, "index-0"]], "sqrtbackward": [[114, "index-0"]], "square": [[115, "index-0"]], "squareddifference": [[116, "index-0"]], "staticreshape": [[117, "index-0"]], "statictranspose": [[118, "index-0"]], "subtract": [[119, "index-0"]], "tanh": [[120, "index-0"]], "tanhbackward": [[121, "index-0"]], "typecast": [[122, "index-0"]], "wildcard": [[123, "index-0"]], "opencl interoperability": [[124, "index-0"]], "configuring onednn for benchmarking": [[125, "index-0"]], "persistent cache": [[126, "index-0"]], "pooling": [[127, "index-0"], [177, "index-16"], [258, "index-0"]], "primitive cache": [[129, "index-0"], [260, "index-0"]], "profiling onednn performance": [[130, "index-0"]], "reduction": [[131, "index-0"], [177, "index-17"], [263, "index-0"], [458, "index-1"], [458, "index-2"], [458, "index-3"]], "resampling": [[133, "index-0"], [177, "index-15"], [265, "index-0"]], "rnn": [[134, "index-0"], [177, "index-12"], [266, "index-0"]], "shuffle": [[135, "index-0"], [177, "index-3"], [268, "index-0"]], "sum": [[137, "index-0"], [177, "index-5"], [271, "index-0"], [477, "index-1"], [477, "index-2"], [477, "index-3"]], "using onednn with threadpool-based threading": [[138, "index-0"]], "training": [[139, "index-0"]], "bfloat16 training": [[140, "index-0"]], "transitioning from intel mkl-dnn to onednn": [[141, "index-0"]], "understanding memory formats": [[142, "index-0"]], "verbose mode": [[143, "index-0"]], "profiling with vtune(tm) amplifier": [[144, "index-0"]], "dnnl_alg_kind_t": [[145, "index-0"]], "dnnl_binary_add": [[145, "index-45"]], "dnnl_binary_div": [[145, "index-49"]], "dnnl_binary_eq": [[145, "index-55"]], "dnnl_binary_ge": [[145, "index-51"]], "dnnl_binary_gt": [[145, "index-52"]], "dnnl_binary_le": [[145, "index-53"]], "dnnl_binary_lt": [[145, "index-54"]], "dnnl_binary_max": [[145, "index-47"]], "dnnl_binary_min": [[145, "index-48"]], "dnnl_binary_mul": [[145, "index-46"]], "dnnl_binary_ne": [[145, "index-56"]], "dnnl_binary_sub": [[145, "index-50"]], "dnnl_convolution_auto": [[145, "index-3"]], "dnnl_convolution_direct": [[145, "index-1"]], "dnnl_convolution_winograd": [[145, "index-2"]], "dnnl_deconvolution_direct": [[145, "index-4"]], "dnnl_deconvolution_winograd": [[145, "index-5"]], "dnnl_eltwise_abs": [[145, "index-10"]], "dnnl_eltwise_clip": [[145, "index-20"]], "dnnl_eltwise_clip_v2": [[145, "index-21"]], "dnnl_eltwise_clip_v2_use_dst_for_bwd": [[145, "index-33"]], "dnnl_eltwise_elu": [[145, "index-8"]], "dnnl_eltwise_elu_use_dst_for_bwd": [[145, "index-29"]], "dnnl_eltwise_exp": [[145, "index-16"]], "dnnl_eltwise_exp_use_dst_for_bwd": [[145, "index-32"]], "dnnl_eltwise_gelu_erf": [[145, "index-23"]], "dnnl_eltwise_gelu_tanh": [[145, "index-17"]], "dnnl_eltwise_hardsigmoid": [[145, "index-14"]], "dnnl_eltwise_hardswish": [[145, "index-26"]], "dnnl_eltwise_linear": [[145, "index-12"]], "dnnl_eltwise_log": [[145, "index-19"]], "dnnl_eltwise_logistic": [[145, "index-15"]], "dnnl_eltwise_logistic_use_dst_for_bwd": [[145, "index-31"]], "dnnl_eltwise_mish": [[145, "index-25"]], "dnnl_eltwise_pow": [[145, "index-22"]], "dnnl_eltwise_relu": [[145, "index-6"]], "dnnl_eltwise_relu_use_dst_for_bwd": [[145, "index-27"]], "dnnl_eltwise_round": [[145, "index-24"]], "dnnl_eltwise_soft_relu": [[145, "index-13"]], "dnnl_eltwise_sqrt": [[145, "index-11"]], "dnnl_eltwise_sqrt_use_dst_for_bwd": [[145, "index-30"]], "dnnl_eltwise_square": [[145, "index-9"]], "dnnl_eltwise_swish": [[145, "index-18"]], "dnnl_eltwise_tanh": [[145, "index-7"]], "dnnl_eltwise_tanh_use_dst_for_bwd": [[145, "index-28"]], "dnnl_lbr_augru": [[145, "index-44"]], "dnnl_lbr_gru": [[145, "index-42"]], "dnnl_lrn_across_channels": [[145, "index-37"]], "dnnl_lrn_within_channel": [[145, "index-38"]], "dnnl_pooling_avg_exclude_padding": [[145, "index-36"]], "dnnl_pooling_avg_include_padding": [[145, "index-35"]], "dnnl_pooling_max": [[145, "index-34"]], "dnnl_reduction_max": [[145, "index-59"]], "dnnl_reduction_mean": [[145, "index-63"]], "dnnl_reduction_min": [[145, "index-60"]], "dnnl_reduction_mul": [[145, "index-62"]], "dnnl_reduction_norm_lp_max": [[145, "index-64"]], "dnnl_reduction_norm_lp_power_p_max": [[145, "index-66"]], "dnnl_reduction_norm_lp_power_p_sum": [[145, "index-67"]], "dnnl_reduction_norm_lp_sum": [[145, "index-65"]], "dnnl_reduction_sum": [[145, "index-61"]], "dnnl_resampling_linear": [[145, "index-58"]], "dnnl_resampling_nearest": [[145, "index-57"]], "dnnl_softmax_accurate": [[145, "index-68"]], "dnnl_softmax_log": [[145, "index-69"]], "dnnl_vanilla_augru": [[145, "index-43"]], "dnnl_vanilla_gru": [[145, "index-41"]], "dnnl_vanilla_lstm": [[145, "index-40"]], "dnnl_vanilla_rnn": [[145, "index-39"]], "enum": [[145, "index-0"], [146, "index-0"], [147, "index-0"], [148, "index-0"], [149, "index-0"], [150, "index-0"], [151, "index-0"], [152, "index-0"], [153, "index-0"], [154, "index-0"], [155, "index-0"], [156, "index-0"], [157, "index-0"], [158, "index-0"], [159, "index-0"], [160, "index-0"], [161, "index-0"], [162, "index-0"], [163, "index-0"], [164, "index-0"], [165, "index-0"], [166, "index-0"], [167, "index-0"], [168, "index-0"], [169, "index-0"], [170, "index-0"], [171, "index-0"], [172, "index-0"], [173, "index-0"], [174, "index-0"], [175, "index-0"], [176, "index-0"], [177, "index-0"], [178, "index-0"], [179, "index-0"], [180, "index-0"], [181, "index-0"], [182, "index-0"], [183, "index-0"], [184, "index-0"], [185, "index-0"], [186, "index-0"], [187, "index-0"], [188, "index-0"], [189, "index-0"], [190, "index-0"], [191, "index-0"], [192, "index-0"], [193, "index-0"], [194, "index-0"]], "enumvalue": [[145, "index-1"], [145, "index-10"], [145, "index-11"], [145, "index-12"], [145, "index-13"], [145, "index-14"], [145, "index-15"], [145, "index-16"], [145, "index-17"], [145, "index-18"], [145, "index-19"], [145, "index-2"], [145, "index-20"], [145, "index-21"], [145, "index-22"], [145, "index-23"], [145, "index-24"], [145, "index-25"], [145, "index-26"], [145, "index-27"], [145, "index-28"], [145, "index-29"], [145, "index-3"], [145, "index-30"], [145, "index-31"], [145, "index-32"], [145, "index-33"], [145, "index-34"], [145, "index-35"], [145, "index-36"], [145, "index-37"], [145, "index-38"], [145, "index-39"], [145, "index-4"], [145, "index-40"], [145, "index-41"], [145, "index-42"], [145, "index-43"], [145, "index-44"], [145, "index-45"], [145, "index-46"], [145, "index-47"], [145, "index-48"], [145, "index-49"], [145, "index-5"], [145, "index-50"], [145, "index-51"], [145, "index-52"], [145, "index-53"], [145, "index-54"], [145, "index-55"], [145, "index-56"], [145, "index-57"], [145, "index-58"], [145, "index-59"], [145, "index-6"], [145, "index-60"], [145, "index-61"], [145, "index-62"], [145, "index-63"], [145, "index-64"], [145, "index-65"], [145, "index-66"], [145, "index-67"], [145, "index-68"], [145, "index-69"], [145, "index-7"], [145, "index-8"], [145, "index-9"], [146, "index-1"], [146, "index-10"], [146, "index-11"], [146, "index-12"], [146, "index-13"], [146, "index-14"], [146, "index-15"], [146, "index-16"], [146, "index-17"], [146, "index-18"], [146, "index-19"], [146, "index-2"], [146, "index-20"], [146, "index-21"], [146, "index-22"], [146, "index-23"], [146, "index-24"], [146, "index-25"], [146, "index-26"], [146, "index-27"], [146, "index-28"], [146, "index-29"], [146, "index-3"], [146, "index-30"], [146, "index-31"], [146, "index-32"], [146, "index-33"], [146, "index-34"], [146, "index-35"], [146, "index-36"], [146, "index-37"], [146, "index-38"], [146, "index-39"], [146, "index-4"], [146, "index-40"], [146, "index-41"], [146, "index-42"], [146, "index-43"], [146, "index-44"], [146, "index-45"], [146, "index-46"], [146, "index-47"], [146, "index-48"], [146, "index-49"], [146, "index-5"], [146, "index-50"], [146, "index-51"], [146, "index-52"], [146, "index-53"], [146, "index-54"], [146, "index-55"], [146, "index-56"], [146, "index-57"], [146, "index-58"], [146, "index-59"], [146, "index-6"], [146, "index-60"], [146, "index-61"], [146, "index-62"], [146, "index-63"], [146, "index-64"], [146, "index-65"], [146, "index-66"], [146, "index-67"], [146, "index-68"], [146, "index-69"], [146, "index-7"], [146, "index-70"], [146, "index-8"], [146, "index-9"], [147, "index-1"], [147, "index-10"], [147, "index-11"], [147, "index-12"], [147, "index-2"], [147, "index-3"], [147, "index-4"], [147, "index-5"], [147, "index-6"], [147, "index-7"], [147, "index-8"], [147, "index-9"], [148, "index-1"], [148, "index-2"], [149, "index-1"], [149, "index-2"], [150, "index-1"], [150, "index-10"], [150, "index-11"], [150, "index-12"], [150, "index-2"], [150, "index-3"], [150, "index-4"], [150, "index-5"], [150, "index-6"], [150, "index-7"], [150, "index-8"], [150, "index-9"], [151, "index-1"], [151, "index-2"], [151, "index-3"], [151, "index-4"], [151, "index-5"], [151, "index-6"], [151, "index-7"], [151, "index-8"], [151, "index-9"], [152, "index-1"], [152, "index-2"], [152, "index-3"], [153, "index-1"], [153, "index-2"], [153, "index-3"], [154, "index-1"], [154, "index-2"], [154, "index-3"], [154, "index-4"], [154, "index-5"], [155, "index-1"], [155, "index-10"], [155, "index-100"], [155, "index-101"], [155, "index-102"], [155, "index-103"], [155, "index-104"], [155, "index-105"], [155, "index-106"], [155, "index-107"], [155, "index-108"], [155, "index-109"], [155, "index-11"], [155, "index-110"], [155, "index-111"], [155, "index-112"], [155, "index-113"], [155, "index-114"], [155, "index-115"], [155, "index-116"], [155, "index-117"], [155, "index-118"], [155, "index-119"], [155, "index-12"], [155, "index-120"], [155, "index-121"], [155, "index-122"], [155, "index-123"], [155, "index-124"], [155, "index-125"], [155, "index-126"], [155, "index-127"], [155, "index-128"], [155, "index-129"], [155, "index-13"], [155, "index-130"], [155, "index-131"], [155, "index-132"], [155, "index-133"], [155, "index-134"], [155, "index-135"], [155, "index-136"], [155, "index-137"], [155, "index-138"], [155, "index-14"], [155, "index-15"], [155, "index-16"], [155, "index-17"], [155, "index-18"], [155, "index-19"], [155, "index-2"], [155, "index-20"], [155, "index-21"], [155, "index-22"], [155, "index-23"], [155, "index-24"], [155, "index-25"], [155, "index-26"], [155, "index-27"], [155, "index-28"], [155, "index-29"], [155, "index-3"], [155, "index-30"], [155, "index-31"], [155, "index-32"], [155, "index-33"], [155, "index-34"], [155, "index-35"], [155, "index-36"], [155, "index-37"], [155, "index-38"], [155, "index-39"], [155, "index-4"], [155, "index-40"], [155, "index-41"], [155, "index-42"], [155, "index-43"], [155, "index-44"], [155, "index-45"], [155, "index-46"], [155, "index-47"], [155, "index-48"], [155, "index-49"], [155, "index-5"], [155, "index-50"], [155, "index-51"], [155, "index-52"], [155, "index-53"], [155, "index-54"], [155, "index-55"], [155, "index-56"], [155, "index-57"], [155, "index-58"], [155, "index-59"], [155, "index-6"], [155, "index-60"], [155, "index-61"], [155, "index-62"], [155, "index-63"], [155, "index-64"], [155, "index-65"], [155, "index-66"], [155, "index-67"], [155, "index-68"], [155, "index-69"], [155, "index-7"], [155, "index-70"], [155, "index-71"], [155, "index-72"], [155, "index-73"], [155, "index-74"], [155, "index-75"], [155, "index-76"], [155, "index-77"], [155, "index-78"], [155, "index-79"], [155, "index-8"], [155, "index-80"], [155, "index-81"], [155, "index-82"], [155, "index-83"], [155, "index-84"], [155, "index-85"], [155, "index-86"], [155, "index-87"], [155, "index-88"], [155, "index-89"], [155, "index-9"], [155, "index-90"], [155, "index-91"], [155, "index-92"], [155, "index-93"], [155, "index-94"], [155, "index-95"], [155, "index-96"], [155, "index-97"], [155, "index-98"], [155, "index-99"], [156, "index-1"], [156, "index-2"], [156, "index-3"], [156, "index-4"], [156, "index-5"], [157, "index-1"], [157, "index-2"], [157, "index-3"], [157, "index-4"], [157, "index-5"], [158, "index-1"], [158, "index-2"], [158, "index-3"], [158, "index-4"], [159, "index-1"], [159, "index-2"], [159, "index-3"], [159, "index-4"], [159, "index-5"], [159, "index-6"], [160, "index-1"], [160, "index-2"], [160, "index-3"], [160, "index-4"], [161, "index-1"], [161, "index-2"], [161, "index-3"], [162, "index-1"], [162, "index-10"], [162, "index-11"], [162, "index-12"], [162, "index-13"], [162, "index-14"], [162, "index-15"], [162, "index-16"], [162, "index-17"], [162, "index-18"], [162, "index-19"], [162, "index-2"], [162, "index-20"], [162, "index-21"], [162, "index-22"], [162, "index-23"], [162, "index-24"], [162, "index-25"], [162, "index-26"], [162, "index-27"], [162, "index-28"], [162, "index-29"], [162, "index-3"], [162, "index-30"], [162, "index-31"], [162, "index-32"], [162, "index-33"], [162, "index-34"], [162, "index-35"], [162, "index-36"], [162, "index-37"], [162, "index-38"], [162, "index-39"], [162, "index-4"], [162, "index-40"], [162, "index-41"], [162, "index-42"], [162, "index-5"], [162, "index-6"], [162, "index-7"], [162, "index-8"], [162, "index-9"], [163, "index-1"], [163, "index-10"], [163, "index-11"], [163, "index-12"], [163, "index-13"], [163, "index-14"], [163, "index-15"], [163, "index-16"], [163, "index-17"], [163, "index-18"], [163, "index-19"], [163, "index-2"], [163, "index-20"], [163, "index-21"], [163, "index-22"], [163, "index-23"], [163, "index-24"], [163, "index-25"], [163, "index-26"], [163, "index-27"], [163, "index-28"], [163, "index-29"], [163, "index-3"], [163, "index-30"], [163, "index-31"], [163, "index-32"], [163, "index-33"], [163, "index-34"], [163, "index-35"], [163, "index-36"], [163, "index-37"], [163, "index-38"], [163, "index-39"], [163, "index-4"], [163, "index-40"], [163, "index-41"], [163, "index-42"], [163, "index-5"], [163, "index-6"], [163, "index-7"], [163, "index-8"], [163, "index-9"], [166, "index-1"], [166, "index-2"], [167, "index-1"], [167, "index-2"], [168, "index-1"], [168, "index-10"], [168, "index-11"], [168, "index-2"], [168, "index-3"], [168, "index-4"], [168, "index-5"], [168, "index-6"], [168, "index-7"], [168, "index-8"], [168, "index-9"], [169, "index-1"], [169, "index-2"], [169, "index-3"], [170, "index-1"], [170, "index-2"], [170, "index-3"], [170, "index-4"], [170, "index-5"], [170, "index-6"], [170, "index-7"], [171, "index-1"], [171, "index-2"], [171, "index-3"], [171, "index-4"], [172, "index-1"], [172, "index-10"], [172, "index-11"], [172, "index-12"], [172, "index-13"], [172, "index-14"], [172, "index-15"], [172, "index-16"], [172, "index-17"], [172, "index-18"], [172, "index-19"], [172, "index-2"], [172, "index-20"], [172, "index-21"], [172, "index-22"], [172, "index-23"], [172, "index-24"], [172, "index-25"], [172, "index-26"], [172, "index-27"], [172, "index-28"], [172, "index-29"], [172, "index-3"], [172, "index-30"], [172, "index-31"], [172, "index-32"], [172, "index-33"], [172, "index-34"], [172, "index-35"], [172, "index-36"], [172, "index-37"], [172, "index-38"], [172, "index-39"], [172, "index-4"], [172, "index-40"], [172, "index-41"], [172, "index-42"], [172, "index-43"], [172, "index-44"], [172, "index-45"], [172, "index-46"], [172, "index-47"], [172, "index-48"], [172, "index-49"], [172, "index-5"], [172, "index-50"], [172, "index-51"], [172, "index-52"], [172, "index-53"], [172, "index-54"], [172, "index-55"], [172, "index-56"], [172, "index-57"], [172, "index-58"], [172, "index-59"], [172, "index-6"], [172, "index-60"], [172, "index-61"], [172, "index-62"], [172, "index-63"], [172, "index-64"], [172, "index-65"], [172, "index-66"], [172, "index-67"], [172, "index-68"], [172, "index-69"], [172, "index-7"], [172, "index-70"], [172, "index-71"], [172, "index-72"], [172, "index-73"], [172, "index-74"], [172, "index-75"], [172, "index-76"], [172, "index-77"], [172, "index-78"], [172, "index-79"], [172, "index-8"], [172, "index-80"], [172, "index-81"], [172, "index-82"], [172, "index-83"], [172, "index-84"], [172, "index-85"], [172, "index-86"], [172, "index-87"], [172, "index-88"], [172, "index-89"], [172, "index-9"], [172, "index-90"], [172, "index-91"], [172, "index-92"], [172, "index-93"], [172, "index-94"], [172, "index-95"], [173, "index-1"], [173, "index-2"], [173, "index-3"], [173, "index-4"], [173, "index-5"], [173, "index-6"], [174, "index-1"], [174, "index-2"], [174, "index-3"], [174, "index-4"], [174, "index-5"], [174, "index-6"], [175, "index-1"], [175, "index-2"], [176, "index-1"], [176, "index-2"], [177, "index-1"], [177, "index-10"], [177, "index-11"], [177, "index-12"], [177, "index-13"], [177, "index-14"], [177, "index-15"], [177, "index-16"], [177, "index-17"], [177, "index-18"], [177, "index-19"], [177, "index-2"], [177, "index-20"], [177, "index-3"], [177, "index-4"], [177, "index-5"], [177, "index-6"], [177, "index-7"], [177, "index-8"], [177, "index-9"], [178, "index-1"], [178, "index-10"], [178, "index-11"], [178, "index-12"], [178, "index-13"], [178, "index-14"], [178, "index-15"], [178, "index-16"], [178, "index-17"], [178, "index-18"], [178, "index-19"], [178, "index-2"], [178, "index-20"], [178, "index-21"], [178, "index-22"], [178, "index-3"], [178, "index-4"], [178, "index-5"], [178, "index-6"], [178, "index-7"], [178, "index-8"], [178, "index-9"], [179, "index-1"], [179, "index-2"], [179, "index-3"], [179, "index-4"], [179, "index-5"], [179, "index-6"], [179, "index-7"], [179, "index-8"], [180, "index-1"], [180, "index-2"], [180, "index-3"], [180, "index-4"], [180, "index-5"], [180, "index-6"], [180, "index-7"], [180, "index-8"], [181, "index-1"], [181, "index-10"], [181, "index-11"], [181, "index-12"], [181, "index-13"], [181, "index-14"], [181, "index-15"], [181, "index-16"], [181, "index-17"], [181, "index-18"], [181, "index-19"], [181, "index-2"], [181, "index-20"], [181, "index-21"], [181, "index-22"], [181, "index-23"], [181, "index-24"], [181, "index-25"], [181, "index-26"], [181, "index-27"], [181, "index-28"], [181, "index-29"], [181, "index-3"], [181, "index-30"], [181, "index-31"], [181, "index-32"], [181, "index-33"], [181, "index-34"], [181, "index-35"], [181, "index-36"], [181, "index-37"], [181, "index-38"], [181, "index-39"], [181, "index-4"], [181, "index-40"], [181, "index-41"], [181, "index-42"], [181, "index-43"], [181, "index-44"], [181, "index-45"], [181, "index-46"], [181, "index-47"], [181, "index-48"], [181, "index-49"], [181, "index-5"], [181, "index-50"], [181, "index-51"], [181, "index-52"], [181, "index-6"], [181, "index-7"], [181, "index-8"], [181, "index-9"], [182, "index-1"], [182, "index-10"], [182, "index-11"], [182, "index-12"], [182, "index-13"], [182, "index-14"], [182, "index-15"], [182, "index-16"], [182, "index-17"], [182, "index-18"], [182, "index-19"], [182, "index-2"], [182, "index-20"], [182, "index-21"], [182, "index-22"], [182, "index-23"], [182, "index-24"], [182, "index-25"], [182, "index-26"], [182, "index-27"], [182, "index-28"], [182, "index-29"], [182, "index-3"], [182, "index-30"], [182, "index-31"], [182, "index-32"], [182, "index-33"], [182, "index-34"], [182, "index-35"], [182, "index-36"], [182, "index-37"], [182, "index-38"], [182, "index-39"], [182, "index-4"], [182, "index-40"], [182, "index-41"], [182, "index-42"], [182, "index-43"], [182, "index-44"], [182, "index-45"], [182, "index-46"], [182, "index-47"], [182, "index-48"], [182, "index-49"], [182, "index-5"], [182, "index-50"], [182, "index-51"], [182, "index-52"], [182, "index-53"], [182, "index-6"], [182, "index-7"], [182, "index-8"], [182, "index-9"], [183, "index-1"], [183, "index-2"], [183, "index-3"], [183, "index-4"], [183, "index-5"], [184, "index-1"], [184, "index-2"], [184, "index-3"], [184, "index-4"], [184, "index-5"], [185, "index-1"], [186, "index-1"], [187, "index-1"], [187, "index-2"], [188, "index-1"], [188, "index-2"], [189, "index-1"], [189, "index-2"], [189, "index-3"], [189, "index-4"], [189, "index-5"], [189, "index-6"], [189, "index-7"], [190, "index-1"], [190, "index-10"], [190, "index-11"], [190, "index-2"], [190, "index-3"], [190, "index-4"], [190, "index-5"], [190, "index-6"], [190, "index-7"], [190, "index-8"], [190, "index-9"], [191, "index-1"], [191, "index-2"], [191, "index-3"], [192, "index-1"], [192, "index-2"], [193, "index-1"], [193, "index-2"], [194, "index-1"], [194, "index-2"]], "algorithm": [[146, "index-0"]], "binary_add": [[146, "index-46"]], "binary_div": [[146, "index-50"]], "binary_eq": [[146, "index-56"]], "binary_ge": [[146, "index-52"]], "binary_gt": [[146, "index-53"]], "binary_le": [[146, "index-54"]], "binary_lt": [[146, "index-55"]], "binary_max": [[146, "index-48"]], "binary_min": [[146, "index-49"]], "binary_mul": [[146, "index-47"]], "binary_ne": [[146, "index-57"]], "binary_sub": [[146, "index-51"]], "convolution_auto": [[146, "index-2"]], "convolution_direct": [[146, "index-3"]], "convolution_winograd": [[146, "index-4"]], "deconvolution_direct": [[146, "index-5"]], "deconvolution_winograd": [[146, "index-6"]], "eltwise_abs": [[146, "index-11"]], "eltwise_clip": [[146, "index-22"]], "eltwise_clip_v2": [[146, "index-23"]], "eltwise_clip_v2_use_dst_for_bwd": [[146, "index-34"]], "eltwise_elu": [[146, "index-9"]], "eltwise_elu_use_dst_for_bwd": [[146, "index-30"]], "eltwise_exp": [[146, "index-18"]], "eltwise_exp_use_dst_for_bwd": [[146, "index-33"]], "eltwise_gelu_erf": [[146, "index-20"]], "eltwise_gelu_tanh": [[146, "index-19"]], "eltwise_hardsigmoid": [[146, "index-27"]], "eltwise_hardswish": [[146, "index-26"]], "eltwise_linear": [[146, "index-14"]], "eltwise_log": [[146, "index-21"]], "eltwise_logistic": [[146, "index-17"]], "eltwise_logistic_use_dst_for_bwd": [[146, "index-32"]], "eltwise_mish": [[146, "index-16"]], "eltwise_pow": [[146, "index-24"]], "eltwise_relu": [[146, "index-7"]], "eltwise_relu_use_dst_for_bwd": [[146, "index-28"]], "eltwise_round": [[146, "index-25"]], "eltwise_soft_relu": [[146, "index-15"]], "eltwise_sqrt": [[146, "index-12"]], "eltwise_sqrt_use_dst_for_bwd": [[146, "index-31"]], "eltwise_square": [[146, "index-10"]], "eltwise_swish": [[146, "index-13"]], "eltwise_tanh": [[146, "index-8"]], "eltwise_tanh_use_dst_for_bwd": [[146, "index-29"]], "lbr_augru": [[146, "index-45"]], "lbr_gru": [[146, "index-43"]], "lrn_across_channels": [[146, "index-35"]], "lrn_within_channel": [[146, "index-36"]], "pooling_avg_exclude_padding": [[146, "index-39"]], "pooling_avg_include_padding": [[146, "index-38"]], "pooling_max": [[146, "index-37"]], "reduction_max": [[146, "index-60"]], "reduction_mean": [[146, "index-64"]], "reduction_min": [[146, "index-61"]], "reduction_mul": [[146, "index-63"]], "reduction_norm_lp_max": [[146, "index-65"]], "reduction_norm_lp_power_p_max": [[146, "index-67"]], "reduction_norm_lp_power_p_sum": [[146, "index-68"]], "reduction_norm_lp_sum": [[146, "index-66"]], "reduction_sum": [[146, "index-62"]], "resampling_linear": [[146, "index-59"]], "resampling_nearest": [[146, "index-58"]], "softmax_accurate": [[146, "index-69"]], "softmax_log": [[146, "index-70"]], "undef": [[146, "index-1"], [160, "index-1"], [161, "index-1"], [162, "index-1"], [170, "index-1"], [171, "index-1"], [172, "index-1"], [177, "index-1"], [179, "index-1"], [181, "index-1"], [183, "index-1"], [185, "index-1"]], "vanilla_augru": [[146, "index-44"]], "vanilla_gru": [[146, "index-42"]], "vanilla_lstm": [[146, "index-41"]], "vanilla_rnn": [[146, "index-40"]], "avx": [[147, "index-3"]], "avx2": [[147, "index-4"]], "avx2_vnni": [[147, "index-5"]], "avx2_vnni_2": [[147, "index-6"]], "avx512_core": [[147, "index-7"]], "avx512_core_amx": [[147, "index-11"]], "avx512_core_amx_fp16": [[147, "index-12"]], "avx512_core_bf16": [[147, "index-9"]], "avx512_core_fp16": [[147, "index-10"]], "avx512_core_vnni": [[147, "index-8"]], "cpu_isa": [[147, "index-0"]], "isa_default": [[147, "index-1"]], "sse41": [[147, "index-2"]], "cpu_isa_hints": [[148, "index-0"]], "no_hints": [[148, "index-1"]], "prefer_ymm": [[148, "index-2"]], "dnnl_cpu_isa_hints_t": [[149, "index-0"]], "dnnl_cpu_isa_no_hints": [[149, "index-1"]], "dnnl_cpu_isa_prefer_ymm": [[149, "index-2"]], "dnnl_cpu_isa_avx": [[150, "index-3"]], "dnnl_cpu_isa_avx2": [[150, "index-4"]], "dnnl_cpu_isa_avx2_vnni": [[150, "index-5"]], "dnnl_cpu_isa_avx2_vnni_2": [[150, "index-6"]], "dnnl_cpu_isa_avx512_core": [[150, "index-7"]], "dnnl_cpu_isa_avx512_core_amx": [[150, "index-11"]], "dnnl_cpu_isa_avx512_core_amx_fp16": [[150, "index-12"]], "dnnl_cpu_isa_avx512_core_bf16": [[150, "index-9"]], "dnnl_cpu_isa_avx512_core_fp16": [[150, "index-10"]], "dnnl_cpu_isa_avx512_core_vnni": [[150, "index-8"]], "dnnl_cpu_isa_default": [[150, "index-1"]], "dnnl_cpu_isa_sse41": [[150, "index-2"]], "dnnl_cpu_isa_t": [[150, "index-0"]], "dnnl_bf16": [[151, "index-3"]], "dnnl_data_type_max": [[151, "index-9"]], "dnnl_data_type_t": [[151, "index-0"]], "dnnl_data_type_undef": [[151, "index-1"]], "dnnl_f16": [[151, "index-2"]], "dnnl_f32": [[151, "index-4"]], "dnnl_f64": [[151, "index-8"]], "dnnl_s32": [[151, "index-5"]], "dnnl_s8": [[151, "index-6"]], "dnnl_u8": [[151, "index-7"]], "any": [[152, "index-1"], [156, "index-5"], [160, "index-2"], [171, "index-2"], [172, "index-2"]], "cpu": [[152, "index-2"]], "gpu": [[152, "index-3"]], "kind": [[152, "index-0"], [164, "index-0"], [177, "index-0"], [446, "index-4"]], "dnnl_any_engine": [[153, "index-1"]], "dnnl_cpu": [[153, "index-2"]], "dnnl_engine_kind_t": [[153, "index-0"]], "dnnl_gpu": [[153, "index-3"]], "dnnl_blocked": [[154, "index-3"]], "dnnl_format_kind_any": [[154, "index-2"]], "dnnl_format_kind_max": [[154, "index-5"]], "dnnl_format_kind_opaque": [[154, "index-4"]], "dnnl_format_kind_t": [[154, "index-0"]], "dnnl_format_kind_undef": [[154, "index-1"]], "dnnl_abcd8b8a": [[155, "index-61"]], "dnnl_abcde2b8a4b": [[155, "index-64"]], "dnnl_abcde4b16a4b": [[155, "index-63"]], "dnnl_a": [[155, "index-3"]], "dnnl_abcd2b4c2b": [[155, "index-62"]], "dnnl_abcde2b4c2b": [[155, "index-69"]], "dnnl_abcdef2b4c2b": [[155, "index-72"]], "dnnl_abcdef2c8b4c": [[155, "index-71"]], "dnnl_abc16b": [[155, "index-53"]], "dnnl_abc32b": [[155, "index-54"]], "dnnl_abc4b": [[155, "index-55"]], "dnnl_abc8b": [[155, "index-56"]], "dnnl_abcd16b": [[155, "index-57"]], "dnnl_abcd32b": [[155, "index-58"]], "dnnl_abcd4b": [[155, "index-59"]], "dnnl_abcd8b": [[155, "index-60"]], "dnnl_abcde16b": [[155, "index-65"]], "dnnl_abcde32b": [[155, "index-66"]], "dnnl_abcde4b": [[155, "index-67"]], "dnnl_abcde8b": [[155, "index-68"]], "dnnl_abcdef16b": [[155, "index-70"]], "dnnl_abcdef4b": [[155, "index-73"]], "dnnl_ab": [[155, "index-4"]], "dnnl_abc": [[155, "index-5"]], "dnnl_abcd": [[155, "index-6"]], "dnnl_abcde": [[155, "index-7"]], "dnnl_abcdef": [[155, "index-8"]], "dnnl_abcdefg": [[155, "index-9"]], "dnnl_abcdefgh": [[155, "index-10"]], "dnnl_abcdefghi": [[155, "index-11"]], "dnnl_abcdefghij": [[155, "index-12"]], "dnnl_abcdefghijk": [[155, "index-13"]], "dnnl_abcdefghijkl": [[155, "index-14"]], "dnnl_abcdefghijlk": [[155, "index-52"]], "dnnl_abcdefghikj": [[155, "index-51"]], "dnnl_abcdefghji": [[155, "index-50"]], "dnnl_abcdefgih": [[155, "index-49"]], "dnnl_abcdefhg": [[155, "index-48"]], "dnnl_abcdegf": [[155, "index-47"]], "dnnl_abcdfe": [[155, "index-41"]], "dnnl_abced": [[155, "index-31"]], "dnnl_abdc": [[155, "index-21"]], "dnnl_abdec": [[155, "index-32"]], "dnnl_abdefc": [[155, "index-42"]], "dnnl_abdfce": [[155, "index-43"]], "dnnl_acb": [[155, "index-16"]], "dnnl_acbd": [[155, "index-22"]], "dnnl_acbde": [[155, "index-33"]], "dnnl_acbdef": [[155, "index-44"]], "dnnl_acdb": [[155, "index-23"]], "dnnl_acdeb": [[155, "index-34"]], "dnnl_adbc": [[155, "index-24"]], "dnnl_adcb": [[155, "index-25"]], "dnnl_adecb": [[155, "index-35"]], "dnnl_adefcb": [[155, "index-45"]], "dnnl_ba": [[155, "index-15"]], "dnnl_bac": [[155, "index-17"]], "dnnl_bacd": [[155, "index-26"]], "dnnl_bacde": [[155, "index-36"]], "dnnl_bca": [[155, "index-18"]], "dnnl_bcda": [[155, "index-27"]], "dnnl_bcdea": [[155, "index-37"]], "dnnl_cab": [[155, "index-19"]], "dnnl_cba": [[155, "index-20"]], "dnnl_cdab": [[155, "index-28"]], "dnnl_cdba": [[155, "index-29"]], "dnnl_cdeab": [[155, "index-38"]], "dnnl_cdeba": [[155, "index-39"]], "dnnl_chwn": [[155, "index-84"]], "dnnl_cn": [[155, "index-77"]], "dnnl_dcab": [[155, "index-30"]], "dnnl_decab": [[155, "index-40"]], "dnnl_defcab": [[155, "index-46"]], "dnnl_dhwigo": [[155, "index-116"]], "dnnl_dhwio": [[155, "index-102"]], "dnnl_dhwoi": [[155, "index-103"]], "dnnl_format_tag_any": [[155, "index-2"]], "dnnl_format_tag_last": [[155, "index-74"]], "dnnl_format_tag_t": [[155, "index-0"]], "dnnl_format_tag_undef": [[155, "index-1"]], "dnnl_giodhw": [[155, "index-115"]], "dnnl_giohw": [[155, "index-112"]], "dnnl_godhwi": [[155, "index-114"]], "dnnl_gohwi": [[155, "index-110"]], "dnnl_goidhw": [[155, "index-113"]], "dnnl_goihw": [[155, "index-109"]], "dnnl_goiw": [[155, "index-106"]], "dnnl_gowi": [[155, "index-107"]], "dnnl_hwigo": [[155, "index-111"]], "dnnl_hwio": [[155, "index-95"]], "dnnl_hwoi": [[155, "index-96"]], "dnnl_idhwo": [[155, "index-105"]], "dnnl_ihwo": [[155, "index-98"]], "dnnl_io": [[155, "index-88"]], "dnnl_iodhw": [[155, "index-101"]], "dnnl_iohw": [[155, "index-99"]], "dnnl_iwo": [[155, "index-93"]], "dnnl_ldoi32o": [[155, "index-125"]], "dnnl_ldgoi32o": [[155, "index-126"]], "dnnl_ldgo": [[155, "index-124"]], "dnnl_ldgoi": [[155, "index-121"]], "dnnl_ldigo": [[155, "index-120"]], "dnnl_ldio": [[155, "index-122"]], "dnnl_ldnc": [[155, "index-119"]], "dnnl_ldoi": [[155, "index-123"]], "dnnl_ncdhw16c": [[155, "index-128"]], "dnnl_ncdhw32c": [[155, "index-127"]], "dnnl_ncdhw4c": [[155, "index-129"]], "dnnl_ncdhw8c": [[155, "index-130"]], "dnnl_nchw16c": [[155, "index-132"]], "dnnl_nchw32c": [[155, "index-131"]], "dnnl_nchw4c": [[155, "index-133"]], "dnnl_nchw8c": [[155, "index-134"]], "dnnl_ncw16c": [[155, "index-136"]], "dnnl_ncw32c": [[155, "index-135"]], "dnnl_ncw4c": [[155, "index-137"]], "dnnl_ncw8c": [[155, "index-138"]], "dnnl_nc": [[155, "index-76"]], "dnnl_ncdhw": [[155, "index-85"]], "dnnl_nchw": [[155, "index-82"]], "dnnl_ncw": [[155, "index-80"]], "dnnl_ndhwc": [[155, "index-86"]], "dnnl_nhwc": [[155, "index-83"]], "dnnl_nt": [[155, "index-79"]], "dnnl_ntc": [[155, "index-118"]], "dnnl_nwc": [[155, "index-81"]], "dnnl_odhwi": [[155, "index-104"]], "dnnl_ohwi": [[155, "index-97"]], "dnnl_oi": [[155, "index-87"]], "dnnl_oidhw": [[155, "index-100"]], "dnnl_oihw": [[155, "index-94"]], "dnnl_oiw": [[155, "index-89"]], "dnnl_owi": [[155, "index-90"]], "dnnl_tn": [[155, "index-78"]], "dnnl_tnc": [[155, "index-117"]], "dnnl_wigo": [[155, "index-108"]], "dnnl_wio": [[155, "index-91"]], "dnnl_woi": [[155, "index-92"]], "dnnl_x": [[155, "index-75"]], "bf16": [[156, "index-2"], [159, "index-2"], [170, "index-3"]], "f16": [[156, "index-3"], [159, "index-1"], [170, "index-2"]], "fpmath_mode": [[156, "index-0"]], "strict": [[156, "index-1"]], "tf32": [[156, "index-4"]], "dnnl_fpmath_mode_any": [[157, "index-4"]], "dnnl_fpmath_mode_bf16": [[157, "index-2"]], "dnnl_fpmath_mode_f16": [[157, "index-3"]], "dnnl_fpmath_mode_strict": [[157, "index-1"]], "dnnl_fpmath_mode_t": [[157, "index-0"]], "dnnl_fpmath_mode_tf32": [[157, "index-5"]], "dnnl_graph_layout_type_any": [[158, "index-2"]], "dnnl_graph_layout_type_opaque": [[158, "index-4"]], "dnnl_graph_layout_type_strided": [[158, "index-3"]], "dnnl_graph_layout_type_t": [[158, "index-0"]], "dnnl_graph_layout_type_undef": [[158, "index-1"]], "data_type": [[159, "index-0"], [170, "index-0"], [181, "index-45"], [402, "index-4"]], "f32": [[159, "index-3"], [170, "index-4"]], "s32": [[159, "index-4"], [170, "index-5"]], "s8": [[159, "index-5"], [170, "index-6"]], "u8": [[159, "index-6"], [170, "index-7"]], "layout_type": [[160, "index-0"], [402, "index-6"]], "opaque": [[160, "index-4"], [171, "index-4"]], "strided": [[160, "index-3"]], "constant": [[161, "index-3"]], "property_type": [[161, "index-0"]], "variable": [[161, "index-2"], [400, "index-1"], [400, "index-2"], [401, "index-1"], [401, "index-2"], [402, "index-1"], [402, "index-2"], [402, "index-3"], [402, "index-4"], [402, "index-5"], [402, "index-6"], [402, "index-7"], [402, "index-8"], [479, "index-1"], [484, "index-1"], [484, "index-2"], [484, "index-3"], [484, "index-4"], [484, "index-5"], [484, "index-6"]], "alpha": [[162, "index-2"]], "attr": [[162, "index-0"]], "auto_broadcast": [[162, "index-35"]], "auto_pad": [[162, "index-36"]], "axes": [[162, "index-12"]], "axis": [[162, "index-9"]], "begin_norm_axis": [[162, "index-10"]], "beta": [[162, "index-3"]], "coordinate_transformation_mode": [[162, "index-37"]], "data_format": [[162, "index-38"]], "dilations": [[162, "index-13"], [181, "index-16"]], "dst_shape": [[162, "index-14"]], "epsilon": [[162, "index-4"]], "exclude_pad": [[162, "index-26"]], "groups": [[162, "index-11"]], "keep_dims": [[162, "index-27"]], "keep_stats": [[162, "index-28"]], "kernel": [[162, "index-15"], [181, "index-32"]], "max": [[162, "index-5"]], "min": [[162, "index-6"]], "mode": [[162, "index-39"]], "momentum": [[162, "index-7"]], "order": [[162, "index-16"]], "output_padding": [[162, "index-17"]], "pads_begin": [[162, "index-18"]], "pads_end": [[162, "index-19"]], "per_channel_broadcast": [[162, "index-29"]], "qtype": [[162, "index-40"]], "rounding_type": [[162, "index-41"]], "scales": [[162, "index-8"]], "shape": [[162, "index-20"]], "sizes": [[162, "index-21"]], "special_zero": [[162, "index-30"]], "src_shape": [[162, "index-22"]], "strides": [[162, "index-23"], [181, "index-15"], [402, "index-7"]], "transpose_a": [[162, "index-31"]], "transpose_b": [[162, "index-32"]], "use_affine": [[162, "index-33"]], "use_dst": [[162, "index-34"]], "weights_format": [[162, "index-42"]], "weights_shape": [[162, "index-24"]], "zps": [[162, "index-25"]], "dnnl_graph_op_attr_alpha": [[163, "index-2"]], "dnnl_graph_op_attr_auto_broadcast": [[163, "index-35"]], "dnnl_graph_op_attr_auto_pad": [[163, "index-36"]], "dnnl_graph_op_attr_axes": [[163, "index-12"]], "dnnl_graph_op_attr_axis": [[163, "index-9"]], "dnnl_graph_op_attr_begin_norm_axis": [[163, "index-10"]], "dnnl_graph_op_attr_beta": [[163, "index-3"]], "dnnl_graph_op_attr_coordinate_transformation_mode": [[163, "index-37"]], "dnnl_graph_op_attr_data_format": [[163, "index-38"]], "dnnl_graph_op_attr_dilations": [[163, "index-13"]], "dnnl_graph_op_attr_dst_shape": [[163, "index-14"]], "dnnl_graph_op_attr_epsilon": [[163, "index-4"]], "dnnl_graph_op_attr_exclude_pad": [[163, "index-26"]], "dnnl_graph_op_attr_groups": [[163, "index-11"]], "dnnl_graph_op_attr_keep_dims": [[163, "index-27"]], "dnnl_graph_op_attr_keep_stats": [[163, "index-28"]], "dnnl_graph_op_attr_kernel": [[163, "index-15"]], "dnnl_graph_op_attr_max": [[163, "index-5"]], "dnnl_graph_op_attr_min": [[163, "index-6"]], "dnnl_graph_op_attr_mode": [[163, "index-39"]], "dnnl_graph_op_attr_momentum": [[163, "index-7"]], "dnnl_graph_op_attr_order": [[163, "index-16"]], "dnnl_graph_op_attr_output_padding": [[163, "index-17"]], "dnnl_graph_op_attr_pads_begin": [[163, "index-18"]], "dnnl_graph_op_attr_pads_end": [[163, "index-19"]], "dnnl_graph_op_attr_per_channel_broadcast": [[163, "index-29"]], "dnnl_graph_op_attr_qtype": [[163, "index-40"]], "dnnl_graph_op_attr_rounding_type": [[163, "index-41"]], "dnnl_graph_op_attr_scales": [[163, "index-8"]], "dnnl_graph_op_attr_shape": [[163, "index-20"]], "dnnl_graph_op_attr_sizes": [[163, "index-21"]], "dnnl_graph_op_attr_special_zero": [[163, "index-30"]], "dnnl_graph_op_attr_src_shape": [[163, "index-22"]], "dnnl_graph_op_attr_strides": [[163, "index-23"]], "dnnl_graph_op_attr_t": [[163, "index-0"]], "dnnl_graph_op_attr_transpose_a": [[163, "index-31"]], "dnnl_graph_op_attr_transpose_b": [[163, "index-32"]], "dnnl_graph_op_attr_undef": [[163, "index-1"]], "dnnl_graph_op_attr_use_affine": [[163, "index-33"]], "dnnl_graph_op_attr_use_dst": [[163, "index-34"]], "dnnl_graph_op_attr_weights_format": [[163, "index-42"]], "dnnl_graph_op_attr_weights_shape": [[163, "index-24"]], "dnnl_graph_op_attr_zps": [[163, "index-25"]], "dnnl_graph_op_kind_t": [[165, "index-0"]], "debug": [[166, "index-2"]], "fusion": [[166, "index-1"]], "policy": [[166, "index-0"]], "dnnl_graph_partition_policy_debug": [[167, "index-2"]], "dnnl_graph_partition_policy_fusion": [[167, "index-1"]], "dnnl_graph_partition_policy_t": [[167, "index-0"]], "invalid_arguments": [[168, "index-3"], [189, "index-3"]], "invalid_data_type": [[168, "index-11"]], "invalid_graph": [[168, "index-8"]], "invalid_graph_op": [[168, "index-9"]], "invalid_shape": [[168, "index-10"]], "last_impl_reached": [[168, "index-5"], [189, "index-5"]], "not_required": [[168, "index-7"], [189, "index-7"]], "out_of_memory": [[168, "index-2"], [189, "index-2"]], "runtime_error": [[168, "index-6"], [189, "index-6"]], "status": [[168, "index-0"], [189, "index-0"], [286, "index-0"]], "success": [[168, "index-1"], [189, "index-1"]], "unimplemented": [[168, "index-4"], [189, "index-4"]], "dnnl_graph_tensor_property_constant": [[169, "index-3"]], "dnnl_graph_tensor_property_t": [[169, "index-0"]], "dnnl_graph_tensor_property_undef": [[169, "index-1"]], "dnnl_graph_tensor_property_variable": [[169, "index-2"]], "blocked": [[171, "index-3"]], "format_kind": [[171, "index-0"], [181, "index-49"]], "abcd8b8a": [[172, "index-95"]], "a": [[172, "index-3"]], "abcd8b": [[172, "index-94"]], "ab": [[172, "index-4"]], "abc": [[172, "index-6"]], "abcd": [[172, "index-11"]], "abcde": [[172, "index-20"]], "abcdef": [[172, "index-29"]], "abcdefg": [[172, "index-35"]], "abcdefgh": [[172, "index-37"]], "abcdefghi": [[172, "index-39"]], "abcdefghij": [[172, "index-41"]], "abcdefghijk": [[172, "index-43"]], "abcdefghijkl": [[172, "index-45"]], "abcdefghijlk": [[172, "index-46"]], "abcdefghikj": [[172, "index-44"]], "abcdefghji": [[172, "index-42"]], "abcdefgih": [[172, "index-40"]], "abcdefhg": [[172, "index-38"]], "abcdegf": [[172, "index-36"]], "abcdfe": [[172, "index-34"]], "abced": [[172, "index-28"]], "abdc": [[172, "index-12"]], "abdec": [[172, "index-21"]], "abdefc": [[172, "index-32"]], "abdfce": [[172, "index-30"]], "acb": [[172, "index-7"]], "acbd": [[172, "index-13"]], "acbde": [[172, "index-22"]], "acbdef": [[172, "index-31"]], "acdb": [[172, "index-14"]], "acdeb": [[172, "index-23"]], "adbc": [[172, "index-15"]], "ba": [[172, "index-5"]], "bac": [[172, "index-8"]], "bacd": [[172, "index-16"]], "bacde": [[172, "index-24"]], "bca": [[172, "index-9"]], "bcda": [[172, "index-17"]], "bcdea": [[172, "index-25"]], "cba": [[172, "index-10"]], "cdba": [[172, "index-18"]], "cdeba": [[172, "index-26"]], "chwn": [[172, "index-56"]], "cn": [[172, "index-49"]], "dcab": [[172, "index-19"]], "decab": [[172, "index-27"]], "defcab": [[172, "index-33"]], "dhwigo": [[172, "index-85"]], "dhwio": [[172, "index-71"]], "format_tag": [[172, "index-0"]], "giodhw": [[172, "index-83"]], "giohw": [[172, "index-81"]], "godhwi": [[172, "index-84"]], "gohwi": [[172, "index-78"]], "goidhw": [[172, "index-82"]], "goihw": [[172, "index-79"]], "goiw": [[172, "index-75"]], "gowi": [[172, "index-76"]], "hwigo": [[172, "index-80"]], "hwio": [[172, "index-66"]], "idhwo": [[172, "index-74"]], "ihwo": [[172, "index-68"]], "io": [[172, "index-60"]], "iodhw": [[172, "index-73"]], "iohw": [[172, "index-69"]], "iwo": [[172, "index-64"]], "ldgo": [[172, "index-93"]], "ldgoi": [[172, "index-90"]], "ldigo": [[172, "index-89"]], "ldio": [[172, "index-91"]], "ldnc": [[172, "index-88"]], "ldoi": [[172, "index-92"]], "nc": [[172, "index-48"]], "ncdhw": [[172, "index-57"]], "nchw": [[172, "index-54"]], "ncw": [[172, "index-52"]], "ndhwc": [[172, "index-58"]], "nhwc": [[172, "index-55"]], "nt": [[172, "index-51"]], "ntc": [[172, "index-87"]], "nwc": [[172, "index-53"]], "odhwi": [[172, "index-72"]], "ohwi": [[172, "index-67"]], "oi": [[172, "index-59"]], "oidhw": [[172, "index-70"]], "oihw": [[172, "index-65"]], "oiw": [[172, "index-61"]], "owi": [[172, "index-62"]], "tn": [[172, "index-50"]], "tnc": [[172, "index-86"]], "wigo": [[172, "index-77"]], "wio": [[172, "index-63"]], "x": [[172, "index-47"]], "fuse_norm_add_relu": [[173, "index-6"]], "fuse_norm_relu": [[173, "index-5"]], "none": [[173, "index-1"]], "normalization_flags": [[173, "index-0"]], "use_global_stats": [[173, "index-2"]], "use_scale": [[173, "index-3"]], "use_shift": [[173, "index-4"]], "dnnl_fuse_norm_add_relu": [[174, "index-6"]], "dnnl_fuse_norm_relu": [[174, "index-5"]], "dnnl_normalization_flags_none": [[174, "index-1"]], "dnnl_normalization_flags_t": [[174, "index-0"]], "dnnl_use_global_stats": [[174, "index-2"]], "dnnl_use_scale": [[174, "index-3"]], "dnnl_use_shift": [[174, "index-4"]], "buffer": [[175, "index-2"], [193, "index-2"]], "memory_kind": [[175, "index-0"], [193, "index-0"]], "usm": [[175, "index-1"], [193, "index-1"]], "dnnl_ocl_interop_buffer": [[176, "index-2"]], "dnnl_ocl_interop_memory_kind_t": [[176, "index-0"]], "dnnl_ocl_interop_usm": [[176, "index-1"]], "batch_normalization": [[177, "index-10"]], "deconvolution": [[177, "index-7"], [247, "index-0"]], "inner_product": [[177, "index-11"]], "layer_normalization": [[177, "index-20"]], "lrn": [[177, "index-9"], [254, "index-0"]], "dnnl_batch_normalization": [[178, "index-10"]], "dnnl_binary": [[178, "index-14"]], "dnnl_concat": [[178, "index-4"]], "dnnl_convolution": [[178, "index-6"]], "dnnl_deconvolution": [[178, "index-7"]], "dnnl_eltwise": [[178, "index-8"]], "dnnl_gemm": [[178, "index-13"]], "dnnl_inner_product": [[178, "index-11"]], "dnnl_layer_normalization": [[178, "index-21"]], "dnnl_lrn": [[178, "index-9"]], "dnnl_matmul": [[178, "index-15"]], "dnnl_pooling": [[178, "index-17"]], "dnnl_prelu": [[178, "index-19"]], "dnnl_primitive_kind_max": [[178, "index-22"]], "dnnl_primitive_kind_t": [[178, "index-0"]], "dnnl_reduction": [[178, "index-18"]], "dnnl_reorder": [[178, "index-2"]], "dnnl_resampling": [[178, "index-16"]], "dnnl_rnn": [[178, "index-12"]], "dnnl_shuffle": [[178, "index-3"]], "dnnl_softmax": [[178, "index-20"]], "dnnl_sum": [[178, "index-5"]], "dnnl_undefined_primitive": [[178, "index-1"]], "backward": [[179, "index-5"]], "backward_bias": [[179, "index-8"]], "backward_data": [[179, "index-6"]], "backward_weights": [[179, "index-7"]], "forward": [[179, "index-4"]], "forward_inference": [[179, "index-3"]], "forward_training": [[179, "index-2"]], "prop_kind": [[179, "index-0"], [181, "index-12"]], "dnnl_backward": [[180, "index-5"]], "dnnl_backward_bias": [[180, "index-8"]], "dnnl_backward_data": [[180, "index-6"]], "dnnl_backward_weights": [[180, "index-7"]], "dnnl_forward": [[180, "index-4"]], "dnnl_forward_inference": [[180, "index-3"]], "dnnl_forward_training": [[180, "index-2"]], "dnnl_prop_kind_t": [[180, "index-0"]], "dnnl_prop_kind_undef": [[180, "index-1"]], "activation_kind": [[181, "index-31"]], "alg_kind": [[181, "index-21"]], "alpha_f32": [[181, "index-22"]], "axis_s32": [[181, "index-24"]], "beta_f32": [[181, "index-23"]], "cache_blob_id": [[181, "index-14"]], "cache_blob_id_size_s64": [[181, "index-13"]], "cell_kind": [[181, "index-29"]], "diff_dst_md": [[181, "index-39"]], "diff_src_md": [[181, "index-35"]], "diff_weights_md": [[181, "index-37"]], "direction": [[181, "index-30"]], "dst_md": [[181, "index-38"]], "engine": [[181, "index-2"], [249, "index-0"], [280, "index-0"], [398, "index-1"], [398, "index-2"]], "epsilon_f32": [[181, "index-19"]], "exec_arg_md": [[181, "index-42"]], "factors": [[181, "index-28"]], "flags": [[181, "index-20"], [191, "index-0"]], "group_size_s64": [[181, "index-33"]], "impl_info_str": [[181, "index-11"], [457, "index-2"]], "inner_blks": [[181, "index-51"]], "inner_idxs": [[181, "index-52"]], "inner_nblks_s32": [[181, "index-50"]], "k_f32": [[181, "index-26"]], "local_size_s64": [[181, "index-25"]], "memory_consumption_s64": [[181, "index-7"]], "ndims_s32": [[181, "index-43"]], "num_of_inputs_s32": [[181, "index-4"]], "num_of_outputs_s32": [[181, "index-5"]], "p_f32": [[181, "index-27"]], "padded_dims": [[181, "index-47"]], "padded_offsets": [[181, "index-48"]], "padding_l": [[181, "index-17"]], "padding_r": [[181, "index-18"]], "primitive_kind": [[181, "index-3"]], "query": [[181, "index-0"]], "reorder_dst_engine": [[181, "index-10"]], "reorder_src_engine": [[181, "index-9"]], "scratchpad_engine": [[181, "index-8"], [457, "index-39"]], "scratchpad_md": [[181, "index-41"]], "src_md": [[181, "index-34"]], "submemory_offset_s64": [[181, "index-46"]], "time_estimate_f64": [[181, "index-6"]], "weights_md": [[181, "index-36"]], "workspace_md": [[181, "index-40"]], "dnnl_query_activation_kind": [[182, "index-31"]], "dnnl_query_alg_kind": [[182, "index-21"]], "dnnl_query_alpha_f32": [[182, "index-22"]], "dnnl_query_axis_s32": [[182, "index-24"]], "dnnl_query_beta_f32": [[182, "index-23"]], "dnnl_query_cache_blob_id": [[182, "index-14"]], "dnnl_query_cache_blob_id_size_s64": [[182, "index-13"]], "dnnl_query_cell_kind": [[182, "index-29"]], "dnnl_query_data_type": [[182, "index-46"]], "dnnl_query_diff_dst_md": [[182, "index-40"]], "dnnl_query_diff_src_md": [[182, "index-36"]], "dnnl_query_diff_weights_md": [[182, "index-38"]], "dnnl_query_dilations": [[182, "index-16"]], "dnnl_query_dims": [[182, "index-45"]], "dnnl_query_direction": [[182, "index-30"]], "dnnl_query_dst_md": [[182, "index-39"]], "dnnl_query_engine": [[182, "index-2"]], "dnnl_query_epsilon_f32": [[182, "index-19"]], "dnnl_query_exec_arg_md": [[182, "index-43"]], "dnnl_query_factors": [[182, "index-28"]], "dnnl_query_flags": [[182, "index-20"]], "dnnl_query_format_kind": [[182, "index-50"]], "dnnl_query_group_size_s64": [[182, "index-33"]], "dnnl_query_impl_info_str": [[182, "index-9"]], "dnnl_query_inner_blks": [[182, "index-52"]], "dnnl_query_inner_idxs": [[182, "index-53"]], "dnnl_query_inner_nblks_s32": [[182, "index-51"]], "dnnl_query_k_f32": [[182, "index-26"]], "dnnl_query_kernel": [[182, "index-32"]], "dnnl_query_local_size_s64": [[182, "index-25"]], "dnnl_query_memory_consumption_s64": [[182, "index-7"]], "dnnl_query_ndims_s32": [[182, "index-44"]], "dnnl_query_num_of_inputs_s32": [[182, "index-4"]], "dnnl_query_num_of_outputs_s32": [[182, "index-5"]], "dnnl_query_p_f32": [[182, "index-27"]], "dnnl_query_padded_dims": [[182, "index-48"]], "dnnl_query_padded_offsets": [[182, "index-49"]], "dnnl_query_padding_l": [[182, "index-17"]], "dnnl_query_padding_r": [[182, "index-18"]], "dnnl_query_primitive_kind": [[182, "index-3"]], "dnnl_query_prop_kind": [[182, "index-12"]], "dnnl_query_reorder_dst_engine": [[182, "index-11"]], "dnnl_query_reorder_src_engine": [[182, "index-10"]], "dnnl_query_scratchpad_engine": [[182, "index-8"]], "dnnl_query_scratchpad_md": [[182, "index-42"]], "dnnl_query_some_md": [[182, "index-34"]], "dnnl_query_src_md": [[182, "index-35"]], "dnnl_query_strides": [[182, "index-15"]], "dnnl_query_submemory_offset_s64": [[182, "index-47"]], "dnnl_query_t": [[182, "index-0"]], "dnnl_query_time_estimate_f64": [[182, "index-6"]], "dnnl_query_undef": [[182, "index-1"]], "dnnl_query_weights_md": [[182, "index-37"]], "dnnl_query_workspace_md": [[182, "index-41"]], "bidirectional_concat": [[183, "index-4"]], "bidirectional_sum": [[183, "index-5"]], "rnn_direction": [[183, "index-0"]], "unidirectional_left2right": [[183, "index-2"]], "unidirectional_right2left": [[183, "index-3"]], "dnnl_bidirectional_concat": [[184, "index-4"]], "dnnl_bidirectional_sum": [[184, "index-5"]], "dnnl_rnn_direction_t": [[184, "index-0"]], "dnnl_rnn_direction_undef": [[184, "index-1"]], "dnnl_unidirectional_left2right": [[184, "index-2"]], "dnnl_unidirectional_right2left": [[184, "index-3"]], "rnn_flags": [[185, "index-0"]], "dnnl_rnn_flags_t": [[186, "index-0"]], "dnnl_rnn_flags_undef": [[186, "index-1"]], "library": [[187, "index-1"]], "scratchpad_mode": [[187, "index-0"]], "user": [[187, "index-2"]], "dnnl_scratchpad_mode_library": [[188, "index-1"]], "dnnl_scratchpad_mode_t": [[188, "index-0"]], "dnnl_scratchpad_mode_user": [[188, "index-2"]], "dnnl_invalid_arguments": [[190, "index-3"]], "dnnl_invalid_data_type": [[190, "index-11"]], "dnnl_invalid_graph": [[190, "index-8"]], "dnnl_invalid_graph_op": [[190, "index-9"]], "dnnl_invalid_shape": [[190, "index-10"]], "dnnl_last_impl_reached": [[190, "index-5"]], "dnnl_not_required": [[190, "index-7"]], "dnnl_out_of_memory": [[190, "index-2"]], "dnnl_runtime_error": [[190, "index-6"]], "dnnl_status_t": [[190, "index-0"]], "dnnl_success": [[190, "index-1"]], "dnnl_unimplemented": [[190, "index-4"]], "default_flags": [[191, "index-3"]], "in_order": [[191, "index-1"]], "out_of_order": [[191, "index-2"]], "dnnl_stream_default_flags": [[192, "index-2"]], "dnnl_stream_flags_t": [[192, "index-0"]], "dnnl_stream_out_of_order": [[192, "index-1"]], "dnnl_sycl_interop_buffer": [[194, "index-2"]], "dnnl_sycl_interop_memory_kind_t": [[194, "index-0"]], "dnnl_sycl_interop_usm": [[194, "index-1"]], "augru.cpp": [[195, "index-0"]], "example": [[195, "index-0"], [196, "index-0"], [197, "index-0"], [198, "index-0"], [199, "index-0"], [200, "index-0"], [201, "index-0"], [202, "index-0"], [203, "index-0"], [204, "index-0"], [205, "index-0"], [206, "index-0"], [207, "index-0"], [208, "index-0"], [209, "index-0"], [210, "index-0"], [211, "index-0"], [212, "index-0"], [213, "index-0"], [214, "index-0"], [215, "index-0"], [216, "index-0"], [217, "index-0"], [218, "index-0"], [219, "index-0"], [220, "index-0"], [221, "index-0"], [222, "index-0"], [223, "index-0"], [224, "index-0"], [225, "index-0"], [226, "index-0"], [227, "index-0"], [228, "index-0"], [229, "index-0"], [230, "index-0"], [231, "index-0"], [232, "index-0"], [233, "index-0"]], "batch_normalization.cpp": [[196, "index-0"]], "binary.cpp": [[197, "index-0"]], "bnorm_u8_via_binary_postops.cpp": [[198, "index-0"]], "cnn_inference_f32.c": [[199, "index-0"]], "cnn_inference_f32.cpp": [[200, "index-0"]], "cnn_inference_int8.cpp": [[201, "index-0"]], "cnn_training_bf16.cpp": [[202, "index-0"]], "cnn_training_f32.cpp": [[203, "index-0"]], "concat.cpp": [[204, "index-0"]], "convolution.cpp": [[205, "index-0"]], "cpu_cnn_training_f32.c": [[206, "index-0"]], "cpu_matmul_quantization.cpp": [[207, "index-0"]], "cpu_rnn_inference_f32.cpp": [[208, "index-0"]], "cpu_rnn_inference_int8.cpp": [[209, "index-0"]], "cpu_sgemm_and_matmul.cpp": [[210, "index-0"]], "cross_engine_reorder.c": [[211, "index-0"]], "cross_engine_reorder.cpp": [[212, "index-0"]], "eltwise.cpp": [[213, "index-0"]], "getting_started.cpp": [[214, "index-0"]], "gpu_opencl_interop.cpp": [[215, "index-0"]], "inference_int8_matmul.cpp": [[216, "index-0"]], "inner_product.cpp": [[217, "index-0"]], "layer_normalization.cpp": [[218, "index-0"]], "lrn.cpp": [[219, "index-0"]], "lstm.cpp": [[220, "index-0"]], "matmul.cpp": [[221, "index-0"]], "memory_format_propagation.cpp": [[222, "index-0"]], "performance_profiling.cpp": [[223, "index-0"]], "pooling.cpp": [[224, "index-0"]], "prelu.cpp": [[225, "index-0"]], "reduction.cpp": [[226, "index-0"]], "reorder.cpp": [[227, "index-0"]], "resampling.cpp": [[228, "index-0"]], "rnn_training_f32.cpp": [[229, "index-0"]], "shuffle.cpp": [[230, "index-0"]], "softmax.cpp": [[231, "index-0"]], "sum.cpp": [[232, "index-0"]], "sycl_interop_buffer.cpp": [[233, "index-0"]], "global": [[234, "index-0"]], "namespace": [[234, "index-0"], [292, "index-0"], [293, "index-0"], [294, "index-0"], [295, "index-0"], [296, "index-0"], [297, "index-0"], [298, "index-0"], [299, "index-0"], [300, "index-0"]], "group": [[238, "index-0"], [239, "index-0"], [240, "index-0"], [241, "index-0"], [242, "index-0"], [243, "index-0"], [244, "index-0"], [245, "index-0"], [246, "index-0"], [247, "index-0"], [248, "index-0"], [249, "index-0"], [250, "index-0"], [251, "index-0"], [252, "index-0"], [253, "index-0"], [254, "index-0"], [255, "index-0"], [256, "index-0"], [257, "index-0"], [258, "index-0"], [259, "index-0"], [260, "index-0"], [261, "index-0"], [262, "index-0"], [263, "index-0"], [264, "index-0"], [265, "index-0"], [266, "index-0"], [267, "index-0"], [268, "index-0"], [269, "index-0"], [270, "index-0"], [271, "index-0"], [272, "index-0"], [273, "index-0"], [274, "index-0"], [275, "index-0"], [276, "index-0"], [277, "index-0"], [278, "index-0"], [279, "index-0"], [280, "index-0"], [281, "index-0"], [282, "index-0"], [283, "index-0"], [284, "index-0"], [285, "index-0"], [286, "index-0"], [287, "index-0"], [288, "index-0"], [289, "index-0"]], "onednn api": [[238, "index-0"]], "attributes": [[239, "index-0"]], "const_dnnl_post_ops_t": [[239, "index-4"]], "const_dnnl_primitive_attr_t": [[239, "index-2"]], "convert_to_c": [[239, "index-5"], [239, "index-6"], [239, "index-7"], [249, "index-2"], [250, "index-1"], [262, "index-5"], [262, "index-6"], [262, "index-7"], [266, "index-1"], [266, "index-2"], [295, "index-1"], [296, "index-1"]], "dnnl_post_ops_append_binary": [[239, "index-30"]], "dnnl_post_ops_append_dw": [[239, "index-28"]], "dnnl_post_ops_append_eltwise": [[239, "index-26"]], "dnnl_post_ops_append_prelu": [[239, "index-32"]], "dnnl_post_ops_append_sum": [[239, "index-24"]], "dnnl_post_ops_clone": [[239, "index-20"]], "dnnl_post_ops_create": [[239, "index-19"]], "dnnl_post_ops_destroy": [[239, "index-21"]], "dnnl_post_ops_get_kind": [[239, "index-23"]], "dnnl_post_ops_get_params_binary": [[239, "index-31"]], "dnnl_post_ops_get_params_dw": [[239, "index-29"]], "dnnl_post_ops_get_params_eltwise": [[239, "index-27"]], "dnnl_post_ops_get_params_prelu": [[239, "index-33"]], "dnnl_post_ops_get_params_sum": [[239, "index-25"]], "dnnl_post_ops_len": [[239, "index-22"]], "dnnl_post_ops_t": [[239, "index-3"]], "dnnl_primitive_attr_clone": [[239, "index-9"]], "dnnl_primitive_attr_create": [[239, "index-8"]], "dnnl_primitive_attr_destroy": [[239, "index-10"]], "dnnl_primitive_attr_get_fpmath_mode": [[239, "index-11"]], "dnnl_primitive_attr_get_post_ops": [[239, "index-17"]], "dnnl_primitive_attr_get_rnn_data_qparams": [[239, "index-35"]], "dnnl_primitive_attr_get_rnn_weights_projection_qparams": [[239, "index-39"]], "dnnl_primitive_attr_get_rnn_weights_qparams": [[239, "index-37"]], "dnnl_primitive_attr_get_scratchpad_mode": [[239, "index-13"]], "dnnl_primitive_attr_set_fpmath_mode": [[239, "index-12"]], "dnnl_primitive_attr_set_post_ops": [[239, "index-18"]], "dnnl_primitive_attr_set_rnn_data_qparams": [[239, "index-34"]], "dnnl_primitive_attr_set_rnn_weights_projection_qparams": [[239, "index-38"]], "dnnl_primitive_attr_set_rnn_weights_qparams": [[239, "index-36"]], "dnnl_primitive_attr_set_scales_mask": [[239, "index-15"]], "dnnl_primitive_attr_set_scratchpad_mode": [[239, "index-14"]], "dnnl_primitive_attr_set_zero_points_mask": [[239, "index-16"]], "dnnl_primitive_attr_t": [[239, "index-1"]], "dnnl_batch_normalization_backward_primitive_desc_create": [[240, "index-2"]], "dnnl_batch_normalization_forward_primitive_desc_create": [[240, "index-1"]], "dnnl_binary_primitive_desc_create": [[241, "index-1"]], "blas functions": [[242, "index-0"]], "dnnl_gemm_s8s8s32": [[242, "index-6"]], "dnnl_gemm_u8s8s32": [[242, "index-5"]], "dnnl_sgemm": [[242, "index-4"]], "gemm_s8s8s32": [[242, "index-3"], [297, "index-5"]], "gemm_u8s8s32": [[242, "index-2"], [297, "index-4"]], "sgemm": [[242, "index-1"], [297, "index-3"]], "common api": [[243, "index-0"]], "dnnl_concat_primitive_desc_create": [[244, "index-1"]], "dnnl_convolution_backward_data_primitive_desc_create": [[245, "index-2"]], "dnnl_convolution_backward_weights_primitive_desc_create": [[245, "index-3"]], "dnnl_convolution_forward_primitive_desc_create": [[245, "index-1"]], "dnnl_max_ndims": [[246, "index-3"]], "define": [[246, "index-3"], [256, "index-24"], [256, "index-25"], [256, "index-26"], [256, "index-27"], [256, "index-28"], [256, "index-29"], [262, "index-21"], [262, "index-22"], [262, "index-23"], [262, "index-24"], [262, "index-25"], [262, "index-26"], [262, "index-27"], [262, "index-28"], [262, "index-29"], [262, "index-30"], [262, "index-31"], [262, "index-32"], [262, "index-33"], [262, "index-34"], [262, "index-35"], [262, "index-36"], [262, "index-37"], [262, "index-38"], [262, "index-39"], [262, "index-40"], [262, "index-41"], [262, "index-42"], [262, "index-43"], [262, "index-44"], [262, "index-45"], [262, "index-46"], [262, "index-47"], [262, "index-48"], [262, "index-49"], [262, "index-50"], [262, "index-51"], [262, "index-52"], [262, "index-53"], [262, "index-54"], [262, "index-55"], [262, "index-56"], [262, "index-57"], [262, "index-58"], [262, "index-59"], [262, "index-60"], [262, "index-61"], [262, "index-62"], [262, "index-63"], [262, "index-64"], [262, "index-65"], [262, "index-66"], [262, "index-67"], [262, "index-68"], [262, "index-69"], [262, "index-70"], [262, "index-71"], [262, "index-72"], [262, "index-73"], [262, "index-74"], [262, "index-75"], [262, "index-76"], [262, "index-77"], [262, "index-78"], [262, "index-79"], [262, "index-80"], [262, "index-81"], [262, "index-82"], [262, "index-83"], [262, "index-84"], [262, "index-85"], [262, "index-86"], [262, "index-87"], [262, "index-88"], [262, "index-89"], [262, "index-90"], [267, "index-22"], [267, "index-23"], [267, "index-24"], [267, "index-25"], [267, "index-26"], [267, "index-27"], [267, "index-28"], [267, "index-29"], [267, "index-30"], [267, "index-31"], [267, "index-32"], [267, "index-33"], [267, "index-34"], [267, "index-35"], [283, "index-6"], [283, "index-7"]], "dnnl_dim_t": [[246, "index-1"]], "dnnl_dims_t": [[246, "index-2"]], "dnnl_deconvolution_backward_data_primitive_desc_create": [[247, "index-2"]], "dnnl_deconvolution_backward_weights_primitive_desc_create": [[247, "index-3"]], "dnnl_deconvolution_forward_primitive_desc_create": [[247, "index-1"]], "dnnl_eltwise_backward_primitive_desc_create": [[248, "index-2"]], "dnnl_eltwise_forward_primitive_desc_create": [[248, "index-1"]], "dnnl_engine_create": [[249, "index-4"]], "dnnl_engine_destroy": [[249, "index-6"]], "dnnl_engine_get_count": [[249, "index-3"]], "dnnl_engine_get_kind": [[249, "index-5"]], "dnnl_engine_t": [[249, "index-1"]], "floating-point math mode": [[250, "index-0"]], "dnnl_get_default_fpmath_mode": [[250, "index-2"]], "dnnl_set_default_fpmath_mode": [[250, "index-3"]], "dnnl_inner_product_backward_data_primitive_desc_create": [[251, "index-2"]], "dnnl_inner_product_backward_weights_primitive_desc_create": [[251, "index-3"]], "dnnl_inner_product_forward_primitive_desc_create": [[251, "index-1"]], "runtime interoperability api": [[252, "index-0"], [282, "index-0"]], "dnnl_layer_normalization_backward_primitive_desc_create": [[253, "index-2"]], "dnnl_layer_normalization_forward_primitive_desc_create": [[253, "index-1"]], "dnnl_lrn_backward_primitive_desc_create": [[254, "index-2"]], "dnnl_lrn_forward_primitive_desc_create": [[254, "index-1"]], "dnnl_matmul_primitive_desc_create": [[255, "index-1"]], "dnnl_memory_allocate": [[256, "index-24"]], "dnnl_memory_none": [[256, "index-25"]], "dnnl_runtime_dim_val": [[256, "index-26"]], "dnnl_runtime_f32_val": [[256, "index-27"]], "dnnl_runtime_s32_val": [[256, "index-28"]], "dnnl_runtime_size_val": [[256, "index-29"]], "memory": [[256, "index-0"], [400, "index-2"], [438, "index-3"], [438, "index-4"], [438, "index-5"]], "const_dnnl_memory_desc_t": [[256, "index-2"]], "const_dnnl_memory_t": [[256, "index-4"]], "dnnl_data_type_size": [[256, "index-15"]], "dnnl_memory_create": [[256, "index-16"]], "dnnl_memory_desc_clone": [[256, "index-6"]], "dnnl_memory_desc_create_submemory": [[256, "index-9"]], "dnnl_memory_desc_create_with_strides": [[256, "index-7"]], "dnnl_memory_desc_create_with_tag": [[256, "index-8"]], "dnnl_memory_desc_destroy": [[256, "index-5"]], "dnnl_memory_desc_equal": [[256, "index-13"]], "dnnl_memory_desc_get_size": [[256, "index-14"]], "dnnl_memory_desc_permute_axes": [[256, "index-11"]], "dnnl_memory_desc_query": [[256, "index-12"]], "dnnl_memory_desc_reshape": [[256, "index-10"]], "dnnl_memory_desc_t": [[256, "index-1"]], "dnnl_memory_destroy": [[256, "index-23"]], "dnnl_memory_get_data_handle": [[256, "index-21"]], "dnnl_memory_get_engine": [[256, "index-18"]], "dnnl_memory_get_memory_desc": [[256, "index-17"]], "dnnl_memory_map_data": [[256, "index-19"]], "dnnl_memory_set_data_handle": [[256, "index-22"]], "dnnl_memory_t": [[256, "index-3"]], "dnnl_memory_unmap_data": [[256, "index-20"]], "opencl interoperability api": [[257, "index-0"]], "dnnl_ocl_interop_engine_create": [[257, "index-8"]], "dnnl_ocl_interop_engine_create_from_cache_blob": [[257, "index-7"]], "dnnl_ocl_interop_engine_get_cache_blob": [[257, "index-6"]], "dnnl_ocl_interop_engine_get_cache_blob_id": [[257, "index-5"]], "dnnl_ocl_interop_engine_get_context": [[257, "index-9"]], "dnnl_ocl_interop_get_device": [[257, "index-10"]], "dnnl_ocl_interop_memory_create": [[257, "index-1"]], "dnnl_ocl_interop_memory_get_mem_object": [[257, "index-3"]], "dnnl_ocl_interop_memory_get_memory_kind": [[257, "index-2"]], "dnnl_ocl_interop_memory_set_mem_object": [[257, "index-4"]], "dnnl_ocl_interop_stream_create": [[257, "index-11"]], "dnnl_ocl_interop_stream_get_command_queue": [[257, "index-12"]], "dnnl_pooling_backward_primitive_desc_create": [[258, "index-2"]], "dnnl_pooling_forward_primitive_desc_create": [[258, "index-1"]], "dnnl_prelu_backward_primitive_desc_create": [[259, "index-2"]], "dnnl_prelu_forward_primitive_desc_create": [[259, "index-1"]], "dnnl_get_primitive_cache_capacity": [[260, "index-3"]], "dnnl_set_primitive_cache_capacity": [[260, "index-4"]], "get_primitive_cache_capacity": [[260, "index-1"]], "set_primitive_cache_capacity": [[260, "index-2"]], "primitives": [[261, "index-0"]], "common": [[262, "index-0"]], "dnnl_arg_attr_multiple_post_op": [[262, "index-21"]], "dnnl_arg_attr_multiple_post_op_base": [[262, "index-22"]], "dnnl_arg_attr_output_scales": [[262, "index-23"]], "dnnl_arg_attr_post_op_dw": [[262, "index-24"]], "dnnl_arg_attr_scales": [[262, "index-25"]], "dnnl_arg_attr_zero_points": [[262, "index-26"]], "dnnl_arg_augru_attention": [[262, "index-27"]], "dnnl_arg_bias": [[262, "index-28"]], "dnnl_arg_diff_augru_attention": [[262, "index-29"]], "dnnl_arg_diff_bias": [[262, "index-30"]], "dnnl_arg_diff_dst": [[262, "index-31"]], "dnnl_arg_diff_dst_0": [[262, "index-32"]], "dnnl_arg_diff_dst_1": [[262, "index-33"]], "dnnl_arg_diff_dst_2": [[262, "index-34"]], "dnnl_arg_diff_dst_iter": [[262, "index-35"]], "dnnl_arg_diff_dst_iter_c": [[262, "index-36"]], "dnnl_arg_diff_dst_layer": [[262, "index-37"]], "dnnl_arg_diff_scale": [[262, "index-38"]], "dnnl_arg_diff_shift": [[262, "index-39"]], "dnnl_arg_diff_src": [[262, "index-40"]], "dnnl_arg_diff_src_0": [[262, "index-41"]], "dnnl_arg_diff_src_1": [[262, "index-42"]], "dnnl_arg_diff_src_2": [[262, "index-43"]], "dnnl_arg_diff_src_3": [[262, "index-44"]], "dnnl_arg_diff_src_iter": [[262, "index-45"]], "dnnl_arg_diff_src_iter_c": [[262, "index-46"]], "dnnl_arg_diff_src_layer": [[262, "index-47"]], "dnnl_arg_diff_weights": [[262, "index-48"]], "dnnl_arg_diff_weights_0": [[262, "index-49"]], "dnnl_arg_diff_weights_1": [[262, "index-50"]], "dnnl_arg_diff_weights_2": [[262, "index-51"]], "dnnl_arg_diff_weights_3": [[262, "index-52"]], "dnnl_arg_diff_weights_iter": [[262, "index-53"]], "dnnl_arg_diff_weights_layer": [[262, "index-54"]], "dnnl_arg_diff_weights_peephole": [[262, "index-55"]], "dnnl_arg_diff_weights_projection": [[262, "index-56"]], "dnnl_arg_dst": [[262, "index-57"]], "dnnl_arg_dst_0": [[262, "index-58"]], "dnnl_arg_dst_1": [[262, "index-59"]], "dnnl_arg_dst_2": [[262, "index-60"]], "dnnl_arg_dst_iter": [[262, "index-61"]], "dnnl_arg_dst_iter_c": [[262, "index-62"]], "dnnl_arg_dst_layer": [[262, "index-63"]], "dnnl_arg_from": [[262, "index-64"]], "dnnl_arg_mean": [[262, "index-65"]], "dnnl_arg_multiple_dst": [[262, "index-66"]], "dnnl_arg_multiple_src": [[262, "index-67"]], "dnnl_arg_scale": [[262, "index-68"]], "dnnl_arg_scratchpad": [[262, "index-69"]], "dnnl_arg_shift": [[262, "index-70"]], "dnnl_arg_src": [[262, "index-71"]], "dnnl_arg_src_0": [[262, "index-72"]], "dnnl_arg_src_1": [[262, "index-73"]], "dnnl_arg_src_2": [[262, "index-74"]], "dnnl_arg_src_3": [[262, "index-75"]], "dnnl_arg_src_iter": [[262, "index-76"]], "dnnl_arg_src_iter_c": [[262, "index-77"]], "dnnl_arg_src_layer": [[262, "index-78"]], "dnnl_arg_to": [[262, "index-79"]], "dnnl_arg_variance": [[262, "index-80"]], "dnnl_arg_weights": [[262, "index-81"]], "dnnl_arg_weights_0": [[262, "index-82"]], "dnnl_arg_weights_1": [[262, "index-83"]], "dnnl_arg_weights_2": [[262, "index-84"]], "dnnl_arg_weights_3": [[262, "index-85"]], "dnnl_arg_weights_iter": [[262, "index-86"]], "dnnl_arg_weights_layer": [[262, "index-87"]], "dnnl_arg_weights_peephole": [[262, "index-88"]], "dnnl_arg_weights_projection": [[262, "index-89"]], "dnnl_arg_workspace": [[262, "index-90"]], "const_dnnl_primitive_desc_t": [[262, "index-2"]], "const_dnnl_primitive_t": [[262, "index-4"]], "dnnl_primitive_create": [[262, "index-15"]], "dnnl_primitive_create_from_cache_blob": [[262, "index-16"]], "dnnl_primitive_desc_clone": [[262, "index-9"]], "dnnl_primitive_desc_destroy": [[262, "index-11"]], "dnnl_primitive_desc_get_attr": [[262, "index-10"]], "dnnl_primitive_desc_next_impl": [[262, "index-8"]], "dnnl_primitive_desc_query": [[262, "index-12"]], "dnnl_primitive_desc_query_md": [[262, "index-13"]], "dnnl_primitive_desc_query_s32": [[262, "index-14"]], "dnnl_primitive_desc_t": [[262, "index-1"]], "dnnl_primitive_destroy": [[262, "index-20"]], "dnnl_primitive_execute": [[262, "index-17"]], "dnnl_primitive_get_cache_blob": [[262, "index-19"]], "dnnl_primitive_get_primitive_desc": [[262, "index-18"]], "dnnl_primitive_t": [[262, "index-3"]], "dnnl_reduction_primitive_desc_create": [[263, "index-1"]], "dnnl_reorder_primitive_desc_create": [[264, "index-1"]], "dnnl_resampling_backward_primitive_desc_create": [[265, "index-2"]], "dnnl_resampling_forward_primitive_desc_create": [[265, "index-1"]], "dnnl_augru_backward_primitive_desc_create": [[266, "index-12"]], "dnnl_augru_forward_primitive_desc_create": [[266, "index-11"]], "dnnl_gru_backward_primitive_desc_create": [[266, "index-8"]], "dnnl_gru_forward_primitive_desc_create": [[266, "index-7"]], "dnnl_lbr_augru_backward_primitive_desc_create": [[266, "index-14"]], "dnnl_lbr_augru_forward_primitive_desc_create": [[266, "index-13"]], "dnnl_lbr_gru_backward_primitive_desc_create": [[266, "index-10"]], "dnnl_lbr_gru_forward_primitive_desc_create": [[266, "index-9"]], "dnnl_lstm_backward_primitive_desc_create": [[266, "index-6"]], "dnnl_lstm_forward_primitive_desc_create": [[266, "index-5"]], "dnnl_vanilla_rnn_backward_primitive_desc_create": [[266, "index-4"]], "dnnl_vanilla_rnn_forward_primitive_desc_create": [[266, "index-3"]], "dnnl_jit_profile_linux_jitdump": [[267, "index-22"]], "dnnl_jit_profile_linux_jitdump_use_tsc": [[267, "index-23"]], "dnnl_jit_profile_linux_perf": [[267, "index-24"]], "dnnl_jit_profile_linux_perfmap": [[267, "index-25"]], "dnnl_jit_profile_none": [[267, "index-26"]], "dnnl_jit_profile_vtune": [[267, "index-27"]], "dnnl_runtime_dpcpp": [[267, "index-28"]], "dnnl_runtime_none": [[267, "index-29"]], "dnnl_runtime_ocl": [[267, "index-30"]], "dnnl_runtime_omp": [[267, "index-31"]], "dnnl_runtime_seq": [[267, "index-32"]], "dnnl_runtime_sycl": [[267, "index-33"]], "dnnl_runtime_tbb": [[267, "index-34"]], "dnnl_runtime_threadpool": [[267, "index-35"]], "service": [[267, "index-0"]], "dnnl_get_cpu_isa_hints": [[267, "index-19"]], "dnnl_get_effective_cpu_isa": [[267, "index-17"]], "dnnl_set_cpu_isa_hints": [[267, "index-18"]], "dnnl_set_jit_dump": [[267, "index-13"]], "dnnl_set_jit_profiling_flags": [[267, "index-14"]], "dnnl_set_jit_profiling_jitdumpdir": [[267, "index-15"]], "dnnl_set_max_cpu_isa": [[267, "index-16"]], "dnnl_set_verbose": [[267, "index-20"]], "dnnl_version": [[267, "index-21"]], "get_cpu_isa_hints": [[267, "index-12"]], "get_default_fpmath_mode": [[267, "index-4"]], "get_effective_cpu_isa": [[267, "index-10"]], "set_cpu_isa_hints": [[267, "index-11"]], "set_default_fpmath_mode": [[267, "index-5"]], "set_jit_dump": [[267, "index-6"]], "set_jit_profiling_flags": [[267, "index-7"]], "set_jit_profiling_jitdumpdir": [[267, "index-8"]], "set_max_cpu_isa": [[267, "index-9"]], "set_verbose": [[267, "index-2"]], "version": [[267, "index-3"]], "version_t": [[267, "index-1"]], "dnnl_shuffle_backward_primitive_desc_create": [[268, "index-2"]], "dnnl_shuffle_forward_primitive_desc_create": [[268, "index-1"]], "dnnl_softmax_backward_primitive_desc_create": [[269, "index-2"]], "dnnl_softmax_forward_primitive_desc_create": [[269, "index-1"]], "stream": [[270, "index-0"], [476, "index-1"], [476, "index-2"]], "const_dnnl_stream_t": [[270, "index-2"]], "dnnl_stream_create": [[270, "index-3"]], "dnnl_stream_destroy": [[270, "index-6"]], "dnnl_stream_get_engine": [[270, "index-4"]], "dnnl_stream_t": [[270, "index-1"]], "dnnl_stream_wait": [[270, "index-5"]], "dnnl_sum_primitive_desc_create": [[271, "index-1"]], "sycl interoperability api": [[272, "index-0"], [287, "index-0"]], "dnnl_sycl_interop_engine_create": [[272, "index-1"]], "dnnl_sycl_interop_engine_get_context": [[272, "index-2"]], "dnnl_sycl_interop_engine_get_device": [[272, "index-3"]], "dnnl_sycl_interop_memory_create": [[272, "index-4"]], "dnnl_sycl_interop_memory_get_memory_kind": [[272, "index-5"]], "dnnl_sycl_interop_memory_set_buffer": [[272, "index-6"]], "dnnl_sycl_interop_primitive_execute": [[272, "index-9"]], "dnnl_sycl_interop_stream_create": [[272, "index-7"]], "dnnl_sycl_interop_stream_get_queue": [[272, "index-8"]], "threadpool interoperability api": [[273, "index-0"]], "dnnl_threadpool_interop_gemm_s8s8s32": [[273, "index-7"]], "dnnl_threadpool_interop_gemm_u8s8s32": [[273, "index-6"]], "dnnl_threadpool_interop_get_max_concurrency": [[273, "index-4"]], "dnnl_threadpool_interop_set_max_concurrency": [[273, "index-3"]], "dnnl_threadpool_interop_sgemm": [[273, "index-5"]], "dnnl_threadpool_interop_stream_create": [[273, "index-1"]], "dnnl_threadpool_interop_stream_get_threadpool": [[273, "index-2"]], "utilities": [[274, "index-0"], [289, "index-0"]], "graph api": [[275, "index-0"]], "const_dnnl_graph_allocator_t": [[276, "index-4"]], "dnnl_graph_allocator_create": [[276, "index-5"]], "dnnl_graph_allocator_destroy": [[276, "index-6"]], "dnnl_graph_allocator_t": [[276, "index-3"]], "dnnl_graph_host_allocate_f": [[276, "index-1"]], "dnnl_graph_host_deallocate_f": [[276, "index-2"]], "compiled partition": [[277, "index-0"]], "const_dnnl_graph_compiled_partition_t": [[277, "index-2"]], "dnnl_graph_compiled_partition_create": [[277, "index-3"]], "dnnl_graph_compiled_partition_destroy": [[277, "index-5"]], "dnnl_graph_compiled_partition_execute": [[277, "index-4"]], "dnnl_graph_compiled_partition_get_inplace_ports": [[277, "index-7"]], "dnnl_graph_compiled_partition_query_logical_tensor": [[277, "index-6"]], "dnnl_graph_compiled_partition_t": [[277, "index-1"]], "compiled partition cache": [[278, "index-0"]], "dnnl_graph_get_compiled_partition_cache_capacity": [[278, "index-3"]], "dnnl_graph_set_compiled_partition_cache_capacity": [[278, "index-4"]], "get_compiled_partition_cache_capacity": [[278, "index-1"]], "set_compiled_partition_cache_capacity": [[278, "index-2"]], "constant tensor cache": [[279, "index-0"]], "dnnl_graph_get_constant_tensor_cache": [[279, "index-4"]], "dnnl_graph_set_constant_tensor_cache": [[279, "index-3"]], "get_constant_tensor_cache": [[279, "index-2"]], "set_constant_tensor_cache": [[279, "index-1"]], "dnnl_graph_make_engine_with_allocator": [[280, "index-2"]], "make_engine_with_allocator": [[280, "index-1"]], "const_dnnl_graph_graph_t": [[281, "index-2"]], "dnnl_graph_add_op": [[281, "index-6"]], "dnnl_graph_graph_create": [[281, "index-3"]], "dnnl_graph_graph_create_with_fpmath_mode": [[281, "index-4"]], "dnnl_graph_graph_destroy": [[281, "index-5"]], "dnnl_graph_graph_filter": [[281, "index-9"]], "dnnl_graph_graph_finalize": [[281, "index-7"]], "dnnl_graph_graph_get_partition_num": [[281, "index-10"]], "dnnl_graph_graph_get_partitions": [[281, "index-11"]], "dnnl_graph_graph_is_finalized": [[281, "index-8"]], "dnnl_graph_graph_t": [[281, "index-1"]], "dnnl_graph_unknown_dim": [[283, "index-6"]], "dnnl_graph_unknown_ndims": [[283, "index-7"]], "logical tensor": [[283, "index-0"]], "dnnl_graph_logical_tensor_get_mem_size": [[283, "index-4"]], "dnnl_graph_logical_tensor_init": [[283, "index-1"]], "dnnl_graph_logical_tensor_init_with_dims": [[283, "index-2"]], "dnnl_graph_logical_tensor_init_with_strides": [[283, "index-3"]], "dnnl_graph_logical_tensor_is_equal": [[283, "index-5"]], "const_dnnl_graph_op_t": [[284, "index-2"]], "dnnl_graph_op_add_input": [[284, "index-5"]], "dnnl_graph_op_add_output": [[284, "index-6"]], "dnnl_graph_op_create": [[284, "index-3"]], "dnnl_graph_op_destroy": [[284, "index-4"]], "dnnl_graph_op_get_id": [[284, "index-11"]], "dnnl_graph_op_get_kind": [[284, "index-12"]], "dnnl_graph_op_set_attr_bool": [[284, "index-8"]], "dnnl_graph_op_set_attr_f32": [[284, "index-7"]], "dnnl_graph_op_set_attr_s64": [[284, "index-9"]], "dnnl_graph_op_set_attr_str": [[284, "index-10"]], "dnnl_graph_op_t": [[284, "index-1"]], "const_dnnl_graph_partition_t": [[285, "index-2"]], "dnnl_graph_partition_compile": [[285, "index-8"]], "dnnl_graph_partition_create_with_op": [[285, "index-3"]], "dnnl_graph_partition_destroy": [[285, "index-4"]], "dnnl_graph_partition_get_engine_kind": [[285, "index-14"]], "dnnl_graph_partition_get_id": [[285, "index-7"]], "dnnl_graph_partition_get_input_ports": [[285, "index-10"]], "dnnl_graph_partition_get_input_ports_num": [[285, "index-9"]], "dnnl_graph_partition_get_op_num": [[285, "index-5"]], "dnnl_graph_partition_get_ops": [[285, "index-6"]], "dnnl_graph_partition_get_output_ports": [[285, "index-12"]], "dnnl_graph_partition_get_output_ports_num": [[285, "index-11"]], "dnnl_graph_partition_is_supported": [[285, "index-13"]], "dnnl_graph_partition_t": [[285, "index-1"]], "dnnl_graph_sycl_allocate_f": [[287, "index-1"]], "dnnl_graph_sycl_deallocate_f": [[287, "index-2"]], "dnnl_graph_sycl_interop_allocator_create": [[287, "index-3"]], "dnnl_graph_sycl_interop_compiled_partition_execute": [[287, "index-5"]], "dnnl_graph_sycl_interop_make_engine_with_allocator": [[287, "index-4"]], "const_dnnl_graph_tensor_t": [[288, "index-2"]], "dnnl_graph_tensor_create": [[288, "index-3"]], "dnnl_graph_tensor_destroy": [[288, "index-4"]], "dnnl_graph_tensor_get_data_handle": [[288, "index-5"]], "dnnl_graph_tensor_get_engine": [[288, "index-7"]], "dnnl_graph_tensor_set_data_handle": [[288, "index-6"]], "dnnl_graph_tensor_t": [[288, "index-1"]], "dnnl": [[292, "index-0"]], "dnnl::graph": [[293, "index-0"]], "dnnl::graph::sycl_interop": [[294, "index-0"]], "make_allocator": [[294, "index-1"]], "dnnl::ocl_interop": [[295, "index-0"]], "get_command_queue": [[295, "index-9"]], "get_context": [[295, "index-6"], [296, "index-3"]], "get_device": [[295, "index-7"], [296, "index-4"]], "get_engine_cache_blob": [[295, "index-3"]], "get_engine_cache_blob_id": [[295, "index-2"]], "get_mem_object": [[295, "index-10"]], "get_memory_kind": [[295, "index-12"], [296, "index-9"]], "make_engine": [[295, "index-4"], [295, "index-5"], [296, "index-2"]], "make_memory": [[295, "index-13"], [295, "index-14"], [296, "index-10"], [296, "index-11"]], "make_stream": [[295, "index-8"], [296, "index-5"], [297, "index-1"]], "set_mem_object": [[295, "index-11"]], "dnnl::sycl_interop": [[296, "index-0"]], "get_buffer": [[296, "index-7"]], "get_queue": [[296, "index-6"]], "set_buffer": [[296, "index-8"]], "dnnl::threadpool_interop": [[297, "index-0"]], "get_threadpool": [[297, "index-2"]], "oneapi": [[298, "index-0"]], "std": [[299, "index-0"]], "sycl": [[300, "index-0"]], "augru rnn primitive example": [[302, "index-0"]], "batch normalization primitive example": [[304, "index-0"]], "binary primitive example": [[306, "index-0"]], "bnorm u8 by binary post-ops example": [[308, "index-0"]], "cnn f32 inference example": [[310, "index-0"], [311, "index-0"]], "cnn int8 inference example": [[312, "index-0"]], "cnn bf16 training example": [[313, "index-0"]], "cnn f32 training example": [[314, "index-0"], [319, "index-0"]], "concat primitive example": [[315, "index-0"]], "convolution primitive example": [[317, "index-0"]], "matmul tutorial: quantization": [[320, "index-0"]], "rnn f32 inference example": [[322, "index-0"]], "rnn int8 inference example": [[323, "index-0"]], "matmul tutorial: comparison with sgemm": [[324, "index-0"]], "reorder between cpu and gpu engines": [[326, "index-0"], [327, "index-0"]], "element-wise primitive example": [[328, "index-0"]], "getting started": [[330, "index-0"]], "getting started on gpu with opencl extensions api": [[331, "index-0"]], "matmul tutorial: int8 inference": [[332, "index-0"]], "inner product primitive example": [[334, "index-0"]], "layer normalization primitive example": [[336, "index-0"]], "legal information": [[338, "index-0"]], "local response normalization primitive example": [[339, "index-0"]], "lstm rnn primitive example": [[341, "index-0"]], "matmul primitive example": [[343, "index-0"]], "memory format propagation": [[345, "index-0"]], "performance profiling example": [[346, "index-0"]], "pooling primitive example": [[347, "index-0"]], "primitive example": [[349, "index-0"]], "reduction primitive example": [[351, "index-0"]], "reorder primitive example": [[353, "index-0"]], "resampling primitive example": [[355, "index-0"]], "rnn f32 training example": [[357, "index-0"]], "shuffle primitive example": [[358, "index-0"]], "softmax primitive example": [[360, "index-0"]], "sum primitive example": [[362, "index-0"]], "getting started on both cpu and gpu with sycl extensions api": [[364, "index-0"]], "todo list": [[365, "index-0"]], "args_t": [[368, "index-0"]], "struct": [[368, "index-0"], [369, "index-0"], [370, "index-0"], [371, "index-0"], [372, "index-0"], [373, "index-0"], [374, "index-0"], [375, "index-0"], [376, "index-0"], [377, "index-0"], [378, "index-0"], [379, "index-0"], [380, "index-0"], [381, "index-0"], [382, "index-0"], [383, "index-0"], [384, "index-0"], [385, "index-0"], [386, "index-0"], [387, "index-0"], [388, "index-0"], [389, "index-0"], [390, "index-0"], [391, "index-0"], [392, "index-0"], [393, "index-0"], [394, "index-0"], [395, "index-0"], [396, "index-0"], [397, "index-0"], [398, "index-0"], [399, "index-0"], [400, "index-0"], [401, "index-0"], [402, "index-0"], [403, "index-0"], [404, "index-0"], [405, "index-0"], [406, "index-0"], [407, "index-0"], [408, "index-0"], [409, "index-0"], [410, "index-0"], [411, "index-0"], [412, "index-0"], [413, "index-0"], [414, "index-0"], [415, "index-0"], [416, "index-0"], [417, "index-0"], [418, "index-0"], [419, "index-0"], [420, "index-0"], [421, "index-0"], [422, "index-0"], [423, "index-0"], [424, "index-0"], [425, "index-0"], [426, "index-0"], [427, "index-0"], [428, "index-0"], [429, "index-0"], [430, "index-0"], [431, "index-0"], [432, "index-0"], [433, "index-0"], [434, "index-0"], [435, "index-0"], [436, "index-0"], [437, "index-0"], [438, "index-0"], [439, "index-0"], [440, "index-0"], [441, "index-0"], [442, "index-0"], [443, "index-0"], [444, "index-0"], [445, "index-0"], [446, "index-0"], [447, "index-0"], [448, "index-0"], [449, "index-0"], [450, "index-0"], [451, "index-0"], [452, "index-0"], [453, "index-0"], [454, "index-0"], [455, "index-0"], [456, "index-0"], [457, "index-0"], [458, "index-0"], [459, "index-0"], [460, "index-0"], [461, "index-0"], [462, "index-0"], [463, "index-0"], [464, "index-0"], [465, "index-0"], [466, "index-0"], [467, "index-0"], [468, "index-0"], [469, "index-0"], [470, "index-0"], [471, "index-0"], [472, "index-0"], [473, "index-0"], [474, "index-0"], [475, "index-0"], [476, "index-0"], [477, "index-0"], [478, "index-0"], [479, "index-0"], [480, "index-0"], [481, "index-0"], [482, "index-0"], [483, "index-0"], [484, "index-0"], [485, "index-0"], [486, "index-0"]], "augru_backward": [[369, "index-1"], [369, "index-2"], [369, "index-3"]], "dnnl::augru_backward": [[369, "index-0"]], "attention_desc": [[370, "index-6"], [372, "index-6"], [420, "index-6"], [422, "index-6"]], "bias_desc": [[370, "index-9"], [372, "index-9"], [386, "index-10"], [392, "index-10"], [404, "index-8"], [406, "index-8"], [414, "index-8"], [420, "index-9"], [422, "index-9"], [424, "index-8"], [426, "index-8"], [432, "index-13"], [434, "index-13"], [436, "index-7"], [466, "index-11"], [481, "index-9"], [483, "index-9"]], "diff_attention_desc": [[370, "index-15"], [420, "index-15"]], "diff_bias_desc": [[370, "index-18"], [384, "index-10"], [390, "index-10"], [404, "index-16"], [412, "index-8"], [420, "index-18"], [424, "index-16"], [432, "index-25"], [466, "index-23"], [481, "index-17"]], "diff_dst_iter_desc": [[370, "index-20"], [404, "index-18"], [420, "index-20"], [424, "index-18"], [432, "index-27"], [466, "index-25"], [481, "index-19"]], "diff_dst_layer_desc": [[370, "index-19"], [404, "index-17"], [420, "index-19"], [424, "index-17"], [432, "index-26"], [466, "index-24"], [481, "index-18"]], "diff_src_iter_desc": [[370, "index-14"], [404, "index-13"], [420, "index-14"], [424, "index-13"], [432, "index-19"], [466, "index-17"], [481, "index-14"]], "diff_src_layer_desc": [[370, "index-13"], [404, "index-12"], [420, "index-13"], [424, "index-12"], [432, "index-18"], [466, "index-15"], [481, "index-13"]], "diff_weights_iter_desc": [[370, "index-17"], [404, "index-15"], [420, "index-17"], [424, "index-15"], [432, "index-22"], [466, "index-20"], [481, "index-16"]], "diff_weights_layer_desc": [[370, "index-16"], [404, "index-14"], [420, "index-16"], [424, "index-14"], [432, "index-21"], [466, "index-19"], [481, "index-15"]], "dnnl::augru_backward::primitive_desc": [[370, "index-0"]], "dst_iter_desc": [[370, "index-11"], [372, "index-11"], [404, "index-10"], [406, "index-10"], [420, "index-11"], [422, "index-11"], [424, "index-10"], [426, "index-10"], [432, "index-15"], [434, "index-15"], [466, "index-13"], [481, "index-11"], [483, "index-11"]], "dst_layer_desc": [[370, "index-10"], [372, "index-10"], [404, "index-9"], [406, "index-9"], [420, "index-10"], [422, "index-10"], [424, "index-9"], [426, "index-9"], [432, "index-14"], [434, "index-14"], [466, "index-12"], [481, "index-10"], [483, "index-10"]], "get_cell_kind": [[370, "index-21"], [372, "index-13"], [404, "index-19"], [406, "index-12"], [420, "index-21"], [422, "index-13"], [424, "index-19"], [426, "index-12"], [432, "index-29"], [434, "index-18"], [457, "index-18"], [481, "index-20"], [483, "index-13"]], "get_direction": [[370, "index-23"], [372, "index-15"], [404, "index-21"], [406, "index-14"], [420, "index-23"], [422, "index-15"], [424, "index-21"], [426, "index-14"], [432, "index-31"], [434, "index-20"], [457, "index-19"], [481, "index-23"], [483, "index-16"]], "get_prop_kind": [[370, "index-22"], [372, "index-14"], [374, "index-13"], [376, "index-10"], [382, "index-9"], [384, "index-12"], [386, "index-12"], [388, "index-9"], [390, "index-12"], [392, "index-12"], [394, "index-10"], [396, "index-9"], [404, "index-20"], [406, "index-13"], [410, "index-7"], [412, "index-9"], [414, "index-9"], [416, "index-14"], [418, "index-11"], [420, "index-22"], [422, "index-14"], [424, "index-20"], [426, "index-13"], [428, "index-8"], [430, "index-8"], [432, "index-30"], [434, "index-19"], [442, "index-8"], [444, "index-8"], [448, "index-7"], [450, "index-6"], [457, "index-23"], [468, "index-6"], [470, "index-6"], [472, "index-8"], [474, "index-7"], [481, "index-21"], [483, "index-14"]], "primitive_desc": [[370, "index-1"], [370, "index-2"], [370, "index-3"], [372, "index-1"], [372, "index-2"], [372, "index-3"], [374, "index-1"], [374, "index-2"], [374, "index-3"], [376, "index-1"], [376, "index-2"], [376, "index-3"], [378, "index-1"], [378, "index-2"], [378, "index-3"], [380, "index-1"], [380, "index-2"], [380, "index-3"], [380, "index-4"], [382, "index-1"], [382, "index-2"], [382, "index-3"], [382, "index-4"], [384, "index-1"], [384, "index-2"], [384, "index-3"], [384, "index-4"], [384, "index-5"], [384, "index-6"], [386, "index-1"], [386, "index-2"], [386, "index-3"], [386, "index-4"], [386, "index-5"], [386, "index-6"], [388, "index-1"], [388, "index-2"], [388, "index-3"], [388, "index-4"], [390, "index-1"], [390, "index-2"], [390, "index-3"], [390, "index-4"], [390, "index-5"], [390, "index-6"], [392, "index-1"], [392, "index-2"], [392, "index-3"], [392, "index-4"], [392, "index-5"], [392, "index-6"], [394, "index-1"], [394, "index-2"], [394, "index-3"], [394, "index-4"], [394, "index-5"], [396, "index-1"], [396, "index-2"], [396, "index-3"], [396, "index-4"], [396, "index-5"], [404, "index-1"], [404, "index-2"], [404, "index-3"], [406, "index-1"], [406, "index-2"], [406, "index-3"], [410, "index-1"], [410, "index-2"], [410, "index-3"], [412, "index-1"], [412, "index-2"], [412, "index-3"], [412, "index-4"], [414, "index-1"], [414, "index-2"], [414, "index-3"], [414, "index-4"], [416, "index-1"], [416, "index-2"], [416, "index-3"], [416, "index-4"], [418, "index-1"], [418, "index-2"], [418, "index-3"], [418, "index-4"], [420, "index-1"], [420, "index-2"], [420, "index-3"], [422, "index-1"], [422, "index-2"], [422, "index-3"], [424, "index-1"], [424, "index-2"], [424, "index-3"], [426, "index-1"], [426, "index-2"], [426, "index-3"], [428, "index-1"], [428, "index-2"], [428, "index-3"], [430, "index-1"], [430, "index-2"], [430, "index-3"], [432, "index-1"], [432, "index-2"], [432, "index-3"], [432, "index-4"], [432, "index-5"], [434, "index-1"], [434, "index-2"], [434, "index-3"], [434, "index-4"], [434, "index-5"], [436, "index-1"], [436, "index-2"], [436, "index-3"], [436, "index-4"], [442, "index-1"], [442, "index-2"], [442, "index-3"], [444, "index-1"], [444, "index-2"], [444, "index-3"], [448, "index-1"], [448, "index-2"], [448, "index-3"], [450, "index-1"], [450, "index-2"], [450, "index-3"], [459, "index-1"], [459, "index-2"], [459, "index-3"], [461, "index-1"], [461, "index-2"], [461, "index-3"], [461, "index-4"], [463, "index-1"], [463, "index-2"], [463, "index-3"], [463, "index-4"], [465, "index-1"], [465, "index-2"], [465, "index-3"], [465, "index-4"], [465, "index-5"], [468, "index-1"], [468, "index-2"], [468, "index-3"], [470, "index-1"], [470, "index-2"], [470, "index-3"], [472, "index-1"], [472, "index-2"], [472, "index-3"], [474, "index-1"], [474, "index-2"], [474, "index-3"], [478, "index-1"], [478, "index-2"], [478, "index-3"], [478, "index-4"], [481, "index-1"], [481, "index-2"], [481, "index-3"], [481, "index-4"], [483, "index-1"], [483, "index-2"], [483, "index-3"], [483, "index-4"]], "src_iter_desc": [[370, "index-5"], [372, "index-5"], [404, "index-5"], [406, "index-5"], [420, "index-5"], [422, "index-5"], [424, "index-5"], [426, "index-5"], [432, "index-7"], [434, "index-7"], [466, "index-5"], [481, "index-6"], [483, "index-6"]], "src_layer_desc": [[370, "index-4"], [372, "index-4"], [404, "index-4"], [406, "index-4"], [420, "index-4"], [422, "index-4"], [424, "index-4"], [426, "index-4"], [432, "index-6"], [434, "index-6"], [466, "index-3"], [481, "index-5"], [483, "index-5"]], "weights_iter_desc": [[370, "index-8"], [372, "index-8"], [404, "index-7"], [406, "index-7"], [420, "index-8"], [422, "index-8"], [424, "index-7"], [426, "index-7"], [432, "index-10"], [434, "index-10"], [466, "index-8"], [481, "index-8"], [483, "index-8"]], "weights_layer_desc": [[370, "index-7"], [372, "index-7"], [404, "index-6"], [406, "index-6"], [420, "index-7"], [422, "index-7"], [424, "index-6"], [426, "index-6"], [432, "index-9"], [434, "index-9"], [466, "index-7"], [481, "index-7"], [483, "index-7"]], "workspace_desc": [[370, "index-12"], [372, "index-12"], [374, "index-12"], [376, "index-7"], [404, "index-11"], [406, "index-11"], [416, "index-13"], [418, "index-8"], [420, "index-12"], [422, "index-12"], [424, "index-11"], [426, "index-11"], [428, "index-6"], [430, "index-6"], [432, "index-17"], [434, "index-17"], [442, "index-6"], [444, "index-6"], [457, "index-37"], [481, "index-12"], [483, "index-12"]], "augru_forward": [[371, "index-1"], [371, "index-2"], [371, "index-3"]], "dnnl::augru_forward": [[371, "index-0"]], "dnnl::augru_forward::primitive_desc": [[372, "index-0"]], "batch_normalization_backward": [[373, "index-1"], [373, "index-2"], [373, "index-3"]], "dnnl::batch_normalization_backward": [[373, "index-0"]], "diff_dst_desc": [[374, "index-8"], [382, "index-7"], [384, "index-9"], [388, "index-7"], [390, "index-9"], [394, "index-8"], [410, "index-6"], [412, "index-7"], [416, "index-9"], [428, "index-5"], [442, "index-5"], [448, "index-6"], [457, "index-29"], [457, "index-35"], [463, "index-6"], [468, "index-5"], [472, "index-6"]], "diff_src_desc": [[374, "index-7"], [382, "index-5"], [388, "index-5"], [394, "index-7"], [410, "index-4"], [416, "index-8"], [428, "index-4"], [442, "index-4"], [448, "index-5"], [457, "index-28"], [457, "index-34"], [463, "index-5"], [468, "index-4"], [472, "index-5"]], "diff_weights_desc": [[374, "index-9"], [384, "index-8"], [390, "index-8"], [412, "index-6"], [416, "index-10"], [457, "index-30"], [457, "index-36"]], "dnnl::batch_normalization_backward::primitive_desc": [[374, "index-0"]], "dst_desc": [[374, "index-6"], [376, "index-5"], [378, "index-7"], [380, "index-6"], [386, "index-9"], [392, "index-9"], [396, "index-7"], [414, "index-7"], [416, "index-7"], [418, "index-6"], [430, "index-5"], [436, "index-8"], [444, "index-5"], [450, "index-5"], [457, "index-26"], [457, "index-32"], [459, "index-5"], [461, "index-8"], [465, "index-7"], [470, "index-5"], [472, "index-4"], [474, "index-5"], [478, "index-6"]], "get_epsilon": [[374, "index-14"], [376, "index-11"], [416, "index-15"], [418, "index-12"], [457, "index-8"], [459, "index-7"]], "get_flags": [[374, "index-15"], [376, "index-12"], [416, "index-16"], [418, "index-13"], [457, "index-9"], [479, "index-5"]], "mean_desc": [[374, "index-10"], [376, "index-8"], [416, "index-11"], [418, "index-9"]], "src_desc": [[374, "index-4"], [376, "index-4"], [378, "index-4"], [380, "index-5"], [384, "index-7"], [386, "index-7"], [390, "index-7"], [392, "index-7"], [394, "index-6"], [396, "index-6"], [412, "index-5"], [414, "index-5"], [416, "index-5"], [418, "index-5"], [430, "index-4"], [436, "index-5"], [444, "index-4"], [448, "index-4"], [450, "index-4"], [457, "index-25"], [457, "index-31"], [459, "index-4"], [461, "index-7"], [465, "index-6"], [470, "index-4"], [474, "index-4"], [478, "index-5"]], "variance_desc": [[374, "index-11"], [376, "index-9"], [416, "index-12"], [418, "index-10"]], "weights_desc": [[374, "index-5"], [376, "index-6"], [382, "index-6"], [386, "index-8"], [388, "index-6"], [392, "index-8"], [410, "index-5"], [414, "index-6"], [416, "index-6"], [418, "index-7"], [436, "index-6"], [457, "index-27"], [457, "index-33"]], "batch_normalization_forward": [[375, "index-1"], [375, "index-2"], [375, "index-3"]], "dnnl::batch_normalization_forward": [[375, "index-0"]], "dnnl::batch_normalization_forward::primitive_desc": [[376, "index-0"]], "dnnl::binary": [[377, "index-0"]], "dnnl::binary::primitive_desc": [[378, "index-0"]], "get_algorithm": [[378, "index-8"], [382, "index-8"], [384, "index-11"], [386, "index-11"], [388, "index-8"], [390, "index-11"], [392, "index-11"], [394, "index-9"], [396, "index-8"], [428, "index-7"], [430, "index-7"], [442, "index-7"], [444, "index-7"], [457, "index-10"], [459, "index-8"], [472, "index-7"], [474, "index-6"]], "src0_desc": [[378, "index-5"]], "src1_desc": [[378, "index-6"]], "dnnl::concat": [[379, "index-0"]], "dnnl::concat::primitive_desc": [[380, "index-0"]], "primitive_desc_base": [[380, "index-10"], [380, "index-7"], [380, "index-8"], [380, "index-9"], [456, "index-2"], [456, "index-3"], [456, "index-4"], [456, "index-5"], [461, "index-10"], [461, "index-11"], [461, "index-12"], [461, "index-9"], [478, "index-10"], [478, "index-7"], [478, "index-8"], [478, "index-9"]], "convolution_backward_data": [[381, "index-1"], [381, "index-2"], [381, "index-3"]], "dnnl::convolution_backward_data": [[381, "index-0"]], "dnnl::convolution_backward_data::primitive_desc": [[382, "index-0"]], "get_dilations": [[382, "index-11"], [384, "index-14"], [386, "index-14"], [388, "index-11"], [390, "index-14"], [392, "index-14"], [442, "index-11"], [444, "index-11"], [457, "index-5"]], "get_padding_l": [[382, "index-12"], [384, "index-15"], [386, "index-15"], [388, "index-12"], [390, "index-15"], [392, "index-15"], [442, "index-12"], [444, "index-12"], [457, "index-6"]], "get_padding_r": [[382, "index-13"], [384, "index-16"], [386, "index-16"], [388, "index-13"], [390, "index-16"], [392, "index-16"], [442, "index-13"], [444, "index-13"], [457, "index-7"]], "convolution_backward_weights": [[383, "index-1"], [383, "index-2"], [383, "index-3"]], "dnnl::convolution_backward_weights": [[383, "index-0"]], "dnnl::convolution_backward_weights::primitive_desc": [[384, "index-0"]], "convolution_forward": [[385, "index-1"], [385, "index-2"], [385, "index-3"]], "dnnl::convolution_forward": [[385, "index-0"]], "dnnl::convolution_forward::primitive_desc": [[386, "index-0"]], "deconvolution_backward_data": [[387, "index-1"], [387, "index-2"], [387, "index-3"]], "dnnl::deconvolution_backward_data": [[387, "index-0"]], "dnnl::deconvolution_backward_data::primitive_desc": [[388, "index-0"]], "deconvolution_backward_weights": [[389, "index-1"], [389, "index-2"], [389, "index-3"]], "dnnl::deconvolution_backward_weights": [[389, "index-0"]], "dnnl::deconvolution_backward_weights::primitive_desc": [[390, "index-0"]], "deconvolution_forward": [[391, "index-1"], [391, "index-2"], [391, "index-3"]], "dnnl::deconvolution_forward": [[391, "index-0"]], "dnnl::deconvolution_forward::primitive_desc": [[392, "index-0"]], "dnnl::eltwise_backward": [[393, "index-0"]], "eltwise_backward": [[393, "index-1"], [393, "index-2"], [393, "index-3"]], "dnnl::eltwise_backward::primitive_desc": [[394, "index-0"]], "get_alpha": [[394, "index-11"], [396, "index-10"], [428, "index-9"], [430, "index-9"], [457, "index-11"], [481, "index-24"], [483, "index-17"]], "get_beta": [[394, "index-12"], [396, "index-11"], [428, "index-10"], [430, "index-10"], [457, "index-12"], [481, "index-25"], [483, "index-18"]], "dnnl::eltwise_forward": [[395, "index-0"]], "eltwise_forward": [[395, "index-1"], [395, "index-2"], [395, "index-3"]], "dnnl::eltwise_forward::primitive_desc": [[396, "index-0"]], "dnnl_engine": [[397, "index-0"]], "dnnl::engine": [[398, "index-0"]], "get_count": [[398, "index-8"]], "get_kind": [[398, "index-3"], [452, "index-7"], [457, "index-41"]], "handle": [[398, "index-4"], [398, "index-5"], [398, "index-6"], [398, "index-7"], [407, "index-1"], [407, "index-2"], [407, "index-3"], [407, "index-4"], [438, "index-14"], [438, "index-15"], [438, "index-16"], [438, "index-17"], [452, "index-10"], [452, "index-11"], [452, "index-12"], [452, "index-13"], [476, "index-5"], [476, "index-6"], [476, "index-7"], [476, "index-8"]], "dnnl::error": [[399, "index-0"]], "error": [[399, "index-1"]], "what": [[399, "index-2"]], "wrap_c_api": [[399, "index-3"]], "arg": [[400, "index-1"]], "dnnl_exec_arg_t": [[400, "index-0"]], "dnnl_graph_inplace_pair_t": [[401, "index-0"]], "input_id": [[401, "index-1"]], "output_id": [[401, "index-2"]], "dnnl_graph_logical_tensor_t": [[402, "index-0"]], "id": [[402, "index-1"]], "layout_id": [[402, "index-8"]], "ndims": [[402, "index-2"]], "property": [[402, "index-5"]], "dnnl::gru_backward": [[403, "index-0"]], "gru_backward": [[403, "index-1"], [403, "index-2"], [403, "index-3"]], "dnnl::gru_backward::primitive_desc": [[404, "index-0"]], "dnnl::gru_forward": [[405, "index-0"]], "gru_forward": [[405, "index-1"], [405, "index-2"], [405, "index-3"]], "dnnl::gru_forward::primitive_desc": [[406, "index-0"]], "dnnl::handle": [[407, "index-0"]], "get": [[407, "index-8"]], "operator t": [[407, "index-9"]], "operator bool": [[407, "index-10"]], "operator!=": [[407, "index-12"], [440, "index-22"]], "operator==": [[407, "index-11"], [440, "index-21"]], "reset": [[407, "index-7"]], "dnnl::handle_traits": [[408, "index-0"]], "dnnl::inner_product_backward_data": [[409, "index-0"]], "inner_product_backward_data": [[409, "index-1"], [409, "index-2"], [409, "index-3"]], "dnnl::inner_product_backward_data::primitive_desc": [[410, "index-0"]], "dnnl::inner_product_backward_weights": [[411, "index-0"]], "inner_product_backward_weights": [[411, "index-1"], [411, "index-2"], [411, "index-3"]], "dnnl::inner_product_backward_weights::primitive_desc": [[412, "index-0"]], "dnnl::inner_product_forward": [[413, "index-0"]], "inner_product_forward": [[413, "index-1"], [413, "index-2"], [413, "index-3"]], "dnnl::inner_product_forward::primitive_desc": [[414, "index-0"]], "dnnl::layer_normalization_backward": [[415, "index-0"]], "layer_normalization_backward": [[415, "index-1"], [415, "index-2"], [415, "index-3"]], "dnnl::layer_normalization_backward::primitive_desc": [[416, "index-0"]], "dnnl::layer_normalization_forward": [[417, "index-0"]], "layer_normalization_forward": [[417, "index-1"], [417, "index-2"], [417, "index-3"]], "dnnl::layer_normalization_forward::primitive_desc": [[418, "index-0"]], "dnnl::lbr_augru_backward": [[419, "index-0"]], "lbr_augru_backward": [[419, "index-1"], [419, "index-2"], [419, "index-3"]], "dnnl::lbr_augru_backward::primitive_desc": [[420, "index-0"]], "dnnl::lbr_augru_forward": [[421, "index-0"]], "lbr_augru_forward": [[421, "index-1"], [421, "index-2"], [421, "index-3"]], "dnnl::lbr_augru_forward::primitive_desc": [[422, "index-0"]], "dnnl::lbr_gru_backward": [[423, "index-0"]], "lbr_gru_backward": [[423, "index-1"], [423, "index-2"], [423, "index-3"]], "dnnl::lbr_gru_backward::primitive_desc": [[424, "index-0"]], "dnnl::lbr_gru_forward": [[425, "index-0"]], "lbr_gru_forward": [[425, "index-1"], [425, "index-2"], [425, "index-3"]], "dnnl::lbr_gru_forward::primitive_desc": [[426, "index-0"]], "dnnl::lrn_backward": [[427, "index-0"]], "lrn_backward": [[427, "index-1"], [427, "index-2"], [427, "index-3"]], "dnnl::lrn_backward::primitive_desc": [[428, "index-0"]], "get_k": [[428, "index-12"], [430, "index-12"], [457, "index-15"]], "get_local_size": [[428, "index-11"], [430, "index-11"], [457, "index-14"]], "dnnl::lrn_forward": [[429, "index-0"]], "lrn_forward": [[429, "index-1"], [429, "index-2"], [429, "index-3"]], "dnnl::lrn_forward::primitive_desc": [[430, "index-0"]], "dnnl::lstm_backward": [[431, "index-0"]], "lstm_backward": [[431, "index-1"], [431, "index-2"], [431, "index-3"]], "diff_dst_iter_c_desc": [[432, "index-28"], [466, "index-26"]], "diff_src_iter_c_desc": [[432, "index-20"], [466, "index-18"]], "diff_weights_peephole_desc": [[432, "index-23"], [466, "index-21"]], "diff_weights_projection_desc": [[432, "index-24"], [466, "index-22"]], "dnnl::lstm_backward::primitive_desc": [[432, "index-0"]], "dst_iter_c_desc": [[432, "index-16"], [434, "index-16"], [466, "index-14"]], "src_iter_c_desc": [[432, "index-8"], [434, "index-8"], [466, "index-6"]], "weights_peephole_desc": [[432, "index-11"], [434, "index-11"], [466, "index-9"]], "weights_projection_desc": [[432, "index-12"], [434, "index-12"], [466, "index-10"]], "dnnl::lstm_forward": [[433, "index-0"]], "lstm_forward": [[433, "index-1"], [433, "index-2"], [433, "index-3"]], "dnnl::lstm_forward::primitive_desc": [[434, "index-0"]], "dnnl::matmul": [[435, "index-0"]], "dnnl::matmul::primitive_desc": [[436, "index-0"]], "dnnl_memory": [[437, "index-0"]], "data_type_size": [[438, "index-7"]], "dnnl::memory": [[438, "index-0"]], "get_desc": [[438, "index-8"]], "map_data": [[438, "index-12"]], "unmap_data": [[438, "index-13"]], "validate_dims": [[438, "index-6"]], "dnnl_memory_desc": [[439, "index-0"]], "desc": [[440, "index-1"], [440, "index-2"], [440, "index-3"], [440, "index-4"]], "dnnl::memory::desc": [[440, "index-0"]], "get_format_kind": [[440, "index-16"]], "get_inner_blks": [[440, "index-14"]], "get_inner_idxs": [[440, "index-15"]], "get_inner_nblks": [[440, "index-13"]], "get_ndims": [[440, "index-8"]], "get_padded_dims": [[440, "index-9"]], "get_padded_offsets": [[440, "index-10"]], "get_size": [[440, "index-19"]], "get_submemory_offset": [[440, "index-11"]], "is_zero": [[440, "index-20"]], "permute_axes": [[440, "index-7"]], "reshape": [[440, "index-6"]], "submemory_desc": [[440, "index-5"]], "dnnl::pooling_backward": [[441, "index-0"]], "pooling_backward": [[441, "index-1"], [441, "index-2"], [441, "index-3"]], "dnnl::pooling_backward::primitive_desc": [[442, "index-0"]], "get_kernel": [[442, "index-10"], [444, "index-10"], [457, "index-21"]], "dnnl::pooling_forward": [[443, "index-0"]], "pooling_forward": [[443, "index-1"], [443, "index-2"], [443, "index-3"]], "dnnl::pooling_forward::primitive_desc": [[444, "index-0"]], "dnnl_post_ops": [[445, "index-0"]], "append_binary": [[446, "index-13"]], "append_dw": [[446, "index-11"]], "append_eltwise": [[446, "index-9"]], "append_prelu": [[446, "index-15"]], "append_sum": [[446, "index-5"]], "dnnl::post_ops": [[446, "index-0"]], "get_params_binary": [[446, "index-14"]], "get_params_dw": [[446, "index-12"]], "get_params_eltwise": [[446, "index-10"]], "get_params_prelu": [[446, "index-16"]], "get_params_sum": [[446, "index-6"], [446, "index-7"], [446, "index-8"]], "len": [[446, "index-3"]], "post_ops": [[446, "index-1"], [446, "index-2"]], "dnnl::prelu_backward": [[447, "index-0"]], "prelu_backward": [[447, "index-1"], [447, "index-2"], [447, "index-3"]], "dnnl::prelu_backward::primitive_desc": [[448, "index-0"]], "dnnl::prelu_forward": [[449, "index-0"]], "prelu_forward": [[449, "index-1"], [449, "index-2"], [449, "index-3"]], "dnnl::prelu_forward::primitive_desc": [[450, "index-0"]], "dnnl_primitive": [[451, "index-0"]], "dnnl::primitive": [[452, "index-0"]], "get_cache_blob": [[452, "index-8"]], "get_primitive_desc": [[452, "index-6"]], "primitive": [[452, "index-1"], [452, "index-2"], [452, "index-3"], [452, "index-4"], [452, "index-5"]], "dnnl_primitive_attr": [[453, "index-0"]], "dnnl::primitive_attr": [[454, "index-0"]], "get_fpmath_mode": [[454, "index-3"]], "get_post_ops": [[454, "index-9"]], "get_rnn_data_qparams": [[454, "index-12"]], "get_rnn_weights_projection_qparams": [[454, "index-16"]], "get_rnn_weights_qparams": [[454, "index-14"]], "get_scratchpad_mode": [[454, "index-5"]], "primitive_attr": [[454, "index-1"], [454, "index-2"]], "set_fpmath_mode": [[454, "index-4"]], "set_post_ops": [[454, "index-10"]], "set_rnn_data_qparams": [[454, "index-11"]], "set_rnn_weights_projection_qparams": [[454, "index-15"]], "set_rnn_weights_qparams": [[454, "index-13"]], "set_scales_mask": [[454, "index-7"]], "set_scratchpad_mode": [[454, "index-6"]], "set_zero_points_mask": [[454, "index-8"]], "dnnl_primitive_desc": [[455, "index-0"]], "dnnl::primitive_desc": [[456, "index-0"]], "next_impl": [[456, "index-1"]], "dnnl::primitive_desc_base": [[457, "index-0"]], "get_activation_kind": [[457, "index-20"], [481, "index-22"], [483, "index-15"]], "get_axis": [[457, "index-13"], [468, "index-7"], [470, "index-7"], [472, "index-9"], [474, "index-8"]], "get_cache_blob_id": [[457, "index-42"]], "get_factors": [[457, "index-17"]], "get_group_size": [[457, "index-22"], [468, "index-8"], [470, "index-8"]], "get_p": [[457, "index-16"], [459, "index-6"]], "get_primitive_attr": [[457, "index-40"]], "query_md": [[457, "index-24"]], "query_s64": [[457, "index-3"]], "scratchpad_desc": [[457, "index-38"]], "dnnl::reduction": [[458, "index-0"]], "dnnl::reduction::primitive_desc": [[459, "index-0"]], "dnnl::reorder": [[460, "index-0"]], "dnnl::reorder::primitive_desc": [[461, "index-0"]], "get_dst_engine": [[461, "index-6"]], "get_src_engine": [[461, "index-5"]], "dnnl::resampling_backward": [[462, "index-0"]], "resampling_backward": [[462, "index-1"], [462, "index-2"], [462, "index-3"]], "dnnl::resampling_backward::primitive_desc": [[463, "index-0"]], "dnnl::resampling_forward": [[464, "index-0"]], "resampling_forward": [[464, "index-1"], [464, "index-2"], [464, "index-3"]], "dnnl::resampling_forward::primitive_desc": [[465, "index-0"]], "augru_attention_desc": [[466, "index-4"]], "diff_augru_attention_desc": [[466, "index-16"]], "dnnl::rnn_primitive_desc_base": [[466, "index-0"]], "rnn_primitive_desc_base": [[466, "index-1"], [466, "index-2"]], "dnnl::shuffle_backward": [[467, "index-0"]], "shuffle_backward": [[467, "index-1"], [467, "index-2"], [467, "index-3"]], "dnnl::shuffle_backward::primitive_desc": [[468, "index-0"]], "dnnl::shuffle_forward": [[469, "index-0"]], "shuffle_forward": [[469, "index-1"], [469, "index-2"], [469, "index-3"]], "dnnl::shuffle_forward::primitive_desc": [[470, "index-0"]], "dnnl::softmax_backward": [[471, "index-0"]], "softmax_backward": [[471, "index-1"], [471, "index-2"], [471, "index-3"]], "dnnl::softmax_backward::primitive_desc": [[472, "index-0"]], "dnnl::softmax_forward": [[473, "index-0"]], "softmax_forward": [[473, "index-1"], [473, "index-2"], [473, "index-3"]], "dnnl::softmax_forward::primitive_desc": [[474, "index-0"]], "dnnl_stream": [[475, "index-0"]], "dnnl::stream": [[476, "index-0"]], "wait": [[476, "index-4"]], "dnnl::sum": [[477, "index-0"]], "dnnl::sum::primitive_desc": [[478, "index-0"]], "asynchronous": [[479, "index-1"]], "dnnl::threadpool_interop::threadpool_iface": [[479, "index-0"]], "get_in_parallel": [[479, "index-3"]], "get_num_threads": [[479, "index-2"]], "parallel_for": [[479, "index-4"]], "dnnl::vanilla_rnn_backward": [[480, "index-0"]], "vanilla_rnn_backward": [[480, "index-1"], [480, "index-2"], [480, "index-3"]], "dnnl::vanilla_rnn_backward::primitive_desc": [[481, "index-0"]], "dnnl::vanilla_rnn_forward": [[482, "index-0"]], "vanilla_rnn_forward": [[482, "index-1"], [482, "index-2"], [482, "index-3"]], "dnnl::vanilla_rnn_forward::primitive_desc": [[483, "index-0"]], "cpu_runtime": [[484, "index-5"]], "dnnl_version_t": [[484, "index-0"]], "gpu_runtime": [[484, "index-6"]], "hash": [[484, "index-4"]], "major": [[484, "index-1"]], "minor": [[484, "index-2"]], "patch": [[484, "index-3"]], "example_allows_unimplemented": [[485, "index-0"]], "gemm_dims_t": [[486, "index-0"]]}})